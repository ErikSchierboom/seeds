{"Nodes":[{"Key":" ","Fragments":["had","I","Replaced","Thanks","Thanks","Thanks","This","I'll","Introduced","Don't","trade","But","What","I","Introduced","1.","2.","I'm","I","I","It","In","Further","I","I","According","Why","The","I","Maybe","Looks","filter","zipping","Absolutely","There's","I","Cleanup","Never","I","At","I","*","*","Version","I","This","I","I'm","Looks","If","Not","Rather","```scala","(a.toList","case","}","```","There's","You","Length","Scala's","That","If","\"Write","@jay","Fixed","I'll","Extracted","Like","Btw","I","Just","\"The","And","```scala","def","strand","}","```","Using","Looks","I","I","The","I","I","In","Operations","`until,","Operations","`zip,","They","I'll","@susanna","I","Glad","I","It","This","First","There's","Don't","Good","Looks","Nice","I","How","You","Good","Some","Instead","Instead","There's","I","You","How","I","You're","Cool","One","Well","I","True.","Another","I","@amos","Also,","scalac","should","One","Sure","Ah,","Spot","I","Thank","Since","I","Renamed","`s1`","Since","Very","I","But","In","Nice.","I","If","Cool","This","With","I'd","Another","Clever,","The","How","Ok,","I","By","I","I","The","Yeah,","@jade","E.g.","Versus","Again,","I","But","If","Maybe","I'd","This","@eunice","Interesting","I","WRT","@amanda","Typically","@mervin","Hamming","@mervin","I","Also","Cool.","The","As","This","*","*","*","No","Given","Had","Is","It's","isShouting,","Very","You","I","Regardless,","Could","Also,","I","Thanks","Thanks,","Naming","I've","Very","You","@johan","Two","1.","2.","@kyleigh:","I'd","Looks","If","I'm","Thanks","Yep.","Only","Feels","Since","It","@lloyd","Thought","I","Creating","You","```","if","```","as","```","a","```","-","-","```scala","if(isShouting(speech))","else","else","else","```","Evaluating","-","-","Great","http://exercism.io/submissions/5fc73403874e167c38e130f3","Thank","Liked","You","http://exercism.io/submissions/a4a0d92759ca4f09edf950eb","Although","*","*","*","No","*","*","*","*","*","*","*","http://exercism.io/submissions/a97f69b045ef96e904d5f886","I","http://exercism.io/submissions/fdd484706519e1a989c99ce2","Looks","1.","2.","1.","2.","3.","You","`.count`","Use","If","I've","@jordan","I","It's","Please","What","와우","두가지","`match`문","`x","Looks","1.","2.","3.","1.","2.","3.","1.","2.","1.","2.","3.","1.","2.","3.","Looks","Looks","You're","I","Overhead","Thanks","Agreed,","1.","2.","3.","4.","5.","1.","2.","3.","You","1.","But","Oh","Trailing","Thanks","I","I","it","If","Thanks.","Also,","I","I","You","I","The","Strictly","Underscore","[1]","Thanks","There's","I'm","There","Looks","http://exercism.io/submissions/091568744bf00f6a5e692000","http://exercism.io/submissions/2cc88288722f6e7317388e7e","Good","Looks","The","I.e","Looks","Learned","1.","2.","You","Looks","1.","2.","3.","Looks","I","Would","I","Regex-fu.","No","Not","Thanks!","Yes,","Is","My","I","Personally","I'll","Did","Wondered","I","Figured","Using","I","I","`def","You","Ok,","The","The","number.take(3)","In","I'm","Not","The","The","The","As","Why","Neither","CamelCase","(Even","I","The","Both","Really","I","I","name","I","Changed","Thanks!","Looks","btw","afaik","@angeline","Decided","Used","The","Also","Thanks","@hattie","What","enter","This","@jena","In","Creative","I","*","e.g.","*","Changes","-","-","-","@jace","Kept","Thanks","Using","Discovered","Got","Rather","case","This","I'd","This","Scala","Note","The","As","As","Sorry","vars,","Even","Take","@alvena","Map","IMHO","def","Why","A","I","You","Keeping","You","Again,","Discovered","consd?","what","You","But","(dna1","or:","(dna1","It","That","I'll","difference","*","*","I","Please","I","You","To","```","(a","```","I'll","There's","Thanks.","Do","IIRC","In","I","This","return","Have","#asdasd","-","-","```","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","```","asdasd","Inspired","I","Still","I'd","not","My","But","Anyway:","you","I","If","Just","(","I'm","But","```","object","val","def","case","case","}","}","```","get","In","please","Just","Looking","You","I'd","I'm","Usage","You","I","In","Would","Not","In","statement.exists(","No","All","I","I'm","Scalas","count(p:","guess","just","My","But","There","```","case","def","}","```","and","```","class","hey(statement:String):String","case","case","}","}","```","Hi","A","2","1)","2)","Take","Looks","In","Thanks","Very","I'm","The","Line","Have","Consider","Nice","Nice","You","Does","Can","Can","Can","I","Random","I","Why","I","Cool,","It","You","First","You","And","With","Some","@brody","This","Have","You","This","You","1.","2.","1.","1.","2.","On","1.","2.","You","BTW,","I","Is","The","A","I'm","Thanks","You","Since","Validating","Space","The","Thank","Is","This","There's","You","@laury:","You","This","There","This","But,","for","Yes.","Given","The","It","```scala","val","```","This","you","Remove","The","The","Could","Also,","I","Already","My","Wow,","Folding","It","Avoid","You","I","I","What","I'm","This","Nice","The","...","It's","I","Thanks","try","filter","Pattern","Hi","I","I","I","Nice","I","The","A","Thanks","I","What","Hi","Perhaps","Using","To","This","I","I","Yes","i'd","Nice","I'd","Another","```scala","def","def","def","def","if","else","else","else","}","```","Thanks","The","I","I","I","simple","Nice","I","You","```object","implicit","}```","That","Nice","I","Super","Nice","For","Super","I","Hey!","My","firstDNAStrands.equals(secondDNAStrands)","which","for","I","Thanks.","Simplest","I","Hi","What","I","I","I","Awesome!","I","What","Instead","```","if","```","I","```","if","```","Also","First","I","Your","Your","A","This","The","I","Your","A","Did","I","I","Thanks","I'm","If","Don't","Unlike","This","if","\"Fine.","}","else","\"Woah,","}","else","\"Sure.\"","}","else","\"Whatever.\"","}","The","Trade","-","-","-","A","Scala's","The","I","Removed","I","Compiling","I","```scala","val","str","case","}","```","One","You","@mitchel","@mitchel-isaacs,","Using","Checkout","Take","`List.contains`","There's","For","In","There","Also,","The","This","FYI,","Couple","I","I","Nice,","```scala","greeting.trim","...","}","```","Then","I","```scala","private","m","```","I","Instead","Even","I","The","I","I","```scala","val","case","}","```","`Silence`","```scala","object","def","}","object","def","}","```","I","I","When","Looks","You","Instead","```scala","val","case","}","```","Looks","You","You","Good","I","By","```scala","(s1","```","Just","```scala","(s1","case","diff","}","```","It","I","You","```scala","phrase",".split(\"[^\\\\w']\")",".groupBy(_.toLowerCase)",".filterKeys(_.trim.nonEmpty)",".mapValues(_.size)","```","Instead","You","```scala","val","m","```","I","Clarification:","It","In","Colonel-sanders","Trying","case","but","Perhaps","Your","Why","If","I","Perhaps","Conversion","I","A","http://exercism.io/submissions/0147832e7ab4278ac0542eca","Since","There's","Also","private","works","I","The","Thanks","Thanks","Hum...","About","Compared","Compared","What","I","Also","You","Minor:","-","-","-","thanks","the","Turned","At","take","Kind","It","You","Nice","For","```scala","private","def","m","}","```","Though","Yes.","Consider","I","I","You","This","I'm","Having","Thanks","I","I","See","http://www.scala-lang.org/api/current/index.html#scala.collection.immutable.List@jacquelyn(p:A=\u003eBoolean):Int","It","This","For","def","Is","isEmpty","message.trim.isEmpty","This","I","Frankly,","I","Second","I've","I","Agreed,","I","You","Interesting!","I've","1.","2.","3.","The","Thanks,","I","I'd","````cmd.forall(","(c:Char)",")","````","with","````","to","Hey,","thanks","The","The","I","```scala","def","if","else","else","else","}","```","Remember","Another","Yes,","This","Take","I","```scala","strand1.zip(strand2).count","```","I","I","Good,","This","Might","I","Some","*","*","*","*","Gaston.","Some","To","Math.min(src.length,dest.length)","I",":+1:","I","Converted","Changed","I","This","I","This","I","1.","2.","This","This","Nice","Here","I","looks","If","Shouldn't","In","Thanks","Still","A","Tried","You","refactored","This","I've","Thanks","This","I've","Thanks","Your","But,","These","Just","Over","why","a","Your","This","I","-I'm","-I'm","I'm","This","I","I'm","You","Using","After","Thanks","Minor","Didn't","I","I","From","for","See","I've","Improved/simplified","I'm","Moving","Generating","I'd","I","This","MultiMaps","Thanks","```scala","def","val","val","head","}","```","Can","I","Rather","Finally,","I'd","I","Interesting","However,","I'd","Rather","I'd","I","I","I","Your","I'd","I'd","Also,","I'd","I","I'd","Interesting.","You","filter(_.toLowerCase.sorted","filter(_.toLowerCase","to","filter(x","\u0026\u0026","and","Nice","Interesting.","Are","candidates.filter(_.toLowerCase.sorted",".foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e","look","candidates.filter(w","w.toLowerCase.sorted","\u0026\u0026","Of","You","Rather","I","You","Nice,","Your","val","into","val",",","I'd","Thanks","One","I","Perhaps","Using","Take","Using","Also","Formatting","Very","I","However","There","One","Looks","Reworked","I","You","You","This","I'm","The","Also..","Hi,","I","Added","Your","One","The","`[^a-z0-9']+`","But","I","I","I'd","nice","I","My","I","Looks","```","def","```","Consider","you","`case","and","@kara","I","This","A","I","@mariane","The","Hmm,","It","I","This","```","\u003cconsole\u003e:13:","map","```","This","What","Would","You","This","I","what","Consider","This","I","This","I","It","Alternatively,","Instead","There","Other","@unique","My","That's","When","I've","Since","Nice","If","```","scala\u003e","\u003cconsole\u003e:9:","accumulate((_+1),","```","vs:","```","def","...","}","```","```","scala\u003e","res2:","```","Yes.","there","Looks","Instead","I","Significant","```","(candidateWord","```","The","Nice","I","NOTE:","Replace","In","In","Maybe","Thank","By","Is","You","Braces","I","I","This","I","This","I","1.","2.","This","I","Great","You","Rewrite","I","Really","Tiny","*","*","But","A","*","*","A","*","*","*","You","*","*","*","*","*","*","scala","\u003e","Yup,","no","the","```","require(str.forall(exp.contains(_)))","```","scala","Looks","@gisselle","This","Think","Nice.","Shouldn't","Yeah,","Look","Tail","Ignore","This","I","I","Looks","I","So","Looks","I","Really","A","*","*","[1]","This","I","@jefferey","I","Interesting","Minor","*","*","*","Out","This","*","*","*","Thanks!","Hmm,","*","*","*","@dustin","Thank","I","Please,","Thank's","Looks","This","*","*","*","Out","The","The","```","val","require","```","@madeline","Thank","Please,","True,","Thank","Changed","Hey,","Actually","Perhaps","Perhaps","Two","*","*","*","-Totally","*","-Haha,","*","-Thanks!!","*","-not","Thanks","Nicely","Good","You","Think","I","Also","Thanks","It's","with","that","and","makes","Thanks","Oh,","[1]","Really","*","*","c.isDigit","what's","nice.","You","I","Didn't","You","I","Thanks","First","I","Could","2nd","It","```","...","case","...","```","Also","Finally,","Nicely","mutable","The","```numberToRoman```","I","`val","can","`val","Also,","`raw.filter('0'","can","`raw.filter(_.isDigit)`","Changes:","-","-","-","-","foldLeft","The","Minor","Do","No"]},{"Key":" had","Fragments":["to"]},{"Key":"had to","Fragments":["learn","be","add","pass","pass","surround"]},{"Key":"to learn","Fragments":["some","Scala",":-)","about"]},{"Key":"learn some","Fragments":["scala"]},{"Key":" I","Fragments":["think","noticed","do","find","still","consider","think","vaguely","still","think","know","could","don't","also","think","don't","had","can","tried","simplified","have","don't","do","too","guess","actively","wouldn't","wouldn't","understand","think","should","personally","think","can't","*think*","think","think","would","modify","went","thought","have","like","couldn't","did","figured","get","would","also","would","see","really","was","would","think","find","prefer","wonder","copied","could,","don't","like","don't","could","like","feel","felt","think","really","think","aimed","think","like","think","had","definitely","think","like","think","wonder","think","think","also","would","think","think","think","would","would","would","have","tend","like","love","solved","don't","could","think","agree","feel","also","just","agree.","am","skipped","like","do","do","agree","like","was","feel","love","do","like","would","do","believe","think","realized","realized","broke","actually","should","prefer","think","wasn't","essentially","like","also","had","wanted","wanted","thought","would","have","like","was","got","like","tackled","don't","changed","think","prefered","think","see","could","don't","just","have","really","added","think","love","like","would","can't","have","am","used","like","think","haven't","think","wanted","thought","initially","think","am","am","need","think","tried","guess","refactored","think","believe","will","chose","know"]},{"Key":"I think","Fragments":["`val","it","you","you","your","you","is","if","that's","the","it's","it's","my","is","`isQuestion`","possibly","the","iteration","what","I","underscore_case","\"==\"","the","this","the","it's","I","it","count()","that","the","foldLeft","it","you","you","you","isUpperOrDigit","it","\"response\"","you","trailing","trailing","a","a","that","fitting","this","an","I","this","it","my","that","my","that","the","it","the","your","this","that","the","it","this","these","the","this","it","your","it's","it's","it","this","that","your","it"]},{"Key":"think `val","Fragments":["_db`"]},{"Key":"`val _db`","Fragments":["should"]},{"Key":"_db` should","Fragments":["be"]},{"Key":"should be","Fragments":["private.","some","a","the","more","expressed","up","spelled","ignored","classified","classified","able","relatively","moved","omitted","able","spelled","a"]},{"Key":" Replaced","Fragments":["word"]},{"Key":"Replaced word","Fragments":["=\u003e"]},{"Key":"word =\u003e","Fragments":["word"]},{"Key":"=\u003e word","Fragments":["with"]},{"Key":"word with","Fragments":["identity"]},{"Key":" Thanks","Fragments":["@doris,","for","for","so","@darrel!","@anna,","for","for","for","for","for","@ruthe.","@arielle,","for","for","@crystal","for","for","a","for","for","for","for","for","@asha","for","@elvis","for"]},{"Key":"Thanks @doris,","Fragments":["fixed!"]},{"Key":"Thanks for","Fragments":["your","the","the","the","the","the","the","the","the","taking","the","the","the","sharing","the","the","your","the","your","your","the","the","the","the","your","the"]},{"Key":"for your","Fragments":["feedback!","contribution","input","suggestion.","feedback.","feedback.","inner","`getkey`","filter","`matches`","comment!","comments!"]},{"Key":"your feedback!","Fragments":["I"]},{"Key":"feedback! I","Fragments":["agree"]},{"Key":"I agree","Fragments":["on","it's","with","that","that","that",":-)"]},{"Key":"agree on","Fragments":["all"]},{"Key":"on all","Fragments":["of"]},{"Key":"all of","Fragments":["your","them"]},{"Key":"of your","Fragments":["points","use","for","original","if","approach","conditional,","`isAnagram`","scoreWord"]},{"Key":"your points","Fragments":["and"]},{"Key":"points and","Fragments":["have"]},{"Key":"and have","Fragments":["submitted"]},{"Key":"have submitted","Fragments":["a"]},{"Key":"submitted a","Fragments":["2nd","new"]},{"Key":"a 2nd","Fragments":["iteration."]},{"Key":" This","Fragments":["code","is","looks","is","code","looks","is","will","was","looks","is","is","looks","solution","is","removes","is","looks","gets","whole","is","is","was","is","is","problem","version","version","solution","function","is","is","time","is","was","is","doesn't","doesn't","doesn't","is","version","question","looks","version","solution","exercise","one","answer","looks","looks"]},{"Key":"This code","Fragments":["satifies","is","will"]},{"Key":"code satifies","Fragments":["the"]},{"Key":"satifies the","Fragments":["tests."]},{"Key":"the tests.","Fragments":["But","But","They","I'm","I","So"]},{"Key":"tests. But","Fragments":["isn't","what"]},{"Key":"But isn't","Fragments":["not"]},{"Key":"isn't not","Fragments":["realy"]},{"Key":"not realy","Fragments":["expressive."]},{"Key":" I'll","Fragments":["need","try","submit","have","go","leave"]},{"Key":"I'll need","Fragments":["to"]},{"Key":"need to","Fragments":["introduce","know,","call","do","know","know","know","understand","make","translate","split","do","assign","define","define","call","exclude","allocate","use","be","be","be","get","contain","strip","clean","run","call","filter","triple","break","update","change","parse","move","check"]},{"Key":"to introduce","Fragments":["some"]},{"Key":"introduce some","Fragments":["code"]},{"Key":"some code","Fragments":["to"]},{"Key":"code to","Fragments":["describe","be","the","be","add","reflect","eliminate","make","calculate"]},{"Key":"to describe","Fragments":["the","the","patterns."]},{"Key":"describe the","Fragments":["conditions","prompt"]},{"Key":"the conditions","Fragments":["Bobs","with"]},{"Key":"conditions Bobs","Fragments":["responds"]},{"Key":"Bobs responds","Fragments":["to."]},{"Key":" Introduced","Fragments":["a","case"]},{"Key":"Introduced a","Fragments":["query"]},{"Key":"a query","Fragments":["class"]},{"Key":"query class","Fragments":["that"]},{"Key":"class that","Fragments":["has","has"]},{"Key":"that has","Fragments":["some","a"]},{"Key":"has some","Fragments":["descriptions"]},{"Key":"some descriptions","Fragments":["for"]},{"Key":"descriptions for","Fragments":["what"]},{"Key":"for what","Fragments":["Bob"]},{"Key":"what Bob","Fragments":["responds","is"]},{"Key":"Bob responds","Fragments":["to."]},{"Key":" Don't","Fragments":["realy","take","use"]},{"Key":"Don't realy","Fragments":["like"]},{"Key":"realy like","Fragments":["the","how"]},{"Key":"like the","Fragments":["new","inconsistency","use","use","hey-method.","Stream","functional","name","optimal","pattern","`NotLower`","simplicity","`object`","conciseness","ifs","use","conciseness"]},{"Key":"the new","Fragments":["Query(s)","value.","student.","instance","calendar."]},{"Key":"new Query(s)","Fragments":["part."]},{"Key":" trade","Fragments":["off."]},{"Key":"trade off.","Fragments":["The"]},{"Key":"off. The","Fragments":["methods"]},{"Key":"The methods","Fragments":["describe","that"]},{"Key":"methods describe","Fragments":["what"]},{"Key":"describe what","Fragments":["Bob"]},{"Key":"Bob is","Fragments":["responding"]},{"Key":"is responding","Fragments":["to."]},{"Key":" But","Fragments":["don't","given","[Hamming","in","because","you","if","I'm","I","these"]},{"Key":"But don't","Fragments":["realy","you"]},{"Key":"don't realy","Fragments":["like"]},{"Key":"like how","Fragments":["this","`isQuestion`","it","it","you","the"]},{"Key":"how this","Fragments":["if","worked.","looks."]},{"Key":"this if","Fragments":["statement"]},{"Key":"if statement","Fragments":["looks","may","with","in","-","is","with"]},{"Key":"statement looks","Fragments":["maintainability"]},{"Key":"looks maintainability","Fragments":["wise."]},{"Key":" What","Fragments":["if","drove","if","could","would","I","I","I","should"]},{"Key":"What if","Fragments":["another","you"]},{"Key":"if another","Fragments":["responds","letter"]},{"Key":"another responds","Fragments":["needs"]},{"Key":"responds needs","Fragments":["to"]},{"Key":"needs to","Fragments":["be","be","be","be","be","be.","be","be"]},{"Key":"to be","Fragments":["introduced?","mutually","explicit","read","optimized","made","modified,","explicit","of","a","implemented).","more","more","placed","more","hard","used","recomputed","overkill.","the","computed","computed","a","on","uppercase","validated","used","encoded","thorough","pattern","pattern","in","evaluated","evaluated","open","open","self","more","done","a","more","a","a","able","open","comparing","in","reevaluated"]},{"Key":"I noticed","Fragments":["it"]},{"Key":"noticed it","Fragments":["is","fails"]},{"Key":"it is","Fragments":["possible","not","a","called","already","already","to","describe","a","not","given","probably","pretty","easier","now","a","very","customary","not","*maybe*","assigned.","not","easy","ok","necessary","really","easy","and","more","executed","only","more","an","easy","easier","a","not","easier","clearer"]},{"Key":"is possible","Fragments":["to","with","to","to"]},{"Key":"possible to","Fragments":["shout","split","make","group","simplify","write"]},{"Key":"to shout","Fragments":["a"]},{"Key":"shout a","Fragments":["question"]},{"Key":"a question","Fragments":["but","at","not","ends","mark","mark)."]},{"Key":"question but","Fragments":["in"]},{"Key":"but in","Fragments":["that","general","your","this"]},{"Key":"in that","Fragments":["case","case)."]},{"Key":"that case","Fragments":["Bob","you"]},{"Key":"case Bob","Fragments":["should"]},{"Key":"Bob should","Fragments":["only"]},{"Key":"should only","Fragments":["respond","write"]},{"Key":"only respond","Fragments":["to"]},{"Key":"respond to","Fragments":["the"]},{"Key":"to the","Fragments":["shouting","lowercased","excercise","domain?","code.","type","place","failings","solution.","total","Hamming","count","map","original","format","next","real","beginning,","end,","middle)","scala","fore","readme","result.","fold","`msg`,","`val`","`isAnagram`","first","Response","language","contstructor.","output","constructor.","point","specification.","default","Scala","overall","left"]},{"Key":"the shouting","Fragments":["part.","case.","case"]},{"Key":"shouting part.","Fragments":["Because"]},{"Key":"part. Because","Fragments":["of"]},{"Key":"Because of","Fragments":["the"]},{"Key":"of the","Fragments":["order","previous","`if`","string).","code","warning?","import","anonymous","language)","limitations","fun","combination","match","function","shortest","last","expression.","variables!","calculation","improvements,","parts","previous","anagrams","mapping","class.","class.","distance","inputs","cache)","zip.","of","if/elseif/else","```hey```-method","```hey```","`filter`","collections,","boolean","[`require`](http://www.scala-lang.org/api/current/#scala.Predef$)","map","type","solution.","simplicity","various","methods.","variables.","\"else\"","wordsOf()","last","function","`StringOps`","few","public","classes.","methods","private","rules","case.","braces","`CaseInsensitive`","`validate`","pattern","String","`isYell`","function","zipped","temporary","logic","method","time","shortest","case","mapping,","string","sequence","input","methods","*how*.","unit","trade-offs","`sorted`","words","month.","solution","implicit","powers","exercise","2","same","match","candidate","unit","problems","test","word,","`if/else`","test.","string","final","string","fact","pattern"]},{"Key":"the order","Fragments":["the","of","shouldn't","of"]},{"Key":"order the","Fragments":["checks"]},{"Key":"the checks","Fragments":["are","mutually","out","in","are"]},{"Key":"checks are","Fragments":["done","reordered"]},{"Key":"are done","Fragments":["this"]},{"Key":"done this","Fragments":["will"]},{"Key":"this will","Fragments":["pass","work"]},{"Key":"will pass","Fragments":["the","without"]},{"Key":"pass the","Fragments":["tests.","argument","tests.","```statement```","original","message","\"only","\"only"]},{"Key":"But what","Fragments":["if"]},{"Key":"what if","Fragments":["I","instead"]},{"Key":"if I","Fragments":["could","were","can","can","just","first"]},{"Key":"I could","Fragments":["make","implement","have","ignore","not","not","think","by","come","imagine","do","basically","have","have","make"]},{"Key":"could make","Fragments":["the","the","it","your","the","it","your","some"]},{"Key":"make the","Fragments":["checks","code","code","code","code","`stmt`","could","argument","input","code","statement","tests","code","code","refactoring","value","code","code","intent"]},{"Key":"checks mutually","Fragments":["exclusive?"]},{"Key":"mutually exclusive?","Fragments":["Than"]},{"Key":"exclusive? Than","Fragments":["order"]},{"Key":"Than order","Fragments":["of"]},{"Key":"order of","Fragments":["checking","```if(isQuestion(sentence)```","magnitude","your","conditions"]},{"Key":"of checking","Fragments":["doesn't","of"]},{"Key":"checking doesn't","Fragments":["matter"]},{"Key":"doesn't matter","Fragments":["AND","at"]},{"Key":"matter AND","Fragments":["in"]},{"Key":"AND in","Fragments":["my"]},{"Key":"in my","Fragments":["code","head","version:","comments,","next","opinion","implementation","`hey`","implementation","count()","opinion.","machine:"]},{"Key":"my code","Fragments":["I","to","works","works"]},{"Key":"code I","Fragments":["now","have","could"]},{"Key":"I now","Fragments":["have","believe"]},{"Key":"now have","Fragments":["made","only"]},{"Key":"have made","Fragments":["explicit","the"]},{"Key":"made explicit","Fragments":["that"]},{"Key":"explicit that","Fragments":["a","I"]},{"Key":"that a","Fragments":["shouting","single","common"]},{"Key":"a shouting","Fragments":["question"]},{"Key":"shouting question","Fragments":["is"]},{"Key":"question is","Fragments":["not","more"]},{"Key":"is not","Fragments":["considered","immediately","all","yet","very","needed","recommended","customary","used,","necessary","necessarily","necessary","only","exhaustive,","an","necessary.","in","a","what","really"]},{"Key":"not considered","Fragments":["a","shouting."]},{"Key":"considered a","Fragments":["question"]},{"Key":"question at","Fragments":["all."]},{"Key":"Introduced case","Fragments":["objects."]},{"Key":"case objects.","Fragments":["i.m.o"]},{"Key":"objects. i.m.o","Fragments":["this"]},{"Key":"i.m.o this","Fragments":["has"]},{"Key":"this has","Fragments":["two"]},{"Key":"has two","Fragments":["advantages."]},{"Key":" 1.","Fragments":["the","why","Redundant","You","`message.forall(c","You","You","`map.withDefaultValue(0)`","You","It'd","The","and","Is","Duplication","Look","Look","Maybe","Look","I","The","The"]},{"Key":"1. the","Fragments":["'hey'"]},{"Key":"the 'hey'","Fragments":["method","function,"]},{"Key":"'hey' method","Fragments":["is"]},{"Key":"method is","Fragments":["easier","public","the","pretty","the","overkill."]},{"Key":"is easier","Fragments":["on","to","than","to","to"]},{"Key":"easier on","Fragments":["the","the"]},{"Key":"on the","Fragments":["eyes,","input","higher-level","first","same","functions.","actual","pair","eyes.","fly","result","team","input","class.","string.","type.","if","if","case","site","ending","current","same","specification","evaluating","ordering","input","*what*","fact","list","input","each","particular","params","companion","regexes,"]},{"Key":"the eyes,","Fragments":["and"]},{"Key":" 2.","Fragments":["I","why","`x.trim.length","Then","`message.count(c","`return`","If","Instead","All","You","`Map.empty[String,","FYI,","`String`","If","Right","Some","Next","Second","Second"]},{"Key":"2. I","Fragments":["don't","quite"]},{"Key":"I don't","Fragments":["have","think","believe","think","like","want","like","know","have","care,","see","know","know.","find","know","have","like","like","know","really","really","really","think","think","have"]},{"Key":"don't have","Fragments":["to","to,","a","a","to","to","any","to","to","too","to","to","to","much"]},{"Key":"have to","Fragments":["pass","do","be,","do","remember","go","be","go","pass","write","actually","change","convert","trim","recalculate","iterate","remember","remember","keep","loop","remove","remove","admit","perform"]},{"Key":"to pass","Fragments":["the","all","the","around","the","the","the"]},{"Key":"the argument","Fragments":["explicitly","list","validation"]},{"Key":" I'm","Fragments":["still","not","not","attempting","not","not","a","pretty","just","new","just","still","new","pretty","pretty","not","not"]},{"Key":"I'm still","Fragments":["using","very","trying","a","pretty"]},{"Key":"still using","Fragments":["the"]},{"Key":"using the","Fragments":["methods","`_1`","length","```for(...)","[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","[`count`](http://www.scala-lang.org/api/current/#scala.collection.Iterable)","`toList`","partial","for","match","direct","zip"]},{"Key":"the methods","Fragments":["of","on","on","on","because","needs"]},{"Key":"methods of","Fragments":["the"]},{"Key":"the previous","Fragments":["iteration.","exercises)","version","version.","submission.","computed"]},{"Key":"previous iteration.","Fragments":["I"]},{"Key":"iteration. I","Fragments":["Wanted"]},{"Key":"I Wanted","Fragments":["the"]},{"Key":"Wanted the","Fragments":["statements"]},{"Key":"the statements","Fragments":["to"]},{"Key":"statements to","Fragments":["be","be"]},{"Key":"be mutually","Fragments":["exclusive"]},{"Key":"mutually exclusive","Fragments":["and"]},{"Key":"exclusive and","Fragments":["are"]},{"Key":"and are","Fragments":["thus"]},{"Key":"are thus","Fragments":["using"]},{"Key":"thus using","Fragments":["!isShouting(s)"]},{"Key":"using !isShouting(s)","Fragments":["in"]},{"Key":"!isShouting(s) in","Fragments":["the"]},{"Key":"in the","Fragments":["isQuestion","private","amount","companion","reams","given","information","place","discussion","context","**if**,","documentation).","guard","guard","fold","test","database.","first","`count`","context","regexp","context","`case`","add","count","[```trait","same","next","Scala","`grade`","class?","given","main","regex","tests","groupBy.","map?","end","method","hey()","future","Scala","regex","standard","`RuleMaker`.","block.","class","`toString()`","conditionals","next","message?","if","tests","Scala","cases","companion","companion","object","evaluation","count","past.","spec","same","loop.","standard","standard","business","test","requirement","`Phrase`","isYell","square","list","input","``else``","companion","repository","result)","context","final","following","companion","objects,","background","present","return","`if`"]},{"Key":"the isQuestion","Fragments":["method."]},{"Key":"I do","Fragments":["not","wish","not","not","like","like"]},{"Key":"do not","Fragments":["know","rate","like","like","have","have","really"]},{"Key":"not know","Fragments":["how","it"]},{"Key":"know how","Fragments":["to","they","to"]},{"Key":"how to","Fragments":["reuse","get","add","get","get"]},{"Key":"to reuse","Fragments":["this"]},{"Key":"reuse this","Fragments":["code"]},{"Key":"this code","Fragments":["if","can","–","–","is","won't","as","very","to","to","can","and"]},{"Key":"code if","Fragments":["I"]},{"Key":"I were","Fragments":["to"]},{"Key":"were to","Fragments":["put"]},{"Key":"to put","Fragments":["the","parens","the","them","the"]},{"Key":"put the","Fragments":["code","helper","getLetters"]},{"Key":"the code","Fragments":["into","doesn't","there","it","more","easier","harder","easier","as","super","specifies","more","reader","self","works","somewhat","I","again","harder","would","more","here.","breath","look","more","more","longer","to","to","could","inside","block","as","very","more","after","quite","would","looks","more","is","a","a"]},{"Key":"code into","Fragments":["the"]},{"Key":"into the","Fragments":["unapply","companion","scope","Java","class,","companion"]},{"Key":"the unapply","Fragments":["methods."]},{"Key":"I find","Fragments":["this","it","this","this","it","it","this"]},{"Key":"find this","Fragments":["difficult","code","hard","a"]},{"Key":"this difficult","Fragments":["to"]},{"Key":"difficult to","Fragments":["read,","read,","follow:","read"]},{"Key":"to read,","Fragments":["probably","to","follow"]},{"Key":"read, probably","Fragments":["partly"]},{"Key":"probably partly","Fragments":["because"]},{"Key":"partly because","Fragments":["I'm","when"]},{"Key":"because I'm","Fragments":["not"]},{"Key":"I'm not","Fragments":["that","good","sure","going","sure","so","good","sure","focusing","sure","too","quite","very","sure:","terribly","aware","sure","sure"]},{"Key":"not that","Fragments":["well"]},{"Key":"that well","Fragments":["known"]},{"Key":"well known","Fragments":["yet"]},{"Key":"known yet","Fragments":["with"]},{"Key":"yet with","Fragments":["implicits"]},{"Key":"with implicits","Fragments":["in"]},{"Key":"implicits in","Fragments":["scala","general."]},{"Key":"in scala","Fragments":["but","of"]},{"Key":"scala but","Fragments":["also"]},{"Key":"but also","Fragments":["because","an"]},{"Key":"also because","Fragments":["imo"]},{"Key":"because imo","Fragments":["this"]},{"Key":"imo this","Fragments":["code"]},{"Key":"code can","Fragments":["not","be"]},{"Key":"can not","Fragments":["be"]},{"Key":"not be","Fragments":["understood","faster","obvious","strictly","applied","robust"]},{"Key":"be understood","Fragments":["without"]},{"Key":"understood without","Fragments":["the"]},{"Key":"without the","Fragments":["original","dot).","curly","\"case","trait","use","cast"]},{"Key":"the original","Fragments":["question/specification.","commenter","msg","String."]},{"Key":" It","Fragments":["is","was","is","came","takes","could","seems","is","is","works","could","may","is","IS"]},{"Key":"It is","Fragments":["described","nitpicking","automatically","much","well","extra","my","quite","quite","very","possible","possible"]},{"Key":"is described","Fragments":["that"]},{"Key":"described that","Fragments":["Bob"]},{"Key":"that Bob","Fragments":["answers"]},{"Key":"Bob answers","Fragments":["'Whatever'","'Whatever.'"]},{"Key":"answers 'Whatever'","Fragments":["to"]},{"Key":"'Whatever' to","Fragments":["anything"]},{"Key":"to anything","Fragments":["else.","else."]},{"Key":"anything else.","Fragments":["But"]},{"Key":"else. But","Fragments":["the"]},{"Key":"But the","Fragments":["code","version"]},{"Key":"code doesn't","Fragments":["convey"]},{"Key":"doesn't convey","Fragments":["why"]},{"Key":"convey why","Fragments":["there"]},{"Key":"why there","Fragments":["is"]},{"Key":"there is","Fragments":["a","a","`.find`","any","any","a","no","a","no","a","a"]},{"Key":"is a","Fragments":["need","question","strong","constant","constant","general-purpose","function","strand","better","perfect","level","little","valid","Set","list","_potential_","perfect","very","quite","great","correct","shortcut","much","bit","more","fine","one-liner","Seq\\[Char\\]","bit","bit","more","good","great","good","bit","single","one-liner","bit","little","little","class","very","way","function","pretty","useful","particularly","valid","class"]},{"Key":"a need","Fragments":["for"]},{"Key":"need for","Fragments":["a","the","a","`str3`","`if(a)","`def","the","the","the","a","evalutating","defining"]},{"Key":"for a","Fragments":["special","response","good","string","helper","special","way","lot","later","blank","mutable","project","single","cleaner,"]},{"Key":"a special","Fragments":["case","function","syntax"]},{"Key":"special case","Fragments":["in","ending"]},{"Key":"case in","Fragments":["which","their"]},{"Key":"in which","Fragments":["he","the"]},{"Key":"which he","Fragments":["also"]},{"Key":"he also","Fragments":["answers"]},{"Key":"also answers","Fragments":["'Whatever'."]},{"Key":" In","Fragments":["the","terms","my","scala","most","my","any","my","scala","add(),","this","the","my","``toLetterMap``,","``addDefaults``"]},{"Key":"In the","Fragments":["code","'hey'","order-independent"]},{"Key":"code there","Fragments":["are"]},{"Key":"there are","Fragments":["also","a","only","no","implicit","duplicated","even","some"]},{"Key":"are also","Fragments":["two"]},{"Key":"also two","Fragments":["definitions"]},{"Key":"two definitions","Fragments":["for"]},{"Key":"definitions for","Fragments":["a"]},{"Key":"a response","Fragments":["to","value.","(e.g."]},{"Key":"response to","Fragments":["a","a"]},{"Key":"to a","Fragments":["question,","questionmark,","oneliner.","specific","non-letter?","value.","Seq","Seq","constant","Map[Int,Seq[String]]","Map","predicate","sequence.","variable","Map","number.","`List[Char]`","value","companion","simpler","local","nicely","nicely","BigInt","call"]},{"Key":"a question,","Fragments":["from","which","and"]},{"Key":"question, from","Fragments":["the"]},{"Key":"from the","Fragments":["code","\"About\"","biology/DNA","fact","last","[`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map)","tests.","previous","existing","word."]},{"Key":"code it","Fragments":["is"]},{"Key":"not immediately","Fragments":["clear"]},{"Key":"immediately clear","Fragments":["why."]},{"Key":" Further","Fragments":["more"]},{"Key":"Further more","Fragments":["imo"]},{"Key":"more imo","Fragments":["this:"]},{"Key":"imo this:","Fragments":["'---?'"]},{"Key":"this: '---?'","Fragments":["is"]},{"Key":"'---?' is","Fragments":["a"]},{"Key":"question not","Fragments":["shouting."]},{"Key":"I still","Fragments":["need","think"]},{"Key":"still need","Fragments":["a"]},{"Key":"need a","Fragments":["way","colon","temporary","mutable"]},{"Key":"a way","Fragments":["to","to","to","to","to","using","to","to","to","without","to","to"]},{"Key":"way to","Fragments":["convey","say","do","update","define","learn","loop","implement","match","solve","split","make","use","do","stay","reduce","let","map","measure","do","check","do","traverse","go","create","do","write","do","compare","match","get","write","solve","create","make","perform","do","use","do","change","both"]},{"Key":"to convey","Fragments":["what"]},{"Key":"convey what","Fragments":["is"]},{"Key":"what is","Fragments":["meant","happening","it","**statement**","being"]},{"Key":"is meant","Fragments":["by"]},{"Key":"meant by","Fragments":["the"]},{"Key":"by the","Fragments":["isShouting","zip","indirection","rest","tests","tests"]},{"Key":"the isShouting","Fragments":["method."]},{"Key":"I consider","Fragments":["usage"]},{"Key":"consider usage","Fragments":["of"]},{"Key":"usage of","Fragments":["capital","parameters:"]},{"Key":"of capital","Fragments":["letters"]},{"Key":"capital letters","Fragments":["shouting."]},{"Key":"letters shouting.","Fragments":["However"]},{"Key":"shouting. However","Fragments":["if"]},{"Key":"However if","Fragments":["the"]},{"Key":"if the","Fragments":["uppercased","object","string","'if'","input","string","method","sentence's","nucleotide","total","`isX`","tests","matched"]},{"Key":"the uppercased","Fragments":["version","value"]},{"Key":"uppercased version","Fragments":["is"]},{"Key":"version is","Fragments":["equal","more"]},{"Key":"is equal","Fragments":["to"]},{"Key":"equal to","Fragments":["the"]},{"Key":"the lowercased","Fragments":["version."]},{"Key":"lowercased version.","Fragments":["Than"]},{"Key":"version. Than","Fragments":["there"]},{"Key":"Than there","Fragments":["was"]},{"Key":"there was","Fragments":["no","more","some"]},{"Key":"was no","Fragments":["other"]},{"Key":"no other","Fragments":["way"]},{"Key":"other way","Fragments":["to"]},{"Key":"to say","Fragments":["it","if"]},{"Key":"say it","Fragments":["so"]},{"Key":"it so","Fragments":["it's"]},{"Key":"so it's","Fragments":["not"]},{"Key":"it's not","Fragments":["considered","very","clear","really"]},{"Key":"considered shouting.","Fragments":["(invariant","I'll"]},{"Key":"shouting. (invariant","Fragments":[":"]},{"Key":"(invariant :","Fragments":["doesn't"]},{"Key":": doesn't","Fragments":["contain"]},{"Key":"doesn't contain","Fragments":["any","any"]},{"Key":"contain any","Fragments":["alphabethic","state;"]},{"Key":"any alphabethic","Fragments":["characters)"]},{"Key":" According","Fragments":["to"]},{"Key":"According to","Fragments":["the"]},{"Key":"the excercise","Fragments":["Bob"]},{"Key":"excercise Bob","Fragments":["answers"]},{"Key":"answers 'Whatever.'","Fragments":["to"]},{"Key":"'Whatever.' to","Fragments":["anything"]},{"Key":" Why","Fragments":["the","not","do","do","not"]},{"Key":"Why the","Fragments":["need"]},{"Key":"the need","Fragments":["for","for","for","for","for","for","for"]},{"Key":"for the","Fragments":["special","count","`Bob`","sake","return","nits!","anonymous","comments.","suggestion","nit.","feedback.","pointer","input!","students","input","tips.","feedback,","trouble","sorted","comment.","```flatMap```","details.","tail","`nucleotideCounts`","pointers.","nits!","last","Converser,","string","validity","operation","feedback!","if","feedback","last","second","third","feedback.","extra","`String.isEmpty`","feedback.","simple","typo,","feedback!","Strings.","feedback!!","nice","upper","next","upper","next","tip,","idea","comparison.","parameter","nits.","various","invalid","comment.","feedback.","sumOfSquares","feedback.","feedback."]},{"Key":"the special","Fragments":["case"]},{"Key":"case ending","Fragments":["in"]},{"Key":"ending in","Fragments":["\"!\""]},{"Key":"in \"!\"","Fragments":["?"]},{"Key":" The","Fragments":["map","difference","code","Haskell","use","first","only","use","\"return\"","naming","hey-method","regex'","case","big","basic","`quiet","list","rest","given","fold","only","question","mix","regex","last","test","extra","`groupBy`","methods","shortest","scala","!c.isLower","reason","```primeFactors```","regex","contract","rest","numeric","empty","third","regex"]},{"Key":"The map","Fragments":["could"]},{"Key":"map could","Fragments":["be"]},{"Key":"could be","Fragments":["replaced","helpful","replaced","interpreted","cleared","more","used","interesting","replaced","a","done","written","cleaner","better","implemented","changed","deleted","made","made.","useful","renamed","`object","simplified","made","```val```","simplified","a","rewritten","terrible","rewritten"]},{"Key":"be replaced","Fragments":["by","with","by","with"]},{"Key":"replaced by","Fragments":["a","Traversable's"]},{"Key":"by a","Fragments":["mapValues.","state"]},{"Key":"think it","Fragments":["looks","strikes","would","could","makes","should","would","would","may","is","should"]},{"Key":"it looks","Fragments":["kind","like"]},{"Key":"looks kind","Fragments":["of"]},{"Key":"kind of","Fragments":["odd","refactoring","point...","problem","misleading","dislike","complex.","\"pair-wise\"","task.","\"count\"","a"]},{"Key":"of odd","Fragments":["with"]},{"Key":"odd with","Fragments":["the"]},{"Key":"with the","Fragments":["\"r.\"","`-feature`","implicit","first","previous","a","result","syntax","fact","shouting","rest:","if/else","yell","hardest","helper","toString","filter.","counts","val","nucleotides","sequence","right","well-chosen","two","tail","following","Map","predicate","same","keywork","case"]},{"Key":"the \"r.\"","Fragments":["on"]},{"Key":"\"r.\" on","Fragments":["a"]},{"Key":"on a","Fragments":["separate","class","regex","zipped","way","boolean","string,"]},{"Key":"a separate","Fragments":["line.","iteration","check.","object.","`val`","method","method"]},{"Key":" Maybe","Fragments":["a","`otherStrand`?","it"]},{"Key":"Maybe a","Fragments":["pattern"]},{"Key":"a pattern","Fragments":["matching","match"]},{"Key":"pattern matching","Fragments":["based","instead","can","with","paradigm.","mechanism","here","support","is","since","in","syntactic","instead","on","and","the","against","solution","I","code.","accomplishes","for","and","for"]},{"Key":"matching based","Fragments":["solution"]},{"Key":"based solution","Fragments":["would"]},{"Key":"solution would","Fragments":["be","be"]},{"Key":"would be","Fragments":["interesting!","more","helpful.","simpler","an","more","actually","inlined","better","using","easier","fine","a","to","that","very","fine,","2","shorter","more","great.","interested","more","cleaner","much","more","to","re-calculated","to","easier","cleaner","even","safer.","to","to","more"]},{"Key":" Looks","Fragments":["good","good","good","good!","good.","great!","good!","great,","great.","good.","great!","good.","good","great","great!","good","great!","fun!","great,","good.","like","good.","good.","good.","really"]},{"Key":"Looks good","Fragments":["-","to","to",":)","overall."]},{"Key":"good -","Fragments":["however","however"]},{"Key":"- however","Fragments":["do","what"]},{"Key":"however do","Fragments":["we"]},{"Key":"do we","Fragments":["need"]},{"Key":"we need","Fragments":["40"]},{"Key":"need 40","Fragments":["lines?"]},{"Key":" filter","Fragments":["and","and"]},{"Key":"filter and","Fragments":["then","isEmpty","a","then"]},{"Key":"and then","Fragments":["length","optimized","I'll","does","finding","comparing","pattern","a","worked","move","had","use","make","zipping","creating","using","try","some","the","you"]},{"Key":"then length","Fragments":["is"]},{"Key":"length is","Fragments":["the"]},{"Key":"is the","Fragments":["same","value","last","only","final","same","best","stuff","way","one","right","best","matching","initial","number","reuse","return","method","right","answer"]},{"Key":"the same","Fragments":["as","(at","code","time,","as","as","as","logic","solution,","order","thing","way","thing","solution,","effect,","val","effect","block","implicit","result","thing","length.","type?","transformed","values.","name"]},{"Key":"same as","Fragments":["count","`words","`some`","`(x"]},{"Key":"as count","Fragments":[":)"]},{"Key":" zipping","Fragments":["the"]},{"Key":"zipping the","Fragments":["strings"]},{"Key":"the strings","Fragments":["could","to","too","but","(here,"]},{"Key":"strings could","Fragments":["make"]},{"Key":"code more","Fragments":["concise","readable","readable","functional","readable.","readable.","readable,","readable."]},{"Key":" Absolutely","Fragments":["sure"]},{"Key":"Absolutely sure","Fragments":["that"]},{"Key":"sure that","Fragments":["there's","the","you"]},{"Key":"that there's","Fragments":["a"]},{"Key":"there's a","Fragments":["better","nice","readability","more","special"]},{"Key":"a better","Fragments":["way","way","way","label","way","name?","abstraction","name.","one.","choice","name","Scala"]},{"Key":"better way","Fragments":["of","to","but","to"]},{"Key":"way of","Fragments":["checking","getting","refactorings.","splitting","doing","defining","counting","doing","writing"]},{"Key":"checking of","Fragments":["a"]},{"Key":"of a","Fragments":["string","string.","concern,","general","general","variable","program,","single","single","single","DNA","US","mutable","regex","simple","number,","way","more","few","foldLeft","groupBy","matching","regular","collection)","`def`,","brute","Map.","map,","pity.","`class`.","method;","companion","literal."]},{"Key":"a string","Fragments":["contains","is","comparison","comparison","has","to","is","like"]},{"Key":"string contains","Fragments":["at"]},{"Key":"contains at","Fragments":["least"]},{"Key":"at least","Fragments":["one","`char1`","an","one","one","try","a","to"]},{"Key":"least one","Fragments":["uppercase","uppercase","alpha"]},{"Key":"one uppercase","Fragments":["alphabetic","letter,"]},{"Key":"uppercase alphabetic","Fragments":["character..."]},{"Key":"alphabetic character...","Fragments":["but"]},{"Key":"character... but","Fragments":["I"]},{"Key":"but I","Fragments":["know","also","like","have","am","suppose","couldn't","find","don't","appreciate","saw","prefer","prefer","feel","doubt","wonder","don't","did","believe","understand","think","would","feel","think","think","think","like","feel","chose","can","just","think"]},{"Key":"I know","Fragments":["nothing","I","not","the","I","I","that"]},{"Key":"know nothing","Fragments":["about"]},{"Key":"nothing about","Fragments":["Scala,","Haskell"]},{"Key":"about Scala,","Fragments":["or"]},{"Key":"Scala, or","Fragments":["where"]},{"Key":"or where","Fragments":["to"]},{"Key":"where to","Fragments":["look"]},{"Key":"to look","Fragments":["to","up.","at","at","at"]},{"Key":"look to","Fragments":["find"]},{"Key":"to find","Fragments":["out","more","another","regexes/patterns"]},{"Key":"find out","Fragments":["what"]},{"Key":"out what","Fragments":["I"]},{"Key":"what I","Fragments":["need","had.","need","need.","was","had","know","could","say","needed.","came","thought"]},{"Key":"I need","Fragments":["to","to","to","to","to"]},{"Key":"to know,","Fragments":["yet!"]},{"Key":" There's","Fragments":["probably","actually","a","also","an","an","a","no","a"]},{"Key":"There's probably","Fragments":["a","some"]},{"Key":"probably a","Fragments":["nicer","cleaner","bit","cleaner","bad"]},{"Key":"a nicer","Fragments":["way","way","language"]},{"Key":"nicer way","Fragments":["to","to"]},{"Key":"to do","Fragments":["this","this.","it","the","the","this","something","it","with","the","`toLowerCase`","a","to","now","with","the","something","it","this:","`str.endsWith(\"?\")`","the","something","the","the","as","it.","the","this?","this"]},{"Key":"do this","Fragments":["than","for","with"]},{"Key":"this than","Fragments":["a"]},{"Key":"than a","Fragments":["`match`","class.","statement.","`Boolean`","regex."]},{"Key":"a `match`","Fragments":["expression","structure"]},{"Key":"`match` expression","Fragments":["with"]},{"Key":"expression with","Fragments":["entirely"]},{"Key":"with entirely","Fragments":["wildcard"]},{"Key":"entirely wildcard","Fragments":["cases"]},{"Key":"wildcard cases","Fragments":["-"]},{"Key":"cases -","Fragments":["maybe"]},{"Key":"- maybe","Fragments":["an","it's"]},{"Key":"maybe an","Fragments":["`if`?"]},{"Key":"an `if`?","Fragments":["But"]},{"Key":"`if`? But","Fragments":["it"]},{"Key":"But it","Fragments":["would","makes"]},{"Key":"it would","Fragments":["irk","be","come","be","matter).","be","be","be","be","be","be"]},{"Key":"would irk","Fragments":["me"]},{"Key":"irk me","Fragments":["having"]},{"Key":"me having","Fragments":["to"]},{"Key":"having to","Fragments":["put","look","remember","include","explode","use"]},{"Key":"put parens","Fragments":["around"]},{"Key":"parens around","Fragments":["the"]},{"Key":"around the","Fragments":["predicates","functions","`speech`","`hey`"]},{"Key":"the predicates","Fragments":["in","into","into","into"]},{"Key":"predicates in","Fragments":["an"]},{"Key":"in an","Fragments":["if","object","imperative","obvious"]},{"Key":"an if","Fragments":[";-)","statement","statement","statement,"]},{"Key":"I vaguely","Fragments":["remember"]},{"Key":"vaguely remember","Fragments":["something"]},{"Key":"remember something","Fragments":["about"]},{"Key":"something about","Fragments":["implicit"]},{"Key":"about implicit","Fragments":["conversions"]},{"Key":"implicit conversions","Fragments":["being"]},{"Key":"conversions being","Fragments":["considered"]},{"Key":"being considered","Fragments":["bad"]},{"Key":"considered bad","Fragments":["now?"]},{"Key":"bad now?","Fragments":["Or"]},{"Key":"now? Or","Fragments":["was"]},{"Key":"Or was","Fragments":["it"]},{"Key":"was it","Fragments":["something"]},{"Key":"it something","Fragments":["similar?","like"]},{"Key":" Cleanup","Fragments":["after"]},{"Key":"Cleanup after","Fragments":["looking"]},{"Key":"after looking","Fragments":["at","at"]},{"Key":"looking at","Fragments":["@laura's","abstracting","other","another","some","other"]},{"Key":"at @laura's","Fragments":["solution."]},{"Key":"@laura's solution.","Fragments":["Mostly"]},{"Key":"solution. Mostly","Fragments":["whitespace"]},{"Key":"Mostly whitespace","Fragments":["and"]},{"Key":"whitespace and","Fragments":["reordering"]},{"Key":"and reordering","Fragments":["to"]},{"Key":"reordering to","Fragments":["have"]},{"Key":"to have","Fragments":["the","the","a","names","intention-revealing","it.","self","letters","a","pure"]},{"Key":"have the","Fragments":["support","relevant","impression","Map('A'"]},{"Key":"the support","Fragments":["code"]},{"Key":"support code","Fragments":["(`Utterance`)"]},{"Key":"code (`Utterance`)","Fragments":["at"]},{"Key":"(`Utterance`) at","Fragments":["the"]},{"Key":"at the","Fragments":["bottom,","moment","expense","functions","bottom","comments","`StringOps`","other","end","code","```zip```","functions","code","\"if\"","time.","methods","methods","documentation","end","zip","List","second","second"]},{"Key":"the bottom,","Fragments":["but"]},{"Key":"bottom, but","Fragments":["I"]},{"Key":"I also","Fragments":["moved","really","wish","saw","started","didnt","wanted","used","didn't"]},{"Key":"also moved","Fragments":["the"]},{"Key":"moved the","Fragments":["implicit"]},{"Key":"the implicit","Fragments":["declaration","in","classes","conversion)","class?"]},{"Key":"implicit declaration","Fragments":["into"]},{"Key":"declaration into","Fragments":["`Bob`."]},{"Key":" Never","Fragments":["figured"]},{"Key":"Never figured","Fragments":["out"]},{"Key":"figured out","Fragments":["how","that","that"]},{"Key":"out how","Fragments":["to","to"]},{"Key":"to get","Fragments":["it","your","the","to","rid","rid","a","it","used","the","a","my","the","things","the","things","Hamming","things","to","another","a","Hamming"]},{"Key":"get it","Fragments":["into","to","much","right..."]},{"Key":"it into","Fragments":["the","a","a"]},{"Key":"the companion","Fragments":["object,","object,","object","object","object","object","object?","object","object"]},{"Key":"companion object,","Fragments":["if","but"]},{"Key":"object, if","Fragments":["that's"]},{"Key":"if that's","Fragments":["possible"]},{"Key":"that's possible","Fragments":["at"]},{"Key":"possible at","Fragments":["all,"]},{"Key":"at all,","Fragments":["but","in","but"]},{"Key":"all, but","Fragments":["this","better"]},{"Key":"but this","Fragments":["is","is","didn't","doesn't","way"]},{"Key":"this is","Fragments":["cleaner","a","a","an","an","one","more","better","a","a","a","the","a","a","my","actually"]},{"Key":"is cleaner","Fragments":["than"]},{"Key":"cleaner than","Fragments":["what","``groupBy(ch"]},{"Key":"than what","Fragments":["I","I"]},{"Key":"still think","Fragments":["explicitly"]},{"Key":"think explicitly","Fragments":["creating"]},{"Key":"explicitly creating","Fragments":["an"]},{"Key":"creating an","Fragments":["utterance","empty"]},{"Key":"an utterance","Fragments":["would"]},{"Key":"utterance would","Fragments":["make"]},{"Key":"would make","Fragments":["the","regexes","it"]},{"Key":"code easier","Fragments":["to","to","to","to"]},{"Key":"easier to","Fragments":["follow,","grow.","internationalize,","read.","do","read.","read.","read","read:","read","read","read","manipulate","read.","figure","read","figure","read","create","read.","just","see","refactor"]},{"Key":"to follow,","Fragments":["but"]},{"Key":"follow, but","Fragments":["maybe"]},{"Key":"but maybe","Fragments":["this","we"]},{"Key":"maybe this","Fragments":["is"]},{"Key":"a strong","Fragments":["enough","opinion","candidate"]},{"Key":"strong enough","Fragments":["Scala"]},{"Key":"enough Scala","Fragments":["convention"]},{"Key":"Scala convention","Fragments":["that"]},{"Key":"convention that","Fragments":["it"]},{"Key":"that it","Fragments":["doesn't","too","creates","can","is","requires","is","is","can't","can","can","is","is","delegates"]},{"Key":"it doesn't","Fragments":["confuse","need","really","mutate","matter.","change."]},{"Key":"doesn't confuse","Fragments":["people"]},{"Key":"confuse people","Fragments":["for"]},{"Key":"people for","Fragments":["long."]},{"Key":" At","Fragments":["first","least"]},{"Key":"At first","Fragments":["I"]},{"Key":"first I","Fragments":["had"]},{"Key":"I had","Fragments":["this","it","a","to","earlier.","everything","to","to","a","encountered","started","some","to"]},{"Key":"had this","Fragments":["as"]},{"Key":"this as","Fragments":["a","defining"]},{"Key":"as a","Fragments":["one-liner,","name","Scala","generic","variable","developer","name-","string","result.","case","max","class","substitution","member","separate","demo","```lazy","case","general","question.","question.","one","`lazy","\u003ccode\u003eval","variable","succession","`private`","function","separate","tail","function.","function,","question.","single"]},{"Key":"a one-liner,","Fragments":["but"]},{"Key":"one-liner, but","Fragments":["ended"]},{"Key":"but ended","Fragments":["up"]},{"Key":"ended up","Fragments":["defining"]},{"Key":"up defining","Fragments":["`nonMatching`"]},{"Key":"defining `nonMatching`","Fragments":["for"]},{"Key":"`nonMatching` for","Fragments":["better"]},{"Key":"for better","Fragments":["readability."]},{"Key":"better readability.","Fragments":["Comments"]},{"Key":"readability. Comments","Fragments":["are"]},{"Key":"Comments are","Fragments":["welcome"]},{"Key":"are welcome","Fragments":["and"]},{"Key":"welcome and","Fragments":["appreciated."]},{"Key":"think you","Fragments":["can","could","might","can","don't","can","can","could"]},{"Key":"you can","Fragments":["simplify","avoid","call","define","leave","find","find","see","grasp","often","do","usually","omit","write","use","use","remove","just","remove","make","try","(and","use","do","move","do","modify","use","use","map","`count`","just","use","omit","omit","also","keep","put","use","implement","treat","have","also","get","make","get","replace","go","shift","call","speed"]},{"Key":"can simplify","Fragments":["the"]},{"Key":"simplify the","Fragments":["logic","code:","regex","first","code","`fold`"]},{"Key":"the logic","Fragments":["with","into","could"]},{"Key":"logic with","Fragments":["a"]},{"Key":"with a","Fragments":["couple","poorly","`.count`,","class","'?'.","block","more","descriptive","lowercase","pair","`Set`","`lazy","better","capital:","single","very","grain","nice","test","nice","named","for","single","`\u0026\u0026`","solution","name"]},{"Key":"a couple","Fragments":["of","of","functions.","of"]},{"Key":"couple of","Fragments":["observations..","separate","possibilities."]},{"Key":" *","Fragments":["if","the","Give","`map1`","Line","There","Don't","make","There's","There's","There's","Remove","Use","No","Check","partly","partly","call","split","the","regexs","the","what","The","Inconsistent","Using","Using","Would","`isQuestion`","Why","I","Current","We","There","```total```","Body","It","Even","Indentation","The","The","As","Rather","On","Is","A","I","`isQuestion`","`hasLetters`","Perhaps","I","scala","Indentation","The","The","Out","For","Is"]},{"Key":"* if","Fragments":["you"]},{"Key":"if you","Fragments":["invert","don't","create","expect","expect","wanted,","feel","can","can","compile","don't","wish.","use","`yield","do","did","would","still","had","align","want","got","build","remove","used","have","want","broke","broke","ask","prefix","want","don't"]},{"Key":"you invert","Fragments":["the"]},{"Key":"invert the","Fragments":["order"]},{"Key":"of ```if(isQuestion(sentence)```","Fragments":["and"]},{"Key":"```if(isQuestion(sentence)``` and","Fragments":["```if(isQuestion(sentence)"]},{"Key":"and ```if(isQuestion(sentence)","Fragments":["\u0026\u0026"]},{"Key":"```if(isQuestion(sentence) \u0026\u0026","Fragments":["!allCaps)"]},{"Key":"\u0026\u0026 !allCaps)","Fragments":["```"]},{"Key":"!allCaps) ```","Fragments":["you"]},{"Key":"``` you","Fragments":["can"]},{"Key":"can avoid","Fragments":["to","the","negations"]},{"Key":"avoid to","Fragments":["check"]},{"Key":"to check","Fragments":["that","if","if","for","out","for","for","for","if","for","every","it."]},{"Key":"check that","Fragments":["is","the"]},{"Key":"that is","Fragments":["not","then","Tuple","a","a","more","the","on","a","a","going","on","used","a","more","defined"]},{"Key":"not all","Fragments":["caps."]},{"Key":"* the","Fragments":["definition","symbols","whole"]},{"Key":"the definition","Fragments":["of"]},{"Key":"definition of","Fragments":["allCaps","\"hey\"."]},{"Key":"of allCaps","Fragments":["is:"]},{"Key":"allCaps is:","Fragments":["there"]},{"Key":"is: there","Fragments":["should"]},{"Key":"there should","Fragments":["be"]},{"Key":"be some","Fragments":["uppercase"]},{"Key":"some uppercase","Fragments":["letters"]},{"Key":"uppercase letters","Fragments":["and"]},{"Key":"letters and","Fragments":["no","used","numbers."]},{"Key":"and no","Fragments":["lowercase"]},{"Key":"no lowercase","Fragments":["letters."]},{"Key":"lowercase letters.","Fragments":["I"]},{"Key":"letters. I","Fragments":["think"]},{"Key":"you could","Fragments":["explicit","consider","use","simplify","get","put","think","do","either","use","also","make","use","have","use","also","give","use","just","write:","write","make","rename","add","move","probably","have","improve","extract","check","actually","simplify","just","try","try","do"]},{"Key":"could explicit","Fragments":["this"]},{"Key":"explicit this","Fragments":["things"]},{"Key":"this things","Fragments":["using"]},{"Key":"things using","Fragments":["more"]},{"Key":"using more","Fragments":[".filter()"]},{"Key":"more .filter()","Fragments":["and"]},{"Key":".filter() and","Fragments":["removing"]},{"Key":"and removing","Fragments":["the"]},{"Key":"removing the","Fragments":["for..","need"]},{"Key":" Version","Fragments":["2"]},{"Key":"Version 2","Fragments":["implements"]},{"Key":"2 implements","Fragments":["your"]},{"Key":"implements your","Fragments":["feedbacks."]},{"Key":"know I","Fragments":["could","think","have"]},{"Key":"could implement","Fragments":["`justUpperCaseLetters`"]},{"Key":"implement `justUpperCaseLetters`","Fragments":["in"]},{"Key":"`justUpperCaseLetters` in","Fragments":["a"]},{"Key":"in a","Fragments":["more","map","field","team,","particular","single","comment","match/case","codebase","companion","list","dream.","dream,","more","single","method","Java","variable","separate","Utils"]},{"Key":"a more","Fragments":["functional","straightforward","specific","compact","functional","functional","intention","straightforward","functional","functional"]},{"Key":"more functional","Fragments":["way","solution?","way.","way","style","way"]},{"Key":"functional way","Fragments":["with","to","to","to"]},{"Key":"way with","Fragments":["`.partition`"]},{"Key":"with `.partition`","Fragments":["but"]},{"Key":"`.partition` but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["not","a","not","not","still","open"]},{"Key":"not good","Fragments":["enough","at"]},{"Key":"good enough","Fragments":["with"]},{"Key":"enough with","Fragments":["Scala"]},{"Key":"with Scala","Fragments":["yet","so"]},{"Key":"Scala yet","Fragments":[":P"]},{"Key":"This is","Fragments":["my","just","so","definitely","my","definitely","why","a","quite","the","half-way","not","one","a","bit","a","my","my","probably","probably","a","done","actually"]},{"Key":"is my","Fragments":["first","first","new","first","first","solution,","first"]},{"Key":"my first","Fragments":["Scala","program","Scala","pass","try.","submit.","submit.","draft."]},{"Key":"first Scala","Fragments":["code","code,","exercise!"]},{"Key":"Scala code","Fragments":["ever.","should,"]},{"Key":"code ever.","Fragments":["Please"]},{"Key":"ever. Please","Fragments":["don't"]},{"Key":"Please don't","Fragments":["hold"]},{"Key":"don't hold","Fragments":["back!"]},{"Key":"could have","Fragments":["let","a","separate","written","used"]},{"Key":"have let","Fragments":["Scala"]},{"Key":"let Scala","Fragments":["infer"]},{"Key":"Scala infer","Fragments":["the"]},{"Key":"infer the","Fragments":["return"]},{"Key":"the return","Fragments":["type","type","type","value","value","keyword.","keyword","value","types","types","statements","value","value"]},{"Key":"return type","Fragments":["of","anyway.","of"]},{"Key":"type of","Fragments":["`hey`,","`hey`","`hey`?","a","solution","prompt","message"]},{"Key":"of `hey`,","Fragments":["as","the"]},{"Key":"`hey`, as","Fragments":["I"]},{"Key":"as I","Fragments":["did","can","think","did"]},{"Key":"I did","Fragments":["in","not","most","figure","use","it","another","a"]},{"Key":"did in","Fragments":["the"]},{"Key":"the private","Fragments":["methods.","methods","method"]},{"Key":"not sure","Fragments":["what","that","how","there","about","if","how","if","if","whether","I","what","if","that","it"]},{"Key":"sure what","Fragments":["the","good","happened"]},{"Key":"what the","Fragments":["conventions","intention","Scala","original","correct","function","function","function","unit"]},{"Key":"the conventions","Fragments":["are,"]},{"Key":"conventions are,","Fragments":["but"]},{"Key":"are, but","Fragments":["my"]},{"Key":"but my","Fragments":["thinking"]},{"Key":"my thinking","Fragments":["was"]},{"Key":"thinking was","Fragments":["this."]},{"Key":"was this.","Fragments":["It's"]},{"Key":"this. It's","Fragments":["nice"]},{"Key":"It's nice","Fragments":["to"]},{"Key":"nice to","Fragments":["be"]},{"Key":"be explicit","Fragments":["about","as"]},{"Key":"explicit about","Fragments":["public"]},{"Key":"about public","Fragments":["APIs,"]},{"Key":"public APIs,","Fragments":["especially"]},{"Key":"APIs, especially","Fragments":["with"]},{"Key":"especially with","Fragments":["a","the"]},{"Key":"a poorly","Fragments":["named"]},{"Key":"poorly named","Fragments":["method"]},{"Key":"named method","Fragments":["like"]},{"Key":"method like","Fragments":["`hey`."]},{"Key":"like `hey`.","Fragments":["For"]},{"Key":"`hey`. For","Fragments":["private"]},{"Key":"For private","Fragments":["methods,"]},{"Key":"private methods,","Fragments":["it's","not"]},{"Key":"methods, it's","Fragments":["less"]},{"Key":"it's less","Fragments":["important,"]},{"Key":"less important,","Fragments":["and"]},{"Key":"important, and","Fragments":["names"]},{"Key":"and names","Fragments":["like"]},{"Key":"names like","Fragments":["`isSomething`"]},{"Key":"like `isSomething`","Fragments":["clearly"]},{"Key":"`isSomething` clearly","Fragments":["communicate"]},{"Key":"clearly communicate","Fragments":["the"]},{"Key":"communicate the","Fragments":["return"]},{"Key":"good to","Fragments":["me!","me!","me"]},{"Key":"to me!","Fragments":["I","I"]},{"Key":"me! I","Fragments":["think","agree"]},{"Key":"think your","Fragments":["reasons","intentions","solution","solution"]},{"Key":"your reasons","Fragments":["for"]},{"Key":"reasons for","Fragments":["specifying"]},{"Key":"for specifying","Fragments":["the"]},{"Key":"specifying the","Fragments":["type"]},{"Key":"the type","Fragments":["of","system","`String`","of","system"]},{"Key":"of `hey`","Fragments":["are","are","so"]},{"Key":"`hey` are","Fragments":["good.","necessary."]},{"Key":"are good.","Fragments":["But"]},{"Key":"good. But","Fragments":["don't"]},{"Key":"don't you","Fragments":["need"]},{"Key":"you need","Fragments":["a","to","is","to","to","to","to","to"]},{"Key":"a colon","Fragments":["between"]},{"Key":"colon between","Fragments":["the"]},{"Key":"between the","Fragments":["argument","way","words.","parentheses","size"]},{"Key":"argument list","Fragments":["and"]},{"Key":"list and","Fragments":["the","generating","the","returning","using"]},{"Key":"and the","Fragments":["return","type","non-letter","`AllCaps`","result","if/else","order","guards","validation","colon","`if`","usage","`count`","number","effective","state","last","exception","function","`isQuestion`","possible","nested","shortest"]},{"Key":"of `hey`?","Fragments":["I"]},{"Key":"`hey`? I","Fragments":["can't"]},{"Key":"I can't","Fragments":["get","find","recommend","seem","tell","see"]},{"Key":"can't get","Fragments":["it"]},{"Key":"it to","Fragments":["compile","be","run","see","other","an","this","you","seriously","call","make","build/check","be","be","be","make"]},{"Key":"to compile","Fragments":["without.","and"]},{"Key":" If","Fragments":["you","you're","you","it","you","an","I","you","statements","you","avoiding","you"]},{"Key":"If you","Fragments":["want","don't","still","want","would","push","use","don't","would","are","want","do","change","curry"]},{"Key":"you want","Fragments":["an","for","to,","it","to","to","for"]},{"Key":"want an","Fragments":["extra","empty"]},{"Key":"an extra","Fragments":["challenge,","class"]},{"Key":"extra challenge,","Fragments":["you"]},{"Key":"challenge, you","Fragments":["could"]},{"Key":"could consider","Fragments":["creating","using","mapping"]},{"Key":"consider creating","Fragments":["a"]},{"Key":"creating a","Fragments":["new","new","mutable","map"]},{"Key":"a new","Fragments":["class","robot","name","object","Response","one"]},{"Key":"new class","Fragments":["(maybe","(and"]},{"Key":"class (maybe","Fragments":["`Message`"]},{"Key":"(maybe `Message`","Fragments":["or"]},{"Key":"`Message` or","Fragments":["`Sentence`)"]},{"Key":"or `Sentence`)","Fragments":["which"]},{"Key":"`Sentence`) which","Fragments":["accepts"]},{"Key":"which accepts","Fragments":["a"]},{"Key":"accepts a","Fragments":["`String`"]},{"Key":"a `String`","Fragments":["and"]},{"Key":"`String` and","Fragments":["has"]},{"Key":"and has","Fragments":["the","a"]},{"Key":"has the","Fragments":["`isShout`","[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","additional","best","main","object"]},{"Key":"the `isShout`","Fragments":["etc","etc"]},{"Key":"`isShout` etc","Fragments":["methods","methods"]},{"Key":"etc methods","Fragments":["on","end"]},{"Key":"methods on","Fragments":["it,","`String`s","Seq.","List.","StringOps"]},{"Key":"on it,","Fragments":["and"]},{"Key":"it, and","Fragments":["create"]},{"Key":"and create","Fragments":["an"]},{"Key":"create an","Fragments":["implicit","intermediate","extra","instance"]},{"Key":"an implicit","Fragments":["conversion","conversion","but","parameter","conversion","value"]},{"Key":"implicit conversion","Fragments":["from","from","on","is","in","in"]},{"Key":"conversion from","Fragments":["`String`","string."]},{"Key":"from `String`","Fragments":["to"]},{"Key":"`String` to","Fragments":["your"]},{"Key":"to your","Fragments":["new","new","Feature#envy"]},{"Key":"your new","Fragments":["class","map"]},{"Key":"class (and","Fragments":["put"]},{"Key":"(and put","Fragments":["it"]},{"Key":"put it","Fragments":["somewhere","there."]},{"Key":"it somewhere","Fragments":["that"]},{"Key":"somewhere that","Fragments":["`Bob`"]},{"Key":"that `Bob`","Fragments":["will"]},{"Key":"`Bob` will","Fragments":["have"]},{"Key":"will have","Fragments":["access"]},{"Key":"have access","Fragments":["to"]},{"Key":"access to","Fragments":["it,"]},{"Key":"to it,","Fragments":["such"]},{"Key":"it, such","Fragments":["as"]},{"Key":"such as","Fragments":["`Bob`'s","`currentName`","'-'","`map`"]},{"Key":"as `Bob`'s","Fragments":["companion"]},{"Key":"`Bob`'s companion","Fragments":["object)"]},{"Key":"companion object)","Fragments":["so"]},{"Key":"object) so","Fragments":["you"]},{"Key":"so you","Fragments":["can","might","don't","don't","don't","can","don't","don't","don't"]},{"Key":"can call","Fragments":["the","`reset`","`forall`","`groupBy`"]},{"Key":"call the","Fragments":["predicate","method","`isAllCaps`"]},{"Key":"the predicate","Fragments":["methods","so","is","is"]},{"Key":"predicate methods","Fragments":["directly"]},{"Key":"methods directly","Fragments":["on"]},{"Key":"directly on","Fragments":["`input`.","the","`String`"]},{"Key":" Not","Fragments":["a","sure","the","too"]},{"Key":"Not a","Fragments":["fan"]},{"Key":"a fan","Fragments":["of","of"]},{"Key":"fan of","Fragments":["line","match"]},{"Key":"of line","Fragments":["4"]},{"Key":"line 4","Fragments":["at","to"]},{"Key":"4 at","Fragments":["all."]},{"Key":"at all.","Fragments":["But"]},{"Key":"all. But","Fragments":["I"]},{"Key":"But I","Fragments":["can't","got","found","think","guess"]},{"Key":"can't find","Fragments":["a"]},{"Key":"find a","Fragments":["nicer","built-in","built-in","way","better"]},{"Key":"to update","Fragments":["the","the","the"]},{"Key":"update the","Fragments":["values","responseFor()","exercise"]},{"Key":"the values","Fragments":["in","are"]},{"Key":"values in","Fragments":["a"]},{"Key":"a map","Fragments":["based","with","from","of","that","with","instead"]},{"Key":"map based","Fragments":["on"]},{"Key":"based on","Fragments":["it's","*my*","one","patternmatching","the","how","the","your"]},{"Key":"on it's","Fragments":["current"]},{"Key":"it's current","Fragments":["value,"]},{"Key":"current value,","Fragments":["other"]},{"Key":"value, other","Fragments":["than"]},{"Key":"other than","Fragments":["to","a"]},{"Key":"than to","Fragments":["actually"]},{"Key":"to actually","Fragments":["implement","benchmark","create"]},{"Key":"actually implement","Fragments":["the"]},{"Key":"implement the","Fragments":["missing"]},{"Key":"the missing","Fragments":["function"]},{"Key":"missing function","Fragments":["to"]},{"Key":"function to","Fragments":["do","make","destructure","validate","get"]},{"Key":" Rather","Fragments":["than","then","than","than","than"]},{"Key":"Rather than","Fragments":["using","using","creating","use","using","calling"]},{"Key":"than using","Fragments":["the","**return**","regex.","`letter"]},{"Key":"the `_1`","Fragments":["and"]},{"Key":"`_1` and","Fragments":["`_2`","`_2`)."]},{"Key":"and `_2`","Fragments":["methods"]},{"Key":"`_2` methods","Fragments":["(which"]},{"Key":"methods (which","Fragments":["I"]},{"Key":"(which I","Fragments":["understand"]},{"Key":"I understand","Fragments":["are","your","your","now:"]},{"Key":"understand are","Fragments":["rarely"]},{"Key":"are rarely","Fragments":["used)"]},{"Key":"rarely used)","Fragments":["you"]},{"Key":"used) you","Fragments":["could"]},{"Key":"could use","Fragments":["a","String's","```str.toLowerCase.split(\"[^\\\\w']+\")```",".count","it","it","the","`value.forall","the","the","the","```str.forall(options.contains)```","combination"]},{"Key":"use a","Fragments":["pattern","val","Queue","`defaultValue`?","for","partial","direct"]},{"Key":"pattern match","Fragments":["to","on","inside","approach.","function,","you","value","clauses","on"]},{"Key":"match to","Fragments":["extract"]},{"Key":"to extract","Fragments":["the"]},{"Key":"extract the","Fragments":["values.","guard"]},{"Key":"the values.","Fragments":["Something"]},{"Key":"values. Something","Fragments":["like"]},{"Key":"Something like","Fragments":["this:","\"[^\\\\w']+\""]},{"Key":" (a.toList","Fragments":["zip"]},{"Key":"(a.toList zip","Fragments":["b.toList).count(nonMatching"]},{"Key":"zip b.toList).count(nonMatching","Fragments":["_)"]},{"Key":"b.toList).count(nonMatching _)","Fragments":["count"]},{"Key":"_) count","Fragments":["{"]},{"Key":" case","Fragments":["(x,","silent","Question(_)","_","object","Question()","_","YellingPattern(_)","....","...","(diff,","pattern(_)","_"]},{"Key":"case (x,","Fragments":["y)","y)","y)"]},{"Key":"(x, y)","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"y) =\u003e","Fragments":["x","x","x"]},{"Key":"=\u003e x","Fragments":["!=","!=","!=","!=","exists"]},{"Key":"x !=","Fragments":["y","y","x.toLowerCase`","y","y"]},{"Key":"There's actually","Fragments":["no"]},{"Key":"actually no","Fragments":["need"]},{"Key":"no need","Fragments":["to","for","to","to","for","to","for","to","to"]},{"Key":"to call","Fragments":["`toList`","`toCharArray`.","`nextInt(n)`.","`word.toList.sorted`;"]},{"Key":"call `toList`","Fragments":["on"]},{"Key":"`toList` on","Fragments":["the"]},{"Key":"the input","Fragments":["strings.","before",":)","sequence","validation","list","is","String","data","to","word","list."]},{"Key":"input strings.","Fragments":["Slightly"]},{"Key":"strings. Slightly","Fragments":["more"]},{"Key":"Slightly more","Fragments":["descriptive"]},{"Key":"more descriptive","Fragments":["variable","like"]},{"Key":"descriptive variable","Fragments":["names"]},{"Key":"variable names","Fragments":["than","non-domain","for","through","for"]},{"Key":"names than","Fragments":["`a`"]},{"Key":"than `a`","Fragments":["and"]},{"Key":"`a` and","Fragments":["`b`","`b`","the","`b`."]},{"Key":"and `b`","Fragments":["could","to"]},{"Key":"`b` could","Fragments":["be"]},{"Key":"be helpful","Fragments":["though!"]},{"Key":" You","Fragments":["haven't","might","could","can","might","can","can","can","can","can","can","don't","can","could","could","could","can","could","may","should","should","could","could","could","could","don't","could","could","might","might","can","could","can","could","could","could","might","have","are","could","are","could","really","used","are","are","can","could","can","can","are","should","are"]},{"Key":"You haven't","Fragments":["surrounded"]},{"Key":"haven't surrounded","Fragments":["the"]},{"Key":"surrounded the","Fragments":["body"]},{"Key":"the body","Fragments":["of"]},{"Key":"body of","Fragments":["`nonMatching`"]},{"Key":"of `nonMatching`","Fragments":["with"]},{"Key":"`nonMatching` with","Fragments":["curly"]},{"Key":"with curly","Fragments":["braces,"]},{"Key":"curly braces,","Fragments":["which","too,"]},{"Key":"braces, which","Fragments":["I"]},{"Key":"which I","Fragments":["like","think"]},{"Key":"I like","Fragments":["-","that","the","the","that","your","the","how","that","this","your","the","your","is","the","your","your","the","this","your","this","how","the","about","the","it."]},{"Key":"like -","Fragments":["but"]},{"Key":"- but","Fragments":["you","shouldn't","they're","that","I"]},{"Key":"but you","Fragments":["have","might","can","don't","get","pulled","do"]},{"Key":"you have","Fragments":["with","on","abstractions","criticism,","to","to"]},{"Key":"have with","Fragments":["`compute`"]},{"Key":"with `compute`","Fragments":["-"]},{"Key":"`compute` -","Fragments":["any","so"]},{"Key":"- any","Fragments":["reason?"]},{"Key":" Length","Fragments":["and"]},{"Key":"Length and","Fragments":["indexing"]},{"Key":"and indexing","Fragments":["is"]},{"Key":"indexing is","Fragments":["a"]},{"Key":"a constant","Fragments":["time","time","with","instead"]},{"Key":"constant time","Fragments":["operation","operation"]},{"Key":"time operation","Fragments":["for","for"]},{"Key":"operation for","Fragments":["Java","Java"]},{"Key":"for Java","Fragments":["strings.","strings."]},{"Key":"Java strings.","Fragments":["Using"]},{"Key":"strings. Using","Fragments":["lists,"]},{"Key":"Using lists,","Fragments":["zip,"]},{"Key":"lists, zip,","Fragments":["etc."]},{"Key":"zip, etc.","Fragments":["would"]},{"Key":"etc. would","Fragments":["do"]},{"Key":"would do","Fragments":["a"]},{"Key":"do a","Fragments":["lot","second","`a.zip(b).count`","quick"]},{"Key":"a lot","Fragments":["of","like","better.","of","of","of","of","better.","of","of","of","for","of","of","of","of"]},{"Key":"lot of","Fragments":["unnecessary","useful","useful","cool","people","useful","list","collection","work","maps","that,","iterations"]},{"Key":"of unnecessary","Fragments":["allocations"]},{"Key":"unnecessary allocations","Fragments":["and"]},{"Key":"allocations and","Fragments":["garbage"]},{"Key":"and garbage","Fragments":["collection."]},{"Key":"garbage collection.","Fragments":["Range"]},{"Key":"collection. Range","Fragments":["shouldn't"]},{"Key":"Range shouldn't","Fragments":["create"]},{"Key":"shouldn't create","Fragments":["an"]},{"Key":"an intermediate","Fragments":["list"]},{"Key":"intermediate list","Fragments":["for"]},{"Key":"list for","Fragments":["the"]},{"Key":"the count","Fragments":["operation.","if","method.","method","block.","and","function"]},{"Key":" Scala's","Fragments":["lists","regex"]},{"Key":"Scala's lists","Fragments":["have"]},{"Key":"lists have","Fragments":["`zip`"]},{"Key":"have `zip`","Fragments":["and"]},{"Key":"`zip` and","Fragments":["`count`","`count`"]},{"Key":"and `count`","Fragments":["methods","much"]},{"Key":"`count` methods","Fragments":["which"]},{"Key":"methods which","Fragments":["do"]},{"Key":"which do","Fragments":["pretty"]},{"Key":"do pretty","Fragments":["much"]},{"Key":"pretty much","Fragments":["exactly","the"]},{"Key":"much exactly","Fragments":["what"]},{"Key":"exactly what","Fragments":["you","you","runtime","your"]},{"Key":"what you","Fragments":["want","call","mean","need","see","think","want."]},{"Key":"want for","Fragments":["this","example"]},{"Key":"for this","Fragments":["exercise.","code;","using","when","kind","problem","particular","kind","kind","exercise."]},{"Key":" That","Fragments":["creates","made","way"]},{"Key":"That creates","Fragments":["garbage,"]},{"Key":"creates garbage,","Fragments":["this"]},{"Key":"garbage, this","Fragments":["does"]},{"Key":"this does","Fragments":["not."]},{"Key":"If you're","Fragments":["really","going","going"]},{"Key":"you're really","Fragments":["that"]},{"Key":"really that","Fragments":["concerned"]},{"Key":"that concerned","Fragments":["about"]},{"Key":"concerned about","Fragments":["intermediate"]},{"Key":"about intermediate","Fragments":["garbage"]},{"Key":"intermediate garbage","Fragments":["objects"]},{"Key":"garbage objects","Fragments":["I","they","get"]},{"Key":"objects I","Fragments":["think"]},{"Key":"you might","Fragments":["be","as","want","want","want","create","benefit"]},{"Key":"might be","Fragments":["better","able","any","better","nice","like","clearer","broken","to","more","easier","preferable)","useful","more","a","zero."]},{"Key":"be better","Fragments":["off","to","to","to","to","readable","to"]},{"Key":"better off","Fragments":["writing"]},{"Key":"off writing","Fragments":["this"]},{"Key":"writing this","Fragments":["in","that"]},{"Key":"this in","Fragments":["C!","company","Scala."]},{"Key":"in C!","Fragments":["Language","These"]},{"Key":"C! Language","Fragments":["implementations"]},{"Key":"Language implementations","Fragments":["have"]},{"Key":"implementations have","Fragments":["garbage"]},{"Key":"have garbage","Fragments":["collection"]},{"Key":"garbage collection","Fragments":["for","down"]},{"Key":"collection for","Fragments":["a"]},{"Key":"a good","Fragments":["reason.","idea,","habit.","name","balance.","question.","way","solution.","initial","place","start."]},{"Key":"good reason.","Fragments":["Why"]},{"Key":"reason. Why","Fragments":["not"]},{"Key":"Why not","Fragments":["optimize","use","define"]},{"Key":"not optimize","Fragments":["for"]},{"Key":"optimize for","Fragments":["readability?","speed"]},{"Key":"for readability?","Fragments":["(by"]},{"Key":"readability? (by","Fragments":["humans?)"]},{"Key":" \"Write","Fragments":["slow"]},{"Key":"\"Write slow","Fragments":["code"]},{"Key":"slow code","Fragments":["because","than"]},{"Key":"code because","Fragments":["you're"]},{"Key":"because you're","Fragments":["using"]},{"Key":"you're using","Fragments":["Scala\"","it","them"]},{"Key":"using Scala\"","Fragments":["isn't"]},{"Key":"Scala\" isn't","Fragments":["a"]},{"Key":"isn't a","Fragments":["very","Map.","problem,"]},{"Key":"a very","Fragments":["convincing","interesting","nice","fuctional","functional","smal","ugly,","concise","Java","neat"]},{"Key":"very convincing","Fragments":["argument."]},{"Key":"convincing argument.","Fragments":["This"]},{"Key":"argument. This","Fragments":["implementation"]},{"Key":"This implementation","Fragments":["is"]},{"Key":"implementation is","Fragments":["still","a","that"]},{"Key":"is still","Fragments":["purely","just"]},{"Key":"still purely","Fragments":["functional,"]},{"Key":"purely functional,","Fragments":["concise,"]},{"Key":"functional, concise,","Fragments":["and"]},{"Key":"concise, and","Fragments":["uses"]},{"Key":"and uses","Fragments":["FP"]},{"Key":"uses FP","Fragments":["paradigms."]},{"Key":"FP paradigms.","Fragments":["If"]},{"Key":"paradigms. If","Fragments":["Scala"]},{"Key":"If Scala","Fragments":["had"]},{"Key":"Scala had","Fragments":["zipWith","a(nother)"]},{"Key":"had zipWith","Fragments":["(to"]},{"Key":"zipWith (to","Fragments":["avoid"]},{"Key":"(to avoid","Fragments":["the","building"]},{"Key":"avoid the","Fragments":["unnecessary","return-keyword","use","use","need"]},{"Key":"the unnecessary","Fragments":["tuple)","indirection"]},{"Key":"unnecessary tuple)","Fragments":["and"]},{"Key":"tuple) and","Fragments":["lazy"]},{"Key":"and lazy","Fragments":["lists"]},{"Key":"lazy lists","Fragments":["(to"]},{"Key":"lists (to","Fragments":["avoid"]},{"Key":"avoid building","Fragments":["up"]},{"Key":"building up","Fragments":["an"]},{"Key":"up an","Fragments":["O(n)"]},{"Key":"an O(n)","Fragments":["sized"]},{"Key":"O(n) sized","Fragments":["data"]},{"Key":"sized data","Fragments":["structure"]},{"Key":"data structure","Fragments":["that"]},{"Key":"structure that","Fragments":["is"]},{"Key":"is then","Fragments":["immediately"]},{"Key":"then immediately","Fragments":["discarded)"]},{"Key":"immediately discarded)","Fragments":["then"]},{"Key":"discarded) then","Fragments":["it"]},{"Key":"then it","Fragments":["would"]},{"Key":"be more","Fragments":["compelling","amenable","about","like","concise","improved","readable!","readable","descriptive.","efficient,","idiomatic,","meaningful.","robust:","readable","readable.","clearly","*higher-level*,","efficient","naturally","logical","readable","confident","readable."]},{"Key":"more compelling","Fragments":["to","to"]},{"Key":"compelling to","Fragments":["do","me."]},{"Key":"do it","Fragments":["the","in","in","this"]},{"Key":"it the","Fragments":["way","\"old-school\""]},{"Key":"the way","Fragments":["that","the","precedence","needed","it","you"]},{"Key":"way that","Fragments":["you've"]},{"Key":"that you've","Fragments":["proposed."]},{"Key":" @jay","Fragments":["Awesome"]},{"Key":"@jay Awesome","Fragments":["feedback,"]},{"Key":"Awesome feedback,","Fragments":["thank"]},{"Key":"feedback, thank","Fragments":["you!"]},{"Key":" Fixed","Fragments":["the"]},{"Key":"Fixed the","Fragments":["compilation"]},{"Key":"the compilation","Fragments":["error.","failed"]},{"Key":"compilation error.","Fragments":["Not"]},{"Key":"error. Not","Fragments":["sure"]},{"Key":"Not sure","Fragments":["how","what","if","if","if"]},{"Key":"sure how","Fragments":["that","common","yet."]},{"Key":"how that","Fragments":["happened.","could"]},{"Key":"I'll try","Fragments":["the","implementing","to"]},{"Key":"try the","Fragments":["extra"]},{"Key":"the extra","Fragments":["challenge!","step","backslashes"]},{"Key":" Extracted","Fragments":["`Utterance`"]},{"Key":"Extracted `Utterance`","Fragments":["to"]},{"Key":"`Utterance` to","Fragments":["its"]},{"Key":"to its","Fragments":["own","own"]},{"Key":"its own","Fragments":["class.","function","method."]},{"Key":"own class.","Fragments":["Next"]},{"Key":"class. Next","Fragments":["step:"]},{"Key":"Next step:","Fragments":["try"]},{"Key":"step: try","Fragments":["making"]},{"Key":"try making","Fragments":["it"]},{"Key":"making it","Fragments":["a"]},{"Key":"it a","Fragments":["companion","different","better","bit","variable","little","little","bit"]},{"Key":"a companion","Fragments":["object","object","object.","object","object.","object"]},{"Key":"companion object","Fragments":["and","for","you","so","so","of","of","of","if","as","to"]},{"Key":"object and","Fragments":["use"]},{"Key":"and use","Fragments":["an","`++`"]},{"Key":"use an","Fragments":["implicit","underscore:"]},{"Key":" Like","Fragments":["I"]},{"Key":"Like I","Fragments":["say,","said"]},{"Key":"I say,","Fragments":["if"]},{"Key":"say, if","Fragments":["you"]},{"Key":"you don't","Fragments":["want","want","have","need","need","it's","need","have","have","have","mind","recalculate","need","have","have","need","need","have","need","need"]},{"Key":"don't want","Fragments":["to","to","to"]},{"Key":"want to","Fragments":["\"write","make","consider","avoid","go","be","honour","change","give","have","consider","check","consider","bring","use","see","look","test","stick","use","compare","break"]},{"Key":"to \"write","Fragments":["slow"]},{"Key":"\"write slow","Fragments":["code\""]},{"Key":"slow code\"","Fragments":["then"]},{"Key":"code\" then","Fragments":["write"]},{"Key":"then write","Fragments":["everything"]},{"Key":"write everything","Fragments":["in"]},{"Key":"everything in","Fragments":["C!","one","a","the","one."]},{"Key":"C! These","Fragments":["high-level"]},{"Key":"These high-level","Fragments":["constructs"]},{"Key":"high-level constructs","Fragments":["are"]},{"Key":"constructs are","Fragments":["a"]},{"Key":"are a","Fragments":["tradeoff","bunch","few","barrier"]},{"Key":"a tradeoff","Fragments":["of"]},{"Key":"tradeoff of","Fragments":["readability,"]},{"Key":"of readability,","Fragments":["maintainability","but"]},{"Key":"readability, maintainability","Fragments":["\u0026"]},{"Key":"maintainability \u0026","Fragments":["productivity"]},{"Key":"\u0026 productivity","Fragments":["for"]},{"Key":"productivity for","Fragments":["execution"]},{"Key":"for execution","Fragments":["time."]},{"Key":"execution time.","Fragments":["If"]},{"Key":"time. If","Fragments":["you"]},{"Key":"to make","Fragments":["that","`isShouting`","tests","modifications,","this","`s`","`toString`","isShouting","your","`speech`","the","the","`val`'s","the","Responders","your","that","the","the","the","a","this","it","it","maps,","your","it","it","things","the","you"]},{"Key":"make that","Fragments":["trade-off","more"]},{"Key":"that trade-off","Fragments":["you"]},{"Key":"trade-off you","Fragments":["don't"]},{"Key":"have to,","Fragments":["but"]},{"Key":"to, but","Fragments":["you"]},{"Key":"might as","Fragments":["well"]},{"Key":"as well","Fragments":["choose","on","`count`","as","in","would","and"]},{"Key":"well choose","Fragments":["to"]},{"Key":"choose to","Fragments":["or"]},{"Key":"to or","Fragments":["choose"]},{"Key":"or choose","Fragments":["not"]},{"Key":"choose not","Fragments":["to.","to"]},{"Key":" Btw","Fragments":["-"]},{"Key":"Btw -","Fragments":["am"]},{"Key":"- am","Fragments":["I"]},{"Key":"am I","Fragments":["right"]},{"Key":"I right","Fragments":["in"]},{"Key":"right in","Fragments":["thinking","`hey`"]},{"Key":"in thinking","Fragments":["the"]},{"Key":"thinking the","Fragments":["two"]},{"Key":"the two","Fragments":["examples","dnaStrand","characters","strings,","`val`s","input","values"]},{"Key":"two examples","Fragments":["aren't"]},{"Key":"examples aren't","Fragments":["any"]},{"Key":"aren't any","Fragments":["different"]},{"Key":"any different","Fragments":["in"]},{"Key":"different in","Fragments":["speed,"]},{"Key":"in speed,","Fragments":["just"]},{"Key":"speed, just","Fragments":["in"]},{"Key":"just in","Fragments":["the"]},{"Key":"the amount","Fragments":["of"]},{"Key":"amount of","Fragments":["garbage"]},{"Key":"of garbage","Fragments":["objects"]},{"Key":"objects they","Fragments":["generate?"]},{"Key":"they generate?","Fragments":["(which"]},{"Key":"generate? (which","Fragments":["admittedly"]},{"Key":"(which admittedly","Fragments":["could"]},{"Key":"admittedly could","Fragments":["cause"]},{"Key":"could cause","Fragments":["speed"]},{"Key":"cause speed","Fragments":["issues"]},{"Key":"speed issues","Fragments":["due"]},{"Key":"issues due","Fragments":["to"]},{"Key":"due to","Fragments":["garbage","immediately","being"]},{"Key":"to garbage","Fragments":["collection"]},{"Key":"collection down","Fragments":["the"]},{"Key":"down the","Fragments":["line","foldLeft"]},{"Key":"the line","Fragments":["-"]},{"Key":"line -","Fragments":["but"]},{"Key":"but shouldn't","Fragments":["the"]},{"Key":"shouldn't the","Fragments":["garbage"]},{"Key":"the garbage","Fragments":["objects"]},{"Key":"objects get","Fragments":["collected"]},{"Key":"get collected","Fragments":["very"]},{"Key":"collected very","Fragments":["quickly"]},{"Key":"very quickly","Fragments":["due"]},{"Key":"quickly due","Fragments":["to"]},{"Key":"to immediately","Fragments":["going"]},{"Key":"immediately going","Fragments":["out"]},{"Key":"going out","Fragments":["of"]},{"Key":"out of","Fragments":["scope?)","curiosity:","hand."]},{"Key":"don't think","Fragments":["I'm","my","regular","this"]},{"Key":"think I'm","Fragments":["going"]},{"Key":"I'm going","Fragments":["to"]},{"Key":"going to","Fragments":["convince","try","treat","treat","find","be","make","make","need","happen","be"]},{"Key":"to convince","Fragments":["you"]},{"Key":"convince you","Fragments":["though,"]},{"Key":"you though,","Fragments":["so"]},{"Key":"though, so","Fragments":["I'm"]},{"Key":"so I'm","Fragments":["not","personally"]},{"Key":"not going","Fragments":["to"]},{"Key":"to try","Fragments":["anymore","it.","my","to","it","it"]},{"Key":"try anymore","Fragments":["-"]},{"Key":"anymore -","Fragments":["we're"]},{"Key":"- we're","Fragments":["coming"]},{"Key":"we're coming","Fragments":["from"]},{"Key":"coming from","Fragments":["fundamentally","ruby","Java","ruby-land."]},{"Key":"from fundamentally","Fragments":["different"]},{"Key":"fundamentally different","Fragments":["viewpoints."]},{"Key":"different viewpoints.","Fragments":["I"]},{"Key":"viewpoints. I","Fragments":["write"]},{"Key":"I write","Fragments":["code"]},{"Key":"write code","Fragments":["to","that"]},{"Key":"be read","Fragments":["first,"]},{"Key":"read first,","Fragments":["and"]},{"Key":"first, and","Fragments":["then"]},{"Key":"then optimized","Fragments":["later"]},{"Key":"optimized later","Fragments":["*if"]},{"Key":"later *if","Fragments":["needed*,"]},{"Key":"*if needed*,","Fragments":["you"]},{"Key":"needed*, you","Fragments":["appear"]},{"Key":"you appear","Fragments":["to"]},{"Key":"appear to","Fragments":["write"]},{"Key":"to write","Fragments":["it","a","the","and","your","`","a","`seq.filter(isAnagram)`","this","this"]},{"Key":"write it","Fragments":["to","something"]},{"Key":"be optimized","Fragments":["first"]},{"Key":"optimized first","Fragments":["-"]},{"Key":"first -","Fragments":["sometimes,"]},{"Key":"- sometimes,","Fragments":["it"]},{"Key":"sometimes, it","Fragments":["seems"]},{"Key":"it seems","Fragments":["to","worth","like","reasonable."]},{"Key":"seems to","Fragments":["me","have,","be","make","be"]},{"Key":"to me","Fragments":["at","it","in","a","but","that","that"]},{"Key":"me at","Fragments":["least,"]},{"Key":"at least,","Fragments":["without"]},{"Key":"least, without","Fragments":["questioning"]},{"Key":"without questioning","Fragments":["if"]},{"Key":"questioning if","Fragments":["that"]},{"Key":"if that","Fragments":["optimization","assumption"]},{"Key":"that optimization","Fragments":["is"]},{"Key":"optimization is","Fragments":["needed"]},{"Key":"is needed","Fragments":["or"]},{"Key":"needed or","Fragments":["worth"]},{"Key":"or worth","Fragments":["the"]},{"Key":"worth the","Fragments":["cost"]},{"Key":"the cost","Fragments":[";-)"]},{"Key":" Just","Fragments":["two","saying","moved","for","testing"]},{"Key":"Just two","Fragments":["more"]},{"Key":"two more","Fragments":["things,"]},{"Key":"more things,","Fragments":["and"]},{"Key":"things, and","Fragments":["then"]},{"Key":"then I'll","Fragments":["shut"]},{"Key":"I'll shut","Fragments":["up"]},{"Key":"shut up","Fragments":["and"]},{"Key":"up and","Fragments":["leave","down"]},{"Key":"and leave","Fragments":["you"]},{"Key":"leave you","Fragments":["to"]},{"Key":"you to","Fragments":["it.","replace","give","figure","omit","get","write","see","break"]},{"Key":"to it.","Fragments":["A"]},{"Key":"it. A","Fragments":["quote"]},{"Key":"A quote","Fragments":["from"]},{"Key":"quote from","Fragments":["the"]},{"Key":"the \"About\"","Fragments":["page"]},{"Key":"\"About\" page","Fragments":["of"]},{"Key":"page of","Fragments":["this"]},{"Key":"of this","Fragments":["site:","as","code","solution.","doesn't","exercise","feature.","exercise"]},{"Key":" \"The","Fragments":["goal"]},{"Key":"\"The goal","Fragments":["of"]},{"Key":"goal of","Fragments":["exercism"]},{"Key":"of exercism","Fragments":["is","for"]},{"Key":"exercism is","Fragments":["to"]},{"Key":"is to","Fragments":["think","have","contain","consider","just","also","compute","use","compute","use","compare"]},{"Key":"to think","Fragments":["deeply","about.","about"]},{"Key":"think deeply","Fragments":["about"]},{"Key":"deeply about","Fragments":["simple,"]},{"Key":"about simple,","Fragments":["expressive,"]},{"Key":"simple, expressive,","Fragments":["readable"]},{"Key":"expressive, readable","Fragments":["code.\""]},{"Key":" And","Fragments":["for","for"]},{"Key":"And for","Fragments":["comparison,","the"]},{"Key":"for comparison,","Fragments":["a"]},{"Key":"comparison, a","Fragments":["solution"]},{"Key":"a solution","Fragments":["that","optimized","that"]},{"Key":"solution that","Fragments":["foregrounds","uses","directly","groups"]},{"Key":"that foregrounds","Fragments":["readability"]},{"Key":"foregrounds readability","Fragments":["at"]},{"Key":"readability at","Fragments":["a"]},{"Key":"at a","Fragments":["runtime","one-liner","time"]},{"Key":"a runtime","Fragments":["cost"]},{"Key":"runtime cost","Fragments":["that","they"]},{"Key":"cost that","Fragments":["I"]},{"Key":"that I","Fragments":["think","try","haven't","resent","could","might","had","had","was","pass","can","didn't","had","considered"]},{"Key":"think is","Fragments":["more","part"]},{"Key":"is more","Fragments":["than","than","a","efficient","compelling","readable","about","readable","readable","functional,","concise","readable","efficient","readable."]},{"Key":"more than","Fragments":["worth","just","once.","one","once.","mine","once,"]},{"Key":"than worth","Fragments":["it:"]},{"Key":" def","Fragments":["compute(strand:","grade(i:","dummyFunction(s:String)","unapply(statement:","hey(statement:String):String","isShouting():Boolean","isQuestion():Boolean","isSilence():Boolean","unapply(msg:","unapply(msg:","containsAtLeastOneLetter","containsLetters(sentence:","hey(args:","genName:String","isLeap:","accumulate[A,B](xs:"]},{"Key":"def compute(strand:","Fragments":["String,"]},{"Key":"compute(strand: String,","Fragments":["other:"]},{"Key":"String, other:","Fragments":["String)"]},{"Key":"other: String)","Fragments":["="]},{"Key":"String) =","Fragments":["{","statement.endsWith(\"?\")","msg.trim.isEmpty`","Option(msg)","Option(msg)","s.last","{","sentence.exists(c"]},{"Key":" strand","Fragments":["zip"]},{"Key":"strand zip","Fragments":["other"]},{"Key":"zip other","Fragments":["count"]},{"Key":"other count","Fragments":["{"]},{"Key":"count {","Fragments":["case","case(a,b)","_==nucleotide}"]},{"Key":"{ case","Fragments":["(x,","(x,","(a,","(s1,","(b1,"]},{"Key":"!= y","Fragments":["}","}","}`"]},{"Key":" Using","Fragments":["an","`unapply`","`List.count`","`\"[^\\\\W']+\"`","the","```return```","`synchronized`","StringOps"]},{"Key":"Using an","Fragments":["implicit.","enumerable"]},{"Key":"an implicit.","Fragments":["This"]},{"Key":"implicit. This","Fragments":["is"]},{"Key":"is just","Fragments":["to","used","using"]},{"Key":"just to","Fragments":["learn","do","create","hold","use"]},{"Key":"learn Scala","Fragments":["–"]},{"Key":"Scala –","Fragments":["to"]},{"Key":"– to","Fragments":["my"]},{"Key":"to my","Fragments":["eyes,"]},{"Key":"my eyes,","Fragments":["this"]},{"Key":"eyes, this","Fragments":["made"]},{"Key":"this made","Fragments":["the"]},{"Key":"made the","Fragments":["code","code"]},{"Key":"code harder","Fragments":["to","to"]},{"Key":"harder to","Fragments":["understand,","read","\"parse\"","track"]},{"Key":"to understand,","Fragments":["and","but","but"]},{"Key":"understand, and","Fragments":["of"]},{"Key":"and of","Fragments":["course","course"]},{"Key":"of course","Fragments":["more","to"]},{"Key":"course more","Fragments":["complex."]},{"Key":"agree it's","Fragments":["perhaps"]},{"Key":"it's perhaps","Fragments":["a","not"]},{"Key":"perhaps a","Fragments":["bit","bit"]},{"Key":"a bit","Fragments":["more","easier","more","over","simpler.","unfamiliar","picky,","of","\"over","concerned","odd.","more","more","more","more","weak.","out","more.","longer","long","more","wary","better","but","more","simpler","in","odd","too","unnecessary","from","easier","challenging","harder"]},{"Key":"bit more","Fragments":["complex","functional.","multilingual","efficiently.","readable.","succinct.","sense.","complex"]},{"Key":"more complex","Fragments":["using","than"]},{"Key":"complex using","Fragments":["an"]},{"Key":"using an","Fragments":["implicit","upperCont","upperCont"]},{"Key":"implicit but","Fragments":["I"]},{"Key":"like that","Fragments":["the","I","you","(regarding","this"]},{"Key":"that the","Fragments":["`isShout`","zip","zip","name","\"not","emphasis","objects","result","example","`generateNumber`","set","function","\"test\"","\"command\"","alternative","word","sum","string","compilation","function","example","leading"]},{"Key":"methods end","Fragments":["up"]},{"Key":"end up","Fragments":["on","simplifying"]},{"Key":"up on","Fragments":["a","acronyms","Hamming"]},{"Key":"a class","Fragments":["on","Hamming()","member.","and","value.","val,","and"]},{"Key":"class on","Fragments":["which"]},{"Key":"on which","Fragments":["they"]},{"Key":"which they","Fragments":["make"]},{"Key":"they make","Fragments":["sense"]},{"Key":"make sense","Fragments":["-","in"]},{"Key":"sense -","Fragments":["`bob.isShout`"]},{"Key":"- `bob.isShout`","Fragments":["just"]},{"Key":"`bob.isShout` just","Fragments":["doesn't"]},{"Key":"just doesn't","Fragments":["feel"]},{"Key":"doesn't feel","Fragments":["right"]},{"Key":"feel right","Fragments":["to"]},{"Key":"right to","Fragments":["me."]},{"Key":"also really","Fragments":["like"]},{"Key":"really like","Fragments":["\"Utterance\"","the","your","using","using","to","your","how"]},{"Key":"like \"Utterance\"","Fragments":["as"]},{"Key":"\"Utterance\" as","Fragments":["a"]},{"Key":"a name","Fragments":[":-)","calculation","that","for"]},{"Key":"think if","Fragments":["you"]},{"Key":"you create","Fragments":["a"]},{"Key":"create a","Fragments":["companion","new","`Hamming`","method","map","map","map","temporary","Map","`Map[Char,"]},{"Key":"object for","Fragments":["the","you"]},{"Key":"the `Bob`","Fragments":["class"]},{"Key":"`Bob` class","Fragments":["and"]},{"Key":"class and","Fragments":["put","object.","can"]},{"Key":"and put","Fragments":["your"]},{"Key":"put your","Fragments":["implicit"]},{"Key":"your implicit","Fragments":["conversion"]},{"Key":"conversion on","Fragments":["that,"]},{"Key":"on that,","Fragments":["you"]},{"Key":"that, you","Fragments":["won't"]},{"Key":"you won't","Fragments":["need","need","even"]},{"Key":"won't need","Fragments":["to","the"]},{"Key":"do the","Fragments":["import","counts.","toLowerCase","thing","validation","same","heavy","comparison,","same"]},{"Key":"the import","Fragments":["you","is."]},{"Key":"import you","Fragments":["have"]},{"Key":"have on","Fragments":["line"]},{"Key":"on line","Fragments":["5","2","4."]},{"Key":"line 5","Fragments":["-"]},{"Key":"5 -","Fragments":["it"]},{"Key":"- it","Fragments":["will"]},{"Key":"it will","Fragments":["be","be","split"]},{"Key":"will be","Fragments":["automatically","clear","the","compiled","the","made","a"]},{"Key":"be automatically","Fragments":["available"]},{"Key":"automatically available","Fragments":["inside"]},{"Key":"available inside","Fragments":["`Bob`."]},{"Key":"The difference","Fragments":["is"]},{"Key":"difference is","Fragments":["more","small"]},{"Key":"than just","Fragments":["garbage.","checking","having"]},{"Key":"just garbage.","Fragments":["Your"]},{"Key":"garbage. Your","Fragments":["version"]},{"Key":"Your version","Fragments":["iterates"]},{"Key":"version iterates","Fragments":["over"]},{"Key":"iterates over","Fragments":["the"]},{"Key":"over the","Fragments":["strings","strings","two","previous","elements","keys","strings,","strings"]},{"Key":"strings to","Fragments":["zip","see"]},{"Key":"to zip","Fragments":["them,"]},{"Key":"zip them,","Fragments":["and"]},{"Key":"them, and","Fragments":["then","the"]},{"Key":"then does","Fragments":["a"]},{"Key":"does a","Fragments":["separate"]},{"Key":"separate iteration","Fragments":["to"]},{"Key":"iteration to","Fragments":["do"]},{"Key":"the counts.","Fragments":["I"]},{"Key":"counts. I","Fragments":["expect"]},{"Key":"I expect","Fragments":["it"]},{"Key":"expect it","Fragments":["to"]},{"Key":"to run","Fragments":["at","3"]},{"Key":"run at","Fragments":["half"]},{"Key":"at half","Fragments":["the"]},{"Key":"half the","Fragments":["speed"]},{"Key":"the speed","Fragments":["or"]},{"Key":"speed or","Fragments":["worse,"]},{"Key":"or worse,","Fragments":["not"]},{"Key":"worse, not","Fragments":["even"]},{"Key":"not even","Fragments":["including"]},{"Key":"even including","Fragments":["the"]},{"Key":"including the","Fragments":["additional","definitions"]},{"Key":"the additional","Fragments":["GC","benefit"]},{"Key":"additional GC","Fragments":["pressure."]},{"Key":"don't believe","Fragments":["in"]},{"Key":"believe in","Fragments":["using"]},{"Key":"in using","Fragments":["worse"]},{"Key":"using worse","Fragments":["algorithms"]},{"Key":"worse algorithms","Fragments":["for"]},{"Key":"algorithms for","Fragments":["aesthetic"]},{"Key":"for aesthetic","Fragments":["reasons"]},{"Key":"aesthetic reasons","Fragments":["when"]},{"Key":"reasons when","Fragments":["better"]},{"Key":"when better","Fragments":["ones"]},{"Key":"better ones","Fragments":["are"]},{"Key":"ones are","Fragments":["clear"]},{"Key":"are clear","Fragments":["and"]},{"Key":"clear and","Fragments":["not","succinct."]},{"Key":"and not","Fragments":["significantly","a","have"]},{"Key":"not significantly","Fragments":["longer"]},{"Key":"significantly longer","Fragments":["or","and"]},{"Key":"longer or","Fragments":["more","more"]},{"Key":"or more","Fragments":["convoluted.","convoluted\",","whitespaces)."]},{"Key":"had it","Fragments":["in","when"]},{"Key":"it in","Fragments":["my","two","O(n","iteration","Java)","more","my","differences","differences","the"]},{"Key":"my head","Fragments":["that"]},{"Key":"head that","Fragments":["`length`"]},{"Key":"that `length`","Fragments":["would"]},{"Key":"`length` would","Fragments":["iterate"]},{"Key":"would iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["the","the"]},{"Key":"strings too","Fragments":["-"]},{"Key":"too -","Fragments":["but"]},{"Key":"but they're","Fragments":["java"]},{"Key":"they're java","Fragments":["strings,"]},{"Key":"java strings,","Fragments":["aren't"]},{"Key":"strings, aren't","Fragments":["they,"]},{"Key":"aren't they,","Fragments":["not"]},{"Key":"they, not","Fragments":["linked"]},{"Key":"not linked","Fragments":["lists,"]},{"Key":"linked lists,","Fragments":["so"]},{"Key":"lists, so","Fragments":["maybe"]},{"Key":"so maybe","Fragments":["they","your"]},{"Key":"maybe they","Fragments":["don't."]},{"Key":"In terms","Fragments":["of"]},{"Key":"terms of","Fragments":["\"significantly","strings.","readability,"]},{"Key":"of \"significantly","Fragments":["longer"]},{"Key":"\"significantly longer","Fragments":["or"]},{"Key":"more convoluted\",","Fragments":["by"]},{"Key":"convoluted\", by","Fragments":["my"]},{"Key":"by my","Fragments":["count"]},{"Key":"my count","Fragments":["your"]},{"Key":"count your","Fragments":["version"]},{"Key":"your version","Fragments":["takes"]},{"Key":"version takes","Fragments":["twice"]},{"Key":"takes twice","Fragments":["as"]},{"Key":"twice as","Fragments":["much"]},{"Key":"as much","Fragments":["code","-"]},{"Key":"much code","Fragments":["and"]},{"Key":"code and","Fragments":["includes","mine","running"]},{"Key":"and includes","Fragments":["10"]},{"Key":"includes 10","Fragments":["operations"]},{"Key":"10 operations","Fragments":["to"]},{"Key":"operations to","Fragments":["parse"]},{"Key":"to parse","Fragments":["and","one"]},{"Key":"parse and","Fragments":["understand"]},{"Key":"and understand","Fragments":["versus"]},{"Key":"understand versus","Fragments":["3"]},{"Key":"versus 3","Fragments":["in"]},{"Key":"3 in","Fragments":["mine."]},{"Key":"in mine.","Fragments":["I"]},{"Key":"mine. I","Fragments":["think","pulled"]},{"Key":"think that's","Fragments":["significantly","a"]},{"Key":"that's significantly","Fragments":["longer"]},{"Key":"longer and","Fragments":["more","worse"]},{"Key":"and more","Fragments":["convoluted!","efficient","but","imperative","in","to"]},{"Key":"more convoluted!","Fragments":["Here's"]},{"Key":"convoluted! Here's","Fragments":["how"]},{"Key":"Here's how","Fragments":["I"]},{"Key":"how I","Fragments":["count","would"]},{"Key":"I count","Fragments":["it:"]},{"Key":" Operations","Fragments":["in","in"]},{"Key":"Operations in","Fragments":["your","my"]},{"Key":"in your","Fragments":["version:","`compute`","function","last","case","isShouting()","approach.","map","list"]},{"Key":" `until,","Fragments":["length,"]},{"Key":"`until, length,","Fragments":["min,"]},{"Key":"length, min,","Fragments":["length,"]},{"Key":"min, length,","Fragments":["foldLeft,"]},{"Key":"length, foldLeft,","Fragments":["if,"]},{"Key":"foldLeft, if,","Fragments":["a(i),"]},{"Key":"if, a(i),","Fragments":["b(i),"]},{"Key":"a(i), b(i),","Fragments":["!=,"]},{"Key":"b(i), !=,","Fragments":["+`"]},{"Key":"!=, +`","Fragments":["=\u003e"]},{"Key":"+` =\u003e","Fragments":["10"]},{"Key":"=\u003e 10","Fragments":["operations"]},{"Key":" `zip,","Fragments":["count,"]},{"Key":"`zip, count,","Fragments":["!=`"]},{"Key":"count, !=`","Fragments":["=\u003e"]},{"Key":"!=` =\u003e","Fragments":["3"]},{"Key":"=\u003e 3","Fragments":["operations"]},{"Key":" They","Fragments":["are"]},{"Key":"They are","Fragments":["Java"]},{"Key":"are Java","Fragments":["strings,"]},{"Key":"Java strings,","Fragments":["so"]},{"Key":"strings, so","Fragments":["they"]},{"Key":"so they","Fragments":["are","are","didn't","only"]},{"Key":"they are","Fragments":["arrays,","characters","your","testable.","preferred","anagrams.","too","private","private","so","about.","anagrams!","sorted,"]},{"Key":"are arrays,","Fragments":["not"]},{"Key":"arrays, not","Fragments":["lists."]},{"Key":"not lists.","Fragments":["`length`"]},{"Key":"lists. `length`","Fragments":["is"]},{"Key":"`length` is","Fragments":["a"]},{"Key":"I'll submit","Fragments":["a"]},{"Key":"submit a","Fragments":["shorter"]},{"Key":"a shorter","Fragments":["(yet","solution"]},{"Key":"shorter (yet","Fragments":["still"]},{"Key":"(yet still","Fragments":["efficient)"]},{"Key":"still efficient)","Fragments":["version"]},{"Key":"efficient) version","Fragments":["using"]},{"Key":"version using","Fragments":["`count`."]},{"Key":" @susanna","Fragments":["Thanks"]},{"Key":"@susanna Thanks","Fragments":["again!"]},{"Key":"I can","Fragments":["see","get","definitely","see","see","destructure-bind","see","make","say","remove","refactor","gain","see"]},{"Key":"can see","Fragments":["a","it","how","how","a","str1","the"]},{"Key":"see a","Fragments":["case","solution","test","way"]},{"Key":"a case","Fragments":["for","to","class.","here...","class","class","class,","of","class."]},{"Key":"case for","Fragments":["just","companion","the"]},{"Key":"for just","Fragments":["going"]},{"Key":"just going","Fragments":["with"]},{"Key":"going with","Fragments":["private"]},{"Key":"with private","Fragments":["methods"]},{"Key":"private methods","Fragments":["–","into","there"]},{"Key":"methods –","Fragments":["it's"]},{"Key":"– it's","Fragments":["simpler,"]},{"Key":"it's simpler,","Fragments":["and"]},{"Key":"simpler, and","Fragments":["less"]},{"Key":"and less","Fragments":["code."]},{"Key":"less code.","Fragments":["But"]},{"Key":"code. But","Fragments":["there's"]},{"Key":"But there's","Fragments":["definitely"]},{"Key":"there's definitely","Fragments":["a"]},{"Key":"definitely a","Fragments":["case","great"]},{"Key":"case to","Fragments":["be"]},{"Key":"be made","Fragments":["for","immutable","`val`","clear","much","way"]},{"Key":"made for","Fragments":["extracting"]},{"Key":"for extracting","Fragments":["an"]},{"Key":"extracting an","Fragments":["object"]},{"Key":"an object","Fragments":["also.","called","this","class"]},{"Key":"object also.","Fragments":["The"]},{"Key":"also. The","Fragments":["choice"]},{"Key":"The choice","Fragments":["depends"]},{"Key":"choice depends","Fragments":["on"]},{"Key":"depends on","Fragments":["things","your"]},{"Key":"on things","Fragments":["like"]},{"Key":"things like","Fragments":["if","this.","this,"]},{"Key":"like if","Fragments":["you"]},{"Key":"you expect","Fragments":["to","the"]},{"Key":"expect to","Fragments":["also"]},{"Key":"to also","Fragments":["parse","exclude"]},{"Key":"also parse","Fragments":["utterances"]},{"Key":"parse utterances","Fragments":["elsewhere,"]},{"Key":"utterances elsewhere,","Fragments":["if"]},{"Key":"elsewhere, if","Fragments":["you"]},{"Key":"expect the","Fragments":["Bob"]},{"Key":"the Bob","Fragments":["class"]},{"Key":"Bob class","Fragments":["to"]},{"Key":"class to","Fragments":["grow","add","encapsulate"]},{"Key":"to grow","Fragments":["etc."]},{"Key":" Glad","Fragments":["you"]},{"Key":"Glad you","Fragments":["like"]},{"Key":"you like","Fragments":["\"utterance\"!"]},{"Key":"I tried","Fragments":["defining","to","compiling"]},{"Key":"tried defining","Fragments":["the"]},{"Key":"defining the","Fragments":["implicit","pattern","object"]},{"Key":"implicit in","Fragments":["the"]},{"Key":"object, but","Fragments":["that"]},{"Key":"but that","Fragments":["doesn't","can","may","'map'"]},{"Key":"that doesn't","Fragments":["seem","need","need","iterate"]},{"Key":"doesn't seem","Fragments":["to"]},{"Key":"seem to","Fragments":["work","be","be","get"]},{"Key":"to work","Fragments":["–","correctly","the","earlier.","for"]},{"Key":"work –","Fragments":["I'm"]},{"Key":"– I'm","Fragments":["getting"]},{"Key":"I'm getting","Fragments":["the"]},{"Key":"getting the","Fragments":["impression"]},{"Key":"the impression","Fragments":["you","that","that"]},{"Key":"impression you","Fragments":["can"]},{"Key":"can define","Fragments":["implicit"]},{"Key":"define implicit","Fragments":["parameters"]},{"Key":"implicit parameters","Fragments":["that"]},{"Key":"parameters that","Fragments":["way,"]},{"Key":"that way,","Fragments":["but"]},{"Key":"way, but","Fragments":["not"]},{"Key":"but not","Fragments":["implicit","value"]},{"Key":"not implicit","Fragments":["type"]},{"Key":"implicit type","Fragments":["conversions."]},{"Key":"It was","Fragments":["suggested","pretty"]},{"Key":"was suggested","Fragments":["that"]},{"Key":"suggested that","Fragments":["I"]},{"Key":"I try","Fragments":["case","to"]},{"Key":"try case","Fragments":["classes"]},{"Key":"case classes","Fragments":["for"]},{"Key":"classes for","Fragments":["this,"]},{"Key":"for this,","Fragments":["so"]},{"Key":"this, so","Fragments":["that"]},{"Key":"so that","Fragments":["will","should","it","you","once","you","each","it","work","you","it","it","you","in","only"]},{"Key":"that will","Fragments":["probably","be","let"]},{"Key":"will probably","Fragments":["be"]},{"Key":"probably be","Fragments":["my","getting","a"]},{"Key":"be my","Fragments":["next"]},{"Key":"my next","Fragments":["iteration.","submission."]},{"Key":"This looks","Fragments":["nicer!","a","great,","a","good","like","clean","good!","really"]},{"Key":" First","Fragments":["version.","a","off,","version"]},{"Key":"First version.","Fragments":["Not"]},{"Key":"version. Not","Fragments":["very"]},{"Key":"Not very","Fragments":["happy"]},{"Key":"very happy","Fragments":["with","with"]},{"Key":"happy with","Fragments":["it.","it","it.","the","the","the","this,","how"]},{"Key":"with it.","Fragments":["Pretty","It"]},{"Key":"it. Pretty","Fragments":["sure"]},{"Key":"Pretty sure","Fragments":["I"]},{"Key":"sure I","Fragments":["can","did"]},{"Key":"can get","Fragments":["it","fairly","shorter","rid","confusing.","the","some"]},{"Key":"it much","Fragments":["cleaner","more"]},{"Key":"much cleaner","Fragments":["with","solution!"]},{"Key":"cleaner with","Fragments":["further"]},{"Key":"with further","Fragments":["research"]},{"Key":"further research","Fragments":["and"]},{"Key":"research and","Fragments":["experimentation."]},{"Key":"There's a","Fragments":["button",":+","way","typo:"]},{"Key":"a button","Fragments":["to"]},{"Key":"button to","Fragments":["click"]},{"Key":"to click","Fragments":["for"]},{"Key":"click for","Fragments":["that"]},{"Key":"for that","Fragments":[";)","matter)","but","function."]},{"Key":"Don't take","Fragments":["my"]},{"Key":"take my","Fragments":["solution"]},{"Key":"my solution","Fragments":["as","for","and","but","was"]},{"Key":"solution as","Fragments":["the"]},{"Key":"as the","Fragments":["last","same","basis","same","first","accumulator","characters","values"]},{"Key":"the last","Fragments":["word","expression","expression","iteration.","'sentence',","one","statement","statement","character","element","computed","char","4"]},{"Key":"last word","Fragments":["in"]},{"Key":"word in","Fragments":["Scala!"]},{"Key":"in Scala!","Fragments":["I"]},{"Key":"Scala! I","Fragments":["don't","am"]},{"Key":"think my","Fragments":["indentation","resistance","code","code"]},{"Key":"my indentation","Fragments":["of"]},{"Key":"indentation of","Fragments":["the"]},{"Key":"the `if`","Fragments":["expression","statement","pattern"]},{"Key":"`if` expression","Fragments":["is","is"]},{"Key":"expression is","Fragments":["that","the","superfluous"]},{"Key":"is that","Fragments":["common,","each","they","regular","you","you","I","you","in","type","returned","you","only","it","you"]},{"Key":"that common,","Fragments":["for"]},{"Key":"common, for","Fragments":["example"]},{"Key":"for example","Fragments":["-","you","move"]},{"Key":"example -","Fragments":["I"]},{"Key":"- I","Fragments":["just","did","agree","guess"]},{"Key":"I just","Fragments":["like","wanted","know","noticed","zipped","got","removed","put","wanted"]},{"Key":"just like","Fragments":["to"]},{"Key":"like to","Fragments":["have","know","know","use","nitpick","hear","know"]},{"Key":"the relevant","Fragments":["parts"]},{"Key":"relevant parts","Fragments":["line"]},{"Key":"parts line","Fragments":["up"]},{"Key":"line up","Fragments":[";-)"]},{"Key":" Good","Fragments":["to","job!","thinking,","use","point"]},{"Key":"Good to","Fragments":["know!"]},{"Key":"to know!","Fragments":[":)"]},{"Key":"Looks good!","Fragments":["You","A"]},{"Key":"good! You","Fragments":["may"]},{"Key":"You may","Fragments":["choose","want"]},{"Key":"may choose","Fragments":["not"]},{"Key":"not to","Fragments":["do","have","bother","do"]},{"Key":"this for","Fragments":["the"]},{"Key":"the sake","Fragments":["of"]},{"Key":"sake of","Fragments":["explicitness,"]},{"Key":"of explicitness,","Fragments":["but"]},{"Key":"explicitness, but","Fragments":["if"]},{"Key":"but if","Fragments":["you","others","you","the"]},{"Key":"you wanted,","Fragments":["Scala's"]},{"Key":"wanted, Scala's","Fragments":["precedence/operator"]},{"Key":"Scala's precedence/operator","Fragments":["syntax"]},{"Key":"precedence/operator syntax","Fragments":["means"]},{"Key":"syntax means","Fragments":["you"]},{"Key":"means you","Fragments":["don't","can"]},{"Key":"don't need","Fragments":["the","the","the","parens","an","a","to","the","a","to","the","the"]},{"Key":"need the","Fragments":["dot","brackets","`:","```val```","`new","explicit","surrounding","PrimeFactors","`toCharArray`","value","Strand","```to[Set]```"]},{"Key":"the dot","Fragments":["before"]},{"Key":"dot before","Fragments":["`count`"]},{"Key":"before `count`","Fragments":["and"]},{"Key":"`count` and","Fragments":["you","`apply`.","`zip`","`foldLeft`"]},{"Key":"and you","Fragments":["don't","had","won't"]},{"Key":"the brackets","Fragments":["round"]},{"Key":"brackets round","Fragments":["`strand1"]},{"Key":"round `strand1","Fragments":["zip"]},{"Key":"`strand1 zip","Fragments":["strand2`"]},{"Key":"zip strand2`","Fragments":["either."]},{"Key":" Nice","Fragments":["and","tail","fold","and","and","trick","solution.","submission.","concise","way","solution,","solution,","job","solution!"]},{"Key":"Nice and","Fragments":["short!","concise","tight","clean,"]},{"Key":"and short!","Fragments":["You"]},{"Key":"short! You","Fragments":["don't"]},{"Key":"You don't","Fragments":["strictly","need","need","have"]},{"Key":"don't strictly","Fragments":["need"]},{"Key":"strictly need","Fragments":["the"]},{"Key":"the `:","Fragments":["String`"]},{"Key":"`: String`","Fragments":["for"]},{"Key":"String` for","Fragments":["the"]},{"Key":"return value","Fragments":["type","wasn't","of","for","types","of","of"]},{"Key":"value type","Fragments":["here."]},{"Key":"type here.","Fragments":["Scala"]},{"Key":"here. Scala","Fragments":["can"]},{"Key":"Scala can","Fragments":["infer"]},{"Key":"can infer","Fragments":["it."]},{"Key":"infer it.","Fragments":["But"]},{"Key":"it. But","Fragments":["you"]},{"Key":"But you","Fragments":["can","could"]},{"Key":"can leave","Fragments":["it"]},{"Key":"leave it","Fragments":["if","to","like"]},{"Key":"it if","Fragments":["you","you"]},{"Key":"you feel","Fragments":["it","about"]},{"Key":"feel it","Fragments":["aids"]},{"Key":"it aids","Fragments":["readability"]},{"Key":"aids readability","Fragments":["–"]},{"Key":"readability –","Fragments":["I"]},{"Key":"– I","Fragments":["did,","think"]},{"Key":"I did,","Fragments":["but"]},{"Key":"did, but","Fragments":["I'm"]},{"Key":"I'm a","Fragments":["Scala","bit"]},{"Key":"a Scala","Fragments":["noob","noob","beginner."]},{"Key":"Scala noob","Fragments":["too","with"]},{"Key":"noob too","Fragments":[";)"]},{"Key":"I simplified","Fragments":["the"]},{"Key":"simplified the","Fragments":["shout"]},{"Key":"the shout","Fragments":["check"]},{"Key":"shout check","Fragments":["by"]},{"Key":"check by","Fragments":["also"]},{"Key":"by also","Fragments":["involving"]},{"Key":"also involving","Fragments":["`toLowerCase`,"]},{"Key":"involving `toLowerCase`,","Fragments":["instead"]},{"Key":"`toLowerCase`, instead","Fragments":["of"]},{"Key":"instead of","Fragments":["regexps.","manually","the","if/else.","`foldLeft`.","`Option`.","full","making","what","everyting","if/elseif/else","`Map[Int,","string","typing","not","something","something","the","```number.charAt(0)```","```input","including","using","making","the","a","filtering","looking","`message`","inside","\"Woah\"","using","a","```str.filter(!options.contains(_)).length","a","for","blacklisting.","`sameElements`","`e._1`.","a","`for`","the","streams/lists.","an","```isSameWord```.","using","a","the","writing","`s","hard-coded","s","a"]},{"Key":" How","Fragments":["about","come","does"]},{"Key":"How about","Fragments":["extracting"]},{"Key":"about extracting","Fragments":["helper"]},{"Key":"extracting helper","Fragments":["methods"]},{"Key":"helper methods","Fragments":["like","as","may"]},{"Key":"methods like","Fragments":["`isShouting`","`zip`"]},{"Key":"like `isShouting`","Fragments":["etc?"]},{"Key":"`isShouting` etc?","Fragments":["Both"]},{"Key":"etc? Both","Fragments":["to"]},{"Key":"Both to","Fragments":["practice"]},{"Key":"to practice","Fragments":["your"]},{"Key":"practice your","Fragments":["Scala"]},{"Key":"your Scala","Fragments":["and","journey."]},{"Key":"Scala and","Fragments":["to"]},{"Key":"and to","Fragments":["possibly"]},{"Key":"to possibly","Fragments":["aid"]},{"Key":"possibly aid","Fragments":["readability"]},{"Key":"aid readability","Fragments":["and"]},{"Key":"readability and","Fragments":["make","then"]},{"Key":"and make","Fragments":["the","some","your","the","the"]},{"Key":"You might","Fragments":["end","be","want","find","want","also","want","want","want"]},{"Key":"might end","Fragments":["up"]},{"Key":"up simplifying","Fragments":["that"]},{"Key":"simplifying that","Fragments":["code"]},{"Key":"that code","Fragments":["away,"]},{"Key":"code away,","Fragments":["but"]},{"Key":"away, but","Fragments":["your"]},{"Key":"but your","Fragments":["map","for","approach","code","use"]},{"Key":"your map","Fragments":["+","instead"]},{"Key":"map +","Fragments":["sum"]},{"Key":"+ sum","Fragments":["could"]},{"Key":"sum could","Fragments":["be"]},{"Key":"replaced with","Fragments":["a","``charMap.mapValues(_.size)``."]},{"Key":"a `.count`,","Fragments":["I"]},{"Key":"`.count`, I","Fragments":["think."]},{"Key":"Good job!","Fragments":["I'm"]},{"Key":"job! I'm","Fragments":["just"]},{"Key":"I'm just","Fragments":["getting","starting","submitting","learning"]},{"Key":"just getting","Fragments":["into","a"]},{"Key":"getting into","Fragments":["Scala"]},{"Key":"into Scala","Fragments":["as"]},{"Key":"Scala as","Fragments":["well."]},{"Key":"as well.","Fragments":["Pretty"]},{"Key":"well. Pretty","Fragments":["tricky"]},{"Key":"Pretty tricky","Fragments":["stuff."]},{"Key":" Some","Fragments":["ways","naming","recommendations:","considerations:"]},{"Key":"Some ways","Fragments":["you"]},{"Key":"ways you","Fragments":["could"]},{"Key":"could simplify","Fragments":["the","the","the"]},{"Key":" Instead","Fragments":["of","of","of:","of","of","of","of","of"]},{"Key":"Instead of","Fragments":["\"manually\"","comparing","merging","a","`match`","creating","creating","`class"]},{"Key":"of \"manually\"","Fragments":["replacing"]},{"Key":"\"manually\" replacing","Fragments":["all"]},{"Key":"replacing all","Fragments":["spaces"]},{"Key":"all spaces","Fragments":["with"]},{"Key":"spaces with","Fragments":["nothing,"]},{"Key":"with nothing,","Fragments":["see"]},{"Key":"nothing, see","Fragments":["if"]},{"Key":"see if","Fragments":["you","you","something","all","all","they","I","the"]},{"Key":"can find","Fragments":["a","a"]},{"Key":"a built-in","Fragments":["string","string"]},{"Key":"built-in string","Fragments":["method","method"]},{"Key":"string method","Fragments":["that","for","instead"]},{"Key":"method that","Fragments":["does","could","is","receives"]},{"Key":"that does","Fragments":["the","the"]},{"Key":"does the","Fragments":["same","screening."]},{"Key":"same (at","Fragments":["the"]},{"Key":"(at the","Fragments":["beginning","same"]},{"Key":"the beginning","Fragments":["and"]},{"Key":"beginning and","Fragments":["end"]},{"Key":"and end","Fragments":["of"]},{"Key":"end of","Fragments":["the","a","the"]},{"Key":"of comparing","Fragments":["`.last`"]},{"Key":"comparing `.last`","Fragments":["to"]},{"Key":"`.last` to","Fragments":["a"]},{"Key":"a questionmark,","Fragments":["see"]},{"Key":"questionmark, see","Fragments":["if"]},{"Key":"method for","Fragments":["checking","free"]},{"Key":"for checking","Fragments":["the","toUpper,"]},{"Key":"checking the","Fragments":["end"]},{"Key":"the end","Fragments":["of","of","for","returning"]},{"Key":"There's also","Fragments":["a"]},{"Key":"also a","Fragments":["method","strand."]},{"Key":"a method","Fragments":["to","name","as","using","I","so","to","is","called"]},{"Key":"method to","Fragments":["check","deal","use","the","be"]},{"Key":"check if","Fragments":["a","it's","a","the","it's","the"]},{"Key":"if a","Fragments":["string","question","string"]},{"Key":"string is","Fragments":["uppercase,","valid","a","empty.","not"]},{"Key":"is uppercase,","Fragments":["and"]},{"Key":"uppercase, and","Fragments":["one"]},{"Key":"and one","Fragments":["to"]},{"Key":"one to","Fragments":["check","the"]},{"Key":"if it's","Fragments":["lowercase.","better","a"]},{"Key":"it's lowercase.","Fragments":["You"]},{"Key":"lowercase. You","Fragments":["might"]},{"Key":"be able","Fragments":["to","to","to","to"]},{"Key":"able to","Fragments":["do","use","use","simplify","use","say","remove"]},{"Key":"do something","Fragments":["clever","more","like:","*like*","like"]},{"Key":"something clever","Fragments":["with"]},{"Key":"clever with","Fragments":["those"]},{"Key":"with those","Fragments":["two","methods"]},{"Key":"those two","Fragments":["methods"]},{"Key":"two methods","Fragments":["to"]},{"Key":"methods to","Fragments":["get","aid"]},{"Key":"get your","Fragments":["shout"]},{"Key":"your shout","Fragments":["detection"]},{"Key":"shout detection","Fragments":["down"]},{"Key":"detection down","Fragments":["to"]},{"Key":"down to","Fragments":["a","whether","the","3","whether"]},{"Key":"I have","Fragments":["some","very","a","to","very","one","an","to","faith","a","no","some","seen","done","to","had"]},{"Key":"have some","Fragments":["thoughts","things"]},{"Key":"some thoughts","Fragments":["on"]},{"Key":"thoughts on","Fragments":["the"]},{"Key":"the higher-level","Fragments":["design"]},{"Key":"higher-level design","Fragments":["of"]},{"Key":"design of","Fragments":["the"]},{"Key":"code as","Fragments":["well,","a","it","you"]},{"Key":"as well,","Fragments":["but"]},{"Key":"well, but","Fragments":["maybe"]},{"Key":"maybe we","Fragments":["could"]},{"Key":"we could","Fragments":["start"]},{"Key":"could start","Fragments":["there."]},{"Key":"You could","Fragments":["use","as","use","do","also","delete","use","consider","use","also","extract","also","`map`","use","skip","skip","simplify","use","consider","also","use","also","change","use","do","also","avoid","also"]},{"Key":"use String's","Fragments":["`trim`"]},{"Key":"String's `trim`","Fragments":["instead"]},{"Key":"`trim` instead","Fragments":["of"]},{"Key":"of manually","Fragments":["replacing"]},{"Key":"manually replacing","Fragments":["spaces,"]},{"Key":"replacing spaces,","Fragments":["I"]},{"Key":"spaces, I","Fragments":["think."]},{"Key":"How come","Fragments":["you"]},{"Key":"come you","Fragments":["have"]},{"Key":"have abstractions","Fragments":["for"]},{"Key":"abstractions for","Fragments":["\"is"]},{"Key":"for \"is","Fragments":["question\"","silent\"?"]},{"Key":"\"is question\"","Fragments":["and"]},{"Key":"question\" and","Fragments":["\"is"]},{"Key":"and \"is","Fragments":["shouting\""]},{"Key":"\"is shouting\"","Fragments":["but"]},{"Key":"shouting\" but","Fragments":["none"]},{"Key":"but none","Fragments":["for"]},{"Key":"none for","Fragments":["\"is"]},{"Key":"\"is silent\"?","Fragments":["That"]},{"Key":"silent\"? That","Fragments":["would"]},{"Key":"That would","Fragments":["probably"]},{"Key":"would probably","Fragments":["aid","be","cool","have"]},{"Key":"probably aid","Fragments":["readability."]},{"Key":"don't like","Fragments":["how","the","about","the","looping"]},{"Key":"how `isQuestion`","Fragments":["has"]},{"Key":"`isQuestion` has","Fragments":["shout"]},{"Key":"has shout","Fragments":["handling."]},{"Key":"shout handling.","Fragments":["E.g."]},{"Key":"handling. E.g.","Fragments":["checking"]},{"Key":"E.g. checking","Fragments":["if"]},{"Key":"checking if","Fragments":["`p","it","no"]},{"Key":"if `p","Fragments":["=="]},{"Key":"`p ==","Fragments":["\"?\"`"]},{"Key":"== \"?\"`","Fragments":["seems"]},{"Key":"\"?\"` seems","Fragments":["mostly"]},{"Key":"seems mostly","Fragments":["intended"]},{"Key":"mostly intended","Fragments":["to"]},{"Key":"intended to","Fragments":["compensate"]},{"Key":"to compensate","Fragments":["for"]},{"Key":"compensate for","Fragments":["`isShouting`"]},{"Key":"for `isShouting`","Fragments":["not"]},{"Key":"`isShouting` not","Fragments":["considering"]},{"Key":"not considering","Fragments":["strings"]},{"Key":"considering strings","Fragments":["without"]},{"Key":"strings without","Fragments":["letters.","intermediate"]},{"Key":"without letters.","Fragments":["Might"]},{"Key":"letters. Might","Fragments":["it"]},{"Key":"Might it","Fragments":["be"]},{"Key":"it be","Fragments":["better","better","removed?","more"]},{"Key":"better to","Fragments":["make","use","you?","trim","separate","make","me.","find","make","use","just"]},{"Key":"make `isShouting`","Fragments":["more"]},{"Key":"`isShouting` more","Fragments":["clever?"]},{"Key":" You're","Fragments":["repeating","right,"]},{"Key":"You're repeating","Fragments":["\"Whatever.\""]},{"Key":"repeating \"Whatever.\"","Fragments":["If"]},{"Key":"\"Whatever.\" If","Fragments":["that"]},{"Key":"If that","Fragments":["answer","expression"]},{"Key":"that answer","Fragments":["had"]},{"Key":"answer had","Fragments":["to"]},{"Key":"be modified,","Fragments":["you"]},{"Key":"modified, you","Fragments":["would"]},{"Key":"you would","Fragments":["have","prefer","suggest","handle","solve","keep"]},{"Key":"would have","Fragments":["to","used","written","done","extracted","saved","been","created","been","made"]},{"Key":"in two","Fragments":["places,"]},{"Key":"two places,","Fragments":["which"]},{"Key":"places, which","Fragments":["can"]},{"Key":"which can","Fragments":["lead","be"]},{"Key":"can lead","Fragments":["to"]},{"Key":"lead to","Fragments":["bugs.","mistakes.","potential"]},{"Key":"to bugs.","Fragments":["Maybe"]},{"Key":"bugs. Maybe","Fragments":["you"]},{"Key":"Maybe you","Fragments":["could","can"]},{"Key":"could get","Fragments":["the","bothersome"]},{"Key":"get the","Fragments":["answer","impression","result","tests","last","response","same","same","same","apply"]},{"Key":"the answer","Fragments":["from","from"]},{"Key":"answer from","Fragments":["some","Bob."]},{"Key":"from some","Fragments":["method/value,"]},{"Key":"some method/value,","Fragments":["or"]},{"Key":"method/value, or","Fragments":["combine"]},{"Key":"or combine","Fragments":["the"]},{"Key":"combine the","Fragments":["conditions,"]},{"Key":"the conditions,","Fragments":["or"]},{"Key":"conditions, or","Fragments":["something?"]},{"Key":" Cool","Fragments":["solution!","to"]},{"Key":" One","Fragments":["downside","related,","thing","tiny","tiny","of"]},{"Key":"One downside","Fragments":["to"]},{"Key":"downside to","Fragments":["this"]},{"Key":"to this","Fragments":["over","problem.","exercise"]},{"Key":"this over","Fragments":["a"]},{"Key":"over a","Fragments":["more","regex."]},{"Key":"more straightforward","Fragments":["conditional","way"]},{"Key":"straightforward conditional","Fragments":["is"]},{"Key":"conditional is","Fragments":["that"]},{"Key":"that each","Fragments":["category","response","Response","prompt"]},{"Key":"each category","Fragments":["is"]},{"Key":"category is","Fragments":["in"]},{"Key":"is in","Fragments":["three","the","your"]},{"Key":"in three","Fragments":["places:","places"]},{"Key":"three places:","Fragments":["declaration,"]},{"Key":"places: declaration,","Fragments":["mapping"]},{"Key":"declaration, mapping","Fragments":["to"]},{"Key":"mapping to","Fragments":["answer,"]},{"Key":"to answer,","Fragments":["conditional."]},{"Key":"answer, conditional.","Fragments":["That"]},{"Key":"conditional. That","Fragments":["means"]},{"Key":"That means","Fragments":["adding","it","everything"]},{"Key":"means adding","Fragments":["another"]},{"Key":"adding another","Fragments":["requires"]},{"Key":"another requires","Fragments":["changes"]},{"Key":"requires changes","Fragments":["in"]},{"Key":"changes in","Fragments":["three"]},{"Key":"three places","Fragments":["which"]},{"Key":"places which","Fragments":["could"]},{"Key":"which could","Fragments":["get","be"]},{"Key":"get bothersome","Fragments":["and"]},{"Key":"bothersome and","Fragments":["lead"]},{"Key":"and lead","Fragments":["to"]},{"Key":" Well","Fragments":["the"]},{"Key":"Well the","Fragments":["type"]},{"Key":"type system","Fragments":["should","to"]},{"Key":"system should","Fragments":["provide"]},{"Key":"should provide","Fragments":["some"]},{"Key":"provide some","Fragments":["assistance"]},{"Key":"some assistance","Fragments":["in"]},{"Key":"assistance in","Fragments":["solving"]},{"Key":"in solving","Fragments":["that"]},{"Key":"solving that","Fragments":["kind"]},{"Key":"that kind","Fragments":["of"]},{"Key":"of refactoring","Fragments":["problem."]},{"Key":"refactoring problem.","Fragments":["This"]},{"Key":"problem. This","Fragments":["should"]},{"Key":"This should","Fragments":["be"]},{"Key":"be a","Fragments":["bit","good","good","far","difference","simple","bit","lot","good","better","crock","`val`","strong","bit","large","question,","race","case","problem","`usedNames`","bit","```val```"]},{"Key":"bit easier","Fragments":["to","to"]},{"Key":"to internationalize,","Fragments":["for"]},{"Key":"internationalize, for","Fragments":["example."]},{"Key":"do wish","Fragments":["Scala"]},{"Key":"wish Scala","Fragments":["has","did"]},{"Key":"Scala has","Fragments":["a","something","very","the"]},{"Key":"has a","Fragments":["better","side","private","mapValues","way","`withDefaultValue`","return","return","response","`require`"]},{"Key":"to define","Fragments":["a","_sq","`type","reset()"]},{"Key":"define a","Fragments":["data","logger?"]},{"Key":"a data","Fragments":["type."]},{"Key":"data type.","Fragments":["This"]},{"Key":"type. This","Fragments":["is"]},{"Key":"is so","Fragments":["much","short,"]},{"Key":"so much","Fragments":["shorter","for","for","for"]},{"Key":"much shorter","Fragments":["in","solution","and","than"]},{"Key":"shorter in","Fragments":["Haskell."]},{"Key":" True.","Fragments":["At"]},{"Key":"True. At","Fragments":["worst,"]},{"Key":"At worst,","Fragments":["you'll"]},{"Key":"worst, you'll","Fragments":["probably"]},{"Key":"you'll probably","Fragments":["have","be"]},{"Key":"probably have","Fragments":["a","inlined","the"]},{"Key":"have a","Fragments":["compilation","look","file","strong","method","look","look","two-step","go","small","`.sum`","method","very","`withDefaultValue`","look","look"]},{"Key":"a compilation","Fragments":["error,"]},{"Key":"compilation error,","Fragments":["not"]},{"Key":"error, not","Fragments":["a"]},{"Key":"not a","Fragments":["bug.","biology","big","`def`","huge","key.","valid"]},{"Key":" Another","Fragments":["thought,","factor","unwritten","detail."]},{"Key":"Another thought,","Fragments":["as"]},{"Key":"thought, as","Fragments":["a"]},{"Key":"noob with","Fragments":["an"]},{"Key":"with an","Fragments":["OO","object","already","interpretation","invalid"]},{"Key":"an OO","Fragments":["background:"]},{"Key":"OO background:","Fragments":["the"]},{"Key":"background: the","Fragments":["`classify`"]},{"Key":"the `classify`","Fragments":["method"]},{"Key":"`classify` method","Fragments":["is"]},{"Key":"is public","Fragments":["but"]},{"Key":"public but","Fragments":["doesn't"]},{"Key":"but doesn't","Fragments":["have"]},{"Key":"doesn't have","Fragments":["to"]},{"Key":"to be,","Fragments":["and"]},{"Key":"be, and","Fragments":["indeed"]},{"Key":"and indeed","Fragments":["exposing"]},{"Key":"indeed exposing","Fragments":["that"]},{"Key":"exposing that","Fragments":["as"]},{"Key":"that as","Fragments":["part"]},{"Key":"as part","Fragments":["of"]},{"Key":"part of","Fragments":["Bob's","why","the","the","the","your","the"]},{"Key":"of Bob's","Fragments":["public","constructor","constructor"]},{"Key":"Bob's public","Fragments":["interface"]},{"Key":"public interface","Fragments":["risks"]},{"Key":"interface risks","Fragments":["making"]},{"Key":"risks making","Fragments":["refactoring"]},{"Key":"making refactoring","Fragments":["harder."]},{"Key":"refactoring harder.","Fragments":["Do"]},{"Key":"harder. Do","Fragments":["you"]},{"Key":"Do you","Fragments":["think","know","need","see","think"]},{"Key":"you think","Fragments":["that's","this","of","of","it","about","you","of"]},{"Key":"that's a","Fragments":["concern?","matter"]},{"Key":"a concern?","Fragments":["Researching"]},{"Key":"concern? Researching","Fragments":["Scala,"]},{"Key":"Researching Scala,","Fragments":["I"]},{"Key":"Scala, I","Fragments":["get"]},{"Key":"I get","Fragments":["the","a","that","a"]},{"Key":"impression that","Fragments":["private","private"]},{"Key":"that private","Fragments":["vs.","versus"]},{"Key":"private vs.","Fragments":["public"]},{"Key":"vs. public","Fragments":["isn't"]},{"Key":"public isn't","Fragments":["considered","much"]},{"Key":"isn't considered","Fragments":["very"]},{"Key":"considered very","Fragments":["important."]},{"Key":"I too","Fragments":["have"]},{"Key":"too have","Fragments":["the"]},{"Key":"private versus","Fragments":["public"]},{"Key":"versus public","Fragments":["isn't"]},{"Key":"isn't much","Fragments":["of"]},{"Key":"much of","Fragments":["a","a"]},{"Key":"a concern,","Fragments":["but"]},{"Key":"concern, but","Fragments":["I"]},{"Key":"have very","Fragments":["little","little"]},{"Key":"very little","Fragments":["Scala","experience","Scala."]},{"Key":"little Scala","Fragments":["experience."]},{"Key":"Scala experience.","Fragments":["I"]},{"Key":"experience. I","Fragments":["also"]},{"Key":"also wish","Fragments":["Scala"]},{"Key":"Scala did","Fragments":["exports"]},{"Key":"did exports","Fragments":["explicitly"]},{"Key":"exports explicitly","Fragments":["like"]},{"Key":"explicitly like","Fragments":["Erlang"]},{"Key":"like Erlang","Fragments":["or"]},{"Key":"Erlang or","Fragments":["Haskell"]},{"Key":"or Haskell","Fragments":[":)"]},{"Key":" @amos","Fragments":["I"]},{"Key":"@amos I","Fragments":["agree"]},{"Key":"agree with","Fragments":["everything","you.","that,","you."]},{"Key":"with everything","Fragments":["you"]},{"Key":"everything you","Fragments":["said."]},{"Key":"you said.","Fragments":["I'm"]},{"Key":"said. I'm","Fragments":["fairly"]},{"Key":"I'm fairly","Fragments":["new"]},{"Key":"fairly new","Fragments":["to"]},{"Key":"new to","Fragments":["Scala","regular","Scala.","Scala","Scala","Scala,","Scala","Scala","Scala","Scala"]},{"Key":"to Scala","Fragments":["so","so","myself","(coming","coming","though","so"]},{"Key":"Scala so","Fragments":["I","any","I","there"]},{"Key":"so I","Fragments":["just","needed","can","wanted","know","really","decided","decided"]},{"Key":"just wanted","Fragments":["to","to"]},{"Key":"wanted to","Fragments":["make","try","try","use","cache","try","do","play","gain","try"]},{"Key":"make tests","Fragments":["pass"]},{"Key":"tests pass","Fragments":["on"]},{"Key":"pass on","Fragments":["the"]},{"Key":"the first","Fragments":["iteration.","one,","programmer","assertion","time","step,","validation.","iteration","test","three","parameter"]},{"Key":"first iteration.","Fragments":["Thanks"]},{"Key":"iteration. Thanks","Fragments":["for"]},{"Key":" Also,","Fragments":["you'll","you'll","thanks","number,","for","I","parentheses"]},{"Key":"Also, you'll","Fragments":["probably","find"]},{"Key":"be getting","Fragments":["warnings"]},{"Key":"getting warnings","Fragments":["on"]},{"Key":"warnings on","Fragments":["compilation"]},{"Key":"on compilation","Fragments":["at"]},{"Key":"compilation at","Fragments":["the"]},{"Key":"the moment","Fragments":["because"]},{"Key":"moment because","Fragments":["of"]},{"Key":"because of","Fragments":["your","the"]},{"Key":"your use","Fragments":["of","of"]},{"Key":"use of","Fragments":["postfix","unapply","`unapply`","unapply","Seq.count.","a","immutable","companion","Scala.","the","'var'","groupBy","a","`return`","`var`s","pattern","regular","Scalas","`foldLeft`","streams","the","the","an","scala","built-in","a"]},{"Key":"of postfix","Fragments":["operators"]},{"Key":"postfix operators","Fragments":["(`utterance"]},{"Key":"operators (`utterance","Fragments":["isShout`"]},{"Key":"(`utterance isShout`","Fragments":["etc"]},{"Key":"isShout` etc","Fragments":["without"]},{"Key":"etc without","Fragments":["the"]},{"Key":"the dot).","Fragments":["The"]},{"Key":"dot). The","Fragments":["warning's"]},{"Key":"The warning's","Fragments":["probably"]},{"Key":"warning's probably","Fragments":["getting"]},{"Key":"probably getting","Fragments":["lost"]},{"Key":"getting lost","Fragments":["in"]},{"Key":"lost in","Fragments":["the"]},{"Key":"the reams","Fragments":["of"]},{"Key":"reams of","Fragments":["output"]},{"Key":"of output","Fragments":["from"]},{"Key":"output from","Fragments":["sbt,"]},{"Key":"from sbt,","Fragments":["but"]},{"Key":"sbt, but","Fragments":["you"]},{"Key":"see it","Fragments":["if",":)"]},{"Key":"you compile","Fragments":["the"]},{"Key":"compile the","Fragments":["file"]},{"Key":"the file","Fragments":["independently"]},{"Key":"file independently","Fragments":["with"]},{"Key":"independently with","Fragments":["the"]},{"Key":"the `-feature`","Fragments":["flag."]},{"Key":"`-feature` flag.","Fragments":["So"]},{"Key":"flag. So","Fragments":["something"]},{"Key":"So something","Fragments":["like:"]},{"Key":" scalac","Fragments":["src/main/scala/bob.scala"]},{"Key":"scalac src/main/scala/bob.scala","Fragments":["-feature"]},{"Key":" should","Fragments":["show"]},{"Key":"should show","Fragments":["you"]},{"Key":"show you","Fragments":["the"]},{"Key":"you the","Fragments":["warning."]},{"Key":"the warning.","Fragments":["It"]},{"Key":"warning. It","Fragments":["can"]},{"Key":"It can","Fragments":["be","be","be"]},{"Key":"can be","Fragments":["fixed","a","written","a","omitted","reduced","`!","`message.exists(_.isUpper)`.","omitted.","rewritten","simplified","omitted","written","omitted.","used","more","simplified","easily","avoided","multiplied","overridden","removed","considered","expressed","converted","solved","written","\"vals\"","collapsed","collapsed","plugged","implemented","compacted","a","reused","reused","customized","customized","written","improved.","improved.","simplified","done","simplified.","satisfied","replaced","customized","simplified","set","improved","used","a"]},{"Key":"be fixed","Fragments":["by"]},{"Key":"fixed by","Fragments":["adding"]},{"Key":"by adding","Fragments":["an","the"]},{"Key":"adding an","Fragments":["import"]},{"Key":"an import","Fragments":["-"]},{"Key":"import -","Fragments":["the"]},{"Key":"- the","Fragments":["warning","validation","String","error"]},{"Key":"the warning","Fragments":["text"]},{"Key":"warning text","Fragments":["explains"]},{"Key":"text explains","Fragments":["how."]},{"Key":"One related,","Fragments":["cool"]},{"Key":"related, cool","Fragments":["thing"]},{"Key":"cool thing","Fragments":["that"]},{"Key":"thing that","Fragments":["Scala","stands"]},{"Key":"that Scala","Fragments":["seems"]},{"Key":"Scala seems","Fragments":["to"]},{"Key":"to have,","Fragments":["that"]},{"Key":"have, that","Fragments":["I"]},{"Key":"I haven't","Fragments":["toyed","done"]},{"Key":"haven't toyed","Fragments":["with"]},{"Key":"toyed with","Fragments":["yet,"]},{"Key":"with yet,","Fragments":["is"]},{"Key":"yet, is","Fragments":["private"]},{"Key":"is private","Fragments":["scoping:"]},{"Key":"private scoping:","Fragments":["http://stackoverflow.com/questions/14706634/private-method-scoping-in-scala"]},{"Key":" Sure","Fragments":["thing!"]},{"Key":"Sure thing!","Fragments":["I'm"]},{"Key":"thing! I'm","Fragments":["learning"]},{"Key":"I'm learning","Fragments":["Scala,"]},{"Key":"learning Scala,","Fragments":["too."]},{"Key":"Scala, too.","Fragments":["It's"]},{"Key":"too. It's","Fragments":["fun"]},{"Key":"It's fun","Fragments":["to"]},{"Key":"fun to","Fragments":["see"]},{"Key":"to see","Fragments":["what","a","that","if","if","if","more","other","if","the","if","that"]},{"Key":"see what","Fragments":["others"]},{"Key":"what others","Fragments":["come"]},{"Key":"others come","Fragments":["up"]},{"Key":"come up","Fragments":["with.","with","with","with"]},{"Key":" Ah,","Fragments":["that's"]},{"Key":"Ah, that's","Fragments":["what"]},{"Key":"that's what","Fragments":["your"]},{"Key":"what your","Fragments":["imports","```foldLeft```"]},{"Key":"your imports","Fragments":["were"]},{"Key":"imports were","Fragments":["about."]},{"Key":"were about.","Fragments":["Cool."]},{"Key":"about. Cool.","Fragments":["I"]},{"Key":"Cool. I","Fragments":["wasn't","might!"]},{"Key":"I wasn't","Fragments":["sure","100%","happy","evaluating"]},{"Key":"wasn't sure","Fragments":["about"]},{"Key":"sure about","Fragments":["leaving","jschauls","the"]},{"Key":"about leaving","Fragments":["the"]},{"Key":"leaving the","Fragments":["periods"]},{"Key":"the periods","Fragments":["off"]},{"Key":"periods off","Fragments":["at"]},{"Key":"off at","Fragments":["all"]},{"Key":"at all","Fragments":["but",":-)."]},{"Key":"all but","Fragments":["wanted"]},{"Key":"but wanted","Fragments":["to"]},{"Key":"try it.","Fragments":["If"]},{"Key":"it. If","Fragments":["I"]},{"Key":"If I","Fragments":["get","am"]},{"Key":"get a","Fragments":["warning,","array","nit","shorter","feel","count"]},{"Key":"a warning,","Fragments":["maybe"]},{"Key":"warning, maybe","Fragments":["it'd"]},{"Key":"maybe it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["better","easy","easier"]},{"Key":"to use","Fragments":["periods","those","the","the","pattern","a","`{","camelCase","the","a","\\p{Upper},","this","more","the","in","the","`zip`","the","the","TDD","a","String","the","recursion","if-else","match","heavy","some","`.toLowerCase.sorted`","`anagram.toLowerCase`","higher-order","math","`Either`","it","that.","recursion","`s.equals(s1)`","`lastOption`","s.equals(s1)"]},{"Key":"use periods","Fragments":["than"]},{"Key":"periods than","Fragments":["getting"]},{"Key":"than getting","Fragments":["rid"]},{"Key":"getting rid","Fragments":["of"]},{"Key":"rid of","Fragments":["the","lines","these","the","the","the","`isUpper`.","the"]},{"Key":"the warning?","Fragments":["I'll"]},{"Key":"warning? I'll","Fragments":["look"]},{"Key":"I'll look","Fragments":["into"]},{"Key":"look into","Fragments":["just","using"]},{"Key":"into just","Fragments":["what"]},{"Key":"just what","Fragments":["it"]},{"Key":"what it","Fragments":["warns","*means*)","is","means.","means"]},{"Key":"it warns","Fragments":["about"]},{"Key":"warns about","Fragments":["and"]},{"Key":"about and","Fragments":["what"]},{"Key":"and what","Fragments":["the"]},{"Key":"the intention","Fragments":["of"]},{"Key":"intention of","Fragments":["the"]},{"Key":" Spot","Fragments":["on!"]},{"Key":"I guess","Fragments":["the","a","that","that's","if"]},{"Key":"guess the","Fragments":["only"]},{"Key":"the only","Fragments":["thing","prerequisite","needed","thing"]},{"Key":"only thing","Fragments":["you","I","I"]},{"Key":"thing you","Fragments":["might"]},{"Key":"might want","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"to consider","Fragments":["is","changing","the","converting"]},{"Key":"consider is","Fragments":["giving"]},{"Key":"is giving","Fragments":["the"]},{"Key":"giving the","Fragments":["variables","variables","pattern"]},{"Key":"the variables","Fragments":["less","generic","to","at"]},{"Key":"variables less","Fragments":["obscure"]},{"Key":"less obscure","Fragments":["names,"]},{"Key":"obscure names,","Fragments":["maybe"]},{"Key":"names, maybe","Fragments":["something"]},{"Key":"maybe something","Fragments":["related","like"]},{"Key":"something related","Fragments":["to"]},{"Key":"related to","Fragments":["the"]},{"Key":" Thank","Fragments":["you!","you","you","you","you","you","you"]},{"Key":" Since","Fragments":["it's","it's","the","yelling","you","your"]},{"Key":"Since it's","Fragments":["so","so"]},{"Key":"it's so","Fragments":["little","little"]},{"Key":"so little","Fragments":["code,","code,"]},{"Key":"little code,","Fragments":["short","short"]},{"Key":"code, short","Fragments":["names","names"]},{"Key":"short names","Fragments":["feel","don't"]},{"Key":"names feel","Fragments":["more"]},{"Key":"feel more","Fragments":["acceptable"]},{"Key":"more acceptable","Fragments":["to"]},{"Key":"acceptable to","Fragments":["me."]},{"Key":"to me.","Fragments":["But","It","I","But","You're"]},{"Key":"me. But","Fragments":["at","I"]},{"Key":"But at","Fragments":["least"]},{"Key":"least `char1`","Fragments":["would"]},{"Key":"`char1` would","Fragments":["probably"]},{"Key":"good idea,","Fragments":["since"]},{"Key":"idea, since","Fragments":["it's"]},{"Key":"since it's","Fragments":["perhaps"]},{"Key":"perhaps not","Fragments":["obvious"]},{"Key":"not obvious","Fragments":["that"]},{"Key":"obvious that","Fragments":["the","the"]},{"Key":"the zip","Fragments":["creates","left","function.","method","function"]},{"Key":"zip creates","Fragments":["pairs"]},{"Key":"creates pairs","Fragments":["of"]},{"Key":"pairs of","Fragments":["characters.","characters.","Chars.","curly"]},{"Key":"I actively","Fragments":["want"]},{"Key":"actively want","Fragments":["to"]},{"Key":"to avoid","Fragments":["using","regular","using","using","using","the"]},{"Key":"avoid using","Fragments":["terms","regular","mutable","explicit","vars"]},{"Key":"using terms","Fragments":["from"]},{"Key":"terms from","Fragments":["the"]},{"Key":"the biology/DNA","Fragments":["domain"]},{"Key":"biology/DNA domain","Fragments":["since"]},{"Key":"domain since","Fragments":["this"]},{"Key":"since this","Fragments":["is","code"]},{"Key":"a general-purpose","Fragments":["class."]},{"Key":"general-purpose class.","Fragments":["It"]},{"Key":"class. It","Fragments":["doesn't","provides","really"]},{"Key":"It doesn't","Fragments":["need","change","really"]},{"Key":"doesn't need","Fragments":["to","to","to","any","to"]},{"Key":"to know","Fragments":["about","about","about","why","how","what"]},{"Key":"know about","Fragments":["(be","those","those","the","\\\\p{Punct}!"]},{"Key":"about (be","Fragments":["coupled"]},{"Key":"(be coupled","Fragments":["to)"]},{"Key":"coupled to)","Fragments":["who"]},{"Key":"to) who","Fragments":["uses"]},{"Key":"who uses","Fragments":["it"]},{"Key":"uses it","Fragments":["and"]},{"Key":"it and","Fragments":["for","it"]},{"Key":"and for","Fragments":["what.","cleaner","the"]},{"Key":" Renamed","Fragments":["`c1`"]},{"Key":"Renamed `c1`","Fragments":["to"]},{"Key":"`c1` to","Fragments":["`char1`"]},{"Key":"to `char1`","Fragments":["etc"]},{"Key":"`char1` etc","Fragments":["since"]},{"Key":"etc since","Fragments":["it"]},{"Key":"since it","Fragments":["wasn't","never","is","doesn't"]},{"Key":"it wasn't","Fragments":["obvious","specific","very"]},{"Key":"wasn't obvious","Fragments":["that"]},{"Key":"zip left","Fragments":["us"]},{"Key":"left us","Fragments":["with"]},{"Key":"us with","Fragments":["pairs"]},{"Key":"with pairs","Fragments":["of"]},{"Key":" `s1`","Fragments":["is"]},{"Key":"`s1` is","Fragments":["fine"]},{"Key":"is fine","Fragments":["IMO"]},{"Key":"fine IMO","Fragments":["since"]},{"Key":"IMO since","Fragments":["we're"]},{"Key":"since we're","Fragments":["very"]},{"Key":"we're very","Fragments":["explicit"]},{"Key":"very explicit","Fragments":["on"]},{"Key":"explicit on","Fragments":["line"]},{"Key":"line 2","Fragments":["that"]},{"Key":"2 that","Fragments":["it's"]},{"Key":"that it's","Fragments":["a","not"]},{"Key":"it's a","Fragments":["string.","code","form","question,","matter","matter"]},{"Key":"names don't","Fragments":["hurt"]},{"Key":"don't hurt","Fragments":["as"]},{"Key":"hurt as","Fragments":["they"]},{"Key":"as they","Fragments":["might","tend","does"]},{"Key":"they might","Fragments":["in"]},{"Key":"might in","Fragments":["longer"]},{"Key":"in longer","Fragments":["code."]},{"Key":" Very","Fragments":["nice","nice.","interesting","clean","nice"]},{"Key":"Very nice","Fragments":["and","use"]},{"Key":"nice and","Fragments":["clean.","simple!","simple!"]},{"Key":"I wouldn't","Fragments":["use","use","have","prefix"]},{"Key":"wouldn't use","Fragments":["DNA/biology","DNA/biology"]},{"Key":"use DNA/biology","Fragments":["domain","domain"]},{"Key":"DNA/biology domain","Fragments":["terms","terms"]},{"Key":"domain terms","Fragments":["in","in"]},{"Key":"terms in","Fragments":["this","this"]},{"Key":"in this","Fragments":["code","code","example.","direction","case.","case.","case","case","case","use","solution."]},{"Key":"code –","Fragments":["this","this"]},{"Key":"– this","Fragments":["is","is"]},{"Key":"is an","Fragments":["implementation","implementation","O(n^2)","\"object\"","expression","expression","excellent","interesting","alternative"]},{"Key":"an implementation","Fragments":["of","of"]},{"Key":"implementation of","Fragments":["a","a","this","your","`RuleMaker`"]},{"Key":"a general","Fragments":["algorithm","algorithm","function","rule","rule","rule"]},{"Key":"general algorithm","Fragments":["that","that"]},{"Key":"algorithm that","Fragments":["doesn't","doesn't"]},{"Key":"about those","Fragments":["things.","things."]},{"Key":"those things.","Fragments":["This","This"]},{"Key":"things. This","Fragments":["algorithm","algorithm"]},{"Key":"This algorithm","Fragments":["is","is"]},{"Key":"algorithm is","Fragments":["all","all"]},{"Key":"is all","Fragments":["about","about"]},{"Key":"all about","Fragments":["strings","strings"]},{"Key":"about strings","Fragments":["and","and"]},{"Key":"strings and","Fragments":["characters.","characters.","yell","counting"]},{"Key":"But given","Fragments":["the"]},{"Key":"given the","Fragments":["current","profusion","structure","modest"]},{"Key":"the current","Fragments":["naming:","second"]},{"Key":"current naming:","Fragments":["`strand`"]},{"Key":"naming: `strand`","Fragments":["and"]},{"Key":"`strand` and","Fragments":["`other`"]},{"Key":"and `other`","Fragments":["perhaps"]},{"Key":"`other` perhaps","Fragments":["doesn't"]},{"Key":"perhaps doesn't","Fragments":["make"]},{"Key":"doesn't make","Fragments":["it"]},{"Key":"make it","Fragments":["clear","even","easier","a","extend","a","even","very","more","more","short","explicit","clear","an","read"]},{"Key":"it clear","Fragments":["that","what","that"]},{"Key":"clear that","Fragments":["`other`","it","you","the"]},{"Key":"that `other`","Fragments":["is"]},{"Key":"`other` is","Fragments":["also"]},{"Key":"is also","Fragments":["a"]},{"Key":"a strand.","Fragments":["There's"]},{"Key":"strand. There's","Fragments":["nothing"]},{"Key":"There's nothing","Fragments":["special"]},{"Key":"nothing special","Fragments":["about"]},{"Key":"special about","Fragments":["the"]},{"Key":"about the","Fragments":["first","code","`getOrElse`","count","name","inputs","state","RuleMaker","use","problem,"]},{"Key":"first one,","Fragments":["or"]},{"Key":"one, or","Fragments":["their"]},{"Key":"or their","Fragments":["order,"]},{"Key":"their order,","Fragments":["really."]},{"Key":"In my","Fragments":["code,","opinion","earlier","opinion,"]},{"Key":"my code,","Fragments":["I"]},{"Key":"code, I","Fragments":["clarified","can"]},{"Key":"I clarified","Fragments":["by"]},{"Key":"clarified by","Fragments":["naming"]},{"Key":"by naming","Fragments":["that"]},{"Key":"naming that","Fragments":["what"]},{"Key":"that what","Fragments":["you"]},{"Key":"you call","Fragments":["`x`","the"]},{"Key":"call `x`","Fragments":["and"]},{"Key":"`x` and","Fragments":["`y`","`y`","`y`"]},{"Key":"and `y`","Fragments":["are","as","more"]},{"Key":"`y` are","Fragments":["individual"]},{"Key":"are individual","Fragments":["characters,"]},{"Key":"individual characters,","Fragments":["so"]},{"Key":"characters, so","Fragments":["the"]},{"Key":"so the","Fragments":["reader","braces","reader"]},{"Key":"the reader","Fragments":["isn't","out.","never"]},{"Key":"reader isn't","Fragments":["left"]},{"Key":"isn't left","Fragments":["to"]},{"Key":"left to","Fragments":["reason"]},{"Key":"to reason","Fragments":["that"]},{"Key":"reason that","Fragments":["out"]},{"Key":"that out","Fragments":["from","into"]},{"Key":"out from","Fragments":["knowing"]},{"Key":"from knowing","Fragments":["what"]},{"Key":"knowing what","Fragments":["zip"]},{"Key":"what zip","Fragments":["does"]},{"Key":"zip does","Fragments":["to"]},{"Key":"does to","Fragments":["two"]},{"Key":"to two","Fragments":["strings."]},{"Key":"you still","Fragments":["want","wants"]},{"Key":"still want","Fragments":["to"]},{"Key":"to go","Fragments":["with","up","check","because"]},{"Key":"go with","Fragments":["domain","a","whitelisting"]},{"Key":"with domain","Fragments":["terms,"]},{"Key":"domain terms,","Fragments":["I"]},{"Key":"terms, I","Fragments":["think"]},{"Key":"think the","Fragments":["\"points\"","reg","code","question","matches","toString","frequencies","code","non-Map"]},{"Key":"the \"points\"","Fragments":["are"]},{"Key":"\"points\" are","Fragments":["\"nucleotides\"."]},{"Key":"Cool to","Fragments":["see"]},{"Key":"solution optimized","Fragments":["for"]},{"Key":"optimized for","Fragments":["speed."]},{"Key":"is definitely","Fragments":["orders","more"]},{"Key":"definitely orders","Fragments":["of"]},{"Key":"orders of","Fragments":["magnitude"]},{"Key":"of magnitude","Fragments":["more","less"]},{"Key":"magnitude more","Fragments":["difficult"]},{"Key":"more difficult","Fragments":["to"]},{"Key":"read, to","Fragments":["me."]},{"Key":"me. It","Fragments":["may"]},{"Key":"It may","Fragments":["or","have"]},{"Key":"may or","Fragments":["may"]},{"Key":"or may","Fragments":["not"]},{"Key":"may not","Fragments":["be","be"]},{"Key":"be faster","Fragments":["(lacking"]},{"Key":"faster (lacking","Fragments":["benchmarks)."]},{"Key":" With","Fragments":["real-life","this"]},{"Key":"With real-life","Fragments":["code,"]},{"Key":"real-life code,","Fragments":["it"]},{"Key":"code, it","Fragments":["would","can"]},{"Key":"would come","Fragments":["down"]},{"Key":"come down","Fragments":["to"]},{"Key":"to whether","Fragments":["we","the"]},{"Key":"whether we","Fragments":["have"]},{"Key":"we have","Fragments":["good"]},{"Key":"have good","Fragments":["reason"]},{"Key":"good reason","Fragments":["to"]},{"Key":"reason to","Fragments":["optimize","make","create","put","use","use"]},{"Key":"to optimize","Fragments":["for"]},{"Key":"for speed","Fragments":["at"]},{"Key":"speed at","Fragments":["the"]},{"Key":"the expense","Fragments":["of"]},{"Key":"expense of","Fragments":["maintainability,"]},{"Key":"of maintainability,","Fragments":["and"]},{"Key":"maintainability, and","Fragments":["of"]},{"Key":"course to","Fragments":["actually"]},{"Key":"actually benchmark","Fragments":["it"]},{"Key":"benchmark it","Fragments":["to"]},{"Key":"see that","Fragments":["we","what's"]},{"Key":"that we","Fragments":["get","want","want"]},{"Key":"we get","Fragments":["what","a"]},{"Key":"get what","Fragments":["we"]},{"Key":"what we","Fragments":["pay"]},{"Key":"we pay","Fragments":["for."]},{"Key":" I'd","Fragments":["go","still","like","prefer","at","refactor","also","start","like","like","break","also","also","recommend","suggest","just","recommend","use"]},{"Key":"I'd go","Fragments":["for","with"]},{"Key":"go for","Fragments":["readability"]},{"Key":"for readability","Fragments":["over","can","but","purposes","and","reasons"]},{"Key":"readability over","Fragments":["optimized"]},{"Key":"over optimized","Fragments":["performance"]},{"Key":"optimized performance","Fragments":["if"]},{"Key":"performance if","Fragments":["there"]},{"Key":"if there","Fragments":["were","is"]},{"Key":"there were","Fragments":["no","no"]},{"Key":"were no","Fragments":["noticeable","type"]},{"Key":"no noticeable","Fragments":["performance"]},{"Key":"noticeable performance","Fragments":["issues"]},{"Key":"performance issues","Fragments":["during"]},{"Key":"issues during","Fragments":["real"]},{"Key":"during real","Fragments":["use,"]},{"Key":"real use,","Fragments":["but"]},{"Key":"use, but","Fragments":["that's"]},{"Key":"but that's","Fragments":["based","not","personal"]},{"Key":"that's based","Fragments":["on"]},{"Key":"on *my*","Fragments":["experience"]},{"Key":"*my* experience","Fragments":["–"]},{"Key":"experience –","Fragments":["if"]},{"Key":"– if","Fragments":["@green"]},{"Key":"if @green","Fragments":["works"]},{"Key":"@green works","Fragments":["in"]},{"Key":"works in","Fragments":["a"]},{"Key":"a field","Fragments":["where"]},{"Key":"field where","Fragments":["he"]},{"Key":"where he","Fragments":["sees"]},{"Key":"he sees","Fragments":["more"]},{"Key":"sees more","Fragments":["problems"]},{"Key":"more problems","Fragments":["with"]},{"Key":"problems with","Fragments":["slow"]},{"Key":"with slow","Fragments":["code"]},{"Key":"code than","Fragments":["with"]},{"Key":"than with","Fragments":["hard-to-reason-about","```groupby```"]},{"Key":"with hard-to-reason-about","Fragments":["code,"]},{"Key":"hard-to-reason-about code,","Fragments":["I"]},{"Key":"can definitely","Fragments":["understand"]},{"Key":"definitely understand","Fragments":["that"]},{"Key":"understand that","Fragments":["preference."]},{"Key":"Another factor","Fragments":["is"]},{"Key":"factor is","Fragments":["whether"]},{"Key":"is whether","Fragments":["you"]},{"Key":"whether you","Fragments":["work","realize"]},{"Key":"you work","Fragments":["on"]},{"Key":"work on","Fragments":["shared","the"]},{"Key":"on shared","Fragments":["code"]},{"Key":"shared code","Fragments":["in"]},{"Key":"code in","Fragments":["a","real","general.","any"]},{"Key":"a team,","Fragments":["or"]},{"Key":"team, or","Fragments":["on"]},{"Key":"or on","Fragments":["your"]},{"Key":"on your","Fragments":["own","`count()`","tips.","scala"]},{"Key":"your own","Fragments":["stuff."]},{"Key":"own stuff.","Fragments":["A"]},{"Key":"stuff. A","Fragments":["clever,"]},{"Key":"A clever,","Fragments":["lone"]},{"Key":"clever, lone","Fragments":["programmer"]},{"Key":"lone programmer","Fragments":["can"]},{"Key":"programmer can","Fragments":["work"]},{"Key":"can work","Fragments":["quickly"]},{"Key":"work quickly","Fragments":["with"]},{"Key":"quickly with","Fragments":["pretty"]},{"Key":"with pretty","Fragments":["complex"]},{"Key":"pretty complex","Fragments":["code,"]},{"Key":"complex code,","Fragments":["but"]},{"Key":"code, but","Fragments":["if"]},{"Key":"if others","Fragments":["work"]},{"Key":"others work","Fragments":["on"]},{"Key":"same code","Fragments":["(at"]},{"Key":"code (at","Fragments":["the"]},{"Key":"same time,","Fragments":["or"]},{"Key":"time, or","Fragments":["when"]},{"Key":"or when","Fragments":["the"]},{"Key":"when the","Fragments":["first","last"]},{"Key":"first programmer","Fragments":["quits),"]},{"Key":"programmer quits),","Fragments":["then"]},{"Key":"quits), then","Fragments":["optimizing"]},{"Key":"then optimizing","Fragments":["for"]},{"Key":"optimizing for","Fragments":["readability"]},{"Key":"readability can","Fragments":["pay"]},{"Key":"can pay","Fragments":["off."]},{"Key":" Clever,","Fragments":["and"]},{"Key":"Clever, and","Fragments":["much"]},{"Key":"and much","Fragments":["easier"]},{"Key":"much easier","Fragments":["to","to"]},{"Key":"The code","Fragments":["is"]},{"Key":"code is","Fragments":["short","so","tiny,","more","mutating","ordered"]},{"Key":"is short","Fragments":["enough"]},{"Key":"short enough","Fragments":["that"]},{"Key":"enough that","Fragments":["it's"]},{"Key":"not very","Fragments":["important,","scala-like...","happy"]},{"Key":"very important,","Fragments":["but"]},{"Key":"important, but","Fragments":["I'd"]},{"Key":"but I'd","Fragments":["consider"]},{"Key":"I'd consider","Fragments":["renaming"]},{"Key":"consider renaming","Fragments":["`a`"]},{"Key":"renaming `a`","Fragments":["and"]},{"Key":"`b` to","Fragments":["help"]},{"Key":"to help","Fragments":["the","you","me","me"]},{"Key":"help the","Fragments":["reader"]},{"Key":"reader out.","Fragments":["Along"]},{"Key":"out. Along","Fragments":["the"]},{"Key":"Along the","Fragments":["lines"]},{"Key":"the lines","Fragments":["of"]},{"Key":"lines of","Fragments":["`s1`"]},{"Key":"of `s1`","Fragments":["or"]},{"Key":"`s1` or","Fragments":["`string1`,","`string1`"]},{"Key":"or `string1`,","Fragments":["maybe."]},{"Key":"How does","Fragments":["`s1`"]},{"Key":"does `s1`","Fragments":["or"]},{"Key":"or `string1`","Fragments":["convey"]},{"Key":"`string1` convey","Fragments":["any"]},{"Key":"convey any","Fragments":["information"]},{"Key":"any information","Fragments":["that"]},{"Key":"information that","Fragments":["the"]},{"Key":"the name","Fragments":["`a`","of","of","\"matches\",","is"]},{"Key":"name `a`","Fragments":["and"]},{"Key":"type `String`","Fragments":["don't"]},{"Key":"`String` don't","Fragments":["already"]},{"Key":"don't already","Fragments":["convey?"]},{"Key":" Ok,","Fragments":["so","I"]},{"Key":"Ok, so","Fragments":["here's"]},{"Key":"so here's","Fragments":["my"]},{"Key":"here's my","Fragments":["reasoning:"]},{"Key":"understand your","Fragments":["desire","reasoning"]},{"Key":"your desire","Fragments":["to"]},{"Key":"desire to","Fragments":["keep"]},{"Key":"to keep","Fragments":["the","the","the","calling","the"]},{"Key":"keep the","Fragments":["variable","code","cached","public","**if/else","names"]},{"Key":"the variable","Fragments":["names","names","shadowing"]},{"Key":"names non-domain","Fragments":["specific"]},{"Key":"non-domain specific","Fragments":["given"]},{"Key":"specific given","Fragments":["that"]},{"Key":"given that","Fragments":["this"]},{"Key":"that this","Fragments":["function","code","a","exercise"]},{"Key":"this function","Fragments":["could"]},{"Key":"function could","Fragments":["be","also","contain"]},{"Key":"be interpreted","Fragments":["as"]},{"Key":"interpreted as","Fragments":["a"]},{"Key":"a generic","Fragments":["function"]},{"Key":"generic function","Fragments":["over"]},{"Key":"function over","Fragments":["lists.","collections."]},{"Key":"over lists.","Fragments":["However,"]},{"Key":"lists. However,","Fragments":["it"]},{"Key":"However, it","Fragments":["is"]},{"Key":"a function","Fragments":["in","of","`count`","to","with","called"]},{"Key":"function in","Fragments":["an","the","Seq","`nucleotideCounts`.","a"]},{"Key":"object called","Fragments":["`Hamming`,"]},{"Key":"called `Hamming`,","Fragments":["and"]},{"Key":"`Hamming`, and","Fragments":["it"]},{"Key":"and it","Fragments":["is","becomes","sounds","still","is","shows","is"]},{"Key":"is called","Fragments":["`compute`","`identity`."]},{"Key":"called `compute`","Fragments":["-"]},{"Key":"- so","Fragments":["it","naming","I'm","that"]},{"Key":"so it","Fragments":["is","can","is","could","might"]},{"Key":"is already","Fragments":["tied","in","a"]},{"Key":"already tied","Fragments":["to"]},{"Key":"tied to","Fragments":["a","routing)"]},{"Key":"a specific","Fragments":["domain!"]},{"Key":"specific domain!","Fragments":["If"]},{"Key":"domain! If","Fragments":["it"]},{"Key":"If it","Fragments":["was","had","isn't"]},{"Key":"it was","Fragments":["in","more","requested."]},{"Key":"was in","Fragments":["`List`,","rush"]},{"Key":"in `List`,","Fragments":["and"]},{"Key":"`List`, and","Fragments":["called"]},{"Key":"and called","Fragments":["`difference`,"]},{"Key":"called `difference`,","Fragments":["for"]},{"Key":"`difference`, for","Fragments":["example,"]},{"Key":"for example,","Fragments":["I'd"]},{"Key":"example, I'd","Fragments":["have"]},{"Key":"I'd have","Fragments":["no"]},{"Key":"have no","Fragments":["problem","real"]},{"Key":"no problem","Fragments":["giving"]},{"Key":"problem giving","Fragments":["the"]},{"Key":"variables generic","Fragments":["names."]},{"Key":"generic names.","Fragments":["But"]},{"Key":"names. But","Fragments":["as"]},{"Key":"But as","Fragments":["it"]},{"Key":"as it","Fragments":["is","describes","is","wouldn't","obscures","better"]},{"Key":"already in","Fragments":["a"]},{"Key":"a particular","Fragments":["domain"]},{"Key":"particular domain","Fragments":["I"]},{"Key":"domain I","Fragments":["want"]},{"Key":"I want","Fragments":["to","to","to"]},{"Key":"explicit as","Fragments":["to"]},{"Key":"as to","Fragments":["what","what","what"]},{"Key":"to what","Fragments":["parts","each","I","you"]},{"Key":"what parts","Fragments":["of"]},{"Key":"parts of","Fragments":["that","a"]},{"Key":"of that","Fragments":["domain","variable"]},{"Key":"that domain","Fragments":["it"]},{"Key":"domain it","Fragments":["refers"]},{"Key":"it refers","Fragments":["to."]},{"Key":" By","Fragments":["choosing","looking","using"]},{"Key":"By choosing","Fragments":["`other`"]},{"Key":"choosing `other`","Fragments":["as"]},{"Key":"`other` as","Fragments":["a"]},{"Key":"a variable","Fragments":["name","in","if","name","so"]},{"Key":"variable name","Fragments":["I","is"]},{"Key":"name I","Fragments":["hope"]},{"Key":"I hope","Fragments":["that,"]},{"Key":"hope that,","Fragments":["by"]},{"Key":"that, by","Fragments":["its"]},{"Key":"by its","Fragments":["proximity"]},{"Key":"its proximity","Fragments":["to"]},{"Key":"proximity to","Fragments":["`strand`,"]},{"Key":"to `strand`,","Fragments":["it"]},{"Key":"`strand`, it","Fragments":["will"]},{"Key":"be clear","Fragments":["that"]},{"Key":"it too","Fragments":["is"]},{"Key":"too is","Fragments":["a"]},{"Key":"a strand","Fragments":["of"]},{"Key":"strand of","Fragments":["DNA."]},{"Key":"think it's","Fragments":["fine","about","ok,","a","a"]},{"Key":"it's fine","Fragments":["to"]},{"Key":"fine to","Fragments":["assume"]},{"Key":"to assume","Fragments":["understanding"]},{"Key":"assume understanding","Fragments":["of"]},{"Key":"understanding of","Fragments":["what","what"]},{"Key":"of what","Fragments":["`zip`","I","the","are","is","it"]},{"Key":"what `zip`","Fragments":["does","does"]},{"Key":"`zip` does","Fragments":["as","*not*","and"]},{"Key":"does as","Fragments":["a)"]},{"Key":"as a)","Fragments":["you"]},{"Key":"a) you","Fragments":["really"]},{"Key":"you really","Fragments":["should"]},{"Key":"really should","Fragments":["understand"]},{"Key":"should understand","Fragments":["`zip`"]},{"Key":"understand `zip`","Fragments":["as"]},{"Key":"`zip` as","Fragments":["a"]},{"Key":"a developer","Fragments":["and"]},{"Key":"developer and","Fragments":["b)"]},{"Key":"and b)","Fragments":["if"]},{"Key":"b) if","Fragments":["you"]},{"Key":"don't it's","Fragments":["easy"]},{"Key":"it's easy","Fragments":["to","to"]},{"Key":"easy to","Fragments":["look","append","validate,","understand,","follow.","understand","detect","understand","grasp","get","refactor","see","replace","union"]},{"Key":"look up.","Fragments":["My"]},{"Key":"up. My","Fragments":["choice"]},{"Key":"My choice","Fragments":["of"]},{"Key":"choice of","Fragments":["`x`","filter"]},{"Key":"of `x`","Fragments":["and"]},{"Key":"`y` as","Fragments":["variable"]},{"Key":"as variable","Fragments":["names"]},{"Key":"names for","Fragments":["the","each","readability."]},{"Key":"the anonymous","Fragments":["function","function,"]},{"Key":"anonymous function","Fragments":["passed"]},{"Key":"function passed","Fragments":["to"]},{"Key":"passed to","Fragments":["`count`","the","matches.","the"]},{"Key":"to `count`","Fragments":["is"]},{"Key":"`count` is","Fragments":["simply"]},{"Key":"is simply","Fragments":["because"]},{"Key":"simply because","Fragments":["it's"]},{"Key":"because it's","Fragments":["such","specified"]},{"Key":"it's such","Fragments":["a"]},{"Key":"such a","Fragments":["short","simple","small"]},{"Key":"a short","Fragments":["function"]},{"Key":"short function","Fragments":["it"]},{"Key":"function it","Fragments":["doesn't","could"]},{"Key":"need any","Fragments":["more."]},{"Key":"I should","Fragments":["also","have","have"]},{"Key":"should also","Fragments":["point","check"]},{"Key":"also point","Fragments":["out"]},{"Key":"point out","Fragments":["that"]},{"Key":"out that","Fragments":["`zip`","it","```(?!')[\\W]+```","the","my","`if`"]},{"Key":"that `zip`","Fragments":["does"]},{"Key":"does *not*","Fragments":["combine"]},{"Key":"*not* combine","Fragments":["two"]},{"Key":"combine two","Fragments":["*String*s"]},{"Key":"two *String*s","Fragments":["pairwise,"]},{"Key":"*String*s pairwise,","Fragments":["but"]},{"Key":"pairwise, but","Fragments":["rather"]},{"Key":"but rather","Fragments":["two"]},{"Key":"rather two","Fragments":["lists"]},{"Key":"two lists","Fragments":["-"]},{"Key":"lists -","Fragments":["so"]},{"Key":"so naming","Fragments":["the"]},{"Key":"naming the","Fragments":["variables","variables"]},{"Key":"variables to","Fragments":["indicate","hold"]},{"Key":"to indicate","Fragments":["they"]},{"Key":"indicate they","Fragments":["are"]},{"Key":"are characters","Fragments":["does"]},{"Key":"characters does","Fragments":["not"]},{"Key":"does not","Fragments":["actually","make","require","change.","really","allow","matter"]},{"Key":"not actually","Fragments":["give"]},{"Key":"actually give","Fragments":["any"]},{"Key":"give any","Fragments":["insight"]},{"Key":"any insight","Fragments":["into"]},{"Key":"insight into","Fragments":["what"]},{"Key":"into what","Fragments":["`zip`"]},{"Key":"does and","Fragments":["might"]},{"Key":"and might","Fragments":["actually","be"]},{"Key":"might actually","Fragments":["confuse"]},{"Key":"actually confuse","Fragments":["matters"]},{"Key":"confuse matters","Fragments":[":-)"]},{"Key":"The Haskell","Fragments":["thing"]},{"Key":"Haskell thing","Fragments":["sounds"]},{"Key":"thing sounds","Fragments":["very"]},{"Key":"sounds very","Fragments":["nice!"]},{"Key":" Yeah,","Fragments":["with","you"]},{"Key":"Yeah, with","Fragments":["an"]},{"Key":"object this","Fragments":["small,"]},{"Key":"this small,","Fragments":["naming"]},{"Key":"small, naming","Fragments":["short-lived"]},{"Key":"naming short-lived","Fragments":["variables"]},{"Key":"short-lived variables","Fragments":["isn't"]},{"Key":"variables isn't","Fragments":["as"]},{"Key":"isn't as","Fragments":["important."]},{"Key":"as important.","Fragments":["Really,"]},{"Key":"important. Really,","Fragments":["if"]},{"Key":"Really, if","Fragments":["they"]},{"Key":"if they","Fragments":["help","are","are"]},{"Key":"they help","Fragments":["keep","to"]},{"Key":"help keep","Fragments":["the"]},{"Key":"code super","Fragments":["tiny,"]},{"Key":"super tiny,","Fragments":["that"]},{"Key":"tiny, that","Fragments":["in"]},{"Key":"that in","Fragments":["itself","the","the","Scala","functional","the","the","line"]},{"Key":"in itself","Fragments":["can"]},{"Key":"itself can","Fragments":["help"]},{"Key":"can help","Fragments":["readability."]},{"Key":" @jade","Fragments":["The"]},{"Key":"@jade The","Fragments":["String"]},{"Key":"The String","Fragments":["type"]},{"Key":"String type","Fragments":["is"]},{"Key":"type is","Fragments":["something","used"]},{"Key":"is something","Fragments":["you"]},{"Key":"something you","Fragments":["relate"]},{"Key":"you relate","Fragments":["*indirectly*"]},{"Key":"relate *indirectly*","Fragments":["to"]},{"Key":"*indirectly* to","Fragments":["the"]},{"Key":" E.g.","Fragments":["you"]},{"Key":"E.g. you","Fragments":["read"]},{"Key":"you read","Fragments":["`a(i)`"]},{"Key":"read `a(i)`","Fragments":["and"]},{"Key":"`a(i)` and","Fragments":["think"]},{"Key":"and think","Fragments":["\"oh"]},{"Key":"think \"oh","Fragments":["yeah,"]},{"Key":"\"oh yeah,","Fragments":["`a`"]},{"Key":"yeah, `a`","Fragments":["was"]},{"Key":"`a` was","Fragments":["a"]},{"Key":"was a","Fragments":["`String`,","good"]},{"Key":"a `String`,","Fragments":["right?\""]},{"Key":" Versus","Fragments":["just"]},{"Key":"Versus just","Fragments":["reading"]},{"Key":"just reading","Fragments":["`string1(i)`."]},{"Key":"reading `string1(i)`.","Fragments":["More"]},{"Key":"`string1(i)`. More","Fragments":["immediately"]},{"Key":"More immediately","Fragments":["obvious,"]},{"Key":"immediately obvious,","Fragments":["less"]},{"Key":"obvious, less","Fragments":["mental"]},{"Key":"less mental","Fragments":["overhead."]},{"Key":" Again,","Fragments":["since","just"]},{"Key":"Again, since","Fragments":["this"]},{"Key":"so short,","Fragments":["the"]},{"Key":"short, the","Fragments":["difference"]},{"Key":"the difference","Fragments":["is","of","you","between","in"]},{"Key":"is small","Fragments":["(but","and"]},{"Key":"small (but","Fragments":["there)."]},{"Key":"(but there).","Fragments":["With"]},{"Key":"there). With","Fragments":["longer"]},{"Key":"With longer","Fragments":["code,"]},{"Key":"longer code,","Fragments":["it"]},{"Key":"it can","Fragments":["get","be","return","be","be","make","be","be","be"]},{"Key":"get fairly","Fragments":["significant,"]},{"Key":"fairly significant,","Fragments":["so"]},{"Key":"significant, so","Fragments":["it"]},{"Key":"I personally","Fragments":["am","would"]},{"Key":"personally am","Fragments":["dead"]},{"Key":"am dead","Fragments":["set"]},{"Key":"dead set","Fragments":["against"]},{"Key":"set against","Fragments":["ever"]},{"Key":"against ever","Fragments":["referring"]},{"Key":"ever referring","Fragments":["to"]},{"Key":"referring to","Fragments":["the"]},{"Key":"variable in","Fragments":["its","the"]},{"Key":"in its","Fragments":["name."]},{"Key":"its name.","Fragments":["The"]},{"Key":"name. The","Fragments":["type"]},{"Key":"The type","Fragments":["could"]},{"Key":"type could","Fragments":["change"]},{"Key":"could change","Fragments":["but"]},{"Key":"change but","Fragments":["the"]},{"Key":"but the","Fragments":["*meaning*","names"]},{"Key":"the *meaning*","Fragments":["of","of"]},{"Key":"*meaning* of","Fragments":["that","the"]},{"Key":"that variable","Fragments":["in"]},{"Key":"the given","Fragments":["domain","test"]},{"Key":"given domain","Fragments":["never"]},{"Key":"domain never","Fragments":["will!"]},{"Key":"But [Hamming","Fragments":["distance](http://en.wikipedia.org/wiki/Hamming_distance)"]},{"Key":"[Hamming distance](http://en.wikipedia.org/wiki/Hamming_distance)","Fragments":["is"]},{"Key":"distance](http://en.wikipedia.org/wiki/Hamming_distance) is","Fragments":["in"]},{"Key":"the information","Fragments":["theory"]},{"Key":"information theory","Fragments":["domain,"]},{"Key":"theory domain,","Fragments":["where"]},{"Key":"domain, where","Fragments":["it's"]},{"Key":"where it's","Fragments":["described"]},{"Key":"it's described","Fragments":["in"]},{"Key":"described in","Fragments":["terms"]},{"Key":"in terms","Fragments":["of","of"]},{"Key":"of strings.","Fragments":["It's"]},{"Key":"strings. It's","Fragments":["not"]},{"Key":"It's not","Fragments":["a","every"]},{"Key":"a biology","Fragments":["thing,","thing,"]},{"Key":"biology thing,","Fragments":["though","I'd"]},{"Key":"thing, though","Fragments":["it"]},{"Key":"though it","Fragments":["may","is","seems"]},{"Key":"it may","Fragments":["be","not"]},{"Key":"may be","Fragments":["used","simpler","beneficial","useful","defined","declared"]},{"Key":"be used","Fragments":["with","as","in","to","twice.","instead","by"]},{"Key":"used with","Fragments":["DNA."]},{"Key":"with DNA.","Fragments":["I"]},{"Key":"DNA. I","Fragments":["can"]},{"Key":"see how","Fragments":["one","that","it","you"]},{"Key":"how one","Fragments":["could"]},{"Key":"one could","Fragments":["assume","fuss"]},{"Key":"could assume","Fragments":["that,"]},{"Key":"assume that,","Fragments":["though."]},{"Key":"it had","Fragments":["been"]},{"Key":"had been","Fragments":["a"]},{"Key":"been a","Fragments":["biology","great","better"]},{"Key":"thing, I'd","Fragments":["totally"]},{"Key":"I'd totally","Fragments":["agree"]},{"Key":"totally agree","Fragments":["with"]},{"Key":"I'd still","Fragments":["prefer"]},{"Key":"still prefer","Fragments":["`c1`"]},{"Key":"prefer `c1`","Fragments":["or"]},{"Key":"`c1` or","Fragments":["`char1`"]},{"Key":"or `char1`","Fragments":["or"]},{"Key":"`char1` or","Fragments":["something"]},{"Key":"or something","Fragments":["–","similar..."]},{"Key":"something –","Fragments":["I"]},{"Key":"it's about","Fragments":["context."]},{"Key":"about context.","Fragments":["The"]},{"Key":"context. The","Fragments":["less"]},{"Key":"The less","Fragments":["context"]},{"Key":"less context","Fragments":["you"]},{"Key":"context you","Fragments":["need"]},{"Key":"to understand","Fragments":["a","what","than","the","(at","what"]},{"Key":"understand a","Fragments":["subpart"]},{"Key":"a subpart","Fragments":["of"]},{"Key":"subpart of","Fragments":["a"]},{"Key":"a program,","Fragments":["the"]},{"Key":"program, the","Fragments":["quicker"]},{"Key":"the quicker","Fragments":["you"]},{"Key":"quicker you","Fragments":["can"]},{"Key":"can grasp","Fragments":["it,"]},{"Key":"grasp it,","Fragments":["without"]},{"Key":"it, without","Fragments":["having"]},{"Key":"without having","Fragments":["to","to"]},{"Key":"look at","Fragments":["other","the","pattern","the","the","I","mapValues","the","the","[my","the","my","the","the","the","`StringOps`.","an","the","the","StringOps","```isEmpty```,","StringOps","the","the"]},{"Key":"at other","Fragments":["parts","solutions,","implementations,"]},{"Key":"other parts","Fragments":["or"]},{"Key":"parts or","Fragments":["having"]},{"Key":"or having","Fragments":["to"]},{"Key":"to remember","Fragments":["them.","that","and","that.","that"]},{"Key":"is tiny,","Fragments":["and"]},{"Key":"tiny, and","Fragments":["when"]},{"Key":"and when","Fragments":["we","we"]},{"Key":"when we","Fragments":["discuss","read"]},{"Key":"we discuss","Fragments":["it,"]},{"Key":"discuss it,","Fragments":["we've"]},{"Key":"it, we've","Fragments":["both"]},{"Key":"we've both","Fragments":["written"]},{"Key":"both written","Fragments":["it"]},{"Key":"written it","Fragments":["recently;"]},{"Key":"it recently;","Fragments":["and"]},{"Key":"recently; and","Fragments":["when"]},{"Key":"we read","Fragments":["it,"]},{"Key":"read it,","Fragments":["we"]},{"Key":"it, we","Fragments":["just"]},{"Key":"we just","Fragments":["read"]},{"Key":"just read","Fragments":["it"]},{"Key":"read it","Fragments":["beginning"]},{"Key":"it beginning","Fragments":["to"]},{"Key":"beginning to","Fragments":["end."]},{"Key":"to end.","Fragments":["But"]},{"Key":"end. But","Fragments":["when"]},{"Key":"But when","Fragments":["I"]},{"Key":"when I","Fragments":["encounter","started","wasn't"]},{"Key":"I encounter","Fragments":["code"]},{"Key":"encounter code","Fragments":["in"]},{"Key":"in real","Fragments":["life"]},{"Key":"real life","Fragments":["and"]},{"Key":"life and","Fragments":["need"]},{"Key":"and need","Fragments":["to"]},{"Key":"make modifications,","Fragments":["I"]},{"Key":"modifications, I","Fragments":["tend"]},{"Key":"I tend","Fragments":["to","to","to"]},{"Key":"tend to","Fragments":["jump","be","use","use:"]},{"Key":"to jump","Fragments":["to"]},{"Key":"jump to","Fragments":["the"]},{"Key":"the place","Fragments":["that","of"]},{"Key":"place that","Fragments":["looks"]},{"Key":"that looks","Fragments":["right"]},{"Key":"looks right","Fragments":["and"]},{"Key":"right and","Fragments":["make"]},{"Key":"make some","Fragments":["local","claim"]},{"Key":"some local","Fragments":["change."]},{"Key":"local change.","Fragments":["And"]},{"Key":"change. And","Fragments":["then"]},{"Key":"And then","Fragments":["something"]},{"Key":"then something","Fragments":["like"]},{"Key":"something like","Fragments":["`char1","this","```s.trim.isEmpty```","`input.filter(_.isDigit)`","`p","\"Intonation(s).response\"","\"base\"","`sentence`?","this:"]},{"Key":"like `char1","Fragments":["!="]},{"Key":"`char1 !=","Fragments":["char2`"]},{"Key":"!= char2`","Fragments":["would"]},{"Key":"char2` would","Fragments":["be"]},{"Key":" @eunice","Fragments":["Yes,"]},{"Key":"@eunice Yes,","Fragments":["you"]},{"Key":"Yes, you","Fragments":["should"]},{"Key":"you should","Fragments":["name","only","mark","bear","rewrite","always","be","really","forget","make","clone","be"]},{"Key":"should name","Fragments":["for"]},{"Key":"name for","Fragments":["roles,","a","increased","the","decompose?","your","clarity","`what`"]},{"Key":"for roles,","Fragments":["not"]},{"Key":"roles, not","Fragments":["types."]},{"Key":"not types.","Fragments":["But"]},{"Key":"types. But","Fragments":["for"]},{"Key":"But for","Fragments":["a"]},{"Key":"string comparison","Fragments":["algorithm,","metric,"]},{"Key":"comparison algorithm,","Fragments":["surely"]},{"Key":"algorithm, surely","Fragments":["the"]},{"Key":"surely the","Fragments":["arguments"]},{"Key":"the arguments","Fragments":["play","to"]},{"Key":"arguments play","Fragments":["the"]},{"Key":"play the","Fragments":["roles"]},{"Key":"the roles","Fragments":["of"]},{"Key":"roles of","Fragments":["strings?"]},{"Key":"of strings?","Fragments":["Whether"]},{"Key":"strings? Whether","Fragments":["or"]},{"Key":"Whether or","Fragments":["not"]},{"Key":"or not","Fragments":["they"]},{"Key":"not they","Fragments":["happen"]},{"Key":"they happen","Fragments":["to","to"]},{"Key":"happen to","Fragments":["be","be","generate"]},{"Key":"be of","Fragments":["type"]},{"Key":"of type","Fragments":["`String`.","Boolean."]},{"Key":" Interesting","Fragments":["-","way","solution."]},{"Key":"Interesting -","Fragments":["I"]},{"Key":"did not","Fragments":["know","look"]},{"Key":"know it","Fragments":["wasn't"]},{"Key":"wasn't specific","Fragments":["to"]},{"Key":"specific to","Fragments":["DNA!"]},{"Key":"my resistance","Fragments":["to"]},{"Key":"resistance to","Fragments":["giving"]},{"Key":"to giving","Fragments":["`x`","them"]},{"Key":"giving `x`","Fragments":["and"]},{"Key":"`y` more","Fragments":["specific"]},{"Key":"more specific","Fragments":["names","use"]},{"Key":"specific names","Fragments":["stems"]},{"Key":"names stems","Fragments":["from"]},{"Key":"stems from","Fragments":["the"]},{"Key":"the fact","Fragments":["that","that","that","that"]},{"Key":"fact that","Fragments":["I","there","your","the","PrimeFactors"]},{"Key":"I resent","Fragments":["having"]},{"Key":"resent having","Fragments":["to"]},{"Key":"to include","Fragments":["them"]},{"Key":"include them","Fragments":["at"]},{"Key":"them at","Fragments":["all"]},{"Key":"all :-).","Fragments":["In"]},{"Key":":-). In","Fragments":["a"]},{"Key":"In a","Fragments":["nicer","simple"]},{"Key":"nicer language","Fragments":["like"]},{"Key":"language like","Fragments":["Haskell"]},{"Key":"like Haskell","Fragments":["you"]},{"Key":"Haskell you","Fragments":["could"]},{"Key":"could put","Fragments":["exactly"]},{"Key":"put exactly","Fragments":["what"]},{"Key":"you mean","Fragments":["in","guard"]},{"Key":"mean in","Fragments":["the"]},{"Key":"place of","Fragments":["the"]},{"Key":"anonymous function,","Fragments":["which"]},{"Key":"function, which","Fragments":["is"]},{"Key":"which is","Fragments":["nothing","the","slightly","possible","the","slightly","at","basically","the","preferable","kind","not"]},{"Key":"is nothing","Fragments":["more"]},{"Key":"nothing more","Fragments":["or"]},{"Key":"more or","Fragments":["less"]},{"Key":"or less","Fragments":["that"]},{"Key":"less that","Fragments":["the"]},{"Key":"the \"not","Fragments":["equal\""]},{"Key":"\"not equal\"","Fragments":["operator"]},{"Key":"equal\" operator","Fragments":["itself:"]},{"Key":"operator itself:","Fragments":["`(/=)`"]},{"Key":"itself: `(/=)`","Fragments":["in"]},{"Key":"`(/=)` in","Fragments":["Haskell."]},{"Key":"in Haskell.","Fragments":["So"]},{"Key":"Haskell. So","Fragments":["their"]},{"Key":"So their","Fragments":["existence"]},{"Key":"their existence","Fragments":["is"]},{"Key":"existence is","Fragments":["entirely"]},{"Key":"is entirely","Fragments":["pointless"]},{"Key":"entirely pointless","Fragments":["(and"]},{"Key":"pointless (and","Fragments":["down"]},{"Key":"(and down","Fragments":["to"]},{"Key":"the failings","Fragments":["of"]},{"Key":"failings of","Fragments":["the"]},{"Key":"the language)","Fragments":["which"]},{"Key":"language) which","Fragments":["I"]},{"Key":"is part","Fragments":["of","of"]},{"Key":"of why","Fragments":["I"]},{"Key":"why I","Fragments":["don't","chose","am","didn't"]},{"Key":"to honour","Fragments":["them"]},{"Key":"honour them","Fragments":["with"]},{"Key":"them with","Fragments":["names","a"]},{"Key":"with names","Fragments":["of"]},{"Key":"names of","Fragments":["their","variables","variables"]},{"Key":"of their","Fragments":["own."]},{"Key":"their own.","Fragments":["If"]},{"Key":"own. If","Fragments":["there"]},{"Key":"If there","Fragments":["was"]},{"Key":"was more","Fragments":["to","explicit","in"]},{"Key":"more to","Fragments":["do","come","the"]},{"Key":"do with","Fragments":["them","me","only"]},{"Key":"with them","Fragments":["that"]},{"Key":"them that","Fragments":["a"]},{"Key":"a single","Fragments":["operation","argument","expression","if","expression.","expression.","expression.","express","sweep","statement?","upper","return","expression","nucleotide,","test","lock?","reason,","map"]},{"Key":"single operation","Fragments":["I'd"]},{"Key":"operation I'd","Fragments":["be"]},{"Key":"I'd be","Fragments":["more"]},{"Key":"more amenable","Fragments":["to"]},{"Key":"amenable to","Fragments":["giving"]},{"Key":"giving them","Fragments":["more"]},{"Key":"them more","Fragments":["obvious","than"]},{"Key":"more obvious","Fragments":["names","what"]},{"Key":"obvious names","Fragments":["-"]},{"Key":"names -","Fragments":["but"]},{"Key":"that can","Fragments":["always","do"]},{"Key":"can always","Fragments":["be"]},{"Key":"always be","Fragments":["deferred"]},{"Key":"be deferred","Fragments":["until"]},{"Key":"deferred until","Fragments":["necessary."]},{"Key":" WRT","Fragments":["the"]},{"Key":"WRT the","Fragments":["idea"]},{"Key":"the idea","Fragments":["of","from","with"]},{"Key":"idea of","Fragments":["`strandOther`"]},{"Key":"of `strandOther`","Fragments":["as"]},{"Key":"`strandOther` as","Fragments":["a"]},{"Key":"a name-","Fragments":["I"]},{"Key":"name- I","Fragments":["am"]},{"Key":"I am","Fragments":["very","extremely","trying","wrong,","looking","mentoring.","not","unable","going","not","using","not","not","curious","going","mistaken,"]},{"Key":"am very","Fragments":["keen"]},{"Key":"very keen","Fragments":["on"]},{"Key":"keen on","Fragments":["reducing"]},{"Key":"on reducing","Fragments":["the"]},{"Key":"reducing the","Fragments":["length"]},{"Key":"the length","Fragments":["of","of","of"]},{"Key":"length of","Fragments":["variable","the","the"]},{"Key":"of variable","Fragments":["names"]},{"Key":"names through","Fragments":["context"]},{"Key":"through context","Fragments":["-"]},{"Key":"context -","Fragments":["so"]},{"Key":"I'm personally","Fragments":["happy"]},{"Key":"personally happy","Fragments":["with"]},{"Key":"with it","Fragments":["just","I'd"]},{"Key":"it just","Fragments":["being","addresses"]},{"Key":"just being","Fragments":["called"]},{"Key":"being called","Fragments":["`other`."]},{"Key":"called `other`.","Fragments":["I"]},{"Key":"`other`. I","Fragments":["can"]},{"Key":"that could","Fragments":["become","really","be"]},{"Key":"could become","Fragments":["confusing"]},{"Key":"become confusing","Fragments":["if"]},{"Key":"confusing if","Fragments":["the"]},{"Key":"the object","Fragments":["became","Year","for","instance.","instance"]},{"Key":"object became","Fragments":["large"]},{"Key":"became large","Fragments":["-"]},{"Key":"large -","Fragments":["but"]},{"Key":"am extremely","Fragments":["strict"]},{"Key":"extremely strict","Fragments":["about"]},{"Key":"strict about","Fragments":["writing"]},{"Key":"about writing","Fragments":["and"]},{"Key":"writing and","Fragments":["maintaining"]},{"Key":"and maintaining","Fragments":["small"]},{"Key":"maintaining small","Fragments":["objects"]},{"Key":"small objects","Fragments":["/"]},{"Key":"objects /","Fragments":["functions"]},{"Key":"/ functions","Fragments":["/"]},{"Key":"functions /","Fragments":["files"]},{"Key":"/ files","Fragments":["-"]},{"Key":"files -","Fragments":["so"]},{"Key":"that should","Fragments":["never"]},{"Key":"should never","Fragments":["become"]},{"Key":"never become","Fragments":["a"]},{"Key":"become a","Fragments":["problem."]},{"Key":" @amanda","Fragments":["So"]},{"Key":"@amanda So","Fragments":["this"]},{"Key":"So this","Fragments":["is","is"]},{"Key":"is one","Fragments":["of","where","of"]},{"Key":"one of","Fragments":["the","the","those","the"]},{"Key":"the limitations","Fragments":["of"]},{"Key":"limitations of","Fragments":["Scala"]},{"Key":"of Scala","Fragments":["I"]},{"Key":"Scala I","Fragments":["think."]},{"Key":"I think.","Fragments":["Imagine"]},{"Key":"think. Imagine","Fragments":["that"]},{"Key":"Imagine that","Fragments":["there"]},{"Key":"that there","Fragments":["were","must","are","was"]},{"Key":"no type","Fragments":["anotations"]},{"Key":"type anotations","Fragments":["required"]},{"Key":"anotations required","Fragments":["for"]},{"Key":"required for","Fragments":["this"]},{"Key":"this code;","Fragments":["what"]},{"Key":"code; what","Fragments":["about"]},{"Key":"what about","Fragments":["the","using"]},{"Key":"code specifies","Fragments":["a"]},{"Key":"specifies a","Fragments":["type?"]},{"Key":"a type?","Fragments":["To"]},{"Key":"type? To","Fragments":["my"]},{"Key":"To my","Fragments":["eyes"]},{"Key":"my eyes","Fragments":["the"]},{"Key":"eyes the","Fragments":["only"]},{"Key":"only prerequisite","Fragments":["is"]},{"Key":"prerequisite is","Fragments":["that"]},{"Key":"that they","Fragments":["must"]},{"Key":"they must","Fragments":["support"]},{"Key":"must support","Fragments":["`length`,"]},{"Key":"support `length`,","Fragments":["`count`"]},{"Key":"`length`, `count`","Fragments":["and"]},{"Key":"and `apply`.","Fragments":["Might"]},{"Key":"`apply`. Might","Fragments":["be"]},{"Key":"Might be","Fragments":["string,","a"]},{"Key":"be string,","Fragments":["might"]},{"Key":"string, might","Fragments":["be"]},{"Key":"be any","Fragments":["collection."]},{"Key":"any collection.","Fragments":["If"]},{"Key":"collection. If","Fragments":["you're"]},{"Key":"you're going","Fragments":["to","to","to"]},{"Key":"to treat","Fragments":["them","them"]},{"Key":"treat them","Fragments":["generically","as","specifically","as"]},{"Key":"them generically","Fragments":["then"]},{"Key":"generically then","Fragments":["why"]},{"Key":"then why","Fragments":["not"]},{"Key":"why not","Fragments":["treat","treat","just","just","do","check"]},{"Key":"not treat","Fragments":["them","them"]},{"Key":"them as","Fragments":["generically","specifically","private"]},{"Key":"as generically","Fragments":["as"]},{"Key":"generically as","Fragments":["possible."]},{"Key":"as possible.","Fragments":["If","Whichever"]},{"Key":"possible. If","Fragments":["you're"]},{"Key":"them specifically","Fragments":["why"]},{"Key":"specifically why","Fragments":["not"]},{"Key":"as specifically","Fragments":["as"]},{"Key":"specifically as","Fragments":["possible."]},{"Key":"possible. Whichever","Fragments":["makes"]},{"Key":"Whichever makes","Fragments":["the"]},{"Key":"makes the","Fragments":["code","code","Regex","solution","code","code","code"]},{"Key":"more readable","Fragments":["wins","with","then","than","than","and","if","in","if"]},{"Key":"readable wins","Fragments":["for"]},{"Key":"wins for","Fragments":["me."]},{"Key":" Typically","Fragments":["in"]},{"Key":"Typically in","Fragments":["functional"]},{"Key":"in functional","Fragments":["programming","languages,"]},{"Key":"functional programming","Fragments":["the"]},{"Key":"programming the","Fragments":["names"]},{"Key":"the names","Fragments":["of","of","aren't","sorted"]},{"Key":"of variables","Fragments":["are","are"]},{"Key":"variables are","Fragments":["at","not","actually"]},{"Key":"are at","Fragments":["least"]},{"Key":"least an","Fragments":["order"]},{"Key":"an order","Fragments":["of"]},{"Key":"magnitude less","Fragments":["important"]},{"Key":"less important","Fragments":["than"]},{"Key":"important than","Fragments":["the"]},{"Key":"than the","Fragments":["functions/methods","blight","pattern","for-comprehension;","other."]},{"Key":"the functions/methods","Fragments":["you"]},{"Key":"functions/methods you","Fragments":["are"]},{"Key":"you are","Fragments":["using.","using","re-checking","splitting","not","worried","using.","using","doing","right."]},{"Key":"are using.","Fragments":["In","Took"]},{"Key":"using. In","Fragments":["some"]},{"Key":"In some","Fragments":["languages,"]},{"Key":"some languages,","Fragments":["you"]},{"Key":"languages, you","Fragments":["can"]},{"Key":"can often","Fragments":["get"]},{"Key":"often get","Fragments":["away"]},{"Key":"get away","Fragments":["without"]},{"Key":"away without","Fragments":["naming"]},{"Key":"without naming","Fragments":["the"]},{"Key":"variables at","Fragments":["all,"]},{"Key":"all, in","Fragments":["other"]},{"Key":"in other","Fragments":["cases"]},{"Key":"other cases","Fragments":["you"]},{"Key":"cases you","Fragments":["simply","can"]},{"Key":"you simply","Fragments":["make"]},{"Key":"simply make","Fragments":["them"]},{"Key":"make them","Fragments":["short"]},{"Key":"them short","Fragments":["such"]},{"Key":"short such","Fragments":["that"]},{"Key":"such that","Fragments":["the","strings"]},{"Key":"the emphasis","Fragments":["is"]},{"Key":"emphasis is","Fragments":["on"]},{"Key":"is on","Fragments":["the","this","most","collections"]},{"Key":" @mervin","Fragments":["True,","That's"]},{"Key":"@mervin True,","Fragments":["you"]},{"Key":"True, you","Fragments":["could"]},{"Key":"could think","Fragments":["of","of,"]},{"Key":"think of","Fragments":["this","a","a","my","using"]},{"Key":"as defining","Fragments":["a"]},{"Key":"defining a","Fragments":["general","name"]},{"Key":"general function","Fragments":["over"]},{"Key":"over collections.","Fragments":["Generalizing"]},{"Key":"collections. Generalizing","Fragments":["too"]},{"Key":"Generalizing too","Fragments":["far"]},{"Key":"too far","Fragments":["could"]},{"Key":"far could","Fragments":["hurt,"]},{"Key":"could hurt,","Fragments":["since"]},{"Key":"hurt, since","Fragments":["the"]},{"Key":"since the","Fragments":["code","return","`'U'`","last"]},{"Key":"code reader","Fragments":["may"]},{"Key":"reader may","Fragments":["need"]},{"Key":"may need","Fragments":["to"]},{"Key":"to translate","Fragments":["it"]},{"Key":"translate it","Fragments":["into"]},{"Key":"into a","Fragments":["more","couple","String","separate","class","Seq[(Int,String)]","little","companion","list","regex","single","series","private","nicely","private","well-named","private","nicely","nicely","case","`val`"]},{"Key":"specific use","Fragments":["case"]},{"Key":"use case","Fragments":["in","for"]},{"Key":"in their","Fragments":["head.","respective","own"]},{"Key":"their head.","Fragments":["But"]},{"Key":"head. But","Fragments":["not"]},{"Key":"But not","Fragments":["a"]},{"Key":"a big","Fragments":["risk","if,"]},{"Key":"big risk","Fragments":["here."]},{"Key":" Hamming","Fragments":["distance"]},{"Key":"Hamming distance","Fragments":["is","applies","concept","now."]},{"Key":"distance is","Fragments":["typically","still"]},{"Key":"is typically","Fragments":["described"]},{"Key":"typically described","Fragments":["as"]},{"Key":"described as","Fragments":["a"]},{"Key":"comparison metric,","Fragments":["but"]},{"Key":"metric, but","Fragments":["I"]},{"Key":"I suppose","Fragments":["it"]},{"Key":"suppose it","Fragments":["wouldn't"]},{"Key":"it wouldn't","Fragments":["be","be"]},{"Key":"wouldn't be","Fragments":["a","used."]},{"Key":"a far","Fragments":["stretch"]},{"Key":"far stretch","Fragments":["to"]},{"Key":"stretch to","Fragments":["apply"]},{"Key":"to apply","Fragments":["it","it"]},{"Key":"apply it","Fragments":["to","to"]},{"Key":"to other","Fragments":["collections."]},{"Key":"@mervin That's","Fragments":["a"]},{"Key":"That's a","Fragments":["very","great"]},{"Key":"very interesting","Fragments":["point."]},{"Key":"interesting point.","Fragments":["@mervin"]},{"Key":"point. @mervin","Fragments":["showed"]},{"Key":"@mervin showed","Fragments":["a"]},{"Key":"showed a","Fragments":["Haskell"]},{"Key":"a Haskell","Fragments":["example"]},{"Key":"Haskell example","Fragments":["of"]},{"Key":"example of","Fragments":["just","a"]},{"Key":"of just","Fragments":["that","letters."]},{"Key":"just that","Fragments":["in"]},{"Key":"the discussion","Fragments":["on"]},{"Key":"discussion on","Fragments":["his"]},{"Key":"on his","Fragments":["submission."]},{"Key":"can't recommend","Fragments":["doing"]},{"Key":"recommend doing","Fragments":["the"]},{"Key":"doing the","Fragments":["Haskell"]},{"Key":"the Haskell","Fragments":["exercises"]},{"Key":"Haskell exercises","Fragments":["on"]},{"Key":"exercises on","Fragments":["here"]},{"Key":"on here","Fragments":["enough!",":-)"]},{"Key":"here enough!","Fragments":["I"]},{"Key":"enough! I","Fragments":["knew"]},{"Key":"I knew","Fragments":["practically"]},{"Key":"knew practically","Fragments":["nothing"]},{"Key":"practically nothing","Fragments":["about"]},{"Key":"about Haskell","Fragments":["when"]},{"Key":"Haskell when","Fragments":["I"]},{"Key":"I started","Fragments":["and","out","out"]},{"Key":"started and","Fragments":["it's"]},{"Key":"and it's","Fragments":["been","easy"]},{"Key":"it's been","Fragments":["a"]},{"Key":"a great","Fragments":["way","improvement","read!","start.","point,"]},{"Key":"great way","Fragments":["to"]},{"Key":" Also","Fragments":["there","take","can","the","I","look","you","by"]},{"Key":"Also there","Fragments":["are"]},{"Key":"a bunch","Fragments":["of","of"]},{"Key":"bunch of","Fragments":["good","test"]},{"Key":"of good","Fragments":["interactive"]},{"Key":"good interactive","Fragments":["tutorials"]},{"Key":"interactive tutorials","Fragments":["here:"]},{"Key":"tutorials here:","Fragments":["https://www.fpcomplete.com/school"]},{"Key":" Cool.","Fragments":["I"]},{"Key":"The use","Fragments":["of","of","of"]},{"Key":"of unapply","Fragments":["here","to"]},{"Key":"unapply here","Fragments":["is"]},{"Key":"here is","Fragments":["creative","that"]},{"Key":"is creative","Fragments":["but"]},{"Key":"creative but","Fragments":["to"]},{"Key":"but to","Fragments":["me"]},{"Key":"me it","Fragments":["doesn't"]},{"Key":"doesn't really","Fragments":["add","use"]},{"Key":"really add","Fragments":["anything"]},{"Key":"add anything","Fragments":["but"]},{"Key":"anything but","Fragments":["extra"]},{"Key":"but extra","Fragments":["code"]},{"Key":"extra code","Fragments":["to","that"]},{"Key":"the solution.","Fragments":["I"]},{"Key":"solution. I","Fragments":["actually","like"]},{"Key":"I actually","Fragments":["prefer","don't"]},{"Key":"actually prefer","Fragments":["your"]},{"Key":"prefer your","Fragments":["solution"]},{"Key":"your solution","Fragments":["in","much","somewhat","by","could","is"]},{"Key":"solution in","Fragments":["iteration"]},{"Key":"in iteration","Fragments":["3.","3.","2.","1.","2."]},{"Key":" As","Fragments":["for","far","a","a"]},{"Key":"As for","Fragments":["detecting","substring"]},{"Key":"for detecting","Fragments":["shouting","the"]},{"Key":"detecting shouting","Fragments":["take"]},{"Key":"shouting take","Fragments":["a"]},{"Key":"take a","Fragments":["look","single","look","look"]},{"Key":"a look","Fragments":["at","at","at","at","at","in","at","at","at","at","at","at","at","at","at","at","at","at","at"]},{"Key":"the functions","Fragments":["provided","are","and","`count`"]},{"Key":"functions provided","Fragments":["by"]},{"Key":"provided by","Fragments":["StringOps."]},{"Key":"by StringOps.","Fragments":["Via"]},{"Key":"StringOps. Via","Fragments":["the"]},{"Key":"Via the","Fragments":["magic"]},{"Key":"the magic","Fragments":["of","constant"]},{"Key":"magic of","Fragments":["implicits"]},{"Key":"of implicits","Fragments":["all","in"]},{"Key":"implicits all","Fragments":["those"]},{"Key":"all those","Fragments":["methods"]},{"Key":"those methods","Fragments":["are","aren't","will"]},{"Key":"methods are","Fragments":["made","kind","perfectly","available"]},{"Key":"are made","Fragments":["available"]},{"Key":"made available","Fragments":["on"]},{"Key":"available on","Fragments":["strings."]},{"Key":"on strings.","Fragments":["A","It"]},{"Key":"strings. A","Fragments":["shouted"]},{"Key":"A shouted","Fragments":["phrase"]},{"Key":"shouted phrase","Fragments":["is"]},{"Key":"phrase is","Fragments":["one"]},{"Key":"one where","Fragments":["every"]},{"Key":"where every","Fragments":["letter"]},{"Key":"every letter","Fragments":["character"]},{"Key":"letter character","Fragments":["is"]},{"Key":"character is","Fragments":["uppercase"]},{"Key":"is uppercase","Fragments":["and"]},{"Key":"uppercase and","Fragments":["the","then","lowercase"]},{"Key":"the non-letter","Fragments":["characters"]},{"Key":"non-letter characters","Fragments":["don't"]},{"Key":"characters don't","Fragments":["matter."]},{"Key":"don't matter.","Fragments":["What"]},{"Key":"matter. What","Fragments":["is"]},{"Key":"What is","Fragments":["the"]},{"Key":"the value","Fragments":["of","`checksum(word)`","is","of","of","of","in"]},{"Key":"value of","Fragments":["Char.isLower","the","the","input","the","`s.toUpperCase.sorted`","the","the","the"]},{"Key":"of Char.isLower","Fragments":["(or"]},{"Key":"Char.isLower (or","Fragments":["isUpper"]},{"Key":"(or isUpper","Fragments":["for"]},{"Key":"isUpper for","Fragments":["that"]},{"Key":"that matter)","Fragments":["when"]},{"Key":"matter) when","Fragments":["applied"]},{"Key":"when applied","Fragments":["to"]},{"Key":"applied to","Fragments":["a"]},{"Key":"looks a","Fragments":["bit","lot","little"]},{"Key":"* Give","Fragments":["sensible"]},{"Key":"Give sensible","Fragments":["names"]},{"Key":"sensible names","Fragments":["to"]},{"Key":"names to","Fragments":["variables","each","a"]},{"Key":"to variables","Fragments":["wherever"]},{"Key":"variables wherever","Fragments":["possible"]},{"Key":"* `map1`","Fragments":["and"]},{"Key":"`map1` and","Fragments":["`map2`"]},{"Key":"and `map2`","Fragments":["can"]},{"Key":"`map2` can","Fragments":["easily"]},{"Key":"can easily","Fragments":["be"]},{"Key":"easily be","Fragments":["made","one-liners."]},{"Key":"* Line","Fragments":["#8"]},{"Key":"Line #8","Fragments":["is"]},{"Key":"#8 is","Fragments":["too"]},{"Key":"is too","Fragments":["long."]},{"Key":"too long.","Fragments":["Please"]},{"Key":"long. Please","Fragments":["break"]},{"Key":"Please break","Fragments":["it"]},{"Key":"break it","Fragments":["out"]},{"Key":"it out","Fragments":["into",";)","in"]},{"Key":"out into","Fragments":["smaller","their","constants","a","helper"]},{"Key":"into smaller","Fragments":["lines"]},{"Key":" No","Fragments":["problem!","need","regex","regex","need"]},{"Key":"No problem!","Fragments":["Remembering"]},{"Key":"problem! Remembering","Fragments":["all"]},{"Key":"Remembering all","Fragments":["the"]},{"Key":"all the","Fragments":["different","curly","built-in","wiring","work.","methods","`\"\"\"...\"\"\".r`","tests.","characters","cases","logic","conditions.","```returns```","counts","previous","digits"]},{"Key":"the different","Fragments":["conventions"]},{"Key":"different conventions","Fragments":["is"]},{"Key":"conventions is","Fragments":["part"]},{"Key":"the fun","Fragments":["and"]},{"Key":"fun and","Fragments":["challenge"]},{"Key":"and challenge","Fragments":["of"]},{"Key":"challenge of","Fragments":["there"]},{"Key":"of there","Fragments":["being"]},{"Key":"there being","Fragments":["so"]},{"Key":"being so","Fragments":["many"]},{"Key":"so many","Fragments":["languages","verbose"]},{"Key":"many languages","Fragments":["on"]},{"Key":"languages on","Fragments":["here"]},{"Key":" Given","Fragments":["this","the"]},{"Key":"Given this","Fragments":["type"]},{"Key":"this type","Fragments":["of"]},{"Key":"of solution","Fragments":["(I"]},{"Key":"solution (I","Fragments":["went"]},{"Key":"(I went","Fragments":["with"]},{"Key":"went with","Fragments":["something","a"]},{"Key":"with something","Fragments":["a"]},{"Key":"something a","Fragments":["little"]},{"Key":"a little","Fragments":["simpler),","easier","[FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79).","by","more","shorter.","trouble","simpler.","bit","bit","overkill","more","cleaner"]},{"Key":"little simpler),","Fragments":["I"]},{"Key":"simpler), I","Fragments":["don't"]},{"Key":"the inconsistency","Fragments":["of"]},{"Key":"inconsistency of","Fragments":["\"Whatever\""]},{"Key":"of \"Whatever\"","Fragments":["being"]},{"Key":"\"Whatever\" being","Fragments":["right"]},{"Key":"being right","Fragments":["in"]},{"Key":"in `hey`","Fragments":["whereas","be"]},{"Key":"`hey` whereas","Fragments":["the"]},{"Key":"whereas the","Fragments":["other"]},{"Key":"the other","Fragments":["responses","solutions,","hand,"]},{"Key":"other responses","Fragments":["are"]},{"Key":"responses are","Fragments":["in"]},{"Key":"are in","Fragments":["their","camelCase."]},{"Key":"their respective","Fragments":["objects."]},{"Key":"respective objects.","Fragments":["Could"]},{"Key":"objects. Could","Fragments":["a"]},{"Key":"Could a","Fragments":["catch-all"]},{"Key":"a catch-all","Fragments":["object","clause"]},{"Key":"catch-all object","Fragments":["be"]},{"Key":"object be","Fragments":["introduced"]},{"Key":"be introduced","Fragments":["that's"]},{"Key":"introduced that's","Fragments":["more"]},{"Key":"that's more","Fragments":["consistent?"]},{"Key":" Had","Fragments":["to"]},{"Key":"Had to","Fragments":["write"]},{"Key":"write a","Fragments":["wrapper","single"]},{"Key":"a wrapper","Fragments":["for"]},{"Key":"wrapper for","Fragments":["forall"]},{"Key":"for forall","Fragments":["that"]},{"Key":"forall that","Fragments":["returns"]},{"Key":"that returns","Fragments":["false"]},{"Key":"returns false","Fragments":["on"]},{"Key":"false on","Fragments":["an","the"]},{"Key":"on an","Fragments":["empty","if"]},{"Key":"an empty","Fragments":["list,","list","`Map`.","map"]},{"Key":"empty list,","Fragments":["I"]},{"Key":"list, I","Fragments":["feel"]},{"Key":"I feel","Fragments":["there","that","that","that","that","like","that","that","it's","a","like"]},{"Key":"feel there","Fragments":["is"]},{"Key":"way but","Fragments":["I","I"]},{"Key":"I couldn't","Fragments":["wrangle","figure","get"]},{"Key":"couldn't wrangle","Fragments":["either"]},{"Key":"wrangle either","Fragments":["exists"]},{"Key":"either exists","Fragments":["or"]},{"Key":"exists or","Fragments":["forall"]},{"Key":"or forall","Fragments":["to"]},{"Key":"forall to","Fragments":["work"]},{"Key":"work correctly","Fragments":["on"]},{"Key":"correctly on","Fragments":["both"]},{"Key":"on both","Fragments":["empty"]},{"Key":"both empty","Fragments":["strings"]},{"Key":"empty strings","Fragments":["and"]},{"Key":"and yell","Fragments":["strings"]},{"Key":"yell strings","Fragments":["without"]},{"Key":"without intermediate","Fragments":["variables."]},{"Key":" Is","Fragments":["it","there","there","there","there","this"]},{"Key":"Is it","Fragments":["possible","possible"]},{"Key":"it possible","Fragments":["to","to"]},{"Key":"to split","Fragments":["the","it","on"]},{"Key":"split the","Fragments":["creation","phrase"]},{"Key":"the creation","Fragments":["of"]},{"Key":"creation of","Fragments":["`words`","a"]},{"Key":"of `words`","Fragments":["into"]},{"Key":"`words` into","Fragments":["a"]},{"Key":"of separate","Fragments":["methods"]},{"Key":"separate methods","Fragments":["to","```String"]},{"Key":"to aid","Fragments":["readability?"]},{"Key":" It's","Fragments":["easier","my","a","more"]},{"Key":"It's easier","Fragments":["to"]},{"Key":"the toLowerCase","Fragments":["first,"]},{"Key":"toLowerCase first,","Fragments":["otherwise"]},{"Key":"first, otherwise","Fragments":["I"]},{"Key":"otherwise I","Fragments":["had"]},{"Key":"had a","Fragments":["much","little","line"]},{"Key":"a much","Fragments":["shorter","cleaner"]},{"Key":"shorter solution","Fragments":["for","without"]},{"Key":"solution for","Fragments":["this","some","my"]},{"Key":"this using","Fragments":["a","pattern"]},{"Key":"using a","Fragments":["regex","lots","mutable","wildcard","matched","big","the","trait","separate"]},{"Key":"a regex","Fragments":["with","myself,","fan","must","actually","as"]},{"Key":"regex with","Fragments":["findAllIn."]},{"Key":"with findAllIn.","Fragments":["Additionally,"]},{"Key":"findAllIn. Additionally,","Fragments":["using"]},{"Key":"Additionally, using","Fragments":["words.count"]},{"Key":"using words.count","Fragments":["is"]},{"Key":"words.count is","Fragments":["an"]},{"Key":"an O(n^2)","Fragments":["algorithm"]},{"Key":"O(n^2) algorithm","Fragments":["for"]},{"Key":"algorithm for","Fragments":["this"]},{"Key":"this when","Fragments":["you"]},{"Key":"when you","Fragments":["can","could"]},{"Key":"can do","Fragments":["it","most","something","`arg.last","with"]},{"Key":"in O(n","Fragments":["*"]},{"Key":"O(n *","Fragments":["log"]},{"Key":"* log","Fragments":["n)"]},{"Key":" isShouting,","Fragments":["isQuestion"]},{"Key":"isShouting, isQuestion","Fragments":["and"]},{"Key":"isQuestion and","Fragments":["isSilence"]},{"Key":"and isSilence","Fragments":["could"]},{"Key":"isSilence could","Fragments":["also"]},{"Key":"could also","Fragments":["be","redefine","try","be","use","use","use","replace","then","directly","just"]},{"Key":"also be","Fragments":["one-liners","written","defined","written"]},{"Key":"be one-liners","Fragments":["without"]},{"Key":"one-liners without","Fragments":["the"]},{"Key":"the curly","Fragments":["braces,","braces","braces","braces","braces"]},{"Key":"braces, too,","Fragments":["I"]},{"Key":"too, I","Fragments":["think?"]},{"Key":"I think?","Fragments":["Not"]},{"Key":"think? Not","Fragments":["sure"]},{"Key":"what good","Fragments":["Scala"]},{"Key":"good Scala","Fragments":["style"]},{"Key":"Scala style","Fragments":["is"]},{"Key":"style is","Fragments":["on"]},{"Key":"on this","Fragments":["kind","submission:","example."]},{"Key":"this kind","Fragments":["of","of","of","of"]},{"Key":"Very nice.","Fragments":["I'd"]},{"Key":"nice. I'd","Fragments":["declare"]},{"Key":"I'd declare","Fragments":["those"]},{"Key":"declare those","Fragments":["helper"]},{"Key":"those helper","Fragments":["methods"]},{"Key":"methods as","Fragments":["`private`,"]},{"Key":"as `private`,","Fragments":["but"]},{"Key":"`private`, but","Fragments":["I've"]},{"Key":"but I've","Fragments":["no","completely","broken","seen","never","only"]},{"Key":"I've no","Fragments":["idea"]},{"Key":"no idea","Fragments":["what"]},{"Key":"idea what","Fragments":["the"]},{"Key":"the Scala","Fragments":["idioms","community.","docs)","standard","library"]},{"Key":"Scala idioms","Fragments":["are."]},{"Key":"You can","Fragments":["use","simplify","avoid","call","simply","use","use","omit","rewrite","rewrite","omit","improve","rewrite","see","avoid","probably","omit","call","look","use","modify","remove","skip","omit","remove","use","improve","use","also","just"]},{"Key":"can use","Fragments":["`count","`someString.sorted`","`.count`","`map.updated(key,","`message.exists(_.isUpper)`","another's","map's","`==`.","all","on","an","`identity`.","```equalsIgnoreCase```","a"]},{"Key":"use `count","Fragments":[":"]},{"Key":"`count :","Fragments":["(A"]},{"Key":": (A","Fragments":["=\u003e"]},{"Key":"(A =\u003e","Fragments":["Boolean)"]},{"Key":"=\u003e Boolean)","Fragments":["=\u003e"]},{"Key":"Boolean) =\u003e","Fragments":["Int`"]},{"Key":"=\u003e Int`","Fragments":["instead"]},{"Key":"Int` instead","Fragments":["of"]},{"Key":"the combination","Fragments":["of"]},{"Key":"combination of","Fragments":["`map`","```groupBy```"]},{"Key":"of `map`","Fragments":["and"]},{"Key":"`map` and","Fragments":["`sum`.","`filter`."]},{"Key":"I *think*","Fragments":["I"]},{"Key":"*think* I","Fragments":["like"]},{"Key":"the use","Fragments":["of","of","of","of","of","of","of","of","of","of"]},{"Key":"of `unapply`","Fragments":["here,"]},{"Key":"`unapply` here,","Fragments":["it"]},{"Key":"here, it","Fragments":["makes"]},{"Key":"it makes","Fragments":["`hey`","sense.","it","the","it"]},{"Key":"makes `hey`","Fragments":["read"]},{"Key":"`hey` read","Fragments":["very"]},{"Key":"read very","Fragments":["nicely,"]},{"Key":"very nicely,","Fragments":["but"]},{"Key":"nicely, but","Fragments":["I'm"]},{"Key":"the objects","Fragments":["make"]},{"Key":"objects make","Fragments":["sense"]},{"Key":"sense in","Fragments":["their"]},{"Key":"their own","Fragments":["right","functions,","functions.","functions.","`unapply`"]},{"Key":"own right","Fragments":["as"]},{"Key":"right as","Fragments":["a"]},{"Key":" Regardless,","Fragments":["there"]},{"Key":"Regardless, there","Fragments":["seems"]},{"Key":"there seems","Fragments":["to"]},{"Key":"a difference","Fragments":["between"]},{"Key":"difference between","Fragments":["the","the"]},{"Key":"way the","Fragments":["`Question`","filtering","code"]},{"Key":"the `Question`","Fragments":["object"]},{"Key":"`Question` object","Fragments":["is"]},{"Key":"object is","Fragments":["named","only"]},{"Key":"is named","Fragments":["(for"]},{"Key":"named (for","Fragments":["what"]},{"Key":"(for what","Fragments":["it"]},{"Key":"it *means*)","Fragments":["and"]},{"Key":"*means*) and","Fragments":["the"]},{"Key":"the `AllCaps`","Fragments":["and"]},{"Key":"`AllCaps` and","Fragments":["`Empty`","`Empty`"]},{"Key":"and `Empty`","Fragments":["objects","be"]},{"Key":"`Empty` objects","Fragments":["(for"]},{"Key":"objects (for","Fragments":["how"]},{"Key":"(for how","Fragments":["they"]},{"Key":"how they","Fragments":["happen","add"]},{"Key":"be implemented).","Fragments":["Could"]},{"Key":"implemented). Could","Fragments":["`AllCaps`"]},{"Key":"Could `AllCaps`","Fragments":["and"]},{"Key":"`Empty` be","Fragments":["given"]},{"Key":"be given","Fragments":["names"]},{"Key":"given names","Fragments":["that"]},{"Key":"names that","Fragments":["better"]},{"Key":"that better","Fragments":["describe"]},{"Key":"better describe","Fragments":["their"]},{"Key":"describe their","Fragments":["meaning?"]},{"Key":" Could","Fragments":["you","it","be"]},{"Key":"Could you","Fragments":["gain","change","explain,"]},{"Key":"you gain","Fragments":["any"]},{"Key":"gain any","Fragments":["clarity","insight."]},{"Key":"any clarity","Fragments":["as"]},{"Key":"clarity as","Fragments":["to"]},{"Key":"what each","Fragments":["branch"]},{"Key":"each branch","Fragments":["of"]},{"Key":"branch of","Fragments":["the"]},{"Key":"the match","Fragments":["expression","statements.","statement","statement."]},{"Key":"match expression","Fragments":["*means*"]},{"Key":"expression *means*","Fragments":["(to"]},{"Key":"*means* (to","Fragments":["Bob)"]},{"Key":"(to Bob)","Fragments":["by"]},{"Key":"Bob) by","Fragments":["extracting"]},{"Key":"by extracting","Fragments":["the"]},{"Key":"extracting the","Fragments":["predicates"]},{"Key":"predicates into","Fragments":["helpfully","functions.","their"]},{"Key":"into helpfully","Fragments":["named"]},{"Key":"helpfully named","Fragments":["functions?"]},{"Key":"you'll find","Fragments":["that"]},{"Key":"find that","Fragments":["method"]},{"Key":"that method","Fragments":["names"]},{"Key":"method names","Fragments":["in"]},{"Key":"names in","Fragments":["Scala"]},{"Key":"in Scala","Fragments":["are","(other","it","to","a","-","this","before,","(meaning","since","to"]},{"Key":"Scala are","Fragments":["usually"]},{"Key":"are usually","Fragments":["written","written","specified"]},{"Key":"usually written","Fragments":["in","as"]},{"Key":"written in","Fragments":["camelCase,"]},{"Key":"in camelCase,","Fragments":["not"]},{"Key":"camelCase, not","Fragments":["snake_case"]},{"Key":"not snake_case","Fragments":["(an"]},{"Key":"snake_case (an","Fragments":["abomination,"]},{"Key":"(an abomination,","Fragments":["I"]},{"Key":"abomination, I","Fragments":["know)"]},{"Key":"I know)","Fragments":["so"]},{"Key":"know) so","Fragments":["you"]},{"Key":"to change","Fragments":["`find_alphabet`","anything","this","the"]},{"Key":"change `find_alphabet`","Fragments":["to"]},{"Key":"`find_alphabet` to","Fragments":["`findAlphabet`"]},{"Key":"to `findAlphabet`","Fragments":["(but"]},{"Key":"`findAlphabet` (but","Fragments":["in"]},{"Key":"(but in","Fragments":["fact,"]},{"Key":"in fact,","Fragments":["as"]},{"Key":"fact, as","Fragments":["predicate"]},{"Key":"as predicate","Fragments":["functions"]},{"Key":"predicate functions","Fragments":["are","inner","private."]},{"Key":"functions are","Fragments":["usually","trivial","only","pure,","only"]},{"Key":"written as","Fragments":["`isThing`","`message.trim.isEmpty`","`message.forall(","exists/forall","a"]},{"Key":"as `isThing`","Fragments":["or"]},{"Key":"`isThing` or","Fragments":["`hasThing`"]},{"Key":"or `hasThing`","Fragments":["you"]},{"Key":"`hasThing` you","Fragments":["might"]},{"Key":"to give","Fragments":["it","names"]},{"Key":"give it","Fragments":["a","a","another"]},{"Key":"a different","Fragments":["name","approach","name,"]},{"Key":"different name","Fragments":["altogether)."]},{"Key":"think `isQuestion`","Fragments":["is"]},{"Key":"`isQuestion` is","Fragments":["a"]},{"Key":"a perfect","Fragments":["name","fit"]},{"Key":"perfect name","Fragments":["for"]},{"Key":"a helper","Fragments":["function","method"]},{"Key":"helper function","Fragments":["as"]},{"Key":"function as","Fragments":["it","a"]},{"Key":"it describes","Fragments":["exactly"]},{"Key":"describes exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["*meaning*","way"]},{"Key":"the function","Fragments":["in","calls","matches","input","will","x","signature.","into","slightly","does.","is","is","is"]},{"Key":"the context","Fragments":["of","of","of","of"]},{"Key":"context of","Fragments":["Bob.","a","one","`isAllCaps`"]},{"Key":"of Bob.","Fragments":["But"]},{"Key":"Bob. But","Fragments":["I'm"]},{"Key":"But I'm","Fragments":["not","not"]},{"Key":"not so","Fragments":["sure"]},{"Key":"so sure","Fragments":["`isEmpty`"]},{"Key":"sure `isEmpty`","Fragments":["and"]},{"Key":"`isEmpty` and","Fragments":["`isAllCaps`"]},{"Key":"and `isAllCaps`","Fragments":["do"]},{"Key":"`isAllCaps` do","Fragments":["quite"]},{"Key":"do quite","Fragments":["as"]},{"Key":"quite as","Fragments":["much"]},{"Key":"much -","Fragments":["their"]},{"Key":"- their","Fragments":["names"]},{"Key":"their names","Fragments":["seem"]},{"Key":"names seem","Fragments":["to"]},{"Key":"more about","Fragments":["their","whether"]},{"Key":"about their","Fragments":["implementation"]},{"Key":"their implementation","Fragments":["details"]},{"Key":"implementation details","Fragments":["rather"]},{"Key":"details rather","Fragments":["than"]},{"Key":"rather than","Fragments":["their","a","a","a","`List.forEach`","`v.sortBy`","`def`","`0","`var`","Maps,","create","just","counting","`()`"]},{"Key":"than their","Fragments":["meaning"]},{"Key":"their meaning","Fragments":["within"]},{"Key":"meaning within","Fragments":["the"]},{"Key":"within the","Fragments":["domain","case"]},{"Key":"the domain","Fragments":["of","and"]},{"Key":"domain of","Fragments":["\"Bob\"."]},{"Key":"the comments.","Fragments":["I"]},{"Key":"comments. I","Fragments":["got"]},{"Key":"I got","Fragments":["confused","mad","into","rid","rid"]},{"Key":"got confused","Fragments":["with"]},{"Key":"confused with","Fragments":["other"]},{"Key":"with other","Fragments":["languages."]},{"Key":" Thanks,","Fragments":["it","both."]},{"Key":"Thanks, it","Fragments":["makes"]},{"Key":"makes sense.","Fragments":["I'm"]},{"Key":"sense. I'm","Fragments":["not"]},{"Key":"good at","Fragments":["naming,"]},{"Key":"at naming,","Fragments":["but"]},{"Key":"naming, but","Fragments":["try"]},{"Key":"but try","Fragments":["to"]},{"Key":"try to","Fragments":["modify.","have","apply","refactor","make","get","avoid","avoid","make","come","come"]},{"Key":" Naming","Fragments":["is"]},{"Key":"Naming is","Fragments":["hard"]},{"Key":"is hard","Fragments":[":-)"]},{"Key":" I've","Fragments":["heard","updated","also","tried","forget","forget","written","added"]},{"Key":"I've heard","Fragments":["there"]},{"Key":"heard there","Fragments":["are"]},{"Key":"are only","Fragments":["two","matching","called","needed"]},{"Key":"only two","Fragments":["hard"]},{"Key":"two hard","Fragments":["problems"]},{"Key":"hard problems","Fragments":["left"]},{"Key":"problems left","Fragments":["in"]},{"Key":"left in","Fragments":["computer"]},{"Key":"in computer","Fragments":["science"]},{"Key":"computer science","Fragments":["-"]},{"Key":"science -","Fragments":["naming,"]},{"Key":"- naming,","Fragments":["cache"]},{"Key":"naming, cache","Fragments":["invalidation,"]},{"Key":"cache invalidation,","Fragments":["and"]},{"Key":"invalidation, and","Fragments":["off-by-one"]},{"Key":"and off-by-one","Fragments":["errors."]},{"Key":"Very interesting","Fragments":["implementation!"]},{"Key":"interesting implementation!","Fragments":["My"]},{"Key":"implementation! My","Fragments":["first"]},{"Key":"My first","Fragments":["two","implementation","iteration","iteration","nitpick","attempt","Scala"]},{"Key":"first two","Fragments":["submissions","conditions","conditions?"]},{"Key":"two submissions","Fragments":["use"]},{"Key":"submissions use","Fragments":["if/else"]},{"Key":"use if/else","Fragments":["statements"]},{"Key":"if/else statements","Fragments":["although"]},{"Key":"statements although","Fragments":["I"]},{"Key":"although I","Fragments":["thought","see"]},{"Key":"I thought","Fragments":["about","that","of","of","I"]},{"Key":"thought about","Fragments":["using","moving","avoiding"]},{"Key":"about using","Fragments":["pattern","foldLeft?","a","the"]},{"Key":"using pattern","Fragments":["matching.","match","matching,","matching","match","matching.","matching.","matching","matching"]},{"Key":"pattern matching.","Fragments":["Yours","Suggested","An","That","I","See,"]},{"Key":"matching. Yours","Fragments":["is"]},{"Key":"Yours is","Fragments":["a"]},{"Key":"a level","Fragments":["above"]},{"Key":"level above","Fragments":["simple"]},{"Key":"above simple","Fragments":["pattern"]},{"Key":"simple pattern","Fragments":["matching!"]},{"Key":"at pattern","Fragments":["matching"]},{"Key":"matching instead","Fragments":["of","of"]},{"Key":" @johan","Fragments":["Thanks!"]},{"Key":"@johan Thanks!","Fragments":["I"]},{"Key":"Thanks! I","Fragments":["will","didn't"]},{"Key":"I will","Fragments":["do","do"]},{"Key":"will do","Fragments":["that!","a"]},{"Key":" Two","Fragments":["questions.","minor"]},{"Key":"1. why","Fragments":["the"]},{"Key":"why the","Fragments":["need","yelling"]},{"Key":"special function","Fragments":["just"]},{"Key":"function just","Fragments":["to"]},{"Key":"do `toLowerCase`","Fragments":["?"]},{"Key":"2. why","Fragments":["do"]},{"Key":"why do","Fragments":["you","you"]},{"Key":"do you","Fragments":["explicitly","even","think?","think?","use","define","think","think?","think","feel","mean?"]},{"Key":"you explicitly","Fragments":["sort"]},{"Key":"explicitly sort","Fragments":["the"]},{"Key":"sort the","Fragments":["map?","upper-cased"]},{"Key":" @kyleigh:","Fragments":["Thanks"]},{"Key":"@kyleigh: Thanks","Fragments":["for"]},{"Key":"the suggestion","Fragments":["I've"]},{"Key":"suggestion I've","Fragments":["incorporated"]},{"Key":"I've incorporated","Fragments":["it"]},{"Key":"incorporated it","Fragments":["in"]},{"Key":"I'd like","Fragments":["some","feedback","Random","to"]},{"Key":"like some","Fragments":["feedback","semi-DSL"]},{"Key":"some feedback","Fragments":["if"]},{"Key":"feedback if","Fragments":["lazy"]},{"Key":"if lazy","Fragments":["vals"]},{"Key":"lazy vals","Fragments":["are"]},{"Key":"vals are","Fragments":["appropriate"]},{"Key":"are appropriate","Fragments":["here."]},{"Key":"appropriate here.","Fragments":["I"]},{"Key":"here. I","Fragments":["don't","think"]},{"Key":"don't know","Fragments":["exactly","whether","which","a","whether"]},{"Key":"know exactly","Fragments":["what"]},{"Key":"what runtime","Fragments":["cost"]},{"Key":"cost they","Fragments":["carry"]},{"Key":"they carry","Fragments":["(in"]},{"Key":"carry (in","Fragments":["my"]},{"Key":"(in my","Fragments":["tests","opinion)"]},{"Key":"my tests","Fragments":["everything"]},{"Key":"tests everything","Fragments":["runs"]},{"Key":"everything runs","Fragments":["*faster*"]},{"Key":"runs *faster*","Fragments":["if"]},{"Key":"*faster* if","Fragments":["they're"]},{"Key":"if they're","Fragments":["lazy)."]},{"Key":"they're lazy).","Fragments":["I"]},{"Key":"lazy). I","Fragments":["just"]},{"Key":"just know","Fragments":["they"]},{"Key":"know they","Fragments":["delay"]},{"Key":"they delay","Fragments":["computation."]},{"Key":"Looks good.","Fragments":["Nice","Being","To","Though,","One","I","You"]},{"Key":"good. Nice","Fragments":["and"]},{"Key":"and concise","Fragments":["-"]},{"Key":"concise -","Fragments":["do"]},{"Key":"- do","Fragments":["you"]},{"Key":"you even","Fragments":["need"]},{"Key":"even need","Fragments":["to"]},{"Key":"split it","Fragments":["over"]},{"Key":"it over","Fragments":["multiple"]},{"Key":"over multiple","Fragments":["lines?"]},{"Key":"want to,","Fragments":["methods"]},{"Key":"to, methods","Fragments":["that"]},{"Key":"methods that","Fragments":["take","operate","are","I"]},{"Key":"that take","Fragments":["a"]},{"Key":"single argument","Fragments":["can"]},{"Key":"argument can","Fragments":["be"]},{"Key":"be written","Fragments":["without","as","as","like","as","using","as"]},{"Key":"written without","Fragments":["a"]},{"Key":"without a","Fragments":["dot","nesting"]},{"Key":"a dot","Fragments":["or"]},{"Key":"dot or","Fragments":["parentheses"]},{"Key":"or parentheses","Fragments":["like"]},{"Key":"parentheses like","Fragments":["this:"]},{"Key":"like this:","Fragments":["`strand_1","`Map.empty[Int,"]},{"Key":"this: `strand_1","Fragments":["zip"]},{"Key":"`strand_1 zip","Fragments":["strand_2`."]},{"Key":"zip strand_2`.","Fragments":["And"]},{"Key":"strand_2`. And","Fragments":["the"]},{"Key":"And the","Fragments":["way"]},{"Key":"way precedence","Fragments":["works"]},{"Key":"precedence works","Fragments":["means"]},{"Key":"works means","Fragments":["you"]},{"Key":"can usually","Fragments":["chain"]},{"Key":"usually chain","Fragments":["multiple"]},{"Key":"chain multiple","Fragments":["method"]},{"Key":"multiple method","Fragments":["calls"]},{"Key":"method calls","Fragments":["like","(I"]},{"Key":"calls like","Fragments":["this"]},{"Key":"like this","Fragments":["together","and","because","sate","because"]},{"Key":"this together","Fragments":["to"]},{"Key":"together to","Fragments":["get"]},{"Key":"the result","Fragments":["you","of","if","of","of","is","of","and","of"]},{"Key":"result you","Fragments":["want/expect.","can"]},{"Key":"how common","Fragments":["it"]},{"Key":"common it","Fragments":["is"]},{"Key":"have names","Fragments":["with"]},{"Key":"names with","Fragments":["underscores"]},{"Key":"with underscores","Fragments":["in"]},{"Key":"underscores in","Fragments":["Scala"]},{"Key":"Scala (other","Fragments":["than"]},{"Key":"(other than","Fragments":["the"]},{"Key":"the blight","Fragments":["that"]},{"Key":"blight that","Fragments":["is"]},{"Key":"is Tuple","Fragments":["`_1`"]},{"Key":"Tuple `_1`","Fragments":["and"]},{"Key":"Thanks so","Fragments":["much","much!"]},{"Key":"much for","Fragments":["the","the","the"]},{"Key":"the nit.","Fragments":["Does"]},{"Key":"nit. Does","Fragments":["iteration"]},{"Key":"Does iteration","Fragments":["2"]},{"Key":"iteration 2","Fragments":["look","--","is"]},{"Key":"2 look","Fragments":["better"]},{"Key":"look better","Fragments":["to"]},{"Key":" Yep.","Fragments":["looks"]},{"Key":"Yep. looks","Fragments":["great!"]},{"Key":" Only","Fragments":["minor"]},{"Key":"Only minor","Fragments":["suggestion,"]},{"Key":"minor suggestion,","Fragments":["again"]},{"Key":"suggestion, again","Fragments":["this"]},{"Key":"again this","Fragments":["is"]},{"Key":"more a","Fragments":["matter","fan","matter"]},{"Key":"a matter","Fragments":["of","of","of","of","of"]},{"Key":"matter of","Fragments":["style,","taste","taste.","taste.","style,"]},{"Key":"of style,","Fragments":["but","I"]},{"Key":"style, but","Fragments":["as"]},{"Key":"but as","Fragments":["you","stated","a","conditions"]},{"Key":"as you","Fragments":["now","declare","progress","did","did"]},{"Key":"you now","Fragments":["have"]},{"Key":"have only","Fragments":["a"]},{"Key":"only a","Fragments":["single","Scala","control"]},{"Key":"single expression","Fragments":["in","so"]},{"Key":"expression in","Fragments":["your","the","your","Scala"]},{"Key":"your `compute`","Fragments":["method"]},{"Key":"`compute` method","Fragments":["you"]},{"Key":"method you","Fragments":["can"]},{"Key":"can omit","Fragments":["the","curly","curly","the","the","also","it"]},{"Key":"omit the","Fragments":["curly","curly","curly","return"]},{"Key":"curly braces","Fragments":["if","around","from","when","in","around","can","around","around","that"]},{"Key":"braces if","Fragments":["you"]},{"Key":" Feels","Fragments":["a"]},{"Key":"Feels a","Fragments":["bit"]},{"Key":"bit over","Fragments":["engineered"]},{"Key":"over engineered","Fragments":["with"]},{"Key":"engineered with","Fragments":["the"]},{"Key":"implicit classes","Fragments":["and"]},{"Key":"classes and","Fragments":["an"]},{"Key":"and an","Fragments":["if"]},{"Key":"statement may","Fragments":["be"]},{"Key":"be simpler","Fragments":["than","by"]},{"Key":"simpler than","Fragments":["the"]},{"Key":"the pattern","Fragments":["matching.","matching","matching)","matching","matching","match","matching","match,","match","matching","match","match"]},{"Key":"Since the","Fragments":["uppercase"]},{"Key":"the uppercase","Fragments":["will"]},{"Key":"uppercase will","Fragments":["not"]},{"Key":"will not","Fragments":["handle","need","be"]},{"Key":"not handle","Fragments":["the"]},{"Key":"handle the","Fragments":["numbers","IllegalArgumentExceptions"]},{"Key":"the numbers","Fragments":["test,"]},{"Key":"numbers test,","Fragments":["I"]},{"Key":"test, I","Fragments":["had"]},{"Key":"to add","Fragments":["a","things","the","except","a","a"]},{"Key":"add a","Fragments":["check","responder","method","new","`copyAnd`method"]},{"Key":"a check","Fragments":["for"]},{"Key":"check for","Fragments":["that","letters","the","all","a","all","equality"]},{"Key":"that but","Fragments":["I"]},{"Key":"find it","Fragments":["rather","useful.","helps","helps"]},{"Key":"it rather","Fragments":["ugly."]},{"Key":"rather ugly.","Fragments":["Depending"]},{"Key":"ugly. Depending","Fragments":["on"]},{"Key":"Depending on","Fragments":["the"]},{"Key":"the actual","Fragments":["code"]},{"Key":"actual code","Fragments":["situation"]},{"Key":"code situation","Fragments":["I"]},{"Key":"situation I","Fragments":["might"]},{"Key":"I might","Fragments":["also","overdid","change","change"]},{"Key":"might also","Fragments":["break","consider"]},{"Key":"also break","Fragments":["the"]},{"Key":"break the","Fragments":["matching","\"one"]},{"Key":"the matching","Fragments":["into","as","group"]},{"Key":"matching into","Fragments":["their"]},{"Key":"into their","Fragments":["own","own","own"]},{"Key":"own functions,","Fragments":["i.e."]},{"Key":"functions, i.e.","Fragments":["isShouting,"]},{"Key":"i.e. isShouting,","Fragments":["isQuestion."]},{"Key":"is nitpicking","Fragments":["but"]},{"Key":"nitpicking but","Fragments":["you"]},{"Key":"the ```val```","Fragments":["in"]},{"Key":"```val``` in","Fragments":["```val"]},{"Key":"in ```val","Fragments":["seconds:"]},{"Key":"```val seconds:","Fragments":["Long```"]},{"Key":"seconds: Long```","Fragments":["as"]},{"Key":"Long``` as","Fragments":["you"]},{"Key":"you declare","Fragments":["```SpaceAge```"]},{"Key":"declare ```SpaceAge```","Fragments":["as"]},{"Key":"```SpaceAge``` as","Fragments":["a"]},{"Key":" @lloyd","Fragments":["@lloyd"]},{"Key":"@lloyd @lloyd","Fragments":["I"]},{"Key":"@lloyd I","Fragments":["am"]},{"Key":"am trying","Fragments":["to"]},{"Key":"trying to","Fragments":["do","do.","figure","grasp","understand","remember","solve","do","use","convert"]},{"Key":"a second","Fragments":["Scala"]},{"Key":"second Scala","Fragments":["exercise,"]},{"Key":"Scala exercise,","Fragments":["but"]},{"Key":"exercise, but","Fragments":["am"]},{"Key":"but am","Fragments":["receiving"]},{"Key":"am receiving","Fragments":["the"]},{"Key":"receiving the","Fragments":["error"]},{"Key":"the error","Fragments":["\"/scala/hamming/src/test/scala/hamming_test.scala:5:","handling"]},{"Key":"error \"/scala/hamming/src/test/scala/hamming_test.scala:5:","Fragments":["not"]},{"Key":"\"/scala/hamming/src/test/scala/hamming_test.scala:5: not","Fragments":["found:"]},{"Key":"not found:","Fragments":["value","value"]},{"Key":"found: value","Fragments":["Hamming\".","map"]},{"Key":"value Hamming\".","Fragments":["Do"]},{"Key":"Hamming\". Do","Fragments":["you"]},{"Key":"you know","Fragments":["what"]},{"Key":"know what","Fragments":["I","I","you"]},{"Key":"do to","Fragments":["make"]},{"Key":"make this","Fragments":["work","look"]},{"Key":"this work","Fragments":["for"]},{"Key":"work for","Fragments":["me?","pattern","me.","you.","repeated","repeated"]},{"Key":"for me?","Fragments":["I"]},{"Key":"me? I","Fragments":["have"]},{"Key":"a file","Fragments":["src/main/scala/hamming.scala,"]},{"Key":"file src/main/scala/hamming.scala,","Fragments":["with"]},{"Key":"src/main/scala/hamming.scala, with","Fragments":["a"]},{"Key":"class Hamming()","Fragments":["in"]},{"Key":"Hamming() in","Fragments":["it."]},{"Key":"in it.","Fragments":["What"]},{"Key":"it. What","Fragments":["rookie"]},{"Key":"What rookie","Fragments":["error"]},{"Key":"rookie error","Fragments":["will"]},{"Key":"error will","Fragments":["I"]},{"Key":"will I","Fragments":["be"]},{"Key":"I be","Fragments":["making"]},{"Key":"be making","Fragments":["here?"]},{"Key":" Thought","Fragments":["I"]},{"Key":"Thought I","Fragments":["needed"]},{"Key":"I needed","Fragments":["a","to"]},{"Key":"needed a","Fragments":["way"]},{"Key":"to loop","Fragments":["over","through"]},{"Key":"loop over","Fragments":["the"]},{"Key":"two dnaStrand","Fragments":["strings"]},{"Key":"dnaStrand strings","Fragments":["simultaniously,"]},{"Key":"strings simultaniously,","Fragments":["using"]},{"Key":"simultaniously, using","Fragments":["the"]},{"Key":"the shortest","Fragments":["string","String","solution"]},{"Key":"shortest string","Fragments":["as"]},{"Key":"string as","Fragments":["a"]},{"Key":"a max","Fragments":["loop"]},{"Key":"max loop","Fragments":["counter."]},{"Key":"loop counter.","Fragments":["I"]},{"Key":"counter. I","Fragments":["heard"]},{"Key":"I heard","Fragments":["about"]},{"Key":"heard about","Fragments":["zip"]},{"Key":"about zip","Fragments":["but"]},{"Key":"zip but","Fragments":["never"]},{"Key":"but never","Fragments":["actually"]},{"Key":"never actually","Fragments":["used"]},{"Key":"actually used","Fragments":["it."]},{"Key":"used it.","Fragments":["Turns"]},{"Key":"it. Turns","Fragments":["out"]},{"Key":"Turns out","Fragments":["that"]},{"Key":"it creates","Fragments":["a"]},{"Key":"creates a","Fragments":["list"]},{"Key":"a list","Fragments":["of","to","of","and","directly.","of","of","of"]},{"Key":"list of","Fragments":["tuples","tuples","characters","_potential_","student","nucleotides","pairs","possible","counts","(nucleotide,","parsed","sorted"]},{"Key":"of tuples","Fragments":["and","to","with","that"]},{"Key":"tuples and","Fragments":["handles"]},{"Key":"and handles","Fragments":["differences"]},{"Key":"handles differences","Fragments":["in"]},{"Key":"differences in","Fragments":["length"]},{"Key":"in length","Fragments":["exactly","i"]},{"Key":"length exactly","Fragments":["the"]},{"Key":"way needed","Fragments":["in"]},{"Key":"needed in","Fragments":["this","order","order"]},{"Key":"this example.","Fragments":["All","I'm"]},{"Key":"example. All","Fragments":["I"]},{"Key":"All I","Fragments":["have"]},{"Key":"do now","Fragments":["is"]},{"Key":"now is","Fragments":["compare"]},{"Key":"is compare","Fragments":["the"]},{"Key":"compare the","Fragments":["two","sorted,","sorted"]},{"Key":"two characters","Fragments":["in"]},{"Key":"characters in","Fragments":["each"]},{"Key":"in each","Fragments":["tuple"]},{"Key":"each tuple","Fragments":["and"]},{"Key":"tuple and","Fragments":["add"]},{"Key":"and add","Fragments":["to","or","runtime","an","the"]},{"Key":"add to","Fragments":["the","readabilty"]},{"Key":"the total","Fragments":["count:","was"]},{"Key":"total count:","Fragments":["foldLeft"]},{"Key":"count: foldLeft","Fragments":["will"]},{"Key":"foldLeft will","Fragments":["reduce"]},{"Key":"will reduce","Fragments":["the"]},{"Key":"reduce the","Fragments":["list"]},{"Key":"the list","Fragments":["of","of","of","of"]},{"Key":"tuples to","Fragments":["the"]},{"Key":"the Hamming","Fragments":["distance."]},{"Key":"think possibly","Fragments":["what"]},{"Key":"possibly what","Fragments":["you"]},{"Key":"need is","Fragments":["an"]},{"Key":"an \"object\"","Fragments":["rather"]},{"Key":"\"object\" rather","Fragments":["than"]},{"Key":" Creating","Fragments":["a"]},{"Key":"Creating a","Fragments":["new"]},{"Key":"new robot","Fragments":["just"]},{"Key":"robot just","Fragments":["to"]},{"Key":"to create","Fragments":["a","an","that","a","a","a","a","a","objects"]},{"Key":"new name","Fragments":["is"]},{"Key":"name is","Fragments":["wasteful.","a","you","a"]},{"Key":"is wasteful.","Fragments":["Can"]},{"Key":"wasteful. Can","Fragments":["you"]},{"Key":"Can you","Fragments":["avoid","explain","try","explain","help","refactor"]},{"Key":"you avoid","Fragments":["that?"]},{"Key":" if","Fragments":["(a)","(isShouting)","(!containsWord)","(containsWord)","(message.trim.isEmpty)","(...)"]},{"Key":"if (a)","Fragments":["true"]},{"Key":"(a) true","Fragments":["else"]},{"Key":"true else","Fragments":["false","false`."]},{"Key":" -","Fragments":["It's","In","What","Scala","Use","Use","Format","sd","sd","Readability","Reusability","Pattern","`nucleotides`","the","also","some","use","on","allowed"]},{"Key":"- It's","Fragments":["more"]},{"Key":"It's more","Fragments":["idiomatic","concise,","a"]},{"Key":"more idiomatic","Fragments":["to","Scala","since"]},{"Key":"idiomatic to","Fragments":["factor"]},{"Key":"to factor","Fragments":["out"]},{"Key":"factor out","Fragments":["the"]},{"Key":"out the","Fragments":["tests","one","groupBy","big","predicate.","words.","`==","constant","checksum","code","two","filter","case","match"]},{"Key":"the tests","Fragments":["into","to","are","to","pass.","to","that","does","pass...","to"]},{"Key":"tests into","Fragments":["separate"]},{"Key":"into separate","Fragments":["functions.","methods?"]},{"Key":"separate functions.","Fragments":["In"]},{"Key":"functions. In","Fragments":["this"]},{"Key":"In this","Fragments":["case","case","case","case,","approach","case","case"]},{"Key":"this case","Fragments":["the","it","you","there","`len`","it","it"]},{"Key":"case the","Fragments":["functions","response"]},{"Key":"are trivial","Fragments":["but"]},{"Key":"trivial but","Fragments":["it"]},{"Key":"but it","Fragments":["still","can","gives","feels","is","does","enables","wasn't","did"]},{"Key":"it still","Fragments":["helps","makes"]},{"Key":"still helps","Fragments":["make"]},{"Key":"helps make","Fragments":["the"]},{"Key":"code self","Fragments":["documenting"]},{"Key":"self documenting","Fragments":["and","variable"]},{"Key":"documenting and","Fragments":["easier"]},{"Key":"and easier","Fragments":["to","way"]},{"Key":"- In","Fragments":["Scala"]},{"Key":"In Scala","Fragments":["**if**"]},{"Key":"Scala **if**","Fragments":["is"]},{"Key":"**if** is","Fragments":["an"]},{"Key":"an expression","Fragments":["rather","in","that"]},{"Key":"expression rather","Fragments":["than"]},{"Key":"a statement.","Fragments":["That"]},{"Key":"statement. That","Fragments":["means"]},{"Key":"means it","Fragments":["evaluates","has"]},{"Key":"it evaluates","Fragments":["to"]},{"Key":"evaluates to","Fragments":["a","boolean"]},{"Key":"a value.","Fragments":["The"]},{"Key":"value. The","Fragments":["value"]},{"Key":"The value","Fragments":["of"]},{"Key":"last expression","Fragments":["in","in"]},{"Key":"the **if**,","Fragments":["**else"]},{"Key":"**if**, **else","Fragments":["if**"]},{"Key":"**else if**","Fragments":["or"]},{"Key":"if** or","Fragments":["**else**"]},{"Key":"or **else**","Fragments":["block"]},{"Key":"**else** block","Fragments":["becomes"]},{"Key":"block becomes","Fragments":["the"]},{"Key":"becomes the","Fragments":["result"]},{"Key":"result of","Fragments":["the","being","your","the","the"]},{"Key":"the expression.","Fragments":["Rather"]},{"Key":"expression. Rather","Fragments":["than"]},{"Key":"using **return**","Fragments":["to"]},{"Key":"**return** to","Fragments":["provide"]},{"Key":"to provide","Fragments":["the"]},{"Key":"provide the","Fragments":["function's"]},{"Key":"the function's","Fragments":["result","return"]},{"Key":"function's result","Fragments":["you"]},{"Key":"can write","Fragments":["it"]},{"Key":" if(isShouting(speech))","Fragments":["\"Woah,"]},{"Key":"if(isShouting(speech)) \"Woah,","Fragments":["chill"]},{"Key":"\"Woah, chill","Fragments":["out!\"","out!\"","out!\"","out\""]},{"Key":" else","Fragments":["if(isQuestion(speech))","if(isNothing(speech))","\"Whatever.\"","if","if","\"Whatever.\"","if","if","{","if","if","\"Whatever.\""]},{"Key":"else if(isQuestion(speech))","Fragments":["\"Sure.\""]},{"Key":"else if(isNothing(speech))","Fragments":["\"Fine."]},{"Key":"if(isNothing(speech)) \"Fine.","Fragments":["Be"]},{"Key":"\"Fine. Be","Fragments":["that","that","that","that","that","that"]},{"Key":"Be that","Fragments":["way!\"","way!\"","way!\"","way!\"","way!\"","way!\""]},{"Key":" Evaluating","Fragments":["that"]},{"Key":"Evaluating that","Fragments":["expression"]},{"Key":"that expression","Fragments":["will","is"]},{"Key":"expression will","Fragments":["result"]},{"Key":"will result","Fragments":["in"]},{"Key":"result in","Fragments":["String"]},{"Key":"in String","Fragments":["value."]},{"Key":"String value.","Fragments":["If"]},{"Key":"value. If","Fragments":["that"]},{"Key":"your function","Fragments":["that","body.","an","is"]},{"Key":"function that","Fragments":["will","can","makes","is","was"]},{"Key":"be the","Fragments":["function's","result","most","return"]},{"Key":"function's return","Fragments":["value."]},{"Key":"return value.","Fragments":["There"]},{"Key":"value. There","Fragments":["are"]},{"Key":"There are","Fragments":["a","certainly","ways"]},{"Key":"a few","Fragments":["rare","bits","characters"]},{"Key":"few rare","Fragments":["cases"]},{"Key":"rare cases","Fragments":["where"]},{"Key":"cases where","Fragments":["return"]},{"Key":"where return","Fragments":["is"]},{"Key":"return is","Fragments":["useful","usually"]},{"Key":"is useful","Fragments":["in"]},{"Key":"useful in","Fragments":["Scala,","the"]},{"Key":"in Scala,","Fragments":["but","and","and"]},{"Key":"Scala, but","Fragments":["in"]},{"Key":"in general","Fragments":["it's"]},{"Key":"general it's","Fragments":["a"]},{"Key":"a code","Fragments":["smell","block"]},{"Key":"code smell","Fragments":["that"]},{"Key":"smell that","Fragments":["means"]},{"Key":"that means","Fragments":["there's"]},{"Key":"means there's","Fragments":["probably"]},{"Key":"there's probably","Fragments":["a"]},{"Key":"a cleaner","Fragments":["way","way"]},{"Key":"cleaner way","Fragments":["to","to"]},{"Key":"to implement","Fragments":["what"]},{"Key":"implement what","Fragments":["you're"]},{"Key":"what you're","Fragments":["trying","trying","checking,"]},{"Key":"you're trying","Fragments":["to","to"]},{"Key":"- What","Fragments":["should"]},{"Key":"What should","Fragments":["be","I"]},{"Key":"result if","Fragments":["a"]},{"Key":"question ends","Fragments":["with"]},{"Key":"ends with","Fragments":["some","a","?."]},{"Key":"with some","Fragments":["extra","if/then"]},{"Key":"some extra","Fragments":["spaces?"]},{"Key":"extra spaces?","Fragments":["It's"]},{"Key":"spaces? It's","Fragments":["probably"]},{"Key":"It's probably","Fragments":["better"]},{"Key":"probably better","Fragments":["to"]},{"Key":"to trim","Fragments":["the","the","at"]},{"Key":"trim the","Fragments":["input","code"]},{"Key":"input before","Fragments":["checking"]},{"Key":"before checking","Fragments":["if"]},{"Key":"if it","Fragments":["ends","would","is","is","is","is","contains","is"]},{"Key":"it ends","Fragments":["with"]},{"Key":"- Scala","Fragments":["lets"]},{"Key":"Scala lets","Fragments":["you"]},{"Key":"lets you","Fragments":["treat"]},{"Key":"you treat","Fragments":["Strings"]},{"Key":"treat Strings","Fragments":["a"]},{"Key":"Strings a","Fragments":["lot"]},{"Key":"lot like","Fragments":["collections"]},{"Key":"like collections","Fragments":["of"]},{"Key":"collections of","Fragments":["Characters"]},{"Key":"of Characters","Fragments":["(see"]},{"Key":"Characters (see","Fragments":["StringOps"]},{"Key":"(see StringOps","Fragments":["in"]},{"Key":"StringOps in","Fragments":["the","the","the","the"]},{"Key":"the documentation).","Fragments":["You"]},{"Key":"documentation). You","Fragments":["might"]},{"Key":"might find","Fragments":["the"]},{"Key":"find the","Fragments":["exists()","Enumeration"]},{"Key":"the exists()","Fragments":["function"]},{"Key":"exists() function","Fragments":["useful"]},{"Key":"function useful","Fragments":["for"]},{"Key":"useful for","Fragments":["detecting","this"]},{"Key":"detecting the","Fragments":["shouting"]},{"Key":" Great","Fragments":["start.","use"]},{"Key":"Great start.","Fragments":["Keep"]},{"Key":"start. Keep","Fragments":["it"]},{"Key":"Keep it","Fragments":["up."]},{"Key":"Thank you","Fragments":["so","for","for","for","four","for","for"]},{"Key":"you so","Fragments":["much"]},{"Key":"the feedback.","Fragments":["I've","True","I"]},{"Key":"feedback. I've","Fragments":["made"]},{"Key":"I've made","Fragments":["some"]},{"Key":"made some","Fragments":["changes."]},{"Key":"some changes.","Fragments":["What"]},{"Key":"changes. What","Fragments":["do"]},{"Key":"What do","Fragments":["you","you","you","you"]},{"Key":" Liked","Fragments":["the"]},{"Key":"Liked the","Fragments":["name"]},{"Key":"name of","Fragments":["the","the","Bob's","Bob's"]},{"Key":"the return-keyword","Fragments":["if"]},{"Key":"return-keyword if","Fragments":["you"]},{"Key":"you use","Fragments":["if/elseif/else","trippe","Queue?","`lazy","currently,","foldLeft"]},{"Key":"use if/elseif/else","Fragments":["blocks"]},{"Key":" Although","Fragments":["counting"]},{"Key":"Although counting","Fragments":["each"]},{"Key":"counting each","Fragments":["letter"]},{"Key":"each letter","Fragments":["is"]},{"Key":"letter is","Fragments":["more"]},{"Key":"more efficient","Fragments":["than","(as","to","than","by"]},{"Key":"efficient than","Fragments":["generating","call"]},{"Key":"than generating","Fragments":["all"]},{"Key":"generating all","Fragments":["anagrams,"]},{"Key":"all anagrams,","Fragments":["I"]},{"Key":"anagrams, I","Fragments":["found"]},{"Key":"I found","Fragments":["it","it","a","a"]},{"Key":"found it","Fragments":["much","more"]},{"Key":"much more","Fragments":["concise","readable.","Scala-y.","than","readable."]},{"Key":"more concise","Fragments":["and","in","by","and"]},{"Key":"concise and","Fragments":["easier.","it"]},{"Key":"* There","Fragments":["is","is"]},{"Key":"There is","Fragments":["no","another","a"]},{"Key":"is no","Fragments":["need","obvious","definition),"]},{"Key":"for `str3`","Fragments":["function"]},{"Key":"* Don't","Fragments":["modify"]},{"Key":"Don't modify","Fragments":["`_str3`"]},{"Key":"modify `_str3`","Fragments":["inside"]},{"Key":"`_str3` inside","Fragments":["`newName`."]},{"Key":"inside `newName`.","Fragments":["Just"]},{"Key":"`newName`. Just","Fragments":["return"]},{"Key":"Just return","Fragments":["the"]},{"Key":"return the","Fragments":["new","last"]},{"Key":"new value.","Fragments":["You"]},{"Key":"value. You","Fragments":["can"]},{"Key":"call `reset`","Fragments":["whenever"]},{"Key":"`reset` whenever","Fragments":["you"]},{"Key":"whenever you","Fragments":["need"]},{"Key":"to assign","Fragments":["to"]},{"Key":"assign to","Fragments":["`_str3`"]},{"Key":"* make","Fragments":["`_str3`"]},{"Key":"make `_str3`","Fragments":["private"]},{"Key":"`_str3` private","Fragments":["and"]},{"Key":"private and","Fragments":["give"]},{"Key":"and give","Fragments":["it"]},{"Key":"better label","Fragments":["such"]},{"Key":"label such","Fragments":["as"]},{"Key":"No need","Fragments":["for","to","to"]},{"Key":"for `if(a)","Fragments":["true"]},{"Key":"`if(a) true","Fragments":["else"]},{"Key":"else false`.","Fragments":["You"]},{"Key":"false`. You","Fragments":["can"]},{"Key":"can simply","Fragments":["return"]},{"Key":"simply return","Fragments":["`a`"]},{"Key":"* There's","Fragments":["no","no","no"]},{"Key":"There's no","Fragments":["need","need","need","reason","need"]},{"Key":"define _sq","Fragments":["as"]},{"Key":"_sq as","Fragments":["a"]},{"Key":"class member.","Fragments":["It"]},{"Key":"member. It","Fragments":["can"]},{"Key":"a simple","Fragments":["function","thing","statement.","boolean","expression","sort","exercise"]},{"Key":"simple function","Fragments":["variable."]},{"Key":"define `type","Fragments":["sq1`"]},{"Key":"for `def","Fragments":["sq`"]},{"Key":"* Remove","Fragments":["unwanted"]},{"Key":"Remove unwanted","Fragments":["spaces"]},{"Key":"unwanted spaces","Fragments":["and"]},{"Key":"spaces and","Fragments":["correct","the"]},{"Key":"and correct","Fragments":["indentation"]},{"Key":"* Use","Fragments":["the"]},{"Key":"Use the","Fragments":["`count`"]},{"Key":"the `count`","Fragments":["function","method","function"]},{"Key":"`count` function","Fragments":["in","in"]},{"Key":"* No","Fragments":["need"]},{"Key":"call `toCharArray`.","Fragments":["It"]},{"Key":"`toCharArray`. It","Fragments":["is"]},{"Key":"is automatically","Fragments":["done"]},{"Key":"automatically done","Fragments":["by"]},{"Key":"done by","Fragments":["scala.","adding","starting"]},{"Key":"* Check","Fragments":["indentation"]},{"Key":"I would","Fragments":["recommend","start","have","have","have","like","have","think","make","prefer","argue","have","like","be","only","only","recommend","also","add","be","recommend","probably"]},{"Key":"would recommend","Fragments":["using","renaming","that"]},{"Key":"recommend using","Fragments":["pattern","pattern"]},{"Key":"match on","Fragments":["the","`pn.size`"]},{"Key":"the pair","Fragments":["element."]},{"Key":"pair element.","Fragments":["It"]},{"Key":"element. It","Fragments":["looks"]},{"Key":"It looks","Fragments":["cleaner"]},{"Key":"Looks great!","Fragments":["A","Tough"]},{"Key":"great! A","Fragments":["few"]},{"Key":"A few","Fragments":["minor","things:","more","thoughts/questions:","tweaks","tweaks","quick","minor","suggestions"]},{"Key":"few minor","Fragments":["improvements:","suggestions:"]},{"Key":"1. Redundant","Fragments":["curly"]},{"Key":"Redundant curly","Fragments":["braces"]},{"Key":"braces around","Fragments":["pattern","the","the","your"]},{"Key":"around pattern","Fragments":["matching"]},{"Key":"matching can","Fragments":["be"]},{"Key":"2. `x.trim.length","Fragments":["=="]},{"Key":"`x.trim.length ==","Fragments":["0`"]},{"Key":"== 0`","Fragments":["can"]},{"Key":"0` can","Fragments":["be","be"]},{"Key":"be reduced","Fragments":["to"]},{"Key":"reduced to","Fragments":["`x.trim.isEmpty`"]},{"Key":"1. You","Fragments":["can","can","can","can"]},{"Key":"use `someString.sorted`","Fragments":["directly"]},{"Key":"`someString.sorted` directly","Fragments":["without"]},{"Key":"directly without","Fragments":["converting"]},{"Key":"without converting","Fragments":["it"]},{"Key":"converting it","Fragments":["to"]},{"Key":"to an","Fragments":["array.","empty","`if/else`."]},{"Key":"2. Then","Fragments":["it"]},{"Key":"Then it","Fragments":["would"]},{"Key":"simpler by","Fragments":["comparing","making"]},{"Key":"by comparing","Fragments":["twice"]},{"Key":"comparing twice","Fragments":["in"]},{"Key":"twice in","Fragments":["a","second"]},{"Key":"single if","Fragments":["clause."]},{"Key":" 3.","Fragments":["`words","[The","It","Curly","You","`message.trim()","The","`def`","I"]},{"Key":"3. `words","Fragments":["filter"]},{"Key":"`words filter","Fragments":["isAnagram`","{"]},{"Key":"filter isAnagram`","Fragments":["works"]},{"Key":"isAnagram` works","Fragments":["as"]},{"Key":"works as","Fragments":["the"]},{"Key":"as `words","Fragments":["filter"]},{"Key":"filter {","Fragments":["isAnagram(_)"]},{"Key":"{ isAnagram(_)","Fragments":["}`."]},{"Key":"use `.count`","Fragments":["with"]},{"Key":"`.count` with","Fragments":["pattern"]},{"Key":"with pattern","Fragments":["matching."]},{"Key":" `.count`","Fragments":["makes"]},{"Key":"`.count` makes","Fragments":["it"]},{"Key":"makes it","Fragments":["a","all","easier","clear","easier","a"]},{"Key":" Use","Fragments":["may"]},{"Key":"Use may","Fragments":["use"]},{"Key":"may use","Fragments":["`forall`"]},{"Key":"use `forall`","Fragments":["and"]},{"Key":"`forall` and","Fragments":["`exists`"]},{"Key":"and `exists`","Fragments":["instead"]},{"Key":"`exists` instead","Fragments":["of"]},{"Key":"If an","Fragments":["`unapply`"]},{"Key":"an `unapply`","Fragments":["doesn't"]},{"Key":"`unapply` doesn't","Fragments":["provide"]},{"Key":"doesn't provide","Fragments":["any"]},{"Key":"provide any","Fragments":["value"]},{"Key":"any value","Fragments":["it"]},{"Key":"value it","Fragments":["can"]},{"Key":"can return","Fragments":["just"]},{"Key":"return just","Fragments":["`Boolean`"]},{"Key":"just `Boolean`","Fragments":["instead"]},{"Key":"`Boolean` instead","Fragments":["of"]},{"Key":"I've updated","Fragments":["the"]},{"Key":"updated the","Fragments":["use"]},{"Key":"unapply to","Fragments":["return"]},{"Key":"to return","Fragments":["a"]},{"Key":"return a","Fragments":["Boolean","cloned/mutated"]},{"Key":"a Boolean","Fragments":["since"]},{"Key":"Boolean since","Fragments":["the"]},{"Key":"value wasn't","Fragments":["being"]},{"Key":"wasn't being","Fragments":["used"]},{"Key":"being used","Fragments":["when","just"]},{"Key":"used when","Fragments":["pattern"]},{"Key":"when pattern","Fragments":["matching."]},{"Key":"matching. Suggested","Fragments":["by"]},{"Key":"Suggested by","Fragments":["@aron"]},{"Key":"by @aron","Fragments":["in"]},{"Key":"@aron in","Fragments":["a"]},{"Key":"a comment","Fragments":["on"]},{"Key":"comment on","Fragments":["iteration"]},{"Key":"on iteration","Fragments":["2"]},{"Key":"2 --","Fragments":["http://exercism.io/submissions/e405af305e482dc69e4ed2ee"]},{"Key":" @jordan","Fragments":["Thanks"]},{"Key":"@jordan Thanks","Fragments":["so"]},{"Key":"I modify","Fragments":["my"]},{"Key":"modify my","Fragments":["code"]},{"Key":"more like","Fragments":["Scala","Scala"]},{"Key":"like Scala","Fragments":["style.","code"]},{"Key":"It's my","Fragments":["first"]},{"Key":"first program","Fragments":["with"]},{"Key":"program with","Fragments":["Scala."]},{"Key":" Please","Fragments":["let","do"]},{"Key":"Please let","Fragments":["me"]},{"Key":"let me","Fragments":["know","have"]},{"Key":"me know","Fragments":["what"]},{"Key":"What drove","Fragments":["me"]},{"Key":"drove me","Fragments":["in"]},{"Key":"me in","Fragments":["this","a"]},{"Key":"this direction","Fragments":["is"]},{"Key":"direction is","Fragments":["because"]},{"Key":"is because","Fragments":["I","it's"]},{"Key":"because I","Fragments":["have","no"]},{"Key":"little experience","Fragments":["in"]},{"Key":"experience in","Fragments":["Scala,"]},{"Key":"Scala, and","Fragments":["I","roughly,"]},{"Key":"and I","Fragments":["wanted","would","wouldn't","don't","don't","just","have"]},{"Key":"I wanted","Fragments":["to","to","to","Bob","Bob","Bob"]},{"Key":"try my","Fragments":["understanding"]},{"Key":"my understanding","Fragments":["on"]},{"Key":"understanding on","Fragments":["it."]},{"Key":" 와우","Fragments":["코드가"]},{"Key":"와우 코드가","Fragments":["멋지네요"]},{"Key":"코드가 멋지네요","Fragments":[":)"]},{"Key":" 두가지","Fragments":["배우고"]},{"Key":"두가지 배우고","Fragments":["갑니다."]},{"Key":" `match`문","Fragments":["안에"]},{"Key":"`match`문 안에","Fragments":["조건문"]},{"Key":"안에 조건문","Fragments":["이"]},{"Key":"조건문 이","Fragments":["들어"]},{"Key":"이 들어","Fragments":["가는"]},{"Key":"들어 가는","Fragments":["것이랑"]},{"Key":" `x","Fragments":["=="]},{"Key":"`x ==","Fragments":["x.toUpperCase"]},{"Key":"== x.toUpperCase","Fragments":["\u0026\u0026"]},{"Key":"x.toUpperCase \u0026\u0026","Fragments":["x"]},{"Key":"\u0026\u0026 x","Fragments":["!="]},{"Key":"!= x.toLowerCase`","Fragments":["이"]},{"Key":"x.toLowerCase` 이","Fragments":["로직이"]},{"Key":"이 로직이","Fragments":["맘에"]},{"Key":"로직이 맘에","Fragments":["드네요"]},{"Key":"good! A","Fragments":["few","few"]},{"Key":"1. `message.forall(c","Fragments":["=\u003e"]},{"Key":"`message.forall(c =\u003e","Fragments":["!c.isLower)`"]},{"Key":"=\u003e !c.isLower)`","Fragments":["can"]},{"Key":"!c.isLower)` can","Fragments":["be"]},{"Key":"be `!","Fragments":["message.exists(_.isLower)`"]},{"Key":"`! message.exists(_.isLower)`","Fragments":["or"]},{"Key":"message.exists(_.isLower)` or","Fragments":["`message.forall("]},{"Key":"or `message.forall(","Fragments":["!"]},{"Key":"`message.forall( !","Fragments":["_.isLower)`.","_.isLower)`,"]},{"Key":"2. `message.count(c","Fragments":["=\u003e"]},{"Key":"`message.count(c =\u003e","Fragments":["c.isUpper)"]},{"Key":"=\u003e c.isUpper)","Fragments":["\u003e"]},{"Key":"c.isUpper) \u003e","Fragments":["0`"]},{"Key":"\u003e 0`","Fragments":["can"]},{"Key":"3. [The","Fragments":["style"]},{"Key":"[The style","Fragments":["guide](http://docs.scala-lang.org/style/control-structures.html)"]},{"Key":"style guide](http://docs.scala-lang.org/style/control-structures.html)","Fragments":["recommends"]},{"Key":"guide](http://docs.scala-lang.org/style/control-structures.html) recommends","Fragments":["`if"]},{"Key":"recommends `if","Fragments":["(condition)`"]},{"Key":"`if (condition)`","Fragments":["over"]},{"Key":"(condition)` over","Fragments":["`if(condition)`."]},{"Key":"omit curly","Fragments":["braces","braces"]},{"Key":"braces from","Fragments":["your"]},{"Key":"from your","Fragments":["method","Scala"]},{"Key":"your method","Fragments":["body"]},{"Key":"method body","Fragments":["when"]},{"Key":"body when","Fragments":["it"]},{"Key":"when it","Fragments":["consists","comes"]},{"Key":"it consists","Fragments":["of"]},{"Key":"consists of","Fragments":["a","a","a"]},{"Key":"2. `return`","Fragments":["is"]},{"Key":"`return` is","Fragments":["generally"]},{"Key":"is generally","Fragments":["unnecessary"]},{"Key":"generally unnecessary","Fragments":["in"]},{"Key":"unnecessary in","Fragments":["Scala."]},{"Key":"3. It","Fragments":["would"]},{"Key":"It would","Fragments":["be","probably"]},{"Key":"be an","Fragments":["overhead"]},{"Key":"an overhead","Fragments":["calculating"]},{"Key":"overhead calculating","Fragments":["`word.toLowerCase`"]},{"Key":"calculating `word.toLowerCase`","Fragments":["and"]},{"Key":"`word.toLowerCase` and","Fragments":["`word.toLowerCase.sorted`"]},{"Key":"and `word.toLowerCase.sorted`","Fragments":["every"]},{"Key":"`word.toLowerCase.sorted` every","Fragments":["time"]},{"Key":"every time","Fragments":["in","`hey`"]},{"Key":"time in","Fragments":["helper"]},{"Key":"in helper","Fragments":["functions."]},{"Key":"can rewrite","Fragments":["`wordCount`","`containsLetters`","it"]},{"Key":"rewrite `wordCount`","Fragments":["with"]},{"Key":"`wordCount` with","Fragments":["one-liner"]},{"Key":"with one-liner","Fragments":["with","by"]},{"Key":"one-liner with","Fragments":["`.groupBy`"]},{"Key":"with `.groupBy`","Fragments":["and"]},{"Key":"`.groupBy` and","Fragments":["`mapValues`."]},{"Key":"2. If","Fragments":["you","you"]},{"Key":"would prefer","Fragments":["fold","four"]},{"Key":"prefer fold","Fragments":["for"]},{"Key":"fold for","Fragments":["performance:"]},{"Key":"1. `map.withDefaultValue(0)`","Fragments":["allows"]},{"Key":"`map.withDefaultValue(0)` allows","Fragments":["you"]},{"Key":"allows you","Fragments":["to"]},{"Key":"to replace","Fragments":["the","the","`foldLeft(0)((m:","the"]},{"Key":"replace the","Fragments":["pattern","`getOrElse`","if","magic"]},{"Key":"matching with","Fragments":["simple","regex"]},{"Key":"with simple","Fragments":["apply."]},{"Key":"2. Instead","Fragments":["of"]},{"Key":"of merging","Fragments":["single-value"]},{"Key":"merging single-value","Fragments":["map"]},{"Key":"single-value map","Fragments":["into"]},{"Key":"map into","Fragments":["previous"]},{"Key":"into previous","Fragments":["one,"]},{"Key":"previous one,","Fragments":["you"]},{"Key":"one, you","Fragments":["can"]},{"Key":"use `map.updated(key,","Fragments":["value)`"]},{"Key":"`map.updated(key, value)`","Fragments":["or"]},{"Key":"value)` or","Fragments":["`map"]},{"Key":"or `map","Fragments":["+"]},{"Key":"`map +","Fragments":["(key"]},{"Key":"+ (key","Fragments":["-\u003e"]},{"Key":"(key -\u003e","Fragments":["value)`."]},{"Key":"3. Curly","Fragments":["braces"]},{"Key":"Curly braces","Fragments":["in"]},{"Key":"braces in","Fragments":["`wordCount`","`wordCount`"]},{"Key":"in `wordCount`","Fragments":["can","can"]},{"Key":"`wordCount` can","Fragments":["be","be"]},{"Key":"rewrite `containsLetters`","Fragments":["as"]},{"Key":"`containsLetters` as","Fragments":["`input.exists(_.isLetter)`."]},{"Key":"as `input.exists(_.isLetter)`.","Fragments":["It's"]},{"Key":"`input.exists(_.isLetter)`. It's","Fragments":["even"]},{"Key":"It's even","Fragments":["concise"]},{"Key":"even concise","Fragments":["enough"]},{"Key":"concise enough","Fragments":["to"]},{"Key":"enough to","Fragments":["be","pass","handle"]},{"Key":"be placed","Fragments":["in"]},{"Key":"placed in","Fragments":["the"]},{"Key":"the guard","Fragments":["directly.","after","clauses"]},{"Key":"2. All","Fragments":["other"]},{"Key":"All other","Fragments":["conditions"]},{"Key":"other conditions","Fragments":["can"]},{"Key":"conditions can","Fragments":["be"]},{"Key":"be rewritten","Fragments":["using","as","as"]},{"Key":"rewritten using","Fragments":["simple"]},{"Key":"using simple","Fragments":["collection"]},{"Key":"simple collection","Fragments":["methods."]},{"Key":"3. You","Fragments":["don't"]},{"Key":"need parens","Fragments":["in"]},{"Key":"parens in","Fragments":["the"]},{"Key":"guard after","Fragments":["`case"]},{"Key":"after `case","Fragments":["Shouting()`."]},{"Key":"Looks great,","Fragments":["to","vastly"]},{"Key":"great, to","Fragments":["slightly"]},{"Key":"to slightly","Fragments":["improve,"]},{"Key":"slightly improve,","Fragments":["the"]},{"Key":"improve, the","Fragments":["third"]},{"Key":"the third","Fragments":["condition","case"]},{"Key":"third condition","Fragments":["can"]},{"Key":"condition can","Fragments":["be"]},{"Key":"be simplified","Fragments":["as","as","to:","to","(apply","to:"]},{"Key":"simplified as","Fragments":["`x.trim.isEmpty`.","`\"\"\"[^\\W]+\"\"\"`."]},{"Key":"Looks great.","Fragments":["One"]},{"Key":"great. One","Fragments":["more"]},{"Key":"One more","Fragments":["minor"]},{"Key":"more minor","Fragments":["thing,"]},{"Key":"minor thing,","Fragments":["usually"]},{"Key":"thing, usually","Fragments":["a"]},{"Key":"usually a","Fragments":["method"]},{"Key":"method name","Fragments":["followed","helps"]},{"Key":"name followed","Fragments":["by"]},{"Key":"followed by","Fragments":["empty"]},{"Key":"by empty","Fragments":["parens"]},{"Key":"empty parens","Fragments":["means"]},{"Key":"parens means","Fragments":["it"]},{"Key":"it has","Fragments":["a","to"]},{"Key":"a side","Fragments":["effect,"]},{"Key":"side effect,","Fragments":["so"]},{"Key":"effect, so","Fragments":["that"]},{"Key":"be omitted","Fragments":["in","(http://docs.scala-lang.org/style/control-structures.html#curly-braces)."]},{"Key":"omitted in","Fragments":["this"]},{"Key":"You're right,","Fragments":["thanks"]},{"Key":"right, thanks","Fragments":["for"]},{"Key":"thanks for","Fragments":["correction!","the","pointing","your","your","the"]},{"Key":"I went","Fragments":["ahead","with","ahead"]},{"Key":"went ahead","Fragments":["and","and"]},{"Key":"ahead and","Fragments":["removed","made"]},{"Key":"and removed","Fragments":["curly-braces,"]},{"Key":"removed curly-braces,","Fragments":["returns"]},{"Key":"curly-braces, returns","Fragments":["and"]},{"Key":"returns and","Fragments":["type","make"]},{"Key":"and type","Fragments":["statements"]},{"Key":"type statements","Fragments":["to"]},{"Key":"concise in","Fragments":["iteration"]},{"Key":" Overhead","Fragments":["of"]},{"Key":"Overhead of","Fragments":["the"]},{"Key":"the calculation","Fragments":["wasn't"]},{"Key":"calculation wasn't","Fragments":["really"]},{"Key":"wasn't really","Fragments":["a"]},{"Key":"really a","Fragments":["concern","good","statement"]},{"Key":"a concern","Fragments":["of"]},{"Key":"concern of","Fragments":["mine."]},{"Key":"of mine.","Fragments":["My"]},{"Key":"mine. My","Fragments":["goal"]},{"Key":"My goal","Fragments":["was"]},{"Key":"goal was","Fragments":["to"]},{"Key":"was to","Fragments":["have","put"]},{"Key":"have intention-revealing","Fragments":["names,"]},{"Key":"intention-revealing names,","Fragments":["and"]},{"Key":"names, and","Fragments":["the"]},{"Key":"of being","Fragments":["able"]},{"Key":"being able","Fragments":["to"]},{"Key":"use those","Fragments":["names"]},{"Key":"those names","Fragments":["as","instead"]},{"Key":"names as","Fragments":["partial"]},{"Key":"as partial","Fragments":["functions"]},{"Key":"partial functions","Fragments":["to"]},{"Key":"functions to","Fragments":["filter/filterNot","show","functions)","make"]},{"Key":"to filter/filterNot","Fragments":["is"]},{"Key":"filter/filterNot is","Fragments":["more"]},{"Key":" Agreed,","Fragments":["then","those"]},{"Key":"Agreed, then","Fragments":["new"]},{"Key":"then new","Fragments":["one"]},{"Key":"new one","Fragments":["looks"]},{"Key":"one looks","Fragments":["great!"]},{"Key":"1. It'd","Fragments":["be"]},{"Key":"It'd be","Fragments":["better","most"]},{"Key":"to separate","Fragments":["`if`"]},{"Key":"separate `if`","Fragments":["conditions"]},{"Key":"`if` conditions","Fragments":["into"]},{"Key":"conditions into","Fragments":["single"]},{"Key":"into single","Fragments":["functions"]},{"Key":"single functions","Fragments":["to"]},{"Key":"to show","Fragments":["your"]},{"Key":"show your","Fragments":["intention"]},{"Key":"your intention","Fragments":["more"]},{"Key":"intention more","Fragments":["explicit."]},{"Key":"2. You","Fragments":["can"]},{"Key":"braces when","Fragments":["a"]},{"Key":"when a","Fragments":["block"]},{"Key":"a block","Fragments":["consists","which"]},{"Key":"block consists","Fragments":["of"]},{"Key":"single expression.","Fragments":["The"]},{"Key":"expression. The","Fragments":["outermost"]},{"Key":"The outermost","Fragments":["pair"]},{"Key":"outermost pair","Fragments":["is"]},{"Key":"pair is","Fragments":["the"]},{"Key":"only needed","Fragments":["one","by"]},{"Key":"needed one","Fragments":["in"]},{"Key":"one in","Fragments":["this"]},{"Key":"3. `message.trim()","Fragments":["=="]},{"Key":"`message.trim() ==","Fragments":["\"\"`"]},{"Key":"== \"\"`","Fragments":["can"]},{"Key":"\"\"` can","Fragments":["be"]},{"Key":" 4.","Fragments":["Third"]},{"Key":"4. Third","Fragments":["condition"]},{"Key":"Third condition","Fragments":["seems"]},{"Key":"condition seems","Fragments":["unnecessary."]},{"Key":"seems unnecessary.","Fragments":["You"]},{"Key":"unnecessary. You","Fragments":["can"]},{"Key":"can improve","Fragments":["another","your"]},{"Key":"improve another","Fragments":["condition"]},{"Key":"another condition","Fragments":["not"]},{"Key":"condition not","Fragments":["to"]},{"Key":" 5.","Fragments":["To"]},{"Key":"5. To","Fragments":["check"]},{"Key":"To check","Fragments":["if"]},{"Key":"string has","Fragments":["at","at"]},{"Key":"has at","Fragments":["least","least"]},{"Key":"uppercase letter,","Fragments":["you"]},{"Key":"letter, you","Fragments":["can"]},{"Key":"use `message.exists(_.isUpper)`","Fragments":["instead"]},{"Key":"`message.exists(_.isUpper)` instead","Fragments":["of"]},{"Key":"of full","Fragments":["blown"]},{"Key":"full blown","Fragments":["regex."]},{"Key":"1. The","Fragments":["outer","first","first"]},{"Key":"The outer","Fragments":["curly"]},{"Key":"outer curly","Fragments":["braces"]},{"Key":"2. `Map.empty[String,","Fragments":["Int]`"]},{"Key":"`Map.empty[String, Int]`","Fragments":["can"]},{"Key":"Int]` can","Fragments":["be"]},{"Key":"used as","Fragments":["the","an"]},{"Key":"the basis","Fragments":["of"]},{"Key":"basis of","Fragments":["`foldLeft`"]},{"Key":"of `foldLeft`","Fragments":["instead.","seems"]},{"Key":"`foldLeft` instead.","Fragments":["It"]},{"Key":"instead. It","Fragments":["can"]},{"Key":"more improved","Fragments":["with"]},{"Key":"improved with","Fragments":["`Map.empty[String,"]},{"Key":"with `Map.empty[String,","Fragments":["Int].withDefaultValue(0)`"]},{"Key":"`Map.empty[String, Int].withDefaultValue(0)`","Fragments":["to"]},{"Key":"Int].withDefaultValue(0)` to","Fragments":["remove"]},{"Key":"to remove","Fragments":["`if`","the","the","numeric","the","the","the"]},{"Key":"remove `if`","Fragments":["in"]},{"Key":"`if` in","Fragments":["the"]},{"Key":"the fold","Fragments":["operator.","so"]},{"Key":"3. The","Fragments":["splitting"]},{"Key":"The splitting","Fragments":["regex"]},{"Key":"splitting regex","Fragments":["can"]},{"Key":"regex can","Fragments":["be","be"]},{"Key":"rewrite it","Fragments":["with","using"]},{"Key":"it with","Fragments":["one-liner","`gene","`myWord`","tail-recursive"]},{"Key":"one-liner by","Fragments":["zipping"]},{"Key":"by zipping","Fragments":["two"]},{"Key":"zipping two","Fragments":["strings"]},{"Key":"two strings","Fragments":["and"]},{"Key":"and counting","Fragments":["different"]},{"Key":"counting different","Fragments":["pairs"]},{"Key":"different pairs","Fragments":["using"]},{"Key":"pairs using","Fragments":["`.count`."]},{"Key":"1. and","Fragments":["2."]},{"Key":"and 2.","Fragments":["are"]},{"Key":"2. are","Fragments":["good"]},{"Key":"are good","Fragments":["points.","changes."]},{"Key":"good points.","Fragments":["Thanks!"]},{"Key":"But in","Fragments":["3."]},{"Key":"in 3.","Fragments":["I"]},{"Key":"3. I","Fragments":["think","recognized"]},{"Key":"the reg","Fragments":["exp"]},{"Key":"reg exp","Fragments":["is"]},{"Key":"exp is","Fragments":["wrong."]},{"Key":"is wrong.","Fragments":["```[^\\W]+```"]},{"Key":"wrong. ```[^\\W]+```","Fragments":["matches"]},{"Key":"```[^\\W]+``` matches","Fragments":["every"]},{"Key":"matches every","Fragments":["string"]},{"Key":"every string","Fragments":["not","in"]},{"Key":"string not","Fragments":["consisting"]},{"Key":"not consisting","Fragments":["of"]},{"Key":"consisting of","Fragments":["non-word"]},{"Key":"of non-word","Fragments":["characters."]},{"Key":"non-word characters.","Fragments":["So"]},{"Key":"characters. So","Fragments":["in"]},{"Key":"So in","Fragments":["this","`sorted`"]},{"Key":"case it","Fragments":["will","makes","clearly","seems","does"]},{"Key":"will split","Fragments":["the"]},{"Key":"the phrase","Fragments":["at"]},{"Key":"phrase at","Fragments":["every"]},{"Key":"at every","Fragments":["word"]},{"Key":"every word","Fragments":["and"]},{"Key":"word and","Fragments":["we","each","the","once"]},{"Key":"and we","Fragments":["get"]},{"Key":"a array","Fragments":["of"]},{"Key":"array of","Fragments":["characters"]},{"Key":"of characters","Fragments":["between","instead","that"]},{"Key":"characters between","Fragments":["the"]},{"Key":"the words.","Fragments":["I"]},{"Key":"words. I","Fragments":["figured"]},{"Key":"I figured","Fragments":["out","I","out","if"]},{"Key":"that ```(?!')[\\W]+```","Fragments":["works"]},{"Key":"```(?!')[\\W]+``` works","Fragments":["fine"]},{"Key":"works fine","Fragments":["(we"]},{"Key":"fine (we","Fragments":["need"]},{"Key":"(we need","Fragments":["to"]},{"Key":"to exclude","Fragments":["the"]},{"Key":"exclude the","Fragments":["apostrophe"]},{"Key":"the apostrophe","Fragments":["as"]},{"Key":"apostrophe as","Fragments":["it"]},{"Key":"is describe","Fragments":["in"]},{"Key":"describe in","Fragments":["the"]},{"Key":"the test","Fragments":["cases).","set.","cases.","cases","in"]},{"Key":" Oh","Fragments":["thanks,"]},{"Key":"Oh thanks,","Fragments":["didn't"]},{"Key":"thanks, didn't","Fragments":["know"]},{"Key":"didn't know","Fragments":["that.","about","about"]},{"Key":" Trailing","Fragments":["dots"]},{"Key":"Trailing dots","Fragments":["for"]},{"Key":"dots for","Fragments":["method"]},{"Key":"for method","Fragments":["chaining","calls"]},{"Key":"method chaining","Fragments":["look"]},{"Key":"chaining look","Fragments":["a"]},{"Key":"look a","Fragments":["bit","bit"]},{"Key":"bit unfamiliar","Fragments":["to"]},{"Key":"unfamiliar to","Fragments":["me,"]},{"Key":"to me,","Fragments":["but"]},{"Key":"me, but","Fragments":["I"]},{"Key":"strong opinion","Fragments":["about"]},{"Key":"opinion about","Fragments":["it."]},{"Key":"Thanks @anna,","Fragments":["`string.exists`"]},{"Key":"@anna, `string.exists`","Fragments":["is"]},{"Key":"`string.exists` is","Fragments":["what"]},{"Key":"is what","Fragments":["I"]},{"Key":"I was","Fragments":["looking","removing","looking","exploring","trying","basically","working","pretty","looking","really","trying","wondering","at","not","in","thinking","evaluating.]"]},{"Key":"was looking","Fragments":["for","for","for"]},{"Key":"looking for","Fragments":["but","comments,","a","an"]},{"Key":"for but","Fragments":["failed."]},{"Key":"thought that","Fragments":["there"]},{"Key":"there must","Fragments":["be"]},{"Key":"must be","Fragments":["funtion","randomly"]},{"Key":"be funtion","Fragments":["like"]},{"Key":"funtion like","Fragments":["`some"]},{"Key":"like `some","Fragments":["in"]},{"Key":"`some in","Fragments":["clojure`"]},{"Key":"have one","Fragments":["question","filter"]},{"Key":"one question","Fragments":["about"]},{"Key":"question about","Fragments":["your"]},{"Key":"about your","Fragments":["explanation."]},{"Key":" it","Fragments":["sounds"]},{"Key":"it sounds","Fragments":["like","logical"]},{"Key":"sounds like","Fragments":["that"]},{"Key":"could ignore","Fragments":["**parameter"]},{"Key":"ignore **parameter","Fragments":["in"]},{"Key":"**parameter in","Fragments":["lambda"]},{"Key":"in lambda","Fragments":["in"]},{"Key":"lambda in","Fragments":["case"]},{"Key":"in case","Fragments":["I","the"]},{"Key":"case I","Fragments":["don't","would"]},{"Key":"don't care,","Fragments":["don't"]},{"Key":"care, don't","Fragments":["I?**"]},{"Key":"am wrong,","Fragments":["correct"]},{"Key":"wrong, correct","Fragments":["me"]},{"Key":"correct me","Fragments":["please."]},{"Key":" Thanks.","Fragments":["I","In","That's"]},{"Key":"Thanks. I","Fragments":["think"]},{"Key":"think iteration","Fragments":["2"]},{"Key":"2 is","Fragments":["a"]},{"Key":"little easier","Fragments":["on"]},{"Key":"Also, thanks","Fragments":["for"]},{"Key":"the pointer","Fragments":["towards"]},{"Key":"pointer towards","Fragments":["Map.updated."]},{"Key":"towards Map.updated.","Fragments":["That"]},{"Key":"Map.updated. That","Fragments":["will"]},{"Key":"That will","Fragments":["come"]},{"Key":"will come","Fragments":["in"]},{"Key":"come in","Fragments":["handy"]},{"Key":"in handy","Fragments":["for"]},{"Key":"handy for","Fragments":["algorithms","things"]},{"Key":"for algorithms","Fragments":["like"]},{"Key":"algorithms like","Fragments":["this."]},{"Key":"of Seq.count.","Fragments":["More"]},{"Key":"Seq.count. More","Fragments":["intention-revealing."]},{"Key":"couldn't figure","Fragments":["out"]},{"Key":"figure out","Fragments":["the","how","the","what's"]},{"Key":"the one","Fragments":["liner","used"]},{"Key":"one liner","Fragments":["that","is"]},{"Key":"liner that","Fragments":["works"]},{"Key":"that works","Fragments":["for"]},{"Key":"works for","Fragments":["strings"]},{"Key":"for strings","Fragments":["of"]},{"Key":"strings of","Fragments":["different"]},{"Key":"of different","Fragments":["lengths,","characters."]},{"Key":"different lengths,","Fragments":["since"]},{"Key":"lengths, since","Fragments":["those"]},{"Key":"since those","Fragments":["values"]},{"Key":"those values","Fragments":["shouldn't"]},{"Key":"values shouldn't","Fragments":["count."]},{"Key":"a test","Fragments":["case","and"]},{"Key":"test case","Fragments":["which"]},{"Key":"case which","Fragments":["requires"]},{"Key":"which requires","Fragments":["to"]},{"Key":"requires to","Fragments":["ignore"]},{"Key":"to ignore","Fragments":["different"]},{"Key":"ignore different","Fragments":["lengths."]},{"Key":"different lengths.","Fragments":["BTW"]},{"Key":"lengths. BTW","Fragments":["it"]},{"Key":"BTW it","Fragments":["can"]},{"Key":"be easily","Fragments":["done"]},{"Key":"easily done","Fragments":["by"]},{"Key":"adding the","Fragments":["difference","next"]},{"Key":"difference of","Fragments":["lengths"]},{"Key":"of lengths","Fragments":["to"]},{"Key":"lengths to","Fragments":["the"]},{"Key":"count if","Fragments":["needed."]},{"Key":"did most","Fragments":["of"]},{"Key":"most of","Fragments":["the","the","the","the","the","the","the"]},{"Key":"the improvements,","Fragments":["now"]},{"Key":"improvements, now","Fragments":["I"]},{"Key":"now I","Fragments":["am"]},{"Key":"am looking","Fragments":["at"]},{"Key":"at abstracting","Fragments":["the"]},{"Key":"abstracting the","Fragments":["checks"]},{"Key":"checks out","Fragments":["which"]},{"Key":"out which","Fragments":["is"]},{"Key":"the final","Fragments":["one.","statement","statement"]},{"Key":"The first","Fragments":["predicate","assignment","is","is","`if`","if"]},{"Key":"first predicate","Fragments":["will"]},{"Key":"predicate will","Fragments":["recognize"]},{"Key":"will recognize","Fragments":["\"!\""]},{"Key":"recognize \"!\"","Fragments":["as"]},{"Key":"\"!\" as","Fragments":["shouting."]},{"Key":"as shouting.","Fragments":["If"]},{"Key":"shouting. If","Fragments":["it"]},{"Key":"it isn't","Fragments":["intended,"]},{"Key":"isn't intended,","Fragments":["first"]},{"Key":"intended, first","Fragments":["two"]},{"Key":"two conditions","Fragments":["are"]},{"Key":"conditions are","Fragments":["enough"]},{"Key":"are enough","Fragments":["to"]},{"Key":"pass all","Fragments":["tests."]},{"Key":"all tests.","Fragments":["`message","Just"]},{"Key":"tests. `message","Fragments":["=="]},{"Key":"`message ==","Fragments":["message.toUpperCase`"]},{"Key":"== message.toUpperCase`","Fragments":["can"]},{"Key":"message.toUpperCase` can","Fragments":["also"]},{"Key":"can also","Fragments":["be","make","end","be","write:","do"]},{"Key":"as `message.forall(","Fragments":["!"]},{"Key":"! _.isLower)`,","Fragments":["which"]},{"Key":"_.isLower)`, which","Fragments":["is"]},{"Key":"is slightly","Fragments":["more","less"]},{"Key":"slightly more","Fragments":["efficient.","obvious","readable."]},{"Key":" Strictly","Fragments":["speaking,"]},{"Key":"Strictly speaking,","Fragments":["Scala"]},{"Key":"speaking, Scala","Fragments":["collections"]},{"Key":"Scala collections","Fragments":["don't"]},{"Key":"collections don't","Fragments":["have"]},{"Key":"method as","Fragments":["the"]},{"Key":"as `some`","Fragments":["in"]},{"Key":"`some` in","Fragments":["Clojure,"]},{"Key":"in Clojure,","Fragments":["because","which"]},{"Key":"Clojure, because","Fragments":["Scala"]},{"Key":"because Scala","Fragments":["doesn't"]},{"Key":"Scala doesn't","Fragments":["allow","permit"]},{"Key":"doesn't allow","Fragments":["any"]},{"Key":"allow any","Fragments":["'truthy'"]},{"Key":"any 'truthy'","Fragments":["value"]},{"Key":"'truthy' value","Fragments":["other"]},{"Key":"value other","Fragments":["than"]},{"Key":"a `Boolean`","Fragments":["in"]},{"Key":"`Boolean` in","Fragments":["`if`"]},{"Key":"in `if`","Fragments":["clause,"]},{"Key":"`if` clause,","Fragments":["so"]},{"Key":"clause, so","Fragments":["that"]},{"Key":"that you","Fragments":["can't","can","can","broke","wanted","can","iterate","should","raised.","should","don't","give","could","don't","familiarize","are","can","replace","could","need","do"]},{"Key":"you can't","Fragments":["use"]},{"Key":"can't use","Fragments":["`.exists`"]},{"Key":"use `.exists`","Fragments":["as"]},{"Key":"`.exists` as","Fragments":["a"]},{"Key":"a substitution","Fragments":["of"]},{"Key":"substitution of","Fragments":["`(first"]},{"Key":"of `(first","Fragments":["(filter"]},{"Key":"`(first (filter","Fragments":["..)"]},{"Key":"(filter ..)","Fragments":["...)`"]},{"Key":"..) ...)`","Fragments":["in"]},{"Key":"...)` in","Fragments":["Clojure,"]},{"Key":"Clojure, which","Fragments":["is"]},{"Key":"possible with","Fragments":["`some`."]},{"Key":"with `some`.","Fragments":["For"]},{"Key":"`some`. For","Fragments":["this"]},{"Key":"For this","Fragments":["purpose,"]},{"Key":"this purpose,","Fragments":["there"]},{"Key":"purpose, there","Fragments":["is"]},{"Key":"is `.find`","Fragments":["which"]},{"Key":"`.find` which","Fragments":["returns"]},{"Key":"which returns","Fragments":["an"]},{"Key":"returns an","Fragments":["`Option[A]`."]},{"Key":" Underscore","Fragments":["is"]},{"Key":"Underscore is","Fragments":["used"]},{"Key":"is used","Fragments":["in","in","where","incombination"]},{"Key":"used in","Fragments":["many","a","the","the","the","the"]},{"Key":"in many","Fragments":["different"]},{"Key":"many different","Fragments":["situations"]},{"Key":"different situations","Fragments":["in"]},{"Key":"situations in","Fragments":["Scala,"]},{"Key":"and roughly,","Fragments":["all"]},{"Key":"roughly, all","Fragments":["of"]},{"Key":"of them","Fragments":["mean","are"]},{"Key":"them mean","Fragments":["'whatever'."]},{"Key":"mean 'whatever'.","Fragments":["Here's"]},{"Key":"'whatever'. Here's","Fragments":["a"]},{"Key":"Here's a","Fragments":["brief"]},{"Key":"a brief","Fragments":["explanation"]},{"Key":"brief explanation","Fragments":["[1]."]},{"Key":" [1]","Fragments":["http://www.slideshare.net/normation/scala-dreaded","http://danielwestheide.com/blog/2012/11/21/the-neophytes-guide-to-scala-part-1-extractors.html","[StringOps#groupBy](http://scala-lang.org/files/archive/api/2.11.1/index.html#scala.collection.immutable.StringOps@gianni[K](f:A=\u003eK):scala.collection.immutable.Map[K,Repr])"]},{"Key":"There's an","Fragments":["inefficient","awesome"]},{"Key":"an inefficient","Fragments":["one-liner"]},{"Key":"inefficient one-liner","Fragments":["of"]},{"Key":"one-liner of","Fragments":["`nucleotideCounts`:"]},{"Key":"of `nucleotideCounts`:","Fragments":["`baseCounts"]},{"Key":"`nucleotideCounts`: `baseCounts","Fragments":["++"]},{"Key":"`baseCounts ++","Fragments":["strand.groupBy(identity).mapValues(_.size)`"]},{"Key":"I'm attempting","Fragments":["to"]},{"Key":"attempting to","Fragments":["explore"]},{"Key":"to explore","Fragments":["Scala's","Scalas"]},{"Key":"explore Scala's","Fragments":["pattern"]},{"Key":"Scala's pattern","Fragments":["matching"]},{"Key":" There","Fragments":["are","however","is.","are","also","is"]},{"Key":"are certainly","Fragments":["some"]},{"Key":"certainly some","Fragments":["edge"]},{"Key":"some edge","Fragments":["cases"]},{"Key":"edge cases","Fragments":["that"]},{"Key":"cases that","Fragments":["this"]},{"Key":"code won't","Fragments":["handle,"]},{"Key":"won't handle,","Fragments":["but"]},{"Key":"handle, but","Fragments":["I'm"]},{"Key":"not focusing","Fragments":["my"]},{"Key":"focusing my","Fragments":["attention"]},{"Key":"my attention","Fragments":["on"]},{"Key":"attention on","Fragments":["regular"]},{"Key":"on regular","Fragments":["expression"]},{"Key":"regular expression","Fragments":["syntax/writing."]},{"Key":"good. Being","Fragments":["a"]},{"Key":"Being a","Fragments":["bit"]},{"Key":"bit picky,","Fragments":["the"]},{"Key":"picky, the","Fragments":["innermost"]},{"Key":"the innermost","Fragments":["parens"]},{"Key":"innermost parens","Fragments":["after"]},{"Key":"parens after","Fragments":["`.count`"]},{"Key":"after `.count`","Fragments":["looks"]},{"Key":"`.count` looks","Fragments":["redundant."]},{"Key":"Good thinking,","Fragments":["thanks!"]},{"Key":"The only","Fragments":["concern","thing"]},{"Key":"only concern","Fragments":["here"]},{"Key":"concern here","Fragments":["is"]},{"Key":"that regular","Fragments":["expressions"]},{"Key":"regular expressions","Fragments":["might","unless","if","in","is","is","can"]},{"Key":"expressions might","Fragments":["by"]},{"Key":"might by","Fragments":["way"]},{"Key":"by way","Fragments":["too"]},{"Key":"way too","Fragments":["complicated"]},{"Key":"too complicated","Fragments":["technique"]},{"Key":"complicated technique","Fragments":["for"]},{"Key":"technique for","Fragments":["this"]},{"Key":"of problem","Fragments":["as"]},{"Key":"problem as","Fragments":["they"]},{"Key":"they tend","Fragments":["to"]},{"Key":"be hard","Fragments":["to"]},{"Key":"hard to","Fragments":["read,","read/understand.","write","figure","read."]},{"Key":"read, follow","Fragments":["and"]},{"Key":"follow and","Fragments":["verify."]},{"Key":" I.e","Fragments":["```\"\"\"^\\s*$\"\"\"```"]},{"Key":"I.e ```\"\"\"^\\s*$\"\"\"```","Fragments":["is"]},{"Key":"```\"\"\"^\\s*$\"\"\"``` is","Fragments":["less"]},{"Key":"is less","Fragments":["explanatory"]},{"Key":"less explanatory","Fragments":["on"]},{"Key":"explanatory on","Fragments":["```silence()```"]},{"Key":"on ```silence()```","Fragments":["implementation"]},{"Key":"```silence()``` implementation","Fragments":["comparing"]},{"Key":"implementation comparing","Fragments":["to"]},{"Key":"comparing to","Fragments":["something"]},{"Key":"to something","Fragments":["like","more","like"]},{"Key":"good. To","Fragments":["make"]},{"Key":"To make","Fragments":["it","it"]},{"Key":"it even","Fragments":["more","more"]},{"Key":"even more","Fragments":["'Scala","concise","elegant"]},{"Key":"more 'Scala","Fragments":["style'"]},{"Key":"'Scala style'","Fragments":["you"]},{"Key":"style' you","Fragments":["can"]},{"Key":"can remove","Fragments":["all","the","the","the","the","it"]},{"Key":"remove all","Fragments":["the","the"]},{"Key":"functions and","Fragments":["the"]},{"Key":"the if/else","Fragments":["if/else","inside"]},{"Key":"if/else if/else","Fragments":["blocks."]},{"Key":"if/else blocks.","Fragments":["Each"]},{"Key":"blocks. Each","Fragments":["of"]},{"Key":"Each of","Fragments":["those"]},{"Key":"of those","Fragments":["is","four,"]},{"Key":"those is","Fragments":["only"]},{"Key":"is only","Fragments":["one","created","used","evaluated","used","done"]},{"Key":"only one","Fragments":["expression","instance.","pass"]},{"Key":"one expression","Fragments":["so"]},{"Key":"expression so","Fragments":["the","you"]},{"Key":"the braces","Fragments":["aren't","and"]},{"Key":"braces aren't","Fragments":["needed."]},{"Key":"aren't needed.","Fragments":["It"]},{"Key":"needed. It","Fragments":["doesn't"]},{"Key":"doesn't change","Fragments":["how"]},{"Key":"change how","Fragments":["the"]},{"Key":"how the","Fragments":["code","`match`","sorted"]},{"Key":"code works","Fragments":["but","properly","properly"]},{"Key":"works but","Fragments":["it"]},{"Key":"can make","Fragments":["it","it","`RuleMaker`","it"]},{"Key":"it easier","Fragments":["to","to","to"]},{"Key":" Learned","Fragments":["about"]},{"Key":"Learned about","Fragments":["the"]},{"Key":"the `getOrElse`","Fragments":["method.","method","calls."]},{"Key":"`getOrElse` method.","Fragments":["`grade(g:Int)`"]},{"Key":"method. `grade(g:Int)`","Fragments":["is"]},{"Key":"`grade(g:Int)` is","Fragments":["now"]},{"Key":"is now","Fragments":["slightly","you"]},{"Key":"now slightly","Fragments":["less"]},{"Key":"slightly less","Fragments":["verbose","verbose"]},{"Key":"less verbose","Fragments":["and","than"]},{"Key":"verbose and","Fragments":["imho"]},{"Key":"and imho","Fragments":["still"]},{"Key":"imho still","Fragments":["conveys"]},{"Key":"still conveys","Fragments":["that"]},{"Key":"conveys that","Fragments":["we"]},{"Key":"we want","Fragments":["an","white-space","to"]},{"Key":"empty list","Fragments":["if"]},{"Key":"list if","Fragments":["grade"]},{"Key":"if grade","Fragments":["is"]},{"Key":"grade is","Fragments":["not"]},{"Key":"not yet","Fragments":["in"]},{"Key":"yet in","Fragments":["the"]},{"Key":"1. Is","Fragments":["there"]},{"Key":"Is there","Fragments":["any","a","a","any","any","an","some","any","a","a"]},{"Key":"there any","Fragments":["reason","special","reason","reason"]},{"Key":"any reason","Fragments":["to","not","you're"]},{"Key":"make `s`","Fragments":["as"]},{"Key":"`s` as","Fragments":["a"]},{"Key":"a member","Fragments":["variable?"]},{"Key":"2. FYI,","Fragments":["`Predef`"]},{"Key":"FYI, `Predef`","Fragments":["has"]},{"Key":"`Predef` has","Fragments":["`identity`"]},{"Key":"has `identity`","Fragments":["function"]},{"Key":"`identity` function","Fragments":["which"]},{"Key":"function which","Fragments":["is"]},{"Key":"as `(x","Fragments":["=\u003e"]},{"Key":"`(x =\u003e","Fragments":["x)`."]},{"Key":"=\u003e x)`.","Fragments":["Although"]},{"Key":"x)`. Although","Fragments":["it's"]},{"Key":"Although it's","Fragments":["longer"]},{"Key":"it's longer","Fragments":["than"]},{"Key":"longer than","Fragments":["`x"]},{"Key":"than `x","Fragments":["=\u003e"]},{"Key":"`x =\u003e","Fragments":["x`"]},{"Key":"=\u003e x`","Fragments":["by"]},{"Key":"x` by","Fragments":["two"]},{"Key":"by two","Fragments":["chars,"]},{"Key":"two chars,","Fragments":["I"]},{"Key":"chars, I","Fragments":["found"]},{"Key":"it more","Fragments":["explicit","readable?","readable"]},{"Key":"more explicit","Fragments":["in","that"]},{"Key":"explicit in","Fragments":["some"]},{"Key":"in some","Fragments":["situations."]},{"Key":"avoid negations","Fragments":["in"]},{"Key":"negations in","Fragments":["the"]},{"Key":"first assertion","Fragments":["by"]},{"Key":"assertion by","Fragments":["replacing"]},{"Key":"by replacing","Fragments":["it"]},{"Key":"replacing it","Fragments":["with"]},{"Key":"with `gene","Fragments":["forall"]},{"Key":"`gene forall","Fragments":["(\"ATCG\""]},{"Key":"forall (\"ATCG\"","Fragments":["contains"]},{"Key":"(\"ATCG\" contains","Fragments":["_)`."]},{"Key":"1. Duplication","Fragments":["of"]},{"Key":"Duplication of","Fragments":["`ns.size`"]},{"Key":"of `ns.size`","Fragments":["can"]},{"Key":"`ns.size` can","Fragments":["be"]},{"Key":"be avoided","Fragments":["by"]},{"Key":"avoided by","Fragments":["pattern"]},{"Key":"by pattern","Fragments":["matching,"]},{"Key":"pattern matching,","Fragments":["which","something","as","definitely"]},{"Key":"matching, which","Fragments":["might"]},{"Key":"which might","Fragments":["look"]},{"Key":"might look","Fragments":["slightly","a","cleaner."]},{"Key":"look slightly","Fragments":["simpler."]},{"Key":"2. `String`","Fragments":["can"]},{"Key":"`String` can","Fragments":["be","be"]},{"Key":"be multiplied","Fragments":["like"]},{"Key":"multiplied like","Fragments":["`\"0\""]},{"Key":"like `\"0\"","Fragments":["*"]},{"Key":"`\"0\" *","Fragments":["10`."]},{"Key":"3. `def`","Fragments":["can"]},{"Key":"`def` can","Fragments":["be"]},{"Key":"be overridden","Fragments":["by"]},{"Key":"overridden by","Fragments":["`val`."]},{"Key":"by `val`.","Fragments":["It"]},{"Key":"`val`. It","Fragments":["might"]},{"Key":"It might","Fragments":["be","look","be","be"]},{"Key":"make `toString`","Fragments":["a"]},{"Key":"`toString` a","Fragments":["lazy"]},{"Key":"a lazy","Fragments":["val"]},{"Key":"lazy val","Fragments":["with"]},{"Key":"val with","Fragments":["a"]},{"Key":"block which","Fragments":["contains"]},{"Key":"which contains","Fragments":["`front`"]},{"Key":"contains `front`","Fragments":["and"]},{"Key":"`front` and","Fragments":["`back`"]},{"Key":"and `back`","Fragments":["instead"]},{"Key":"`back` instead","Fragments":["of"]},{"Key":"of making","Fragments":["them","the"]},{"Key":"making them","Fragments":["as"]},{"Key":"as private","Fragments":["members."]},{"Key":"Looks great","Fragments":[":D"]},{"Key":"great :D","Fragments":["The"]},{"Key":":D The","Fragments":["inner"]},{"Key":"The inner","Fragments":["curly"]},{"Key":"inner curly","Fragments":["braces"]},{"Key":"braces can","Fragments":["be"]},{"Key":"be removed","Fragments":["since"]},{"Key":"removed since","Fragments":["`hey`"]},{"Key":"since `hey`","Fragments":["consists"]},{"Key":"`hey` consists","Fragments":["of"]},{"Key":"figured I","Fragments":["would"]},{"Key":"would start","Fragments":["with"]},{"Key":"start with","Fragments":["an","changing"]},{"Key":"an already","Fragments":["initialized"]},{"Key":"already initialized","Fragments":["map"]},{"Key":"initialized map","Fragments":["of"]},{"Key":"map of","Fragments":["all","all"]},{"Key":"of all","Fragments":["valid","the"]},{"Key":"all valid","Fragments":["nucleotides."]},{"Key":"valid nucleotides.","Fragments":["That"]},{"Key":"nucleotides. That","Fragments":["way","handled"]},{"Key":"That way","Fragments":["I","no","you"]},{"Key":"way I","Fragments":["have"]},{"Key":"have an","Fragments":["easy","idea"]},{"Key":"an easy","Fragments":["way","way"]},{"Key":"easy way","Fragments":["to","to","to"]},{"Key":"to match","Fragments":["and","punctuation"]},{"Key":"match and","Fragments":["add","for","case,"]},{"Key":"add or","Fragments":["to"]},{"Key":"or to","Fragments":["throw","make"]},{"Key":"to throw","Fragments":["an"]},{"Key":"throw an","Fragments":["exception"]},{"Key":"an exception","Fragments":["if"]},{"Key":"exception if","Fragments":["not","not."]},{"Key":"if not","Fragments":["found."]},{"Key":" Would","Fragments":["have","I","word.sortLetters"]},{"Key":"Would have","Fragments":["wanted"]},{"Key":"have wanted","Fragments":["to"]},{"Key":"use the","Fragments":["same","return","_","pattern","`getOrElse`","`object","`Random`","positive","return","trimmed",".exists","::","`empty`","`Option`","following","`List.map()`","`scala.collection.breakout`","`.sorted`"]},{"Key":"same logic","Fragments":["in"]},{"Key":"logic in","Fragments":["the","there."]},{"Key":"`count` method","Fragments":["but"]},{"Key":"method but","Fragments":["for"]},{"Key":"but for","Fragments":["some"]},{"Key":"for some","Fragments":["reason","inspiration.","pathological"]},{"Key":"some reason","Fragments":["the","c.isLetter"]},{"Key":"reason the","Fragments":["Test"]},{"Key":"the Test","Fragments":["wanted"]},{"Key":"Test wanted","Fragments":["0"]},{"Key":"wanted 0","Fragments":["returned"]},{"Key":"0 returned","Fragments":["for"]},{"Key":"returned for","Fragments":["`'U'`."]},{"Key":"for `'U'`.","Fragments":["So"]},{"Key":"`'U'`. So","Fragments":["that"]},{"Key":"So that","Fragments":["got"]},{"Key":"that got","Fragments":["inserted"]},{"Key":"got inserted","Fragments":["as"]},{"Key":"inserted as","Fragments":["a"]},{"Key":"get that","Fragments":["it"]},{"Key":"a valid","Fragments":["nucleotide,","one","digit","digit."]},{"Key":"valid nucleotide,","Fragments":["but"]},{"Key":"nucleotide, but","Fragments":["imo","perhaps"]},{"Key":"but imo","Fragments":["it's"]},{"Key":"imo it's","Fragments":["an"]},{"Key":"it's an","Fragments":["invalid"]},{"Key":"an invalid","Fragments":["argument","key","input"]},{"Key":"invalid argument","Fragments":["in"]},{"Key":"argument in","Fragments":["the"]},{"Key":"a DNA","Fragments":["strand."]},{"Key":"No regex","Fragments":["version","needed"]},{"Key":"regex version","Fragments":[":)"]},{"Key":"sure if","Fragments":["I","either","pattern","it's","using","in","this","this"]},{"Key":"can destructure-bind","Fragments":["a"]},{"Key":"destructure-bind a","Fragments":["list"]},{"Key":"list to","Fragments":["define","DRY","just"]},{"Key":"define reset()","Fragments":["in"]},{"Key":"reset() in","Fragments":["one"]},{"Key":"in one","Fragments":["line.","object","line."]},{"Key":" Thanks!","Fragments":["I","It's","The"]},{"Key":"I didn't","Fragments":["know","propose","know:","know","understand","use","realize"]},{"Key":"count method.","Fragments":["That"]},{"Key":"method. That","Fragments":["simplifies"]},{"Key":"That simplifies","Fragments":["things"]},{"Key":"simplifies things","Fragments":["considerably."]},{"Key":" Yes,","Fragments":["you're","the"]},{"Key":"Yes, you're","Fragments":["right."]},{"Key":"you're right.","Fragments":["Totally"]},{"Key":"right. Totally","Fragments":["missed"]},{"Key":"Totally missed","Fragments":["that."]},{"Key":"there a","Fragments":["reason","better","reason","way","reason","name"]},{"Key":"a reason","Fragments":["you","to","to"]},{"Key":"reason you","Fragments":["use"]},{"Key":"use trippe","Fragments":["quotes"]},{"Key":"trippe quotes","Fragments":["in"]},{"Key":"quotes in","Fragments":["the"]},{"Key":"the regexp","Fragments":["```\"\"\".*[a-zA-Z]+.*\"\"\"```?","to"]},{"Key":" My","Fragments":["first","first","first","brain","first","previous","first"]},{"Key":"first implementation","Fragments":["of"]},{"Key":"a demo","Fragments":["of"]},{"Key":"demo of","Fragments":["exercism"]},{"Key":"exercism for","Fragments":["the"]},{"Key":"the students","Fragments":["I","were"]},{"Key":"students I","Fragments":["am"]},{"Key":"am mentoring.","Fragments":["Am"]},{"Key":"mentoring. Am","Fragments":["not"]},{"Key":"Am not","Fragments":["really"]},{"Key":"not really","Fragments":["looking","in","a","needed,","say","relevant.","clean.","need"]},{"Key":"really looking","Fragments":["for"]},{"Key":"for comments,","Fragments":["just"]},{"Key":"comments, just","Fragments":["exploring"]},{"Key":"just exploring","Fragments":["the"]},{"Key":"exploring the","Fragments":["system."]},{"Key":"have used","Fragments":["6","either","`match`"]},{"Key":"used 6","Fragments":["less"]},{"Key":"6 less","Fragments":["brackets"]},{"Key":" Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["would","don't"]},{"Key":"have written","Fragments":["`!(yr","the"]},{"Key":"written `!(yr","Fragments":["%"]},{"Key":"`!(yr %","Fragments":["100"]},{"Key":"% 100","Fragments":["==","!=","=="]},{"Key":"100 ==","Fragments":["0)`","0)"]},{"Key":"== 0)`","Fragments":["as"]},{"Key":"0)` as","Fragments":["`yr"]},{"Key":"as `yr","Fragments":["%"]},{"Key":"`yr %","Fragments":["100"]},{"Key":"100 !=","Fragments":["0`"]},{"Key":"I'll have","Fragments":["to","to","to"]},{"Key":"remember that","Fragments":["`distinct`","one,"]},{"Key":"that `distinct`","Fragments":["method."]},{"Key":"`distinct` method.","Fragments":["Thanks."]},{"Key":" Did","Fragments":["a","you"]},{"Key":"Did a","Fragments":["bit"]},{"Key":"bit of","Fragments":["research"]},{"Key":"of research","Fragments":["about"]},{"Key":"research about","Fragments":["the"]},{"Key":"the parts","Fragments":["of"]},{"Key":"a US","Fragments":["phonenumber"]},{"Key":"US phonenumber","Fragments":["so"]},{"Key":"phonenumber so","Fragments":["used"]},{"Key":"so used","Fragments":["those"]},{"Key":"used those","Fragments":["names"]},{"Key":"names instead","Fragments":["of"]},{"Key":" Wondered","Fragments":["if"]},{"Key":"Wondered if","Fragments":["Scala"]},{"Key":"if Scala","Fragments":["had"]},{"Key":"had a(nother)","Fragments":["way"]},{"Key":"a(nother) way","Fragments":["of"]},{"Key":"of getting","Fragments":["variable"]},{"Key":"getting variable","Fragments":["content"]},{"Key":"variable content","Fragments":["into"]},{"Key":"content into","Fragments":["a"]},{"Key":"a String","Fragments":["(previous"]},{"Key":"String (previous","Fragments":["solution"]},{"Key":"(previous solution","Fragments":["was"]},{"Key":"solution was","Fragments":["how","similar."]},{"Key":"was how","Fragments":["I"]},{"Key":"have done","Fragments":["it","some"]},{"Key":"done it","Fragments":["in"]},{"Key":"in Java)","Fragments":["aparently"]},{"Key":"Java) aparently","Fragments":["Scala"]},{"Key":"aparently Scala","Fragments":["has"]},{"Key":"has something","Fragments":["called"]},{"Key":"something called","Fragments":["[String"]},{"Key":"called [String","Fragments":["Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)"]},{"Key":"also saw","Fragments":["I"]},{"Key":"saw I","Fragments":["was"]},{"Key":"was removing","Fragments":["interpuntion"]},{"Key":"removing interpuntion","Fragments":["and"]},{"Key":"interpuntion and","Fragments":["a"]},{"Key":"and a","Fragments":["space","mutable","functional","default","single","response","valid"]},{"Key":"a space","Fragments":["instead"]},{"Key":"space instead","Fragments":["of"]},{"Key":"of everyting","Fragments":["not"]},{"Key":"everyting not","Fragments":["being"]},{"Key":"not being","Fragments":["a"]},{"Key":"being a","Fragments":["number."]},{"Key":"a number.","Fragments":["(guess"]},{"Key":"number. (guess","Fragments":["that's"]},{"Key":"(guess that's","Fragments":["due"]},{"Key":"that's due","Fragments":["to"]},{"Key":"to being","Fragments":["still"]},{"Key":"being still","Fragments":["in"]},{"Key":"still in","Fragments":["the"]},{"Key":"of one","Fragments":["of"]},{"Key":" Figured","Fragments":["it"]},{"Key":"Figured it","Fragments":["could"]},{"Key":"it could","Fragments":["be","live","be","be","be","be"]},{"Key":"be cleared","Fragments":["to"]},{"Key":"cleared to","Fragments":["write"]},{"Key":"write the","Fragments":["checks","`foldLeft`"]},{"Key":"checks in","Fragments":["a"]},{"Key":"a match/case","Fragments":["construction"]},{"Key":"match/case construction","Fragments":["instead"]},{"Key":"construction instead","Fragments":["of"]},{"Key":"Using `unapply`","Fragments":["is"]},{"Key":"`unapply` is","Fragments":["certainly"]},{"Key":"is certainly","Fragments":["a"]},{"Key":"certainly a","Fragments":["creative"]},{"Key":"a creative","Fragments":["way"]},{"Key":"creative way","Fragments":["to"]},{"Key":"to solve","Fragments":["this.","this","this.","in","the","this.","this"]},{"Key":"solve this.","Fragments":[":-)"]},{"Key":"would like","Fragments":["to","to"]},{"Key":"know why","Fragments":["you"]},{"Key":"why you","Fragments":["initialize","chose","chose","chose","used"]},{"Key":"you initialize","Fragments":["like"]},{"Key":"initialize like","Fragments":["this:"]},{"Key":"this: `Map.empty[Int,","Fragments":["Seq[String]]`"]},{"Key":"`Map.empty[Int, Seq[String]]`","Fragments":["and"]},{"Key":"Seq[String]]` and","Fragments":["`Seq.empty["]},{"Key":"and `Seq.empty[","Fragments":["..."]},{"Key":"`Seq.empty[ ...","Fragments":["]`"]},{"Key":"... ]`","Fragments":["instead"]},{"Key":"]` instead","Fragments":["of"]},{"Key":"of `Map[Int,","Fragments":["Seq[String]]()`."]},{"Key":"`Map[Int, Seq[String]]()`.","Fragments":["Didn't"]},{"Key":"Seq[String]]()`. Didn't","Fragments":["know"]},{"Key":"Didn't know","Fragments":["you","that,"]},{"Key":"know you","Fragments":["could"]},{"Key":"could do","Fragments":["that,","compressed.count(_!=_)","better","something","everything"]},{"Key":"do that,","Fragments":["what's","you'd"]},{"Key":"that, what's","Fragments":["the"]},{"Key":"what's the","Fragments":["advantage?"]},{"Key":"I see","Fragments":["you","it","I","you"]},{"Key":"see you","Fragments":["come","used"]},{"Key":"you come","Fragments":["from"]},{"Key":"come from","Fragments":["a"]},{"Key":"from a","Fragments":["longer","renaming.","presentation"]},{"Key":"a longer","Fragments":["way"]},{"Key":"longer way","Fragments":["of"]},{"Key":"of refactorings.","Fragments":["I"]},{"Key":"refactorings. I","Fragments":["think"]},{"Key":"think what","Fragments":["the"]},{"Key":"original commenter","Fragments":["actually"]},{"Key":"commenter actually","Fragments":["ment"]},{"Key":"actually ment","Fragments":["is"]},{"Key":"ment is","Fragments":["that"]},{"Key":"can just","Fragments":["put:","leave","do:"]},{"Key":" `def","Fragments":["isLeap"]},{"Key":"`def isLeap","Fragments":[":"]},{"Key":"isLeap :","Fragments":["Boolean"]},{"Key":": Boolean","Fragments":["="]},{"Key":"Boolean =","Fragments":["yr","by(100)"]},{"Key":"= yr","Fragments":["%"]},{"Key":"yr %","Fragments":["4","400"]},{"Key":"% 4","Fragments":["=="]},{"Key":"4 ==","Fragments":["0"]},{"Key":"== 0","Fragments":["\u0026\u0026"]},{"Key":"0 \u0026\u0026","Fragments":["(!(yr"]},{"Key":"\u0026\u0026 (!(yr","Fragments":["%"]},{"Key":"(!(yr %","Fragments":["100"]},{"Key":"== 0)","Fragments":["||"]},{"Key":"0) ||","Fragments":["yr"]},{"Key":"|| yr","Fragments":["%"]},{"Key":"% 400","Fragments":["=="]},{"Key":"400 ==","Fragments":["0)`"]},{"Key":"need an","Fragments":["if"]},{"Key":"statement with","Fragments":["explicit","another"]},{"Key":"with explicit","Fragments":["`true`"]},{"Key":"explicit `true`","Fragments":["and"]},{"Key":"`true` and","Fragments":["`false`"]},{"Key":"and `false`","Fragments":["you"]},{"Key":"`false` you","Fragments":["also"]},{"Key":"you also","Fragments":["don't"]},{"Key":"also don't","Fragments":["need"]},{"Key":"a temporary","Fragments":["variable.","list"]},{"Key":"temporary variable.","Fragments":["The"]},{"Key":"variable. The","Fragments":["statement"]},{"Key":"The statement","Fragments":["itself"]},{"Key":"statement itself","Fragments":["is"]},{"Key":"itself is","Fragments":["of"]},{"Key":"is of","Fragments":["type"]},{"Key":"Ok, I","Fragments":["zipped"]},{"Key":"I zipped","Fragments":["both"]},{"Key":"zipped both","Fragments":["Strings"]},{"Key":"both Strings","Fragments":["to"]},{"Key":"Strings to","Fragments":["a"]},{"Key":"a Seq","Fragments":["of","of"]},{"Key":"Seq of","Fragments":["pairs","differences"]},{"Key":"of pairs","Fragments":["of","(tuples)."]},{"Key":"of Chars.","Fragments":["Overlapping"]},{"Key":"Chars. Overlapping","Fragments":["elements"]},{"Key":"Overlapping elements","Fragments":["are"]},{"Key":"elements are","Fragments":["ignored"]},{"Key":"are ignored","Fragments":["by"]},{"Key":"ignored by","Fragments":["the"]},{"Key":"zip function.","Fragments":["Then"]},{"Key":"function. Then","Fragments":["I"]},{"Key":"Then I","Fragments":["map","notice"]},{"Key":"I map","Fragments":["the"]},{"Key":"map the","Fragments":["Seq"]},{"Key":"the Seq","Fragments":["to"]},{"Key":"Seq to","Fragments":["a"]},{"Key":"of differences","Fragments":["and"]},{"Key":"differences and","Fragments":["sum"]},{"Key":"and sum","Fragments":["it"]},{"Key":"sum it","Fragments":["up."]},{"Key":"a mutable","Fragments":["var","Map","phrase.","`var`","map?","`Map`","cache","value"]},{"Key":"mutable var","Fragments":["is"]},{"Key":"var is","Fragments":["not"]},{"Key":"The \"return\"","Fragments":["keyword"]},{"Key":"\"return\" keyword","Fragments":["is"]},{"Key":"keyword is","Fragments":["not","used"]},{"Key":"not needed","Fragments":["(and"]},{"Key":"needed (and","Fragments":["actually"]},{"Key":"(and actually","Fragments":["not"]},{"Key":"actually not","Fragments":["recommended)"]},{"Key":" number.take(3)","Fragments":["seems"]},{"Key":"number.take(3) seems","Fragments":["more"]},{"Key":"seems more","Fragments":["logical"]},{"Key":"more logical","Fragments":["than","to"]},{"Key":"logical than","Fragments":["number.dropRight(7)"]},{"Key":"In scala","Fragments":["it","Strings","the"]},{"Key":"scala it","Fragments":["is"]},{"Key":"not recommended","Fragments":["to"]},{"Key":"recommended to","Fragments":["use"]},{"Key":"sure there","Fragments":["is"]},{"Key":"is any","Fragments":["advantage",":)"]},{"Key":"any advantage","Fragments":["-"]},{"Key":"advantage -","Fragments":["maybe"]},{"Key":"maybe it's","Fragments":["slightly"]},{"Key":"it's slightly","Fragments":["more"]},{"Key":"obvious what","Fragments":["it"]},{"Key":"is given","Fragments":["the","a"]},{"Key":"the profusion","Fragments":["of"]},{"Key":"profusion of","Fragments":["brackets"]},{"Key":"of brackets","Fragments":["otherwise?"]},{"Key":"brackets otherwise?","Fragments":["I"]},{"Key":"otherwise? I","Fragments":["think"]},{"Key":"think I","Fragments":["must","would","remembered"]},{"Key":"I must","Fragments":["have","have"]},{"Key":"must have","Fragments":["just","accidentally"]},{"Key":"have just","Fragments":["seen"]},{"Key":"just seen","Fragments":["it"]},{"Key":"seen it","Fragments":["used"]},{"Key":"it used","Fragments":["in"]},{"Key":"a codebase","Fragments":["or"]},{"Key":"codebase or","Fragments":["example"]},{"Key":"or example","Fragments":["somewhere"]},{"Key":"example somewhere","Fragments":["and"]},{"Key":"somewhere and","Fragments":["picked"]},{"Key":"and picked","Fragments":["it"]},{"Key":"picked it","Fragments":["up"]},{"Key":"it up","Fragments":["from","a","to"]},{"Key":"up from","Fragments":["there."]},{"Key":"from there.","Fragments":["Not"]},{"Key":"there. Not","Fragments":["sure"]},{"Key":"if either","Fragments":["way"]},{"Key":"either way","Fragments":["is"]},{"Key":"way is","Fragments":["better","this","more"]},{"Key":"is better","Fragments":["TBH.","than",":)","expressed"]},{"Key":"Not the","Fragments":["most"]},{"Key":"the most","Fragments":["effective","popular","experience"]},{"Key":"most effective","Fragments":["solution,"]},{"Key":"effective solution,","Fragments":["but"]},{"Key":"solution, but","Fragments":["I"]},{"Key":"I appreciate","Fragments":["reading","it."]},{"Key":"appreciate reading","Fragments":["a"]},{"Key":"reading a","Fragments":["different"]},{"Key":"different approach","Fragments":[":-)"]},{"Key":"The naming","Fragments":["is"]},{"Key":"naming is","Fragments":["kind"]},{"Key":"is kind","Fragments":["of","of"]},{"Key":"The hey-method","Fragments":["is"]},{"Key":"hey-method is","Fragments":["perfection."]},{"Key":"The regex'","Fragments":["doesn't"]},{"Key":"regex' doesn't","Fragments":["score"]},{"Key":"doesn't score","Fragments":["as"]},{"Key":"score as","Fragments":["well"]},{"Key":"well on","Fragments":["readability"]},{"Key":"on readability","Fragments":[":-)"]},{"Key":"As far","Fragments":["as"]},{"Key":"far as","Fragments":["I"]},{"Key":"see str1","Fragments":["is"]},{"Key":"str1 is","Fragments":["assigned"]},{"Key":"is assigned","Fragments":["to"]},{"Key":"assigned to","Fragments":["twice."]},{"Key":"to twice.","Fragments":["The"]},{"Key":"twice. The","Fragments":["first"]},{"Key":"first assignment","Fragments":["is"]},{"Key":"assignment is","Fragments":["always"]},{"Key":"is always","Fragments":["overwritten."]},{"Key":"not use","Fragments":["a"]},{"Key":"a val","Fragments":["instead?"]},{"Key":" Neither","Fragments":["\"str1\""]},{"Key":"Neither \"str1\"","Fragments":["or"]},{"Key":"\"str1\" or","Fragments":["\"a\""]},{"Key":"or \"a\"","Fragments":["are"]},{"Key":"\"a\" are","Fragments":["descriptive"]},{"Key":"are descriptive","Fragments":["names..."]},{"Key":" CamelCase","Fragments":["is"]},{"Key":"CamelCase is","Fragments":["considered"]},{"Key":"is considered","Fragments":["idiomatic"]},{"Key":"considered idiomatic","Fragments":["correct"]},{"Key":"idiomatic correct","Fragments":["scala."]},{"Key":" (Even","Fragments":["though"]},{"Key":"(Even though","Fragments":["I"]},{"Key":"though I","Fragments":["think"]},{"Key":"think underscore_case","Fragments":["reads"]},{"Key":"underscore_case reads","Fragments":["better)"]},{"Key":"I really","Fragments":["like","like","appreciate","like"]},{"Key":"the hey-method.","Fragments":["Couldn't"]},{"Key":"hey-method. Couldn't","Fragments":["be"]},{"Key":"Couldn't be","Fragments":["more"]},{"Key":"The case","Fragments":["objects"]},{"Key":"case objects","Fragments":["would","which"]},{"Key":"objects would","Fragments":["be"]},{"Key":"readable with","Fragments":["a"]},{"Key":"more compact","Fragments":["formatting."]},{"Key":" Both","Fragments":["pimped"]},{"Key":"Both pimped","Fragments":["String/Char"]},{"Key":"pimped String/Char","Fragments":["and"]},{"Key":"String/Char and","Fragments":["unapply"]},{"Key":"and unapply","Fragments":["seems"]},{"Key":"unapply seems","Fragments":["like"]},{"Key":"seems like","Fragments":["a","the","quite"]},{"Key":"like a","Fragments":["bit","Map,","lot","collection","good"]},{"Key":"bit \"over","Fragments":["the"]},{"Key":"\"over the","Fragments":["top\"."]},{"Key":" Really","Fragments":["like","clean!","nice","nice"]},{"Key":"Really like","Fragments":["your"]},{"Key":"like your","Fragments":["solution!","approach.","solution,","hey()","approach!","solution","match","solution.","name"]},{"Key":"split on","Fragments":["a"]},{"Key":"regex myself,","Fragments":["but"]},{"Key":"myself, but","Fragments":["didn't"]},{"Key":"but didn't","Fragments":["find"]},{"Key":"didn't find","Fragments":["it."]},{"Key":"have extracted","Fragments":["the"]},{"Key":"extracted the","Fragments":["regexp"]},{"Key":"regexp to","Fragments":["a"]},{"Key":"constant with","Fragments":["a"]},{"Key":" name","Fragments":["for"]},{"Key":"for increased","Fragments":["readability."]},{"Key":"think \"==\"","Fragments":["reads"]},{"Key":"\"==\" reads","Fragments":["better"]},{"Key":"reads better","Fragments":["than","IMHO."]},{"Key":"better than","Fragments":["\"equals\"","your"]},{"Key":"than \"equals\"","Fragments":["?"]},{"Key":" Changed","Fragments":["the","the",":)"]},{"Key":"Changed the","Fragments":["arguments","variable"]},{"Key":"arguments to","Fragments":["CamelCase."]},{"Key":"to CamelCase.","Fragments":["Thanks"]},{"Key":"CamelCase. Thanks","Fragments":["for"]},{"Key":"Thanks! It's","Fragments":["not"]},{"Key":"not every","Fragments":["day"]},{"Key":"every day","Fragments":["I","they"]},{"Key":"day I","Fragments":["get"]},{"Key":"a nit","Fragments":["in"]},{"Key":"nit in","Fragments":["scala!"]},{"Key":"in scala!","Fragments":["I"]},{"Key":"scala! I","Fragments":["appreciate"]},{"Key":"great! Tough","Fragments":["your"]},{"Key":"Tough your","Fragments":["variables"]},{"Key":"your variables","Fragments":["could"]},{"Key":"variables could","Fragments":["be"]},{"Key":" btw","Fragments":["you're"]},{"Key":"btw you're","Fragments":["adding"]},{"Key":"you're adding","Fragments":["to"]},{"Key":"adding to","Fragments":["your"]},{"Key":"new map","Fragments":["concatenating"]},{"Key":"map concatenating","Fragments":["a"]},{"Key":"concatenating a","Fragments":["map"]},{"Key":"map with","Fragments":["one","`breakOut`.","``groupBy``","the"]},{"Key":"with one","Fragments":["entry.","line"]},{"Key":"one entry.","Fragments":["You"]},{"Key":"entry. You","Fragments":["could"]},{"Key":"could as","Fragments":["easily"]},{"Key":"as easily","Fragments":["just"]},{"Key":"easily just","Fragments":["added"]},{"Key":"just added","Fragments":["the"]},{"Key":"added the","Fragments":["entry"]},{"Key":"the entry","Fragments":["to"]},{"Key":"entry to","Fragments":["the"]},{"Key":"the map","Fragments":["`m+=","to","operation","with"]},{"Key":"map `m+=","Fragments":["b.toLowerCase"]},{"Key":"`m+= b.toLowerCase","Fragments":["-\u003e"]},{"Key":"b.toLowerCase -\u003e","Fragments":["a._1`"]},{"Key":" afaik","Fragments":["the"]},{"Key":"afaik the","Fragments":["result"]},{"Key":"your for","Fragments":["comprehension","loop"]},{"Key":"for comprehension","Fragments":["is"]},{"Key":"comprehension is","Fragments":["already"]},{"Key":"already a","Fragments":["map"]},{"Key":" @angeline","Fragments":["I"]},{"Key":"@angeline I","Fragments":["removed"]},{"Key":"I removed","Fragments":["the"]},{"Key":"removed the","Fragments":["`toMap`","parenthesis"]},{"Key":"the `toMap`","Fragments":["and"]},{"Key":"`toMap` and","Fragments":["ran"]},{"Key":"and ran","Fragments":["the"]},{"Key":"ran the","Fragments":["tests.","tests."]},{"Key":"tests. They","Fragments":["failed."]},{"Key":"They failed.","Fragments":["It"]},{"Key":"failed. It","Fragments":["turns"]},{"Key":"It turns","Fragments":["out"]},{"Key":"turns out","Fragments":["that"]},{"Key":"result is","Fragments":["a"]},{"Key":"a Set","Fragments":["of"]},{"Key":"Set of","Fragments":["tuples."]},{"Key":"of tuples.","Fragments":["So..."]},{"Key":"tuples. So...","Fragments":["it"]},{"Key":"So... it","Fragments":["looks"]},{"Key":"looks like","Fragments":["a","Feature#envy","dog"]},{"Key":"a Map,","Fragments":["but"]},{"Key":"Map, but","Fragments":["isn't","you"]},{"Key":"but isn't","Fragments":["a"]},{"Key":"a Map.","Fragments":[":D"]},{"Key":" Decided","Fragments":["against"]},{"Key":"Decided against","Fragments":["a"]},{"Key":"against a","Fragments":["`match`","constant"]},{"Key":"`match` structure","Fragments":["since"]},{"Key":"structure since","Fragments":["Scala"]},{"Key":"since Scala","Fragments":["doesn't"]},{"Key":"doesn't permit","Fragments":["function"]},{"Key":"permit function","Fragments":["calls"]},{"Key":"function calls","Fragments":["to","would"]},{"Key":"calls to","Fragments":["be"]},{"Key":"the `case`","Fragments":["statement."]},{"Key":" Used","Fragments":["the"]},{"Key":"Used the","Fragments":["more"]},{"Key":"the more","Fragments":["succinct"]},{"Key":"more succinct","Fragments":["`mssg.exists(_.isUpper)`"]},{"Key":"succinct `mssg.exists(_.isUpper)`","Fragments":["to"]},{"Key":"`mssg.exists(_.isUpper)` to","Fragments":["check"]},{"Key":"for letters","Fragments":["rather"]},{"Key":"letters rather","Fragments":["than"]},{"Key":"a regex.","Fragments":["Took","It's"]},{"Key":"regex. Took","Fragments":["advantage"]},{"Key":"Took advantage","Fragments":["of"]},{"Key":"advantage of","Fragments":["lexical","the"]},{"Key":"of lexical","Fragments":["scoping"]},{"Key":"lexical scoping","Fragments":["and"]},{"Key":"scoping and","Fragments":["implicit"]},{"Key":"and implicit","Fragments":["return","returns,"]},{"Key":"implicit return","Fragments":["to"]},{"Key":"return to","Fragments":["trim"]},{"Key":"code somewhat","Fragments":["from"]},{"Key":"somewhat from","Fragments":["the"]},{"Key":"The big","Fragments":["thing"]},{"Key":"big thing","Fragments":["that"]},{"Key":"that stands","Fragments":["out"]},{"Key":"stands out","Fragments":["is"]},{"Key":"out is","Fragments":["that"]},{"Key":"remove the","Fragments":["returns.","```getOrElse```.","pending","regular","return","commented","```_\u003c_```","println().","println().","`pending`","`pending`","nested"]},{"Key":"the returns.","Fragments":["I"]},{"Key":"returns. I","Fragments":["like"]},{"Key":"you broke","Fragments":["the","out","the"]},{"Key":"broke the","Fragments":["silence,","code"]},{"Key":"the silence,","Fragments":["question"]},{"Key":"silence, question","Fragments":["and"]},{"Key":"question and","Fragments":["shouting"]},{"Key":"and shouting","Fragments":["out"]},{"Key":"shouting out","Fragments":["into"]},{"Key":"own functions.","Fragments":["You"]},{"Key":"functions. You","Fragments":["might"]},{"Key":"consider changing","Fragments":["the","the"]},{"Key":"changing the","Fragments":["if","`dna_nucleotides`","signature"]},{"Key":"the if","Fragments":["statements","else","statement","statement","statements","statement"]},{"Key":"if statements","Fragments":["at","in"]},{"Key":"statements at","Fragments":["the"]},{"Key":"the bottom","Fragments":["into"]},{"Key":"bottom into","Fragments":["pattern"]},{"Key":"into pattern","Fragments":["matching."]},{"Key":"Also take","Fragments":["a"]},{"Key":"the comments","Fragments":["on"]},{"Key":"comments on","Fragments":["this"]},{"Key":"this submission:","Fragments":["http://exercism.io/submissions/d7c2808265ed6ee21ff5bb28"]},{"Key":"the tips.","Fragments":["I"]},{"Key":"tips. I","Fragments":["couldn't"]},{"Key":"couldn't get","Fragments":["pattern-matching"]},{"Key":"get pattern-matching","Fragments":["to"]},{"Key":"pattern-matching to","Fragments":["work"]},{"Key":"work the","Fragments":["first"]},{"Key":"first time","Fragments":["around,","I"]},{"Key":"time around,","Fragments":["but"]},{"Key":"around, but","Fragments":["that"]},{"Key":"that may","Fragments":["have","be","be"]},{"Key":"may have","Fragments":["had","been"]},{"Key":"have had","Fragments":["something","it"]},{"Key":"had something","Fragments":["to"]},{"Key":"something to","Fragments":["do","think","be"]},{"Key":"with me","Fragments":["not"]},{"Key":"me not","Fragments":["realizing"]},{"Key":"not realizing","Fragments":["Scala"]},{"Key":"realizing Scala","Fragments":["provides"]},{"Key":"Scala provides","Fragments":["implicit","a","the"]},{"Key":"provides implicit","Fragments":["return."]},{"Key":"implicit return.","Fragments":["I'll"]},{"Key":"return. I'll","Fragments":["give"]},{"Key":"I'll give","Fragments":["it"]},{"Key":"it another","Fragments":["try."]},{"Key":" @hattie","Fragments":["Ah,"]},{"Key":"@hattie Ah,","Fragments":["you're"]},{"Key":"Ah, you're","Fragments":["right."]},{"Key":"you `yield","Fragments":["(vc"]},{"Key":"`yield (vc","Fragments":["-\u003e"]},{"Key":"(vc -\u003e","Fragments":["k)`"]},{"Key":"-\u003e k)`","Fragments":["?"]},{"Key":" enter","Fragments":["Java"]},{"Key":"enter Java","Fragments":["8"]},{"Key":"Java 8","Fragments":["with"]},{"Key":"8 with","Fragments":["JSR"]},{"Key":"with JSR","Fragments":["310"]},{"Key":"JSR 310","Fragments":["(Joda"]},{"Key":"310 (Joda","Fragments":["time)"]},{"Key":"Scala code,","Fragments":["so"]},{"Key":"code, so","Fragments":["it"]},{"Key":"is probably","Fragments":["terrible.","faster.","overkill,","a","way","a"]},{"Key":"probably terrible.","Fragments":[":)"]},{"Key":"terrible. :)","Fragments":["Nitpick"]},{"Key":":) Nitpick","Fragments":["away!"]},{"Key":" @jena","Fragments":["can"]},{"Key":"@jena can","Fragments":["you"]},{"Key":"can you","Fragments":["please","think","make","think","explain"]},{"Key":"you please","Fragments":["elaborate?"]},{"Key":"In most","Fragments":["cases"]},{"Key":"most cases","Fragments":["I"]},{"Key":"cases I","Fragments":["try","created"]},{"Key":"have self","Fragments":["documenting"]},{"Key":"documenting variable","Fragments":["names,"]},{"Key":"variable names,","Fragments":["in"]},{"Key":"names, in","Fragments":["what"]},{"Key":"in what","Fragments":["way"]},{"Key":"what way","Fragments":["is"]},{"Key":"is this","Fragments":["misleading?"]},{"Key":"this misleading?","Fragments":["I"]},{"Key":"misleading? I","Fragments":["don't"]},{"Key":"don't see","Fragments":["it,"]},{"Key":"see it,","Fragments":["can"]},{"Key":"it, can","Fragments":["use"]},{"Key":"use another's","Fragments":["point"]},{"Key":"another's point","Fragments":["of"]},{"Key":"point of","Fragments":["view."]},{"Key":" Creative","Fragments":["solution,"]},{"Key":"Creative solution,","Fragments":["defining"]},{"Key":"solution, defining","Fragments":["a"]},{"Key":"name calculation","Fragments":["based"]},{"Key":"calculation based","Fragments":["on"]},{"Key":"on one","Fragments":["random"]},{"Key":"one random","Fragments":["number."]},{"Key":"code very","Fragments":["difficult","readable,"]},{"Key":"very difficult","Fragments":["to"]},{"Key":"* partly","Fragments":["because","bacause"]},{"Key":"because when","Fragments":["reading"]},{"Key":"when reading","Fragments":["the"]},{"Key":"reading the","Fragments":["code"]},{"Key":"go up","Fragments":["and"]},{"Key":" e.g.","Fragments":["from"]},{"Key":"e.g. from","Fragments":["line"]},{"Key":"from line","Fragments":["4"]},{"Key":"4 to","Fragments":["line"]},{"Key":"to line","Fragments":["19,","6"]},{"Key":"line 19,","Fragments":["back"]},{"Key":"19, back","Fragments":["to"]},{"Key":"back to","Fragments":["line"]},{"Key":"partly bacause","Fragments":["the"]},{"Key":"bacause the","Fragments":["names"]},{"Key":"are not","Fragments":["selfdocumenting","words.","shouting","part","using","really","mutating","required"]},{"Key":" Changes","Fragments":["to"]},{"Key":"Changes to","Fragments":["the"]},{"Key":"- Use","Fragments":["string","list"]},{"Key":"Use string","Fragments":["interpolation"]},{"Key":"string interpolation","Fragments":["instead"]},{"Key":"interpolation instead","Fragments":["of"]},{"Key":"of string","Fragments":["concatenation"]},{"Key":"Use list","Fragments":["of"]},{"Key":"characters instead","Fragments":["of","of"]},{"Key":"of typing","Fragments":["the"]},{"Key":"typing the","Fragments":["alphabet"]},{"Key":"- Format","Fragments":["numbers"]},{"Key":"Format numbers","Fragments":["if"]},{"Key":"numbers if","Fragments":["\u003c"]},{"Key":"if \u003c","Fragments":["100"]},{"Key":"\u003c 100","Fragments":["it"]},{"Key":"100 it","Fragments":["gets"]},{"Key":"it gets","Fragments":["prefix"]},{"Key":"gets prefix","Fragments":["zeros"]},{"Key":"prefix zeros","Fragments":["instead"]},{"Key":"zeros instead","Fragments":["of"]},{"Key":"of not","Fragments":["complying","having","calling"]},{"Key":"not complying","Fragments":["to"]},{"Key":"complying to","Fragments":["the"]},{"Key":" @jace","Fragments":["I'm"]},{"Key":"@jace I'm","Fragments":["thinking"]},{"Key":"I'm thinking","Fragments":["of"]},{"Key":"thinking of","Fragments":["the","my"]},{"Key":"the anagrams","Fragments":["that"]},{"Key":"anagrams that","Fragments":["is"]},{"Key":"of _potential_","Fragments":["anagrams"]},{"Key":"_potential_ anagrams","Fragments":["and"]},{"Key":"anagrams and","Fragments":["anagram"]},{"Key":"and anagram","Fragments":["that"]},{"Key":"anagram that","Fragments":["is"]},{"Key":"a _potential_","Fragments":["anagram."]},{"Key":" Kept","Fragments":["it"]},{"Key":"Kept it","Fragments":["pretty"]},{"Key":"it pretty","Fragments":["functional.","simple,"]},{"Key":"pretty functional.","Fragments":["I"]},{"Key":"functional. I","Fragments":["don't"]},{"Key":"know whether","Fragments":["to","a"]},{"Key":"whether to","Fragments":["put"]},{"Key":"the helper","Fragments":["functions","methods,","methods"]},{"Key":"helper functions","Fragments":["into","to"]},{"Key":"functions into","Fragments":["a"]},{"Key":"separate object.","Fragments":["What"]},{"Key":"object. What","Fragments":["do"]},{"Key":"the feedback,","Fragments":["@clifton."]},{"Key":"feedback, @clifton.","Fragments":["I"]},{"Key":"@clifton. I","Fragments":["had"]},{"Key":"had everything","Fragments":["in"]},{"Key":"one object","Fragments":["before,"]},{"Key":"object before,","Fragments":["but"]},{"Key":"before, but","Fragments":["I","not"]},{"Key":"I saw","Fragments":["that"]},{"Key":"saw that","Fragments":["the"]},{"Key":"the example","Fragments":["broke","exercise"]},{"Key":"example broke","Fragments":["up"]},{"Key":"broke up","Fragments":["the"]},{"Key":"up the","Fragments":["logic","`add(...)`","two","``hey``"]},{"Key":"logic into","Fragments":["a","the"]},{"Key":"and object.","Fragments":["Is"]},{"Key":"object. Is","Fragments":["that"]},{"Key":"Is that","Fragments":["a"]},{"Key":"a common","Fragments":["pattern?"]},{"Key":"Using `List.count`","Fragments":["on"]},{"Key":"`List.count` on","Fragments":["a"]},{"Key":"a zipped","Fragments":["rather"]},{"Key":"zipped rather","Fragments":["than"]},{"Key":"than `List.forEach`","Fragments":["is"]},{"Key":"`List.forEach` is","Fragments":["the"]},{"Key":"the best","Fragments":["approach,","way","pattern"]},{"Key":"best approach,","Fragments":["but"]},{"Key":"approach, but","Fragments":["I"]},{"Key":"I prefer","Fragments":["the","to","the","a","to"]},{"Key":"prefer the","Fragments":["single","return-early-return-often"]},{"Key":"the single","Fragments":["method"]},{"Key":"single method","Fragments":["implementation"]},{"Key":"method implementation","Fragments":["of"]},{"Key":"your original","Fragments":["solution.","parameter"]},{"Key":"original solution.","Fragments":["There's"]},{"Key":"solution. There's","Fragments":["no"]},{"Key":"no reason","Fragments":["to"]},{"Key":"extra class","Fragments":["just"]},{"Key":"class just","Fragments":["to"]},{"Key":"to hold","Fragments":["a","the","the"]},{"Key":"hold a","Fragments":["couple"]},{"Key":" Discovered","Fragments":["case","```Map().withDefaultValue(0)```"]},{"Key":"Discovered case","Fragments":["objects"]},{"Key":"objects which","Fragments":["made"]},{"Key":"which made","Fragments":["things"]},{"Key":"made things","Fragments":["a"]},{"Key":"things a","Fragments":["lot","bit","little"]},{"Key":"lot better.","Fragments":["Still","I"]},{"Key":"better. Still","Fragments":["working"]},{"Key":"Still working","Fragments":["on"]},{"Key":"working on","Fragments":["a"]},{"Key":"make isShouting","Fragments":["more"]},{"Key":"isShouting more","Fragments":["clear."]},{"Key":" Got","Fragments":["pretty"]},{"Key":"Got pretty","Fragments":["much"]},{"Key":"much the","Fragments":["same"]},{"Key":"same solution,","Fragments":["except","however"]},{"Key":"solution, except","Fragments":["I"]},{"Key":"except I","Fragments":["used"]},{"Key":"I used","Fragments":["get(word)","foldLeft","`if-else`on","s.endsWith(\"?\")","sorted","sorted","the","it"]},{"Key":"used get(word)","Fragments":["and"]},{"Key":"get(word) and","Fragments":["PatternMatching"]},{"Key":"and PatternMatching","Fragments":["in"]},{"Key":"PatternMatching in","Fragments":["the"]},{"Key":"the add","Fragments":["function."]},{"Key":"Rather then","Fragments":["use"]},{"Key":"then use","Fragments":["the","the","`==`"]},{"Key":"the _","Fragments":["for"]},{"Key":"_ for","Fragments":["all"]},{"Key":"for all","Fragments":["cases","the","responses.","upercase","the","the"]},{"Key":"all cases","Fragments":["you"]},{"Key":"case silent","Fragments":["if"]},{"Key":"silent if","Fragments":["statement.trim"]},{"Key":"if statement.trim","Fragments":["=="]},{"Key":"statement.trim ==","Fragments":["\"\""]},{"Key":"== \"\"","Fragments":["=\u003e"]},{"Key":"\"\" =\u003e","Fragments":["\"Fine."]},{"Key":"=\u003e \"Fine.","Fragments":["Be","Be"]},{"Key":"This will","Fragments":["allow"]},{"Key":"will allow","Fragments":["you"]},{"Key":"allow you","Fragments":["to","to"]},{"Key":"give names","Fragments":["to"]},{"Key":"to each","Fragments":["case","of"]},{"Key":"each case","Fragments":["statement","there"]},{"Key":"case statement","Fragments":["that"]},{"Key":"statement that","Fragments":["is"]},{"Key":"readable then","Fragments":["just"]},{"Key":"then just","Fragments":["having"]},{"Key":"just having","Fragments":["an","it"]},{"Key":"having an","Fragments":["_"]},{"Key":"I'd prefer","Fragments":["something"]},{"Key":"prefer something","Fragments":["like"]},{"Key":"like `input.filter(_.isDigit)`","Fragments":["over"]},{"Key":"`input.filter(_.isDigit)` over","Fragments":["a"]},{"Key":"regex. It's","Fragments":["more"]},{"Key":"more concise,","Fragments":["easier","there's"]},{"Key":"concise, easier","Fragments":["to"]},{"Key":"to read","Fragments":["and","and",":)","if","and","than","up","line","regular","without"]},{"Key":"read and","Fragments":["performs","maintain.","follow."]},{"Key":"and performs","Fragments":["better."]},{"Key":"This was","Fragments":["just","a","an"]},{"Key":"was just","Fragments":["my","handling"]},{"Key":"just my","Fragments":["first"]},{"Key":"first pass","Fragments":["getting"]},{"Key":"pass getting","Fragments":["things"]},{"Key":"getting things","Fragments":["to"]},{"Key":"things to","Fragments":["compile","a","work,"]},{"Key":"compile and","Fragments":["pass"]},{"Key":"and pass","Fragments":["the"]},{"Key":" Scala","Fragments":["provides"]},{"Key":"provides a","Fragments":["very","lot","lot","lot","lot"]},{"Key":"very nice","Fragments":["function","solution.","use"]},{"Key":"nice function","Fragments":["that"]},{"Key":"do most","Fragments":["of"]},{"Key":"the mapping","Fragments":["and"]},{"Key":"mapping and","Fragments":["grouping"]},{"Key":"and grouping","Fragments":["for"]},{"Key":"grouping for","Fragments":["us."]},{"Key":"for us.","Fragments":["Check"]},{"Key":"us. Check","Fragments":["out"]},{"Key":"Check out","Fragments":["the","some"]},{"Key":"the groupBy","Fragments":["function"]},{"Key":"groupBy function","Fragments":["for"]},{"Key":"function for","Fragments":["lists","input","clarity's","clarity","example:"]},{"Key":"for lists","Fragments":["at"]},{"Key":"lists at","Fragments":["http://www.scala-lang.org/api/2.10.3/index.html#scala.collection.immutable.List"]},{"Key":" Note","Fragments":["that"]},{"Key":"Note that","Fragments":["`class"]},{"Key":"that `class","Fragments":["Hamming`"]},{"Key":"`class Hamming`","Fragments":["doesn't"]},{"Key":"Hamming` doesn't","Fragments":["contain"]},{"Key":"any state;","Fragments":["there"]},{"Key":"state; there","Fragments":["are"]},{"Key":"are no","Fragments":["`val`s"]},{"Key":"no `val`s","Fragments":["or"]},{"Key":"`val`s or","Fragments":["`var`s."]},{"Key":"or `var`s.","Fragments":["All"]},{"Key":"`var`s. All","Fragments":["it"]},{"Key":"All it","Fragments":["does"]},{"Key":"it does","Fragments":["it","not","not"]},{"Key":"does it","Fragments":["contain"]},{"Key":"it contain","Fragments":["two"]},{"Key":"contain two","Fragments":["functions"]},{"Key":"two functions","Fragments":["that"]},{"Key":"functions that","Fragments":["simply","don't"]},{"Key":"that simply","Fragments":["act"]},{"Key":"simply act","Fragments":["on"]},{"Key":"act on","Fragments":["their"]},{"Key":"on their","Fragments":["inputs."]},{"Key":"their inputs.","Fragments":["That"]},{"Key":"inputs. That","Fragments":["means"]},{"Key":"means everything","Fragments":["can"]},{"Key":"everything can","Fragments":["live"]},{"Key":"can live","Fragments":["inside"]},{"Key":"live inside","Fragments":["the"]},{"Key":"inside the","Fragments":["singleton","count","`number()`","filter","`wordCount`"]},{"Key":"the singleton","Fragments":["`object"]},{"Key":"singleton `object","Fragments":["Hamming`"]},{"Key":"`object Hamming`","Fragments":["and"]},{"Key":"Hamming` and","Fragments":["there's"]},{"Key":"and there's","Fragments":["no"]},{"Key":"there's no","Fragments":["need"]},{"Key":"to allocate","Fragments":["an"]},{"Key":"allocate an","Fragments":["instance"]},{"Key":"an instance","Fragments":["of","of"]},{"Key":"instance of","Fragments":["the","it","`DNA`."]},{"Key":"The basic","Fragments":["use"]},{"Key":"basic use","Fragments":["case"]},{"Key":"for companion","Fragments":["objects"]},{"Key":"companion objects","Fragments":["is"]},{"Key":"objects is","Fragments":["to"]},{"Key":"to contain","Fragments":["the","the"]},{"Key":"contain the","Fragments":["_static_","sentence","words.filter"]},{"Key":"the _static_","Fragments":["methods"]},{"Key":"_static_ methods","Fragments":["and"]},{"Key":"methods and","Fragments":["data;"]},{"Key":"and data;","Fragments":["that"]},{"Key":"data; that","Fragments":["is"]},{"Key":"the stuff","Fragments":["is"]},{"Key":"stuff is","Fragments":["shared"]},{"Key":"is shared","Fragments":["between"]},{"Key":"shared between","Fragments":["all"]},{"Key":"between all","Fragments":["instances"]},{"Key":"all instances","Fragments":["of"]},{"Key":"instances of","Fragments":["the","`.sortWith((w1,"]},{"Key":"As a","Fragments":["(really","general","general","bonus"]},{"Key":"a (really","Fragments":["contrived)"]},{"Key":"(really contrived)","Fragments":["example,"]},{"Key":"contrived) example,","Fragments":["say"]},{"Key":"example, say","Fragments":["that"]},{"Key":"say that","Fragments":["you"]},{"Key":"you wanted","Fragments":["to"]},{"Key":"to cache","Fragments":["some","all"]},{"Key":"cache some","Fragments":["data"]},{"Key":"some data","Fragments":["about"]},{"Key":"data about","Fragments":["the"]},{"Key":"the inputs","Fragments":["that","(it","in"]},{"Key":"inputs that","Fragments":["Hamming"]},{"Key":"that Hamming","Fragments":["receives."]},{"Key":"Hamming receives.","Fragments":["In"]},{"Key":"receives. In","Fragments":["that"]},{"Key":"In that","Fragments":["case"]},{"Key":"case you","Fragments":["might","are"]},{"Key":"might create","Fragments":["a"]},{"Key":"a `Hamming`","Fragments":["class"]},{"Key":"`Hamming` class","Fragments":["that"]},{"Key":"a private","Fragments":["`Map`","function","function","class"]},{"Key":"private `Map`","Fragments":["to"]},{"Key":"`Map` to","Fragments":["keep"]},{"Key":"the cached","Fragments":["data."]},{"Key":"cached data.","Fragments":["The"]},{"Key":"data. The","Fragments":["computing"]},{"Key":"The computing","Fragments":["of"]},{"Key":"computing of","Fragments":["the"]},{"Key":"the distance","Fragments":["is","state.","state."]},{"Key":"still just","Fragments":["a"]},{"Key":"just a","Fragments":["function","basic","module"]},{"Key":"function of","Fragments":["the"]},{"Key":"inputs (it","Fragments":["doesn't"]},{"Key":"(it doesn't","Fragments":["care"]},{"Key":"doesn't care","Fragments":["about"]},{"Key":"care about","Fragments":["the","state"]},{"Key":"the state","Fragments":["of","when"]},{"Key":"state of","Fragments":["the"]},{"Key":"the cache)","Fragments":["so"]},{"Key":"cache) so","Fragments":["it"]},{"Key":"could live","Fragments":["in"]},{"Key":"live in","Fragments":["a"]},{"Key":"companion object.","Fragments":["That's","Not"]},{"Key":"object. That's","Fragments":["probably"]},{"Key":"That's probably","Fragments":["going"]},{"Key":"probably going","Fragments":["overboard"]},{"Key":"going overboard","Fragments":["for"]},{"Key":"overboard for","Fragments":["such"]},{"Key":"for such","Fragments":["a"]},{"Key":"simple thing","Fragments":["as"]},{"Key":"thing as","Fragments":["this"]},{"Key":"as this","Fragments":["but"]},{"Key":"this but","Fragments":["it","this"]},{"Key":"it gives","Fragments":["the","a"]},{"Key":"gives the","Fragments":["idea.","benefit"]},{"Key":"general rule","Fragments":["I","only","avoid"]},{"Key":"rule I","Fragments":["avoid"]},{"Key":"I avoid","Fragments":["using"]},{"Key":"using regular","Fragments":["expressions","expressions."]},{"Key":"expressions unless","Fragments":["it's"]},{"Key":"unless it's","Fragments":["really"]},{"Key":"it's really","Fragments":["necessary.","necessary."]},{"Key":"really necessary.","Fragments":["Take","Take"]},{"Key":"necessary. Take","Fragments":["a","a"]},{"Key":"Take a","Fragments":["look","look","look","look.","closer","look","look","look","look","look"]},{"Key":"the `StringOps`","Fragments":["class.","methods"]},{"Key":"`StringOps` class.","Fragments":["It"]},{"Key":"It provides","Fragments":["a","a","a"]},{"Key":"of useful","Fragments":["methods","methods","methods"]},{"Key":"useful methods","Fragments":["for","on","for","like"]},{"Key":"methods for","Fragments":["strings.","`String`s.","Strings.","the"]},{"Key":"for strings.","Fragments":["For"]},{"Key":"strings. For","Fragments":["example"]},{"Key":"For example","Fragments":["`statement.exists(_.isAlpha)`","using"]},{"Key":"example `statement.exists(_.isAlpha)`","Fragments":["will"]},{"Key":"`statement.exists(_.isAlpha)` will","Fragments":["return"]},{"Key":"will return","Fragments":["true","`0`"]},{"Key":"return true","Fragments":["if"]},{"Key":"true if","Fragments":["the"]},{"Key":"the string","Fragments":["has","is","uppercase","wrapped","is","once","did","passed","is","must","parsed"]},{"Key":"one alpha","Fragments":["char."]},{"Key":" Sorry","Fragments":["for"]},{"Key":"Sorry for","Fragments":["unclear."]},{"Key":"for unclear.","Fragments":["By"]},{"Key":"unclear. By","Fragments":["CamelCase"]},{"Key":"By CamelCase","Fragments":["i"]},{"Key":"CamelCase i","Fragments":["really"]},{"Key":"i really","Fragments":["meant"]},{"Key":"really meant","Fragments":["camelCase"]},{"Key":"meant camelCase","Fragments":[":-)"]},{"Key":" vars,","Fragments":["vals"]},{"Key":"vars, vals","Fragments":["and"]},{"Key":"vals and","Fragments":["params"]},{"Key":"and params","Fragments":["usually"]},{"Key":"params usually","Fragments":["starts"]},{"Key":"usually starts","Fragments":["with"]},{"Key":"starts with","Fragments":["a"]},{"Key":"a lowercase","Fragments":["letter.","letter."]},{"Key":" Even","Fragments":["though","for"]},{"Key":"Even though","Fragments":["it"]},{"Key":"is pretty","Fragments":["to","slick,","weak"]},{"Key":"pretty to","Fragments":["look"]},{"Key":"at I","Fragments":["find"]},{"Key":"this hard","Fragments":["to"]},{"Key":" Take","Fragments":["a","care.","a","a","a"]},{"Key":" @alvena","Fragments":["I"]},{"Key":"@alvena I","Fragments":["totally"]},{"Key":"I totally","Fragments":["agree."]},{"Key":"totally agree.","Fragments":["This"]},{"Key":"agree. This","Fragments":["is"]},{"Key":"definitely more","Fragments":["clever"]},{"Key":"more clever","Fragments":["than"]},{"Key":"clever than","Fragments":["readable."]},{"Key":"than readable.","Fragments":["I"]},{"Key":"readable. I","Fragments":["was"]},{"Key":"was exploring","Fragments":["scala's"]},{"Key":"exploring scala's","Fragments":["pattern"]},{"Key":"scala's pattern","Fragments":["matching"]},{"Key":"matching mechanism","Fragments":["and"]},{"Key":"mechanism and","Fragments":["wanted"]},{"Key":"and wanted","Fragments":["to"]},{"Key":"this problem.","Fragments":["Is","Getting"]},{"Key":"problem. Is","Fragments":["there"]},{"Key":"use pattern","Fragments":["matching","matching."]},{"Key":"matching here","Fragments":["that's"]},{"Key":"here that's","Fragments":["less"]},{"Key":"that's less","Fragments":["clever"]},{"Key":"less clever","Fragments":["and/or"]},{"Key":"clever and/or","Fragments":["more"]},{"Key":"and/or more","Fragments":["readable?"]},{"Key":" Map","Fragments":["has"]},{"Key":"Map has","Fragments":["a"]},{"Key":"a mapValues","Fragments":["which"]},{"Key":"mapValues which","Fragments":["is"]},{"Key":"verbose than","Fragments":["map"]},{"Key":"than map","Fragments":["("]},{"Key":"map (","Fragments":["case"]},{"Key":"( case","Fragments":["(k,v)"]},{"Key":"case (k,v)","Fragments":["=\u003e"]},{"Key":"(k,v) =\u003e","Fragments":["...."]},{"Key":" IMHO","Fragments":["it"]},{"Key":"IMHO it","Fragments":["is"]},{"Key":"def grade(i:","Fragments":["Int):"]},{"Key":"grade(i: Int):","Fragments":["Seq[String]"]},{"Key":"Why do","Fragments":["you","you"]},{"Key":" A","Fragments":["case","nice","colleague","more","general","more","fold","very","little","small","few","few","few"]},{"Key":"A case","Fragments":["class"]},{"Key":"case class","Fragments":["would","already,","will"]},{"Key":"class would","Fragments":["have"]},{"Key":"have saved","Fragments":["you"]},{"Key":"saved you","Fragments":["for"]},{"Key":"you for","Fragments":["the","the","the","review.","the","your"]},{"Key":"the trouble","Fragments":["writing"]},{"Key":"trouble writing","Fragments":["the"]},{"Key":"writing the","Fragments":["companion"]},{"Key":"prefer to","Fragments":["avoid","have"]},{"Key":"avoid regular","Fragments":["expressions"]},{"Key":"expressions if","Fragments":["possible."]},{"Key":"if possible.","Fragments":["They're"]},{"Key":"possible. They're","Fragments":["hard"]},{"Key":"They're hard","Fragments":["to"]},{"Key":"write and","Fragments":["even"]},{"Key":"and even","Fragments":["harder","toString"]},{"Key":"even harder","Fragments":["to"]},{"Key":"and maintain.","Fragments":["Take"]},{"Key":"maintain. Take","Fragments":["a"]},{"Key":"look in","Fragments":["`StringOps`"]},{"Key":"in `StringOps`","Fragments":["for"]},{"Key":"`StringOps` for","Fragments":["a"]},{"Key":"on `String`s","Fragments":["that"]},{"Key":"`String`s that","Fragments":["will"]},{"Key":"will let","Fragments":["you"]},{"Key":"let you","Fragments":["accomplish"]},{"Key":"you accomplish","Fragments":["a"]},{"Key":"accomplish a","Fragments":["lot"]},{"Key":"of cool","Fragments":["stuff"]},{"Key":"cool stuff","Fragments":["without","in"]},{"Key":"stuff without","Fragments":["bringing"]},{"Key":"without bringing","Fragments":["out"]},{"Key":"bringing out","Fragments":["the"]},{"Key":"the big","Fragments":["regex","picture."]},{"Key":"big regex","Fragments":["guns."]},{"Key":"can probably","Fragments":["use"]},{"Key":"probably use","Fragments":["`v.sorted`"]},{"Key":"use `v.sorted`","Fragments":["rather"]},{"Key":"`v.sorted` rather","Fragments":["than"]},{"Key":"than `v.sortBy`","Fragments":["since"]},{"Key":"`v.sortBy` since","Fragments":["there"]},{"Key":"since there","Fragments":["are"]},{"Key":"are implicit","Fragments":["`Ordering`s"]},{"Key":"implicit `Ordering`s","Fragments":["for"]},{"Key":"`Ordering`s for","Fragments":["all"]},{"Key":"the built-in","Fragments":["types."]},{"Key":" Keeping","Fragments":["everything"]},{"Key":"Keeping everything","Fragments":["in"]},{"Key":"and generating","Fragments":["the"]},{"Key":"generating the","Fragments":["results"]},{"Key":"the results","Fragments":["on"]},{"Key":"results on","Fragments":["the"]},{"Key":"the fly","Fragments":["was"]},{"Key":"fly was","Fragments":["an"]},{"Key":"was an","Fragments":["approach","steep","interesting"]},{"Key":"an approach","Fragments":["I","might"]},{"Key":"approach I","Fragments":["hadn't"]},{"Key":"I hadn't","Fragments":["considered."]},{"Key":"use ```str.toLowerCase.split(\"[^\\\\w']+\")```","Fragments":["and"]},{"Key":"```str.toLowerCase.split(\"[^\\\\w']+\")``` and","Fragments":["get"]},{"Key":"and get","Fragments":["thereby"]},{"Key":"get thereby","Fragments":["rid"]},{"Key":"thereby rid","Fragments":["of"]},{"Key":"of lines","Fragments":["5-7."]},{"Key":"Again, just","Fragments":["got"]},{"Key":"just got","Fragments":["the","lucky."]},{"Key":"got the","Fragments":["tests"]},{"Key":"tests to","Fragments":["complete","check","pass.","verify"]},{"Key":"to complete","Fragments":["successfully."]},{"Key":" what","Fragments":["does","if"]},{"Key":"what does","Fragments":["that"]},{"Key":"does that","Fragments":["mean?"]},{"Key":"do compressed.count(_!=_)","Fragments":["if"]},{"Key":"compressed.count(_!=_) if","Fragments":["these"]},{"Key":"if these","Fragments":["were"]},{"Key":"these were","Fragments":["not"]},{"Key":"were not","Fragments":["tuples,"]},{"Key":"But because","Fragments":["they"]},{"Key":"because they","Fragments":["are,","are","are","are"]},{"Key":"they are,","Fragments":["you"]},{"Key":"are, you","Fragments":["could"]},{"Key":"could either","Fragments":["pattern"]},{"Key":"either pattern","Fragments":["match,"]},{"Key":" (dna1","Fragments":["zip","zip"]},{"Key":"(dna1 zip","Fragments":["dna2).count{","dna2).count(((_:Char)!=(_:Char)).tupled)"]},{"Key":"zip dna2).count{","Fragments":["case(x,y)"]},{"Key":"dna2).count{ case(x,y)","Fragments":["=\u003e"]},{"Key":"case(x,y) =\u003e","Fragments":["x"]},{"Key":"It came","Fragments":["to"]},{"Key":"came to","Fragments":["me"]},{"Key":"a dream.","Fragments":["Well,"]},{"Key":"dream. Well,","Fragments":["not"]},{"Key":"Well, not","Fragments":["really"]},{"Key":"really in","Fragments":["a"]},{"Key":"a dream,","Fragments":["but"]},{"Key":"dream, but","Fragments":["while"]},{"Key":"but while","Fragments":["I"]},{"Key":"while I","Fragments":["was"]},{"Key":"was trying","Fragments":["to","to"]},{"Key":"to figure","Fragments":["out","out","out).","out","about"]},{"Key":"add things","Fragments":["to"]},{"Key":"a Map[Int,Seq[String]]","Fragments":["I"]},{"Key":"Map[Int,Seq[String]] I","Fragments":["tried"]},{"Key":"tried to","Fragments":["convert","simplify"]},{"Key":"to convert","Fragments":["the","`strand`","a","to"]},{"Key":"convert the","Fragments":["Map"]},{"Key":"the Map","Fragments":["back","from"]},{"Key":"Map back","Fragments":["into"]},{"Key":"back into","Fragments":["a"]},{"Key":"a Seq[(Int,String)]","Fragments":["so"]},{"Key":"Seq[(Int,String)] so","Fragments":["it'd"]},{"Key":"so it'd","Fragments":["be"]},{"Key":"be easy","Fragments":["to"]},{"Key":"to append","Fragments":["the","names"]},{"Key":"append the","Fragments":["new"]},{"Key":"That made","Fragments":["me"]},{"Key":"made me","Fragments":["think"]},{"Key":"me think","Fragments":["it'd"]},{"Key":"think it'd","Fragments":["be"]},{"Key":"be easier","Fragments":["not","to","to","to"]},{"Key":"easier not","Fragments":["to"]},{"Key":"to bother","Fragments":["with"]},{"Key":"bother with","Fragments":["the"]},{"Key":"first step,","Fragments":["and"]},{"Key":"step, and","Fragments":["just"]},{"Key":"and just","Fragments":["keep","call"]},{"Key":"just keep","Fragments":["a"]},{"Key":"keep a","Fragments":["list"]},{"Key":"I'll go","Fragments":["have"]},{"Key":"go have","Fragments":["a"]},{"Key":"other solutions,","Fragments":["because","tuple"]},{"Key":"solutions, because","Fragments":["I'd"]},{"Key":"because I'd","Fragments":["quite"]},{"Key":"I'd quite","Fragments":["like"]},{"Key":"quite like","Fragments":["to","this.","that","how"]},{"Key":"they add","Fragments":["items"]},{"Key":"add items","Fragments":["to"]},{"Key":"items to","Fragments":["a"]},{"Key":" difference","Fragments":["with"]},{"Key":"difference with","Fragments":["the"]},{"Key":"* call","Fragments":["normalize"]},{"Key":"call normalize","Fragments":["on"]},{"Key":"normalize on","Fragments":["input"]},{"Key":"on input","Fragments":["string","\"a111\""]},{"Key":"* split","Fragments":["multiple"]},{"Key":"split multiple","Fragments":["of"]},{"Key":"multiple of","Fragments":["whitespace"]},{"Key":"I wonder","Fragments":["if","whether","if","if","if"]},{"Key":"wonder if","Fragments":["scala","the","this","it"]},{"Key":"if scala","Fragments":["already"]},{"Key":"scala already","Fragments":["has"]},{"Key":"already has","Fragments":["a"]},{"Key":"the thing","Fragments":["in"]},{"Key":"thing in","Fragments":["the"]},{"Key":"Please do","Fragments":["not"]},{"Key":"not rate","Fragments":["this."]},{"Key":"I copied","Fragments":["https://github.com/exercism/xscala/blob/master/bob/example.scala"]},{"Key":"copied https://github.com/exercism/xscala/blob/master/bob/example.scala","Fragments":["to"]},{"Key":"https://github.com/exercism/xscala/blob/master/bob/example.scala to","Fragments":["get"]},{"Key":"get to","Fragments":["the","work","the"]},{"Key":"the next","Fragments":["challenge","iteration","iteration...","iteration","test","iteration.","iteration.","and"]},{"Key":"next challenge","Fragments":["and"]},{"Key":"challenge and","Fragments":["try"]},{"Key":"and try","Fragments":["out"]},{"Key":"try out","Fragments":["Scala."]},{"Key":"also redefine","Fragments":["the"]},{"Key":"redefine the","Fragments":["```wordCount```"]},{"Key":"the ```wordCount```","Fragments":["as"]},{"Key":"```wordCount``` as","Fragments":["a"]},{"Key":"a ```lazy","Fragments":["val```"]},{"Key":"```lazy val```","Fragments":["so","."]},{"Key":"val``` so","Fragments":["that"]},{"Key":"that once","Fragments":["it's"]},{"Key":"once it's","Fragments":["computed,"]},{"Key":"it's computed,","Fragments":["it"]},{"Key":"computed, it","Fragments":["won't"]},{"Key":"it won't","Fragments":["have"]},{"Key":"won't have","Fragments":["to"]},{"Key":"be recomputed","Fragments":["each"]},{"Key":"recomputed each","Fragments":["time"]},{"Key":"each time","Fragments":["```wordCount```","re-encountered.","you","you","it","the","the"]},{"Key":"time ```wordCount```","Fragments":["is"]},{"Key":"```wordCount``` is","Fragments":["called."]},{"Key":" To","Fragments":["simplify","be","ignore"]},{"Key":"To simplify","Fragments":["this"]},{"Key":"simplify this","Fragments":["a"]},{"Key":"this a","Fragments":["little,","very","bit"]},{"Key":"a little,","Fragments":["you"]},{"Key":"little, you","Fragments":["could"]},{"Key":"use .count","Fragments":["on"]},{"Key":".count on","Fragments":["the"]},{"Key":"the zip.","Fragments":["Like"]},{"Key":"zip. Like","Fragments":["so:"]},{"Key":" ```","Fragments":["scala"]},{"Key":" (a","Fragments":["zip"]},{"Key":"(a zip","Fragments":["b).count"]},{"Key":"zip b).count","Fragments":["{"]},{"Key":"b).count {","Fragments":["..."]},{"Key":"{ ...","Fragments":["}","}"]},{"Key":"I'll leave","Fragments":["it"]},{"Key":"to you","Fragments":["to"]},{"Key":"an awesome","Fragments":["little"]},{"Key":"awesome little","Fragments":["function"]},{"Key":"little function","Fragments":["called"]},{"Key":"function called","Fragments":["```count```","``containsSlice``"]},{"Key":"called ```count```","Fragments":["in"]},{"Key":"```count``` in","Fragments":["the"]},{"Key":"the [```trait","Fragments":["TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that"]},{"Key":"[```trait TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that","Fragments":["makes"]},{"Key":"TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that makes","Fragments":["counting"]},{"Key":"makes counting","Fragments":["things"]},{"Key":"counting things","Fragments":["according"]},{"Key":"things according","Fragments":["to"]},{"Key":"according to","Fragments":["a","the"]},{"Key":"a predicate","Fragments":["very","test","function","function"]},{"Key":"predicate very","Fragments":["clean."]},{"Key":"very clean.","Fragments":["Take"]},{"Key":"clean. Take","Fragments":["a"]},{"Key":"Thanks. In","Fragments":["fact"]},{"Key":"In fact","Fragments":["I"]},{"Key":"fact I","Fragments":["did"]},{"Key":"did figure","Fragments":["it"]},{"Key":"figure it","Fragments":["out"]},{"Key":" Do","Fragments":["you","need"]},{"Key":"a Queue","Fragments":["here?"]},{"Key":"Queue here?","Fragments":["Maybe"]},{"Key":"here? Maybe","Fragments":["you"]},{"Key":"can try","Fragments":["using"]},{"Key":"try using","Fragments":["just"]},{"Key":"using just","Fragments":["a"]},{"Key":"a basic","Fragments":["Seq"]},{"Key":"basic Seq","Fragments":["instead."]},{"Key":" IIRC","Fragments":["the"]},{"Key":"IIRC the","Fragments":["provided"]},{"Key":"the provided","Fragments":["unit"]},{"Key":"provided unit","Fragments":["tests"]},{"Key":"unit tests","Fragments":["expected","failed.","cared"]},{"Key":"tests expected","Fragments":["the"]},{"Key":"expected the","Fragments":["list"]},{"Key":"of student","Fragments":["names"]},{"Key":"student names","Fragments":["(in"]},{"Key":"names (in","Fragments":["the"]},{"Key":"(in the","Fragments":["non-sorted"]},{"Key":"the non-sorted","Fragments":["cases)"]},{"Key":"non-sorted cases)","Fragments":["in"]},{"Key":"cases) in","Fragments":["the"]},{"Key":"same order","Fragments":["in"]},{"Key":"order in","Fragments":["which"]},{"Key":"which the","Fragments":["students","predicate","predicate"]},{"Key":"students were","Fragments":["added"]},{"Key":"were added","Fragments":["so"]},{"Key":"added so","Fragments":["I"]},{"Key":"needed to","Fragments":["append"]},{"Key":"append names","Fragments":["to"]},{"Key":"a sequence.","Fragments":["`Queue`"]},{"Key":"sequence. `Queue`","Fragments":["provides"]},{"Key":"`Queue` provides","Fragments":["an"]},{"Key":"provides an","Fragments":["O(1)"]},{"Key":"an O(1)","Fragments":["append"]},{"Key":"O(1) append","Fragments":["operation."]},{"Key":"my opinion","Fragments":["the","you"]},{"Key":"opinion the","Fragments":["tests"]},{"Key":"tests are","Fragments":["wrong","passing","run,"]},{"Key":"are wrong","Fragments":["and"]},{"Key":"wrong and","Fragments":["the"]},{"Key":"order shouldn't","Fragments":["matter"]},{"Key":"shouldn't matter","Fragments":["unless"]},{"Key":"matter unless","Fragments":["you"]},{"Key":"unless you","Fragments":["specifically"]},{"Key":"you specifically","Fragments":["ask"]},{"Key":"specifically ask","Fragments":["for"]},{"Key":"ask for","Fragments":["the"]},{"Key":"the sorted","Fragments":["data.","strings.","map","lowercased","versions"]},{"Key":"I could,","Fragments":["but"]},{"Key":"could, but","Fragments":["I"]},{"Key":"the return-early-return-often","Fragments":["approach."]},{"Key":"return-early-return-often approach.","Fragments":["It"]},{"Key":"approach. It","Fragments":["takes"]},{"Key":"It takes","Fragments":["care","some"]},{"Key":"takes care","Fragments":["of"]},{"Key":"care of","Fragments":["each"]},{"Key":"of each","Fragments":["case"]},{"Key":"case there","Fragments":["and","are"]},{"Key":"there and","Fragments":["then,"]},{"Key":"and then,","Fragments":["so"]},{"Key":"then, so","Fragments":["the"]},{"Key":"reader never","Fragments":["have"]},{"Key":"never have","Fragments":["to"]},{"Key":"go check","Fragments":["at"]},{"Key":"check at","Fragments":["the"]},{"Key":"the of","Fragments":["the"]},{"Key":"the if/elseif/else","Fragments":["loop"]},{"Key":"if/elseif/else loop","Fragments":["to"]},{"Key":"loop to","Fragments":["see"]},{"Key":"if something","Fragments":["else"]},{"Key":"something else","Fragments":["will"]},{"Key":"else will","Fragments":["happen."]},{"Key":"looks great,","Fragments":["but"]},{"Key":"great, but","Fragments":["couldn't"]},{"Key":"but couldn't","Fragments":["\"\"\"val","find"]},{"Key":"couldn't \"\"\"val","Fragments":["alphaNumerics"]},{"Key":"\"\"\"val alphaNumerics","Fragments":["="]},{"Key":"alphaNumerics =","Fragments":["Random.alphanumeric\"\"\""]},{"Key":" return","Fragments":["numbers"]},{"Key":"return numbers","Fragments":["too"]},{"Key":"numbers too","Fragments":["insteads"]},{"Key":"too insteads","Fragments":["of"]},{"Key":"insteads of","Fragments":["just"]},{"Key":" Have","Fragments":["you","you","you"]},{"Key":"Have you","Fragments":["thought","considered","thought","heard"]},{"Key":"you thought","Fragments":["about","about"]},{"Key":"about moving","Fragments":["the"]},{"Key":"moving the","Fragments":["private","regex"]},{"Key":"methods into","Fragments":["the"]},{"Key":"the scope","Fragments":["of","is"]},{"Key":"scope of","Fragments":["the"]},{"Key":"the ```hey```-method","Fragments":["so"]},{"Key":"```hey```-method so","Fragments":["you"]},{"Key":"the ```statement```","Fragments":["as"]},{"Key":"```statement``` as","Fragments":["parameter?"]},{"Key":" Inspired","Fragments":["by"]},{"Key":"Inspired by","Fragments":["matheusemm's"]},{"Key":"by matheusemm's","Fragments":["approach"]},{"Key":"matheusemm's approach","Fragments":["(http://exercism.io/submissions/0258d2bf1dea224167204fb0)"]},{"Key":"don't know.","Fragments":["Comparing"]},{"Key":"know. Comparing","Fragments":["your"]},{"Key":"Comparing your","Fragments":["code"]},{"Key":"your code","Fragments":["and","easier","more","is","be","would"]},{"Key":"and mine","Fragments":["I"]},{"Key":"mine I","Fragments":["feel"]},{"Key":"feel that","Fragments":["I","String","the","the","pattern-matching","the"]},{"Key":"might overdid","Fragments":["it"]},{"Key":"overdid it","Fragments":[":)",":)"]},{"Key":" Still","Fragments":["I","stuck"]},{"Key":"Still I","Fragments":["kind"]},{"Key":"I kind","Fragments":["of"]},{"Key":"of dislike","Fragments":["the"]},{"Key":"dislike the","Fragments":["monolithic"]},{"Key":"the monolithic","Fragments":["style"]},{"Key":"monolithic style","Fragments":["of"]},{"Key":"style of","Fragments":["this"]},{"Key":"this solution.","Fragments":["Works"]},{"Key":"solution. Works","Fragments":["for"]},{"Key":"Works for","Fragments":["now"]},{"Key":"for now","Fragments":["but","I'll"]},{"Key":"now but","Fragments":["add"]},{"Key":"but add","Fragments":["3"]},{"Key":"add 3","Fragments":["or"]},{"Key":"3 or","Fragments":["4"]},{"Key":"or 4","Fragments":["new"]},{"Key":"4 new","Fragments":["rules"]},{"Key":"new rules","Fragments":["and"]},{"Key":"rules and","Fragments":["it","the"]},{"Key":"it becomes","Fragments":["rather"]},{"Key":"becomes rather","Fragments":["unmaintainable."]},{"Key":"I'd at","Fragments":["least"]},{"Key":"least try","Fragments":["to"]},{"Key":"to refactor","Fragments":["the","the","if"]},{"Key":"refactor the","Fragments":["predicates","predicates","code"]},{"Key":" not","Fragments":["sure"]},{"Key":"about jschauls","Fragments":["advice."]},{"Key":"jschauls advice.","Fragments":["My"]},{"Key":"advice. My","Fragments":["[first"]},{"Key":"My [first","Fragments":["iteration]("]},{"Key":"[first iteration](","Fragments":["http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb"]},{"Key":"iteration]( http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb","Fragments":[")"]},{"Key":"http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb )","Fragments":["was"]},{"Key":") was","Fragments":["based"]},{"Key":"was based","Fragments":["on"]},{"Key":"on patternmatching","Fragments":["and"]},{"Key":"patternmatching and","Fragments":["since"]},{"Key":"and since","Fragments":["I"]},{"Key":"since I","Fragments":["was"]},{"Key":"was basically","Fragments":["matching"]},{"Key":"basically matching","Fragments":["against"]},{"Key":"matching against","Fragments":["_","an","anonymous"]},{"Key":"against _","Fragments":["with"]},{"Key":"_ with","Fragments":["guards"]},{"Key":"with guards","Fragments":["it"]},{"Key":"guards it","Fragments":["didn't"]},{"Key":"it didn't","Fragments":["look"]},{"Key":"didn't look","Fragments":["much"]},{"Key":"look much","Fragments":["better."]},{"Key":"first iteration","Fragments":["looked","looked","I"]},{"Key":"iteration looked","Fragments":["quite","quite"]},{"Key":"looked quite","Fragments":["like","like"]},{"Key":"like this.","Fragments":["But","What"]},{"Key":"this. But","Fragments":["I"]},{"Key":"got mad","Fragments":["that"]},{"Key":"mad that","Fragments":["I"]},{"Key":"pass around","Fragments":["the"]},{"Key":"the `speech`","Fragments":["variable"]},{"Key":"`speech` variable","Fragments":["so"]},{"Key":"variable so","Fragments":["often.","that"]},{"Key":"so often.","Fragments":["So"]},{"Key":"often. So","Fragments":["I"]},{"Key":"So I","Fragments":["got","replaced","could"]},{"Key":"got into","Fragments":["a"]},{"Key":"little [FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79).","Fragments":["Probably"]},{"Key":"[FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79). Probably","Fragments":["overdid"]},{"Key":"Probably overdid","Fragments":["it"]},{"Key":"also try","Fragments":["to"]},{"Key":"make your","Fragments":["predicate","function","code","code","implementation","life","intentions"]},{"Key":"your predicate","Fragments":["functions","functions"]},{"Key":"functions inner","Fragments":["functions"]},{"Key":"inner functions","Fragments":["(that","of","in"]},{"Key":"functions (that","Fragments":["can"]},{"Key":"(that can","Fragments":["access"]},{"Key":"can access","Fragments":["`speech`"]},{"Key":"access `speech`","Fragments":["directly)"]},{"Key":"`speech` directly)","Fragments":["or"]},{"Key":"directly) or","Fragments":["to"]},{"Key":"make `speech`","Fragments":["an"]},{"Key":"`speech` an","Fragments":["implicit"]},{"Key":"implicit parameter","Fragments":["everywhere"]},{"Key":"parameter everywhere","Fragments":["(allowing"]},{"Key":"everywhere (allowing","Fragments":["you"]},{"Key":"(allowing you","Fragments":["to"]},{"Key":"to omit","Fragments":["all"]},{"Key":"omit all","Fragments":["the"]},{"Key":"the wiring","Fragments":["and"]},{"Key":"wiring and","Fragments":["just"]},{"Key":"just call","Fragments":["`if(isShouting)",".isLetter","`word.sorted`."]},{"Key":"call `if(isShouting)","Fragments":["\"Whoa\"`)."]},{"Key":"`if(isShouting) \"Whoa\"`).","Fragments":["Matter"]},{"Key":"\"Whoa\"`). Matter","Fragments":["of"]},{"Key":"Matter of","Fragments":["taste"]},{"Key":"of taste","Fragments":["I",":)"]},{"Key":"taste I","Fragments":["guess."]},{"Key":" Anyway:","Fragments":["the"]},{"Key":"Anyway: the","Fragments":["way"]},{"Key":"way it","Fragments":["is"]},{"Key":"now you","Fragments":["can"]},{"Key":"can (and","Fragments":["probably"]},{"Key":"(and probably","Fragments":["should)"]},{"Key":"probably should)","Fragments":["omit"]},{"Key":"should) omit","Fragments":["the"]},{"Key":"the `hey`","Fragments":["body","method"]},{"Key":"`hey` body","Fragments":["and"]},{"Key":"body and","Fragments":["I"]},{"Key":"would think","Fragments":["about"]},{"Key":"think about","Fragments":["making","Map.empty[...]?","what"]},{"Key":"about making","Fragments":["your"]},{"Key":"making your","Fragments":["predicate"]},{"Key":" you","Fragments":["don't","are","can"]},{"Key":"write your","Fragments":["response"]},{"Key":"your response","Fragments":["to"]},{"Key":"variable if","Fragments":["you"]},{"Key":"you do","Fragments":["nothing","that,","not","not","not"]},{"Key":"do nothing","Fragments":["but"]},{"Key":"nothing but","Fragments":["returning"]},{"Key":"but returning","Fragments":["it."]},{"Key":"returning it.","Fragments":["Just"]},{"Key":"it. Just","Fragments":["throw"]},{"Key":"Just throw","Fragments":["away"]},{"Key":"throw away","Fragments":["the"]},{"Key":"away the","Fragments":["`response`"]},{"Key":"the `response`","Fragments":["variable."]},{"Key":"you push","Fragments":["the"]},{"Key":"push the","Fragments":["`Statement`"]},{"Key":"the `Statement`","Fragments":["class"]},{"Key":"`Statement` class","Fragments":["into"]},{"Key":"class into","Fragments":["a","a"]},{"Key":"object you","Fragments":["could"]},{"Key":"it extend","Fragments":["`AnyVal`"]},{"Key":"extend `AnyVal`","Fragments":["(don't","(runtime"]},{"Key":"`AnyVal` (don't","Fragments":["forget"]},{"Key":"(don't forget","Fragments":["to"]},{"Key":"forget to","Fragments":["make","remove","remove"]},{"Key":"the `stmt`","Fragments":["parameter"]},{"Key":"`stmt` parameter","Fragments":["a"]},{"Key":"parameter a","Fragments":["`val`"]},{"Key":"a `val`","Fragments":["in","(would","defined"]},{"Key":"`val` in","Fragments":["that"]},{"Key":"that case).","Fragments":["That"]},{"Key":"case). That","Fragments":["way"]},{"Key":"way no","Fragments":["`Statement`"]},{"Key":"no `Statement`","Fragments":["object"]},{"Key":"`Statement` object","Fragments":["would"]},{"Key":"object would","Fragments":["be"]},{"Key":"be actually","Fragments":["created,"]},{"Key":"actually created,","Fragments":["the"]},{"Key":"created, the","Fragments":["function"]},{"Key":"calls would","Fragments":["be"]},{"Key":"be inlined","Fragments":["and"]},{"Key":"inlined and","Fragments":["you"]},{"Key":"you had","Fragments":["zero","an"]},{"Key":"had zero","Fragments":["runtime"]},{"Key":"zero runtime","Fragments":["overhead."]},{"Key":"Just saying","Fragments":[":)"]},{"Key":" (","Fragments":["[more"]},{"Key":"( [more","Fragments":["info"]},{"Key":"[more info","Fragments":["about"]},{"Key":"info about","Fragments":["that](http://docs.scala-lang.org/overviews/core/value-classes.html)"]},{"Key":"about that](http://docs.scala-lang.org/overviews/core/value-classes.html)","Fragments":[")"]},{"Key":"not too","Fragments":["much"]},{"Key":"too much","Fragments":["of","point-and-bracketless","to"]},{"Key":"regex fan","Fragments":["I"]},{"Key":"fan I","Fragments":["suppose."]},{"Key":"But if","Fragments":["they","you're"]},{"Key":"are your","Fragments":["thing,"]},{"Key":"your thing,","Fragments":["Scala"]},{"Key":"thing, Scala","Fragments":["has"]},{"Key":"has very","Fragments":["cool"]},{"Key":"very cool","Fragments":["pattern"]},{"Key":"cool pattern","Fragments":["matching"]},{"Key":"matching support","Fragments":["for"]},{"Key":"support for","Fragments":["you:"]},{"Key":" object","Fragments":["DummyObject","Question","Silence"]},{"Key":"object DummyObject","Fragments":["{"]},{"Key":" val","Fragments":["Question","responder","YellingPattern","hey:","hey:","newCount","head","tail","anagram","anagram","sequenceCounts"]},{"Key":"val Question","Fragments":["="]},{"Key":"Question =","Fragments":["\".+\\?$\"r"]},{"Key":"= \".+\\?$\"r","Fragments":["//"]},{"Key":"\".+\\?$\"r //","Fragments":["notice"]},{"Key":"// notice","Fragments":["the"]},{"Key":"notice the","Fragments":["'r'?"]},{"Key":"def dummyFunction(s:String)","Fragments":["="]},{"Key":"dummyFunction(s:String) =","Fragments":["s.trim"]},{"Key":"= s.trim","Fragments":["match"]},{"Key":"s.trim match","Fragments":["{"]},{"Key":"case Question(_)","Fragments":["=\u003e"]},{"Key":"Question(_) =\u003e","Fragments":["\"Sure.\""]},{"Key":"case _","Fragments":["=\u003e","=\u003e","if"]},{"Key":"_ =\u003e","Fragments":["\"Whatever.\"","\"Whatever.\""]},{"Key":" get","Fragments":["it?"]},{"Key":"In any","Fragments":["case"]},{"Key":"any case","Fragments":["I",":-)"]},{"Key":"make regexes","Fragments":["class"]},{"Key":"regexes class","Fragments":["members"]},{"Key":"class members","Fragments":["so"]},{"Key":"members so","Fragments":["they"]},{"Key":" please","Fragments":["see"]},{"Key":"please see","Fragments":["previous"]},{"Key":"see previous","Fragments":["iteration"]},{"Key":"previous iteration","Fragments":["for"]},{"Key":"iteration for","Fragments":["comments"]},{"Key":"for comments","Fragments":["regarding"]},{"Key":"comments regarding","Fragments":["why"]},{"Key":"regarding why","Fragments":["I"]},{"Key":"I chose","Fragments":["that","to","the"]},{"Key":"chose that","Fragments":["functional"]},{"Key":"that functional","Fragments":["style."]},{"Key":"Just moved","Fragments":["stuff"]},{"Key":"moved stuff","Fragments":["to"]},{"Key":"stuff to","Fragments":["companion"]},{"Key":"to companion","Fragments":["object"]},{"Key":"object so","Fragments":["I","you"]},{"Key":"make `RuleMaker`","Fragments":["extend"]},{"Key":"`RuleMaker` extend","Fragments":["`AnyVal`"]},{"Key":"`AnyVal` (runtime","Fragments":["performance)"]},{"Key":"(runtime performance)","Fragments":["and"]},{"Key":"performance) and","Fragments":["for"]},{"Key":"for cleaner","Fragments":["class"]},{"Key":"cleaner class","Fragments":["code"]},{"Key":"class code","Fragments":["in"]},{"Key":" Looking","Fragments":["at"]},{"Key":"Looking at","Fragments":["the"]},{"Key":"code again","Fragments":["I"]},{"Key":"again I","Fragments":["figured"]},{"Key":"that my","Fragments":["implementation"]},{"Key":"my implementation","Fragments":["of","too.","is"]},{"Key":"of `RuleMaker`","Fragments":["works"]},{"Key":"`RuleMaker` works","Fragments":["here"]},{"Key":"works here","Fragments":["but"]},{"Key":"here but","Fragments":["is","that"]},{"Key":"but is","Fragments":["actually","not"]},{"Key":"is actually","Fragments":["dangerous.","my","needed","justa","helpful"]},{"Key":"actually dangerous.","Fragments":["I'll"]},{"Key":"dangerous. I'll","Fragments":["fix"]},{"Key":"I'll fix","Fragments":["that"]},{"Key":"fix that","Fragments":["in"]},{"Key":"next iteration","Fragments":["(if"]},{"Key":"iteration (if","Fragments":["there"]},{"Key":"(if there","Fragments":["is"]},{"Key":"any :)","Fragments":[")"]},{"Key":"around your","Fragments":["function"]},{"Key":"I'd refactor","Fragments":["the"]},{"Key":"bit concerned","Fragments":["that"]},{"Key":"concerned that","Fragments":["your"]},{"Key":"that your","Fragments":["x","function","interpretation"]},{"Key":"your x","Fragments":["variables"]},{"Key":"x variables","Fragments":["are"]},{"Key":"are actually","Fragments":["just"]},{"Key":"actually just","Fragments":["copies"]},{"Key":"just copies","Fragments":["of"]},{"Key":"copies of","Fragments":["message."]},{"Key":"of message.","Fragments":["That's"]},{"Key":"message. That's","Fragments":["why"]},{"Key":"That's why","Fragments":["I"]},{"Key":"am not","Fragments":["sure","the","sure","sure"]},{"Key":"if pattern","Fragments":["matching"]},{"Key":"matching is","Fragments":["a","much"]},{"Key":"perfect fit","Fragments":["for"]},{"Key":"fit for","Fragments":["this"]},{"Key":"this problem","Fragments":["(here"]},{"Key":"problem (here","Fragments":["is"]},{"Key":"(here is","Fragments":["just"]},{"Key":"just used","Fragments":["as"]},{"Key":"as an","Fragments":["alternative"]},{"Key":"an alternative","Fragments":["if-elseIf)","way"]},{"Key":" Usage","Fragments":["of"]},{"Key":"Usage of","Fragments":["return"]},{"Key":"of return","Fragments":["is"]},{"Key":"is usually","Fragments":["frowned"]},{"Key":"usually frowned","Fragments":["upon"]},{"Key":"frowned upon","Fragments":["in"]},{"Key":"upon in","Fragments":["the"]},{"Key":"could delete","Fragments":["the"]},{"Key":"delete the","Fragments":["returns"]},{"Key":"the returns","Fragments":["and"]},{"Key":"function an","Fragments":["if-elseIf"]},{"Key":"an if-elseIf","Fragments":["cascade."]},{"Key":"if-elseIf cascade.","Fragments":["Not"]},{"Key":"cascade. Not","Fragments":["much"]},{"Key":"Not much","Fragments":["prettier"]},{"Key":"much prettier","Fragments":["but"]},{"Key":"prettier but","Fragments":["idiomatic"]},{"Key":"but idiomatic","Fragments":[";)"]},{"Key":"don't find","Fragments":["the"]},{"Key":"the Enumeration","Fragments":["too"]},{"Key":"Enumeration too","Fragments":["useful."]},{"Key":"too useful.","Fragments":["It"]},{"Key":"useful. It","Fragments":["would"]},{"Key":"probably cool","Fragments":["if"]},{"Key":"cool if","Fragments":["you"]},{"Key":"you did","Fragments":["some","makes","for"]},{"Key":"did some","Fragments":["localization"]},{"Key":"some localization","Fragments":["but"]},{"Key":"localization but","Fragments":["I"]},{"Key":"that String","Fragments":["constants"]},{"Key":"String constants","Fragments":["would"]},{"Key":"constants would","Fragments":["have"]},{"Key":"have been","Fragments":["sufficient","a","able","overkill"]},{"Key":"been sufficient","Fragments":["here."]},{"Key":"my earlier","Fragments":["version"]},{"Key":"earlier version","Fragments":["I"]},{"Key":"version I","Fragments":["hated"]},{"Key":"I hated","Fragments":["that"]},{"Key":"hated that","Fragments":["I"]},{"Key":"original msg","Fragments":["parameter"]},{"Key":"msg parameter","Fragments":["around"]},{"Key":"parameter around","Fragments":["that"]},{"Key":"around that","Fragments":["much."]},{"Key":"that much.","Fragments":["I"]},{"Key":"much. I","Fragments":["know"]},{"Key":"know not","Fragments":["everybody"]},{"Key":"not everybody","Fragments":["likes"]},{"Key":"everybody likes","Fragments":["this"]},{"Key":"likes this","Fragments":["functional/point-free"]},{"Key":"this functional/point-free","Fragments":["style"]},{"Key":"functional/point-free style","Fragments":["but"]},{"Key":"style but","Fragments":["it"]},{"Key":"it feels","Fragments":["better"]},{"Key":"feels better","Fragments":["to"]},{"Key":"Would I","Fragments":["use"]},{"Key":"I use","Fragments":["this","triple","-"]},{"Key":"use this","Fragments":["in","more"]},{"Key":"in company","Fragments":["code?"]},{"Key":"company code?","Fragments":["Depends"]},{"Key":"code? Depends","Fragments":["on"]},{"Key":"Depends on","Fragments":["the"]},{"Key":"the team","Fragments":[":)"]},{"Key":"Not too","Fragments":["sure"]},{"Key":"too sure","Fragments":["about"]},{"Key":"the RuleMaker","Fragments":["class"]},{"Key":"RuleMaker class","Fragments":["though."]},{"Key":"class though.","Fragments":["Appears"]},{"Key":"though. Appears","Fragments":["to"]},{"Key":"Appears to","Fragments":["be"]},{"Key":"be overkill.","Fragments":["But"]},{"Key":"overkill. But","Fragments":["it"]},{"Key":"it all","Fragments":["look"]},{"Key":"all look","Fragments":["like"]},{"Key":"look like","Fragments":["some"]},{"Key":"some semi-DSL","Fragments":["and"]},{"Key":"semi-DSL and","Fragments":["might"]},{"Key":"be nice","Fragments":["on"]},{"Key":"nice on","Fragments":["bigger"]},{"Key":"on bigger","Fragments":["rule"]},{"Key":"bigger rule","Fragments":["sets."]},{"Key":"scala Strings","Fragments":["can"]},{"Key":"Strings can","Fragments":["be"]},{"Key":"be considered","Fragments":["as"]},{"Key":"considered as","Fragments":["Lists"]},{"Key":"as Lists","Fragments":["of"]},{"Key":"Lists of","Fragments":["Char"]},{"Key":"of Char","Fragments":["(actually"]},{"Key":"Char (actually","Fragments":["Iterables"]},{"Key":"(actually Iterables","Fragments":["but"]},{"Key":"Iterables but","Fragments":["I"]},{"Key":"I doubt","Fragments":["that"]},{"Key":"doubt that","Fragments":["would"]},{"Key":"that would","Fragments":["help).","introduce","enable","look","break","simplify","make"]},{"Key":"would help).","Fragments":["So"]},{"Key":"help). So","Fragments":["your"]},{"Key":"So your","Fragments":["hasLetters"]},{"Key":"your hasLetters","Fragments":["function"]},{"Key":"hasLetters function","Fragments":["could"]},{"Key":"be defined","Fragments":["as:","a"]},{"Key":" statement.exists(","Fragments":["_.isLetter)"]},{"Key":" All","Fragments":["your"]},{"Key":"All your","Fragments":["functions"]},{"Key":"your functions","Fragments":["except"]},{"Key":"functions except","Fragments":["hasLetters"]},{"Key":"except hasLetters","Fragments":["consist"]},{"Key":"hasLetters consist","Fragments":["only"]},{"Key":"consist only","Fragments":["of"]},{"Key":"only of","Fragments":["a","your"]},{"Key":"simple statement.","Fragments":["So"]},{"Key":"statement. So","Fragments":["(including"]},{"Key":"So (including","Fragments":["the"]},{"Key":"(including the","Fragments":["class"]},{"Key":"the class","Fragments":["definition)","stick","itself"]},{"Key":"class definition)","Fragments":["I"]},{"Key":"definition) I","Fragments":["only"]},{"Key":"I only","Fragments":["see"]},{"Key":"only see","Fragments":["2"]},{"Key":"see 2","Fragments":["pairs"]},{"Key":"2 pairs","Fragments":["of"]},{"Key":"of curly","Fragments":["braces"]},{"Key":"braces that","Fragments":["are"]},{"Key":"that are","Fragments":["really","not","available.","not"]},{"Key":"are really","Fragments":["mandatory","nice"]},{"Key":"really mandatory","Fragments":[";)"]},{"Key":"could not","Fragments":["quite","get"]},{"Key":"not quite","Fragments":["agree","happy"]},{"Key":"quite agree","Fragments":["with"]},{"Key":"with that,","Fragments":["given"]},{"Key":"that, given","Fragments":["the"]},{"Key":"the structure","Fragments":["of"]},{"Key":"structure of","Fragments":["the"]},{"Key":"the ```hey```","Fragments":["method."]},{"Key":"```hey``` method.","Fragments":["But"]},{"Key":"method. But","Fragments":["I"]},{"Key":"found a","Fragments":["way","method"]},{"Key":"way using","Fragments":["pattern"]},{"Key":"matching, something","Fragments":["I"]},{"Key":"something I","Fragments":["could"]},{"Key":"not get","Fragments":["to"]},{"Key":"work earlier.","Fragments":["See"]},{"Key":"earlier. See","Fragments":["the"]},{"Key":"See the","Fragments":["next","count()"]},{"Key":"I'm pretty","Fragments":["new","new","new"]},{"Key":"pretty new","Fragments":["to","to","to","to"]},{"Key":"to regular","Fragments":["expressions"]},{"Key":"expressions in","Fragments":["scala."]},{"Key":"in scala.","Fragments":["Does"]},{"Key":"scala. Does","Fragments":["anyone"]},{"Key":"Does anyone","Fragments":["know","have"]},{"Key":"anyone know","Fragments":["how"]},{"Key":"get rid","Fragments":["of","of","of"]},{"Key":"of these","Fragments":["```.*```?","functions","early"]},{"Key":" Scalas","Fragments":["`iterable`"]},{"Key":"Scalas `iterable`","Fragments":["defines"]},{"Key":"`iterable` defines","Fragments":["this"]},{"Key":"defines this","Fragments":["function:"]},{"Key":"this function:","Fragments":["`def"]},{"Key":" count(p:","Fragments":["(A)"]},{"Key":"count(p: (A)","Fragments":["⇒"]},{"Key":"(A) ⇒","Fragments":["Boolean):"]},{"Key":"⇒ Boolean):","Fragments":["Int`"]},{"Key":" guess","Fragments":["this"]},{"Key":"guess this","Fragments":["could"]},{"Key":"this could","Fragments":["make"]},{"Key":" just","Fragments":["out"]},{"Key":"just out","Fragments":["of"]},{"Key":"of curiosity:","Fragments":["why"]},{"Key":"curiosity: why","Fragments":["do"]},{"Key":"you define","Fragments":["a"]},{"Key":"that (regarding","Fragments":["the"]},{"Key":"(regarding the","Fragments":["pattern"]},{"Key":"pattern matching)","Fragments":["and"]},{"Key":"matching) and","Fragments":["after"]},{"Key":"and after","Fragments":["reviewing"]},{"Key":"after reviewing","Fragments":["some"]},{"Key":"reviewing some","Fragments":["other"]},{"Key":"some other","Fragments":["solutions","peoples","users","submissions."]},{"Key":"other solutions","Fragments":["it","to"]},{"Key":"solutions it","Fragments":["appears"]},{"Key":"it appears","Fragments":["to"]},{"Key":"appears to","Fragments":["be"]},{"Key":"most popular","Fragments":["approach."]},{"Key":"quite happy","Fragments":["with"]},{"Key":"it. It","Fragments":["doesn't","hasn't"]},{"Key":"really use","Fragments":["the"]},{"Key":"matching since","Fragments":["we"]},{"Key":"since we","Fragments":["are"]},{"Key":"we are","Fragments":["only","not"]},{"Key":"only matching","Fragments":["against"]},{"Key":"against an","Fragments":["untyped"]},{"Key":"an untyped","Fragments":["variable"]},{"Key":"untyped variable","Fragments":["and"]},{"Key":"variable and","Fragments":["the"]},{"Key":"the guards","Fragments":["do"]},{"Key":"guards do","Fragments":["all"]},{"Key":"do all","Fragments":["the","tests"]},{"Key":"the work.","Fragments":["This"]},{"Key":"work. This","Fragments":["is"]},{"Key":"is why","Fragments":["I"]},{"Key":"didn't propose","Fragments":["pattern"]},{"Key":"propose pattern","Fragments":["matching"]},{"Key":"matching in","Fragments":["your"]},{"Key":"your last","Fragments":["iteration."]},{"Key":"There however","Fragments":["some"]},{"Key":"however some","Fragments":["very"]},{"Key":"some very","Fragments":["elegant"]},{"Key":"very elegant","Fragments":["solutions"]},{"Key":"elegant solutions","Fragments":["that"]},{"Key":"solutions that","Fragments":["build"]},{"Key":"that build","Fragments":["on"]},{"Key":"build on","Fragments":["objects"]},{"Key":"on objects","Fragments":["with"]},{"Key":"objects with","Fragments":["their","`unapply`"]},{"Key":"with their","Fragments":["own"]},{"Key":"own `unapply`","Fragments":["definitions:"]},{"Key":"case object","Fragments":["Question"]},{"Key":"object Question","Fragments":["{","{"]},{"Key":"def unapply(statement:","Fragments":["String)"]},{"Key":"unapply(statement: String)","Fragments":["="]},{"Key":" and","Fragments":["then","not","let","it"]},{"Key":" class","Fragments":["Bob"]},{"Key":"class Bob","Fragments":["{"]},{"Key":" hey(statement:String):String","Fragments":["={"]},{"Key":"case Question()","Fragments":["=\u003e"]},{"Key":"Question() =\u003e","Fragments":["\"Sure.\""]},{"Key":" Hi","Fragments":["there.","@marlon,","-","guys,"]},{"Key":"A nice","Fragments":["solution."]},{"Key":" 2","Fragments":["things"]},{"Key":"2 things","Fragments":["come"]},{"Key":"things come","Fragments":["to"]},{"Key":"come to","Fragments":["mind:"]},{"Key":" 1)","Fragments":["Lists"]},{"Key":"1) Lists","Fragments":["(actually"]},{"Key":"Lists (actually","Fragments":["Iterables)"]},{"Key":"(actually Iterables)","Fragments":["provide"]},{"Key":"Iterables) provide","Fragments":["a"]},{"Key":"provide a","Fragments":["function"]},{"Key":"function `count`","Fragments":["that"]},{"Key":"`count` that","Fragments":["takes"]},{"Key":"that takes","Fragments":["a"]},{"Key":"takes a","Fragments":["predicate.","predicate","predicate"]},{"Key":"a predicate.","Fragments":["You"]},{"Key":"predicate. You","Fragments":["could"]},{"Key":"use it","Fragments":["to","to","in","to"]},{"Key":"to seriously","Fragments":["simplify"]},{"Key":"seriously simplify","Fragments":["your"]},{"Key":"simplify your","Fragments":["code.","code.","code.","pattern","solution."]},{"Key":" 2)","Fragments":["I've"]},{"Key":"2) I've","Fragments":["learned"]},{"Key":"I've learned","Fragments":["the"]},{"Key":"learned the","Fragments":["hard"]},{"Key":"the hard","Fragments":["way"]},{"Key":"hard way","Fragments":["to"]},{"Key":"to stay","Fragments":["away"]},{"Key":"stay away","Fragments":["from"]},{"Key":"away from","Fragments":["too","trying"]},{"Key":"from too","Fragments":["much"]},{"Key":"much point-and-bracketless","Fragments":["syntax."]},{"Key":"point-and-bracketless syntax.","Fragments":["It's"]},{"Key":"syntax. It's","Fragments":["a"]},{"Key":"It's a","Fragments":["nice","good"]},{"Key":"a nice","Fragments":["feature","little","name.","name"]},{"Key":"nice feature","Fragments":["(specially"]},{"Key":"feature (specially","Fragments":["for"]},{"Key":"(specially for","Fragments":["DSLs)"]},{"Key":"for DSLs)","Fragments":["but"]},{"Key":"DSLs) but","Fragments":["in"]},{"Key":"your case","Fragments":["it"]},{"Key":"to \"parse\"","Fragments":["than"]},{"Key":"\"parse\" than","Fragments":["it"]},{"Key":"than it","Fragments":["should","should","needs"]},{"Key":"it should","Fragments":["be.","use","be","be.","work"]},{"Key":"should be.","Fragments":["I'd"]},{"Key":"be. I'd","Fragments":["resort"]},{"Key":"I'd resort","Fragments":["to"]},{"Key":"resort to","Fragments":["classical"]},{"Key":"to classical","Fragments":["syntax"]},{"Key":"classical syntax","Fragments":["or"]},{"Key":"syntax or","Fragments":["put"]},{"Key":"or put","Fragments":["brackets"]},{"Key":"put brackets","Fragments":["around"]},{"Key":"brackets around","Fragments":["`(x"]},{"Key":"around `(x","Fragments":["zip"]},{"Key":"`(x zip","Fragments":["y)`."]},{"Key":"good overall.","Fragments":["Great"]},{"Key":"overall. Great","Fragments":["use"]},{"Key":"Great use","Fragments":["of","of"]},{"Key":"of immutable","Fragments":["map,"]},{"Key":"immutable map,","Fragments":["type"]},{"Key":"map, type","Fragments":["aliases"]},{"Key":"type aliases","Fragments":["increase"]},{"Key":"aliases increase","Fragments":["readability."]},{"Key":"In add(),","Fragments":["you"]},{"Key":"add(), you","Fragments":["can"]},{"Key":"use map's","Fragments":["getOrElseUpdate"]},{"Key":"map's getOrElseUpdate","Fragments":["to"]},{"Key":"getOrElseUpdate to","Fragments":["initialize"]},{"Key":"to initialize","Fragments":["the"]},{"Key":"initialize the","Fragments":["empty"]},{"Key":"the empty","Fragments":["element"]},{"Key":"empty element","Fragments":["instead"]},{"Key":"element instead","Fragments":["and"]},{"Key":"instead and","Fragments":["simplify"]},{"Key":"and simplify","Fragments":["your"]},{"Key":"the comment.","Fragments":["I"]},{"Key":"comment. I","Fragments":["changed"]},{"Key":"I changed","Fragments":["it","the"]},{"Key":"changed it","Fragments":["up"]},{"Key":"up a","Fragments":["little"]},{"Key":"little by","Fragments":["defaulting"]},{"Key":"by defaulting","Fragments":["the"]},{"Key":"defaulting the","Fragments":["Roster"]},{"Key":"the Roster","Fragments":["to"]},{"Key":"Roster to","Fragments":["a"]},{"Key":"a Map","Fragments":["`withDefaultValue`","with","with"]},{"Key":"Map `withDefaultValue`","Fragments":["of"]},{"Key":"`withDefaultValue` of","Fragments":["`Seq()`."]},{"Key":"of `Seq()`.","Fragments":["This"]},{"Key":"`Seq()`. This","Fragments":["cleans"]},{"Key":"This cleans","Fragments":["up"]},{"Key":"cleans up","Fragments":["the","the"]},{"Key":"the `add(...)`","Fragments":["function"]},{"Key":"`add(...)` function","Fragments":["and"]},{"Key":"function and","Fragments":["anywhere","collapse","the","then","then","then","also","returns","returns"]},{"Key":"and anywhere","Fragments":["else"]},{"Key":"anywhere else","Fragments":["I"]},{"Key":"else I","Fragments":["called"]},{"Key":"I called","Fragments":["`getOrElse`."]},{"Key":"Very clean","Fragments":["and"]},{"Key":"clean and","Fragments":["elegant.","effective."]},{"Key":"and elegant.","Fragments":["Nice"]},{"Key":"elegant. Nice","Fragments":["job."]},{"Key":"just starting","Fragments":["with"]},{"Key":"starting with","Fragments":["Scala","a"]},{"Key":"so any","Fragments":["tips"]},{"Key":"any tips","Fragments":["are"]},{"Key":"tips are","Fragments":["greatly"]},{"Key":"are greatly","Fragments":["appreciated."]},{"Key":"The `quiet","Fragments":["!="]},{"Key":"`quiet !=","Fragments":["loud`"]},{"Key":"!= loud`","Fragments":["might"]},{"Key":"loud` might","Fragments":["look"]},{"Key":"bit odd.","Fragments":["I"]},{"Key":"odd. I","Fragments":["wanted"]},{"Key":"something more","Fragments":["thorough","descriptive"]},{"Key":"more thorough","Fragments":["than"]},{"Key":"thorough than","Fragments":["just"]},{"Key":"just checking","Fragments":["for"]},{"Key":"checking for","Fragments":["basic"]},{"Key":"for basic","Fragments":["A-Z"]},{"Key":"basic A-Z","Fragments":["characters."]},{"Key":"A-Z characters.","Fragments":["I"]},{"Key":"characters. I","Fragments":["figured"]},{"Key":"figured if","Fragments":["nothing"]},{"Key":"if nothing","Fragments":["changed"]},{"Key":"nothing changed","Fragments":["case"]},{"Key":"changed case","Fragments":["then"]},{"Key":"case then","Fragments":["we"]},{"Key":"then we","Fragments":["probably"]},{"Key":"we probably","Fragments":["don't"]},{"Key":"probably don't","Fragments":["have"]},{"Key":"have any","Fragments":["letters"]},{"Key":"any letters","Fragments":["being"]},{"Key":"letters being","Fragments":["dealt"]},{"Key":"being dealt","Fragments":["with."]},{"Key":"dealt with.","Fragments":["Hopefully"]},{"Key":"with. Hopefully","Fragments":["it'll"]},{"Key":"Hopefully it'll","Fragments":["be"]},{"Key":"it'll be","Fragments":["a"]},{"Key":"more multilingual","Fragments":["friendly."]},{"Key":" Line","Fragments":["8"]},{"Key":"Line 8","Fragments":["is"]},{"Key":"8 is","Fragments":["quite"]},{"Key":"is quite","Fragments":["messy.","an","useful.","hard"]},{"Key":"quite messy.","Fragments":["You"]},{"Key":"messy. You","Fragments":["should"]},{"Key":"You should","Fragments":["use","have","try","have","take"]},{"Key":"should use","Fragments":["filter","`x`."]},{"Key":"use filter","Fragments":["function"]},{"Key":"filter function","Fragments":["on"]},{"Key":"function on","Fragments":["the","the"]},{"Key":"input sequence","Fragments":["to"]},{"Key":"sequence to","Fragments":["avoid"]},{"Key":"using mutable","Fragments":["variable."]},{"Key":"you considered","Fragments":["combining"]},{"Key":"considered combining","Fragments":["your"]},{"Key":"combining your","Fragments":["first"]},{"Key":"your first","Fragments":["two","test,"]},{"Key":" Consider","Fragments":["`count`.","refactoring","using","using"]},{"Key":"Nice tail","Fragments":["recursive"]},{"Key":"tail recursive","Fragments":["solution.","solution","function."]},{"Key":"recursive solution.","Fragments":["To"]},{"Key":"solution. To","Fragments":["make"]},{"Key":"little more","Fragments":["concise,","Scalay","clear."]},{"Key":"concise, there's","Fragments":["a"]},{"Key":"nice little","Fragments":["utility"]},{"Key":"little utility","Fragments":["function"]},{"Key":"utility function","Fragments":["[`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps)"]},{"Key":"function [`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps)","Fragments":["that"]},{"Key":"[`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps) that","Fragments":["may"]},{"Key":"be beneficial","Fragments":["to"]},{"Key":"beneficial to","Fragments":["use."]},{"Key":"Nice fold","Fragments":[":)"]},{"Key":"may want","Fragments":["to"]},{"Key":"check out","Fragments":["`groupBy`"]},{"Key":"out `groupBy`","Fragments":["on"]},{"Key":"`groupBy` on","Fragments":["`List`","a"]},{"Key":"on `List`","Fragments":["too."]},{"Key":" Does","Fragments":["anyone"]},{"Key":"anyone have","Fragments":["an"]},{"Key":"an idea","Fragments":["on"]},{"Key":"idea on","Fragments":["how"]},{"Key":"on how","Fragments":["to","you"]},{"Key":"the `filter`","Fragments":["?","twice","on"]},{"Key":" Can","Fragments":["you","you","you","you"]},{"Key":"you explain","Fragments":["why","why","why"]},{"Key":"explain why","Fragments":["you","you","did"]},{"Key":"you chose","Fragments":["to","to","to"]},{"Key":"chose to","Fragments":["use","write","use","leave","make"]},{"Key":"use `{","Fragments":["case"]},{"Key":"`{ case","Fragments":["(a,b)"]},{"Key":"case (a,b)","Fragments":["=\u003e"]},{"Key":"(a,b) =\u003e","Fragments":["a"]},{"Key":"=\u003e a","Fragments":["!=","!="]},{"Key":"a !=","Fragments":["b","b"]},{"Key":"!= b","Fragments":["}`","}`"]},{"Key":"b }`","Fragments":["instead"]},{"Key":"}` instead","Fragments":["of","of","of"]},{"Key":"of something","Fragments":["like","like:"]},{"Key":"like `p","Fragments":["=\u003e"]},{"Key":"`p =\u003e","Fragments":["p._1","p._1"]},{"Key":"=\u003e p._1","Fragments":["!=","!="]},{"Key":"p._1 !=","Fragments":["p._2`?","p._2`?"]},{"Key":"you try","Fragments":["to"]},{"Key":"solution without","Fragments":["`letterWeight`,"]},{"Key":"without `letterWeight`,","Fragments":["maybe"]},{"Key":"`letterWeight`, maybe","Fragments":["by"]},{"Key":"maybe by","Fragments":["using"]},{"Key":"by using","Fragments":["`sorted`?","only","the","``case``.","the"]},{"Key":"write `","Fragments":["{"]},{"Key":"` {","Fragments":["case"]},{"Key":"y }`","Fragments":["instead"]},{"Key":"something like:","Fragments":["`p"]},{"Key":"like: `p","Fragments":["=\u003e"]},{"Key":"the Stream","Fragments":["of"]},{"Key":"Stream of","Fragments":["names,"]},{"Key":"of names,","Fragments":["it"]},{"Key":"names, it","Fragments":["is"]},{"Key":"very fuctional","Fragments":["way."]},{"Key":" Random","Fragments":["has"]},{"Key":"Random has","Fragments":["it's"]},{"Key":"has it's","Fragments":["own"]},{"Key":"it's own","Fragments":["companion","val"]},{"Key":"own companion","Fragments":["object"]},{"Key":"actually create","Fragments":["an"]},{"Key":"of it","Fragments":["to"]},{"Key":"the `generateNumber`","Fragments":["method"]},{"Key":"`generateNumber` method","Fragments":["could"]},{"Key":"method could","Fragments":["benefit","be"]},{"Key":"could benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["a","the"]},{"Key":"a renaming.","Fragments":["\"Generate\""]},{"Key":"renaming. \"Generate\"","Fragments":["implies"]},{"Key":"\"Generate\" implies","Fragments":["to"]},{"Key":"implies to","Fragments":["me"]},{"Key":"me a","Fragments":["\"random\"","lot.","moment"]},{"Key":"a \"random\"","Fragments":["creation"]},{"Key":"\"random\" creation","Fragments":["of"]},{"Key":"a number,","Fragments":["where"]},{"Key":"number, where","Fragments":["this"]},{"Key":"where this","Fragments":["method"]},{"Key":"this method","Fragments":["converts"]},{"Key":"method converts","Fragments":["a"]},{"Key":"converts a","Fragments":["string"]},{"Key":"string to","Fragments":["a"]},{"Key":"think this","Fragments":["is","is","would","is","will","is","looks","is","might"]},{"Key":"than your","Fragments":["previous"]},{"Key":"your previous","Fragments":["submition?"]},{"Key":"previous submition?","Fragments":["Using"]},{"Key":"submition? Using","Fragments":["the"]},{"Key":"Using the","Fragments":["pattern","for-comprehension","triple-quote"]},{"Key":"matching syntactic","Fragments":["sugar"]},{"Key":"syntactic sugar","Fragments":["makes"]},{"Key":"sugar makes","Fragments":["things"]},{"Key":"makes things","Fragments":["more","more"]},{"Key":"things more","Fragments":["readable.","readable."]},{"Key":"I felt","Fragments":["like","like"]},{"Key":"felt like","Fragments":["it","pulling"]},{"Key":"like it","Fragments":["was"]},{"Key":"was working","Fragments":["with"]},{"Key":"working with","Fragments":["a"]},{"Key":"a pair","Fragments":["and","of"]},{"Key":"pair and","Fragments":["comparing"]},{"Key":"and comparing","Fragments":["them."]},{"Key":"comparing them.","Fragments":["It's"]},{"Key":"them. It's","Fragments":["definitely"]},{"Key":"It's definitely","Fragments":["debatable"]},{"Key":"definitely debatable","Fragments":["though."]},{"Key":" Cool,","Fragments":["but"]},{"Key":"Cool, but","Fragments":["a"]},{"Key":"but a","Fragments":["simple","neat","safer"]},{"Key":"simple boolean","Fragments":["expression"]},{"Key":"boolean expression","Fragments":["would"]},{"Key":"expression would","Fragments":["be"]},{"Key":"better readable","Fragments":["and"]},{"Key":"readable and","Fragments":["more","easy"]},{"Key":"efficient (as","Fragments":["if"]},{"Key":"(as if","Fragments":["it"]},{"Key":"takes some","Fragments":["time"]},{"Key":"some time","Fragments":["to","looking"]},{"Key":"time to","Fragments":["understand,"]},{"Key":"understand, but","Fragments":["it","it"]},{"Key":"is very","Fragments":["nice","idiomatic","procedural.","interesting."]},{"Key":"should have","Fragments":["used","been","guessed","one"]},{"Key":"used either","Fragments":["the"]},{"Key":"either the","Fragments":["```flatMap```"]},{"Key":"the ```flatMap```","Fragments":["that","method."]},{"Key":"```flatMap``` that","Fragments":["makes"]},{"Key":"that makes","Fragments":["exactly","your","the","any","clear"]},{"Key":"makes exactly","Fragments":["what"]},{"Key":"your ```foldLeft```","Fragments":["+"]},{"Key":"```foldLeft``` +","Fragments":["concatenation"]},{"Key":"+ concatenation","Fragments":["does,"]},{"Key":"concatenation does,","Fragments":["but"]},{"Key":"does, but","Fragments":["probably"]},{"Key":"but probably","Fragments":["a"]},{"Key":"more efficiently.","Fragments":["Another"]},{"Key":"efficiently. Another","Fragments":["fancy"]},{"Key":"Another fancy","Fragments":["way"]},{"Key":"fancy way","Fragments":["would"]},{"Key":"way would","Fragments":["be","be"]},{"Key":"be using","Fragments":["the"]},{"Key":"the ```for(...)","Fragments":["yield```"]},{"Key":"```for(...) yield```","Fragments":["syntactic"]},{"Key":"yield``` syntactic","Fragments":["sugar,"]},{"Key":"syntactic sugar,","Fragments":["which"]},{"Key":"sugar, which","Fragments":["in"]},{"Key":"which in","Fragments":["fact"]},{"Key":"in fact","Fragments":["only","valid."]},{"Key":"fact only","Fragments":["an"]},{"Key":"only an","Fragments":["alias"]},{"Key":"an alias","Fragments":["for"]},{"Key":"alias for","Fragments":["the"]},{"Key":"First a","Fragments":["small"]},{"Key":"a small","Fragments":["naming","nitpick.","problem."]},{"Key":"small naming","Fragments":["convention"]},{"Key":"naming convention","Fragments":["thing,"]},{"Key":"convention thing,","Fragments":["in"]},{"Key":"thing, in","Fragments":["Scala"]},{"Key":"Scala it","Fragments":["is"]},{"Key":"is customary","Fragments":["to"]},{"Key":"customary to","Fragments":["use"]},{"Key":"use camelCase","Fragments":["for"]},{"Key":"camelCase for","Fragments":["methods,"]},{"Key":"for methods,","Fragments":["`val`'s"]},{"Key":"methods, `val`'s","Fragments":["and"]},{"Key":"`val`'s and","Fragments":["`var`'s,"]},{"Key":"and `var`'s,","Fragments":["see"]},{"Key":"`var`'s, see","Fragments":["[here](http://docs.scala-lang.org/style/naming-conventions.html)"]},{"Key":"see [here](http://docs.scala-lang.org/style/naming-conventions.html)","Fragments":["for"]},{"Key":"[here](http://docs.scala-lang.org/style/naming-conventions.html) for","Fragments":["the"]},{"Key":"the details.","Fragments":["Next"]},{"Key":"details. Next","Fragments":["Scala"]},{"Key":"Next Scala","Fragments":["has"]},{"Key":"the [`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","Fragments":["function","function","function"]},{"Key":"[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$) function","Fragments":["that","you","for"]},{"Key":"makes your","Fragments":["two"]},{"Key":"your two","Fragments":["`validate_...`"]},{"Key":"two `validate_...`","Fragments":["methods"]},{"Key":"`validate_...` methods","Fragments":["superfluous."]},{"Key":"methods superfluous.","Fragments":["The"]},{"Key":"superfluous. The","Fragments":["`if`"]},{"Key":"The `if`","Fragments":["expression"]},{"Key":"is superfluous","Fragments":["as"]},{"Key":"superfluous as","Fragments":["well"]},{"Key":"well `count`","Fragments":["will"]},{"Key":"`count` will","Fragments":["return"]},{"Key":"return `0`","Fragments":["if"]},{"Key":"`0` if","Fragments":["no"]},{"Key":"if no","Fragments":["matching","letters"]},{"Key":"no matching","Fragments":["`nucleotide`"]},{"Key":"matching `nucleotide`","Fragments":["is"]},{"Key":"`nucleotide` is","Fragments":["found."]},{"Key":"is found.","Fragments":["You"]},{"Key":"found. You","Fragments":["might"]},{"Key":"also consider","Fragments":["changing"]},{"Key":"the `dna_nucleotides`","Fragments":["and"]},{"Key":"`dna_nucleotides` and","Fragments":["`all_nucleotides`"]},{"Key":"and `all_nucleotides`","Fragments":["to"]},{"Key":"`all_nucleotides` to","Fragments":["`val`'s."]},{"Key":"should try","Fragments":["to"]},{"Key":"using explicit","Fragments":["recursion."]},{"Key":"explicit recursion.","Fragments":["Have"]},{"Key":"recursion. Have","Fragments":["a"]},{"Key":"Have a","Fragments":["look","look"]},{"Key":"the ```zip```","Fragments":["function"]},{"Key":"```zip``` function","Fragments":["that",";)"]},{"Key":"on most","Fragments":["of"]},{"Key":"the collections,","Fragments":["you"]},{"Key":"collections, you","Fragments":["may"]},{"Key":"you may","Fragments":["find"]},{"Key":"may find","Fragments":["it"]},{"Key":"the tail","Fragments":["recursive","recursion."]},{"Key":"recursive solution","Fragments":["you've"]},{"Key":"solution you've","Fragments":["written"]},{"Key":"you've written","Fragments":["you"]},{"Key":"written you","Fragments":["would"]},{"Key":"would suggest","Fragments":["using"]},{"Key":"suggest using","Fragments":["pattern"]},{"Key":"the boolean","Fragments":["conditions."]},{"Key":"boolean conditions.","Fragments":["It"]},{"Key":"conditions. It","Fragments":["could"]},{"Key":"It could","Fragments":["make","be","make"]},{"Key":"the could","Fragments":["a"]},{"Key":"could a","Fragments":["bit"]},{"Key":"With this","Fragments":["solution"]},{"Key":"this solution","Fragments":["the","with","doesn't","is"]},{"Key":"solution the","Fragments":["'knowledge'"]},{"Key":"the 'knowledge'","Fragments":["of","of"]},{"Key":"'knowledge' of","Fragments":["what","what"]},{"Key":"the correct","Fragments":["dna","results."]},{"Key":"correct dna","Fragments":["nucleotides"]},{"Key":"dna nucleotides","Fragments":["are,"]},{"Key":"nucleotides are,","Fragments":["is"]},{"Key":"are, is","Fragments":["repeated"]},{"Key":"is repeated","Fragments":["three"]},{"Key":"repeated three","Fragments":["times,"]},{"Key":"three times,","Fragments":["can"]},{"Key":"times, can","Fragments":["you"]},{"Key":"to reduce","Fragments":["this","duplication?"]},{"Key":"reduce this","Fragments":["to"]},{"Key":"this to","Fragments":["only","just"]},{"Key":"to only","Fragments":["once."]},{"Key":"only once.","Fragments":["Furthermore","However,","This"]},{"Key":"once. Furthermore","Fragments":["Scala"]},{"Key":"Furthermore Scala","Fragments":["provides"]},{"Key":"provides the","Fragments":["[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)"]},{"Key":"function you","Fragments":["could"]},{"Key":"argument validation","Fragments":["more"]},{"Key":"validation more","Fragments":["concise."]},{"Key":"Some naming","Fragments":["conventions,"]},{"Key":"naming conventions,","Fragments":["it"]},{"Key":"conventions, it","Fragments":["is"]},{"Key":"not customary","Fragments":["in"]},{"Key":"customary in","Fragments":["Scala"]},{"Key":"Scala to","Fragments":["make","hate"]},{"Key":"make `val`'s","Fragments":["shout"]},{"Key":"`val`'s shout","Fragments":["at"]},{"Key":"shout at","Fragments":["you"]},{"Key":"at you","Fragments":["since"]},{"Key":"you since","Fragments":["they"]},{"Key":"since they","Fragments":["are","only","have"]},{"Key":"are preferred","Fragments":["over"]},{"Key":"preferred over","Fragments":["`var`'s."]},{"Key":"over `var`'s.","Fragments":["`val`"]},{"Key":"`var`'s. `val`","Fragments":["names"]},{"Key":"`val` names","Fragments":["are"]},{"Key":"names are","Fragments":["in"]},{"Key":"in camelCase.","Fragments":["Scala's"]},{"Key":"camelCase. Scala's","Fragments":["[`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map)"]},{"Key":"Scala's [`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map)","Fragments":["has"]},{"Key":"[`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map) has","Fragments":["a"]},{"Key":"a `withDefaultValue`","Fragments":["method","which"]},{"Key":"`withDefaultValue` method","Fragments":["that"]},{"Key":"could really","Fragments":["simplify"]},{"Key":"really simplify","Fragments":["your"]},{"Key":"your code.","Fragments":["You"]},{"Key":"code. You","Fragments":["also"]},{"Key":"You also","Fragments":["might"]},{"Key":"also might","Fragments":["consider"]},{"Key":"might consider","Fragments":["using"]},{"Key":"consider using","Fragments":["the","```number.head```","a"]},{"Key":"for input","Fragments":["validation."]},{"Key":" @brody","Fragments":["nice!"]},{"Key":"@brody nice!","Fragments":["Thanks"]},{"Key":"a quite","Fragments":["nice"]},{"Key":"quite nice","Fragments":["solution,"]},{"Key":"nice solution,","Fragments":["can"]},{"Key":"solution, can","Fragments":["you"]},{"Key":"you make","Fragments":["it"]},{"Key":"concise by","Fragments":["maybe"]},{"Key":"by maybe","Fragments":["using"]},{"Key":"maybe using","Fragments":["the"]},{"Key":"the [`count`](http://www.scala-lang.org/api/current/#scala.collection.Iterable)","Fragments":["method?"]},{"Key":"about avoiding","Fragments":["the"]},{"Key":"avoiding the","Fragments":["try-catch"]},{"Key":"the try-catch","Fragments":["blocks?"]},{"Key":"try-catch blocks?","Fragments":["I"]},{"Key":"blocks? I","Fragments":["think"]},{"Key":"code would","Fragments":["be","be","be"]},{"Key":"read if","Fragments":["you"]},{"Key":"would handle","Fragments":["the"]},{"Key":"the IllegalArgumentExceptions","Fragments":["explicitly"]},{"Key":"using ```number.head```","Fragments":["instead"]},{"Key":"```number.head``` instead","Fragments":["of"]},{"Key":"of ```number.charAt(0)```","Fragments":["as"]},{"Key":"```number.charAt(0)``` as","Fragments":["well"]},{"Key":"well as","Fragments":["```input","you"]},{"Key":"as ```input","Fragments":["filter"]},{"Key":"```input filter","Fragments":["{c","{c"]},{"Key":"filter {c","Fragments":["=\u003e","=\u003e"]},{"Key":"{c =\u003e","Fragments":["c.isDigit}```","c"]},{"Key":"=\u003e c.isDigit}```","Fragments":["instead"]},{"Key":"c.isDigit}``` instead","Fragments":["of"]},{"Key":"of ```input","Fragments":["filter"]},{"Key":"=\u003e c","Fragments":["\u003e="]},{"Key":"c \u003e=","Fragments":["'0'"]},{"Key":"\u003e= '0'","Fragments":["\u0026\u0026"]},{"Key":"'0' \u0026\u0026","Fragments":["c"]},{"Key":"\u0026\u0026 c","Fragments":["\u003c="]},{"Key":"c \u003c=","Fragments":["'9'}```"]},{"Key":"quite an","Fragments":["elegant"]},{"Key":"an elegant","Fragments":["solution.","way"]},{"Key":"elegant solution.","Fragments":["Have"]},{"Key":"solution. Have","Fragments":["you"]},{"Key":"you heard","Fragments":["of"]},{"Key":"heard of","Fragments":["the"]},{"Key":"the [`require`](http://www.scala-lang.org/api/current/#scala.Predef$)","Fragments":["function"]},{"Key":"[`require`](http://www.scala-lang.org/api/current/#scala.Predef$) function","Fragments":["it"]},{"Key":"used to","Fragments":["make","the"]},{"Key":"input validation","Fragments":["a"]},{"Key":"validation a","Fragments":["bit"]},{"Key":"more succinct.","Fragments":["Furthermore"]},{"Key":"succinct. Furthermore","Fragments":["you"]},{"Key":"Furthermore you","Fragments":["might"]},{"Key":"might benefit","Fragments":["from"]},{"Key":"the [`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map)","Fragments":["method"]},{"Key":"[`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map) method","Fragments":["of"]},{"Key":"method of","Fragments":["[`immutable.Map`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map)."]},{"Key":"`getOrElse` method","Fragments":["in"]},{"Key":"method in","Fragments":["the","```String```","the"]},{"Key":"the `grade`","Fragments":["method"]},{"Key":"`grade` method","Fragments":["to"]},{"Key":"to deal","Fragments":["with"]},{"Key":"deal with","Fragments":["the","the"]},{"Key":"the a","Fragments":["possible"]},{"Key":"a possible","Fragments":["non-existing"]},{"Key":"possible non-existing","Fragments":["grade."]},{"Key":"non-existing grade.","Fragments":["You"]},{"Key":"grade. You","Fragments":["could"]},{"Key":"also use","Fragments":["`withDefaulValuet`","`withDefaultValue`","\"\\_.toLowerCase\""]},{"Key":"use `withDefaulValuet`","Fragments":["when"]},{"Key":"`withDefaulValuet` when","Fragments":["constructing"]},{"Key":"when constructing","Fragments":["the"]},{"Key":"constructing the","Fragments":["map."]},{"Key":"1. Look","Fragments":["into","into","into"]},{"Key":"Look into","Fragments":["`require`","`require`","`require`"]},{"Key":"into `require`","Fragments":["on","on","on"]},{"Key":"`require` on","Fragments":["`Predef`.","`Predef`.","`Predef`."]},{"Key":"on `Predef`.","Fragments":["It","It","It"]},{"Key":"`Predef`. It","Fragments":["throws","throws","throws"]},{"Key":"It throws","Fragments":["an","an","an"]},{"Key":"throws an","Fragments":["`IllegalArgumentException`","`IllegalArgumentException`","`IllegalArgumentException`","`IllegalArgumentException`"]},{"Key":"an `IllegalArgumentException`","Fragments":["and","and","and","if"]},{"Key":"`IllegalArgumentException` and","Fragments":["it'll","it'll","it'll"]},{"Key":"and it'll","Fragments":["clean","clean","clean"]},{"Key":"it'll clean","Fragments":["things","things","things"]},{"Key":"clean things","Fragments":["up.","up.","up."]},{"Key":"use `lazy","Fragments":["val`","val`"]},{"Key":"`lazy val`","Fragments":["for","for","rather","and","instead","?"]},{"Key":"val` for","Fragments":["`nucleotideCounts`","the"]},{"Key":"for `nucleotideCounts`","Fragments":["it'll"]},{"Key":"`nucleotideCounts` it'll","Fragments":["only"]},{"Key":"it'll only","Fragments":["run"]},{"Key":"only run","Fragments":["if"]},{"Key":"run if","Fragments":["called."]},{"Key":"if called.","Fragments":["Maybe"]},{"Key":"called. Maybe","Fragments":["the"]},{"Key":"Maybe the","Fragments":["same"]},{"Key":"same thing","Fragments":["on","or","without"]},{"Key":"thing on","Fragments":["`realNucleotideCounts`?"]},{"Key":"1. Maybe","Fragments":["use"]},{"Key":"Maybe use","Fragments":["`lazy"]},{"Key":"the `nucleotideCounts`","Fragments":["since","can"]},{"Key":"`nucleotideCounts` since","Fragments":["they"]},{"Key":"they only","Fragments":["need","get"]},{"Key":"only need","Fragments":["to"]},{"Key":"be computed","Fragments":["once?","more"]},{"Key":"2. Right","Fragments":["now"]},{"Key":"Right now","Fragments":["you're"]},{"Key":"now you're","Fragments":["repeating"]},{"Key":"you're repeating","Fragments":["the"]},{"Key":"repeating the","Fragments":["nucleotide"]},{"Key":"the nucleotide","Fragments":["letters","is"]},{"Key":"nucleotide letters","Fragments":["in"]},{"Key":"letters in","Fragments":["several"]},{"Key":"in several","Fragments":["places."]},{"Key":"several places.","Fragments":["I"]},{"Key":"places. I","Fragments":["went"]},{"Key":"a `Set`","Fragments":["containing"]},{"Key":"`Set` containing","Fragments":["the"]},{"Key":"containing the","Fragments":["letters"]},{"Key":"the letters","Fragments":["and"]},{"Key":"and used","Fragments":["it","it","`toLowerCase`"]},{"Key":"used it","Fragments":["to","without","in"]},{"Key":"to build/check","Fragments":["everything."]},{"Key":"build/check everything.","Fragments":["I"]},{"Key":"everything. I","Fragments":["was"]},{"Key":"was pretty","Fragments":["happy","easy"]},{"Key":"pretty happy","Fragments":["with"]},{"Key":"result and","Fragments":["I"]},{"Key":"wouldn't have","Fragments":["to"]},{"Key":"change anything","Fragments":["if"]},{"Key":"anything if","Fragments":["another"]},{"Key":"another letter","Fragments":["was"]},{"Key":"letter was","Fragments":["added"]},{"Key":"was added","Fragments":["(not"]},{"Key":"added (not","Fragments":["that"]},{"Key":"(not that","Fragments":["they're"]},{"Key":"that they're","Fragments":["going"]},{"Key":"they're going","Fragments":["to"]},{"Key":"find more","Fragments":["nucleotides"]},{"Key":"more nucleotides","Fragments":[":)"]},{"Key":"nucleotides :)","Fragments":[")."]},{"Key":":) ).","Fragments":["Anyway,"]},{"Key":"). Anyway,","Fragments":["it's"]},{"Key":"Anyway, it's","Fragments":["something"]},{"Key":"it's something","Fragments":["to"]},{"Key":" On","Fragments":["the"]},{"Key":"On the","Fragments":["whole","other","scale"]},{"Key":"the whole","Fragments":["this","if","string","map."]},{"Key":"whole this","Fragments":["looks"]},{"Key":"this looks","Fragments":["good","good!","really"]},{"Key":"looks good","Fragments":["to","-"]},{"Key":"me but","Fragments":["I'm"]},{"Key":"still very","Fragments":["new"]},{"Key":"very new","Fragments":["to"]},{"Key":"2. Some","Fragments":["of"]},{"Key":"Some of","Fragments":["this"]},{"Key":"this doesn't","Fragments":["need","work","matter"]},{"Key":"computed more","Fragments":["than"]},{"Key":"than once.","Fragments":["Maybe"]},{"Key":"once. Maybe","Fragments":["go"]},{"Key":"Maybe go","Fragments":["with"]},{"Key":"a `lazy","Fragments":["val`","val`","val`"]},{"Key":"val` rather","Fragments":["than"]},{"Key":"than `def`","Fragments":["for"]},{"Key":"`def` for","Fragments":["`nucleotideCounts`?"]},{"Key":"could extract","Fragments":["`\"ATCG\"`","the"]},{"Key":"extract `\"ATCG\"`","Fragments":["into"]},{"Key":"`\"ATCG\"` into","Fragments":["it's"]},{"Key":"into it's","Fragments":["own"]},{"Key":"own val","Fragments":["since"]},{"Key":"val since","Fragments":["you're"]},{"Key":"since you're","Fragments":["using"]},{"Key":"using it","Fragments":["in"]},{"Key":"in more","Fragments":["than"]},{"Key":"than one","Fragments":["place."]},{"Key":" BTW,","Fragments":["there"]},{"Key":"BTW, there","Fragments":["don't"]},{"Key":"there don't","Fragments":["seem"]},{"Key":"don't seem","Fragments":["to"]},{"Key":"of people","Fragments":["looking"]},{"Key":"people looking","Fragments":["over"]},{"Key":"looking over","Fragments":["Scala"]},{"Key":"over Scala","Fragments":["code."]},{"Key":"Scala code.","Fragments":["Thanks"]},{"Key":"code. Thanks","Fragments":["for"]},{"Key":"for taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look."]},{"Key":"great improvement","Fragments":["over"]},{"Key":"improvement over","Fragments":["the"]},{"Key":"previous version.","Fragments":["It"]},{"Key":"version. It","Fragments":["is"]},{"Key":"is much","Fragments":["easier","more","more"]},{"Key":"and follow.","Fragments":["Do"]},{"Key":"follow. Do","Fragments":["you"]},{"Key":"you see","Fragments":["a","here."]},{"Key":"to let","Fragments":["`count`"]},{"Key":"let `count`","Fragments":["use"]},{"Key":"`count` use","Fragments":["`nucleotideCounts`,"]},{"Key":"use `nucleotideCounts`,","Fragments":["to"]},{"Key":"`nucleotideCounts`, to","Fragments":["reduce"]},{"Key":"any special","Fragments":["reason"]},{"Key":"special reason","Fragments":["why"]},{"Key":"reason why","Fragments":["you","the"]},{"Key":"the `object","Fragments":["DNA`"]},{"Key":"`object DNA`","Fragments":["here"]},{"Key":"DNA` here","Fragments":["instead"]},{"Key":"here instead","Fragments":["of"]},{"Key":"of including","Fragments":["the"]},{"Key":"the definitions","Fragments":["in"]},{"Key":"definitions in","Fragments":["the"]},{"Key":"The list","Fragments":["of"]},{"Key":"of nucleotides","Fragments":["and"]},{"Key":"nucleotides and","Fragments":["the"]},{"Key":"the validation","Fragments":["methods","rather","(`require`)","of"]},{"Key":"validation methods","Fragments":["don't"]},{"Key":"methods don't","Fragments":["really"]},{"Key":"don't really","Fragments":["care","like","like","like"]},{"Key":"really care","Fragments":["about"]},{"Key":"about state","Fragments":["so"]},{"Key":"state so","Fragments":["they"]},{"Key":"they didn't","Fragments":["need"]},{"Key":"didn't need","Fragments":["to"]},{"Key":"be on","Fragments":["the"]},{"Key":"the class.","Fragments":["I"]},{"Key":"class. I","Fragments":["felt"]},{"Key":"like pulling","Fragments":["them"]},{"Key":"pulling them","Fragments":["out"]},{"Key":"them out","Fragments":["let","into"]},{"Key":"out let","Fragments":["the"]},{"Key":"let the","Fragments":["class"]},{"Key":"class stick","Fragments":["to"]},{"Key":"stick to","Fragments":["it's"]},{"Key":"to it's","Fragments":["core"]},{"Key":"it's core","Fragments":["work."]},{"Key":"core work.","Fragments":["Also,"]},{"Key":"work. Also,","Fragments":["if"]},{"Key":"Also, if","Fragments":["we"]},{"Key":"if we","Fragments":["were","are","were"]},{"Key":"we were","Fragments":["using","dealing"]},{"Key":"were using","Fragments":["a"]},{"Key":"a lots","Fragments":["of"]},{"Key":"lots of","Fragments":["instances","prompt"]},{"Key":"of instances","Fragments":["this"]},{"Key":"instances this","Fragments":["should"]},{"Key":"this should","Fragments":["be"]},{"Key":"more efficient,","Fragments":["right?"]},{"Key":"efficient, right?","Fragments":["The"]},{"Key":"right? The","Fragments":["object"]},{"Key":"The object","Fragments":["is","could"]},{"Key":"only created","Fragments":["once"]},{"Key":"created once","Fragments":["so"]},{"Key":"once so","Fragments":["those"]},{"Key":"so those","Fragments":["methods"]},{"Key":"methods aren't","Fragments":["recreated"]},{"Key":"aren't recreated","Fragments":["for"]},{"Key":"recreated for","Fragments":["each"]},{"Key":"for each","Fragments":["instance","type","test","member"]},{"Key":"each instance","Fragments":["of"]},{"Key":"of `DNA`.","Fragments":["Additionally,"]},{"Key":"`DNA`. Additionally,","Fragments":["I'm"]},{"Key":"Additionally, I'm","Fragments":["new"]},{"Key":"I'm new","Fragments":["to","to","to","to"]},{"Key":"to play","Fragments":["with"]},{"Key":"play with","Fragments":["companion"]},{"Key":"with companion","Fragments":["objects."]},{"Key":"companion objects.","Fragments":["Is"]},{"Key":"objects. Is","Fragments":["there"]},{"Key":"reason not","Fragments":["to"]},{"Key":"it this","Fragments":["way?"]},{"Key":"A colleague","Fragments":["of"]},{"Key":"colleague of","Fragments":["mine"]},{"Key":"of mine","Fragments":["who"]},{"Key":"mine who","Fragments":["has"]},{"Key":"who has","Fragments":["done"]},{"Key":"has done","Fragments":["Scala"]},{"Key":"done Scala","Fragments":["professionally"]},{"Key":"Scala professionally","Fragments":["suggested"]},{"Key":"professionally suggested","Fragments":["these"]},{"Key":"suggested these","Fragments":["changes."]},{"Key":"these changes.","Fragments":["I"]},{"Key":"changes. I","Fragments":["have"]},{"Key":"have faith","Fragments":["in"]},{"Key":"faith in","Fragments":["his"]},{"Key":"in his","Fragments":["abilities"]},{"Key":"his abilities","Fragments":["so"]},{"Key":"abilities so","Fragments":["I"]},{"Key":"know the","Fragments":["changes"]},{"Key":"the changes","Fragments":["are"]},{"Key":"changes are","Fragments":["ok"]},{"Key":"are ok","Fragments":["technically"]},{"Key":"ok technically","Fragments":["speaking."]},{"Key":"technically speaking.","Fragments":["I"]},{"Key":"speaking. I","Fragments":["think"]},{"Key":"the question","Fragments":["is"]},{"Key":"about whether","Fragments":["they're"]},{"Key":"whether they're","Fragments":["stylistically"]},{"Key":"they're stylistically","Fragments":["good."]},{"Key":"stylistically good.","Fragments":["Like"]},{"Key":"good. Like","Fragments":["I"]},{"Key":"I said","Fragments":["before,"]},{"Key":"said before,","Fragments":["I"]},{"Key":"before, I","Fragments":["like"]},{"Key":"how it","Fragments":["turned","goes.","cleans"]},{"Key":"it turned","Fragments":["out"]},{"Key":"turned out","Fragments":["but"]},{"Key":"out but","Fragments":["I'm"]},{"Key":"I'm open","Fragments":["to"]},{"Key":"open to","Fragments":["alternate","extension","extension","extension"]},{"Key":"to alternate","Fragments":["views."]},{"Key":"Scala myself","Fragments":["I"]},{"Key":"myself I","Fragments":["understand"]},{"Key":"your reasoning","Fragments":["and"]},{"Key":"reasoning and","Fragments":["it"]},{"Key":"sounds logical","Fragments":["to"]},{"Key":"logical to","Fragments":["me.","be"]},{"Key":"me. I","Fragments":["am"]},{"Key":"am unable","Fragments":["to"]},{"Key":"unable to","Fragments":["judge"]},{"Key":"to judge","Fragments":["if"]},{"Key":"judge if","Fragments":["this"]},{"Key":"if this","Fragments":["is","can","much","depends"]},{"Key":"a correct","Fragments":["use"]},{"Key":"correct use","Fragments":["of"]},{"Key":"of companion","Fragments":["objects,"]},{"Key":"companion objects,","Fragments":["from"]},{"Key":"objects, from","Fragments":["what"]},{"Key":"from what","Fragments":["I"]},{"Key":"it's ok,","Fragments":["but"]},{"Key":"ok, but","Fragments":["as"]},{"Key":"as stated","Fragments":["I'm"]},{"Key":"stated I'm","Fragments":["only"]},{"Key":"I'm only","Fragments":["a"]},{"Key":"use `withDefaultValue`","Fragments":["when"]},{"Key":"`withDefaultValue` when","Fragments":["creating"]},{"Key":"when creating","Fragments":["the"]},{"Key":"creating the","Fragments":["map","ntides","map","object"]},{"Key":"map to","Fragments":["replace"]},{"Key":"Since yelling","Fragments":["means"]},{"Key":"yelling means","Fragments":["all"]},{"Key":"means all","Fragments":["letters"]},{"Key":"all letters","Fragments":["has"]},{"Key":"letters has","Fragments":["to"]},{"Key":"has to","Fragments":["be","be","have","iterate"]},{"Key":"be uppercase","Fragments":["comparing"]},{"Key":"uppercase comparing","Fragments":["the"]},{"Key":"comparing the","Fragments":["uppercased","sorted"]},{"Key":"uppercased value","Fragments":["to"]},{"Key":"value to","Fragments":["the","code"]},{"Key":"the real","Fragments":["String"]},{"Key":"real String","Fragments":["will"]},{"Key":"String will","Fragments":["give"]},{"Key":"will give","Fragments":["us"]},{"Key":"give us","Fragments":["the"]},{"Key":"us the","Fragments":["first"]},{"Key":"first validation.","Fragments":["Also"]},{"Key":"validation. Also","Fragments":["has"]},{"Key":"Also has","Fragments":["to"]},{"Key":"be validated","Fragments":["it"]},{"Key":"validated it","Fragments":["has"]},{"Key":"have letters","Fragments":["(not"]},{"Key":"letters (not","Fragments":["just"]},{"Key":"(not just","Fragments":["numbers)."]},{"Key":" Validating","Fragments":["questions"]},{"Key":"Validating questions","Fragments":["is"]},{"Key":"questions is","Fragments":["easy,"]},{"Key":"is easy,","Fragments":["just"]},{"Key":"easy, just","Fragments":["strings"]},{"Key":"just strings","Fragments":["that"]},{"Key":"strings that","Fragments":["ends","only"]},{"Key":"that ends","Fragments":["with"]},{"Key":" Space","Fragments":["chars,"]},{"Key":"Space chars,","Fragments":["or"]},{"Key":"chars, or","Fragments":["empty"]},{"Key":"or empty","Fragments":["chars"]},{"Key":"empty chars","Fragments":["is"]},{"Key":"chars is","Fragments":["easy"]},{"Key":"is easy","Fragments":["to","to","to","to"]},{"Key":"to validate,","Fragments":["just"]},{"Key":"validate, just","Fragments":["use"]},{"Key":"just use","Fragments":["empty","the","`word.sorted`?"]},{"Key":"use empty","Fragments":["boolean"]},{"Key":"empty boolean","Fragments":["and"]},{"Key":"boolean and","Fragments":["see","throws"]},{"Key":"and see","Fragments":["if","how"]},{"Key":"if all","Fragments":["chars","the"]},{"Key":"all chars","Fragments":["are"]},{"Key":"chars are","Fragments":["spaces."]},{"Key":"The rest","Fragments":["return","was","of"]},{"Key":"rest return","Fragments":["Whatever."]},{"Key":"there an","Fragments":["easy"]},{"Key":"to map","Fragments":["my"]},{"Key":"map my","Fragments":["`dnaNucleotides`"]},{"Key":"my `dnaNucleotides`","Fragments":["into"]},{"Key":"`dnaNucleotides` into","Fragments":["`nucleotideCounts`","`nucleotideCounts`?"]},{"Key":"into `nucleotideCounts`","Fragments":["AND"]},{"Key":"`nucleotideCounts` AND","Fragments":["use"]},{"Key":"AND use","Fragments":["a"]},{"Key":"a `defaultValue`?","Fragments":["Having"]},{"Key":"`defaultValue`? Having","Fragments":["some"]},{"Key":"Having some","Fragments":["trouble"]},{"Key":"some trouble","Fragments":["with"]},{"Key":"trouble with","Fragments":["syntax..."]},{"Key":"better. I","Fragments":["feel","always"]},{"Key":"the set","Fragments":["of"]},{"Key":"set of","Fragments":["allNucleotides","regexes,"]},{"Key":"of allNucleotides","Fragments":["should"]},{"Key":"allNucleotides should","Fragments":["be"]},{"Key":"be expressed","Fragments":["as","by"]},{"Key":"expressed as","Fragments":["`dnaNucleotides","a","`if`"]},{"Key":"as `dnaNucleotides","Fragments":["+"]},{"Key":"`dnaNucleotides +","Fragments":["'U'`"]},{"Key":"+ 'U'`","Fragments":["iso"]},{"Key":"'U'` iso","Fragments":["the"]},{"Key":"iso the","Fragments":["difference"]},{"Key":"difference you","Fragments":["use"]},{"Key":"use currently,","Fragments":["since"]},{"Key":"currently, since","Fragments":["the"]},{"Key":"the `'U'`","Fragments":["literal"]},{"Key":"`'U'` literal","Fragments":["needs"]},{"Key":"literal needs","Fragments":["to"]},{"Key":"used twice.","Fragments":["Furthermore"]},{"Key":"twice. Furthermore","Fragments":["the"]},{"Key":"Furthermore the","Fragments":["`nucleotideCounts`"]},{"Key":"`nucleotideCounts` can","Fragments":["be"]},{"Key":"expressed by","Fragments":["using"]},{"Key":"using only","Fragments":["the"]},{"Key":"only the","Fragments":["`dnaNucleotides`","digits"]},{"Key":"the `dnaNucleotides`","Fragments":["set."]},{"Key":"`dnaNucleotides` set.","Fragments":["That"]},{"Key":"set. That","Fragments":["prevents"]},{"Key":"That prevents","Fragments":["the"]},{"Key":"prevents the","Fragments":["'knowledge'"]},{"Key":"what are","Fragments":["the"]},{"Key":"are the","Fragments":["DNA","same"]},{"Key":"the DNA","Fragments":["nucleotides"]},{"Key":"DNA nucleotides","Fragments":["to"]},{"Key":"nucleotides to","Fragments":["be"]},{"Key":"be encoded","Fragments":["twice."]},{"Key":"a :+","Fragments":["operator"]},{"Key":":+ operator","Fragments":["that"]},{"Key":"operator that","Fragments":["is"]},{"Key":"a shortcut","Fragments":["for"]},{"Key":"shortcut for","Fragments":["that,"]},{"Key":"for that,","Fragments":["right?"]},{"Key":"convert `strand`","Fragments":["using"]},{"Key":"`strand` using","Fragments":["`toCharArray`."]},{"Key":"using `toCharArray`.","Fragments":["You"]},{"Key":"`toCharArray`. You","Fragments":["can"]},{"Key":"call `forall`","Fragments":["directly"]},{"Key":"`forall` directly","Fragments":["on"]},{"Key":" @laury:","Fragments":["Can"]},{"Key":"@laury: Can","Fragments":["you"]},{"Key":"you help","Fragments":["me"]},{"Key":"help me","Fragments":["with","pick","understand"]},{"Key":"me with","Fragments":["the"]},{"Key":"the syntax","Fragments":["of"]},{"Key":"syntax of","Fragments":["loading"]},{"Key":"of loading","Fragments":["`dnaNucleotides`"]},{"Key":"loading `dnaNucleotides`","Fragments":["into"]},{"Key":"into `nucleotideCounts`?","Fragments":["I"]},{"Key":"`nucleotideCounts`? I","Fragments":["can't"]},{"Key":"can't seem","Fragments":["to"]},{"Key":"could `map`","Fragments":["over"]},{"Key":"`map` over","Fragments":["the"]},{"Key":"the elements","Fragments":["in"]},{"Key":"elements in","Fragments":["`dnaNucleotides`"]},{"Key":"in `dnaNucleotides`","Fragments":["and"]},{"Key":"`dnaNucleotides` and","Fragments":["use"]},{"Key":"use `++`","Fragments":["to"]},{"Key":"`++` to","Fragments":["add"]},{"Key":"add the","Fragments":["result","`lazy`","digit"]},{"Key":"map operation","Fragments":["to"]},{"Key":"operation to","Fragments":["an"]},{"Key":"empty `Map`.","Fragments":["If"]},{"Key":"`Map`. If","Fragments":["you"]},{"Key":"don't mind","Fragments":["a"]},{"Key":"mind a","Fragments":["spoiler,"]},{"Key":"a spoiler,","Fragments":["you"]},{"Key":"spoiler, you","Fragments":["could"]},{"Key":"at [my","Fragments":["solution](http://exercism.io/submissions/ac9783248f91b218d8d056c1)."]},{"Key":"This solution","Fragments":["is","uses","uses"]},{"Key":"solution is","Fragments":["done","ok,","that","actually","incorrect"]},{"Key":"is done","Fragments":["in","through","on"]},{"Key":"done in","Fragments":["an","a"]},{"Key":"an imperative","Fragments":["style,"]},{"Key":"imperative style,","Fragments":["can"]},{"Key":"style, can","Fragments":["you"]},{"Key":"functional solution?","Fragments":["Have"]},{"Key":"solution? Have","Fragments":["a"]},{"Key":"functions `count`","Fragments":["and"]},{"Key":"and `zip`","Fragments":["in","to"]},{"Key":"`zip` in","Fragments":["[`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List)."]},{"Key":"in [`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List).","Fragments":["A"]},{"Key":"[`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List). A","Fragments":["`String`"]},{"Key":"A `String`","Fragments":["can"]},{"Key":"be converted","Fragments":["to"]},{"Key":"converted to","Fragments":["a"]},{"Key":"a `List[Char]`","Fragments":["by"]},{"Key":"`List[Char]` by","Fragments":["using"]},{"Key":"the `toList`","Fragments":["method."]},{"Key":"There is.","Fragments":["See"]},{"Key":"is. See","Fragments":["[my"]},{"Key":"See [my","Fragments":["example](http://exercism.io/submissions/f014cc99ee09389a4b9361e8)."]},{"Key":"way you","Fragments":["would","won't"]},{"Key":"would solve","Fragments":["the"]},{"Key":"solve the","Fragments":["problem","double"]},{"Key":"the problem","Fragments":["in","can","and"]},{"Key":"problem in","Fragments":["Java","practice,"]},{"Key":"in Java","Fragments":["(at"]},{"Key":"Java (at","Fragments":["least"]},{"Key":"(at least","Fragments":["prior","for"]},{"Key":"least prior","Fragments":["to"]},{"Key":"prior to","Fragments":["Java"]},{"Key":"to Java","Fragments":["8)."]},{"Key":"Java 8).","Fragments":["It"]},{"Key":"8). It","Fragments":["is"]},{"Key":"is well","Fragments":["written"]},{"Key":"well written","Fragments":["and"]},{"Key":"written and","Fragments":["quite"]},{"Key":"and quite","Fragments":["easy"]},{"Key":"quite easy","Fragments":["to"]},{"Key":"not make","Fragments":["full"]},{"Key":"make full","Fragments":["use"]},{"Key":"full use","Fragments":["of"]},{"Key":"of Scala.","Fragments":["In"]},{"Key":"Scala. In","Fragments":["scala"]},{"Key":"scala the","Fragments":["problem"]},{"Key":"problem can","Fragments":["be"]},{"Key":"be solved","Fragments":["with"]},{"Key":"solved with","Fragments":["one"]},{"Key":"one line","Fragments":["of"]},{"Key":"line of","Fragments":["code."]},{"Key":" But,","Fragments":["if","since"]},{"Key":"But, if","Fragments":["you"]},{"Key":"still wants","Fragments":["to"]},{"Key":"wants to","Fragments":["use"]},{"Key":"a for","Fragments":["loop,","loop,"]},{"Key":"for loop,","Fragments":["it","much"]},{"Key":"loop, it","Fragments":["can"]},{"Key":"written like","Fragments":["this"]},{"Key":" for","Fragments":["(i","a","cleanedUp"]},{"Key":"for (i","Fragments":["\u003c-"]},{"Key":"(i \u003c-","Fragments":["0"]},{"Key":"\u003c- 0","Fragments":["until"]},{"Key":"0 until","Fragments":["minLength)"]},{"Key":"until minLength)","Fragments":["{},"]},{"Key":"minLength) {},","Fragments":["which"]},{"Key":"{}, which","Fragments":["is"]},{"Key":"is at","Fragments":["least"]},{"Key":"least a","Fragments":["little"]},{"Key":" Yes.","Fragments":["it's","Thanks","You"]},{"Key":"Yes. it's","Fragments":["a"]},{"Key":"a form","Fragments":["of"]},{"Key":"form of","Fragments":["quoting"]},{"Key":"of quoting","Fragments":["which"]},{"Key":"quoting which","Fragments":["does"]},{"Key":"which does","Fragments":["not","nothing"]},{"Key":"not require","Fragments":["escaping"]},{"Key":"require escaping","Fragments":["some"]},{"Key":"escaping some","Fragments":["specials"]},{"Key":"some specials","Fragments":["chars"]},{"Key":"Given the","Fragments":["multiline","ordering"]},{"Key":"the multiline","Fragments":["test"]},{"Key":"multiline test","Fragments":["in"]},{"Key":"test in","Fragments":["the","`nucleotideCounts`.","the","line"]},{"Key":"given test","Fragments":["suite,"]},{"Key":"test suite,","Fragments":["it"]},{"Key":"suite, it","Fragments":["seems"]},{"Key":"seems worth","Fragments":["considering"]},{"Key":"worth considering","Fragments":["multi-*sentence*"]},{"Key":"considering multi-*sentence*","Fragments":["messages"]},{"Key":"multi-*sentence* messages","Fragments":["for"]},{"Key":"messages for","Fragments":["all"]},{"Key":"all responses.","Fragments":["This"]},{"Key":"responses. This","Fragments":["*could*"]},{"Key":"This *could*","Fragments":["be"]},{"Key":"*could* be","Fragments":["as"]},{"Key":"be as","Fragments":["simple"]},{"Key":"as simple","Fragments":["as"]},{"Key":"simple as","Fragments":["splitting","a"]},{"Key":"as splitting","Fragments":["on"]},{"Key":"splitting on","Fragments":["sentence"]},{"Key":"on sentence","Fragments":["punctuation"]},{"Key":"sentence punctuation","Fragments":["and"]},{"Key":"punctuation and","Fragments":["then","whitespace."]},{"Key":"then finding","Fragments":["a"]},{"Key":"finding a","Fragments":["responder"]},{"Key":"a responder","Fragments":["for","to","pipeline.","pipeline.","pipeline."]},{"Key":"responder for","Fragments":["the"]},{"Key":"last 'sentence',","Fragments":["but"]},{"Key":"'sentence', but","Fragments":["it'll"]},{"Key":"but it'll","Fragments":["easily"]},{"Key":"it'll easily","Fragments":["slip"]},{"Key":"easily slip","Fragments":["up"]},{"Key":"slip up","Fragments":["on"]},{"Key":"on acronyms","Fragments":["and"]},{"Key":"acronyms and","Fragments":["probably","numbers."]},{"Key":"and probably","Fragments":["many","clearer."]},{"Key":"probably many","Fragments":["other"]},{"Key":"many other","Fragments":["issues."]},{"Key":"The given","Fragments":["solution"]},{"Key":"given solution","Fragments":["tries"]},{"Key":"solution tries","Fragments":["to"]},{"Key":"tries to","Fragments":["balance"]},{"Key":"to balance","Fragments":["simplicity,"]},{"Key":"balance simplicity,","Fragments":["extensibility"]},{"Key":"simplicity, extensibility","Fragments":["and"]},{"Key":"extensibility and","Fragments":["readability."]},{"Key":"be interesting","Fragments":["to"]},{"Key":"interesting to","Fragments":["make","learn"]},{"Key":"make Responders","Fragments":["more"]},{"Key":"Responders more","Fragments":["composable"]},{"Key":"more composable","Fragments":["so"]},{"Key":"composable so","Fragments":["that"]},{"Key":"val responder","Fragments":["="]},{"Key":"responder =","Fragments":["aResponder"]},{"Key":"= aResponder","Fragments":["+"]},{"Key":"aResponder +","Fragments":["anotherResponder"]},{"Key":"This removes","Fragments":["the"]},{"Key":"removes the","Fragments":["need"]},{"Key":"the Converser,","Fragments":["but"]},{"Key":"Converser, but","Fragments":["perhaps"]},{"Key":"but perhaps","Fragments":["the","that's"]},{"Key":"perhaps the","Fragments":["Converser"]},{"Key":"the Converser","Fragments":["makes"]},{"Key":"Converser makes","Fragments":["it"]},{"Key":"to manipulate","Fragments":["a"]},{"Key":"manipulate a","Fragments":["collection"]},{"Key":"a collection","Fragments":["of","of"]},{"Key":"collection of","Fragments":["responders","characters."]},{"Key":"of responders","Fragments":["(i.e."]},{"Key":"responders (i.e.","Fragments":["add"]},{"Key":"(i.e. add","Fragments":["a"]},{"Key":"responder to","Fragments":["the"]},{"Key":"the beginning,","Fragments":["to"]},{"Key":"beginning, to","Fragments":["the"]},{"Key":"the end,","Fragments":["to"]},{"Key":"end, to","Fragments":["the"]},{"Key":"are using","Fragments":["a","Scala,"]},{"Key":"mutable Map","Fragments":["and"]},{"Key":"Map and","Fragments":["a"]},{"Key":"mutable phrase.","Fragments":["Your"]},{"Key":"phrase. Your","Fragments":["solution"]},{"Key":"Your solution","Fragments":["can","definitely","is"]},{"Key":"solution can","Fragments":["get","implemented"]},{"Key":"get shorter","Fragments":["with"]},{"Key":"shorter with","Fragments":["recursion."]},{"Key":"with recursion.","Fragments":["You"]},{"Key":"recursion. You","Fragments":["can"]},{"Key":"can look","Fragments":["at"]},{"Key":"at my","Fragments":["solution"]},{"Key":" Remove","Fragments":["'dna'"]},{"Key":"Remove 'dna'","Fragments":["in"]},{"Key":"'dna' in","Fragments":["name"]},{"Key":"in name","Fragments":["since","of","of"]},{"Key":"name since","Fragments":["Hamming"]},{"Key":"since Hamming","Fragments":["distance"]},{"Key":"distance applies","Fragments":["to"]},{"Key":"applies to","Fragments":["strings"]},{"Key":"to strings","Fragments":["in"]},{"Key":"strings in","Fragments":["general."]},{"Key":"in general.","Fragments":["Also","(Spot"]},{"Key":"general. Also","Fragments":["from"]},{"Key":"Also from","Fragments":["looking"]},{"Key":"from looking","Fragments":["at"]},{"Key":"solutions, tuple","Fragments":["unpacking"]},{"Key":"tuple unpacking","Fragments":["makes"]},{"Key":"unpacking makes","Fragments":["things"]},{"Key":"The fold","Fragments":["could"]},{"Key":"fold could","Fragments":["be"]},{"Key":"by Traversable's","Fragments":["```groupBy```."]},{"Key":"thing I","Fragments":["can","want","might"]},{"Key":"can say","Fragments":["is"]},{"Key":"say is","Fragments":["to"]},{"Key":"consider the","Fragments":["style"]},{"Key":"the style","Fragments":["conventions:"]},{"Key":"style conventions:","Fragments":["indentation"]},{"Key":"conventions: indentation","Fragments":["is"]},{"Key":"indentation is","Fragments":["2"]},{"Key":"is 2","Fragments":["spaces"]},{"Key":"2 spaces","Fragments":["and"]},{"Key":"the colon","Fragments":["should"]},{"Key":"colon should","Fragments":["be"]},{"Key":"be up","Fragments":["against"]},{"Key":"up against","Fragments":["the"]},{"Key":"against the","Fragments":["value,"]},{"Key":"the value,","Fragments":["e.g."]},{"Key":"value, e.g.","Fragments":["```value:"]},{"Key":"e.g. ```value:","Fragments":["Type```."]},{"Key":"```value: Type```.","Fragments":["Other"]},{"Key":"Type```. Other","Fragments":["than"]},{"Key":"Other than","Fragments":["that,","that,"]},{"Key":"than that,","Fragments":["this","the"]},{"Key":"that, this","Fragments":["looks"]},{"Key":"Could it","Fragments":["be"]},{"Key":"find another","Fragments":["way"]},{"Key":"another way","Fragments":["of","than","to","of"]},{"Key":"of splitting","Fragments":["instead"]},{"Key":"splitting instead","Fragments":["of"]},{"Key":"of using","Fragments":["that","the","`equalsIgnoreCase`","``Map[Char,","`{}`"]},{"Key":"using that","Fragments":["big"]},{"Key":"that big","Fragments":["regex?"]},{"Key":"Also, number,","Fragments":["areaCode,"]},{"Key":"number, areaCode,","Fragments":["numberCode"]},{"Key":"areaCode, numberCode","Fragments":["and"]},{"Key":"numberCode and","Fragments":["even"]},{"Key":"even toString","Fragments":["can"]},{"Key":"toString can","Fragments":["be"]},{"Key":"be \"vals\"","Fragments":["so"]},{"Key":"\"vals\" so","Fragments":["you"]},{"Key":"don't recalculate","Fragments":["them"]},{"Key":"recalculate them","Fragments":["more"]},{"Key":"your solution,","Fragments":["quite"]},{"Key":"solution, quite","Fragments":["clear"]},{"Key":"quite clear","Fragments":["and"]},{"Key":" Already","Fragments":["guarantee"]},{"Key":"Already guarantee","Fragments":["the"]},{"Key":"guarantee the","Fragments":["string"]},{"Key":"is valid","Fragments":["DNA"]},{"Key":"valid DNA","Fragments":["so"]},{"Key":"DNA so","Fragments":["we"]},{"Key":"so we","Fragments":["can"]},{"Key":"we can","Fragments":["remove","do"]},{"Key":"the ```getOrElse```.","Fragments":["```contains```"]},{"Key":"```getOrElse```. ```contains```","Fragments":["is"]},{"Key":"```contains``` is","Fragments":["more"]},{"Key":"readable than","Fragments":["```exists```","using"]},{"Key":"My brain","Fragments":["processes"]},{"Key":"brain processes","Fragments":["```x"]},{"Key":"processes ```x","Fragments":["=\u003e"]},{"Key":"```x =\u003e","Fragments":["x```","x.foo```"]},{"Key":"=\u003e x```","Fragments":["is"]},{"Key":"x``` is","Fragments":["easier"]},{"Key":"easier than","Fragments":["```identity```."]},{"Key":"than ```identity```.","Fragments":["What"]},{"Key":"```identity```. What","Fragments":["do"]},{"Key":" Wow,","Fragments":["that"]},{"Key":"Wow, that","Fragments":["is"]},{"Key":"cleaner solution!","Fragments":["I"]},{"Key":"solution! I","Fragments":["need"]},{"Key":"get used","Fragments":["to"]},{"Key":"the scala","Fragments":["way","way."]},{"Key":"scala way","Fragments":["of"]},{"Key":"of doing","Fragments":["things.","things."]},{"Key":" Folding","Fragments":["over"]},{"Key":"Folding over","Fragments":["the"]},{"Key":"the keys","Fragments":["is"]},{"Key":"keys is","Fragments":["much"]},{"Key":"more readable.","Fragments":["Stole","Also,","More"]},{"Key":"readable. Stole","Fragments":["the"]},{"Key":"Stole the","Fragments":["idea"]},{"Key":"idea from","Fragments":["@murray."]},{"Key":"It seems","Fragments":["overly"]},{"Key":"seems overly","Fragments":["verbose,"]},{"Key":"overly verbose,","Fragments":["but"]},{"Key":"verbose, but","Fragments":["definitely","this"]},{"Key":"but definitely","Fragments":["solid"]},{"Key":"definitely solid","Fragments":["communication"]},{"Key":"solid communication","Fragments":["through"]},{"Key":"communication through","Fragments":["code,"]},{"Key":"through code,","Fragments":["excellent"]},{"Key":"code, excellent","Fragments":["use"]},{"Key":"excellent use","Fragments":["of"]},{"Key":"system to","Fragments":["document"]},{"Key":"to document","Fragments":["the"]},{"Key":"document the","Fragments":["code."]},{"Key":" Avoid","Fragments":["`.equals`."]},{"Key":"Avoid `.equals`.","Fragments":["You"]},{"Key":"`.equals`. You","Fragments":["can"]},{"Key":"use `value.forall","Fragments":["{"]},{"Key":"`value.forall {","Fragments":["!_.isLowerCase"]},{"Key":"{ !_.isLowerCase","Fragments":["}`"]},{"Key":"!_.isLowerCase }`","Fragments":["instead"]},{"Key":"making the","Fragments":["string","exterenal"]},{"Key":"string uppercase","Fragments":["and"]},{"Key":"then comparing","Fragments":["it."]},{"Key":"comparing it.","Fragments":["Either"]},{"Key":"it. Either","Fragments":["is"]},{"Key":"Either is","Fragments":["good"]},{"Key":"is good","Fragments":["though."]},{"Key":"prefer four","Fragments":["types:"]},{"Key":"four types:","Fragments":["`Statement`,"]},{"Key":"types: `Statement`,","Fragments":["`Shout`,"]},{"Key":"`Statement`, `Shout`,","Fragments":["`Question`"]},{"Key":"`Shout`, `Question`","Fragments":["and"]},{"Key":"`Question` and","Fragments":["`Silence`."]},{"Key":"and `Silence`.","Fragments":["You"]},{"Key":"`Silence`. You","Fragments":["would"]},{"Key":"You would","Fragments":["then"]},{"Key":"would then","Fragments":["have"]},{"Key":"then have","Fragments":["a","isValid"]},{"Key":"a two-step","Fragments":["process:"]},{"Key":"two-step process:","Fragments":["parsing"]},{"Key":"process: parsing","Fragments":["into"]},{"Key":"parsing into","Fragments":["one"]},{"Key":"into one","Fragments":["of"]},{"Key":"those four,","Fragments":["and"]},{"Key":"four, and","Fragments":["then"]},{"Key":"then pattern","Fragments":["matching"]},{"Key":"matching on","Fragments":["the"]},{"Key":"the type.","Fragments":["They"]},{"Key":"type. They","Fragments":["wouldn't"]},{"Key":"They wouldn't","Fragments":["need"]},{"Key":"wouldn't need","Fragments":["to"]},{"Key":"the sentence","Fragments":["itself,","**ends"]},{"Key":"sentence itself,","Fragments":["as"]},{"Key":"itself, as","Fragments":["it"]},{"Key":"I aimed","Fragments":["for"]},{"Key":"aimed for","Fragments":["simplicity,"]},{"Key":"for simplicity,","Fragments":["and"]},{"Key":"simplicity, and","Fragments":["a"]},{"Key":"a functional","Fragments":["styele"]},{"Key":"What could","Fragments":["be"]},{"Key":"good name","Fragments":["for"]},{"Key":"string wrapped","Fragments":["inside"]},{"Key":"wrapped inside","Fragments":["Sentence?"]},{"Key":"just submitting","Fragments":["it"]},{"Key":"submitting it","Fragments":["because"]},{"Key":"it because","Fragments":["it"]},{"Key":"because it","Fragments":["passes","doesn't","gives","is"]},{"Key":"it passes","Fragments":["the","test"]},{"Key":"passes the","Fragments":["tests.","tests,"]},{"Key":"tests. I'm","Fragments":["not"]},{"Key":"are duplicated","Fragments":["responses."]},{"Key":"is half-way","Fragments":["between"]},{"Key":"half-way between","Fragments":["FP"]},{"Key":"between FP","Fragments":["and"]},{"Key":"FP and","Fragments":["OO."]},{"Key":"and OO.","Fragments":["I"]},{"Key":"OO. I","Fragments":["think"]},{"Key":"it strikes","Fragments":["a"]},{"Key":"strikes a","Fragments":["good"]},{"Key":"and tight","Fragments":["approach,"]},{"Key":"tight approach,","Fragments":["however"]},{"Key":"approach, however","Fragments":["I"]},{"Key":"however I","Fragments":["wonder","used"]},{"Key":"wonder whether","Fragments":["string"]},{"Key":"whether string","Fragments":["methods"]},{"Key":"string methods","Fragments":["make"]},{"Key":"methods make","Fragments":["the"]},{"Key":"The question","Fragments":["detection"]},{"Key":"question detection","Fragments":["is"]},{"Key":"detection is","Fragments":["a"]},{"Key":"bit weak.","Fragments":["It's"]},{"Key":"weak. It's","Fragments":["certainly"]},{"Key":"It's certainly","Fragments":["very","less"]},{"Key":"certainly very","Fragments":["English-language"]},{"Key":"very English-language","Fragments":["specific."]},{"Key":" ...","Fragments":["count"]},{"Key":"... count","Fragments":["{"]},{"Key":"{ case(a,b)","Fragments":["=\u003e"]},{"Key":"case(a,b) =\u003e","Fragments":["a!=b"]},{"Key":"=\u003e a!=b","Fragments":["}"]},{"Key":"a!=b }","Fragments":["?"]},{"Key":"} ?","Fragments":[";)"]},{"Key":"good question.","Fragments":["Half"]},{"Key":"question. Half","Fragments":["of"]},{"Key":"Half of","Fragments":["them"]},{"Key":"them are","Fragments":["boilerplate."]},{"Key":"are boilerplate.","Fragments":["Your"]},{"Key":"boilerplate. Your","Fragments":["solution"]},{"Key":"solution definitely","Fragments":["wins"]},{"Key":"definitely wins","Fragments":["there."]},{"Key":"wins there.","Fragments":["I'd"]},{"Key":"there. I'd","Fragments":["argue"]},{"Key":"I'd argue","Fragments":["mine"]},{"Key":"argue mine","Fragments":["is"]},{"Key":"mine is","Fragments":["simpler"]},{"Key":"is simpler","Fragments":["though;"]},{"Key":"simpler though;","Fragments":["you"]},{"Key":"though; you","Fragments":["can"]},{"Key":"can move","Fragments":["the"]},{"Key":"move the","Fragments":["second","matching","`toLowercase`","```isAnagram```","collision"]},{"Key":"the second","Fragments":["half","case","iteration.","iteration."]},{"Key":"second half","Fragments":["to"]},{"Key":"half to","Fragments":["another"]},{"Key":"to another","Fragments":["file,","private"]},{"Key":"another file,","Fragments":["ignore"]},{"Key":"file, ignore","Fragments":["it"]},{"Key":"ignore it","Fragments":["and"]},{"Key":"still makes","Fragments":["perfect"]},{"Key":"makes perfect","Fragments":["sense"]},{"Key":"perfect sense","Fragments":["while"]},{"Key":"sense while","Fragments":["being"]},{"Key":"while being","Fragments":["very"]},{"Key":"being very","Fragments":["extensible."]},{"Key":"think count()","Fragments":["could"]},{"Key":"count() could","Fragments":["be"]},{"Key":"be done","Fragments":["in","once","once"]},{"Key":" try","Fragments":["to"]},{"Key":"using vars","Fragments":["when"]},{"Key":"vars when","Fragments":["possible"]},{"Key":"when possible","Fragments":["to"]},{"Key":"and isEmpty","Fragments":["could"]},{"Key":"isEmpty could","Fragments":["be","be"]},{"Key":"as exists/forall","Fragments":["maybe?"]},{"Key":" Pattern","Fragments":["matching"]},{"Key":"Pattern matching","Fragments":["is","with"]},{"Key":"more Scala-y.","Fragments":["Still"]},{"Key":"Scala-y. Still","Fragments":["very"]},{"Key":"Still very","Fragments":["English-specific"]},{"Key":"very functional","Fragments":["solution."]},{"Key":"think that","Fragments":["the","the","it","it","would","would"]},{"Key":"function matches","Fragments":["is"]},{"Key":"matches is","Fragments":["unused,"]},{"Key":"is unused,","Fragments":["could"]},{"Key":"unused, could","Fragments":["it"]},{"Key":"could it","Fragments":["be"]},{"Key":"little trouble","Fragments":["understanding"]},{"Key":"trouble understanding","Fragments":["the"]},{"Key":"understanding the","Fragments":["concept"]},{"Key":"the concept","Fragments":["behind"]},{"Key":"concept behind","Fragments":["decompose"]},{"Key":"behind decompose","Fragments":["and"]},{"Key":"decompose and","Fragments":["that"]},{"Key":"and that","Fragments":["made","is"]},{"Key":"that made","Fragments":["it"]},{"Key":"made it","Fragments":["harder"]},{"Key":"it harder","Fragments":["for"]},{"Key":"harder for","Fragments":["me"]},{"Key":"for me","Fragments":["to"]},{"Key":"me to","Fragments":["confirm","list","shorten"]},{"Key":"to confirm","Fragments":["that"]},{"Key":"confirm that","Fragments":["if"]},{"Key":"that if","Fragments":["two","the"]},{"Key":"if two","Fragments":["words"]},{"Key":"two words","Fragments":["decompose"]},{"Key":"words decompose","Fragments":["the"]},{"Key":"decompose the","Fragments":["same"]},{"Key":"same way","Fragments":["then"]},{"Key":"way then","Fragments":["they"]},{"Key":"then they","Fragments":["are"]},{"Key":"are anagrams.","Fragments":["Perhaps"]},{"Key":"anagrams. Perhaps","Fragments":["there"]},{"Key":"Perhaps there","Fragments":["is"]},{"Key":"more intention","Fragments":["revealing"]},{"Key":"intention revealing","Fragments":["name"]},{"Key":"revealing name","Fragments":["for"]},{"Key":"and clean,","Fragments":["easy"]},{"Key":"clean, easy","Fragments":["to"]},{"Key":"I definitely","Fragments":["like"]},{"Key":"definitely like","Fragments":["the"]},{"Key":"the functional","Fragments":["decomposition;"]},{"Key":"functional decomposition;","Fragments":["the"]},{"Key":"decomposition; the","Fragments":["individual"]},{"Key":"the individual","Fragments":["function"]},{"Key":"individual function","Fragments":["names"]},{"Key":"function names","Fragments":["for"]},{"Key":"each type","Fragments":["of"]},{"Key":"of prompt","Fragments":["make","types"]},{"Key":"prompt make","Fragments":["it"]},{"Key":"it very","Fragments":["easy"]},{"Key":"very easy","Fragments":["to","reading,"]},{"Key":"understand what","Fragments":["is","this"]},{"Key":"is happening","Fragments":["in"]},{"Key":"happening in","Fragments":["the"]},{"Key":"the main","Fragments":["function.","advantage"]},{"Key":"The mix","Fragments":["of"]},{"Key":"mix of","Fragments":["Unicode-compatible"]},{"Key":"of Unicode-compatible","Fragments":["and"]},{"Key":"Unicode-compatible and","Fragments":["ASCII-only"]},{"Key":"and ASCII-only","Fragments":["matchers"]},{"Key":"ASCII-only matchers","Fragments":["in"]},{"Key":"matchers in","Fragments":["the"]},{"Key":"the regex","Fragments":["seems","match","to","is","(located","and","and"]},{"Key":"regex seems","Fragments":["awkward."]},{"Key":"seems awkward.","Fragments":["An"]},{"Key":"awkward. An","Fragments":["ASCII-only"]},{"Key":"An ASCII-only","Fragments":["implementation"]},{"Key":"ASCII-only implementation","Fragments":["would"]},{"Key":"implementation would","Fragments":["be"]},{"Key":"be fine","Fragments":["for"]},{"Key":"fine for","Fragments":["this"]},{"Key":"this particular","Fragments":["exercise"]},{"Key":"particular exercise","Fragments":["(especially"]},{"Key":"exercise (especially","Fragments":["if"]},{"Key":"(especially if","Fragments":["that"]},{"Key":"that assumption","Fragments":["is"]},{"Key":"assumption is","Fragments":["documented),"]},{"Key":"is documented),","Fragments":["but"]},{"Key":"documented), but","Fragments":["it's"]},{"Key":"but it's","Fragments":["easier","needed","needed","interesting"]},{"Key":"it's easier","Fragments":["IMO"]},{"Key":"easier IMO","Fragments":["to"]},{"Key":"IMO to","Fragments":["use"]},{"Key":"use \\p{Upper},","Fragments":["\\p{Space},"]},{"Key":"\\p{Upper}, \\p{Space},","Fragments":["et.al."]},{"Key":"A more","Fragments":["idiomatic","functional"]},{"Key":"idiomatic Scala","Fragments":["implementation"]},{"Key":"Scala implementation","Fragments":["might"]},{"Key":"implementation might","Fragments":["utilize"]},{"Key":"might utilize","Fragments":["pattern"]},{"Key":"utilize pattern","Fragments":["matching"]},{"Key":"matching and","Fragments":["implicit","recursion,"]},{"Key":"implicit returns,","Fragments":["but"]},{"Key":"returns, but","Fragments":["this"]},{"Key":"a fine","Fragments":["solution"]},{"Key":"fine solution","Fragments":["as-is."]},{"Key":"the matches","Fragments":["method"]},{"Key":"matches method","Fragments":["is"]},{"Key":"one used","Fragments":["in"]},{"Key":"the validity","Fragments":["of"]},{"Key":"validity of","Fragments":["the"]},{"Key":"What would","Fragments":["you"]},{"Key":"would you","Fragments":["think","improve/simplify","handle"]},{"Key":"Hi -","Fragments":["very"]},{"Key":"- very","Fragments":["good"]},{"Key":"very good","Fragments":["point,"]},{"Key":"good point,","Fragments":["let"]},{"Key":"point, let","Fragments":["me"]},{"Key":"me have","Fragments":["a"]},{"Key":"a go","Fragments":["at"]},{"Key":"go at","Fragments":["this.","it."]},{"Key":"at this.","Fragments":["It"]},{"Key":"this. It","Fragments":["might"]},{"Key":" Perhaps","Fragments":["you","you","you","you","you","you"]},{"Key":"Perhaps you","Fragments":["could","could","could","could","could","could"]},{"Key":"the `Random`","Fragments":["classes'"]},{"Key":"`Random` classes'","Fragments":["`alphanumeric`"]},{"Key":"classes' `alphanumeric`","Fragments":["property,"]},{"Key":"`alphanumeric` property,","Fragments":["which"]},{"Key":"property, which","Fragments":["is"]},{"Key":"is basically","Fragments":["a"]},{"Key":"basically a","Fragments":["stream"]},{"Key":"a stream","Fragments":["of"]},{"Key":"stream of","Fragments":["random"]},{"Key":"of random","Fragments":["letters"]},{"Key":"random letters","Fragments":["and"]},{"Key":"Using `\"[^\\\\W']+\"`","Fragments":["as"]},{"Key":"`\"[^\\\\W']+\"` as","Fragments":["your"]},{"Key":"as your","Fragments":["split","recursive","first","original"]},{"Key":"your split","Fragments":["regex"]},{"Key":"split regex","Fragments":["should"]},{"Key":"regex should","Fragments":["do"]},{"Key":"should do","Fragments":["it."]},{"Key":"To be","Fragments":["consistent"]},{"Key":"be consistent","Fragments":["with"]},{"Key":"consistent with","Fragments":["your"]},{"Key":"with your","Fragments":["\"\\_.size\""]},{"Key":"your \"\\_.size\"","Fragments":["notation"]},{"Key":"\"\\_.size\" notation","Fragments":["in"]},{"Key":"notation in","Fragments":["mapValues"]},{"Key":"in mapValues","Fragments":["you"]},{"Key":"mapValues you","Fragments":["could"]},{"Key":"use \"\\_.toLowerCase\"","Fragments":["in"]},{"Key":"\"\\_.toLowerCase\" in","Fragments":["the"]},{"Key":"however what","Fragments":["about"]},{"Key":"using foldLeft?","Fragments":["I"]},{"Key":"foldLeft? I","Fragments":["used"]},{"Key":"used foldLeft","Fragments":["for"]},{"Key":"foldLeft for","Fragments":["my"]},{"Key":"for my","Fragments":["solution","own","own"]},{"Key":"solution and","Fragments":["I"]},{"Key":"know which","Fragments":["one"]},{"Key":"which one","Fragments":["is"]},{"Key":"one is","Fragments":["better.","faster"]},{"Key":"is better.","Fragments":["Mine"]},{"Key":"better. Mine","Fragments":["is"]},{"Key":"Mine is","Fragments":["a"]},{"Key":"a one-liner","Fragments":["but","at","solution"]},{"Key":"one-liner but","Fragments":["that's"]},{"Key":"that's not","Fragments":["really"]},{"Key":"good way","Fragments":["to"]},{"Key":"to measure","Fragments":["software"]},{"Key":"measure software","Fragments":["quality"]},{"Key":"software quality","Fragments":[":)"]},{"Key":"this and","Fragments":["I","the"]},{"Key":"have too","Fragments":["much"]},{"Key":"much to","Fragments":["add"]},{"Key":"add except","Fragments":["to"]},{"Key":"except to","Fragments":["suggest"]},{"Key":"to suggest","Fragments":["a"]},{"Key":"suggest a","Fragments":["couple"]},{"Key":"of possibilities.","Fragments":["What"]},{"Key":"possibilities. What","Fragments":["do"]},{"Key":"about Map.empty[...]?","Fragments":["I've"]},{"Key":"Map.empty[...]? I've","Fragments":["started"]},{"Key":"I've started","Fragments":["to"]},{"Key":"started to","Fragments":["use"]},{"Key":"this more","Fragments":["and"]},{"Key":"more and","Fragments":["it","more","more"]},{"Key":"is *maybe*","Fragments":["slightly"]},{"Key":"*maybe* slightly","Fragments":["more"]},{"Key":"readable. Also,","Fragments":["how"]},{"Key":"Also, how","Fragments":["do"]},{"Key":"how do","Fragments":["you"]},{"Key":"feel about","Fragments":["using"]},{"Key":"a wildcard","Fragments":["in"]},{"Key":"wildcard in","Fragments":["the"]},{"Key":"the map?","Fragments":["That"]},{"Key":"map? That","Fragments":["is"]},{"Key":"That is","Fragments":["another"]},{"Key":"is another","Fragments":["thing","way"]},{"Key":"another thing","Fragments":["I'm"]},{"Key":"thing I'm","Fragments":["doing"]},{"Key":"I'm doing","Fragments":["more"]},{"Key":"doing more","Fragments":["and"]},{"Key":"more but","Fragments":["sometimes"]},{"Key":"but sometimes","Fragments":["there's"]},{"Key":"sometimes there's","Fragments":["a"]},{"Key":"a readability","Fragments":["tradeoff"]},{"Key":"readability tradeoff","Fragments":[":)"]},{"Key":"think foldLeft","Fragments":["is"]},{"Key":"foldLeft is","Fragments":["compact"]},{"Key":"is compact","Fragments":["and","and"]},{"Key":"compact and","Fragments":["maybe","consists"]},{"Key":"and maybe","Fragments":["a","there"]},{"Key":"maybe a","Fragments":["better"]},{"Key":"better abstraction","Fragments":["for"]},{"Key":"abstraction for","Fragments":["the"]},{"Key":"the operation","Fragments":["of"]},{"Key":"operation of","Fragments":["transforming"]},{"Key":"of transforming","Fragments":["the"]},{"Key":"transforming the","Fragments":["map."]},{"Key":"the map.","Fragments":["Using"]},{"Key":"map. Using","Fragments":["the"]},{"Key":"the for-comprehension","Fragments":["it"]},{"Key":"for-comprehension it","Fragments":["takes"]},{"Key":"it takes","Fragments":["the"]},{"Key":"takes the","Fragments":["extra"]},{"Key":"extra step","Fragments":["that"]},{"Key":"step that","Fragments":["fold"]},{"Key":"that fold","Fragments":["wouldn't"]},{"Key":"fold wouldn't","Fragments":["so"]},{"Key":"wouldn't so","Fragments":["folding"]},{"Key":"so folding","Fragments":["is"]},{"Key":"folding is","Fragments":["probably"]},{"Key":"probably faster.","Fragments":["But"]},{"Key":"faster. But","Fragments":["the"]},{"Key":"the version","Fragments":["with"]},{"Key":"version with","Fragments":["fold"]},{"Key":"with fold","Fragments":["takes"]},{"Key":"fold takes","Fragments":["me"]},{"Key":"takes me","Fragments":["longer"]},{"Key":"me longer","Fragments":["to"]},{"Key":"longer to","Fragments":["understand"]},{"Key":"understand than","Fragments":["the"]},{"Key":"the for-comprehension;","Fragments":["perhaps"]},{"Key":"for-comprehension; perhaps","Fragments":["that's"]},{"Key":"perhaps that's","Fragments":["the","just"]},{"Key":"that's the","Fragments":["imperative"]},{"Key":"the imperative","Fragments":["thinking"]},{"Key":"imperative thinking","Fragments":["of"]},{"Key":"of my","Fragments":["brain","suggestions."]},{"Key":"my brain","Fragments":["coming"]},{"Key":"brain coming","Fragments":["to"]},{"Key":"coming to","Fragments":["the"]},{"Key":"the fore","Fragments":[":)"]},{"Key":"fore :)","Fragments":["Thanks"]},{"Key":":) Thanks","Fragments":["for"]},{"Key":" Yes","Fragments":["-"]},{"Key":"Yes -","Fragments":["I"]},{"Key":"agree that","Fragments":["Map.empty","not","it"]},{"Key":"that Map.empty","Fragments":["is"]},{"Key":"Map.empty is","Fragments":["better"]},{"Key":"better :)","Fragments":["I'll"]},{"Key":":) I'll","Fragments":["try"]},{"Key":"try implementing","Fragments":["your"]},{"Key":"implementing your","Fragments":["suggestions"]},{"Key":"your suggestions","Fragments":["and"]},{"Key":"suggestions and","Fragments":["see"]},{"Key":" i'd","Fragments":["like"]},{"Key":"i'd like","Fragments":["to"]},{"Key":"use more","Fragments":["pattern"]},{"Key":"more pattern","Fragments":["matching,"]},{"Key":"matching, as","Fragments":["it's"]},{"Key":"as it's","Fragments":["the"]},{"Key":"it's the","Fragments":["scala"]},{"Key":"scala way.","Fragments":["For"]},{"Key":"way. For","Fragments":["the"]},{"Key":"For the","Fragments":["regex","conditionals"]},{"Key":"regex match","Fragments":["and"]},{"Key":"if else","Fragments":["chain"]},{"Key":"Nice trick","Fragments":["with"]},{"Key":"trick with","Fragments":["toUppercase."]},{"Key":"with toUppercase.","Fragments":["But"]},{"Key":"toUppercase. But","Fragments":["i"]},{"Key":"But i","Fragments":["guess"]},{"Key":"i guess","Fragments":["that"]},{"Key":"guess that","Fragments":["makes","was"]},{"Key":"the Regex","Fragments":["match"]},{"Key":"Regex match","Fragments":["unnecessairy,"]},{"Key":"match unnecessairy,","Fragments":["cause"]},{"Key":"unnecessairy, cause","Fragments":["it's"]},{"Key":"cause it's","Fragments":["always"]},{"Key":"it's always","Fragments":["true."]},{"Key":"I'd also","Fragments":["move","suggest","recomend"]},{"Key":"also move","Fragments":["the"]},{"Key":"matching as","Fragments":["inner"]},{"Key":"as inner","Fragments":["functions","functions"]},{"Key":"functions of","Fragments":["hey,"]},{"Key":"of hey,","Fragments":["which"]},{"Key":"hey, which","Fragments":["will"]},{"Key":"which will","Fragments":["make","cause","add"]},{"Key":"will make","Fragments":["the","your"]},{"Key":"the statement","Fragments":["paremter"]},{"Key":"statement paremter","Fragments":["awailable"]},{"Key":"paremter awailable","Fragments":["to"]},{"Key":"awailable to","Fragments":["them"]},{"Key":"to them","Fragments":["by"]},{"Key":"them by","Fragments":["default."]},{"Key":"Another unwritten","Fragments":["convention"]},{"Key":"unwritten convention","Fragments":["for"]},{"Key":"convention for","Fragments":["Scala"]},{"Key":"for Scala","Fragments":["is"]},{"Key":"Scala is","Fragments":["prefixing"]},{"Key":"is prefixing","Fragments":["checking"]},{"Key":"prefixing checking","Fragments":["functions"]},{"Key":"checking functions","Fragments":["with"]},{"Key":"functions with","Fragments":["`is`"]},{"Key":"def hey(statement:String):String","Fragments":["="]},{"Key":"hey(statement:String):String =","Fragments":["{"]},{"Key":"def isShouting():Boolean","Fragments":["="]},{"Key":"isShouting():Boolean =","Fragments":["statement"]},{"Key":"= statement","Fragments":["=="]},{"Key":"statement ==","Fragments":["statement.toUpperCase"]},{"Key":"def isQuestion():Boolean","Fragments":["="]},{"Key":"isQuestion():Boolean =","Fragments":["statement.endsWith(\"?\")"]},{"Key":"def isSilence():Boolean","Fragments":["="]},{"Key":"isSilence():Boolean =","Fragments":["statement.trim.isEmpty"]},{"Key":"if (isShouting)","Fragments":["\"Woah,"]},{"Key":"(isShouting) \"Woah,","Fragments":["chill"]},{"Key":"else if","Fragments":["(isQuestion)","(isSlence)","(message.toUpperCase","(message.endsWith(\"?\"))","statement.","(...)","(...)"]},{"Key":"if (isQuestion)","Fragments":["\"Sure.\""]},{"Key":"if (isSlence)","Fragments":["\"Fine."]},{"Key":"(isSlence) \"Fine.","Fragments":["Be"]},{"Key":"the feedback","Fragments":["-"]},{"Key":"feedback -","Fragments":["I'm"]},{"Key":"- I'm","Fragments":["new"]},{"Key":"to Scala,","Fragments":["so"]},{"Key":"Scala, so","Fragments":["I"]},{"Key":"really appreciate","Fragments":["the"]},{"Key":"appreciate the","Fragments":["feedback!","pointers"]},{"Key":"The regex","Fragments":["in","can","is"]},{"Key":"regex in","Fragments":["'shouting'"]},{"Key":"in 'shouting'","Fragments":["is"]},{"Key":"'shouting' is","Fragments":["such"]},{"Key":"is such","Fragments":["that"]},{"Key":"that strings","Fragments":["that"]},{"Key":"that only","Fragments":["contain","iterates","the"]},{"Key":"only contain","Fragments":["numbers"]},{"Key":"contain numbers","Fragments":["aren't"]},{"Key":"numbers aren't","Fragments":["considered"]},{"Key":"aren't considered","Fragments":["shouting."]},{"Key":"shouting. I'll","Fragments":["try"]},{"Key":"that more","Fragments":["clear"]},{"Key":"more clear","Fragments":["by"]},{"Key":"clear by","Fragments":["moving","the"]},{"Key":"by moving","Fragments":["the"]},{"Key":"regex to","Fragments":["its"]},{"Key":"own function","Fragments":["with"]},{"Key":"function with","Fragments":["a","a","a","the"]},{"Key":"the 'if'","Fragments":["is"]},{"Key":"'if' is","Fragments":["better"]},{"Key":"better expressed","Fragments":["as"]},{"Key":"be cleaner","Fragments":["if","if","to"]},{"Key":"cleaner if","Fragments":["you","you"]},{"Key":"had an","Fragments":["if/else"]},{"Key":"an if/else","Fragments":["chain,"]},{"Key":"if/else chain,","Fragments":["since"]},{"Key":"chain, since","Fragments":["you"]},{"Key":"since you","Fragments":["basically","are","call"]},{"Key":"you basically","Fragments":["put"]},{"Key":"basically put","Fragments":["that"]},{"Key":"put that","Fragments":["inside"]},{"Key":"that inside","Fragments":["a"]},{"Key":"inside a","Fragments":["match."]},{"Key":"do `arg.last","Fragments":["=="]},{"Key":"`arg.last ==","Fragments":["'?'`"]},{"Key":"== '?'`","Fragments":["for","This"]},{"Key":"'?'` for","Fragments":["the"]},{"Key":" simple","Fragments":["String"]},{"Key":"simple String","Fragments":["matching,"]},{"Key":"String matching,","Fragments":["I"]},{"Key":"matching, I","Fragments":["guess"]},{"Key":"guess a","Fragments":["\"nicer\""]},{"Key":"a \"nicer\"","Fragments":["way"]},{"Key":"\"nicer\" way","Fragments":["would"]},{"Key":"be to","Fragments":["check","clone","collapse","rename","create","use"]},{"Key":"all upercase","Fragments":["/"]},{"Key":"upercase /","Fragments":["'!'"]},{"Key":"/ '!'","Fragments":["in"]},{"Key":"'!' in","Fragments":["the"]},{"Key":"end for","Fragments":["the"]},{"Key":"second case","Fragments":["and"]},{"Key":"case and","Fragments":["'?'"]},{"Key":"and '?'","Fragments":["for"]},{"Key":"'?' for","Fragments":["the"]},{"Key":"third case","Fragments":["after"]},{"Key":"case after","Fragments":["I"]},{"Key":"after I","Fragments":["look","initialized","ran"]},{"Key":"I look","Fragments":["at"]},{"Key":"also started","Fragments":["going"]},{"Key":"started going","Fragments":["down"]},{"Key":"going down","Fragments":["the"]},{"Key":"the foldLeft","Fragments":["path"]},{"Key":"foldLeft path","Fragments":["but"]},{"Key":"path but","Fragments":["soon"]},{"Key":"but soon","Fragments":["discovered"]},{"Key":"soon discovered","Fragments":["there's"]},{"Key":"discovered there's","Fragments":["a"]},{"Key":"straightforward way","Fragments":["to"]},{"Key":"do this:","Fragments":["call"]},{"Key":"this: call","Fragments":["count"]},{"Key":"call count","Fragments":["after","method"]},{"Key":"count after","Fragments":["zipping"]},{"Key":"after zipping","Fragments":["e.g."]},{"Key":"zipping e.g.","Fragments":["`strand1.zip(strand2).count"]},{"Key":"e.g. `strand1.zip(strand2).count","Fragments":["{"]},{"Key":"`strand1.zip(strand2).count {","Fragments":["case"]},{"Key":"case (a,","Fragments":["b)"]},{"Key":"(a, b)","Fragments":["=\u003e"]},{"Key":"b) =\u003e","Fragments":["a"]},{"Key":"consider converting","Fragments":["Message"]},{"Key":"converting Message","Fragments":["into"]},{"Key":"Message into","Fragments":["an"]},{"Key":"into an","Fragments":["extension"]},{"Key":"an extension","Fragments":["methods"]},{"Key":"extension methods","Fragments":["class"]},{"Key":"methods class","Fragments":["for"]},{"Key":"class for","Fragments":["isSilence/isShouting/isQuestion"]},{"Key":"for isSilence/isShouting/isQuestion","Fragments":["e.g."]},{"Key":" ```object","Fragments":["Bob"]},{"Key":"```object Bob","Fragments":["{"]},{"Key":" implicit","Fragments":["class"]},{"Key":"implicit class","Fragments":["Message(val","to"]},{"Key":"class Message(val","Fragments":["message:"]},{"Key":"Message(val message:","Fragments":["String)"]},{"Key":"message: String)","Fragments":["extends"]},{"Key":"String) extends","Fragments":["AnyVal"]},{"Key":"extends AnyVal","Fragments":["{"]},{"Key":"AnyVal {","Fragments":["..."]},{"Key":"the `new","Fragments":["Message(message)`"]},{"Key":"`new Message(message)`","Fragments":["and"]},{"Key":"Message(message)` and","Fragments":["you"]},{"Key":"won't even","Fragments":["be"]},{"Key":"even be","Fragments":["creating"]},{"Key":"be creating","Fragments":["a"]},{"Key":"new object","Fragments":["(it"]},{"Key":"object (it","Fragments":["will"]},{"Key":"(it will","Fragments":["be"]},{"Key":"be compiled","Fragments":["away)."]},{"Key":"would argue","Fragments":["that"]},{"Key":"argue that","Fragments":["regexes"]},{"Key":"that regexes","Fragments":["are"]},{"Key":"regexes are","Fragments":["a","too"]},{"Key":"a barrier","Fragments":["to"]},{"Key":"barrier to","Fragments":["comprehension"]},{"Key":"to comprehension","Fragments":["generally"]},{"Key":"comprehension generally","Fragments":["as"]},{"Key":"generally as","Fragments":["unless"]},{"Key":"as unless","Fragments":["you're"]},{"Key":"unless you're","Fragments":["using"]},{"Key":"using them","Fragments":["every"]},{"Key":"them every","Fragments":["day"]},{"Key":"day they","Fragments":["require"]},{"Key":"they require","Fragments":["careful"]},{"Key":"require careful","Fragments":["thought"]},{"Key":"careful thought","Fragments":["each"]},{"Key":"thought each","Fragments":["time"]},{"Key":"time re-encountered.","Fragments":["Often"]},{"Key":"re-encountered. Often","Fragments":["unavoidable,"]},{"Key":"Often unavoidable,","Fragments":["here"]},{"Key":"unavoidable, here","Fragments":["they"]},{"Key":"here they","Fragments":["seem"]},{"Key":"they seem","Fragments":["somewhat"]},{"Key":"seem somewhat","Fragments":["more"]},{"Key":"somewhat more","Fragments":["avoidable"]},{"Key":"more avoidable","Fragments":["because"]},{"Key":"avoidable because","Fragments":["of"]},{"Key":"the simplicity","Fragments":["of","in"]},{"Key":"simplicity of","Fragments":["the"]},{"Key":"the various","Fragments":["conditions.","type"]},{"Key":"various conditions.","Fragments":["e.g."]},{"Key":"conditions. e.g.","Fragments":["compare"]},{"Key":"e.g. compare","Fragments":["for"]},{"Key":"compare for","Fragments":["silence"]},{"Key":"for silence","Fragments":["`\"\"\"^\\s*$\"\"\"`"]},{"Key":"silence `\"\"\"^\\s*$\"\"\"`","Fragments":["vs"]},{"Key":"`\"\"\"^\\s*$\"\"\"` vs","Fragments":["`msg.trim.isEmpty`"]},{"Key":" Super","Fragments":["nit","nit"]},{"Key":"Super nit","Fragments":["pick:","pick:"]},{"Key":"nit pick:","Fragments":["the","there's"]},{"Key":"pick: the","Fragments":["open/closed"]},{"Key":"the open/closed","Fragments":["curly"]},{"Key":"open/closed curly","Fragments":["after"]},{"Key":"curly after","Fragments":["`=`"]},{"Key":"after `=`","Fragments":["in"]},{"Key":"`=` in","Fragments":["the"]},{"Key":"the method","Fragments":["def","name","(the","returned","with"]},{"Key":"method def","Fragments":["of"]},{"Key":"def of","Fragments":["`hey`"]},{"Key":"Nice concise","Fragments":["submission."]},{"Key":" For","Fragments":["clarity","a","completeness","your"]},{"Key":"For clarity","Fragments":["I"]},{"Key":"clarity I","Fragments":["would"]},{"Key":"have created","Fragments":["separate"]},{"Key":"created separate","Fragments":["functions"]},{"Key":"separate functions","Fragments":["for"]},{"Key":"functions for","Fragments":["each"]},{"Key":"each test","Fragments":["(e.g."]},{"Key":"test (e.g.","Fragments":["`def","`isQuestion`)"]},{"Key":"(e.g. `def","Fragments":["isSilence(msg:"]},{"Key":"`def isSilence(msg:","Fragments":["String)"]},{"Key":"isSilence(msg: String)","Fragments":["="]},{"Key":"= msg.trim.isEmpty`","Fragments":["and"]},{"Key":"msg.trim.isEmpty` and","Fragments":["`case"]},{"Key":"and `case","Fragments":["phrase"]},{"Key":"`case phrase","Fragments":["if"]},{"Key":"phrase if","Fragments":["isSilence(phrase)`)"]},{"Key":"if isSilence(phrase)`)","Fragments":["because"]},{"Key":"isSilence(phrase)`) because","Fragments":["with"]},{"Key":"because with","Fragments":["the"]},{"Key":"shouting case","Fragments":["it"]},{"Key":"it clearly","Fragments":["gets"]},{"Key":"clearly gets","Fragments":["a"]},{"Key":"gets a","Fragments":["bit","map,"]},{"Key":"bit out","Fragments":["of"]},{"Key":"pick: there's","Fragments":["an"]},{"Key":"there's an","Fragments":["overuse"]},{"Key":"an overuse","Fragments":["of"]},{"Key":"overuse of","Fragments":["a"]},{"Key":"few bits","Fragments":["of"]},{"Key":"bits of","Fragments":["syntax."]},{"Key":"of syntax.","Fragments":["`if(phrase.trim.isEmpty)`"]},{"Key":"syntax. `if(phrase.trim.isEmpty)`","Fragments":["here"]},{"Key":"`if(phrase.trim.isEmpty)` here","Fragments":["can"]},{"Key":"here can","Fragments":["be"]},{"Key":"be collapsed","Fragments":["to","to"]},{"Key":"collapsed to","Fragments":["`if","`="]},{"Key":"to `if","Fragments":["phrase.trim.isEmpty`"]},{"Key":"`if phrase.trim.isEmpty`","Fragments":["and"]},{"Key":"phrase.trim.isEmpty` and","Fragments":["`="]},{"Key":"and `=","Fragments":["{"]},{"Key":"`= {","Fragments":["saying"]},{"Key":"{ saying","Fragments":["match"]},{"Key":"saying match","Fragments":["...","...`."]},{"Key":"match ...","Fragments":["}`"]},{"Key":"... }`","Fragments":["can"]},{"Key":"}` can","Fragments":["be"]},{"Key":"to `=","Fragments":["saying"]},{"Key":"`= saying","Fragments":["match"]},{"Key":"match ...`.","Fragments":["The"]},{"Key":"...`. The","Fragments":["added"]},{"Key":"The added","Fragments":["whitespace"]},{"Key":"added whitespace","Fragments":["you"]},{"Key":"whitespace you","Fragments":["get"]},{"Key":"you get","Fragments":["from","the","the"]},{"Key":"get from","Fragments":["removing"]},{"Key":"from removing","Fragments":["extraneous"]},{"Key":"removing extraneous","Fragments":["syntax"]},{"Key":"extraneous syntax","Fragments":["helps"]},{"Key":"syntax helps","Fragments":["the"]},{"Key":"helps the","Fragments":["code"]},{"Key":"code breath","Fragments":["a"]},{"Key":"breath a","Fragments":["bit"]},{"Key":"to strip","Fragments":["the"]},{"Key":"strip the","Fragments":["characters"]},{"Key":"the characters","Fragments":["that","are","are"]},{"Key":"characters that","Fragments":["are","differ."]},{"Key":"not words.","Fragments":["You"]},{"Key":"words. You","Fragments":["can"]},{"Key":"can modify","Fragments":["the","the"]},{"Key":"modify the","Fragments":["split","split"]},{"Key":"the split","Fragments":["regexp","regexp"]},{"Key":"split regexp","Fragments":["by","and"]},{"Key":"regexp by","Fragments":["removing"]},{"Key":"by removing","Fragments":["all"]},{"Key":"removing all","Fragments":["non"]},{"Key":"all non","Fragments":["words","word"]},{"Key":"non words","Fragments":["that"]},{"Key":"words that","Fragments":["aren't"]},{"Key":"that aren't","Fragments":["apostrophes"]},{"Key":"first nitpick","Fragments":["would"]},{"Key":"nitpick would","Fragments":["be"]},{"Key":"be that","Fragments":["you","way!\","]},{"Key":"you iterate","Fragments":["multiple"]},{"Key":"iterate multiple","Fragments":["times"]},{"Key":"multiple times","Fragments":["over"]},{"Key":"times over","Fragments":["the"]},{"Key":"the strings,","Fragments":["for"]},{"Key":"strings, for","Fragments":["example"]},{"Key":"example you","Fragments":["check"]},{"Key":"you check","Fragments":["for"]},{"Key":" which","Fragments":["has"]},{"Key":"which has","Fragments":["to"]},{"Key":"to iterate","Fragments":["over","through"]},{"Key":"strings but","Fragments":["your"]},{"Key":"for loop","Fragments":["later"]},{"Key":"loop later","Fragments":["already"]},{"Key":"later already","Fragments":["fullfills"]},{"Key":"already fullfills","Fragments":["this"]},{"Key":"fullfills this","Fragments":["case."]},{"Key":"a later","Fragments":["iteration"]},{"Key":"later iteration","Fragments":["I"]},{"Key":"iteration I","Fragments":["would","pulled"]},{"Key":"to nitpick","Fragments":["about"]},{"Key":"nitpick about","Fragments":["the"]},{"Key":"of 'var'","Fragments":["in"]},{"Key":"'var' in","Fragments":["this"]},{"Key":"regexp and","Fragments":["avoid"]},{"Key":"and avoid","Fragments":["all"]},{"Key":"avoid all","Fragments":["non"]},{"Key":"non word","Fragments":["characters"]},{"Key":"word characters","Fragments":["except"]},{"Key":"characters except","Fragments":["the"]},{"Key":"except the","Fragments":["apostrophe."]},{"Key":"the apostrophe.","Fragments":["Something"]},{"Key":"apostrophe. Something","Fragments":["like"]},{"Key":"Thanks. That's","Fragments":["very"]},{"Key":"That's very","Fragments":["useful"]},{"Key":"very useful","Fragments":["feedback."]},{"Key":"useful feedback.","Fragments":["I"]},{"Key":"feedback. I","Fragments":["especially","moved"]},{"Key":"I especially","Fragments":["appreciate"]},{"Key":"especially appreciate","Fragments":["the"]},{"Key":"the pointers","Fragments":["towards"]},{"Key":"pointers towards","Fragments":["zip/List/StringOps."]},{"Key":" Simplest","Fragments":["code"]},{"Key":"Simplest code","Fragments":["I"]},{"Key":"think of,","Fragments":["its"]},{"Key":"of, its","Fragments":["very"]},{"Key":"its very","Fragments":["java-like"]},{"Key":"very java-like","Fragments":["though..."]},{"Key":"think isUpperOrDigit","Fragments":["is"]},{"Key":"isUpperOrDigit is","Fragments":["not"]},{"Key":"not used,","Fragments":["right?"]},{"Key":"Hi guys,","Fragments":["I'm"]},{"Key":"guys, I'm","Fragments":["coming"]},{"Key":"I'm coming","Fragments":["from"]},{"Key":"from ruby","Fragments":["trying"]},{"Key":"ruby trying","Fragments":["to"]},{"Key":"to grasp","Fragments":["statically","what"]},{"Key":"grasp statically","Fragments":["type"]},{"Key":"statically type","Fragments":["languages"]},{"Key":"type languages","Fragments":["and"]},{"Key":"languages and","Fragments":["functional"]},{"Key":"and functional","Fragments":["programming."]},{"Key":"functional programming.","Fragments":["Every"]},{"Key":"programming. Every","Fragments":["advise"]},{"Key":"Every advise","Fragments":["you"]},{"Key":"advise you","Fragments":["could"]},{"Key":"could give","Fragments":["me,"]},{"Key":"give me,","Fragments":["I"]},{"Key":"me, I","Fragments":["would"]},{"Key":"be very","Fragments":["thankful."]},{"Key":"What I","Fragments":["don't","mean","like","like"]},{"Key":"like about","Fragments":["this","this"]},{"Key":"about this","Fragments":["exercise,","solution"]},{"Key":"this exercise,","Fragments":["is"]},{"Key":"exercise, is","Fragments":["that"]},{"Key":"I pass","Fragments":["the"]},{"Key":"the message","Fragments":["to","into"]},{"Key":"message to","Fragments":["each"]},{"Key":"each of","Fragments":["the","the"]},{"Key":"the methods.","Fragments":["This"]},{"Key":"methods. This","Fragments":["looks"]},{"Key":"like Feature#envy","Fragments":["to"]},{"Key":"Feature#envy to","Fragments":["me."]},{"Key":"clear what","Fragments":["the"]},{"Key":"function input","Fragments":["is."]},{"Key":"would only","Fragments":["change","recommend"]},{"Key":"only change","Fragments":["the"]},{"Key":"change the","Fragments":["naming","```sortWith```","function","PrimeFactors","behavior"]},{"Key":"the naming","Fragments":["of"]},{"Key":"naming of","Fragments":["the"]},{"Key":"the variables.","Fragments":["string1"]},{"Key":"variables. string1","Fragments":["and"]},{"Key":"string1 and","Fragments":["string2"]},{"Key":"and string2","Fragments":["could"]},{"Key":"string2 could","Fragments":["be"]},{"Key":"only recommend","Fragments":["using"]},{"Key":"match inside","Fragments":["the"]},{"Key":"count block.","Fragments":["For"]},{"Key":"block. For","Fragments":["readability"]},{"Key":"For readability","Fragments":["purposes"]},{"Key":"recommend renaming","Fragments":["first"]},{"Key":"renaming first","Fragments":["and"]},{"Key":"first and","Fragments":["second,","then"]},{"Key":"and second,","Fragments":["because"]},{"Key":"second, because","Fragments":["they"]},{"Key":"are too","Fragments":["generic","specific"]},{"Key":" Awesome!","Fragments":["I"]},{"Key":"Awesome! I","Fragments":["was"]},{"Key":"for an","Fragments":["example","elegant"]},{"Key":"an example","Fragments":["of"]},{"Key":"a foldLeft","Fragments":["solution."]},{"Key":"small nitpick.","Fragments":["Generally"]},{"Key":"nitpick. Generally","Fragments":["on"]},{"Key":"Generally on","Fragments":["an"]},{"Key":"if statement,","Fragments":["I"]},{"Key":"statement, I","Fragments":["tend"]},{"Key":"the positive","Fragments":["branch"]},{"Key":"positive branch","Fragments":["at"]},{"Key":"branch at","Fragments":["the"]},{"Key":"the \"if\"","Fragments":["branch"]},{"Key":"\"if\" branch","Fragments":["instead"]},{"Key":"branch instead","Fragments":["of"]},{"Key":"the \"else\"","Fragments":["one(If"]},{"Key":"\"else\" one(If","Fragments":["that"]},{"Key":"one(If that","Fragments":["makes"]},{"Key":"makes any","Fragments":["sense...)."]},{"Key":"I mean","Fragments":["is:","functions"]},{"Key":"if (!containsWord)","Fragments":["\"buuu\""]},{"Key":"(!containsWord) \"buuu\"","Fragments":["else"]},{"Key":"\"buuu\" else","Fragments":["\"yeyy\""]},{"Key":"if (containsWord)","Fragments":["\"yeyy\""]},{"Key":"(containsWord) \"yeyy\"","Fragments":["else"]},{"Key":"\"yeyy\" else","Fragments":["\"buuu\""]},{"Key":"Also can","Fragments":["you"]},{"Key":"why did","Fragments":["you"]},{"Key":"did you","Fragments":["use","remove"]},{"Key":"use foldLeft","Fragments":["instead"]},{"Key":"foldLeft instead","Fragments":["of"]},{"Key":"a groupBy","Fragments":["and"]},{"Key":"groupBy and","Fragments":["then","mapValues"]},{"Key":"then a","Fragments":["mapValues?"]},{"Key":"First off,","Fragments":["welcome"]},{"Key":"off, welcome","Fragments":["to"]},{"Key":"welcome to","Fragments":["Scala!"]},{"Key":"to Scala!","Fragments":["I"]},{"Key":"am going","Fragments":["to","to"]},{"Key":"be thorough","Fragments":["in"]},{"Key":"thorough in","Fragments":["my"]},{"Key":"my comments,","Fragments":["but"]},{"Key":"comments, but","Fragments":["don't"]},{"Key":"but don't","Fragments":["let"]},{"Key":"don't let","Fragments":["my"]},{"Key":"let my","Fragments":["verbosity"]},{"Key":"my verbosity","Fragments":["put"]},{"Key":"verbosity put","Fragments":["you"]},{"Key":"put you","Fragments":["off"]},{"Key":"you off","Fragments":["from"]},{"Key":"off from","Fragments":["your"]},{"Key":"your hey()","Fragments":["method."]},{"Key":"hey() method.","Fragments":["The"]},{"Key":"method. The","Fragments":["fact"]},{"Key":"The fact","Fragments":["that"]},{"Key":"function is","Fragments":["compact","perfectly","independent","being","called."]},{"Key":"and consists","Fragments":["only"]},{"Key":"consists only","Fragments":["of"]},{"Key":"your if","Fragments":["block","statements.","statement"]},{"Key":"if block","Fragments":["is","is"]},{"Key":"block is","Fragments":["very","a"]},{"Key":"very idiomatic","Fragments":["functional"]},{"Key":"idiomatic functional","Fragments":["Scala"]},{"Key":"functional Scala","Fragments":["code."]},{"Key":" Your","Fragments":["isSilent()","isShouting()","tests","`match`","solution","reduceLeft","deDupedWords","sort","code"]},{"Key":"Your isSilent()","Fragments":["function"]},{"Key":"isSilent() function","Fragments":["is"]},{"Key":"is perfectly","Fragments":["succinct"]},{"Key":"Your isShouting()","Fragments":["and"]},{"Key":"isShouting() and","Fragments":["isQuestion()","isQuestion()","isQuestion()"]},{"Key":"and isQuestion()","Fragments":["methods","functions.","in"]},{"Key":"isQuestion() methods","Fragments":["are"]},{"Key":"are kind","Fragments":["of"]},{"Key":"of complex.","Fragments":["These"]},{"Key":"complex. These","Fragments":["functions"]},{"Key":"These functions","Fragments":["are"]},{"Key":"only called","Fragments":["with"]},{"Key":"called with","Fragments":["specific"]},{"Key":"with specific","Fragments":["assumptions"]},{"Key":"specific assumptions","Fragments":["in"]},{"Key":"assumptions in","Fragments":["the","your"]},{"Key":"the hey()","Fragments":["function"]},{"Key":"hey() function","Fragments":["(e.g."]},{"Key":"function (e.g.","Fragments":["isQuestion()"]},{"Key":"(e.g. isQuestion()","Fragments":["will"]},{"Key":"isQuestion() will","Fragments":["only"]},{"Key":"will only","Fragments":["be"]},{"Key":"only be","Fragments":["called"]},{"Key":"be called","Fragments":["if"]},{"Key":"called if","Fragments":["we"]},{"Key":"not shouting","Fragments":["based"]},{"Key":"shouting based","Fragments":["on"]},{"Key":"statement in","Fragments":["hey())","the","the","`hey`"]},{"Key":"in hey())","Fragments":["yet"]},{"Key":"hey()) yet","Fragments":["you"]},{"Key":"yet you","Fragments":["are"]},{"Key":"are re-checking","Fragments":["these"]},{"Key":"re-checking these","Fragments":["assumptions"]},{"Key":"these assumptions","Fragments":["in"]},{"Key":"your isShouting()","Fragments":["and"]},{"Key":"A general","Fragments":["TDD"]},{"Key":"general TDD","Fragments":["tip"]},{"Key":"TDD tip","Fragments":["is"]},{"Key":"tip is","Fragments":["that"]},{"Key":"only write","Fragments":["code"]},{"Key":"code that","Fragments":["is","may","uses"]},{"Key":"is going","Fragments":["to","to","above"]},{"Key":"tests pass.","Fragments":["In"]},{"Key":"pass. In","Fragments":["this"]},{"Key":"are splitting","Fragments":["the"]},{"Key":"splitting the","Fragments":["message"]},{"Key":"message into","Fragments":["words"]},{"Key":"into words","Fragments":["which"]},{"Key":"words which","Fragments":["does"]},{"Key":"does nothing","Fragments":["to"]},{"Key":"nothing to","Fragments":["help"]},{"Key":"help you","Fragments":["to"]},{"Key":"to pass.","Fragments":["It"]},{"Key":"pass. It","Fragments":["is"]},{"Key":"is extra","Fragments":["code"]},{"Key":"be useful","Fragments":["in","for","here."]},{"Key":"the future","Fragments":["but"]},{"Key":"future but","Fragments":["is"]},{"Key":"not necessary","Fragments":["today.","to"]},{"Key":"This gets","Fragments":["us"]},{"Key":"gets us","Fragments":["to"]},{"Key":"us to","Fragments":["your"]},{"Key":"your Feature#envy","Fragments":["comment."]},{"Key":"Feature#envy comment.","Fragments":["Since"]},{"Key":"comment. Since","Fragments":["your"]},{"Key":"Since your","Fragments":["can","`Accumulate`"]},{"Key":"your can","Fragments":["get"]},{"Key":"the wordsOf()","Fragments":["function"]},{"Key":"wordsOf() function","Fragments":["and"]},{"Key":"and collapse","Fragments":["isShouting()"]},{"Key":"collapse isShouting()","Fragments":["and"]},{"Key":"isQuestion() in","Fragments":["to"]},{"Key":"in to","Fragments":["simple"]},{"Key":"to simple","Fragments":["statements"]},{"Key":"simple statements","Fragments":["the"]},{"Key":"statements the","Fragments":["contents"]},{"Key":"the contents","Fragments":["of"]},{"Key":"contents of","Fragments":["these"]},{"Key":"these functions","Fragments":["can","you"]},{"Key":"functions can","Fragments":["be"]},{"Key":"be plugged","Fragments":["right"]},{"Key":"plugged right","Fragments":["into"]},{"Key":"right into","Fragments":["your"]},{"Key":"into your","Fragments":["if"]},{"Key":"if statements.","Fragments":["This"]},{"Key":"statements. This","Fragments":["won't","has"]},{"Key":"This won't","Fragments":["necessarily"]},{"Key":"won't necessarily","Fragments":["be"]},{"Key":"necessarily be","Fragments":["more"]},{"Key":"more idiomatic,","Fragments":["it"]},{"Key":"idiomatic, it","Fragments":["just"]},{"Key":"just addresses","Fragments":["the"]},{"Key":"addresses the","Fragments":["concern"]},{"Key":"the concern","Fragments":["that"]},{"Key":"concern that","Fragments":["you"]},{"Key":"The last","Fragments":["thing"]},{"Key":"last thing","Fragments":["I"]},{"Key":"to bring","Fragments":["up"]},{"Key":"bring up","Fragments":["is"]},{"Key":"up is","Fragments":["that"]},{"Key":"Scala a","Fragments":["string"]},{"Key":"a Seq\\[Char\\]","Fragments":["(through"]},{"Key":"Seq\\[Char\\] (through","Fragments":["implicits"]},{"Key":"(through implicits","Fragments":["so"]},{"Key":"implicits so","Fragments":["it"]},{"Key":"it might","Fragments":["not","be"]},{"Key":"might not","Fragments":["be","be"]},{"Key":"be obvious","Fragments":["in"]},{"Key":"obvious in","Fragments":["the"]},{"Key":"Scala docs)","Fragments":["so"]},{"Key":"docs) so","Fragments":["you"]},{"Key":"use all","Fragments":["the"]},{"Key":"on Seq.","Fragments":["I"]},{"Key":"Seq. I","Fragments":["can't"]},{"Key":"can't tell","Fragments":["whether"]},{"Key":"tell whether","Fragments":["you"]},{"Key":"you realize","Fragments":["that"]},{"Key":"realize that","Fragments":["based","accessing"]},{"Key":"that based","Fragments":["on"]},{"Key":"how you","Fragments":["split","handled","dealt"]},{"Key":"you split","Fragments":["out"]},{"Key":"split out","Fragments":["the"]},{"Key":"I love","Fragments":["`str.forall(_.isWhitespace)`!","the","how"]},{"Key":"love `str.forall(_.isWhitespace)`!","Fragments":["It"]},{"Key":"`str.forall(_.isWhitespace)`! It","Fragments":["is"]},{"Key":"my new","Fragments":["favorite"]},{"Key":"new favorite","Fragments":["functional"]},{"Key":"favorite functional","Fragments":["way"]},{"Key":"a blank","Fragments":["string."]},{"Key":"blank string.","Fragments":["Thanks"]},{"Key":"string. Thanks","Fragments":["for"]},{"Key":"for sharing","Fragments":["that."]},{"Key":"Your tests","Fragments":["will"]},{"Key":"tests will","Fragments":["pass"]},{"Key":"pass without","Fragments":["`str.exists(_.isLetter)`"]},{"Key":"do `str.endsWith(\"?\")`","Fragments":["is"]},{"Key":"`str.endsWith(\"?\")` is","Fragments":["`str.reverse.head"]},{"Key":"is `str.reverse.head","Fragments":["=="]},{"Key":"`str.reverse.head ==","Fragments":["'?'`"]},{"Key":"'?'` This","Fragments":["is"]},{"Key":"not necessarily","Fragments":["more"]},{"Key":"necessarily more","Fragments":["idiomatic"]},{"Key":"idiomatic since","Fragments":["dropping"]},{"Key":"since dropping","Fragments":["into"]},{"Key":"dropping into","Fragments":["the"]},{"Key":"the Java","Fragments":["convenience"]},{"Key":"Java convenience","Fragments":["methods"]},{"Key":"convenience methods","Fragments":["are"]},{"Key":"are perfectly","Fragments":["acceptable."]},{"Key":"Did you","Fragments":["run"]},{"Key":"you run","Fragments":["the"]},{"Key":"run the","Fragments":["tests?"]},{"Key":"the tests?","Fragments":["This"]},{"Key":"tests? This","Fragments":["code"]},{"Key":"code will","Fragments":["fail"]},{"Key":"will fail","Fragments":["a","if","for"]},{"Key":"fail a","Fragments":["bunch"]},{"Key":"of test","Fragments":["cases.","cases"]},{"Key":"test cases.","Fragments":["If","First"]},{"Key":"cases. If","Fragments":["your"]},{"Key":"If your","Fragments":["tests"]},{"Key":"your tests","Fragments":["are","(e.g."]},{"Key":"are passing","Fragments":["did"]},{"Key":"passing did","Fragments":["you"]},{"Key":"you remove","Fragments":["the","all"]},{"Key":"the pending","Fragments":["statements?"]},{"Key":"I solved","Fragments":["it"]},{"Key":"solved it","Fragments":["the"]},{"Key":"the \"old-school\"","Fragments":["way"]},{"Key":"\"old-school\" way","Fragments":["but"]},{"Key":"this can","Fragments":["be"]},{"Key":"be implemented","Fragments":["using","differently"]},{"Key":"implemented using","Fragments":["pattern"]},{"Key":"name \"matches\",","Fragments":["but"]},{"Key":"\"matches\", but","Fragments":["I"]},{"Key":"know a","Fragments":["better"]},{"Key":"better one.","Fragments":["I"]},{"Key":"one. I","Fragments":["think"]},{"Key":"think \"response\"","Fragments":["would"]},{"Key":"\"response\" would","Fragments":["have"]},{"Key":"better choice","Fragments":["than"]},{"Key":"choice than","Fragments":["\"respond\"."]},{"Key":"than \"respond\".","Fragments":["The"]},{"Key":"\"respond\". The","Fragments":["implicit"]},{"Key":"The implicit","Fragments":["conversion"]},{"Key":"conversion is","Fragments":["probably"]},{"Key":"probably overkill,","Fragments":["but"]},{"Key":"overkill, but","Fragments":["it"]},{"Key":"it enables","Fragments":["the"]},{"Key":"enables the","Fragments":["(in"]},{"Key":"the (in","Fragments":["my"]},{"Key":"my opinion)","Fragments":["nice"]},{"Key":"opinion) nice","Fragments":["definition"]},{"Key":"nice definition","Fragments":["of"]},{"Key":"of \"hey\".","Fragments":["On"]},{"Key":"\"hey\". On","Fragments":["the"]},{"Key":"other hand,","Fragments":["something"]},{"Key":"hand, something","Fragments":["like"]},{"Key":"like \"Intonation(s).response\"","Fragments":["(without"]},{"Key":"\"Intonation(s).response\" (without","Fragments":["the"]},{"Key":"(without the","Fragments":["implicit"]},{"Key":"implicit conversion)","Fragments":["would"]},{"Key":"conversion) would","Fragments":["be"]},{"Key":"be fine,","Fragments":["too..."]},{"Key":"feedback. True","Fragments":["enough"]},{"Key":"True enough","Fragments":["on"]},{"Key":"enough on","Fragments":["the"]},{"Key":"statement -","Fragments":["I"]},{"Key":"that was","Fragments":["my","well"]},{"Key":"was my","Fragments":["thought"]},{"Key":"my thought","Fragments":["process"]},{"Key":"thought process","Fragments":["at"]},{"Key":"process at","Fragments":["the"]},{"Key":"still trying","Fragments":["to"]},{"Key":"understand the","Fragments":["use"]},{"Key":"of groupBy","Fragments":["-"]},{"Key":"groupBy -","Fragments":["though"]},{"Key":"- though","Fragments":["it"]},{"Key":"the optimal","Fragments":["method"]},{"Key":"optimal method","Fragments":["to"]},{"Key":"use in","Fragments":["Scala."]},{"Key":"in Scala.","Fragments":["I'll","The","Attempted","I"]},{"Key":"Scala. I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["it"]},{"Key":"If statements","Fragments":["are"]},{"Key":"statements are","Fragments":["just"]},{"Key":"are just","Fragments":["fine"]},{"Key":"just fine","Fragments":["in"]},{"Key":"fine in","Fragments":["Scala"]},{"Key":"Scala -","Fragments":["not"]},{"Key":"- not","Fragments":["everything"]},{"Key":"not everything","Fragments":["needs","needs"]},{"Key":"everything needs","Fragments":["to","to"]},{"Key":"be pattern","Fragments":["matching.","matched,"]},{"Key":"Don't use","Fragments":["the"]},{"Key":"return keyword","Fragments":["in"]},{"Key":"keyword in","Fragments":["Scala."]},{"Key":"Scala. The","Fragments":["return"]},{"Key":"The return","Fragments":["value"]},{"Key":"last statement","Fragments":["of","in"]},{"Key":"statement of","Fragments":["the","a"]},{"Key":"function will","Fragments":["be"]},{"Key":"value for","Fragments":["that"]},{"Key":" Unlike","Fragments":["most"]},{"Key":"Unlike most","Fragments":["other"]},{"Key":"most other","Fragments":["languages"]},{"Key":"other languages","Fragments":["your"]},{"Key":"languages your","Fragments":["if"]},{"Key":"statement is","Fragments":["really","not","not","to","optional","returned."]},{"Key":"is really","Fragments":["a","checking"]},{"Key":"a statement","Fragments":["and"]},{"Key":"statement and","Fragments":["has"]},{"Key":"a return","Fragments":["value.","value."]},{"Key":"This whole","Fragments":["thing"]},{"Key":"whole thing","Fragments":["can"]},{"Key":"thing can","Fragments":["be"]},{"Key":"be compacted","Fragments":["to:"]},{"Key":"if (message.trim.isEmpty)","Fragments":["{"]},{"Key":" \"Fine.","Fragments":["Be"]},{"Key":"if (message.toUpperCase","Fragments":["=="]},{"Key":"(message.toUpperCase ==","Fragments":["message"]},{"Key":"== message","Fragments":["\u0026\u0026"]},{"Key":"message \u0026\u0026","Fragments":["\"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length"]},{"Key":"\u0026\u0026 \"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length","Fragments":["\u003e"]},{"Key":"\"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length \u003e","Fragments":["0"]},{"Key":"\u003e 0","Fragments":[")"]},{"Key":"0 )","Fragments":["{"]},{"Key":" \"Woah,","Fragments":["chill"]},{"Key":"if (message.endsWith(\"?\"))","Fragments":["{"]},{"Key":"The test","Fragments":["suite","for"]},{"Key":"test suite","Fragments":["contains"]},{"Key":"suite contains","Fragments":["four"]},{"Key":"contains four","Fragments":["typos"]},{"Key":"four typos","Fragments":["at"]},{"Key":"typos at","Fragments":["lines"]},{"Key":"at lines","Fragments":["14,"]},{"Key":"lines 14,","Fragments":["44,"]},{"Key":"14, 44,","Fragments":["50,"]},{"Key":"44, 50,","Fragments":["and"]},{"Key":"50, and","Fragments":["68."]},{"Key":"and 68.","Fragments":["\"Woah\""]},{"Key":"68. \"Woah\"","Fragments":["should"]},{"Key":"\"Woah\" should","Fragments":["be"]},{"Key":"be spelled","Fragments":["\"Whoa\",","`Woah`."]},{"Key":"spelled \"Whoa\",","Fragments":["according"]},{"Key":"\"Whoa\", according","Fragments":["to"]},{"Key":"the readme","Fragments":["instructions"]},{"Key":"readme instructions","Fragments":["(and"]},{"Key":"instructions (and","Fragments":["every"]},{"Key":"(and every","Fragments":["other"]},{"Key":"every other","Fragments":["version"]},{"Key":"other version","Fragments":["of"]},{"Key":"version of","Fragments":["this","```isQuestion```","accumulate.."]},{"Key":"this exercise","Fragments":["on","becomes","without","I","as"]},{"Key":"exercise on","Fragments":["exercism)."]},{"Key":" Trade","Fragments":["offs"]},{"Key":"- Reusability","Fragments":["(not"]},{"Key":"Reusability (not","Fragments":["very"]},{"Key":"(not very","Fragments":["reusable"]},{"Key":"very reusable","Fragments":["as"]},{"Key":"reusable as","Fragments":["parsing"]},{"Key":"as parsing","Fragments":["logic","the"]},{"Key":"parsing logic","Fragments":["is"]},{"Key":"logic is","Fragments":["tied"]},{"Key":"is tied","Fragments":["to"]},{"Key":"- Pattern","Fragments":["matching"]},{"Key":"with regex","Fragments":["was"]},{"Key":"regex was","Fragments":["an"]},{"Key":"an steep","Fragments":["learning"]},{"Key":"steep learning","Fragments":["curve."]},{"Key":"learning curve.","Fragments":["I"]},{"Key":"curve. I","Fragments":["now"]},{"Key":"now believe","Fragments":["that"]},{"Key":"believe that","Fragments":["it"]},{"Key":"it requires","Fragments":["the"]},{"Key":"requires the","Fragments":["use"]},{"Key":"a matching","Fragments":["group"]},{"Key":"A fold","Fragments":["is"]},{"Key":"fold is","Fragments":["the"]},{"Key":"the right","Fragments":["way","way","set"]},{"Key":"right way","Fragments":["to","to"]},{"Key":"to traverse","Fragments":["a"]},{"Key":"traverse a","Fragments":["sequence"]},{"Key":"a sequence","Fragments":["and"]},{"Key":"sequence and","Fragments":["accumulate"]},{"Key":"and accumulate","Fragments":["a"]},{"Key":"accumulate a","Fragments":["value,"]},{"Key":"a value,","Fragments":["but"]},{"Key":"value, but","Fragments":["in"]},{"Key":"are even","Fragments":["easier"]},{"Key":"even easier","Fragments":["ways"]},{"Key":"easier ways","Fragments":["to"]},{"Key":"ways to","Fragments":["compute","avoid","use"]},{"Key":"to compute","Fragments":["the","differences","differences"]},{"Key":"compute the","Fragments":["number"]},{"Key":"the number","Fragments":["of","of","in","of","of","of","of","of"]},{"Key":"number of","Fragments":["tuples","different","tuples","non-matches.","characters","test","elements","elements"]},{"Key":"tuples with","Fragments":["different"]},{"Key":"with different","Fragments":["components."]},{"Key":"different components.","Fragments":["Take"]},{"Key":"components. Take","Fragments":["a"]},{"Key":"a closer","Fragments":["look"]},{"Key":"closer look","Fragments":["at"]},{"Key":"on List.","Fragments":["There's","I"]},{"Key":"List. There's","Fragments":["some"]},{"Key":"There's some","Fragments":["cool"]},{"Key":"some cool","Fragments":["stuff"]},{"Key":"stuff in","Fragments":["there."]},{"Key":"Scala's regex","Fragments":["features"]},{"Key":"regex features","Fragments":["are"]},{"Key":"features are","Fragments":["very"]},{"Key":"are very","Fragments":["powerful","small"]},{"Key":"very powerful","Fragments":["but"]},{"Key":"powerful but","Fragments":["as","most"]},{"Key":"rule only","Fragments":["employ"]},{"Key":"only employ","Fragments":["them"]},{"Key":"employ them","Fragments":["when"]},{"Key":"them when","Fragments":["it's"]},{"Key":"when it's","Fragments":["really"]},{"Key":"on StringOps","Fragments":["(which"]},{"Key":"StringOps (which","Fragments":["you"]},{"Key":"(which you","Fragments":["can"]},{"Key":"use on","Fragments":["any"]},{"Key":"on any","Fragments":["string,"]},{"Key":"any string,","Fragments":["e.g."]},{"Key":"string, e.g.","Fragments":["addr.isEmpty)."]},{"Key":"The extra","Fragments":["level"]},{"Key":"extra level","Fragments":["of"]},{"Key":"level of","Fragments":["indirection"]},{"Key":"of indirection","Fragments":["(hey/handlerForAddress)"]},{"Key":"indirection (hey/handlerForAddress)","Fragments":["probably"]},{"Key":"(hey/handlerForAddress) probably","Fragments":["isn't"]},{"Key":"probably isn't","Fragments":["necessary."]},{"Key":"isn't necessary.","Fragments":["I"]},{"Key":"necessary. I","Fragments":["think"]},{"Key":"can map","Fragments":["directly"]},{"Key":"map directly","Fragments":["from"]},{"Key":"directly from","Fragments":["addr"]},{"Key":"from addr","Fragments":["to"]},{"Key":"addr to","Fragments":["the"]},{"Key":"could by","Fragments":["the"]},{"Key":"the indirection","Fragments":["point."]},{"Key":"indirection point.","Fragments":["```isEmpty```"]},{"Key":"point. ```isEmpty```","Fragments":["wasn't"]},{"Key":"```isEmpty``` wasn't","Fragments":["as"]},{"Key":"wasn't as","Fragments":["clean"]},{"Key":"as clean","Fragments":["because"]},{"Key":"clean because","Fragments":["we"]},{"Key":"because we","Fragments":["want","can"]},{"Key":"want white-space","Fragments":["characters"]},{"Key":"white-space characters","Fragments":["to"]},{"Key":"characters to","Fragments":["act"]},{"Key":"to act","Fragments":["as"]},{"Key":"act as","Fragments":["\"empty\""]},{"Key":" Removed","Fragments":["the"]},{"Key":"Removed the","Fragments":["unnecessary"]},{"Key":"unnecessary indirection","Fragments":["of"]},{"Key":"indirection of","Fragments":["```handlerForAddr("]},{"Key":"of ```handlerForAddr(","Fragments":[")```."]},{"Key":"```handlerForAddr( )```.","Fragments":["Still"]},{"Key":")```. Still","Fragments":["think"]},{"Key":"Still think","Fragments":["pattern"]},{"Key":"think pattern","Fragments":["matching"]},{"Key":"matching the","Fragments":["regex"]},{"Key":"regex is","Fragments":["the","going"]},{"Key":"best way","Fragments":["to"]},{"Key":"go because","Fragments":["StringOps"]},{"Key":"because StringOps","Fragments":["methods"]},{"Key":"StringOps methods","Fragments":["didn't"]},{"Key":"methods didn't","Fragments":["go"]},{"Key":"didn't go","Fragments":["far"]},{"Key":"go far","Fragments":["enough"]},{"Key":"think trailing","Fragments":["white","white"]},{"Key":"trailing white","Fragments":["space","space"]},{"Key":"white space","Fragments":["should","after"]},{"Key":"space should","Fragments":["be"]},{"Key":"be ignored","Fragments":["so"]},{"Key":"ignored so","Fragments":["a"]},{"Key":"so a","Fragments":["string"]},{"Key":"string like","Fragments":["\"What"]},{"Key":"like \"What","Fragments":["do"]},{"Key":"\"What do","Fragments":["you"]},{"Key":"you mean?","Fragments":["\""]},{"Key":"mean? \"","Fragments":["should"]},{"Key":"\" should","Fragments":["be"]},{"Key":"be classified","Fragments":["as","as"]},{"Key":"classified as","Fragments":["a","a"]},{"Key":" Compiling","Fragments":["regexes"]},{"Key":"Compiling regexes","Fragments":["is"]},{"Key":"regexes is","Fragments":["expensive"]},{"Key":"is expensive","Fragments":["so"]},{"Key":"expensive so","Fragments":["I'd"]},{"Key":"so I'd","Fragments":["move"]},{"Key":"I'd move","Fragments":["all"]},{"Key":"move all","Fragments":["the"]},{"Key":"the `\"\"\"...\"\"\".r`","Fragments":["outside"]},{"Key":"`\"\"\"...\"\"\".r` outside","Fragments":["of"]},{"Key":"outside of","Fragments":["`hey`","the"]},{"Key":"`hey` so","Fragments":["they"]},{"Key":"only get","Fragments":["compiled"]},{"Key":"get compiled","Fragments":["once"]},{"Key":"compiled once","Fragments":["rather"]},{"Key":"once rather","Fragments":["then"]},{"Key":"rather then","Fragments":["every"]},{"Key":"then every","Fragments":["time"]},{"Key":"time `hey`","Fragments":["is"]},{"Key":"`hey` is","Fragments":["called."]},{"Key":"that not","Fragments":["everything"]},{"Key":"pattern matched,","Fragments":["but"]},{"Key":"matched, but","Fragments":["I"]},{"Key":"did use","Fragments":["pattern"]},{"Key":"matching. An","Fragments":["example"]},{"Key":"An example","Fragments":["would"]},{"Key":"example would","Fragments":["be:"]},{"Key":"val YellingPattern","Fragments":["="]},{"Key":"YellingPattern =","Fragments":["\"\"\"[^a-z]*([A-Z]{2,})+[^a-z]*\"\"\".r"]},{"Key":" str","Fragments":["match"]},{"Key":"str match","Fragments":["{"]},{"Key":"case YellingPattern(_)","Fragments":["=\u003e"]},{"Key":"YellingPattern(_) =\u003e","Fragments":["\"Woah,"]},{"Key":"=\u003e \"Woah,","Fragments":["chill"]},{"Key":"One thing","Fragments":["to"]},{"Key":"thing to","Fragments":["note"]},{"Key":"to note","Fragments":["is"]},{"Key":"note is","Fragments":["the"]},{"Key":"matching group","Fragments":["in"]},{"Key":"group in","Fragments":["the"]},{"Key":"regex (located","Fragments":["between"]},{"Key":"(located between","Fragments":["the"]},{"Key":"the parentheses","Fragments":["```([A-Z]{2,})```).","of","from"]},{"Key":"parentheses ```([A-Z]{2,})```).","Fragments":["I"]},{"Key":"```([A-Z]{2,})```). I","Fragments":["am"]},{"Key":"not the","Fragments":["most","whole"]},{"Key":"most experience","Fragments":["matcher"]},{"Key":"experience matcher","Fragments":["of"]},{"Key":"matcher of","Fragments":["patterns,"]},{"Key":"of patterns,","Fragments":["but"]},{"Key":"patterns, but","Fragments":["I"]},{"Key":"I believe","Fragments":["a","numeric","I","this","`s`","you","you","you"]},{"Key":"believe a","Fragments":["regex"]},{"Key":"regex must","Fragments":["contain"]},{"Key":"must contain","Fragments":["a"]},{"Key":"contain a","Fragments":["match"]},{"Key":"a match","Fragments":["group"]},{"Key":"match group","Fragments":["to"]},{"Key":"group to","Fragments":["work"]},{"Key":"for pattern","Fragments":["matching."]},{"Key":"matching. That","Fragments":["could"]},{"Key":"That could","Fragments":["however,"]},{"Key":"could however,","Fragments":["be"]},{"Key":"however, be","Fragments":["a"]},{"Key":"a crock","Fragments":["of"]},{"Key":"crock of","Fragments":["shit,"]},{"Key":"of shit,","Fragments":["and"]},{"Key":"shit, and","Fragments":["simply"]},{"Key":"and simply","Fragments":["my"]},{"Key":"simply my","Fragments":["own"]},{"Key":"my own","Fragments":["personal","learning.","reference"]},{"Key":"own personal","Fragments":["experience"]},{"Key":"personal experience","Fragments":["debugging."]},{"Key":"the trimmed","Fragments":["value"]},{"Key":"trimmed value","Fragments":["of"]},{"Key":"of input","Fragments":["for"]},{"Key":"input for","Fragments":["all"]},{"Key":"tests. I","Fragments":["think"]},{"Key":"space after","Fragments":["a"]},{"Key":"after a","Fragments":["question"]},{"Key":"question mark","Fragments":["should"]},{"Key":"mark should","Fragments":["be"]},{"Key":" @mitchel","Fragments":["thanks"]},{"Key":"@mitchel thanks","Fragments":["for"]},{"Key":"for pointing","Fragments":["out"]},{"Key":"pointing out","Fragments":["that"]},{"Key":"that `if`","Fragments":["has"]},{"Key":"`if` has","Fragments":["a"]},{"Key":" @mitchel-isaacs,","Fragments":["thanks"]},{"Key":"@mitchel-isaacs, thanks","Fragments":["for"]},{"Key":"the triple-quote","Fragments":["string"]},{"Key":"triple-quote string","Fragments":["delimiter"]},{"Key":"string delimiter","Fragments":["avoids"]},{"Key":"delimiter avoids","Fragments":["the"]},{"Key":"avoids the","Fragments":["need"]},{"Key":"extra backslashes","Fragments":["and"]},{"Key":"backslashes and","Fragments":["makes"]},{"Key":"and makes","Fragments":["regexes"]},{"Key":"makes regexes","Fragments":["easier"]},{"Key":"regexes easier","Fragments":["to"]},{"Key":" Checkout","Fragments":["the"]},{"Key":"Checkout the","Fragments":["groupBy()"]},{"Key":"the groupBy()","Fragments":["method"]},{"Key":"groupBy() method","Fragments":["on"]},{"Key":"method on","Fragments":["List"]},{"Key":"on List","Fragments":["for"]},{"Key":"List for","Fragments":["an"]},{"Key":"elegant way","Fragments":["to"]},{"Key":"create that","Fragments":["Map."]},{"Key":"at `StringOps`.","Fragments":["It"]},{"Key":"`StringOps`. It","Fragments":["provides"]},{"Key":"for `String`s.","Fragments":["For"]},{"Key":"`String`s. For","Fragments":["example,"]},{"Key":"For example,","Fragments":["you","it's","about"]},{"Key":"example, you","Fragments":["can"]},{"Key":"can `count`","Fragments":["and"]},{"Key":"and `foldLeft`","Fragments":["directly"]},{"Key":"`foldLeft` directly","Fragments":["on"]},{"Key":"on `String`","Fragments":["without","is"]},{"Key":"`String` without","Fragments":["having"]},{"Key":"to explode","Fragments":["them"]},{"Key":"explode them","Fragments":["using"]},{"Key":"them using","Fragments":["`toC`arArray`."]},{"Key":"using `toC`arArray`.","Fragments":["All"]},{"Key":"`toC`arArray`. All","Fragments":["of"]},{"Key":"All of","Fragments":["the"]},{"Key":"`StringOps` methods","Fragments":["are"]},{"Key":"are available","Fragments":["automatically"]},{"Key":"available automatically","Fragments":["by"]},{"Key":"automatically by","Fragments":["an"]},{"Key":"by an","Fragments":["implicit"]},{"Key":"conversion in","Fragments":["Predef.","Scala"]},{"Key":" `List.contains`","Fragments":["is"]},{"Key":"`List.contains` is","Fragments":["probably"]},{"Key":"validation rather","Fragments":["than"]},{"Key":"than `0","Fragments":["=="]},{"Key":"`0 ==","Fragments":["ValidDNAChars.count`."]},{"Key":"the `String.isEmpty`","Fragments":["test"]},{"Key":"`String.isEmpty` test","Fragments":["in"]},{"Key":"in `nucleotideCounts`.","Fragments":["The","Looks"]},{"Key":"`nucleotideCounts`. The","Fragments":["default"]},{"Key":"The default","Fragments":["map"]},{"Key":"default map","Fragments":["is","with"]},{"Key":"map is","Fragments":["the","calculated"]},{"Key":"the initial","Fragments":["value"]},{"Key":"initial value","Fragments":["passed"]},{"Key":"value passed","Fragments":["to"]},{"Key":"fold so","Fragments":["if"]},{"Key":"so if","Fragments":["the","you"]},{"Key":"input list","Fragments":["is"]},{"Key":"list is","Fragments":["empty","nice,"]},{"Key":"is empty","Fragments":["that"]},{"Key":"empty that","Fragments":["default"]},{"Key":"that default","Fragments":["will"]},{"Key":"default will","Fragments":["fall"]},{"Key":"will fall","Fragments":["out"]},{"Key":"fall out","Fragments":["naturally."]},{"Key":"out naturally.","Fragments":["As"]},{"Key":"naturally. As","Fragments":["a"]},{"Key":"rule avoid","Fragments":["the"]},{"Key":"of `return`","Fragments":["in"]},{"Key":"`return` in","Fragments":["Scala.","the"]},{"Key":"For a","Fragments":["more"]},{"Key":"functional style","Fragments":["avoid"]},{"Key":"style avoid","Fragments":["the"]},{"Key":"of `var`s","Fragments":["and"]},{"Key":"`var`s and","Fragments":["mutable"]},{"Key":"and mutable","Fragments":["values."]},{"Key":"case `len`","Fragments":["could"]},{"Key":"`len` could","Fragments":["simply"]},{"Key":"could simply","Fragments":["be"]},{"Key":"simply be","Fragments":["made"]},{"Key":"made `val`","Fragments":["rather"]},{"Key":"`val` rather","Fragments":["than"]},{"Key":"than `var`","Fragments":["since"]},{"Key":"`var` since","Fragments":["it"]},{"Key":"it never","Fragments":["changes"]},{"Key":"never changes","Fragments":["after"]},{"Key":"changes after","Fragments":["it"]},{"Key":"after it","Fragments":["is"]},{"Key":"are ways","Fragments":["to"]},{"Key":"mutable `var`","Fragments":["for"]},{"Key":"`var` for","Fragments":["`distance`."]},{"Key":"for `distance`.","Fragments":["Look"]},{"Key":"`distance`. Look","Fragments":["at"]},{"Key":"Look at","Fragments":["the","```zip```"]},{"Key":"the documentation","Fragments":["for"]},{"Key":"documentation for","Fragments":["classes","my"]},{"Key":"for classes","Fragments":["like"]},{"Key":"classes like","Fragments":["`List`"]},{"Key":"like `List`","Fragments":["and"]},{"Key":"`List` and","Fragments":["`StringOps`"]},{"Key":"and `StringOps`","Fragments":["to"]},{"Key":"`StringOps` to","Fragments":["get"]},{"Key":"a feel","Fragments":["for"]},{"Key":"feel for","Fragments":["kinds"]},{"Key":"for kinds","Fragments":["of"]},{"Key":"kinds of","Fragments":["operations"]},{"Key":"of operations","Fragments":["that"]},{"Key":"operations that","Fragments":["are"]},{"Key":"are available.","Fragments":["There's"]},{"Key":"available. There's","Fragments":["a"]},{"Key":"single express","Fragments":["whose"]},{"Key":"express whose","Fragments":["value"]},{"Key":"whose value","Fragments":["is"]},{"Key":"value is","Fragments":["the","being","given"]},{"Key":"Also, for","Fragments":["this"]},{"Key":"of \"pair-wise\"","Fragments":["list"]},{"Key":"\"pair-wise\" list","Fragments":["processing"]},{"Key":"list processing","Fragments":["it's"]},{"Key":"processing it's","Fragments":["often"]},{"Key":"it's often","Fragments":["useful"]},{"Key":"often useful","Fragments":["to"]},{"Key":"useful to","Fragments":["use"]},{"Key":"use `zip`","Fragments":["to"]},{"Key":"`zip` to","Fragments":["convert","create"]},{"Key":"convert a","Fragments":["pair"]},{"Key":"pair of","Fragments":["lists"]},{"Key":"of lists","Fragments":["into"]},{"Key":"lists into","Fragments":["a"]},{"Key":"pairs (tuples).","Fragments":["`StringOps`"]},{"Key":"(tuples). `StringOps`","Fragments":["provides"]},{"Key":"`StringOps` provides","Fragments":["a"]},{"Key":"of list","Fragments":["like"]},{"Key":"list like","Fragments":["methods"]},{"Key":"like methods","Fragments":["that","for"]},{"Key":"that operate","Fragments":["on"]},{"Key":"operate on","Fragments":["strings."]},{"Key":"strings. It","Fragments":["is"]},{"Key":"The `groupBy`","Fragments":["method"]},{"Key":"`groupBy` method","Fragments":["is"]},{"Key":"pretty slick,","Fragments":["huh?"]},{"Key":"slick, huh?","Fragments":["It's"]},{"Key":"huh? It's","Fragments":["really"]},{"Key":"It's really","Fragments":["handy"]},{"Key":"really handy","Fragments":["for"]},{"Key":"for things","Fragments":["like","like"]},{"Key":"the few","Fragments":["of"]},{"Key":"few of","Fragments":["these"]},{"Key":"these early","Fragments":["exercises"]},{"Key":"early exercises","Fragments":["where"]},{"Key":"exercises where","Fragments":["I"]},{"Key":"where I","Fragments":["think"]},{"Key":"think a","Fragments":["regex","catch-all"]},{"Key":"regex actually","Fragments":["makes"]},{"Key":"actually makes","Fragments":["the"]},{"Key":"the solution","Fragments":["cleaner","you","can"]},{"Key":"solution cleaner","Fragments":["but"]},{"Key":"cleaner but","Fragments":["your"]},{"Key":"your approach","Fragments":["works,","and","after"]},{"Key":"approach works,","Fragments":["too."]},{"Key":" FYI,","Fragments":["the"]},{"Key":"FYI, the","Fragments":["function"]},{"Key":"function x","Fragments":["=\u003e"]},{"Key":"x =\u003e","Fragments":["x"]},{"Key":"x exists","Fragments":["in"]},{"Key":"exists in","Fragments":["the"]},{"Key":"the standard","Fragments":["library","library.","library"]},{"Key":"standard library","Fragments":["and","you"]},{"Key":"library and","Fragments":["is"]},{"Key":"and is","Fragments":["called"]},{"Key":" Couple","Fragments":["of"]},{"Key":"Couple of","Fragments":["things,"]},{"Key":"of things,","Fragments":["instead"]},{"Key":"things, instead","Fragments":["of"]},{"Key":"of filtering","Fragments":["you"]},{"Key":"filtering you","Fragments":["could"]},{"Key":"the .exists","Fragments":["method"]},{"Key":".exists method","Fragments":["that"]},{"Key":"on collections","Fragments":["and","helped"]},{"Key":"collections and","Fragments":["instead"]},{"Key":"and instead","Fragments":["of"]},{"Key":"of looking","Fragments":["to"]},{"Key":"looking to","Fragments":["see"]},{"Key":"characters are","Fragments":["spaces","grabbed"]},{"Key":"are spaces","Fragments":["you"]},{"Key":"spaces you","Fragments":["could"]},{"Key":"could just","Fragments":[".trim","filter"]},{"Key":"just .trim","Fragments":["and"]},{"Key":".trim and","Fragments":["check"]},{"Key":"and check","Fragments":["if"]},{"Key":"feel like","Fragments":["I","these"]},{"Key":"like I","Fragments":["should"]},{"Key":"been able","Fragments":["to"]},{"Key":"the ::","Fragments":["operator"]},{"Key":":: operator","Fragments":["to"]},{"Key":"operator to","Fragments":["destructure"]},{"Key":"to destructure","Fragments":["the","the"]},{"Key":"destructure the","Fragments":["sequences","tuple."]},{"Key":"the sequences","Fragments":["within"]},{"Key":"sequences within","Fragments":["the"]},{"Key":"the case","Fragments":["statements,","statements","matching","where","that"]},{"Key":"case statements,","Fragments":["but"]},{"Key":"statements, but","Fragments":["this"]},{"Key":"this didn't","Fragments":["work"]},{"Key":"didn't work","Fragments":["for","very"]},{"Key":"for me.","Fragments":["Thus,"]},{"Key":"me. Thus,","Fragments":["the"]},{"Key":"Thus, the","Fragments":["head"]},{"Key":"the head","Fragments":["and"]},{"Key":"head and","Fragments":["tail"]},{"Key":"and tail","Fragments":["calls"]},{"Key":"tail calls","Fragments":["."]},{"Key":"also didnt","Fragments":["need"]},{"Key":"didnt need","Fragments":["the"]},{"Key":"the explicit","Fragments":["string"]},{"Key":"explicit string","Fragments":["type"]},{"Key":"string type","Fragments":["on"]},{"Key":"type on","Fragments":["the"]},{"Key":" Nice,","Fragments":["the","but"]},{"Key":"Nice, the","Fragments":["only"]},{"Key":"might change","Fragments":["is","some"]},{"Key":"change is","Fragments":["to"]},{"Key":"to just","Fragments":["do","use","getting","perform","compare"]},{"Key":" greeting.trim","Fragments":["match"]},{"Key":"greeting.trim match","Fragments":["{"]},{"Key":" Then","Fragments":["you"]},{"Key":"Then you","Fragments":["don't"]},{"Key":"trim at","Fragments":["each"]},{"Key":"at each","Fragments":["lower","character.","index","index"]},{"Key":"each lower","Fragments":["part."]},{"Key":"just noticed","Fragments":["I"]},{"Key":"noticed I","Fragments":["can"]},{"Key":"the regular","Fragments":["expression:"]},{"Key":" private","Fragments":["def","def","def"]},{"Key":"private def","Fragments":["containsAtLeastOneLetter(m:","isQuestion(s:","isYell(m:"]},{"Key":"def containsAtLeastOneLetter(m:","Fragments":["String)"]},{"Key":"containsAtLeastOneLetter(m: String)","Fragments":["="]},{"Key":" m","Fragments":["exists","+","=="]},{"Key":"m exists","Fragments":["(_.isLetter)"]},{"Key":"I agree.","Fragments":["Thank"]},{"Key":"agree. Thank","Fragments":["you"]},{"Key":"a regular","Fragments":["method"]},{"Key":"regular method","Fragments":["I"]},{"Key":"method I","Fragments":["created","didn't"]},{"Key":"I created","Fragments":["a","a","the"]},{"Key":"created a","Fragments":["method","function"]},{"Key":"method using","Fragments":["the"]},{"Key":"the partial","Fragments":["method"]},{"Key":"partial method","Fragments":["approach."]},{"Key":"method approach.","Fragments":["This"]},{"Key":"approach. This","Fragments":["allows"]},{"Key":"This allows","Fragments":["me"]},{"Key":"allows me","Fragments":["to"]},{"Key":"to list","Fragments":["all"]},{"Key":"list all","Fragments":["the"]},{"Key":"the cases","Fragments":["in","with","regarding"]},{"Key":"cases in","Fragments":["an"]},{"Key":"an obvious","Fragments":["an"]},{"Key":"obvious an","Fragments":["readable"]},{"Key":"an readable","Fragments":["way."]},{"Key":"Even for","Fragments":["the"]},{"Key":"the simple","Fragments":["cases"]},{"Key":"simple cases","Fragments":["I"]},{"Key":"code look","Fragments":["more"]},{"Key":"look more","Fragments":["consistent,","concise.","like","like"]},{"Key":"more consistent,","Fragments":["I"]},{"Key":"consistent, I","Fragments":["find"]},{"Key":"it helps","Fragments":["with","to","to"]},{"Key":"helps with","Fragments":["reading"]},{"Key":"with reading","Fragments":["it."]},{"Key":"am using","Fragments":["`m`"]},{"Key":"using `m`","Fragments":["instead"]},{"Key":"`m` instead","Fragments":["of"]},{"Key":"of `message`","Fragments":["because"]},{"Key":"`message` because","Fragments":["the"]},{"Key":"because the","Fragments":["scope"]},{"Key":"scope is","Fragments":["small"]},{"Key":"small and","Fragments":["it's"]},{"Key":"to detect","Fragments":["what","\"yelling\""]},{"Key":"detect what","Fragments":["it"]},{"Key":"not part","Fragments":["of"]},{"Key":"the public","Fragments":["api","api"]},{"Key":"public api","Fragments":["are","clean."]},{"Key":"api are","Fragments":["marked"]},{"Key":"are marked","Fragments":["`private`"]},{"Key":"marked `private`","Fragments":["to"]},{"Key":"`private` to","Fragments":["help"]},{"Key":"me pick","Fragments":["out"]},{"Key":"pick out","Fragments":["methods"]},{"Key":"out methods","Fragments":["that"]},{"Key":"can refactor","Fragments":["without"]},{"Key":"refactor without","Fragments":["looking"]},{"Key":"without looking","Fragments":["outside"]},{"Key":"looking outside","Fragments":["of"]},{"Key":"the classes.","Fragments":["As"]},{"Key":"classes. As","Fragments":["a"]},{"Key":"a bonus","Fragments":["it"]},{"Key":"bonus it","Fragments":["helps"]},{"Key":"helps to","Fragments":["keep","think"]},{"Key":"I skipped","Fragments":["adding"]},{"Key":"skipped adding","Fragments":["return"]},{"Key":"adding return","Fragments":["types"]},{"Key":"return types","Fragments":["of","of","of"]},{"Key":"types of","Fragments":["the","the","the"]},{"Key":"methods because","Fragments":["that"]},{"Key":"because that","Fragments":["would"]},{"Key":"would introduce","Fragments":["unneeded"]},{"Key":"introduce unneeded","Fragments":["clutter."]},{"Key":"unneeded clutter.","Fragments":["Since"]},{"Key":"clutter. Since","Fragments":["they"]},{"Key":"Since they","Fragments":["are"]},{"Key":"are private","Fragments":["methods","but"]},{"Key":"methods there","Fragments":["is"]},{"Key":"no obvious","Fragments":["reason"]},{"Key":"obvious reason","Fragments":["to"]},{"Key":"put them","Fragments":["there."]},{"Key":"match approach.","Fragments":["You"]},{"Key":"approach. You","Fragments":["could"]},{"Key":"could skip","Fragments":["the","the"]},{"Key":"skip the","Fragments":["`match`","return","parentheses"]},{"Key":"the `match`","Fragments":["statement","keyword","statement"]},{"Key":"`match` statement","Fragments":["like","is","in"]},{"Key":"statement like","Fragments":["this:"]},{"Key":"val hey:","Fragments":["String","String"]},{"Key":"hey: String","Fragments":["=\u003e","=\u003e"]},{"Key":"String =\u003e","Fragments":["String","String"]},{"Key":"=\u003e String","Fragments":["=","="]},{"Key":"String =","Fragments":["{","{","{"]},{"Key":" `Silence`","Fragments":["and"]},{"Key":"`Silence` and","Fragments":["`Question`"]},{"Key":"and `Question`","Fragments":["could"]},{"Key":"`Question` could","Fragments":["be"]},{"Key":"implemented differently","Fragments":["(maybe"]},{"Key":"differently (maybe","Fragments":["easier"]},{"Key":"(maybe easier","Fragments":["to"]},{"Key":"figure out).","Fragments":["If"]},{"Key":"out). If","Fragments":["you"]},{"Key":"would keep","Fragments":["it"]},{"Key":"keep it","Fragments":["consistent"]},{"Key":"it consistent","Fragments":["(pattern"]},{"Key":"consistent (pattern","Fragments":["matching)"]},{"Key":"(pattern matching)","Fragments":["an"]},{"Key":"matching) an","Fragments":["approach"]},{"Key":"approach might","Fragments":["be"]},{"Key":"be like","Fragments":["this:"]},{"Key":"def unapply(msg:","Fragments":["String)","String)"]},{"Key":"unapply(msg: String)","Fragments":["=","="]},{"Key":"= Option(msg)","Fragments":["filter","filter"]},{"Key":"Option(msg) filter","Fragments":["(_","(_.trim.isEmpty)"]},{"Key":"filter (_","Fragments":["endsWith"]},{"Key":"(_ endsWith","Fragments":["\"?\")"]},{"Key":"object Silence","Fragments":["{"]},{"Key":"not like","Fragments":["`...","the"]},{"Key":"like `...","Fragments":["=="]},{"Key":"`... ==","Fragments":["true`,"]},{"Key":"== true`,","Fragments":["you"]},{"Key":"true`, you","Fragments":["can"]},{"Key":"just leave","Fragments":["out"]},{"Key":"leave out","Fragments":["the"]},{"Key":"the `==","Fragments":["true`."]},{"Key":"the `NotLower`","Fragments":["case"]},{"Key":"`NotLower` case","Fragments":["reaching"]},{"Key":"case reaching","Fragments":["out"]},{"Key":"reaching out","Fragments":["to"]},{"Key":"out to","Fragments":["the"]},{"Key":"the `msg`,","Fragments":["if"]},{"Key":"`msg`, if","Fragments":["anything,"]},{"Key":"if anything,","Fragments":["it"]},{"Key":"anything, it","Fragments":["should"]},{"Key":" When","Fragments":["you","browsing"]},{"Key":"When you","Fragments":["are"]},{"Key":"not using","Fragments":["a","any"]},{"Key":"a matched","Fragments":["variable,"]},{"Key":"matched variable,","Fragments":["you"]},{"Key":"variable, you","Fragments":["can"]},{"Key":"an underscore:","Fragments":["`Question(_)`"]},{"Key":"private method","Fragments":["and"]},{"Key":"method and","Fragments":["in","searched"]},{"Key":"and in","Fragments":["my"]},{"Key":"opinion you","Fragments":["should"]},{"Key":"should mark","Fragments":["those"]},{"Key":"mark those","Fragments":["as"]},{"Key":"those as","Fragments":["`private`"]},{"Key":"of `match`","Fragments":["you"]},{"Key":"`match` you","Fragments":["could"]},{"Key":"the rules","Fragments":["if","and","as"]},{"Key":"rules if","Fragments":["you"]},{"Key":"you align","Fragments":["`default`"]},{"Key":"align `default`","Fragments":["with"]},{"Key":"`default` with","Fragments":["the"]},{"Key":"the rest:","Fragments":["`private"]},{"Key":"rest: `private","Fragments":["val"]},{"Key":"`private val","Fragments":["default"]},{"Key":"val default","Fragments":["="]},{"Key":"default =","Fragments":["anything"]},{"Key":"= anything","Fragments":["?\u003e"]},{"Key":"anything ?\u003e","Fragments":["WHATEVER`"]},{"Key":"can skip","Fragments":["the"]},{"Key":"parentheses of","Fragments":["`hey`,"]},{"Key":"`hey`, the","Fragments":["rules"]},{"Key":"`if` statement","Fragments":["in"]},{"Key":"the `RuleMaker`.","Fragments":["`hey`"]},{"Key":"`RuleMaker`. `hey`","Fragments":["can"]},{"Key":"`hey` can","Fragments":["be"]},{"Key":"`val` (would","Fragments":["require"]},{"Key":"(would require","Fragments":["it"]},{"Key":"require it","Fragments":["to"]},{"Key":"be in","Fragments":["another","a"]},{"Key":"in another","Fragments":["place","way"]},{"Key":"another place","Fragments":["or"]},{"Key":"place or","Fragments":["mark"]},{"Key":"or mark","Fragments":["the"]},{"Key":"mark the","Fragments":["rules"]},{"Key":"rules as","Fragments":["`lazy`)."]},{"Key":"Good use","Fragments":["of"]},{"Key":"of pattern","Fragments":["matching."]},{"Key":"matching. I","Fragments":["used"]},{"Key":"used `if-else`on","Fragments":["my"]},{"Key":"`if-else`on my","Fragments":["solution"]},{"Key":"solution but","Fragments":["your"]},{"Key":"and easy","Fragments":["to","way"]},{"Key":"understand (at","Fragments":["least"]},{"Key":"least for","Fragments":["someone"]},{"Key":"for someone","Fragments":["who"]},{"Key":"someone who","Fragments":["knows"]},{"Key":"who knows","Fragments":["pattern"]},{"Key":"knows pattern","Fragments":["matching)."]},{"Key":"necessary to","Fragments":["declare","repeat"]},{"Key":"to declare","Fragments":["return"]},{"Key":"declare return","Fragments":["value"]},{"Key":"value types","Fragments":["on"]},{"Key":"types on","Fragments":["private"]},{"Key":"on private","Fragments":["methods,"]},{"Key":"methods, not","Fragments":["only"]},{"Key":"not only","Fragments":["because","a"]},{"Key":"only because","Fragments":["they"]},{"Key":"private but","Fragments":["mainly"]},{"Key":"but mainly","Fragments":["because"]},{"Key":"mainly because","Fragments":["they"]},{"Key":"are so","Fragments":["simple"]},{"Key":"so simple","Fragments":["that","as"]},{"Key":"simple that","Fragments":["it"]},{"Key":"grasp what","Fragments":["they"]},{"Key":"what they","Fragments":["are"]},{"Key":"By looking","Fragments":["at"]},{"Key":"at another","Fragments":["persons"]},{"Key":"another persons","Fragments":["solution,"]},{"Key":"persons solution,","Fragments":["I"]},{"Key":"solution, I","Fragments":["found"]},{"Key":"didn't know:","Fragments":["`count`:"]},{"Key":" (s1","Fragments":["zip","zip"]},{"Key":"(s1 zip","Fragments":["s2).count","s2).foldLeft(0)"]},{"Key":"zip s2).count","Fragments":["{"]},{"Key":"s2).count {","Fragments":["case"]},{"Key":"case (s1,","Fragments":["s2)"]},{"Key":"(s1, s2)","Fragments":["=\u003e"]},{"Key":"s2) =\u003e","Fragments":["s1"]},{"Key":"=\u003e s1","Fragments":["!="]},{"Key":"s1 !=","Fragments":["s2"]},{"Key":"!= s2","Fragments":["}","compareTo"]},{"Key":"Just for","Fragments":["fun,"]},{"Key":"for fun,","Fragments":["you"]},{"Key":"fun, you","Fragments":["could"]},{"Key":"could write","Fragments":["the"]},{"Key":"the `foldLeft`","Fragments":["content"]},{"Key":"`foldLeft` content","Fragments":["as:"]},{"Key":"zip s2).foldLeft(0)","Fragments":["{"]},{"Key":"case (diff,","Fragments":["(s1,"]},{"Key":"(diff, (s1,","Fragments":["s2))"]},{"Key":"(s1, s2))","Fragments":["=\u003e"]},{"Key":" diff","Fragments":["+"]},{"Key":"diff +","Fragments":["(s1"]},{"Key":"+ (s1","Fragments":["!="]},{"Key":"(s1 !=","Fragments":["s2"]},{"Key":"s2 compareTo","Fragments":["false)"]},{"Key":"quite hard","Fragments":["to"]},{"Key":"out what's","Fragments":["going"]},{"Key":"what's going","Fragments":["on.","on.","on"]},{"Key":"going on.","Fragments":["Do"]},{"Key":"on. Do","Fragments":["you"]},{"Key":"regex and","Fragments":["the","make"]},{"Key":"the usage","Fragments":["of"]},{"Key":"of creating","Fragments":["an","a"]},{"Key":"empty map","Fragments":["using"]},{"Key":"map using","Fragments":["`Map[String,"]},{"Key":"using `Map[String,","Fragments":["Int]()`"]},{"Key":"`Map[String, Int]()`","Fragments":["it's"]},{"Key":"Int]()` it's","Fragments":["usually"]},{"Key":"it's usually","Fragments":["good"]},{"Key":"usually good","Fragments":["practice"]},{"Key":"good practice","Fragments":["to"]},{"Key":"practice to","Fragments":["use"]},{"Key":"the `empty`","Fragments":["constructor:"]},{"Key":"`empty` constructor:","Fragments":["`Map.empty[String,"]},{"Key":"constructor: `Map.empty[String,","Fragments":["Int]`."]},{"Key":"the `Option`","Fragments":["in"]},{"Key":"`Option` in","Fragments":["another"]},{"Key":"way than","Fragments":["pattern"]},{"Key":"than pattern","Fragments":["matching:"]},{"Key":"val newCount","Fragments":["="]},{"Key":"newCount =","Fragments":["m"]},{"Key":"= m","Fragments":["get","matches"]},{"Key":"m get","Fragments":["word"]},{"Key":"get word","Fragments":["map"]},{"Key":"word map","Fragments":["(_"]},{"Key":"map (_","Fragments":["+"]},{"Key":"(_ +","Fragments":["1)"]},{"Key":"+ 1)","Fragments":["getOrElse"]},{"Key":"1) getOrElse","Fragments":["0"]},{"Key":"m +","Fragments":["(word","n)`"]},{"Key":"+ (word","Fragments":["-\u003e"]},{"Key":"(word -\u003e","Fragments":["newCount)"]},{"Key":"was really","Fragments":["hoping","just"]},{"Key":"really hoping","Fragments":["to"]},{"Key":"hoping to","Fragments":["do"]},{"Key":"something *like*","Fragments":["this"]},{"Key":"*like* this","Fragments":["but"]},{"Key":"doesn't work","Fragments":[":/","is","for","for"]},{"Key":" Clarification:","Fragments":["What"]},{"Key":"Clarification: What","Fragments":["doesn't"]},{"Key":"What doesn't","Fragments":["work"]},{"Key":"work is","Fragments":["pattern"]},{"Key":"is pattern","Fragments":["matching"]},{"Key":"against anonymous","Fragments":["functions..."]},{"Key":"anonymous functions...","Fragments":["Wondering"]},{"Key":"functions... Wondering","Fragments":["if"]},{"Key":"Wondering if","Fragments":["there's"]},{"Key":"if there's","Fragments":["a"]},{"Key":"special syntax","Fragments":["for"]},{"Key":"syntax for","Fragments":["it","method"]},{"Key":"for it","Fragments":["or","being"]},{"Key":"it or","Fragments":["another"]},{"Key":"or another","Fragments":["way"]},{"Key":"thing or","Fragments":["something"]},{"Key":"very procedural.","Fragments":["You"]},{"Key":"procedural. You","Fragments":["can"]},{"Key":"return statements","Fragments":["in"]},{"Key":"statements in","Fragments":["most","my"]},{"Key":"in most","Fragments":["of"]},{"Key":"the case.","Fragments":["The"]},{"Key":"case. The","Fragments":["functions"]},{"Key":"The functions","Fragments":["return","themselves"]},{"Key":"functions return","Fragments":["the"]},{"Key":"the block.","Fragments":["By"]},{"Key":"block. By","Fragments":["this"]},{"Key":"By this","Fragments":["you"]},{"Key":"this you","Fragments":["can"]},{"Key":"omit also","Fragments":["most"]},{"Key":"also most","Fragments":["of"]},{"Key":"braces and","Fragments":["make"]},{"Key":"'hey' function,","Fragments":["you"]},{"Key":"function, you","Fragments":["should","can"]},{"Key":"should bear","Fragments":["in"]},{"Key":"bear in","Fragments":["mind"]},{"Key":"in mind","Fragments":["that"]},{"Key":"mind that","Fragments":["in"]},{"Key":"functional languages,","Fragments":["the"]},{"Key":"languages, the","Fragments":["if-else"]},{"Key":"the if-else","Fragments":["statement","chain"]},{"Key":"if-else statement","Fragments":["is"]},{"Key":"a control","Fragments":["sequence,"]},{"Key":"control sequence,","Fragments":["but"]},{"Key":"sequence, but","Fragments":["also"]},{"Key":"also an","Fragments":["expression."]},{"Key":" Colonel-sanders","Fragments":["is"]},{"Key":"Colonel-sanders is","Fragments":["right"]},{"Key":"is right","Fragments":["that"]},{"Key":"right that","Fragments":["you"]},{"Key":"should rewrite","Fragments":["it"]},{"Key":"it using","Fragments":["pattern"]},{"Key":"matching. See,","Fragments":["e.g.,"]},{"Key":"See, e.g.,","Fragments":["stackoverflow.com/questions/4636610/regular-expression-and-pattern-matching-in-scala"]},{"Key":" Trying","Fragments":["to"]},{"Key":"Trying to","Fragments":["get"]},{"Key":"get my","Fragments":["feet"]},{"Key":"my feet","Fragments":["wet"]},{"Key":"feet wet","Fragments":["in"]},{"Key":"wet in","Fragments":["Scala."]},{"Key":"Scala. Attempted","Fragments":["to"]},{"Key":"Attempted to","Fragments":["find"]},{"Key":"find regexes/patterns","Fragments":["first"]},{"Key":"regexes/patterns first","Fragments":["that"]},{"Key":"first that","Fragments":["would"]},{"Key":"would enable","Fragments":["me"]},{"Key":"enable me","Fragments":["to"]},{"Key":"to shorten","Fragments":["my"]},{"Key":"shorten my","Fragments":["cases"]},{"Key":"my cases","Fragments":["to:"]},{"Key":"case pattern(_)","Fragments":["=\u003e"]},{"Key":"pattern(_) =\u003e","Fragments":["\"...\""]},{"Key":" but","Fragments":["couldn't"]},{"Key":"couldn't find","Fragments":["a"]},{"Key":"way without","Fragments":["the"]},{"Key":"the \"case","Fragments":["x"]},{"Key":"\"case x","Fragments":["if"]},{"Key":"x if","Fragments":["x....\""]},{"Key":"could rename","Fragments":["your"]},{"Key":"rename your","Fragments":["`n`","\"isDigit()\""]},{"Key":"your `n`","Fragments":["variable"]},{"Key":"`n` variable","Fragments":["to"]},{"Key":"variable to","Fragments":["something"]},{"Key":"descriptive like","Fragments":["`digits`"]},{"Key":"like `digits`","Fragments":["or"]},{"Key":"`digits` or","Fragments":["`numbers`?"]},{"Key":"Your `match`","Fragments":["statement"]},{"Key":"not exhaustive,","Fragments":["which"]},{"Key":"exhaustive, which","Fragments":["you"]},{"Key":"which you","Fragments":["should"]},{"Key":"should always","Fragments":["strive"]},{"Key":"always strive","Fragments":["for."]},{"Key":"strive for.","Fragments":["In"]},{"Key":"for. In","Fragments":["this"]},{"Key":"this case,","Fragments":["I"]},{"Key":"case, I","Fragments":["think","took"]},{"Key":"catch-all clause","Fragments":["at"]},{"Key":"clause at","Fragments":["the"]},{"Key":"end returning","Fragments":["`\"0000000000\"`"]},{"Key":"returning `\"0000000000\"`","Fragments":["makes"]},{"Key":"`\"0000000000\"` makes","Fragments":["sense."]},{"Key":"not define","Fragments":["the"]},{"Key":"define the","Fragments":["`val"]},{"Key":"the `val","Fragments":["cleaned"]},{"Key":"`val cleaned","Fragments":["="]},{"Key":"cleaned =","Fragments":["phoneNum"]},{"Key":"= phoneNum","Fragments":["filter(_.isDigit)`"]},{"Key":"phoneNum filter(_.isDigit)`","Fragments":["part"]},{"Key":"filter(_.isDigit)` part","Fragments":["in"]},{"Key":"part in","Fragments":["the"]},{"Key":"class itself","Fragments":["instead"]},{"Key":"itself instead","Fragments":["of"]},{"Key":"of inside","Fragments":["the"]},{"Key":"the `number()`","Fragments":["method?"]},{"Key":"`number()` method?","Fragments":["This"]},{"Key":"method? This","Fragments":["has"]},{"Key":"This has","Fragments":["the","the"]},{"Key":"additional benefit","Fragments":["that"]},{"Key":"benefit that","Fragments":["you"]},{"Key":"to recalculate","Fragments":["the"]},{"Key":"recalculate the","Fragments":["number"]},{"Key":"number in","Fragments":["the"]},{"Key":"the `toString()`","Fragments":["method."]},{"Key":"are worried","Fragments":["about"]},{"Key":"worried about","Fragments":["unnecessarily"]},{"Key":"about unnecessarily","Fragments":["calculating"]},{"Key":"unnecessarily calculating","Fragments":["the"]},{"Key":"calculating the","Fragments":["cleaned"]},{"Key":"the cleaned","Fragments":["number,"]},{"Key":"cleaned number,","Fragments":["you"]},{"Key":"number, you","Fragments":["could"]},{"Key":"could add","Fragments":["the"]},{"Key":"the `lazy`","Fragments":["keyword","modifier."]},{"Key":"`lazy` keyword","Fragments":["to"]},{"Key":"keyword to","Fragments":["the"]},{"Key":"the `val`","Fragments":["which"]},{"Key":"`val` which","Fragments":["will"]},{"Key":"will cause","Fragments":["it"]},{"Key":"cause it","Fragments":["to"]},{"Key":"be evaluated","Fragments":["on","once"]},{"Key":"evaluated on","Fragments":["demand"]},{"Key":"on demand","Fragments":["and"]},{"Key":"demand and","Fragments":["only"]},{"Key":"and only","Fragments":["once.","once."]},{"Key":"that pattern-matching","Fragments":["just"]},{"Key":"pattern-matching just","Fragments":["looks"]},{"Key":"just looks","Fragments":["nicer."]},{"Key":"looks nicer.","Fragments":["As"]},{"Key":"nicer. As","Fragments":["for"]},{"Key":"for substring","Fragments":["or"]},{"Key":"substring or","Fragments":["drop/take,","drop/take?"]},{"Key":"or drop/take,","Fragments":["I"]},{"Key":"drop/take, I","Fragments":["have"]},{"Key":"no real","Fragments":["preference."]},{"Key":"could move","Fragments":["the"]},{"Key":"the `toLowercase`","Fragments":["checks"]},{"Key":"`toLowercase` checks","Fragments":["to"]},{"Key":"checks to","Fragments":["the"]},{"Key":"the `isAnagram`","Fragments":["method."]},{"Key":"`isAnagram` method.","Fragments":["This"]},{"Key":"method. This","Fragments":["would"]},{"Key":"This would","Fragments":["allow","guarantee","cause"]},{"Key":"would allow","Fragments":["you"]},{"Key":"write `seq.filter(isAnagram)`","Fragments":["which"]},{"Key":"`seq.filter(isAnagram)` which","Fragments":["reads"]},{"Key":"which reads","Fragments":["better"]},{"Key":" Conversion","Fragments":["from"]},{"Key":"Conversion from","Fragments":["Char"]},{"Key":"from Char","Fragments":["to"]},{"Key":"Char to","Fragments":["Int"]},{"Key":"to Int","Fragments":["is"]},{"Key":"Int is","Fragments":["implicit,"]},{"Key":"is implicit,","Fragments":["you"]},{"Key":"implicit, you","Fragments":["can"]},{"Key":"love the","Fragments":["addition"]},{"Key":"the addition","Fragments":["of"]},{"Key":"addition of","Fragments":["the"]},{"Key":"the `CaseInsensitive`","Fragments":["class."]},{"Key":"`CaseInsensitive` class.","Fragments":["It"]},{"Key":"It really","Fragments":["makes"]},{"Key":"really makes","Fragments":["the"]},{"Key":"A very","Fragments":["clever"]},{"Key":"very clever","Fragments":["way"]},{"Key":"clever way","Fragments":["to"]},{"Key":"to compare","Fragments":["strings","code.","some"]},{"Key":"compare strings","Fragments":["to"]},{"Key":" http://exercism.io/submissions/0147832e7ab4278ac0542eca","Fragments":["has"]},{"Key":"http://exercism.io/submissions/0147832e7ab4278ac0542eca has","Fragments":["the"]},{"Key":"best pattern","Fragments":["matching"]},{"Key":"matching solution","Fragments":["I've"]},{"Key":"solution I've","Fragments":["seen"]},{"Key":"I've seen","Fragments":["but","a","today"]},{"Key":"seen but","Fragments":["your"]},{"Key":"of regular","Fragments":["expressions"]},{"Key":"expressions is","Fragments":["very","necessarily"]},{"Key":"very interesting.","Fragments":["I"]},{"Key":"interesting. I","Fragments":["didn't"]},{"Key":"about \\\\p{Punct}!","Fragments":["Interesting"]},{"Key":"\\\\p{Punct}! Interesting","Fragments":["and"]},{"Key":"Interesting and","Fragments":["easy"]},{"Key":"match punctuation","Fragments":["marks!"]},{"Key":"Since you","Fragments":["said"]},{"Key":"you said","Fragments":["you"]},{"Key":"said you","Fragments":["tried"]},{"Key":"you tried","Fragments":["to"]},{"Key":"to simplify","Fragments":["your","your","the"]},{"Key":"your pattern","Fragments":["matching"]},{"Key":"matching I","Fragments":["suggest"]},{"Key":"I suggest","Fragments":["that"]},{"Key":"suggest that","Fragments":["you"]},{"Key":"you give","Fragments":["a"]},{"Key":"give a","Fragments":["look"]},{"Key":"at an","Fragments":["interesting"]},{"Key":"an interesting","Fragments":["solution","problem.","question"]},{"Key":"interesting solution","Fragments":["here:"]},{"Key":"solution here:","Fragments":["http://exercism.io/submissions/0147832e7ab4278ac0542eca."]},{"Key":"here: http://exercism.io/submissions/0147832e7ab4278ac0542eca.","Fragments":["Although"]},{"Key":"http://exercism.io/submissions/0147832e7ab4278ac0542eca. Although","Fragments":["the"]},{"Key":"Although the","Fragments":["implementation"]},{"Key":"the implementation","Fragments":["is"]},{"Key":"bit longer","Fragments":["(abstract"]},{"Key":"longer (abstract","Fragments":["class"]},{"Key":"(abstract class","Fragments":["+"]},{"Key":"class +","Fragments":["case"]},{"Key":"+ case","Fragments":["classes)"]},{"Key":"case classes)","Fragments":["it"]},{"Key":"classes) it","Fragments":["minimizes"]},{"Key":"it minimizes","Fragments":["the"]},{"Key":"minimizes the","Fragments":["pattern"]},{"Key":"matching code.","Fragments":["Interesting"]},{"Key":"code. Interesting","Fragments":["for"]},{"Key":"Interesting for","Fragments":["you"]},{"Key":"for you","Fragments":["to"]},{"Key":"see more","Fragments":["advanced"]},{"Key":"more advanced","Fragments":["uses"]},{"Key":"advanced uses","Fragments":["of"]},{"Key":"uses of","Fragments":["this"]},{"Key":"a typo:","Fragments":["\"Whoa\""]},{"Key":"typo: \"Whoa\"","Fragments":["instead"]},{"Key":"\"Whoa\" instead","Fragments":["of"]},{"Key":"Also the","Fragments":["getFinalPunctuation"]},{"Key":"the getFinalPunctuation","Fragments":["name"]},{"Key":"getFinalPunctuation name","Fragments":["is"]},{"Key":"bit long","Fragments":["for"]},{"Key":"long for","Fragments":["it"]},{"Key":"it being","Fragments":["used"]},{"Key":"used just","Fragments":["once."]},{"Key":"def isQuestion(s:","Fragments":["String)"]},{"Key":"isQuestion(s: String)","Fragments":["="]},{"Key":"= s.last","Fragments":["=="]},{"Key":"s.last ==","Fragments":["'?'"]},{"Key":" works","Fragments":["just"]},{"Key":"works just","Fragments":["as"]},{"Key":"just as","Fragments":["well","your"]},{"Key":"well in","Fragments":["this"]},{"Key":"this use","Fragments":["case."]},{"Key":"do like","Fragments":["the","the"]},{"Key":"simplicity in","Fragments":["your"]},{"Key":"your approach.","Fragments":["Much"]},{"Key":"approach. Much","Fragments":["easier"]},{"Key":"Much easier","Fragments":["to"]},{"Key":"read than","Fragments":["my"]},{"Key":"than my","Fragments":["first"]},{"Key":"first try.","Fragments":["Since"]},{"Key":"try. Since","Fragments":["I'm"]},{"Key":"Since I'm","Fragments":["more"]},{"Key":"I'm more","Fragments":["a"]},{"Key":"of match","Fragments":["and"]},{"Key":"and case,","Fragments":["I"]},{"Key":"I took","Fragments":["your"]},{"Key":"took your","Fragments":["approach"]},{"Key":"approach and","Fragments":["modified"]},{"Key":"and modified","Fragments":["it:"]},{"Key":"modified it:","Fragments":["http://exercism.io/submissions/0c3b173c99ccf9c12d9ca625"]},{"Key":"The shortest","Fragments":["and"]},{"Key":"shortest and","Fragments":["most"]},{"Key":"and most","Fragments":["concise"]},{"Key":"most concise","Fragments":["solution"]},{"Key":"concise solution","Fragments":["I","that"]},{"Key":"solution I","Fragments":["could"]},{"Key":"could come","Fragments":["up"]},{"Key":"up with","Fragments":["after","this.","an","this.","a"]},{"Key":"with after","Fragments":["reading"]},{"Key":"after reading","Fragments":["other"]},{"Key":"reading other","Fragments":["code"]},{"Key":"other code","Fragments":["on"]},{"Key":"code on","Fragments":["the"]},{"Key":"the typo,","Fragments":["I'll"]},{"Key":"typo, I'll","Fragments":["correct"]},{"Key":"I'll correct","Fragments":["it"]},{"Key":"correct it","Fragments":["before"]},{"Key":"it before","Fragments":["submitting"]},{"Key":"before submitting","Fragments":["again!"]},{"Key":" Hum...","Fragments":["I"]},{"Key":"Hum... I","Fragments":["was"]},{"Key":"remember and","Fragments":["easier"]},{"Key":"easier way","Fragments":["to"]},{"Key":"last character","Fragments":["(or,"]},{"Key":"character (or,","Fragments":["more"]},{"Key":"(or, more","Fragments":["generally,"]},{"Key":"more generally,","Fragments":["the"]},{"Key":"generally, the","Fragments":["last"]},{"Key":"last element","Fragments":["of"]},{"Key":"element of","Fragments":["a"]},{"Key":"a collection)","Fragments":["but"]},{"Key":"collection) but","Fragments":["I've"]},{"Key":"I've completely","Fragments":["forgot"]},{"Key":"completely forgot","Fragments":["about"]},{"Key":"forgot about","Fragments":["`last`."]},{"Key":"about `last`.","Fragments":["You"]},{"Key":"`last`. You","Fragments":["are"]},{"Key":"You are","Fragments":["right,","coding","not","mutating","mutating","right.","doing","right,"]},{"Key":"are right,","Fragments":["`s.last`","the"]},{"Key":"right, `s.last`","Fragments":["is"]},{"Key":"`s.last` is","Fragments":["shorter,"]},{"Key":"is shorter,","Fragments":["meaningful"]},{"Key":"shorter, meaningful","Fragments":["and"]},{"Key":"meaningful and","Fragments":["gets"]},{"Key":"and gets","Fragments":["the"]},{"Key":"gets the","Fragments":["job"]},{"Key":"the job","Fragments":["done!"]},{"Key":" About","Fragments":["methods"]},{"Key":"About methods","Fragments":["with"]},{"Key":"methods with","Fragments":["few"]},{"Key":"with few","Fragments":["lines"]},{"Key":"few lines","Fragments":["or"]},{"Key":"lines or","Fragments":["simple"]},{"Key":"or simple","Fragments":["expressions:"]},{"Key":"simple expressions:","Fragments":["I"]},{"Key":"expressions: I","Fragments":["think"]},{"Key":"the \"test\"","Fragments":["to"]},{"Key":"\"test\" to","Fragments":["decide"]},{"Key":"to decide","Fragments":["if"]},{"Key":"decide if","Fragments":["it"]},{"Key":"is ok","Fragments":["to"]},{"Key":"ok to","Fragments":["create","use"]},{"Key":"method so","Fragments":["simple"]},{"Key":"a one","Fragments":["liner"]},{"Key":"liner is","Fragments":["if"]},{"Key":"is if","Fragments":["the"]},{"Key":"name helps","Fragments":["your"]},{"Key":"helps your","Fragments":["code"]},{"Key":"code be","Fragments":["more"]},{"Key":"more meaningful.","Fragments":["If"]},{"Key":"meaningful. If","Fragments":["so,"]},{"Key":"If so,","Fragments":["it"]},{"Key":"so, it","Fragments":["pays"]},{"Key":"it pays","Fragments":["off"]},{"Key":"pays off","Fragments":["to"]},{"Key":"off to","Fragments":["make"]},{"Key":"the refactoring","Fragments":["and"]},{"Key":"refactoring and","Fragments":["extract"]},{"Key":"and extract","Fragments":["a"]},{"Key":"extract a","Fragments":["simple"]},{"Key":"simple expression","Fragments":["into"]},{"Key":"expression into","Fragments":["its"]},{"Key":"into its","Fragments":["own"]},{"Key":" Compared","Fragments":["to","to"]},{"Key":"Compared to","Fragments":["previous","the"]},{"Key":"to previous","Fragments":["version"]},{"Key":"previous version","Fragments":["this","defined"]},{"Key":"version this","Fragments":["one"]},{"Key":"this one","Fragments":["actually","-"]},{"Key":"one actually","Fragments":["matches"]},{"Key":"actually matches","Fragments":["against"]},{"Key":"matches against","Fragments":["`text`"]},{"Key":"against `text`","Fragments":["and"]},{"Key":"`text` and","Fragments":["assigns"]},{"Key":"and assigns","Fragments":["to"]},{"Key":"assigns to","Fragments":["a"]},{"Key":"a value","Fragments":["`t`"]},{"Key":"value `t`","Fragments":["that"]},{"Key":"`t` that","Fragments":["is"]},{"Key":"the conditionals","Fragments":["which","can","(e.g."]},{"Key":"conditionals which","Fragments":["seems"]},{"Key":"which seems","Fragments":["to"]},{"Key":"make a","Fragments":["bit","clone"]},{"Key":"I pulled","Fragments":["out","out"]},{"Key":"pulled out","Fragments":["the","the"]},{"Key":"the constant","Fragments":["to"]},{"Key":"constant to","Fragments":["a","improve"]},{"Key":"object. Not","Fragments":["sure"]},{"Key":"it's better","Fragments":["for","to","to"]},{"Key":"better for","Fragments":["readability"]},{"Key":"readability but","Fragments":["chose"]},{"Key":"but chose","Fragments":["to"]},{"Key":"to leave","Fragments":["it"]},{"Key":"it like","Fragments":["this"]},{"Key":"this because","Fragments":["we","it"]},{"Key":"with only","Fragments":["one","four"]},{"Key":"like is","Fragments":["the"]},{"Key":"the reuse","Fragments":["of"]},{"Key":"reuse of","Fragments":["the"]},{"Key":"the `validate`","Fragments":["function"]},{"Key":"`validate` function","Fragments":["and"]},{"Key":"`nucleotideCounts`. Looks","Fragments":["all"]},{"Key":"Looks all","Fragments":["pretty"]},{"Key":"all pretty","Fragments":["concise."]},{"Key":"the `object`","Fragments":["you"]},{"Key":"`object` you","Fragments":["are"]},{"Key":"using. Took","Fragments":["that"]},{"Key":"Took that","Fragments":["over"]},{"Key":"that over","Fragments":["in"]},{"Key":"over in","Fragments":["my"]},{"Key":"Also I","Fragments":["was"]},{"Key":"was wondering","Fragments":["why"]},{"Key":"wondering why","Fragments":["are"]},{"Key":"why are","Fragments":["you"]},{"Key":"are you","Fragments":["were"]},{"Key":"you were","Fragments":["defining"]},{"Key":"were defining","Fragments":["`nucleotideCounts`"]},{"Key":"defining `nucleotideCounts`","Fragments":["as"]},{"Key":"`nucleotideCounts` as","Fragments":["a"]},{"Key":"val` and","Fragments":["not"]},{"Key":"a `def`","Fragments":["but"]},{"Key":"`def` but","Fragments":["I"]},{"Key":"understand now:","Fragments":["good"]},{"Key":"now: good","Fragments":["catch."]},{"Key":"consider mapping","Fragments":["directly"]},{"Key":"mapping directly","Fragments":["over"]},{"Key":"directly over","Fragments":["`nucleotides`"]},{"Key":"over `nucleotides`","Fragments":["instead"]},{"Key":"`nucleotides` instead","Fragments":["of"]},{"Key":"the for","Fragments":["comprehension,"]},{"Key":"for comprehension,","Fragments":["to"]},{"Key":"comprehension, to","Fragments":["me"]},{"Key":"me that","Fragments":["would","5"]},{"Key":"would look","Fragments":["more"]},{"Key":"- `nucleotides`","Fragments":["may"]},{"Key":"`nucleotides` may","Fragments":["be"]},{"Key":"defined a","Fragments":["constant,"]},{"Key":"a constant,","Fragments":["in"]},{"Key":"constant, in","Fragments":["Scala"]},{"Key":"Scala this","Fragments":["done"]},{"Key":"this done","Fragments":["by"]},{"Key":"by starting","Fragments":["with"]},{"Key":"a capital:","Fragments":["`Nucleotides`"]},{"Key":"validation (`require`)","Fragments":["can"]},{"Key":"(`require`) can","Fragments":["be"]},{"Key":"- also","Fragments":["`count`"]},{"Key":"also `count`","Fragments":["can"]},{"Key":"`count` can","Fragments":["be"]},{"Key":" thanks","Fragments":["for","for"]},{"Key":"your input","Fragments":[":)"]},{"Key":"input :)","Fragments":["I"]},{"Key":":) I","Fragments":["wasn't"]},{"Key":"wasn't 100%","Fragments":["happy"]},{"Key":"100% happy","Fragments":["with"]},{"Key":"if/else inside","Fragments":["of"]},{"Key":"inside of","Fragments":["the"]},{"Key":"pattern match,","Fragments":["but"]},{"Key":"match, but","Fragments":["I"]},{"Key":"think fitting","Fragments":["that"]},{"Key":"fitting that","Fragments":["into"]},{"Key":"that into","Fragments":["a"]},{"Key":"regex as","Fragments":["well"]},{"Key":"well would","Fragments":["have"]},{"Key":"code longer","Fragments":["and"]},{"Key":"and worse","Fragments":["to"]},{"Key":"worse to","Fragments":["read."]},{"Key":" the","Fragments":["solution","conditionals"]},{"Key":"solution you","Fragments":["linked"]},{"Key":"you linked","Fragments":["makes"]},{"Key":"linked makes","Fragments":["very"]},{"Key":"makes very","Fragments":["nice"]},{"Key":"nice use","Fragments":["of","of","of"]},{"Key":"of Scalas","Fragments":["high"]},{"Key":"Scalas high","Fragments":["level"]},{"Key":"high level","Fragments":["pattern"]},{"Key":"level pattern","Fragments":["matching,"]},{"Key":"matching, definitely","Fragments":["a"]},{"Key":" Turned","Fragments":["`nucleotidesCount`"]},{"Key":"Turned `nucleotidesCount`","Fragments":["into"]},{"Key":"`nucleotidesCount` into","Fragments":["`lazy"]},{"Key":"into `lazy","Fragments":["val`"]},{"Key":"val` instead","Fragments":["of"]},{"Key":"a `def`,","Fragments":["it"]},{"Key":"`def`, it","Fragments":["only"]},{"Key":"it only","Fragments":["needs"]},{"Key":"only needs","Fragments":["to","to"]},{"Key":"evaluated once","Fragments":["when","at"]},{"Key":"once when","Fragments":["requested."]},{"Key":"At least","Fragments":["with","it"]},{"Key":"least with","Fragments":["the"]},{"Key":"the yell","Fragments":["function,"]},{"Key":"yell function,","Fragments":["pattern"]},{"Key":"function, pattern","Fragments":["matching"]},{"Key":"matching accomplishes","Fragments":["what"]},{"Key":"accomplishes what","Fragments":["would"]},{"Key":"what would","Fragments":["be"]},{"Key":"be 2","Fragments":["separate"]},{"Key":"2 separate","Fragments":["sweeps"]},{"Key":"separate sweeps","Fragments":["of"]},{"Key":"sweeps of","Fragments":["the"]},{"Key":"the String","Fragments":["(1","can"]},{"Key":"String (1","Fragments":["for"]},{"Key":"(1 for","Fragments":["checking"]},{"Key":"checking toUpper,","Fragments":["one"]},{"Key":"toUpper, one","Fragments":["for"]},{"Key":"one for","Fragments":["toLower)"]},{"Key":"for toLower)","Fragments":["in"]},{"Key":"toLower) in","Fragments":["a"]},{"Key":"single sweep","Fragments":["by"]},{"Key":"sweep by","Fragments":["checking"]},{"Key":"by checking","Fragments":["both"]},{"Key":"checking both","Fragments":["at"]},{"Key":"both at","Fragments":["each"]},{"Key":"each character.","Fragments":["Readability"]},{"Key":"character. Readability","Fragments":["is"]},{"Key":"Readability is","Fragments":["lowered"]},{"Key":"is lowered","Fragments":["though."]},{"Key":" take","Fragments":["a"]},{"Key":" Kind","Fragments":["of"]},{"Key":"Kind of","Fragments":["a"]},{"Key":"a brute","Fragments":["force"]},{"Key":"brute force","Fragments":["solution"]},{"Key":"force solution","Fragments":["to"]},{"Key":"solution to","Fragments":["get"]},{"Key":"get things","Fragments":["working.","working.","to"]},{"Key":"It works","Fragments":["but,"]},{"Key":"works but,","Fragments":["I'm"]},{"Key":"but, I'm","Fragments":["wondering"]},{"Key":"I'm wondering","Fragments":["if","if"]},{"Key":"wondering if","Fragments":["there","I"]},{"Key":"write this","Fragments":["in","without"]},{"Key":"Scala. I","Fragments":["want"]},{"Key":"see other","Fragments":["people's"]},{"Key":"other people's","Fragments":["submitions"]},{"Key":"people's submitions","Fragments":["to"]},{"Key":"submitions to","Fragments":["see"]},{"Key":"can gain","Fragments":["any"]},{"Key":"the List","Fragments":["groupBy"]},{"Key":"List groupBy","Fragments":["and"]},{"Key":"and mapValues","Fragments":["functions."]},{"Key":"mapValues functions.","Fragments":["Using"]},{"Key":"functions. Using","Fragments":["these"]},{"Key":"Using these","Fragments":["functions"]},{"Key":"functions you","Fragments":["should"]},{"Key":"Nice way","Fragments":["of"]},{"Key":"of defining","Fragments":["the"]},{"Key":"match function,","Fragments":["first"]},{"Key":"function, first","Fragments":["time"]},{"Key":"time I","Fragments":["see"]},{"Key":"For completeness","Fragments":["you"]},{"Key":"completeness you","Fragments":["can"]},{"Key":"also make","Fragments":["`containsAtLeastOneLetter`"]},{"Key":"make `containsAtLeastOneLetter`","Fragments":["be"]},{"Key":"`containsAtLeastOneLetter` be","Fragments":["part"]},{"Key":"be part","Fragments":["of"]},{"Key":"the `isYell`","Fragments":["method,"]},{"Key":"`isYell` method,","Fragments":["and"]},{"Key":"method, and","Fragments":["drop"]},{"Key":"and drop","Fragments":["the"]},{"Key":"drop the","Fragments":["parameter:"]},{"Key":"def isYell(m:","Fragments":["String)"]},{"Key":"isYell(m: String)","Fragments":["="]},{"Key":"def containsAtLeastOneLetter","Fragments":["="]},{"Key":"containsAtLeastOneLetter =","Fragments":["m"]},{"Key":"m matches","Fragments":["\".*[a-zA-Z].*\""]},{"Key":"m ==","Fragments":["m.toUpperCase"]},{"Key":"== m.toUpperCase","Fragments":["\u0026\u0026"]},{"Key":"m.toUpperCase \u0026\u0026","Fragments":["containsAtLeastOneLetter"]},{"Key":" Though","Fragments":["that"]},{"Key":"Though that","Fragments":["would"]},{"Key":"would break","Fragments":["the"]},{"Key":"the \"one","Fragments":["liner\""]},{"Key":"\"one liner\"","Fragments":["flow..."]},{"Key":"Yes. Thanks","Fragments":["for"]},{"Key":"your suggestion.","Fragments":["See"]},{"Key":"suggestion. See","Fragments":["that"]},{"Key":"See that","Fragments":["in"]},{"Key":"Consider refactoring","Fragments":["your"]},{"Key":"refactoring your","Fragments":["match","filter"]},{"Key":"your match","Fragments":["statement","statement."]},{"Key":"match statement","Fragments":["so","I"]},{"Key":"statement so","Fragments":["that"]},{"Key":"each response","Fragments":["is"]},{"Key":"response is","Fragments":["only"]},{"Key":"only used","Fragments":["once,","in"]},{"Key":"used once,","Fragments":["or"]},{"Key":"once, or","Fragments":["if"]},{"Key":"or if","Fragments":["it"]},{"Key":"is necessary","Fragments":["to"]},{"Key":"to repeat","Fragments":["responses,"]},{"Key":"repeat responses,","Fragments":["extract"]},{"Key":"responses, extract","Fragments":["them"]},{"Key":"extract them","Fragments":["out"]},{"Key":"into constants","Fragments":["in"]},{"Key":"constants in","Fragments":["case"]},{"Key":"the response","Fragments":["changes.","value."]},{"Key":"would also","Fragments":["rename"]},{"Key":"also rename","Fragments":["your"]},{"Key":"your \"isDigit()\"","Fragments":["method"]},{"Key":"\"isDigit()\" method","Fragments":["since"]},{"Key":"method since","Fragments":["it"]},{"Key":"really checking","Fragments":["if"]},{"Key":"no letters","Fragments":["exist"]},{"Key":"letters exist","Fragments":["-"]},{"Key":"exist -","Fragments":["the"]},{"Key":"String can","Fragments":["contain"]},{"Key":"can contain","Fragments":["punctuation"]},{"Key":"contain punctuation","Fragments":["and"]},{"Key":"the conciseness","Fragments":["of","of"]},{"Key":"conciseness of","Fragments":["your","your"]},{"Key":"approach after","Fragments":["seeing"]},{"Key":"after seeing","Fragments":["so"]},{"Key":"seeing so","Fragments":["many"]},{"Key":"many verbose","Fragments":["responses"]},{"Key":"verbose responses","Fragments":["to"]},{"Key":"responses to","Fragments":["such"]},{"Key":"to such","Fragments":["a"]},{"Key":"You have","Fragments":["two"]},{"Key":"have two","Fragments":["distinct"]},{"Key":"two distinct","Fragments":["conditions"]},{"Key":"distinct conditions","Fragments":["where"]},{"Key":"conditions where","Fragments":["the"]},{"Key":"where the","Fragments":["input","sum","lengths","`filter`"]},{"Key":"input is","Fragments":["marked","found"]},{"Key":"is marked","Fragments":["as"]},{"Key":"marked as","Fragments":["invalid."]},{"Key":"as invalid.","Fragments":["Is"]},{"Key":"invalid. Is","Fragments":["it"]},{"Key":"to group","Fragments":["these"]},{"Key":"group these","Fragments":["into"]},{"Key":"these into","Fragments":["a"]},{"Key":"good solution.","Fragments":["One"]},{"Key":"solution. One","Fragments":["comment"]},{"Key":"One comment","Fragments":["is"]},{"Key":"comment is","Fragments":["that"]},{"Key":"that type","Fragments":["names"]},{"Key":"type names","Fragments":["(FROM,"]},{"Key":"names (FROM,","Fragments":["TO)"]},{"Key":"(FROM, TO)","Fragments":["are"]},{"Key":"TO) are","Fragments":["usually"]},{"Key":"usually specified","Fragments":["with"]},{"Key":"specified with","Fragments":["a"]},{"Key":"single upper","Fragments":["case"]},{"Key":"upper case","Fragments":["letter."]},{"Key":"case letter.","Fragments":["Which"]},{"Key":"letter. Which","Fragments":["type"]},{"Key":"Which type","Fragments":["is"]},{"Key":"used where","Fragments":["will"]},{"Key":"where will","Fragments":["be"]},{"Key":"made clear","Fragments":["by"]},{"Key":"the rest","Fragments":["of"]},{"Key":"rest of","Fragments":["the","the"]},{"Key":"Scala (coming","Fragments":["from"]},{"Key":"(coming from","Fragments":["Java),"]},{"Key":"from Java),","Fragments":["so"]},{"Key":"Java), so","Fragments":["maybe"]},{"Key":"maybe your","Fragments":["way"]},{"Key":"your way","Fragments":["is"]},{"Key":"more functional,","Fragments":["but"]},{"Key":"functional, but","Fragments":["I"]},{"Key":"would add","Fragments":["a"]},{"Key":"the Response","Fragments":["trait"]},{"Key":"Response trait","Fragments":["to"]},{"Key":"trait to","Fragments":["get"]},{"Key":"response value.","Fragments":["This","I"]},{"Key":"value. This","Fragments":["would"]},{"Key":"would guarantee","Fragments":["that"]},{"Key":"guarantee that","Fragments":["each"]},{"Key":"each Response","Fragments":["type"]},{"Key":"Response type","Fragments":["has","and"]},{"Key":"type has","Fragments":["a","both"]},{"Key":"value. I","Fragments":["think"]},{"Key":"this would","Fragments":["improve"]},{"Key":"would improve","Fragments":["maintainability;"]},{"Key":"improve maintainability;","Fragments":["I"]},{"Key":"maintainability; I","Fragments":["could"]},{"Key":"could imagine","Fragments":["myself"]},{"Key":"imagine myself","Fragments":["editing"]},{"Key":"myself editing","Fragments":["this"]},{"Key":"editing this","Fragments":["code"]},{"Key":"new Response","Fragments":["type"]},{"Key":"type and","Fragments":["forgetting"]},{"Key":"and forgetting","Fragments":["to"]},{"Key":"forgetting to","Fragments":["update"]},{"Key":"the responseFor()","Fragments":["method."]},{"Key":" Having","Fragments":["said"]},{"Key":"Having said","Fragments":["that,"]},{"Key":"said that,","Fragments":["I"]},{"Key":"that, I","Fragments":["like"]},{"Key":"solution much","Fragments":["more"]},{"Key":"than mine","Fragments":[":)"]},{"Key":"the feedback!","Fragments":["Yes,"]},{"Key":"feedback! Yes,","Fragments":["the"]},{"Key":"Yes, the","Fragments":["Genome","collection"]},{"Key":"the Genome","Fragments":["and"]},{"Key":"Genome and","Fragments":["Strand"]},{"Key":"and Strand","Fragments":["classes"]},{"Key":"Strand classes","Fragments":["are"]},{"Key":"classes are","Fragments":["not"]},{"Key":"really needed,","Fragments":["but"]},{"Key":"needed, but","Fragments":["they","I"]},{"Key":"but they","Fragments":["help"]},{"Key":"help to","Fragments":["model"]},{"Key":"to model","Fragments":["the"]},{"Key":"model the","Fragments":["domain"]},{"Key":"domain and","Fragments":["add"]},{"Key":"add runtime","Fragments":["validation"]},{"Key":"runtime validation","Fragments":["for"]},{"Key":"validation for","Fragments":["the"]},{"Key":"believe numeric","Fragments":["sequences"]},{"Key":"numeric sequences","Fragments":["have"]},{"Key":"sequences have","Fragments":["a"]},{"Key":"a `.sum`","Fragments":["method,"]},{"Key":"`.sum` method,","Fragments":["to"]},{"Key":"method, to","Fragments":["replace"]},{"Key":"replace `foldLeft(0)((m:","Fragments":["Int,"]},{"Key":"`foldLeft(0)((m: Int,","Fragments":["n:"]},{"Key":"Int, n:","Fragments":["Int)"]},{"Key":"n: Int)","Fragments":["=\u003e"]},{"Key":"Int) =\u003e","Fragments":["m"]},{"Key":"=\u003e m","Fragments":["+"]},{"Key":"think an","Fragments":["`if"]},{"Key":"an `if","Fragments":["else`","else"]},{"Key":"`if else`","Fragments":["chain"]},{"Key":"else` chain","Fragments":["would"]},{"Key":"chain would","Fragments":["be"]},{"Key":"be shorter","Fragments":["than"]},{"Key":"shorter than","Fragments":["`msg","what"]},{"Key":"than `msg","Fragments":["match`"]},{"Key":" See","Fragments":["the","some"]},{"Key":"the count()","Fragments":["method,"]},{"Key":"count() method,","Fragments":["for"]},{"Key":"method, for","Fragments":["example:"]},{"Key":"your implementation","Fragments":["a","looks"]},{"Key":"implementation a","Fragments":["little"]},{"Key":"good initial","Fragments":["problem"]},{"Key":"initial problem","Fragments":["to"]},{"Key":"problem to","Fragments":["use"]},{"Key":"use TDD","Fragments":["with."]},{"Key":"TDD with.","Fragments":["I"]},{"Key":"with. I","Fragments":["started"]},{"Key":"started out","Fragments":["misunderstanding","writing"]},{"Key":"out misunderstanding","Fragments":["the"]},{"Key":"misunderstanding the","Fragments":["problem"]},{"Key":"problem and","Fragments":["thinking"]},{"Key":"and thinking","Fragments":["that"]},{"Key":"thinking that","Fragments":["everything"]},{"Key":"that everything","Fragments":["depended"]},{"Key":"everything depended","Fragments":["on"]},{"Key":"depended on","Fragments":["the"]},{"Key":"the ending","Fragments":["punctuation."]},{"Key":"ending punctuation.","Fragments":["I"]},{"Key":"punctuation. I","Fragments":["handled"]},{"Key":"I handled","Fragments":["the","validation"]},{"Key":"handled the","Fragments":["easiest","validation"]},{"Key":"the easiest","Fragments":["case"]},{"Key":"easiest case","Fragments":["(a"]},{"Key":"case (a","Fragments":["blank"]},{"Key":"(a blank","Fragments":["string)"]},{"Key":"blank string)","Fragments":["first"]},{"Key":"string) first","Fragments":["and"]},{"Key":"then worked","Fragments":["with"]},{"Key":"worked with","Fragments":["the"]},{"Key":"the hardest","Fragments":["case"]},{"Key":"hardest case","Fragments":["(all"]},{"Key":"case (all","Fragments":["uppercase"]},{"Key":"(all uppercase","Fragments":["anything)"]},{"Key":"uppercase anything)","Fragments":["next."]},{"Key":"anything) next.","Fragments":["The"]},{"Key":"next. The","Fragments":["rest"]},{"Key":"rest was","Fragments":["just"]},{"Key":"just handling","Fragments":["questions"]},{"Key":"handling questions","Fragments":["vs"]},{"Key":"questions vs","Fragments":["any"]},{"Key":"vs any","Fragments":["other"]},{"Key":"any other","Fragments":["statement."]},{"Key":"other statement.","Fragments":["I'd"]},{"Key":"statement. I'd","Fragments":["like"]},{"Key":"like feedback","Fragments":["as"]},{"Key":"feedback as","Fragments":["to"]},{"Key":"do better","Fragments":["to"]},{"Key":"this look","Fragments":["more"]},{"Key":"code should,","Fragments":["as"]},{"Key":"should, as","Fragments":["I'm"]},{"Key":"as I'm","Fragments":["moving"]},{"Key":"I'm moving","Fragments":["to"]},{"Key":"moving to","Fragments":["the"]},{"Key":"the language","Fragments":["from"]},{"Key":"language from","Fragments":["Python."]},{"Key":"For your","Fragments":["containsLetters"]},{"Key":"your containsLetters","Fragments":["why"]},{"Key":"containsLetters why","Fragments":["not"]},{"Key":"not just","Fragments":["call","use"]},{"Key":"call .isLetter","Fragments":["on"]},{"Key":".isLetter on","Fragments":["each"]},{"Key":"on each","Fragments":["character"]},{"Key":"each character","Fragments":["in"]},{"Key":"character in","Fragments":["the"]},{"Key":"def containsLetters(sentence:","Fragments":["String)"]},{"Key":"containsLetters(sentence: String)","Fragments":["="]},{"Key":"= sentence.exists(c","Fragments":["=\u003e"]},{"Key":"sentence.exists(c =\u003e","Fragments":["c.isLetter)"]},{"Key":"there some","Fragments":["reason"]},{"Key":"reason c.isLetter","Fragments":["wouldn't"]},{"Key":"c.isLetter wouldn't","Fragments":["suffice?"]},{"Key":" isEmpty","Fragments":["could"]},{"Key":"be changed","Fragments":["to"]},{"Key":"is bit","Fragments":["better."]},{"Key":"bit better.","Fragments":["But,"]},{"Key":"better. But,","Fragments":["maybe"]},{"Key":"But, maybe","Fragments":["not"]},{"Key":"maybe not","Fragments":["a"]},{"Key":"a huge","Fragments":["improvement."]},{"Key":"huge improvement.","Fragments":["I"]},{"Key":"improvement. I","Fragments":["like"]},{"Key":"match statement.","Fragments":["My"]},{"Key":"statement. My","Fragments":["first"]},{"Key":"first attempt","Fragments":["is"]},{"Key":"attempt is","Fragments":["just"]},{"Key":"just using","Fragments":["a"]},{"Key":"big if,","Fragments":["else"]},{"Key":"if, else","Fragments":["if"]},{"Key":"I realized","Fragments":["I","that"]},{"Key":"realized I","Fragments":["was"]},{"Key":"was at","Fragments":["a"]},{"Key":"one-liner at","Fragments":["this"]},{"Key":"at this","Fragments":["point","based"]},{"Key":"this point","Fragments":["and"]},{"Key":"point and","Fragments":["so"]},{"Key":"and so","Fragments":["adjusted"]},{"Key":"so adjusted","Fragments":["the"]},{"Key":"adjusted the","Fragments":["code"]},{"Key":"to reflect","Fragments":["that."]},{"Key":" Frankly,","Fragments":["I'm"]},{"Key":"Frankly, I'm","Fragments":["perplexed"]},{"Key":"I'm perplexed","Fragments":["how"]},{"Key":"perplexed how","Fragments":["this"]},{"Key":"this worked.","Fragments":["I"]},{"Key":"worked. I","Fragments":["didn't"]},{"Key":"didn't understand","Fragments":["Hamming"]},{"Key":"understand Hamming","Fragments":["distance"]},{"Key":"distance concept","Fragments":["and"]},{"Key":"concept and","Fragments":["I"]},{"Key":"just zipped","Fragments":["up"]},{"Key":"zipped up","Fragments":["the"]},{"Key":"two strings,","Fragments":["and"]},{"Key":"strings, and","Fragments":["returned"]},{"Key":"and returned","Fragments":["the"]},{"Key":"returned the","Fragments":["difference"]},{"Key":"the size","Fragments":["of"]},{"Key":"size of","Fragments":["the"]},{"Key":"the zipped","Fragments":["list"]},{"Key":"zipped list","Fragments":["and"]},{"Key":"tuples that","Fragments":["had"]},{"Key":"that had","Fragments":["identical"]},{"Key":"had identical","Fragments":["elements."]},{"Key":"identical elements.","Fragments":["I"]},{"Key":"elements. I","Fragments":["kept"]},{"Key":"I kept","Fragments":["adding","it"]},{"Key":"kept adding","Fragments":["the"]},{"Key":"next test","Fragments":["and"]},{"Key":"test and","Fragments":["each","`yield`."]},{"Key":"and each","Fragments":["passed","string"]},{"Key":"each passed","Fragments":["in"]},{"Key":"passed in","Fragments":["turn.","GregorianCalendar","cal","cal,","Calendar","instance,"]},{"Key":"in turn.","Fragments":["I'm"]},{"Key":"turn. I'm","Fragments":["wondering"]},{"Key":"got lucky.","Fragments":["Going"]},{"Key":"lucky. Going","Fragments":["to"]},{"Key":"Going to","Fragments":["read"]},{"Key":"read up","Fragments":["on"]},{"Key":"on Hamming","Fragments":["distance"]},{"Key":"distance now.","Fragments":[":)"]},{"Key":"realized that","Fragments":["size"]},{"Key":"that size","Fragments":["-"]},{"Key":"size -","Fragments":["#matches"]},{"Key":"- #matches","Fragments":["was"]},{"Key":"#matches was","Fragments":["really"]},{"Key":"really just","Fragments":["the"]},{"Key":"just the","Fragments":["number"]},{"Key":"of non-matches.","Fragments":["I"]},{"Key":"non-matches. I","Fragments":["got"]},{"Key":"got rid","Fragments":["of","of","of"]},{"Key":"the temporary","Fragments":["value"]},{"Key":"temporary value","Fragments":["because"]},{"Key":"value because","Fragments":["I"]},{"Key":"I no","Fragments":["longer"]},{"Key":"no longer","Fragments":["needed"]},{"Key":"longer needed","Fragments":["it."]},{"Key":" Second","Fragments":["iteration:"]},{"Key":"Second iteration:","Fragments":["trying"]},{"Key":"iteration: trying","Fragments":["out"]},{"Key":"trying out","Fragments":["an"]},{"Key":"out an","Fragments":["implicit"]},{"Key":"implicit value","Fragments":["object,"]},{"Key":"value object,","Fragments":["as"]},{"Key":"object, as","Fragments":["suggested"]},{"Key":"as suggested","Fragments":["in"]},{"Key":"suggested in","Fragments":["iteration"]},{"Key":"I've also","Fragments":["dropped"]},{"Key":"also dropped","Fragments":["the"]},{"Key":"dropped the","Fragments":["parentheses"]},{"Key":"parentheses from","Fragments":["``message.trim()``"]},{"Key":"from ``message.trim()``","Fragments":["because"]},{"Key":"``message.trim()`` because","Fragments":["it"]},{"Key":"doesn't mutate","Fragments":["the"]},{"Key":"mutate the","Fragments":["original","new"]},{"Key":"I broke","Fragments":["things"]},{"Key":"broke things","Fragments":["down"]},{"Key":"things down","Fragments":["into"]},{"Key":"down into","Fragments":["a"]},{"Key":"a series","Fragments":["of"]},{"Key":"series of","Fragments":["functions."]},{"Key":"of functions.","Fragments":["It"]},{"Key":"functions. It","Fragments":["was"]},{"Key":"pretty easy","Fragments":["to"]},{"Key":"things working.","Fragments":["I"]},{"Key":"working. I","Fragments":["might"]},{"Key":"change some","Fragments":["names,"]},{"Key":"some names,","Fragments":["but"]},{"Key":"names, but","Fragments":["the"]},{"Key":"names aren't","Fragments":["terrible."]},{"Key":"Agreed, those","Fragments":["are"]},{"Key":"those are","Fragments":["good"]},{"Key":"good changes.","Fragments":["Thanks!"]},{"Key":"actually don't","Fragments":["like"]},{"Key":"like looping","Fragments":["two"]},{"Key":"looping two","Fragments":["times"]},{"Key":"two times","Fragments":["through"]},{"Key":"times through","Fragments":["the"]},{"Key":"through the","Fragments":["input","API","string","`lazy`","days","loop)"]},{"Key":"input String","Fragments":["for"]},{"Key":"String for","Fragments":["yelling.."]},{"Key":"are coding","Fragments":["Scala"]},{"Key":"coding Scala","Fragments":["like"]},{"Key":"Scala like","Fragments":["one"]},{"Key":"like one","Fragments":["codes"]},{"Key":"one codes","Fragments":["Java."]},{"Key":"codes Java.","Fragments":["Check"]},{"Key":"Java. Check","Fragments":["out"]},{"Key":"out some","Fragments":["other"]},{"Key":"other peoples","Fragments":["solutions"]},{"Key":"peoples solutions","Fragments":["to"]},{"Key":"solutions to","Fragments":["explore","this"]},{"Key":"explore Scalas","Fragments":["languages"]},{"Key":"Scalas languages","Fragments":["features"]},{"Key":" Interesting!","Fragments":["You're"]},{"Key":"Interesting! You're","Fragments":["suggesting"]},{"Key":"You're suggesting","Fragments":["a"]},{"Key":"suggesting a","Fragments":["[value"]},{"Key":"a [value","Fragments":["class](http://docs.scala-lang.org/overviews/core/value-classes.html),"]},{"Key":"[value class](http://docs.scala-lang.org/overviews/core/value-classes.html),","Fragments":["right?"]},{"Key":"class](http://docs.scala-lang.org/overviews/core/value-classes.html), right?","Fragments":["I"]},{"Key":"right? I","Fragments":["had"]},{"Key":"had encountered","Fragments":["implicit"]},{"Key":"encountered implicit","Fragments":["conversion"]},{"Key":"Scala before,","Fragments":["but"]},{"Key":"not value","Fragments":["classes."]},{"Key":"I've tried","Fragments":["it"]},{"Key":"tried it","Fragments":["out"]},{"Key":"out in","Fragments":["iteration"]},{"Key":"iteration 2.","Fragments":["I"]},{"Key":"I quite","Fragments":["like"]},{"Key":"it cleans","Fragments":["up"]},{"Key":"the ``hey``","Fragments":["method,"]},{"Key":"``hey`` method,","Fragments":["though"]},{"Key":"method, though","Fragments":["I'm"]},{"Key":"though I'm","Fragments":["still"]},{"Key":"still a","Fragments":["bit"]},{"Key":"bit wary","Fragments":["of"]},{"Key":"wary of","Fragments":["implicits"]},{"Key":"general. (Spot","Fragments":["the"]},{"Key":"(Spot the","Fragments":["recovering"]},{"Key":"the recovering","Fragments":["Java"]},{"Key":"recovering Java","Fragments":["programmer.)"]},{"Key":"1. I","Fragments":["started"]},{"Key":"out writing","Fragments":["everything"]},{"Key":"writing everything","Fragments":["in"]},{"Key":"my `hey`","Fragments":["method."]},{"Key":"2. Next","Fragments":["I"]},{"Key":"Next I","Fragments":["created"]},{"Key":"created the","Fragments":["`isShouting`"]},{"Key":"the `isShouting`","Fragments":["method,"]},{"Key":"`isShouting` method,","Fragments":["which"]},{"Key":"method, which","Fragments":["contained"]},{"Key":"which contained","Fragments":["soon"]},{"Key":"contained soon","Fragments":["all"]},{"Key":"soon all","Fragments":["the"]},{"Key":"I recognized","Fragments":["that"]},{"Key":"recognized that","Fragments":["most"]},{"Key":"that most","Fragments":["of"]},{"Key":"logic could","Fragments":["be"]},{"Key":"be deleted","Fragments":["if"]},{"Key":"deleted if","Fragments":["I"]},{"Key":"I first","Fragments":["check"]},{"Key":"first check","Fragments":["if"]},{"Key":"question, which","Fragments":["left"]},{"Key":"which left","Fragments":["a"]},{"Key":"left a","Fragments":["very"]},{"Key":"very smal","Fragments":["`isShouting`"]},{"Key":"smal `isShouting`","Fragments":["method"]},{"Key":"The scala","Fragments":["feature"]},{"Key":"scala feature","Fragments":["on"]},{"Key":"feature on","Fragments":["collections"]},{"Key":"collections helped","Fragments":["me"]},{"Key":"helped me","Fragments":["a"]},{"Key":"a lot.","Fragments":["`exists`"]},{"Key":"lot. `exists`","Fragments":["and"]},{"Key":"`exists` and","Fragments":["`forall`"]},{"Key":"and `forall`","Fragments":["are"]},{"Key":"`forall` are","Fragments":["really"]},{"Key":"really nice","Fragments":["for"]},{"Key":"nice for","Fragments":["this","things"]},{"Key":"Thanks, both.","Fragments":[":)"]},{"Key":"have guessed","Fragments":["that"]},{"Key":"guessed that","Fragments":["there"]},{"Key":"was some","Fragments":["kind","precision"]},{"Key":"some kind","Fragments":["of"]},{"Key":"of \"count\"","Fragments":["method"]},{"Key":"\"count\" method","Fragments":["and"]},{"Key":"and searched","Fragments":["for"]},{"Key":"searched for","Fragments":["it."]},{"Key":"for it.","Fragments":["I"]},{"Key":"it. I","Fragments":["think","liked","originally"]},{"Key":"I remembered","Fragments":["using"]},{"Key":"remembered using","Fragments":["\"fold\""]},{"Key":"using \"fold\"","Fragments":["previously,"]},{"Key":"\"fold\" previously,","Fragments":["and"]},{"Key":"previously, and","Fragments":["used"]},{"Key":"it without","Fragments":["considering"]},{"Key":"without considering","Fragments":["the"]},{"Key":"considering the","Fragments":["alternatives."]},{"Key":"the alternatives.","Fragments":["It"]},{"Key":"alternatives. It","Fragments":["makes"]},{"Key":"It makes","Fragments":["this"]},{"Key":"makes this","Fragments":["much"]},{"Key":"this much","Fragments":["more","machinery"]},{"Key":"I'd start","Fragments":["with"]},{"Key":"with changing","Fragments":["````!c.isLower````"]},{"Key":"changing ````!c.isLower````","Fragments":["to"]},{"Key":"````!c.isLower```` to","Fragments":["````c.isUpper````,"]},{"Key":"to ````c.isUpper````,","Fragments":["just"]},{"Key":"````c.isUpper````, just","Fragments":["for"]},{"Key":"just for","Fragments":["clarity."]},{"Key":"for clarity.","Fragments":["You"]},{"Key":"clarity. You","Fragments":["could"]},{"Key":" (c:Char)","Fragments":["=\u003e"]},{"Key":"(c:Char) =\u003e","Fragments":["!c.isLower"]},{"Key":" with","Fragments":["cmd.toUpperCase","`pure`"]},{"Key":"with cmd.toUpperCase","Fragments":["=="]},{"Key":"cmd.toUpperCase ==","Fragments":["cmd"]},{"Key":" to","Fragments":["check"]},{"Key":"the sentence's","Fragments":["letters"]},{"Key":"sentence's letters","Fragments":["are"]},{"Key":"letters are","Fragments":["all"]},{"Key":"are all","Fragments":["upper"]},{"Key":"all upper","Fragments":["case."]},{"Key":"upper case.","Fragments":["I'd"]},{"Key":"case. I'd","Fragments":["reverse"]},{"Key":"I'd reverse","Fragments":["the"]},{"Key":"reverse the","Fragments":["order"]},{"Key":"your conditional,","Fragments":["since"]},{"Key":"conditional, since","Fragments":["a"]},{"Key":"since a","Fragments":["false"]},{"Key":"a false","Fragments":["on"]},{"Key":"current second","Fragments":["condition"]},{"Key":"second condition","Fragments":["will"]},{"Key":"condition will","Fragments":["short-circuit"]},{"Key":"will short-circuit","Fragments":["the"]},{"Key":"short-circuit the","Fragments":["need"]},{"Key":"for evalutating","Fragments":["the"]},{"Key":"evalutating the","Fragments":["other."]},{"Key":"The !c.isLower","Fragments":["statement"]},{"Key":"!c.isLower statement","Fragments":["is"]},{"Key":"also exclude","Fragments":["all"]},{"Key":"exclude all","Fragments":["numeric"]},{"Key":"all numeric","Fragments":["and"]},{"Key":"numeric and","Fragments":["special"]},{"Key":"and special","Fragments":["characters."]},{"Key":"The reason","Fragments":["why"]},{"Key":"the yelling","Fragments":["condition"]},{"Key":"yelling condition","Fragments":["came"]},{"Key":"condition came","Fragments":["first"]},{"Key":"came first","Fragments":["is"]},{"Key":"first is","Fragments":["because","to","to"]},{"Key":"it's specified","Fragments":["in"]},{"Key":"specified in","Fragments":["the"]},{"Key":"tests that","Fragments":["yelling"]},{"Key":"that yelling","Fragments":["can"]},{"Key":"yelling can","Fragments":["also"]},{"Key":"also end","Fragments":["with"]},{"Key":"end with","Fragments":["question"]},{"Key":"with question","Fragments":["marks."]},{"Key":"question marks.","Fragments":["Otherwise"]},{"Key":"marks. Otherwise","Fragments":["I'd"]},{"Key":"Otherwise I'd","Fragments":["completely"]},{"Key":"I'd completely","Fragments":["agree"]},{"Key":"completely agree","Fragments":["with"]},{"Key":"prefer a","Fragments":["single"]},{"Key":"single return","Fragments":["point"]},{"Key":"return point","Fragments":["than"]},{"Key":"point than","Fragments":["multiple"]},{"Key":"than multiple","Fragments":["return"]},{"Key":"multiple return","Fragments":["points."]},{"Key":"return points.","Fragments":["Since"]},{"Key":"points. Since","Fragments":["if/else"]},{"Key":"Since if/else","Fragments":["is"]},{"Key":"if/else is","Fragments":["an"]},{"Key":"Scala (meaning","Fragments":["that"]},{"Key":"(meaning that","Fragments":["the"]},{"Key":"the \"command\"","Fragments":["returns"]},{"Key":"\"command\" returns","Fragments":["a"]},{"Key":"returns a","Fragments":["value),"]},{"Key":"a value),","Fragments":["it"]},{"Key":"value), it","Fragments":["is"]},{"Key":"to eliminate","Fragments":["multiple"]},{"Key":"eliminate multiple","Fragments":["returns:"]},{"Key":"def hey(args:","Fragments":["String):"]},{"Key":"hey(args: String):","Fragments":["String"]},{"Key":"String): String","Fragments":["="]},{"Key":"if (...)","Fragments":["\"Fine.","\"Whoa,","\"Sure.\""]},{"Key":"(...) \"Fine.","Fragments":["Be"]},{"Key":"(...) \"Whoa,","Fragments":["chill"]},{"Key":"\"Whoa, chill","Fragments":["out!\""]},{"Key":" Remember","Fragments":["that"]},{"Key":"Remember that","Fragments":["`return`"]},{"Key":"that `return`","Fragments":["statement"]},{"Key":"`return` statement","Fragments":["is"]},{"Key":"is optional","Fragments":["in"]},{"Key":"optional in","Fragments":["Scala"]},{"Key":"Scala since","Fragments":["the"]},{"Key":"last computed","Fragments":["value","value"]},{"Key":"computed value","Fragments":["in","in"]},{"Key":"value in","Fragments":["a","my","the"]},{"Key":"method (the","Fragments":["last"]},{"Key":"(the last","Fragments":["computed","lines)"]},{"Key":"that returned","Fragments":["by"]},{"Key":"returned by","Fragments":["if"]},{"Key":"by if","Fragments":["expression,"]},{"Key":"if expression,","Fragments":["so"]},{"Key":"expression, so","Fragments":["this"]},{"Key":"so this","Fragments":["is"]},{"Key":"method returned","Fragments":["value)."]},{"Key":"Another detail.","Fragments":["It"]},{"Key":"detail. It","Fragments":["is"]},{"Key":"first test","Fragments":["to"]},{"Key":"test to","Fragments":["a","a","a"]},{"Key":"a simpler","Fragments":["one:"]},{"Key":"simpler one:","Fragments":["`args"]},{"Key":"one: `args","Fragments":["matches"]},{"Key":"`args matches","Fragments":["\"\\\\s*\"`"]},{"Key":"matches \"\\\\s*\"`","Fragments":["(0"]},{"Key":"\"\\\\s*\"` (0","Fragments":["or"]},{"Key":"(0 or","Fragments":["more"]},{"Key":"the collection","Fragments":["style"]},{"Key":"collection style","Fragments":["messages"]},{"Key":"style messages","Fragments":["on"]},{"Key":"messages on","Fragments":["`String`"]},{"Key":"`String` is","Fragments":["the"]},{"Key":"solve this","Fragments":["problem.","using"]},{"Key":"problem. Getting","Fragments":["familiar"]},{"Key":"Getting familiar","Fragments":["with"]},{"Key":"familiar with","Fragments":["those"]},{"Key":"methods will","Fragments":["serve"]},{"Key":"will serve","Fragments":["you"]},{"Key":"serve you","Fragments":["well"]},{"Key":"you well","Fragments":["as"]},{"Key":"you progress","Fragments":["in"]},{"Key":"progress in","Fragments":["Scala."]},{"Key":"at StringOps","Fragments":["in","in"]},{"Key":"Scala standard","Fragments":["library."]},{"Key":"standard library.","Fragments":["It","Using"]},{"Key":"library. It","Fragments":["provides"]},{"Key":"of collection","Fragments":["like"]},{"Key":"collection like","Fragments":["methods"]},{"Key":"for Strings.","Fragments":["Using"]},{"Key":"Strings. Using","Fragments":["that"]},{"Key":"Using that","Fragments":["this","you"]},{"Key":"exercise becomes","Fragments":["a"]},{"Key":"becomes a","Fragments":["legitimate"]},{"Key":"a legitimate","Fragments":["one-liner."]},{"Key":"good place","Fragments":["to"]},{"Key":"place to","Fragments":["use"]},{"Key":"a partial","Fragments":["function"]},{"Key":"partial function","Fragments":["to"]},{"Key":" strand1.zip(strand2).count","Fragments":["{"]},{"Key":"strand1.zip(strand2).count {","Fragments":["case"]},{"Key":"case (b1,","Fragments":["b2)"]},{"Key":"(b1, b2)","Fragments":["=\u003e"]},{"Key":"b2) =\u003e","Fragments":["b1"]},{"Key":"=\u003e b1","Fragments":["!="]},{"Key":"b1 !=","Fragments":["b2"]},{"Key":"!= b2","Fragments":["}"]},{"Key":"wasn't happy","Fragments":["using"]},{"Key":"happy using","Fragments":["pattern"]},{"Key":"matching for","Fragments":["not","readability"]},{"Key":"for not","Fragments":["matching"]},{"Key":"not matching","Fragments":["anything."]},{"Key":"matching anything.","Fragments":["So"]},{"Key":"anything. So","Fragments":["I"]},{"Key":"I replaced","Fragments":["the"]},{"Key":"replaced the","Fragments":["ifs"]},{"Key":"the ifs","Fragments":["in","with"]},{"Key":"ifs in","Fragments":["the"]},{"Key":"cases with","Fragments":["custom","primitives."]},{"Key":"with custom","Fragments":["extractors."]},{"Key":"I essentially","Fragments":["landed"]},{"Key":"essentially landed","Fragments":["on"]},{"Key":"landed on","Fragments":["the"]},{"Key":"solution, however","Fragments":["I"]},{"Key":"used s.endsWith(\"?\")","Fragments":["to"]},{"Key":"s.endsWith(\"?\") to","Fragments":["satisfy"]},{"Key":"to satisfy","Fragments":["the"]},{"Key":"satisfy the","Fragments":["defination"]},{"Key":"the defination","Fragments":["for"]},{"Key":"defination for","Fragments":["isQuestion"]},{"Key":" Good,","Fragments":["@rose!"]},{"Key":"Good, @rose!","Fragments":["Maybe"]},{"Key":"@rose! Maybe","Fragments":["`endsWith`"]},{"Key":"Maybe `endsWith`","Fragments":["is"]},{"Key":"`endsWith` is","Fragments":["a"]},{"Key":"bit better","Fragments":["because"]},{"Key":"better because","Fragments":["it"]},{"Key":"gives a","Fragments":["clearer"]},{"Key":"a clearer","Fragments":["understanding"]},{"Key":"clearer understanding","Fragments":["of"]},{"Key":"is it","Fragments":["that"]},{"Key":"it that","Fragments":["we"]},{"Key":"to test","Fragments":["(if"]},{"Key":"test (if","Fragments":["the"]},{"Key":"(if the","Fragments":["sentence"]},{"Key":"sentence **ends","Fragments":["with**"]},{"Key":"**ends with**","Fragments":["a"]},{"Key":"with** a","Fragments":["question"]},{"Key":"This problem","Fragments":["essentially"]},{"Key":"problem essentially","Fragments":["boils"]},{"Key":"essentially boils","Fragments":["down"]},{"Key":"boils down","Fragments":["to","to"]},{"Key":"to 3","Fragments":["alternatives"]},{"Key":"3 alternatives","Fragments":["and"]},{"Key":"alternatives and","Fragments":["a"]},{"Key":"a default","Fragments":["case"]},{"Key":"default case","Fragments":["based","for"]},{"Key":"case based","Fragments":["on"]},{"Key":"the specification","Fragments":["and"]},{"Key":"specification and","Fragments":["the"]},{"Key":"the effective","Fragments":["specification"]},{"Key":"effective specification","Fragments":["from"]},{"Key":"specification from","Fragments":["the"]},{"Key":"tests. So","Fragments":["I"]},{"Key":"could basically","Fragments":["ignore"]},{"Key":"basically ignore","Fragments":["the"]},{"Key":"ignore the","Fragments":["cases","difference"]},{"Key":"cases regarding","Fragments":["acronyms"]},{"Key":"regarding acronyms","Fragments":["and"]},{"Key":" Might","Fragments":["be"]},{"Key":"strong candidate","Fragments":["for"]},{"Key":"candidate for","Fragments":["case"]},{"Key":"for case","Fragments":["matching"]},{"Key":"case matching","Fragments":["too","system,"]},{"Key":"ifs with","Fragments":["the"]},{"Key":"helper methods,","Fragments":["easy"]},{"Key":"methods, easy","Fragments":["to"]},{"Key":"see the","Fragments":["big","appeal"]},{"Key":"the symbols","Fragments":["regex"]},{"Key":"symbols regex","Fragments":["will"]},{"Key":"regex will","Fragments":["fail"]},{"Key":"fail if","Fragments":["other"]},{"Key":"if other","Fragments":["symbols"]},{"Key":"other symbols","Fragments":["are"]},{"Key":"symbols are","Fragments":["used,"]},{"Key":"are used,","Fragments":["such"]},{"Key":"used, such","Fragments":["as"]},{"Key":"as '-'","Fragments":["or"]},{"Key":"'-' or","Fragments":["'\"'."]},{"Key":"or '\"'.","Fragments":["Exclusive"]},{"Key":"'\"'. Exclusive","Fragments":["pattern"]},{"Key":"Exclusive pattern","Fragments":["would"]},{"Key":"pattern would","Fragments":["be"]},{"Key":"more robust:","Fragments":["[\\^a-zA-Z]"]},{"Key":"* regexs","Fragments":["are"]},{"Key":"regexs are","Fragments":["powerful"]},{"Key":"are powerful","Fragments":["but"]},{"Key":"but most","Fragments":["of"]},{"Key":"the time","Fragments":["hard"]},{"Key":"time hard","Fragments":["to"]},{"Key":"to read.","Fragments":["It'd"]},{"Key":"read. It'd","Fragments":["be"]},{"Key":"be most","Fragments":["readable"]},{"Key":"most readable","Fragments":["to"]},{"Key":"readable to","Fragments":["use"]},{"Key":"use String","Fragments":["and"]},{"Key":"String and","Fragments":["Chars"]},{"Key":"and Chars","Fragments":["methods"]},{"Key":"Chars methods","Fragments":["since"]},{"Key":"methods since","Fragments":["they"]},{"Key":"they have","Fragments":["meaningful"]},{"Key":"have meaningful","Fragments":["names:"]},{"Key":"meaningful names:","Fragments":["isEmpty,"]},{"Key":"names: isEmpty,","Fragments":["isLetter,"]},{"Key":"isEmpty, isLetter,","Fragments":["isUpper"]},{"Key":"whole if","Fragments":["block"]},{"Key":"the surrounding","Fragments":["{}"]},{"Key":"* what","Fragments":["is"]},{"Key":"is **statement**","Fragments":["used"]},{"Key":"**statement** used","Fragments":["for?"]},{"Key":"To ignore","Fragments":["the"]},{"Key":"difference in","Fragments":["length"]},{"Key":"length i","Fragments":["was"]},{"Key":"i was","Fragments":["able"]},{"Key":"was able","Fragments":["to"]},{"Key":"the following","Fragments":["construct","function","exercises."]},{"Key":" Math.min(src.length,dest.length)","Fragments":["and"]},{"Key":"Math.min(src.length,dest.length) and","Fragments":["substring"]},{"Key":"and substring","Fragments":["to"]},{"Key":"substring to","Fragments":["ensure"]},{"Key":"to ensure","Fragments":["they"]},{"Key":"ensure they","Fragments":["were"]},{"Key":"they were","Fragments":["always"]},{"Key":"were always","Fragments":["the"]},{"Key":"always the","Fragments":["length"]},{"Key":"also wanted","Fragments":["to"]},{"Key":"to gain","Fragments":["some"]},{"Key":"gain some","Fragments":["experience"]},{"Key":"some experience","Fragments":["of"]},{"Key":"experience of","Fragments":["the"]},{"Key":"matching system,","Fragments":["so"]},{"Key":"system, so","Fragments":["further"]},{"Key":"so further","Fragments":["feedback"]},{"Key":"further feedback","Fragments":["here"]},{"Key":"feedback here","Fragments":["would"]},{"Key":"here would","Fragments":["be"]},{"Key":"be great.","Fragments":["Especially"]},{"Key":"great. Especially","Fragments":["as"]},{"Key":"Especially as","Fragments":["I"]},{"Key":"be relatively","Fragments":["easy"]},{"Key":"relatively easy","Fragments":["to"]},{"Key":"with another","Fragments":["case"]},{"Key":"another case","Fragments":["match,"]},{"Key":"case match,","Fragments":["just"]},{"Key":"match, just","Fragments":["not"]},{"Key":"just not","Fragments":["sure"]},{"Key":"had started","Fragments":["this"]},{"Key":"started this","Fragments":["solution"]},{"Key":"solution with","Fragments":["a"]},{"Key":"very ugly,","Fragments":["clunky"]},{"Key":"ugly, clunky","Fragments":["solution."]},{"Key":"clunky solution.","Fragments":["It"]},{"Key":"solution. It","Fragments":["worked,"]},{"Key":"It worked,","Fragments":["but"]},{"Key":"worked, but","Fragments":["it"]},{"Key":"wasn't very","Fragments":["readable."]},{"Key":"very readable.","Fragments":["After"]},{"Key":"readable. After","Fragments":["spending"]},{"Key":"After spending","Fragments":["some"]},{"Key":"spending some","Fragments":["time"]},{"Key":"time looking","Fragments":["through"]},{"Key":"looking through","Fragments":["the"]},{"Key":"the API","Fragments":["and"]},{"Key":"API and","Fragments":["debugging"]},{"Key":"and debugging","Fragments":["I"]},{"Key":"debugging I","Fragments":["came"]},{"Key":"I came","Fragments":["up","upon","up","up"]},{"Key":"came up","Fragments":["with","with","with.."]},{"Key":"with this.","Fragments":["`isUpper`"]},{"Key":"this. `isUpper`","Fragments":["might"]},{"Key":"`isUpper` might","Fragments":["not"]},{"Key":"be strictly","Fragments":["needed,"]},{"Key":"strictly needed,","Fragments":["but"]},{"Key":"the alternative","Fragments":["`!s.filter(_.isLetter).isEmpty"]},{"Key":"alternative `!s.filter(_.isLetter).isEmpty","Fragments":["\u0026\u0026"]},{"Key":"`!s.filter(_.isLetter).isEmpty \u0026\u0026","Fragments":["s.filter(_.isLetter).forall(_.isUpper)`"]},{"Key":"\u0026\u0026 s.filter(_.isLetter).forall(_.isUpper)`","Fragments":["is"]},{"Key":"s.filter(_.isLetter).forall(_.isUpper)` is","Fragments":["far"]},{"Key":"is far","Fragments":["less"]},{"Key":"far less","Fragments":["elegant."]},{"Key":" Converted","Fragments":["the"]},{"Key":"Converted the","Fragments":["if-else"]},{"Key":"if-else chain","Fragments":["to"]},{"Key":"chain to","Fragments":["pattern"]},{"Key":"to pattern","Fragments":["matches"]},{"Key":"pattern matches","Fragments":["and"]},{"Key":"matches and","Fragments":["got"]},{"Key":"and got","Fragments":["rid"]},{"Key":"of `isUpper`.","Fragments":["Checking"]},{"Key":"`isUpper`. Checking","Fragments":["whether"]},{"Key":"Checking whether","Fragments":["uppercase"]},{"Key":"whether uppercase","Fragments":["and"]},{"Key":"and lowercase","Fragments":["are"]},{"Key":"lowercase are","Fragments":["equal"]},{"Key":"are equal","Fragments":["makes","when"]},{"Key":"equal makes","Fragments":["it"]},{"Key":"figure about","Fragments":["what"]},{"Key":"about what","Fragments":["is","you're"]},{"Key":"is being","Fragments":["checked,","used.","evaluated."]},{"Key":"being checked,","Fragments":["at"]},{"Key":"checked, at","Fragments":["least"]},{"Key":"least to","Fragments":["me."]},{"Key":"wanted Bob","Fragments":["to","to","to"]},{"Key":"Bob to","Fragments":["be","be","be"]},{"Key":"be open","Fragments":["to","to","to"]},{"Key":"to extension","Fragments":["but","but","but"]},{"Key":"extension but","Fragments":["closed","closed","closed"]},{"Key":"but closed","Fragments":["for","for","for"]},{"Key":"closed for","Fragments":["modification.","modification.","modification."]},{"Key":"for modification.","Fragments":["The","The","The"]},{"Key":"modification. The","Fragments":["behavior","behavior","behavior"]},{"Key":"The behavior","Fragments":["of","of","of"]},{"Key":"behavior of","Fragments":["Bob","Bob","Bob","`isAnagram`"]},{"Key":"of Bob","Fragments":["can","can","can"]},{"Key":"Bob can","Fragments":["be","be","be"]},{"Key":"be customized","Fragments":["by","by","by"]},{"Key":"customized by","Fragments":["passing","passing","passing"]},{"Key":"by passing","Fragments":["a","a","a"]},{"Key":"passing a","Fragments":["responder","responder","responder"]},{"Key":"responder pipeline.","Fragments":["Default","Default","Default"]},{"Key":"pipeline. Default","Fragments":["responder","responder","responder"]},{"Key":"Default responder","Fragments":["pipeline","pipeline","pipeline"]},{"Key":"responder pipeline","Fragments":["is","is","is"]},{"Key":"pipeline is","Fragments":["provided","provided","provided"]},{"Key":"is provided","Fragments":["in","in","in"]},{"Key":"provided in","Fragments":["the","the","the"]},{"Key":"object of","Fragments":["Bob.","Bob.","Bob."]},{"Key":"This version","Fragments":["contains","makes","only","uses","contains"]},{"Key":"version contains","Fragments":["minor","minor"]},{"Key":"contains minor","Fragments":["cosmetic","cosmetic"]},{"Key":"minor cosmetic","Fragments":["changes","changes"]},{"Key":"cosmetic changes","Fragments":["(change","(change"]},{"Key":"changes (change","Fragments":["in","in"]},{"Key":"(change in","Fragments":["name","name"]},{"Key":"Bob's constructor","Fragments":["argument).","argument)."]},{"Key":"version makes","Fragments":["'hey'"]},{"Key":"makes 'hey'","Fragments":["function"]},{"Key":"'hey' function","Fragments":["final"]},{"Key":"function final","Fragments":["so"]},{"Key":"final so","Fragments":["that"]},{"Key":"it can't","Fragments":["be"]},{"Key":"can't be","Fragments":["overriden."]},{"Key":"thought of","Fragments":["2","2"]},{"Key":"of 2","Fragments":["different","different","up"]},{"Key":"2 different","Fragments":["approaches","approaches"]},{"Key":"different approaches","Fragments":["to","to"]},{"Key":"approaches to","Fragments":["solve","solve"]},{"Key":"compute differences","Fragments":["at","at"]},{"Key":"differences at","Fragments":["each","each"]},{"Key":"each index","Fragments":["and","and"]},{"Key":"index and","Fragments":["store","store"]},{"Key":"and store","Fragments":["it","it"]},{"Key":"store it","Fragments":["in","in"]},{"Key":"in differences","Fragments":["sequence.","sequence."]},{"Key":"differences sequence.","Fragments":["The","The"]},{"Key":"sequence. The","Fragments":["differences","differences"]},{"Key":"The differences","Fragments":["can","can"]},{"Key":"differences can","Fragments":["then","then"]},{"Key":"can then","Fragments":["be","be"]},{"Key":"then be","Fragments":["summed","summed","used"]},{"Key":"be summed","Fragments":["to","to"]},{"Key":"summed to","Fragments":["get","get"]},{"Key":"get Hamming","Fragments":["distance.","distance."]},{"Key":"2. Second","Fragments":["is","is"]},{"Key":"Second is","Fragments":["to","to"]},{"Key":"use recursion","Fragments":["to","to"]},{"Key":"recursion to","Fragments":["maintain","maintain"]},{"Key":"to maintain","Fragments":["the","the"]},{"Key":"maintain the","Fragments":["distance","distance"]},{"Key":"solution uses","Fragments":["second","first"]},{"Key":"uses second","Fragments":["approach."]},{"Key":"This function","Fragments":["can"]},{"Key":"function can","Fragments":["be","also"]},{"Key":"written using","Fragments":["`map`"]},{"Key":"using `map`","Fragments":["or"]},{"Key":"`map` or","Fragments":["`flatMap`"]},{"Key":"or `flatMap`","Fragments":["without"]},{"Key":"`flatMap` without","Fragments":["resorting"]},{"Key":"without resorting","Fragments":["to"]},{"Key":"resorting to","Fragments":["a"]},{"Key":"a local","Fragments":["mutable"]},{"Key":"local mutable","Fragments":["var."]},{"Key":"Nice solution,","Fragments":["one","though."]},{"Key":"solution, one","Fragments":["suggestion"]},{"Key":"one suggestion","Fragments":["is"]},{"Key":"suggestion is","Fragments":["that","that"]},{"Key":"could probably","Fragments":["have"]},{"Key":"have inlined","Fragments":["the"]},{"Key":"inlined the","Fragments":["call"]},{"Key":"the call","Fragments":["to"]},{"Key":"call to","Fragments":["result.toList","`count`"]},{"Key":"to result.toList","Fragments":["and"]},{"Key":"result.toList and","Fragments":["from"]},{"Key":"and from","Fragments":["a"]},{"Key":"a presentation","Fragments":["perspective"]},{"Key":"presentation perspective","Fragments":["I"]},{"Key":"perspective I","Fragments":["personally"]},{"Key":"personally would","Fragments":["remove"]},{"Key":"would remove","Fragments":["the"]},{"Key":"the commented","Fragments":["out"]},{"Key":"commented out","Fragments":["code"]},{"Key":"out code","Fragments":["as"]},{"Key":"it obscures","Fragments":["your"]},{"Key":"obscures your","Fragments":["solution"]},{"Key":" Here","Fragments":["is"]},{"Key":"Here is","Fragments":["a","my"]},{"Key":"one-liner solution","Fragments":["that"]},{"Key":"that uses","Fragments":["filter","a","standard"]},{"Key":"uses filter","Fragments":["to"]},{"Key":"filter to","Fragments":["do"]},{"Key":"the heavy","Fragments":["lifting."]},{"Key":"heavy lifting.","Fragments":["Removed"]},{"Key":"lifting. Removed","Fragments":["so"]},{"Key":"Removed so","Fragments":["unnecessary"]},{"Key":"so unnecessary","Fragments":["steps"]},{"Key":"unnecessary steps","Fragments":["from"]},{"Key":"steps from","Fragments":["the"]},{"Key":"be interested","Fragments":["in"]},{"Key":"interested in","Fragments":["better"]},{"Key":"in better","Fragments":["ways"]},{"Key":"better ways","Fragments":["of"]},{"Key":"ways of","Fragments":["presenting"]},{"Key":"of presenting","Fragments":["this"]},{"Key":"presenting this","Fragments":["code"]},{"Key":" looks","Fragments":["good."]},{"Key":"looks good.","Fragments":["regarding"]},{"Key":"good. regarding","Fragments":["naming"]},{"Key":"regarding naming","Fragments":["conventions"]},{"Key":"naming conventions","Fragments":["I"]},{"Key":"conventions I","Fragments":["wouldn't"]},{"Key":"wouldn't prefix","Fragments":["with"]},{"Key":"prefix with","Fragments":["\u003ccode\u003eval_\u003c/code\u003e"]},{"Key":"with \u003ccode\u003eval_\u003c/code\u003e","Fragments":["paramaters."]},{"Key":"\u003ccode\u003eval_\u003c/code\u003e paramaters.","Fragments":["probably"]},{"Key":"paramaters. probably","Fragments":["work"]},{"Key":"probably work","Fragments":["actually"]},{"Key":"work actually","Fragments":["explicitly"]},{"Key":"actually explicitly","Fragments":["setting"]},{"Key":"explicitly setting","Fragments":["it"]},{"Key":"setting it","Fragments":["as"]},{"Key":"it as","Fragments":["a","a"]},{"Key":"a \u003ccode\u003eval","Fragments":["\u003c/code\u003e"]},{"Key":"\u003ccode\u003eval \u003c/code\u003e","Fragments":["if"]},{"Key":"\u003c/code\u003e if","Fragments":["you"]},{"Key":"want it","Fragments":["to"]},{"Key":"be self","Fragments":["documenting."]},{"Key":"If avoiding","Fragments":["using"]},{"Key":"avoiding using","Fragments":["\u003ccode\u003echar\u003c/code\u003e"]},{"Key":"using \u003ccode\u003echar\u003c/code\u003e","Fragments":["as"]},{"Key":"\u003ccode\u003echar\u003c/code\u003e as","Fragments":["a"]},{"Key":"is you","Fragments":["concern,"]},{"Key":"you concern,","Fragments":["maybe"]},{"Key":"concern, maybe","Fragments":["something"]},{"Key":"like \"base\"","Fragments":["might"]},{"Key":"\"base\" might","Fragments":["work"]},{"Key":"might work","Fragments":["for"]},{"Key":" Shouldn't","Fragments":["you","operations"]},{"Key":"Shouldn't you","Fragments":["be"]},{"Key":"you be","Fragments":["checking"]},{"Key":"be checking","Fragments":["```t.toLowerCase"]},{"Key":"checking ```t.toLowerCase","Fragments":["!="]},{"Key":"```t.toLowerCase !=","Fragments":["word.toLowerCase```"]},{"Key":"!= word.toLowerCase```","Fragments":["?"]},{"Key":"word.toLowerCase``` ?","Fragments":["Could"]},{"Key":"? Could","Fragments":["you"]},{"Key":"you change","Fragments":["the","the"]},{"Key":"the ```sortWith```","Fragments":["to"]},{"Key":"```sortWith``` to","Fragments":["sorted"]},{"Key":"to sorted","Fragments":["and"]},{"Key":"sorted and","Fragments":["remove","lowercased"]},{"Key":"and remove","Fragments":["the"]},{"Key":"the ```_\u003c_```","Fragments":["function?"]},{"Key":"my opinion,","Fragments":["it"]},{"Key":"opinion, it","Fragments":["would"]},{"Key":"readable if","Fragments":["you","your"]},{"Key":"you got","Fragments":["away"]},{"Key":"got away","Fragments":["from"]},{"Key":"from trying","Fragments":["to"]},{"Key":"solve in","Fragments":["one"]},{"Key":"one line.","Fragments":["Of"]},{"Key":"line. Of","Fragments":["course"]},{"Key":"Of course","Fragments":["opinions"]},{"Key":"course opinions","Fragments":["will"]},{"Key":"opinions will","Fragments":["vary:)"]},{"Key":"will vary:)","Fragments":["The"]},{"Key":"vary:) The","Fragments":["matches"]},{"Key":"The matches","Fragments":["function"]},{"Key":"matches function","Fragments":["could"]},{"Key":"could contain","Fragments":["the"]},{"Key":"the words.filter","Fragments":["and"]},{"Key":"words.filter and","Fragments":["then"]},{"Key":"then move","Fragments":["the"]},{"Key":"the ```isAnagram```","Fragments":["logic"]},{"Key":"```isAnagram``` logic","Fragments":["to"]},{"Key":"logic to","Fragments":["another"]},{"Key":"another private","Fragments":["function."]},{"Key":"Thanks a","Fragments":["lot"]},{"Key":"lot for","Fragments":["the"]},{"Key":"the nice","Fragments":["feedback!"]},{"Key":"Still stuck","Fragments":["in"]},{"Key":"stuck in","Fragments":["a"]},{"Key":"a Java","Fragments":["mindset."]},{"Key":"A little","Fragments":["more"]},{"Key":"more Scalay","Fragments":["but"]},{"Key":"Scalay but","Fragments":["I've"]},{"Key":"I've broken","Fragments":["it"]},{"Key":"broken it","Fragments":["up"]},{"Key":"up to","Fragments":["help","n"]},{"Key":"me understand","Fragments":["more"]},{"Key":"understand more","Fragments":["of"]},{"Key":"more of","Fragments":["what's"]},{"Key":"of what's","Fragments":["going"]},{"Key":" Tried","Fragments":["to"]},{"Key":"Tried to","Fragments":["make"]},{"Key":"it short","Fragments":["and"]},{"Key":"short and","Fragments":["elegant","simple."]},{"Key":"and elegant","Fragments":["without"]},{"Key":"elegant without","Fragments":["being"]},{"Key":"without being","Fragments":["one"]},{"Key":"being one","Fragments":["long"]},{"Key":"one long","Fragments":["dificult"]},{"Key":"long dificult","Fragments":["to"]},{"Key":"dificult to","Fragments":["read"]},{"Key":"use ```str.forall(options.contains)```","Fragments":["instead"]},{"Key":"```str.forall(options.contains)``` instead","Fragments":["of"]},{"Key":"of ```str.filter(!options.contains(_)).length","Fragments":["\u003e"]},{"Key":"```str.filter(!options.contains(_)).length \u003e","Fragments":["0)```"]},{"Key":" refactored","Fragments":["to"]},{"Key":"refactored to","Fragments":["be"]},{"Key":"readable. More","Fragments":["defensive"]},{"Key":"More defensive","Fragments":["toLowerCase"]},{"Key":"defensive toLowerCase","Fragments":["check"]},{"Key":"toLowerCase check","Fragments":["on"]},{"Key":"check on","Fragments":["word"]},{"Key":"first submit.","Fragments":["I","I"]},{"Key":"submit. I","Fragments":["think","think"]},{"Key":"works properly","Fragments":["with","with"]},{"Key":"properly with","Fragments":["any","any"]},{"Key":"with any","Fragments":["input","input"]},{"Key":"any input","Fragments":["but","but"]},{"Key":"input but","Fragments":["I","I"]},{"Key":"be improved.","Fragments":["I","I"]},{"Key":"improved. I","Fragments":["don't","don't"]},{"Key":"like using","Fragments":["an","an"]},{"Key":"an upperCont","Fragments":["for","for"]},{"Key":"upperCont for","Fragments":["the","the"]},{"Key":"the upper","Fragments":["cases","cases"]},{"Key":"upper cases","Fragments":["but","but"]},{"Key":"cases but","Fragments":["it's","it's"]},{"Key":"it's needed","Fragments":["in","in"]},{"Key":"in order","Fragments":["to","to","to","for"]},{"Key":"order to","Fragments":["pass","pass","remove"]},{"Key":"the \"only","Fragments":["numbers\"","numbers\""]},{"Key":"\"only numbers\"","Fragments":["test.","test."]},{"Key":"I've forget","Fragments":["to","to"]},{"Key":"the println().","Fragments":["I'm","I'm"]},{"Key":"println(). I'm","Fragments":["removing","removing"]},{"Key":"I'm removing","Fragments":["them","them"]},{"Key":"removing them","Fragments":["for","for"]},{"Key":"them for","Fragments":["the","the"]},{"Key":"is ok,","Fragments":["the"]},{"Key":"ok, the","Fragments":["good"]},{"Key":"the good","Fragments":["part"]},{"Key":"good part","Fragments":["is"]},{"Key":"part is","Fragments":["that"]},{"Key":"only iterates","Fragments":["once"]},{"Key":"iterates once","Fragments":["to"]},{"Key":"once to","Fragments":["check","determine"]},{"Key":"the conditions.","Fragments":["If"]},{"Key":"conditions. If","Fragments":["you"]},{"Key":"to stick","Fragments":["with"]},{"Key":"stick with","Fragments":["it"]},{"Key":"it I'd","Fragments":["recommend"]},{"Key":"I'd recommend","Fragments":["the","a","adding","breaking","changing","turning","moving"]},{"Key":"recommend the","Fragments":["```foreach```"]},{"Key":"the ```foreach```","Fragments":["method"]},{"Key":"```foreach``` method","Fragments":["in"]},{"Key":"in ```String```","Fragments":["which"]},{"Key":"```String``` which","Fragments":["executes"]},{"Key":"which executes","Fragments":["a"]},{"Key":"executes a","Fragments":["code"]},{"Key":"code block","Fragments":["for","for"]},{"Key":"block for","Fragments":["every","your"]},{"Key":"for every","Fragments":["char,","string"]},{"Key":"every char,","Fragments":["just"]},{"Key":"char, just","Fragments":["as"]},{"Key":"your recursive","Fragments":["function."]},{"Key":"But, since","Fragments":["you"]},{"Key":"using Scala,","Fragments":["a"]},{"Key":"Scala, a","Fragments":["**Functional"]},{"Key":"a **Functional","Fragments":["Programing**"]},{"Key":"**Functional Programing**","Fragments":["language,"]},{"Key":"Programing** language,","Fragments":["you"]},{"Key":"language, you","Fragments":["should"]},{"Key":"should really","Fragments":["forget"]},{"Key":"really forget","Fragments":["about"]},{"Key":"forget about","Fragments":["mutating"]},{"Key":"about mutating","Fragments":["vars,"]},{"Key":"mutating vars,","Fragments":["you"]},{"Key":"vars, you","Fragments":["should"]},{"Key":"should forget","Fragments":["totally"]},{"Key":"forget totally","Fragments":["about"]},{"Key":"totally about","Fragments":["vars."]},{"Key":"about vars.","Fragments":["Instead,"]},{"Key":"vars. Instead,","Fragments":["you"]},{"Key":"Instead, you","Fragments":["can"]},{"Key":"can keep","Fragments":["the"]},{"Key":"the **if/else","Fragments":["if**"]},{"Key":"**if/else if**","Fragments":["expression,"]},{"Key":"if** expression,","Fragments":["but"]},{"Key":"expression, but","Fragments":["as"]},{"Key":"as conditions","Fragments":["you"]},{"Key":"conditions you","Fragments":["could"]},{"Key":"have separate","Fragments":["methods"]},{"Key":"methods ```String","Fragments":["=\u003e"]},{"Key":"```String =\u003e","Fragments":["Boolean```"]},{"Key":"=\u003e Boolean```","Fragments":["to"]},{"Key":"Boolean``` to","Fragments":["check"]},{"Key":"check every","Fragments":["condition"]},{"Key":"every condition","Fragments":["independently."]},{"Key":" These","Fragments":["methods"]},{"Key":"These methods","Fragments":["should"]},{"Key":"methods should","Fragments":["not"]},{"Key":"should not","Fragments":["mutate"]},{"Key":"not mutate","Fragments":["any"]},{"Key":"mutate any","Fragments":["var,"]},{"Key":"any var,","Fragments":["they"]},{"Key":"var, they","Fragments":["should"]},{"Key":"they should","Fragments":["traverse"]},{"Key":"should traverse","Fragments":["the"]},{"Key":"traverse the","Fragments":["```Strings```"]},{"Key":"the ```Strings```","Fragments":["as"]},{"Key":"```Strings``` as","Fragments":["```Seq[Char]```"]},{"Key":"as ```Seq[Char]```","Fragments":["to"]},{"Key":"```Seq[Char]``` to","Fragments":["evaluate"]},{"Key":"to evaluate","Fragments":["each"]},{"Key":"evaluate each","Fragments":["char."]},{"Key":"each char.","Fragments":["Take"]},{"Key":"char. Take","Fragments":["a"]},{"Key":"at ```isEmpty```,","Fragments":["```filter```,"]},{"Key":"```isEmpty```, ```filter```,","Fragments":["```forall```,"]},{"Key":"```filter```, ```forall```,","Fragments":["etc."]},{"Key":"```forall```, etc.","Fragments":["in"]},{"Key":"etc. in","Fragments":["```StringOps```","```RichChar```."]},{"Key":"in ```StringOps```","Fragments":["and"]},{"Key":"```StringOps``` and","Fragments":["```isLetter```,"]},{"Key":"and ```isLetter```,","Fragments":["```isUpper```,"]},{"Key":"```isLetter```, ```isUpper```,","Fragments":["etc."]},{"Key":"```isUpper```, etc.","Fragments":["in"]},{"Key":"Just testing","Fragments":["the"]},{"Key":"testing the","Fragments":["workflow"]},{"Key":"the workflow","Fragments":["of"]},{"Key":"workflow of","Fragments":["exercism.io"]},{"Key":"of exercism.io","Fragments":["..."]},{"Key":"exercism.io ...","Fragments":["more"]},{"Key":"... more","Fragments":["to"]},{"Key":"to come","Fragments":["later.","up","up"]},{"Key":"come later.","Fragments":["Maybe."]},{"Key":" Over","Fragments":["engineered"]},{"Key":"Over engineered","Fragments":["a"]},{"Key":"engineered a","Fragments":["bit"]},{"Key":"bit but","Fragments":["a"]},{"Key":"a neat","Fragments":["approach."]},{"Key":" why","Fragments":["create"]},{"Key":"why create","Fragments":["another"]},{"Key":"create another","Fragments":["year"]},{"Key":"another year","Fragments":["class,"]},{"Key":"year class,","Fragments":["the"]},{"Key":"class, the","Fragments":["code"]},{"Key":"code could","Fragments":["be"]},{"Key":"made much","Fragments":["simpler"]},{"Key":"much simpler","Fragments":["by"]},{"Key":"by making","Fragments":["the","Dna"]},{"Key":"the exterenal","Fragments":["class"]},{"Key":"exterenal class","Fragments":["a"]},{"Key":"class a","Fragments":["case"]},{"Key":"class already,","Fragments":["removing"]},{"Key":"already, removing","Fragments":["the"]},{"Key":"for defining","Fragments":["the"]},{"Key":" a","Fragments":["case"]},{"Key":"class will","Fragments":["create"]},{"Key":"will create","Fragments":["the"]},{"Key":"create the","Fragments":["apply"]},{"Key":"the apply","Fragments":["method","method"]},{"Key":"apply method","Fragments":["in","for"]},{"Key":"Your reduceLeft","Fragments":["operation"]},{"Key":"reduceLeft operation","Fragments":["basically"]},{"Key":"operation basically","Fragments":["does"]},{"Key":"basically does","Fragments":["what"]},{"Key":"does what","Fragments":["flatten"]},{"Key":"what flatten","Fragments":["would"]},{"Key":"flatten would","Fragments":["do."]},{"Key":"would do.","Fragments":["You"]},{"Key":"do. You","Fragments":["can"]},{"Key":"remove it","Fragments":["totally"]},{"Key":"it totally","Fragments":["if"]},{"Key":"totally if","Fragments":["you"]},{"Key":"you build","Fragments":["a"]},{"Key":"build a","Fragments":["tuple"]},{"Key":"a tuple","Fragments":["in"]},{"Key":"tuple in","Fragments":["your"]},{"Key":"map instead","Fragments":["of","of","of"]},{"Key":"This time","Fragments":["I've"]},{"Key":"time I've","Fragments":["changed"]},{"Key":"I've changed","Fragments":["the"]},{"Key":"changed the","Fragments":["var's","nucleotides"]},{"Key":"the var's","Fragments":["by"]},{"Key":"var's by","Fragments":["a"]},{"Key":"a state","Fragments":["machine."]},{"Key":"state machine.","Fragments":["The"]},{"Key":"machine. The","Fragments":["state"]},{"Key":"The state","Fragments":["change"]},{"Key":"state change","Fragments":["depending"]},{"Key":"change depending","Fragments":["on"]},{"Key":"depending on","Fragments":["the","initial"]},{"Key":"the evaluating","Fragments":["char"]},{"Key":"evaluating char","Fragments":["and"]},{"Key":"char and","Fragments":["the"]},{"Key":"state when","Fragments":["the"]},{"Key":"last char","Fragments":["is"]},{"Key":"char is","Fragments":["evaluate"]},{"Key":"is evaluate","Fragments":["determines"]},{"Key":"evaluate determines","Fragments":["which"]},{"Key":"determines which","Fragments":["is"]},{"Key":"some things","Fragments":["that"]},{"Key":"things that","Fragments":["I'm"]},{"Key":"that I'm","Fragments":["not"]},{"Key":" -I'm","Fragments":["not","not"]},{"Key":"-I'm not","Fragments":["sure","sure"]},{"Key":"if using","Fragments":["def"]},{"Key":"using def","Fragments":["is"]},{"Key":"def is","Fragments":["ok"]},{"Key":"if in","Fragments":["the","the"]},{"Key":"the evaluation","Fragments":["part"]},{"Key":"evaluation part","Fragments":["(the"]},{"Key":"part (the","Fragments":["last"]},{"Key":"last lines)","Fragments":["it's"]},{"Key":"lines) it's","Fragments":["ok"]},{"Key":"it's ok","Fragments":["to"]},{"Key":"use if-else","Fragments":["or"]},{"Key":"if-else or","Fragments":["it's"]},{"Key":"or it's","Fragments":["better"]},{"Key":"use match","Fragments":["-"]},{"Key":"match -","Fragments":["case"]},{"Key":"- case","Fragments":["statement."]},{"Key":"Scala coming","Fragments":["from"]},{"Key":"from Java","Fragments":["and"]},{"Key":"Java and","Fragments":["C#."]},{"Key":"probably way","Fragments":["less"]},{"Key":"way less","Fragments":["functional"]},{"Key":"less functional","Fragments":["and"]},{"Key":"functional and","Fragments":["more"]},{"Key":"more imperative","Fragments":["than","logic"]},{"Key":"imperative than","Fragments":["it"]},{"Key":"this sate","Fragments":["machine"]},{"Key":"sate machine","Fragments":["approach."]},{"Key":"machine approach.","Fragments":["In"]},{"Key":"approach. In","Fragments":["this"]},{"Key":"this approach","Fragments":["you"]},{"Key":"approach you","Fragments":["only"]},{"Key":"you only","Fragments":["have","ever"]},{"Key":"only have","Fragments":["to"]},{"Key":"iterate through","Fragments":["the","the"]},{"Key":"string once","Fragments":["to"]},{"Key":"to determine","Fragments":["what"]},{"Key":"determine what","Fragments":["case"]},{"Key":"what case","Fragments":["you're"]},{"Key":"case you're","Fragments":["using."]},{"Key":"Scala though","Fragments":["so"]},{"Key":"though so","Fragments":["take"]},{"Key":"so take","Fragments":["what"]},{"Key":"take what","Fragments":["I"]},{"Key":"I say","Fragments":["with"]},{"Key":"say with","Fragments":["a"]},{"Key":"a grain","Fragments":["of"]},{"Key":"grain of","Fragments":["salt."]},{"Key":"of salt.","Fragments":["I'm"]},{"Key":"salt. I'm","Fragments":["surprised"]},{"Key":"I'm surprised","Fragments":["you're"]},{"Key":"surprised you're","Fragments":["not"]},{"Key":"you're not","Fragments":["using"]},{"Key":"using any","Fragments":["String"]},{"Key":"any String","Fragments":["operations"]},{"Key":"String operations","Fragments":["though?"]},{"Key":"not mutating","Fragments":["any"]},{"Key":"mutating any","Fragments":["vars,"]},{"Key":"any vars,","Fragments":["both"]},{"Key":"vars, both","Fragments":["functions"]},{"Key":"both functions","Fragments":["are"]},{"Key":"are pure,","Fragments":["so"]},{"Key":"pure, so","Fragments":["your"]},{"Key":"so your","Fragments":["implementation"]},{"Key":"implementation looks","Fragments":["pretty"]},{"Key":"looks pretty","Fragments":["functional"]},{"Key":"pretty functional","Fragments":["to"]},{"Key":"functional to","Fragments":["me."]},{"Key":"Using ```return```","Fragments":["is"]},{"Key":"```return``` is","Fragments":["discouraged,"]},{"Key":"is discouraged,","Fragments":["you"]},{"Key":"discouraged, you","Fragments":["could"]},{"Key":"could improve","Fragments":["it"]},{"Key":"improve it","Fragments":["a"]},{"Key":"little bit","Fragments":["if","dirty"]},{"Key":"bit if","Fragments":["you"]},{"Key":"the ```returns```","Fragments":["and"]},{"Key":"```returns``` and","Fragments":["add"]},{"Key":"add an","Fragments":["```else```"]},{"Key":"an ```else```","Fragments":["for"]},{"Key":"```else``` for","Fragments":["```Whatever```"]},{"Key":" After","Fragments":["nitpicking"]},{"Key":"After nitpicking","Fragments":["I"]},{"Key":"nitpicking I","Fragments":["managed"]},{"Key":"I managed","Fragments":["to"]},{"Key":"managed to","Fragments":["improve"]},{"Key":"to improve","Fragments":["the","readability.","the"]},{"Key":"improve the","Fragments":["\"head\"","performance?"]},{"Key":"the \"head\"","Fragments":["generation"]},{"Key":"\"head\" generation","Fragments":["by"]},{"Key":"generation by","Fragments":["applying"]},{"Key":"by applying","Fragments":["a"]},{"Key":"applying a","Fragments":["filter"]},{"Key":"a filter","Fragments":["in"]},{"Key":"filter in","Fragments":["order"]},{"Key":"remove numeric","Fragments":["values."]},{"Key":"the tip,","Fragments":["@bernard!"]},{"Key":"tip, @bernard!","Fragments":["New"]},{"Key":"@bernard! New","Fragments":["version"]},{"Key":"New version","Fragments":["submitted."]},{"Key":" Minor","Fragments":["nit,","comments:","nit,"]},{"Key":"Minor nit,","Fragments":["but","as"]},{"Key":"nit, but","Fragments":["I"]},{"Key":"the toString","Fragments":["is","method."]},{"Key":"toString is","Fragments":["a"]},{"Key":"complex than","Fragments":["it"]},{"Key":"it needs","Fragments":["to","to"]},{"Key":"to be.","Fragments":["I"]},{"Key":"be. I","Fragments":["think"]},{"Key":"you used","Fragments":["some","`e._2.head`","Maps"]},{"Key":"used some","Fragments":["intermediate"]},{"Key":"some intermediate","Fragments":["variables"]},{"Key":"intermediate variables","Fragments":["to"]},{"Key":"hold the","Fragments":["areacode,","constants."]},{"Key":"the areacode,","Fragments":["the"]},{"Key":"areacode, the","Fragments":["first"]},{"Key":"first three","Fragments":["digits"]},{"Key":"three digits","Fragments":["and"]},{"Key":"digits and","Fragments":["the"]},{"Key":"last 4","Fragments":["digits."]},{"Key":" Didn't","Fragments":["want","know"]},{"Key":"Didn't want","Fragments":["to"]},{"Key":"use heavy","Fragments":["NLP"]},{"Key":"heavy NLP","Fragments":["libraries"]},{"Key":"NLP libraries","Fragments":["to"]},{"Key":"libraries to","Fragments":["detect"]},{"Key":"detect \"yelling\"","Fragments":["(since"]},{"Key":"\"yelling\" (since","Fragments":["there"]},{"Key":"(since there","Fragments":["is"]},{"Key":"no definition),","Fragments":["so"]},{"Key":"definition), so","Fragments":["I"]},{"Key":"I decided","Fragments":["to","to"]},{"Key":"decided to","Fragments":["use","try"]},{"Key":"use some","Fragments":["regexps.","more"]},{"Key":"some regexps.","Fragments":["At"]},{"Key":"regexps. At","Fragments":["least"]},{"Key":"least it","Fragments":["passes"]},{"Key":"passes test","Fragments":["suite."]},{"Key":"was not","Fragments":["satisfied"]},{"Key":"not satisfied","Fragments":["with"]},{"Key":"satisfied with","Fragments":["the"]},{"Key":"the mapping,","Fragments":["because"]},{"Key":"mapping, because","Fragments":["a"]},{"Key":"because a","Fragments":["simple"]},{"Key":"simple sort","Fragments":["of"]},{"Key":"sort of","Fragments":["the","Map,","class"]},{"Key":"string did","Fragments":["what"]},{"Key":"did what","Fragments":["I"]},{"Key":"I needed.","Fragments":["Maps"]},{"Key":"needed. Maps","Fragments":["are"]},{"Key":"Maps are","Fragments":["nice"]},{"Key":"are nice","Fragments":["for"]},{"Key":"like this,","Fragments":["generally","it"]},{"Key":"this, generally","Fragments":["though."]},{"Key":"generally though.","Fragments":["I"]},{"Key":"though. I","Fragments":["went"]},{"Key":"and made","Fragments":["lower","your"]},{"Key":"made lower","Fragments":["and"]},{"Key":"lower and","Fragments":["sorted"]},{"Key":"and sorted","Fragments":["versions"]},{"Key":"sorted versions","Fragments":["of","of"]},{"Key":"versions of","Fragments":["s","strings.","the"]},{"Key":"of s","Fragments":["so","=="]},{"Key":"s so","Fragments":["that"]},{"Key":"that work","Fragments":["only"]},{"Key":"work only","Fragments":["needs"]},{"Key":"done once","Fragments":["instead","on"]},{"Key":"once instead","Fragments":["of"]},{"Key":"of for","Fragments":["each"]},{"Key":"each member","Fragments":["of"]},{"Key":"member of","Fragments":["the"]},{"Key":"the sequence","Fragments":["passed","method"]},{"Key":"sequence passed","Fragments":["to"]},{"Key":"to matches.","Fragments":["There's"]},{"Key":"matches. There's","Fragments":["probably"]},{"Key":"probably some","Fragments":["more"]},{"Key":"some more","Fragments":["optimizations","indents","imperative"]},{"Key":"more optimizations","Fragments":["that"]},{"Key":"optimizations that","Fragments":["could"]},{"Key":"be made.","Fragments":["I'm"]},{"Key":"made. I'm","Fragments":["reasonable"]},{"Key":"I'm reasonable","Fragments":["happy"]},{"Key":"reasonable happy","Fragments":["with"]},{"Key":"with this,","Fragments":["although"]},{"Key":"this, although","Fragments":["I"]},{"Key":"see I","Fragments":["need"]},{"Key":"to clean","Fragments":["up","the"]},{"Key":"clean up","Fragments":["some"]},{"Key":"up some","Fragments":["comments."]},{"Key":" From","Fragments":["previous"]},{"Key":"From previous","Fragments":["to"]},{"Key":"previous to","Fragments":["current,"]},{"Key":"to current,","Fragments":["I"]},{"Key":"current, I","Fragments":["just"]},{"Key":"just removed","Fragments":["some"]},{"Key":"removed some","Fragments":["comments."]},{"Key":"for cleanedUp","Fragments":["I'd"]},{"Key":"cleanedUp I'd","Fragments":["go"]},{"Key":"with whitelisting","Fragments":["characters"]},{"Key":"whitelisting characters","Fragments":["instead"]},{"Key":"of blacklisting.","Fragments":["For"]},{"Key":"blacklisting. For","Fragments":["example"]},{"Key":"example using","Fragments":["regular"]},{"Key":"See some","Fragments":["other"]},{"Key":"other users","Fragments":["code"]},{"Key":"users code","Fragments":["for"]},{"Key":"code for","Fragments":["examples."]},{"Key":"I've written","Fragments":["very"]},{"Key":"written very","Fragments":["little"]},{"Key":"little Scala.","Fragments":["Started"]},{"Key":"Scala. Started","Fragments":["with"]},{"Key":"Started with","Fragments":["some"]},{"Key":"some if/then","Fragments":["logic"]},{"Key":"if/then logic","Fragments":["then"]},{"Key":"logic then","Fragments":["kept"]},{"Key":"then kept","Fragments":["improving"]},{"Key":"kept improving","Fragments":["to"]},{"Key":"improving to","Fragments":["what"]},{"Key":"see here.","Fragments":["All"]},{"Key":"here. All","Fragments":["tests"]},{"Key":"All tests","Fragments":["passed."]},{"Key":"tests passed.","Fragments":["Tips"]},{"Key":"passed. Tips","Fragments":["welcome."]},{"Key":" Improved/simplified","Fragments":["isSilence"]},{"Key":"Improved/simplified isSilence","Fragments":["function"]},{"Key":"isSilence function","Fragments":["after"]},{"Key":"function after","Fragments":["looking"]},{"Key":"at some","Fragments":["other"]},{"Key":"not terribly","Fragments":["happy"]},{"Key":"terribly happy","Fragments":["with"]},{"Key":"with how","Fragments":["this"]},{"Key":"this looks.","Fragments":["Things"]},{"Key":"looks. Things","Fragments":["ought"]},{"Key":"Things ought","Fragments":["to"]},{"Key":"ought to","Fragments":["be"]},{"Key":"bit simpler","Fragments":["for"]},{"Key":"simpler for","Fragments":["a"]},{"Key":"a project","Fragments":["like"]},{"Key":"project like","Fragments":["this."]},{"Key":" Moving","Fragments":["values"]},{"Key":"Moving values","Fragments":["depending"]},{"Key":"values depending","Fragments":["on"]},{"Key":"on initial","Fragments":["text"]},{"Key":"initial text","Fragments":["to"]},{"Key":"text to","Fragments":["class"]},{"Key":"to class","Fragments":["level"]},{"Key":"class level","Fragments":["as"]},{"Key":"level as","Fragments":["they"]},{"Key":"they does","Fragments":["not"]},{"Key":" Generating","Fragments":["the"]},{"Key":"Generating the","Fragments":["name"]},{"Key":"bit dirty","Fragments":["but"]},{"Key":"dirty but","Fragments":["was"]},{"Key":"but was","Fragments":["coded"]},{"Key":"was coded","Fragments":["very"]},{"Key":"coded very","Fragments":["quickly."]},{"Key":"like Random","Fragments":["to"]},{"Key":"Random to","Fragments":["have"]},{"Key":"method called","Fragments":["alphabetic."]},{"Key":"called alphabetic.","Fragments":["Anyway,"]},{"Key":"alphabetic. Anyway,","Fragments":["since"]},{"Key":"Anyway, since","Fragments":["performance"]},{"Key":"since performance","Fragments":["is"]},{"Key":"performance is","Fragments":["not"]},{"Key":"not an","Fragments":["issue"]},{"Key":"an issue","Fragments":["my"]},{"Key":"issue my","Fragments":["workaround"]},{"Key":"my workaround","Fragments":["should"]},{"Key":"workaround should","Fragments":["work.."]},{"Key":"your solution.","Fragments":["Learned"]},{"Key":"solution. Learned","Fragments":["some"]},{"Key":"Learned some","Fragments":["new"]},{"Key":"some new","Fragments":["things,"]},{"Key":"new things,","Fragments":["thanks."]},{"Key":"interesting problem.","Fragments":["I"]},{"Key":"problem. I","Fragments":["liked"]},{"Key":"I liked","Fragments":["creating","that"]},{"Key":"liked creating","Fragments":["the"]},{"Key":"the ntides","Fragments":["list"]},{"Key":"ntides list","Fragments":["to"]},{"Key":"to DRY","Fragments":["up"]},{"Key":"DRY up","Fragments":["things"]},{"Key":"up things","Fragments":["a"]},{"Key":"bit in","Fragments":["the"]},{"Key":"count and","Fragments":["nucleotideCounts"]},{"Key":"and nucleotideCounts","Fragments":["functions."]},{"Key":"nucleotideCounts functions.","Fragments":["I"]},{"Key":"functions. I","Fragments":["also"]},{"Key":"also used","Fragments":["the"]},{"Key":"used the","Fragments":["count","same"]},{"Key":"count function","Fragments":["to"]},{"Key":"to validate","Fragments":["the"]},{"Key":"validate the","Fragments":["string"]},{"Key":"string passed","Fragments":["to"]},{"Key":"the contstructor.","Fragments":["I"]},{"Key":"contstructor. I","Fragments":["kept"]},{"Key":"kept it","Fragments":["pretty"]},{"Key":"pretty simple,","Fragments":["I"]},{"Key":"simple, I","Fragments":["think,"]},{"Key":"I think,","Fragments":["so"]},{"Key":"think, so","Fragments":["if"]},{"Key":"have criticism,","Fragments":["I'd"]},{"Key":"criticism, I'd","Fragments":["really"]},{"Key":"I'd really","Fragments":["like"]},{"Key":"to hear","Fragments":["it."]},{"Key":"hear it.","Fragments":["I"]},{"Key":"liked that","Fragments":["I"]},{"Key":"didn't use","Fragments":["any"]},{"Key":"use any","Fragments":["mutables","class"]},{"Key":"any mutables","Fragments":["to"]},{"Key":"mutables to","Fragments":["get"]},{"Key":"to work,","Fragments":["which"]},{"Key":"work, which","Fragments":["I've"]},{"Key":"which I've","Fragments":["been"]},{"Key":"I've been","Fragments":["guilty"]},{"Key":"been guilty","Fragments":["of"]},{"Key":"guilty of","Fragments":["in"]},{"Key":"of in","Fragments":["the","the"]},{"Key":" MultiMaps","Fragments":["are"]},{"Key":"MultiMaps are","Fragments":["fun"]},{"Key":"are fun","Fragments":["although"]},{"Key":"fun although","Fragments":["I've"]},{"Key":"although I've","Fragments":["spent"]},{"Key":"I've spent","Fragments":["to"]},{"Key":"spent to","Fragments":["much"]},{"Key":"to much","Fragments":["time"]},{"Key":"much time","Fragments":["on"]},{"Key":"time on","Fragments":["the"]},{"Key":"the ordering","Fragments":["stuff...","of"]},{"Key":"idea with","Fragments":["the"]},{"Key":"the filter.","Fragments":["Here"]},{"Key":"filter. Here","Fragments":["is"]},{"Key":"my solution,","Fragments":["if","thanks!"]},{"Key":"solution, if","Fragments":["you"]},{"Key":"def genName:String","Fragments":["="]},{"Key":"genName:String =","Fragments":["{"]},{"Key":"val head","Fragments":["="]},{"Key":"head =","Fragments":["Random.alphanumeric.filter(_.isLetter).take(2).mkString.toUpperCase"]},{"Key":"val tail","Fragments":["="]},{"Key":"tail =","Fragments":["Random.nextInt(999)"]},{"Key":" head","Fragments":["+"]},{"Key":"head +","Fragments":["\"%03d\".format(tail)"]},{"Key":"you refactor","Fragments":["this"]},{"Key":"refactor this","Fragments":["so"]},{"Key":"this so","Fragments":["you"]},{"Key":"mutable map?","Fragments":["I"]},{"Key":"map? I","Fragments":["find"]},{"Key":"do as","Fragments":["a"]},{"Key":"a succession","Fragments":["of"]},{"Key":"succession of","Fragments":["transformations"]},{"Key":"of transformations","Fragments":["on"]},{"Key":"transformations on","Fragments":["the"]},{"Key":"input data","Fragments":["to"]},{"Key":"data to","Fragments":["get"]},{"Key":"the output","Fragments":["data."]},{"Key":"I tackled","Fragments":["this"]},{"Key":"tackled this","Fragments":["earlier"]},{"Key":"this earlier","Fragments":["today."]},{"Key":"earlier today.","Fragments":["I"]},{"Key":"today. I","Fragments":["handled"]},{"Key":"handled validation","Fragments":["in"]},{"Key":"validation in","Fragments":["my"]},{"Key":"my count()","Fragments":["function"]},{"Key":"count() function","Fragments":["and"]},{"Key":"then had","Fragments":["a"]},{"Key":"a line","Fragments":["`s.foreach{"]},{"Key":"line `s.foreach{","Fragments":["count(_)`"]},{"Key":"`s.foreach{ count(_)`","Fragments":["after"]},{"Key":"count(_)` after","Fragments":["I"]},{"Key":"I initialized","Fragments":["my"]},{"Key":"initialized my","Fragments":["list"]},{"Key":"my list","Fragments":["of"]},{"Key":"of possible","Fragments":["nucleotides."]},{"Key":"possible nucleotides.","Fragments":["That"]},{"Key":"That handled","Fragments":["the"]},{"Key":"validation of","Fragments":["the"]},{"Key":"input to","Fragments":["the"]},{"Key":"than creating","Fragments":["a"]},{"Key":"mutable `Map`","Fragments":["with"]},{"Key":"`Map` with","Fragments":["default"]},{"Key":"with default","Fragments":["values,","values"]},{"Key":"default values,","Fragments":["I"]},{"Key":"values, I","Fragments":["feel"]},{"Key":"feel it's","Fragments":["better"]},{"Key":"the `List.map()`","Fragments":["function"]},{"Key":"`List.map()` function","Fragments":["to"]},{"Key":"get another","Fragments":["list"]},{"Key":"another list","Fragments":["with"]},{"Key":"list with","Fragments":["the"]},{"Key":"the counts","Fragments":["and","to"]},{"Key":"counts and","Fragments":["then","then"]},{"Key":"the `scala.collection.breakout`","Fragments":["and"]},{"Key":"`scala.collection.breakout` and","Fragments":["`zip`"]},{"Key":"map from","Fragments":["two"]},{"Key":"from two","Fragments":["lists."]},{"Key":"two lists.","Fragments":["I'm"]},{"Key":"lists. I'm","Fragments":["just"]},{"Key":"just learning","Fragments":["more"]},{"Key":"learning more","Fragments":["and"]},{"Key":"more in","Fragments":["Scala","order"]},{"Key":"to hate","Fragments":["temporary"]},{"Key":"hate temporary","Fragments":["values,"]},{"Key":"temporary values,","Fragments":["especially"]},{"Key":"values, especially","Fragments":["mutable"]},{"Key":"especially mutable","Fragments":["ones."]},{"Key":" Finally,","Fragments":["on","the"]},{"Key":"Finally, on","Fragments":["your"]},{"Key":"your `count()`","Fragments":["function,"]},{"Key":"`count()` function,","Fragments":["I'd"]},{"Key":"function, I'd","Fragments":["suggest"]},{"Key":"I'd suggest","Fragments":["just","breaking","breaking"]},{"Key":"suggest just","Fragments":["testing"]},{"Key":"just testing","Fragments":["to"]},{"Key":"testing to","Fragments":["see"]},{"Key":"nucleotide is","Fragments":["in"]},{"Key":"your list","Fragments":["and","on"]},{"Key":"and returning","Fragments":["`nucleotides"]},{"Key":"returning `nucleotides","Fragments":["count"]},{"Key":"`nucleotides count","Fragments":["{"]},{"Key":"{ _==nucleotide}","Fragments":["if"]},{"Key":"_==nucleotide} if","Fragments":["it"]},{"Key":"is and","Fragments":["the"]},{"Key":"the exception","Fragments":["if"]},{"Key":"if not.","Fragments":["Seems"]},{"Key":"not. Seems","Fragments":["like"]},{"Key":"Seems like","Fragments":["a"]},{"Key":"of work","Fragments":["to"]},{"Key":"work to","Fragments":["create"]},{"Key":"counts to","Fragments":["get"]},{"Key":"a count","Fragments":["for"]},{"Key":"count for","Fragments":["a"]},{"Key":"single nucleotide,","Fragments":["but"]},{"Key":"that's just","Fragments":["me."]},{"Key":"your name","Fragments":["choice"]},{"Key":"name choice","Fragments":["of"]},{"Key":"of filter","Fragments":["for"]},{"Key":"filter for","Fragments":["your"]},{"Key":"your inner","Fragments":["function."]},{"Key":"inner function.","Fragments":["Maybe"]},{"Key":"function. Maybe","Fragments":["isAnagram?"]},{"Key":"Interesting way","Fragments":["to"]},{"Key":"map that","Fragments":["checks"]},{"Key":"that checks","Fragments":["the"]},{"Key":"checks the","Fragments":["letter"]},{"Key":"the letter","Fragments":["counts."]},{"Key":"letter counts.","Fragments":["I'll"]},{"Key":"counts. I'll","Fragments":["have"]},{"Key":"remember that.","Fragments":["I"]},{"Key":"that. I","Fragments":["also"]},{"Key":"also didn't","Fragments":["think"]},{"Key":"didn't think","Fragments":["of"]},{"Key":"using `equalsIgnoreCase`","Fragments":["and"]},{"Key":"`equalsIgnoreCase` and","Fragments":["used"]},{"Key":"used `toLowerCase`","Fragments":["twice."]},{"Key":"`toLowerCase` twice.","Fragments":["I'll"]},{"Key":"twice. I'll","Fragments":["have"]},{"Key":"that one,","Fragments":["too."]},{"Key":" However,","Fragments":["it's"]},{"Key":"However, it's","Fragments":["simpler"]},{"Key":"it's simpler","Fragments":["just"]},{"Key":"simpler just","Fragments":["to"]},{"Key":"use `.toLowerCase.sorted`","Fragments":["and"]},{"Key":"`.toLowerCase.sorted` and","Fragments":["compare"]},{"Key":"and compare","Fragments":["the"]},{"Key":"the sorted,","Fragments":["lower"]},{"Key":"sorted, lower","Fragments":["case"]},{"Key":"lower case","Fragments":["versions"]},{"Key":"case versions","Fragments":["of"]},{"Key":"I'd break","Fragments":["out"]},{"Key":"break out","Fragments":["the","the","the"]},{"Key":"the checksum","Fragments":["function"]},{"Key":"checksum function","Fragments":["as"]},{"Key":"a `private`","Fragments":["function"]},{"Key":"`private` function","Fragments":["and"]},{"Key":"then make","Fragments":["the"]},{"Key":"value `checksum(word)`","Fragments":["a"]},{"Key":"`checksum(word)` a","Fragments":["`private"]},{"Key":"a `private","Fragments":["val`"]},{"Key":"`private val`","Fragments":["so"]},{"Key":"val` so","Fragments":["that"]},{"Key":"keep calling","Fragments":["it"]},{"Key":"calling it","Fragments":["each","each"]},{"Key":"it each","Fragments":["time","time"]},{"Key":"time you","Fragments":["loop","test"]},{"Key":"you loop","Fragments":["through"]},{"Key":"loop through","Fragments":["for","2"]},{"Key":"through for","Fragments":["`filter`."]},{"Key":"for `filter`.","Fragments":["Also,"]},{"Key":"`filter`. Also,","Fragments":["things"]},{"Key":"Also, things","Fragments":["might"]},{"Key":"things might","Fragments":["be"]},{"Key":"be clearer","Fragments":["if"]},{"Key":"clearer if","Fragments":["you"]},{"Key":"broke out","Fragments":["the"]},{"Key":"code inside","Fragments":["the"]},{"Key":"the filter","Fragments":["test","block","test","test","predicate.","and"]},{"Key":"filter test","Fragments":["into","to","into","out","block"]},{"Key":"test into","Fragments":["a","a"]},{"Key":"private function","Fragments":["that","with"]},{"Key":"was well","Fragments":["named"]},{"Key":"well named","Fragments":["(isAnagram(),"]},{"Key":"named (isAnagram(),","Fragments":["for"]},{"Key":"(isAnagram(), for","Fragments":["instance)."]},{"Key":"than use","Fragments":["`word.toCharArray.sortBy(identity)`,"]},{"Key":"use `word.toCharArray.sortBy(identity)`,","Fragments":["why"]},{"Key":"`word.toCharArray.sortBy(identity)`, why","Fragments":["not"]},{"Key":"use `word.sorted`?","Fragments":["Then"]},{"Key":"`word.sorted`? Then","Fragments":["your"]},{"Key":"Then your","Fragments":["code"]},{"Key":"be much","Fragments":["shorter"]},{"Key":"shorter and","Fragments":["probably"]},{"Key":"probably clearer.","Fragments":["You"]},{"Key":"clearer. You","Fragments":["could"]},{"Key":"also then","Fragments":["use"]},{"Key":"use `==`","Fragments":["instead"]},{"Key":"`==` instead","Fragments":["of"]},{"Key":"of `sameElements`","Fragments":["for"]},{"Key":"`sameElements` for","Fragments":["the"]},{"Key":"also suggest","Fragments":["changing"]},{"Key":"suggest changing","Fragments":["`isAnagram(word:"]},{"Key":"changing `isAnagram(word:","Fragments":["String,"]},{"Key":"`isAnagram(word: String,","Fragments":["anagram:"]},{"Key":"String, anagram:","Fragments":["String)`"]},{"Key":"anagram: String)`","Fragments":["to"]},{"Key":"String)` to","Fragments":["`isAnagram(anagram:String)`."]},{"Key":"to `isAnagram(anagram:String)`.","Fragments":["You'll"]},{"Key":"`isAnagram(anagram:String)`. You'll","Fragments":["get"]},{"Key":"You'll get","Fragments":["the"]},{"Key":"same effect,","Fragments":["since"]},{"Key":"effect, since","Fragments":["you"]},{"Key":"method with","Fragments":["the","a"]},{"Key":"the val","Fragments":["word"]},{"Key":"val word","Fragments":["for"]},{"Key":"word for","Fragments":["the"]},{"Key":"the parameter","Fragments":["each","name"]},{"Key":"parameter each","Fragments":["time."]},{"Key":"each time.","Fragments":["You"]},{"Key":"time. You","Fragments":["shouldn't"]},{"Key":"You shouldn't","Fragments":["overuse"]},{"Key":"shouldn't overuse","Fragments":["the"]},{"Key":"overuse the","Fragments":["same"]},{"Key":"same val","Fragments":["names,"]},{"Key":"val names,","Fragments":["as"]},{"Key":"names, as","Fragments":["things"]},{"Key":"as things","Fragments":["can"]},{"Key":"things can","Fragments":["get"]},{"Key":"the nucleotides","Fragments":["function","list"]},{"Key":"nucleotides function","Fragments":["from"]},{"Key":"function from","Fragments":["getting"]},{"Key":"from getting","Fragments":["a"]},{"Key":"getting a","Fragments":["list","list","balance"]},{"Key":"of counts","Fragments":["and"]},{"Key":"then zipping","Fragments":["with"]},{"Key":"zipping with","Fragments":["the"]},{"Key":"nucleotides list","Fragments":["to"]},{"Key":"of (nucleotide,","Fragments":["count)"]},{"Key":"(nucleotide, count)","Fragments":["pairs"]},{"Key":"count) pairs","Fragments":["and"]},{"Key":"pairs and","Fragments":["then"]},{"Key":"then creating","Fragments":["the"]},{"Key":"with `breakOut`.","Fragments":["I"]},{"Key":"`breakOut`. I","Fragments":["like"]},{"Key":"it shows","Fragments":["my"]},{"Key":"shows my","Fragments":["intentions"]},{"Key":"my intentions","Fragments":["more"]},{"Key":"intentions more","Fragments":["clearly."]},{"Key":"the frequencies","Fragments":["mapping"]},{"Key":"frequencies mapping","Fragments":["is"]},{"Key":"mapping is","Fragments":["a"]},{"Key":"little overkill","Fragments":["here."]},{"Key":"overkill here.","Fragments":["Technically"]},{"Key":"here. Technically","Fragments":["correct,"]},{"Key":"Technically correct,","Fragments":["but"]},{"Key":"correct, but","Fragments":["you"]},{"Key":"same effect","Fragments":["by"]},{"Key":"effect by","Fragments":["just"]},{"Key":"by just","Fragments":["comparing"]},{"Key":"just comparing","Fragments":["the"]},{"Key":"I prefered","Fragments":["just"]},{"Key":"prefered just","Fragments":["sorting"]},{"Key":"just sorting","Fragments":["the"]},{"Key":"sorting the","Fragments":["strings"]},{"Key":"strings (here,","Fragments":["word"]},{"Key":"(here, word","Fragments":["and"]},{"Key":"each string","Fragments":["in"]},{"Key":"string in","Fragments":["words)","`strings`."]},{"Key":"in words)","Fragments":["to"]},{"Key":"words) to","Fragments":["making"]},{"Key":"to making","Fragments":["some"]},{"Key":"making some","Fragments":["sort"]},{"Key":"some sort","Fragments":["of","of","the"]},{"Key":"of Map,","Fragments":["but"]},{"Key":"you pulled","Fragments":["it"]},{"Key":"pulled it","Fragments":["off"]},{"Key":"it off","Fragments":["fairly"]},{"Key":"off fairly","Fragments":["nicely"]},{"Key":"fairly nicely","Fragments":["here."]},{"Key":"Your deDupedWords","Fragments":["list"]},{"Key":"deDupedWords list","Fragments":["is"]},{"Key":"is nice,","Fragments":["but"]},{"Key":"nice, but","Fragments":["deduping"]},{"Key":"but deduping","Fragments":["wasn't"]},{"Key":"deduping wasn't","Fragments":["in"]},{"Key":"wasn't in","Fragments":["the"]},{"Key":"the spec","Fragments":["and"]},{"Key":"spec and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["curious"]},{"Key":"I'm curious","Fragments":["why"]},{"Key":"curious why","Fragments":["you","your"]},{"Key":"used `e._2.head`","Fragments":["instead"]},{"Key":"`e._2.head` instead","Fragments":["of"]},{"Key":"also recomend","Fragments":["refactoring"]},{"Key":"recomend refactoring","Fragments":["your"]},{"Key":"your filter","Fragments":["test","test","into"]},{"Key":"a nicely","Fragments":["named","named","named","named","named"]},{"Key":"nicely named","Fragments":["function.","function","function","function","function"]},{"Key":"recommend a","Fragments":["better"]},{"Key":"better name","Fragments":["for"]},{"Key":"your `getkey`","Fragments":["function."]},{"Key":"`getkey` function.","Fragments":["It"]},{"Key":"function. It","Fragments":["gets","will"]},{"Key":"It gets","Fragments":["a"]},{"Key":"a map,","Fragments":["not","but"]},{"Key":"map, not","Fragments":["a"]},{"Key":"a key.","Fragments":[":)"]},{"Key":"key. :)","Fragments":["But"]},{"Key":":) But","Fragments":["if"]},{"Key":"if you're","Fragments":["going"]},{"Key":"make maps,","Fragments":["look"]},{"Key":"maps, look","Fragments":["into"]},{"Key":"into using","Fragments":["`groupby`"]},{"Key":"using `groupby`","Fragments":["and"]},{"Key":"`groupby` and","Fragments":["perhaps"]},{"Key":"and perhaps","Fragments":["`breakout`"]},{"Key":"perhaps `breakout`","Fragments":["to"]},{"Key":"`breakout` to","Fragments":["make"]},{"Key":"your life","Fragments":["easier."]},{"Key":"Also, I","Fragments":["used"]},{"Key":"used sorted","Fragments":["strings,","strings"]},{"Key":"sorted strings,","Fragments":["rather"]},{"Key":"strings, rather","Fragments":["than"]},{"Key":"than Maps,","Fragments":["but"]},{"Key":"Maps, but","Fragments":["that's"]},{"Key":"that's personal","Fragments":["preference."]},{"Key":"suggest breaking","Fragments":["out","that"]},{"Key":"breaking out","Fragments":["your"]},{"Key":"out your","Fragments":["filter"]},{"Key":"named function","Fragments":["for","for","call.","and"]},{"Key":"for clarity's","Fragments":["sake."]},{"Key":"your intentions","Fragments":["would","clear."]},{"Key":"intentions would","Fragments":["be"]},{"Key":"more clearly","Fragments":["shown"]},{"Key":"clearly shown","Fragments":["if"]},{"Key":"shown if","Fragments":["you"]},{"Key":"filter into","Fragments":["a"]},{"Key":"I'd just","Fragments":["suggest"]},{"Key":"just suggest","Fragments":["refactoring"]},{"Key":"suggest refactoring","Fragments":["the"]},{"Key":"refactoring the","Fragments":["filter"]},{"Key":"filter block","Fragments":["into"]},{"Key":"block into","Fragments":["a","a"]},{"Key":"a well-named","Fragments":["function."]},{"Key":"well-named function.","Fragments":["It"]},{"Key":"It will","Fragments":["make"]},{"Key":" Interesting.","Fragments":["I","The"]},{"Key":"Interesting. I","Fragments":["used"]},{"Key":"sorted strings","Fragments":["instead"]},{"Key":"strings instead","Fragments":["of"]},{"Key":"map, but","Fragments":["I've"]},{"Key":"seen a","Fragments":["lot","lot"]},{"Key":"of maps","Fragments":["used"]},{"Key":"maps used","Fragments":["for"]},{"Key":"used for","Fragments":["this.","cases"]},{"Key":"for this.","Fragments":["I'd"]},{"Key":"this. I'd","Fragments":["recommend"]},{"Key":"recommend adding","Fragments":["making"]},{"Key":"adding making","Fragments":["`!sameWord`"]},{"Key":"making `!sameWord`","Fragments":["part"]},{"Key":"`!sameWord` part","Fragments":["of"]},{"Key":"your `isAnagram`","Fragments":["function"]},{"Key":"`isAnagram` function","Fragments":["and"]},{"Key":"then using","Fragments":["`filter`"]},{"Key":"using `filter`","Fragments":["instead"]},{"Key":"`filter` instead","Fragments":["of"]},{"Key":"of `for`","Fragments":["with"]},{"Key":"`for` with","Fragments":["a"]},{"Key":"and `yield`.","Fragments":["Still"]},{"Key":"`yield`. Still","Fragments":["nice,"]},{"Key":"Still nice,","Fragments":["though."]},{"Key":" filter(_.toLowerCase.sorted","Fragments":["=="]},{"Key":"filter(_.toLowerCase.sorted ==","Fragments":["sorted)."]},{"Key":" filter(_.toLowerCase","Fragments":["!="]},{"Key":"filter(_.toLowerCase !=","Fragments":["word.toLowerCase)"]},{"Key":" filter(x","Fragments":["=\u003e"]},{"Key":"filter(x =\u003e","Fragments":["x.toLowerCase.sorted"]},{"Key":"=\u003e x.toLowerCase.sorted","Fragments":["=="]},{"Key":"x.toLowerCase.sorted ==","Fragments":["sorted"]},{"Key":" \u0026\u0026","Fragments":["x.toLowerCase","w"]},{"Key":"\u0026\u0026 x.toLowerCase","Fragments":["!="]},{"Key":"x.toLowerCase !=","Fragments":["word.toLowerCase)"]},{"Key":"not have","Fragments":["to","to","assign"]},{"Key":"through 2","Fragments":["lists."]},{"Key":"2 lists.","Fragments":["Of"]},{"Key":"lists. Of","Fragments":["course,"]},{"Key":"Of course,","Fragments":["then","then"]},{"Key":"course, then","Fragments":["I'd","I'd"]},{"Key":"then I'd","Fragments":["recommend","ask"]},{"Key":"recommend breaking","Fragments":["the"]},{"Key":"breaking the","Fragments":["filter"]},{"Key":"test out","Fragments":["as"]},{"Key":"out as","Fragments":["a"]},{"Key":"nice name","Fragments":["for"]},{"Key":"for clarity","Fragments":["and","and"]},{"Key":"clarity and","Fragments":["readabililty.","readability."]},{"Key":"and readabililty.","Fragments":["If"]},{"Key":"readabililty. If","Fragments":["you"]},{"Key":"that, you'd","Fragments":["want"]},{"Key":"you'd want","Fragments":["to"]},{"Key":"to break","Fragments":["`val","out","out"]},{"Key":"break `val","Fragments":["sorted`"]},{"Key":"`val sorted`","Fragments":["into"]},{"Key":"sorted` into","Fragments":["a"]},{"Key":"private class","Fragments":["member,"]},{"Key":"class member,","Fragments":["though."]},{"Key":"Interesting. The","Fragments":["best"]},{"Key":"The best","Fragments":["implementation"]},{"Key":"best implementation","Fragments":["I've"]},{"Key":"implementation I've","Fragments":["seen"]},{"Key":"seen today","Fragments":["and"]},{"Key":"today and","Fragments":["(not"]},{"Key":"and (not","Fragments":["coincidentally)"]},{"Key":"(not coincidentally)","Fragments":["very"]},{"Key":"coincidentally) very","Fragments":["close"]},{"Key":"very close","Fragments":["to"]},{"Key":"close to","Fragments":["mine."]},{"Key":"to mine.","Fragments":["I"]},{"Key":"two `val`s","Fragments":["and"]},{"Key":"`val`s and","Fragments":["the"]},{"Key":"function into","Fragments":["the"]},{"Key":"the class,","Fragments":["but"]},{"Key":"class, but","Fragments":["I"]},{"Key":"you handled","Fragments":["this"]},{"Key":"handled this","Fragments":["better."]},{"Key":"this better.","Fragments":["I"]},{"Key":"I always","Fragments":["forget"]},{"Key":"always forget","Fragments":["you"]},{"Key":"forget you","Fragments":["can"]},{"Key":"can put","Fragments":["helpers"]},{"Key":"put helpers","Fragments":["inside"]},{"Key":"helpers inside","Fragments":["functions."]},{"Key":" Are","Fragments":["you"]},{"Key":"Are you","Fragments":["originally"]},{"Key":"you originally","Fragments":["a"]},{"Key":"originally a","Fragments":["Lisp"]},{"Key":"a Lisp","Fragments":["guy?"]},{"Key":"Lisp guy?","Fragments":["The"]},{"Key":"guy? The","Fragments":["use"]},{"Key":"`foldLeft` seems","Fragments":["a"]},{"Key":"seems a","Fragments":["bit"]},{"Key":"bit odd","Fragments":["here"]},{"Key":"odd here","Fragments":["to"]},{"Key":"here to","Fragments":["me."]},{"Key":"me. You're","Fragments":["just"]},{"Key":"You're just","Fragments":["filtering"]},{"Key":"just filtering","Fragments":["your"]},{"Key":"filtering your","Fragments":["list"]},{"Key":"list on","Fragments":["another"]},{"Key":"on another","Fragments":["condition,"]},{"Key":"another condition,","Fragments":["so"]},{"Key":"condition, so","Fragments":["why"]},{"Key":"so why","Fragments":["not"]},{"Key":"not do","Fragments":["that"]},{"Key":"do that","Fragments":["in"]},{"Key":"same block","Fragments":["as"]},{"Key":"block as","Fragments":["your"]},{"Key":"first test,","Fragments":["making"]},{"Key":" candidates.filter(_.toLowerCase.sorted","Fragments":["=="]},{"Key":"candidates.filter(_.toLowerCase.sorted ==","Fragments":["given.toLowerCase.sorted)"]},{"Key":" .foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e","Fragments":["if"]},{"Key":".foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e if","Fragments":["(b"]},{"Key":"if (b","Fragments":["exists"]},{"Key":"(b exists","Fragments":["(_"]},{"Key":"exists (_","Fragments":["equalsIgnoreCase"]},{"Key":"(_ equalsIgnoreCase","Fragments":["a))"]},{"Key":"equalsIgnoreCase a))","Fragments":["b"]},{"Key":"a)) b","Fragments":["else"]},{"Key":"b else","Fragments":["a+:b)"]},{"Key":" look","Fragments":["more"]},{"Key":" candidates.filter(w","Fragments":["=\u003e"]},{"Key":" w.toLowerCase.sorted","Fragments":["=="]},{"Key":"w.toLowerCase.sorted ==","Fragments":["given.toLowerCase.sorted"]},{"Key":"\u0026\u0026 w","Fragments":["equalsIgnoreCase"]},{"Key":"w equalsIgnoreCase","Fragments":["given)"]},{"Key":" Of","Fragments":["course,"]},{"Key":"I'd ask","Fragments":["you"]},{"Key":"ask you","Fragments":["to"]},{"Key":"test block","Fragments":["into"]},{"Key":"You really","Fragments":["shouldn't"]},{"Key":"really shouldn't","Fragments":["need"]},{"Key":"shouldn't need","Fragments":["to"]},{"Key":"run 3","Fragments":["filters"]},{"Key":"3 filters","Fragments":["against"]},{"Key":"filters against","Fragments":["your"]},{"Key":"against your","Fragments":["list."]},{"Key":"your list.","Fragments":["Chaining"]},{"Key":"list. Chaining","Fragments":["filters"]},{"Key":"Chaining filters","Fragments":["is"]},{"Key":"filters is","Fragments":["unnecessary"]},{"Key":"is unnecessary","Fragments":["here."]},{"Key":"unnecessary here.","Fragments":["You"]},{"Key":"here. You","Fragments":["should"]},{"Key":"one filter","Fragments":["and"]},{"Key":"single test","Fragments":["that"]},{"Key":"test that","Fragments":["does"]},{"Key":"the screening.","Fragments":["I'd"]},{"Key":"screening. I'd","Fragments":["suggest"]},{"Key":"breaking that","Fragments":["out"]},{"Key":"using `letter","Fragments":["=\u003e"]},{"Key":"`letter =\u003e","Fragments":["letter`,"]},{"Key":"=\u003e letter`,","Fragments":["you"]},{"Key":"letter`, you","Fragments":["can"]},{"Key":"used Maps","Fragments":["and"]},{"Key":"Maps and","Fragments":["I"]},{"Key":"have seen","Fragments":["a"]},{"Key":"of that,","Fragments":["but"]},{"Key":"that, but","Fragments":["sorted"]},{"Key":"but sorted","Fragments":["Strings"]},{"Key":"sorted Strings","Fragments":["are"]},{"Key":"Strings are","Fragments":["easier"]},{"Key":"are easier","Fragments":["and"]},{"Key":"easier and","Fragments":["more"]},{"Key":"the point","Fragments":["here."]},{"Key":"You used","Fragments":["a"]},{"Key":"used a","Fragments":["comprehension,"]},{"Key":"a comprehension,","Fragments":["but"]},{"Key":"comprehension, but","Fragments":["I"]},{"Key":"feel a","Fragments":["`filter`"]},{"Key":"a `filter`","Fragments":["was"]},{"Key":"`filter` was","Fragments":["more"]},{"Key":"order for","Fragments":["your"]},{"Key":"your `matches`","Fragments":["function."]},{"Key":"Nice, but","Fragments":["there's"]},{"Key":"but there's","Fragments":["I'd"]},{"Key":"there's I'd","Fragments":["recommend"]},{"Key":"recommend changing","Fragments":["the"]},{"Key":"the signature","Fragments":["on"]},{"Key":"signature on","Fragments":["`isAnagram(word1:"]},{"Key":"on `isAnagram(word1:","Fragments":["String,"]},{"Key":"`isAnagram(word1: String,","Fragments":["word2:"]},{"Key":"String, word2:","Fragments":["String):"]},{"Key":"word2: String):","Fragments":["Boolean`"]},{"Key":"String): Boolean`","Fragments":["to","because"]},{"Key":"Boolean` to","Fragments":["`isAnagram(word:"]},{"Key":"to `isAnagram(word:","Fragments":["String):"]},{"Key":"`isAnagram(word: String):","Fragments":["Boolean`"]},{"Key":"Boolean` because","Fragments":["you"]},{"Key":"because you","Fragments":["only"]},{"Key":"only ever","Fragments":["call"]},{"Key":"ever call","Fragments":["it"]},{"Key":"call it","Fragments":["with","once,"]},{"Key":"with `myWord`","Fragments":["as"]},{"Key":"`myWord` as","Fragments":["the"]},{"Key":"first parameter","Fragments":["and"]},{"Key":"parameter and","Fragments":["that"]},{"Key":"class value.","Fragments":["Then"]},{"Key":"value. Then","Fragments":["change"]},{"Key":"Then change","Fragments":["the"]},{"Key":"function slightly","Fragments":["to"]},{"Key":"slightly to","Fragments":["match."]},{"Key":"to match.","Fragments":["Also,"]},{"Key":"match. Also,","Fragments":["no"]},{"Key":"Also, no","Fragments":["need"]},{"Key":"call `word.toList.sorted`;","Fragments":["instead,"]},{"Key":"`word.toList.sorted`; instead,","Fragments":["just"]},{"Key":"instead, just","Fragments":["call"]},{"Key":"Your sort","Fragments":["method"]},{"Key":"sort method","Fragments":["is"]},{"Key":"is overkill.","Fragments":["Just"]},{"Key":"overkill. Just","Fragments":["use"]},{"Key":"Just use","Fragments":["the"]},{"Key":"the `.sorted`","Fragments":["String"]},{"Key":"`.sorted` String","Fragments":["method."]},{"Key":"String method.","Fragments":["Then"]},{"Key":"method. Then","Fragments":["I'd"]},{"Key":"Then I'd","Fragments":["recommend"]},{"Key":"val anagram","Fragments":["=","="]},{"Key":"anagram =","Fragments":["inAnagram","inAnagram.toLowerCase"]},{"Key":" ,","Fragments":["which"]},{"Key":", which","Fragments":["gives"]},{"Key":"which gives","Fragments":["the"]},{"Key":"the benefit","Fragments":["of"]},{"Key":"benefit of","Fragments":["not"]},{"Key":"not having","Fragments":["to","the"]},{"Key":"use `anagram.toLowerCase`","Fragments":["twice"]},{"Key":"`anagram.toLowerCase` twice","Fragments":["and"]},{"Key":"twice and","Fragments":["also"]},{"Key":"and also","Fragments":["of","that"]},{"Key":"also of","Fragments":["not"]},{"Key":"not calling","Fragments":["it"]},{"Key":"you test","Fragments":["in"]},{"Key":"recommend moving","Fragments":["your"]},{"Key":"moving your","Fragments":["`if`"]},{"Key":"your `if`","Fragments":["test"]},{"Key":"`if` test","Fragments":["to"]},{"Key":"also that","Fragments":["rather"]},{"Key":"that rather","Fragments":["than"]},{"Key":"than create","Fragments":["a"]},{"Key":"temporary list","Fragments":["and"]},{"Key":"and using","Fragments":["`foreach`,"]},{"Key":"using `foreach`,","Fragments":["that"]},{"Key":"`foreach`, that","Fragments":["you"]},{"Key":"you familiarize","Fragments":["yourself"]},{"Key":"familiarize yourself","Fragments":["with"]},{"Key":"yourself with","Fragments":["the"]},{"Key":"sequence method","Fragments":["`filter`"]},{"Key":"method `filter`","Fragments":["which"]},{"Key":"`filter` which","Fragments":["will"]},{"Key":"will add","Fragments":["to"]},{"Key":"to readabilty","Fragments":["and"]},{"Key":"readabilty and","Fragments":["clarity"]},{"Key":"and clarity","Fragments":["here."]},{"Key":"the nits.","Fragments":["I'm"]},{"Key":"nits. I'm","Fragments":["still"]},{"Key":"still pretty","Fragments":["new"]},{"Key":"so there","Fragments":["are"]},{"Key":"are some","Fragments":["methods/syntax"]},{"Key":"some methods/syntax","Fragments":["I'm"]},{"Key":"methods/syntax I'm","Fragments":["not"]},{"Key":"not aware","Fragments":["of."]},{"Key":"aware of.","Fragments":["I've"]},{"Key":"of. I've","Fragments":["taken"]},{"Key":"I've taken","Fragments":["another"]},{"Key":"taken another","Fragments":["shot"]},{"Key":"another shot","Fragments":["at"]},{"Key":"shot at","Fragments":["this"]},{"Key":"this based","Fragments":["on"]},{"Key":"One tiny","Fragments":["nitpick,","nitpick,"]},{"Key":"tiny nitpick,","Fragments":["why","the"]},{"Key":"nitpick, why","Fragments":["use"]},{"Key":"why use","Fragments":["braces?"]},{"Key":"use braces?","Fragments":["None"]},{"Key":"braces? None","Fragments":["of"]},{"Key":"None of","Fragments":["the"]},{"Key":"methods needs","Fragments":["them,"]},{"Key":"needs them,","Fragments":["and"]},{"Key":"the `isQuestion`","Fragments":["and"]},{"Key":"`isQuestion` and","Fragments":["`isSilent`"]},{"Key":"and `isSilent`","Fragments":["methods"]},{"Key":"`isSilent` methods","Fragments":["could"]},{"Key":"methods could","Fragments":["easily"]},{"Key":"could easily","Fragments":["be"]},{"Key":"written the","Fragments":["`turnRight`"]},{"Key":"the `turnRight`","Fragments":["and"]},{"Key":"`turnRight` and","Fragments":["`turnLeft`"]},{"Key":"and `turnLeft`","Fragments":["methods"]},{"Key":"`turnLeft` methods","Fragments":["using"]},{"Key":"methods using","Fragments":["some"]},{"Key":"using some","Fragments":["integer"]},{"Key":"some integer","Fragments":["processing"]},{"Key":"integer processing","Fragments":["code"]},{"Key":"processing code","Fragments":["to"]},{"Key":"to calculate","Fragments":["the"]},{"Key":"calculate the","Fragments":["next"]},{"Key":"next and","Fragments":["previous"]},{"Key":"and previous","Fragments":["bearing,"]},{"Key":"previous bearing,","Fragments":["but"]},{"Key":"bearing, but","Fragments":["I"]},{"Key":"it explicit","Fragments":["using"]},{"Key":"explicit using","Fragments":["the"]},{"Key":"match statements.","Fragments":["This"]},{"Key":"main advantage","Fragments":["that"]},{"Key":"advantage that","Fragments":["is"]},{"Key":"readable in","Fragments":["my"]},{"Key":"guard clauses","Fragments":["into"]},{"Key":"clauses into","Fragments":["separate"]},{"Key":"separate methods?","Fragments":["This"]},{"Key":"methods? This","Fragments":["would"]},{"Key":"would cause","Fragments":["the"]},{"Key":"cause the","Fragments":["`hey`"]},{"Key":"`hey` method","Fragments":["to"]},{"Key":"more *higher-level*,","Fragments":["focusing"]},{"Key":"*higher-level*, focusing","Fragments":["more"]},{"Key":"focusing more","Fragments":["on"]},{"Key":"more on","Fragments":["the","the"]},{"Key":"the *what*","Fragments":["instead"]},{"Key":"*what* instead","Fragments":["of"]},{"Key":"Using `synchronized`","Fragments":["is"]},{"Key":"`synchronized` is","Fragments":["an"]},{"Key":"an excellent","Fragments":["way"]},{"Key":"excellent way","Fragments":["to"]},{"Key":"are doing","Fragments":["thread-safe","a"]},{"Key":"doing thread-safe","Fragments":["processing."]},{"Key":"library. Using","Fragments":["that"]},{"Key":"can implement","Fragments":["this"]},{"Key":"implement this","Fragments":["exercise"]},{"Key":"exercise without","Fragments":["needing"]},{"Key":"without needing","Fragments":["difficult"]},{"Key":"needing difficult","Fragments":["to"]},{"Key":"read regular","Fragments":["expressions."]},{"Key":"Using StringOps","Fragments":["in"]},{"Key":"library you","Fragments":["can"]},{"Key":"can treat","Fragments":["`String`"]},{"Key":"treat `String`","Fragments":["like"]},{"Key":"`String` like","Fragments":["a"]},{"Key":"of characters.","Fragments":["That"]},{"Key":"characters. That","Fragments":["provides"]},{"Key":"That provides","Fragments":["useful"]},{"Key":"provides useful","Fragments":["methods"]},{"Key":"like `zip`","Fragments":["which"]},{"Key":"`zip` which","Fragments":["could"]},{"Key":"Also look","Fragments":["for"]},{"Key":"look for","Fragments":["ways"]},{"Key":"for ways","Fragments":["to"]},{"Key":"use higher-order","Fragments":["functions"]},{"Key":"higher-order functions","Fragments":["(e.g."]},{"Key":"functions (e.g.","Fragments":["passing"]},{"Key":"(e.g. passing","Fragments":["functions"]},{"Key":"passing functions","Fragments":["to"]},{"Key":"to functions)","Fragments":["for"]},{"Key":"functions) for","Fragments":["a"]},{"Key":"a cleaner,","Fragments":["more"]},{"Key":"cleaner, more","Fragments":["FP"]},{"Key":"more FP","Fragments":["style"]},{"Key":"FP style","Fragments":["way"]},{"Key":"style way","Fragments":["of"]},{"Key":"of counting","Fragments":["the","the"]},{"Key":"counting the","Fragments":["number","nucleic"]},{"Key":" Formatting","Fragments":["the"]},{"Key":"Formatting the","Fragments":["code"]},{"Key":"did makes","Fragments":["for"]},{"Key":"makes for","Fragments":["very"]},{"Key":"for very","Fragments":["easy"]},{"Key":"easy reading,","Fragments":["which"]},{"Key":"reading, which","Fragments":["also"]},{"Key":"which also","Fragments":["benefits"]},{"Key":"also benefits","Fragments":["from"]},{"Key":"benefits from","Fragments":["having"]},{"Key":"from having","Fragments":["small,"]},{"Key":"having small,","Fragments":["simple"]},{"Key":"small, simple","Fragments":["methods"]},{"Key":"simple methods","Fragments":["for"]},{"Key":"various type","Fragments":["of"]},{"Key":"of message","Fragments":["checks."]},{"Key":"of streams","Fragments":["to"]},{"Key":"streams to","Fragments":["enumerate"]},{"Key":"to enumerate","Fragments":["the"]},{"Key":"enumerate the","Fragments":["primes."]},{"Key":"think regular","Fragments":["expressions"]},{"Key":"is necessarily","Fragments":["the"]},{"Key":"necessarily the","Fragments":["wrong"]},{"Key":"the wrong","Fragments":["way"]},{"Key":"wrong way","Fragments":["to"]},{"Key":"to perform","Fragments":["this","a","the"]},{"Key":"perform this","Fragments":["exercise."]},{"Key":"this exercise.","Fragments":["As"]},{"Key":"exercise. As","Fragments":["you've"]},{"Key":"As you've","Fragments":["demonstrated,"]},{"Key":"you've demonstrated,","Fragments":["with"]},{"Key":"demonstrated, with","Fragments":["the"]},{"Key":"right set","Fragments":["of"]},{"Key":"of regexes,","Fragments":["you"]},{"Key":"regexes, you","Fragments":["can"]},{"Key":"can have","Fragments":["a"]},{"Key":"very concise","Fragments":["solution"]},{"Key":"that directly","Fragments":["expresses"]},{"Key":"directly expresses","Fragments":["the"]},{"Key":"expresses the","Fragments":["concepts"]},{"Key":"the concepts","Fragments":["of"]},{"Key":"concepts of","Fragments":["in"]},{"Key":"the business","Fragments":["domain."]},{"Key":" However","Fragments":["I"]},{"Key":"However I","Fragments":["feel"]},{"Key":"like these","Fragments":["regexes"]},{"Key":"these regexes","Fragments":["are"]},{"Key":"too specific","Fragments":["the"]},{"Key":"specific the","Fragments":["the"]},{"Key":"the the","Fragments":["inputs"]},{"Key":"inputs in","Fragments":["the"]},{"Key":"test set.","Fragments":["For"]},{"Key":"set. For","Fragments":["example,"]},{"Key":"example, it's","Fragments":["not"]},{"Key":"not clear","Fragments":["to"]},{"Key":"clear to","Fragments":["me"]},{"Key":"that 5","Fragments":["spaces"]},{"Key":"5 spaces","Fragments":["warrants"]},{"Key":"spaces warrants","Fragments":["a"]},{"Key":"warrants a","Fragments":["\"Fine."]},{"Key":"a \"Fine.","Fragments":["be"]},{"Key":"\"Fine. be","Fragments":["that"]},{"Key":"that way!\",","Fragments":["but"]},{"Key":"way!\", but","Fragments":["4"]},{"Key":"but 4","Fragments":["spaces"]},{"Key":"4 spaces","Fragments":["do"]},{"Key":"spaces do","Fragments":["not."]},{"Key":"There also","Fragments":["seems"]},{"Key":"also seems","Fragments":["to"]},{"Key":"a large","Fragments":["overlap"]},{"Key":"large overlap","Fragments":["between"]},{"Key":"overlap between","Fragments":["`^[A-Z"]},{"Key":"between `^[A-Z","Fragments":[",]+[?]+$`"]},{"Key":"`^[A-Z ,]+[?]+$`","Fragments":["and"]},{"Key":",]+[?]+$` and","Fragments":["`^[A-Z0-9?"]},{"Key":"and `^[A-Z0-9?","Fragments":[",.!]+$`."]},{"Key":"`^[A-Z0-9? ,.!]+$`.","Fragments":["I"]},{"Key":",.!]+$`. I","Fragments":["hesitate"]},{"Key":"I hesitate","Fragments":["to"]},{"Key":"hesitate to","Fragments":["\"give"]},{"Key":"to \"give","Fragments":["away\""]},{"Key":"\"give away\"","Fragments":["the"]},{"Key":"away\" the","Fragments":["answer,"]},{"Key":"the answer,","Fragments":["so"]},{"Key":"answer, so","Fragments":["for"]},{"Key":"so for","Fragments":["now"]},{"Key":"now I'll","Fragments":["just"]},{"Key":"I'll just","Fragments":["recommend"]},{"Key":"just recommend","Fragments":["you"]},{"Key":"recommend you","Fragments":["re-read"]},{"Key":"you re-read","Fragments":["each"]},{"Key":"re-read each","Fragments":["line"]},{"Key":"each line","Fragments":["in"]},{"Key":"line in","Fragments":["the"]},{"Key":"the requirement","Fragments":["(e.g."]},{"Key":"requirement (e.g.","Fragments":["\"Bob"]},{"Key":"(e.g. \"Bob","Fragments":["answers"]},{"Key":"\"Bob answers","Fragments":["'Sure.'"]},{"Key":"answers 'Sure.'","Fragments":["if"]},{"Key":"'Sure.' if","Fragments":["you"]},{"Key":"you ask","Fragments":["him"]},{"Key":"ask him","Fragments":["a"]},{"Key":"him a","Fragments":["question.\"),"]},{"Key":"a question.\"),","Fragments":["and"]},{"Key":"question.\"), and","Fragments":["then"]},{"Key":"then try","Fragments":["to"]},{"Key":"an interpretation","Fragments":["of"]},{"Key":"interpretation of","Fragments":["what"]},{"Key":"it means","Fragments":["for"]},{"Key":"means for","Fragments":["something"]},{"Key":"for something","Fragments":["to"]},{"Key":"question, and","Fragments":["verifying"]},{"Key":"and verifying","Fragments":["that"]},{"Key":"verifying that","Fragments":["your"]},{"Key":"your interpretation","Fragments":["is"]},{"Key":"interpretation is","Fragments":["both"]},{"Key":"is both","Fragments":["general"]},{"Key":"both general","Fragments":["and"]},{"Key":"general and","Fragments":["yet"]},{"Key":"and yet","Fragments":["adheres"]},{"Key":"yet adheres","Fragments":["to"]},{"Key":"adheres to","Fragments":["the"]},{"Key":"nitpick, the","Fragments":["parameter"]},{"Key":"parameter name","Fragments":["`in`"]},{"Key":"name `in`","Fragments":["does"]},{"Key":"`in` does","Fragments":["not"]},{"Key":"really say","Fragments":["anything."]},{"Key":"say anything.","Fragments":["Perhaps"]},{"Key":"anything. Perhaps","Fragments":["it"]},{"Key":"Perhaps it","Fragments":["could"]},{"Key":"be renamed","Fragments":["to"]},{"Key":"renamed to","Fragments":["something"]},{"Key":"great, vastly","Fragments":["improved."]},{"Key":"vastly improved.","Fragments":["Is"]},{"Key":"improved. Is","Fragments":["there"]},{"Key":"reason you're","Fragments":["defining"]},{"Key":"you're defining","Fragments":["`words`"]},{"Key":"defining `words`","Fragments":["inside"]},{"Key":"`words` inside","Fragments":["the"]},{"Key":"the `wordCount`","Fragments":["block"]},{"Key":"`wordCount` block","Fragments":["rather"]},{"Key":"block rather","Fragments":["than"]},{"Key":"having it","Fragments":["as"]},{"Key":"separate `val`","Fragments":["or"]},{"Key":"`val` or","Fragments":["`def`"]},{"Key":"or `def`","Fragments":["in"]},{"Key":"`def` in","Fragments":["the"]},{"Key":"the `Phrase`","Fragments":["class?"]},{"Key":" Reworked","Fragments":["to"]},{"Key":"Reworked to","Fragments":["use"]},{"Key":"use math","Fragments":["instead"]},{"Key":"math instead","Fragments":["of"]},{"Key":"just put","Fragments":["it"]},{"Key":"it there.","Fragments":[":)"]},{"Key":"there. :)","Fragments":["Could"]},{"Key":":) Could","Fragments":["you"]},{"Key":"you explain,","Fragments":["which"]},{"Key":"explain, which","Fragments":["is"]},{"Key":"is preferable","Fragments":["and"]},{"Key":"preferable and","Fragments":["why?"]},{"Key":"are mutating","Fragments":["the","the"]},{"Key":"mutating the","Fragments":["passed","passed","passed"]},{"Key":"the passed","Fragments":["in","in","in","in","in"]},{"Key":"in GregorianCalendar","Fragments":["instance."]},{"Key":"GregorianCalendar instance.","Fragments":["Instead"]},{"Key":"instance. Instead","Fragments":["you"]},{"Key":"Instead you","Fragments":["should","should"]},{"Key":"should make","Fragments":["a"]},{"Key":"a clone","Fragments":["and"]},{"Key":"clone and","Fragments":["mutate/return"]},{"Key":"and mutate/return","Fragments":["the"]},{"Key":"mutate/return the","Fragments":["cloned"]},{"Key":"the cloned","Fragments":["object."]},{"Key":"in cal","Fragments":["instance."]},{"Key":"cal instance.","Fragments":["This"]},{"Key":"instance. This","Fragments":["is"]},{"Key":"a bad","Fragments":["idea."]},{"Key":"bad idea.","Fragments":["Instead"]},{"Key":"idea. Instead","Fragments":["you"]},{"Key":"should clone","Fragments":["the"]},{"Key":"clone the","Fragments":["passed","passed"]},{"Key":"in cal,","Fragments":["and"]},{"Key":"cal, and","Fragments":["mutate"]},{"Key":"and mutate","Fragments":["the"]},{"Key":"new instance","Fragments":["to"]},{"Key":"instance to","Fragments":["return."]},{"Key":"very Java","Fragments":["way"]},{"Key":"Java way","Fragments":["of"]},{"Key":"doing things.","Fragments":["Must"]},{"Key":"things. Must","Fragments":["find"]},{"Key":"Must find","Fragments":["a"]},{"Key":"better Scala","Fragments":["way"]},{"Key":"Scala way","Fragments":["to"]},{"Key":"sure whether","Fragments":["```def"]},{"Key":"whether ```def","Fragments":["first"]},{"Key":"```def first","Fragments":["=","(dayOfWeek:Int)"]},{"Key":"first =","Fragments":["dayInWeekStartingWith(1,"]},{"Key":"= dayInWeekStartingWith(1,","Fragments":["_:Int)```","dayOfWeek)```is"]},{"Key":"dayInWeekStartingWith(1, _:Int)```","Fragments":["or"]},{"Key":"_:Int)``` or","Fragments":["```def"]},{"Key":"or ```def","Fragments":["first"]},{"Key":"first (dayOfWeek:Int)","Fragments":["="]},{"Key":"(dayOfWeek:Int) =","Fragments":["dayInWeekStartingWith(1,"]},{"Key":"dayInWeekStartingWith(1, dayOfWeek)```is","Fragments":["more"]},{"Key":"dayOfWeek)```is more","Fragments":["readable"]},{"Key":"The ```primeFactors```","Fragments":["function"]},{"Key":"```primeFactors``` function","Fragments":["can"]},{"Key":"a tail","Fragments":["recursive"]},{"Key":" Also..","Fragments":["If"]},{"Key":"Also.. If","Fragments":["you"]},{"Key":"the PrimeFactors","Fragments":["class","object."]},{"Key":"PrimeFactors class","Fragments":["into"]},{"Key":"case class,","Fragments":["then"]},{"Key":"class, then","Fragments":["you"]},{"Key":"then you","Fragments":["will","can"]},{"Key":"you will","Fragments":["not"]},{"Key":"not need","Fragments":["the"]},{"Key":" Hi,","Fragments":["this"]},{"Key":"Hi, this","Fragments":["solution"]},{"Key":"solution doesn't","Fragments":["handle"]},{"Key":"doesn't handle","Fragments":["case"]},{"Key":"handle case","Fragments":["or"]},{"Key":"case or","Fragments":["apostrophes,"]},{"Key":"or apostrophes,","Fragments":["noticed"]},{"Key":"apostrophes, noticed","Fragments":["it"]},{"Key":"it fails","Fragments":["two"]},{"Key":"fails two","Fragments":["of"]},{"Key":"two of","Fragments":["the"]},{"Key":"the unit","Fragments":["tests.","tests","tests"]},{"Key":"done some","Fragments":["toy"]},{"Key":"some toy","Fragments":["Scala"]},{"Key":"toy Scala","Fragments":["coding,"]},{"Key":"Scala coding,","Fragments":["but"]},{"Key":"coding, but","Fragments":["I've"]},{"Key":"I've never","Fragments":["gotten"]},{"Key":"never gotten","Fragments":["around"]},{"Key":"gotten around","Fragments":["to"]},{"Key":"around to","Fragments":["trying"]},{"Key":"to trying","Fragments":["to"]},{"Key":"use `Either`","Fragments":["for"]},{"Key":"`Either` for","Fragments":["validation/error"]},{"Key":"for validation/error","Fragments":["reporting"]},{"Key":"validation/error reporting","Fragments":["so"]},{"Key":"reporting so","Fragments":["I"]},{"Key":"try it","Fragments":["on","out."]},{"Key":"it on","Fragments":["this"]},{"Key":"example. I'm","Fragments":["not"]},{"Key":"did it","Fragments":["justice,","produce"]},{"Key":"it justice,","Fragments":["but"]},{"Key":"justice, but","Fragments":["I"]},{"Key":" Added","Fragments":["@frederique"]},{"Key":"Added @frederique","Fragments":["suggestions"]},{"Key":"@frederique suggestions","Fragments":["(thanks!)"]},{"Key":"Your code","Fragments":["is"]},{"Key":"is mutating","Fragments":["the"]},{"Key":"in Calendar","Fragments":["instance."]},{"Key":"Calendar instance.","Fragments":["A"]},{"Key":"instance. A","Fragments":["better"]},{"Key":"A better","Fragments":["solution"]},{"Key":"better solution","Fragments":["would"]},{"Key":"to clone","Fragments":["the"]},{"Key":"in instance,","Fragments":["and"]},{"Key":"instance, and","Fragments":["return"]},{"Key":"and return","Fragments":["a"]},{"Key":"a cloned/mutated","Fragments":["instance."]},{"Key":"One of","Fragments":["the"]},{"Key":"the trade-offs","Fragments":["I"]},{"Key":"trade-offs I","Fragments":["considered"]},{"Key":"I considered","Fragments":["was","but"]},{"Key":"considered was","Fragments":["to"]},{"Key":"the getLetters","Fragments":["calls"]},{"Key":"getLetters calls","Fragments":["in"]},{"Key":"calls in","Fragments":["the"]},{"Key":"the isYell","Fragments":["function"]},{"Key":"isYell function","Fragments":["in"]},{"Key":"is executed","Fragments":["only"]},{"Key":"executed only","Fragments":["once."]},{"Key":"once. However,","Fragments":["for"]},{"Key":"However, for","Fragments":["readability"]},{"Key":"readability purposes","Fragments":["I"]},{"Key":"purposes I","Fragments":["preferred"]},{"Key":"I preferred","Fragments":["both"]},{"Key":"preferred both","Fragments":["function"]},{"Key":"both function","Fragments":["calls."]},{"Key":"guess that's","Fragments":["a"]},{"Key":"taste :)","Fragments":["nice"]},{"Key":":) nice","Fragments":["job"]},{"Key":"`match` keyword","Fragments":["is"]},{"Key":"used incombination","Fragments":["with"]},{"Key":"incombination with","Fragments":["guard-clauses."]},{"Key":"with guard-clauses.","Fragments":["This"]},{"Key":"guard-clauses. This","Fragments":["makes"]},{"Key":"This makes","Fragments":["the"]},{"Key":"very readable,","Fragments":["especially"]},{"Key":"readable, especially","Fragments":["with"]},{"Key":"the well-chosen","Fragments":["function"]},{"Key":"well-chosen function","Fragments":["names."]},{"Key":"function names.","Fragments":["The"]},{"Key":"names. The","Fragments":["functions"]},{"Key":"functions themselves","Fragments":["are"]},{"Key":"themselves are","Fragments":["short"]},{"Key":"are short","Fragments":["and"]},{"Key":"I added","Fragments":["a"]},{"Key":"added a","Fragments":["helper"]},{"Key":"helper method","Fragments":["isAnagram"]},{"Key":"method isAnagram","Fragments":["and"]},{"Key":"isAnagram and","Fragments":["made"]},{"Key":"made your","Fragments":["\"sorted\""]},{"Key":"your \"sorted\"","Fragments":["val"]},{"Key":"\"sorted\" val","Fragments":["a"]},{"Key":"val a","Fragments":["class"]},{"Key":"class val,","Fragments":["but"]},{"Key":"val, but","Fragments":["otherwise,"]},{"Key":"but otherwise,","Fragments":["my"]},{"Key":"otherwise, my","Fragments":["solution"]},{"Key":"was similar.","Fragments":["Well"]},{"Key":"similar. Well","Fragments":["done!"]},{"Key":"I'd use","Fragments":["some"]},{"Key":"more indents","Fragments":["for"]},{"Key":"indents for","Fragments":["readability"]},{"Key":"then some","Fragments":["stuff"]},{"Key":"some stuff","Fragments":["might"]},{"Key":"stuff might","Fragments":["be"]},{"Key":"be broken","Fragments":["out"]},{"Key":"broken out","Fragments":["into"]},{"Key":"into helper","Fragments":["functions"]},{"Key":"make things","Fragments":["a"]},{"Key":"will work","Fragments":["pretty"]},{"Key":"work pretty","Fragments":["well."]},{"Key":"pretty well.","Fragments":["I"]},{"Key":"well. I","Fragments":["read"]},{"Key":"I read","Fragments":["about"]},{"Key":"read about","Fragments":["Pattern"]},{"Key":"about Pattern","Fragments":["Matching"]},{"Key":"Pattern Matching","Fragments":["and","used"]},{"Key":"Matching and","Fragments":["maybe"]},{"Key":"maybe there","Fragments":["is"]},{"Key":"more readable,","Fragments":["but"]},{"Key":"readable, but","Fragments":["I've"]},{"Key":"I've only","Fragments":["seen"]},{"Key":"only seen","Fragments":["Pattern"]},{"Key":"seen Pattern","Fragments":["Matching"]},{"Key":"Matching used","Fragments":["for"]},{"Key":"for cases","Fragments":["with"]},{"Key":"My previous","Fragments":["version"]},{"Key":"version defined","Fragments":["`total`"]},{"Key":"defined `total`","Fragments":["as"]},{"Key":"`total` as","Fragments":["a"]},{"Key":"a function.","Fragments":["However,"]},{"Key":"function. However,","Fragments":["that"]},{"Key":"However, that","Fragments":["meant"]},{"Key":"that meant","Fragments":["that"]},{"Key":"meant that","Fragments":["if"]},{"Key":"total was","Fragments":["requested"]},{"Key":"was requested","Fragments":["more"]},{"Key":"requested more","Fragments":["than"]},{"Key":"than once,","Fragments":["it"]},{"Key":"once, it","Fragments":["would"]},{"Key":"be re-calculated","Fragments":["each"]},{"Key":"re-calculated each","Fragments":["time"]},{"Key":"time it","Fragments":["was"]},{"Key":"was requested.","Fragments":["This"]},{"Key":"requested. This","Fragments":["version"]},{"Key":"version only","Fragments":["calculates"]},{"Key":"only calculates","Fragments":["it"]},{"Key":"calculates it","Fragments":["when"]},{"Key":"it when","Fragments":["needed,","I"]},{"Key":"when needed,","Fragments":["and"]},{"Key":"needed, and","Fragments":["only"]},{"Key":"once. This","Fragments":["is"]},{"Key":"done through","Fragments":["the"]},{"Key":"love how","Fragments":["the"]},{"Key":"sorted map","Fragments":["is"]},{"Key":"is calculated","Fragments":["from","as"]},{"Key":"calculated from","Fragments":["the"]},{"Key":"the existing","Fragments":["map."]},{"Key":"existing map.","Fragments":["Very"]},{"Key":"map. Very","Fragments":["elegant."]},{"Key":"good. Though,","Fragments":["my"]},{"Key":"Though, my","Fragments":["personal"]},{"Key":"my personal","Fragments":["preference"]},{"Key":"personal preference","Fragments":["would"]},{"Key":"preference would","Fragments":["be"]},{"Key":"to collapse","Fragments":["the"]},{"Key":"collapse the","Fragments":["isLeap"]},{"Key":"the isLeap","Fragments":["to"]},{"Key":"isLeap to","Fragments":["boolean"]},{"Key":"to boolean","Fragments":["statement.","and"]},{"Key":"def isLeap:","Fragments":["Boolean"]},{"Key":"isLeap: Boolean","Fragments":["="]},{"Key":"= by(100)","Fragments":["\u0026\u0026"]},{"Key":"by(100) \u0026\u0026","Fragments":["by(400)"]},{"Key":"\u0026\u0026 by(400)","Fragments":["...."]},{"Key":"by(400) ....","Fragments":["etc"]},{"Key":"Consider using","Fragments":["a","``foldLeft``"]},{"Key":"a the","Fragments":["``zip``"]},{"Key":"the ``zip``","Fragments":["function"]},{"Key":"``zip`` function","Fragments":["with"]},{"Key":"two input","Fragments":["strings."]},{"Key":" `case","Fragments":["11"]},{"Key":"`case 11","Fragments":["if"]},{"Key":"11 if","Fragments":["(digits.startsWith(\"1\"))"]},{"Key":"if (digits.startsWith(\"1\"))","Fragments":["=\u003e"]},{"Key":"(digits.startsWith(\"1\")) =\u003e","Fragments":["digits.tail`"]},{"Key":"and let","Fragments":["it"]},{"Key":"let it","Fragments":["fall"]},{"Key":"it fall","Fragments":["through"]},{"Key":"fall through","Fragments":["to"]},{"Key":"through to","Fragments":["the"]},{"Key":"the default","Fragments":["case","map"]},{"Key":"the invalid","Fragments":["number."]},{"Key":" @kara","Fragments":["Agreed."]},{"Key":"@kara Agreed.","Fragments":["Thanks"]},{"Key":"Agreed. Thanks","Fragments":["for"]},{"Key":"the `sorted`","Fragments":["property"]},{"Key":"`sorted` property","Fragments":["to"]},{"Key":"property to","Fragments":["do"]},{"Key":"the comparison,","Fragments":["very"]},{"Key":"comparison, very","Fragments":["elegant."]},{"Key":"This doesn't","Fragments":["work","compile","work"]},{"Key":"for repeated","Fragments":["strings,","strings,"]},{"Key":"repeated strings,","Fragments":["check","check"]},{"Key":"strings, check","Fragments":["your","your"]},{"Key":"check your","Fragments":["tests,","tests,"]},{"Key":"your tests,","Fragments":["you","you"]},{"Key":"tests, you","Fragments":["have","have"]},{"Key":"the `pending`","Fragments":["markers.","markers."]},{"Key":"A small","Fragments":["improvement"]},{"Key":"small improvement","Fragments":["might"]},{"Key":"improvement might","Fragments":["be"]},{"Key":"to rename","Fragments":["`twoDecimals`"]},{"Key":"rename `twoDecimals`","Fragments":["to"]},{"Key":"`twoDecimals` to","Fragments":["`roundToTwoDecimals`"]},{"Key":"to `roundToTwoDecimals`","Fragments":["as"]},{"Key":"`roundToTwoDecimals` as","Fragments":["it"]},{"Key":"it better","Fragments":["expresses"]},{"Key":"better expresses","Fragments":["what"]},{"Key":"expresses what","Fragments":["the"]},{"Key":"recommend that","Fragments":["you"]},{"Key":"you replace","Fragments":["the"]},{"Key":"magic constant","Fragments":["`31557600`"]},{"Key":"constant `31557600`","Fragments":["with"]},{"Key":"`31557600` with","Fragments":["a"]},{"Key":"a named","Fragments":["constant"]},{"Key":"named constant","Fragments":["to"]},{"Key":" @mariane","Fragments":["Thanks!"]},{"Key":"@mariane Thanks!","Fragments":["That"]},{"Key":"Thanks! That","Fragments":["was"]},{"Key":"That was","Fragments":["very"]},{"Key":"was very","Fragments":["helpful."]},{"Key":"very helpful.","Fragments":["I"]},{"Key":"helpful. I","Fragments":["did"]},{"Key":"did another","Fragments":["revision."]},{"Key":"The contract","Fragments":["defined"]},{"Key":"contract defined","Fragments":["by"]},{"Key":"defined by","Fragments":["the"]},{"Key":"tests does","Fragments":["not"]},{"Key":"not allow","Fragments":["to"]},{"Key":"allow to","Fragments":["keep"]},{"Key":"names sorted","Fragments":["on"]},{"Key":"sorted on","Fragments":["entry"]},{"Key":"on entry","Fragments":["which"]},{"Key":"entry which","Fragments":["is"]},{"Key":"a pity.","Fragments":["So"]},{"Key":"pity. So","Fragments":["in"]},{"Key":"in `sorted`","Fragments":["the"]},{"Key":"`sorted` the","Fragments":["sort"]},{"Key":"the sort","Fragments":["is"]},{"Key":"sort is","Fragments":["done"]},{"Key":"done on","Fragments":["demand."]},{"Key":" Hmm,","Fragments":["not","I"]},{"Key":"Hmm, not","Fragments":["sure"]},{"Key":"what happened","Fragments":["here"]},{"Key":"happened here","Fragments":["but"]},{"Key":"that 'map'","Fragments":["should"]},{"Key":"'map' should","Fragments":["'grouped'."]},{"Key":"should 'grouped'.","Fragments":["I"]},{"Key":"'grouped'. I","Fragments":["must"]},{"Key":"have accidentally","Fragments":["munged"]},{"Key":"accidentally munged","Fragments":["the"]},{"Key":"munged the","Fragments":["code"]},{"Key":"code after","Fragments":["I"]},{"Key":"I ran","Fragments":["the"]},{"Key":"been overkill","Fragments":["using"]},{"Key":"overkill using","Fragments":["a"]},{"Key":"a trait","Fragments":["and"]},{"Key":"trait and","Fragments":["tuple,","the"]},{"Key":"and tuple,","Fragments":["but"]},{"Key":"tuple, but","Fragments":["I"]},{"Key":"it out.","Fragments":["I"]},{"Key":"out. I","Fragments":["believe"]},{"Key":"believe I","Fragments":["could"]},{"Key":"used `match`","Fragments":["instead"]},{"Key":"`match` instead","Fragments":["of"]},{"Key":"of an","Fragments":["`if","`implicit"]},{"Key":"`if else","Fragments":["if`."]},{"Key":"else if`.","Fragments":["I"]},{"Key":"if`. I","Fragments":["use"]},{"Key":"use triple","Fragments":["quotes"]},{"Key":"triple quotes","Fragments":["to"]},{"Key":"quotes to","Fragments":["solve"]},{"Key":"the double","Fragments":["escaping"]},{"Key":"double escaping","Fragments":["issue"]},{"Key":"escaping issue","Fragments":["line"]},{"Key":"issue line","Fragments":["7"]},{"Key":"line 7","Fragments":["encountered."]},{"Key":"7 encountered.","Fragments":["Update:"]},{"Key":"encountered. Update:","Fragments":["looking"]},{"Key":"Update: looking","Fragments":["at"]},{"Key":"other implementations,","Fragments":["mine"]},{"Key":"implementations, mine","Fragments":["looks"]},{"Key":"mine looks","Fragments":["like"]},{"Key":"like dog","Fragments":["s***."]},{"Key":"can't see","Fragments":["how"]},{"Key":"you dealt","Fragments":["with"]},{"Key":"dealt with","Fragments":["repeated"]},{"Key":"with repeated","Fragments":["matches,"]},{"Key":"repeated matches,","Fragments":["do"]},{"Key":"matches, do","Fragments":["all"]},{"Key":"all tests","Fragments":["pass?"]},{"Key":"doesn't compile","Fragments":["in"]},{"Key":"compile in","Fragments":["my"]},{"Key":" \u003cconsole\u003e:13:","Fragments":["error:"]},{"Key":"\u003cconsole\u003e:13: error:","Fragments":["not"]},{"Key":"error: not","Fragments":["found:"]},{"Key":" map","Fragments":["get(wordLower.sorted)"]},{"Key":"map get(wordLower.sorted)","Fragments":["getOrElse(Seq.empty[String])"]},{"Key":"should I","Fragments":["use"]},{"Key":"use -","Fragments":["if-conditions"]},{"Key":"- if-conditions","Fragments":["or"]},{"Key":"if-conditions or","Fragments":["pattern-matching,"]},{"Key":"or pattern-matching,","Fragments":["substring"]},{"Key":"pattern-matching, substring","Fragments":["or"]},{"Key":"Would word.sortLetters","Fragments":["get"]},{"Key":"word.sortLetters get","Fragments":["reevaluated"]},{"Key":"get reevaluated","Fragments":["each"]},{"Key":"reevaluated each","Fragments":["time","time"]},{"Key":"time the","Fragments":["_.sortLetters.equalsIgnoreCase","function"]},{"Key":"the _.sortLetters.equalsIgnoreCase","Fragments":["is"]},{"Key":"_.sortLetters.equalsIgnoreCase is","Fragments":["evaluated?"]},{"Key":"is evaluated?","Fragments":["Possibly"]},{"Key":"evaluated? Possibly","Fragments":["word.sortLetters"]},{"Key":"Possibly word.sortLetters","Fragments":["should"]},{"Key":"word.sortLetters should","Fragments":["be"]},{"Key":"be moved","Fragments":["so"]},{"Key":"moved so","Fragments":["that"]},{"Key":"only evaluated","Fragments":["once"]},{"Key":"once at","Fragments":["instance"]},{"Key":"at instance","Fragments":["creation."]},{"Key":"use ```equalsIgnoreCase```","Fragments":["string"]},{"Key":"```equalsIgnoreCase``` string","Fragments":["method"]},{"Key":"method instead","Fragments":["of"]},{"Key":"actually my","Fragments":["second"]},{"Key":"my second","Fragments":["go"]},{"Key":"second go","Fragments":["at"]},{"Key":"at it.","Fragments":["I"]},{"Key":"I originally","Fragments":["had"]},{"Key":"originally had","Fragments":["some"]},{"Key":"had some","Fragments":["more","guidance"]},{"Key":"imperative logic","Fragments":["in"]},{"Key":"to admit","Fragments":["that"]},{"Key":"admit that","Fragments":["I"]},{"Key":"some guidance","Fragments":["from:"]},{"Key":"guidance from:","Fragments":["https://github.com/exercism/xscala/tree/master/meetup"]},{"Key":"if instead","Fragments":["of"]},{"Key":"using ``Map[Char,","Fragments":["Int]``"]},{"Key":"``Map[Char, Int]``","Fragments":["you"]},{"Key":"Int]`` you","Fragments":["relied"]},{"Key":"you relied","Fragments":["more"]},{"Key":"relied more","Fragments":["on"]},{"Key":"the word","Fragments":["and"]},{"Key":"the possible","Fragments":["anagram"]},{"Key":"possible anagram","Fragments":["are"]},{"Key":"anagram are","Fragments":["equal"]},{"Key":"equal when","Fragments":["they"]},{"Key":"when they","Fragments":["are"]},{"Key":"are sorted,","Fragments":["so"]},{"Key":"sorted, so","Fragments":["``word.sorted"]},{"Key":"so ``word.sorted","Fragments":["=="]},{"Key":"``word.sorted ==","Fragments":["anagram.sorted``."]},{"Key":"== anagram.sorted``.","Fragments":["I"]},{"Key":"anagram.sorted``. I","Fragments":["think"]},{"Key":"would simplify","Fragments":["the"]},{"Key":"code quite","Fragments":["a"]},{"Key":"quite a","Fragments":["bit.","complicated"]},{"Key":"using ``foldLeft``","Fragments":["with"]},{"Key":"``foldLeft`` with","Fragments":["``Map[String,"]},{"Key":"with ``Map[String,","Fragments":["Int]()``"]},{"Key":"``Map[String, Int]()``","Fragments":["as"]},{"Key":"Int]()`` as","Fragments":["the"]},{"Key":"the accumulator","Fragments":["on"]},{"Key":"accumulator on","Fragments":["the"]},{"Key":"of parsed","Fragments":["words."]},{"Key":"version uses","Fragments":["a"]},{"Key":"uses a","Fragments":["mutable","mutable"]},{"Key":"mutable cache","Fragments":["to"]},{"Key":"cache to","Fragments":["cache"]},{"Key":"cache all","Fragments":["the"]},{"Key":"previous computed","Fragments":["values."]},{"Key":"computed values.","Fragments":["And"]},{"Key":"values. And","Fragments":["uses"]},{"Key":"And uses","Fragments":["BigInt"]},{"Key":"uses BigInt","Fragments":["vs"]},{"Key":"BigInt vs","Fragments":["Double"]},{"Key":"vs Double","Fragments":["in"]},{"Key":"Double in","Fragments":["the"]},{"Key":"the square","Fragments":["calculation."]},{"Key":"square calculation.","Fragments":["Summing"]},{"Key":"calculation. Summing","Fragments":["doubles,"]},{"Key":"Summing doubles,","Fragments":["then"]},{"Key":"doubles, then","Fragments":["trying"]},{"Key":"then trying","Fragments":["to"]},{"Key":"convert to","Fragments":["a"]},{"Key":"a BigInt","Fragments":["didn't"]},{"Key":"BigInt didn't","Fragments":["work"]},{"Key":"work very","Fragments":["well."]},{"Key":"very well.","Fragments":["There"]},{"Key":"well. There","Fragments":["was"]},{"Key":"There was","Fragments":["some"]},{"Key":"some precision","Fragments":["loss"]},{"Key":"precision loss","Fragments":["using"]},{"Key":"loss using","Fragments":["`\"%.0f\".format(_)`."]},{"Key":"much machinery","Fragments":["is"]},{"Key":"machinery is","Fragments":["actually"]},{"Key":"actually needed","Fragments":["here."]},{"Key":"needed here.","Fragments":["I"]},{"Key":"read without","Fragments":["the"]},{"Key":"the trait","Fragments":["and"]},{"Key":"the nested","Fragments":["object.","ifs."]},{"Key":"This question","Fragments":["really"]},{"Key":"question really","Fragments":["boils"]},{"Key":"really boils","Fragments":["down"]},{"Key":"whether the","Fragments":["sorted"]},{"Key":"sorted lowercased","Fragments":["input"]},{"Key":"lowercased input","Fragments":["is"]},{"Key":"is found","Fragments":["in"]},{"Key":"found in","Fragments":["the"]},{"Key":"of sorted","Fragments":["and","words."]},{"Key":"and lowercased","Fragments":["words."]},{"Key":"lowercased words.","Fragments":["The"]},{"Key":"words. The","Fragments":["lowercasing"]},{"Key":"The lowercasing","Fragments":["can"]},{"Key":"lowercasing can","Fragments":["be"]},{"Key":"once on","Fragments":["the","the"]},{"Key":"input word","Fragments":["and"]},{"Key":"and once","Fragments":["on"]},{"Key":"the each","Fragments":["of"]},{"Key":"the words","Fragments":["in"]},{"Key":"words in","Fragments":["the"]},{"Key":"input list.","Fragments":["Essentially,"]},{"Key":"list. Essentially,","Fragments":["I"]},{"Key":"Essentially, I","Fragments":["believe"]},{"Key":"believe this","Fragments":["code"]},{"Key":"same implicit","Fragments":["class"]},{"Key":"a `copyAnd`method","Fragments":["that"]},{"Key":"`copyAnd`method that","Fragments":["clones"]},{"Key":"that clones","Fragments":["the"]},{"Key":"clones the","Fragments":["calendar,"]},{"Key":"the calendar,","Fragments":["and"]},{"Key":"calendar, and","Fragments":["applies"]},{"Key":"and applies","Fragments":["a"]},{"Key":"applies a","Fragments":["modification"]},{"Key":"a modification","Fragments":["and"]},{"Key":"modification and","Fragments":["returns"]},{"Key":"and returns","Fragments":["the","the","the"]},{"Key":"returns the","Fragments":["new","number","number"]},{"Key":"this without","Fragments":["a"]},{"Key":"a nesting","Fragments":["``if/else"]},{"Key":"nesting ``if/else","Fragments":["if/else``"]},{"Key":"``if/else if/else``","Fragments":["if"]},{"Key":"if/else`` if","Fragments":["in"]},{"Key":"the ``else``","Fragments":["block"]},{"Key":"``else`` block","Fragments":["by"]},{"Key":"block by","Fragments":["using"]},{"Key":" Alternatively,","Fragments":["you"]},{"Key":"Alternatively, you","Fragments":["can"]},{"Key":"same result","Fragments":["by"]},{"Key":"result by","Fragments":["declaring"]},{"Key":"by declaring","Fragments":["``letters``"]},{"Key":"declaring ``letters``","Fragments":["as"]},{"Key":"``letters`` as","Fragments":["lazy."]},{"Key":"as lazy.","Fragments":["This"]},{"Key":"lazy. This","Fragments":["way"]},{"Key":"This way","Fragments":["the"]},{"Key":"the filtering","Fragments":["will"]},{"Key":"filtering will","Fragments":["not"]},{"Key":"be applied","Fragments":["until"]},{"Key":"applied until","Fragments":["the"]},{"Key":"until the","Fragments":["value"]},{"Key":"with ``groupBy``","Fragments":["you"]},{"Key":"``groupBy`` you","Fragments":["could"]},{"Key":"could check","Fragments":["for"]},{"Key":"for equality","Fragments":["of"]},{"Key":"equality of","Fragments":["sorted"]},{"Key":"of writing","Fragments":["this","out"]},{"Key":"this that","Fragments":["doesn't"]},{"Key":"doesn't iterate","Fragments":["through"]},{"Key":"the days","Fragments":["of"]},{"Key":"days of","Fragments":["the"]},{"Key":" Other","Fragments":["than"]},{"Key":"that, the","Fragments":["code"]},{"Key":"code looks","Fragments":["good."]},{"Key":" @unique","Fragments":[","]},{"Key":"@unique ,","Fragments":["how"]},{"Key":", how","Fragments":["would"]},{"Key":"how would","Fragments":["you"]},{"Key":"you improve/simplify","Fragments":["it?"]},{"Key":" That's","Fragments":["a"]},{"Key":"great point,","Fragments":["thanks"]},{"Key":"point, thanks","Fragments":["so"]},{"Key":"thanks so","Fragments":["much"]},{"Key":"I moved","Fragments":["it"]},{"Key":"moved it","Fragments":["into"]},{"Key":"`val` defined","Fragments":["at"]},{"Key":"defined at","Fragments":["instantiation."]},{"Key":"When browsing","Fragments":["other"]},{"Key":"browsing other","Fragments":["solutions"]},{"Key":"exercise I","Fragments":["came"]},{"Key":"came upon","Fragments":["one"]},{"Key":"upon one","Fragments":["which"]},{"Key":"one which","Fragments":["used"]},{"Key":"which used","Fragments":["`zip`"]},{"Key":"used `zip`","Fragments":["and"]},{"Key":"`count` much","Fragments":["like"]},{"Key":"much like","Fragments":["this.","my"]},{"Key":"this. What","Fragments":["I"]},{"Key":"it delegates","Fragments":["the"]},{"Key":"delegates the","Fragments":["work"]},{"Key":"the work","Fragments":["of"]},{"Key":"work of","Fragments":["counting"]},{"Key":"the nucleic","Fragments":["acids"]},{"Key":"nucleic acids","Fragments":["to"]},{"Key":"acids to","Fragments":["the"]},{"Key":"Scala library","Fragments":["rather"]},{"Key":"library rather","Fragments":["than"]},{"Key":"than counting","Fragments":["them"]},{"Key":"counting them","Fragments":["oneself"]},{"Key":"them oneself","Fragments":["and"]},{"Key":"oneself and","Fragments":["iterating"]},{"Key":"and iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["them"]},{"Key":"over them","Fragments":["with"]},{"Key":"loop, much","Fragments":["like"]},{"Key":"like my","Fragments":["previous"]},{"Key":"my previous","Fragments":["iteration."]},{"Key":"I've added","Fragments":["documentation"]},{"Key":"added documentation","Fragments":["for"]},{"Key":"your `Accumulate`","Fragments":["class"]},{"Key":"`Accumulate` class","Fragments":["stores"]},{"Key":"class stores","Fragments":["no"]},{"Key":"stores no","Fragments":["state"]},{"Key":"no state","Fragments":["--"]},{"Key":"state --","Fragments":["it's"]},{"Key":"-- it's","Fragments":["basically"]},{"Key":"it's basically","Fragments":["just"]},{"Key":"basically just","Fragments":["a"]},{"Key":"a module","Fragments":["exposing"]},{"Key":"module exposing","Fragments":["the"]},{"Key":"exposing the","Fragments":["`accumulate`"]},{"Key":"the `accumulate`","Fragments":["function,"]},{"Key":"`accumulate` function,","Fragments":["you"]},{"Key":"it an","Fragments":["`object`"]},{"Key":"an `object`","Fragments":["instead"]},{"Key":"`object` instead","Fragments":["of"]},{"Key":"Nice job","Fragments":["with"]},{"Key":"job with","Fragments":["the"]},{"Key":"you curry","Fragments":["your"]},{"Key":"curry your","Fragments":["arguments,"]},{"Key":"your arguments,","Fragments":["you"]},{"Key":"arguments, you","Fragments":["can"]},{"Key":"get some","Fragments":["type-inference"]},{"Key":"some type-inference","Fragments":["benefits:"]},{"Key":" scala\u003e","Fragments":["accumulate((_+1),","accumulate(List(1,2,3))(_+1)"]},{"Key":"scala\u003e accumulate((_+1),","Fragments":["List(1,2,3))"]},{"Key":" \u003cconsole\u003e:9:","Fragments":["error:"]},{"Key":"\u003cconsole\u003e:9: error:","Fragments":["missing"]},{"Key":"error: missing","Fragments":["parameter"]},{"Key":"missing parameter","Fragments":["type"]},{"Key":"parameter type","Fragments":["for"]},{"Key":"type for","Fragments":["expanded"]},{"Key":"for expanded","Fragments":["function"]},{"Key":"expanded function","Fragments":["((x$1)"]},{"Key":"function ((x$1)","Fragments":["=\u003e"]},{"Key":"((x$1) =\u003e","Fragments":["x$1.$plus(1))"]},{"Key":" accumulate((_+1),","Fragments":["List(1,2,3))"]},{"Key":"def accumulate[A,B](xs:","Fragments":["List[A])(f:A"]},{"Key":"accumulate[A,B](xs: List[A])(f:A","Fragments":["=\u003e"]},{"Key":"List[A])(f:A =\u003e","Fragments":["B):"]},{"Key":"=\u003e B):","Fragments":["List[B]"]},{"Key":"B): List[B]","Fragments":["="]},{"Key":"List[B] =","Fragments":["{"]},{"Key":" res2:","Fragments":["List[Int]"]},{"Key":"res2: List[Int]","Fragments":["="]},{"Key":"List[Int] =","Fragments":["List(2,"]},{"Key":"= List(2,","Fragments":["3,"]},{"Key":"List(2, 3,","Fragments":["4)"]},{"Key":"Yes. You","Fragments":["are"]},{"Key":"are right.","Fragments":["Thanks!"]},{"Key":" there","Fragments":["is"]},{"Key":"called ``containsSlice``","Fragments":["that"]},{"Key":"``containsSlice`` that","Fragments":["is"]},{"Key":"is defined","Fragments":["on"]},{"Key":"defined on","Fragments":["List."]},{"Key":"List. I","Fragments":["think"]},{"Key":"cleaner to","Fragments":["use"]},{"Key":"Looks like","Fragments":["a"]},{"Key":"of `class","Fragments":["Bob`"]},{"Key":"`class Bob`","Fragments":["it"]},{"Key":"Bob` it","Fragments":["could"]},{"Key":"be `object","Fragments":["Bob`"]},{"Key":"`object Bob`","Fragments":["because"]},{"Key":"Bob` because","Fragments":["these"]},{"Key":"because these","Fragments":["are"]},{"Key":"these are","Fragments":["like","very"]},{"Key":"are like","Fragments":["static"]},{"Key":"like static","Fragments":["functions"]},{"Key":"static functions","Fragments":["that"]},{"Key":"that don't","Fragments":["require"]},{"Key":"don't require","Fragments":["a"]},{"Key":"require a","Fragments":["`new","`return`"]},{"Key":"a `new","Fragments":["Bob`."]},{"Key":"`new Bob`.","Fragments":["Also"]},{"Key":"Bob`. Also","Fragments":["if"]},{"Key":"Also if","Fragments":["the"]},{"Key":"the `isX`","Fragments":["functions"]},{"Key":"`isX` functions","Fragments":["are"]},{"Key":"needed by","Fragments":["`hey`,"]},{"Key":"by `hey`,","Fragments":["you"]},{"Key":"`hey`, you","Fragments":["could"]},{"Key":"could actually","Fragments":["nest"]},{"Key":"actually nest","Fragments":["them"]},{"Key":"nest them","Fragments":["inside"]},{"Key":"them inside","Fragments":["`hey`."]},{"Key":"your scoreWord","Fragments":["function."]},{"Key":"scoreWord function.","Fragments":["Though"]},{"Key":"function. Though","Fragments":["I"]},{"Key":"Though I","Fragments":["wonder"]},{"Key":"efficient to","Fragments":["perform"]},{"Key":"perform a","Fragments":["flat","map"]},{"Key":"a flat","Fragments":["map"]},{"Key":"flat map","Fragments":["where"]},{"Key":"map where","Fragments":["the"]},{"Key":"the sum","Fragments":["is","of"]},{"Key":"sum is","Fragments":["calculated"]},{"Key":"calculated as","Fragments":["the"]},{"Key":"are grabbed","Fragments":["from"]},{"Key":"grabbed from","Fragments":["the"]},{"Key":"the word.","Fragments":["In"]},{"Key":"word. In","Fragments":["a"]},{"Key":"simple exercise","Fragments":["like"]},{"Key":"exercise like","Fragments":["this,"]},{"Key":"this, it","Fragments":["doesn't"]},{"Key":"doesn't matter.","Fragments":["But,"]},{"Key":"matter. But,","Fragments":["it"]},{"Key":"But, it","Fragments":["is"]},{"Key":"interesting question","Fragments":["in"]},{"Key":"question in","Fragments":["general."]},{"Key":" Significant","Fragments":["number"]},{"Key":"Significant number","Fragments":["of"]},{"Key":"test cases","Fragments":["can","this"]},{"Key":"cases can","Fragments":["be"]},{"Key":"be satisfied","Fragments":["from"]},{"Key":"satisfied from","Fragments":["filtering"]},{"Key":"from filtering","Fragments":["with"]},{"Key":"filtering with","Fragments":["the"]},{"Key":"following function","Fragments":["for"]},{"Key":" (candidateWord","Fragments":["=\u003e"]},{"Key":"(candidateWord =\u003e","Fragments":["inputWord.toLowerCase.sorted"]},{"Key":"=\u003e inputWord.toLowerCase.sorted","Fragments":["=="]},{"Key":"inputWord.toLowerCase.sorted ==","Fragments":["candidateWord.toLowerCase.sorted)"]},{"Key":"can implemented","Fragments":["by"]},{"Key":"implemented by","Fragments":["slightly"]},{"Key":"by slightly","Fragments":["expanding"]},{"Key":"slightly expanding","Fragments":["this"]},{"Key":"expanding this","Fragments":["the"]},{"Key":"this the","Fragments":["filter"]},{"Key":"a pretty","Fragments":["nice"]},{"Key":"pretty nice","Fragments":["solution."]},{"Key":"nice solution.","Fragments":["However,"]},{"Key":"solution. However,","Fragments":["wouldn't"]},{"Key":"However, wouldn't","Fragments":["lower-casing"]},{"Key":"wouldn't lower-casing","Fragments":["and"]},{"Key":"lower-casing and","Fragments":["calling"]},{"Key":"and calling","Fragments":["sorted"]},{"Key":"calling sorted","Fragments":["do"]},{"Key":"sorted do","Fragments":["the"]},{"Key":"thing without","Fragments":["the"]},{"Key":" NOTE:","Fragments":["My"]},{"Key":"NOTE: My","Fragments":["second"]},{"Key":"My second","Fragments":["solution"]},{"Key":"second solution","Fragments":["is"]},{"Key":"actually justa","Fragments":["a"]},{"Key":"justa a","Fragments":["copy"]},{"Key":"a copy","Fragments":["of"]},{"Key":"copy of","Fragments":["@amos"]},{"Key":"of @amos","Fragments":["solution"]},{"Key":"@amos solution","Fragments":["for"]},{"Key":"own reference","Fragments":["as"]},{"Key":"reference as","Fragments":["its"]},{"Key":"as its","Fragments":["a"]},{"Key":"its a","Fragments":["very"]},{"Key":"very neat","Fragments":["little"]},{"Key":"neat little","Fragments":["solution."]},{"Key":" Replace","Fragments":["nucleotideCounts"]},{"Key":"Replace nucleotideCounts","Fragments":["using"]},{"Key":"nucleotideCounts using","Fragments":["groupBy"]},{"Key":"using groupBy","Fragments":["+"]},{"Key":"groupBy +","Fragments":["mapValues."]},{"Key":"+ mapValues.","Fragments":["It"]},{"Key":"mapValues. It","Fragments":["might"]},{"Key":"than call","Fragments":["count"]},{"Key":"count method","Fragments":["several"]},{"Key":"method several","Fragments":["times."]},{"Key":"In ``toLetterMap``,","Fragments":["``toList``"]},{"Key":"``toLetterMap``, ``toList``","Fragments":["is"]},{"Key":"``toList`` is","Fragments":["not"]},{"Key":"not necessary.","Fragments":["To"]},{"Key":"necessary. To","Fragments":["me"]},{"Key":"To me","Fragments":["calling"]},{"Key":"me calling","Fragments":["``groupBy(identity)``"]},{"Key":"calling ``groupBy(identity)``","Fragments":["looks"]},{"Key":"``groupBy(identity)`` looks","Fragments":["a"]},{"Key":"little cleaner","Fragments":["than"]},{"Key":"than ``groupBy(ch","Fragments":["=\u003e"]},{"Key":"``groupBy(ch =\u003e","Fragments":["ch)``."]},{"Key":"=\u003e ch)``.","Fragments":["``charMap.map``"]},{"Key":"ch)``. ``charMap.map``","Fragments":["call"]},{"Key":"``charMap.map`` call","Fragments":["can"]},{"Key":"call can","Fragments":["be"]},{"Key":"In ``addDefaults``","Fragments":["it"]},{"Key":"``addDefaults`` it","Fragments":["might"]},{"Key":"Map with","Fragments":["default","an"]},{"Key":"default values","Fragments":["of"]},{"Key":"values of","Fragments":["0."]},{"Key":"of 0.","Fragments":["Following"]},{"Key":"0. Following","Fragments":["that,"]},{"Key":"Following that,","Fragments":["it"]},{"Key":"that, it","Fragments":["is"]},{"Key":"to union","Fragments":["the"]},{"Key":"union the","Fragments":["default"]},{"Key":"Map from","Fragments":["``toLetterMap``."]},{"Key":"Maybe it","Fragments":["would"]},{"Key":"be even","Fragments":["more"]},{"Key":"more elegant","Fragments":["with"]},{"Key":"elegant with","Fragments":["for-comprehension"]},{"Key":"with for-comprehension","Fragments":["(syntactic"]},{"Key":"for-comprehension (syntactic","Fragments":["sugar"]},{"Key":"(syntactic sugar","Fragments":["for"]},{"Key":"sugar for","Fragments":["flatMap's)."]},{"Key":"By using","Fragments":["```case```"]},{"Key":"using ```case```","Fragments":["you"]},{"Key":"```case``` you","Fragments":["mean"]},{"Key":"mean guard","Fragments":["conditions"]},{"Key":"guard conditions","Fragments":["(e.g."]},{"Key":"conditions (e.g.","Fragments":["```case"]},{"Key":"(e.g. ```case","Fragments":["_"]},{"Key":"```case _","Fragments":["if"]},{"Key":"_ if","Fragments":["...```)?","isSilence(sentence)"]},{"Key":"if ...```)?","Fragments":["And"]},{"Key":"...```)? And","Fragments":["why"]},{"Key":"And why","Fragments":["lazy"]},{"Key":"why lazy","Fragments":["evaluation"]},{"Key":"lazy evaluation","Fragments":["of"]},{"Key":"evaluation of","Fragments":["```letters```"]},{"Key":"of ```letters```","Fragments":["is"]},{"Key":"```letters``` is","Fragments":["an"]},{"Key":"alternative way","Fragments":["to"]},{"Key":"do this?","Fragments":["I"]},{"Key":"this? I","Fragments":["think"]},{"Key":"think these","Fragments":["improvements"]},{"Key":"these improvements","Fragments":["are"]},{"Key":"improvements are","Fragments":["independent."]},{"Key":"Is this","Fragments":["variant"]},{"Key":"this variant","Fragments":["faster"]},{"Key":"variant faster","Fragments":["than"]},{"Key":"faster than","Fragments":["with","the"]},{"Key":"with ```groupby```","Fragments":["or"]},{"Key":"```groupby``` or","Fragments":["just"]},{"Key":"or just","Fragments":["more"]},{"Key":"just more","Fragments":["readable?"]},{"Key":"use combination","Fragments":["of"]},{"Key":"of ```groupBy```","Fragments":["and"]},{"Key":"```groupBy``` and","Fragments":["```mapValues```"]},{"Key":"and ```mapValues```","Fragments":["to"]},{"Key":"```mapValues``` to","Fragments":["make"]},{"Key":"make you","Fragments":["code"]},{"Key":"you code","Fragments":["easier"]},{"Key":" Braces","Fragments":["for"]},{"Key":"Braces for","Fragments":["pure"]},{"Key":"for pure","Fragments":["functions"]},{"Key":"pure functions","Fragments":["(such","in"]},{"Key":"functions (such","Fragments":["as"]},{"Key":"(such as","Fragments":["toLowerCase)"]},{"Key":"as toLowerCase)","Fragments":["should"]},{"Key":"toLowerCase) should","Fragments":["be"]},{"Key":"omitted (http://docs.scala-lang.org/style/control-structures.html#curly-braces).","Fragments":["Also"]},{"Key":"(http://docs.scala-lang.org/style/control-structures.html#curly-braces). Also","Fragments":["lambdas"]},{"Key":"Also lambdas","Fragments":["```x"]},{"Key":"lambdas ```x","Fragments":["=\u003e"]},{"Key":"=\u003e x.foo```","Fragments":["could"]},{"Key":"x.foo``` could","Fragments":["be"]},{"Key":"simplified to","Fragments":["```_.foo```."]},{"Key":"haven't done","Fragments":["any"]},{"Key":"done any","Fragments":["measurements"]},{"Key":"any measurements","Fragments":["to"]},{"Key":"measurements to","Fragments":["be"]},{"Key":"say if","Fragments":["one"]},{"Key":"if one","Fragments":["is","thread"]},{"Key":"is faster","Fragments":["than"]},{"Key":"the other.","Fragments":["I"]},{"Key":"other. I","Fragments":["think"]},{"Key":"the non-Map","Fragments":["version"]},{"Key":"non-Map version","Fragments":["is"]},{"Key":"looks really","Fragments":["nice.","nice!"]},{"Key":"looks clean","Fragments":["and"]},{"Key":"and effective.","Fragments":["However,"]},{"Key":"effective. However,","Fragments":["I"]},{"Key":"However, I","Fragments":["think"]},{"Key":"be robust","Fragments":["enough"]},{"Key":"robust enough","Fragments":["to"]},{"Key":"to handle","Fragments":["very"]},{"Key":"handle very","Fragments":["long"]},{"Key":"very long","Fragments":["lists."]},{"Key":"long lists.","Fragments":["How"]},{"Key":"lists. How","Fragments":["would"]},{"Key":"How would","Fragments":["you"]},{"Key":"you handle","Fragments":["that?"]},{"Key":"uses first","Fragments":["approach."]},{"Key":"I initially","Fragments":["attempted"]},{"Key":"initially attempted","Fragments":["to"]},{"Key":"attempted to","Fragments":["solve"]},{"Key":"and recursion,","Fragments":["but"]},{"Key":"recursion, but","Fragments":["it"]},{"Key":"it did","Fragments":["not"]},{"Key":"not look","Fragments":["pretty."]},{"Key":"look pretty.","Fragments":["Nor"]},{"Key":"pretty. Nor","Fragments":["did"]},{"Key":"Nor did","Fragments":["it"]},{"Key":"it produce","Fragments":["the"]},{"Key":"produce the","Fragments":["correct"]},{"Key":"correct results.","Fragments":["So,"]},{"Key":"results. So,","Fragments":["I"]},{"Key":"So, I","Fragments":["came"]},{"Key":"an `implicit","Fragments":["class`,"]},{"Key":"`implicit class`,","Fragments":["makes"]},{"Key":"class`, makes","Fragments":["the"]},{"Key":"improve your","Fragments":["solution"]},{"Key":"solution by","Fragments":["noting"]},{"Key":"by noting","Fragments":["that"]},{"Key":"noting that","Fragments":["the"]},{"Key":"sum of","Fragments":["the"]},{"Key":"the powers","Fragments":["of"]},{"Key":"powers of","Fragments":["2"]},{"Key":"2 up","Fragments":["to"]},{"Key":"to n","Fragments":["equals"]},{"Key":"n equals","Fragments":["2^(n+1)"]},{"Key":"equals 2^(n+1)","Fragments":["-"]},{"Key":"2^(n+1) -","Fragments":["1."]},{"Key":" Rewrite","Fragments":["it"]},{"Key":"Rewrite it","Fragments":["with"]},{"Key":"with tail-recursive","Fragments":["foldLeft."]},{"Key":"solution could","Fragments":["be","be"]},{"Key":"made way","Fragments":["more"]},{"Key":"way more","Fragments":["efficient"]},{"Key":"efficient by","Fragments":["using"]},{"Key":"the direct","Fragments":["formulaes"]},{"Key":"direct formulaes","Fragments":["for"]},{"Key":"formulaes for","Fragments":["the"]},{"Key":"the sumOfSquares","Fragments":["and"]},{"Key":"sumOfSquares and","Fragments":["squareOfSums"]},{"Key":" Tiny","Fragments":["things"]},{"Key":"Tiny things","Fragments":["one"]},{"Key":"things one","Fragments":["could"]},{"Key":"could fuss","Fragments":["about:"]},{"Key":"* The","Fragments":["test","first","`.map{case","first",".map{case"]},{"Key":"test for","Fragments":["`Shout`"]},{"Key":"for `Shout`","Fragments":["is"]},{"Key":"`Shout` is","Fragments":["perhaps"]},{"Key":"is perhaps","Fragments":["a"]},{"Key":"bit too","Fragments":["clever"]},{"Key":"too clever","Fragments":["(it"]},{"Key":"clever (it","Fragments":["took"]},{"Key":"(it took","Fragments":["me"]},{"Key":"took me","Fragments":["a"]},{"Key":"a moment","Fragments":["to"]},{"Key":"moment to","Fragments":["understand"]},{"Key":"what this","Fragments":["test"]},{"Key":"this test","Fragments":["really"]},{"Key":"test really","Fragments":["checks)"]},{"Key":"* Inconsistent","Fragments":["syntax"]},{"Key":"Inconsistent syntax","Fragments":["for"]},{"Key":"calls (I","Fragments":["think"]},{"Key":"(I think","Fragments":["`statement.endsWith(\"?\")`"]},{"Key":"think `statement.endsWith(\"?\")`","Fragments":["might"]},{"Key":"`statement.endsWith(\"?\")` might","Fragments":["be"]},{"Key":"But these","Fragments":["are"]},{"Key":"very small","Fragments":["compared"]},{"Key":"small compared","Fragments":["to"]},{"Key":"compared to","Fragments":["the","version"]},{"Key":"the overall","Fragments":["very"]},{"Key":"overall very","Fragments":["simple"]},{"Key":"very simple","Fragments":["structure"]},{"Key":"simple structure","Fragments":["and"]},{"Key":"structure and","Fragments":["nice"]},{"Key":"and nice","Fragments":["use"]},{"Key":"of scala","Fragments":["idiom."]},{"Key":"few more","Fragments":["scala-ish"]},{"Key":"more scala-ish","Fragments":["alternatives"]},{"Key":"scala-ish alternatives","Fragments":["that"]},{"Key":"alternatives that","Fragments":["I"]},{"Key":"considered but","Fragments":["discarded:"]},{"Key":"* Using","Fragments":["some","an"]},{"Key":"Using some","Fragments":["sort"]},{"Key":"of class","Fragments":["to"]},{"Key":"to encapsulate","Fragments":["the"]},{"Key":"encapsulate the","Fragments":["notion"]},{"Key":"the notion","Fragments":["that"]},{"Key":"notion that","Fragments":["each"]},{"Key":"each prompt","Fragments":["type"]},{"Key":"prompt type","Fragments":["has"]},{"Key":"has both","Fragments":["a"]},{"Key":"both a","Fragments":["predicate"]},{"Key":"predicate test","Fragments":["(e.g."]},{"Key":"(e.g. `isQuestion`)","Fragments":["and"]},{"Key":"`isQuestion`) and","Fragments":["a"]},{"Key":"response (e.g.","Fragments":["`\"Sure.\"`)"]},{"Key":"(e.g. `\"Sure.\"`)","Fragments":["If"]},{"Key":"`\"Sure.\"`) If","Fragments":["we"]},{"Key":"If we","Fragments":["anticipated"]},{"Key":"we anticipated","Fragments":["lots"]},{"Key":"anticipated lots","Fragments":["and"]},{"Key":"lots and","Fragments":["lots"]},{"Key":"and lots","Fragments":["of"]},{"Key":"prompt types","Fragments":["being","that","--"]},{"Key":"types being","Fragments":["dynamically"]},{"Key":"being dynamically","Fragments":["created,"]},{"Key":"dynamically created,","Fragments":["an"]},{"Key":"created, an","Fragments":["object"]},{"Key":"object class","Fragments":["might"]},{"Key":"class might","Fragments":["be"]},{"Key":"useful here.","Fragments":["But"]},{"Key":"here. But","Fragments":["with"]},{"Key":"But with","Fragments":["only"]},{"Key":"only four","Fragments":["prompt"]},{"Key":"four prompt","Fragments":["types"]},{"Key":"types that","Fragments":["seemed"]},{"Key":"that seemed","Fragments":["a"]},{"Key":"seemed a","Fragments":["bit"]},{"Key":"an enumerable","Fragments":["to"]},{"Key":"enumerable to","Fragments":["describe"]},{"Key":"the prompt","Fragments":["types"]},{"Key":"types --","Fragments":["again,"]},{"Key":"-- again,","Fragments":["seemed"]},{"Key":"again, seemed","Fragments":["like"]},{"Key":"seemed like","Fragments":["unnecessary"]},{"Key":"like unnecessary","Fragments":["abstraction"]},{"Key":"unnecessary abstraction","Fragments":["given"]},{"Key":"abstraction given","Fragments":["the"]},{"Key":"the modest","Fragments":["scale"]},{"Key":"modest scale","Fragments":["of"]},{"Key":"scale of","Fragments":["the","the"]},{"Key":"* Would","Fragments":["the"]},{"Key":"Would the","Fragments":["`match`"]},{"Key":"`hey` be","Fragments":["more"]},{"Key":"more naturally","Fragments":["expressed"]},{"Key":"naturally expressed","Fragments":["as"]},{"Key":"as `if`","Fragments":["/"]},{"Key":"`if` /","Fragments":["`else`?"]},{"Key":"* `isQuestion`","Fragments":["will","will"]},{"Key":"`isQuestion` will","Fragments":["raise","raise"]},{"Key":"will raise","Fragments":["an","an"]},{"Key":"raise an","Fragments":["error","error"]},{"Key":"an error","Fragments":["if","if"]},{"Key":"error if","Fragments":["`s","`input"]},{"Key":"if `s","Fragments":["=="]},{"Key":"`s ==","Fragments":["\"\"`.","s1`"]},{"Key":"== \"\"`.","Fragments":["The"]},{"Key":"\"\"`. The","Fragments":["way"]},{"Key":"The way","Fragments":["the"]},{"Key":"is ordered","Fragments":["this"]},{"Key":"ordered this","Fragments":["isn't"]},{"Key":"this isn't","Fragments":["a"]},{"Key":"a problem,","Fragments":["but"]},{"Key":"problem, but","Fragments":["calling"]},{"Key":"but calling","Fragments":["`.lastOption`"]},{"Key":"calling `.lastOption`","Fragments":["would"]},{"Key":"`.lastOption` would","Fragments":["be"]},{"Key":"* Why","Fragments":["is"]},{"Key":"Why is","Fragments":["`letters`"]},{"Key":"is `letters`","Fragments":["a"]},{"Key":"`letters` a","Fragments":["`lazy"]},{"Key":"a direct","Fragments":["formula"]},{"Key":"direct formula","Fragments":["for"]},{"Key":"formula for","Fragments":["sumOfSquares,"]},{"Key":"for sumOfSquares,","Fragments":["as"]},{"Key":"sumOfSquares, as","Fragments":["you"]},{"Key":"did for","Fragments":["squareOfSums"]},{"Key":"* I","Fragments":["think","suspect","believe"]},{"Key":"* Current","Fragments":["implementation"]},{"Key":"Current implementation","Fragments":["relies"]},{"Key":"implementation relies","Fragments":["on"]},{"Key":"relies on","Fragments":["the"]},{"Key":"the particular","Fragments":["order"]},{"Key":"particular order","Fragments":["of"]},{"Key":"of conditions","Fragments":["execution."]},{"Key":"conditions execution.","Fragments":["In"]},{"Key":"execution. In","Fragments":["this"]},{"Key":"seems reasonable.","Fragments":["In"]},{"Key":"reasonable. In","Fragments":["the"]},{"Key":"the order-independent","Fragments":["version"]},{"Key":"order-independent version","Fragments":["of"]},{"Key":"of ```isQuestion```","Fragments":["method"]},{"Key":"```isQuestion``` method","Fragments":["we"]},{"Key":"method we","Fragments":["should"]},{"Key":"we should","Fragments":["also"]},{"Key":"also check","Fragments":["that"]},{"Key":"not in","Fragments":["uppercase."]},{"Key":"* We","Fragments":["don't"]},{"Key":"We don't","Fragments":["need"]},{"Key":"to filter","Fragments":["the"]},{"Key":"filter the","Fragments":["whole"]},{"Key":"whole string","Fragments":["if"]},{"Key":"string if","Fragments":["it"]},{"Key":"it contains","Fragments":["a"]},{"Key":"contains a","Fragments":["lowercase"]},{"Key":"a useful","Fragments":["method"]},{"Key":"useful method","Fragments":["```pow```"]},{"Key":"method ```pow```","Fragments":["in"]},{"Key":"```pow``` in","Fragments":["```math```"]},{"Key":"in ```math```","Fragments":["package."]},{"Key":"* ```total```","Fragments":["could"]},{"Key":"```total``` could","Fragments":["be"]},{"Key":"be ```val```","Fragments":["(or"]},{"Key":"```val``` (or","Fragments":["even"]},{"Key":"(or even","Fragments":["```lazy"]},{"Key":"even ```lazy","Fragments":["val```)"]},{"Key":"```lazy val```)","Fragments":["since"]},{"Key":"val```) since","Fragments":["it"]},{"Key":"* Body","Fragments":["of"]},{"Key":"Body of","Fragments":["```total```"]},{"Key":"of ```total```","Fragments":["method"]},{"Key":"```total``` method","Fragments":["could"]},{"Key":"simplified (apply","Fragments":["some"]},{"Key":"(apply some","Fragments":["math"]},{"Key":"some math","Fragments":["transformations)."]},{"Key":" scala","Fragments":["has","maps"]},{"Key":"scala has","Fragments":["a"]},{"Key":"a `require`","Fragments":["method"]},{"Key":"`require` method","Fragments":["that"]},{"Key":"that receives","Fragments":["an"]},{"Key":"receives an","Fragments":["expression"]},{"Key":"expression that","Fragments":["evaluates"]},{"Key":"that evaluates","Fragments":["to"]},{"Key":"and throws","Fragments":["an"]},{"Key":"`IllegalArgumentException` if","Fragments":["false."]},{"Key":"if false.","Fragments":["That"]},{"Key":"false. That","Fragments":["might"]},{"Key":"That might","Fragments":["help"]},{"Key":" \u003e","Fragments":["I"]},{"Key":"\u003e I","Fragments":["think"]},{"Key":" Yup,","Fragments":["I"]},{"Key":"Yup, I","Fragments":["agree"]},{"Key":" no","Fragments":["need"]},{"Key":"to triple","Fragments":["quote"]},{"Key":"triple quote","Fragments":["those"]},{"Key":"quote those","Fragments":["strings."]},{"Key":"conditionals can","Fragments":["be"]},{"Key":"scala maps","Fragments":["have"]},{"Key":"maps have","Fragments":["a"]},{"Key":"`withDefaultValue` which","Fragments":["can"]},{"Key":"be set","Fragments":["to"]},{"Key":"set to","Fragments":["0"]},{"Key":"good. One","Fragments":["suggestion"]},{"Key":"One suggestion","Fragments":["is"]},{"Key":"the `fold`","Fragments":["to"]},{"Key":"`fold` to","Fragments":["a"]},{"Key":"a call","Fragments":["to"]},{"Key":" @gisselle","Fragments":["thanks!"]},{"Key":"@gisselle thanks!","Fragments":["That's"]},{"Key":"thanks! That's","Fragments":["awesome"]},{"Key":"This exercise","Fragments":["can"]},{"Key":"exercise can","Fragments":["actually"]},{"Key":"can actually","Fragments":["be"]},{"Key":"actually be","Fragments":["completed"]},{"Key":"be completed","Fragments":["without"]},{"Key":"completed without","Fragments":["using"]},{"Key":"without using","Fragments":["iteration"]},{"Key":"using iteration","Fragments":["in"]},{"Key":"iteration in","Fragments":["less"]},{"Key":"in less","Fragments":["code."]},{"Key":" Think","Fragments":["about","of"]},{"Key":"Think about","Fragments":["using"]},{"Key":"zip function","Fragments":["on"]},{"Key":"the params","Fragments":["to"]},{"Key":"params to","Fragments":["compute."]},{"Key":" Nice.","Fragments":["I"]},{"Key":"Nice. I","Fragments":["learned"]},{"Key":"I learned","Fragments":["a"]},{"Key":"learned a","Fragments":["bit"]},{"Key":"bit from","Fragments":["reviewing"]},{"Key":"from reviewing","Fragments":["this"]},{"Key":"reviewing this","Fragments":["solution."]},{"Key":"Shouldn't operations","Fragments":["against"]},{"Key":"operations against","Fragments":["`_balance`"]},{"Key":"against `_balance`","Fragments":["and"]},{"Key":"`_balance` and","Fragments":["`_open`"]},{"Key":"and `_open`","Fragments":["be"]},{"Key":"`_open` be","Fragments":["synchronized"]},{"Key":"be synchronized","Fragments":["with"]},{"Key":"synchronized with","Fragments":["a"]},{"Key":"single lock?","Fragments":["With"]},{"Key":"lock? With","Fragments":["your"]},{"Key":"With your","Fragments":["current"]},{"Key":"your current","Fragments":["solution","value","result"]},{"Key":"current solution","Fragments":["wouldn't"]},{"Key":"solution wouldn't","Fragments":["the"]},{"Key":"wouldn't the","Fragments":["two"]},{"Key":"two values","Fragments":["be"]},{"Key":"values be","Fragments":["locked"]},{"Key":"be locked","Fragments":["independently?"]},{"Key":"locked independently?","Fragments":["Thus"]},{"Key":"independently? Thus","Fragments":["there"]},{"Key":"Thus there","Fragments":["could"]},{"Key":"there could","Fragments":["be"]},{"Key":"a race","Fragments":["condition"]},{"Key":"race condition","Fragments":["if"]},{"Key":"condition if","Fragments":["one"]},{"Key":"one thread","Fragments":["is"]},{"Key":"thread is","Fragments":["incrementing","closing"]},{"Key":"is incrementing","Fragments":["or"]},{"Key":"incrementing or","Fragments":["getting"]},{"Key":"or getting","Fragments":["a"]},{"Key":"a balance","Fragments":["and"]},{"Key":"balance and","Fragments":["another"]},{"Key":"and another","Fragments":["thread"]},{"Key":"another thread","Fragments":["is"]},{"Key":"is closing","Fragments":["the"]},{"Key":"closing the","Fragments":["account?"]},{"Key":"Yeah, you","Fragments":["are"]},{"Key":" Look","Fragments":["at"]},{"Key":"at ```zip```","Fragments":["function"]},{"Key":" Tail","Fragments":["recursive"]},{"Key":"Tail recursive","Fragments":["version"]},{"Key":"recursive version","Fragments":["of"]},{"Key":" Ignore","Fragments":["this"]},{"Key":"Ignore this","Fragments":["one"]},{"Key":"one -","Fragments":["submitted"]},{"Key":"- submitted","Fragments":["by"]},{"Key":"submitted by","Fragments":["mistake!"]},{"Key":"This one","Fragments":["makes"]},{"Key":"one makes","Fragments":["better"]},{"Key":"makes better","Fragments":["use"]},{"Key":"better use","Fragments":["of"]},{"Key":"of built-in","Fragments":["String"]},{"Key":"built-in String","Fragments":["functions."]},{"Key":"case where","Fragments":["the"]},{"Key":"the lengths","Fragments":["of"]},{"Key":"lengths of","Fragments":["the"]},{"Key":"the 2","Fragments":["lists"]},{"Key":"2 lists","Fragments":["are"]},{"Key":"lists are","Fragments":["the"]},{"Key":"same length.","Fragments":["If"]},{"Key":"length. If","Fragments":["the"]},{"Key":"If the","Fragments":["checks"]},{"Key":"are reordered","Fragments":["you"]},{"Key":"reordered you","Fragments":["should"]},{"Key":"am curious","Fragments":["why"]},{"Key":"why your","Fragments":["type"]},{"Key":"your type","Fragments":["signature"]},{"Key":"type signature","Fragments":["takes"]},{"Key":"signature takes","Fragments":["two"]},{"Key":"takes two","Fragments":["different"]},{"Key":"two different","Fragments":["types?"]},{"Key":"different types?","Fragments":["Wouldn't"]},{"Key":"types? Wouldn't","Fragments":["it"]},{"Key":"Wouldn't it","Fragments":["be"]},{"Key":"be comparing","Fragments":["lists"]},{"Key":"comparing lists","Fragments":["of"]},{"Key":"lists of","Fragments":["the"]},{"Key":"same type?","Fragments":["As"]},{"Key":"type? As","Fragments":["in"]},{"Key":"As in","Fragments":["`sublist[A](first:"]},{"Key":"in `sublist[A](first:","Fragments":["List[A],"]},{"Key":"`sublist[A](first: List[A],","Fragments":["second:"]},{"Key":"List[A], second:","Fragments":["List[A])`"]},{"Key":"good. I","Fragments":["am"]},{"Key":"to need","Fragments":["to"]},{"Key":"the exercise","Fragments":["in"]},{"Key":"exercise in","Fragments":["the"]},{"Key":"the repository","Fragments":["to"]},{"Key":"repository to","Fragments":["do"]},{"Key":"this with","Fragments":["map"]},{"Key":"with map","Fragments":["instead"]},{"Key":"statement I","Fragments":["used."]},{"Key":"I used.","Fragments":["I"]},{"Key":"used. I","Fragments":["didn't"]},{"Key":"didn't realize","Fragments":["that"]},{"Key":"that accessing","Fragments":["a"]},{"Key":"accessing a","Fragments":["Map"]},{"Key":"invalid key","Fragments":["would"]},{"Key":"key would","Fragments":["chuck"]},{"Key":"would chuck","Fragments":["an"]},{"Key":"chuck an","Fragments":["exception."]},{"Key":"change this","Fragments":["to"]},{"Key":"just perform","Fragments":["a"]},{"Key":"writing out","Fragments":["the"]},{"Key":" So","Fragments":["this"]},{"Key":"first draft.","Fragments":["It"]},{"Key":"draft. It","Fragments":["passes"]},{"Key":"It passes","Fragments":["the"]},{"Key":"the tests,","Fragments":["but"]},{"Key":"tests, but","Fragments":["Bob"]},{"Key":"but Bob","Fragments":["still"]},{"Key":"Bob still","Fragments":["seems"]},{"Key":"still seems","Fragments":["like"]},{"Key":"like quite","Fragments":["a"]},{"Key":"a complicated","Fragments":["kid"]},{"Key":"complicated kid","Fragments":["right"]},{"Key":"kid right","Fragments":["now."]},{"Key":"good. You","Fragments":["can"]},{"Key":"also do","Fragments":["a"]},{"Key":"a `a.zip(b).count`","Fragments":["with"]},{"Key":"`a.zip(b).count` with","Fragments":["the"]},{"Key":"predicate so","Fragments":["that"]},{"Key":"perform the","Fragments":["filter"]},{"Key":"then the","Fragments":["length."]},{"Key":"just compare","Fragments":["the"]},{"Key":"the candidate","Fragments":["and"]},{"Key":"candidate and","Fragments":["input"]},{"Key":"and input","Fragments":["word."]},{"Key":"Really nice","Fragments":["and","and"]},{"Key":"few tweaks","Fragments":["for","to"]},{"Key":"tweaks for","Fragments":["improvement:"]},{"Key":"* It","Fragments":["might"]},{"Key":"if your","Fragments":["tests"]},{"Key":"tests (e.g.","Fragments":["`s.trim.isEmpty`)"]},{"Key":"(e.g. `s.trim.isEmpty`)","Fragments":["were"]},{"Key":"`s.trim.isEmpty`) were","Fragments":["separately"]},{"Key":"were separately","Fragments":["named"]},{"Key":"separately named","Fragments":["methods"]},{"Key":"* Even","Fragments":["more"]},{"Key":"Even more","Fragments":["scala-idiomatic"]},{"Key":"more scala-idiomatic","Fragments":["would"]},{"Key":"scala-idiomatic would","Fragments":["be"]},{"Key":"create objects","Fragments":["with"]},{"Key":"with `unapply`","Fragments":["to"]},{"Key":"`unapply` to","Fragments":["describe"]},{"Key":"describe patterns.","Fragments":["Personally"]},{"Key":"patterns. Personally","Fragments":["I"]},{"Key":"actually helpful","Fragments":["in"]},{"Key":"helpful in","Fragments":["terms"]},{"Key":"readability, but","Fragments":["it's"]},{"Key":"it's interesting","Fragments":["to"]},{"Key":"learn about","Fragments":["--"]},{"Key":"about --","Fragments":["see"]},{"Key":"-- see","Fragments":["[1]","[1]."]},{"Key":"see [1]","Fragments":["for"]},{"Key":"[1] for","Fragments":["more:"]},{"Key":"This answer","Fragments":["was"]},{"Key":"answer was","Fragments":["much"]},{"Key":"was much","Fragments":["shorter"]},{"Key":"tried compiling","Fragments":["this"]},{"Key":"compiling this","Fragments":["code"]},{"Key":"and running","Fragments":["the"]},{"Key":"running the","Fragments":["test"]},{"Key":"cases. First","Fragments":["problem"]},{"Key":"First problem","Fragments":["was"]},{"Key":"problem was","Fragments":["that"]},{"Key":"was that","Fragments":["the"]},{"Key":"compilation failed","Fragments":["on"]},{"Key":"failed on","Fragments":["line"]},{"Key":"line 4.","Fragments":["I"]},{"Key":"4. I","Fragments":["had"]},{"Key":"to surround","Fragments":["\"phrase"]},{"Key":"surround \"phrase","Fragments":["last\""]},{"Key":"\"phrase last\"","Fragments":["with"]},{"Key":"last\" with","Fragments":["parens."]},{"Key":"with parens.","Fragments":["Second"]},{"Key":"parens. Second","Fragments":["-"]},{"Key":"Second -","Fragments":["8"]},{"Key":"- 8","Fragments":["of"]},{"Key":"8 of","Fragments":["the"]},{"Key":"tests failed.","Fragments":["4"]},{"Key":"failed. 4","Fragments":["of"]},{"Key":"4 of","Fragments":["the"]},{"Key":"the problems","Fragments":["are"]},{"Key":"problems are","Fragments":["that"]},{"Key":"are that","Fragments":["`Whoa`"]},{"Key":"that `Whoa`","Fragments":["should"]},{"Key":"`Whoa` should","Fragments":["be"]},{"Key":"spelled `Woah`.","Fragments":["Then"]},{"Key":"`Woah`. Then","Fragments":["I"]},{"Key":"I notice","Fragments":["that"]},{"Key":"notice that","Fragments":["tests"]},{"Key":"that tests","Fragments":["with"]},{"Key":"tests with","Fragments":["numbers"]},{"Key":"with numbers","Fragments":["and"]},{"Key":"numbers and","Fragments":["blanks"]},{"Key":"and blanks","Fragments":["are"]},{"Key":"blanks are","Fragments":["failing."]},{"Key":" @jefferey","Fragments":["--"]},{"Key":"@jefferey --","Fragments":["fair"]},{"Key":"-- fair","Fragments":["enough!"]},{"Key":"fair enough!","Fragments":["It's"]},{"Key":"enough! It's","Fragments":["certainly"]},{"Key":"certainly less","Fragments":["code"]},{"Key":"less code","Fragments":["in"]},{"Key":"in any","Fragments":["case"]},{"Key":"guess if","Fragments":["we"]},{"Key":"were dealing","Fragments":["with"]},{"Key":"dealing with","Fragments":["larger"]},{"Key":"with larger","Fragments":["data"]},{"Key":"larger data","Fragments":["I","sets,"]},{"Key":"data I","Fragments":["could"]},{"Key":"some claim","Fragments":["about"]},{"Key":"claim about","Fragments":["O(N)"]},{"Key":"about O(N)","Fragments":["vs"]},{"Key":"O(N) vs","Fragments":["O(N"]},{"Key":"vs O(N","Fragments":["log"]},{"Key":"O(N log","Fragments":["N)"]},{"Key":"log N)","Fragments":["but"]},{"Key":"N) but","Fragments":["with"]},{"Key":"but with","Fragments":["these"]},{"Key":"with these","Fragments":["input"]},{"Key":"these input","Fragments":["cases"]},{"Key":"input cases","Fragments":["it's"]},{"Key":"cases it's","Fragments":["not"]},{"Key":"Interesting solution.","Fragments":["I"]},{"Key":"* Indentation","Fragments":["would","would"]},{"Key":"Indentation would","Fragments":["help","help"]},{"Key":"would help","Fragments":["with","with"]},{"Key":"help with","Fragments":["readability.","readability."]},{"Key":"first `if`","Fragments":["check"]},{"Key":"`if` check","Fragments":["isn't"]},{"Key":"check isn't","Fragments":["necessary","necessary"]},{"Key":"isn't necessary","Fragments":["(though","(though"]},{"Key":"necessary (though","Fragments":["following","following"]},{"Key":"(though following","Fragments":["TDD","TDD"]},{"Key":"following TDD","Fragments":["strictly","strictly"]},{"Key":"TDD strictly","Fragments":["will","will"]},{"Key":"strictly will","Fragments":["get","get"]},{"Key":"will get","Fragments":["you","you"]},{"Key":"get you","Fragments":["there!)","there!)"]},{"Key":"The `.map{case","Fragments":["...}.foldLeft{...}`"]},{"Key":"`.map{case ...}.foldLeft{...}`","Fragments":["could"]},{"Key":"...}.foldLeft{...}` could","Fragments":["be"]},{"Key":"rewritten as","Fragments":["`count{case","count{case"]},{"Key":"as `count{case","Fragments":["...}`"]},{"Key":"`count{case ...}`","Fragments":["since"]},{"Key":"...}` since","Fragments":["`count`"]},{"Key":"since `count`","Fragments":["takes"]},{"Key":"`count` takes","Fragments":["a"]},{"Key":"predicate function","Fragments":["and","and"]},{"Key":"of elements","Fragments":["for","for"]},{"Key":"elements for","Fragments":["which","which"]},{"Key":"for which","Fragments":["the","the"]},{"Key":"predicate is","Fragments":["true","true"]},{"Key":" Out","Fragments":["of","of"]},{"Key":"Out of","Fragments":["curiousity,","curiosity,","curiosity,"]},{"Key":"of curiousity,","Fragments":["is"]},{"Key":"curiousity, is","Fragments":["there"]},{"Key":"is there","Fragments":["a","a"]},{"Key":"use `s.equals(s1)`","Fragments":["instead"]},{"Key":"`s.equals(s1)` instead","Fragments":["of"]},{"Key":"of `s","Fragments":["=="]},{"Key":"== s1`","Fragments":["?"]},{"Key":"looks good!","Fragments":["A"]},{"Key":"tweaks to","Fragments":["consider:"]},{"Key":"* As","Fragments":["implemented,"]},{"Key":"As implemented,","Fragments":["I"]},{"Key":"implemented, I","Fragments":["believe"]},{"Key":"believe `s`","Fragments":["gets"]},{"Key":"`s` gets","Fragments":["sorted"]},{"Key":"gets sorted","Fragments":["once"]},{"Key":"sorted once","Fragments":["for"]},{"Key":"once for","Fragments":["every"]},{"Key":"in `strings`.","Fragments":["On"]},{"Key":"`strings`. On","Fragments":["the"]},{"Key":"the scale","Fragments":["of"]},{"Key":"cases this","Fragments":["doesn't"]},{"Key":"matter at","Fragments":["all,"]},{"Key":"but better","Fragments":["performance"]},{"Key":"better performance","Fragments":["on"]},{"Key":"performance on","Fragments":["larger"]},{"Key":"on larger","Fragments":["data"]},{"Key":"data sets,","Fragments":["cache"]},{"Key":"sets, cache","Fragments":["the"]},{"Key":"cache the","Fragments":["value"]},{"Key":"of `s.toUpperCase.sorted`","Fragments":["on"]},{"Key":"`s.toUpperCase.sorted` on","Fragments":["initialization"]},{"Key":"* Rather","Fragments":["than"]},{"Key":"than calling","Fragments":["`filter`"]},{"Key":"calling `filter`","Fragments":["twice,"]},{"Key":"`filter` twice,","Fragments":["call"]},{"Key":"twice, call","Fragments":["it"]},{"Key":"it once,","Fragments":["joining"]},{"Key":"once, joining","Fragments":["the"]},{"Key":"joining the","Fragments":["conditions"]},{"Key":"conditions with","Fragments":["a"]},{"Key":"a `\u0026\u0026`","Fragments":["(This"]},{"Key":"`\u0026\u0026` (This","Fragments":["does"]},{"Key":"(This does","Fragments":["make"]},{"Key":"does make","Fragments":["the"]},{"Key":"code a","Fragments":["few","bit.)"]},{"Key":"few characters","Fragments":["more"]},{"Key":"characters more","Fragments":["verbose,"]},{"Key":"more verbose,","Fragments":["but"]},{"Key":"this way","Fragments":["there's"]},{"Key":"way there's","Fragments":["only"]},{"Key":"there's only","Fragments":["one"]},{"Key":"one pass","Fragments":["through"]},{"Key":"pass through","Fragments":["the"]},{"Key":"* On","Fragments":["my"]},{"Key":"On my","Fragments":["team"]},{"Key":"my team","Fragments":["at"]},{"Key":"team at","Fragments":["work"]},{"Key":"at work","Fragments":["we've"]},{"Key":"work we've","Fragments":["adopted"]},{"Key":"we've adopted","Fragments":["the"]},{"Key":"adopted the","Fragments":["convention"]},{"Key":"the convention","Fragments":["in"]},{"Key":"convention in","Fragments":["scala"]},{"Key":"scala of","Fragments":["using"]},{"Key":"using `{}`","Fragments":["rather"]},{"Key":"`{}` rather","Fragments":["than"]},{"Key":"than `()`","Fragments":["when"]},{"Key":"`()` when","Fragments":["passing"]},{"Key":"when passing","Fragments":["function"]},{"Key":"passing function","Fragments":["parameters,"]},{"Key":"function parameters,","Fragments":["so,"]},{"Key":"parameters, so,","Fragments":["e.g."]},{"Key":"so, e.g.","Fragments":["`.filter{...}`"]},{"Key":"e.g. `.filter{...}`","Fragments":["That"]},{"Key":"`.filter{...}` That","Fragments":["makes"]},{"Key":"That makes","Fragments":["it"]},{"Key":"that what's","Fragments":["getting"]},{"Key":"what's getting","Fragments":["passed"]},{"Key":"getting passed","Fragments":["as"]},{"Key":"passed as","Fragments":["a"]},{"Key":"a function,","Fragments":["esp."]},{"Key":"function, esp.","Fragments":["for"]},{"Key":"esp. for","Fragments":["people"]},{"Key":"for people","Fragments":["coming"]},{"Key":"people coming","Fragments":["from"]},{"Key":"Thanks! The","Fragments":["regular"]},{"Key":"The regular","Fragments":["expressions"]},{"Key":"expressions can","Fragments":["be"]},{"Key":"be improved","Fragments":["though,","by"]},{"Key":"improved though,","Fragments":["I"]},{"Key":"though, I","Fragments":["don't"]},{"Key":"have much","Fragments":["experience"]},{"Key":"much experience","Fragments":["with"]},{"Key":"experience with","Fragments":["them."]},{"Key":"Hmm, I","Fragments":["find"]},{"Key":"bit challenging","Fragments":["to"]},{"Key":"challenging to","Fragments":["follow."]},{"Key":"to follow.","Fragments":["A"]},{"Key":"follow. A","Fragments":["few"]},{"Key":"few quick","Fragments":["thoughts:"]},{"Key":"* Is","Fragments":["there","there"]},{"Key":"the behavior","Fragments":["of"]},{"Key":"of `isAnagram`","Fragments":["so"]},{"Key":"`isAnagram` so","Fragments":["that"]},{"Key":"in line","Fragments":["14","10"]},{"Key":"line 14","Fragments":["you"]},{"Key":"14 you","Fragments":["could"]},{"Key":"just filter","Fragments":["on","so"]},{"Key":"filter on","Fragments":["`isAnagram(entry,"]},{"Key":"on `isAnagram(entry,","Fragments":["x)`"]},{"Key":"`isAnagram(entry, x)`","Fragments":["?"]},{"Key":"* A","Fragments":["`match/case`"]},{"Key":"A `match/case`","Fragments":["on"]},{"Key":"`match/case` on","Fragments":["a"]},{"Key":"a boolean","Fragments":["is"]},{"Key":"boolean is","Fragments":["equivalent"]},{"Key":"is equivalent","Fragments":["to"]},{"Key":"equivalent to","Fragments":["an"]},{"Key":"an `if/else`.","Fragments":["Scala"]},{"Key":"`if/else`. Scala","Fragments":["folks"]},{"Key":"Scala folks","Fragments":["love"]},{"Key":"folks love","Fragments":["`match/case`"]},{"Key":"love `match/case`","Fragments":["but"]},{"Key":"`match/case` but","Fragments":["I"]},{"Key":"this might","Fragments":["be"]},{"Key":"case of","Fragments":["over-use."]},{"Key":"I suspect","Fragments":["the"]},{"Key":"suspect the","Fragments":["test"]},{"Key":"line 10","Fragments":["will"]},{"Key":"10 will","Fragments":["fail"]},{"Key":"fail for","Fragments":["some"]},{"Key":"some pathological","Fragments":["cases,"]},{"Key":"pathological cases,","Fragments":["e.g."]},{"Key":"cases, e.g.","Fragments":["`\"aaa\"`"]},{"Key":"e.g. `\"aaa\"`","Fragments":["and"]},{"Key":"`\"aaa\"` and","Fragments":["`\"abb\"`"]},{"Key":"and `\"abb\"`","Fragments":["(4"]},{"Key":"`\"abb\"` (4","Fragments":["a's"]},{"Key":"(4 a's","Fragments":["and"]},{"Key":"a's and","Fragments":["2"]},{"Key":"and 2","Fragments":["b's)."]},{"Key":"2 b's).","Fragments":["One"]},{"Key":"b's). One","Fragments":["way"]},{"Key":"One way","Fragments":["to"]},{"Key":"to both","Fragments":["enhance"]},{"Key":"both enhance","Fragments":["readability"]},{"Key":"enhance readability","Fragments":["(and"]},{"Key":"readability (and","Fragments":["be"]},{"Key":"(and be","Fragments":["more"]},{"Key":"more confident","Fragments":["in"]},{"Key":"confident in","Fragments":["the"]},{"Key":"the result)","Fragments":["is"]},{"Key":"result) is","Fragments":["to"]},{"Key":"compare some","Fragments":["\"canonical\""]},{"Key":"some \"canonical\"","Fragments":["transformation"]},{"Key":"\"canonical\" transformation","Fragments":["of"]},{"Key":"transformation of","Fragments":["the"]},{"Key":"the word,","Fragments":["where"]},{"Key":"word, where","Fragments":["anagrams"]},{"Key":"where anagrams","Fragments":["will"]},{"Key":"anagrams will","Fragments":["look"]},{"Key":"will look","Fragments":["the"]},{"Key":"look the","Fragments":["same"]},{"Key":"same transformed","Fragments":["and"]},{"Key":"transformed and","Fragments":["non-anagrams"]},{"Key":"and non-anagrams","Fragments":["won't."]},{"Key":"non-anagrams won't.","Fragments":["Looking"]},{"Key":"won't. Looking","Fragments":["over"]},{"Key":"Looking over","Fragments":["others'"]},{"Key":"over others'","Fragments":["solutions,"]},{"Key":"others' solutions,","Fragments":["some"]},{"Key":"solutions, some","Fragments":["sort"]},{"Key":"the upper-cased","Fragments":["letters;"]},{"Key":"upper-cased letters;","Fragments":["others"]},{"Key":"letters; others","Fragments":["create"]},{"Key":"others create","Fragments":["a"]},{"Key":"a `Map[Char,","Fragments":["Int]`"]},{"Key":"`Map[Char, Int]`","Fragments":["of"]},{"Key":"Int]` of","Fragments":["letter"]},{"Key":"of letter","Fragments":["counts."]},{"Key":"you four","Fragments":["the"]},{"Key":"four the","Fragments":["feedback."]},{"Key":"I refactored","Fragments":["the"]},{"Key":"refactored the","Fragments":["code."]},{"Key":" Please,","Fragments":["have","have"]},{"Key":"Please, have","Fragments":["a","a"]},{"Key":" Thank's","Fragments":["and"]},{"Key":"Thank's and","Fragments":["advance."]},{"Key":"Looks really","Fragments":["clean!"]},{"Key":"really nice!","Fragments":["A"]},{"Key":"nice! A","Fragments":["few"]},{"Key":"if `input","Fragments":["="]},{"Key":"`input =","Fragments":["\"\"`."]},{"Key":"= \"\"`.","Fragments":["Given"]},{"Key":"\"\"`. Given","Fragments":["the"]},{"Key":"ordering of","Fragments":["the"]},{"Key":"the `if/else`","Fragments":["block"]},{"Key":"`if/else` block","Fragments":["this"]},{"Key":"block this","Fragments":["won't"]},{"Key":"this won't","Fragments":["be"]},{"Key":"won't be","Fragments":["a"]},{"Key":"a problem","Fragments":["in"]},{"Key":"in practice,","Fragments":["but"]},{"Key":"practice, but","Fragments":["a"]},{"Key":"a safer","Fragments":["approach"]},{"Key":"safer approach","Fragments":["would"]},{"Key":"approach would","Fragments":["be"]},{"Key":"* `hasLetters`","Fragments":["is"]},{"Key":"`hasLetters` is","Fragments":["only"]},{"Key":"of `isAllCaps`","Fragments":["so"]},{"Key":"`isAllCaps` so","Fragments":["not"]},{"Key":"so not","Fragments":["sure"]},{"Key":"sure it","Fragments":["needs"]},{"Key":"* Perhaps","Fragments":["call"]},{"Key":"Perhaps call","Fragments":["the"]},{"Key":"the `isAllCaps`","Fragments":["method"]},{"Key":"`isAllCaps` method","Fragments":["`isShouting`"]},{"Key":"method `isShouting`","Fragments":["since"]},{"Key":"`isShouting` since","Fragments":["that's"]},{"Key":"since that's","Fragments":["really"]},{"Key":"that's really","Fragments":["the"]},{"Key":"really the","Fragments":["semantic"]},{"Key":"the semantic","Fragments":["meaning"]},{"Key":"semantic meaning","Fragments":["of"]},{"Key":"meaning of","Fragments":["the"]},{"Key":"of curiosity,","Fragments":["why","is"]},{"Key":"curiosity, why","Fragments":["define"]},{"Key":"why define","Fragments":["`decompose`"]},{"Key":"define `decompose`","Fragments":["on"]},{"Key":"`decompose` on","Fragments":["the"]},{"Key":"The numeric","Fragments":["part"]},{"Key":"numeric part","Fragments":["of"]},{"Key":"string must","Fragments":["be"]},{"Key":"be randomly","Fragments":["generated."]},{"Key":"The empty","Fragments":["sequence"]},{"Key":"empty sequence","Fragments":["map"]},{"Key":"sequence map","Fragments":["can"]},{"Key":"map can","Fragments":["be"]},{"Key":"used instead","Fragments":["of"]},{"Key":"of hard-coded","Fragments":["strings."]},{"Key":"hard-coded strings.","Fragments":["You"]},{"Key":"strings. You","Fragments":["could"]},{"Key":"val sequenceCounts","Fragments":["="]},{"Key":"sequenceCounts =","Fragments":["Map('A'"]},{"Key":"= Map('A'","Fragments":["-\u003e"]},{"Key":"Map('A' -\u003e","Fragments":["0,","0,"]},{"Key":"-\u003e 0,","Fragments":["'C'","'T'","'G'","'C'","'G'","'T'"]},{"Key":"0, 'C'","Fragments":["-\u003e","-\u003e"]},{"Key":"'C' -\u003e","Fragments":["0,","0,"]},{"Key":"0, 'T'","Fragments":["-\u003e","-\u003e"]},{"Key":"'T' -\u003e","Fragments":["0,","0)"]},{"Key":"0, 'G'","Fragments":["-\u003e","-\u003e"]},{"Key":"'G' -\u003e","Fragments":["0)","0,"]},{"Key":" require","Fragments":["(sequence.forall(w"]},{"Key":"require (sequence.forall(w","Fragments":["=\u003e"]},{"Key":"(sequence.forall(w =\u003e","Fragments":["sequenceCounts.keys.contains(w))"]},{"Key":" True,","Fragments":["I"]},{"Key":"True, I","Fragments":["updated"]},{"Key":"I updated","Fragments":["my"]},{"Key":"updated my","Fragments":["solution,"]},{"Key":" Hey,","Fragments":["if"]},{"Key":"Hey, if","Fragments":["the"]},{"Key":"tests pass...","Fragments":[":)"]},{"Key":" Actually","Fragments":["this"]},{"Key":"Actually this","Fragments":["challenge"]},{"Key":"this challenge","Fragments":["is"]},{"Key":"challenge is","Fragments":["a"]},{"Key":"a particularly","Fragments":["interesting"]},{"Key":"particularly interesting","Fragments":["case"]},{"Key":"interesting case","Fragments":["when"]},{"Key":"case when","Fragments":["it"]},{"Key":"it comes","Fragments":["to"]},{"Key":"comes to","Fragments":["testing."]},{"Key":"to testing.","Fragments":["Randomness"]},{"Key":"testing. Randomness","Fragments":["and"]},{"Key":"Randomness and","Fragments":["testing"]},{"Key":"and testing","Fragments":["lead"]},{"Key":"testing lead","Fragments":["to"]},{"Key":"to potential","Fragments":["errors."]},{"Key":"potential errors.","Fragments":["For"]},{"Key":"errors. For","Fragments":["example,"]},{"Key":"example, about","Fragments":["every"]},{"Key":"about every","Fragments":["26*26=676"]},{"Key":"every 26*26=676","Fragments":["times"]},{"Key":"26*26=676 times","Fragments":["these"]},{"Key":"times these","Fragments":["tests"]},{"Key":"these tests","Fragments":["are"]},{"Key":"are run,","Fragments":["its"]},{"Key":"run, its","Fragments":["going"]},{"Key":"its going","Fragments":["to"]},{"Key":"to happen","Fragments":["to"]},{"Key":"to generate","Fragments":["a"]},{"Key":"generate a","Fragments":["dupilicate"]},{"Key":"a dupilicate","Fragments":["name."]},{"Key":"dupilicate name.","Fragments":["And"]},{"Key":"name. And","Fragments":["without"]},{"Key":"And without","Fragments":["more"]},{"Key":"without more","Fragments":["information"]},{"Key":"more information","Fragments":["about"]},{"Key":"information about","Fragments":["the"]},{"Key":"the problem,","Fragments":["we"]},{"Key":"problem, we","Fragments":["don't"]},{"Key":"we don't","Fragments":["know"]},{"Key":"whether a","Fragments":["robot"]},{"Key":"a robot","Fragments":["name"]},{"Key":"robot name","Fragments":["differing"]},{"Key":"name differing","Fragments":["by"]},{"Key":"differing by","Fragments":["letters"]},{"Key":"by letters","Fragments":["or"]},{"Key":"letters or","Fragments":["by"]},{"Key":"or by","Fragments":["numbers"]},{"Key":"by numbers","Fragments":["mean"]},{"Key":"numbers mean","Fragments":["different"]},{"Key":"mean different","Fragments":["things."]},{"Key":"different things.","Fragments":["My"]},{"Key":"things. My","Fragments":["solution"]},{"Key":"My solution","Fragments":["could"]},{"Key":"be terrible","Fragments":["or"]},{"Key":"terrible or","Fragments":["in"]},{"Key":"or in","Fragments":["fact"]},{"Key":"could try","Fragments":["to","rewriting"]},{"Key":"that groups","Fragments":["letters"]},{"Key":"groups letters","Fragments":["with"]},{"Key":"letters with","Fragments":["the"]},{"Key":"same values.","Fragments":["I"]},{"Key":"values. I","Fragments":["think"]},{"Key":"it read","Fragments":["better."]},{"Key":"try rewriting","Fragments":["the"]},{"Key":"rewriting the","Fragments":["`foreach`"]},{"Key":"the `foreach`","Fragments":["loop"]},{"Key":"`foreach` loop","Fragments":["that"]},{"Key":"loop that","Fragments":["uses"]},{"Key":"mutable value","Fragments":["to"]},{"Key":"to code","Fragments":["that"]},{"Key":"uses standard","Fragments":["functions"]},{"Key":"standard functions","Fragments":["such"]},{"Key":"functions such","Fragments":["as"]},{"Key":"as `map`","Fragments":["and"]},{"Key":"and `filter`.","Fragments":["In"]},{"Key":"`filter`. In","Fragments":["general,"]},{"Key":"In general,","Fragments":["functional"]},{"Key":"general, functional","Fragments":["programs"]},{"Key":"functional programs","Fragments":["use"]},{"Key":"programs use","Fragments":["mutable"]},{"Key":"use mutable","Fragments":["variables"]},{"Key":"mutable variables","Fragments":["as"]},{"Key":"variables as","Fragments":["little"]},{"Key":"as little","Fragments":["as"]},{"Key":"little as","Fragments":["possible."]},{"Key":"Two minor","Fragments":["suggestions:"]},{"Key":"believe you","Fragments":["can","can","need"]},{"Key":"can replace","Fragments":["both"]},{"Key":"replace both","Fragments":["instances"]},{"Key":"both instances","Fragments":["of"]},{"Key":"of `.sortWith((w1,","Fragments":["w2)"]},{"Key":"`.sortWith((w1, w2)","Fragments":["=\u003e"]},{"Key":"w2) =\u003e","Fragments":["w1.compare(w2)"]},{"Key":"=\u003e w1.compare(w2)","Fragments":["\u003c"]},{"Key":"w1.compare(w2) \u003c","Fragments":["0)`"]},{"Key":"\u003c 0)`","Fragments":["with"]},{"Key":"0)` with","Fragments":["`.sorted`"]},{"Key":"* scala","Fragments":["doesn't"]},{"Key":"scala doesn't","Fragments":["require"]},{"Key":"doesn't require","Fragments":["a"]},{"Key":"a `return`","Fragments":["in"]},{"Key":"final statement","Fragments":["of","is"]},{"Key":"a method;","Fragments":["the"]},{"Key":"method; the","Fragments":["value"]},{"Key":" -Totally","Fragments":["agree."]},{"Key":"first if","Fragments":["check"]},{"Key":"if check","Fragments":["isn't"]},{"Key":" -Haha,","Fragments":["yep"]},{"Key":"-Haha, yep","Fragments":["I"]},{"Key":"yep I","Fragments":["was"]},{"Key":"in rush","Fragments":["and"]},{"Key":"rush and","Fragments":["didn't"]},{"Key":"and didn't","Fragments":["refactor"]},{"Key":"didn't refactor","Fragments":["after"]},{"Key":"refactor after","Fragments":["passing"]},{"Key":"after passing","Fragments":["the"]},{"Key":"passing the","Fragments":["tests"]},{"Key":"The .map{case","Fragments":["...}.foldLeft{...}"]},{"Key":".map{case ...}.foldLeft{...}","Fragments":["could"]},{"Key":"...}.foldLeft{...} could","Fragments":["be"]},{"Key":"as count{case","Fragments":["...}"]},{"Key":"count{case ...}","Fragments":["since"]},{"Key":"...} since","Fragments":["count"]},{"Key":"since count","Fragments":["takes"]},{"Key":"count takes","Fragments":["a"]},{"Key":" -Thanks!!","Fragments":["because"]},{"Key":"-Thanks!! because","Fragments":["your"]},{"Key":"because your","Fragments":["comment"]},{"Key":"your comment","Fragments":["I"]},{"Key":"comment I","Fragments":["used"]},{"Key":"* Out","Fragments":["of"]},{"Key":"curiosity, is","Fragments":["there"]},{"Key":"use s.equals(s1)","Fragments":["instead"]},{"Key":"s.equals(s1) instead","Fragments":["of"]},{"Key":"s ==","Fragments":["s1"]},{"Key":"== s1","Fragments":["?"]},{"Key":" -not","Fragments":["a"]},{"Key":"-not a","Fragments":["single"]},{"Key":"single reason,","Fragments":["maybe"]},{"Key":"reason, maybe","Fragments":["I"]},{"Key":"maybe I","Fragments":["was"]},{"Key":"was thinking","Fragments":["in"]},{"Key":"thinking in","Fragments":["java"]},{"Key":"in java","Fragments":[":P"]},{"Key":" Nicely","Fragments":["improved","modeled"]},{"Key":"Nicely improved","Fragments":["compared"]},{"Key":"improved compared","Fragments":["to"]},{"Key":"to version","Fragments":["one."]},{"Key":"Good point","Fragments":["-"]},{"Key":"point -","Fragments":["the"]},{"Key":"error handling","Fragments":["is"]},{"Key":"handling is","Fragments":["pretty"]},{"Key":"pretty weak","Fragments":["(i.e."]},{"Key":"weak (i.e.","Fragments":["non-existent)"]},{"Key":"(i.e. non-existent)","Fragments":["in"]},{"Key":"non-existent) in","Fragments":["this"]},{"Key":"doing a","Fragments":["lot"]},{"Key":"of iterations","Fragments":["through"]},{"Key":"iterations through","Fragments":["your"]},{"Key":"through your","Fragments":["string"]},{"Key":"your string","Fragments":["(reverse,"]},{"Key":"string (reverse,","Fragments":["forall,"]},{"Key":"(reverse, forall,","Fragments":["zipWithIndex,"]},{"Key":"forall, zipWithIndex,","Fragments":["map,"]},{"Key":"zipWithIndex, map,","Fragments":["sum)"]},{"Key":"map, sum)","Fragments":["when"]},{"Key":"sum) when","Fragments":["you"]},{"Key":"do everything","Fragments":["in"]},{"Key":"Think of","Fragments":["this"]},{"Key":"exercise as","Fragments":["parsing"]},{"Key":"parsing the","Fragments":["string,"]},{"Key":"the string,","Fragments":["you"]},{"Key":"string, you","Fragments":["can"]},{"Key":"can go","Fragments":["through"]},{"Key":"go through","Fragments":["all"]},{"Key":"through all","Fragments":["the"]},{"Key":"the digits","Fragments":["one","are"]},{"Key":"digits one","Fragments":["at"]},{"Key":"one at","Fragments":["a"]},{"Key":"a time","Fragments":["while"]},{"Key":"time while","Fragments":["representing"]},{"Key":"while representing","Fragments":["an"]},{"Key":"representing an","Fragments":["invalid"]},{"Key":"invalid input","Fragments":["with"]},{"Key":"input with","Fragments":["None"]},{"Key":"with None","Fragments":["and","if"]},{"Key":"None and","Fragments":["a"]},{"Key":"valid one","Fragments":["with"]},{"Key":"one with","Fragments":["Some(value)"]},{"Key":"with Some(value)","Fragments":["where"]},{"Key":"Some(value) where","Fragments":["value"]},{"Key":"where value","Fragments":["represents"]},{"Key":"value represents","Fragments":["the"]},{"Key":"represents the","Fragments":["value"]},{"Key":"string parsed","Fragments":["until"]},{"Key":"parsed until","Fragments":["this"]},{"Key":"until this","Fragments":["point,"]},{"Key":"this point,","Fragments":["then"]},{"Key":"point, then","Fragments":["everytime"]},{"Key":"then everytime","Fragments":["you"]},{"Key":"everytime you","Fragments":["need"]},{"Key":"parse one","Fragments":["more"]},{"Key":"one more","Fragments":["element,"]},{"Key":"more element,","Fragments":["either"]},{"Key":"element, either","Fragments":["it"]},{"Key":"either it","Fragments":["is"]},{"Key":"valid digit","Fragments":["and"]},{"Key":"digit and","Fragments":["then"]},{"Key":"can shift","Fragments":["your"]},{"Key":"shift your","Fragments":["current"]},{"Key":"current value","Fragments":["by"]},{"Key":"value by","Fragments":["one"]},{"Key":"by one","Fragments":["to"]},{"Key":"the left","Fragments":["and"]},{"Key":"left and","Fragments":["add"]},{"Key":"the digit","Fragments":["or"]},{"Key":"digit or","Fragments":["replace"]},{"Key":"or replace","Fragments":["your"]},{"Key":"replace your","Fragments":["current"]},{"Key":"current result","Fragments":["with"]},{"Key":"result with","Fragments":["None"]},{"Key":"None if","Fragments":["it"]},{"Key":"is incorrect","Fragments":["on"]},{"Key":"incorrect on","Fragments":["input"]},{"Key":"Also you","Fragments":["get"]},{"Key":"for free","Fragments":["in"]},{"Key":"free in","Fragments":["the"]},{"Key":"object if","Fragments":["you"]},{"Key":"you prefix","Fragments":["your"]},{"Key":"prefix your","Fragments":["class"]},{"Key":"your class","Fragments":["declaration"]},{"Key":"class declaration","Fragments":["with"]},{"Key":"declaration with","Fragments":["the"]},{"Key":"the keywork","Fragments":["\"case\""]},{"Key":"your comments!","Fragments":["I"]},{"Key":"comments! I","Fragments":["submitted"]},{"Key":"I submitted","Fragments":["a"]},{"Key":"style, I","Fragments":["prefer"]},{"Key":"have pure","Fragments":["functions"]},{"Key":"functions in","Fragments":["the","`hey`."]},{"Key":"with `pure`","Fragments":["I"]},{"Key":"`pure` I","Fragments":["mean"]},{"Key":"mean functions","Fragments":["which"]},{"Key":"functions which","Fragments":["don't"]},{"Key":"which don't","Fragments":["use"]},{"Key":"don't use","Fragments":["any"]},{"Key":"any class","Fragments":["field,"]},{"Key":" that","Fragments":["makes"]},{"Key":"makes clear","Fragments":["that"]},{"Key":"is independent","Fragments":["form"]},{"Key":"independent form","Fragments":["the"]},{"Key":"form the","Fragments":["class,"]},{"Key":"refactor if","Fragments":["you"]},{"Key":"example move","Fragments":["them"]},{"Key":"move them","Fragments":["in"]},{"Key":"them in","Fragments":["a"]},{"Key":"a Utils","Fragments":["object."]},{"Key":" makes","Fragments":["sense,"]},{"Key":"makes sense,","Fragments":["thx!"]},{"Key":"Thanks @elvis","Fragments":["!"]},{"Key":" Oh,","Fragments":["really"]},{"Key":"Oh, really","Fragments":["minor"]},{"Key":"really minor","Fragments":["--"]},{"Key":"minor --","Fragments":["I"]},{"Key":"-- I","Fragments":["believe"]},{"Key":"call `groupBy`","Fragments":["on"]},{"Key":"a string,","Fragments":["so"]},{"Key":"string, so","Fragments":["you"]},{"Key":"the `toCharArray`","Fragments":["in"]},{"Key":"`toCharArray` in","Fragments":["`decompose`"]},{"Key":"in `decompose`","Fragments":["--"]},{"Key":"`decompose` --","Fragments":["see"]},{"Key":"see [1].","Fragments":["(Not"]},{"Key":"[1]. (Not","Fragments":["sure"]},{"Key":"(Not sure","Fragments":["if"]},{"Key":"this depends","Fragments":["on"]},{"Key":"your scala","Fragments":["version)"]},{"Key":"and simple!","Fragments":["A"]},{"Key":"simple! A","Fragments":["few"]},{"Key":"few suggestions","Fragments":["for"]},{"Key":"suggestions for","Fragments":["clarity:"]},{"Key":"* For","Fragments":["the"]},{"Key":"conditionals (e.g.","Fragments":["`isUpper(what)`,"]},{"Key":"(e.g. `isUpper(what)`,","Fragments":["`what.endsWith(\"?\")`),"]},{"Key":"`isUpper(what)`, `what.endsWith(\"?\")`),","Fragments":["consider"]},{"Key":"`what.endsWith(\"?\")`), consider","Fragments":["using"]},{"Key":"separate method","Fragments":["with"]},{"Key":"name that","Fragments":["describes"]},{"Key":"that describes","Fragments":["what"]},{"Key":"describes what","Fragments":["you're"]},{"Key":"you're checking,","Fragments":["e.g."]},{"Key":"checking, e.g.","Fragments":["`isShouting`"]},{"Key":"e.g. `isShouting`","Fragments":["`isQuestion`"]},{"Key":"for `what`","Fragments":["that"]},{"Key":"`what` that","Fragments":["might"]},{"Key":"that might","Fragments":["clarify"]},{"Key":"might clarify","Fragments":["its"]},{"Key":"clarify its","Fragments":["role?"]},{"Key":"its role?","Fragments":["E.g."]},{"Key":"role? E.g.","Fragments":["`prompt`"]},{"Key":"E.g. `prompt`","Fragments":["or"]},{"Key":"`prompt` or","Fragments":["`input`..."]},{"Key":" c.isDigit","Fragments":["and"]},{"Key":"c.isDigit and","Fragments":["c.isWhitespace"]},{"Key":"and c.isWhitespace","Fragments":["are"]},{"Key":"c.isWhitespace are","Fragments":["redundant"]},{"Key":" what's","Fragments":["going"]},{"Key":"going on","Fragments":["with"]},{"Key":"on with","Fragments":["isNumber?"]},{"Key":"with isNumber?","Fragments":["why"]},{"Key":"isNumber? why","Fragments":["not"]},{"Key":"not check","Fragments":["whether"]},{"Key":"check whether","Fragments":["hasLetter?"]},{"Key":" nice.","Fragments":["the"]},{"Key":"nice. the","Fragments":["hamming"]},{"Key":"the hamming","Fragments":["distance"]},{"Key":"hamming distance","Fragments":["between"]},{"Key":"distance between","Fragments":["this"]},{"Key":"between this","Fragments":["and"]},{"Key":"shortest solution","Fragments":["might"]},{"Key":"solution might","Fragments":["be"]},{"Key":"should take","Fragments":["advantage"]},{"Key":"take advantage","Fragments":["of"]},{"Key":"that PrimeFactors","Fragments":["is"]},{"Key":"PrimeFactors is","Fragments":["a"]},{"Key":"and can","Fragments":["thus"]},{"Key":"can thus","Fragments":["keep"]},{"Key":"thus keep","Fragments":["state."]},{"Key":"keep state.","Fragments":["Like"]},{"Key":"state. Like","Fragments":["that,"]},{"Key":"Like that,","Fragments":["while"]},{"Key":"that, while","Fragments":["you"]},{"Key":"while you","Fragments":["keep"]},{"Key":"you keep","Fragments":["an"]},{"Key":"keep an","Fragments":["immutable"]},{"Key":"an immutable","Fragments":["interface"]},{"Key":"immutable interface","Fragments":["you"]},{"Key":"interface you","Fragments":["can"]},{"Key":"can speed","Fragments":["up"]},{"Key":"speed up","Fragments":["computation"]},{"Key":"up computation","Fragments":["in"]},{"Key":"computation in","Fragments":["the"]},{"Key":"the background","Fragments":["by"]},{"Key":"background by","Fragments":["storing"]},{"Key":"by storing","Fragments":["the"]},{"Key":"storing the","Fragments":["prime"]},{"Key":"the prime","Fragments":["factors"]},{"Key":"prime factors","Fragments":["you've"]},{"Key":"factors you've","Fragments":["computed"]},{"Key":"you've computed","Fragments":["so"]},{"Key":"computed so","Fragments":["far."]},{"Key":"to move","Fragments":["the"]},{"Key":"the collision","Fragments":["detection"]},{"Key":"collision detection","Fragments":["logic"]},{"Key":"detection logic","Fragments":["into"]},{"Key":"object as","Fragments":["in"]},{"Key":"as in","Fragments":["the"]},{"Key":"the present","Fragments":["state,"]},{"Key":"present state,","Fragments":["there"]},{"Key":"state, there","Fragments":["will"]},{"Key":"there will","Fragments":["be"]},{"Key":"a `usedNames`","Fragments":["set"]},{"Key":"`usedNames` set","Fragments":["per"]},{"Key":"set per","Fragments":["each"]},{"Key":"per each","Fragments":["robot,"]},{"Key":"each robot,","Fragments":["which"]},{"Key":"robot, which","Fragments":["is"]},{"Key":"not what","Fragments":["you"]},{"Key":"know that,","Fragments":["thanks!"]},{"Key":"right, the","Fragments":["variable"]},{"Key":"variable shadowing","Fragments":["is"]},{"Key":"shadowing is","Fragments":["not"]},{"Key":"a quick","Fragments":["refactoring."]},{"Key":"First version","Fragments":["that"]},{"Key":"version that","Fragments":["passes"]},{"Key":"that passes","Fragments":["all"]},{"Key":"passes all","Fragments":["tests."]},{"Key":"chose the","Fragments":["pattern"]},{"Key":"readability reasons","Fragments":["(instead"]},{"Key":"reasons (instead","Fragments":["of"]},{"Key":"(instead of","Fragments":["nested"]},{"Key":"of nested","Fragments":["if's)."]},{"Key":"Could be","Fragments":["improved"]},{"Key":"improved by","Fragments":["not"]},{"Key":"by not","Fragments":["having"]},{"Key":"having the","Fragments":["`filter`"]},{"Key":"`filter` twice","Fragments":["in"]},{"Key":"in second","Fragments":["case."]},{"Key":" 2nd","Fragments":["version"]},{"Key":"2nd version","Fragments":["where"]},{"Key":"version where","Fragments":["the"]},{"Key":"`filter` on","Fragments":["letters"]},{"Key":"on letters","Fragments":["is"]},{"Key":"letters is","Fragments":["only"]},{"Key":"only done","Fragments":["once."]},{"Key":"It IS","Fragments":["nitpicking"]},{"Key":"IS nitpicking","Fragments":[":-)"]},{"Key":"nitpicking :-)","Fragments":["but"]},{"Key":":-) but","Fragments":["if"]},{"Key":"match you","Fragments":["do"]},{"Key":"have assign","Fragments":["it."]},{"Key":"assign it.","Fragments":["You"]},{"Key":"it. You","Fragments":["can"]},{"Key":"if isSilence(sentence)","Fragments":["=\u003e"]},{"Key":"isSilence(sentence) =\u003e","Fragments":["\"Fine."]},{"Key":"Also by","Fragments":["giving"]},{"Key":"by giving","Fragments":["the"]},{"Key":"match value","Fragments":["the"]},{"Key":"value the","Fragments":["same"]},{"Key":"same name","Fragments":["as"]},{"Key":"name as","Fragments":["your"]},{"Key":"original parameter","Fragments":["(`sentence`)"]},{"Key":"parameter (`sentence`)","Fragments":["your"]},{"Key":"(`sentence`) your","Fragments":["variable"]},{"Key":"your variable","Fragments":["is"]},{"Key":"variable is","Fragments":["'shadowed'."]},{"Key":"is 'shadowed'.","Fragments":["In"]},{"Key":"'shadowed'. In","Fragments":["this"]},{"Key":"not matter","Fragments":["as"]},{"Key":"matter as","Fragments":["the"]},{"Key":"values are","Fragments":["identical"]},{"Key":"are identical","Fragments":["but"]},{"Key":"identical but","Fragments":["if"]},{"Key":"the matched","Fragments":["value"]},{"Key":"matched value","Fragments":["is"]},{"Key":"given a","Fragments":["different"]},{"Key":"different name,","Fragments":["it"]},{"Key":"name, it","Fragments":["is"]},{"Key":"is clearer","Fragments":["on"]},{"Key":"clearer on","Fragments":["what"]},{"Key":"on what","Fragments":["the"]},{"Key":"being evaluated.","Fragments":["[It"]},{"Key":"evaluated. [It","Fragments":["can"]},{"Key":"[It can","Fragments":["be"]},{"Key":"bit harder","Fragments":["to"]},{"Key":"to track","Fragments":["down"]},{"Key":"track down","Fragments":["issues,"]},{"Key":"down issues,","Fragments":["I"]},{"Key":"issues, I","Fragments":["know"]},{"Key":"wasn't evaluating","Fragments":["what"]},{"Key":"evaluating what","Fragments":["I"]},{"Key":"thought I","Fragments":["was"]},{"Key":"Finally, the","Fragments":["helper"]},{"Key":"methods may","Fragments":["be"]},{"Key":"be declared","Fragments":["`private`"]},{"Key":"declared `private`","Fragments":["or"]},{"Key":"`private` or","Fragments":["defined"]},{"Key":"or defined","Fragments":["as"]},{"Key":"defined as","Fragments":["inner"]},{"Key":"Nicely modeled","Fragments":["but"]},{"Key":"modeled but","Fragments":["you"]},{"Key":"really need","Fragments":["the"]},{"Key":"the Strand","Fragments":["and"]},{"Key":"Strand and","Fragments":["Genome"]},{"Key":"and Genome","Fragments":["classes."]},{"Key":"Genome classes.","Fragments":["You"]},{"Key":"classes. You","Fragments":["could"]},{"Key":"also directly","Fragments":["zip"]},{"Key":"directly zip","Fragments":["both"]},{"Key":"zip both","Fragments":["`a`"]},{"Key":"both `a`","Fragments":["and"]},{"Key":" mutable","Fragments":["private"]},{"Key":"mutable private","Fragments":["_db"]},{"Key":"The third","Fragments":["approach"]},{"Key":"third approach","Fragments":["just"]},{"Key":"approach just","Fragments":["uses"]},{"Key":"just uses","Fragments":["scala"]},{"Key":"uses scala","Fragments":["collections"]},{"Key":"scala collections","Fragments":["API"]},{"Key":" ```numberToRoman```","Fragments":["should"]},{"Key":"```numberToRoman``` should","Fragments":["be"]},{"Key":"a ```val```","Fragments":["or"]},{"Key":"```val``` or","Fragments":["```lazy"]},{"Key":"or ```lazy","Fragments":["val```"]},{"Key":"val``` .","Fragments":["Unless"]},{"Key":". Unless","Fragments":["I"]},{"Key":"Unless I","Fragments":["am"]},{"Key":"am mistaken,","Fragments":["```numberToRoman```"]},{"Key":"mistaken, ```numberToRoman```","Fragments":["is"]},{"Key":"```numberToRoman``` is","Fragments":["going"]},{"Key":"be reevaluated","Fragments":["each"]},{"Key":"know that","Fragments":["the"]},{"Key":"example exercise","Fragments":["also"]},{"Key":"exercise also","Fragments":["has"]},{"Key":"also has","Fragments":["the"]},{"Key":"object instance.","Fragments":["But.."]},{"Key":"instance. But..","Fragments":["You"]},{"Key":"But.. You","Fragments":["could"]},{"Key":"could avoid","Fragments":["creating"]},{"Key":"avoid creating","Fragments":["the"]},{"Key":"object instance","Fragments":["by"]},{"Key":"instance by","Fragments":["making"]},{"Key":"making Dna","Fragments":["a"]},{"Key":"Dna a","Fragments":["case"]},{"Key":" `val","Fragments":["pn","pn"]},{"Key":"`val pn","Fragments":["=","="]},{"Key":"pn =","Fragments":["s.replaceAll(\"[^0-9]\",","s.filter(_.isDigit)`"]},{"Key":"= s.replaceAll(\"[^0-9]\",","Fragments":["\"\")`"]},{"Key":" can","Fragments":["be:","be:"]},{"Key":"Also, parentheses","Fragments":["are"]},{"Key":"parentheses are","Fragments":["not"]},{"Key":"not required","Fragments":["in"]},{"Key":"required in","Fragments":["the"]},{"Key":"`if` pattern","Fragments":["match"]},{"Key":"match clauses","Fragments":["(you"]},{"Key":"clauses (you","Fragments":["can"]},{"Key":"(you can","Fragments":["even"]},{"Key":"can even","Fragments":["pattern"]},{"Key":"even pattern","Fragments":["match"]},{"Key":"on `pn.size`","Fragments":["to"]},{"Key":"`pn.size` to","Fragments":["clean"]},{"Key":"clean the","Fragments":["code"]},{"Key":" `raw.filter('0'","Fragments":["to"]},{"Key":"`raw.filter('0' to","Fragments":["'9'"]},{"Key":"to '9'","Fragments":["contains"]},{"Key":"'9' contains","Fragments":["_)`"]},{"Key":"- some","Fragments":["comments"]},{"Key":"some comments","Fragments":["to"]},{"Key":"comments to","Fragments":["paraphrase"]},{"Key":"to paraphrase","Fragments":["the"]},{"Key":"paraphrase the","Fragments":["regex"]},{"Key":"the intent","Fragments":["more"]},{"Key":"intent more","Fragments":["explicit."]},{"Key":"- use","Fragments":["of"]},{"Key":"object to","Fragments":["hold"]},{"Key":"the constants.","Fragments":["The"]},{"Key":"constants. The","Fragments":["object"]},{"Key":"object could","Fragments":["then"]},{"Key":"could then","Fragments":["be"]},{"Key":"used by","Fragments":["the"]},{"Key":"to verify","Fragments":["against"]},{"Key":"verify against","Fragments":["a"]},{"Key":"constant instead","Fragments":["of"]},{"Key":"- on","Fragments":["the"]},{"Key":"the regexes,","Fragments":["removed"]},{"Key":"regexes, removed","Fragments":["the"]},{"Key":"the parenthesis","Fragments":["(inspired"]},{"Key":"parenthesis (inspired","Fragments":["by"]},{"Key":"(inspired by","Fragments":["http://exercism.io/submissions/dde091a1c40e40c3af2241826a12bc69)"]},{"Key":"- allowed","Fragments":["\"?\""]},{"Key":"allowed \"?\"","Fragments":["as"]},{"Key":"\"?\" as","Fragments":["a"]},{"Key":" foldLeft","Fragments":["over"]},{"Key":"foldLeft over","Fragments":["keys,"]},{"Key":"over keys,","Fragments":["not"]},{"Key":"keys, not","Fragments":["the"]},{"Key":"going above","Fragments":["and"]},{"Key":"above and","Fragments":["beyond"]},{"Key":"and beyond","Fragments":["what"]},{"Key":"beyond what","Fragments":["the"]},{"Key":"tests cared","Fragments":["about."]},{"Key":"cared about.","Fragments":["You"]},{"Key":"about. You","Fragments":["could"]},{"Key":"also just","Fragments":["filter"]},{"Key":"filter so","Fragments":["that"]},{"Key":"digits are","Fragments":["handled."]},{"Key":"are handled.","Fragments":["And,"]},{"Key":"handled. And,","Fragments":["then"]},{"Key":"And, then","Fragments":["deal","have"]},{"Key":"then deal","Fragments":["with"]},{"Key":"case that","Fragments":["the"]},{"Key":"the leading","Fragments":["1"]},{"Key":"leading 1","Fragments":["is"]},{"Key":"1 is","Fragments":["included"]},{"Key":"is included","Fragments":["or"]},{"Key":"included or","Fragments":["not."]},{"Key":"nit, as","Fragments":["I"]},{"Key":"did a","Fragments":["similar"]},{"Key":"a similar","Fragments":["thing,"]},{"Key":"similar thing,","Fragments":["but.."]},{"Key":"thing, but..","Fragments":["I"]},{"Key":"but.. I","Fragments":["would"]},{"Key":"the Map('A'","Fragments":["-\u003e"]},{"Key":"-\u003e 0)","Fragments":["and"]},{"Key":"0) and","Fragments":["Set('A',"]},{"Key":"and Set('A',","Fragments":["'C',"]},{"Key":"Set('A', 'C',","Fragments":["'G',"]},{"Key":"'C', 'G',","Fragments":["'T')"]},{"Key":"'G', 'T')","Fragments":["as"]},{"Key":"'T') as","Fragments":["a"]},{"Key":"single map","Fragments":["val."]},{"Key":"map val.","Fragments":["And,"]},{"Key":"val. And,","Fragments":["then"]},{"Key":"have isValid","Fragments":["check"]},{"Key":"isValid check","Fragments":["the"]},{"Key":"check the","Fragments":["map."]},{"Key":"Do need","Fragments":["the"]},{"Key":"the ```to[Set]```","Fragments":["to"]},{"Key":"```to[Set]``` to","Fragments":["improve"]},{"Key":"the performance?","Fragments":["I"]},{"Key":"performance? I","Fragments":["think"]},{"Key":"should work","Fragments":["without"]},{"Key":"work without","Fragments":["the"]},{"Key":"the cast","Fragments":["as"]},{"Key":"cast as","Fragments":["well"]},{"Key":"well and","Fragments":["would"]},{"Key":"and would","Fragments":["be"]},{"Key":"check it.","Fragments":["It"]},{"Key":"It hasn't","Fragments":["even"]},{"Key":"hasn't even","Fragments":["passed"]},{"Key":"even passed","Fragments":["all"]},{"Key":"passed all","Fragments":["tests."]},{"Key":"tests. Just","Fragments":["checking"]},{"Key":"Just checking","Fragments":["exercism"]},{"Key":"checking exercism","Fragments":["system."]}],"prefix_len":2}