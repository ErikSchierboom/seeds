{"Nodes":[{"Key":" ","Fragments":["good.","the","and","to","Clean","The","And","Version","I","I","*","*","I'd","Creative","I","*","e.g.","*","@loraine","@santos","Well,","Should","Also,","The","What","PS:","I","You","In","Now","I","nice!","guess","Converted","Updated,","I","In","As","Are","And","Thank","Scala","You","And","a","you","Also,","`val","can","`val","Also,","Have","looks","suggestion:","again:","Take","see:","Yeah","So","This","The","Overall,","According","``foldRight``","We","```scala","52","53","54","55","56","57","```","Secondly","``getOrElse``","about","https://en.wikipedia.org/wiki/Geometric_progression","And","a","Cool.","The","Yeah,","Interesting","I","WRT","But","If","Maybe","I'd","This","Ok,","I","By","I","I","Very","I","But","In","I","Also","argStringOK","of","Very","Perhaps","line","and","`case","(general","Nice,","Usually","In","The","Happy","-----","_This","@glenda","Looks","1.","2.","I","A","This","better,","Avoid","If","You","if","Very","isShouting,","Can","I","I","Here's","it","val","val","phrase.wordCount","}","You","Type","You","My","But","test","**test**","----","+","+","+","Thanks","I","Instead","I","Nice!","You","You","This","TIL:","I","`==`","You","My","Do","That's","Very","Why","I","I","I","Tight.","Usually","In","The","Happy","-----","_This","@reagan","java.util.Calendar","Identical","Yes,","Although","Maybe","Very","I","Article","http://mauricio.github.io/2013/11/25/learning-scala-by-building-scala-lists.html","Yes,","If","What","Perhaps","I","I'm","Re:","Your","I","I","Usually","In","The","Happy","-----","_This","This","*","*","*","I","I","This","You","The","The","You","Thanks!","I","Usually","In","The","Happy","-----","_This","Sorry","vars,","Changed","The","Excellent","why","I","and","fine.","you","@mike","Here's","I","And","We","Then","Rephrase,","Funnily","szafirov,","Could","The","I","solution","for","```reverse.zipWithIndex.foldLeft```","A","Not","Your","```_DAY_IN_SECONDS```","and","I","First","I","Could","Didn't","Oh,","[1]","makes","It's","with","that","and","Out","Excellent","I","implicit","class","def","}","This","case","I","Since","I","Any","You","Usually","In","The","Happy","-----","_This","First","Usually","In","The","Happy","-----","_This","What´s","Usually","In","The","Happy","-----","_This","This","1.","2.","I","Thanks","1.","2.","Using","Elegant","You","Thank","Since","I","I","Spot","Yeah","Here's","I","Still","I'd","-","-","```scala","if(isShouting(speech))","else","else","else","```","Evaluating","-","-","Great","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Made","This","If","Optionally,","have","Done","Thanks","Conversion","As","*","*","*","no","\"total\"","and","Well,","And","Thanks","Problem","I've","Slightly","Whoops,","I","missing:","I","Sometimes","Perhaps","I","Ok,","One","Thanks!","The","The","wow,","but","and","Thank","You","Your","There","This","Another","object","def","}","This","statement","case","...","}","In","object","def","}","This","statement","case","...","}","As","Ok","Yup!","Because","I've","Opa","Followed","Will","If","Can","Pretty","Instead","I","IMO","just","and","I","Usually","In","The","Happy","-----","_This","Yes.","Is","Pretty","Usually","In","The","Happy","-----","_This","acc.","(btw,","I","Nice","(from","val","case","}","or","(from","Usually","In","The","Happy","-----","_This","It","``get``","I","It","In","Further","Nice","The","Shouldn't","You","I","you","and","Usually","In","The","Happy","-----","_This","Could","interesting","Improvement","TIL:","Test","It's","I","Got","A","Why","A","Consider","I","`greeting.toList.filter(alpha.contains).forall(_.isUpper)","There","Whoops,","I'll","@carley","Looks","I","Nice","Have","thank","It's","THanks","regarding","Regards,","Nune","There's","Usually","In","The","Happy","-----","_This","fine.","you","interesting.","Maybe","I","Your","A","This","I","Interesting","If","only","Try","you","alternatively,","Looks","1.","2.","3.","I","I","Indeed,","why","Hmm,","This","```","\u003cconsole\u003e:13:","map","```","Interesting","Usually","In","The","Happy","-----","_This","I","```","def","if","throw","}","s","}","```","Is","I","val","I","what","Ok,","In","If","btw,","@lyric","Isn't","fix","*","You","```scala","line.indexOf('?')","```","with","```scala","line.endsWith(\"?\")","```","*","*","Pattern","Looks","You","Hardcore","I","Having","Perhaps","Over","I","Ok,","But","If","interesting","but","```use","maintain","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","I'd","How","You","Again,","You","Unintentional","@danika","I","Just","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","a","Thanks","Map","I'm","I","It","In","i.e.","def","You","Nothing","You","First","`dnaString`","Loved","Might","@aaliyah","What","@orville","afaik","This","You","filter(_.toLowerCase.sorted","filter(_.toLowerCase","to","filter(x","\u0026\u0026","and","Nice","You","Nice","A","To","The","HTH,","Hans","Usually","In","The","Happy","-----","_This","Have","http://exercism.io/submissions/ce7bb88bbbfe4d1aa119413ef153d93e","I","I","yeah","`Keep","provided","Solve","Sorry,","btw,","Usually","In","The","Happy","-----","_This","The","Perhaps","This","*","*","*","I","Compiling","Removed","if","```num","instead?","another","in","you","the","and","in","as","and","One","Interesting","You","I","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","1.","2.","3.","Line","A","I","I","good","consider","A","If","I","Instead","I","Well,","Usually","In","The","Happy","-----","_This","Your","forgot","Well,","But","hint:","2nd","I","Some","*","*","*","*","Gaston.","You","unconventional","One","I","Looks","One","Usually","In","The","Happy","-----","_This","good.","you","At","Btw:","Perhaps","@kurtis","Why","not","in","In","It","Usually","In","The","Happy","-----","_This","@suzanne","scala","@zoe","Some","You","I'd","I'm","you","Have","Not","True,","Nice","You","Good","I","I'm","Smart","It's","This","return","My","@regan","thx","Usually","In","The","Happy","-----","_This","That","There","Other","You","I","Thanks","It","```","...","case","...","```","Also","Finally,","This","This","I","nice!","but","```scala","(a,b)","```","?","Ops!","You","you","you","```atbashLetterMapping","So","@alisa","How","looks","you","I","Right,","You","The","def","good.","I","And","might","+1","also,","Few","a)","b)","c)","d)","perhaps","Can","a","This","That","Even","I","`[^a-zA-Z0-9']`","The","Pretty","The","your","Can","a","//","Yes,","//","Ah,","//","These","//","Why","Oh,","Instead","@travis","You","I","Scala","I","And","Nice,","Line","Line","```","{","case","}","```","Line","Line","Line","Line","Line","@arvilla","Not","Or","I","Usually","In","The","Happy","-----","_This","Finally","You","Checkout","Not","You","Why","```mapValues```","And","you","(and","Usually","In","The","Happy","-----","_This","Boooh,","well,","For","With","Why","just","consider","perhaps","using","Usually","In","The","Happy","-----","_This","Changes","-","-","-","Thank","Changed","This","My","I","```","case","```","well,","As","@grayson","@roy","In","Not","The","Although","1.","2.","Naming","I've","Thanks,","I","That's","Would","ok,","But","hint:","1.","2.","3.","4.","5.","What","Oh","That'll","Sorry,","If","```Keep","Solve","Frankly,","Usually","In","The","Happy","-----","_This","The","I","And","Bug:","Well,","For","Or","Great","IMHO","Why","If","```Keep","provided","Solve","So","I","anyhow,","one","Scala","You","@coby","I","Maybe","But","@june","You","On","(Point,Letters)","I","no","you","@verla","ok,","although","enter","I","I'm","This","I","-I'm","-I'm","I","As","It","In","Using","http://exercism.io/submissions/5fc73403874e167c38e130f3","You","```","if","```","as","```","a","```","My","But","Anyway:","I","But","Thanks","Scalas","count(p:","guess","just","Неверно","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","One","```randomLetter```","What","btw,","nice","you","Usually","In","The","Happy","-----","_This","Interesting","I","Usually","In","The","Happy","-----","_This","good.","but","to","I","```scala","def","if","else","else","else","}","```","Remember","Another","I","implicits","Here","btw,","I'm","Can","Usually","In","The","Happy","-----","_This","You","I","Well","Look","Ideally'd","```seemsAngry```","almost","```require```","And","Oh,","It","It's","If","Does","this","I","Your","I","You're","You","I","```","if","one()","two()","```","And","explicit","Yours","flatMap","I","Usually","In","The","Happy","-----","_This","Pls","and","Nice","On","Avoid","`instruction.replaceAll(\"[A-Za-z]\",","Method","Thanks","instead","as","Yes,","hardcoded","tried","Oftentimes","``def","And","My","I","With","Second","Sure.","Would","Great","Usually","In","The","Happy","-----","_This","Thank","First","#asdasd","-","-","Perhaps","Usually","In","The","Happy","-----","_This","nice.","although","@ruben:","Fixed","nice!","oh","you","And","I","1.","2.","This","You","I","If","Most","This","Perhaps","I","I","It","suggestion:","(btw,","got","Ok,","The","interesting","do","and","what","it","Try","not","I","I","makes","that","but","Usually","In","The","Happy","-----","_This","a","will","nice.","Guess","Usually","In","The","Happy","-----","_This","Per","If","x.toUpperCase","to","What","I","For","Total","If","thanks","Scala","Instead","As","Well,","I","Pls","for","and","(I","Is","The","I","Regex","Nice,","```scala","greeting.trim","...","}","```","Then","I","Thanks","Seems","Why","Usually","In","The","Happy","-----","_This","This","Nice","For","```scala","private","def","m","}","```","Though","Good","I","I","```scala","private","m","```","Instead","Even","I","The","I","This","implementation","The","Using","case","als","case","e.exists(e","kann","e.exists(_.isLetter)","schreiben","http://exercism.io/submissions/fdd484706519e1a989c99ce2","*","*","*","*","Good","Could","val","Included","Moving","quickly","Really","Tiny","*","*","But","nice!","If","As","```that","provided","So","You","That's","Anyway,","@xzavier","I","As","This","The","Seems","I","I","Thx","@aurore,","I","Thanx!","Good","OutOfMemoryError:","Actually","I","We","You","Didn't","This","Usually","In","The","Happy","-----","_This","The","You","```s.toUpperCase","Other","Precondition","Usually","In","The","Happy","-----","_This","Yes,","I","Thanks!","You","But","(dna1","or:","(dna1","Again,","@keegan","Why","And","the","`v`","if","hint:","Here","You","The","I","I","interesting,","Another","Have","Thanks","Usually","In","The","Happy","-----","_This","A","Well,","I","You","But","Realised","First","1)","2)","I","@orrin","Thanks!","Neat,","A","Oh,","I","case","I","As","There's","I","I","But","After","This","I'll","When","And","True,","But","Hmm.","Why","The","one","another","btw,","Since","I","Minor","scratch","\u003e","good","as","Is","It","Thank","what","(btw,","and","you","no,","@cordell","to","```Keep","provided","Solve",";-)","Simplified","Nice!","Yes","I","Some","...","I'd","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","It","Your","No,","Yeah,","Very","You","I","looks","Tried","Nice","This","But,","for","I'm","Thanks.","Also,","1.","2.","1.","2.","3.","Usually","In","The","Happy","-----","_This","See","http://www.scala-lang.org/api/current/index.html#scala.collection.immutable.List@melany(p:A=\u003eBoolean):Int","It",":+1:","Couple","Since","Validating","Space","The","So","A","Well,","The","After","```","case","```","I","Yeah.","Your","Do","Looks","I","I","This","Usually","In","The","Happy","-----","_This","Thanks","The","I","Nice","I'd","Another","```scala","def","def","def","def","if","else","else","else","}","```","@verdie","sure,","I","BTW","No","No","No","`s.filter(_.isLetter).length","Convention","@aryanna","@era","I","That","Hint:","Looks","btw","Two","1.","2.","One","fine.","What","As","Excellent","Quite","I","*","*","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","I","re-implementation","Could","```","if(s1.length","else","else","```","which","That's","This","I've","Kept","you","`case","and","I","Hey!","My","firstDNAStrands.equals(secondDNAStrands)","which","for","Many","Concise","However,","I","why","and","understood","I'll","I","`nextInt`","nice","get","remember:","You","Wow!","much","you","You","http://exercism.io/submissions/a4a0d92759ca4f09edf950eb","Creating","Very","Thanks","Use","Locale.ENGLISH","Convention","Other","This","Perhaps","I","you","that's","it's","You","There","Abstracting","And","It","to","```The","in","Interesting","This","Feedback","Also:","[See","but","Why","But","I","I","this","You","In","Have","Usually","In","The","Happy","-----","_This","Hi,","Very","I","*","*","Usually","In","The","Happy","-----","_This","I","and","Formatting","Oh...","```s.endsWith(\"?\")```","Suggestion","```def","Good","Random","This","good.","you","another","Didn't","too","Scala","You","Probably","Pls","What","You","And",".length","In","@kayley","Did","I","You","And","At","actually","To","```_name```","And","Nice","You","interesting","This","At","(Edit)","Resubmitted...","schoolMap.getOrElse(grade,","you","apart","Usually","In","The","Happy","-----","_This","You","Nice!","```","def","...","}","```","Also,","One","Why","The","I","So","@okey","this","why","but","@janiya","solution","Usually","In","The","Happy","-----","_This","In","You","In","@chelsie","nice!","use","and","I'd","Interesting.","I","you","Seems","You","And","1.","2.","Probably","How","@makenzie","You","see:","Your","```","if()","```","waterfall","also,","This","*","*","*","Usually","In","The","Happy","-----","_This","Yep.","Thanks","Looks","If","I'm","Usually","In","The","Happy","-----","_This","I","message.filter(_.isLetter).length","isQuestion","/troll","I","At","Simple,","you","another","Take","Your","But,","These","This","I've","Thanks","You","And","Compared","What","Included","I","No","First","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","@jayda","why","I","I","Slightly","@milan","Looks","I","Nice","I","Super","I","Oh,","Second","I've","Have","You","dm;tp","Good","You","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Only","Thanks","Really","A","*","*","[1]","This","Instead","Thx","Rather","Yes.","Is","Interesting!","I've","You","```object","implicit","}```","That","use","great.","I","```strand","```squared```","this","*","*","*","Remove","Method","Lines","Line","simplified","For","def","Is","isEmpty","message.trim.isEmpty","This","Agreed,","if","for","```","if","else","```","But","I","What","code","Accidentally","additionally","and","a)","b)","My","@alexis","I","good.","I","Usually","In","The","Happy","-----","_This","-use","You","You","There","Both","private","Also,","still","compareTo","This","I","I","Take","`List.contains`","There's","I","here's","You","you'll","Good,","val","~","val","The","This","I","solution","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Strictly","Underscore","[1]","Thanks","I","I","it","If","Looks","1.","2.","3.","Thanks,","take","You","I","I","I","Why","Usually","In","The","Happy","-----","_This","Yes,","And","I","A","*","*","hehehe","I","If","```","scala\u003e","\u003cconsole\u003e:9:","accumulate((_+1),","```","vs:","```","def","...","}","```","```","scala\u003e","res2:","```","Since","Nice","-","-","-","Is","almost","but","also","A","right","You","And","Usually","In","The","Happy","-----","_This","I","Initial","Using","A","Usually","In","The","Happy","-----","_This","'def","I","it","val","var","for","usedNames.size","}","Wow,","I","You","Usually","In","The","Happy","-----","_This","Why","This","Usually","In","The","Happy","-----","_This","replaceAll","You","One","you","```scala","case","```","validLength","and","ok,","but","Then","number","And","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","My","Nice","Nice","Added","rather","you","and","Thanks","Rather","I'd","Is","Usually","In","The","Happy","-----","_This","Two","Thanks","Nicely","Good","Usually","In","The","Happy","-----","_This","Rather","I","You","Thanks","I","What","Hi","I","I","I","i'd","you","Reimplemented","You","Btw,","And","There","There's","You","it","This","Try","hehehe","Not","Usually","In","The","Happy","-----","_This","I","The","I","To","Can","if","Good","You","This","Usually","In","The","Happy","-----","_This","Permutations","Этот","solution","Usually","In","The","Happy","-----","_This","``phrase.find(c=\u003ec.isLetter)``","I","you","a","Your","Using","Usually","In","The","Happy","-----","_This","A","-","-","@juana","nice!","but","```require(nucleotides",":-)","only","According","Usually","In","The","Happy","-----","_This","`numAlphas`,","I","Purely","Naive","Searching","def","works","Usually","In","The","Happy","-----","_This","That's","Doesn't","Other","you","Since","Usually","In","The","Happy","-----","_This","Not","Robot","I'll","Interesting.","EDIT:","I","You","toString","val","looks","you","Can","Instead","In","Apparently","scala","I","Would","I","In","In","I","Trailing","The","The","I'm","There","as","http://daily-scala.blogspot.de/2009/09/unfoldleft-and-right.html","The","I'd","Yeah,","I'm","Or,","Still,","Thanks","I'm","I","Looks","As","def","This","A","Although","For","All","Try","I","I","Thanks","Your","You","I","I","You","It","guess","Instead","I","You","But","Using","I","Argument:","Rewrote","Final","define","make","Then","Thanks.","Oo!","Do","\u003e","My","The","Thank","Looking","I","IIRC","In","Do","you","Indeed,","Hi,","You","`","HTH","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","I","We","@estrella","nice","I","val","I","```scala","val","case","}","```","`Silence`","```scala","object","def","}","object","def","}","```","I","I","When","I","Usually","In","The","Happy","-----","_This","This","Might","Nice","Why","Are","```Please","Try","Usually","In","The","Happy","-----","_This","This","good.","Instead","The","1)","2)","In","http://twitter.github.io/effectivescala/#Types","In","I","Agreed","Thanks","I","Functional","*","*","Style:","*","*","Testing","Great!","-","-","-","The","I","You","This","You","`{","good.","you","nice!","and","much","QuestionWithNumbers","Instead","I","A","In","statement.exists(","No","All","I'm","The","Significant","```","(candidateWord","```","The","@vesta","This","You're","Nice!","Just","Thanks!","Interesting","Very","I","If","You","Yes.","Note","The","As","Thanks","Using","good.","The","You","you","and","You're","You","Really","I","I","name","consd?","what","Nice","A","I","if","Aye,","Try","You","what","But","This","Two","-","-","The","I","*","*","Usually","In","The","Happy","-----","_This","`\"0\"","Heavily","Usually","In","The","Happy","-----","_This","I","You","*","you","I'm","Oh","Looks","asdasd","```","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","```","why","You","This","isSublist1","why","ln","Regex-fu.","Nice","For","Super","http://exercism.io/submissions/2cc88288722f6e7317388e7e","*","*","*","Usually","In","The","Happy","-----","_This","Nice.","I","If","Looks","It's","Is","First","I","Your","Your","A","This","The","Hi","What","@sydnie","right,","```myDB.toSeq```","finally,","here","thanks!","interesting","I'm","@torey","that","I","many","a","-","-","-","-","thanks","the","http://exercism.io/submissions/0147832e7ab4278ac0542eca","mutable","The","a","interesting,","but","And","btw,","perhaps","A","Included","a","@robyn","@camren","Yeah,","Wow!","I","This","Ah","Ok,","\"Keep","provided","Heavily","Perfect.","Didn't","Should","interesting","I","a","I","You","Avoid","What","I","Seems","what","Scala","Nice","```scala","num","case","case","case","}","```","The","And","instead","and","(I","I","you","Nice,","it","I","Usually","In","The","Happy","-----","_This","Nice","I","How","Absolutely","Really","As","```case","Can","The","For","I","Usually","In","The","Happy","-----","_This","@pansy","The","Another","You","(and","And","@teresa","Changes:","-","-","-","-","Good","simplified","@efren:","b/c","and","You","(btw,","Removed","good.","guess","You're","looks","Usually","In","The","Happy","-----","_This","Good","Hi,","Was","As","Other","This","Slightly","It","Modified","You","```chat.replaceAll(\"","You","And","pls","when","what","Replaced","`.count`","looks","If","Doh!","Since","I","I","This","Think","I","nice!","just","Thanks","One","Your","Well","looks","I","guess","You","You","If","Using","And","Included","isShouted","as","The","An","Or,","Usually","In","The","Happy","-----","_This","You","For","Thanks","```scala","def","val","val","head","}","```","Great","A","I'm","BTW,","The","Is","You","I","However","There","Take","Using","Also","By","```scala","(s1","```","There's","Thought","Good","I","Also","I","Interesting","However,","It","Lovely,","But","What","I","I","Have","I","I've","I","I'm","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","There","You","Think","Naming","Also","I","@agustina","Again,","Ranges","Fixed","Good","Looks","Perhaps","Div4","Usually","In","The","Happy","-----","_This","Wow.","I","def","def","def","It","Again,","Other","nice","Usually","In","The","Happy","-----","_This","nice","Wow,","This","*","*","There","Too,","good.","you","and","I","I","Awesome.","Should","Passes","There","The","solution","I","Usage","You","Hi,","I","Thank","By","It","Alternatively,","Can","They","Ok,","No","Sounds","I","Also","Actually,","```\\w","```OrderedValues```","Usually","In","The","Happy","-----","_This","Looks","val","simplification","good.","I","And","```dna","Very","You","A","despite","I","Your","implemented","Usually","In","The","Happy","-----","_This","Oeh","Looks","I've","In","Usually","In","The","Happy","-----","_This","Looks","Variation","solution","(I","you","attempting","Usually","In","The","Happy","-----","_This","yeah","ok,","And","@jermaine","1.","you","initialMap","it","This","2.","3.","@jermaine","Now","For","The","I","Of","There","But","I","*","*","*","is","@wyatt","thanks!","as","As","Usually","In","The","Happy","-----","_This","If","This","if","btw,","1.","2.","3.","I","Your","I'd","Folding","Why","If","Thanks","The","I","Cool,","@dorthy","Even","I","I'd","The","```","val","require","```","@hunter","Thank","Please,","You","Also,","I","yes,","again:","But","```Keep","provided","Solve","So","Usually","In","The","Happy","-----","_This","nice!","as","I","Scala's","The","Trade","-","-","-","It","That","I'll","You","Keeping","This","You","might","another","btw,","This","Usually","In","The","Happy","-----","_This","You","Make","What","Perhaps","Do","This","Looks","looks","small","make","in","Unfortunatelly","Nice","I","some","And","btw,","And","Shouldn't","IMHO","can","One","Cool","One","True.","Another","Well","I","I","Did","Wondered","I","Figured","In","Would","Not","I","Good,","I","this","I","Furthermore,","Simplified","Scala","Improved/simplified","I","Perhaps","Strings","Usually","In","The","Happy","-----","_This","you","you","and","Usually","In","The","Happy","-----","_This","I","A","As","@maryjane:","For","I","According","Your","And","This","@william","You","And","As","This","I","I","Usually","In","The","Happy","-----","_This","The","Also..","Yes,","Same","Nice","Only","I","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Used","Solution","the","and","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","You","Good","Some","Instead","Instead","There's","I","Yes,","Looks","I","-","-","I","At","solution","I","You","```scala","phrase",".split(\"[^\\\\w']\")",".groupBy(_.toLowerCase)",".filterKeys(_.trim.nonEmpty)",".mapValues(_.size)","```","There's","You","-","-","-","-","-","nice.","As","For","For","phrase.trim.isEmpty","I","It's","I'mm","good.","you","And","you","I","why","I","@hilda","just","```","val","sqr(sum)","```","instead","it's","No","I","What","Also,","Thank","You","And","Rather","case","This","This","The","This","FYI,","Code","Usually","In","The","Happy","-----","_This","Pretty","I","do","The","In","And","```dna","(but","I","I","I'd","You","btw,","Usage","There","And","Thank","You","Felt","Usually","In","The","Happy","-----","_This","Looks","The","There's","A","left","Once","As","Any","We","you","and","guess","or","Usually","In","The","Happy","-----","_This","Thanks","much","You","And","(and","Ignore","you","Usually","In","The","Happy","-----","_This","I","I","I","I","You","For","http://exercism.io/submissions/325ca2c346414a5b9475613754b9b316","Agreed,","I","Overhead","Thanks","1.","2.","3.","Usually","In","The","Happy","-----","_This","Nice.","Well","In","The","phrase","in","∃c:","I","szafirov,","I","hi","try","Perhaps","Straightforward","As","So","Shouldn't","In","Here","I","good.","you","a","-","-","-","-","have","While","The","Instead","Rest","I","The","No","If","@darwin:","The","Hello,","`alphanumeric`","HTH,","Hans","Looks","*","*","*","Good","Nice.","Looks","Just","Good","Note","Could","Good","I","Try","If","Thanks,","this","That","Instead","Instead","And","Out","I","Couple","```accumulate[S,T](...)```","But","```Keep","provided","Solve","So","I","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","It","You","I","Thanks,","It","However,","Why","1.","2.","3.","The","Yes,","This","Reworked","While","Yes","I","Usually","In","The","Happy","-----","_This","Good","interesting","perhaps","take","imperative","try","@kiel","interesting","small","(","and","looks","just","Renamed","`s1`","Since","Thanks","You","looks","This","Also,","You","simplification","@zander","nice","but","Changed","Try","There","Didn't","Usually","In","The","Happy","-----","_This","Uses","Good","But","Usually","In","The","Happy","-----","_This","I","You","If","I","Looks","I","You","While","The","This","That's","Otherwise","But","good.","only","and","PS:","```val","Resubmitted","I","I've","```","test(\"list","val","1856,","1928,","1996,","2064,","2136,","2208,","2276,","2348,","for","println(year)","if","else","}","}","```","I","Thank","True,","I","I","I","The","Both","I've","Can","Discovered","Still","For","Is","And","Got","Can","I","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","@alberto","I","I","I","I've","In","TBH","Ah,","Also,","scalac","should","Good","Don't","Cleanup","Never","I","Usually","In","The","Happy","-----","_This","another","I","Really","great","you","But","just","Usually","In","The","Happy","-----","_This","Smart","Tip:","I","Usually","In","The","Happy","-----","_This","so","perhaps","I","(and","Should","So","This","The","Usually","In","The","Happy","-----","_This","First","Thanks.","you","Usually","In","The","Happy","-----","_This","you","and","Thanks","The","Also","To","```","(a","```","I'll","Ok,","Thanks.","Inspired","I","What","I","I","@davin:","no","First","I","Also","I","True!","Credit",":-)","Sure","@ross","I","You","How","Extracted","Had","I","something","input.map(SplitByRegex).reduce(ReduceFunction)","and","groupBy(identity)","nice","A","interesting,","try","Changes:","*","*","Usually","In","The","Happy","-----","_This","Well,","No","Hmm,","There","Can","Suggestion:","Version","Pls,","You","This","And","You","Other","You","```scala","number.take(3)","number.takeRight(4)","```","I","Would't","One","It","It","1.","1.","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","in","And","instead","Constants","And","This","No","It","Learned","One","Hi","Been","Picking","@elisha","@elisha-isaacs,","I","```scala","val","str","case","}","```","One","If","Don't","Unlike","This","if","\"Fine.","}","else","\"Woah,","}","else","\"Sure.\"","}","else","\"Whatever.\"","}","I","`foldLeft`","How","you","Sorting","Usually","In","The","Happy","-----","_This","I","I","You","My","Looks","```","def","```","Thanks!","-","type","val","regarding","fixing","Not","-","-","-","-","-","-","@queenie","I","And","What","Hi,","Again,","Also","Should","movement","refactored","I'm","To","But","again,","This","And","I","If","```StartOfTheMonth```","The","classical","you","can","nice.","You","Changes:","*","*","Doesn't","Can","Simple.","map/reduce","You","With","your","btw,","what","You","I","now","Usually","In","The","Happy","-----","_This","Switched","Seems","I","Clarification:","I","First,","Decided","Used","Usually","In","The","Happy","-----","_This","@ally","Let","Thanks","name_assigned","can","Please","What","SI","It","if","```class","then","You","interesting!","I","Hi","thanks","*","*","*","Implicit","Thanks","I","I","-","-","-","On","Looks","Thanks","Really","*","*","interesting","can","or","Extracted","After","Your","Regarding","In","...Your","You","Use","Not","You","As","I","Please","I","Thanks","I","cleanup","Even","I","Hm,","@mathilde","Hamming","@mathilde","Typically","@cary","@tina","I","@ruthe","E.g.","Versus","Again,","How","Clever,","The","There's","This","Length","The","`[^a-z0-9']+`","But","Discovered","Changes:","*","nice!","A","I","anagrams","anagrams","I","Ooop","Scala","You","```def","Not","It's","For","http://exercism.io/submissions/efa879418fea44f2be7ba3c9c2f9f617?i=1","Interesting","What","The","But","Looks","Oops,","This","I","When","I","IsShouting","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","I","Didn't","Your","Strings","Or","And","@dejuan:","Not","I","And","Nice,","If","Feels","I'd","Also,","I'd","There","Pattern","But","implemented","if","you","Hi","A","2","1)","2)","Take","1)","2)","3)","4)","I","In","This","Thanks,","I","Liked","Nice","I","This","Looks","hehehe","again:","and","ok,","if","```def","or","```val","If","yeah,","There","You","That","for","See","now","Thanks.","if","I","can","There","The","But","Not","Formatting","Seems","@eldridge,","Usually","In","The","Happy","-----","_This","fixed","Keep","provided","Solve","Usually","In","The","Happy","-----","_This","Thanks","Your","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Best","Usually","In","The","Happy","-----","_This","Hi,","Thanks","I","(main","Hey","instead","and","Thanks","Hum...","About","There's","Also","private","works","I","Consider","While","Considering","Did","You","The","```scala","val","input","//","```","Thanks.","I","Usually","In","The","Happy","-----","_This","interesting","You","Condirion","good","Can","@jillian","Thank","I","Please,","Thank's","Hmm,","*","*","*","moved","Ha!","@laurine","If","That","Seems","This","I","@darwin","the","also,","This","I've","Thanks","ok.","The","But","Also","They","I","A","if","(I","Wow","The","I'm","Also","Instead","```(1","(or","This","As","Well,","Consider","Yeah,","I","http://markusjais.com/scalas-parallel-collections-and-the-aggregate-method/","solution","Redundant","Thanks","Try","```","s","case","case","...","case","}","```","Looks","You","And","Scala","As","Words","That","Once","All","Usually","In","The","Happy","-----","_This","Looks","instead","and","Usually","In","The","Happy","-----","_This","ok,","some","and","when","At","This","isShouting","Looks","The","I.e","1.","I'm","I","Instead","Or","You","Interesting,","Two","In","And","This","Usually","In","The","Happy","-----","_This","constants","then","solution","This","Now","I","Also","You","Minor:","-","-","-","My","The","Hi,","(2L","Thanks","good!","if","In","```points(letter.toUpper)```.","Is","Try","I","*","*","I'll","fixed","Usually","In","The","Happy","-----","_This","You","I","I","I","But","then","val","?:)","I","looking","http://www.codecommit.com/scala-style-guide.pdf","hah,","let's","I","Better","You","If","Do","I","Your","@boris","can","Thank","Is","I","1.","2.","On","Do","Minor","if","how","I","Instead","You","```scala","val","m","```","difference","*","*","I","I'm","Well,","Try","hint:","Thanks","ok","Usually","In","The","Happy","-----","_This","Using","Nekem","class","val","val","throw","}","text.foldLeft(default)((acc,","}","val","}","Szia","A","Mit","Gábor","Perhaps","I","This","Usually","In","The","Happy","-----","_This","c.isDigit","what's","perfect!","last","but","Take","looks","you","in","and","you","As","Since","Trying","case","but","@chanel:","*","*","*","Looks","I","Did","You","if","I","Worked","This","Captures","I","This",":)","You're","`GregorianCalendar`","No","Seems","Nice.","Incrementing","`balance","looks","you","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Cleaning","I","Usually","In","The","Happy","-----","_This","I","you","Ok,","@emanuel","I","I","You","@neva","I","Why","And","For","And","In","and","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Looks","You","You","Looks","It's","This","I","Is","Now","ok,","This","you","better","I","Usually","In","The","Happy","-----","_This","Looks","Alternatively","Usually","In","The","Happy","-----","_This","Personally","I","`def","You","와우","두가지","`match`문","`x","Usually","In","The","Happy","-----","_This","simplified","foldLeft","This","@leslie:","\\w","@leslie:","I","Also","If","Nice!","Re:","I'm","@laurel:","and","```","/[^\\w']+/","[^\\w']+","Quantifier:","\\w","```","This","I","Looks","a","sophisticated","I","But","good","about","I","The","`case`","I've","Also,","Finally,","using","Small","@jacklyn","Avoiding","I","On","I","However,","So","Not","Cool,","I","I","Simplified","-no","-use","Like","I","Thanks","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","You","Braces","You","short","why","don't","Usually","In","The","Happy","-----","_This","Thanks.","Take","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Look","I","1.","2.","This","*","*","Love","Tail","Usually","In","The","Happy","-----","_This","only","@elaina","I","Anyway","I","At","Pretty","can","After","Did","just","Yes,","Same","What","And","The","Speaking","One","Usually","In","The","Happy","-----","_This","tricky","I","And","Minor","Can","Usually","In","The","Happy","-----","_This","I","Just","Usually","In","The","Happy","-----","_This","``sortWith(_\u003c_)``","``var``","First","Included","``Tuple2``","Usually","In","The","Happy","-----","_This","Looks","one","Thanks,","Try","I","You","Say,","______________Decimal_______Binary","Eggs","Peanuts","Shellfish","Strawberries","Do","Also,","I","I","simplified","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","http://exercism.io/submissions/a97f69b045ef96e904d5f886","No","I","good!","the","make","Looks","Instead","I","Usually","In","The","Happy","-----","_This","had","is","private","def","def","factoryName","}","Probably","Usually","In","The","Happy","-----","_This","fine.","as","-","-","You're","Your","Can","You","for","The","and","Can't","Anyways,","If","I","Could","My","Do","Pattern","override","val","val","s\"($code)","}","I","!dna1.length.equals(dna2.length)","In","dna1.length","Thanks","After","Change","Also","and","Usually","In","The","Happy","-----","_This","instead","pls","Speaking","null","I","Moved","``exists``","At","My","I","what","and","There","*","*","*","Mutability","Nice,","Good","I","why","you","Maybe","Usually","In","The","Happy","-----","_This","You","@harold:","You","This","Thanks.","For","In","There","Also,","I","```scala","strand1.zip(strand2).count","```","This","Not","Usually","In","The","Happy","-----","_This","I","I","It","@candida","I","Glad","I","Looks","I","I","Using","nice!","If","You're","1.","But","1.","2.","3.","ah,","`this.copy(location","that","maybe","implemented","nice","Tried","After","You","As","nice","But","You","Added","I","But","I","Usage","Who","Perhaps","True,","you","and","interesting","The","In","```import","Is","I","So","Thanks","One","This","Thanks","Things","1)","2)","3)","4)","5)","FWIW,","why","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","that","what","I","Already","not","You","Looks","I","I","```scala","s1.zip(s2).count","```","Shorter:","Usually","In","The","Happy","-----","_This","The","I","Two","*","*","Not","Consider","I","I","Rewrote","Nice,","See","No","Thanks","Could","Also,","Alright,","Looks","I","Alright.","interesting","Btw,","```(0","As","A","Usually","In","The","Happy","-----","_This","If","Looks","1.","2.","Nice","My","Насколько","Однако","\"sbt","I'd","Ты","Usually","In","The","Happy","-----","_This","Nice.","Ok,","Usually","In","The","Happy","-----","_This","@lacey","You","When","The","Lazy","\"YOU","About","Here","By","\u003e","edit:","Wow,","Names","lettersOnly","You","Of","Hi,","```scala","else","```","to","```scala","else","```","just","```rand```","you","```robotName```","```setName```","missing:","Given","The","It","```scala","val","```","This","Nice","you","good.","you","instead","Usually","In","The","Happy","-----","_This","solution","According","Why","As","Why","Neither","the","I","One","I","@victoria","I'll","`chars`","I","why","I","IMO","The","With","But","if","but","IMHO","Why","I","The","Also","This","For","But","Looked","This","A","Nice!","What","@hayley","You","The","And","So,","Do","So","If","Regarding","//","lazy","Random.shuffle(fibs)","I","I","I","Hi","I","I","I","Beside","A","Note","See","speaking","but","thanks","Interesting","Consider","This","Zip","Wow!","I","not","you","avoid","and","I","Heavily","Removed","You","And","As","To","Why","You","Doesn't","What","Yeah,","Yes","this","simplified","I","If","Just","(","The","try","*","*","*","Stole","Standard","Thanks","Looks","In","Instead","I'd","Ok,","This","In","You","For","Scala","Have","Remove","Avoid","No","No","Method","`isYell`","Kind","right.","I","\"So","Totally","count","Yes,","Much","Small","@maud","Type","But","You","Much","You","And","Also","Calling","Usually","In","The","Happy","-----","_This","@quentin","Performance","Ok,","Oh","Well,","String","\u003e","Can","I","About","this","another","Looks","making","You","@tracy","Really","While","This","Usually","In","The","Happy","-----","_This","Solution","good.","As","There","At","The","Well,","http://alvinalexander.com/scala/scala-recursion-examples-recursive-programming","@leanne","*","Thanks","*","I","*","Here","Yes,","I","-","-","The","(sorry","Thanks","The","I","I","You","I","The","The","As","I","I","Introduced","1.","2.","I'm","I","Have","As","Generating","I'd","Try","```val","val","...","}```","and","```5```","don't","@chase","I","I","Usually","In","The","Happy","-----","_This","1.","2.","Usually","In","The","Happy","-----","_This","consider","also","instead","Thanks","One","good.","btw,","case","The","Better","Using","Checkout","Thanks","It","In","Colonel-sanders","I","The","A","Looks","Scala","And","Instead","As","Some","To","Math.min(src.length,dest.length)","I","Usually","In","The","Happy","-----","_This","Yes,","nice!","you","Fixed",":)","Like","To","Inside","Perhaps","As","lazy","lazy","Intention","But","You","Also,","you","sorted","I","one","Completed","The","Also,","This","Any","a","What","You","there","the","-","-","I","I","Nice","btw,","Instead,","And","yes","instead","Consider","and","speaking","With","I'd","This","It","You","Consider","Take","I","Introduced","Don't","Can","Thanks","I'm","Awesome!","I","What","Instead","```","if","```","I","```","if","```","Also","looks","works","After","Ignore","Thanks!","number.take(3)","In","I","Usually","In","The","Happy","-----","_This","Thanks","very","you","Removed","You","```unapply```","You","good.","for","and","Ok.","Explicit","require(h1.length","Usually","In","The","Happy","-----","_This","I","Thanks","I've","Your","You","The","Use","If","i","I'm","But","```","object","val","def","case","case","}","}","```","get","In","Since","please","Just","Looking","I","This","simple","One","When","I've","A","Triangle","instead","You","can","You","Stole","Idea","Currently","This","could","The","Why","1.","2.","3.","or","case","...","well,","also","2nd","Perhaps","You","if","Other","Unfortunately,","Nice:)","A","Why","You","GOOD","good.","remove","one","if","also,","Usually","In","The","Happy","-----","_This","```foldLeft```","why","First","Usually","In","The","Happy","-----","_This","Why","Why","Struggled","Usually","In","The","Happy","-----","_This","Use","Your","val","into","val",",","I'd","Interesting.","Thanks","Rather","```scala","(a.toList","case","}","```","There's","You","At","That's","I","By","Ahahahah,","it","I","No","It's","I","Just","Usually","In","The","Happy","-----","_This","Looks","Nice","Minor","`val","You","Using","I'm","This","Nice","Usually","In","The","Happy","-----","_This","try","You","Usually","In","The","Happy","-----","_This","You","Is","Hey,","Actually","The","I","Are","1.","2.","3.","Want","[1]:","[2]:","Unfortunately","And","Unfortunately","I","+1","Why","And","```foldLeft```","I","Usually","In","The","Happy","-----","_This","You","@halie","hmm,","Personally","But","Let's","The","I","I","http://orig01.deviantart.net/ab19/f/2012/198/3/2/32cbd1232d6f44ee3c4450d42f01a1c2-d57k84m.png","In","`implicit","def","So","Usually","In","The","Happy","-----","_This","fine.","as","Usually","In","The","Happy","-----","_This","I'm","@paris","Consider","I","But","Although","@edwina:","I","you","and","Usually","In","The","Happy","-----","_This","Looks","my","solution","Thanks.","That","Wow,","This","@dana","Scala's","So","I","Thanks","I","I","You","Yes,","I","Done","You","Usually","In","The","Happy","-----","_This","Hey,","Also,","Instead","It's","Please","good,","You","This","A","The","this","But","The","Done,","You","nice","But","Why","```","Map('G'","'C'","'T'","'A'","```","Works","How","Using","To","Does","Thank","I","I","@lura","isDivisibleBy","Have","You","Ah,","There","The","Thanks","I","I","Is","Nice","You","Also,","I","Usually","In","The","Happy","-----","_This","you","@aurelio","Fixed","I'll","Looks","If","I","I'm","This","Looks","You","Instead","```scala","val","case","}","```","had","Are","candidates.filter(_.toLowerCase.sorted",".foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e","look","candidates.filter(w","w.toLowerCase.sorted","\u0026\u0026","Of","Probably","filter(_.isLetterOrDigit)","For","Otherwise","you","hint:","Probably,","In","Wouldn't","I","You","zipping","First","So","Replaced","you","for","Replace","case","looks","case","or","case","Usually","In","The","Happy","-----","_This","don't","you","-","-","Thanks","You","And","make","Unfortunately","Must","```","it","an[IllegalArgumentException]","Hamming.compute(\"AAACTAGGGG\",","}","}","```","You","None","I'm","Right,","You","Updated","I","Do",".filter(candidate","Then","It","Why","god","Use","This","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","Simplified","@eduardo","foreach/flatMap","These","There","Technically","a","(imagine","Of","@delores","Hope","you","pls","in","as","CamelCase","(Even","http://exercism.io/submissions/091568744bf00f6a5e692000","Yes.","```numberToRoman```","Passed","Did","Simplest","I","`zip`","We","The","I","try","In","The","Cool.","The","And","Consider","Since","Client","in","ok","you","You","only","So","Btw,","It's","I","Probably","I'd","good.","But","db","And","Didn't","you","there","there","and","as","Compared","Usually","In","The","Happy","-----","_This","It","But","Usually","In","The","Happy","-----","_This","You","What","Missing:","all","you","and","Personally","Accidentally","In","Why","You","To","```randomizeAsciiCodes.take```","What","In","Usually","In","The","Happy","-----","_This","Some","1)","phrase.toLowerCase",".replaceAll(\"[^\\\\w\\\\s,']\",","2)",".split(\"\\\\s+|,\\\\s?\")","3)",".groupBy(s",".mapValues(_.length)","should","Hi","filter","I","Can","I","Is","Instead","Felt","Excellent","You","Oh,","Rather","Fixing","A","MultiMaps","added","I","interesting","there","You","Usually","In","The","Happy","-----","_This","I","Hey,","thanks","The","The","I'd","````cmd.forall(","(c:Char)",")","````","with","````","to","What","I","I","Anyhow:","As","nice!","only","Interesting","I","Thanks,","Hi,","there","\"Keep","provided","Solve","You","Perhaps","Btw,","And","Optimized","If","pattern","Updated.","note","StringOps","Why","``foldLeft``","why","as","You","Now","I","Usually","In","The","Happy","-----","_This","the","why","you","Whoops,","the","can","The","Yeah,","That's","Have","Once","`raw.filter('0'","can","`raw.filter(_.isDigit)`","Good","no","the","```","require(str.forall(exp.contains(_)))","```","I'm","Having","I","How","It","good","you","I","*","-Totally","*","-Haha,","*","-Thanks!!","*","-not","Minor","*","*","*","Out","I","moved","@damien","Is","Just","```scala","(s1","case","diff","}","```","I","A","Additionally,","Usually","In","The","Happy","-----","_This","good.","Two","From","To","Aha,","Usually","In","The","Happy","-----","_This","as","If","Also,","Fixed","This","I","I","mutable.Map[Int,","btw,","consider","you","Removed","This","Some","1.","2.","3.","4.","My","You","And","solution","Usually","In","The","Happy","-----","_This","trade","But","What","I","instead","Also,","no,","you","@torrey","you","and","an","interesting","one","I'd","filter","nice.","I","Usually","In","The","Happy","-----","_This","A","There's","Cool","This","With","I'd","Another","They","I'll","I","In","Operations","`until,","Operations","`zip,","The","I","Like","Btw","I","Just","\"The","And","```scala","def","strand","}","```","\"Write","If","That","Scala's","Nicely","You","Avoiding","and","Instead","good.","as","for","instead","IMHO","def","Why","Just","Usually","In","The","Happy","-----","_This","interesting","I","Hmm.","well,","One","Everything","I","I","good.","I","If","http://daily-scala.blogspot.de/2009/09/unfoldleft-and-right.html","A","The","Interesting","First","I","You","Usually","In","The","Happy","-----","_This","But","Because","why","It","nice!","you","@hiram:","So","@dina:","Thanks","Usually","In","The","Happy","-----","_This","I","added","sorry,","Looks","I","Good","it","Other","This","I'll","This","use","Usually","In","The","Happy","-----","_This","Included","You","Maybe","NOTE:","you","why","Ok,","Try","And","I","interesting","btw,","Ignore","interesting","If","just","Why","this","Why","Yes,","Turned","I","@jackson","Should","What","@dudley","there","It","I'm","@ardella,","Hi,","Only","If","Frankly","I","you","Was","try","there","If","However,","One","I","Not","Changed","If","@sydney","Another","I","Interesting,","I'm","nice","But","As","Didn't","@hilda","Hi","One","GIGASECOND","and","But","My","But","There","```","case","def","}","```","and","```","class","hey(statement:String):String","case","case","}","}","```","@alicia:","Consider","This","Yeah,","You","two","you","You","Pls","Do","And","Can","Thanks","...","Usually","In","The","Happy","-----","_This","This","Rewrite","This","@holden","And","I","Using","@freida","ok,","great!","perhaps","\u003e","Yup,","*","*","*","A","*","*","*","I","Nice","I","EDIT:","your","your","Thanks!","Nice","I","The","The","Looking","Also,","You","`val","val","val","cleaned","case","case","}","}`","\u003e","100%","\u003e","I'm","The","Ahhh,","Usually","In","The","Happy","-----","_This","you","you","```ch","I","Regardless,","Given","I","Remove","I'm","I've","I","I","I","I'm","My","Nice","Indeed","It","I","guess","actually","but","I","Rather","Finally,","I'd","I","For","def","cleanNumber","I'd","def","But","Usually","In","The","Happy","-----","_This","thanks,","You","require(seq.forall(nucletide.keySet.contains),","I","I"]},{"Key":" the","Fragments":["`get`","check","usual","solution","```|```","```update(update(...```","usual","instances","reasons","```if-else```","usual","conditionals"]},{"Key":"the `get`","Fragments":["function"]},{"Key":"`get` function","Fragments":["might"]},{"Key":"function might","Fragments":["be","be"]},{"Key":"might be","Fragments":["given","just","better","some","to","easier","more","preferable)","simpler,","even","more","just","useful","better","easier","like","declared","quite","efficient,","nice","able","missing:","any","easier","a","ok","inefficient","too","the","a","worth","still","just","a","clearer","some","simpler!","wrong","more","simpler","broken","zero.","better"]},{"Key":"be given","Fragments":["some","names"]},{"Key":"given some","Fragments":["better"]},{"Key":"some better","Fragments":["name.","name","solutions","name","name"]},{"Key":" and","Fragments":["you","you","perhaps","the","it","you","isn't","for","there","not","very","you","you","could","you","why","let","again","I","it","you","pls","about","you","there","instead","I","if","why","I","keep","there","as","one","scala","what","what","for","there","there","do","about","pls","instead","you","there","you","you","my","-","perhaps","the","in","if","regex","pls","then"]},{"Key":"and you","Fragments":["can","could","could","could","might","can","cannot","do","won't","could","can","don't","may","can","can","should","may","had","could"]},{"Key":"you can","Fragments":["just","say","simplify","get","simplify","avoid","do","also","grasp","google","simplify","(here","get","get","call","write","avoid","omit","try","see","get","check","use","refer","turn","annotate","declare","get","interchange","try","simplify","use","turn","use","(and","simplify","also","try","shorten","\"removeTrash\"","omit","just","get","write","also","say","use","also","avoid","just","use","try","make","operate","put","usually","keep","remove","omit","just","use","even","`count`","get","make","also","avoid","`filter`","use","use","just","try","simplify","just","use","make","should","then","just","directly","just","do","use","use","just","parse","just","just","leave","even","have","have","implement","treat","do","go","shift","modify","get","clean","omit","use","always","always","code","avoid","get","use","use","map","just","use","just","find","find","do","make","manipulate","apply","see","try","combine","go","simplify","nicely","remove","probably","see","replace","remove","use","just","omit","do","try","do","often","try","simplify","have","also","also","get","usually","use","turn","say","use","further","turn","live","use","move","do","just","get.","directly","immediately","define","even","use","replace","use","do","use","use","mis-/overuse","see,","also","assign","have","also","omit","just","omit","avoid","give","think","shorten","```map```","simply","call","simplify.","use","apply","look","use","replace","call","simplify","use","remove","use","pattern","have","simplify","simplify","clean","avoid","still","use","as","speed","use","avoid","simply","create","chain","actually","replace","simplify","simplify"]},{"Key":"can just","Fragments":["omit","do:","use","use","reassign","use","say","leave","operate","use","use","reuse","say","use","say","return","divide","import","put:","use"]},{"Key":"just omit","Fragments":["the","it."]},{"Key":"omit the","Fragments":["`.apply`,","curly","curly","```_*```","curly","```toList```,","return","Types/Type"]},{"Key":"the `.apply`,","Fragments":["I"]},{"Key":"`.apply`, I","Fragments":["guess."]},{"Key":" to","Fragments":["make","simplify","a","quote","quote","check"]},{"Key":"to make","Fragments":["this","modifications,","sure","the","sure","it","sure","the","sure","sure","sure","sure","it","sure","sure","sure","sure","sure","sure","sure","sure","`toString`","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","the","sure","sure","`val`'s","it","sure","sure","sure","sure","sure","your","`speech`","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","all","sure","this","the","sure","sure","sure","sure","a","sure","sure","sure","sure","that","def","sure","sure","sure","sure","sure","sure","sure","`s`","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","the","sure","some","sure","sure","a","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","the","sure","sure","sure","sure","sure","sure","sure","the","sure","sure","sure","the","sure","sure","sure","sure","sure","the","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","it","sure","sure","sure","sure","sure","isShouting","sure","sure","sure","sure","sure","sure","sure","it","tests","`isShouting`","sure","sure","sure","sure","sure","sure","sure","sure","sure","the","my","maps,","your","it","sure","sure","sure","sure","sure","the","sure","this","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","you","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","sure","it","sure","sure","sure","sure","sure","sure","Responders","sure","sure","wordCount","sure","sure","the","your","sure","sure","it","sure","sure","sure","a","the","sure","sure","sure","sure","sure","the","sure","sure","sure","sure","sure","sure","sure","sure","more","sure","sure","sure","sure","a","sure","sure","sure","sure","sure","sure","sure","the","sure","things","sure","that","sure","sure","sure","sure","it","sure","sure","the","sure"]},{"Key":"make this","Fragments":["more","look","more","quick","work","tail"]},{"Key":"this more","Fragments":["readable:","readable.","functional","and","in"]},{"Key":"more readable:","Fragments":["you"]},{"Key":"readable: you","Fragments":["might"]},{"Key":"you might","Fragments":["implement","not","consider","consider","benefit","want","also","try","even","not","need","use","prefer","try","also","run","use","consider","try","consider","want","make","create","not","have","have","also","as","try","consider","consider","try","want","want","use","have","consider","want","use:","also","try","also","also","consider","as","be","also"]},{"Key":"might implement","Fragments":["a"]},{"Key":"implement a","Fragments":["little","solution","feature","`foldLeft`","cache.","solution","tail"]},{"Key":"a little","Fragments":["algebra","optimisation","bit","private","private","cleaner.","bit","[FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79).","DSL","more","shorter.","easier","simpler.","benchmarking.","silly","bit","the","trouble","cleaner","tricky,","confused,","more","compensation:","different","cleaner.","private","bit.","more","cumbersome","unreadable.","wonky","complicated","awkward","overkill","bit","smaller,","code-golfy,","arcane","weird.","by","deeper,","bit","lightweight.","private","bit","more","different,","private","simpler),"]},{"Key":"little algebra","Fragments":["(w/"]},{"Key":"algebra (w/","Fragments":["the"]},{"Key":"(w/ the","Fragments":["\"pimp","risk"]},{"Key":"the \"pimp","Fragments":["my"]},{"Key":"\"pimp my","Fragments":["library\""]},{"Key":"my library\"","Fragments":["pattern)"]},{"Key":"library\" pattern)","Fragments":["to"]},{"Key":"pattern) to","Fragments":["add"]},{"Key":"to add","Fragments":["and","the","1","an","functionality","things","except","the","the","a","a","a","a"]},{"Key":"add and","Fragments":["subtract"]},{"Key":"and subtract","Fragments":["1"]},{"Key":"subtract 1","Fragments":["to/from"]},{"Key":"1 to/from","Fragments":["a"]},{"Key":"to/from a","Fragments":["`Bearing`."]},{"Key":"a `Bearing`.","Fragments":["then"]},{"Key":"`Bearing`. then","Fragments":["you"]},{"Key":"then you","Fragments":["can","might","might","have","can","can","could","can","can","will","should","never","can","don't","can","can","really"]},{"Key":"can say","Fragments":["things","is","s.toUpperCase","that","something"]},{"Key":"say things","Fragments":["like"]},{"Key":"things like","Fragments":["`val","this,","this.","if"]},{"Key":"like `val","Fragments":["newBearing"]},{"Key":"`val newBearing","Fragments":["="]},{"Key":"newBearing =","Fragments":["robot.bearing"]},{"Key":"= robot.bearing","Fragments":["+/-"]},{"Key":"robot.bearing +/-","Fragments":["1`."]},{"Key":"+/- 1`.","Fragments":["You"]},{"Key":"1`. You","Fragments":["get"]},{"Key":"You get","Fragments":["the","the","into"]},{"Key":"get the","Fragments":["idea.","Map","distinction","idea.","bearing","reset","result","same","answer","tests","apply","same","same","impression","structure","logic","same","last","same","same","full","response","methods"]},{"Key":" Clean","Fragments":["Code"]},{"Key":"Clean Code","Fragments":["principles"]},{"Key":"Code principles","Fragments":["always"]},{"Key":"principles always","Fragments":["hold!"]},{"Key":"always hold!","Fragments":["you"]},{"Key":"hold! you","Fragments":["may"]},{"Key":"you may","Fragments":["turn","choose","want","define","find","consider","put","actually","have","just","be","find","use","also","add","utilize","apply","introduce","re-implement"]},{"Key":"may turn","Fragments":["your"]},{"Key":"turn your","Fragments":["if-check","predicates","anonymous","checks","if-conditions"]},{"Key":"your if-check","Fragments":["into"]},{"Key":"if-check into","Fragments":["a"]},{"Key":"into a","Fragments":["private","`val`","private","Seq","`val`","well-named","little","new","separate","well-named","nicely","single","single","class","couple","regex","true","separate","private","Seq[(Int,String)]","String","case","named","new","single","trait/class/object,","more","nicely","def","list","series","robot","set","companion","function","private","nicely","`SortedMap`","private"]},{"Key":"a private","Fragments":["function","helper","helper","class","helper","helper","helper","helper","function","`Map`","helper","helper","function","helper","method.","helper","helper","helper","helper","function","helper","helper","helper","method"]},{"Key":"private function","Fragments":["like","for","that","with","that","to"]},{"Key":"function like","Fragments":["`isValidBinary`."]},{"Key":"like `isValidBinary`.","Fragments":["Furthermore"]},{"Key":"`isValidBinary`. Furthermore","Fragments":["you"]},{"Key":"Furthermore you","Fragments":["can","might"]},{"Key":"can simplify","Fragments":["this","the","by","with","this","your","\"sorted\"","the","the","function","the","w/","w/","even","by","your","even","w/","w/","the"]},{"Key":"simplify this","Fragments":["w/","further","some","some","a"]},{"Key":"this w/","Fragments":["(`nonEmpty`","```++```"]},{"Key":"w/ (`nonEmpty`","Fragments":["and)"]},{"Key":"(`nonEmpty` and)","Fragments":["`forall`."]},{"Key":" The","Fragments":["name","type-safe","use","Haskell","next","next","next","use","\"return\"","next","tests","problem","next","next","next","next","next","next","`Stream`","Java","next","next","next","test","next","next","next","next","next","next","next","`reverse`","next","next","third","next","next","next","next","next","next","school's","main","`toString`","next","next","next","naming","next","general","next","next","next","next","next","next","next","next","problem","next","next","digit","next","methods","only","only","next","String","next","`sortBy`","next","pattern","next","next","next","rest","whole","next","regex","next","next","next","next","next","next","leap","next","next","next","next","next","next","next","next","next","boolean","next","next","next","next","next","next","next","next","next","next","next","next","solution","next","next","next","next","next","next","hey-method","regex'","one","groupBy","next","next","next","next","type","regex","`quiet","rest","basic","use","only","next","next","next","last","question","only","next","idea","next","idea","next","Validate()","next","list","next","next","next","next","only","next","next","next","next","question","next","first","empty","next","extra","next","next","next","next","```primeFactors```","next","next","next","next","next","`groupBy`","next","Scala","next","only","next","next","next","alternative","2nd","idea","usual","next","next","scala","next","next","next","`toCharArray`","case","next","next","next","next","next","cumbersomeness","next","next","big","next","next","next","next","whole","next","next","code","regex","regex'es","next","next","next","latter","next","next","next","next","next","key","next","conversion","`.r`","next","next","only","next","way","next","next","next","next","next","next","next","next","next","next","next","learning","next","next","next","next","next","next","Scala","next","next","next","next","next","next","next","next","usual","next","next","next","case","next","next","next","map","next","next","next","spec","given","next","calculation","number","`allNames`","fold","next","next","val","Scala","best","toString","use","next","next","entities","mix","next","way","next","next","type","only","next","next","next","next","next","next","numeric","next","implementation","next","next","next","next","shortest","resulting","key","next","next","next","next","tests","contract","first","next","next","next","next","!c.isLower","reason","next","readme","next","next","next","next","difference","next","anonymous","next","next","next","next","`#db`","`#add`","reason","next","next"]},{"Key":"The name","Fragments":["`calc`"]},{"Key":"name `calc`","Fragments":["is"]},{"Key":"`calc` is","Fragments":["a"]},{"Key":"is a","Fragments":["bit","lot","function","strand","class","hack.","bit","general-purpose","```Stream```","few","need","question","bit","bit","Set","very","single","perfect","linear","field","list","_potential_","perfect","bit","obfuscated","lot","static","solution","merge","prime.","val","little","mutable","level","simpler","lot","question,","readable,","bit","def,","somewhat","`Stream`,","more","shortcut","valid","more","really","goal.","sublist","mutual","Seq\\[Char\\]","bit","type","bit","pretty","correct","non","valid","require","little","bit","bit","constant.","minor","letter\",","letter,","one-liner","bit","great","good","strong","better","little","trade-off","good","matter","handy","little","constant","try","big","good","tad","bit","bit","question","clean","shorter","great","bit","special","special","thing","more","bit","bad","lot","good","good","state","very","singly","good","public","constant).","one-to-one","little","nice","huge","useful","also","Seq[Char].","free","pretty","bit","concatenation","little","magic","fine","library","bit","constant.","one-liner","particularly","bit","really","much","quite","standard","static/pure","lot","special","constant.","Restrictions","constant","pig","matter","class","function","solution","constant","`val`).","way"]},{"Key":"a bit","Fragments":["lame.","less","here","difficult","more","much","on","cheating","tricky!","misleading","more","into","more","but","imperative.","concerned","harder","misleading,","less","too","too","easier","more","special","more","more","easier","much.","wary","of","too","wordy.","unnecessary","overkill,","too","cheesy,","unfamiliar","odd.","more","more","out","more.","peculiar,","weak.","too","simpler.","unintuitive","ad","to","easier","of","better","too","of","in","much.","of","more","from","better","more","\"over","more","ugly,","from","more","over-complicated","clearer","over","since","with","long","challenging","fishy.","of","strange","longer","more","unsure","too","of","more","more","strange","since","too","of","more","more","shorter,","confusing","about","more","more","too","cleaner","ad-hoc,","of","opaque","odd","more","more","if","by","difficult","more","of","picky,","artificial","more","difficult","simpler"]},{"Key":" And","Fragments":["you","I","as","for","often","about","type","looks","I","a","I","now","then","shouting's","-","your","you","if","if","should","for","perhaps","if","if","then","```BigInt```","the","of","you","as","you","you","you","the","you","in","\"count\"","I","```mapValues```","you","you","instead","as","you","why","also","for","as","you","pls","one","\"return\"","for","it","as","your","I","looks","type","wasn't","personally","if","pls","```Map```s","zipping","why","you","why","as","for","parsing","avoid","the"]},{"Key":"And you","Fragments":["can","should","might","probably","could","can","might","don't","should","can","could","can"]},{"Key":"can get","Fragments":["rid","rid","also","rid","rid","shorter","rid","rid","some","confusing.","rid","rid","the","rid","rid","fairly","rid","it"]},{"Key":"get rid","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"rid of","Fragments":["`case`","`isUpper`.","\"answer\"","\"msg\"","the","```ordering```","```response```","the","the","\"closed\".","those","the","an","the","the","the","the","the","`open`.","```isClosed```","`StringBuilder`","the","one","the","these","the","lines","the"]},{"Key":"of `case`","Fragments":["by","statement"]},{"Key":"`case` by","Fragments":["either"]},{"Key":"by either","Fragments":["turning"]},{"Key":"either turning","Fragments":["`calc`"]},{"Key":"turning `calc`","Fragments":["into"]},{"Key":"`calc` into","Fragments":["a"]},{"Key":"a `val`","Fragments":["or","defined","so","(would","in"]},{"Key":"`val` or","Fragments":["by","`def`"]},{"Key":"or by","Fragments":["using","using","calling","numbers"]},{"Key":"by using","Fragments":["`(calc","pattern","foldLeft!","the","`accu","an","a","the","the","filter?","zip","a","a","\"to\"","require(first.length","``case``.","[for","```count```","`Regex::findAllIn`","`Int`","`sorted`?","map","tail-recursion.","require","the","Option","only","type","the","```count```.","the","the","a"]},{"Key":"using `(calc","Fragments":["_).tupled`."]},{"Key":" Version","Fragments":["2","using"]},{"Key":"Version 2","Fragments":["implements","of"]},{"Key":"2 implements","Fragments":["your"]},{"Key":"implements your","Fragments":["feedbacks."]},{"Key":" I","Fragments":["know","think","find","guess","don't","like","think","understand","think","should","wouldn't","can't","saw","think","prefer","am","am","see,","don't","like","think","found","would","tend","personally","think","wanted","think","would","see","used","would","chose","really","feel","wasn't","know,","actively","guess","don't","like","actually","like","decided","don't","really","find","will","am","don't","think","love","have","made","also","always","like","need","personally","think","changed","would","often","don't","think","was","got","changed","like","will","like","just","did","will","added","realized","would","used","won't","deliberately","like","don't","think","would","agree.","guess","think","like","have","like","like","think","prefer","realized","think","would","like","broke","preferred","wonder","thought","would","like","don't","would","know","really","guess","still","also","agree","just","am","skipped","agree","like","see.","am","like","think","do","tried","see","am","would","forgot","guess","think","like","just","didn't","haven't","would","wanted","wonder","am","agree.","just","like","agree.","don't","didn't","had","tried","am","would","would","would","was","like","can't","really","liked","don't","like","modify","would","like","guess","am","agree","would","think","think","like","submit","thought","have","agree","really","felt","wanted","don't","chose","added","don't","see","think","like","think","had","feel","would","thought","agree,","think","figured","get","tried","just","went","think","like","couldn't","would","think","really","am","think","like","do","do","think","completely","learned","feel","like","was","was","would","like","find","agree","wouldn't","like","didn't","went","think","think","feel","think","would","simplified","copied","made","like","like","wasn't","don't","think","would","agree","personally","am","removed","would","know","would","had","could","think","think","would","know","am","am","prefered","did","think","originally","could","like","do","too","also","don't","essentially","find","think","prefer","am","tried","think","think","have","think","would","like","like","can","love","like","see","prefer","think","don't","am","am","initially","went","find","don't","would","think","feel","find","don't","allowed","like","believe","haven't","love","like","got","think","started","really","find","guess","think","was","still","think","think","recommend","have","feel","liked","think","used","don't","was","did","agree","solved","believe","wanted","was","like","like","hava","was","basically","also","think","like","copied","think","think","personally","think","like","submit","like","didn't","would","thought","should","also","believe","have","do","initially","refactored","think","hope","like","really","like","don't","would","think","do","know","would","would","think","would","wonder","wanted","forgot","thought","personally","found","believe","totally","consider","don't","initially","think","see","totally","vaguely","tried","agree","followed","checked","like","did","think","thought","understand","had","would","like","would","realise","figured","would","must","thought","think","love","think","might","think","think","aimed","can","tried","also","think","never","know","was","like","was","can","think","would","do","always","just","broke","think","don't","was","submitted","submitted","could","like","think","could","don't","realized","like","would","like","can't","still","can't","find","like","still","consider","do","don't","could","definitely","also","find","understand","wonder","share","have","tend","love","like","think","used","thought","would","think","think","think","agree","did","think","wanted","wonder","had","like","would","do","fixed","discovered","considered","think","could","could,","like","see,","need","believe","think","haven't","really","actually","think","still","wonder","refactored","initially","love","believe","am","submit","would","noticed","liked","had","don't","don't","don't","wonder","put","would","think","tried","liked","started","was","agree.","would","guess","think","think","am","find","*think*","would","think","used","like","was","tackled","like","don't","like"]},{"Key":"I know","Fragments":["I","I","this","it's","that","it","nothing","the","I","it's","that","not","that","about","of."]},{"Key":"know I","Fragments":["could","have","think"]},{"Key":"I could","Fragments":["implement","have","do","make","ignore","basically","not","not","explain","by","map","make","not","have","have","exhaust","wirte","do","have","come","have","think","argue","settle","imagine","just","make","do"]},{"Key":"could implement","Fragments":["`justUpperCaseLetters`","a"]},{"Key":"implement `justUpperCaseLetters`","Fragments":["in"]},{"Key":"`justUpperCaseLetters` in","Fragments":["a"]},{"Key":"in a","Fragments":["more","project","method","particular","month","Seq.","Utils","minute,","codebase","separate","concise","map","temporary","one","method","solution","val","while)","more","companion","robot's","companion","real","robot","random","row.","row.","more","single","dream.","dream,","list","loop","match/case","variable's","comment","Java","class.","companion","few","single","name","previous","static","match-case","for","map","separate","string","name,","way","way","sense","variable","more","more","field","team,","check","sort","row."]},{"Key":"a more","Fragments":["functional","natural","real","graceful","concrete","functional","sophisticated","technical","efficient","intention","functional","functional","straightforward","idiomatic","compact","obvious","specific","straightforward","scala","succinct","concise","functional","randomly","meaningful","roundabout","functional","different"]},{"Key":"more functional","Fragments":["way","way","approaches,","solution?","way","now","way.","approach","gladly","style","way."]},{"Key":"functional way","Fragments":["with","to","to","to","(i.e."]},{"Key":"way with","Fragments":["`.partition`"]},{"Key":"with `.partition`","Fragments":["but"]},{"Key":"`.partition` but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["not","not","afraid","a","open","really","still","taking","not"]},{"Key":"I'm not","Fragments":["good","sure.","100%","that","sure","good","so","sure:","very","sure","aware","focusing","a","even","really","too","sure","sure","sure","too","100%","sure","sure","sure","too","sure","sure","sure,","sure","going","quite","sure","sure","sure","terribly","fond"]},{"Key":"not good","Fragments":["enough","FP","at"]},{"Key":"good enough","Fragments":["with"]},{"Key":"enough with","Fragments":["Scala"]},{"Key":"with Scala","Fragments":["yet","so"]},{"Key":"Scala yet","Fragments":[":P"]},{"Key":"I think","Fragments":["you","you","it","this","it","my","is","it's","it's","your","I","performancewise,","i","your","I","these","it","the","the","however","the","the","I","trailing","it","the","it","the","`isQuestion`","\"hiding\"","OldScore/NewScoreFormat","you","the","you","the","I","its","`val","the","the","would","iteration","maybe","also","Scala","my","that","I","```val","isUpperOrDigit","you","the","you","the","that","it","it","I","when","you","\"==\"","having","the","it","fitting","you","I","that","this","the","it's","your","you","these","the","a","your","you","\"response\"","an","the","you'll","there","I'll","a","that","this","you","you","about","\"total\"","you","it","`val`","[count](http://www.scala-lang.org/api/current/index.html#scala.collection.immutable.List@shanie%28p:A=%3EBoolean%29:Int)","it's","that","your","because","you","the","you","there","it","it","I","that","this","possibly","my","that","not","this","it","it","the","what","that","the","it","this","that","this","it","if","the","that","it's","it","flatMap","I","it","you","names","is","you","the","it","foldLeft","that's","trailing","your","you","it","you","the","your","this","your","I'm","underscore_case","count()","the","I","this","there","`testPrime(l,","that's","is","you","you'll","it","you","it","this","it's","it's","this","I","this","it's"]},{"Key":"think you","Fragments":["can","could","should","can","don't","can","can","could","can","can","may","need","can","can","could","can","can","were","learn","have","would","might","can"]},{"Key":"simplify the","Fragments":["logic","logic","first","question","code","pattern","code:","regex","code","`isSameDay`","`fold`","error"]},{"Key":"the logic","Fragments":["with","in","into","more","of","into","but","that","down","could","more","is"]},{"Key":"logic with","Fragments":["a"]},{"Key":"with a","Fragments":["couple","simple","Sequence","less","lowercase","'?'.","single","helper","predicate","three-line","block","`matches`","nice","very","require-","`lazy","grain","purer","lot","better","`\u0026\u0026`","regex","pair","`for`","question","regex.","named","`for`","good","descriptive","regEx","pattern","nice","`.count`,","little","more","for","name","minor","sequence","single","class","good","capital:","good","`Set`","colleague","simplified","solution","slightly","more","printout","val.","non-null","nested","for","test","very","bunch","fold","poorly","parse","much","regex"]},{"Key":"a couple","Fragments":["of","of","functions.","of","of","of","of","of"]},{"Key":"couple of","Fragments":["observations..","questions","values/methods/functions","notes:","separate","hints","times","possibilities.","things","things","ideas:"]},{"Key":" *","Fragments":["if","the","partly","partly","There","Don't","make","You","I","It","`line.toUpperCase()`:","Since","`line.replaceAll(\"\\\\s+\",","`isQuestion`","`hasLetters`","Perhaps","the","regexs","the","what","There's","There's","There's","Remove","The","Inconsistent","Using","`Map`","You","For","As","Rather","On","It","Even","Give","`map1`","Line","Using","Using","Not","Use","Get","Declare","You're","Using","w","Use","No","Check","Option","String","What","initial","Why","As","No","I","use","use","regex","did","yes,","it's","maybe","For","Is","remove","Is","A","I","The","The","call","split","No,","About","Thanks","`return`","Consider","De-nest","Consider","Consider","I","scala","There","```total```","Body","You","The",",","Indentation","The","The","Out","Indentation","The","The","I","Current","We","Would","`isQuestion`","Why"]},{"Key":"* if","Fragments":["you"]},{"Key":"if you","Fragments":["invert","don't","do","can","make","have","want","use","want","insist","`yield","change","only","can!","treat","would","don't","have","use","can.","call","have","want","then","could","then","still","make","can","change","can:","can","can.","want","are","use","switch","wish.","are","want","take","can.","can","don't","do","use","used","needed","look","build","depend","still","have","need","wanted,","can","feel","can.","want","want","ask","prefix","are","don't","turn","broke","use","only","have","can","can","moved","switch","can.","using","did","extend","got","ran","have","can.","make","compile","call","do","declare","could","insist","have","feel","follow","already","want","insist","could","just","call","align","don't","go","used","make","had","expect","expect","create","aren't","don't","name","cannot","mean","have","have","don't","don't","broke","can","insist","want","remove","want,","use","want","change","don't","sort","can","don't","don't","don't","only","use","prefer","can.","want).","declare","keep"]},{"Key":"you invert","Fragments":["the"]},{"Key":"invert the","Fragments":["order"]},{"Key":"the order","Fragments":["of","of","shouldn't","of","when","as","of","the"]},{"Key":"order of","Fragments":["```if(isQuestion(sentence)```","the","the","magnitude","your","checking","conditions"]},{"Key":"of ```if(isQuestion(sentence)```","Fragments":["and"]},{"Key":"```if(isQuestion(sentence)``` and","Fragments":["```if(isQuestion(sentence)"]},{"Key":"and ```if(isQuestion(sentence)","Fragments":["\u0026\u0026"]},{"Key":"```if(isQuestion(sentence) \u0026\u0026","Fragments":["!allCaps)"]},{"Key":"\u0026\u0026 !allCaps)","Fragments":["```"]},{"Key":"!allCaps) ```","Fragments":["you"]},{"Key":"``` you","Fragments":["can"]},{"Key":"can avoid","Fragments":["to","having","the","them!","negations","mutable","the","the","it.","them!","the","having","the"]},{"Key":"avoid to","Fragments":["check"]},{"Key":"to check","Fragments":["that","for","whether","if","for","[String","if","for","out","if","for","every","it.","for","preconditions.","whether","if","if","if","if","preconditions.","for","for","that,","at","nulls","for","if","(although","on","if"]},{"Key":"check that","Fragments":["is","the","it's","something","the","the"]},{"Key":"that is","Fragments":["not","meant","actually","intended","a","as","more","a","a","then","what","making","on","a","on","Tuple","never","a","the","definitely","going","not","the","just","more","more","more","in","only","an","equal","is","the","always","more","what","in","a","very","used","then","defined"]},{"Key":"is not","Fragments":["all","much","purely","generic","very","needed","necessary,","calculated.","checked","immediately","necessarily","customary","really","really","equivalent","standard,","equivalent","on","longer","so","asked","always","checked","really","really","necessary,","necessary","the","far","to","used,","really","very","necessary.","done","thread-safe","necessary","apparent","really","tailrecursive","to","a","very","asked","\"needed\"","exhaustive,","part","really","tailrecursive,","as","really","(immediately)","a","likely","yet","what","a","necessary","very","ideal.","consolidated,","required,","really","in","your","an","only","recommended","minimal","a","my","really","considered","tested).","in","guaranteed.","necessary"]},{"Key":"not all","Fragments":["caps.","of"]},{"Key":"* the","Fragments":["definition","symbols","whole"]},{"Key":"the definition","Fragments":["of","of","(unless","of","of","of","of"]},{"Key":"definition of","Fragments":["allCaps","a","the","\"hey\".","upper","an","areEqual","`containsSlice`"]},{"Key":"of allCaps","Fragments":["is:"]},{"Key":"allCaps is:","Fragments":["there"]},{"Key":"is: there","Fragments":["should"]},{"Key":"there should","Fragments":["be","be","be","indeed"]},{"Key":"should be","Fragments":["some","cleaner.","(new","(new","(counts)","declared","the","spelled","considered","ignored","classified","within","interpreted","moved","the","mutable?...though","up","private.","the","using","private","(maxRobots)","invoked","something","either","more","improved!","a","spelled","equivalent","fine.","able","the","a","a","classified","ignored.","declared","omitted","passing","moved","expressed","annotated","private.","a","a","better","able","declared","either","relatively","able","classified","able","thrownBy","prefixed","a","a","local","able","able"]},{"Key":"be some","Fragments":["uppercase","topic","interface","check","better","cases"]},{"Key":"some uppercase","Fragments":["letters"]},{"Key":"uppercase letters","Fragments":["and","in","like"]},{"Key":"letters and","Fragments":["no","40","no","50","used","numbers.","20","digits","digits?"]},{"Key":"and no","Fragments":["lowercase","digits?!"]},{"Key":"no lowercase","Fragments":["letters."]},{"Key":"lowercase letters.","Fragments":["I"]},{"Key":"letters. I","Fragments":["think"]},{"Key":"you could","Fragments":["explicit","have","use","try","look","put","already","use","extract","also","also","make","even","just","have","use","then","do","move","use","try","use","have","have","have","do","use","use","try","always","make","also","also","try","try","make","try","try","extract","either","(as","of","also","have","use","provide","use","use","just","have","use","remove","try","use","also","have","assign","define","then","also","be","consider","probably","simplify","declare","do","have","just","use","also","shorten","somehow","also","get","give","improve","compromise","simplify","try","also","try","have","do","simplify","even","also","add","try","use","implement","try","simplify","try","move","create","use","use","have","extract","have","just","also","have","define","provide","like","perhaps","use","make","consequently","have","simplify","simplify","replace","think","\"regex\"","at","put","rather","just","follow","introduce","use","use","first","use","just","probably","use","also","also","use","give","return","also","also","actually","move","have","even","try","generalize","define","use","make","use","again","also","have","use","move","rename","use","improve","also","use","consider","write:","make","try","use","check","try","refer","also","have","write","simply","also","simplify","try","name","add","also","improve","have","try","also","just"]},{"Key":"could explicit","Fragments":["this"]},{"Key":"explicit this","Fragments":["things"]},{"Key":"this things","Fragments":["using"]},{"Key":"things using","Fragments":["more"]},{"Key":"using more","Fragments":[".filter()"]},{"Key":"more .filter()","Fragments":["and"]},{"Key":".filter() and","Fragments":["removing"]},{"Key":"and removing","Fragments":["the","the"]},{"Key":"removing the","Fragments":["for..","wildcard","underscore","need","function"]},{"Key":" I'd","Fragments":["recommend","still","at","prefer","refactor","recommend","also","just","also","like","also","prefer","remove","recommend","suggest","recommend","try","like","break","recommend","recommend","start","use","go","like","personnally"]},{"Key":"I'd recommend","Fragments":["to","to","changing","breaking","to","to","the","a","to","to","to","turning","moving","adding","to"]},{"Key":"recommend to","Fragments":["use","avoid","avoid","check","avoid","avoid","avoid","use","avoid"]},{"Key":"to use","Fragments":["fully","it.","`require`","a","an","companion","tuples,","`for`","function","immutable","the","the","it","the","a","just","an","`lastOption`","then","```equals```.","pattern","String","```square```.","short","descriptive","other","ListBuffer","Option","capital","postfix","it.","collection","if-else","match","regular","camelCase","recursion","Scala","Streams","a","Scala's","TDD","regex","an","a","either","scala.util.Random.alphanumeric.","it,","the","the","a","`foldLeft`","`withDefault`.","extra","to","a","pattern","backticks","a","more","startsWith","recursion","the","the","Java8","a","==","regex","what","it.","```fold```","`Ordered`","a","Scala","pattern","so","```groupBy```.","the","higher-order","`.toLowerCase.sorted`","the","pattern","regex","Map","```PartialFunction```s","a","a","raw","`filter`","those","pattern","Option","simple","math","this","a","Scala","heavy","some","the","periods","a","`Future.fold`.","`Either`","the","replace","the","constants","match-case","that","`flatMap`,","related","the","some","recursion","upper","zip","`zip`","a","a","patterm","traditional","Range","\"to\"","a","the","regex","unapply!","regular","```Array[Char]```","`foldLeft`","type","type","a","them","\\p{Upper},","\"groupBy\".","the","`{","in","the","the","camel-case","the","dots","`anagram.toLowerCase`","very","return","it.","a","only","a","mutable","```PartialFunction```s","pattern","the","s.equals(s1)","`s.equals(s1)`","`withDefaultValue`","the","```Range```s!","immutable","ranges","matched","a","that.","split","it"]},{"Key":"use fully","Fragments":["qualified"]},{"Key":"fully qualified","Fragments":["mutable"]},{"Key":"qualified mutable","Fragments":["Map"]},{"Key":"mutable Map","Fragments":["type.","you","and","you","to"]},{"Key":"Map type.","Fragments":["In"]},{"Key":"type. In","Fragments":["this"]},{"Key":"In this","Fragments":["solution","case","case","case","approach","case","case","case","case,","case","case","case,","case","case","iteration","case"]},{"Key":"this solution","Fragments":["you","looks","is","was","caches","doesn't","also","see:","to","is","of","has","is","that","the","is","with","can't.","is"]},{"Key":"solution you","Fragments":["replaced","could","linked","could","could","could","could","could","might","could"]},{"Key":"you replaced","Fragments":["immutable"]},{"Key":"replaced immutable","Fragments":["Map"]},{"Key":"immutable Map","Fragments":["which","and","for","collection.","in"]},{"Key":"Map which","Fragments":["is"]},{"Key":"which is","Fragments":["available","in","nothing","really","slightly","preferable","the","ok.","that","mutable,","also","at","actually","why","the","more","possible","clearly","slightly","the","tested","part","more","what","not","clearer","basically","exactly","mutable,","\"match\"","clean","probably","a","specified","linear","kind","more","the","internal","pretty","then"]},{"Key":"is available","Fragments":["by","for"]},{"Key":"available by","Fragments":["default"]},{"Key":"by default","Fragments":["by"]},{"Key":"default by","Fragments":["mutable"]},{"Key":"by mutable","Fragments":["one"]},{"Key":"mutable one","Fragments":["which"]},{"Key":"one which","Fragments":["can","is","used"]},{"Key":"which can","Fragments":["mislead","be","lead"]},{"Key":"can mislead","Fragments":["reader"]},{"Key":"mislead reader","Fragments":["and"]},{"Key":"reader and","Fragments":["can"]},{"Key":"and can","Fragments":["be","be","thus"]},{"Key":"can be","Fragments":["a","\"vals\"","replaced","easily","replaced","solved","omitted","reduced","streamlined","used","customized","passed","any","a","avoided","multiplied","overridden","replaced","avoided","implicitly","rewritten","made","a","converted","written","used","replaced","a","replaced","dropped,","solved","written","omitted.","customized","replaced","written","improved.","`!","`message.exists(_.isUpper)`.","replaced","set","replaced","solved","easily","considered","satisfied","done","simplified.","improved","shortened","done","replaced","omitted","collapsed","collapsed","plugged","written","simplified","made","used","improved.","replaced","eliminated,","fixed","compacted","implemented","accessed","improved:","a","simplified","simply","improved.","reused","reused","customized","done","more","a","used","replaced","`map`ped","tail-recursive,","replaced","replaced","inferred,","avoided,","expressed","omitted.","used","more","simplified","removed","simplified.","replaced","found","made","omitted.","replaced","simplified","shared","a"]},{"Key":"be a","Fragments":["source","Y.","fan","different","good","case","race","`val`.","problem","bit","simple","bit","lot","datatype","simple","class,","better","better","strong","bit","bit","```_","good","lot","large","question,","bit","superior","benefit,","val","pretty","crock","`usedNames`","misnomer","far","good","val.","simple","case","little","`val`","problem","fan","bit","uniqueness","uniqueness","uniqueness","bit","case","good","```val```","class","`val`,","test","better","difference","bit","reason."]},{"Key":"a source","Fragments":["of"]},{"Key":"source of","Fragments":["some"]},{"Key":"of some","Fragments":["mysterious","of"]},{"Key":"some mysterious","Fragments":["type"]},{"Key":"mysterious type","Fragments":["errors."]},{"Key":" Creative","Fragments":["solution,"]},{"Key":"Creative solution,","Fragments":["defining"]},{"Key":"solution, defining","Fragments":["a"]},{"Key":"defining a","Fragments":["name","helper","general"]},{"Key":"a name","Fragments":["calculation","that","for","if","consisted",":-)","for"]},{"Key":"name calculation","Fragments":["based"]},{"Key":"calculation based","Fragments":["on"]},{"Key":"based on","Fragments":["one","someone","kolokg's","your","this","the","the","how","`Calendar.MONDAY`,","other","patternmatching","it's","how","*my*","the"]},{"Key":"on one","Fragments":["random","line.","of","pair"]},{"Key":"one random","Fragments":["number.","robot"]},{"Key":"I find","Fragments":["this","it","this","it","it","binary","this","this","more","it","this","this","\"filter\"","it","this","this","your","it","it","a","it","the"]},{"Key":"find this","Fragments":["code","difficult","way","to","algorithm","hard","quite","function","a","solution","version"]},{"Key":"this code","Fragments":["very","–","in","is.","is","can","as","won't","can","–","for","and","to","with","is","if","to"]},{"Key":"code very","Fragments":["difficult","readable,"]},{"Key":"very difficult","Fragments":["to","to"]},{"Key":"difficult to","Fragments":["follow:","understand","read,","read","follow","read.","search","follow.","read","read,","read,"]},{"Key":"* partly","Fragments":["because","bacause"]},{"Key":"partly because","Fragments":["when","I'm"]},{"Key":"because when","Fragments":["reading"]},{"Key":"when reading","Fragments":["the","the"]},{"Key":"reading the","Fragments":["code","task's","README","tests.","Readme,","code.","READMEs.","Scala"]},{"Key":"the code","Fragments":["I","more","a","for","since","super","more","self","doesn't","there","it","more","would","after","is","in","would","looks","to","that","more","layout","to","to","more","more","look","will","prevent","as","a","works","also","very","could","breath","longer","grows.","quite","easier","as","more","block","simpler","it","as","itself","blocking)","was","to","into","is","more","easier","somewhat","reader","specifies","more","clearer,","more","how","harder","for","more","harder","in","into","more","inside","to","clearer.","again","here.","more","a","more","to","is","more"]},{"Key":"code I","Fragments":["have","would","would","could","now"]},{"Key":"I have","Fragments":["to","found","doubts","to","some","an","to","to","had","are","very","some","refactored","a","a","an","one","seen","an","mutability","faith","to","few","very","some","a","not","done","no","the","mixed","not.","found","seen","now","a","to","spotted","a","spotted","not"]},{"Key":"have to","Fragments":["go","split","fully","read","say:","do","change","balance","admit","loop","say","perform","remove","remove","keep","change","combine","understand/maintain","iterate","introduce","trim","read","optimize","include","maintain","check","remember","actually","be","use","use","change","change","do","be","traverse","be","do","remember","remember","get","perform","recalculate","be,","change","recalculate","make","write","flatten","change","reconsider.","check","be","convert","check","start","google","pass","pass","build","keep","do","go","check","put","recalculate","recalculate"]},{"Key":"to go","Fragments":["up","for","because","for","look","for","about","for","with","check"]},{"Key":"go up","Fragments":["and"]},{"Key":"up and","Fragments":["down","leave"]},{"Key":" e.g.","Fragments":["from"]},{"Key":"e.g. from","Fragments":["line"]},{"Key":"from line","Fragments":["4"]},{"Key":"line 4","Fragments":["to","you","already","at","and"]},{"Key":"4 to","Fragments":["line"]},{"Key":"to line","Fragments":["19,","6"]},{"Key":"line 19,","Fragments":["back"]},{"Key":"19, back","Fragments":["to"]},{"Key":"back to","Fragments":["line","this","this","a","this","Scala.","fix"]},{"Key":"partly bacause","Fragments":["the"]},{"Key":"bacause the","Fragments":["names"]},{"Key":"the names","Fragments":["of","of","aren't","are","sorted"]},{"Key":"names of","Fragments":["variables","their","input","variables"]},{"Key":"of variables","Fragments":["are","are"]},{"Key":"variables are","Fragments":["not","actually","at"]},{"Key":"are not","Fragments":["selfdocumenting","required","in","required.","required","used","used","part","easily","the","as","words.","doing","really","using","shouting","using","anagrams","really","really","very","always","instantiated","mutating","needed","of","into","changing.","changing."]},{"Key":" @loraine","Fragments":["I"]},{"Key":"@loraine I","Fragments":["like"]},{"Key":"I like","Fragments":["your","your","how","the","the","the","this","the","the","it.","the","to","this","the","the","the","the","(for","the","your","your","your","your","how","the","is","your","the","your","your","that","the","the","it","it.","your","your","the","the","how","it","this","it","the","your","this","the","this","your","Scala","all","that","the","your","this","your","the","intermediate","your","your","it","your","the","the","the","your","that","having","the","your","your","your","to","\"require\"","the","your","about","-","your","that","swap,","your","this","to","the","the","the","the"]},{"Key":"like your","Fragments":["explanation.","use","use","```randomLetters```","use","poor","`filter(_.isDigit)`","style","match","approach!","Regex","solution!","solution.","hey()","approach!","`add`","rounding","initial","attempt","type","use","way","interesting","solution,","DNA!","final","solution,","approach.","name","`sorted`","use","solution,","ideas","solution"]},{"Key":"your explanation.","Fragments":["I"]},{"Key":"explanation. I","Fragments":["think"]},{"Key":"think it","Fragments":["makes","is","depends","was","is","would","is","was","makes","works","is","makes","just","should","strikes","would","would","could","looks","would","should","would","would","may"]},{"Key":"it makes","Fragments":["sense","sense.","it","sense.","code","it","sense).","it","the","the","things","me","it","`hey`"]},{"Key":"makes sense","Fragments":["in","to","to","if","to"]},{"Key":"sense in","Fragments":["a","it.","their"]},{"Key":"a project","Fragments":["that","like"]},{"Key":"project that","Fragments":["is"]},{"Key":"is meant","Fragments":["longterm,","by"]},{"Key":"meant longterm,","Fragments":["a"]},{"Key":"longterm, a","Fragments":["bit"]},{"Key":"bit less","Fragments":["for","readable,"]},{"Key":"less for","Fragments":["a"]},{"Key":"for a","Fragments":["one","nicer","lot","different","day","special","response","blank","map","`?`.","challange","helper","more","boolean","boolean","function","function.","special","later","different","cleaner","way","cleaner,","way","certain","string","few-billion-character","score","mutable","departing","recursive","non-value).","non-value).","Position.","good","Range","sequence","good","more","```None```","project","single"]},{"Key":"a one","Fragments":["time","liner","liner","liner"]},{"Key":"one time","Fragments":["exercise,"]},{"Key":"time exercise,","Fragments":["but"]},{"Key":"exercise, but","Fragments":["then","am"]},{"Key":"but then","Fragments":["again,","I","I","I","becomes","the","use","why","I"]},{"Key":"then again,","Fragments":["that's","isn't"]},{"Key":"again, that's","Fragments":["the"]},{"Key":"that's the","Fragments":["point","best","imperative"]},{"Key":"the point","Fragments":["of","of","here.","of","that","of","where"]},{"Key":"point of","Fragments":["the","doing","finding","trying","view.","the","spelling","this","view"]},{"Key":"of the","Fragments":["exercises,","code","anonymous","language)","```throw```","range","Scala","initial","number","[`require`](http://www.scala-lang.org/api/current/#scala.Predef$)","collection","class).","`octal`","Scala","last","expression.","helper","month","elements","exercise,","\"factory\"","variable","list","linked","`equals`","`if/else`","test.","second","whole","mapping,","string","sequence","string","time","month.","pattern","characters","many","motivation","value","anonymous","anagrams","function","zipped","code,","score","words","method","temporary","if","fact","for-comprehension?","convert","recursion.","`isYell`","public","classes.","methods","Functional","main","method,","work","parameters.","end,","method","imperative","definition","Map.","var).","object.","property","`sorted`","collections,","boolean","comprehension","test","if","`validate`","simplicity","various","`StringOps`","exercise","solution.","```square```","strings","test.","function).","exercise.","day,","type","Bob","prefix","solution","words","class.","class.","distance","inputs","cache)","Strings.","Readme","type","less","list","list","```if```).","wordsOf()","methods.","SortedMap.","pattern","poem","implicit","firsr","\"if\"","Map?!","boolean","shortest","time","foldleft?","string","questions","```hey```","unit","list","improvements,","conditional,","day","parts","previous","mapping","code","unit","problems","passed","string).","code","Seq","if","term","block","work","input","code","few","tests.","list","input","2","same","calculation","*how*.","balance.","code","logic","clause","public","same","class.","calculated","candidate","warning?","import","`if`","zip.","work","methods","last","function","powers","base","zip()","```filter```","super","time.","Scala","limitations","second","very","variables!","function","match","other","word,","```var```,","String","if-else.","transform","variables.","Scala","specification;","rules","\"return\"","method","Java","`@boris`","map","Robot.","various","final","fun","match","for-comprehension","obscure","random","number","original","\"business","\"business","sorting.","API).","List","list","List","usage","string","\"java","previous","```hey```-method","case.","braces","shortest","case","class","nicest","solution","type","\"else\"","m","trade-offs","combination","account","whole","function","'''case'''","string","function","use","`filter`","object.","private","of","if/elseif/else","fact","check","longer","original","Seq.","mapping.","entries","`CaseInsensitive`","order","`apply()`","fact","object.","input"]},{"Key":"the exercises,","Fragments":["to"]},{"Key":"exercises, to","Fragments":["do"]},{"Key":"to do","Fragments":["them","all","this?","with","what","the","a","it.","more","this.","`str.endsWith(\"?\")`","for","otherwise:","it.","w/o","so.","it","it","most","`toLowerCase`","it","it","index","the","it","the","type","that","if","something","it","both","this","the","that","it","now","so","it","this?","something","the","it","recursion","what","something","it.","with","the","the","something","the","this:","this","the","a","to","like","the","two","the","it","so,","this.","what","it","it","it?","this","this!","the","a","it","as","some","this","the","it","a","pattern","this","it,"]},{"Key":"do them","Fragments":["to"]},{"Key":"them to","Fragments":["the","some","reducer","a","a","perform"]},{"Key":"to the","Fragments":["best","\"business","function,","failings","place","site.","website","site.","website","site.","website","site.","website","string","`map`","site.","website","site.","website","site.","website","domain?","site.","website","site.","website","site.","website","beginning","point","site.","website","site.","website","problem","site.","website","readme","site.","website","site.","website","site.","website","first","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","`isAnagram`","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","var,","BankAccount?)","task","site.","website","site.","website","site.","website","original","format","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","companion","companion","surprise","site.","website","site.","website","habit","site.","website","language","overall","definition","site.","website","site.","website","site.","website","site.","website","site.","website","next","Z.","site.","website","real","[docs](http://docs.scala-lang.org/overviews/collections/performance-characteristics.html)","site.","website","map","site.","website","site.","website","site.","website","default","same","desired","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","first","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","fold","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","match","companion","site.","website","site.","website","site.","website","site.","website","point","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","end","count","site.","website","site.","website","`msg`,","site.","website","site.","website","constants).","site.","website","site.","website","site.","website","required","outside","regEx","site.","website","site.","website","outside","`Allergen`.","site.","website","site.","website","specification.","total","Hamming","site.","website","site.","website","left","site.","website","site.","website","site.","website","companion","site.","website","site.","website","site.","website","site.","website","`val`","site.","website","result.","site.","website","site.","website","site.","website","problem","contstructor.","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","outside","use","site.","website","site.","website","site.","website","site.","website","test","hand-crafted","problem","site.","website","site.","website","site.","website","outside","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","companion","until,","desired","outside","site.","website","site.","website","next","type","code.","test","site.","website","site.","website","site.","website","most","latest","outside","site.","website","site.","website","site.","website","site.","website","site.","website","output","site.","website","site.","website","site.","website","site.","website","site.","website","agenda","companion","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","conditions","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","`var`.","original","site.","website","site.","website","second","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","beginning,","end,","middle)","site.","website","excercise","problem","regex","readme","parameters.","business","same","site.","website","site.","website","solution.","lowercased","site.","website","site.","website","site.","website","outside","site.","website","companion","site.","website","fore","Scala","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","site.","website","scala","site.","website","site.","website","site.","website","first","site.","website","site.","website","end","outside","site.","website","site.","website","site.","website","output","site.","website","match","map()","site.","website","Response","site.","website","site.","website","site.","website","shouting","point","site.","website","site.","website","site.","website","right","site.","website","Python","site.","website","outside","site.","website","yield","site.","website","constructor.","site.","website"]},{"Key":"the best","Fragments":["of","way","solution","approach,","pattern","possible","way","solution","uniqueness","example","solution","and"]},{"Key":"best of","Fragments":["your"]},{"Key":"of your","Fragments":["knowledge","Map","class","code","for","scoreWord","suggestion","loop.","recursive","predicates,","original","if","pattern","if-else","code","use","defs","two","length","code","approach","iterator).","iterator).","data","`isAnagram`","points","conditional,","pattern","defs","String","defs","String","db,"]},{"Key":"your knowledge","Fragments":["and"]},{"Key":"knowledge and","Fragments":["share"]},{"Key":"and share","Fragments":["that"]},{"Key":"share that","Fragments":["with"]},{"Key":"that with","Fragments":["the","infix"]},{"Key":"with the","Fragments":["other","case","help","`GregorianCalendar`.","same","nucleotides","helper","reference","hardest","sum","fact","odd","tail","val","tail","Map","simplest","well-chosen","case","following","shouting","if/else","benefit","threads","filter.","right","keywork","companion","predicate","first","guide,","for","toString","`-feature`","zip","defined","implicit","yell","first","result","previous","rest:","lazy","string","built","syntax","same","\"r.\"","half","head,","exercism.","sequence","two","invalid","very","a","lazy,","counts"]},{"Key":"the other","Fragments":["users.","direction","way,","sufficient?","predicates?","hand,","solutions","solutions,","hand,","Option","submissions.","way).","solutions","neat","solutions,","if","tests","until","sufficient?","two","assignment,","responses"]},{"Key":"other users.","Fragments":["I've"]},{"Key":"users. I've","Fragments":["learned"]},{"Key":"I've learned","Fragments":["quite","the"]},{"Key":"learned quite","Fragments":["a"]},{"Key":"quite a","Fragments":["bit","bit","bit","bit.","lot","bit.","lot","bit","bit","complicated","bit"]},{"Key":"bit here","Fragments":["by"]},{"Key":"here by","Fragments":["doing","calling"]},{"Key":"by doing","Fragments":["the"]},{"Key":"doing the","Fragments":["exercises.","Haskell","work","groupBy?","same"]},{"Key":"the exercises.","Fragments":["Thank"]},{"Key":"exercises. Thank","Fragments":["you"]},{"Key":"Thank you","Fragments":["for","for","for","so","for","for","for","for","four","for","for","very","for"]},{"Key":"you for","Fragments":["sharing!","the","your","your","the","the","review.","the","the","your","your"]},{"Key":" Well,","Fragments":["the","yes","guess","it","you","```GregorianCalendar```","I","the","I","it's","whenever","for","you"]},{"Key":"Well, the","Fragments":["idea","thing"]},{"Key":"the idea","Fragments":["for","of","of","of","of","with","from","of","of","to","from"]},{"Key":"idea for","Fragments":["all","simplification:"]},{"Key":"for all","Fragments":["those","this,","translations","functions.","the","the","possible","the","cases","responses.","your","lazy","upercase","the"]},{"Key":"all those","Fragments":["type","comments!","methods"]},{"Key":"those type","Fragments":["aliases"]},{"Key":"type aliases","Fragments":["is","(I","for","for","for","for","add","instead","might","increase","which","in","of","of","with","might"]},{"Key":"aliases is","Fragments":["to"]},{"Key":"is to","Fragments":["get","have","fetch","be","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","create","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","use","have","fetch","trim","have","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","use","have","fetch","have","fetch","have","use","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","favor","always","have","fetch","have","fetch","have","fetch","compute","use","have","fetch","have","fetch","just","have","fetch","consider","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","figure","have","fetch","have","fetch","have","fetch","have","fetch","contain","re-implement","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","always","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","start","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","do","use","use","re-implement","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","have","fetch","have","fetch","have","fetch","have","fetch","me","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","refactor","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","compare","do","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","tag","search","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","compute","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","me,","have","fetch","have","fetch","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","use","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","also","have","fetch","use","have","fetch","have","fetch","have","fetch","have","fetch","think","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch","have","fetch"]},{"Key":"to get","Fragments":["away","this","rid","good","tests","an","the","all","Hamming","the","tips","my","overused.","rid","the","into","here","things","your","rid","the","a","it","to","the","it","rid","away","my","Hamming","it","a","up","things","things","into","away","used","things","rid","to","the","the","a","another","a"]},{"Key":"get away","Fragments":["from","without","from","from"]},{"Key":"away from","Fragments":["the","Arrays","beeing","```Calendar```","technical","trying","too","your","using","for","programming","coding"]},{"Key":"from the","Fragments":["\"technical","fact","[`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map)","biology/DNA","code","raw_number.","word.","external","class","Scaladoc","tests.","beginning.","StackOverflow","same","problem","beginning","previous","anonymous","other","sync","last","front","other","output","function","resp.","other","outside.","actual","existing","standard","chars","previous","\"About\"","number"]},{"Key":"the \"technical","Fragments":["domain\"/implementation"]},{"Key":"\"technical domain\"/implementation","Fragments":["details"]},{"Key":"domain\"/implementation details","Fragments":["to"]},{"Key":"details to","Fragments":["the"]},{"Key":"the \"business","Fragments":["domain\".","domain\".","domain\"","domain\"","domain\","]},{"Key":"\"business domain\".","Fragments":["A"]},{"Key":"domain\". A","Fragments":["String"]},{"Key":"A String","Fragments":["or"]},{"Key":"String or","Fragments":["Char"]},{"Key":"or Char","Fragments":["could"]},{"Key":"Char could","Fragments":["be"]},{"Key":"could be","Fragments":["just","interpreted","written","in","used","made","replaced","a","made.","much","replaced","resole","easier","removed,","moved","some","made","really","renamed","to","rewritten","message.exists(_.isLetter)","changed","more","moved","implemented","made","a","a","done","to","useful","expensive","improved.","to","cleared","replaced","deleted","a","contracted","just","simplified","better","more","simplified","used","`object","cleaner","replaced","defined","changed","interesting","replaced","```val```","simplified","to","a","replaced","helpful","terrible","saved","written","done","that","rewritten","rewritten"]},{"Key":"be just","Fragments":["anything.","a","==","me.","one","me.","me."]},{"Key":" Should","Fragments":["make","be","be","methods","the","the"]},{"Key":"Should make","Fragments":["the"]},{"Key":"make the","Fragments":["code","if-else","code","input","code","code","helper","solution","code","code","logic","statement","could","code","lookups","reader","code","None","tests","code","intent","code","tests","code","list","code","refactoring","code","implementation","`stmt`","code","argument","value","business","code","call.","checks","code"]},{"Key":"code more","Fragments":["readable","readable,","readable","readable,","obvious","obvious.","readable","readable.","readable.","readable","readable.","readable","functional","readable.","concise","readable.","readable,"]},{"Key":"more readable","Fragments":["and","or","per","than","than","if","to","than","than","and","how","but","here","than","to","if","(I","and","IMO.","with","with","than","to","if","-","then","if","w/","than","with","wins","than","than","IMHO","than","way","(well,","if","in","abd","than"]},{"Key":"readable and","Fragments":["hopefully","reasonably","quite","easy","definetly","more","self","understandable,","clear"]},{"Key":"and hopefully","Fragments":["less"]},{"Key":"hopefully less","Fragments":["error-prone"]},{"Key":"less error-prone","Fragments":["as","and","and"]},{"Key":"error-prone as","Fragments":["the"]},{"Key":"as the","Fragments":["danger","first","values","characters","recursive","same","class,","```case```","code","same","values","last","order","most","next","initial","values","basis","second.","accumulator","values","function","other","chances"]},{"Key":"the danger","Fragments":["is"]},{"Key":"danger is","Fragments":["reduced"]},{"Key":"is reduced","Fragments":["to"]},{"Key":"reduced to","Fragments":["misinterpret","`x.trim.isEmpty`"]},{"Key":"to misinterpret","Fragments":["a,"]},{"Key":"misinterpret a,","Fragments":["say"]},{"Key":"a, say","Fragments":["String"]},{"Key":"say String","Fragments":["that"]},{"Key":"String that","Fragments":["is","is","you"]},{"Key":"is actually","Fragments":["intended","a","needed","my","an","never","cleaner","helpful","a","quite","a","dangerous.","justa"]},{"Key":"actually intended","Fragments":["be"]},{"Key":"intended be","Fragments":["an"]},{"Key":"be an","Fragments":["X","immutable","overhead"]},{"Key":"an X","Fragments":["as"]},{"Key":"X as","Fragments":["a"]},{"Key":"as a","Fragments":["String","closure","name-","generic","variable","developer","conversation","val","conversation","conversation","conversation","`Map`","function","conversation","conversation","conversation","conversation","conversation","conversation","private","conversation","conversation","conversation","conversation","name,","conversation","val","conversation","conversation","conversation","conversation","conversation","function","conversation","conversation","question.","```Seq[Char]```","conversation","conversation","conversation","separate","conversation","conversation","conversation","question","more","conversation","conversation","conversation","conversation","list.","```Seq[Char]```","conversation","conversation","conversation","conversation","result","conversation","conversation","conversation","conversation","conversation","conversation","conversation","class","conversation","conversation","conversation","```var```","legacy","conversation","conversation","factory","conversation","conversation","case","conversation","conversation","conversation","case","String","conversation","conversation","yell,","conversation","conversation","parameter,","member","series","function,","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","parameter,","conversation","conversation","substitution","conversation","challange","conversation","conversation","conversation","conversation","val","conversation","conversation","demo","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","separate","conversation","conversation","conversation","conversation","\u003c=","function","```lazy","conversation","conversation","conversation","conversation","conversation","question.","conversation","\u003ccode\u003eval","variable","String","conversation","max","conversation","conversation","conversation","conversation","conversation","constant,","conversation","map.","conversation","conversation","domino","conversation","conversation","general","conversation","Scala","conversation","conversation","conversation","tail","conversation","conversation","conversation","conversation","conversation","conversation","match.","start","function","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","valid","val.","conversation","conversation","conversation","conversation","conversation","little","conversation","conversation","conversation","conversation","conversation","conversation","function.","conversation","conversation","val","string","conversation","conversation","conversation","val:","conversation","conversation","conversation","conversation","conversation","one","conversation","match","match.","conversation","conversation","conversation","`lazy","conversation","single","conversation","conversation","non-implicit","conversation","conversation","conversation","way","conversation","conversation","conversation","conversation","conversation","value","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","val","```switch","conversation","conversation","conversation","conversation","conversation","single","conversation","conversation","name","crutch.","conversation","conversation","conversation","conversation","conversation","conversation","boolean","conversation","reviewer","sorted","conversation","type","conversation","constant.","conversation","conversation","text","conversation","word","sequence","`private`","conversation","conversation","collection","question.","conversation","store","conversation","conversation","one-liner,","conversation","conversation","conversation","conversation","trade-off.","conversation","conversation","conversation","```def```","conversation","map","conversation","conversation","conversation","conversation","conversation","conversation","conversation","succession","conversation","constant.","conversation","conversation","conversation","conversation","conversation","conversation","side","function","conversation","conversation","side","conversation","```Seq[Char]```","method","conversation","conversation","result.","conversation"]},{"Key":"a String","Fragments":["that","argument).","to","instead","as","(previous","should","is","and","could","indeed","with"]},{"Key":"is intended","Fragments":["to","to"]},{"Key":"intended to","Fragments":["be","compensate","be"]},{"Key":"to be","Fragments":["a","too","var","a","explicit","able","open","more","encapsulated","lazy.","in","fixed","placed","done","the","computed","more","to","a","more","uppercase","validated","open","of","extracted","evaluated","more","necessary","on","merciful","used","modified,","recomputed","a","thorough","self","the","clever,","a","on","a","a","super","more","invested","still","evaluated","overkill.","improved.","aware!","comparing","more","more","taken","able","able","a","pattern","pattern","more","a","used","of","made","made.","one","hard","computed","used.","open","less","a","in","a","defined","used","encoded","made","smart","something","readable.","mutually","\"BigInt\"","very","explicit","too","reevaluated","unused","able","even","a","introduced?","read","optimized","honest","brute","evaluated","the","defs.","defs.","a","implemented).","a"]},{"Key":" Also,","Fragments":["it","number,","parentheses","thanks","since","I","you","should","I","you'll","I","wouldn't","your","for","you'll","using","one","in","since","you","I","since"]},{"Key":"Also, it","Fragments":["should"]},{"Key":"it should","Fragments":["increase","\"not","be","simply","use","also","be.","work","be","be.","\"be"]},{"Key":"should increase","Fragments":["maintainability:"]},{"Key":"increase maintainability:","Fragments":["Should"]},{"Key":"maintainability: Should","Fragments":["you"]},{"Key":"Should you","Fragments":["ever"]},{"Key":"you ever","Fragments":["decide","run","have"]},{"Key":"ever decide","Fragments":["to"]},{"Key":"decide to","Fragments":["change","go"]},{"Key":"to change","Fragments":["the","a","my","the","the","return","them","Strings","the","values","my","throughout","after","some","the","anything","`find_alphabet`","this"]},{"Key":"change the","Fragments":["representation","function","Map","Streams","code","implementations","PrimeFactors","```sortWith```","behavior","naming","original"]},{"Key":"the representation","Fragments":["or"]},{"Key":"representation or","Fragments":["Row"]},{"Key":"or Row","Fragments":["to"]},{"Key":"Row to","Fragments":["some"]},{"Key":"to some","Fragments":["other","accumulator.","other","object","case","object","object","variable","(the","degree.","object"]},{"Key":"some other","Fragments":["type","solutions","place","ingenious","name","guides","peoples","submissions.","solutions","users","name,","solutions"]},{"Key":"other type","Fragments":["(like"]},{"Key":"type (like","Fragments":["Char"]},{"Key":"(like Char","Fragments":["instead"]},{"Key":"Char instead","Fragments":["of"]},{"Key":"instead of","Fragments":["Int","modulo/remainder","recursing","explicitly","these","a","```GregorianCalendar```?","concatenating","filtering,","a","struggling","`+`.","using","`filter`","```ListMap```.","making","one","Nucleotide.values.","`Map[Int,","an","if-else.","for","```getOrElse```.","a","Double","`fun(x)","only","shouting.","```sorted```?","the","string","typing","not","full","a","a","filter-length","using","pattern","\"+\".","```map/flatten```:","Robot._","hardcoded","case","\"explode\".","the","if-else.","`x","`message`",".reduce(_","just","List.range","last.","regex'es.","filtering","looking","just","this","the","your","flatMap,map.","flatMap/map.","a","\"var\"","```equals```.","just","the","your","splitting","TreeMap.","semicolon","flatMap-map.","a","changing","modifying","`sameElements`","```dropWhile```?","a","such","if-else).","```replaceAll```.",".equals()","\"def","a","```Array```.","doing","just","```(0","recursion.","flatMap-map.","making","using","regex:","this","regexps.","```HashSet(1,2,3)```.","a","```TreeMap```).","a","`Ordering`.","getting","just","including","```1.to(n)```","the","changing","just","these","5","deprecated","```foldLeft```","```foldLeft```","`e._1`.","inside","hard-coded","the","Unit?","your","what","everyting","if/elseif/else","your","```identity(_)```.","a","using","just","()","```filter(Not)-length```","```str.filter(!options.contains(_)).length","the","regex","preprocessing","streams/lists.","```number.charAt(0)```","```input","StringBuilder,","a","something","Scala's","a","manually","```filter","try","nucleotideCounts.apply(nucleotide)","`foreach`.","List.","[a-z0-9]","the","\"sortedWord\".","a","`Option`.","the","your","blacklisting.","```Future.sequence```.","`_`","concat","\"Woah\"","array.size","magic","foldLeft.","equals","filter\u0026size","using","replaceAll,","two.","```x","pattern","equals.","for","```def```s","```\"%.2f\".format(number).toDouble```?","when","`potsArr`.","`substring(1,","modifying","```removeAll```.","overloading","\"+\":","defining","`say`","\"raw\"","these","the","```foldLeft```.","if/else.","\"Range.apply\"","def:","the","trying","`a","Strings,","Scala","Scala","null?","null?","the","counting","isDefined-get","a","\"filter\":","```isSameWord```.","something","the","a","monkey","pattern","underscores).","this","the","```x","a,b,x","`foldLeft`.","a","`for`","the","clean(number)","```.reduce(_+_)```?","```filter-size```.","adding","writing","HashMap","just","```rem```.","a","\"Whoa,","s","`s","many","filter","checking","```filter/size```.","```endsWithQuestionMark```.","```map/reduce```","mutable","your","lists","`rem`.","this","a","just","pattern-matching","setting","setting","`foldLeft`.","directly","```if-else```."]},{"Key":"of Int","Fragments":["as"]},{"Key":"Int as","Fragments":["is"]},{"Key":"as is","Fragments":["common"]},{"Key":"is common","Fragments":["for"]},{"Key":"common for","Fragments":["chess"]},{"Key":"for chess","Fragments":["notation)"]},{"Key":"chess notation)","Fragments":["then"]},{"Key":"notation) then","Fragments":["you"]},{"Key":"might not","Fragments":["have","have","completely","be","want","be"]},{"Key":"not have","Fragments":["quite","the","any","to","assign","to","to","to","got","a","the","the","any","this","to","your","this"]},{"Key":"have quite","Fragments":["the"]},{"Key":"quite the","Fragments":["same"]},{"Key":"the same","Fragments":["hard","spirit","problem.","name","thing","name","path.","issue","solution","name","line","fears.","thing.","as","inline","as","effect,","val","way","name","empty","logic","order","name","line","too)","thing","number","name,","random","implementation","result","ideas.","project,","as","solution,","(at","value","length.","type?","as","job","name.","solution,","as","algorithm","thing","effect","things","transformed","happened","as","question.","values.","return","letter","name","name","route,","as","String","name","letter.","effect,","thing","block","thing?","name","thing","as","code","time,","mistake","name","implicit"]},{"Key":"same hard","Fragments":["time"]},{"Key":"hard time","Fragments":["as","parsing"]},{"Key":"time as","Fragments":["when"]},{"Key":"as when","Fragments":["you"]},{"Key":"when you","Fragments":["have","go","make","reset","have","can","could","have","use","only","do","can"]},{"Key":"you have","Fragments":["hard-coded","\u003e","opted","already","the","O(n)","to","to","already","to","a","code","a","to","to","just","manually","your","the","suggested.","to","pushed","\"static\"","two","already","the","to","sorted","to","and","probably","criticism,","that","an","some","a","about","abstractions","a","a","laid","found","probably","on","got","a","an","to","gotten","with","over-engineered","a","either","a","used","this","there.","made","this"]},{"Key":"have hard-coded","Fragments":["rows"]},{"Key":"hard-coded rows","Fragments":["as"]},{"Key":"rows as","Fragments":["Seq[Char]"]},{"Key":"as Seq[Char]","Fragments":["everywhere."]},{"Key":"Seq[Char] everywhere.","Fragments":["At"]},{"Key":"everywhere. At","Fragments":["least"]},{"Key":"At least","Fragments":["the","it","```Yell```","if","it","with","you","for"]},{"Key":"least the","Fragments":["compiler"]},{"Key":"the compiler","Fragments":["could","is.","does","might","to","isn't","doesn't","will","easily.","from"]},{"Key":"compiler could","Fragments":["give"]},{"Key":"could give","Fragments":["you","me,","you","it"]},{"Key":"give you","Fragments":["more","what","an","2","the"]},{"Key":"you more","Fragments":["assist"]},{"Key":"more assist","Fragments":["by"]},{"Key":"assist by","Fragments":["showing"]},{"Key":"by showing","Fragments":["you"]},{"Key":"showing you","Fragments":["all"]},{"Key":"you all","Fragments":["the"]},{"Key":"all the","Fragments":["resulting","functions","`\"\"\"...\"\"\".r`","pieces","wiring","tricks","details:","code","logic","cases","characters","conditions.","curly","work","items.","work","\"Sure.\"","helper","tests","methods","digits","tests,","built-in","work","`first`,","\"{\"","logic","`match`","heavy","way...","test","Scala","work;","computing","test","tests.","type","previous","different","letters","\"return\"","tests.","```returns```","functions","old","ranges","members","nice","work.","filter","counts"]},{"Key":"the resulting","Fragments":["compilation","String","(shuffled)"]},{"Key":"resulting compilation","Fragments":["errors"]},{"Key":"compilation errors","Fragments":["immediately."]},{"Key":"The type-safe","Fragments":["way"]},{"Key":"type-safe way","Fragments":["to"]},{"Key":"way to","Fragments":["do","do","implement","learn","test","make","make","implement","solve","do","check","do","do","go","perform","check","handle","implement","compare","make","create","generate","check","do","implement","optimize","go","match","write","solve","split","traverse","match","perform","loop","create","simplify","do","do","preserve","use","define","do","solve","make","do","match","do","calculate","stay","solve","do","get","perform","change","both","map","let","do","experiment","declare","prevent","create","avoid","create","learn.","write","smash","update","recurse","recurse","recurse","convey","say","create","reduce","measure","do","do","define","iterate","use","do","do","solve","fix","use"]},{"Key":"do all","Fragments":["this","tests","the","the","the","the","my","the"]},{"Key":"all this","Fragments":["would","zipping"]},{"Key":"this would","Fragments":["be","just","fail","be","probably","be","allow","improve"]},{"Key":"would be","Fragments":["declare","helpful.","any","to","to","easier","to","to","more","better","easier","message","great","justified.","using","to","helpful","even","a","interested","good","that","interesting.","happy","to","much","a","in","easier","better","very","how","to","simpler","better","more","fine,","shorter","more","an","more","to","an","more","interested","generated","more","the","re-calculated","to","better","2","more","interested","a","good","cleaner","interesting!","non-trailing","good","nice","valid","the","actually","inlined","more","fine","great.","more","to","to","a","more","more","better","I'd","more","even","cleaner","safer.","called"]},{"Key":"be declare","Fragments":["true"]},{"Key":"declare true","Fragments":["new"]},{"Key":"true new","Fragments":["classes/traits/objects"]},{"Key":"new classes/traits/objects","Fragments":["for"]},{"Key":"classes/traits/objects for","Fragments":["all"]},{"Key":"all this,","Fragments":["but"]},{"Key":"this, but","Fragments":["it","see"]},{"Key":"but it","Fragments":["seems","gave","still","seems","does","is","codifies","has","can","is","doesn't","works.","gives","is","feels","enables","then","did","does","will","ends","required","wasn't","turned","is","just","was"]},{"Key":"it seems","Fragments":["to","worth","to","like","worth","like","to","reasonable."]},{"Key":"seems to","Fragments":["be","be","be","have,","me","lead","be","imply","me","allow","make","be","make","me","be"]},{"Key":"be too","Fragments":["much","complicated","heavy","smart..."]},{"Key":"too much","Fragments":["effort.","imperative","(any?)","brain","of","calendar","\"Java","Java!","arithmetic","to","into","point-and-bracketless","like","of","since","overhead","Java-like:","of","for"]},{"Key":"much effort.","Fragments":["So"]},{"Key":"effort. So","Fragments":["I"]},{"Key":"So I","Fragments":["consider","got","got","could","replaced","tried","didn't","guess"]},{"Key":"I consider","Fragments":["type","the","these","usage","it"]},{"Key":"consider type","Fragments":["Aliases"]},{"Key":"type Aliases","Fragments":["a"]},{"Key":"Aliases a","Fragments":["good"]},{"Key":"a good","Fragments":["and","name,","name.","idea,","initial","point!","idea","way!","way.","amount","idea","name","exercise!","name","name","solution.","descriptive","hint,","explanatory","exercise.","habit.","solution.","name","name,","telling","question.","balance.","name.","start.","way","way","candidate","place","name","idea,","way","idea","reason","reason","reason."]},{"Key":"good and","Fragments":["cheap","it"]},{"Key":"and cheap","Fragments":["compromise."]},{"Key":"cheap compromise.","Fragments":["I"]},{"Key":"compromise. I","Fragments":["have"]},{"Key":"have found","Fragments":["it","`s.take(1)`","the","the"]},{"Key":"found it","Fragments":["often","much","more","in","a"]},{"Key":"it often","Fragments":["useful"]},{"Key":"often useful","Fragments":["to","to"]},{"Key":"useful to","Fragments":["start","use"]},{"Key":"to start","Fragments":["out","reading","them","\"thinking"]},{"Key":"start out","Fragments":["with"]},{"Key":"out with","Fragments":["a","brute"]},{"Key":"a simple","Fragments":["type","```forall```","asterisk","`Set`","sort","map","exercise","function","if-else","match","statement.","thing","boolean","if-else","``map```","def","expression","```%```","Set?","problem.","if-else.","if-else","if-else","```Seq```","if-else"]},{"Key":"simple type","Fragments":["alias"]},{"Key":"type alias","Fragments":["and","for","like","in","does"]},{"Key":"alias and","Fragments":["let"]},{"Key":"and let","Fragments":["it","it"]},{"Key":"let it","Fragments":["grow","fall"]},{"Key":"it grow","Fragments":["into"]},{"Key":"grow into","Fragments":["something"]},{"Key":"into something","Fragments":["more","else?"]},{"Key":"something more","Fragments":["complex","thorough","elegant.","descriptive"]},{"Key":"more complex","Fragments":["later","code","than","using","is"]},{"Key":"complex later","Fragments":["if"]},{"Key":"later if","Fragments":["need"]},{"Key":"if need","Fragments":["be."]},{"Key":" What","Fragments":["do","is","if","drove","is","exactly","about","is","I","is","would","I","could","are","is","if","should","speaks","advantage","about","about","about","is","is","I","should","is","do","if","is"]},{"Key":"What do","Fragments":["you","you","you","you","you","you","you","you","you"]},{"Key":"do you","Fragments":["say?","think","mean","use","mean?","believe","think?","define","think?","really","mean?","think","import","use","explicitly","think?","even","think","mean","think","do","think","feel","guarantee","have","mean","think?","want","need","think","use","need","have","think","import","really","use"]},{"Key":" PS:","Fragments":["Found","If"]},{"Key":"PS: Found","Fragments":["this"]},{"Key":"Found this","Fragments":["one"]},{"Key":"this one","Fragments":["which","yourself","(where","yourself","yourself","yourself","better!","was","yourself","yourself","i","yourself","actually","looks","is","-","has","actually","yourself","better.","off","still."]},{"Key":"is in","Fragments":["the","the","your","the","three","all","its","the","a","Scala)","your"]},{"Key":"in the","Fragments":["spirit","`if`","place","information","```Bearing```s","companion","other","companion","objects,","first","**if**,","documentation).","sequence.","constructor.","extractor","future.","tests).","requirements?","school","standard","name,","context","fourth","guard","guard","`Phrase`","return","code","code,","`Shouting`","context","tests,","evaluation","right","```IllegalArgumentException```","declaration,","whole","end?","right","companion","problem","pattern","first","end","isQuestion","Scala","method","regexp","message?","filter","case-clauses","constructor","tests","code,","object","set","longer","simplest","`count`","context","'avoid","first","[Scala","documentation","same","next","list...","Map","constructor.","list","input","next","future.","Readme.","middle.","same","hey()","future","Scala","wrong","best","pattern","comparison,","reverse,","fold).","cases","match","class?","business","test","requirement","standard","standard","[```trait","companion","first","Robot","Scala","``else``","same","connections","discussion","map...","spec","class","`toString()`","constructor)","context","test","spesc","count","past.","isQuestion","standard","right","for","toLowerCase","match","if","map?","second","constructor","rest","add","reams","\"constructor\"?","companion","database.","regex","present","`case`","last","end,","final","discussion","given","tests:","conditionals","filter","code","repository","code","case","result)","crypto-square","tests?","given","constructor.","count","companion","termination","case-clauses.","`RuleMaker`.","map.","list","README","tuple","Scala","second","square","companion","test","fold","final","given","Scala","first","end","\"business","previous","nucleotideCounts","isQuestion","companion","block.","main","regex","Option","constructor,","companion","last","next","end","isYell","GregorianCalendar","loop.","problem","groupBy.","private","same","tests,","Readme,","Monad\"","next","conditionals","tests","rnaMap","following","list","amount","`grade`","\"business","db","docs?","spirit","background","```Option```","actual","next","`sorted`","class","`None`","constructor"]},{"Key":"the spirit","Fragments":["of","of"]},{"Key":"spirit of","Fragments":["my","Scala","FP"]},{"Key":"of my","Fragments":["own","countWords","favourite","own","solution","brain","test","suggestions."]},{"Key":"my own","Fragments":["thinking:","code","personal","b/c","learning.","reference"]},{"Key":"own thinking:","Fragments":["[Type"]},{"Key":"thinking: [Type","Fragments":["aliases](http://twitter.github.io/effectivescala/#Types"]},{"Key":"[Type aliases](http://twitter.github.io/effectivescala/#Types","Fragments":["and"]},{"Key":"aliases](http://twitter.github.io/effectivescala/#Types and","Fragments":["Generics-Type"]},{"Key":"and Generics-Type","Fragments":["aliases)"]},{"Key":"I guess","Fragments":["one","the","you","the","I","to","you're","you","you","you","if","this","that's","I","that","a","`toList`","overall","\"wrapString\"","then"]},{"Key":"guess one","Fragments":["comprehension"]},{"Key":"one comprehension","Fragments":["should"]},{"Key":"comprehension should","Fragments":["be"]},{"Key":"be cleaner.","Fragments":["Calling"]},{"Key":"cleaner. Calling","Fragments":["grouped(boardSize)"]},{"Key":"Calling grouped(boardSize)","Fragments":["is"]},{"Key":"grouped(boardSize) is","Fragments":["not"]},{"Key":"not much","Fragments":["overhead","is"]},{"Key":"much overhead","Fragments":["or","to"]},{"Key":"overhead or","Fragments":["complexity"]},{"Key":"or complexity","Fragments":["added."]},{"Key":"complexity added.","Fragments":["Your"]},{"Key":"added. Your","Fragments":["solution"]},{"Key":"Your solution","Fragments":["is","looks","can","may","is","is","is","definitely"]},{"Key":"solution is","Fragments":["interesting,","a","much","also","done","also","probably","not","ok,","from","great!","alright,","incorrect","that","quite","from","ok,","a","the","pretty","very","roughly","similar","the","that","quite","less","from","actually","nice"]},{"Key":"is interesting,","Fragments":["you","I"]},{"Key":"interesting, you","Fragments":["defined"]},{"Key":"you defined","Fragments":["custom","two"]},{"Key":"defined custom","Fragments":["types"]},{"Key":"custom types","Fragments":["for"]},{"Key":"types for","Fragments":["everything,","everything,"]},{"Key":"for everything,","Fragments":["what","also"]},{"Key":"everything, what","Fragments":["is"]},{"Key":"what is","Fragments":["the","being","doing.","**statement**","going","better","a","bad,","simple?","simple","it","that","main","meant","happening","this","the"]},{"Key":"is the","Fragments":["main","double","last","best","only","answer","check","return","method","same","big","way","coming","same","reuse","initial","one","required","stuff","best","right","simpler","hardest","check","thing","operator","explanation","guideline.","final","default","right","use","matching","built-in","shortest","good","idiomatic","best","number","easy","closest","test","check","guide","Option","Option","value","mapValues","most","reason","proper","piece","originally","main","`Seq`","String/Collection","check","limitation","functional","obvious","same","right","check"]},{"Key":"the main","Fragments":["reason","reason","advantage","function.","operation","argument"]},{"Key":"main reason","Fragments":["you'd","I"]},{"Key":"reason you'd","Fragments":["wanna"]},{"Key":"you'd wanna","Fragments":["do"]},{"Key":"wanna do","Fragments":["that?"]},{"Key":" You","Fragments":["may","could","might","can","could","shouldn't","can","can","can","can","can","could","don't","are","can","can","could","might","can","can","could","are","could","could","can","can","are","could","should","have","can","could","can","might","can","can","don't","got","can","will","could","could","should","were","can","can","can","could","should","might","might","could","may","are","can","should","don't","should","really","seem","might","could","probably","test","could","don't","may","stay","used","probably","could","can","can","can","can","might","could","can","can","have","could","could","can","might","might","could","could","are","can","could","should","could","could","are","are","could","could","can","can","can","could","can","might","could","get","can","can","do","could","could","are","could","don't","are","don't","could","can","could","can","can","could","can","could","could","can","could","could","can","can","could","can","might","could","could","could","could","could","could","could","can","don't","could","could","need","can","could","don't","could","could","might","are","could","are","could","could","can","don't","should","can","could","could","can","can","could","can","don't","can","could","can","might","haven't","are","should","can","won","could","might","could","can","don't","can","can","can","can","can","don't","could","could","could","can","are","should","are","could","could","can","should","can","could","can","can"]},{"Key":"You may","Fragments":["have","want","find","choose"]},{"Key":"may have","Fragments":["a","been","a","a","missed","had","been"]},{"Key":"have a","Fragments":["point","conversation","String","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","private","different","conversation","discussion","conversation","conversation","little","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","private","conversation","conversation","more","very","conversation","conversation","conversation","conversation","private","point","space","conversation","conversation","conversation","conversation","little","conversation","bug,","conversation","conversation","conversation","conversation","conversation","soft","conversation","conversation","conversation","conversation","look","choice","conversation","conversation","second","conversation","conversation","question:","space","conversation","conversation","conversation","private","conversation","conversation","```sealed","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","little","conversation","conversation","conversation","method","conversation","conversation","conversation","conversation","conversation","conversation","conversation","copy","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","`withDefaultValue`","strong","hard","conversation","conversation","conversation","conversation","conversation","conversation","conversation","two-step","conversation","conversation","conversation","conversation","private","very","conversation","conversation","private","conversation","conversation","point","conversation","conversation","conversation","conversation","conversation","look","conversation","look","conversation","```GregorianCalendar```","look","compilation","built-in","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","lot","radical","conversation","conversation","conversation","little","conversation","conversation","private","solution","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","point","conversation","conversation","conversation","conversation","more","conversation","conversation","conversation","conversation","private","conversation","conversation","named","conversation","conversation","conversation","function","mutable","```var```","conversation","conversation","conversation","conversation","conversation","conversation","private","look","file","conversation","conversation","construct","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","look","conversation","conversation","conversation","look","conversation","conversation","conversation","conversation","conversation","unique","problem.","different","closer","conversation","short","conversation","method","conversation","conversation","conversation","helper","private","small","conversation","little","conversation","conversation","conversation","conversation","conversation","conversation","conversation","look","bit","conversation","conversation","conversation","hard","conversation","conversation","conversation","Java-style","conversation","conversation","conversation","good","conversation","conversation","conversation","go","conversation","conversation","private","private","`.sum`","conversation","conversation","conversation","conversation","conversation","conversation","conversation","conversation","cleaner","little","cache","conversation","conversation","conversation"]},{"Key":"a point","Fragments":["here.","of","here.","here","of","here."]},{"Key":"point here.","Fragments":[":-)","I"]},{"Key":" In","Fragments":["my","the","my","the","the","the","the","the","the","the","the","the","the","some","the","the","the","the","the","the","the","this","the","the","the","the","Scala,","the","the","the","the","the","the","trying","the","the","the","the","the","most","the","fact","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","Scala","the","the","general,","the","the","the","order","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","general:","``toLetterMap``,","``addDefaults``","my","the","the","the","the","the","the","scala","the","the","the","the","the","the","the","the","the","the","the","the","the","case","the","the","the","the","the","my","the","the","the","the","the","the","the","the","the","this","the","the","the","the","human","my","the","the","the","the","the","the","the","my","the","the","the","the","the","the","the","the","the","the","the","line","the","the","the","my","the","the","the","the","the","the","the","the","Scala","the","Scala","the","the","the","the","the","the","Scala","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","my","the","the","this","the","My","the","the","the","the","the","the","the","add(),","Scala","the","the","the","the","the","the","scala","the","the","any","the","the","the","the","the","the","the","the","the","the","the","the","the","fact,","the","the","the","your","the","the","#3","this","the","the","the","the","the","the","the","terms","the","the","the","the","the","the","the"]},{"Key":"In my","Fragments":["solution","code,","opinion","opinion","earlier","opinion,","case,","solution","opinion","search","mind,"]},{"Key":"my solution","Fragments":["with","minus","for","was",")))","but","I","as","I","would","(#4),","#2","with","and"]},{"Key":"solution with","Fragments":["just","```synchronized```.","that","`reverse`","the","re-implementation","the","that","a","split"]},{"Key":"with just","Fragments":["one","doing","sorting"]},{"Key":"just one","Fragments":["for-comprehension","for-comprehension,","Map","value","thing:","line.","day","not","regex","that","(tail-)recursive"]},{"Key":"one for-comprehension","Fragments":["I"]},{"Key":"for-comprehension I","Fragments":["had"]},{"Key":"I had","Fragments":["to","one","some","to","to","a","the","problem","a","encountered","a","seen","everything","a","to","to","the","earlier.","to","to","a","it,","a","a","problems","to","to","an","to","this","started","to","the","it"]},{"Key":"had to","Fragments":["then","return","write","pass","look","be","steel","use","pass","surround","stretch","agree.","be","add","put","learn"]},{"Key":"to then","Fragments":["do"]},{"Key":"then do","Fragments":["a"]},{"Key":"do a","Fragments":["\"grouped\"","tricky","quick","validation.","`a.zip(b).count`","lot","second","version","check","version"]},{"Key":"a \"grouped\"","Fragments":["to"]},{"Key":"\"grouped\" to","Fragments":["get"]},{"Key":"get this","Fragments":["Seq","correct."]},{"Key":"this Seq","Fragments":["of"]},{"Key":"Seq of","Fragments":["Seqs.","pairs","differences"]},{"Key":" Now","Fragments":["it","what","you","that","what"]},{"Key":"Now it","Fragments":["depends"]},{"Key":"it depends","Fragments":["on","on","on"]},{"Key":"depends on","Fragments":["whether","your","how","getting","the","the","things","the"]},{"Key":"on whether","Fragments":["you"]},{"Key":"whether you","Fragments":["consider","realize","work"]},{"Key":"you consider","Fragments":["this"]},{"Key":"consider this","Fragments":["better","too"]},{"Key":"this better","Fragments":["or","than"]},{"Key":"better or","Fragments":["worse"]},{"Key":"or worse","Fragments":["than"]},{"Key":"worse than","Fragments":["your","without","linear"]},{"Key":"than your","Fragments":["two","previous","first"]},{"Key":"your two","Fragments":["for's.","`validate_...`","String","recursive"]},{"Key":"I don't","Fragments":["know.","like","want","think","understand","regular","like","know.","know","disagree.","like","know","like","see","think","think","like","need","know","know","see","like","really","like","think","care,","see","quite","have","know","ordinarily","have","know","like","understand","think","think","need","like","know","like","find","find","think","have","know","think","like","really","like:","think","like","think","see","know","like","like","trust","understand","have","really","like","know","get","have","think","need","like","know","believe","think","like","need","see","like","have","see"]},{"Key":"don't know.","Fragments":["The","Comparing"]},{"Key":"know. The","Fragments":["idea"]},{"Key":"The idea","Fragments":["was","is","of","is","is"]},{"Key":"idea was","Fragments":["to"]},{"Key":"was to","Fragments":["obtain","use","use","have","put","make","move"]},{"Key":"to obtain","Fragments":["a"]},{"Key":"obtain a","Fragments":["Sequence"]},{"Key":"a Sequence","Fragments":["of","of"]},{"Key":"Sequence of","Fragments":["Sequences","Chars"]},{"Key":"of Sequences","Fragments":["so"]},{"Key":"Sequences so","Fragments":["I"]},{"Key":"so I","Fragments":["can","like","will","really","wanted","can't","needed","opted","know","wanted","love","decided","submitted","suggest","decided","just","can","added","am","will","can","don't","would","can","wanted"]},{"Key":"I can","Fragments":["print","see","see","change","destructure-bind","accept","(and","remove","refactor","say","definitely","say","gain","use","promise","see","really","see","avoid","only","easily","find","see","offer","see","refine","avoid","think","access","make","resubmit","find","get","make","definitely"]},{"Key":"can print","Fragments":["the"]},{"Key":"print the","Fragments":["board"]},{"Key":"the board","Fragments":["correctly."]},{"Key":"board correctly.","Fragments":["If"]},{"Key":"correctly. If","Fragments":["I"]},{"Key":"If I","Fragments":["had","want","were","try","am","get","look"]},{"Key":"had one","Fragments":["comprehension,"]},{"Key":"one comprehension,","Fragments":["I"]},{"Key":"comprehension, I","Fragments":["would"]},{"Key":"I would","Fragments":["end","stay","define","also","also","change","at","like","compare","make","probably","think","suggest","type","strongly","prefer","say","just","love","have","always","be","like","have","prefer","have","use","prefer","also","argue","have","then","question","start","recommend","have","have","be","do","prefer","name","have","have","also","try","have","not","have","not","consider","have","say","even","be","remove","say.","then","not","change","use","use","drop","say","also","probably","only","have","rather","not","only","recommend","also","perhaps","always","always","make","rather","expect","chose","say","accept","make","then","add","not","prefer","say","separate","completely","recommend","go"]},{"Key":"would end","Fragments":["up"]},{"Key":"end up","Fragments":["with","simplifying","looping","on","doing"]},{"Key":"up with","Fragments":["a","a","an","is","this.","reimplementing","a","a","this.","after","a","two"]},{"Key":"of Chars","Fragments":["and"]},{"Key":"Chars and","Fragments":["would"]},{"Key":"and would","Fragments":["have","be"]},{"Key":"would have","Fragments":["to","to","written","to","`withDefaultValue`","separate","been","saved","to","extracted","created","made","been","parens","used","helped","```nucleotides.map(_","done","been","the","been","been","written","a","it","been","all"]},{"Key":"to split","Fragments":["at","the","it","on","the","the"]},{"Key":"split at","Fragments":["board"]},{"Key":"at board","Fragments":["size"]},{"Key":"board size","Fragments":["to"]},{"Key":"size to","Fragments":["add"]},{"Key":"add the","Fragments":["new","digit","`lazy`","type","result","return"]},{"Key":"the new","Fragments":["lines...","value.","names!","map","student.","students.","Query(s)","instance","name","calendar."]},{"Key":" nice!","Fragments":["I","i",":-)",":-)","small",":-)",":-)",":-)"]},{"Key":"nice! I","Fragments":["also"]},{"Key":"I also","Fragments":["like","realized","try","don't","broke","decided","didnt","like","stole","just","hate","didn't","wish","saw","used","tried","moved","did","started","cleaned","really","don't","need","dislike","wanted","tried"]},{"Key":"also like","Fragments":["the","the"]},{"Key":"like the","Fragments":["greek","implementation","algorithm","idea","use","way","use","ifs","fact","filter","way","fact","conciseness","way","internal","combination","high","use","scala","way","'a'","\"cond\"","use","use","pattern","`NotLower`","randomString","`divisibleBy`","test","idea","name","types","hey-method.","type","way","function","simplicity","use","`object`","\"character\"","approach.","use","Stream","conciseness","usage","functional","new","optimal","pattern","resp.","size","fact","use","inconsistency","use","pattern","immutability"]},{"Key":"the greek","Fragments":["delta"]},{"Key":"greek delta","Fragments":["char"]},{"Key":"delta char","Fragments":[":-)"]},{"Key":" guess","Fragments":["you","this","you","you","you","you","you"]},{"Key":"guess you","Fragments":["can","don't","can","can","can","are","still","can","wanted","could"]},{"Key":"can do","Fragments":["it","the","with","w/o","it","this","most","part","w/o","even","`arg.last","without","something"]},{"Key":"do it","Fragments":["in","with","```@rosalinda```ursively?","w/","with","```@andre```ursively?","this","w/o","clean","more","in","in","in","in","in","this",":)","in","in","w/o","in","w/","in","w/o","w/o","w/o","just","without","explicitly","lazy","w/","the","in","for","the"]},{"Key":"it in","Fragments":["just","situations","a","more","differences","\"outside","the","two","a","O(n","Python","FP","Java)","one","my","tho","functional","val","FP","anyway","differences","mind.","my","FP","the","my","iteration"]},{"Key":"in just","Fragments":["one"]},{"Key":"one for-comprehension,","Fragments":["though"]},{"Key":"for-comprehension, though","Fragments":["(?)."]},{"Key":" Converted","Fragments":["the"]},{"Key":"Converted the","Fragments":["if-else"]},{"Key":"the if-else","Fragments":["chain","block","statement"]},{"Key":"if-else chain","Fragments":["to"]},{"Key":"chain to","Fragments":["pattern"]},{"Key":"to pattern","Fragments":["matches","matching.","match"]},{"Key":"pattern matches","Fragments":["and",":)"]},{"Key":"matches and","Fragments":["got","chars."]},{"Key":"and got","Fragments":["rid"]},{"Key":"got rid","Fragments":["of","of","of"]},{"Key":"of `isUpper`.","Fragments":["Checking"]},{"Key":"`isUpper`. Checking","Fragments":["whether"]},{"Key":"Checking whether","Fragments":["uppercase"]},{"Key":"whether uppercase","Fragments":["and"]},{"Key":"uppercase and","Fragments":["lowercase","then","the"]},{"Key":"and lowercase","Fragments":["are"]},{"Key":"lowercase are","Fragments":["equal"]},{"Key":"are equal","Fragments":["makes","when"]},{"Key":"equal makes","Fragments":["it"]},{"Key":"makes it","Fragments":["easier","more","hard","more","a","clear","harder","a","all","more","easier","great"]},{"Key":"it easier","Fragments":["to","to","to","to","to","to"]},{"Key":"easier to","Fragments":["figure","read.","refactor","read.","read","read","understand","read","read","read.","read","have","read.","see","read.","read)","understand).","create","modify","figure","do","grow.","read","read","internationalize,","understand","just","understand.","follow,","understand","read.","understand.","read","understand","read","read.","manipulate","understand)","read","read.","read","read:"]},{"Key":"to figure","Fragments":["about","out","out","out","out).","out","out","out","out","out","this","it"]},{"Key":"figure about","Fragments":["what"]},{"Key":"about what","Fragments":["is","it's","it","you're"]},{"Key":"is being","Fragments":["checked,","evaluated.","used."]},{"Key":"being checked,","Fragments":["at"]},{"Key":"checked, at","Fragments":["least"]},{"Key":"at least","Fragments":["to","more","for","`char1`","try","oneUpperCase","indicate","one","a","keeps","store","also","indent","one","an","an","have","move","split","as","as","one","one","be"]},{"Key":"least to","Fragments":["me."]},{"Key":" Updated,","Fragments":["the"]},{"Key":"Updated, the","Fragments":["map"]},{"Key":"the map","Fragments":["to","one","with","at","values","entry","`m+=","to","itself","that","as","in","operation","constructed","function","and"]},{"Key":"map to","Fragments":["be","themselves.","be","replace"]},{"Key":"be var","Fragments":["immutable"]},{"Key":"var immutable","Fragments":["map,","again..."]},{"Key":"immutable map,","Fragments":["and","so","type"]},{"Key":"map, and","Fragments":["added","I"]},{"Key":"and added","Fragments":["a"]},{"Key":"added a","Fragments":["constant","helper","test,"]},{"Key":"a constant","Fragments":["for","is","with","instead","Map","and","time","and","time","and"]},{"Key":"constant for","Fragments":["Seq[String]."]},{"Key":"for Seq[String].","Fragments":["Thanks"]},{"Key":"Seq[String]. Thanks","Fragments":["for"]},{"Key":"Thanks for","Fragments":["the","reviewing","the","the","the","the","sharing","the","your","the","your","the","the","your","the","the","the","the","`require`","the","the","your","the","your","the","taking","the","the","the","the","the","the","the","the","your","pointing","this","your","the","your","the","the","Seq.fill","your","telling","this","the","the","the","the","your","the","advices,","the","the","your","the","the","the","FP","the","the","your"]},{"Key":"for the","Fragments":["feedback","feedback,","validity","anonymous","empty","movement","suggestion","heads-up.","conversion,","non-Seq","sumOfSquares","input","public","suggestions","sake","nucleotides","`isIllogical`","job:","outside","types?","hint","feedback.","feedback.","Map)","whitespace,","final","count","feedback.","occasional","invalidTriangle","most","feedback.","details.","advice","hint,","simple","user","user","```flatMap```","next","German","match/case","soultion.","new","pointer","feedback","blank","invalid","feedback.","range","for-comprehension","nice","\"Functional","Map","various","various","comments.","job.","tail","nit.","upper","next","whole","`String.isEmpty`","trouble","students","nits.","comparison.","parameter","feedback!","Strings.","validity","if","argument","tip!","feedback!","tip,","sorted","shouting!","defs","feedback!","feedback,","feedback,","future:","sake","string","return","Meetup","tips.","matches.","idea","validity","letters,","digits).","input!","feedback.","feedback","filter","explicit","fun","life","sake","days","pointers.","comment!","explanation","0","tips.","nits!","validity","one","comment.","other","feedbacks!","validity","last","count","typo,","upper","next","question","length","validity","guidance","commenting","result!","nits!","`nucleotideCounts`","tip!","feedback.","constructor","Scala","validity","whole","`Bob`","sake","nits.","great","way","comments.","other","last","Converser,","special","following","comment.","Scala","nitpick","Scala","sole","None","toString","comment.","argument","regexes","extra","split","feedback.","feedback.","test","operation","feedback!","second","third","parameter","tips","validity","invalid","feedback.","validity","rows","advice.","feedback.","digits.","feedback!!","return","tip!","input!","\"Board\"","suggestion","map"]},{"Key":"the feedback","Fragments":[":)","-",":)"]},{"Key":"your use","Fragments":["of","of","of","of","of","of","of","of","of","of"]},{"Key":"use of","Fragments":["type","a","built-in","a","the","the","the","`require`","`sorted`.","curly","infix","`!_.isLower`","`fold`","the","a","that?","pattern","scala","`zip`","Scala.","'var'","the","`return`","`pad`","def","Seq.count.","a","regexes","`takeRight`","type","Scalas","regular","pattern","the","a","```require```","an","companion","streams","a","a","Option","Scala's:","unapply","postfix","`val`","`isDigit`","guard","if-else","PartialFunction","```aggregate```.","regex","implicits","`Random.alphanumeric`","mutable","`var`s","pattern","immutable","unapply","the","groupBy","the","`PartialFunction`","the","'_'","```count```!","val's","pattern","`foldLeft`","the","that","the","fold.","`unapply`","a"]},{"Key":"of type","Fragments":["aliases","immutable","```Seq[Char]```,","```Set```","aliases,","```Option[Int]```?","String","aliases.","```Calendar```?","```Calendar```?","`String`.","Seq[String],","Seq[Char]?!","Boolean.","alias","aliases","```Seq[Char]```,","immutable","```Seq[Char]```"]},{"Key":"aliases (I","Fragments":["do"]},{"Key":"(I do","Fragments":["that"]},{"Key":"do that","Fragments":["myself","with","in","w/o","in","in"]},{"Key":"that myself","Fragments":["oftentimes)."]},{"Key":"In the","Fragments":["same","case","case","case","case","case","case","case","case","case","case","case","case","case","code","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","companion","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","first","second","case","case","case","case","cases","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","'hey'","case","case","case","case","case","case","case","case","case","case","object","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","case","order-independent","case","case"]},{"Key":"same spirit","Fragments":["you"]},{"Key":"spirit you","Fragments":["could"]},{"Key":"could have","Fragments":["constants","the","a","here","used","a","wordCount","used","avoided","separate","a","written","better","returned","just","a","your","a","a","created","a","a","removed","a","just","is","a","written","a","let","some","a","a"]},{"Key":"have constants","Fragments":["w/"]},{"Key":"constants w/","Fragments":["a"]},{"Key":"w/ a","Fragments":["good","good","mutable","```require```","for-comprehension.","good","simpler","capital","good","space","good","lower","```fold```?","good","good","small","for-comprehension?","```contains```","better","```for-comprehension```"]},{"Key":"good name,","Fragments":["here","but"]},{"Key":"name, here","Fragments":["for"]},{"Key":"here for","Fragments":["```Seq[String]()```.","readability.","the"]},{"Key":" As","Fragments":["an","another","you","for","```String```","an","for-comprehensions","an","another","this","a","a","a","I","of","additional","another","another","a","in","additional","additional","additional","a","another","another","far","additional","often","for","a","for","mentioned","another","another"]},{"Key":"As an","Fragments":["alternative","additional","alternative,"]},{"Key":"an alternative","Fragments":["to","if-elseIf)","approach","way","to"]},{"Key":"alternative to","Fragments":["a","your"]},{"Key":"to a","Fragments":["mutable","specific","value.","char","question,","user","Map","well-named","`List[Char]`","simpler","helper","function","function","`List`","companion","new","sequence.","pattern","constant","very","local","number.","single","predicate","nicely","Map[Int,Seq[String]]","Map","List?","questionmark,","oneliner.","var/val","PEBCAK","Seq","Seq","variable","function,","call","single","custom","`List`).","BigInt","local","Map","Java","ListBuffer.","non-letter?","nicely","```Stream```?","`List`","value","smaller","much","set"]},{"Key":"a mutable","Fragments":["Map","`ListBuffer`","Map.","var","Map","phrase.","Map,","value","list","Set","Map","Map","object","object.","object","object","value,","`var`","cache","builder,","object","map","map?","object.","List","object","`Map`"]},{"Key":"Map you","Fragments":["could","might"]},{"Key":"could use","Fragments":["a","```grade```","the","`trim`","the","```endsWith```","Scala's","```SortedMap```","`str.forall(_.isWhitespace)`","type","function","the","`String.forAll`","the","recursion,","```Seq.fill```","`count`","this","```filter```","`value.forall","```mapValues```","constants","```withDefaultValue```","a","```require```","```count```.","```str.forall(options.contains)```",".count","String's","```require```","the","```require```","it","(tail-)recursion).","here","```map```","lazy","the","the","(lazy)","combination","```str.toLowerCase.split(\"[^\\\\w']+\")```","`collect`.","Ranges","```(_.isLetterOrDigit)```","Predef's","it","```.groupBy(_.toLowerCase)```instead","a","```require```","```require```","```take```","a","the","```SortedMap```"]},{"Key":"use a","Fragments":["var","```lazy","mutable","simple","view","simple","companion","companion","\"companion","different","regex","```SortedMap```?!","```Range```","val","for","better","for-comprehension","for-comprehension","regex","mutable","Queue","`synchronized`","single","case","regex:","key","val","regex","type","`Set`.","`Seq`","Map","class","\"{","`defaultValue`?","different","simple","true","different","partial","case","Vector","lazy","val","var.","lazy","Set","pattern","plain","sentinel","for-comprehension","`getOrElse`!","class","robot","Range","StringBuilder","Range","```foldX```.","`SortedMap`","direct"]},{"Key":"a var","Fragments":["of","in","declared,","if","might","of"]},{"Key":"var of","Fragments":["type","type"]},{"Key":"type immutable","Fragments":["Map,","Map,"]},{"Key":"immutable Map,","Fragments":["that","if"]},{"Key":"Map, that","Fragments":["would"]},{"Key":"that would","Fragments":["save","kill","break","introduce","help).","simplify","look","enable","make","be","be","have"]},{"Key":"would save","Fragments":["you"]},{"Key":"save you","Fragments":["the","a"]},{"Key":"you the","Fragments":["conversion","option","generateName","warning.","Char"]},{"Key":"the conversion","Fragments":["for","is"]},{"Key":"conversion for","Fragments":["every"]},{"Key":"for every","Fragments":["call","string","char,","call","character,","call","instance","method?","class","reference."]},{"Key":"every call","Fragments":["of","(from","to"]},{"Key":"call of","Fragments":["```db```."]},{"Key":" Are","Fragments":["you","you","you","you"]},{"Key":"Are you","Fragments":["sure","kidding?","by","originally"]},{"Key":"you sure","Fragments":["that"]},{"Key":"sure that","Fragments":["the","reset","there's","you","you","a","different","the"]},{"Key":"that the","Fragments":["values","\"not","char","number","function","zip","methods","sum","list","result","exercise's","\"command\"","spec","logic","function","first","constructor","heavy","leading","example","input","change","`generateNumber`","word","example","first","compilation","code","latter","var","zip","default","function","sum","actual","emphasis","name","\"test\"","set","`isShout`","whole","same","number","same","two","toplevel","alternative","logic","new","string","objects"]},{"Key":"the values","Fragments":["of","are","is","in","of","will","will","in","will"]},{"Key":"values of","Fragments":["your","0.","the","a"]},{"Key":"your Map","Fragments":["are","instead"]},{"Key":"Map are","Fragments":["sorted,"]},{"Key":"are sorted,","Fragments":["too?","so"]},{"Key":"And I","Fragments":["would","guess","thought","prefer","have"]},{"Key":"would stay","Fragments":["away"]},{"Key":"stay away","Fragments":["from","from"]},{"Key":"from Arrays","Fragments":["if"]},{"Key":"Arrays if","Fragments":["I"]},{"Key":"if I","Fragments":["can.","was","can","can","reorder","do","do","understand","just","use","fully","understand","can","could","first","should","can.","understood","check","can).","recall","can","rely","can","don't","could","can!","should","were","want","could"]},{"Key":"I can.","Fragments":["A","Here"]},{"Key":"can. A","Fragments":["```toSeq```"]},{"Key":"A ```toSeq```","Fragments":["will"]},{"Key":"```toSeq``` will","Fragments":["do"]},{"Key":"will do","Fragments":["here","my","a","that!","the","the","it","it"]},{"Key":"do here","Fragments":["fine."]},{"Key":" Thank","Fragments":["you","you!","you,","you","you","you","you.","you","you","you.","you.","you!","you","you","you"]},{"Key":"the feedback,","Fragments":["for","though.","@troy."]},{"Key":"feedback, for","Fragments":["now"]},{"Key":"for now","Fragments":["I","but","I'll","anyway."]},{"Key":"now I","Fragments":["just","am","have","prefer","am","decided"]},{"Key":"I just","Fragments":["removed","chose","wanted","put","zipped","got","noticed","find","wanted","have","discovered","tried","enjoyed","know","perused","\"got\"","like","wanted","started","believe","submitted","can't","removed","took"]},{"Key":"just removed","Fragments":["the","some"]},{"Key":"removed the","Fragments":["response","`toMap`","import.","parenthesis","return","half"]},{"Key":"the response","Fragments":["var","to","so","changes.","from","was.","value."]},{"Key":" Scala","Fragments":["is","convention","collections","is","collections","Lists","provides","newbie","adds","also","convention"]},{"Key":"Scala is","Fragments":["expression-oriented,","expression-oriented,","expression-oriented,","expression-oriented,","prefixing","expression-oriented,","that","expression-oriented,"]},{"Key":"is expression-oriented,","Fragments":["so","so","so","so","so","so"]},{"Key":"expression-oriented, so","Fragments":["you","the","there","a","the","you"]},{"Key":"so you","Fragments":["don't","don't","don't","can","don't","could","don't","accepted","won't","don't","only","can","really","can","can","can","get","don't","want","can","can","can","don't","might","don't","don't","don't","won't","cannot","can","can","can","don't","can"]},{"Key":"you don't","Fragments":["need","recalculate","it's","have","need","need","need","need","have","need","have","have","even","need","have","like","need","really","want","want","actually","need","need","have","find","have","need","need","need","need","have","need","care","really","then","even","need","mind","believe","need","have","declare","have","need","like","have","need","get","need","need","have","need","need","know","want","want","have","need","use","need","need"]},{"Key":"don't need","Fragments":["this","the","all","parens","the","the","the","to","to","prime","the","to","to","the","the","to","this","to","this","all","`toList`","a","the","to","to","to","an","a","to","to","to","any","\"(_*)\".","the","to","that","to","to","to","a","to","this","any","to","to","the","to","to","to"]},{"Key":"need this","Fragments":["```response```","```map(identity)```","mkString,","check"]},{"Key":"this ```response```","Fragments":["var."]},{"Key":"You could","Fragments":["also","use","also","do","use","change","replace","use","extract","use","argue","verify","do","as","extract","move","probably","use","probably","also","also","also","simplify","skip","also","have","also","use","use","also","use","have","delete","also","avoid","do","have","simplify","use","use","consider","use","use","also","use","also","use","have","use","have","consider","use","have","use","move","of","then","skip","use","use","`map`","improve","also","also","split","use","simplify","extract","use","also","use","also","use","make","declare","have","use","also","also","use","also","use"]},{"Key":"could also","Fragments":["use","be","define","try","look","simplify","try","provide","try","have","eliminate","then","directly","use","use","just","be","have","redefine","try","try","try","simplify","have","consider","consider","try","turn","try","store","annotate","consider","try","take","discuss","remove","make","use","replace","have","try","consider","use","use","come","implement"]},{"Key":"also use","Fragments":["the","```require```","the","pattern","the","the","`withDefaultValue`","```withDefault","num","```count\"","of","the","\"\\_.toLowerCase\"","`withDefaulValuet`","a"]},{"Key":"use the","Fragments":["Scala","endsWith","scala","Java","computer","simplest","Boolean","regex","\"filter\"","normal","\"count\"","'.'","more","good","same","`count()`",".exists","Scala","```filter```","`values`","`copy`","more","cool","::","collection","same","sum","literals","Seq","most","`object","```(1","count()","mapValues","_","map","trim","return","_1","return","existing","```filterNot```","underscore:","`empty`","`Option`","`Random`","tailrec","word","count","same","scala","count","following","positive","return","trimmed","`.sorted`","Scala","```count```","more","same","map","`Map::withDefaultValue`","tuples","`getOrElse`","sorted","build-in","pattern","`clone()`","`List.map()`","`scala.collection.breakout`"]},{"Key":"the Scala","Fragments":["collection","idioms","class","I","collection","standard","convention","Collection","docs)","Collections","default","groove!","community.","groove!","Collection","exercise,","way.","collection","type","Collection","Collection","community","world?","Collection","Collection","sources","library","collection","collection"]},{"Key":"Scala collection","Fragments":["functions","functions.","functions","functionality.","functions","functions"]},{"Key":"collection functions","Fragments":["like","you","like","like","like","w/o","you","like","know"]},{"Key":"functions like","Fragments":["```filter,","`startsWith,","`exists,","```forall,","```map,","```forall```","```isLetter```","\"isShouting\",","`isEmpty`,","```filter```,","\"map\"","forall,","map,","```zip,","isLower,","```isQuestion```","map,","map,","```zip,","\"isQuestion\"","\"isShout()\"","\"filter\""]},{"Key":"like ```filter,","Fragments":["forall,"]},{"Key":"```filter, forall,","Fragments":["exists,"]},{"Key":"forall, exists,","Fragments":["take,","...","...","count,"]},{"Key":"exists, take,","Fragments":["drop,"]},{"Key":"take, drop,","Fragments":["....```","...```."]},{"Key":"drop, ....```","Fragments":["that"]},{"Key":"....``` that","Fragments":["oftentimes"]},{"Key":"that oftentimes","Fragments":["make"]},{"Key":"oftentimes make","Fragments":["your"]},{"Key":"make your","Fragments":["code","```require```","predicate","code","implementation","intentions","solution","function","life","code","code"]},{"Key":"your code","Fragments":["shorter","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","starting","and","and","and","and","and","and","and","and","and","and","and","and","and","and","even","and","and","and","easier","and","and","and","and","and","really","and","and","and","to","and","and","and","is","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","would","and","and","and","and","and","and","and","and","and","(say","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","(the","should","and","allows","and","and","and","and","about","and","and","and","and","and","and","will","and","so","and","and","and","and","and","and","and","always","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","be","and","and","and","and","and","and","and","by","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","think","thread-safe).","and","and","and","and","and","and","and","and","merely","and","more","using","here,","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","hard","and","and","and","a","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and"]},{"Key":"code shorter","Fragments":["and"]},{"Key":"shorter and","Fragments":["more","more","probably","more"]},{"Key":"and more","Fragments":["readable.","readable","readable","to","efficient","elegant.","but","elegant","intuitive","readable","imperative","convoluted!","in"]},{"Key":"And as","Fragments":["you","you","additional","for","another","they","another"]},{"Key":"as you","Fragments":["seem","already","can).","have","suggest","don't","declare","did","now","have","in","want","did,","already","don't","did","progress","did,","modify","use","then","can).","did"]},{"Key":"you seem","Fragments":["to","to"]},{"Key":"seem to","Fragments":["be","be","be","work","be","be","be","love","be","like","get","work","work"]},{"Key":"a fan","Fragments":["of","of","of","of"]},{"Key":"fan of","Fragments":["regex'es","using","match","test-driven","line"]},{"Key":"of regex'es","Fragments":["you"]},{"Key":"regex'es you","Fragments":["could"]},{"Key":"could try","Fragments":["Scala","to","to","to","to","rewriting","to","to","Scala's","using","to","to","to","to","out","to","out","to"]},{"Key":"try Scala","Fragments":["pattern","pattern","regex"]},{"Key":"Scala pattern","Fragments":["matching?!","matching","matching","matching","matching?","matching"]},{"Key":"pattern matching?!","Fragments":[";-)"]},{"Key":" a","Fragments":["simple","version","little","private","version","version","case","few","version","version","version","few","version","version","version"]},{"Key":"simple ```forall```","Fragments":["for"]},{"Key":"```forall``` for","Fragments":["the","validation"]},{"Key":"the validity","Fragments":["check","of","check.","check","check.","check.","check","check,","check","check,","check.","just"]},{"Key":"validity check","Fragments":["might","could","to","and","from"]},{"Key":"check might","Fragments":["also"]},{"Key":"might also","Fragments":["do","use","try","have","improve","consider","consider","help.","consider","consider","move","consider","consider","improve","break","just","try","come","try","try"]},{"Key":"also do","Fragments":["the","it","the","it","it","a","it","it","it","it","it","it","it","this"]},{"Key":"do the","Fragments":["trick?","following","necessary","same","heavy","```++```","`toLowerCase`","comparison,","validation","short-circuiting","trimming","toLowerCase","same","heavy","classical","magic","same","```require```","clean","trick.","simple","thing","import","hard","count.","counts."]},{"Key":"the trick?","Fragments":[":-)"]},{"Key":" you","Fragments":["can","could","can","could","could","could","could","are","could","could","could","can","could","could","should","might","can","could","might","may","could","are","might","should","create","may","could","can","could","could","could","could","can","can","could","can","see","can","could","could","seem","could","still","could","have","can","could","don't","could","can","can","can","could","may","could","could","can","will","could","could","use","could","expose","could","can","could","have","might","can","can","can","can","can","could","could","could","could","should","could","could","could","should","can","can"]},{"Key":"can also","Fragments":["use","think","use","use","multiply","pass","make","write:","avoid","shorten","do","be","be","be","use","pattern","map","here","just","simplify","do","end"]},{"Key":"use ```require```","Fragments":["from","from","from","from","from","from","from"]},{"Key":"```require``` from","Fragments":["Predef","Predef","```Predef```","Predef","Predef","```Predef```","Predef","```Predef```","```Predef```"]},{"Key":"from Predef","Fragments":["for","suggests","before","for","for"]},{"Key":"Predef for","Fragments":["this.","the","the","validity"]},{"Key":"Also, number,","Fragments":["areaCode,"]},{"Key":"number, areaCode,","Fragments":["numberCode"]},{"Key":"areaCode, numberCode","Fragments":["and"]},{"Key":"numberCode and","Fragments":["even"]},{"Key":"and even","Fragments":["toString","harder","make"]},{"Key":"even toString","Fragments":["can"]},{"Key":"toString can","Fragments":["be"]},{"Key":"be \"vals\"","Fragments":["so"]},{"Key":"\"vals\" so","Fragments":["you"]},{"Key":"don't recalculate","Fragments":["them"]},{"Key":"recalculate them","Fragments":["more"]},{"Key":"them more","Fragments":["than","obvious"]},{"Key":"more than","Fragments":["once.","necessary!","hello","one","once.","they","a","once,","my","one","that","welcome.","just","probably","mine","just","just","worth","once"]},{"Key":" `val","Fragments":["pn","pn","aphabet","sanitize"]},{"Key":"`val pn","Fragments":["=","="]},{"Key":"pn =","Fragments":["s.replaceAll(\"[^0-9]\",","s.filter(_.isDigit)`"]},{"Key":"= s.replaceAll(\"[^0-9]\",","Fragments":["\"\")`","\"\")"]},{"Key":" can","Fragments":["be:","you","you","you","you","you","you","you","you","you","be:"]},{"Key":"Also, parentheses","Fragments":["are"]},{"Key":"parentheses are","Fragments":["not","not","unnecessary:"]},{"Key":"not required","Fragments":["in"]},{"Key":"required in","Fragments":["the"]},{"Key":"the `if`","Fragments":["pattern","expression","statement"]},{"Key":"`if` pattern","Fragments":["match"]},{"Key":"pattern match","Fragments":["clauses","on","the","input","you","value","function,","on","into",";-)","approach.","the","on,","inside","on","to","`1`"]},{"Key":"match clauses","Fragments":["(you"]},{"Key":"clauses (you","Fragments":["can"]},{"Key":"(you can","Fragments":["even","check","then","even"]},{"Key":"can even","Fragments":["pattern","say:","remove","simplify","write"]},{"Key":"even pattern","Fragments":["match"]},{"Key":"match on","Fragments":["`pn.size`","`message`","it","the"]},{"Key":"on `pn.size`","Fragments":["to"]},{"Key":"`pn.size` to","Fragments":["clean"]},{"Key":"to clean","Fragments":["the","this","up"]},{"Key":"clean the","Fragments":["code"]},{"Key":"code a","Fragments":["bit.)","bit","few","bit","bit:","bit"]},{"Key":" Have","Fragments":["just","you","a","you","you","fun!","you","you","fun!","you","you","you"]},{"Key":"Have just","Fragments":["began"]},{"Key":"just began","Fragments":["learning"]},{"Key":"began learning","Fragments":["Scala"]},{"Key":"learning Scala","Fragments":["so","and"]},{"Key":"Scala so","Fragments":["any","there","any","I","I"]},{"Key":"so any","Fragments":["feedback","tips","client"]},{"Key":"any feedback","Fragments":["is"]},{"Key":"feedback is","Fragments":["great!"]},{"Key":"is great!","Fragments":["The"]},{"Key":"great! The","Fragments":["only"]},{"Key":"The only","Fragments":["thing","thing","thing","tricky","problem","niggle","downside","nitpick","things","thing","concern","thing"]},{"Key":"only thing","Fragments":["I","you","I","I","I'd","I","I","that"]},{"Key":"thing I","Fragments":["don't","might","can","want","would","question","don't","don't","would"]},{"Key":"don't like","Fragments":["here","the","how","this","the","your","underscores","that","```var```","about","the","pattern","how","always","b/c","this","is","these","looping","your","the","the","the"]},{"Key":"like here","Fragments":["is"]},{"Key":"here is","Fragments":["the","to","to","finding","an","if","that","very","exactly","creative"]},{"Key":"the double","Fragments":[".toUpperCase,","escaping"]},{"Key":"double .toUpperCase,","Fragments":["is"]},{"Key":".toUpperCase, is","Fragments":["probably"]},{"Key":"is probably","Fragments":["a","fully","much","a","overkill,","terrible.","nicer","a","a","faster.","way","a","the","needed...","more"]},{"Key":"probably a","Fragments":["neater","cleaner","matter","bit","cleaner","more","little","bad","nicer"]},{"Key":"a neater","Fragments":["way"]},{"Key":"neater way","Fragments":["to"]},{"Key":"do this?","Fragments":["Moving","I"]},{"Key":"this? Moving","Fragments":["it"]},{"Key":"Moving it","Fragments":["out"]},{"Key":"it out","Fragments":["into","in","into","(especially",";)"]},{"Key":"out into","Fragments":["it's","a","smaller","their","constants","helper"]},{"Key":"into it's","Fragments":["own","own","minimal"]},{"Key":"it's own","Fragments":["variable","val","line,","companion"]},{"Key":"own variable","Fragments":["ruined"]},{"Key":"variable ruined","Fragments":["the"]},{"Key":"ruined the","Fragments":["flow"]},{"Key":"the flow","Fragments":["of"]},{"Key":"flow of","Fragments":["the"]},{"Key":"code for","Fragments":["me.","reading,","iteration","examples.","an"]},{"Key":" looks","Fragments":["too","ok.","really","ok","very","good.","a","good.","good,","ok.","good.","pretty","great","strange."]},{"Key":"looks too","Fragments":["complicated","ad-hoc","complicated"]},{"Key":"too complicated","Fragments":["to","-","for","to","for","technique","to",":)"]},{"Key":"complicated to","Fragments":["me.","my","me"]},{"Key":" suggestion:","Fragments":["use","separate"]},{"Key":"suggestion: use","Fragments":["just"]},{"Key":"use just","Fragments":["one","two"]},{"Key":"one Map","Fragments":["for"]},{"Key":"Map for","Fragments":["all","possibleNucleotides.","every"]},{"Key":"all translations","Fragments":["and"]},{"Key":"translations and","Fragments":["iterate"]},{"Key":"and iterate","Fragments":["over","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on","on"]},{"Key":"iterate over","Fragments":["it","the","a","a","the"]},{"Key":"over it","Fragments":["w/"]},{"Key":"it w/","Fragments":["`find`.","a","a","a","the","the","a"]},{"Key":" again:","Fragments":["pls","eta-reduction!","apply"]},{"Key":"again: pls","Fragments":["use"]},{"Key":"pls use","Fragments":["```::```"]},{"Key":"use ```::```","Fragments":["and"]},{"Key":"```::``` and","Fragments":["pattern"]},{"Key":"and pattern","Fragments":["matching","matching."]},{"Key":"pattern matching","Fragments":["when","just","do","can","instead","for","with","the","instead","is","allows","instead","with","here?","over","involved,","instead","syntactic","...","here.","is","(perhaps","with","paradigm.","instead","implementation","directly","solution","on","directly?!","(and","for","mechanism","here","on","is","but","on","and","instead","w/","on","just","just","against","(using","or","guards","in","accomplishes","I","code.","using","but","but","yet,","based","instead","in","and","?","and","and","regular","approach","support","is","-","then.","and","on","w/","plus","in","on","since","in","the","here!"]},{"Key":"matching when","Fragments":["it"]},{"Key":"when it","Fragments":["comes","makes","consists","comes","comes"]},{"Key":"it comes","Fragments":["to","to","to"]},{"Key":"comes to","Fragments":["List","mutable","testing."]},{"Key":"to List","Fragments":["processing."]},{"Key":" Take","Fragments":["a","a","a","a","care.","a","a","a"]},{"Key":"Take a","Fragments":["look","look","look","look","look","closer","look","look.","look","look","look","look","look"]},{"Key":"a look","Fragments":["at","in","at","at","at","at","on","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at"]},{"Key":"look at","Fragments":["`sliding`","other","flatMap,","some","my","the","my","the","the","method","my","the","the","StringOps","```isEmpty```,","`StringOps`.","`List::containsSlice`","the","the","some","StringOps","I","the","the","the","getOrElse.","the","the","the","your","mapValues","an","some","your","[my","pattern","the","the","it","functions","the","the","the","all","a","the","my","functions"]},{"Key":"at `sliding`","Fragments":["for"]},{"Key":"`sliding` for","Fragments":["a"]},{"Key":"a nicer","Fragments":["way","language","way","way"]},{"Key":"nicer way","Fragments":["to","to","to"]},{"Key":"to implement","Fragments":["`slices`","what","total","everything","line","a","this.","Bst's","a","a","it"]},{"Key":" see:","Fragments":["[here](http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.Seq@carter(size:Int,step:Int):Iterator[Repr])","http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.immutable.Map@amir[B](f:A=\u003escala.collection.GenTraversableOnce[B]):scala.collection.immutable.Map[B]"]},{"Key":" Yeah","Fragments":["after","right,"]},{"Key":"Yeah after","Fragments":["watching"]},{"Key":"after watching","Fragments":["a"]},{"Key":"watching a","Fragments":["talk"]},{"Key":"a talk","Fragments":["of"]},{"Key":"talk of","Fragments":["Martin"]},{"Key":"of Martin","Fragments":["Odersky"]},{"Key":"Martin Odersky","Fragments":["I"]},{"Key":"Odersky I","Fragments":["also"]},{"Key":"also realized","Fragments":["that"]},{"Key":"realized that","Fragments":["using","size","this"]},{"Key":"that using","Fragments":["mutable","string","the","```containsSlice```","\"require\"","`zip`"]},{"Key":"using mutable","Fragments":["datastructures","variable.","variables.","state"]},{"Key":"mutable datastructures","Fragments":["is"]},{"Key":"datastructures is","Fragments":["totally"]},{"Key":"is totally","Fragments":["valid","internal"]},{"Key":"totally valid","Fragments":["as"]},{"Key":"valid as","Fragments":["long"]},{"Key":"as long","Fragments":["as","as","as","as","as","as"]},{"Key":"long as","Fragments":["their","it","it","possible","you","possible,"]},{"Key":"as their","Fragments":["surface"]},{"Key":"their surface","Fragments":["is"]},{"Key":"surface is","Fragments":["really"]},{"Key":"is really","Fragments":["limited","just","no","a","checking"]},{"Key":"really limited","Fragments":["(like"]},{"Key":"limited (like","Fragments":["in"]},{"Key":"(like in","Fragments":["a"]},{"Key":"a method","Fragments":["body)","to","is","using","`withDefaultValue`","as","out","which","name","I","to","for","so","can","with","called","to","name"]},{"Key":"method body)","Fragments":["..."]},{"Key":" So","Fragments":["this","if","you","no","I","in","sorry,","```closeAccount()```","pls","this","I","it's","far,","you","who","this","I","this"]},{"Key":"So this","Fragments":["solution","version","is","is","is"]},{"Key":"solution looks","Fragments":["great","good!","like","like"]},{"Key":"looks great","Fragments":["under"]},{"Key":"great under","Fragments":["performance"]},{"Key":"under performance","Fragments":["aspects"]},{"Key":"performance aspects","Fragments":["..."]},{"Key":" This","Fragments":["solution","code","one","is","is","version","would","looks","version","looks","changes","changes","is","doesn't","is","looks","looks","doesn't","doesn't","is","solution","time","solution","x.compare","was","is","looks","is","implementation","is","version","is","is","solution","was","may","looks","is","looks","is","doesn't","solution","solution","is","will","way,","problem","is","would","question","version","solution","gets","function","one","exercise","isn't","is","time","looks","somehow","would","was","answer","will","is","is","is","is","is","could","```foldLeft```","one","whole","could","looks","solution","version","is","solution","is","way","`sentence","doesn't","clearly","version","solution","is","is","solution","is","is","solution","looks","version","was","removes","seemed","is","doesn't","is","is","fails","was","looks","conditions:","is","is","version","is","solution","solution","time","is","code","is","looks","code","looks"]},{"Key":"This solution","Fragments":["is","is","uses","will","is","has","works","is","looks","depends","might","uses","is","is"]},{"Key":"a lot","Fragments":["less","faster","of","of","like","of","to","to","*slower*","for","clearer","of","of","of","of","of","less","better,","in","of","from","better.","more","of","of","of","of","better.","of","with","of","of","of","nicer","simpler","of","of"]},{"Key":"lot less","Fragments":["fun","work"]},{"Key":"less fun","Fragments":["than"]},{"Key":"fun than","Fragments":["the"]},{"Key":"than the","Fragments":["tail","third","recursive","solution","blight","last?","last","first,","previous","functions/methods","pattern","other.","for-comprehension;","class,","class?","tuple","other."]},{"Key":"the tail","Fragments":["recursive","recursive","recursion.","recursion","of","of","and","of","of"]},{"Key":"tail recursive","Fragments":["approach.","implementation","solution.","solution","and","using","function.","--","solution"]},{"Key":"recursive approach.","Fragments":["It's"]},{"Key":"approach. It's","Fragments":["also"]},{"Key":"It's also","Fragments":["a"]},{"Key":"also a","Fragments":["lot","strand.","```Seq[Char]```.","`count`","Seq.","bit","```Seq[Char]```,","function","```Seq[Char]```.","method","```Seq[Char]```,","bit","little","Seq).","```Seq[Char]```","```PartialFunction```,","`PartialFunction`:"]},{"Key":"lot faster","Fragments":["for"]},{"Key":"faster for","Fragments":["large"]},{"Key":"for large","Fragments":["lists,","lists","lists.","lists"]},{"Key":"large lists,","Fragments":["and"]},{"Key":"lists, and","Fragments":["is"]},{"Key":"and is","Fragments":["substantially","perfectly","easier","called","more"]},{"Key":"is substantially","Fragments":["easier"]},{"Key":"substantially easier","Fragments":["to"]},{"Key":"The use","Fragments":["of","of","of","of","of","of"]},{"Key":"of a","Fragments":["mutable","program,","general","```def```","mutable","\"return\"?","var.","constant","more","way","single","full-fledged","```None```.","more","var","regular","function).","static","regex","regular","`class`.","DNA","Map.","simpler","simple","throws","substring","few","general","number,","string","```foldLeft```.","companion","literal.","way","matching","Map","concern,","US","robot","string.","var","code","mutable","single","larger","def.","for","space","variable","val.","collection)","bad","for-comprehension","List","lazy","single","method;","solution","brute","def.","way","foldLeft","groupBy","regex","map,","solution,","pity.","List?","```List```","`def`,","implicit"]},{"Key":"mutable `ListBuffer`","Fragments":["is"]},{"Key":"`ListBuffer` is","Fragments":["totally"]},{"Key":"totally internal","Fragments":["to"]},{"Key":"internal to","Fragments":["the"]},{"Key":"the function,","Fragments":["so","the"]},{"Key":"function, so","Fragments":["while"]},{"Key":"so while","Fragments":["the"]},{"Key":"while the","Fragments":["implementation"]},{"Key":"the implementation","Fragments":["is","of","detail,","details","is","a","by","but"]},{"Key":"implementation is","Fragments":["not","that","hard","a","counting","iterating","still"]},{"Key":"not purely","Fragments":["functional,"]},{"Key":"purely functional,","Fragments":["this","but","concise,"]},{"Key":"functional, this","Fragments":["doesn't"]},{"Key":"this doesn't","Fragments":["compromise","need","use","matter","work"]},{"Key":"doesn't compromise","Fragments":["the"]},{"Key":"compromise the","Fragments":["functional"]},{"Key":"the functional","Fragments":["nature","solution!","feel","decomposition;","way"]},{"Key":"functional nature","Fragments":["of"]},{"Key":"nature of","Fragments":["`accumulate`"]},{"Key":"of `accumulate`","Fragments":["itself."]},{"Key":" Overall,","Fragments":["I"]},{"Key":"Overall, I","Fragments":["think"]},{"Key":"think this","Fragments":["solution","is","is","might","is","is","might","is","is","is","is","would","is","looks","will"]},{"Key":"is much","Fragments":["better","more","less","much","more","more","more","easier","readable.","better"]},{"Key":"much better","Fragments":["on","than","and"]},{"Key":"better on","Fragments":["every"]},{"Key":"on every","Fragments":["front","T"]},{"Key":"every front","Fragments":["except"]},{"Key":"front except","Fragments":["for"]},{"Key":"except for","Fragments":["it","the"]},{"Key":"for it","Fragments":["being","in","(besides","or","being"]},{"Key":"it being","Fragments":["comparatively","used","a"]},{"Key":"being comparatively","Fragments":["boring."]},{"Key":" According","Fragments":["to","to","to","to"]},{"Key":"According to","Fragments":["problem","@idella","the","the"]},{"Key":"to problem","Fragments":["description"]},{"Key":"problem description","Fragments":["robot","you","requires","as","I"]},{"Key":"description robot","Fragments":["names"]},{"Key":"robot names","Fragments":["should","that","quite","is","is","is","I"]},{"Key":"names should","Fragments":["not","never"]},{"Key":"should not","Fragments":["be","use","really","mutate","expose","expose","be","just","rather","return","be","be","be","do","just","modify","be","modify","expose"]},{"Key":"not be","Fragments":["used","understood","of","elegant","obvious","fluent","applied","inside.","really","so","altered","writing","strictly","the","public,","faster","robust","iterated.","iterated"]},{"Key":"be used","Fragments":["twice.","with","a","to","as","infix-style),","by","instead","in","in","as","twice.","as"]},{"Key":" ``foldRight``","Fragments":["can"]},{"Key":"``foldRight`` can","Fragments":["be"]},{"Key":"be replaced","Fragments":["by","with","by","with","with","by","by","by","by","with","by","by","with","with","by","by","by","by","by","by","with","by"]},{"Key":"replaced by","Fragments":["``count``.","Partial","require(a.length","``require(w1.length()",".notEmpty","positional","identity","``forall``","``sorted``.","``contains``.","``forall``.","a","Traversable's","require","``"]},{"Key":" We","Fragments":["wanted","can","could","can","cleaned","have"]},{"Key":"We wanted","Fragments":["to"]},{"Key":"wanted to","Fragments":["achieve","make","make","make","make","make","make","make","make","make","make","use","make","make","make","make","make","make","make","make","make","make","try","make","make","make","make","make","make","make","make","make","make","make","try","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","try","make","make","jump","make","make","challenge","make","make","make","make","make","make","do","make","make","make","make","make","make","make","make","make","use","make","make","make","refresh","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","use","make","make","make","make","do","cache","make","make","make","make","make","grab","make","make","play","make","make","make","make","make","make","make","make","make","try","make","make","make","make","make","make","make","make","make","make","make","make","declare","make","make","make","make","make","make","make","make","make","make","try","make","make","make","make","make","make","make","make","make","make","create","make","make","test","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","do","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","gain","make","make","make","make","make","make","make","make","make","make","make","make","do","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make","make"]},{"Key":"to achieve","Fragments":["idempotency","as","the"]},{"Key":"achieve idempotency","Fragments":["on"]},{"Key":"idempotency on","Fragments":["the"]},{"Key":"on the","Fragments":["code","companion","result","list?!","input","smallest","happy","evaluating","result","last","last","ass","processing","case","ending","eyes","values","question","eyes.","if/else","queen's","class","result","specification","train","create","parameters","input","each","head","tail","if","type.","fact","number","list.","regexes,","params","class.","zipped","list/map","elements","string","fly","team","same","`candidateList`,","higher-level","*what*","tricky","private","result","first","Bearing.","`Robot`.","line","fifth","functions.","first","String,","two","use","fact","pair","string.","actual","`shuffle`","`var`","tail","TreeMap","tail","tail","eyes,","style","list","if","actual","list","input","ranges","site","object","object","input","tests","ordering","current","tuple","input","right","board?","same","List","type.","other","particular"]},{"Key":"code since","Fragments":["the"]},{"Key":"since the","Fragments":["previous","last","return","code","cases","`'U'`","number","exercise","test"]},{"Key":"the previous","Fragments":["implementation","version","exercises)","submission.","attempt..","version.","version","computed","iteration","iteration.","iteration."]},{"Key":"previous implementation","Fragments":["actually"]},{"Key":"implementation actually","Fragments":["mutated"]},{"Key":"actually mutated","Fragments":["the"]},{"Key":"mutated the","Fragments":["class."]},{"Key":"the class.","Fragments":["We","I","I"]},{"Key":"class. We","Fragments":["added"]},{"Key":"We added","Fragments":["the"]},{"Key":"added the","Fragments":["following","entry","following"]},{"Key":"the following","Fragments":["test:","case","test","function","code","reasons:","construct","exercises."]},{"Key":" 52","Fragments":["test"]},{"Key":"52 test","Fragments":["(\"idempotent\")"]},{"Key":"test (\"idempotent\")","Fragments":["{"]},{"Key":" 53","Fragments":["val"]},{"Key":"53 val","Fragments":["yourBirthday"]},{"Key":"val yourBirthday","Fragments":["="]},{"Key":"yourBirthday =","Fragments":["new"]},{"Key":"= new","Fragments":["GregorianCalendar(1973,","Phrase(\"\\t\\tIntroductory","statement(string)"]},{"Key":"new GregorianCalendar(1973,","Fragments":["8,"]},{"Key":"GregorianCalendar(1973, 8,","Fragments":["7)"]},{"Key":" 54","Fragments":["val"]},{"Key":"54 val","Fragments":["gs"]},{"Key":"val gs","Fragments":["="]},{"Key":"gs =","Fragments":["Gigasecond(yourBirthday)"]},{"Key":" 55","Fragments":["gs.date"]},{"Key":"55 gs.date","Fragments":["should"]},{"Key":"gs.date should","Fragments":["be","be"]},{"Key":"be (new","Fragments":["GregorianCalendar(2005,","GregorianCalendar(2005,"]},{"Key":"(new GregorianCalendar(2005,","Fragments":["4,","4,"]},{"Key":"GregorianCalendar(2005, 4,","Fragments":["16,","16,"]},{"Key":"4, 16,","Fragments":["2,","2,"]},{"Key":"16, 2,","Fragments":["16,","16,"]},{"Key":"2, 16,","Fragments":["40))","40))"]},{"Key":" 56","Fragments":["gs.date"]},{"Key":"56 gs.date","Fragments":["should"]},{"Key":" 57","Fragments":["}"]},{"Key":" Secondly","Fragments":["we"]},{"Key":"Secondly we","Fragments":["like"]},{"Key":"we like","Fragments":["the"]},{"Key":"implementation of","Fragments":["having","a","penultimate","this","your","the","a","`Map`","my","`RuleMaker`","the"]},{"Key":"of having","Fragments":["a","a","a"]},{"Key":"having a","Fragments":["property","completely","constant","Stream"]},{"Key":"a property","Fragments":["defined"]},{"Key":"property defined","Fragments":["as"]},{"Key":"defined as","Fragments":["a","inner"]},{"Key":"a closure","Fragments":["to"]},{"Key":"closure to","Fragments":["reach"]},{"Key":"to reach","Fragments":["idempotency."]},{"Key":" ``getOrElse``","Fragments":["is"]},{"Key":"``getOrElse`` is","Fragments":["redundant"]},{"Key":"is redundant","Fragments":["as","here","-"]},{"Key":"redundant as","Fragments":["you"]},{"Key":"you already","Fragments":["validate","use","have","know","know:"]},{"Key":"already validate","Fragments":["input."]},{"Key":"validate input.","Fragments":["I'd"]},{"Key":"input. I'd","Fragments":["recommend"]},{"Key":"to avoid","Fragments":["using","regular","overloading","the","using","readers","these","this","```var```","using","mutable","var's","using","`else","using","var's","name","the","using","having","very","the","using","duplicate","using","using","OutOfMemoryError","using","duplicates","the","StackOverflowErrors.","```var```","side","consuming"]},{"Key":"avoid using","Fragments":["``var``.","terms","mutables.","mutable","explicit","them","mutable","nulls.","**var**.","vars","regular","mutable"]},{"Key":"using ``var``.","Fragments":["Invariants"]},{"Key":"``var``. Invariants","Fragments":["of"]},{"Key":"Invariants of","Fragments":["your"]},{"Key":"your class","Fragments":["can","declaration"]},{"Key":"class can","Fragments":["be"]},{"Key":"be easily","Fragments":["broken","done"]},{"Key":"easily broken","Fragments":["because"]},{"Key":"broken because","Fragments":["your"]},{"Key":"because your","Fragments":["allow","comment"]},{"Key":"your allow","Fragments":["anybody"]},{"Key":"allow anybody","Fragments":["to"]},{"Key":"anybody to","Fragments":["alter"]},{"Key":"to alter","Fragments":["class"]},{"Key":"alter class","Fragments":["state."]},{"Key":"class state.","Fragments":["Also"]},{"Key":"state. Also","Fragments":["you"]},{"Key":"Also you","Fragments":["code","categorically","get","could","don't"]},{"Key":"you code","Fragments":["cannot","easier"]},{"Key":"code cannot","Fragments":["be"]},{"Key":"cannot be","Fragments":["considered","parallelized...is"]},{"Key":"be considered","Fragments":["as","shouting","as"]},{"Key":"considered as","Fragments":["thread","Lists"]},{"Key":"as thread","Fragments":["safe"]},{"Key":"thread safe","Fragments":["anymore."]},{"Key":" about","Fragments":["efficiency,","```pending```:"]},{"Key":"about efficiency,","Fragments":["I"]},{"Key":"efficiency, I","Fragments":["think"]},{"Key":"it is","Fragments":["better","a","called","already","already","actually","easier","already","preferred.","a","not","given","more","FP-style","much","not","clearer","not","good","only","more","an","now","for","easy","customary","not","doing.","not","easy","just","tailrec.","interesting.","to","asking","more","simple","not","a","easy","next","very","less","acceptable","implicitly","a","not","*EXTREMELY","pretty","not","superfluous!","a","probably","a","a","not","than","*maybe*","easier","overkill","good","ok","focussing","submitted","quite","worth","to","as","assigned.","describe","just","a","necessary","really","a","quite","unavoidable","not","called.","a","good","nice","a","more","not","a","executed","not","pretty","also","calculated.","a","absurdly","a","very","more","possible","easier","too","too","only","fixed,","some","calculated","only","calculated","not","short","and"]},{"Key":"is better","Fragments":["to","TBH.","for","in","here","expressed","than","than",":)","suited","over","than"]},{"Key":"better to","Fragments":["calculate","trim","find","make","separate","use","make","you?","me.","use","make","use","use","just"]},{"Key":"to calculate","Fragments":["total","the","the","the","the","this"]},{"Key":"calculate total","Fragments":["using"]},{"Key":"total using","Fragments":["formula"]},{"Key":"using formula","Fragments":["for"]},{"Key":"formula for","Fragments":["sum","1+2+..","sumOfSquares,"]},{"Key":"for sum","Fragments":["of","of"]},{"Key":"sum of","Fragments":["geometric","two","first","first","the"]},{"Key":"of geometric","Fragments":["progression"]},{"Key":"geometric progression","Fragments":["rather","optimization:"]},{"Key":"progression rather","Fragments":["than"]},{"Key":"rather than","Fragments":["squaring","a","just","`def`","their","using","calling","26.","constructing","`!x.filter(_.isLetter).isEmpty`","`()`","`filter`","`0","being","`List.forEach`","in","`v.sortBy`","manually","if-else.","a","Maps,","a","`var`","counting","create","the","the","an","making"]},{"Key":"than squaring","Fragments":["every"]},{"Key":"squaring every","Fragments":["value."]},{"Key":"And for","Fragments":["cache","the","```.size","readability:","efficiency","comparison,"]},{"Key":"for cache","Fragments":["maybe"]},{"Key":"cache maybe","Fragments":["you"]},{"Key":"maybe you","Fragments":["could","can","are"]},{"Key":"could look","Fragments":["into"]},{"Key":"look into","Fragments":["method","whether","how","datatypes","this","that!","just","using","as","Scala-like"]},{"Key":"into method","Fragments":["getOrElseUpdate?"]},{"Key":"a version","Fragments":["with","using","using","with","using","using","with","with","which","with","with","using","without","with"]},{"Key":"version with","Fragments":["cache.","recursion","regex","implicit","a","implicit","`sealed","implicit","fold","\"require\"","a","zipping"]},{"Key":" Cool.","Fragments":["I","Thanks"]},{"Key":"Cool. I","Fragments":["might!","wasn't"]},{"Key":"The Haskell","Fragments":["thing"]},{"Key":"Haskell thing","Fragments":["sounds"]},{"Key":"thing sounds","Fragments":["very"]},{"Key":"sounds very","Fragments":["nice!"]},{"Key":" Yeah,","Fragments":["with","I","that","I","because","I","I","you"]},{"Key":"Yeah, with","Fragments":["an"]},{"Key":"with an","Fragments":["object","else.","\"@\"","already","interpretation","OO","`apply`","invalid","immutable","upper"]},{"Key":"an object","Fragments":["this","called","class","w/","also."]},{"Key":"object this","Fragments":["small,"]},{"Key":"this small,","Fragments":["naming"]},{"Key":"small, naming","Fragments":["short-lived"]},{"Key":"naming short-lived","Fragments":["variables"]},{"Key":"short-lived variables","Fragments":["isn't"]},{"Key":"variables isn't","Fragments":["as"]},{"Key":"isn't as","Fragments":["important."]},{"Key":"as important.","Fragments":["Really,"]},{"Key":"important. Really,","Fragments":["if"]},{"Key":"Really, if","Fragments":["they"]},{"Key":"if they","Fragments":["help","are","have","are","don't","are","are","are","are","are"]},{"Key":"they help","Fragments":["keep","here?!","to"]},{"Key":"help keep","Fragments":["the"]},{"Key":"keep the","Fragments":["code","variable","possibility","balance.","key","public","map","value","**if/else","cached","```=\u003e```","`synchronized`","scope","side","current","names","helper"]},{"Key":"code super","Fragments":["tiny,"]},{"Key":"super tiny,","Fragments":["that"]},{"Key":"tiny, that","Fragments":["in"]},{"Key":"that in","Fragments":["itself","the","mind","the","Scala","Scala","the","line","my","Scala","the","functional","the","the","Scala","the"]},{"Key":"in itself","Fragments":["can","(there"]},{"Key":"itself can","Fragments":["help"]},{"Key":"can help","Fragments":["readability.","you","to","here"]},{"Key":" Interesting","Fragments":["-","idea!","problem.","technique","solution","way","solution.","way","to","approach","solution.","use"]},{"Key":"Interesting -","Fragments":["I"]},{"Key":"- I","Fragments":["did","forgot","use","think","was","have","was","agree","just","saw","guess","have","found"]},{"Key":"I did","Fragments":["not","it","not","that","not","is","in","to","not","a","most","not","and","is","this","figure","it","essentially","use","anyway.","with","not","replaceAll","a","not","not","a","this","this","another","in","this"]},{"Key":"did not","Fragments":["know","really","want","want","find","look","want","use","find","know","try"]},{"Key":"not know","Fragments":["it","why","what","that.","how","answer"]},{"Key":"know it","Fragments":["wasn't","doesn't"]},{"Key":"it wasn't","Fragments":["specific","obvious","very"]},{"Key":"wasn't specific","Fragments":["to"]},{"Key":"specific to","Fragments":["DNA!"]},{"Key":"think my","Fragments":["resistance","code","indentation","code"]},{"Key":"my resistance","Fragments":["to"]},{"Key":"resistance to","Fragments":["giving"]},{"Key":"to giving","Fragments":["`x`","them"]},{"Key":"giving `x`","Fragments":["and"]},{"Key":"`x` and","Fragments":["`y`","`y`","`y`"]},{"Key":"and `y`","Fragments":["more","as","are"]},{"Key":"`y` more","Fragments":["specific"]},{"Key":"more specific","Fragments":["names","use"]},{"Key":"specific names","Fragments":["stems"]},{"Key":"names stems","Fragments":["from"]},{"Key":"stems from","Fragments":["the"]},{"Key":"the fact","Fragments":["that","that","that","that","that","that","that","that","that","that","that","that","that"]},{"Key":"fact that","Fragments":["I","this","I","a","there","it","your","the","the","`Enumeration`","is","in","```getMeetupDate```","PrimeFactors"]},{"Key":"that I","Fragments":["resent","might","had","had","had","can","couldn't","found","could","was","considered","pass","misnamed","had","had","can","haven't","had","then","didn't","think","can","should","managed","try","get","went","know","left","interpreted","can","could","think","couldn't"]},{"Key":"I resent","Fragments":["having"]},{"Key":"resent having","Fragments":["to"]},{"Key":"having to","Fragments":["include","look","remember","call","jump","explode","read","perform","calculate","use","use","test","put"]},{"Key":"to include","Fragments":["them","in","helper","par.","the"]},{"Key":"include them","Fragments":["at"]},{"Key":"them at","Fragments":["all"]},{"Key":"at all","Fragments":[":-).","-","but","costs.","the","(and","once"]},{"Key":"all :-).","Fragments":["In"]},{"Key":":-). In","Fragments":["a"]},{"Key":"In a","Fragments":["nicer","simple"]},{"Key":"nicer language","Fragments":["like"]},{"Key":"language like","Fragments":["Haskell"]},{"Key":"like Haskell","Fragments":["you"]},{"Key":"Haskell you","Fragments":["could"]},{"Key":"could put","Fragments":["exactly","it"]},{"Key":"put exactly","Fragments":["what"]},{"Key":"exactly what","Fragments":["you","your","I","runtime","I'm","you","you"]},{"Key":"what you","Fragments":["mean","call","want","are","have","want","did","intent","intended","intended","did","want.","need","need","have","want","need","mean.","coded.","want","see","mean","see","think"]},{"Key":"you mean","Fragments":["in","by","by","guard","```substring```","by","by","here"]},{"Key":"mean in","Fragments":["the"]},{"Key":"the place","Fragments":["of","that"]},{"Key":"place of","Fragments":["the","my"]},{"Key":"the anonymous","Fragments":["function,","function","one","function","function","function"]},{"Key":"anonymous function,","Fragments":["which"]},{"Key":"function, which","Fragments":["is"]},{"Key":"is nothing","Fragments":["more"]},{"Key":"nothing more","Fragments":["or"]},{"Key":"more or","Fragments":["less","less","less"]},{"Key":"or less","Fragments":["that","important","concise."]},{"Key":"less that","Fragments":["the"]},{"Key":"the \"not","Fragments":["equal\""]},{"Key":"\"not equal\"","Fragments":["operator"]},{"Key":"equal\" operator","Fragments":["itself:"]},{"Key":"operator itself:","Fragments":["`(/=)`"]},{"Key":"itself: `(/=)`","Fragments":["in"]},{"Key":"`(/=)` in","Fragments":["Haskell."]},{"Key":"in Haskell.","Fragments":["So"]},{"Key":"Haskell. So","Fragments":["their"]},{"Key":"So their","Fragments":["existence"]},{"Key":"their existence","Fragments":["is"]},{"Key":"existence is","Fragments":["entirely"]},{"Key":"is entirely","Fragments":["pointless"]},{"Key":"entirely pointless","Fragments":["(and"]},{"Key":"pointless (and","Fragments":["down"]},{"Key":"(and down","Fragments":["to"]},{"Key":"down to","Fragments":["the","invocations","the","3","whether","a","*very*","whether"]},{"Key":"the failings","Fragments":["of"]},{"Key":"failings of","Fragments":["the"]},{"Key":"the language)","Fragments":["which"]},{"Key":"language) which","Fragments":["I"]},{"Key":"which I","Fragments":["think","might","also","think","like"]},{"Key":"think is","Fragments":["part","better?","a","wrong","more"]},{"Key":"is part","Fragments":["of","of","of"]},{"Key":"part of","Fragments":["why","the","the","the","the","programming","Scala's","Bob's","the","the","a","`Bearing`","Bearings.","the","the","the","the","your","the"]},{"Key":"of why","Fragments":["I"]},{"Key":"why I","Fragments":["don't","am","used","didn't","use","was","chose","didn't"]},{"Key":"don't want","Fragments":["to","to","to","that","to","to","to"]},{"Key":"want to","Fragments":["honour","be","go","test","avoid","consider","find","extract","break","filter","keep,","restrict","do","try","check","stick","count","consider","be","use","use","go","see","improve","try","look","go","bring","expose","have","call","compare","change","test","copy","use","save","consider","telegraph","dive","match","make","maintain","map","use","have","change","give","invest","use","have","look","check","match","avoid","\"write","make","put","try","synchronize"]},{"Key":"to honour","Fragments":["them"]},{"Key":"honour them","Fragments":["with"]},{"Key":"them with","Fragments":["names","\"orElse\".","a"]},{"Key":"with names","Fragments":["of"]},{"Key":"of their","Fragments":["own."]},{"Key":"their own.","Fragments":["If"]},{"Key":"own. If","Fragments":["there"]},{"Key":"If there","Fragments":["was","are"]},{"Key":"there was","Fragments":["more","some","a","some","no"]},{"Key":"was more","Fragments":["to","to","explicit","in","referring"]},{"Key":"more to","Fragments":["do","make","the","readability","confusion?","come"]},{"Key":"do with","Fragments":["them","only","me","it,"]},{"Key":"with them","Fragments":["that"]},{"Key":"them that","Fragments":["a"]},{"Key":"that a","Fragments":["single","more","Range","common","for-comprehension","movement","simple","question","method","function","bit?","shouting"]},{"Key":"a single","Fragments":["operation","line","lock?","`GregorianCalendar`","implicit","expression","expression.","return","argument","test","expression","one,","statement","statement?","pass","`map`","method","if","expression.","pass","class.","upper","sweep","map","character","Boolean","express","expression.","map.","element","reason,","nucleotide,"]},{"Key":"single operation","Fragments":["I'd"]},{"Key":"operation I'd","Fragments":["be"]},{"Key":"I'd be","Fragments":["more","happy","interested","happy"]},{"Key":"be more","Fragments":["amenable","readable","robust:","readable","about","expensive?","like","readable","readable.","Scala","readable","readable","idiomatic,","efficient,","idiomatic","clearly","in","readable","idiomatic.","logical","concise","*higher-level*,","readable","scala-esque.","readable!","readable","important","readable.","simplified.","meaningful.","confident","readable.","readable","descriptive.","efficient","improved","readable","than","verbose","efficient","efficient","compelling","in","naturally"]},{"Key":"more amenable","Fragments":["to"]},{"Key":"amenable to","Fragments":["giving"]},{"Key":"giving them","Fragments":["more","to"]},{"Key":"more obvious","Fragments":["names","what","about","way"]},{"Key":"obvious names","Fragments":["-"]},{"Key":"names -","Fragments":["but"]},{"Key":"- but","Fragments":["that","I","the","this","now","for","you","they're","shouldn't"]},{"Key":"but that","Fragments":["can","'map'","would","was","is","may","can","may","might","is","doesn't","might","shouldn't"]},{"Key":"that can","Fragments":["always","do","detect","do","be","do","really","help","help"]},{"Key":"can always","Fragments":["be","figure","just","go"]},{"Key":"always be","Fragments":["deferred","two"]},{"Key":"be deferred","Fragments":["until"]},{"Key":"deferred until","Fragments":["necessary."]},{"Key":" WRT","Fragments":["the"]},{"Key":"WRT the","Fragments":["idea"]},{"Key":"idea of","Fragments":["`strandOther`","mapValues","filter+take","using","alternative","\"externalizing\"","nested","those","using","these"]},{"Key":"of `strandOther`","Fragments":["as"]},{"Key":"`strandOther` as","Fragments":["a"]},{"Key":"a name-","Fragments":["I"]},{"Key":"name- I","Fragments":["am"]},{"Key":"I am","Fragments":["very","extremely","new","curious","used","not","wondering","not","not","not","underestimating","using","used","curious","hesitant","not","sure","still","wrong,","mentoring.","sorry,","looking","going","unable","not","searching","convinced","not","looking","not","not","curious","not","not","going","trying","bit","punishing","still","very","not","mistaken,","afraid","working","stuck.","trying"]},{"Key":"am very","Fragments":["keen","interested"]},{"Key":"very keen","Fragments":["on"]},{"Key":"keen on","Fragments":["reducing","pattern","functional"]},{"Key":"on reducing","Fragments":["the"]},{"Key":"reducing the","Fragments":["length"]},{"Key":"the length","Fragments":["of","of","check","equality","of"]},{"Key":"length of","Fragments":["variable","good","the","the"]},{"Key":"of variable","Fragments":["names"]},{"Key":"variable names","Fragments":["through","non-domain","for","vs.","for","`bl`,","could","for","than"]},{"Key":"names through","Fragments":["context"]},{"Key":"through context","Fragments":["-"]},{"Key":"context -","Fragments":["so"]},{"Key":"- so","Fragments":["I'm","that","it","naming","what's","we","you","what"]},{"Key":"so I'm","Fragments":["personally","probably","not","using","going","trying","currently","more","not"]},{"Key":"I'm personally","Fragments":["happy"]},{"Key":"personally happy","Fragments":["with"]},{"Key":"happy with","Fragments":["it","this,","the","the","my","my","the","this","the","the","this...","either","it.","it.","how"]},{"Key":"with it","Fragments":["just","I'd"]},{"Key":"it just","Fragments":["being","\"x","addresses","using","feels","accidentally","result","throws","w/","returns","felt"]},{"Key":"just being","Fragments":["called"]},{"Key":"being called","Fragments":["`other`.","multiple","multiple"]},{"Key":"called `other`.","Fragments":["I"]},{"Key":"`other`. I","Fragments":["can"]},{"Key":"can see","Fragments":["how","how","there","a","how","how","it","the","a","str1","[my"]},{"Key":"see how","Fragments":["that","one","you","a","much","it","that","they","1","the","this","unfortinatelly."]},{"Key":"how that","Fragments":["could","works","happened."]},{"Key":"that could","Fragments":["become","be","really","suit","be"]},{"Key":"could become","Fragments":["confusing"]},{"Key":"become confusing","Fragments":["if"]},{"Key":"confusing if","Fragments":["the","you"]},{"Key":"if the","Fragments":["object","function","matched","```Option.isDefined```","name","implementation","string","'if'","input","parse","phrasing","tests","initialMap","desired","compiler","test","name","total","method","test","`isX`","sizes","uppercased","string","Phrases","passed","tests","lengths","sentence's","nucleotide"]},{"Key":"the object","Fragments":["became","for","Year","to","return","instance.","instance","to","PhoneNumber","rather","rather","with"]},{"Key":"object became","Fragments":["large"]},{"Key":"became large","Fragments":["-"]},{"Key":"large -","Fragments":["but"]},{"Key":"but I","Fragments":["am","think","don't","got","think","just","couldn't","appreciate","don't","don't","couldn't","think","definitly","assume","have","would","just","like","think","think","doubt","feel","find","didn't","don't","doubt","saw","prefer","don't","think","know","guess","like","would","decided","have","don't","can","feel","didn't","think","for","would","also","can","might","couldn't","did","believe","wonder","suppose","like","see","could","was","think","think","understand","prefer","think","indeed","had","like","liked","was","prefer","got","think","chose","find","find","feel","always","think","think","prefer","could","don't","would","see"]},{"Key":"am extremely","Fragments":["strict"]},{"Key":"extremely strict","Fragments":["about"]},{"Key":"strict about","Fragments":["writing"]},{"Key":"about writing","Fragments":["and"]},{"Key":"writing and","Fragments":["maintaining"]},{"Key":"and maintaining","Fragments":["small"]},{"Key":"maintaining small","Fragments":["objects"]},{"Key":"small objects","Fragments":["/"]},{"Key":"objects /","Fragments":["functions"]},{"Key":"/ functions","Fragments":["/"]},{"Key":"functions /","Fragments":["files"]},{"Key":"/ files","Fragments":["-"]},{"Key":"files -","Fragments":["so"]},{"Key":"so that","Fragments":["should","it","it","work","it","the","you","you","the","the","only","once","it","you","you","gives","in","you","```seq```","will","you","I","each","you","it","it's","you","you","it","the","my","there"]},{"Key":"that should","Fragments":["never","work","work","match"]},{"Key":"should never","Fragments":["become","repeat.","use","use","use"]},{"Key":"never become","Fragments":["a"]},{"Key":"become a","Fragments":["problem."]},{"Key":" But","Fragments":["[Hamming","given","then","then","Scala","I","maybe","you","I","these","because","you","I","I","in","that's","other","I","as","we","to","according","with","the","of","you","I","apart","I","it","you","this","your","in","pls","that","I","feel","IMHO","that","if","I","you","you","you","use","I'm","don't","I'll","if","most","I'm","that's"]},{"Key":"But [Hamming","Fragments":["distance](http://en.wikipedia.org/wiki/Hamming_distance)"]},{"Key":"[Hamming distance](http://en.wikipedia.org/wiki/Hamming_distance)","Fragments":["is"]},{"Key":"distance](http://en.wikipedia.org/wiki/Hamming_distance) is","Fragments":["in"]},{"Key":"the information","Fragments":["theory"]},{"Key":"information theory","Fragments":["domain,"]},{"Key":"theory domain,","Fragments":["where"]},{"Key":"domain, where","Fragments":["it's"]},{"Key":"where it's","Fragments":["described"]},{"Key":"it's described","Fragments":["in"]},{"Key":"described in","Fragments":["terms","the"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"terms of","Fragments":["strings.","performance,","readability,","square","better","snake_case","memory","efficiency.","\"significantly"]},{"Key":"of strings.","Fragments":["It's"]},{"Key":"strings. It's","Fragments":["not"]},{"Key":"It's not","Fragments":["a","clear","every","as"]},{"Key":"not a","Fragments":["biology","```Range```","`SortedMap`,","Traversable[A,","`Traversable`.","huge","good","consensus.","big","valid","Scala","bug.","case","constant","case","big","key.","tuple.","`def`","requirement"]},{"Key":"a biology","Fragments":["thing,","thing,"]},{"Key":"biology thing,","Fragments":["though","I'd"]},{"Key":"thing, though","Fragments":["it"]},{"Key":"though it","Fragments":["may","is","seems","is"]},{"Key":"it may","Fragments":["be","be","also","not"]},{"Key":"may be","Fragments":["used","declared","too","beneficial","useful","right.","just","more","simpler","defined","more","steep,","just"]},{"Key":"used with","Fragments":["DNA."]},{"Key":"with DNA.","Fragments":["I"]},{"Key":"DNA. I","Fragments":["can"]},{"Key":"how one","Fragments":["could"]},{"Key":"one could","Fragments":["assume","have","move","fuss","argue","discuss","consider","also","just"]},{"Key":"could assume","Fragments":["that,"]},{"Key":"assume that,","Fragments":["though."]},{"Key":" If","Fragments":["it","you","you","you","you","I","you","you","you","you","you","I","it","it","you","you","you","I","you","you","you","avoiding","you","you","you","everybody","you","this","statements","you","an","you","I","you","you","it","you","we","anyone","you","you","you","you","you","you're","you","there","you","you","you"]},{"Key":"If it","Fragments":["had","was","is","were","isn't","weren't","detects","is"]},{"Key":"it had","Fragments":["been","to","a"]},{"Key":"had been","Fragments":["a"]},{"Key":"been a","Fragments":["biology","great","better","bit"]},{"Key":"thing, I'd","Fragments":["totally"]},{"Key":"I'd totally","Fragments":["agree"]},{"Key":"totally agree","Fragments":["with","with","about"]},{"Key":"agree with","Fragments":["you.","@danielle","@calista","that,","the","everything","you."]},{"Key":" Maybe","Fragments":["`otherStrand`?","you","I","the","a","it"]},{"Key":"I'd still","Fragments":["prefer"]},{"Key":"still prefer","Fragments":["`c1`"]},{"Key":"prefer `c1`","Fragments":["or"]},{"Key":"`c1` or","Fragments":["`char1`"]},{"Key":"or `char1`","Fragments":["or"]},{"Key":"`char1` or","Fragments":["something"]},{"Key":"or something","Fragments":["–","similar..."]},{"Key":"something –","Fragments":["I"]},{"Key":"– I","Fragments":["think","did,"]},{"Key":"think it's","Fragments":["about","fine","ok,","more","missing","legit","a","a","my"]},{"Key":"it's about","Fragments":["context."]},{"Key":"about context.","Fragments":["The"]},{"Key":"context. The","Fragments":["less"]},{"Key":"The less","Fragments":["context"]},{"Key":"less context","Fragments":["you"]},{"Key":"context you","Fragments":["need"]},{"Key":"you need","Fragments":["to","to","to","to","in","it).","at","to","a","to","to","to","to","to","here","to","is","here.",".toSeq?","to","a","a"]},{"Key":"need to","Fragments":["understand","make","know","call","create","deal","look","assign","know","keep","instantiate","write","use","be","clean","create","use","put","be","load","implement","change","define","define","implement","check","add","change","pass","call","split","check","run","strip","use","generate","allocate","call","know","contain","know,","test","test","be","generate","modify","parse","save","check","be","assign","have","break","replace","import","reassign","write","change","use","move","translate","be","update","convert","do","synchronize","be","cut","declare","think","convert","create","do","exclude","make","with","use","use","move","make","learn","call","get","use","create","do","short-circuit","handle","change","calculate","explicitly","convert","triple","enumerate","enumerate","introduce","put","make","pass","filter","be","be"]},{"Key":"to understand","Fragments":["a","what","-","what","what","what","(at","with","what","what","quickly","your","by","IMHO.","your","what","the","than","and"]},{"Key":"understand a","Fragments":["subpart"]},{"Key":"a subpart","Fragments":["of"]},{"Key":"subpart of","Fragments":["a"]},{"Key":"a program,","Fragments":["the"]},{"Key":"program, the","Fragments":["quicker"]},{"Key":"the quicker","Fragments":["you"]},{"Key":"quicker you","Fragments":["can"]},{"Key":"can grasp","Fragments":["it,"]},{"Key":"grasp it,","Fragments":["without"]},{"Key":"it, without","Fragments":["having"]},{"Key":"without having","Fragments":["to","to","to","to","to","to"]},{"Key":"to look","Fragments":["at","up.","up","up","better","at","to","for","at","into","clear","at","at"]},{"Key":"at other","Fragments":["parts","implementations,","submissions","solutions,"]},{"Key":"other parts","Fragments":["or"]},{"Key":"parts or","Fragments":["having"]},{"Key":"or having","Fragments":["to"]},{"Key":"to remember","Fragments":["them.","that","that.","that","and"]},{"Key":"This code","Fragments":["is","says","will","satifies","is"]},{"Key":"code is","Fragments":["tiny,","mutating","it","only","more","looking","actually","fine.","so","short","still","still","incorrect!","ordered"]},{"Key":"is tiny,","Fragments":["and"]},{"Key":"tiny, and","Fragments":["when"]},{"Key":"and when","Fragments":["we","we","I","creating"]},{"Key":"when we","Fragments":["discuss","read"]},{"Key":"we discuss","Fragments":["it,"]},{"Key":"discuss it,","Fragments":["we've"]},{"Key":"it, we've","Fragments":["both"]},{"Key":"we've both","Fragments":["written"]},{"Key":"both written","Fragments":["it"]},{"Key":"written it","Fragments":["recently;","without"]},{"Key":"it recently;","Fragments":["and"]},{"Key":"recently; and","Fragments":["when"]},{"Key":"we read","Fragments":["it,"]},{"Key":"read it,","Fragments":["we"]},{"Key":"it, we","Fragments":["just"]},{"Key":"we just","Fragments":["read"]},{"Key":"just read","Fragments":["it","that"]},{"Key":"read it","Fragments":["beginning","a"]},{"Key":"it beginning","Fragments":["to"]},{"Key":"beginning to","Fragments":["end."]},{"Key":"to end.","Fragments":["But"]},{"Key":"end. But","Fragments":["when"]},{"Key":"But when","Fragments":["I"]},{"Key":"when I","Fragments":["encounter","started","look","submit","made","wasn't","consider","posted","got","did","use","completed","get","did"]},{"Key":"I encounter","Fragments":["code"]},{"Key":"encounter code","Fragments":["in"]},{"Key":"code in","Fragments":["real","a","order","Scala\"!","any","the","general.","a"]},{"Key":"in real","Fragments":["life"]},{"Key":"real life","Fragments":["and","scenario"]},{"Key":"life and","Fragments":["need"]},{"Key":"and need","Fragments":["to"]},{"Key":"make modifications,","Fragments":["I"]},{"Key":"modifications, I","Fragments":["tend"]},{"Key":"I tend","Fragments":["to","to","to","to","to"]},{"Key":"tend to","Fragments":["jump","give","use","get","be","use","use:","be"]},{"Key":"to jump","Fragments":["to","to","down","to","to"]},{"Key":"jump to","Fragments":["the","a","a","the"]},{"Key":"place that","Fragments":["looks"]},{"Key":"that looks","Fragments":["right","like","pretty"]},{"Key":"looks right","Fragments":["and"]},{"Key":"right and","Fragments":["make"]},{"Key":"and make","Fragments":["some","the","the","your","some","it","the"]},{"Key":"make some","Fragments":["local","research","claim","backwards"]},{"Key":"some local","Fragments":["change."]},{"Key":"local change.","Fragments":["And"]},{"Key":"change. And","Fragments":["then"]},{"Key":"And then","Fragments":["something","you","you","for"]},{"Key":"then something","Fragments":["like"]},{"Key":"something like","Fragments":["`char1","this","charTuple","a","`is_same_word`","`sentence`?","@anjali","\"potentialAnagrams\",","\"base\"","`input.filter(_.isDigit)`","this:","\"Intonation(s).response\"","`Map('A'","```forall```?","```s.trim.isEmpty```","`layout`?","\"---\"","`p","\"AA\".","`identity[Boolean]`","```decimalToBinary```?"]},{"Key":"like `char1","Fragments":["!="]},{"Key":"`char1 !=","Fragments":["char2`"]},{"Key":"!= char2`","Fragments":["would"]},{"Key":"char2` would","Fragments":["be"]},{"Key":" Ok,","Fragments":["so","guess","this","if","I","but","you","I","would","up","a","you","it"]},{"Key":"Ok, so","Fragments":["here's"]},{"Key":"so here's","Fragments":["my"]},{"Key":"here's my","Fragments":["reasoning:","nit"]},{"Key":"I understand","Fragments":["your","it,","your","them","it","your","why","now:","the","zip","lazy","are","I","you"]},{"Key":"understand your","Fragments":["desire","idea","code,","reasoning","\"weekday","algorithm","regex,"]},{"Key":"your desire","Fragments":["to"]},{"Key":"desire to","Fragments":["keep"]},{"Key":"to keep","Fragments":["the","the","the","whole","the","the","the","the","it","the","the","it","the","in","things","calling","it","the"]},{"Key":"the variable","Fragments":["names","right","shadowing","names"]},{"Key":"names non-domain","Fragments":["specific"]},{"Key":"non-domain specific","Fragments":["given"]},{"Key":"specific given","Fragments":["that"]},{"Key":"given that","Fragments":["this","`shuffle`"]},{"Key":"that this","Fragments":["function","is","is","exercise","a","code","is","approach","is","looks","is","was"]},{"Key":"this function","Fragments":["could","arg","quite","into"]},{"Key":"function could","Fragments":["be","be","also","contain"]},{"Key":"be interpreted","Fragments":["as","as"]},{"Key":"interpreted as","Fragments":["a","a","shouting,"]},{"Key":"a generic","Fragments":["function"]},{"Key":"generic function","Fragments":["over"]},{"Key":"function over","Fragments":["lists.","collections.","replace."]},{"Key":"over lists.","Fragments":["However,"]},{"Key":"lists. However,","Fragments":["it"]},{"Key":"However, it","Fragments":["is"]},{"Key":"a function","Fragments":["in","directly.","with","(it","to","and","and","jump.","isSilence()?","of","of","(again,","call;","`count`","taking","\"isMoreThanHalfUppercase\"","that","isValidPhone()","argument","called"]},{"Key":"function in","Fragments":["an","Scala.","the","`nucleotideCounts`.","Seq","a","`forall`","nucleotidCounts?","a"]},{"Key":"in an","Fragments":["object","`object`,","imperative","obvious","object,","infinite","endless","if"]},{"Key":"object called","Fragments":["`Hamming`,"]},{"Key":"called `Hamming`,","Fragments":["and"]},{"Key":"`Hamming`, and","Fragments":["it"]},{"Key":"and it","Fragments":["is","is","becomes","shows","could","is","is","hurts","sounds","is","doesn't","still","came","doesn't","makes","is"]},{"Key":"is called","Fragments":["`compute`","`identity`.","since"]},{"Key":"called `compute`","Fragments":["-"]},{"Key":"`compute` -","Fragments":["so","any"]},{"Key":"so it","Fragments":["is","only","goes","only","will","could","might","would","is","can","isn't","does","makes"]},{"Key":"is already","Fragments":["tied","in","also","a","immutable,","implicitly","doing"]},{"Key":"already tied","Fragments":["to"]},{"Key":"tied to","Fragments":["a","what","routing)"]},{"Key":"a specific","Fragments":["domain!","style"]},{"Key":"specific domain!","Fragments":["If"]},{"Key":"domain! If","Fragments":["it"]},{"Key":"it was","Fragments":["in","this","better/more","more","required","because","more","not","so","something","requested.","made","just","first","an"]},{"Key":"was in","Fragments":["`List`,","sleep","rush"]},{"Key":"in `List`,","Fragments":["and"]},{"Key":"`List`, and","Fragments":["called"]},{"Key":"and called","Fragments":["`difference`,"]},{"Key":"called `difference`,","Fragments":["for"]},{"Key":"`difference`, for","Fragments":["example,"]},{"Key":"for example,","Fragments":["I'd","use","we","a","use","you"]},{"Key":"example, I'd","Fragments":["have"]},{"Key":"I'd have","Fragments":["no"]},{"Key":"have no","Fragments":["problem","real"]},{"Key":"no problem","Fragments":["giving"]},{"Key":"problem giving","Fragments":["the"]},{"Key":"giving the","Fragments":["variables","variables","pattern"]},{"Key":"the variables","Fragments":["generic","to","less","at"]},{"Key":"variables generic","Fragments":["names."]},{"Key":"generic names.","Fragments":["But"]},{"Key":"names. But","Fragments":["as","maybe"]},{"Key":"But as","Fragments":["it","said,"]},{"Key":"as it","Fragments":["is","is.","better","is","describes","adds","obscures","contained","wouldn't","is","could","is","happens).","has","takes","could","is?","makes","is","does","is","is","will","just","made","is"]},{"Key":"already in","Fragments":["a","the"]},{"Key":"a particular","Fragments":["domain"]},{"Key":"particular domain","Fragments":["I"]},{"Key":"domain I","Fragments":["want"]},{"Key":"I want","Fragments":["to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"be explicit","Fragments":["as","about","about"]},{"Key":"explicit as","Fragments":["to"]},{"Key":"as to","Fragments":["what","what","what"]},{"Key":"to what","Fragments":["parts","I","Anagram.word","each","you","you"]},{"Key":"what parts","Fragments":["of"]},{"Key":"parts of","Fragments":["that","that","a"]},{"Key":"of that","Fragments":["domain","work","!","functionality.","map","variable","```\\n```","fact?","Scala"]},{"Key":"that domain","Fragments":["it"]},{"Key":"domain it","Fragments":["refers"]},{"Key":"it refers","Fragments":["to."]},{"Key":" By","Fragments":["choosing","looking","using","helper","minimal,"]},{"Key":"By choosing","Fragments":["`other`"]},{"Key":"choosing `other`","Fragments":["as"]},{"Key":"`other` as","Fragments":["a"]},{"Key":"a variable","Fragments":["name","name","if","in","so","like"]},{"Key":"variable name","Fragments":["I","is"]},{"Key":"name I","Fragments":["hope","choose"]},{"Key":"I hope","Fragments":["that,","I","that"]},{"Key":"hope that,","Fragments":["by"]},{"Key":"that, by","Fragments":["its"]},{"Key":"by its","Fragments":["proximity"]},{"Key":"its proximity","Fragments":["to"]},{"Key":"proximity to","Fragments":["`strand`,"]},{"Key":"to `strand`,","Fragments":["it"]},{"Key":"`strand`, it","Fragments":["will"]},{"Key":"it will","Fragments":["be","never","probably","take","be","add","match","not","optimize","be","split","call","never","be","never","never"]},{"Key":"will be","Fragments":["clear","computed","equally","the","much","small.","worse","a","compiled","more","executed","much","great","the","a","consumed","made","automatically","much","done","recalculated","shorter,","thrown","created"]},{"Key":"be clear","Fragments":["that"]},{"Key":"clear that","Fragments":["it","`other`","the","you"]},{"Key":"that it","Fragments":["too","can't","includes","performs","is","hey","is","looks","is","always","is","is","is","returns","can","is","can","creates","requires","doesn't","is","can","can","doesn't","provides","is","delegates","will","is","re-occurs"]},{"Key":"it too","Fragments":["is","complicated."]},{"Key":"too is","Fragments":["a"]},{"Key":"a strand","Fragments":["of"]},{"Key":"strand of","Fragments":["DNA."]},{"Key":"it's fine","Fragments":["to"]},{"Key":"fine to","Fragments":["assume"]},{"Key":"to assume","Fragments":["understanding"]},{"Key":"assume understanding","Fragments":["of"]},{"Key":"understanding of","Fragments":["what","what","regex"]},{"Key":"of what","Fragments":["`zip`","is","it","I","is","are","the"]},{"Key":"what `zip`","Fragments":["does","does"]},{"Key":"`zip` does","Fragments":["as","*not*","and","that"]},{"Key":"does as","Fragments":["a)"]},{"Key":"as a)","Fragments":["you"]},{"Key":"a) you","Fragments":["really","are"]},{"Key":"you really","Fragments":["should","need","can","need","need","have"]},{"Key":"really should","Fragments":["understand","precompute"]},{"Key":"should understand","Fragments":["`zip`"]},{"Key":"understand `zip`","Fragments":["as"]},{"Key":"`zip` as","Fragments":["a"]},{"Key":"a developer","Fragments":["and"]},{"Key":"developer and","Fragments":["b)"]},{"Key":"and b)","Fragments":["if"]},{"Key":"b) if","Fragments":["you"]},{"Key":"don't it's","Fragments":["easy"]},{"Key":"it's easy","Fragments":["to","to"]},{"Key":"easy to","Fragments":["look","understand","try","see","read.","refactor","understand","grasp","detect","understand,","validate,","union","read","understand","append","understand.","make","follow.","get","understand","replace","read.","read"]},{"Key":"look up.","Fragments":["My"]},{"Key":"up. My","Fragments":["choice"]},{"Key":"My choice","Fragments":["of"]},{"Key":"choice of","Fragments":["`x`","filter"]},{"Key":"of `x`","Fragments":["and"]},{"Key":"`y` as","Fragments":["variable"]},{"Key":"as variable","Fragments":["names"]},{"Key":"names for","Fragments":["the","parameters","constants.","constants.","better","readability","your","variables,","different","readability.","readability).","easier","each","readability.","better"]},{"Key":"anonymous function","Fragments":["passed","arg","that","in","arg"]},{"Key":"function passed","Fragments":["to"]},{"Key":"passed to","Fragments":["`count`","the","matches.","the","the"]},{"Key":"to `count`","Fragments":["is"]},{"Key":"`count` is","Fragments":["simply"]},{"Key":"is simply","Fragments":["because"]},{"Key":"simply because","Fragments":["it's"]},{"Key":"because it's","Fragments":["such","specified"]},{"Key":"it's such","Fragments":["a"]},{"Key":"such a","Fragments":["short","Seq","function","```Map[Char,Int]```?!","Range","long","simple","short","simple","reason","small"]},{"Key":"a short","Fragments":["function","while","one-liner).","explanatory"]},{"Key":"short function","Fragments":["it"]},{"Key":"function it","Fragments":["doesn't","could"]},{"Key":"it doesn't","Fragments":["need","matter.","matter","seem","mutate","compile.","confuse","look","say","really","just","change.","really"]},{"Key":"doesn't need","Fragments":["any","to","to","to","to","to"]},{"Key":"need any","Fragments":["more.","return.","conversion"]},{"Key":"I should","Fragments":["also","dive","do","upload","be","have","have","have","not","have","have","get","use","give","use"]},{"Key":"should also","Fragments":["point","recognize","learn","be","be","check"]},{"Key":"also point","Fragments":["out"]},{"Key":"point out","Fragments":["that"]},{"Key":"out that","Fragments":["`zip`","the","it","`if`","my","```(?!')[\\W]+```","my","my"]},{"Key":"that `zip`","Fragments":["does"]},{"Key":"does *not*","Fragments":["combine"]},{"Key":"*not* combine","Fragments":["two"]},{"Key":"combine two","Fragments":["*String*s"]},{"Key":"two *String*s","Fragments":["pairwise,"]},{"Key":"*String*s pairwise,","Fragments":["but"]},{"Key":"pairwise, but","Fragments":["rather"]},{"Key":"but rather","Fragments":["two","to"]},{"Key":"rather two","Fragments":["lists"]},{"Key":"two lists","Fragments":["-"]},{"Key":"lists -","Fragments":["so"]},{"Key":"so naming","Fragments":["the"]},{"Key":"naming the","Fragments":["variables","variables","counter"]},{"Key":"variables to","Fragments":["indicate","hold"]},{"Key":"to indicate","Fragments":["they","what","beginning","the"]},{"Key":"indicate they","Fragments":["are"]},{"Key":"they are","Fragments":["characters","matching","the","not","preferred","not","not","constants).","private","so","about.","private","anagrams!","already","anagrams.","pretty","sorted,","anagrams","redundant.","not","accessed:","already","initialized","accessed?","part","constants","not","your","testable.","not","arrays,","not","not","too"]},{"Key":"are characters","Fragments":["does"]},{"Key":"characters does","Fragments":["not"]},{"Key":"does not","Fragments":["actually","ensure","matter","imply","just","change.","want","change","even","make","really","allow","have","work","require","support","do","have","add","permit","make","allow","have","have","look","specify","generate","help","get","work.","seem","read","allow","feel","use","contain"]},{"Key":"not actually","Fragments":["give"]},{"Key":"actually give","Fragments":["any"]},{"Key":"give any","Fragments":["insight"]},{"Key":"any insight","Fragments":["into"]},{"Key":"insight into","Fragments":["what"]},{"Key":"into what","Fragments":["`zip`"]},{"Key":"does and","Fragments":["might"]},{"Key":"and might","Fragments":["actually","be"]},{"Key":"might actually","Fragments":["confuse"]},{"Key":"actually confuse","Fragments":["matters"]},{"Key":"confuse matters","Fragments":[":-)"]},{"Key":" Very","Fragments":["nice","sophisticated","nice.","concise,","cool.","nice","interesting","nice,","clean","nice"]},{"Key":"Very nice","Fragments":["and","and","use"]},{"Key":"nice and","Fragments":["clean.","readable,","elegant.","succinct,","clean!","simple!","easy","elegant!","simple!","DRY.","clean."]},{"Key":"I wouldn't","Fragments":["use","recommend","say","have","use","prefix","have","argue."]},{"Key":"wouldn't use","Fragments":["DNA/biology","DNA/biology"]},{"Key":"use DNA/biology","Fragments":["domain","domain"]},{"Key":"DNA/biology domain","Fragments":["terms","terms"]},{"Key":"domain terms","Fragments":["in","in"]},{"Key":"terms in","Fragments":["this","this"]},{"Key":"in this","Fragments":["code","case","case,","sequence","case","case.","direction","respect,","case","case","case","case","case","case,","case","case.","code","example.","solution.","case","case:","case,","case,","case.","case","situation.","case?","use","case","case","particular","way.","class","exercise","exercise","case","exercise).","way","case","case","approach,"]},{"Key":"code –","Fragments":["this","this"]},{"Key":"– this","Fragments":["is","is"]},{"Key":"this is","Fragments":["an","an","a","still","not","an","not","cheating!","not","by","person","the","more","too","personal","more","actually","perhaps","better","correct!","better,","possibly","not","an","not","a","a","a","genious","not","cleaner","a","bad","a","one","a","just","a","clearly","up","a","the","more","better;","a","tail","often","still","a","a","a","a","my","not","my","not","the","a","more","what"]},{"Key":"is an","Fragments":["implementation","automated","automated","automated","automated","opportunity","automated","automated","automated","excellent","expression","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","optimize","automated","automated","automated","automated","interesting","automated","automated","automated","automated","expression","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","object","automated","automated","automated","implementation","O(n^2)","answer","O(n)","automated","automated","automated","automated","automated","automated","automated","automated","alternative","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","interesting","automated","automated","automated","automated","\"object\"","automated","automated","automated","automated","unofficial","automated","automated","automated","automated","automated","overkill.","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","entry","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","automated","extremely","automated","automated","automated"]},{"Key":"an implementation","Fragments":["of","of","of"]},{"Key":"a general","Fragments":["algorithm","rule","algorithm","rule","function","rule"]},{"Key":"general algorithm","Fragments":["that","that"]},{"Key":"algorithm that","Fragments":["doesn't","doesn't"]},{"Key":"that doesn't","Fragments":["need","iterate","need","seem","imply"]},{"Key":"to know","Fragments":["about","about","why","the","about","how","which","about","how","what","and","what"]},{"Key":"know about","Fragments":["those","(be","the","the","the","`require(requirement:","those","\\\\p{Punct}!","zip,","the","\"groupBy(identity)\",","negative","type","Predef.","the"]},{"Key":"about those","Fragments":["things.","short","things."]},{"Key":"those things.","Fragments":["This","This"]},{"Key":"things. This","Fragments":["algorithm","algorithm"]},{"Key":"This algorithm","Fragments":["is","is"]},{"Key":"algorithm is","Fragments":["all","rather","all"]},{"Key":"is all","Fragments":["about","about"]},{"Key":"all about","Fragments":["strings","strings"]},{"Key":"about strings","Fragments":["and","and"]},{"Key":"strings and","Fragments":["characters.","then","counting","characters.","yell"]},{"Key":"But given","Fragments":["the"]},{"Key":"given the","Fragments":["current","profusion","same","modest","structure"]},{"Key":"the current","Fragments":["naming:","char","setup","deposit","second"]},{"Key":"current naming:","Fragments":["`strand`"]},{"Key":"naming: `strand`","Fragments":["and"]},{"Key":"`strand` and","Fragments":["`other`"]},{"Key":"and `other`","Fragments":["perhaps"]},{"Key":"`other` perhaps","Fragments":["doesn't"]},{"Key":"perhaps doesn't","Fragments":["make"]},{"Key":"doesn't make","Fragments":["it","sense"]},{"Key":"make it","Fragments":["clear","more","immutable","clear","more","more","harder","a","more","a","even","easier","tail","work.","an","tail","even","quite","clear","safer","impossible","a","more","a","more","shorter","more","more","a","al","as","tail-recursive.","short","read","extend","explicit","very","a","even","tail-recursive?!).","simple,","as","more","impossible."]},{"Key":"it clear","Fragments":["that","that","what","enough"]},{"Key":"that `other`","Fragments":["is"]},{"Key":"`other` is","Fragments":["also"]},{"Key":"is also","Fragments":["a","```mapValues,","simple.","```mapValues```","a","the","a","O(n),","good","the","the","a","a","to","automagically","implicitly","a","missing"]},{"Key":"a strand.","Fragments":["There's"]},{"Key":"strand. There's","Fragments":["nothing"]},{"Key":"There's nothing","Fragments":["special"]},{"Key":"nothing special","Fragments":["about"]},{"Key":"special about","Fragments":["the"]},{"Key":"about the","Fragments":["first","`count`","function","match","TX",".grouped","count","use","same","replaceFirst","inputs","state","view","name","RuleMaker","order","`getOrElse`","functional","code","regex","bad","exact","difference","readability,","limitations","Twitter","odd","problem,","tuple","\\\\s+."]},{"Key":"the first","Fragments":["one,","parameter","group,","one?","and","invalid","invalid","test","version","version","validation.","assertion","iteration","two","place,","time.","case","side","version.","2","step,","two","time","iteration.","```case```","one","elements","character","attempt.","solution","three","four","iteration,","hit","two","one?","line","programmer","two"]},{"Key":"first one,","Fragments":["or"]},{"Key":"one, or","Fragments":["their"]},{"Key":"or their","Fragments":["order,"]},{"Key":"their order,","Fragments":["really."]},{"Key":"my code,","Fragments":["I","it"]},{"Key":"code, I","Fragments":["clarified","can"]},{"Key":"I clarified","Fragments":["by"]},{"Key":"clarified by","Fragments":["naming"]},{"Key":"by naming","Fragments":["that"]},{"Key":"naming that","Fragments":["what"]},{"Key":"that what","Fragments":["you"]},{"Key":"you call","Fragments":["`x`","with","a","the","the","`date`","isAnagram:)"]},{"Key":"call `x`","Fragments":["and"]},{"Key":"`y` are","Fragments":["individual"]},{"Key":"are individual","Fragments":["characters,"]},{"Key":"individual characters,","Fragments":["so"]},{"Key":"characters, so","Fragments":["the"]},{"Key":"so the","Fragments":["reader","return","braces","last","`getBalance`","reader"]},{"Key":"the reader","Fragments":["isn't","think","out.","never"]},{"Key":"reader isn't","Fragments":["left"]},{"Key":"isn't left","Fragments":["to"]},{"Key":"left to","Fragments":["reason","right."]},{"Key":"to reason","Fragments":["that"]},{"Key":"reason that","Fragments":["out"]},{"Key":"that out","Fragments":["from","into"]},{"Key":"out from","Fragments":["knowing"]},{"Key":"from knowing","Fragments":["what"]},{"Key":"knowing what","Fragments":["zip"]},{"Key":"what zip","Fragments":["does"]},{"Key":"zip does","Fragments":["to"]},{"Key":"does to","Fragments":["two"]},{"Key":"to two","Fragments":["strings."]},{"Key":"I can't","Fragments":["recommend","believe","even","see","say","tell","even","seem","find","initialize","find","take","get"]},{"Key":"can't recommend","Fragments":["doing"]},{"Key":"recommend doing","Fragments":["the"]},{"Key":"the Haskell","Fragments":["exercises"]},{"Key":"Haskell exercises","Fragments":["on"]},{"Key":"exercises on","Fragments":["here"]},{"Key":"on here","Fragments":["enough!","for","so",":-)"]},{"Key":"here enough!","Fragments":["I"]},{"Key":"enough! I","Fragments":["knew"]},{"Key":"I knew","Fragments":["practically","there"]},{"Key":"knew practically","Fragments":["nothing"]},{"Key":"practically nothing","Fragments":["about"]},{"Key":"nothing about","Fragments":["Haskell","Scala,"]},{"Key":"about Haskell","Fragments":["when"]},{"Key":"Haskell when","Fragments":["I"]},{"Key":"I started","Fragments":["and","out","out","study","out","to","off","thinking"]},{"Key":"started and","Fragments":["it's"]},{"Key":"and it's","Fragments":["been","easy","likely","nice."]},{"Key":"it's been","Fragments":["a"]},{"Key":"a great","Fragments":["way","point,","read!","start.","improvement","name,"]},{"Key":"great way","Fragments":["to"]},{"Key":"to learn","Fragments":[":-)","about","about","and","Scala","the","some"]},{"Key":" Also","Fragments":["there","by","look","you","watch","missing","take","I'd","nice","the","you","how","I","interesting","change","if","missing:","can"]},{"Key":"Also there","Fragments":["are","is"]},{"Key":"there are","Fragments":["a","better","multiple","two","also","nice","only","duplicated","no","more","more","some","both","times","no","even","implicit","a","tests","more","more","duplicates.","sorted","different","any","no"]},{"Key":"are a","Fragments":["bunch","few","bit","barrier","bit","few","little","tradeoff"]},{"Key":"a bunch","Fragments":["of","of","of","of"]},{"Key":"bunch of","Fragments":["good","ugly","exercises","test"]},{"Key":"of good","Fragments":["interactive","number"]},{"Key":"good interactive","Fragments":["tutorials"]},{"Key":"interactive tutorials","Fragments":["here:"]},{"Key":"tutorials here:","Fragments":["https://www.fpcomplete.com/school"]},{"Key":" argStringOK","Fragments":["\u0026"]},{"Key":"argStringOK \u0026","Fragments":["aok"]},{"Key":"\u0026 aok","Fragments":["could"]},{"Key":"aok could","Fragments":["be"]},{"Key":"be written","Fragments":["using","as","like","without","using","in","as","as","as"]},{"Key":"written using","Fragments":["`forall`","`map`"]},{"Key":"using `forall`","Fragments":["method."]},{"Key":"`forall` method.","Fragments":["Likewise,"]},{"Key":"method. Likewise,","Fragments":["countC"]},{"Key":"Likewise, countC","Fragments":["and"]},{"Key":"countC and","Fragments":["count"]},{"Key":"and count","Fragments":["can","methods."]},{"Key":"count can","Fragments":["be"]},{"Key":"replaced with","Fragments":["`s.count(...)`.","a","`_.isUpper`.","``charMap.mapValues(_.size)``.","a","_.isDigit","\"contains\"."]},{"Key":"with `s.count(...)`.","Fragments":["Even"]},{"Key":"`s.count(...)`. Even","Fragments":["better,"]},{"Key":"Even better,","Fragments":["this"]},{"Key":"better, this","Fragments":["problem"]},{"Key":"this problem","Fragments":["can","is","(here","can","w/","seem","as"]},{"Key":"problem can","Fragments":["be","be","be"]},{"Key":"be solved","Fragments":["much","with","in","as"]},{"Key":"solved much","Fragments":["easily"]},{"Key":"much easily","Fragments":["in"]},{"Key":"easily in","Fragments":["single"]},{"Key":"in single","Fragments":["pass"]},{"Key":"single pass","Fragments":["without","from","by"]},{"Key":"pass without","Fragments":["all","`str.exists(_.isLetter)`"]},{"Key":"without all","Fragments":["those."]},{"Key":" of","Fragments":["course"]},{"Key":"of course","Fragments":["there","also","is","this","you","your","this","also","inverted","more","there","you","Collections)","this","to","I"]},{"Key":"course there","Fragments":["are","is"]},{"Key":"are better","Fragments":["algorithms.","off"]},{"Key":"better algorithms.","Fragments":["you"]},{"Key":"algorithms. you","Fragments":["can"]},{"Key":"can google","Fragments":["them!"]},{"Key":"google them!","Fragments":[";-)"]},{"Key":"Very sophisticated","Fragments":["algorithm!"]},{"Key":"sophisticated algorithm!","Fragments":[":-)"]},{"Key":" Perhaps","Fragments":["you","just","a","another","you","use","you","you","one","have","easier","a","you","you","you","have","you","have"]},{"Key":"Perhaps you","Fragments":["can","could","could","can","could","could","could","could","could"]},{"Key":"simplify by","Fragments":["just","using","just"]},{"Key":"by just","Fragments":["subtracting","filtering","one","```square```.","comparing","using"]},{"Key":"just subtracting","Fragments":["instead"]},{"Key":"subtracting instead","Fragments":["of"]},{"Key":"of modulo/remainder","Fragments":["and"]},{"Key":"modulo/remainder and","Fragments":["`find`ing"]},{"Key":"and `find`ing","Fragments":["the"]},{"Key":"`find`ing the","Fragments":["next"]},{"Key":"the next","Fragments":["highest","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","test","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","access","step","exercise","step","exercise","one","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","iteration.","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","session","step","exercise","step","exercise","iteration","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","iteration...","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","greatest","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","`value`.","step","exercise","step","exercise","step","exercise","challenge","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","iteration.","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","and","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","iteration","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","line.","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","iteration.","step","exercise","step","exercise","step","exercise"]},{"Key":"next highest","Fragments":["roman"]},{"Key":"highest roman","Fragments":["number"]},{"Key":"roman number","Fragments":["in"]},{"Key":"number in","Fragments":["`vals`","the"]},{"Key":"in `vals`","Fragments":["instead"]},{"Key":"`vals` instead","Fragments":["of"]},{"Key":"of recursing","Fragments":["over"]},{"Key":"recursing over","Fragments":["it?","a"]},{"Key":" line","Fragments":["7:"]},{"Key":"line 7:","Fragments":["if"]},{"Key":"7: if","Fragments":["you"]},{"Key":"you do","Fragments":["pattern","it","that,","the","not","if","the","gain","it","not","not","not","not","pattern","if","that","nothing","it","if","what","not","the","it","not"]},{"Key":"do pattern","Fragments":["matching","matching","matching"]},{"Key":"matching just","Fragments":["for","b/c","for"]},{"Key":"just for","Fragments":["an","fun","the","if-checks","fun","the","clarity."]},{"Key":"for an","Fragments":["if-test,","equivalent","empty","explanation.","elegant","example"]},{"Key":"an if-test,","Fragments":["why"]},{"Key":"if-test, why","Fragments":["then"]},{"Key":"why then","Fragments":["not","have"]},{"Key":"then not","Fragments":["just"]},{"Key":"not just","Fragments":["have","use","use","use","any","say","because","because","jump","do","do","make","have","be","use","call","use","use","filter","go","use","contain","say","initialize","initialize","use","say","use","use","define","assign","make","have"]},{"Key":"just have","Fragments":["an","`count`","some","a","one","to","some"]},{"Key":"have an","Fragments":["if-else","annoying","\"import","idea","easy","input","opinion","explicit","idea","answer..."]},{"Key":"an if-else","Fragments":["instead?"]},{"Key":"could already","Fragments":["pattern"]},{"Key":"already pattern","Fragments":["match"]},{"Key":"match the","Fragments":["pair","test","tuple","tuple","characters"]},{"Key":"the pair","Fragments":["like","from","element."]},{"Key":"pair like","Fragments":["so:"]},{"Key":" `case","Fragments":["(roman,","11"]},{"Key":"`case (roman,","Fragments":["arabic)"]},{"Key":"(roman, arabic)","Fragments":["::"]},{"Key":"arabic) ::","Fragments":["t"]},{"Key":":: t","Fragments":["=\u003e"]},{"Key":"t =\u003e","Fragments":["...`"]},{"Key":" (general","Fragments":["FP"]},{"Key":"(general FP","Fragments":["principle:"]},{"Key":"FP principle:","Fragments":["let"]},{"Key":"principle: let","Fragments":["pattern"]},{"Key":"let pattern","Fragments":["matching"]},{"Key":"matching do","Fragments":["as"]},{"Key":"do as","Fragments":["much","advertised,","a"]},{"Key":"as much","Fragments":["work","-","as","sense.","code"]},{"Key":"much work","Fragments":["as","here"]},{"Key":"work as","Fragments":["you"]},{"Key":" Nice,","Fragments":["but","only","the","other","I","readable","but"]},{"Key":"Nice, but","Fragments":["there's","map,"]},{"Key":"but there's","Fragments":["I'd","seldom","`scala.util.Random.alphanumeric`"]},{"Key":"there's I'd","Fragments":["recommend"]},{"Key":"recommend changing","Fragments":["the"]},{"Key":"changing the","Fragments":["signature","resp.","`dna_nucleotides`","if"]},{"Key":"the signature","Fragments":["on","of","of"]},{"Key":"signature on","Fragments":["`isAnagram(word1:"]},{"Key":"on `isAnagram(word1:","Fragments":["String,"]},{"Key":"`isAnagram(word1: String,","Fragments":["word2:"]},{"Key":"String, word2:","Fragments":["String):"]},{"Key":"word2: String):","Fragments":["Boolean`"]},{"Key":"String): Boolean`","Fragments":["to","because"]},{"Key":"Boolean` to","Fragments":["`isAnagram(word:"]},{"Key":"to `isAnagram(word:","Fragments":["String):"]},{"Key":"`isAnagram(word: String):","Fragments":["Boolean`"]},{"Key":"Boolean` because","Fragments":["you"]},{"Key":"because you","Fragments":["only","have","can!","construct","are"]},{"Key":"you only","Fragments":["ever","want","have","have","test","have","have","need","need","want","update","use","believe"]},{"Key":"only ever","Fragments":["call"]},{"Key":"ever call","Fragments":["it"]},{"Key":"call it","Fragments":["with","something","once,"]},{"Key":"it with","Fragments":["`myWord`","a","tail","`gene","one-liner","this","tail-recursive","constant"]},{"Key":"with `myWord`","Fragments":["as"]},{"Key":"`myWord` as","Fragments":["the"]},{"Key":"first parameter","Fragments":["and"]},{"Key":"parameter and","Fragments":["that"]},{"Key":"and that","Fragments":["is","made"]},{"Key":"a class","Fragments":["value.","to","val,","member.","and","with","Hamming()","on","rather","when","and"]},{"Key":"class value.","Fragments":["Then"]},{"Key":"value. Then","Fragments":["change"]},{"Key":"Then change","Fragments":["the"]},{"Key":"the function","Fragments":["slightly","return","is","ever","does.","is","in","```wordsCount```","outside","into","matches","returns","input","x","body","does","only","will","composition","signature.","body.","```Seq.fill```","is","calls","execution","(scala","differentNucleotides","is","declaration","parameter","itself?","as","is"]},{"Key":"function slightly","Fragments":["to"]},{"Key":"slightly to","Fragments":["match."]},{"Key":"to match.","Fragments":["Also,"]},{"Key":"match. Also,","Fragments":["no"]},{"Key":"Also, no","Fragments":["need"]},{"Key":"no need","Fragments":["to","for","to","to","for","to","to","to","for","to","for","to","to","to","to","to","for","to","to","for","to"]},{"Key":"to call","Fragments":["`word.toList.sorted`;","`map`","`nextInt(n)`.","`toMap`","`toCharArray`.","into","on","`toList`","all","all"]},{"Key":"call `word.toList.sorted`;","Fragments":["instead,"]},{"Key":"`word.toList.sorted`; instead,","Fragments":["just"]},{"Key":"instead, just","Fragments":["call"]},{"Key":"just call","Fragments":["`word.sorted`.","`if(isShouting)",".isLetter","`filter`","```require```"]},{"Key":" Usually","Fragments":["the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the"]},{"Key":"Usually the","Fragments":["next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","Scala","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next"]},{"Key":"next step","Fragments":["is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is"]},{"Key":"step is","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"to have","Fragments":["a","a","a","a","the","pure","a","a","a","a","a","a","a","a","a","a","a","a","less","a","a","a","a","a","a","a","a","a","a","a","a","a","the","a","a","a","self","it.","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","7","a","a","a","a","letters","a","a","a","a","a","your","a","a","a","a","a","names","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","this","a","the","a","a","a","a","a","a","a","a","a","a","a","a","as","a","a","a","a","a","a","a","a","as","a",".","a","a","a","intention-revealing","a","a","a","a","a","a","a","a","the","the","a","a","a","a","a","the","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","thought","a","a","a","a","a","a","a","a","a","a","a","just","a","a","a","a","a","a","a","a","them","a","a","a","a","a","a","another","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","one","your","a","a","a"]},{"Key":"a conversation","Fragments":["about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter."]},{"Key":"conversation about","Fragments":["your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your"]},{"Key":"about your","Fragments":["code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","explanation.","code","code","code","code","code","code","code","while-loops:","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","comment","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","first","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code"]},{"Key":"code and","Fragments":["iterate","iterate","iterate","iterate","iterate","iterate","iterate","mine","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","plan","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","running","iterate","iterate","iterate","iterate","iterate","iterate","structure","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","includes","iterate","iterate","iterate","iterate","iterate","iterate","iterate"]},{"Key":"iterate on","Fragments":["your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your"]},{"Key":"on your","Fragments":["solution.","solution.","solution.","solution.","scala","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","style","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","tips.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","own!","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","own","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","own","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","own,","solution.","solution.","nerves,","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","solution.","own","solution.","solution.","solution.","solution.","solution.","solution.","`count()`","solution."]},{"Key":"the case","Fragments":["of","that","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","should","statements","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","statements","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","statements,","of","of","of","of","of","of","of","of","of","of","of","that","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","where","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","threw","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","matching","of","class","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","class!","of","of","of","of","of","of"]},{"Key":"case of","Fragments":["_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","negative","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","`illogical`.","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","regex,","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","a","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","over-use.","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","\"Silence\"","_hello","_hello","_hello","case","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","only","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","that","_hello","_hello","_hello"]},{"Key":"of _hello","Fragments":["world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,"]},{"Key":"_hello world_,","Fragments":["however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,","however,"]},{"Key":"world_, however,","Fragments":["we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we","we"]},{"Key":"however, we","Fragments":["won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't","won't"]},{"Key":"we won't","Fragments":["be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be"]},{"Key":"won't be","Fragments":["encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","a","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging"]},{"Key":"be encouraging","Fragments":["conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations"]},{"Key":"encouraging conversations","Fragments":["and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and"]},{"Key":"conversations and","Fragments":["iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations."]},{"Key":"and iterations.","Fragments":["We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We","We"]},{"Key":"iterations. We","Fragments":["simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply","simply"]},{"Key":"We simply","Fragments":["wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted"]},{"Key":"simply wanted","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"make sure","Fragments":["you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","they","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","that","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","that","that","we","we","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you"]},{"Key":"sure you","Fragments":["got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got","got"]},{"Key":"you got","Fragments":["through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","away","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through","through"]},{"Key":"got through","Fragments":["the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the"]},{"Key":"through the","Fragments":["(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","days","(sometimes","(sometimes","(sometimes","(sometimes","string","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","loop)","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","`lazy`","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","same","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","API","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","input","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes","word","(sometimes","(sometimes","(sometimes"]},{"Key":"the (sometimes","Fragments":["fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)"]},{"Key":"(sometimes fiddly)","Fragments":["process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process"]},{"Key":"fiddly) process","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"process of","Fragments":["fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,"]},{"Key":"of fetching,","Fragments":["running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running","running"]},{"Key":"fetching, running","Fragments":["some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some","some"]},{"Key":"running some","Fragments":["tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,"]},{"Key":"some tests,","Fragments":["and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and"]},{"Key":"tests, and","Fragments":["submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting"]},{"Key":"and submitting","Fragments":["a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a"]},{"Key":"submitting a","Fragments":["solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution"]},{"Key":"a solution","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","with","to","to","to","to","to","to","to","to","to","like","to","to","to","to","to","to","to","to","to","w/o","to","to","to","using","to","to","to","to","to","to","to","to","to","for","to","to","to","with","to","to","to","where","to","to","to","to","to","to","w/","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","w/o","to","to","to","to","to","to","to","to","to","to","to","to","to","w/","to","I","to","to","using","to","to","to","to","to","w/","to","w/","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","using","to","to","to","to","to","to","to","to","to","to","to","to","with","to","w/o","to","to","to","to","to","with","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","w/","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","that","to","to","to","not","to","to","to","to","that","to","to","to","to","to","using","to","to","to","to","to","to","to","to","using","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","optimized","that","to","to","to","to","w/","to","to","to"]},{"Key":"solution to","Fragments":["the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","permit","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","Bob","the","the","the","the","the","an","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","get","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","improve","the","the","the"]},{"Key":"The next","Fragments":["step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step","step"]},{"Key":"to fetch","Fragments":["the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the"]},{"Key":"fetch the","Fragments":["next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","letters?","next","next","next","next","next","next","next","next","next","next","next","next","next","next"]},{"Key":"next exercise","Fragments":["(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism"]},{"Key":"exercise (`exercism","Fragments":["fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),"]},{"Key":"(`exercism fetch`),","Fragments":["create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create"]},{"Key":"fetch`), create","Fragments":["a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a"]},{"Key":"create a","Fragments":["solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","new","new","Regex","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","new","solution,","solution,","solution,","solution,","solution,","solution,","new","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","Map","solution,","solution,","solution,","solution,","`Hamming`","solution,","solution,","solution,","solution,","solution,","solution,","solution,","map","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","new","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","method","solution,","`Map[Char,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","`Range`","solution,","solution,","solution,","solution,","solution,","companion","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","temporary","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","mapping","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","solution,","new","solution,","clean","solution,","solution,","new","map","map","solution,"]},{"Key":"a solution,","Fragments":["and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","b/c","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and"]},{"Key":"solution, and","Fragments":["then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then"]},{"Key":"and then","Fragments":["submit","an","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","code","check","submit","submit","submit","submit","submit","submit","submit","submit","zipping","creating","just","submit","go","submit","submit","submit","submit","back","submit","submit","submit","have","use","submit","submit","submit","submit","submit","on","submit","submit","submit","submit","submit","submit","worked","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","adding","submit","submit","\"...","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","`length`.","submit","submit","submit","submit","submit","submit","submit","pattern","comparing","submit","submit","submit","submit","try","submit","submit","you","submit","submit","submit","the","submit","submit","submit","the","you","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","quits.","immediately","submit","submit","submit","submit","submit","move","counting.","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","having","submit","submit","submit","submit","submit","submit","submit","submit","submit","to","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","return","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","finding","submit","shuffling,","try","submit","submit","submit","submit","use","submit","simply","make","a","submit","submit","submit","submit","submit","using","submit","submit","submit","doing","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","submit","some","length","submit","does","optimized","I'll","submit","submit","submit","submit","I","submit","modifying","modifying","submit","had","use","submit"]},{"Key":"then submit","Fragments":["it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it","it"]},{"Key":"submit it","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"it to","Fragments":["the","the","the","the","the","the","the","typical","the","the","the","represent","write","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","actually","the","the","the","the","the","the","another","the","the","the","the","the","the","the","the","the","call","the","the","the","the","the","the","the","the","the","the","the","the","the","do,","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","see","the","the","the","the","improve","the","the","be","the","the","the","the","the","the","the","the","the","the","an","be","this","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","you","the","the","the","the","the","the","other","the","the","the","seriously","the","the","the","the","the","the","the","the","the","the","\"dotted","build/check","the","the","the","the","the","the","the","be","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","be.","the","the","the","the","the","the","the","the","the","the","the","the","the","the","provide","the","work","make","the","the","the","the","the","the","the","the","the","the","the","the","the","the","compile","the","the","the","the","the","the","the","the","the","the","the","the","see","run","be","the","the","the","the","tail-recursive","the","the","make","the"]},{"Key":"the website","Fragments":["as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as"]},{"Key":"website as","Fragments":["a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a"]},{"Key":" Happy","Fragments":["hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!"]},{"Key":" _This","Fragments":["is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is"]},{"Key":"_This is","Fragments":["an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an"]},{"Key":"an automated","Fragments":["nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick."]},{"Key":"automated nitpick.","Fragments":["[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read"]},{"Key":"nitpick. [Read","Fragments":["more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)"]},{"Key":"[Read more](http://exercism.io/rikki)","Fragments":["about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about"]},{"Key":"more](http://exercism.io/rikki) about","Fragments":["this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this"]},{"Key":"about this","Fragments":["experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","on","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","coding","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","exercise,","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","solution","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","method","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","experiment._","wrong)","experiment._","experiment._"]},{"Key":" @glenda","Fragments":["Thanks"]},{"Key":"@glenda Thanks","Fragments":["so"]},{"Key":"Thanks so","Fragments":["much!","much"]},{"Key":" Looks","Fragments":["great!","pretty","good","fine.","great,","great,","really","good.","good.","good!","good!","great.","good!","great,","good.","good,","good.","cleaner","great,","really","good,","good.","almost","good.","good.","great!","good.","too","good.","great!","to","fun!","good","good.","great!","quite","like","good","great","great,","ok.","good","awesome!","basically","really","cool","good","great!","good."]},{"Key":"Looks great!","Fragments":["A","Just","Tough"]},{"Key":"great! A","Fragments":["few","couple"]},{"Key":"A few","Fragments":["minor","nitpicks:","minor","nitpicks:","things:","tweaks","tweaks","things:","more","suggestions","quick","thoughts/questions:"]},{"Key":"few minor","Fragments":["improvements:","suggestions:"]},{"Key":" 1.","Fragments":["Redundant","Is","I'm","Duplication","You","Look","It'd","The","You","`map.withDefaultValue(0)`","why","Is","`message.forall(c","so","You","You","I","Learned","Learned","Look","Maybe","The","and","The","Instead","the","Look","endsWith","Get","FP-style"]},{"Key":"1. Redundant","Fragments":["curly"]},{"Key":"Redundant curly","Fragments":["braces"]},{"Key":"curly braces","Fragments":["around","around","where","when","around","and","around","if","around","for","that","from","around","and","in","can","for"]},{"Key":"braces around","Fragments":["pattern","your","the","each","the","a","the"]},{"Key":"around pattern","Fragments":["matching"]},{"Key":"matching can","Fragments":["be"]},{"Key":" 2.","Fragments":["`x.trim.length","Again","I","`String`","All","Some","You","Second","If","Instead","why","FYI,","`message.count(c","initial","Then","`return`","Next","Right","Second","`Map.empty[String,","You","I","If","(_","Always","use"]},{"Key":"2. `x.trim.length","Fragments":["=="]},{"Key":"`x.trim.length ==","Fragments":["0`"]},{"Key":"== 0`","Fragments":["can","can"]},{"Key":"0` can","Fragments":["be","be","be"]},{"Key":"be reduced","Fragments":["to"]},{"Key":"I saw","Fragments":["that,","your","that","on","jacksonja's","you","Seq","to"]},{"Key":"saw that,","Fragments":["too!"]},{"Key":"that, too!","Fragments":["Perhaps"]},{"Key":"too! Perhaps","Fragments":["I'll"]},{"Key":"Perhaps I'll","Fragments":["come","work","take"]},{"Key":"I'll come","Fragments":["back","back","back"]},{"Key":"come back","Fragments":["and","to","to","and","to"]},{"Key":"back and","Fragments":["refactor","try"]},{"Key":"and refactor","Fragments":["this"]},{"Key":"refactor this","Fragments":["to","so"]},{"Key":"this to","Fragments":["use","communicate.","Scala","be","my","test.","the","the","only","`map`","just"]},{"Key":"use it.","Fragments":["Thanks","This","Thanks!"]},{"Key":"it. Thanks","Fragments":["for"]},{"Key":"for reviewing","Fragments":["and","this!"]},{"Key":"reviewing and","Fragments":["suggesting!"]},{"Key":" A","Fragments":["trick","generalized","habit","little","more","few","small","few","very","nice","simple","few","few","case","map/reduce","couple","second","little","fold","general","version","colleague","couple","`foldLeft```","more","nitpicker","little","nice","version",".groupBy.mapValues.map","List","perfect","solution","more","solution","smart","more","more","robot","different","map/reduce","few"]},{"Key":"A trick","Fragments":["I"]},{"Key":"trick I","Fragments":["picked"]},{"Key":"I picked","Fragments":["up"]},{"Key":"picked up","Fragments":["reading"]},{"Key":"up reading","Fragments":["others'","the"]},{"Key":"reading others'","Fragments":["suggestions"]},{"Key":"others' suggestions","Fragments":["today"]},{"Key":"suggestions today","Fragments":["was"]},{"Key":"today was","Fragments":["to"]},{"Key":"use `require`","Fragments":["instead"]},{"Key":"`require` instead","Fragments":["of"]},{"Key":"of explicitly","Fragments":["throwing"]},{"Key":"explicitly throwing","Fragments":["the"]},{"Key":"throwing the","Fragments":["`IllegalArgumentException`.","exception"]},{"Key":"This one","Fragments":["makes","is","was","felt","is"]},{"Key":"one makes","Fragments":["better"]},{"Key":"makes better","Fragments":["use"]},{"Key":"better use","Fragments":["of","also","vals","a","==","```math.round```"]},{"Key":"of built-in","Fragments":["String"]},{"Key":"built-in String","Fragments":["functions."]},{"Key":" better,","Fragments":["but"]},{"Key":"better, but","Fragments":["still","I"]},{"Key":"but still","Fragments":["too","it","IMHO","...looks","seem","there"]},{"Key":"still too","Fragments":["much"]},{"Key":"much imperative","Fragments":["style"]},{"Key":"imperative style","Fragments":["w/"]},{"Key":"style w/","Fragments":["side"]},{"Key":"w/ side","Fragments":["effects:","effects"]},{"Key":" Avoid","Fragments":["var","`if","`.equals`.","regex"]},{"Key":"Avoid var","Fragments":["if"]},{"Key":"var if","Fragments":["you","you"]},{"Key":"can (here","Fragments":["you"]},{"Key":"(here you","Fragments":["can"]},{"Key":"of \"answer\"","Fragments":["altogether"]},{"Key":"\"answer\" altogether","Fragments":["if"]},{"Key":"altogether if","Fragments":["you"]},{"Key":"you make","Fragments":["the","`map`","that","a","references","readers","it","`Chessboard`","`Dna`","`Year`","this"]},{"Key":"if-else block","Fragments":["the"]},{"Key":"block the","Fragments":["last"]},{"Key":"the last","Fragments":["expression","expression","expression","char","computed","test.","test.","iteration.","term","catch-all","word","statement","iteration.","```else```","one","character","element","4","'sentence',","statement","case-clause"]},{"Key":"last expression","Fragments":["of","in","in"]},{"Key":"expression of","Fragments":["function"]},{"Key":"of function","Fragments":["hey).","calls"]},{"Key":"If you","Fragments":["can","come","want","are","use","prefer","keep","do","need","try","had","look","read","turn","want","would","want","want","don't","curry","would","look","still","want","made","are","mean","do","change","are","want","use","want","ever","use","insist","don't","insist","don't","want","push","use","don't","have","want","look","use","don't","want","synchronize","make","make"]},{"Key":"get also","Fragments":["rid"]},{"Key":"also rid","Fragments":["of"]},{"Key":"of \"msg\"","Fragments":["(hint:"]},{"Key":"\"msg\" (hint:","Fragments":["try"]},{"Key":"(hint: try","Fragments":["\"talking.trim"]},{"Key":"try \"talking.trim","Fragments":["match"]},{"Key":"\"talking.trim match","Fragments":["{"]},{"Key":"match {","Fragments":["case"]},{"Key":"{ case","Fragments":["s","(s1,","(x,","(a,","(l,","(k,","(b1,","(first,","(x,"]},{"Key":"case s","Fragments":["if","if","if","if"]},{"Key":"s if","Fragments":["...\"","s.trim.isEmpty","(/*here","(/*here"]},{"Key":"if ...\"","Fragments":["and"]},{"Key":"...\" and","Fragments":["have"]},{"Key":"and have","Fragments":["your","it","updated","some","submitted","a"]},{"Key":"have your","Fragments":["helper","inner","`(a,","input","cake","```def```s","internal","checks","code","own"]},{"Key":"your helper","Fragments":["functions","def's","function"]},{"Key":"helper functions","Fragments":["have","and","into","might","for","(also","instead","private.","like","as","w/","with","etc","and/or","w/","with","w/","w/","are","also","w/","and","like","with","to"]},{"Key":"functions have","Fragments":["a","a","an"]},{"Key":"You might","Fragments":["also","find","consider","also","have","also","also","have","want","want","also","want","end","be","want","also","want","also","want","want"]},{"Key":"the endsWith","Fragments":["function."]},{"Key":" if","Fragments":["you","(!ntides.contains(c))","you","(a)","(...)","(foo)","you","(isShouting)","you","(!isValidTriangle)","you","you","you","(years.contains(year))","(message.trim.isEmpty)","you","you","you","you","you","you","you","you","you","(!containsWord)","(containsWord)","you","you"]},{"Key":"have \u003e","Fragments":["2"]},{"Key":"\u003e 2","Fragments":["if-clauses"]},{"Key":"2 if-clauses","Fragments":["you"]},{"Key":"if-clauses you","Fragments":["might"]},{"Key":"might consider","Fragments":["switching","to","using","using","splitting","abstracting","using","splitting","to","using"]},{"Key":"consider switching","Fragments":["to"]},{"Key":"switching to","Fragments":["pattern","that."]},{"Key":"Very nice.","Fragments":["I'd"]},{"Key":"nice. I'd","Fragments":["declare"]},{"Key":"I'd declare","Fragments":["those"]},{"Key":"declare those","Fragments":["helper"]},{"Key":"those helper","Fragments":["methods"]},{"Key":"helper methods","Fragments":["as","may","for","to","with","like","w/","(and","to"]},{"Key":"methods as","Fragments":["`private`,"]},{"Key":"as `private`,","Fragments":["but"]},{"Key":"`private`, but","Fragments":["I've"]},{"Key":"but I've","Fragments":["no","never","broken","completely","seen","only"]},{"Key":"I've no","Fragments":["idea"]},{"Key":"no idea","Fragments":["what"]},{"Key":"idea what","Fragments":["the"]},{"Key":"what the","Fragments":["Scala","conditions","function","function","function","unit","function","Scala","intention","problem","original","correct","response","conventions"]},{"Key":"Scala idioms","Fragments":["are."]},{"Key":" isShouting,","Fragments":["isQuestion"]},{"Key":"isShouting, isQuestion","Fragments":["and"]},{"Key":"isQuestion and","Fragments":["isSilence"]},{"Key":"and isSilence","Fragments":["could"]},{"Key":"isSilence could","Fragments":["also"]},{"Key":"also be","Fragments":["one-liners","defined","written","more","written","thread","mapped","easier","avoided.","some"]},{"Key":"be one-liners","Fragments":["without"]},{"Key":"one-liners without","Fragments":["the"]},{"Key":"without the","Fragments":["curly","original","trait","need","use","need","dot).","cast","\"case"]},{"Key":"the curly","Fragments":["braces,","braces","braces","braces","braces","braces","braces,","braces","braces.","braces?","brackets"]},{"Key":"curly braces,","Fragments":["too,","I","which"]},{"Key":"braces, too,","Fragments":["I"]},{"Key":"too, I","Fragments":["think?"]},{"Key":"I think?","Fragments":["Not"]},{"Key":"think? Not","Fragments":["sure"]},{"Key":"Not sure","Fragments":["what","if","if","why","if","it","if","if","I'm","I","it","if","about","how"]},{"Key":"sure what","Fragments":["good","happened","you","you","the","you"]},{"Key":"what good","Fragments":["Scala"]},{"Key":"good Scala","Fragments":["style"]},{"Key":"Scala style","Fragments":["is","guide","guides","guide"]},{"Key":"style is","Fragments":["on"]},{"Key":"is on","Fragments":["this","collections","most","the"]},{"Key":"on this","Fragments":["kind","article:","exercise","submission:","example.","prime","solution.","rather","one"]},{"Key":"this kind","Fragments":["of","of","of","of"]},{"Key":"kind of","Fragments":["point...","dislike","thing.","misleading","the","complex.","collection,","refactoring","task.","\"count\"","problem","obvious","\"pair-wise\"","odd","overkill","a"]},{"Key":" Can","Fragments":["you","you","you","you","you","you","you","you","you","you","you","you","use","you","you","you","you","you","you","you"]},{"Key":"Can you","Fragments":["do","explain","define","use","split","also","tell","avoid","also","use","also","think","adjust","explain","try","provide","do","simplify","also","find","do","help","elaborate","explain","also","refactor","make","have","make"]},{"Key":"a less","Fragments":["exhaustive"]},{"Key":"less exhaustive","Fragments":["enumeration?"]},{"Key":"think your","Fragments":["if-else-if-else","solution","solution","intentions","isStartOf","solution","way","reasons"]},{"Key":"your if-else-if-else","Fragments":["construct"]},{"Key":"if-else-if-else construct","Fragments":["can"]},{"Key":"construct can","Fragments":["be"]},{"Key":"be streamlined","Fragments":["by"]},{"Key":"streamlined by","Fragments":["using"]},{"Key":"using pattern","Fragments":["matching","matching","matching","matching.","matching","matching","matching","matching","matching","matching,","matching","matching.","matching","match","match","matching","matching","matching.","matching.","matching"]},{"Key":"I prefer","Fragments":["to","to","a","a","not","case","the","readability","a","to","not","not","it","to","the","more","a"]},{"Key":"prefer to","Fragments":["avoid","have","use","use","add"]},{"Key":"avoid regular","Fragments":["expressions"]},{"Key":"regular expressions","Fragments":["if","into",":))","only,","after","can","is","is","might","in","for","unless","come"]},{"Key":"expressions if","Fragments":["possible."]},{"Key":"if possible.","Fragments":["They're"]},{"Key":"possible. They're","Fragments":["hard"]},{"Key":"They're hard","Fragments":["to"]},{"Key":"hard to","Fragments":["write","read.","understand","understand","my","read/understand.","read.","figure","read,","understand","see"]},{"Key":"to write","Fragments":["and","```toList```?","transformation","an","`seq.filter(isAnagram)`","a","such","this","the","general","this","the","it","`","a","your","the","a","it","a"]},{"Key":"write and","Fragments":["even"]},{"Key":"even harder","Fragments":["to"]},{"Key":"harder to","Fragments":["read","track","understand","read","\"parse\"","track","understand,"]},{"Key":"to read","Fragments":["and","it","and","without","if","by","the","up",":)","the","and","through","and","regular","through","and","and","less","than","and","line","and","if","and","though."]},{"Key":"read and","Fragments":["maintain.","understand","understood.","modify","understand.","performs","understand.","follow.","maintain","understand"]},{"Key":"and maintain.","Fragments":["Take","can"]},{"Key":"maintain. Take","Fragments":["a"]},{"Key":"look in","Fragments":["`StringOps`"]},{"Key":"in `StringOps`","Fragments":["for"]},{"Key":"`StringOps` for","Fragments":["a"]},{"Key":"lot of","Fragments":["useful","cool","Scala","collection","useful","that,","people","iterations","repetition","unnecessary","unnecessary","repetitions.","line","list","submissions","useful","maps","work","your","your","work"]},{"Key":"of useful","Fragments":["methods","methods","methods"]},{"Key":"useful methods","Fragments":["on","for","like","for"]},{"Key":"methods on","Fragments":["`String`s","List.","Seq.","StringOps","`Map[K,","it,"]},{"Key":"on `String`s","Fragments":["that"]},{"Key":"`String`s that","Fragments":["will"]},{"Key":"that will","Fragments":["let","be","take","build","probably"]},{"Key":"will let","Fragments":["you"]},{"Key":"let you","Fragments":["accomplish","do"]},{"Key":"you accomplish","Fragments":["a"]},{"Key":"accomplish a","Fragments":["lot"]},{"Key":"of cool","Fragments":["stuff"]},{"Key":"cool stuff","Fragments":["without","from","in"]},{"Key":"stuff without","Fragments":["bringing"]},{"Key":"without bringing","Fragments":["out"]},{"Key":"bringing out","Fragments":["the"]},{"Key":"out the","Fragments":["big","return","tests","two","constant","one","`==","words.","meaning","groupBy","braces","case","predicate.","'result'","for","\"exists\"","checksum","code","tests","filter","match","error"]},{"Key":"the big","Fragments":["regex","picture.","boolean"]},{"Key":"big regex","Fragments":["guns."]},{"Key":" Here's","Fragments":["a","your","what"]},{"Key":"Here's a","Fragments":["test","brief"]},{"Key":"a test","Fragments":["case","case","proving","and","case","file","about,"]},{"Key":"test case","Fragments":["for","to","which","that"]},{"Key":"case for","Fragments":["leading","the","it","companion","just"]},{"Key":"for leading","Fragments":["and"]},{"Key":"leading and","Fragments":["trailing"]},{"Key":"and trailing","Fragments":["whitespace:"]},{"Key":" it","Fragments":["should","will","sounds","(\"has","is","looks","reads","is","should","would"]},{"Key":"should \"not","Fragments":["count"]},{"Key":"\"not count","Fragments":["leading"]},{"Key":"count leading","Fragments":["or"]},{"Key":"leading or","Fragments":["trailing"]},{"Key":"or trailing","Fragments":["whitespace\""]},{"Key":"trailing whitespace\"","Fragments":["in"]},{"Key":"whitespace\" in","Fragments":["{"]},{"Key":" val","Fragments":["phrase","counts","pf:","invalidPhoneNumber","neighbors","endsWithQuestionMark","endsWithQuestionMark","maxRobots","correctNumber","Silence","hey:","head","tail","mutable","sequenceCounts","sum","years:","YellingPattern","studentList","input","areaCode","newCount","nucleotideCounts:","default","count","pat","pat(code,first,second)","responder","letters","Question","anagram","anagram","hey:","good_number","cleaned:"]},{"Key":"val phrase","Fragments":["="]},{"Key":"phrase =","Fragments":["new"]},{"Key":"new Phrase(\"\\t\\tIntroductory","Fragments":["Course"]},{"Key":"Phrase(\"\\t\\tIntroductory Course","Fragments":["\")"]},{"Key":"val counts","Fragments":["="]},{"Key":"counts =","Fragments":["Map(\"introductory\""]},{"Key":"= Map(\"introductory\"","Fragments":["-\u003e"]},{"Key":"Map(\"introductory\" -\u003e","Fragments":["1,"]},{"Key":"-\u003e 1,","Fragments":["\"course\"","2","1"]},{"Key":"1, \"course\"","Fragments":["-\u003e"]},{"Key":"\"course\" -\u003e","Fragments":["1)"]},{"Key":" phrase.wordCount","Fragments":["should"]},{"Key":"phrase.wordCount should","Fragments":["be"]},{"Key":"You can","Fragments":["simplify","use","also","call","use","simplify","always","omit","try","replace","have","also","also","rewrite","omit","look","avoid","just","also","omit","improve","check","simplify","look","just","use","rewrite","drop","probably","avoid","try","share","get","keep","modify","make","then","it","remove","see","rewrite","improve","use","do","use","reduce","use","get","use","also","also","use","map","probably","go","use","just","get","omit","also","use","discard","improve","change","easily","use","re-implement","have","`map`","(and","skip","use","simply","use","name","call","(and","make","omit","put","use","also","use","simplify","remove","achieve","use","see","also","remove","avoid","simplify","skip","use","clean","write","use","not","simplify"]},{"Key":"simplify with","Fragments":["```mapValues```."]},{"Key":" Type","Fragments":["aliases","aliases"]},{"Key":"Type aliases","Fragments":["help","should"]},{"Key":"aliases help","Fragments":["to"]},{"Key":"help to","Fragments":["make","model","make"]},{"Key":"more readable,","Fragments":["as","not","I","so","but"]},{"Key":"readable, as","Fragments":["well"]},{"Key":"as well","Fragments":["as","`count`","as","on","would","as","as","in","just","and","choose"]},{"Key":"well as","Fragments":["a","private","you","```input","a"]},{"Key":"a val","Fragments":["for","-","and","first)","for","instead","is","really","instead","as","for","instead?","defeats","instead"]},{"Key":"val for","Fragments":["the","efficiency.","efficiency.","efficiency."]},{"Key":"the empty","Fragments":["Seq","Set.","Set.","element","list."]},{"Key":"empty Seq","Fragments":["w/"]},{"Key":"Seq w/","Fragments":["a"]},{"Key":"use ```grade```","Fragments":["inside"]},{"Key":"```grade``` inside","Fragments":["```add```"]},{"Key":"inside ```add```","Fragments":["for"]},{"Key":"```add``` for","Fragments":["simplification."]},{"Key":" My","Fragments":["first","reasoning","brain","first","first","full","first","really","first","mind","previous","solution","solution","solution","solution","rule","first","first"]},{"Key":"My first","Fragments":["solution","foray","iteration","thought","nitpick","two","attempt","implementation","version","attempt","iteration","Scala"]},{"Key":"first solution","Fragments":["was","is","for","but","of"]},{"Key":"solution was","Fragments":["similar","similar.","pretty","how"]},{"Key":"was similar","Fragments":["to"]},{"Key":"similar to","Fragments":["yours","\"take\"","word","yours.","what","how","Predef).","mine,"]},{"Key":"to yours","Fragments":["and"]},{"Key":"yours and","Fragments":["is"]},{"Key":"is perfectly","Fragments":["fine.","succinct","fine."]},{"Key":"But then","Fragments":["I","you","again,","you"]},{"Key":"then I","Fragments":["thought","would","figured","saw","saw","decided","need","though"]},{"Key":"I thought","Fragments":["that","I","about","you","of","this","of","about","the","that","that","that","there","I","that","the","about","that","you","of","it","a","you"]},{"Key":"thought that","Fragments":["a","yielded","there","using","the","using"]},{"Key":"more natural","Fragments":["place","to","to","to","(?)"]},{"Key":"natural place","Fragments":["for"]},{"Key":"place for","Fragments":["the","for"]},{"Key":"the movement","Fragments":["logic","logically"]},{"Key":"movement logic","Fragments":["could","now"]},{"Key":"logic could","Fragments":["be","be"]},{"Key":"be in","Fragments":["the","a","the","another"]},{"Key":"the ```Bearing```s","Fragments":["themselves"]},{"Key":"```Bearing```s themselves","Fragments":["instead"]},{"Key":"themselves instead","Fragments":["of"]},{"Key":"of these","Fragments":["many","could","methods","functions","different","methods.","early","```.*```?","nested","exercises"]},{"Key":"these many","Fragments":["```case```","if-else"]},{"Key":"many ```case```","Fragments":["statements."]},{"Key":"```case``` statements.","Fragments":["Looks"]},{"Key":"statements. Looks","Fragments":["at"]},{"Key":"Looks at","Fragments":["least"]},{"Key":"least more","Fragments":["OOP"]},{"Key":"more OOP","Fragments":["to"]},{"Key":"OOP to","Fragments":["me."]},{"Key":" +","Fragments":["1","2","3"]},{"Key":" Thanks","Fragments":["for","for","@hazel","abo64.","@maritza,","for","@isai","samthebest,","for","for","for","a","so","for","@stan","@theresa,","for","for","@cheyenne,","for","for","for","for","for","for","for","for","@mathilde!","for","for","for","again!","for","@jamison.","for","for","for","@aniya","for","for","for","for","@frankie","again","for","for","for","to","for","for","for","for","for","to","for","abo64.","for","for"]},{"Key":"the suggestion","Fragments":["for","I've"]},{"Key":"suggestion for","Fragments":["`require`","me"]},{"Key":"for `require`","Fragments":["assertion.","tip!"]},{"Key":"am new","Fragments":["to"]},{"Key":"new to","Fragments":["scala","me)","Scala,","Scala","scala!","Scala,","scala","Scala","Scala","Scala","Scala","Scala","scala,","regular","Scala.","Scala,","scala,","Scala","Scala"]},{"Key":"to scala","Fragments":["so","so"]},{"Key":"scala so","Fragments":["just","i"]},{"Key":"so just","Fragments":["familiarising"]},{"Key":"just familiarising","Fragments":["with"]},{"Key":"familiarising with","Fragments":["it."]},{"Key":"with it.","Fragments":["I","Pretty","It"]},{"Key":"it. I","Fragments":["don't","originally","finally","liked","think","didn't"]},{"Key":"don't think","Fragments":["there","that","there's","this","it","regular","you","my","regex","it","checking","I","I'm"]},{"Key":"think there","Fragments":["would","is","were","has"]},{"Key":"there would","Fragments":["be","be","be"]},{"Key":"be any","Fragments":["performance","variable,","collection."]},{"Key":"any performance","Fragments":["improvement","cost"]},{"Key":"performance improvement","Fragments":["from"]},{"Key":"improvement from","Fragments":["using"]},{"Key":"from using","Fragments":["char","bytes"]},{"Key":"using char","Fragments":["arrays"]},{"Key":"char arrays","Fragments":["compared"]},{"Key":"arrays compared","Fragments":["to"]},{"Key":"compared to","Fragments":["strings","the","the","others","version"]},{"Key":"to strings","Fragments":["so","in"]},{"Key":"strings so","Fragments":["taking"]},{"Key":"so taking","Fragments":["that"]},{"Key":"taking that","Fragments":["out."]},{"Key":"that out.","Fragments":["Looks"]},{"Key":"out. Looks","Fragments":["like"]},{"Key":"Looks like","Fragments":["all","a"]},{"Key":"like all","Fragments":["the","the"]},{"Key":"the functions","Fragments":["`count`,","are","`count`","and","provided","that"]},{"Key":"functions `count`,","Fragments":["`contains`,"]},{"Key":"`count`, `contains`,","Fragments":["`zip`,"]},{"Key":"`contains`, `zip`,","Fragments":["`map`"]},{"Key":"`zip`, `map`","Fragments":["are"]},{"Key":"`map` are","Fragments":["defined"]},{"Key":"are defined","Fragments":["for"]},{"Key":"defined for","Fragments":["`String`"]},{"Key":"for `String`","Fragments":["too"]},{"Key":"`String` too","Fragments":["so"]},{"Key":"too so","Fragments":["switching"]},{"Key":"so switching","Fragments":["to"]},{"Key":" Instead","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of:","of","of","of","of"]},{"Key":"Instead of","Fragments":["the","using","line","using","\"takeRight","a","merging","`0-9a-z`","`w","```.length","reducing,","```getOrElse```","having","\"manually\"","comparing","if-else","only","String","while","a","\"Tuple2[Char,Char]\"","creating","mapping","`class","\"message.filter","`if","throwing","Java-like","`match`","creating","```if"]},{"Key":"the ```throw```","Fragments":["clauses"]},{"Key":"```throw``` clauses","Fragments":["you"]},{"Key":"clauses you","Fragments":["could"]},{"Key":"the scala","Fragments":["```require```","compiler","way...","way.","libs","libs","built","way"]},{"Key":"scala ```require```","Fragments":["function."]},{"Key":"am curious","Fragments":["why","why","why"]},{"Key":"curious why","Fragments":["you","you","you","your"]},{"Key":"why you","Fragments":["changed","initialize","prefer","might","choose","need","chose","used","chose","use","chose","use","didn't"]},{"Key":"you changed","Fragments":["the"]},{"Key":"changed the","Fragments":["```nucleotides```","equals","nucleotides","var's"]},{"Key":"the ```nucleotides```","Fragments":["string"]},{"Key":"```nucleotides``` string","Fragments":["and"]},{"Key":"string and","Fragments":["the","returns"]},{"Key":"and the","Fragments":["```strand```","usual","nested","other","number","state","name","colon","like","first","like","like","type","function","`count`","if/else","`_`","order","effective","caller","possible","validation","extra","internal","like.","usage","other","result","`isQuestion`","internal","type","return","`if`","count","last","data","tail-recursive","various","functional","accumulator.","\"::\"","\"::\"","non-letter","most","return","\".tupled\"","like.","usual","shortest","guards","`AllCaps`","exception"]},{"Key":"the ```strand```","Fragments":["string"]},{"Key":"```strand``` string","Fragments":["to"]},{"Key":"string to","Fragments":["char","a"]},{"Key":"to char","Fragments":["arrays?"]},{"Key":"char arrays?","Fragments":["```String```"]},{"Key":"arrays? ```String```","Fragments":["has"]},{"Key":"```String``` has","Fragments":["a"]},{"Key":"has a","Fragments":["count","mapValues","`require`","`withDefaultValue`","method","unique","private","side","better","letter,","letter","return","return","way","response"]},{"Key":"a count","Fragments":["function","for"]},{"Key":"count function","Fragments":["as","could","to","instead","in"]},{"Key":"function as","Fragments":["well.","it","argument","your","a","documentation,","it"]},{"Key":"as well.","Fragments":["Was","Specifically,","Pretty","It","\"recurse\""]},{"Key":"well. Was","Fragments":["this"]},{"Key":"Was this","Fragments":["a"]},{"Key":"this a","Fragments":["performance","question?","very","little,","lot","bit"]},{"Key":"a performance","Fragments":["optimization?","hit?","bottleneck."]},{"Key":" Nice!","Fragments":["Thanks","You","You"]},{"Key":"Nice! Thanks","Fragments":["for"]},{"Key":"You shouldn't","Fragments":["need","overuse"]},{"Key":"shouldn't need","Fragments":["to","to"]},{"Key":"to create","Fragments":["the","an","the","both","a","a","objects","a","an","a","at","a","a","(and","that","different","that","a","a","a"]},{"Key":"create the","Fragments":["digitToInt","value","apply"]},{"Key":"the digitToInt","Fragments":["map."]},{"Key":"digitToInt map.","Fragments":["Char.asDigit"]},{"Key":"map. Char.asDigit","Fragments":["works"]},{"Key":"Char.asDigit works","Fragments":["for"]},{"Key":"works for","Fragments":["the","you.","single","prime","Seqs","strings","small","two","this"]},{"Key":"the conversion,","Fragments":["you"]},{"Key":"conversion, you","Fragments":["just"]},{"Key":"you just","Fragments":["need","imported","say","use","create","have"]},{"Key":"just need","Fragments":["to"]},{"Key":"to deal","Fragments":["with","with","with","with","with","w/","with"]},{"Key":"deal with","Fragments":["the","pairs.","the","the","the","Collection","the"]},{"Key":"case that","Fragments":["the","the","threw"]},{"Key":"the char","Fragments":["value"]},{"Key":"char value","Fragments":["is"]},{"Key":"value is","Fragments":["outside","given","being","the"]},{"Key":"is outside","Fragments":["of"]},{"Key":"outside of","Fragments":["the","pattern","`hey`","hey(),","hey()","the","the"]},{"Key":"the range","Fragments":["of","of"]},{"Key":"range of","Fragments":["valid","chars"]},{"Key":"of valid","Fragments":["hex."]},{"Key":"can use","Fragments":["a","`.count`","Scala's","this","another's","`message.exists(_.isUpper)`","the","'A'","`map.updated(key,","the","`identity`","`identity`.","zip","an","pattern","all","```(0","`==`.","the","in","folds","```aggregate```","`someString.sorted`","the","on","eta-reduction","\"require\"","gotOrElse","pattern","```require```","```Map```'s","```identity```","default","Predef's","anything","a","map's","to","```equalsIgnoreCase```","`count","```find```.","Predef's","Char.asDigit.","the","`filter`","a","``split``","Scala","all","a"]},{"Key":"a ```lazy","Fragments":["val```","val```"]},{"Key":"```lazy val```","Fragments":["instead","so",".","as"]},{"Key":"val``` instead","Fragments":["of"]},{"Key":"a ```def```","Fragments":["for","means"]},{"Key":"```def``` for","Fragments":["```nucleotideCounts```"]},{"Key":"for ```nucleotideCounts```","Fragments":["thus"]},{"Key":"```nucleotideCounts``` thus","Fragments":["the"]},{"Key":"thus the","Fragments":["value"]},{"Key":"the value","Fragments":["will","of","map.","in","declaration","of","of","of","is","of","the","doesn't","of","for","to","of","of","`checksum(word)`"]},{"Key":"value will","Fragments":["be"]},{"Key":"be computed","Fragments":["once.","more","once?"]},{"Key":"This is","Fragments":["my","quite","not","actually","a","nice","because","the","a","the","interesting,","too","my","bit","again","great,","an","more","the","the","definitely","so","my","one","a","definitely","very","done","a","a","my","because","Scala","however","half-way","largely","a","just","sort","definitely","a","mostly","a","not","probably","a","my","probably","definitely","probably","why"]},{"Key":"is my","Fragments":["final","new","favorite","first","solution,","first","first","first","first","favorite."]},{"Key":"my final","Fragments":["version."]},{"Key":"final version.","Fragments":["I"]},{"Key":"version. I","Fragments":["think"]},{"Key":"think I","Fragments":["got","wrote","must","found","have","could've","would","remembered","must","should","need","started"]},{"Key":"I got","Fragments":["things","some","what","rid","mad","into","rid","too","to","a","it","around","everything","the","stuck","fixated","confused","your","for"]},{"Key":"got things","Fragments":["readable"]},{"Key":"things readable","Fragments":["and"]},{"Key":"and reasonably","Fragments":["efficient."]},{"Key":"reasonably efficient.","Fragments":["```List.diff```"]},{"Key":"efficient. ```List.diff```","Fragments":["was"]},{"Key":"```List.diff``` was","Fragments":["something"]},{"Key":"was something","Fragments":["I'd","I","else"]},{"Key":"something I'd","Fragments":["never"]},{"Key":"I'd never","Fragments":["used"]},{"Key":"never used","Fragments":["before,","twice\")","twice.\"","twice,"]},{"Key":"used before,","Fragments":["but"]},{"Key":"before, but","Fragments":["met","not","I"]},{"Key":"but met","Fragments":["my"]},{"Key":"met my","Fragments":["needs"]},{"Key":"my needs","Fragments":["nicely."]},{"Key":"needs nicely.","Fragments":["I"]},{"Key":"nicely. I","Fragments":["got"]},{"Key":"got some","Fragments":["nice"]},{"Key":"some nice","Fragments":["ideas","error"]},{"Key":"nice ideas","Fragments":["from"]},{"Key":"ideas from","Fragments":["looking","@webster"]},{"Key":"from looking","Fragments":["at","at"]},{"Key":"looking at","Fragments":["others'","other","the","another","abstracting","some","@geovanni's","this","other"]},{"Key":"at others'","Fragments":["code,"]},{"Key":"others' code,","Fragments":["too."]},{"Key":" TIL:","Fragments":["The","a"]},{"Key":"TIL: The","Fragments":["identity"]},{"Key":"The identity","Fragments":["built"]},{"Key":"identity built","Fragments":["in"]},{"Key":"built in","Fragments":["function.","method","method","helper"]},{"Key":"I see,","Fragments":["thanks.","thanks"]},{"Key":"see, thanks.","Fragments":["Just"]},{"Key":"thanks. Just","Fragments":["updated"]},{"Key":"Just updated","Fragments":["and"]},{"Key":"updated and","Fragments":["re-submitted."]},{"Key":" `==`","Fragments":["and"]},{"Key":"`==` and","Fragments":["`!=`"]},{"Key":"and `!=`","Fragments":["defined"]},{"Key":"`!=` defined","Fragments":["in"]},{"Key":"defined in","Fragments":["Any,","the"]},{"Key":"in Any,","Fragments":["root"]},{"Key":"Any, root","Fragments":["of"]},{"Key":"root of","Fragments":["the"]},{"Key":"Scala class","Fragments":["hierarchy."]},{"Key":"class hierarchy.","Fragments":["So"]},{"Key":"hierarchy. So","Fragments":["everything"]},{"Key":"So everything","Fragments":["that"]},{"Key":"everything that","Fragments":["has","wasn't"]},{"Key":"that has","Fragments":["got","a","some"]},{"Key":"has got","Fragments":["`^`"]},{"Key":"got `^`","Fragments":["will"]},{"Key":"`^` will","Fragments":["have"]},{"Key":"will have","Fragments":["`!=`,","to","to","access"]},{"Key":"have `!=`,","Fragments":["but"]},{"Key":"`!=`, but","Fragments":["not"]},{"Key":"but not","Fragments":["vice","value","on","take.","implicit","extremely","particularly","that"]},{"Key":"not vice","Fragments":["versa."]},{"Key":"vice versa.","Fragments":["Compute"]},{"Key":"versa. Compute","Fragments":["is"]},{"Key":"Compute is","Fragments":["not"]},{"Key":"not generic","Fragments":["anyway."]},{"Key":"generic anyway.","Fragments":["And"]},{"Key":"anyway. And","Fragments":["are"]},{"Key":"And are","Fragments":["you"]},{"Key":"are you","Fragments":["certain","gaining","were","suggesting","checking"]},{"Key":"you certain","Fragments":["a"]},{"Key":"certain a","Fragments":["bitwise"]},{"Key":"a bitwise","Fragments":["operation,"]},{"Key":"bitwise operation,","Fragments":["type"]},{"Key":"operation, type","Fragments":["casting"]},{"Key":"type casting","Fragments":["twice"]},{"Key":"casting twice","Fragments":["and"]},{"Key":"twice and","Fragments":["then","also"]},{"Key":"then an","Fragments":["inequality"]},{"Key":"an inequality","Fragments":["test"]},{"Key":"inequality test","Fragments":["will"]},{"Key":"test will","Fragments":["be","test"]},{"Key":"be equally","Fragments":["efficient"]},{"Key":"equally efficient","Fragments":["with"]},{"Key":"efficient with","Fragments":["just"]},{"Key":"just doing","Fragments":["inequality"]},{"Key":"doing inequality","Fragments":["test?"]},{"Key":"inequality test?","Fragments":["But"]},{"Key":"test? But","Fragments":["it's"]},{"Key":"But it's","Fragments":["your"]},{"Key":"it's your","Fragments":["code,"]},{"Key":"your code,","Fragments":["do","but","making"]},{"Key":"code, do","Fragments":["whatever"]},{"Key":"do whatever","Fragments":["that"]},{"Key":"whatever that","Fragments":["works"]},{"Key":"that works","Fragments":["for","for","now"]},{"Key":"for you.","Fragments":[":-)"]},{"Key":"also think","Fragments":["about"]},{"Key":"think about","Fragments":["merging","making","defining","Map.empty[...]?","it!","the","it?","refactor","what"]},{"Key":"about merging","Fragments":["`map`"]},{"Key":"merging `map`","Fragments":["and"]},{"Key":"`map` and","Fragments":["`count`,","`toMap`","`filter`.","`sum`?","`flatMap`","`sum`.","`sum`"]},{"Key":"and `count`,","Fragments":["or"]},{"Key":"`count`, or","Fragments":["using"]},{"Key":"or using","Fragments":["a","```Seq```"]},{"Key":"using a","Fragments":["view.","cache?","trait","single","mutable","type","powerful","well-named","buffer/side","```Range```","companion","```foldLeft```.","for-comprehension:","`ListBuffer`?","big","support","matched","`for`","regex","SortedMap","regular","regex.","for-comprehension","lots","\"var\".","cache!","wildcard","`SortedMap`.","regex,","separate","flatmap.","```var```)","simple","new","case","default","for","\"{","for-comprehension?","the","fold,","mutable","regex","var","```map```"]},{"Key":"a view.","Fragments":["Right"]},{"Key":"view. Right","Fragments":["now,"]},{"Key":"Right now,","Fragments":["you're"]},{"Key":"now, you're","Fragments":["iterating"]},{"Key":"you're iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["sequences","collection?","a","a","them","the"]},{"Key":"over sequences","Fragments":["twice"]},{"Key":"sequences twice","Fragments":["(three"]},{"Key":"twice (three","Fragments":["times,"]},{"Key":"(three times,","Fragments":["counting"]},{"Key":"times, counting","Fragments":["zip)."]},{"Key":"My reasoning","Fragments":["for"]},{"Key":"reasoning for","Fragments":["using"]},{"Key":"for using","Fragments":["the"]},{"Key":"using the","Fragments":["XOR","direct","[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","`toList`","partial","```for(...)","companion","method","Scala","scala","scala","zip","length","`find`","same","count","for","underscore","underscore","immutable","```count```","methods","match","`_1`","`exists(p:","[`count`](http://www.scala-lang.org/api/current/#scala.collection.Iterable)","built-in"]},{"Key":"the XOR","Fragments":["operator"]},{"Key":"XOR operator","Fragments":["is"]},{"Key":"operator is","Fragments":["to"]},{"Key":"be able","Fragments":["to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"able to","Fragments":["calculate","pack","use","get","do","remove","use","see","compare","exhaust","generate","use","figure","simplify","say","call","call"]},{"Key":"calculate the","Fragments":["hamming","counts","value","prime","same","next"]},{"Key":"the hamming","Fragments":["distance","distance"]},{"Key":"hamming distance","Fragments":["in","between"]},{"Key":"distance in","Fragments":["bits"]},{"Key":"in bits","Fragments":["for"]},{"Key":"bits for","Fragments":["any"]},{"Key":"for any","Fragments":["given","methods","instance"]},{"Key":"any given","Fragments":["basic"]},{"Key":"given basic","Fragments":["type"]},{"Key":"basic type","Fragments":["sequence"]},{"Key":"type sequence","Fragments":["(integer,"]},{"Key":"sequence (integer,","Fragments":["char,"]},{"Key":"(integer, char,","Fragments":["byte"]},{"Key":"char, byte","Fragments":["arrays/lists"]},{"Key":"byte arrays/lists","Fragments":["etc.)"]},{"Key":"arrays/lists etc.)","Fragments":["Of"]},{"Key":"etc.) Of","Fragments":["course"]},{"Key":"Of course","Fragments":["it's","opinions","it","one"]},{"Key":"course it's","Fragments":["out"]},{"Key":"it's out","Fragments":["of"]},{"Key":"out of","Fragments":["scope","empties","me.","interest","curiosity:","hand.","curiosity:","the","the","scope?)"]},{"Key":"of scope","Fragments":["for"]},{"Key":"scope for","Fragments":["this"]},{"Key":"for this","Fragments":["particular","program","solution.","case,","and","problem","nesting,","version","exercise","exercise,","task","using","when","exercise.","geometric","short","kind","one","task","one.","solution","code;","decision?","solution.","kind","part","-","kind","(http://exercism.io/submissions/6695633118904ce991b9383a3a898155),","solution.","particular","exercism.","exercise.","exercise.","exercise."]},{"Key":"this particular","Fragments":["example","scenario.","exercise"]},{"Key":"particular example","Fragments":["but"]},{"Key":"example but","Fragments":["I"]},{"Key":"think performancewise,","Fragments":["it's"]},{"Key":"performancewise, it's","Fragments":["equally"]},{"Key":"it's equally","Fragments":["efficient."]},{"Key":" Do","Fragments":["you","you","you","you","you","not","need","you","you","you","you","the"]},{"Key":"Do you","Fragments":["think","know","know","need","really","think","think","know","want","see","see","know","have","know"]},{"Key":"you think","Fragments":["that","that","of","is","this","it","about","of","that's","about","you","about","of","is","of"]},{"Key":"think that","Fragments":["changing","dropping","they","this","non-coder","it","the","would","you","is","the","it","in","you","would","choice"]},{"Key":"that changing","Fragments":["it"]},{"Key":"changing it","Fragments":["would"]},{"Key":"it would","Fragments":["make","be","be","allow","be","matter).","be","be","also","be","be","be","be","be","be","irk","come","be","be","be","be"]},{"Key":"would make","Fragments":["it","code","it","it","the","it","the","it","it","regexes","```nucleotideCounts```"]},{"Key":"it more","Fragments":["readable","lisp","visible","efficient?","readable","readable","FP","explicit","like","natural","readable","readable","specific","readable?","like","or"]},{"Key":"readable or","Fragments":["expressive?"]},{"Key":"or expressive?","Fragments":["If"]},{"Key":"expressive? If","Fragments":["so,"]},{"Key":"If so,","Fragments":["I","it"]},{"Key":"so, I","Fragments":["can"]},{"Key":"can change","Fragments":["it.","`number.replaceAll(\"\"\"[^\\d]\"\"\",","`name`"]},{"Key":" That's","Fragments":["very","a","interesting.","a","true","another","a","quite"]},{"Key":"That's very","Fragments":["interesting","useful"]},{"Key":"very interesting","Fragments":["way","point."]},{"Key":"interesting way","Fragments":["to"]},{"Key":"to test","Fragments":["if","just","each","the","equilateral,","if","(if","it.","for"]},{"Key":"test if","Fragments":["two","`a"]},{"Key":"if two","Fragments":["chars","words","words"]},{"Key":"two chars","Fragments":["aren't","not"]},{"Key":"chars aren't","Fragments":["equal"]},{"Key":"aren't equal","Fragments":[":-)"]},{"Key":"Very concise,","Fragments":["although"]},{"Key":"concise, although","Fragments":["I","you"]},{"Key":"although I","Fragments":["agree","see","thought","had"]},{"Key":"I agree","Fragments":["with","that","line","with","it's","w/","that","that","with","that","that","that","about","it's","on","that","this",":-)"]},{"Key":"with @danielle","Fragments":["that"]},{"Key":"@danielle that","Fragments":["the"]},{"Key":"the number","Fragments":["thing","function","parameter","method.","into","of","of","of","of","of","at","of","in","of","method.","of","of","of","of","of","of","of"]},{"Key":"number thing","Fragments":["is"]},{"Key":"thing is","Fragments":["highly","there,","this","to","that"]},{"Key":"is highly","Fragments":["confusing!"]},{"Key":" Why","Fragments":["not","do","do","narrow","```sortBy```","parenthesis","not","do","do","not","not","would","do","do","are","not","dod","not","the","not","don't","does","not:","not","do","do","change","not","is","do","are","do","would","not"]},{"Key":"Why not","Fragments":["just","check","just","simply","just","make","just","define","have","just","use","use","just","just","just","sort","just","optimize","stay"]},{"Key":"just use","Fragments":["filter(_.isDigit)","a","Option[Int]","the","bitshifting","an","empty","power","`\\\\w`.","`word.sorted`?","this?","types","the","\"def","a","the","here",".alphanumeric","them.","if-then?!","it","`sliding`.","\"(Char,Char)\"?","a","a","```containsSlice```","`containsSlice`.","`expression`","camel-case","\"require\"?","orElse-getOrElse","it","`map`","```map```","the","the"]},{"Key":"use filter(_.isDigit)","Fragments":["?"]},{"Key":"don't understand","Fragments":["how","that","how"]},{"Key":"understand how","Fragments":["the","you"]},{"Key":"how the","Fragments":["number","name","`ListBuffer`","code","`match`","roman","library","map()","regexes","sorted","String"]},{"Key":"number function","Fragments":["works,"]},{"Key":"function works,","Fragments":["it"]},{"Key":"works, it","Fragments":["recursively"]},{"Key":"it recursively","Fragments":["calls"]},{"Key":"recursively calls","Fragments":["its"]},{"Key":"calls its","Fragments":["self"]},{"Key":"its self","Fragments":["to"]},{"Key":"self to","Fragments":["get"]},{"Key":"the initial","Fragments":["1?","value","empty","word"]},{"Key":"like how","Fragments":["regexp","un-intuitive","you","you","you","it","the","it","`isQuestion`","this"]},{"Key":"how regexp","Fragments":["can"]},{"Key":"regexp can","Fragments":["be"]},{"Key":"used a","Fragments":["method","regex","map","comprehension,","recursive"]},{"Key":"method to","Fragments":["extract","strip","only","count","work","clarify","check","be","not","use","the","deal","prevent","construct"]},{"Key":"to extract","Fragments":["the","A,","length","them","things.","the"]},{"Key":"extract the","Fragments":["first","guard","values."]},{"Key":"first group,","Fragments":["good"]},{"Key":"group, good","Fragments":["to"]},{"Key":"good to","Fragments":["know!","my!","me.","me.","be","me.","me","me!","know","me!"]},{"Key":"think i","Fragments":["get","get"]},{"Key":"i get","Fragments":["it,","it"]},{"Key":"get it,","Fragments":["the"]},{"Key":"it, the","Fragments":["confusion","underscore"]},{"Key":"the confusion","Fragments":["came"]},{"Key":"confusion came","Fragments":["from"]},{"Key":"came from","Fragments":["overloading"]},{"Key":"from overloading","Fragments":["the"]},{"Key":"overloading the","Fragments":["name"]},{"Key":"the name","Fragments":["of","really","consisted","generation","will","\"FilterFunction\",","of","\"matches\",","I","consisted","`a`","of","is"]},{"Key":"name of","Fragments":["the","Bob's","the","parameterless","the","Bob's"]},{"Key":"number parameter","Fragments":["inside"]},{"Key":"parameter inside","Fragments":["the"]},{"Key":"inside the","Fragments":["number","code!","class","`wordCount`","```object```","code?","correctNumber","worker.","singleton","`number()`","count","`Allergen`","filter","```case```","function"]},{"Key":"number method.","Fragments":["I'd","You"]},{"Key":"method. I'd","Fragments":["call"]},{"Key":"I'd call","Fragments":["it"]},{"Key":"it something","Fragments":["else.","like","similar?"]},{"Key":" Tight.","Fragments":["Have"]},{"Key":"Tight. Have","Fragments":["a"]},{"Key":"Have a","Fragments":["look","look","look","private","look"]},{"Key":"at flatMap,","Fragments":["though,"]},{"Key":"flatMap, though,","Fragments":["that"]},{"Key":"though, that","Fragments":["may"]},{"Key":"that may","Fragments":["give","be","be","be","have","be"]},{"Key":"may give","Fragments":["you"]},{"Key":"you what","Fragments":["you"]},{"Key":"you want","Fragments":["in","to","for","to).","much","to","to.","a","to,","to","to","to","another","to","it","you","to","to","to,","to","to","to","you","the","with","you","an","to","for","to"]},{"Key":"want in","Fragments":["fewer"]},{"Key":"in fewer","Fragments":["steps."]},{"Key":" @reagan","Fragments":["good"]},{"Key":"@reagan good","Fragments":["point,"]},{"Key":"good point,","Fragments":["didn't","thanks","thanks","thanks","let"]},{"Key":"point, didn't","Fragments":["notice"]},{"Key":"didn't notice","Fragments":["that","it."]},{"Key":" java.util.Calendar","Fragments":["is"]},{"Key":"java.util.Calendar is","Fragments":["imported"]},{"Key":"is imported","Fragments":["so"]},{"Key":"imported so","Fragments":["technically"]},{"Key":"so technically","Fragments":["you"]},{"Key":"technically you","Fragments":["don't"]},{"Key":"don't have","Fragments":["to","to","to","to","any","to","to","a","to","a","any","much","any","to","too","to","to","to","to","to","to","to","a","to,","an"]},{"Key":"to fully","Fragments":["qualify"]},{"Key":"fully qualify","Fragments":["it."]},{"Key":" Identical","Fragments":["to"]},{"Key":"Identical to","Fragments":["previous"]},{"Key":"to previous","Fragments":["problem","version"]},{"Key":"previous problem","Fragments":["with"]},{"Key":"problem with","Fragments":["8s","\\p{Punct}","developing"]},{"Key":"with 8s","Fragments":["changed"]},{"Key":"8s changed","Fragments":["to"]},{"Key":"changed to","Fragments":["3s."]},{"Key":" Yes,","Fragments":["good","foldX","though","As","you're","pls","good","I","the","match","it","(tail-)","it","Scala","that"]},{"Key":"Yes, good","Fragments":["idea","point!"]},{"Key":"good idea","Fragments":["to","to","to","and","with","to","to"]},{"Key":"idea to","Fragments":["insert","sort","use","use","make","use","use","use","change","use","put","use","do","have"]},{"Key":"to insert","Fragments":["regex"]},{"Key":"insert regex","Fragments":["into"]},{"Key":"regex into","Fragments":["methods!"]},{"Key":"into methods!","Fragments":["Thx"]},{"Key":" Although","Fragments":["this","counting","this","completely"]},{"Key":"Although this","Fragments":["answer","problem"]},{"Key":"this answer","Fragments":["is"]},{"Key":"answer is","Fragments":["probably"]},{"Key":"probably fully","Fragments":["working,"]},{"Key":"fully working,","Fragments":["I"]},{"Key":"working, I","Fragments":["find"]},{"Key":"find it","Fragments":["a","helps","strange","useful.","more","much","easier","easy","a","rather","easier","helps"]},{"Key":"it a","Fragments":["bit","few","better","bit","little","shot","little","member","`val`","bit","bit","habit","variable","val","companion","bit","lot.","try","little.","shot","different","nice","bit,","val","better","step","little","try?","bit","member"]},{"Key":"bit difficult","Fragments":["to","to","to"]},{"Key":"understand what","Fragments":["the","happen","that","is","this","it's","exactly","the","is"]},{"Key":"the conditions","Fragments":["are.","in","with","in","with","Bobs"]},{"Key":"conditions are.","Fragments":["If"]},{"Key":"are. If","Fragments":["you"]},{"Key":"you come","Fragments":["back","from"]},{"Key":"to this","Fragments":["code","later.","exercice.","problem.","over","problem,","at","exercise"]},{"Key":"a month","Fragments":["time,"]},{"Key":"month time,","Fragments":["you'll"]},{"Key":"time, you'll","Fragments":["probably"]},{"Key":"you'll probably","Fragments":["have","have","have","be"]},{"Key":"probably have","Fragments":["to","situations","to","inlined","those","a","the"]},{"Key":"a few","Fragments":["times","rare","more","suggestions","different","characters","bits","things:","variable","suggestions","potential","bugs","days","simple"]},{"Key":"few times","Fragments":["to"]},{"Key":"times to","Fragments":["figure"]},{"Key":"figure out","Fragments":["what","the","what","which","the","how","how","how","the","what's","how","what","how"]},{"Key":"out what","Fragments":["is","I","I","it"]},{"Key":"Maybe you","Fragments":["could","can","could"]},{"Key":"could extract","Fragments":["those","`\"ATCG\"`","clearly-named","some","the","your"]},{"Key":"extract those","Fragments":["regular"]},{"Key":"those regular","Fragments":["expressions"]},{"Key":"expressions into","Fragments":["methods"]},{"Key":"into methods","Fragments":["that"]},{"Key":"methods that","Fragments":["explain","are","I","make","take","make","operate"]},{"Key":"that explain","Fragments":["what"]},{"Key":"explain what","Fragments":["they"]},{"Key":"what they","Fragments":["are","actually","are,","really","are","really"]},{"Key":"are matching","Fragments":["for."]},{"Key":"Very cool.","Fragments":["I"]},{"Key":"cool. I","Fragments":["forgot"]},{"Key":"I forgot","Fragments":["about","to","to","```name_assigned","to","to","about"]},{"Key":"forgot about","Fragments":["the","`last`.","list"]},{"Key":"the `count`","Fragments":["method.","function","method","function","function"]},{"Key":"I found","Fragments":["way","it","one:","using","over","aesthetically","it","through","a","a","Stream[_]","Scala's","out","[Scala","some","it","a","out"]},{"Key":"found way","Fragments":["to"]},{"Key":"it immutable","Fragments":["and"]},{"Key":"immutable and","Fragments":["still","though"]},{"Key":"and still","Fragments":["readable","satisfies","return"]},{"Key":"still readable","Fragments":["and"]},{"Key":"and quite","Fragments":["easy","easy"]},{"Key":"quite easy","Fragments":["to","to"]},{"Key":"understand -","Fragments":["by"]},{"Key":"- by","Fragments":["using"]},{"Key":"using foldLeft!","Fragments":["(it"]},{"Key":"foldLeft! (it","Fragments":["is"]},{"Key":"(it is","Fragments":["something","a"]},{"Key":"is something","Fragments":["new","you"]},{"Key":"something new","Fragments":["to","from","they"]},{"Key":" Article","Fragments":["that"]},{"Key":"Article that","Fragments":["explains"]},{"Key":"that explains","Fragments":["it"]},{"Key":"explains it","Fragments":["clearly:"]},{"Key":"Yes, foldX","Fragments":["is"]},{"Key":"foldX is","Fragments":["definitely"]},{"Key":"is definitely","Fragments":["among","a","a","more","a","a","orders"]},{"Key":"definitely among","Fragments":["the"]},{"Key":"among the","Fragments":["collection"]},{"Key":"the collection","Fragments":["functions","api.","function","sum","style","function"]},{"Key":"functions you","Fragments":["should","might","should"]},{"Key":"you should","Fragments":["know!","not","talk","make","look","basically","take","move","remove","really","forget","know","have","find","only","not","always","not","be","reconsider","also","decide","name","not","consider","prefer","use","type","not","bear","rewrite","not","not","be","mark","clone","check","avoid","not","not","be","be"]},{"Key":"go for","Fragments":["max","it","the","better","the","absolute","the","the","readability","pattern"]},{"Key":"for max","Fragments":["efficiency"]},{"Key":"max efficiency","Fragments":["you"]},{"Key":"efficiency you","Fragments":["might","could"]},{"Key":"consider to","Fragments":["use","check","simply","turn","have"]},{"Key":"What is","Fragments":["this","missing","this","\"##\"","actually","this","the","missing","the","the","so","missing","the","also"]},{"Key":"is this","Fragments":["def","misleading?","```var","old","bad?...","magic","check","idiomatic","spec?","the","4"]},{"Key":"this def","Fragments":["count()"]},{"Key":"def count()","Fragments":["for?"]},{"Key":"Perhaps just","Fragments":["use"]},{"Key":"simple asterisk","Fragments":["*"]},{"Key":"asterisk *","Fragments":["in"]},{"Key":"* in","Fragments":["your"]},{"Key":"in your","Fragments":["regex?","second","function","solution.","case","case","code?","solution?","case","case::","`compute`","map","isShouting()","recursive","code","case","solution)","case,","approach.","findings","case-clauses.","regex","case-clauses","pattern","if","version:","last","code.","code.","list"]},{"Key":"your regex?","Fragments":["Avoid"]},{"Key":"regex? Avoid","Fragments":["anything"]},{"Key":"Avoid anything","Fragments":["that"]},{"Key":"anything that","Fragments":["makes","somehow"]},{"Key":"that makes","Fragments":["readers","clear","sense","your","exactly","the","the","any","readers"]},{"Key":"makes readers","Fragments":["think","think"]},{"Key":"readers think","Fragments":["more","less"]},{"Key":"think more","Fragments":["than"]},{"Key":"than necessary!","Fragments":[":-)"]},{"Key":"would define","Fragments":["nucleotideMap"]},{"Key":"define nucleotideMap","Fragments":["in"]},{"Key":"nucleotideMap in","Fragments":["the"]},{"Key":"the companion","Fragments":["object","object","object?","object","object).","object.","Object","object","object,","object","object.","object","object","object!","object).","object,","object.","object","object","object.","object.","object","object","object,","object","object","object"]},{"Key":"companion object","Fragments":["(as","of","is","b/c","(as","of","so","suggests","to","suggests","if","and","as","here.","and","(of","of","for","you","are","(and","(so","so","here?"]},{"Key":"object (as","Fragments":["it","they","it"]},{"Key":"(as it","Fragments":["is","is"]},{"Key":"actually a","Fragments":["constant).","\"line\"?","constant","work"]},{"Key":" I'm","Fragments":["struggling","not","a","curious,","pretty","just","just","not","attempting","in","a","just","aware","just","new","going","not","new","pretty","not","not","still","still","not","pretty","not","not","not","new","just","wondering","not","not","just"]},{"Key":"I'm struggling","Fragments":["to"]},{"Key":"struggling to","Fragments":["find"]},{"Key":"to find","Fragments":["the","another","some","some","a","the","the","a","and","general","out","the","more","regexes/patterns","out","type","out","a","the"]},{"Key":"find the","Fragments":["right","exists()","words","things","response.","Enumeration","tests","words","solution"]},{"Key":"the right","Fragments":["balance","place.","order.","datastructure","way","number","set","place","way","order?","thing,","place","starting","starting","track.","ballance,","balance"]},{"Key":"right balance","Fragments":["between","I"]},{"Key":"balance between","Fragments":["conciseness"]},{"Key":"between conciseness","Fragments":["and"]},{"Key":"conciseness and","Fragments":["readability."]},{"Key":"and readability.","Fragments":["The","In"]},{"Key":"readability. The","Fragments":["Scala"]},{"Key":"The Scala","Fragments":["docs","style","convention","convention","sources"]},{"Key":"Scala docs","Fragments":["outline"]},{"Key":"docs outline","Fragments":["a"]},{"Key":"outline a","Fragments":["much"]},{"Key":"a much","Fragments":["more","shorter","cleaner","smaller","simpler","more"]},{"Key":"much more","Fragments":["concise","Scala-y.","efficient.","directly.","concise","concise","readable,","readable","easily,","functional","performant.","readable.","like","succinct,","here.","descriptive.","scala-esque.","readable.","readable.","difficult","than","elegant","than","concise","declaratively"]},{"Key":"more concise","Fragments":["form","and","and","and","by","in","and","by","sorted","and","but","them"]},{"Key":"concise form","Fragments":["than"]},{"Key":"form than","Fragments":["I"]},{"Key":"than I","Fragments":["am"]},{"Key":"am used","Fragments":["to","to"]},{"Key":"used to","Fragments":["coming","make","the","keeping","it.","them)","the"]},{"Key":"to coming","Fragments":["from"]},{"Key":"coming from","Fragments":["Java,","the","ruby-land.","ruby","rounding","Java","a","fundamentally"]},{"Key":"from Java,","Fragments":["where"]},{"Key":"Java, where","Fragments":["everything"]},{"Key":"where everything","Fragments":["is"]},{"Key":"everything is","Fragments":["extremely"]},{"Key":"is extremely","Fragments":["verbose,"]},{"Key":"extremely verbose,","Fragments":["so"]},{"Key":"verbose, so","Fragments":["I'm"]},{"Key":"I'm probably","Fragments":["going"]},{"Key":"probably going","Fragments":["too","overboard"]},{"Key":"going too","Fragments":["far","far"]},{"Key":"too far","Fragments":["in","could","out"]},{"Key":"far in","Fragments":["the"]},{"Key":"other direction","Fragments":["now."]},{"Key":" Re:","Fragments":["Overloads,","the"]},{"Key":"Re: Overloads,","Fragments":["any"]},{"Key":"Overloads, any","Fragments":["particular"]},{"Key":"any particular","Fragments":["reason?","benefit","advantages"]},{"Key":"particular reason?","Fragments":["I"]},{"Key":"reason? I","Fragments":["go"]},{"Key":"I go","Fragments":["for"]},{"Key":"in situations","Fragments":["like"]},{"Key":"situations like","Fragments":["this"]},{"Key":"like this","Fragments":["cause","I","line:","one","because","sate","together","because","is","one","way!","and","a","in","solution","version","one"]},{"Key":"this cause","Fragments":["I"]},{"Key":"cause I","Fragments":["figure","add"]},{"Key":"I figure","Fragments":["if"]},{"Key":"figure if","Fragments":["I"]},{"Key":"I was","Fragments":["actually","working","evaluating.]","at","thinking","thinking","trying","just","wrong","pretty","unaware","looking","working","using","looking","practicing","aware","trying","exploring","trying","removing","not","wondering","not","trying","actually","also","thinking","really","trying","still","too","wondering","pretty","using","unsure","basically","looking","doing","thinking","having","looking","doing","a","trying","just","looking","returning","missing.","not","in","thinking","more","told","wondering"]},{"Key":"was actually","Fragments":["making","expecting","a"]},{"Key":"actually making","Fragments":["this"]},{"Key":"making this","Fragments":["Anagram","more"]},{"Key":"this Anagram","Fragments":["object"]},{"Key":"Anagram object","Fragments":["for"]},{"Key":"object for","Fragments":["some","you","the"]},{"Key":"for some","Fragments":["purpose","of","inspiration.","cleaner","reason","reason","pathological","weird","reason","tips"]},{"Key":"some purpose","Fragments":["I'd"]},{"Key":"purpose I'd","Fragments":["probably"]},{"Key":"I'd probably","Fragments":["have","say"]},{"Key":"have situations","Fragments":["where"]},{"Key":"situations where","Fragments":["I"]},{"Key":"where I","Fragments":["want","rename","work","think","left","do","extracted"]},{"Key":"test just","Fragments":["one"]},{"Key":"one value","Fragments":["without"]},{"Key":"value without","Fragments":["wrapping"]},{"Key":"without wrapping","Fragments":["it"]},{"Key":"wrapping it","Fragments":["in"]},{"Key":"a Seq.","Fragments":["Would","For"]},{"Key":"Seq. Would","Fragments":["you"]},{"Key":"Would you","Fragments":["have","find"]},{"Key":"have opted","Fragments":["for"]},{"Key":"opted for","Fragments":["a"]},{"Key":"a different","Fragments":["name","approach","result.","name,","name","approach","approach","library.","name","name","view."]},{"Key":"different name","Fragments":["for","instead","instead","altogether)."]},{"Key":"name for","Fragments":["the","```genericCheck```?","clarity","```isValidNumber```","a","a","the","decompose?","the","readability.","increased","the","`what`","roles,","your","readability.","readability.","it?"]},{"Key":"the non-Seq","Fragments":["version?"]},{"Key":" Your","Fragments":["solution","code","validity","tests","`QuestionPattern`","implementation","solution","comment","solution","implementation","reduceLeft","isSilent()","isShouting()","alternative","`match`","deDupedWords","digitPart","solution","solution","use","string","```transcription```","regexes","sort"]},{"Key":"looks good!","Fragments":["Nice","A"]},{"Key":"good! Nice","Fragments":["and"]},{"Key":"Nice and","Fragments":["short.","tight","concise","clean.","short!","short.","clean,","concise,"]},{"Key":"to give","Fragments":["variables","names","this","it","more","you"]},{"Key":"give variables","Fragments":["some"]},{"Key":"variables some","Fragments":["longer"]},{"Key":"some longer","Fragments":["names"]},{"Key":"longer names","Fragments":["to","help"]},{"Key":"names to","Fragments":["indicate","variables","make","a","each","the","improve"]},{"Key":"indicate what","Fragments":["they"]},{"Key":"they actually","Fragments":["mean"]},{"Key":"actually mean","Fragments":["(this"]},{"Key":"mean (this","Fragments":["algorithm"]},{"Key":"(this algorithm","Fragments":["is"]},{"Key":"is rather","Fragments":["short,"]},{"Key":"rather short,","Fragments":["but"]},{"Key":"short, but","Fragments":["you","not"]},{"Key":"but you","Fragments":["need","always","don't","do","cannot","can","pulled","does","can","get","worked","are","should","have","might","could"]},{"Key":"look up","Fragments":["for","what"]},{"Key":"up for","Fragments":["what"]},{"Key":"for what","Fragments":["\"lw\"","it","it","the","I","Bob","it"]},{"Key":"what \"lw\"","Fragments":["is"]},{"Key":"\"lw\" is","Fragments":["in"]},{"Key":"your second","Fragments":["\"matches\"","question:","question"]},{"Key":"second \"matches\"","Fragments":["method."]},{"Key":"\"matches\" method.","Fragments":["I"]},{"Key":"method. I","Fragments":["also"]},{"Key":"also try","Fragments":["to","a","to","to","to","to","a","a","a","to","using","a","the","a","out","a"]},{"Key":"try to","Fragments":["avoid","refactor","use","use","avoid","avoid","use","over","use","have","modify.","do","make","factor","do","use","use","fix","make","control","find","go","use","extract","reduce","do","avoid","use","define","do","keep","use","use","come","apply","use","use","use","use","use","improve","use","get","use","get","remain","type","reduce","fix","give","reuse","write","come","improve","have","avoid","give","rewrite","get","simplify.","\"stay","do","use","avoid","use"]},{"Key":"avoid overloading","Fragments":["methods."]},{"Key":"overloading methods.","Fragments":["But"]},{"Key":"methods. But","Fragments":["that's"]},{"Key":"But that's","Fragments":["personal","just","my"]},{"Key":"that's personal","Fragments":["preference","preference."]},{"Key":"personal preference","Fragments":[";)","after","would"]},{"Key":"I personally","Fragments":["think","like","would","think","am","find"]},{"Key":"personally think","Fragments":["that","it's"]},{"Key":"that dropping","Fragments":["dot"]},{"Key":"dropping dot","Fragments":["and"]},{"Key":"dot and","Fragments":["()"]},{"Key":"and ()","Fragments":["around","in"]},{"Key":"() around","Fragments":["the"]},{"Key":"around the","Fragments":["zip","`speech`","`hey`","functions","small","function","use","predicates"]},{"Key":"the zip","Fragments":["function","creates","function","method","left","function.","function."]},{"Key":"zip function","Fragments":["would","on"]},{"Key":"function would","Fragments":["make"]},{"Key":"make code","Fragments":["look","less","a"]},{"Key":"code look","Fragments":["better.","more"]},{"Key":"is quite","Fragments":["an","elegant.","messy.","readable","some","hard","readable","cool!","useful.","unlikely","good","complex:"]},{"Key":"quite an","Fragments":["elegant"]},{"Key":"an elegant","Fragments":["solution.","way","and"]},{"Key":"elegant solution.","Fragments":["Have"]},{"Key":"solution. Have","Fragments":["you"]},{"Key":"Have you","Fragments":["heard","considered","thought","considered","considered","considered","tried","tried","thought","tried","considered","considered"]},{"Key":"you heard","Fragments":["of"]},{"Key":"heard of","Fragments":["the"]},{"Key":"the [`require`](http://www.scala-lang.org/api/current/#scala.Predef$)","Fragments":["function"]},{"Key":"[`require`](http://www.scala-lang.org/api/current/#scala.Predef$) function","Fragments":["it"]},{"Key":"it could","Fragments":["be","be","be","make","live","be","be.","be,","be,","be","be","be.","be."]},{"Key":"the input","Fragments":["validation",":)","before","sequence","list","type","argument.","word","list.","is","conforms","list","seemed","as","into","strings:","word","string","first,","strings.","data","String","strings","parameter","to"]},{"Key":"input validation","Fragments":["a"]},{"Key":"validation a","Fragments":["bit"]},{"Key":"bit more","Fragments":["succinct.","about","complicated,","logical","efficiently.","interesting","readable.","informative","multilingual","readable","efficient:","readable","from","for","complex","complex","difficult,","semantic.","by","complex","natural?","about","sense.","readable","functional."]},{"Key":"more succinct.","Fragments":["Furthermore"]},{"Key":"succinct. Furthermore","Fragments":["you"]},{"Key":"might benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["the","a"]},{"Key":"the [`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map)","Fragments":["method"]},{"Key":"[`withDefaultValue`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map) method","Fragments":["of"]},{"Key":"method of","Fragments":["[`immutable.Map`](http://www.scala-lang.org/api/current/#scala.collection.immutable.Map).","companion","initializing"]},{"Key":"* There","Fragments":["is","is"]},{"Key":"There is","Fragments":["no","also","another","too","quite","this","a","no","a","even","```SortedMap```","```:+```","```require```","the","a","a","a","never","no"]},{"Key":"is no","Fragments":["need","zipWith","need","obvious","true","guarantee","need","need","definition),","need","global","sense"]},{"Key":"need for","Fragments":["`str3`","a","both","`_`","this!","`def","a","comment","the","null","a","the","`decDaysUntil`","defining","the","equals.","`if(a)","a","the","the","curly","`if","the","the","something","pattern","evalutating"]},{"Key":"for `str3`","Fragments":["function"]},{"Key":"* Don't","Fragments":["modify"]},{"Key":"Don't modify","Fragments":["`_str3`"]},{"Key":"modify `_str3`","Fragments":["inside"]},{"Key":"`_str3` inside","Fragments":["`newName`."]},{"Key":"inside `newName`.","Fragments":["Just"]},{"Key":"`newName`. Just","Fragments":["return"]},{"Key":"Just return","Fragments":["the"]},{"Key":"return the","Fragments":["new","necessary","original","combination","response","Map","nitpicking","same","last","Int","Hamming"]},{"Key":"new value.","Fragments":["You"]},{"Key":"value. You","Fragments":["can"]},{"Key":"can call","Fragments":["`reset`","`groupBy`","`forall`","\"number","the"]},{"Key":"call `reset`","Fragments":["whenever"]},{"Key":"`reset` whenever","Fragments":["you"]},{"Key":"whenever you","Fragments":["need","use"]},{"Key":"to assign","Fragments":["to","the"]},{"Key":"assign to","Fragments":["`_str3`"]},{"Key":"* make","Fragments":["`_str3`"]},{"Key":"make `_str3`","Fragments":["private"]},{"Key":"`_str3` private","Fragments":["and"]},{"Key":"private and","Fragments":["give"]},{"Key":"and give","Fragments":["it"]},{"Key":"give it","Fragments":["a","another","a","another","a","a","a","a"]},{"Key":"a better","Fragments":["label","name","Scala","way","judgement","approach?","name.","name","way","version.","name?","way","solution","way","name","way","way","one.","choice","way","name","one","track","solution","name)","linter","abstraction","name)","way","spec"]},{"Key":"better label","Fragments":["such"]},{"Key":"label such","Fragments":["as"]},{"Key":"such as","Fragments":["`currentName`","'-'","`map`","'result',","`Bob`'s","dynamically"]},{"Key":"your solution","Fragments":["could","is","somewhat","as","(`SortedMap(myDB.toSeq:_*)`),","is","is","is","by","does","I","looks","is","may","I","in","is","much","to"]},{"Key":"solution could","Fragments":["be","be","be"]},{"Key":"be made","Fragments":["way","more","private","immutable","much","more","to","clear","`val`","for","a"]},{"Key":"made way","Fragments":["more"]},{"Key":"way more","Fragments":["efficient","readable"]},{"Key":"more efficient","Fragments":["by","to","than","to","than","way.","(as","than","solution?","(once","too.","version","than","in"]},{"Key":"efficient by","Fragments":["using"]},{"Key":"the direct","Fragments":["formulaes"]},{"Key":"direct formulaes","Fragments":["for"]},{"Key":"formulaes for","Fragments":["the"]},{"Key":"the sumOfSquares","Fragments":["and"]},{"Key":"sumOfSquares and","Fragments":["squareOfSums"]},{"Key":"I wanted","Fragments":["Bob","here.","to","to","Bob","to","it","to","an","to","do","to","to","to","Bob","to","something"]},{"Key":"wanted Bob","Fragments":["to","to","to"]},{"Key":"Bob to","Fragments":["be","be","be"]},{"Key":"be open","Fragments":["to","to","to"]},{"Key":"open to","Fragments":["extension","other","extension","alternate","extension"]},{"Key":"to extension","Fragments":["but","but","but"]},{"Key":"extension but","Fragments":["closed","closed","closed"]},{"Key":"but closed","Fragments":["for","for","for"]},{"Key":"closed for","Fragments":["modification.","modification.","modification."]},{"Key":"for modification.","Fragments":["The","The","The"]},{"Key":"modification. The","Fragments":["behavior","behavior","behavior"]},{"Key":"The behavior","Fragments":["of","of","of"]},{"Key":"behavior of","Fragments":["Bob","Bob","`isAnagram`","Bob"]},{"Key":"of Bob","Fragments":["can","can","can"]},{"Key":"Bob can","Fragments":["be","be","be"]},{"Key":"be customized","Fragments":["by","by","by"]},{"Key":"customized by","Fragments":["passing","passing","passing"]},{"Key":"by passing","Fragments":["a","a","a","a"]},{"Key":"passing a","Fragments":["responder","Range","responder","Range","predicate","responder"]},{"Key":"a responder","Fragments":["pipeline.","pipeline.","pipeline.","for","to"]},{"Key":"responder pipeline.","Fragments":["Default","Default","Default"]},{"Key":"pipeline. Default","Fragments":["responder","responder","responder"]},{"Key":"Default responder","Fragments":["pipeline","pipeline","pipeline"]},{"Key":"responder pipeline","Fragments":["is","is","is"]},{"Key":"pipeline is","Fragments":["provided","provided","provided"]},{"Key":"is provided","Fragments":["in","in","in"]},{"Key":"provided in","Fragments":["the","the","the"]},{"Key":"object of","Fragments":["Bob.","Bob.","Bob."]},{"Key":"This version","Fragments":["makes","is","contains","uses","only","also","contains","uses","makes","was"]},{"Key":"version makes","Fragments":["'hey'","the"]},{"Key":"makes 'hey'","Fragments":["function"]},{"Key":"'hey' function","Fragments":["final"]},{"Key":"function final","Fragments":["so"]},{"Key":"final so","Fragments":["that"]},{"Key":"it can't","Fragments":["be"]},{"Key":"can't be","Fragments":["overriden.","reused."]},{"Key":"use `.count`","Fragments":["with"]},{"Key":"`.count` with","Fragments":["pattern"]},{"Key":"with pattern","Fragments":["matching.","match"]},{"Key":"mutable var","Fragments":["is"]},{"Key":"var is","Fragments":["not","private."]},{"Key":"not very","Fragments":["scala-like...","happy","\"Scaly\",","robust.","efficient","important,","telling,","happy","well"]},{"Key":"The \"return\"","Fragments":["keyword"]},{"Key":"\"return\" keyword","Fragments":["is","is"]},{"Key":"keyword is","Fragments":["not","used","somewhat"]},{"Key":"not needed","Fragments":["(and","in","\"extends\""]},{"Key":"needed (and","Fragments":["actually"]},{"Key":"(and actually","Fragments":["not"]},{"Key":"actually not","Fragments":["recommended)","too"]},{"Key":"this further","Fragments":["by"]},{"Key":"further by","Fragments":["making"]},{"Key":"by making","Fragments":["`Dna`","it","the","use","Dna","the","val","it"]},{"Key":"making `Dna`","Fragments":["a"]},{"Key":"`Dna` a","Fragments":["`case`","case"]},{"Key":"a `case`","Fragments":["class."]},{"Key":"I wrote","Fragments":["this"]},{"Key":"wrote this","Fragments":["before","as"]},{"Key":"this before","Fragments":["I"]},{"Key":"before I","Fragments":["understood","learned"]},{"Key":"I understood","Fragments":["how","your"]},{"Key":"understood how","Fragments":["case"]},{"Key":"how case","Fragments":["classes"]},{"Key":"case classes","Fragments":["are","and","for","is"]},{"Key":"classes are","Fragments":["useful","not"]},{"Key":"are useful","Fragments":["outside"]},{"Key":"useful outside","Fragments":["of"]},{"Key":"of pattern","Fragments":["matching.","matching.","matching.","matching","matches","matching.","matching.","matching?","matching","matching)","matching"]},{"Key":" Sorry","Fragments":["for"]},{"Key":"Sorry for","Fragments":["unclear.","that."]},{"Key":"for unclear.","Fragments":["By"]},{"Key":"unclear. By","Fragments":["CamelCase"]},{"Key":"By CamelCase","Fragments":["i"]},{"Key":"CamelCase i","Fragments":["really"]},{"Key":"i really","Fragments":["meant"]},{"Key":"really meant","Fragments":["camelCase"]},{"Key":"meant camelCase","Fragments":[":-)"]},{"Key":" vars,","Fragments":["vals"]},{"Key":"vars, vals","Fragments":["and"]},{"Key":"vals and","Fragments":["params","private","defs","defs","private","defs","helping"]},{"Key":"and params","Fragments":["usually"]},{"Key":"params usually","Fragments":["starts"]},{"Key":"usually starts","Fragments":["with"]},{"Key":"starts with","Fragments":["a"]},{"Key":"a lowercase","Fragments":["letter.","letter."]},{"Key":" Changed","Fragments":["the",":)","the","it"]},{"Key":"Changed the","Fragments":["arguments","variable"]},{"Key":"the arguments","Fragments":["to","play"]},{"Key":"arguments to","Fragments":["CamelCase."]},{"Key":"to CamelCase.","Fragments":["Thanks"]},{"Key":"CamelCase. Thanks","Fragments":["for"]},{"Key":"The tests","Fragments":["don't","sort","at"]},{"Key":"tests don't","Fragments":["include"]},{"Key":"don't include","Fragments":["contention"]},{"Key":"include contention","Fragments":["between"]},{"Key":"contention between","Fragments":["close","updates"]},{"Key":"between close","Fragments":["and"]},{"Key":"close and","Fragments":["increment."]},{"Key":" Excellent","Fragments":["use","suggestion.","pointers.","ideas,"]},{"Key":"Excellent use","Fragments":["of"]},{"Key":" why","Fragments":["```Any```","not","those","Arrays","this","create","not","not","is","not","use","does","not","turning","not","is","toStream?"]},{"Key":"why ```Any```","Fragments":["instead","as"]},{"Key":"```Any``` instead","Fragments":["of"]},{"Key":"would also","Fragments":["have","declare","do","prefer","consider","be","eliminate","make","make","narrow","rename","omit","solve"]},{"Key":"also have","Fragments":["```cal```","a","an","number","this","a","a","a"]},{"Key":"have ```cal```","Fragments":["inside"]},{"Key":"```cal``` inside","Fragments":["```genericCheck```"]},{"Key":"inside ```genericCheck```","Fragments":["(thread"]},{"Key":"```genericCheck``` (thread","Fragments":["safety"]},{"Key":"(thread safety","Fragments":["and"]},{"Key":"safety and","Fragments":["FP"]},{"Key":"and FP","Fragments":["principles)."]},{"Key":"and perhaps","Fragments":["a","`breakout`","be","even"]},{"Key":"perhaps a","Fragments":["better","bit","nested","bit","bit"]},{"Key":"better name","Fragments":["for","for","for","then","for","than","for"]},{"Key":"also define","Fragments":["`replace`"]},{"Key":"define `replace`","Fragments":["as"]},{"Key":"`replace` as","Fragments":["a"]},{"Key":"a `Map`","Fragments":["since","(as","is","from"]},{"Key":"`Map` since","Fragments":["Maps"]},{"Key":"since Maps","Fragments":["in"]},{"Key":"Maps in","Fragments":["Scala"]},{"Key":"in Scala","Fragments":["are","for","(Unlike","```==```","the","to","Strings","(meaning","since","it","to","-","names,","(other","before,","...","they","if","(as","seems","Maps","a","(just","I'd","have","pattern","-","this","the","instead","we","are","to",":(","you","a","are","to","to"]},{"Key":"Scala are","Fragments":["also","usually","already"]},{"Key":"are also","Fragments":["`PartialFunction`s.","two","of","```PartialFunctions```,"]},{"Key":"Here's your","Fragments":["lazy"]},{"Key":"your lazy","Fragments":["val's."]},{"Key":"lazy val's.","Fragments":[":-)"]},{"Key":"I see","Fragments":["your","I","it","your","Bob's","you","some","I","how","you","this","that's"]},{"Key":"see your","Fragments":["point","motivation:"]},{"Key":"your point","Fragments":["about",":)"]},{"Key":"point about","Fragments":["the","returning"]},{"Key":"function return","Fragments":["types."]},{"Key":"return types.","Fragments":["I"]},{"Key":"types. I","Fragments":["usually"]},{"Key":"I usually","Fragments":["have","add","add","avoid"]},{"Key":"usually have","Fragments":["them,"]},{"Key":"have them,","Fragments":["at"]},{"Key":"them, at","Fragments":["least"]},{"Key":"least for","Fragments":["the","short","someone","me","public"]},{"Key":"the public","Fragments":["functions","api","api","interface)."]},{"Key":"public functions","Fragments":["(as","be","(and"]},{"Key":"functions (as","Fragments":["they"]},{"Key":"(as they","Fragments":["are","are","are"]},{"Key":"are the","Fragments":["API","whole","execution","only","same","DNA"]},{"Key":"the API","Fragments":["of","and"]},{"Key":"API of","Fragments":["the"]},{"Key":"And often","Fragments":["it"]},{"Key":"often it","Fragments":["helps"]},{"Key":"it helps","Fragments":["for","with","to","to"]},{"Key":"helps for","Fragments":["readability"]},{"Key":"for readability","Fragments":["to","reasons","but","then.","you","you","purposes","and","over","can"]},{"Key":"readability to","Fragments":["have"]},{"Key":"have the","Fragments":["return","```match```","return","`._1`","if-condition","code","desired","if-checks","time","same","object","impression","effect","`reverse`","relevant","support","blocking","conversions","risk","Map('A'","map","whole"]},{"Key":"the return","Fragments":["type","types","type","statement","value","value","value","type","value","types","type","type","type","value","keyword","value","type","type","types","type","statements","type","keyword.","type","type),","type","type","type","types","value."]},{"Key":"return type","Fragments":["for","removed.","of","is","isn't","```Unit```?","for","of","on","`private","\":","is","(as","of","of","of","of","anyway."]},{"Key":"type for","Fragments":["all","expanded","any","a","a"]},{"Key":"all functions.","Fragments":["You"]},{"Key":"functions. You","Fragments":["can","might"]},{"Key":"always figure","Fragments":["out"]},{"Key":"return types","Fragments":["(at","of","because","of","of"]},{"Key":"types (at","Fragments":["least"]},{"Key":"(at least","Fragments":["for","within","within","for","prior","for"]},{"Key":"for short","Fragments":["enough"]},{"Key":"short enough","Fragments":["functions","that","to"]},{"Key":"enough functions","Fragments":["-"]},{"Key":"functions -","Fragments":["as"]},{"Key":"- as","Fragments":["they","always"]},{"Key":"as they","Fragments":["always","are","are","confuse","does","might","tend","often","are"]},{"Key":"they always","Fragments":["should"]},{"Key":"always should","Fragments":["be!),"]},{"Key":"should be!),","Fragments":["but"]},{"Key":"be!), but","Fragments":["still"]},{"Key":"still it","Fragments":["takes"]},{"Key":"it takes","Fragments":["some","care","the"]},{"Key":"takes some","Fragments":["mental","time"]},{"Key":"some mental","Fragments":["effort.","effort"]},{"Key":"We can","Fragments":["discuss","discuss"]},{"Key":"can discuss","Fragments":["this","the","this,"]},{"Key":"discuss this","Fragments":["..."]},{"Key":" Then","Fragments":["this","you","your","it","every"]},{"Key":"Then this","Fragments":["is"]},{"Key":"an opportunity","Fragments":["to"]},{"Key":"opportunity to","Fragments":["get","use"]},{"Key":"get good","Fragments":["at"]},{"Key":"good at","Fragments":["them","naming,"]},{"Key":"at them","Fragments":[":)"]},{"Key":" Rephrase,","Fragments":["I"]},{"Key":"Rephrase, I","Fragments":["suck"]},{"Key":"I suck","Fragments":["at"]},{"Key":"suck at","Fragments":["regular"]},{"Key":"at regular","Fragments":["expressions"]},{"Key":" Funnily","Fragments":["enough,"]},{"Key":"Funnily enough,","Fragments":["punctuationRegex","this"]},{"Key":"enough, punctuationRegex","Fragments":["looks"]},{"Key":"punctuationRegex looks","Fragments":["like"]},{"Key":"looks like","Fragments":["one","dog","a","Feature#envy","a","it","true","a","hack","[^\\w']","sometimes","it's","I","a"]},{"Key":"like one","Fragments":[":)","codes"]},{"Key":" szafirov,","Fragments":["true,","the"]},{"Key":"szafirov, true,","Fragments":["the"]},{"Key":"true, the","Fragments":["filtering"]},{"Key":"the filtering","Fragments":["out","will"]},{"Key":"filtering out","Fragments":["of"]},{"Key":"of empties","Fragments":["is"]},{"Key":"empties is","Fragments":["a"]},{"Key":"a hack.","Fragments":["But"]},{"Key":"hack. But","Fragments":["I"]},{"Key":"But I","Fragments":["don't","was","got","think","hadn't","like","wanted","am","think","found","think","guess","did","can't","will","just","admit","still","understand"]},{"Key":"don't regular","Fragments":["expression"]},{"Key":"regular expression","Fragments":[":)","without","would","does.","to","syntax/writing.","pattern"]},{"Key":" Could","Fragments":["have","be","it","generate","be","not","annotate","you"]},{"Key":"Could have","Fragments":["used"]},{"Key":"have used","Fragments":["the","`match`","either","`==`.","6","foldLeft"]},{"Key":"used the","Fragments":["regexp","count","fact","same"]},{"Key":"the regexp","Fragments":["predefined","```\"\"\".*[a-zA-Z]+.*\"\"\"```?","to"]},{"Key":"regexp predefined","Fragments":["group:"]},{"Key":"predefined group:","Fragments":["[\\\\p{Punct}"]},{"Key":"group: [\\\\p{Punct}","Fragments":["]+"]},{"Key":"The problem","Fragments":["with","I"]},{"Key":"with \\p{Punct}","Fragments":["though"]},{"Key":"\\p{Punct} though","Fragments":["is"]},{"Key":"though is","Fragments":["that"]},{"Key":"is that","Fragments":["it","the","it","it","if","the","returned","passing","it","scala","appending","only","you","```generatedNames```","you","in","I","now","each","unreadable","the","common,","you","the","you","they","type","strange","it","regular","you","Strings","you","in","I","I","it","it","appending","if","I"]},{"Key":"it includes","Fragments":["apostrophes"]},{"Key":"includes apostrophes","Fragments":["which"]},{"Key":"apostrophes which","Fragments":["in"]},{"Key":"which in","Fragments":["this","fact"]},{"Key":"this case","Fragments":["fails","the","is","I","it","since","you","its","you","you","10).","but","there","you","scrabbleSystem?","have","I","I","I","the","it","there","`len`","it","might","I","Map","it"]},{"Key":"case fails","Fragments":["the"]},{"Key":"fails the","Fragments":["tests.","final"]},{"Key":"I used","Fragments":["[^\\\\w']+","a","Iterator.","`if-else`on","Option's","s.endsWith(\"?\")","get(word)","the","scala.util.Random.alphanumeric","a","sorted","your","foldLeft","sorted","an","it","foldR","your","`rep`","the"]},{"Key":"used [^\\\\w']+","Fragments":["in"]},{"Key":"[^\\\\w']+ in","Fragments":["my"]},{"Key":"in my","Fragments":["second","first","machine:","code,","implementation","own","comments,","solution)","`hey`","latest","2nd","mind","implementation","first","next","book.","previous","opinion.","next","opinion","code","head","version:","count()"]},{"Key":"my second","Fragments":["iteration.","go","pass,","one."]},{"Key":" solution","Fragments":["w/","w/","w/","w/","using","w/","w/","w/","by","w/","w/","by"]},{"Key":"solution w/","Fragments":["unfoldRight","regex","`foldLeft`","`foldLeft`.","`foldLeft`.","zipWithIndex.","bitwise","`unfold`:","```foldLeft```.","```unfoldRight```.","`unfoldRight`.","```foldLeft```.","`zip`","simpler","simple","side","```flatMap/map```"]},{"Key":" for","Fragments":["your","`x","(i","a","example","(i","(year","cleanedUp","readability","final","example,","better"]},{"Key":"for your","Fragments":["```toDecimal```","review.","comment!","input!","claim","review.","comment","review.","isShouting","different","feedback.","feedback","`matches`","defs","suggestion.","arguments.","input","feedback!","modulo","filter","helper","contribution","second","feedback!","comments!","`getkey`","comment","feedback.","suggestions!","feedback!","Ranges.","feedback!","inner","feedback.","feedback!","feedback","review."]},{"Key":"your ```toDecimal```","Fragments":["you"]},{"Key":"```toDecimal``` you","Fragments":["could"]},{"Key":"try a","Fragments":["tail-recursive","solution","solution","solution","solution","solution","solution","solution","version","version"]},{"Key":"a tail-recursive","Fragments":["solution"]},{"Key":"tail-recursive solution","Fragments":["that","is"]},{"Key":"solution that","Fragments":["just","directly","synchronizes","uses","groups","handles","keeps","looks","handles","foregrounds"]},{"Key":"that just","Fragments":["adds"]},{"Key":"just adds","Fragments":["to"]},{"Key":"adds to","Fragments":["some","understanding.","the","readability,"]},{"Key":" ```reverse.zipWithIndex.foldLeft```","Fragments":["is"]},{"Key":"```reverse.zipWithIndex.foldLeft``` is","Fragments":["a"]},{"Key":"bit much","Fragments":["to"]},{"Key":"much to","Fragments":["swallow.","add","complain","just"]},{"Key":"to swallow.","Fragments":[":-)"]},{"Key":"A generalized","Fragments":["version"]},{"Key":"generalized version","Fragments":["of"]},{"Key":"version of","Fragments":["the","this","unpacking","my","accumulate..","it.","```isQuestion```"]},{"Key":"the `octal`","Fragments":["solution."]},{"Key":" Not","Fragments":["sure","really,","sure","exactly,","the","enough","sure","too","bad","really","bad,","much","sure","sure","sure","a","happy"]},{"Key":"sure if","Fragments":["I","this","a","this","either","pattern","I","using","in","it's","this","this","you","just","I","I","this","one","shuffle"]},{"Key":"can destructure-bind","Fragments":["a"]},{"Key":"destructure-bind a","Fragments":["list"]},{"Key":"a list","Fragments":["to","of","of","of","and","of","is","in","of","directly.","and","of","and","to","was"]},{"Key":"list to","Fragments":["define","just","DRY","direct","make"]},{"Key":"to define","Fragments":["reset()","_sq","`type","little","a","method","a","scores","little"]},{"Key":"define reset()","Fragments":["in"]},{"Key":"reset() in","Fragments":["one"]},{"Key":"in one","Fragments":["line.","line.","object","line.","pass"]},{"Key":"Your code","Fragments":["is"]},{"Key":"is mutating","Fragments":["the"]},{"Key":"mutating the","Fragments":["passed","passed","passed"]},{"Key":"the passed","Fragments":["in","in","in","object.","in","in","in"]},{"Key":"passed in","Fragments":["Calendar","instance,","GregorianCalendar","turn.","string","cal","cal,"]},{"Key":"in Calendar","Fragments":["instance."]},{"Key":"Calendar instance.","Fragments":["A"]},{"Key":"instance. A","Fragments":["better"]},{"Key":"A better","Fragments":["solution","solution"]},{"Key":"better solution","Fragments":["would","for","would","would"]},{"Key":"solution would","Fragments":["be","have","use","be","then"]},{"Key":"be to","Fragments":["clone","use","use","use","rename","complex,","count","use","create","just","use","increase/decrease","transform","collapse","use","check","have"]},{"Key":"to clone","Fragments":["the"]},{"Key":"clone the","Fragments":["passed","passed"]},{"Key":"in instance,","Fragments":["and"]},{"Key":"instance, and","Fragments":["return"]},{"Key":"and return","Fragments":["a","copy"]},{"Key":"return a","Fragments":["cloned/mutated","tuple","reference","value,","name.","Boolean","copy","String?","String"]},{"Key":"a cloned/mutated","Fragments":["instance."]},{"Key":" ```_DAY_IN_SECONDS```","Fragments":["and"]},{"Key":"```_DAY_IN_SECONDS``` and","Fragments":["```_ORBITAL_PERIOD_IN_DAYS```"]},{"Key":"and ```_ORBITAL_PERIOD_IN_DAYS```","Fragments":["are"]},{"Key":"```_ORBITAL_PERIOD_IN_DAYS``` are","Fragments":["constants"]},{"Key":"are constants","Fragments":["and","you"]},{"Key":"constants and","Fragments":["should","could"]},{"Key":"and should","Fragments":["be","provide","therefore","therefore"]},{"Key":"be declared","Fragments":["as","`private`","lazy","as","as","as"]},{"Key":"declared as","Fragments":["(private)","val,","a","```val```."]},{"Key":"as (private)","Fragments":["```val```."]},{"Key":"the usual","Fragments":["naming","type","way","(and","way","way"]},{"Key":"usual naming","Fragments":["convenention"]},{"Key":"naming convenention","Fragments":["in"]},{"Key":"convenention in","Fragments":["Scala"]},{"Key":"Scala for","Fragments":["constants"]},{"Key":"for constants","Fragments":["is","is","is","camel-case,","to","to"]},{"Key":"constants is","Fragments":["upper","to","camel"]},{"Key":"is upper","Fragments":["camel"]},{"Key":"upper camel","Fragments":["case,"]},{"Key":"camel case,","Fragments":["for"]},{"Key":"case, for","Fragments":["example"]},{"Key":"for example","Fragments":["```DayInSeconds```.","move","you","-","the","```isQuestion```"]},{"Key":"also declare","Fragments":["```onEarth```,"]},{"Key":"declare ```onEarth```,","Fragments":["```onMercury```,"]},{"Key":"```onEarth```, ```onMercury```,","Fragments":["..."]},{"Key":"```onMercury```, ...","Fragments":["as"]},{"Key":"... as","Fragments":["(lazy)"]},{"Key":"as (lazy)","Fragments":["```val```","val"]},{"Key":"(lazy) ```val```","Fragments":["b/c","as"]},{"Key":"```val``` b/c","Fragments":["their"]},{"Key":"b/c their","Fragments":["value"]},{"Key":"their value","Fragments":["can"]},{"Key":"value can","Fragments":["never"]},{"Key":"can never","Fragments":["change."]},{"Key":" First","Fragments":["version","iteration","scala","a","I","working","off,","draft.","attempt,","cut","pass","version.","time"]},{"Key":"First version","Fragments":["that"]},{"Key":"version that","Fragments":["passes","separates"]},{"Key":"that passes","Fragments":["all"]},{"Key":"passes all","Fragments":["tests.","tests,","tests."]},{"Key":"I chose","Fragments":["the","this","'first'","too!","to","that"]},{"Key":"chose the","Fragments":["pattern"]},{"Key":"the pattern","Fragments":["matching","match","match","match","matching","match.","match","matching","matching","match","match,","rather","matching.","matching","matching.","matching","matching","matching","matching","matching)","matching","matching"]},{"Key":"matching for","Fragments":["readability","not","a"]},{"Key":"readability reasons","Fragments":["(instead"]},{"Key":"reasons (instead","Fragments":["of"]},{"Key":"(instead of","Fragments":["nested","a","defining","your","referring","your","your"]},{"Key":"of nested","Fragments":["if's).","Streams"]},{"Key":"Could be","Fragments":["improved","rewritten"]},{"Key":"be improved","Fragments":["by","though,","by"]},{"Key":"improved by","Fragments":["not","making"]},{"Key":"by not","Fragments":["having","using","using"]},{"Key":"not having","Fragments":["the","to"]},{"Key":"having the","Fragments":["`filter`","full"]},{"Key":"the `filter`","Fragments":["twice","on","?"]},{"Key":"`filter` twice","Fragments":["in"]},{"Key":"twice in","Fragments":["second","`squareOfSums`","a","a","a"]},{"Key":"in second","Fragments":["case."]},{"Key":" Didn't","Fragments":["know","know","know","know","want","think","know","need"]},{"Key":"Didn't know","Fragments":["that,","you","about","about","how","about","about"]},{"Key":"know that,","Fragments":["thanks!","thanks!"]},{"Key":" Oh,","Fragments":["really","and","I","does","I","and"]},{"Key":"Oh, really","Fragments":["minor"]},{"Key":"really minor","Fragments":["--"]},{"Key":"minor --","Fragments":["I"]},{"Key":"-- I","Fragments":["believe","should"]},{"Key":"I believe","Fragments":["you","I","having","`s`","it","this","this","a","you","the","you","you","is","if","numeric"]},{"Key":"believe you","Fragments":["can","need","can","can","w/"]},{"Key":"call `groupBy`","Fragments":["on"]},{"Key":"`groupBy` on","Fragments":["a","`List`"]},{"Key":"on a","Fragments":["string,","more","solution","new","few","good","good","better","sheer","zipped","regex","String","way","new","boolean","class","separate","better","String","List","List","sequence,"]},{"Key":"a string,","Fragments":["so","I"]},{"Key":"string, so","Fragments":["you"]},{"Key":"need the","Fragments":["`toCharArray`","surrounding","value","parens","explicit","```val```","`new","Strand","dot","brackets","`:","PrimeFactors",";","parens","```to[Set]```","match","object","toList"]},{"Key":"the `toCharArray`","Fragments":["in"]},{"Key":"`toCharArray` in","Fragments":["`decompose`","line"]},{"Key":"in `decompose`","Fragments":["--"]},{"Key":"`decompose` --","Fragments":["see"]},{"Key":"-- see","Fragments":["[1].","[1]"]},{"Key":"see [1].","Fragments":["(Not"]},{"Key":"[1]. (Not","Fragments":["sure"]},{"Key":"(Not sure","Fragments":["if"]},{"Key":"if this","Fragments":["depends","much","is","was","is","is","can","is"]},{"Key":"this depends","Fragments":["on"]},{"Key":"your scala","Fragments":["version)"]},{"Key":" [1]","Fragments":["[StringOps#groupBy](http://scala-lang.org/files/archive/api/2.11.1/index.html#scala.collection.immutable.StringOps@bill[K](f:A=\u003eK):scala.collection.immutable.Map[K,Repr])","http://danielwestheide.com/blog/2012/11/21/the-neophytes-guide-to-scala-part-1-extractors.html","http://www.slideshare.net/normation/scala-dreaded"]},{"Key":" makes","Fragments":["sense,","sense?"]},{"Key":"makes sense,","Fragments":["thx!"]},{"Key":" It's","Fragments":["more","unclear","not","very","worth","easier","less","great","a","TDD","my","very"]},{"Key":"It's more","Fragments":["a","idiomatic","concise,"]},{"Key":"more a","Fragments":["matter","flaw","matter","fan"]},{"Key":"a matter","Fragments":["of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"matter of","Fragments":["style,","taste","personal","style,","taste,","style,","taste,","personal","taste","taste","taste","taste.","taste."]},{"Key":"of style,","Fragments":["I","but","it's"]},{"Key":"style, I","Fragments":["prefer"]},{"Key":"have pure","Fragments":["functions"]},{"Key":"pure functions","Fragments":["in","(such","used"]},{"Key":"functions in","Fragments":["the","`hey`.","an","favor","the"]},{"Key":" with","Fragments":["`pure`","cmd.toUpperCase"]},{"Key":"with `pure`","Fragments":["I"]},{"Key":"`pure` I","Fragments":["mean"]},{"Key":"I mean","Fragments":["functions","for","tail","is:","the"]},{"Key":"mean functions","Fragments":["which"]},{"Key":"functions which","Fragments":["don't"]},{"Key":"which don't","Fragments":["use"]},{"Key":"don't use","Fragments":["any","`return`","pattern","```implicits```","technical","this"]},{"Key":"use any","Fragments":["class","mutables"]},{"Key":"any class","Fragments":["field,"]},{"Key":" that","Fragments":["makes","is","\"vararg","does","is"]},{"Key":"makes clear","Fragments":["that"]},{"Key":"function is","Fragments":["independent","being","compact","perfectly","called.","called.","somewhat","better"]},{"Key":"is independent","Fragments":["form"]},{"Key":"independent form","Fragments":["the"]},{"Key":"form the","Fragments":["class,"]},{"Key":"is easier","Fragments":["to","done","than","to","to","to","on","here","to"]},{"Key":"to refactor","Fragments":["if","the","the","the","the"]},{"Key":"refactor if","Fragments":["you"]},{"Key":"want for","Fragments":["example","this"]},{"Key":"example move","Fragments":["them"]},{"Key":"move them","Fragments":["in","to"]},{"Key":"them in","Fragments":["a","this","favor","concise","the","a"]},{"Key":"a Utils","Fragments":["object."]},{"Key":" Out","Fragments":["of","of","of"]},{"Key":"Out of","Fragments":["curiosity,","interest,","curiosity,","curiousity,"]},{"Key":"of curiosity,","Fragments":["why","is"]},{"Key":"curiosity, why","Fragments":["define"]},{"Key":"why define","Fragments":["`decompose`"]},{"Key":"define `decompose`","Fragments":["on"]},{"Key":"`decompose` on","Fragments":["the"]},{"Key":"Excellent suggestion.","Fragments":["I've"]},{"Key":"suggestion. I've","Fragments":["read"]},{"Key":"I've read","Fragments":["quite"]},{"Key":"read quite","Fragments":["a"]},{"Key":"bit on","Fragments":["\"implicit\""]},{"Key":"on \"implicit\"","Fragments":["definitions"]},{"Key":"\"implicit\" definitions","Fragments":["and"]},{"Key":"definitions and","Fragments":["classes,"]},{"Key":"and classes,","Fragments":["but"]},{"Key":"classes, but","Fragments":["they"]},{"Key":"but they","Fragments":["still","help"]},{"Key":"they still","Fragments":["confuse"]},{"Key":"still confuse","Fragments":["the"]},{"Key":"confuse the","Fragments":["heck"]},{"Key":"the heck","Fragments":["out"]},{"Key":"heck out","Fragments":["of"]},{"Key":"of me.","Fragments":["Can"]},{"Key":"me. Can","Fragments":["you"]},{"Key":"you explain","Fragments":["why","why","why","why"]},{"Key":"explain why","Fragments":["implicit","you","you","did"]},{"Key":"why implicit","Fragments":["is"]},{"Key":"implicit is","Fragments":["important"]},{"Key":"is important","Fragments":["and"]},{"Key":"important and","Fragments":["necessary"]},{"Key":"and necessary","Fragments":["to"]},{"Key":"necessary to","Fragments":["do","declare","return","use","repeat","use","pass"]},{"Key":"do what","Fragments":["you","I","you're","you","I","you"]},{"Key":"you are","Fragments":["proposing?","doing","prepared","using","relying","assigning","returning","still","on","so","totally","using","returning","not","not","re-checking","splitting","right.","up","worried","right","using,","not","lost","using.","doing","using.","right,","becoming","closer","right,","unnecessarily","doing","going","better","allocating","right.","calling"]},{"Key":"I really","Fragments":["like","should","like","liked","like","appreciate","like","like","like","like","struggled","like","like","like","didn't"]},{"Key":"really like","Fragments":["this.","it,","how","what","using","the","the","how","to","the","using","your","\"Utterance\"","your","your"]},{"Key":"like this.","Fragments":["Very","But","What"]},{"Key":"this. Very","Fragments":["clear"]},{"Key":"Very clear","Fragments":["about"]},{"Key":"clear about","Fragments":["what"]},{"Key":"what it's","Fragments":["doing.","doing"]},{"Key":"it's doing.","Fragments":["Another"]},{"Key":"doing. Another","Fragments":["approach"]},{"Key":"Another approach","Fragments":["to"]},{"Key":"approach to","Fragments":["consider","be","use"]},{"Key":"to consider","Fragments":["would","is","the","converting","changing"]},{"Key":"consider would","Fragments":["be"]},{"Key":"use an","Fragments":["implicit","enum","enum","exponent","```Option```","underscore:","implicit","internal","\"_\"."]},{"Key":"an implicit","Fragments":["and","parameter","conversion","value","conversion","conversion","but","conversion","conversion","conversion."]},{"Key":"implicit and","Fragments":["a"]},{"Key":"and a","Fragments":["class","linked","mutable","single","response","reader","condition","default","valid","space","bit","functional","`var`","mutable","list"]},{"Key":"class to","Fragments":["\"add\"","encapsulate","grow","add"]},{"Key":"to \"add\"","Fragments":["methods"]},{"Key":"\"add\" methods","Fragments":["to"]},{"Key":"methods to","Fragments":["the","to","aid","get","generate"]},{"Key":"the string","Fragments":["class.","did","for","once","is","uppercase","wrapped","twice","parsed","passed","then","as","is","interpolation","has","must","is"]},{"Key":"string class.","Fragments":["For"]},{"Key":"class. For","Fragments":["instance"]},{"Key":" implicit","Fragments":["def","class"]},{"Key":"implicit def","Fragments":["stringToStatement(string:"]},{"Key":"def stringToStatement(string:","Fragments":["String)"]},{"Key":"stringToStatement(string: String)","Fragments":["="]},{"Key":"String) =","Fragments":["new","s.trim.isEmpty","if","{","s.toUpperCase","sentence.exists(c","Option(msg)","Option(msg)","...\"","msg.trim.isEmpty`","s.toUpperCase","s.last","{","statement.endsWith(\"?\")"]},{"Key":" class","Fragments":["Statement(statement:","DNA(text:","Bob"]},{"Key":"class Statement(statement:","Fragments":["String)"]},{"Key":"Statement(statement: String)","Fragments":["{"]},{"Key":" def","Fragments":["isSilent","unapply(s:","unapply(s:","count(c:Char):Int","hey(prompt:String):String","db","hey(args:","containsAtLeastOneLetter","hey(statement:String):String","isShouting():Boolean","isQuestion():Boolean","isSilence():Boolean","isLeap","containsLetters(sentence:","accumulate[A,B](xs:","primeFactors(n:","compute(d1:","unapply(msg:","unapply(msg:","genName:String","wordCount():","words():","countWord(word:","isLeap:","name","reset():","dummyFunction(s:String)","clean","compute(strand:","grade(i:","unapply(statement:","number","number"]},{"Key":"def isSilent","Fragments":["="]},{"Key":"isSilent =","Fragments":["statement.trim.isEmtpy"]},{"Key":"This would","Fragments":["allow","allow","probably","mean","also","cause","also","guarantee"]},{"Key":"would allow","Fragments":["you","you","all","for"]},{"Key":"allow you","Fragments":["to","to","to"]},{"Key":"you to","Fragments":["do","compute","do","write","perform","omit","specify","use.","replace","get","give","figure","see","fix","break","it."]},{"Key":"following case","Fragments":["statement"]},{"Key":" case","Fragments":["x","Silence()","Silence(response)","(a,","_","pattern","Shouting(_*)","e","\"\"","s","head","num","....","0","2","_","silent","YellingPattern(_)","s","s","_","pattern(_)","shouting()","Question(_)","_","_","(x,","...","e","\"\"","e","(diff,","object","Question()","_","good_number(keeper)","_"]},{"Key":"case x","Fragments":["if"]},{"Key":"x if","Fragments":["x.isSilent","x....\""]},{"Key":"if x.isSilent","Fragments":["=\u003e"]},{"Key":"x.isSilent =\u003e","Fragments":["\"Fine."]},{"Key":"=\u003e \"Fine.","Fragments":["Be","Be","Be","Be","Be","Be"]},{"Key":"\"Fine. Be","Fragments":["that","that","that","that","that","that","that","that","that","that","that","that"]},{"Key":"Be that","Fragments":["way!\"","way!\"","way!\"","way!\")","way!\"","way!\"","way!\"","way!\"","way!\"","way!\"","way!\"","way!\"","way!\""]},{"Key":"I feel","Fragments":["your","that","like","is","a","like","like","that","like","I","that","that","that","there","that","that","it's"]},{"Key":"feel your","Fragments":["current"]},{"Key":"your current","Fragments":["approach","solution","value","result"]},{"Key":"current approach","Fragments":["is"]},{"Key":"approach is","Fragments":["very","by","a","best."]},{"Key":"is very","Fragments":["readable,","inefficient","idiomatic","interesting.","readable!","expressive","difficult","un-functional,","similar","procedural.","straightforward!","easy","inefficient","nice"]},{"Key":"very readable,","Fragments":["this","especially"]},{"Key":"readable, this","Fragments":["would"]},{"Key":"would just","Fragments":["be","refactor","do"]},{"Key":"just be","Fragments":["a","implemented","the","called"]},{"Key":"different approach","Fragments":["that",":-)","that"]},{"Key":"approach that","Fragments":["some","won't","gets"]},{"Key":"that some","Fragments":["like."]},{"Key":" Since","Fragments":["the","it's","`.length`","yelling","your","you're","you","it's","you","the","you've"]},{"Key":"Since the","Fragments":["mapping","uppercase"]},{"Key":"the mapping","Fragments":["has","and"]},{"Key":"mapping has","Fragments":["an"]},{"Key":"has an","Fragments":["`apply`","implicit"]},{"Key":"an `apply`","Fragments":["method,","function"]},{"Key":"`apply` method,","Fragments":["it"]},{"Key":"method, it","Fragments":["can"]},{"Key":"it can","Fragments":["be","be","be","make","be","be","be","get","be","return","be","be","be","be"]},{"Key":"be passed","Fragments":["to"]},{"Key":"the `map`","Fragments":["method","and"]},{"Key":"`map` method","Fragments":["as"]},{"Key":"method as","Fragments":["a","well,","the"]},{"Key":"I wasn't","Fragments":["sure","evaluating","thinking","100%","happy","sure","sure","happy","aware"]},{"Key":"wasn't sure","Fragments":["if","if","about","how"]},{"Key":"if a","Fragments":["companion","question","message","string","number","string","name","list"]},{"Key":"a companion","Fragments":["object","object,","object","object.","object.","`object`,","object.","object","object","object","object","object","object"]},{"Key":"object is","Fragments":["appropriate","only","instantiated.","named"]},{"Key":"is appropriate","Fragments":["here,","in"]},{"Key":"appropriate here,","Fragments":["but"]},{"Key":"here, but","Fragments":["it","that","with","I'd"]},{"Key":"it gave","Fragments":["me"]},{"Key":"gave me","Fragments":["a","robot","this"]},{"Key":"me a","Fragments":["place","while","moment","short","\"random\"","comment","lot.","bit","bit","kind"]},{"Key":"a place","Fragments":["to"]},{"Key":"place to","Fragments":["put","use"]},{"Key":"to put","Fragments":["some","\"helping\"","the","them","the","the","the","the","the","vals","the","parens","the","in","something"]},{"Key":"put some","Fragments":["re-used,"]},{"Key":"some re-used,","Fragments":["but"]},{"Key":"re-used, but","Fragments":["calculated-once"]},{"Key":"but calculated-once","Fragments":["values."]},{"Key":" Any","Fragments":["advice","tips","hints"]},{"Key":"Any advice","Fragments":["on"]},{"Key":"advice on","Fragments":["where"]},{"Key":"on where","Fragments":["to"]},{"Key":"where to","Fragments":["use","look","check"]},{"Key":"use companion","Fragments":["objects?"]},{"Key":"can omit","Fragments":["some","it","the","curly","the","the","`_*`","curly","the","the","also","all"]},{"Key":"omit some","Fragments":["parentheses:"]},{"Key":"some parentheses:","Fragments":["``(w.toLowerCase()"]},{"Key":"parentheses: ``(w.toLowerCase()","Fragments":["!="]},{"Key":"``(w.toLowerCase() !=","Fragments":["word.toLowerCase())``"]},{"Key":"!= word.toLowerCase())``","Fragments":["-\u003e"]},{"Key":"word.toLowerCase())`` -\u003e","Fragments":["``w.toLowerCase"]},{"Key":"-\u003e ``w.toLowerCase","Fragments":["!="]},{"Key":"``w.toLowerCase !=","Fragments":["word.toLowerCase``."]},{"Key":"First iteration","Fragments":["to"]},{"Key":"iteration to","Fragments":["get","do"]},{"Key":"get tests","Fragments":["passing."]},{"Key":"tests passing.","Fragments":["I"]},{"Key":"passing. I","Fragments":["don't"]},{"Key":"the algorithm","Fragments":["as"]},{"Key":"algorithm as","Fragments":["it","you"]},{"Key":"it is.","Fragments":["At"]},{"Key":"is. At","Fragments":["the"]},{"Key":"At the","Fragments":["worst","end","beginning"]},{"Key":"the worst","Fragments":["it's"]},{"Key":"worst it's","Fragments":["log(3n)."]},{"Key":"it's log(3n).","Fragments":["I"]},{"Key":"log(3n). I","Fragments":["also"]},{"Key":"also don't","Fragments":["like","need","like,"]},{"Key":"how un-intuitive","Fragments":["this"]},{"Key":"un-intuitive this","Fragments":["code"]},{"Key":" What´s","Fragments":["the"]},{"Key":"What´s the","Fragments":["idea"]},{"Key":"of mapValues","Fragments":["?"]},{"Key":"This looks","Fragments":["pretty","great.","really","great,","good","good!","great!","like","much","nicer!","a","good","a","clean"]},{"Key":"looks pretty","Fragments":["much","much","much","functional"]},{"Key":"pretty much","Fragments":["like","like","the","like","like","like","exactly"]},{"Key":"much like","Fragments":["my","my","Java","Java","a","yours,","Java.","this.","my"]},{"Key":"like my","Fragments":["solution!","solution","previous"]},{"Key":"my solution!","Fragments":[";)"]},{"Key":"solution! ;)","Fragments":["A"]},{"Key":";) A","Fragments":["couple"]},{"Key":"A couple","Fragments":["of","minor","of","minor","of","of"]},{"Key":"of questions","Fragments":["though:"]},{"Key":"1. Is","Fragments":["there","there"]},{"Key":"Is there","Fragments":["any","any","a","a","a","any","a","some","a","a","any","any","a","a","a","a","an","a","any","any","a","any"]},{"Key":"there any","Fragments":["significant","reason","reason","possibility","reason","special","way","performance","particular"]},{"Key":"any significant","Fragments":["performance","performance"]},{"Key":"significant performance","Fragments":["issue","difference"]},{"Key":"performance issue","Fragments":["in"]},{"Key":"issue in","Fragments":["running"]},{"Key":"in running","Fragments":["2","3"]},{"Key":"running 2","Fragments":["filters"]},{"Key":"2 filters","Fragments":["instead"]},{"Key":"filters instead","Fragments":["of"]},{"Key":"of concatenating","Fragments":["the"]},{"Key":"concatenating the","Fragments":["conditions"]},{"Key":"conditions in","Fragments":["the","the","the"]},{"Key":"2. Again","Fragments":["in"]},{"Key":"Again in","Fragments":["terms"]},{"Key":"of performance,","Fragments":["isn't"]},{"Key":"performance, isn't","Fragments":["it"]},{"Key":"isn't it","Fragments":["better","a","enough"]},{"Key":"it better","Fragments":["for","expresses","than"]},{"Key":"better for","Fragments":["you","readability.","readability"]},{"Key":"for you","Fragments":["to","without","thanks","already","to"]},{"Key":"to compute","Fragments":["the","differences","the","differences","\"vn\".","counts."]},{"Key":"compute the","Fragments":["frequencies(root.toLowerCase)","number"]},{"Key":"the frequencies(root.toLowerCase)","Fragments":["once"]},{"Key":"frequencies(root.toLowerCase) once","Fragments":["before"]},{"Key":"once before","Fragments":["start"]},{"Key":"before start","Fragments":["filtering"]},{"Key":"start filtering","Fragments":["so"]},{"Key":"filtering so","Fragments":["it"]},{"Key":"it only","Fragments":["gets","needs","misleads","says","three-quarters","needs"]},{"Key":"only gets","Fragments":["computed"]},{"Key":"gets computed","Fragments":["once?"]},{"Key":"I know,","Fragments":["for","but","but"]},{"Key":"know, for","Fragments":["this"]},{"Key":"this program","Fragments":["and"]},{"Key":"program and","Fragments":["test"]},{"Key":"and test","Fragments":["suite","become"]},{"Key":"test suite","Fragments":["these","contains","should","when","has"]},{"Key":"suite these","Fragments":["points"]},{"Key":"these points","Fragments":["are"]},{"Key":"points are","Fragments":["probably"]},{"Key":"are probably","Fragments":["irrelevant,","because"]},{"Key":"probably irrelevant,","Fragments":["but"]},{"Key":"irrelevant, but","Fragments":["thinking"]},{"Key":"but thinking","Fragments":["on"]},{"Key":"thinking on","Fragments":["a"]},{"Key":"more real","Fragments":["world"]},{"Key":"real world","Fragments":["example,"]},{"Key":"world example,","Fragments":["do"]},{"Key":"example, do","Fragments":["you"]},{"Key":"that they","Fragments":["might","will","are","must","are"]},{"Key":"they might","Fragments":["make","in"]},{"Key":"might make","Fragments":["an","that","this"]},{"Key":"make an","Fragments":["impact?"]},{"Key":"the suggestions","Fragments":["-"]},{"Key":"suggestions -","Fragments":["they're"]},{"Key":"- they're","Fragments":["both"]},{"Key":"they're both","Fragments":["very"]},{"Key":"both very","Fragments":["good."]},{"Key":"very good.","Fragments":["I"]},{"Key":"good. I","Fragments":["think","am"]},{"Key":"think these","Fragments":["kinds","improvements"]},{"Key":"these kinds","Fragments":["of"]},{"Key":"kinds of","Fragments":["considerations","\"questions\",","operations","monads"]},{"Key":"of considerations","Fragments":["are"]},{"Key":"considerations are","Fragments":["the"]},{"Key":"the whole","Fragments":["point","function","if-else","if","thing","thing","range","```Map[Char,Int]```,","expression?!","```case```","`rmDigits()`,","exercise","this","map.","String?","concept","galaxy","galaxy","Stream","milky","function","history?!","collection","string"]},{"Key":"whole point","Fragments":["of"]},{"Key":"of doing","Fragments":["these","things.","checking","that","it","MapReduce...","this","it...","things."]},{"Key":"doing these","Fragments":["exercises"]},{"Key":"these exercises","Fragments":[":).","as","is"]},{"Key":"1. I'm","Fragments":["not"]},{"Key":"not sure.","Fragments":["I"]},{"Key":"sure. I","Fragments":["think"]},{"Key":"on how","Fragments":["smart","parts","to","you","to","zip"]},{"Key":"how smart","Fragments":["the"]},{"Key":"smart the","Fragments":["compiler"]},{"Key":"compiler is.","Fragments":["Most"]},{"Key":"is. Most","Fragments":["of"]},{"Key":"Most of","Fragments":["the","these","times"]},{"Key":"Scala I","Fragments":["do","think."]},{"Key":"I do","Fragments":["is","believe","this","this","like","see","not","not","wish","like","not","like","not","not","all","feel","not"]},{"Key":"do is","Fragments":["with"]},{"Key":"is with","Fragments":["Apache"]},{"Key":"with Apache","Fragments":["Spark,"]},{"Key":"Apache Spark,","Fragments":["which"]},{"Key":"Spark, which","Fragments":["pushes"]},{"Key":"which pushes","Fragments":["predicates"]},{"Key":"pushes predicates","Fragments":["down"]},{"Key":"predicates down","Fragments":["and"]},{"Key":"down and","Fragments":["composes"]},{"Key":"and composes","Fragments":["the"]},{"Key":"composes the","Fragments":["operation"]},{"Key":"the operation","Fragments":["(why","of"]},{"Key":"operation (why","Fragments":["I"]},{"Key":"(why I","Fragments":["did"]},{"Key":"did it","Fragments":["this","produce","justice,","that"]},{"Key":"it this","Fragments":["way).","way,","way?"]},{"Key":"this way).","Fragments":["I'll"]},{"Key":"way). I'll","Fragments":["look"]},{"Key":"I'll look","Fragments":["into","at","into","into","at"]},{"Key":"into whether","Fragments":["the"]},{"Key":"whether the","Fragments":["compiler","sorted"]},{"Key":"compiler does","Fragments":["it","not"]},{"Key":"does it","Fragments":["to","contain","like","hurt"]},{"Key":"to typical","Fragments":["sequence"]},{"Key":"typical sequence","Fragments":["operations."]},{"Key":"2. I","Fragments":["really","quite","don't"]},{"Key":"should precompute","Fragments":["that."]},{"Key":" Using","Fragments":["`synchronized`","Enumeration.","match","a","scalaz.","a","`List.count`","```foldLeft```","StringOps","the","an","the","```return```","`\"[^\\\\W']+\"`","`unapply`"]},{"Key":"Using `synchronized`","Fragments":["is"]},{"Key":"`synchronized` is","Fragments":["an","superfluous."]},{"Key":"an excellent","Fragments":["way","point,"]},{"Key":"excellent way","Fragments":["to"]},{"Key":"that you","Fragments":["are","implemented","made","adhere","are","iterate","can't","might","need","are","could","replace","don't","handle","wanted","should","raised.","can","do","asked!","don't","can","can","actually","can","need","pass","can","are","provide","can","broke","could","recognized","don't","aren't","could","reject","give","can","should","don't","only","should","can","will","take","can","should","don't","familiarize","could","do","have"]},{"Key":"are doing","Fragments":["thread-safe","a","here,","much"]},{"Key":"doing thread-safe","Fragments":["processing."]},{"Key":" Elegant","Fragments":["solution!"]},{"Key":"also look","Fragments":["into"]},{"Key":"into how","Fragments":["to"]},{"Key":"how to","Fragments":["avoid","clean","refactor","generalise","prevent","do","use","handle","do","write","do","use","deal","define","add","get","get","use","use","you","get","*Google*","work","code","reuse","check","get","deal","get"]},{"Key":"avoid the","Fragments":["duplicate","`reverse`","error","use","mutable-style","object","negation","definition","technical","use","need","train","return-keyword","repetition.","unnecessary","`apply`"]},{"Key":"the duplicate","Fragments":["names"]},{"Key":"duplicate names","Fragments":["which","is","and"]},{"Key":"names which","Fragments":["has"]},{"Key":"which has","Fragments":["some","to"]},{"Key":"has some","Fragments":["interesting","coding","helper","issues.","descriptions"]},{"Key":"some interesting","Fragments":["challenges."]},{"Key":"Since it's","Fragments":["so","so"]},{"Key":"it's so","Fragments":["little","little"]},{"Key":"so little","Fragments":["code,","code,"]},{"Key":"little code,","Fragments":["short","short"]},{"Key":"code, short","Fragments":["names","names"]},{"Key":"short names","Fragments":["feel","don't"]},{"Key":"names feel","Fragments":["more"]},{"Key":"feel more","Fragments":["acceptable"]},{"Key":"more acceptable","Fragments":["to"]},{"Key":"acceptable to","Fragments":["me."]},{"Key":"to me.","Fragments":["But","Perhaps","But","I","The","You're","Why","It"]},{"Key":"me. But","Fragments":["at","I"]},{"Key":"But at","Fragments":["least"]},{"Key":"least `char1`","Fragments":["would"]},{"Key":"`char1` would","Fragments":["probably"]},{"Key":"would probably","Fragments":["be","have","try","be","be","make","cool","aid","have"]},{"Key":"probably be","Fragments":["a","more","more","getting","improved","my","a","vals","vals"]},{"Key":"good idea,","Fragments":["since","but","thanks"]},{"Key":"idea, since","Fragments":["it's"]},{"Key":"since it's","Fragments":["perhaps"]},{"Key":"it's perhaps","Fragments":["not","a"]},{"Key":"perhaps not","Fragments":["obvious","be"]},{"Key":"not obvious","Fragments":["that"]},{"Key":"obvious that","Fragments":["the","the"]},{"Key":"zip creates","Fragments":["pairs"]},{"Key":"creates pairs","Fragments":["of"]},{"Key":"pairs of","Fragments":["characters.","curly","characters.","Chars."]},{"Key":"I actively","Fragments":["want"]},{"Key":"actively want","Fragments":["to"]},{"Key":"using terms","Fragments":["from"]},{"Key":"terms from","Fragments":["the"]},{"Key":"the biology/DNA","Fragments":["domain"]},{"Key":"biology/DNA domain","Fragments":["since"]},{"Key":"domain since","Fragments":["this"]},{"Key":"since this","Fragments":["is","code"]},{"Key":"a general-purpose","Fragments":["class."]},{"Key":"general-purpose class.","Fragments":["It"]},{"Key":"class. It","Fragments":["doesn't","provides","really"]},{"Key":"It doesn't","Fragments":["need","change","really"]},{"Key":"about (be","Fragments":["coupled"]},{"Key":"(be coupled","Fragments":["to)"]},{"Key":"coupled to)","Fragments":["who"]},{"Key":"to) who","Fragments":["uses"]},{"Key":"who uses","Fragments":["it"]},{"Key":"uses it","Fragments":["and"]},{"Key":"it and","Fragments":["for","collect","for","use","it","maybe","store\u0026return","since"]},{"Key":"and for","Fragments":["what.","the","the","the","every","non-progrmaming","the","in","cleaner"]},{"Key":"guess the","Fragments":["only","isssue"]},{"Key":"the only","Fragments":["thing","needed","thing","way","executable","valid","prerequisite","thing"]},{"Key":"thing you","Fragments":["might"]},{"Key":"might want","Fragments":["to","to","them","to","to","to","to","to","to","to","to","to"]},{"Key":"consider is","Fragments":["giving","modifying"]},{"Key":"is giving","Fragments":["the"]},{"Key":"variables less","Fragments":["obscure"]},{"Key":"less obscure","Fragments":["names,"]},{"Key":"obscure names,","Fragments":["maybe"]},{"Key":"names, maybe","Fragments":["something"]},{"Key":"maybe something","Fragments":["related","like"]},{"Key":"something related","Fragments":["to"]},{"Key":"related to","Fragments":["the"]},{"Key":" Spot","Fragments":["on!"]},{"Key":"Yeah right,","Fragments":["a"]},{"Key":"right, a","Fragments":["one-liner."]},{"Key":"a one-liner.","Fragments":[":-)"]},{"Key":"Here's what","Fragments":["others"]},{"Key":"what others","Fragments":["(and","come"]},{"Key":"others (and","Fragments":["esp."]},{"Key":"(and esp.","Fragments":["The"]},{"Key":"esp. The","Fragments":["Great"]},{"Key":"The Great","Fragments":["Martin"]},{"Key":"Great Martin","Fragments":["O.)"]},{"Key":"Martin O.)","Fragments":["have"]},{"Key":"O.) have","Fragments":["to"]},{"Key":"to say:","Fragments":["http://tech.gilt.com/2013/06/18/the-human-side-of-scala/"]},{"Key":"know. Comparing","Fragments":["your"]},{"Key":"Comparing your","Fragments":["code"]},{"Key":"and mine","Fragments":["I"]},{"Key":"mine I","Fragments":["feel"]},{"Key":"feel that","Fragments":["I","the","String","you","pattern-matching","the","the","the"]},{"Key":"I might","Fragments":["overdid","change","not.","have","have","better","give","change","also"]},{"Key":"might overdid","Fragments":["it"]},{"Key":"overdid it","Fragments":[":)",":)"]},{"Key":" Still","Fragments":["I","stuck"]},{"Key":"Still I","Fragments":["kind"]},{"Key":"I kind","Fragments":["of"]},{"Key":"of dislike","Fragments":["the"]},{"Key":"dislike the","Fragments":["monolithic","leading"]},{"Key":"the monolithic","Fragments":["style"]},{"Key":"monolithic style","Fragments":["of"]},{"Key":"style of","Fragments":["this","zipping","the","this"]},{"Key":"of this","Fragments":["solution.","sequence.","exercise","handles","doesn't","class","code","map-replace","fact","exercise","naming","solution","problem!","as","feature.","exercise","exercise.","solution.","solution.","complicated","exercise","site:","problem","```getOrElse```?"]},{"Key":"this solution.","Fragments":["Works","I","In","I","Agree"]},{"Key":"solution. Works","Fragments":["for"]},{"Key":"Works for","Fragments":["now"]},{"Key":"now but","Fragments":["add"]},{"Key":"but add","Fragments":["3"]},{"Key":"add 3","Fragments":["or"]},{"Key":"3 or","Fragments":["4"]},{"Key":"or 4","Fragments":["new","(1000)"]},{"Key":"4 new","Fragments":["rules"]},{"Key":"new rules","Fragments":["and"]},{"Key":"rules and","Fragments":["it","the"]},{"Key":"it becomes","Fragments":["rather"]},{"Key":"becomes rather","Fragments":["unmaintainable."]},{"Key":"I'd at","Fragments":["least"]},{"Key":"least try","Fragments":["to"]},{"Key":"refactor the","Fragments":["predicates","code","predicates","code","\"isDivisible...\"","number"]},{"Key":"the predicates","Fragments":["into","into","into","in"]},{"Key":"predicates into","Fragments":["functions.","their","functions","helpfully"]},{"Key":" -","Fragments":["It's","In","What","Scala","Use","Use","Format","sd","sd","the","I","you","odd","i","constants","parse","your","in","```x","you","try","why","you","some","use","on","allowed","Readability","Reusability","Pattern","the","all","try","Scala","Try","type","I","use","use","use","use","It's","for","existingStudents","db","constants","while","personally","`otherList.take`","`a.zip(b).forall()`","the","`nucleotides`","the","also","use","use","You","The","wordCount","you","you","you"]},{"Key":"- It's","Fragments":["more","a"]},{"Key":"more idiomatic","Fragments":["to","since","by","approach","Scala"]},{"Key":"idiomatic to","Fragments":["factor"]},{"Key":"to factor","Fragments":["out","out"]},{"Key":"factor out","Fragments":["the","a"]},{"Key":"the tests","Fragments":["into",":)","depends","to","to","nor","are","passing","pass.","to","to","pass.","fail","are","failing","a","fail","in","presented","then","of","pass...","does","to","that"]},{"Key":"tests into","Fragments":["separate"]},{"Key":"into separate","Fragments":["functions.","methods?","intermediate"]},{"Key":"separate functions.","Fragments":["In"]},{"Key":"functions. In","Fragments":["this","this"]},{"Key":"case the","Fragments":["functions","DNA","for","response"]},{"Key":"functions are","Fragments":["trivial","more","only","only","usually","you","pure,","named"]},{"Key":"are trivial","Fragments":["but"]},{"Key":"trivial but","Fragments":["it"]},{"Key":"it still","Fragments":["helps","felt","makes"]},{"Key":"still helps","Fragments":["make"]},{"Key":"helps make","Fragments":["the"]},{"Key":"code self","Fragments":["documenting"]},{"Key":"self documenting","Fragments":["and","variable"]},{"Key":"documenting and","Fragments":["easier"]},{"Key":"and easier","Fragments":["to","to","to","way","to"]},{"Key":"- In","Fragments":["Scala"]},{"Key":"In Scala","Fragments":["**if**","it's","Strings","Maps","the","```Map```s","better","a"]},{"Key":"Scala **if**","Fragments":["is"]},{"Key":"**if** is","Fragments":["an"]},{"Key":"an expression","Fragments":["rather","that","in","```x"]},{"Key":"expression rather","Fragments":["than"]},{"Key":"than a","Fragments":["statement.","glorified","`Boolean`","few","regex.","class.","left-fold.","String","finished","`match`"]},{"Key":"a statement.","Fragments":["That"]},{"Key":"statement. That","Fragments":["means"]},{"Key":"That means","Fragments":["it","everything","adding","if"]},{"Key":"means it","Fragments":["evaluates","has"]},{"Key":"it evaluates","Fragments":["to"]},{"Key":"evaluates to","Fragments":["a","boolean"]},{"Key":"a value.","Fragments":["The"]},{"Key":"value. The","Fragments":["value"]},{"Key":"The value","Fragments":["of"]},{"Key":"value of","Fragments":["the","```hey```","the","the","the","pattern","the","`s.toUpperCase.sorted`","using","the","the","the","\"max\"","```nucleotidecounts```?","the","13.","the","Char.isLower","input","the"]},{"Key":"expression in","Fragments":["the","your","```isValidTriangle```","Scala","unnecessary","your"]},{"Key":"the **if**,","Fragments":["**else"]},{"Key":"**if**, **else","Fragments":["if**"]},{"Key":"**else if**","Fragments":["or"]},{"Key":"if** or","Fragments":["**else**"]},{"Key":"or **else**","Fragments":["block"]},{"Key":"**else** block","Fragments":["becomes"]},{"Key":"block becomes","Fragments":["the"]},{"Key":"becomes the","Fragments":["result"]},{"Key":"the result","Fragments":["of","if","of","is","of","of","of","of","you","at","of","of","and","of","to"]},{"Key":"result of","Fragments":["the","`flatMap`.","your","zip","```mapValues```.","the","being","the","the","not","the"]},{"Key":"the expression.","Fragments":["Rather"]},{"Key":"expression. Rather","Fragments":["than"]},{"Key":"Rather than","Fragments":["using","calling","splitting","use","using","using","splitting,","creating"]},{"Key":"than using","Fragments":["**return**","regex.","`scala.math.pow`","`letter","multiple","the","List.max.","swap"]},{"Key":"using **return**","Fragments":["to"]},{"Key":"**return** to","Fragments":["provide"]},{"Key":"to provide","Fragments":["the","the"]},{"Key":"provide the","Fragments":["function's","reasoning","return","count..."]},{"Key":"the function's","Fragments":["result","return","return"]},{"Key":"function's result","Fragments":["you"]},{"Key":"result you","Fragments":["can","want/expect."]},{"Key":"can write","Fragments":["it","`_._1.nonEmpty`","this"]},{"Key":"write it","Fragments":["something","once","to","w/"]},{"Key":" if(isShouting(speech))","Fragments":["\"Woah,"]},{"Key":"if(isShouting(speech)) \"Woah,","Fragments":["chill"]},{"Key":"\"Woah, chill","Fragments":["out!\"","out!\"","out\"","out!\""]},{"Key":" else","Fragments":["if(isQuestion(speech))","if(isNothing(speech))","\"Whatever.\"","if","if","\"Whatever.\"","if","if","\"Whatever.\"","if","return(s1.zip(s2).filter{case(x,","if","assert(!Year(year).isLeap)","if","if","{","if","if"]},{"Key":"else if(isQuestion(speech))","Fragments":["\"Sure.\""]},{"Key":"else if(isNothing(speech))","Fragments":["\"Fine."]},{"Key":"if(isNothing(speech)) \"Fine.","Fragments":["Be"]},{"Key":" Evaluating","Fragments":["that"]},{"Key":"Evaluating that","Fragments":["expression"]},{"Key":"that expression","Fragments":["will","is"]},{"Key":"expression will","Fragments":["result"]},{"Key":"will result","Fragments":["in"]},{"Key":"result in","Fragments":["String","a","an"]},{"Key":"in String","Fragments":["value."]},{"Key":"String value.","Fragments":["If"]},{"Key":"value. If","Fragments":["that"]},{"Key":"If that","Fragments":["expression","answer"]},{"Key":"expression is","Fragments":["the","superfluous","a","that","the"]},{"Key":"your function","Fragments":["that","body.","is","an","violates","generateRandomOfLength"]},{"Key":"function that","Fragments":["will","squares","returns","makes","simply","is","expresses","I","can","determines","you","uses","was"]},{"Key":"be the","Fragments":["function's","result","value","style","exception","benefit","same.","value","same","return","accumulator.","most","same","most","cause","most"]},{"Key":"function's return","Fragments":["value.","value"]},{"Key":"return value.","Fragments":["There","It's"]},{"Key":"value. There","Fragments":["are"]},{"Key":"There are","Fragments":["a","certainly","as","some","easier","always","ways","those"]},{"Key":"few rare","Fragments":["cases"]},{"Key":"rare cases","Fragments":["where"]},{"Key":"cases where","Fragments":["return","other","the"]},{"Key":"where return","Fragments":["is"]},{"Key":"return is","Fragments":["useful","necessary","encouraged","usually"]},{"Key":"is useful","Fragments":["in","for"]},{"Key":"useful in","Fragments":["Scala,","the"]},{"Key":"in Scala,","Fragments":["but","and","use","and","and","and"]},{"Key":"Scala, but","Fragments":["in","I'm"]},{"Key":"but in","Fragments":["general","this","general,","this","general:","this","your","Scala","this","that"]},{"Key":"in general","Fragments":["it's","prefer","you","I","too"]},{"Key":"general it's","Fragments":["a"]},{"Key":"it's a","Fragments":["code","`final","little","good","form","bad","sublist","question,","string.","hangup","big","little","one","matter","matter"]},{"Key":"a code","Fragments":["smell","block","block"]},{"Key":"code smell","Fragments":["that"]},{"Key":"smell that","Fragments":["means"]},{"Key":"that means","Fragments":["there's"]},{"Key":"means there's","Fragments":["probably"]},{"Key":"there's probably","Fragments":["a"]},{"Key":"a cleaner","Fragments":["way","way","way","API"]},{"Key":"cleaner way","Fragments":["to","to","to"]},{"Key":"implement what","Fragments":["you're"]},{"Key":"what you're","Fragments":["trying","doing","checking,","doing","trying"]},{"Key":"you're trying","Fragments":["to","to"]},{"Key":"trying to","Fragments":["do.","minimize","decide","avoid...","extract","avoid","grasp","figure","solve","use","do","remember","do","convert","get","digest","be","achieve","understand","use","be","do","yield"]},{"Key":"- What","Fragments":["should"]},{"Key":"What should","Fragments":["be","I","this"]},{"Key":"result if","Fragments":["a"]},{"Key":"a question","Fragments":["ends","not","instead","mark.","mark).","that","if","mark","but","at"]},{"Key":"question ends","Fragments":["with"]},{"Key":"ends with","Fragments":["some","a","?.","a"]},{"Key":"with some","Fragments":["extra","processing.","if/then"]},{"Key":"some extra","Fragments":["spaces?"]},{"Key":"extra spaces?","Fragments":["It's"]},{"Key":"spaces? It's","Fragments":["probably"]},{"Key":"It's probably","Fragments":["better","as"]},{"Key":"probably better","Fragments":["to"]},{"Key":"to trim","Fragments":["the","and","at","the"]},{"Key":"trim the","Fragments":["input","tail","code"]},{"Key":"input before","Fragments":["checking"]},{"Key":"before checking","Fragments":["if"]},{"Key":"checking if","Fragments":["it","name","divisor","`p","no"]},{"Key":"if it","Fragments":["ends","is","shout","have","is","is","is","would","adds","does","is","cannot.","adds","is","is","works","is","was","improves","is","really","is","is","contains","is"]},{"Key":"it ends","Fragments":["with","up"]},{"Key":"- Scala","Fragments":["lets","is"]},{"Key":"Scala lets","Fragments":["you"]},{"Key":"lets you","Fragments":["treat"]},{"Key":"you treat","Fragments":["Strings","msg"]},{"Key":"treat Strings","Fragments":["a"]},{"Key":"Strings a","Fragments":["lot"]},{"Key":"lot like","Fragments":["collections"]},{"Key":"like collections","Fragments":["of"]},{"Key":"collections of","Fragments":["Characters"]},{"Key":"of Characters","Fragments":["(see"]},{"Key":"Characters (see","Fragments":["StringOps"]},{"Key":"(see StringOps","Fragments":["in"]},{"Key":"StringOps in","Fragments":["the","the","the","the","the"]},{"Key":"the documentation).","Fragments":["You"]},{"Key":"documentation). You","Fragments":["might"]},{"Key":"might find","Fragments":["the"]},{"Key":"the exists()","Fragments":["function"]},{"Key":"exists() function","Fragments":["useful"]},{"Key":"function useful","Fragments":["for"]},{"Key":"useful for","Fragments":["detecting","the","text","string","this","text"]},{"Key":"for detecting","Fragments":["the","shouting"]},{"Key":"detecting the","Fragments":["shouting"]},{"Key":"the shouting","Fragments":["case.","case","part."]},{"Key":" Great","Fragments":["start.","suggestions","idea","use"]},{"Key":"Great start.","Fragments":["Keep"]},{"Key":"start. Keep","Fragments":["it"]},{"Key":"Keep it","Fragments":["up."]},{"Key":" Made","Fragments":["more"]},{"Key":"Made more","Fragments":["readable"]},{"Key":"readable per","Fragments":["suggestions"]},{"Key":"per suggestions","Fragments":["@jason"]},{"Key":"suggestions @jason","Fragments":["."]},{"Key":"version is","Fragments":["longer","much","better","equal","more"]},{"Key":"is longer","Fragments":["but"]},{"Key":"longer but","Fragments":["more"]},{"Key":"but more","Fragments":["understandable","descriptive","readable.","readable?"]},{"Key":"more understandable","Fragments":["and"]},{"Key":"understandable and","Fragments":["maintainable."]},{"Key":"are prepared","Fragments":["to"]},{"Key":"prepared to","Fragments":["use"]},{"Key":"use tuples,","Fragments":["you"]},{"Key":"tuples, you","Fragments":["can"]},{"Key":"avoid having","Fragments":["to","var","to"]},{"Key":"call `map`","Fragments":["and"]},{"Key":"and `toMap`","Fragments":["on"]},{"Key":"`toMap` on","Fragments":["the","the"]},{"Key":" Optionally,","Fragments":["you"]},{"Key":"Optionally, you","Fragments":["may"]},{"Key":"may choose","Fragments":["to","not"]},{"Key":"choose to","Fragments":["use","put","follow","or"]},{"Key":"use `for`","Fragments":["comprehensions"]},{"Key":"`for` comprehensions","Fragments":["for"]},{"Key":"comprehensions for","Fragments":["the"]},{"Key":"the sake","Fragments":["of","of","of","of"]},{"Key":"sake of","Fragments":["readability,","explicitness,","nitpicking:","it"]},{"Key":"of readability,","Fragments":["since","but","but","maintainability"]},{"Key":"readability, since","Fragments":["they"]},{"Key":"since they","Fragments":["compile","have","are","distract","only","aren't","aren't"]},{"Key":"they compile","Fragments":["down"]},{"Key":"compile down","Fragments":["to"]},{"Key":"to invocations","Fragments":["of"]},{"Key":"invocations of","Fragments":["`flatMap`."]},{"Key":" have","Fragments":["the","fun!"]},{"Key":"the ```match```","Fragments":["clause"]},{"Key":"```match``` clause","Fragments":["as"]},{"Key":"clause as","Fragments":["a"]},{"Key":"private helper","Fragments":["function?","function","function","function","function","function","function","method","function(s).","functions","functions","functions","methods","functions","function","function","functions","function","method","methods","functions","function","functions","function","function(s)?","functions","function","functions","functions!","methods","function","method.","to","methods","function","function","functions","function","method"]},{"Key":" Done","Fragments":["for","in"]},{"Key":"Done for","Fragments":["fun"]},{"Key":"for fun","Fragments":["with","you","you"]},{"Key":"fun with","Fragments":["pattern","function"]},{"Key":" Conversion","Fragments":["from"]},{"Key":"Conversion from","Fragments":["Char"]},{"Key":"from Char","Fragments":["to"]},{"Key":"Char to","Fragments":["Int","display"]},{"Key":"to Int","Fragments":["is"]},{"Key":"Int is","Fragments":["implicit,"]},{"Key":"is implicit,","Fragments":["you"]},{"Key":"implicit, you","Fragments":["can"]},{"Key":"As another","Fragments":["challenge","exercise","solution","solution","solution","exercise:","possibility:","solution","approach"]},{"Key":"another challenge","Fragments":["you","after"]},{"Key":"challenge you","Fragments":["might","may"]},{"Key":"use function","Fragments":["\"groupBy\".","\"grade\""]},{"Key":"* You","Fragments":["can","can","should"]},{"Key":"can try","Fragments":["to","just","-","something","to","to","using","out","to","Scala"]},{"Key":"use immutable","Fragments":["Map","datastructures","collections","map"]},{"Key":"Map and","Fragments":["foldLeft","a","foreach)."]},{"Key":"and foldLeft","Fragments":["for"]},{"Key":"foldLeft for","Fragments":["challange","my"]},{"Key":"* I","Fragments":["think","would","suspect","believe","think"]},{"Key":"think the","Fragments":["require","code","idea","problem","code","latter","function","dropWhile","check","single","pattern","matches","\"points\"","question","first","IllegalArgumentException","frequencies","```++```","toString","reg","reason","explicit","non-Map"]},{"Key":"the require","Fragments":["is"]},{"Key":"require is","Fragments":["bit"]},{"Key":"is bit","Fragments":["over","better."]},{"Key":"bit over","Fragments":["complicated","engineered"]},{"Key":"over complicated","Fragments":["instead"]},{"Key":"complicated instead","Fragments":["of"]},{"Key":"of filtering,","Fragments":["etc."]},{"Key":"filtering, etc.","Fragments":["you"]},{"Key":"etc. you","Fragments":["can"]},{"Key":"try just","Fragments":["to"]},{"Key":"just to","Fragments":["pattern","not","get","do","create","hold","use","figure","catch","learn","look"]},{"Key":"match input","Fragments":["dna"]},{"Key":"input dna","Fragments":["string"]},{"Key":"* It","Fragments":["is","might"]},{"Key":"It is","Fragments":["considered","described","my","possible","indeed!","well","nitpicking","too","automatically","extra","possible","already","quite","much","quite","very","the"]},{"Key":"is considered","Fragments":["good","to","idiomatic"]},{"Key":"considered good","Fragments":["practice"]},{"Key":"good practice","Fragments":["to","to","in","to"]},{"Key":"practice to","Fragments":["put","explicitly","use"]},{"Key":"put \"helping\"","Fragments":["static"]},{"Key":"\"helping\" static","Fragments":["values"]},{"Key":"static values","Fragments":["-"]},{"Key":"values -","Fragments":["like"]},{"Key":"- like","Fragments":["nucl"]},{"Key":"like nucl","Fragments":["in"]},{"Key":"nucl in","Fragments":["this"]},{"Key":"this case,","Fragments":["into","it","so","I","you","but","because"]},{"Key":"case, into","Fragments":["companion"]},{"Key":"into companion","Fragments":["object","object.","object"]},{"Key":" no","Fragments":["\"return\"","need","programming","need"]},{"Key":"no \"return\"","Fragments":["in","in"]},{"Key":"\"return\" in","Fragments":["Scala!","Scala!","Scala!","Scala!"]},{"Key":"in Scala!","Fragments":[":-)","Scala","I",":-)",":-)","(there","(there",";-)"]},{"Key":" \"total\"","Fragments":["should"]},{"Key":"\"total\" should","Fragments":["just","be"]},{"Key":"should just","Fragments":["be","have"]},{"Key":"be implemented","Fragments":["with","differently","using","without"]},{"Key":"implemented with","Fragments":["the","```foldLeft```."]},{"Key":"the help","Fragments":["of"]},{"Key":"help of","Fragments":["\"square\"?!"]},{"Key":"could make","Fragments":["\"square\"","```sides```","your","use","your","sense","the","it","some","it","it","use","the","use","the"]},{"Key":"make \"square\"","Fragments":["tail-recursive."]},{"Key":"Well, yes","Fragments":["-"]},{"Key":"yes -","Fragments":["so"]},{"Key":"so what's","Fragments":["wrong"]},{"Key":"what's wrong","Fragments":["with","w/"]},{"Key":"wrong with","Fragments":["having","using","`maxNumRobotNames`?","how"]},{"Key":"with having","Fragments":["an"]},{"Key":"having an","Fragments":["\"else\"","_"]},{"Key":"an \"else\"","Fragments":["instead"]},{"Key":"\"else\" instead","Fragments":["of"]},{"Key":"a \"return\"?","Fragments":[":-)"]},{"Key":"And about","Fragments":["not"]},{"Key":"about not","Fragments":["loosing"]},{"Key":"not loosing","Fragments":["prior"]},{"Key":"loosing prior","Fragments":["calculations:"]},{"Key":"prior calculations:","Fragments":["What"]},{"Key":"calculations: What","Fragments":["about"]},{"Key":"What about","Fragments":["using","making","a","having","input","to"]},{"Key":"about using","Fragments":["a","'.'","pattern","a","the","a","`map`","foldLeft?"]},{"Key":"Thanks abo64.","Fragments":["The","I"]},{"Key":"abo64. The","Fragments":["return"]},{"Key":"The return","Fragments":["is","value"]},{"Key":"is necessary","Fragments":["unless","to","to"]},{"Key":"necessary unless","Fragments":["you"]},{"Key":"unless you","Fragments":["pair","specifically"]},{"Key":"you pair","Fragments":["the"]},{"Key":"pair the","Fragments":["if"]},{"Key":"the if","Fragments":["with","tests","statements","else","statement","statements","statements","statements","statement","statement"]},{"Key":"if with","Fragments":["an"]},{"Key":" Problem","Fragments":["with"]},{"Key":"Problem with","Fragments":["using"]},{"Key":"with using","Fragments":["square","an","these?","`apply`","pattern"]},{"Key":"using square","Fragments":["to"]},{"Key":"square to","Fragments":["implement","be"]},{"Key":"implement total","Fragments":["you"]},{"Key":"total you","Fragments":["loose"]},{"Key":"you loose","Fragments":["the"]},{"Key":"loose the","Fragments":["optimisation"]},{"Key":"the optimisation","Fragments":["of"]},{"Key":"optimisation of","Fragments":["not"]},{"Key":"of not","Fragments":["recalculating","reading","complying","thinking","modifying","having","calling"]},{"Key":"not recalculating","Fragments":["what"]},{"Key":"recalculating what","Fragments":["you"]},{"Key":"have already","Fragments":["calculated.","filtered","a","factored","been"]},{"Key":" I've","Fragments":["built","very","heard","noticed","forget","also","tried","also","used","also","updated","seen","forget","been","implemented","added","written"]},{"Key":"I've built","Fragments":["a"]},{"Key":"built a","Fragments":["version,"]},{"Key":"a version,","Fragments":["that"]},{"Key":"version, that","Fragments":["I'll"]},{"Key":"that I'll","Fragments":["upload"]},{"Key":"I'll upload","Fragments":["in"]},{"Key":"upload in","Fragments":["a"]},{"Key":"a minute,","Fragments":["which"]},{"Key":"minute, which","Fragments":["uses"]},{"Key":"which uses","Fragments":["tail-recursion","\"\\w\","]},{"Key":"uses tail-recursion","Fragments":["and"]},{"Key":"tail-recursion and","Fragments":["combines"]},{"Key":"and combines","Fragments":["the"]},{"Key":"combines the","Fragments":["recursive"]},{"Key":"the recursive","Fragments":["algorithms","one.","approach","permutation","implementation","way,"]},{"Key":"recursive algorithms","Fragments":["in"]},{"Key":"algorithms in","Fragments":["my"]},{"Key":"my first","Fragments":["iteration.","go","attempt","submit.","Scala","one.","solution","try.","submit.","iteration","submission","pass","time","program","language","Scala","draft.","solution"]},{"Key":" Slightly","Fragments":["happier","neater","refined"]},{"Key":"Slightly happier","Fragments":["about"]},{"Key":"happier about","Fragments":["combining"]},{"Key":"about combining","Fragments":["and"]},{"Key":"combining and","Fragments":["therefore"]},{"Key":"and therefore","Fragments":["reusing"]},{"Key":"therefore reusing","Fragments":["the"]},{"Key":"reusing the","Fragments":["algorithm,","code?"]},{"Key":"the algorithm,","Fragments":["except"]},{"Key":"algorithm, except","Fragments":["it"]},{"Key":"except it","Fragments":["had"]},{"Key":"to return","Fragments":["a","the","a","an","the","a","Int."]},{"Key":"a tuple","Fragments":["which","in","as"]},{"Key":"tuple which","Fragments":["feels"]},{"Key":"which feels","Fragments":["messy"]},{"Key":"feels messy","Fragments":[":-/"]},{"Key":" Whoops,","Fragments":["I","somehow","left"]},{"Key":"Whoops, I","Fragments":["somehow"]},{"Key":"I somehow","Fragments":["missed"]},{"Key":"somehow missed","Fragments":["that,"]},{"Key":"missed that,","Fragments":["thanks"]},{"Key":"that, thanks","Fragments":[":)"]},{"Key":"of filter+take","Fragments":["on"]},{"Key":"filter+take on","Fragments":["Random."]},{"Key":" missing:","Fragments":["the","the"]},{"Key":"missing: the","Fragments":["check","check","check"]},{"Key":"the check","Fragments":["for","in","for","is","as","for","for","to","for","anyway.","for","to","for"]},{"Key":"check for","Fragments":["already","a","emptiness.","already","0","```null```","the","all","the","already","already","you","already","letters","an","uniqueness","previously","\"is","already","already","already","that","all","already","equality","```isEmpty```.","already"]},{"Key":"for already","Fragments":["used","used","used","used","used","used","used","used","used","used"]},{"Key":"already used","Fragments":["names.","names.","names.","names.","names?","names.","names.","names.","names.","names."]},{"Key":"I actually","Fragments":["find","use","really","prefer","don't"]},{"Key":"actually find","Fragments":["for"]},{"Key":"find for","Fragments":["comprehensions"]},{"Key":"for comprehensions","Fragments":["to","that","would","apparently"]},{"Key":"comprehensions to","Fragments":["be"]},{"Key":"readable than","Fragments":["flatMaps.","using","the","\"==","my","the","\"replaceAll\".","\"number","simple","```exists```","using"]},{"Key":"than flatMaps.","Fragments":["Plus"]},{"Key":"flatMaps. Plus","Fragments":["it"]},{"Key":"Plus it","Fragments":["gives"]},{"Key":"it gives","Fragments":["you","the","a"]},{"Key":"gives you","Fragments":["the","always"]},{"Key":"the option","Fragments":["to"]},{"Key":"option to","Fragments":["filter"]},{"Key":"to filter","Fragments":["on","out","the"]},{"Key":"filter on","Fragments":["them","`isAnagram(entry,"]},{"Key":"on them","Fragments":["too."]},{"Key":"them too.","Fragments":["As"]},{"Key":"too. As","Fragments":["you"]},{"Key":"As you","Fragments":["say,","can","duplicated","say","can"]},{"Key":"you say,","Fragments":["probably"]},{"Key":"say, probably","Fragments":["a"]},{"Key":"of taste","Fragments":[";)","I",":)","to"]},{"Key":" Sometimes","Fragments":["I"]},{"Key":"Sometimes I","Fragments":["have"]},{"Key":"have doubts","Fragments":["about"]},{"Key":"doubts about","Fragments":["those"]},{"Key":"those short","Fragments":["for-comprehensions"]},{"Key":"short for-comprehensions","Fragments":["-"]},{"Key":"for-comprehensions -","Fragments":["oftentimes"]},{"Key":"- oftentimes","Fragments":["I"]},{"Key":"oftentimes I","Fragments":["prefer"]},{"Key":"prefer a","Fragments":["```flatMap```","single","```require```","```foldLeft```"]},{"Key":"a ```flatMap```","Fragments":["then."]},{"Key":"```flatMap``` then.","Fragments":["But"]},{"Key":"then. But","Fragments":["that"]},{"Key":"But that","Fragments":["might","may","way"]},{"Key":"that might","Fragments":["be","do","return","clarify","be"]},{"Key":"just a","Fragments":["personal","little","first","few","complex","matter","module","basic","function","few","bit","case","simple","simple","simple","simple","tiny"]},{"Key":"a personal","Fragments":["taste"]},{"Key":"personal taste","Fragments":["and","and","here."]},{"Key":"taste and","Fragments":["habit","style,"]},{"Key":"and habit","Fragments":["thing."]},{"Key":"Perhaps a","Fragments":["type","bit"]},{"Key":"a type","Fragments":["alias","alias,","cast","alias","alias?"]},{"Key":"alias for","Fragments":["```Kid```","the","String."]},{"Key":"for ```Kid```","Fragments":["might"]},{"Key":"```Kid``` might","Fragments":["improve"]},{"Key":"might improve","Fragments":["readability?"]},{"Key":"the use","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"the helper","Fragments":["class","method","methods,","methods","functions","functions","function:"]},{"Key":"helper class","Fragments":["for"]},{"Key":"class for","Fragments":["semantic","isSilence/isShouting/isQuestion"]},{"Key":"for semantic","Fragments":["clarity."]},{"Key":"semantic clarity.","Fragments":["Also"]},{"Key":"clarity. Also","Fragments":["your"]},{"Key":"Also your","Fragments":["chaining"]},{"Key":"your chaining","Fragments":["of"]},{"Key":"chaining of","Fragments":["operators"]},{"Key":"of operators","Fragments":["to"]},{"Key":"operators to","Fragments":["determine","be"]},{"Key":"to determine","Fragments":["if","what","what"]},{"Key":"determine if","Fragments":["`isAYell`"]},{"Key":"if `isAYell`","Fragments":["is"]},{"Key":"`isAYell` is","Fragments":["quite"]},{"Key":"Ok, guess","Fragments":["I"]},{"Key":"guess I","Fragments":["can","got","removed"]},{"Key":"can accept","Fragments":["that."]},{"Key":"accept that.","Fragments":[":-)"]},{"Key":" One","Fragments":["last","thing","may","nitpick:","thing","tiny","more","case","could","related,","downside","really","tiny","thing","of","question:","possible","reason","of","reason","could","thing"]},{"Key":"One last","Fragments":["small"]},{"Key":"last small","Fragments":["thing:"]},{"Key":"small thing:","Fragments":["You","you"]},{"Key":"thing: You","Fragments":["might"]},{"Key":"consider using","Fragments":["```_.take(n)```","```withDefaultValue```","the","type","type","pattern","```number.head```","a","the","a","regular","a","pattern","```exists```","constants","regular"]},{"Key":"using ```_.take(n)```","Fragments":["as"]},{"Key":"```_.take(n)``` as","Fragments":["argument"]},{"Key":"as argument","Fragments":["to","..."]},{"Key":"argument to","Fragments":["```nth```.","oneOf.","\"count\"."]},{"Key":"to ```nth```.","Fragments":["Makes"]},{"Key":"```nth```. Makes","Fragments":["it"]},{"Key":"Makes it","Fragments":["easier"]},{"Key":"and understand","Fragments":["IMHO.","what","it","the","monads","what's","versus"]},{"Key":" Thanks!","Fragments":[":-)","I","The","It's","Maybe"]},{"Key":"The `Stream`","Fragments":["is"]},{"Key":"`Stream` is","Fragments":["not"]},{"Key":"not necessary,","Fragments":["just","the"]},{"Key":"necessary, just","Fragments":["a"]},{"Key":"little optimisation","Fragments":["so"]},{"Key":"optimisation so","Fragments":["that"]},{"Key":"it performs","Fragments":["the"]},{"Key":"performs the","Fragments":["transformations"]},{"Key":"the transformations","Fragments":["lazily."]},{"Key":"transformations lazily.","Fragments":["When"]},{"Key":"lazily. When","Fragments":["we"]},{"Key":"When we","Fragments":["ask"]},{"Key":"we ask","Fragments":["for"]},{"Key":"ask for","Fragments":["a","the"]},{"Key":"a day","Fragments":["that's"]},{"Key":"day that's","Fragments":["closer"]},{"Key":"that's closer","Fragments":["to"]},{"Key":"closer to","Fragments":["the","the","the"]},{"Key":"the beginning","Fragments":["of","of","and","until","and","using","(ideally"]},{"Key":"beginning of","Fragments":["the","the"]},{"Key":"the month","Fragments":["(e.g."]},{"Key":"month (e.g.","Fragments":["2nd"]},{"Key":"(e.g. 2nd","Fragments":["day)"]},{"Key":"2nd day)","Fragments":["we"]},{"Key":"day) we","Fragments":["only"]},{"Key":"we only","Fragments":["do"]},{"Key":"only do","Fragments":["the"]},{"Key":"the necessary","Fragments":["transformations","value."]},{"Key":"necessary transformations","Fragments":["up"]},{"Key":"transformations up","Fragments":["to"]},{"Key":"up to","Fragments":["the","something","n","help","you.","speed","passing"]},{"Key":"of finding","Fragments":["that"]},{"Key":"finding that","Fragments":["2nd"]},{"Key":"that 2nd","Fragments":["day."]},{"Key":"2nd day.","Fragments":["The"]},{"Key":"day. The","Fragments":["rest"]},{"Key":"The rest","Fragments":["is","was","return","of"]},{"Key":"rest is","Fragments":["not"]},{"Key":"The Java","Fragments":["8","concurrency"]},{"Key":"Java 8","Fragments":["stuff,","time","time","with"]},{"Key":"8 stuff,","Fragments":["yeah"]},{"Key":"stuff, yeah","Fragments":["I"]},{"Key":"yeah I","Fragments":["agree,"]},{"Key":"I agree,","Fragments":["was","more","but"]},{"Key":"agree, was","Fragments":["too"]},{"Key":"was too","Fragments":["lazy","fixated"]},{"Key":"too lazy","Fragments":["to","to"]},{"Key":"lazy to","Fragments":["struggle","type","initialize","not"]},{"Key":"to struggle","Fragments":["with"]},{"Key":"struggle with","Fragments":["the"]},{"Key":"the `GregorianCalendar`.","Fragments":["Life's"]},{"Key":"`GregorianCalendar`. Life's","Fragments":["too"]},{"Key":"Life's too","Fragments":["short"]},{"Key":"too short","Fragments":[":-)"]},{"Key":" wow,","Fragments":["this"]},{"Key":"wow, this","Fragments":["looks"]},{"Key":"this looks","Fragments":["interesting!","good!","more","good","now","really"]},{"Key":"looks interesting!","Fragments":[":-)"]},{"Key":" but","Fragments":["is","I","isn't","why","ok,","if","this","I","your","as","a","I","your","couldn't","imagine","the","if"]},{"Key":"but is","Fragments":["a","it","also","very","not","not","it","actually"]},{"Key":"a ```Stream```","Fragments":["really"]},{"Key":"```Stream``` really","Fragments":["necessary?"]},{"Key":"really necessary?","Fragments":["or"]},{"Key":"necessary? or","Fragments":["would"]},{"Key":"or would","Fragments":["not"]},{"Key":"would not","Fragments":["a","have","use","expose","be","have","prescribe"]},{"Key":"a ```Range```","Fragments":["suffice?","and","and","a","can"]},{"Key":"and isn't","Fragments":["it"]},{"Key":"bit cheating","Fragments":["to"]},{"Key":"cheating to","Fragments":["use"]},{"Key":"the Java","Fragments":["8","convenience","methods,"]},{"Key":"8 time","Fragments":["lib","lib."]},{"Key":"time lib","Fragments":["instead"]},{"Key":"lib instead","Fragments":["of"]},{"Key":"of struggling","Fragments":["w/"]},{"Key":"struggling w/","Fragments":["the"]},{"Key":"w/ the","Fragments":["good","```grouped```","same","values","Option","```::```","syntax","named","default","right","right"]},{"Key":"the good","Fragments":["old","old","part","old"]},{"Key":"good old","Fragments":["```GregorianCalendar```?","Java","Java"]},{"Key":"old ```GregorianCalendar```?","Fragments":[";-)"]},{"Key":"Thank you,","Fragments":["but"]},{"Key":"you, but","Fragments":["I"]},{"Key":"don't know","Fragments":["if","how","whether","if","why)","exactly","the","a","if","yet","if","closed","what","about","if","which","whether","if","what's"]},{"Key":"know if","Fragments":["nucleotideCounts","that's","it's","you","is","there's","using","```toSegmentedString```","there's","there","I'm"]},{"Key":"if nucleotideCounts","Fragments":["now"]},{"Key":"nucleotideCounts now","Fragments":["it's"]},{"Key":"now it's","Fragments":["better","functioning"]},{"Key":"it's better","Fragments":["because","to","for","to"]},{"Key":"better because","Fragments":["I","it"]},{"Key":"because I","Fragments":["have","have","no","tried","thought","didn't","don't","played","liked","couldn't","really"]},{"Key":"a tricky","Fragments":["to"]},{"Key":"tricky to","Fragments":["output"]},{"Key":"to output","Fragments":["zero"]},{"Key":"output zero","Fragments":["counts"]},{"Key":"zero counts","Fragments":["for"]},{"Key":"counts for","Fragments":["the","all","the"]},{"Key":"the nucleotides","Fragments":["if","function","list"]},{"Key":"nucleotides if","Fragments":["they"]},{"Key":"not in","Fragments":["the","Scala!","a","comparison?","uppercase."]},{"Key":"You don't","Fragments":["have","need","need","actually","need","have","strictly","need","need","need","need","have","need","need","need","need","need"]},{"Key":"change a","Fragments":["String"]},{"Key":"String to","Fragments":["a","include","some","a","Message","encode"]},{"Key":"a char","Fragments":["array,"]},{"Key":"char array,","Fragments":["it"]},{"Key":"array, it","Fragments":["is"]},{"Key":"already also","Fragments":["a"]},{"Key":"Your validity","Fragments":["check"]},{"Key":"check could","Fragments":["then"]},{"Key":"could then","Fragments":["be","declare","live","be","just"]},{"Key":"then be","Fragments":["easier","summed","used","summed"]},{"Key":"be easier","Fragments":["formulated","to","to","to","implemented","to","to","not","to","here"]},{"Key":"easier formulated","Fragments":["w/"]},{"Key":"formulated w/","Fragments":["```forall```,"]},{"Key":"w/ ```forall```,","Fragments":["and"]},{"Key":"```forall```, and","Fragments":["there"]},{"Key":"and there","Fragments":["is","are","is","is","might","is","is","is","is","is"]},{"Key":"there is","Fragments":["Predef's","at","no","a","any","also","no","really","`identity`","no","a","one","no","`.find`","a","some","```.nonEmpty```.","a","\"require\"","a","no","also","some","no","some","no","a","no","a","a","a","require","\"identity\"","String/Seq","a","an","```exists```","the","also","a","some","```require```","always","some","an","\"require\"","the","no","any","some","the","\"require\"","the","a","\"require\".","a","either","a","a","a"]},{"Key":"is Predef's","Fragments":["```require```"]},{"Key":"Predef's ```require```","Fragments":["for","for","for","for"]},{"Key":"```require``` for","Fragments":["these","each","the","validation.","the"]},{"Key":"for these","Fragments":["checks."]},{"Key":"these checks.","Fragments":["You"]},{"Key":"checks. You","Fragments":["could"]},{"Key":"could do","Fragments":["this","that,","even","better","compressed.count(_!=_)","no","the","everything","something","w/o","it","with"]},{"Key":"do this","Fragments":["check","replacement!","replacement!","as","for","with","with","-","purely","with","than","using"]},{"Key":"this check","Fragments":["just","for","for","for"]},{"Key":"check just","Fragments":["once"]},{"Key":"just once","Fragments":["in","at"]},{"Key":"once in","Fragments":["the","a","the"]},{"Key":" There","Fragments":["is","must","is","is","is","is.","are","also","is","is","is","are","is","are","is","are","is","are","is","are","should","isn't","is","however"]},{"Key":"also ```mapValues,","Fragments":["identity"]},{"Key":"```mapValues, identity","Fragments":["(and"]},{"Key":"identity (and","Fragments":["groupBy)```"]},{"Key":"(and groupBy)```","Fragments":["to"]},{"Key":"groupBy)``` to","Fragments":["simplify"]},{"Key":"to simplify","Fragments":["```nucleotideCounts```.","try","the","your","the","your","your"]},{"Key":"simplify ```nucleotideCounts```.","Fragments":[":-)"]},{"Key":"looks great.","Fragments":["For"]},{"Key":"great. For","Fragments":["simple"]},{"Key":"For simple","Fragments":["cases"]},{"Key":"simple cases","Fragments":["like","I"]},{"Key":"cases like","Fragments":["this"]},{"Key":"this I","Fragments":["love","see"]},{"Key":"I love","Fragments":["what","`str.forall(_.isWhitespace)`!","this","the","that","this,","this.","how","the"]},{"Key":"love what","Fragments":["you've"]},{"Key":"what you've","Fragments":["done."]},{"Key":"you've done.","Fragments":["Something"]},{"Key":"done. Something","Fragments":["I"]},{"Key":"Something I","Fragments":["would"]},{"Key":"would change","Fragments":["is","are"]},{"Key":"change is","Fragments":["that","to","the","isolated"]},{"Key":"the methods","Fragments":["you're","because","on","on","are","on","needs","are","of","for"]},{"Key":"methods you're","Fragments":["using"]},{"Key":"you're using","Fragments":["in","it","them","an","Scala\""]},{"Key":"using in","Fragments":["Statement"]},{"Key":"in Statement","Fragments":["could"]},{"Key":"Statement could","Fragments":["have"]},{"Key":"type removed.","Fragments":["With"]},{"Key":"removed. With","Fragments":["a"]},{"Key":"With a","Fragments":["single"]},{"Key":"single line","Fragments":["statement"]},{"Key":"line statement","Fragments":["that"]},{"Key":"statement that","Fragments":["is","is"]},{"Key":"is as","Fragments":["obvious","elegant","good"]},{"Key":"as obvious","Fragments":["as"]},{"Key":"obvious as","Fragments":["this"]},{"Key":"as this","Fragments":["code","but","prevents"]},{"Key":"is it","Fragments":["is","possible","using","that","necessary","common","also","better?"]},{"Key":" Another","Fragments":["way","detail.","version","unwritten","example","thought,","factor","case"]},{"Key":"Another way","Fragments":["to"]},{"Key":"to solve","Fragments":["this","the","the","this.","this","this","this","in","this","the","this.","this."]},{"Key":"solve this","Fragments":["problem","exercise.","problem!!","using","problem."]},{"Key":"problem is","Fragments":["to","that","that","that"]},{"Key":"create an","Fragments":["extractor","instance","extra","intermediate","implicit"]},{"Key":"an extractor","Fragments":["object."]},{"Key":"extractor object.","Fragments":["The","If"]},{"Key":"object. The","Fragments":["con"]},{"Key":"The con","Fragments":["is"]},{"Key":"con is","Fragments":["that"]},{"Key":"few more","Fragments":["lines","scala-ish"]},{"Key":"more lines","Fragments":["of"]},{"Key":"lines of","Fragments":["code.","code.","`s1`"]},{"Key":"of code.","Fragments":["The","It's"]},{"Key":"code. The","Fragments":["pro"]},{"Key":"The pro","Fragments":["is"]},{"Key":"pro is","Fragments":["that"]},{"Key":"it hey","Fragments":["method"]},{"Key":"hey method","Fragments":["becomes"]},{"Key":"method becomes","Fragments":["more"]},{"Key":"becomes more","Fragments":["explicit."]},{"Key":"more explicit.","Fragments":["Let"]},{"Key":"explicit. Let","Fragments":["me"]},{"Key":"Let me","Fragments":["give","think"]},{"Key":"me give","Fragments":["you"]},{"Key":"you an","Fragments":["example."]},{"Key":" object","Fragments":["Silence","Silence","Question","Silence","DummyObject"]},{"Key":"object Silence","Fragments":["{","{","{"]},{"Key":"def unapply(s:","Fragments":["String)","String)"]},{"Key":"unapply(s: String)","Fragments":["=","="]},{"Key":"This changes","Fragments":["the","the"]},{"Key":"changes the","Fragments":["match","match"]},{"Key":"the match","Fragments":["to","statement","variable","variable,","or","statement,","makes","statement","block.","expression","statements.","variable","statement.","variable"]},{"Key":" statement","Fragments":["match","match"]},{"Key":"statement match","Fragments":["{","{"]},{"Key":"case Silence()","Fragments":["=\u003e"]},{"Key":"Silence() =\u003e","Fragments":["\"Fine."]},{"Key":"In some","Fragments":["cases","cases","languages,"]},{"Key":"some cases","Fragments":["you","a","where"]},{"Key":"cases you","Fragments":["may","can","simply"]},{"Key":"may want","Fragments":["the","to"]},{"Key":"want the","Fragments":["response",".find","extra"]},{"Key":"response to","Fragments":["be","a","a"]},{"Key":"be encapsulated","Fragments":["in"]},{"Key":"encapsulated in","Fragments":["the"]},{"Key":"the extractor","Fragments":["object."]},{"Key":"object. If","Fragments":["we"]},{"Key":"If we","Fragments":["wanted","anticipated","don't"]},{"Key":"we wanted","Fragments":["a"]},{"Key":"wanted a","Fragments":["similar","mutable"]},{"Key":"a similar","Fragments":["approach","thing,","feeling."]},{"Key":"similar approach","Fragments":["we"]},{"Key":"approach we","Fragments":["could"]},{"Key":"we could","Fragments":["code","start"]},{"Key":"could code","Fragments":["it"]},{"Key":"code it","Fragments":["like","is","down","simply","all"]},{"Key":"it like","Fragments":["this:","this","I","that","that"]},{"Key":"= if","Fragments":["s.trim.isEmpty"]},{"Key":"if s.trim.isEmpty","Fragments":["Some(\"Fine.","=\u003e"]},{"Key":"s.trim.isEmpty Some(\"Fine.","Fragments":["Be"]},{"Key":"Some(\"Fine. Be","Fragments":["that"]},{"Key":"that way!\")","Fragments":["else"]},{"Key":"way!\") else","Fragments":["None"]},{"Key":"match statement","Fragments":["to:","I","so"]},{"Key":"case Silence(response)","Fragments":["=\u003e"]},{"Key":"Silence(response) =\u003e","Fragments":["response"]},{"Key":"see there","Fragments":["are"]},{"Key":"are multiple","Fragments":["ways"]},{"Key":"multiple ways","Fragments":["to"]},{"Key":"ways to","Fragments":["solve","compute","use","avoid","deal"]},{"Key":"solve the","Fragments":["same","double","problem","exercise.","problem."]},{"Key":"same problem.","Fragments":["We"]},{"Key":"problem. We","Fragments":["have"]},{"Key":"We have","Fragments":["to","such"]},{"Key":"to balance","Fragments":["readability,","simplicity,"]},{"Key":"balance readability,","Fragments":["maintainability"]},{"Key":"readability, maintainability","Fragments":["and","\u0026"]},{"Key":"maintainability and","Fragments":["simplicity."]},{"Key":" Ok","Fragments":["Thanks"]},{"Key":" Yup!","Fragments":["String"]},{"Key":"Yup! String","Fragments":["exists"]},{"Key":"String exists","Fragments":["method"]},{"Key":"exists method","Fragments":["is"]},{"Key":"method is","Fragments":["one","operator-like.","the","not","the","public","pretty","more","tail","easier","executed","overkill.","just"]},{"Key":"is one","Fragments":["that","test","of","of","where"]},{"Key":"one that","Fragments":["(from","the","came"]},{"Key":"that (from","Fragments":["the"]},{"Key":"(from the","Fragments":["documentation","business"]},{"Key":"the documentation","Fragments":["page):","and","for","of"]},{"Key":"documentation page):","Fragments":["Tests"]},{"Key":"page): Tests","Fragments":["whether"]},{"Key":"Tests whether","Fragments":["a"]},{"Key":"whether a","Fragments":["predicate","string","triangle","list","robot"]},{"Key":"a predicate","Fragments":["holds","instead","test","very","function","function","function"]},{"Key":"predicate holds","Fragments":["for"]},{"Key":"holds for","Fragments":["some"]},{"Key":"some of","Fragments":["the","the","the","Option's","the","your","the","the","the"]},{"Key":"the elements","Fragments":["of","in","of","pairwise","in"]},{"Key":"elements of","Fragments":["this","that","the"]},{"Key":" Because","Fragments":["a","you"]},{"Key":"Because a","Fragments":["String's"]},{"Key":"a String's","Fragments":["components"]},{"Key":"String's components","Fragments":["are"]},{"Key":"components are","Fragments":["Characters,"]},{"Key":"are Characters,","Fragments":["the"]},{"Key":"Characters, the","Fragments":["elements"]},{"Key":"elements in","Fragments":["this","the","tuple","`dnaNucleotides`"]},{"Key":"this sequence","Fragments":["then"]},{"Key":"sequence then","Fragments":["are"]},{"Key":"then are","Fragments":["characters."]},{"Key":"are characters.","Fragments":["Inside"]},{"Key":"characters. Inside","Fragments":["the"]},{"Key":"Inside the","Fragments":["exists"]},{"Key":"the exists","Fragments":["method,"]},{"Key":"exists method,","Fragments":["you"]},{"Key":"method, you","Fragments":["use"]},{"Key":"you use","Fragments":["_.isUpper","a","?","a","the","```isEmpty```","a","it","the","suffix","```List(...)","\"val\"","trippe","a","```filter```","this","```wordsRegex```","Java's","pattern","a","in","regex'es","side","regexes","currently,","an","two","`lazy","foldLeft","a","if/elseif/else","the","Queue?","a","the"]},{"Key":"use _.isUpper","Fragments":["which"]},{"Key":"_.isUpper which","Fragments":["is"]},{"Key":"really just","Fragments":["syntactic","the"]},{"Key":"just syntactic","Fragments":["sugar"]},{"Key":"syntactic sugar","Fragments":["for","for","makes","for"]},{"Key":"sugar for","Fragments":["(c","flatMap/map/filter","flatMap-map)","flatMap's)."]},{"Key":"for (c","Fragments":["=\u003e"]},{"Key":"(c =\u003e","Fragments":["c.isUpper)"]},{"Key":"=\u003e c.isUpper)","Fragments":["(c","\u003e"]},{"Key":"c.isUpper) (c","Fragments":["can"]},{"Key":"(c can","Fragments":["be"]},{"Key":"any variable,","Fragments":["I"]},{"Key":"variable, I","Fragments":["just"]},{"Key":"just chose","Fragments":["it"]},{"Key":"chose it","Fragments":["to"]},{"Key":"to represent","Fragments":["character),","a"]},{"Key":"represent character),","Fragments":["which"]},{"Key":"character), which","Fragments":["checks"]},{"Key":"which checks","Fragments":["to"]},{"Key":"checks to","Fragments":["see","the"]},{"Key":"to see","Fragments":["if","the","the","line","if","if","what","that","other","if","only","some","if","other's","what","at","more","how","how","if","and","a","that","names","if"]},{"Key":"see if","Fragments":["that","they","all","all","I","you","you","they","I","something","the"]},{"Key":"if that","Fragments":["character","assumption","is","optimization","requirement"]},{"Key":"that character","Fragments":["isUpper."]},{"Key":"character isUpper.","Fragments":["If"]},{"Key":"isUpper. If","Fragments":["any"]},{"Key":"If any","Fragments":["characters"]},{"Key":"any characters","Fragments":["are"]},{"Key":"characters are","Fragments":["upper","grabbed","uppercase,","spaces","upper"]},{"Key":"are upper","Fragments":["case,","case,"]},{"Key":"upper case,","Fragments":[".isUpper","is"]},{"Key":"case, .isUpper","Fragments":["will"]},{"Key":".isUpper will","Fragments":["return"]},{"Key":"will return","Fragments":["true","`0`","true","to","the"]},{"Key":"return true","Fragments":["which","else","if"]},{"Key":"true which","Fragments":["means"]},{"Key":"which means","Fragments":["exists"]},{"Key":"means exists","Fragments":["will"]},{"Key":"exists will","Fragments":["also"]},{"Key":"will also","Fragments":["return"]},{"Key":"also return","Fragments":["true,","digits,"]},{"Key":"return true,","Fragments":["so"]},{"Key":"true, so","Fragments":["there"]},{"Key":"so there","Fragments":["is","is","is","are"]},{"Key":"is at","Fragments":["least","least","least"]},{"Key":"least oneUpperCase","Fragments":["letter"]},{"Key":"oneUpperCase letter","Fragments":["present."]},{"Key":"I've very","Fragments":["new"]},{"Key":"very new","Fragments":["to","to"]},{"Key":"to Scala,","Fragments":["so","so","but"]},{"Key":"Scala, so","Fragments":["I'm","I","I'm"]},{"Key":"not 100%","Fragments":["on","confident","sure"]},{"Key":"100% on","Fragments":["how"]},{"Key":"how parts","Fragments":["of"]},{"Key":"that work","Fragments":["(someone","only","on"]},{"Key":"work (someone","Fragments":["please"]},{"Key":"(someone please","Fragments":["correct"]},{"Key":"please correct","Fragments":["me!)."]},{"Key":"correct me!).","Fragments":["As"]},{"Key":"me!). As","Fragments":["far"]},{"Key":"As far","Fragments":["as","as"]},{"Key":"far as","Fragments":["I","I"]},{"Key":"as I","Fragments":["understand","copied","wanted","think","suggested","think","did","can","was","think","wish.","did","can","used","forgot"]},{"Key":"understand it,","Fragments":["the"]},{"Key":"the underscore","Fragments":["in","like","notation,","as","in"]},{"Key":"underscore in","Fragments":["this","the"]},{"Key":"case is","Fragments":["partial","not"]},{"Key":"is partial","Fragments":["application"]},{"Key":"partial application","Fragments":["of"]},{"Key":"application of","Fragments":["`RichChar.isUpper()`."]},{"Key":"of `RichChar.isUpper()`.","Fragments":["`exists()`"]},{"Key":"`RichChar.isUpper()`. `exists()`","Fragments":["will"]},{"Key":"`exists()` will","Fragments":["use"]},{"Key":"will use","Fragments":["that"]},{"Key":"use that","Fragments":["function","code"]},{"Key":"that function","Fragments":["to"]},{"Key":"function to","Fragments":["test","square","square","make","simplify","validate","destructure","do","ensure","compare","each","give","square","square","tokenize","zip","avoid","figure","get"]},{"Key":"test each","Fragments":["char","slice,"]},{"Key":"each char","Fragments":["in","/"]},{"Key":"char in","Fragments":["string"]},{"Key":"in string","Fragments":["and","was"]},{"Key":"and returns","Fragments":["true","the","the","the"]},{"Key":"returns true","Fragments":["if"]},{"Key":"true if","Fragments":["the","the"]},{"Key":"function ever","Fragments":["returns"]},{"Key":"ever returns","Fragments":["true."]},{"Key":" Opa","Fragments":["liked"]},{"Key":"Opa liked","Fragments":["but"]},{"Key":"liked but","Fragments":["what"]},{"Key":"but what","Fragments":["do","about"]},{"Key":"what do","Fragments":["you","you","you"]},{"Key":"mean by","Fragments":["string.exists(_.isUpper)?","FP-style","saying","\"spec\""]},{"Key":" Followed","Fragments":["@joesph"]},{"Key":"Followed @joesph","Fragments":["suggestion"]},{"Key":"@joesph suggestion","Fragments":["from"]},{"Key":"suggestion from","Fragments":["@joesph"]},{"Key":"from @joesph","Fragments":["submission"]},{"Key":"@joesph submission","Fragments":["and"]},{"Key":"submission and","Fragments":["tried"]},{"Key":"and tried","Fragments":["using"]},{"Key":"tried using","Fragments":["implicit.","for","String.groupBy?"]},{"Key":"using implicit.","Fragments":["I'm"]},{"Key":"implicit. I'm","Fragments":["starting"]},{"Key":"I'm starting","Fragments":["to"]},{"Key":"starting to","Fragments":["see","think","learn)"]},{"Key":"see the","Fragments":["power","big","added","added","appeal","comments"]},{"Key":"the power","Fragments":["of"]},{"Key":"power of","Fragments":["scala."]},{"Key":" Will","Fragments":["do"]},{"Key":"Will do","Fragments":[":)"]},{"Key":"do :)","Fragments":["On"]},{"Key":":) On","Fragments":["a"]},{"Key":"On a","Fragments":["side","purely","final"]},{"Key":"a side","Fragments":["note:","effect,","effect.","effect,"]},{"Key":"side note:","Fragments":["Aren't"]},{"Key":"note: Aren't","Fragments":["view"]},{"Key":"Aren't view","Fragments":["bounds"]},{"Key":"view bounds","Fragments":["marked","deprecation."]},{"Key":"bounds marked","Fragments":["as"]},{"Key":"marked as","Fragments":["deprecated?","invalid."]},{"Key":"a view","Fragments":["bound"]},{"Key":"view bound","Fragments":["```[T"]},{"Key":"bound ```[T","Fragments":["\u003c%"]},{"Key":"```[T \u003c%","Fragments":["Ordered[T]]```"]},{"Key":"\u003c% Ordered[T]]```","Fragments":["you"]},{"Key":"Ordered[T]]``` you","Fragments":["can"]},{"Key":"of ```ordering```","Fragments":["and"]},{"Key":"```ordering``` and","Fragments":["use"]},{"Key":"and use","Fragments":["```\u003c=```","it","it","it","them","the","the","an","remainder","it","it","`++`"]},{"Key":"use ```\u003c=```","Fragments":["directly."]},{"Key":"you define","Fragments":["a","a"]},{"Key":"define a","Fragments":["```foldLeft```","logger?","`square`","data","```Range```"]},{"Key":"a ```foldLeft```","Fragments":["function","to"]},{"Key":"```foldLeft``` function","Fragments":["on"]},{"Key":"function on","Fragments":["```Bst```","the","the","a"]},{"Key":"on ```Bst```","Fragments":["and"]},{"Key":"```Bst``` and","Fragments":["use"]},{"Key":"use it","Fragments":["to","instead.","as","anyway?","instead","to","as","to","if","instead","it","to","and","to","in","b/c","to"]},{"Key":"write ```toList```?","Fragments":[":-)"]},{"Key":" Pretty","Fragments":["good","ugly,","clear","straightforward,","sure"]},{"Key":"Pretty good","Fragments":["idea."]},{"Key":"good idea.","Fragments":["But"]},{"Key":"idea. But","Fragments":["even"]},{"Key":"But even","Fragments":["though"]},{"Key":"even though","Fragments":["it's","this"]},{"Key":"though it's","Fragments":["not"]},{"Key":"it's not","Fragments":["part","shouting,","worth","worth","clear","that","really","very","considered","necessary.","overkill"]},{"Key":"not part","Fragments":["of","of","of"]},{"Key":"the exercise,","Fragments":["I'd"]},{"Key":"exercise, I'd","Fragments":["like","be"]},{"Key":"I'd like","Fragments":["to","to","feedback","some","Random","to","to"]},{"Key":"like to","Fragments":["keep","know","fix","think","nitpick","use","know","hear","have","practice","find","try","know"]},{"Key":"the possibility","Fragments":["to"]},{"Key":"possibility to","Fragments":["re-open"]},{"Key":"to re-open","Fragments":["a"]},{"Key":"re-open a","Fragments":["closed"]},{"Key":"a closed","Fragments":["account","account"]},{"Key":"closed account","Fragments":["in","to"]},{"Key":"account in","Fragments":["the","my"]},{"Key":"the future.","Fragments":["Hence","=)"]},{"Key":"future. Hence","Fragments":["the"]},{"Key":"Hence the","Fragments":["need"]},{"Key":"the need","Fragments":["to","for","for","for","for","of","for","for","for","for","for"]},{"Key":"of using","Fragments":["an","that","two","regexes","if.","the","pattern","`{}`","pattern","time","one","``Map[Char,","`equalsIgnoreCase`","a","```substring```.","foldLeft","the","\"dots\"","pattern"]},{"Key":"using an","Fragments":["extra","early","import","ordinary","upperCont","upperCont","implicit","Array[Char]"]},{"Key":"an extra","Fragments":["boolean,","set","function","class","`object`","challenge,"]},{"Key":"extra boolean,","Fragments":["why"]},{"Key":"boolean, why","Fragments":["not"]},{"Key":"why not","Fragments":["just","just","just","just","put","to","simply","try","just","just","just","directly","just","go","break","make","do","treat","treat","make","check","if","have","do","have","use","just","just","give","do","just","just","-"]},{"Key":"use Option[Int]","Fragments":["for"]},{"Key":"Option[Int] for","Fragments":["balance?"]},{"Key":"I decided","Fragments":["I","at","to","to","to","against","to"]},{"Key":"decided I","Fragments":["didn't"]},{"Key":"I didn't","Fragments":["like","understand","think","know","upload)","think","know","notice","consider","follow","know","know","know:","use","like","realize","realize","know","see","know","propose"]},{"Key":"didn't like","Fragments":["enumerating","it"]},{"Key":"like enumerating","Fragments":["the"]},{"Key":"enumerating the","Fragments":["possibilities"]},{"Key":"the possibilities","Fragments":["myself"]},{"Key":"possibilities myself","Fragments":["and"]},{"Key":"myself and","Fragments":["wanted"]},{"Key":"and wanted","Fragments":["to","to","you","to"]},{"Key":"the computer","Fragments":["to"]},{"Key":"computer to","Fragments":["do"]},{"Key":"do it.","Fragments":["Much"]},{"Key":"it. Much","Fragments":["more"]},{"Key":"Much more","Fragments":["verbose,","elegant","concise"]},{"Key":"more verbose,","Fragments":["less","but"]},{"Key":"verbose, less","Fragments":["readable,"]},{"Key":"less readable,","Fragments":["and","it"]},{"Key":"readable, and","Fragments":["certainly"]},{"Key":"and certainly","Fragments":["less"]},{"Key":"certainly less","Fragments":["efficient,","code"]},{"Key":"less efficient,","Fragments":["but","but"]},{"Key":"efficient, but","Fragments":["I","somehow","one"]},{"Key":"got what","Fragments":["I"]},{"Key":"what I","Fragments":["wanted","needed","needed.","have","thought","say","expose","call","could","want.","was","feel","was","did","need","know","had","came","mostl","had.","did.","need","was","was","was","meant","believe","need.","needed."]},{"Key":"wanted here.","Fragments":["I"]},{"Key":"here. I","Fragments":["also","think","don't","don't","used"]},{"Key":"also broke","Fragments":["out"]},{"Key":"broke out","Fragments":["some","the"]},{"Key":"out some","Fragments":["helper","other","things"]},{"Key":"some helper","Fragments":["functions.","functions"]},{"Key":"helper functions.","Fragments":["I"]},{"Key":"functions. I","Fragments":["have","also"]},{"Key":"have some","Fragments":["ideas","things","(minor)","indentation.","thoughts","complication","private","private","Boolean"]},{"Key":"some ideas","Fragments":["to","from"]},{"Key":"ideas to","Fragments":["increase"]},{"Key":"to increase","Fragments":["efficiency"]},{"Key":"increase efficiency","Fragments":["by"]},{"Key":"efficiency by","Fragments":["getting"]},{"Key":"by getting","Fragments":["some"]},{"Key":"getting some","Fragments":["short-circuits"]},{"Key":"some short-circuits","Fragments":["back"]},{"Key":"short-circuits back","Fragments":["in."]},{"Key":" IMO","Fragments":["this","the"]},{"Key":"IMO this","Fragments":["is"]},{"Key":"is still","Fragments":["much","mutable","a","just","among","avialable","yelling?","yelling.","cheating","more","more","very","purely"]},{"Key":"still much","Fragments":["too"]},{"Key":"much too","Fragments":["complicated"]},{"Key":"complicated -","Fragments":["you"]},{"Key":"- you","Fragments":["don't","could","may","can","should","could","can","forgot","are","should","can","don't","can","do","should"]},{"Key":"need all","Fragments":["this","those"]},{"Key":"this zipping","Fragments":["and"]},{"Key":"zipping and","Fragments":["slicing"]},{"Key":"and slicing","Fragments":["and"]},{"Key":"slicing and","Fragments":["whatnot."]},{"Key":" just","Fragments":["check","a","out","for","out","for","wondering:","for","to","google"]},{"Key":"just check","Fragments":["how"]},{"Key":"check how","Fragments":["many"]},{"Key":"how many","Fragments":["sides","tuples"]},{"Key":"many sides","Fragments":["are"]},{"Key":"sides are","Fragments":["of","always"]},{"Key":"are of","Fragments":["equal","a","course,","course"]},{"Key":"of equal","Fragments":["length.","length,"]},{"Key":"equal length.","Fragments":["you"]},{"Key":"length. you","Fragments":["could"]},{"Key":"could even","Fragments":["use","shorten","make"]},{"Key":"even use","Fragments":["a"]},{"Key":"simple `Set`","Fragments":["for"]},{"Key":"`Set` for","Fragments":["this."]},{"Key":"the `isIllogical`","Fragments":["case"]},{"Key":"`isIllogical` case","Fragments":["you"]},{"Key":"case you","Fragments":["can","can","could","can","could","want","may","might","are"]},{"Key":"can check","Fragments":["that","require","its"]},{"Key":"the sum","Fragments":["of","is",":D","function.","of"]},{"Key":"of two","Fragments":["sides","types","random"]},{"Key":"two sides","Fragments":["are"]},{"Key":"are always","Fragments":["greater","two"]},{"Key":"always greater","Fragments":["than"]},{"Key":"greater than","Fragments":["the"]},{"Key":"the third","Fragments":["side","condition","case","call"]},{"Key":"third side","Fragments":["(plus"]},{"Key":"side (plus","Fragments":["that"]},{"Key":"(plus that","Fragments":["all"]},{"Key":"that all","Fragments":["sides","good.","the","sides"]},{"Key":"all sides","Fragments":["have","must"]},{"Key":"sides have","Fragments":["positive"]},{"Key":"have positive","Fragments":["length,"]},{"Key":"positive length,","Fragments":["but"]},{"Key":"length, but","Fragments":["this"]},{"Key":"but this","Fragments":["is","is","gave","works","way","is","would","didn't","feels","is","doesn't","one","is","is","site","is","is","design","does"]},{"Key":"not checked","Fragments":["in","in"]},{"Key":"checked in","Fragments":["the","the"]},{"Key":"don't disagree.","Fragments":["This"]},{"Key":"disagree. This","Fragments":["was"]},{"Key":"This was","Fragments":["just","a","weird.","a","an","also","just"]},{"Key":"was just","Fragments":["a","handling","testing","to","a","seeing","my","my","what"]},{"Key":"a first","Fragments":["attempt","version"]},{"Key":"first attempt","Fragments":["at","at","is","wasn't","can"]},{"Key":"attempt at","Fragments":["not","this"]},{"Key":"at not","Fragments":["writing"]},{"Key":"not writing","Fragments":["everything"]},{"Key":"writing everything","Fragments":["out","in"]},{"Key":"everything out","Fragments":["by"]},{"Key":"out by","Fragments":["hand."]},{"Key":"by hand.","Fragments":["i'm"]},{"Key":"hand. i'm","Fragments":["always"]},{"Key":"i'm always","Fragments":["willing"]},{"Key":"always willing","Fragments":["to"]},{"Key":"willing to","Fragments":["do"]},{"Key":"do more","Fragments":["work"]},{"Key":"more work","Fragments":["to"]},{"Key":"work to","Fragments":["be","your","ensure","create"]},{"Key":"be lazy.","Fragments":[":)"]},{"Key":" Yes.","Fragments":["Unfortunately","it's","Thanks","You"]},{"Key":"Yes. Unfortunately","Fragments":["there"]},{"Key":"Unfortunately there","Fragments":["is"]},{"Key":"no zipWith","Fragments":["function"]},{"Key":"zipWith function","Fragments":["in"]},{"Key":"in Scala.","Fragments":["In","I","I","The","Attempted",":-)","I'll","e.g."]},{"Key":"Scala. In","Fragments":["Haskell","scala"]},{"Key":"In Haskell","Fragments":["I"]},{"Key":"Haskell I","Fragments":["quite"]},{"Key":"I quite","Fragments":["often","like"]},{"Key":"quite often","Fragments":["used"]},{"Key":"often used","Fragments":["curry/uncurry"]},{"Key":"used curry/uncurry","Fragments":["to"]},{"Key":"curry/uncurry to","Fragments":["deal"]},{"Key":" Is","Fragments":["the","not","there","it","there","there","there","this","it","there","there","that","there","there","it","there","there","this","it"]},{"Key":"Is the","Fragments":["Function.tupled()"]},{"Key":"the Function.tupled()","Fragments":["just"]},{"Key":"Function.tupled() just","Fragments":["to"]},{"Key":"to not","Fragments":["have","use","better","do","also","to","do","use","use","use","just","change","use"]},{"Key":"the `._1`","Fragments":["and"]},{"Key":"`._1` and","Fragments":["`._2`?"]},{"Key":"Pretty ugly,","Fragments":["IMO."]},{"Key":"ugly, IMO.","Fragments":["I"]},{"Key":"IMO. I","Fragments":["couldn't"]},{"Key":"I couldn't","Fragments":["avoid","think","find","get","figure","get","wrangle","figure","modify"]},{"Key":"couldn't avoid","Fragments":["using"]},{"Key":"using mutables.","Fragments":["I'll"]},{"Key":"mutables. I'll","Fragments":["look"]},{"Key":"at some","Fragments":["other","specific","of","other","of","point."]},{"Key":"other solutions","Fragments":["and","though","I've","where","to","it"]},{"Key":"solutions and","Fragments":["learn"]},{"Key":"and learn","Fragments":["how"]},{"Key":"learn how","Fragments":["to","to"]},{"Key":"clean this","Fragments":["up,","up"]},{"Key":"this up,","Fragments":["if"]},{"Key":"up, if","Fragments":["possible"]},{"Key":" acc.","Fragments":["to"]},{"Key":"acc. to","Fragments":["the","some!"]},{"Key":"the problem","Fragments":["description","description","description:","statement","description:","and","description","description:","in","can","design?","description:","description","description:","to","definition","statement.","but","description."]},{"Key":"description you","Fragments":["should"]},{"Key":"not use","Fragments":["```map```","the","```return```","a","groupBy","\"return\"","semicolons","`var`?!","it?","a","the","a","Random","the","Scala","the","recursion"]},{"Key":"use ```map```","Fragments":["but","on","and"]},{"Key":"```map``` but","Fragments":["implement"]},{"Key":"but implement","Fragments":["it"]},{"Key":"implement it","Fragments":["yourself!","on","differently","differently."]},{"Key":"it yourself!","Fragments":[";-)"]},{"Key":" (btw,","Fragments":["you","are","usually","I"]},{"Key":"(btw, you","Fragments":["could","could"]},{"Key":"could just","Fragments":["say",".trim","use","call","filter","leave","say","pass","pass"]},{"Key":"just say","Fragments":["```l","```.map(scoreLetter)```?","`in","```Set(1,2,3)```","```substring```?","```identity```","nucleotideCounts(nucleotide).","(pending)","\"String\"","\"()\"","\"()\"?","there","\"nucleotidePairs"]},{"Key":"say ```l","Fragments":["map"]},{"Key":"```l map","Fragments":["f```."]},{"Key":"like it,","Fragments":["it's"]},{"Key":"it, it's","Fragments":["concese"]},{"Key":"it's concese","Fragments":["and"]},{"Key":"concese and","Fragments":["very"]},{"Key":"and very","Fragments":["scaly","important:"]},{"Key":" Nice","Fragments":["solution","and","one,","solution,","that","that","way","way","tail","trick","fold","submission.","job","-","solution,","and","use","concise","use","and","trick","and","solution.","to","and","and","use","how","use","use","regex","solution!"]},{"Key":"Nice solution","Fragments":["only"]},{"Key":"solution only","Fragments":["lambda"]},{"Key":"only lambda","Fragments":["to"]},{"Key":"lambda to","Fragments":["count"]},{"Key":"to count","Fragments":["function","the","instances","(i.e.","how"]},{"Key":"by Partial","Fragments":["functions"]},{"Key":"Partial functions","Fragments":["for"]},{"Key":"functions for","Fragments":["better","better","each","a"]},{"Key":"for better","Fragments":["readability.","readability.","readability.","readability.","readability.","readability?","readability.","readability","readability.","readability,","readability","readability.","readability.","readability.","readability"]},{"Key":"better readability.","Fragments":["For",":-)","Just","Comments"]},{"Key":"readability. For","Fragments":["example"]},{"Key":" (from","Fragments":["zip","zip"]},{"Key":"(from zip","Fragments":["to).count(pf)","to).count{"]},{"Key":"val pf:","Fragments":["PartialFunction[(Char,"]},{"Key":"pf: PartialFunction[(Char,","Fragments":["Char),"]},{"Key":"PartialFunction[(Char, Char),","Fragments":["Boolean]"]},{"Key":"Char), Boolean]","Fragments":["="]},{"Key":"Boolean] =","Fragments":["{"]},{"Key":"case (a,","Fragments":["b)","b)","b)"]},{"Key":"(a, b)","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"b) =\u003e","Fragments":["a","a","a"]},{"Key":"=\u003e a","Fragments":["!=","!=","!=","!="]},{"Key":"a !=","Fragments":["b","b","b","b"]},{"Key":" or","Fragments":["use","why","even","have"]},{"Key":"or use","Fragments":["anonymous","PartialFunctions."]},{"Key":"use anonymous","Fragments":["PartialFunction"]},{"Key":"anonymous PartialFunction","Fragments":["like"]},{"Key":"PartialFunction like","Fragments":["this:"]},{"Key":"zip to).count{","Fragments":["case"]},{"Key":"to).count{ case","Fragments":["(a,"]},{"Key":"!= b","Fragments":["}","}`","}`"]},{"Key":" It","Fragments":["looks","is","may","looks","IS","will","runs","adds","would","is","could","is","works","will","would","would","is","came","will","works,","will","bothers","is","just","was","could","is","seems","is","works.","takes","would","works","works."]},{"Key":"It looks","Fragments":["as","a","like","cleaner"]},{"Key":"looks as","Fragments":["if"]},{"Key":"as if","Fragments":["your","the","```UsedNamesMap```","it'll"]},{"Key":"if your","Fragments":["map","tests","input"]},{"Key":"your map","Fragments":["is","instead","+","adding"]},{"Key":"map is","Fragments":["*ALWAYS*","the","calculated"]},{"Key":"is *ALWAYS*","Fragments":["sorted"]},{"Key":"*ALWAYS* sorted","Fragments":["by"]},{"Key":"sorted by","Fragments":["grade.","key"]},{"Key":"by grade.","Fragments":["Is"]},{"Key":"grade. Is","Fragments":["that"]},{"Key":"Is that","Fragments":["in","a","0"]},{"Key":" ``get``","Fragments":["and"]},{"Key":"``get`` and","Fragments":["``grade``"]},{"Key":"and ``grade``","Fragments":["look"]},{"Key":"``grade`` look","Fragments":["redundant."]},{"Key":"look redundant.","Fragments":["It"]},{"Key":"redundant. It","Fragments":["can"]},{"Key":"It can","Fragments":["be","be","be","be"]},{"Key":"a case","Fragments":["when","here...","class.","class","class","class","class.","class,","class,","statement","which","class?","of","class.","for","to","class","where","of","class.","class","class"]},{"Key":"case when","Fragments":["there","it"]},{"Key":"when there","Fragments":["are","is","are","are"]},{"Key":"are two","Fragments":["student"]},{"Key":"two student","Fragments":["with"]},{"Key":"student with","Fragments":["the"]},{"Key":"same name","Fragments":["in","as","twice?","is","as","is","is","failure.","twice.","twice.","are","to"]},{"Key":"name in","Fragments":["the"]},{"Key":"the school","Fragments":["so"]},{"Key":"school so","Fragments":["unique"]},{"Key":"so unique","Fragments":["requirement"]},{"Key":"unique requirement","Fragments":["seems"]},{"Key":"requirement seems","Fragments":["too"]},{"Key":"seems too","Fragments":["strict"]},{"Key":"too strict","Fragments":["for"]},{"Key":"strict for","Fragments":["me."]},{"Key":"this difficult","Fragments":["to"]},{"Key":"to read,","Fragments":["probably","even","follow","to","but"]},{"Key":"read, probably","Fragments":["partly"]},{"Key":"probably partly","Fragments":["because"]},{"Key":"because I'm","Fragments":["not","primarily"]},{"Key":"not that","Fragments":["well","I'd","the","it"]},{"Key":"that well","Fragments":["known",":)"]},{"Key":"well known","Fragments":["yet"]},{"Key":"known yet","Fragments":["with"]},{"Key":"yet with","Fragments":["implicits"]},{"Key":"with implicits","Fragments":["in"]},{"Key":"implicits in","Fragments":["scala","general."]},{"Key":"in scala","Fragments":["but","of","instead",":)"]},{"Key":"scala but","Fragments":["also"]},{"Key":"but also","Fragments":["because","an"]},{"Key":"also because","Fragments":["imo"]},{"Key":"because imo","Fragments":["this"]},{"Key":"imo this","Fragments":["code"]},{"Key":"code can","Fragments":["not","be","remain","change"]},{"Key":"can not","Fragments":["be","handle","be","be","change"]},{"Key":"be understood","Fragments":["without"]},{"Key":"understood without","Fragments":["the"]},{"Key":"the original","Fragments":["question/specification.","GregorianCalendar","String.","msg","commenter","problem","word.","word","```inputDate```?","list).","calendar,"]},{"Key":"is described","Fragments":["that"]},{"Key":"described that","Fragments":["Bob"]},{"Key":"that Bob","Fragments":["answers","should"]},{"Key":"Bob answers","Fragments":["'Whatever'","'Whatever.'"]},{"Key":"answers 'Whatever'","Fragments":["to"]},{"Key":"'Whatever' to","Fragments":["anything"]},{"Key":"to anything","Fragments":["else.","else."]},{"Key":"anything else.","Fragments":["But"]},{"Key":"else. But","Fragments":["the"]},{"Key":"But the","Fragments":["code","A-to-Z","version"]},{"Key":"code doesn't","Fragments":["convey","just"]},{"Key":"doesn't convey","Fragments":["why"]},{"Key":"convey why","Fragments":["there"]},{"Key":"why there","Fragments":["is"]},{"Key":"a need","Fragments":["for"]},{"Key":"a special","Fragments":["case","function","syntax","token","token,","purpose"]},{"Key":"special case","Fragments":["in","ending"]},{"Key":"case in","Fragments":["which","other","the","their","your"]},{"Key":"in which","Fragments":["he","the"]},{"Key":"which he","Fragments":["also"]},{"Key":"he also","Fragments":["answers"]},{"Key":"also answers","Fragments":["'Whatever'."]},{"Key":"code there","Fragments":["are"]},{"Key":"also two","Fragments":["definitions"]},{"Key":"two definitions","Fragments":["for"]},{"Key":"definitions for","Fragments":["a","your"]},{"Key":"a response","Fragments":["to","(e.g.","value."]},{"Key":"a question,","Fragments":["from","yell,","and","which"]},{"Key":"question, from","Fragments":["the"]},{"Key":"not immediately","Fragments":["clear"]},{"Key":"immediately clear","Fragments":["why."]},{"Key":" Further","Fragments":["more"]},{"Key":"Further more","Fragments":["imo"]},{"Key":"more imo","Fragments":["this:"]},{"Key":"imo this:","Fragments":["'---?'"]},{"Key":"this: '---?'","Fragments":["is"]},{"Key":"'---?' is","Fragments":["a"]},{"Key":"question not","Fragments":["shouting."]},{"Key":"and tight","Fragments":["approach,"]},{"Key":"tight approach,","Fragments":["however"]},{"Key":"approach, however","Fragments":["I"]},{"Key":"however I","Fragments":["wonder","used","think"]},{"Key":"I wonder","Fragments":["whether","if","why","if","if","if","if","if","if","if","if","-","why"]},{"Key":"wonder whether","Fragments":["string"]},{"Key":"whether string","Fragments":["methods"]},{"Key":"string methods","Fragments":["make"]},{"Key":"methods make","Fragments":["the"]},{"Key":"The test","Fragments":["suite","for"]},{"Key":"suite contains","Fragments":["four"]},{"Key":"contains four","Fragments":["typos"]},{"Key":"four typos","Fragments":["at"]},{"Key":"typos at","Fragments":["lines"]},{"Key":"at lines","Fragments":["14,"]},{"Key":"lines 14,","Fragments":["44,"]},{"Key":"14, 44,","Fragments":["50,"]},{"Key":"44, 50,","Fragments":["and"]},{"Key":"50, and","Fragments":["68."]},{"Key":"and 68.","Fragments":["\"Woah\""]},{"Key":"68. \"Woah\"","Fragments":["should"]},{"Key":"\"Woah\" should","Fragments":["be"]},{"Key":"be spelled","Fragments":["\"Whoa\",","`Woah`."]},{"Key":"spelled \"Whoa\",","Fragments":["according"]},{"Key":"\"Whoa\", according","Fragments":["to"]},{"Key":"according to","Fragments":["the","the","feedback","a","the","the","the","the","math","your"]},{"Key":"the readme","Fragments":["instructions","or"]},{"Key":"readme instructions","Fragments":["(and"]},{"Key":"instructions (and","Fragments":["every"]},{"Key":"(and every","Fragments":["other"]},{"Key":"every other","Fragments":["version"]},{"Key":"other version","Fragments":["of"]},{"Key":"this exercise","Fragments":["on","could","and","becomes","by","to","without","took","as","another","if","at","you","I","that"]},{"Key":"exercise on","Fragments":["exercism)."]},{"Key":" Shouldn't","Fragments":["operations","```db```","you"]},{"Key":"Shouldn't operations","Fragments":["against"]},{"Key":"operations against","Fragments":["`_balance`"]},{"Key":"against `_balance`","Fragments":["and"]},{"Key":"`_balance` and","Fragments":["`_open`"]},{"Key":"and `_open`","Fragments":["be"]},{"Key":"`_open` be","Fragments":["synchronized"]},{"Key":"be synchronized","Fragments":["with"]},{"Key":"synchronized with","Fragments":["a"]},{"Key":"single lock?","Fragments":["With"]},{"Key":"lock? With","Fragments":["your"]},{"Key":"With your","Fragments":["current"]},{"Key":"current solution","Fragments":["wouldn't","race"]},{"Key":"solution wouldn't","Fragments":["the"]},{"Key":"wouldn't the","Fragments":["two"]},{"Key":"the two","Fragments":["values","strings","strings,","`val`s","dnaStrand","characters","should","methods","Strings","Strings","Strings.","functions","input","Strings.","Strings","examples","Strings"]},{"Key":"two values","Fragments":["be"]},{"Key":"values be","Fragments":["locked"]},{"Key":"be locked","Fragments":["independently?"]},{"Key":"locked independently?","Fragments":["Thus"]},{"Key":"independently? Thus","Fragments":["there"]},{"Key":"Thus there","Fragments":["could"]},{"Key":"there could","Fragments":["be"]},{"Key":"a race","Fragments":["condition"]},{"Key":"race condition","Fragments":["if"]},{"Key":"condition if","Fragments":["one"]},{"Key":"if one","Fragments":["thread","is","is","can"]},{"Key":"one thread","Fragments":["is","at"]},{"Key":"thread is","Fragments":["incrementing","closing"]},{"Key":"is incrementing","Fragments":["or"]},{"Key":"incrementing or","Fragments":["getting"]},{"Key":"or getting","Fragments":["a"]},{"Key":"getting a","Fragments":["balance","list","list","second"]},{"Key":"a balance","Fragments":["and"]},{"Key":"balance and","Fragments":["another"]},{"Key":"and another","Fragments":["thread"]},{"Key":"another thread","Fragments":["is"]},{"Key":"is closing","Fragments":["the"]},{"Key":"closing the","Fragments":["account?","account","account"]},{"Key":"You are","Fragments":["right","mutating","right,","right.","allocating","right","coding","of","doing","right.","awesome!","right,","right,","absolutely","not","right.","mutating","on"]},{"Key":"are right","Fragments":["with","about","to"]},{"Key":"right with","Fragments":["my"]},{"Key":"with my","Fragments":["current","implementations","getName","use"]},{"Key":"my current","Fragments":["solution"]},{"Key":"solution race","Fragments":["conditions"]},{"Key":"race conditions","Fragments":["are"]},{"Key":"conditions are","Fragments":["possible.","enough"]},{"Key":"I will","Fragments":["implement","do","do","submit","do","look","refactor","try","pay","try","think"]},{"Key":"will implement","Fragments":["a"]},{"Key":"use Scala's","Fragments":["String","collection","pattern","String/Seq","String","for-comprehension"]},{"Key":"Scala's String","Fragments":["interpolation","interpolation."]},{"Key":"String interpolation","Fragments":["instead","instead","with","(s\"...$areaCode...\")"]},{"Key":"interpolation instead","Fragments":["of","of","of","of"]},{"Key":"are nice","Fragments":["String","for"]},{"Key":"nice String","Fragments":["functions"]},{"Key":"String functions","Fragments":["like","why","on","on"]},{"Key":"like `startsWith,","Fragments":["filter,"]},{"Key":"`startsWith, filter,","Fragments":["...`"]},{"Key":"filter, ...`","Fragments":["for"]},{"Key":"...` for","Fragments":["better"]},{"Key":"Could it","Fragments":["be"]},{"Key":"it be","Fragments":["better","possible","removed?","more","the","better","outside","better"]},{"Key":"be better","Fragments":["to","to","as","to","expressed","as","readable","to","to","and","to","solution,","off","to"]},{"Key":"find another","Fragments":["way"]},{"Key":"another way","Fragments":["of","of","to","than"]},{"Key":"way of","Fragments":["splitting","doing","writing","composing","doing","defining","representing","decomposing","doing","checking","counting","getting","doing","doing","refactorings.","doing","doing","matching"]},{"Key":"of splitting","Fragments":["instead","by"]},{"Key":"splitting instead","Fragments":["of"]},{"Key":"using that","Fragments":["big"]},{"Key":"that big","Fragments":["regex?"]},{"Key":" interesting","Fragments":["solution","to","idea","solution","points","idea","idea,","idea.","use","to","idea","solution","idea","idea","to"]},{"Key":" Improvement","Fragments":["inspired"]},{"Key":"Improvement inspired","Fragments":["by"]},{"Key":"inspired by","Fragments":["solution","[crackofdusk](http://exercism.io/crackofdusk)'s","@jacinthe"]},{"Key":"by solution","Fragments":["of"]},{"Key":"solution of","Fragments":["@trevion","others","all","creating","this"]},{"Key":"TIL: a","Fragments":["little"]},{"Key":"little bit","Fragments":["more","and","more","of","heavy","dirty","if"]},{"Key":"more about","Fragments":["destructuring","their","whether","this."]},{"Key":"about destructuring","Fragments":["regex"]},{"Key":"destructuring regex","Fragments":["matching."]},{"Key":"regex matching.","Fragments":["Thanks!"]},{"Key":" Test","Fragments":["\"build"]},{"Key":"Test \"build","Fragments":["normalized"]},{"Key":"\"build normalized","Fragments":["cipher"]},{"Key":"normalized cipher","Fragments":["text\""]},{"Key":"cipher text\"","Fragments":["fails"]},{"Key":"text\" fails","Fragments":["for"]},{"Key":"fails for","Fragments":["this"]},{"Key":"It's unclear","Fragments":["for"]},{"Key":"unclear for","Fragments":["me"]},{"Key":"for me","Fragments":["why","to","to","to","to","this","rather",":)","`copy`","as"]},{"Key":"me why","Fragments":["\"msemo"]},{"Key":"why \"msemo","Fragments":["aanin"]},{"Key":"\"msemo aanin","Fragments":["dnin"]},{"Key":"aanin dnin","Fragments":["ndla"]},{"Key":"dnin ndla","Fragments":["etlt"]},{"Key":"ndla etlt","Fragments":["shui\""]},{"Key":"etlt shui\"","Fragments":["not"]},{"Key":"shui\" not","Fragments":["\"msemoa"]},{"Key":"not \"msemoa","Fragments":["anindn"]},{"Key":"\"msemoa anindn","Fragments":["inndla"]},{"Key":"anindn inndla","Fragments":["etltsh"]},{"Key":"inndla etltsh","Fragments":["ui\""]},{"Key":"etltsh ui\"","Fragments":["as"]},{"Key":"ui\" as","Fragments":["I'd"]},{"Key":"as I'd","Fragments":["expect"]},{"Key":"I'd expect","Fragments":["after"]},{"Key":"expect after","Fragments":["reading"]},{"Key":"after reading","Fragments":["the","this","other"]},{"Key":"the task's","Fragments":["description."]},{"Key":"am not","Fragments":["sure","taking","sure","sure","sure,","sure","too","particularly","sure","happy","the","sure"]},{"Key":"not sure","Fragments":["if","what","whether","there","it","if","if","if","how","-","how","if","if","this","though","that","I","if","I","which","there","if","I","doing","I","if","'original'","about","if","how","whether","what","using","why.","what","that"]},{"Key":"this much","Fragments":["machinery","cleaner","more","more"]},{"Key":"much machinery","Fragments":["is"]},{"Key":"machinery is","Fragments":["actually"]},{"Key":"actually needed","Fragments":["here."]},{"Key":"needed here.","Fragments":["I"]},{"Key":"code would","Fragments":["be","be","be"]},{"Key":"read without","Fragments":["the"]},{"Key":"the trait","Fragments":["and"]},{"Key":"trait and","Fragments":["the","tuple,"]},{"Key":"the nested","Fragments":["object.","ifs.","funtion"]},{"Key":" Got","Fragments":["it,","pretty"]},{"Key":"Got it,","Fragments":["thanks."]},{"Key":"A habit","Fragments":["from"]},{"Key":"habit from","Fragments":["Ruby"]},{"Key":"from Ruby","Fragments":["conventions"]},{"Key":"Ruby conventions","Fragments":["--"]},{"Key":"conventions --","Fragments":["Methods"]},{"Key":"-- Methods","Fragments":["returning"]},{"Key":"Methods returning","Fragments":["Boolean"]},{"Key":"returning Boolean","Fragments":["values"]},{"Key":"Boolean values","Fragments":["end"]},{"Key":"values end","Fragments":["with"]},{"Key":"end with","Fragments":["'?'","question"]},{"Key":"Why do","Fragments":["you","you","you","you","you","u","you","you","you","you"]},{"Key":"use ?","Fragments":["in"]},{"Key":"? in","Fragments":["function"]},{"Key":"in function","Fragments":["names","```db```."]},{"Key":"function names","Fragments":["like","for"]},{"Key":"names like","Fragments":["'valid_?'","x,i,n","f","\"isShouting()\"","`isSomething`"]},{"Key":"like 'valid_?'","Fragments":["?"]},{"Key":"A little","Fragments":["cleanup","bit","more"]},{"Key":"little cleanup","Fragments":["with"]},{"Key":"cleanup with","Fragments":["a"]},{"Key":"a helper","Fragments":["function","method","function","method.","function","function"]},{"Key":" Consider","Fragments":["to","calling","using","refactoring","also","using","using","using","also","`count`."]},{"Key":"Consider to","Fragments":["write","change"]},{"Key":"write transformation","Fragments":["in"]},{"Key":"transformation in","Fragments":["multiple"]},{"Key":"in multiple","Fragments":["lines","places."]},{"Key":"multiple lines","Fragments":["to","as"]},{"Key":"lines to","Fragments":["improve"]},{"Key":"to improve","Fragments":["readability.","readability.","readability","on","on","the","the","and","this.","readability?!","mine."]},{"Key":" `greeting.toList.filter(alpha.contains).forall(_.isUpper)","Fragments":["\u0026\u0026"]},{"Key":"`greeting.toList.filter(alpha.contains).forall(_.isUpper) \u0026\u0026","Fragments":["greeting.toList.filter(alpha.contains).length"]},{"Key":"\u0026\u0026 greeting.toList.filter(alpha.contains).length","Fragments":["\u003e"]},{"Key":"greeting.toList.filter(alpha.contains).length \u003e","Fragments":["0`"]},{"Key":"There must","Fragments":["an","be"]},{"Key":"must an","Fragments":["easier"]},{"Key":"an easier","Fragments":["way"]},{"Key":"easier way","Fragments":["to","to"]},{"Key":"Whoops, somehow","Fragments":["my"]},{"Key":"somehow my","Fragments":["shell","gut"]},{"Key":"my shell","Fragments":["command"]},{"Key":"shell command","Fragments":["ended"]},{"Key":"command ended","Fragments":["up"]},{"Key":"ended up","Fragments":["inside","transforming","with","using","reading","defining","with"]},{"Key":"up inside","Fragments":["the"]},{"Key":"the code!","Fragments":[":D"]},{"Key":" I'll","Fragments":["come","submit","have","keep","go","leave","continue","see","try","submit","need"]},{"Key":"this later.","Fragments":["This"]},{"Key":"later. This","Fragments":["one"]},{"Key":"one is","Fragments":["a","better","to","better.","very","faster"]},{"Key":" @carley","Fragments":["I"]},{"Key":"@carley I","Fragments":["have"]},{"Key":"an annoying","Fragments":["habit"]},{"Key":"annoying habit","Fragments":["of"]},{"Key":"habit of","Fragments":["not","avoiding","using","long"]},{"Key":"not reading","Fragments":["the"]},{"Key":"the README","Fragments":["and","file","of","asks"]},{"Key":"README and","Fragments":["just"]},{"Key":"and just","Fragments":["reading","call","say,","missed","keep","use","smile."]},{"Key":"just reading","Fragments":["the","`string1(i)`."]},{"Key":"the tests.","Fragments":["You're","They","If","I'm","I","So","Feel","Instead","I","Then","But","But"]},{"Key":"tests. You're","Fragments":["right"]},{"Key":"You're right","Fragments":["though,","@murl,"]},{"Key":"right though,","Fragments":["so"]},{"Key":"though, so","Fragments":["I'll","I'm"]},{"Key":"so I'll","Fragments":["fix","go"]},{"Key":"I'll fix","Fragments":["that.","that"]},{"Key":"Looks pretty","Fragments":["much"]},{"Key":"solution minus","Fragments":["some"]},{"Key":"minus some","Fragments":["vertical"]},{"Key":"some vertical","Fragments":["whitespace"]},{"Key":"think however","Fragments":["that"]},{"Key":"however that","Fragments":["`id`"]},{"Key":"that `id`","Fragments":["is"]},{"Key":"`id` is","Fragments":["a"]},{"Key":"bit misleading","Fragments":["as"]},{"Key":"misleading as","Fragments":["a"]},{"Key":"a name,","Fragments":["`score`","eg."]},{"Key":"name, `score`","Fragments":["or"]},{"Key":"`score` or","Fragments":["`points`"]},{"Key":"or `points`","Fragments":["would"]},{"Key":"`points` would","Fragments":["fir"]},{"Key":"would fir","Fragments":["better"]},{"Key":"fir better","Fragments":["here"]},{"Key":"Nice one,","Fragments":["concise"]},{"Key":"one, concise","Fragments":["and"]},{"Key":"concise and","Fragments":["readable.","it","easier","easier.","dense","clear,","readable","more","cool!","declarative"]},{"Key":"you considered","Fragments":["using","using","combining","using","using","deduplicating/automating"]},{"Key":"considered using","Fragments":["`count`","```to```","```.map(...).sum```","```.sum```","a"]},{"Key":"using `count`","Fragments":["with"]},{"Key":"`count` with","Fragments":["a"]},{"Key":"predicate instead","Fragments":["of"]},{"Key":"of `filter`","Fragments":["and"]},{"Key":"`filter` and","Fragments":["`length`?","`length`,","then","the","`orElse`"]},{"Key":" thank","Fragments":["you"]},{"Key":"thank you","Fragments":["very","because"]},{"Key":"you very","Fragments":["much","much"]},{"Key":"very much","Fragments":["for","for","here."]},{"Key":"much for","Fragments":["your","the","the","the","your","my"]},{"Key":"your review.","Fragments":["Using","Using","I","I"]},{"Key":"review. Using","Fragments":["the","to"]},{"Key":"Using the","Fragments":["count","pattern","mutable","triple-quote","for-comprehension","Map"]},{"Key":"the count","Fragments":["is","argument","method.","if","and","function","operation.","function.","method","method","block.","function","method?","method","handle","to"]},{"Key":"count is","Fragments":["indeed","called"]},{"Key":"is indeed","Fragments":["the","to","tail-recursive"]},{"Key":"indeed the","Fragments":["more"]},{"Key":"the more","Fragments":["elegant","general","complex","elegant","names","intuitive","succinct","common","general"]},{"Key":"more elegant","Fragments":["way,","solution.","(and","than","FP","and","with"]},{"Key":"elegant way,","Fragments":["I"]},{"Key":"way, I","Fragments":["updated","just","tried"]},{"Key":"I updated","Fragments":["my","my"]},{"Key":"updated my","Fragments":["solution.","solution,"]},{"Key":"not clear","Fragments":["to","to"]},{"Key":"clear to","Fragments":["me","me","people"]},{"Key":"to me","Fragments":["if","is","(mostly","that","that","a","that","here.","that","in","here.","that","and","as","a","than","in","that","but","as",":-)","it","a","at","for"]},{"Key":"me if","Fragments":["a"]},{"Key":"a message","Fragments":["like","String"]},{"Key":"message like","Fragments":["\"4!\""]},{"Key":"like \"4!\"","Fragments":["should"]},{"Key":"\"4!\" should","Fragments":["be"]},{"Key":"considered shouting","Fragments":["or"]},{"Key":"shouting or","Fragments":["not."]},{"Key":"or not.","Fragments":["This"]},{"Key":"not. This","Fragments":["code"]},{"Key":"code says","Fragments":["it"]},{"Key":"says it","Fragments":["isn't."]},{"Key":"it isn't.","Fragments":["Since"]},{"Key":"isn't. Since","Fragments":["there's"]},{"Key":"Since there's","Fragments":["no"]},{"Key":"there's no","Fragments":["test","need","instance"]},{"Key":"no test","Fragments":["for"]},{"Key":"test for","Fragments":["this","`Shout`","presence"]},{"Key":"case, it","Fragments":["passes"]},{"Key":"it passes","Fragments":["all","the","test"]},{"Key":"all tests,","Fragments":["so..."]},{"Key":"tests, so...","Fragments":["Version"]},{"Key":"so... Version","Fragments":["2"]},{"Key":"2 of","Fragments":["this"]},{"Key":"this handles","Fragments":["this","strings"]},{"Key":"handles this","Fragments":["the","case."]},{"Key":"this the","Fragments":["other","filter","\"scala\""]},{"Key":"other way,","Fragments":["but"]},{"Key":"way, but","Fragments":["it's","I","not","you"]},{"Key":"but it's","Fragments":["quite","mostly","needed","interesting","good","needed","much","a","easier"]},{"Key":"it's quite","Fragments":["a","a"]},{"Key":"more complicated,","Fragments":["and"]},{"Key":"complicated, and","Fragments":["I"]},{"Key":"and I","Fragments":["liked","oversaw","wanted","just","like","would","would","wouldn't","stopped","would","have","do","always","want","just","traverse","have","guess","was","don't","did","was","want","think","like","definitely","wouldn't","don't","deliberately","appreciate","don't","haven't","don't"]},{"Key":"I liked","Fragments":["the","the","the","creating","that","blemale's","better","'a'","this","the","my"]},{"Key":"liked the","Fragments":["version","trick","whitespace","getOrUpdate","style"]},{"Key":"the version","Fragments":["@talia","with"]},{"Key":"version @talia","Fragments":["had"]},{"Key":"@talia had","Fragments":["for"]},{"Key":"had for","Fragments":["this"]},{"Key":"this and","Fragments":["decided","switch","I","will","the"]},{"Key":"and decided","Fragments":["to"]},{"Key":"decided to","Fragments":["use","pretend","just","model","use","try","use","redo","only"]},{"Key":" THanks","Fragments":["for"]},{"Key":"THanks for","Fragments":["feedback,"]},{"Key":"for feedback,","Fragments":["you're"]},{"Key":"feedback, you're","Fragments":["absolutely"]},{"Key":"you're absolutely","Fragments":["right,"]},{"Key":"absolutely right,","Fragments":["I","this"]},{"Key":"right, I","Fragments":["over-complicated"]},{"Key":"I over-complicated","Fragments":["things"]},{"Key":"over-complicated things","Fragments":[":)"]},{"Key":" regarding","Fragments":["the","last"]},{"Key":"regarding the","Fragments":["usage","\"cache\"","toSeq"]},{"Key":"the usage","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"usage of","Fragments":["require","Option","recursion","`containsSlice`","parameters:","the","\"var\"","the","capital"]},{"Key":"of require","Fragments":["that"]},{"Key":"require that","Fragments":["i","the"]},{"Key":"that i","Fragments":["saw","think"]},{"Key":"i saw","Fragments":["in"]},{"Key":"saw in","Fragments":["your"]},{"Key":"your solution.","Fragments":["While","Maybe","Learned"]},{"Key":"solution. While","Fragments":["it"]},{"Key":"While it","Fragments":["looks"]},{"Key":"it looks","Fragments":["really","like","quite","great:)","like","so","kind","like:","much","great!"]},{"Key":"looks really","Fragments":["nice","nice!","cool,","strange.","nice."]},{"Key":"really nice","Fragments":["and","for","way"]},{"Key":"and readable,","Fragments":["doesn't"]},{"Key":"readable, doesn't","Fragments":["it"]},{"Key":"doesn't it","Fragments":["traverse"]},{"Key":"it traverse","Fragments":["the"]},{"Key":"traverse the","Fragments":["map","```Strings```","string","map,"]},{"Key":"map one","Fragments":["extra-time,"]},{"Key":"one extra-time,","Fragments":["for"]},{"Key":"extra-time, for","Fragments":["validation?"]},{"Key":" There's","Fragments":["already","an","no","a","an","also","quite","an","a","a","actually","probably"]},{"Key":"There's already","Fragments":["a"]},{"Key":"already a","Fragments":[".count","map","var","`Seq[Char]`)."]},{"Key":"a .count","Fragments":["on"]},{"Key":".count on","Fragments":["StringOps","the"]},{"Key":"on StringOps","Fragments":["in","(which"]},{"Key":"the standard","Fragments":["library.","library.","library","library","library"]},{"Key":"standard library.","Fragments":["Implementing","It","Using"]},{"Key":"library. Implementing","Fragments":["counts"]},{"Key":"Implementing counts","Fragments":["with"]},{"Key":"counts with","Fragments":["a"]},{"Key":"a three-line","Fragments":["foldLeft"]},{"Key":"three-line foldLeft","Fragments":["is"]},{"Key":"foldLeft is","Fragments":["distinctly","compact"]},{"Key":"is distinctly","Fragments":["less"]},{"Key":"distinctly less","Fragments":["readable."]},{"Key":"helper function","Fragments":["for","to","to","for","that","as","that","for","for","for","```slice```)","for","for","inside","for","w/","to","you","to","for","to","for"]},{"Key":"function for","Fragments":["```year","squaring","input","better","the","example:","your","```y","lists","the","```year","clarity's","```year","count:","``w","clarity","```year","```(seconds"]},{"Key":"for ```year","Fragments":["%","%","%","%","%","%"]},{"Key":"```year %","Fragments":["_```.","_```.","_```.","x","_```.","_```."]},{"Key":"Maybe I","Fragments":["should","should","should"]},{"Key":"should dive","Fragments":["a"]},{"Key":"dive a","Fragments":["bit"]},{"Key":"bit into","Fragments":["this"]},{"Key":"into this","Fragments":["Java","zip","trap","habit"]},{"Key":"this Java","Fragments":["8","constant"]},{"Key":"time lib.","Fragments":[":-)"]},{"Key":"love `str.forall(_.isWhitespace)`!","Fragments":["It"]},{"Key":"`str.forall(_.isWhitespace)`! It","Fragments":["is"]},{"Key":"my new","Fragments":["favorite"]},{"Key":"new favorite","Fragments":["functional"]},{"Key":"favorite functional","Fragments":["way"]},{"Key":"a blank","Fragments":["string."]},{"Key":"blank string.","Fragments":["Thanks"]},{"Key":"string. Thanks","Fragments":["for"]},{"Key":"for sharing","Fragments":["that."]},{"Key":"Your tests","Fragments":["will"]},{"Key":"tests will","Fragments":["pass"]},{"Key":"will pass","Fragments":["without","the"]},{"Key":"A more","Fragments":["functional","functional","idiomatic","readable","natural"]},{"Key":"do `str.endsWith(\"?\")`","Fragments":["is"]},{"Key":"`str.endsWith(\"?\")` is","Fragments":["`str.reverse.head"]},{"Key":"is `str.reverse.head","Fragments":["=="]},{"Key":"`str.reverse.head ==","Fragments":["'?'`"]},{"Key":"== '?'`","Fragments":["This","for"]},{"Key":"'?'` This","Fragments":["is"]},{"Key":"not necessarily","Fragments":["more","that"]},{"Key":"necessarily more","Fragments":["idiomatic"]},{"Key":"idiomatic since","Fragments":["dropping"]},{"Key":"since dropping","Fragments":["into"]},{"Key":"dropping into","Fragments":["the"]},{"Key":"into the","Fragments":["Java","companion","class,","chain),","object","objects","Scala","Scala","companion","one","companion","`Sublist`","habit","unapply","scope"]},{"Key":"Java convenience","Fragments":["methods"]},{"Key":"convenience methods","Fragments":["are"]},{"Key":"methods are","Fragments":["perfectly","available","kind","returning","simple","made"]},{"Key":"are perfectly","Fragments":["acceptable."]},{"Key":"actually my","Fragments":["second"]},{"Key":"second go","Fragments":["at"]},{"Key":"go at","Fragments":["it.","this."]},{"Key":"at it.","Fragments":["I"]},{"Key":"I originally","Fragments":["had","used"]},{"Key":"originally had","Fragments":["some"]},{"Key":"had some","Fragments":["more","guidance","trouble"]},{"Key":"some more","Fragments":["imperative","optimizations","and","by","tail","useful","hints:","by","indents","that"]},{"Key":"more imperative","Fragments":["logic","than"]},{"Key":"imperative logic","Fragments":["in"]},{"Key":"logic in","Fragments":["there.","isSublist","the"]},{"Key":"to admit","Fragments":["that"]},{"Key":"admit that","Fragments":["I","different"]},{"Key":"some guidance","Fragments":["from:"]},{"Key":"guidance from:","Fragments":["https://github.com/exercism/xscala/tree/master/meetup"]},{"Key":"find some","Fragments":["improvement:","better","simpler","other"]},{"Key":"some improvement:","Fragments":["the"]},{"Key":"improvement: the","Fragments":["pling,plang,plong"]},{"Key":"the pling,plang,plong","Fragments":["functions"]},{"Key":"pling,plang,plong functions","Fragments":["smell"]},{"Key":"functions smell","Fragments":["copy"]},{"Key":"smell copy","Fragments":["paste."]},{"Key":"copy paste.","Fragments":["But"]},{"Key":"paste. But","Fragments":["not"]},{"Key":"But not","Fragments":["really.","a","any"]},{"Key":" only","Fragments":["nitpick","problem","missing","complaint","problem","nitpick"]},{"Key":"only nitpick","Fragments":["one","I","could"]},{"Key":"nitpick one","Fragments":["could"]},{"Key":"have here","Fragments":["is"]},{"Key":"the simplest","Fragments":["data","way.","thing","and"]},{"Key":"simplest data","Fragments":["structure"]},{"Key":"data structure","Fragments":["needed","that","List[Tuple[Char,","that"]},{"Key":"structure needed","Fragments":["for"]},{"Key":"needed for","Fragments":["the"]},{"Key":"the job:","Fragments":["```Seq```"]},{"Key":"job: ```Seq```","Fragments":["instead"]},{"Key":"```Seq``` instead","Fragments":["of","of"]},{"Key":" Try","Fragments":["to","it","to","with","to","to","to","to","pattern","to","to","pattern","to","to"]},{"Key":"Try to","Fragments":["avoid","avoid","re-implement","avoid","use","find","find","keep","always","use","avoid","get","use","do","find","keep","reduce","think"]},{"Key":"avoid readers","Fragments":["of"]},{"Key":"readers of","Fragments":["your","your"]},{"Key":"code starting","Fragments":["to"]},{"Key":"to think","Fragments":["(\"why","that","a","about.","binary.","about","deeply","as"]},{"Key":"think (\"why","Fragments":["a"]},{"Key":"(\"why a","Fragments":["ListMap?\")."]},{"Key":"use `trim`","Fragments":["and"]},{"Key":"`trim` and","Fragments":["`isEmpty`."]},{"Key":" alternatively,","Fragments":["you"]},{"Key":"alternatively, you","Fragments":["might"]},{"Key":"might try","Fragments":["Scala's","the","to","for","Scala's","Scala","regex","to"]},{"Key":"try Scala's","Fragments":["collection","regex","pattern"]},{"Key":"Scala's collection","Fragments":["functions","functions","functions)."]},{"Key":"like `exists,","Fragments":["forall,"]},{"Key":"`exists, forall,","Fragments":["filter,"]},{"Key":"forall, filter,","Fragments":["...`."]},{"Key":"Looks good","Fragments":[":)","-","to","overall.","otherwise.","to"]},{"Key":"1. Duplication","Fragments":["of"]},{"Key":"Duplication of","Fragments":["`ns.size`"]},{"Key":"of `ns.size`","Fragments":["can"]},{"Key":"`ns.size` can","Fragments":["be"]},{"Key":"be avoided","Fragments":["by","if"]},{"Key":"avoided by","Fragments":["pattern"]},{"Key":"by pattern","Fragments":["matching,"]},{"Key":"pattern matching,","Fragments":["which","why","as","definitely","recursive","something","too."]},{"Key":"matching, which","Fragments":["might"]},{"Key":"which might","Fragments":["look"]},{"Key":"might look","Fragments":["slightly","a","cleaner."]},{"Key":"look slightly","Fragments":["simpler."]},{"Key":"2. `String`","Fragments":["can"]},{"Key":"`String` can","Fragments":["be","be"]},{"Key":"be multiplied","Fragments":["like"]},{"Key":"multiplied like","Fragments":["`\"0\""]},{"Key":"like `\"0\"","Fragments":["*"]},{"Key":"`\"0\" *","Fragments":["10`.","10`"]},{"Key":" 3.","Fragments":["`def`","You","`message.trim()","Curly","[The","see","`words","It","I","The","def","Either","instead"]},{"Key":"3. `def`","Fragments":["can"]},{"Key":"`def` can","Fragments":["be"]},{"Key":"be overridden","Fragments":["by"]},{"Key":"overridden by","Fragments":["`val`."]},{"Key":"by `val`.","Fragments":["It"]},{"Key":"`val`. It","Fragments":["might"]},{"Key":"It might","Fragments":["be","be","be","be","be","look"]},{"Key":"make `toString`","Fragments":["a","a"]},{"Key":"`toString` a","Fragments":["lazy","lazy"]},{"Key":"a lazy","Fragments":["val","modifier.","modifier","list","val","list","val.","val"]},{"Key":"lazy val","Fragments":["with","s","performance\"","instead","when","fibs:","so","SquaresOfNaturals:","SquaresOfNaturals:","here:","will"]},{"Key":"val with","Fragments":["a","some"]},{"Key":"a block","Fragments":["which","consists"]},{"Key":"block which","Fragments":["contains"]},{"Key":"which contains","Fragments":["`front`"]},{"Key":"contains `front`","Fragments":["and"]},{"Key":"`front` and","Fragments":["`back`"]},{"Key":"and `back`","Fragments":["instead"]},{"Key":"`back` instead","Fragments":["of"]},{"Key":"of making","Fragments":["them","the"]},{"Key":"making them","Fragments":["as","```@jewel```ursive?"]},{"Key":"them as","Fragments":["private","```lazy```","generically","specifically","```lazy"]},{"Key":"as private","Fragments":["members.","or"]},{"Key":"I made","Fragments":["a","my","the","the"]},{"Key":"made a","Fragments":["point","member"]},{"Key":"of trying","Fragments":["to","out","to"]},{"Key":"to minimize","Fragments":["repeated"]},{"Key":"minimize repeated","Fragments":["work."]},{"Key":"repeated work.","Fragments":["Multiple"]},{"Key":"work. Multiple","Fragments":["calls"]},{"Key":"Multiple calls","Fragments":["to"]},{"Key":"calls to","Fragments":["`teenth`,","`onFoo`","`sorted`","be"]},{"Key":"to `teenth`,","Fragments":["`first`,"]},{"Key":"`teenth`, `first`,","Fragments":["etc."]},{"Key":"`first`, etc.","Fragments":["will"]},{"Key":"etc. will","Fragments":["only"]},{"Key":"will only","Fragments":["need","be","optimize","return","hold","prevent"]},{"Key":"only need","Fragments":["to","to","to","to","to"]},{"Key":"to instantiate","Fragments":["a"]},{"Key":"instantiate a","Fragments":["single"]},{"Key":"single `GregorianCalendar`","Fragments":["and"]},{"Key":"`GregorianCalendar` and","Fragments":["do"]},{"Key":"and do","Fragments":["some","everything","you"]},{"Key":"do some","Fragments":["minimal","of","work"]},{"Key":"some minimal","Fragments":["arithmetic."]},{"Key":"also decided","Fragments":["to","to"]},{"Key":"to pretend","Fragments":["`GregorianCalendar`"]},{"Key":"pretend `GregorianCalendar`","Fragments":["is"]},{"Key":"`GregorianCalendar` is","Fragments":["actually","mutable."]},{"Key":"actually an","Fragments":["immutable"]},{"Key":"an immutable","Fragments":["object","var?","one.","version","map,","object","object.","Map","interface","transformation"]},{"Key":"immutable object","Fragments":["like","or"]},{"Key":"object like","Fragments":["a","your"]},{"Key":"like a","Fragments":["proper","Map,","`StyleOfAddress`","way","draft","natural","collection","good","pure","bit","function","huge","lot","`fold`","good","virus.","section","lot"]},{"Key":"a proper","Fragments":["Scala"]},{"Key":"proper Scala","Fragments":["datetime","coding"]},{"Key":"Scala datetime","Fragments":["library"]},{"Key":"datetime library","Fragments":["ought"]},{"Key":"library ought","Fragments":["to"]},{"Key":"ought to","Fragments":["provide.","be"]},{"Key":" Indeed,","Fragments":["when","I"]},{"Key":"Indeed, when","Fragments":["I"]},{"Key":"I look","Fragments":["now","at","at","at"]},{"Key":"look now","Fragments":["I"]},{"Key":"am wondering","Fragments":["myself"]},{"Key":"wondering myself","Fragments":["why"]},{"Key":"myself why","Fragments":["..."]},{"Key":"why ...","Fragments":["my"]},{"Key":"... my","Fragments":["brain"]},{"Key":"my brain","Fragments":["was","coming"]},{"Key":"brain was","Fragments":["in"]},{"Key":"in sleep","Fragments":["mode"]},{"Key":"sleep mode","Fragments":[":))"]},{"Key":"the Boolean","Fragments":["expression","immediately?"]},{"Key":"Boolean expression","Fragments":["in","instead","instead?"]},{"Key":"in ```isValidTriangle```","Fragments":["as"]},{"Key":"```isValidTriangle``` as","Fragments":["return"]},{"Key":"as return","Fragments":["value?","value"]},{"Key":"return value?","Fragments":["you"]},{"Key":"value? you","Fragments":["might"]},{"Key":"might even","Fragments":["have"]},{"Key":"even have","Fragments":["it","lower"]},{"Key":"have it","Fragments":["as","of","as","return","as","as","in,","either"]},{"Key":"it as","Fragments":["a","a","\"Map\".","a","`private`).","flatMap/map","a","result?","```implicit```","implicit","a","long","a","a","lazy","a","short","a"]},{"Key":"val -","Fragments":["it"]},{"Key":"- it","Fragments":["will","should","just","will","works!"]},{"Key":"will never","Fragments":["have","result","change.","change.","get","be","change","change.","have","have"]},{"Key":"never have","Fragments":["a","the","to","to","to"]},{"Key":" Hmm,","Fragments":["not","what","I"]},{"Key":"Hmm, not","Fragments":["sure"]},{"Key":"what happened","Fragments":["here"]},{"Key":"happened here","Fragments":["but"]},{"Key":"here but","Fragments":["that","is"]},{"Key":"that 'map'","Fragments":["should"]},{"Key":"'map' should","Fragments":["'grouped'."]},{"Key":"should 'grouped'.","Fragments":["I"]},{"Key":"'grouped'. I","Fragments":["must"]},{"Key":"I must","Fragments":["have","have","ask:","have","have"]},{"Key":"must have","Fragments":["accidentally","just","somehow","missed"]},{"Key":"have accidentally","Fragments":["munged"]},{"Key":"accidentally munged","Fragments":["the"]},{"Key":"munged the","Fragments":["code"]},{"Key":"code after","Fragments":["I"]},{"Key":"after I","Fragments":["ran","had","look","get","initialized"]},{"Key":"I ran","Fragments":["the","into"]},{"Key":"ran the","Fragments":["tests.","tests.","tests"]},{"Key":"This doesn't","Fragments":["compile","work","work","handle","work","handle"]},{"Key":"doesn't compile","Fragments":["in"]},{"Key":"compile in","Fragments":["my"]},{"Key":" \u003cconsole\u003e:13:","Fragments":["error:"]},{"Key":"\u003cconsole\u003e:13: error:","Fragments":["not"]},{"Key":"error: not","Fragments":["found:"]},{"Key":"not found:","Fragments":["value","value"]},{"Key":"found: value","Fragments":["map","Hamming\"."]},{"Key":" map","Fragments":["get(wordLower.sorted)"]},{"Key":"map get(wordLower.sorted)","Fragments":["getOrElse(Seq.empty[String])"]},{"Key":"Interesting problem.","Fragments":["It"]},{"Key":"problem. It","Fragments":["took"]},{"Key":"It took","Fragments":["me"]},{"Key":"took me","Fragments":["a","a","a","was"]},{"Key":"a while","Fragments":["to"]},{"Key":"while to","Fragments":["figure"]},{"Key":"I needed","Fragments":["to","to","a"]},{"Key":"needed to","Fragments":["do","modify","append","have"]},{"Key":"do for","Fragments":["a"]},{"Key":"a map","Fragments":["comprehension,","of","that","implementation","with","of","that","operation,","by","based","directly?","of","instead","with","function.","from","of"]},{"Key":"map comprehension,","Fragments":["but"]},{"Key":"comprehension, but","Fragments":["once","I"]},{"Key":"but once","Fragments":["I"]},{"Key":"once I","Fragments":["did,","realized"]},{"Key":"I did,","Fragments":["this","why?","but"]},{"Key":"did, this","Fragments":["was"]},{"Key":"this was","Fragments":["nice","rather","auto-formatted","just","my"]},{"Key":"was nice","Fragments":["and"]},{"Key":"I always","Fragments":["prefer","forget","start","find","ended"]},{"Key":"always prefer","Fragments":["validations"]},{"Key":"prefer validations","Fragments":["on"]},{"Key":"validations on","Fragments":["top"]},{"Key":"on top","Fragments":["and"]},{"Key":"top and","Fragments":["then"]},{"Key":"then code","Fragments":["that"]},{"Key":"code that","Fragments":["pass","we","uses","is","may","satisfies"]},{"Key":"that pass","Fragments":["them,"]},{"Key":"pass them,","Fragments":["like:"]},{"Key":"def count(c:Char):Int","Fragments":["="]},{"Key":"count(c:Char):Int =","Fragments":["{"]},{"Key":"if (!ntides.contains(c))","Fragments":["{"]},{"Key":" throw","Fragments":["new","new"]},{"Key":"throw new","Fragments":["IllegalArgumentException","IllegalArgumentException","IllegalArgumentException","IllegalArgumentException`,"]},{"Key":" s","Fragments":["count","match"]},{"Key":"s count","Fragments":["{"]},{"Key":"count {","Fragments":["_==c","...","case","case(a,b)","_==nucleotide}"]},{"Key":"{ _==c","Fragments":["}"]},{"Key":"Is not","Fragments":["easier"]},{"Key":"not easier","Fragments":["to"]},{"Key":"what happen","Fragments":["and"]},{"Key":"happen and","Fragments":["which"]},{"Key":"and which","Fragments":["things"]},{"Key":"which things","Fragments":["are"]},{"Key":"things are","Fragments":["required"]},{"Key":"are required","Fragments":["to"]},{"Key":"required to","Fragments":["allow"]},{"Key":"to allow","Fragments":["the","``|``","for"]},{"Key":"allow the","Fragments":["method"]},{"Key":"the method","Fragments":["work?","is","(the","returned","(so","r,","def","with","signatures","name","on"]},{"Key":"the way","Fragments":["u","Reply","it","how","you","precedence","you","I'd","needed","you","you've","to","of","that","the"]},{"Key":"way u","Fragments":["used"]},{"Key":"u used","Fragments":["regex"]},{"Key":"used regex","Fragments":["with"]},{"Key":"regex with","Fragments":["split","findAllIn."]},{"Key":"with split","Fragments":["(Y).","and"]},{"Key":"val invalidPhoneNumber","Fragments":["="]},{"Key":"invalidPhoneNumber =","Fragments":["\"0\""]},{"Key":"= \"0\"","Fragments":["*","*"]},{"Key":"\"0\" *","Fragments":["validLength","10","10"]},{"Key":"* validLength","Fragments":["wow"]},{"Key":"validLength wow","Fragments":["looks"]},{"Key":"wow looks","Fragments":["cool"]},{"Key":"looks cool","Fragments":["you"]},{"Key":"cool you","Fragments":["should"]},{"Key":"should talk","Fragments":["about"]},{"Key":"talk about","Fragments":["this","my"]},{"Key":"this on","Fragments":["class"]},{"Key":"I need","Fragments":["a","to","to","to","to","for","to","to","to","to","to"]},{"Key":"need a","Fragments":["semicolon","`collection.mutable.Seq`","second","```List```","temporary","way","companion","colon","mutable"]},{"Key":"a semicolon","Fragments":["detector"]},{"Key":"semicolon detector","Fragments":[":D"]},{"Key":" what","Fragments":["bothers","about","should","does","I","if","about","might","would","about"]},{"Key":"what bothers","Fragments":["me"]},{"Key":"bothers me","Fragments":["is","to"]},{"Key":"me is","Fragments":["that","to"]},{"Key":"that if","Fragments":["you","two","the","you"]},{"Key":"companion object,","Fragments":["you","so","why","if","but"]},{"Key":"object, you","Fragments":["still"]},{"Key":"you still","Fragments":["need","wants","want","want","have","don't","have"]},{"Key":"still need","Fragments":["to","a","to"]},{"Key":"write an","Fragments":["import...."]},{"Key":"Ok, this","Fragments":["might"]},{"Key":"this might","Fragments":["be","be","be","work.","be"]},{"Key":"some topic","Fragments":["of"]},{"Key":"topic of","Fragments":["debate."]},{"Key":"case I","Fragments":["tend","don't","would","would","find","would","would","recommend"]},{"Key":"object b/c","Fragments":["the"]},{"Key":"b/c the","Fragments":["code"]},{"Key":"is only","Fragments":["used","used","evaluated","sorting","one","created","necessary","cosmetics.","for","used","used","done","about","sanitizing"]},{"Key":"only used","Fragments":["inside","in","once,","in"]},{"Key":"used inside","Fragments":["the"]},{"Key":"the class","Fragments":["itself","scope?","property.","definition)","stick","itself","is","and","is","variable","scope,"]},{"Key":"class itself","Fragments":["(and","instead"]},{"Key":"itself (and","Fragments":["you"]},{"Key":"(and you","Fragments":["could","could","can","might","could","did)"]},{"Key":"then declare","Fragments":["code"]},{"Key":"declare code","Fragments":["private"]},{"Key":"code private","Fragments":["if"]},{"Key":"private if","Fragments":["you","you"]},{"Key":"you prefer","Fragments":["another","using","that"]},{"Key":"prefer another","Fragments":["object"]},{"Key":"another object","Fragments":["then"]},{"Key":"object then","Fragments":["I"]},{"Key":"would at","Fragments":["least"]},{"Key":"least indicate","Fragments":["the"]},{"Key":"indicate the","Fragments":["close","return"]},{"Key":"the close","Fragments":["relationship"]},{"Key":"close relationship","Fragments":["to"]},{"Key":"relationship to","Fragments":["PhoneNumber"]},{"Key":"to PhoneNumber","Fragments":["in"]},{"Key":"PhoneNumber in","Fragments":["the"]},{"Key":"the name,","Fragments":["e.g."]},{"Key":"name, e.g.","Fragments":["\"PhoneNumberConfig\""]},{"Key":"e.g. \"PhoneNumberConfig\"","Fragments":["or"]},{"Key":"\"PhoneNumberConfig\" or","Fragments":["so."]},{"Key":" btw,","Fragments":["pls","you","what","there","thx","you","your","your","I","personally","you","if","Scala","why","declaring"]},{"Key":"btw, pls","Fragments":["remove"]},{"Key":"pls remove","Fragments":["the","the"]},{"Key":"remove the","Fragments":["semicolon","`pending`","`pending`","regular","boundary).","```println```.","println().","commented","```(_)```.","initial","if.","nested","```_\u003c_```","type","```(_)```","returns.","pattern","println().","```if```.","```getOrElse```.","parens","semicolon","return","```if```.","return","`if`altogether","pending","semicolons!"]},{"Key":"the semicolon","Fragments":["in","-"]},{"Key":"semicolon in","Fragments":["line"]},{"Key":"in line","Fragments":["7!","9","2.","8","15","16","14","10","9","9"]},{"Key":"line 7!","Fragments":[";-)"]},{"Key":" @lyric","Fragments":["-"]},{"Key":"@lyric -","Fragments":["Why"]},{"Key":"- Why","Fragments":["would"]},{"Key":"Why would","Fragments":["I","you","it"]},{"Key":"would I","Fragments":["actually","have"]},{"Key":"actually use","Fragments":["a"]},{"Key":"a \"companion","Fragments":["object\""]},{"Key":"\"companion object\"","Fragments":["here?","for"]},{"Key":" Isn't","Fragments":["different"]},{"Key":"Isn't different","Fragments":["naming"]},{"Key":"different naming","Fragments":["a"]},{"Key":"naming a","Fragments":["bit"]},{"Key":"more logical","Fragments":["here?","to","than"]},{"Key":"logical here?","Fragments":["I"]},{"Key":"here? I","Fragments":["am"]},{"Key":"not taking","Fragments":["the"]},{"Key":"taking the","Fragments":["advantage"]},{"Key":"the advantage","Fragments":["of","of"]},{"Key":"advantage of","Fragments":["the","the","lexical","the","the"]},{"Key":"the \"factory\"","Fragments":["method"]},{"Key":"\"factory\" method","Fragments":["of"]},{"Key":"of companion","Fragments":["object,","objects,"]},{"Key":"object, so","Fragments":["why"]},{"Key":"so why","Fragments":["not","then","the","not","not","not","not"]},{"Key":"just any","Fragments":["other"]},{"Key":"any other","Fragments":["name?...","choice.","statement.","side"]},{"Key":" fix","Fragments":["iteration"]},{"Key":"fix iteration","Fragments":["no."]},{"Key":"iteration no.","Fragments":["1,"]},{"Key":"no. 1,","Fragments":["now"]},{"Key":"1, now","Fragments":["with"]},{"Key":"now with","Fragments":["helper"]},{"Key":"with helper","Fragments":["method."]},{"Key":"* `line.toUpperCase()`:","Fragments":["the"]},{"Key":"`line.toUpperCase()`: the","Fragments":["parentheses"]},{"Key":"the parentheses","Fragments":["are","from","```([A-Z]{2,})```).","of"]},{"Key":"can replace","Fragments":["this:","foldLeft.","\"foldLeft\".","the","both","the","all"]},{"Key":" line.indexOf('?')","Fragments":["=="]},{"Key":"line.indexOf('?') ==","Fragments":["line.length()"]},{"Key":"== line.length()","Fragments":["-"]},{"Key":"line.length() -","Fragments":["1"]},{"Key":"* Since","Fragments":["a"]},{"Key":"Since a","Fragments":["return"]},{"Key":"a return","Fragments":["exits","value.","value."]},{"Key":"return exits","Fragments":["the"]},{"Key":"exits the","Fragments":["function,"]},{"Key":"function, the","Fragments":["else"]},{"Key":"the else","Fragments":["if"]},{"Key":"else if","Fragments":["are","(...)","(...)","(isQuestion)","(isSlence)","(s1","version,","statement.","(a","version,","(message.toUpperCase","(message.endsWith(\"?\"))","(isAskingQuestion)","(s.replace(\"","(s.trim().isEmpty)","for"]},{"Key":"if are","Fragments":["not"]},{"Key":"* `line.replaceAll(\"\\\\s+\",","Fragments":["\"\").length()"]},{"Key":"`line.replaceAll(\"\\\\s+\", \"\").length()","Fragments":["=="]},{"Key":"\"\").length() ==","Fragments":["0`"]},{"Key":"a `matches`","Fragments":["where"]},{"Key":"`matches` where","Fragments":["you"]},{"Key":"where you","Fragments":["use","have"]},{"Key":"the regex","Fragments":["`^`","is","to","match","and","in","and","is","(located","is","within","so","seems","that","you","\"\"\"\\w{2}\\d{3}\"\"\"."]},{"Key":"regex `^`","Fragments":["and"]},{"Key":"`^` and","Fragments":["`$`"]},{"Key":"and `$`","Fragments":["to"]},{"Key":"`$` to","Fragments":["indicate"]},{"Key":"indicate beginning","Fragments":["and"]},{"Key":"beginning and","Fragments":["end","end","remove"]},{"Key":"and end","Fragments":["of","of"]},{"Key":"end of","Fragments":["string.","the","the","the","the","a","a","the","the"]},{"Key":"of string.","Fragments":["I'd"]},{"Key":"string. I'd","Fragments":["also"]},{"Key":"I'd also","Fragments":["replace","move","suggest","recomend"]},{"Key":"also replace","Fragments":["the"]},{"Key":"replace the","Fragments":["`+`","pattern","`getOrElse`","magic","pattern","if","`List()`"]},{"Key":"the `+`","Fragments":["with"]},{"Key":"`+` with","Fragments":["`*`"]},{"Key":"with `*`","Fragments":["to"]},{"Key":"`*` to","Fragments":["match"]},{"Key":"to match","Fragments":["0","and","punctuation","the","questions","that"]},{"Key":"match 0","Fragments":["or"]},{"Key":"0 or","Fragments":["more"]},{"Key":"or more","Fragments":["characters","whitespaces).","to","equivalent","convoluted\",","convoluted."]},{"Key":"more characters","Fragments":["instead"]},{"Key":"characters instead","Fragments":["of","of","of"]},{"Key":"of one","Fragments":["or","of","pass"]},{"Key":"one or","Fragments":["more.","the","two","the"]},{"Key":"or more.","Fragments":["Another"]},{"Key":"more. Another","Fragments":["alternative"]},{"Key":"Another alternative","Fragments":["is"]},{"Key":"alternative is","Fragments":["to","using"]},{"Key":"trim and","Fragments":["then"]},{"Key":"then check","Fragments":["for","for"]},{"Key":" Pattern","Fragments":["matching","matching","matching"]},{"Key":"Pattern matching","Fragments":["is","with","seems","pattern"]},{"Key":"matching is","Fragments":["much","a","a","easier","probably","a","just"]},{"Key":"more Scala-y.","Fragments":["Still"]},{"Key":"Scala-y. Still","Fragments":["very"]},{"Key":"Still very","Fragments":["English-specific"]},{"Key":"can have","Fragments":["a","```nuclieotides```","a","a","a","the","sorted()"]},{"Key":"a discussion","Fragments":["about","of"]},{"Key":"discussion about","Fragments":["the","scala"]},{"Key":"match variable","Fragments":["names:","as","inside"]},{"Key":" Hardcore","Fragments":["FP"]},{"Key":"Hardcore FP","Fragments":["dudes"]},{"Key":"FP dudes","Fragments":["would"]},{"Key":"dudes would","Fragments":["in"]},{"Key":"would in","Fragments":["general"]},{"Key":"general prefer","Fragments":["one"]},{"Key":"prefer one","Fragments":["letter"]},{"Key":"one letter","Fragments":["names"]},{"Key":"letter names","Fragments":["like","for","for","for"]},{"Key":"like x,i,n","Fragments":["everywhere."]},{"Key":"personally like","Fragments":["longer"]},{"Key":"like longer","Fragments":["expressive"]},{"Key":"longer expressive","Fragments":["names"]},{"Key":"expressive names","Fragments":["where"]},{"Key":"names where","Fragments":["the"]},{"Key":"where the","Fragments":["name","sum","input","lengths","`filter`","strings"]},{"Key":"name really","Fragments":["adds"]},{"Key":"really adds","Fragments":["to"]},{"Key":" Having","Fragments":["said","said"]},{"Key":"Having said","Fragments":["that,","that,","that,"]},{"Key":"said that,","Fragments":["I","your","I"]},{"Key":"that, I","Fragments":["am","am","like"]},{"Key":"sure whether","Fragments":["in","```def"]},{"Key":"whether in","Fragments":["your"]},{"Key":"your case","Fragments":["longer","you","`List[(Int,","I","\"db\"","it"]},{"Key":"case longer","Fragments":["names"]},{"Key":"names help","Fragments":["much"]},{"Key":"help much","Fragments":["as"]},{"Key":"much as","Fragments":["you","possible"]},{"Key":"the if-condition","Fragments":["explaining"]},{"Key":"if-condition explaining","Fragments":["the"]},{"Key":"explaining the","Fragments":["meaning"]},{"Key":"the meaning","Fragments":["of","in"]},{"Key":"meaning of","Fragments":["the","the","```firstDayInWeekNumber```"]},{"Key":"variable right","Fragments":["after"]},{"Key":"right after","Fragments":["its"]},{"Key":"after its","Fragments":["declaration."]},{"Key":"Perhaps another","Fragments":["matter"]},{"Key":"another matter","Fragments":["of","would"]},{"Key":"of personal","Fragments":["taste","preference","taste"]},{"Key":"and style,","Fragments":["that."]},{"Key":"style, that.","Fragments":[":-)"]},{"Key":" Over","Fragments":["engineered"]},{"Key":"Over engineered","Fragments":["a"]},{"Key":"engineered a","Fragments":["bit"]},{"Key":"bit but","Fragments":["a"]},{"Key":"but a","Fragments":["neat","functional","safer","bit","simple"]},{"Key":"a neat","Fragments":["approach."]},{"Key":"using two","Fragments":["pointers"]},{"Key":"two pointers","Fragments":["and"]},{"Key":"pointers and","Fragments":["a"]},{"Key":"a linked","Fragments":["list"]},{"Key":"linked list","Fragments":["is","elements"]},{"Key":"list is","Fragments":["to","circular```","useful","empty","a","nice,","generated"]},{"Key":"have less","Fragments":["than"]},{"Key":"less than","Fragments":["O(n)","50","zero","zero,"]},{"Key":"than O(n)","Fragments":["complexity"]},{"Key":"O(n) complexity","Fragments":["for"]},{"Key":"complexity for","Fragments":["insertion"]},{"Key":"for insertion","Fragments":["and"]},{"Key":"insertion and","Fragments":["deletion"]},{"Key":"and deletion","Fragments":["on"]},{"Key":"deletion on","Fragments":["both"]},{"Key":"on both","Fragments":["ends","empty"]},{"Key":"both ends","Fragments":["of"]},{"Key":"ends of","Fragments":["the"]},{"Key":"the list","Fragments":["(by","is","of","of","using","using","of","cannot","would","from","lazy","with","below",";-)","is","or","of","of","to"]},{"Key":"list (by","Fragments":["just"]},{"Key":"(by just","Fragments":["changing"]},{"Key":"just changing","Fragments":["the"]},{"Key":"the resp.","Fragments":["pointers","tests.","Collection"]},{"Key":"resp. pointers","Fragments":["of"]},{"Key":"pointers of","Fragments":["the"]},{"Key":"the linked","Fragments":["list","list."]},{"Key":"list elements","Fragments":["at"]},{"Key":"elements at","Fragments":["the"]},{"Key":"at the","Fragments":["front","`forall`","functions","problem","beginning","other","time.","solution","```zip```","end?","readme,","methods","end","end","second","end","methods","other","regex","beginning","zip","moment","bottom,","latest","bottom","comments","beginning,","moment!)","second","cost","time","end","head","right","documentation","functions","`StringOps`","`asDigit`","time.","\"if\"","object","code","code","List","function","end","end","expense","moment","beginning"]},{"Key":"the front","Fragments":["and","of"]},{"Key":"front and","Fragments":["back)."]},{"Key":"Ok, if","Fragments":["you"]},{"Key":"you insist","Fragments":["on","on","on","then","on","on"]},{"Key":"insist on","Fragments":["immutable","that","two","removing","returning"]},{"Key":"on immutable","Fragments":["data"]},{"Key":"immutable data","Fragments":["structures/no"]},{"Key":"data structures/no","Fragments":["var's"]},{"Key":"structures/no var's","Fragments":["then"]},{"Key":"var's then","Fragments":["you"]},{"Key":"have any","Fragments":["other","regex","letters","regex","reasons","consistent"]},{"Key":"have O(n)","Fragments":["here"]},{"Key":"O(n) here","Fragments":["by"]},{"Key":"by calling","Fragments":["```reverse```","into","a","random.nextInt"]},{"Key":"calling ```reverse```","Fragments":["on"]},{"Key":"```reverse``` on","Fragments":["the"]},{"Key":"you keep","Fragments":["reading","an","the"]},{"Key":"keep reading","Fragments":["the"]},{"Key":"the Readme,","Fragments":["as","but"]},{"Key":"Readme, as","Fragments":["I"]},{"Key":"I copied","Fragments":["to","the","https://github.com/exercism/xscala/blob/master/bob/example.scala"]},{"Key":"copied to","Fragments":["lines"]},{"Key":"to lines","Fragments":["2-5"]},{"Key":"lines 2-5","Fragments":["in"]},{"Key":"2-5 in","Fragments":["my"]},{"Key":"code, it","Fragments":["explains","can","would"]},{"Key":"it explains","Fragments":["an"]},{"Key":"explains an","Fragments":["option"]},{"Key":"an option","Fragments":["in"]},{"Key":"option in","Fragments":["case"]},{"Key":"in case","Fragments":["your","the","one","you","I","anyone","of","the","of","this"]},{"Key":"case your","Fragments":["language"]},{"Key":"your language","Fragments":["is"]},{"Key":"language is","Fragments":["immutable."]},{"Key":"is immutable.","Fragments":["I"]},{"Key":"immutable. I","Fragments":["rather"]},{"Key":"I rather","Fragments":["use"]},{"Key":"rather use","Fragments":["Scala","```Future.fold```","```withDefaultValue```"]},{"Key":"use Scala","Fragments":["as","String","Collection","Collection","collection","String","pattern","function"]},{"Key":"Scala as","Fragments":["immutable","well."]},{"Key":"as immutable","Fragments":["if"]},{"Key":"immutable if","Fragments":["I","you"]},{"Key":"can (and","Fragments":["I","probably","should)","you"]},{"Key":"(and I","Fragments":["only","guess"]},{"Key":"I only","Fragments":["use","see","sent"]},{"Key":"only use","Fragments":["var","the"]},{"Key":"use var","Fragments":["on"]},{"Key":"var on","Fragments":["lines"]},{"Key":"on lines","Fragments":["7-8"]},{"Key":"lines 7-8","Fragments":["because"]},{"Key":"7-8 because","Fragments":["the"]},{"Key":"because the","Fragments":["signature","scope","\"is\"","test","value","methods","allNames","first"]},{"Key":"signature of","Fragments":["methods","`flatMap`","the"]},{"Key":"of methods","Fragments":["is"]},{"Key":"methods is","Fragments":["fixed"]},{"Key":"is fixed","Fragments":["and"]},{"Key":"fixed and","Fragments":["they","submitted"]},{"Key":"and they","Fragments":["return"]},{"Key":"they return","Fragments":["Unit"]},{"Key":"return Unit","Fragments":["due"]},{"Key":"Unit due","Fragments":["to"]},{"Key":"due to","Fragments":["tests)","different","being","a","spec","spec\"","it","garbage","immediately","its"]},{"Key":"interesting to","Fragments":["use","have","learn","discuss.","use","make","use"]},{"Key":"just two","Fragments":["Lists."]},{"Key":"description requires","Fragments":["you"]},{"Key":"requires you","Fragments":["to"]},{"Key":" ```use","Fragments":["an"]},{"Key":"```use an","Fragments":["Element"]},{"Key":"an Element","Fragments":["class"]},{"Key":"Element class","Fragments":["with"]},{"Key":"class with","Fragments":["two","an"]},{"Key":"with two","Fragments":["fields,","args","alternative"]},{"Key":"two fields,","Fragments":["next"]},{"Key":"fields, next","Fragments":["and"]},{"Key":"next and","Fragments":["prev,","previous"]},{"Key":"and prev,","Fragments":["that"]},{"Key":"prev, that","Fragments":["are"]},{"Key":"that are","Fragments":["both","not","not","really","exactly","available.","available"]},{"Key":"are both","Fragments":["writable","`String.contains(String)`"]},{"Key":"both writable","Fragments":["..."]},{"Key":" maintain","Fragments":["separate"]},{"Key":"maintain separate","Fragments":["references"]},{"Key":"separate references","Fragments":["to"]},{"Key":"references to","Fragments":["the","total"]},{"Key":"first and","Fragments":["last","then","last),","second,"]},{"Key":"and last","Fragments":["Element,"]},{"Key":"last Element,","Fragments":["or"]},{"Key":"Element, or","Fragments":["maintain"]},{"Key":"or maintain","Fragments":["a"]},{"Key":"maintain a","Fragments":["reference"]},{"Key":"a reference","Fragments":["to","to"]},{"Key":"reference to","Fragments":["one","msg","an"]},{"Key":"to one","Fragments":["of"]},{"Key":"one of","Fragments":["them","the","the","those","his","the","the","the","the"]},{"Key":"of them","Fragments":["and","which","mean","recommend","are"]},{"Key":"them and","Fragments":["ensure"]},{"Key":"and ensure","Fragments":["that"]},{"Key":"ensure that","Fragments":["the","the","the"]},{"Key":"I'd prefer","Fragments":["to","something"]},{"Key":"an enum","Fragments":["instead","with"]},{"Key":"enum instead","Fragments":["of"]},{"Key":" How","Fragments":["do","would","weird","about","come","can","does","about","would"]},{"Key":"How do","Fragments":["i"]},{"Key":"do i","Fragments":["use"]},{"Key":"i use","Fragments":["an"]},{"Key":"enum with","Fragments":["properties"]},{"Key":"with properties","Fragments":["in"]},{"Key":"properties in","Fragments":["Scala?"]},{"Key":"the \"filter\"","Fragments":["method"]},{"Key":"\"filter\" method","Fragments":["to"]},{"Key":"to strip","Fragments":["out","the"]},{"Key":"strip out","Fragments":["invalid"]},{"Key":"out invalid","Fragments":["characters"]},{"Key":"invalid characters","Fragments":["from"]},{"Key":"characters from","Fragments":["the"]},{"Key":" Again,","Fragments":["pls","just","you","```require```","I","since"]},{"Key":"Again, pls","Fragments":["try"]},{"Key":"pls try","Fragments":["to","again"]},{"Key":"avoid these","Fragments":["Java-style","for-loops"]},{"Key":"these Java-style","Fragments":["for-loops"]},{"Key":"Java-style for-loops","Fragments":["plus"]},{"Key":"for-loops plus","Fragments":["```var```!","a"]},{"Key":"plus ```var```!","Fragments":["FP-style"]},{"Key":"```var```! FP-style","Fragments":["is"]},{"Key":"FP-style is","Fragments":["shorter,"]},{"Key":"is shorter,","Fragments":["less","meaningful"]},{"Key":"shorter, less","Fragments":["error-prone","error-prone,"]},{"Key":"error-prone and","Fragments":["better","easier"]},{"Key":"and better","Fragments":["readable!"]},{"Key":"little private","Fragments":["helper","helper","helper","helper","helper","helper","function","helper","helper"]},{"Key":"to square","Fragments":["a","a","a","a"]},{"Key":"square a","Fragments":["number.","number","number.","number"]},{"Key":" Unintentional","Fragments":["submission."]},{"Key":"Unintentional submission.","Fragments":["Please"]},{"Key":"submission. Please","Fragments":["ignore."]},{"Key":" @danika","Fragments":["-"]},{"Key":"@danika -","Fragments":["I"]},{"Key":"forgot to","Fragments":["tell","make","mention","declare","check","do","mention:"]},{"Key":"to tell","Fragments":["you,"]},{"Key":"tell you,","Fragments":["you"]},{"Key":"you, you","Fragments":["can"]},{"Key":"can refer","Fragments":["to"]},{"Key":"refer to","Fragments":["a","the","the"]},{"Key":"a user","Fragments":["with"]},{"Key":"user with","Fragments":["an"]},{"Key":"an \"@\"","Fragments":["and"]},{"Key":"\"@\" and","Fragments":["she/he"]},{"Key":"and she/he","Fragments":["will"]},{"Key":"she/he will","Fragments":["get"]},{"Key":"will get","Fragments":["a","OutOfMemoryError","you","you"]},{"Key":"get a","Fragments":["notification","robot","compile-time","bug.","shorter","warning,","Robot","good","feel","array","nit","slice","\"clean\"","count"]},{"Key":"a notification","Fragments":["-"]},{"Key":"notification -","Fragments":["so"]},{"Key":"so we","Fragments":["can","cannot","get","can"]},{"Key":"we can","Fragments":["use","do","guarantee","discuss","remove"]},{"Key":"use this","Fragments":["to","magical","notation","in","more","to","```cal```"]},{"Key":"I changed","Fragments":["the","the","it","nucleotideCounts"]},{"Key":"the equals","Fragments":["and"]},{"Key":"equals and","Fragments":["checking"]},{"Key":"and checking","Fragments":["order"]},{"Key":" Just","Fragments":["curious","one","for","a","saying","moved","keep","for","two","testing"]},{"Key":"Just curious","Fragments":["about"]},{"Key":"curious about","Fragments":["`withDefaultValue`"]},{"Key":"about `withDefaultValue`","Fragments":["on"]},{"Key":"`withDefaultValue` on","Fragments":["line","line"]},{"Key":"on line","Fragments":["2","10.","5.","8?","3","4","7.","5","4.","2","8","5","4","11?"]},{"Key":"line 2","Fragments":["and","would","that"]},{"Key":"2 and","Fragments":["`getOrElse`"]},{"Key":"and `getOrElse`","Fragments":["on","on"]},{"Key":"`getOrElse` on","Fragments":["line","line"]},{"Key":"line 10.","Fragments":["Why"]},{"Key":"10. Why","Fragments":["use"]},{"Key":"Why use","Fragments":["both?","a","a"]},{"Key":"use both?","Fragments":["Isn't"]},{"Key":"both? Isn't","Fragments":["one"]},{"Key":"Isn't one","Fragments":["or","or"]},{"Key":"or the","Fragments":["other","like)","foreach","`Sublist`","other"]},{"Key":"a number","Fragments":["could","could","is","(for","of"]},{"Key":"number could","Fragments":["simplify","add"]},{"Key":"could simplify","Fragments":["even","w/","a","this","using","the","the","w/","the","a","w/"]},{"Key":"simplify even","Fragments":["more.","more:","more:"]},{"Key":"Thanks @maritza,","Fragments":["fixed!"]},{"Key":" Map","Fragments":["has"]},{"Key":"Map has","Fragments":["a"]},{"Key":"a mapValues","Fragments":["which"]},{"Key":"mapValues which","Fragments":["is"]},{"Key":"is slightly","Fragments":["less","more","more"]},{"Key":"slightly less","Fragments":["verbose","verbose","good,"]},{"Key":"less verbose","Fragments":["than","and"]},{"Key":"verbose than","Fragments":["map"]},{"Key":"than map","Fragments":["("]},{"Key":"map (","Fragments":["case"]},{"Key":"( case","Fragments":["(k,v)"]},{"Key":"case (k,v)","Fragments":["=\u003e"]},{"Key":"(k,v) =\u003e","Fragments":["...."]},{"Key":"sure there","Fragments":["is","is","is"]},{"Key":"is any","Fragments":["advantage",":)"]},{"Key":"any advantage","Fragments":["-"]},{"Key":"advantage -","Fragments":["maybe"]},{"Key":"- maybe","Fragments":["it's","an"]},{"Key":"maybe it's","Fragments":["slightly","even"]},{"Key":"it's slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["obvious","readable.","efficient.","readable."]},{"Key":"obvious what","Fragments":["it"]},{"Key":"what it","Fragments":["is","does","does?","is","means.","does?","means","warns","does!","does","*means*)"]},{"Key":"is given","Fragments":["the","a"]},{"Key":"the profusion","Fragments":["of"]},{"Key":"profusion of","Fragments":["brackets"]},{"Key":"of brackets","Fragments":["otherwise?"]},{"Key":"brackets otherwise?","Fragments":["I"]},{"Key":"otherwise? I","Fragments":["think"]},{"Key":"have just","Fragments":["seen","this","listed","one","one","one"]},{"Key":"just seen","Fragments":["it"]},{"Key":"seen it","Fragments":["used"]},{"Key":"it used","Fragments":["in"]},{"Key":"used in","Fragments":["a","the","the","many","the","the","a","the","the"]},{"Key":"a codebase","Fragments":["or"]},{"Key":"codebase or","Fragments":["example"]},{"Key":"or example","Fragments":["somewhere"]},{"Key":"example somewhere","Fragments":["and"]},{"Key":"somewhere and","Fragments":["picked"]},{"Key":"and picked","Fragments":["it"]},{"Key":"picked it","Fragments":["up"]},{"Key":"it up","Fragments":["from","into","into","even","into","to","a"]},{"Key":"up from","Fragments":["there.","another"]},{"Key":"from there.","Fragments":["Not"]},{"Key":"there. Not","Fragments":["sure"]},{"Key":"if either","Fragments":["way"]},{"Key":"either way","Fragments":["is","depending"]},{"Key":"way is","Fragments":["better","this","to","much","to","cleaner","more"]},{"Key":"would like","Fragments":["to","to"]},{"Key":"know why","Fragments":["you","but"]},{"Key":"you initialize","Fragments":["like"]},{"Key":"initialize like","Fragments":["this:"]},{"Key":"like this:","Fragments":["`Map.empty[Int,","`strand_1","val"]},{"Key":"this: `Map.empty[Int,","Fragments":["Seq[String]]`"]},{"Key":"`Map.empty[Int, Seq[String]]`","Fragments":["and"]},{"Key":"Seq[String]]` and","Fragments":["`Seq.empty["]},{"Key":"and `Seq.empty[","Fragments":["..."]},{"Key":"`Seq.empty[ ...","Fragments":["]`"]},{"Key":"... ]`","Fragments":["instead"]},{"Key":"]` instead","Fragments":["of"]},{"Key":"of `Map[Int,","Fragments":["Seq[String]]()`."]},{"Key":"`Map[Int, Seq[String]]()`.","Fragments":["Didn't"]},{"Key":"Seq[String]]()`. Didn't","Fragments":["know"]},{"Key":"know you","Fragments":["could"]},{"Key":"do that,","Fragments":["what's","you'd"]},{"Key":"that, what's","Fragments":["the"]},{"Key":"what's the","Fragments":["advantage?"]},{"Key":"It may","Fragments":["have","not","or"]},{"Key":"have been","Fragments":["overkill","found","almost","able","more","able","a","sufficient","very","to","a","referring"]},{"Key":"been overkill","Fragments":["using"]},{"Key":"overkill using","Fragments":["a"]},{"Key":"a trait","Fragments":["and"]},{"Key":"and tuple,","Fragments":["but"]},{"Key":"tuple, but","Fragments":["I"]},{"Key":"just wanted","Fragments":["to","to","to","to","to"]},{"Key":"to try","Fragments":["it","to","my","another","an","another","to","it.","it","and","again?","anymore","something","make"]},{"Key":"try it","Fragments":["out.","on"]},{"Key":"it out.","Fragments":["I"]},{"Key":"out. I","Fragments":["believe","also"]},{"Key":"believe I","Fragments":["could"]},{"Key":"used `match`","Fragments":["instead","instead"]},{"Key":"`match` instead","Fragments":["of","of"]},{"Key":"of an","Fragments":["`if","extra","anonymous","`implicit","overkill","abuse","additional","over-complication.","easy","overkill"]},{"Key":"an `if","Fragments":["else","else`"]},{"Key":"`if else","Fragments":["if`."]},{"Key":"else if`.","Fragments":["I"]},{"Key":"if`. I","Fragments":["use"]},{"Key":"I use","Fragments":["triple","them","it","this","-","a","it"]},{"Key":"use triple","Fragments":["quotes"]},{"Key":"triple quotes","Fragments":["to"]},{"Key":"quotes to","Fragments":["solve"]},{"Key":"double escaping","Fragments":["issue"]},{"Key":"escaping issue","Fragments":["line"]},{"Key":"issue line","Fragments":["7"]},{"Key":"line 7","Fragments":["encountered."]},{"Key":"7 encountered.","Fragments":["Update:"]},{"Key":"encountered. Update:","Fragments":["looking"]},{"Key":"Update: looking","Fragments":["at"]},{"Key":"other implementations,","Fragments":["mine","a"]},{"Key":"implementations, mine","Fragments":["looks"]},{"Key":"mine looks","Fragments":["like"]},{"Key":"like dog","Fragments":["s***."]},{"Key":"In Scala,","Fragments":["`if`"]},{"Key":"Scala, `if`","Fragments":["statements"]},{"Key":"`if` statements","Fragments":["are"]},{"Key":"statements are","Fragments":["expressions","just"]},{"Key":"are expressions","Fragments":["-"]},{"Key":"expressions -","Fragments":["so"]},{"Key":"can turn","Fragments":["the","the","the","your"]},{"Key":"turn the","Fragments":["whole","anonymous","String","case-block"]},{"Key":"whole function","Fragments":["into","body"]},{"Key":"function into","Fragments":["one","the","the","a","tail"]},{"Key":"into one","Fragments":["if/then/else","using","of","method"]},{"Key":"one if/then/else","Fragments":["expression"]},{"Key":"if/then/else expression","Fragments":["and"]},{"Key":"expression and","Fragments":["skip"]},{"Key":"and skip","Fragments":["the"]},{"Key":"skip the","Fragments":["return","`match`","return","parentheses"]},{"Key":"return statement","Fragments":["entirely."]},{"Key":"def hey(prompt:String):String","Fragments":["="]},{"Key":"hey(prompt:String):String =","Fragments":["if("]},{"Key":"= if(","Fragments":["cond"]},{"Key":"if( cond","Fragments":[")",")"]},{"Key":"cond )","Fragments":["value1","value2"]},{"Key":") value1","Fragments":["else"]},{"Key":"value1 else","Fragments":["if("]},{"Key":"else if(","Fragments":["cond"]},{"Key":") value2","Fragments":["else"]},{"Key":"value2 else","Fragments":["value3"]},{"Key":"use pattern","Fragments":["matching","matching","matching.","matching)","matching","matching","matching","matching","matching","matching.","matching","matching","matching","matching","matching!","matching!"]},{"Key":"matching with","Fragments":["`match`,","simple","::","regex","functions,"]},{"Key":"with `match`,","Fragments":["which"]},{"Key":"`match`, which","Fragments":["potentially"]},{"Key":"which potentially","Fragments":["works"]},{"Key":"potentially works","Fragments":["out"]},{"Key":"works out","Fragments":["a"]},{"Key":"out a","Fragments":["little","couple"]},{"Key":" Nothing","Fragments":["wrong"]},{"Key":"Nothing wrong","Fragments":["with"]},{"Key":"an early","Fragments":["return,"]},{"Key":"early return,","Fragments":["but"]},{"Key":"return, but","Fragments":["a"]},{"Key":"a functional","Fragments":["style","styele"]},{"Key":"functional style","Fragments":["using","avoid"]},{"Key":"style using","Fragments":["a"]},{"Key":"single implicit","Fragments":["return"]},{"Key":"implicit return","Fragments":["is","to"]},{"Key":"is encouraged","Fragments":["in"]},{"Key":"encouraged in","Fragments":["Scala.","Scala."]},{"Key":"the normal","Fragments":["infix"]},{"Key":"normal infix","Fragments":["`==`"]},{"Key":"infix `==`","Fragments":["operator"]},{"Key":"`==` operator","Fragments":["for"]},{"Key":"operator for","Fragments":["value","foldLeft"]},{"Key":"for value","Fragments":["equality"]},{"Key":"value equality","Fragments":["in"]},{"Key":"equality in","Fragments":["Scala"]},{"Key":"Scala (Unlike","Fragments":["Java,"]},{"Key":"(Unlike Java,","Fragments":["which"]},{"Key":"Java, which","Fragments":["requires"]},{"Key":"which requires","Fragments":["the","to"]},{"Key":"requires the","Fragments":["use","use","user"]},{"Key":"the `equals`","Fragments":["method)"]},{"Key":"First scala","Fragments":["program"]},{"Key":"scala program","Fragments":["that"]},{"Key":"program that","Fragments":["is"]},{"Key":"is more","Fragments":["than","concise","efficient","efficient","readable","readable","declarative","readable?!","readable","a","expressive.","efficient","common","for","about","readable","suitable","compelling","idiomatic.","readable.","complex.","readable","efficient","simple","readable","readable","than","common","readable.","convenient","obvious/intuitive","functional,","than","than","than","concise"]},{"Key":"than hello","Fragments":["world"]},{"Key":"hello world","Fragments":["or"]},{"Key":"world or","Fragments":["a"]},{"Key":"or a","Fragments":["Play","field","comma","for-comprehension","combination","'.","for-comprehension","mutable","```sealed","```sealed"]},{"Key":"a Play","Fragments":["framework"]},{"Key":"Play framework","Fragments":["template"]},{"Key":"framework template","Fragments":["app."]},{"Key":" `dnaString`","Fragments":["could"]},{"Key":"`dnaString` could","Fragments":["(should?)"]},{"Key":"could (should?)","Fragments":["be"]},{"Key":"(should?) be","Fragments":["a"]},{"Key":"a `val`.","Fragments":["yay"]},{"Key":"`val`. yay","Fragments":["for"]},{"Key":"yay for","Fragments":["immutability."]},{"Key":" Loved","Fragments":["your"]},{"Key":"Loved your","Fragments":["`toMap`"]},{"Key":"your `toMap`","Fragments":["implementation,"]},{"Key":"`toMap` implementation,","Fragments":["used"]},{"Key":"implementation, used","Fragments":["it"]},{"Key":"used it","Fragments":["myself","without","to","in"]},{"Key":"it myself","Fragments":["after"]},{"Key":"myself after","Fragments":["reading"]},{"Key":" Might","Fragments":["want","be"]},{"Key":"Might want","Fragments":["to"]},{"Key":"extract A,","Fragments":["T,"]},{"Key":"A, T,","Fragments":["C,"]},{"Key":"T, C,","Fragments":["G"]},{"Key":"C, G","Fragments":["into"]},{"Key":"G into","Fragments":["constants,"]},{"Key":"into constants,","Fragments":["but"]},{"Key":"constants, but","Fragments":["thats"]},{"Key":"but thats","Fragments":["a"]},{"Key":"thats a","Fragments":["real"]},{"Key":"a real","Fragments":["nitpick","code"]},{"Key":" @aaliyah","Fragments":["Ah,"]},{"Key":"@aaliyah Ah,","Fragments":["you're"]},{"Key":"Ah, you're","Fragments":["right."]},{"Key":"What if","Fragments":["you","the","you","another"]},{"Key":"you `yield","Fragments":["(vc"]},{"Key":"`yield (vc","Fragments":["-\u003e"]},{"Key":"(vc -\u003e","Fragments":["k)`"]},{"Key":"-\u003e k)`","Fragments":["?"]},{"Key":" @orville","Fragments":["I"]},{"Key":"@orville I","Fragments":["removed"]},{"Key":"I removed","Fragments":["the","the","the","the"]},{"Key":"the `toMap`","Fragments":["and"]},{"Key":"`toMap` and","Fragments":["ran"]},{"Key":"and ran","Fragments":["the"]},{"Key":"tests. They","Fragments":["failed."]},{"Key":"They failed.","Fragments":["It"]},{"Key":"failed. It","Fragments":["turns"]},{"Key":"It turns","Fragments":["out"]},{"Key":"turns out","Fragments":["that"]},{"Key":"result is","Fragments":["a"]},{"Key":"a Set","Fragments":["of","for"]},{"Key":"Set of","Fragments":["tuples."]},{"Key":"of tuples.","Fragments":["So...","Perhaps"]},{"Key":"tuples. So...","Fragments":["it"]},{"Key":"So... it","Fragments":["looks"]},{"Key":"a Map,","Fragments":["but"]},{"Key":"Map, but","Fragments":["isn't","you"]},{"Key":"but isn't","Fragments":["a","the","there"]},{"Key":"isn't a","Fragments":["Map.","hard","great","very","problem,"]},{"Key":"a Map.","Fragments":[":D"]},{"Key":" afaik","Fragments":["the"]},{"Key":"afaik the","Fragments":["result"]},{"Key":"your for","Fragments":["comprehension","loop"]},{"Key":"for comprehension","Fragments":["is","is","-","solution","is","because","here,"]},{"Key":"comprehension is","Fragments":["already","more","very"]},{"Key":"a very","Fragments":["Java","different","strict","functional","similar","concise","nice","smal","interesting","fuctional","ugly,","convincing","neat"]},{"Key":"very Java","Fragments":["way"]},{"Key":"Java way","Fragments":["of"]},{"Key":"doing things.","Fragments":["Must"]},{"Key":"things. Must","Fragments":["find"]},{"Key":"Must find","Fragments":["a"]},{"Key":"find a","Fragments":["better","new","matching","solution","better","built-in","built-in","way","lazy","nicer","good","def","way"]},{"Key":"better Scala","Fragments":["way"]},{"Key":"Scala way","Fragments":["to","to"]},{"Key":" filter(_.toLowerCase.sorted","Fragments":["=="]},{"Key":"filter(_.toLowerCase.sorted ==","Fragments":["sorted)."]},{"Key":" filter(_.toLowerCase","Fragments":["!="]},{"Key":"filter(_.toLowerCase !=","Fragments":["word.toLowerCase)"]},{"Key":" filter(x","Fragments":["=\u003e"]},{"Key":"filter(x =\u003e","Fragments":["x.toLowerCase.sorted"]},{"Key":"=\u003e x.toLowerCase.sorted","Fragments":["=="]},{"Key":"x.toLowerCase.sorted ==","Fragments":["sorted"]},{"Key":" \u0026\u0026","Fragments":["x.toLowerCase","w"]},{"Key":"\u0026\u0026 x.toLowerCase","Fragments":["!=","!="]},{"Key":"x.toLowerCase !=","Fragments":["word.toLowerCase)","x"]},{"Key":"and not","Fragments":["have","Buffer?","using","s1","just","a","the","all","Seqs?","foldLeft?","a","a","use","very","just","significantly","directly"]},{"Key":"to loop","Fragments":["through","over"]},{"Key":"loop through","Fragments":["2","for"]},{"Key":"through 2","Fragments":["lists."]},{"Key":"2 lists.","Fragments":["Of"]},{"Key":"lists. Of","Fragments":["course,"]},{"Key":"Of course,","Fragments":["then","one","you","then","you"]},{"Key":"course, then","Fragments":["I'd","I'd"]},{"Key":"then I'd","Fragments":["recommend","ask"]},{"Key":"recommend breaking","Fragments":["the"]},{"Key":"breaking the","Fragments":["filter"]},{"Key":"the filter","Fragments":["test","statement","block","predicate.","and","check","-","test","test","and"]},{"Key":"filter test","Fragments":["out","to","into","into","block"]},{"Key":"test out","Fragments":["as"]},{"Key":"out as","Fragments":["a"]},{"Key":"function with","Fragments":["a","`@jude`.","a","a","the"]},{"Key":"a nice","Fragments":["name","little","name.","feature","refresher","alternative","trick"]},{"Key":"nice name","Fragments":["for"]},{"Key":"for clarity","Fragments":["and","and"]},{"Key":"clarity and","Fragments":["readabililty.","readability."]},{"Key":"and readabililty.","Fragments":["If"]},{"Key":"readabililty. If","Fragments":["you"]},{"Key":"that, you'd","Fragments":["want"]},{"Key":"you'd want","Fragments":["to"]},{"Key":"to break","Fragments":["`val","out","up","out","out"]},{"Key":"break `val","Fragments":["sorted`"]},{"Key":"`val sorted`","Fragments":["into"]},{"Key":"sorted` into","Fragments":["a"]},{"Key":"private class","Fragments":["member,"]},{"Key":"class member,","Fragments":["though."]},{"Key":"Nice solution,","Fragments":["though.","one"]},{"Key":"are mutating","Fragments":["the","the"]},{"Key":"in GregorianCalendar","Fragments":["instance."]},{"Key":"GregorianCalendar instance.","Fragments":["Instead"]},{"Key":"instance. Instead","Fragments":["you"]},{"Key":"Instead you","Fragments":["should","can","should"]},{"Key":"should make","Fragments":["a","it"]},{"Key":"make a","Fragments":["clone","better","small","reader's","method","distinction","copy","bit","copy"]},{"Key":"a clone","Fragments":["and"]},{"Key":"clone and","Fragments":["mutate/return"]},{"Key":"and mutate/return","Fragments":["the"]},{"Key":"mutate/return the","Fragments":["cloned"]},{"Key":"the cloned","Fragments":["object."]},{"Key":"Nice that","Fragments":["you","you"]},{"Key":"you implemented","Fragments":["it"]},{"Key":"implemented it","Fragments":["tail"]},{"Key":"it tail","Fragments":["recursively.","recursive","recursive"]},{"Key":" To","Fragments":["enforce","make","use","simplify","implement","feel","ignore","replace","be","simplify","extract"]},{"Key":"To enforce","Fragments":["the"]},{"Key":"enforce the","Fragments":["tail-recursiveness"]},{"Key":"the tail-recursiveness","Fragments":["you"]},{"Key":"tail-recursiveness you","Fragments":["can"]},{"Key":"can annotate","Fragments":["the"]},{"Key":"annotate the","Fragments":["`loop`","hey"]},{"Key":"the `loop`","Fragments":["function"]},{"Key":"`loop` function","Fragments":["with"]},{"Key":"The `reverse`","Fragments":["can"]},{"Key":"`reverse` can","Fragments":["be"]},{"Key":"avoided if","Fragments":["you"]},{"Key":"you change","Fragments":["`loop(xs,","it","```private","the","the","`prime"]},{"Key":"change `loop(xs,","Fragments":["f(x)"]},{"Key":"`loop(xs, f(x)","Fragments":["::"]},{"Key":"f(x) ::","Fragments":["acc)`"]},{"Key":":: acc)`","Fragments":["into"]},{"Key":"acc)` into","Fragments":["`loop(xs,"]},{"Key":"into `loop(xs,","Fragments":["acc"]},{"Key":"`loop(xs, acc","Fragments":[":+"]},{"Key":"acc :+","Fragments":["f(x))`","f(head))"]},{"Key":"at my","Fragments":["solution,","solution","\"elegant\"","second","2nd"]},{"Key":"my solution,","Fragments":["I","if","too.","thanks!"]},{"Key":"solution, I","Fragments":["went","found","just"]},{"Key":"I went","Fragments":["with","ahead","down","with","with","ahead","with","through"]},{"Key":"went with","Fragments":["a","the","a","a","something"]},{"Key":"very different","Fragments":["implementation."]},{"Key":"I often","Fragments":["check"]},{"Key":"often check","Fragments":["what"]},{"Key":"check what","Fragments":["other"]},{"Key":"what other","Fragments":["Mendeley"]},{"Key":"other Mendeley","Fragments":["people"]},{"Key":"Mendeley people","Fragments":["have"]},{"Key":"people have","Fragments":["done","different"]},{"Key":"have done","Fragments":["when","it","some"]},{"Key":"done when","Fragments":["I"]},{"Key":"I submit","Fragments":["an","this","this","this"]},{"Key":"submit an","Fragments":["exercise,"]},{"Key":"an exercise,","Fragments":["to"]},{"Key":"exercise, to","Fragments":["get"]},{"Key":"get an","Fragments":["idea","NPE"]},{"Key":"an idea","Fragments":["of","why","could","on"]},{"Key":"of alternative","Fragments":["approaches."]},{"Key":"know how","Fragments":["to","to","to","they","to","to","to","to"]},{"Key":"in order","Fragments":["to","to","to","for","to","to","to","to","to","to","to"]},{"Key":"order to","Fragments":["avoid","don't","pass","verify","use","do","not","pass","compute","remove","not"]},{"Key":"avoid this","Fragments":["duplication"]},{"Key":"this duplication","Fragments":["\"bearing"]},{"Key":"duplication \"bearing","Fragments":["match"]},{"Key":"\"bearing match","Fragments":["{}\""]},{"Key":" yeah","Fragments":["right.","well,"]},{"Key":"yeah right.","Fragments":["to"]},{"Key":"right. to","Fragments":["quote"]},{"Key":"to quote","Fragments":["the","the","from","from"]},{"Key":"quote the","Fragments":["problem","problem","exercise"]},{"Key":" `Keep","Fragments":["your"]},{"Key":"`Keep your","Fragments":["hands"]},{"Key":"your hands","Fragments":["off","off","off","off","off","off","off","off","off"]},{"Key":"hands off","Fragments":["that","that","that","that","that","that","that","that","that"]},{"Key":"off that","Fragments":["collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit","collect/map/fmap/whatchamacallit"]},{"Key":"that collect/map/fmap/whatchamacallit","Fragments":["functionality","functionality","functionality","functionality","functionality","functionality","functionality","functionality","functionality"]},{"Key":" provided","Fragments":["by","by","by","by","by","by","by","by","by"]},{"Key":"provided by","Fragments":["your","your","your","your","your","your","your","your","your","your","StringOps.","your","\"zip\""]},{"Key":"by your","Fragments":["standard","standard","standard","standard","standard","standard","standard","standard","standard","standard","standard"]},{"Key":"your standard","Fragments":["library!","library!","library!","library!```","library!","library!\"","library\"?!","library!","library!","library!","library!"]},{"Key":" Solve","Fragments":["this","this","this","this","this","this","this","this"]},{"Key":"Solve this","Fragments":["one","one","one","one","one","one","one","one"]},{"Key":"one yourself","Fragments":["using","using","using","using","using","using","using","using"]},{"Key":"yourself using","Fragments":["other","other","other","other","other","other","other","other"]},{"Key":"using other","Fragments":["basic","basic","basic","basic","basic","basic","basic","basic"]},{"Key":"other basic","Fragments":["tools","tools","tools","tools","tools","tools","tools","tools"]},{"Key":"basic tools","Fragments":["instead.`","instead.```","instead.```","instead.```","instead.```","instead.```","instead.","instead.\""]},{"Key":" Sorry,","Fragments":["no","but"]},{"Key":"Sorry, no","Fragments":["`map`"]},{"Key":"no `map`","Fragments":["allowed"]},{"Key":"`map` allowed","Fragments":["here!"]},{"Key":"allowed here!","Fragments":[";-)",";-)"]},{"Key":"btw, you","Fragments":["can","can","can"]},{"Key":"can declare","Fragments":["`f`"]},{"Key":"declare `f`","Fragments":["w/o"]},{"Key":"`f` w/o","Fragments":["the"]},{"Key":"w/o the","Fragments":["parens:","space"]},{"Key":"the parens:","Fragments":["`f:"]},{"Key":"parens: `f:","Fragments":["A"]},{"Key":"`f: A","Fragments":["=\u003e"]},{"Key":"A =\u003e","Fragments":["B`)."]},{"Key":"The third","Fragments":["approach"]},{"Key":"third approach","Fragments":["just"]},{"Key":"approach just","Fragments":["uses"]},{"Key":"just uses","Fragments":["scala"]},{"Key":"uses scala","Fragments":["collections"]},{"Key":"scala collections","Fragments":["API"]},{"Key":"could move","Fragments":["the","them","your","SeparatorPattern","```getRandomElement```","`calendar`","\"empty\""]},{"Key":"move the","Fragments":["`toLowercase`","regexes","function","matching","`s.trim","```isAnagram```","collision","type","second","```!```","count"]},{"Key":"the `toLowercase`","Fragments":["checks"]},{"Key":"`toLowercase` checks","Fragments":["to"]},{"Key":"the `isAnagram`","Fragments":["method."]},{"Key":"`isAnagram` method.","Fragments":["This"]},{"Key":"method. This","Fragments":["would"]},{"Key":"write `seq.filter(isAnagram)`","Fragments":["which"]},{"Key":"`seq.filter(isAnagram)` which","Fragments":["reads"]},{"Key":"which reads","Fragments":["better"]},{"Key":"reads better","Fragments":["IMHO.","than","than"]},{"Key":"really nice!","Fragments":["A"]},{"Key":"nice! A","Fragments":["few"]},{"Key":"* `isQuestion`","Fragments":["will","will"]},{"Key":"`isQuestion` will","Fragments":["raise","raise"]},{"Key":"will raise","Fragments":["an","an"]},{"Key":"raise an","Fragments":["error","error"]},{"Key":"an error","Fragments":["if","on","message","if"]},{"Key":"error if","Fragments":["`input","`s"]},{"Key":"if `input","Fragments":["="]},{"Key":"`input =","Fragments":["\"\"`."]},{"Key":"= \"\"`.","Fragments":["Given"]},{"Key":"\"\"`. Given","Fragments":["the"]},{"Key":"Given the","Fragments":["ordering","multiline"]},{"Key":"the ordering","Fragments":["of","of","stuff..."]},{"Key":"ordering of","Fragments":["the","the"]},{"Key":"the `if/else`","Fragments":["block"]},{"Key":"`if/else` block","Fragments":["this"]},{"Key":"block this","Fragments":["won't"]},{"Key":"this won't","Fragments":["be"]},{"Key":"a problem","Fragments":["in","regardless"]},{"Key":"problem in","Fragments":["practice,","Java"]},{"Key":"in practice,","Fragments":["but"]},{"Key":"practice, but","Fragments":["a"]},{"Key":"a safer","Fragments":["approach"]},{"Key":"safer approach","Fragments":["would"]},{"Key":"approach would","Fragments":["be","be"]},{"Key":"* `hasLetters`","Fragments":["is"]},{"Key":"`hasLetters` is","Fragments":["only"]},{"Key":"the context","Fragments":["of","of","of","of"]},{"Key":"context of","Fragments":["`isAllCaps`","Bob.","a","one"]},{"Key":"of `isAllCaps`","Fragments":["so"]},{"Key":"`isAllCaps` so","Fragments":["not"]},{"Key":"so not","Fragments":["sure","much"]},{"Key":"sure it","Fragments":["needs","makes","is"]},{"Key":"it needs","Fragments":["to","to"]},{"Key":"needs to","Fragments":["be","be","be","be","be","be.","be","be","be"]},{"Key":"a separate","Fragments":["method","`val`","object.","check.","named","method","line.","Terminal","iteration"]},{"Key":"* Perhaps","Fragments":["call"]},{"Key":"Perhaps call","Fragments":["the"]},{"Key":"call the","Fragments":["`isAllCaps`","method","function","predicate"]},{"Key":"the `isAllCaps`","Fragments":["method"]},{"Key":"`isAllCaps` method","Fragments":["`isShouting`"]},{"Key":"method `isShouting`","Fragments":["since"]},{"Key":"`isShouting` since","Fragments":["that's"]},{"Key":"since that's","Fragments":["really"]},{"Key":"that's really","Fragments":["the"]},{"Key":"really the","Fragments":["semantic"]},{"Key":"the semantic","Fragments":["meaning"]},{"Key":"semantic meaning","Fragments":["of"]},{"Key":"think trailing","Fragments":["white","white"]},{"Key":"trailing white","Fragments":["space","space"]},{"Key":"white space","Fragments":["should","after"]},{"Key":"space should","Fragments":["be"]},{"Key":"be ignored","Fragments":["so"]},{"Key":"ignored so","Fragments":["a"]},{"Key":"so a","Fragments":["string","\"return\"","```case"]},{"Key":"a string","Fragments":["like","has","contains","is","to","contains","is","comparison","comparison","like","with"]},{"Key":"string like","Fragments":["\"What","a"]},{"Key":"like \"What","Fragments":["do"]},{"Key":"\"What do","Fragments":["you"]},{"Key":"you mean?","Fragments":["\"","I"]},{"Key":"mean? \"","Fragments":["should"]},{"Key":"\" should","Fragments":["be"]},{"Key":"be classified","Fragments":["as","as","as"]},{"Key":"classified as","Fragments":["a","yelling,","a"]},{"Key":" Compiling","Fragments":["regexes"]},{"Key":"Compiling regexes","Fragments":["is"]},{"Key":"regexes is","Fragments":["expensive"]},{"Key":"is expensive","Fragments":["so"]},{"Key":"expensive so","Fragments":["I'd"]},{"Key":"so I'd","Fragments":["move","rather"]},{"Key":"I'd move","Fragments":["all","precondition"]},{"Key":"move all","Fragments":["the"]},{"Key":"the `\"\"\"...\"\"\".r`","Fragments":["outside"]},{"Key":"`\"\"\"...\"\"\".r` outside","Fragments":["of"]},{"Key":"of `hey`","Fragments":["so","are","are"]},{"Key":"`hey` so","Fragments":["they"]},{"Key":"so they","Fragments":["only","didn't","won't","should","are","are"]},{"Key":"they only","Fragments":["get","need","mention"]},{"Key":"only get","Fragments":["compiled"]},{"Key":"get compiled","Fragments":["once"]},{"Key":"compiled once","Fragments":["rather"]},{"Key":"once rather","Fragments":["then"]},{"Key":"rather then","Fragments":["every","explicitly"]},{"Key":"then every","Fragments":["time"]},{"Key":"every time","Fragments":["`hey`","in","they","you"]},{"Key":"time `hey`","Fragments":["is"]},{"Key":"`hey` is","Fragments":["called.","now"]},{"Key":" Removed","Fragments":["the","`var`s","inferable","semicolon","not"]},{"Key":"Removed the","Fragments":["unnecessary"]},{"Key":"the unnecessary","Fragments":["indirection","tuple)"]},{"Key":"unnecessary indirection","Fragments":["of"]},{"Key":"indirection of","Fragments":["```handlerForAddr("]},{"Key":"of ```handlerForAddr(","Fragments":[")```."]},{"Key":"```handlerForAddr( )```.","Fragments":["Still"]},{"Key":")```. Still","Fragments":["think"]},{"Key":"Still think","Fragments":["pattern"]},{"Key":"think pattern","Fragments":["matching"]},{"Key":"matching the","Fragments":["regex","specs.","tuple"]},{"Key":"regex is","Fragments":["the","considered","going","a","sheer","quite"]},{"Key":"best way","Fragments":["to","to"]},{"Key":"go because","Fragments":["StringOps"]},{"Key":"because StringOps","Fragments":["methods"]},{"Key":"StringOps methods","Fragments":["didn't"]},{"Key":"methods didn't","Fragments":["go"]},{"Key":"didn't go","Fragments":["far"]},{"Key":"go far","Fragments":["enough"]},{"Key":"only want","Fragments":["to","to"]},{"Key":"filter out","Fragments":["all","all"]},{"Key":"out all","Fragments":["non-digits","non-digits,"]},{"Key":"all non-digits","Fragments":["then"]},{"Key":"non-digits then","Fragments":["why"]},{"Key":"then why","Fragments":["not","not","not","not"]},{"Key":" ```num","Fragments":["filter"]},{"Key":"```num filter","Fragments":["(_.isDigit)```"]},{"Key":" instead?","Fragments":[":-)"]},{"Key":" another","Fragments":["matter","idea","exercise","idea","idea","version","good"]},{"Key":"matter would","Fragments":["be"]},{"Key":"use then","Fragments":["a"]},{"Key":"then a","Fragments":["regex","mapValues?"]},{"Key":"a regex","Fragments":["to","to","of","might","when","to","here,","myself,","with","as","instead","actually","must","for","fan","to","could"]},{"Key":"regex to","Fragments":["actually","split","its","find","detect","figure","find"]},{"Key":"to actually","Fragments":["parse","modify","create","implement","benchmark"]},{"Key":"actually parse","Fragments":["the"]},{"Key":"parse the","Fragments":["resulting"]},{"Key":"resulting String","Fragments":["of"]},{"Key":"String of","Fragments":["digits.","length"]},{"Key":" in","Fragments":["Scala","your","FP","your","this","logic","count","addition","this","line"]},{"Key":"Scala ```==```","Fragments":["works"]},{"Key":"```==``` works","Fragments":["also"]},{"Key":"works also","Fragments":["for"]},{"Key":"also for","Fragments":["Strings,","the","List[StudentName]","the","private","better"]},{"Key":"for Strings,","Fragments":["so"]},{"Key":"Strings, so","Fragments":["no","why"]},{"Key":"so no","Fragments":["need","need","need","```map```"]},{"Key":"use ```endsWith```","Fragments":["for"]},{"Key":"```endsWith``` for","Fragments":["simplification"]},{"Key":"for simplification","Fragments":["of"]},{"Key":"simplification of","Fragments":["the"]},{"Key":"the second","Fragments":["if-clause.","case","iteration.","case-clause.","iteration,","iteration.","half","case-clause!","parameter","case"]},{"Key":"check in","Fragments":["the","the","reset()"]},{"Key":"the fourth","Fragments":["if-clause"]},{"Key":"fourth if-clause","Fragments":["is"]},{"Key":"if-clause is","Fragments":["easier"]},{"Key":"easier done","Fragments":["w/"]},{"Key":"done w/","Fragments":["```ìsEmpty```."]},{"Key":"very important:","Fragments":["try"]},{"Key":"important: try","Fragments":["to"]},{"Key":"avoid ```var```","Fragments":["if","and"]},{"Key":"```var``` if","Fragments":["you"]},{"Key":"of ```response```","Fragments":["altogether!"]},{"Key":"```response``` altogether!","Fragments":["Scala"]},{"Key":"altogether! Scala","Fragments":["is"]},{"Key":"return value","Fragments":["of","of","of","types","type","as","wasn't","of","of","for"]},{"Key":"of ```hey```","Fragments":["will"]},{"Key":"```hey``` will","Fragments":["then"]},{"Key":"will then","Fragments":["just"]},{"Key":"then just","Fragments":["be","have","NucleotideMap?!","the","having","simple"]},{"Key":"whole if-else","Fragments":["code"]},{"Key":"if-else code","Fragments":["block."]},{"Key":" as","Fragments":["another","another","for","with","an","for","another","two","additional","for","an","another","your","an"]},{"Key":"as another","Fragments":["exercise","solution","version","solution","idea","exercise"]},{"Key":"another exercise","Fragments":["you","you","could","you"]},{"Key":"exercise you","Fragments":["could","could","could","could","may","might","also","don't","may","might","could"]},{"Key":"matching instead","Fragments":["of","of","of","of","of","of"]},{"Key":"like ```forall,","Fragments":["exists,"]},{"Key":"```forall, exists,","Fragments":["filter,","isDigit,"]},{"Key":"exists, filter,","Fragments":["...```"]},{"Key":"filter, ...```","Fragments":["if"]},{"Key":"...``` if","Fragments":["you"]},{"Key":"treat msg","Fragments":["as"]},{"Key":"msg as","Fragments":["a"]},{"Key":"a ```Seq[Char]```","Fragments":["(Strings","I","so","w/","(as"]},{"Key":"```Seq[Char]``` (Strings","Fragments":["can"]},{"Key":"(Strings can","Fragments":["be"]},{"Key":"be implicitly","Fragments":["converted"]},{"Key":"implicitly converted","Fragments":["to"]},{"Key":"converted to","Fragments":["such","a"]},{"Key":"to such","Fragments":["a","a"]},{"Key":"a Seq","Fragments":["by","and","of","of"]},{"Key":"Seq by","Fragments":["Scala)."]},{"Key":"One thing","Fragments":["need","I'd","to","-"]},{"Key":"thing need","Fragments":["to"]},{"Key":"be fixed","Fragments":["to","by"]},{"Key":"fixed to","Fragments":["ensure"]},{"Key":"to ensure","Fragments":["uniqueness","uniqueness","that","that","they"]},{"Key":"ensure uniqueness","Fragments":["-","in"]},{"Key":"uniqueness -","Fragments":["checking"]},{"Key":"- checking","Fragments":["if"]},{"Key":"if name","Fragments":["is"]},{"Key":"name is","Fragments":["unique","wasteful.","generally","you","a","never","never","found","a","an"]},{"Key":"is unique","Fragments":["should"]},{"Key":"unique should","Fragments":["be"]},{"Key":"be within","Fragments":["generateName"]},{"Key":"within generateName","Fragments":["method,"]},{"Key":"generateName method,","Fragments":["b/c"]},{"Key":"method, b/c","Fragments":["now"]},{"Key":"b/c now","Fragments":["getOrEsleUpdate","you"]},{"Key":"now getOrEsleUpdate","Fragments":["does"]},{"Key":"getOrEsleUpdate does","Fragments":["not"]},{"Key":"not ensure","Fragments":["it."]},{"Key":"Interesting technique","Fragments":["to"]},{"Key":"technique to","Fragments":["zip"]},{"Key":"to zip","Fragments":["nucleotides","the","them,"]},{"Key":"zip nucleotides","Fragments":["with"]},{"Key":"nucleotides with","Fragments":["itself"]},{"Key":"with itself","Fragments":["to"]},{"Key":"itself to","Fragments":["create"]},{"Key":"could replace","Fragments":["line","`x"]},{"Key":"replace line","Fragments":["7,8"]},{"Key":"line 7,8","Fragments":["with"]},{"Key":"7,8 with","Fragments":["a"]},{"Key":"a require-","Fragments":["works"]},{"Key":"require- works","Fragments":["on"]},{"Key":"works on","Fragments":["methods","`Option`","any"]},{"Key":"on methods","Fragments":["just"]},{"Key":"methods just","Fragments":["like"]},{"Key":"just like","Fragments":["classes.","to"]},{"Key":"was working","Fragments":["on","with"]},{"Key":"working on","Fragments":["a","every","a","this"]},{"Key":"solution like","Fragments":["this"]},{"Key":"one (where","Fragments":["I"]},{"Key":"(where I","Fragments":["would"]},{"Key":"would compare","Fragments":["the"]},{"Key":"compare the","Fragments":["sorted","two","sorted,","sorted","elements","sublists."]},{"Key":"the sorted","Fragments":["strings),","data.","lowercased","versions","strings.","map","function"]},{"Key":"sorted strings),","Fragments":["but"]},{"Key":"strings), but","Fragments":["couldn't"]},{"Key":"but couldn't","Fragments":["quite","\"\"\"val","get","find"]},{"Key":"couldn't quite","Fragments":["fit"]},{"Key":"quite fit","Fragments":["all","that"]},{"Key":"fit all","Fragments":["the"]},{"Key":"the pieces","Fragments":["together."]},{"Key":"pieces together.","Fragments":["Often"]},{"Key":"together. Often","Fragments":["times"]},{"Key":"Often times","Fragments":["in"]},{"Key":"times in","Fragments":["Scala"]},{"Key":"Scala the","Fragments":["easiest","==","usage"]},{"Key":"the easiest","Fragments":["solution","case"]},{"Key":"easiest solution","Fragments":["is"]},{"Key":"also simple.","Fragments":["It's"]},{"Key":"simple. It's","Fragments":["easy"]},{"Key":"It's easy","Fragments":["to"]},{"Key":"to over","Fragments":["complicate"]},{"Key":"over complicate","Fragments":["things."]},{"Key":"complicate things.","Fragments":["I"]},{"Key":"things. I","Fragments":["can't","like"]},{"Key":"can't believe","Fragments":["it"]},{"Key":"believe it","Fragments":["was","makes"]},{"Key":"was this","Fragments":["simple!"]},{"Key":"this simple!","Fragments":["Solution"]},{"Key":"simple! Solution","Fragments":["taken"]},{"Key":"Solution taken","Fragments":["from"]},{"Key":"taken from","Fragments":["https://github.com/exercism/xscala/blob/master/anagram/example.scala."]},{"Key":"1. You","Fragments":["can","can","can","can"]},{"Key":"can rewrite","Fragments":["`containsLetters`","`wordCount`","it"]},{"Key":"rewrite `containsLetters`","Fragments":["as"]},{"Key":"`containsLetters` as","Fragments":["`input.exists(_.isLetter)`."]},{"Key":"as `input.exists(_.isLetter)`.","Fragments":["It's"]},{"Key":"`input.exists(_.isLetter)`. It's","Fragments":["even"]},{"Key":"It's even","Fragments":["concise"]},{"Key":"even concise","Fragments":["enough"]},{"Key":"concise enough","Fragments":["to"]},{"Key":"enough to","Fragments":["be","make","pass","just","deserve","have","be","handle"]},{"Key":"be placed","Fragments":["in"]},{"Key":"placed in","Fragments":["the"]},{"Key":"the guard","Fragments":["directly.","after","clauses"]},{"Key":"2. All","Fragments":["other","arguments"]},{"Key":"All other","Fragments":["conditions"]},{"Key":"other conditions","Fragments":["can"]},{"Key":"conditions can","Fragments":["be"]},{"Key":"be rewritten","Fragments":["using","as:","as","as","as"]},{"Key":"rewritten using","Fragments":["simple"]},{"Key":"using simple","Fragments":["collection"]},{"Key":"simple collection","Fragments":["methods."]},{"Key":"3. You","Fragments":["don't"]},{"Key":"need parens","Fragments":["in"]},{"Key":"parens in","Fragments":["the"]},{"Key":"guard after","Fragments":["`case"]},{"Key":"after `case","Fragments":["Shouting()`."]},{"Key":" Line","Fragments":["8","12,","17,","15","14","28,","28","33,","19,"]},{"Key":"Line 8","Fragments":["is"]},{"Key":"8 is","Fragments":["quite","already"]},{"Key":"quite messy.","Fragments":["You"]},{"Key":"messy. You","Fragments":["should"]},{"Key":"You should","Fragments":["use","use","have","try","try","use","have","just","be","never","never","never","not","take"]},{"Key":"should use","Fragments":["filter","copies","a","the","`x`.","copy","\"helping","a","some"]},{"Key":"use filter","Fragments":["function","instead"]},{"Key":"filter function","Fragments":["on","over"]},{"Key":"input sequence","Fragments":["to"]},{"Key":"sequence to","Fragments":["avoid"]},{"Key":"A small","Fragments":["improvement"]},{"Key":"small improvement","Fragments":["might"]},{"Key":"improvement might","Fragments":["be"]},{"Key":"to rename","Fragments":["`twoDecimals`"]},{"Key":"rename `twoDecimals`","Fragments":["to"]},{"Key":"`twoDecimals` to","Fragments":["`roundToTwoDecimals`"]},{"Key":"to `roundToTwoDecimals`","Fragments":["as"]},{"Key":"`roundToTwoDecimals` as","Fragments":["it"]},{"Key":"better expresses","Fragments":["what"]},{"Key":"expresses what","Fragments":["the"]},{"Key":"the mapping,","Fragments":["because"]},{"Key":"mapping, because","Fragments":["a"]},{"Key":"because a","Fragments":["simple","\"forceful"]},{"Key":"simple sort","Fragments":["of"]},{"Key":"sort of","Fragments":["the","a","class","cheat","Map,","like","implied"]},{"Key":"string did","Fragments":["what"]},{"Key":"did what","Fragments":["I"]},{"Key":"I needed.","Fragments":["Maps","Huzzah!!!"]},{"Key":"needed. Maps","Fragments":["are"]},{"Key":"Maps are","Fragments":["nice","functions,","PartialFunctions."]},{"Key":"nice for","Fragments":["things","this"]},{"Key":"for things","Fragments":["like","like"]},{"Key":"like this,","Fragments":["generally","it"]},{"Key":"this, generally","Fragments":["though."]},{"Key":"generally though.","Fragments":["I"]},{"Key":"though. I","Fragments":["went"]},{"Key":"went ahead","Fragments":["and","and"]},{"Key":"ahead and","Fragments":["made","rewrite","removed"]},{"Key":"and made","Fragments":["lower","your","it"]},{"Key":"made lower","Fragments":["and"]},{"Key":"lower and","Fragments":["sorted"]},{"Key":"and sorted","Fragments":["versions"]},{"Key":"sorted versions","Fragments":["of","of","of"]},{"Key":"versions of","Fragments":["s","strings.","the","Map"]},{"Key":"of s","Fragments":["so","=="]},{"Key":"s so","Fragments":["that"]},{"Key":"work only","Fragments":["needs"]},{"Key":"only needs","Fragments":["to","to","to"]},{"Key":"be done","Fragments":["once","once","in","simpler","faster?","without","in","in"]},{"Key":"done once","Fragments":["instead","on"]},{"Key":"once instead","Fragments":["of"]},{"Key":"of for","Fragments":["each","every"]},{"Key":"for each","Fragments":["member","DNA","instance","instance.","test","instance","character),","recursion.","char","type","constructed","place.","instance"]},{"Key":"each member","Fragments":["of"]},{"Key":"member of","Fragments":["the","the","the","the"]},{"Key":"the sequence","Fragments":["passed","method"]},{"Key":"sequence passed","Fragments":["to"]},{"Key":"to matches.","Fragments":["There's"]},{"Key":"matches. There's","Fragments":["probably"]},{"Key":"There's probably","Fragments":["some","a"]},{"Key":"probably some","Fragments":["more"]},{"Key":"more optimizations","Fragments":["that"]},{"Key":"optimizations that","Fragments":["could"]},{"Key":"be made.","Fragments":["I'm"]},{"Key":"made. I'm","Fragments":["reasonable"]},{"Key":"I'm reasonable","Fragments":["happy"]},{"Key":"reasonable happy","Fragments":["with"]},{"Key":"with this,","Fragments":["although"]},{"Key":"this, although","Fragments":["I"]},{"Key":"see I","Fragments":["need","forgot"]},{"Key":"clean up","Fragments":["some","the"]},{"Key":"up some","Fragments":["comments."]},{"Key":"nucleotides function","Fragments":["from"]},{"Key":"function from","Fragments":["getting"]},{"Key":"from getting","Fragments":["a"]},{"Key":"list of","Fragments":["counts","(nucleotide,","characters","_potential_","student","sorted","primes","nucleotides","tuples","tuples","all","pairs","parsed","prime","possible"]},{"Key":"of counts","Fragments":["and"]},{"Key":"counts and","Fragments":["then","then"]},{"Key":"then zipping","Fragments":["with"]},{"Key":"zipping with","Fragments":["the"]},{"Key":"nucleotides list","Fragments":["to"]},{"Key":"to just","Fragments":["getting","punt","do","use","```f```","make","say","declare","```split```","use","call","compare","pass","use","use","perform","use"]},{"Key":"just getting","Fragments":["a","into"]},{"Key":"of (nucleotide,","Fragments":["count)"]},{"Key":"(nucleotide, count)","Fragments":["pairs"]},{"Key":"count) pairs","Fragments":["and"]},{"Key":"pairs and","Fragments":["then"]},{"Key":"then creating","Fragments":["the"]},{"Key":"creating the","Fragments":["map","vals).","map","object","ntides","map"]},{"Key":"map with","Fragments":["`breakOut`.","one","the","``groupBy``"]},{"Key":"with `breakOut`.","Fragments":["I"]},{"Key":"`breakOut`. I","Fragments":["like"]},{"Key":"this because","Fragments":["it","we"]},{"Key":"because it","Fragments":["is","was","passes","could","doesn't","gives","is","seems","is","requires"]},{"Key":"it shows","Fragments":["my"]},{"Key":"shows my","Fragments":["intentions"]},{"Key":"my intentions","Fragments":["more"]},{"Key":"intentions more","Fragments":["clearly."]},{"Key":" good","Fragments":["point,","point,","point,","thing","idea,"]},{"Key":" consider","Fragments":["using","using","using","using"]},{"Key":"using ```withDefaultValue```","Fragments":["when"]},{"Key":"```withDefaultValue``` when","Fragments":["defining","defining"]},{"Key":"when defining","Fragments":["your","your"]},{"Key":"defining your","Fragments":["Map","own","Map."]},{"Key":"Map instead","Fragments":["of","of","of"]},{"Key":"create both","Fragments":["a"]},{"Key":"both a","Fragments":["map","predicate"]},{"Key":"map of","Fragments":["`nucleotideCounts`","(Char-\u003eChar)","all","characters","all"]},{"Key":"of `nucleotideCounts`","Fragments":["and"]},{"Key":"`nucleotideCounts` and","Fragments":["also"]},{"Key":"and also","Fragments":["a","utilized","the","added","just","of","that"]},{"Key":"a `count`","Fragments":["function,"]},{"Key":"`count` function,","Fragments":["it's"]},{"Key":"function, it's","Fragments":["more"]},{"Key":"it's more","Fragments":["efficient","elegant","readable"]},{"Key":"efficient to","Fragments":["build","perform"]},{"Key":"to build","Fragments":["the","the"]},{"Key":"build the","Fragments":["map","content"]},{"Key":"map at","Fragments":["initialization"]},{"Key":"at initialization","Fragments":["time,","will"]},{"Key":"initialization time,","Fragments":["and"]},{"Key":"time, and","Fragments":["then"]},{"Key":"have `count`","Fragments":["return"]},{"Key":"`count` return","Fragments":["the"]},{"Key":"necessary value.","Fragments":["Unless"]},{"Key":"value. Unless","Fragments":["you"]},{"Key":"Unless you","Fragments":["specifically"]},{"Key":"you specifically","Fragments":["expect","ask"]},{"Key":"specifically expect","Fragments":["the"]},{"Key":"expect the","Fragments":["user","Bob"]},{"Key":"the user","Fragments":["to","to","to","to"]},{"Key":"user to","Fragments":["only","jump","jump","specify"]},{"Key":"to only","Fragments":["call","allow","make","once."]},{"Key":"only call","Fragments":["`count`"]},{"Key":"call `count`","Fragments":["once"]},{"Key":"`count` once","Fragments":["or"]},{"Key":"once or","Fragments":["twice"]},{"Key":"or twice","Fragments":["per"]},{"Key":"twice per","Fragments":["object"]},{"Key":"per object","Fragments":["(and"]},{"Key":"object (and","Fragments":["rarely","maybe"]},{"Key":"(and rarely","Fragments":["access"]},{"Key":"rarely access","Fragments":["`nucleotideCounts`"]},{"Key":"access `nucleotideCounts`","Fragments":["at"]},{"Key":"`nucleotideCounts` at","Fragments":["all),"]},{"Key":"at all),","Fragments":["doing"]},{"Key":"all), doing","Fragments":["the"]},{"Key":"the work","Fragments":["at","-","in","already.","in","for","for","of","in"]},{"Key":"work at","Fragments":["initialization"]},{"Key":"initialization will","Fragments":["be"]},{"Key":"be much","Fragments":["more","more","shorter","more","more","faster."]},{"Key":"of `require`","Fragments":["on"]},{"Key":"`require` on","Fragments":["line","`Predef`.","`Predef`.","`Predef`."]},{"Key":"line 5.","Fragments":["Why"]},{"Key":"5. Why","Fragments":["didn't"]},{"Key":"Why didn't","Fragments":["you"]},{"Key":"didn't you","Fragments":["do"]},{"Key":"same thing","Fragments":["on","without","or","on","as"]},{"Key":"thing on","Fragments":["line","`realNucleotideCounts`?"]},{"Key":"of line","Fragments":["28,","noise","4"]},{"Key":"line 28,","Fragments":["you"]},{"Key":"28, you","Fragments":["should"]},{"Key":"should look","Fragments":["at"]},{"Key":"the `forall`","Fragments":["function."]},{"Key":"`forall` function.","Fragments":["It"]},{"Key":"function. It","Fragments":["does","will","seems","gets"]},{"Key":"It does","Fragments":["what","not","two"]},{"Key":"does what","Fragments":["you","you","flatten"]},{"Key":"want much","Fragments":["more"]},{"Key":"do my","Fragments":["best"]},{"Key":"my best","Fragments":["to","effort,","nit"]},{"Key":"best to","Fragments":["change","indicate","me"]},{"Key":"change my","Fragments":["ways!","ways."]},{"Key":"Well, guess","Fragments":["what"]},{"Key":"guess what","Fragments":["I"]},{"Key":"to say","Fragments":["about","about","it","if"]},{"Key":"say about","Fragments":["this","this:"]},{"Key":"this coding","Fragments":["style"]},{"Key":"coding style","Fragments":["..."]},{"Key":"style ...","Fragments":[";-)"]},{"Key":"Your `QuestionPattern`","Fragments":["can"]},{"Key":"`QuestionPattern` can","Fragments":["be"]},{"Key":"made more","Fragments":["performant","robust"]},{"Key":"more performant","Fragments":["by"]},{"Key":"performant by","Fragments":["removing"]},{"Key":"by removing","Fragments":["the","all","the","semicolons","function"]},{"Key":"the wildcard","Fragments":["greedy"]},{"Key":"wildcard greedy","Fragments":["pattern"]},{"Key":"greedy pattern","Fragments":["and"]},{"Key":"pattern and","Fragments":["simply"]},{"Key":"and simply","Fragments":["checking","my","use","passing"]},{"Key":"simply checking","Fragments":["the"]},{"Key":"checking the","Fragments":["end","end"]},{"Key":"the end","Fragments":["of","I","user,","of","will","returning","of","of","of","you","for","of","in","of"]},{"Key":"string for","Fragments":["a"]},{"Key":" forgot","Fragments":["to"]},{"Key":"helper method","Fragments":["private","isAnagram","that","for","like","for"]},{"Key":"method private","Fragments":["..."]},{"Key":"Well, it","Fragments":["is"]},{"Key":"is FP-style","Fragments":["already,"]},{"Key":"FP-style already,","Fragments":["w/o"]},{"Key":"already, w/o","Fragments":["any"]},{"Key":"w/o any","Fragments":["side","side","side","val's,","vars","explicit","side"]},{"Key":"any side","Fragments":["effects,","effects","effects.","effects/mutable","effects","effects)"]},{"Key":"side effects,","Fragments":["so","no"]},{"Key":"effects, so","Fragments":["+1"]},{"Key":"so +1","Fragments":["for"]},{"Key":"+1 for","Fragments":["that.","@katelin","simplicity!"]},{"Key":"But Scala","Fragments":["collections","provides"]},{"Key":"Scala collections","Fragments":["offer","are","provide","don't","offer","offer"]},{"Key":"collections offer","Fragments":["many","much","everything"]},{"Key":"offer many","Fragments":["useful"]},{"Key":"many useful","Fragments":["functions"]},{"Key":"useful functions","Fragments":["like","to"]},{"Key":"like ```map,","Fragments":["flatMap,"]},{"Key":"```map, flatMap,","Fragments":["zip,"]},{"Key":"flatMap, zip,","Fragments":["filter,"]},{"Key":"zip, filter,","Fragments":["count,","count,"]},{"Key":"filter, count,","Fragments":["...```","..."]},{"Key":"count, ...```","Fragments":["that","instead."]},{"Key":"...``` that","Fragments":["can"]},{"Key":"the heavy","Fragments":["lifting","work","lifting.","lifting"]},{"Key":"heavy lifting","Fragments":["for","yourself."]},{"Key":"lifting for","Fragments":["you."]},{"Key":" hint:","Fragments":["try","what","you","what","the"]},{"Key":"hint: try","Fragments":["```zip```ping"]},{"Key":"try ```zip```ping","Fragments":["the"]},{"Key":"```zip```ping the","Fragments":["two","the"]},{"Key":"two strings","Fragments":["and","and","at"]},{"Key":"then go","Fragments":["from"]},{"Key":"go from","Fragments":["there","there"]},{"Key":"from there","Fragments":["...","..."]},{"Key":"there ...","Fragments":["(no"]},{"Key":"... (no","Fragments":["loops,"]},{"Key":"(no loops,","Fragments":["no"]},{"Key":"loops, no","Fragments":["recursion"]},{"Key":"no recursion","Fragments":["required)."]},{"Key":" 2nd","Fragments":["version","version"]},{"Key":"2nd version","Fragments":["with","where"]},{"Key":"with recursion","Fragments":["and"]},{"Key":"recursion and","Fragments":["an"]},{"Key":"and an","Fragments":["accumulator","additional","if"]},{"Key":"an accumulator","Fragments":["instead"]},{"Key":"accumulator instead","Fragments":["of"]},{"Key":"a var.","Fragments":["this"]},{"Key":"var. this","Fragments":["seems"]},{"Key":"this seems","Fragments":["to"]},{"Key":"the style","Fragments":["in","conventions:","guide","of","of"]},{"Key":"style in","Fragments":["scala,"]},{"Key":"in scala,","Fragments":["but","use","lookup","came"]},{"Key":"scala, but","Fragments":["is"]},{"Key":"it possible","Fragments":["to","to","to","to"]},{"Key":"possible to","Fragments":["explain,","have","simplify","group","split","write","do","supply","make","shout"]},{"Key":"to explain,","Fragments":["in"]},{"Key":"explain, in","Fragments":["a"]},{"Key":"a concise","Fragments":["way,"]},{"Key":"concise way,","Fragments":["why?"]},{"Key":"the ifs","Fragments":["with","in"]},{"Key":"ifs with","Fragments":["the"]},{"Key":"helper methods,","Fragments":["easy"]},{"Key":"methods, easy","Fragments":["to"]},{"Key":" Some","Fragments":["recommendations:","naming","of","ways","considerations:","intermediate","suggestions"]},{"Key":"the symbols","Fragments":["regex"]},{"Key":"symbols regex","Fragments":["will"]},{"Key":"regex will","Fragments":["fail"]},{"Key":"will fail","Fragments":["if","the","for","a"]},{"Key":"fail if","Fragments":["other"]},{"Key":"if other","Fragments":["symbols"]},{"Key":"other symbols","Fragments":["are"]},{"Key":"symbols are","Fragments":["used,"]},{"Key":"are used,","Fragments":["such"]},{"Key":"used, such","Fragments":["as"]},{"Key":"as '-'","Fragments":["or"]},{"Key":"'-' or","Fragments":["'\"'."]},{"Key":"or '\"'.","Fragments":["Exclusive"]},{"Key":"'\"'. Exclusive","Fragments":["pattern"]},{"Key":"Exclusive pattern","Fragments":["would"]},{"Key":"pattern would","Fragments":["be"]},{"Key":"more robust:","Fragments":["[\\^a-zA-Z]"]},{"Key":"* regexs","Fragments":["are"]},{"Key":"regexs are","Fragments":["powerful","\"encapsulated\""]},{"Key":"are powerful","Fragments":["but"]},{"Key":"powerful but","Fragments":["most","as"]},{"Key":"but most","Fragments":["of"]},{"Key":"most of","Fragments":["the","the","the","the","the","the","the","the","the"]},{"Key":"the time","Fragments":["hard","on","you","for","this","but","to","of","of"]},{"Key":"time hard","Fragments":["to"]},{"Key":"to read.","Fragments":["It'd","Also","Seems","Have","Seems","See"]},{"Key":"read. It'd","Fragments":["be"]},{"Key":"It'd be","Fragments":["most","better"]},{"Key":"be most","Fragments":["readable"]},{"Key":"most readable","Fragments":["to","and"]},{"Key":"readable to","Fragments":["use","me.","me","use","me...a"]},{"Key":"use String","Fragments":["and"]},{"Key":"String and","Fragments":["Chars","Char","then","pretend","Char"]},{"Key":"and Chars","Fragments":["methods"]},{"Key":"Chars methods","Fragments":["since"]},{"Key":"methods since","Fragments":["they"]},{"Key":"they have","Fragments":["meaningful","a"]},{"Key":"have meaningful","Fragments":["names:"]},{"Key":"meaningful names:","Fragments":["isEmpty,"]},{"Key":"names: isEmpty,","Fragments":["isLetter,"]},{"Key":"isEmpty, isLetter,","Fragments":["isUpper"]},{"Key":"whole if","Fragments":["block"]},{"Key":"if block","Fragments":["is","and","is"]},{"Key":"block is","Fragments":["a","not","very","always"]},{"Key":"single expression","Fragments":["so","in"]},{"Key":"expression so","Fragments":["you","the"]},{"Key":"the surrounding","Fragments":["{}"]},{"Key":"* what","Fragments":["is"]},{"Key":"is **statement**","Fragments":["used"]},{"Key":"**statement** used","Fragments":["for?"]},{"Key":"use ```SortedMap```","Fragments":["to","for"]},{"Key":"```SortedMap``` to","Fragments":["get"]},{"Key":"the Map","Fragments":["sorted","into","than","`withDefault","from","definition.","back","instead","as"]},{"Key":"Map sorted","Fragments":["by"]},{"Key":"by key","Fragments":["automatically."]},{"Key":" unconventional","Fragments":["and"]},{"Key":"unconventional and","Fragments":["thus"]},{"Key":"and thus","Fragments":["interesting!","should","time","over-complicated"]},{"Key":"thus interesting!","Fragments":[":-)"]},{"Key":"One may","Fragments":["only"]},{"Key":"may only","Fragments":["complain"]},{"Key":"only complain","Fragments":["about","about"]},{"Key":"complain about","Fragments":["readability.","performance."]},{"Key":"just put","Fragments":["it"]},{"Key":"put it","Fragments":["there.","on","in","somewhere"]},{"Key":"it there.","Fragments":[":)"]},{"Key":"there. :)","Fragments":["Could"]},{"Key":":) Could","Fragments":["you"]},{"Key":"Could you","Fragments":["explain,","change","gain","double"]},{"Key":"you explain,","Fragments":["which"]},{"Key":"explain, which","Fragments":["is"]},{"Key":"is preferable","Fragments":["and","in"]},{"Key":"preferable and","Fragments":["why?"]},{"Key":"Looks great,","Fragments":["vastly","especially","to","but","also"]},{"Key":"great, vastly","Fragments":["improved."]},{"Key":"vastly improved.","Fragments":["Is"]},{"Key":"improved. Is","Fragments":["there"]},{"Key":"any reason","Fragments":["you're","to","not"]},{"Key":"reason you're","Fragments":["defining"]},{"Key":"you're defining","Fragments":["`words`"]},{"Key":"defining `words`","Fragments":["inside"]},{"Key":"`words` inside","Fragments":["the"]},{"Key":"the `wordCount`","Fragments":["block"]},{"Key":"`wordCount` block","Fragments":["rather"]},{"Key":"block rather","Fragments":["than"]},{"Key":"than just","Fragments":["having","`m`","checking","```seq```?","simple","a","`v`.","a","garbage."]},{"Key":"just having","Fragments":["it","an"]},{"Key":"having it","Fragments":["as","as","at","there","on"]},{"Key":"separate `val`","Fragments":["or"]},{"Key":"or `def`","Fragments":["in"]},{"Key":"`def` in","Fragments":["the"]},{"Key":"the `Phrase`","Fragments":["class?"]},{"Key":"One nitpick:","Fragments":["Those"]},{"Key":"nitpick: Those","Fragments":["`def"]},{"Key":"Those `def","Fragments":["onFoo`"]},{"Key":"`def onFoo`","Fragments":["statements"]},{"Key":"onFoo` statements","Fragments":["would"]},{"Key":"statements would","Fragments":["be"]},{"Key":"better as","Fragments":["`lazy"]},{"Key":"as `lazy","Fragments":["val`"]},{"Key":"`lazy val`","Fragments":["statements.","rather","and","for","for","instead","?"]},{"Key":"val` statements.","Fragments":["That"]},{"Key":"statements. That","Fragments":["way,"]},{"Key":"That way,","Fragments":["once"]},{"Key":"way, once","Fragments":["calculated"]},{"Key":"once calculated","Fragments":["repeat","(it"]},{"Key":"calculated repeat","Fragments":["calls"]},{"Key":"repeat calls","Fragments":["to"]},{"Key":"to `onFoo`","Fragments":["don't"]},{"Key":"`onFoo` don't","Fragments":["have"]},{"Key":"to perform","Fragments":["any","that","\"OR\"","a","`filter`","this","the","this","the"]},{"Key":"perform any","Fragments":["further"]},{"Key":"any further","Fragments":["work."]},{"Key":"for squaring","Fragments":["a"]},{"Key":"squaring a","Fragments":["number."]},{"Key":" At","Fragments":["least","least","least","first","first","least","least","the","least","first"]},{"Key":"least it","Fragments":["excludes","passes"]},{"Key":"it excludes","Fragments":["possible"]},{"Key":"excludes possible","Fragments":["floating"]},{"Key":"possible floating","Fragments":["point"]},{"Key":"floating point","Fragments":["values?!"]},{"Key":"point values?!","Fragments":[":-)"]},{"Key":" Btw:","Fragments":["Yes,"]},{"Key":"Btw: Yes,","Fragments":["it"]},{"Key":"Yes, it","Fragments":["is","is","looks"]},{"Key":"much less","Fragments":["efficient,"]},{"Key":"but somehow","Fragments":["my"]},{"Key":"my gut","Fragments":["feeling"]},{"Key":"gut feeling","Fragments":["is"]},{"Key":"feeling is","Fragments":["that"]},{"Key":"the exercise's","Fragments":["intention"]},{"Key":"exercise's intention","Fragments":["was"]},{"Key":"intention was","Fragments":["for"]},{"Key":"was for","Fragments":["```total```"]},{"Key":"for ```total```","Fragments":["to"]},{"Key":"```total``` to","Fragments":["use"]},{"Key":"use ```square```.","Fragments":[":-)"]},{"Key":"Perhaps use","Fragments":["BigInt"]},{"Key":"use BigInt","Fragments":["instead"]},{"Key":"BigInt instead","Fragments":["of"]},{"Key":"of Double","Fragments":["everywhere?"]},{"Key":"you believe","Fragments":["it's"]},{"Key":"believe it's","Fragments":["better?","good"]},{"Key":" not","Fragments":["good","sure","sure","bad"]},{"Key":"good FP","Fragments":["style"]},{"Key":"FP style","Fragments":["to","w/o","way","again"]},{"Key":"style to","Fragments":["return","put"]},{"Key":"original GregorianCalendar","Fragments":["after"]},{"Key":"GregorianCalendar after","Fragments":["performing"]},{"Key":"after performing","Fragments":["some"]},{"Key":"performing some","Fragments":["side"]},{"Key":"some side","Fragments":["effect"]},{"Key":"side effect","Fragments":["on","or"]},{"Key":"effect on","Fragments":["it."]},{"Key":"in FP","Fragments":["one","it","style","that","style","programs","style:"]},{"Key":"FP one","Fragments":["should"]},{"Key":"one should","Fragments":["use"]},{"Key":"use copies","Fragments":["(w/o"]},{"Key":"copies (w/o","Fragments":["any"]},{"Key":"(w/o any","Fragments":["side","\"digits\")"]},{"Key":"side effects","Fragments":["for","are","if","(like","local","if","and","and","(mutable","if"]},{"Key":"effects for","Fragments":["the"]},{"Key":"the outside","Fragments":["world)","world.","world?!","world.","world","world.","world.","world,","world.","```calendar```","world."]},{"Key":"outside world)","Fragments":["instead."]},{"Key":"In trying","Fragments":["to"]},{"Key":"to decide","Fragments":["when","if"]},{"Key":"decide when","Fragments":["to"]},{"Key":"when to","Fragments":["use","use"]},{"Key":"use short","Fragments":["variable"]},{"Key":"short variable","Fragments":["names"]},{"Key":"names vs.","Fragments":["long"]},{"Key":"vs. long","Fragments":["ones,"]},{"Key":"long ones,","Fragments":["the"]},{"Key":"ones, the","Fragments":["thing"]},{"Key":"the thing","Fragments":["that","is,","w/","in"]},{"Key":"thing that","Fragments":["makes","took","worked","Scala","stands","caught","uses"]},{"Key":"sense to","Fragments":["me","me","declare","define","even","keep","me.","do"]},{"Key":"use descriptive","Fragments":["variable"]},{"Key":"descriptive variable","Fragments":["names","names"]},{"Key":"for parameters","Fragments":["because"]},{"Key":"parameters because","Fragments":["those"]},{"Key":"because those","Fragments":["are"]},{"Key":"those are","Fragments":["exposed","Maps","good","traditional"]},{"Key":"are exposed","Fragments":["externally"]},{"Key":"exposed externally","Fragments":["and"]},{"Key":"externally and","Fragments":["should"]},{"Key":"should provide","Fragments":["info","some"]},{"Key":"provide info","Fragments":["on"]},{"Key":"info on","Fragments":["what"]},{"Key":"on what","Fragments":["they","the","level"]},{"Key":"they are,","Fragments":["but","you"]},{"Key":"are, but","Fragments":["for","my"]},{"Key":"but for","Fragments":["something","some","the","those","readability,","this","me"]},{"Key":"for something","Fragments":["like","can","to","more","simple"]},{"Key":"like charTuple","Fragments":["I"]},{"Key":"charTuple I","Fragments":["think"]},{"Key":"was better/more","Fragments":["readable"]},{"Key":"better/more readable","Fragments":["as"]},{"Key":"readable as","Fragments":["simply","possible","it"]},{"Key":"as simply","Fragments":["c."]},{"Key":"looks a","Fragments":["bit","little","bit","bit","bit","bit","lot","bit","bit","bit"]},{"Key":"bit imperative.","Fragments":["If"]},{"Key":"imperative. If","Fragments":["you"]},{"Key":"you try","Fragments":["not","to","to"]},{"Key":"try not","Fragments":["using","to"]},{"Key":"not using","Fragments":["\"var\",","own","any","any","a","a","a","()","some","dots","dots","`map`."]},{"Key":"using \"var\",","Fragments":["you"]},{"Key":"\"var\", you","Fragments":["might"]},{"Key":"might need","Fragments":["to"]},{"Key":"use other","Fragments":["more"]},{"Key":"other more","Fragments":["functional"]},{"Key":"functional approaches,","Fragments":["like"]},{"Key":"approaches, like","Fragments":["using"]},{"Key":"like using","Fragments":["folds","an","Sequence","an"]},{"Key":"using folds","Fragments":["or"]},{"Key":"folds or","Fragments":["for","for"]},{"Key":"or for","Fragments":["comprehensions.","comprehensions"]},{"Key":" @suzanne","Fragments":["thanks!"]},{"Key":"@suzanne thanks!","Fragments":["That's"]},{"Key":"thanks! That's","Fragments":["awesome"]},{"Key":" scala","Fragments":["has","maps"]},{"Key":"scala has","Fragments":["a","its","some"]},{"Key":"a `require`","Fragments":["method"]},{"Key":"`require` method","Fragments":["that"]},{"Key":"method that","Fragments":["receives","could","does","is","isn't","does","takes"]},{"Key":"that receives","Fragments":["an"]},{"Key":"receives an","Fragments":["expression"]},{"Key":"expression that","Fragments":["evaluates"]},{"Key":"that evaluates","Fragments":["to"]},{"Key":"to boolean","Fragments":["and","statement."]},{"Key":"boolean and","Fragments":["throws","see"]},{"Key":"and throws","Fragments":["an","an"]},{"Key":"throws an","Fragments":["`IllegalArgumentException`","`IllegalArgumentException`","`IllegalArgumentException`","exception.","exception","`IllegalArgumentException`"]},{"Key":"an `IllegalArgumentException`","Fragments":["if","and","and","and"]},{"Key":"`IllegalArgumentException` if","Fragments":["false."]},{"Key":"if false.","Fragments":["That"]},{"Key":"false. That","Fragments":["might"]},{"Key":"That might","Fragments":["help"]},{"Key":" @zoe","Fragments":["nice!"]},{"Key":"@zoe nice!","Fragments":["Thanks"]},{"Key":"Some naming","Fragments":["conventions,"]},{"Key":"naming conventions,","Fragments":["it"]},{"Key":"conventions, it","Fragments":["is"]},{"Key":"not customary","Fragments":["in"]},{"Key":"customary in","Fragments":["Scala"]},{"Key":"Scala to","Fragments":["make","initialize","have","do","leave","hate"]},{"Key":"make `val`'s","Fragments":["shout"]},{"Key":"`val`'s shout","Fragments":["at"]},{"Key":"shout at","Fragments":["you"]},{"Key":"at you","Fragments":["since"]},{"Key":"you since","Fragments":["they"]},{"Key":"are preferred","Fragments":["over"]},{"Key":"preferred over","Fragments":["`var`'s."]},{"Key":"over `var`'s.","Fragments":["`val`"]},{"Key":"`var`'s. `val`","Fragments":["names"]},{"Key":"`val` names","Fragments":["are"]},{"Key":"names are","Fragments":["in","a","exhausted.","verbs.","not","exhausted"]},{"Key":"are in","Fragments":["camelCase.","their"]},{"Key":"in camelCase.","Fragments":["Scala's"]},{"Key":"camelCase. Scala's","Fragments":["[`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map)"]},{"Key":"Scala's [`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map)","Fragments":["has"]},{"Key":"[`Map`](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.immutable.Map) has","Fragments":["a"]},{"Key":"a `withDefaultValue`","Fragments":["method","which"]},{"Key":"`withDefaultValue` method","Fragments":["that"]},{"Key":"could really","Fragments":["simplify"]},{"Key":"really simplify","Fragments":["your"]},{"Key":"simplify your","Fragments":["code.","code","code","code.","code.","pattern","code.","solution.","code"]},{"Key":"your code.","Fragments":["You",":-)","Reduces"]},{"Key":"code. You","Fragments":["also","are"]},{"Key":"You also","Fragments":["might"]},{"Key":"also might","Fragments":["consider","try"]},{"Key":"the [`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","Fragments":["function","function","function"]},{"Key":"[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$) function","Fragments":["for","that","you"]},{"Key":"for input","Fragments":["validation."]},{"Key":"around your","Fragments":["function"]},{"Key":"I'd refactor","Fragments":["the","the"]},{"Key":"into their","Fragments":["own","own","own"]},{"Key":"their own","Fragments":["functions.","new","functions.","functions,","`unapply`","right"]},{"Key":"I'm a","Fragments":["bit","little","Scala"]},{"Key":"bit concerned","Fragments":["that"]},{"Key":"concerned that","Fragments":["your"]},{"Key":"that your","Fragments":["x","solution","function","interpretation","code","function"]},{"Key":"your x","Fragments":["variables"]},{"Key":"x variables","Fragments":["are"]},{"Key":"are actually","Fragments":["just","constants","constants,","constants,"]},{"Key":"actually just","Fragments":["copies"]},{"Key":"just copies","Fragments":["of"]},{"Key":"copies of","Fragments":["message."]},{"Key":"of message.","Fragments":["That's"]},{"Key":"message. That's","Fragments":["why"]},{"Key":"That's why","Fragments":["I","I"]},{"Key":"if pattern","Fragments":["matching"]},{"Key":"a perfect","Fragments":["fit","name"]},{"Key":"perfect fit","Fragments":["for"]},{"Key":"fit for","Fragments":["this"]},{"Key":"problem (here","Fragments":["is"]},{"Key":"(here is","Fragments":["just"]},{"Key":"is just","Fragments":["used","another","about","using","me.","loose","```","to","my","the","great,","an"]},{"Key":"just used","Fragments":["as"]},{"Key":"used as","Fragments":["an","a","a","the"]},{"Key":"as an","Fragments":["alternative","argument","immutable","enumeration)","additional","insensitive","anagram","example.","alternative","additional"]},{"Key":"are using","Fragments":["a","Scala,"]},{"Key":"mutable phrase.","Fragments":["Your"]},{"Key":"phrase. Your","Fragments":["solution"]},{"Key":"solution can","Fragments":["get","implemented"]},{"Key":"get shorter","Fragments":["with"]},{"Key":"shorter with","Fragments":["recursion."]},{"Key":"with recursion.","Fragments":["You"]},{"Key":"recursion. You","Fragments":["can"]},{"Key":"can look","Fragments":["at","at","into"]},{"Key":"solution for","Fragments":["some","everything","all","your","everything!","this?","this","the","big","this","my"]},{"Key":"you thought","Fragments":["about","about"]},{"Key":"thought about","Fragments":["avoiding","it","using","doing","moving"]},{"Key":"about avoiding","Fragments":["the"]},{"Key":"avoiding the","Fragments":["try-catch"]},{"Key":"the try-catch","Fragments":["blocks?"]},{"Key":"try-catch blocks?","Fragments":["I"]},{"Key":"blocks? I","Fragments":["think"]},{"Key":"read if","Fragments":["you","functions"]},{"Key":"you would","Fragments":["handle","do","solve","prefer","suggest","keep","have","always","get","have","have"]},{"Key":"would handle","Fragments":["the"]},{"Key":"handle the","Fragments":["IllegalArgumentExceptions","splitting","basic","low","mixed","numbers","case"]},{"Key":"the IllegalArgumentExceptions","Fragments":["explicitly"]},{"Key":"Not really,","Fragments":["it"]},{"Key":"really, it","Fragments":["was"]},{"Key":"more lisp","Fragments":["like"]},{"Key":"lisp like","Fragments":[":D"]},{"Key":" True,","Fragments":["but","and","you","I"]},{"Key":"True, but","Fragments":["that"]},{"Key":"would kill","Fragments":["the"]},{"Key":"kill the","Fragments":["running","utility"]},{"Key":"the running","Fragments":["time."]},{"Key":"running time.","Fragments":["Since"]},{"Key":"time. Since","Fragments":["List","total"]},{"Key":"Since List","Fragments":["is"]},{"Key":"List is","Fragments":["a","not","a","using","a","using","to"]},{"Key":"a linear","Fragments":["data"]},{"Key":"linear data","Fragments":["structure,"]},{"Key":"data structure,","Fragments":["doing","you"]},{"Key":"structure, doing","Fragments":["as"]},{"Key":"doing as","Fragments":["you"]},{"Key":"you suggest","Fragments":["would"]},{"Key":"suggest would","Fragments":["result"]},{"Key":"would result","Fragments":["in"]},{"Key":"map that","Fragments":["runs","maps","checks"]},{"Key":"that runs","Fragments":["in"]},{"Key":"runs in","Fragments":["quadratic"]},{"Key":"in quadratic","Fragments":["time."]},{"Key":"you made","Fragments":["it","Year"]},{"Key":"made it","Fragments":["tail-recursive.","harder","nicer","not"]},{"Key":"the `reverse`","Fragments":["by","inside"]},{"Key":"`reverse` by","Fragments":["using"]},{"Key":"using `accu","Fragments":[":+"]},{"Key":"`accu :+","Fragments":["fun(x)`"]},{"Key":":+ fun(x)`","Fragments":["instead"]},{"Key":"fun(x)` instead","Fragments":["of"]},{"Key":"of `fun(x)","Fragments":["::"]},{"Key":"`fun(x) ::","Fragments":["accu`"]},{"Key":" Good","Fragments":["point.","use","idea,","one","job,","Catch.","job!","point.","Job!","point,","point","thinking,","job!","solution","to","idea","job,","point","to","point,","idea","point."]},{"Key":"not really","Fragments":["take","clean.","a","necessary.","essential","say","be","looking","needed,","need","good","more","in","Scala","happy","necessary","relevant.","important.","random","random,","a","good"]},{"Key":"really take","Fragments":["into"]},{"Key":"take into","Fragments":["account","account"]},{"Key":"into account","Fragments":["performance","that","in"]},{"Key":"account performance","Fragments":["when"]},{"Key":"performance when","Fragments":["I"]},{"Key":"made my","Fragments":["comment."]},{"Key":"I'm curious,","Fragments":["did"]},{"Key":"curious, did","Fragments":["you"]},{"Key":"did you","Fragments":["make","chose","chose","import","use","use","remove"]},{"Key":"make `map`","Fragments":["curried"]},{"Key":"`map` curried","Fragments":["because"]},{"Key":"curried because","Fragments":["it"]},{"Key":"was required","Fragments":["for"]},{"Key":"required for","Fragments":["the","this"]},{"Key":" Smart","Fragments":["use","`zip`"]},{"Key":"Smart use","Fragments":["of"]},{"Key":"It's very","Fragments":["concise","terse.","similar","similar"]},{"Key":"very concise","Fragments":["(good)","solution","and"]},{"Key":"concise (good)","Fragments":["not"]},{"Key":"(good) not","Fragments":["not"]},{"Key":"not not","Fragments":["so"]},{"Key":"not so","Fragments":["easily","trivial","sure","obvious....and","complicated"]},{"Key":"so easily","Fragments":["readable"]},{"Key":"easily readable","Fragments":["(less"]},{"Key":"readable (less","Fragments":["good)."]},{"Key":"(less good).","Fragments":["It"]},{"Key":"good). It","Fragments":["might"]},{"Key":"read by","Fragments":["defining"]},{"Key":"by defining","Fragments":["two","functions"]},{"Key":"defining two","Fragments":["functions","\"hello\""]},{"Key":"two functions","Fragments":["(let's","that","can"]},{"Key":"functions (let's","Fragments":["say"]},{"Key":"(let's say","Fragments":["`isAnagram`"]},{"Key":"say `isAnagram`","Fragments":["and"]},{"Key":"`isAnagram` and","Fragments":["`isSameWord`"]},{"Key":"and `isSameWord`","Fragments":["for"]},{"Key":"`isSameWord` for","Fragments":["instance)."]},{"Key":"looks great,","Fragments":["but"]},{"Key":"great, but","Fragments":["couldn't","would","after","still"]},{"Key":"couldn't \"\"\"val","Fragments":["alphaNumerics"]},{"Key":"\"\"\"val alphaNumerics","Fragments":["="]},{"Key":"alphaNumerics =","Fragments":["Random.alphanumeric\"\"\""]},{"Key":" return","Fragments":["numbers"]},{"Key":"return numbers","Fragments":["too"]},{"Key":"numbers too","Fragments":["insteads"]},{"Key":"too insteads","Fragments":["of"]},{"Key":"insteads of","Fragments":["just"]},{"Key":"of just","Fragments":["letters.","```::```","returning","an","Map?","```Int```.","String.","```sqr((1","that","calling","one."]},{"Key":"My brain","Fragments":["processes"]},{"Key":"brain processes","Fragments":["```x"]},{"Key":"processes ```x","Fragments":["=\u003e"]},{"Key":"```x =\u003e","Fragments":["x```","f(x)```","squareMe(x)```.","x```,","x.foo```","f(x)```","scoreLetter(x)```"]},{"Key":"=\u003e x```","Fragments":["is"]},{"Key":"x``` is","Fragments":["easier"]},{"Key":"easier than","Fragments":["```identity```."]},{"Key":"than ```identity```.","Fragments":["What"]},{"Key":"```identity```. What","Fragments":["do"]},{"Key":" thx","Fragments":["for"]},{"Key":"thx for","Fragments":["the","the","the"]},{"Key":"the hint","Fragments":["to"]},{"Key":"hint to","Fragments":["synchronize"]},{"Key":"to synchronize","Fragments":["only","```closeAccount```.","on"]},{"Key":"synchronize only","Fragments":["on"]},{"Key":"only on","Fragments":["the"]},{"Key":"the smallest","Fragments":["possible"]},{"Key":"smallest possible","Fragments":["code"]},{"Key":"possible code","Fragments":["block."]},{"Key":" That","Fragments":["was","said,","holds","way","made","magic","being","is","condition","is","creates"]},{"Key":"That was","Fragments":["a","very"]},{"Key":"was a","Fragments":["first","good","bit","quick","mistaken","bit","way","`String`,","terribly","bit","performance"]},{"Key":"first version","Fragments":["just","(which","then.","had"]},{"Key":"version just","Fragments":["to"]},{"Key":"get all","Fragments":["tests","the"]},{"Key":"all tests","Fragments":["passing.","pass?","pass","pass,"]},{"Key":"is another","Fragments":["way","topic.","thing","matter,"]},{"Key":"of writing","Fragments":["this","out"]},{"Key":"writing this","Fragments":["that","in"]},{"Key":"this that","Fragments":["doesn't"]},{"Key":"doesn't iterate","Fragments":["through"]},{"Key":"iterate through","Fragments":["the","the"]},{"Key":"the days","Fragments":["of","(e.g."]},{"Key":"days of","Fragments":["the"]},{"Key":" Other","Fragments":["than","than","than","than","than","than","than","than","than"]},{"Key":"Other than","Fragments":["that,","that,","that,","these","that,","that,","that:","that:","that:","that:"]},{"Key":"than that,","Fragments":["the","this","good","looks","pretty"]},{"Key":"that, the","Fragments":["code"]},{"Key":"code looks","Fragments":["good."]},{"Key":"are right,","Fragments":["the","`s.last`","well","there","it"]},{"Key":"right, the","Fragments":["variable"]},{"Key":"variable shadowing","Fragments":["is"]},{"Key":"shadowing is","Fragments":["not"]},{"Key":"a quick","Fragments":["refactoring.","and"]},{"Key":"It IS","Fragments":["nitpicking"]},{"Key":"IS nitpicking","Fragments":[":-)"]},{"Key":"nitpicking :-)","Fragments":["but"]},{"Key":":-) but","Fragments":["if"]},{"Key":"but if","Fragments":["you","the","you","you","you","it's","someone","others","you","you"]},{"Key":"value in","Fragments":["the","a","my","```reset()```?!","if","both","the"]},{"Key":"match you","Fragments":["do"]},{"Key":"do not","Fragments":["have","have","really","let","like","like","use","have","know","need","contain","rate","use","have","know","need","understand","store","need","know"]},{"Key":"have assign","Fragments":["it."]},{"Key":"assign it.","Fragments":["You"]},{"Key":"it. You","Fragments":["can"]},{"Key":"case _","Fragments":["if","=\u003e","=\u003e","=\u003e","if","=\u003e","=\u003e"]},{"Key":"_ if","Fragments":["isSilence(sentence)","...```)?","isSilence(message)"]},{"Key":"if isSilence(sentence)","Fragments":["=\u003e"]},{"Key":"isSilence(sentence) =\u003e","Fragments":["\"Fine."]},{"Key":"Also by","Fragments":["giving"]},{"Key":"by giving","Fragments":["the"]},{"Key":"match value","Fragments":["the"]},{"Key":"value the","Fragments":["same","last"]},{"Key":"name as","Fragments":["your","a","the","well."]},{"Key":"as your","Fragments":["original","recursive","two","split","first","```Shouting```"]},{"Key":"your original","Fragments":["parameter","solution."]},{"Key":"original parameter","Fragments":["(`sentence`)"]},{"Key":"parameter (`sentence`)","Fragments":["your"]},{"Key":"(`sentence`) your","Fragments":["variable"]},{"Key":"your variable","Fragments":["is","names"]},{"Key":"variable is","Fragments":["'shadowed'."]},{"Key":"is 'shadowed'.","Fragments":["In"]},{"Key":"'shadowed'. In","Fragments":["this"]},{"Key":"case it","Fragments":["does","clearly","makes","may","will","seems"]},{"Key":"it does","Fragments":["not","-","not","not","it","make","not","make","not","that","not","not","not","(and","not"]},{"Key":"not matter","Fragments":["as"]},{"Key":"matter as","Fragments":["the","both"]},{"Key":"values are","Fragments":["identical","assigned"]},{"Key":"are identical","Fragments":["but"]},{"Key":"identical but","Fragments":["if"]},{"Key":"the matched","Fragments":["value"]},{"Key":"matched value","Fragments":["is"]},{"Key":"given a","Fragments":["different"]},{"Key":"different name,","Fragments":["it"]},{"Key":"name, it","Fragments":["is"]},{"Key":"is clearer","Fragments":["on",","]},{"Key":"clearer on","Fragments":["what"]},{"Key":"being evaluated.","Fragments":["[It"]},{"Key":"evaluated. [It","Fragments":["can"]},{"Key":"[It can","Fragments":["be"]},{"Key":"bit harder","Fragments":["to"]},{"Key":"to track","Fragments":["down","-"]},{"Key":"track down","Fragments":["issues,"]},{"Key":"down issues,","Fragments":["I"]},{"Key":"issues, I","Fragments":["know"]},{"Key":"have had","Fragments":["it","dedicated","something"]},{"Key":"had it","Fragments":["when","like","in"]},{"Key":"it when","Fragments":["I","needed,","reviewing"]},{"Key":"wasn't evaluating","Fragments":["what"]},{"Key":"evaluating what","Fragments":["I"]},{"Key":"thought I","Fragments":["was","had","should"]},{"Key":" Finally,","Fragments":["the","I've","on"]},{"Key":"Finally, the","Fragments":["helper"]},{"Key":"methods may","Fragments":["be"]},{"Key":"declared `private`","Fragments":["or"]},{"Key":"`private` or","Fragments":["defined"]},{"Key":"or defined","Fragments":["as"]},{"Key":"as inner","Fragments":["functions","functions"]},{"Key":"inner functions","Fragments":["in","(that","of"]},{"Key":"doesn't work","Fragments":["for","for","is",":/","yet.",":("]},{"Key":"work for","Fragments":["repeated","repeated","me.","you.","some,","you.","me","pattern","me?"]},{"Key":"for repeated","Fragments":["strings,","strings,"]},{"Key":"repeated strings,","Fragments":["check","check"]},{"Key":"strings, check","Fragments":["your","your"]},{"Key":"check your","Fragments":["tests,","tests,"]},{"Key":"your tests,","Fragments":["you","you"]},{"Key":"tests, you","Fragments":["have","have"]},{"Key":"to remove","Fragments":["the","the","the","superfluous","the","the","the","`if`","numeric"]},{"Key":"the `pending`","Fragments":["markers.","markers."]},{"Key":"I added","Fragments":["a","(overcomplicated?),","the","'"]},{"Key":"method isAnagram","Fragments":["and"]},{"Key":"isAnagram and","Fragments":["made"]},{"Key":"made your","Fragments":["\"sorted\""]},{"Key":"your \"sorted\"","Fragments":["val"]},{"Key":"\"sorted\" val","Fragments":["a"]},{"Key":"val a","Fragments":["class"]},{"Key":"class val,","Fragments":["but"]},{"Key":"val, but","Fragments":["otherwise,"]},{"Key":"but otherwise,","Fragments":["my"]},{"Key":"otherwise, my","Fragments":["solution"]},{"Key":"was similar.","Fragments":["Well"]},{"Key":"similar. Well","Fragments":["done!"]},{"Key":"nice! i","Fragments":["like"]},{"Key":"i like","Fragments":["the","the"]},{"Key":"an optimize","Fragments":["view"]},{"Key":"optimize view","Fragments":["by"]},{"Key":"view by","Fragments":["adding"]},{"Key":"by adding","Fragments":["the","the","an","the"]},{"Key":"adding the","Fragments":["view.","next","difference","inverted"]},{"Key":"isn't the","Fragments":["case","most","most"]},{"Key":"case should","Fragments":["be"]},{"Key":" (a,b)","Fragments":["=\u003e"]},{"Key":"(a,b) =\u003e","Fragments":["(a","a"]},{"Key":"=\u003e (a","Fragments":["!="]},{"Key":"(a !=","Fragments":["b)"]},{"Key":" Ops!","Fragments":["Thank"]},{"Key":"Ops! Thank","Fragments":["you."]},{"Key":"Thank you.","Fragments":["Apparently","I","I","I"]},{"Key":"you. Apparently","Fragments":["I"]},{"Key":"Apparently I","Fragments":["can't"]},{"Key":"can't even","Fragments":["test","figure"]},{"Key":"even test","Fragments":[":-("]},{"Key":"extract `\"ATCG\"`","Fragments":["into"]},{"Key":"`\"ATCG\"` into","Fragments":["it's"]},{"Key":"own val","Fragments":["since"]},{"Key":"val since","Fragments":["you're"]},{"Key":"since you're","Fragments":["using","doing","probably"]},{"Key":"using it","Fragments":["in","as"]},{"Key":"in more","Fragments":["than"]},{"Key":"than one","Fragments":["place.","pairing"]},{"Key":"have wordCount","Fragments":["as"]},{"Key":"wordCount as","Fragments":["(lazy)"]},{"Key":"(lazy) val","Fragments":["for"]},{"Key":" ```atbashLetterMapping","Fragments":["withDefault"]},{"Key":"```atbashLetterMapping withDefault","Fragments":["identity```"]},{"Key":"So if","Fragments":["you","you"]},{"Key":"already filtered","Fragments":["out"]},{"Key":"filtered out","Fragments":["any"]},{"Key":"out any","Fragments":["non-letters-or-digits"]},{"Key":"any non-letters-or-digits","Fragments":["then"]},{"Key":"non-letters-or-digits then","Fragments":["digits"]},{"Key":"then digits","Fragments":["just"]},{"Key":"digits just","Fragments":["map"]},{"Key":"just map","Fragments":["to"]},{"Key":" @alisa","Fragments":["thx"]},{"Key":"@alisa thx","Fragments":["for"]},{"Key":"How would","Fragments":["you","you","you","you"]},{"Key":"would you","Fragments":["get","report","do","call","think","improve/simplify","iterate","do","advice","do","handle","handle"]},{"Key":"you get","Fragments":["the","stuck","your","the","to","from","the","all","to","the"]},{"Key":"the distinction","Fragments":["of"]},{"Key":"distinction of","Fragments":["mapping"]},{"Key":"of mapping","Fragments":["between","over"]},{"Key":"mapping between","Fragments":["digits"]},{"Key":"between digits","Fragments":["and"]},{"Key":"digits and","Fragments":["letters","the"]},{"Key":"and letters","Fragments":["without"]},{"Key":"letters without","Fragments":["making"]},{"Key":"without making","Fragments":["the","it"]},{"Key":"making the","Fragments":["difference?","vals","exterenal","string","db","comparison:)","tests"]},{"Key":"do even","Fragments":["simpler","better."]},{"Key":"even simpler","Fragments":["(w/o","with"]},{"Key":"simpler (w/o","Fragments":["any"]},{"Key":"any \"digits\")","Fragments":["by"]},{"Key":"\"digits\") by","Fragments":["just"]},{"Key":"just filtering","Fragments":["with","your"]},{"Key":"filtering with","Fragments":["Character.isLetterOrDigit","the"]},{"Key":"I realized","Fragments":["I","that","an","I"]},{"Key":"realized I","Fragments":["was","don't"]},{"Key":"was at","Fragments":["a"]},{"Key":"at a","Fragments":["one-liner","time","time","glance.","time,","later","time.","performance","Scala","runtime"]},{"Key":"a one-liner","Fragments":["at","solution","but"]},{"Key":"one-liner at","Fragments":["this"]},{"Key":"at this","Fragments":["point","problem.","based","I"]},{"Key":"this point","Fragments":["and"]},{"Key":"point and","Fragments":["so"]},{"Key":"and so","Fragments":["adjusted","on.","on","it's","on\".","on.","on,"]},{"Key":"so adjusted","Fragments":["the"]},{"Key":"adjusted the","Fragments":["code"]},{"Key":"code to","Fragments":["reflect","eliminate","use","include","mutate","see","be","remove","make","package","the","calculate","look","add","be","describe","reflect"]},{"Key":"to reflect","Fragments":["that.","it."]},{"Key":" Right,","Fragments":["and","but"]},{"Key":"Right, and","Fragments":["I"]},{"Key":"I oversaw","Fragments":["this"]},{"Key":"oversaw this","Fragments":["b/c"]},{"Key":"this b/c","Fragments":["you"]},{"Key":"b/c you","Fragments":["just","can.","can."]},{"Key":"just imported","Fragments":["mutable.Map"]},{"Key":"imported mutable.Map","Fragments":["and"]},{"Key":"mutable.Map and","Fragments":["use"]},{"Key":"name instead","Fragments":["like","of"]},{"Key":"instead like","Fragments":["\"MMap\""]},{"Key":"like \"MMap\"","Fragments":["or"]},{"Key":"\"MMap\" or","Fragments":["\"mutable.Map\"."]},{"Key":"The school's","Fragments":["internal"]},{"Key":"school's internal","Fragments":["DB","DB."]},{"Key":"internal DB","Fragments":["is"]},{"Key":"DB is","Fragments":["still"]},{"Key":"still mutable","Fragments":["from"]},{"Key":"mutable from","Fragments":["outside"]},{"Key":"from outside","Fragments":["because"]},{"Key":"outside because","Fragments":["of"]},{"Key":"def db","Fragments":["=","return"]},{"Key":"db =","Fragments":["database"]},{"Key":"more visible","Fragments":["in"]},{"Key":"visible in","Fragments":["the"]},{"Key":"that we","Fragments":["are","want","want","get","get"]},{"Key":"we are","Fragments":["dealing","not","entering","only"]},{"Key":"are dealing","Fragments":["w/"]},{"Key":"dealing w/","Fragments":["a"]},{"Key":"mutable Map,","Fragments":["either"]},{"Key":"Map, either","Fragments":["by"]},{"Key":"either by","Fragments":["keeping"]},{"Key":"by keeping","Fragments":["the","a"]},{"Key":"keeping the","Fragments":["package"]},{"Key":"the package","Fragments":["```mutable.Map```"]},{"Key":"package ```mutable.Map```","Fragments":["or"]},{"Key":"```mutable.Map``` or","Fragments":["by"]},{"Key":"an import","Fragments":["alias","alias","-"]},{"Key":"import alias","Fragments":["```.{Map","like"]},{"Key":"alias ```.{Map","Fragments":["=\u003e"]},{"Key":"```.{Map =\u003e","Fragments":["MMap}```"]},{"Key":"=\u003e MMap}```","Fragments":["or"]},{"Key":"MMap}``` or","Fragments":["so"]},{"Key":"or so","Fragments":["(or","instead","for","..."]},{"Key":"so (or","Fragments":["by"]},{"Key":"(or by","Fragments":["using"]},{"Key":"type alias,","Fragments":["see","BasePair"]},{"Key":"alias, see","Fragments":["my"]},{"Key":"see my","Fragments":["next","3rd"]},{"Key":"my next","Fragments":["nitpick).","iteration.","iteration.","submission."]},{"Key":"And type","Fragments":["aliases","aliases"]},{"Key":"aliases for","Fragments":["```Int```,","better","String","your"]},{"Key":"for ```Int```,","Fragments":["```Seq[String]```"]},{"Key":"```Int```, ```Seq[String]```","Fragments":["(perhaps"]},{"Key":"```Seq[String]``` (perhaps","Fragments":["also"]},{"Key":"(perhaps also","Fragments":["for","have"]},{"Key":"the Map)","Fragments":["can"]},{"Key":"Map) can","Fragments":["improve"]},{"Key":"can improve","Fragments":["readability","another","readability","your","readability"]},{"Key":"improve readability","Fragments":["quite","w/","on","by","but","here.","of","immensely."]},{"Key":"readability quite","Fragments":["a"]},{"Key":"a bit.","Fragments":["Those","For",":-)"]},{"Key":"bit. Those","Fragments":["raw"]},{"Key":"Those raw","Fragments":["Scala"]},{"Key":"raw Scala","Fragments":["types"]},{"Key":"Scala types","Fragments":["don't","Int,"]},{"Key":"types don't","Fragments":["reveal"]},{"Key":"don't reveal","Fragments":["what","what"]},{"Key":"reveal what","Fragments":["they","they"]},{"Key":"they really","Fragments":["stand","don't","stand"]},{"Key":"really stand","Fragments":["for.","for."]},{"Key":" might","Fragments":["be","be"]},{"Key":"readable if","Fragments":["you","your","you","you","done"]},{"Key":"use ```isEmpty```","Fragments":["and"]},{"Key":"```isEmpty``` and","Fragments":["```endsWith```?"]},{"Key":" +1","Fragments":["to","for"]},{"Key":"+1 to","Fragments":["all"]},{"Key":"to all","Fragments":["of","characters."]},{"Key":"all of","Fragments":["@josh","them","your","them","your","your","your"]},{"Key":"of @josh","Fragments":["'s"]},{"Key":"@josh 's","Fragments":["issues."]},{"Key":" also,","Fragments":["you","is","IMHO","instead"]},{"Key":"also, you","Fragments":["are"]},{"Key":"are relying","Fragments":["on"]},{"Key":"relying on","Fragments":["`+=`","any","the"]},{"Key":"on `+=`","Fragments":["being"]},{"Key":"`+=` being","Fragments":["atomic."]},{"Key":"being atomic.","Fragments":["better"]},{"Key":"atomic. better","Fragments":["be"]},{"Key":"better be","Fragments":["explicit"]},{"Key":"explicit about","Fragments":["the","having","public"]},{"Key":"the TX","Fragments":["in"]},{"Key":"TX in","Fragments":["your"]},{"Key":" Few","Fragments":["questions"]},{"Key":"Few questions","Fragments":["and"]},{"Key":"questions and","Fragments":["things"]},{"Key":"and things","Fragments":["that","worked"]},{"Key":"things that","Fragments":["were","I'm","made","weren't"]},{"Key":"that were","Fragments":["pointed"]},{"Key":"were pointed","Fragments":["to"]},{"Key":"pointed to","Fragments":["me"]},{"Key":"me (mostly","Fragments":["by"]},{"Key":"(mostly by","Fragments":["@nicklaus):"]},{"Key":" a)","Fragments":["you","Why"]},{"Key":"are assigning","Fragments":["mutable"]},{"Key":"assigning mutable","Fragments":["buffer"]},{"Key":"mutable buffer","Fragments":["to"]},{"Key":"buffer to","Fragments":["the"]},{"Key":"the var,","Fragments":["why"]},{"Key":"var, why","Fragments":["is"]},{"Key":"why is","Fragments":["that?","the","`names`","it"]},{"Key":"is that?","Fragments":["In"]},{"Key":"that? In","Fragments":["general"]},{"Key":"In general","Fragments":["you"]},{"Key":"general you","Fragments":["can","are"]},{"Key":"can interchange","Fragments":["mutable/statefull"]},{"Key":"interchange mutable/statefull","Fragments":["and"]},{"Key":"mutable/statefull and","Fragments":["var,"]},{"Key":"and var,","Fragments":["but"]},{"Key":"var, but","Fragments":["there's"]},{"Key":"there's seldom","Fragments":["need"]},{"Key":"seldom need","Fragments":["for"]},{"Key":"for both","Fragments":["(if","that"]},{"Key":"both (if","Fragments":["your"]},{"Key":"(if your","Fragments":["ListBuffer"]},{"Key":"your ListBuffer","Fragments":["already"]},{"Key":"ListBuffer already","Fragments":["has"]},{"Key":"already has","Fragments":["state,","a"]},{"Key":"has state,","Fragments":["why"]},{"Key":"state, why","Fragments":["\"force\""]},{"Key":"why \"force\"","Fragments":["explicit"]},{"Key":"\"force\" explicit","Fragments":["statefulness"]},{"Key":"explicit statefulness","Fragments":["to"]},{"Key":"statefulness to","Fragments":["the"]},{"Key":" b)","Fragments":["Why","I"]},{"Key":"b) Why","Fragments":["did"]},{"Key":"Why did","Fragments":["you","you","you"]},{"Key":"you chose","Fragments":["to","creating","to","to","to"]},{"Key":"chose to","Fragments":["use","leave","use","write","make","make","use"]},{"Key":"use ListBuffer","Fragments":["and"]},{"Key":"ListBuffer and","Fragments":["not"]},{"Key":"not Buffer?","Fragments":["Also,"]},{"Key":"Buffer? Also,","Fragments":["I"]},{"Key":"Also, I","Fragments":["do","kept","might","kept","like","used","wonder"]},{"Key":"do believe","Fragments":["it's"]},{"Key":"it's good","Fragments":["practice","to"]},{"Key":"to explicitly","Fragments":["state","reference","call"]},{"Key":"explicitly state","Fragments":["that"]},{"Key":"state that","Fragments":["collection"]},{"Key":"that collection","Fragments":["is"]},{"Key":"collection is","Fragments":["mutable"]},{"Key":"is mutable","Fragments":["via"]},{"Key":"mutable via","Fragments":["import"]},{"Key":"via import","Fragments":["aliases"]},{"Key":"import aliases","Fragments":["=\u003e"]},{"Key":"aliases =\u003e","Fragments":["http://blog.bruchez.name/2012/06/scala-tip-import-renames.html"]},{"Key":" c)","Fragments":["Why"]},{"Key":"c) Why","Fragments":["did"]},{"Key":"chose creating","Fragments":["new"]},{"Key":"creating new","Fragments":["ListBuffer"]},{"Key":"new ListBuffer","Fragments":["when"]},{"Key":"ListBuffer when","Fragments":["closing"]},{"Key":"when closing","Fragments":["account"]},{"Key":"closing account","Fragments":["and"]},{"Key":"account and","Fragments":["not"]},{"Key":"using own","Fragments":["clear?"]},{"Key":"own clear?","Fragments":["Is"]},{"Key":"clear? Is","Fragments":["it"]},{"Key":"Is it","Fragments":["more","because","possible","possible","just","possible","necessary","preferred"]},{"Key":" d)","Fragments":["in"]},{"Key":"d) in","Fragments":["```getBalance```"]},{"Key":"in ```getBalance```","Fragments":["you"]},{"Key":"```getBalance``` you","Fragments":["are"]},{"Key":"are returning","Fragments":["either","value","booleans."]},{"Key":"returning either","Fragments":["None"]},{"Key":"either None","Fragments":["or"]},{"Key":"None or","Fragments":["Option..."]},{"Key":"or Option...","Fragments":["maybe"]},{"Key":"Option... maybe","Fragments":["you"]},{"Key":"try -","Fragments":["for","catch"]},{"Key":"- for","Fragments":["a","better"]},{"Key":"a challange","Fragments":["-","you","in"]},{"Key":"challange -","Fragments":["to"]},{"Key":"- to","Fragments":["use"]},{"Key":"use Option","Fragments":["as","map."]},{"Key":"Option as","Fragments":["```var"]},{"Key":"as ```var","Fragments":["account```"]},{"Key":"```var account```","Fragments":["instead"]},{"Key":"account``` instead","Fragments":["Buffer,"]},{"Key":"instead Buffer,","Fragments":["b/c"]},{"Key":"Buffer, b/c","Fragments":["now"]},{"Key":"now you","Fragments":["have","can","have","need"]},{"Key":"keep whole","Fragments":["transaction"]},{"Key":"whole transaction","Fragments":["history"]},{"Key":"transaction history","Fragments":["(and"]},{"Key":"history (and","Fragments":["calculate"]},{"Key":"(and calculate","Fragments":["it,)"]},{"Key":"calculate it,)","Fragments":["instead"]},{"Key":"it,) instead","Fragments":["of"]},{"Key":"of only","Fragments":["current","using","one"]},{"Key":"only current","Fragments":["balance"]},{"Key":" perhaps","Fragments":["find","assign","you","better","define","just"]},{"Key":"perhaps find","Fragments":["some"]},{"Key":"for ```isValidNumber```","Fragments":["as"]},{"Key":"```isValidNumber``` as","Fragments":["it"]},{"Key":"really a","Fragments":["check","concern","statement","good"]},{"Key":"a check","Fragments":["returning","for","for","on","to"]},{"Key":"check returning","Fragments":["a"]},{"Key":"returning a","Fragments":["Boolean?","String.","Boolean","pair","copy"]},{"Key":"split the","Fragments":["number","creation","arg","phrase","List"]},{"Key":"number into","Fragments":["parts?"]},{"Key":"that squares","Fragments":["a"]},{"Key":"squares a","Fragments":["number"]},{"Key":"could add","Fragments":["to","the","a"]},{"Key":"add to","Fragments":["simplicity","the","readability.","readability","readabilty"]},{"Key":"to simplicity","Fragments":["here."]},{"Key":"is nice","Fragments":["and","because",":)","to","and"]},{"Key":"and succinct,","Fragments":["so"]},{"Key":"succinct, so","Fragments":["I"]},{"Key":"like it.","Fragments":[":)"]},{"Key":"That said,","Fragments":["from"]},{"Key":"said, from","Fragments":["my"]},{"Key":"from my","Fragments":["perspective","solution):","1st"]},{"Key":"my perspective","Fragments":["it"]},{"Key":"perspective it","Fragments":["has"]},{"Key":"it has","Fragments":["one","to","an","a","a","to","to","been"]},{"Key":"has one","Fragments":["minor","less"]},{"Key":"one minor","Fragments":["flaw","nitpick:"]},{"Key":"minor flaw","Fragments":["--"]},{"Key":"flaw --","Fragments":["if"]},{"Key":"-- if","Fragments":["I"]},{"Key":"I reorder","Fragments":["the"]},{"Key":"reorder the","Fragments":["case"]},{"Key":"case statements","Fragments":["it","i"]},{"Key":"statements it","Fragments":["breaks"]},{"Key":"it breaks","Fragments":["because"]},{"Key":"breaks because","Fragments":["a"]},{"Key":"a \"forceful","Fragments":["question\""]},{"Key":"\"forceful question\"","Fragments":["gets"]},{"Key":"question\" gets","Fragments":["interpreted"]},{"Key":"gets interpreted","Fragments":["as"]},{"Key":"question instead","Fragments":["of"]},{"Key":"of shouting.","Fragments":["This"]},{"Key":"shouting. This","Fragments":["is"]},{"Key":"is because","Fragments":["some","I","the","of","it's","c"]},{"Key":"because some","Fragments":["questions","standard","standard"]},{"Key":"some questions","Fragments":["should"]},{"Key":"questions should","Fragments":["be"]},{"Key":"as shouting,","Fragments":["per"]},{"Key":"shouting, per","Fragments":["the"]},{"Key":"per the","Fragments":["tests."]},{"Key":"tests. If","Fragments":["you"]},{"Key":"you had","Fragments":["the","probably","an","zero"]},{"Key":"had the","Fragments":["question","same","same","expandSequence","`Option`,"]},{"Key":"the question","Fragments":["case","inside","and","is","mark","has"]},{"Key":"question case","Fragments":["check"]},{"Key":"case check","Fragments":["that","for"]},{"Key":"that it's","Fragments":["not","changing?...","a","a","the","not","clear"]},{"Key":"not shouting,","Fragments":["you'd"]},{"Key":"shouting, you'd","Fragments":["get"]},{"Key":"you'd get","Fragments":["this"]},{"Key":" Even","Fragments":["cleaner.","for","though","more"]},{"Key":"regex of","Fragments":["the"]},{"Key":"the characters","Fragments":["I","are","are","that","of","of","I"]},{"Key":"characters I","Fragments":["want","need"]},{"Key":"to keep,","Fragments":["then"]},{"Key":"keep, then","Fragments":["inverted"]},{"Key":"then inverted","Fragments":["that."]},{"Key":"The main","Fragments":["thing"]},{"Key":"main thing","Fragments":["I'd"]},{"Key":"thing I'd","Fragments":["like","add","change"]},{"Key":"to fix","Fragments":["here","it,","that.","http://exercism.io/submissions/325ca2c346414a5b9475613754b9b316.","one","what","all","that"]},{"Key":"fix here","Fragments":["is"]},{"Key":"more graceful","Fragments":["filter."]},{"Key":"graceful filter.","Fragments":["What"]},{"Key":"filter. What","Fragments":["suggestions"]},{"Key":"What suggestions","Fragments":["do"]},{"Key":"suggestions do","Fragments":["others"]},{"Key":"do others","Fragments":["have?"]},{"Key":"others have?","Fragments":["I"]},{"Key":"have? I","Fragments":["feel"]},{"Key":"feel like","Fragments":["the","I","I'm","this","these","a"]},{"Key":"filter statement","Fragments":["could"]},{"Key":"statement could","Fragments":["be"]},{"Key":"read. Also","Fragments":["open"]},{"Key":"Also open","Fragments":["to"]},{"Key":"to other","Fragments":["suggestions,","collections."]},{"Key":"other suggestions,","Fragments":["as"]},{"Key":"suggestions, as","Fragments":["well."]},{"Key":"Pretty clear","Fragments":["and"]},{"Key":"clear and","Fragments":["easy","readable.","succinct.","much","not"]},{"Key":"and easy","Fragments":["to","to","way","to","to"]},{"Key":"read. Seems","Fragments":["nice.","nice"]},{"Key":"The `toString`","Fragments":["is"]},{"Key":"`toString` is","Fragments":["missingn"]},{"Key":"is missingn","Fragments":["though."]},{"Key":" your","Fragments":["one-liner","solution","function","check"]},{"Key":"your one-liner","Fragments":["in","in"]},{"Key":"one-liner in","Fragments":["```calculate```","`encode`."]},{"Key":"in ```calculate```","Fragments":["does"]},{"Key":"```calculate``` does","Fragments":["too"]},{"Key":"does too","Fragments":["much!","much?!"]},{"Key":"too much!","Fragments":[":-)"]},{"Key":"you split","Fragments":["it","out"]},{"Key":"split it","Fragments":["up","over","up","up!"]},{"Key":"up into","Fragments":["helper","vals","several","triplets.","helper"]},{"Key":"into helper","Fragments":["functions","functions","functions"]},{"Key":"functions and","Fragments":["val's?","the","only","pattern","`val`s!","a"]},{"Key":"version using","Fragments":["PartialFunctions","a","pattern","```foldLeft```","a","the","a","`synchronized`.","a","`count`."]},{"Key":"using PartialFunctions","Fragments":["chained","and"]},{"Key":"PartialFunctions chained","Fragments":["by","by","w/"]},{"Key":"chained by","Fragments":["orElse.","```orElse```."]},{"Key":" //","Fragments":["capital","And","not","I","=\u003e","classic"]},{"Key":"// capital","Fragments":["letter"]},{"Key":"capital letter","Fragments":["names","names"]},{"Key":"for constants.","Fragments":["//"]},{"Key":"Yes, though","Fragments":["the"]},{"Key":"though the","Fragments":["definition","only"]},{"Key":"constant is","Fragments":["often"]},{"Key":"is often","Fragments":["misunderstood.","to","preferable","an"]},{"Key":"often misunderstood.","Fragments":["In"]},{"Key":"misunderstood. In","Fragments":["Scala"]},{"Key":"Scala it's","Fragments":["a"]},{"Key":"a `final","Fragments":["val`"]},{"Key":"`final val`","Fragments":["or"]},{"Key":"val` or","Fragments":["a"]},{"Key":"a field","Fragments":["in","in","where"]},{"Key":"field in","Fragments":["an","a"]},{"Key":"an `object`,","Fragments":["since"]},{"Key":"`object`, since","Fragments":["`Question`"]},{"Key":"since `Question`","Fragments":["is"]},{"Key":"`Question` is","Fragments":["a"]},{"Key":"a temporary","Fragments":["scope","variable.","list"]},{"Key":"temporary scope","Fragments":["most"]},{"Key":"scope most","Fragments":["would"]},{"Key":"most would","Fragments":["use"]},{"Key":"would use","Fragments":["lower","a","Seq","some","a"]},{"Key":"use lower","Fragments":["camel."]},{"Key":"lower camel.","Fragments":["Constant"]},{"Key":"camel. Constant","Fragments":["means"]},{"Key":"Constant means","Fragments":["it's"]},{"Key":"means it's","Fragments":["constant"]},{"Key":"it's constant","Fragments":["across"]},{"Key":"constant across","Fragments":["an"]},{"Key":"across an","Fragments":["entire"]},{"Key":"an entire","Fragments":["application"]},{"Key":"entire application","Fragments":["given"]},{"Key":"application given","Fragments":["the"]},{"Key":"// And","Fragments":["looks"]},{"Key":"And looks","Fragments":["are","are","like"]},{"Key":"looks are","Fragments":["deceiving:","deceiving:"]},{"Key":"are deceiving:","Fragments":["!_.isLower","```!_.isLower```"]},{"Key":"deceiving: !_.isLower","Fragments":["is"]},{"Key":"!_.isLower is","Fragments":["not"]},{"Key":"not equivalent","Fragments":["to","to"]},{"Key":"equivalent to","Fragments":["_.isUpper.","```_.isUpper```.","an"]},{"Key":"to _.isUpper.","Fragments":["Tests"]},{"Key":"_.isUpper. Tests","Fragments":["are"]},{"Key":"Tests are","Fragments":["failing","failing"]},{"Key":"are failing","Fragments":["if","if"]},{"Key":"failing if","Fragments":["I","I"]},{"Key":"this replacement!","Fragments":["//"]},{"Key":" Ah,","Fragments":["in","that's","the"]},{"Key":"Ah, in","Fragments":["that"]},{"Key":"in that","Fragments":["case","expression.","particular","method","version","case).","case"]},{"Key":"that case","Fragments":["communicate","you","Bob"]},{"Key":"case communicate","Fragments":["that"]},{"Key":"communicate that","Fragments":["explicitly"]},{"Key":"that explicitly","Fragments":["in"]},{"Key":"explicitly in","Fragments":["the"]},{"Key":"the code,","Fragments":["`str.forall(c","namely","e.g."]},{"Key":"code, `str.forall(c","Fragments":["=\u003e"]},{"Key":"`str.forall(c =\u003e","Fragments":["c.isUpper"]},{"Key":"=\u003e c.isUpper","Fragments":["||"]},{"Key":"c.isUpper ||","Fragments":["!c.isLetter)`"]},{"Key":"// not","Fragments":["just"]},{"Key":"just because","Fragments":["some","some","you"]},{"Key":"some standard","Fragments":["wants","wants"]},{"Key":"standard wants","Fragments":["me","me"]},{"Key":"wants me","Fragments":["to","to"]},{"Key":"me to","Fragments":["(at","(at","read","list","make","review.","get","confirm","play","understand","be","use","shorten"]},{"Key":"to (at","Fragments":["least","least"]},{"Key":"least within","Fragments":["certain","certain"]},{"Key":"within certain","Fragments":["limits).","limits)."]},{"Key":"certain limits).","Fragments":["//"]},{"Key":" These","Fragments":["standards","methods","Option"]},{"Key":"These standards","Fragments":["are"]},{"Key":"standards are","Fragments":["helpful"]},{"Key":"are helpful","Fragments":["for"]},{"Key":"helpful for","Fragments":["preventing"]},{"Key":"for preventing","Fragments":["whitespace"]},{"Key":"preventing whitespace","Fragments":["commits"]},{"Key":"whitespace commits","Fragments":["that"]},{"Key":"commits that","Fragments":["corrupt"]},{"Key":"that corrupt","Fragments":["VCS"]},{"Key":"corrupt VCS","Fragments":["audit"]},{"Key":"VCS audit","Fragments":["trails."]},{"Key":"audit trails.","Fragments":["If"]},{"Key":"trails. If","Fragments":["your"]},{"Key":"If your","Fragments":["whitespace","implementation","tests"]},{"Key":"your whitespace","Fragments":["is"]},{"Key":"whitespace is","Fragments":["not"]},{"Key":"not standard,","Fragments":["and"]},{"Key":"standard, and","Fragments":["someone"]},{"Key":"and someone","Fragments":["else"]},{"Key":"someone else","Fragments":["runs","who"]},{"Key":"else runs","Fragments":["an"]},{"Key":"runs an","Fragments":["automatic"]},{"Key":"an automatic","Fragments":["tool"]},{"Key":"automatic tool","Fragments":["for"]},{"Key":"tool for","Fragments":["formatting,","lazy"]},{"Key":"for formatting,","Fragments":["then"]},{"Key":"formatting, then","Fragments":["this"]},{"Key":"then this","Fragments":["will","never"]},{"Key":"this will","Fragments":["pollute","fail","improve","pass","work"]},{"Key":"will pollute","Fragments":["their"]},{"Key":"pollute their","Fragments":["commit"]},{"Key":"their commit","Fragments":["with"]},{"Key":"commit with","Fragments":["changes"]},{"Key":"with changes","Fragments":["unrelated"]},{"Key":"changes unrelated","Fragments":["to"]},{"Key":"unrelated to","Fragments":["the"]},{"Key":"the task","Fragments":["at"]},{"Key":"task at","Fragments":["hand."]},{"Key":"// I","Fragments":["deliberately"]},{"Key":"I deliberately","Fragments":["have","have","chose"]},{"Key":"deliberately have","Fragments":["those","those"]},{"Key":"have those","Fragments":["val's","val's","many"]},{"Key":"those val's","Fragments":["in","in"]},{"Key":"val's in","Fragments":["narrow","narrow"]},{"Key":"in narrow","Fragments":["scope","scope"]},{"Key":"narrow scope","Fragments":["as","as"]},{"Key":"scope as","Fragments":["they","they","narrow"]},{"Key":"not used","Fragments":["outside.","outside."]},{"Key":"used outside.","Fragments":["//"]},{"Key":"Why narrow","Fragments":["the"]},{"Key":"narrow the","Fragments":["scope?"]},{"Key":"the scope?","Fragments":["What"]},{"Key":"scope? What","Fragments":["are"]},{"Key":"What are","Fragments":["you","the"]},{"Key":"you gaining","Fragments":["by"]},{"Key":"gaining by","Fragments":["narrowing"]},{"Key":"by narrowing","Fragments":["the"]},{"Key":"narrowing the","Fragments":["scope?"]},{"Key":"Oh, and","Fragments":[":)","`triangleType`"]},{"Key":"using regexes","Fragments":["for"]},{"Key":"regexes for","Fragments":["the"]},{"Key":"the whitespace,","Fragments":["you"]},{"Key":"whitespace, you","Fragments":["could"]},{"Key":"use `str.forall(_.isWhitespace)`","Fragments":["and"]},{"Key":"`str.forall(_.isWhitespace)` and","Fragments":["for"]},{"Key":"the final","Fragments":["letter","one.","set..","statement","statement","list","test","result"]},{"Key":"final letter","Fragments":["being"]},{"Key":"letter being","Fragments":["question"]},{"Key":"being question","Fragments":["mark"]},{"Key":"question mark","Fragments":["use","first.","should"]},{"Key":"mark use","Fragments":["`str.last"]},{"Key":"use `str.last","Fragments":["=="]},{"Key":"`str.last ==","Fragments":["'?'`."]},{"Key":"You have","Fragments":["a","already","two","any"]},{"Key":"very strict","Fragments":["coding"]},{"Key":"strict coding","Fragments":["standard."]},{"Key":"coding standard.","Fragments":["Perhaps"]},{"Key":"standard. Perhaps","Fragments":["relax"]},{"Key":"Perhaps relax","Fragments":["a"]},{"Key":"relax a","Fragments":["bit?"]},{"Key":"a bit?","Fragments":[";-)"]},{"Key":"I won't","Fragments":["discuss"]},{"Key":"won't discuss","Fragments":["newlines"]},{"Key":"discuss newlines","Fragments":["-"]},{"Key":"newlines -","Fragments":["I"]},{"Key":"use them","Fragments":["or","instead.","is"]},{"Key":"them or","Fragments":["not"]},{"Key":"or not","Fragments":["when","they"]},{"Key":"not when","Fragments":["I"]},{"Key":"consider the","Fragments":["code","style"]},{"Key":"readable, not","Fragments":["just"]},{"Key":"Scala convention","Fragments":["(ok,","is","for","for","that","is","is","is"]},{"Key":"convention (ok,","Fragments":["one"]},{"Key":"(ok, one","Fragments":["of"]},{"Key":"the many","Fragments":["that"]},{"Key":"many that","Fragments":["exist"]},{"Key":"that exist","Fragments":["out"]},{"Key":"exist out","Fragments":["there)"]},{"Key":"out there)","Fragments":["is"]},{"Key":"there) is","Fragments":["to"]},{"Key":"use capital","Fragments":["letter"]},{"Key":"deceiving: ```!_.isLower```","Fragments":["is"]},{"Key":"```!_.isLower``` is","Fragments":["not"]},{"Key":"to ```_.isUpper```.","Fragments":["Tests"]},{"Key":"```_.isUpper```. Tests","Fragments":["are"]},{"Key":"Nice, only","Fragments":["comments"]},{"Key":"only comments","Fragments":["I"]},{"Key":"comments I","Fragments":["have"]},{"Key":"have are","Fragments":["nitpicks"]},{"Key":"are nitpicks","Fragments":["on"]},{"Key":"nitpicks on","Fragments":["your"]},{"Key":"your style","Fragments":["...","of"]},{"Key":"Line 12,","Fragments":["missing"]},{"Key":"12, missing","Fragments":["space"]},{"Key":"missing space","Fragments":["after"]},{"Key":"space after","Fragments":["comma.","`!`","a"]},{"Key":"Line 17,","Fragments":["23,"]},{"Key":"17, 23,","Fragments":["\u0026"]},{"Key":"23, \u0026","Fragments":["30,"]},{"Key":"\u0026 30,","Fragments":["use"]},{"Key":"30, use","Fragments":["of"]},{"Key":"of curly","Fragments":["braces","braces","braces"]},{"Key":"braces where","Fragments":["closing"]},{"Key":"where closing","Fragments":["curly"]},{"Key":"closing curly","Fragments":["brace"]},{"Key":"curly brace","Fragments":["is"]},{"Key":"brace is","Fragments":["not"]},{"Key":"not on","Fragments":["it's","the"]},{"Key":"on it's","Fragments":["own","current"]},{"Key":"own line,","Fragments":["format"]},{"Key":"line, format","Fragments":["should"]},{"Key":"format should","Fragments":["be:"]},{"Key":"case pattern","Fragments":["=\u003e"]},{"Key":"pattern =\u003e","Fragments":["expression"]},{"Key":"Line 15","Fragments":["\u0026"]},{"Key":"15 \u0026","Fragments":["21,"]},{"Key":"\u0026 21,","Fragments":["mixing"]},{"Key":"21, mixing","Fragments":["naming"]},{"Key":"mixing naming","Fragments":["conventions"]},{"Key":"naming conventions","Fragments":["for","I"]},{"Key":"conventions for","Fragments":["val,"]},{"Key":"for val,","Fragments":["your"]},{"Key":"val, your","Fragments":["using"]},{"Key":"your using","Fragments":["both"]},{"Key":"using both","Fragments":["Upper"]},{"Key":"both Upper","Fragments":["and"]},{"Key":"Upper and","Fragments":["lower"]},{"Key":"and lower","Fragments":["camel."]},{"Key":"Line 14","Fragments":[","]},{"Key":"14 ,","Fragments":["20"]},{"Key":", 20","Fragments":["\u0026"]},{"Key":"20 \u0026","Fragments":["26,"]},{"Key":"\u0026 26,","Fragments":["unsure"]},{"Key":"26, unsure","Fragments":["of"]},{"Key":"unsure of","Fragments":["the"]},{"Key":"the motivation","Fragments":["for"]},{"Key":"motivation for","Fragments":["this"]},{"Key":"this nesting,","Fragments":["why"]},{"Key":"nesting, why","Fragments":["not"]},{"Key":"not put","Fragments":["the"]},{"Key":"put the","Fragments":["`val","RHS","```complements```","helper","curly","code","return","getLetters","curly","work"]},{"Key":"the `val","Fragments":["Question`","cleaned"]},{"Key":"`val Question`","Fragments":["outside"]},{"Key":"Question` outside","Fragments":["the"]},{"Key":"outside the","Fragments":["block,","match?).","match","recursion."]},{"Key":"the block,","Fragments":["then"]},{"Key":"block, then","Fragments":["the"]},{"Key":"then the","Fragments":["block","minimum","length.","mental","first","list","scoreLetter"]},{"Key":"the block","Fragments":["is","to"]},{"Key":"not longer","Fragments":["necessary."]},{"Key":"longer necessary.","Fragments":["Not"]},{"Key":"necessary. Not","Fragments":["sure"]},{"Key":"sure why","Fragments":["one"]},{"Key":"why one","Fragments":["would"]},{"Key":"one would","Fragments":["want","want","have"]},{"Key":"would want","Fragments":["to","to"]},{"Key":"to restrict","Fragments":["the"]},{"Key":"restrict the","Fragments":["scope"]},{"Key":"the scope","Fragments":["this","is","of","as","(instead","of"]},{"Key":"scope this","Fragments":["way."]},{"Key":"Line 28,","Fragments":["use"]},{"Key":"28, use","Fragments":["of"]},{"Key":"of infix","Fragments":["notation"]},{"Key":"infix notation","Fragments":["for","becomes","in","definitely","this","for"]},{"Key":"notation for","Fragments":["non-operator","non-operator"]},{"Key":"for non-operator","Fragments":["like","functions."]},{"Key":"non-operator like","Fragments":["method,"]},{"Key":"like method,","Fragments":["convention"]},{"Key":"method, convention","Fragments":["is"]},{"Key":"convention is","Fragments":["to","indeed","not","to","only","for","to"]},{"Key":"use postfix","Fragments":["unless"]},{"Key":"postfix unless","Fragments":["the"]},{"Key":"unless the","Fragments":["method"]},{"Key":"is operator-like.","Fragments":["This"]},{"Key":"operator-like. This","Fragments":["then"]},{"Key":"This then","Fragments":["reduces"]},{"Key":"then reduces","Fragments":["the"]},{"Key":"reduces the","Fragments":["number"]},{"Key":"number of","Fragments":["parens","tuples","non-matches.","elements","responses,","elements","test","tuples","digits,","characters","passes","different","possible","possible","possible","possible","elements","elements","days","seconds"]},{"Key":"of parens","Fragments":["you"]},{"Key":"parens you","Fragments":["need"]},{"Key":"need in","Fragments":["that"]},{"Key":"Line 28","Fragments":["use"]},{"Key":"28 use","Fragments":["of"]},{"Key":"of `!_.isLower`","Fragments":["could"]},{"Key":"`!_.isLower` could","Fragments":["be"]},{"Key":"Line 33,","Fragments":["no"]},{"Key":"33, no","Fragments":["need"]},{"Key":"the RHS","Fragments":["of"]},{"Key":"RHS of","Fragments":["the"]},{"Key":"value declaration","Fragments":["on"]},{"Key":"declaration on","Fragments":["a"]},{"Key":"a new","Fragments":["line.","map.","robot","name","GregorianCalendar","calendar","unused","value","`Map[Char,","`Map`,","object","object","value?!","Robot","data","data","one","line","Map","instance","(not","list","List()","class","solution.","Response","```GregorianCalendar```","`Map[Char,","instance"]},{"Key":"your idea","Fragments":["of"]},{"Key":"of \"externalizing\"","Fragments":["these"]},{"Key":"\"externalizing\" these","Fragments":["predicates."]},{"Key":"these predicates.","Fragments":["Of"]},{"Key":"predicates. Of","Fragments":["course,"]},{"Key":"course, one","Fragments":["could"]},{"Key":"other place","Fragments":["(like"]},{"Key":"place (like","Fragments":["some"]},{"Key":"(like some","Fragments":["different"]},{"Key":"some different","Fragments":["object)."]},{"Key":"different object).","Fragments":["But"]},{"Key":"object). But","Fragments":["you"]},{"Key":"But you","Fragments":["had","could","could","haven't","can","still","should","could","can","are","might"]},{"Key":"had probably","Fragments":["something"]},{"Key":"probably something","Fragments":["deeper"]},{"Key":"something deeper","Fragments":["in"]},{"Key":"deeper in","Fragments":["mind?"]},{"Key":" Or","Fragments":["is","even","you","even"]},{"Key":"Or is","Fragments":["it"]},{"Key":"it using","Fragments":["objects","a","pattern","a"]},{"Key":"using objects","Fragments":["w/"]},{"Key":"objects w/","Fragments":["unapply"]},{"Key":"w/ unapply","Fragments":["as"]},{"Key":"unapply as","Fragments":["in"]},{"Key":"as in","Fragments":["your","Scala","Java.","the","\"AA111\".","your","```(_.isLetter)```.","\"NucleotideTypes\"","the"]},{"Key":"your solution?","Fragments":["(I"]},{"Key":"solution? (I","Fragments":["like"]},{"Key":"(I like","Fragments":["it)."]},{"Key":"way Reply","Fragments":["was"]},{"Key":"Reply was","Fragments":["introduced"]},{"Key":"was introduced","Fragments":["as"]},{"Key":"introduced as","Fragments":["a"]},{"Key":"more concrete","Fragments":["type"]},{"Key":"concrete type","Fragments":["than"]},{"Key":"type than","Fragments":["PartialFunction."]},{"Key":"than PartialFunction.","Fragments":["Would"]},{"Key":"PartialFunction. Would","Fragments":["it"]},{"Key":"Would it","Fragments":["be"]},{"Key":"be possible","Fragments":["to"]},{"Key":"code layout","Fragments":["inside"]},{"Key":"layout inside","Fragments":["`Bob`"]},{"Key":"inside `Bob`","Fragments":["\"look"]},{"Key":"`Bob` \"look","Fragments":["cleaner\""]},{"Key":"\"look cleaner\"","Fragments":["by"]},{"Key":"cleaner\" by","Fragments":["externalizing"]},{"Key":"by externalizing","Fragments":["`Question`"]},{"Key":"externalizing `Question`","Fragments":["and"]},{"Key":"`Question` and","Fragments":["the","`Silence`."]},{"Key":"other predicates?","Fragments":["Maybe"]},{"Key":"predicates? Maybe","Fragments":["as"]},{"Key":"Maybe as","Fragments":["values"]},{"Key":"as values","Fragments":["on"]},{"Key":"values on","Fragments":["`Bob`,"]},{"Key":"on `Bob`,","Fragments":["or"]},{"Key":"`Bob`, or","Fragments":["even"]},{"Key":"or even","Fragments":["something","instead","an","just","\"nucleotidePairs"]},{"Key":"even something","Fragments":["like"]},{"Key":"a `StyleOfAddress`","Fragments":["kind"]},{"Key":"`StyleOfAddress` kind","Fragments":["of"]},{"Key":" Finally","Fragments":["you"]},{"Key":"Finally you","Fragments":["stollen"]},{"Key":"you stollen","Fragments":["my"]},{"Key":"stollen my","Fragments":["solution"]},{"Key":"also multiply","Fragments":["strings!"]},{"Key":" Checkout","Fragments":["my","the"]},{"Key":"Checkout my","Fragments":["last"]},{"Key":"my last","Fragments":["one,"]},{"Key":"last one,","Fragments":["it's"]},{"Key":"one, it's","Fragments":["using"]},{"Key":"it's using","Fragments":["a"]},{"Key":"a powerful","Fragments":["regexp"]},{"Key":"powerful regexp","Fragments":["decomposition!"]},{"Key":"regexp decomposition!","Fragments":["You"]},{"Key":"decomposition! You","Fragments":["started"]},{"Key":"You started","Fragments":["it!"]},{"Key":"Not exactly,","Fragments":["my"]},{"Key":"exactly, my","Fragments":["regexp"]},{"Key":"my regexp","Fragments":["is"]},{"Key":"regexp is","Fragments":["simpler"]},{"Key":"is simpler","Fragments":[":)","to","than","though;"]},{"Key":"use type","Fragments":["aliases","aliases","aliases","```List[T]```."]},{"Key":"Why ```sortBy```","Fragments":["instead"]},{"Key":"```sortBy``` instead","Fragments":["of"]},{"Key":"of ```sorted```?","Fragments":["And"]},{"Key":"```sorted```? And","Fragments":["why"]},{"Key":"And why","Fragments":["sorting","once","lazy","```Any```","so","do"]},{"Key":"why sorting","Fragments":["the"]},{"Key":"sorting the","Fragments":["keys","values,","map","strings","original"]},{"Key":"the keys","Fragments":["at","is"]},{"Key":"keys at","Fragments":["all?"]},{"Key":"at all?","Fragments":["You"]},{"Key":"all? You","Fragments":["already"]},{"Key":"You already","Fragments":["use"]},{"Key":"already use","Fragments":["a","a"]},{"Key":" ```mapValues```","Fragments":["can"]},{"Key":"```mapValues``` can","Fragments":["simplify","simplify","help"]},{"Key":"code even","Fragments":["more."]},{"Key":"Map into","Fragments":["a","those"]},{"Key":"Seq and","Fragments":["then"]},{"Key":"then back","Fragments":["to"]},{"Key":"a Map","Fragments":["again?","with","into","then","in","for","with","is","`withDefaultValue`"]},{"Key":"simplify \"sorted\"","Fragments":["w/"]},{"Key":"\"sorted\" w/","Fragments":["Map"]},{"Key":"w/ Map","Fragments":["function"]},{"Key":"Map function","Fragments":["\"mapValues\".","\"mapValues\"."]},{"Key":" (and","Fragments":["you","```SortedMap```","you","about"]},{"Key":"function \"grade\"","Fragments":["inside"]},{"Key":"\"grade\" inside","Fragments":["\"add\")."]},{"Key":" Boooh,","Fragments":["mutable..."]},{"Key":"Boooh, mutable...","Fragments":[":)"]},{"Key":" well,","Fragments":["'add'","in","you","this"]},{"Key":"well, 'add'","Fragments":["returns"]},{"Key":"'add' returns","Fragments":["Unit..."]},{"Key":"returns Unit...","Fragments":["what"]},{"Key":"Unit... what","Fragments":["can"]},{"Key":"what can","Fragments":["I"]},{"Key":"can I","Fragments":["do?","supply"]},{"Key":"I do?","Fragments":[":)"]},{"Key":" For","Fragments":["checking","example,","powers","completeness","your","instance,","clarity","example,","better","those","the","an","non-space","a","readability,","comparison","better","a","now","the","me","readability"]},{"Key":"For checking","Fragments":["arguments"]},{"Key":"checking arguments","Fragments":["scala"]},{"Key":"arguments scala","Fragments":["has"]},{"Key":"has its","Fragments":["own","own","own","own"]},{"Key":"its own","Fragments":["method","line","function","```pow```","with","class.","method.","```math```.","```math```"]},{"Key":"own method","Fragments":["-"]},{"Key":"method -","Fragments":["require,"]},{"Key":"- require,","Fragments":["I"]},{"Key":"require, I","Fragments":["think"]},{"Key":"is good","Fragments":["thing","though.","that","to"]},{"Key":"good thing","Fragments":["to","is"]},{"Key":"thing to","Fragments":["use","note"]},{"Key":" With","Fragments":["names","generalisation","some","\"limited","this","real-life"]},{"Key":"With names","Fragments":["of"]},{"Key":"of input","Fragments":["variables","as","for"]},{"Key":"input variables","Fragments":["-"]},{"Key":"variables -","Fragments":["why"]},{"Key":"- why","Fragments":["you've","not","HashMap"]},{"Key":"why you've","Fragments":["used","chosen"]},{"Key":"you've used","Fragments":["s"]},{"Key":"used s","Fragments":["and"]},{"Key":"s and","Fragments":["s1"]},{"Key":"and s1","Fragments":["and"]},{"Key":"s1 and","Fragments":["not","s2?","s2","s2.","s2"]},{"Key":"not s1","Fragments":["and"]},{"Key":"and s2?","Fragments":["I"]},{"Key":"s2? I","Fragments":["think"]},{"Key":"the latter","Fragments":["is","holds.","is"]},{"Key":"latter is","Fragments":["better","that"]},{"Key":"Why parenthesis","Fragments":["around"]},{"Key":"parenthesis around","Fragments":["(s"]},{"Key":"around (s","Fragments":["zip"]},{"Key":"(s zip","Fragments":["s1)?"]},{"Key":"zip s1)?","Fragments":["And"]},{"Key":"s1)? And","Fragments":["why"]},{"Key":"why once","Fragments":["using"]},{"Key":"once using","Fragments":["dot"]},{"Key":"using dot","Fragments":["(with"]},{"Key":"dot (with","Fragments":[".count)"]},{"Key":"(with .count)","Fragments":["and"]},{"Key":".count) and","Fragments":["once"]},{"Key":"and once","Fragments":["not?","on","in"]},{"Key":"few suggestions","Fragments":["for","to","for"]},{"Key":"suggestions for","Fragments":["code","clarity:","improvement:"]},{"Key":"for code","Fragments":["readability/Clean"]},{"Key":"code readability/Clean","Fragments":["Code:"]},{"Key":"using type","Fragments":["aliases","aliases","aliases"]},{"Key":"for String","Fragments":["and"]},{"Key":"and Char","Fragments":["(from","are"]},{"Key":"Char (from","Fragments":["the"]},{"Key":"the business","Fragments":["domain).","domain.","domain,","logic"]},{"Key":"perhaps assign","Fragments":["the"]},{"Key":"assign the","Fragments":["result","value","value","appropriate"]},{"Key":"of zip","Fragments":["to"]},{"Key":"zip to","Fragments":["a"]},{"Key":"a well-named","Fragments":["val?","function","private","function."]},{"Key":" using","Fragments":["a","case"]},{"Key":"well-named function","Fragments":["instead"]},{"Key":"function instead","Fragments":["of","of","of","of","of"]},{"Key":"anonymous one","Fragments":["for"]},{"Key":"one for","Fragments":["the","toLower)"]},{"Key":"count argument","Fragments":["might"]},{"Key":"argument might","Fragments":["also"]},{"Key":"also improve","Fragments":["readability.","readability"]},{"Key":" Changes","Fragments":["to"]},{"Key":"Changes to","Fragments":["the"]},{"Key":"- Use","Fragments":["string","list"]},{"Key":"Use string","Fragments":["interpolation"]},{"Key":"string interpolation","Fragments":["instead","with","needs","functionality","instead"]},{"Key":"of string","Fragments":["concatenation"]},{"Key":"Use list","Fragments":["of"]},{"Key":"of characters","Fragments":["instead","that","between","to"]},{"Key":"of typing","Fragments":["the"]},{"Key":"typing the","Fragments":["alphabet"]},{"Key":"- Format","Fragments":["numbers"]},{"Key":"Format numbers","Fragments":["if"]},{"Key":"numbers if","Fragments":["\u003c"]},{"Key":"if \u003c","Fragments":["100"]},{"Key":"\u003c 100","Fragments":["it"]},{"Key":"100 it","Fragments":["gets"]},{"Key":"it gets","Fragments":["prefix","exhausted"]},{"Key":"gets prefix","Fragments":["zeros"]},{"Key":"prefix zeros","Fragments":["instead"]},{"Key":"zeros instead","Fragments":["of"]},{"Key":"not complying","Fragments":["to"]},{"Key":"complying to","Fragments":["the"]},{"Key":"is done","Fragments":["in","through","only","on"]},{"Key":"done in","Fragments":["an","the","one.","fp","a"]},{"Key":"an imperative","Fragments":["style,"]},{"Key":"imperative style,","Fragments":["can"]},{"Key":"style, can","Fragments":["you"]},{"Key":"can you","Fragments":["think","please","also","please","turn","optimise","implement","also","also","also","also","also","also","use","think","explain","also","make","simplify,","also"]},{"Key":"think of","Fragments":["a","a","that","using","a","using","a","this","using","it,","without","a","a","my"]},{"Key":"functional solution?","Fragments":["Have"]},{"Key":"solution? Have","Fragments":["a"]},{"Key":"functions `count`","Fragments":["and"]},{"Key":"`count` and","Fragments":["`zip`","`foldLeft`","you","`apply`."]},{"Key":"and `zip`","Fragments":["in","to"]},{"Key":"`zip` in","Fragments":["[`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List)."]},{"Key":"in [`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List).","Fragments":["A"]},{"Key":"[`List`](http://www.scala-lang.org/api/current/#scala.collection.immutable.List). A","Fragments":["`String`"]},{"Key":"A `String`","Fragments":["can"]},{"Key":"be converted","Fragments":["to"]},{"Key":"a `List[Char]`","Fragments":["by"]},{"Key":"`List[Char]` by","Fragments":["using"]},{"Key":"the `toList`","Fragments":["method.","is"]},{"Key":"first foray","Fragments":["into"]},{"Key":"foray into","Fragments":["Scala!"]},{"Key":"write a","Fragments":["`hasLetter`","wrapper","single","recursive"]},{"Key":"a `hasLetter`","Fragments":["helper"]},{"Key":"`hasLetter` helper","Fragments":["method;"]},{"Key":"helper method;","Fragments":["but"]},{"Key":"method; but","Fragments":["I"]},{"Key":"couldn't think","Fragments":["of"]},{"Key":"a way","Fragments":["to","to","you","to","to","to","to","using","to","to","to","to","to","to","without","to","to","to","to","to","those","that","to","to","around","to","to","to"]},{"Key":"perform that","Fragments":["check"]},{"Key":"that check","Fragments":["in"]},{"Key":"the `Shouting`","Fragments":["regular"]},{"Key":"`Shouting` regular","Fragments":["expression"]},{"Key":"expression without","Fragments":["making"]},{"Key":"making it","Fragments":["too","a","a","a","a"]},{"Key":"too complicated.","Fragments":["Also,"]},{"Key":"complicated. Also,","Fragments":["while"]},{"Key":"Also, while","Fragments":["Scala"]},{"Key":"while Scala","Fragments":["pattern"]},{"Key":"matching allows","Fragments":["you"]},{"Key":"allows you","Fragments":["to","to","to"]},{"Key":"perform \"OR\"","Fragments":["checks"]},{"Key":"\"OR\" checks","Fragments":["with"]},{"Key":"checks with","Fragments":["`|`,"]},{"Key":"with `|`,","Fragments":["why"]},{"Key":"`|`, why","Fragments":["can't"]},{"Key":"why can't","Fragments":["I"]},{"Key":"can't I","Fragments":["perform"]},{"Key":"I perform","Fragments":["\"AND\""]},{"Key":"perform \"AND\"","Fragments":["checks"]},{"Key":"\"AND\" checks","Fragments":["like"]},{"Key":"checks like","Fragments":["this?"]},{"Key":"like this?","Fragments":[":"]},{"Key":"case Shouting(_*)","Fragments":["\u0026\u0026"]},{"Key":"Shouting(_*) \u0026\u0026","Fragments":["HasLetter(*_)"]},{"Key":"\u0026\u0026 HasLetter(*_)","Fragments":["=\u003e"]},{"Key":"HasLetter(*_) =\u003e","Fragments":["\"Whoa,"]},{"Key":"=\u003e \"Whoa,","Fragments":["chill"]},{"Key":"\"Whoa, chill","Fragments":["out!\"","out!\"","out!\"","out!\""]},{"Key":"well, in","Fragments":["Scala"]},{"Key":"Scala Strings","Fragments":["are","are","are","are"]},{"Key":"Strings are","Fragments":["automagically","automagically","easier","implicitly","also","already","automagically","implictly","automagically","already"]},{"Key":"are automagically","Fragments":["also","also","also","also","also"]},{"Key":"automagically also","Fragments":["of","a","a","a","a"]},{"Key":"also of","Fragments":["type","type","not"]},{"Key":"type ```Seq[Char]```,","Fragments":["so","so"]},{"Key":"```Seq[Char]```, so","Fragments":["you","no","you","why"]},{"Key":"use collection","Fragments":["functions"]},{"Key":"like ```forall```","Fragments":["and"]},{"Key":"```forall``` and","Fragments":["```exists```","the","```exists```."]},{"Key":"and ```exists```","Fragments":["(together"]},{"Key":"```exists``` (together","Fragments":["w/"]},{"Key":"(together w/","Fragments":["Char","Char"]},{"Key":"w/ Char","Fragments":["functions","functions"]},{"Key":"Char functions","Fragments":["like","like"]},{"Key":"like ```isLetter```","Fragments":["etc)."]},{"Key":"As for","Fragments":["combining","the","substring","detecting","another"]},{"Key":"for combining","Fragments":["regexes"]},{"Key":"combining regexes","Fragments":["w/"]},{"Key":"regexes w/","Fragments":["\"and\":"]},{"Key":"w/ \"and\":","Fragments":["this"]},{"Key":"\"and\": this","Fragments":["is"]},{"Key":"so trivial","Fragments":["(just"]},{"Key":"trivial (just","Fragments":["consider"]},{"Key":"(just consider","Fragments":["how"]},{"Key":"consider how","Fragments":["you"]},{"Key":"how you","Fragments":["would","handle","were","get","handled","dealt","split","apply","manage"]},{"Key":"would do","Fragments":["matching","it","the","a"]},{"Key":"do matching","Fragments":["of"]},{"Key":"matching of","Fragments":["regex"]},{"Key":"of regex","Fragments":["groups).","functions","groups?","it"]},{"Key":"regex groups).","Fragments":["But"]},{"Key":"groups). But","Fragments":["feel"]},{"Key":"But feel","Fragments":["free","free"]},{"Key":"feel free","Fragments":["to","to"]},{"Key":"free to","Fragments":["write","comment"]},{"Key":"write such","Fragments":["a"]},{"Key":"function (it","Fragments":["would"]},{"Key":"(it would","Fragments":["probably"]},{"Key":"to combine","Fragments":["the"]},{"Key":"combine the","Fragments":["```unapplySeq```","conditions,","split"]},{"Key":"the ```unapplySeq```","Fragments":["functions)."]},{"Key":"```unapplySeq``` functions).","Fragments":[":-)"]},{"Key":" @grayson","Fragments":["I'm"]},{"Key":"@grayson I'm","Fragments":["thinking"]},{"Key":"I'm thinking","Fragments":["of","about"]},{"Key":"thinking of","Fragments":["the","more","my"]},{"Key":"the anagrams","Fragments":["that"]},{"Key":"anagrams that","Fragments":["is"]},{"Key":"of _potential_","Fragments":["anagrams"]},{"Key":"_potential_ anagrams","Fragments":["and"]},{"Key":"anagrams and","Fragments":["anagram"]},{"Key":"and anagram","Fragments":["that"]},{"Key":"anagram that","Fragments":["is"]},{"Key":"a _potential_","Fragments":["anagram."]},{"Key":" @roy","Fragments":["can"]},{"Key":"@roy can","Fragments":["you"]},{"Key":"you please","Fragments":["elaborate?","have","explain"]},{"Key":"In most","Fragments":["cases"]},{"Key":"most cases","Fragments":["I"]},{"Key":"cases I","Fragments":["try","created","try"]},{"Key":"I try","Fragments":["to","removing","to","to","case"]},{"Key":"have self","Fragments":["documenting"]},{"Key":"documenting variable","Fragments":["names,"]},{"Key":"variable names,","Fragments":["in"]},{"Key":"names, in","Fragments":["what"]},{"Key":"in what","Fragments":["way","I","I","you"]},{"Key":"what way","Fragments":["is"]},{"Key":"this misleading?","Fragments":["I"]},{"Key":"misleading? I","Fragments":["don't"]},{"Key":"don't see","Fragments":["it,","the","the","much","how","how"]},{"Key":"see it,","Fragments":["can"]},{"Key":"it, can","Fragments":["use"]},{"Key":"use another's","Fragments":["point"]},{"Key":"another's point","Fragments":["of"]},{"Key":"Not the","Fragments":["most"]},{"Key":"the most","Fragments":["effective","general","efficient","general","useful","experience","efficient","readable","elegant","'functional'","elegant/simplest","performant.","stupid","efficient","popular"]},{"Key":"most effective","Fragments":["solution,"]},{"Key":"effective solution,","Fragments":["but"]},{"Key":"solution, but","Fragments":["I","I'd","+1"]},{"Key":"I appreciate","Fragments":["reading","that","it."]},{"Key":"appreciate reading","Fragments":["a"]},{"Key":"reading a","Fragments":["different"]},{"Key":"The naming","Fragments":["is"]},{"Key":"naming is","Fragments":["kind"]},{"Key":"is kind","Fragments":["of","of","of","of"]},{"Key":"Although counting","Fragments":["each"]},{"Key":"counting each","Fragments":["letter","time"]},{"Key":"each letter","Fragments":["is"]},{"Key":"letter is","Fragments":["more"]},{"Key":"efficient than","Fragments":["generating","string","`phrase.trim.isEmpty`?","call"]},{"Key":"than generating","Fragments":["all"]},{"Key":"generating all","Fragments":["anagrams,","combinations"]},{"Key":"all anagrams,","Fragments":["I"]},{"Key":"anagrams, I","Fragments":["found"]},{"Key":"it much","Fragments":["more","simpler","cleaner"]},{"Key":"1. Look","Fragments":["into","into","into"]},{"Key":"Look into","Fragments":["`require`","`require`","`require`"]},{"Key":"into `require`","Fragments":["on","on","on"]},{"Key":"on `Predef`.","Fragments":["It","It","It"]},{"Key":"`Predef`. It","Fragments":["throws","throws","throws"]},{"Key":"It throws","Fragments":["an","an","an"]},{"Key":"`IllegalArgumentException` and","Fragments":["it'll","it'll","it'll"]},{"Key":"and it'll","Fragments":["clean","clean","clean"]},{"Key":"it'll clean","Fragments":["things","things","things"]},{"Key":"clean things","Fragments":["up.","up.","up."]},{"Key":"2. Some","Fragments":["of"]},{"Key":"Some of","Fragments":["this","those"]},{"Key":"computed more","Fragments":["than"]},{"Key":"than once.","Fragments":["Maybe"]},{"Key":"once. Maybe","Fragments":["go"]},{"Key":"Maybe go","Fragments":["with"]},{"Key":"go with","Fragments":["a","domain","whitelisting","that."]},{"Key":"a `lazy","Fragments":["val`","val`","val`"]},{"Key":"val` rather","Fragments":["than"]},{"Key":"than `def`","Fragments":["for"]},{"Key":"`def` for","Fragments":["`nucleotideCounts`?"]},{"Key":" Naming","Fragments":["is","is"]},{"Key":"Naming is","Fragments":["hard","the"]},{"Key":"is hard","Fragments":[":-)","to"]},{"Key":"I've heard","Fragments":["there"]},{"Key":"heard there","Fragments":["are"]},{"Key":"are only","Fragments":["two","syntactic","called","needed","called","matching"]},{"Key":"only two","Fragments":["hard"]},{"Key":"two hard","Fragments":["problems"]},{"Key":"hard problems","Fragments":["left"]},{"Key":"problems left","Fragments":["in"]},{"Key":"left in","Fragments":["computer"]},{"Key":"in computer","Fragments":["science"]},{"Key":"computer science","Fragments":["-"]},{"Key":"science -","Fragments":["naming,"]},{"Key":"- naming,","Fragments":["cache"]},{"Key":"naming, cache","Fragments":["invalidation,"]},{"Key":"cache invalidation,","Fragments":["and"]},{"Key":"invalidation, and","Fragments":["off-by-one"]},{"Key":"and off-by-one","Fragments":["errors."]},{"Key":" Thanks,","Fragments":["it","I","couldn't","anyway!","both.","I","didn't"]},{"Key":"Thanks, it","Fragments":["makes"]},{"Key":"makes sense.","Fragments":["I'm","Regex'es","Regex"]},{"Key":"sense. I'm","Fragments":["not"]},{"Key":"at naming,","Fragments":["but"]},{"Key":"naming, but","Fragments":["try"]},{"Key":"but try","Fragments":["to"]},{"Key":"think `isQuestion`","Fragments":["is"]},{"Key":"`isQuestion` is","Fragments":["a"]},{"Key":"perfect name","Fragments":["for"]},{"Key":"it describes","Fragments":["exactly"]},{"Key":"describes exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["*meaning*","way","same","one"]},{"Key":"the *meaning*","Fragments":["of","of"]},{"Key":"*meaning* of","Fragments":["the","that"]},{"Key":"of Bob.","Fragments":["But"]},{"Key":"Bob. But","Fragments":["I'm"]},{"Key":"But I'm","Fragments":["not","guessing","not","not","just"]},{"Key":"so sure","Fragments":["`isEmpty`"]},{"Key":"sure `isEmpty`","Fragments":["and"]},{"Key":"`isEmpty` and","Fragments":["`isAllCaps`"]},{"Key":"and `isAllCaps`","Fragments":["do"]},{"Key":"`isAllCaps` do","Fragments":["quite"]},{"Key":"do quite","Fragments":["as"]},{"Key":"quite as","Fragments":["much"]},{"Key":"much -","Fragments":["their"]},{"Key":"- their","Fragments":["names"]},{"Key":"their names","Fragments":["seem"]},{"Key":"names seem","Fragments":["to"]},{"Key":"about their","Fragments":["implementation"]},{"Key":"their implementation","Fragments":["details"]},{"Key":"implementation details","Fragments":["rather","aren't"]},{"Key":"details rather","Fragments":["than"]},{"Key":"than their","Fragments":["meaning"]},{"Key":"their meaning","Fragments":["within"]},{"Key":"meaning within","Fragments":["the"]},{"Key":"within the","Fragments":["domain","class.","class.","case","test","program,","program,"]},{"Key":"the domain","Fragments":["of","and"]},{"Key":"domain of","Fragments":["\"Bob\"."]},{"Key":"That's a","Fragments":["great","good","very","nice"]},{"Key":"great point,","Fragments":["thanks"]},{"Key":"point, thanks","Fragments":["so","for",":)"]},{"Key":"thanks so","Fragments":["much"]},{"Key":"so much","Fragments":["for","for","for","shorter","cooler","like","to","nicer","time"]},{"Key":"the feedback.","Fragments":["I","I've","I'm","True","It's"]},{"Key":"feedback. I","Fragments":["moved","especially"]},{"Key":"I moved","Fragments":["it"]},{"Key":"moved it","Fragments":["into"]},{"Key":"it into","Fragments":["a","the","a","zero","my","something"]},{"Key":"`val` defined","Fragments":["at"]},{"Key":"defined at","Fragments":["instantiation."]},{"Key":" Would","Fragments":["word.sortLetters","not","have","I"]},{"Key":"Would word.sortLetters","Fragments":["get"]},{"Key":"word.sortLetters get","Fragments":["reevaluated"]},{"Key":"get reevaluated","Fragments":["each"]},{"Key":"reevaluated each","Fragments":["time","time"]},{"Key":"each time","Fragments":["the","re-encountered.","```wordCount```","it's","it","the","it","the","you","you","the"]},{"Key":"time the","Fragments":["_.sortLetters.equalsIgnoreCase","function","count","function"]},{"Key":"the _.sortLetters.equalsIgnoreCase","Fragments":["is"]},{"Key":"_.sortLetters.equalsIgnoreCase is","Fragments":["evaluated?"]},{"Key":"is evaluated?","Fragments":["Possibly"]},{"Key":"evaluated? Possibly","Fragments":["word.sortLetters"]},{"Key":"Possibly word.sortLetters","Fragments":["should"]},{"Key":"word.sortLetters should","Fragments":["be"]},{"Key":"be moved","Fragments":["so","to","to","to"]},{"Key":"moved so","Fragments":["that"]},{"Key":"only evaluated","Fragments":["once"]},{"Key":"evaluated once","Fragments":["at","when"]},{"Key":"once at","Fragments":["instance","max.","the"]},{"Key":"at instance","Fragments":["creation."]},{"Key":" ok,","Fragments":["another","good","you","performance","then","this","so","then"]},{"Key":"ok, another","Fragments":["good"]},{"Key":"another good","Fragments":["imperative","habit","habit"]},{"Key":"good imperative","Fragments":["solution"]},{"Key":"imperative solution","Fragments":["using","w/"]},{"Key":"solution using","Fragments":["a","a","lazy","regexes.","```foldLeft```","regex","```zip```.","regex","```map```"]},{"Key":"a buffer/side","Fragments":["effects."]},{"Key":"was thinking","Fragments":["about","to","that","about","in"]},{"Key":"thinking about","Fragments":["a","complements","how","an","why","going","this"]},{"Key":"about a","Fragments":["solution","mutable","simple"]},{"Key":"solution w/o","Fragments":["any","calculating","any"]},{"Key":"hint: what","Fragments":["about","about"]},{"Key":"what about","Fragments":["recursion?","having","iteration","using","```@thurman```ursion?","the","readability?","```zip```ping","implementing","using","different","something"]},{"Key":"1. It'd","Fragments":["be"]},{"Key":"to separate","Fragments":["`if`"]},{"Key":"separate `if`","Fragments":["conditions"]},{"Key":"`if` conditions","Fragments":["into"]},{"Key":"conditions into","Fragments":["single"]},{"Key":"into single","Fragments":["functions"]},{"Key":"single functions","Fragments":["to"]},{"Key":"functions to","Fragments":["show","help","functions)","count","filter/filterNot","String","make"]},{"Key":"to show","Fragments":["your"]},{"Key":"show your","Fragments":["intention"]},{"Key":"your intention","Fragments":["more","to"]},{"Key":"intention more","Fragments":["explicit."]},{"Key":"2. You","Fragments":["can","might"]},{"Key":"omit curly","Fragments":["braces","braces"]},{"Key":"braces when","Fragments":["a","your"]},{"Key":"when a","Fragments":["block"]},{"Key":"block consists","Fragments":["of"]},{"Key":"consists of","Fragments":["a","a","a"]},{"Key":"single expression.","Fragments":["The"]},{"Key":"expression. The","Fragments":["outermost"]},{"Key":"The outermost","Fragments":["pair"]},{"Key":"outermost pair","Fragments":["is"]},{"Key":"pair is","Fragments":["the"]},{"Key":"only needed","Fragments":["one","by"]},{"Key":"needed one","Fragments":["in"]},{"Key":"one in","Fragments":["this","the"]},{"Key":"3. `message.trim()","Fragments":["=="]},{"Key":"`message.trim() ==","Fragments":["\"\"`"]},{"Key":"== \"\"`","Fragments":["can"]},{"Key":"\"\"` can","Fragments":["be"]},{"Key":"written as","Fragments":["`message.trim.isEmpty`","`d1.zip(d2).count`","`message.forall(","a","`isThing`","exists/forall"]},{"Key":" 4.","Fragments":["Third","you"]},{"Key":"4. Third","Fragments":["condition"]},{"Key":"Third condition","Fragments":["seems"]},{"Key":"condition seems","Fragments":["unnecessary."]},{"Key":"seems unnecessary.","Fragments":["You"]},{"Key":"unnecessary. You","Fragments":["can"]},{"Key":"improve another","Fragments":["condition"]},{"Key":"another condition","Fragments":["not"]},{"Key":"condition not","Fragments":["to"]},{"Key":"not to","Fragments":["have","use","break","have","something","pollute","adjust","do","just","do","bother","adopt","expose","be","someone","use","use"]},{"Key":" 5.","Fragments":["To"]},{"Key":"5. To","Fragments":["check"]},{"Key":"To check","Fragments":["if"]},{"Key":"check if","Fragments":["a","a","all","the","all","it's","you've","the","a","it's","it's","they","the","the"]},{"Key":"string has","Fragments":["at","at"]},{"Key":"has at","Fragments":["least","least"]},{"Key":"least one","Fragments":["uppercase","uppercase","alpha","alphanum"]},{"Key":"one uppercase","Fragments":["letter,","alphabetic"]},{"Key":"uppercase letter,","Fragments":["you"]},{"Key":"letter, you","Fragments":["can"]},{"Key":"use `message.exists(_.isUpper)`","Fragments":["instead"]},{"Key":"`message.exists(_.isUpper)` instead","Fragments":["of"]},{"Key":"of full","Fragments":["blown"]},{"Key":"full blown","Fragments":["regex."]},{"Key":"What drove","Fragments":["me"]},{"Key":"drove me","Fragments":["in"]},{"Key":"me in","Fragments":["this","a","the","a"]},{"Key":"this direction","Fragments":["is"]},{"Key":"direction is","Fragments":["because"]},{"Key":"have very","Fragments":["little","little"]},{"Key":"very little","Fragments":["experience","Scala","Scala."]},{"Key":"little experience","Fragments":["in"]},{"Key":"experience in","Fragments":["Scala,"]},{"Key":"Scala, and","Fragments":["I","roughly,","I","there"]},{"Key":"try my","Fragments":["understanding"]},{"Key":"my understanding","Fragments":["on"]},{"Key":"understanding on","Fragments":["it."]},{"Key":" Oh","Fragments":["crap!","thanks,","wow,"]},{"Key":"Oh crap!","Fragments":["\u003e.\u003c"]},{"Key":" That'll","Fragments":["teach"]},{"Key":"That'll teach","Fragments":["me","me!"]},{"Key":"teach me","Fragments":["to"]},{"Key":"read the","Fragments":["problem","exercise","whole","class","README.md..."]},{"Key":"problem statement","Fragments":["and"]},{"Key":"statement and","Fragments":["not","has"]},{"Key":"just jump","Fragments":["into"]},{"Key":"jump into","Fragments":["solving"]},{"Key":"into solving","Fragments":["the"]},{"Key":"solving the","Fragments":["tests"]},{"Key":"Sorry, but","Fragments":["this"]},{"Key":"is cheating!","Fragments":[":-)"]},{"Key":"you look","Fragments":["at","around","at","for","back","at"]},{"Key":" ```Keep","Fragments":["your","your","your","your","your"]},{"Key":"```Keep your","Fragments":["hands","hands","hands","hands","hands"]},{"Key":"collect/map/fmap/whatchamacallit functionality","Fragments":["provided","provided"]},{"Key":"functionality provided","Fragments":["by","by"]},{"Key":" Frankly,","Fragments":["I'm"]},{"Key":"Frankly, I'm","Fragments":["perplexed"]},{"Key":"I'm perplexed","Fragments":["how"]},{"Key":"perplexed how","Fragments":["this"]},{"Key":"how this","Fragments":["worked.","implicit","read.","handles","if","can","looks."]},{"Key":"this worked.","Fragments":["I"]},{"Key":"worked. I","Fragments":["didn't"]},{"Key":"didn't understand","Fragments":["Hamming"]},{"Key":"understand Hamming","Fragments":["distance"]},{"Key":"Hamming distance","Fragments":["concept","now.","is","applies"]},{"Key":"distance concept","Fragments":["and"]},{"Key":"concept and","Fragments":["I"]},{"Key":"just zipped","Fragments":["up"]},{"Key":"zipped up","Fragments":["the"]},{"Key":"up the","Fragments":["two","``hey``","logic","structures","one-liners,","code","chain","one-liner","`add(...)`","code"]},{"Key":"two strings,","Fragments":["and"]},{"Key":"strings, and","Fragments":["returned","if"]},{"Key":"and returned","Fragments":["the"]},{"Key":"returned the","Fragments":["difference"]},{"Key":"the difference","Fragments":["between","of","of","is","between","you","in"]},{"Key":"difference between","Fragments":["the","the","case","the"]},{"Key":"between the","Fragments":["size","`:`","parentheses","two","words.","most","argument","way"]},{"Key":"the size","Fragments":["of","of"]},{"Key":"size of","Fragments":["the","the"]},{"Key":"the zipped","Fragments":["list","collection"]},{"Key":"zipped list","Fragments":["and"]},{"Key":"list and","Fragments":["the","getting","generating","using","the","turn","returning"]},{"Key":"of tuples","Fragments":["that","is","with","and","to"]},{"Key":"tuples that","Fragments":["had"]},{"Key":"that had","Fragments":["identical"]},{"Key":"had identical","Fragments":["elements."]},{"Key":"identical elements.","Fragments":["I"]},{"Key":"elements. I","Fragments":["kept"]},{"Key":"I kept","Fragments":["adding","the","it","the"]},{"Key":"kept adding","Fragments":["the"]},{"Key":"next test","Fragments":["and"]},{"Key":"test and","Fragments":["each","not","`yield`."]},{"Key":"and each","Fragments":["passed","string"]},{"Key":"each passed","Fragments":["in"]},{"Key":"in turn.","Fragments":["I'm"]},{"Key":"turn. I'm","Fragments":["wondering"]},{"Key":"I'm wondering","Fragments":["if","if","how"]},{"Key":"wondering if","Fragments":["I","there","I","it's","one"]},{"Key":"just got","Fragments":["lucky.","the"]},{"Key":"got lucky.","Fragments":["Going"]},{"Key":"lucky. Going","Fragments":["to"]},{"Key":"Going to","Fragments":["read"]},{"Key":"read up","Fragments":["on"]},{"Key":"up on","Fragments":["Hamming","you","a","acronyms"]},{"Key":"on Hamming","Fragments":["distance"]},{"Key":"distance now.","Fragments":[":)"]},{"Key":"The general","Fragments":["idea"]},{"Key":"general idea","Fragments":["looks","to"]},{"Key":"idea looks","Fragments":["good."]},{"Key":"probably try","Fragments":["to"]},{"Key":"do w/o","Fragments":["implicits","calculating","double","synchronized.","them"]},{"Key":"w/o implicits","Fragments":["as"]},{"Key":"implicits as","Fragments":["they"]},{"Key":"they confuse","Fragments":["more"]},{"Key":"confuse more","Fragments":["than"]},{"Key":"than they","Fragments":["help"]},{"Key":"And a","Fragments":["simple"]},{"Key":"simple map","Fragments":["instead"]},{"Key":"map instead","Fragments":["of","of","of","of","of"]},{"Key":"a full-fledged","Fragments":["for-comprehension"]},{"Key":"full-fledged for-comprehension","Fragments":["looks"]},{"Key":"for-comprehension looks","Fragments":["more"]},{"Key":"looks more","Fragments":["readable","complicated"]},{"Key":" Bug:","Fragments":["```UsedNames```"]},{"Key":"Bug: ```UsedNames```","Fragments":["will"]},{"Key":"```UsedNames``` will","Fragments":["always"]},{"Key":"will always","Fragments":["remain","remain","remain","return"]},{"Key":"always remain","Fragments":["the","the","the"]},{"Key":"remain the","Fragments":["empty","same","empty"]},{"Key":"Well, you","Fragments":["could","just"]},{"Key":"could always","Fragments":["make"]},{"Key":"always make","Fragments":["your"]},{"Key":"your ```require```","Fragments":["check"]},{"Key":"```require``` check","Fragments":["more"]},{"Key":"check more","Fragments":["sophisticated:"]},{"Key":"For example,","Fragments":["have","I","there","you","it","it's","try","if","about","\"HEY,"]},{"Key":"example, have","Fragments":["a"]},{"Key":"that returns","Fragments":["an","false","an"]},{"Key":"returns an","Fragments":["```Option```","`Option[A]`.","```Option[Int]```","empty"]},{"Key":"an ```Option```","Fragments":["containing","for"]},{"Key":"```Option``` containing","Fragments":["the"]},{"Key":"containing the","Fragments":["first","letters"]},{"Key":"first invalid","Fragments":["DNA","DNA"]},{"Key":"invalid DNA","Fragments":["type,","type"]},{"Key":"DNA type,","Fragments":["and"]},{"Key":"type, and","Fragments":["require"]},{"Key":"and require","Fragments":["reports"]},{"Key":"require reports","Fragments":["this"]},{"Key":"reports this","Fragments":["if"]},{"Key":"this if","Fragments":["the","statement"]},{"Key":"the ```Option.isDefined```","Fragments":["instead"]},{"Key":"```Option.isDefined``` instead","Fragments":["of"]},{"Key":"Or even","Fragments":["simpler:","just"]},{"Key":"even simpler:","Fragments":["Have"]},{"Key":"simpler: Have","Fragments":["a"]},{"Key":"that does","Fragments":["a","the","the","make","not"]},{"Key":"does a","Fragments":["```foreach```","separate"]},{"Key":"a ```foreach```","Fragments":["w/"]},{"Key":"```foreach``` w/","Fragments":["a"]},{"Key":"a ```require```","Fragments":["for","statement"]},{"Key":"each DNA","Fragments":["type."]},{"Key":"Great suggestions","Fragments":["(I"]},{"Key":"suggestions (I","Fragments":["didn't"]},{"Key":"(I didn't","Fragments":["know"]},{"Key":"didn't know","Fragments":["`require`","about","that,","that.","how","about","about","about"]},{"Key":"know `require`","Fragments":["before),"]},{"Key":"`require` before),","Fragments":["thanks!"]},{"Key":"before), thanks!","Fragments":["Although"]},{"Key":"thanks! Although","Fragments":["the"]},{"Key":"Although the","Fragments":["use","performance","implementation"]},{"Key":"of `fold`","Fragments":["is"]},{"Key":"`fold` is","Fragments":["debatable,"]},{"Key":"is debatable,","Fragments":["how"]},{"Key":"debatable, how","Fragments":["would"]},{"Key":"how would","Fragments":["you","you"]},{"Key":"you report","Fragments":["the"]},{"Key":"report the","Fragments":["first"]},{"Key":"DNA type","Fragments":["in"]},{"Key":"type in","Fragments":["case","the","the"]},{"Key":"the DNA","Fragments":["string","string","nucleotides"]},{"Key":"DNA string","Fragments":["is","five"]},{"Key":"string is","Fragments":["invalid.","empty.","a","uppercase,","valid","not"]},{"Key":"is invalid.","Fragments":["I"]},{"Key":"invalid. I","Fragments":["know"]},{"Key":"know this","Fragments":["is"]},{"Key":"not asked","Fragments":["for,","with"]},{"Key":"asked for,","Fragments":["I'm"]},{"Key":"for, I'm","Fragments":["asking"]},{"Key":"I'm asking","Fragments":["out"]},{"Key":"asking out","Fragments":["of"]},{"Key":"of interest","Fragments":["for","to"]},{"Key":"interest for","Fragments":["a"]},{"Key":"more sophisticated","Fragments":["solution"]},{"Key":"sophisticated solution","Fragments":["in"]},{"Key":"solution in","Fragments":["case","iteration","general,"]},{"Key":"case one","Fragments":["would"]},{"Key":"do so.","Fragments":["Thanks"]},{"Key":"so. Thanks","Fragments":["again!"]},{"Key":" IMHO","Fragments":["this","a","the","it"]},{"Key":"IMHO this","Fragments":["is","makes"]},{"Key":"is by","Fragments":["far","far","using"]},{"Key":"by far","Fragments":["too","the"]},{"Key":"far too","Fragments":["complicated"]},{"Key":"complicated for","Fragments":["what","what"]},{"Key":"does -","Fragments":["```fold```"]},{"Key":"- ```fold```","Fragments":["is"]},{"Key":"```fold``` is","Fragments":["not"]},{"Key":"not always","Fragments":["the","the","be"]},{"Key":"always the","Fragments":["best","same","best","length"]},{"Key":"best solution","Fragments":["for","of","for"]},{"Key":"for everything","Fragments":[";-)"]},{"Key":"not check","Fragments":["validity","whether"]},{"Key":"check validity","Fragments":["w/"]},{"Key":"validity w/","Fragments":["```require```"]},{"Key":"w/ ```require```","Fragments":["(you"]},{"Key":"```require``` (you","Fragments":["could"]},{"Key":"(you could","Fragments":["also","also"]},{"Key":"also simplify","Fragments":["here","by","to"]},{"Key":"simplify here","Fragments":["w/"]},{"Key":"here w/","Fragments":["```forall```)","Collection"]},{"Key":"w/ ```forall```)","Fragments":["and"]},{"Key":"```forall```) and","Fragments":["then"]},{"Key":"then have","Fragments":["your","it","a","isValid","been","another"]},{"Key":"your inner","Fragments":["```foldLeft```","method","function."]},{"Key":"inner ```foldLeft```","Fragments":["on"]},{"Key":"```foldLeft``` on","Fragments":["the"]},{"Key":"the happy","Fragments":["path,"]},{"Key":"happy path,","Fragments":["for"]},{"Key":"path, for","Fragments":["example?"]},{"Key":"you read","Fragments":["the","`a(i)`"]},{"Key":"the exercise","Fragments":["description:","to","description:","in","is"]},{"Key":"So you","Fragments":["should","should","can"]},{"Key":"should basically","Fragments":["implement"]},{"Key":"basically implement","Fragments":["```map```"]},{"Key":"implement ```map```","Fragments":["yourself."]},{"Key":" anyhow,","Fragments":["you"]},{"Key":"anyhow, you","Fragments":["can"]},{"Key":"function arg","Fragments":["of","of","of"]},{"Key":"arg of","Fragments":["filter","count","the","count"]},{"Key":"of filter","Fragments":["into","for","take"]},{"Key":"filter into","Fragments":["a","a","a"]},{"Key":"well-named private","Fragments":["function"]},{"Key":" one","Fragments":["further","might","small","thing","could","minor"]},{"Key":"one further","Fragments":["simplification:"]},{"Key":"further simplification:","Fragments":["instead"]},{"Key":"simplification: instead","Fragments":["of"]},{"Key":"of filter-length","Fragments":["you"]},{"Key":"filter-length you","Fragments":["can"]},{"Key":"the \"count\"","Fragments":["function."]},{"Key":"collections are","Fragments":["just"]},{"Key":"are just","Fragments":["awesome,","fine"]},{"Key":"just awesome,","Fragments":["aren't"]},{"Key":"awesome, aren't","Fragments":["they?"]},{"Key":"aren't they?","Fragments":[":-)"]},{"Key":"check require","Fragments":["function"]},{"Key":"require function","Fragments":["instead","or"]},{"Key":"using if.","Fragments":["Besides"]},{"Key":"if. Besides","Fragments":["that"]},{"Key":"Besides that","Fragments":["it"]},{"Key":"looks quite","Fragments":["cool"]},{"Key":"quite cool","Fragments":[":)"]},{"Key":"the isssue","Fragments":["is"]},{"Key":"isssue is","Fragments":["how"]},{"Key":"is how","Fragments":["we","this"]},{"Key":"how we","Fragments":["define"]},{"Key":"we define","Fragments":["occasional"]},{"Key":"define occasional","Fragments":["reader."]},{"Key":"occasional reader.","Fragments":["I"]},{"Key":"reader. I","Fragments":["thought"]},{"Key":"about it","Fragments":["a","on","and"]},{"Key":"bit and","Fragments":["I"]},{"Key":"is person","Fragments":["who"]},{"Key":"person who","Fragments":["has"]},{"Key":"who has","Fragments":["some","done"]},{"Key":"some coding","Fragments":["experience."]},{"Key":"Maybe the","Fragments":["Type","program","same"]},{"Key":"the Type","Fragments":["hides"]},{"Key":"Type hides","Fragments":["the"]},{"Key":"hides the","Fragments":["implementation"]},{"Key":"implementation detail,","Fragments":["but"]},{"Key":"detail, but","Fragments":["I"]},{"Key":"that non-coder","Fragments":["would"]},{"Key":"non-coder would","Fragments":["understand"]},{"Key":"would understand","Fragments":["map"]},{"Key":"understand map","Fragments":["or"]},{"Key":"map or","Fragments":["flatMap"]},{"Key":"or flatMap","Fragments":["functions/iterations"]},{"Key":"flatMap functions/iterations","Fragments":["-"]},{"Key":"functions/iterations -","Fragments":["hence"]},{"Key":"- hence","Fragments":["I"]},{"Key":"hence I","Fragments":["think"]},{"Key":"think \"hiding\"","Fragments":["Maps"]},{"Key":"\"hiding\" Maps","Fragments":["make"]},{"Key":"Maps make","Fragments":["code"]},{"Key":"code less","Fragments":["readable"]},{"Key":"less readable","Fragments":["for"]},{"Key":"readable for","Fragments":["other"]},{"Key":"for other","Fragments":["developers"]},{"Key":"other developers","Fragments":["who"]},{"Key":"developers who","Fragments":["have"]},{"Key":"who have","Fragments":["to"]},{"Key":"to understand/maintain","Fragments":["it."]},{"Key":"But maybe","Fragments":["I","I'm","my"]},{"Key":"maybe I","Fragments":["am","should","was"]},{"Key":"am underestimating","Fragments":["non-coding"]},{"Key":"underestimating non-coding","Fragments":["people"]},{"Key":"non-coding people","Fragments":["or"]},{"Key":"people or","Fragments":["missing"]},{"Key":"or missing","Fragments":["some"]},{"Key":"missing some","Fragments":["important"]},{"Key":"some important","Fragments":["point."]},{"Key":"might have","Fragments":["a","a","forced","them","your","to","a"]},{"Key":" On","Fragments":["the","a","a","the","the"]},{"Key":"On the","Fragments":["other","scale","other","whole","infinite"]},{"Key":"other hand,","Fragments":["terms","something"]},{"Key":"hand, terms","Fragments":["like"]},{"Key":"terms like","Fragments":["\"Map\""]},{"Key":"like \"Map\"","Fragments":["are","in"]},{"Key":"\"Map\" are","Fragments":["of"]},{"Key":"more technical","Fragments":["nature"]},{"Key":"technical nature","Fragments":["(\"implementation"]},{"Key":"nature (\"implementation","Fragments":["detail\")"]},{"Key":"(\"implementation detail\")","Fragments":["and"]},{"Key":"detail\") and","Fragments":["thus"]},{"Key":"thus should","Fragments":["perhaps"]},{"Key":"should perhaps","Fragments":["not"]},{"Key":"be of","Fragments":["primary","type","type"]},{"Key":"of primary","Fragments":["concern"]},{"Key":"primary concern","Fragments":["for"]},{"Key":"concern for","Fragments":["the"]},{"Key":"the occasional","Fragments":["reader?"]},{"Key":" (Point,Letters)","Fragments":["is"]},{"Key":"(Point,Letters) is","Fragments":["better"]},{"Key":"better in","Fragments":["this"]},{"Key":"this respect,","Fragments":["but"]},{"Key":"respect, but","Fragments":["still"]},{"Key":"still IMHO","Fragments":["might"]},{"Key":"IMHO might","Fragments":["not"]},{"Key":"not completely","Fragments":["express","wrong."]},{"Key":"completely express","Fragments":["the"]},{"Key":"express the","Fragments":["top"]},{"Key":"the top","Fragments":["level","priority"]},{"Key":"top level","Fragments":["intention"]},{"Key":"level intention","Fragments":["of"]},{"Key":"intention of","Fragments":["the","the"]},{"Key":"code, namely","Fragments":["a"]},{"Key":"namely a","Fragments":["transformation"]},{"Key":"a transformation","Fragments":["from"]},{"Key":"transformation from","Fragments":["OldX"]},{"Key":"from OldX","Fragments":["to"]},{"Key":"OldX to","Fragments":["NewX."]},{"Key":"think OldScore/NewScoreFormat","Fragments":["names"]},{"Key":"OldScore/NewScoreFormat names","Fragments":["are"]},{"Key":"bit misleading,","Fragments":["because"]},{"Key":"misleading, because","Fragments":["format"]},{"Key":"because format","Fragments":["of"]},{"Key":"format of","Fragments":["the"]},{"Key":"the score","Fragments":["is"]},{"Key":"score is","Fragments":["either"]},{"Key":"is either","Fragments":["(Point,","no"]},{"Key":"either (Point,","Fragments":["Letters)"]},{"Key":"(Point, Letters)","Fragments":["or"]},{"Key":"Letters) or","Fragments":["(Letter,"]},{"Key":"or (Letter,","Fragments":["Point)."]},{"Key":"(Letter, Point).","Fragments":["In"]},{"Key":"Point). In","Fragments":["my"]},{"Key":"my opinion","Fragments":["itroducing","the","that's","you"]},{"Key":"opinion itroducing","Fragments":["those"]},{"Key":"itroducing those","Fragments":["types"]},{"Key":"those types","Fragments":["make"]},{"Key":"types make","Fragments":["code"]},{"Key":"readable, it","Fragments":["does"]},{"Key":"not imply","Fragments":["that"]},{"Key":"imply that","Fragments":["those"]},{"Key":"that those","Fragments":["are"]},{"Key":"are Maps","Fragments":["of"]},{"Key":"Maps of","Fragments":["any"]},{"Key":"of any","Fragments":["kind.","public","Collection."]},{"Key":"for `_`","Fragments":["in"]},{"Key":"`_` in","Fragments":["`complements(_)`"]},{"Key":"make ```sides```","Fragments":["simply"]},{"Key":"```sides``` simply","Fragments":["of"]},{"Key":"simply of","Fragments":["type"]},{"Key":"type ```Set```","Fragments":["and"]},{"Key":"```Set``` and","Fragments":["then"]},{"Key":"then use","Fragments":["```size```","`==`","foldLeft","import","the","the","substring","it","this","the"]},{"Key":"use ```size```","Fragments":["instead"]},{"Key":"```size``` instead","Fragments":["of"]},{"Key":" @verla","Fragments":["list"]},{"Key":"@verla list","Fragments":["is"]},{"Key":"the invalidTriangle","Fragments":["method"]},{"Key":"invalidTriangle method","Fragments":["as"]},{"Key":"as well,","Fragments":["so","but","I'll","but"]},{"Key":"well, so","Fragments":["I'd"]},{"Key":"I'd rather","Fragments":["leave"]},{"Key":"rather leave","Fragments":["it"]},{"Key":"leave it","Fragments":["as","like","if","to"]},{"Key":"ok, good","Fragments":["point."]},{"Key":" although","Fragments":["you","you"]},{"Key":"although you","Fragments":["haven't","don't","do","can"]},{"Key":"you haven't","Fragments":["covered","finished,"]},{"Key":"haven't covered","Fragments":["the"]},{"Key":"covered the","Fragments":["case"]},{"Key":"of negative","Fragments":["sides"]},{"Key":"negative sides","Fragments":["(which"]},{"Key":"sides (which","Fragments":["is"]},{"Key":"(which is","Fragments":["not","ok)."]},{"Key":"the tests,","Fragments":["grant","but","but","no?"]},{"Key":"tests, grant","Fragments":["you"]},{"Key":"grant you","Fragments":["that)."]},{"Key":" enter","Fragments":["Java"]},{"Key":"enter Java","Fragments":["8"]},{"Key":"8 with","Fragments":["JSR"]},{"Key":"with JSR","Fragments":["310"]},{"Key":"JSR 310","Fragments":["(Joda"]},{"Key":"310 (Joda","Fragments":["time)"]},{"Key":"this sate","Fragments":["machine"]},{"Key":"sate machine","Fragments":["approach."]},{"Key":"machine approach.","Fragments":["In"]},{"Key":"approach. In","Fragments":["this"]},{"Key":"this approach","Fragments":["you","is"]},{"Key":"approach you","Fragments":["only","might"]},{"Key":"only have","Fragments":["to","to","to","4"]},{"Key":"to iterate","Fragments":["through","over","over","recursively"]},{"Key":"string once","Fragments":["to"]},{"Key":"once to","Fragments":["determine","check"]},{"Key":"determine what","Fragments":["case","the"]},{"Key":"what case","Fragments":["you're"]},{"Key":"case you're","Fragments":["using."]},{"Key":"I'm pretty","Fragments":["new","new","new","new","new"]},{"Key":"pretty new","Fragments":["to","to","to","to","to","to"]},{"Key":"to Scala","Fragments":["though","FP","so","and","myself","so","yet.","so","coming","(coming"]},{"Key":"Scala though","Fragments":["so"]},{"Key":"though so","Fragments":["take"]},{"Key":"so take","Fragments":["what"]},{"Key":"take what","Fragments":["I"]},{"Key":"I say","Fragments":["with"]},{"Key":"say with","Fragments":["a"]},{"Key":"a grain","Fragments":["of"]},{"Key":"grain of","Fragments":["salt."]},{"Key":"of salt.","Fragments":["I'm"]},{"Key":"salt. I'm","Fragments":["surprised"]},{"Key":"I'm surprised","Fragments":["you're"]},{"Key":"surprised you're","Fragments":["not"]},{"Key":"you're not","Fragments":["using","completely"]},{"Key":"using any","Fragments":["String","scala"]},{"Key":"any String","Fragments":["operations"]},{"Key":"String operations","Fragments":["though?"]},{"Key":"This time","Fragments":["I've","with","with"]},{"Key":"time I've","Fragments":["changed"]},{"Key":"I've changed","Fragments":["the"]},{"Key":"the var's","Fragments":["by"]},{"Key":"var's by","Fragments":["a"]},{"Key":"by a","Fragments":["state","mapValues."]},{"Key":"a state","Fragments":["machine.","transformation"]},{"Key":"state machine.","Fragments":["The"]},{"Key":"machine. The","Fragments":["state"]},{"Key":"The state","Fragments":["change"]},{"Key":"state change","Fragments":["depending"]},{"Key":"change depending","Fragments":["on"]},{"Key":"depending on","Fragments":["the","initial","expected","what"]},{"Key":"the evaluating","Fragments":["char"]},{"Key":"evaluating char","Fragments":["and"]},{"Key":"char and","Fragments":["the"]},{"Key":"the state","Fragments":["when","of"]},{"Key":"state when","Fragments":["the"]},{"Key":"when the","Fragments":["last","whole","infix","assignment","Phrase","signatures","class","first"]},{"Key":"last char","Fragments":["is"]},{"Key":"char is","Fragments":["evaluate"]},{"Key":"is evaluate","Fragments":["determines"]},{"Key":"evaluate determines","Fragments":["which"]},{"Key":"determines which","Fragments":["is"]},{"Key":"the answer","Fragments":["from","from"]},{"Key":"answer from","Fragments":["Bob.","some"]},{"Key":"some things","Fragments":["that","in","that"]},{"Key":"that I'm","Fragments":["not"]},{"Key":" -I'm","Fragments":["not","not"]},{"Key":"-I'm not","Fragments":["sure","sure"]},{"Key":"if using","Fragments":["def","copy"]},{"Key":"using def","Fragments":["is"]},{"Key":"def is","Fragments":["ok"]},{"Key":"if in","Fragments":["the","the"]},{"Key":"the evaluation","Fragments":["part"]},{"Key":"evaluation part","Fragments":["(the"]},{"Key":"part (the","Fragments":["last"]},{"Key":"(the last","Fragments":["lines)","computed"]},{"Key":"last lines)","Fragments":["it's"]},{"Key":"lines) it's","Fragments":["ok"]},{"Key":"it's ok","Fragments":["to"]},{"Key":"ok to","Fragments":["use","create"]},{"Key":"use if-else","Fragments":["or","if's"]},{"Key":"if-else or","Fragments":["it's"]},{"Key":"or it's","Fragments":["better"]},{"Key":"use match","Fragments":["-"]},{"Key":"match -","Fragments":["case"]},{"Key":"- case","Fragments":["statement."]},{"Key":"the conciseness","Fragments":["of","of"]},{"Key":"conciseness of","Fragments":["your","your"]},{"Key":"your scoreWord","Fragments":["function."]},{"Key":"scoreWord function.","Fragments":["Though"]},{"Key":"function. Though","Fragments":["I"]},{"Key":"Though I","Fragments":["wonder"]},{"Key":"wonder if","Fragments":["it","the","this","this","scala","the","it","it's","there's"]},{"Key":"perform a","Fragments":["flat","map"]},{"Key":"a flat","Fragments":["map"]},{"Key":"flat map","Fragments":["where"]},{"Key":"map where","Fragments":["the"]},{"Key":"sum is","Fragments":["calculated"]},{"Key":"is calculated","Fragments":["as","from","once","once"]},{"Key":"calculated as","Fragments":["the"]},{"Key":"are grabbed","Fragments":["from"]},{"Key":"grabbed from","Fragments":["the"]},{"Key":"the word.","Fragments":["In"]},{"Key":"word. In","Fragments":["a"]},{"Key":"simple exercise","Fragments":["like"]},{"Key":"exercise like","Fragments":["this,"]},{"Key":"this, it","Fragments":["doesn't"]},{"Key":"doesn't matter.","Fragments":["But,"]},{"Key":"matter. But,","Fragments":["it"]},{"Key":"But, it","Fragments":["is"]},{"Key":"an interesting","Fragments":["question","problem.","exercise","documentation","solution"]},{"Key":"interesting question","Fragments":["in"]},{"Key":"question in","Fragments":["general."]},{"Key":"As ```String```","Fragments":["can"]},{"Key":"```String``` can","Fragments":["be"]},{"Key":"```Seq[Char]``` I","Fragments":["think"]},{"Key":"should take","Fragments":["a","advantage"]},{"Key":"take a","Fragments":["look","single","look","look","look","look","look","stab","tuple"]},{"Key":"at method","Fragments":["[Seq#zip](http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.Seq@tessie[B](that:scala.collection.GenIterable[B]):Seq[(A,B)])"]},{"Key":"method [Seq#zip](http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.Seq@tessie[B](that:scala.collection.GenIterable[B]):Seq[(A,B)])","Fragments":["and"]},{"Key":"[Seq#zip](http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.Seq@tessie[B](that:scala.collection.GenIterable[B]):Seq[(A,B)]) and","Fragments":["[Seq#count](http://www.scala-lang.org/api/2.11.4/index.html#scala.collection.Seq@tessie(p:A=\u003eBoolean):Int)."]},{"Key":"It will","Fragments":["make","throw","make","be","not","try","only","zip"]},{"Key":"will make","Fragments":["the","the","your"]},{"Key":"the solution","Fragments":["shorter","of","with","O(n)).","can","you","cleaner","in","a"]},{"Key":"solution shorter","Fragments":["and"]},{"Key":"In fact","Fragments":["this","the","so","I"]},{"Key":"fact this","Fragments":["exercise"]},{"Key":"exercise could","Fragments":["be","be"]},{"Key":"be resole","Fragments":["in"]},{"Key":"resole in","Fragments":["a"]},{"Key":"one liner","Fragments":["of","that","is",";)"]},{"Key":"liner of","Fragments":["less"]},{"Key":"of less","Fragments":["than"]},{"Key":"than 50","Fragments":["characters."]},{"Key":"if (a)","Fragments":["true"]},{"Key":"(a) true","Fragments":["else"]},{"Key":"true else","Fragments":["false","false`.","false`"]},{"Key":"first iteration","Fragments":["looked","I","of","too,","looked"]},{"Key":"iteration looked","Fragments":["quite","quite"]},{"Key":"looked quite","Fragments":["like","like"]},{"Key":"quite like","Fragments":["this.","how","to","that"]},{"Key":"this. But","Fragments":["I"]},{"Key":"got mad","Fragments":["that"]},{"Key":"mad that","Fragments":["I"]},{"Key":"to pass","Fragments":["around","except","the","the","an","all","the","a","the","the","the","through","the"]},{"Key":"pass around","Fragments":["the"]},{"Key":"the `speech`","Fragments":["variable"]},{"Key":"`speech` variable","Fragments":["so"]},{"Key":"variable so","Fragments":["often.","that"]},{"Key":"so often.","Fragments":["So"]},{"Key":"often. So","Fragments":["I"]},{"Key":"got into","Fragments":["a"]},{"Key":"little [FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79).","Fragments":["Probably"]},{"Key":"[FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79). Probably","Fragments":["overdid"]},{"Key":"Probably overdid","Fragments":["it"]},{"Key":"your predicate","Fragments":["functions","functions"]},{"Key":"predicate functions","Fragments":["inner","private.","are","w/"]},{"Key":"functions inner","Fragments":["functions"]},{"Key":"functions (that","Fragments":["can"]},{"Key":"(that can","Fragments":["access"]},{"Key":"can access","Fragments":["`speech`","db"]},{"Key":"access `speech`","Fragments":["directly)"]},{"Key":"`speech` directly)","Fragments":["or"]},{"Key":"directly) or","Fragments":["to"]},{"Key":"or to","Fragments":["make","the","throw"]},{"Key":"make `speech`","Fragments":["an"]},{"Key":"`speech` an","Fragments":["implicit"]},{"Key":"implicit parameter","Fragments":["everywhere"]},{"Key":"parameter everywhere","Fragments":["(allowing"]},{"Key":"everywhere (allowing","Fragments":["you"]},{"Key":"(allowing you","Fragments":["to"]},{"Key":"to omit","Fragments":["all"]},{"Key":"omit all","Fragments":["the","the"]},{"Key":"the wiring","Fragments":["and"]},{"Key":"wiring and","Fragments":["just"]},{"Key":"call `if(isShouting)","Fragments":["\"Whoa\"`)."]},{"Key":"`if(isShouting) \"Whoa\"`).","Fragments":["Matter"]},{"Key":"\"Whoa\"`). Matter","Fragments":["of"]},{"Key":"Matter of","Fragments":["taste"]},{"Key":"taste I","Fragments":["guess."]},{"Key":" Anyway:","Fragments":["the"]},{"Key":"Anyway: the","Fragments":["way"]},{"Key":"way it","Fragments":["is"]},{"Key":"is now","Fragments":["you","quicker","slightly"]},{"Key":"(and probably","Fragments":["should)","also"]},{"Key":"probably should)","Fragments":["omit"]},{"Key":"should) omit","Fragments":["the"]},{"Key":"the `hey`","Fragments":["body","method"]},{"Key":"`hey` body","Fragments":["and"]},{"Key":"body and","Fragments":["I"]},{"Key":"would think","Fragments":["about"]},{"Key":"about making","Fragments":["your","them"]},{"Key":"making your","Fragments":["predicate"]},{"Key":"way how","Fragments":["you"]},{"Key":"you handle","Fragments":["the","the","the","that?"]},{"Key":"the splitting","Fragments":["of"]},{"Key":"splitting of","Fragments":["the"]},{"Key":"the words","Fragments":["regardless","instead","in","into","themselves."]},{"Key":"words regardless","Fragments":["if"]},{"Key":"regardless if","Fragments":["they"]},{"Key":"a space","Fragments":["or","after","in","instead","char","char?)"]},{"Key":"space or","Fragments":["a"]},{"Key":"a comma","Fragments":["between"]},{"Key":"comma between","Fragments":["them."]},{"Key":"function ```wordsCount```","Fragments":["could"]},{"Key":"```wordsCount``` could","Fragments":["be"]},{"Key":"easier implemented","Fragments":["with"]},{"Key":"Thanks @isai","Fragments":["!"]},{"Key":" Scalas","Fragments":["`iterable`"]},{"Key":"Scalas `iterable`","Fragments":["defines"]},{"Key":"`iterable` defines","Fragments":["this"]},{"Key":"defines this","Fragments":["function:"]},{"Key":"this function:","Fragments":["`def"]},{"Key":" count(p:","Fragments":["(A)"]},{"Key":"count(p: (A)","Fragments":["⇒","⇒"]},{"Key":"(A) ⇒","Fragments":["Boolean):","Boolean):"]},{"Key":"⇒ Boolean):","Fragments":["Int`","Int"]},{"Key":"guess this","Fragments":["could","is"]},{"Key":"this could","Fragments":["make"]},{"Key":"code easier","Fragments":["to","to","to","to"]},{"Key":"just out","Fragments":["of","of"]},{"Key":"of curiosity:","Fragments":["why","why"]},{"Key":"curiosity: why","Fragments":["do","do"]},{"Key":"why do","Fragments":["you","you","you","you"]},{"Key":" Неверно","Fragments":["указан"]},{"Key":"Неверно указан","Fragments":["аргумент"]},{"Key":"указан аргумент","Fragments":["функции."]},{"Key":"аргумент функции.","Fragments":["Any"]},{"Key":"функции. Any","Fragments":["вместо"]},{"Key":"Any вместо","Fragments":["String"]},{"Key":"I'd add","Fragments":["would"]},{"Key":"add would","Fragments":["be"]},{"Key":"be message","Fragments":["for"]},{"Key":"message for","Fragments":["require"]},{"Key":"for require","Fragments":["function."]},{"Key":" ```randomLetter```","Fragments":["is"]},{"Key":"```randomLetter``` is","Fragments":["a"]},{"Key":"bit too","Fragments":["complicated","clever","dense","hard","much","dense","much","optimisitic/naive","complicated:"]},{"Key":"to my","Fragments":["taste.","suite","taste","taste.","taste.","solution,","eyes,","computer"]},{"Key":"my taste.","Fragments":["You","makes"]},{"Key":"taste. You","Fragments":["could,"]},{"Key":"You could,","Fragments":["for","for"]},{"Key":"could, for","Fragments":["example,","example,"]},{"Key":"example, use","Fragments":["a","a"]},{"Key":"```Range``` and","Fragments":["choose","```map```."]},{"Key":"and choose","Fragments":["from"]},{"Key":"choose from","Fragments":["that."]},{"Key":"is missing","Fragments":["is","to","is","is"]},{"Key":"missing is","Fragments":["the","the","the","the","the"]},{"Key":"btw, what","Fragments":["would"]},{"Key":"what would","Fragments":["you","you","be","the","you","happen"]},{"Key":"do if","Fragments":["the","the","the","a"]},{"Key":"name consisted","Fragments":["of,","of,","of,"]},{"Key":"consisted of,","Fragments":["say,","say","say,"]},{"Key":"of, say,","Fragments":["30","10"]},{"Key":"say, 30","Fragments":["letters"]},{"Key":"30 letters","Fragments":["and"]},{"Key":"and 40","Fragments":["digits?"]},{"Key":"40 digits?","Fragments":[";-)"]},{"Key":" nice","Fragments":["tail","Java","regex","and","going","(as","and","little","exercise","idea"]},{"Key":"nice tail","Fragments":["recursion!"]},{"Key":"tail recursion!","Fragments":[":-)"]},{"Key":"also provide","Fragments":["a","a","a","a"]},{"Key":"provide a","Fragments":["solution","solution","second","solution","function","solution","```@cicero```ursive"]},{"Key":"in isSublist","Fragments":["a"]},{"Key":"isSublist a","Fragments":["bit."]},{"Key":"bit. For","Fragments":["example,"]},{"Key":"example, I","Fragments":["think"]},{"Key":"the dropWhile","Fragments":["trick"]},{"Key":"dropWhile trick","Fragments":["is"]},{"Key":"trick is","Fragments":["not"]},{"Key":"really necessary.","Fragments":["You","Take","Take"]},{"Key":"necessary. You","Fragments":["could"]},{"Key":"could argue","Fragments":["that","that","that","I'm","that"]},{"Key":"argue that","Fragments":["it","you","`tooShort`","regexes","a","I","returning"]},{"Key":"is for","Fragments":["performance","constants"]},{"Key":"for performance","Fragments":["reasons,"]},{"Key":"performance reasons,","Fragments":["but"]},{"Key":"reasons, but","Fragments":["I"]},{"Key":"think there's","Fragments":["a"]},{"Key":"there's a","Fragments":["strong","nice","better","more","readability","special","more"]},{"Key":"a strong","Fragments":["case","opinion","candidate","enough"]},{"Key":"strong case","Fragments":["there,"]},{"Key":"case there,","Fragments":["maybe"]},{"Key":"there, maybe","Fragments":["it's"]},{"Key":"it's even","Fragments":["worse"]},{"Key":"even worse","Fragments":["than"]},{"Key":"than without","Fragments":["dropWhile."]},{"Key":"but why","Fragments":["a","not"]},{"Key":"why a","Fragments":["var?"]},{"Key":"a var?","Fragments":["vars"]},{"Key":"var? vars","Fragments":["should"]},{"Key":"vars should","Fragments":["be"]},{"Key":"the exception","Fragments":["in","yourself","if"]},{"Key":"exception in","Fragments":["Scala,","case"]},{"Key":"Scala, use","Fragments":["vals"]},{"Key":"use vals","Fragments":["if","and"]},{"Key":"vals if","Fragments":["you","that"]},{"Key":"simplify try","Fragments":["Option's"]},{"Key":"try Option's","Fragments":["getOrElse."]},{"Key":"single return","Fragments":["point"]},{"Key":"return point","Fragments":["than"]},{"Key":"point than","Fragments":["multiple"]},{"Key":"than multiple","Fragments":["return"]},{"Key":"multiple return","Fragments":["points."]},{"Key":"return points.","Fragments":["Since"]},{"Key":"points. Since","Fragments":["if/else"]},{"Key":"Since if/else","Fragments":["is"]},{"Key":"if/else is","Fragments":["an"]},{"Key":"Scala (meaning","Fragments":["that"]},{"Key":"(meaning that","Fragments":["the"]},{"Key":"the \"command\"","Fragments":["returns"]},{"Key":"\"command\" returns","Fragments":["a"]},{"Key":"returns a","Fragments":["value),","new","```None```.","Unit,","String,","String,","String,"]},{"Key":"a value),","Fragments":["it"]},{"Key":"value), it","Fragments":["is"]},{"Key":"is easy","Fragments":["to","to","to","to"]},{"Key":"to eliminate","Fragments":["multiple"]},{"Key":"eliminate multiple","Fragments":["returns:"]},{"Key":"def hey(args:","Fragments":["String):"]},{"Key":"hey(args: String):","Fragments":["String"]},{"Key":"String): String","Fragments":["=","="]},{"Key":"String =","Fragments":["{","{","...\"","{","{...}","{","s.replaceAll(\"[^0-9]\",","cleanNumber"]},{"Key":"if (...)","Fragments":["\"Fine.","\"Whoa,","\"Sure.\""]},{"Key":"(...) \"Fine.","Fragments":["Be"]},{"Key":"(...) \"Whoa,","Fragments":["chill"]},{"Key":" Remember","Fragments":["that"]},{"Key":"Remember that","Fragments":["`return`"]},{"Key":"that `return`","Fragments":["statement"]},{"Key":"`return` statement","Fragments":["is"]},{"Key":"statement is","Fragments":["optional","not","really","returned.","not","to"]},{"Key":"is optional","Fragments":["in"]},{"Key":"optional in","Fragments":["Scala"]},{"Key":"Scala since","Fragments":["the"]},{"Key":"last computed","Fragments":["value","value"]},{"Key":"computed value","Fragments":["in","in"]},{"Key":"method (the","Fragments":["last"]},{"Key":"my implementation","Fragments":["is","too.","of"]},{"Key":"that returned","Fragments":["by"]},{"Key":"returned by","Fragments":["if"]},{"Key":"by if","Fragments":["expression,"]},{"Key":"if expression,","Fragments":["so"]},{"Key":"expression, so","Fragments":["this"]},{"Key":"so this","Fragments":["is"]},{"Key":"method returned","Fragments":["value)."]},{"Key":"Another detail.","Fragments":["It"]},{"Key":"detail. It","Fragments":["is"]},{"Key":"is possible","Fragments":["to","with","to","to","if"]},{"Key":"first test","Fragments":["to"]},{"Key":"test to","Fragments":["a","classify","a","a"]},{"Key":"a simpler","Fragments":["one:","way","construct","algorithm."]},{"Key":"simpler one:","Fragments":["`args"]},{"Key":"one: `args","Fragments":["matches"]},{"Key":"`args matches","Fragments":["\"\\\\s*\"`"]},{"Key":"matches \"\\\\s*\"`","Fragments":["(0"]},{"Key":"\"\\\\s*\"` (0","Fragments":["or"]},{"Key":"(0 or","Fragments":["more"]},{"Key":"that size","Fragments":["-"]},{"Key":"size -","Fragments":["#matches"]},{"Key":"- #matches","Fragments":["was"]},{"Key":"#matches was","Fragments":["really"]},{"Key":"was really","Fragments":["just","hoping"]},{"Key":"just the","Fragments":["number","amount","tests","first"]},{"Key":"of non-matches.","Fragments":["I"]},{"Key":"non-matches. I","Fragments":["got"]},{"Key":"the temporary","Fragments":["value"]},{"Key":"temporary value","Fragments":["because"]},{"Key":"value because","Fragments":["I","then"]},{"Key":"I no","Fragments":["longer"]},{"Key":"no longer","Fragments":["needed"]},{"Key":"longer needed","Fragments":["it."]},{"Key":" implicits","Fragments":["are"]},{"Key":"implicits are","Fragments":["fine"]},{"Key":"are fine","Fragments":["when","then.","in"]},{"Key":"fine when","Fragments":["used"]},{"Key":"when used","Fragments":["in"]},{"Key":" Here","Fragments":["you","is","is","it","I'm"]},{"Key":"Here you","Fragments":["have","could"]},{"Key":"little DSL","Fragments":["as",":-)"]},{"Key":"DSL as","Fragments":["a"]},{"Key":"a result","Fragments":["which"]},{"Key":"result which","Fragments":["is"]},{"Key":"btw, there","Fragments":["is"]},{"Key":"also ```mapValues```","Fragments":["for"]},{"Key":"```mapValues``` for","Fragments":["simplification."]},{"Key":"I'm just","Fragments":["playing","submitting","starting","wondering","getting","using","wondering","wondering","wondering","learning"]},{"Key":"just playing","Fragments":["around"]},{"Key":"playing around","Fragments":["with"]},{"Key":"around with","Fragments":["implicits,"]},{"Key":"with implicits,","Fragments":["not"]},{"Key":"implicits, not","Fragments":["that"]},{"Key":"that I'd","Fragments":["necessarily"]},{"Key":"I'd necessarily","Fragments":["recommend"]},{"Key":"necessarily recommend","Fragments":["this"]},{"Key":"recommend this","Fragments":["as"]},{"Key":"this as","Fragments":["it","a","defining","a","a","`.filter","a"]},{"Key":"it adds","Fragments":["more","to","more"]},{"Key":"adds more","Fragments":["language","to"]},{"Key":"more language","Fragments":["features"]},{"Key":"language features","Fragments":["with"]},{"Key":"features with","Fragments":["out"]},{"Key":"with out","Fragments":["too","the"]},{"Key":"out too","Fragments":["much"]},{"Key":"much (any?)","Fragments":["benefit"]},{"Key":"(any?) benefit","Fragments":["."]},{"Key":"benefit .","Fragments":["Also"]},{"Key":". Also","Fragments":["adding"]},{"Key":"Also adding","Fragments":["a"]},{"Key":"adding a","Fragments":["groupBy","comment"]},{"Key":"a groupBy","Fragments":["version.","and"]},{"Key":"you also","Fragments":["do","do","provide","do","do","do","do","do","do","might","don't","do","do","separate","rewrite","provide","provide"]},{"Key":"it ```@rosalinda```ursively?","Fragments":[":-)"]},{"Key":"my \"elegant\"","Fragments":["solution;)"]},{"Key":"found one:","Fragments":["word.exists(_.isLetter)"]},{"Key":" Well","Fragments":["doing","I","the","the"]},{"Key":"Well doing","Fragments":["one"]},{"Key":"doing one","Fragments":["huge"]},{"Key":"one huge","Fragments":["regular"]},{"Key":"huge regular","Fragments":["expression"]},{"Key":"expression would","Fragments":["make","be"]},{"Key":"it harder","Fragments":["to","for","to"]},{"Key":"what that","Fragments":["regular","meant)"]},{"Key":"that regular","Fragments":["expression","expressions"]},{"Key":" Look","Fragments":["at","at"]},{"Key":"Look at","Fragments":["Martin's","it,","my","```zip```","mine.","the"]},{"Key":"at Martin's","Fragments":["solution:"]},{"Key":"Martin's solution:","Fragments":["query.matches(\"([\\d\\W][A-Z]+[\\d\\W])+\")."]},{"Key":"solution: query.matches(\"([\\d\\W][A-Z]+[\\d\\W])+\").","Fragments":["Can"]},{"Key":"query.matches(\"([\\d\\W][A-Z]+[\\d\\W])+\"). Can","Fragments":["you"]},{"Key":"you tell","Fragments":["what"]},{"Key":"tell what","Fragments":["it"]},{"Key":" Ideally'd","Fragments":["like"]},{"Key":"Ideally'd like","Fragments":["a"]},{"Key":"check whether","Fragments":["a","a","hasLetter?"]},{"Key":"string contains","Fragments":["a","at"]},{"Key":"contains a","Fragments":["letter","lowercase"]},{"Key":"a letter","Fragments":["without","in"]},{"Key":"letter without","Fragments":["using"]},{"Key":"without using","Fragments":["regexp.","```map```,","iteration","a"]},{"Key":" ```seemsAngry```","Fragments":["seem"]},{"Key":"```seemsAngry``` seem","Fragments":["to"]},{"Key":"to complex,","Fragments":["why"]},{"Key":"complex, why","Fragments":["not"]},{"Key":"use regular","Fragments":["expressions","expressions?!"]},{"Key":"expressions only,","Fragments":["since"]},{"Key":"only, since","Fragments":["you"]},{"Key":"since you","Fragments":["use","have","have","can","are","call","look","basically","are"]},{"Key":"it anyway?","Fragments":["BTW"]},{"Key":"anyway? BTW","Fragments":["I"]},{"Key":"BTW I","Fragments":["really","like"]},{"Key":"really liked","Fragments":["the","that.","that."]},{"Key":"the trick","Fragments":["with","here."]},{"Key":"trick with","Fragments":["```sentence.toUpperCase","toUppercase.","sorted.","using"]},{"Key":"with ```sentence.toUpperCase","Fragments":["=="]},{"Key":"```sentence.toUpperCase ==","Fragments":["sentence```"]},{"Key":" almost","Fragments":["there.","fine"]},{"Key":"almost there.","Fragments":[":-)"]},{"Key":" ```require```","Fragments":["allows"]},{"Key":"```require``` allows","Fragments":["you"]},{"Key":"to specify","Fragments":["a","that","this"]},{"Key":"specify a","Fragments":["message"]},{"Key":"message String","Fragments":["to"]},{"Key":"include in","Fragments":["the"]},{"Key":"the ```IllegalArgumentException```","Fragments":["that"]},{"Key":"```IllegalArgumentException``` that","Fragments":["is"]},{"Key":"is then","Fragments":["thrown.","the","partially","immediately"]},{"Key":"thought you","Fragments":["do","meant","write"]},{"Key":"the ```++```","Fragments":["on","operation"]},{"Key":"```++``` on","Fragments":["the"]},{"Key":"of ```mapValues```.","Fragments":["Does"]},{"Key":"```mapValues```. Does","Fragments":["your"]},{"Key":"Does your","Fragments":["code","sorted"]},{"Key":"code really","Fragments":["work"]},{"Key":"really work","Fragments":["this"]},{"Key":"work this","Fragments":["way?"]},{"Key":"Oh, I","Fragments":["missed","also"]},{"Key":"I missed","Fragments":["the","that","it."]},{"Key":"missed the","Fragments":["Sorted","point"]},{"Key":"the Sorted","Fragments":["Map!"]},{"Key":"Sorted Map!","Fragments":["Nice,"]},{"Key":"Map! Nice,","Fragments":["thanks!"]},{"Key":"Nice, thanks!","Fragments":["Clever"]},{"Key":"thanks! Clever","Fragments":["idea"]},{"Key":"It runs","Fragments":["fine,"]},{"Key":"runs fine,","Fragments":["and"]},{"Key":"fine, and","Fragments":["passes","some"]},{"Key":"and passes","Fragments":["all"]},{"Key":"It's worth","Fragments":["noting"]},{"Key":"worth noting","Fragments":["that"]},{"Key":"noting that","Fragments":["`db.mapValues(_.sorted)`","the"]},{"Key":"that `db.mapValues(_.sorted)`","Fragments":["is"]},{"Key":"`db.mapValues(_.sorted)` is","Fragments":["only"]},{"Key":"only sorting","Fragments":["the"]},{"Key":"the values,","Fragments":["not"]},{"Key":"values, not","Fragments":["the"]},{"Key":"not the","Fragments":["keys,","class?","optimal","ultimate","point","most","cleanest","whole","whole","desired"]},{"Key":"the keys,","Fragments":["so"]},{"Key":"keys, so","Fragments":["I'm"]},{"Key":"I'm using","Fragments":["`SortedMap`","a","just"]},{"Key":"using `SortedMap`","Fragments":["to"]},{"Key":"`SortedMap` to","Fragments":["keep"]},{"Key":"the key","Fragments":["list"]},{"Key":"key list","Fragments":["sorted.","that"]},{"Key":"I were","Fragments":["using","to"]},{"Key":"were using","Fragments":["an","a"]},{"Key":"an ordinary","Fragments":["`Map`,"]},{"Key":"ordinary `Map`,","Fragments":["and"]},{"Key":"`Map`, and","Fragments":["not"]},{"Key":"a `SortedMap`,","Fragments":["this","you","but"]},{"Key":"`SortedMap`, this","Fragments":["would"]},{"Key":"would fail","Fragments":["on","for"]},{"Key":"fail on","Fragments":["the"]},{"Key":" Does","Fragments":["your","anyone"]},{"Key":"your sorted","Fragments":["function"]},{"Key":"sorted function","Fragments":["work?","on"]},{"Key":"function work?","Fragments":["I"]},{"Key":"work? I","Fragments":["tried"]},{"Key":"I tried","Fragments":["with","to","variations","other","to","that","to","to","to","compiling","to","something","defining","with","nevertheless","to"]},{"Key":"tried with","Fragments":["just","longer"]},{"Key":"just sorting","Fragments":["the","the"]},{"Key":"map values","Fragments":["and"]},{"Key":"values and","Fragments":["received","giving"]},{"Key":"and received","Fragments":["an"]},{"Key":"received an","Fragments":["error"]},{"Key":"error on","Fragments":["the","my"]},{"Key":"last test.","Fragments":["Did"]},{"Key":"test. Did","Fragments":["you"]},{"Key":"Did you","Fragments":["get","ever","find","run"]},{"Key":"get stuck","Fragments":["here?"]},{"Key":" this","Fragments":["doesn't","is","idea","implicit","looks","is","is","case","is","```Position(-1,"]},{"Key":"doesn't use","Fragments":["functional"]},{"Key":"use functional","Fragments":["programming,"]},{"Key":"functional programming,","Fragments":["I"]},{"Key":"programming, I","Fragments":["would"]},{"Key":"would suggest","Fragments":["using","using"]},{"Key":"suggest using","Fragments":["pattern","pattern"]},{"Key":"would type","Fragments":["annotate"]},{"Key":"type annotate","Fragments":["the","public"]},{"Key":"the hey","Fragments":["function,"]},{"Key":"hey function,","Fragments":["to"]},{"Key":"function, to","Fragments":["explicitly"]},{"Key":"explicitly reference","Fragments":["that"]},{"Key":"reference that","Fragments":["you're"]},{"Key":"that you're","Fragments":["returning","doing"]},{"Key":"you're returning","Fragments":["a"]},{"Key":"Your implementation","Fragments":["has","does"]},{"Key":"implementation has","Fragments":["the"]},{"Key":"has the","Fragments":["same","[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)","\"companion","best","object","additional","main","`isShout`"]},{"Key":"same issue","Fragments":["mine"]},{"Key":"issue mine","Fragments":["has,"]},{"Key":"mine has,","Fragments":["which"]},{"Key":"has, which","Fragments":["is"]},{"Key":"that passing","Fragments":["the"]},{"Key":"passing the","Fragments":["tests","first","tests"]},{"Key":"tests depends","Fragments":["on"]},{"Key":"on getting","Fragments":["the","a"]},{"Key":"getting the","Fragments":["ordering","impression"]},{"Key":"if tests","Fragments":["correct."]},{"Key":"tests correct.","Fragments":["I'm"]},{"Key":"correct. I'm","Fragments":["hoping"]},{"Key":"I'm hoping","Fragments":["to","to"]},{"Key":"hoping to","Fragments":["come","kill","do"]},{"Key":"to come","Fragments":["up","back","up","up","later."]},{"Key":"come up","Fragments":["with","with","with","with.","with","with"]},{"Key":"a purer","Fragments":["approach"]},{"Key":"purer approach","Fragments":["that"]},{"Key":"that won't","Fragments":["accidentally"]},{"Key":"won't accidentally","Fragments":["break"]},{"Key":"accidentally break","Fragments":["if"]},{"Key":"break if","Fragments":["someone"]},{"Key":"if someone","Fragments":["reorders","inputs","could"]},{"Key":"someone reorders","Fragments":["the"]},{"Key":"reorders the","Fragments":["branches."]},{"Key":"the internal","Fragments":["method","traverse","Map."]},{"Key":"internal method","Fragments":["definitions"]},{"Key":"method definitions","Fragments":["with"]},{"Key":"definitions with","Fragments":["the"]},{"Key":"the reference","Fragments":["to","is"]},{"Key":"to msg","Fragments":["coming"]},{"Key":"msg coming","Fragments":["from"]},{"Key":"the external","Fragments":["block."]},{"Key":"external block.","Fragments":["That"]},{"Key":"block. That","Fragments":["allows"]},{"Key":"That allows","Fragments":["for"]},{"Key":"allows for","Fragments":["some"]},{"Key":"some cleaner","Fragments":["branch"]},{"Key":"cleaner branch","Fragments":["logic."]},{"Key":" You're","Fragments":["not","right,","repeating","right,","right.","right","right,"]},{"Key":"You're not","Fragments":["consistent"]},{"Key":"not consistent","Fragments":["about"]},{"Key":"consistent about","Fragments":["using"]},{"Key":"using '.'","Fragments":["vs"]},{"Key":"'.' vs","Fragments":["suffix"]},{"Key":"vs suffix","Fragments":["notation"]},{"Key":"suffix notation","Fragments":["to"]},{"Key":"notation to","Fragments":["invoke"]},{"Key":"to invoke","Fragments":["method"]},{"Key":"invoke method","Fragments":["calls."]},{"Key":"method calls.","Fragments":["This"]},{"Key":"calls. This","Fragments":["can"]},{"Key":"This can","Fragments":["bite"]},{"Key":"can bite","Fragments":["you"]},{"Key":"bite you","Fragments":["on"]},{"Key":"you on","Fragments":["the"]},{"Key":"the ass","Fragments":["later"]},{"Key":"ass later","Fragments":["and"]},{"Key":"later and","Fragments":["I"]},{"Key":"would strongly","Fragments":["suggest"]},{"Key":"strongly suggest","Fragments":["you"]},{"Key":"suggest you","Fragments":["adopt"]},{"Key":"you adopt","Fragments":["a"]},{"Key":"adopt a","Fragments":["specific"]},{"Key":"specific style","Fragments":["that"]},{"Key":"style that","Fragments":["you"]},{"Key":"you adhere","Fragments":["to"]},{"Key":"adhere to","Fragments":["rigorously."]},{"Key":"to rigorously.","Fragments":["Specifically"]},{"Key":"rigorously. Specifically","Fragments":["on"]},{"Key":"Specifically on","Fragments":["line"]},{"Key":"line 3","Fragments":["you","-","you"]},{"Key":"3 you","Fragments":["use","put"]},{"Key":"the '.'","Fragments":["and"]},{"Key":"'.' and","Fragments":["then"]},{"Key":"then on","Fragments":["line","no"]},{"Key":"4 you","Fragments":["use"]},{"Key":"use suffix","Fragments":["notation."]},{"Key":"suffix notation.","Fragments":["Typically"]},{"Key":"notation. Typically","Fragments":["the"]},{"Key":"Typically the","Fragments":["house"]},{"Key":"the house","Fragments":["style"]},{"Key":"house style","Fragments":["at"]},{"Key":"style at","Fragments":["places"]},{"Key":"at places","Fragments":["with"]},{"Key":"places with","Fragments":["a"]},{"Key":"of Scala","Fragments":["development","quite","I","I'd","primitive","primitive","is"]},{"Key":"Scala development","Fragments":["is"]},{"Key":"development is","Fragments":["to"]},{"Key":"to favor","Fragments":["dot-notation."]},{"Key":"favor dot-notation.","Fragments":["The"]},{"Key":"dot-notation. The","Fragments":["Scala"]},{"Key":"style guide","Fragments":["also","for","e.g."]},{"Key":"guide also","Fragments":["has"]},{"Key":"also has","Fragments":["something","the"]},{"Key":"has something","Fragments":["to","called"]},{"Key":"something to","Fragments":["say","be","do","think","consider.","store"]},{"Key":"about this:","Fragments":["http://docs.scala-lang.org/style/method-invocation.html"]},{"Key":"the parens","Fragments":["after","around","for"]},{"Key":"parens after","Fragments":["Bob(),","`.count`"]},{"Key":"after Bob(),","Fragments":["and"]},{"Key":"Bob(), and","Fragments":["I"]},{"Key":"wouldn't recommend","Fragments":["them"]},{"Key":"recommend them","Fragments":["in"]},{"Key":"case since","Fragments":["they"]},{"Key":"they distract","Fragments":["(my"]},{"Key":"distract (my","Fragments":["opinion)."]},{"Key":"I broke","Fragments":["this","things"]},{"Key":"broke this","Fragments":["in"]},{"Key":"this in","Fragments":["my","Scala.","company","Scala's","FP","REPL","C!"]},{"Key":"own code","Fragments":["and","after,"]},{"Key":"and plan","Fragments":["to"]},{"Key":"plan to","Fragments":["fix","revisit"]},{"Key":"fix it,","Fragments":["but"]},{"Key":"it, but","Fragments":["many","there's","my","this"]},{"Key":"but many","Fragments":["style"]},{"Key":"many style","Fragments":["guides"]},{"Key":"style guides","Fragments":["for","you'll"]},{"Key":"guides for","Fragments":["languages"]},{"Key":"for languages","Fragments":["that"]},{"Key":"languages that","Fragments":["use"]},{"Key":"that use","Fragments":["block-based","immutable"]},{"Key":"use block-based","Fragments":["branches"]},{"Key":"block-based branches","Fragments":["(ie,"]},{"Key":"branches (ie,","Fragments":["braces"]},{"Key":"(ie, braces","Fragments":["around"]},{"Key":"around each","Fragments":["branch)"]},{"Key":"each branch)","Fragments":["but"]},{"Key":"branch) but","Fragments":["allow"]},{"Key":"but allow","Fragments":["for"]},{"Key":"allow for","Fragments":["single-expression","digits:","consecutive","different"]},{"Key":"for single-expression","Fragments":["blocks"]},{"Key":"single-expression blocks","Fragments":["is"]},{"Key":"blocks is","Fragments":["to"]},{"Key":"to always","Fragments":["use","use","use","use","sum"]},{"Key":"always use","Fragments":["braces","the","different","what"]},{"Key":"use braces","Fragments":["anyway."]},{"Key":"braces anyway.","Fragments":["This"]},{"Key":"anyway. This","Fragments":["does"]},{"Key":"This does","Fragments":["create"]},{"Key":"does create","Fragments":["more"]},{"Key":"create more","Fragments":["LOC"]},{"Key":"more LOC","Fragments":["without"]},{"Key":"LOC without","Fragments":["much"]},{"Key":"without much","Fragments":["immediate"]},{"Key":"much immediate","Fragments":["benefit,"]},{"Key":"immediate benefit,","Fragments":["but"]},{"Key":"benefit, but","Fragments":["future"]},{"Key":"but future","Fragments":["maintainers"]},{"Key":"future maintainers","Fragments":["(possibly"]},{"Key":"maintainers (possibly","Fragments":["yourself)"]},{"Key":"(possibly yourself)","Fragments":["will"]},{"Key":"yourself) will","Fragments":["thank"]},{"Key":"will thank","Fragments":["you"]},{"Key":"you because","Fragments":["they"]},{"Key":"because they","Fragments":["won't","are","are","are,","are"]},{"Key":"they won't","Fragments":["have","calculate"]},{"Key":"won't have","Fragments":["to","to","to"]},{"Key":"to introduce","Fragments":["these","some"]},{"Key":"introduce these","Fragments":["braces"]},{"Key":"these braces","Fragments":["when"]},{"Key":"when your","Fragments":["branch"]},{"Key":"your branch","Fragments":["logic"]},{"Key":"branch logic","Fragments":["grows"]},{"Key":"logic grows","Fragments":["more"]},{"Key":"grows more","Fragments":["complex."]},{"Key":"more complex.","Fragments":["Also"]},{"Key":"complex. Also","Fragments":["you"]},{"Key":"you categorically","Fragments":["avoid"]},{"Key":"categorically avoid","Fragments":["the"]},{"Key":"the error","Fragments":["you","handling","\"/scala/hamming/src/test/scala/hamming_test.scala:5:","is","check"]},{"Key":"error you","Fragments":["often"]},{"Key":"you often","Fragments":["see"]},{"Key":"often see","Fragments":["in"]},{"Key":"see in","Fragments":["such","the"]},{"Key":"in such","Fragments":["languages"]},{"Key":"such languages","Fragments":["where"]},{"Key":"languages where","Fragments":["you"]},{"Key":"have code","Fragments":["like"]},{"Key":"code like","Fragments":["this:"]},{"Key":"And now","Fragments":["you"]},{"Key":"a bug,","Fragments":["because"]},{"Key":"bug, because","Fragments":["two()"]},{"Key":"because two()","Fragments":["is"]},{"Key":"two() is","Fragments":["executed"]},{"Key":"is executed","Fragments":["regardless","you","only"]},{"Key":"executed regardless","Fragments":["of"]},{"Key":"regardless of","Fragments":["foo's","a"]},{"Key":"of foo's","Fragments":["evaluation."]},{"Key":" explicit","Fragments":["IllegalArgumentException"]},{"Key":"explicit IllegalArgumentException","Fragments":["can"]},{"Key":"IllegalArgumentException can","Fragments":["be"]},{"Key":"by require(a.length","Fragments":["=="]},{"Key":"require(a.length ==","Fragments":["b.length)"]},{"Key":" Yours","Fragments":["is"]},{"Key":"Yours is","Fragments":["my","a"]},{"Key":"my favorite","Fragments":["submission","solution"]},{"Key":"favorite submission","Fragments":["so"]},{"Key":"submission so","Fragments":["far."]},{"Key":"so far.","Fragments":["I'm","Good"]},{"Key":"far. I'm","Fragments":["learning"]},{"Key":"I'm learning","Fragments":["scala","Scala,"]},{"Key":"learning scala","Fragments":["and","and"]},{"Key":"scala and","Fragments":["yours","haven't"]},{"Key":"and yours","Fragments":["has"]},{"Key":"yours has","Fragments":["all"]},{"Key":"has all","Fragments":["the"]},{"Key":"the tricks","Fragments":["I've"]},{"Key":"tricks I've","Fragments":["seen"]},{"Key":"I've seen","Fragments":["in","today","use","but","other","on","a"]},{"Key":"seen in","Fragments":["other"]},{"Key":"in other","Fragments":["submissions,","great","languages","cases"]},{"Key":"other submissions,","Fragments":["but"]},{"Key":"submissions, but","Fragments":["remains"]},{"Key":"but remains","Fragments":["readable."]},{"Key":" flatMap","Fragments":["produces"]},{"Key":"flatMap produces","Fragments":["a"]},{"Key":"produces a","Fragments":["map,"]},{"Key":"a map,","Fragments":["not","not","but"]},{"Key":"map, not","Fragments":["a","a"]},{"Key":"a Traversable[A,","Fragments":["B],"]},{"Key":"Traversable[A, B],","Fragments":["so"]},{"Key":"B], so","Fragments":["there"]},{"Key":"to load","Fragments":["the"]},{"Key":"load the","Fragments":["mappings"]},{"Key":"the mappings","Fragments":["into"]},{"Key":"mappings into","Fragments":["a"]},{"Key":"I preferred","Fragments":["the","both"]},{"Key":"preferred the","Fragments":["for-comprehension"]},{"Key":"the for-comprehension","Fragments":["over","(and","you","it"]},{"Key":"for-comprehension over","Fragments":["using"]},{"Key":"over using","Fragments":["flatMap+map"]},{"Key":"using flatMap+map","Fragments":["for"]},{"Key":"flatMap+map for","Fragments":["readability"]},{"Key":" Pls","Fragments":["never","don't","try","don't"]},{"Key":"Pls never","Fragments":["use"]},{"Key":"never use","Fragments":["\"return\"","\"null\"","\"null\"","```return```"]},{"Key":"use \"return\"","Fragments":["in","in"]},{"Key":"Scala! Scala","Fragments":["is"]},{"Key":"really no","Fragments":["(?!)"]},{"Key":"no (?!)","Fragments":["need"]},{"Key":"(?!) need","Fragments":["for"]},{"Key":"might use","Fragments":["Scala","the","val's"]},{"Key":"Scala String","Fragments":["interpolation","interpolation","interpolation."]},{"Key":"Nice way","Fragments":["of","of"]},{"Key":"of composing","Fragments":["AtomicInteger"]},{"Key":"composing AtomicInteger","Fragments":["and"]},{"Key":"AtomicInteger and","Fragments":["Option."]},{"Key":"a purely","Fragments":["clean-code"]},{"Key":"purely clean-code","Fragments":["driven"]},{"Key":"clean-code driven","Fragments":["instinct,"]},{"Key":"driven instinct,","Fragments":["I'd"]},{"Key":"instinct, I'd","Fragments":["say"]},{"Key":"I'd say","Fragments":["you"]},{"Key":"say you","Fragments":["could","have"]},{"Key":"of values/methods/functions","Fragments":["here,"]},{"Key":"values/methods/functions here,","Fragments":["for"]},{"Key":"here, for","Fragments":["easier"]},{"Key":"for easier","Fragments":["readability.","readability.","reading."]},{"Key":"Avoid `if","Fragments":["else`"]},{"Key":"`if else`","Fragments":["idiom","chain"]},{"Key":"else` idiom","Fragments":["in"]},{"Key":"idiom in","Fragments":["scala,","scala,"]},{"Key":"scala, use","Fragments":["pattern"]},{"Key":" `instruction.replaceAll(\"[A-Za-z]\",","Fragments":["\"\")"]},{"Key":"`instruction.replaceAll(\"[A-Za-z]\", \"\")","Fragments":["!="]},{"Key":"\"\") !=","Fragments":["instruction`"]},{"Key":"!= instruction`","Fragments":["is"]},{"Key":"instruction` is","Fragments":["a"]},{"Key":"a obfuscated","Fragments":["way"]},{"Key":"obfuscated way","Fragments":["of"]},{"Key":"doing checking","Fragments":["`instruction.exists(_.isLetter)`"]},{"Key":"checking `instruction.exists(_.isLetter)`","Fragments":["right??"]},{"Key":" Method","Fragments":["hey","`isShout`","`hey`"]},{"Key":"Method hey","Fragments":["wraps"]},{"Key":"hey wraps","Fragments":["expression"]},{"Key":"wraps expression","Fragments":["in"]},{"Key":"in unnecessary","Fragments":["curly"]},{"Key":"unnecessary curly","Fragments":["braces."]},{"Key":"Thanks samthebest,","Fragments":["we"]},{"Key":"samthebest, we","Fragments":["decided"]},{"Key":"we decided","Fragments":["to"]},{"Key":"just punt","Fragments":["the"]},{"Key":"punt the","Fragments":["java"]},{"Key":"the java","Fragments":["solution"]},{"Key":"java solution","Fragments":["and"]},{"Key":"solution and","Fragments":["see","you","did","I","the","I","the","included"]},{"Key":"and see","Fragments":["what","if","how"]},{"Key":"see what","Fragments":["feedback","worked","others"]},{"Key":"what feedback","Fragments":["we"]},{"Key":"feedback we","Fragments":["got."]},{"Key":"we got.","Fragments":["I'll"]},{"Key":"got. I'll","Fragments":["update"]},{"Key":"I'll update","Fragments":["this","the"]},{"Key":"update this","Fragments":["along"]},{"Key":"this along","Fragments":["the"]},{"Key":"along the","Fragments":["lines"]},{"Key":"the lines","Fragments":["you","differently.","of"]},{"Key":"lines you","Fragments":["mentioned."]},{"Key":" instead","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"of ```map/flatten```:","Fragments":["use"]},{"Key":"```map/flatten```: use","Fragments":["```flatMap```?"]},{"Key":"use ```flatMap```?","Fragments":[":-)"]},{"Key":"another solution","Fragments":["you","which","you","you","you","using","you","later.","which","you"]},{"Key":"Yes, As","Fragments":["requested"]},{"Key":"As requested","Fragments":[":)"]},{"Key":" hardcoded","Fragments":["constants,"]},{"Key":"hardcoded constants,","Fragments":["duplicated"]},{"Key":"constants, duplicated","Fragments":["constants"]},{"Key":"duplicated constants","Fragments":[":))))"]},{"Key":" tried","Fragments":["to"]},{"Key":"tried to","Fragments":["do","translate","pick","one-line","use","be","convert","do","simplify","keep","use","use","do"]},{"Key":"with tail","Fragments":["recursive"]},{"Key":" Oftentimes","Fragments":["in"]},{"Key":"Oftentimes in","Fragments":["FP"]},{"Key":"FP it","Fragments":["pays"]},{"Key":"it pays","Fragments":["off","off"]},{"Key":"pays off","Fragments":["to","to"]},{"Key":"off to","Fragments":["go","make"]},{"Key":"most general","Fragments":["solution.","type"]},{"Key":"general solution.","Fragments":["In"]},{"Key":"solution. In","Fragments":["this","my"]},{"Key":"make use","Fragments":["of","of","of","of","of","of"]},{"Key":"a Range","Fragments":["is","as","to","for","as","like","there","is","like","```'a'"]},{"Key":"Range is","Fragments":["also","\"(0"]},{"Key":"Seq. For","Fragments":["example"]},{"Key":"For example","Fragments":["(copied","using","the","`statement.exists(_.isAlpha)`"]},{"Key":"example (copied","Fragments":["from"]},{"Key":"(copied from","Fragments":["my"]},{"Key":" ``def","Fragments":["oneOf[T](ts:"]},{"Key":"``def oneOf[T](ts:","Fragments":["Seq[T]):"]},{"Key":"oneOf[T](ts: Seq[T]):","Fragments":["T"]},{"Key":"Seq[T]): T","Fragments":["="]},{"Key":"T =","Fragments":["ts(random.nextInt(ts.size))``"]},{"Key":"also pass","Fragments":["a"]},{"Key":"pass a","Fragments":["Range","mutable"]},{"Key":"Range as","Fragments":["an","a"]},{"Key":"an argument","Fragments":["to","for"]},{"Key":"to oneOf.","Fragments":["You"]},{"Key":"oneOf. You","Fragments":["get"]},{"Key":"My full","Fragments":["solution"]},{"Key":"full solution","Fragments":["for"]},{"Key":"the details:","Fragments":["http://exercism.io/submissions/98006e5f1c93457db3b39faab1f56737"]},{"Key":"wonder why","Fragments":["you","```unfold```","you've"]},{"Key":"prefer using","Fragments":["Robot.newName()"]},{"Key":"using Robot.newName()","Fragments":["instead"]},{"Key":"Robot.newName() instead","Fragments":["of"]},{"Key":"of Robot._","Fragments":["import?"]},{"Key":"With generalisation","Fragments":["you"]},{"Key":"generalisation you","Fragments":["can"]},{"Key":"try something","Fragments":["that","a"]},{"Key":"something that","Fragments":["will","doesn't","is"]},{"Key":"will take","Fragments":["NumericRange.Inclusive","to"]},{"Key":"take NumericRange.Inclusive","Fragments":["as"]},{"Key":"NumericRange.Inclusive as","Fragments":["parameter"]},{"Key":"as parameter","Fragments":["(this","in"]},{"Key":"parameter (this","Fragments":["is"]},{"Key":"(this is","Fragments":["basically"]},{"Key":"is basically","Fragments":["('a'","a"]},{"Key":"basically ('a'","Fragments":["to"]},{"Key":"('a' to","Fragments":["'z')","'z')"]},{"Key":"to 'z')","Fragments":["or","too)"]},{"Key":"'z') or","Fragments":["('1'"]},{"Key":"or ('1'","Fragments":["to"]},{"Key":"('1' to","Fragments":["'9')"]},{"Key":"to '9')","Fragments":["and"]},{"Key":"'9') and","Fragments":["use"]},{"Key":"it instead","Fragments":["of","of"]},{"Key":"of hardcoded","Fragments":["ranges","mappings"]},{"Key":"hardcoded ranges","Fragments":["(you"]},{"Key":"ranges (you","Fragments":["can"]},{"Key":"check its","Fragments":["length"]},{"Key":"its length","Fragments":["too!)"]},{"Key":" Second","Fragments":["implementation","iteration:"]},{"Key":"Second implementation","Fragments":["using"]},{"Key":"implementation using","Fragments":["a","a"]},{"Key":"companion object.","Fragments":["Still","Not","That's","This"]},{"Key":"object. Still","Fragments":["not"]},{"Key":"Still not","Fragments":["sure"]},{"Key":"sure how","Fragments":["to","common","to","to.","yet.","that"]},{"Key":"to generalise","Fragments":["the"]},{"Key":"generalise the","Fragments":["randomXXX"]},{"Key":"the randomXXX","Fragments":["functions"]},{"Key":"randomXXX functions","Fragments":["by"]},{"Key":"functions by","Fragments":["passing"]},{"Key":"Range to","Fragments":["them."]},{"Key":" Sure.","Fragments":["But"]},{"Key":"Sure. But","Fragments":["I"]},{"Key":"I hadn't","Fragments":["known","considered."]},{"Key":"hadn't known","Fragments":["about"]},{"Key":"known about","Fragments":["them"]},{"Key":"about them","Fragments":["when"]},{"Key":"them when","Fragments":["I","it's"]},{"Key":"I posted","Fragments":["that."]},{"Key":"posted that.","Fragments":[":-)"]},{"Key":"Would not","Fragments":["better"]},{"Key":"not better","Fragments":["using","use"]},{"Key":"better using","Fragments":["Enumeration","explanatory"]},{"Key":"using Enumeration","Fragments":["instead"]},{"Key":"Enumeration instead","Fragments":["of"]},{"Key":"of case","Fragments":["objects?","checking"]},{"Key":"Great idea","Fragments":["to"]},{"Key":"to sort","Fragments":["the","yourself"]},{"Key":"sort the","Fragments":["triplet,","map?","upper-cased","input."]},{"Key":"the triplet,","Fragments":["I"]},{"Key":"triplet, I","Fragments":["didn't"]},{"Key":"didn't think","Fragments":["of","of","of","that"]},{"Key":"you so","Fragments":["much"]},{"Key":"feedback. I've","Fragments":["made"]},{"Key":"I've made","Fragments":["some","an","the"]},{"Key":"made some","Fragments":["changes."]},{"Key":"some changes.","Fragments":["What"]},{"Key":"changes. What","Fragments":["do"]},{"Key":"First a","Fragments":["small"]},{"Key":"a small","Fragments":["naming","change","enhancment","problem.","performance","nitpick."]},{"Key":"small naming","Fragments":["convention"]},{"Key":"naming convention","Fragments":["thing,","is","to","is"]},{"Key":"convention thing,","Fragments":["in"]},{"Key":"thing, in","Fragments":["Scala"]},{"Key":"Scala it","Fragments":["is"]},{"Key":"is customary","Fragments":["to"]},{"Key":"customary to","Fragments":["use"]},{"Key":"use camelCase","Fragments":["for"]},{"Key":"camelCase for","Fragments":["methods,","variable"]},{"Key":"for methods,","Fragments":["`val`'s"]},{"Key":"methods, `val`'s","Fragments":["and"]},{"Key":"`val`'s and","Fragments":["`var`'s,"]},{"Key":"and `var`'s,","Fragments":["see"]},{"Key":"`var`'s, see","Fragments":["[here](http://docs.scala-lang.org/style/naming-conventions.html)"]},{"Key":"see [here](http://docs.scala-lang.org/style/naming-conventions.html)","Fragments":["for"]},{"Key":"[here](http://docs.scala-lang.org/style/naming-conventions.html) for","Fragments":["the"]},{"Key":"the details.","Fragments":["Next"]},{"Key":"details. Next","Fragments":["Scala"]},{"Key":"Next Scala","Fragments":["has"]},{"Key":"Scala has","Fragments":["the","the","a","something","to","its","very","its"]},{"Key":"makes your","Fragments":["two"]},{"Key":"two `validate_...`","Fragments":["methods"]},{"Key":"`validate_...` methods","Fragments":["superfluous."]},{"Key":"methods superfluous.","Fragments":["The"]},{"Key":"superfluous. The","Fragments":["`if`"]},{"Key":"The `if`","Fragments":["expression"]},{"Key":"`if` expression","Fragments":["is","is"]},{"Key":"is superfluous","Fragments":["as","as"]},{"Key":"superfluous as","Fragments":["well","Scala"]},{"Key":"well `count`","Fragments":["will"]},{"Key":"`count` will","Fragments":["return"]},{"Key":"return `0`","Fragments":["if"]},{"Key":"`0` if","Fragments":["no"]},{"Key":"if no","Fragments":["matching","letters"]},{"Key":"no matching","Fragments":["`nucleotide`"]},{"Key":"matching `nucleotide`","Fragments":["is"]},{"Key":"`nucleotide` is","Fragments":["found."]},{"Key":"is found.","Fragments":["You"]},{"Key":"found. You","Fragments":["might"]},{"Key":"also consider","Fragments":["changing","to","using","either","to","defining","declaring","having","using","having","having"]},{"Key":"consider changing","Fragments":["the","the"]},{"Key":"the `dna_nucleotides`","Fragments":["and"]},{"Key":"`dna_nucleotides` and","Fragments":["`all_nucleotides`"]},{"Key":"and `all_nucleotides`","Fragments":["to"]},{"Key":"`all_nucleotides` to","Fragments":["`val`'s."]},{"Key":"try rewriting","Fragments":["the"]},{"Key":"rewriting the","Fragments":["`foreach`"]},{"Key":"the `foreach`","Fragments":["loop"]},{"Key":"`foreach` loop","Fragments":["that"]},{"Key":"loop that","Fragments":["uses"]},{"Key":"that uses","Fragments":["a","standard","filter","Random","it,"]},{"Key":"uses a","Fragments":["mutable","mutable"]},{"Key":"mutable value","Fragments":["to"]},{"Key":"value to","Fragments":["code","the","the","\"validatedNumber\""]},{"Key":"to code","Fragments":["that","it","so."]},{"Key":"uses standard","Fragments":["functions"]},{"Key":"standard functions","Fragments":["such"]},{"Key":"functions such","Fragments":["as"]},{"Key":"as `map`","Fragments":["and"]},{"Key":"and `filter`.","Fragments":["In"]},{"Key":"`filter`. In","Fragments":["general,"]},{"Key":"In general,","Fragments":["functional","I"]},{"Key":"general, functional","Fragments":["programs"]},{"Key":"functional programs","Fragments":["use"]},{"Key":"programs use","Fragments":["mutable"]},{"Key":"use mutable","Fragments":["variables","variables"]},{"Key":"mutable variables","Fragments":["as","if"]},{"Key":"variables as","Fragments":["little"]},{"Key":"as little","Fragments":["as"]},{"Key":"little as","Fragments":["possible."]},{"Key":"implement everything","Fragments":["yourself,"]},{"Key":"everything yourself,","Fragments":["like"]},{"Key":"yourself, like","Fragments":["```twoToPower```"]},{"Key":"like ```twoToPower```","Fragments":[":-)"]},{"Key":" @ruben:","Fragments":["I"]},{"Key":"@ruben: I","Fragments":["know,"]},{"Key":"know, but","Fragments":["it's","still"]},{"Key":"it's mostly","Fragments":["about"]},{"Key":"mostly about","Fragments":["skill"]},{"Key":"about skill","Fragments":["practicing,"]},{"Key":"skill practicing,","Fragments":["probably"]},{"Key":"practicing, probably","Fragments":["I"]},{"Key":"probably I","Fragments":["should","am"]},{"Key":"should do","Fragments":["one","it."]},{"Key":"do one","Fragments":["iteration"]},{"Key":"one iteration","Fragments":["with"]},{"Key":"iteration with","Fragments":["my"]},{"Key":"my implementations","Fragments":["and"]},{"Key":"implementations and","Fragments":["other"]},{"Key":"and other","Fragments":["with","side-effects?","immutable."]},{"Key":"other with","Fragments":["scala's"]},{"Key":"with scala's","Fragments":["tools."]},{"Key":" Fixed","Fragments":["types","some","wrongly","the","typo"]},{"Key":"Fixed types","Fragments":["in"]},{"Key":"types in","Fragments":["def","the"]},{"Key":"in def","Fragments":["decimalRecursion"]},{"Key":" oh","Fragments":["but"]},{"Key":"oh but","Fragments":["two"]},{"Key":"but two","Fragments":["small"]},{"Key":"two small","Fragments":["things:"]},{"Key":"should move","Fragments":["the"]},{"Key":"the regexes","Fragments":["outside","being","can"]},{"Key":"regexes outside","Fragments":["of"]},{"Key":"of hey(),","Fragments":["ideally"]},{"Key":"hey(), ideally","Fragments":["even"]},{"Key":"ideally even","Fragments":["to"]},{"Key":"even to","Fragments":["the"]},{"Key":"And shouting's","Fragments":["argument"]},{"Key":"shouting's argument","Fragments":["could"]},{"Key":"argument could","Fragments":["be"]},{"Key":"be removed,","Fragments":["using"]},{"Key":"removed, using","Fragments":["message"]},{"Key":"using message","Fragments":["directly"]},{"Key":"message directly","Fragments":["(or"]},{"Key":"directly (or","Fragments":["move"]},{"Key":"(or move","Fragments":["the"]},{"Key":"function outside","Fragments":["of"]},{"Key":"of hey()","Fragments":["as","so"]},{"Key":"hey() as","Fragments":["well"]},{"Key":"private or","Fragments":["to"]},{"Key":"thought of","Fragments":["2","Random.alphanumeric","it","using","2","it.)"]},{"Key":"of 2","Fragments":["different","up","different"]},{"Key":"2 different","Fragments":["approaches","approaches"]},{"Key":"different approaches","Fragments":["to","to"]},{"Key":"approaches to","Fragments":["solve","solve"]},{"Key":"1. The","Fragments":["first","first","outer"]},{"Key":"The first","Fragments":["is","predicate","is","attempt","assignment","if-clause","if","`if`"]},{"Key":"first is","Fragments":["to","to","because"]},{"Key":"compute differences","Fragments":["at","at"]},{"Key":"differences at","Fragments":["each","each"]},{"Key":"at each","Fragments":["index","lower","call.","character.","index"]},{"Key":"each index","Fragments":["and","and"]},{"Key":"index and","Fragments":["store","position","store"]},{"Key":"and store","Fragments":["it","it"]},{"Key":"store it","Fragments":["in","in"]},{"Key":"in differences","Fragments":["sequence.","sequence."]},{"Key":"differences sequence.","Fragments":["The","The"]},{"Key":"sequence. The","Fragments":["differences","differences"]},{"Key":"The differences","Fragments":["can","can"]},{"Key":"differences can","Fragments":["then","then"]},{"Key":"can then","Fragments":["be","use","use","also","be","utilize."]},{"Key":"be summed","Fragments":["to","to"]},{"Key":"summed to","Fragments":["get","get"]},{"Key":"get Hamming","Fragments":["distance.","distance."]},{"Key":"2. Second","Fragments":["is","is"]},{"Key":"Second is","Fragments":["to","to"]},{"Key":"use recursion","Fragments":["to","instead!","to","only."]},{"Key":"recursion to","Fragments":["maintain","check","it","maintain"]},{"Key":"to maintain","Fragments":["the","that","such","the","and"]},{"Key":"maintain the","Fragments":["distance","distance"]},{"Key":"the distance","Fragments":["state.","is","state."]},{"Key":"solution uses","Fragments":["first","second"]},{"Key":"uses first","Fragments":["approach."]},{"Key":"You got","Fragments":["the"]},{"Key":"got the","Fragments":["general","cache","tests","list"]},{"Key":"the general","Fragments":["idea","case,"]},{"Key":"Scala Collection","Fragments":["functions,","function","functions","functions","functions","functions","functions","functions","combinators","combinators","functions","functions"]},{"Key":"Collection functions,","Fragments":["and"]},{"Key":"functions, and","Fragments":["looks","show"]},{"Key":"and looks","Fragments":["already"]},{"Key":"looks already","Fragments":["quite"]},{"Key":"already quite","Fragments":["nice."]},{"Key":"quite nice.","Fragments":["But"]},{"Key":"nice. But","Fragments":["some"]},{"Key":"But some","Fragments":["remarks:"]},{"Key":"would prefer","Fragments":["less","fold","```drop```","if-else","four","having"]},{"Key":"prefer less","Fragments":["colorful"]},{"Key":"less colorful","Fragments":["but"]},{"Key":"colorful but","Fragments":["more"]},{"Key":"more descriptive","Fragments":["names,","names","like","variable"]},{"Key":"descriptive names,","Fragments":["e.g."]},{"Key":"names, e.g.","Fragments":["\"splitWords\""]},{"Key":"e.g. \"splitWords\"","Fragments":["or"]},{"Key":"\"splitWords\" or","Fragments":["\"words\""]},{"Key":"or \"words\"","Fragments":["instead"]},{"Key":"\"words\" instead","Fragments":["of"]},{"Key":"really essential","Fragments":["use"]},{"Key":"essential use","Fragments":["the"]},{"Key":"more general","Fragments":["type","types,"]},{"Key":"general type","Fragments":["in","if"]},{"Key":"the declaration,","Fragments":["here"]},{"Key":"declaration, here","Fragments":["rather"]},{"Key":"here rather","Fragments":["\"Seq\""]},{"Key":"rather \"Seq\"","Fragments":["than"]},{"Key":"\"Seq\" than","Fragments":["\"Array\"."]},{"Key":"than \"Array\".","Fragments":["Otherwise"]},{"Key":"\"Array\". Otherwise","Fragments":["you"]},{"Key":"Otherwise you","Fragments":["get"]},{"Key":"get your","Fragments":["readers","shout"]},{"Key":"your readers","Fragments":["thinking","aren't"]},{"Key":"readers thinking","Fragments":["unnecessarily."]},{"Key":" Most","Fragments":["often"]},{"Key":"Most often","Fragments":["you"]},{"Key":"often you","Fragments":["can","can"]},{"Key":"can shorten","Fragments":["\"x","`sentence.dropWhile(ch"]},{"Key":"shorten \"x","Fragments":["=\u003e"]},{"Key":"\"x =\u003e","Fragments":["f(x)\"","f(x)\""]},{"Key":"=\u003e f(x)\"","Fragments":["to","you"]},{"Key":"f(x)\" to","Fragments":["\"f(_)\""]},{"Key":"to \"f(_)\"","Fragments":["or"]},{"Key":"\"f(_)\" or","Fragments":["sometimes","sometimes"]},{"Key":"or sometimes","Fragments":["even","even"]},{"Key":"sometimes even","Fragments":["just","just"]},{"Key":"even just","Fragments":["\"f\".","\"f\".","use","```f```:"]},{"Key":"This x.compare","Fragments":["thing"]},{"Key":"x.compare thing","Fragments":["looks"]},{"Key":"thing looks","Fragments":["over-complicated."]},{"Key":"looks over-complicated.","Fragments":["Isn't"]},{"Key":"over-complicated. Isn't","Fragments":["it"]},{"Key":"Isn't it","Fragments":["just"]},{"Key":"just \"x","Fragments":["!="]},{"Key":"\"x !=","Fragments":["'''\"?"]},{"Key":"can \"removeTrash\"","Fragments":["before"]},{"Key":"\"removeTrash\" before","Fragments":["doing"]},{"Key":"before doing","Fragments":["the"]},{"Key":"the combination","Fragments":["of","of","of"]},{"Key":"combination of","Fragments":["Random.shuffle","the","`flatMap`","groupBy","```groupBy```","`map`"]},{"Key":"of Random.shuffle","Fragments":["\u0026"]},{"Key":"Random.shuffle \u0026","Fragments":["take."]},{"Key":"var in","Fragments":["validateAlreadyGenerated:","this"]},{"Key":"in validateAlreadyGenerated:","Fragments":["There"]},{"Key":"validateAlreadyGenerated: There","Fragments":["is"]},{"Key":"is too","Fragments":["much","much","much","long.","general","huge","much","complicated!","early","US-fixated!","complicated"]},{"Key":"much brain","Fragments":["power"]},{"Key":"brain power","Fragments":["required"]},{"Key":"power required","Fragments":["(as"]},{"Key":"required (as","Fragments":["oftentimes"]},{"Key":"(as oftentimes","Fragments":["when"]},{"Key":"oftentimes when","Fragments":["side"]},{"Key":"when side","Fragments":["effects"]},{"Key":"effects are","Fragments":["involved)"]},{"Key":"are involved)","Fragments":["to"]},{"Key":"involved) to","Fragments":["understand"]},{"Key":"is going","Fragments":["on","on","above","to","to"]},{"Key":"going on","Fragments":["here.","here.","in","with"]},{"Key":"It adds","Fragments":["to"]},{"Key":"the surprise","Fragments":["value"]},{"Key":"surprise value","Fragments":["that"]},{"Key":"value that","Fragments":["validateAlreadyGenerated"]},{"Key":"that validateAlreadyGenerated","Fragments":["does"]},{"Key":"validateAlreadyGenerated does","Fragments":["not"]},{"Key":"just do","Fragments":["as","a","fine"]},{"Key":"as advertised,","Fragments":["i.e."]},{"Key":"advertised, i.e.","Fragments":["not"]},{"Key":"i.e. not","Fragments":["just"]},{"Key":"suggestion: separate","Fragments":["the"]},{"Key":"separate the","Fragments":["validation","async","validity","two,"]},{"Key":"the validation","Fragments":["part","rather","methods","(`require`)","of"]},{"Key":"validation part","Fragments":["and"]},{"Key":"part and","Fragments":["the"]},{"Key":"name generation","Fragments":["part"]},{"Key":"generation part","Fragments":["more"]},{"Key":"part more","Fragments":["cleanly."]},{"Key":"(btw, are","Fragments":["lower"]},{"Key":"are lower","Fragments":["case"]},{"Key":"lower case","Fragments":["letters","before","versions","letter","letter."]},{"Key":"case letters","Fragments":["indeed"]},{"Key":"letters indeed","Fragments":["valid,"]},{"Key":"indeed valid,","Fragments":["too?)"]},{"Key":" got","Fragments":["the"]},{"Key":"the cache","Fragments":["right"]},{"Key":"cache right","Fragments":["here"]},{"Key":"Ok, I","Fragments":["see.","zipped"]},{"Key":"I see.","Fragments":["Thanks!","Stylistically"]},{"Key":"problem I","Fragments":["found"]},{"Key":"found using","Fragments":["Stream.take(num)"]},{"Key":"using Stream.take(num)","Fragments":["is"]},{"Key":"Stream.take(num) is","Fragments":["that"]},{"Key":"it always","Fragments":["returns","3"]},{"Key":"always returns","Fragments":["same"]},{"Key":"returns same","Fragments":["characters"]},{"Key":"same characters","Fragments":["(first"]},{"Key":"characters (first","Fragments":["num"]},{"Key":"(first num","Fragments":["elements"]},{"Key":"num elements","Fragments":["from"]},{"Key":"elements from","Fragments":["stream).","stream","the"]},{"Key":"from stream).","Fragments":["It"]},{"Key":"stream). It","Fragments":["would"]},{"Key":"It would","Fragments":["be","make","be","probably","have","probably","be","force","be"]},{"Key":"be great","Fragments":["if","if"]},{"Key":"great if","Fragments":["there","it","you"]},{"Key":"if there","Fragments":["was","are","are","is","is","is","are","were"]},{"Key":"was some","Fragments":["method","kind","precision"]},{"Key":"some method","Fragments":["similar"]},{"Key":"method similar","Fragments":["to"]},{"Key":"to \"take\"","Fragments":["that"]},{"Key":"\"take\" that","Fragments":["automatically"]},{"Key":"that automatically","Fragments":["removes"]},{"Key":"automatically removes","Fragments":["taken"]},{"Key":"removes taken","Fragments":["elements"]},{"Key":"taken elements","Fragments":["from"]},{"Key":"from stream","Fragments":["but"]},{"Key":"stream but","Fragments":["I"]},{"Key":"couldn't find","Fragments":["it.","a"]},{"Key":"find it.","Fragments":["That's"]},{"Key":"it. That's","Fragments":["why"]},{"Key":"interesting idea","Fragments":["to","to","to","to","to"]},{"Key":"use Streams","Fragments":["and"]},{"Key":"Streams and","Fragments":["filter!"]},{"Key":" do","Fragments":["you","not"]},{"Key":"really need","Fragments":["to","them","the","```helperCalendar```?","first"]},{"Key":"the Streams","Fragments":["into"]},{"Key":"Streams into","Fragments":["Iterators?"]},{"Key":"and could","Fragments":["getNext","be","be","go"]},{"Key":"could getNext","Fragments":["not"]},{"Key":"getNext not","Fragments":["work"]},{"Key":"not work","Fragments":["also","here."]},{"Key":"work also","Fragments":["with"]},{"Key":"also with","Fragments":[".take(num).toSeq"]},{"Key":"with .take(num).toSeq","Fragments":["instead"]},{"Key":".take(num).toSeq instead","Fragments":["of"]},{"Key":"about having","Fragments":["gradeMap","your","it"]},{"Key":"having gradeMap","Fragments":["as"]},{"Key":"gradeMap as","Fragments":["an"]},{"Key":"will probably","Fragments":["simplify","be","want"]},{"Key":"probably simplify","Fragments":["your"]},{"Key":"val and","Fragments":["immutable"]},{"Key":"and immutable","Fragments":["Map."]},{"Key":"immutable Map.","Fragments":["And"]},{"Key":"Map. And","Fragments":["usually"]},{"Key":"And usually","Fragments":["the"]},{"Key":"usually the","Fragments":["simpler"]},{"Key":"the simpler","Fragments":["solution","way,"]},{"Key":"simpler solution","Fragments":["is"]},{"Key":"also the","Fragments":["best.","for","requirement","```new","function"]},{"Key":"Try it","Fragments":["out!","out."]},{"Key":"sure -","Fragments":["so"]},{"Key":"so what","Fragments":["is"]},{"Key":"better here","Fragments":["-"]},{"Key":"here -","Fragments":["immutable","if","Char","it","rep"]},{"Key":"- immutable","Fragments":["var"]},{"Key":"immutable var","Fragments":["or"]},{"Key":"var or","Fragments":["mutable"]},{"Key":"or mutable","Fragments":["val?","objects?"]},{"Key":"would say","Fragments":["if","mostly","\"number.take(3)\"","you","is"]},{"Key":"say if","Fragments":["I","one"]},{"Key":"actually modify","Fragments":["it"]},{"Key":"modify it","Fragments":[",","and","as"]},{"Key":"it ,","Fragments":["it"]},{"Key":", it","Fragments":["should"]},{"Key":"be mutable?...though","Fragments":["VAR"]},{"Key":"mutable?...though VAR","Fragments":["then"]},{"Key":"VAR then","Fragments":["would"]},{"Key":"then would","Fragments":["better","trim"]},{"Key":"would better","Fragments":["express"]},{"Key":"better express","Fragments":["that"]},{"Key":"express that","Fragments":["it's"]},{"Key":"know it's","Fragments":["too","less"]},{"Key":"it's too","Fragments":["much"]},{"Key":"much of","Fragments":["type","a","an","a"]},{"Key":"type aliases,","Fragments":["but","and"]},{"Key":"aliases, but","Fragments":["GradeMap"]},{"Key":"but GradeMap","Fragments":["represents"]},{"Key":"GradeMap represents","Fragments":["an"]},{"Key":"represents an","Fragments":["internal"]},{"Key":"an internal","Fragments":["collection","helper"]},{"Key":"internal collection","Fragments":["which"]},{"Key":"collection which","Fragments":["is"]},{"Key":"is mutable,","Fragments":["and","cause","actually","and"]},{"Key":"mutable, and","Fragments":["GradeArchive","then"]},{"Key":"and GradeArchive","Fragments":["is"]},{"Key":"GradeArchive is","Fragments":["what"]},{"Key":"is what","Fragments":["I","I","I","I","happens","you","@holden"]},{"Key":"I expose","Fragments":["-"]},{"Key":"expose -","Fragments":["an"]},{"Key":"- an","Fragments":["immutable"]},{"Key":"makes sense?","Fragments":["@ivory"]},{"Key":"sense? @ivory","Fragments":["@ivory"]},{"Key":"I call","Fragments":["pseudo-random."]},{"Key":"call pseudo-random.","Fragments":[":-)"]},{"Key":"but ok,","Fragments":["why","this"]},{"Key":"ok, why","Fragments":["not?","not"]},{"Key":" will","Fragments":["simplify"]},{"Key":"will simplify","Fragments":["this"]},{"Key":"this some","Fragments":["more","more"]},{"Key":"more and","Fragments":["clean","it","more","more"]},{"Key":"and clean","Fragments":["it"]},{"Key":"clean it","Fragments":["up.","up"]},{"Key":" Guess","Fragments":["you"]},{"Key":"Guess you","Fragments":["can"]},{"Key":"the ```_*```","Fragments":["and"]},{"Key":"```_*``` and","Fragments":["just"]},{"Key":"just say,","Fragments":["e.g."]},{"Key":"say, e.g.","Fragments":["```case"]},{"Key":"e.g. ```case","Fragments":["Shout()"]},{"Key":"```case Shout()","Fragments":["=\u003e"]},{"Key":"Shout() =\u003e","Fragments":["...```"]},{"Key":"=\u003e ...```","Fragments":["as"]},{"Key":"...``` as","Fragments":["you"]},{"Key":"any regex","Fragments":["groups","groups"]},{"Key":"regex groups","Fragments":["defined.","defined."]},{"Key":" Per","Fragments":["your"]},{"Key":"Per your","Fragments":["suggestion,"]},{"Key":"your suggestion,","Fragments":["I"]},{"Key":"suggestion, I","Fragments":["have"]},{"Key":"have refactored","Fragments":["the"]},{"Key":"refactored the","Fragments":["code","exercise","code."]},{"Key":"include helper","Fragments":["methods"]},{"Key":"methods for","Fragments":["readability.","the","Strings.","`String`s.","isShout,","strings.","```getOnes```,","each"]},{"Key":"for readability.","Fragments":["See"]},{"Key":"readability. See","Fragments":["Iteration"]},{"Key":"See Iteration","Fragments":["2."]},{"Key":"Iteration 2.","Fragments":["Thanks"]},{"Key":"2. Thanks","Fragments":["for"]},{"Key":"it were","Fragments":["me,"]},{"Key":"were me,","Fragments":["I"]},{"Key":"me, I","Fragments":["would","would"]},{"Key":" x.toUpperCase","Fragments":["=="]},{"Key":"x.toUpperCase ==","Fragments":["x"]},{"Key":"== x","Fragments":["\u0026\u0026"]},{"Key":"x \u0026\u0026","Fragments":["x.toLowerCase"]},{"Key":"helper method.","Fragments":["It"]},{"Key":"method. It","Fragments":["would"]},{"Key":"obvious about","Fragments":["what"]},{"Key":"is doing.","Fragments":["Most"]},{"Key":"doing. Most","Fragments":["of"]},{"Key":"these could","Fragments":["be"]},{"Key":"moved to","Fragments":["helper","the","some"]},{"Key":"to helper","Fragments":["methods"]},{"Key":"to to","Fragments":["make"]},{"Key":"make all","Fragments":["the","the","tests"]},{"Key":"What exactly","Fragments":["do"]},{"Key":"exactly do","Fragments":["you","you"]},{"Key":"mean? I","Fragments":["thought"]},{"Key":"thought this","Fragments":["solution"]},{"Key":"was pretty","Fragments":["graceful.","sure","happy","easy"]},{"Key":"pretty graceful.","Fragments":["What"]},{"Key":"graceful. What","Fragments":["do"]},{"Key":"you were","Fragments":["able","defining","on"]},{"Key":"were able","Fragments":["to"]},{"Key":"to pack","Fragments":["all"]},{"Key":"pack all","Fragments":["the"]},{"Key":"logic into","Fragments":["5","a","explanatory","the"]},{"Key":"into 5","Fragments":["lines"]},{"Key":"5 lines","Fragments":["of"]},{"Key":"code. It's","Fragments":["very"]},{"Key":"very terse.","Fragments":["I"]},{"Key":"terse. I","Fragments":["would"]},{"Key":"would love","Fragments":["to"]},{"Key":"love to","Fragments":["see","see","know!"]},{"Key":"see line","Fragments":["6"]},{"Key":"line 6","Fragments":["refactored"]},{"Key":"6 refactored","Fragments":["to"]},{"Key":"refactored to","Fragments":["reduce","be","the"]},{"Key":"to reduce","Fragments":["the","first","duplication.","your","ambiguity","the","duplication?","this","duplication","potential","the"]},{"Key":"reduce the","Fragments":["duplication","list","number","amount"]},{"Key":"the duplication","Fragments":["when"]},{"Key":"duplication when","Fragments":["comparing"]},{"Key":"when comparing","Fragments":["to"]},{"Key":"comparing to","Fragments":["x.","something"]},{"Key":"For powers","Fragments":["of"]},{"Key":"powers of","Fragments":["2,","2"]},{"Key":"of 2,","Fragments":["you"]},{"Key":"2, you","Fragments":["can"]},{"Key":"use bitshifting","Fragments":["rather"]},{"Key":"bitshifting rather","Fragments":["than"]},{"Key":"using `scala.math.pow`","Fragments":["-"]},{"Key":"`scala.math.pow` -","Fragments":["i.e."]},{"Key":"- i.e.","Fragments":["`pow(2,","make"]},{"Key":"i.e. `pow(2,","Fragments":["n)"]},{"Key":"`pow(2, n)","Fragments":["=="]},{"Key":"n) ==","Fragments":["1"]},{"Key":"== 1","Fragments":["\u003c\u003c"]},{"Key":"1 \u003c\u003c","Fragments":["n`"]},{"Key":" Total","Fragments":["refactor"]},{"Key":"Total refactor","Fragments":["based"]},{"Key":"refactor based","Fragments":["in"]},{"Key":"based in","Fragments":["other","terms"]},{"Key":"other great","Fragments":["responses"]},{"Key":"great responses","Fragments":["I"]},{"Key":"responses I","Fragments":["found"]},{"Key":"found over","Fragments":["here."]},{"Key":"you turn","Fragments":["\"balance\"","your","`balance`"]},{"Key":"turn \"balance\"","Fragments":["into"]},{"Key":"\"balance\" into","Fragments":["an"]},{"Key":"into an","Fragments":["Option","```Option```?","```Array[Char]```.","`ArrayBuffer`.","extension","`Option`","```Option```.","infinite","infinite"]},{"Key":"an Option","Fragments":["you","you"]},{"Key":"Option you","Fragments":["can","have"]},{"Key":" thanks","Fragments":["for","for","for",":)","for"]},{"Key":"thanks for","Fragments":["the","point","the","your","the","your","the","the","pointing","your","your","showing","reviewing","making","correction!","the","the","the"]},{"Key":"the advice","Fragments":["@jennie"]},{"Key":"advice @jennie","Fragments":["!"]},{"Key":"a \"return\"","Fragments":["is"]},{"Key":"\"return\" is","Fragments":["actually","neither"]},{"Key":"actually never","Fragments":["(?!)"]},{"Key":"never (?!)","Fragments":["used."]},{"Key":"of \"takeRight","Fragments":["1\""]},{"Key":"\"takeRight 1\"","Fragments":["why"]},{"Key":"1\" why","Fragments":["not"]},{"Key":"not simply","Fragments":["\"last\".","have"]},{"Key":"simply \"last\".","Fragments":["And"]},{"Key":"\"last\". And","Fragments":["also"]},{"Key":"And also","Fragments":["\".isEmpty\"","the","there"]},{"Key":"also \".isEmpty\"","Fragments":["is"]},{"Key":"\".isEmpty\" is","Fragments":["more"]},{"Key":"than \"==","Fragments":["\"\""]},{"Key":"\"== \"\"","Fragments":["\""]},{"Key":"an additional","Fragments":["exercise","iteration)","solution","`isContainedIn`","function","implicit","function","exercise"]},{"Key":"additional exercise","Fragments":["you","you","you","you","you","you"]},{"Key":"Scala's pattern","Fragments":["matching","matching","matching,","matching?"]},{"Key":"Well, ```GregorianCalendar```","Fragments":["extends"]},{"Key":"```GregorianCalendar``` extends","Fragments":["```Cloneable```."]},{"Key":"extends ```Cloneable```.","Fragments":["Why"]},{"Key":"```Cloneable```. Why","Fragments":["not"]},{"Key":"just make","Fragments":["use","all","use"]},{"Key":"of that?","Fragments":[";-)"]},{"Key":"got too","Fragments":["used"]},{"Key":"too used","Fragments":["to"]},{"Key":"the habit","Fragments":["of","you"]},{"Key":"of avoiding","Fragments":["`Cloneable`,"]},{"Key":"avoiding `Cloneable`,","Fragments":["but"]},{"Key":"`Cloneable`, but","Fragments":["in"]},{"Key":"case its","Fragments":["use"]},{"Key":"its use","Fragments":["would"]},{"Key":"use would","Fragments":["be"]},{"Key":"be justified.","Fragments":["Will"]},{"Key":"justified. Will","Fragments":["update,"]},{"Key":"Will update,","Fragments":["thanks!"]},{"Key":"Pls don't","Fragments":["use","overdo"]},{"Key":"use `return`","Fragments":["in"]},{"Key":"`return` in","Fragments":["Scala!","Scala.","the"]},{"Key":"for `x","Fragments":["=\u003e"]},{"Key":"`x =\u003e","Fragments":["x`","x._1.nonEmpty`.","x`","x`"]},{"Key":"=\u003e x`","Fragments":["there","by","with"]},{"Key":"x` there","Fragments":["is"]},{"Key":"is `identity`","Fragments":["in"]},{"Key":"`identity` in","Fragments":["`Predef`."]},{"Key":"write `_._1.nonEmpty`","Fragments":["instead"]},{"Key":"`_._1.nonEmpty` instead","Fragments":["of"]},{"Key":"of `x","Fragments":["=\u003e"]},{"Key":" (I","Fragments":["would","am","still","wrote"]},{"Key":"(I would","Fragments":["also","also"]},{"Key":"the `toLowerCase`","Fragments":["before"]},{"Key":"`toLowerCase` before","Fragments":["splitting)."]},{"Key":"there a","Fragments":["better","way","better","better","reason","way","better","better","reason","name","way","way","risk","way","way","reason","reason","way"]},{"Key":"better way","Fragments":["to","to","to","of","of","to","to","but","to"]},{"Key":"to handle","Fragments":["the","name","common","that.","very"]},{"Key":"the basic","Fragments":["case","approach"]},{"Key":"basic case","Fragments":["than"]},{"Key":"case than","Fragments":["coding"]},{"Key":"than coding","Fragments":["in"]},{"Key":"coding in","Fragments":["each"]},{"Key":"in each","Fragments":["digit","tuple"]},{"Key":"each digit","Fragments":["and"]},{"Key":"digit and","Fragments":["matching","then","was"]},{"Key":"and matching","Fragments":["on","not"]},{"Key":"matching on","Fragments":["them?","the","an","Booleans,","balance","the","the"]},{"Key":"The digit","Fragments":["length"]},{"Key":"digit length","Fragments":["check"]},{"Key":"length check","Fragments":["at","there"]},{"Key":"check at","Fragments":["the","Scala's","the"]},{"Key":"the convert","Fragments":["method"]},{"Key":"convert method","Fragments":["is"]},{"Key":"necessary, the","Fragments":["more"]},{"Key":"complex code","Fragments":["path"]},{"Key":"code path","Fragments":["works"]},{"Key":"path works","Fragments":["for"]},{"Key":"for single","Fragments":["digits","digit"]},{"Key":"single digits","Fragments":["as"]},{"Key":"digits as","Fragments":["well,","lazy","in","lazy"]},{"Key":"well, but","Fragments":["it","maybe"]},{"Key":"seems worth","Fragments":["saving","considering"]},{"Key":"worth saving","Fragments":["on"]},{"Key":"saving on","Fragments":["the"]},{"Key":"the processing","Fragments":["for"]},{"Key":"processing for","Fragments":["single"]},{"Key":"single digit","Fragments":["cases."]},{"Key":"I still","Fragments":["have","think","consider","need","need","find","don't"]},{"Key":"still have","Fragments":["a","this","room"]},{"Key":"a soft","Fragments":["spot"]},{"Key":"soft spot","Fragments":["for"]},{"Key":"spot for","Fragments":["this"]},{"Key":"this version","Fragments":["because","is","removes","have","more","somewhat"]},{"Key":"version because","Fragments":["of"]},{"Key":"because of","Fragments":["the","laziness,","the","using","your","that","the","the","the"]},{"Key":" Regex","Fragments":["FTW"]},{"Key":"Regex FTW","Fragments":[":)"]},{"Key":"Nice, the","Fragments":["only"]},{"Key":"might change","Fragments":["is","some"]},{"Key":" greeting.trim","Fragments":["match"]},{"Key":"greeting.trim match","Fragments":["{"]},{"Key":"Then you","Fragments":["don't","don't","can"]},{"Key":"trim at","Fragments":["each"]},{"Key":"each lower","Fragments":["part."]},{"Key":"also didnt","Fragments":["need"]},{"Key":"didnt need","Fragments":["the"]},{"Key":"the explicit","Fragments":["string","`return`","value","recursion"]},{"Key":"explicit string","Fragments":["type"]},{"Key":"string type","Fragments":["on"]},{"Key":"type on","Fragments":["the","public"]},{"Key":"the hint,","Fragments":["I"]},{"Key":"hint, I","Fragments":["removed"]},{"Key":" Seems","Fragments":["good","good","overly","good","good","godo","I","like"]},{"Key":"Seems good","Fragments":["to","to","to","to"]},{"Key":"you import","Fragments":["`MutableMapFactory`?","it?","```TimeZone```?"]},{"Key":"good initial","Fragments":["problem"]},{"Key":"initial problem","Fragments":["to"]},{"Key":"problem to","Fragments":["use","pass"]},{"Key":"use TDD","Fragments":["with."]},{"Key":"TDD with.","Fragments":["I"]},{"Key":"with. I","Fragments":["started"]},{"Key":"started out","Fragments":["misunderstanding","writing","with"]},{"Key":"out misunderstanding","Fragments":["the"]},{"Key":"misunderstanding the","Fragments":["problem"]},{"Key":"problem and","Fragments":["thinking"]},{"Key":"and thinking","Fragments":["that"]},{"Key":"thinking that","Fragments":["everything","a"]},{"Key":"that everything","Fragments":["depended","looks"]},{"Key":"everything depended","Fragments":["on"]},{"Key":"depended on","Fragments":["the"]},{"Key":"the ending","Fragments":["punctuation."]},{"Key":"ending punctuation.","Fragments":["I"]},{"Key":"punctuation. I","Fragments":["handled"]},{"Key":"I handled","Fragments":["the","validation"]},{"Key":"handled the","Fragments":["easiest","validation"]},{"Key":"easiest case","Fragments":["(a"]},{"Key":"case (a","Fragments":["blank"]},{"Key":"(a blank","Fragments":["string)"]},{"Key":"blank string)","Fragments":["first"]},{"Key":"string) first","Fragments":["and"]},{"Key":"then worked","Fragments":["with"]},{"Key":"worked with","Fragments":["the"]},{"Key":"the hardest","Fragments":["case","part"]},{"Key":"hardest case","Fragments":["(all"]},{"Key":"case (all","Fragments":["uppercase"]},{"Key":"(all uppercase","Fragments":["anything)"]},{"Key":"uppercase anything)","Fragments":["next."]},{"Key":"anything) next.","Fragments":["The"]},{"Key":"next. The","Fragments":["rest"]},{"Key":"rest was","Fragments":["just"]},{"Key":"just handling","Fragments":["questions"]},{"Key":"handling questions","Fragments":["vs"]},{"Key":"questions vs","Fragments":["any"]},{"Key":"vs any","Fragments":["other"]},{"Key":"other statement.","Fragments":["I'd"]},{"Key":"statement. I'd","Fragments":["like"]},{"Key":"like feedback","Fragments":["as"]},{"Key":"feedback as","Fragments":["to","I"]},{"Key":"do better","Fragments":["to"]},{"Key":"this look","Fragments":["more"]},{"Key":"look more","Fragments":["like","consistent,","scala","concise.","like"]},{"Key":"more like","Fragments":["Scala","the","Scala","Scala,","human"]},{"Key":"like Scala","Fragments":["code","style.","String"]},{"Key":"Scala code","Fragments":["should,","typically","ever."]},{"Key":"code should,","Fragments":["as"]},{"Key":"should, as","Fragments":["I'm"]},{"Key":"as I'm","Fragments":["moving"]},{"Key":"I'm moving","Fragments":["to"]},{"Key":"moving to","Fragments":["the"]},{"Key":"the language","Fragments":["from"]},{"Key":"language from","Fragments":["Python."]},{"Key":"of defining","Fragments":["the","your","two"]},{"Key":"defining the","Fragments":["pattern","object","implicit"]},{"Key":"match function,","Fragments":["first"]},{"Key":"function, first","Fragments":["time"]},{"Key":"first time","Fragments":["I","around,","called","writing"]},{"Key":"time I","Fragments":["see","see"]},{"Key":"see it","Fragments":[":)","if"]},{"Key":"For completeness","Fragments":["you"]},{"Key":"completeness you","Fragments":["can"]},{"Key":"also make","Fragments":["`containsAtLeastOneLetter`","vals","number","the","it"]},{"Key":"make `containsAtLeastOneLetter`","Fragments":["be"]},{"Key":"`containsAtLeastOneLetter` be","Fragments":["part"]},{"Key":"be part","Fragments":["of","of"]},{"Key":"the `isYell`","Fragments":["method,"]},{"Key":"`isYell` method,","Fragments":["and"]},{"Key":"method, and","Fragments":["drop"]},{"Key":"and drop","Fragments":["the"]},{"Key":"drop the","Fragments":["parameter:","`.reverse`","return"]},{"Key":" private","Fragments":["def","def","def","def","var"]},{"Key":"private def","Fragments":["isYell(m:","containsAtLeastOneLetter(m:","pickRandomFromRange(picks:","isQuestion(s:"]},{"Key":"def isYell(m:","Fragments":["String)"]},{"Key":"isYell(m: String)","Fragments":["="]},{"Key":"def containsAtLeastOneLetter","Fragments":["="]},{"Key":"containsAtLeastOneLetter =","Fragments":["m"]},{"Key":"= m","Fragments":["matches","get"]},{"Key":"m matches","Fragments":["\".*[a-zA-Z].*\""]},{"Key":" m","Fragments":["==","exists","+"]},{"Key":"m ==","Fragments":["m.toUpperCase"]},{"Key":"== m.toUpperCase","Fragments":["\u0026\u0026"]},{"Key":"m.toUpperCase \u0026\u0026","Fragments":["containsAtLeastOneLetter"]},{"Key":" Though","Fragments":["that"]},{"Key":"Though that","Fragments":["would"]},{"Key":"would break","Fragments":["the"]},{"Key":"break the","Fragments":["\"one","matching"]},{"Key":"the \"one","Fragments":["liner\""]},{"Key":"\"one liner\"","Fragments":["flow..."]},{"Key":"Good use","Fragments":["of"]},{"Key":"pattern matching.","Fragments":["I","Yours","In",";-)","Suggested","An","That","The","See,"]},{"Key":"matching. I","Fragments":["used"]},{"Key":"used `if-else`on","Fragments":["my"]},{"Key":"`if-else`on my","Fragments":["solution"]},{"Key":"solution but","Fragments":["your","checked","it","I"]},{"Key":"but your","Fragments":["code","for","conditions","use","variable","map","approach","solution","implementation","version"]},{"Key":"understand (at","Fragments":["least"]},{"Key":"for someone","Fragments":["who"]},{"Key":"someone who","Fragments":["knows"]},{"Key":"who knows","Fragments":["pattern"]},{"Key":"knows pattern","Fragments":["matching)."]},{"Key":"agree that","Fragments":["it","my","`(1","Map.empty","not","I","making","using","this"]},{"Key":"not necessary","Fragments":["to","today.","I","anymore."]},{"Key":"to declare","Fragments":["return","a","your","```cal```","private","Char"]},{"Key":"declare return","Fragments":["value"]},{"Key":"value types","Fragments":["on"]},{"Key":"types on","Fragments":["private"]},{"Key":"on private","Fragments":["methods,"]},{"Key":"private methods,","Fragments":["not","it's"]},{"Key":"methods, not","Fragments":["only"]},{"Key":"not only","Fragments":["because","a"]},{"Key":"only because","Fragments":["they"]},{"Key":"are private","Fragments":["but","methods"]},{"Key":"private but","Fragments":["mainly"]},{"Key":"but mainly","Fragments":["because"]},{"Key":"mainly because","Fragments":["they"]},{"Key":"are so","Fragments":["simple","keen"]},{"Key":"so simple","Fragments":["that","as"]},{"Key":"simple that","Fragments":["it"]},{"Key":"to grasp","Fragments":["what","statically"]},{"Key":"grasp what","Fragments":["they"]},{"Key":"just noticed","Fragments":["I","that","something."]},{"Key":"noticed I","Fragments":["can"]},{"Key":"can remove","Fragments":["the","all","it","the","the","the","the","the","the"]},{"Key":"the regular","Fragments":["expression:"]},{"Key":"def containsAtLeastOneLetter(m:","Fragments":["String)"]},{"Key":"containsAtLeastOneLetter(m: String)","Fragments":["="]},{"Key":"m exists","Fragments":["(_.isLetter)"]},{"Key":"a regular","Fragments":["method","expression","expression,","expression,"]},{"Key":"regular method","Fragments":["I"]},{"Key":"method I","Fragments":["created","didn't"]},{"Key":"I created","Fragments":["a","a","the"]},{"Key":"created a","Fragments":["method","function"]},{"Key":"method using","Fragments":["the"]},{"Key":"the partial","Fragments":["method"]},{"Key":"partial method","Fragments":["approach."]},{"Key":"method approach.","Fragments":["This"]},{"Key":"approach. This","Fragments":["allows"]},{"Key":"This allows","Fragments":["me"]},{"Key":"allows me","Fragments":["to","to"]},{"Key":"to list","Fragments":["all"]},{"Key":"list all","Fragments":["the"]},{"Key":"the cases","Fragments":["in","regarding","for","with","aren't"]},{"Key":"cases in","Fragments":["an"]},{"Key":"an obvious","Fragments":["an"]},{"Key":"obvious an","Fragments":["readable"]},{"Key":"an readable","Fragments":["way."]},{"Key":"Even for","Fragments":["the"]},{"Key":"the simple","Fragments":["cases","!="]},{"Key":"more consistent,","Fragments":["I"]},{"Key":"consistent, I","Fragments":["find"]},{"Key":"helps with","Fragments":["reading"]},{"Key":"with reading","Fragments":["it."]},{"Key":"am using","Fragments":["`m`"]},{"Key":"using `m`","Fragments":["instead"]},{"Key":"`m` instead","Fragments":["of"]},{"Key":"of `message`","Fragments":["because"]},{"Key":"`message` because","Fragments":["the"]},{"Key":"scope is","Fragments":["small"]},{"Key":"is small","Fragments":["and","(but"]},{"Key":"small and","Fragments":["it's"]},{"Key":"to detect","Fragments":["what","an","\"yelling\""]},{"Key":"detect what","Fragments":["it"]},{"Key":"The methods","Fragments":["that","describe"]},{"Key":"public api","Fragments":["are","clean."]},{"Key":"api are","Fragments":["marked"]},{"Key":"are marked","Fragments":["`private`"]},{"Key":"marked `private`","Fragments":["to"]},{"Key":"`private` to","Fragments":["help"]},{"Key":"to help","Fragments":["me","you","you","the","me","the"]},{"Key":"help me","Fragments":["pick","understand","with"]},{"Key":"me pick","Fragments":["out"]},{"Key":"pick out","Fragments":["methods"]},{"Key":"out methods","Fragments":["that"]},{"Key":"can refactor","Fragments":["without"]},{"Key":"refactor without","Fragments":["looking"]},{"Key":"without looking","Fragments":["outside"]},{"Key":"looking outside","Fragments":["of"]},{"Key":"the classes.","Fragments":["As"]},{"Key":"classes. As","Fragments":["a"]},{"Key":"As a","Fragments":["bonus","general","matter","(really","little","java","def,","further","general"]},{"Key":"a bonus","Fragments":["it"]},{"Key":"bonus it","Fragments":["helps"]},{"Key":"helps to","Fragments":["keep","think"]},{"Key":"I skipped","Fragments":["adding"]},{"Key":"skipped adding","Fragments":["return"]},{"Key":"adding return","Fragments":["types"]},{"Key":"types of","Fragments":["the","the","the"]},{"Key":"methods because","Fragments":["that"]},{"Key":"because that","Fragments":["would","should","should"]},{"Key":"would introduce","Fragments":["unneeded"]},{"Key":"introduce unneeded","Fragments":["clutter."]},{"Key":"unneeded clutter.","Fragments":["Since"]},{"Key":"clutter. Since","Fragments":["they"]},{"Key":"Since they","Fragments":["are"]},{"Key":"private methods","Fragments":["there","I","–","into"]},{"Key":"methods there","Fragments":["is"]},{"Key":"no obvious","Fragments":["reason"]},{"Key":"obvious reason","Fragments":["to"]},{"Key":"reason to","Fragments":["put","make","create","do","allow","use","use","optimize"]},{"Key":"put them","Fragments":["there.","into"]},{"Key":"same solution","Fragments":["I"]},{"Key":"solution I","Fragments":["came","can","saw","used","can","found","could"]},{"Key":"I came","Fragments":["up","up","up","upon","up"]},{"Key":"came up","Fragments":["with.","with..","with","with","with","with"]},{"Key":"up with.","Fragments":["As"]},{"Key":"with. As","Fragments":["I"]},{"Key":"As I","Fragments":["look","understand"]},{"Key":"solutions though","Fragments":["I"]},{"Key":"though I","Fragments":["think","think"]},{"Key":"think its","Fragments":["pretty"]},{"Key":"its pretty","Fragments":["clear"]},{"Key":"pretty clear","Fragments":["we"]},{"Key":"clear we","Fragments":["aren't"]},{"Key":"we aren't","Fragments":["taking","using"]},{"Key":"aren't taking","Fragments":["advantage"]},{"Key":"taking advantage","Fragments":["of"]},{"Key":"the Functional","Fragments":["aspects"]},{"Key":"Functional aspects","Fragments":["of"]},{"Key":"aspects of","Fragments":["Scala","Option."]},{"Key":"Scala quite","Fragments":["yet."]},{"Key":" implementation","Fragments":["is"]},{"Key":"understand with","Fragments":["those"]},{"Key":"with those","Fragments":["cryptic","two","methods","explanatory"]},{"Key":"those cryptic","Fragments":["variable"]},{"Key":"cryptic variable","Fragments":["names"]},{"Key":"names `bl`,","Fragments":["`_n`"]},{"Key":"`bl`, `_n`","Fragments":["and"]},{"Key":"`_n` and","Fragments":["_bl`"]},{"Key":"and _bl`","Fragments":["IMHO"]},{"Key":"say is","Fragments":["to","that"]},{"Key":"style conventions:","Fragments":["indentation"]},{"Key":"conventions: indentation","Fragments":["is"]},{"Key":"indentation is","Fragments":["2"]},{"Key":"is 2","Fragments":["spaces"]},{"Key":"2 spaces","Fragments":["and"]},{"Key":"spaces and","Fragments":["the","correct"]},{"Key":"the colon","Fragments":["should"]},{"Key":"colon should","Fragments":["be"]},{"Key":"be up","Fragments":["against"]},{"Key":"up against","Fragments":["the"]},{"Key":"against the","Fragments":["value,"]},{"Key":"the value,","Fragments":["e.g."]},{"Key":"value, e.g.","Fragments":["```value:"]},{"Key":"e.g. ```value:","Fragments":["Type```."]},{"Key":"```value: Type```.","Fragments":["Other"]},{"Key":"Type```. Other","Fragments":["than"]},{"Key":"that, this","Fragments":["looks"]},{"Key":"case e","Fragments":["if","if","if"]},{"Key":"e if","Fragments":["e","\"\"","e.isEmpty"]},{"Key":"if e","Fragments":["=="]},{"Key":"e ==","Fragments":["\"\""]},{"Key":"== \"\"","Fragments":["=\u003e","=\u003e"]},{"Key":"\"\" =\u003e","Fragments":["\"Fine.","\"Fine.","\"Fine."]},{"Key":"case \"\"","Fragments":["=\u003e","=\u003e"]},{"Key":" e.exists(e","Fragments":["=\u003e"]},{"Key":"e.exists(e =\u003e","Fragments":["e.isLetter)"]},{"Key":" kann","Fragments":["man"]},{"Key":"kann man","Fragments":["auch"]},{"Key":"man auch","Fragments":["als"]},{"Key":"* There's","Fragments":["no","no","no"]},{"Key":"There's no","Fragments":["need","need","need","need","reason"]},{"Key":"define _sq","Fragments":["as"]},{"Key":"_sq as","Fragments":["a"]},{"Key":"class member.","Fragments":["It"]},{"Key":"member. It","Fragments":["can"]},{"Key":"simple function","Fragments":["variable.","returning"]},{"Key":"define `type","Fragments":["sq1`"]},{"Key":"for `def","Fragments":["sq`"]},{"Key":"* Remove","Fragments":["unwanted"]},{"Key":"Remove unwanted","Fragments":["spaces"]},{"Key":"unwanted spaces","Fragments":["and"]},{"Key":"and correct","Fragments":["indentation"]},{"Key":"Good idea,","Fragments":["thank"]},{"Key":"idea, thank","Fragments":["you!"]},{"Key":"Could generate","Fragments":["neighbors"]},{"Key":"generate neighbors","Fragments":["using"]},{"Key":"neighbors using","Fragments":["a"]},{"Key":"val neighbors","Fragments":["="]},{"Key":"neighbors =","Fragments":["for"]},{"Key":"= for","Fragments":["(i"]},{"Key":"for (i","Fragments":["\u003c-","\u003c-","←"]},{"Key":"(i \u003c-","Fragments":["-1","0"]},{"Key":"\u003c- -1","Fragments":["to","to"]},{"Key":"-1 to","Fragments":["1;","1;"]},{"Key":"to 1;","Fragments":["j","if"]},{"Key":"1; j","Fragments":["\u003c-"]},{"Key":"j \u003c-","Fragments":["-1"]},{"Key":"1; if","Fragments":["(i,j)"]},{"Key":"if (i,j)","Fragments":["!="]},{"Key":"(i,j) !=","Fragments":["(0,0))"]},{"Key":"!= (0,0))","Fragments":["yield"]},{"Key":"(0,0)) yield","Fragments":["(x"]},{"Key":"yield (x","Fragments":["+"]},{"Key":"(x +","Fragments":["i,"]},{"Key":"+ i,","Fragments":["y"]},{"Key":"i, y","Fragments":["+"]},{"Key":"y +","Fragments":["j)"]},{"Key":" Included","Fragments":["@wilhelm's","@evelyn's","@lottie's","abo64's","@mateo's","@dayna's"]},{"Key":"Included @wilhelm's","Fragments":["suggestion"]},{"Key":"@wilhelm's suggestion","Fragments":["to"]},{"Key":"suggestion to","Fragments":["change","use","use","use"]},{"Key":"change return","Fragments":["type"]},{"Key":"type of","Fragments":["`minesAt`","message","functions?","the","a","prompt","square","the","`hey`","`hey`?","`hey`,","solution"]},{"Key":"of `minesAt`","Fragments":["to"]},{"Key":"`minesAt` to","Fragments":["`Int`."]},{"Key":" Moving","Fragments":["values"]},{"Key":"Moving values","Fragments":["depending"]},{"Key":"values depending","Fragments":["on"]},{"Key":"on initial","Fragments":["text"]},{"Key":"initial text","Fragments":["to"]},{"Key":"text to","Fragments":["class","encoded"]},{"Key":"to class","Fragments":["level"]},{"Key":"class level","Fragments":["as"]},{"Key":"level as","Fragments":["they"]},{"Key":"they does","Fragments":["not"]},{"Key":" quickly","Fragments":["found"]},{"Key":"quickly found","Fragments":["a"]},{"Key":"found a","Fragments":["slightly","method","way","much"]},{"Key":"a slightly","Fragments":["better","cleaner"]},{"Key":"slightly better","Fragments":["way"]},{"Key":"implement line","Fragments":["5"]},{"Key":" Really","Fragments":["clean!","nice","like","nice","like","nice","interesting"]},{"Key":" Tiny","Fragments":["things"]},{"Key":"Tiny things","Fragments":["one"]},{"Key":"things one","Fragments":["could"]},{"Key":"could fuss","Fragments":["about:"]},{"Key":"* The","Fragments":["test","Robot","method","code","first",".map{case","first","`.map{case"]},{"Key":"for `Shout`","Fragments":["is"]},{"Key":"`Shout` is","Fragments":["perhaps"]},{"Key":"is perhaps","Fragments":["a","just"]},{"Key":"too clever","Fragments":["(it"]},{"Key":"clever (it","Fragments":["took"]},{"Key":"(it took","Fragments":["me"]},{"Key":"a moment","Fragments":["to"]},{"Key":"moment to","Fragments":["understand"]},{"Key":"what this","Fragments":["test"]},{"Key":"this test","Fragments":["really"]},{"Key":"test really","Fragments":["checks)"]},{"Key":"* Inconsistent","Fragments":["syntax"]},{"Key":"Inconsistent syntax","Fragments":["for"]},{"Key":"syntax for","Fragments":["method","Ranges:","it"]},{"Key":"for method","Fragments":["calls","chaining"]},{"Key":"method calls","Fragments":["(I","like"]},{"Key":"calls (I","Fragments":["think"]},{"Key":"(I think","Fragments":["`statement.endsWith(\"?\")`"]},{"Key":"think `statement.endsWith(\"?\")`","Fragments":["might"]},{"Key":"`statement.endsWith(\"?\")` might","Fragments":["be"]},{"Key":"But these","Fragments":["are"]},{"Key":"these are","Fragments":["very","like"]},{"Key":"are very","Fragments":["small","powerful","readable."]},{"Key":"very small","Fragments":["compared"]},{"Key":"small compared","Fragments":["to"]},{"Key":"the overall","Fragments":["very","structure"]},{"Key":"overall very","Fragments":["simple"]},{"Key":"very simple","Fragments":["structure"]},{"Key":"simple structure","Fragments":["and"]},{"Key":"structure and","Fragments":["nice"]},{"Key":"and nice","Fragments":["use"]},{"Key":"nice use","Fragments":["of","of","of"]},{"Key":"of scala","Fragments":["idiom.","yet."]},{"Key":"try another","Fragments":["solution:","version","route"]},{"Key":"another solution:","Fragments":["Use","an"]},{"Key":"solution: Use","Fragments":["PartialFunctions"]},{"Key":"Use PartialFunctions","Fragments":["chained"]},{"Key":"As for-comprehensions","Fragments":["are"]},{"Key":"for-comprehensions are","Fragments":["only"]},{"Key":"only syntactic","Fragments":["sugar"]},{"Key":"for flatMap/map/filter","Fragments":["chains"]},{"Key":"flatMap/map/filter chains","Fragments":["one"]},{"Key":"chains one","Fragments":["could"]},{"Key":"are still","Fragments":["using","stuck","immutable."]},{"Key":" ```that","Fragments":["collect/map/fmap/whatchamacallit"]},{"Key":"```that collect/map/fmap/whatchamacallit","Fragments":["functionality"]},{"Key":"standard library!```","Fragments":["that"]},{"Key":"library!``` that","Fragments":["the"]},{"Key":"the spec","Fragments":["does","and","doesn't","says"]},{"Key":"spec does","Fragments":["not"]},{"Key":"not want","Fragments":["you","to","to","to","to"]},{"Key":"want you","Fragments":["to","can","can","can"]},{"Key":"So no","Fragments":["for-comprehension,"]},{"Key":"no for-comprehension,","Fragments":["pls!"]},{"Key":"for-comprehension, pls!","Fragments":[":-)"]},{"Key":"an exponent","Fragments":["literal"]},{"Key":"exponent literal","Fragments":["rather"]},{"Key":"literal rather","Fragments":["than"]},{"Key":"than calling","Fragments":["into","`filter`"]},{"Key":"calling into","Fragments":["`math.pow`","the"]},{"Key":"into `math.pow`","Fragments":["(ie."]},{"Key":"`math.pow` (ie.","Fragments":["`1e9`)"]},{"Key":"That's interesting.","Fragments":["Your"]},{"Key":"interesting. Your","Fragments":["point"]},{"Key":"Your point","Fragments":["that"]},{"Key":"point that","Fragments":["\"It","out,","\"if"]},{"Key":"that \"It","Fragments":["involves"]},{"Key":"\"It involves","Fragments":["a"]},{"Key":"involves a","Fragments":["context","context"]},{"Key":"a context","Fragments":["switch","switch"]},{"Key":"context switch","Fragments":["for","for"]},{"Key":"switch for","Fragments":["the","the"]},{"Key":"function and","Fragments":["jump","jump","the","collapse","hence","anywhere","then","also","then","returns","returns","not","then"]},{"Key":"and jump","Fragments":["back:","back:"]},{"Key":"jump back:","Fragments":["it's","it's"]},{"Key":"back: it's","Fragments":["not","not"]},{"Key":"not worth","Fragments":["it","it"]},{"Key":"worth it","Fragments":["if","if"]},{"Key":"it if","Fragments":["its","its","you","you","you"]},{"Key":"if its","Fragments":["only","only"]},{"Key":"its only","Fragments":["for","for"]},{"Key":"only for","Fragments":["a","a","small","constants","comparison"]},{"Key":"a boolean","Fragments":["expression.\"","expression.","for","is","or"]},{"Key":"boolean expression.\"","Fragments":["is"]},{"Key":"expression.\" is","Fragments":["kind"]},{"Key":"reason I","Fragments":["_do_","used"]},{"Key":"I _do_","Fragments":["break"]},{"Key":"_do_ break","Fragments":["up"]},{"Key":"break up","Fragments":["even","for-comprehensions"]},{"Key":"up even","Fragments":["small","more"]},{"Key":"even small","Fragments":["methods."]},{"Key":"small methods.","Fragments":["I'm"]},{"Key":"methods. I'm","Fragments":["presuming"]},{"Key":"I'm presuming","Fragments":["that"]},{"Key":"presuming that","Fragments":["when"]},{"Key":"that when","Fragments":["someone"]},{"Key":"when someone","Fragments":["reads"]},{"Key":"someone reads","Fragments":["the"]},{"Key":"reads the","Fragments":["body"]},{"Key":"the body","Fragments":["of","of"]},{"Key":"body of","Fragments":["the","`nonMatching`"]},{"Key":"the method,","Fragments":["they"]},{"Key":"method, they","Fragments":["can"]},{"Key":"they can","Fragments":["scan"]},{"Key":"can scan","Fragments":["over"]},{"Key":"scan over","Fragments":["something"]},{"Key":"over something","Fragments":["like"]},{"Key":"like `is_same_word`","Fragments":["and"]},{"Key":"`is_same_word` and","Fragments":["understand"]},{"Key":"it's doing","Fragments":["without"]},{"Key":"doing without","Fragments":["having"]},{"Key":"jump down","Fragments":["to"]},{"Key":"definition (unless","Fragments":["they"]},{"Key":"(unless they","Fragments":["specifically"]},{"Key":"they specifically","Fragments":["suspect"]},{"Key":"specifically suspect","Fragments":["a"]},{"Key":"suspect a","Fragments":["bug"]},{"Key":"a bug","Fragments":["or"]},{"Key":"bug or","Fragments":["need"]},{"Key":"or need","Fragments":["to"]},{"Key":"a feature","Fragments":["in"]},{"Key":"feature in","Fragments":["that"]},{"Key":"that particular","Fragments":["piece"]},{"Key":"particular piece","Fragments":["of"]},{"Key":"piece of","Fragments":["code.)"]},{"Key":"of code.)","Fragments":["Whereas"]},{"Key":"code.) Whereas","Fragments":["when"]},{"Key":"Whereas when","Fragments":["the"]},{"Key":"whole thing","Fragments":["is","even","can"]},{"Key":"is there,","Fragments":["you"]},{"Key":"there, you","Fragments":["have"]},{"Key":"thing even","Fragments":["if"]},{"Key":"even if","Fragments":["the","you","after","the","you"]},{"Key":"details aren't","Fragments":["of"]},{"Key":"aren't of","Fragments":["interest"]},{"Key":"interest to","Fragments":["you"]},{"Key":"to you","Fragments":["at","to","check"]},{"Key":"you at","Fragments":["the"]},{"Key":" Anyway,","Fragments":["I"]},{"Key":"Anyway, I","Fragments":["can"]},{"Key":"can definitely","Fragments":["understand","understand"]},{"Key":"definitely understand","Fragments":["why","that"]},{"Key":"understand why","Fragments":["you","`Movement`"]},{"Key":"might prefer","Fragments":["this"]},{"Key":"prefer this","Fragments":["approach,"]},{"Key":"this approach,","Fragments":["got","but"]},{"Key":"approach, got","Fragments":["to"]},{"Key":"got to","Fragments":["leave","start"]},{"Key":"to leave","Fragments":["some","it","details"]},{"Key":"leave some","Fragments":["room"]},{"Key":"some room","Fragments":["for","left"]},{"Key":"room for","Fragments":["personal","improvements,","improvement."]},{"Key":"for personal","Fragments":["preference","style?"]},{"Key":"preference after","Fragments":["all."]},{"Key":" @xzavier","Fragments":["what"]},{"Key":"@xzavier what","Fragments":["about"]},{"Key":"about iteration","Fragments":["#3,"]},{"Key":"iteration #3,","Fragments":["where"]},{"Key":"#3, where","Fragments":["I"]},{"Key":"I rename","Fragments":["variables"]},{"Key":"rename variables","Fragments":["and"]},{"Key":"variables and","Fragments":["format"]},{"Key":"and format","Fragments":["the"]},{"Key":"format the","Fragments":["lines"]},{"Key":"agree line","Fragments":["#7"]},{"Key":"line #7","Fragments":["is"]},{"Key":"#7 is","Fragments":["a"]},{"Key":"lot to","Fragments":["grok,","parse"]},{"Key":"to grok,","Fragments":["but"]},{"Key":"grok, but","Fragments":["in"]},{"Key":"in general,","Fragments":["I","a"]},{"Key":"general, I","Fragments":["prefer","prefer"]},{"Key":"prefer not","Fragments":["to","using","using"]},{"Key":"break out","Fragments":["to","the","the","the"]},{"Key":"out to","Fragments":["function","the","be"]},{"Key":"to function","Fragments":["calls","as"]},{"Key":"function calls","Fragments":["if","to","into","would"]},{"Key":"calls if","Fragments":["those"]},{"Key":"if those","Fragments":["functions"]},{"Key":"those functions","Fragments":["will"]},{"Key":"functions will","Fragments":["be"]},{"Key":"be small.","Fragments":["It"]},{"Key":"small. It","Fragments":["involves"]},{"Key":"It involves","Fragments":["a"]},{"Key":"an alternative,","Fragments":["I"]},{"Key":"alternative, I","Fragments":["believe"]},{"Key":"believe having","Fragments":["each"]},{"Key":"having each","Fragments":["case"]},{"Key":"each case","Fragments":["be","statement","there"]},{"Key":"case be","Fragments":["its","a","further"]},{"Key":"be its","Fragments":["own"]},{"Key":"own line","Fragments":["makes"]},{"Key":"line makes","Fragments":["each"]},{"Key":"makes each","Fragments":["scenario"]},{"Key":"each scenario","Fragments":["as"]},{"Key":"scenario as","Fragments":["readable"]},{"Key":"as readable","Fragments":["without","as","as"]},{"Key":"readable without","Fragments":["the"]},{"Key":"looks good","Fragments":[":)","to","-"]},{"Key":"I'd change","Fragments":["is"]},{"Key":"big boolean","Fragments":["expression"]},{"Key":"boolean expression","Fragments":["on","would"]},{"Key":"expression on","Fragments":["line"]},{"Key":"line 7.","Fragments":["It's"]},{"Key":"7. It's","Fragments":["quite"]},{"Key":"It's quite","Fragments":["a"]},{"Key":"to parse","Fragments":["when","it","one","and"]},{"Key":"parse when","Fragments":["reading"]},{"Key":"the code.","Fragments":["Is"]},{"Key":"code. Is","Fragments":["there"]},{"Key":"way you","Fragments":["could","only","would","the","won't","could","would","try","can","have","can","are","also"]},{"Key":"extract clearly-named","Fragments":["methods"]},{"Key":"clearly-named methods","Fragments":["that"]},{"Key":"that make","Fragments":["the","this","your"]},{"Key":"logic more","Fragments":["obvious?","difficult"]},{"Key":"like (for","Fragments":["readability)"]},{"Key":"(for readability)","Fragments":["when"]},{"Key":"readability) when","Fragments":["return"]},{"Key":"when return","Fragments":["type"]},{"Key":"type is","Fragments":["explicitely","changed","something","used","kind","converted"]},{"Key":"is explicitely","Fragments":["defined"]},{"Key":"explicitely defined","Fragments":["but"]},{"Key":"defined but","Fragments":["that's"]},{"Key":"but that's","Fragments":["only","just","personal","kinda","we","not","based"]},{"Key":"that's only","Fragments":["my"]},{"Key":"only my","Fragments":["opinion."]},{"Key":"see. Stylistically","Fragments":["I"]},{"Key":"Stylistically I","Fragments":["am"]},{"Key":"to keeping","Fragments":["as"]},{"Key":"keeping as","Fragments":["much"]},{"Key":"as possible","Fragments":["within","and","of","and","with"]},{"Key":"possible within","Fragments":["the"]},{"Key":"class. I","Fragments":["wasn't","felt","suggest"]},{"Key":"wasn't thinking","Fragments":["about"]},{"Key":"about complements","Fragments":["being"]},{"Key":"complements being","Fragments":["a"]},{"Key":"being a","Fragments":["static.","number.","bit","public"]},{"Key":" @aurore,","Fragments":["complements"]},{"Key":"@aurore, complements","Fragments":["is"]},{"Key":"complements is","Fragments":["a"]},{"Key":"a static","Fragments":["object,","method","way"]},{"Key":"static object,","Fragments":["does"]},{"Key":"object, does","Fragments":["not"]},{"Key":"not change","Fragments":["from","the","`s`"]},{"Key":"change from","Fragments":["instance"]},{"Key":"from instance","Fragments":["to"]},{"Key":"instance to","Fragments":["instance,","return."]},{"Key":"to instance,","Fragments":["so"]},{"Key":"instance, so","Fragments":["it"]},{"Key":"it goes","Fragments":["naturally"]},{"Key":"goes naturally","Fragments":["into"]},{"Key":"naturally into","Fragments":["the"]},{"Key":"you choose","Fragments":["to"]},{"Key":"the ```complements```","Fragments":["map"]},{"Key":"```complements``` map","Fragments":["inside"]},{"Key":"map inside","Fragments":["the"]},{"Key":"the ```object```","Fragments":["and"]},{"Key":"```object``` and","Fragments":["not"]},{"Key":"Good one","Fragments":["with"]},{"Key":"one with","Fragments":["the","Some(value)"]},{"Key":"sum :D","Fragments":["(altough"]},{"Key":":D (altough","Fragments":["I"]},{"Key":"(altough I","Fragments":["find"]},{"Key":"it strange","Fragments":["to"]},{"Key":"strange to","Fragments":["sum","me."]},{"Key":"to sum","Fragments":["a"]},{"Key":"sum a","Fragments":["List"]},{"Key":"a List","Fragments":["of","is","is","in","is","is"]},{"Key":"List of","Fragments":["Type","Chars."]},{"Key":"of Type","Fragments":["T...of"]},{"Key":"Type T...of","Fragments":["course"]},{"Key":"T...of course","Fragments":["implicits"]},{"Key":"course implicits","Fragments":["and"]},{"Key":"implicits and","Fragments":["the"]},{"Key":"the like","Fragments":["will","in","could"]},{"Key":"like will","Fragments":["kick"]},{"Key":"will kick","Fragments":["in...well"]},{"Key":"kick in...well","Fragments":["maybe"]},{"Key":"in...well maybe","Fragments":["its"]},{"Key":"maybe its","Fragments":["just"]},{"Key":"its just","Fragments":["me"]},{"Key":"just me","Fragments":["not"]},{"Key":"me not","Fragments":["likeing","realizing"]},{"Key":"not likeing","Fragments":["a"]},{"Key":"likeing a","Fragments":["T"]},{"Key":"a T","Fragments":["typed"]},{"Key":"T typed","Fragments":["interface"]},{"Key":"typed interface","Fragments":["having"]},{"Key":"interface having","Fragments":["functions"]},{"Key":"having functions","Fragments":["not"]},{"Key":"functions not","Fragments":["working"]},{"Key":"not working","Fragments":["on"]},{"Key":"every T","Fragments":["type...)"]},{"Key":" OutOfMemoryError:","Fragments":["well"]},{"Key":"OutOfMemoryError: well","Fragments":["of"]},{"Key":"well of","Fragments":["course."]},{"Key":"of course.","Fragments":["But"]},{"Key":"course. But","Fragments":["this"]},{"Key":"But this","Fragments":["is","is"]},{"Key":"more declarative","Fragments":["approach."]},{"Key":"declarative approach.","Fragments":["(for"]},{"Key":"approach. (for","Fragments":["example"]},{"Key":"(for example","Fragments":["imagine"]},{"Key":"example imagine","Fragments":["you"]},{"Key":"imagine you","Fragments":["have"]},{"Key":"to optimize","Fragments":["on","two","for"]},{"Key":"optimize on","Fragments":["performance"]},{"Key":"on performance","Fragments":["-\u003e"]},{"Key":"performance -\u003e","Fragments":["paralellize."]},{"Key":"-\u003e paralellize.","Fragments":["This"]},{"Key":"paralellize. This","Fragments":["way"]},{"Key":"This way","Fragments":["you","the","some","you","you","you"]},{"Key":"include par.","Fragments":["Imagine"]},{"Key":"par. Imagine","Fragments":["the"]},{"Key":"Imagine the","Fragments":["impact","input"]},{"Key":"the impact","Fragments":["to"]},{"Key":"impact to","Fragments":["your"]},{"Key":"to your","Fragments":["recoursive","advantage.","new","implementation","Feature#envy","needs.","view:","nitpick.","new","Range"]},{"Key":"your recoursive","Fragments":["algorithm"]},{"Key":"recoursive algorithm","Fragments":[":))"]},{"Key":" Actually","Fragments":["I've","this"]},{"Key":"Actually I've","Fragments":["just"]},{"Key":"I've just","Fragments":["read","noticed"]},{"Key":"read that","Fragments":["reduceLeft"]},{"Key":"that reduceLeft","Fragments":["on"]},{"Key":"reduceLeft on","Fragments":["stream"]},{"Key":"on stream","Fragments":["ranges"]},{"Key":"stream ranges","Fragments":["prevents"]},{"Key":"ranges prevents","Fragments":["the"]},{"Key":"prevents the","Fragments":["whole","'knowledge'","compiler"]},{"Key":"whole range","Fragments":["to"]},{"Key":"range to","Fragments":["realize!"]},{"Key":"to realize!","Fragments":["There's"]},{"Key":"realize! There's","Fragments":["is"]},{"Key":"There's is","Fragments":["a"]},{"Key":"your claim","Fragments":["after"]},{"Key":"claim after","Fragments":["all"]},{"Key":"after all","Fragments":[":)"]},{"Key":"all :)","Fragments":["(of"]},{"Key":":) (of","Fragments":["course"]},{"Key":"(of course","Fragments":["this","w/"]},{"Key":"course this","Fragments":["way","solution","is","can"]},{"Key":"this way","Fragments":["we","more","made","there's","you","I"]},{"Key":"way we","Fragments":["cant"]},{"Key":"we cant","Fragments":["do"]},{"Key":"cant do","Fragments":["par"]},{"Key":"do par","Fragments":["or"]},{"Key":"par or","Fragments":["the"]},{"Key":"the high","Fragments":["level"]},{"Key":"high level","Fragments":["of","pattern"]},{"Key":"level of","Fragments":["abstraction.","indentation","indirection"]},{"Key":"We could","Fragments":["write"]},{"Key":"could write","Fragments":[".sum","the"]},{"Key":"write .sum","Fragments":["instead"]},{"Key":".sum instead","Fragments":["of"]},{"Key":"of .reduce(_","Fragments":["+"]},{"Key":".reduce(_ +","Fragments":["_)"]},{"Key":"+ _)","Fragments":["or"]},{"Key":"_) or","Fragments":["not?"]},{"Key":"You will","Fragments":["get","save"]},{"Key":"get OutOfMemoryError","Fragments":["if"]},{"Key":"OutOfMemoryError if","Fragments":["you"]},{"Key":"call with","Fragments":["big"]},{"Key":"with big","Fragments":["number"]},{"Key":"big number","Fragments":["e.g"]},{"Key":"number e.g","Fragments":["1e9.toInt."]},{"Key":"the .grouped","Fragments":["function."]},{"Key":".grouped function.","Fragments":["Also"]},{"Key":"function. Also","Fragments":["saw"]},{"Key":"Also saw","Fragments":["some"]},{"Key":"saw some","Fragments":["other"]},{"Key":"other ingenious","Fragments":["implementations"]},{"Key":"ingenious implementations","Fragments":["for"]},{"Key":"implementations for","Fragments":["this","grade"]},{"Key":"exercise and","Fragments":["refactored"]},{"Key":"and refactored","Fragments":["my"]},{"Key":"refactored my","Fragments":["map"]},{"Key":"my map","Fragments":["to","shorter"]},{"Key":"bit easier","Fragments":["on","to","to"]},{"Key":"easier on","Fragments":["the","the","the"]},{"Key":"the eyes","Fragments":["based"]},{"Key":"eyes based","Fragments":["on"]},{"Key":"on someone","Fragments":["else"]},{"Key":"else who","Fragments":["used"]},{"Key":"who used","Fragments":["a"]},{"Key":"map implementation","Fragments":["for"]},{"Key":"implementation for","Fragments":["their","my","that"]},{"Key":"for their","Fragments":["solution."]},{"Key":"a merge","Fragments":["of"]},{"Key":"merge of","Fragments":["paullepoulpe's"]},{"Key":"of paullepoulpe's","Fragments":["and"]},{"Key":"paullepoulpe's and","Fragments":["blemale's"]},{"Key":"and blemale's","Fragments":["solution."]},{"Key":"The String","Fragments":["return","type"]},{"Key":"String return","Fragments":["type"]},{"Key":"type isn't","Fragments":["needed"]},{"Key":"isn't needed","Fragments":["(:"]},{"Key":"needed (:","Fragments":["String)"]},{"Key":"(: String)","Fragments":["at"]},{"Key":"String) at","Fragments":["line"]},{"Key":"at line","Fragments":["3.","13."]},{"Key":"could verify","Fragments":["if"]},{"Key":"verify if","Fragments":["it"]},{"Key":"it shout","Fragments":["with"]},{"Key":"shout with","Fragments":["only"]},{"Key":"with only","Fragments":["that","one","four","spaces..."]},{"Key":"only that","Fragments":["line"]},{"Key":"that line","Fragments":[":"]},{"Key":" ```s.toUpperCase","Fragments":["=="]},{"Key":"```s.toUpperCase ==","Fragments":["s"]},{"Key":"== s","Fragments":["\u0026\u0026","\u0026\u0026","\u0026\u0026"]},{"Key":"s \u0026\u0026","Fragments":["s.exists(_.isUpper)```","s.exists(_.isUpper)```","s.exists(_.isUpper)```"]},{"Key":"that, good","Fragments":["job!"]},{"Key":" Precondition","Fragments":["check"]},{"Key":"Precondition check","Fragments":["can"]},{"Key":"check can","Fragments":["be"]},{"Key":"by ``require(w1.length()","Fragments":["=="]},{"Key":"``require(w1.length() ==","Fragments":["w2.length())``."]},{"Key":"== w2.length())``.","Fragments":["It"]},{"Key":"w2.length())``. It","Fragments":["will"]},{"Key":"will throw","Fragments":["``IllegalArgumentException``","IllegalArgumentException"]},{"Key":"throw ``IllegalArgumentException``","Fragments":["if"]},{"Key":"``IllegalArgumentException`` if","Fragments":["condition"]},{"Key":"if condition","Fragments":["is","is"]},{"Key":"condition is","Fragments":["false.","false."]},{"Key":"is false.","Fragments":["I'd"]},{"Key":"false. I'd","Fragments":["recommend"]},{"Key":"avoid mutable","Fragments":["states","Collections."]},{"Key":"mutable states","Fragments":["and"]},{"Key":"states and","Fragments":["explicit"]},{"Key":"and explicit","Fragments":["for","iteration"]},{"Key":"explicit for","Fragments":["loops."]},{"Key":"for loops.","Fragments":["Check"]},{"Key":"loops. Check","Fragments":["``zip``"]},{"Key":"Check ``zip``","Fragments":["and"]},{"Key":"``zip`` and","Fragments":["``count``"]},{"Key":"and ``count``","Fragments":["sequence"]},{"Key":"``count`` sequence","Fragments":["functions."]},{"Key":"Yes, you're","Fragments":["right."]},{"Key":"you're right.","Fragments":["Totally"]},{"Key":"right. Totally","Fragments":["missed"]},{"Key":"Totally missed","Fragments":["that."]},{"Key":"think `val","Fragments":["_db`"]},{"Key":"`val _db`","Fragments":["should"]},{"Key":"_db` should","Fragments":["be"]},{"Key":"Thanks! I","Fragments":["didn't","will"]},{"Key":"count method.","Fragments":["That"]},{"Key":"method. That","Fragments":["simplifies"]},{"Key":"That simplifies","Fragments":["things"]},{"Key":"simplifies things","Fragments":["considerably."]},{"Key":"do compressed.count(_!=_)","Fragments":["if"]},{"Key":"compressed.count(_!=_) if","Fragments":["these"]},{"Key":"if these","Fragments":["were"]},{"Key":"these were","Fragments":["not"]},{"Key":"were not","Fragments":["tuples,"]},{"Key":"But because","Fragments":["they"]},{"Key":"are, you","Fragments":["could"]},{"Key":"could either","Fragments":["pattern"]},{"Key":"either pattern","Fragments":["match,"]},{"Key":" (dna1","Fragments":["zip","zip"]},{"Key":"(dna1 zip","Fragments":["dna2).count{","dna2).count(((_:Char)!=(_:Char)).tupled)"]},{"Key":"zip dna2).count{","Fragments":["case(x,y)"]},{"Key":"dna2).count{ case(x,y)","Fragments":["=\u003e"]},{"Key":"case(x,y) =\u003e","Fragments":["x"]},{"Key":"=\u003e x","Fragments":["!=","!=","exists","!=","!=","!="]},{"Key":"x !=","Fragments":["y","y}.length)","y","x.toLowerCase`","y","y"]},{"Key":"!= y","Fragments":["}","}`","}"]},{"Key":"Again, just","Fragments":["got"]},{"Key":"tests to","Fragments":["complete","check","pass.","verify","ensure","function"]},{"Key":"to complete","Fragments":["successfully."]},{"Key":" @keegan","Fragments":["I"]},{"Key":"@keegan I","Fragments":["gave"]},{"Key":"I gave","Fragments":["it","implementing"]},{"Key":"gave it","Fragments":["a"]},{"Key":"use ```List(...)","Fragments":["++```"]},{"Key":"```List(...) ++```","Fragments":["instead"]},{"Key":"++``` instead","Fragments":["of"]},{"Key":"just ```::```","Fragments":["when"]},{"Key":"```::``` when","Fragments":["you"]},{"Key":"you go","Fragments":["into","about","over"]},{"Key":"go into","Fragments":["recursion?"]},{"Key":"And -","Fragments":["can"]},{"Key":"- can","Fragments":["you","you"]},{"Key":"it ```@andre```ursively?","Fragments":[";-)"]},{"Key":"usual type","Fragments":["declaration"]},{"Key":"type declaration","Fragments":["of","of"]},{"Key":"declaration of","Fragments":["tuples","Allergens"]},{"Key":"tuples is","Fragments":["w/"]},{"Key":"is w/","Fragments":["`(...)`,"]},{"Key":"w/ `(...)`,","Fragments":["in"]},{"Key":"`(...)`, in","Fragments":["your"]},{"Key":"case `List[(Int,","Fragments":["String)]`."]},{"Key":" `v`","Fragments":["is"]},{"Key":"`v` is","Fragments":["not"]},{"Key":"the optimal","Fragments":["name","method"]},{"Key":"optimal name","Fragments":["for"]},{"Key":"just this","Fragments":["check"]},{"Key":"for 0","Fragments":["a"]},{"Key":"0 a","Fragments":["simple"]},{"Key":"simple if-else","Fragments":["is","instead","clauses.","then","instead","use"]},{"Key":"if-else is","Fragments":["more","probably"]},{"Key":"more readable?!","Fragments":[":-)"]},{"Key":"hint: you","Fragments":["might"]},{"Key":"try the","Fragments":["`find`","extra","```zip```"]},{"Key":"the `find`","Fragments":["function","function."]},{"Key":"`find` function","Fragments":["to"]},{"Key":"Here is","Fragments":["400","my","a","just"]},{"Key":"is 400","Fragments":["ms"]},{"Key":"400 ms","Fragments":["solution"]},{"Key":"ms solution","Fragments":["using"]},{"Key":"using lazy","Fragments":["evaluation"]},{"Key":"lazy evaluation","Fragments":["and","--","of"]},{"Key":"evaluation and","Fragments":["some"]},{"Key":"and some","Fragments":["math:","may","little"]},{"Key":"some math:","Fragments":["http://exercism.io/submissions/c4cb173dc15e493eb55daaf00444d567"]},{"Key":"should have","Fragments":["used","one","the","been","spaces","left","been","had","use","guessed","dots,"]},{"Key":"used either","Fragments":["the"]},{"Key":"either the","Fragments":["```flatMap```"]},{"Key":"the ```flatMap```","Fragments":["that","method."]},{"Key":"```flatMap``` that","Fragments":["makes"]},{"Key":"makes exactly","Fragments":["what"]},{"Key":"what your","Fragments":["```foldLeft```","response","imports"]},{"Key":"your ```foldLeft```","Fragments":["+"]},{"Key":"```foldLeft``` +","Fragments":["concatenation"]},{"Key":"+ concatenation","Fragments":["does,"]},{"Key":"concatenation does,","Fragments":["but"]},{"Key":"does, but","Fragments":["probably"]},{"Key":"but probably","Fragments":["a"]},{"Key":"more efficiently.","Fragments":["Another"]},{"Key":"efficiently. Another","Fragments":["fancy"]},{"Key":"Another fancy","Fragments":["way"]},{"Key":"fancy way","Fragments":["would"]},{"Key":"way would","Fragments":["be","be"]},{"Key":"be using","Fragments":["the","a"]},{"Key":"the ```for(...)","Fragments":["yield```"]},{"Key":"```for(...) yield```","Fragments":["syntactic"]},{"Key":"yield``` syntactic","Fragments":["sugar,"]},{"Key":"syntactic sugar,","Fragments":["which"]},{"Key":"sugar, which","Fragments":["in"]},{"Key":"in fact","Fragments":["only","generate","valid."]},{"Key":"fact only","Fragments":["an"]},{"Key":"only an","Fragments":["alias"]},{"Key":"an alias","Fragments":["for","for"]},{"Key":"The `sortBy`","Fragments":["on"]},{"Key":"`sortBy` on","Fragments":["the"]},{"Key":"values is","Fragments":["superfluous,"]},{"Key":"is superfluous,","Fragments":["since"]},{"Key":"superfluous, since","Fragments":["you"]},{"Key":"have manually","Fragments":["placed"]},{"Key":"manually placed","Fragments":["the"]},{"Key":"placed the","Fragments":["values"]},{"Key":"values in","Fragments":["order.","a","memory!"]},{"Key":"do like","Fragments":["how","the","you","the"]},{"Key":"the bearing","Fragments":["to"]},{"Key":"bearing to","Fragments":["do"]},{"Key":"do most","Fragments":["of","of"]},{"Key":"work -","Fragments":["that","this"]},{"Key":"- that","Fragments":["is"]},{"Key":"is making","Fragments":["Scala's"]},{"Key":"making Scala's","Fragments":["OO"]},{"Key":"Scala's OO","Fragments":["aspect"]},{"Key":"OO aspect","Fragments":["work"]},{"Key":"aspect work","Fragments":["to"]},{"Key":"to translate","Fragments":["the","it"]},{"Key":"translate the","Fragments":["problem"]},{"Key":"description as","Fragments":["closely"]},{"Key":"as closely","Fragments":["as"]},{"Key":"closely as","Fragments":["possible."]},{"Key":"as possible.","Fragments":[":-)","Good","If","Whichever","In"]},{"Key":" interesting,","Fragments":["so","a","but"]},{"Key":"interesting, so","Fragments":["you"]},{"Key":"don't even","Fragments":["bother","need"]},{"Key":"even bother","Fragments":["checking"]},{"Key":"bother checking","Fragments":["if"]},{"Key":"if divisor","Fragments":["is"]},{"Key":"divisor is","Fragments":["prime,"]},{"Key":"is prime,","Fragments":["which"]},{"Key":"prime, which","Fragments":["actually"]},{"Key":"which actually","Fragments":["works"]},{"Key":"actually works","Fragments":["for"]},{"Key":"for prime","Fragments":["factorisation"]},{"Key":"Another version","Fragments":["that"]},{"Key":"that separates","Fragments":["goesCleanlyInto"]},{"Key":"separates goesCleanlyInto","Fragments":["from"]},{"Key":"goesCleanlyInto from","Fragments":["remainder."]},{"Key":"using ```to```","Fragments":["or"]},{"Key":"```to``` or","Fragments":["```until```"]},{"Key":"or ```until```","Fragments":["functions"]},{"Key":"```until``` functions","Fragments":["instead"]},{"Key":"functions instead","Fragments":["of","of"]},{"Key":"Using to","Fragments":["is"]},{"Key":"to is","Fragments":["indead"]},{"Key":"is indead","Fragments":["the"]},{"Key":"indead the","Fragments":["more"]},{"Key":"A very","Fragments":["clever"]},{"Key":"very clever","Fragments":["way"]},{"Key":"clever way","Fragments":["to"]},{"Key":"to compare","Fragments":["strings","code.","them.","some","the"]},{"Key":"compare strings","Fragments":["to"]},{"Key":"strings to","Fragments":["see","list.","zip"]},{"Key":"Well, I","Fragments":["wouldn't","meant"]},{"Key":"wouldn't say","Fragments":["it"]},{"Key":"say it","Fragments":["was","is","so"]},{"Key":"was because","Fragments":["of"]},{"Key":"of laziness,","Fragments":["but"]},{"Key":"laziness, but","Fragments":["rather"]},{"Key":"rather to","Fragments":["keep"]},{"Key":"map entry","Fragments":["shorter."]},{"Key":"entry shorter.","Fragments":["If"]},{"Key":"shorter. If","Fragments":["one"]},{"Key":"If one","Fragments":["would"]},{"Key":"maintain that","Fragments":["map,"]},{"Key":"that map,","Fragments":["it's"]},{"Key":"map, it's","Fragments":["easier"]},{"Key":"it's easier","Fragments":["to","IMO"]},{"Key":"have 7","Fragments":["entries"]},{"Key":"7 entries","Fragments":["rather"]},{"Key":"entries rather","Fragments":["than"]},{"Key":"than 26.","Fragments":["Originally"]},{"Key":"26. Originally","Fragments":["I"]},{"Key":"Originally I","Fragments":["had"]},{"Key":"had a","Fragments":["sequence","really","little","much","really","phrase","similar","look","test","line"]},{"Key":"a sequence","Fragments":["of","and","of","of","(blame"]},{"Key":"sequence of","Fragments":["Char","chars","if-else","links"]},{"Key":"of Char","Fragments":["but","(actually"]},{"Key":"Char but","Fragments":["that's"]},{"Key":"that's just","Fragments":["a","a","me."]},{"Key":"a complex","Fragments":["way"]},{"Key":"complex way","Fragments":["of"]},{"Key":"of representing","Fragments":["a"]},{"Key":"representing a","Fragments":["String."]},{"Key":"You were","Fragments":["too"]},{"Key":"were too","Fragments":["lazy"]},{"Key":"to type","Fragments":["in","your"]},{"Key":"whole ```Map[Char,Int]```,","Fragments":["so"]},{"Key":"```Map[Char,Int]```, so","Fragments":["you"]},{"Key":"you accepted","Fragments":["the"]},{"Key":"accepted the","Fragments":["complication"]},{"Key":"the complication","Fragments":["of"]},{"Key":"complication of","Fragments":["```scoreLetter```."]},{"Key":"of ```scoreLetter```.","Fragments":[":-)"]},{"Key":"could (as","Fragments":["an"]},{"Key":"(as an","Fragments":["additional"]},{"Key":"additional iteration)","Fragments":["transform"]},{"Key":"iteration) transform","Fragments":["```scoreMap```"]},{"Key":"transform ```scoreMap```","Fragments":["into"]},{"Key":"```scoreMap``` into","Fragments":["such"]},{"Key":"into such","Fragments":["a"]},{"Key":"a ```Map[Char,Int]```?!","Fragments":[";-)"]},{"Key":" Realised","Fragments":["I"]},{"Key":"Realised I","Fragments":["don't"]},{"Key":"number is","Fragments":["a","a"]},{"Key":"a prime.","Fragments":["Much"]},{"Key":"prime. Much","Fragments":["faster."]},{"Key":"First I","Fragments":["thought"]},{"Key":"of Random.alphanumeric","Fragments":[","]},{"Key":"Random.alphanumeric ,","Fragments":["but"]},{"Key":", but","Fragments":["then"]},{"Key":" 1)","Fragments":["the","your","Lists","\"0123456789\"","@eduardo"]},{"Key":"1) the","Fragments":["charset"]},{"Key":"the charset","Fragments":["requirement"]},{"Key":"charset requirement","Fragments":["is"]},{"Key":"requirement is","Fragments":["likely"]},{"Key":"is likely","Fragments":["to"]},{"Key":"likely to","Fragments":["change?..","change"]},{"Key":" 2)","Fragments":["having","the","I've","As","naming"]},{"Key":"2) having","Fragments":["char"]},{"Key":"having char","Fragments":["lists"]},{"Key":"char lists","Fragments":["makes"]},{"Key":"lists makes","Fragments":["it"]},{"Key":"readable how","Fragments":["the"]},{"Key":"name will","Fragments":["look"]},{"Key":"will look","Fragments":["like","into","the"]},{"Key":"look like","Fragments":["in","some"]},{"Key":"like in","Fragments":["the","some","java!","the","ruby"]},{"Key":"am hesitant","Fragments":["regarding"]},{"Key":"hesitant regarding","Fragments":["the"]},{"Key":"the \"cache\"","Fragments":["I"]},{"Key":"\"cache\" I","Fragments":["added"]},{"Key":"added (overcomplicated?),","Fragments":["though"]},{"Key":"(overcomplicated?), though","Fragments":["the"]},{"Key":"only way","Fragments":["to"]},{"Key":"sure they","Fragments":["really"]},{"Key":"really don't","Fragments":["repeat"]},{"Key":" @orrin","Fragments":["could"]},{"Key":"@orrin could","Fragments":["you"]},{"Key":"could you","Fragments":["please","remedy"]},{"Key":"please have","Fragments":["a"]},{"Key":"look on","Fragments":["the"]},{"Key":"question inside","Fragments":["the"]},{"Key":"the code?","Fragments":["regarding"]},{"Key":"code? regarding","Fragments":["the"]},{"Key":"the toSeq","Fragments":["for"]},{"Key":"toSeq for","Fragments":["shuffle?...."]},{"Key":" Neat,","Fragments":["thanks,"]},{"Key":"Neat, thanks,","Fragments":["will"]},{"Key":"thanks, will","Fragments":["remember"]},{"Key":"will remember","Fragments":["that."]},{"Key":"A nice","Fragments":["trick","solution."]},{"Key":"nice trick","Fragments":["in","with"]},{"Key":"trick in","Fragments":["Scala"]},{"Key":"to initialize","Fragments":["10","the","the"]},{"Key":"initialize 10","Fragments":["0's"]},{"Key":"10 0's","Fragments":["is"]},{"Key":"0's is","Fragments":["\"0\""]},{"Key":"is \"0\"","Fragments":["*"]},{"Key":"Oh, does","Fragments":["this"]},{"Key":"does this","Fragments":["compile","perform","version","even"]},{"Key":"this compile","Fragments":["and"]},{"Key":"compile and","Fragments":["work?","pass"]},{"Key":"and work?","Fragments":["Interesting."]},{"Key":"work? Interesting.","Fragments":[":-)"]},{"Key":"have written","Fragments":["this","it","`!(yr","the"]},{"Key":"written this","Fragments":["as"]},{"Key":"s.trim.isEmpty =\u003e","Fragments":["..."]},{"Key":"to mention","Fragments":["you"]},{"Key":"mention you","Fragments":["could"]},{"Key":"could of","Fragments":["course","course"]},{"Key":"course also","Fragments":["use","try"]},{"Key":"old Java","Fragments":["function","String"]},{"Key":"Java function","Fragments":["endsWith"]},{"Key":"function endsWith","Fragments":["instead"]},{"Key":"endsWith instead","Fragments":["of"]},{"Key":"of last.","Fragments":["And"]},{"Key":"last. And","Fragments":["in"]},{"Key":"And in","Fragments":["this","the"]},{"Key":"say s.toUpperCase","Fragments":["w/o"]},{"Key":"s.toUpperCase w/o","Fragments":["empty"]},{"Key":"w/o empty","Fragments":["parens"]},{"Key":"empty parens","Fragments":["if","means"]},{"Key":"parens if","Fragments":["you"]},{"Key":"use regex","Fragments":["matching","to","pattern","in"]},{"Key":"regex matching","Fragments":["which","then?","for"]},{"Key":"matching which","Fragments":["is"]},{"Key":"bit special","Fragments":["in"]},{"Key":"special in","Fragments":["Scala."]},{"Key":"There's an","Fragments":["inefficient","awesome","argument"]},{"Key":"an inefficient","Fragments":["one-liner"]},{"Key":"inefficient one-liner","Fragments":["of"]},{"Key":"one-liner of","Fragments":["`nucleotideCounts`:"]},{"Key":"of `nucleotideCounts`:","Fragments":["`baseCounts"]},{"Key":"`nucleotideCounts`: `baseCounts","Fragments":["++"]},{"Key":"`baseCounts ++","Fragments":["strand.groupBy(identity).mapValues(_.size)`"]},{"Key":"guess to","Fragments":["use"]},{"Key":"```Option``` for","Fragments":["```currentName```"]},{"Key":"for ```currentName```","Fragments":["just"]},{"Key":"```currentName``` just","Fragments":["complicates"]},{"Key":"just complicates","Fragments":["matters","matters","matters."]},{"Key":"complicates matters","Fragments":["unnecessarily?","for","(although"]},{"Key":"matters unnecessarily?","Fragments":["As"]},{"Key":"unnecessarily? As","Fragments":["for"]},{"Key":"next access","Fragments":["you"]},{"Key":"access you","Fragments":["will"]},{"Key":"you will","Fragments":["just","notice","not","have","never","ever","probably"]},{"Key":"will just","Fragments":["set"]},{"Key":"just set","Fragments":["it"]},{"Key":"set it","Fragments":["to"]},{"Key":"to another","Fragments":["```Some```","private","file,"]},{"Key":"another ```Some```","Fragments":["anyway?"]},{"Key":"check is","Fragments":["missing"]},{"Key":"missing to","Fragments":["not"]},{"Key":"your ```randomLetters```","Fragments":["and"]},{"Key":"```randomLetters``` and","Fragments":["```randomDigits```"]},{"Key":"and ```randomDigits```","Fragments":["functions!"]},{"Key":" After","Fragments":["looking","reiterating","having","learning","looking","nitpicking","thinking"]},{"Key":"After looking","Fragments":["at","through"]},{"Key":"of others","Fragments":["I"]},{"Key":"others I","Fragments":["noticed"]},{"Key":"I noticed","Fragments":["that","from","it"]},{"Key":"noticed that","Fragments":["declaring","I"]},{"Key":"that declaring","Fragments":["digits"]},{"Key":"declaring digits","Fragments":["as","as"]},{"Key":"as lazy","Fragments":["doesn't","so","val","has"]},{"Key":"lazy doesn't","Fragments":["make"]},{"Key":"make sense","Fragments":["without","to","now","-","in"]},{"Key":"sense without","Fragments":["declaring"]},{"Key":"without declaring","Fragments":["the"]},{"Key":"declaring the","Fragments":["vals"]},{"Key":"the vals","Fragments":["referring","lazy"]},{"Key":"vals referring","Fragments":["to"]},{"Key":"referring to","Fragments":["it","the","the","some","it","http://exercism.io/exercises/scala/robot-name/readme"]},{"Key":"to it","Fragments":["also","and","later.","being","are"]},{"Key":"it also","Fragments":["as","\"cached\"?"]},{"Key":"also as","Fragments":["lazy,"]},{"Key":"as lazy,","Fragments":["so"]},{"Key":"lazy, so","Fragments":["I"]},{"Key":"will submit","Fragments":["another"]},{"Key":"submit another","Fragments":["solution.","solution"]},{"Key":"This implementation","Fragments":["allows","is"]},{"Key":"implementation allows","Fragments":["outside"]},{"Key":"allows outside","Fragments":["code"]},{"Key":"outside code","Fragments":["to"]},{"Key":"to mutate","Fragments":["the"]},{"Key":"mutate the","Fragments":["school's","original","new"]},{"Key":"the school's","Fragments":["internal"]},{"Key":"I'll submit","Fragments":["another","a"]},{"Key":"solution which","Fragments":["prevents","tries"]},{"Key":"which prevents","Fragments":["this."]},{"Key":" When","Fragments":["I","you","grabbing","they","browsing"]},{"Key":"When I","Fragments":["have"]},{"Key":"a choice","Fragments":["I"]},{"Key":"choice I","Fragments":["would"]},{"Key":"would always","Fragments":["go","calculate","go","go"]},{"Key":"always go","Fragments":["for","over","for","for"]},{"Key":"And your","Fragments":["first","if-conditions"]},{"Key":"your first","Fragments":["solution","two","iteration","case-clause.","test,"]},{"Key":"probably much","Fragments":["more"]},{"Key":"readable, I","Fragments":["guess."]},{"Key":"True, and","Fragments":["the"]},{"Key":"version (which","Fragments":["I"]},{"Key":"(which I","Fragments":["didn't","find","don't","understand"]},{"Key":"didn't upload)","Fragments":["did"]},{"Key":"upload) did","Fragments":["exactly"]},{"Key":"did exactly","Fragments":["that"]},{"Key":"exactly that","Fragments":["and"]},{"Key":"that and","Fragments":["also","things"]},{"Key":"also utilized","Fragments":["the"]},{"Key":"utilized the","Fragments":["`synchronized`"]},{"Key":"the `synchronized`","Fragments":["method","block"]},{"Key":"`synchronized` method","Fragments":["to"]},{"Key":"only allow","Fragments":["one"]},{"Key":"allow one","Fragments":["thread"]},{"Key":"thread at","Fragments":["a"]},{"Key":"a time","Fragments":["to","while"]},{"Key":"time to","Fragments":["modify","time.","understand","help","understand,"]},{"Key":"to modify","Fragments":["the","your","when","two","class"]},{"Key":"modify the","Fragments":["balance.","split","split","original","input"]},{"Key":"try an","Fragments":["alternative"]},{"Key":"alternative approach","Fragments":["via"]},{"Key":"approach via","Fragments":["`AtomicReference`"]},{"Key":"via `AtomicReference`","Fragments":["here."]},{"Key":"`AtomicReference` here.","Fragments":["Maybe"]},{"Key":"here. Maybe","Fragments":["I"]},{"Key":"should upload","Fragments":["the"]},{"Key":"upload the","Fragments":["first"]},{"Key":" Hmm.","Fragments":["IMHO","The"]},{"Key":"Hmm. IMHO","Fragments":["```AtomicReference```"]},{"Key":"IMHO ```AtomicReference```","Fragments":["and"]},{"Key":"```AtomicReference``` and","Fragments":["```UnaryOperator```"]},{"Key":"and ```UnaryOperator```","Fragments":["just"]},{"Key":"```UnaryOperator``` just","Fragments":["complicate"]},{"Key":"just complicate","Fragments":["matters"]},{"Key":"complicate matters","Fragments":["unnecessarily"]},{"Key":"matters unnecessarily","Fragments":["(as"]},{"Key":"unnecessarily (as","Fragments":["often"]},{"Key":"(as often","Fragments":["happens"]},{"Key":"often happens","Fragments":["when"]},{"Key":"happens when","Fragments":["using","one"]},{"Key":"when using","Fragments":["Java"]},{"Key":"using Java","Fragments":["stuff"]},{"Key":"Java stuff","Fragments":[";-)"]},{"Key":"stuff ;-)","Fragments":[")."]},{"Key":"simply have","Fragments":["```balance```"]},{"Key":"have ```balance```","Fragments":["as"]},{"Key":"```balance``` as","Fragments":["a"]},{"Key":"a ```var```","Fragments":["of","to","with","for","or"]},{"Key":"```var``` of","Fragments":["type"]},{"Key":"The pattern","Fragments":["match"]},{"Key":"on `message`","Fragments":["wound"]},{"Key":"`message` wound","Fragments":["up"]},{"Key":"wound up","Fragments":["becoming","using"]},{"Key":"up becoming","Fragments":["little"]},{"Key":"becoming little","Fragments":["more"]},{"Key":"little more","Fragments":["than","concise,","by","meat:","Scalay","clear."]},{"Key":"a glorified","Fragments":["if-else"]},{"Key":"glorified if-else","Fragments":["expression."]},{"Key":"one might","Fragments":["argue"]},{"Key":"might argue","Fragments":["that"]},{"Key":"that `tooShort`","Fragments":["is"]},{"Key":"`tooShort` is","Fragments":["just"]},{"Key":"just another","Fragments":["case"]},{"Key":"another case","Fragments":["of","match,"]},{"Key":"of `illogical`.","Fragments":[":-)"]},{"Key":"another idea","Fragments":["would","is","could","you"]},{"Key":"idea would","Fragments":["be"]},{"Key":"count the","Fragments":["sides"]},{"Key":"the sides","Fragments":["w/"]},{"Key":"sides w/","Fragments":["equal"]},{"Key":"w/ equal","Fragments":["lengths."]},{"Key":"btw, thx","Fragments":["for"]},{"Key":"the German","Fragments":["translation!"]},{"Key":"German translation!","Fragments":[";-)"]},{"Key":"Since `.length`","Fragments":["is"]},{"Key":"`.length` is","Fragments":["numeric,"]},{"Key":"is numeric,","Fragments":["you"]},{"Key":"numeric, you","Fragments":["could"]},{"Key":"of `zip`","Fragments":["(I"]},{"Key":"`zip` (I","Fragments":["hadn't"]},{"Key":"(I hadn't","Fragments":["thought"]},{"Key":"hadn't thought","Fragments":["of"]},{"Key":"of it","Fragments":["on","to","you",":)"]},{"Key":"it on","Fragments":["my","this","your","a","http://underscore.io/blog/posts/2014/09/03/enumerations.html.","the"]},{"Key":"on my","Fragments":["first","own.","first","nerves.","1st","previous"]},{"Key":"first go","Fragments":["around),"]},{"Key":"go around),","Fragments":["but"]},{"Key":"around), but","Fragments":["since"]},{"Key":"but since","Fragments":["you","the","you"]},{"Key":"your `(a,","Fragments":["b)`"]},{"Key":"`(a, b)`","Fragments":["tuples"]},{"Key":"b)` tuples","Fragments":["you"]},{"Key":"tuples you","Fragments":["could"]},{"Key":"the `count()`","Fragments":["method"]},{"Key":"`count()` method","Fragments":["to"]},{"Key":"count instances","Fragments":["where"]},{"Key":"instances where","Fragments":["`._1`"]},{"Key":"where `._1`","Fragments":["doesn't"]},{"Key":"`._1` doesn't","Fragments":["equal"]},{"Key":"doesn't equal","Fragments":["`._2`"]},{"Key":"equal `._2`","Fragments":["rather"]},{"Key":"`._2` rather","Fragments":["than"]},{"Key":"than constructing","Fragments":["a"]},{"Key":"constructing a","Fragments":["list"]},{"Key":"and getting","Fragments":["its"]},{"Key":"getting its","Fragments":["length."]},{"Key":"its length.","Fragments":["(I"]},{"Key":"length. (I","Fragments":["also"]},{"Key":"(I also","Fragments":["picked"]},{"Key":"also picked","Fragments":["that"]},{"Key":"picked that","Fragments":["up"]},{"Key":"that up","Fragments":["from"]},{"Key":"from another","Fragments":["submitter.)"]},{"Key":" Minor","Fragments":["nitpick:","nit,","nit,","nitpick:","comments:"]},{"Key":"Minor nitpick:","Fragments":["I"]},{"Key":"nitpick: I","Fragments":["think","think"]},{"Key":"the single","Fragments":["`balance`","method"]},{"Key":"single `balance`","Fragments":["on"]},{"Key":"`balance` on","Fragments":["line"]},{"Key":"line 5","Fragments":["can","-"]},{"Key":"5 can","Fragments":["be"]},{"Key":"be dropped,","Fragments":["because"]},{"Key":"dropped, because","Fragments":["line"]},{"Key":"because line","Fragments":["4"]},{"Key":"4 already","Fragments":["covers"]},{"Key":"already covers","Fragments":["that"]},{"Key":" scratch","Fragments":["that,"]},{"Key":"scratch that,","Fragments":["doesn't"]},{"Key":"that, doesn't","Fragments":["seem"]},{"Key":"doesn't seem","Fragments":["to","to","to"]},{"Key":" \u003e","Fragments":["why","Tests","else","another","I","A","Also,"]},{"Key":"\u003e why","Fragments":["unanchored"]},{"Key":"why unanchored","Fragments":["if"]},{"Key":"unanchored if","Fragments":["you"]},{"Key":"you then","Fragments":["match","match","don't"]},{"Key":"then match","Fragments":["^...$?","```^...$```?"]},{"Key":"for point","Fragments":["that"]},{"Key":"that out,","Fragments":["it's"]},{"Key":"out, it's","Fragments":["left"]},{"Key":"it's left","Fragments":["as"]},{"Key":"left as","Fragments":["a"]},{"Key":"a legacy","Fragments":["of"]},{"Key":"legacy of","Fragments":["trying"]},{"Key":"trying out","Fragments":["different","an","some"]},{"Key":"out different","Fragments":["regex","ways,"]},{"Key":"different regex","Fragments":["pattern."]},{"Key":"regex pattern.","Fragments":["will"]},{"Key":"pattern. will","Fragments":["remove"]},{"Key":"will remove","Fragments":["that"]},{"Key":"remove that","Fragments":["(or","OnlyNumbers()","keyword"]},{"Key":"that (or","Fragments":["remove"]},{"Key":"(or remove","Fragments":["the"]},{"Key":"as for","Fragments":["the","this","generateName:","your","`get`:"]},{"Key":"the match/case","Fragments":["(with"]},{"Key":"match/case (with","Fragments":["regex)"]},{"Key":"(with regex)","Fragments":["vs"]},{"Key":"regex) vs","Fragments":["filter/forall,"]},{"Key":"vs filter/forall,","Fragments":["can"]},{"Key":"filter/forall, can","Fragments":["you"]},{"Key":"please explain","Fragments":["the"]},{"Key":"explain the","Fragments":["reason"]},{"Key":"the reason","Fragments":["behind","is","to"]},{"Key":"reason behind","Fragments":["it?"]},{"Key":"it because","Fragments":["regex","it","`hey`","it"]},{"Key":"because regex","Fragments":["is"]},{"Key":"considered to","Fragments":["be"]},{"Key":"be helpful","Fragments":["if","though!"]},{"Key":"helpful if","Fragments":["you"]},{"Key":"could provide","Fragments":["the","some"]},{"Key":"the reasoning","Fragments":["of"]},{"Key":"reasoning of","Fragments":["your"]},{"Key":"your suggestion","Fragments":["for"]},{"Key":"better judgement","Fragments":["in"]},{"Key":"judgement in","Fragments":["future."]},{"Key":"your comment","Fragments":["and","of",":)","I"]},{"Key":"comment and","Fragments":["your"]},{"Key":"and your","Fragments":["time,"]},{"Key":"your time,","Fragments":["though!"]},{"Key":"what should","Fragments":["be"]},{"Key":"the benefit","Fragments":["here","that","of"]},{"Key":"benefit here","Fragments":["to"]},{"Key":"here to","Fragments":["turn","me."]},{"Key":"to turn","Fragments":["the","your"]},{"Key":"the String","Fragments":["into","to","(1","can","to","type"]},{"Key":"String into","Fragments":["an"]},{"Key":"(btw, usually","Fragments":["one"]},{"Key":"usually one","Fragments":["does"]},{"Key":"one does","Fragments":["not"]},{"Key":"not even","Fragments":["consider","sure","including"]},{"Key":"even consider","Fragments":["to","lists"]},{"Key":"for ```null```","Fragments":["in"]},{"Key":"```null``` in","Fragments":["Scala"]},{"Key":"Scala -","Fragments":["it","not"]},{"Key":"should simply","Fragments":["never"]},{"Key":"simply never","Fragments":["occur!"]},{"Key":"never occur!","Fragments":["only"]},{"Key":"occur! only","Fragments":["exception"]},{"Key":"only exception","Fragments":["could"]},{"Key":"exception could","Fragments":["be"]},{"Key":"some interface","Fragments":["to"]},{"Key":"interface to","Fragments":["Java"]},{"Key":"to Java","Fragments":["code).","8).","enums)"]},{"Key":"and why","Fragments":["```unanchored```","converting","the"]},{"Key":"why ```unanchored```","Fragments":["if"]},{"Key":"```unanchored``` if","Fragments":["you"]},{"Key":"to simply","Fragments":["use"]},{"Key":"simply use","Fragments":["```filter```,","a","```filter```","the"]},{"Key":"use ```filter```,","Fragments":["```forall```"]},{"Key":"```filter```, ```forall```","Fragments":["and"]},{"Key":"in some","Fragments":["places","situations.","object,"]},{"Key":"some places","Fragments":["instead"]},{"Key":"places instead","Fragments":["of"]},{"Key":" no,","Fragments":["it","you"]},{"Key":"no, it","Fragments":["is","couldn't"]},{"Key":"just about","Fragments":["simplicity"]},{"Key":"about simplicity","Fragments":["and"]},{"Key":"simplicity and","Fragments":["readability."]},{"Key":"readability. In","Fragments":["some"]},{"Key":"cases a","Fragments":["regex"]},{"Key":"regex might","Fragments":["be"]},{"Key":"be simpler,","Fragments":["in"]},{"Key":"simpler, in","Fragments":["others"]},{"Key":"in others","Fragments":["not."]},{"Key":" @cordell","Fragments":["man"]},{"Key":"@cordell man","Fragments":["I"]},{"Key":"man I","Fragments":["got"]},{"Key":"start reading","Fragments":["the"]},{"Key":"the READMEs.","Fragments":["Anyway"]},{"Key":"READMEs. Anyway","Fragments":["I"]},{"Key":"Anyway I","Fragments":["got"]},{"Key":"got a","Fragments":["solution"]},{"Key":"with that","Fragments":["in","line:",";)"]},{"Key":"in mind","Fragments":["now.","that"]},{"Key":" Simplified","Fragments":["version","getKeyList","based","solution"]},{"Key":"Simplified version","Fragments":["based"]},{"Key":"version based","Fragments":["on"]},{"Key":"on kolokg's","Fragments":["solution."]},{"Key":"Nice! You","Fragments":["are","can"]},{"Key":"are right.","Fragments":["We","Will","I","Thanks!"]},{"Key":"right. We","Fragments":["don't"]},{"Key":"We don't","Fragments":["need","need"]},{"Key":"need prime","Fragments":["factors"]},{"Key":"prime factors","Fragments":["for","directly?","you've"]},{"Key":"factors for","Fragments":["the"]},{"Key":" Yes","Fragments":["you're","-","it's"]},{"Key":"Yes you're","Fragments":["right."]},{"Key":"just find","Fragments":["this"]},{"Key":"of those","Fragments":["curly","`var`s!","is","four,","exercises","situations"]},{"Key":"those curly","Fragments":["brackets"]},{"Key":"curly brackets","Fragments":["and","at"]},{"Key":"brackets and","Fragments":["parentheses"]},{"Key":"and parentheses","Fragments":["are"]},{"Key":" ...","Fragments":["=","count"]},{"Key":"... =","Fragments":["left"]},{"Key":"= left","Fragments":["zip"]},{"Key":"left zip","Fragments":["right"]},{"Key":"zip right","Fragments":["count"]},{"Key":"right count","Fragments":["{"]},{"Key":"{ ...","Fragments":["}","}","}"]},{"Key":"check [String","Fragments":["Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)"]},{"Key":"[String Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)","Fragments":["–"]},{"Key":"Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html) –","Fragments":["really"]},{"Key":"– really","Fragments":["useful"]},{"Key":"really useful","Fragments":["for","for"]},{"Key":"for text","Fragments":["formatting.","processing."]},{"Key":"is indeed!","Fragments":["I"]},{"Key":"indeed! I","Fragments":["went"]},{"Key":"went down","Fragments":["the"]},{"Key":"down the","Fragments":["rabbit","foldLeft","scope","end:","line"]},{"Key":"the rabbit","Fragments":["hole"]},{"Key":"rabbit hole","Fragments":["(even"]},{"Key":"hole (even","Fragments":["implementing"]},{"Key":"(even implementing","Fragments":["sqrt...)"]},{"Key":"implementing sqrt...)","Fragments":["and"]},{"Key":"sqrt...) and","Fragments":["when"]},{"Key":"got it","Fragments":["working","using"]},{"Key":"it working","Fragments":["I"]},{"Key":"working I","Fragments":["just"]},{"Key":"next one","Fragments":[";)"]},{"Key":"solution may","Fragments":["be","be"]},{"Key":" No,","Fragments":["just"]},{"Key":"No, just","Fragments":["kidding"]},{"Key":"just kidding","Fragments":["(a"]},{"Key":"kidding (a","Fragments":["bit)"]},{"Key":"(a bit)","Fragments":[":-)"]},{"Key":"Yeah, I","Fragments":["know","did,","missed","don't"]},{"Key":"know that","Fragments":["feeling","the","there"]},{"Key":"that feeling","Fragments":["all"]},{"Key":"feeling all","Fragments":["too"]},{"Key":"all too","Fragments":["well!"]},{"Key":"too well!","Fragments":[":-)"]},{"Key":"and clean!","Fragments":["The"]},{"Key":"clean! The","Fragments":["helper"]},{"Key":"The helper","Fragments":["objects"]},{"Key":"helper objects","Fragments":["could"]},{"Key":"objects could","Fragments":["be"]},{"Key":"made private","Fragments":["to"]},{"Key":"private to","Fragments":["Bob."]},{"Key":"to Bob.","Fragments":["In"]},{"Key":"Bob. In","Fragments":["`Shouting.unapply`,"]},{"Key":"In `Shouting.unapply`,","Fragments":["you"]},{"Key":"`Shouting.unapply`, you","Fragments":["could"]},{"Key":"use `String.forAll`","Fragments":["to"]},{"Key":"`String.forAll` to","Fragments":["check"]},{"Key":"if all","Fragments":["characters","the","chars","names","letters","names"]},{"Key":"all characters","Fragments":["are","are","covered"]},{"Key":"are uppercase,","Fragments":["might"]},{"Key":"uppercase, might","Fragments":["be"]},{"Key":"be even","Fragments":["easier","better","better!","more"]},{"Key":"even easier","Fragments":["to","ways"]},{"Key":"use 'A'","Fragments":["to"]},{"Key":"'A' to","Fragments":["'Z',","'Z'```","'Z'"]},{"Key":"to 'Z',","Fragments":["so"]},{"Key":"'Z', so","Fragments":["you"]},{"Key":"you won't","Fragments":["need","need","even","need","need"]},{"Key":"won't need","Fragments":["to","the","to","to"]},{"Key":"add 1","Fragments":["to"]},{"Key":"1 to","Fragments":["the"]},{"Key":"companion Object","Fragments":["as"]},{"Key":"Object as","Fragments":["a"]},{"Key":"a factory","Fragments":["for"]},{"Key":"factory for","Fragments":["the"]},{"Key":"new names!","Fragments":["Good"]},{"Key":"names! Good","Fragments":["idea"]},{"Key":"Good idea","Fragments":["there","using","using"]},{"Key":"idea there","Fragments":[";)"]},{"Key":"really cool,","Fragments":["but"]},{"Key":"cool, but","Fragments":["I"]},{"Key":"think would","Fragments":["be"]},{"Key":"even better","Fragments":["if"]},{"Key":"better if","Fragments":["wordCount"]},{"Key":"if wordCount","Fragments":["is"]},{"Key":"wordCount is","Fragments":["a","used,"]},{"Key":" Tried","Fragments":["to","to"]},{"Key":"Tried to","Fragments":["prioritise","make"]},{"Key":"to prioritise","Fragments":["clarity"]},{"Key":"prioritise clarity","Fragments":["for"]},{"Key":"clarity for","Fragments":["my"]},{"Key":"for my","Fragments":["first","second","solution","own","taste","own"]},{"Key":"this problem.","Fragments":["Might","Is","Getting"]},{"Key":"problem. Might","Fragments":["be"]},{"Key":"Might be","Fragments":["interesting","a","more","string,"]},{"Key":"be interesting","Fragments":["to","to"]},{"Key":"a second","Fragments":["attempt","version","version","line).","iteration","Scala"]},{"Key":"second attempt","Fragments":["that"]},{"Key":"attempt that","Fragments":["prioritised"]},{"Key":"that prioritised","Fragments":["efficiency"]},{"Key":"prioritised efficiency","Fragments":["instead,"]},{"Key":"efficiency instead,","Fragments":["would"]},{"Key":"instead, would","Fragments":["appreciate"]},{"Key":"would appreciate","Fragments":["any"]},{"Key":"appreciate any","Fragments":["hints."]},{"Key":"Nice tail","Fragments":["recursive"]},{"Key":"recursive solution.","Fragments":["To"]},{"Key":"solution. To","Fragments":["make"]},{"Key":"To make","Fragments":["it","it","it"]},{"Key":"more concise,","Fragments":["there's","easier"]},{"Key":"concise, there's","Fragments":["a"]},{"Key":"nice little","Fragments":["utility","DSL"]},{"Key":"little utility","Fragments":["function"]},{"Key":"utility function","Fragments":["[`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps)"]},{"Key":"function [`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps)","Fragments":["that"]},{"Key":"[`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps) that","Fragments":["may"]},{"Key":"be beneficial","Fragments":["to"]},{"Key":"beneficial to","Fragments":["use."]},{"Key":"would solve","Fragments":["the"]},{"Key":"in Java","Fragments":["(at","all","world?"]},{"Key":"Java (at","Fragments":["least"]},{"Key":"least prior","Fragments":["to"]},{"Key":"prior to","Fragments":["Java"]},{"Key":"Java 8).","Fragments":["It"]},{"Key":"8). It","Fragments":["is"]},{"Key":"is well","Fragments":["written"]},{"Key":"well written","Fragments":["and"]},{"Key":"written and","Fragments":["quite"]},{"Key":"to understand,","Fragments":["but","and","but"]},{"Key":"understand, but","Fragments":["it","it"]},{"Key":"not make","Fragments":["full","```val","it","use","`orderedChars`","also"]},{"Key":"make full","Fragments":["use"]},{"Key":"full use","Fragments":["of"]},{"Key":"of Scala.","Fragments":["In"]},{"Key":"In scala","Fragments":["the","Strings","it"]},{"Key":"scala the","Fragments":["problem"]},{"Key":"solved with","Fragments":["one"]},{"Key":"with one","Fragments":["line","entry."]},{"Key":"one line","Fragments":["of","upper."]},{"Key":"line of","Fragments":["code.","the"]},{"Key":" But,","Fragments":["if","since"]},{"Key":"But, if","Fragments":["you"]},{"Key":"still wants","Fragments":["to"]},{"Key":"wants to","Fragments":["use"]},{"Key":"a for","Fragments":["loop,","comprehension.","comprehension","loop","comprehension","loop,"]},{"Key":"for loop,","Fragments":["it","much"]},{"Key":"loop, it","Fragments":["can"]},{"Key":"written like","Fragments":["this"]},{"Key":"\u003c- 0","Fragments":["until"]},{"Key":"0 until","Fragments":["minLength)","maxRobots)"]},{"Key":"until minLength)","Fragments":["{},"]},{"Key":"minLength) {},","Fragments":["which"]},{"Key":"{}, which","Fragments":["is"]},{"Key":"least a","Fragments":["little"]},{"Key":"just submitting","Fragments":["it"]},{"Key":"submitting it","Fragments":["because"]},{"Key":"passes the","Fragments":["tests.","tests,"]},{"Key":"tests. I'm","Fragments":["not"]},{"Key":"very happy","Fragments":["with","with","with"]},{"Key":"that there","Fragments":["are","would","must","be","were","was","is","are","is"]},{"Key":"are duplicated","Fragments":["responses."]},{"Key":" Thanks.","Fragments":["I","Looks","In","Good","`foldLeft`","That's",":-)"]},{"Key":"Thanks. I","Fragments":["think"]},{"Key":"think iteration","Fragments":["2"]},{"Key":"iteration 2","Fragments":["is","look","for","--"]},{"Key":"2 is","Fragments":["a"]},{"Key":"little easier","Fragments":["on"]},{"Key":"Also, thanks","Fragments":["for"]},{"Key":"the pointer","Fragments":["towards"]},{"Key":"pointer towards","Fragments":["Map.updated."]},{"Key":"towards Map.updated.","Fragments":["That"]},{"Key":"Map.updated. That","Fragments":["will"]},{"Key":"That will","Fragments":["come"]},{"Key":"will come","Fragments":["in"]},{"Key":"come in","Fragments":["handy","(my)","handy","handy","handy.","handy"]},{"Key":"in handy","Fragments":["for","here.","here.","here.","here."]},{"Key":"handy for","Fragments":["algorithms","things"]},{"Key":"for algorithms","Fragments":["like"]},{"Key":"algorithms like","Fragments":["this."]},{"Key":"rewrite `wordCount`","Fragments":["with"]},{"Key":"`wordCount` with","Fragments":["one-liner"]},{"Key":"with one-liner","Fragments":["with","by"]},{"Key":"one-liner with","Fragments":["`.groupBy`"]},{"Key":"with `.groupBy`","Fragments":["and"]},{"Key":"`.groupBy` and","Fragments":["`mapValues`."]},{"Key":"2. If","Fragments":["you","you"]},{"Key":"prefer fold","Fragments":["for"]},{"Key":"fold for","Fragments":["performance:"]},{"Key":"1. `map.withDefaultValue(0)`","Fragments":["allows"]},{"Key":"`map.withDefaultValue(0)` allows","Fragments":["you"]},{"Key":"to replace","Fragments":["the","the","anything,","the","`foldLeft(0)((m:"]},{"Key":"with simple","Fragments":["apply.","math"]},{"Key":"2. Instead","Fragments":["of"]},{"Key":"of merging","Fragments":["single-value"]},{"Key":"merging single-value","Fragments":["map"]},{"Key":"single-value map","Fragments":["into"]},{"Key":"map into","Fragments":["previous"]},{"Key":"into previous","Fragments":["one,"]},{"Key":"previous one,","Fragments":["you"]},{"Key":"one, you","Fragments":["can","should"]},{"Key":"use `map.updated(key,","Fragments":["value)`"]},{"Key":"`map.updated(key, value)`","Fragments":["or"]},{"Key":"value)` or","Fragments":["`map"]},{"Key":"or `map","Fragments":["+"]},{"Key":"`map +","Fragments":["(key"]},{"Key":"+ (key","Fragments":["-\u003e"]},{"Key":"(key -\u003e","Fragments":["value)`."]},{"Key":"3. Curly","Fragments":["braces"]},{"Key":"Curly braces","Fragments":["in"]},{"Key":"braces in","Fragments":["`wordCount`","`wordCount`"]},{"Key":"in `wordCount`","Fragments":["can","can"]},{"Key":"`wordCount` can","Fragments":["be","be"]},{"Key":" See","Fragments":["the","some","mine","also"]},{"Key":"See the","Fragments":["count()","next"]},{"Key":"the count()","Fragments":["method,","method"]},{"Key":"count() method,","Fragments":["for"]},{"Key":"method, for","Fragments":["example:"]},{"Key":"It could","Fragments":["make","make","be"]},{"Key":"your implementation","Fragments":["a","of","will","does","is","looks","is"]},{"Key":"implementation a","Fragments":["little","bit"]},{"Key":" Couple","Fragments":["of","of"]},{"Key":"Couple of","Fragments":["things,","things:"]},{"Key":"of things,","Fragments":["instead"]},{"Key":"things, instead","Fragments":["of"]},{"Key":"of filtering","Fragments":["you"]},{"Key":"filtering you","Fragments":["could"]},{"Key":"the .exists","Fragments":["method"]},{"Key":".exists method","Fragments":["that"]},{"Key":"on collections","Fragments":["and","helped"]},{"Key":"collections and","Fragments":["instead"]},{"Key":"and instead","Fragments":["of","of","of","of"]},{"Key":"of looking","Fragments":["to"]},{"Key":"looking to","Fragments":["see"]},{"Key":"are spaces","Fragments":["you"]},{"Key":"spaces you","Fragments":["could"]},{"Key":"just .trim","Fragments":["and"]},{"Key":".trim and","Fragments":["check"]},{"Key":"and check","Fragments":["if","if","with"]},{"Key":"Since yelling","Fragments":["means"]},{"Key":"yelling means","Fragments":["all"]},{"Key":"means all","Fragments":["letters"]},{"Key":"all letters","Fragments":["has","are"]},{"Key":"letters has","Fragments":["to"]},{"Key":"has to","Fragments":["be","be","have","iterate","think","recalculate","read","rescan","offer.","be"]},{"Key":"be uppercase","Fragments":["comparing"]},{"Key":"uppercase comparing","Fragments":["the"]},{"Key":"comparing the","Fragments":["uppercased","characters","sorted"]},{"Key":"the uppercased","Fragments":["value","version"]},{"Key":"uppercased value","Fragments":["to"]},{"Key":"the real","Fragments":["String","use"]},{"Key":"real String","Fragments":["will"]},{"Key":"String will","Fragments":["give"]},{"Key":"will give","Fragments":["us"]},{"Key":"give us","Fragments":["the"]},{"Key":"us the","Fragments":["first"]},{"Key":"first validation.","Fragments":["Also"]},{"Key":"validation. Also","Fragments":["has"]},{"Key":"Also has","Fragments":["to"]},{"Key":"be validated","Fragments":["it"]},{"Key":"validated it","Fragments":["has"]},{"Key":"have letters","Fragments":["(not"]},{"Key":"letters (not","Fragments":["just"]},{"Key":"(not just","Fragments":["numbers)."]},{"Key":" Validating","Fragments":["questions"]},{"Key":"Validating questions","Fragments":["is"]},{"Key":"questions is","Fragments":["easy,"]},{"Key":"is easy,","Fragments":["just"]},{"Key":"easy, just","Fragments":["strings"]},{"Key":"just strings","Fragments":["that"]},{"Key":"strings that","Fragments":["ends","only"]},{"Key":"that ends","Fragments":["with","with"]},{"Key":" Space","Fragments":["chars,"]},{"Key":"Space chars,","Fragments":["or"]},{"Key":"chars, or","Fragments":["empty"]},{"Key":"or empty","Fragments":["chars"]},{"Key":"empty chars","Fragments":["is"]},{"Key":"chars is","Fragments":["easy"]},{"Key":"to validate,","Fragments":["just"]},{"Key":"validate, just","Fragments":["use"]},{"Key":"use empty","Fragments":["boolean"]},{"Key":"empty boolean","Fragments":["and"]},{"Key":"all chars","Fragments":["are"]},{"Key":"chars are","Fragments":["spaces."]},{"Key":"rest return","Fragments":["Whatever."]},{"Key":"got around","Fragments":["to"]},{"Key":"around to","Fragments":["doing","trying","have"]},{"Key":"to doing","Fragments":["a"]},{"Key":"doing a","Fragments":["little","lot","match","bunch"]},{"Key":"little benchmarking.","Fragments":["For"]},{"Key":"benchmarking. For","Fragments":["100k"]},{"Key":"For 100k","Fragments":["element"]},{"Key":"100k element","Fragments":["lists,"]},{"Key":"element lists,","Fragments":["the"]},{"Key":"lists, the","Fragments":["`:+`"]},{"Key":"the `:+`","Fragments":["version","version"]},{"Key":"`:+` version","Fragments":["is","was"]},{"Key":"much much","Fragments":["slower"]},{"Key":"much slower","Fragments":["(the"]},{"Key":"slower (the","Fragments":["`reverse`"]},{"Key":"(the `reverse`","Fragments":["method"]},{"Key":"`reverse` method","Fragments":["finished"]},{"Key":"method finished","Fragments":["my"]},{"Key":"finished my","Fragments":["test"]},{"Key":"my test","Fragments":["in","cases"]},{"Key":"test in","Fragments":["\u003c1s,","`nucleotideCounts`.","line","the","error,","the"]},{"Key":"in \u003c1s,","Fragments":["the"]},{"Key":"\u003c1s, the","Fragments":["`:+`"]},{"Key":"version was","Fragments":["still","made"]},{"Key":"was still","Fragments":["running","somewhat"]},{"Key":"still running","Fragments":["after"]},{"Key":"running after","Fragments":["a"]},{"Key":"after a","Fragments":["minute","bit","question"]},{"Key":"a minute","Fragments":["and"]},{"Key":"minute and","Fragments":["I"]},{"Key":"I stopped","Fragments":["the"]},{"Key":"stopped the","Fragments":["test)."]},{"Key":"A simple","Fragments":["`for`-loop","function"]},{"Key":"simple `for`-loop","Fragments":["approach"]},{"Key":"`for`-loop approach","Fragments":["is"]},{"Key":"far the","Fragments":["fastest,"]},{"Key":"the fastest,","Fragments":["so"]},{"Key":"fastest, so","Fragments":["as"]},{"Key":"so as","Fragments":["elegant","not"]},{"Key":"as elegant","Fragments":["as","as"]},{"Key":"elegant as","Fragments":["the","my"]},{"Key":"recursive approach","Fragments":["is,","for"]},{"Key":"approach is,","Fragments":["it's"]},{"Key":"is, it's","Fragments":["a"]},{"Key":"little silly","Fragments":["really!"]},{"Key":"thing is,","Fragments":["according"]},{"Key":"is, according","Fragments":["to"]},{"Key":"the [docs](http://docs.scala-lang.org/overviews/collections/performance-characteristics.html)","Fragments":["`List`"]},{"Key":"[docs](http://docs.scala-lang.org/overviews/collections/performance-characteristics.html) `List`","Fragments":["append"]},{"Key":"`List` append","Fragments":["is","is"]},{"Key":"append is","Fragments":["O(n)","slow"]},{"Key":"is O(n)","Fragments":["so"]},{"Key":"O(n) so","Fragments":["if"]},{"Key":"so if","Fragments":["you","the","you"]},{"Key":"make that","Fragments":["change","more","explicit","trade-off"]},{"Key":"that change","Fragments":["the"]},{"Key":"code will","Fragments":["be","not","be","fail"]},{"Key":"be worse","Fragments":["than"]},{"Key":"than linear","Fragments":["in"]},{"Key":"linear in","Fragments":["number"]},{"Key":"in number","Fragments":["of"]},{"Key":"of elements","Fragments":["which","in","satisfying","for","for"]},{"Key":"elements which","Fragments":["for"]},{"Key":"which for","Fragments":["large","some","some"]},{"Key":"large lists","Fragments":["will","(even"]},{"Key":"lists will","Fragments":["be"]},{"Key":"lot *slower*","Fragments":["than"]},{"Key":"*slower* than","Fragments":["the"]},{"Key":"with `reverse`","Fragments":["(which"]},{"Key":"`reverse` (which","Fragments":["at"]},{"Key":"(which at","Fragments":["least"]},{"Key":"least keeps","Fragments":["the"]},{"Key":"keeps the","Fragments":["solution"]},{"Key":"The whole","Fragments":["problem","logic"]},{"Key":"whole problem","Fragments":["is"]},{"Key":"that scala","Fragments":["`List`"]},{"Key":"scala `List`","Fragments":["append"]},{"Key":"is slow","Fragments":["for"]},{"Key":"slow for","Fragments":["large"]},{"Key":"After reiterating","Fragments":["over"]},{"Key":"reiterating over","Fragments":["my"]},{"Key":"over my","Fragments":["solution"]},{"Key":"say that","Fragments":["your","you"]},{"Key":"not far","Fragments":["away"]},{"Key":"far away","Fragments":["from"]},{"Key":"from beeing","Fragments":["performant."]},{"Key":"beeing performant.","Fragments":["You"]},{"Key":"performant. You","Fragments":["can"]},{"Key":"can drop","Fragments":["the"]},{"Key":"the `.reverse`","Fragments":["when"]},{"Key":"`.reverse` when","Fragments":["you"]},{"Key":"small change","Fragments":["in"]},{"Key":"change in","Fragments":["line"]},{"Key":"line 9","Fragments":["which","if","I","-"]},{"Key":"9 which","Fragments":["constructs"]},{"Key":"which constructs","Fragments":["`acc`"]},{"Key":"constructs `acc`","Fragments":["in"]},{"Key":"`acc` in","Fragments":["the"]},{"Key":"case head","Fragments":["::"]},{"Key":"head ::","Fragments":["tail"]},{"Key":":: tail","Fragments":["=\u003e"]},{"Key":"tail =\u003e","Fragments":["recurse(tail,"]},{"Key":"=\u003e recurse(tail,","Fragments":["acc"]},{"Key":"recurse(tail, acc","Fragments":[":+"]},{"Key":"I haven't","Fragments":["used","toyed","exactly","gone","done"]},{"Key":"haven't used","Fragments":["`ListBuffer`"]},{"Key":"used `ListBuffer`","Fragments":["so"]},{"Key":"`ListBuffer` so","Fragments":["far,"]},{"Key":"so far,","Fragments":["but"]},{"Key":"far, but","Fragments":["I"]},{"Key":"I definitly","Fragments":["prefer"]},{"Key":"definitly prefer","Fragments":["solutions"]},{"Key":"prefer solutions","Fragments":["that"]},{"Key":"solutions that","Fragments":["use","still","build"]},{"Key":"immutable datastructures","Fragments":[";-)"]},{"Key":" Yeah.","Fragments":["I"]},{"Key":"Yeah. I","Fragments":["was"]},{"Key":"thinking to","Fragments":["come"]},{"Key":"and try","Fragments":["to","out","out"]},{"Key":"fix that.","Fragments":["The"]},{"Key":"that. The","Fragments":["issue"]},{"Key":"The issue","Fragments":["of"]},{"Key":"issue of","Fragments":["course"]},{"Key":"course is","Fragments":["that"]},{"Key":"that appending","Fragments":["to","to"]},{"Key":"appending to","Fragments":["a","a"]},{"Key":"a `List`","Fragments":["is","is"]},{"Key":"`List` is","Fragments":["O(n).","very"]},{"Key":"is O(n).","Fragments":["My","Prepending"]},{"Key":"O(n). My","Fragments":["first"]},{"Key":"first thought","Fragments":["was"]},{"Key":"thought was","Fragments":["to"]},{"Key":"use either","Fragments":["a","Scala's"]},{"Key":"either a","Fragments":["`Vector`","```SortedMap```"]},{"Key":"a `Vector`","Fragments":["or"]},{"Key":"`Vector` or","Fragments":["an"]},{"Key":"or an","Fragments":["`Array`,","endless"]},{"Key":"an `Array`,","Fragments":["but"]},{"Key":"`Array`, but","Fragments":["I"]},{"Key":"I assume","Fragments":["the"]},{"Key":"assume the","Fragments":["conversion"]},{"Key":"conversion is","Fragments":["also","probably"]},{"Key":"also O(n),","Fragments":["so"]},{"Key":"O(n), so","Fragments":["not"]},{"Key":"much is","Fragments":["gained."]},{"Key":"Your comment","Fragments":["made"]},{"Key":"comment made","Fragments":["me"]},{"Key":"made me","Fragments":["decide","think"]},{"Key":"me decide","Fragments":["to"]},{"Key":"go look","Fragments":["into"]},{"Key":"into datatypes","Fragments":["that"]},{"Key":"datatypes that","Fragments":["might"]},{"Key":"might do","Fragments":["what"]},{"Key":"I want.","Fragments":["It"]},{"Key":"want. It","Fragments":["makes"]},{"Key":"It makes","Fragments":["sense","this"]},{"Key":"me that","Fragments":["there","way,","```minesAt```","5","you're","would"]},{"Key":"a datatype","Fragments":["that"]},{"Key":"datatype that","Fragments":["is"]},{"Key":"mutable list","Fragments":["but"]},{"Key":"list but","Fragments":["can"]},{"Key":"but can","Fragments":["return"]},{"Key":"can return","Fragments":["a","just"]},{"Key":"to an","Fragments":["immutable","Array[Char]","object,","array.","immutable","`if/else`.","uneven","empty"]},{"Key":"immutable version","Fragments":["without"]},{"Key":"version without","Fragments":["copying","if/else"]},{"Key":"without copying","Fragments":["it"]},{"Key":"copying it","Fragments":["(unless"]},{"Key":"it (unless","Fragments":["you"]},{"Key":"(unless you","Fragments":["change"]},{"Key":"change it","Fragments":["after"]},{"Key":"it after","Fragments":["the"]},{"Key":"after the","Fragments":["reference","match","other.","filter!","computation.","other"]},{"Key":"reference is","Fragments":["created)."]},{"Key":"is created).","Fragments":["I"]},{"Key":"created). I","Fragments":["think"]},{"Key":"think maybe","Fragments":["I"]},{"Key":"you know","Fragments":["if","about","what","if","if"]},{"Key":"if that's","Fragments":["how","possible"]},{"Key":"that's how","Fragments":["the"]},{"Key":"the `ListBuffer`","Fragments":["works?"]},{"Key":"`ListBuffer` works?","Fragments":["I'm"]},{"Key":"works? I'm","Fragments":["pretty"]},{"Key":"to scala!","Fragments":["Any"]},{"Key":"scala! Any","Fragments":["thoughts?"]},{"Key":"Any thoughts?","Fragments":["Is"]},{"Key":"thoughts? Is","Fragments":["there"]},{"Key":"great, especially","Fragments":["the"]},{"Key":"especially the","Fragments":["fact"]},{"Key":"be interested","Fragments":["in","in","in","in"]},{"Key":"interested in","Fragments":["a","better","your","the","seeing"]},{"Key":"solution where","Fragments":["no"]},{"Key":"where no","Fragments":["`coll.reverse`"]},{"Key":"no `coll.reverse`","Fragments":["is"]},{"Key":"`coll.reverse` is","Fragments":["required"]},{"Key":"is required","Fragments":["as","b/c"]},{"Key":"required as","Fragments":["last"]},{"Key":"as last","Fragments":["step,"]},{"Key":"last step,","Fragments":["because"]},{"Key":"step, because","Fragments":["it"]},{"Key":"be really","Fragments":["expensive","big."]},{"Key":"really expensive","Fragments":["for"]},{"Key":"expensive for","Fragments":["larger"]},{"Key":"for larger","Fragments":["collections."]},{"Key":"version contains","Fragments":["minor","minor"]},{"Key":"contains minor","Fragments":["cosmetic","cosmetic"]},{"Key":"minor cosmetic","Fragments":["changes","changes"]},{"Key":"cosmetic changes","Fragments":["(change","(change"]},{"Key":"changes (change","Fragments":["in","in"]},{"Key":"(change in","Fragments":["name","name"]},{"Key":"in name","Fragments":["of","of","since"]},{"Key":"of Bob's","Fragments":["constructor","public","constructor"]},{"Key":"Bob's constructor","Fragments":["argument).","argument)."]},{"Key":"feedback -","Fragments":["I'm"]},{"Key":"- I'm","Fragments":["new","still"]},{"Key":"I'm new","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"really appreciate","Fragments":["the","the"]},{"Key":"appreciate the","Fragments":["feedback!","pointers","feedback."]},{"Key":"The regex","Fragments":["in","is","can"]},{"Key":"regex in","Fragments":["'shouting'","tests.","the","the"]},{"Key":"in 'shouting'","Fragments":["is"]},{"Key":"'shouting' is","Fragments":["such"]},{"Key":"is such","Fragments":["that"]},{"Key":"such that","Fragments":["strings","the"]},{"Key":"that strings","Fragments":["that"]},{"Key":"that only","Fragments":["contain","iterates","the"]},{"Key":"only contain","Fragments":["numbers"]},{"Key":"contain numbers","Fragments":["aren't"]},{"Key":"numbers aren't","Fragments":["considered"]},{"Key":"aren't considered","Fragments":["shouting."]},{"Key":"considered shouting.","Fragments":["I'll","(invariant"]},{"Key":"shouting. I'll","Fragments":["try"]},{"Key":"I'll try","Fragments":["to","to","implementing","to","pattern","the","another"]},{"Key":"that more","Fragments":["clear"]},{"Key":"more clear","Fragments":["by"]},{"Key":"clear by","Fragments":["moving","the"]},{"Key":"by moving","Fragments":["the"]},{"Key":"moving the","Fragments":["regex","private"]},{"Key":"to its","Fragments":["own","own","sheer"]},{"Key":"own function","Fragments":["with"]},{"Key":"the 'if'","Fragments":["is"]},{"Key":"'if' is","Fragments":["better"]},{"Key":"better expressed","Fragments":["as","with"]},{"Key":"expressed as","Fragments":["a","`dnaNucleotides","`if`"]},{"Key":"Nice trick","Fragments":["with","with"]},{"Key":"with toUppercase.","Fragments":["But"]},{"Key":"toUppercase. But","Fragments":["i"]},{"Key":"But i","Fragments":["guess"]},{"Key":"i guess","Fragments":["that"]},{"Key":"guess that","Fragments":["makes","was"]},{"Key":"makes the","Fragments":["Regex","code","purpose","code","tests","solution","test","code","method","code","code","code","logic","code","code"]},{"Key":"the Regex","Fragments":["match"]},{"Key":"Regex match","Fragments":["unnecessairy,"]},{"Key":"match unnecessairy,","Fragments":["cause"]},{"Key":"unnecessairy, cause","Fragments":["it's"]},{"Key":"cause it's","Fragments":["always"]},{"Key":"it's always","Fragments":["true."]},{"Key":"also move","Fragments":["the","the"]},{"Key":"the matching","Fragments":["as","group","into"]},{"Key":"matching as","Fragments":["inner"]},{"Key":"functions of","Fragments":["hey,"]},{"Key":"of hey,","Fragments":["which"]},{"Key":"hey, which","Fragments":["will"]},{"Key":"which will","Fragments":["make","do","cause","add","still"]},{"Key":"the statement","Fragments":["paremter"]},{"Key":"statement paremter","Fragments":["awailable"]},{"Key":"paremter awailable","Fragments":["to"]},{"Key":"awailable to","Fragments":["them"]},{"Key":"to them","Fragments":["by"]},{"Key":"them by","Fragments":["default.","making"]},{"Key":"Another unwritten","Fragments":["convention"]},{"Key":"unwritten convention","Fragments":["for"]},{"Key":"convention for","Fragments":["Scala","constants","constants"]},{"Key":"for Scala","Fragments":["is","style","where","may"]},{"Key":"is prefixing","Fragments":["checking"]},{"Key":"prefixing checking","Fragments":["functions"]},{"Key":"checking functions","Fragments":["with"]},{"Key":"functions with","Fragments":["`is`","good","good","good"]},{"Key":"def hey(statement:String):String","Fragments":["="]},{"Key":"hey(statement:String):String =","Fragments":["{"]},{"Key":"def isShouting():Boolean","Fragments":["="]},{"Key":"isShouting():Boolean =","Fragments":["statement"]},{"Key":"= statement","Fragments":["=="]},{"Key":"statement ==","Fragments":["statement.toUpperCase"]},{"Key":"def isQuestion():Boolean","Fragments":["="]},{"Key":"isQuestion():Boolean =","Fragments":["statement.endsWith(\"?\")"]},{"Key":"def isSilence():Boolean","Fragments":["="]},{"Key":"isSilence():Boolean =","Fragments":["statement.trim.isEmpty"]},{"Key":"if (isShouting)","Fragments":["\"Woah,"]},{"Key":"(isShouting) \"Woah,","Fragments":["chill"]},{"Key":"if (isQuestion)","Fragments":["\"Sure.\""]},{"Key":"if (isSlence)","Fragments":["\"Fine."]},{"Key":"(isSlence) \"Fine.","Fragments":["Be"]},{"Key":" sure,","Fragments":["if"]},{"Key":"sure, if","Fragments":["there","I"]},{"Key":"are no","Fragments":["more","`val`s","other"]},{"Key":"no more","Fragments":["available"]},{"Key":"more available","Fragments":["names"]},{"Key":"available names","Fragments":["left","it"]},{"Key":"names left","Fragments":["then"]},{"Key":"left then","Fragments":["this"]},{"Key":"this never","Fragments":["terminates."]},{"Key":"never terminates.","Fragments":["But"]},{"Key":"terminates. But","Fragments":["then"]},{"Key":"again, isn't","Fragments":["this"]},{"Key":"isn't this","Fragments":["then"]},{"Key":"this then","Fragments":["more"]},{"Key":"then more","Fragments":["a"]},{"Key":"a flaw","Fragments":["in"]},{"Key":"flaw in","Fragments":["the"]},{"Key":"problem design?","Fragments":[";-)"]},{"Key":"not sure,","Fragments":["if","I'll"]},{"Key":"I fully","Fragments":["understand"]},{"Key":"fully understand","Fragments":["your"]},{"Key":"code, but","Fragments":["I","if"]},{"Key":"a question:","Fragments":["Does"]},{"Key":"question: Does","Fragments":["the"]},{"Key":"Does the","Fragments":["code"]},{"Key":"code prevent","Fragments":["an"]},{"Key":"prevent an","Fragments":["endless"]},{"Key":"an endless","Fragments":["loop","loop.","recursion"]},{"Key":"endless loop","Fragments":["if"]},{"Key":"loop if","Fragments":["there","all"]},{"Key":"are more","Fragments":["robots","type-safe","natural","robots","robots"]},{"Key":"more robots","Fragments":["than","than","than"]},{"Key":"robots than","Fragments":["available","available","available"]},{"Key":"than available","Fragments":["names?","robot","names"]},{"Key":" BTW","Fragments":["I"]},{"Key":"your poor","Fragments":["man's"]},{"Key":"poor man's","Fragments":["DSL"]},{"Key":"man's DSL","Fragments":["-"]},{"Key":"DSL -","Fragments":["(2"]},{"Key":"- (2","Fragments":["letters)"]},{"Key":"(2 letters)","Fragments":["and"]},{"Key":"letters) and","Fragments":["(3"]},{"Key":"and (3","Fragments":["digits)"]},{"Key":"(3 digits)","Fragments":["is"]},{"Key":"digits) is","Fragments":["quite"]},{"Key":"quite readable","Fragments":[":-)","and","and"]},{"Key":" No","Fragments":["need","need","need","need","regex","tests","custom","reason","vars,","regex","it","need","problem!","need","need","its"]},{"Key":"No need","Fragments":["for","for","for","to","to","for","for","for","for"]},{"Key":"for comment","Fragments":["at"]},{"Key":"comment at","Fragments":["top"]},{"Key":"at top","Fragments":["of"]},{"Key":"top of","Fragments":["file."]},{"Key":"the blank","Fragments":["lines"]},{"Key":"blank lines","Fragments":["in"]},{"Key":"lines in","Fragments":["the"]},{"Key":"for null","Fragments":["check"]},{"Key":"null check","Fragments":["line"]},{"Key":"check line","Fragments":["18."]},{"Key":" `s.filter(_.isLetter).length","Fragments":["\u003e"]},{"Key":"`s.filter(_.isLetter).length \u003e","Fragments":["0`"]},{"Key":"\u003e 0`","Fragments":["use","can"]},{"Key":"0` use","Fragments":["`s.exists(_.isLetter)`"]},{"Key":" Convention","Fragments":["is","is"]},{"Key":"Convention is","Fragments":["not","often"]},{"Key":"after `!`","Fragments":["line"]},{"Key":"`!` line","Fragments":["22."]},{"Key":" @aryanna","Fragments":["-"]},{"Key":"@aryanna -","Fragments":["Look"]},{"Key":"- Look","Fragments":["at"]},{"Key":"at it,","Fragments":["I"]},{"Key":"it, I","Fragments":["HACKED","get"]},{"Key":"I HACKED","Fragments":["IT!"]},{"Key":"HACKED IT!","Fragments":[":D"]},{"Key":"I agree.","Fragments":["An","Thank","if"]},{"Key":"agree. An","Fragments":["API"]},{"Key":"An API","Fragments":["should"]},{"Key":"API should","Fragments":["always"]},{"Key":"should always","Fragments":["return","strive"]},{"Key":"always return","Fragments":["immutable","the","a"]},{"Key":"return immutable","Fragments":["objects."]},{"Key":"That holds","Fragments":["especially"]},{"Key":"holds especially","Fragments":["for"]},{"Key":"especially for","Fragments":["FP,"]},{"Key":"for FP,","Fragments":["but"]},{"Key":"FP, but","Fragments":["is"]},{"Key":"also good","Fragments":["practice"]},{"Key":"practice in","Fragments":["OOP."]},{"Key":" Hint:","Fragments":["You"]},{"Key":"Hint: You","Fragments":["have"]},{"Key":"var declared,","Fragments":["so"]},{"Key":"declared, so","Fragments":["why"]},{"Key":"it of","Fragments":["mutable"]},{"Key":"of mutable","Fragments":["type?","arrays","map"]},{"Key":"Looks really","Fragments":["good!","good!","clean!"]},{"Key":"really good!","Fragments":["I"]},{"Key":"good! I","Fragments":["think"]},{"Key":"think also","Fragments":["it"]},{"Key":"also it","Fragments":["would"]},{"Key":"be good","Fragments":["idea","idea","idea","for?"]},{"Key":"make def","Fragments":["db"]},{"Key":"db return","Fragments":["an"]},{"Key":"return an","Fragments":["immutable","Option,"]},{"Key":"map, so","Fragments":["we"]},{"Key":"we cannot","Fragments":["operate"]},{"Key":"cannot operate","Fragments":["on"]},{"Key":"operate on","Fragments":["it","the","strings."]},{"Key":"on it","Fragments":["in","is","directly,","and","directly,"]},{"Key":"in \"outside","Fragments":["world\""]},{"Key":" btw","Fragments":["you're"]},{"Key":"btw you're","Fragments":["adding"]},{"Key":"you're adding","Fragments":["to"]},{"Key":"adding to","Fragments":["your"]},{"Key":"your new","Fragments":["map","class"]},{"Key":"new map","Fragments":["concatenating","(yes"]},{"Key":"map concatenating","Fragments":["a"]},{"Key":"concatenating a","Fragments":["map"]},{"Key":"one entry.","Fragments":["You"]},{"Key":"entry. You","Fragments":["could"]},{"Key":"could as","Fragments":["easily"]},{"Key":"as easily","Fragments":["just"]},{"Key":"easily just","Fragments":["added"]},{"Key":"just added","Fragments":["the"]},{"Key":"the entry","Fragments":["to"]},{"Key":"entry to","Fragments":["the"]},{"Key":"map `m+=","Fragments":["b.toLowerCase"]},{"Key":"`m+= b.toLowerCase","Fragments":["-\u003e"]},{"Key":"b.toLowerCase -\u003e","Fragments":["a._1`"]},{"Key":" Two","Fragments":["questions.","options","things:","nitpicks:","minor","other"]},{"Key":"1. why","Fragments":["the"]},{"Key":"why the","Fragments":["need","spurious","specification","yelling","IAE"]},{"Key":"special function","Fragments":["just"]},{"Key":"function just","Fragments":["to"]},{"Key":"do `toLowerCase`","Fragments":["?"]},{"Key":"2. why","Fragments":["do"]},{"Key":"you explicitly","Fragments":["sort"]},{"Key":"explicitly sort","Fragments":["the"]},{"Key":"One tiny","Fragments":["nitpick,","nitpick,"]},{"Key":"tiny nitpick,","Fragments":["the","why"]},{"Key":"nitpick, the","Fragments":["parameter"]},{"Key":"the parameter","Fragments":["name","each","name"]},{"Key":"parameter name","Fragments":["`in`","than"]},{"Key":"name `in`","Fragments":["does"]},{"Key":"`in` does","Fragments":["not"]},{"Key":"really say","Fragments":["anything."]},{"Key":"say anything.","Fragments":["Perhaps"]},{"Key":"anything. Perhaps","Fragments":["it"]},{"Key":"Perhaps it","Fragments":["could"]},{"Key":"be renamed","Fragments":["to"]},{"Key":"renamed to","Fragments":["something"]},{"Key":"to something","Fragments":["like","outside:","like","a","like","more"]},{"Key":"them ```@jewel```ursive?","Fragments":[";-)"]},{"Key":"As this","Fragments":["was"]},{"Key":"was rather","Fragments":["easy"]},{"Key":"rather easy","Fragments":["task,"]},{"Key":"easy task,","Fragments":["I"]},{"Key":"task, I","Fragments":["wanted"]},{"Key":"to challenge","Fragments":["myself"]},{"Key":"challenge myself","Fragments":["by"]},{"Key":"myself by","Fragments":["not"]},{"Key":"any scala","Fragments":["goodies."]},{"Key":"Excellent pointers.","Fragments":["Thanks!"]},{"Key":" Quite","Fragments":["good!"]},{"Key":"some (minor)","Fragments":["remarks:"]},{"Key":"* Using","Fragments":["a","some","an","\"return\""]},{"Key":"Using a","Fragments":["`SortedMap`,","map","`for`"]},{"Key":"`SortedMap`, you","Fragments":["could"]},{"Key":"have avoided","Fragments":["to"]},{"Key":"avoided to","Fragments":["sort"]},{"Key":"sort yourself","Fragments":["the"]},{"Key":"yourself the","Fragments":["map."]},{"Key":"* `Map`","Fragments":["has"]},{"Key":"`Map` has","Fragments":["a"]},{"Key":"method `withDefaultValue`","Fragments":["that"]},{"Key":"`withDefaultValue` that","Fragments":["accepts"]},{"Key":"that accepts","Fragments":["a"]},{"Key":"accepts a","Fragments":["value","`String`"]},{"Key":"a value","Fragments":["(instead","in","`t`"]},{"Key":"value (instead","Fragments":["of"]},{"Key":"a function).","Fragments":["Just"]},{"Key":"function). Just","Fragments":["to"]},{"Key":"Just to","Fragments":["save"]},{"Key":"to save","Fragments":["5","state/","typing"]},{"Key":"save 5","Fragments":["characters"]},{"Key":"5 characters","Fragments":[";-)"]},{"Key":"your `filter(_.isDigit)`","Fragments":["-"]},{"Key":"`filter(_.isDigit)` -","Fragments":["better"]},{"Key":"- better","Fragments":["than"]},{"Key":"better than","Fragments":["what","your","the","\"equals\"","mine.","TreeMap?","the","the","mine.","concatenation","initially,","using","```...Helper```."]},{"Key":"than what","Fragments":["I'd","I","I"]},{"Key":"what I'd","Fragments":["used."]},{"Key":" re-implementation","Fragments":["of"]},{"Key":"re-implementation of","Fragments":["```sliding```.","startsWith/containsSlice"]},{"Key":" if(s1.length","Fragments":["!="]},{"Key":"if(s1.length !=","Fragments":["s2.length)"]},{"Key":"!= s2.length)","Fragments":["throw"]},{"Key":"s2.length) throw","Fragments":["new"]},{"Key":"if (s1","Fragments":["=="]},{"Key":"(s1 ==","Fragments":["s2)"]},{"Key":"== s2)","Fragments":["return"]},{"Key":"s2) return","Fragments":["(0)"]},{"Key":"else return(s1.zip(s2).filter{case(x,","Fragments":["y)"]},{"Key":"return(s1.zip(s2).filter{case(x, y)","Fragments":["=\u003e"]},{"Key":"y) =\u003e","Fragments":["x","x","x","x"]},{"Key":" which","Fragments":["is","has"]},{"Key":"good point!","Fragments":["Will","Weird"]},{"Key":"point! Will","Fragments":["review"]},{"Key":"Will review","Fragments":["that"]},{"Key":"review that","Fragments":[";)"]},{"Key":"interesting, I","Fragments":["wouldn't"]},{"Key":"wouldn't have","Fragments":["thought","to","thought"]},{"Key":"have thought","Fragments":["to","to","of"]},{"Key":"thought to","Fragments":["do","use"]},{"Key":"this way,","Fragments":["I"]},{"Key":"just discovered","Fragments":["groupBy,"]},{"Key":"discovered groupBy,","Fragments":["it's"]},{"Key":"groupBy, it's","Fragments":["really"]},{"Key":"it's really","Fragments":["fantastic.","clear","necessary.","necessary."]},{"Key":"really fantastic.","Fragments":["Might"]},{"Key":"fantastic. Might","Fragments":["I"]},{"Key":"Might I","Fragments":["suggest"]},{"Key":"I suggest","Fragments":["tweaking","to","the","that"]},{"Key":"suggest tweaking","Fragments":["sameWords"]},{"Key":"tweaking sameWords","Fragments":["to"]},{"Key":"sameWords to","Fragments":["take"]},{"Key":"to take","Fragments":["one"]},{"Key":"take one","Fragments":["parameter"]},{"Key":"one parameter","Fragments":["from"]},{"Key":"parameter from","Fragments":["the"]},{"Key":"class scope?","Fragments":["Right"]},{"Key":"scope? Right","Fragments":["now"]},{"Key":"Right now","Fragments":["it's","you're"]},{"Key":"it's functioning","Fragments":["as"]},{"Key":"functioning as","Fragments":["sort"]},{"Key":"as sort","Fragments":["of"]},{"Key":"static method","Fragments":["that"]},{"Key":"that isn't","Fragments":["really"]},{"Key":"isn't really","Fragments":["tied"]},{"Key":"really tied","Fragments":["to"]},{"Key":"what Anagram.word","Fragments":["actually"]},{"Key":"Anagram.word actually","Fragments":["is,"]},{"Key":"actually is,","Fragments":["but"]},{"Key":"is, but","Fragments":["you"]},{"Key":"you always","Fragments":["supply","different"]},{"Key":"always supply","Fragments":["Anagram.word"]},{"Key":"supply Anagram.word","Fragments":["as"]},{"Key":"Anagram.word as","Fragments":["one"]},{"Key":"as one","Fragments":["of"]},{"Key":"I've noticed","Fragments":["you"]},{"Key":"noticed you","Fragments":["commenting"]},{"Key":"you commenting","Fragments":["on"]},{"Key":"commenting on","Fragments":["a"]},{"Key":"few different","Fragments":["submissions"]},{"Key":"different submissions","Fragments":["for"]},{"Key":"submissions for","Fragments":["this"]},{"Key":"this exercise,","Fragments":["I'd","is"]},{"Key":"be happy","Fragments":["to","to","to"]},{"Key":"happy to","Fragments":["have","get","learn."]},{"Key":"your input","Fragments":["on",":)","\"number\"","and","is"]},{"Key":"input on","Fragments":["mine!"]},{"Key":" Kept","Fragments":["it"]},{"Key":"Kept it","Fragments":["pretty"]},{"Key":"it pretty","Fragments":["functional.","simple,"]},{"Key":"pretty functional.","Fragments":["I"]},{"Key":"functional. I","Fragments":["don't"]},{"Key":"know whether","Fragments":["to","a"]},{"Key":"whether to","Fragments":["put","use"]},{"Key":"functions into","Fragments":["a"]},{"Key":"separate object.","Fragments":["What"]},{"Key":"object. What","Fragments":["do"]},{"Key":"`case 11","Fragments":["if"]},{"Key":"11 if","Fragments":["(digits.startsWith(\"1\"))"]},{"Key":"if (digits.startsWith(\"1\"))","Fragments":["=\u003e"]},{"Key":"(digits.startsWith(\"1\")) =\u003e","Fragments":["digits.tail`"]},{"Key":"it fall","Fragments":["through"]},{"Key":"fall through","Fragments":["to"]},{"Key":"through to","Fragments":["the"]},{"Key":"the default","Fragments":["case","map","behavior","implementation","Char"]},{"Key":"default case","Fragments":["for","based"]},{"Key":"the invalid","Fragments":["number.","case","case."]},{"Key":"agree. Thank","Fragments":["you"]},{"Key":"first nitpick","Fragments":["would"]},{"Key":"nitpick would","Fragments":["be"]},{"Key":"be that","Fragments":["you","way!\",","you"]},{"Key":"you iterate","Fragments":["multiple","over"]},{"Key":"iterate multiple","Fragments":["times"]},{"Key":"multiple times","Fragments":["over"]},{"Key":"times over","Fragments":["the"]},{"Key":"over the","Fragments":["strings,","strings","two","input","top,","keys","data","first","string,","splitted","counted","input","previous","`Range`","toasty,","other,","elements","String","linked","full","strings","strings","mutable,"]},{"Key":"the strings,","Fragments":["for"]},{"Key":"strings, for","Fragments":["example"]},{"Key":"example you","Fragments":["check"]},{"Key":"you check","Fragments":["for","that"]},{"Key":"the strings","Fragments":["but","with","s1","(here,","in","could","are","too","to"]},{"Key":"strings but","Fragments":["your"]},{"Key":"for loop","Fragments":["later","\u0026","'i'"]},{"Key":"loop later","Fragments":["already"]},{"Key":"later already","Fragments":["fullfills"]},{"Key":"already fullfills","Fragments":["this"]},{"Key":"fullfills this","Fragments":["case."]},{"Key":"a later","Fragments":["iteration","time;"]},{"Key":"later iteration","Fragments":["I"]},{"Key":"iteration I","Fragments":["would","pulled","changed"]},{"Key":"to nitpick","Fragments":["about","that"]},{"Key":"nitpick about","Fragments":["the"]},{"Key":"of 'var'","Fragments":["in"]},{"Key":"'var' in","Fragments":["this"]},{"Key":" Many","Fragments":["thanks"]},{"Key":"Many thanks","Fragments":["for"]},{"Key":"review. I","Fragments":["refactored","replaced"]},{"Key":"I refactored","Fragments":["the","the","down"]},{"Key":"exercise to","Fragments":["use","learn","re-implement","do"]},{"Key":" Concise","Fragments":["and"]},{"Key":"Concise and","Fragments":["apparently"]},{"Key":"and apparently","Fragments":["efficient."]},{"Key":" However,","Fragments":["the","it's","you","I","you"]},{"Key":"However, the","Fragments":["`next(65)+"]},{"Key":"the `next(65)+","Fragments":["65).toChar`"]},{"Key":"`next(65)+ 65).toChar`","Fragments":["are"]},{"Key":"65).toChar` are","Fragments":["not"]},{"Key":"not easily","Fragments":["understandable"]},{"Key":"easily understandable","Fragments":["(at"]},{"Key":"understandable (at","Fragments":["leat"]},{"Key":"(at leat","Fragments":["for"]},{"Key":"leat for","Fragments":["me)."]},{"Key":"for me).","Fragments":["I"]},{"Key":"me). I","Fragments":["guess"]},{"Key":"guess you're","Fragments":["working"]},{"Key":"you're working","Fragments":["with"]},{"Key":"working with","Fragments":["char","a","the"]},{"Key":"with char","Fragments":["codes"]},{"Key":"char codes","Fragments":["but"]},{"Key":"codes but","Fragments":["I"]},{"Key":"of chars","Fragments":["you're","instead","to"]},{"Key":"chars you're","Fragments":["using."]},{"Key":"if it's","Fragments":["a","better","a","lowercase.","a","obvious","something","not","not"]},{"Key":"use it,","Fragments":["but"]},{"Key":"there's `scala.util.Random.alphanumeric`","Fragments":["that"]},{"Key":"`scala.util.Random.alphanumeric` that","Fragments":["could"]},{"Key":"could suit","Fragments":["to"]},{"Key":"suit to","Fragments":["this"]},{"Key":"why those","Fragments":["if-else's"]},{"Key":"those if-else's","Fragments":["instead"]},{"Key":"if-else's instead","Fragments":["of"]},{"Key":"just returning","Fragments":["the","school"]},{"Key":"returning the","Fragments":["Boolean","response"]},{"Key":"and again","Fragments":["I"]},{"Key":"again I","Fragments":["don't","figured"]},{"Key":"the added","Fragments":["value","value"]},{"Key":"added value","Fragments":["of","of"]},{"Key":"matching here?","Fragments":["just"]},{"Key":"here? just","Fragments":["complicates"]},{"Key":"matters for","Fragments":["nothing."]},{"Key":" understood","Fragments":["..."]},{"Key":"understood ...","Fragments":["will"]},{"Key":"... will","Fragments":["try"]},{"Key":"will try","Fragments":["to","to","with","that","to"]},{"Key":"to control","Fragments":["my"]},{"Key":"control my","Fragments":["habit"]},{"Key":"my habit","Fragments":["of"]},{"Key":"I'll have","Fragments":["to","to","to","to","to","to"]},{"Key":"remember that","Fragments":["`distinct`","one,"]},{"Key":"that `distinct`","Fragments":["method."]},{"Key":"`distinct` method.","Fragments":["Thanks."]},{"Key":" `nextInt`","Fragments":["is"]},{"Key":"`nextInt` is","Fragments":["exclusive"]},{"Key":"is exclusive","Fragments":["of"]},{"Key":"exclusive of","Fragments":["the"]},{"Key":"the end,","Fragments":["so","I","to"]},{"Key":"end, so","Fragments":["you'll"]},{"Key":"so you'll","Fragments":["never","probably"]},{"Key":"you'll never","Fragments":["get"]},{"Key":"never get","Fragments":["a","the"]},{"Key":"a robot","Fragments":["with","name?","name","name.","name","to"]},{"Key":"robot with","Fragments":["\"..999\"."]},{"Key":"nice Java","Fragments":["code!"]},{"Key":"Java code!","Fragments":[":-)"]},{"Key":"code! :-)","Fragments":["To"]},{"Key":":-) To","Fragments":["convert","quote"]},{"Key":"To convert","Fragments":["this"]},{"Key":"convert this","Fragments":["to"]},{"Key":"Scala FP","Fragments":["style:"]},{"Key":" get","Fragments":["rid","it?"]},{"Key":"those `var`s!","Fragments":["you"]},{"Key":"`var`s! you","Fragments":["could"]},{"Key":"use recursion,","Fragments":["for"]},{"Key":"recursion, for","Fragments":["example."]},{"Key":" remember:","Fragments":["no"]},{"Key":"remember: no","Fragments":["side"]},{"Key":"no side","Fragments":["effects","effects,","effects","effects!","effect"]},{"Key":"effects if","Fragments":["you","you","you","you"]},{"Key":"can probably","Fragments":["cut","still","use","replace"]},{"Key":"probably cut","Fragments":["down"]},{"Key":"cut down","Fragments":["on","the"]},{"Key":"down on","Fragments":["the"]},{"Key":"the if/else","Fragments":["statements","if/else","inside"]},{"Key":"if/else statements","Fragments":["by","although"]},{"Key":"statements by","Fragments":["chaining"]},{"Key":"by chaining","Fragments":["the"]},{"Key":"chaining the","Fragments":["conditions,"]},{"Key":"the conditions,","Fragments":["other","or"]},{"Key":"conditions, other","Fragments":["than"]},{"Key":"other than","Fragments":["that","a","that:","a","giving","an","to"]},{"Key":"than that","Fragments":["all"]},{"Key":" Wow!","Fragments":["Great","Did","Short"]},{"Key":"Wow! Great","Fragments":["solution!"]},{"Key":" much","Fragments":["better!","better!","better!"]},{"Key":"much better!","Fragments":[":-)",":-)",":-)"]},{"Key":"could remove","Fragments":["some"]},{"Key":"remove some","Fragments":["redundancy"]},{"Key":"some redundancy","Fragments":["w/"]},{"Key":"redundancy w/","Fragments":["another"]},{"Key":"w/ another","Fragments":["helper"]},{"Key":"another helper","Fragments":["function"]},{"Key":"for-comprehension (and","Fragments":["perhaps"]},{"Key":"(and perhaps","Fragments":["also","the"]},{"Key":"perhaps also","Fragments":["calling"]},{"Key":"also calling","Fragments":["`mkString`"]},{"Key":"calling `mkString`","Fragments":["already"]},{"Key":"`mkString` already","Fragments":["inside"]},{"Key":"already inside","Fragments":["there)."]},{"Key":"avoid negations","Fragments":["in"]},{"Key":"negations in","Fragments":["the"]},{"Key":"first assertion","Fragments":["by"]},{"Key":"assertion by","Fragments":["replacing"]},{"Key":"by replacing","Fragments":["it"]},{"Key":"replacing it","Fragments":["with"]},{"Key":"with `gene","Fragments":["forall"]},{"Key":"`gene forall","Fragments":["(\"ATCG\""]},{"Key":"forall (\"ATCG\"","Fragments":["contains"]},{"Key":"(\"ATCG\" contains","Fragments":["_)`."]},{"Key":" Creating","Fragments":["a"]},{"Key":"Creating a","Fragments":["new"]},{"Key":"new robot","Fragments":["just"]},{"Key":"robot just","Fragments":["to"]},{"Key":"new name","Fragments":["is","has"]},{"Key":"is wasteful.","Fragments":["Can"]},{"Key":"wasteful. Can","Fragments":["you"]},{"Key":"you avoid","Fragments":["that?"]},{"Key":"Very interesting","Fragments":["implementation!"]},{"Key":"interesting implementation!","Fragments":["My"]},{"Key":"implementation! My","Fragments":["first"]},{"Key":"first two","Fragments":["submissions","cases","conditions?","characters","conditions","letters","conditions","chars"]},{"Key":"two submissions","Fragments":["use"]},{"Key":"submissions use","Fragments":["if/else"]},{"Key":"use if/else","Fragments":["statements"]},{"Key":"statements although","Fragments":["I"]},{"Key":"matching. Yours","Fragments":["is"]},{"Key":"a level","Fragments":["above"]},{"Key":"level above","Fragments":["simple"]},{"Key":"above simple","Fragments":["pattern"]},{"Key":"simple pattern","Fragments":["matching!"]},{"Key":"Thanks a","Fragments":["lot"]},{"Key":"lot for","Fragments":["the"]},{"Key":"the nice","Fragments":["feedback!","feature","Scala"]},{"Key":" Use","Fragments":["`x.exists(_.isLetter)`","require","String's","may","equalsIgnoreCase?"]},{"Key":"Use `x.exists(_.isLetter)`","Fragments":["rather"]},{"Key":"`x.exists(_.isLetter)` rather","Fragments":["than"]},{"Key":" Locale.ENGLISH","Fragments":["is"]},{"Key":"Locale.ENGLISH is","Fragments":["unnecessary."]},{"Key":"often to","Fragments":["move"]},{"Key":"to move","Fragments":["the","the","my","the"]},{"Key":"the `s.trim","Fragments":["match"]},{"Key":"`s.trim match","Fragments":["{`"]},{"Key":"match {`","Fragments":["to"]},{"Key":"{` to","Fragments":["the"]},{"Key":"same line","Fragments":["of","as"]},{"Key":"method (so","Fragments":["line"]},{"Key":"(so line","Fragments":["6)."]},{"Key":"than these","Fragments":["comments,"]},{"Key":"these comments,","Fragments":["very"]},{"Key":"comments, very","Fragments":["nice,"]},{"Key":"very nice,","Fragments":["very"]},{"Key":"nice, very","Fragments":["terse"]},{"Key":"much calendar","Fragments":["math"]},{"Key":"calendar math","Fragments":["and"]},{"Key":"math and","Fragments":["smartness"]},{"Key":"and smartness","Fragments":["for"]},{"Key":"smartness for","Fragments":["me"]},{"Key":"to review.","Fragments":[":-)"]},{"Key":"Perhaps one","Fragments":["idea"]},{"Key":"one idea","Fragments":["for"]},{"Key":"for simplification:","Fragments":["start"]},{"Key":"simplification: start","Fragments":["somewhere"]},{"Key":"start somewhere","Fragments":["(e.g."]},{"Key":"somewhere (e.g.","Fragments":["first","start"]},{"Key":"(e.g. first","Fragments":["of"]},{"Key":"first of","Fragments":["month),"]},{"Key":"of month),","Fragments":["then","then"]},{"Key":"month), then","Fragments":["increase","increase"]},{"Key":"then increase","Fragments":["by","by"]},{"Key":"increase by","Fragments":["1","1","1"]},{"Key":"by 1","Fragments":["day","day","day"]},{"Key":"1 day","Fragments":["till","till","till"]},{"Key":"day till","Fragments":["you","you","you","you"]},{"Key":"till you","Fragments":["get","have","get","have"]},{"Key":"get to","Fragments":["the","work","the","the","know","my","the"]},{"Key":"the desired","Fragments":["weekday?","result?","weekday","weekday?","weekday.","effect"]},{"Key":"same fears.","Fragments":["but"]},{"Key":"fears. but","Fragments":["some"]},{"Key":"but some","Fragments":["performance"]},{"Key":"some performance","Fragments":["check","checks"]},{"Key":"performance check","Fragments":["showed"]},{"Key":"check showed","Fragments":["that"]},{"Key":"showed that","Fragments":["creating"]},{"Key":"that creating","Fragments":["a"]},{"Key":"creating a","Fragments":["new","new","\"random\"","new","map","mutable"]},{"Key":"new GregorianCalendar","Fragments":["and"]},{"Key":"GregorianCalendar and","Fragments":["using"]},{"Key":"and using","Fragments":["```set```","something","`foreach`,"]},{"Key":"using ```set```","Fragments":["amounts"]},{"Key":"```set``` amounts","Fragments":["to"]},{"Key":"amounts to","Fragments":["about"]},{"Key":"to about","Fragments":["the"]},{"Key":"might run","Fragments":["some","into"]},{"Key":"run some","Fragments":["performance"]},{"Key":"performance checks","Fragments":["yourself"]},{"Key":"checks yourself","Fragments":["to"]},{"Key":"yourself to","Fragments":["measure"]},{"Key":"to measure","Fragments":["the","software"]},{"Key":"measure the","Fragments":["difference."]},{"Key":" that's","Fragments":["exactly"]},{"Key":"that's exactly","Fragments":["what"]},{"Key":"was trying","Fragments":["to","out","to","to","to","to"]},{"Key":"to avoid...","Fragments":["I'm"]},{"Key":"avoid... I'm","Fragments":["gonna"]},{"Key":"I'm gonna","Fragments":["create"]},{"Key":"gonna create","Fragments":["a"]},{"Key":"new calendar","Fragments":["on"]},{"Key":"calendar on","Fragments":["each"]},{"Key":"on each","Fragments":["day","character","step","write","call."]},{"Key":"each day","Fragments":["right?...isn't"]},{"Key":"day right?...isn't","Fragments":["that"]},{"Key":"right?...isn't that","Fragments":["horrible"]},{"Key":"that horrible","Fragments":["for"]},{"Key":"horrible for","Fragments":["space/perf?..."]},{"Key":" it's","Fragments":["ugly","not"]},{"Key":"it's ugly","Fragments":["I"]},{"Key":"ugly I","Fragments":["know..."]},{"Key":"I know...","Fragments":[":/"]},{"Key":"know... :/","Fragments":["but"]},{"Key":":/ but","Fragments":["works"]},{"Key":"but works","Fragments":[":)","on"]},{"Key":"extract some","Fragments":["commonly"]},{"Key":"some commonly","Fragments":["used"]},{"Key":"commonly used","Fragments":["code"]},{"Key":"used code","Fragments":["into"]},{"Key":"code into","Fragments":["some","it's","the"]},{"Key":"into some","Fragments":["private"]},{"Key":"some private","Fragments":["helper","helper","helper","helper"]},{"Key":"quite some","Fragments":["calendar"]},{"Key":"some calendar","Fragments":["arithmetic"]},{"Key":"calendar arithmetic","Fragments":["which"]},{"Key":"arithmetic which","Fragments":["makes"]},{"Key":"which makes","Fragments":["it","the"]},{"Key":"it hard","Fragments":["to"]},{"Key":"what exactly","Fragments":["is","do","constitutes"]},{"Key":"exactly is","Fragments":["going"]},{"Key":"on here.","Fragments":["Perhaps"]},{"Key":"here. Perhaps","Fragments":["try"]},{"Key":"Perhaps try","Fragments":["to"]},{"Key":"some simpler","Fragments":["algorithm,"]},{"Key":"simpler algorithm,","Fragments":["like"]},{"Key":"algorithm, like","Fragments":["starting"]},{"Key":"like starting","Fragments":["at"]},{"Key":"starting at","Fragments":["some","0."]},{"Key":"some specific","Fragments":["date"]},{"Key":"specific date","Fragments":["and"]},{"Key":"date and","Fragments":["then"]},{"Key":"then adding","Fragments":["one"]},{"Key":"adding one","Fragments":["day"]},{"Key":"one day","Fragments":["till","and"]},{"Key":" Abstracting","Fragments":["away"]},{"Key":"Abstracting away","Fragments":["from"]},{"Key":"from ```Calendar```","Fragments":["and"]},{"Key":"```Calendar``` and","Fragments":["```GregorianCalendar```"]},{"Key":"and ```GregorianCalendar```","Fragments":["and"]},{"Key":"```GregorianCalendar``` and","Fragments":["hiding"]},{"Key":"and hiding","Fragments":["those"]},{"Key":"hiding those","Fragments":["dirty"]},{"Key":"those dirty","Fragments":["details"]},{"Key":"dirty details","Fragments":["in"]},{"Key":"details in","Fragments":["private","names"]},{"Key":"in private","Fragments":["helper","functions,"]},{"Key":"functions might","Fragments":["also"]},{"Key":"should remove","Fragments":["the"]},{"Key":"the ```println```.","Fragments":[";-)"]},{"Key":"is nitpicking","Fragments":["but"]},{"Key":"nitpicking but","Fragments":["you"]},{"Key":"the ```val```","Fragments":["in"]},{"Key":"```val``` in","Fragments":["```val"]},{"Key":"in ```val","Fragments":["seconds:"]},{"Key":"```val seconds:","Fragments":["Long```"]},{"Key":"seconds: Long```","Fragments":["as"]},{"Key":"Long``` as","Fragments":["you"]},{"Key":"you declare","Fragments":["```SpaceAge```","the","it","s1"]},{"Key":"declare ```SpaceAge```","Fragments":["as"]},{"Key":"```SpaceAge``` as","Fragments":["a"]},{"Key":"quote from","Fragments":["the","the","the"]},{"Key":"the Scaladoc","Fragments":["for"]},{"Key":"Scaladoc for","Fragments":["```Regex```:"]},{"Key":" ```The","Fragments":["canonical"]},{"Key":"```The canonical","Fragments":["way"]},{"Key":"canonical way","Fragments":["to"]},{"Key":"a Regex","Fragments":["is"]},{"Key":"Regex is","Fragments":["by"]},{"Key":"method r,","Fragments":["provided"]},{"Key":"r, provided","Fragments":["implicitly"]},{"Key":"provided implicitly","Fragments":["for"]},{"Key":"implicitly for","Fragments":["strings```."]},{"Key":"your case::","Fragments":["```\"[A-Z]\".r```"]},{"Key":"Interesting way","Fragments":["of","to"]},{"Key":"of decomposing","Fragments":["the"]},{"Key":"decomposing the","Fragments":["pattern"]},{"Key":"match into","Fragments":["PartialFunctions."]},{"Key":"into PartialFunctions.","Fragments":["Not"]},{"Key":"PartialFunctions. Not","Fragments":["sure"]},{"Key":"readable but","Fragments":["it"]},{"Key":"solution will","Fragments":["run","run"]},{"Key":"will run","Fragments":["forever","only","into"]},{"Key":"run forever","Fragments":["if"]},{"Key":"forever if","Fragments":["all"]},{"Key":"all names","Fragments":["are","have","are"]},{"Key":" Feedback","Fragments":["on"]},{"Key":"Feedback on","Fragments":["how"]},{"Key":"to prevent","Fragments":["this","the","the"]},{"Key":"prevent this","Fragments":["would"]},{"Key":" Also:","Fragments":["the"]},{"Key":"Also: the","Fragments":["more"]},{"Key":"more names","Fragments":["that"]},{"Key":"names that","Fragments":["have","I","describe","better"]},{"Key":"that have","Fragments":["been","a"]},{"Key":"been found","Fragments":["the"]},{"Key":"found the","Fragments":["longer","desired","regex","best"]},{"Key":"the longer","Fragments":["it","string","vs.","collection,"]},{"Key":"longer it","Fragments":["will"]},{"Key":"take to","Fragments":["find"]},{"Key":"new unused","Fragments":["one."]},{"Key":" [See","Fragments":["next"]},{"Key":"[See next","Fragments":["solutions"]},{"Key":"next solutions","Fragments":["for"]},{"Key":"solutions for","Fragments":["a"]},{"Key":"that gets","Fragments":["pretty"]},{"Key":"gets pretty","Fragments":["close.]"]},{"Key":"change ```private","Fragments":["var"]},{"Key":"```private var","Fragments":["designation```"]},{"Key":"var designation```","Fragments":["to"]},{"Key":"designation``` to","Fragments":["be"]},{"Key":"type String","Fragments":["then"]},{"Key":"String then","Fragments":["you"]},{"Key":"just reassign","Fragments":["a"]},{"Key":"reassign a","Fragments":["new"]},{"Key":"new value","Fragments":["in"]},{"Key":"that simply","Fragments":["returns","act"]},{"Key":"simply returns","Fragments":["the"]},{"Key":"returns the","Fragments":["generated","number","input","truth","number","number","new"]},{"Key":"the generated","Fragments":["name"]},{"Key":"generated name","Fragments":["as"]},{"Key":"String instead","Fragments":["of","of"]},{"Key":"this class","Fragments":["```designation```?","allows","exists"]},{"Key":"But in","Fragments":["general","the","3."]},{"Key":"are on","Fragments":["a","the"]},{"Key":"good way!","Fragments":[":-)"]},{"Key":"tried variations","Fragments":["on"]},{"Key":"variations on","Fragments":["that,"]},{"Key":"on that,","Fragments":["but","you"]},{"Key":"that, but","Fragments":["when","sorted"]},{"Key":"but when","Fragments":["I"]},{"Key":"did that","Fragments":["I"]},{"Key":"couldn't get","Fragments":["the","the","pattern-matching","anything"]},{"Key":"the reset","Fragments":["method"]},{"Key":"reset method","Fragments":["to"]},{"Key":"to work","Fragments":["-","earlier.","the","correctly","for","with","–","in","either."]},{"Key":"- this","Fragments":["way","is","solution"]},{"Key":"way made","Fragments":["sure"]},{"Key":"made sure","Fragments":["that"]},{"Key":"that reset","Fragments":["worked"]},{"Key":"reset worked","Fragments":["as"]},{"Key":"worked as","Fragments":["I"]},{"Key":"wanted it","Fragments":["to."]},{"Key":"am sure","Fragments":["there"]},{"Key":"simpler way","Fragments":["to"]},{"Key":"to generate","Fragments":["the","a","any","different","one","2","a","random","the"]},{"Key":"generate the","Fragments":["robot","random"]},{"Key":"the robot","Fragments":["name,","factory"]},{"Key":"robot name,","Fragments":["but"]},{"Key":"name, but","Fragments":["this","it","that"]},{"Key":"this gave","Fragments":["me"]},{"Key":"me robot","Fragments":["names"]},{"Key":"found aesthetically","Fragments":["pleasing."]},{"Key":"aesthetically pleasing.","Fragments":["(I"]},{"Key":"pleasing. (I","Fragments":["even"]},{"Key":"(I even","Fragments":["switched"]},{"Key":"even switched","Fragments":["isLetter"]},{"Key":"switched isLetter","Fragments":["to"]},{"Key":"isLetter to","Fragments":["isUpper.)"]},{"Key":"much \"Java","Fragments":["code"]},{"Key":"\"Java code","Fragments":["in"]},{"Key":"in Scala\"!","Fragments":[":-)"]},{"Key":"Scala\"! :-)","Fragments":["A"]},{"Key":":-) A","Fragments":["few","simple"]},{"Key":"should try","Fragments":["to","to"]},{"Key":"the \"Functional","Fragments":["Programming\""]},{"Key":"\"Functional Programming\"","Fragments":["(FP)","style."]},{"Key":"Programming\" (FP)","Fragments":["style"]},{"Key":"(FP) style","Fragments":["instead"]},{"Key":"style instead","Fragments":["of"]},{"Key":"the imperative","Fragments":["(Java)","thinking"]},{"Key":"imperative (Java)","Fragments":["style"]},{"Key":"(Java) style","Fragments":["if"]},{"Key":"style if","Fragments":["you"]},{"Key":"you can:","Fragments":["no"]},{"Key":"can: no","Fragments":["side"]},{"Key":"effects, no","Fragments":["```var```,"]},{"Key":"no ```var```,","Fragments":["no"]},{"Key":"```var```, no","Fragments":["loops"]},{"Key":"no loops","Fragments":["if"]},{"Key":"loops if","Fragments":["you"]},{"Key":"collection functions.","Fragments":["In"]},{"Key":"the ```filter```","Fragments":["function","to"]},{"Key":"```filter``` function","Fragments":["instead"]},{"Key":"a ```Seq[Char]```,","Fragments":["so","so"]},{"Key":"change them","Fragments":["into"]},{"Key":"them into","Fragments":["an","a","companion","a"]},{"Key":"Have fun!","Fragments":[":-)"]},{"Key":" Hi,","Fragments":["I","this","I","thought"]},{"Key":"Hi, I","Fragments":["Iike","think"]},{"Key":"I Iike","Fragments":["your"]},{"Key":"Iike your","Fragments":["solution."]},{"Key":"solution. Maybe","Fragments":["for"]},{"Key":"Maybe for","Fragments":["comprehension"]},{"Key":"readable here","Fragments":["instead"]},{"Key":"here instead","Fragments":["of","of","of","of"]},{"Key":"Very nice,","Fragments":["but"]},{"Key":"nice, but","Fragments":["there","deduping","you"]},{"Key":"but there","Fragments":["are","is","are"]},{"Key":"more type-safe","Fragments":["approaches"]},{"Key":"type-safe approaches","Fragments":["(e.g."]},{"Key":"approaches (e.g.","Fragments":["the"]},{"Key":"(e.g. the","Fragments":["scala"]},{"Key":"scala compiler","Fragments":["does"]},{"Key":"not allow","Fragments":["polymorphism","for","to"]},{"Key":"allow polymorphism","Fragments":["over"]},{"Key":"polymorphism over","Fragments":["Enumerations,"]},{"Key":"over Enumerations,","Fragments":["and"]},{"Key":"Enumerations, and","Fragments":["you"]},{"Key":"you cannot","Fragments":["use","have","find","just"]},{"Key":"cannot use","Fragments":["pattern"]},{"Key":"pattern matching)","Fragments":["-","is","and"]},{"Key":"matching) -","Fragments":["although"]},{"Key":"- although","Fragments":["you"]},{"Key":"do gain","Fragments":["the"]},{"Key":"gain the","Fragments":["ability"]},{"Key":"the ability","Fragments":["to"]},{"Key":"ability to","Fragments":["use","modify"]},{"Key":"the `values`","Fragments":["method."]},{"Key":"prefer ```drop```","Fragments":["over"]},{"Key":"```drop``` over","Fragments":["```takeRight```"]},{"Key":"over ```takeRight```","Fragments":["here"]},{"Key":"```takeRight``` here","Fragments":["for"]},{"Key":"extract length","Fragments":["of"]},{"Key":"good number","Fragments":["(in"]},{"Key":"number (in","Fragments":["this"]},{"Key":"(in this","Fragments":["case"]},{"Key":"* For","Fragments":["a","the"]},{"Key":"For a","Fragments":["challange","discussion","more"]},{"Key":"challange you","Fragments":["can"]},{"Key":"reduce first","Fragments":["two"]},{"Key":"two cases","Fragments":["('american'"]},{"Key":"cases ('american'","Fragments":["and"]},{"Key":"('american' and","Fragments":["10-length)"]},{"Key":"and 10-length)","Fragments":["into"]},{"Key":"10-length) into","Fragments":["one"]},{"Key":"one using","Fragments":["regex.","the"]},{"Key":"have `withDefaultValue`","Fragments":["as"]},{"Key":"`withDefaultValue` as","Fragments":["part"]},{"Key":"as part","Fragments":["of","of"]},{"Key":"Map than","Fragments":["just"]},{"Key":"just `m`","Fragments":["(and"]},{"Key":"`m` (and","Fragments":["declare"]},{"Key":"(and declare","Fragments":["it"]},{"Key":"declare it","Fragments":["as","as","lazy."]},{"Key":" Formatting","Fragments":["the","is"]},{"Key":"Formatting the","Fragments":["code"]},{"Key":"code as","Fragments":["you","a","it","readable","well,"]},{"Key":"you did","Fragments":["makes","in","(but","some","for"]},{"Key":"did makes","Fragments":["for"]},{"Key":"makes for","Fragments":["very","easier"]},{"Key":"for very","Fragments":["easy"]},{"Key":"very easy","Fragments":["reading,","to","to"]},{"Key":"easy reading,","Fragments":["which"]},{"Key":"reading, which","Fragments":["also"]},{"Key":"which also","Fragments":["benefits"]},{"Key":"also benefits","Fragments":["from"]},{"Key":"benefits from","Fragments":["having"]},{"Key":"from having","Fragments":["small,","to"]},{"Key":"having small,","Fragments":["simple"]},{"Key":"small, simple","Fragments":["methods"]},{"Key":"simple methods","Fragments":["for"]},{"Key":"the various","Fragments":["type","result","conditions.","Scala","readme"]},{"Key":"various type","Fragments":["of"]},{"Key":"of message","Fragments":["checks."]},{"Key":" Oh...","Fragments":["Nice!"]},{"Key":" ```s.endsWith(\"?\")```","Fragments":["is"]},{"Key":"```s.endsWith(\"?\")``` is","Fragments":["a"]},{"Key":"lot clearer","Fragments":["than"]},{"Key":"clearer than","Fragments":["my"]},{"Key":"than my","Fragments":["```s.last","flatMap.","`.filterNot`","first","first.","first"]},{"Key":"my ```s.last","Fragments":["=="]},{"Key":"```s.last ==","Fragments":["'?'```"]},{"Key":" Suggestion","Fragments":["for"]},{"Key":"Suggestion for","Fragments":["your"]},{"Key":"your isShouting","Fragments":[":"]},{"Key":" ```def","Fragments":["isShouting(s:","isShouting(s:","differentPairs(pair:"]},{"Key":"```def isShouting(s:","Fragments":["String)","String)"]},{"Key":"isShouting(s: String)","Fragments":["=","="]},{"Key":"= s.toUpperCase","Fragments":["==","=="]},{"Key":"s.toUpperCase ==","Fragments":["s","s"]},{"Key":"Good job,","Fragments":["it's","I"]},{"Key":"job, it's","Fragments":["really"]},{"Key":"really clear","Fragments":["and"]},{"Key":" Random","Fragments":["has"]},{"Key":"Random has","Fragments":["it's"]},{"Key":"has it's","Fragments":["own"]},{"Key":"own companion","Fragments":["object"]},{"Key":"object so","Fragments":["you","I"]},{"Key":"actually create","Fragments":["an"]},{"Key":"an instance","Fragments":["of","of"]},{"Key":"instance of","Fragments":["it","`Dna`","the","`DNA`.","Robot","`Random`).","Phrase","`Dna`","```Calendar```"]},{"Key":"was weird.","Fragments":["I"]},{"Key":"weird. I","Fragments":["got"]},{"Key":"got everything","Fragments":["to"]},{"Key":"everything to","Fragments":["pass"]},{"Key":"pass except","Fragments":["the"]},{"Key":"except the","Fragments":["time","apostrophe."]},{"Key":"time on","Fragments":["Venus.","reverse","the"]},{"Key":"on Venus.","Fragments":["I"]},{"Key":"Venus. I","Fragments":["tried"]},{"Key":"tried other","Fragments":["rounding"]},{"Key":"other rounding","Fragments":["methods,"]},{"Key":"rounding methods,","Fragments":["but"]},{"Key":"methods, but","Fragments":["none"]},{"Key":"but none","Fragments":["seemed","for"]},{"Key":"none seemed","Fragments":["to"]},{"Key":"seemed to","Fragments":["work."]},{"Key":"to work.","Fragments":["Now"]},{"Key":"work. Now","Fragments":["that"]},{"Key":"Now that","Fragments":["I've","i"]},{"Key":"that I've","Fragments":["submitted,"]},{"Key":"I've submitted,","Fragments":["I"]},{"Key":"submitted, I","Fragments":["explorer"]},{"Key":"I explorer","Fragments":["some"]},{"Key":"explorer some","Fragments":["others'"]},{"Key":"some others'","Fragments":["code"]},{"Key":"others' code","Fragments":["to"]},{"Key":"what worked","Fragments":["for"]},{"Key":"worked for","Fragments":["them."]},{"Key":"may define","Fragments":["private"]},{"Key":"define private","Fragments":["helper"]},{"Key":"better readability?","Fragments":[";-)"]},{"Key":"a for-comprehension","Fragments":["instead","for","instead","instead","(as","you","instead","for"]},{"Key":"for-comprehension instead","Fragments":["of","of","of","of"]},{"Key":"the replaceFirst","Fragments":["method,"]},{"Key":"replaceFirst method,","Fragments":["neat!"]},{"Key":" too","Fragments":["much"]},{"Key":"much Java!","Fragments":[":-)"]},{"Key":"Java! :-)","Fragments":["Try"]},{"Key":":-) Try","Fragments":["to","find"]},{"Key":"avoid var's","Fragments":["and","if"]},{"Key":"var's and","Fragments":["re-assignments/side"]},{"Key":"and re-assignments/side","Fragments":["effects"]},{"Key":"re-assignments/side effects","Fragments":["if"]},{"Key":"collections provide","Fragments":["many"]},{"Key":"provide many","Fragments":["functions"]},{"Key":"many functions","Fragments":["to"]},{"Key":"help you","Fragments":["here:","to","w/"]},{"Key":"you here:","Fragments":["map,"]},{"Key":"here: map,","Fragments":["flatMap,"]},{"Key":"map, flatMap,","Fragments":["foldXXX,","filter,","filter","count,"]},{"Key":"flatMap, foldXXX,","Fragments":["..."]},{"Key":"your different","Fragments":["Map"]},{"Key":"different Map","Fragments":["types"]},{"Key":"Map types","Fragments":["-"]},{"Key":"types -","Fragments":["as"]},{"Key":"as always","Fragments":["in","different"]},{"Key":"always in","Fragments":["programming"]},{"Key":"in programming","Fragments":["the"]},{"Key":"programming the","Fragments":["hard","names"]},{"Key":"the hard","Fragments":["part","way","work"]},{"Key":"hard part","Fragments":["here"]},{"Key":"part here","Fragments":["is"]},{"Key":"is finding","Fragments":["good"]},{"Key":"finding good","Fragments":["names!"]},{"Key":"good names!","Fragments":[":-)"]},{"Key":" Probably","Fragments":["more","due","the","you","Achim"]},{"Key":"Probably more","Fragments":["readable"]},{"Key":"my flatMap.","Fragments":["Good"]},{"Key":"flatMap. Good","Fragments":["one!"]},{"Key":"Pls try","Fragments":["to"]},{"Key":"it w/o","Fragments":["```var```s!","mapping","a","using","`var`","treating"]},{"Key":"this ```var","Fragments":["c:Int"]},{"Key":"```var c:Int","Fragments":["="]},{"Key":"c:Int =","Fragments":["0```"]},{"Key":"= 0```","Fragments":["for?"]},{"Key":"a ```sealed","Fragments":["trait```","trait","trait```","trait```"]},{"Key":"```sealed trait```","Fragments":["(similar","instead.","w/","w/"]},{"Key":"trait``` (similar","Fragments":["to"]},{"Key":"(similar to","Fragments":["Java"]},{"Key":"Java enums)","Fragments":["for"]},{"Key":"enums) for","Fragments":["the"]},{"Key":"various result","Fragments":["objects."]},{"Key":"And if","Fragments":["you","you","you","you","you"]},{"Key":"want a","Fragments":["challenge:","challenge"]},{"Key":"a challenge:","Fragments":["Try"]},{"Key":"challenge: Try","Fragments":["to"]},{"Key":"to re-implement","Fragments":["```containsSlice```!","```containsSlice```","```map```","the"]},{"Key":"re-implement ```containsSlice```!","Fragments":[":-)"]},{"Key":" .length","Fragments":["\u003e"]},{"Key":".length \u003e","Fragments":["="]},{"Key":"\u003e =","Fragments":["can"]},{"Key":"= can","Fragments":["be"]},{"Key":"prefer case","Fragments":["/"]},{"Key":"case /","Fragments":["pattern"]},{"Key":"/ pattern","Fragments":["matching"]},{"Key":"matching over","Fragments":["'if'"]},{"Key":"over 'if'","Fragments":["conditional"]},{"Key":"'if' conditional","Fragments":["checks."]},{"Key":"conditional checks.","Fragments":["This"]},{"Key":"checks. This","Fragments":["assignment"]},{"Key":"This assignment","Fragments":["was"]},{"Key":"assignment was","Fragments":["simple"]},{"Key":"was simple","Fragments":["enough"]},{"Key":"simple enough","Fragments":["so"]},{"Key":"enough so","Fragments":["that"]},{"Key":"logic of","Fragments":["what"]},{"Key":"question, yell,","Fragments":["etc."]},{"Key":"yell, etc.","Fragments":["case"]},{"Key":"etc. case","Fragments":["be"]},{"Key":"simple match","Fragments":["the"]},{"Key":"the test","Fragments":["does","cases","suite,","set.","results","suite","uses","maybe","cases.","also","suite,","cases","suite).","since","cases?","cases","in","word","cases.","cases).","which","in","cases","suite","suite"]},{"Key":"test does","Fragments":["not"]},{"Key":"be extracted","Fragments":["into"]},{"Key":"extracted into","Fragments":["another"]},{"Key":"into another","Fragments":["function."]},{"Key":" @kayley","Fragments":["Erm,"]},{"Key":"@kayley Erm,","Fragments":["totally"]},{"Key":"Erm, totally","Fragments":["didn't"]},{"Key":"totally didn't","Fragments":["run"]},{"Key":"didn't run","Fragments":["the"]},{"Key":"run the","Fragments":["tests.","tests?","tests?"]},{"Key":"tests. I","Fragments":["was","think"]},{"Key":"just testing","Fragments":["this","to"]},{"Key":"testing this","Fragments":["site"]},{"Key":"this site","Fragments":["out.","to","and"]},{"Key":"site out.","Fragments":["Now"]},{"Key":"out. Now","Fragments":["I"]},{"Key":"Now I","Fragments":["see"]},{"Key":"see Bob's","Fragments":["spec"]},{"Key":"Bob's spec","Fragments":["a"]},{"Key":"spec a","Fragments":["bit"]},{"Key":"more interesting","Fragments":["and"]},{"Key":"interesting and","Fragments":["involved."]},{"Key":"and involved.","Fragments":["Pushing"]},{"Key":"involved. Pushing","Fragments":["an"]},{"Key":"Pushing an","Fragments":["updated"]},{"Key":"an updated","Fragments":["version"]},{"Key":"updated version","Fragments":["with"]},{"Key":"with regex","Fragments":["and","was"]},{"Key":"regex and","Fragments":["testing","make","the"]},{"Key":"and testing","Fragments":["with","lead"]},{"Key":"testing with","Fragments":["scala"]},{"Key":"with scala","Fragments":["tests"]},{"Key":"scala tests","Fragments":["this"]},{"Key":"tests this","Fragments":["time"]},{"Key":"this time","Fragments":["(removing"]},{"Key":"time (removing","Fragments":["pendings)."]},{"Key":"(removing pendings).","Fragments":["Thanks"]},{"Key":"pendings). Thanks","Fragments":["for"]},{"Key":" Did","Fragments":["you","a","not","I","just","you"]},{"Key":"ever run","Fragments":["the"]},{"Key":"the tests?","Fragments":["For","This"]},{"Key":"tests? For","Fragments":["example,"]},{"Key":"example, there","Fragments":["is"]},{"Key":"one test","Fragments":["to","and","that","at","pass"]},{"Key":"to classify","Fragments":["\"I"]},{"Key":"classify \"I","Fragments":["HATE"]},{"Key":"\"I HATE","Fragments":["YOU\""]},{"Key":"HATE YOU\"","Fragments":["as"]},{"Key":"YOU\" as","Fragments":["a","shouting"]},{"Key":"a yell,","Fragments":["so"]},{"Key":"yell, so","Fragments":["your"]},{"Key":"so your","Fragments":["simple","implementation","implementation"]},{"Key":"your simple","Fragments":["check"]},{"Key":"simple check","Fragments":["does"]},{"Key":"check does","Fragments":["not"]},{"Key":"prefer if-else","Fragments":["conditions"]},{"Key":"if-else conditions","Fragments":["when"]},{"Key":"conditions when","Fragments":["there"]},{"Key":"no true","Fragments":["pattern"]},{"Key":"true pattern","Fragments":["matching"]},{"Key":"matching involved,","Fragments":["but"]},{"Key":"involved, but","Fragments":["ok,"]},{"Key":"ok, this","Fragments":["is","might"]},{"Key":"is personal","Fragments":["taste."]},{"Key":"move your","Fragments":["constants"]},{"Key":"your constants","Fragments":["to"]},{"Key":"constants to","Fragments":["some","some","use","just"]},{"Key":"some object","Fragments":["(the","(the","(companion","(-\u003e"]},{"Key":"object (the","Fragments":["companion","companion"]},{"Key":"(the companion","Fragments":["object?).","object"]},{"Key":"so keen","Fragments":["on"]},{"Key":"on pattern","Fragments":["matching,"]},{"Key":"matching, why","Fragments":["not"]},{"Key":"not try","Fragments":["a","but"]},{"Key":"w/ regex","Fragments":["matching"]},{"Key":"matching then?","Fragments":[";-)"]},{"Key":"least ```Yell```","Fragments":["looks"]},{"Key":"```Yell``` looks","Fragments":["overcomplicated"]},{"Key":"looks overcomplicated","Fragments":["to"]},{"Key":"overcomplicated to","Fragments":["me."]},{"Key":"me. Perhaps","Fragments":["```\\W,"]},{"Key":"Perhaps ```\\W,","Fragments":["\\p{Punct}```"]},{"Key":"```\\W, \\p{Punct}```","Fragments":["and"]},{"Key":"\\p{Punct}``` and","Fragments":["the"]},{"Key":"like could","Fragments":["help"]},{"Key":"could help","Fragments":["here."]},{"Key":"help here.","Fragments":["Or"]},{"Key":"here. Or","Fragments":["use"]},{"Key":"Or use","Fragments":["```forall,"]},{"Key":"use ```forall,","Fragments":["exists,"]},{"Key":"exists, isDigit,","Fragments":["...```"]},{"Key":"isDigit, ...```","Fragments":["instead"]},{"Key":"...``` instead","Fragments":["of"]},{"Key":"regex when","Fragments":["it","simple"]},{"Key":"sense. Regex'es","Fragments":["are"]},{"Key":"Regex'es are","Fragments":["not"]},{"Key":"the ultimate","Fragments":["solution"]},{"Key":"ultimate solution","Fragments":["for"]},{"Key":"for everything!","Fragments":[":-)"]},{"Key":" actually","Fragments":["not","I"]},{"Key":"not too","Fragments":["bad.","good","much","happy","much"]},{"Key":"too bad.","Fragments":[":-)"]},{"Key":"more FP","Fragments":["you","style"]},{"Key":"FP you","Fragments":["could"]},{"Key":"use ```Seq.fill```","Fragments":["inside"]},{"Key":"```Seq.fill``` inside","Fragments":["```randomStringFromCharList```"]},{"Key":"inside ```randomStringFromCharList```","Fragments":["(and"]},{"Key":"```randomStringFromCharList``` (and","Fragments":["thus"]},{"Key":"(and thus","Fragments":["get"]},{"Key":"thus get","Fragments":["rid"]},{"Key":" ```_name```","Fragments":["should"]},{"Key":"```_name``` should","Fragments":["be"]},{"Key":"be private","Fragments":["(personally"]},{"Key":"private (personally","Fragments":["I"]},{"Key":"(personally I","Fragments":["don't"]},{"Key":"like underscores","Fragments":["in"]},{"Key":"underscores in","Fragments":["Scala","Scala"]},{"Key":"Scala names,","Fragments":["but"]},{"Key":"names, but","Fragments":["ok).","the","that"]},{"Key":"And should","Fragments":["```reset()```"]},{"Key":"should ```reset()```","Fragments":["not"]},{"Key":"```reset()``` not","Fragments":["just"]},{"Key":"be called","Fragments":["for","if","more"]},{"Key":"called for","Fragments":["side","PopupWindow"]},{"Key":"for side","Fragments":["effect,"]},{"Key":"side effect,","Fragments":["return","so","but"]},{"Key":"effect, return","Fragments":["type"]},{"Key":"Nice fold","Fragments":[":)"]},{"Key":"check out","Fragments":["`groupBy`"]},{"Key":"out `groupBy`","Fragments":["on"]},{"Key":"on `List`","Fragments":["too."]},{"Key":"This may","Fragments":["not"]},{"Key":"may not","Fragments":["be","be","be","be","be"]},{"Key":"be elegant","Fragments":["or"]},{"Key":"elegant or","Fragments":["clever,"]},{"Key":"or clever,","Fragments":["but"]},{"Key":"clever, but","Fragments":["it","I"]},{"Key":"it codifies","Fragments":["the"]},{"Key":"codifies the","Fragments":["rules"]},{"Key":"the rules","Fragments":["in","if","and","as"]},{"Key":"rules in","Fragments":["what"]},{"Key":"feel is","Fragments":["a"]},{"Key":"a readable,","Fragments":["1:1"]},{"Key":"readable, 1:1","Fragments":["manner."]},{"Key":"least if","Fragments":["I"]},{"Key":"understand them","Fragments":["correctly;"]},{"Key":"them correctly;","Fragments":["which"]},{"Key":"correctly; which","Fragments":["I"]},{"Key":"might not.","Fragments":["Help?"]},{"Key":" (Edit)","Fragments":["I"]},{"Key":"(Edit) I","Fragments":["didn't."]},{"Key":"I didn't.","Fragments":["ANd"]},{"Key":"didn't. ANd","Fragments":["it"]},{"Key":"ANd it","Fragments":["failed"]},{"Key":"it failed","Fragments":["tests;"]},{"Key":"failed tests;","Fragments":["my"]},{"Key":"tests; my","Fragments":["IDE"]},{"Key":"my IDE","Fragments":["was"]},{"Key":"IDE was","Fragments":["only"]},{"Key":"was only","Fragments":["running","there"]},{"Key":"only running","Fragments":["one"]},{"Key":"running one","Fragments":["test"]},{"Key":"them which","Fragments":["is"]},{"Key":"is why","Fragments":["I","I"]},{"Key":" schoolMap.getOrElse(grade,","Fragments":["EmptyGrade)"]},{"Key":"schoolMap.getOrElse(grade, EmptyGrade)","Fragments":["is"]},{"Key":"EmptyGrade) is","Fragments":["duplicated."]},{"Key":"an \"import","Fragments":["collection.mutable\""]},{"Key":"\"import collection.mutable\"","Fragments":["and"]},{"Key":"collection.mutable\" and","Fragments":["then"]},{"Key":"then \"...","Fragments":["="]},{"Key":"\"... =","Fragments":["mutable.Map...()\"."]},{"Key":" apart","Fragments":["from"]},{"Key":"apart from","Fragments":["that:","that","that:","clearly"]},{"Key":"from that:","Fragments":["+1","nice!"]},{"Key":"are allocating","Fragments":["a","a"]},{"Key":"allocating a","Fragments":["new","new"]},{"Key":"new `Map[Char,","Fragments":["Char]`","Char]`"]},{"Key":"`Map[Char, Char]`","Fragments":["for","for"]},{"Key":"Char]` for","Fragments":["each","each"]},{"Key":"each instance","Fragments":["of","of","of"]},{"Key":"of `Dna`","Fragments":["(which","-"]},{"Key":"`Dna` (which","Fragments":["should"]},{"Key":"(which should","Fragments":["not"]},{"Key":"really be","Fragments":["a"]},{"Key":"a class,","Fragments":["but"]},{"Key":"class, but","Fragments":["nevermind).","I"]},{"Key":"but nevermind).","Fragments":["You"]},{"Key":"nevermind). You","Fragments":["can"]},{"Key":"can share","Fragments":["this"]},{"Key":"share this","Fragments":["immutable","love."]},{"Key":"this immutable","Fragments":["structure"]},{"Key":"immutable structure","Fragments":["by"]},{"Key":"structure by","Fragments":["making"]},{"Key":"a member","Fragments":["of","variable?","of","of"]},{"Key":"extra set","Fragments":["of"]},{"Key":"set of","Fragments":["curly","regexes,","allNucleotides","chars"]},{"Key":"braces and","Fragments":["level","equal","make"]},{"Key":"and level","Fragments":["of"]},{"Key":"of indentation","Fragments":["by"]},{"Key":"indentation by","Fragments":["declaring"]},{"Key":"by declaring","Fragments":["your","``letters``"]},{"Key":"declaring your","Fragments":["method"]},{"Key":"your method","Fragments":["like","body"]},{"Key":"method like","Fragments":["so:","in","this","`hey`."]},{"Key":"def isLeap","Fragments":["="]},{"Key":"isLeap =","Fragments":["year"]},{"Key":"= year","Fragments":["match"]},{"Key":"year match","Fragments":["{"]},{"Key":"Also, since","Fragments":["`isLeap`","`parseBinary`","sanitize","sanitize"]},{"Key":"since `isLeap`","Fragments":["takes"]},{"Key":"`isLeap` takes","Fragments":["no"]},{"Key":"takes no","Fragments":["arguments"]},{"Key":"no arguments","Fragments":["and"]},{"Key":"arguments and","Fragments":["depends"]},{"Key":"and depends","Fragments":["solely"]},{"Key":"depends solely","Fragments":["on"]},{"Key":"solely on","Fragments":["`year`,"]},{"Key":"on `year`,","Fragments":["you"]},{"Key":"`year`, you","Fragments":["can"]},{"Key":"can make","Fragments":["it","it","it","it","it","it","`areaCode`","`RuleMaker`","it,"]},{"Key":"`val` so","Fragments":["it"]},{"Key":"be evaluated","Fragments":["once.","on","once"]},{"Key":"One more","Fragments":["thing,","minor"]},{"Key":"more thing,","Fragments":["I"]},{"Key":"thing, I","Fragments":["think"]},{"Key":"think Scala","Fragments":["code"]},{"Key":"code typically","Fragments":["puts"]},{"Key":"typically puts","Fragments":["a"]},{"Key":"puts a","Fragments":["space"]},{"Key":"space in","Fragments":["between"]},{"Key":"in between","Fragments":["the"]},{"Key":"the `:`","Fragments":["and"]},{"Key":"`:` and","Fragments":["the"]},{"Key":"the type","Fragments":["(for","signature","definitions","declarations","to","system","annotation","defs","declarations","of","of","`String`","annotations","system","of"]},{"Key":"type (for","Fragments":["fields/methods)."]},{"Key":"(for fields/methods).","Fragments":["It"]},{"Key":"fields/methods). It","Fragments":["seems"]},{"Key":"It seems","Fragments":["more","an","less","also","overly"]},{"Key":"seems more","Fragments":["readable","logical"]},{"Key":"that way,","Fragments":["too.","but","but"]},{"Key":"call a","Fragments":["year"]},{"Key":"a year","Fragments":["\"v\"?"]},{"Key":"The leap","Fragments":["conditions"]},{"Key":"leap conditions","Fragments":["might"]},{"Key":"conditions might","Fragments":["read"]},{"Key":"might read","Fragments":["better"]},{"Key":"read better","Fragments":["using"]},{"Key":"using explanatory","Fragments":["methods."]},{"Key":"was wrong","Fragments":["in"]},{"Key":"wrong in","Fragments":["any"]},{"Key":"in any","Fragments":["case:","case","case"]},{"Key":"any case:","Fragments":["You"]},{"Key":"case: You","Fragments":["would"]},{"Key":"You would","Fragments":["need","then"]},{"Key":"would need","Fragments":["a"]},{"Key":"a `collection.mutable.Seq`","Fragments":["which"]},{"Key":"`collection.mutable.Seq` which","Fragments":["translates"]},{"Key":"which translates","Fragments":["into"]},{"Key":"translates into","Fragments":["an"]},{"Key":"So in","Fragments":["the","this","`sorted`"]},{"Key":"end I","Fragments":["would"]},{"Key":"also prefer","Fragments":["your"]},{"Key":"prefer your","Fragments":["code.","solution"]},{"Key":" @okey","Fragments":["random"]},{"Key":"@okey random","Fragments":["access"]},{"Key":"random access","Fragments":["in"]},{"Key":"access in","Fragments":["Arrays"]},{"Key":"in Arrays","Fragments":["is"]},{"Key":"Arrays is","Fragments":["O(1)"]},{"Key":"is O(1)","Fragments":["compared"]},{"Key":"O(1) compared","Fragments":["with"]},{"Key":"compared with","Fragments":["Seq"]},{"Key":"with Seq","Fragments":["O(n)"]},{"Key":"Seq O(n)","Fragments":["right?"]},{"Key":"O(n) right?","Fragments":["I"]},{"Key":"right? I","Fragments":["know","had"]},{"Key":"doesn't matter","Fragments":["in","at","AND"]},{"Key":"matter in","Fragments":["this"]},{"Key":"case but","Fragments":["I"]},{"Key":"just tried","Fragments":["to"]},{"Key":"to pick","Fragments":["the"]},{"Key":"pick the","Fragments":["right"]},{"Key":"right datastructure","Fragments":["for"]},{"Key":"datastructure for","Fragments":["the"]},{"Key":"this idea","Fragments":["of"]},{"Key":"nested Streams","Fragments":["is"]},{"Key":"Streams is","Fragments":["interesting!"]},{"Key":"is interesting!","Fragments":[":-)"]},{"Key":"why Arrays","Fragments":["and"]},{"Key":"Arrays and","Fragments":["not"]},{"Key":"this works","Fragments":["for"]},{"Key":"for Seqs","Fragments":["as"]},{"Key":"Seqs as","Fragments":["well."]},{"Key":" @janiya","Fragments":["I"]},{"Key":"@janiya I","Fragments":["wanted"]},{"Key":"do index","Fragments":["look"]},{"Key":"index look","Fragments":["ups"]},{"Key":"look ups","Fragments":["on"]},{"Key":"ups on","Fragments":["the"]},{"Key":"the queen's","Fragments":["position,"]},{"Key":"queen's position,","Fragments":["so"]},{"Key":"position, so","Fragments":["I"]},{"Key":"wanted an","Fragments":["Array"]},{"Key":"an Array","Fragments":["of"]},{"Key":"Array of","Fragments":["Arrays"]},{"Key":"of Arrays","Fragments":["to"]},{"Key":"Arrays to","Fragments":["represent"]},{"Key":"represent a","Fragments":["chess"]},{"Key":"a chess","Fragments":["board"]},{"Key":"w/ `foldLeft`","Fragments":["and"]},{"Key":"`foldLeft` and","Fragments":["`unfoldLeft`."]},{"Key":"object, why","Fragments":["is"]},{"Key":"the coming","Fragments":["parameter"]},{"Key":"coming parameter","Fragments":["year"]},{"Key":"parameter year","Fragments":["called"]},{"Key":"year called","Fragments":["\"yr\"?"]},{"Key":"called \"yr\"?","Fragments":["You"]},{"Key":"\"yr\"? You","Fragments":["could"]},{"Key":"could probably","Fragments":["shorten","define","have","be","do"]},{"Key":"probably shorten","Fragments":["it"]},{"Key":"shorten it","Fragments":["with:"]},{"Key":"it with:","Fragments":["new"]},{"Key":"with: new","Fragments":["Year(year)."]},{"Key":"can keep","Fragments":["the","the"]},{"Key":"the property","Fragments":["\"year\""]},{"Key":"property \"year\"","Fragments":["immutable"]},{"Key":"\"year\" immutable","Fragments":["if"]},{"Key":"use \"val\"","Fragments":["instead"]},{"Key":"\"val\" instead","Fragments":["of"]},{"Key":"of \"var\"","Fragments":["within","on"]},{"Key":"\"var\" within","Fragments":["the"]},{"Key":"In order","Fragments":["to"]},{"Key":"to don't","Fragments":["repeat"]},{"Key":"don't repeat","Fragments":["yourself"]},{"Key":"repeat yourself","Fragments":["(DRY),"]},{"Key":"yourself (DRY),","Fragments":["I'd"]},{"Key":"(DRY), I'd","Fragments":["refactor"]},{"Key":"the \"isDivisible...\"","Fragments":["to"]},{"Key":"\"isDivisible...\" to","Fragments":["isDivisibleBy(number:"]},{"Key":"to isDivisibleBy(number:","Fragments":["Int)."]},{"Key":"isDivisibleBy(number: Int).","Fragments":["You"]},{"Key":"Int). You","Fragments":["don't"]},{"Key":"don't actually","Fragments":["need","need"]},{"Key":"actually need","Fragments":["to","to"]},{"Key":"pass the","Fragments":["year","\"only","test","message","original","\"only","arg","argument","```statement```","tests.","predicate","tests.","test"]},{"Key":"the year","Fragments":["as"]},{"Key":"year as","Fragments":["a"]},{"Key":"a parameter,","Fragments":["since","but"]},{"Key":"parameter, since","Fragments":["you"]},{"Key":"can operate","Fragments":["on"]},{"Key":" @chelsie","Fragments":["nice"]},{"Key":"@chelsie nice","Fragments":["tips"]},{"Key":"nice! small","Fragments":["things:"]},{"Key":" use","Fragments":["```==```","SortedMap","\"World\""]},{"Key":"use ```==```","Fragments":["instead"]},{"Key":"```==``` instead","Fragments":["of"]},{"Key":"declare a","Fragments":["```sealed"]},{"Key":"```sealed trait","Fragments":["SublistResult```"]},{"Key":"trait SublistResult```","Fragments":["(or"]},{"Key":"SublistResult``` (or","Fragments":["as"]},{"Key":"(or as","Fragments":["an"]},{"Key":"an enumeration)","Fragments":["instead"]},{"Key":"enumeration) instead","Fragments":["of"]},{"Key":"just an","Fragments":["alias","immutable"]},{"Key":"I'd just","Fragments":["suggest"]},{"Key":"just suggest","Fragments":["refactoring"]},{"Key":"suggest refactoring","Fragments":["the"]},{"Key":"refactoring the","Fragments":["filter"]},{"Key":"filter block","Fragments":["into"]},{"Key":"block into","Fragments":["a","a"]},{"Key":"well-named function.","Fragments":["It"]},{"Key":"your intentions","Fragments":["clear.","would"]},{"Key":" Interesting.","Fragments":["The","I'm","I"]},{"Key":"Interesting. The","Fragments":["best"]},{"Key":"The best","Fragments":["implementation","part:"]},{"Key":"best implementation","Fragments":["I've"]},{"Key":"implementation I've","Fragments":["seen"]},{"Key":"seen today","Fragments":["and"]},{"Key":"today and","Fragments":["(not"]},{"Key":"and (not","Fragments":["coincidentally)"]},{"Key":"(not coincidentally)","Fragments":["very"]},{"Key":"coincidentally) very","Fragments":["close"]},{"Key":"very close","Fragments":["to"]},{"Key":"close to","Fragments":["mine."]},{"Key":"to mine.","Fragments":["I"]},{"Key":"mine. I","Fragments":["pulled","like","think"]},{"Key":"I pulled","Fragments":["out","out"]},{"Key":"pulled out","Fragments":["the","the"]},{"Key":"two `val`s","Fragments":["and"]},{"Key":"`val`s and","Fragments":["the"]},{"Key":"the class,","Fragments":["but","\"Bob\"","apart"]},{"Key":"you handled","Fragments":["this"]},{"Key":"handled this","Fragments":["better."]},{"Key":"this better.","Fragments":["I"]},{"Key":"better. I","Fragments":["always","feel","think"]},{"Key":"always forget","Fragments":["you"]},{"Key":"forget you","Fragments":["can"]},{"Key":"can put","Fragments":["helpers","the"]},{"Key":"put helpers","Fragments":["inside"]},{"Key":"helpers inside","Fragments":["functions."]},{"Key":"the `sorted`","Fragments":["property","function"]},{"Key":"`sorted` property","Fragments":["to"]},{"Key":"property to","Fragments":["do"]},{"Key":"the comparison,","Fragments":["very","ie:"]},{"Key":"comparison, very","Fragments":["elegant."]},{"Key":"are totally","Fragments":["right."]},{"Key":"totally right.","Fragments":["I"]},{"Key":"right. I","Fragments":["just","only","read","understand"]},{"Key":"just enjoyed","Fragments":["writing"]},{"Key":"enjoyed writing","Fragments":["clojure"]},{"Key":"writing clojure","Fragments":["style"]},{"Key":"clojure style","Fragments":["iterate"]},{"Key":"style iterate","Fragments":["function"]},{"Key":"iterate function","Fragments":["(and"]},{"Key":"function (and","Fragments":["of"]},{"Key":"(and of","Fragments":["course"]},{"Key":"solution caches","Fragments":["the"]},{"Key":"caches the","Fragments":["results)"]},{"Key":"Seems overly","Fragments":["complex"]},{"Key":"overly complex","Fragments":["-"]},{"Key":"complex -","Fragments":["why"]},{"Key":"use power","Fragments":["operations?"]},{"Key":"using explicit","Fragments":["recursion."]},{"Key":"explicit recursion.","Fragments":["Have"]},{"Key":"recursion. Have","Fragments":["a"]},{"Key":"the ```zip```","Fragments":["function","function"]},{"Key":"```zip``` function","Fragments":["that",";)","to"]},{"Key":"on most","Fragments":["of"]},{"Key":"the collections,","Fragments":["you"]},{"Key":"collections, you","Fragments":["may"]},{"Key":"may find","Fragments":["it","http://docs.scala-lang.org/overviews/core/string-interpolation.html","the"]},{"Key":"recursive solution","Fragments":["you've","yourself."]},{"Key":"solution you've","Fragments":["written"]},{"Key":"you've written","Fragments":["you"]},{"Key":"written you","Fragments":["would"]},{"Key":"the boolean","Fragments":["conditions.","binary"]},{"Key":"boolean conditions.","Fragments":["It"]},{"Key":"conditions. It","Fragments":["could"]},{"Key":"the could","Fragments":["a"]},{"Key":"could a","Fragments":["bit"]},{"Key":"make `s`","Fragments":["as"]},{"Key":"`s` as","Fragments":["a"]},{"Key":"2. FYI,","Fragments":["`Predef`"]},{"Key":"FYI, `Predef`","Fragments":["has"]},{"Key":"`Predef` has","Fragments":["`identity`"]},{"Key":"has `identity`","Fragments":["function"]},{"Key":"`identity` function","Fragments":["which"]},{"Key":"function which","Fragments":["is","iteratively","is"]},{"Key":"same as","Fragments":["`(x","`some`","`words","[iteration","the","the","a","count"]},{"Key":"as `(x","Fragments":["=\u003e"]},{"Key":"`(x =\u003e","Fragments":["x)`."]},{"Key":"=\u003e x)`.","Fragments":["Although"]},{"Key":"x)`. Although","Fragments":["it's"]},{"Key":"Although it's","Fragments":["longer"]},{"Key":"it's longer","Fragments":["than"]},{"Key":"longer than","Fragments":["`x","10"]},{"Key":"than `x","Fragments":["=\u003e"]},{"Key":"x` by","Fragments":["two"]},{"Key":"by two","Fragments":["chars,"]},{"Key":"two chars,","Fragments":["I"]},{"Key":"chars, I","Fragments":["found"]},{"Key":"more explicit","Fragments":["in","that"]},{"Key":"explicit in","Fragments":["some","the"]},{"Key":"Probably due","Fragments":["to"]},{"Key":"to different","Fragments":["Scala"]},{"Key":"different Scala","Fragments":["versions"]},{"Key":"Scala versions","Fragments":["I"]},{"Key":"versions I","Fragments":["guess."]},{"Key":"How weird","Fragments":["-"]},{"Key":"weird -","Fragments":["mine"]},{"Key":"- mine","Fragments":["compiled"]},{"Key":"mine compiled","Fragments":["just"]},{"Key":"compiled just","Fragments":["fine!"]},{"Key":"just fine!","Fragments":["(see"]},{"Key":"fine! (see","Fragments":["[here](http://exercism.io/submissions/6e961367d71e495ebf68216b20e0ba55))"]},{"Key":" @makenzie","Fragments":["Well"]},{"Key":"@makenzie Well","Fragments":["actually,"]},{"Key":"Well actually,","Fragments":["that"]},{"Key":"actually, that","Fragments":["call"]},{"Key":"that call","Fragments":["*is*"]},{"Key":"call *is*","Fragments":["necessary."]},{"Key":"*is* necessary.","Fragments":["If"]},{"Key":"necessary. If","Fragments":["I"]},{"Key":"try removing","Fragments":["it,"]},{"Key":"removing it,","Fragments":["I"]},{"Key":"I get","Fragments":["a","that","the","a","warned","a","to","to"]},{"Key":"a compile-time","Fragments":["error."]},{"Key":"call `toMap`","Fragments":["on"]},{"Key":"the comprehension","Fragments":["-"]},{"Key":"comprehension -","Fragments":["the","`flatMap`"]},{"Key":"- the","Fragments":["signature","usage","error","construction","warning","definition","validation","use","String","`map`"]},{"Key":"of `flatMap`","Fragments":["on","and"]},{"Key":"`flatMap` on","Fragments":["`Map`"]},{"Key":"on `Map`","Fragments":["shows"]},{"Key":"`Map` shows","Fragments":["that"]},{"Key":"shows that","Fragments":["it","the"]},{"Key":"it returns","Fragments":["a","the"]},{"Key":"new `Map`,","Fragments":["not"]},{"Key":"`Map`, not","Fragments":["a"]},{"Key":" if()","Fragments":["{}"]},{"Key":"if() {}","Fragments":["else"]},{"Key":"{} else","Fragments":["if(){}"]},{"Key":" waterfall","Fragments":["could"]},{"Key":"waterfall could","Fragments":["be"]},{"Key":"rewritten as","Fragments":["a","count{case","`count{case"]},{"Key":"a series","Fragments":["of","of"]},{"Key":"series of","Fragments":["pattern","functions."]},{"Key":"also, is","Fragments":["there"]},{"Key":"is there","Fragments":["a","for","any","a","a","a","some"]},{"Key":"letters are","Fragments":["uppercase?","all"]},{"Key":"good! A","Fragments":["few","few","couple","lot"]},{"Key":"few tweaks","Fragments":["to","for"]},{"Key":"tweaks to","Fragments":["consider:"]},{"Key":"* As","Fragments":["implemented,","previously"]},{"Key":"As implemented,","Fragments":["I"]},{"Key":"implemented, I","Fragments":["believe"]},{"Key":"believe `s`","Fragments":["gets"]},{"Key":"`s` gets","Fragments":["sorted"]},{"Key":"gets sorted","Fragments":["once"]},{"Key":"sorted once","Fragments":["for"]},{"Key":"once for","Fragments":["every","different"]},{"Key":"every string","Fragments":["in","not"]},{"Key":"string in","Fragments":["`strings`.","words)"]},{"Key":"in `strings`.","Fragments":["On"]},{"Key":"`strings`. On","Fragments":["the"]},{"Key":"the scale","Fragments":["of"]},{"Key":"scale of","Fragments":["the","the"]},{"Key":"test cases","Fragments":["this","can","pass?","too.","and","for"]},{"Key":"cases this","Fragments":["doesn't"]},{"Key":"matter at","Fragments":["all,"]},{"Key":"at all,","Fragments":["but","but","in","at"]},{"Key":"all, but","Fragments":["better","this"]},{"Key":"but better","Fragments":["performance"]},{"Key":"better performance","Fragments":["on"]},{"Key":"performance on","Fragments":["larger"]},{"Key":"on larger","Fragments":["data"]},{"Key":"larger data","Fragments":["sets,","I"]},{"Key":"data sets,","Fragments":["cache"]},{"Key":"sets, cache","Fragments":["the"]},{"Key":"cache the","Fragments":["value"]},{"Key":"of `s.toUpperCase.sorted`","Fragments":["on"]},{"Key":"`s.toUpperCase.sorted` on","Fragments":["initialization"]},{"Key":"* Rather","Fragments":["than"]},{"Key":"calling `filter`","Fragments":["twice,"]},{"Key":"`filter` twice,","Fragments":["call"]},{"Key":"twice, call","Fragments":["it"]},{"Key":"it once,","Fragments":["joining"]},{"Key":"once, joining","Fragments":["the"]},{"Key":"joining the","Fragments":["conditions"]},{"Key":"conditions with","Fragments":["a","those"]},{"Key":"a `\u0026\u0026`","Fragments":["(This"]},{"Key":"`\u0026\u0026` (This","Fragments":["does"]},{"Key":"(This does","Fragments":["make"]},{"Key":"does make","Fragments":["the","it","sense","`isAnagram`","more"]},{"Key":"few characters","Fragments":["more"]},{"Key":"characters more","Fragments":["verbose,"]},{"Key":"verbose, but","Fragments":["this","definitely"]},{"Key":"way there's","Fragments":["only"]},{"Key":"there's only","Fragments":["one"]},{"Key":"only one","Fragments":["pass","instance.","expression","(I","queen","piece","inside"]},{"Key":"one pass","Fragments":["through","over","by"]},{"Key":"pass through","Fragments":["the","the"]},{"Key":"* On","Fragments":["my"]},{"Key":"On my","Fragments":["team"]},{"Key":"my team","Fragments":["at"]},{"Key":"team at","Fragments":["work"]},{"Key":"at work","Fragments":["we've"]},{"Key":"work we've","Fragments":["adopted"]},{"Key":"we've adopted","Fragments":["the"]},{"Key":"adopted the","Fragments":["convention"]},{"Key":"the convention","Fragments":["in"]},{"Key":"convention in","Fragments":["scala"]},{"Key":"scala of","Fragments":["using"]},{"Key":"using `{}`","Fragments":["rather"]},{"Key":"`{}` rather","Fragments":["than"]},{"Key":"than `()`","Fragments":["when"]},{"Key":"`()` when","Fragments":["passing"]},{"Key":"when passing","Fragments":["function"]},{"Key":"passing function","Fragments":["parameters,","as"]},{"Key":"function parameters,","Fragments":["so,"]},{"Key":"parameters, so,","Fragments":["e.g."]},{"Key":"so, e.g.","Fragments":["`.filter{...}`"]},{"Key":"e.g. `.filter{...}`","Fragments":["That"]},{"Key":"`.filter{...}` That","Fragments":["makes"]},{"Key":"That makes","Fragments":["it"]},{"Key":"see that","Fragments":["what's","they","we"]},{"Key":"that what's","Fragments":["getting"]},{"Key":"what's getting","Fragments":["passed"]},{"Key":"getting passed","Fragments":["as"]},{"Key":"passed as","Fragments":["a"]},{"Key":"a function,","Fragments":["esp.","mutable"]},{"Key":"function, esp.","Fragments":["for"]},{"Key":"esp. for","Fragments":["people"]},{"Key":"for people","Fragments":["coming"]},{"Key":"people coming","Fragments":["from"]},{"Key":" Yep.","Fragments":["looks"]},{"Key":"Yep. looks","Fragments":["great!"]},{"Key":"the nit.","Fragments":["Does"]},{"Key":"nit. Does","Fragments":["iteration"]},{"Key":"Does iteration","Fragments":["2"]},{"Key":"2 look","Fragments":["better"]},{"Key":"look better","Fragments":["to","both"]},{"Key":"Looks good.","Fragments":["Nice","To","You","But,","Though,","One","I","Anyhow:","Being"]},{"Key":"good. Nice","Fragments":["and"]},{"Key":"and concise","Fragments":["-"]},{"Key":"concise -","Fragments":["do"]},{"Key":"- do","Fragments":["you","what","you"]},{"Key":"you even","Fragments":["need"]},{"Key":"even need","Fragments":["to","recursion."]},{"Key":"it over","Fragments":["multiple","generating"]},{"Key":"over multiple","Fragments":["lines?"]},{"Key":"want to,","Fragments":["methods","you"]},{"Key":"to, methods","Fragments":["that"]},{"Key":"that take","Fragments":["a"]},{"Key":"single argument","Fragments":["can"]},{"Key":"argument can","Fragments":["be"]},{"Key":"written without","Fragments":["a"]},{"Key":"without a","Fragments":["dot","nesting","big"]},{"Key":"a dot","Fragments":["or"]},{"Key":"dot or","Fragments":["parentheses"]},{"Key":"or parentheses","Fragments":["like"]},{"Key":"parentheses like","Fragments":["this:"]},{"Key":"this: `strand_1","Fragments":["zip"]},{"Key":"`strand_1 zip","Fragments":["strand_2`."]},{"Key":"zip strand_2`.","Fragments":["And"]},{"Key":"strand_2`. And","Fragments":["the"]},{"Key":"And the","Fragments":["way","true","collection","`foldLeft`"]},{"Key":"way precedence","Fragments":["works"]},{"Key":"precedence works","Fragments":["means"]},{"Key":"works means","Fragments":["you"]},{"Key":"means you","Fragments":["can","don't"]},{"Key":"can usually","Fragments":["chain","use"]},{"Key":"usually chain","Fragments":["multiple"]},{"Key":"chain multiple","Fragments":["method"]},{"Key":"multiple method","Fragments":["calls"]},{"Key":"calls like","Fragments":["this"]},{"Key":"this together","Fragments":["to"]},{"Key":"together to","Fragments":["get"]},{"Key":"how common","Fragments":["it"]},{"Key":"common it","Fragments":["is"]},{"Key":"have names","Fragments":["with"]},{"Key":"names with","Fragments":["underscores"]},{"Key":"with underscores","Fragments":["in"]},{"Key":"Scala (other","Fragments":["than"]},{"Key":"(other than","Fragments":["the"]},{"Key":"the blight","Fragments":["that"]},{"Key":"blight that","Fragments":["is"]},{"Key":"is Tuple","Fragments":["`_1`"]},{"Key":"Tuple `_1`","Fragments":["and"]},{"Key":"`_1` and","Fragments":["`_2`).","`_2`"]},{"Key":"can't see","Fragments":["how"]},{"Key":"you dealt","Fragments":["with"]},{"Key":"dealt with","Fragments":["repeated"]},{"Key":"with repeated","Fragments":["matches,"]},{"Key":"repeated matches,","Fragments":["do"]},{"Key":"matches, do","Fragments":["all"]},{"Key":" message.filter(_.isLetter).length","Fragments":["\u003e"]},{"Key":"message.filter(_.isLetter).length \u003e","Fragments":["0"]},{"Key":"\u003e 0","Fragments":["could",")"]},{"Key":"0 could","Fragments":["be"]},{"Key":" isQuestion","Fragments":["would"]},{"Key":"isQuestion would","Fragments":["fail"]},{"Key":"fail for","Fragments":["\"is","some"]},{"Key":"for \"is","Fragments":["this","question\"","silent\"?","null"]},{"Key":"\"is this","Fragments":["a"]},{"Key":"a question?","Fragments":["\""]},{"Key":" /troll","Fragments":["out"]},{"Key":"like what","Fragments":["you","s1/s2"]},{"Key":"did in","Fragments":["isShout","my","the"]},{"Key":"in isShout","Fragments":["method,"]},{"Key":"isShout method,","Fragments":["I"]},{"Key":"method, I","Fragments":["had"]},{"Key":"had problem","Fragments":["with"]},{"Key":"with developing","Fragments":["solution"]},{"Key":"developing solution","Fragments":["and"]},{"Key":"it clean","Fragments":["and"]},{"Key":"clean and","Fragments":["'Scaly'","elegant.","nice.","effective."]},{"Key":"At first","Fragments":["I","I","I"]},{"Key":"first I","Fragments":["had","had","had"]},{"Key":"a really","Fragments":["ugly","good","ugly","nice"]},{"Key":"really ugly","Fragments":["if","if"]},{"Key":"ugly if","Fragments":["..",".."]},{"Key":"if ..","Fragments":["else","else"]},{"Key":".. else","Fragments":["if","if"]},{"Key":"if version,","Fragments":["but","but"]},{"Key":"version, but","Fragments":["then","then"]},{"Key":"saw your","Fragments":["version,","answer,"]},{"Key":"your version,","Fragments":["and"]},{"Key":"version, and","Fragments":["really","really"]},{"Key":"and really","Fragments":["liked","liked"]},{"Key":"liked that.","Fragments":["However,","However,"]},{"Key":"that. However,","Fragments":["I","I"]},{"Key":"However, I","Fragments":["thought","thought","probably","cannot","think"]},{"Key":"thought the","Fragments":["forall","forall"]},{"Key":"the forall","Fragments":["was","was"]},{"Key":"forall was","Fragments":["a","a"]},{"Key":"bit much.","Fragments":["Also,","Also,"]},{"Key":"much. Also,","Fragments":["I","I"]},{"Key":"kept the","Fragments":["!isShouting","!isShouting"]},{"Key":"the !isShouting","Fragments":["reference","reference"]},{"Key":"!isShouting reference","Fragments":["in","in"]},{"Key":"reference in","Fragments":["the","the"]},{"Key":"the isQuestion","Fragments":["function,","function,","method."]},{"Key":"isQuestion function,","Fragments":["because","because"]},{"Key":"function, because","Fragments":["that","I","that"]},{"Key":"should work","Fragments":["even","even","without"]},{"Key":"work even","Fragments":["if","if"]},{"Key":"you switch","Fragments":["the","the"]},{"Key":"switch the","Fragments":["order","order"]},{"Key":"if statements","Fragments":["around.","around.","in","at"]},{"Key":" Simple,","Fragments":["readable"]},{"Key":"Simple, readable","Fragments":["solution."]},{"Key":"the `copy`","Fragments":["function"]},{"Key":"`copy` function","Fragments":["of"]},{"Key":"function of","Fragments":["`case","the","its"]},{"Key":"of `case","Fragments":["class`"]},{"Key":"`case class`","Fragments":["to"]},{"Key":"class` to","Fragments":["simplify."]},{"Key":"idea is","Fragments":["to","to","to","to","smart!"]},{"Key":"use `foldLeft`","Fragments":["instead","-"]},{"Key":"`foldLeft` instead","Fragments":["of","of"]},{"Key":"your recursive","Fragments":["function.","function.","function?"]},{"Key":"at StringOps","Fragments":["in","in"]},{"Key":"Scala standard","Fragments":["library."]},{"Key":"library. It","Fragments":["provides"]},{"Key":"It provides","Fragments":["a","a","a"]},{"Key":"provides a","Fragments":["lot","lot","method","very","lot","lot"]},{"Key":"of collection","Fragments":["like"]},{"Key":"collection like","Fragments":["methods"]},{"Key":"like methods","Fragments":["for","that"]},{"Key":"for Strings.","Fragments":["Using"]},{"Key":"Strings. Using","Fragments":["that"]},{"Key":"Using that","Fragments":["this","you"]},{"Key":"exercise becomes","Fragments":["a"]},{"Key":"becomes a","Fragments":["legitimate","little","little"]},{"Key":"a legitimate","Fragments":["one-liner."]},{"Key":"is ok,","Fragments":["the","but"]},{"Key":"ok, the","Fragments":["good"]},{"Key":"good part","Fragments":["is"]},{"Key":"part is","Fragments":["that"]},{"Key":"only iterates","Fragments":["once"]},{"Key":"iterates once","Fragments":["to"]},{"Key":"the conditions.","Fragments":["If"]},{"Key":"conditions. If","Fragments":["you"]},{"Key":"to stick","Fragments":["with"]},{"Key":"stick with","Fragments":["it"]},{"Key":"it I'd","Fragments":["recommend"]},{"Key":"recommend the","Fragments":["```foreach```"]},{"Key":"the ```foreach```","Fragments":["method"]},{"Key":"```foreach``` method","Fragments":["in"]},{"Key":"method in","Fragments":["```String```","the","the"]},{"Key":"in ```String```","Fragments":["which"]},{"Key":"```String``` which","Fragments":["executes"]},{"Key":"which executes","Fragments":["a"]},{"Key":"executes a","Fragments":["code"]},{"Key":"code block","Fragments":["for","for","is"]},{"Key":"block for","Fragments":["every","your"]},{"Key":"every char,","Fragments":["just"]},{"Key":"char, just","Fragments":["as"]},{"Key":"just as","Fragments":["your","well"]},{"Key":"But, since","Fragments":["you"]},{"Key":"using Scala,","Fragments":["a"]},{"Key":"Scala, a","Fragments":["**Functional"]},{"Key":"a **Functional","Fragments":["Programing**"]},{"Key":"**Functional Programing**","Fragments":["language,"]},{"Key":"Programing** language,","Fragments":["you"]},{"Key":"language, you","Fragments":["should"]},{"Key":"should really","Fragments":["forget"]},{"Key":"really forget","Fragments":["about"]},{"Key":"forget about","Fragments":["mutating","```zip```","this"]},{"Key":"about mutating","Fragments":["vars,"]},{"Key":"mutating vars,","Fragments":["you"]},{"Key":"vars, you","Fragments":["should"]},{"Key":"should forget","Fragments":["totally"]},{"Key":"forget totally","Fragments":["about"]},{"Key":"totally about","Fragments":["vars."]},{"Key":"about vars.","Fragments":["Instead,"]},{"Key":"vars. Instead,","Fragments":["you"]},{"Key":"Instead, you","Fragments":["can"]},{"Key":"the **if/else","Fragments":["if**"]},{"Key":"**if/else if**","Fragments":["expression,"]},{"Key":"if** expression,","Fragments":["but"]},{"Key":"expression, but","Fragments":["as"]},{"Key":"but as","Fragments":["conditions","you","you","stated","a"]},{"Key":"as conditions","Fragments":["you"]},{"Key":"conditions you","Fragments":["could"]},{"Key":"have separate","Fragments":["methods","lines"]},{"Key":"separate methods","Fragments":["```String","to"]},{"Key":"methods ```String","Fragments":["=\u003e"]},{"Key":"```String =\u003e","Fragments":["Boolean```"]},{"Key":"=\u003e Boolean```","Fragments":["to"]},{"Key":"Boolean``` to","Fragments":["check"]},{"Key":"check every","Fragments":["condition"]},{"Key":"every condition","Fragments":["independently."]},{"Key":"These methods","Fragments":["should"]},{"Key":"methods should","Fragments":["not"]},{"Key":"not mutate","Fragments":["any"]},{"Key":"mutate any","Fragments":["var,"]},{"Key":"any var,","Fragments":["they"]},{"Key":"var, they","Fragments":["should"]},{"Key":"they should","Fragments":["traverse","be","at","be"]},{"Key":"should traverse","Fragments":["the"]},{"Key":"the ```Strings```","Fragments":["as"]},{"Key":"```Strings``` as","Fragments":["```Seq[Char]```"]},{"Key":"as ```Seq[Char]```","Fragments":["to"]},{"Key":"```Seq[Char]``` to","Fragments":["evaluate"]},{"Key":"to evaluate","Fragments":["each"]},{"Key":"evaluate each","Fragments":["char."]},{"Key":"each char.","Fragments":["Take"]},{"Key":"char. Take","Fragments":["a"]},{"Key":"at ```isEmpty```,","Fragments":["```filter```,"]},{"Key":"```isEmpty```, ```filter```,","Fragments":["```forall```,"]},{"Key":"```filter```, ```forall```,","Fragments":["etc.","```exists```"]},{"Key":"```forall```, etc.","Fragments":["in"]},{"Key":"etc. in","Fragments":["```StringOps```","```RichChar```.","functional"]},{"Key":"in ```StringOps```","Fragments":["and"]},{"Key":"```StringOps``` and","Fragments":["```isLetter```,"]},{"Key":"and ```isLetter```,","Fragments":["```isUpper```,"]},{"Key":"```isLetter```, ```isUpper```,","Fragments":["etc."]},{"Key":"```isUpper```, etc.","Fragments":["in"]},{"Key":"first submit.","Fragments":["I","I"]},{"Key":"submit. I","Fragments":["think","think"]},{"Key":"my code","Fragments":["works","to","works","can","I"]},{"Key":"code works","Fragments":["properly","but","properly"]},{"Key":"works properly","Fragments":["with","with"]},{"Key":"properly with","Fragments":["any","any"]},{"Key":"with any","Fragments":["input","additional","input","input"]},{"Key":"any input","Fragments":["but","that","but"]},{"Key":"input but","Fragments":["I","I"]},{"Key":"be improved.","Fragments":["I","``exixts``","I"]},{"Key":"improved. I","Fragments":["don't","don't"]},{"Key":"don't really","Fragments":["like","need","care","like","have","like"]},{"Key":"an upperCont","Fragments":["for","for"]},{"Key":"upperCont for","Fragments":["the","the"]},{"Key":"the upper","Fragments":["cases","cases"]},{"Key":"upper cases","Fragments":["but","but"]},{"Key":"cases but","Fragments":["it's","it's"]},{"Key":"it's needed","Fragments":["in","in"]},{"Key":"needed in","Fragments":["order","this","order","scala."]},{"Key":"the \"only","Fragments":["numbers\"","numbers\""]},{"Key":"\"only numbers\"","Fragments":["test.","test."]},{"Key":"I've forget","Fragments":["to","to"]},{"Key":"forget to","Fragments":["remove","remove","make"]},{"Key":"the println().","Fragments":["I'm","I'm"]},{"Key":"println(). I'm","Fragments":["removing","removing"]},{"Key":"I'm removing","Fragments":["them","them"]},{"Key":"removing them","Fragments":["for","for"]},{"Key":"them for","Fragments":["the","readability),","readability.","the"]},{"Key":"more intuitive","Fragments":["syntax","algorithm."]},{"Key":"intuitive syntax","Fragments":["for"]},{"Key":"for Ranges:","Fragments":["```1"]},{"Key":"Ranges: ```1","Fragments":["to"]},{"Key":"```1 to","Fragments":["limit```."]},{"Key":"And perhaps","Fragments":["better","you"]},{"Key":"perhaps better","Fragments":["use","use"]},{"Key":"use also","Fragments":["such"]},{"Key":"also such","Fragments":["a"]},{"Key":"Range for","Fragments":["```squareOfSums```","the"]},{"Key":"for ```squareOfSums```","Fragments":["(or"]},{"Key":"```squareOfSums``` (or","Fragments":["at"]},{"Key":"(or at","Fragments":["least","least"]},{"Key":"least store","Fragments":["the"]},{"Key":"store the","Fragments":["sums"]},{"Key":"the sums","Fragments":["in"]},{"Key":"sums in","Fragments":["a"]},{"Key":"val first)","Fragments":["-"]},{"Key":"first) -","Fragments":["readability"]},{"Key":"- readability","Fragments":["over"]},{"Key":"readability over","Fragments":["smartness!","optimized"]},{"Key":"over smartness!","Fragments":[":-)"]},{"Key":" Compared","Fragments":["to","to"]},{"Key":"Compared to","Fragments":["the","previous"]},{"Key":"the constant","Fragments":["to"]},{"Key":"constant to","Fragments":["a","improve"]},{"Key":"object. Not","Fragments":["sure"]},{"Key":"readability but","Fragments":["chose","still"]},{"Key":"but chose","Fragments":["to"]},{"Key":"because we","Fragments":["can","want"]},{"Key":"What I","Fragments":["like","don't","did","mean","like"]},{"Key":"like is","Fragments":["the","that"]},{"Key":"the reuse","Fragments":["of"]},{"Key":"reuse of","Fragments":["the"]},{"Key":"the `validate`","Fragments":["function"]},{"Key":"`validate` function","Fragments":["and"]},{"Key":"`count` function","Fragments":["in","in","takes"]},{"Key":"in `nucleotideCounts`.","Fragments":["Looks","The"]},{"Key":"`nucleotideCounts`. Looks","Fragments":["all"]},{"Key":"Looks all","Fragments":["pretty"]},{"Key":"all pretty","Fragments":["concise."]},{"Key":"Included @evelyn's","Fragments":["suggestion"]},{"Key":"@evelyn's suggestion","Fragments":["to"]},{"Key":"the whitespace","Fragments":["better."]},{"Key":"check it.","Fragments":["It"]},{"Key":"it. It","Fragments":["hasn't","just","doesn't"]},{"Key":"It hasn't","Fragments":["even"]},{"Key":"hasn't even","Fragments":["passed"]},{"Key":"even passed","Fragments":["all"]},{"Key":"passed all","Fragments":["tests."]},{"Key":"all tests.","Fragments":["Just","`message"]},{"Key":"tests. Just","Fragments":["checking"]},{"Key":"Just checking","Fragments":["exercism"]},{"Key":"checking exercism","Fragments":["system."]},{"Key":"First working","Fragments":["version."]},{"Key":"working version.","Fragments":["I'm"]},{"Key":"version. I'm","Fragments":["new"]},{"Key":"so i","Fragments":["would"]},{"Key":"i would","Fragments":["be"]},{"Key":"get tips","Fragments":["how"]},{"Key":"tips how","Fragments":["to"]},{"Key":" @jayda","Fragments":["You're"]},{"Key":"@jayda You're","Fragments":["absolutely"]},{"Key":"You're absolutely","Fragments":["right!"]},{"Key":"absolutely right!","Fragments":["I"]},{"Key":"right! I","Fragments":["thought","forgot"]},{"Key":"that yielded","Fragments":["\"tuple\","]},{"Key":"yielded \"tuple\",","Fragments":["but"]},{"Key":"\"tuple\", but","Fragments":["it"]},{"Key":"implicit conversion","Fragments":["to","in","in","of","is","from","to","of","on","of","from","from","magic."]},{"Key":"conversion to","Fragments":["map","SeqLike","String","immutable"]},{"Key":"to map","Fragments":["instead.","my","unique"]},{"Key":"why this","Fragments":["```Map()"]},{"Key":"this ```Map()","Fragments":["++"]},{"Key":"```Map() ++","Fragments":["```?"]},{"Key":"like that","Fragments":["mixture","I","this","you","```.filterNot(_.isEmpty)```.",":","the","initially","is","(regarding"]},{"Key":"that mixture","Fragments":["of"]},{"Key":"mixture of","Fragments":["flatMap"]},{"Key":"of flatMap","Fragments":["+"]},{"Key":"flatMap +","Fragments":["for-comprehension:"]},{"Key":"+ for-comprehension:","Fragments":["Either"]},{"Key":"for-comprehension: Either","Fragments":["have"]},{"Key":"Either have","Fragments":["it","it"]},{"Key":"as flatMap/map","Fragments":["or"]},{"Key":"flatMap/map or","Fragments":["a"]},{"Key":"for-comprehension for","Fragments":["the","the"]},{"Key":"of zipping","Fragments":["the"]},{"Key":"zipping the","Fragments":["Lists!","strings","two","two"]},{"Key":"the Lists!","Fragments":[":-)"]},{"Key":"Slightly neater","Fragments":["implementation"]},{"Key":"neater implementation","Fragments":["of"]},{"Key":"of penultimate","Fragments":["step."]},{"Key":" @milan","Fragments":["Thanks!"]},{"Key":"@milan Thanks!","Fragments":["I"]},{"Key":"good. To","Fragments":["make"]},{"Key":"it even","Fragments":["more","shorter","more"]},{"Key":"even more","Fragments":["'Scala","by",";-)","readable","concise","elegant"]},{"Key":"more 'Scala","Fragments":["style'"]},{"Key":"'Scala style'","Fragments":["you"]},{"Key":"style' you","Fragments":["can"]},{"Key":"remove all","Fragments":["the","returns","the"]},{"Key":"if/else if/else","Fragments":["blocks."]},{"Key":"if/else blocks.","Fragments":["Each"]},{"Key":"blocks. Each","Fragments":["of"]},{"Key":"Each of","Fragments":["those"]},{"Key":"those is","Fragments":["only"]},{"Key":"one expression","Fragments":["so"]},{"Key":"the braces","Fragments":["aren't","on","and"]},{"Key":"braces aren't","Fragments":["needed."]},{"Key":"aren't needed.","Fragments":["It"]},{"Key":"needed. It","Fragments":["doesn't"]},{"Key":"doesn't change","Fragments":["how","anymore"]},{"Key":"change how","Fragments":["the"]},{"Key":"works but","Fragments":["it","unnecessarly"]},{"Key":"I modify","Fragments":["my"]},{"Key":"modify my","Fragments":["code"]},{"Key":"would argue","Fragments":["that"]},{"Key":"that regexes","Fragments":["are"]},{"Key":"regexes are","Fragments":["a","too","a"]},{"Key":"a barrier","Fragments":["to"]},{"Key":"barrier to","Fragments":["comprehension"]},{"Key":"to comprehension","Fragments":["generally"]},{"Key":"comprehension generally","Fragments":["as"]},{"Key":"generally as","Fragments":["unless"]},{"Key":"as unless","Fragments":["you're"]},{"Key":"unless you're","Fragments":["using"]},{"Key":"using them","Fragments":["every","in"]},{"Key":"them every","Fragments":["day"]},{"Key":"every day","Fragments":["they","I"]},{"Key":"day they","Fragments":["require"]},{"Key":"they require","Fragments":["careful","an"]},{"Key":"require careful","Fragments":["thought"]},{"Key":"careful thought","Fragments":["each"]},{"Key":"thought each","Fragments":["time"]},{"Key":"time re-encountered.","Fragments":["Often"]},{"Key":"re-encountered. Often","Fragments":["unavoidable,"]},{"Key":"Often unavoidable,","Fragments":["here"]},{"Key":"unavoidable, here","Fragments":["they"]},{"Key":"here they","Fragments":["seem"]},{"Key":"they seem","Fragments":["somewhat"]},{"Key":"seem somewhat","Fragments":["more"]},{"Key":"somewhat more","Fragments":["avoidable"]},{"Key":"more avoidable","Fragments":["because"]},{"Key":"avoidable because","Fragments":["of"]},{"Key":"the simplicity","Fragments":["of","in"]},{"Key":"simplicity of","Fragments":["the"]},{"Key":"various conditions.","Fragments":["e.g."]},{"Key":"conditions. e.g.","Fragments":["compare"]},{"Key":"e.g. compare","Fragments":["for"]},{"Key":"compare for","Fragments":["silence"]},{"Key":"for silence","Fragments":["`\"\"\"^\\s*$\"\"\"`"]},{"Key":"silence `\"\"\"^\\s*$\"\"\"`","Fragments":["vs"]},{"Key":"`\"\"\"^\\s*$\"\"\"` vs","Fragments":["`msg.trim.isEmpty`"]},{"Key":" Super","Fragments":["nit","nit"]},{"Key":"Super nit","Fragments":["pick:","pick:"]},{"Key":"nit pick:","Fragments":["the","there's"]},{"Key":"pick: the","Fragments":["open/closed"]},{"Key":"the open/closed","Fragments":["curly"]},{"Key":"open/closed curly","Fragments":["after"]},{"Key":"curly after","Fragments":["`=`"]},{"Key":"after `=`","Fragments":["in"]},{"Key":"`=` in","Fragments":["the"]},{"Key":"method def","Fragments":["of"]},{"Key":"def of","Fragments":["`hey`"]},{"Key":"`hey` are","Fragments":["necessary.","good."]},{"Key":"the generateName","Fragments":["function."]},{"Key":"generateName function.","Fragments":["I"]},{"Key":"function. I","Fragments":["was"]},{"Key":"pretty sure","Fragments":["I"]},{"Key":"sure I","Fragments":["could","totally","did","understand","love","follow","understand","can","must"]},{"Key":"recursive and","Fragments":["just"]},{"Key":"just missed","Fragments":["getting"]},{"Key":"missed getting","Fragments":["something"]},{"Key":"getting something","Fragments":["similar"]},{"Key":"something similar","Fragments":["because"]},{"Key":"similar because","Fragments":["I"]},{"Key":"to one-line","Fragments":["the"]},{"Key":"one-line the","Fragments":["if/else."]},{"Key":"the if/else.","Fragments":["That'll"]},{"Key":"if/else. That'll","Fragments":["teach"]},{"Key":"teach me!","Fragments":["For"]},{"Key":"me! For","Fragments":["reset"]},{"Key":"For reset","Fragments":["though,"]},{"Key":"reset though,","Fragments":["it"]},{"Key":"though, it","Fragments":["doesn't","has"]},{"Key":"be necessary","Fragments":["to"]},{"Key":"a value,","Fragments":["so","but"]},{"Key":"value, so","Fragments":["why","you're"]},{"Key":"the spurious","Fragments":["\"generatedName\""]},{"Key":"spurious \"generatedName\"","Fragments":["at"]},{"Key":"\"generatedName\" at","Fragments":["the"]},{"Key":"the 'a'","Fragments":["to"]},{"Key":"'a' to","Fragments":["'z'","'z'`"]},{"Key":"to 'z'","Fragments":["stuff"]},{"Key":"'z' stuff","Fragments":["for"]},{"Key":"stuff for","Fragments":["sequences."]},{"Key":"for sequences.","Fragments":["I"]},{"Key":"sequences. I","Fragments":["was"]},{"Key":"was unaware","Fragments":["of"]},{"Key":"unaware of","Fragments":["that"]},{"Key":"that functionality.","Fragments":["I"]},{"Key":"functionality. I","Fragments":["typed"]},{"Key":"I typed","Fragments":["the"]},{"Key":"typed the","Fragments":["entire"]},{"Key":"the entire","Fragments":["alphabetic","lines"]},{"Key":"entire alphabetic","Fragments":["and"]},{"Key":"alphabetic and","Fragments":["numerical"]},{"Key":"and numerical","Fragments":["sequences."]},{"Key":"numerical sequences.","Fragments":["\u003e.\u003c"]},{"Key":"Second iteration:","Fragments":["trying"]},{"Key":"iteration: trying","Fragments":["out"]},{"Key":"out an","Fragments":["implicit"]},{"Key":"implicit value","Fragments":["object,"]},{"Key":"value object,","Fragments":["as"]},{"Key":"object, as","Fragments":["suggested"]},{"Key":"as suggested","Fragments":["in","by"]},{"Key":"suggested in","Fragments":["iteration"]},{"Key":"in iteration","Fragments":["1.","2.","2.","3.","3."]},{"Key":"I've also","Fragments":["dropped","decided","added"]},{"Key":"also dropped","Fragments":["the"]},{"Key":"dropped the","Fragments":["parentheses"]},{"Key":"parentheses from","Fragments":["``message.trim()``"]},{"Key":"from ``message.trim()``","Fragments":["because"]},{"Key":"``message.trim()`` because","Fragments":["it"]},{"Key":"doesn't mutate","Fragments":["the"]},{"Key":"considered combining","Fragments":["your"]},{"Key":"combining your","Fragments":["first"]},{"Key":"You really","Fragments":["shouldn't"]},{"Key":"really shouldn't","Fragments":["need"]},{"Key":"to run","Fragments":["3","at"]},{"Key":"run 3","Fragments":["filters"]},{"Key":"3 filters","Fragments":["against"]},{"Key":"filters against","Fragments":["your"]},{"Key":"against your","Fragments":["list."]},{"Key":"your list.","Fragments":["Chaining"]},{"Key":"list. Chaining","Fragments":["filters"]},{"Key":"Chaining filters","Fragments":["is"]},{"Key":"filters is","Fragments":["unnecessary"]},{"Key":"is unnecessary","Fragments":["here."]},{"Key":"unnecessary here.","Fragments":["You"]},{"Key":"here. You","Fragments":["should","can"]},{"Key":"have one","Fragments":["filter","question","validity","algorithm"]},{"Key":"one filter","Fragments":["and"]},{"Key":"filter and","Fragments":["a","then","isEmpty","then","munging"]},{"Key":"single test","Fragments":["that"]},{"Key":"test that","Fragments":["does","necessitates","matches"]},{"Key":"does the","Fragments":["screening.","same","same,",".r","right","trick","count"]},{"Key":"the screening.","Fragments":["I'd"]},{"Key":"screening. I'd","Fragments":["suggest"]},{"Key":"I'd suggest","Fragments":["breaking","considering","breaking","just"]},{"Key":"suggest breaking","Fragments":["that","out"]},{"Key":"breaking that","Fragments":["out"]},{"Key":"a nicely","Fragments":["named","named","named","named","named"]},{"Key":"nicely named","Fragments":["function","function.","function","function","function"]},{"Key":"named function","Fragments":["call.","(i.e.","for","and","for"]},{"Key":" dm;tp","Fragments":["/s"]},{"Key":"You seem","Fragments":["to"]},{"Key":"be on","Fragments":["a","the"]},{"Key":"good way.","Fragments":["But"]},{"Key":"way. But","Fragments":["you"]},{"Key":"haven't finished,","Fragments":["right?"]},{"Key":"finished, right?","Fragments":["(the"]},{"Key":"right? (the","Fragments":["`toString`"]},{"Key":"(the `toString`","Fragments":["seems..."]},{"Key":"`toString` seems...","Fragments":["like"]},{"Key":"seems... like","Fragments":["a"]},{"Key":"a draft","Fragments":[";)"]},{"Key":"draft ;)","Fragments":[")."]},{"Key":" Only","Fragments":["minor","thing","thing"]},{"Key":"Only minor","Fragments":["suggestion,"]},{"Key":"minor suggestion,","Fragments":["again"]},{"Key":"suggestion, again","Fragments":["this"]},{"Key":"again this","Fragments":["is"]},{"Key":"style, but","Fragments":["as"]},{"Key":"you now","Fragments":["have"]},{"Key":"now have","Fragments":["only","made"]},{"Key":"have only","Fragments":["a"]},{"Key":"only a","Fragments":["single","Scala","control","single"]},{"Key":"your `compute`","Fragments":["method"]},{"Key":"`compute` method","Fragments":["you"]},{"Key":"method you","Fragments":["can","can"]},{"Key":"braces if","Fragments":["you"]},{"Key":"Really nice","Fragments":["and","solution!","and"]},{"Key":"tweaks for","Fragments":["improvement:"]},{"Key":"your tests","Fragments":["(e.g.","can","are"]},{"Key":"tests (e.g.","Fragments":["`s.trim.isEmpty`)"]},{"Key":"(e.g. `s.trim.isEmpty`)","Fragments":["were"]},{"Key":"`s.trim.isEmpty`) were","Fragments":["separately"]},{"Key":"were separately","Fragments":["named"]},{"Key":"separately named","Fragments":["methods"]},{"Key":"* Even","Fragments":["more"]},{"Key":"Even more","Fragments":["scala-idiomatic","scala-esque?!"]},{"Key":"more scala-idiomatic","Fragments":["would"]},{"Key":"scala-idiomatic would","Fragments":["be"]},{"Key":"create objects","Fragments":["with"]},{"Key":"objects with","Fragments":["`unapply`","their"]},{"Key":"with `unapply`","Fragments":["to"]},{"Key":"`unapply` to","Fragments":["describe"]},{"Key":"to describe","Fragments":["patterns.","the","the"]},{"Key":"describe patterns.","Fragments":["Personally"]},{"Key":"patterns. Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["don't","would","find","prefer"]},{"Key":"actually helpful","Fragments":["in"]},{"Key":"helpful in","Fragments":["terms"]},{"Key":"readability, but","Fragments":["it's","might","it's","since"]},{"Key":"it's interesting","Fragments":["to"]},{"Key":"learn about","Fragments":["--","streams"]},{"Key":"about --","Fragments":["see"]},{"Key":"see [1]","Fragments":["for"]},{"Key":"[1] for","Fragments":["more:"]},{"Key":"looks great!","Fragments":["A"]},{"Key":"couple minor","Fragments":["nitpicks:","nitpicks:"]},{"Key":"of `0-9a-z`","Fragments":["you"]},{"Key":"`0-9a-z` you","Fragments":["can"]},{"Key":"use `\\\\w`.","Fragments":["Instead"]},{"Key":"`\\\\w`. Instead","Fragments":["of"]},{"Key":"of `w","Fragments":["=\u003e"]},{"Key":"`w =\u003e","Fragments":["w`"]},{"Key":"=\u003e w`","Fragments":["you"]},{"Key":"w` you","Fragments":["can"]},{"Key":"use `identity`","Fragments":["which"]},{"Key":"`identity` which","Fragments":["is","would"]},{"Key":" Thx","Fragments":["for"]},{"Key":"Thx for","Fragments":["your"]},{"Key":"your feedback","Fragments":["@norbert","@abe"]},{"Key":"feedback @norbert","Fragments":["."]},{"Key":"@norbert .","Fragments":["Gave"]},{"Key":". Gave","Fragments":["it"]},{"Key":"Gave it","Fragments":["another"]},{"Key":"it another","Fragments":["try","try.","round"]},{"Key":"another try","Fragments":["with"]},{"Key":"try with","Fragments":["a","@jett.annotation.tailrec"]},{"Key":"words instead","Fragments":["of"]},{"Key":"splitting by","Fragments":["special","white"]},{"Key":"by special","Fragments":["characters."]},{"Key":" Rather","Fragments":["than","than","than","then","than","than","than"]},{"Key":"than splitting","Fragments":["on"]},{"Key":"splitting on","Fragments":["space,","sentence"]},{"Key":"on space,","Fragments":["think"]},{"Key":"space, think","Fragments":["of"]},{"Key":"expression to","Fragments":["find"]},{"Key":"the things","Fragments":["you"]},{"Key":"things you","Fragments":["want"]},{"Key":"count (i.e.","Fragments":["the"]},{"Key":"(i.e. the","Fragments":["words)."]},{"Key":"Yes. it's","Fragments":["a"]},{"Key":"a form","Fragments":["of"]},{"Key":"form of","Fragments":["quoting","anagrams)"]},{"Key":"of quoting","Fragments":["which"]},{"Key":"quoting which","Fragments":["does"]},{"Key":"which does","Fragments":["not","nothing","precisely"]},{"Key":"not require","Fragments":["escaping"]},{"Key":"require escaping","Fragments":["some"]},{"Key":"escaping some","Fragments":["specials"]},{"Key":"some specials","Fragments":["chars"]},{"Key":"a reason","Fragments":["you","why","you","to","to"]},{"Key":"reason you","Fragments":["use","probably"]},{"Key":"use trippe","Fragments":["quotes"]},{"Key":"trippe quotes","Fragments":["in"]},{"Key":"quotes in","Fragments":["the"]},{"Key":" Interesting!","Fragments":["You're"]},{"Key":"Interesting! You're","Fragments":["suggesting"]},{"Key":"You're suggesting","Fragments":["a"]},{"Key":"suggesting a","Fragments":["[value"]},{"Key":"a [value","Fragments":["class](http://docs.scala-lang.org/overviews/core/value-classes.html),"]},{"Key":"[value class](http://docs.scala-lang.org/overviews/core/value-classes.html),","Fragments":["right?"]},{"Key":"class](http://docs.scala-lang.org/overviews/core/value-classes.html), right?","Fragments":["I"]},{"Key":"had encountered","Fragments":["implicit"]},{"Key":"encountered implicit","Fragments":["conversion"]},{"Key":"conversion in","Fragments":["Scala","Predef."]},{"Key":"Scala before,","Fragments":["but"]},{"Key":"not value","Fragments":["classes."]},{"Key":"I've tried","Fragments":["it"]},{"Key":"tried it","Fragments":["out"]},{"Key":"out in","Fragments":["iteration"]},{"Key":"iteration 2.","Fragments":["I"]},{"Key":"how it","Fragments":["cleans","turned","goes."]},{"Key":"it cleans","Fragments":["up"]},{"Key":"cleans up","Fragments":["the","the"]},{"Key":"the ``hey``","Fragments":["method,"]},{"Key":"``hey`` method,","Fragments":["though"]},{"Key":"method, though","Fragments":["I'm"]},{"Key":"though I'm","Fragments":["still"]},{"Key":"I'm still","Fragments":["a","pretty","thinking","very","exposing","using","trying"]},{"Key":"still a","Fragments":["bit","bit","bit"]},{"Key":"bit wary","Fragments":["of"]},{"Key":"wary of","Fragments":["implicits"]},{"Key":"of implicits","Fragments":["in","here?","all"]},{"Key":"in general.","Fragments":["(Spot","Also"]},{"Key":"general. (Spot","Fragments":["the"]},{"Key":"(Spot the","Fragments":["recovering"]},{"Key":"the recovering","Fragments":["Java"]},{"Key":"recovering Java","Fragments":["programmer.)"]},{"Key":"consider converting","Fragments":["Message"]},{"Key":"converting Message","Fragments":["into"]},{"Key":"Message into","Fragments":["an"]},{"Key":"an extension","Fragments":["methods"]},{"Key":"extension methods","Fragments":["class"]},{"Key":"methods class","Fragments":["for"]},{"Key":"for isSilence/isShouting/isQuestion","Fragments":["e.g."]},{"Key":" ```object","Fragments":["Bob"]},{"Key":"```object Bob","Fragments":["{"]},{"Key":"implicit class","Fragments":["Message(val","trick","stuff","to"]},{"Key":"class Message(val","Fragments":["message:"]},{"Key":"Message(val message:","Fragments":["String)"]},{"Key":"message: String)","Fragments":["extends"]},{"Key":"String) extends","Fragments":["AnyVal"]},{"Key":"extends AnyVal","Fragments":["{"]},{"Key":"AnyVal {","Fragments":["..."]},{"Key":"That way","Fragments":["you","I","no"]},{"Key":"the `new","Fragments":["Message(message)`"]},{"Key":"`new Message(message)`","Fragments":["and"]},{"Key":"Message(message)` and","Fragments":["you"]},{"Key":"won't even","Fragments":["be"]},{"Key":"even be","Fragments":["creating"]},{"Key":"be creating","Fragments":["a"]},{"Key":"new object","Fragments":["(it","instead"]},{"Key":"object (it","Fragments":["will"]},{"Key":"(it will","Fragments":["be"]},{"Key":"be compiled","Fragments":["away)."]},{"Key":"use SortedMap","Fragments":["instead","instead),"]},{"Key":"SortedMap instead","Fragments":["of"]},{"Key":" ```strand","Fragments":["map"]},{"Key":"```strand map","Fragments":["complementNucleotides```"]},{"Key":" ```squared```","Fragments":["is"]},{"Key":"```squared``` is","Fragments":["never"]},{"Key":"is never","Fragments":["used?","used","used","used","an"]},{"Key":"never used?","Fragments":["if"]},{"Key":"used? if","Fragments":["so"]},{"Key":"if so","Fragments":["remove"]},{"Key":"so remove","Fragments":["```IntOps```?"]},{"Key":"this implicit","Fragments":["```sortedList```","class"]},{"Key":"implicit ```sortedList```","Fragments":["complicates"]},{"Key":"```sortedList``` complicates","Fragments":["matters"]},{"Key":"matters (although","Fragments":["I"]},{"Key":"(although I","Fragments":["think"]},{"Key":"idea why","Fragments":["you"]},{"Key":"need it).","Fragments":["Alternatively"]},{"Key":"it). Alternatively","Fragments":["you"]},{"Key":"Alternatively you","Fragments":["could","could","can"]},{"Key":"could assign","Fragments":["three"]},{"Key":"assign three","Fragments":["```val```s"]},{"Key":"three ```val```s","Fragments":["for"]},{"Key":"```val```s for","Fragments":["hypotenuse,"]},{"Key":"for hypotenuse,","Fragments":["adjacent"]},{"Key":"hypotenuse, adjacent","Fragments":["and"]},{"Key":"adjacent and","Fragments":["opposite"]},{"Key":"and opposite","Fragments":["side"]},{"Key":"opposite side","Fragments":["and"]},{"Key":"side and","Fragments":["use"]},{"Key":"them instead.","Fragments":["Adds"]},{"Key":"instead. Adds","Fragments":["to"]},{"Key":"Adds to","Fragments":["readability,"]},{"Key":"to readability,","Fragments":["too.","even"]},{"Key":"* Give","Fragments":["sensible"]},{"Key":"Give sensible","Fragments":["names"]},{"Key":"sensible names","Fragments":["to"]},{"Key":"to variables","Fragments":["wherever"]},{"Key":"variables wherever","Fragments":["possible"]},{"Key":"* `map1`","Fragments":["and"]},{"Key":"`map1` and","Fragments":["`map2`"]},{"Key":"and `map2`","Fragments":["can"]},{"Key":"`map2` can","Fragments":["easily"]},{"Key":"can easily","Fragments":["be","get","update"]},{"Key":"easily be","Fragments":["made","one-liners."]},{"Key":"* Line","Fragments":["#8"]},{"Key":"Line #8","Fragments":["is"]},{"Key":"#8 is","Fragments":["too"]},{"Key":"too long.","Fragments":["Please"]},{"Key":"long. Please","Fragments":["break"]},{"Key":"Please break","Fragments":["it"]},{"Key":"break it","Fragments":["out","up"]},{"Key":"into smaller","Fragments":["lines"]},{"Key":" Remove","Fragments":["comments","comments","'dna'"]},{"Key":"Remove comments","Fragments":["line","line"]},{"Key":"comments line","Fragments":["3","1"]},{"Key":"3 -","Fragments":["5."]},{"Key":"Method `isShout`","Fragments":["is"]},{"Key":"`isShout` is","Fragments":["somewhat"]},{"Key":"is somewhat","Fragments":["laboured.","considered","flawed.","tricky."]},{"Key":"somewhat laboured.","Fragments":["How"]},{"Key":"laboured. How","Fragments":["about"]},{"Key":"How about","Fragments":["`s.exists(_.isLetter)","extracting","drawing"]},{"Key":"about `s.exists(_.isLetter)","Fragments":["\u0026\u0026"]},{"Key":"`s.exists(_.isLetter) \u0026\u0026","Fragments":["s.forall(_.isUpper)`."]},{"Key":" Lines","Fragments":["11"]},{"Key":"Lines 11","Fragments":["onward."]},{"Key":"11 onward.","Fragments":["Try"]},{"Key":"onward. Try","Fragments":["to"]},{"Key":"avoid `else","Fragments":["if`","if`"]},{"Key":"`else if`","Fragments":["idiom","idiom,"]},{"Key":"if` idiom","Fragments":["in"]},{"Key":"scala, lookup","Fragments":["pattern"]},{"Key":"lookup pattern","Fragments":["matching.","matching."]},{"Key":"Line 19,","Fragments":["two"]},{"Key":"19, two","Fragments":["closing"]},{"Key":"two closing","Fragments":["braces"]},{"Key":"closing braces","Fragments":["on"]},{"Key":"braces on","Fragments":["one","one-line"]},{"Key":" simplified","Fragments":["and","solution","`addends`","`findNext`.","algorithm."]},{"Key":"simplified and","Fragments":["more"]},{"Key":"readable (I","Fragments":["hope)"]},{"Key":"(I hope)","Fragments":["version."]},{"Key":"For your","Fragments":["containsLetters"]},{"Key":"your containsLetters","Fragments":["why"]},{"Key":"containsLetters why","Fragments":["not"]},{"Key":"call .isLetter","Fragments":["on"]},{"Key":".isLetter on","Fragments":["each"]},{"Key":"each character","Fragments":["in"]},{"Key":"character in","Fragments":["the"]},{"Key":"def containsLetters(sentence:","Fragments":["String)"]},{"Key":"containsLetters(sentence: String)","Fragments":["="]},{"Key":"= sentence.exists(c","Fragments":["=\u003e"]},{"Key":"sentence.exists(c =\u003e","Fragments":["c.isLetter)"]},{"Key":"there some","Fragments":["reason","better"]},{"Key":"some reason","Fragments":["c.isLetter","the","instead","is"]},{"Key":"reason c.isLetter","Fragments":["wouldn't"]},{"Key":"c.isLetter wouldn't","Fragments":["suffice?"]},{"Key":" isEmpty","Fragments":["could"]},{"Key":"isEmpty could","Fragments":["be","be"]},{"Key":"be changed","Fragments":["to","from"]},{"Key":"bit better.","Fragments":["But,"]},{"Key":"better. But,","Fragments":["maybe"]},{"Key":"But, maybe","Fragments":["not"]},{"Key":"maybe not","Fragments":["a","to"]},{"Key":"a huge","Fragments":["improvement.","deal","overkill","robot"]},{"Key":"huge improvement.","Fragments":["I"]},{"Key":"improvement. I","Fragments":["like"]},{"Key":"your match","Fragments":["statement.","statement"]},{"Key":"match statement.","Fragments":["My"]},{"Key":"statement. My","Fragments":["first"]},{"Key":"attempt is","Fragments":["just"]},{"Key":"just using","Fragments":["a","iterator","it","```count```."]},{"Key":"a big","Fragments":["if,","fan","risk","difference","deal","map..."]},{"Key":"big if,","Fragments":["else"]},{"Key":"if, else","Fragments":["if"]},{"Key":" Agreed,","Fragments":["those","then"]},{"Key":"Agreed, those","Fragments":["are"]},{"Key":"are good","Fragments":["changes.","points."]},{"Key":"good changes.","Fragments":["Thanks!"]},{"Key":"returning value","Fragments":["in"]},{"Key":"in if","Fragments":["block"]},{"Key":"block and","Fragments":["doing"]},{"Key":"and doing","Fragments":["nothing"]},{"Key":"doing nothing","Fragments":["more,"]},{"Key":"nothing more,","Fragments":["you"]},{"Key":"more, you","Fragments":["do"]},{"Key":"use extra","Fragments":["```{}```,"]},{"Key":"extra ```{}```,","Fragments":["I"]},{"Key":"```{}```, I","Fragments":["believe"]},{"Key":"makes code","Fragments":["more"]},{"Key":"and definetly","Fragments":["more"]},{"Key":"definetly more","Fragments":["neat."]},{"Key":"if (!isValidTriangle)","Fragments":["TriangleType.Illogical"]},{"Key":"if (a","Fragments":["=="]},{"Key":"(a ==","Fragments":["b"]},{"Key":"== b","Fragments":["\u0026\u0026"]},{"Key":"b \u0026\u0026","Fragments":["a"]},{"Key":"\u0026\u0026 a","Fragments":["=="]},{"Key":"a ==","Fragments":["c)","c"]},{"Key":"== c)","Fragments":["TriangleType.Equilateral"]},{"Key":"of taste,","Fragments":["I","but"]},{"Key":"taste, I","Fragments":["guess."]},{"Key":"am still","Fragments":["not","not"]},{"Key":"still not","Fragments":["convinced","100%"]},{"Key":"not convinced","Fragments":["about"]},{"Key":"convinced about","Fragments":["```UsedNamesMap```."]},{"Key":"about ```UsedNamesMap```.","Fragments":["If"]},{"Key":"```UsedNamesMap```. If","Fragments":["you"]},{"Key":"like ```var```","Fragments":["-"]},{"Key":"```var``` -","Fragments":["how"]},{"Key":"- how","Fragments":["about","might"]},{"Key":"how about","Fragments":["a","using","`str.exists(_.isLetter)"]},{"Key":"mutable Set","Fragments":["then?"]},{"Key":"is \"##\"","Fragments":["for?"]},{"Key":" code","Fragments":["is"]},{"Key":"is looking","Fragments":["really"]},{"Key":"looking really","Fragments":["well."]},{"Key":"really well.","Fragments":["GJ!"]},{"Key":"well. GJ!","Fragments":[":)"]},{"Key":" Accidentally","Fragments":["left","submitted"]},{"Key":"Accidentally left","Fragments":["println"]},{"Key":"left println","Fragments":["for"]},{"Key":"println for","Fragments":["debug."]},{"Key":" additionally","Fragments":["you"]},{"Key":"additionally you","Fragments":["might"]},{"Key":"consider splitting","Fragments":["up","up"]},{"Key":"splitting up","Fragments":["your","the","into"]},{"Key":"up your","Fragments":["one-liner"]},{"Key":"could define","Fragments":["the","a","`listOfAllergies`"]},{"Key":"define the","Fragments":["Map","`val"]},{"Key":"Map `withDefault","Fragments":["identity`"]},{"Key":"`withDefault identity`","Fragments":["plus"]},{"Key":"identity` plus","Fragments":["converting"]},{"Key":"plus converting","Fragments":["the"]},{"Key":"converting the","Fragments":["text","String"]},{"Key":"the text","Fragments":["into"]},{"Key":"text into","Fragments":["lower"]},{"Key":"into lower","Fragments":["case"]},{"Key":"case before","Fragments":["changing"]},{"Key":"before changing","Fragments":["it."]},{"Key":"changing it.","Fragments":["that"]},{"Key":"it. that","Fragments":["way"]},{"Key":"that way","Fragments":["you","you","but","vs.","does"]},{"Key":"then live","Fragments":["w/o"]},{"Key":"live w/o","Fragments":["`replace`."]},{"Key":"a) Why","Fragments":["not"]},{"Key":"make ```val","Fragments":["plaing```"]},{"Key":"```val plaing```","Fragments":["and"]},{"Key":"plaing``` and","Fragments":["```val"]},{"Key":"and ```val","Fragments":["at```"]},{"Key":"```val at```","Fragments":["private?"]},{"Key":"b) I","Fragments":["think"]},{"Key":"think ```val","Fragments":["at``"]},{"Key":"```val at``","Fragments":["could"]},{"Key":"at`` could","Fragments":["have"]},{"Key":"more informative","Fragments":["name."]},{"Key":"My really","Fragments":["naive"]},{"Key":"really naive","Fragments":["solution"]},{"Key":"naive solution","Fragments":[":)"]},{"Key":" @alexis","Fragments":["I"]},{"Key":"@alexis I","Fragments":["made"]},{"Key":"made the","Fragments":["same","code","choices","code","same"]},{"Key":"same inline","Fragments":["choice"]},{"Key":"inline choice","Fragments":["as"]},{"Key":"choice as","Fragments":["@alexis"]},{"Key":"as @alexis","Fragments":["but"]},{"Key":"@alexis but","Fragments":["after"]},{"Key":"but after","Fragments":["a","I"]},{"Key":"bit of","Fragments":["reading,","tidying.","research","an","an","an","benchmarking,","an","unnecessary","hardcoded"]},{"Key":"of reading,","Fragments":["the"]},{"Key":"reading, the","Fragments":["Scala"]},{"Key":"indeed to","Fragments":["break"]},{"Key":"up for-comprehensions","Fragments":["as"]},{"Key":"for-comprehensions as","Fragments":["multiple"]},{"Key":"as multiple","Fragments":["lines"]},{"Key":"lines as","Fragments":["you"]},{"Key":"separate lines","Fragments":["instead"]},{"Key":"lines instead","Fragments":["of"]},{"Key":"of semicolon","Fragments":["and"]},{"Key":"semicolon and","Fragments":["also","instead"]},{"Key":"the for","Fragments":["and","comprehension.","loop","comprehensions","comprehension","comprehension,","comprehension","only)."]},{"Key":"for and","Fragments":["yield"]},{"Key":"and yield","Fragments":["in"]},{"Key":"yield in","Fragments":["their"]},{"Key":"in their","Fragments":["own","head.","own","respective"]},{"Key":"own new","Fragments":["line,"]},{"Key":"new line,","Fragments":["but"]},{"Key":"line, but","Fragments":["this"]},{"Key":"perhaps just","Fragments":["personal","use","a","a"]},{"Key":"just personal","Fragments":["taste."]},{"Key":"personal taste.","Fragments":[":-)"]},{"Key":" -use","Fragments":["simply","partial"]},{"Key":"-use simply","Fragments":["Map"]},{"Key":"simply Map","Fragments":["comparison"]},{"Key":"Map comparison","Fragments":["(==)"]},{"Key":"comparison (==)","Fragments":["in"]},{"Key":"(==) in","Fragments":["the"]},{"Key":"use `count`","Fragments":["rather"]},{"Key":"`count` rather","Fragments":["than"]},{"Key":"than `filter`","Fragments":["and"]},{"Key":"and `length`,","Fragments":["which"]},{"Key":"`length`, which","Fragments":["accomplishes"]},{"Key":"which accomplishes","Fragments":["the"]},{"Key":"accomplishes the","Fragments":["same."]},{"Key":"You probably","Fragments":["cannot","meant"]},{"Key":"probably cannot","Fragments":["do"]},{"Key":"cannot do","Fragments":["much"]},{"Key":"do much","Fragments":["shorter"]},{"Key":"much shorter","Fragments":["than","and","solution","in","than"]},{"Key":"shorter than","Fragments":["this.","`msg","what"]},{"Key":"than this.","Fragments":[":-)"]},{"Key":"this old","Fragments":["debate"]},{"Key":"old debate","Fragments":["to"]},{"Key":"debate to","Fragments":["not"]},{"Key":"and private","Fragments":["helper","helper","helper","helper","little"]},{"Key":"functions (also","Fragments":["type"]},{"Key":"(also type","Fragments":["aliases)"]},{"Key":"type aliases)","Fragments":["with"]},{"Key":"aliases) with","Fragments":["good"]},{"Key":"with good","Fragments":["names","names","descriptive","names","names.","telling","names"]},{"Key":"good names","Fragments":["for","for","to","for","for","like","for","for"]},{"Key":"readability. Just","Fragments":["in"]},{"Key":"Just in","Fragments":["case"]},{"Key":"be merciful","Fragments":["with"]},{"Key":"merciful with","Fragments":["your"]},{"Key":"with your","Fragments":["colleagues","\"contains\"","\"\\_.size\""]},{"Key":"your colleagues","Fragments":["who"]},{"Key":"colleagues who","Fragments":["are"]},{"Key":"who are","Fragments":["not","curious,","we"]},{"Key":"not as","Fragments":["proficient","readable","if"]},{"Key":"as proficient","Fragments":["as"]},{"Key":"proficient as","Fragments":["you"]},{"Key":"you in","Fragments":["Scala"]},{"Key":"Scala ...","Fragments":[";-)"]},{"Key":"... ;-)","Fragments":["(I"]},{"Key":";-) (I","Fragments":["have"]},{"Key":"(I have","Fragments":["this"]},{"Key":"have this","Fragments":["debate","function","`value`","problem","default","as","var","as"]},{"Key":"this debate","Fragments":["once"]},{"Key":"debate once","Fragments":["in"]},{"Key":" Both","Fragments":["random","pimped"]},{"Key":"Both random","Fragments":["generators"]},{"Key":"random generators","Fragments":["are"]},{"Key":"generators are","Fragments":["almost"]},{"Key":"are almost","Fragments":["identical."]},{"Key":"almost identical.","Fragments":["I"]},{"Key":"identical. I","Fragments":["spent"]},{"Key":"I spent","Fragments":["a"]},{"Key":"spent a","Fragments":["good"]},{"Key":"good amount","Fragments":["of"]},{"Key":"amount of","Fragments":["time","mental","the","garbage","times"]},{"Key":"of time","Fragments":["trying"]},{"Key":"time trying","Fragments":["to"]},{"Key":"extract them","Fragments":["into","out"]},{"Key":"single one,","Fragments":["passing"]},{"Key":"one, passing","Fragments":["a"]},{"Key":"parameter, but","Fragments":["could"]},{"Key":"but could","Fragments":["not","still"]},{"Key":"could not","Fragments":["make","quite","get","stand"]},{"Key":"it work.","Fragments":["Something"]},{"Key":"work. Something","Fragments":["like:"]},{"Key":"def pickRandomFromRange(picks:","Fragments":["Int,"]},{"Key":"pickRandomFromRange(picks: Int,","Fragments":["range:"]},{"Key":"Int, range:","Fragments":["Range)"]},{"Key":"range: Range)","Fragments":["="]},{"Key":"Range) =","Fragments":["???"]},{"Key":"have forced","Fragments":["a"]},{"Key":"forced a","Fragments":["little"]},{"Key":"little the","Fragments":["usage"]},{"Key":"of Option","Fragments":["here,","by","(="]},{"Key":"Option here,","Fragments":["but"]},{"Key":"that was","Fragments":["something","a","just","well","my","actually","necessary"]},{"Key":"something I","Fragments":["wanted","could","have"]},{"Key":"use to","Fragments":["solve","not"]},{"Key":" still","Fragments":["a"]},{"Key":"too dense","Fragments":["for","(split"]},{"Key":"dense for","Fragments":["me"]},{"Key":"get my","Fragments":["head","feet"]},{"Key":"my head","Fragments":["around","that"]},{"Key":"head around","Fragments":["it","it)."]},{"Key":"around it","Fragments":["easily."]},{"Key":"it easily.","Fragments":[":-)"]},{"Key":" compareTo","Fragments":["=="]},{"Key":"compareTo ==","Fragments":["0"]},{"Key":"== 0","Fragments":["might","\u0026\u0026"]},{"Key":"0 might","Fragments":["be"]},{"Key":"just ==","Fragments":["?"]},{"Key":"doesn't handle","Fragments":["concurrency.","case","the"]},{"Key":"handle concurrency.","Fragments":["Working"]},{"Key":"concurrency. Working","Fragments":["on"]},{"Key":"Working on","Fragments":["a"]},{"Key":"think isUpperOrDigit","Fragments":["is"]},{"Key":"isUpperOrDigit is","Fragments":["not"]},{"Key":"not used,","Fragments":["right?"]},{"Key":"strip the","Fragments":["characters"]},{"Key":"characters that","Fragments":["are","differ."]},{"Key":"not words.","Fragments":["You"]},{"Key":"words. You","Fragments":["can"]},{"Key":"can modify","Fragments":["the","the"]},{"Key":"the split","Fragments":["regexp","regexp","and","I"]},{"Key":"split regexp","Fragments":["by","and"]},{"Key":"regexp by","Fragments":["removing"]},{"Key":"removing all","Fragments":["non"]},{"Key":"all non","Fragments":["words","word"]},{"Key":"non words","Fragments":["that"]},{"Key":"words that","Fragments":["aren't","sounds"]},{"Key":"that aren't","Fragments":["apostrophes"]},{"Key":"at `StringOps`.","Fragments":["It"]},{"Key":"`StringOps`. It","Fragments":["provides"]},{"Key":"for `String`s.","Fragments":["For"]},{"Key":"`String`s. For","Fragments":["example,"]},{"Key":"example, you","Fragments":["can","could"]},{"Key":"can `count`","Fragments":["and"]},{"Key":"and `foldLeft`","Fragments":["directly"]},{"Key":"`foldLeft` directly","Fragments":["on"]},{"Key":"directly on","Fragments":["`String`","the","the","the","`input`."]},{"Key":"on `String`","Fragments":["without","is"]},{"Key":"`String` without","Fragments":["having"]},{"Key":"to explode","Fragments":["them"]},{"Key":"explode them","Fragments":["using"]},{"Key":"them using","Fragments":["`toC`arArray`.","only"]},{"Key":"using `toC`arArray`.","Fragments":["All"]},{"Key":"`toC`arArray`. All","Fragments":["of"]},{"Key":"All of","Fragments":["the"]},{"Key":"the `StringOps`","Fragments":["methods","class."]},{"Key":"`StringOps` methods","Fragments":["are"]},{"Key":"are available","Fragments":["automatically","on"]},{"Key":"available automatically","Fragments":["by"]},{"Key":"automatically by","Fragments":["an"]},{"Key":"by an","Fragments":["implicit","import","implicit"]},{"Key":" `List.contains`","Fragments":["is"]},{"Key":"`List.contains` is","Fragments":["probably"]},{"Key":"validation rather","Fragments":["than"]},{"Key":"than `0","Fragments":["=="]},{"Key":"`0 ==","Fragments":["ValidDNAChars.count`."]},{"Key":"the `String.isEmpty`","Fragments":["test"]},{"Key":"`String.isEmpty` test","Fragments":["in"]},{"Key":"`nucleotideCounts`. The","Fragments":["default"]},{"Key":"The default","Fragments":["map"]},{"Key":"default map","Fragments":["is","with"]},{"Key":"initial value","Fragments":["passed"]},{"Key":"value passed","Fragments":["to"]},{"Key":"the fold","Fragments":["so","operator.","is"]},{"Key":"fold so","Fragments":["if"]},{"Key":"input list","Fragments":["is","twice"]},{"Key":"is empty","Fragments":["that"]},{"Key":"empty that","Fragments":["default"]},{"Key":"that default","Fragments":["will"]},{"Key":"default will","Fragments":["fall"]},{"Key":"will fall","Fragments":["out"]},{"Key":"fall out","Fragments":["naturally."]},{"Key":"out naturally.","Fragments":["As"]},{"Key":"naturally. As","Fragments":["a"]},{"Key":"general rule","Fragments":["avoid","only","I"]},{"Key":"rule avoid","Fragments":["the"]},{"Key":"of `return`","Fragments":["in"]},{"Key":" here's","Fragments":["my"]},{"Key":"my nit","Fragments":["to"]},{"Key":"nit to","Fragments":["pick:"]},{"Key":"You test","Fragments":["all"]},{"Key":"test all","Fragments":["of"]},{"Key":"your predicates,","Fragments":["even"]},{"Key":"predicates, even","Fragments":["if"]},{"Key":"if after","Fragments":["testing"]},{"Key":"after testing","Fragments":["just"]},{"Key":"testing just","Fragments":["one,"]},{"Key":"just one,","Fragments":["you"]},{"Key":"should know","Fragments":["what"]},{"Key":"know what","Fragments":["your","\"identity\"","I","I","Scala","I","you"]},{"Key":"your response","Fragments":["would","to"]},{"Key":"response would","Fragments":["be."]},{"Key":"would be.","Fragments":["can"]},{"Key":"be. can","Fragments":["you"]},{"Key":"your predicates","Fragments":["into"]},{"Key":"into functions","Fragments":["and"]},{"Key":"and only","Fragments":["test","once.","once."]},{"Key":"only test","Fragments":["until","the"]},{"Key":"test until","Fragments":["you"]},{"Key":"until you","Fragments":["find"]},{"Key":"you find","Fragments":["a","this","a","them"]},{"Key":"a matching","Fragments":["predicate?","group"]},{"Key":" you'll","Fragments":["want"]},{"Key":"you'll want","Fragments":["the"]},{"Key":"the .find","Fragments":["method"]},{"Key":".find method","Fragments":["on"]},{"Key":"method on","Fragments":["Seq","strings","`Seq`","List","`Char`,","`Calendar`"]},{"Key":"on Seq","Fragments":["which"]},{"Key":"Seq which","Fragments":["will"]},{"Key":"the short-circuiting","Fragments":["for"]},{"Key":"short-circuiting for","Fragments":["you."]},{"Key":" Good,","Fragments":["just","@kenyon!"]},{"Key":"Good, just","Fragments":["one"]},{"Key":"val endsWithQuestionMark","Fragments":["=","="]},{"Key":"endsWithQuestionMark =","Fragments":["text","text.endsWith(\"?\")"]},{"Key":"= text","Fragments":["!="]},{"Key":"text !=","Fragments":["\"\""]},{"Key":"!= \"\"","Fragments":["\u0026\u0026"]},{"Key":"\"\" \u0026\u0026","Fragments":["text.last"]},{"Key":"\u0026\u0026 text.last","Fragments":["=="]},{"Key":"text.last ==","Fragments":["'?'"]},{"Key":"The boolean","Fragments":["matches"]},{"Key":"boolean matches","Fragments":["are"]},{"Key":"matches are","Fragments":["a"]},{"Key":"bit wordy.","Fragments":["But,"]},{"Key":"wordy. But,","Fragments":["I"]},{"Key":"But, I","Fragments":["really"]},{"Key":"the \"cond\"","Fragments":["function."]},{"Key":"is from","Fragments":["http://exercism.io/lhohan,","http://exercism.io/lhohan,","IntelliJ","internet.","http://exercism.io/lhohan,"]},{"Key":"from http://exercism.io/lhohan,","Fragments":["actually:","actually","an"]},{"Key":"http://exercism.io/lhohan, actually:","Fragments":["http://exercism.io/submissions/325ca2c346414a5b9475613754b9b316."]},{"Key":"submit this","Fragments":["for","for","for"]},{"Key":"this for","Fragments":["communication","the","communication","communication"]},{"Key":"for communication","Fragments":["purpose.","purpose.","purpose."]},{"Key":" Strictly","Fragments":["speaking,"]},{"Key":"Strictly speaking,","Fragments":["Scala"]},{"Key":"speaking, Scala","Fragments":["collections"]},{"Key":"collections don't","Fragments":["have"]},{"Key":"as `some`","Fragments":["in"]},{"Key":"`some` in","Fragments":["Clojure,"]},{"Key":"in Clojure,","Fragments":["because","which"]},{"Key":"Clojure, because","Fragments":["Scala"]},{"Key":"because Scala","Fragments":["doesn't"]},{"Key":"Scala doesn't","Fragments":["allow","permit"]},{"Key":"doesn't allow","Fragments":["any"]},{"Key":"allow any","Fragments":["'truthy'"]},{"Key":"any 'truthy'","Fragments":["value"]},{"Key":"'truthy' value","Fragments":["other"]},{"Key":"value other","Fragments":["than"]},{"Key":"a `Boolean`","Fragments":["in"]},{"Key":"`Boolean` in","Fragments":["`if`"]},{"Key":"in `if`","Fragments":["clause,"]},{"Key":"`if` clause,","Fragments":["so"]},{"Key":"clause, so","Fragments":["that"]},{"Key":"you can't","Fragments":["use","init"]},{"Key":"can't use","Fragments":["`.exists`"]},{"Key":"use `.exists`","Fragments":["as"]},{"Key":"`.exists` as","Fragments":["a"]},{"Key":"a substitution","Fragments":["of"]},{"Key":"substitution of","Fragments":["`(first"]},{"Key":"of `(first","Fragments":["(filter"]},{"Key":"`(first (filter","Fragments":["..)"]},{"Key":"(filter ..)","Fragments":["...)`"]},{"Key":"..) ...)`","Fragments":["in"]},{"Key":"...)` in","Fragments":["Clojure,"]},{"Key":"Clojure, which","Fragments":["is"]},{"Key":"possible with","Fragments":["`some`.","+"]},{"Key":"with `some`.","Fragments":["For"]},{"Key":"`some`. For","Fragments":["this"]},{"Key":"For this","Fragments":["purpose,"]},{"Key":"this purpose,","Fragments":["there"]},{"Key":"purpose, there","Fragments":["is"]},{"Key":"is `.find`","Fragments":["which"]},{"Key":"`.find` which","Fragments":["returns"]},{"Key":"which returns","Fragments":["an","the"]},{"Key":" Underscore","Fragments":["is"]},{"Key":"Underscore is","Fragments":["used"]},{"Key":"is used","Fragments":["in","incombination","where","in"]},{"Key":"in many","Fragments":["different"]},{"Key":"many different","Fragments":["situations"]},{"Key":"different situations","Fragments":["in"]},{"Key":"situations in","Fragments":["Scala,"]},{"Key":"and roughly,","Fragments":["all"]},{"Key":"roughly, all","Fragments":["of"]},{"Key":"them mean","Fragments":["'whatever'."]},{"Key":"mean 'whatever'.","Fragments":["Here's"]},{"Key":"'whatever'. Here's","Fragments":["a"]},{"Key":"a brief","Fragments":["explanation"]},{"Key":"brief explanation","Fragments":["[1]."]},{"Key":"Thanks @theresa,","Fragments":["`string.exists`"]},{"Key":"@theresa, `string.exists`","Fragments":["is"]},{"Key":"`string.exists` is","Fragments":["what"]},{"Key":"was looking","Fragments":["for","for","for","for!","for","up"]},{"Key":"looking for","Fragments":["but","comments,","a","an","the","an"]},{"Key":"for but","Fragments":["failed."]},{"Key":"there must","Fragments":["be","be","be"]},{"Key":"must be","Fragments":["funtion","a","letters","upper-case","upper","uppercase\".","put","all","some","a","randomly","positive."]},{"Key":"be funtion","Fragments":["like"]},{"Key":"funtion like","Fragments":["`some"]},{"Key":"like `some","Fragments":["in"]},{"Key":"`some in","Fragments":["clojure`"]},{"Key":"one question","Fragments":["about"]},{"Key":"question about","Fragments":["your"]},{"Key":"it sounds","Fragments":["like","logical"]},{"Key":"sounds like","Fragments":["that","it"]},{"Key":"could ignore","Fragments":["**parameter"]},{"Key":"ignore **parameter","Fragments":["in"]},{"Key":"**parameter in","Fragments":["lambda"]},{"Key":"in lambda","Fragments":["in","calculus)."]},{"Key":"lambda in","Fragments":["case"]},{"Key":"don't care,","Fragments":["don't"]},{"Key":"care, don't","Fragments":["I?**"]},{"Key":"am wrong,","Fragments":["correct"]},{"Key":"wrong, correct","Fragments":["me"]},{"Key":"correct me","Fragments":["please."]},{"Key":"Looks good!","Fragments":["A","A","You"]},{"Key":"1. `message.forall(c","Fragments":["=\u003e"]},{"Key":"`message.forall(c =\u003e","Fragments":["!c.isLower)`"]},{"Key":"=\u003e !c.isLower)`","Fragments":["can"]},{"Key":"!c.isLower)` can","Fragments":["be"]},{"Key":"be `!","Fragments":["message.exists(_.isLower)`"]},{"Key":"`! message.exists(_.isLower)`","Fragments":["or"]},{"Key":"message.exists(_.isLower)` or","Fragments":["`message.forall("]},{"Key":"or `message.forall(","Fragments":["!"]},{"Key":"`message.forall( !","Fragments":["_.isLower)`.","_.isLower)`,"]},{"Key":"2. `message.count(c","Fragments":["=\u003e"]},{"Key":"`message.count(c =\u003e","Fragments":["c.isUpper)"]},{"Key":"c.isUpper) \u003e","Fragments":["0`"]},{"Key":"3. [The","Fragments":["style"]},{"Key":"[The style","Fragments":["guide](http://docs.scala-lang.org/style/control-structures.html)"]},{"Key":"style guide](http://docs.scala-lang.org/style/control-structures.html)","Fragments":["recommends"]},{"Key":"guide](http://docs.scala-lang.org/style/control-structures.html) recommends","Fragments":["`if"]},{"Key":"recommends `if","Fragments":["(condition)`"]},{"Key":"`if (condition)`","Fragments":["over"]},{"Key":"(condition)` over","Fragments":["`if(condition)`."]},{"Key":"Thanks, I","Fragments":["missed","just"]},{"Key":"missed that","Fragments":["one","though"]},{"Key":"that one","Fragments":["(and","and"]},{"Key":"one (and","Fragments":["also"]},{"Key":"(and also","Fragments":["`startsWith`,","for"]},{"Key":"also `startsWith`,","Fragments":["which"]},{"Key":"`startsWith`, which","Fragments":["would"]},{"Key":"which would","Fragments":["have","make"]},{"Key":"been almost","Fragments":["as"]},{"Key":"almost as","Fragments":["useful)."]},{"Key":" take","Fragments":["a","a"]},{"Key":"at `List::containsSlice`","Fragments":["for"]},{"Key":"`List::containsSlice` for","Fragments":["a"]},{"Key":"probably define","Fragments":["total"]},{"Key":"define total","Fragments":["in"]},{"Key":"total in","Fragments":["terms"]},{"Key":"agree it's","Fragments":["more","perhaps"]},{"Key":"elegant (and","Fragments":["the"]},{"Key":"(and the","Fragments":["requirements","curly"]},{"Key":"the requirements","Fragments":["for","of","change"]},{"Key":"requirements for","Fragments":["this"]},{"Key":"this task","Fragments":["are","than"]},{"Key":"task are","Fragments":["bit"]},{"Key":"are bit","Fragments":["weird)"]},{"Key":"bit weird)","Fragments":["-"]},{"Key":"weird) -","Fragments":["but"]},{"Key":"but the","Fragments":["`filter(_.length","syntax","tests","*meaning*","README","names","names","idea","groupBy","idea"]},{"Key":"the `filter(_.length","Fragments":["=="]},{"Key":"`filter(_.length ==","Fragments":["size)`"]},{"Key":"== size)`","Fragments":["test"]},{"Key":"size)` test","Fragments":["will"]},{"Key":"will test","Fragments":["each"]},{"Key":"each slice,","Fragments":["but"]},{"Key":"slice, but","Fragments":["we"]},{"Key":"but we","Fragments":["can"]},{"Key":"can guarantee","Fragments":["that"]},{"Key":"guarantee that","Fragments":["they","each"]},{"Key":"they will","Fragments":["all"]},{"Key":"will all","Fragments":["pass"]},{"Key":"all pass","Fragments":["or"]},{"Key":"pass or","Fragments":["all"]},{"Key":"or all","Fragments":["fail"]},{"Key":"all fail","Fragments":["-"]},{"Key":"fail -","Fragments":["can"]},{"Key":"you optimise","Fragments":["this"]},{"Key":"optimise this","Fragments":["so"]},{"Key":"this so","Fragments":["you","you"]},{"Key":"test the","Fragments":["condition","first"]},{"Key":"the condition","Fragments":["once?"]},{"Key":"of `pad`","Fragments":["to"]},{"Key":"`pad` to","Fragments":["deal"]},{"Key":"the odd","Fragments":["boundary","sentinel"]},{"Key":"odd boundary","Fragments":["conditions."]},{"Key":"I felt","Fragments":["like","like","it"]},{"Key":"felt like","Fragments":["it","pulling","an"]},{"Key":"like it","Fragments":["was","better","because",":)","because","just",":)","a","would"]},{"Key":"explicit that","Fragments":["I","a"]},{"Key":"a pair","Fragments":["and","as","of","indicates"]},{"Key":"pair and","Fragments":["comparing"]},{"Key":"and comparing","Fragments":["them."]},{"Key":"comparing them.","Fragments":["It's"]},{"Key":"them. It's","Fragments":["definitely"]},{"Key":"It's definitely","Fragments":["debatable"]},{"Key":"definitely debatable","Fragments":["though."]},{"Key":"your previous","Fragments":["submition?"]},{"Key":"previous submition?","Fragments":["Using"]},{"Key":"submition? Using","Fragments":["the"]},{"Key":"matching syntactic","Fragments":["sugar"]},{"Key":"sugar makes","Fragments":["things"]},{"Key":"makes things","Fragments":["more","harder","more"]},{"Key":"things more","Fragments":["readable.","readable."]},{"Key":"Yes, pls","Fragments":["split"]},{"Key":"pls split","Fragments":["it"]},{"Key":"into vals","Fragments":["and"]},{"Key":"and defs","Fragments":["w/","private","if"]},{"Key":"defs w/","Fragments":["good"]},{"Key":"w/ good","Fragments":["names","descriptive","descriptive","names","names).","names","descriptive","names.","names"]},{"Key":"want another","Fragments":["challenge"]},{"Key":"challenge after","Fragments":["that"]},{"Key":"after that","Fragments":["you"]},{"Key":"of flatMap-map.","Fragments":[";-)"]},{"Key":"wanted do","Fragments":["this"]},{"Key":"challange in","Fragments":["one"]},{"Key":"one line.","Fragments":["Next","but","Of"]},{"Key":"line. Next","Fragments":["iteration"]},{"Key":"Next iteration","Fragments":["will","will"]},{"Key":"iteration will","Fragments":["be","be"]},{"Key":"more scala-ish","Fragments":["alternatives"]},{"Key":"scala-ish alternatives","Fragments":["that"]},{"Key":"alternatives that","Fragments":["I"]},{"Key":"I considered","Fragments":["but","was","using"]},{"Key":"considered but","Fragments":["discarded:"]},{"Key":"Using some","Fragments":["sort"]},{"Key":"some sort","Fragments":["of","of","the"]},{"Key":"of class","Fragments":["to"]},{"Key":"to encapsulate","Fragments":["the"]},{"Key":"encapsulate the","Fragments":["notion"]},{"Key":"the notion","Fragments":["that"]},{"Key":"notion that","Fragments":["each"]},{"Key":"that each","Fragments":["prompt","category","response","Response"]},{"Key":"each prompt","Fragments":["type"]},{"Key":"prompt type","Fragments":["has"]},{"Key":"type has","Fragments":["both","a"]},{"Key":"has both","Fragments":["a"]},{"Key":"predicate test","Fragments":["(e.g."]},{"Key":"test (e.g.","Fragments":["`isQuestion`)","`def"]},{"Key":"(e.g. `isQuestion`)","Fragments":["and"]},{"Key":"`isQuestion`) and","Fragments":["a"]},{"Key":"response (e.g.","Fragments":["`\"Sure.\"`)"]},{"Key":"(e.g. `\"Sure.\"`)","Fragments":["If"]},{"Key":"`\"Sure.\"`) If","Fragments":["we"]},{"Key":"we anticipated","Fragments":["lots"]},{"Key":"anticipated lots","Fragments":["and"]},{"Key":"lots and","Fragments":["lots"]},{"Key":"and lots","Fragments":["of"]},{"Key":"lots of","Fragments":["prompt","instances"]},{"Key":"of prompt","Fragments":["types","make"]},{"Key":"prompt types","Fragments":["being","that","--"]},{"Key":"types being","Fragments":["dynamically"]},{"Key":"being dynamically","Fragments":["created,"]},{"Key":"dynamically created,","Fragments":["an"]},{"Key":"created, an","Fragments":["object"]},{"Key":"object class","Fragments":["might"]},{"Key":"class might","Fragments":["be"]},{"Key":"be useful","Fragments":["here.","in","for"]},{"Key":"useful here.","Fragments":["But"]},{"Key":"here. But","Fragments":["with"]},{"Key":"But with","Fragments":["only","`genome.matches(\"[GCTA]*\")`"]},{"Key":"only four","Fragments":["prompt"]},{"Key":"four prompt","Fragments":["types"]},{"Key":"types that","Fragments":["seemed"]},{"Key":"that seemed","Fragments":["a"]},{"Key":"seemed a","Fragments":["bit"]},{"Key":"Using an","Fragments":["enumerable","implicit."]},{"Key":"an enumerable","Fragments":["to"]},{"Key":"enumerable to","Fragments":["describe"]},{"Key":"describe the","Fragments":["prompt","conditions"]},{"Key":"the prompt","Fragments":["types"]},{"Key":"types --","Fragments":["again,"]},{"Key":"-- again,","Fragments":["seemed"]},{"Key":"again, seemed","Fragments":["like"]},{"Key":"seemed like","Fragments":["unnecessary"]},{"Key":"like unnecessary","Fragments":["abstraction"]},{"Key":"unnecessary abstraction","Fragments":["given"]},{"Key":"abstraction given","Fragments":["the"]},{"Key":"the modest","Fragments":["scale"]},{"Key":"modest scale","Fragments":["of"]},{"Key":" hehehe","Fragments":["...","...","I"]},{"Key":"hehehe ...","Fragments":["Just","well"]},{"Key":"... Just","Fragments":["wanted"]},{"Key":"Just wanted","Fragments":["to"]},{"Key":"to refresh","Fragments":["how"]},{"Key":"refresh how","Fragments":["to"]},{"Key":"matching ...","Fragments":["I"]},{"Key":"... I","Fragments":["learned"]},{"Key":"I learned","Fragments":["how","something","a","about"]},{"Key":"learned how","Fragments":["can"]},{"Key":"how can","Fragments":["I"]},{"Key":"I supply","Fragments":["multiple"]},{"Key":"supply multiple","Fragments":["values"]},{"Key":"multiple values","Fragments":["for"]},{"Key":"values for","Fragments":["pattern","the"]},{"Key":"for pattern","Fragments":["match","matching.","matching","matching","matching"]},{"Key":"you curry","Fragments":["your"]},{"Key":"curry your","Fragments":["arguments,"]},{"Key":"your arguments,","Fragments":["you"]},{"Key":"arguments, you","Fragments":["can"]},{"Key":"get some","Fragments":["type-inference"]},{"Key":"some type-inference","Fragments":["benefits:"]},{"Key":" scala\u003e","Fragments":["accumulate((_+1),","accumulate(List(1,2,3))(_+1)"]},{"Key":"scala\u003e accumulate((_+1),","Fragments":["List(1,2,3))"]},{"Key":" \u003cconsole\u003e:9:","Fragments":["error:"]},{"Key":"\u003cconsole\u003e:9: error:","Fragments":["missing"]},{"Key":"error: missing","Fragments":["parameter"]},{"Key":"missing parameter","Fragments":["type"]},{"Key":"parameter type","Fragments":["for"]},{"Key":"for expanded","Fragments":["function"]},{"Key":"expanded function","Fragments":["((x$1)"]},{"Key":"function ((x$1)","Fragments":["=\u003e"]},{"Key":"((x$1) =\u003e","Fragments":["x$1.$plus(1))"]},{"Key":" accumulate((_+1),","Fragments":["List(1,2,3))"]},{"Key":"def accumulate[A,B](xs:","Fragments":["List[A])(f:A"]},{"Key":"accumulate[A,B](xs: List[A])(f:A","Fragments":["=\u003e"]},{"Key":"List[A])(f:A =\u003e","Fragments":["B):"]},{"Key":"=\u003e B):","Fragments":["List[B]"]},{"Key":"B): List[B]","Fragments":["="]},{"Key":"List[B] =","Fragments":["{"]},{"Key":" res2:","Fragments":["List[Int]"]},{"Key":"res2: List[Int]","Fragments":["="]},{"Key":"List[Int] =","Fragments":["List(2,"]},{"Key":"= List(2,","Fragments":["3,"]},{"Key":"List(2, 3,","Fragments":["4)"]},{"Key":"Since your","Fragments":["`Accumulate`","can"]},{"Key":"your `Accumulate`","Fragments":["class"]},{"Key":"`Accumulate` class","Fragments":["stores"]},{"Key":"class stores","Fragments":["no"]},{"Key":"stores no","Fragments":["state"]},{"Key":"no state","Fragments":["--"]},{"Key":"state --","Fragments":["it's"]},{"Key":"-- it's","Fragments":["basically"]},{"Key":"it's basically","Fragments":["just"]},{"Key":"basically just","Fragments":["a"]},{"Key":"a module","Fragments":["exposing"]},{"Key":"module exposing","Fragments":["the"]},{"Key":"exposing the","Fragments":["`accumulate`"]},{"Key":"the `accumulate`","Fragments":["function,"]},{"Key":"`accumulate` function,","Fragments":["you"]},{"Key":"function, you","Fragments":["can","should"]},{"Key":"it an","Fragments":["`object`"]},{"Key":"an `object`","Fragments":["instead"]},{"Key":"`object` instead","Fragments":["of"]},{"Key":"Nice job","Fragments":["with"]},{"Key":"job with","Fragments":["the"]},{"Key":"of recursion","Fragments":["looks"]},{"Key":"recursion looks","Fragments":["interesting"]},{"Key":"looks interesting","Fragments":["(most"]},{"Key":"interesting (most","Fragments":["other"]},{"Key":"(most other","Fragments":["solutions"]},{"Key":"solutions I've","Fragments":["seen"]},{"Key":"seen use","Fragments":["iteration),"]},{"Key":"use iteration),","Fragments":["but"]},{"Key":"iteration), but","Fragments":["I"]},{"Key":"bit overkill,","Fragments":["especially"]},{"Key":"overkill, especially","Fragments":["because"]},{"Key":"especially because","Fragments":["you"]},{"Key":"use backticks","Fragments":["for"]},{"Key":"backticks for","Fragments":["`day`"]},{"Key":"for `day`","Fragments":["(I"]},{"Key":"`day` (I","Fragments":["had"]},{"Key":"(I had","Fragments":["to"]},{"Key":"up what","Fragments":["that"]},{"Key":"also avoid","Fragments":["the"]},{"Key":"the mutable-style","Fragments":["`set`"]},{"Key":"mutable-style `set`","Fragments":["call"]},{"Key":"`set` call","Fragments":["on"]},{"Key":"call on","Fragments":["`base`:","newName."]},{"Key":"on `base`:","Fragments":["just"]},{"Key":"`base`: just","Fragments":["create"]},{"Key":"just create","Fragments":["a","random"]},{"Key":"object instead","Fragments":["of"]},{"Key":"of changing","Fragments":["`base`","a"]},{"Key":"also eliminate","Fragments":["the","the"]},{"Key":"eliminate the","Fragments":["need","possibilty","dependence"]},{"Key":"for `decDaysUntil`","Fragments":["and"]},{"Key":"`decDaysUntil` and","Fragments":["do"]},{"Key":"do everything","Fragments":["with","in"]},{"Key":"everything with","Fragments":["`incDaysUntil`"]},{"Key":"with `incDaysUntil`","Fragments":["if"]},{"Key":"`incDaysUntil` if","Fragments":["you"]},{"Key":"you take","Fragments":["into","the"]},{"Key":"account that","Fragments":["you"]},{"Key":"need at","Fragments":["most"]},{"Key":"at most","Fragments":["7"]},{"Key":"most 7","Fragments":["attempts"]},{"Key":"7 attempts","Fragments":["to"]},{"Key":"attempts to","Fragments":["find"]},{"Key":"optimize two","Fragments":["passes"]},{"Key":"two passes","Fragments":["through"]},{"Key":"passes through","Fragments":["words"]},{"Key":"through words","Fragments":["(groupBy"]},{"Key":"words (groupBy","Fragments":["and"]},{"Key":"(groupBy and","Fragments":["mapValues)?"]},{"Key":"almost fine","Fragments":["now."]},{"Key":"I doubt","Fragments":["that","that"]},{"Key":"doubt that","Fragments":["addToCache","would"]},{"Key":"that addToCache","Fragments":["does"]},{"Key":"addToCache does","Fragments":["what"]},{"Key":"you intent","Fragments":["it"]},{"Key":"intent it","Fragments":["to"]},{"Key":"to do,","Fragments":["namely"]},{"Key":"do, namely","Fragments":["to"]},{"Key":"namely to","Fragments":["set"]},{"Key":"to set","Fragments":["cache"]},{"Key":"set cache","Fragments":["to"]},{"Key":"cache to","Fragments":["a","cache"]},{"Key":" also","Fragments":["make","for","line"]},{"Key":"make vals","Fragments":["and"]},{"Key":"defs private","Fragments":["if"]},{"Key":"A case","Fragments":["class"]},{"Key":"case class","Fragments":["would","will","already,","rather","and","and","!","you","you"]},{"Key":"class would","Fragments":["have"]},{"Key":"have saved","Fragments":["you"]},{"Key":"saved you","Fragments":["for"]},{"Key":"the trouble","Fragments":["writing"]},{"Key":"trouble writing","Fragments":["the"]},{"Key":"writing the","Fragments":["companion"]},{"Key":" right","Fragments":["-"]},{"Key":"right -","Fragments":["unnecessary"]},{"Key":"- unnecessary","Fragments":["overhead,"]},{"Key":"unnecessary overhead,","Fragments":["thanks."]},{"Key":"change Strings","Fragments":["to"]},{"Key":"Strings to","Fragments":["an","a"]},{"Key":"an Array[Char]","Fragments":["as","instead"]},{"Key":"Array[Char] as","Fragments":["in"]},{"Key":"Scala they","Fragments":["are"]},{"Key":"are already","Fragments":["Seq[Char]","private","of","instantiated.","immutable.","implicitly"]},{"Key":"already Seq[Char]","Fragments":["implicitly."]},{"Key":"chose this","Fragments":["implementation"]},{"Key":"this implementation","Fragments":["because"]},{"Key":"implementation because","Fragments":["I"]},{"Key":"using string","Fragments":["interpolation","interpolation"]},{"Key":"interpolation with","Fragments":["s","formatting"]},{"Key":"with s","Fragments":["is"]},{"Key":"s is","Fragments":["more"]},{"Key":"than string","Fragments":["concatenation"]},{"Key":"string concatenation","Fragments":["\"Hello,"]},{"Key":"concatenation \"Hello,","Fragments":["\""]},{"Key":"\"Hello, \"","Fragments":["+"]},{"Key":"\" +","Fragments":["name"]},{"Key":"+ name","Fragments":["+"]},{"Key":"name +","Fragments":["\"!\"."]},{"Key":"+ \"!\".","Fragments":["I"]},{"Key":"\"!\". I","Fragments":["wonder"]},{"Key":" Initial","Fragments":["commit."]},{"Key":"of (Char-\u003eChar)","Fragments":["to"]},{"Key":"(Char-\u003eChar) to","Fragments":["make"]},{"Key":"the lookups","Fragments":["on"]},{"Key":"lookups on","Fragments":["our"]},{"Key":"on our","Fragments":["map()"]},{"Key":"our map()","Fragments":["iteration"]},{"Key":"map() iteration","Fragments":["type"]},{"Key":"iteration type","Fragments":["compatible."]},{"Key":"A map/reduce","Fragments":["operation","operation"]},{"Key":"map/reduce operation","Fragments":["implemented","implemented"]},{"Key":"operation implemented","Fragments":["using","by"]},{"Key":"implemented using","Fragments":["anonymous","pattern"]},{"Key":"using anonymous","Fragments":["pattern"]},{"Key":"anonymous pattern","Fragments":["matching.","matching"]},{"Key":" 'def","Fragments":["apply()"]},{"Key":"'def apply()","Fragments":["="]},{"Key":"apply() =","Fragments":["this'"]},{"Key":"= this'","Fragments":["trick"]},{"Key":"this' trick","Fragments":["again"]},{"Key":"trick again","Fragments":[":)."]},{"Key":"following test","Fragments":["case"]},{"Key":"case to","Fragments":["my","all","be"]},{"Key":"my suite","Fragments":["in"]},{"Key":"suite in","Fragments":["order"]},{"Key":"to verify","Fragments":["that","against"]},{"Key":"verify that","Fragments":["every"]},{"Key":"that every","Fragments":["robot"]},{"Key":"every robot","Fragments":["has"]},{"Key":"robot has","Fragments":["a"]},{"Key":"a unique","Fragments":["name:","name","name."]},{"Key":"it (\"has","Fragments":["a"]},{"Key":"(\"has a","Fragments":["unique"]},{"Key":"unique name","Fragments":["that"]},{"Key":"name that","Fragments":["is","describes"]},{"Key":"used twice\")","Fragments":["{"]},{"Key":"val maxRobots","Fragments":["="]},{"Key":"maxRobots =","Fragments":["10000"]},{"Key":" var","Fragments":["usedNames"]},{"Key":"var usedNames","Fragments":["="]},{"Key":"usedNames =","Fragments":["Set[String]()"]},{"Key":"(i ←","Fragments":["0"]},{"Key":"← 0","Fragments":["until"]},{"Key":"until maxRobots)","Fragments":["usedNames"]},{"Key":"maxRobots) usedNames","Fragments":["+="]},{"Key":"usedNames +=","Fragments":["new"]},{"Key":"+= new","Fragments":["Robot().name"]},{"Key":" usedNames.size","Fragments":["should"]},{"Key":"usedNames.size should","Fragments":["be"]},{"Key":" Wow,","Fragments":["you","ours","I","that"]},{"Key":"Wow, you","Fragments":["have"]},{"Key":"have pushed","Fragments":["yourself"]},{"Key":"pushed yourself","Fragments":["even"]},{"Key":"yourself even","Fragments":["further"]},{"Key":"even further","Fragments":["here"]},{"Key":"further here","Fragments":[";)"]},{"Key":"don't quite","Fragments":["get"]},{"Key":"quite get","Fragments":["what"]},{"Key":"get what","Fragments":["all","we"]},{"Key":"what all","Fragments":["these"]},{"Key":"all these","Fragments":["private[this]"]},{"Key":"these private[this]","Fragments":["are"]},{"Key":"private[this] are","Fragments":["for."]},{"Key":"are for.","Fragments":["I'm"]},{"Key":"for. I'm","Fragments":["going"]},{"Key":"I'm going","Fragments":["to","to","to","to"]},{"Key":"going to","Fragments":["make","be","make","look","try","treat","treat","make","need","find","re-do","happen","replicate","be","convince","try"]},{"Key":"some research","Fragments":["on"]},{"Key":"research on","Fragments":["that."]},{"Key":"find http://docs.scala-lang.org/overviews/core/string-interpolation.html","Fragments":["useful"]},{"Key":"http://docs.scala-lang.org/overviews/core/string-interpolation.html useful","Fragments":["for"]},{"Key":"for string","Fragments":["oriented"]},{"Key":"string oriented","Fragments":["tasks."]},{"Key":"do u","Fragments":["use"]},{"Key":"u use","Fragments":["uppercase"]},{"Key":"use uppercase","Fragments":["letters"]},{"Key":"letters in","Fragments":["regular","several"]},{"Key":"in regular","Fragments":["expressions"]},{"Key":"expressions after","Fragments":["u"]},{"Key":"after u","Fragments":["lowercased"]},{"Key":"u lowercased","Fragments":["your"]},{"Key":"lowercased your","Fragments":["text?"]},{"Key":"solution has","Fragments":["O(N\u003csup\u003e2\u003c/sup\u003e)","some"]},{"Key":"has O(N\u003csup\u003e2\u003c/sup\u003e)","Fragments":["complexity."]},{"Key":"O(N\u003csup\u003e2\u003c/sup\u003e) complexity.","Fragments":["Can"]},{"Key":"complexity. Can","Fragments":["be"]},{"Key":"Can be","Fragments":["solved","replaced"]},{"Key":"solved in","Fragments":["a"]},{"Key":" replaceAll","Fragments":["is"]},{"Key":"replaceAll is","Fragments":["Java."]},{"Key":"is Java.","Fragments":["Perhaps"]},{"Key":"Java. Perhaps","Fragments":["you"]},{"Key":"more Scala","Fragments":["by"]},{"Key":"Scala by","Fragments":["using"]},{"Key":"using filter?","Fragments":[";-)"]},{"Key":"filter? ;-)","Fragments":["Is"]},{"Key":";-) Is","Fragments":["also"]},{"Key":"Is also","Fragments":["much"]},{"Key":"also much","Fragments":["more"]},{"Key":"You stay","Fragments":["on"]},{"Key":"stay on","Fragments":["a"]},{"Key":"a sheer","Fragments":["technical"]},{"Key":"sheer technical","Fragments":["level"]},{"Key":"technical level","Fragments":["(String"]},{"Key":"level (String","Fragments":["manipulation"]},{"Key":"(String manipulation","Fragments":["and"]},{"Key":"manipulation and","Fragments":["checks)."]},{"Key":"and checks).","Fragments":["That"]},{"Key":"checks). That","Fragments":["is"]},{"Key":"That is","Fragments":["fine,","a","another","what","evaluated","ok","a"]},{"Key":"is fine,","Fragments":["and"]},{"Key":"some may","Fragments":["even"]},{"Key":"may even","Fragments":["want"]},{"Key":"even want","Fragments":["it"]},{"Key":"want it","Fragments":["exactly","to"]},{"Key":"it exactly","Fragments":["this"]},{"Key":"exactly this","Fragments":["way."]},{"Key":"this way.","Fragments":["Nevertheless,"]},{"Key":"way. Nevertheless,","Fragments":["you"]},{"Key":"Nevertheless, you","Fragments":["might"]},{"Key":"consider abstracting","Fragments":["away"]},{"Key":"abstracting away","Fragments":["from"]},{"Key":"from technical","Fragments":["details"]},{"Key":"technical details","Fragments":["by","in"]},{"Key":"details by","Fragments":["defining"]},{"Key":"defining functions","Fragments":["like"]},{"Key":"like \"isShouting\",","Fragments":["isSilence\","]},{"Key":"\"isShouting\", isSilence\",","Fragments":["\"isQuestion\""]},{"Key":"isSilence\", \"isQuestion\"","Fragments":["etc."]},{"Key":"One case","Fragments":["for"]},{"Key":"it (besides","Fragments":["readability?):"]},{"Key":"(besides readability?):","Fragments":["Imagine"]},{"Key":"readability?): Imagine","Fragments":["the"]},{"Key":"input type","Fragments":["is"]},{"Key":"is changed","Fragments":["from"]},{"Key":"changed from","Fragments":["String","the"]},{"Key":"from String","Fragments":["to","to"]},{"Key":"some case","Fragments":["class,"]},{"Key":"case class,","Fragments":["say.","you","then"]},{"Key":"class, say.","Fragments":["Then"]},{"Key":"say. Then","Fragments":["the"]},{"Key":"Then the","Fragments":["overall"]},{"Key":"overall structure","Fragments":["remains"]},{"Key":"structure remains","Fragments":["the"]},{"Key":"remains the","Fragments":["same,"]},{"Key":"the same,","Fragments":["you","but"]},{"Key":"same, you","Fragments":["only"]},{"Key":"the implementations","Fragments":["of"]},{"Key":"implementations of","Fragments":["these"]},{"Key":"these methods","Fragments":["..."]},{"Key":"the if-checks","Fragments":["inside"]},{"Key":"if-checks inside","Fragments":["your"]},{"Key":"inside your","Fragments":["case-clauses","regex"]},{"Key":"your case-clauses","Fragments":["refer","is"]},{"Key":"case-clauses refer","Fragments":["to"]},{"Key":"match variable,","Fragments":["not"]},{"Key":"variable, not","Fragments":["to"]},{"Key":"case num","Fragments":["=\u003e"]},{"Key":"num =\u003e","Fragments":["if"]},{"Key":"=\u003e if","Fragments":["num.length"]},{"Key":"if num.length","Fragments":["=="]},{"Key":"num.length ==","Fragments":["..."]},{"Key":" validLength","Fragments":["and"]},{"Key":"validLength and","Fragments":["errorNumber"]},{"Key":"and errorNumber","Fragments":["are"]},{"Key":"errorNumber are","Fragments":["actually"]},{"Key":"actually constants","Fragments":["and"]},{"Key":"and pls","Fragments":["no","omit","remove"]},{"Key":"pls no","Fragments":["semicolons","```return```"]},{"Key":"no semicolons","Fragments":["in"]},{"Key":"semicolons in","Fragments":["Scala"]},{"Key":"Scala if","Fragments":["you"]},{"Key":"need them","Fragments":[";-)"]},{"Key":"ok, you","Fragments":["don't"]},{"Key":"regex here,","Fragments":["fine."]},{"Key":"your conditions","Fragments":["in"]},{"Key":"the case-clauses","Fragments":["make"]},{"Key":"case-clauses make","Fragments":["the"]},{"Key":"reader think","Fragments":["a"]},{"Key":"think a","Fragments":["bit","catch-all","bit","regex"]},{"Key":"too hard","Fragments":["to"]},{"Key":"my taste","Fragments":["(and","-"]},{"Key":"taste (and","Fragments":["therefore"]},{"Key":"(and therefore","Fragments":["make"]},{"Key":"therefore make","Fragments":["the"]},{"Key":"code also","Fragments":["more"]},{"Key":"also more","Fragments":["error-prone).","efficient)."]},{"Key":"more error-prone).","Fragments":["In"]},{"Key":"error-prone). In","Fragments":["those"]},{"Key":"In those","Fragments":["cases"]},{"Key":"those cases","Fragments":["I"]},{"Key":"define little","Fragments":["private","helper"]},{"Key":"methods with","Fragments":["good","few"]},{"Key":"a reader's","Fragments":["life"]},{"Key":"reader's life","Fragments":["easier."]},{"Key":"Then your","Fragments":["use","code"]},{"Key":"of def","Fragments":["vs."]},{"Key":"def vs.","Fragments":["val"]},{"Key":"vs. val","Fragments":["is"]},{"Key":"val is","Fragments":["questionable:","nice"]},{"Key":" number","Fragments":["is"]},{"Key":"a def,","Fragments":["so","though,"]},{"Key":"def, so","Fragments":["it","now"]},{"Key":"be executed","Fragments":["for"]},{"Key":"executed for","Fragments":["every"]},{"Key":"call (from","Fragments":["outside"]},{"Key":"(from outside","Fragments":["and"]},{"Key":"outside and","Fragments":["when"]},{"Key":"when creating","Fragments":["the","the"]},{"Key":"the vals).","Fragments":["I"]},{"Key":"vals). I","Fragments":["would"]},{"Key":"would then","Fragments":["at","have","also","have","have"]},{"Key":"then at","Fragments":["least","least"]},{"Key":"least also","Fragments":["have"]},{"Key":"have number","Fragments":["as"]},{"Key":"number as","Fragments":["a"]},{"Key":"could consider","Fragments":["making","using","mapping","inserting","creating"]},{"Key":"consider making","Fragments":["the"]},{"Key":"vals lazy","Fragments":["so"]},{"Key":"lazy so","Fragments":["that","that","that"]},{"Key":"not doing","Fragments":["all"]},{"Key":"doing all","Fragments":["the","the"]},{"Key":"work in","Fragments":["the","the","Scala","the","advance","to"]},{"Key":"the constructor","Fragments":["code.","does","are","arg","arg:","(or"]},{"Key":"first implementation","Fragments":["of"]},{"Key":"a demo","Fragments":["of"]},{"Key":"demo of","Fragments":["exercism"]},{"Key":"of exercism","Fragments":["for","is"]},{"Key":"exercism for","Fragments":["the"]},{"Key":"the students","Fragments":["I","were"]},{"Key":"students I","Fragments":["am"]},{"Key":"am mentoring.","Fragments":["Am"]},{"Key":"mentoring. Am","Fragments":["not"]},{"Key":"Am not","Fragments":["really"]},{"Key":"really looking","Fragments":["for"]},{"Key":"for comments,","Fragments":["just"]},{"Key":"comments, just","Fragments":["exploring"]},{"Key":"just exploring","Fragments":["the"]},{"Key":"exploring the","Fragments":["system."]},{"Key":"Nice -","Fragments":["but"]},{"Key":"readable with","Fragments":["a","a","a"]},{"Key":"a `for`","Fragments":["comprehension.","comprehension","comprehension","comprehension."]},{"Key":"solution, one","Fragments":["suggestion"]},{"Key":"one suggestion","Fragments":["is"]},{"Key":"suggestion is","Fragments":["that","that"]},{"Key":"have inlined","Fragments":["the"]},{"Key":"inlined the","Fragments":["call"]},{"Key":"the call","Fragments":["to"]},{"Key":"call to","Fragments":["result.toList","`count`","the","```db```.","call","reset()."]},{"Key":"to result.toList","Fragments":["and"]},{"Key":"result.toList and","Fragments":["from"]},{"Key":"and from","Fragments":["a"]},{"Key":"from a","Fragments":["presentation","shout","stylistic","renaming.","solution","colleague","readability","robot,","longer","standard","Python"]},{"Key":"a presentation","Fragments":["perspective"]},{"Key":"presentation perspective","Fragments":["I"]},{"Key":"perspective I","Fragments":["personally"]},{"Key":"personally would","Fragments":["remove"]},{"Key":"would remove","Fragments":["the","the"]},{"Key":"the commented","Fragments":["out"]},{"Key":"commented out","Fragments":["code"]},{"Key":"out code","Fragments":["as"]},{"Key":"it obscures","Fragments":["your"]},{"Key":"obscures your","Fragments":["solution"]},{"Key":" Added","Fragments":["@donato","check"]},{"Key":"Added @donato","Fragments":["suggestions"]},{"Key":"@donato suggestions","Fragments":["(thanks!)"]},{"Key":" rather","Fragments":["have"]},{"Key":"rather have","Fragments":["a","`pots`"]},{"Key":"a copy","Fragments":["instead","of","of","instead","in","made","for","of","to"]},{"Key":"copy instead","Fragments":["of","of"]},{"Key":"of modifying","Fragments":["the","initialised","the"]},{"Key":"modifying the","Fragments":["input","argument","argument?"]},{"Key":"you create","Fragments":["a","two","a"]},{"Key":"new Robot","Fragments":["when"]},{"Key":"Robot when","Fragments":["you"]},{"Key":"you reset","Fragments":["this"]},{"Key":"reset this","Fragments":["Robot?"]},{"Key":"this Robot?","Fragments":["That"]},{"Key":"Robot? That","Fragments":["is"]},{"Key":"a somewhat","Fragments":["inefficient"]},{"Key":"somewhat inefficient","Fragments":["Robot"]},{"Key":"inefficient Robot","Fragments":["factory!"]},{"Key":"Robot factory!","Fragments":[":-)"]},{"Key":"and about","Fragments":["your","the"]},{"Key":"your while-loops:","Fragments":["`Random.alphanumeric`"]},{"Key":"while-loops: `Random.alphanumeric`","Fragments":["is"]},{"Key":"`Random.alphanumeric` is","Fragments":["a"]},{"Key":"a `Stream`,","Fragments":["so"]},{"Key":"`Stream`, so","Fragments":["you"]},{"Key":"can `filter`","Fragments":["on"]},{"Key":"`filter` on","Fragments":["it.","the","letters"]},{"Key":"the nits.","Fragments":["I'm","I'm"]},{"Key":"nits. I'm","Fragments":["still","pretty"]},{"Key":"still pretty","Fragments":["new"]},{"Key":"are some","Fragments":["methods/syntax","Scala"]},{"Key":"some methods/syntax","Fragments":["I'm"]},{"Key":"methods/syntax I'm","Fragments":["not"]},{"Key":"not aware","Fragments":["of."]},{"Key":"aware of.","Fragments":["I've"]},{"Key":"of. I've","Fragments":["taken"]},{"Key":"I've taken","Fragments":["another","your"]},{"Key":"taken another","Fragments":["shot"]},{"Key":"another shot","Fragments":["at"]},{"Key":"shot at","Fragments":["this"]},{"Key":"this based","Fragments":["on"]},{"Key":"than use","Fragments":["`word.toCharArray.sortBy(identity)`,"]},{"Key":"use `word.toCharArray.sortBy(identity)`,","Fragments":["why"]},{"Key":"`word.toCharArray.sortBy(identity)`, why","Fragments":["not"]},{"Key":"use `word.sorted`?","Fragments":["Then"]},{"Key":"`word.sorted`? Then","Fragments":["your"]},{"Key":"and probably","Fragments":["clearer.","also","from","many","still"]},{"Key":"probably clearer.","Fragments":["You"]},{"Key":"clearer. You","Fragments":["could"]},{"Key":"also then","Fragments":["use"]},{"Key":"use `==`","Fragments":["instead"]},{"Key":"`==` instead","Fragments":["of"]},{"Key":"of `sameElements`","Fragments":["for"]},{"Key":"`sameElements` for","Fragments":["the"]},{"Key":"also suggest","Fragments":["changing"]},{"Key":"suggest changing","Fragments":["`isAnagram(word:"]},{"Key":"changing `isAnagram(word:","Fragments":["String,"]},{"Key":"`isAnagram(word: String,","Fragments":["anagram:"]},{"Key":"String, anagram:","Fragments":["String)`"]},{"Key":"anagram: String)`","Fragments":["to"]},{"Key":"String)` to","Fragments":["`isAnagram(anagram:String)`."]},{"Key":"to `isAnagram(anagram:String)`.","Fragments":["You'll"]},{"Key":"`isAnagram(anagram:String)`. You'll","Fragments":["get"]},{"Key":"You'll get","Fragments":["the"]},{"Key":"same effect,","Fragments":["since","of"]},{"Key":"effect, since","Fragments":["you"]},{"Key":"method with","Fragments":["the","a","@allie"]},{"Key":"the val","Fragments":["word","lazy"]},{"Key":"val word","Fragments":["for"]},{"Key":"word for","Fragments":["the"]},{"Key":"parameter each","Fragments":["time."]},{"Key":"each time.","Fragments":["You"]},{"Key":"time. You","Fragments":["shouldn't"]},{"Key":"shouldn't overuse","Fragments":["the"]},{"Key":"overuse the","Fragments":["same"]},{"Key":"same val","Fragments":["names,"]},{"Key":"val names,","Fragments":["as"]},{"Key":"names, as","Fragments":["things"]},{"Key":"as things","Fragments":["can"]},{"Key":"things can","Fragments":["get"]},{"Key":"Is this","Fragments":["better","making","variant"]},{"Key":"the last?","Fragments":["Still"]},{"Key":"last? Still","Fragments":["messy,"]},{"Key":"Still messy,","Fragments":["IMO."]},{"Key":"Two options","Fragments":["for"]},{"Key":"options for","Fragments":["brevity:"]},{"Key":"for brevity:","Fragments":["the"]},{"Key":"brevity: the","Fragments":["curly"]},{"Key":"around a","Fragments":["single","bit"]},{"Key":"single statement","Fragments":["aren't"]},{"Key":"statement aren't","Fragments":["strictly"]},{"Key":"aren't strictly","Fragments":["necessary"]},{"Key":"strictly necessary","Fragments":["(though"]},{"Key":"necessary (though","Fragments":["you","following","following"]},{"Key":"(though you","Fragments":["might"]},{"Key":"want them","Fragments":["for"]},{"Key":"for readability),","Fragments":["and"]},{"Key":"readability), and","Fragments":["string"]},{"Key":"and string","Fragments":["interpolation"]},{"Key":"interpolation needs","Fragments":["no"]},{"Key":"needs no","Fragments":["curly"]},{"Key":"no curly","Fragments":["braces"]},{"Key":"braces for","Fragments":["simple","all"]},{"Key":"for simple","Fragments":["cases."]},{"Key":"the feedback!","Fragments":["Yes,","I"]},{"Key":"feedback! Yes,","Fragments":["the"]},{"Key":"Yes, the","Fragments":["Genome","collection"]},{"Key":"the Genome","Fragments":["and"]},{"Key":"Genome and","Fragments":["Strand"]},{"Key":"and Strand","Fragments":["classes"]},{"Key":"Strand classes","Fragments":["are"]},{"Key":"really needed,","Fragments":["but"]},{"Key":"needed, but","Fragments":["they","I"]},{"Key":"to model","Fragments":["the","phrases."]},{"Key":"model the","Fragments":["domain"]},{"Key":"domain and","Fragments":["add"]},{"Key":"and add","Fragments":["runtime","or","to","the","that","an"]},{"Key":"add runtime","Fragments":["validation"]},{"Key":"runtime validation","Fragments":["for"]},{"Key":"validation for","Fragments":["the"]},{"Key":" Nicely","Fragments":["modeled","improved"]},{"Key":"Nicely modeled","Fragments":["but"]},{"Key":"modeled but","Fragments":["you"]},{"Key":"the Strand","Fragments":["and"]},{"Key":"Strand and","Fragments":["Genome"]},{"Key":"and Genome","Fragments":["classes."]},{"Key":"Genome classes.","Fragments":["You"]},{"Key":"classes. You","Fragments":["could"]},{"Key":"also directly","Fragments":["zip"]},{"Key":"directly zip","Fragments":["both","two"]},{"Key":"zip both","Fragments":["`a`"]},{"Key":"both `a`","Fragments":["and"]},{"Key":"`a` and","Fragments":["`b`.","the","`b`","`b`"]},{"Key":"Good job!","Fragments":[":)","I'm"]},{"Key":"using `letter","Fragments":["=\u003e"]},{"Key":"`letter =\u003e","Fragments":["letter`,"]},{"Key":"=\u003e letter`,","Fragments":["you"]},{"Key":"letter`, you","Fragments":["can"]},{"Key":"see you","Fragments":["used","come"]},{"Key":"you used","Fragments":["Maps","\"match\"","`e._2.head`","some"]},{"Key":"used Maps","Fragments":["and"]},{"Key":"Maps and","Fragments":["I","foreach?"]},{"Key":"have seen","Fragments":["a","thus"]},{"Key":"seen a","Fragments":["lot","method","lot"]},{"Key":"of that,","Fragments":["but"]},{"Key":"but sorted","Fragments":["Strings"]},{"Key":"sorted Strings","Fragments":["are"]},{"Key":"are easier","Fragments":["and","to","ways"]},{"Key":"easier and","Fragments":["more"]},{"Key":"You used","Fragments":["a"]},{"Key":"a comprehension,","Fragments":["but"]},{"Key":"feel a","Fragments":["`filter`"]},{"Key":"a `filter`","Fragments":["was"]},{"Key":"`filter` was","Fragments":["more"]},{"Key":"more in","Fragments":["order","accordance","subsequent","the","Scala"]},{"Key":"order for","Fragments":["your"]},{"Key":"your `matches`","Fragments":["function."]},{"Key":"the matches","Fragments":["method"]},{"Key":"matches method","Fragments":["is"]},{"Key":"the one","Fragments":["used","liner","liners","method","test","I","that"]},{"Key":"one used","Fragments":["in"]},{"Key":"validity of","Fragments":["the"]},{"Key":"What would","Fragments":["you","you"]},{"Key":" Hi","Fragments":["@sherwood,","guys,","Erik,","@stuart,","there.","lhohan,","-","@kaitlyn"]},{"Key":"very functional","Fragments":["solution."]},{"Key":"function matches","Fragments":["is"]},{"Key":"matches is","Fragments":["unused,"]},{"Key":"is unused,","Fragments":["could"]},{"Key":"unused, could","Fragments":["it"]},{"Key":"could it","Fragments":["be","be","be?"]},{"Key":"little trouble","Fragments":["understanding"]},{"Key":"trouble understanding","Fragments":["the","exactly"]},{"Key":"understanding the","Fragments":["concept","challenge."]},{"Key":"the concept","Fragments":["behind"]},{"Key":"concept behind","Fragments":["decompose"]},{"Key":"behind decompose","Fragments":["and"]},{"Key":"decompose and","Fragments":["that"]},{"Key":"that made","Fragments":["it","it"]},{"Key":"harder for","Fragments":["me"]},{"Key":"to confirm","Fragments":["that"]},{"Key":"confirm that","Fragments":["if","would"]},{"Key":"two words","Fragments":["decompose","are"]},{"Key":"words decompose","Fragments":["the"]},{"Key":"decompose the","Fragments":["same"]},{"Key":"same way","Fragments":["then"]},{"Key":"way then","Fragments":["they"]},{"Key":"then they","Fragments":["are"]},{"Key":"are anagrams.","Fragments":["Perhaps"]},{"Key":"anagrams. Perhaps","Fragments":["there"]},{"Key":"Perhaps there","Fragments":["is"]},{"Key":"more intention","Fragments":["revealing"]},{"Key":"intention revealing","Fragments":["name"]},{"Key":"revealing name","Fragments":["for"]},{"Key":" i'd","Fragments":["like"]},{"Key":"i'd like","Fragments":["to"]},{"Key":"use more","Fragments":["pattern"]},{"Key":"more pattern","Fragments":["matching,"]},{"Key":"matching, as","Fragments":["it's"]},{"Key":"as it's","Fragments":["the","in"]},{"Key":"it's the","Fragments":["scala","only","same"]},{"Key":"scala way.","Fragments":["For"]},{"Key":"way. For","Fragments":["the"]},{"Key":"For the","Fragments":["regex","rest","conditionals","length"]},{"Key":"regex match","Fragments":["and"]},{"Key":"match and","Fragments":["for","add","case,"]},{"Key":"if else","Fragments":["chain","clause?"]},{"Key":"may consider","Fragments":["using"]},{"Key":"matching (perhaps","Fragments":["in"]},{"Key":"(perhaps in","Fragments":["combination"]},{"Key":"in combination","Fragments":["w/"]},{"Key":"combination w/","Fragments":["regex'es)."]},{"Key":" Reimplemented","Fragments":["containsSlice,"]},{"Key":"Reimplemented containsSlice,","Fragments":["also"]},{"Key":"containsSlice, also","Fragments":["I"]},{"Key":"also I","Fragments":["did"]},{"Key":"probably meant","Fragments":["```pow(2,"]},{"Key":"meant ```pow(2,","Fragments":["square"]},{"Key":"```pow(2, square","Fragments":["-"]},{"Key":"square -","Fragments":["1)```?"]},{"Key":"- 1)```?","Fragments":[":-)"]},{"Key":" Btw,","Fragments":["giving","the","there","Scala"]},{"Key":"Btw, giving","Fragments":["different"]},{"Key":"giving different","Fragments":["things"]},{"Key":"different things","Fragments":["the"]},{"Key":"things the","Fragments":["same"]},{"Key":"is generally","Fragments":["not","unnecessary"]},{"Key":"generally not","Fragments":["a"]},{"Key":"idea and","Fragments":["it","carries"]},{"Key":"is asking","Fragments":["for"]},{"Key":"asking for","Fragments":["trouble"]},{"Key":"for trouble","Fragments":["in"]},{"Key":"trouble in","Fragments":["Scala"]},{"Key":"Scala (as","Fragments":["the"]},{"Key":"(as the","Fragments":["compiler"]},{"Key":"compiler might","Fragments":["get"]},{"Key":"might get","Fragments":["confused)."]},{"Key":"get confused).","Fragments":["So"]},{"Key":"confused). So","Fragments":["you"]},{"Key":"should find","Fragments":["some"]},{"Key":"other name","Fragments":["for"]},{"Key":"the argument","Fragments":["of","which","\"test\"","explicitly","to","validation","list"]},{"Key":"argument of","Fragments":["the","any"]},{"Key":"the ```square```","Fragments":["function."]},{"Key":"And ```BigInt```","Fragments":["has"]},{"Key":"```BigInt``` has","Fragments":["its"]},{"Key":"own ```pow```","Fragments":["function."]},{"Key":"```pow``` function.","Fragments":["Why"]},{"Key":"function. Why","Fragments":["not"]},{"Key":"There is.","Fragments":["See"]},{"Key":"is. See","Fragments":["[my"]},{"Key":"See [my","Fragments":["example](http://exercism.io/submissions/f014cc99ee09389a4b9361e8)."]},{"Key":"There's a","Fragments":[":+","button","typo:","way"]},{"Key":"a :+","Fragments":["operator"]},{"Key":":+ operator","Fragments":["that"]},{"Key":"operator that","Fragments":["is"]},{"Key":"a shortcut","Fragments":["for"]},{"Key":"shortcut for","Fragments":["that,"]},{"Key":"for that,","Fragments":["right?"]},{"Key":"use `withDefaultValue`","Fragments":["when","on"]},{"Key":"`withDefaultValue` when","Fragments":["creating"]},{"Key":"the `getOrElse`","Fragments":["calls.","method.","method"]},{"Key":"more common","Fragments":["(and","way","way"]},{"Key":"common (and","Fragments":["easier"]},{"Key":"(and easier","Fragments":["to","to"]},{"Key":"to read)","Fragments":["to"]},{"Key":"read) to","Fragments":["just"]},{"Key":"use types","Fragments":["```[A,B]```."]},{"Key":"is again","Fragments":["Java"]},{"Key":"again Java","Fragments":["code"]},{"Key":"Java code","Fragments":["written"]},{"Key":"code written","Fragments":["in"]},{"Key":"written in","Fragments":["Scala.","a","camelCase,","Scala."]},{"Key":"... well","Fragments":["if"]},{"Key":"well if","Fragments":["you"]},{"Key":"not let","Fragments":["me"]},{"Key":"let me","Fragments":["use","know","return","know","have","know"]},{"Key":"me use","Fragments":["the"]},{"Key":"the cool","Fragments":["stuff"]},{"Key":"stuff from","Fragments":["scala"]},{"Key":"from scala","Fragments":["....I"]},{"Key":"scala ....I","Fragments":["will"]},{"Key":"....I will","Fragments":["go"]},{"Key":"will go","Fragments":["Java"]},{"Key":"go Java","Fragments":[":D"]},{"Key":"Not enough","Fragments":["semicolons"]},{"Key":"like I","Fragments":["should","said","was"]},{"Key":"been able","Fragments":["to","to"]},{"Key":"the ::","Fragments":["operator"]},{"Key":":: operator","Fragments":["to"]},{"Key":"operator to","Fragments":["destructure"]},{"Key":"to destructure","Fragments":["the","the"]},{"Key":"destructure the","Fragments":["sequences","tuple."]},{"Key":"the sequences","Fragments":["within"]},{"Key":"sequences within","Fragments":["the"]},{"Key":"case statements,","Fragments":["but"]},{"Key":"statements, but","Fragments":["this"]},{"Key":"this didn't","Fragments":["work"]},{"Key":"didn't work","Fragments":["for","very"]},{"Key":"for me.","Fragments":["Thus,","It","[Scala"]},{"Key":"me. Thus,","Fragments":["the"]},{"Key":"Thus, the","Fragments":["head"]},{"Key":"the head","Fragments":["and","of","and"]},{"Key":"head and","Fragments":["tail","reversing","just","tail."]},{"Key":"and tail","Fragments":["calls"]},{"Key":"tail calls","Fragments":["."]},{"Key":"The solution","Fragments":["itself"]},{"Key":"solution itself","Fragments":["is"]},{"Key":"itself is","Fragments":["good.","not","of"]},{"Key":"would question","Fragments":["the"]},{"Key":"question the","Fragments":["name"]},{"Key":"name \"FilterFunction\",","Fragments":["though."]},{"Key":"\"FilterFunction\", though.","Fragments":["It"]},{"Key":"though. It","Fragments":["is"]},{"Key":"too general","Fragments":["to"]},{"Key":"general to","Fragments":["my"]},{"Key":"To use","Fragments":["these"]},{"Key":"use these","Fragments":["long"]},{"Key":"these long","Fragments":["one-liners"]},{"Key":"long one-liners","Fragments":["is"]},{"Key":"one-liners is","Fragments":["not"]},{"Key":"really good","Fragments":["style:","way","style,"]},{"Key":"good style:","Fragments":["http://tech.gilt.com/2013/06/18/the-human-side-of-scala/"]},{"Key":"w/o calculating","Fragments":["all","all"]},{"Key":"calculating all","Fragments":["permutations?","permutations"]},{"Key":"that explicit","Fragments":["in"]},{"Key":"code, e.g.","Fragments":["by"]},{"Key":"e.g. by","Fragments":["an"]},{"Key":"alias like","Fragments":["```MMap```","`Money`"]},{"Key":"like ```MMap```","Fragments":["or"]},{"Key":"```MMap``` or","Fragments":["```mutable.Map```."]},{"Key":"Good point.","Fragments":["And","I","Thanks"]},{"Key":"point. And","Fragments":["it"]},{"Key":"And it","Fragments":["allows","would"]},{"Key":"it allows","Fragments":["me"]},{"Key":"to play","Fragments":["with","with"]},{"Key":"play with","Fragments":["the","companion"]},{"Key":"tail recursion","Fragments":["annotation.","slower?","without","to"]},{"Key":"recursion annotation.","Fragments":["Thanks!"]},{"Key":"annotation. Thanks!","Fragments":[":-)"]},{"Key":"recursive using","Fragments":["a"]},{"Key":"a support","Fragments":["function"]},{"Key":"support function","Fragments":["inside"]},{"Key":"function inside","Fragments":["compute.","```accumulate```"]},{"Key":"inside compute.","Fragments":["Such"]},{"Key":"compute. Such","Fragments":["as"]},{"Key":"Such as","Fragments":["\"loop(a:"]},{"Key":"as \"loop(a:","Fragments":["String,"]},{"Key":"\"loop(a: String,","Fragments":["b:"]},{"Key":"String, b:","Fragments":["String,"]},{"Key":"b: String,","Fragments":["acc:"]},{"Key":"String, acc:","Fragments":["Int)\","]},{"Key":"acc: Int)\",","Fragments":["calling"]},{"Key":"Int)\", calling","Fragments":["loop(a.tail,b.tail,"]},{"Key":"calling loop(a.tail,b.tail,","Fragments":["acc)"]},{"Key":"loop(a.tail,b.tail, acc)","Fragments":["if"]},{"Key":"acc) if","Fragments":["a.head"]},{"Key":"if a.head","Fragments":["=="]},{"Key":"a.head ==","Fragments":["b.head,"]},{"Key":"== b.head,","Fragments":["and"]},{"Key":"b.head, and","Fragments":["call"]},{"Key":"and call","Fragments":["loop(a.tail,b.tail,"]},{"Key":"call loop(a.tail,b.tail,","Fragments":["acc"]},{"Key":"loop(a.tail,b.tail, acc","Fragments":["+"]},{"Key":"acc +","Fragments":["1)","(c"]},{"Key":"+ 1)","Fragments":["otherwise.","getOrElse"]},{"Key":"This will","Fragments":["cause","allow"]},{"Key":"will cause","Fragments":["stack","it"]},{"Key":"cause stack","Fragments":["overflow"]},{"Key":"stack overflow","Fragments":["for"]},{"Key":"overflow for","Fragments":["long"]},{"Key":"for long","Fragments":["strings."]},{"Key":"long strings.","Fragments":["Try"]},{"Key":"strings. Try","Fragments":["using"]},{"Key":"Try using","Fragments":["fold","zip"]},{"Key":"using fold","Fragments":["or"]},{"Key":"fold or","Fragments":["count.","count"]},{"Key":" Permutations","Fragments":["isn't"]},{"Key":"Permutations isn't","Fragments":["the"]},{"Key":"most efficient","Fragments":["way","solution,","solution,"]},{"Key":"efficient way","Fragments":["to"]},{"Key":"go about","Fragments":["determining","supporting","reusing"]},{"Key":"about determining","Fragments":["whether"]},{"Key":"determining whether","Fragments":["a"]},{"Key":"a triangle","Fragments":["is"]},{"Key":"triangle is","Fragments":["logical"]},{"Key":"is logical","Fragments":["or"]},{"Key":"logical or","Fragments":["not,"]},{"Key":"or not,","Fragments":["but"]},{"Key":"not, but","Fragments":["it"]},{"Key":"is simple","Fragments":["and","simple?)."]},{"Key":"simple and","Fragments":["easily","the"]},{"Key":"and easily","Fragments":["read"]},{"Key":"easily read","Fragments":["and"]},{"Key":" Этот","Fragments":["код"]},{"Key":"Этот код","Fragments":["не"]},{"Key":"код не","Fragments":["должен"]},{"Key":"не должен","Fragments":["пройти"]},{"Key":"должен пройти","Fragments":["всех"]},{"Key":"пройти всех","Fragments":["тестов."]},{"Key":"всех тестов.","Fragments":["Надо"]},{"Key":"тестов. Надо","Fragments":["также"]},{"Key":"Надо также","Fragments":["включить"]},{"Key":"также включить","Fragments":["pending"]},{"Key":"включить pending","Fragments":["тесты."]},{"Key":" ``phrase.find(c=\u003ec.isLetter)``","Fragments":["can"]},{"Key":"``phrase.find(c=\u003ec.isLetter)`` can","Fragments":["be"]},{"Key":"by positional","Fragments":["arguments"]},{"Key":"positional arguments","Fragments":["version"]},{"Key":"arguments version","Fragments":["like"]},{"Key":"version like","Fragments":["``phrase.find(_.isLetter)``"]},{"Key":"thought there","Fragments":["must"]},{"Key":"doing that","Fragments":["bit.","adds"]},{"Key":"that bit.","Fragments":["My"]},{"Key":"bit. My","Fragments":["google-fu"]},{"Key":"My google-fu","Fragments":["failed"]},{"Key":"google-fu failed","Fragments":["me."]},{"Key":"simplify w/","Fragments":["the","```mapValues```.","`count`.","eta-reduction:","```count```","`count`","eta-reduction,"]},{"Key":"the ```grouped```","Fragments":["function."]},{"Key":"class will","Fragments":["create"]},{"Key":"will create","Fragments":["the"]},{"Key":"the apply","Fragments":["method","method"]},{"Key":"apply method","Fragments":["in","for","to"]},{"Key":"implementation does","Fragments":["not","not"]},{"Key":"not support","Fragments":["empty"]},{"Key":"support empty","Fragments":["lists/trees"]},{"Key":"empty lists/trees","Fragments":["-"]},{"Key":"lists/trees -","Fragments":["how"]},{"Key":"how might","Fragments":["you"]},{"Key":"might you","Fragments":["go"]},{"Key":"about supporting","Fragments":["that"]},{"Key":"supporting that","Fragments":["feature?"]},{"Key":"- odd","Fragments":["code"]},{"Key":"odd code","Fragments":["formatting,"]},{"Key":"code formatting,","Fragments":["that"]},{"Key":"formatting, that","Fragments":["semicolon"]},{"Key":"that semicolon","Fragments":["is"]},{"Key":"semicolon is","Fragments":["there"]},{"Key":"there for","Fragments":["no","it."]},{"Key":"for no","Fragments":["particular"]},{"Key":"no particular","Fragments":["reason"]},{"Key":"- i","Fragments":["think"]},{"Key":"i think","Fragments":["this","thats","of","i"]},{"Key":"expressed with","Fragments":["``map/case``"]},{"Key":" @juana","Fragments":["Hm,"]},{"Key":"@juana Hm,","Fragments":["actually"]},{"Key":"Hm, actually","Fragments":["I"]},{"Key":"actually I","Fragments":["tried","would"]},{"Key":"tried that","Fragments":["one,"]},{"Key":"that one,","Fragments":["but","too."]},{"Key":"one, but","Fragments":["it"]},{"Key":"doesn't compile.","Fragments":["Because"]},{"Key":"compile. Because","Fragments":["there"]},{"Key":"Because there","Fragments":["are"]},{"Key":"both `String.contains(String)`","Fragments":["and"]},{"Key":"`String.contains(String)` and","Fragments":["`String.contains(Char)`,"]},{"Key":"and `String.contains(Char)`,","Fragments":["and"]},{"Key":"`String.contains(Char)`, and","Fragments":["the"]},{"Key":"the `_`","Fragments":["helps"]},{"Key":"`_` helps","Fragments":["the"]},{"Key":"helps the","Fragments":["compiler","code"]},{"Key":"compiler to","Fragments":["do"]},{"Key":"do type","Fragments":["inference."]},{"Key":"for absolute","Fragments":["conciseness:"]},{"Key":" ```require(nucleotides","Fragments":["forall"]},{"Key":"```require(nucleotides forall","Fragments":["\"ACTG\".contains)```"]},{"Key":"only problem","Fragments":["is","(my","is"]},{"Key":"that ```generatedNames```","Fragments":["will"]},{"Key":"```generatedNames``` will","Fragments":["always"]},{"Key":"same empty","Fragments":["Seq!"]},{"Key":"empty Seq!","Fragments":[";-)"]},{"Key":"to @idella","Fragments":["advice,"]},{"Key":"@idella advice,","Fragments":["I've"]},{"Key":"advice, I've","Fragments":["used"]},{"Key":"I've used","Fragments":["pattern","an"]},{"Key":"used pattern","Fragments":["matching"]},{"Key":" `numAlphas`,","Fragments":["`numNumbers`"]},{"Key":"`numAlphas`, `numNumbers`","Fragments":["and"]},{"Key":"`numNumbers` and","Fragments":["probably"]},{"Key":"probably also","Fragments":["`rand`","more"]},{"Key":"also `rand`","Fragments":["should"]},{"Key":"`rand` should","Fragments":["probably"]},{"Key":"should probably","Fragments":["live","be","be","be"]},{"Key":"probably live","Fragments":["in"]},{"Key":"live in","Fragments":["a","a","Java"]},{"Key":"companion `object`,","Fragments":["rather"]},{"Key":"`object`, rather","Fragments":["than"]},{"Key":"than being","Fragments":["allocated"]},{"Key":"being allocated","Fragments":["for"]},{"Key":"allocated for","Fragments":["each"]},{"Key":"agree, more","Fragments":["readable."]},{"Key":"more readable.","Fragments":["I","Stole","Also,","More","What","So"]},{"Key":"readable. I","Fragments":["usually","was","could"]},{"Key":"usually add","Fragments":["them,","the"]},{"Key":"add them,","Fragments":["not"]},{"Key":"them, not","Fragments":["sure"]},{"Key":"was auto-formatted","Fragments":["by"]},{"Key":"auto-formatted by","Fragments":["scalariform."]},{"Key":" Purely","Fragments":["stylistic,"]},{"Key":"Purely stylistic,","Fragments":["but"]},{"Key":"stylistic, but","Fragments":["I"]},{"Key":"find binary","Fragments":["operators"]},{"Key":"binary operators","Fragments":["(like"]},{"Key":"operators (like","Fragments":["`%`)"]},{"Key":"(like `%`)","Fragments":["should"]},{"Key":"`%`) should","Fragments":["have"]},{"Key":"have spaces","Fragments":["around"]},{"Key":"spaces around","Fragments":["them"]},{"Key":"around them","Fragments":["for"]},{"Key":" Naive","Fragments":["Sieve"]},{"Key":"Naive Sieve","Fragments":["of"]},{"Key":"Sieve of","Fragments":["Eratosthenes"]},{"Key":"of Eratosthenes","Fragments":["implementation"]},{"Key":"Eratosthenes implementation","Fragments":["adapted"]},{"Key":"implementation adapted","Fragments":["from"]},{"Key":"adapted from","Fragments":["http://en.literateprograms.org/Sieve_of_Eratosthenes_%28Scala%29"]},{"Key":" Searching","Fragments":["for"]},{"Key":"Searching for","Fragments":["primes"]},{"Key":"for primes","Fragments":["is"]},{"Key":"primes is","Fragments":["time"]},{"Key":"is time","Fragments":["consuming."]},{"Key":"time consuming.","Fragments":["Your"]},{"Key":"consuming. Your","Fragments":["algoritm"]},{"Key":"Your algoritm","Fragments":["with"]},{"Key":"algoritm with","Fragments":["that"]},{"Key":"def primeFactors(n:","Fragments":["Long):"]},{"Key":"primeFactors(n: Long):","Fragments":["List[Long]"]},{"Key":"Long): List[Long]","Fragments":["="]},{"Key":"List[Long] =","Fragments":["search(n,"]},{"Key":"= search(n,","Fragments":["2"]},{"Key":"search(n, 2","Fragments":["#::"]},{"Key":"2 #::","Fragments":["everySecond(3))"]},{"Key":" works","Fragments":["faster","just","but"]},{"Key":"works faster","Fragments":["and"]},{"Key":"faster and","Fragments":["still"]},{"Key":"still satisfies","Fragments":["tests."]},{"Key":"That's true","Fragments":["but"]},{"Key":"true but","Fragments":["I"]},{"Key":"didn't consider","Fragments":["it"]},{"Key":"consider it","Fragments":["since","only"]},{"Key":"it since","Fragments":["neither"]},{"Key":"since neither","Fragments":["the"]},{"Key":"neither the","Fragments":["tests"]},{"Key":"tests nor","Fragments":["the"]},{"Key":"nor the","Fragments":["README"]},{"Key":"README file","Fragments":["specified"]},{"Key":"file specified","Fragments":["how"]},{"Key":"specified how","Fragments":["to"]},{"Key":"handle name","Fragments":["case"]},{"Key":"name case","Fragments":["sensitivity."]},{"Key":" Doesn't","Fragments":["`Random.alphanumeric`","pass","```getLetter```"]},{"Key":"Doesn't `Random.alphanumeric`","Fragments":["return"]},{"Key":"`Random.alphanumeric` return","Fragments":["upper-"]},{"Key":"return upper-","Fragments":["and"]},{"Key":"upper- and","Fragments":["lower-case"]},{"Key":"and lower-case","Fragments":["letters"]},{"Key":"lower-case letters","Fragments":["along"]},{"Key":"letters along","Fragments":["with"]},{"Key":"along with","Fragments":["numbers,"]},{"Key":"with numbers,","Fragments":["meaning"]},{"Key":"numbers, meaning","Fragments":["that"]},{"Key":"meaning that","Fragments":["the"]},{"Key":"two characters","Fragments":["in","in"]},{"Key":"characters in","Fragments":["a","each"]},{"Key":"a robot's","Fragments":["name"]},{"Key":"robot's name","Fragments":["would"]},{"Key":"name would","Fragments":["be"]},{"Key":"the set","Fragments":["`[a-zA-Z0-9]`?","of"]},{"Key":"that, looks","Fragments":["great!"]},{"Key":"use zip","Fragments":["on","(and/or,"]},{"Key":"zip on","Fragments":["s1"]},{"Key":"on s1","Fragments":["and"]},{"Key":"and s2","Fragments":["and","of"]},{"Key":"s2 and","Fragments":["have"]},{"Key":"it return","Fragments":["the"]},{"Key":"strings with","Fragments":["any"]},{"Key":"any additional","Fragments":["elements"]},{"Key":"additional elements","Fragments":["in"]},{"Key":"longer string","Fragments":["ignored."]},{"Key":"string ignored.","Fragments":["You"]},{"Key":"ignored. You","Fragments":["can"]},{"Key":"use foldLeft","Fragments":["or","instead"]},{"Key":"foldLeft or","Fragments":["count","foldRight"]},{"Key":"or count","Fragments":["on","instead."]},{"Key":"count on","Fragments":["all"]},{"Key":"on all","Fragments":["the","of"]},{"Key":"Since you're","Fragments":["mapping"]},{"Key":"you're mapping","Fragments":["`count`"]},{"Key":"mapping `count`","Fragments":["to"]},{"Key":"`count` to","Fragments":["`nucleotides`,"]},{"Key":"to `nucleotides`,","Fragments":["is"]},{"Key":"`nucleotides`, is","Fragments":["there"]},{"Key":"any possibility","Fragments":["the"]},{"Key":"possibility the","Fragments":["current"]},{"Key":"current char","Fragments":["isn't"]},{"Key":"char isn't","Fragments":["in"]},{"Key":"isn't in","Fragments":["`nucleotides`?"]},{"Key":"in `nucleotides`?","Fragments":[":-)"]},{"Key":"is better,","Fragments":["and"]},{"Key":"better, and","Fragments":["there"]},{"Key":"is some","Fragments":["cheesyness","duplication","danger","null","leeway","room","high-level"]},{"Key":"some cheesyness","Fragments":["going"]},{"Key":"cheesyness going","Fragments":["on"]},{"Key":"on in","Fragments":["reset"]},{"Key":"in reset","Fragments":["to"]},{"Key":"reset to","Fragments":["make","be"]},{"Key":"the None","Fragments":["case","tip,"]},{"Key":"None case","Fragments":["return"]},{"Key":"case return","Fragments":["a"]},{"Key":" Robot","Fragments":["globalton"]},{"Key":"Robot globalton","Fragments":["is"]},{"Key":"globalton is","Fragments":["still"]},{"Key":"bit cheesy,","Fragments":["but"]},{"Key":"cheesy, but","Fragments":["meets"]},{"Key":"but meets","Fragments":["the"]},{"Key":"meets the","Fragments":["requirements"]},{"Key":"requirements of","Fragments":["the"]},{"Key":"I'll keep","Fragments":["trying.","it"]},{"Key":"Interesting. I'm","Fragments":["new"]},{"Key":"Scala and","Fragments":["often","to","I"]},{"Key":"and often","Fragments":["feel"]},{"Key":"often feel","Fragments":["like"]},{"Key":"like I'm","Fragments":["writing"]},{"Key":"I'm writing","Fragments":["Java"]},{"Key":"writing Java","Fragments":["in"]},{"Key":"Java in","Fragments":["Scala.","Scala!"]},{"Key":"Scala. I","Fragments":["will","want"]},{"Key":"this zip","Fragments":["function,"]},{"Key":"zip function,","Fragments":["thanks"]},{"Key":"function, thanks","Fragments":["for"]},{"Key":" EDIT:","Fragments":["Found","I"]},{"Key":"EDIT: Found","Fragments":["and"]},{"Key":"Found and","Fragments":["fixed"]},{"Key":"and fixed","Fragments":["it."]},{"Key":"fixed it.","Fragments":["Awesome!"]},{"Key":"very \"Scaly\",","Fragments":["because"]},{"Key":"\"Scaly\", because","Fragments":["you've"]},{"Key":"because you've","Fragments":["introduced"]},{"Key":"you've introduced","Fragments":["var."]},{"Key":"can it","Fragments":["waaay"]},{"Key":"it waaay","Fragments":["more"]},{"Key":"waaay more","Fragments":["concise"]},{"Key":"concise by","Fragments":["using","maybe"]},{"Key":"using zip","Fragments":["function.","and"]},{"Key":" toString","Fragments":["method"]},{"Key":"toString method","Fragments":["could"]},{"Key":"method could","Fragments":["use","benefit","be"]},{"Key":"this magical","Fragments":["("]},{"Key":"magical (","Fragments":["s\"$areaCode\""]},{"Key":"( s\"$areaCode\"","Fragments":[")"]},{"Key":"s\"$areaCode\" )","Fragments":["stuff"]},{"Key":") stuff","Fragments":[":)"]},{"Key":"val correctNumber","Fragments":["would"]},{"Key":"correctNumber would","Fragments":["look"]},{"Key":"would look","Fragments":["more","much","more"]},{"Key":"more scala","Fragments":["like","specific"]},{"Key":"scala like","Fragments":["if"]},{"Key":"like if","Fragments":["you","you"]},{"Key":"looks ok","Fragments":["(but"]},{"Key":"ok (but","Fragments":["some"]},{"Key":"(but some","Fragments":["newlines"]},{"Key":"some newlines","Fragments":["inside"]},{"Key":"newlines inside","Fragments":["the"]},{"Key":"the correctNumber","Fragments":["definition"]},{"Key":"correctNumber definition","Fragments":["could"]},{"Key":"definition could","Fragments":["do"]},{"Key":"do no","Fragments":["harm"]},{"Key":"no harm","Fragments":[";-)"]},{"Key":"could declare","Fragments":["the","them"]},{"Key":"declare the","Fragments":["val's","function's","constructor"]},{"Key":"the val's","Fragments":["as"]},{"Key":"val's as","Fragments":["lazy"]},{"Key":"constructor does","Fragments":["not"]},{"Key":"not do","Fragments":["all","all","it","all","it","any","that"]},{"Key":"use ```filter```","Fragments":["here","instead","w/"]},{"Key":"```filter``` here","Fragments":["instead"]},{"Key":"of ```dropWhile```?","Fragments":["(at"]},{"Key":"```dropWhile```? (at","Fragments":["least"]},{"Key":"me this","Fragments":["would","much"]},{"Key":"of ```.length","Fragments":["=="]},{"Key":"```.length ==","Fragments":["0```"]},{"Key":"== 0```","Fragments":["use","in","(or"]},{"Key":"0``` use","Fragments":["```isEmpty```."]},{"Key":"use ```isEmpty```.","Fragments":["And"]},{"Key":"```isEmpty```. And","Fragments":["for"]},{"Key":"for ```.size","Fragments":["\u003e"]},{"Key":"```.size \u003e","Fragments":["0```"]},{"Key":"\u003e 0```","Fragments":["there","to"]},{"Key":"0``` there","Fragments":["is"]},{"Key":"is ```.nonEmpty```.","Fragments":["(btw,"]},{"Key":"```.nonEmpty```. (btw,","Fragments":["you"]},{"Key":"the trimming","Fragments":["outside"]},{"Key":"trimming outside","Fragments":["the"]},{"Key":"In general:","Fragments":["Try"]},{"Key":"general: Try","Fragments":["to"]},{"Key":"find and","Fragments":["use"]},{"Key":"collection function","Fragments":["that","`find`","\"count\""]},{"Key":"that expresses","Fragments":["your"]},{"Key":"expresses your","Fragments":["intent"]},{"Key":"your intent","Fragments":["in"]},{"Key":"intent in","Fragments":["the","the"]},{"Key":"simplest way.","Fragments":[";-)"]},{"Key":" Apparently","Fragments":["the"]},{"Key":"Apparently the","Fragments":["exceptionality"]},{"Key":"the exceptionality","Fragments":["occurs"]},{"Key":"exceptionality occurs","Fragments":["every"]},{"Key":"occurs every","Fragments":["400"]},{"Key":"every 400","Fragments":["years!"]},{"Key":"scala maps","Fragments":["have"]},{"Key":"maps have","Fragments":["a"]},{"Key":"`withDefaultValue` which","Fragments":["can"]},{"Key":"be set","Fragments":["to"]},{"Key":"set to","Fragments":["0","make"]},{"Key":"I figured","Fragments":["I","if","out","out","out"]},{"Key":"figured I","Fragments":["would"]},{"Key":"would start","Fragments":["with","generating"]},{"Key":"start with","Fragments":["an","a","changing"]},{"Key":"an already","Fragments":["initialized"]},{"Key":"already initialized","Fragments":["map"]},{"Key":"initialized map","Fragments":["of"]},{"Key":"of all","Fragments":["valid","possible","possible.","the","the"]},{"Key":"all valid","Fragments":["nucleotides."]},{"Key":"valid nucleotides.","Fragments":["That"]},{"Key":"nucleotides. That","Fragments":["way","handled"]},{"Key":"way I","Fragments":["have","can","did","had"]},{"Key":"an easy","Fragments":["way","way","way"]},{"Key":"easy way","Fragments":["to","to","to","to","out","out,"]},{"Key":"add or","Fragments":["to"]},{"Key":"to throw","Fragments":["an"]},{"Key":"throw an","Fragments":["exception"]},{"Key":"an exception","Fragments":["if","do","in","yourself","will"]},{"Key":"exception if","Fragments":["not","condition","the","not."]},{"Key":"if not","Fragments":["found."]},{"Key":"Would have","Fragments":["wanted"]},{"Key":"have wanted","Fragments":["to"]},{"Key":"same logic","Fragments":["in"]},{"Key":"`count` method","Fragments":["but"]},{"Key":"method but","Fragments":["for"]},{"Key":"reason the","Fragments":["Test"]},{"Key":"the Test","Fragments":["wanted"]},{"Key":"Test wanted","Fragments":["0"]},{"Key":"wanted 0","Fragments":["returned"]},{"Key":"0 returned","Fragments":["for"]},{"Key":"returned for","Fragments":["`'U'`."]},{"Key":"for `'U'`.","Fragments":["So"]},{"Key":"`'U'`. So","Fragments":["that"]},{"Key":"So that","Fragments":["got"]},{"Key":"that got","Fragments":["inserted"]},{"Key":"got inserted","Fragments":["as"]},{"Key":"inserted as","Fragments":["a"]},{"Key":"get that","Fragments":["it"]},{"Key":"a valid","Fragments":["nucleotide,","one","digit","digit.","anagram"]},{"Key":"valid nucleotide,","Fragments":["but"]},{"Key":"nucleotide, but","Fragments":["imo","perhaps"]},{"Key":"but imo","Fragments":["it's"]},{"Key":"imo it's","Fragments":["an"]},{"Key":"it's an","Fragments":["invalid","externally"]},{"Key":"an invalid","Fragments":["argument","input","key"]},{"Key":"invalid argument","Fragments":["in"]},{"Key":"argument in","Fragments":["the","there!"]},{"Key":"a DNA","Fragments":["strand."]},{"Key":"In ``toLetterMap``,","Fragments":["``toList``"]},{"Key":"``toLetterMap``, ``toList``","Fragments":["is"]},{"Key":"``toList`` is","Fragments":["not"]},{"Key":"not necessary.","Fragments":["To","Use"]},{"Key":"necessary. To","Fragments":["me"]},{"Key":"To me","Fragments":["calling"]},{"Key":"me calling","Fragments":["``groupBy(identity)``"]},{"Key":"calling ``groupBy(identity)``","Fragments":["looks"]},{"Key":"``groupBy(identity)`` looks","Fragments":["a"]},{"Key":"little cleaner","Fragments":["than"]},{"Key":"cleaner than","Fragments":["``groupBy(ch","mine.","what","`.toString.toInt`."]},{"Key":"than ``groupBy(ch","Fragments":["=\u003e"]},{"Key":"``groupBy(ch =\u003e","Fragments":["ch)``."]},{"Key":"=\u003e ch)``.","Fragments":["``charMap.map``"]},{"Key":"ch)``. ``charMap.map``","Fragments":["call"]},{"Key":"``charMap.map`` call","Fragments":["can"]},{"Key":"call can","Fragments":["be"]},{"Key":"In ``addDefaults``","Fragments":["it"]},{"Key":"``addDefaults`` it","Fragments":["might"]},{"Key":"it might","Fragments":["be","not"]},{"Key":"Map with","Fragments":["default","an"]},{"Key":"with default","Fragments":["values","values,"]},{"Key":"default values","Fragments":["of"]},{"Key":"of 0.","Fragments":["Following"]},{"Key":"0. Following","Fragments":["that,"]},{"Key":"Following that,","Fragments":["it"]},{"Key":"that, it","Fragments":["is"]},{"Key":"to union","Fragments":["the"]},{"Key":"union the","Fragments":["default"]},{"Key":"Map from","Fragments":["``toLetterMap``."]},{"Key":"use Java8","Fragments":["LocalDate,"]},{"Key":"Java8 LocalDate,","Fragments":["but"]},{"Key":"LocalDate, but","Fragments":["was"]},{"Key":"but was","Fragments":["getting","coded"]},{"Key":"was getting","Fragments":["test","it"]},{"Key":"getting test","Fragments":["failures"]},{"Key":"test failures","Fragments":["because"]},{"Key":"failures because","Fragments":["of"]},{"Key":"using time","Fragments":["zones."]},{"Key":"time zones.","Fragments":["Code"]},{"Key":"zones. Code","Fragments":["would"]},{"Key":"Code would","Fragments":["look"]},{"Key":"look much","Fragments":["nicer","better."]},{"Key":"much nicer","Fragments":["if","than"]},{"Key":"nicer if","Fragments":["GregorianCalendar"]},{"Key":"if GregorianCalendar","Fragments":["was"]},{"Key":"GregorianCalendar was","Fragments":["immutable!"]},{"Key":" Trailing","Fragments":["dots"]},{"Key":"Trailing dots","Fragments":["for"]},{"Key":"dots for","Fragments":["method"]},{"Key":"method chaining","Fragments":["look"]},{"Key":"chaining look","Fragments":["a"]},{"Key":"look a","Fragments":["bit","bit","bit","lot"]},{"Key":"bit unfamiliar","Fragments":["to"]},{"Key":"unfamiliar to","Fragments":["me,"]},{"Key":"to me,","Fragments":["but","though.","an","but","IMO"]},{"Key":"me, but","Fragments":["I","maybe"]},{"Key":"strong opinion","Fragments":["about"]},{"Key":"opinion about","Fragments":["it."]},{"Key":"The hey-method","Fragments":["is"]},{"Key":"hey-method is","Fragments":["perfection."]},{"Key":"The regex'","Fragments":["doesn't"]},{"Key":"regex' doesn't","Fragments":["score"]},{"Key":"doesn't score","Fragments":["as"]},{"Key":"score as","Fragments":["well"]},{"Key":"well on","Fragments":["readability"]},{"Key":"on readability","Fragments":[":-)"]},{"Key":"I'm attempting","Fragments":["to"]},{"Key":"attempting to","Fragments":["explore","be"]},{"Key":"to explore","Fragments":["Scala's","Scalas","expressiveness","different","other"]},{"Key":"explore Scala's","Fragments":["pattern"]},{"Key":"are certainly","Fragments":["some"]},{"Key":"certainly some","Fragments":["edge"]},{"Key":"some edge","Fragments":["cases"]},{"Key":"edge cases","Fragments":["that"]},{"Key":"cases that","Fragments":["this"]},{"Key":"code won't","Fragments":["handle,"]},{"Key":"won't handle,","Fragments":["but"]},{"Key":"handle, but","Fragments":["I'm"]},{"Key":"not focusing","Fragments":["my"]},{"Key":"focusing my","Fragments":["attention"]},{"Key":"my attention","Fragments":["on"]},{"Key":"attention on","Fragments":["regular"]},{"Key":"on regular","Fragments":["expression"]},{"Key":"as with","Fragments":["@karley"]},{"Key":"with @karley","Fragments":["tips"]},{"Key":"@karley tips","Fragments":["and"]},{"Key":"tips and","Fragments":["challange","hints"]},{"Key":"and challange","Fragments":["now"]},{"Key":"challange now","Fragments":["using"]},{"Key":"now using","Fragments":["unfoldRight,"]},{"Key":"using unfoldRight,","Fragments":["implemented"]},{"Key":"unfoldRight, implemented","Fragments":["based"]},{"Key":"implemented based","Fragments":["on"]},{"Key":"The one","Fragments":["thing"]},{"Key":"one thing","Fragments":["that","I"]},{"Key":"that took","Fragments":["me"]},{"Key":"short while","Fragments":["(I"]},{"Key":"while (I","Fragments":["don't"]},{"Key":"(I don't","Fragments":["know","know"]},{"Key":"know why)","Fragments":["is"]},{"Key":"why) is","Fragments":["the"]},{"Key":"the required","Fragments":["inversion","vararg"]},{"Key":"required inversion","Fragments":["of"]},{"Key":"inversion of","Fragments":["elements"]},{"Key":"in tuple","Fragments":["in"]},{"Key":"tuple in","Fragments":["getNextRomanDigit","your","ln","named"]},{"Key":"like some","Fragments":["feedback","semi-DSL"]},{"Key":"some feedback","Fragments":["if","as"]},{"Key":"feedback if","Fragments":["lazy"]},{"Key":"if lazy","Fragments":["vals"]},{"Key":"lazy vals","Fragments":["are","if"]},{"Key":"vals are","Fragments":["appropriate"]},{"Key":"are appropriate","Fragments":["here."]},{"Key":"appropriate here.","Fragments":["I"]},{"Key":"know exactly","Fragments":["what"]},{"Key":"what runtime","Fragments":["cost"]},{"Key":"runtime cost","Fragments":["they","that"]},{"Key":"cost they","Fragments":["carry"]},{"Key":"they carry","Fragments":["(in"]},{"Key":"carry (in","Fragments":["my"]},{"Key":"(in my","Fragments":["tests","opinion)"]},{"Key":"my tests","Fragments":["everything"]},{"Key":"tests everything","Fragments":["runs"]},{"Key":"everything runs","Fragments":["*faster*"]},{"Key":"runs *faster*","Fragments":["if"]},{"Key":"*faster* if","Fragments":["they're"]},{"Key":"if they're","Fragments":["lazy)."]},{"Key":"they're lazy).","Fragments":["I"]},{"Key":"lazy). I","Fragments":["just"]},{"Key":"just know","Fragments":["they"]},{"Key":"know they","Fragments":["delay"]},{"Key":"they delay","Fragments":["computation."]},{"Key":"Yeah, that","Fragments":["style"]},{"Key":"that style","Fragments":["issue","I"]},{"Key":"style issue","Fragments":["is"]},{"Key":"issue is","Fragments":["definitely"]},{"Key":"definitely a","Fragments":["debatable","good","great","matter","case","nitpick,"]},{"Key":"a debatable","Fragments":["one,"]},{"Key":"debatable one,","Fragments":["so"]},{"Key":"one, so","Fragments":["you"]},{"Key":"really can","Fragments":["go"]},{"Key":"can go","Fragments":["either","through","even","by"]},{"Key":"go either","Fragments":["way.","way"]},{"Key":"either way.","Fragments":["There's"]},{"Key":"way. There's","Fragments":["definitely"]},{"Key":"There's definitely","Fragments":["not"]},{"Key":"definitely not","Fragments":["a","misleading.","the"]},{"Key":"I'm in","Fragments":["the"]},{"Key":"the 'avoid","Fragments":["infix"]},{"Key":"'avoid infix","Fragments":["notation'"]},{"Key":"infix notation'","Fragments":["camp,"]},{"Key":"notation' camp,","Fragments":["mostly"]},{"Key":"camp, mostly","Fragments":["because"]},{"Key":"mostly because","Fragments":["if"]},{"Key":"because if","Fragments":["you","you","an"]},{"Key":"you needed","Fragments":["to"]},{"Key":"modify your","Fragments":["code"]},{"Key":"code (say","Fragments":["to"]},{"Key":"(say to","Fragments":["add"]},{"Key":"add an","Fragments":["extra","```else```"]},{"Key":"extra function","Fragments":["into"]},{"Key":"the chain),","Fragments":["figuring"]},{"Key":"chain), figuring","Fragments":["out"]},{"Key":"figuring out","Fragments":["exactly"]},{"Key":"out exactly","Fragments":["how","what"]},{"Key":"exactly how","Fragments":["to","to"]},{"Key":"with infix","Fragments":["notation","notation."]},{"Key":"notation becomes","Fragments":["a"]},{"Key":"little tricky,","Fragments":["and"]},{"Key":"tricky, and","Fragments":["a"]},{"Key":"a reader","Fragments":["may","more"]},{"Key":"reader may","Fragments":["have","need"]},{"Key":"a hard","Fragments":["time","rule","life"]},{"Key":"time parsing","Fragments":["it"]},{"Key":"parsing it","Fragments":["out"]},{"Key":"out (especially","Fragments":["if"]},{"Key":"(especially if","Fragments":["they","that"]},{"Key":"they don't","Fragments":["happen","for"]},{"Key":"don't happen","Fragments":["to"]},{"Key":"happen to","Fragments":["know","be","generate","be"]},{"Key":"know the","Fragments":["type","concurrency","changes"]},{"Key":"type signature","Fragments":["of","takes"]},{"Key":"the function).","Fragments":["So"]},{"Key":"function). So","Fragments":["probably"]},{"Key":"So probably","Fragments":["at"]},{"Key":"probably at","Fragments":["that"]},{"Key":"at that","Fragments":["point","point.","size.","later"]},{"Key":"that point","Fragments":["you'd"]},{"Key":"point you'd","Fragments":["go"]},{"Key":"you'd go","Fragments":["ahead"]},{"Key":"go ahead","Fragments":["and"]},{"Key":"and rewrite","Fragments":["the"]},{"Key":"rewrite the","Fragments":["line"]},{"Key":"the line","Fragments":["entirely.","before.","-"]},{"Key":" Or,","Fragments":["you","you"]},{"Key":"Or, you","Fragments":["could","could"]},{"Key":"it without","Fragments":["infix","calling","considering","that?"]},{"Key":"without infix","Fragments":["notation"]},{"Key":"notation in","Fragments":["the","mapValues"]},{"Key":"first place,","Fragments":["and"]},{"Key":"place, and","Fragments":["you'd"]},{"Key":"and you'd","Fragments":["have"]},{"Key":"you'd have","Fragments":["easy"]},{"Key":"have easy","Fragments":["to"]},{"Key":"and modify","Fragments":["code!","it"]},{"Key":" Still,","Fragments":["there"]},{"Key":"Still, there","Fragments":["are"]},{"Key":"are times","Fragments":["when"]},{"Key":"times when","Fragments":["the"]},{"Key":"the infix","Fragments":["notation"]},{"Key":"notation definitely","Fragments":["adds"]},{"Key":"definitely adds","Fragments":["some"]},{"Key":"adds some","Fragments":["elegance","more"]},{"Key":"some elegance","Fragments":["(and"]},{"Key":"elegance (and","Fragments":["just"]},{"Key":"(and just","Fragments":["from"]},{"Key":"just from","Fragments":["convention,"]},{"Key":"from convention,","Fragments":["everyone"]},{"Key":"convention, everyone","Fragments":["expects"]},{"Key":"everyone expects","Fragments":["operators"]},{"Key":"expects operators","Fragments":["to"]},{"Key":"used infix-style),","Fragments":["so"]},{"Key":"infix-style), so","Fragments":["I"]},{"Key":"can't say","Fragments":["unequivocally"]},{"Key":"say unequivocally","Fragments":["that"]},{"Key":"unequivocally that","Fragments":["it's"]},{"Key":"a bad","Fragments":["thing.","conscience).","practice.","solution","idea."]},{"Key":"little confused,","Fragments":["because"]},{"Key":"confused, because","Fragments":["in"]},{"Key":"because in","Fragments":["the","this"]},{"Key":"the [Scala","Fragments":["Style"]},{"Key":"[Scala Style","Fragments":["Guide](http://docs.scala-lang.org/style/method-invocation.html#higher-order-functions)"]},{"Key":"Style Guide](http://docs.scala-lang.org/style/method-invocation.html#higher-order-functions)","Fragments":["it"]},{"Key":"Guide](http://docs.scala-lang.org/style/method-invocation.html#higher-order-functions) it","Fragments":["says"]},{"Key":"it says","Fragments":["that"]},{"Key":"says that","Fragments":["methods","Bob"]},{"Key":"that methods","Fragments":["taking"]},{"Key":"methods taking","Fragments":["functions"]},{"Key":"taking functions","Fragments":["as"]},{"Key":"functions as","Fragments":["parameters","private.","I"]},{"Key":"as parameters","Fragments":["should"]},{"Key":"parameters should","Fragments":["be"]},{"Key":"be invoked","Fragments":["with"]},{"Key":"invoked with","Fragments":["infix"]},{"Key":"just perused","Fragments":["through"]},{"Key":"perused through","Fragments":["some"]},{"Key":"through some","Fragments":["other"]},{"Key":"other guides","Fragments":["and"]},{"Key":"guides and","Fragments":["I"]},{"Key":"do see","Fragments":["that"]},{"Key":"are pretty","Fragments":["adamant","important"]},{"Key":"pretty adamant","Fragments":["about"]},{"Key":"adamant about","Fragments":["**NOT**"]},{"Key":"about **NOT**","Fragments":["using"]},{"Key":"**NOT** using","Fragments":["infix"]},{"Key":"using infix","Fragments":["notation"]},{"Key":"notation this","Fragments":["way!"]},{"Key":"style, it's","Fragments":["best"]},{"Key":"it's best","Fragments":["to"]},{"Key":"any methods","Fragments":["your"]},{"Key":"methods your","Fragments":["object"]},{"Key":"your object","Fragments":["exposes"]},{"Key":"object exposes","Fragments":["to"]},{"Key":"exposes to","Fragments":["the"]},{"Key":"end user,","Fragments":["so"]},{"Key":"user, so","Fragments":["line"]},{"Key":"so line","Fragments":["2"]},{"Key":"2 would","Fragments":["be"]},{"Key":"def compute(d1:","Fragments":["String,"]},{"Key":"compute(d1: String,","Fragments":["d2:"]},{"Key":"String, d2:","Fragments":["String):"]},{"Key":"d2: String):","Fragments":["Int"]},{"Key":"String): Int","Fragments":["=","="]},{"Key":"Int =","Fragments":["{","..."]},{"Key":"This way,","Fragments":["someone"]},{"Key":"way, someone","Fragments":["using"]},{"Key":"someone using","Fragments":["your"]},{"Key":"using your","Fragments":["module"]},{"Key":"your module","Fragments":["can"]},{"Key":"module can","Fragments":["quickly"]},{"Key":"can quickly","Fragments":["understand"]},{"Key":"quickly understand","Fragments":["what"]},{"Key":"function returns","Fragments":["without","a"]},{"Key":"returns without","Fragments":["having"]},{"Key":"read through","Fragments":["and","all"]},{"Key":"through and","Fragments":["understand"]},{"Key":"understand it","Fragments":["fully.","shuffling"]},{"Key":"A second","Fragments":["style"]},{"Key":"second style","Fragments":["issue:"]},{"Key":"style issue:","Fragments":["I'd","the"]},{"Key":"issue: I'd","Fragments":["suggest"]},{"Key":"suggest considering","Fragments":["avoiding"]},{"Key":"considering avoiding","Fragments":["infix"]},{"Key":"avoiding infix","Fragments":["notation","notation,"]},{"Key":"non-operator functions.","Fragments":["`d1"]},{"Key":"functions. `d1","Fragments":["zip"]},{"Key":"`d1 zip","Fragments":["d2"]},{"Key":"zip d2","Fragments":["count`"]},{"Key":"d2 count`","Fragments":["reads"]},{"Key":"count` reads","Fragments":["much"]},{"Key":"reads much","Fragments":["more"]},{"Key":"more easily,","Fragments":["and"]},{"Key":"easily, and","Fragments":["is"]},{"Key":"modify when","Fragments":["written"]},{"Key":"when written","Fragments":["as"]},{"Key":"as `d1.zip(d2).count`","Fragments":["This"]},{"Key":"`d1.zip(d2).count` This","Fragments":["isn't"]},{"Key":"This isn't","Fragments":["a","meant"]},{"Key":"hard rule","Fragments":["of"]},{"Key":"rule of","Fragments":["course,","thumb:","thumb:"]},{"Key":"of course,","Fragments":["but","summing","if"]},{"Key":"course, but","Fragments":["if"]},{"Key":"look around","Fragments":["online"]},{"Key":"around online","Fragments":["for"]},{"Key":"online for","Fragments":["Scala"]},{"Key":"guides you'll","Fragments":["find"]},{"Key":"you'll find","Fragments":["many","it","that","that"]},{"Key":"find many","Fragments":["recommend"]},{"Key":"many recommend","Fragments":["avoiding"]},{"Key":"recommend avoiding","Fragments":["infix"]},{"Key":"infix notation,","Fragments":["and"]},{"Key":"notation, and","Fragments":["*none*"]},{"Key":"and *none*","Fragments":["of"]},{"Key":"*none* of","Fragments":["them"]},{"Key":"them recommend","Fragments":["using"]},{"Key":"recommend using","Fragments":["it.","pattern","pattern"]},{"Key":"solved as","Fragments":["you"]},{"Key":"you did,","Fragments":["I","but"]},{"Key":"did, I","Fragments":["think"]},{"Key":"was not","Fragments":["the","happy","satisfied","so","able","familiar","necessary"]},{"Key":"the exercise.","Fragments":["The","Well"]},{"Key":"exercise. The","Fragments":["idea"]},{"Key":"out which","Fragments":["conditions","is"]},{"Key":"which conditions","Fragments":["each"]},{"Key":"conditions each","Fragments":["answer"]},{"Key":"each answer","Fragments":["fulfils."]},{"Key":"answer fulfils.","Fragments":["At"]},{"Key":"fulfils. At","Fragments":["the"]},{"Key":"the day,","Fragments":["you"]},{"Key":"day, you","Fragments":["only"]},{"Key":"have 4","Fragments":["different"]},{"Key":"4 different","Fragments":["answers,"]},{"Key":"different answers,","Fragments":["so"]},{"Key":"answers, so","Fragments":["you'll"]},{"Key":"those many","Fragments":["conditions"]},{"Key":"many conditions","Fragments":["to"]},{"Key":"conditions to","Fragments":["fulfil.","a","the"]},{"Key":"For instance,","Fragments":["all"]},{"Key":"instance, all","Fragments":["the"]},{"Key":"the \"Sure.\"","Fragments":["answers"]},{"Key":"\"Sure.\" answers","Fragments":["come"]},{"Key":"answers come","Fragments":["from"]},{"Key":"come from","Fragments":["a","having","a"]},{"Key":"a shout","Fragments":["that"]},{"Key":"shout that","Fragments":["ends"]},{"Key":" All","Fragments":["the","your","done"]},{"Key":"All the","Fragments":["others"]},{"Key":"the others","Fragments":["answers"]},{"Key":"others answers","Fragments":["follow"]},{"Key":"answers follow","Fragments":["similar"]},{"Key":"follow similar","Fragments":["patterns."]},{"Key":"Try with","Fragments":["case"]},{"Key":"with case","Fragments":["and","statements?"]},{"Key":"case and","Fragments":["a","'?'"]},{"Key":"a condition","Fragments":["with"]},{"Key":"condition with","Fragments":["a"]},{"Key":"simplest thing","Fragments":["that"]},{"Key":"that worked","Fragments":["here."]},{"Key":"worked here.","Fragments":["I"]},{"Key":"don't ordinarily","Fragments":["like"]},{"Key":"ordinarily like","Fragments":["switch"]},{"Key":"like switch","Fragments":["/"]},{"Key":"switch /","Fragments":["case"]},{"Key":"/ case","Fragments":["in"]},{"Key":"other languages","Fragments":["(all","your"]},{"Key":"languages (all","Fragments":["the"]},{"Key":"(all the","Fragments":["breaks!)"]},{"Key":"the breaks!)","Fragments":["but"]},{"Key":"breaks!) but","Fragments":["the"]},{"Key":"the syntax","Fragments":["in","of","```x","of"]},{"Key":"syntax in","Fragments":["Scala"]},{"Key":"Scala seems","Fragments":["passable.","to"]},{"Key":"I could've","Fragments":["grouped"]},{"Key":"could've grouped","Fragments":["them"]},{"Key":"grouped them","Fragments":["better"]},{"Key":"them better","Fragments":["around"]},{"Key":"better around","Fragments":["the"]},{"Key":"the small","Fragments":["number"]},{"Key":"small number","Fragments":["of"]},{"Key":"of responses,","Fragments":["perhaps"]},{"Key":"responses, perhaps","Fragments":["with"]},{"Key":"perhaps with","Fragments":["multi-case"]},{"Key":"with multi-case","Fragments":["statements?"]},{"Key":"multi-case statements?","Fragments":["Or"]},{"Key":"statements? Or","Fragments":["something"]},{"Key":"Or something","Fragments":["else"]},{"Key":"something else","Fragments":["more","not","(#6):","will"]},{"Key":"else more","Fragments":["Scala-y?!"]},{"Key":"the tip,","Fragments":["@hardy!"]},{"Key":"tip, @hardy!","Fragments":["New"]},{"Key":"@hardy! New","Fragments":["version"]},{"Key":"New version","Fragments":["submitted."]},{"Key":"Your reduceLeft","Fragments":["operation"]},{"Key":"reduceLeft operation","Fragments":["basically"]},{"Key":"operation basically","Fragments":["does"]},{"Key":"basically does","Fragments":["what"]},{"Key":"what flatten","Fragments":["would"]},{"Key":"flatten would","Fragments":["do."]},{"Key":"would do.","Fragments":["You"]},{"Key":"do. You","Fragments":["can"]},{"Key":"remove it","Fragments":["totally"]},{"Key":"it totally","Fragments":["if"]},{"Key":"totally if","Fragments":["you"]},{"Key":"you build","Fragments":["a"]},{"Key":"build a","Fragments":["tuple","lazy"]},{"Key":"see a","Fragments":["test","way","way","case","difference,","lot","solution"]},{"Key":"case which","Fragments":["requires","is"]},{"Key":"requires to","Fragments":["ignore"]},{"Key":"to ignore","Fragments":["different"]},{"Key":"ignore different","Fragments":["lengths."]},{"Key":"different lengths.","Fragments":["BTW"]},{"Key":"lengths. BTW","Fragments":["it"]},{"Key":"BTW it","Fragments":["can"]},{"Key":"easily done","Fragments":["by"]},{"Key":"done by","Fragments":["adding","scala.","starting"]},{"Key":"difference of","Fragments":["lengths","MAP"]},{"Key":"of lengths","Fragments":["to"]},{"Key":"lengths to","Fragments":["the"]},{"Key":"count if","Fragments":["needed."]},{"Key":"of Seq.count.","Fragments":["More"]},{"Key":"Seq.count. More","Fragments":["intention-revealing."]},{"Key":"couldn't figure","Fragments":["out","out"]},{"Key":"liner that","Fragments":["works"]},{"Key":"for strings","Fragments":["of"]},{"Key":"strings of","Fragments":["different","differing"]},{"Key":"of different","Fragments":["lengths,","languages.","characters."]},{"Key":"different lengths,","Fragments":["since"]},{"Key":"lengths, since","Fragments":["those"]},{"Key":"since those","Fragments":["values"]},{"Key":"those values","Fragments":["shouldn't"]},{"Key":"values shouldn't","Fragments":["count."]},{"Key":"rewrite it","Fragments":["with","using","using"]},{"Key":"one-liner by","Fragments":["zipping"]},{"Key":"by zipping","Fragments":["two"]},{"Key":"zipping two","Fragments":["strings"]},{"Key":"and counting","Fragments":["different"]},{"Key":"counting different","Fragments":["pairs"]},{"Key":"different pairs","Fragments":["using"]},{"Key":"pairs using","Fragments":["`.count`."]},{"Key":"It works","Fragments":["but,","and"]},{"Key":"works but,","Fragments":["I'm"]},{"Key":"but, I'm","Fragments":["wondering"]},{"Key":"write this","Fragments":["in","without","much"]},{"Key":"see other","Fragments":["people's"]},{"Key":"other people's","Fragments":["submitions"]},{"Key":"people's submitions","Fragments":["to"]},{"Key":"submitions to","Fragments":["see"]},{"Key":"can gain","Fragments":["any"]},{"Key":"gain any","Fragments":["insight.","clarity"]},{"Key":"of reducing,","Fragments":["you"]},{"Key":"reducing, you","Fragments":["could"]},{"Key":"sum function.","Fragments":["But"]},{"Key":"function. But","Fragments":["nice"]},{"Key":"But nice","Fragments":["reduction"]},{"Key":"nice reduction","Fragments":["function"]},{"Key":"reduction function","Fragments":["either"]},{"Key":"function either","Fragments":["way!"]},{"Key":"would recommend","Fragments":["that","using","renaming"]},{"Key":"recommend that","Fragments":["you"]},{"Key":"you replace","Fragments":["the"]},{"Key":"the magic","Fragments":["constant","of","of"]},{"Key":"magic constant","Fragments":["`31557600`"]},{"Key":"constant `31557600`","Fragments":["with"]},{"Key":"`31557600` with","Fragments":["a"]},{"Key":"a named","Fragments":["constant","function","function,","function,"]},{"Key":"named constant","Fragments":["to"]},{"Key":"readability w/","Fragments":["intermediate"]},{"Key":"w/ intermediate","Fragments":["results"]},{"Key":"intermediate results","Fragments":["stored","and"]},{"Key":"results stored","Fragments":["in"]},{"Key":"stored in","Fragments":["vals"]},{"Key":"in vals","Fragments":["and"]},{"Key":"of such","Fragments":["a"]},{"Key":"a long","Fragments":["one-liner?"]},{"Key":"But other","Fragments":["than"]},{"Key":"than that:","Fragments":["fine.","Nice!","good!","good.","nice."]},{"Key":"that: fine.","Fragments":[":-)"]},{"Key":"`for` comprehension","Fragments":["here","(which"]},{"Key":"comprehension here","Fragments":["might"]},{"Key":"here might","Fragments":["make"]},{"Key":"think when","Fragments":["you"]},{"Key":"have \"static\"","Fragments":["vals"]},{"Key":"\"static\" vals","Fragments":["-"]},{"Key":"vals -","Fragments":["you"]},{"Key":"may put","Fragments":["them"]},{"Key":" Argument:","Fragments":["http://programmers.stackexchange.com/questions/179390/what-are-the-advantages-of-scalas-companion-objects-vs-static-methods"]},{"Key":" Rewrote","Fragments":["this","`isContainedIn`"]},{"Key":"Rewrote this","Fragments":["without"]},{"Key":"this without","Fragments":["using","a"]},{"Key":"using ```map```,","Fragments":["because"]},{"Key":"```map```, because","Fragments":["I"]},{"Key":"didn't follow","Fragments":["the"]},{"Key":"follow the","Fragments":["directions","maxim","DRY"]},{"Key":"the directions","Fragments":["the"]},{"Key":"directions the","Fragments":["first"]},{"Key":"first time.","Fragments":["Thanks"]},{"Key":"time. Thanks","Fragments":["@diamond"]},{"Key":"Thanks @diamond","Fragments":["."]},{"Key":" Final","Fragments":["cosmetics:"]},{"Key":" define","Fragments":["also"]},{"Key":"define also","Fragments":["a"]},{"Key":" make","Fragments":["all","it","`sqr`private.","a"]},{"Key":"Then it","Fragments":["is","would","was"]},{"Key":"is next","Fragments":["to"]},{"Key":"next to","Fragments":["perfect"]},{"Key":"to perfect","Fragments":[":-)"]},{"Key":"perfect :-)","Fragments":["(if"]},{"Key":":-) (if","Fragments":["you"]},{"Key":"(if you","Fragments":["don't"]},{"Key":"another version","Fragments":["using","you","w/","using"]},{"Key":"Thanks. Looks","Fragments":["clean"]},{"Key":"Looks clean","Fragments":["with"]},{"Key":"clean with","Fragments":["require."]},{"Key":" Oo!","Fragments":["Thanks"]},{"Key":"Oo! Thanks","Fragments":["for"]},{"Key":"about `require(requirement:","Fragments":["Boolean):"]},{"Key":"`require(requirement: Boolean):","Fragments":["Unit`?"]},{"Key":"\u003e Tests","Fragments":["an"]},{"Key":"Tests an","Fragments":["expression,"]},{"Key":"an expression,","Fragments":["throwing"]},{"Key":"expression, throwing","Fragments":["an"]},{"Key":"throwing an","Fragments":["IllegalArgumentException","exception"]},{"Key":"an IllegalArgumentException","Fragments":["if"]},{"Key":"IllegalArgumentException if","Fragments":["false.","the"]},{"Key":"My mind","Fragments":["has"]},{"Key":"mind has","Fragments":["literally"]},{"Key":"has literally","Fragments":["been"]},{"Key":"literally been","Fragments":["blown."]},{"Key":"The groupBy","Fragments":["\"identity\""]},{"Key":"groupBy \"identity\"","Fragments":["is"]},{"Key":"\"identity\" is","Fragments":["a"]},{"Key":"good way","Fragments":["to","of","to","to"]},{"Key":"this problem!!","Fragments":["Nice"]},{"Key":"problem!! Nice","Fragments":["one!"]},{"Key":"Nice one!","Fragments":[":-)"]},{"Key":"you. I","Fragments":["thought","wasn't","really"]},{"Key":"had seen","Fragments":["a"]},{"Key":"method out","Fragments":["there"]},{"Key":"out there","Fragments":["for"]},{"Key":"for it.","Fragments":["I","I"]},{"Key":"I finally","Fragments":["found"]},{"Key":"finally found","Fragments":["it"]},{"Key":"documentation and","Fragments":["have"]},{"Key":"have updated","Fragments":["the"]},{"Key":"updated the","Fragments":["code.","use"]},{"Key":" Looking","Fragments":["pretty","at","good!"]},{"Key":"Looking pretty","Fragments":["good."]},{"Key":"pretty good.","Fragments":["The"]},{"Key":"good. The","Fragments":["collections","regexes"]},{"Key":"The collections","Fragments":["API"]},{"Key":"collections API","Fragments":["actually"]},{"Key":"API actually","Fragments":["provides"]},{"Key":"actually provides","Fragments":["a"]},{"Key":"method which","Fragments":["returns","drops","takes"]},{"Key":"elements satisfying","Fragments":["a"]},{"Key":"satisfying a","Fragments":["predicate,"]},{"Key":"a predicate,","Fragments":["without"]},{"Key":"predicate, without","Fragments":["having"]},{"Key":"perform `filter`","Fragments":["and"]},{"Key":"the `match`","Fragments":["keyword","statement","based","statement"]},{"Key":"`match` keyword","Fragments":["is"]},{"Key":"used incombination","Fragments":["with"]},{"Key":"incombination with","Fragments":["guard-clauses."]},{"Key":"with guard-clauses.","Fragments":["This"]},{"Key":"guard-clauses. This","Fragments":["makes"]},{"Key":"This makes","Fragments":["the"]},{"Key":"readable, especially","Fragments":["with"]},{"Key":"especially with","Fragments":["the","a"]},{"Key":"the well-chosen","Fragments":["function"]},{"Key":"well-chosen function","Fragments":["names."]},{"Key":"function names.","Fragments":["The"]},{"Key":"names. The","Fragments":["functions","primary"]},{"Key":"The functions","Fragments":["themselves","return"]},{"Key":"functions themselves","Fragments":["are"]},{"Key":"themselves are","Fragments":["short"]},{"Key":"are short","Fragments":["and"]},{"Key":"short and","Fragments":["simple.","nice.","elegant"]},{"Key":" IIRC","Fragments":["the"]},{"Key":"IIRC the","Fragments":["provided"]},{"Key":"the provided","Fragments":["unit"]},{"Key":"provided unit","Fragments":["tests"]},{"Key":"unit tests","Fragments":["expected","cared","failed."]},{"Key":"tests expected","Fragments":["the"]},{"Key":"expected the","Fragments":["list"]},{"Key":"of student","Fragments":["names"]},{"Key":"student names","Fragments":["(in"]},{"Key":"names (in","Fragments":["the"]},{"Key":"(in the","Fragments":["non-sorted","form"]},{"Key":"the non-sorted","Fragments":["cases)"]},{"Key":"non-sorted cases)","Fragments":["in"]},{"Key":"cases) in","Fragments":["the"]},{"Key":"same order","Fragments":["in"]},{"Key":"order in","Fragments":["which"]},{"Key":"which the","Fragments":["students","predicate","predicate"]},{"Key":"students were","Fragments":["added"]},{"Key":"were added","Fragments":["so"]},{"Key":"added so","Fragments":["I"]},{"Key":"to append","Fragments":["names","the","a"]},{"Key":"append names","Fragments":["to"]},{"Key":"a sequence.","Fragments":["`Queue`"]},{"Key":"sequence. `Queue`","Fragments":["provides"]},{"Key":"`Queue` provides","Fragments":["an"]},{"Key":"provides an","Fragments":["O(1)"]},{"Key":"an O(1)","Fragments":["append"]},{"Key":"O(1) append","Fragments":["operation."]},{"Key":"opinion the","Fragments":["tests"]},{"Key":"tests are","Fragments":["wrong","the","run,","passing"]},{"Key":"are wrong","Fragments":["and"]},{"Key":"wrong and","Fragments":["the"]},{"Key":"order shouldn't","Fragments":["matter"]},{"Key":"shouldn't matter","Fragments":["unless"]},{"Key":"matter unless","Fragments":["you"]},{"Key":"specifically ask","Fragments":["for"]},{"Key":"a Queue","Fragments":["here?"]},{"Key":"Queue here?","Fragments":["Maybe"]},{"Key":"here? Maybe","Fragments":["you"]},{"Key":"try using","Fragments":["just","regex'es","recursion,","PartialFunctions"]},{"Key":"using just","Fragments":["a","regular"]},{"Key":"a basic","Fragments":["Seq"]},{"Key":"basic Seq","Fragments":["instead."]},{"Key":"```filter``` instead","Fragments":["of","of"]},{"Key":"Indeed, I","Fragments":["will"]},{"Key":"will refactor","Fragments":["that."]},{"Key":"simplify a","Fragments":["little","bit"]},{"Key":"more by","Fragments":["removing","using","using","using","using"]},{"Key":"underscore like","Fragments":["so:"]},{"Key":" `","Fragments":["word.map(scoreLetter).sum`"]},{"Key":"am sorry,","Fragments":["but"]},{"Key":"sorry, but","Fragments":["you","no"]},{"Key":"cannot have","Fragments":["your"]},{"Key":"your cake","Fragments":["and"]},{"Key":"cake and","Fragments":["eat"]},{"Key":"and eat","Fragments":["it."]},{"Key":"eat it.","Fragments":[":-)"]},{"Key":"discuss the","Fragments":["trade-offs"]},{"Key":"the trade-offs","Fragments":["in","I"]},{"Key":"trade-offs in","Fragments":["the"]},{"Key":"next session","Fragments":["..."]},{"Key":" @estrella","Fragments":["-"]},{"Key":"@estrella -","Fragments":["but"]},{"Key":"but now","Fragments":["I","looking"]},{"Key":"have mutability","Fragments":["in"]},{"Key":"mutability in","Fragments":["the"]},{"Key":"the list...","Fragments":["I"]},{"Key":"list... I","Fragments":["liked"]},{"Key":"nice regex","Fragments":["for"]},{"Key":"regex for","Fragments":["the","sanitizing","the"]},{"Key":"question and","Fragments":["statement","shouting"]},{"Key":"and statement","Fragments":["regexes"]},{"Key":"statement regexes","Fragments":["to"]},{"Key":"regexes to","Fragments":["something"]},{"Key":"like @anjali","Fragments":["did"]},{"Key":"@anjali did","Fragments":["-"]},{"Key":"did -","Fragments":["val"]},{"Key":"- val","Fragments":["Question"]},{"Key":"val Question","Fragments":["=","="]},{"Key":"Question =","Fragments":["\"\"\".+\\?\"\"\".r","\".+\\?$\"r"]},{"Key":"val Silence","Fragments":["="]},{"Key":"Silence =","Fragments":["\"\"\"\\s*\"\"\".r"]},{"Key":"match approach.","Fragments":["You"]},{"Key":"approach. You","Fragments":["could"]},{"Key":"could skip","Fragments":["the","the"]},{"Key":"`match` statement","Fragments":["like","is","in"]},{"Key":"statement like","Fragments":["this:"]},{"Key":"val hey:","Fragments":["String","String"]},{"Key":"hey: String","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"String =\u003e","Fragments":["String","String","String"]},{"Key":"=\u003e String","Fragments":["=","=","="]},{"Key":" `Silence`","Fragments":["and"]},{"Key":"`Silence` and","Fragments":["`Question`"]},{"Key":"and `Question`","Fragments":["could"]},{"Key":"`Question` could","Fragments":["be"]},{"Key":"implemented differently","Fragments":["(maybe"]},{"Key":"differently (maybe","Fragments":["easier"]},{"Key":"(maybe easier","Fragments":["to"]},{"Key":"figure out).","Fragments":["If"]},{"Key":"out). If","Fragments":["you","pressed,"]},{"Key":"would keep","Fragments":["it"]},{"Key":"keep it","Fragments":["consistent","simple.","simple:","in","near"]},{"Key":"it consistent","Fragments":["(pattern"]},{"Key":"consistent (pattern","Fragments":["matching)"]},{"Key":"(pattern matching)","Fragments":["an"]},{"Key":"matching) an","Fragments":["approach"]},{"Key":"an approach","Fragments":["might","similar","I"]},{"Key":"approach might","Fragments":["be"]},{"Key":"be like","Fragments":["this:"]},{"Key":"object Question","Fragments":["{","{"]},{"Key":"def unapply(msg:","Fragments":["String)","String)"]},{"Key":"unapply(msg: String)","Fragments":["=","="]},{"Key":"= Option(msg)","Fragments":["filter","filter"]},{"Key":"Option(msg) filter","Fragments":["(_","(_.trim.isEmpty)"]},{"Key":"filter (_","Fragments":["endsWith"]},{"Key":"(_ endsWith","Fragments":["\"?\")"]},{"Key":"not like","Fragments":["`...","the"]},{"Key":"like `...","Fragments":["=="]},{"Key":"`... ==","Fragments":["true`,"]},{"Key":"== true`,","Fragments":["you"]},{"Key":"true`, you","Fragments":["can"]},{"Key":"just leave","Fragments":["out","your"]},{"Key":"leave out","Fragments":["the"]},{"Key":"the `==","Fragments":["true`."]},{"Key":"the `NotLower`","Fragments":["case"]},{"Key":"`NotLower` case","Fragments":["reaching"]},{"Key":"case reaching","Fragments":["out"]},{"Key":"reaching out","Fragments":["to"]},{"Key":"the `msg`,","Fragments":["if"]},{"Key":"`msg`, if","Fragments":["anything,"]},{"Key":"if anything,","Fragments":["it"]},{"Key":"anything, it","Fragments":["should"]},{"Key":"When you","Fragments":["are"]},{"Key":"a matched","Fragments":["variable,"]},{"Key":"matched variable,","Fragments":["you"]},{"Key":"variable, you","Fragments":["can"]},{"Key":"an underscore:","Fragments":["`Question(_)`"]},{"Key":"think \"==\"","Fragments":["reads"]},{"Key":"\"==\" reads","Fragments":["better"]},{"Key":"than \"equals\"","Fragments":["?"]},{"Key":"This problem","Fragments":["essentially"]},{"Key":"problem essentially","Fragments":["boils"]},{"Key":"essentially boils","Fragments":["down"]},{"Key":"boils down","Fragments":["to","to"]},{"Key":"to 3","Fragments":["alternatives"]},{"Key":"3 alternatives","Fragments":["and"]},{"Key":"alternatives and","Fragments":["a"]},{"Key":"a default","Fragments":["case","value!"]},{"Key":"case based","Fragments":["on"]},{"Key":"the specification","Fragments":["and","wanted"]},{"Key":"specification and","Fragments":["the"]},{"Key":"the effective","Fragments":["specification"]},{"Key":"effective specification","Fragments":["from"]},{"Key":"specification from","Fragments":["the"]},{"Key":"tests. So","Fragments":["I"]},{"Key":"could basically","Fragments":["ignore"]},{"Key":"basically ignore","Fragments":["the"]},{"Key":"ignore the","Fragments":["cases","difference"]},{"Key":"cases regarding","Fragments":["acronyms"]},{"Key":"regarding acronyms","Fragments":["and"]},{"Key":"acronyms and","Fragments":["numbers.","probably"]},{"Key":"strong candidate","Fragments":["for"]},{"Key":"candidate for","Fragments":["case"]},{"Key":"for case","Fragments":["matching"]},{"Key":"case matching","Fragments":["too","is","system,"]},{"Key":"Why are","Fragments":[".iterator","you"]},{"Key":"are .iterator","Fragments":["and"]},{"Key":".iterator and","Fragments":[".toSeq"]},{"Key":"and .toSeq","Fragments":["needed"]},{"Key":".toSeq needed","Fragments":["though?"]},{"Key":"you kidding?","Fragments":[":-)"]},{"Key":"kidding? :-)","Fragments":["To"]},{"Key":"To quote","Fragments":["the"]},{"Key":" ```Please","Fragments":["make"]},{"Key":"```Please make","Fragments":["your"]},{"Key":"solution as","Fragments":["general","the"]},{"Key":"as general","Fragments":["as","as"]},{"Key":"general as","Fragments":["possible.","possible:"]},{"Key":"possible. Good","Fragments":["code"]},{"Key":"Good code","Fragments":["doesn't"]},{"Key":"doesn't just","Fragments":["pass","work"]},{"Key":"just pass","Fragments":["the","the","the","```(foldHelper"]},{"Key":"test suite,","Fragments":["it","the","it"]},{"Key":"suite, it","Fragments":["works","seems"]},{"Key":"it works","Fragments":["with","for","..."]},{"Key":"works with","Fragments":["any"]},{"Key":"input that","Fragments":["fits"]},{"Key":"that fits","Fragments":["the"]},{"Key":"fits the","Fragments":["specification.```"]},{"Key":"find general","Fragments":["conditions"]},{"Key":"general conditions","Fragments":["that"]},{"Key":"conditions that","Fragments":["can"]},{"Key":"can detect","Fragments":["all"]},{"Key":"detect all","Fragments":["kinds"]},{"Key":"all kinds","Fragments":["of"]},{"Key":"of \"questions\",","Fragments":["\"yells\","]},{"Key":"\"questions\", \"yells\",","Fragments":["and"]},{"Key":"\"yells\", and","Fragments":["so"]},{"Key":"is great,","Fragments":["never"]},{"Key":"great, never","Fragments":["heard"]},{"Key":"never heard","Fragments":["about"]},{"Key":"heard about","Fragments":["`withDefault`,","zip"]},{"Key":"about `withDefault`,","Fragments":["thanks"]},{"Key":"`withDefault`, thanks","Fragments":[":)"]},{"Key":"of ```getOrElse```","Fragments":["you"]},{"Key":"```getOrElse``` you","Fragments":["could"]},{"Key":"use ```withDefault","Fragments":["identity```"]},{"Key":"```withDefault identity```","Fragments":["in"]},{"Key":"identity``` in","Fragments":["the"]},{"Key":"The type","Fragments":["annotations","could","restriction"]},{"Key":"type annotations","Fragments":["for","are"]},{"Key":"annotations for","Fragments":["the"]},{"Key":"the defs","Fragments":["are"]},{"Key":"defs are","Fragments":["pretty"]},{"Key":"pretty important","Fragments":["from"]},{"Key":"important from","Fragments":["a"]},{"Key":"a stylistic","Fragments":["perspective,"]},{"Key":"stylistic perspective,","Fragments":["and"]},{"Key":"perspective, and","Fragments":["probably"]},{"Key":"probably from","Fragments":["an"]},{"Key":"from an","Fragments":["error-prevention","original"]},{"Key":"an error-prevention","Fragments":["perspective"]},{"Key":"error-prevention perspective","Fragments":["as"]},{"Key":"perspective as","Fragments":["well."]},{"Key":"well. Specifically,","Fragments":["if"]},{"Key":"Specifically, if","Fragments":["you"]},{"Key":"you depend","Fragments":["on"]},{"Key":"depend on","Fragments":["type"]},{"Key":"on type","Fragments":["inference"]},{"Key":"type inference","Fragments":["you"]},{"Key":"inference you","Fragments":["have"]},{"Key":"have two","Fragments":["potential","distinct"]},{"Key":"two potential","Fragments":["issues:"]},{"Key":"1) your","Fragments":["readers"]},{"Key":"readers aren't","Fragments":["always"]},{"Key":"aren't always","Fragments":["100%"]},{"Key":"always 100%","Fragments":["sure","sure"]},{"Key":"100% sure","Fragments":["what","what","about"]},{"Key":"2) the","Fragments":["compiler"]},{"Key":"compiler isn't","Fragments":["always"]},{"Key":"isn't always","Fragments":["100%"]},{"Key":"first case","Fragments":["you've","in"]},{"Key":"case you've","Fragments":["broken"]},{"Key":"you've broken","Fragments":["a"]},{"Key":"broken a","Fragments":["cardinal"]},{"Key":"a cardinal","Fragments":["principle"]},{"Key":"cardinal principle","Fragments":["of"]},{"Key":"principle of","Fragments":["optimizing"]},{"Key":"of optimizing","Fragments":["code"]},{"Key":"optimizing code","Fragments":["for"]},{"Key":"for reading,","Fragments":["not"]},{"Key":"reading, not","Fragments":["writing."]},{"Key":"not writing.","Fragments":["In"]},{"Key":"writing. In","Fragments":["the"]},{"Key":"second case","Fragments":["you","and"]},{"Key":"may actually","Fragments":["get"]},{"Key":"actually get","Fragments":["a"]},{"Key":"a bug.","Fragments":["In"]},{"Key":"bug. In","Fragments":["fact"]},{"Key":"fact the","Fragments":["style"]},{"Key":"guide for","Fragments":["Scala","this...anyways"]},{"Key":"Scala where","Fragments":["I"]},{"Key":"I work","Fragments":["is"]},{"Key":"work is","Fragments":["explicit","not","pattern"]},{"Key":"is explicit","Fragments":["about"]},{"Key":"having your","Fragments":["public"]},{"Key":"your public","Fragments":["functions"]},{"Key":"functions be","Fragments":["explicitly"]},{"Key":"be explicitly","Fragments":["type"]},{"Key":"explicitly type","Fragments":["annotated"]},{"Key":"type annotated","Fragments":["except"]},{"Key":"annotated except","Fragments":["in"]},{"Key":"except in","Fragments":["very"]},{"Key":"in very","Fragments":["rare"]},{"Key":"very rare","Fragments":["cases:"]},{"Key":" http://twitter.github.io/effectivescala/#Types","Fragments":["and"]},{"Key":"http://twitter.github.io/effectivescala/#Types and","Fragments":["Generics-Return"]},{"Key":"and Generics-Return","Fragments":["type"]},{"Key":"Generics-Return type","Fragments":["annotations"]},{"Key":"of regex,","Fragments":["I'm"]},{"Key":"regex, I'm","Fragments":["specifically"]},{"Key":"I'm specifically","Fragments":["trying"]},{"Key":"specifically trying","Fragments":["to"]},{"Key":"in favor","Fragments":["of","of"]},{"Key":"favor of","Fragments":["a","the"]},{"Key":"simpler construct","Fragments":["where"]},{"Key":"construct where","Fragments":["possible."]},{"Key":"where possible.","Fragments":["Regexes"]},{"Key":"possible. Regexes","Fragments":["tend"]},{"Key":"Regexes tend","Fragments":["to"]},{"Key":"I completely","Fragments":["agree"]},{"Key":"completely agree","Fragments":["that","with"]},{"Key":"that my","Fragments":["utility","problem","previous","implementation","code"]},{"Key":"my utility","Fragments":["funcs"]},{"Key":"utility funcs","Fragments":["can/should","at"]},{"Key":"funcs can/should","Fragments":["go"]},{"Key":"can/should go","Fragments":["inside"]},{"Key":"go inside","Fragments":["the"]},{"Key":"the worker.","Fragments":["I"]},{"Key":"worker. I","Fragments":["plan"]},{"Key":"I plan","Fragments":["to","on"]},{"Key":"to revisit","Fragments":["this"]},{"Key":"revisit this","Fragments":["and"]},{"Key":"and switch","Fragments":["to"]},{"Key":"switch to","Fragments":["a"]},{"Key":"a pattern","Fragments":["matching","matching,","matching","match"]},{"Key":"matching implementation","Fragments":["for"]},{"Key":"second pass,","Fragments":["and"]},{"Key":"pass, and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["hoping","curious","not","not"]},{"Key":"to kill","Fragments":["the"]},{"Key":"the utility","Fragments":["funcs"]},{"Key":"funcs at","Fragments":["that"]},{"Key":" Agreed","Fragments":["that"]},{"Key":"Agreed that","Fragments":["all"]},{"Key":"tests passing","Fragments":["is"]},{"Key":"passing is","Fragments":["a"]},{"Key":"a goal.","Fragments":["This"]},{"Key":"goal. This","Fragments":["was"]},{"Key":"quick and","Fragments":["(very)","efficient"]},{"Key":"and (very)","Fragments":["dirty"]},{"Key":"(very) dirty","Fragments":["implementation"]},{"Key":"dirty implementation","Fragments":["on"]},{"Key":"implementation on","Fragments":["the"]},{"Key":"the train","Fragments":["while","wreck"]},{"Key":"train while","Fragments":["testing"]},{"Key":"while testing","Fragments":["out"]},{"Key":"testing out","Fragments":["exercism."]},{"Key":"feedback! I","Fragments":["plan","wondered","agree"]},{"Key":"plan on","Fragments":["getting"]},{"Key":"second version","Fragments":["done","which"]},{"Key":"version done","Fragments":["tonight!"]},{"Key":"learned something","Fragments":["new"]},{"Key":"new from","Fragments":["this:"]},{"Key":"from this:","Fragments":["to"]},{"Key":"this: to","Fragments":["use"]},{"Key":"use ==","Fragments":["in","instead"]},{"Key":"== in","Fragments":["scala"]},{"Key":"scala instead","Fragments":["of"]},{"Key":"of .equals()","Fragments":["like"]},{"Key":".equals() like","Fragments":["in"]},{"Key":" Functional","Fragments":["Suggestions:"]},{"Key":"* Not","Fragments":["all"]},{"Key":"Not all","Fragments":["tests"]},{"Key":"* Use","Fragments":["msg.matches(\"\\\\A\\\\s*\\\\Z\")","the"]},{"Key":"Use msg.matches(\"\\\\A\\\\s*\\\\Z\")","Fragments":["in"]},{"Key":"msg.matches(\"\\\\A\\\\s*\\\\Z\") in","Fragments":["order"]},{"Key":"detect an","Fragments":["all"]},{"Key":"an all","Fragments":["whitespace","caps"]},{"Key":"all whitespace","Fragments":["input"]},{"Key":"* Get","Fragments":["rid"]},{"Key":"Get rid","Fragments":["of"]},{"Key":"type definitions","Fragments":["for"]},{"Key":"your defs","Fragments":["(e.g.","to","don't","don't"]},{"Key":"defs (e.g.","Fragments":["instead"]},{"Key":"(e.g. instead","Fragments":["of"]},{"Key":"of \"def","Fragments":["hey(msg:"]},{"Key":"\"def hey(msg:","Fragments":["String):","String)"]},{"Key":"hey(msg: String):","Fragments":["String"]},{"Key":"= ...\"","Fragments":["just"]},{"Key":"...\" just","Fragments":["use"]},{"Key":"use \"def","Fragments":["hey(msg:"]},{"Key":"hey(msg: String)","Fragments":["="]},{"Key":"* Declare","Fragments":["your"]},{"Key":"Declare your","Fragments":["utility"]},{"Key":"your utility","Fragments":["functions"]},{"Key":"utility functions","Fragments":["(shouting,"]},{"Key":"functions (shouting,","Fragments":["question,"]},{"Key":"(shouting, question,","Fragments":["empty)"]},{"Key":"question, empty)","Fragments":["inside"]},{"Key":"empty) inside","Fragments":["of"]},{"Key":"inside of","Fragments":["hey()","the","`case`"]},{"Key":"hey() so","Fragments":["as"]},{"Key":"as not","Fragments":["to"]},{"Key":"to pollute","Fragments":["the"]},{"Key":"pollute the","Fragments":["namespace"]},{"Key":"the namespace","Fragments":["of"]},{"Key":"namespace of","Fragments":["the"]},{"Key":"the Bob","Fragments":["class","class"]},{"Key":" Testing","Fragments":["exercism!"]},{"Key":" Great!","Fragments":["if"]},{"Key":"Great! if","Fragments":["you"]},{"Key":"still want","Fragments":["some","to"]},{"Key":"want some","Fragments":["minor"]},{"Key":"some minor","Fragments":["things"]},{"Key":"minor things","Fragments":["to"]},{"Key":"things to","Fragments":["improve:","a","work,","compile"]},{"Key":"- constants","Fragments":["like","like"]},{"Key":"constants like","Fragments":["pattern","EmptyStudentList"]},{"Key":"like pattern","Fragments":["belong","matching"]},{"Key":"pattern belong","Fragments":["to"]},{"Key":"belong to","Fragments":["an"]},{"Key":"an object,","Fragments":["the","because","but"]},{"Key":"object, the","Fragments":["companion"]},{"Key":"object suggests","Fragments":["itself","itself).","itself)"]},{"Key":"suggests itself","Fragments":["here.","for","here."]},{"Key":"- parse","Fragments":["functions"]},{"Key":"parse functions","Fragments":["are"]},{"Key":"natural to","Fragments":["return","have","me"]},{"Key":"an Option,","Fragments":["and"]},{"Key":"Option, and","Fragments":["the"]},{"Key":"the caller","Fragments":["then"]},{"Key":"caller then","Fragments":["can"]},{"Key":"then can","Fragments":["decide"]},{"Key":"can decide","Fragments":["what"]},{"Key":"decide what","Fragments":["to"]},{"Key":"what to","Fragments":["do"]},{"Key":"the parse","Fragments":["failed."]},{"Key":"- your","Fragments":["vals"]},{"Key":"your vals","Fragments":["might"]},{"Key":"vals might","Fragments":["be"]},{"Key":"declared lazy","Fragments":["so"]},{"Key":"heavy work","Fragments":["is","in"]},{"Key":"not done","Fragments":["in"]},{"Key":"going above","Fragments":["and"]},{"Key":"above and","Fragments":["beyond"]},{"Key":"and beyond","Fragments":["what"]},{"Key":"beyond what","Fragments":["the"]},{"Key":"the unit","Fragments":["tests","tests.","tests"]},{"Key":"tests cared","Fragments":["about."]},{"Key":"cared about.","Fragments":["You"]},{"Key":"about. You","Fragments":["could"]},{"Key":"also just","Fragments":["filter","noticed","use","say","define","use"]},{"Key":"just filter","Fragments":["so","the","on"]},{"Key":"filter so","Fragments":["that"]},{"Key":"only the","Fragments":["digits","first","`dnaNucleotides`","sub","final"]},{"Key":"the digits","Fragments":["are","one"]},{"Key":"digits are","Fragments":["handled."]},{"Key":"are handled.","Fragments":["And,"]},{"Key":"handled. And,","Fragments":["then"]},{"Key":"And, then","Fragments":["deal","have"]},{"Key":"then deal","Fragments":["with"]},{"Key":"the leading","Fragments":["1","underscore"]},{"Key":"leading 1","Fragments":["is"]},{"Key":"1 is","Fragments":["included"]},{"Key":"is included","Fragments":["or"]},{"Key":"included or","Fragments":["not."]},{"Key":"is possibly","Fragments":["a"]},{"Key":"possibly a","Fragments":["sort"]},{"Key":"a sort","Fragments":["of","function"]},{"Key":"of cheat","Fragments":["on"]},{"Key":"cheat on","Fragments":["the"]},{"Key":"the create","Fragments":["method,"]},{"Key":"create method,","Fragments":["but"]},{"Key":"method, but","Fragments":["it","then"]},{"Key":"readability on","Fragments":["this"]},{"Key":"exercise by","Fragments":["using"]},{"Key":"comprehension (which","Fragments":["translate"]},{"Key":"(which translate","Fragments":["to"]},{"Key":"translate to","Fragments":["`flatMap`s"]},{"Key":"to `flatMap`s","Fragments":["under"]},{"Key":"`flatMap`s under","Fragments":["the"]},{"Key":"under the","Fragments":["hood)."]},{"Key":"matching directly","Fragments":["on"]},{"Key":"the parameters","Fragments":["of"]},{"Key":"parameters of","Fragments":["an"]},{"Key":"an anonymous","Fragments":["function:","function"]},{"Key":" `{","Fragments":["case"]},{"Key":"`{ case","Fragments":["(score,","(a,b)"]},{"Key":"case (score,","Fragments":["letters)"]},{"Key":"(score, letters)","Fragments":["=\u003e"]},{"Key":"letters) =\u003e","Fragments":["..."]},{"Key":"=\u003e ...","Fragments":["}`"]},{"Key":"could shorten","Fragments":["```onlyLetters.length"]},{"Key":"shorten ```onlyLetters.length","Fragments":["\u003e"]},{"Key":"```onlyLetters.length \u003e","Fragments":["0```"]},{"Key":"0``` to","Fragments":["```onlyLetters.nonEmpty```."]},{"Key":"even shorter","Fragments":["using"]},{"Key":"shorter using","Fragments":["the"]},{"Key":"Collection function","Fragments":["\"count\".","\"sorted\""]},{"Key":"function \"count\".","Fragments":[":-)"]},{"Key":" QuestionWithNumbers","Fragments":["still"]},{"Key":"QuestionWithNumbers still","Fragments":["looks"]},{"Key":"still looks","Fragments":["too"]},{"Key":"too ad-hoc","Fragments":["to"]},{"Key":"ad-hoc to","Fragments":["me,"]},{"Key":"me, though.","Fragments":["And"]},{"Key":"though. And","Fragments":["perhaps"]},{"Key":"perhaps you","Fragments":["could","could"]},{"Key":"could somehow","Fragments":["remove"]},{"Key":"somehow remove","Fragments":["that"]},{"Key":"that OnlyNumbers()","Fragments":["case-clause"]},{"Key":"OnlyNumbers() case-clause","Fragments":["altogether"]},{"Key":"case-clause altogether","Fragments":["(by"]},{"Key":"altogether (by","Fragments":["rearranging"]},{"Key":"(by rearranging","Fragments":["the"]},{"Key":"rearranging the","Fragments":["case's)?"]},{"Key":"a completely","Fragments":["different"]},{"Key":"completely different","Fragments":["object"]},{"Key":"different object","Fragments":["like"]},{"Key":"your Regex","Fragments":["Scala"]},{"Key":"Regex Scala","Fragments":["has"]},{"Key":"the \"companion","Fragments":["object\""]},{"Key":"object\" for","Fragments":["declaring"]},{"Key":"for declaring","Fragments":["constants"]},{"Key":"declaring constants","Fragments":["(and"]},{"Key":"constants (and","Fragments":["other"]},{"Key":"(and other","Fragments":["things)."]},{"Key":"other things).","Fragments":["This"]},{"Key":"things). This","Fragments":["is"]},{"Key":"object w/","Fragments":["the"]},{"Key":"class, \"Bob\"","Fragments":["in"]},{"Key":"\"Bob\" in","Fragments":["this"]},{"Key":"case, so","Fragments":["you"]},{"Key":"can should","Fragments":["rename"]},{"Key":"should rename","Fragments":["it"]},{"Key":"rename it","Fragments":["(and"]},{"Key":"it (and","Fragments":["you"]},{"Key":"use import","Fragments":["Bob._"]},{"Key":"import Bob._","Fragments":["to"]},{"Key":"Bob._ to","Fragments":["get"]},{"Key":"the prefix","Fragments":["when"]},{"Key":"prefix when","Fragments":["referring"]},{"Key":"when referring","Fragments":["to"]},{"Key":"of tidying.","Fragments":["Decided"]},{"Key":"tidying. Decided","Fragments":["not"]},{"Key":"Decided not","Fragments":["to"]},{"Key":"to adjust","Fragments":["the"]},{"Key":"adjust the","Fragments":["map"]},{"Key":"map itself","Fragments":["as"]},{"Key":"itself as","Fragments":["I"]},{"Key":"think having","Fragments":["the"]},{"Key":"the full","Fragments":["list","`incrementBalance`","thumbs","sequence"]},{"Key":"full list","Fragments":["makes"]},{"Key":"list makes","Fragments":["the"]},{"Key":"the purpose","Fragments":["clearer.","of","of"]},{"Key":"scala Strings","Fragments":["can"]},{"Key":"Strings can","Fragments":["be"]},{"Key":"as Lists","Fragments":["of"]},{"Key":"Lists of","Fragments":["Char"]},{"Key":"Char (actually","Fragments":["Iterables"]},{"Key":"(actually Iterables","Fragments":["but"]},{"Key":"Iterables but","Fragments":["I"]},{"Key":"would help).","Fragments":["So"]},{"Key":"help). So","Fragments":["your"]},{"Key":"So your","Fragments":["hasLetters"]},{"Key":"your hasLetters","Fragments":["function"]},{"Key":"hasLetters function","Fragments":["could"]},{"Key":"be defined","Fragments":["as:","a","inside","outside"]},{"Key":" statement.exists(","Fragments":["_.isLetter)"]},{"Key":"No regex","Fragments":["needed","version"]},{"Key":"All your","Fragments":["functions"]},{"Key":"your functions","Fragments":["except","in"]},{"Key":"functions except","Fragments":["hasLetters"]},{"Key":"except hasLetters","Fragments":["consist"]},{"Key":"hasLetters consist","Fragments":["only"]},{"Key":"consist only","Fragments":["of"]},{"Key":"only of","Fragments":["a","your"]},{"Key":"simple statement.","Fragments":["So"]},{"Key":"statement. So","Fragments":["(including"]},{"Key":"So (including","Fragments":["the"]},{"Key":"(including the","Fragments":["class"]},{"Key":"class definition)","Fragments":["I"]},{"Key":"definition) I","Fragments":["only"]},{"Key":"only see","Fragments":["2"]},{"Key":"see 2","Fragments":["pairs"]},{"Key":"2 pairs","Fragments":["of"]},{"Key":"braces that","Fragments":["are"]},{"Key":"are really","Fragments":["mandatory","nice"]},{"Key":"really mandatory","Fragments":[";)"]},{"Key":"just starting","Fragments":["with"]},{"Key":"starting with","Fragments":["Scala","a","an"]},{"Key":"any tips","Fragments":["are"]},{"Key":"tips are","Fragments":["greatly"]},{"Key":"are greatly","Fragments":["appreciated."]},{"Key":"The `quiet","Fragments":["!="]},{"Key":"`quiet !=","Fragments":["loud`"]},{"Key":"!= loud`","Fragments":["might"]},{"Key":"loud` might","Fragments":["look"]},{"Key":"bit odd.","Fragments":["I"]},{"Key":"odd. I","Fragments":["wanted"]},{"Key":"do something","Fragments":["more","like","clever","funny","*like*","like:"]},{"Key":"more thorough","Fragments":["than"]},{"Key":"thorough than","Fragments":["just"]},{"Key":"just checking","Fragments":["for"]},{"Key":"checking for","Fragments":["basic"]},{"Key":"for basic","Fragments":["A-Z"]},{"Key":"basic A-Z","Fragments":["characters."]},{"Key":"A-Z characters.","Fragments":["I"]},{"Key":"characters. I","Fragments":["figured"]},{"Key":"figured if","Fragments":["nothing"]},{"Key":"if nothing","Fragments":["changed"]},{"Key":"nothing changed","Fragments":["case"]},{"Key":"changed case","Fragments":["then"]},{"Key":"case then","Fragments":["we"]},{"Key":"then we","Fragments":["probably"]},{"Key":"we probably","Fragments":["don't"]},{"Key":"probably don't","Fragments":["have","want"]},{"Key":"any letters","Fragments":["being"]},{"Key":"letters being","Fragments":["dealt"]},{"Key":"being dealt","Fragments":["with."]},{"Key":"dealt with.","Fragments":["Hopefully"]},{"Key":"with. Hopefully","Fragments":["it'll"]},{"Key":"Hopefully it'll","Fragments":["be"]},{"Key":"it'll be","Fragments":["a"]},{"Key":"more multilingual","Fragments":["friendly."]},{"Key":" Significant","Fragments":["number"]},{"Key":"Significant number","Fragments":["of"]},{"Key":"of test","Fragments":["cases","cases."]},{"Key":"cases can","Fragments":["be"]},{"Key":"be satisfied","Fragments":["from"]},{"Key":"satisfied from","Fragments":["filtering"]},{"Key":"from filtering","Fragments":["with"]},{"Key":"following function","Fragments":["for"]},{"Key":" (candidateWord","Fragments":["=\u003e"]},{"Key":"(candidateWord =\u003e","Fragments":["inputWord.toLowerCase.sorted"]},{"Key":"=\u003e inputWord.toLowerCase.sorted","Fragments":["=="]},{"Key":"inputWord.toLowerCase.sorted ==","Fragments":["candidateWord.toLowerCase.sorted)"]},{"Key":"rest of","Fragments":["the","the","the","the"]},{"Key":"can implemented","Fragments":["by"]},{"Key":"implemented by","Fragments":["slightly","explicitly"]},{"Key":"by slightly","Fragments":["expanding"]},{"Key":"slightly expanding","Fragments":["this"]},{"Key":"expanding this","Fragments":["the"]},{"Key":" @vesta","Fragments":[","]},{"Key":"@vesta ,","Fragments":["how"]},{"Key":", how","Fragments":["would"]},{"Key":"you improve/simplify","Fragments":["it?"]},{"Key":"This question","Fragments":["really"]},{"Key":"question really","Fragments":["boils"]},{"Key":"really boils","Fragments":["down"]},{"Key":"to whether","Fragments":["the","we"]},{"Key":"sorted lowercased","Fragments":["input"]},{"Key":"lowercased input","Fragments":["is"]},{"Key":"input is","Fragments":["found","marked","wrong."]},{"Key":"is found","Fragments":["in","doesn't"]},{"Key":"found in","Fragments":["the"]},{"Key":"of sorted","Fragments":["and","words."]},{"Key":"sorted and","Fragments":["lowercased","remove"]},{"Key":"and lowercased","Fragments":["words."]},{"Key":"lowercased words.","Fragments":["The"]},{"Key":"words. The","Fragments":["lowercasing"]},{"Key":"The lowercasing","Fragments":["can"]},{"Key":"lowercasing can","Fragments":["be"]},{"Key":"once on","Fragments":["the","the","init,"]},{"Key":"input word","Fragments":["and","as"]},{"Key":"word and","Fragments":["once","the","each","we"]},{"Key":"the each","Fragments":["of"]},{"Key":"each of","Fragments":["the","the"]},{"Key":"words in","Fragments":["the","the"]},{"Key":"input list.","Fragments":["Essentially,"]},{"Key":"list. Essentially,","Fragments":["I"]},{"Key":"Essentially, I","Fragments":["believe"]},{"Key":"believe this","Fragments":["code","will"]},{"Key":"You're right,","Fragments":["had","thanks!","thanks"]},{"Key":"right, had","Fragments":["not"]},{"Key":"had not","Fragments":["seen"]},{"Key":"not seen","Fragments":["that,"]},{"Key":"seen that,","Fragments":["thanks"]},{"Key":"Just one","Fragments":["simplification,","thing,"]},{"Key":"one simplification,","Fragments":["a"]},{"Key":"simplification, a","Fragments":["=="]},{"Key":"== c","Fragments":["is"]},{"Key":"c is","Fragments":["enaugh"]},{"Key":"is enaugh","Fragments":["at"]},{"Key":"enaugh at","Fragments":["IsEquiliteral"]},{"Key":"at IsEquiliteral","Fragments":["as"]},{"Key":"IsEquiliteral as","Fragments":["a"]},{"Key":"a \u003c=","Fragments":["b"]},{"Key":"\u003c= b","Fragments":["\u003c="]},{"Key":"b \u003c=","Fragments":["c."]},{"Key":"Thanks! The","Fragments":["regular"]},{"Key":"The regular","Fragments":["expressions"]},{"Key":"expressions can","Fragments":["be"]},{"Key":"improved though,","Fragments":["I"]},{"Key":"though, I","Fragments":["don't"]},{"Key":"have much","Fragments":["experience"]},{"Key":"much experience","Fragments":["with"]},{"Key":"experience with","Fragments":["them."]},{"Key":"Interesting solution.","Fragments":["I","I"]},{"Key":"solution. I","Fragments":["like","was","got","did","ended","actually","was","found"]},{"Key":"Very clean","Fragments":["and"]},{"Key":"and elegant.","Fragments":["Nice"]},{"Key":"elegant. Nice","Fragments":["job."]},{"Key":"was using","Fragments":["this","the","Streams"]},{"Key":"using this","Fragments":["exercise"]},{"Key":"about streams","Fragments":["and"]},{"Key":"streams and","Fragments":["lazy"]},{"Key":"and lazy","Fragments":["evaluation","lists"]},{"Key":"evaluation --","Fragments":["I"]},{"Key":"have left","Fragments":["a"]},{"Key":"left a","Fragments":["comment","very"]},{"Key":"a comment","Fragments":["to","shows","on","to"]},{"Key":"comment to","Fragments":["that","the"]},{"Key":"to that","Fragments":["effect."]},{"Key":"that effect.","Fragments":["Thanks"]},{"Key":"effect. Thanks","Fragments":["for"]},{"Key":"the readme,","Fragments":["you"]},{"Key":"readme, you","Fragments":["will"]},{"Key":"will notice","Fragments":["that"]},{"Key":"notice that","Fragments":["you","tests"]},{"Key":"generate a","Fragments":["list","dupilicate"]},{"Key":"of primes","Fragments":["at"]},{"Key":"primes at","Fragments":["all"]},{"Key":"all -","Fragments":["you"]},{"Key":"just operate","Fragments":["over"]},{"Key":"operate over","Fragments":["a"]},{"Key":"over a","Fragments":["stream","```List```","collection","regex.","more","Map","Range","collection","Range","Scala","List.","list","List"]},{"Key":"a stream","Fragments":["of","of"]},{"Key":"stream of","Fragments":["longs","random","names,"]},{"Key":"of longs","Fragments":["(the"]},{"Key":"longs (the","Fragments":["reason"]},{"Key":"(the reason","Fragments":["being"]},{"Key":"reason being","Fragments":["that"]},{"Key":"being that","Fragments":["you"]},{"Key":"the low","Fragments":["values"]},{"Key":"low values","Fragments":["first,"]},{"Key":"values first,","Fragments":["so"]},{"Key":"first, so","Fragments":["by"]},{"Key":"so by","Fragments":["the"]},{"Key":"by the","Fragments":["time","tests","\"par\"","indirection","syntax","test","zip","rest","regex","compiler","isShouting","tests","regex"]},{"Key":"time you","Fragments":["reach","loop","call","test"]},{"Key":"you reach","Fragments":["the"]},{"Key":"reach the","Fragments":["composite"]},{"Key":"the composite","Fragments":["numbers,"]},{"Key":"composite numbers,","Fragments":["you"]},{"Key":"numbers, you","Fragments":["have"]},{"Key":"already factored","Fragments":["them"]},{"Key":"factored them","Fragments":["out)."]},{"Key":"two distinct","Fragments":["conditions"]},{"Key":"distinct conditions","Fragments":["where"]},{"Key":"conditions where","Fragments":["the"]},{"Key":"is marked","Fragments":["as"]},{"Key":"as invalid.","Fragments":["Is"]},{"Key":"invalid. Is","Fragments":["it"]},{"Key":"to group","Fragments":["these"]},{"Key":"group these","Fragments":["into"]},{"Key":"these into","Fragments":["a"]},{"Key":"Yes. Thanks","Fragments":["for"]},{"Key":"your suggestion.","Fragments":["See"]},{"Key":"suggestion. See","Fragments":["that"]},{"Key":"See that","Fragments":["in"]},{"Key":" Note","Fragments":["that","that","the"]},{"Key":"Note that","Fragments":["`class","you"]},{"Key":"that `class","Fragments":["Hamming`"]},{"Key":"`class Hamming`","Fragments":["doesn't"]},{"Key":"Hamming` doesn't","Fragments":["contain"]},{"Key":"doesn't contain","Fragments":["any","any","\"OK\"?"]},{"Key":"contain any","Fragments":["state;","alphabethic"]},{"Key":"any state;","Fragments":["there"]},{"Key":"state; there","Fragments":["are"]},{"Key":"no `val`s","Fragments":["or"]},{"Key":"`val`s or","Fragments":["`var`s."]},{"Key":"or `var`s.","Fragments":["All"]},{"Key":"`var`s. All","Fragments":["it"]},{"Key":"All it","Fragments":["does"]},{"Key":"it contain","Fragments":["two"]},{"Key":"contain two","Fragments":["functions"]},{"Key":"functions that","Fragments":["simply","come","don't","are","make"]},{"Key":"simply act","Fragments":["on"]},{"Key":"act on","Fragments":["their"]},{"Key":"on their","Fragments":["inputs."]},{"Key":"their inputs.","Fragments":["That"]},{"Key":"inputs. That","Fragments":["means"]},{"Key":"means everything","Fragments":["can"]},{"Key":"everything can","Fragments":["live"]},{"Key":"can live","Fragments":["inside","by"]},{"Key":"live inside","Fragments":["the"]},{"Key":"the singleton","Fragments":["`object"]},{"Key":"singleton `object","Fragments":["Hamming`"]},{"Key":"`object Hamming`","Fragments":["and"]},{"Key":"Hamming` and","Fragments":["there's"]},{"Key":"and there's","Fragments":["no"]},{"Key":"to allocate","Fragments":["an"]},{"Key":"allocate an","Fragments":["instance"]},{"Key":"The basic","Fragments":["use"]},{"Key":"basic use","Fragments":["case"]},{"Key":"use case","Fragments":["for","in"]},{"Key":"for companion","Fragments":["objects"]},{"Key":"companion objects","Fragments":["is","and"]},{"Key":"objects is","Fragments":["to"]},{"Key":"to contain","Fragments":["the","the"]},{"Key":"contain the","Fragments":["_static_","sentence","characters","same","words.filter"]},{"Key":"the _static_","Fragments":["methods"]},{"Key":"_static_ methods","Fragments":["and"]},{"Key":"methods and","Fragments":["data;"]},{"Key":"and data;","Fragments":["that"]},{"Key":"data; that","Fragments":["is"]},{"Key":"the stuff","Fragments":["is"]},{"Key":"stuff is","Fragments":["shared","too"]},{"Key":"is shared","Fragments":["between"]},{"Key":"shared between","Fragments":["all","them"]},{"Key":"between all","Fragments":["instances"]},{"Key":"all instances","Fragments":["of","of"]},{"Key":"instances of","Fragments":["the","`GregorianCalendar`","`.sortWith((w1,","```Day```","rep"]},{"Key":"a (really","Fragments":["contrived)"]},{"Key":"(really contrived)","Fragments":["example,"]},{"Key":"contrived) example,","Fragments":["say"]},{"Key":"example, say","Fragments":["that"]},{"Key":"you wanted","Fragments":["to","to","a"]},{"Key":"to cache","Fragments":["some","all"]},{"Key":"cache some","Fragments":["data"]},{"Key":"some data","Fragments":["about"]},{"Key":"data about","Fragments":["the"]},{"Key":"the inputs","Fragments":["that","(it","in"]},{"Key":"inputs that","Fragments":["Hamming"]},{"Key":"that Hamming","Fragments":["receives."]},{"Key":"Hamming receives.","Fragments":["In"]},{"Key":"receives. In","Fragments":["that"]},{"Key":"In that","Fragments":["case"]},{"Key":"might create","Fragments":["a"]},{"Key":"a `Hamming`","Fragments":["class"]},{"Key":"`Hamming` class","Fragments":["that"]},{"Key":"class that","Fragments":["has","has"]},{"Key":"private `Map`","Fragments":["to"]},{"Key":"`Map` to","Fragments":["keep"]},{"Key":"the cached","Fragments":["data."]},{"Key":"cached data.","Fragments":["The"]},{"Key":"data. The","Fragments":["computing"]},{"Key":"The computing","Fragments":["of"]},{"Key":"computing of","Fragments":["the"]},{"Key":"distance is","Fragments":["still","typically"]},{"Key":"still just","Fragments":["a"]},{"Key":"inputs (it","Fragments":["doesn't"]},{"Key":"(it doesn't","Fragments":["care"]},{"Key":"doesn't care","Fragments":["about"]},{"Key":"care about","Fragments":["the","state","efficiency"]},{"Key":"state of","Fragments":["the"]},{"Key":"the cache)","Fragments":["so"]},{"Key":"cache) so","Fragments":["it"]},{"Key":"could live","Fragments":["in"]},{"Key":"object. That's","Fragments":["probably"]},{"Key":"That's probably","Fragments":["going"]},{"Key":"going overboard","Fragments":["for"]},{"Key":"overboard for","Fragments":["such"]},{"Key":"for such","Fragments":["a","a","a"]},{"Key":"simple thing","Fragments":["as"]},{"Key":"thing as","Fragments":["this","a","`length`"]},{"Key":"this but","Fragments":["it","this"]},{"Key":"gives the","Fragments":["idea.","benefit"]},{"Key":"feedback, @troy.","Fragments":["I"]},{"Key":"@troy. I","Fragments":["had"]},{"Key":"had everything","Fragments":["in"]},{"Key":"everything in","Fragments":["one","one.","a","the","C!"]},{"Key":"one object","Fragments":["before,"]},{"Key":"object before,","Fragments":["but"]},{"Key":"saw that","Fragments":["the"]},{"Key":"the example","Fragments":["broke","exercise"]},{"Key":"example broke","Fragments":["up"]},{"Key":"broke up","Fragments":["the"]},{"Key":"class and","Fragments":["object.","transformer","put","foldRight!","change","can"]},{"Key":"and object.","Fragments":["Is"]},{"Key":"object. Is","Fragments":["that"]},{"Key":"a common","Fragments":["pattern?"]},{"Key":"Using `List.count`","Fragments":["on"]},{"Key":"`List.count` on","Fragments":["a"]},{"Key":"a zipped","Fragments":["rather"]},{"Key":"zipped rather","Fragments":["than"]},{"Key":"than `List.forEach`","Fragments":["is"]},{"Key":"`List.forEach` is","Fragments":["the"]},{"Key":"best approach,","Fragments":["but"]},{"Key":"approach, but","Fragments":["I","I"]},{"Key":"prefer the","Fragments":["single","Scala","return-early-return-often"]},{"Key":"single method","Fragments":["implementation","like"]},{"Key":"method implementation","Fragments":["of"]},{"Key":"original solution.","Fragments":["There's"]},{"Key":"solution. There's","Fragments":["no"]},{"Key":"no reason","Fragments":["to"]},{"Key":"extra class","Fragments":["just"]},{"Key":"class just","Fragments":["to"]},{"Key":"to hold","Fragments":["a","the","the"]},{"Key":"hold a","Fragments":["couple"]},{"Key":"a throws","Fragments":["declaration"]},{"Key":"throws declaration","Fragments":["is"]},{"Key":"declaration is","Fragments":["interesting"]},{"Key":"is interesting","Fragments":["to"]},{"Key":"to discuss.","Fragments":["This"]},{"Key":"discuss. This","Fragments":["is"]},{"Key":"more for","Fragments":["interfacing","this"]},{"Key":"for interfacing","Fragments":["with"]},{"Key":"interfacing with","Fragments":["Java"]},{"Key":"with Java","Fragments":["usually.","date/time"]},{"Key":"have better","Fragments":["names"]},{"Key":"better names","Fragments":["for","that"]},{"Key":"your arguments.","Fragments":["What"]},{"Key":"arguments. What","Fragments":["is"]},{"Key":"of count","Fragments":["as","a"]},{"Key":"count as","Fragments":["a"]},{"Key":"of its","Fragments":["own","Unit"]},{"Key":"own with","Fragments":["a"]},{"Key":"good name","Fragments":["for","for","as","for","this"]},{"Key":"is \"require\"","Fragments":["in","in","in"]},{"Key":"\"require\" in","Fragments":["Predef","Predef","Predef."]},{"Key":"in Predef","Fragments":["to","to","for","that","there","which","is"]},{"Key":"Predef to","Fragments":["check","check"]},{"Key":"You're repeating","Fragments":["\"Whatever.\""]},{"Key":"repeating \"Whatever.\"","Fragments":["If"]},{"Key":"\"Whatever.\" If","Fragments":["that"]},{"Key":"that answer","Fragments":["had"]},{"Key":"answer had","Fragments":["to"]},{"Key":"be modified,","Fragments":["you"]},{"Key":"modified, you","Fragments":["would"]},{"Key":"in two","Fragments":["places,","different"]},{"Key":"two places,","Fragments":["which"]},{"Key":"places, which","Fragments":["can"]},{"Key":"can lead","Fragments":["to"]},{"Key":"lead to","Fragments":["bugs.","mistakes.","the","potential"]},{"Key":"to bugs.","Fragments":["Maybe"]},{"Key":"bugs. Maybe","Fragments":["you"]},{"Key":"could get","Fragments":["the","bothersome"]},{"Key":"from some","Fragments":["method/value,","shared"]},{"Key":"some method/value,","Fragments":["or"]},{"Key":"method/value, or","Fragments":["combine"]},{"Key":"or combine","Fragments":["the"]},{"Key":"conditions, or","Fragments":["something?"]},{"Key":"also redefine","Fragments":["the"]},{"Key":"redefine the","Fragments":["```wordCount```"]},{"Key":"the ```wordCount```","Fragments":["as"]},{"Key":"```wordCount``` as","Fragments":["a"]},{"Key":"val``` so","Fragments":["that"]},{"Key":"that once","Fragments":["it's"]},{"Key":"once it's","Fragments":["computed,"]},{"Key":"it's computed,","Fragments":["it"]},{"Key":"computed, it","Fragments":["won't"]},{"Key":"it won't","Fragments":["have","have"]},{"Key":"be recomputed","Fragments":["each"]},{"Key":"recomputed each","Fragments":["time"]},{"Key":"time ```wordCount```","Fragments":["is"]},{"Key":"```wordCount``` is","Fragments":["called."]},{"Key":"Really like","Fragments":["your","the"]},{"Key":"split on","Fragments":["a"]},{"Key":"regex myself,","Fragments":["but"]},{"Key":"myself, but","Fragments":["didn't","this"]},{"Key":"but didn't","Fragments":["find"]},{"Key":"didn't find","Fragments":["it."]},{"Key":"have extracted","Fragments":["the"]},{"Key":"extracted the","Fragments":["regexp","```getPlaceString```"]},{"Key":"regexp to","Fragments":["a"]},{"Key":"constant with","Fragments":["a"]},{"Key":" name","Fragments":["for"]},{"Key":"for increased","Fragments":["readability."]},{"Key":"what does","Fragments":["that","the"]},{"Key":"does that","Fragments":["mean?","for","by"]},{"Key":"Nice use","Fragments":["of","of","of","of","of"]},{"Key":"of regexes","Fragments":["but"]},{"Key":"regexes but","Fragments":["scala"]},{"Key":"but scala","Fragments":["has"]},{"Key":"like `isEmpty`,","Fragments":["`endsWith`,"]},{"Key":"`isEmpty`, `endsWith`,","Fragments":["and"]},{"Key":"`endsWith`, and","Fragments":["so"]},{"Key":"so on","Fragments":["to"]},{"Key":"on to","Fragments":["handle"]},{"Key":"handle common","Fragments":["string"]},{"Key":"common string","Fragments":["tests."]},{"Key":"A fold","Fragments":["is"]},{"Key":"fold is","Fragments":["the","to"]},{"Key":"right way","Fragments":["to","to"]},{"Key":"to traverse","Fragments":["a","the"]},{"Key":"traverse a","Fragments":["sequence"]},{"Key":"sequence and","Fragments":["accumulate"]},{"Key":"and accumulate","Fragments":["a"]},{"Key":"accumulate a","Fragments":["value,"]},{"Key":"value, but","Fragments":["in"]},{"Key":"case there","Fragments":["are","is","and"]},{"Key":"are even","Fragments":["easier"]},{"Key":"easier ways","Fragments":["to","though."]},{"Key":"tuples with","Fragments":["different"]},{"Key":"with different","Fragments":["components.","chars,"]},{"Key":"different components.","Fragments":["Take"]},{"Key":"components. Take","Fragments":["a"]},{"Key":"a closer","Fragments":["look","look"]},{"Key":"closer look","Fragments":["at","and"]},{"Key":"on List.","Fragments":["There's","I"]},{"Key":"List. There's","Fragments":["some"]},{"Key":"There's some","Fragments":["cool"]},{"Key":"some cool","Fragments":["stuff","aspects"]},{"Key":"stuff in","Fragments":["there."]},{"Key":"solution. Learned","Fragments":["some"]},{"Key":"Learned some","Fragments":["new"]},{"Key":"some new","Fragments":["things,"]},{"Key":"new things,","Fragments":["thanks."]},{"Key":"time for","Fragments":["both"]},{"Key":"both that","Fragments":["is"]},{"Key":"good exercise!","Fragments":[":-)"]},{"Key":" Aye,","Fragments":["I"]},{"Key":"Aye, I","Fragments":["was"]},{"Key":"was practicing","Fragments":["thinking"]},{"Key":"practicing thinking","Fragments":["about"]},{"Key":"about how","Fragments":["to"]},{"Key":"write the","Fragments":["recursive","checks","shortest","minimal","`foldLeft`"]},{"Key":"recursive permutation","Fragments":["algorithm,"]},{"Key":"permutation algorithm,","Fragments":["I"]},{"Key":"algorithm, I","Fragments":["agreed"]},{"Key":"I agreed","Fragments":["that"]},{"Key":"agreed that","Fragments":["using"]},{"Key":"scala libs","Fragments":["is","as"]},{"Key":"libs is","Fragments":["the"]},{"Key":"simpler way,","Fragments":["and"]},{"Key":"way, and","Fragments":["definitely"]},{"Key":"and definitely","Fragments":["the","not"]},{"Key":"definitely the","Fragments":["way"]},{"Key":"way I'd","Fragments":["do"]},{"Key":"I'd do","Fragments":["it"]},{"Key":"real code","Fragments":["base."]},{"Key":"code base.","Fragments":["I"]},{"Key":"base. I","Fragments":["submitted"]},{"Key":"I submitted","Fragments":["one","another","a","a","a"]},{"Key":"submitted one","Fragments":["using"]},{"Key":"libs as","Fragments":["well,"]},{"Key":"well, I'll","Fragments":["try"]},{"Key":"do both","Fragments":["in"]},{"Key":"both in","Fragments":["the"]},{"Key":"all permutations","Fragments":["just"]},{"Key":"permutations just","Fragments":["by"]},{"Key":"just by","Fragments":["comparing"]},{"Key":"by comparing","Fragments":["the","twice"]},{"Key":"characters of","Fragments":["the","each"]},{"Key":"did is","Fragments":["to","having"]},{"Key":"re-implement ```containsSlice```","Fragments":["on","yourself."]},{"Key":"```containsSlice``` on","Fragments":["my"]},{"Key":"am looking","Fragments":["forward","at"]},{"Key":"looking forward","Fragments":["to","to",";)"]},{"Key":"forward to","Fragments":["your","receiving"]},{"Key":"the Readme","Fragments":["algorithm."]},{"Key":"Readme algorithm.","Fragments":[":-)"]},{"Key":"version uses","Fragments":["`containsSlice`","a"]},{"Key":"uses `containsSlice`","Fragments":["to"]},{"Key":"`containsSlice` to","Fragments":["check"]},{"Key":"a sublist","Fragments":["of","in"]},{"Key":"sublist of","Fragments":["another."]},{"Key":"of another.","Fragments":["I'll"]},{"Key":"another. I'll","Fragments":["provide"]},{"Key":"I'll provide","Fragments":["a"]},{"Key":"version which","Fragments":["avoids","tries"]},{"Key":"which avoids","Fragments":["the","the"]},{"Key":"avoids the","Fragments":["usage","sorting","need","recursion,"]},{"Key":"of `containsSlice`","Fragments":["and","seems"]},{"Key":"`containsSlice` and","Fragments":["implements"]},{"Key":"and implements","Fragments":["the"]},{"Key":"implements the","Fragments":["check"]},{"Key":"check as","Fragments":["described"]},{"Key":"as described","Fragments":["in"]},{"Key":"- in","Fragments":["Scala","the"]},{"Key":"Scala Maps","Fragments":["are","are"]},{"Key":"are functions,","Fragments":["so"]},{"Key":"functions, so","Fragments":["you"]},{"Key":"can directly","Fragments":["say","zip"]},{"Key":"directly say","Fragments":["```transMap(c)```."]},{"Key":"- ```x","Fragments":["=\u003e"]},{"Key":"=\u003e f(x)```","Fragments":["can","to"]},{"Key":"f(x)``` can","Fragments":["be"]},{"Key":"be shortened","Fragments":["to"]},{"Key":"shortened to","Fragments":["just"]},{"Key":"just ```f```","Fragments":["(so"]},{"Key":"```f``` (so","Fragments":["called"]},{"Key":"(so called","Fragments":["\"eta"]},{"Key":"called \"eta","Fragments":["reduction\""]},{"Key":"\"eta reduction\"","Fragments":["in"]},{"Key":"reduction\" in","Fragments":["lambda"]},{"Key":"only tricky","Fragments":["part"]},{"Key":"tricky part","Fragments":["was"]},{"Key":"part was","Fragments":["getting"]},{"Key":"getting it","Fragments":["to"]},{"Key":"see only","Fragments":["numbers"]},{"Key":"only numbers","Fragments":["as"]},{"Key":"numbers as","Fragments":["respAll"]},{"Key":"* You're","Fragments":["traversing"]},{"Key":"You're traversing","Fragments":["the"]},{"Key":"traversing the","Fragments":["DNA"]},{"Key":"string five","Fragments":["times"]},{"Key":"five times","Fragments":["for"]},{"Key":"times for","Fragments":["something"]},{"Key":"something can","Fragments":["be"]},{"Key":"Using \"return\"","Fragments":["is"]},{"Key":"is neither","Fragments":["required"]},{"Key":"neither required","Fragments":["nor"]},{"Key":"required nor","Fragments":["encouraged"]},{"Key":"nor encouraged","Fragments":["in"]},{"Key":" `\"0\"","Fragments":["*"]},{"Key":"* 10`","Fragments":["is"]},{"Key":"10` is","Fragments":["nice."]},{"Key":"is nice.","Fragments":["I"]},{"Key":"nice. I","Fragments":["also"]},{"Key":"also stole","Fragments":["your"]},{"Key":"stole your","Fragments":["use"]},{"Key":"of `takeRight`","Fragments":["instead"]},{"Key":"`takeRight` instead","Fragments":["of"]},{"Key":"a substring","Fragments":["from"]},{"Key":"substring from","Fragments":["the"]},{"Key":" Heavily","Fragments":["refactored","inspired","regex"]},{"Key":"Heavily refactored","Fragments":["code","this"]},{"Key":"refactored code","Fragments":["with"]},{"Key":"code with","Fragments":["help","hard"]},{"Key":"with help","Fragments":["from"]},{"Key":"help from","Fragments":["the"]},{"Key":"the StackOverflow","Fragments":["community"]},{"Key":"StackOverflow community","Fragments":["to"]},{"Key":"community to","Fragments":["look"]},{"Key":"better both","Fragments":["visually"]},{"Key":"both visually","Fragments":["and"]},{"Key":"visually and","Fragments":["functionally."]},{"Key":"agree w/","Fragments":["@vivienne."]},{"Key":"consider either","Fragments":["removing"]},{"Key":"either removing","Fragments":["some"]},{"Key":"removing some","Fragments":["of"]},{"Key":"type declarations","Fragments":["altogether","to"]},{"Key":"declarations altogether","Fragments":["or"]},{"Key":"altogether or","Fragments":["using"]},{"Key":"using ```Seq```","Fragments":["instead"]},{"Key":"of ```Array```.","Fragments":["Arrays"]},{"Key":"```Array```. Arrays","Fragments":["are"]},{"Key":"Arrays are","Fragments":["special"]},{"Key":"are special","Fragments":["also"]},{"Key":"special also","Fragments":["in"]},{"Key":"also in","Fragments":["Scala,","terms"]},{"Key":"always start","Fragments":["thinking"]},{"Key":"start thinking","Fragments":["when"]},{"Key":"thinking when","Fragments":["somebody"]},{"Key":"when somebody","Fragments":["uses"]},{"Key":"somebody uses","Fragments":["them"]},{"Key":"uses them","Fragments":["explicitly."]},{"Key":"* w","Fragments":["=\u003e"]},{"Key":"w =\u003e","Fragments":["w"]},{"Key":"=\u003e w","Fragments":["can"]},{"Key":"w can","Fragments":["be"]},{"Key":"by identity","Fragments":[":),"]},{"Key":"identity :),","Fragments":["beside"]},{"Key":":), beside","Fragments":["that"]},{"Key":"beside that","Fragments":["everything"]},{"Key":"everything looks","Fragments":["cool!"]},{"Key":"a `synchronized`","Fragments":["block"]},{"Key":"`synchronized` block","Fragments":["as","as"]},{"Key":"block as","Fragments":["in","small","your"]},{"Key":"I'm aware","Fragments":["this"]},{"Key":"aware this","Fragments":["is"]},{"Key":"not thread-safe","Fragments":["but"]},{"Key":"thread-safe but","Fragments":["I"]},{"Key":"the concurrency","Fragments":["aspect"]},{"Key":"concurrency aspect","Fragments":["of"]},{"Key":"aspect of","Fragments":["scala"]},{"Key":"Oh thanks,","Fragments":["didn't"]},{"Key":"thanks, didn't","Fragments":["know"]},{"Key":"Looks great.","Fragments":["One"]},{"Key":"great. One","Fragments":["more"]},{"Key":"more minor","Fragments":["thing,"]},{"Key":"minor thing,","Fragments":["usually","you"]},{"Key":"thing, usually","Fragments":["a"]},{"Key":"usually a","Fragments":["method"]},{"Key":"method name","Fragments":["followed","helps","is"]},{"Key":"name followed","Fragments":["by"]},{"Key":"followed by","Fragments":["empty","3"]},{"Key":"by empty","Fragments":["parens"]},{"Key":"parens means","Fragments":["it"]},{"Key":"effect, so","Fragments":["that"]},{"Key":"be omitted","Fragments":["in","(http://docs.scala-lang.org/style/control-structures.html#curly-braces)."]},{"Key":"omitted in","Fragments":["this"]},{"Key":"why create","Fragments":["another"]},{"Key":"create another","Fragments":["year"]},{"Key":"another year","Fragments":["class,"]},{"Key":"year class,","Fragments":["the"]},{"Key":"class, the","Fragments":["code"]},{"Key":"code could","Fragments":["be"]},{"Key":"made much","Fragments":["simpler"]},{"Key":"much simpler","Fragments":["by","to","it","one-liner"]},{"Key":"simpler by","Fragments":["making","comparing"]},{"Key":"the exterenal","Fragments":["class"]},{"Key":"exterenal class","Fragments":["a"]},{"Key":"class a","Fragments":["case"]},{"Key":"class already,","Fragments":["removing"]},{"Key":"already, removing","Fragments":["the"]},{"Key":"for defining","Fragments":["the"]},{"Key":"the less","Fragments":["common"]},{"Key":"less common","Fragments":["List"]},{"Key":"common List","Fragments":["methods"]},{"Key":"List methods","Fragments":["that"]},{"Key":"this quick","Fragments":["and"]},{"Key":"and efficient","Fragments":["-"]},{"Key":"efficient -","Fragments":["see","I"]},{"Key":"- see","Fragments":["`containsSlice`","mine"]},{"Key":"see `containsSlice`","Fragments":["in"]},{"Key":"`containsSlice` in","Fragments":["particular."]},{"Key":"solution works","Fragments":["for"]},{"Key":"for small","Fragments":["lists,","enough"]},{"Key":"small lists,","Fragments":["but"]},{"Key":"lists, but","Fragments":["is"]},{"Key":"very inefficient","Fragments":["for","in"]},{"Key":"inefficient for","Fragments":["large"]},{"Key":"lists (even","Fragments":["1000"]},{"Key":"(even 1000","Fragments":["elements)."]},{"Key":"1000 elements).","Fragments":["Both"]},{"Key":"elements). Both","Fragments":["isSublist1"]},{"Key":"Both isSublist1","Fragments":["and"]},{"Key":"isSublist1 and","Fragments":["isSublist2"]},{"Key":"and isSublist2","Fragments":["are"]},{"Key":"isSublist2 are","Fragments":["tail"]},{"Key":"are tail","Fragments":["recursive,"]},{"Key":"tail recursive,","Fragments":["but","to"]},{"Key":"recursive, but","Fragments":["there"]},{"Key":"a mutual","Fragments":["recursion"]},{"Key":"mutual recursion","Fragments":["to"]},{"Key":"sublist in","Fragments":["the"]},{"Key":"the middle.","Fragments":["Is"]},{"Key":"middle. Is","Fragments":["there"]},{"Key":" isSublist1","Fragments":["recurs"]},{"Key":"isSublist1 recurs","Fragments":["on"]},{"Key":"recurs on","Fragments":["the","the"]},{"Key":"head of","Fragments":["the"]},{"Key":"list using","Fragments":["cons","append"]},{"Key":"using cons","Fragments":["::"]},{"Key":"cons ::","Fragments":["whereas"]},{"Key":":: whereas","Fragments":["isSublist2"]},{"Key":"whereas isSublist2","Fragments":["recurs"]},{"Key":"isSublist2 recurs","Fragments":["on"]},{"Key":"tail of","Fragments":["the","the","the","the"]},{"Key":"using append","Fragments":[":+."]},{"Key":"append :+.","Fragments":["Is"]},{"Key":":+. Is","Fragments":["this"]},{"Key":"this making","Fragments":["tail"]},{"Key":"making tail","Fragments":["recursion"]},{"Key":"not directly","Fragments":["pattern","in"]},{"Key":"directly pattern","Fragments":["match"]},{"Key":"the tuple","Fragments":["in","contents","accessors","would","for","return","instead"]},{"Key":"in ln","Fragments":["28?","12"]},{"Key":"ln 28?","Fragments":["(you"]},{"Key":"28? (you","Fragments":["can"]},{"Key":"then also","Fragments":["get","use"]},{"Key":"also get","Fragments":["rid","empty"]},{"Key":"the ```if```).","Fragments":["(then"]},{"Key":"```if```). (then","Fragments":["the"]},{"Key":"(then the","Fragments":["whole"]},{"Key":"whole ```case```","Fragments":["clause"]},{"Key":"```case``` clause","Fragments":["should"]},{"Key":"clause should","Fragments":["fit"]},{"Key":"should fit","Fragments":["into"]},{"Key":"fit into","Fragments":["just"]},{"Key":"into just","Fragments":["one","what"]},{"Key":"line. but","Fragments":["for"]},{"Key":"the future:","Fragments":["try"]},{"Key":"future: try","Fragments":["to"]},{"Key":"the ```=\u003e```","Fragments":["in"]},{"Key":"```=\u003e``` in","Fragments":["the"]},{"Key":"line as","Fragments":["the"]},{"Key":"the ```case```","Fragments":["or","instead"]},{"Key":"```case``` or","Fragments":["at"]},{"Key":"or at","Fragments":["least"]},{"Key":"least indent","Fragments":["if"]},{"Key":"indent if","Fragments":["you"]},{"Key":" ln","Fragments":["30"]},{"Key":"ln 30","Fragments":["could"]},{"Key":"30 could","Fragments":["be"]},{"Key":"a ```_","Fragments":["=\u003e"]},{"Key":"```_ =\u003e","Fragments":["...```."]},{"Key":"Nice concise","Fragments":["submission."]},{"Key":"For clarity","Fragments":["I"]},{"Key":"clarity I","Fragments":["would"]},{"Key":"have created","Fragments":["separate","only"]},{"Key":"created separate","Fragments":["functions"]},{"Key":"separate functions","Fragments":["for"]},{"Key":"each test","Fragments":["(e.g."]},{"Key":"(e.g. `def","Fragments":["isSilence(msg:"]},{"Key":"`def isSilence(msg:","Fragments":["String)"]},{"Key":"isSilence(msg: String)","Fragments":["="]},{"Key":"= msg.trim.isEmpty`","Fragments":["and"]},{"Key":"msg.trim.isEmpty` and","Fragments":["`case"]},{"Key":"and `case","Fragments":["phrase"]},{"Key":"`case phrase","Fragments":["if"]},{"Key":"phrase if","Fragments":["isSilence(phrase)`)"]},{"Key":"if isSilence(phrase)`)","Fragments":["because"]},{"Key":"isSilence(phrase)`) because","Fragments":["with"]},{"Key":"because with","Fragments":["the"]},{"Key":"shouting case","Fragments":["it"]},{"Key":"it clearly","Fragments":["gets"]},{"Key":"clearly gets","Fragments":["a"]},{"Key":"gets a","Fragments":["bit","map,"]},{"Key":"bit out","Fragments":["of"]},{"Key":"pick: there's","Fragments":["an"]},{"Key":"there's an","Fragments":["overuse"]},{"Key":"an overuse","Fragments":["of"]},{"Key":"overuse of","Fragments":["a"]},{"Key":"few bits","Fragments":["of"]},{"Key":"bits of","Fragments":["syntax."]},{"Key":"of syntax.","Fragments":["`if(phrase.trim.isEmpty)`"]},{"Key":"syntax. `if(phrase.trim.isEmpty)`","Fragments":["here"]},{"Key":"`if(phrase.trim.isEmpty)` here","Fragments":["can"]},{"Key":"here can","Fragments":["be"]},{"Key":"be collapsed","Fragments":["to","to"]},{"Key":"collapsed to","Fragments":["`if","`="]},{"Key":"to `if","Fragments":["phrase.trim.isEmpty`"]},{"Key":"`if phrase.trim.isEmpty`","Fragments":["and"]},{"Key":"phrase.trim.isEmpty` and","Fragments":["`="]},{"Key":"and `=","Fragments":["{"]},{"Key":"`= {","Fragments":["saying"]},{"Key":"{ saying","Fragments":["match"]},{"Key":"saying match","Fragments":["...","...`."]},{"Key":"match ...","Fragments":["}`"]},{"Key":"... }`","Fragments":["can"]},{"Key":"}` can","Fragments":["be"]},{"Key":"to `=","Fragments":["saying"]},{"Key":"`= saying","Fragments":["match"]},{"Key":"match ...`.","Fragments":["The"]},{"Key":"...`. The","Fragments":["added"]},{"Key":"The added","Fragments":["whitespace"]},{"Key":"added whitespace","Fragments":["you"]},{"Key":"whitespace you","Fragments":["get"]},{"Key":"get from","Fragments":["removing"]},{"Key":"from removing","Fragments":["extraneous"]},{"Key":"removing extraneous","Fragments":["syntax"]},{"Key":"extraneous syntax","Fragments":["helps"]},{"Key":"syntax helps","Fragments":["the"]},{"Key":"code breath","Fragments":["a"]},{"Key":"breath a","Fragments":["bit"]},{"Key":"Use the","Fragments":["`count`"]},{"Key":"* No","Fragments":["need","need"]},{"Key":"call `toCharArray`.","Fragments":["It"]},{"Key":"`toCharArray`. It","Fragments":["is"]},{"Key":"is automatically","Fragments":["done"]},{"Key":"automatically done","Fragments":["by"]},{"Key":"* Check","Fragments":["indentation"]},{"Key":"with domain","Fragments":["terms,"]},{"Key":"domain terms,","Fragments":["I"]},{"Key":"terms, I","Fragments":["think"]},{"Key":"the \"points\"","Fragments":["are"]},{"Key":"\"points\" are","Fragments":["\"nucleotides\"."]},{"Key":"good! You","Fragments":["may"]},{"Key":"choose not","Fragments":["to","to."]},{"Key":"of explicitness,","Fragments":["but"]},{"Key":"explicitness, but","Fragments":["if"]},{"Key":"you wanted,","Fragments":["Scala's"]},{"Key":"wanted, Scala's","Fragments":["precedence/operator"]},{"Key":"Scala's precedence/operator","Fragments":["syntax"]},{"Key":"precedence/operator syntax","Fragments":["means"]},{"Key":"syntax means","Fragments":["you"]},{"Key":"the dot","Fragments":["before"]},{"Key":"dot before","Fragments":["`count`"]},{"Key":"before `count`","Fragments":["and"]},{"Key":"the brackets","Fragments":["round"]},{"Key":"brackets round","Fragments":["`strand1"]},{"Key":"round `strand1","Fragments":["zip"]},{"Key":"`strand1 zip","Fragments":["strand2`"]},{"Key":"zip strand2`","Fragments":["either."]},{"Key":"It's easier","Fragments":["to"]},{"Key":"the toLowerCase","Fragments":["first,","part."]},{"Key":"toLowerCase first,","Fragments":["otherwise"]},{"Key":"first, otherwise","Fragments":["I"]},{"Key":"otherwise I","Fragments":["had"]},{"Key":"shorter solution","Fragments":["for","without"]},{"Key":"this using","Fragments":["a","pattern","match?"]},{"Key":"with findAllIn.","Fragments":["Additionally,"]},{"Key":"findAllIn. Additionally,","Fragments":["using"]},{"Key":"Additionally, using","Fragments":["words.count"]},{"Key":"using words.count","Fragments":["is"]},{"Key":"words.count is","Fragments":["an"]},{"Key":"an O(n^2)","Fragments":["algorithm"]},{"Key":"O(n^2) algorithm","Fragments":["for"]},{"Key":"algorithm for","Fragments":["this"]},{"Key":"this when","Fragments":["you"]},{"Key":"in O(n","Fragments":["*"]},{"Key":"O(n *","Fragments":["log"]},{"Key":"* log","Fragments":["n)"]},{"Key":"the creation","Fragments":["of"]},{"Key":"creation of","Fragments":["`words`","a"]},{"Key":"of `words`","Fragments":["into"]},{"Key":"`words` into","Fragments":["a"]},{"Key":"of separate","Fragments":["methods"]},{"Key":"to aid","Fragments":["readability?"]},{"Key":"First off,","Fragments":["welcome"]},{"Key":"off, welcome","Fragments":["to"]},{"Key":"welcome to","Fragments":["Scala!"]},{"Key":"to Scala!","Fragments":["I"]},{"Key":"Scala! I","Fragments":["am","don't"]},{"Key":"am going","Fragments":["to","to"]},{"Key":"be thorough","Fragments":["in"]},{"Key":"thorough in","Fragments":["my"]},{"Key":"my comments,","Fragments":["but"]},{"Key":"comments, but","Fragments":["don't"]},{"Key":"but don't","Fragments":["let"]},{"Key":"don't let","Fragments":["my"]},{"Key":"let my","Fragments":["verbosity"]},{"Key":"my verbosity","Fragments":["put"]},{"Key":"verbosity put","Fragments":["you"]},{"Key":"put you","Fragments":["off"]},{"Key":"you off","Fragments":["from"]},{"Key":"off from","Fragments":["your"]},{"Key":"from your","Fragments":["Scala","method","Java"]},{"Key":"your Scala","Fragments":["journey.","and"]},{"Key":"your hey()","Fragments":["method."]},{"Key":"hey() method.","Fragments":["The"]},{"Key":"method. The","Fragments":["fact"]},{"Key":"The fact","Fragments":["that"]},{"Key":"is compact","Fragments":["and","and"]},{"Key":"compact and","Fragments":["consists","maybe"]},{"Key":"and consists","Fragments":["only"]},{"Key":"consists only","Fragments":["of"]},{"Key":"your if","Fragments":["block","statements.","statement","else"]},{"Key":"very idiomatic","Fragments":["functional"]},{"Key":"idiomatic functional","Fragments":["Scala"]},{"Key":"functional Scala","Fragments":["code."]},{"Key":"Your isSilent()","Fragments":["function"]},{"Key":"isSilent() function","Fragments":["is"]},{"Key":"Your isShouting()","Fragments":["and"]},{"Key":"isShouting() and","Fragments":["isQuestion()","isQuestion()","isQuestion()"]},{"Key":"and isQuestion()","Fragments":["methods","functions.","in"]},{"Key":"isQuestion() methods","Fragments":["are"]},{"Key":"are kind","Fragments":["of"]},{"Key":"of complex.","Fragments":["These"]},{"Key":"complex. These","Fragments":["functions"]},{"Key":"These functions","Fragments":["are"]},{"Key":"only called","Fragments":["with","once"]},{"Key":"called with","Fragments":["specific"]},{"Key":"with specific","Fragments":["assumptions"]},{"Key":"specific assumptions","Fragments":["in"]},{"Key":"assumptions in","Fragments":["the","your"]},{"Key":"the hey()","Fragments":["function"]},{"Key":"hey() function","Fragments":["(e.g."]},{"Key":"function (e.g.","Fragments":["isQuestion()"]},{"Key":"(e.g. isQuestion()","Fragments":["will"]},{"Key":"isQuestion() will","Fragments":["only"]},{"Key":"only be","Fragments":["called"]},{"Key":"called if","Fragments":["we"]},{"Key":"if we","Fragments":["are","were","were","want"]},{"Key":"not shouting","Fragments":["based"]},{"Key":"shouting based","Fragments":["on"]},{"Key":"if statement","Fragments":["in","is","may","with","with","-","looks"]},{"Key":"statement in","Fragments":["hey())","the","the","`hey`"]},{"Key":"in hey())","Fragments":["yet"]},{"Key":"hey()) yet","Fragments":["you"]},{"Key":"yet you","Fragments":["are"]},{"Key":"are re-checking","Fragments":["these"]},{"Key":"re-checking these","Fragments":["assumptions"]},{"Key":"these assumptions","Fragments":["in"]},{"Key":"your isShouting()","Fragments":["and"]},{"Key":"A general","Fragments":["TDD"]},{"Key":"general TDD","Fragments":["tip"]},{"Key":"TDD tip","Fragments":["is"]},{"Key":"tip is","Fragments":["that"]},{"Key":"should only","Fragments":["write","respond"]},{"Key":"only write","Fragments":["code"]},{"Key":"write code","Fragments":["that","to"]},{"Key":"tests pass.","Fragments":["In"]},{"Key":"pass. In","Fragments":["this"]},{"Key":"are splitting","Fragments":["the"]},{"Key":"splitting the","Fragments":["message","words."]},{"Key":"the message","Fragments":["into","to"]},{"Key":"message into","Fragments":["words"]},{"Key":"into words","Fragments":["which"]},{"Key":"words which","Fragments":["does"]},{"Key":"does nothing","Fragments":["to"]},{"Key":"nothing to","Fragments":["help"]},{"Key":"to pass.","Fragments":["It"]},{"Key":"pass. It","Fragments":["is"]},{"Key":"is extra","Fragments":["code"]},{"Key":"extra code","Fragments":["that","to"]},{"Key":"the future","Fragments":["but"]},{"Key":"future but","Fragments":["is"]},{"Key":"This gets","Fragments":["us"]},{"Key":"gets us","Fragments":["to"]},{"Key":"us to","Fragments":["your","always"]},{"Key":"your Feature#envy","Fragments":["comment."]},{"Key":"Feature#envy comment.","Fragments":["Since"]},{"Key":"comment. Since","Fragments":["your"]},{"Key":"your can","Fragments":["get"]},{"Key":"the wordsOf()","Fragments":["function"]},{"Key":"wordsOf() function","Fragments":["and"]},{"Key":"and collapse","Fragments":["isShouting()"]},{"Key":"collapse isShouting()","Fragments":["and"]},{"Key":"isQuestion() in","Fragments":["to"]},{"Key":"in to","Fragments":["simple","finding"]},{"Key":"to simple","Fragments":["statements"]},{"Key":"simple statements","Fragments":["the"]},{"Key":"statements the","Fragments":["contents"]},{"Key":"the contents","Fragments":["of"]},{"Key":"contents of","Fragments":["these"]},{"Key":"these functions","Fragments":["can","you"]},{"Key":"functions can","Fragments":["be","then"]},{"Key":"be plugged","Fragments":["right"]},{"Key":"plugged right","Fragments":["into"]},{"Key":"right into","Fragments":["your"]},{"Key":"into your","Fragments":["if"]},{"Key":"if statements.","Fragments":["This"]},{"Key":"statements. This","Fragments":["won't","has"]},{"Key":"This won't","Fragments":["necessarily"]},{"Key":"won't necessarily","Fragments":["be"]},{"Key":"necessarily be","Fragments":["more"]},{"Key":"more idiomatic,","Fragments":["it"]},{"Key":"idiomatic, it","Fragments":["just"]},{"Key":"just addresses","Fragments":["the"]},{"Key":"addresses the","Fragments":["concern"]},{"Key":"the concern","Fragments":["that"]},{"Key":"concern that","Fragments":["you"]},{"Key":"The last","Fragments":["thing"]},{"Key":"last thing","Fragments":["I"]},{"Key":"to bring","Fragments":["up"]},{"Key":"bring up","Fragments":["is"]},{"Key":"up is","Fragments":["that"]},{"Key":"Scala a","Fragments":["string","week","String","`Map`"]},{"Key":"a Seq\\[Char\\]","Fragments":["(through"]},{"Key":"Seq\\[Char\\] (through","Fragments":["implicits"]},{"Key":"(through implicits","Fragments":["so"]},{"Key":"implicits so","Fragments":["it"]},{"Key":"be obvious","Fragments":["in"]},{"Key":"obvious in","Fragments":["the"]},{"Key":"Scala docs)","Fragments":["so"]},{"Key":"docs) so","Fragments":["you"]},{"Key":"use all","Fragments":["the","the"]},{"Key":"on Seq.","Fragments":["I"]},{"Key":"Seq. I","Fragments":["can't"]},{"Key":"can't tell","Fragments":["whether"]},{"Key":"tell whether","Fragments":["you"]},{"Key":"you realize","Fragments":["that"]},{"Key":"realize that","Fragments":["based","accessing"]},{"Key":"that based","Fragments":["on"]},{"Key":"split out","Fragments":["the"]},{"Key":"Hi guys,","Fragments":["I'm"]},{"Key":"guys, I'm","Fragments":["coming"]},{"Key":"I'm coming","Fragments":["from"]},{"Key":"from ruby","Fragments":["trying"]},{"Key":"ruby trying","Fragments":["to"]},{"Key":"grasp statically","Fragments":["type"]},{"Key":"statically type","Fragments":["languages"]},{"Key":"type languages","Fragments":["and"]},{"Key":"languages and","Fragments":["functional"]},{"Key":"and functional","Fragments":["programming."]},{"Key":"functional programming.","Fragments":["Every"]},{"Key":"programming. Every","Fragments":["advise"]},{"Key":"Every advise","Fragments":["you"]},{"Key":"advise you","Fragments":["could"]},{"Key":"give me,","Fragments":["I"]},{"Key":"be very","Fragments":["thankful.","smart,"]},{"Key":"like about","Fragments":["this","this"]},{"Key":"exercise, is","Fragments":["that"]},{"Key":"I pass","Fragments":["the"]},{"Key":"message to","Fragments":["each","`require`.","IAE,"]},{"Key":"to each","Fragments":["of","case","element,"]},{"Key":"the methods.","Fragments":["This"]},{"Key":"methods. This","Fragments":["looks"]},{"Key":"like Feature#envy","Fragments":["to"]},{"Key":"Feature#envy to","Fragments":["me."]},{"Key":"clear what","Fragments":["the"]},{"Key":"function input","Fragments":["is."]},{"Key":" right,","Fragments":["this"]},{"Key":"right, this","Fragments":["syntax","solution"]},{"Key":"this syntax","Fragments":["is"]},{"Key":"syntax is","Fragments":["a","also"]},{"Key":"bit peculiar,","Fragments":["but"]},{"Key":"peculiar, but","Fragments":["SortedMap's"]},{"Key":"but SortedMap's","Fragments":["constructor"]},{"Key":"SortedMap's constructor","Fragments":["needs"]},{"Key":"constructor needs","Fragments":["vararg"]},{"Key":"needs vararg","Fragments":["pairs"]},{"Key":"vararg pairs","Fragments":["```(A,"]},{"Key":"pairs ```(A,","Fragments":["B)*```"]},{"Key":"```(A, B)*```","Fragments":["as"]},{"Key":"B)*``` as","Fragments":["arguments."]},{"Key":" ```myDB.toSeq```","Fragments":["turns"]},{"Key":"```myDB.toSeq``` turns","Fragments":["a"]},{"Key":"turns a","Fragments":["Map"]},{"Key":"into those","Fragments":["pairs."]},{"Key":" finally,","Fragments":["```:_*```"]},{"Key":"finally, ```:_*```","Fragments":["is"]},{"Key":"```:_*``` is","Fragments":["a"]},{"Key":"type cast","Fragments":["to"]},{"Key":"cast to","Fragments":["the"]},{"Key":"required vararg","Fragments":["format."]},{"Key":" here","Fragments":["is"]},{"Key":"an answer","Fragments":["to"]},{"Key":"answer to","Fragments":["a","the"]},{"Key":"very similar","Fragments":["problem:","to","to","to"]},{"Key":"similar problem:","Fragments":["http://stackoverflow.com/questions/5495428/scala-how-to-pass-an-expanded-list-as-varargs-into-a-method"]},{"Key":"just wondering","Fragments":["about","why","if","and"]},{"Key":"wondering about","Fragments":["your"]},{"Key":"comment of","Fragments":["the"]},{"Key":"the SortedMap.","Fragments":["I"]},{"Key":"SortedMap. I","Fragments":["checked"]},{"Key":"I checked","Fragments":["your","with"]},{"Key":"checked your","Fragments":["solution"]},{"Key":"solution (`SortedMap(myDB.toSeq:_*)`),","Fragments":["but"]},{"Key":"(`SortedMap(myDB.toSeq:_*)`), but","Fragments":["I'm"]},{"Key":"I'm afraid","Fragments":["I",":)"]},{"Key":"afraid I","Fragments":["don't"]},{"Key":"understand that","Fragments":["syntax","preference."]},{"Key":"that syntax","Fragments":["yet."]},{"Key":" @torey","Fragments":["aha"]},{"Key":"@torey aha","Fragments":["cool,"]},{"Key":"that \"vararg","Fragments":["cast\""]},{"Key":"\"vararg cast\"","Fragments":["would"]},{"Key":"cast\" would","Fragments":["be"]},{"Key":"be how","Fragments":["I"]},{"Key":"how I","Fragments":["would","would","did","count","am"]},{"Key":"Scala (just","Fragments":["starting"]},{"Key":"(just starting","Fragments":["to"]},{"Key":" many","Fragments":["thanks"]},{"Key":"not expose","Fragments":["a","a","mutable","a","a"]},{"Key":"expose a","Fragments":["mutable","```var```","mutable","mutable","mutable"]},{"Key":"Map to","Fragments":["the"]},{"Key":"- try","Fragments":["to","to"]},{"Key":"use what","Fragments":["the","Scala"]},{"Key":"Scala Collections","Fragments":["offer","already"]},{"Key":"Collections offer","Fragments":["instead"]},{"Key":"offer instead","Fragments":["of"]},{"Key":"doing it","Fragments":["yourself:","verbosively","the","that","that"]},{"Key":"it yourself:","Fragments":["what"]},{"Key":"yourself: what","Fragments":["about"]},{"Key":"a SortedMap","Fragments":["and"]},{"Key":"SortedMap and","Fragments":["mapValues?"]},{"Key":"why HashMap","Fragments":["instead"]},{"Key":"HashMap instead","Fragments":["of"]},{"Key":"could improve","Fragments":["readability","readibility","it","readability!"]},{"Key":"readability by","Fragments":["making"]},{"Key":"making use","Fragments":["of"]},{"Key":"input :)","Fragments":["I"]},{"Key":":) I","Fragments":["wasn't","also","hope"]},{"Key":"wasn't 100%","Fragments":["happy"]},{"Key":"100% happy","Fragments":["with"]},{"Key":"if/else inside","Fragments":["of"]},{"Key":"pattern match,","Fragments":["but"]},{"Key":"match, but","Fragments":["I"]},{"Key":"think fitting","Fragments":["that"]},{"Key":"fitting that","Fragments":["into"]},{"Key":"that into","Fragments":["a"]},{"Key":"regex as","Fragments":["well"]},{"Key":"well would","Fragments":["have"]},{"Key":"have made","Fragments":["the","life","explicit"]},{"Key":"code longer","Fragments":["and"]},{"Key":"longer and","Fragments":["worse","more"]},{"Key":"and worse","Fragments":["to"]},{"Key":"worse to","Fragments":["read."]},{"Key":"you linked","Fragments":["makes"]},{"Key":"linked makes","Fragments":["very"]},{"Key":"makes very","Fragments":["nice"]},{"Key":"very nice","Fragments":["use","function","solution."]},{"Key":"of Scalas","Fragments":["high"]},{"Key":"Scalas high","Fragments":["level"]},{"Key":"level pattern","Fragments":["matching,"]},{"Key":"matching, definitely","Fragments":["a"]},{"Key":" http://exercism.io/submissions/0147832e7ab4278ac0542eca","Fragments":["has"]},{"Key":"http://exercism.io/submissions/0147832e7ab4278ac0542eca has","Fragments":["the"]},{"Key":"best pattern","Fragments":["matching"]},{"Key":"matching solution","Fragments":["I've"]},{"Key":"solution I've","Fragments":["seen","seen"]},{"Key":"seen but","Fragments":["your"]},{"Key":"of regular","Fragments":["expressions"]},{"Key":"expressions is","Fragments":["very","necessarily"]},{"Key":"very interesting.","Fragments":["I"]},{"Key":"interesting. I","Fragments":["didn't"]},{"Key":"about \\\\p{Punct}!","Fragments":["Interesting"]},{"Key":"\\\\p{Punct}! Interesting","Fragments":["and"]},{"Key":"Interesting and","Fragments":["easy"]},{"Key":"match punctuation","Fragments":["marks!"]},{"Key":" mutable","Fragments":["private"]},{"Key":"mutable private","Fragments":["_db"]},{"Key":"The question","Fragments":["detection","of"]},{"Key":"question detection","Fragments":["is"]},{"Key":"detection is","Fragments":["a"]},{"Key":"bit weak.","Fragments":["It's"]},{"Key":"weak. It's","Fragments":["certainly"]},{"Key":"It's certainly","Fragments":["very","less"]},{"Key":"certainly very","Fragments":["English-language"]},{"Key":"very English-language","Fragments":["specific."]},{"Key":"with implicit","Fragments":["conversion","conversion","conversion"]},{"Key":"conversion of","Fragments":["Function2","Function2","Function2"]},{"Key":"of Function2","Fragments":["to","to","to"]},{"Key":"Function2 to","Fragments":["tupled.","tupled.","tupled."]},{"Key":"interesting, a","Fragments":["solution"]},{"Key":"w/ zipWithIndex.","Fragments":[":-)"]},{"Key":"much arithmetic","Fragments":["on"]},{"Key":"arithmetic on","Fragments":["index"]},{"Key":"on index","Fragments":["and"]},{"Key":"and position","Fragments":["to"]},{"Key":"position to","Fragments":["my"]},{"Key":"taste. makes","Fragments":["it"]},{"Key":"the true","Fragments":["structure"]},{"Key":"true structure","Fragments":["of"]},{"Key":"structure of","Fragments":["the","the"]},{"Key":"the poem","Fragments":["(the"]},{"Key":"poem (the","Fragments":["\"grammar\")"]},{"Key":"(the \"grammar\")","Fragments":["is"]},{"Key":"\"grammar\") is","Fragments":["not"]},{"Key":"not apparent","Fragments":["to"]},{"Key":"apparent to","Fragments":["me."]},{"Key":"use ```(0","Fragments":["until"]},{"Key":"```(0 until","Fragments":["position)```","s1.length)```."]},{"Key":"until position)```","Fragments":["instead"]},{"Key":"position)``` instead","Fragments":["of"]},{"Key":"of ```(0","Fragments":["to"]},{"Key":"```(0 to","Fragments":["position"]},{"Key":"to position","Fragments":["-"]},{"Key":"position -","Fragments":["1)```."]},{"Key":"could compromise","Fragments":["(like"]},{"Key":"compromise (like","Fragments":["I"]},{"Key":"(like I","Fragments":["did"]},{"Key":"my solution)","Fragments":["and"]},{"Key":"solution) and","Fragments":["filter"]},{"Key":"and filter","Fragments":["out","into"]},{"Key":"all non-digits,","Fragments":["then"]},{"Key":"non-digits, then","Fragments":["using"]},{"Key":"then using","Fragments":["some","`filter`"]},{"Key":"using some","Fragments":["regex","cool","integer"]},{"Key":"some regex","Fragments":["on","for"]},{"Key":"regex on","Fragments":["it?"]},{"Key":"A version","Fragments":["not","using"]},{"Key":"version not","Fragments":["using"]},{"Key":"regular expression,","Fragments":["note","which"]},{"Key":"expression, note","Fragments":["this"]},{"Key":"note this","Fragments":["would"]},{"Key":"allow all","Fragments":["sorts"]},{"Key":"all sorts","Fragments":["of"]},{"Key":"sorts of","Fragments":["input"]},{"Key":"input as","Fragments":["long","well."]},{"Key":"it contained","Fragments":["the"]},{"Key":"contained the","Fragments":["right"]},{"Key":"right number","Fragments":["of"]},{"Key":"of digits,","Fragments":["the"]},{"Key":"digits, the","Fragments":["previous"]},{"Key":"previous version","Fragments":["with","defined","this"]},{"Key":"a regEx","Fragments":["require"]},{"Key":"regEx require","Fragments":["that"]},{"Key":"input conforms","Fragments":["to"]},{"Key":"conforms to","Fragments":["the"]},{"Key":"the regEx","Fragments":["phone"]},{"Key":"regEx phone","Fragments":["format."]},{"Key":"Included @lottie's","Fragments":["suggestions."]},{"Key":"using ```foldLeft```","Fragments":["instead","w/"]},{"Key":"```foldLeft``` instead","Fragments":["of"]},{"Key":" @robyn","Fragments":["not"]},{"Key":"@robyn not","Fragments":["a"]},{"Key":"big fan","Fragments":["of"]},{"Key":"using one","Fragments":["or"]},{"Key":"or two","Fragments":["letter"]},{"Key":"two letter","Fragments":["names"]},{"Key":"for variables,","Fragments":["tips"]},{"Key":"variables, tips","Fragments":["the"]},{"Key":"tips the","Fragments":["balance"]},{"Key":"the balance","Fragments":["of"]},{"Key":"balance of","Fragments":["readability"]},{"Key":"of readability","Fragments":["in","is"]},{"Key":"readability in","Fragments":["the"]},{"Key":"the wrong","Fragments":["direction","way"]},{"Key":"wrong direction","Fragments":["I"]},{"Key":"direction I","Fragments":["think,"]},{"Key":"I think,","Fragments":["especially","so"]},{"Key":"think, especially","Fragments":["as"]},{"Key":"especially as","Fragments":["the"]},{"Key":" @camren","Fragments":["in"]},{"Key":"@camren in","Fragments":["general"]},{"Key":"general I","Fragments":["agree,"]},{"Key":"agree, but","Fragments":["for"]},{"Key":"for those","Fragments":["one-liners"]},{"Key":"those one-liners","Fragments":["\"function\""]},{"Key":"one-liners \"function\"","Fragments":["is"]},{"Key":"\"function\" is","Fragments":["not"]},{"Key":"really more","Fragments":["instructive"]},{"Key":"more instructive","Fragments":["than"]},{"Key":"instructive than","Fragments":["\"f\""]},{"Key":"than \"f\"","Fragments":["IMO."]},{"Key":"did, why?","Fragments":[":)"]},{"Key":"why? :)","Fragments":["I"]},{"Key":"I misnamed","Fragments":["the"]},{"Key":"misnamed the","Fragments":["map"]},{"Key":"that maps","Fragments":["decimal","all"]},{"Key":"maps decimal","Fragments":["values"]},{"Key":"decimal values","Fragments":["to"]},{"Key":"values to","Fragments":["roman"]},{"Key":"to roman","Fragments":["numerals"]},{"Key":"roman numerals","Fragments":[":)"]},{"Key":"Wow! Did","Fragments":["you"]},{"Key":"this algorithm","Fragments":["yourself?"]},{"Key":"algorithm yourself?","Fragments":[":-)"]},{"Key":"matching, recursive","Fragments":["approach"]},{"Key":"approach for","Fragments":["succinctness."]},{"Key":"This function","Fragments":["can"]},{"Key":"function can","Fragments":["be","replace","also"]},{"Key":"using `map`","Fragments":["or","on"]},{"Key":"`map` or","Fragments":["`flatMap`"]},{"Key":"or `flatMap`","Fragments":["without"]},{"Key":"`flatMap` without","Fragments":["resorting"]},{"Key":"without resorting","Fragments":["to"]},{"Key":"resorting to","Fragments":["a"]},{"Key":"a local","Fragments":["mutable","member"]},{"Key":"local mutable","Fragments":["var."]},{"Key":" Ah","Fragments":["good"]},{"Key":"Ah good","Fragments":["point"]},{"Key":"good point","Fragments":["thanks!","indeed."]},{"Key":"Ok, but","Fragments":["README.md"]},{"Key":"but README.md","Fragments":["contains;"]},{"Key":" \"Keep","Fragments":["your","your"]},{"Key":"\"Keep your","Fragments":["hands","hands"]},{"Key":"Heavily inspired","Fragments":["by"]},{"Key":"by [crackofdusk](http://exercism.io/crackofdusk)'s","Fragments":["solution."]},{"Key":"[crackofdusk](http://exercism.io/crackofdusk)'s solution.","Fragments":["I"]},{"Key":"was aware","Fragments":["of"]},{"Key":"aware of","Fragments":["unapply","this.","the"]},{"Key":"of unapply","Fragments":["but","to","here"]},{"Key":"unapply but","Fragments":["wasn't"]},{"Key":"but wasn't","Fragments":["quite","sure"]},{"Key":"wasn't quite","Fragments":["sure"]},{"Key":"quite sure","Fragments":["how"]},{"Key":"it. This","Fragments":["approach"]},{"Key":"This approach","Fragments":["comes"]},{"Key":"approach comes","Fragments":["with"]},{"Key":"comes with","Fragments":["the"]},{"Key":"benefit that","Fragments":["the","you"]},{"Key":"the change","Fragments":["is"]},{"Key":"is isolated","Fragments":["to"]},{"Key":"isolated to","Fragments":["exactly"]},{"Key":"to exactly","Fragments":["one"]},{"Key":"exactly one","Fragments":["place.","value,"]},{"Key":"one place.","Fragments":["It"]},{"Key":"place. It","Fragments":["further"]},{"Key":"It further","Fragments":["is"]},{"Key":"further is","Fragments":["expressing"]},{"Key":"is expressing","Fragments":["the"]},{"Key":"expressing the","Fragments":["intent"]},{"Key":"the intent","Fragments":["in","more"]},{"Key":"best possible","Fragments":["way"]},{"Key":"possible way","Fragments":["(IMO)."]},{"Key":" Perfect.","Fragments":["The"]},{"Key":"Perfect. The","Fragments":["only"]},{"Key":"problem (my","Fragments":["solution"]},{"Key":"(my solution","Fragments":["suffers"]},{"Key":"solution suffers","Fragments":["from"]},{"Key":"suffers from","Fragments":["the"]},{"Key":"same too)","Fragments":["that"]},{"Key":"too) that","Fragments":["this"]},{"Key":"not tailrecursive","Fragments":["so"]},{"Key":"tailrecursive so","Fragments":["we"]},{"Key":"we get","Fragments":["stackoverflow","a","a","what"]},{"Key":"get stackoverflow","Fragments":["for"]},{"Key":"stackoverflow for","Fragments":["big"]},{"Key":"for big","Fragments":["lists.","numbers.","numbers."]},{"Key":"the threads","Fragments":["issue"]},{"Key":"threads issue","Fragments":["as"]},{"Key":"issue as","Fragments":["I've"]},{"Key":"as I've","Fragments":["never"]},{"Key":"I've never","Fragments":["done","considered","gotten"]},{"Key":"never done","Fragments":["explicit"]},{"Key":"done explicit","Fragments":["work"]},{"Key":"explicit work","Fragments":["with"]},{"Key":"work with","Fragments":["threads","scala,","a","Java"]},{"Key":"with threads","Fragments":["before."]},{"Key":"threads before.","Fragments":["Didn't"]},{"Key":"before. Didn't","Fragments":["realize"]},{"Key":"Didn't realize","Fragments":["it","I"]},{"Key":"realize it","Fragments":["was"]},{"Key":"was so","Fragments":["simple."]},{"Key":"so simple.","Fragments":["Heavily"]},{"Key":"simple. Heavily","Fragments":["refactored"]},{"Key":"refactored this","Fragments":["code"]},{"Key":"for iteration","Fragments":["2."]},{"Key":"Should be","Fragments":["much","written","dealt"]},{"Key":"functional now","Fragments":["@demarcus"]},{"Key":"prefer four","Fragments":["types:"]},{"Key":"four types:","Fragments":["`Statement`,"]},{"Key":"types: `Statement`,","Fragments":["`Shout`,"]},{"Key":"`Statement`, `Shout`,","Fragments":["`Question`"]},{"Key":"`Shout`, `Question`","Fragments":["and"]},{"Key":"and `Silence`.","Fragments":["You"]},{"Key":"`Silence`. You","Fragments":["would"]},{"Key":"a two-step","Fragments":["process:"]},{"Key":"two-step process:","Fragments":["parsing"]},{"Key":"process: parsing","Fragments":["into"]},{"Key":"parsing into","Fragments":["one"]},{"Key":"those four,","Fragments":["and"]},{"Key":"four, and","Fragments":["then"]},{"Key":"then pattern","Fragments":["matching"]},{"Key":"the type.","Fragments":["They","Also"]},{"Key":"type. They","Fragments":["wouldn't"]},{"Key":"They wouldn't","Fragments":["need"]},{"Key":"wouldn't need","Fragments":["to"]},{"Key":"the sentence","Fragments":["itself,","**ends"]},{"Key":"sentence itself,","Fragments":["as"]},{"Key":"itself, as","Fragments":["it"]},{"Key":"it wouldn't","Fragments":["be","be"]},{"Key":"wouldn't be","Fragments":["used.","a"]},{"Key":"use `value.forall","Fragments":["{"]},{"Key":"`value.forall {","Fragments":["!_.isLowerCase"]},{"Key":"{ !_.isLowerCase","Fragments":["}`"]},{"Key":"!_.isLowerCase }`","Fragments":["instead"]},{"Key":"}` instead","Fragments":["of","of","of"]},{"Key":"string uppercase","Fragments":["and"]},{"Key":"then comparing","Fragments":["it."]},{"Key":"comparing it.","Fragments":["Either"]},{"Key":"it. Either","Fragments":["is"]},{"Key":"Either is","Fragments":["good"]},{"Key":"Avoid `.equals`.","Fragments":["You"]},{"Key":"`.equals`. You","Fragments":["can"]},{"Key":"What could","Fragments":["be"]},{"Key":"string wrapped","Fragments":["inside"]},{"Key":"wrapped inside","Fragments":["Sentence?"]},{"Key":"the `generateNumber`","Fragments":["method"]},{"Key":"`generateNumber` method","Fragments":["could"]},{"Key":"could benefit","Fragments":["from"]},{"Key":"a renaming.","Fragments":["\"Generate\""]},{"Key":"renaming. \"Generate\"","Fragments":["implies"]},{"Key":"\"Generate\" implies","Fragments":["to"]},{"Key":"implies to","Fragments":["me"]},{"Key":"a \"random\"","Fragments":["creation","name"]},{"Key":"\"random\" creation","Fragments":["of"]},{"Key":"a number,","Fragments":["where"]},{"Key":"number, where","Fragments":["this"]},{"Key":"where this","Fragments":["method"]},{"Key":"this method","Fragments":["converts","only"]},{"Key":"method converts","Fragments":["a"]},{"Key":"converts a","Fragments":["string"]},{"Key":"what if","Fragments":["instead","I"]},{"Key":"if instead","Fragments":["of"]},{"Key":"using ``Map[Char,","Fragments":["Int]``"]},{"Key":"``Map[Char, Int]``","Fragments":["you"]},{"Key":"Int]`` you","Fragments":["relied"]},{"Key":"you relied","Fragments":["more"]},{"Key":"relied more","Fragments":["on"]},{"Key":"more on","Fragments":["the","the"]},{"Key":"the word","Fragments":["and","function","param"]},{"Key":"the possible","Fragments":["anagram"]},{"Key":"possible anagram","Fragments":["are"]},{"Key":"anagram are","Fragments":["equal"]},{"Key":"equal when","Fragments":["they"]},{"Key":"when they","Fragments":["are"]},{"Key":"sorted, so","Fragments":["``word.sorted"]},{"Key":"so ``word.sorted","Fragments":["=="]},{"Key":"``word.sorted ==","Fragments":["anagram.sorted``."]},{"Key":"== anagram.sorted``.","Fragments":["I"]},{"Key":"anagram.sorted``. I","Fragments":["think"]},{"Key":"would simplify","Fragments":["the"]},{"Key":"code quite","Fragments":["a"]},{"Key":"Scala Lists","Fragments":["are"]},{"Key":"Lists are","Fragments":["singly"]},{"Key":"are singly","Fragments":["linked"]},{"Key":"singly linked","Fragments":["lists,","list,"]},{"Key":"linked lists,","Fragments":["so","so"]},{"Key":"lists, so","Fragments":["appending","maybe"]},{"Key":"so appending","Fragments":["is","is"]},{"Key":"appending is","Fragments":["an","O(n)."]},{"Key":"an O(n)","Fragments":["operation,","sized"]},{"Key":"O(n) operation,","Fragments":["while"]},{"Key":"operation, while","Fragments":["prepending"]},{"Key":"while prepending","Fragments":["is"]},{"Key":"prepending is","Fragments":["O(1)."]},{"Key":"is O(1).","Fragments":["Prepending"]},{"Key":"O(1). Prepending","Fragments":["on"]},{"Key":"Prepending on","Fragments":["each"]},{"Key":"each step","Fragments":["then"]},{"Key":"step then","Fragments":["reversing"]},{"Key":"then reversing","Fragments":["the","the"]},{"Key":"reversing the","Fragments":["result","List","final"]},{"Key":"result at","Fragments":["the"]},{"Key":"end will","Fragments":["be"]},{"Key":"matching. In","Fragments":["the"]},{"Key":"cases for","Fragments":["`0`,","Hamming"]},{"Key":"for `0`,","Fragments":["`4`,"]},{"Key":"`0`, `4`,","Fragments":["`5`,"]},{"Key":"`4`, `5`,","Fragments":["and"]},{"Key":"`5`, and","Fragments":["`9`"]},{"Key":"and `9`","Fragments":["you"]},{"Key":"`9` you","Fragments":["can"]},{"Key":"the literals","Fragments":["in"]},{"Key":"literals in","Fragments":["the"]},{"Key":"pattern rather","Fragments":["than"]},{"Key":"than in","Fragments":["the"]},{"Key":" num","Fragments":["match"]},{"Key":"num match","Fragments":["{"]},{"Key":"case 0","Fragments":["=\u003e"]},{"Key":"0 =\u003e","Fragments":["\"Zero\""]},{"Key":"case 2","Fragments":["=\u003e"]},{"Key":"2 =\u003e","Fragments":["\"One\""]},{"Key":"_ =\u003e","Fragments":["\"Many\"","Can","\"Whatever.\"","\"Whatever.\"","\"0000000000\""]},{"Key":"only niggle","Fragments":["is"]},{"Key":"niggle is","Fragments":["you"]},{"Key":"is you","Fragments":["have","concern,"]},{"Key":"string twice","Fragments":["to"]},{"Key":"twice to","Fragments":["parse"]},{"Key":"parse it","Fragments":["(once","without"]},{"Key":"it (once","Fragments":["in"]},{"Key":"(once in","Fragments":["the"]},{"Key":"the reverse,","Fragments":["and"]},{"Key":"reverse, and","Fragments":["once"]},{"Key":"the fold).","Fragments":["You"]},{"Key":"fold). You","Fragments":["can"]},{"Key":"can reduce","Fragments":["that"]},{"Key":"reduce that","Fragments":["to"]},{"Key":"that to","Fragments":["a"]},{"Key":"pass from","Fragments":["left"]},{"Key":"from left","Fragments":["to"]},{"Key":"And of","Fragments":["course"]},{"Key":"course you","Fragments":["can","have"]},{"Key":"can parse","Fragments":["it"]},{"Key":"without calling","Fragments":["`toString`"]},{"Key":"calling `toString`","Fragments":["on"]},{"Key":"`toString` on","Fragments":["the"]},{"Key":"number at","Fragments":["all."]},{"Key":"of regex:","Fragments":["why"]},{"Key":"regex: why","Fragments":["not"]},{"Key":"filter the","Fragments":["numbers","whole"]},{"Key":"the numbers","Fragments":["directly?","test,"]},{"Key":"this map-replace","Fragments":["orgy:"]},{"Key":"map-replace orgy:","Fragments":["use"]},{"Key":"orgy: use","Fragments":["a"]},{"Key":"single `map`","Fragments":["operation"]},{"Key":"`map` operation","Fragments":["on"]},{"Key":"operation on","Fragments":["the"]},{"Key":"the list.","Fragments":["and"]},{"Key":"list. and","Fragments":["as"]},{"Key":"and as","Fragments":["operation","for","soon"]},{"Key":"as operation","Fragments":["a"]},{"Key":"operation a","Fragments":["`Map`"]},{"Key":"`Map` (as","Fragments":["a"]},{"Key":"(as a","Fragments":["`PartialFunction`)","domino","String"]},{"Key":"a `PartialFunction`)","Fragments":["suggests"]},{"Key":"`PartialFunction`) suggests","Fragments":["itself?!"]},{"Key":"(I am","Fragments":["also"]},{"Key":"am also","Fragments":["not"]},{"Key":"also not","Fragments":["sure","sure"]},{"Key":"just reuse","Fragments":["`PrimeFactors`"]},{"Key":"reuse `PrimeFactors`","Fragments":["here)."]},{"Key":"a pretty","Fragments":["nice","trivial","nifty"]},{"Key":"pretty nice","Fragments":["solution."]},{"Key":"nice solution.","Fragments":["However,"]},{"Key":"solution. However,","Fragments":["wouldn't"]},{"Key":"However, wouldn't","Fragments":["lower-casing"]},{"Key":"wouldn't lower-casing","Fragments":["and"]},{"Key":"lower-casing and","Fragments":["calling"]},{"Key":"and calling","Fragments":["sorted"]},{"Key":"calling sorted","Fragments":["do"]},{"Key":"sorted do","Fragments":["the"]},{"Key":"thing without","Fragments":["the"]},{"Key":"the implicit","Fragments":["class?","class","conversion)","declaration","classes","in"]},{"Key":"say `in","Fragments":["map"]},{"Key":"`in map","Fragments":["rnaMap`"]},{"Key":"map rnaMap`","Fragments":["(also"]},{"Key":"rnaMap` (also","Fragments":["no"]},{"Key":"(also no","Fragments":["`mkString`"]},{"Key":"no `mkString`","Fragments":["necessary)."]},{"Key":"Nice, other","Fragments":["than"]},{"Key":"few variable","Fragments":["namings,"]},{"Key":"variable namings,","Fragments":["(anotherSeq"]},{"Key":"namings, (anotherSeq","Fragments":["should"]},{"Key":"(anotherSeq should","Fragments":["be"]},{"Key":"be something","Fragments":["like","in"]},{"Key":"like \"potentialAnagrams\",","Fragments":["the"]},{"Key":"\"potentialAnagrams\", the","Fragments":["arg"]},{"Key":"the arg","Fragments":["of","list","along"]},{"Key":"the firsr","Fragments":["filter"]},{"Key":"firsr filter","Fragments":["call"]},{"Key":"filter call","Fragments":["should"]},{"Key":"call should","Fragments":["be","not"]},{"Key":"be either","Fragments":["named","an"]},{"Key":"either named","Fragments":["or"]},{"Key":"named or","Fragments":["_)"]},{"Key":"would name","Fragments":["the"]},{"Key":"name the","Fragments":["strings"]},{"Key":"strings s1","Fragments":["and"]},{"Key":"and short!","Fragments":["You"]},{"Key":"short! You","Fragments":["don't"]},{"Key":"don't strictly","Fragments":["need"]},{"Key":"strictly need","Fragments":["the"]},{"Key":"the `:","Fragments":["String`"]},{"Key":"`: String`","Fragments":["for"]},{"Key":"String` for","Fragments":["the"]},{"Key":"value type","Fragments":["here."]},{"Key":"type here.","Fragments":["Scala"]},{"Key":"here. Scala","Fragments":["can"]},{"Key":"Scala can","Fragments":["infer"]},{"Key":"can infer","Fragments":["it."]},{"Key":"infer it.","Fragments":["But"]},{"Key":"it. But","Fragments":["you","not","to","I"]},{"Key":"can leave","Fragments":["it"]},{"Key":"you feel","Fragments":["it","about","lazy"]},{"Key":"feel it","Fragments":["aids"]},{"Key":"it aids","Fragments":["readability"]},{"Key":"aids readability","Fragments":["–"]},{"Key":"readability –","Fragments":["I"]},{"Key":"did, but","Fragments":["I'm","yours"]},{"Key":"a Scala","Fragments":["noob","beginner.","expert:","noob","project","style"]},{"Key":"Scala noob","Fragments":["too","with"]},{"Key":"noob too","Fragments":[";)"]},{"Key":"I simplified","Fragments":["the"]},{"Key":"simplified the","Fragments":["shout"]},{"Key":"the shout","Fragments":["check"]},{"Key":"shout check","Fragments":["by"]},{"Key":"check by","Fragments":["also"]},{"Key":"by also","Fragments":["involving"]},{"Key":"also involving","Fragments":["`toLowerCase`,"]},{"Key":"involving `toLowerCase`,","Fragments":["instead"]},{"Key":"`toLowerCase`, instead","Fragments":["of"]},{"Key":"about extracting","Fragments":["helper"]},{"Key":"extracting helper","Fragments":["methods"]},{"Key":"methods like","Fragments":["`isShouting`","`zip`","your"]},{"Key":"like `isShouting`","Fragments":["etc?"]},{"Key":"`isShouting` etc?","Fragments":["Both"]},{"Key":"etc? Both","Fragments":["to"]},{"Key":"Both to","Fragments":["practice"]},{"Key":"to practice","Fragments":["your","the"]},{"Key":"practice your","Fragments":["Scala"]},{"Key":"and to","Fragments":["possibly","use","test","reduce"]},{"Key":"to possibly","Fragments":["aid"]},{"Key":"possibly aid","Fragments":["readability"]},{"Key":"aid readability","Fragments":["and"]},{"Key":"readability and","Fragments":["make","will","b/c","then"]},{"Key":" Absolutely","Fragments":["sure"]},{"Key":"Absolutely sure","Fragments":["that"]},{"Key":"that there's","Fragments":["a"]},{"Key":"of checking","Fragments":["of","doesn't","with"]},{"Key":"checking of","Fragments":["a"]},{"Key":"contains at","Fragments":["least"]},{"Key":"uppercase alphabetic","Fragments":["character..."]},{"Key":"alphabetic character...","Fragments":["but"]},{"Key":"character... but","Fragments":["I"]},{"Key":"know nothing","Fragments":["about"]},{"Key":"about Scala,","Fragments":["or"]},{"Key":"Scala, or","Fragments":["where"]},{"Key":"or where","Fragments":["to"]},{"Key":"look to","Fragments":["find"]},{"Key":"find out","Fragments":["what",":)","how"]},{"Key":"to know,","Fragments":["yet!"]},{"Key":"nice solution!","Fragments":["In"]},{"Key":"solution! In","Fragments":["fact"]},{"Key":"fact so","Fragments":["nice"]},{"Key":"so nice","Fragments":["that"]},{"Key":"nice that","Fragments":["I"]},{"Key":"to steel","Fragments":["it"]},{"Key":"steel it","Fragments":["to"]},{"Key":"improve on","Fragments":["mine.","this."]},{"Key":"on mine.","Fragments":[":-)"]},{"Key":"little compensation:","Fragments":["You"]},{"Key":"compensation: You","Fragments":["can"]},{"Key":"the Seq","Fragments":["operators","in","to"]},{"Key":"Seq operators","Fragments":[":+"]},{"Key":"operators :+","Fragments":["and"]},{"Key":":+ and","Fragments":["+:"]},{"Key":"and +:","Fragments":["for"]},{"Key":"+: for","Fragments":["simplified"]},{"Key":"for simplified","Fragments":["decomposition/pattern"]},{"Key":"simplified decomposition/pattern","Fragments":["matching:"]},{"Key":" ```case","Fragments":["firstDigit"]},{"Key":"```case firstDigit","Fragments":["+:"]},{"Key":"firstDigit +:","Fragments":["rest"]},{"Key":"+: rest","Fragments":["=\u003e"]},{"Key":"rest =\u003e","Fragments":["...```"]},{"Key":"style w/o","Fragments":["any","this"]},{"Key":"side effects/mutable","Fragments":["data"]},{"Key":"effects/mutable data","Fragments":["structures?"]},{"Key":"those exercises","Fragments":["is"]},{"Key":"exercises is","Fragments":["not","also"]},{"Key":"tests pass,","Fragments":["but"]},{"Key":"pass, but","Fragments":["to"]},{"Key":"but to","Fragments":["write","satisfy","the","get","me"]},{"Key":"write general","Fragments":["code."]},{"Key":"general code.","Fragments":[":-)"]},{"Key":"example, it","Fragments":["should"]},{"Key":"also recognize","Fragments":["\"I"]},{"Key":"recognize \"I","Fragments":["LOVE"]},{"Key":"\"I LOVE","Fragments":["YOU\""]},{"Key":"LOVE YOU\"","Fragments":["as"]},{"Key":"as shouting","Fragments":["and"]},{"Key":"shouting and","Fragments":["react"]},{"Key":"and react","Fragments":["accordingly."]},{"Key":"copied the","Fragments":["implicit"]},{"Key":"class trick","Fragments":["from"]},{"Key":"trick from","Fragments":["a"]},{"Key":"saw on","Fragments":["here"]},{"Key":"the Meetup","Fragments":["exercise,"]},{"Key":"Meetup exercise,","Fragments":["so"]},{"Key":"exercise, so","Fragments":["can't","I"]},{"Key":"so can't","Fragments":["take"]},{"Key":"can't take","Fragments":["any","complete"]},{"Key":"take any","Fragments":["credit"]},{"Key":"any credit","Fragments":["for"]},{"Key":"credit for","Fragments":["that","this"]},{"Key":"for that","Fragments":[":)","function.",";)","instance?","matter)","but"]},{"Key":" @pansy","Fragments":["thanks"]},{"Key":"@pansy thanks","Fragments":["for"]},{"Key":"the tips.","Fragments":["Is","I"]},{"Key":"tips. Is","Fragments":["SortedMap"]},{"Key":"Is SortedMap","Fragments":["preferable?"]},{"Key":"SortedMap preferable?","Fragments":["How"]},{"Key":"preferable? How","Fragments":["are"]},{"Key":"How are","Fragments":["they"]},{"Key":"are they","Fragments":["better"]},{"Key":"they better","Fragments":["than"]},{"Key":"type if","Fragments":["you"]},{"Key":"you can.","Fragments":["Usually",":-)"]},{"Key":"can. Usually","Fragments":["the"]},{"Key":"Scala default","Fragments":["implementations"]},{"Key":"default implementations","Fragments":["chosen"]},{"Key":"implementations chosen","Fragments":["are"]},{"Key":"chosen are","Fragments":["fine"]},{"Key":"Another example","Fragments":["would"]},{"Key":"example would","Fragments":["be","be:"]},{"Key":"say ```Set(1,2,3)```","Fragments":["instead"]},{"Key":"```Set(1,2,3)``` instead","Fragments":["of"]},{"Key":"use ```mapValues```","Fragments":["instead"]},{"Key":"```mapValues``` instead","Fragments":["of"]},{"Key":"(and ```SortedMap```","Fragments":["instead"]},{"Key":"```SortedMap``` instead","Fragments":["of"]},{"Key":"to expose","Fragments":["a","```accumulator```"]},{"Key":"```var``` to","Fragments":["the"]},{"Key":" @teresa","Fragments":["got"]},{"Key":"@teresa got","Fragments":["ya!"]},{"Key":"- some","Fragments":["comments"]},{"Key":"some comments","Fragments":["to"]},{"Key":"comments to","Fragments":["paraphrase"]},{"Key":"to paraphrase","Fragments":["the"]},{"Key":"paraphrase the","Fragments":["regex"]},{"Key":"intent more","Fragments":["explicit."]},{"Key":"- use","Fragments":["of","the","regexes","private","Scala's","regex'es","PartialFunctions"]},{"Key":"object to","Fragments":["hold","find","the","the","determine","the","the"]},{"Key":"hold the","Fragments":["constants.","areacode,"]},{"Key":"the constants.","Fragments":["The"]},{"Key":"constants. The","Fragments":["object"]},{"Key":"The object","Fragments":["could","is"]},{"Key":"object could","Fragments":["then"]},{"Key":"used by","Fragments":["the","both"]},{"Key":"verify against","Fragments":["a"]},{"Key":"against a","Fragments":["constant","`match`"]},{"Key":"constant instead","Fragments":["of"]},{"Key":"- on","Fragments":["the","this"]},{"Key":"the regexes,","Fragments":["removed"]},{"Key":"regexes, removed","Fragments":["the"]},{"Key":"the parenthesis","Fragments":["(inspired"]},{"Key":"parenthesis (inspired","Fragments":["by"]},{"Key":"(inspired by","Fragments":["http://exercism.io/submissions/dde091a1c40e40c3af2241826a12bc69)","Python"]},{"Key":"- allowed","Fragments":["\"?\""]},{"Key":"allowed \"?\"","Fragments":["as"]},{"Key":"\"?\" as","Fragments":["a"]},{"Key":"simplified solution","Fragments":["w/"]},{"Key":"w/ bitwise","Fragments":["`\u0026`."]},{"Key":" @efren:","Fragments":["Then"]},{"Key":"@efren: Then","Fragments":["why"]},{"Key":"Then why","Fragments":["not"]},{"Key":"not go","Fragments":["even","in"]},{"Key":"go even","Fragments":["simpler","further."]},{"Key":"simpler with","Fragments":["enumeration","```chat.trim.isEmpty```."]},{"Key":"with enumeration","Fragments":["for"]},{"Key":"enumeration for","Fragments":["```Allergen```?"]},{"Key":" b/c","Fragments":["I"]},{"Key":"b/c I","Fragments":["hate","want","don't"]},{"Key":"I hate","Fragments":["Scala's"]},{"Key":"hate Scala's","Fragments":["`enumeration`?"]},{"Key":"Scala's `enumeration`?","Fragments":[":-)"]},{"Key":"this `value`","Fragments":["attribute"]},{"Key":"`value` attribute","Fragments":["associated"]},{"Key":"attribute associated","Fragments":["to"]},{"Key":"associated to","Fragments":["the"]},{"Key":"the `Allergen`.","Fragments":["looks"]},{"Key":"`Allergen`. looks","Fragments":["like"]},{"Key":"a natural","Fragments":["(OOP)"]},{"Key":"natural (OOP)","Fragments":["design."]},{"Key":"right about","Fragments":["the"]},{"Key":"the view","Fragments":["bounds"]},{"Key":"bounds deprecation.","Fragments":["In"]},{"Key":"deprecation. In","Fragments":["regard"]},{"Key":"In regard","Fragments":["of"]},{"Key":"regard of","Fragments":["this"]},{"Key":"this fact","Fragments":["your"]},{"Key":"fact your","Fragments":["solution"]},{"Key":"(btw, I","Fragments":["used","usually"]},{"Key":"used Option's","Fragments":["```fold```"]},{"Key":"Option's ```fold```","Fragments":["to"]},{"Key":"```fold``` to","Fragments":["implement"]},{"Key":"implement Bst's","Fragments":["```foldLeft```,"]},{"Key":"Bst's ```foldLeft```,","Fragments":["but"]},{"Key":"```foldLeft```, but","Fragments":["of"]},{"Key":"but of","Fragments":["course","course"]},{"Key":"course your","Fragments":["solution"]},{"Key":"is alright,","Fragments":["too"]},{"Key":"alright, too","Fragments":["-"]},{"Key":"too -","Fragments":["just","but"]},{"Key":"- just","Fragments":["wanted"]},{"Key":"to grab","Fragments":["the"]},{"Key":"grab the","Fragments":["rare"]},{"Key":"the rare","Fragments":["opportunity"]},{"Key":"rare opportunity","Fragments":["to"]},{"Key":"use ```fold```","Fragments":[":-)"]},{"Key":"```fold``` :-)","Fragments":[")."]},{"Key":"Removed `var`s","Fragments":["and"]},{"Key":"`var`s and","Fragments":["included","mutable"]},{"Key":"and included","Fragments":["@robert's","@brennan's","@myrl's"]},{"Key":"included @robert's","Fragments":["suggestions"]},{"Key":"@robert's suggestions","Fragments":["to"]},{"Key":"suggestions to","Fragments":["implement","reduce"]},{"Key":"a `foldLeft`","Fragments":["on"]},{"Key":"`foldLeft` on","Fragments":["`Bst`"]},{"Key":"on `Bst`","Fragments":["and"]},{"Key":"`Bst` and","Fragments":["to"]},{"Key":"use `Ordered`","Fragments":["instead"]},{"Key":"`Ordered` instead","Fragments":["of"]},{"Key":"even remove","Fragments":["the"]},{"Key":"looks very","Fragments":["good","scaly"]},{"Key":"very good","Fragments":["and","point,"]},{"Key":"Good point,","Fragments":["I've","asked"]},{"Key":"point, I've","Fragments":["never"]},{"Key":"never considered","Fragments":["that"]},{"Key":"considered that","Fragments":[":)"]},{"Key":"that :)","Fragments":["Thanks!"]},{"Key":" Was","Fragments":["it","there"]},{"Key":"Was it","Fragments":["your"]},{"Key":"it your","Fragments":["intention"]},{"Key":"intention to","Fragments":["never"]},{"Key":"to never","Fragments":["have"]},{"Key":"same number","Fragments":["or"]},{"Key":"number or","Fragments":["letter"]},{"Key":"or letter","Fragments":["in"]},{"Key":"letter in","Fragments":["a","it"]},{"Key":"it shuffling","Fragments":["rearranges"]},{"Key":"shuffling rearranges","Fragments":["a"]},{"Key":"rearranges a","Fragments":["list"]},{"Key":"list in","Fragments":["a","the"]},{"Key":"a random","Fragments":["order","character"]},{"Key":"random order","Fragments":["so"]},{"Key":"order so","Fragments":["your"]},{"Key":"implementation will","Fragments":["never"]},{"Key":"never result","Fragments":["'AA111'"]},{"Key":"result 'AA111'","Fragments":["as"]},{"Key":"'AA111' as","Fragments":["robot"]},{"Key":"as robot","Fragments":["name."]},{"Key":"that, pretty","Fragments":["clean"]},{"Key":"pretty clean","Fragments":["solution!"]},{"Key":"one was","Fragments":["a","just"]},{"Key":"a mistaken","Fragments":["upload,"]},{"Key":"mistaken upload,","Fragments":["oops!"]},{"Key":"Slightly refined","Fragments":["to"]},{"Key":"refined to","Fragments":["use"]},{"Key":"class rather","Fragments":["then","than"]},{"Key":"then explicitly","Fragments":["overriding"]},{"Key":"explicitly overriding","Fragments":["our"]},{"Key":"overriding our","Fragments":["apply()"]},{"Key":"our apply()","Fragments":["method."]},{"Key":"it have","Fragments":["some"]},{"Key":" Modified","Fragments":["according"]},{"Key":"Modified according","Fragments":["to"]},{"Key":"to feedback","Fragments":["from"]},{"Key":"feedback from","Fragments":["@columbus"]},{"Key":"the \"if\"","Fragments":["condition","branch"]},{"Key":"\"if\" condition","Fragments":["altogether,"]},{"Key":"condition altogether,","Fragments":["since"]},{"Key":"altogether, since","Fragments":["you're"]},{"Key":"you're doing","Fragments":["boolean","the","with","there"]},{"Key":"doing boolean","Fragments":["operations"]},{"Key":"boolean operations","Fragments":["anyway."]},{"Key":" ```chat.replaceAll(\"","Fragments":["\","]},{"Key":"```chat.replaceAll(\" \",","Fragments":["\"\").isEmpty```"]},{"Key":"\", \"\").isEmpty```","Fragments":["could"]},{"Key":"\"\").isEmpty``` could","Fragments":["be"]},{"Key":"done simpler","Fragments":["with"]},{"Key":"with ```chat.trim.isEmpty```.","Fragments":[":-)"]},{"Key":"Collection functions","Fragments":["like","like","over","that","like","on","in","like","like","for","like"]},{"Key":"like ```filter```,","Fragments":["```forall```,"]},{"Key":"```forall```, ```exists```","Fragments":["etc."]},{"Key":"```exists``` etc.","Fragments":["(in"]},{"Key":"etc. (in","Fragments":["Scala"]},{"Key":"(in Scala","Fragments":["Strings"]},{"Key":"are implicitly","Fragments":["a"]},{"Key":"implicitly a","Fragments":["```Seq[Char]```).","```Seq[Char]```.","```Seq[Char]```"]},{"Key":"a regex:","Fragments":["As"]},{"Key":"regex: As","Fragments":["another"]},{"Key":"Scala's regex","Fragments":["pattern","features","pattern"]},{"Key":"regex pattern","Fragments":["matching","matching.","matching.","matching.","matching."]},{"Key":"matching directly?!","Fragments":[";-)"]},{"Key":" pls","Fragments":["do","don't","don't"]},{"Key":"pls do","Fragments":["not","not"]},{"Key":"use ```return```","Fragments":["in","in"]},{"Key":"```return``` in","Fragments":["Scala!","Scala!","Scala!"]},{"Key":" when","Fragments":["recursing","you"]},{"Key":"when recursing","Fragments":["over"]},{"Key":"a ```List```","Fragments":["the","for","in"]},{"Key":"```List``` the","Fragments":["usual"]},{"Key":"usual way","Fragments":["is","to","to","to","for","to"]},{"Key":"matching (and","Fragments":["perhaps"]},{"Key":"perhaps the","Fragments":["```::```","Converser"]},{"Key":"the ```::```","Fragments":["operator).","deconstructor."]},{"Key":"about ```@thurman```ursion?","Fragments":[":-)"]},{"Key":" Replaced","Fragments":["word","`map`"]},{"Key":"Replaced word","Fragments":["=\u003e"]},{"Key":"word =\u003e","Fragments":["word"]},{"Key":"=\u003e word","Fragments":["with"]},{"Key":"word with","Fragments":["identity"]},{"Key":" `.count`","Fragments":["makes"]},{"Key":"`.count` makes","Fragments":["it"]},{"Key":"looks good.","Fragments":["regarding","some"]},{"Key":"good. regarding","Fragments":["naming"]},{"Key":"regarding naming","Fragments":["conventions"]},{"Key":"conventions I","Fragments":["wouldn't"]},{"Key":"wouldn't prefix","Fragments":["with"]},{"Key":"prefix with","Fragments":["\u003ccode\u003eval_\u003c/code\u003e"]},{"Key":"with \u003ccode\u003eval_\u003c/code\u003e","Fragments":["paramaters."]},{"Key":"\u003ccode\u003eval_\u003c/code\u003e paramaters.","Fragments":["probably"]},{"Key":"paramaters. probably","Fragments":["work"]},{"Key":"probably work","Fragments":["actually"]},{"Key":"work actually","Fragments":["explicitly"]},{"Key":"actually explicitly","Fragments":["setting"]},{"Key":"explicitly setting","Fragments":["it"]},{"Key":"setting it","Fragments":["as"]},{"Key":"a \u003ccode\u003eval","Fragments":["\u003c/code\u003e"]},{"Key":"\u003ccode\u003eval \u003c/code\u003e","Fragments":["if"]},{"Key":"\u003c/code\u003e if","Fragments":["you"]},{"Key":"be self","Fragments":["documenting."]},{"Key":"If avoiding","Fragments":["using"]},{"Key":"avoiding using","Fragments":["\u003ccode\u003echar\u003c/code\u003e"]},{"Key":"using \u003ccode\u003echar\u003c/code\u003e","Fragments":["as"]},{"Key":"\u003ccode\u003echar\u003c/code\u003e as","Fragments":["a"]},{"Key":"you concern,","Fragments":["maybe"]},{"Key":"concern, maybe","Fragments":["something"]},{"Key":"like \"base\"","Fragments":["might"]},{"Key":"\"base\" might","Fragments":["work"]},{"Key":"might work","Fragments":["for"]},{"Key":" Doh!","Fragments":["Good"]},{"Key":"Doh! Good","Fragments":["catch."]},{"Key":"Since you","Fragments":["have","said"]},{"Key":"have sorted","Fragments":["the"]},{"Key":"sorted the","Fragments":["side,"]},{"Key":"the side,","Fragments":["you"]},{"Key":"side, you","Fragments":["only"]},{"Key":"first side","Fragments":["if"]},{"Key":"side if","Fragments":["it"]},{"Key":"is less","Fragments":["than","explanatory","effective"]},{"Key":"than zero","Fragments":["(if"]},{"Key":"zero (if","Fragments":["any"]},{"Key":"(if any","Fragments":["are"]},{"Key":"any are","Fragments":["less"]},{"Key":"are less","Fragments":["than"]},{"Key":"than zero,","Fragments":["then"]},{"Key":"zero, then","Fragments":["the"]},{"Key":"the minimum","Fragments":["will"]},{"Key":"minimum will","Fragments":["be),"]},{"Key":"will be),","Fragments":["and"]},{"Key":"be), and","Fragments":["to"]},{"Key":"test equilateral,","Fragments":["you"]},{"Key":"equilateral, you","Fragments":["only"]},{"Key":"if `a","Fragments":["=="]},{"Key":"`a ==","Fragments":["c`,"]},{"Key":"== c`,","Fragments":["since,"]},{"Key":"c`, since,","Fragments":["being"]},{"Key":"since, being","Fragments":["sorted,"]},{"Key":"being sorted,","Fragments":["`b`"]},{"Key":"sorted, `b`","Fragments":["will"]},{"Key":"`b` will","Fragments":["have"]},{"Key":"the choices","Fragments":["I"]},{"Key":"choices I","Fragments":["did"]},{"Key":"did to","Fragments":["make"]},{"Key":"possible and","Fragments":["to","improve"]},{"Key":"reduce duplication.","Fragments":["For"]},{"Key":"duplication. For","Fragments":["instance"]},{"Key":"For instance","Fragments":["unapply"]},{"Key":"instance unapply","Fragments":["could"]},{"Key":"unapply could","Fragments":["have"]},{"Key":"have returned","Fragments":["a"]},{"Key":"returned a","Fragments":["boolean"]},{"Key":"boolean for","Fragments":["the"]},{"Key":"the matches.","Fragments":["This"]},{"Key":"matches. This","Fragments":["would"]},{"Key":"would mean","Fragments":["returning"]},{"Key":"mean returning","Fragments":["string"]},{"Key":"returning string","Fragments":["response"]},{"Key":"string response","Fragments":["after"]},{"Key":"response after","Fragments":["the"]},{"Key":"match or","Fragments":["by"]},{"Key":"the response.","Fragments":["I"]},{"Key":"response. I","Fragments":["did"]},{"Key":"call into","Fragments":["the"]},{"Key":"the objects","Fragments":["to","make"]},{"Key":"objects to","Fragments":["return","the"]},{"Key":"response so","Fragments":["I"]},{"Key":"I opted","Fragments":["to"]},{"Key":"opted to","Fragments":["have"]},{"Key":"object return","Fragments":["it."]},{"Key":"the randomString","Fragments":["funciton"]},{"Key":"randomString funciton","Fragments":["I"]},{"Key":"funciton I","Fragments":["found"]},{"Key":"found through","Fragments":["a"]},{"Key":"through a","Fragments":["google"]},{"Key":"a google","Fragments":["search."]},{"Key":"google search.","Fragments":["It"]},{"Key":"search. It","Fragments":["made"]},{"Key":"It made","Fragments":["piecing"]},{"Key":"made piecing","Fragments":["together"]},{"Key":"piecing together","Fragments":["robot"]},{"Key":"together robot","Fragments":["names"]},{"Key":"names quite","Fragments":["easy."]},{"Key":"quite easy.","Fragments":["I\"m"]},{"Key":"easy. I\"m","Fragments":["not"]},{"Key":"I\"m not","Fragments":["entirely"]},{"Key":"not entirely","Fragments":["happy"]},{"Key":"entirely happy","Fragments":["with"]},{"Key":"my getName","Fragments":["function,"]},{"Key":"getName function,","Fragments":["because"]},{"Key":"for two","Fragments":["bad"]},{"Key":"two bad","Fragments":["entries"]},{"Key":"bad entries","Fragments":["in"]},{"Key":"entries in","Fragments":["a"]},{"Key":"a row.","Fragments":["I","but"]},{"Key":"row. I","Fragments":["also"]},{"Key":"also hate","Fragments":["that"]},{"Key":"hate that","Fragments":["I"]},{"Key":"use so","Fragments":["many"]},{"Key":"so many","Fragments":["vars.","parameters","parameters?","verbose","languages","empty"]},{"Key":"many vars.","Fragments":["I'd"]},{"Key":"vars. I'd","Fragments":["love"]},{"Key":"I'd love","Fragments":["to","to"]},{"Key":"see some","Fragments":["better","other"]},{"Key":"better solutions","Fragments":["that"]},{"Key":"that still","Fragments":["eliminate"]},{"Key":"still eliminate","Fragments":["the"]},{"Key":"the possibilty","Fragments":["of"]},{"Key":"possibilty of","Fragments":["duplicate"]},{"Key":"of duplicate","Fragments":["random"]},{"Key":"duplicate random","Fragments":["names."]},{"Key":"This exercise","Fragments":["can"]},{"Key":"exercise can","Fragments":["actually"]},{"Key":"can actually","Fragments":["be","make"]},{"Key":"actually be","Fragments":["completed"]},{"Key":"be completed","Fragments":["without"]},{"Key":"completed without","Fragments":["using"]},{"Key":"using iteration","Fragments":["in"]},{"Key":"iteration in","Fragments":["less"]},{"Key":"in less","Fragments":["code."]},{"Key":" Think","Fragments":["about","of"]},{"Key":"Think about","Fragments":["using","String"]},{"Key":"the params","Fragments":["to"]},{"Key":"params to","Fragments":["compute."]},{"Key":"the `divisibleBy`","Fragments":["method"]},{"Key":"`divisibleBy` method","Fragments":["to"]},{"Key":"to clarify","Fragments":["meaning.","the"]},{"Key":"fun you","Fragments":["could","could"]},{"Key":"your feedback!","Fragments":["I","Some","Glad","I"]},{"Key":"I wondered","Fragments":["if"]},{"Key":"wondered if","Fragments":["it"]},{"Key":"is acceptable","Fragments":["solution,"]},{"Key":"acceptable solution,","Fragments":["too."]},{"Key":"solution, too.","Fragments":["But","thx)."]},{"Key":"too. But","Fragments":["what"]},{"Key":"But what","Fragments":["do","if"]},{"Key":"by FP-style","Fragments":["iterating"]},{"Key":"FP-style iterating","Fragments":["over"]},{"Key":"over collection?","Fragments":["Is"]},{"Key":"collection? Is","Fragments":["it"]},{"Key":"using iterator","Fragments":["instead"]},{"Key":"iterator instead","Fragments":["of"]},{"Key":"of getting","Fragments":["collection's","variable"]},{"Key":"getting collection's","Fragments":["elements"]},{"Key":"collection's elements","Fragments":["by"]},{"Key":"elements by","Fragments":["index?"]},{"Key":"One could","Fragments":["argue","argue"]},{"Key":"for-comprehension (as","Fragments":["syntactic"]},{"Key":"(as syntactic","Fragments":["sugar"]},{"Key":"for flatMap-map)","Fragments":["is"]},{"Key":"flatMap-map) is","Fragments":["still"]},{"Key":"still among","Fragments":["\"that"]},{"Key":"among \"that","Fragments":["collect/map/fmap/whatchamacallit"]},{"Key":"\"that collect/map/fmap/whatchamacallit","Fragments":["functionality"]},{"Key":"standard library\"?!","Fragments":[":-)"]},{"Key":"Your alternative","Fragments":["solution"]},{"Key":"alternative solution","Fragments":["still"]},{"Key":"solution still","Fragments":["doesn't"]},{"Key":"still doesn't","Fragments":["cut"]},{"Key":"doesn't cut","Fragments":["it:"]},{"Key":"cut it:","Fragments":["How"]},{"Key":"it: How","Fragments":["would"]},{"Key":"a collection","Fragments":["FP-style","of","on","of","of"]},{"Key":"collection FP-style","Fragments":["instead?"]},{"Key":"Well I","Fragments":["tried"]},{"Key":"be clever,","Fragments":["but"]},{"Key":"right. Will","Fragments":["update."]},{"Key":"bit unintuitive","Fragments":["to"]},{"Key":"unintuitive to","Fragments":["me"]},{"Key":"that ```minesAt```","Fragments":["returns"]},{"Key":"```minesAt``` returns","Fragments":["an"]},{"Key":"an ```Option[Int]```","Fragments":["instead"]},{"Key":"```Option[Int]``` instead","Fragments":["of"]},{"Key":"wasn't happy","Fragments":["using","with"]},{"Key":"happy using","Fragments":["pattern"]},{"Key":"for not","Fragments":["matching"]},{"Key":"not matching","Fragments":["anything."]},{"Key":"matching anything.","Fragments":["So"]},{"Key":"anything. So","Fragments":["I"]},{"Key":"I replaced","Fragments":["the","the"]},{"Key":"replaced the","Fragments":["ifs","recursion"]},{"Key":"ifs in","Fragments":["the"]},{"Key":"cases with","Fragments":["custom","primitives."]},{"Key":"with custom","Fragments":["extractors."]},{"Key":"problem w/","Fragments":["the"]},{"Key":"one validity","Fragments":["check."]},{"Key":"validity check.","Fragments":["The"]},{"Key":"check. The","Fragments":["use"]},{"Key":"of ```require```","Fragments":["looks"]},{"Key":"```require``` looks","Fragments":["best"]},{"Key":"looks best","Fragments":["to"]},{"Key":"use constants","Fragments":["to","for"]},{"Key":"have ```nuclieotides```","Fragments":["(typo?)"]},{"Key":"```nuclieotides``` (typo?)","Fragments":["as"]},{"Key":"(typo?) as","Fragments":["a"]},{"Key":"String as","Fragments":["it","a"]},{"Key":"is implicitly","Fragments":["also","available."]},{"Key":"implicitly also","Fragments":["a"]},{"Key":"Using ```foldLeft```","Fragments":["is"]},{"Key":"```foldLeft``` is","Fragments":["fine.","ok."]},{"Key":"is fine.","Fragments":["Another",":-)"]},{"Key":"fine. Another","Fragments":["solution"]},{"Key":"Another solution","Fragments":["could"]},{"Key":"you probably","Fragments":["don't","intended,","want"]},{"Key":"want that","Fragments":["println"]},{"Key":"that println","Fragments":["to"]},{"Key":"println to","Fragments":["stay?"]},{"Key":"Included abo64's","Fragments":["suggestions"]},{"Key":"abo64's suggestions","Fragments":["and"]},{"Key":"suggestions and","Fragments":["also","see","submitted"]},{"Key":"also added","Fragments":["an","a"]},{"Key":"added an","Fragments":["error"]},{"Key":"error message","Fragments":["to","instead."]},{"Key":" isShouted","Fragments":["looks"]},{"Key":"isShouted looks","Fragments":["a"]},{"Key":"bit ad","Fragments":["hoc,"]},{"Key":"ad hoc,","Fragments":["but"]},{"Key":"hoc, but","Fragments":["in"]},{"Key":"in general:","Fragments":["ok."]},{"Key":"general: ok.","Fragments":[":-)"]},{"Key":"additional solution","Fragments":["you","you"]},{"Key":"using regex'es","Fragments":["(where"]},{"Key":"regex'es (where","Fragments":["it"]},{"Key":"(where it","Fragments":["makes"]},{"Key":"The Validate()","Fragments":["object"]},{"Key":"Validate() object","Fragments":["seems"]},{"Key":"object seems","Fragments":["like"]},{"Key":"seems like","Fragments":["overkill","a","overkill","a","useful","the","quite"]},{"Key":"like overkill","Fragments":["there","to"]},{"Key":"overkill there","Fragments":["and"]},{"Key":"there and","Fragments":["it","then,"]},{"Key":"it hurts","Fragments":["readability"]},{"Key":"hurts readability","Fragments":["a"]},{"Key":"readability a","Fragments":["bit."]},{"Key":" An","Fragments":["\"isValid()\""]},{"Key":"An \"isValid()\"","Fragments":["method"]},{"Key":"\"isValid()\" method","Fragments":["would"]},{"Key":"method would","Fragments":["have"]},{"Key":"been more","Fragments":["appropriate."]},{"Key":"just listed","Fragments":["the"]},{"Key":"listed the","Fragments":["conditions"]},{"Key":"match statement,","Fragments":["given"]},{"Key":"statement, given","Fragments":["how"]},{"Key":"given how","Fragments":["simple"]},{"Key":"how simple","Fragments":["they"]},{"Key":"simple they","Fragments":["are."]},{"Key":"your modulo","Fragments":["operations."]},{"Key":"For better","Fragments":["readability","readability"]},{"Key":"better readability","Fragments":["I","(and","you","perhaps","you"]},{"Key":"readability I","Fragments":["would"]},{"Key":"have parens","Fragments":["to"]},{"Key":"parens to","Fragments":["clarify"]},{"Key":"clarify the","Fragments":["scope"]},{"Key":"scope of","Fragments":["the","the"]},{"Key":"boolean binary","Fragments":["operators."]},{"Key":"idea with","Fragments":["the","the"]},{"Key":"the filter.","Fragments":["Here"]},{"Key":"filter. Here","Fragments":["is"]},{"Key":"solution, if","Fragments":["you"]},{"Key":"def genName:String","Fragments":["="]},{"Key":"genName:String =","Fragments":["{"]},{"Key":"val head","Fragments":["="]},{"Key":"head =","Fragments":["Random.alphanumeric.filter(_.isLetter).take(2).mkString.toUpperCase"]},{"Key":"val tail","Fragments":["="]},{"Key":"tail =","Fragments":["Random.nextInt(999)"]},{"Key":" head","Fragments":["+"]},{"Key":"head +","Fragments":["\"%03d\".format(tail)"]},{"Key":"Great use","Fragments":["of","of"]},{"Key":"an `implicit","Fragments":["class`,"]},{"Key":"`implicit class`,","Fragments":["makes"]},{"Key":"class`, makes","Fragments":["the"]},{"Key":"A colleague","Fragments":["of"]},{"Key":"colleague of","Fragments":["mine","mine,"]},{"Key":"of mine","Fragments":["who"]},{"Key":"mine who","Fragments":["has"]},{"Key":"has done","Fragments":["Scala"]},{"Key":"done Scala","Fragments":["professionally"]},{"Key":"Scala professionally","Fragments":["suggested"]},{"Key":"professionally suggested","Fragments":["these"]},{"Key":"suggested these","Fragments":["changes."]},{"Key":"these changes.","Fragments":["I"]},{"Key":"changes. I","Fragments":["have"]},{"Key":"have faith","Fragments":["in"]},{"Key":"faith in","Fragments":["his"]},{"Key":"in his","Fragments":["abilities"]},{"Key":"his abilities","Fragments":["so"]},{"Key":"abilities so","Fragments":["I"]},{"Key":"the changes","Fragments":["are"]},{"Key":"changes are","Fragments":["ok"]},{"Key":"are ok","Fragments":["technically"]},{"Key":"ok technically","Fragments":["speaking."]},{"Key":"technically speaking.","Fragments":["I"]},{"Key":"speaking. I","Fragments":["think"]},{"Key":"question is","Fragments":["more","not","the","defined","not"]},{"Key":"about whether","Fragments":["they're"]},{"Key":"whether they're","Fragments":["stylistically"]},{"Key":"they're stylistically","Fragments":["good."]},{"Key":"stylistically good.","Fragments":["Like"]},{"Key":"good. Like","Fragments":["I"]},{"Key":"Like I","Fragments":["said","say,"]},{"Key":"I said","Fragments":["before,","then"]},{"Key":"said before,","Fragments":["I"]},{"Key":"before, I","Fragments":["like"]},{"Key":"it turned","Fragments":["out","out"]},{"Key":"turned out","Fragments":["but","to"]},{"Key":"out but","Fragments":["I'm"]},{"Key":"I'm open","Fragments":["to"]},{"Key":"to alternate","Fragments":["views."]},{"Key":"Scala myself","Fragments":["I"]},{"Key":"myself I","Fragments":["understand"]},{"Key":"your reasoning","Fragments":["and"]},{"Key":"reasoning and","Fragments":["it"]},{"Key":"sounds logical","Fragments":["to"]},{"Key":"logical to","Fragments":["me.","be"]},{"Key":"me. I","Fragments":["am"]},{"Key":"am unable","Fragments":["to"]},{"Key":"unable to","Fragments":["judge"]},{"Key":"to judge","Fragments":["if"]},{"Key":"judge if","Fragments":["this"]},{"Key":"a correct","Fragments":["use"]},{"Key":"correct use","Fragments":["of"]},{"Key":"companion objects,","Fragments":["from"]},{"Key":"objects, from","Fragments":["what"]},{"Key":"from what","Fragments":["I"]},{"Key":"it's ok,","Fragments":["but"]},{"Key":"ok, but","Fragments":["as","could"]},{"Key":"as stated","Fragments":["I'm"]},{"Key":"stated I'm","Fragments":["only"]},{"Key":"I'm only","Fragments":["a","2"]},{"Key":" BTW,","Fragments":["there"]},{"Key":"BTW, there","Fragments":["don't"]},{"Key":"there don't","Fragments":["seem"]},{"Key":"don't seem","Fragments":["to"]},{"Key":"of people","Fragments":["looking"]},{"Key":"people looking","Fragments":["over"]},{"Key":"looking over","Fragments":["Scala"]},{"Key":"over Scala","Fragments":["code."]},{"Key":"Scala code.","Fragments":["Thanks"]},{"Key":"code. Thanks","Fragments":["for"]},{"Key":"for taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look.","pair"]},{"Key":"The list","Fragments":["of"]},{"Key":"of nucleotides","Fragments":["and"]},{"Key":"nucleotides and","Fragments":["the"]},{"Key":"validation methods","Fragments":["don't"]},{"Key":"methods don't","Fragments":["really"]},{"Key":"really care","Fragments":["about"]},{"Key":"about state","Fragments":["so"]},{"Key":"state so","Fragments":["they"]},{"Key":"they didn't","Fragments":["need"]},{"Key":"didn't need","Fragments":["to"]},{"Key":"like pulling","Fragments":["them"]},{"Key":"pulling them","Fragments":["out"]},{"Key":"them out","Fragments":["let","into"]},{"Key":"out let","Fragments":["the"]},{"Key":"let the","Fragments":["class","Scala"]},{"Key":"class stick","Fragments":["to"]},{"Key":"stick to","Fragments":["it's"]},{"Key":"to it's","Fragments":["core"]},{"Key":"it's core","Fragments":["work."]},{"Key":"core work.","Fragments":["Also,"]},{"Key":"work. Also,","Fragments":["if"]},{"Key":"Also, if","Fragments":["we"]},{"Key":"we were","Fragments":["using","dealing"]},{"Key":"a lots","Fragments":["of"]},{"Key":"of instances","Fragments":["this"]},{"Key":"instances this","Fragments":["should"]},{"Key":"this should","Fragments":["be"]},{"Key":"more efficient,","Fragments":["right?"]},{"Key":"efficient, right?","Fragments":["The"]},{"Key":"right? The","Fragments":["object"]},{"Key":"only created","Fragments":["once"]},{"Key":"created once","Fragments":["so"]},{"Key":"once so","Fragments":["those"]},{"Key":"so those","Fragments":["methods"]},{"Key":"those methods","Fragments":["aren't","will","are"]},{"Key":"methods aren't","Fragments":["recreated"]},{"Key":"aren't recreated","Fragments":["for"]},{"Key":"recreated for","Fragments":["each"]},{"Key":"of `DNA`.","Fragments":["Additionally,"]},{"Key":"`DNA`. Additionally,","Fragments":["I'm"]},{"Key":"Additionally, I'm","Fragments":["new"]},{"Key":"with companion","Fragments":["objects."]},{"Key":"companion objects.","Fragments":["Is"]},{"Key":"objects. Is","Fragments":["there"]},{"Key":"reason not","Fragments":["to","to","to."]},{"Key":"any special","Fragments":["reason"]},{"Key":"special reason","Fragments":["why"]},{"Key":"reason why","Fragments":["you","you","the","you're"]},{"Key":"the `object","Fragments":["DNA`"]},{"Key":"`object DNA`","Fragments":["here"]},{"Key":"DNA` here","Fragments":["instead"]},{"Key":"of including","Fragments":["the"]},{"Key":"including the","Fragments":["definitions","additional"]},{"Key":"the definitions","Fragments":["in"]},{"Key":"definitions in","Fragments":["the"]},{"Key":"are coding","Fragments":["Scala"]},{"Key":"coding Scala","Fragments":["like"]},{"Key":"Scala like","Fragments":["one"]},{"Key":"one codes","Fragments":["Java."]},{"Key":"codes Java.","Fragments":["Check"]},{"Key":"Java. Check","Fragments":["out"]},{"Key":"Check out","Fragments":["some","the"]},{"Key":"other peoples","Fragments":["solutions"]},{"Key":"peoples solutions","Fragments":["to"]},{"Key":"solutions to","Fragments":["explore","this"]},{"Key":"explore Scalas","Fragments":["languages"]},{"Key":"Scalas languages","Fragments":["features"]},{"Key":"think regular","Fragments":["expressions"]},{"Key":"is necessarily","Fragments":["the"]},{"Key":"necessarily the","Fragments":["wrong"]},{"Key":"wrong way","Fragments":["to"]},{"Key":"perform this","Fragments":["exercise.","operation,"]},{"Key":"this exercise.","Fragments":["As","It","You","But"]},{"Key":"exercise. As","Fragments":["you've"]},{"Key":"As you've","Fragments":["demonstrated,"]},{"Key":"you've demonstrated,","Fragments":["with"]},{"Key":"demonstrated, with","Fragments":["the"]},{"Key":"right set","Fragments":["of"]},{"Key":"of regexes,","Fragments":["you"]},{"Key":"regexes, you","Fragments":["can"]},{"Key":"concise solution","Fragments":["that","I"]},{"Key":"that directly","Fragments":["expresses"]},{"Key":"directly expresses","Fragments":["the"]},{"Key":"expresses the","Fragments":["concepts"]},{"Key":"the concepts","Fragments":["of"]},{"Key":"concepts of","Fragments":["in"]},{"Key":"of in","Fragments":["the","the"]},{"Key":" However","Fragments":["I"]},{"Key":"However I","Fragments":["feel"]},{"Key":"like these","Fragments":["regexes","many"]},{"Key":"these regexes","Fragments":["are"]},{"Key":"are too","Fragments":["specific","generic"]},{"Key":"too specific","Fragments":["the"]},{"Key":"specific the","Fragments":["the"]},{"Key":"the the","Fragments":["inputs","two"]},{"Key":"inputs in","Fragments":["the"]},{"Key":"test set.","Fragments":["For"]},{"Key":"set. For","Fragments":["example,"]},{"Key":"example, it's","Fragments":["not"]},{"Key":"that 5","Fragments":["spaces"]},{"Key":"5 spaces","Fragments":["warrants"]},{"Key":"spaces warrants","Fragments":["a"]},{"Key":"warrants a","Fragments":["\"Fine."]},{"Key":"a \"Fine.","Fragments":["be"]},{"Key":"\"Fine. be","Fragments":["that"]},{"Key":"that way!\",","Fragments":["but"]},{"Key":"way!\", but","Fragments":["4"]},{"Key":"but 4","Fragments":["spaces"]},{"Key":"4 spaces","Fragments":["do"]},{"Key":"spaces do","Fragments":["not."]},{"Key":"There also","Fragments":["seems"]},{"Key":"also seems","Fragments":["to"]},{"Key":"a large","Fragments":["overlap"]},{"Key":"large overlap","Fragments":["between"]},{"Key":"overlap between","Fragments":["`^[A-Z"]},{"Key":"between `^[A-Z","Fragments":[",]+[?]+$`"]},{"Key":"`^[A-Z ,]+[?]+$`","Fragments":["and"]},{"Key":",]+[?]+$` and","Fragments":["`^[A-Z0-9?"]},{"Key":"and `^[A-Z0-9?","Fragments":[",.!]+$`."]},{"Key":"`^[A-Z0-9? ,.!]+$`.","Fragments":["I"]},{"Key":",.!]+$`. I","Fragments":["hesitate"]},{"Key":"I hesitate","Fragments":["to"]},{"Key":"hesitate to","Fragments":["\"give"]},{"Key":"to \"give","Fragments":["away\""]},{"Key":"\"give away\"","Fragments":["the"]},{"Key":"away\" the","Fragments":["answer,"]},{"Key":"the answer,","Fragments":["so"]},{"Key":"answer, so","Fragments":["for"]},{"Key":"so for","Fragments":["now","more","each"]},{"Key":"now I'll","Fragments":["just"]},{"Key":"I'll just","Fragments":["recommend"]},{"Key":"just recommend","Fragments":["you"]},{"Key":"recommend you","Fragments":["re-read"]},{"Key":"you re-read","Fragments":["each"]},{"Key":"re-read each","Fragments":["line"]},{"Key":"each line","Fragments":["in","then"]},{"Key":"line in","Fragments":["the"]},{"Key":"the requirement","Fragments":["(e.g.","that"]},{"Key":"requirement (e.g.","Fragments":["\"Bob"]},{"Key":"(e.g. \"Bob","Fragments":["answers"]},{"Key":"\"Bob answers","Fragments":["'Sure.'"]},{"Key":"answers 'Sure.'","Fragments":["if"]},{"Key":"'Sure.' if","Fragments":["you"]},{"Key":"you ask","Fragments":["him"]},{"Key":"ask him","Fragments":["a"]},{"Key":"him a","Fragments":["question.\"),"]},{"Key":"a question.\"),","Fragments":["and"]},{"Key":"question.\"), and","Fragments":["then"]},{"Key":"then try","Fragments":["to","to"]},{"Key":"an interpretation","Fragments":["of"]},{"Key":"interpretation of","Fragments":["what"]},{"Key":"it means","Fragments":["for"]},{"Key":"means for","Fragments":["something"]},{"Key":"question, and","Fragments":["verifying"]},{"Key":"and verifying","Fragments":["that"]},{"Key":"verifying that","Fragments":["your"]},{"Key":"your interpretation","Fragments":["is"]},{"Key":"interpretation is","Fragments":["both"]},{"Key":"is both","Fragments":["general"]},{"Key":"both general","Fragments":["and"]},{"Key":"general and","Fragments":["yet"]},{"Key":"and yet","Fragments":["adheres","is"]},{"Key":"yet adheres","Fragments":["to"]},{"Key":"adheres to","Fragments":["the"]},{"Key":"library. Using","Fragments":["that"]},{"Key":"can implement","Fragments":["this"]},{"Key":"implement this","Fragments":["exercise"]},{"Key":"exercise without","Fragments":["needing"]},{"Key":"without needing","Fragments":["difficult","to"]},{"Key":"needing difficult","Fragments":["to"]},{"Key":"read regular","Fragments":["expressions."]},{"Key":"Using StringOps","Fragments":["in"]},{"Key":"standard library","Fragments":["you","and"]},{"Key":"library you","Fragments":["can"]},{"Key":"can treat","Fragments":["`String`"]},{"Key":"treat `String`","Fragments":["like"]},{"Key":"`String` like","Fragments":["a"]},{"Key":"collection of","Fragments":["characters.","responders","Chars"]},{"Key":"of characters.","Fragments":["That"]},{"Key":"characters. That","Fragments":["provides"]},{"Key":"That provides","Fragments":["useful"]},{"Key":"provides useful","Fragments":["methods"]},{"Key":"like `zip`","Fragments":["which"]},{"Key":"`zip` which","Fragments":["could"]},{"Key":"which could","Fragments":["be","get"]},{"Key":"Also look","Fragments":["for"]},{"Key":"look for","Fragments":["ways","a","the"]},{"Key":"for ways","Fragments":["to"]},{"Key":"use higher-order","Fragments":["functions"]},{"Key":"higher-order functions","Fragments":["(e.g."]},{"Key":"functions (e.g.","Fragments":["passing"]},{"Key":"(e.g. passing","Fragments":["functions"]},{"Key":"passing functions","Fragments":["to"]},{"Key":"to functions)","Fragments":["for"]},{"Key":"functions) for","Fragments":["a"]},{"Key":"a cleaner,","Fragments":["more"]},{"Key":"cleaner, more","Fragments":["FP"]},{"Key":"style way","Fragments":["of"]},{"Key":"of counting","Fragments":["the","each","the"]},{"Key":"counting the","Fragments":["number","letters,","nucleic"]},{"Key":"By looking","Fragments":["at"]},{"Key":"at another","Fragments":["persons"]},{"Key":"another persons","Fragments":["solution,"]},{"Key":"persons solution,","Fragments":["I"]},{"Key":"didn't know:","Fragments":["`count`:"]},{"Key":" (s1","Fragments":["zip","zip"]},{"Key":"(s1 zip","Fragments":["s2).count","s2).foldLeft(0)"]},{"Key":"zip s2).count","Fragments":["{"]},{"Key":"s2).count {","Fragments":["case"]},{"Key":"case (s1,","Fragments":["s2)"]},{"Key":"(s1, s2)","Fragments":["=\u003e"]},{"Key":"s2) =\u003e","Fragments":["s1"]},{"Key":"=\u003e s1","Fragments":["!="]},{"Key":"s1 !=","Fragments":["s2"]},{"Key":"!= s2","Fragments":["}","compareTo"]},{"Key":"an awesome","Fragments":["little"]},{"Key":"awesome little","Fragments":["function"]},{"Key":"little function","Fragments":["called"]},{"Key":"function called","Fragments":["```count```","``containsSlice``"]},{"Key":"called ```count```","Fragments":["in"]},{"Key":"```count``` in","Fragments":["the"]},{"Key":"the [```trait","Fragments":["TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that"]},{"Key":"[```trait TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that","Fragments":["makes"]},{"Key":"TraversableOnce```](http://www.scala-lang.org/api/2.10.2/index.html#scala.collection.TraversableOnce)that makes","Fragments":["counting"]},{"Key":"makes counting","Fragments":["things"]},{"Key":"counting things","Fragments":["according"]},{"Key":"things according","Fragments":["to"]},{"Key":"predicate very","Fragments":["clean."]},{"Key":"very clean.","Fragments":["Take"]},{"Key":"clean. Take","Fragments":["a"]},{"Key":" Thought","Fragments":["I"]},{"Key":"Thought I","Fragments":["needed"]},{"Key":"needed a","Fragments":["way"]},{"Key":"loop over","Fragments":["the"]},{"Key":"two dnaStrand","Fragments":["strings"]},{"Key":"dnaStrand strings","Fragments":["simultaniously,"]},{"Key":"strings simultaniously,","Fragments":["using"]},{"Key":"simultaniously, using","Fragments":["the"]},{"Key":"the shortest","Fragments":["string","and","possible","String","solution"]},{"Key":"shortest string","Fragments":["as"]},{"Key":"string as","Fragments":["a","it"]},{"Key":"a max","Fragments":["loop"]},{"Key":"max loop","Fragments":["counter."]},{"Key":"loop counter.","Fragments":["I"]},{"Key":"counter. I","Fragments":["heard"]},{"Key":"I heard","Fragments":["about"]},{"Key":"about zip","Fragments":["but"]},{"Key":"zip but","Fragments":["never"]},{"Key":"but never","Fragments":["actually"]},{"Key":"never actually","Fragments":["used"]},{"Key":"actually used","Fragments":["it."]},{"Key":"used it.","Fragments":["Turns"]},{"Key":"it. Turns","Fragments":["out"]},{"Key":"Turns out","Fragments":["that"]},{"Key":"it creates","Fragments":["a"]},{"Key":"creates a","Fragments":["list","new","regular"]},{"Key":"tuples and","Fragments":["handles"]},{"Key":"and handles","Fragments":["differences"]},{"Key":"handles differences","Fragments":["in"]},{"Key":"differences in","Fragments":["length"]},{"Key":"in length","Fragments":["exactly","i"]},{"Key":"length exactly","Fragments":["the"]},{"Key":"way needed","Fragments":["in"]},{"Key":"this example.","Fragments":["All","I'm"]},{"Key":"example. All","Fragments":["I"]},{"Key":"All I","Fragments":["have"]},{"Key":"do now","Fragments":["is"]},{"Key":"now is","Fragments":["compare"]},{"Key":"is compare","Fragments":["the"]},{"Key":"each tuple","Fragments":["and"]},{"Key":"tuple and","Fragments":["add"]},{"Key":"the total","Fragments":["count:","was"]},{"Key":"total count:","Fragments":["foldLeft"]},{"Key":"count: foldLeft","Fragments":["will"]},{"Key":"foldLeft will","Fragments":["reduce"]},{"Key":"will reduce","Fragments":["the"]},{"Key":"tuples to","Fragments":["the"]},{"Key":"the Hamming","Fragments":["distance.","distance."]},{"Key":"Good point","Fragments":["-","for"]},{"Key":"point -","Fragments":["the","that's"]},{"Key":"error handling","Fragments":["is"]},{"Key":"handling is","Fragments":["pretty"]},{"Key":"is pretty","Fragments":["weak","to","slick,","much","short","confusing"]},{"Key":"pretty weak","Fragments":["(i.e."]},{"Key":"weak (i.e.","Fragments":["non-existent)"]},{"Key":"(i.e. non-existent)","Fragments":["in"]},{"Key":"non-existent) in","Fragments":["this"]},{"Key":"is incorrect","Fragments":["on"]},{"Key":"incorrect on","Fragments":["input"]},{"Key":"on input","Fragments":["\"a111\"","string"]},{"Key":"method for","Fragments":["free","checking","```year","nextLetter().","```year"]},{"Key":"for free","Fragments":["in"]},{"Key":"free in","Fragments":["the"]},{"Key":"object if","Fragments":["you"]},{"Key":"you prefix","Fragments":["your"]},{"Key":"prefix your","Fragments":["class"]},{"Key":"class declaration","Fragments":["with"]},{"Key":"declaration with","Fragments":["the"]},{"Key":"the keywork","Fragments":["\"case\""]},{"Key":"used 6","Fragments":["less"]},{"Key":"6 less","Fragments":["brackets"]},{"Key":"that checks","Fragments":["the"]},{"Key":"checks the","Fragments":["letter"]},{"Key":"the letter","Fragments":["counts."]},{"Key":"letter counts.","Fragments":["I'll"]},{"Key":"counts. I'll","Fragments":["have"]},{"Key":"remember that.","Fragments":["I"]},{"Key":"that. I","Fragments":["also"]},{"Key":"also didn't","Fragments":["think"]},{"Key":"using `equalsIgnoreCase`","Fragments":["and"]},{"Key":"`equalsIgnoreCase` and","Fragments":["used"]},{"Key":"and used","Fragments":["`toLowerCase`","it","it"]},{"Key":"used `toLowerCase`","Fragments":["twice."]},{"Key":"`toLowerCase` twice.","Fragments":["I'll"]},{"Key":"twice. I'll","Fragments":["have"]},{"Key":"However, it's","Fragments":["simpler"]},{"Key":"it's simpler","Fragments":["just"]},{"Key":"simpler just","Fragments":["to"]},{"Key":"use `.toLowerCase.sorted`","Fragments":["and"]},{"Key":"`.toLowerCase.sorted` and","Fragments":["compare"]},{"Key":"and compare","Fragments":["the"]},{"Key":"the sorted,","Fragments":["lower"]},{"Key":"sorted, lower","Fragments":["case"]},{"Key":"case versions","Fragments":["of"]},{"Key":"probably make","Fragments":["more"]},{"Key":"make more","Fragments":["sense","sense,","sense"]},{"Key":"more sense","Fragments":["to","logically","to"]},{"Key":"a `square`","Fragments":["function"]},{"Key":"`square` function","Fragments":["that"]},{"Key":"use in","Fragments":["both","your","Scala."]},{"Key":"in both","Fragments":["places.","elements.","collections."]},{"Key":"both places.","Fragments":["(Most"]},{"Key":"places. (Most","Fragments":["of"]},{"Key":"(Most of","Fragments":["the"]},{"Key":"time this","Fragments":["exercise"]},{"Key":"exercise took","Fragments":["me"]},{"Key":"me was","Fragments":["spent"]},{"Key":"was spent","Fragments":["looking"]},{"Key":"spent looking","Fragments":["for"]},{"Key":"an equivalent","Fragments":["of"]},{"Key":"equivalent of","Fragments":["Python's"]},{"Key":"of Python's","Fragments":["`**`"]},{"Key":"Python's `**`","Fragments":["operator.)"]},{"Key":" Lovely,","Fragments":["clean,"]},{"Key":"Lovely, clean,","Fragments":["readable"]},{"Key":"clean, readable","Fragments":["code."]},{"Key":"readable code.","Fragments":["You"]},{"Key":"course, summing","Fragments":["the"]},{"Key":"summing the","Fragments":["input"]},{"Key":"list twice","Fragments":["in"]},{"Key":"in `squareOfSums`","Fragments":["(which"]},{"Key":"`squareOfSums` (which","Fragments":["could"]},{"Key":"(which could","Fragments":["be","be"]},{"Key":"be expensive","Fragments":["on"]},{"Key":"expensive on","Fragments":["large"]},{"Key":"on large","Fragments":["inputs,"]},{"Key":"large inputs,","Fragments":["and"]},{"Key":"inputs, and","Fragments":["unnecessarily"]},{"Key":"and unnecessarily","Fragments":["creating"]},{"Key":"unnecessarily creating","Fragments":["two"]},{"Key":"creating two","Fragments":["(potentially"]},{"Key":"two (potentially","Fragments":["large)"]},{"Key":"(potentially large)","Fragments":["Iterables"]},{"Key":"large) Iterables","Fragments":["to"]},{"Key":"Iterables to","Fragments":["do"]},{"Key":"do so","Fragments":["-"]},{"Key":"so -","Fragments":["you"]},{"Key":"this with","Fragments":["simple","map","a"]},{"Key":"simple math","Fragments":["instead."]},{"Key":"as said,","Fragments":["it"]},{"Key":"said, it","Fragments":["does","still"]},{"Key":"it quite","Fragments":["elegant"]},{"Key":"quite elegant","Fragments":["looking."]},{"Key":"the execution","Fragments":["characteristics"]},{"Key":"execution characteristics","Fragments":["of"]},{"Key":"characteristics of","Fragments":["`map`"]},{"Key":"of `map`","Fragments":["and","and"]},{"Key":"and `sum`?","Fragments":["I"]},{"Key":"`sum`? I","Fragments":["don't"]},{"Key":"generate any","Fragments":["kind"]},{"Key":"any kind","Fragments":["of"]},{"Key":"of collection,","Fragments":["so"]},{"Key":"collection, so","Fragments":["folding"]},{"Key":"so folding","Fragments":["over","is"]},{"Key":"folding over","Fragments":["the"]},{"Key":"input seemed","Fragments":["most"]},{"Key":"seemed most","Fragments":["sensible"]},{"Key":"most sensible","Fragments":["to"]},{"Key":"sensible to","Fragments":["me."]},{"Key":"that `(1","Fragments":["to"]},{"Key":"`(1 to","Fragments":["n)`"]},{"Key":"to n)`","Fragments":["is"]},{"Key":"n)` is","Fragments":["slightly"]},{"Key":"the ```(1","Fragments":["to"]},{"Key":"```(1 to","Fragments":["n)```","64)"]},{"Key":"to n)```","Fragments":["instead"]},{"Key":"n)``` instead","Fragments":["of"]},{"Key":"using ```.map(...).sum```","Fragments":["instead"]},{"Key":"```.map(...).sum``` instead","Fragments":["of"]},{"Key":"sure this","Fragments":["version"]},{"Key":"the first,","Fragments":["but"]},{"Key":"first, but","Fragments":["I"]},{"Key":"because `hey`","Fragments":["is"]},{"Key":"now quicker","Fragments":["to"]},{"Key":"quicker to","Fragments":["skim."]},{"Key":"model phrases.","Fragments":["The"]},{"Key":"phrases. The","Fragments":["downside"]},{"Key":"The downside","Fragments":["is"]},{"Key":"downside is","Fragments":["that"]},{"Key":"that now","Fragments":["you"]},{"Key":"modify two","Fragments":["classes"]},{"Key":"two classes","Fragments":["to"]},{"Key":"classes to","Fragments":["add"]},{"Key":"add functionality","Fragments":["instead"]},{"Key":"functionality instead","Fragments":["of","of"]},{"Key":"changing a","Fragments":["single"]},{"Key":"types because","Fragments":["the"]},{"Key":"the \"is\"","Fragments":["prefix"]},{"Key":"\"is\" prefix","Fragments":["should"]},{"Key":"prefix should","Fragments":["make"]},{"Key":"clear enough","Fragments":["the"]},{"Key":"enough the","Fragments":["methods"]},{"Key":"a non","Fragments":["recursive"]},{"Key":"non recursive","Fragments":["way"]},{"Key":"recursive way","Fragments":["to"]},{"Key":"of iterations","Fragments":["through"]},{"Key":"iterations through","Fragments":["your"]},{"Key":"through your","Fragments":["string"]},{"Key":"your string","Fragments":["(reverse,"]},{"Key":"string (reverse,","Fragments":["forall,"]},{"Key":"(reverse, forall,","Fragments":["zipWithIndex,"]},{"Key":"forall, zipWithIndex,","Fragments":["map,"]},{"Key":"zipWithIndex, map,","Fragments":["sum)"]},{"Key":"map, sum)","Fragments":["when"]},{"Key":"sum) when","Fragments":["you"]},{"Key":"Think of","Fragments":["this"]},{"Key":"exercise as","Fragments":["parsing"]},{"Key":"as parsing","Fragments":["the","logic"]},{"Key":"parsing the","Fragments":["string,"]},{"Key":"the string,","Fragments":["you","then"]},{"Key":"string, you","Fragments":["can"]},{"Key":"go through","Fragments":["all"]},{"Key":"through all","Fragments":["the","that","possible"]},{"Key":"digits one","Fragments":["at"]},{"Key":"one at","Fragments":["a"]},{"Key":"time while","Fragments":["representing"]},{"Key":"while representing","Fragments":["an"]},{"Key":"representing an","Fragments":["invalid"]},{"Key":"invalid input","Fragments":["with"]},{"Key":"input with","Fragments":["None"]},{"Key":"with None","Fragments":["and","if"]},{"Key":"None and","Fragments":["a"]},{"Key":"valid one","Fragments":["with"]},{"Key":"with Some(value)","Fragments":["where"]},{"Key":"Some(value) where","Fragments":["value"]},{"Key":"where value","Fragments":["represents"]},{"Key":"value represents","Fragments":["the"]},{"Key":"represents the","Fragments":["value"]},{"Key":"string parsed","Fragments":["until"]},{"Key":"parsed until","Fragments":["this"]},{"Key":"until this","Fragments":["point,"]},{"Key":"this point,","Fragments":["then"]},{"Key":"point, then","Fragments":["everytime"]},{"Key":"then everytime","Fragments":["you"]},{"Key":"everytime you","Fragments":["need"]},{"Key":"parse one","Fragments":["more"]},{"Key":"one more","Fragments":["element,"]},{"Key":"more element,","Fragments":["either"]},{"Key":"element, either","Fragments":["it"]},{"Key":"either it","Fragments":["is"]},{"Key":"valid digit","Fragments":["and"]},{"Key":"can shift","Fragments":["your"]},{"Key":"shift your","Fragments":["current"]},{"Key":"current value","Fragments":["by"]},{"Key":"value by","Fragments":["one"]},{"Key":"by one","Fragments":["to","-","yielded"]},{"Key":"one to","Fragments":["the","check"]},{"Key":"the left","Fragments":["and"]},{"Key":"left and","Fragments":["add","right"]},{"Key":"the digit","Fragments":["or"]},{"Key":"digit or","Fragments":["replace"]},{"Key":"or replace","Fragments":["your"]},{"Key":"replace your","Fragments":["current"]},{"Key":"current result","Fragments":["with"]},{"Key":"result with","Fragments":["None"]},{"Key":"None if","Fragments":["it","the"]},{"Key":"hardest part","Fragments":["of"]},{"Key":"of programming","Fragments":["acc."]},{"Key":"programming acc.","Fragments":["to"]},{"Key":"to some!","Fragments":[":-)"]},{"Key":"some! :-)","Fragments":["Try"]},{"Key":"Try find","Fragments":["a"]},{"Key":"name then","Fragments":["just"]},{"Key":"Also watch","Fragments":["out"]},{"Key":"watch out","Fragments":["for"]},{"Key":"out for","Fragments":["magic"]},{"Key":"for magic","Fragments":["Strings/numbers/..."]},{"Key":"magic Strings/numbers/...","Fragments":["(like"]},{"Key":"Strings/numbers/... (like","Fragments":["your"]},{"Key":"(like your","Fragments":["regex,"]},{"Key":"your regex,","Fragments":["perhaps","I"]},{"Key":"regex, perhaps","Fragments":["even"]},{"Key":"perhaps even","Fragments":["A","better:","inline"]},{"Key":"even A","Fragments":["G"]},{"Key":"A G","Fragments":["C"]},{"Key":"G C","Fragments":["T)"]},{"Key":"C T)","Fragments":["and"]},{"Key":"T) and","Fragments":["turn"]},{"Key":"and turn","Fragments":["them","it"]},{"Key":"turn them","Fragments":["into"]},{"Key":"a true","Fragments":["constant","match"]},{"Key":"true constant","Fragments":["w/"]},{"Key":"constant w/","Fragments":["a"]},{"Key":"your anonymous","Fragments":["fold"]},{"Key":"anonymous fold","Fragments":["function"]},{"Key":"fold function","Fragments":["into"]},{"Key":"separate named","Fragments":["function."]},{"Key":" @agustina","Fragments":["I"]},{"Key":"@agustina I","Fragments":["am"]},{"Key":"am searching","Fragments":["for"]},{"Key":"searching for","Fragments":["you"]},{"Key":"Again, you","Fragments":["have"]},{"Key":"get into","Fragments":["the","the","the","this"]},{"Key":"Scala groove!","Fragments":[";-)",":-)"]},{"Key":" Ranges","Fragments":["are"]},{"Key":"Ranges are","Fragments":["normally"]},{"Key":"are normally","Fragments":["expressed"]},{"Key":"normally expressed","Fragments":["by"]},{"Key":"expressed by","Fragments":["using","using"]},{"Key":"using \"to\"","Fragments":["or"]},{"Key":"\"to\" or","Fragments":["\"until\",","\"until\""]},{"Key":"or \"until\",","Fragments":["e.g."]},{"Key":"\"until\", e.g.","Fragments":["\"1"]},{"Key":"e.g. \"1","Fragments":["to"]},{"Key":"\"1 to","Fragments":["5\""]},{"Key":"Fixed some","Fragments":["sensless"]},{"Key":"some sensless","Fragments":["things"]},{"Key":"sensless things","Fragments":["from"]},{"Key":"things from","Fragments":["iteration"]},{"Key":"from iteration","Fragments":["one"]},{"Key":"iteration one","Fragments":["like"]},{"Key":"one like","Fragments":["using"]},{"Key":"using Sequence","Fragments":["for"]},{"Key":"Sequence for","Fragments":["some"]},{"Key":"reason instead","Fragments":["of"]},{"Key":"just String.","Fragments":["Did"]},{"Key":"String. Did","Fragments":["some"]},{"Key":"Did some","Fragments":["code"]},{"Key":"some code","Fragments":["cleaning","to"]},{"Key":"code cleaning","Fragments":["also."]},{"Key":"Good thinking,","Fragments":["thanks!"]},{"Key":"great, to","Fragments":["slightly"]},{"Key":"to slightly","Fragments":["improve,"]},{"Key":"slightly improve,","Fragments":["the"]},{"Key":"improve, the","Fragments":["third"]},{"Key":"third condition","Fragments":["can"]},{"Key":"condition can","Fragments":["be"]},{"Key":"be simplified","Fragments":["as","to:","(or","with","to","as","(apply","some","to:"]},{"Key":"simplified as","Fragments":["`x.trim.isEmpty`.","`\"\"\"[^\\W]+\"\"\"`."]},{"Key":"Perhaps have","Fragments":["a","a","```Math.pow(10D,"]},{"Key":"for ```y","Fragments":["%"]},{"Key":"```y %","Fragments":["_"]},{"Key":"% _","Fragments":["=="]},{"Key":"_ ==","Fragments":["0```"]},{"Key":"0``` in","Fragments":["addition"]},{"Key":"in addition","Fragments":["to","to"]},{"Key":"addition to","Fragments":["or","```forall```"]},{"Key":"to or","Fragments":["even","choose"]},{"Key":"even instead","Fragments":["of"]},{"Key":"these different","Fragments":["DivX"]},{"Key":"different DivX","Fragments":["vals."]},{"Key":" Div4","Fragments":["\u0026\u0026"]},{"Key":"Div4 \u0026\u0026","Fragments":["(!Duv100"]},{"Key":"\u0026\u0026 (!Duv100","Fragments":["||"]},{"Key":"(!Duv100 ||","Fragments":["Div400)"]},{"Key":"|| Div400)","Fragments":["achieves"]},{"Key":"Div400) achieves","Fragments":["the"]},{"Key":"achieves the","Fragments":["same"]},{"Key":" Wow.","Fragments":["Very"]},{"Key":"Wow. Very","Fragments":["concise."]},{"Key":"it's less","Fragments":["concise","important,"]},{"Key":"less concise","Fragments":["but","than"]},{"Key":"concise but","Fragments":["for","less"]},{"Key":"for readability,","Fragments":["what","but"]},{"Key":"readability, what","Fragments":["do"]},{"Key":"about defining","Fragments":["explicitely"]},{"Key":"defining explicitely","Fragments":["the"]},{"Key":"explicitely the","Fragments":["return"]},{"Key":"def wordCount():","Fragments":["Map[String,"]},{"Key":"wordCount(): Map[String,","Fragments":["Int]"]},{"Key":"Map[String, Int]","Fragments":["="]},{"Key":"Int] =","Fragments":["...","{"]},{"Key":"def words():","Fragments":["Seq[String]"]},{"Key":"words(): Seq[String]","Fragments":["="]},{"Key":"Seq[String] =","Fragments":["..."]},{"Key":"def countWord(word:","Fragments":["String):"]},{"Key":"countWord(word: String):","Fragments":["Int"]},{"Key":"have helped","Fragments":["me"]},{"Key":"helped me","Fragments":["to","a"]},{"Key":"understand quickly","Fragments":["what"]},{"Key":"quickly what","Fragments":["you"]},{"Key":"did (but","Fragments":["I'm"]},{"Key":"(but I'm","Fragments":["not"]},{"Key":"Scala expert:","Fragments":["I"]},{"Key":"expert: I","Fragments":["may"]},{"Key":"I may","Fragments":["not","have"]},{"Key":"be fluent","Fragments":["in"]},{"Key":"fluent in","Fragments":["reading"]},{"Key":"in reading","Fragments":["it)."]},{"Key":"Again, ```require```","Fragments":["from"]},{"Key":"Predef suggests","Fragments":["itself"]},{"Key":"itself for","Fragments":["the"]},{"Key":"that: Nice!","Fragments":[":-)"]},{"Key":"nice going","Fragments":["with"]},{"Key":"going with","Fragments":["the","private"]},{"Key":"Wow, ours","Fragments":["are"]},{"Key":"ours are","Fragments":["surprisingly"]},{"Key":"are surprisingly","Fragments":["similar."]},{"Key":"surprisingly similar.","Fragments":["I"]},{"Key":"similar. I","Fragments":["did"]},{"Key":"did a","Fragments":["lot","solution","similar","bit"]},{"Key":"less work","Fragments":["to"]},{"Key":"uniqueness in","Fragments":["the"]},{"Key":"the Robot","Fragments":["object,"]},{"Key":"Robot object,","Fragments":["though,"]},{"Key":"object, though,","Fragments":["just"]},{"Key":"though, just","Fragments":["enough"]},{"Key":"just enough","Fragments":["to"]},{"Key":"isn't meant","Fragments":["to"]},{"Key":"meant to","Fragments":["be","nitpick"]},{"Key":"be super","Fragments":["efficient"]},{"Key":"super efficient","Fragments":["-"]},{"Key":"things in","Fragments":["Scala","smallest"]},{"Key":"Scala I'd","Fragments":["not","recommend"]},{"Key":"I'd not","Fragments":["played"]},{"Key":"not played","Fragments":["with"]},{"Key":"played with","Fragments":["much:"]},{"Key":"* String","Fragments":["interpolation"]},{"Key":"with formatting","Fragments":["directives"]},{"Key":"no guarantee","Fragments":["2"]},{"Key":"guarantee 2","Fragments":["robots"]},{"Key":"2 robots","Fragments":["won't"]},{"Key":"robots won't","Fragments":["get"]},{"Key":"won't get","Fragments":["the"]},{"Key":"same name,","Fragments":["but"]},{"Key":"is *EXTREMELY","Fragments":["UNLIKELY*"]},{"Key":"*EXTREMELY UNLIKELY*","Fragments":["since"]},{"Key":"UNLIKELY* since","Fragments":["`Random()`"]},{"Key":"since `Random()`","Fragments":["rarely"]},{"Key":"`Random()` rarely","Fragments":["(ever?)"]},{"Key":"rarely (ever?)","Fragments":["generates"]},{"Key":"(ever?) generates","Fragments":["the"]},{"Key":"generates the","Fragments":["same"]},{"Key":"same random","Fragments":["number"]},{"Key":"random number","Fragments":["twice","per"]},{"Key":"number twice","Fragments":["in"]},{"Key":" Too,","Fragments":["this"]},{"Key":"Too, this","Fragments":["method"]},{"Key":"method only","Fragments":["generates"]},{"Key":"only generates","Fragments":["1"]},{"Key":"generates 1","Fragments":["random"]},{"Key":"1 random","Fragments":["number"]},{"Key":"number per","Fragments":["robot"]},{"Key":"per robot","Fragments":["name"]},{"Key":"robot name","Fragments":["-","must","out","after","is","differing","should"]},{"Key":"name -","Fragments":["instead"]},{"Key":"- instead","Fragments":["of"]},{"Key":"of 5","Fragments":["(one"]},{"Key":"5 (one","Fragments":["for"]},{"Key":"(one for","Fragments":["each"]},{"Key":"each character),","Fragments":["or"]},{"Key":"character), or","Fragments":["3"]},{"Key":"or 3","Fragments":["(2"]},{"Key":"3 (2","Fragments":["for"]},{"Key":"(2 for","Fragments":["the"]},{"Key":"the letters,","Fragments":["1","which"]},{"Key":"letters, 1","Fragments":["for"]},{"Key":"1 for","Fragments":["the"]},{"Key":"simplify using","Fragments":["the"]},{"Key":"and if","Fragments":["you","I","so,","you","want","you've"]},{"Key":"are up","Fragments":["to"]},{"Key":"something a","Fragments":["little","little","little"]},{"Key":"little different","Fragments":["try"]},{"Key":"different try","Fragments":["a"]},{"Key":"w/ `unfold`:","Fragments":["http://daily-scala.blogspot.de/2009/09/unfoldleft-and-right.html"]},{"Key":"would try","Fragments":["solving"]},{"Key":"try solving","Fragments":["this"]},{"Key":"solving this","Fragments":["by"]},{"Key":"this by","Fragments":["not","using"]},{"Key":"a \"var\".","Fragments":["You"]},{"Key":"\"var\". You","Fragments":["can"]},{"Key":"use folds","Fragments":["or"]},{"Key":"comprehensions that","Fragments":["will"]},{"Key":"will build","Fragments":["up"]},{"Key":"build up","Fragments":["the"]},{"Key":"the structures","Fragments":["for"]},{"Key":"structures for","Fragments":["you"]},{"Key":"you without","Fragments":["the"]},{"Key":"need of","Fragments":["modifying"]},{"Key":"modifying initialised","Fragments":["vars."]},{"Key":"same implementation","Fragments":["but"]},{"Key":"implementation but","Fragments":["your","let"]},{"Key":"names could","Fragments":["be"]},{"Key":" Awesome.","Fragments":["You"]},{"Key":"Awesome. You","Fragments":["can"]},{"Key":"also shorten","Fragments":["by"]},{"Key":"shorten by","Fragments":["using"]},{"Key":"using require(first.length","Fragments":["!="]},{"Key":"require(first.length !=","Fragments":["second.length)"]},{"Key":"functional way.","Fragments":["Try"]},{"Key":"way. Try","Fragments":["using"]},{"Key":"zip and","Fragments":["count"]},{"Key":" Passes","Fragments":["all"]},{"Key":"Passes all","Fragments":["the"]},{"Key":"tests, but","Fragments":["is","Bob","obviously"]},{"Key":"very robust.","Fragments":["Fails"]},{"Key":"robust. Fails","Fragments":["if"]},{"Key":"Fails if","Fragments":["question"]},{"Key":"if question","Fragments":["is"]},{"Key":"asked with","Fragments":["wording"]},{"Key":"with wording","Fragments":["as"]},{"Key":"wording as","Fragments":["given."]},{"Key":"a require","Fragments":["line"]},{"Key":"require line","Fragments":["that"]},{"Key":"line that","Fragments":["is"]},{"Key":"not \"needed\"","Fragments":["as"]},{"Key":"\"needed\" as","Fragments":["all"]},{"Key":"as all","Fragments":["provided"]},{"Key":"all provided","Fragments":["questions"]},{"Key":"provided questions","Fragments":["satisfy"]},{"Key":"questions satisfy","Fragments":["it"]},{"Key":"satisfy it","Fragments":["anyway,"]},{"Key":"it anyway,","Fragments":["but"]},{"Key":"anyway, but","Fragments":["left"]},{"Key":"but left","Fragments":["it"]},{"Key":"left it","Fragments":["there"]},{"Key":"it there","Fragments":["as","so"]},{"Key":"there as","Fragments":["guidance"]},{"Key":"as guidance","Fragments":["to"]},{"Key":"guidance to","Fragments":["myself."]},{"Key":"to myself.","Fragments":["Including"]},{"Key":"myself. Including","Fragments":["\"Option\""]},{"Key":"Including \"Option\"","Fragments":["is"]},{"Key":"\"Option\" is","Fragments":["only"]},{"Key":"only necessary","Fragments":["because"]},{"Key":"necessary because","Fragments":["the"]},{"Key":"test results","Fragments":["are"]},{"Key":"results are","Fragments":["given"]},{"Key":"are given","Fragments":["as"]},{"Key":"given as","Fragments":["\"Some\"."]},{"Key":"as \"Some\".","Fragments":["Maybe"]},{"Key":"\"Some\". Maybe","Fragments":["the"]},{"Key":"the program","Fragments":["can"]},{"Key":"program can","Fragments":["be"]},{"Key":"more robust","Fragments":["by"]},{"Key":"robust by","Fragments":["returning"]},{"Key":"by returning","Fragments":["None"]},{"Key":"returning None","Fragments":["if"]},{"Key":"the phrasing","Fragments":["of"]},{"Key":"phrasing of","Fragments":["the"]},{"Key":"the questions","Fragments":["goes"]},{"Key":"questions goes","Fragments":["wrong?"]},{"Key":"only downside","Fragments":["I"]},{"Key":"downside I","Fragments":["ran"]},{"Key":"ran into","Fragments":["here"]},{"Key":"into here","Fragments":["was"]},{"Key":"here was","Fragments":["that"]},{"Key":"was that","Fragments":["Random.nextInt(1000)","the"]},{"Key":"that Random.nextInt(1000)","Fragments":["could"]},{"Key":"Random.nextInt(1000) could","Fragments":["give"]},{"Key":"you 2","Fragments":["digits"]},{"Key":"2 digits","Fragments":["(1..99)"]},{"Key":"digits (1..99)","Fragments":["or"]},{"Key":"(1..99) or","Fragments":["4"]},{"Key":"4 (1000)","Fragments":["which"]},{"Key":"(1000) which","Fragments":["makes"]},{"Key":"tests fail","Fragments":["from","to"]},{"Key":"fail from","Fragments":["time"]},{"Key":"from time","Fragments":["to"]},{"Key":"```foldLeft``` w/","Fragments":["a"]},{"Key":"not quite","Fragments":["agree","happy"]},{"Key":"quite agree","Fragments":["with"]},{"Key":"with that,","Fragments":["given"]},{"Key":"that, given","Fragments":["the"]},{"Key":"the structure","Fragments":["of","figured"]},{"Key":"the ```hey```","Fragments":["method."]},{"Key":"```hey``` method.","Fragments":["But"]},{"Key":"method. But","Fragments":["I"]},{"Key":"way using","Fragments":["pattern"]},{"Key":"matching, something","Fragments":["I"]},{"Key":"not get","Fragments":["to","evaluated"]},{"Key":"work earlier.","Fragments":["See"]},{"Key":"earlier. See","Fragments":["the"]},{"Key":" Usage","Fragments":["of","of","of"]},{"Key":"Usage of","Fragments":["return","```SortedMap```","type"]},{"Key":"of return","Fragments":["is"]},{"Key":"is usually","Fragments":["frowned","named"]},{"Key":"usually frowned","Fragments":["upon"]},{"Key":"frowned upon","Fragments":["in"]},{"Key":"upon in","Fragments":["the"]},{"Key":"could delete","Fragments":["the"]},{"Key":"delete the","Fragments":["returns","pair"]},{"Key":"the returns","Fragments":["and"]},{"Key":"returns and","Fragments":["make","type"]},{"Key":"function an","Fragments":["if-elseIf"]},{"Key":"an if-elseIf","Fragments":["cascade."]},{"Key":"if-elseIf cascade.","Fragments":["Not"]},{"Key":"cascade. Not","Fragments":["much"]},{"Key":"Not much","Fragments":["prettier","to"]},{"Key":"much prettier","Fragments":["but"]},{"Key":"prettier but","Fragments":["idiomatic"]},{"Key":"but idiomatic","Fragments":[";)"]},{"Key":"Hi, this","Fragments":["solution"]},{"Key":"solution doesn't","Fragments":["handle"]},{"Key":"handle case","Fragments":["or"]},{"Key":"case or","Fragments":["apostrophes,"]},{"Key":"or apostrophes,","Fragments":["noticed"]},{"Key":"apostrophes, noticed","Fragments":["it"]},{"Key":"noticed it","Fragments":["fails","is"]},{"Key":"it fails","Fragments":["two"]},{"Key":"fails two","Fragments":["of"]},{"Key":"two of","Fragments":["the"]},{"Key":"regexp and","Fragments":["avoid"]},{"Key":"and avoid","Fragments":["all","these"]},{"Key":"avoid all","Fragments":["non"]},{"Key":"non word","Fragments":["characters"]},{"Key":"word characters","Fragments":["except"]},{"Key":"characters except","Fragments":["the"]},{"Key":"the apostrophe.","Fragments":["Something"]},{"Key":"apostrophe. Something","Fragments":["like"]},{"Key":"Something like","Fragments":["\"[^\\\\w']+\"","that","this:"]},{"Key":"By using","Fragments":["```case```"]},{"Key":"using ```case```","Fragments":["you"]},{"Key":"```case``` you","Fragments":["mean"]},{"Key":"mean guard","Fragments":["conditions"]},{"Key":"guard conditions","Fragments":["(e.g."]},{"Key":"conditions (e.g.","Fragments":["```case"]},{"Key":"(e.g. ```case","Fragments":["_"]},{"Key":"```case _","Fragments":["if"]},{"Key":"if ...```)?","Fragments":["And"]},{"Key":"...```)? And","Fragments":["why"]},{"Key":"why lazy","Fragments":["evaluation"]},{"Key":"evaluation of","Fragments":["```letters```"]},{"Key":"of ```letters```","Fragments":["is"]},{"Key":"```letters``` is","Fragments":["an"]},{"Key":"alternative way","Fragments":["to"]},{"Key":"this? I","Fragments":["think"]},{"Key":"these improvements","Fragments":["are"]},{"Key":"improvements are","Fragments":["independent."]},{"Key":"a nesting","Fragments":["``if/else"]},{"Key":"nesting ``if/else","Fragments":["if/else``"]},{"Key":"``if/else if/else``","Fragments":["if"]},{"Key":"if/else`` if","Fragments":["in"]},{"Key":"the ``else``","Fragments":["block"]},{"Key":"``else`` block","Fragments":["by"]},{"Key":"block by","Fragments":["using"]},{"Key":" Alternatively,","Fragments":["you"]},{"Key":"Alternatively, you","Fragments":["can"]},{"Key":"same result","Fragments":["by"]},{"Key":"result by","Fragments":["declaring"]},{"Key":"declaring ``letters``","Fragments":["as"]},{"Key":"``letters`` as","Fragments":["lazy."]},{"Key":"as lazy.","Fragments":["This"]},{"Key":"lazy. This","Fragments":["way"]},{"Key":"way the","Fragments":["filtering","code","`Question`"]},{"Key":"filtering will","Fragments":["not"]},{"Key":"will not","Fragments":["be","need","share","pass","go","handle"]},{"Key":"be applied","Fragments":["until"]},{"Key":"applied until","Fragments":["the"]},{"Key":"until the","Fragments":["value","1st","wordCount"]},{"Key":"to preserve","Fragments":["the"]},{"Key":"preserve the","Fragments":["logic"]},{"Key":"logic but","Fragments":["make"]},{"Key":"but make","Fragments":["it"]},{"Key":"it safer","Fragments":["-"]},{"Key":"safer -","Fragments":["i.e."]},{"Key":"i.e. make","Fragments":["it"]},{"Key":"it impossible","Fragments":["to"]},{"Key":"impossible to","Fragments":["pass"]},{"Key":"pass an","Fragments":["illegal"]},{"Key":"an illegal","Fragments":["allergen"]},{"Key":"illegal allergen","Fragments":["value"]},{"Key":"allergen value","Fragments":["(such"]},{"Key":"value (such","Fragments":["as"]},{"Key":"(such as","Fragments":["`5`)","toLowerCase)"]},{"Key":"as `5`)","Fragments":["to"]},{"Key":"`5`) to","Fragments":["any"]},{"Key":"to any","Fragments":["of"]},{"Key":"any of","Fragments":["these"]},{"Key":" They","Fragments":["should","are","are"]},{"Key":"They should","Fragments":["be,"]},{"Key":"should be,","Fragments":["it's"]},{"Key":"be, it's","Fragments":["the"]},{"Key":"only executable","Fragments":["specification"]},{"Key":"executable specification","Fragments":["available"]},{"Key":"specification available","Fragments":[":-)!"]},{"Key":"Ok, you","Fragments":["may","can"]},{"Key":"point here","Fragments":["-"]},{"Key":"- if","Fragments":["the","not,","some"]},{"Key":"only valid","Fragments":["problem"]},{"Key":"valid problem","Fragments":["description."]},{"Key":"problem description.","Fragments":[":-)"]},{"Key":"No tests","Fragments":["exist"]},{"Key":"tests exist","Fragments":["for"]},{"Key":"exist for","Fragments":["either"]},{"Key":"for either","Fragments":["of"]},{"Key":"either of","Fragments":["those"]},{"Key":"those situations","Fragments":["I'm"]},{"Key":"situations I'm","Fragments":["afraid"]},{"Key":" Sounds","Fragments":["like"]},{"Key":"Sounds like","Fragments":["the"]},{"Key":"suite should","Fragments":["be"]},{"Key":"first 2","Fragments":["characters"]},{"Key":"2 characters","Fragments":["must"]},{"Key":"characters must","Fragments":["be"]},{"Key":"be letters","Fragments":["and"]},{"Key":"no digits?!","Fragments":[":-)"]},{"Key":"Also missing","Fragments":["is"]},{"Key":" Actually,","Fragments":["the"]},{"Key":"Actually, the","Fragments":["test"]},{"Key":"test uses","Fragments":["the"]},{"Key":"uses the","Fragments":["`\\w`"]},{"Key":"the `\\w`","Fragments":["for"]},{"Key":"`\\w` for","Fragments":["its"]},{"Key":"for its","Fragments":["regex"]},{"Key":"its regex","Fragments":["so"]},{"Key":"regex so","Fragments":["it","that"]},{"Key":" ```\\w","Fragments":["A"]},{"Key":"```\\w A","Fragments":["word"]},{"Key":"A word","Fragments":["character:"]},{"Key":"word character:","Fragments":["[a-zA-Z_0-9]```"]},{"Key":" ```OrderedValues```","Fragments":["instead"]},{"Key":"```OrderedValues``` instead","Fragments":["of"]},{"Key":"of deprecated","Fragments":["view"]},{"Key":"deprecated view","Fragments":["bound,"]},{"Key":"view bound,","Fragments":["taken"]},{"Key":"bound, taken","Fragments":["over"]},{"Key":"taken over","Fragments":["from"]},{"Key":"over from","Fragments":["@raoul"]},{"Key":"good. You","Fragments":["can"]},{"Key":"a `a.zip(b).count`","Fragments":["with"]},{"Key":"`a.zip(b).count` with","Fragments":["the"]},{"Key":"the predicate","Fragments":["so","methods","into","is","is"]},{"Key":"predicate so","Fragments":["that"]},{"Key":"perform the","Fragments":["filter","optimization"]},{"Key":"val mutable","Fragments":["vs"]},{"Key":"mutable vs","Fragments":["var"]},{"Key":"vs var","Fragments":["immutable"]},{"Key":" simplification","Fragments":["and","w/"]},{"Key":"simplification and","Fragments":["cleanup."]},{"Key":"have ```nucleotides.map(_","Fragments":["-\u003e"]},{"Key":"```nucleotides.map(_ -\u003e","Fragments":["0).toMap```"]},{"Key":"-\u003e 0).toMap```","Fragments":["as"]},{"Key":"0).toMap``` as","Fragments":["a"]},{"Key":"a constant,","Fragments":["though","in"]},{"Key":"constant, though","Fragments":["(and"]},{"Key":"though (and","Fragments":["move"]},{"Key":"(and move","Fragments":["it"]},{"Key":"move it","Fragments":["together","to,"]},{"Key":"it together","Fragments":["with"]},{"Key":"together with","Fragments":["```nucleotides```"]},{"Key":"with ```nucleotides```","Fragments":["to"]},{"Key":"```nucleotides``` to","Fragments":["the"]},{"Key":"companion object).","Fragments":["Btw,"]},{"Key":"object). Btw,","Fragments":["Scala"]},{"Key":"Btw, Scala","Fragments":["convention","has"]},{"Key":"start them","Fragments":["w/"]},{"Key":"them w/","Fragments":["a","an"]},{"Key":"a capital","Fragments":["letter."]},{"Key":"even shorten","Fragments":["the"]},{"Key":"shorten the","Fragments":["validity"]},{"Key":" ```dna","Fragments":["forall","map"]},{"Key":"```dna forall","Fragments":["nucleotides.contains```"]},{"Key":"of streams","Fragments":["to"]},{"Key":"streams to","Fragments":["enumerate"]},{"Key":"to enumerate","Fragments":["the","all","all"]},{"Key":"enumerate the","Fragments":["primes."]},{"Key":"of hints","Fragments":["from"]},{"Key":"hints from","Fragments":["a"]},{"Key":"a colleague","Fragments":["gave","of"]},{"Key":"colleague gave","Fragments":["me"]},{"Key":"much cleaner","Fragments":["version","code,","solution!","with"]},{"Key":"cleaner version","Fragments":["using"]},{"Key":"same ideas.","Fragments":["I"]},{"Key":"ideas. I","Fragments":["feel"]},{"Key":"feel I","Fragments":["should"]},{"Key":"get here","Fragments":["myself,"]},{"Key":"here myself,","Fragments":["really."]},{"Key":"myself, really.","Fragments":["He"]},{"Key":"really. He","Fragments":["then"]},{"Key":"He then","Fragments":["showed"]},{"Key":"then showed","Fragments":["me"]},{"Key":"showed me","Fragments":["his"]},{"Key":"me his","Fragments":["solution,"]},{"Key":"his solution,","Fragments":["which"]},{"Key":"solution, which","Fragments":["used","is"]},{"Key":"which used","Fragments":[".groupBy(identity).mapValues(_.length)","`zip`"]},{"Key":"used .groupBy(identity).mapValues(_.length)","Fragments":["in"]},{"Key":".groupBy(identity).mapValues(_.length) in","Fragments":["place"]},{"Key":"in place","Fragments":["of"]},{"Key":"my countWords","Fragments":["method,"]},{"Key":"countWords method,","Fragments":["which"]},{"Key":"method, which","Fragments":["is","contained","is"]},{"Key":"is clearly","Fragments":["a","how"]},{"Key":"clearly a","Fragments":["lot"]},{"Key":"lot better,","Fragments":["but"]},{"Key":"have got","Fragments":["there"]},{"Key":"got there","Fragments":["by"]},{"Key":"there by","Fragments":["myself."]},{"Key":" despite","Fragments":["the"]},{"Key":"despite the","Fragments":["curly"]},{"Key":"braces, I","Fragments":["like"]},{"Key":"one better!","Fragments":[":-)"]},{"Key":"example exercise","Fragments":["also"]},{"Key":"exercise also","Fragments":["has"]},{"Key":"object instance.","Fragments":["But.."]},{"Key":"instance. But..","Fragments":["You"]},{"Key":"But.. You","Fragments":["could"]},{"Key":"could avoid","Fragments":["creating"]},{"Key":"avoid creating","Fragments":["the"]},{"Key":"object instance","Fragments":["by"]},{"Key":"instance by","Fragments":["making"]},{"Key":"making Dna","Fragments":["a"]},{"Key":"Dna a","Fragments":["case"]},{"Key":"Your `match`","Fragments":["statement"]},{"Key":"not exhaustive,","Fragments":["which"]},{"Key":"exhaustive, which","Fragments":["you"]},{"Key":"which you","Fragments":["should","can","can"]},{"Key":"always strive","Fragments":["for."]},{"Key":"strive for.","Fragments":["In"]},{"Key":"for. In","Fragments":["this"]},{"Key":"case, I","Fragments":["think","also","took"]},{"Key":"a catch-all","Fragments":["clause","object"]},{"Key":"catch-all clause","Fragments":["at"]},{"Key":"clause at","Fragments":["the"]},{"Key":"end returning","Fragments":["`\"0000000000\"`"]},{"Key":"returning `\"0000000000\"`","Fragments":["makes"]},{"Key":"`\"0000000000\"` makes","Fragments":["sense."]},{"Key":" implemented","Fragments":["as","two","two"]},{"Key":"implemented as","Fragments":["functions","a"]},{"Key":"as functions","Fragments":["in"]},{"Key":"object, because","Fragments":["there"]},{"Key":"because there","Fragments":["is"]},{"Key":" Oeh","Fragments":["nice,"]},{"Key":"Oeh nice,","Fragments":["I'll"]},{"Key":"nice, I'll","Fragments":["look"]},{"Key":"Looks good,","Fragments":["but","but"]},{"Key":"good, but","Fragments":["you","there","avoids","not"]},{"Key":"can clean","Fragments":["it","up","this"]},{"Key":"using [for","Fragments":["comprehensions](http://docs.scala-lang.org/tutorials/FAQ/yield.html)"]},{"Key":"[for comprehensions](http://docs.scala-lang.org/tutorials/FAQ/yield.html)","Fragments":["or"]},{"Key":"comprehensions](http://docs.scala-lang.org/tutorials/FAQ/yield.html) or","Fragments":["a"]},{"Key":"a combination","Fragments":["of"]},{"Key":"`flatMap` and","Fragments":["`map`.","the"]},{"Key":"used an","Fragments":["approach","implicit"]},{"Key":"approach similar","Fragments":["to"]},{"Key":"to word","Fragments":["counts"]},{"Key":"word counts","Fragments":["here"]},{"Key":"counts here","Fragments":["-"]},{"Key":"- Char","Fragments":["counts"]},{"Key":"Char counts","Fragments":["as"]},{"Key":"counts as","Fragments":["a"]},{"Key":"In case","Fragments":["i"]},{"Key":"case i","Fragments":["have"]},{"Key":"i have","Fragments":["both"]},{"Key":"have both","Fragments":["word"]},{"Key":"both word","Fragments":["count"]},{"Key":"word count","Fragments":["and"]},{"Key":"count and","Fragments":["char","nucleotideCounts"]},{"Key":"and char","Fragments":["count"]},{"Key":"char count","Fragments":["in"]},{"Key":"count in","Fragments":["the"]},{"Key":"same project,","Fragments":["how"]},{"Key":"project, how","Fragments":["should"]},{"Key":"how should","Fragments":["i"]},{"Key":"should i","Fragments":["go"]},{"Key":"i go","Fragments":["about"]},{"Key":"about reusing","Fragments":["the"]},{"Key":"good. But,","Fragments":["you"]},{"Key":"But, you","Fragments":["could"]},{"Key":"using ```count```","Fragments":["on"]},{"Key":"```count``` on","Fragments":["the"]},{"Key":"zipped collection","Fragments":["instead"]},{"Key":"collection instead","Fragments":["of"]},{"Key":"of ```foldLeft```","Fragments":[".","for"]},{"Key":" Variation","Fragments":["of"]},{"Key":"Variation of","Fragments":["scottcutts's"]},{"Key":"of scottcutts's","Fragments":["Raindrops."]},{"Key":"(I still","Fragments":["wonder"]},{"Key":"still wonder","Fragments":["why"]},{"Key":"why ```unfold```","Fragments":["is"]},{"Key":"```unfold``` is","Fragments":["not"]},{"Key":"of Scala's","Fragments":["collection","```Int```?"]},{"Key":"omit `_*`","Fragments":["as"]},{"Key":"`_*` as","Fragments":["you"]},{"Key":" attempting","Fragments":["to"]},{"Key":"idiomatic by","Fragments":["removing"]},{"Key":"removing semicolons","Fragments":["and"]},{"Key":"semicolons and","Fragments":["the"]},{"Key":"the extra","Fragments":["variable","points","backslashes","step","chars","challenge!","length"]},{"Key":"extra variable","Fragments":["we"]},{"Key":"variable we","Fragments":["aren't"]},{"Key":"yeah well,","Fragments":["that"]},{"Key":"well, that","Fragments":["is"]},{"Key":"thing w/","Fragments":["metaphors:"]},{"Key":"w/ metaphors:","Fragments":["they"]},{"Key":"metaphors: they","Fragments":["work"]},{"Key":"they work","Fragments":["for"]},{"Key":"for some,","Fragments":["they"]},{"Key":"some, they","Fragments":["don't"]},{"Key":"don't for","Fragments":["others."]},{"Key":"ok, performance","Fragments":["is"]},{"Key":"performance is","Fragments":["another","not"]},{"Key":"another topic.","Fragments":["Two"]},{"Key":"topic. Two","Fragments":["things"]},{"Key":"Two things","Fragments":["come"]},{"Key":"things come","Fragments":["in","to"]},{"Key":"in (my)","Fragments":["mind"]},{"Key":"(my) mind","Fragments":["here:"]},{"Key":"mind here:","Fragments":["```breakOut```"]},{"Key":"here: ```breakOut```","Fragments":["and"]},{"Key":"```breakOut``` and","Fragments":["```view```."]},{"Key":"use ```aggregate```","Fragments":["instead"]},{"Key":"```aggregate``` instead","Fragments":["of"]},{"Key":"```foldLeft``` for","Fragments":["parallel"]},{"Key":"for parallel","Fragments":["computation."]},{"Key":" @jermaine","Fragments":["glad","yeah"]},{"Key":"@jermaine glad","Fragments":["that"]},{"Key":"glad that","Fragments":["you"]},{"Key":"1. so","Fragments":["I"]},{"Key":"love this","Fragments":["notation"]},{"Key":"this notation","Fragments":["\"/:\"","and"]},{"Key":"notation \"/:\"","Fragments":["."]},{"Key":"\"/:\" .","Fragments":["This"]},{"Key":". This","Fragments":["is"]},{"Key":"the operator","Fragments":["for"]},{"Key":"you see","Fragments":["imagine","a","how","in","here."]},{"Key":"see imagine","Fragments":["this"]},{"Key":"imagine this","Fragments":["thing"]},{"Key":"this thing","Fragments":["as"]},{"Key":"a domino","Fragments":["/:",")"]},{"Key":"domino /:","Fragments":[","]},{"Key":"/: ,","Fragments":["you"]},{"Key":", you","Fragments":["say"]},{"Key":" initialMap","Fragments":["/:"]},{"Key":"initialMap /:","Fragments":["some_list_or_map"]},{"Key":"/: some_list_or_map","Fragments":["function"]},{"Key":"it reads","Fragments":["as","\"The"]},{"Key":"reads as","Fragments":["if"]},{"Key":"the initialMap","Fragments":["is"]},{"Key":"initialMap is","Fragments":["FALLING"]},{"Key":"is FALLING","Fragments":["(as"]},{"Key":"FALLING (as","Fragments":["a"]},{"Key":"domino )","Fragments":["on"]},{"Key":") on","Fragments":["the"]},{"Key":"the list/map","Fragments":["you"]},{"Key":"list/map you","Fragments":["have"]},{"Key":"have and","Fragments":["applies"]},{"Key":"and applies","Fragments":["the","a"]},{"Key":"applies the","Fragments":["FUNCTION","op()"]},{"Key":"the FUNCTION","Fragments":["on"]},{"Key":"FUNCTION on","Fragments":["the"]},{"Key":"the explanation","Fragments":["Martin",":)"]},{"Key":"explanation Martin","Fragments":["Oderski"]},{"Key":"Martin Oderski","Fragments":["gave"]},{"Key":"Oderski gave","Fragments":["on"]},{"Key":"gave on","Fragments":["one"]},{"Key":"of his","Fragments":["presentations"]},{"Key":"his presentations","Fragments":["-"]},{"Key":"presentations -","Fragments":["and"]},{"Key":"- and","Fragments":["I"]},{"Key":"just \"got\"","Fragments":["the"]},{"Key":"\"got\" the","Fragments":["foldLeft"]},{"Key":"the foldLeft","Fragments":["better","path"]},{"Key":"foldLeft better","Fragments":[":)"]},{"Key":"2. initial","Fragments":["system"]},{"Key":"initial system","Fragments":["is"]},{"Key":"system is","Fragments":["mutable,"]},{"Key":"mutable, cause","Fragments":["I"]},{"Key":"I add","Fragments":["stuff","this"]},{"Key":"add stuff","Fragments":["to"]},{"Key":"stuff to","Fragments":["it","companion"]},{"Key":"and collect","Fragments":["the"]},{"Key":"collect the","Fragments":["new"]},{"Key":"map (yes","Fragments":["the"]},{"Key":"(yes the","Fragments":["scrabble"]},{"Key":"the scrabble","Fragments":["map"]},{"Key":"3. see","Fragments":["point"]},{"Key":"see point","Fragments":["1"]},{"Key":"point 1","Fragments":[":)"]},{"Key":"1 :)","Fragments":["I"]},{"Key":"hope I","Fragments":["could"]},{"Key":"could explain","Fragments":["it"]},{"Key":"explain it","Fragments":["-"]},{"Key":"it -","Fragments":["if"]},{"Key":"if not,","Fragments":["the"]},{"Key":"not, the","Fragments":["talk"]},{"Key":"the talk","Fragments":["is"]},{"Key":"talk is","Fragments":["in"]},{"Key":"the connections","Fragments":["page"]},{"Key":"connections page","Fragments":["-"]},{"Key":"page -","Fragments":["in"]},{"Key":"the discussion","Fragments":["about","on"]},{"Key":"about scala","Fragments":["style"]},{"Key":"scala style","Fragments":["-"]},{"Key":"style -","Fragments":["let","when"]},{"Key":"- let","Fragments":["me"]},{"Key":"me know","Fragments":["if","what","if"]},{"Key":"don't find","Fragments":["it","the","implies"]},{"Key":"@jermaine yeah","Fragments":["true"]},{"Key":"yeah true","Fragments":["story"]},{"Key":"true story","Fragments":[":)"]},{"Key":"story :)","Fragments":["let's"]},{"Key":":) let's","Fragments":["talk"]},{"Key":"let's talk","Fragments":["performance"]},{"Key":"talk performance","Fragments":["here"]},{"Key":"performance here","Fragments":["..."]},{"Key":"here ...","Fragments":["can"]},{"Key":"... can","Fragments":["this"]},{"Key":"can this","Fragments":["be","be"]},{"Key":"this be","Fragments":["done","implemented"]},{"Key":"done faster?","Fragments":["I"]},{"Key":"faster? I","Fragments":["traverse"]},{"Key":"I traverse","Fragments":["the","each"]},{"Key":"the map,","Fragments":["and"]},{"Key":"traverse each","Fragments":["list"]},{"Key":"each list","Fragments":["in"]},{"Key":"the map...","Fragments":["and"]},{"Key":"map... and","Fragments":["the"]},{"Key":"internal traverse","Fragments":["of"]},{"Key":"traverse of","Fragments":["the"]},{"Key":"list cannot","Fragments":["be"]},{"Key":"be parallelized...is","Fragments":["foldLeft"]},{"Key":"parallelized...is foldLeft","Fragments":["parallelizable"]},{"Key":"foldLeft parallelizable","Fragments":["by"]},{"Key":"parallelizable by","Fragments":["the"]},{"Key":"the \"par\"","Fragments":["colllections?..."]},{"Key":"Now what","Fragments":["is","is"]},{"Key":"is bad,","Fragments":["what"]},{"Key":"bad, what","Fragments":["is"]},{"Key":"is simple?","Fragments":[":-)"]},{"Key":"simple? :-)","Fragments":["(and"]},{"Key":":-) (and","Fragments":["what"]},{"Key":"(and what","Fragments":["is"]},{"Key":"For those","Fragments":["little"]},{"Key":"those little","Fragments":["exercises"]},{"Key":"little exercises","Fragments":["you"]},{"Key":"exercises you","Fragments":["can","could"]},{"Key":"always just","Fragments":["code","holds"]},{"Key":"just code","Fragments":["it"]},{"Key":"it down","Fragments":["w/o"]},{"Key":"down w/o","Fragments":["any"]},{"Key":"any val's,","Fragments":["private"]},{"Key":"val's, private","Fragments":["def's,"]},{"Key":"private def's,","Fragments":["type"]},{"Key":"def's, type","Fragments":["aliases,"]},{"Key":"aliases, and","Fragments":["the"]},{"Key":"the like.","Fragments":["And"]},{"Key":"like. And","Fragments":["one"]},{"Key":"And one","Fragments":["can","could"]},{"Key":"one can","Fragments":["probably","achieve"]},{"Key":"probably still","Fragments":["work","more"]},{"Key":"still work","Fragments":["out","with"]},{"Key":"work out","Fragments":["the"]},{"Key":"meaning in","Fragments":["one's"]},{"Key":"in one's","Fragments":["mind."]},{"Key":"question of","Fragments":["readability"]},{"Key":"readability is","Fragments":["(again,","another"]},{"Key":"is (again,","Fragments":["only"]},{"Key":"(again, only","Fragments":["for"]},{"Key":"small enough","Fragments":["code)"]},{"Key":"enough code)","Fragments":["then"]},{"Key":"code) then","Fragments":["just"]},{"Key":"the amount","Fragments":["of","of","of"]},{"Key":"of mental","Fragments":["effort"]},{"Key":"mental effort","Fragments":["to","will","to"]},{"Key":"effort to","Fragments":["be","understand:"]},{"Key":"be invested","Fragments":["for"]},{"Key":"invested for","Fragments":["understanding."]},{"Key":"am convinced","Fragments":["that"]},{"Key":"convinced that","Fragments":["being"]},{"Key":"that being","Fragments":["more"]},{"Key":"being more","Fragments":["verbose"]},{"Key":"more verbose","Fragments":["(using","for"]},{"Key":"verbose (using","Fragments":["the"]},{"Key":"(using the","Fragments":["above"]},{"Key":"the above","Fragments":["mentioned"]},{"Key":"above mentioned","Fragments":["means)"]},{"Key":"mentioned means)","Fragments":["can"]},{"Key":"means) can","Fragments":["substantially"]},{"Key":"can substantially","Fragments":["reduce"]},{"Key":"substantially reduce","Fragments":["this"]},{"Key":"reduce this","Fragments":["mental","to"]},{"Key":"this mental","Fragments":["effort."]},{"Key":" Of","Fragments":["course,","course","course,","course"]},{"Key":"course, you","Fragments":["can","wanted"]},{"Key":"go over","Fragments":["the","10"]},{"Key":"the top,","Fragments":["and"]},{"Key":"top, and","Fragments":["then"]},{"Key":"the mental","Fragments":["effort"]},{"Key":"effort will","Fragments":["increase"]},{"Key":"will increase","Fragments":["again"]},{"Key":"increase again","Fragments":["to"]},{"Key":"again to","Fragments":["read"]},{"Key":"all that","Fragments":["over-verbose"]},{"Key":"that over-verbose","Fragments":["code."]},{"Key":"over-verbose code.","Fragments":["As"]},{"Key":"code. As","Fragments":["often,"]},{"Key":"As often,","Fragments":["common"]},{"Key":"often, common","Fragments":["sense"]},{"Key":"common sense","Fragments":["is"]},{"Key":"sense is","Fragments":["the","the"]},{"Key":"are as","Fragments":["always"]},{"Key":"always different","Fragments":["opinions","letters,"]},{"Key":"different opinions","Fragments":["here:"]},{"Key":"opinions here:","Fragments":["A"]},{"Key":"here: A","Fragments":["proficient"]},{"Key":"A proficient","Fragments":["Scala"]},{"Key":"proficient Scala","Fragments":["coder"]},{"Key":"Scala coder","Fragments":["might"]},{"Key":"coder might","Fragments":["be"]},{"Key":"be quite","Fragments":["happy"]},{"Key":"quite happy","Fragments":["w/","with"]},{"Key":"happy w/","Fragments":["your"]},{"Key":"w/ your","Fragments":["code","calendar"]},{"Key":"code (the","Fragments":["shorter"]},{"Key":"(the shorter","Fragments":["the"]},{"Key":"shorter the","Fragments":["better)"]},{"Key":"the better)","Fragments":["as"]},{"Key":"better) as","Fragments":["he"]},{"Key":"as he","Fragments":["will"]},{"Key":"he will","Fragments":["see"]},{"Key":"will see","Fragments":["and"]},{"Key":"see and","Fragments":["understand","understand."]},{"Key":"understand the","Fragments":["underlying","advantages","use"]},{"Key":"the underlying","Fragments":["patterns"]},{"Key":"underlying patterns","Fragments":["at"]},{"Key":"patterns at","Fragments":["a"]},{"Key":"a glance.","Fragments":["There"]},{"Key":"glance. There","Fragments":["is"]},{"Key":"is even","Fragments":["a"]},{"Key":"even a","Fragments":["school","```String```"]},{"Key":"a school","Fragments":["of"]},{"Key":"school of","Fragments":["thought"]},{"Key":"of thought","Fragments":["in"]},{"Key":"thought in","Fragments":["FP"]},{"Key":"FP that","Fragments":["your"]},{"Key":"code should","Fragments":["consist"]},{"Key":"should consist","Fragments":["of","of"]},{"Key":"consist of","Fragments":["cominations","two"]},{"Key":"of cominations","Fragments":["of"]},{"Key":"cominations of","Fragments":["many"]},{"Key":"of many","Fragments":["very","if-else"]},{"Key":"many very","Fragments":["short"]},{"Key":"very short","Fragments":["functions"]},{"Key":"short functions","Fragments":["all"]},{"Key":"functions all","Fragments":["around,"]},{"Key":"all around,","Fragments":["and"]},{"Key":"around, and","Fragments":["then"]},{"Key":"can code","Fragments":["them"]},{"Key":"code them","Fragments":["in"]},{"Key":"in concise","Fragments":["and"]},{"Key":"and dense","Fragments":["one-liners"]},{"Key":"dense one-liners","Fragments":["w/"]},{"Key":"one-liners w/","Fragments":["names"]},{"Key":"w/ names","Fragments":["like"]},{"Key":"like f","Fragments":["and"]},{"Key":"f and","Fragments":["x"]},{"Key":"and x","Fragments":["only."]},{"Key":"x only.","Fragments":["Well."]},{"Key":"But we","Fragments":["can"]},{"Key":"discuss this,","Fragments":["of"]},{"Key":"this, of","Fragments":["course."]},{"Key":"too good","Fragments":["with"]},{"Key":"good with","Fragments":["folds"]},{"Key":"with folds","Fragments":["and"]},{"Key":"folds and","Fragments":["I"]},{"Key":"have few","Fragments":["questions:"]},{"Key":"* What","Fragments":["does"]},{"Key":"What does","Fragments":["/:","'s'"]},{"Key":"does /:","Fragments":["mean?"]},{"Key":"* initial","Fragments":["is"]},{"Key":"initial is","Fragments":["mutable.Map,"]},{"Key":"is mutable.Map,","Fragments":["in"]},{"Key":"mutable.Map, in","Fragments":["this"]},{"Key":"* Why","Fragments":["you","is"]},{"Key":"Why you","Fragments":["use"]},{"Key":"notation and","Fragments":["not"]},{"Key":" is","Fragments":["this","there"]},{"Key":"this bad?...","Fragments":["no"]},{"Key":"bad?... no","Fragments":["private"]},{"Key":"no private","Fragments":["methods"]},{"Key":"methods I","Fragments":["know,"]},{"Key":"still ...looks","Fragments":["readable"]},{"Key":"...looks readable","Fragments":["to"]},{"Key":"to me...a","Fragments":["simple"]},{"Key":"me...a simple","Fragments":["simple"]},{"Key":"simple simple","Fragments":["foldLeft"]},{"Key":"simple foldLeft","Fragments":[":)"]},{"Key":"this geometric","Fragments":["progression"]},{"Key":"As of","Fragments":["now"]},{"Key":"of now","Fragments":["I"]},{"Key":"prefer readability","Fragments":["and"]},{"Key":"and will","Fragments":["only","blame","try","return"]},{"Key":"only optimize","Fragments":["upon"]},{"Key":"optimize upon","Fragments":["serious"]},{"Key":"upon serious","Fragments":["customer"]},{"Key":"serious customer","Fragments":["complaints!"]},{"Key":"customer complaints!","Fragments":[";-)"]},{"Key":"made Year","Fragments":["a"]},{"Key":"Year a","Fragments":["case"]},{"Key":"class, you","Fragments":["can"]},{"Key":"time with","Fragments":["synchronization.","fewer"]},{"Key":"turn `balance`","Fragments":["into"]},{"Key":"`balance` into","Fragments":["an"]},{"Key":"an `Option`","Fragments":["you"]},{"Key":"`Option` you","Fragments":["can"]},{"Key":"btw, your","Fragments":["code","underscore"]},{"Key":"code allows","Fragments":["a"]},{"Key":"allows a","Fragments":["closed"]},{"Key":"account to","Fragments":["be"]},{"Key":"be still","Fragments":["incremented.","short"]},{"Key":"use `someString.sorted`","Fragments":["directly"]},{"Key":"`someString.sorted` directly","Fragments":["without"]},{"Key":"directly without","Fragments":["converting"]},{"Key":"without converting","Fragments":["it"]},{"Key":"converting it","Fragments":["to"]},{"Key":"2. Then","Fragments":["it"]},{"Key":"be simpler","Fragments":["by","than","here?"]},{"Key":"comparing twice","Fragments":["in"]},{"Key":"single if","Fragments":["clause."]},{"Key":"3. `words","Fragments":["filter"]},{"Key":"`words filter","Fragments":["isAnagram`","{"]},{"Key":"filter isAnagram`","Fragments":["works"]},{"Key":"isAnagram` works","Fragments":["as"]},{"Key":"works as","Fragments":["the","expected,"]},{"Key":"as `words","Fragments":["filter"]},{"Key":"filter {","Fragments":["isAnagram(_)"]},{"Key":"{ isAnagram(_)","Fragments":["}`."]},{"Key":"I prefered","Fragments":["just"]},{"Key":"prefered just","Fragments":["sorting"]},{"Key":"strings (here,","Fragments":["word"]},{"Key":"(here, word","Fragments":["and"]},{"Key":"each string","Fragments":["in"]},{"Key":"in words)","Fragments":["to"]},{"Key":"words) to","Fragments":["making"]},{"Key":"to making","Fragments":["some"]},{"Key":"making some","Fragments":["sort"]},{"Key":"of Map,","Fragments":["but"]},{"Key":"you pulled","Fragments":["it"]},{"Key":"pulled it","Fragments":["off"]},{"Key":"it off","Fragments":["fairly"]},{"Key":"off fairly","Fragments":["nicely"]},{"Key":"fairly nicely","Fragments":["here."]},{"Key":"Your deDupedWords","Fragments":["list"]},{"Key":"deDupedWords list","Fragments":["is"]},{"Key":"is nice,","Fragments":["but","but"]},{"Key":"but deduping","Fragments":["wasn't"]},{"Key":"deduping wasn't","Fragments":["in"]},{"Key":"wasn't in","Fragments":["the"]},{"Key":"spec and","Fragments":["I'm"]},{"Key":"I'm curious","Fragments":["why"]},{"Key":"used `e._2.head`","Fragments":["instead"]},{"Key":"`e._2.head` instead","Fragments":["of"]},{"Key":"also recomend","Fragments":["refactoring"]},{"Key":"recomend refactoring","Fragments":["your"]},{"Key":"refactoring your","Fragments":["filter","match"]},{"Key":"your filter","Fragments":["test","into","test"]},{"Key":" Folding","Fragments":["over"]},{"Key":"Folding over","Fragments":["the"]},{"Key":"keys is","Fragments":["much"]},{"Key":"readable. Stole","Fragments":["the"]},{"Key":"Stole the","Fragments":["idea","idea"]},{"Key":"idea from","Fragments":["@dexter.","@lonnie"]},{"Key":"not define","Fragments":["the"]},{"Key":"`val cleaned","Fragments":["="]},{"Key":"cleaned =","Fragments":["phoneNum"]},{"Key":"= phoneNum","Fragments":["filter(_.isDigit)`"]},{"Key":"phoneNum filter(_.isDigit)`","Fragments":["part"]},{"Key":"filter(_.isDigit)` part","Fragments":["in"]},{"Key":"part in","Fragments":["the"]},{"Key":"itself instead","Fragments":["of"]},{"Key":"of inside","Fragments":["the"]},{"Key":"the `number()`","Fragments":["method?"]},{"Key":"`number()` method?","Fragments":["This"]},{"Key":"method? This","Fragments":["has"]},{"Key":"This has","Fragments":["the","the"]},{"Key":"the additional","Fragments":["benefit","GC"]},{"Key":"additional benefit","Fragments":["that"]},{"Key":"to recalculate","Fragments":["the","it","it","it","it"]},{"Key":"recalculate the","Fragments":["number"]},{"Key":"the `toString()`","Fragments":["method."]},{"Key":"are worried","Fragments":["about"]},{"Key":"worried about","Fragments":["unnecessarily"]},{"Key":"about unnecessarily","Fragments":["calculating"]},{"Key":"unnecessarily calculating","Fragments":["the"]},{"Key":"calculating the","Fragments":["cleaned"]},{"Key":"the cleaned","Fragments":["number,"]},{"Key":"cleaned number,","Fragments":["you"]},{"Key":"number, you","Fragments":["could"]},{"Key":"the `lazy`","Fragments":["keyword","modifier."]},{"Key":"`lazy` keyword","Fragments":["to"]},{"Key":"keyword to","Fragments":["the"]},{"Key":"the `val`","Fragments":["which"]},{"Key":"`val` which","Fragments":["will"]},{"Key":"cause it","Fragments":["to"]},{"Key":"evaluated on","Fragments":["demand","first"]},{"Key":"on demand","Fragments":["and"]},{"Key":"demand and","Fragments":["only"]},{"Key":"first predicate","Fragments":["will"]},{"Key":"predicate will","Fragments":["recognize"]},{"Key":"will recognize","Fragments":["\"!\""]},{"Key":"recognize \"!\"","Fragments":["as"]},{"Key":"\"!\" as","Fragments":["shouting."]},{"Key":"as shouting.","Fragments":["If"]},{"Key":"shouting. If","Fragments":["it"]},{"Key":"it isn't","Fragments":["intended,","possible"]},{"Key":"isn't intended,","Fragments":["first"]},{"Key":"intended, first","Fragments":["two"]},{"Key":"two conditions","Fragments":["are","-"]},{"Key":"are enough","Fragments":["to"]},{"Key":"pass all","Fragments":["tests.","the","the"]},{"Key":"tests. `message","Fragments":["=="]},{"Key":"`message ==","Fragments":["message.toUpperCase`"]},{"Key":"== message.toUpperCase`","Fragments":["can"]},{"Key":"message.toUpperCase` can","Fragments":["also"]},{"Key":"as `message.forall(","Fragments":["!"]},{"Key":"! _.isLower)`,","Fragments":["which"]},{"Key":"_.isLower)`, which","Fragments":["is"]},{"Key":"did most","Fragments":["of"]},{"Key":"the improvements,","Fragments":["now"]},{"Key":"improvements, now","Fragments":["I"]},{"Key":"at abstracting","Fragments":["the"]},{"Key":"abstracting the","Fragments":["checks"]},{"Key":"the checks","Fragments":["out","in","are","are","mutually"]},{"Key":"checks out","Fragments":["which"]},{"Key":" Cool,","Fragments":["but","you're"]},{"Key":"Cool, but","Fragments":["a"]},{"Key":"simple boolean","Fragments":["expression"]},{"Key":"better readable","Fragments":["and"]},{"Key":"efficient (as","Fragments":["if"]},{"Key":"(as if","Fragments":["it"]},{"Key":" @dorthy","Fragments":["I"]},{"Key":"@dorthy I","Fragments":["totally"]},{"Key":"I totally","Fragments":["agree.","agree","agree","agree,"]},{"Key":"totally agree.","Fragments":["This"]},{"Key":"agree. This","Fragments":["is"]},{"Key":"definitely more","Fragments":["clever"]},{"Key":"more clever","Fragments":["than"]},{"Key":"clever than","Fragments":["readable."]},{"Key":"than readable.","Fragments":["I"]},{"Key":"was exploring","Fragments":["scala's"]},{"Key":"exploring scala's","Fragments":["pattern"]},{"Key":"scala's pattern","Fragments":["matching"]},{"Key":"matching mechanism","Fragments":["and"]},{"Key":"mechanism and","Fragments":["wanted"]},{"Key":"to apply","Fragments":["it","it"]},{"Key":"apply it","Fragments":["to","to"]},{"Key":"problem. Is","Fragments":["there"]},{"Key":"matching here","Fragments":["that's"]},{"Key":"here that's","Fragments":["less"]},{"Key":"that's less","Fragments":["clever"]},{"Key":"less clever","Fragments":["and/or"]},{"Key":"clever and/or","Fragments":["more"]},{"Key":"and/or more","Fragments":["readable?"]},{"Key":"Even though","Fragments":["it"]},{"Key":"pretty to","Fragments":["look"]},{"Key":"at I","Fragments":["find"]},{"Key":"this hard","Fragments":["to"]},{"Key":"intentions would","Fragments":["be"]},{"Key":"more clearly","Fragments":["shown"]},{"Key":"clearly shown","Fragments":["if"]},{"Key":"shown if","Fragments":["you"]},{"Key":"you broke","Fragments":["the","the","out"]},{"Key":"broke the","Fragments":["code","silence,"]},{"Key":"prefer something","Fragments":["like"]},{"Key":"like `input.filter(_.isDigit)`","Fragments":["over"]},{"Key":"`input.filter(_.isDigit)` over","Fragments":["a"]},{"Key":"a regex.","Fragments":["It's","Took"]},{"Key":"regex. It's","Fragments":["more"]},{"Key":"concise, easier","Fragments":["to"]},{"Key":"and performs","Fragments":["better."]},{"Key":"The empty","Fragments":["sequence"]},{"Key":"empty sequence","Fragments":["map"]},{"Key":"sequence map","Fragments":["can"]},{"Key":"map can","Fragments":["be"]},{"Key":"used instead","Fragments":["of"]},{"Key":"of hard-coded","Fragments":["strings."]},{"Key":"hard-coded strings.","Fragments":["You"]},{"Key":"strings. You","Fragments":["could"]},{"Key":"val sequenceCounts","Fragments":["="]},{"Key":"sequenceCounts =","Fragments":["Map('A'"]},{"Key":"= Map('A'","Fragments":["-\u003e","-\u003e"]},{"Key":"Map('A' -\u003e","Fragments":["0,","0,","0,"]},{"Key":"-\u003e 0,","Fragments":["'C'","'T'","'G'","2","'C'","'G'","'T'","'T'","'G'","'C'"]},{"Key":"0, 'C'","Fragments":["-\u003e","-\u003e","-\u003e"]},{"Key":"'C' -\u003e","Fragments":["0,","count('C'))`","0,","0).withDefault","'G',"]},{"Key":"0, 'T'","Fragments":["-\u003e","-\u003e","-\u003e"]},{"Key":"'T' -\u003e","Fragments":["0,","count('T'),","0)","0,","'A',"]},{"Key":"0, 'G'","Fragments":["-\u003e","-\u003e","-\u003e"]},{"Key":"'G' -\u003e","Fragments":["0)","count('G'),","0,","0,"]},{"Key":" require","Fragments":["(sequence.forall(w"]},{"Key":"require (sequence.forall(w","Fragments":["=\u003e"]},{"Key":"(sequence.forall(w =\u003e","Fragments":["sequenceCounts.keys.contains(w))"]},{"Key":" Please,","Fragments":["have","have"]},{"Key":"Please, have","Fragments":["a","a"]},{"Key":"can map","Fragments":["the","directly"]},{"Key":"map the","Fragments":["nucleobase","Seq"]},{"Key":"the nucleobase","Fragments":["directly:"]},{"Key":"nucleobase directly:","Fragments":["that"]},{"Key":"directly: that","Fragments":["way"]},{"Key":"always calculate","Fragments":["the"]},{"Key":"the counts","Fragments":["for","for","and","to"]},{"Key":"all possible","Fragments":["nucleotides,","combinations","robot"]},{"Key":"possible nucleotides,","Fragments":["no"]},{"Key":"nucleotides, no","Fragments":["need"]},{"Key":"if you've","Fragments":["missed","got"]},{"Key":"you've missed","Fragments":["one"]},{"Key":"missed one","Fragments":[":)"]},{"Key":"Also, you","Fragments":["can","don't","can"]},{"Key":"count() method","Fragments":["directly"]},{"Key":"method directly","Fragments":["on"]},{"Key":"originally used","Fragments":["`match`"]},{"Key":"the conditional,","Fragments":["but"]},{"Key":"conditional, but","Fragments":["I"]},{"Key":"decided at","Fragments":["the"]},{"Key":"the day","Fragments":["that"]},{"Key":"day that","Fragments":["this"]},{"Key":" yes,","Fragments":["this"]},{"Key":"yes, this","Fragments":["one"]},{"Key":"out how","Fragments":["to","to","to","to","to","to","the","to"]},{"Key":"define method","Fragments":["properly"]},{"Key":"method properly","Fragments":["for"]},{"Key":"properly for","Fragments":["passing"]},{"Key":"for passing","Fragments":["function"]},{"Key":"argument ...","Fragments":["submitted"]},{"Key":"... submitted","Fragments":["iteration"]},{"Key":"submitted iteration","Fragments":["2"]},{"Key":"2 for","Fragments":["that"]},{"Key":"again: eta-reduction!","Fragments":[";-)"]},{"Key":"But to","Fragments":["quote","what?"]},{"Key":"So sorry,","Fragments":["but"]},{"Key":"but no","Fragments":["```map```"]},{"Key":"no ```map```","Fragments":["allowed","needed?"]},{"Key":"```map``` allowed","Fragments":["here!"]},{"Key":"version you","Fragments":["could"]},{"Key":"could by","Fragments":["the"]},{"Key":"the indirection","Fragments":["point."]},{"Key":"indirection point.","Fragments":["```isEmpty```"]},{"Key":"point. ```isEmpty```","Fragments":["wasn't"]},{"Key":"```isEmpty``` wasn't","Fragments":["as"]},{"Key":"wasn't as","Fragments":["clean"]},{"Key":"as clean","Fragments":["because"]},{"Key":"clean because","Fragments":["we"]},{"Key":"we want","Fragments":["white-space","to","an","solution"]},{"Key":"want white-space","Fragments":["characters"]},{"Key":"white-space characters","Fragments":["to"]},{"Key":"characters to","Fragments":["act","points","Option"]},{"Key":"to act","Fragments":["as"]},{"Key":"act as","Fragments":["\"empty\""]},{"Key":" Scala's","Fragments":["regex","definition","lists"]},{"Key":"regex features","Fragments":["are"]},{"Key":"features are","Fragments":["very"]},{"Key":"very powerful","Fragments":["but","yet"]},{"Key":"rule only","Fragments":["employ"]},{"Key":"only employ","Fragments":["them"]},{"Key":"employ them","Fragments":["when"]},{"Key":"when it's","Fragments":["really","something"]},{"Key":"necessary. Take","Fragments":["a","a"]},{"Key":"StringOps (which","Fragments":["you"]},{"Key":"(which you","Fragments":["can"]},{"Key":"use on","Fragments":["any"]},{"Key":"on any","Fragments":["string,","type,","side"]},{"Key":"any string,","Fragments":["e.g."]},{"Key":"string, e.g.","Fragments":["addr.isEmpty)."]},{"Key":"The extra","Fragments":["level"]},{"Key":"extra level","Fragments":["of"]},{"Key":"of indirection","Fragments":["(hey/handlerForAddress)"]},{"Key":"indirection (hey/handlerForAddress)","Fragments":["probably"]},{"Key":"(hey/handlerForAddress) probably","Fragments":["isn't"]},{"Key":"probably isn't","Fragments":["necessary."]},{"Key":"isn't necessary.","Fragments":["I"]},{"Key":"necessary. I","Fragments":["think"]},{"Key":"map directly","Fragments":["from"]},{"Key":"directly from","Fragments":["addr"]},{"Key":"from addr","Fragments":["to"]},{"Key":"addr to","Fragments":["the"]},{"Key":" Trade","Fragments":["offs"]},{"Key":"- Reusability","Fragments":["(not"]},{"Key":"Reusability (not","Fragments":["very"]},{"Key":"(not very","Fragments":["reusable"]},{"Key":"very reusable","Fragments":["as"]},{"Key":"reusable as","Fragments":["parsing"]},{"Key":"parsing logic","Fragments":["is"]},{"Key":"logic is","Fragments":["tied","to","more"]},{"Key":"is tied","Fragments":["to"]},{"Key":"- Pattern","Fragments":["matching"]},{"Key":"regex was","Fragments":["an"]},{"Key":"was an","Fragments":["steep","approach","interesting","overcomplicated","attempt","elegant"]},{"Key":"an steep","Fragments":["learning"]},{"Key":"steep learning","Fragments":["curve."]},{"Key":"learning curve.","Fragments":["I"]},{"Key":"curve. I","Fragments":["now"]},{"Key":"I now","Fragments":["believe","have"]},{"Key":"now believe","Fragments":["that"]},{"Key":"believe that","Fragments":["it"]},{"Key":"it requires","Fragments":["the","the"]},{"Key":"It came","Fragments":["to"]},{"Key":"came to","Fragments":["me","like"]},{"Key":"a dream.","Fragments":["Well,"]},{"Key":"dream. Well,","Fragments":["not"]},{"Key":"Well, not","Fragments":["really"]},{"Key":"really in","Fragments":["a"]},{"Key":"a dream,","Fragments":["but"]},{"Key":"dream, but","Fragments":["while"]},{"Key":"but while","Fragments":["I"]},{"Key":"while I","Fragments":["was"]},{"Key":"add things","Fragments":["to"]},{"Key":"a Map[Int,Seq[String]]","Fragments":["I"]},{"Key":"Map[Int,Seq[String]] I","Fragments":["tried"]},{"Key":"to convert","Fragments":["the","to","them","`strand`","a","to","strings"]},{"Key":"convert the","Fragments":["Map","result"]},{"Key":"Map back","Fragments":["into"]},{"Key":"back into","Fragments":["a"]},{"Key":"a Seq[(Int,String)]","Fragments":["so"]},{"Key":"Seq[(Int,String)] so","Fragments":["it'd"]},{"Key":"so it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["easy","easier","better"]},{"Key":"be easy","Fragments":["to"]},{"Key":"append the","Fragments":["new"]},{"Key":"That made","Fragments":["me"]},{"Key":"me think","Fragments":["it'd","about"]},{"Key":"think it'd","Fragments":["be"]},{"Key":"easier not","Fragments":["to"]},{"Key":"to bother","Fragments":["with"]},{"Key":"bother with","Fragments":["the"]},{"Key":"first step,","Fragments":["and"]},{"Key":"step, and","Fragments":["just"]},{"Key":"just keep","Fragments":["a"]},{"Key":"keep a","Fragments":["list"]},{"Key":"I'll go","Fragments":["have","with"]},{"Key":"go have","Fragments":["a"]},{"Key":"other solutions,","Fragments":["because","this","tuple"]},{"Key":"solutions, because","Fragments":["I'd"]},{"Key":"because I'd","Fragments":["quite"]},{"Key":"I'd quite","Fragments":["like"]},{"Key":"how they","Fragments":["add","compare.","happen"]},{"Key":"they add","Fragments":["items"]},{"Key":"add items","Fragments":["to"]},{"Key":"items to","Fragments":["a"]},{"Key":"probably use","Fragments":["`v.sorted`"]},{"Key":"use `v.sorted`","Fragments":["rather"]},{"Key":"`v.sorted` rather","Fragments":["than"]},{"Key":"than `v.sortBy`","Fragments":["since"]},{"Key":"`v.sortBy` since","Fragments":["there"]},{"Key":"since there","Fragments":["are"]},{"Key":"are implicit","Fragments":["`Ordering`s"]},{"Key":"implicit `Ordering`s","Fragments":["for"]},{"Key":"`Ordering`s for","Fragments":["all"]},{"Key":"the built-in","Fragments":["types.","function","Scala"]},{"Key":" Keeping","Fragments":["everything"]},{"Key":"Keeping everything","Fragments":["in"]},{"Key":"and generating","Fragments":["the"]},{"Key":"generating the","Fragments":["results"]},{"Key":"the results","Fragments":["on","wanted"]},{"Key":"results on","Fragments":["the"]},{"Key":"the fly","Fragments":["was"]},{"Key":"fly was","Fragments":["an"]},{"Key":"approach I","Fragments":["hadn't"]},{"Key":"looks much","Fragments":["more","nicer.","better"]},{"Key":"like Scala,","Fragments":["using"]},{"Key":"Scala, using","Fragments":["Collection"]},{"Key":"using Collection","Fragments":["functions"]},{"Key":"like \"map\"","Fragments":["and"]},{"Key":"\"map\" and","Fragments":["\"groupBy\"."]},{"Key":"and \"groupBy\".","Fragments":["Good!"]},{"Key":"even further.","Fragments":["For"]},{"Key":"further. For","Fragments":["example,"]},{"Key":"example, try","Fragments":["to"]},{"Key":"use Map","Fragments":["function"]},{"Key":"be efficient,","Fragments":["but"]},{"Key":"but one","Fragments":["has"]},{"Key":"one has","Fragments":["to","to","pretty"]},{"Key":"bit to","Fragments":["understand"]},{"Key":"your \"weekday","Fragments":["arithmetics\"."]},{"Key":"\"weekday arithmetics\".","Fragments":[":-)"]},{"Key":"idea could","Fragments":["be","be"]},{"Key":"to increase/decrease","Fragments":["in"]},{"Key":"increase/decrease in","Fragments":["a"]},{"Key":"a loop","Fragments":["by","or"]},{"Key":"loop by","Fragments":["just"]},{"Key":"day and","Fragments":["check","get"]},{"Key":"desired weekday","Fragments":["has"]},{"Key":"weekday has","Fragments":["been"]},{"Key":"has been","Fragments":["reached.","calculated,","changed"]},{"Key":"been reached.","Fragments":["trade-off"]},{"Key":"reached. trade-off","Fragments":["between"]},{"Key":"trade-off between","Fragments":["efficiency"]},{"Key":"between efficiency","Fragments":["and"]},{"Key":"efficiency and","Fragments":["readability.","times."]},{"Key":"your underscore","Fragments":["naming"]},{"Key":"underscore naming","Fragments":["convention"]},{"Key":"really Scala","Fragments":["standard."]},{"Key":"Scala standard.","Fragments":["isn't"]},{"Key":"standard. isn't","Fragments":["it"]},{"Key":"it enough","Fragments":["to"]},{"Key":"just declare","Fragments":["val's"]},{"Key":"declare val's","Fragments":["and"]},{"Key":"val's and","Fragments":["def's","private","private"]},{"Key":"and def's","Fragments":["private?"]},{"Key":"def's private?","Fragments":["(which"]},{"Key":"private? (which","Fragments":["I"]},{"Key":"find more","Fragments":["important","nucleotides"]},{"Key":"more important","Fragments":["than","to"]},{"Key":"important than","Fragments":["prefixing","the","the"]},{"Key":"than prefixing","Fragments":["them"]},{"Key":"prefixing them","Fragments":["w/"]},{"Key":"w/ an","Fragments":["underscore","upper","upper"]},{"Key":"an underscore","Fragments":["-"]},{"Key":"underscore -","Fragments":["you"]},{"Key":"you forgot","Fragments":["to"]},{"Key":"declare your","Fragments":["helper"]},{"Key":"helper def's","Fragments":["as"]},{"Key":"def's as","Fragments":["private!"]},{"Key":"as private!","Fragments":[";-)"]},{"Key":"private! ;-)","Fragments":["."]},{"Key":"This somehow","Fragments":["doesn't"]},{"Key":"somehow doesn't","Fragments":["feel"]},{"Key":"doesn't feel","Fragments":["like","right"]},{"Key":"your ```def```s","Fragments":["(except"]},{"Key":"```def```s (except","Fragments":["for"]},{"Key":"(except for","Fragments":["your"]},{"Key":"function ```slice```)","Fragments":["changed"]},{"Key":"```slice```) changed","Fragments":["into"]},{"Key":"changed into","Fragments":["```val```s?!"]},{"Key":"into ```val```s?!","Fragments":["(and"]},{"Key":"```val```s?! (and","Fragments":["you"]},{"Key":"have them","Fragments":["as","in"]},{"Key":"as ```lazy```","Fragments":["to"]},{"Key":"```lazy``` to","Fragments":["not"]},{"Key":"the constructor)","Fragments":["as"]},{"Key":"constructor) as","Fragments":["the"]},{"Key":"values will","Fragments":["never","never","never"]},{"Key":" Make","Fragments":["```slice```"]},{"Key":"Make ```slice```","Fragments":["private?"]},{"Key":"this magic","Fragments":["number"]},{"Key":"magic number","Fragments":["20?","```9```"]},{"Key":"number 20?","Fragments":["If"]},{"Key":"20? If","Fragments":["you"]},{"Key":"mean ```substring```","Fragments":["why"]},{"Key":"```substring``` why","Fragments":["don't"]},{"Key":"why don't","Fragments":["you"]},{"Key":"don't you","Fragments":["just","just","need","agree"]},{"Key":"say ```substring```?","Fragments":[";-)"]},{"Key":"```substring```? ;-)","Fragments":["(or"]},{"Key":";-) (or","Fragments":["Scala's"]},{"Key":"(or Scala's","Fragments":["```drop(1)```,"]},{"Key":"Scala's ```drop(1)```,","Fragments":["of"]},{"Key":"```drop(1)```, of","Fragments":["course)."]},{"Key":"Perhaps easier","Fragments":["if"]},{"Key":"easier if","Fragments":["you"]},{"Key":"use ```wordsRegex```","Fragments":["to"]},{"Key":"```wordsRegex``` to","Fragments":["just"]},{"Key":"just ```split```","Fragments":["the"]},{"Key":"```split``` the","Fragments":["phrase?"]},{"Key":"need ```helperCalendar```?","Fragments":["Why"]},{"Key":"```helperCalendar```? Why","Fragments":["not"]},{"Key":"a ```GregorianCalendar```","Fragments":["as","as"]},{"Key":"```GregorianCalendar``` as","Fragments":["parameter","additional"]},{"Key":"parameter in","Fragments":["your"]},{"Key":"in accordance","Fragments":["w/"]},{"Key":"accordance w/","Fragments":["FP."]},{"Key":"Looks cleaner","Fragments":["than"]},{"Key":"than mine.","Fragments":["I"]},{"Key":" small","Fragments":["hint:","nitpick:"]},{"Key":"small hint:","Fragments":["if"]},{"Key":"hint: if","Fragments":["you"]},{"Key":"change values","Fragments":["of"]},{"Key":"Map then","Fragments":["use"]},{"Key":"the mapValues","Fragments":["function.","function."]},{"Key":"a habit","Fragments":["to"]},{"Key":"habit to","Fragments":["always"]},{"Key":"use different","Fragments":["names"]},{"Key":"different names","Fragments":["for","by"]},{"Key":"for different","Fragments":["things.","types.","input"]},{"Key":"this case:","Fragments":["\"cleanNumber\""]},{"Key":" Unfortunatelly","Fragments":["it"]},{"Key":"Unfortunatelly it","Fragments":["is"]},{"Key":"not tailrecursive,","Fragments":["so"]},{"Key":"tailrecursive, so","Fragments":["can"]},{"Key":"so can","Fragments":["not"]},{"Key":"not handle","Fragments":["big","the"]},{"Key":"handle big","Fragments":["lists."]},{"Key":"a cache!","Fragments":["(will"]},{"Key":"cache! (will","Fragments":["add"]},{"Key":"(will add","Fragments":["this"]},{"Key":"add this","Fragments":["to","to"]},{"Key":" some","Fragments":["small","more"]},{"Key":"some small","Fragments":["remarks:","things:"]},{"Key":"small remarks:","Fragments":["If"]},{"Key":"remarks: If","Fragments":["you"]},{"Key":"on an","Fragments":["Option","empty","if"]},{"Key":"have probably","Fragments":["missed","done"]},{"Key":"probably missed","Fragments":["some"]},{"Key":"missed some","Fragments":["of"]},{"Key":"of Option's","Fragments":["combinators."]},{"Key":"Option's combinators.","Fragments":["In"]},{"Key":"combinators. In","Fragments":["this"]},{"Key":"case have","Fragments":["a"]},{"Key":"collection sum","Fragments":["function"]},{"Key":"sum function","Fragments":["can"]},{"Key":"btw, I","Fragments":["usually"]},{"Key":"type to","Fragments":["vals"]},{"Key":"to vals","Fragments":["and"]},{"Key":"defs if","Fragments":["it"]},{"Key":"readability, even","Fragments":["if"]},{"Key":"compiler doesn't","Fragments":["require"]},{"Key":"doesn't require","Fragments":["it.","a"]},{"Key":"require it.","Fragments":[";-)"]},{"Key":"your internal","Fragments":["helper"]},{"Key":"internal helper","Fragments":["functions","method"]},{"Key":"Shouldn't ```db```","Fragments":["return"]},{"Key":"```db``` return","Fragments":["the"]},{"Key":"of Unit?","Fragments":["Also,"]},{"Key":"Unit? Also,","Fragments":["you"]},{"Key":"this ```map(identity)```","Fragments":["there","be"]},{"Key":"```map(identity)``` there","Fragments":["(Map"]},{"Key":"there (Map","Fragments":["is"]},{"Key":"(Map is","Fragments":["already"]},{"Key":"already immutable,","Fragments":["no"]},{"Key":"immutable, no","Fragments":["copy"]},{"Key":"no copy","Fragments":["required)."]},{"Key":"IMHO a","Fragments":["simple"]},{"Key":"if-else instead","Fragments":["of","of","of"]},{"Key":"your pattern","Fragments":["matching","matching","with","matching"]},{"Key":"you implement","Fragments":["```containsSlice```"]},{"Key":"implement ```containsSlice```","Fragments":["yourself?"]},{"Key":"```containsSlice``` yourself?","Fragments":[";-)"]},{"Key":"One related,","Fragments":["cool"]},{"Key":"related, cool","Fragments":["thing"]},{"Key":"cool thing","Fragments":["that"]},{"Key":"that Scala","Fragments":["seems","implicit"]},{"Key":"to have,","Fragments":["that"]},{"Key":"have, that","Fragments":["I"]},{"Key":"haven't toyed","Fragments":["with"]},{"Key":"toyed with","Fragments":["yet,"]},{"Key":"with yet,","Fragments":["is"]},{"Key":"yet, is","Fragments":["private"]},{"Key":"is private","Fragments":["scoping:"]},{"Key":"private scoping:","Fragments":["http://stackoverflow.com/questions/14706634/private-method-scoping-in-scala"]},{"Key":" Cool","Fragments":["solution!","to"]},{"Key":"One downside","Fragments":["to"]},{"Key":"downside to","Fragments":["this"]},{"Key":"this over","Fragments":["a"]},{"Key":"more straightforward","Fragments":["conditional","way"]},{"Key":"straightforward conditional","Fragments":["is"]},{"Key":"conditional is","Fragments":["that"]},{"Key":"each category","Fragments":["is"]},{"Key":"category is","Fragments":["in"]},{"Key":"in three","Fragments":["places:","places"]},{"Key":"three places:","Fragments":["declaration,"]},{"Key":"places: declaration,","Fragments":["mapping"]},{"Key":"declaration, mapping","Fragments":["to"]},{"Key":"mapping to","Fragments":["answer,","1's"]},{"Key":"to answer,","Fragments":["conditional."]},{"Key":"answer, conditional.","Fragments":["That"]},{"Key":"conditional. That","Fragments":["means"]},{"Key":"means adding","Fragments":["another"]},{"Key":"adding another","Fragments":["requires"]},{"Key":"another requires","Fragments":["changes"]},{"Key":"requires changes","Fragments":["in"]},{"Key":"changes in","Fragments":["three"]},{"Key":"three places","Fragments":["which"]},{"Key":"places which","Fragments":["could"]},{"Key":"get bothersome","Fragments":["and"]},{"Key":"bothersome and","Fragments":["lead"]},{"Key":"and lead","Fragments":["to"]},{"Key":" True.","Fragments":["At"]},{"Key":"True. At","Fragments":["worst,"]},{"Key":"At worst,","Fragments":["you'll"]},{"Key":"worst, you'll","Fragments":["probably"]},{"Key":"a compilation","Fragments":["error,"]},{"Key":"compilation error,","Fragments":["not"]},{"Key":"error, not","Fragments":["a"]},{"Key":"Another thought,","Fragments":["as"]},{"Key":"thought, as","Fragments":["a"]},{"Key":"noob with","Fragments":["an"]},{"Key":"an OO","Fragments":["background:"]},{"Key":"OO background:","Fragments":["the"]},{"Key":"background: the","Fragments":["`classify`"]},{"Key":"the `classify`","Fragments":["method"]},{"Key":"`classify` method","Fragments":["is"]},{"Key":"is public","Fragments":["but","so","and"]},{"Key":"public but","Fragments":["doesn't"]},{"Key":"but doesn't","Fragments":["have","pass"]},{"Key":"doesn't have","Fragments":["to"]},{"Key":"to be,","Fragments":["and"]},{"Key":"be, and","Fragments":["indeed"]},{"Key":"and indeed","Fragments":["exposing"]},{"Key":"indeed exposing","Fragments":["that"]},{"Key":"exposing that","Fragments":["as"]},{"Key":"that as","Fragments":["part"]},{"Key":"Bob's public","Fragments":["interface"]},{"Key":"public interface","Fragments":["risks"]},{"Key":"interface risks","Fragments":["making"]},{"Key":"risks making","Fragments":["refactoring"]},{"Key":"making refactoring","Fragments":["harder."]},{"Key":"refactoring harder.","Fragments":["Do"]},{"Key":"harder. Do","Fragments":["you"]},{"Key":"think that's","Fragments":["a","probably","significantly"]},{"Key":"that's a","Fragments":["concern?","matter","must"]},{"Key":"a concern?","Fragments":["Researching"]},{"Key":"concern? Researching","Fragments":["Scala,"]},{"Key":"Researching Scala,","Fragments":["I"]},{"Key":"Scala, I","Fragments":["get","still"]},{"Key":"the impression","Fragments":["that","that","you"]},{"Key":"impression that","Fragments":["private","private"]},{"Key":"that private","Fragments":["vs.","versus"]},{"Key":"private vs.","Fragments":["public"]},{"Key":"vs. public","Fragments":["isn't"]},{"Key":"public isn't","Fragments":["considered","much"]},{"Key":"isn't considered","Fragments":["very"]},{"Key":"considered very","Fragments":["important."]},{"Key":"Well the","Fragments":["type","point"]},{"Key":"type system","Fragments":["should","to"]},{"Key":"system should","Fragments":["provide"]},{"Key":"provide some","Fragments":["assistance","nice"]},{"Key":"some assistance","Fragments":["in"]},{"Key":"assistance in","Fragments":["solving"]},{"Key":"in solving","Fragments":["that"]},{"Key":"solving that","Fragments":["kind"]},{"Key":"that kind","Fragments":["of"]},{"Key":"of refactoring","Fragments":["problem."]},{"Key":"refactoring problem.","Fragments":["This"]},{"Key":"problem. This","Fragments":["should"]},{"Key":"This should","Fragments":["be"]},{"Key":"to internationalize,","Fragments":["for"]},{"Key":"internationalize, for","Fragments":["example."]},{"Key":"do wish","Fragments":["Scala"]},{"Key":"wish Scala","Fragments":["has","did"]},{"Key":"a data","Fragments":["type."]},{"Key":"data type.","Fragments":["This"]},{"Key":"type. This","Fragments":["is"]},{"Key":"is so","Fragments":["much","short,","original"]},{"Key":"shorter in","Fragments":["Haskell."]},{"Key":"I too","Fragments":["have"]},{"Key":"too have","Fragments":["the"]},{"Key":"private versus","Fragments":["public"]},{"Key":"versus public","Fragments":["isn't"]},{"Key":"isn't much","Fragments":["of","benefit"]},{"Key":"a concern,","Fragments":["but"]},{"Key":"concern, but","Fragments":["I"]},{"Key":"little Scala","Fragments":["experience."]},{"Key":"Scala experience.","Fragments":["I"]},{"Key":"experience. I","Fragments":["also"]},{"Key":"also wish","Fragments":["Scala"]},{"Key":"Scala did","Fragments":["exports"]},{"Key":"did exports","Fragments":["explicitly"]},{"Key":"exports explicitly","Fragments":["like"]},{"Key":"explicitly like","Fragments":["Erlang"]},{"Key":"like Erlang","Fragments":["or"]},{"Key":"Erlang or","Fragments":["Haskell"]},{"Key":"or Haskell","Fragments":[":)"]},{"Key":"Did a","Fragments":["bit"]},{"Key":"of research","Fragments":["about"]},{"Key":"research about","Fragments":["the"]},{"Key":"the parts","Fragments":["of","would"]},{"Key":"a US","Fragments":["phonenumber"]},{"Key":"US phonenumber","Fragments":["so"]},{"Key":"phonenumber so","Fragments":["used"]},{"Key":"so used","Fragments":["those"]},{"Key":"used those","Fragments":["names"]},{"Key":"those names","Fragments":["instead","as"]},{"Key":"names instead","Fragments":["of"]},{"Key":" Wondered","Fragments":["if"]},{"Key":"Wondered if","Fragments":["Scala"]},{"Key":"if Scala","Fragments":["had"]},{"Key":"Scala had","Fragments":["a(nother)","zipWith"]},{"Key":"had a(nother)","Fragments":["way"]},{"Key":"a(nother) way","Fragments":["of"]},{"Key":"getting variable","Fragments":["content"]},{"Key":"variable content","Fragments":["into"]},{"Key":"content into","Fragments":["a"]},{"Key":"String (previous","Fragments":["solution"]},{"Key":"(previous solution","Fragments":["was"]},{"Key":"was how","Fragments":["I"]},{"Key":"done it","Fragments":["in","recursively,"]},{"Key":"in Java)","Fragments":["aparently"]},{"Key":"Java) aparently","Fragments":["Scala"]},{"Key":"aparently Scala","Fragments":["has"]},{"Key":"something called","Fragments":["[String"]},{"Key":"called [String","Fragments":["Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)"]},{"Key":"also saw","Fragments":["I"]},{"Key":"saw I","Fragments":["was"]},{"Key":"was removing","Fragments":["interpuntion"]},{"Key":"removing interpuntion","Fragments":["and"]},{"Key":"interpuntion and","Fragments":["a"]},{"Key":"space instead","Fragments":["of"]},{"Key":"of everyting","Fragments":["not"]},{"Key":"everyting not","Fragments":["being"]},{"Key":"not being","Fragments":["a"]},{"Key":"a number.","Fragments":["(guess"]},{"Key":"number. (guess","Fragments":["that's"]},{"Key":"(guess that's","Fragments":["due"]},{"Key":"that's due","Fragments":["to"]},{"Key":"to being","Fragments":["still"]},{"Key":"being still","Fragments":["in"]},{"Key":"still in","Fragments":["the"]},{"Key":" Figured","Fragments":["it"]},{"Key":"Figured it","Fragments":["could"]},{"Key":"be cleared","Fragments":["to"]},{"Key":"cleared to","Fragments":["write"]},{"Key":"checks in","Fragments":["a"]},{"Key":"a match/case","Fragments":["construction"]},{"Key":"match/case construction","Fragments":["instead"]},{"Key":"construction instead","Fragments":["of"]},{"Key":"my earlier","Fragments":["version"]},{"Key":"earlier version","Fragments":["I"]},{"Key":"version I","Fragments":["hated"]},{"Key":"I hated","Fragments":["that"]},{"Key":"hated that","Fragments":["I"]},{"Key":"original msg","Fragments":["parameter"]},{"Key":"msg parameter","Fragments":["around"]},{"Key":"parameter around","Fragments":["that"]},{"Key":"around that","Fragments":["much."]},{"Key":"that much.","Fragments":["I"]},{"Key":"much. I","Fragments":["know"]},{"Key":"know not","Fragments":["everybody"]},{"Key":"not everybody","Fragments":["likes"]},{"Key":"everybody likes","Fragments":["this"]},{"Key":"likes this","Fragments":["functional/point-free"]},{"Key":"this functional/point-free","Fragments":["style"]},{"Key":"functional/point-free style","Fragments":["but"]},{"Key":"style but","Fragments":["it"]},{"Key":"it feels","Fragments":["better"]},{"Key":"feels better","Fragments":["to"]},{"Key":"Would I","Fragments":["use"]},{"Key":"in company","Fragments":["code?"]},{"Key":"company code?","Fragments":["Depends"]},{"Key":"code? Depends","Fragments":["on"]},{"Key":"Depends on","Fragments":["the"]},{"Key":"the team","Fragments":[":)"]},{"Key":"Not too","Fragments":["sure"]},{"Key":"too sure","Fragments":["about"]},{"Key":"sure about","Fragments":["the","leaving","the","the","jschauls"]},{"Key":"the RuleMaker","Fragments":["class"]},{"Key":"RuleMaker class","Fragments":["though."]},{"Key":"class though.","Fragments":["Appears"]},{"Key":"though. Appears","Fragments":["to"]},{"Key":"Appears to","Fragments":["be"]},{"Key":"be overkill.","Fragments":["But"]},{"Key":"overkill. But","Fragments":["it"]},{"Key":"But it","Fragments":["makes","is","would"]},{"Key":"it all","Fragments":["look","on"]},{"Key":"all look","Fragments":["like"]},{"Key":"some semi-DSL","Fragments":["and"]},{"Key":"semi-DSL and","Fragments":["might"]},{"Key":"be nice","Fragments":["on","too.)"]},{"Key":"nice on","Fragments":["bigger"]},{"Key":"on bigger","Fragments":["rule"]},{"Key":"bigger rule","Fragments":["sets."]},{"Key":"name \"matches\",","Fragments":["but"]},{"Key":"\"matches\", but","Fragments":["I"]},{"Key":"know a","Fragments":["better"]},{"Key":"better one.","Fragments":["I"]},{"Key":"one. I","Fragments":["think","started"]},{"Key":"think \"response\"","Fragments":["would"]},{"Key":"\"response\" would","Fragments":["have"]},{"Key":"better choice","Fragments":["than"]},{"Key":"choice than","Fragments":["\"respond\"."]},{"Key":"than \"respond\".","Fragments":["The"]},{"Key":"\"respond\". The","Fragments":["implicit"]},{"Key":"The implicit","Fragments":["conversion"]},{"Key":"probably overkill,","Fragments":["but"]},{"Key":"overkill, but","Fragments":["it"]},{"Key":"it enables","Fragments":["the"]},{"Key":"enables the","Fragments":["(in"]},{"Key":"the (in","Fragments":["my"]},{"Key":"my opinion)","Fragments":["nice"]},{"Key":"opinion) nice","Fragments":["definition"]},{"Key":"nice definition","Fragments":["of"]},{"Key":"of \"hey\".","Fragments":["On"]},{"Key":"\"hey\". On","Fragments":["the"]},{"Key":"hand, something","Fragments":["like"]},{"Key":"like \"Intonation(s).response\"","Fragments":["(without"]},{"Key":"\"Intonation(s).response\" (without","Fragments":["the"]},{"Key":"(without the","Fragments":["implicit"]},{"Key":"implicit conversion)","Fragments":["would"]},{"Key":"conversion) would","Fragments":["be"]},{"Key":"be fine,","Fragments":["too..."]},{"Key":"Good, @kenyon!","Fragments":["Maybe"]},{"Key":"@kenyon! Maybe","Fragments":["`endsWith`"]},{"Key":"Maybe `endsWith`","Fragments":["is"]},{"Key":"`endsWith` is","Fragments":["a"]},{"Key":"bit better","Fragments":["because","than"]},{"Key":"gives a","Fragments":["clearer"]},{"Key":"a clearer","Fragments":["understanding"]},{"Key":"clearer understanding","Fragments":["of"]},{"Key":"it that","Fragments":["we","way,","way","way","work"]},{"Key":"test (if","Fragments":["the"]},{"Key":"(if the","Fragments":["sentence"]},{"Key":"sentence **ends","Fragments":["with**"]},{"Key":"**ends with**","Fragments":["a"]},{"Key":"with** a","Fragments":["question"]},{"Key":"I essentially","Fragments":["landed"]},{"Key":"essentially landed","Fragments":["on"]},{"Key":"landed on","Fragments":["the"]},{"Key":"same solution,","Fragments":["however","except"]},{"Key":"solution, however","Fragments":["I"]},{"Key":"used s.endsWith(\"?\")","Fragments":["to"]},{"Key":"s.endsWith(\"?\") to","Fragments":["satisfy"]},{"Key":"to satisfy","Fragments":["the","the","any"]},{"Key":"satisfy the","Fragments":["defination","tests"]},{"Key":"the defination","Fragments":["for"]},{"Key":"defination for","Fragments":["isQuestion"]},{"Key":"more complicated","Fragments":["than","as","than","than"]},{"Key":"complicated than","Fragments":["it","it","it"]},{"Key":"than it","Fragments":["could","should","is","needs","could","could","should"]},{"Key":"have as","Fragments":["termination","less"]},{"Key":"as termination","Fragments":["condition"]},{"Key":"termination condition","Fragments":["```n"]},{"Key":"condition ```n","Fragments":["=="]},{"Key":"```n ==","Fragments":["0```"]},{"Key":"0``` (or","Fragments":["perhaps"]},{"Key":"(or perhaps","Fragments":["even"]},{"Key":"even better:","Fragments":["```find```"]},{"Key":"better: ```find```","Fragments":["returns"]},{"Key":"```find``` returns","Fragments":["```None```).","a"]},{"Key":" Furthermore,","Fragments":["I"]},{"Key":"Furthermore, I","Fragments":["would"]},{"Key":"a key","Fragments":["list"]},{"Key":"list that","Fragments":["I"]},{"Key":"I then","Fragments":["decrease"]},{"Key":"then decrease","Fragments":["over"]},{"Key":"decrease over","Fragments":["time"]},{"Key":"over time","Fragments":["but"]},{"Key":"time but","Fragments":["just","couldn't"]},{"Key":"but just","Fragments":["```find```"]},{"Key":"just ```find```","Fragments":["the"]},{"Key":"```find``` the","Fragments":["next"]},{"Key":"next greatest","Fragments":["suitable"]},{"Key":"greatest suitable","Fragments":["number"]},{"Key":"suitable number","Fragments":["from"]},{"Key":"number from","Fragments":["```arabicToRomanMap```."]},{"Key":"Scala provides","Fragments":["a","implicit","much","the"]},{"Key":"nice function","Fragments":["that"]},{"Key":"mapping and","Fragments":["grouping"]},{"Key":"and grouping","Fragments":["for"]},{"Key":"grouping for","Fragments":["us."]},{"Key":"for us.","Fragments":["Check"]},{"Key":"us. Check","Fragments":["out"]},{"Key":"the groupBy","Fragments":["function","was"]},{"Key":"groupBy function","Fragments":["for"]},{"Key":"for lists","Fragments":["at"]},{"Key":"lists at","Fragments":["http://www.scala-lang.org/api/2.10.3/index.html#scala.collection.immutable.List"]},{"Key":" Improved/simplified","Fragments":["isSilence"]},{"Key":"Improved/simplified isSilence","Fragments":["function"]},{"Key":"isSilence function","Fragments":["after"]},{"Key":"function after","Fragments":["looking"]},{"Key":"after looking","Fragments":["at","at"]},{"Key":"think an","Fragments":["`if"]},{"Key":"else` chain","Fragments":["would"]},{"Key":"chain would","Fragments":["be"]},{"Key":"be shorter","Fragments":["than"]},{"Key":"than `msg","Fragments":["match`"]},{"Key":"dense (split","Fragments":["up"]},{"Key":"(split up","Fragments":["the"]},{"Key":"the one-liners,","Fragments":["use"]},{"Key":"one-liners, use","Fragments":["val's"]},{"Key":"use val's","Fragments":["and","and"]},{"Key":"functions w/","Fragments":["good","good","good","good","good","good"]},{"Key":"good descriptive","Fragments":["names?),","names?","name).","names","names."]},{"Key":"descriptive names?),","Fragments":["but"]},{"Key":"names?), but","Fragments":["ok."]},{"Key":" Strings","Fragments":["in","are"]},{"Key":"Strings in","Fragments":["Scala","Scala"]},{"Key":"Scala have","Fragments":["a"]},{"Key":"a built-in","Fragments":["Ordering","string","string"]},{"Key":"built-in Ordering","Fragments":["that"]},{"Key":"Ordering that","Fragments":["you"]},{"Key":"use here","Fragments":["w/","nicely."]},{"Key":"w/ Collection","Fragments":["function"]},{"Key":"function \"sorted\"","Fragments":["(instead"]},{"Key":"\"sorted\" (instead","Fragments":["of"]},{"Key":"your own","Fragments":["ordering","w/","you","code","stuff.","h_:"]},{"Key":"own ordering","Fragments":["w/"]},{"Key":"ordering w/","Fragments":["\"sortWith\")."]},{"Key":"use eta-reduction","Fragments":["and"]},{"Key":"eta-reduction and","Fragments":["simplify"]},{"Key":"and simplify","Fragments":["```c","the","(?)","your"]},{"Key":"simplify ```c","Fragments":["=\u003e"]},{"Key":"```c =\u003e","Fragments":["scoreLetter(c)```"]},{"Key":"=\u003e scoreLetter(c)```","Fragments":["to"]},{"Key":"scoreLetter(c)``` to","Fragments":["```scoreLetter```."]},{"Key":"use ```withDefaultValue```","Fragments":["when","so"]},{"Key":"why converting","Fragments":["the"]},{"Key":"a List?","Fragments":["It"]},{"Key":"List? It","Fragments":["is"]},{"Key":"already implicitly","Fragments":["a","of"]},{"Key":"```require``` statement","Fragments":["instead"]},{"Key":"statement instead","Fragments":["of","of"]},{"Key":"your if-else","Fragments":["(keeps"]},{"Key":"if-else (keeps","Fragments":["the"]},{"Key":"(keeps the","Fragments":["code"]},{"Key":"code simpler","Fragments":["IMO)."]},{"Key":"A `foldLeft```","Fragments":["seems"]},{"Key":"`foldLeft``` seems","Fragments":["a"]},{"Key":"seems a","Fragments":["bit","bit"]},{"Key":"an overkill","Fragments":["to","here?:)"]},{"Key":"overkill to","Fragments":["me","me,","add"]},{"Key":"me here.","Fragments":["What"]},{"Key":"here. What","Fragments":["about"]},{"Key":"simple ``map```","Fragments":["and"]},{"Key":"``map``` and","Fragments":["```sum```?"]},{"Key":"and ```sum```?","Fragments":[":-)"]},{"Key":"As additional","Fragments":["solution","exercise:","exercise","exercise","exercise:"]},{"Key":" @maryjane:","Fragments":["With"]},{"Key":"@maryjane: With","Fragments":["the"]},{"Key":"With the","Fragments":["name"]},{"Key":"I choose","Fragments":["to"]},{"Key":"to follow","Fragments":["regex",":)"]},{"Key":"follow regex","Fragments":["in"]},{"Key":"the rest","Fragments":["of","of","of","to"]},{"Key":"it simply","Fragments":["need"]},{"Key":"simply need","Fragments":["to"]},{"Key":"not particularly","Fragments":["fond","readable."]},{"Key":"particularly fond","Fragments":["of"]},{"Key":"fond of","Fragments":["this","this:"]},{"Key":"this naming","Fragments":["convention"]},{"Key":"convention to","Fragments":["include"]},{"Key":"include the","Fragments":["accessibility"]},{"Key":"the accessibility","Fragments":["in"]},{"Key":"accessibility in","Fragments":["a"]},{"Key":"a variable's","Fragments":["name."]},{"Key":"description I","Fragments":["thought"]},{"Key":"two letters","Fragments":["of"]},{"Key":"letters of","Fragments":["a","the"]},{"Key":"name must","Fragments":["be"]},{"Key":"be upper-case","Fragments":["non-numeric,"]},{"Key":"upper-case non-numeric,","Fragments":["but"]},{"Key":"non-numeric, but","Fragments":["now"]},{"Key":"now looking","Fragments":["closer"]},{"Key":"looking closer","Fragments":["at"]},{"Key":"closer at","Fragments":["the"]},{"Key":"test maybe","Fragments":["you"]},{"Key":"right to","Fragments":["just","me."]},{"Key":"use .alphanumeric","Fragments":["(?)."]},{"Key":"Your digitPart","Fragments":["has"]},{"Key":"digitPart has","Fragments":["always"]},{"Key":"has always","Fragments":["a"]},{"Key":"always a","Fragments":["1","copy"]},{"Key":"a 1","Fragments":["at"]},{"Key":"1 at","Fragments":["first"]},{"Key":"at first","Fragments":["position,","glance"]},{"Key":"first position,","Fragments":["why"]},{"Key":"position, why","Fragments":["that?"]},{"Key":"the spesc","Fragments":["there"]},{"Key":"spesc there","Fragments":["is"]},{"Key":"requirement that","Fragments":["there"]},{"Key":"there be","Fragments":["no"]},{"Key":"be no","Fragments":["name"]},{"Key":"no name","Fragments":["collisions."]},{"Key":"name collisions.","Fragments":["Nothing"]},{"Key":"collisions. Nothing","Fragments":["in"]},{"Key":"Nothing in","Fragments":["your"]},{"Key":"code about","Fragments":["this."]},{"Key":"interesting problem.","Fragments":["I"]},{"Key":"problem. I","Fragments":["liked"]},{"Key":"liked creating","Fragments":["the"]},{"Key":"the ntides","Fragments":["list"]},{"Key":"ntides list","Fragments":["to"]},{"Key":"to DRY","Fragments":["up"]},{"Key":"DRY up","Fragments":["things"]},{"Key":"up things","Fragments":["a"]},{"Key":"things a","Fragments":["bit","lot","little"]},{"Key":"bit in","Fragments":["the"]},{"Key":"and nucleotideCounts","Fragments":["functions."]},{"Key":"nucleotideCounts functions.","Fragments":["I"]},{"Key":"also used","Fragments":["the"]},{"Key":"to validate","Fragments":["the"]},{"Key":"validate the","Fragments":["string"]},{"Key":"string passed","Fragments":["to"]},{"Key":"the contstructor.","Fragments":["I"]},{"Key":"contstructor. I","Fragments":["kept"]},{"Key":"kept it","Fragments":["pretty"]},{"Key":"pretty simple,","Fragments":["I"]},{"Key":"simple, I","Fragments":["think,"]},{"Key":"think, so","Fragments":["if"]},{"Key":"have criticism,","Fragments":["I'd"]},{"Key":"criticism, I'd","Fragments":["really"]},{"Key":"I'd really","Fragments":["like"]},{"Key":"to hear","Fragments":["it."]},{"Key":"hear it.","Fragments":["I"]},{"Key":"liked that","Fragments":["I"]},{"Key":"didn't use","Fragments":["any","the"]},{"Key":"any mutables","Fragments":["to"]},{"Key":"mutables to","Fragments":["get"]},{"Key":"get things","Fragments":["to","working.","working.","working"]},{"Key":"to work,","Fragments":["which"]},{"Key":"work, which","Fragments":["I've"]},{"Key":"which I've","Fragments":["been"]},{"Key":"I've been","Fragments":["guilty","having"]},{"Key":"been guilty","Fragments":["of"]},{"Key":"guilty of","Fragments":["in"]},{"Key":" @william","Fragments":["nice"]},{"Key":"@william nice","Fragments":["-"]},{"Key":"nice -","Fragments":["grazie!"]},{"Key":"use \"require\"","Fragments":["for"]},{"Key":"\"require\" for","Fragments":["validity"]},{"Key":"for validity","Fragments":["checks.","checks."]},{"Key":"And \"count\"","Fragments":["can"]},{"Key":"\"count\" can","Fragments":["replace"]},{"Key":"use ```PartialFunction```s","Fragments":["chained","chained"]},{"Key":"```PartialFunction```s chained","Fragments":["w/","w/"]},{"Key":"chained w/","Fragments":["```orElse```.","```orElse```","```orElse```."]},{"Key":"This answer","Fragments":["was"]},{"Key":"answer was","Fragments":["much"]},{"Key":"was much","Fragments":["shorter"]},{"Key":"tried compiling","Fragments":["this"]},{"Key":"compiling this","Fragments":["code"]},{"Key":"and running","Fragments":["the"]},{"Key":"running the","Fragments":["test"]},{"Key":"test cases.","Fragments":["First","If"]},{"Key":"cases. First","Fragments":["problem"]},{"Key":"First problem","Fragments":["was"]},{"Key":"problem was","Fragments":["that","coming","to"]},{"Key":"the compilation","Fragments":["failed","error."]},{"Key":"compilation failed","Fragments":["on"]},{"Key":"failed on","Fragments":["line"]},{"Key":"line 4.","Fragments":["I"]},{"Key":"4. I","Fragments":["had"]},{"Key":"to surround","Fragments":["\"phrase"]},{"Key":"surround \"phrase","Fragments":["last\""]},{"Key":"\"phrase last\"","Fragments":["with"]},{"Key":"last\" with","Fragments":["parens."]},{"Key":"with parens.","Fragments":["Second"]},{"Key":"parens. Second","Fragments":["-"]},{"Key":"Second -","Fragments":["8"]},{"Key":"- 8","Fragments":["of"]},{"Key":"8 of","Fragments":["the"]},{"Key":"tests failed.","Fragments":["4"]},{"Key":"failed. 4","Fragments":["of"]},{"Key":"4 of","Fragments":["the"]},{"Key":"the problems","Fragments":["are"]},{"Key":"problems are","Fragments":["that"]},{"Key":"are that","Fragments":["`Whoa`"]},{"Key":"that `Whoa`","Fragments":["should"]},{"Key":"`Whoa` should","Fragments":["be"]},{"Key":"spelled `Woah`.","Fragments":["Then"]},{"Key":"`Woah`. Then","Fragments":["I"]},{"Key":"Then I","Fragments":["notice","map"]},{"Key":"I notice","Fragments":["that"]},{"Key":"that tests","Fragments":["with"]},{"Key":"tests with","Fragments":["numbers"]},{"Key":"with numbers","Fragments":["and"]},{"Key":"numbers and","Fragments":["blanks"]},{"Key":"and blanks","Fragments":["are"]},{"Key":"blanks are","Fragments":["failing."]},{"Key":"the IllegalArgumentException","Fragments":["is"]},{"Key":"IllegalArgumentException is","Fragments":["the"]},{"Key":"The ```primeFactors```","Fragments":["function"]},{"Key":"```primeFactors``` function","Fragments":["can"]},{"Key":"a tail","Fragments":["recursive","recursive"]},{"Key":" Also..","Fragments":["If"]},{"Key":"Also.. If","Fragments":["you"]},{"Key":"the PrimeFactors","Fragments":["class","object."]},{"Key":"PrimeFactors class","Fragments":["into"]},{"Key":"class into","Fragments":["a","a"]},{"Key":"class, then","Fragments":["you"]},{"Key":"not need","Fragments":["the","the","for","to","to"]},{"Key":"point! Weird","Fragments":["that"]},{"Key":"Weird that","Fragments":["Calendar"]},{"Key":"that Calendar","Fragments":["is"]},{"Key":"Calendar is","Fragments":["mutable,"]},{"Key":"mutable, actually","Fragments":[":)"]},{"Key":" Same","Fragments":["opinion","for"]},{"Key":"Same opinion","Fragments":["as"]},{"Key":"opinion as","Fragments":["@kaela."]},{"Key":"Only thing","Fragments":["I","I"]},{"Key":"would consider","Fragments":["is"]},{"Key":"is modifying","Fragments":["a"]},{"Key":"modifying a","Fragments":["copy"]},{"Key":"copy of","Fragments":["the","@chris's","@bobbie","it."]},{"Key":"think you'll","Fragments":["find","find"]},{"Key":"simpler to","Fragments":["just","read,"]},{"Key":"call `filter`","Fragments":["on"]},{"Key":"the `candidateList`,","Fragments":["passing"]},{"Key":"`candidateList`, passing","Fragments":["a"]},{"Key":"predicate function","Fragments":["that","and","and"]},{"Key":"that determines","Fragments":["if"]},{"Key":"determines if","Fragments":["two"]},{"Key":"words are","Fragments":["anagrams"]},{"Key":"are anagrams","Fragments":["of","into"]},{"Key":"anagrams of","Fragments":["each","themselves,"]},{"Key":"of each","Fragments":["other","position","input","case"]},{"Key":"each other","Fragments":["(call"]},{"Key":"other (call","Fragments":["it"]},{"Key":"(call it","Fragments":["`isAnagram`,"]},{"Key":"it `isAnagram`,","Fragments":["maybe)."]},{"Key":" Used","Fragments":["standard","the"]},{"Key":"Used standard","Fragments":["results"]},{"Key":"standard results","Fragments":["for"]},{"Key":"results for","Fragments":["sum"]},{"Key":"of first","Fragments":["n","n"]},{"Key":"first n","Fragments":["number","squares."]},{"Key":"n number","Fragments":["and"]},{"Key":"number and","Fragments":["sum","divisions?"]},{"Key":"and sum","Fragments":["of","it"]},{"Key":" Solution","Fragments":["is","is"]},{"Key":"Solution is","Fragments":["correct","correct."]},{"Key":"is correct","Fragments":["and"]},{"Key":"correct and","Fragments":["can"]},{"Key":"improved. ``exixts``","Fragments":["can"]},{"Key":"``exixts`` can","Fragments":["be"]},{"Key":"by ``forall``","Fragments":["or"]},{"Key":"``forall`` or","Fragments":["``contains``."]},{"Key":"or ``contains``.","Fragments":["Check"]},{"Key":"``contains``. Check","Fragments":["[sequence"]},{"Key":"Check [sequence","Fragments":["functions](http://www.scala-lang.org/api/2.11.5/index.html#scala.collection.immutable.Seq)"]},{"Key":"[sequence functions](http://www.scala-lang.org/api/2.11.5/index.html#scala.collection.immutable.Seq)","Fragments":["available"]},{"Key":"the ```|```","Fragments":["inside"]},{"Key":"```|``` inside","Fragments":["your"]},{"Key":"your regex","Fragments":["does","you"]},{"Key":"regex does","Fragments":["not"]},{"Key":"the effect","Fragments":["you"]},{"Key":"effect you","Fragments":["probably"]},{"Key":"probably intended,","Fragments":["and"]},{"Key":"intended, and","Fragments":["you"]},{"Key":"may just","Fragments":["omit"]},{"Key":"say ```identity```","Fragments":["instead"]},{"Key":"```identity``` instead","Fragments":["of","of"]},{"Key":"might end","Fragments":["up"]},{"Key":"up simplifying","Fragments":["that"]},{"Key":"simplifying that","Fragments":["code"]},{"Key":"that code","Fragments":["away,","again"]},{"Key":"code away,","Fragments":["but"]},{"Key":"away, but","Fragments":["your","it"]},{"Key":"map +","Fragments":["sum"]},{"Key":"+ sum","Fragments":["could"]},{"Key":"sum could","Fragments":["be"]},{"Key":"a `.count`,","Fragments":["I"]},{"Key":"`.count`, I","Fragments":["think."]},{"Key":"job! I'm","Fragments":["just"]},{"Key":"getting into","Fragments":["Scala"]},{"Key":"into Scala","Fragments":["as"]},{"Key":"well. Pretty","Fragments":["tricky"]},{"Key":"Pretty tricky","Fragments":["stuff."]},{"Key":"Some ways","Fragments":["you"]},{"Key":"ways you","Fragments":["could"]},{"Key":"of \"manually\"","Fragments":["replacing"]},{"Key":"\"manually\" replacing","Fragments":["all"]},{"Key":"replacing all","Fragments":["spaces"]},{"Key":"all spaces","Fragments":["with"]},{"Key":"spaces with","Fragments":["nothing,"]},{"Key":"with nothing,","Fragments":["see"]},{"Key":"nothing, see","Fragments":["if"]},{"Key":"can find","Fragments":["a","a","out?","what"]},{"Key":"built-in string","Fragments":["method","method"]},{"Key":"string method","Fragments":["that","for","instead"]},{"Key":"same (at","Fragments":["the"]},{"Key":"(at the","Fragments":["beginning","same"]},{"Key":"of comparing","Fragments":["`.last`"]},{"Key":"comparing `.last`","Fragments":["to"]},{"Key":"`.last` to","Fragments":["a"]},{"Key":"a questionmark,","Fragments":["see"]},{"Key":"questionmark, see","Fragments":["if"]},{"Key":"for checking","Fragments":["the","toUpper,"]},{"Key":"There's also","Fragments":["a"]},{"Key":"is uppercase,","Fragments":["and"]},{"Key":"uppercase, and","Fragments":["one"]},{"Key":"and one","Fragments":["to","principle","over"]},{"Key":"it's lowercase.","Fragments":["You"]},{"Key":"lowercase. You","Fragments":["might"]},{"Key":"something clever","Fragments":["with"]},{"Key":"clever with","Fragments":["those"]},{"Key":"those two","Fragments":["methods"]},{"Key":"two methods","Fragments":["to","of"]},{"Key":"your shout","Fragments":["detection"]},{"Key":"shout detection","Fragments":["down"]},{"Key":"detection down","Fragments":["to"]},{"Key":"some thoughts","Fragments":["on"]},{"Key":"thoughts on","Fragments":["the"]},{"Key":"the higher-level","Fragments":["design"]},{"Key":"higher-level design","Fragments":["of"]},{"Key":"design of","Fragments":["the"]},{"Key":"but maybe","Fragments":["we","this","i","not","having"]},{"Key":"maybe we","Fragments":["could"]},{"Key":"could start","Fragments":["there."]},{"Key":"Yes, I","Fragments":["did","like"]},{"Key":"not find","Fragments":["containsSlice","it"]},{"Key":"find containsSlice","Fragments":["API."]},{"Key":"but would","Fragments":["be"]},{"Key":"you moved","Fragments":["the"]},{"Key":"moved the","Fragments":["logic","implicit"]},{"Key":"logic that","Fragments":["compares"]},{"Key":"that compares","Fragments":["words"]},{"Key":"compares words","Fragments":["to"]},{"Key":"words to","Fragments":["see"]},{"Key":"anagrams into","Fragments":["a"]},{"Key":"function (i.e.","Fragments":["`isAnagram`)."]},{"Key":"some duplication","Fragments":["in"]},{"Key":"duplication in","Fragments":["code"]},{"Key":"in code","Fragments":["and"]},{"Key":"and structure","Fragments":["that"]},{"Key":"structure that","Fragments":["can","you","is"]},{"Key":"be eliminated,","Fragments":["e.g."]},{"Key":"the construction","Fragments":["of"]},{"Key":"construction of","Fragments":["the","```valueMap```"]},{"Key":"Seq in","Fragments":["`days`"]},{"Key":"- all","Fragments":["the"]},{"Key":"the `first`,","Fragments":["`second`,"]},{"Key":"`first`, `second`,","Fragments":[".."]},{"Key":"`second`, ..","Fragments":["functions"]},{"Key":".. functions","Fragments":["have"]},{"Key":"lot in","Fragments":["common"]},{"Key":"`reverse` inside","Fragments":["`go`,"]},{"Key":"inside `go`,","Fragments":["but"]},{"Key":"`go`, but","Fragments":["that"]},{"Key":"saw jacksonja's","Fragments":["version,"]},{"Key":"jacksonja's version,","Fragments":["and"]},{"Key":"There's quite","Fragments":["a"]},{"Key":"of repetition","Fragments":["and"]},{"Key":"repetition and","Fragments":["a"]},{"Key":"an abuse","Fragments":["of"]},{"Key":"abuse of","Fragments":["the"]},{"Key":"the term","Fragments":["\"temp\"."]},{"Key":"term \"temp\".","Fragments":["Have"]},{"Key":"\"temp\". Have","Fragments":["you"]},{"Key":"you tried","Fragments":["extracting","using","to","using"]},{"Key":"tried extracting","Fragments":["some"]},{"Key":"extracting some","Fragments":["common"]},{"Key":"some common","Fragments":["logic"]},{"Key":"common logic","Fragments":["into"]},{"Key":"into explanatory","Fragments":["methods?"]},{"Key":"groove! :-)","Fragments":["My"]},{"Key":":-) My","Fragments":["nitpicks"]},{"Key":"My nitpicks","Fragments":["are:"]},{"Key":"val instead","Fragments":["of","of","of","of"]},{"Key":"last term","Fragments":["of"]},{"Key":"term of","Fragments":["a"]},{"Key":"is always","Fragments":["its","room","the","overwritten.","key","a"]},{"Key":"always its","Fragments":["value."]},{"Key":"its value.","Fragments":["Thus,"]},{"Key":"value. Thus,","Fragments":["you"]},{"Key":"Thus, you","Fragments":["don't"]},{"Key":"block to","Fragments":["a"]},{"Key":"a var/val","Fragments":["if"]},{"Key":"var/val if","Fragments":["it"]},{"Key":"not add","Fragments":["to"]},{"Key":"- Try","Fragments":["to"]},{"Key":"what Scala","Fragments":["Collections","has"]},{"Key":"Collections already","Fragments":["offer."]},{"Key":"already offer.","Fragments":["There"]},{"Key":"offer. There","Fragments":["is"]},{"Key":"is ```SortedMap```","Fragments":["that"]},{"Key":"```SortedMap``` that","Fragments":["can"]},{"Key":"do part","Fragments":["of"]},{"Key":"- type","Fragments":["aliases"]},{"Key":"aliases add","Fragments":["to"]},{"Key":"to readability","Fragments":["here:","or"]},{"Key":"readability here:","Fragments":["Int"]},{"Key":"here: Int","Fragments":["and"]},{"Key":"Int and","Fragments":["Seq[String]"]},{"Key":"and Seq[String]","Fragments":["don't"]},{"Key":"Seq[String] don't","Fragments":["reveal"]},{"Key":"a radical","Fragments":["approach:"]},{"Key":"radical approach:","Fragments":["For"]},{"Key":"approach: For","Fragments":["me"]},{"Key":"For me","Fragments":["a","(math.)max(1,squareSize(msg))"]},{"Key":"comment shows","Fragments":["that"]},{"Key":"code itself","Fragments":["is"]},{"Key":"could be,","Fragments":["or","but"]},{"Key":"be, or","Fragments":["it"]},{"Key":"or it","Fragments":["is"]},{"Key":"is superfluous!","Fragments":["In"]},{"Key":"superfluous! In","Fragments":["your"]},{"Key":"In your","Fragments":["case","case:"]},{"Key":"say mostly","Fragments":["the"]},{"Key":"mostly the","Fragments":["latter"]},{"Key":"regex instead","Fragments":["of","of"]},{"Key":"For an","Fragments":["all-space"]},{"Key":"an all-space","Fragments":["input,"]},{"Key":"all-space input,","Fragments":["the"]},{"Key":"input, the","Fragments":["two"]},{"Key":"two should","Fragments":["be"]},{"Key":"be equivalent","Fragments":["in"]},{"Key":"equivalent in","Fragments":["efficiency."]},{"Key":"For non-space","Fragments":["input,"]},{"Key":"non-space input,","Fragments":["phrase.forall(_.isSpaceChar)"]},{"Key":"input, phrase.forall(_.isSpaceChar)","Fragments":["is"]},{"Key":"phrase.forall(_.isSpaceChar) is","Fragments":["a"]},{"Key":"more efficient:","Fragments":["it"]},{"Key":"efficient: it","Fragments":["scans"]},{"Key":"it scans","Fragments":["from"]},{"Key":"scans from","Fragments":["the"]},{"Key":"beginning until","Fragments":["the"]},{"Key":"the 1st","Fragments":["non-space"]},{"Key":"1st non-space","Fragments":["is"]},{"Key":"non-space is","Fragments":["detected,"]},{"Key":"is detected,","Fragments":["and"]},{"Key":"detected, and","Fragments":["then"]},{"Key":" phrase.trim.isEmpty","Fragments":["probably"]},{"Key":"phrase.trim.isEmpty probably","Fragments":["does"]},{"Key":"probably does","Fragments":["the"]},{"Key":"same, but","Fragments":["it"]},{"Key":"it then","Fragments":["would"]},{"Key":"would trim","Fragments":["the"]},{"Key":"well. It","Fragments":["also"]},{"Key":"It also","Fragments":["produces","duplicated"]},{"Key":"also produces","Fragments":["and"]},{"Key":"produces and","Fragments":["then"]},{"Key":"then immediately","Fragments":["discards","discarded)"]},{"Key":"immediately discards","Fragments":["an"]},{"Key":"discards an","Fragments":["intermediate"]},{"Key":"an intermediate","Fragments":["string","list"]},{"Key":"intermediate string","Fragments":["(the"]},{"Key":"string (the","Fragments":["trimmed"]},{"Key":"(the trimmed","Fragments":["one)."]},{"Key":"It's less","Fragments":["concise"]},{"Key":"concise than","Fragments":["only"]},{"Key":"than only","Fragments":["pattern"]},{"Key":"only pattern","Fragments":["matching"]},{"Key":"matching but","Fragments":["more","ended","boolean"]},{"Key":" I'mm","Fragments":["just"]},{"Key":"I'mm just","Fragments":["wondering:"]},{"Key":"just wondering:","Fragments":["is","what"]},{"Key":"wondering: is","Fragments":["`phrase.forall(_.isSpaceChar)`"]},{"Key":"is `phrase.forall(_.isSpaceChar)`","Fragments":["more"]},{"Key":"`phrase.forall(_.isSpaceChar)` more","Fragments":["efficient"]},{"Key":" good.","Fragments":["two","My","The","small",":-)"]},{"Key":"good. two","Fragments":["minor"]},{"Key":"two minor","Fragments":["things:"]},{"Key":"move SeparatorPattern","Fragments":["to"]},{"Key":"SeparatorPattern to","Fragments":["some"]},{"Key":"object (companion","Fragments":["object"]},{"Key":"(companion object","Fragments":["suggests"]},{"Key":"suggests itself)","Fragments":["as"]},{"Key":"itself) as","Fragments":["it"]},{"Key":"use raw","Fragments":["Strings"]},{"Key":"raw Strings","Fragments":["for"]},{"Key":"Strings for","Fragments":["regex'es"]},{"Key":"for regex'es","Fragments":["so"]},{"Key":"regex'es so","Fragments":["that"]},{"Key":"w/o double","Fragments":["backslashes."]},{"Key":"to love","Fragments":["those"]},{"Key":"love those","Fragments":["long"]},{"Key":"those long","Fragments":["one-liners."]},{"Key":"can promise","Fragments":["you"]},{"Key":"promise you","Fragments":["that"]},{"Key":"you that","Fragments":["reviewers/maintainers","this"]},{"Key":"that reviewers/maintainers","Fragments":["of"]},{"Key":"reviewers/maintainers of","Fragments":["your"]},{"Key":"not share","Fragments":["this"]},{"Key":"not break","Fragments":["it"]},{"Key":"into several","Fragments":["vals"]},{"Key":"several vals","Fragments":["and/or"]},{"Key":"vals and/or","Fragments":["helper"]},{"Key":"and/or helper","Fragments":["functions"]},{"Key":"love the","Fragments":["one","addition"]},{"Key":"one liners","Fragments":["too!"]},{"Key":"liners too!","Fragments":["But"]},{"Key":"too! But","Fragments":["I"]},{"Key":"think I'll","Fragments":["have"]},{"Key":"my ways.","Fragments":["Perhaps"]},{"Key":"ways. Perhaps","Fragments":["using"]},{"Key":"Perhaps using","Fragments":["helper"]},{"Key":"using helper","Fragments":["functions"]},{"Key":"functions etc","Fragments":["would"]},{"Key":"etc would","Fragments":["make"]},{"Key":"readable -","Fragments":["see"]},{"Key":"see mine","Fragments":["for"]},{"Key":"mine for","Fragments":["equally"]},{"Key":"for equally","Fragments":["long"]},{"Key":"equally long","Fragments":["one-liner"]},{"Key":"long one-liner","Fragments":[":)"]},{"Key":" @hilda","Fragments":["ok,","just"]},{"Key":"@hilda ok,","Fragments":["for"]},{"Key":"ok, for","Fragments":["this"]},{"Key":"this short","Fragments":["computation"]},{"Key":"short computation","Fragments":["you"]},{"Key":"computation you","Fragments":["may"]},{"Key":"be right.","Fragments":[":-)"]},{"Key":"val sum","Fragments":["="]},{"Key":"sum =","Fragments":["(1"]},{"Key":"= (1","Fragments":["to"]},{"Key":"(1 to","Fragments":["n).sum"]},{"Key":"just ```sqr((1","Fragments":["to"]},{"Key":"```sqr((1 to","Fragments":["n)"]},{"Key":"to n)","Fragments":["sum)```?"]},{"Key":"No custom","Fragments":["data"]},{"Key":"custom data","Fragments":["structures."]},{"Key":"data structures.","Fragments":["Just"]},{"Key":"structures. Just","Fragments":["some"]},{"Key":"Just some","Fragments":["fun"]},{"Key":"some fun","Fragments":["with"]},{"Key":"with function","Fragments":["compositions."]},{"Key":"the types","Fragments":["you"]},{"Key":"types you","Fragments":["are"]},{"Key":"are using,","Fragments":["adds"]},{"Key":"using, adds","Fragments":["clarity!"]},{"Key":"test also","Fragments":["included"]},{"Key":"also included","Fragments":["closing"]},{"Key":"included closing","Fragments":["accounts,"]},{"Key":"closing accounts,","Fragments":["would"]},{"Key":"accounts, would","Fragments":["this"]},{"Key":"would this","Fragments":["solution"]},{"Key":"solution also","Fragments":["be"]},{"Key":"be thread","Fragments":["safe?"]},{"Key":"Also, should","Fragments":["the"]},{"Key":"should the","Fragments":["full"]},{"Key":"full `incrementBalance`","Fragments":["method"]},{"Key":"`incrementBalance` method","Fragments":["be"]},{"Key":"method be","Fragments":["synchronized?"]},{"Key":"be synchronized?","Fragments":["(I"]},{"Key":"synchronized? (I","Fragments":["only"]},{"Key":"(I only","Fragments":["synchronize"]},{"Key":"only synchronize","Fragments":["what's"]},{"Key":"synchronize what's","Fragments":["strictly"]},{"Key":"what's strictly","Fragments":["needed"]},{"Key":"strictly needed","Fragments":["to"]},{"Key":"as less","Fragments":["as"]},{"Key":"less as","Fragments":["possible"]},{"Key":"possible of","Fragments":["the"]},{"Key":"if just","Fragments":["returning"]},{"Key":"returning school","Fragments":["data"]},{"Key":"school data","Fragments":["through"]},{"Key":"data through","Fragments":["db"]},{"Key":"through db","Fragments":["would"]},{"Key":"db would","Fragments":["be"]},{"Key":"object or","Fragments":["not."]},{"Key":"just return","Fragments":["```schoolData```"]},{"Key":"return ```schoolData```","Fragments":["in"]},{"Key":"```schoolData``` in","Fragments":["function"]},{"Key":"function ```db```.","Fragments":["Point"]},{"Key":"```db```. Point","Fragments":["is"]},{"Key":"Point is","Fragments":["that"]},{"Key":"the var","Fragments":["is","from"]},{"Key":"And ```mapValues```","Fragments":["can"]},{"Key":"simplify function","Fragments":["```sorted```."]},{"Key":"Rather then","Fragments":["use"]},{"Key":"the _","Fragments":["for","and"]},{"Key":"_ for","Fragments":["all"]},{"Key":"all cases","Fragments":["you"]},{"Key":"case silent","Fragments":["if"]},{"Key":"silent if","Fragments":["statement.trim"]},{"Key":"if statement.trim","Fragments":["=="]},{"Key":"statement.trim ==","Fragments":["\"\""]},{"Key":"will allow","Fragments":["you"]},{"Key":"give names","Fragments":["to"]},{"Key":"case statement","Fragments":["that","would"]},{"Key":"readable then","Fragments":["just"]},{"Key":"first Scala","Fragments":["code,","code","exercise!"]},{"Key":"Scala code,","Fragments":["so"]},{"Key":"code, so","Fragments":["it"]},{"Key":"probably terrible.","Fragments":[":)"]},{"Key":"terrible. :)","Fragments":["Nitpick"]},{"Key":":) Nitpick","Fragments":["away!"]},{"Key":"The `groupBy`","Fragments":["method"]},{"Key":"`groupBy` method","Fragments":["is"]},{"Key":"pretty slick,","Fragments":["huh?"]},{"Key":"slick, huh?","Fragments":["It's"]},{"Key":"huh? It's","Fragments":["really"]},{"Key":"It's really","Fragments":["handy"]},{"Key":"really handy","Fragments":["for"]},{"Key":"the few","Fragments":["of"]},{"Key":"few of","Fragments":["these"]},{"Key":"these early","Fragments":["exercises"]},{"Key":"early exercises","Fragments":["where"]},{"Key":"exercises where","Fragments":["I"]},{"Key":"regex actually","Fragments":["makes"]},{"Key":"actually makes","Fragments":["the"]},{"Key":"solution cleaner","Fragments":["but"]},{"Key":"cleaner but","Fragments":["your"]},{"Key":"your approach","Fragments":["works,","is","and","after"]},{"Key":"approach works,","Fragments":["too."]},{"Key":" FYI,","Fragments":["the"]},{"Key":"FYI, the","Fragments":["function"]},{"Key":"function x","Fragments":["=\u003e"]},{"Key":"x =\u003e","Fragments":["x"]},{"Key":"x exists","Fragments":["in"]},{"Key":"exists in","Fragments":["the"]},{"Key":"library and","Fragments":["is"]},{"Key":" Code","Fragments":["clean-up"]},{"Key":"Pretty straightforward,","Fragments":["I"]},{"Key":"straightforward, I","Fragments":["guess."]},{"Key":"solutions where","Fragments":["isLeap"]},{"Key":"where isLeap","Fragments":["is"]},{"Key":"isLeap is","Fragments":["implemented"]},{"Key":"is implemented","Fragments":["as"]},{"Key":"a match.","Fragments":["I"]},{"Key":"match. I","Fragments":["dismissed"]},{"Key":"I dismissed","Fragments":["that"]},{"Key":"dismissed that","Fragments":["early"]},{"Key":"that early","Fragments":["on,"]},{"Key":"early on,","Fragments":["but"]},{"Key":"on, but","Fragments":["I"]},{"Key":"how a","Fragments":["case"]},{"Key":"statement would","Fragments":["be"]},{"Key":"why but","Fragments":["without"]},{"Key":"but without","Fragments":["mkString"]},{"Key":"without mkString","Fragments":["the"]},{"Key":"mkString the","Fragments":["code"]},{"Key":"code was","Fragments":["complaining"]},{"Key":"was complaining","Fragments":["..."]},{"Key":"complaining ...","Fragments":["maybe"]},{"Key":"... maybe","Fragments":["it"]},{"Key":"maybe it","Fragments":["was","is"]},{"Key":"else not","Fragments":["sure"]},{"Key":"is camel","Fragments":["case"]},{"Key":"camel case","Fragments":["beginning"]},{"Key":"case beginning","Fragments":["w/"]},{"Key":"beginning w/","Fragments":["an"]},{"Key":"an upper","Fragments":["case","case","case"]},{"Key":"upper case","Fragments":["letter.","is","to","letter.","names.","letter.","letter"]},{"Key":"would even","Fragments":["have"]},{"Key":"have lower","Fragments":["case"]},{"Key":"case letter","Fragments":["as","as"]},{"Key":"letter as","Fragments":["a","in"]},{"Key":"a start","Fragments":["and"]},{"Key":"start and","Fragments":["use"]},{"Key":"map as","Fragments":["a","var","val?"]},{"Key":"function (again,","Fragments":["w/"]},{"Key":"(again, w/","Fragments":["eta-reduction)."]},{"Key":"this mkString,","Fragments":["simple"]},{"Key":"mkString, simple","Fragments":["```map```"]},{"Key":"simple ```map```","Fragments":["on"]},{"Key":"```map``` on","Fragments":["a","your","the"]},{"Key":"String should","Fragments":["suffice."]},{"Key":"```dna map","Fragments":["DNA_RNA_MAPPING```"]},{"Key":"map DNA_RNA_MAPPING```","Fragments":["should"]},{"Key":"DNA_RNA_MAPPING``` should","Fragments":["be"]},{"Key":" (but","Fragments":["pls"]},{"Key":"(but pls","Fragments":["not"]},{"Key":"pls not","Fragments":["this"]},{"Key":"not this","Fragments":["Java"]},{"Key":"Java constant","Fragments":["convention)."]},{"Key":"using ()","Fragments":["after"]},{"Key":"() after","Fragments":["name"]},{"Key":"after name","Fragments":["of"]},{"Key":"of parameterless","Fragments":["methods."]},{"Key":"you actually","Fragments":["don't"]},{"Key":"actually don't","Fragments":["need","like"]},{"Key":"those comments!","Fragments":["The"]},{"Key":"comments! The","Fragments":["code"]},{"Key":"The code","Fragments":["is","is","is","is"]},{"Key":"actually quite","Fragments":["readable"]},{"Key":"and self","Fragments":["explanatory!"]},{"Key":"I'd remove","Fragments":["the"]},{"Key":"initial empty","Fragments":["comments"]},{"Key":"empty comments","Fragments":["too,"]},{"Key":"comments too,","Fragments":["and"]},{"Key":"too, and","Fragments":["auto-format","even"]},{"Key":"and auto-format","Fragments":["your"]},{"Key":"auto-format your","Fragments":["code"]},{"Key":"code so","Fragments":["you"]},{"Key":"the \"{\"","Fragments":["and"]},{"Key":"\"{\" and","Fragments":["\"}\""]},{"Key":"and \"}\"","Fragments":["in"]},{"Key":"\"}\" in","Fragments":["the"]},{"Key":"right place","Fragments":[";)","makes"]},{"Key":"of ```isClosed```","Fragments":["by"]},{"Key":"```isClosed``` by","Fragments":["turning"]},{"Key":"by turning","Fragments":["```balance```"]},{"Key":"turning ```balance```","Fragments":["into"]},{"Key":"```balance``` into","Fragments":["an"]},{"Key":"btw, personally","Fragments":["I"]},{"Key":"personally I","Fragments":["don't","try","also"]},{"Key":"on Booleans,","Fragments":["but"]},{"Key":"Booleans, but","Fragments":["that"]},{"Key":"of ```SortedMap```","Fragments":["and"]},{"Key":"```SortedMap``` and","Fragments":["```mapValues```"]},{"Key":"and ```mapValues```","Fragments":["can","to"]},{"Key":"you w/","Fragments":["sorting.","your"]},{"Key":"is ```:+```","Fragments":["for"]},{"Key":"```:+``` for","Fragments":["```Seq```."]},{"Key":"mutable object","Fragments":["to","as","to","to","to"]},{"Key":"really struggled","Fragments":["with"]},{"Key":"struggled with","Fragments":["this"]},{"Key":"with this","Fragments":["one,","solution.","implementation.","version."]},{"Key":"this one,","Fragments":["and","was"]},{"Key":"one, and","Fragments":["I"]},{"Key":"not happy","Fragments":["with","with"]},{"Key":"my use","Fragments":["of"]},{"Key":"mutable object.","Fragments":["I","But"]},{"Key":"object. I","Fragments":["will"]},{"Key":"You do","Fragments":["not"]},{"Key":"the ;","Fragments":["if"]},{"Key":"; if","Fragments":["you"]},{"Key":"you using","Fragments":["{}"]},{"Key":"using {}","Fragments":["instead"]},{"Key":"{} instead","Fragments":["of"]},{"Key":"of ()","Fragments":["in"]},{"Key":"() in","Fragments":["the","the"]},{"Key":"for comprehension.","Fragments":["Also","Interesting"]},{"Key":"comprehension. Also","Fragments":["there"]},{"Key":"have .","Fragments":["and"]},{"Key":". and","Fragments":["()"]},{"Key":" Felt","Fragments":["driven","short,"]},{"Key":"Felt driven","Fragments":["to"]},{"Key":"driven to","Fragments":["the"]},{"Key":"Option by","Fragments":["the"]},{"Key":"syntax of","Fragments":["the","loading"]},{"Key":"tests. Feel","Fragments":["I"]},{"Key":"Feel I","Fragments":["may"]},{"Key":"have missed","Fragments":["something","that"]},{"Key":"missed something","Fragments":["and"]},{"Key":"something and","Fragments":["there"]},{"Key":"there might","Fragments":["well","be"]},{"Key":"might well","Fragments":["be"]},{"Key":"well be","Fragments":["a"]},{"Key":"a superior","Fragments":["alternative."]},{"Key":"nitpick I","Fragments":["can"]},{"Key":"can really","Fragments":["come","go"]},{"Key":"really come","Fragments":["up"]},{"Key":"with is","Fragments":["a"]},{"Key":"a minor","Fragments":["style","thing,"]},{"Key":"minor style","Fragments":["issue:"]},{"Key":"issue: the","Fragments":["official"]},{"Key":"the official","Fragments":["[scala"]},{"Key":"official [scala","Fragments":["style"]},{"Key":"[scala style","Fragments":["guide](http://docs.scala-lang.org/style/declarations.html#body)"]},{"Key":"style guide](http://docs.scala-lang.org/style/declarations.html#body)","Fragments":["suggests"]},{"Key":"guide](http://docs.scala-lang.org/style/declarations.html#body) suggests","Fragments":["leaving"]},{"Key":"suggests leaving","Fragments":["out"]},{"Key":"leaving out","Fragments":["the"]},{"Key":"on one-line","Fragments":["methods"]},{"Key":"one-line methods","Fragments":["like"]},{"Key":"your `add`","Fragments":["method."]},{"Key":"`add` method.","Fragments":["I'm"]},{"Key":"method. I'm","Fragments":["not"]},{"Key":"even sure","Fragments":["I"]},{"Key":"the guide,","Fragments":["but"]},{"Key":"guide, but","Fragments":["it's"]},{"Key":"argument for","Fragments":["making"]},{"Key":"for making","Fragments":["the","me"]},{"Key":"the db","Fragments":["itself","function."]},{"Key":"db itself","Fragments":["a"]},{"Key":"itself a","Fragments":["`SortedMap`,"]},{"Key":"`SortedMap`, but","Fragments":["that"]},{"Key":"really go","Fragments":["either"]},{"Key":"way depending","Fragments":["on"]},{"Key":"on expected","Fragments":["use."]},{"Key":"expected use.","Fragments":["If"]},{"Key":"use. If","Fragments":["calls"]},{"Key":"If calls","Fragments":["to"]},{"Key":"to `sorted`","Fragments":["are"]},{"Key":"`sorted` are","Fragments":["rare,"]},{"Key":"are rare,","Fragments":["your"]},{"Key":"rare, your","Fragments":["approach"]},{"Key":"functional approach","Fragments":["would"]},{"Key":"to transform","Fragments":["the","them.","strand"]},{"Key":"transform the","Fragments":["input"]},{"Key":"input into","Fragments":["a"]},{"Key":"new data","Fragments":["structure","structure"]},{"Key":"can manipulate","Fragments":["afterwards"]},{"Key":"manipulate afterwards","Fragments":["that"]},{"Key":"afterwards that","Fragments":["is"]},{"Key":"more suitable","Fragments":["to"]},{"Key":"suitable to","Fragments":["your"]},{"Key":"your needs.","Fragments":["In"]},{"Key":"needs. In","Fragments":["this"]},{"Key":"case, you","Fragments":["could"]},{"Key":"could create","Fragments":["a"]},{"Key":"structure List[Tuple[Char,","Fragments":["Char]]"]},{"Key":"List[Tuple[Char, Char]]","Fragments":["where"]},{"Key":"Char]] where","Fragments":["each"]},{"Key":"where each","Fragments":["Tuple"]},{"Key":"each Tuple","Fragments":["of"]},{"Key":"Tuple of","Fragments":["the"]},{"Key":"list would","Fragments":["contain"]},{"Key":"would contain","Fragments":["the"]},{"Key":"each position","Fragments":["of"]},{"Key":"position of","Fragments":["the"]},{"Key":" left","Fragments":["="]},{"Key":"left =","Fragments":["ABC,"]},{"Key":"= ABC,","Fragments":["right"]},{"Key":"ABC, right","Fragments":["XYZ"]},{"Key":"right XYZ","Fragments":["---\u003e"]},{"Key":"XYZ ---\u003e","Fragments":["List((A,"]},{"Key":"---\u003e List((A,","Fragments":["X),"]},{"Key":"List((A, X),","Fragments":["(B,"]},{"Key":"X), (B,","Fragments":["Y),"]},{"Key":"(B, Y),","Fragments":["(C,"]},{"Key":"Y), (C,","Fragments":["Z))"]},{"Key":" Once","Fragments":["you","you","again,"]},{"Key":"Once you","Fragments":["have","put","allow"]},{"Key":"have that","Fragments":["data"]},{"Key":"that data","Fragments":["structure,"]},{"Key":"structure, you","Fragments":["can"]},{"Key":"can apply","Fragments":["list","eta-reduction:"]},{"Key":"apply list","Fragments":["functions"]},{"Key":"list functions","Fragments":["to"]},{"Key":"count how","Fragments":["many"]},{"Key":"many tuples","Fragments":["do"]},{"Key":"tuples do","Fragments":["not"]},{"Key":"not contain","Fragments":["the","a"]},{"Key":"same value","Fragments":["in"]},{"Key":"a java","Fragments":["8"]},{"Key":"java 8","Fragments":["user"]},{"Key":"8 user","Fragments":["keen"]},{"Key":"user keen","Fragments":["on"]},{"Key":"on functional","Fragments":["aspects"]},{"Key":"functional aspects","Fragments":["I'm"]},{"Key":"aspects I'm","Fragments":["not"]},{"Key":"really happy","Fragments":["with"]},{"Key":"loop \u0026","Fragments":["indexing"]},{"Key":"\u0026 indexing","Fragments":["I've"]},{"Key":"indexing I've","Fragments":["put"]},{"Key":"I've put","Fragments":["in"]},{"Key":"put in","Fragments":["here","a"]},{"Key":"in here","Fragments":["-"]},{"Key":"just feels","Fragments":["really"]},{"Key":"feels really","Fragments":["crufty"]},{"Key":"really crufty","Fragments":["and"]},{"Key":"crufty and","Fragments":["c++-ish"]},{"Key":"and c++-ish","Fragments":["(one"]},{"Key":"c++-ish (one","Fragments":["of"]},{"Key":"(one of","Fragments":["my"]},{"Key":"my favourite","Fragments":["languages"]},{"Key":"favourite languages","Fragments":["as"]},{"Key":"languages as","Fragments":["it"]},{"Key":"Any tips","Fragments":["on"]},{"Key":"tips on","Fragments":["making","that"]},{"Key":"on making","Fragments":["this"]},{"Key":"functional gladly","Fragments":["accepted"]},{"Key":"gladly accepted","Fragments":["-"]},{"Key":"accepted -","Fragments":["I"]},{"Key":"was wondering","Fragments":["if","why","why","if"]},{"Key":"could map","Fragments":["\u0026"]},{"Key":"map \u0026","Fragments":["compare"]},{"Key":"\u0026 compare","Fragments":["two"]},{"Key":"compare two","Fragments":["strings"]},{"Key":"strings at","Fragments":["once"]},{"Key":"at once","Fragments":["somehow?"]},{"Key":"We cleaned","Fragments":["up"]},{"Key":"cleaned up","Fragments":["the","a"]},{"Key":"remove superfluous","Fragments":["variable"]},{"Key":"superfluous variable","Fragments":["instantiations"]},{"Key":"variable instantiations","Fragments":["and"]},{"Key":"instantiations and","Fragments":["simplify"]},{"Key":"it's minimal","Fragments":["form."]},{"Key":"like `Money`","Fragments":["for"]},{"Key":"`Money` for","Fragments":["`Int`."]},{"Key":"and keep","Fragments":["the"]},{"Key":"as small","Fragments":["as"]},{"Key":"small as","Fragments":["possible,"]},{"Key":"as possible,","Fragments":["so","giving","no"]},{"Key":"possible, so","Fragments":["the"]},{"Key":"the `getBalance`","Fragments":["call"]},{"Key":"`getBalance` call","Fragments":["should"]},{"Key":"declare ```cal```","Fragments":["of"]},{"Key":"```cal``` of","Fragments":["type"]},{"Key":"type ```Calendar```?","Fragments":["and/or"]},{"Key":"```Calendar```? and/or","Fragments":["declare"]},{"Key":"and/or declare","Fragments":["the"]},{"Key":"value as","Fragments":["of"]},{"Key":"as of","Fragments":["type"]},{"Key":"or why","Fragments":["else"]},{"Key":"why else","Fragments":["did"]},{"Key":"else did","Fragments":["you"]},{"Key":"import it?","Fragments":[";-)"]},{"Key":"from ```Predef```","Fragments":["at","for","for","for"]},{"Key":"```Predef``` at","Fragments":["the"]},{"Key":"and remove","Fragments":["the","the","duplicates?","the","the"]},{"Key":"And instead","Fragments":["of"]},{"Key":"of ```filter(Not)-length```","Fragments":["you"]},{"Key":"```filter(Not)-length``` you","Fragments":["could"]},{"Key":"filter check","Fragments":["w/"]},{"Key":"check w/","Fragments":["a"]},{"Key":" Ignore","Fragments":["the","this","this"]},{"Key":"Ignore the","Fragments":["import"]},{"Key":"still don't","Fragments":["feel","like"]},{"Key":"don't feel","Fragments":["comfortable"]},{"Key":"feel comfortable","Fragments":["w/"]},{"Key":"comfortable w/","Fragments":["the"]},{"Key":"the Option","Fragments":["Monad.","type","type","monad","unwrapping"]},{"Key":"Option Monad.","Fragments":[":-)"]},{"Key":"Monad. :-)","Fragments":["try"]},{"Key":":-) try","Fragments":["to"]},{"Key":"use `filter`","Fragments":["and","and"]},{"Key":"other Option","Fragments":["functions"]},{"Key":"Option functions","Fragments":["as","are"]},{"Key":"I suggested","Fragments":["earlier."]},{"Key":"the Enumeration","Fragments":["too"]},{"Key":"Enumeration too","Fragments":["useful."]},{"Key":"too useful.","Fragments":["It"]},{"Key":"useful. It","Fragments":["would"]},{"Key":"probably cool","Fragments":["if"]},{"Key":"cool if","Fragments":["you"]},{"Key":"did some","Fragments":["localization"]},{"Key":"some localization","Fragments":["but"]},{"Key":"localization but","Fragments":["I"]},{"Key":"that String","Fragments":["constants"]},{"Key":"String constants","Fragments":["would"]},{"Key":"constants would","Fragments":["have"]},{"Key":"been sufficient","Fragments":["here."]},{"Key":"case where","Fragments":["the","there"]},{"Key":"the lengths","Fragments":["of","are"]},{"Key":"lengths of","Fragments":["the"]},{"Key":"the 2","Fragments":["lists"]},{"Key":"2 lists","Fragments":["are"]},{"Key":"lists are","Fragments":["the"]},{"Key":"same length.","Fragments":["If"]},{"Key":"length. If","Fragments":["the"]},{"Key":"If the","Fragments":["checks","spec"]},{"Key":"checks are","Fragments":["reordered","necessary","done"]},{"Key":"are reordered","Fragments":["you"]},{"Key":"reordered you","Fragments":["should"]},{"Key":"why your","Fragments":["type"]},{"Key":"your type","Fragments":["signature","alias,","alias"]},{"Key":"signature takes","Fragments":["two"]},{"Key":"takes two","Fragments":["different"]},{"Key":"two different","Fragments":["types?","ways.","algorithms","ways,"]},{"Key":"different types?","Fragments":["Wouldn't"]},{"Key":"types? Wouldn't","Fragments":["it"]},{"Key":"Wouldn't it","Fragments":["be"]},{"Key":"be comparing","Fragments":["lists"]},{"Key":"comparing lists","Fragments":["of"]},{"Key":"lists of","Fragments":["the","two"]},{"Key":"same type?","Fragments":["As"]},{"Key":"type? As","Fragments":["in"]},{"Key":"As in","Fragments":["`sublist[A](first:","Java"]},{"Key":"in `sublist[A](first:","Fragments":["List[A],"]},{"Key":"`sublist[A](first: List[A],","Fragments":["second:"]},{"Key":"List[A], second:","Fragments":["List[A])`"]},{"Key":"I initially","Fragments":["attempted","had","thought","wrote"]},{"Key":"initially attempted","Fragments":["to"]},{"Key":"attempted to","Fragments":["solve"]},{"Key":"matching and","Fragments":["recursion,","the","the","implicit","unpacking"]},{"Key":"and recursion,","Fragments":["but"]},{"Key":"recursion, but","Fragments":["it","I"]},{"Key":"it did","Fragments":["not","have"]},{"Key":"not look","Fragments":["pretty.","good:"]},{"Key":"look pretty.","Fragments":["Nor"]},{"Key":"pretty. Nor","Fragments":["did"]},{"Key":"Nor did","Fragments":["it"]},{"Key":"it produce","Fragments":["the"]},{"Key":"produce the","Fragments":["correct"]},{"Key":"the correct","Fragments":["results.","dna"]},{"Key":"correct results.","Fragments":["So,"]},{"Key":"results. So,","Fragments":["I"]},{"Key":"So, I","Fragments":["came"]},{"Key":"use ```str.forall(options.contains)```","Fragments":["instead"]},{"Key":"```str.forall(options.contains)``` instead","Fragments":["of"]},{"Key":"of ```str.filter(!options.contains(_)).length","Fragments":["\u003e"]},{"Key":"```str.filter(!options.contains(_)).length \u003e","Fragments":["0)```"]},{"Key":"discussion of","Fragments":["this"]},{"Key":"Agreed, then","Fragments":["new"]},{"Key":"then new","Fragments":["one"]},{"Key":"new one","Fragments":["looks"]},{"Key":"one looks","Fragments":["great!","much"]},{"Key":"and removed","Fragments":["curly-braces,"]},{"Key":"removed curly-braces,","Fragments":["returns"]},{"Key":"curly-braces, returns","Fragments":["and"]},{"Key":"and type","Fragments":["statements","aliases"]},{"Key":"type statements","Fragments":["to"]},{"Key":"statements to","Fragments":["be","be"]},{"Key":"concise in","Fragments":["iteration"]},{"Key":" Overhead","Fragments":["of"]},{"Key":"Overhead of","Fragments":["the"]},{"Key":"the calculation","Fragments":["wasn't"]},{"Key":"calculation wasn't","Fragments":["really"]},{"Key":"wasn't really","Fragments":["a"]},{"Key":"a concern","Fragments":["of"]},{"Key":"concern of","Fragments":["mine."]},{"Key":"of mine.","Fragments":["My"]},{"Key":"mine. My","Fragments":["goal"]},{"Key":"My goal","Fragments":["was"]},{"Key":"goal was","Fragments":["to","to"]},{"Key":"have intention-revealing","Fragments":["names,"]},{"Key":"intention-revealing names,","Fragments":["and"]},{"Key":"names, and","Fragments":["the"]},{"Key":"of being","Fragments":["able"]},{"Key":"being able","Fragments":["to"]},{"Key":"use those","Fragments":["names"]},{"Key":"names as","Fragments":["partial"]},{"Key":"as partial","Fragments":["functions"]},{"Key":"partial functions","Fragments":["to"]},{"Key":"to filter/filterNot","Fragments":["is"]},{"Key":"filter/filterNot is","Fragments":["more"]},{"Key":"more compelling","Fragments":["to","to"]},{"Key":"compelling to","Fragments":["me.","do"]},{"Key":"braces from","Fragments":["your"]},{"Key":"method body","Fragments":["when"]},{"Key":"body when","Fragments":["it"]},{"Key":"it consists","Fragments":["of"]},{"Key":"2. `return`","Fragments":["is"]},{"Key":"`return` is","Fragments":["generally"]},{"Key":"generally unnecessary","Fragments":["in"]},{"Key":"unnecessary in","Fragments":["Scala."]},{"Key":"3. It","Fragments":["would"]},{"Key":"an overhead","Fragments":["calculating"]},{"Key":"overhead calculating","Fragments":["`word.toLowerCase`"]},{"Key":"calculating `word.toLowerCase`","Fragments":["and"]},{"Key":"`word.toLowerCase` and","Fragments":["`word.toLowerCase.sorted`"]},{"Key":"and `word.toLowerCase.sorted`","Fragments":["every"]},{"Key":"`word.toLowerCase.sorted` every","Fragments":["time"]},{"Key":"time in","Fragments":["helper"]},{"Key":"in helper","Fragments":["functions.","functions,"]},{"Key":" Nice.","Fragments":["I","You","I","I"]},{"Key":"Nice. I","Fragments":["learned","did","think"]},{"Key":"learned a","Fragments":["bit","lot"]},{"Key":"bit from","Fragments":["reviewing","where"]},{"Key":"from reviewing","Fragments":["this"]},{"Key":"reviewing this","Fragments":["solution."]},{"Key":"that \"if","Fragments":["it"]},{"Key":"\"if it","Fragments":["is"]},{"Key":"a letter\",","Fragments":["it"]},{"Key":"letter\", it","Fragments":["must"]},{"Key":"it must","Fragments":["be","be","either"]},{"Key":"be upper","Fragments":["case"]},{"Key":"really necessary","Fragments":["if"]},{"Key":"necessary if","Fragments":["you"]},{"Key":"you extend","Fragments":["the"]},{"Key":"extend the","Fragments":["definition"]},{"Key":"of upper","Fragments":["case"]},{"Key":"all characters.","Fragments":["So"]},{"Key":"characters. So","Fragments":["as","in"]},{"Key":"So as","Fragments":["long"]},{"Key":"a letter,","Fragments":["and","it"]},{"Key":"letter, and","Fragments":["all"]},{"Key":"and all","Fragments":["characters"]},{"Key":"case, is","Fragments":["simpler"]},{"Key":"read, even","Fragments":["for"]},{"Key":"even for","Fragments":["humans"]},{"Key":"for humans","Fragments":[":)"]},{"Key":"In human","Fragments":["terms,"]},{"Key":"human terms,","Fragments":["it"]},{"Key":"terms, it","Fragments":["reads"]},{"Key":"reads \"The","Fragments":["phrase"]},{"Key":"\"The phrase","Fragments":["has"]},{"Key":"phrase has","Fragments":["a"]},{"Key":"in it","Fragments":["and"]},{"Key":"every character,","Fragments":["if"]},{"Key":"character, if","Fragments":["it"]},{"Key":"letter, it","Fragments":["must"]},{"Key":"be uppercase\".","Fragments":["Your"]},{"Key":"uppercase\". Your","Fragments":["way"]},{"Key":"Your way","Fragments":["is"]},{"Key":"more succinct,","Fragments":["but"]},{"Key":"succinct, but","Fragments":["I'm"]},{"Key":"I'm really","Fragments":["making"]},{"Key":"really making","Fragments":["a"]},{"Key":"making a","Fragments":["point"]},{"Key":"of spelling","Fragments":["out"]},{"Key":"spelling out","Fragments":["exactly"]},{"Key":"what I'm","Fragments":["doing."]},{"Key":"I'm doing.","Fragments":["My"]},{"Key":"doing. My","Fragments":["first"]},{"Key":"version had","Fragments":["a"]},{"Key":"a phrase","Fragments":["=="]},{"Key":"phrase ==","Fragments":["phrase.toUpperCase,","phrase.toUpperCase"]},{"Key":"== phrase.toUpperCase,","Fragments":["but"]},{"Key":"phrase.toUpperCase, but","Fragments":["I"]},{"Key":"not (immediately)","Fragments":["obvious"]},{"Key":"(immediately) obvious","Fragments":["why"]},{"Key":"obvious why","Fragments":["am"]},{"Key":"why am","Fragments":["I"]},{"Key":"am I","Fragments":["making","right"]},{"Key":"I making","Fragments":["the"]},{"Key":"The alternative","Fragments":["is:"]},{"Key":" phrase","Fragments":["=="]},{"Key":"== phrase.toUpperCase","Fragments":["\u0026\u0026"]},{"Key":"phrase.toUpperCase \u0026\u0026","Fragments":["phrase.exists(isLetter)"]},{"Key":"in logic","Fragments":["terms,"]},{"Key":"logic terms,","Fragments":["your"]},{"Key":"terms, your","Fragments":["shouting"]},{"Key":"your shouting","Fragments":["condition"]},{"Key":"shouting condition","Fragments":["reads:"]},{"Key":" ∃c:","Fragments":["c"]},{"Key":"∃c: c","Fragments":["∈"]},{"Key":"c ∈","Fragments":["[a-z]∪[A-Z]","[a-z]∪[A-Z]","[A,"]},{"Key":"∈ [a-z]∪[A-Z]","Fragments":["\u0026","=\u003e"]},{"Key":"[a-z]∪[A-Z] \u0026","Fragments":["∀c:"]},{"Key":"\u0026 ∀c:","Fragments":["c"]},{"Key":"∀c: c","Fragments":["∈"]},{"Key":"[a-z]∪[A-Z] =\u003e","Fragments":["c"]},{"Key":"=\u003e c","Fragments":["∈","\u003e="]},{"Key":"∈ [A,","Fragments":["Z]"]},{"Key":"this quite","Fragments":["difficult"]},{"Key":"quite difficult","Fragments":["to"]},{"Key":"szafirov, the","Fragments":["alternative"]},{"Key":"the alternative","Fragments":["is","`!s.filter(_.isLetter).isEmpty"]},{"Key":"is using","Fragments":["!characterIsLetter","pattern","pattern"]},{"Key":"using !characterIsLetter","Fragments":["||"]},{"Key":"!characterIsLetter ||","Fragments":["character.isUpper,"]},{"Key":"|| character.isUpper,","Fragments":["which"]},{"Key":"character.isUpper, which","Fragments":["it"]},{"Key":"which it","Fragments":["tad"]},{"Key":"it tad","Fragments":["less"]},{"Key":"tad less","Fragments":["readable."]},{"Key":"less readable.","Fragments":["However,"]},{"Key":"readable. However,","Fragments":["I"]},{"Key":"I probably","Fragments":["should"]},{"Key":"probably should","Fragments":["have","then"]},{"Key":"had dedicated","Fragments":["methods"]},{"Key":"dedicated methods","Fragments":["for"]},{"Key":"for isShout,","Fragments":["isSilent,"]},{"Key":"isShout, isSilent,","Fragments":["isQuestion"]},{"Key":"isSilent, isQuestion","Fragments":["as"]},{"Key":"isQuestion as","Fragments":["you"]},{"Key":"find implies","Fragments":["reads"]},{"Key":"implies reads","Fragments":["that"]},{"Key":"reads that","Fragments":["well"]},{"Key":" hi","Fragments":["thanks."]},{"Key":"hi thanks.","Fragments":["will"]},{"Key":"thanks. will","Fragments":["do."]},{"Key":" try","Fragments":["to","to","a","to","to","to","to"]},{"Key":"of `StringBuilder`","Fragments":["(no"]},{"Key":"`StringBuilder` (no","Fragments":["side"]},{"Key":"(no side","Fragments":["effects)"]},{"Key":"side effects)","Fragments":[":-)","to"]},{"Key":"guard clauses","Fragments":["into","in"]},{"Key":"clauses into","Fragments":["separate"]},{"Key":"separate methods?","Fragments":["This"]},{"Key":"methods? This","Fragments":["would"]},{"Key":"would cause","Fragments":["the"]},{"Key":"cause the","Fragments":["`hey`"]},{"Key":"`hey` method","Fragments":["to"]},{"Key":"more *higher-level*,","Fragments":["focusing"]},{"Key":"*higher-level*, focusing","Fragments":["more"]},{"Key":"focusing more","Fragments":["on"]},{"Key":"the *what*","Fragments":["instead"]},{"Key":"*what* instead","Fragments":["of"]},{"Key":" Straightforward","Fragments":["solution"]},{"Key":"Straightforward solution","Fragments":["that"]},{"Key":"that synchronizes","Fragments":["the"]},{"Key":"synchronizes the","Fragments":["account"]},{"Key":"the account","Fragments":["instance","instead","(although","is"]},{"Key":"account instance","Fragments":["on"]},{"Key":"instance on","Fragments":["each"]},{"Key":"each write","Fragments":["of"]},{"Key":"write of","Fragments":["the"]},{"Key":"Java all","Fragments":["assignment"]},{"Key":"all assignment","Fragments":["operations"]},{"Key":"assignment operations","Fragments":["are"]},{"Key":"operations are","Fragments":["atomic"]},{"Key":"are atomic","Fragments":["(I","so"]},{"Key":"atomic (I","Fragments":["hope)."]},{"Key":"So ```closeAccount()```","Fragments":["could"]},{"Key":"```closeAccount()``` could","Fragments":["do"]},{"Key":"Shouldn't you","Fragments":["be","declare"]},{"Key":"you be","Fragments":["checking"]},{"Key":"be checking","Fragments":["```t.toLowerCase"]},{"Key":"checking ```t.toLowerCase","Fragments":["!="]},{"Key":"```t.toLowerCase !=","Fragments":["word.toLowerCase```"]},{"Key":"!= word.toLowerCase```","Fragments":["?"]},{"Key":"word.toLowerCase``` ?","Fragments":["Could"]},{"Key":"? Could","Fragments":["you"]},{"Key":"the ```sortWith```","Fragments":["to"]},{"Key":"```sortWith``` to","Fragments":["sorted"]},{"Key":"to sorted","Fragments":["and"]},{"Key":"the ```_\u003c_```","Fragments":["function?"]},{"Key":"my opinion,","Fragments":["it"]},{"Key":"opinion, it","Fragments":["would"]},{"Key":"got away","Fragments":["from"]},{"Key":"from trying","Fragments":["to"]},{"Key":"solve in","Fragments":["one"]},{"Key":"line. Of","Fragments":["course"]},{"Key":"course opinions","Fragments":["will"]},{"Key":"opinions will","Fragments":["vary:)"]},{"Key":"will vary:)","Fragments":["The"]},{"Key":"vary:) The","Fragments":["matches"]},{"Key":"The matches","Fragments":["function"]},{"Key":"matches function","Fragments":["could"]},{"Key":"could contain","Fragments":["the"]},{"Key":"the words.filter","Fragments":["and"]},{"Key":"words.filter and","Fragments":["then"]},{"Key":"then move","Fragments":["the"]},{"Key":"the ```isAnagram```","Fragments":["logic"]},{"Key":"```isAnagram``` logic","Fragments":["to"]},{"Key":"logic to","Fragments":["another"]},{"Key":"another private","Fragments":["function."]},{"Key":"one-liner solution","Fragments":["that"]},{"Key":"uses filter","Fragments":["to"]},{"Key":"filter to","Fragments":["do"]},{"Key":"heavy lifting.","Fragments":["Removed"]},{"Key":"lifting. Removed","Fragments":["so"]},{"Key":"Removed so","Fragments":["unnecessary"]},{"Key":"so unnecessary","Fragments":["steps"]},{"Key":"unnecessary steps","Fragments":["from"]},{"Key":"steps from","Fragments":["the"]},{"Key":"in better","Fragments":["ways"]},{"Key":"better ways","Fragments":["of"]},{"Key":"ways of","Fragments":["presenting"]},{"Key":"of presenting","Fragments":["this"]},{"Key":"presenting this","Fragments":["code"]},{"Key":"reduce your","Fragments":["wincing:"]},{"Key":"the trim","Fragments":["function"]},{"Key":"use regexes","Fragments":["directly","in"]},{"Key":"regexes directly","Fragments":["in"]},{"Key":"directly in","Fragments":["Scala","line","`db`.","the"]},{"Key":"use private","Fragments":["helper"]},{"Key":"methods w/","Fragments":["good"]},{"Key":"Scala's String/Seq","Fragments":["functions"]},{"Key":"String/Seq functions","Fragments":["like"]},{"Key":"like forall,","Fragments":["exists,"]},{"Key":"have fun!","Fragments":[":-)"]},{"Key":" While","Fragments":["this","concise","the","such","the"]},{"Key":"While this","Fragments":["all"]},{"Key":"this all","Fragments":["works"]},{"Key":"all works","Fragments":["according"]},{"Key":"works according","Fragments":["to"]},{"Key":"suite, the","Fragments":["whole"]},{"Key":"whole `rmDigits()`,","Fragments":["and"]},{"Key":"`rmDigits()`, and","Fragments":["overall"]},{"Key":"and overall","Fragments":["reliance","architecture."]},{"Key":"overall reliance","Fragments":["on"]},{"Key":"reliance on","Fragments":["regex"]},{"Key":"on regex","Fragments":["makes"]},{"Key":"regex makes","Fragments":["me"]},{"Key":"makes me","Fragments":["wince","real","dumb."]},{"Key":"me wince","Fragments":["a"]},{"Key":"wince a","Fragments":["little"]},{"Key":"little bit.","Fragments":["Wondering"]},{"Key":"bit. Wondering","Fragments":["if"]},{"Key":"Wondering if","Fragments":["there's","there's"]},{"Key":"if there's","Fragments":["a","a","any","any","any"]},{"Key":"idiomatic approach","Fragments":["to"]},{"Key":"be taken","Fragments":["here."]},{"Key":"The 2nd","Fragments":["case"]},{"Key":"2nd case","Fragments":["in"]},{"Key":"match makes","Fragments":["me"]},{"Key":"me real","Fragments":["unhappy"]},{"Key":"real unhappy","Fragments":["from"]},{"Key":"unhappy from","Fragments":["a"]},{"Key":"a readability","Fragments":["standpoint.","tradeoff"]},{"Key":"of if-else","Fragments":["and","here.","if-else."]},{"Key":"if-else and","Fragments":["throwing"]},{"Key":"and throwing","Fragments":["the"]},{"Key":"exception yourself","Fragments":["you","you"]},{"Key":"yourself you","Fragments":["could","could"]},{"Key":"call ```require```","Fragments":["from"]},{"Key":"Predef before","Fragments":["zipping."]},{"Key":" Rest","Fragments":["of"]},{"Key":"Rest of","Fragments":["the"]},{"Key":"previous attempt..","Fragments":["less"]},{"Key":"attempt.. less","Fragments":["wordy"]},{"Key":"less wordy","Fragments":["and"]},{"Key":"wordy and","Fragments":["more"]},{"Key":"pass over","Fragments":["the"]},{"Key":"the data","Fragments":["instead","structures"]},{"Key":"data instead","Fragments":["of"]},{"Key":"of preprocessing","Fragments":["the"]},{"Key":"preprocessing the","Fragments":["string"]},{"Key":"string then","Fragments":["tokenizing"]},{"Key":"then tokenizing","Fragments":["and"]},{"Key":"tokenizing and","Fragments":["then"]},{"Key":"No reason","Fragments":["not"]},{"Key":"to adopt","Fragments":["good"]},{"Key":"adopt good","Fragments":["habits!"]},{"Key":"If everybody","Fragments":["else"]},{"Key":"everybody else","Fragments":["but"]},{"Key":"else but","Fragments":["you"]},{"Key":"you does","Fragments":["it"]},{"Key":"said then","Fragments":["you"]},{"Key":"should reconsider","Fragments":["..."]},{"Key":"reconsider ...","Fragments":[";-)"]},{"Key":" @darwin:","Fragments":["Tbh,"]},{"Key":"@darwin: Tbh,","Fragments":["I"]},{"Key":"Tbh, I","Fragments":["saw"]},{"Key":"saw you","Fragments":["solution"]},{"Key":"you solution","Fragments":["and"]},{"Key":"and did","Fragments":["not","it"]},{"Key":"to copy","Fragments":["it."]},{"Key":"The usual","Fragments":["way","Scala","way","way"]},{"Key":"do recursion","Fragments":["on"]},{"Key":"recursion on","Fragments":["Lists","the","the"]},{"Key":"on Lists","Fragments":["is"]},{"Key":"Lists is","Fragments":["to"]},{"Key":"matching w/","Fragments":["the","```Nil```"]},{"Key":" `alphanumeric`","Fragments":["may"]},{"Key":"`alphanumeric` may","Fragments":["also"]},{"Key":"may also","Fragments":["return","just","get"]},{"Key":"return digits,","Fragments":["so"]},{"Key":"digits, so","Fragments":["statistically"]},{"Key":"so statistically","Fragments":["your"]},{"Key":"statistically your","Fragments":["tests"]},{"Key":"tests can","Fragments":["succeed"]},{"Key":"can succeed","Fragments":["but"]},{"Key":"succeed but","Fragments":["I"]},{"Key":"tests failing","Fragments":["randomly"]},{"Key":"failing randomly","Fragments":["if"]},{"Key":"randomly if","Fragments":["you"]},{"Key":"you ran","Fragments":["the"]},{"Key":"tests a","Fragments":["couple"]},{"Key":"of times","Fragments":["one","there","count"]},{"Key":"times one","Fragments":["after"]},{"Key":"one after","Fragments":["the"]},{"Key":"few potential","Fragments":["simplifications:"]},{"Key":"As previously","Fragments":["mentioned,"]},{"Key":"previously mentioned,","Fragments":["the"]},{"Key":"mentioned, the","Fragments":["`toList`"]},{"Key":"`toList` is","Fragments":["unnecessary","superfluous"]},{"Key":"explicit `return`","Fragments":["(and"]},{"Key":"`return` (and","Fragments":["the"]},{"Key":"function body","Fragments":["are","as"]},{"Key":"body are","Fragments":["optional"]},{"Key":"are optional","Fragments":["too)"]},{"Key":"type annotation","Fragments":["from"]},{"Key":"annotation from","Fragments":["the"]},{"Key":"you pass","Fragments":["to"]},{"Key":"pass to","Fragments":["`count`"]},{"Key":"Good solution","Fragments":["though,"]},{"Key":"solution though,","Fragments":["and"]},{"Key":"though, and","Fragments":["you"]},{"Key":"how much","Fragments":["simpler"]},{"Key":"simpler it","Fragments":["is"]},{"Key":"is than","Fragments":["your"]},{"Key":"iteration of","Fragments":["this"]},{"Key":"Nice. You","Fragments":["don't"]},{"Key":"need `toList`","Fragments":["though."]},{"Key":"Just for","Fragments":["the","fun,"]},{"Key":"the fun","Fragments":["of","and"]},{"Key":"fun of","Fragments":["it"]},{"Key":"it you","Fragments":["can","might"]},{"Key":"try out","Fragments":["regular","Scala.","different","the","zipping","regular","Scala's"]},{"Key":"out regular","Fragments":["expressions,","expression"]},{"Key":"regular expressions,","Fragments":["too."]},{"Key":"Good to","Fragments":["know.","know!","learn"]},{"Key":"to know.","Fragments":["Thanks!"]},{"Key":"can combine","Fragments":["the"]},{"Key":"split and","Fragments":["filter","array's"]},{"Key":"pass by","Fragments":["using","converting"]},{"Key":"Could not","Fragments":["for"]},{"Key":"not for","Fragments":["the"]},{"Key":"the life","Fragments":["of"]},{"Key":"life of","Fragments":["me"]},{"Key":"of me","Fragments":["figure"]},{"Key":"me figure","Fragments":["out"]},{"Key":"structure figured","Fragments":["out."]},{"Key":"figured out.","Fragments":["Didn't"]},{"Key":"out. Didn't","Fragments":["realize"]},{"Key":"realize I","Fragments":["had"]},{"Key":"had it,","Fragments":["just"]},{"Key":"it, just","Fragments":["couldn't"]},{"Key":"just couldn't","Fragments":["get"]},{"Key":"logic down","Fragments":["I"]},{"Key":"down I","Fragments":["suppose."]},{"Key":"I suppose.","Fragments":["Interesting"]},{"Key":"suppose. Interesting","Fragments":["exercise,"]},{"Key":"Interesting exercise,","Fragments":["learned"]},{"Key":"exercise, learned","Fragments":["a"]},{"Key":"lot from","Fragments":["the"]},{"Key":"idea using","Fragments":["AtomicInteger!","stream!"]},{"Key":"cool aspects","Fragments":["of"]},{"Key":"of Option.","Fragments":["E.g"]},{"Key":"Option. E.g","Fragments":["in"]},{"Key":"E.g in","Fragments":["get"]},{"Key":"in get","Fragments":["balance"]},{"Key":"get balance","Fragments":["you"]},{"Key":"balance you","Fragments":["unpack"]},{"Key":"you unpack","Fragments":["AtomicInteger"]},{"Key":"unpack AtomicInteger","Fragments":["from"]},{"Key":"AtomicInteger from","Fragments":["Option"]},{"Key":"from Option","Fragments":["and"]},{"Key":"Option and","Fragments":["repack"]},{"Key":"and repack","Fragments":["its"]},{"Key":"repack its","Fragments":["value"]},{"Key":"its value","Fragments":["into"]},{"Key":"value into","Fragments":["Option."]},{"Key":"into Option.","Fragments":["It"]},{"Key":"Option. It","Fragments":["seems"]},{"Key":"seems an","Fragments":["Option.map","improvement."]},{"Key":"an Option.map","Fragments":["transformation."]},{"Key":"Option.map transformation.","Fragments":["Similar"]},{"Key":"transformation. Similar","Fragments":["applies"]},{"Key":"Similar applies","Fragments":["to"]},{"Key":"applies to","Fragments":["incrementBalance","strings"]},{"Key":"to incrementBalance","Fragments":["method."]},{"Key":"are lost","Fragments":["see"]},{"Key":"lost see","Fragments":["my"]},{"Key":"my 3rd","Fragments":["iteration."]},{"Key":"Thanks, couldn't","Fragments":["make"]},{"Key":"couldn't make","Fragments":["it"]},{"Key":"it shorter","Fragments":["i'm"]},{"Key":"shorter i'm","Fragments":["afraid"]},{"Key":"i'm afraid","Fragments":[":)"]},{"Key":"That magic","Fragments":["number"]},{"Key":"number ```9```","Fragments":["looks"]},{"Key":"```9``` looks","Fragments":["like"]},{"Key":"just accidentally","Fragments":["makes"]},{"Key":"accidentally makes","Fragments":["the"]},{"Key":"cases pass?","Fragments":[":-)"]},{"Key":"pass? :-)","Fragments":["What"]},{"Key":":-) What","Fragments":["if"]},{"Key":"an input","Fragments":["String","argument,"]},{"Key":"input String","Fragments":["of","for"]},{"Key":"of length","Fragments":["\u003c"]},{"Key":"length \u003c","Fragments":["9?"]},{"Key":"\u003c 9?","Fragments":["This"]},{"Key":"9? This","Fragments":["\"0000000000\""]},{"Key":"This \"0000000000\"","Fragments":["intuitively"]},{"Key":"\"0000000000\" intuitively","Fragments":["should"]},{"Key":"intuitively should","Fragments":["be"]},{"Key":"last catch-all","Fragments":["clause,"]},{"Key":"catch-all clause,","Fragments":["I"]},{"Key":"clause, I","Fragments":["would"]},{"Key":"only using","Fragments":["Java's"]},{"Key":"using Java's","Fragments":["String"]},{"Key":"Java's String","Fragments":["functions"]},{"Key":"functions why","Fragments":["not"]},{"Key":"of Scala's:","Fragments":["```filter,"]},{"Key":"Scala's: ```filter,","Fragments":["take,"]},{"Key":"```filter, take,","Fragments":["drop,"]},{"Key":"drop, ...```.","Fragments":["IMHO"]},{"Key":"...```. IMHO","Fragments":["this"]},{"Key":"this makes","Fragments":["the"]},{"Key":"of String","Fragments":["concatenation"]},{"Key":"String concatenation","Fragments":["you"]},{"Key":"concatenation you","Fragments":["may"]},{"Key":"may use","Fragments":["Scala's","`forall`"]},{"Key":"as additional","Fragments":["exercise","argument?","exercise"]},{"Key":"using regex","Fragments":["matching.","pattern"]},{"Key":"of interest,","Fragments":["how"]},{"Key":"interest, how","Fragments":["well"]},{"Key":"how well","Fragments":["does"]},{"Key":"well does","Fragments":["this"]},{"Key":"this perform","Fragments":["compared"]},{"Key":"perform compared","Fragments":["to"]},{"Key":"the hand-crafted","Fragments":["loop"]},{"Key":"hand-crafted loop","Fragments":["solution?"]},{"Key":"loop solution?","Fragments":["(for"]},{"Key":"solution? (for","Fragments":["reference,"]},{"Key":"(for reference,","Fragments":["my"]},{"Key":"reference, my","Fragments":["constant-space"]},{"Key":"my constant-space","Fragments":["loop"]},{"Key":"constant-space loop","Fragments":["ran"]},{"Key":"loop ran","Fragments":["in"]},{"Key":"ran in","Fragments":["213ms"]},{"Key":"in 213ms","Fragments":["on"]},{"Key":"213ms on","Fragments":["recent"]},{"Key":"on recent","Fragments":["hardware)."]},{"Key":"function quite","Fragments":["hard"]},{"Key":"quite hard","Fragments":["to","to"]},{"Key":"read. Have","Fragments":["you"]},{"Key":"using for","Fragments":["comprehensions?"]},{"Key":"of things:","Fragments":["Scala"]},{"Key":"things: Scala","Fragments":["naming"]},{"Key":"Scala naming","Fragments":["convention"]},{"Key":"use simple","Fragments":["uppercase"]},{"Key":"simple uppercase","Fragments":["letters"]},{"Key":" ```accumulate[S,T](...)```","Fragments":["(and"]},{"Key":"```accumulate[S,T](...)``` (and","Fragments":["for"]},{"Key":"(and for","Fragments":["constants"]},{"Key":"constants camel-case,","Fragments":["e.g."]},{"Key":"camel-case, e.g.","Fragments":["\"SourceType\")."]},{"Key":"But according","Fragments":["to"]},{"Key":"So pls","Fragments":["try"]},{"Key":"try again","Fragments":["w/o"]},{"Key":"again w/o","Fragments":["using"]},{"Key":"w/o using","Fragments":["```map```!","var"]},{"Key":"using ```map```!","Fragments":["In"]},{"Key":"```map```! In","Fragments":["fact,"]},{"Key":"In fact,","Fragments":["the","I'd","I"]},{"Key":"fact, the","Fragments":["whole"]},{"Key":"whole exercise","Fragments":["is"]},{"Key":"exercise is","Fragments":["to","easy..."]},{"Key":"re-implement ```map```","Fragments":["on"]},{"Key":"your own!","Fragments":[":-)"]},{"Key":"replace anything,","Fragments":["you"]},{"Key":"anything, you","Fragments":["can"]},{"Key":"go by","Fragments":["with"]},{"Key":"by with","Fragments":["clever"]},{"Key":"with clever","Fragments":["split,"]},{"Key":"clever split,","Fragments":["but"]},{"Key":"split, but","Fragments":["everything"]},{"Key":"but everything","Fragments":["seems"]},{"Key":"everything seems","Fragments":["really"]},{"Key":"seems really","Fragments":["cool"]},{"Key":"not pass","Fragments":["test"]},{"Key":"pass test","Fragments":["suite."]},{"Key":"only sent","Fragments":["this"]},{"Key":"sent this","Fragments":["to"]},{"Key":"to test.","Fragments":["I"]},{"Key":"test. I","Fragments":["have"]},{"Key":"have not","Fragments":["gone","enough"]},{"Key":"not gone","Fragments":["to"]},{"Key":"gone to","Fragments":["Scala"]},{"Key":"I allowed","Fragments":["me"]},{"Key":"allowed me","Fragments":["to"]},{"Key":"see other's","Fragments":["submissions."]},{"Key":"It works,","Fragments":["so..."]},{"Key":"works, so...","Fragments":["ok"]},{"Key":"so... ok","Fragments":[":)"]},{"Key":"However, you","Fragments":["create","are"]},{"Key":"create two","Fragments":["instances"]},{"Key":"two instances","Fragments":["of"]},{"Key":"of `GregorianCalendar`","Fragments":["while"]},{"Key":"`GregorianCalendar` while","Fragments":["you"]},{"Key":"while you","Fragments":["could","keep"]},{"Key":"created only","Fragments":["one"]},{"Key":"one (I","Fragments":["think)."]},{"Key":"Why dod","Fragments":["you"]},{"Key":"dod you","Fragments":["need"]},{"Key":"to import","Fragments":["`java.util.Date`?","the"]},{"Key":"1. I","Fragments":["started"]},{"Key":"out writing","Fragments":["everything"]},{"Key":"statements in","Fragments":["my","most"]},{"Key":"my `hey`","Fragments":["method."]},{"Key":"2. Next","Fragments":["I"]},{"Key":"Next I","Fragments":["created"]},{"Key":"created the","Fragments":["`isShouting`"]},{"Key":"the `isShouting`","Fragments":["method,"]},{"Key":"`isShouting` method,","Fragments":["which"]},{"Key":"which contained","Fragments":["soon"]},{"Key":"contained soon","Fragments":["all"]},{"Key":"soon all","Fragments":["the"]},{"Key":"3. I","Fragments":["recognized","think"]},{"Key":"I recognized","Fragments":["that"]},{"Key":"recognized that","Fragments":["most"]},{"Key":"that most","Fragments":["of"]},{"Key":"be deleted","Fragments":["if"]},{"Key":"deleted if","Fragments":["I"]},{"Key":"I first","Fragments":["check"]},{"Key":"first check","Fragments":["if"]},{"Key":"question, which","Fragments":["left"]},{"Key":"which left","Fragments":["a"]},{"Key":"very smal","Fragments":["`isShouting`"]},{"Key":"smal `isShouting`","Fragments":["method"]},{"Key":"The scala","Fragments":["feature"]},{"Key":"scala feature","Fragments":["on","which"]},{"Key":"feature on","Fragments":["collections"]},{"Key":"collections helped","Fragments":["me"]},{"Key":"a lot.","Fragments":["`exists`","Using"]},{"Key":"lot. `exists`","Fragments":["and"]},{"Key":"`exists` and","Fragments":["`forall`"]},{"Key":"and `forall`","Fragments":["are"]},{"Key":"`forall` are","Fragments":["really"]},{"Key":"collection style","Fragments":["messages"]},{"Key":"style messages","Fragments":["on"]},{"Key":"messages on","Fragments":["`String`"]},{"Key":"`String` is","Fragments":["the"]},{"Key":"problem. Getting","Fragments":["familiar"]},{"Key":"Getting familiar","Fragments":["with"]},{"Key":"familiar with","Fragments":["those","it)","the"]},{"Key":"methods will","Fragments":["serve"]},{"Key":"will serve","Fragments":["you"]},{"Key":"serve you","Fragments":["well"]},{"Key":"you well","Fragments":["as"]},{"Key":"you progress","Fragments":["in"]},{"Key":"progress in","Fragments":["Scala."]},{"Key":" Reworked","Fragments":["to"]},{"Key":"Reworked to","Fragments":["use"]},{"Key":"use math","Fragments":["instead"]},{"Key":"math instead","Fragments":["of"]},{"Key":"While concise","Fragments":["and"]},{"Key":"and clear,","Fragments":["your"]},{"Key":"clear, your","Fragments":["implementation"]},{"Key":"not permit","Fragments":["for"]},{"Key":"permit for","Fragments":["empty"]},{"Key":"for empty","Fragments":["lists"]},{"Key":"empty lists","Fragments":["(which","and"]},{"Key":"lists (which","Fragments":["could"]},{"Key":"a benefit,","Fragments":["of"]},{"Key":"benefit, of","Fragments":["course)."]},{"Key":"of course).","Fragments":["Can"]},{"Key":"course). Can","Fragments":["you"]},{"Key":"you adjust","Fragments":["this"]},{"Key":"adjust this","Fragments":["solution"]},{"Key":"to permit","Fragments":["empty"]},{"Key":"permit empty","Fragments":["lists"]},{"Key":"lists and","Fragments":["trees?"]},{"Key":"and trees?","Fragments":["(obviously,"]},{"Key":"trees? (obviously,","Fragments":["this"]},{"Key":"(obviously, this","Fragments":["is"]},{"Key":"is tested","Fragments":["by"]},{"Key":"tested by","Fragments":["the"]},{"Key":"Yes -","Fragments":["I"]},{"Key":"that Map.empty","Fragments":["is"]},{"Key":"Map.empty is","Fragments":["better"]},{"Key":"better :)","Fragments":["I'll"]},{"Key":":) I'll","Fragments":["try"]},{"Key":"try implementing","Fragments":["your"]},{"Key":"implementing your","Fragments":["suggestions"]},{"Key":"your suggestions","Fragments":["and","and"]},{"Key":"have too","Fragments":["much"]},{"Key":"add except","Fragments":["to"]},{"Key":"except to","Fragments":["suggest"]},{"Key":"to suggest","Fragments":["a"]},{"Key":"suggest a","Fragments":["couple"]},{"Key":"of possibilities.","Fragments":["What"]},{"Key":"possibilities. What","Fragments":["do"]},{"Key":"about Map.empty[...]?","Fragments":["I've"]},{"Key":"Map.empty[...]? I've","Fragments":["started"]},{"Key":"I've started","Fragments":["to"]},{"Key":"started to","Fragments":["use","write"]},{"Key":"is *maybe*","Fragments":["slightly"]},{"Key":"*maybe* slightly","Fragments":["more"]},{"Key":"readable. Also,","Fragments":["how"]},{"Key":"Also, how","Fragments":["do"]},{"Key":"how do","Fragments":["you","you"]},{"Key":"feel about","Fragments":["using"]},{"Key":"a wildcard","Fragments":["in"]},{"Key":"wildcard in","Fragments":["the"]},{"Key":"the map?","Fragments":["That"]},{"Key":"map? That","Fragments":["is"]},{"Key":"another thing","Fragments":["I'm"]},{"Key":"thing I'm","Fragments":["doing"]},{"Key":"I'm doing","Fragments":["more","it"]},{"Key":"doing more","Fragments":["and"]},{"Key":"more but","Fragments":["sometimes"]},{"Key":"but sometimes","Fragments":["there's"]},{"Key":"sometimes there's","Fragments":["a","good"]},{"Key":"readability tradeoff","Fragments":[":)"]},{"Key":"job, I","Fragments":["like"]},{"Key":"your rounding","Fragments":["function"]},{"Key":"rounding function","Fragments":["better"]},{"Key":"function better","Fragments":["than"]},{"Key":"a `Set`.","Fragments":["but"]},{"Key":"`Set`. but","Fragments":["how"]},{"Key":"but how","Fragments":["do"]},{"Key":"you guarantee","Fragments":["the"]},{"Key":"guarantee the","Fragments":["right","string"]},{"Key":"a `Seq`","Fragments":["and"]},{"Key":"`Seq` and","Fragments":["remove"]},{"Key":" imperative","Fragments":["Java-style."]},{"Key":"imperative Java-style.","Fragments":["Not"]},{"Key":"Java-style. Not","Fragments":["bad,"]},{"Key":"Not bad,","Fragments":["but","but"]},{"Key":"bad, but","Fragments":["Scala","readability"]},{"Key":"but Scala","Fragments":["collections","collections"]},{"Key":"offer much","Fragments":["more"]},{"Key":"functions w/o","Fragments":["a"]},{"Key":"w/o a","Fragments":["loop","```var```"]},{"Key":"loop or","Fragments":["var."]},{"Key":" @kiel","Fragments":["thanks,"]},{"Key":"@kiel thanks,","Fragments":["I've"]},{"Key":"thanks, I've","Fragments":["taken"]},{"Key":"taken your","Fragments":["advice"]},{"Key":"your advice","Fragments":["into"]},{"Key":"advice into","Fragments":["account"]},{"Key":"my latest","Fragments":["iteration"]},{"Key":"interesting idea,","Fragments":["your"]},{"Key":"idea, your","Fragments":["```getDate```"]},{"Key":"your ```getDate```","Fragments":["function."]},{"Key":"small nitpick:","Fragments":["you"]},{"Key":"nitpick: you","Fragments":["could"]},{"Key":"```Range``` a","Fragments":["bit"]},{"Key":"readable w/","Fragments":["the"]},{"Key":"syntax ```x","Fragments":["to/until"]},{"Key":"```x to/until","Fragments":["y"]},{"Key":"to/until y","Fragments":["(by"]},{"Key":"y (by","Fragments":["z)```."]},{"Key":" (","Fragments":["a","[more"]},{"Key":"( a","Fragments":["```Range```"]},{"Key":"```Range``` can","Fragments":["also"]},{"Key":"be mapped","Fragments":["over,"]},{"Key":"mapped over,","Fragments":["so"]},{"Key":"over, so","Fragments":["you","you"]},{"Key":"```List``` for","Fragments":["that)."]},{"Key":"some danger","Fragments":["that"]},{"Key":"danger that","Fragments":["```find```"]},{"Key":"that ```find```","Fragments":["returns"]},{"Key":"of nitpicking:","Fragments":["I"]},{"Key":"nitpicking: I","Fragments":["think"]},{"Key":"the `isSameDay`","Fragments":["complexity"]},{"Key":"`isSameDay` complexity","Fragments":["by"]},{"Key":"complexity by","Fragments":["using"]},{"Key":"using `Int`","Fragments":["values"]},{"Key":"`Int` values","Fragments":["for"]},{"Key":"days (e.g.","Fragments":["based"]},{"Key":"(e.g. based","Fragments":["on"]},{"Key":"on `Calendar.MONDAY`,","Fragments":["...)."]},{"Key":"`Calendar.MONDAY`, ...).","Fragments":["This"]},{"Key":"...). This","Fragments":["would"]},{"Key":"the dependence","Fragments":["on"]},{"Key":"dependence on","Fragments":["the"]},{"Key":"the tricky","Fragments":["conversion"]},{"Key":"tricky conversion","Fragments":["between"]},{"Key":"conversion between","Fragments":["dates"]},{"Key":"between dates","Fragments":["and"]},{"Key":"dates and","Fragments":["strings."]},{"Key":" Renamed","Fragments":["`c1`"]},{"Key":"Renamed `c1`","Fragments":["to"]},{"Key":"`c1` to","Fragments":["`char1`"]},{"Key":"to `char1`","Fragments":["etc"]},{"Key":"`char1` etc","Fragments":["since"]},{"Key":"etc since","Fragments":["it"]},{"Key":"since it","Fragments":["wasn't","returns","worked","has","never","is","doesn't","is","is","does","is"]},{"Key":"wasn't obvious","Fragments":["that"]},{"Key":"zip left","Fragments":["us"]},{"Key":"left us","Fragments":["with"]},{"Key":"us with","Fragments":["pairs"]},{"Key":"with pairs","Fragments":["of"]},{"Key":" `s1`","Fragments":["is"]},{"Key":"`s1` is","Fragments":["fine"]},{"Key":"is fine","Fragments":["IMO"]},{"Key":"fine IMO","Fragments":["since"]},{"Key":"IMO since","Fragments":["we're"]},{"Key":"since we're","Fragments":["very"]},{"Key":"we're very","Fragments":["explicit"]},{"Key":"very explicit","Fragments":["on"]},{"Key":"explicit on","Fragments":["line"]},{"Key":"2 that","Fragments":["it's"]},{"Key":"names don't","Fragments":["hurt"]},{"Key":"don't hurt","Fragments":["as"]},{"Key":"hurt as","Fragments":["they"]},{"Key":"might in","Fragments":["longer"]},{"Key":"in longer","Fragments":["code."]},{"Key":"using ```number.head```","Fragments":["instead"]},{"Key":"```number.head``` instead","Fragments":["of"]},{"Key":"of ```number.charAt(0)```","Fragments":["as"]},{"Key":"```number.charAt(0)``` as","Fragments":["well"]},{"Key":"as ```input","Fragments":["filter"]},{"Key":"```input filter","Fragments":["{c","{c"]},{"Key":"filter {c","Fragments":["=\u003e","=\u003e"]},{"Key":"{c =\u003e","Fragments":["c.isDigit}```","c"]},{"Key":"=\u003e c.isDigit}```","Fragments":["instead"]},{"Key":"c.isDigit}``` instead","Fragments":["of"]},{"Key":"of ```input","Fragments":["filter"]},{"Key":"c \u003e=","Fragments":["'0'"]},{"Key":"\u003e= '0'","Fragments":["\u0026\u0026"]},{"Key":"'0' \u0026\u0026","Fragments":["c"]},{"Key":"\u0026\u0026 c","Fragments":["\u003c="]},{"Key":"c \u003c=","Fragments":["'9'}```"]},{"Key":"looks ok.","Fragments":["Anyhow:"]},{"Key":"taste, but","Fragments":["I","for"]},{"Key":"I for","Fragments":["one"]},{"Key":"for one","Fragments":["prefer","style"]},{"Key":"one prefer","Fragments":["the"]},{"Key":"functions over","Fragments":["Java"]},{"Key":"over Java","Fragments":["String"]},{"Key":"Java String","Fragments":["methods","method"]},{"Key":"String methods","Fragments":["in"]},{"Key":"methods in","Fragments":["most"]},{"Key":"in most","Fragments":["cases.","of"]},{"Key":"most cases.","Fragments":["In"]},{"Key":"cases. In","Fragments":["this"]},{"Key":"find \"filter\"","Fragments":["more"]},{"Key":"\"filter\" more","Fragments":["readable"]},{"Key":"interpolation (s\"...$areaCode...\")","Fragments":["better"]},{"Key":"(s\"...$areaCode...\") better","Fragments":["than"]},{"Key":"than concatenation","Fragments":["with"]},{"Key":"concatenation with","Fragments":["\"+\"."]},{"Key":"parens around","Fragments":["num","the"]},{"Key":"around num","Fragments":["in"]},{"Key":"num in","Fragments":["the"]},{"Key":"second case-clause.","Fragments":["I"]},{"Key":"case-clause. I","Fragments":["would"]},{"Key":"use num","Fragments":["as"]},{"Key":"num as","Fragments":["result"]},{"Key":"as result","Fragments":["value"]},{"Key":"result value","Fragments":["of","should"]},{"Key":"the clause","Fragments":["to"]},{"Key":"clause to","Fragments":["keep"]},{"Key":"as narrow","Fragments":["as"]},{"Key":"narrow as","Fragments":["possible"]},{"Key":"and improve","Fragments":["readability."]},{"Key":"simplification w/","Fragments":["```headOption```."]},{"Key":" @zander","Fragments":["Indeed."]},{"Key":"@zander Indeed.","Fragments":["Hide"]},{"Key":"Indeed. Hide","Fragments":["it"]},{"Key":"Hide it","Fragments":["in"]},{"Key":"my 2nd","Fragments":["iteration.","iteration,"]},{"Key":"2nd iteration.","Fragments":["Thanks"]},{"Key":"iteration. Thanks","Fragments":["for","for"]},{"Key":"nice (as","Fragments":["your"]},{"Key":"(as your","Fragments":["code"]},{"Key":"code always","Fragments":["is)."]},{"Key":"expose mutable","Fragments":["objects"]},{"Key":"mutable objects","Fragments":["to"]},{"Key":"outside world","Fragments":["(in"]},{"Key":"world (in","Fragments":["your"]},{"Key":"(in your","Fragments":["case"]},{"Key":"case \"db\"","Fragments":["which"]},{"Key":"\"db\" which","Fragments":["is"]},{"Key":"var's if","Fragments":["you"]},{"Key":"some Scala","Fragments":["Collection"]},{"Key":"that come","Fragments":["in"]},{"Key":"Didn't want","Fragments":["to"]},{"Key":"use heavy","Fragments":["NLP"]},{"Key":"heavy NLP","Fragments":["libraries"]},{"Key":"NLP libraries","Fragments":["to"]},{"Key":"libraries to","Fragments":["detect"]},{"Key":"detect \"yelling\"","Fragments":["(since"]},{"Key":"\"yelling\" (since","Fragments":["there"]},{"Key":"(since there","Fragments":["is"]},{"Key":"no definition),","Fragments":["so"]},{"Key":"definition), so","Fragments":["I"]},{"Key":"use some","Fragments":["regexps.","name","of","other","more","```val"]},{"Key":"some regexps.","Fragments":["At"]},{"Key":"regexps. At","Fragments":["least"]},{"Key":"passes test","Fragments":["suite."]},{"Key":" Uses","Fragments":["String"]},{"Key":"Uses String","Fragments":["instead"]},{"Key":"of StringBuilder,","Fragments":["apart"]},{"Key":"StringBuilder, apart","Fragments":["from"]},{"Key":"from that","Fragments":["it's"]},{"Key":"as [iteration","Fragments":["3](http://exercism.io/submissions/6a30b81931954b708088072c4e47309a)."]},{"Key":"point for","Fragments":["creating"]},{"Key":"for creating","Fragments":["the","source"]},{"Key":"map in","Fragments":["`nucleotideCounts`!"]},{"Key":"in `nucleotideCounts`!","Fragments":["Much"]},{"Key":"`nucleotideCounts`! Much","Fragments":["more"]},{"Key":"elegant than","Fragments":["something"]},{"Key":"than something","Fragments":["like"]},{"Key":"like `Map('A'","Fragments":["-\u003e"]},{"Key":"`Map('A' -\u003e","Fragments":["count('A'),"]},{"Key":"-\u003e count('A'),","Fragments":["'T'"]},{"Key":"count('A'), 'T'","Fragments":["-\u003e"]},{"Key":"-\u003e count('T'),","Fragments":["'G'"]},{"Key":"count('T'), 'G'","Fragments":["-\u003e"]},{"Key":"-\u003e count('G'),","Fragments":["'C'"]},{"Key":"count('G'), 'C'","Fragments":["-\u003e"]},{"Key":"-\u003e count('C'))`","Fragments":["(what"]},{"Key":"count('C'))` (what","Fragments":["I"]},{"Key":"(what I","Fragments":["did"]},{"Key":"did and","Fragments":["what"]},{"Key":"and what","Fragments":["I","the","is","is","would","about"]},{"Key":"I mostl","Fragments":["see)"]},{"Key":"mostl see)","Fragments":[":)"]},{"Key":"with `genome.matches(\"[GCTA]*\")`","Fragments":["and"]},{"Key":"`genome.matches(\"[GCTA]*\")` and","Fragments":["`nucleotides.contains(nucleotide)`,"]},{"Key":"and `nucleotides.contains(nucleotide)`,","Fragments":["it"]},{"Key":"`nucleotides.contains(nucleotide)`, it","Fragments":["seems"]},{"Key":"same job","Fragments":["in"]},{"Key":"job in","Fragments":["two"]},{"Key":"fail the","Fragments":["test"]},{"Key":"test since","Fragments":["it"]},{"Key":"word as","Fragments":["a"]},{"Key":"valid anagram","Fragments":["of"]},{"Key":"anagram of","Fragments":["itself.","itself,"]},{"Key":"of itself.","Fragments":["(Or"]},{"Key":"itself. (Or","Fragments":["do"]},{"Key":"(Or do","Fragments":["I"]},{"Key":"do I","Fragments":["misread?)"]},{"Key":"are awesome!","Fragments":["Thanks"]},{"Key":"awesome! Thanks","Fragments":["for"]},{"Key":"If this","Fragments":["were"]},{"Key":"this were","Fragments":["part"]},{"Key":"were part","Fragments":["of"]},{"Key":"a larger","Fragments":["program,"]},{"Key":"larger program,","Fragments":["making"]},{"Key":"program, making","Fragments":["total"]},{"Key":"making total","Fragments":["a"]},{"Key":"total a","Fragments":["val","lot,"]},{"Key":"nice because","Fragments":["if"]},{"Key":"make references","Fragments":["to"]},{"Key":"to total","Fragments":["a"]},{"Key":"a lot,","Fragments":["then"]},{"Key":"lot, then","Fragments":["it"]},{"Key":"then it","Fragments":["won't","can","only","would"]},{"Key":"recalculate it","Fragments":["each","every","again","again"]},{"Key":"it each","Fragments":["time","time","time"]},{"Key":"time it's","Fragments":["referenced"]},{"Key":"it's referenced","Fragments":["as"]},{"Key":"referenced as","Fragments":["a"]},{"Key":"a val.","Fragments":["As","Thanks","You"]},{"Key":"val. As","Fragments":["a"]},{"Key":"def, though,","Fragments":["it"]},{"Key":"it every","Fragments":["time."]},{"Key":"every time.","Fragments":["Since"]},{"Key":"Since total","Fragments":["is"]},{"Key":"total is","Fragments":["not"]},{"Key":"not likely","Fragments":["to"]},{"Key":"change throughout","Fragments":["your"]},{"Key":"throughout your","Fragments":["code,"]},{"Key":"code, making","Fragments":["it"]},{"Key":"val really","Fragments":["improves"]},{"Key":"really improves","Fragments":["efficiency"]},{"Key":"improves efficiency","Fragments":["and"]},{"Key":"haven't exactly","Fragments":["grokked"]},{"Key":"exactly grokked","Fragments":["the"]},{"Key":"grokked the","Fragments":["nuance"]},{"Key":"the nuance","Fragments":["of"]},{"Key":"nuance of","Fragments":["`def`"]},{"Key":"of `def`","Fragments":["vs."]},{"Key":"`def` vs.","Fragments":["`val`"]},{"Key":"vs. `val`","Fragments":["right"]},{"Key":"`val` right","Fragments":["away,"]},{"Key":"right away,","Fragments":["but"]},{"Key":"sense now","Fragments":["that"]},{"Key":"now that","Fragments":["I","looks"]},{"Key":"Looks almost","Fragments":["perfect"]},{"Key":"almost perfect","Fragments":["to"]},{"Key":"perfect to","Fragments":["me."]},{"Key":"me. The","Fragments":["only"]},{"Key":"only things","Fragments":["I"]},{"Key":"things I","Fragments":["would"]},{"Key":"change are","Fragments":["to"]},{"Key":"are to","Fragments":["reduce"]},{"Key":"reduce ambiguity","Fragments":["by"]},{"Key":"ambiguity by","Fragments":["changing"]},{"Key":"by changing","Fragments":["your"]},{"Key":"changing your","Fragments":["square"]},{"Key":"your square","Fragments":["method"]},{"Key":"square method","Fragments":["to"]},{"Key":"not also","Fragments":["take"]},{"Key":"also take","Fragments":["an","it"]},{"Key":"take an","Fragments":["Integer"]},{"Key":"an Integer","Fragments":["of"]},{"Key":"Integer of","Fragments":["the"]},{"Key":"same name.","Fragments":["Additionally,"]},{"Key":"name. Additionally,","Fragments":["I"]},{"Key":"Additionally, I","Fragments":["think","was"]},{"Key":"think \"total\"","Fragments":["should"]},{"Key":"a def.","Fragments":["Not"]},{"Key":"def. Not","Fragments":["a"]},{"Key":"Not a","Fragments":["huge","fan"]},{"Key":"huge deal","Fragments":["in"]},{"Key":"deal in","Fragments":["this","scala"]},{"Key":"case, but","Fragments":["makes","doesn't"]},{"Key":"but makes","Fragments":["more"]},{"Key":"makes more","Fragments":["sense"]},{"Key":"sense logically","Fragments":["to"]},{"Key":"logically to","Fragments":["me."]},{"Key":"love that","Fragments":["you"]},{"Key":"you provide","Fragments":["the","a"]},{"Key":"on public","Fragments":["methods"]},{"Key":"public methods","Fragments":["but"]},{"Key":"methods but","Fragments":["not"]},{"Key":"the private","Fragments":["methods.","methods","methods.","method"]},{"Key":"to reassign","Fragments":["`string`"]},{"Key":"reassign `string`","Fragments":["to"]},{"Key":"`string` to","Fragments":["`source`"]},{"Key":"to `source`","Fragments":["in"]},{"Key":"`source` in","Fragments":["line"]},{"Key":"line 2.","Fragments":["All"]},{"Key":"All arguments","Fragments":["in"]},{"Key":"arguments in","Fragments":["the"]},{"Key":"constructor are","Fragments":["already"]},{"Key":"already private","Fragments":["`val`s"]},{"Key":"private `val`s","Fragments":["in"]},{"Key":"`val`s in","Fragments":["the"]},{"Key":"While the","Fragments":["`private`","code"]},{"Key":"the `private`","Fragments":["in"]},{"Key":"`private` in","Fragments":["line"]},{"Key":"line 8","Fragments":["does","although","is"]},{"Key":"8 does","Fragments":["make"]},{"Key":"make `isAnagram`","Fragments":["private,"]},{"Key":"`isAnagram` private,","Fragments":["it"]},{"Key":"private, it","Fragments":["does"]},{"Key":"make `orderedChars`","Fragments":["a"]},{"Key":"`orderedChars` a","Fragments":["private"]},{"Key":"private method.","Fragments":["You"]},{"Key":"method. You","Fragments":["need","can"]},{"Key":"You need","Fragments":["to","to"]},{"Key":"it once","Fragments":["more."]},{"Key":"The `toCharArray`","Fragments":["in"]},{"Key":"line 15","Fragments":["is"]},{"Key":"15 is","Fragments":["superfluous."]},{"Key":"very expressive","Fragments":["and"]},{"Key":"expressive and","Fragments":["easy"]},{"Key":"That's another","Fragments":["usecase"]},{"Key":"another usecase","Fragments":[";)"]},{"Key":"usecase ;)","Fragments":["-"]},{"Key":";) -","Fragments":["but"]},{"Key":"one i","Fragments":["think"]},{"Key":"think thats","Fragments":["pretty"]},{"Key":"thats pretty","Fragments":["readable."]},{"Key":" Otherwise","Fragments":["the","it"]},{"Key":"Otherwise the","Fragments":["parts"]},{"Key":"parts would","Fragments":["be"]},{"Key":"be generated","Fragments":["for"]},{"Key":"generated for","Fragments":["a"]},{"Key":"a certain","Fragments":["amount."]},{"Key":"the A-to-Z","Fragments":["expression"]},{"Key":"A-to-Z expression","Fragments":["is"]},{"Key":"good hint,","Fragments":["thanks."]},{"Key":"only missing","Fragments":["thing"]},{"Key":"missing thing","Fragments":["is"]},{"Key":"for generateName:","Fragments":["what"]},{"Key":"generateName: what","Fragments":["would"]},{"Key":"of, say","Fragments":["20"]},{"Key":"say 20","Fragments":["letters"]},{"Key":"20 letters","Fragments":["and"]},{"Key":"and 50","Fragments":["digits?"]},{"Key":"50 digits?","Fragments":[":-)"]},{"Key":"PS: If","Fragments":["you"]},{"Key":"save typing","Fragments":["you"]},{"Key":"typing you","Fragments":["can"]},{"Key":"can nicely","Fragments":["use"]},{"Key":"nicely use","Fragments":["Ranges"]},{"Key":"use Ranges","Fragments":["here,","like"]},{"Key":"Ranges here,","Fragments":["e.g."]},{"Key":" ```val","Fragments":["LetterChars","differentPairs:","translationMap"]},{"Key":"```val LetterChars","Fragments":["="]},{"Key":"LetterChars =","Fragments":["'A'"]},{"Key":"= 'A'","Fragments":["to","to"]},{"Key":" Resubmitted","Fragments":["due"]},{"Key":"Resubmitted due","Fragments":["to"]},{"Key":"a PEBCAK","Fragments":["error"]},{"Key":"PEBCAK error","Fragments":["on"]},{"Key":"`match` based","Fragments":["solutions,"]},{"Key":"based solutions,","Fragments":["but"]},{"Key":"solutions, but","Fragments":["this"]},{"Key":"this feels","Fragments":["like"]},{"Key":"feels like","Fragments":["a"]},{"Key":"a pure","Fragments":["mathematical"]},{"Key":"pure mathematical","Fragments":["formula"]},{"Key":"mathematical formula","Fragments":["to"]},{"Key":"formula to","Fragments":["me"]},{"Key":"me and","Fragments":["`match`"]},{"Key":"and `match`","Fragments":["didn't"]},{"Key":"`match` didn't","Fragments":["quite"]},{"Key":"didn't quite","Fragments":["fit"]},{"Key":"fit that","Fragments":["mindset,"]},{"Key":"that mindset,","Fragments":["although"]},{"Key":"mindset, although","Fragments":["it"]},{"Key":"although it","Fragments":["may","costs"]},{"Key":"a test,","Fragments":["in"]},{"Key":"test, in","Fragments":["case"]},{"Key":"case anyone","Fragments":["wants"]},{"Key":"anyone wants","Fragments":["something"]},{"Key":"wants something","Fragments":["with"]},{"Key":"something with","Fragments":["a"]},{"Key":" test(\"list","Fragments":["of"]},{"Key":"test(\"list of","Fragments":["leap"]},{"Key":"of leap","Fragments":["years\")"]},{"Key":"leap years\")","Fragments":["{"]},{"Key":"val years:","Fragments":["Seq[Int]"]},{"Key":"years: Seq[Int]","Fragments":["="]},{"Key":"Seq[Int] =","Fragments":["Seq(1804,"]},{"Key":"= Seq(1804,","Fragments":["1808,"]},{"Key":"Seq(1804, 1808,","Fragments":["1812,"]},{"Key":"1808, 1812,","Fragments":["1816,"]},{"Key":"1812, 1816,","Fragments":["1820,"]},{"Key":"1816, 1820,","Fragments":["1824,"]},{"Key":"1820, 1824,","Fragments":["1828,"]},{"Key":"1824, 1828,","Fragments":["1832,"]},{"Key":"1828, 1832,","Fragments":["1836,"]},{"Key":"1832, 1836,","Fragments":["1840,"]},{"Key":"1836, 1840,","Fragments":["1844,"]},{"Key":"1840, 1844,","Fragments":["1848,"]},{"Key":"1844, 1848,","Fragments":["1852,"]},{"Key":" 1856,","Fragments":["1860,"]},{"Key":"1856, 1860,","Fragments":["1864,"]},{"Key":"1860, 1864,","Fragments":["1868,"]},{"Key":"1864, 1868,","Fragments":["1872,"]},{"Key":"1868, 1872,","Fragments":["1876,"]},{"Key":"1872, 1876,","Fragments":["1880,"]},{"Key":"1876, 1880,","Fragments":["1884,"]},{"Key":"1880, 1884,","Fragments":["1888,"]},{"Key":"1884, 1888,","Fragments":["1892,"]},{"Key":"1888, 1892,","Fragments":["1896,"]},{"Key":"1892, 1896,","Fragments":["1904,"]},{"Key":"1896, 1904,","Fragments":["1908,"]},{"Key":"1904, 1908,","Fragments":["1912,"]},{"Key":"1908, 1912,","Fragments":["1916,"]},{"Key":"1912, 1916,","Fragments":["1920,"]},{"Key":"1916, 1920,","Fragments":["1924,"]},{"Key":" 1928,","Fragments":["1932,"]},{"Key":"1928, 1932,","Fragments":["1936,"]},{"Key":"1932, 1936,","Fragments":["1940,"]},{"Key":"1936, 1940,","Fragments":["1944,"]},{"Key":"1940, 1944,","Fragments":["1948,"]},{"Key":"1944, 1948,","Fragments":["1952,"]},{"Key":"1948, 1952,","Fragments":["1956,"]},{"Key":"1952, 1956,","Fragments":["1960,"]},{"Key":"1956, 1960,","Fragments":["1964,"]},{"Key":"1960, 1964,","Fragments":["1968,"]},{"Key":"1964, 1968,","Fragments":["1972,"]},{"Key":"1968, 1972,","Fragments":["1976,"]},{"Key":"1972, 1976,","Fragments":["1980,"]},{"Key":"1976, 1980,","Fragments":["1984,"]},{"Key":"1980, 1984,","Fragments":["1988,"]},{"Key":"1984, 1988,","Fragments":["1992,"]},{"Key":" 1996,","Fragments":["2000,"]},{"Key":"1996, 2000,","Fragments":["2004,"]},{"Key":"2000, 2004,","Fragments":["2008,"]},{"Key":"2004, 2008,","Fragments":["2012,"]},{"Key":"2008, 2012,","Fragments":["2016,"]},{"Key":"2012, 2016,","Fragments":["2020,"]},{"Key":"2016, 2020,","Fragments":["2024,"]},{"Key":"2020, 2024,","Fragments":["2028,"]},{"Key":"2024, 2028,","Fragments":["2032,"]},{"Key":"2028, 2032,","Fragments":["2036,"]},{"Key":"2032, 2036,","Fragments":["2040,"]},{"Key":"2036, 2040,","Fragments":["2044,"]},{"Key":"2040, 2044,","Fragments":["2048,"]},{"Key":"2044, 2048,","Fragments":["2052,"]},{"Key":"2048, 2052,","Fragments":["2056,"]},{"Key":"2052, 2056,","Fragments":["2060,"]},{"Key":" 2064,","Fragments":["2068,"]},{"Key":"2064, 2068,","Fragments":["2072,"]},{"Key":"2068, 2072,","Fragments":["2076,"]},{"Key":"2072, 2076,","Fragments":["2080,"]},{"Key":"2076, 2080,","Fragments":["2084,"]},{"Key":"2080, 2084,","Fragments":["2088,"]},{"Key":"2084, 2088,","Fragments":["2092,"]},{"Key":"2088, 2092,","Fragments":["2096,"]},{"Key":"2092, 2096,","Fragments":["2104,"]},{"Key":"2096, 2104,","Fragments":["2108,"]},{"Key":"2104, 2108,","Fragments":["2112,"]},{"Key":"2108, 2112,","Fragments":["2116,"]},{"Key":"2112, 2116,","Fragments":["2120,"]},{"Key":"2116, 2120,","Fragments":["2124,"]},{"Key":"2120, 2124,","Fragments":["2128,"]},{"Key":"2124, 2128,","Fragments":["2132,"]},{"Key":" 2136,","Fragments":["2140,"]},{"Key":"2136, 2140,","Fragments":["2144,"]},{"Key":"2140, 2144,","Fragments":["2148,"]},{"Key":"2144, 2148,","Fragments":["2152,"]},{"Key":"2148, 2152,","Fragments":["2156,"]},{"Key":"2152, 2156,","Fragments":["2160,"]},{"Key":"2156, 2160,","Fragments":["2164,"]},{"Key":"2160, 2164,","Fragments":["2168,"]},{"Key":"2164, 2168,","Fragments":["2172,"]},{"Key":"2168, 2172,","Fragments":["2176,"]},{"Key":"2172, 2176,","Fragments":["2180,"]},{"Key":"2176, 2180,","Fragments":["2184,"]},{"Key":"2180, 2184,","Fragments":["2188,"]},{"Key":"2184, 2188,","Fragments":["2192,"]},{"Key":"2188, 2192,","Fragments":["2196,"]},{"Key":"2192, 2196,","Fragments":["2204,"]},{"Key":" 2208,","Fragments":["2212,"]},{"Key":"2208, 2212,","Fragments":["2216,"]},{"Key":"2212, 2216,","Fragments":["2220,"]},{"Key":"2216, 2220,","Fragments":["2224,"]},{"Key":"2220, 2224,","Fragments":["2228,"]},{"Key":"2224, 2228,","Fragments":["2232,"]},{"Key":"2228, 2232,","Fragments":["2236,"]},{"Key":"2232, 2236,","Fragments":["2240,"]},{"Key":"2236, 2240,","Fragments":["2244,"]},{"Key":"2240, 2244,","Fragments":["2248,"]},{"Key":"2244, 2248,","Fragments":["2252,"]},{"Key":"2248, 2252,","Fragments":["2256,"]},{"Key":"2252, 2256,","Fragments":["2260,"]},{"Key":"2256, 2260,","Fragments":["2264,"]},{"Key":"2260, 2264,","Fragments":["2268,"]},{"Key":"2264, 2268,","Fragments":["2272,"]},{"Key":" 2276,","Fragments":["2280,"]},{"Key":"2276, 2280,","Fragments":["2284,"]},{"Key":"2280, 2284,","Fragments":["2288,"]},{"Key":"2284, 2288,","Fragments":["2292,"]},{"Key":"2288, 2292,","Fragments":["2296,"]},{"Key":"2292, 2296,","Fragments":["2304,"]},{"Key":"2296, 2304,","Fragments":["2308,"]},{"Key":"2304, 2308,","Fragments":["2312,"]},{"Key":"2308, 2312,","Fragments":["2316,"]},{"Key":"2312, 2316,","Fragments":["2320,"]},{"Key":"2316, 2320,","Fragments":["2324,"]},{"Key":"2320, 2324,","Fragments":["2328,"]},{"Key":"2324, 2328,","Fragments":["2332,"]},{"Key":"2328, 2332,","Fragments":["2336,"]},{"Key":"2332, 2336,","Fragments":["2340,"]},{"Key":"2336, 2340,","Fragments":["2344,"]},{"Key":" 2348,","Fragments":["2352,"]},{"Key":"2348, 2352,","Fragments":["2356,"]},{"Key":"2352, 2356,","Fragments":["2360,"]},{"Key":"2356, 2360,","Fragments":["2364,"]},{"Key":"2360, 2364,","Fragments":["2368,"]},{"Key":"2364, 2368,","Fragments":["2372,"]},{"Key":"2368, 2372,","Fragments":["2376,"]},{"Key":"2372, 2376,","Fragments":["2380,"]},{"Key":"2376, 2380,","Fragments":["2384,"]},{"Key":"2380, 2384,","Fragments":["2388,"]},{"Key":"2384, 2388,","Fragments":["2392,"]},{"Key":"2388, 2392,","Fragments":["2396,"]},{"Key":"2392, 2396,","Fragments":["2400)"]},{"Key":"for (year","Fragments":["\u003c-"]},{"Key":"(year \u003c-","Fragments":["1804"]},{"Key":"\u003c- 1804","Fragments":["to"]},{"Key":"1804 to","Fragments":["2400)"]},{"Key":"to 2400)","Fragments":["{"]},{"Key":"if (years.contains(year))","Fragments":["assert(Year(year).isLeap)"]},{"Key":"list from","Fragments":["here:","an"]},{"Key":"from here:","Fragments":["http://kalender-365.de/leap-years.php"]},{"Key":"True, you","Fragments":["have","could"]},{"Key":"some complication","Fragments":["for"]},{"Key":"complication for","Fragments":["the"]},{"Key":"the 0","Fragments":["counts."]},{"Key":"0 counts.","Fragments":["What"]},{"Key":"counts. What","Fragments":["I"]},{"Key":"is having","Fragments":["a"]},{"Key":"constant Map","Fragments":["that"]},{"Key":"Map that","Fragments":["maps"]},{"Key":"maps all","Fragments":["nucleotides"]},{"Key":"all nucleotides","Fragments":["to"]},{"Key":"nucleotides to","Fragments":["0","be"]},{"Key":"to 0","Fragments":["and"]},{"Key":"0 and","Fragments":["combine"]},{"Key":"and combine","Fragments":["this"]},{"Key":"combine this","Fragments":["w/"]},{"Key":"w/ ```++```","Fragments":["to"]},{"Key":"```++``` to","Fragments":["result"]},{"Key":"to result","Fragments":["of"]},{"Key":"the calculated","Fragments":["Map."]},{"Key":"the ```(_)```","Fragments":["here."]},{"Key":"```(_)``` here.","Fragments":["And"]},{"Key":"here. And","Fragments":["also"]},{"Key":"the ```new","Fragments":["RuntimeException```,"]},{"Key":"```new RuntimeException```,","Fragments":["you"]},{"Key":"RuntimeException```, you","Fragments":["could"]},{"Key":"nice error","Fragments":["message"]},{"Key":"started study","Fragments":["Scala"]},{"Key":"study Scala","Fragments":["a"]},{"Key":"a week","Fragments":["ago"]},{"Key":"week ago","Fragments":["and"]},{"Key":"ago and","Fragments":["I"]},{"Key":"did this","Fragments":["code","one,","mostly","exercise."]},{"Key":"with hard","Fragments":["work."]},{"Key":"hard work.","Fragments":["I"]},{"Key":"work. I","Fragments":["don't"]},{"Key":"if is","Fragments":["necessary"]},{"Key":"type `private","Fragments":["def"]},{"Key":"`private def","Fragments":["isSilent(msg:"]},{"Key":"def isSilent(msg:","Fragments":["String):"]},{"Key":"isSilent(msg: String):","Fragments":["Boolean"]},{"Key":"String): Boolean","Fragments":["`"]},{"Key":"Boolean `","Fragments":["or"]},{"Key":"` or","Fragments":["when"]},{"Key":"or when","Fragments":["is","the"]},{"Key":"when is","Fragments":["necessary."]},{"Key":"the hey-method.","Fragments":["Couldn't"]},{"Key":"hey-method. Couldn't","Fragments":["be"]},{"Key":"Couldn't be","Fragments":["more"]},{"Key":"The case","Fragments":["objects","statements"]},{"Key":"case objects","Fragments":["would","which"]},{"Key":"objects would","Fragments":["be"]},{"Key":"more compact","Fragments":["formatting."]},{"Key":"Both pimped","Fragments":["String/Char"]},{"Key":"pimped String/Char","Fragments":["and"]},{"Key":"String/Char and","Fragments":["unapply"]},{"Key":"and unapply","Fragments":["seems"]},{"Key":"unapply seems","Fragments":["like"]},{"Key":"bit \"over","Fragments":["the"]},{"Key":"\"over the","Fragments":["top\"."]},{"Key":"I've updated","Fragments":["the"]},{"Key":"unapply to","Fragments":["return"]},{"Key":"a Boolean","Fragments":["since","(and"]},{"Key":"Boolean since","Fragments":["the"]},{"Key":"value wasn't","Fragments":["being"]},{"Key":"wasn't being","Fragments":["used"]},{"Key":"being used","Fragments":["when","just","anywhere?"]},{"Key":"used when","Fragments":["pattern"]},{"Key":"when pattern","Fragments":["matching."]},{"Key":"matching. Suggested","Fragments":["by"]},{"Key":"Suggested by","Fragments":["@opal"]},{"Key":"by @opal","Fragments":["in"]},{"Key":"@opal in","Fragments":["a"]},{"Key":"comment on","Fragments":["iteration","these."]},{"Key":"on iteration","Fragments":["2"]},{"Key":"2 --","Fragments":["http://exercism.io/submissions/e405af305e482dc69e4ed2ee"]},{"Key":"write `","Fragments":["{"]},{"Key":"` {","Fragments":["case"]},{"Key":"case (x,","Fragments":["y)","y)","y)"]},{"Key":"(x, y)","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"y }`","Fragments":["instead"]},{"Key":"of something","Fragments":["like:","like"]},{"Key":"something like:","Fragments":["`p"]},{"Key":"like: `p","Fragments":["=\u003e"]},{"Key":"`p =\u003e","Fragments":["p._1","p._1"]},{"Key":"=\u003e p._1","Fragments":["!=","!="]},{"Key":"p._1 !=","Fragments":["p._2`?","p._2`?"]},{"Key":" Discovered","Fragments":["case","```Map().withDefaultValue(0)```"]},{"Key":"Discovered case","Fragments":["objects"]},{"Key":"objects which","Fragments":["made"]},{"Key":"which made","Fragments":["things"]},{"Key":"made things","Fragments":["a"]},{"Key":"lot better.","Fragments":["Still","I"]},{"Key":"better. Still","Fragments":["working"]},{"Key":"Still working","Fragments":["on"]},{"Key":"make isShouting","Fragments":["more"]},{"Key":"isShouting more","Fragments":["clear."]},{"Key":"Still stuck","Fragments":["in","on"]},{"Key":"stuck in","Fragments":["a","my"]},{"Key":"a Java","Fragments":["mindset.","dev","for-loop."]},{"Key":"For readability,","Fragments":["I"]},{"Key":"readability, I","Fragments":["personnaly"]},{"Key":"I personnaly","Fragments":["prefer"]},{"Key":"personnaly prefer","Fragments":["```s.endsWith(\"?\")```"]},{"Key":"use Java's","Fragments":["```Integer```"]},{"Key":"Java's ```Integer```","Fragments":["type"]},{"Key":"```Integer``` type","Fragments":["instead"]},{"Key":"type instead","Fragments":["of"]},{"Key":"probably replace","Fragments":["```square(_)```"]},{"Key":"replace ```square(_)```","Fragments":["by"]},{"Key":"```square(_)``` by","Fragments":["just"]},{"Key":"Got pretty","Fragments":["much"]},{"Key":"much the","Fragments":["same"]},{"Key":"solution, except","Fragments":["I"]},{"Key":"except I","Fragments":["used"]},{"Key":"used get(word)","Fragments":["and"]},{"Key":"get(word) and","Fragments":["PatternMatching"]},{"Key":"and PatternMatching","Fragments":["in"]},{"Key":"PatternMatching in","Fragments":["the"]},{"Key":"the add","Fragments":["function."]},{"Key":"a shorter","Fragments":["solution","and","(yet"]},{"Key":"solution without","Fragments":["`letterWeight`,","methods"]},{"Key":"without `letterWeight`,","Fragments":["maybe"]},{"Key":"`letterWeight`, maybe","Fragments":["by"]},{"Key":"maybe by","Fragments":["using"]},{"Key":"understand by","Fragments":["using"]},{"Key":"using map","Fragments":["instead","and"]},{"Key":" @alberto","Fragments":["--"]},{"Key":"@alberto --","Fragments":["fair"]},{"Key":"-- fair","Fragments":["enough!"]},{"Key":"fair enough!","Fragments":["It's"]},{"Key":"enough! It's","Fragments":["certainly"]},{"Key":"less code","Fragments":["in","-"]},{"Key":"any case","Fragments":[":-)","I","be"]},{"Key":"guess if","Fragments":["we"]},{"Key":"were dealing","Fragments":["with"]},{"Key":"dealing with","Fragments":["larger"]},{"Key":"with larger","Fragments":["data"]},{"Key":"data I","Fragments":["could"]},{"Key":"some claim","Fragments":["about"]},{"Key":"claim about","Fragments":["O(N)"]},{"Key":"about O(N)","Fragments":["vs"]},{"Key":"O(N) vs","Fragments":["O(N"]},{"Key":"vs O(N","Fragments":["log"]},{"Key":"O(N log","Fragments":["N)"]},{"Key":"log N)","Fragments":["but"]},{"Key":"N) but","Fragments":["with"]},{"Key":"but with","Fragments":["these","something"]},{"Key":"with these","Fragments":["input"]},{"Key":"these input","Fragments":["cases"]},{"Key":"input cases","Fragments":["it's"]},{"Key":"cases it's","Fragments":["not"]},{"Key":"just compare","Fragments":["the"]},{"Key":"the candidate","Fragments":["and"]},{"Key":"candidate and","Fragments":["input"]},{"Key":"and input","Fragments":["word."]},{"Key":"not satisfied","Fragments":["with"]},{"Key":"satisfied with","Fragments":["the"]},{"Key":"the toString","Fragments":["method.","is","method!"]},{"Key":"seen other","Fragments":["people"]},{"Key":"other people","Fragments":["ordering","submitting","due"]},{"Key":"people ordering","Fragments":["the"]},{"Key":"ordering the","Fragments":["strings"]},{"Key":"strings in","Fragments":["order","general."]},{"Key":"doing with","Fragments":["your","the"]},{"Key":"your \"contains\"","Fragments":["function."]},{"Key":"\"contains\" function.","Fragments":["It"]},{"Key":"seems less","Fragments":["hassle"]},{"Key":"less hassle","Fragments":["and"]},{"Key":"hassle and","Fragments":["easier"]},{"Key":"my case,","Fragments":["I"]},{"Key":"also tried","Fragments":["to","to"]},{"Key":"something funny","Fragments":["and"]},{"Key":"funny and","Fragments":["ended"]},{"Key":"and ended","Fragments":["up"]},{"Key":"up transforming","Fragments":["the"]},{"Key":"transforming the","Fragments":["words","input","map."]},{"Key":"words into","Fragments":["Map[Char,"]},{"Key":"into Map[Char,","Fragments":["Int],"]},{"Key":"Map[Char, Int],","Fragments":["to"]},{"Key":"Int], to","Fragments":["be"]},{"Key":" TBH","Fragments":["I"]},{"Key":"TBH I","Fragments":["am"]},{"Key":"got stuck","Fragments":["when","with"]},{"Key":"stuck when","Fragments":["thinking"]},{"Key":"when thinking","Fragments":["of"]},{"Key":"of more","Fragments":["Scaly"]},{"Key":"more Scaly","Fragments":["way"]},{"Key":"Scaly way","Fragments":["to"]},{"Key":"Ah, that's","Fragments":["what"]},{"Key":"that's what","Fragments":["your","confused"]},{"Key":"your imports","Fragments":["were"]},{"Key":"imports were","Fragments":["about."]},{"Key":"were about.","Fragments":["Cool."]},{"Key":"about. Cool.","Fragments":["I"]},{"Key":"about leaving","Fragments":["the"]},{"Key":"leaving the","Fragments":["periods"]},{"Key":"the periods","Fragments":["off"]},{"Key":"periods off","Fragments":["at"]},{"Key":"off at","Fragments":["all"]},{"Key":"all but","Fragments":["wanted"]},{"Key":"but wanted","Fragments":["to"]},{"Key":"try it.","Fragments":["If"]},{"Key":"it. If","Fragments":["I"]},{"Key":"a warning,","Fragments":["maybe"]},{"Key":"warning, maybe","Fragments":["it'd"]},{"Key":"maybe it'd","Fragments":["be"]},{"Key":"use periods","Fragments":["than"]},{"Key":"periods than","Fragments":["getting"]},{"Key":"than getting","Fragments":["rid"]},{"Key":"getting rid","Fragments":["of"]},{"Key":"the warning?","Fragments":["I'll"]},{"Key":"warning? I'll","Fragments":["look"]},{"Key":"just what","Fragments":["it","I"]},{"Key":"it warns","Fragments":["about"]},{"Key":"warns about","Fragments":["and"]},{"Key":"about and","Fragments":["what"]},{"Key":"the intention","Fragments":["of"]},{"Key":"the import","Fragments":["is.","you"]},{"Key":"Also, you'll","Fragments":["probably","find"]},{"Key":"be getting","Fragments":["warnings"]},{"Key":"getting warnings","Fragments":["on"]},{"Key":"warnings on","Fragments":["compilation"]},{"Key":"on compilation","Fragments":["at"]},{"Key":"compilation at","Fragments":["the"]},{"Key":"the moment","Fragments":["because","pass"]},{"Key":"moment because","Fragments":["of"]},{"Key":"of postfix","Fragments":["operators"]},{"Key":"postfix operators","Fragments":["(`utterance"]},{"Key":"operators (`utterance","Fragments":["isShout`"]},{"Key":"(`utterance isShout`","Fragments":["etc"]},{"Key":"isShout` etc","Fragments":["without"]},{"Key":"etc without","Fragments":["the"]},{"Key":"the dot).","Fragments":["The"]},{"Key":"dot). The","Fragments":["warning's"]},{"Key":"The warning's","Fragments":["probably"]},{"Key":"warning's probably","Fragments":["getting"]},{"Key":"probably getting","Fragments":["lost"]},{"Key":"getting lost","Fragments":["in"]},{"Key":"lost in","Fragments":["the"]},{"Key":"the reams","Fragments":["of"]},{"Key":"reams of","Fragments":["output"]},{"Key":"of output","Fragments":["from"]},{"Key":"output from","Fragments":["sbt,"]},{"Key":"from sbt,","Fragments":["but"]},{"Key":"sbt, but","Fragments":["you"]},{"Key":"you compile","Fragments":["the"]},{"Key":"compile the","Fragments":["file"]},{"Key":"the file","Fragments":["independently"]},{"Key":"file independently","Fragments":["with"]},{"Key":"independently with","Fragments":["the"]},{"Key":"the `-feature`","Fragments":["flag."]},{"Key":"`-feature` flag.","Fragments":["So"]},{"Key":"flag. So","Fragments":["something"]},{"Key":"So something","Fragments":["like:","like"]},{"Key":" scalac","Fragments":["src/main/scala/bob.scala"]},{"Key":"scalac src/main/scala/bob.scala","Fragments":["-feature"]},{"Key":" should","Fragments":["show","be"]},{"Key":"should show","Fragments":["you"]},{"Key":"show you","Fragments":["the"]},{"Key":"the warning.","Fragments":["It"]},{"Key":"warning. It","Fragments":["can"]},{"Key":"fixed by","Fragments":["adding"]},{"Key":"adding an","Fragments":["import"]},{"Key":"import -","Fragments":["the"]},{"Key":"the warning","Fragments":["text"]},{"Key":"warning text","Fragments":["explains"]},{"Key":"text explains","Fragments":["how."]},{"Key":"to know!","Fragments":[":)"]},{"Key":" Don't","Fragments":["take","use","realy"]},{"Key":"Don't take","Fragments":["my"]},{"Key":"take my","Fragments":["solution"]},{"Key":"last word","Fragments":["in"]},{"Key":"word in","Fragments":["Scala!"]},{"Key":"my indentation","Fragments":["of"]},{"Key":"indentation of","Fragments":["the"]},{"Key":"that common,","Fragments":["for"]},{"Key":"common, for","Fragments":["example"]},{"Key":"example -","Fragments":["I"]},{"Key":"the relevant","Fragments":["parts"]},{"Key":"relevant parts","Fragments":["line"]},{"Key":"parts line","Fragments":["up"]},{"Key":"line up","Fragments":[";-)"]},{"Key":" Cleanup","Fragments":["after"]},{"Key":"Cleanup after","Fragments":["looking"]},{"Key":"at @geovanni's","Fragments":["solution."]},{"Key":"@geovanni's solution.","Fragments":["Mostly"]},{"Key":"solution. Mostly","Fragments":["whitespace"]},{"Key":"Mostly whitespace","Fragments":["and"]},{"Key":"whitespace and","Fragments":["reordering"]},{"Key":"and reordering","Fragments":["to"]},{"Key":"reordering to","Fragments":["have"]},{"Key":"the support","Fragments":["code"]},{"Key":"support code","Fragments":["(`Utterance`)"]},{"Key":"code (`Utterance`)","Fragments":["at"]},{"Key":"(`Utterance`) at","Fragments":["the"]},{"Key":"the bottom,","Fragments":["but"]},{"Key":"bottom, but","Fragments":["I"]},{"Key":"also moved","Fragments":["the"]},{"Key":"implicit declaration","Fragments":["into"]},{"Key":"declaration into","Fragments":["`Bob`."]},{"Key":" Never","Fragments":["figured"]},{"Key":"Never figured","Fragments":["out"]},{"Key":"figured out","Fragments":["how","that","that","that"]},{"Key":"get it","Fragments":["into","working.","right...","now.","to","to","much"]},{"Key":"object, if","Fragments":["that's"]},{"Key":"that's possible","Fragments":["at"]},{"Key":"possible at","Fragments":["all,"]},{"Key":"is cleaner","Fragments":["than","looking."]},{"Key":"still think","Fragments":["explicitly"]},{"Key":"think explicitly","Fragments":["creating"]},{"Key":"explicitly creating","Fragments":["an"]},{"Key":"creating an","Fragments":["utterance","empty"]},{"Key":"an utterance","Fragments":["would"]},{"Key":"utterance would","Fragments":["make"]},{"Key":"to follow,","Fragments":["but"]},{"Key":"follow, but","Fragments":["maybe"]},{"Key":"maybe this","Fragments":["is"]},{"Key":"strong enough","Fragments":["Scala"]},{"Key":"enough Scala","Fragments":["convention"]},{"Key":"convention that","Fragments":["it"]},{"Key":"doesn't confuse","Fragments":["people"]},{"Key":"confuse people","Fragments":["for"]},{"Key":"people for","Fragments":["long."]},{"Key":"version w/","Fragments":["case"]},{"Key":"w/ case","Fragments":["class"]},{"Key":"and transformer","Fragments":["function"]},{"Key":"transformer function","Fragments":["upon"]},{"Key":"function upon","Fragments":["it."]},{"Key":"think `val`","Fragments":["is"]},{"Key":"`val` is","Fragments":["preferable"]},{"Key":"preferable in","Fragments":["this"]},{"Key":"case, because","Fragments":["the"]},{"Key":"value doesn't","Fragments":["need"]},{"Key":"change after","Fragments":["it's"]},{"Key":"after it's","Fragments":["defined."]},{"Key":"type defs","Fragments":["here"]},{"Key":"defs here","Fragments":["makes"]},{"Key":"here makes","Fragments":["the"]},{"Key":"method signatures","Fragments":["much","and"]},{"Key":"signatures much","Fragments":["more"]},{"Key":"more descriptive.","Fragments":["The"]},{"Key":"descriptive. The","Fragments":["only"]},{"Key":"I question","Fragments":["is"]},{"Key":"of `val`","Fragments":["over"]},{"Key":"`val` over","Fragments":["`var`"]},{"Key":"over `var`","Fragments":["on"]},{"Key":"`var` on","Fragments":["line"]},{"Key":"8 although","Fragments":["I'm"]},{"Key":"although I'm","Fragments":["not"]},{"Key":"much into","Fragments":["scala"]},{"Key":"into scala","Fragments":["these"]},{"Key":"scala these","Fragments":["days"]},{"Key":"these days","Fragments":["to"]},{"Key":"days to","Fragments":["know"]},{"Key":"know which","Fragments":["is","one"]},{"Key":" great","Fragments":["simplification,"]},{"Key":"great simplification,","Fragments":["inspired"]},{"Key":"simplification, inspired","Fragments":["by"]},{"Key":"default implementation","Fragments":["of"]},{"Key":"of `Map`","Fragments":["is"]},{"Key":"`Map` is","Fragments":["`HashMap`.","also"]},{"Key":"But of","Fragments":["course","course","course","course,"]},{"Key":"is bad","Fragments":["style,"]},{"Key":"bad style,","Fragments":["so"]},{"Key":"style, so","Fragments":["I"]},{"Key":"submitted another","Fragments":["version","solution","iteration.","iteration"]},{"Key":"a `SortedMap`.","Fragments":["thx."]},{"Key":"wondering: what","Fragments":["guarantees"]},{"Key":"what guarantees","Fragments":["do"]},{"Key":"guarantees do","Fragments":["you"]},{"Key":"have about","Fragments":["the"]},{"Key":"order when","Fragments":["iterating"]},{"Key":"when iterating","Fragments":["over"]},{"Key":"Map in","Fragments":["Scala?","Scala,","the"]},{"Key":"in Scala?","Fragments":["Will"]},{"Key":"Scala? Will","Fragments":["it"]},{"Key":"Will it","Fragments":["be"]},{"Key":"order as","Fragments":["specified"]},{"Key":"as specified","Fragments":["in"]},{"Key":"specified in","Fragments":["the","the","the"]},{"Key":"Smart `zip`","Fragments":["use."]},{"Key":" Tip:","Fragments":["the"]},{"Key":"Tip: the","Fragments":["`count`"]},{"Key":"function takes","Fragments":["a"]},{"Key":"takes a","Fragments":["predicate.","predicate.","predicate","```GregorianCalendar```","predicate","predicate"]},{"Key":"a predicate.","Fragments":["you","You"]},{"Key":"predicate. you","Fragments":["could"]},{"Key":"could like","Fragments":["it"]},{"Key":"think [count](http://www.scala-lang.org/api/current/index.html#scala.collection.immutable.List@shanie%28p:A=%3EBoolean%29:Int)","Fragments":["is"]},{"Key":"[count](http://www.scala-lang.org/api/current/index.html#scala.collection.immutable.List@shanie%28p:A=%3EBoolean%29:Int) is","Fragments":["better"]},{"Key":"better suited","Fragments":["for"]},{"Key":"suited for","Fragments":["this"]},{"Key":"task than","Fragments":["map\u0026sum."]},{"Key":" so","Fragments":["many"]},{"Key":"many parameters","Fragments":["often"]},{"Key":"parameters often","Fragments":["indicate"]},{"Key":"often indicate","Fragments":["that"]},{"Key":"indicate that","Fragments":["the"]},{"Key":"function does","Fragments":["too"]},{"Key":"perhaps define","Fragments":["(private"]},{"Key":"define (private","Fragments":["or"]},{"Key":"(private or","Fragments":["nested)"]},{"Key":"or nested)","Fragments":["helper"]},{"Key":"nested) helper","Fragments":["functions?"]},{"Key":"I recommend","Fragments":["perhaps","to"]},{"Key":"recommend perhaps","Fragments":["a"]},{"Key":"a nested","Fragments":["function","tail-recursive"]},{"Key":"nested function","Fragments":["as"]},{"Key":"two String","Fragments":["args"]},{"Key":"String args","Fragments":["never"]},{"Key":"args never","Fragments":["change."]},{"Key":"(and about","Fragments":["\"max\":"]},{"Key":"about \"max\":","Fragments":["maybe"]},{"Key":"\"max\": maybe","Fragments":["dub"]},{"Key":"maybe dub","Fragments":["it"]},{"Key":"dub it","Fragments":["\"length\""]},{"Key":"it \"length\"","Fragments":["or"]},{"Key":"\"length\" or","Fragments":["\"size\"?)."]},{"Key":"Should methods","Fragments":["have"]},{"Key":"methods have","Fragments":["so"]},{"Key":"have so","Fragments":["many"]},{"Key":"many parameters?","Fragments":["Is"]},{"Key":"parameters? Is","Fragments":["5"]},{"Key":"Is 5","Fragments":["too"]},{"Key":"5 too","Fragments":["many?"]},{"Key":"version removes","Fragments":["the"]},{"Key":"removes the","Fragments":["var","need"]},{"Key":"var from","Fragments":["my"]},{"Key":"my 1st","Fragments":["version","iteration,"]},{"Key":"1st version","Fragments":["by"]},{"Key":"version by","Fragments":["using"]},{"Key":"This could","Fragments":["be","be"]},{"Key":"be contracted","Fragments":["into"]},{"Key":"contracted into","Fragments":["the"]},{"Key":"one method","Fragments":["\"compute\"","that"]},{"Key":"method \"compute\"","Fragments":["but"]},{"Key":"\"compute\" but","Fragments":["then"]},{"Key":"then becomes","Fragments":["a"]},{"Key":"little cumbersome","Fragments":["with"]},{"Key":"cumbersome with","Fragments":["unnecessary"]},{"Key":"with unnecessary","Fragments":["computations"]},{"Key":"unnecessary computations","Fragments":["as"]},{"Key":"computations as","Fragments":["well"]},{"Key":"The cumbersomeness","Fragments":["would"]},{"Key":"cumbersomeness would","Fragments":["come"]},{"Key":"would come","Fragments":["from","down"]},{"Key":"of \"max\"","Fragments":["(poorly"]},{"Key":"\"max\" (poorly","Fragments":["named,"]},{"Key":"(poorly named,","Fragments":["sorry)"]},{"Key":"named, sorry)","Fragments":["for"]},{"Key":"sorry) for","Fragments":["each"]},{"Key":"First draft.","Fragments":["Probably"]},{"Key":"draft. Probably","Fragments":["a"]},{"Key":"Probably a","Fragments":["little"]},{"Key":"little wonky","Fragments":["to"]},{"Key":"wonky to","Fragments":["use"]},{"Key":"on balance","Fragments":["with"]},{"Key":"balance with","Fragments":["a"]},{"Key":"- `flatMap`","Fragments":["works"]},{"Key":"`flatMap` works","Fragments":["on"]},{"Key":"on `Option`","Fragments":["as"]},{"Key":"`Option` as","Fragments":["well."]},{"Key":"could perhaps","Fragments":["separate","be","be"]},{"Key":"perhaps separate","Fragments":["the"]},{"Key":"the async","Fragments":["code"]},{"Key":"async code","Fragments":["a"]},{"Key":"more from","Fragments":["the"]},{"Key":"the sync","Fragments":["code."]},{"Key":"one principle","Fragments":["is"]},{"Key":"principle is","Fragments":["to"]},{"Key":"the blocking","Fragments":["call","```Await.result```"]},{"Key":"blocking call","Fragments":["(`Await.result`)"]},{"Key":"call (`Await.result`)","Fragments":["at"]},{"Key":"(`Await.result`) at","Fragments":["the"]},{"Key":"the latest","Fragments":["possible","possible"]},{"Key":"latest possible","Fragments":["moment.","moment"]},{"Key":"possible moment.","Fragments":["so"]},{"Key":"moment. so","Fragments":["I"]},{"Key":"suggest to","Fragments":["use"]},{"Key":"tips. I","Fragments":["couldn't"]},{"Key":"get pattern-matching","Fragments":["to"]},{"Key":"pattern-matching to","Fragments":["work"]},{"Key":"work the","Fragments":["first"]},{"Key":"time around,","Fragments":["but"]},{"Key":"around, but","Fragments":["that"]},{"Key":"had something","Fragments":["to"]},{"Key":"with me","Fragments":["not"]},{"Key":"not realizing","Fragments":["Scala","that"]},{"Key":"realizing Scala","Fragments":["provides"]},{"Key":"provides implicit","Fragments":["return."]},{"Key":"implicit return.","Fragments":["I'll"]},{"Key":"return. I'll","Fragments":["give"]},{"Key":"I'll give","Fragments":["it"]},{"Key":"The big","Fragments":["thing"]},{"Key":"big thing","Fragments":["that"]},{"Key":"that stands","Fragments":["out"]},{"Key":"stands out","Fragments":["is"]},{"Key":"out is","Fragments":["that"]},{"Key":"the returns.","Fragments":["I"]},{"Key":"returns. I","Fragments":["like"]},{"Key":"the silence,","Fragments":["question"]},{"Key":"silence, question","Fragments":["and"]},{"Key":"and shouting","Fragments":["out"]},{"Key":"shouting out","Fragments":["into"]},{"Key":"own functions.","Fragments":["You"]},{"Key":"statements at","Fragments":["the"]},{"Key":"the bottom","Fragments":["into"]},{"Key":"bottom into","Fragments":["pattern"]},{"Key":"into pattern","Fragments":["matching."]},{"Key":"Also take","Fragments":["a"]},{"Key":"the comments","Fragments":["on","in"]},{"Key":"comments on","Fragments":["this"]},{"Key":"this submission:","Fragments":["http://exercism.io/submissions/d7c2808265ed6ee21ff5bb28"]},{"Key":"To simplify","Fragments":["this","you"]},{"Key":"a little,","Fragments":["you"]},{"Key":"little, you","Fragments":["could"]},{"Key":"use .count","Fragments":["on"]},{"Key":"the zip.","Fragments":["Like"]},{"Key":"zip. Like","Fragments":["so:"]},{"Key":" ```","Fragments":["scala"]},{"Key":" (a","Fragments":["zip"]},{"Key":"(a zip","Fragments":["b).count"]},{"Key":"zip b).count","Fragments":["{"]},{"Key":"b).count {","Fragments":["..."]},{"Key":"I'll leave","Fragments":["it"]},{"Key":"I zipped","Fragments":["both"]},{"Key":"zipped both","Fragments":["Strings"]},{"Key":"both Strings","Fragments":["to"]},{"Key":"of pairs","Fragments":["of","(tuples).","then"]},{"Key":"of Chars.","Fragments":["Overlapping"]},{"Key":"Chars. Overlapping","Fragments":["elements"]},{"Key":"Overlapping elements","Fragments":["are"]},{"Key":"elements are","Fragments":["ignored"]},{"Key":"are ignored","Fragments":["by"]},{"Key":"ignored by","Fragments":["the"]},{"Key":"zip function.","Fragments":["Then"]},{"Key":"function. Then","Fragments":["I"]},{"Key":"I map","Fragments":["the"]},{"Key":"Seq to","Fragments":["a"]},{"Key":"of differences","Fragments":["and"]},{"Key":"differences and","Fragments":["sum"]},{"Key":"sum it","Fragments":["up."]},{"Key":"Thanks. In","Fragments":["fact"]},{"Key":"fact I","Fragments":["did"]},{"Key":"did figure","Fragments":["it"]},{"Key":"figure it","Fragments":["out","out,"]},{"Key":" Inspired","Fragments":["by"]},{"Key":"Inspired by","Fragments":["matheusemm's"]},{"Key":"by matheusemm's","Fragments":["approach"]},{"Key":"matheusemm's approach","Fragments":["(http://exercism.io/submissions/0258d2bf1dea224167204fb0)"]},{"Key":"done some","Fragments":["toy"]},{"Key":"some toy","Fragments":["Scala"]},{"Key":"toy Scala","Fragments":["coding,"]},{"Key":"Scala coding,","Fragments":["but"]},{"Key":"coding, but","Fragments":["I've"]},{"Key":"never gotten","Fragments":["around"]},{"Key":"gotten around","Fragments":["to"]},{"Key":"to trying","Fragments":["to"]},{"Key":"use `Either`","Fragments":["for"]},{"Key":"`Either` for","Fragments":["validation/error"]},{"Key":"for validation/error","Fragments":["reporting"]},{"Key":"validation/error reporting","Fragments":["so"]},{"Key":"reporting so","Fragments":["I"]},{"Key":"example. I'm","Fragments":["not"]},{"Key":"it justice,","Fragments":["but"]},{"Key":"justice, but","Fragments":["I"]},{"Key":"should I","Fragments":["use"]},{"Key":"use -","Fragments":["if-conditions"]},{"Key":"- if-conditions","Fragments":["or"]},{"Key":"if-conditions or","Fragments":["pattern-matching,"]},{"Key":"or pattern-matching,","Fragments":["substring"]},{"Key":"pattern-matching, substring","Fragments":["or"]},{"Key":"substring or","Fragments":["drop/take?","drop/take,"]},{"Key":"that pattern-matching","Fragments":["just"]},{"Key":"pattern-matching just","Fragments":["looks"]},{"Key":"just looks","Fragments":["nicer."]},{"Key":"looks nicer.","Fragments":["As"]},{"Key":"nicer. As","Fragments":["for"]},{"Key":"for substring","Fragments":["or"]},{"Key":"or drop/take,","Fragments":["I"]},{"Key":"drop/take, I","Fragments":["have"]},{"Key":"no real","Fragments":["preference."]},{"Key":"liked blemale's","Fragments":["solution"]},{"Key":"blemale's solution","Fragments":["very"]},{"Key":"solution very","Fragments":["much,"]},{"Key":"very much,","Fragments":["I"]},{"Key":"much, I","Fragments":["could"]},{"Key":"not stand","Fragments":["to"]},{"Key":"stand to","Fragments":["submit"]},{"Key":"to submit","Fragments":["a"]},{"Key":"submit a","Fragments":["copy/paste-less","shorter"]},{"Key":"a copy/paste-less","Fragments":["version."]},{"Key":" @davin:","Fragments":["Sorry."]},{"Key":"no programming","Fragments":["by"]},{"Key":"programming by","Fragments":["exception,"]},{"Key":"by exception,","Fragments":["pls!"]},{"Key":"exception, pls!","Fragments":["esp."]},{"Key":"pls! esp.","Fragments":["not"]},{"Key":"esp. not","Fragments":["in"]},{"Key":"First attempt,","Fragments":["feels"]},{"Key":"attempt, feels","Fragments":["a"]},{"Key":"feels a","Fragments":["bit"]},{"Key":"bit ugly,","Fragments":["so"]},{"Key":"ugly, so","Fragments":["might"]},{"Key":"so might","Fragments":["try"]},{"Key":"try for","Fragments":["something"]},{"Key":"more elegant.","Fragments":["Let"]},{"Key":"elegant. Let","Fragments":["an"]},{"Key":"Let an","Fragments":["exception"]},{"Key":"exception do","Fragments":["some"]},{"Key":"me rather","Fragments":["than"]},{"Key":"than manually","Fragments":["ignoring"]},{"Key":"manually ignoring","Fragments":["positions"]},{"Key":"ignoring positions","Fragments":["off"]},{"Key":"positions off","Fragments":["the"]},{"Key":"off the","Fragments":["board."]},{"Key":"it's missing","Fragments":["functionality","but"]},{"Key":"missing functionality","Fragments":["to"]},{"Key":"functionality to","Fragments":["avoid"]},{"Key":"avoid name","Fragments":["collisions..."]},{"Key":"name collisions...","Fragments":["but"]},{"Key":"collisions... but","Fragments":["the"]},{"Key":"fail to","Fragments":["assert"]},{"Key":"to assert","Fragments":["it."]},{"Key":"Also I'd","Fragments":["make"]},{"Key":"I'd make","Fragments":["a","it"]},{"Key":"used scala.util.Random.alphanumeric","Fragments":["but"]},{"Key":"scala.util.Random.alphanumeric but","Fragments":["that"]},{"Key":"might return","Fragments":["numbers,"]},{"Key":"return numbers,","Fragments":["tests"]},{"Key":"numbers, tests","Fragments":["passed"]},{"Key":"tests passed","Fragments":["but"]},{"Key":"passed but","Fragments":["I"]},{"Key":" Credit","Fragments":["to"]},{"Key":"Credit to","Fragments":["@nia"]},{"Key":"to @nia","Fragments":["for"]},{"Key":"@nia for","Fragments":["this"]},{"Key":" Sure","Fragments":["thing!"]},{"Key":"Sure thing!","Fragments":["I'm"]},{"Key":"thing! I'm","Fragments":["learning"]},{"Key":"learning Scala,","Fragments":["too."]},{"Key":"Scala, too.","Fragments":["It's"]},{"Key":"too. It's","Fragments":["fun"]},{"Key":"It's fun","Fragments":["to"]},{"Key":"fun to","Fragments":["see"]},{"Key":"others come","Fragments":["up"]},{"Key":" @ross","Fragments":["I"]},{"Key":"@ross I","Fragments":["agree"]},{"Key":"with everything","Fragments":["you"]},{"Key":"everything you","Fragments":["said.","need"]},{"Key":"you said.","Fragments":["I'm"]},{"Key":"said. I'm","Fragments":["fairly"]},{"Key":"I'm fairly","Fragments":["new","certain"]},{"Key":"fairly new","Fragments":["to"]},{"Key":"make tests","Fragments":["pass"]},{"Key":"tests pass","Fragments":["on"]},{"Key":"pass on","Fragments":["the","a"]},{"Key":"first iteration.","Fragments":["Thanks"]},{"Key":"how `isQuestion`","Fragments":["has"]},{"Key":"`isQuestion` has","Fragments":["shout"]},{"Key":"has shout","Fragments":["handling."]},{"Key":"shout handling.","Fragments":["E.g."]},{"Key":"handling. E.g.","Fragments":["checking"]},{"Key":"E.g. checking","Fragments":["if"]},{"Key":"if `p","Fragments":["=="]},{"Key":"`p ==","Fragments":["\"?\"`"]},{"Key":"== \"?\"`","Fragments":["seems"]},{"Key":"\"?\"` seems","Fragments":["mostly"]},{"Key":"seems mostly","Fragments":["intended"]},{"Key":"mostly intended","Fragments":["to"]},{"Key":"to compensate","Fragments":["for"]},{"Key":"compensate for","Fragments":["`isShouting`"]},{"Key":"for `isShouting`","Fragments":["not"]},{"Key":"`isShouting` not","Fragments":["considering"]},{"Key":"not considering","Fragments":["strings"]},{"Key":"considering strings","Fragments":["without"]},{"Key":"strings without","Fragments":["letters.","intermediate"]},{"Key":"without letters.","Fragments":["Might"]},{"Key":"letters. Might","Fragments":["it"]},{"Key":"Might it","Fragments":["be"]},{"Key":"make `isShouting`","Fragments":["more"]},{"Key":"`isShouting` more","Fragments":["clever?"]},{"Key":"use String's","Fragments":["`trim`","head","tail"]},{"Key":"String's `trim`","Fragments":["instead"]},{"Key":"`trim` instead","Fragments":["of"]},{"Key":"of manually","Fragments":["replacing"]},{"Key":"manually replacing","Fragments":["spaces,"]},{"Key":"replacing spaces,","Fragments":["I"]},{"Key":"spaces, I","Fragments":["think."]},{"Key":"How come","Fragments":["you"]},{"Key":"come you","Fragments":["have"]},{"Key":"have abstractions","Fragments":["for"]},{"Key":"abstractions for","Fragments":["\"is"]},{"Key":"\"is question\"","Fragments":["and"]},{"Key":"question\" and","Fragments":["\"is"]},{"Key":"and \"is","Fragments":["shouting\""]},{"Key":"\"is shouting\"","Fragments":["but"]},{"Key":"shouting\" but","Fragments":["none"]},{"Key":"none for","Fragments":["\"is"]},{"Key":"\"is silent\"?","Fragments":["That"]},{"Key":"silent\"? That","Fragments":["would"]},{"Key":"That would","Fragments":["probably"]},{"Key":"probably aid","Fragments":["readability."]},{"Key":" Extracted","Fragments":["`Utterance`","`isValidLuhn`"]},{"Key":"Extracted `Utterance`","Fragments":["to"]},{"Key":"`Utterance` to","Fragments":["its"]},{"Key":"own class.","Fragments":["Next"]},{"Key":"class. Next","Fragments":["step:"]},{"Key":"Next step:","Fragments":["try"]},{"Key":"step: try","Fragments":["making"]},{"Key":"try making","Fragments":["it"]},{"Key":"object and","Fragments":["use","not"]},{"Key":"conversion from","Fragments":["string.","String","`String`"]},{"Key":" Had","Fragments":["to"]},{"Key":"Had to","Fragments":["write"]},{"Key":"a wrapper","Fragments":["for"]},{"Key":"wrapper for","Fragments":["forall"]},{"Key":"for forall","Fragments":["that"]},{"Key":"forall that","Fragments":["returns"]},{"Key":"returns false","Fragments":["on"]},{"Key":"false on","Fragments":["an","the"]},{"Key":"an empty","Fragments":["list,","list","word.","map","`Map`.","`Seq`"]},{"Key":"empty list,","Fragments":["I"]},{"Key":"list, I","Fragments":["feel"]},{"Key":"feel there","Fragments":["is"]},{"Key":"way but","Fragments":["I","I","wasn't"]},{"Key":"couldn't wrangle","Fragments":["either"]},{"Key":"wrangle either","Fragments":["exists"]},{"Key":"either exists","Fragments":["or"]},{"Key":"exists or","Fragments":["forall"]},{"Key":"or forall","Fragments":["to"]},{"Key":"forall to","Fragments":["work"]},{"Key":"work correctly","Fragments":["on"]},{"Key":"correctly on","Fragments":["both"]},{"Key":"both empty","Fragments":["strings"]},{"Key":"empty strings","Fragments":["and"]},{"Key":"and yell","Fragments":["strings"]},{"Key":"yell strings","Fragments":["without"]},{"Key":"without intermediate","Fragments":["variables."]},{"Key":"the classical","Fragments":["MapReduce"]},{"Key":"classical MapReduce","Fragments":["solution"]},{"Key":"MapReduce solution","Fragments":["and"]},{"Key":"actually expecting","Fragments":["Scala"]},{"Key":"expecting Scala","Fragments":["to"]},{"Key":"obvious way","Fragments":["of"]},{"Key":" something","Fragments":["like:"]},{"Key":"and scala","Fragments":["would"]},{"Key":"scala would","Fragments":["do"]},{"Key":"magic of","Fragments":["grouping","implicits"]},{"Key":"of grouping","Fragments":["values"]},{"Key":"grouping values","Fragments":["and"]},{"Key":"and giving","Fragments":["them"]},{"Key":"to reducer","Fragments":["by"]},{"Key":"reducer by","Fragments":["itself...."]},{"Key":" groupBy(identity)","Fragments":["was"]},{"Key":"groupBy(identity) was","Fragments":["not"]},{"Key":"so obvious....and","Fragments":["the"]},{"Key":"obvious....and the","Fragments":["difference"]},{"Key":"of MAP","Fragments":["function"]},{"Key":"MAP function","Fragments":["confused"]},{"Key":"function confused","Fragments":["me..."]},{"Key":"A nitpicker","Fragments":["could"]},{"Key":"nitpicker could","Fragments":["only"]},{"Key":"could only","Fragments":["complain"]},{"Key":"about performance.","Fragments":[";-)"]},{"Key":"interesting, but","Fragments":["Scala"]},{"Key":"offer everything","Fragments":["you"]},{"Key":"need here","Fragments":["w/o"]},{"Key":"here w/o","Fragments":["doing"]},{"Key":"w/o doing","Fragments":["all"]},{"Key":"* use","Fragments":["view","built"]},{"Key":"use view","Fragments":["for"]},{"Key":"view for","Fragments":["make"]},{"Key":"for make","Fragments":["the"]},{"Key":"use built","Fragments":["in"]},{"Key":"in method","Fragments":["(zip","called","signatures"]},{"Key":"method (zip","Fragments":["\u0026"]},{"Key":"(zip \u0026","Fragments":["count)"]},{"Key":"\u0026 count)","Fragments":["instead"]},{"Key":"count) instead","Fragments":["doing"]},{"Key":"instead doing","Fragments":["it"]},{"Key":"I meant","Fragments":["\"Functional","to","that","in"]},{"Key":"meant \"Functional","Fragments":["Programming\""]},{"Key":"Programming\" style.","Fragments":[":-)"]},{"Key":"No vars,","Fragments":["no"]},{"Key":"vars, no","Fragments":["reassignments,"]},{"Key":"no reassignments,","Fragments":["no"]},{"Key":"reassignments, no","Fragments":["mutable"]},{"Key":"no mutable","Fragments":["objects,"]},{"Key":"mutable objects,","Fragments":["no"]},{"Key":"objects, no","Fragments":["exceptions"]},{"Key":"no exceptions","Fragments":["..."]},{"Key":"Hmm, what","Fragments":["exactly"]},{"Key":"by saying","Fragments":["\"other"]},{"Key":"saying \"other","Fragments":["side-effects\"?"]},{"Key":"is ```require```","Fragments":["in","in"]},{"Key":"```require``` in","Fragments":["Predef","Predef"]},{"Key":"any vars","Fragments":["and"]},{"Key":"vars and","Fragments":["other"]},{"Key":"other side-effects?","Fragments":["(also"]},{"Key":"side-effects? (also","Fragments":["w/o"]},{"Key":"(also w/o","Fragments":["any"]},{"Key":"any explicit","Fragments":["iteration","specifications?"]},{"Key":"explicit iteration","Fragments":["over","over"]},{"Key":"iteration over","Fragments":["collections?).","collections","the"]},{"Key":" Suggestion:","Fragments":["Try"]},{"Key":"Suggestion: Try","Fragments":["another"]},{"Key":"Try another","Fragments":["solution"]},{"Key":"Version using","Fragments":["a"]},{"Key":"a regex,","Fragments":["the"]},{"Key":"regex, the","Fragments":["regex"]},{"Key":"little complicated","Fragments":["looking."]},{"Key":"complicated looking.","Fragments":["Any"]},{"Key":"looking. Any","Fragments":["suggestions"]},{"Key":"Any suggestions","Fragments":["on","are"]},{"Key":"suggestions on","Fragments":["simplifying"]},{"Key":"on simplifying","Fragments":["it?"]},{"Key":" Pls,","Fragments":["don't"]},{"Key":"Pls, don't","Fragments":["overuse"]},{"Key":"don't overuse","Fragments":["```unapply```!"]},{"Key":"overuse ```unapply```!","Fragments":[":-)"]},{"Key":"use ```count\"","Fragments":["instead"]},{"Key":"```count\" instead","Fragments":["of"]},{"Key":"of ```filter","Fragments":["..."]},{"Key":"```filter ...","Fragments":["size```."]},{"Key":"This ```foldLeft```","Fragments":["in"]},{"Key":"```foldLeft``` in","Fragments":["case"]},{"Key":"space char","Fragments":["looks"]},{"Key":"char looks","Fragments":["really"]},{"Key":"really strange.","Fragments":[":-)"]},{"Key":"strange. :-)","Fragments":["(what"]},{"Key":":-) (what","Fragments":["is"]},{"Key":"(what is","Fragments":["then"]},{"Key":"first ```case```","Fragments":["for"]},{"Key":"```case``` for","Fragments":["if"]},{"Key":"for if","Fragments":["you"]},{"Key":"function only","Fragments":["w/"]},{"Key":"only w/","Fragments":["a"]},{"Key":"space char?)","Fragments":["Can"]},{"Key":"char?) Can","Fragments":["you"]},{"Key":"that w/o","Fragments":["the"]},{"Key":"the space","Fragments":["char?"]},{"Key":"```Any``` as","Fragments":["return"]},{"Key":"that: good!","Fragments":[":-)"]},{"Key":" number.take(3)","Fragments":["//","seems"]},{"Key":"number.take(3) //","Fragments":["for"]},{"Key":"// for","Fragments":["first","last"]},{"Key":"for first","Fragments":["3"]},{"Key":" number.takeRight(4)","Fragments":["//"]},{"Key":"number.takeRight(4) //","Fragments":["for"]},{"Key":"for last","Fragments":["4"]},{"Key":"did essentially","Fragments":["the"]},{"Key":"essentially the","Fragments":["same"]},{"Key":"same algorithm","Fragments":["as"]},{"Key":"but yours","Fragments":["is"]},{"Key":"yours is","Fragments":["much"]},{"Key":" Would't","Fragments":["Scala"]},{"Key":"Would't Scala","Fragments":["optimize"]},{"Key":"Scala optimize","Fragments":["this"]},{"Key":"optimize this","Fragments":["function"]},{"Key":"into tail","Fragments":["recursion"]},{"Key":"recursion without","Fragments":["any"]},{"Key":"without any","Fragments":["explicit","synchronization."]},{"Key":"explicit specifications?","Fragments":["Seems"]},{"Key":"specifications? Seems","Fragments":["to"]},{"Key":"Seems to","Fragments":["be"]},{"Key":"pretty trivial","Fragments":["compiler"]},{"Key":"trivial compiler","Fragments":["job."]},{"Key":"One really","Fragments":["unlucky"]},{"Key":"really unlucky","Fragments":["can"]},{"Key":"unlucky can","Fragments":["hit"]},{"Key":"can hit","Fragments":["stack"]},{"Key":"hit stack","Fragments":["overflow."]},{"Key":"with @jett.annotation.tailrec","Fragments":["and"]},{"Key":"@jett.annotation.tailrec and","Fragments":["will"]},{"Key":"will blame","Fragments":["you"]},{"Key":"blame you","Fragments":["if"]},{"Key":"you if","Fragments":["it"]},{"Key":"it cannot.","Fragments":["So"]},{"Key":"cannot. So","Fragments":["far"]},{"Key":"So far","Fragments":["I"]},{"Key":"far I","Fragments":["found"]},{"Key":"found Stream[_]","Fragments":["as"]},{"Key":"Stream[_] as","Fragments":["the"]},{"Key":"most useful","Fragments":["tool"]},{"Key":"useful tool","Fragments":["for"]},{"Key":"for lazy","Fragments":["and"]},{"Key":"lazy and","Fragments":["recursive"]},{"Key":"and recursive","Fragments":["evaluations."]},{"Key":"It bothers","Fragments":["me"]},{"Key":"the _1","Fragments":["and"]},{"Key":"_1 and","Fragments":["_2"]},{"Key":"and _2","Fragments":["tuple"]},{"Key":"_2 tuple","Fragments":["accessors."]},{"Key":"tuple accessors.","Fragments":["I"]},{"Key":"accessors. I","Fragments":["wish"]},{"Key":"I wish","Fragments":["there"]},{"Key":"wish there","Fragments":["was"]},{"Key":"tuple contents","Fragments":["to"]},{"Key":"contents to","Fragments":["variables,"]},{"Key":"to variables,","Fragments":["a"]},{"Key":"variables, a","Fragments":["la"]},{"Key":"a la","Fragments":["elixir."]},{"Key":"1. Learned","Fragments":["about","that"]},{"Key":"Learned about","Fragments":["`require`","the"]},{"Key":"Learned that","Fragments":["`count`"]},{"Key":"that `count`","Fragments":["exists","meant"]},{"Key":"in count","Fragments":["function"]},{"Key":"of try","Fragments":["-"]},{"Key":"- catch","Fragments":["block"]},{"Key":"catch block","Fragments":["you"]},{"Key":"block you","Fragments":["can","could"]},{"Key":"also there","Fragments":["is"]},{"Key":"use replace","Fragments":["in"]},{"Key":"replace in","Fragments":["requirement"]},{"Key":"in requirement","Fragments":["checking."]},{"Key":"requirement checking.","Fragments":["You"]},{"Key":"checking. You","Fragments":["can"]},{"Key":"can discard","Fragments":["it"]},{"Key":"discard it","Fragments":["by"]},{"Key":"it by","Fragments":["using"]},{"Key":"using require","Fragments":["function"]},{"Key":"function or","Fragments":["getOrElse"]},{"Key":"of nucleotideCounts.apply(nucleotide)","Fragments":["just"]},{"Key":"nucleotideCounts.apply(nucleotide) just","Fragments":["say"]},{"Key":"say nucleotideCounts(nucleotide).","Fragments":["In"]},{"Key":"nucleotideCounts(nucleotide). In","Fragments":["Scala"]},{"Key":" Constants","Fragments":["like"]},{"Key":"Constants like","Fragments":["your"]},{"Key":"your initial","Fragments":["Map"]},{"Key":"initial Map","Fragments":["w/"]},{"Key":"Map w/","Fragments":["0's"]},{"Key":"w/ 0's","Fragments":["better"]},{"Key":"0's better","Fragments":["reside"]},{"Key":"better reside","Fragments":["in"]},{"Key":"reside in","Fragments":["the","some"]},{"Key":"for readability:","Fragments":["Consider"]},{"Key":"readability: Consider","Fragments":["defining"]},{"Key":"Consider defining","Fragments":["small"]},{"Key":"defining small","Fragments":["private"]},{"Key":"small private","Fragments":["helper","functions","predicate","functions"]},{"Key":"functions and/or","Fragments":["vals"]},{"Key":"and/or vals","Fragments":["w/"]},{"Key":"vals w/","Fragments":["a"]},{"Key":"good explanatory","Fragments":["name."]},{"Key":"one felt","Fragments":["a"]},{"Key":"felt a","Fragments":["little"]},{"Key":"little awkward","Fragments":["for"]},{"Key":"awkward for","Fragments":["me."]},{"Key":"me. It","Fragments":["wasn't","may"]},{"Key":"It wasn't","Fragments":["clear"]},{"Key":"wasn't clear","Fragments":["why"]},{"Key":"clear why","Fragments":["the"]},{"Key":"specification wanted","Fragments":["both"]},{"Key":"wanted both","Fragments":["nucleotideCounts"]},{"Key":"both nucleotideCounts","Fragments":["*and*"]},{"Key":"nucleotideCounts *and*","Fragments":["count,"]},{"Key":"*and* count,","Fragments":["except"]},{"Key":"count, except","Fragments":["for"]},{"Key":"that necessitates","Fragments":["this"]},{"Key":"necessitates this","Fragments":["obtuse"]},{"Key":"this obtuse","Fragments":["exception"]},{"Key":"obtuse exception","Fragments":["conversion."]},{"Key":"regex version","Fragments":[":)"]},{"Key":"out what's","Fragments":["going"]},{"Key":"what's going","Fragments":["on.","on.","on","on!","on."]},{"Key":"going on.","Fragments":["Do"]},{"Key":"on. Do","Fragments":["you"]},{"Key":" Learned","Fragments":["about"]},{"Key":"`getOrElse` method.","Fragments":["`grade(g:Int)`"]},{"Key":"method. `grade(g:Int)`","Fragments":["is"]},{"Key":"`grade(g:Int)` is","Fragments":["now"]},{"Key":"now slightly","Fragments":["less"]},{"Key":"verbose and","Fragments":["imho"]},{"Key":"and imho","Fragments":["still"]},{"Key":"imho still","Fragments":["conveys"]},{"Key":"still conveys","Fragments":["that"]},{"Key":"conveys that","Fragments":["we"]},{"Key":"want an","Fragments":["empty","extra"]},{"Key":"empty list","Fragments":["if"]},{"Key":"list if","Fragments":["grade"]},{"Key":"if grade","Fragments":["is"]},{"Key":"grade is","Fragments":["not"]},{"Key":"not yet","Fragments":["in"]},{"Key":"yet in","Fragments":["the"]},{"Key":"nitpick, why","Fragments":["use"]},{"Key":"why use","Fragments":["braces?","```sortWith```?"]},{"Key":"use braces?","Fragments":["None"]},{"Key":"braces? None","Fragments":["of"]},{"Key":"None of","Fragments":["the","my"]},{"Key":"methods needs","Fragments":["them,"]},{"Key":"needs them,","Fragments":["and"]},{"Key":"them, and","Fragments":["the","then"]},{"Key":"the `isQuestion`","Fragments":["and"]},{"Key":"`isQuestion` and","Fragments":["`isSilent`"]},{"Key":"and `isSilent`","Fragments":["methods"]},{"Key":"`isSilent` methods","Fragments":["could"]},{"Key":"methods could","Fragments":["easily"]},{"Key":"could easily","Fragments":["be"]},{"Key":" Been","Fragments":["absent"]},{"Key":"Been absent","Fragments":["from"]},{"Key":"absent from","Fragments":["exercism.io"]},{"Key":"from exercism.io","Fragments":["for"]},{"Key":"exercism.io for","Fragments":["ages,"]},{"Key":"for ages,","Fragments":["but"]},{"Key":"ages, but","Fragments":["thanks"]},{"Key":"but thanks","Fragments":["for"]},{"Key":"the comment.","Fragments":["Braces","I"]},{"Key":"comment. Braces","Fragments":["are"]},{"Key":"Braces are","Fragments":["probably"]},{"Key":"probably because","Fragments":["I'm"]},{"Key":"I'm primarily","Fragments":["a"]},{"Key":"primarily a","Fragments":["Java"]},{"Key":"Java dev","Fragments":["and"]},{"Key":"dev and","Fragments":["so"]},{"Key":"so it's","Fragments":["a","not"]},{"Key":"a hangup","Fragments":["from"]},{"Key":"hangup from","Fragments":["that."]},{"Key":" Picking","Fragments":["up"]},{"Key":"Picking up","Fragments":["a"]},{"Key":"up a","Fragments":["bit","couple","little","bit"]},{"Key":"from where","Fragments":["I"]},{"Key":"I left","Fragments":["off","in."]},{"Key":"left off","Fragments":["with"]},{"Key":"off with","Fragments":["Scala,"]},{"Key":"with Scala,","Fragments":["so"]},{"Key":"try and","Fragments":["make"]},{"Key":"some backwards","Fragments":["corrections"]},{"Key":"backwards corrections","Fragments":["too."]},{"Key":" @elisha","Fragments":["thanks"]},{"Key":"@elisha thanks","Fragments":["for"]},{"Key":"for pointing","Fragments":["out","it"]},{"Key":"pointing out","Fragments":["that"]},{"Key":"that `if`","Fragments":["has"]},{"Key":"`if` has","Fragments":["a"]},{"Key":" @elisha-isaacs,","Fragments":["thanks"]},{"Key":"@elisha-isaacs, thanks","Fragments":["for"]},{"Key":"that not","Fragments":["everything"]},{"Key":"not everything","Fragments":["needs","needs"]},{"Key":"everything needs","Fragments":["to","to"]},{"Key":"be pattern","Fragments":["matched,","matching."]},{"Key":"pattern matched,","Fragments":["but"]},{"Key":"matched, but","Fragments":["I"]},{"Key":"did use","Fragments":["pattern"]},{"Key":"matching. An","Fragments":["example"]},{"Key":"An example","Fragments":["would"]},{"Key":"val YellingPattern","Fragments":["="]},{"Key":"YellingPattern =","Fragments":["\"\"\"[^a-z]*([A-Z]{2,})+[^a-z]*\"\"\".r"]},{"Key":" str","Fragments":["match"]},{"Key":"str match","Fragments":["{"]},{"Key":"case YellingPattern(_)","Fragments":["=\u003e"]},{"Key":"YellingPattern(_) =\u003e","Fragments":["\"Woah,"]},{"Key":"=\u003e \"Woah,","Fragments":["chill"]},{"Key":"to note","Fragments":["is"]},{"Key":"note is","Fragments":["the"]},{"Key":"matching group","Fragments":["in"]},{"Key":"group in","Fragments":["the"]},{"Key":"regex (located","Fragments":["between"]},{"Key":"(located between","Fragments":["the"]},{"Key":"parentheses ```([A-Z]{2,})```).","Fragments":["I"]},{"Key":"```([A-Z]{2,})```). I","Fragments":["am"]},{"Key":"most experience","Fragments":["matcher"]},{"Key":"experience matcher","Fragments":["of"]},{"Key":"matcher of","Fragments":["patterns,"]},{"Key":"of patterns,","Fragments":["but"]},{"Key":"patterns, but","Fragments":["I"]},{"Key":"believe a","Fragments":["regex"]},{"Key":"regex must","Fragments":["contain"]},{"Key":"must contain","Fragments":["a"]},{"Key":"contain a","Fragments":["match","map"]},{"Key":"a match","Fragments":["group","on","candidate."]},{"Key":"match group","Fragments":["to"]},{"Key":"group to","Fragments":["work"]},{"Key":"matching. That","Fragments":["could"]},{"Key":"That could","Fragments":["however,"]},{"Key":"could however,","Fragments":["be"]},{"Key":"however, be","Fragments":["a"]},{"Key":"a crock","Fragments":["of"]},{"Key":"crock of","Fragments":["shit,"]},{"Key":"of shit,","Fragments":["and"]},{"Key":"shit, and","Fragments":["simply"]},{"Key":"simply my","Fragments":["own"]},{"Key":"own personal","Fragments":["experience"]},{"Key":"personal experience","Fragments":["debugging."]},{"Key":"If statements","Fragments":["are"]},{"Key":"just fine","Fragments":["in"]},{"Key":"fine in","Fragments":["Scala","this"]},{"Key":"- not","Fragments":["everything"]},{"Key":"Don't use","Fragments":["the"]},{"Key":"return keyword","Fragments":["in"]},{"Key":"keyword in","Fragments":["Scala."]},{"Key":"Scala. The","Fragments":["return"]},{"Key":"last statement","Fragments":["of","in"]},{"Key":"statement of","Fragments":["the","a"]},{"Key":"function will","Fragments":["be"]},{"Key":"value for","Fragments":["that","key","the"]},{"Key":" Unlike","Fragments":["most"]},{"Key":"Unlike most","Fragments":["other"]},{"Key":"most other","Fragments":["languages"]},{"Key":"languages your","Fragments":["if"]},{"Key":"a statement","Fragments":["and"]},{"Key":"and has","Fragments":["a","the"]},{"Key":"This whole","Fragments":["thing"]},{"Key":"thing can","Fragments":["be"]},{"Key":"be compacted","Fragments":["to:"]},{"Key":"if (message.trim.isEmpty)","Fragments":["{"]},{"Key":" \"Fine.","Fragments":["Be"]},{"Key":"if (message.toUpperCase","Fragments":["=="]},{"Key":"(message.toUpperCase ==","Fragments":["message"]},{"Key":"== message","Fragments":["\u0026\u0026"]},{"Key":"message \u0026\u0026","Fragments":["\"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length"]},{"Key":"\u0026\u0026 \"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length","Fragments":["\u003e"]},{"Key":"\"\"\"[a-zA-Z]+\"\"\".r.findAllIn(message).length \u003e","Fragments":["0"]},{"Key":"0 )","Fragments":["{"]},{"Key":" \"Woah,","Fragments":["chill"]},{"Key":"if (message.endsWith(\"?\"))","Fragments":["{"]},{"Key":"I solved","Fragments":["it"]},{"Key":"solved it","Fragments":["the"]},{"Key":"it the","Fragments":["\"old-school\"","Scala","long","way"]},{"Key":"the \"old-school\"","Fragments":["way"]},{"Key":"\"old-school\" way","Fragments":["but"]},{"Key":"this can","Fragments":["be","sometimes","in"]},{"Key":" `foldLeft`","Fragments":["instead"]},{"Key":"of `foreach`.","Fragments":["`(result,"]},{"Key":"`foreach`. `(result,","Fragments":["value)`"]},{"Key":"`(result, value)`","Fragments":["pair"]},{"Key":"value)` pair","Fragments":["would"]},{"Key":"pair would","Fragments":["be"]},{"Key":"the accumulator.","Fragments":["Instead"]},{"Key":"accumulator. Instead","Fragments":["of"]},{"Key":"of while","Fragments":["loop,"]},{"Key":"while loop,","Fragments":["you"]},{"Key":"loop, you","Fragments":["can"]},{"Key":"just divide","Fragments":["the"]},{"Key":"divide the","Fragments":["`value`"]},{"Key":"the `value`","Fragments":["to"]},{"Key":"`value` to","Fragments":["`decimal`"]},{"Key":"to `decimal`","Fragments":["and"]},{"Key":"`decimal` and","Fragments":["add"]},{"Key":"add that","Fragments":["many"]},{"Key":"that many","Fragments":["`roman`","vals"]},{"Key":"many `roman`","Fragments":["to"]},{"Key":"`roman` to","Fragments":["`result`,"]},{"Key":"to `result`,","Fragments":["and"]},{"Key":"`result`, and","Fragments":["use"]},{"Key":"use remainder","Fragments":["as"]},{"Key":"remainder as","Fragments":["the"]},{"Key":"next `value`.","Fragments":["That's"]},{"Key":"`value`. That's","Fragments":["how"]},{"Key":"That's how","Fragments":["I"]},{"Key":"How can","Fragments":["this","you"]},{"Key":"implemented without","Fragments":["vars?"]},{"Key":"write your","Fragments":["response"]},{"Key":"variable if","Fragments":["you"]},{"Key":"do nothing","Fragments":["but"]},{"Key":"nothing but","Fragments":["returning"]},{"Key":"but returning","Fragments":["it."]},{"Key":"returning it.","Fragments":["Just"]},{"Key":"it. Just","Fragments":["throw"]},{"Key":"Just throw","Fragments":["away"]},{"Key":"throw away","Fragments":["the","the"]},{"Key":"away the","Fragments":["`response`","extra"]},{"Key":"the `response`","Fragments":["variable."]},{"Key":" Sorting","Fragments":["the"]},{"Key":"Sorting the","Fragments":["letters"]},{"Key":"the letters","Fragments":["is","and","of"]},{"Key":"letters is","Fragments":["simpler","only"]},{"Key":"simpler than","Fragments":["counting","the"]},{"Key":"than counting","Fragments":["the","them"]},{"Key":"letters, which","Fragments":["is"]},{"Key":"I did.","Fragments":["Good"]},{"Key":"did. Good","Fragments":["job!"]},{"Key":"the collision","Fragments":["detection"]},{"Key":"collision detection","Fragments":["logic"]},{"Key":"detection logic","Fragments":["into"]},{"Key":"object as","Fragments":["in","in"]},{"Key":"the present","Fragments":["state,"]},{"Key":"present state,","Fragments":["there"]},{"Key":"state, there","Fragments":["will"]},{"Key":"there will","Fragments":["be"]},{"Key":"a `usedNames`","Fragments":["set"]},{"Key":"`usedNames` set","Fragments":["per"]},{"Key":"set per","Fragments":["each"]},{"Key":"per each","Fragments":["robot,"]},{"Key":"each robot,","Fragments":["which"]},{"Key":"robot, which","Fragments":["is"]},{"Key":"not what","Fragments":["you"]},{"Key":"create at","Fragments":["least"]},{"Key":"least an","Fragments":["illusion","order"]},{"Key":"an illusion","Fragments":["of"]},{"Key":"illusion of","Fragments":["randomness,"]},{"Key":"of randomness,","Fragments":["so"]},{"Key":"randomness, so","Fragments":["that"]},{"Key":"that gives","Fragments":["line"]},{"Key":"gives line","Fragments":["12."]},{"Key":"line 12.","Fragments":["The"]},{"Key":"12. The","Fragments":["names"]},{"Key":"The names","Fragments":["should"]},{"Key":"improve your","Fragments":["solution"]},{"Key":"solution by","Fragments":["noting","splitting","\"zipping\""]},{"Key":"by noting","Fragments":["that"]},{"Key":"the powers","Fragments":["of"]},{"Key":"2 up","Fragments":["to"]},{"Key":"to n","Fragments":["equals"]},{"Key":"n equals","Fragments":["2^(n+1)"]},{"Key":"equals 2^(n+1)","Fragments":["-"]},{"Key":"2^(n+1) -","Fragments":["1."]},{"Key":"My previous","Fragments":["version"]},{"Key":"version defined","Fragments":["`total`"]},{"Key":"defined `total`","Fragments":["as"]},{"Key":"`total` as","Fragments":["a"]},{"Key":"a function.","Fragments":["However,"]},{"Key":"function. However,","Fragments":["that"]},{"Key":"However, that","Fragments":["meant"]},{"Key":"that meant","Fragments":["that"]},{"Key":"meant that","Fragments":["if","the"]},{"Key":"total was","Fragments":["requested"]},{"Key":"was requested","Fragments":["more"]},{"Key":"requested more","Fragments":["than"]},{"Key":"than once,","Fragments":["it"]},{"Key":"once, it","Fragments":["would"]},{"Key":"be re-calculated","Fragments":["each"]},{"Key":"re-calculated each","Fragments":["time"]},{"Key":"time it","Fragments":["was","is"]},{"Key":"was requested.","Fragments":["This"]},{"Key":"requested. This","Fragments":["version"]},{"Key":"version only","Fragments":["calculates"]},{"Key":"only calculates","Fragments":["it"]},{"Key":"calculates it","Fragments":["when"]},{"Key":"when needed,","Fragments":["and"]},{"Key":"needed, and","Fragments":["only"]},{"Key":"only once.","Fragments":["This","Furthermore","However,"]},{"Key":"once. This","Fragments":["is"]},{"Key":"done through","Fragments":["the"]},{"Key":"good. Though,","Fragments":["my"]},{"Key":"Though, my","Fragments":["personal"]},{"Key":"my personal","Fragments":["preference","taste,"]},{"Key":"preference would","Fragments":["be"]},{"Key":"to collapse","Fragments":["the"]},{"Key":"collapse the","Fragments":["isLeap"]},{"Key":"the isLeap","Fragments":["to"]},{"Key":"isLeap to","Fragments":["boolean"]},{"Key":"def isLeap:","Fragments":["Boolean"]},{"Key":"isLeap: Boolean","Fragments":["="]},{"Key":"Boolean =","Fragments":["by(100)","{","yr"]},{"Key":"= by(100)","Fragments":["\u0026\u0026"]},{"Key":"by(100) \u0026\u0026","Fragments":["by(400)"]},{"Key":"\u0026\u0026 by(400)","Fragments":["...."]},{"Key":"by(400) ....","Fragments":["etc"]},{"Key":"It's a","Fragments":["pity","nice","good"]},{"Key":"a pity","Fragments":["you"]},{"Key":"pity you","Fragments":["can't"]},{"Key":"can't init","Fragments":["then"]},{"Key":"init then","Fragments":["the"]},{"Key":"list with","Fragments":["the","the"]},{"Key":"the defined","Fragments":["type"]},{"Key":"defined type","Fragments":["-"]},{"Key":"type -","Fragments":["like:"]},{"Key":" type","Fragments":["StudentList"]},{"Key":"type StudentList","Fragments":["="]},{"Key":"StudentList =","Fragments":["List[StudentName]"]},{"Key":"val studentList","Fragments":["="]},{"Key":"studentList =","Fragments":["StudentList"]},{"Key":"= StudentList","Fragments":["()"]},{"Key":"regarding last","Fragments":["point"]},{"Key":"last point","Fragments":["-"]},{"Key":"- that's","Fragments":["what"]},{"Key":"what confused","Fragments":["me"]},{"Key":"confused me","Fragments":["-"]},{"Key":"me -","Fragments":["I"]},{"Key":"saw Seq","Fragments":["is"]},{"Key":"Seq is","Fragments":["immutable"]},{"Key":"is immutable","Fragments":["and"]},{"Key":"and though","Fragments":["why"]},{"Key":"though why","Fragments":["would"]},{"Key":"why would","Fragments":["I"]},{"Key":"the conversions","Fragments":["all"]},{"Key":"conversions all","Fragments":["the"]},{"Key":" fixing","Fragments":["the"]},{"Key":"fixing the","Fragments":["rest!"]},{"Key":"the rest!","Fragments":[":)"]},{"Key":"rest! :)","Fragments":["THanks!"]},{"Key":"Not bad","Fragments":["-"]},{"Key":"bad -","Fragments":["pretty","you"]},{"Key":"- pretty","Fragments":["good"]},{"Key":"pretty good","Fragments":["actually!"]},{"Key":"good actually!","Fragments":["But"]},{"Key":"actually! But","Fragments":["you"]},{"Key":"have room","Fragments":["for"]},{"Key":"for improvements,","Fragments":["of"]},{"Key":"improvements, of","Fragments":["course:"]},{"Key":"of course:","Fragments":[":-)"]},{"Key":"readability (and","Fragments":["less","be"]},{"Key":"(and less","Fragments":["typing)"]},{"Key":"less typing)","Fragments":["you"]},{"Key":"typing) you","Fragments":["could"]},{"Key":"could consequently","Fragments":["introduce"]},{"Key":"consequently introduce","Fragments":["types"]},{"Key":"introduce types","Fragments":["for"]},{"Key":"everything, also","Fragments":["for"]},{"Key":"for List[StudentName]","Fragments":["and"]},{"Key":"List[StudentName] and","Fragments":["the"]},{"Key":"- existingStudents","Fragments":["actually"]},{"Key":"existingStudents actually","Fragments":["holds"]},{"Key":"actually holds","Fragments":["the"]},{"Key":"holds the","Fragments":["new"]},{"Key":"new students.","Fragments":["so"]},{"Key":"students. so","Fragments":["why"]},{"Key":"in tho","Fragments":["steps/assignments?"]},{"Key":"- db","Fragments":["as"]},{"Key":"db as","Fragments":["private?","mutable"]},{"Key":"like EmptyStudentList","Fragments":["ideally"]},{"Key":"EmptyStudentList ideally","Fragments":["should"]},{"Key":"ideally should","Fragments":["reside"]},{"Key":"should reside","Fragments":["in"]},{"Key":"some object,","Fragments":["not"]},{"Key":"object, not","Fragments":["in"]},{"Key":"a class.","Fragments":["I"]},{"Key":"suggest the","Fragments":["companion"]},{"Key":"- while","Fragments":["being"]},{"Key":"while being","Fragments":["at","very"]},{"Key":"being at","Fragments":["it"]},{"Key":"at it","Fragments":["you","again"]},{"Key":"declarations to","Fragments":["the"]},{"Key":"object. This","Fragments":["way"]},{"Key":"way some","Fragments":["client"]},{"Key":"some client","Fragments":["of"]},{"Key":"client of","Fragments":["School"]},{"Key":"of School","Fragments":["can"]},{"Key":"School can","Fragments":["just"]},{"Key":"just import","Fragments":["School._"]},{"Key":"import School._","Fragments":["and"]},{"Key":"School._ and","Fragments":["just"]},{"Key":"- personally","Fragments":["I"]},{"Key":"to remain","Fragments":["as"]},{"Key":"remain as","Fragments":["general","simple"]},{"Key":"as possible:","Fragments":["I"]},{"Key":"possible: I","Fragments":["this"]},{"Key":"I this","Fragments":["case"]},{"Key":"use Seq","Fragments":["instead"]},{"Key":"Seq instead","Fragments":["of"]},{"Key":"of List.","Fragments":["But"]},{"Key":"List. But","Fragments":["perhaps"]},{"Key":"But perhaps","Fragments":["I"]},{"Key":"perhaps I","Fragments":["might"]},{"Key":"might better","Fragments":["revise"]},{"Key":"better revise","Fragments":["this"]},{"Key":"revise this","Fragments":["habit"]},{"Key":"this habit","Fragments":["(?):","of"]},{"Key":"habit (?):","Fragments":["https://orrsella.com/2014/02/27/the-default-scala-seq-is-mutable-wait-what/"]},{"Key":"was also","Fragments":["not","submitted"]},{"Key":"just go","Fragments":["without"]},{"Key":"go without","Fragments":["```Movement```."]},{"Key":"without ```Movement```.","Fragments":["Question"]},{"Key":"```Movement```. Question","Fragments":["here"]},{"Key":"Question here","Fragments":["is"]},{"Key":"is if","Fragments":["it","the"]},{"Key":"readability or","Fragments":["more"]},{"Key":"to confusion?","Fragments":[":-)"]},{"Key":"confusion? :-)","Fragments":["I"]},{"Key":":-) I","Fragments":["was"]},{"Key":"a movement","Fragments":["is"]},{"Key":"movement is","Fragments":["conceptually"]},{"Key":"is conceptually","Fragments":["different"]},{"Key":"conceptually different","Fragments":["from"]},{"Key":"different from","Fragments":["a"]},{"Key":"a robot,","Fragments":["and"]},{"Key":"robot, and","Fragments":["I"]},{"Key":"to telegraph","Fragments":["the"]},{"Key":"telegraph the","Fragments":["semantics"]},{"Key":"the semantics","Fragments":["if"]},{"Key":"semantics if","Fragments":["I"]},{"Key":"can. Here","Fragments":["I"]},{"Key":"Here I","Fragments":["have"]},{"Key":"have mixed","Fragments":["feelings,"]},{"Key":"mixed feelings,","Fragments":["though."]},{"Key":"feelings, though.","Fragments":["Might"]},{"Key":"though. Might","Fragments":["be"]},{"Key":"important to","Fragments":["see","know"]},{"Key":"see at","Fragments":["first"]},{"Key":"first glance","Fragments":["that"]},{"Key":"glance that","Fragments":["we"]},{"Key":"a Robot","Fragments":["back."]},{"Key":"second question:","Fragments":["This"]},{"Key":"question: This","Fragments":["is"]},{"Key":"a trade-off","Fragments":["(see"]},{"Key":"trade-off (see","Fragments":["my"]},{"Key":"(see my","Fragments":["first"]},{"Key":"What speaks","Fragments":["perhaps"]},{"Key":"speaks perhaps","Fragments":["a"]},{"Key":"the actual","Fragments":["movement","use","counting.","code","tests"]},{"Key":"actual movement","Fragments":["totally"]},{"Key":"movement totally","Fragments":["depends"]},{"Key":"totally depends","Fragments":["on"]},{"Key":"the Bearing.","Fragments":["So"]},{"Key":"Bearing. So","Fragments":["OOP"]},{"Key":"So OOP","Fragments":["principles"]},{"Key":"OOP principles","Fragments":["might"]},{"Key":"principles might","Fragments":["favor"]},{"Key":"might favor","Fragments":["this"]},{"Key":"favor this","Fragments":["one?"]},{"Key":"Again, I","Fragments":["like"]},{"Key":"type your","Fragments":["things."]},{"Key":"your things.","Fragments":["(I'm"]},{"Key":"things. (I'm","Fragments":["not"]},{"Key":"(I'm not","Fragments":["sure"]},{"Key":"why `Movement`","Fragments":["is"]},{"Key":"`Movement` is","Fragments":["typed"]},{"Key":"is typed","Fragments":["as"]},{"Key":"typed as","Fragments":["`Robot`"]},{"Key":"as `Robot`","Fragments":["though.)"]},{"Key":"Also nice","Fragments":["how"]},{"Key":"nice how","Fragments":["you"]},{"Key":"you apply","Fragments":["the"]},{"Key":"apply the","Fragments":["`Instruction`s"]},{"Key":"the `Instruction`s","Fragments":["on"]},{"Key":"`Instruction`s on","Fragments":["the"]},{"Key":"Should the","Fragments":["movement","first"]},{"Key":"movement logically","Fragments":["be"]},{"Key":"logically be","Fragments":["part"]},{"Key":"of `Bearing`","Fragments":["or"]},{"Key":"`Bearing` or","Fragments":["`Robot`?"]},{"Key":" movement","Fragments":["logic"]},{"Key":"logic now","Fragments":["part"]},{"Key":"now part","Fragments":["of"]},{"Key":" refactored","Fragments":["to"]},{"Key":"readable. More","Fragments":["defensive"]},{"Key":"More defensive","Fragments":["toLowerCase"]},{"Key":"defensive toLowerCase","Fragments":["check"]},{"Key":"toLowerCase check","Fragments":["on"]},{"Key":"check on","Fragments":["word","Monday","length"]},{"Key":"sure which","Fragments":["is"]},{"Key":"clearer ,","Fragments":["the"]},{"Key":", the","Fragments":["recursive"]},{"Key":"recursive implementation","Fragments":["or","for"]},{"Key":"implementation or","Fragments":["the"]},{"Key":"the foreach","Fragments":["version"]},{"Key":"foreach version","Fragments":["(commented"]},{"Key":"version (commented","Fragments":["out)."]},{"Key":"(commented out).","Fragments":["If"]},{"Key":"If pressed,","Fragments":["I'd"]},{"Key":"pressed, I'd","Fragments":["probably"]},{"Key":"probably say","Fragments":["the"]},{"Key":"say the","Fragments":["foreach,","third"]},{"Key":"the foreach,","Fragments":["as"]},{"Key":"foreach, as","Fragments":["it"]},{"Key":"takes care","Fragments":["of","of"]},{"Key":"care of","Fragments":["the","each"]},{"Key":"the base","Fragments":["case"]},{"Key":"base case","Fragments":["check"]},{"Key":"you thanks","Fragments":["to"]},{"Key":"thanks to","Fragments":["the"]},{"Key":"the until,","Fragments":["and"]},{"Key":"until, and","Fragments":["local,"]},{"Key":"and local,","Fragments":["to"]},{"Key":"local, to","Fragments":["a"]},{"Key":"function, mutable","Fragments":["vars"]},{"Key":"mutable vars","Fragments":["are"]},{"Key":"vars are","Fragments":["fine"]},{"Key":"To implement","Fragments":["it"]},{"Key":"own w/","Fragments":["recursion"]},{"Key":"w/ recursion","Fragments":["is"]},{"Key":"recursion is","Fragments":["a"]},{"Key":"also learn","Fragments":["how"]},{"Key":"the existing","Fragments":["Scala","map."]},{"Key":"existing Scala","Fragments":["Collection"]},{"Key":"like map,","Fragments":["zip,","flatMap,","flatMap,"]},{"Key":"map, zip,","Fragments":["filter,"]},{"Key":" again,","Fragments":["don't"]},{"Key":"again, don't","Fragments":["use"]},{"Key":"just b/c","Fragments":["you"]},{"Key":"one not","Fragments":["so"]},{"Key":"so complicated","Fragments":["boolean"]},{"Key":"complicated boolean","Fragments":["expression,"]},{"Key":"boolean expression,","Fragments":["btw."]},{"Key":"your attempt","Fragments":["to"]},{"Key":"attempt to","Fragments":["use","improve","have"]},{"Key":"constants for","Fragments":["readability.","stuff"]},{"Key":"for if-checks","Fragments":["you"]},{"Key":"if-checks you","Fragments":["may"]},{"Key":" ```StartOfTheMonth```","Fragments":["is"]},{"Key":"```StartOfTheMonth``` is","Fragments":["not"]},{"Key":"constant and","Fragments":["should","belongs","could"]},{"Key":"should therefore","Fragments":["start","not"]},{"Key":"therefore start","Fragments":["w/"]},{"Key":"start w/","Fragments":["a","an"]},{"Key":"a lower","Fragments":["case"]},{"Key":"case letter.","Fragments":["It","Which"]},{"Key":"letter. It","Fragments":["seems"]},{"Key":"seems also","Fragments":["to"]},{"Key":"also to","Fragments":["be","explore","use","define"]},{"Key":"a misnomer","Fragments":["to"]},{"Key":"misnomer to","Fragments":["me"]},{"Key":"me as","Fragments":["you","if","an"]},{"Key":"you modify","Fragments":["it"]},{"Key":"whole logic","Fragments":["is"]},{"Key":"bit over-complicated","Fragments":["(don't"]},{"Key":"over-complicated (don't","Fragments":["want"]},{"Key":"(don't want","Fragments":["to"]},{"Key":"to dive","Fragments":["into"]},{"Key":"dive into","Fragments":["calendar"]},{"Key":"into calendar","Fragments":["arithmetic)."]},{"Key":"calendar arithmetic).","Fragments":["Suggestion:"]},{"Key":"arithmetic). Suggestion:","Fragments":["Start"]},{"Key":"Suggestion: Start","Fragments":["somewhere"]},{"Key":"Start somewhere","Fragments":["(e.g."]},{"Key":"(e.g. start","Fragments":["of"]},{"Key":"start of","Fragments":["month),"]},{"Key":" classical","Fragments":["map/reduce"]},{"Key":"classical map/reduce","Fragments":["algorithm"]},{"Key":"map/reduce algorithm","Fragments":[":-)"]},{"Key":"w/o mapping","Fragments":["to"]},{"Key":"to 1's","Fragments":["first?"]},{"Key":"consider defining","Fragments":["a"]},{"Key":"inside ```accumulate```","Fragments":["in"]},{"Key":"```accumulate``` in","Fragments":["order"]},{"Key":"expose ```accumulator```","Fragments":["to"]},{"Key":"```accumulator``` to","Fragments":["the"]},{"Key":"* regex","Fragments":["are"]},{"Key":"regex are","Fragments":["easier"]},{"Key":"* did","Fragments":["not"]},{"Key":"use groupBy","Fragments":["for"]},{"Key":"groupBy for","Fragments":["memory"]},{"Key":"for memory","Fragments":["efficiency"]},{"Key":"Doesn't pass","Fragments":["all"]},{"Key":"Can use","Fragments":["\\w"]},{"Key":"use \\w","Fragments":["instead"]},{"Key":"\\w instead","Fragments":["of"]},{"Key":" Simple.","Fragments":["Easy"]},{"Key":"Simple. Easy","Fragments":["to"]},{"Key":"Easy to","Fragments":["read."]},{"Key":"Seems nice","Fragments":["to"]},{"Key":"nice to","Fragments":["me.","also","be"]},{"Key":" map/reduce","Fragments":["implementation"]},{"Key":"map/reduce implementation","Fragments":["by"]},{"Key":"implementation by","Fragments":["calling","removing"]},{"Key":"calling a","Fragments":["named"]},{"Key":"named function,","Fragments":["and","as"]},{"Key":"function, and","Fragments":["explicitly"]},{"Key":"and explicitly","Fragments":["stating"]},{"Key":"explicitly stating","Fragments":["the"]},{"Key":"stating the","Fragments":["type"]},{"Key":"the zip()","Fragments":["function's"]},{"Key":"zip() function's","Fragments":["resulting"]},{"Key":"function's resulting","Fragments":["tuple."]},{"Key":"change `number.replaceAll(\"\"\"[^\\d]\"\"\",","Fragments":["\"\")`"]},{"Key":"`number.replaceAll(\"\"\"[^\\d]\"\"\", \"\")`","Fragments":["for"]},{"Key":"\"\")` for","Fragments":["`number.filter(n"]},{"Key":"for `number.filter(n","Fragments":["=\u003e"]},{"Key":"`number.filter(n =\u003e","Fragments":["n.isDigit)`"]},{"Key":"=\u003e n.isDigit)`","Fragments":["and"]},{"Key":"n.isDigit)` and","Fragments":["I"]},{"Key":"With some","Fragments":["research,"]},{"Key":"some research,","Fragments":["I"]},{"Key":"research, I","Fragments":["found"]},{"Key":"found Scala's","Fragments":["version"]},{"Key":"Scala's version","Fragments":["of"]},{"Key":"of unpacking","Fragments":["a"]},{"Key":"unpacking a","Fragments":["tuple."]},{"Key":"a tuple.","Fragments":["This"]},{"Key":"tuple. This","Fragments":["works"]},{"Key":"This works","Fragments":["well"]},{"Key":"works well","Fragments":["enough,"]},{"Key":"well enough,","Fragments":["I"]},{"Key":"enough, I","Fragments":["think."]},{"Key":"solution does","Fragments":["not"]},{"Key":"for consecutive","Fragments":["identical"]},{"Key":"consecutive identical","Fragments":["letters"]},{"Key":"identical letters","Fragments":["or"]},{"Key":"letters or","Fragments":["digits","by"]},{"Key":"or digits","Fragments":["as"]},{"Key":"the ```toList```,","Fragments":["I"]},{"Key":"```toList```, I","Fragments":["guess."]},{"Key":"what might","Fragments":["be","be"]},{"Key":"be missing:","Fragments":["a"]},{"Key":"missing: a","Fragments":["check"]},{"Key":"the ```filterNot```","Fragments":["functionality"]},{"Key":"```filterNot``` functionality","Fragments":["instead"]},{"Key":"```filter``` to","Fragments":["avoid"]},{"Key":"the negation","Fragments":["inside"]},{"Key":"negation inside","Fragments":["it"]},{"Key":"inside it","Fragments":["like"]},{"Key":"lot more","Fragments":["than"]},{"Key":"my `.filterNot`","Fragments":["after"]},{"Key":"`.filterNot` after","Fragments":["the"]},{"Key":" now","Fragments":["that","added"]},{"Key":"like true","Fragments":["Scala"]},{"Key":"true Scala","Fragments":["code!"]},{"Key":"Scala code!","Fragments":[":-)"]},{"Key":" Switched","Fragments":["to"]},{"Key":"Switched to","Fragments":["use"]},{"Key":"use match-case","Fragments":["rather"]},{"Key":"match-case rather","Fragments":["than"]},{"Key":"I hava","Fragments":["a"]},{"Key":"hava a","Fragments":["question."]},{"Key":"a question.","Fragments":["Why"]},{"Key":"question. Why","Fragments":["did"]},{"Key":"`apply` function","Fragments":["in"]},{"Key":" Clarification:","Fragments":["What"]},{"Key":"Clarification: What","Fragments":["doesn't"]},{"Key":"What doesn't","Fragments":["work"]},{"Key":"is pattern","Fragments":["matching"]},{"Key":"matching against","Fragments":["anonymous","_","an"]},{"Key":"against anonymous","Fragments":["functions..."]},{"Key":"anonymous functions...","Fragments":["Wondering"]},{"Key":"functions... Wondering","Fragments":["if"]},{"Key":"special syntax","Fragments":["for"]},{"Key":"it or","Fragments":["another"]},{"Key":"or another","Fragments":["way"]},{"Key":"thing or","Fragments":["something"]},{"Key":"really hoping","Fragments":["to"]},{"Key":"something *like*","Fragments":["this"]},{"Key":"*like* this","Fragments":["but"]},{"Key":" First,","Fragments":["I"]},{"Key":"First, I","Fragments":["suppose"]},{"Key":"I suppose","Fragments":["rather","it"]},{"Key":"suppose rather","Fragments":["ugly,"]},{"Key":"rather ugly,","Fragments":["version"]},{"Key":" Decided","Fragments":["against"]},{"Key":"Decided against","Fragments":["a"]},{"Key":"a `match`","Fragments":["structure","expression"]},{"Key":"`match` structure","Fragments":["since"]},{"Key":"structure since","Fragments":["Scala"]},{"Key":"since Scala","Fragments":["doesn't"]},{"Key":"doesn't permit","Fragments":["function"]},{"Key":"permit function","Fragments":["calls"]},{"Key":"the `case`","Fragments":["statement."]},{"Key":"Used the","Fragments":["more"]},{"Key":"more succinct","Fragments":["`mssg.exists(_.isUpper)`","solution"]},{"Key":"succinct `mssg.exists(_.isUpper)`","Fragments":["to"]},{"Key":"`mssg.exists(_.isUpper)` to","Fragments":["check"]},{"Key":"for letters","Fragments":["rather"]},{"Key":"letters rather","Fragments":["than"]},{"Key":"regex. Took","Fragments":["advantage"]},{"Key":"Took advantage","Fragments":["of"]},{"Key":"of lexical","Fragments":["scoping"]},{"Key":"lexical scoping","Fragments":["and"]},{"Key":"scoping and","Fragments":["implicit"]},{"Key":"and implicit","Fragments":["return","returns,"]},{"Key":"return to","Fragments":["trim","it"]},{"Key":"code somewhat","Fragments":["from"]},{"Key":"somewhat from","Fragments":["the"]},{"Key":" @ally","Fragments":["You're"]},{"Key":"@ally You're","Fragments":["right!"]},{"Key":"You're right!","Fragments":["I"]},{"Key":"forgot ```name_assigned","Fragments":["="]},{"Key":"```name_assigned =","Fragments":["name_assigned"]},{"Key":"= name_assigned","Fragments":["+"]},{"Key":"name_assigned +","Fragments":["name```"]},{"Key":"+ name```","Fragments":["in"]},{"Key":"name``` in","Fragments":["the"]},{"Key":"last ```else```","Fragments":["branch."]},{"Key":" Let","Fragments":["me"]},{"Key":" name_assigned","Fragments":["(why"]},{"Key":"name_assigned (why","Fragments":["the"]},{"Key":"(why the","Fragments":["underscore"]},{"Key":"underscore notation,","Fragments":["btw?)"]},{"Key":"notation, btw?)","Fragments":["will"]},{"Key":"btw?) will","Fragments":["always"]},{"Key":"in functional","Fragments":["programming","programming","languages,","programming"]},{"Key":"functional programming","Fragments":["style","the","style."]},{"Key":"programming style","Fragments":["w/o"]},{"Key":"w/o this","Fragments":["var"]},{"Key":"this var","Fragments":["\"name\"?","```randomAsciiCodes```"]},{"Key":"var \"name\"?","Fragments":["(no"]},{"Key":"\"name\"? (no","Fragments":["reassignments)."]},{"Key":" Please","Fragments":["don't","do","let"]},{"Key":"Please don't","Fragments":["use","hold"]},{"Key":"use ```implicits```","Fragments":["just"]},{"Key":"```implicits``` just","Fragments":["because"]},{"Key":"What advantage","Fragments":["does"]},{"Key":"advantage does","Fragments":["this"]},{"Key":"version have","Fragments":["over"]},{"Key":"have over","Fragments":["the"]},{"Key":"first one","Fragments":["other"]},{"Key":"one other","Fragments":["than"]},{"Key":"than giving","Fragments":["a"]},{"Key":"giving a","Fragments":["reader"]},{"Key":"reader more","Fragments":["headache?"]},{"Key":" SI","Fragments":["ME"]},{"Key":"SI ME","Fragments":["RIDE"]},{"Key":"ME RIDE","Fragments":["MY"]},{"Key":"RIDE MY","Fragments":["TINY"]},{"Key":"MY TINY","Fragments":["BICICLETTA"]},{"Key":"TINY BICICLETTA","Fragments":["TO"]},{"Key":"BICICLETTA TO","Fragments":["SCHOOL."]},{"Key":"It just","Fragments":["wanted","look"]},{"Key":"test it.","Fragments":["It"]},{"Key":"just look","Fragments":["so"]},{"Key":"look so","Fragments":["much","much"]},{"Key":"constructor arg","Fragments":["as"]},{"Key":"arg as","Fragments":["a"]},{"Key":"val as","Fragments":["in"]},{"Key":" ```class","Fragments":["SpaceAge(val"]},{"Key":"```class SpaceAge(val","Fragments":["seconds:"]},{"Key":"SpaceAge(val seconds:","Fragments":["Long)"]},{"Key":"seconds: Long)","Fragments":["{```"]},{"Key":" then","Fragments":["it","for","maybe"]},{"Key":"be accessed","Fragments":["from"]},{"Key":"accessed from","Fragments":["outside."]},{"Key":"consider declaring","Fragments":["it"]},{"Key":"declaring it","Fragments":["as"]},{"Key":"as ```implicit```","Fragments":["and"]},{"Key":"```implicit``` and","Fragments":["then","```.par```!"]},{"Key":"then having","Fragments":["it"]},{"Key":"as implicit","Fragments":["arg"]},{"Key":"implicit arg","Fragments":["to"]},{"Key":"arg to","Fragments":["```calculateYears```."]},{"Key":" interesting!","Fragments":[":-)"]},{"Key":"I basically","Fragments":["ended"]},{"Key":"basically ended","Fragments":["up"]},{"Key":"with reimplementing","Fragments":["`startsWith`"]},{"Key":"reimplementing `startsWith`","Fragments":["(called"]},{"Key":"`startsWith` (called","Fragments":["`isStartOf`"]},{"Key":"(called `isStartOf`","Fragments":["here)"]},{"Key":"`isStartOf` here)","Fragments":["and"]},{"Key":"here) and","Fragments":["an"]},{"Key":"additional `isContainedIn`","Fragments":["method"]},{"Key":"`isContainedIn` method","Fragments":["which"]},{"Key":"which drops","Fragments":["elements"]},{"Key":"drops elements","Fragments":["from"]},{"Key":"front of","Fragments":["the"]},{"Key":"the super","Fragments":["list"]},{"Key":"super list","Fragments":["until"]},{"Key":"list until","Fragments":["`isStartOf`"]},{"Key":"until `isStartOf`","Fragments":["returns"]},{"Key":"`isStartOf` returns","Fragments":["true,"]},{"Key":"returns true,","Fragments":["hence"]},{"Key":"true, hence","Fragments":["effectively"]},{"Key":"hence effectively","Fragments":["performing"]},{"Key":"effectively performing","Fragments":["the"]},{"Key":"performing the","Fragments":["sublist"]},{"Key":"the sublist","Fragments":["check."]},{"Key":"feedback! Some","Fragments":["notes:"]},{"Key":"* yes,","Fragments":["indeed,"]},{"Key":"yes, indeed,","Fragments":["the"]},{"Key":"indeed, the","Fragments":["`take`"]},{"Key":"the `take`","Fragments":["isn't"]},{"Key":"`take` isn't","Fragments":["necessary"]},{"Key":"isn't necessary","Fragments":["at","(though","(though"]},{"Key":"necessary at","Fragments":["all"]},{"Key":"* it's","Fragments":["true"]},{"Key":"it's true","Fragments":["that"]},{"Key":"true that","Fragments":["`a.zip(b).forall(..)`"]},{"Key":"that `a.zip(b).forall(..)`","Fragments":["isn't"]},{"Key":"`a.zip(b).forall(..)` isn't","Fragments":["the"]},{"Key":"efficient solution,","Fragments":["but","but"]},{"Key":"but I'd","Fragments":["argue","consider","use","be"]},{"Key":"I'd argue","Fragments":["that","mine"]},{"Key":"additional function","Fragments":["and","to"]},{"Key":"and hence","Fragments":["one"]},{"Key":"hence one","Fragments":["has"]},{"Key":"read less","Fragments":["code,"]},{"Key":"less code,","Fragments":["improving"]},{"Key":"code, improving","Fragments":["readability."]},{"Key":"improving readability.","Fragments":["But"]},{"Key":"readability. But","Fragments":["in"]},{"Key":"end, I","Fragments":["guess"]},{"Key":"* maybe","Fragments":["you're"]},{"Key":"maybe you're","Fragments":["right,"]},{"Key":"you're right,","Fragments":["I've"]},{"Key":"right, I've","Fragments":["removed"]},{"Key":"I've removed","Fragments":["`areEqual`"]},{"Key":" Implicit","Fragments":["classes"]},{"Key":"Implicit classes","Fragments":["must"]},{"Key":"classes must","Fragments":["be"]},{"Key":"be put","Fragments":["into","outside,","into"]},{"Key":"put into","Fragments":["a","the","a"]},{"Key":"a trait/class/object,","Fragments":["also"]},{"Key":"trait/class/object, also","Fragments":["see"]},{"Key":"also see","Fragments":["[the"]},{"Key":"see [the","Fragments":["docs"]},{"Key":"[the docs","Fragments":["here](http://docs.scala-lang.org/overviews/core/implicit-classes.html)."]},{"Key":"docs here](http://docs.scala-lang.org/overviews/core/implicit-classes.html).","Fragments":["So,"]},{"Key":"here](http://docs.scala-lang.org/overviews/core/implicit-classes.html). So,","Fragments":["to"]},{"Key":"So, to","Fragments":["answer"]},{"Key":"to answer","Fragments":["your"]},{"Key":"answer your","Fragments":["question,"]},{"Key":"your question,","Fragments":["no,"]},{"Key":"question, no,","Fragments":["it"]},{"Key":"it couldn't","Fragments":["be"]},{"Key":"couldn't be","Fragments":["put"]},{"Key":"put outside,","Fragments":["it"]},{"Key":"outside, it","Fragments":["must"]},{"Key":"must either","Fragments":["be"]},{"Key":"either be","Fragments":["put"]},{"Key":"the `Sublist`","Fragments":["class","companion"]},{"Key":"`Sublist` class","Fragments":["or"]},{"Key":"class or","Fragments":["the"]},{"Key":"`Sublist` companion","Fragments":["object."]},{"Key":"also did","Fragments":["a"]},{"Key":"with re-implementation","Fragments":["of"]},{"Key":"of startsWith/containsSlice","Fragments":["(see"]},{"Key":"startsWith/containsSlice (see","Fragments":["http://exercism.io/submissions/ba5969dc7a7640dd9fc20ca010da0d92?i=1)"]},{"Key":"your isStartOf","Fragments":["implementation"]},{"Key":"isStartOf implementation","Fragments":["can"]},{"Key":"implementation can","Fragments":["be"]},{"Key":"- `otherList.take`","Fragments":["in"]},{"Key":"`otherList.take` in","Fragments":["`zip`"]},{"Key":"in `zip`","Fragments":["is"]},{"Key":"`zip` is","Fragments":["not","implicitly"]},{"Key":"necessary I","Fragments":["think"]},{"Key":"think because","Fragments":["`zip`"]},{"Key":"because `zip`","Fragments":["does"]},{"Key":"that for","Fragments":["you"]},{"Key":"- `a.zip(b).forall()`","Fragments":["is"]},{"Key":"`a.zip(b).forall()` is","Fragments":["not"]},{"Key":"very efficient","Fragments":["because"]},{"Key":"efficient because","Fragments":["you"]},{"Key":"you construct","Fragments":["a"]},{"Key":"construct a","Fragments":["whole"]},{"Key":"a whole","Fragments":["new"]},{"Key":"whole new","Fragments":["list,"]},{"Key":"new list,","Fragments":["of"]},{"Key":"list, of","Fragments":["which"]},{"Key":"of which","Fragments":["only"]},{"Key":"which only","Fragments":["the"]},{"Key":"first elements","Fragments":["will"]},{"Key":"elements will","Fragments":["be"]},{"Key":"be consumed","Fragments":["most"]},{"Key":"consumed most","Fragments":["of"]},{"Key":"the time.","Fragments":["You'd"]},{"Key":"time. You'd","Fragments":["better"]},{"Key":"You'd better","Fragments":["compare"]},{"Key":"better compare","Fragments":["the"]},{"Key":"elements pairwise","Fragments":["and"]},{"Key":"pairwise and","Fragments":["stop"]},{"Key":"and stop","Fragments":["comparing"]},{"Key":"stop comparing","Fragments":["on"]},{"Key":"comparing on","Fragments":["first"]},{"Key":"on first","Fragments":["inequality.","time"]},{"Key":"first inequality.","Fragments":["In"]},{"Key":"inequality. In","Fragments":["my"]},{"Key":"a recursive","Fragments":["implementation","list","function"]},{"Key":"of areEqual","Fragments":["seems"]},{"Key":"areEqual seems","Fragments":["like"]},{"Key":"me, an","Fragments":["anonymous"]},{"Key":"in `forall`","Fragments":["would"]},{"Key":"`forall` would","Fragments":["just"]},{"Key":"do fine","Fragments":["I'd"]},{"Key":"fine I'd","Fragments":["think"]},{"Key":"a final","Fragments":["note"]},{"Key":"final note","Fragments":["(I"]},{"Key":"note (I","Fragments":["don't"]},{"Key":"know yet","Fragments":["how"]},{"Key":"yet how","Fragments":["this"]},{"Key":"class stuff","Fragments":["works):"]},{"Key":"stuff works):","Fragments":["is"]},{"Key":"works): is","Fragments":["it"]},{"Key":"it necessary","Fragments":["that","to"]},{"Key":"necessary that","Fragments":["`implicit"]},{"Key":"that `implicit","Fragments":["class"]},{"Key":"`implicit class","Fragments":["ListExtensions`","Clean(val"]},{"Key":"class ListExtensions`","Fragments":["is"]},{"Key":"ListExtensions` is","Fragments":["nested"]},{"Key":"is nested","Fragments":["inside"]},{"Key":"nested inside","Fragments":["`class"]},{"Key":"inside `class","Fragments":["Sublist`"]},{"Key":"`class Sublist`","Fragments":["or"]},{"Key":"Sublist` or","Fragments":["could"]},{"Key":"or could","Fragments":["it"]},{"Key":"be outside","Fragments":["as"]},{"Key":"outside as","Fragments":["well?"]},{"Key":"good. One","Fragments":["suggestion"]},{"Key":"One suggestion","Fragments":["is"]},{"Key":"the `fold`","Fragments":["to"]},{"Key":"`fold` to","Fragments":["a"]},{"Key":"a call","Fragments":["to"]},{"Key":"your comments!","Fragments":["I"]},{"Key":"comments! I","Fragments":["submitted"]},{"Key":"submitted a","Fragments":["new","fix","version","2nd"]},{"Key":"and simple!","Fragments":["A"]},{"Key":"simple! A","Fragments":["few"]},{"Key":"the conditionals","Fragments":["(e.g.","into","which","can"]},{"Key":"conditionals (e.g.","Fragments":["`isUpper(what)`,"]},{"Key":"(e.g. `isUpper(what)`,","Fragments":["`what.endsWith(\"?\")`),"]},{"Key":"`isUpper(what)`, `what.endsWith(\"?\")`),","Fragments":["consider"]},{"Key":"`what.endsWith(\"?\")`), consider","Fragments":["using"]},{"Key":"separate method","Fragments":["with"]},{"Key":"that describes","Fragments":["what"]},{"Key":"describes what","Fragments":["you're"]},{"Key":"you're checking,","Fragments":["e.g."]},{"Key":"checking, e.g.","Fragments":["`isShouting`"]},{"Key":"e.g. `isShouting`","Fragments":["`isQuestion`"]},{"Key":"* Is","Fragments":["there","there"]},{"Key":"for `what`","Fragments":["that"]},{"Key":"`what` that","Fragments":["might"]},{"Key":"might clarify","Fragments":["its"]},{"Key":"clarify its","Fragments":["role?"]},{"Key":"its role?","Fragments":["E.g."]},{"Key":"role? E.g.","Fragments":["`prompt`"]},{"Key":"E.g. `prompt`","Fragments":["or"]},{"Key":"`prompt` or","Fragments":["`input`..."]},{"Key":"even an","Fragments":["```unfold```?"]},{"Key":"an ```unfold```?","Fragments":[";-)"]},{"Key":"Extracted `isValidLuhn`","Fragments":["auxiliary"]},{"Key":"`isValidLuhn` auxiliary","Fragments":["function."]},{"Key":"After having","Fragments":["just"]},{"Key":"having just","Fragments":["completed"]},{"Key":"just completed","Fragments":["the"]},{"Key":"completed the","Fragments":["prime"]},{"Key":"the prime","Fragments":["factorization","numbers","factors"]},{"Key":"prime factorization","Fragments":["part"]},{"Key":"factorization part","Fragments":["of"]},{"Key":"Scala exercise,","Fragments":["I","but"]},{"Key":"exercise, I","Fragments":["got"]},{"Key":"got fixated","Fragments":["on"]},{"Key":"fixated on","Fragments":["wanting","this"]},{"Key":"on wanting","Fragments":["to"]},{"Key":"wanting to","Fragments":["use"]},{"Key":"code again","Fragments":["and","I"]},{"Key":"again and","Fragments":["oversaw"]},{"Key":"and oversaw","Fragments":["the"]},{"Key":"oversaw the","Fragments":["easy"]},{"Key":"the easy","Fragments":["way","way"]},{"Key":"prime numbers","Fragments":["haha."]},{"Key":"numbers haha.","Fragments":["Removed"]},{"Key":"haha. Removed","Fragments":["a"]},{"Key":"Removed a","Fragments":["lot"]},{"Key":"of unnecessary","Fragments":["code.","allocations","redundancy"]},{"Key":"and understandable,","Fragments":["however"]},{"Key":"understandable, however","Fragments":["I"]},{"Key":"even better.","Fragments":["To"]},{"Key":"better. To","Fragments":["start"]},{"Key":"To start","Fragments":["with"]},{"Key":"thing, you","Fragments":["should"]},{"Key":"should decide","Fragments":["for"]},{"Key":"decide for","Fragments":["one"]},{"Key":"one style","Fragments":["to"]},{"Key":"curly braces.","Fragments":["In"]},{"Key":"braces. In","Fragments":["line"]},{"Key":"In line","Fragments":["3","9"]},{"Key":"you put","Fragments":["it","that"]},{"Key":"new line","Fragments":["while"]},{"Key":"line while","Fragments":["in"]},{"Key":"while in","Fragments":["line"]},{"Key":"line 16","Fragments":["it's"]},{"Key":"16 it's","Fragments":["on"]},{"Key":"it's on","Fragments":["the"]},{"Key":" Regarding","Fragments":["line","Random.shuffle(Stream),"]},{"Key":"Regarding line","Fragments":["11"]},{"Key":"line 11","Fragments":["there"]},{"Key":"11 there","Fragments":["is"]},{"Key":"a handy","Fragments":["method"]},{"Key":"handy method","Fragments":["called"]},{"Key":"method called","Fragments":["`mapValues`","zip()","alphabetic."]},{"Key":"called `mapValues`","Fragments":["on"]},{"Key":"`mapValues` on","Fragments":["maps."]},{"Key":"on maps.","Fragments":["Try"]},{"Key":"maps. Try","Fragments":["it"]},{"Key":"9 if","Fragments":["you"]},{"Key":"replace `x","Fragments":["=\u003e"]},{"Key":"x` with","Fragments":["`identity`"]},{"Key":"with `identity`","Fragments":["which"]},{"Key":"bit clearer","Fragments":["what"]},{"Key":"clearer what","Fragments":["you're"]},{"Key":"doing there","Fragments":["imo."]},{"Key":"there imo.","Fragments":["However..."]},{"Key":" ...Your","Fragments":["solution"]},{"Key":"...Your solution","Fragments":["currently"]},{"Key":"solution currently","Fragments":["does"]},{"Key":"currently does","Fragments":["4"]},{"Key":"does 4","Fragments":["complete"]},{"Key":"4 complete","Fragments":["passes"]},{"Key":"complete passes","Fragments":["over"]},{"Key":"passes over","Fragments":["the","the"]},{"Key":"string, then","Fragments":["one"]},{"Key":"then one","Fragments":["over"]},{"Key":"one over","Fragments":["the","the"]},{"Key":"the splitted","Fragments":["words"]},{"Key":"splitted words","Fragments":["and"]},{"Key":"words and","Fragments":["one"]},{"Key":"the counted","Fragments":["words."]},{"Key":"easily get","Fragments":["rid"]},{"Key":"by converting","Fragments":["to"]},{"Key":"converting to","Fragments":["lowercase"]},{"Key":"to lowercase","Fragments":["during"]},{"Key":"lowercase during","Fragments":["the"]},{"Key":"during the","Fragments":["grouping."]},{"Key":"the grouping.","Fragments":["If"]},{"Key":"grouping. If","Fragments":["you"]},{"Key":"to, you","Fragments":["can"]},{"Key":"of passes","Fragments":["over"]},{"Key":"input string","Fragments":["even"]},{"Key":"string even","Fragments":["more"]},{"Key":"Use require","Fragments":["will"]},{"Key":"require will","Fragments":["save"]},{"Key":"will save","Fragments":["you","precious"]},{"Key":"you a","Fragments":["method."]},{"Key":"Not really","Fragments":["agree,"]},{"Key":"really agree,","Fragments":["since"]},{"Key":"agree, since","Fragments":["validateNucleon"]},{"Key":"since validateNucleon","Fragments":["has"]},{"Key":"validateNucleon has","Fragments":["domain"]},{"Key":"has domain","Fragments":["specific"]},{"Key":"domain specific","Fragments":["logic."]},{"Key":"specific logic.","Fragments":["I"]},{"Key":"logic. I","Fragments":["agree"]},{"Key":"have use","Fragments":["require"]},{"Key":"use require","Fragments":["in"]},{"Key":"require in","Fragments":["that","Predef."]},{"Key":"```Predef``` for","Fragments":["the","validation.","the"]},{"Key":"additional exercise:","Fragments":["Use","Try"]},{"Key":"exercise: Use","Fragments":["Scala","```flatMap/map```"]},{"Key":"Use Scala","Fragments":["Collection's"]},{"Key":"Scala Collection's","Fragments":["functions"]},{"Key":"Collection's functions","Fragments":["like"]},{"Key":"like ```zip,","Fragments":["count,","map,"]},{"Key":"```zip, count,","Fragments":["...```."]},{"Key":"alias, BasePair","Fragments":["is"]},{"Key":"BasePair is","Fragments":["perfect"]},{"Key":"is perfect","Fragments":["for"]},{"Key":"perfect for","Fragments":["programmers"]},{"Key":"for programmers","Fragments":["and"]},{"Key":"programmers and","Fragments":["for"]},{"Key":"for non-progrmaming","Fragments":["readers."]},{"Key":"Please do","Fragments":["not"]},{"Key":"not rate","Fragments":["this."]},{"Key":"copied https://github.com/exercism/xscala/blob/master/bob/example.scala","Fragments":["to"]},{"Key":"https://github.com/exercism/xscala/blob/master/bob/example.scala to","Fragments":["get"]},{"Key":"next challenge","Fragments":["and"]},{"Key":"challenge and","Fragments":["try"]},{"Key":"the frequencies","Fragments":["mapping"]},{"Key":"frequencies mapping","Fragments":["is"]},{"Key":"mapping is","Fragments":["a"]},{"Key":"little overkill","Fragments":["here."]},{"Key":"overkill here.","Fragments":["Technically"]},{"Key":"here. Technically","Fragments":["correct,"]},{"Key":"Technically correct,","Fragments":["but"]},{"Key":"correct, but","Fragments":["you"]},{"Key":"same effect","Fragments":["by"]},{"Key":"effect by","Fragments":["just"]},{"Key":"just comparing","Fragments":["the"]},{"Key":" cleanup","Fragments":["of"]},{"Key":"cleanup of","Fragments":["unused"]},{"Key":"of unused","Fragments":["code."]},{"Key":"more scala-esque?!","Fragments":["Still"]},{"Key":"scala-esque?! Still","Fragments":["stuck"]},{"Key":"stuck on","Fragments":["the"]},{"Key":"the fifth","Fragments":["test"]},{"Key":"fifth test","Fragments":["-"]},{"Key":"test -","Fragments":["duplicates"]},{"Key":"- duplicates","Fragments":["(in"]},{"Key":"duplicates (in","Fragments":["the"]},{"Key":"the form","Fragments":["of"]},{"Key":"of anagrams)","Fragments":["in"]},{"Key":"anagrams) in","Fragments":["the"]},{"Key":"do `arg.last","Fragments":["=="]},{"Key":"`arg.last ==","Fragments":["'?'`"]},{"Key":"'?'` for","Fragments":["the"]},{"Key":" Hm,","Fragments":["I"]},{"Key":"Hm, I","Fragments":["like"]},{"Key":"function composition","Fragments":["style."]},{"Key":" @mathilde","Fragments":["True,","That's"]},{"Key":"@mathilde True,","Fragments":["you"]},{"Key":"could think","Fragments":["of","of,"]},{"Key":"as defining","Fragments":["a"]},{"Key":"general function","Fragments":["over"]},{"Key":"over collections.","Fragments":["Generalizing"]},{"Key":"collections. Generalizing","Fragments":["too"]},{"Key":"Generalizing too","Fragments":["far"]},{"Key":"far could","Fragments":["hurt,"]},{"Key":"could hurt,","Fragments":["since"]},{"Key":"hurt, since","Fragments":["the"]},{"Key":"code reader","Fragments":["may"]},{"Key":"may need","Fragments":["to"]},{"Key":"translate it","Fragments":["into"]},{"Key":"specific use","Fragments":["case"]},{"Key":"their head.","Fragments":["But"]},{"Key":"head. But","Fragments":["not"]},{"Key":"big risk","Fragments":["here."]},{"Key":" Hamming","Fragments":["distance"]},{"Key":"is typically","Fragments":["described"]},{"Key":"typically described","Fragments":["as"]},{"Key":"described as","Fragments":["a"]},{"Key":"string comparison","Fragments":["metric,","algorithm,"]},{"Key":"comparison metric,","Fragments":["but"]},{"Key":"metric, but","Fragments":["I"]},{"Key":"suppose it","Fragments":["wouldn't"]},{"Key":"a far","Fragments":["stretch"]},{"Key":"far stretch","Fragments":["to"]},{"Key":"stretch to","Fragments":["apply"]},{"Key":"@mathilde That's","Fragments":["a"]},{"Key":"interesting point.","Fragments":["@mathilde"]},{"Key":"point. @mathilde","Fragments":["showed"]},{"Key":"@mathilde showed","Fragments":["a"]},{"Key":"showed a","Fragments":["Haskell"]},{"Key":"a Haskell","Fragments":["example"]},{"Key":"Haskell example","Fragments":["of"]},{"Key":"example of","Fragments":["just","a"]},{"Key":"just that","Fragments":["in","(Iteration"]},{"Key":"discussion on","Fragments":["his"]},{"Key":"on his","Fragments":["submission."]},{"Key":" Typically","Fragments":["in"]},{"Key":"Typically in","Fragments":["functional"]},{"Key":"are at","Fragments":["least"]},{"Key":"an order","Fragments":["of"]},{"Key":"of magnitude","Fragments":["less","more"]},{"Key":"magnitude less","Fragments":["important"]},{"Key":"less important","Fragments":["than","than"]},{"Key":"the functions/methods","Fragments":["you"]},{"Key":"functions/methods you","Fragments":["are"]},{"Key":"are using.","Fragments":["In","Took"]},{"Key":"using. In","Fragments":["some"]},{"Key":"some languages,","Fragments":["you"]},{"Key":"languages, you","Fragments":["can"]},{"Key":"can often","Fragments":["get"]},{"Key":"often get","Fragments":["away"]},{"Key":"away without","Fragments":["naming"]},{"Key":"without naming","Fragments":["the"]},{"Key":"variables at","Fragments":["all,"]},{"Key":"all, in","Fragments":["other"]},{"Key":"other cases","Fragments":["you"]},{"Key":"you simply","Fragments":["make"]},{"Key":"simply make","Fragments":["them"]},{"Key":"make them","Fragments":["short"]},{"Key":"them short","Fragments":["such"]},{"Key":"short such","Fragments":["that"]},{"Key":"the emphasis","Fragments":["is"]},{"Key":"emphasis is","Fragments":["on"]},{"Key":" @cary","Fragments":["So"]},{"Key":"@cary So","Fragments":["this"]},{"Key":"the limitations","Fragments":["of","of"]},{"Key":"limitations of","Fragments":["Scala","`Enumeration`"]},{"Key":"I think.","Fragments":["Imagine"]},{"Key":"think. Imagine","Fragments":["that"]},{"Key":"Imagine that","Fragments":["there"]},{"Key":"there were","Fragments":["no","a","no"]},{"Key":"were no","Fragments":["type","noticeable"]},{"Key":"no type","Fragments":["anotations"]},{"Key":"type anotations","Fragments":["required"]},{"Key":"anotations required","Fragments":["for"]},{"Key":"this code;","Fragments":["what"]},{"Key":"code; what","Fragments":["about"]},{"Key":"code specifies","Fragments":["a"]},{"Key":"specifies a","Fragments":["type?"]},{"Key":"a type?","Fragments":["To"]},{"Key":"type? To","Fragments":["my"]},{"Key":"To my","Fragments":["eyes"]},{"Key":"my eyes","Fragments":["the"]},{"Key":"eyes the","Fragments":["only"]},{"Key":"only prerequisite","Fragments":["is"]},{"Key":"prerequisite is","Fragments":["that"]},{"Key":"they must","Fragments":["support"]},{"Key":"must support","Fragments":["`length`,"]},{"Key":"support `length`,","Fragments":["`count`"]},{"Key":"`length`, `count`","Fragments":["and"]},{"Key":"and `apply`.","Fragments":["Might"]},{"Key":"`apply`. Might","Fragments":["be"]},{"Key":"be string,","Fragments":["might"]},{"Key":"string, might","Fragments":["be"]},{"Key":"any collection.","Fragments":["If"]},{"Key":"collection. If","Fragments":["you're"]},{"Key":"If you're","Fragments":["going","going","really"]},{"Key":"you're going","Fragments":["to","to","to"]},{"Key":"to treat","Fragments":["them","them"]},{"Key":"treat them","Fragments":["generically","as","specifically","as"]},{"Key":"them generically","Fragments":["then"]},{"Key":"generically then","Fragments":["why"]},{"Key":"not treat","Fragments":["them","them"]},{"Key":"as generically","Fragments":["as"]},{"Key":"generically as","Fragments":["possible."]},{"Key":"possible. If","Fragments":["you're"]},{"Key":"them specifically","Fragments":["why"]},{"Key":"specifically why","Fragments":["not"]},{"Key":"as specifically","Fragments":["as"]},{"Key":"specifically as","Fragments":["possible."]},{"Key":"possible. Whichever","Fragments":["makes"]},{"Key":"Whichever makes","Fragments":["the"]},{"Key":"readable wins","Fragments":["for"]},{"Key":"wins for","Fragments":["me."]},{"Key":" @tina","Fragments":["Yes,"]},{"Key":"@tina Yes,","Fragments":["you"]},{"Key":"Yes, you","Fragments":["should"]},{"Key":"should name","Fragments":["for"]},{"Key":"for roles,","Fragments":["not"]},{"Key":"roles, not","Fragments":["types."]},{"Key":"not types.","Fragments":["But"]},{"Key":"types. But","Fragments":["for"]},{"Key":"But for","Fragments":["a"]},{"Key":"comparison algorithm,","Fragments":["surely"]},{"Key":"algorithm, surely","Fragments":["the"]},{"Key":"surely the","Fragments":["arguments"]},{"Key":"arguments play","Fragments":["the"]},{"Key":"play the","Fragments":["roles"]},{"Key":"the roles","Fragments":["of"]},{"Key":"roles of","Fragments":["strings?"]},{"Key":"of strings?","Fragments":["Whether"]},{"Key":"strings? Whether","Fragments":["or"]},{"Key":"Whether or","Fragments":["not"]},{"Key":"not they","Fragments":["happen"]},{"Key":"they happen","Fragments":["to","to"]},{"Key":"personally am","Fragments":["dead"]},{"Key":"am dead","Fragments":["set"]},{"Key":"dead set","Fragments":["against"]},{"Key":"set against","Fragments":["ever"]},{"Key":"against ever","Fragments":["referring"]},{"Key":"ever referring","Fragments":["to"]},{"Key":"variable in","Fragments":["its","the"]},{"Key":"in its","Fragments":["name.","scope."]},{"Key":"its name.","Fragments":["The"]},{"Key":"name. The","Fragments":["type"]},{"Key":"type could","Fragments":["change"]},{"Key":"could change","Fragments":["but"]},{"Key":"change but","Fragments":["the"]},{"Key":"that variable","Fragments":["in"]},{"Key":"the given","Fragments":["domain","sequence","test"]},{"Key":"given domain","Fragments":["never"]},{"Key":"domain never","Fragments":["will!"]},{"Key":" @ruthe","Fragments":["The"]},{"Key":"@ruthe The","Fragments":["String"]},{"Key":"String type","Fragments":["is","is"]},{"Key":"something you","Fragments":["relate"]},{"Key":"you relate","Fragments":["*indirectly*"]},{"Key":"relate *indirectly*","Fragments":["to"]},{"Key":"*indirectly* to","Fragments":["the"]},{"Key":" E.g.","Fragments":["you"]},{"Key":"E.g. you","Fragments":["read"]},{"Key":"read `a(i)`","Fragments":["and"]},{"Key":"`a(i)` and","Fragments":["think"]},{"Key":"and think","Fragments":["\"oh"]},{"Key":"think \"oh","Fragments":["yeah,"]},{"Key":"\"oh yeah,","Fragments":["`a`"]},{"Key":"yeah, `a`","Fragments":["was"]},{"Key":"`a` was","Fragments":["a"]},{"Key":"a `String`,","Fragments":["right?\""]},{"Key":" Versus","Fragments":["just"]},{"Key":"Versus just","Fragments":["reading"]},{"Key":"reading `string1(i)`.","Fragments":["More"]},{"Key":"`string1(i)`. More","Fragments":["immediately"]},{"Key":"More immediately","Fragments":["obvious,"]},{"Key":"immediately obvious,","Fragments":["less"]},{"Key":"obvious, less","Fragments":["mental"]},{"Key":"less mental","Fragments":["overhead."]},{"Key":"Again, since","Fragments":["this"]},{"Key":"so short,","Fragments":["the"]},{"Key":"short, the","Fragments":["difference"]},{"Key":"difference is","Fragments":["small","more"]},{"Key":"small (but","Fragments":["there)."]},{"Key":"(but there).","Fragments":["With"]},{"Key":"there). With","Fragments":["longer"]},{"Key":"With longer","Fragments":["code,"]},{"Key":"longer code,","Fragments":["it"]},{"Key":"get fairly","Fragments":["significant,"]},{"Key":"fairly significant,","Fragments":["so"]},{"Key":"significant, so","Fragments":["it"]},{"Key":"How does","Fragments":["`s1`"]},{"Key":"does `s1`","Fragments":["or"]},{"Key":"`s1` or","Fragments":["`string1`","`string1`,"]},{"Key":"or `string1`","Fragments":["convey"]},{"Key":"`string1` convey","Fragments":["any"]},{"Key":"convey any","Fragments":["information"]},{"Key":"any information","Fragments":["that"]},{"Key":"information that","Fragments":["the"]},{"Key":"name `a`","Fragments":["and"]},{"Key":"type `String`","Fragments":["don't"]},{"Key":"`String` don't","Fragments":["already"]},{"Key":"don't already","Fragments":["convey?"]},{"Key":" Clever,","Fragments":["and"]},{"Key":"Clever, and","Fragments":["much"]},{"Key":"and much","Fragments":["easier","simpler."]},{"Key":"much easier","Fragments":["to","to"]},{"Key":"is short","Fragments":["enough","enough."]},{"Key":"enough that","Fragments":["it's"]},{"Key":"very important,","Fragments":["but"]},{"Key":"important, but","Fragments":["I'd","something"]},{"Key":"I'd consider","Fragments":["renaming"]},{"Key":"consider renaming","Fragments":["`a`"]},{"Key":"renaming `a`","Fragments":["and"]},{"Key":"and `b`","Fragments":["to","could"]},{"Key":"`b` to","Fragments":["help"]},{"Key":"help the","Fragments":["reader","noobs"]},{"Key":"reader out.","Fragments":["Along"]},{"Key":"out. Along","Fragments":["the"]},{"Key":"Along the","Fragments":["lines"]},{"Key":"of `s1`","Fragments":["or"]},{"Key":"or `string1`,","Fragments":["maybe."]},{"Key":"a button","Fragments":["to"]},{"Key":"button to","Fragments":["click"]},{"Key":"to click","Fragments":["for"]},{"Key":"click for","Fragments":["that"]},{"Key":" Length","Fragments":["and"]},{"Key":"Length and","Fragments":["indexing"]},{"Key":"and indexing","Fragments":["is"]},{"Key":"indexing is","Fragments":["a"]},{"Key":"constant time","Fragments":["operation","(or","operation"]},{"Key":"time operation","Fragments":["for","for"]},{"Key":"operation for","Fragments":["Java","Java"]},{"Key":"for Java","Fragments":["strings.","strings."]},{"Key":"Java strings.","Fragments":["Using"]},{"Key":"strings. Using","Fragments":["lists,"]},{"Key":"Using lists,","Fragments":["zip,"]},{"Key":"lists, zip,","Fragments":["etc."]},{"Key":"zip, etc.","Fragments":["would"]},{"Key":"etc. would","Fragments":["do"]},{"Key":"unnecessary allocations","Fragments":["and"]},{"Key":"allocations and","Fragments":["garbage"]},{"Key":"and garbage","Fragments":["collection."]},{"Key":"garbage collection.","Fragments":["Range"]},{"Key":"collection. Range","Fragments":["shouldn't"]},{"Key":"Range shouldn't","Fragments":["create"]},{"Key":"shouldn't create","Fragments":["an"]},{"Key":"intermediate list","Fragments":["for"]},{"Key":"list for","Fragments":["the"]},{"Key":"regex can","Fragments":["be","be","be"]},{"Key":"guess that's","Fragments":["a"]},{"Key":"taste :)","Fragments":["nice"]},{"Key":":) nice","Fragments":["job"]},{"Key":"* remove","Fragments":["unnecessary"]},{"Key":"remove unnecessary","Fragments":["tailrec"]},{"Key":"unnecessary tailrec","Fragments":["annotation"]},{"Key":"more Scalay","Fragments":["but"]},{"Key":"Scalay but","Fragments":["I've"]},{"Key":"I've broken","Fragments":["it"]},{"Key":"broken it","Fragments":["up"]},{"Key":"me understand","Fragments":["more"]},{"Key":"understand more","Fragments":["of"]},{"Key":"more of","Fragments":["what's"]},{"Key":"of what's","Fragments":["going"]},{"Key":"were a","Fragments":["few","bit"]},{"Key":"few bugs","Fragments":["in"]},{"Key":"bugs in","Fragments":["the"]},{"Key":" anagrams","Fragments":["should","should"]},{"Key":"anagrams should","Fragments":["equal(Seq(\"Carthorse\"))","equal(Seq(\"carthorse\"))","equal","equal"]},{"Key":"should equal(Seq(\"Carthorse\"))","Fragments":["-\u003e"]},{"Key":"equal(Seq(\"Carthorse\")) -\u003e","Fragments":["anagrams"]},{"Key":"-\u003e anagrams","Fragments":["should","should"]},{"Key":"should equal","Fragments":["(Seq(\"corn\"))","(Seq(\"cron\","]},{"Key":"equal (Seq(\"corn\"))","Fragments":["-\u003e"]},{"Key":"(Seq(\"corn\")) -\u003e","Fragments":["anagrams"]},{"Key":"equal (Seq(\"cron\",","Fragments":["\"corn\"))"]},{"Key":"like intermediate","Fragments":["values"]},{"Key":"intermediate values","Fragments":["such"]},{"Key":"values such","Fragments":["as"]},{"Key":"as 'result',","Fragments":["as"]},{"Key":"'result', as","Fragments":["I"]},{"Key":"code clearer,","Fragments":["but"]},{"Key":"clearer, but","Fragments":["in"]},{"Key":"comprehensions would","Fragments":["suffice"]},{"Key":"would suffice","Fragments":["with"]},{"Key":"suffice with","Fragments":["out"]},{"Key":"the 'result'","Fragments":["variable."]},{"Key":" Ooop","Fragments":["looking"]},{"Key":"Ooop looking","Fragments":["at"]},{"Key":"empty word.","Fragments":["Add"]},{"Key":"word. Add","Fragments":["this"]},{"Key":"Add this","Fragments":["to"]},{"Key":"Scala newbie","Fragments":["here."]},{"Key":"newbie here.","Fragments":["Not"]},{"Key":"here. Not","Fragments":["sure"]},{"Key":"sure I'm","Fragments":["doing"]},{"Key":"function, as","Fragments":["@shanna"]},{"Key":"as @shanna","Fragments":["suggests."]},{"Key":"@shanna suggests.","Fragments":["Something"]},{"Key":"suggests. Something","Fragments":["like"]},{"Key":"but readability","Fragments":["could"]},{"Key":"readability could","Fragments":["probably"]},{"Key":"tests in","Fragments":["the"]},{"Key":"conditionals into","Fragments":["named"]},{"Key":"into named","Fragments":["functions."]},{"Key":"It's great","Fragments":["you've"]},{"Key":"great you've","Fragments":["seen"]},{"Key":"you've seen","Fragments":["opportunity"]},{"Key":"seen opportunity","Fragments":["for"]},{"Key":"opportunity for","Fragments":["bitwise"]},{"Key":"for bitwise","Fragments":["operators"]},{"Key":"bitwise operators","Fragments":["-"]},{"Key":"operators -","Fragments":["something"]},{"Key":"- something","Fragments":["I"]},{"Key":"For comparison","Fragments":["(that"]},{"Key":"comparison (that","Fragments":["was"]},{"Key":"(that was","Fragments":["humbling"]},{"Key":"was humbling","Fragments":["to"]},{"Key":"humbling to","Fragments":["me)"]},{"Key":"to me)","Fragments":["please"]},{"Key":"me) please","Fragments":["advise"]},{"Key":"please advise","Fragments":["@annamarie"]},{"Key":"advise @annamarie","Fragments":["solution:"]},{"Key":"Interesting to","Fragments":["do"]},{"Key":"the ```require```","Fragments":["after"]},{"Key":"```require``` after","Fragments":["the"]},{"Key":"the computation.","Fragments":[":-)"]},{"Key":"it at","Fragments":["the"]},{"Key":"the beginning,","Fragments":["and","to"]},{"Key":"beginning, and","Fragments":["using"]},{"Key":"using something","Fragments":["like"]},{"Key":"like ```forall```?","Fragments":["Should"]},{"Key":"```forall```? Should","Fragments":["also"]},{"Key":"Should also","Fragments":["be"]},{"Key":"The regex'es","Fragments":["could"]},{"Key":"regex'es could","Fragments":["perhaps"]},{"Key":"perhaps be","Fragments":["simplified","simplified","more"]},{"Key":"simplified (or","Fragments":["at"]},{"Key":"least have","Fragments":["private"]},{"Key":"have private","Fragments":["helper"]},{"Key":"But apart","Fragments":["from"]},{"Key":"that: nice!","Fragments":[":-)"]},{"Key":"great! Just","Fragments":["one"]},{"Key":"one thing,","Fragments":["rnaComplement"]},{"Key":"thing, rnaComplement","Fragments":["function"]},{"Key":"rnaComplement function","Fragments":["creates"]},{"Key":"function creates","Fragments":["a"]},{"Key":"new Map","Fragments":["at"]},{"Key":"Map at","Fragments":["each"]},{"Key":"each call.","Fragments":["No"]},{"Key":"call. No","Fragments":["problem"]},{"Key":"No problem","Fragments":["at"]},{"Key":"problem at","Fragments":["all,"]},{"Key":"all, at","Fragments":["that"]},{"Key":" Oops,","Fragments":["should"]},{"Key":"Oops, should","Fragments":["be"]},{"Key":"val. Thanks","Fragments":["for"]},{"Key":"pointing it","Fragments":["out!"]},{"Key":"http://exercism.io/lhohan, actually","Fragments":["this"]},{"Key":"actually this","Fragments":["is"]},{"Key":"a try","Fragments":["to","using"]},{"Key":"When grabbing","Fragments":["the"]},{"Key":"grabbing the","Fragments":["first"]},{"Key":"first character","Fragments":["off"]},{"Key":"character off","Fragments":["a"]},{"Key":"off a","Fragments":["string,"]},{"Key":"string, I","Fragments":["have"]},{"Key":"found `s.take(1)`","Fragments":["feels"]},{"Key":"`s.take(1)` feels","Fragments":["more"]},{"Key":"feels more","Fragments":["natural"]},{"Key":"me than","Fragments":["`s.substring(1)`,"]},{"Key":"than `s.substring(1)`,","Fragments":["but"]},{"Key":"`s.substring(1)`, but","Fragments":["both"]},{"Key":"but both","Fragments":["work"]},{"Key":"both work","Fragments":["and"]},{"Key":"work and","Fragments":["are"]},{"Key":"and are","Fragments":["very","thus"]},{"Key":"of `isDigit`","Fragments":["in"]},{"Key":"`isDigit` in","Fragments":["the"]},{"Key":"filter -","Fragments":["I'm"]},{"Key":"still thinking","Fragments":["in"]},{"Key":"thinking in","Fragments":["regexes","java"]},{"Key":"in regexes","Fragments":["and"]},{"Key":"regexes and","Fragments":["did"]},{"Key":"your way","Fragments":["better.","is","is"]},{"Key":" IsShouting","Fragments":["can"]},{"Key":"IsShouting can","Fragments":["be"]},{"Key":"be simply","Fragments":["comparing"]},{"Key":"simply comparing","Fragments":["message.toUpper"]},{"Key":"comparing message.toUpper","Fragments":["and"]},{"Key":"message.toUpper and","Fragments":["message"]},{"Key":"didn't realize","Fragments":["you","that"]},{"Key":"realize you","Fragments":["could"]},{"Key":"could \"regex\"","Fragments":["a"]},{"Key":"\"regex\" a","Fragments":["string"]},{"Key":"function call;","Fragments":["thanks"]},{"Key":"call; thanks","Fragments":["for"]},{"Key":"for showing","Fragments":["that!"]},{"Key":"Didn't think","Fragments":["of"]},{"Key":"using foldLeft","Fragments":["here."]},{"Key":"foldLeft here.","Fragments":["Nice"]},{"Key":"here. Nice","Fragments":["one."]},{"Key":"could still","Fragments":["be"]},{"Key":"still be","Fragments":["more"]},{"Key":"type Seq[String],","Fragments":["so"]},{"Key":"Seq[String], so","Fragments":["have"]},{"Key":"so have","Fragments":["all"]},{"Key":"have all","Fragments":["the","the"]},{"Key":"collection functionality.","Fragments":["Functions"]},{"Key":"functionality. Functions","Fragments":["like"]},{"Key":"Functions like","Fragments":["isEmpty,"]},{"Key":"like isEmpty,","Fragments":["filter,"]},{"Key":"isEmpty, filter,","Fragments":["forall,"]},{"Key":"filter, forall,","Fragments":["exists,","exists,"]},{"Key":"exists, ...","Fragments":["(together"]},{"Key":"... (together","Fragments":["w/"]},{"Key":"like isLower,","Fragments":["isLetter,"]},{"Key":"isLower, isLetter,","Fragments":["...)"]},{"Key":"isLetter, ...)","Fragments":["that"]},{"Key":"...) that","Fragments":["can"]},{"Key":"Or you","Fragments":["can"]},{"Key":"matching (using","Fragments":["regexes"]},{"Key":"(using regexes","Fragments":["directly)."]},{"Key":"And pls","Fragments":["do","don't"]},{"Key":" @dejuan:","Fragments":["No,"]},{"Key":"@dejuan: No,","Fragments":["I"]},{"Key":"No, I","Fragments":["think"]},{"Key":"just result","Fragments":["of"]},{"Key":"not thinking","Fragments":["through,"]},{"Key":"thinking through,","Fragments":["def"]},{"Key":"through, def","Fragments":["would"]},{"Key":"def would","Fragments":["be"]},{"Key":"better and","Fragments":["definitely","simpler"]},{"Key":"to complain","Fragments":["here."]},{"Key":"some name","Fragments":["like"]},{"Key":"name like","Fragments":["like"]},{"Key":"like like","Fragments":["\"normalizedWord\""]},{"Key":"like \"normalizedWord\"","Fragments":["instead"]},{"Key":"\"normalizedWord\" instead","Fragments":["of"]},{"Key":"could discuss","Fragments":["whether"]},{"Key":"discuss whether","Fragments":["normalize"]},{"Key":"whether normalize","Fragments":["should"]},{"Key":"normalize should","Fragments":["not"]},{"Key":"not rather","Fragments":["be"]},{"Key":"rather be","Fragments":["a"]},{"Key":"simple def","Fragments":["instead"]},{"Key":"def instead","Fragments":["of"]},{"Key":"val. You","Fragments":["have"]},{"Key":"any reasons","Fragments":["for"]},{"Key":"reasons for","Fragments":["this","specifying"]},{"Key":"Nice, I","Fragments":["did"]},{"Key":"did with","Fragments":["a"]},{"Key":"chars instead","Fragments":["to"]},{"Key":"instead to","Fragments":["make"]},{"Key":"make my","Fragments":["map"]},{"Key":"map shorter","Fragments":["but"]},{"Key":"shorter but","Fragments":["then"]},{"Key":"the scoreLetter","Fragments":["method"]},{"Key":"scoreLetter method","Fragments":["is"]},{"Key":"If an","Fragments":["`unapply`"]},{"Key":"an `unapply`","Fragments":["doesn't"]},{"Key":"`unapply` doesn't","Fragments":["provide"]},{"Key":"doesn't provide","Fragments":["any"]},{"Key":"provide any","Fragments":["value"]},{"Key":"any value","Fragments":["it"]},{"Key":"value it","Fragments":["can"]},{"Key":"return just","Fragments":["`Boolean`"]},{"Key":"just `Boolean`","Fragments":["instead"]},{"Key":"`Boolean` instead","Fragments":["of"]},{"Key":" Feels","Fragments":["a"]},{"Key":"Feels a","Fragments":["bit"]},{"Key":"over engineered","Fragments":["with"]},{"Key":"engineered with","Fragments":["the"]},{"Key":"implicit classes","Fragments":["and"]},{"Key":"classes and","Fragments":["an","companion","matching"]},{"Key":"an if","Fragments":["statement","statement","statement,",";-)"]},{"Key":"statement may","Fragments":["be"]},{"Key":"recommend a","Fragments":["better"]},{"Key":"your `getkey`","Fragments":["function."]},{"Key":"`getkey` function.","Fragments":["It"]},{"Key":"It gets","Fragments":["a"]},{"Key":"a key.","Fragments":[":)"]},{"Key":"key. :)","Fragments":["But"]},{"Key":":) But","Fragments":["if"]},{"Key":"But if","Fragments":["you're","you","they","you"]},{"Key":"if you're","Fragments":["going"]},{"Key":"make maps,","Fragments":["look"]},{"Key":"maps, look","Fragments":["into"]},{"Key":"into using","Fragments":["`groupby`"]},{"Key":"using `groupby`","Fragments":["and"]},{"Key":"`groupby` and","Fragments":["perhaps"]},{"Key":"perhaps `breakout`","Fragments":["to"]},{"Key":"`breakout` to","Fragments":["make"]},{"Key":"your life","Fragments":["easier."]},{"Key":"used sorted","Fragments":["strings,","strings"]},{"Key":"sorted strings,","Fragments":["rather"]},{"Key":"strings, rather","Fragments":["than"]},{"Key":"than Maps,","Fragments":["but"]},{"Key":"Maps, but","Fragments":["that's"]},{"Key":"breaking out","Fragments":["your"]},{"Key":"out your","Fragments":["filter"]},{"Key":"test into","Fragments":["a","a"]},{"Key":"for clarity's","Fragments":["sake."]},{"Key":"matching seems","Fragments":["to"]},{"Key":"to lead","Fragments":["to"]},{"Key":"and clear","Fragments":["solution."]},{"Key":"it easy","Fragments":["to"]},{"Key":"it al","Fragments":["crystal"]},{"Key":"al crystal","Fragments":["clear"]},{"Key":"crystal clear","Fragments":["in"]},{"Key":"clear in","Fragments":["the"]},{"Key":"code how","Fragments":["the"]},{"Key":"the roman","Fragments":["logic"]},{"Key":"roman logic","Fragments":["works."]},{"Key":"implemented two","Fragments":["points","points"]},{"Key":"two points","Fragments":["of","of"]},{"Key":"points of","Fragments":["feedback","feedback,"]},{"Key":"of feedback","Fragments":["on"]},{"Key":"feedback on","Fragments":["the"]},{"Key":"first attempt.","Fragments":["definitely"]},{"Key":"attempt. definitely","Fragments":["think"]},{"Key":"definitely think","Fragments":["lazy"]},{"Key":"think lazy","Fragments":["val"]},{"Key":"val s","Fragments":["are"]},{"Key":"s are","Fragments":["an"]},{"Key":"are an","Fragments":["improvement"]},{"Key":"an improvement","Fragments":["on"]},{"Key":"improvement on","Fragments":["def"]},{"Key":"on def","Fragments":["s"]},{"Key":"def s","Fragments":["in"]},{"Key":"s in","Fragments":["this"]},{"Key":"this situation.","Fragments":["not"]},{"Key":"situation. not","Fragments":["sure"]},{"Key":"big difference","Fragments":["between"]},{"Key":"methods of","Fragments":["rounding.","the"]},{"Key":"on that","Fragments":["complicated","would","later."]},{"Key":"that complicated","Fragments":["construction"]},{"Key":"complicated construction","Fragments":["of"]},{"Key":"of ```valueMap```","Fragments":["you"]},{"Key":"```valueMap``` you","Fragments":["could"]},{"Key":"could at","Fragments":["least"]},{"Key":"least move","Fragments":["it"]},{"Key":"it to,","Fragments":["say,"]},{"Key":"to, say,","Fragments":["the"]},{"Key":"say, the","Fragments":["companion"]},{"Key":" 2","Fragments":["things"]},{"Key":"2 things","Fragments":["come"]},{"Key":"come to","Fragments":["mind:","mind"]},{"Key":"1) Lists","Fragments":["(actually"]},{"Key":"Lists (actually","Fragments":["Iterables)"]},{"Key":"(actually Iterables)","Fragments":["provide"]},{"Key":"Iterables) provide","Fragments":["a"]},{"Key":"function `count`","Fragments":["that"]},{"Key":"`count` that","Fragments":["takes"]},{"Key":"that takes","Fragments":["a","a"]},{"Key":"predicate. You","Fragments":["could"]},{"Key":"to seriously","Fragments":["simplify"]},{"Key":"seriously simplify","Fragments":["your"]},{"Key":"2) I've","Fragments":["learned"]},{"Key":"learned the","Fragments":["hard"]},{"Key":"hard way","Fragments":["to"]},{"Key":"to stay","Fragments":["away"]},{"Key":"from too","Fragments":["much"]},{"Key":"much point-and-bracketless","Fragments":["syntax."]},{"Key":"point-and-bracketless syntax.","Fragments":["It's"]},{"Key":"syntax. It's","Fragments":["a"]},{"Key":"nice feature","Fragments":["(specially","of"]},{"Key":"feature (specially","Fragments":["for"]},{"Key":"(specially for","Fragments":["DSLs)"]},{"Key":"for DSLs)","Fragments":["but"]},{"Key":"DSLs) but","Fragments":["in"]},{"Key":"code harder","Fragments":["to","to"]},{"Key":"to \"parse\"","Fragments":["than"]},{"Key":"\"parse\" than","Fragments":["it"]},{"Key":"should be.","Fragments":["I'd"]},{"Key":"be. I'd","Fragments":["resort"]},{"Key":"I'd resort","Fragments":["to"]},{"Key":"resort to","Fragments":["classical"]},{"Key":"to classical","Fragments":["syntax"]},{"Key":"classical syntax","Fragments":["or"]},{"Key":"syntax or","Fragments":["put","is"]},{"Key":"or put","Fragments":["brackets"]},{"Key":"put brackets","Fragments":["around"]},{"Key":"brackets around","Fragments":["`(x"]},{"Key":"around `(x","Fragments":["zip"]},{"Key":"`(x zip","Fragments":["y)`."]},{"Key":"1) \"0123456789\"","Fragments":["contains"]},{"Key":"\"0123456789\" contains","Fragments":["_"]},{"Key":"contains _","Fragments":["=\u003e"]},{"Key":"=\u003e Can","Fragments":["be"]},{"Key":"2) As","Fragments":["you"]},{"Key":"you duplicated","Fragments":["\"0000000000\","]},{"Key":"duplicated \"0000000000\",","Fragments":["you"]},{"Key":"\"0000000000\", you","Fragments":["could"]},{"Key":"in val","Fragments":["like"]},{"Key":"val like","Fragments":["this:"]},{"Key":"this: val","Fragments":["wrong_number"]},{"Key":"val wrong_number","Fragments":["="]},{"Key":"wrong_number =","Fragments":["\"0\""]},{"Key":" 3)","Fragments":["Consider","'extra'"]},{"Key":"3) Consider","Fragments":["to"]},{"Key":"change some","Fragments":["of","names,"]},{"Key":"defs to","Fragments":["vals,"]},{"Key":"to vals,","Fragments":["so"]},{"Key":"vals, so","Fragments":["they"]},{"Key":"won't calculate","Fragments":["the"]},{"Key":"same things","Fragments":["multiple"]},{"Key":"things multiple","Fragments":["times"]},{"Key":" 4)","Fragments":["The","you"]},{"Key":"4) The","Fragments":["most"]},{"Key":"The most","Fragments":["important"]},{"Key":"most important","Fragments":["thing","is"]},{"Key":"important thing","Fragments":["is"]},{"Key":"matching or","Fragments":["implement","if-else,"]},{"Key":"or implement","Fragments":["it"]},{"Key":"it differently","Fragments":["(look"]},{"Key":"differently (look","Fragments":["other"]},{"Key":"(look other","Fragments":["solutions)"]},{"Key":"about doing","Fragments":["it"]},{"Key":"how to.","Fragments":["Thanks"]},{"Key":"to. Thanks","Fragments":["for"]},{"Key":"opinion that's","Fragments":["the"]},{"Key":"exercise. Well","Fragments":["done"]},{"Key":"Well done","Fragments":[":)"]},{"Key":"my search","Fragments":["to"]},{"Key":"search to","Fragments":["remove"]},{"Key":"matching guards","Fragments":["of"]},{"Key":"guards of","Fragments":["the"]},{"Key":"second iteration,","Fragments":["I"]},{"Key":"iteration, I","Fragments":["found"]},{"Key":"found out","Fragments":["about","the"]},{"Key":"out about","Fragments":["extractor"]},{"Key":"about extractor","Fragments":["objects."]},{"Key":"version also","Fragments":["retains"]},{"Key":"also retains","Fragments":["the"]},{"Key":"retains the","Fragments":["advantage"]},{"Key":"the very","Fragments":["first","useful"]},{"Key":"very first","Fragments":["one:"]},{"Key":"first one:","Fragments":["changes"]},{"Key":"one: changes","Fragments":["only"]},{"Key":"changes only","Fragments":["need"]},{"Key":"made to","Fragments":["a","get"]},{"Key":"Thanks, both.","Fragments":[":)"]},{"Key":"have guessed","Fragments":["that"]},{"Key":"guessed that","Fragments":["there"]},{"Key":"some kind","Fragments":["of"]},{"Key":"of \"count\"","Fragments":["method"]},{"Key":"\"count\" method","Fragments":["and"]},{"Key":"method and","Fragments":["searched","in"]},{"Key":"and searched","Fragments":["for"]},{"Key":"searched for","Fragments":["it."]},{"Key":"I remembered","Fragments":["using"]},{"Key":"remembered using","Fragments":["\"fold\""]},{"Key":"using \"fold\"","Fragments":["previously,"]},{"Key":"\"fold\" previously,","Fragments":["and"]},{"Key":"previously, and","Fragments":["used"]},{"Key":"without considering","Fragments":["the"]},{"Key":"considering the","Fragments":["alternatives."]},{"Key":"the alternatives.","Fragments":["It"]},{"Key":"alternatives. It","Fragments":["makes"]},{"Key":"makes this","Fragments":["much"]},{"Key":" Liked","Fragments":["the"]},{"Key":"Liked the","Fragments":["name"]},{"Key":"also started","Fragments":["going"]},{"Key":"started going","Fragments":["down"]},{"Key":"going down","Fragments":["the"]},{"Key":"foldLeft path","Fragments":["but"]},{"Key":"path but","Fragments":["soon"]},{"Key":"but soon","Fragments":["discovered"]},{"Key":"soon discovered","Fragments":["there's"]},{"Key":"discovered there's","Fragments":["a"]},{"Key":"straightforward way","Fragments":["to"]},{"Key":"do this:","Fragments":["call"]},{"Key":"this: call","Fragments":["count"]},{"Key":"call count","Fragments":["after","method"]},{"Key":"count after","Fragments":["zipping"]},{"Key":"after zipping","Fragments":["e.g."]},{"Key":"zipping e.g.","Fragments":["`strand1.zip(strand2).count"]},{"Key":"e.g. `strand1.zip(strand2).count","Fragments":["{"]},{"Key":"`strand1.zip(strand2).count {","Fragments":["case"]},{"Key":"good solution.","Fragments":["One"]},{"Key":"solution. One","Fragments":["comment"]},{"Key":"One comment","Fragments":["is"]},{"Key":"comment is","Fragments":["that"]},{"Key":"that type","Fragments":["names"]},{"Key":"type names","Fragments":["(FROM,"]},{"Key":"names (FROM,","Fragments":["TO)"]},{"Key":"(FROM, TO)","Fragments":["are"]},{"Key":"TO) are","Fragments":["usually"]},{"Key":"are usually","Fragments":["specified","written","written"]},{"Key":"usually specified","Fragments":["with"]},{"Key":"specified with","Fragments":["a"]},{"Key":"single upper","Fragments":["case"]},{"Key":"letter. Which","Fragments":["type"]},{"Key":"Which type","Fragments":["is"]},{"Key":"used where","Fragments":["will"]},{"Key":"where will","Fragments":["be"]},{"Key":"made clear","Fragments":["by"]},{"Key":"to need","Fragments":["to"]},{"Key":"to update","Fragments":["the","the","the"]},{"Key":"update the","Fragments":["exercise","changed","testsuite","values","responseFor()","code"]},{"Key":"exercise in","Fragments":["the"]},{"Key":"the repository","Fragments":["to"]},{"Key":"repository to","Fragments":["do"]},{"Key":"with map","Fragments":["instead"]},{"Key":"statement I","Fragments":["used."]},{"Key":"I used.","Fragments":["I"]},{"Key":"used. I","Fragments":["didn't"]},{"Key":"that accessing","Fragments":["a"]},{"Key":"accessing a","Fragments":["Map"]},{"Key":"invalid key","Fragments":["would"]},{"Key":"key would","Fragments":["chuck"]},{"Key":"would chuck","Fragments":["an"]},{"Key":"chuck an","Fragments":["exception."]},{"Key":"hehehe I","Fragments":["accidentally"]},{"Key":"I accidentally","Fragments":["called"]},{"Key":"accidentally called","Fragments":["for"]},{"Key":"for PopupWindow","Fragments":["class"]},{"Key":"PopupWindow class","Fragments":["...."]},{"Key":"class ....","Fragments":["forgot"]},{"Key":".... forgot","Fragments":["to"]},{"Key":"the clean","Fragments":["up"]},{"Key":"again: apply","Fragments":["eta-reduction"]},{"Key":"apply eta-reduction","Fragments":["for"]},{"Key":"eta-reduction for","Fragments":["```x"]},{"Key":"for ```x","Fragments":["=\u003e"]},{"Key":"that strange","Fragments":["import?"]},{"Key":"strange import?","Fragments":[";-)"]},{"Key":"ok, then","Fragments":["let","you"]},{"Key":"then let","Fragments":["me"]},{"Key":"me return","Fragments":["the"]},{"Key":"the nitpicking","Fragments":["favor:"]},{"Key":"nitpicking favor:","Fragments":[";-)"]},{"Key":"function taking","Fragments":["a"]},{"Key":"pair as","Fragments":["arg"]},{"Key":"as arg","Fragments":["then"]},{"Key":"arg then","Fragments":["doing"]},{"Key":"then doing","Fragments":["a","`toScores(threes,"]},{"Key":"is overkill","Fragments":["here:"]},{"Key":"```def differentPairs(pair:","Fragments":["(Char,"]},{"Key":"differentPairs(pair: (Char,","Fragments":["Char))"]},{"Key":"(Char, Char))","Fragments":["="]},{"Key":"Char)) =","Fragments":["pair._1"]},{"Key":"= pair._1","Fragments":["!="]},{"Key":"pair._1 !=","Fragments":["pair._2```","pair._2."]},{"Key":"or have","Fragments":["it"]},{"Key":"```val differentPairs:","Fragments":["(Char,"]},{"Key":"differentPairs: (Char,","Fragments":["Char)"]},{"Key":"(Char, Char)","Fragments":["=\u003e"]},{"Key":"Char) =\u003e","Fragments":["Boolean"]},{"Key":"=\u003e Boolean","Fragments":["="]},{"Key":"= {","Fragments":["case"]},{"Key":"case (l,","Fragments":["r)"]},{"Key":"(l, r)","Fragments":["=\u003e"]},{"Key":"r) =\u003e","Fragments":["l"]},{"Key":"=\u003e l","Fragments":["!="]},{"Key":"l !=","Fragments":["r"]},{"Key":"!= r","Fragments":["}```"]},{"Key":"ever have","Fragments":["to","a"]},{"Key":"to flatten","Fragments":["a"]},{"Key":"flatten a","Fragments":["map"]},{"Key":"map operation,","Fragments":["think"]},{"Key":"operation, think","Fragments":["to"]},{"Key":"think to","Fragments":["yourself"]},{"Key":"to yourself","Fragments":["\"flatMap\"."]},{"Key":" yeah,","Fragments":["I"]},{"Key":"yeah, I","Fragments":["noticed"]},{"Key":"noticed from","Fragments":["the"]},{"Key":"built-in function","Fragments":["```containsSlice```."]},{"Key":"can re-implement","Fragments":["(or"]},{"Key":"re-implement (or","Fragments":["just"]},{"Key":"(or just","Fragments":["use"]},{"Key":"feel lazy","Fragments":[":-)"]},{"Key":"lazy :-)","Fragments":["that"]},{"Key":":-) that","Fragments":["one"]},{"Key":"one and","Fragments":["use","unlimited"]},{"Key":"two recursive","Fragments":["functions"]},{"Key":"recursive functions","Fragments":["and"]},{"Key":"That being","Fragments":["said,"]},{"Key":"being said,","Fragments":["it"]},{"Key":"still felt","Fragments":["like"]},{"Key":"like an","Fragments":["interesting"]},{"Key":"interesting exercise","Fragments":["to"]},{"Key":"re-implement the","Fragments":["`containSlice`"]},{"Key":"the `containSlice`","Fragments":["(and"]},{"Key":"`containSlice` (and","Fragments":["`startsWith`"]},{"Key":"(and `startsWith`","Fragments":["as"]},{"Key":"`startsWith` as","Fragments":["you"]},{"Key":"for cleanedUp","Fragments":["I'd"]},{"Key":"cleanedUp I'd","Fragments":["go"]},{"Key":"I'd go","Fragments":["with","for"]},{"Key":"with whitelisting","Fragments":["characters"]},{"Key":"whitelisting characters","Fragments":["instead"]},{"Key":"of blacklisting.","Fragments":["For"]},{"Key":"blacklisting. For","Fragments":["example"]},{"Key":"example using","Fragments":["regular"]},{"Key":"using regular","Fragments":["expressions.","expressions","expressions","expresssions,"]},{"Key":"See some","Fragments":["other"]},{"Key":"other users","Fragments":["code"]},{"Key":"users code","Fragments":["for"]},{"Key":"now added","Fragments":["some"]},{"Key":"added some","Fragments":["more"]},{"Key":"more tail","Fragments":["recursion"]},{"Key":"Thanks. Good","Fragments":["point."]},{"Key":"point. I","Fragments":["used"]},{"Key":"used your","Fragments":["map","solution"]},{"Key":"map adding","Fragments":["method"]},{"Key":"adding method","Fragments":[":)"]},{"Key":"you follow","Fragments":["the"]},{"Key":"the maxim","Fragments":["to"]},{"Key":"maxim to","Fragments":["delay"]},{"Key":"to delay","Fragments":["the"]},{"Key":"delay the","Fragments":["blocking"]},{"Key":"blocking ```Await.result```","Fragments":["call"]},{"Key":"```Await.result``` call","Fragments":["to"]},{"Key":"possible moment","Fragments":["you"]},{"Key":"moment you","Fragments":["could"]},{"Key":"could rather","Fragments":["use"]},{"Key":"use ```Future.fold```","Fragments":["instead"]},{"Key":"```Future.fold``` instead","Fragments":["of"]},{"Key":"believe the","Fragments":["for"]},{"Key":"comprehension solution","Fragments":["is"]},{"Key":"a tad","Fragments":["more"]},{"Key":"tad more","Fragments":["readable."]},{"Key":"readable. What","Fragments":["do"]},{"Key":"style again","Fragments":["-"]},{"Key":"again -","Fragments":["w/o"]},{"Key":"- w/o","Fragments":["mutable"]},{"Key":"w/o mutable","Fragments":["Maps"]},{"Key":"mutable Maps","Fragments":["and"]},{"Key":"and foreach?","Fragments":[":-)"]},{"Key":"always two","Fragments":["choices"]},{"Key":"two choices","Fragments":["when"]},{"Key":"choices when","Fragments":["it"]},{"Key":"to mutable","Fragments":["state:"]},{"Key":"mutable state:","Fragments":["You"]},{"Key":"state: You","Fragments":["can"]},{"Key":"your case,","Fragments":["or"]},{"Key":"case, or","Fragments":["you"]},{"Key":"or you","Fragments":["can"]},{"Key":"```var``` with","Fragments":["an"]},{"Key":"The latter","Fragments":["possibility"]},{"Key":"latter possibility","Fragments":["might"]},{"Key":"possibility might","Fragments":["be"]},{"Key":"easier here","Fragments":["as","IMHO."]},{"Key":"here as","Fragments":["you","the"]},{"Key":"then don't","Fragments":["need"]},{"Key":"convert to","Fragments":["an","a"]},{"Key":"good that","Fragments":["you"]},{"Key":"you recognized","Fragments":["the"]},{"Key":"recognized the","Fragments":["problem"]},{"Key":"love this,","Fragments":["but"]},{"Key":"but see","Fragments":["the"]},{"Key":"comments in","Fragments":["the"]},{"Key":"Formatting is","Fragments":["from"]},{"Key":"from IntelliJ","Fragments":["-"]},{"Key":"IntelliJ -","Fragments":["is"]},{"Key":"- is","Fragments":["this","the"]},{"Key":"this idiomatic","Fragments":["formatting?"]},{"Key":"Seems godo","Fragments":["to"]},{"Key":"godo to","Fragments":["me."]},{"Key":" @eldridge,","Fragments":["thanks"]},{"Key":"@eldridge, thanks","Fragments":["for"]},{"Key":" Keep","Fragments":["your"]},{"Key":"Keep your","Fragments":["hands"]},{"Key":"Your use","Fragments":["of"]},{"Key":"of guard","Fragments":["clauses"]},{"Key":"clauses in","Fragments":["the"]},{"Key":"case threw","Fragments":["me"]},{"Key":"threw me","Fragments":["a"]},{"Key":"bit since","Fragments":["the","for"]},{"Key":"cases aren't","Fragments":["doing"]},{"Key":"aren't doing","Fragments":["any"]},{"Key":"doing any","Fragments":["destructuring,"]},{"Key":"any destructuring,","Fragments":["but"]},{"Key":"destructuring, but","Fragments":["I"]},{"Key":"works now","Fragments":["and"]},{"Key":"now and","Fragments":["I"]},{"Key":"lot. Using","Fragments":["`perfect`"]},{"Key":"Using `perfect`","Fragments":["instead"]},{"Key":"`perfect` instead","Fragments":["of"]},{"Key":"of `_`","Fragments":["is"]},{"Key":"`_` is","Fragments":["an"]},{"Key":"interesting documentation","Fragments":["tool."]},{"Key":" Best","Fragments":["solution"]},{"Key":"Best solution","Fragments":["to"]},{"Key":"to Bob","Fragments":["I"]},{"Key":"Bob I","Fragments":["have"]},{"Key":"seen thus","Fragments":["far"]},{"Key":"thus far","Fragments":[":)"]},{"Key":"have now","Fragments":["uploaded"]},{"Key":"now uploaded","Fragments":["a"]},{"Key":"uploaded a","Fragments":["second"]},{"Key":"second iteration","Fragments":["using","for"]},{"Key":"iteration using","Fragments":["Scala's","only"]},{"Key":"using Scala's","Fragments":["string"]},{"Key":"Scala's string","Fragments":["interpolation.","interpolation."]},{"Key":" (main","Fragments":["method"]},{"Key":"(main method","Fragments":["was"]},{"Key":"method was","Fragments":["only"]},{"Key":"only there","Fragments":["because"]},{"Key":"there because","Fragments":["I"]},{"Key":"I played","Fragments":["around"]},{"Key":"played around","Fragments":["a"]},{"Key":"bit with","Fragments":["sbt"]},{"Key":"with sbt","Fragments":["commands"]},{"Key":"sbt commands","Fragments":["(sbt"]},{"Key":"commands (sbt","Fragments":["run"]},{"Key":"(sbt run","Fragments":["amongst"]},{"Key":"run amongst","Fragments":["others),"]},{"Key":"amongst others),","Fragments":["but"]},{"Key":"others), but","Fragments":["I"]},{"Key":"have removed","Fragments":["it"]},{"Key":"removed it","Fragments":["before"]},{"Key":"it before","Fragments":["uploading)","submitting"]},{"Key":" Hey","Fragments":[":)"]},{"Key":"of concat","Fragments":["please"]},{"Key":"concat please","Fragments":["see"]},{"Key":"please see","Fragments":["Scala's","previous"]},{"Key":"see Scala's","Fragments":["string"]},{"Key":"is main","Fragments":["method"]},{"Key":"main method","Fragments":["used"]},{"Key":"method used","Fragments":["for"]},{"Key":"used for","Fragments":["in","this.","cases"]},{"Key":"for in","Fragments":["this","next"]},{"Key":"the typo,","Fragments":["I'll"]},{"Key":"typo, I'll","Fragments":["correct"]},{"Key":"I'll correct","Fragments":["it"]},{"Key":"correct it","Fragments":["before"]},{"Key":"before submitting","Fragments":["again!"]},{"Key":" Hum...","Fragments":["I"]},{"Key":"Hum... I","Fragments":["was"]},{"Key":"remember and","Fragments":["easier"]},{"Key":"last character","Fragments":["(or,"]},{"Key":"character (or,","Fragments":["more"]},{"Key":"(or, more","Fragments":["generally,"]},{"Key":"more generally,","Fragments":["the"]},{"Key":"generally, the","Fragments":["last"]},{"Key":"last element","Fragments":["of"]},{"Key":"element of","Fragments":["a"]},{"Key":"a collection)","Fragments":["but"]},{"Key":"collection) but","Fragments":["I've"]},{"Key":"I've completely","Fragments":["forgot"]},{"Key":"completely forgot","Fragments":["about"]},{"Key":"about `last`.","Fragments":["You"]},{"Key":"`last`. You","Fragments":["are"]},{"Key":"right, `s.last`","Fragments":["is"]},{"Key":"`s.last` is","Fragments":["shorter,"]},{"Key":"shorter, meaningful","Fragments":["and"]},{"Key":"meaningful and","Fragments":["gets"]},{"Key":"and gets","Fragments":["the"]},{"Key":"gets the","Fragments":["job"]},{"Key":"the job","Fragments":["done!"]},{"Key":" About","Fragments":["methods","lazy","having"]},{"Key":"About methods","Fragments":["with"]},{"Key":"with few","Fragments":["lines"]},{"Key":"few lines","Fragments":["or"]},{"Key":"lines or","Fragments":["simple"]},{"Key":"or simple","Fragments":["expressions:"]},{"Key":"simple expressions:","Fragments":["I"]},{"Key":"expressions: I","Fragments":["think"]},{"Key":"the \"test\"","Fragments":["to"]},{"Key":"\"test\" to","Fragments":["decide"]},{"Key":"decide if","Fragments":["it"]},{"Key":"is ok","Fragments":["to","for"]},{"Key":"method so","Fragments":["simple","that"]},{"Key":"simple as","Fragments":["a","splitting","possible."]},{"Key":"liner is","Fragments":["if"]},{"Key":"name helps","Fragments":["your"]},{"Key":"helps your","Fragments":["code"]},{"Key":"code be","Fragments":["more"]},{"Key":"more meaningful.","Fragments":["If"]},{"Key":"meaningful. If","Fragments":["so,"]},{"Key":"so, it","Fragments":["pays"]},{"Key":"the refactoring","Fragments":["and"]},{"Key":"refactoring and","Fragments":["extract"]},{"Key":"and extract","Fragments":["a"]},{"Key":"extract a","Fragments":["simple"]},{"Key":"simple expression","Fragments":["into"]},{"Key":"expression into","Fragments":["its"]},{"Key":"into its","Fragments":["own"]},{"Key":"a typo:","Fragments":["\"Whoa\""]},{"Key":"typo: \"Whoa\"","Fragments":["instead"]},{"Key":"\"Whoa\" instead","Fragments":["of"]},{"Key":"Also the","Fragments":["getFinalPunctuation","accumulator,"]},{"Key":"the getFinalPunctuation","Fragments":["name"]},{"Key":"getFinalPunctuation name","Fragments":["is"]},{"Key":"bit long","Fragments":["for"]},{"Key":"long for","Fragments":["it"]},{"Key":"used just","Fragments":["once."]},{"Key":"def isQuestion(s:","Fragments":["String)"]},{"Key":"isQuestion(s: String)","Fragments":["="]},{"Key":"= s.last","Fragments":["=="]},{"Key":"s.last ==","Fragments":["'?'"]},{"Key":"works just","Fragments":["as"]},{"Key":"well in","Fragments":["this"]},{"Key":"this use","Fragments":["case."]},{"Key":"simplicity in","Fragments":["your"]},{"Key":"your approach.","Fragments":["Much"]},{"Key":"approach. Much","Fragments":["easier"]},{"Key":"Much easier","Fragments":["to"]},{"Key":"read than","Fragments":["my"]},{"Key":"first try.","Fragments":["Since"]},{"Key":"try. Since","Fragments":["I'm"]},{"Key":"Since I'm","Fragments":["more"]},{"Key":"I'm more","Fragments":["a","than"]},{"Key":"of match","Fragments":["and"]},{"Key":"and case,","Fragments":["I"]},{"Key":"I took","Fragments":["your"]},{"Key":"took your","Fragments":["approach"]},{"Key":"approach and","Fragments":["modified"]},{"Key":"and modified","Fragments":["it:"]},{"Key":"modified it:","Fragments":["http://exercism.io/submissions/0c3b173c99ccf9c12d9ca625"]},{"Key":"Consider calling","Fragments":["array.length"]},{"Key":"calling array.length","Fragments":["instead"]},{"Key":"array.length instead","Fragments":["of"]},{"Key":"While such","Fragments":["calls"]},{"Key":"such calls","Fragments":["are"]},{"Key":"calls are","Fragments":["legitimate,"]},{"Key":"are legitimate,","Fragments":["they"]},{"Key":"legitimate, they","Fragments":["require"]},{"Key":"require an","Fragments":["additional"]},{"Key":"additional implicit","Fragments":["conversion"]},{"Key":"to SeqLike","Fragments":["to"]},{"Key":"SeqLike to","Fragments":["be"]},{"Key":" Considering","Fragments":["the"]},{"Key":"Considering the","Fragments":["common"]},{"Key":"the common","Fragments":["use"]},{"Key":"common use","Fragments":["cases,"]},{"Key":"use cases,","Fragments":["calling"]},{"Key":"cases, calling","Fragments":["length"]},{"Key":"calling length","Fragments":["on"]},{"Key":"length on","Fragments":["arrays"]},{"Key":"on arrays","Fragments":["and"]},{"Key":"arrays and","Fragments":["strings"]},{"Key":"and strings","Fragments":["may"]},{"Key":"strings may","Fragments":["provide"]},{"Key":"may provide","Fragments":["significant"]},{"Key":"provide significant","Fragments":["advantages."]},{"Key":"Did not","Fragments":["know"]},{"Key":"what \"identity\"","Fragments":["is,"]},{"Key":"\"identity\" is,","Fragments":["good"]},{"Key":"is, good","Fragments":["find!"]},{"Key":"can `map`","Fragments":["(and"]},{"Key":"`map` (and","Fragments":["`flatMap`)"]},{"Key":"(and `flatMap`)","Fragments":["maps"]},{"Key":"`flatMap`) maps","Fragments":["to"]},{"Key":"maps to","Fragments":["transform"]},{"Key":"The key","Fragments":["to","to"]},{"Key":"key to","Fragments":["understanding","handling"]},{"Key":"to understanding","Fragments":["`flatMap`"]},{"Key":"understanding `flatMap`","Fragments":["is"]},{"Key":"`flatMap` is","Fragments":["that"]},{"Key":"is focussing","Fragments":["on"]},{"Key":"focussing on","Fragments":["one"]},{"Key":"one pair","Fragments":["at"]},{"Key":"pair at","Fragments":["a"]},{"Key":"a time,","Fragments":["transforming"]},{"Key":"time, transforming","Fragments":["it"]},{"Key":"transforming it","Fragments":["into"]},{"Key":"into zero","Fragments":["or"]},{"Key":"zero or","Fragments":["more"]},{"Key":"more equivalent","Fragments":["pairings."]},{"Key":"equivalent pairings.","Fragments":["Returning"]},{"Key":"pairings. Returning","Fragments":["zero"]},{"Key":"Returning zero","Fragments":["pairings"]},{"Key":"zero pairings","Fragments":["would"]},{"Key":"pairings would","Fragments":["delete"]},{"Key":"would delete","Fragments":["the"]},{"Key":"pair from","Fragments":["the"]},{"Key":"the output","Fragments":["map,","map.","data."]},{"Key":"output map,","Fragments":["returning"]},{"Key":"map, returning","Fragments":["more"]},{"Key":"returning more","Fragments":["than"]},{"Key":"one pairing","Fragments":["would"]},{"Key":"pairing would","Fragments":["add"]},{"Key":"would add","Fragments":["additional","a"]},{"Key":"add additional","Fragments":["pairings"]},{"Key":"additional pairings","Fragments":["to"]},{"Key":"pairings to","Fragments":["the"]},{"Key":"output map.","Fragments":["For"]},{"Key":"map. For","Fragments":["example"]},{"Key":"example the","Fragments":["following","all-zero"]},{"Key":"following code","Fragments":["transforms"]},{"Key":"code transforms","Fragments":["a"]},{"Key":"transforms a","Fragments":["map"]},{"Key":"map by","Fragments":["adding"]},{"Key":"the inverted","Fragments":["pairs:"]},{"Key":"val input","Fragments":["="]},{"Key":"input =","Fragments":["Map(0"]},{"Key":"= Map(0","Fragments":["-\u003e"]},{"Key":"Map(0 -\u003e","Fragments":["1,","1,"]},{"Key":"1, 2","Fragments":["-\u003e"]},{"Key":"2 -\u003e","Fragments":["3)","3,"]},{"Key":" input","Fragments":["flatMap"]},{"Key":"input flatMap","Fragments":["{"]},{"Key":"flatMap {","Fragments":["case"]},{"Key":"case (k,","Fragments":["v)"]},{"Key":"(k, v)","Fragments":["=\u003e"]},{"Key":"v) =\u003e","Fragments":["List(k"]},{"Key":"=\u003e List(k","Fragments":["-\u003e"]},{"Key":"List(k -\u003e","Fragments":["v,"]},{"Key":"-\u003e v,","Fragments":["v"]},{"Key":"v, v","Fragments":["-\u003e"]},{"Key":"v -\u003e","Fragments":["k)"]},{"Key":"-\u003e k)","Fragments":["}"]},{"Key":"// =\u003e","Fragments":["Map(0"]},{"Key":"=\u003e Map(0","Fragments":["-\u003e"]},{"Key":"1, 1","Fragments":["-\u003e"]},{"Key":"1 -\u003e","Fragments":["0,"]},{"Key":"0, 2","Fragments":["-\u003e"]},{"Key":"-\u003e 3,","Fragments":["3"]},{"Key":"3, 3","Fragments":["-\u003e"]},{"Key":"3 -\u003e","Fragments":["2)"]},{"Key":"Thanks. `foldLeft`","Fragments":["was"]},{"Key":"`foldLeft` was","Fragments":["definitely"]},{"Key":"was definitely","Fragments":["not"]},{"Key":"the cleanest","Fragments":["way","solution"]},{"Key":"cleanest way","Fragments":["to"]},{"Key":"this operation,","Fragments":["but","so"]},{"Key":"operation, but","Fragments":["I"]},{"Key":"still somewhat","Fragments":["pleased"]},{"Key":"somewhat pleased","Fragments":["that"]},{"Key":"pleased that","Fragments":["I"]},{"Key":"I managed","Fragments":["to","to"]},{"Key":"managed to","Fragments":["get","improve"]},{"Key":"initially had","Fragments":["some"]},{"Key":"some trouble","Fragments":["understanding","with"]},{"Key":"understanding exactly","Fragments":["how"]},{"Key":"use `flatMap`,","Fragments":["but"]},{"Key":"`flatMap`, but","Fragments":["I'll"]},{"Key":"but I'll","Fragments":["try"]},{"Key":"give this","Fragments":["exercise"]},{"Key":"exercise another","Fragments":["go"]},{"Key":"another go","Fragments":["in"]},{"Key":"go in","Fragments":["a","an"]},{"Key":"few days","Fragments":["(after"]},{"Key":"days (after","Fragments":["I've"]},{"Key":"(after I've","Fragments":["forgotten"]},{"Key":"I've forgotten","Fragments":["details"]},{"Key":"forgotten details","Fragments":["of"]},{"Key":"details of","Fragments":["some"]},{"Key":"other neat","Fragments":["solutions"]},{"Key":"neat solutions","Fragments":["I"]},{"Key":"solutions I","Fragments":["saw"]},{"Key":"saw to","Fragments":["this"]},{"Key":"this problem,","Fragments":["which"]},{"Key":"problem, which","Fragments":["are"]},{"Key":"which are","Fragments":["still","all"]},{"Key":"still stuck","Fragments":["in"]},{"Key":"my mind","Fragments":["at"]},{"Key":"mind at","Fragments":["the","home"]},{"Key":"interesting use","Fragments":["of"]},{"Key":"% x","Fragments":["=="]},{"Key":"x ==","Fragments":["0```."]},{"Key":" Condirion","Fragments":["is"]},{"Key":"Condirion is","Fragments":["from"]},{"Key":"from internet.","Fragments":["I"]},{"Key":"internet. I","Fragments":["dont"]},{"Key":"I dont","Fragments":["like"]},{"Key":"dont like","Fragments":["tasks"]},{"Key":"like tasks","Fragments":["like"]},{"Key":"tasks like","Fragments":["leap"]},{"Key":"like leap","Fragments":["year."]},{"Key":"you simplify","Fragments":["```square(_)```"]},{"Key":"simplify ```square(_)```","Fragments":["to"]},{"Key":"```square(_)``` to","Fragments":["```square```?"]},{"Key":"you four","Fragments":["the"]},{"Key":"four the","Fragments":["feedback."]},{"Key":" Thank's","Fragments":["and"]},{"Key":"Thank's and","Fragments":["advance."]},{"Key":"Hmm, I","Fragments":["find"]},{"Key":"bit challenging","Fragments":["to"]},{"Key":"challenging to","Fragments":["follow."]},{"Key":"to follow.","Fragments":["A","Some"]},{"Key":"follow. A","Fragments":["few"]},{"Key":"few quick","Fragments":["thoughts:"]},{"Key":"the behavior","Fragments":["of"]},{"Key":"of `isAnagram`","Fragments":["so"]},{"Key":"`isAnagram` so","Fragments":["that"]},{"Key":"line 14","Fragments":["you"]},{"Key":"14 you","Fragments":["could"]},{"Key":"on `isAnagram(entry,","Fragments":["x)`"]},{"Key":"`isAnagram(entry, x)`","Fragments":["?"]},{"Key":"* A","Fragments":["`match/case`"]},{"Key":"A `match/case`","Fragments":["on"]},{"Key":"`match/case` on","Fragments":["a"]},{"Key":"boolean is","Fragments":["equivalent"]},{"Key":"is equivalent","Fragments":["to"]},{"Key":"an `if/else`.","Fragments":["Scala"]},{"Key":"`if/else`. Scala","Fragments":["folks"]},{"Key":"Scala folks","Fragments":["love"]},{"Key":"folks love","Fragments":["`match/case`"]},{"Key":"love `match/case`","Fragments":["but"]},{"Key":"`match/case` but","Fragments":["I"]},{"Key":"I suspect","Fragments":["the"]},{"Key":"suspect the","Fragments":["test"]},{"Key":"line 10","Fragments":["will"]},{"Key":"10 will","Fragments":["fail"]},{"Key":"some pathological","Fragments":["cases,"]},{"Key":"pathological cases,","Fragments":["e.g."]},{"Key":"cases, e.g.","Fragments":["`\"aaa\"`"]},{"Key":"e.g. `\"aaa\"`","Fragments":["and"]},{"Key":"`\"aaa\"` and","Fragments":["`\"abb\"`"]},{"Key":"and `\"abb\"`","Fragments":["(4"]},{"Key":"`\"abb\"` (4","Fragments":["a's"]},{"Key":"(4 a's","Fragments":["and"]},{"Key":"a's and","Fragments":["2"]},{"Key":"and 2","Fragments":["b's)."]},{"Key":"2 b's).","Fragments":["One"]},{"Key":"b's). One","Fragments":["way"]},{"Key":"One way","Fragments":["to"]},{"Key":"to both","Fragments":["enhance"]},{"Key":"both enhance","Fragments":["readability"]},{"Key":"enhance readability","Fragments":["(and"]},{"Key":"(and be","Fragments":["more"]},{"Key":"more confident","Fragments":["in"]},{"Key":"confident in","Fragments":["the"]},{"Key":"the result)","Fragments":["is"]},{"Key":"result) is","Fragments":["to"]},{"Key":"compare some","Fragments":["\"canonical\""]},{"Key":"some \"canonical\"","Fragments":["transformation"]},{"Key":"\"canonical\" transformation","Fragments":["of"]},{"Key":"transformation of","Fragments":["the","the"]},{"Key":"the word,","Fragments":["where"]},{"Key":"word, where","Fragments":["anagrams"]},{"Key":"where anagrams","Fragments":["will"]},{"Key":"anagrams will","Fragments":["look"]},{"Key":"look the","Fragments":["same"]},{"Key":"same transformed","Fragments":["and"]},{"Key":"transformed and","Fragments":["non-anagrams"]},{"Key":"and non-anagrams","Fragments":["won't."]},{"Key":"non-anagrams won't.","Fragments":["Looking"]},{"Key":"won't. Looking","Fragments":["over"]},{"Key":"Looking over","Fragments":["others'"]},{"Key":"over others'","Fragments":["solutions,"]},{"Key":"others' solutions,","Fragments":["some"]},{"Key":"solutions, some","Fragments":["sort"]},{"Key":"the upper-cased","Fragments":["letters;"]},{"Key":"upper-cased letters;","Fragments":["others"]},{"Key":"letters; others","Fragments":["create"]},{"Key":"others create","Fragments":["a"]},{"Key":"a `Map[Char,","Fragments":["Int]`"]},{"Key":"`Map[Char, Int]`","Fragments":["of"]},{"Key":"Int]` of","Fragments":["letter"]},{"Key":"of letter","Fragments":["counts."]},{"Key":" moved","Fragments":["prime","type"]},{"Key":"moved prime","Fragments":["factor"]},{"Key":"prime factor","Fragments":["calculation","thing,"]},{"Key":"factor calculation","Fragments":["code"]},{"Key":"calculation code","Fragments":["to"]},{"Key":"to package","Fragments":["object."]},{"Key":" Ha!","Fragments":["the"]},{"Key":"Ha! the","Fragments":["same"]},{"Key":"same happened","Fragments":["to"]},{"Key":"happened to","Fragments":["me"]},{"Key":"the crypto-square","Fragments":[";)"]},{"Key":" @laurine","Fragments":["thx!"]},{"Key":"at your","Fragments":["solution","solution","code"]},{"Key":"can only","Fragments":["agree."]},{"Key":"only agree.","Fragments":[":-)"]},{"Key":"what happens","Fragments":["when"]},{"Key":"when one","Fragments":["starts"]},{"Key":"one starts","Fragments":["out"]},{"Key":"starts out","Fragments":["w/"]},{"Key":"out w/","Fragments":["some"]},{"Key":"w/ some","Fragments":["bad","strange"]},{"Key":"some bad","Fragments":["idea"]},{"Key":"bad idea","Fragments":["and"]},{"Key":"and carries","Fragments":["it"]},{"Key":"carries it","Fragments":["through"]},{"Key":"it through","Fragments":["at"]},{"Key":"through at","Fragments":["all"]},{"Key":"Seems I","Fragments":["was"]},{"Key":"too fixated","Fragments":["on"]},{"Key":"this prime","Fragments":["factor"]},{"Key":"factor thing,","Fragments":["not"]},{"Key":"thing, not","Fragments":["realizing"]},{"Key":"realizing that","Fragments":["a"]},{"Key":"simple ```%```","Fragments":["will"]},{"Key":"```%``` will","Fragments":["do"]},{"Key":"huge overkill","Fragments":["for"]},{"Key":"overkill for","Fragments":["what"]},{"Key":"problem definition","Fragments":["was!"]},{"Key":"think possibly","Fragments":["what"]},{"Key":"possibly what","Fragments":["you"]},{"Key":"need is","Fragments":["an"]},{"Key":"an \"object\"","Fragments":["rather"]},{"Key":"\"object\" rather","Fragments":["than"]},{"Key":" @darwin","Fragments":["@darwin"]},{"Key":"@darwin @darwin","Fragments":["I"]},{"Key":"@darwin I","Fragments":["am"]},{"Key":"am trying","Fragments":["to","to"]},{"Key":"second Scala","Fragments":["exercise,"]},{"Key":"but am","Fragments":["receiving"]},{"Key":"am receiving","Fragments":["the"]},{"Key":"receiving the","Fragments":["error"]},{"Key":"error \"/scala/hamming/src/test/scala/hamming_test.scala:5:","Fragments":["not"]},{"Key":"\"/scala/hamming/src/test/scala/hamming_test.scala:5: not","Fragments":["found:"]},{"Key":"value Hamming\".","Fragments":["Do"]},{"Key":"Hamming\". Do","Fragments":["you"]},{"Key":"do to","Fragments":["make"]},{"Key":"this work","Fragments":["for"]},{"Key":"for me?","Fragments":["I"]},{"Key":"me? I","Fragments":["have"]},{"Key":"a file","Fragments":["src/main/scala/hamming.scala,"]},{"Key":"file src/main/scala/hamming.scala,","Fragments":["with"]},{"Key":"src/main/scala/hamming.scala, with","Fragments":["a"]},{"Key":"class Hamming()","Fragments":["in"]},{"Key":"Hamming() in","Fragments":["it."]},{"Key":"in it.","Fragments":["What","But"]},{"Key":"it. What","Fragments":["rookie"]},{"Key":"What rookie","Fragments":["error"]},{"Key":"rookie error","Fragments":["will"]},{"Key":"error will","Fragments":["I"]},{"Key":"will I","Fragments":["be"]},{"Key":"I be","Fragments":["making"]},{"Key":"be making","Fragments":["here?"]},{"Key":"the ```update(update(...```","Fragments":["looks"]},{"Key":"```update(update(...``` looks","Fragments":["a"]},{"Key":"bit fishy.","Fragments":[":-)"]},{"Key":"also, IMHO","Fragments":["the"]},{"Key":"IMHO the","Fragments":["pattern","question"]},{"Key":"matching in","Fragments":["```canAttack```","case","#1","your"]},{"Key":"in ```canAttack```","Fragments":["is"]},{"Key":"```canAttack``` is","Fragments":["a"]},{"Key":"The conversion","Fragments":["to"]},{"Key":"to String","Fragments":["and","that"]},{"Key":"then to","Fragments":["Double"]},{"Key":"to Double","Fragments":["looks"]},{"Key":"Double looks","Fragments":["a"]},{"Key":"bit strange","Fragments":["to","here:"]},{"Key":"could follow","Fragments":["the"]},{"Key":"the DRY","Fragments":["principle"]},{"Key":"DRY principle","Fragments":["and"]},{"Key":"principle and","Fragments":["have"]},{"Key":"could introduce","Fragments":["some"]},{"Key":"introduce some","Fragments":["constants","code"]},{"Key":"some constants","Fragments":["instead"]},{"Key":"constants instead","Fragments":["of"]},{"Key":"of magic","Fragments":["numbers"]},{"Key":"magic numbers","Fragments":["(or"]},{"Key":"numbers (or","Fragments":["resp."]},{"Key":"(or resp.","Fragments":["function"]},{"Key":"resp. function","Fragments":["arguments"]},{"Key":"function arguments","Fragments":["w/"]},{"Key":"arguments w/","Fragments":["good"]},{"Key":"They are","Fragments":["indeed,","Java"]},{"Key":"are indeed,","Fragments":["that"]},{"Key":"indeed, that","Fragments":["`synchronized`"]},{"Key":"that `synchronized`","Fragments":["is"]},{"Key":"is superfluous.","Fragments":["Thank"]},{"Key":"superfluous. Thank","Fragments":["you"]},{"Key":"hope that","Fragments":["assignments"]},{"Key":"that assignments","Fragments":["are"]},{"Key":"assignments are","Fragments":["atomic"]},{"Key":"atomic so","Fragments":["that"]},{"Key":"already have","Fragments":["decided"]},{"Key":"have decided","Fragments":["to"]},{"Key":"use related","Fragments":["collection"]},{"Key":"related collection","Fragments":["functions"]},{"Key":"might as","Fragments":["well","well"]},{"Key":"well just","Fragments":["use"]},{"Key":"use `sliding`.","Fragments":[":-)"]},{"Key":"(I wrote","Fragments":["an"]},{"Key":"wrote an","Fragments":["implementation"]},{"Key":"own b/c","Fragments":["of"]},{"Key":"b/c of","Fragments":["a","the"]},{"Key":" Wow","Fragments":["yeah"]},{"Key":"Wow yeah","Fragments":["that"]},{"Key":"yeah that","Fragments":["was"]},{"Key":"a terribly","Fragments":["worded"]},{"Key":"terribly worded","Fragments":["question."]},{"Key":"worded question.","Fragments":["I"]},{"Key":"question. I","Fragments":["meant"]},{"Key":"nitpick that","Fragments":["you"]},{"Key":"you aren't","Fragments":["checking","sure,"]},{"Key":"aren't checking","Fragments":["first"]},{"Key":"checking first","Fragments":["that"]},{"Key":"first that","Fragments":["a","would"]},{"Key":"question that","Fragments":["is"]},{"Key":"in all","Fragments":["caps"]},{"Key":"all caps","Fragments":["should","question"]},{"Key":"caps should","Fragments":["be"]},{"Key":"as yelling,","Fragments":["since"]},{"Key":"yelling, since","Fragments":["you"]},{"Key":"mark first.","Fragments":["I"]},{"Key":"first. I","Fragments":["like"]},{"Key":"your interesting","Fragments":["structure"]},{"Key":"interesting structure","Fragments":["though."]},{"Key":"structure though.","Fragments":["Is"]},{"Key":"though. Is","Fragments":["your"]},{"Key":"Is your","Fragments":["use"]},{"Key":"of PartialFunction","Fragments":["just"]},{"Key":"PartialFunction just","Fragments":["to"]},{"Key":"to catch","Fragments":["errors"]},{"Key":"catch errors","Fragments":["if"]},{"Key":"errors if","Fragments":["someone"]},{"Key":"someone inputs","Fragments":["a"]},{"Key":"inputs a","Fragments":["non-string"]},{"Key":"a non-string","Fragments":["argument?"]},{"Key":"The `.r`","Fragments":["method"]},{"Key":"`.r` method","Fragments":["on"]},{"Key":"on strings","Fragments":["creates"]},{"Key":"strings creates","Fragments":["a"]},{"Key":"expression, which","Fragments":["you"]},{"Key":"also pattern","Fragments":["match"]},{"Key":"match on,","Fragments":["see"]},{"Key":"on, see","Fragments":["http://www.scala-lang.org/api/current/index.html#scala.util.matching.Regex"]},{"Key":"see http://www.scala-lang.org/api/current/index.html#scala.util.matching.Regex","Fragments":["for"]},{"Key":"http://www.scala-lang.org/api/current/index.html#scala.util.matching.Regex for","Fragments":["more"]},{"Key":"for more","Fragments":["info.","details."]},{"Key":"more info.","Fragments":["I'm"]},{"Key":"info. I'm","Fragments":["not"]},{"Key":"understood your","Fragments":["second"]},{"Key":"second question","Fragments":["correcltly."]},{"Key":"question correcltly.","Fragments":["Do"]},{"Key":"correcltly. Do","Fragments":["you"]},{"Key":"match questions","Fragments":["which"]},{"Key":"questions which","Fragments":["are"]},{"Key":"are all","Fragments":["uppercased?","upper"]},{"Key":"to scala,","Fragments":["what","is"]},{"Key":"scala, what","Fragments":["does"]},{"Key":"the .r","Fragments":["mean?"]},{"Key":"Also how","Fragments":["to"]},{"Key":"that something","Fragments":["is"]},{"Key":"something is","Fragments":["a"]},{"Key":"question if","Fragments":["an"]},{"Key":"if an","Fragments":["all","exception"]},{"Key":"caps question","Fragments":["is"]},{"Key":"is defined","Fragments":["not","on"]},{"Key":"defined not","Fragments":["to"]},{"Key":"be one","Fragments":["in"]},{"Key":"for-comprehension you","Fragments":["can","could"]},{"Key":"also map","Fragments":["over"]},{"Key":"map over","Fragments":["a"]},{"Key":"Range like","Fragments":["so:","```'A'"]},{"Key":" ```(1","Fragments":["to"]},{"Key":"to 64)","Fragments":["map"]},{"Key":"64) map","Fragments":["...```"]},{"Key":" (or","Fragments":["you"]},{"Key":"(or you","Fragments":["could"]},{"Key":"the ```var```,","Fragments":["and"]},{"Key":"```var```, and","Fragments":["it"]},{"Key":"doesn't look","Fragments":["so"]},{"Key":"like Java","Fragments":["code?!","code."]},{"Key":"Java code?!","Fragments":[":-)"]},{"Key":"may add","Fragments":["a"]},{"Key":"add a","Fragments":["cache?","responder","check","method","new","private","`copyAnd`method","number"]},{"Key":"a cache?","Fragments":[";-)"]},{"Key":"Well, it's","Fragments":["still"]},{"Key":"it's still","Fragments":["about"]},{"Key":"still about","Fragments":["10"]},{"Key":"about 10","Fragments":["times"]},{"Key":"10 times","Fragments":["shorter.","slower"]},{"Key":"times shorter.","Fragments":["But"]},{"Key":"shorter. But","Fragments":["there"]},{"Key":"But there","Fragments":["is"]},{"Key":"a clean","Fragments":["way","solution"]},{"Key":"clean way","Fragments":["!"]},{"Key":"way !","Fragments":["Look"]},{"Key":"! Look","Fragments":["at"]},{"Key":"Consider using","Fragments":["groupBy","`drop(1)`","small","``foldLeft``","a"]},{"Key":"using groupBy","Fragments":["instead","+"]},{"Key":"groupBy instead","Fragments":["of"]},{"Key":"of foldLeft.","Fragments":["If"]},{"Key":"foldLeft. If","Fragments":["it"]},{"Key":"it weren't","Fragments":["for"]},{"Key":"weren't for","Fragments":["apostrophies"]},{"Key":"for apostrophies","Fragments":["(')"]},{"Key":"apostrophies (')","Fragments":["which"]},{"Key":"(') which","Fragments":["for"]},{"Key":"some weird","Fragments":["reason"]},{"Key":"weird reason","Fragments":["are"]},{"Key":"reason are","Fragments":["considered"]},{"Key":"are considered","Fragments":["punctuation"]},{"Key":"considered punctuation","Fragments":["in"]},{"Key":"punctuation in","Fragments":["Java,"]},{"Key":"in Java,","Fragments":["my","but"]},{"Key":"Java, my","Fragments":["solution"]},{"Key":"been very","Fragments":["elegant."]},{"Key":"Yeah, because","Fragments":["of"]},{"Key":"that ```\\n```","Fragments":["your"]},{"Key":"```\\n``` your","Fragments":["solution"]},{"Key":"of ```aggregate```.","Fragments":["perhaps"]},{"Key":"```aggregate```. perhaps","Fragments":["turn"]},{"Key":"perhaps turn","Fragments":["this"]},{"Key":"turn this","Fragments":["into"]},{"Key":"this into","Fragments":["parallel"]},{"Key":"into parallel","Fragments":["processing"]},{"Key":"parallel processing","Fragments":["and"]},{"Key":"processing and","Fragments":["tell"]},{"Key":"and tell","Fragments":["us"]},{"Key":"tell us","Fragments":["about"]},{"Key":"us about","Fragments":["it?"]},{"Key":" Redundant","Fragments":["case:"]},{"Key":"Redundant case:","Fragments":["not"]},{"Key":"case: not","Fragments":["a"]},{"Key":"Thanks @aniya","Fragments":["and"]},{"Key":"@aniya and","Fragments":["@aniya,"]},{"Key":"and @aniya,","Fragments":["I'll"]},{"Key":"@aniya, I'll","Fragments":["try"]},{"Key":"try pattern","Fragments":["matching!","matching."]},{"Key":"Try pattern","Fragments":["matching.","matching;"]},{"Key":"matching. The","Fragments":["easiest"]},{"Key":"The easiest","Fragments":["way"]},{"Key":"easiest way","Fragments":["is"]},{"Key":"like you","Fragments":["are"]},{"Key":"doing here,","Fragments":["but"]},{"Key":"with something","Fragments":["like:","a"]},{"Key":"s match","Fragments":["{"]},{"Key":"if (/*here","Fragments":["your","your"]},{"Key":"(/*here your","Fragments":["condition*/)","condition*/)"]},{"Key":"your condition*/)","Fragments":["=\u003e","=\u003e"]},{"Key":"Looks too","Fragments":["much"]},{"Key":"(and should)","Fragments":["use"]},{"Key":"should) use","Fragments":["\"==\""]},{"Key":"use \"==\"","Fragments":["instead"]},{"Key":"\"==\" instead","Fragments":["of"]},{"Key":"of equals","Fragments":["in"]},{"Key":"equals in","Fragments":["Scala."]},{"Key":"And \"return\"","Fragments":["should"]},{"Key":"\"return\" should","Fragments":["also"]},{"Key":"Scala adds","Fragments":["some"]},{"Key":"more useful","Fragments":["functions"]},{"Key":" Words","Fragments":["are"]},{"Key":"Words are","Fragments":["not"]},{"Key":"not anagrams","Fragments":["of"]},{"Key":"of themselves,","Fragments":["so"]},{"Key":"themselves, so","Fragments":["you"]},{"Key":"you reject","Fragments":["the"]},{"Key":"reject the","Fragments":["source"]},{"Key":"the source","Fragments":["word"]},{"Key":"source word","Fragments":["if"]},{"Key":"word if","Fragments":["it"]},{"Key":"is submitted","Fragments":["as"]},{"Key":"submitted as","Fragments":["a"]},{"Key":"match candidate.","Fragments":["For"]},{"Key":"candidate. For","Fragments":["example,"]},{"Key":"example, if","Fragments":["the"]},{"Key":"test word","Fragments":["is"]},{"Key":"word is","Fragments":["\"corn\","]},{"Key":"is \"corn\",","Fragments":["then"]},{"Key":"\"corn\", then","Fragments":["that"]},{"Key":"then that","Fragments":["anagram"]},{"Key":"that anagram","Fragments":["should"]},{"Key":"anagram should","Fragments":["not"]},{"Key":"not return","Fragments":["\"corn\""]},{"Key":"return \"corn\"","Fragments":["as"]},{"Key":"\"corn\" as","Fragments":["a"]},{"Key":"That condition","Fragments":["means"]},{"Key":"condition means","Fragments":["that"]},{"Key":"means that","Fragments":["words","it"]},{"Key":"that words","Fragments":["in"]},{"Key":"given sequence","Fragments":["that"]},{"Key":"sequence that","Fragments":["are"]},{"Key":"are exactly","Fragments":["the"]},{"Key":"initial word","Fragments":["should"]},{"Key":"word should","Fragments":["be"]},{"Key":"put that","Fragments":["condition","inside"]},{"Key":"that condition","Fragments":["in,"]},{"Key":"condition in,","Fragments":["you're"]},{"Key":"in, you're","Fragments":["done!"]},{"Key":"All done","Fragments":["barring"]},{"Key":"done barring","Fragments":["\"should"]},{"Key":"barring \"should","Fragments":["not"]},{"Key":"\"should not","Fragments":["include"]},{"Key":"not include","Fragments":["identical"]},{"Key":"include identical","Fragments":["words\""]},{"Key":"identical words\"","Fragments":["which"]},{"Key":"words\" which","Fragments":["for"]},{"Key":"reason is","Fragments":["puzzling","because"]},{"Key":"is puzzling","Fragments":["me"]},{"Key":"puzzling me","Fragments":["greatly."]},{"Key":"me greatly.","Fragments":["Please"]},{"Key":"greatly. Please","Fragments":["send"]},{"Key":"Please send","Fragments":["halp!"]},{"Key":"of filter\u0026size","Fragments":["you"]},{"Key":"filter\u0026size you","Fragments":["might"]},{"Key":"check there","Fragments":["is","is"]},{"Key":"is require","Fragments":["in"]},{"Key":"might work.","Fragments":["but"]},{"Key":"work. but","Fragments":["what"]},{"Key":"about readability?","Fragments":["do"]},{"Key":"readability? do","Fragments":["you"]},{"Key":"maintain such","Fragments":["code?"]},{"Key":"such code?","Fragments":[";-)"]},{"Key":"more hints:","Fragments":["there"]},{"Key":"hints: there","Fragments":["is"]},{"Key":"is \"identity\"","Fragments":["in"]},{"Key":"\"identity\" in","Fragments":["Predef."]},{"Key":"is String/Seq","Fragments":["function"]},{"Key":"String/Seq function","Fragments":["nonEmpty."]},{"Key":"a construct","Fragments":["\"x"]},{"Key":"construct \"x","Fragments":["=\u003e"]},{"Key":"f(x)\" you","Fragments":["can"]},{"Key":"usually use","Fragments":["the"]},{"Key":"the underscore:","Fragments":["\"f(_)\""]},{"Key":"underscore: \"f(_)\"","Fragments":["or"]},{"Key":"least with","Fragments":["the"]},{"Key":"the yell","Fragments":["function,"]},{"Key":"yell function,","Fragments":["pattern"]},{"Key":"function, pattern","Fragments":["matching"]},{"Key":"matching accomplishes","Fragments":["what"]},{"Key":"accomplishes what","Fragments":["would"]},{"Key":"be 2","Fragments":["separate"]},{"Key":"2 separate","Fragments":["sweeps"]},{"Key":"separate sweeps","Fragments":["of"]},{"Key":"sweeps of","Fragments":["the"]},{"Key":"String (1","Fragments":["for"]},{"Key":"(1 for","Fragments":["checking"]},{"Key":"checking toUpper,","Fragments":["one"]},{"Key":"toUpper, one","Fragments":["for"]},{"Key":"for toLower)","Fragments":["in"]},{"Key":"toLower) in","Fragments":["a"]},{"Key":"single sweep","Fragments":["by"]},{"Key":"sweep by","Fragments":["checking"]},{"Key":"by checking","Fragments":["both"]},{"Key":"checking both","Fragments":["at"]},{"Key":"both at","Fragments":["each"]},{"Key":"each character.","Fragments":["Readability"]},{"Key":"character. Readability","Fragments":["is"]},{"Key":"Readability is","Fragments":["lowered","always"]},{"Key":"is lowered","Fragments":["though."]},{"Key":"This `sentence","Fragments":["if"]},{"Key":"`sentence if","Fragments":["sentence.property`"]},{"Key":"if sentence.property`","Fragments":["seems"]},{"Key":"sentence.property` seems","Fragments":["like"]},{"Key":" isShouting","Fragments":["could"]},{"Key":"isShouting could","Fragments":["be"]},{"Key":"simplified with","Fragments":["`phrase.toUpper"]},{"Key":"with `phrase.toUpper","Fragments":["=="]},{"Key":"`phrase.toUpper ==","Fragments":["phrase`"]},{"Key":"only concern","Fragments":["here"]},{"Key":"concern here","Fragments":["is"]},{"Key":"expressions might","Fragments":["by"]},{"Key":"might by","Fragments":["way"]},{"Key":"by way","Fragments":["too"]},{"Key":"way too","Fragments":["complicated","java-like."]},{"Key":"complicated technique","Fragments":["for"]},{"Key":"technique for","Fragments":["this"]},{"Key":"of problem","Fragments":["as"]},{"Key":"problem as","Fragments":["they","opposed"]},{"Key":"they tend","Fragments":["to"]},{"Key":"be hard","Fragments":["to"]},{"Key":"read, follow","Fragments":["and"]},{"Key":"follow and","Fragments":["verify."]},{"Key":" I.e","Fragments":["```\"\"\"^\\s*$\"\"\"```"]},{"Key":"I.e ```\"\"\"^\\s*$\"\"\"```","Fragments":["is"]},{"Key":"```\"\"\"^\\s*$\"\"\"``` is","Fragments":["less"]},{"Key":"less explanatory","Fragments":["on"]},{"Key":"explanatory on","Fragments":["```silence()```"]},{"Key":"on ```silence()```","Fragments":["implementation"]},{"Key":"```silence()``` implementation","Fragments":["comparing"]},{"Key":"implementation comparing","Fragments":["to"]},{"Key":"to regular","Fragments":["expressions"]},{"Key":"expressions in","Fragments":["scala."]},{"Key":"in scala.","Fragments":["Does","You"]},{"Key":"scala. Does","Fragments":["anyone"]},{"Key":"Does anyone","Fragments":["know","have"]},{"Key":"anyone know","Fragments":["how"]},{"Key":"your solution,","Fragments":["quite","which","the"]},{"Key":"solution, quite","Fragments":["clear"]},{"Key":"quite clear","Fragments":["and"]},{"Key":"of \"Tuple2[Char,Char]\"","Fragments":["perhaps"]},{"Key":"\"Tuple2[Char,Char]\" perhaps","Fragments":["just"]},{"Key":"use \"(Char,Char)\"?","Fragments":["(or"]},{"Key":"\"(Char,Char)\"? (or","Fragments":["let"]},{"Key":"(or let","Fragments":["the","```foldHelper```"]},{"Key":"Scala type","Fragments":["inferencer"]},{"Key":"type inferencer","Fragments":["do"]},{"Key":"inferencer do","Fragments":["all"]},{"Key":"the work;","Fragments":["comes"]},{"Key":"work; comes","Fragments":["at"]},{"Key":"comes at","Fragments":["the"]},{"Key":"the cost","Fragments":["of",";-)"]},{"Key":"cost of","Fragments":["readability,"]},{"Key":"but might","Fragments":["be"]},{"Key":"be ok","Fragments":["for"]},{"Key":"ok for","Fragments":["such","starters,"]},{"Key":"a \"{","Fragments":["case","case"]},{"Key":"\"{ case","Fragments":["...","..."]},{"Key":"case ...","Fragments":["=\u003e","=\u003e"]},{"Key":"... =\u003e","Fragments":["}.","...}\""]},{"Key":"consider having","Fragments":["little","some","helper","little"]},{"Key":"having little","Fragments":["helper","private"]},{"Key":"little helper","Fragments":["functions","functions","functions"]},{"Key":" Interesting,","Fragments":["your","you're"]},{"Key":"Interesting, your","Fragments":["\"histogram\""]},{"Key":"your \"histogram\"","Fragments":["approach."]},{"Key":"\"histogram\" approach.","Fragments":["Perhaps"]},{"Key":"approach. Perhaps","Fragments":["more"]},{"Key":"Perhaps more","Fragments":["complicated"]},{"Key":"complicated as","Fragments":["it"]},{"Key":"be, but","Fragments":["very"]},{"Key":"but very","Fragments":["\"scientific\".","concise."]},{"Key":"very \"scientific\".","Fragments":[":-)"]},{"Key":"the ==","Fragments":["operator"]},{"Key":"== operator","Fragments":["usually"]},{"Key":"operator usually","Fragments":["works"]},{"Key":"usually works","Fragments":["as"]},{"Key":"as expected,","Fragments":["so"]},{"Key":"expected, so","Fragments":["no"]},{"Key":"for efficiency","Fragments":["you"]},{"Key":"could first","Fragments":["do"]},{"Key":"first do","Fragments":["the"]},{"Key":"simple !=","Fragments":["check"]},{"Key":"!= check","Fragments":["before"]},{"Key":"check before","Fragments":["building"]},{"Key":"before building","Fragments":["the"]},{"Key":"building the","Fragments":["histogram."]},{"Key":"work yet.","Fragments":["I'll"]},{"Key":"yet. I'll","Fragments":["come"]},{"Key":"this at","Fragments":["a"]},{"Key":"later time;","Fragments":["not"]},{"Key":"time; not","Fragments":["feeling"]},{"Key":"not feeling","Fragments":["this"]},{"Key":"feeling this","Fragments":["exercise!"]},{"Key":" constants","Fragments":["should"]},{"Key":"constants should","Fragments":["be"]},{"Key":"as val,","Fragments":["not"]},{"Key":"val, not","Fragments":["def."]},{"Key":"then for","Fragments":["readability","the"]},{"Key":"readability you","Fragments":["might","could","should","could"]},{"Key":"the chain","Fragments":["of"]},{"Key":"chain of","Fragments":["function"]},{"Key":"calls into","Fragments":["separate"]},{"Key":"separate intermediate","Fragments":["vals"]},{"Key":"intermediate vals","Fragments":["with"]},{"Key":"vals with","Fragments":["a","appropriate"]},{"Key":"by splitting","Fragments":["up"]},{"Key":"This clearly","Fragments":["the"]},{"Key":"clearly the","Fragments":["_one"]},{"Key":"the _one","Fragments":["true"]},{"Key":"_one true","Fragments":["solution_."]},{"Key":"true solution_.","Fragments":["Nicely"]},{"Key":"solution_. Nicely","Fragments":["simple"]},{"Key":"Nicely simple","Fragments":["solution"]},{"Key":"simple solution","Fragments":["to"]},{"Key":"an uneven","Fragments":["transpose"]},{"Key":"uneven transpose","Fragments":["there."]},{"Key":"Now you","Fragments":["can"]},{"Key":"check and","Fragments":["get"]},{"Key":"and get","Fragments":["rid","thereby","a"]},{"Key":"the if-else.","Fragments":[":-)"]},{"Key":"the `object`","Fragments":["you"]},{"Key":"`object` you","Fragments":["are"]},{"Key":"using. Took","Fragments":["that"]},{"Key":"Took that","Fragments":["over"]},{"Key":"that over","Fragments":["in"]},{"Key":"over in","Fragments":["my"]},{"Key":"Also I","Fragments":["was"]},{"Key":"wondering why","Fragments":["are","you","you"]},{"Key":"why are","Fragments":["you"]},{"Key":"were defining","Fragments":["`nucleotideCounts`"]},{"Key":"defining `nucleotideCounts`","Fragments":["as"]},{"Key":"`nucleotideCounts` as","Fragments":["a"]},{"Key":"val` and","Fragments":["not"]},{"Key":"a `def`","Fragments":["but"]},{"Key":"`def` but","Fragments":["I"]},{"Key":"understand now:","Fragments":["good"]},{"Key":"now: good","Fragments":["catch."]},{"Key":"consider mapping","Fragments":["directly"]},{"Key":"mapping directly","Fragments":["over"]},{"Key":"directly over","Fragments":["`nucleotides`"]},{"Key":"over `nucleotides`","Fragments":["instead"]},{"Key":"`nucleotides` instead","Fragments":["of"]},{"Key":"for comprehension,","Fragments":["to"]},{"Key":"comprehension, to","Fragments":["me"]},{"Key":"- `nucleotides`","Fragments":["may"]},{"Key":"`nucleotides` may","Fragments":["be"]},{"Key":"defined a","Fragments":["constant,"]},{"Key":"constant, in","Fragments":["Scala"]},{"Key":"Scala this","Fragments":["done"]},{"Key":"this done","Fragments":["by"]},{"Key":"by starting","Fragments":["with"]},{"Key":"a capital:","Fragments":["`Nucleotides`"]},{"Key":"validation (`require`)","Fragments":["can"]},{"Key":"(`require`) can","Fragments":["be"]},{"Key":"- also","Fragments":["`count`"]},{"Key":"also `count`","Fragments":["can"]},{"Key":"`count` can","Fragments":["be"]},{"Key":"My solution","Fragments":["#4","is","is","is","could"]},{"Key":"solution #4","Fragments":["is"]},{"Key":"#4 is","Fragments":["probably"]},{"Key":"probably nicer","Fragments":["looking"]},{"Key":"nicer looking","Fragments":["but","than"]},{"Key":"looking but","Fragments":["this"]},{"Key":"one actually","Fragments":["does","matches"]},{"Key":"actually does","Fragments":["not"]},{"Key":"the risk","Fragments":["of","for"]},{"Key":"risk of","Fragments":["running","infinite"]},{"Key":"of running","Fragments":["into"]},{"Key":"running into","Fragments":["an"]},{"Key":"an infinite","Fragments":["loop","loop","loop"]},{"Key":"infinite loop","Fragments":["while","and","when","if"]},{"Key":"loop while","Fragments":["still"]},{"Key":"while still","Fragments":["avoiding"]},{"Key":"still avoiding","Fragments":["duplicates."]},{"Key":"The way","Fragments":["you","I","the","to"]},{"Key":"have laid","Fragments":["out"]},{"Key":"laid out","Fragments":["the"]},{"Key":"read. See","Fragments":["[here](http://docs.scala-lang.org/style/control-structures.html#comprehensions)"]},{"Key":"See [here](http://docs.scala-lang.org/style/control-structures.html#comprehensions)","Fragments":["for"]},{"Key":"[here](http://docs.scala-lang.org/style/control-structures.html#comprehensions) for","Fragments":["the"]},{"Key":"the guidance","Fragments":["on"]},{"Key":"guidance on","Fragments":["comprehensions."]},{"Key":" (2L","Fragments":["to"]},{"Key":"(2L to","Fragments":["(n-1))"]},{"Key":"to (n-1))","Fragments":["is"]},{"Key":"(n-1)) is","Fragments":["too"]},{"Key":"too huge","Fragments":["for"]},{"Key":"huge for","Fragments":["Int.MaxValue."]},{"Key":"for Int.MaxValue.","Fragments":["Did"]},{"Key":"Int.MaxValue. Did","Fragments":["your"]},{"Key":"Did your","Fragments":["last"]},{"Key":"your last","Fragments":["test","iteration."]},{"Key":"last test","Fragments":["pass?"]},{"Key":"the commenting","Fragments":["abo64."]},{"Key":"commenting abo64.","Fragments":["I"]},{"Key":"abo64. I","Fragments":["wasn't","resubmitted"]},{"Key":"but checked","Fragments":["it"]},{"Key":"checked it","Fragments":["in"]},{"Key":"in anyway","Fragments":["since"]},{"Key":"anyway since","Fragments":["it"]},{"Key":"it worked","Fragments":["-"]},{"Key":"worked -","Fragments":["had"]},{"Key":"- had","Fragments":["the"]},{"Key":"the expandSequence","Fragments":["function"]},{"Key":"expandSequence function","Fragments":["already"]},{"Key":"function already","Fragments":["written"]},{"Key":"already written","Fragments":["at"]},{"Key":"written at","Fragments":["the"]},{"Key":"get anything","Fragments":["other"]},{"Key":"anything other","Fragments":["than"]},{"Key":"than an","Fragments":["iterable","object,"]},{"Key":"an iterable","Fragments":["Map"]},{"Key":"iterable Map","Fragments":["out"]},{"Key":"Map out","Fragments":["of"]},{"Key":"the transform","Fragments":["function."]},{"Key":"transform function.","Fragments":["Finally"]},{"Key":"function. Finally","Fragments":["got"]},{"Key":"Finally got","Fragments":["it"]},{"Key":" good!","Fragments":[":-)","two"]},{"Key":"the case-block","Fragments":["into"]},{"Key":"case-block into","Fragments":["a"]},{"Key":"a def","Fragments":["(preferably","with","with"]},{"Key":"def (preferably","Fragments":["inside"]},{"Key":"(preferably inside","Fragments":["expandSequence)"]},{"Key":"inside expandSequence)","Fragments":["with"]},{"Key":"expandSequence) with","Fragments":["a"]},{"Key":"Scala ```Map```s","Fragments":["are"]},{"Key":"```Map```s are","Fragments":["also","automagically"]},{"Key":"also ```PartialFunctions```,","Fragments":["so"]},{"Key":"```PartialFunctions```, so","Fragments":["you"]},{"Key":"say something","Fragments":["like"]},{"Key":"that 0","Fragments":["default"]},{"Key":"0 default","Fragments":["value"]},{"Key":"default value","Fragments":["correct?","of"]},{"Key":"value correct?","Fragments":["If"]},{"Key":"correct? If","Fragments":["so"]},{"Key":"If so","Fragments":["you"]},{"Key":"use ```Map```'s","Fragments":["```withDefaultValue```."]},{"Key":"your Java","Fragments":["thinking","mind"]},{"Key":"Java thinking","Fragments":["and"]},{"Key":"thinking and","Fragments":["avoid"]},{"Key":"these for-loops","Fragments":["plus"]},{"Key":"plus a","Fragments":["```var```"]},{"Key":"```var``` for","Fragments":["the"]},{"Key":"the result!","Fragments":["Most"]},{"Key":"result! Most","Fragments":["of"]},{"Key":"times there","Fragments":["is"]},{"Key":"elegant FP","Fragments":["solution."]},{"Key":"FP solution.","Fragments":["Here"]},{"Key":"solution. Here","Fragments":["you"]},{"Key":"the String,","Fragments":["for"]},{"Key":"String, for","Fragments":["example."]},{"Key":"The Robot","Fragments":["globalton"]},{"Key":"The method","Fragments":["of"]},{"Key":"of initializing","Fragments":["and"]},{"Key":"initializing and","Fragments":["storing"]},{"Key":"and storing","Fragments":["the"]},{"Key":"storing the","Fragments":["name","prime"]},{"Key":"I'll continue","Fragments":["to"]},{"Key":"continue to","Fragments":["experiment."]},{"Key":" fixed","Fragments":["typo."]},{"Key":"use lazy","Fragments":["to"]},{"Key":"initialize the","Fragments":["local","empty","nested"]},{"Key":"the local","Fragments":["variables."]},{"Key":"local variables.","Fragments":["Although"]},{"Key":"variables. Although","Fragments":["the"]},{"Key":"the performance","Fragments":["gain"]},{"Key":"performance gain","Fragments":["would"]},{"Key":"gain would","Fragments":["not"]},{"Key":"would drop","Fragments":["the"]},{"Key":"type \":","Fragments":["Seq[String]\""]},{"Key":"\": Seq[String]\"","Fragments":["from"]},{"Key":"Seq[String]\" from","Fragments":["matches"]},{"Key":"from matches","Fragments":["and"]},{"Key":"and chars.","Fragments":["This"]},{"Key":"chars. This","Fragments":["is"]},{"Key":"are simple","Fragments":["and"]},{"Key":"of obvious","Fragments":["from"]},{"Key":"obvious from","Fragments":["the"]},{"Key":"think not","Fragments":["using"]},{"Key":"using dots","Fragments":["makes","when"]},{"Key":"dots makes","Fragments":["it"]},{"Key":"like human","Fragments":["language"]},{"Key":"human language","Fragments":["and"]},{"Key":"language and","Fragments":["I"]},{"Key":"I definitely","Fragments":["prefer","don't","like"]},{"Key":"definitely prefer","Fragments":["it"]},{"Key":"prefer it","Fragments":["to","over"]},{"Key":"to \"dotted","Fragments":["way\"."]},{"Key":"\"dotted way\".","Fragments":["Maybe"]},{"Key":"way\". Maybe","Fragments":["substring"]},{"Key":"Maybe substring","Fragments":["should"]},{"Key":"substring should","Fragments":["have"]},{"Key":"have dots,","Fragments":["but"]},{"Key":"dots, but","Fragments":["not"]},{"Key":"any consistent","Fragments":["theory,"]},{"Key":"consistent theory,","Fragments":["but"]},{"Key":"theory, but","Fragments":["I"]},{"Key":"dots when","Fragments":["functions"]},{"Key":"when functions","Fragments":["names"]},{"Key":"functions names","Fragments":["are"]},{"Key":"just loose","Fragments":["preference,"]},{"Key":"loose preference,","Fragments":["looking"]},{"Key":"preference, looking","Fragments":["forward"]},{"Key":"to receiving","Fragments":["more"]},{"Key":"receiving more","Fragments":["input"]},{"Key":"more input","Fragments":[":)"]},{"Key":"val areaCode","Fragments":["="]},{"Key":"areaCode =","Fragments":["number"]},{"Key":"= number","Fragments":["take","match"]},{"Key":"number take","Fragments":["3"]},{"Key":"an unofficial","Fragments":["guide"]},{"Key":"unofficial guide","Fragments":["for"]},{"Key":"for this...anyways","Fragments":["I"]},{"Key":"this...anyways I","Fragments":["add"]},{"Key":"the agenda","Fragments":["for"]},{"Key":"agenda for","Fragments":["dicussion"]},{"Key":"for dicussion","Fragments":["!"]},{"Key":"dicussion !","Fragments":[":)"]},{"Key":" looking","Fragments":["forward"]},{"Key":" hah,","Fragments":["I"]},{"Key":"hah, I","Fragments":["did"]},{"Key":"did replaceAll","Fragments":["in"]},{"Key":"replaceAll in","Fragments":["my"]},{"Key":"iteration too,","Fragments":["filter"]},{"Key":"too, filter","Fragments":["is"]},{"Key":"filter is","Fragments":["nice"]},{"Key":" let's","Fragments":["discuss"]},{"Key":"let's discuss","Fragments":["\"best"]},{"Key":"discuss \"best","Fragments":["practices\""]},{"Key":"\"best practices\"","Fragments":["of"]},{"Key":"practices\" of","Fragments":["using"]},{"Key":"using \"dots\"","Fragments":["and"]},{"Key":"\"dots\" and","Fragments":["\"braces\""]},{"Key":"and \"braces\"","Fragments":["when"]},{"Key":"\"braces\" when","Fragments":["calling"]},{"Key":"when calling","Fragments":["methods/variables..."]},{"Key":"say \"number.take(3)\"","Fragments":["is"]},{"Key":"\"number.take(3)\" is","Fragments":["more"]},{"Key":"than \"number","Fragments":["take(3)\"..."]},{"Key":" Better","Fragments":["use","than"]},{"Key":"Better use","Fragments":["filter"]},{"Key":"filter instead","Fragments":["of"]},{"Key":"of replaceAll,","Fragments":["easier"]},{"Key":"replaceAll, easier","Fragments":["to"]},{"Key":"one regex","Fragments":["instead"]},{"Key":"of two.","Fragments":["But"]},{"Key":"two. But","Fragments":["if"]},{"Key":"on two","Fragments":["perhaps"]},{"Key":"two perhaps","Fragments":["try"]},{"Key":"perhaps try","Fragments":["to"]},{"Key":"to reuse","Fragments":["GoodFormat","this"]},{"Key":"reuse GoodFormat","Fragments":["inside"]},{"Key":"GoodFormat inside","Fragments":["AmericanFormat?"]},{"Key":"use regex'es","Fragments":["why"]},{"Key":"regex'es why","Fragments":["not"]},{"Key":"make also","Fragments":["use"]},{"Key":"Do not","Fragments":["use"]},{"Key":"use semicolons","Fragments":["if"]},{"Key":"semicolons if","Fragments":["they"]},{"Key":"are redundant.","Fragments":["This"]},{"Key":"redundant. This","Fragments":["is"]},{"Key":"is Scala","Fragments":["not"]},{"Key":"Scala not","Fragments":["Java!"]},{"Key":"not Java!","Fragments":[";-)"]},{"Key":"make number","Fragments":["lazy"]},{"Key":"number lazy","Fragments":["to"]},{"Key":"the computing","Fragments":["in"]},{"Key":"computing in","Fragments":["the"]},{"Key":"Your string","Fragments":["of"]},{"Key":"string of","Fragments":["zeros"]},{"Key":"of zeros","Fragments":["is"]},{"Key":"zeros is","Fragments":["actually"]},{"Key":"and belongs","Fragments":["to"]},{"Key":"belongs to","Fragments":["the"]},{"Key":"object (of","Fragments":["course"]},{"Key":"course w/","Fragments":["a"]},{"Key":"good telling","Fragments":["name).","names"]},{"Key":" @boris","Fragments":["@boris"]},{"Key":"```var``` or","Fragments":["any"]},{"Key":"or any","Fragments":["other"]},{"Key":"other side","Fragments":["effects?"]},{"Key":"there an","Fragments":["easy"]},{"Key":"map my","Fragments":["`dnaNucleotides`"]},{"Key":"my `dnaNucleotides`","Fragments":["into"]},{"Key":"`dnaNucleotides` into","Fragments":["`nucleotideCounts`","`nucleotideCounts`?"]},{"Key":"into `nucleotideCounts`","Fragments":["AND"]},{"Key":"`nucleotideCounts` AND","Fragments":["use"]},{"Key":"AND use","Fragments":["a"]},{"Key":"a `defaultValue`?","Fragments":["Having"]},{"Key":"`defaultValue`? Having","Fragments":["some"]},{"Key":"Having some","Fragments":["trouble"]},{"Key":"trouble with","Fragments":["syntax..."]},{"Key":"great improvement","Fragments":["over"]},{"Key":"improvement over","Fragments":["the"]},{"Key":"previous version.","Fragments":["It"]},{"Key":"version. It","Fragments":["is"]},{"Key":"and follow.","Fragments":["Do"]},{"Key":"follow. Do","Fragments":["you"]},{"Key":"to let","Fragments":["`count`"]},{"Key":"let `count`","Fragments":["use"]},{"Key":"`count` use","Fragments":["`nucleotideCounts`,"]},{"Key":"use `nucleotideCounts`,","Fragments":["to"]},{"Key":"`nucleotideCounts`, to","Fragments":["reduce"]},{"Key":"1. Maybe","Fragments":["use"]},{"Key":"Maybe use","Fragments":["`lazy"]},{"Key":"use `lazy","Fragments":["val`","val`"]},{"Key":"val` for","Fragments":["the","`nucleotideCounts`"]},{"Key":"the `nucleotideCounts`","Fragments":["since","can"]},{"Key":"`nucleotideCounts` since","Fragments":["they"]},{"Key":"2. Right","Fragments":["now"]},{"Key":"now you're","Fragments":["repeating"]},{"Key":"you're repeating","Fragments":["the"]},{"Key":"repeating the","Fragments":["nucleotide"]},{"Key":"the nucleotide","Fragments":["letters","is"]},{"Key":"nucleotide letters","Fragments":["in"]},{"Key":"in several","Fragments":["places."]},{"Key":"several places.","Fragments":["I"]},{"Key":"places. I","Fragments":["went"]},{"Key":"a `Set`","Fragments":["containing"]},{"Key":"`Set` containing","Fragments":["the"]},{"Key":"to build/check","Fragments":["everything."]},{"Key":"build/check everything.","Fragments":["I"]},{"Key":"everything. I","Fragments":["was"]},{"Key":"pretty happy","Fragments":["with"]},{"Key":"result and","Fragments":["I"]},{"Key":"change anything","Fragments":["if"]},{"Key":"anything if","Fragments":["another"]},{"Key":"if another","Fragments":["letter","responds"]},{"Key":"another letter","Fragments":["was"]},{"Key":"letter was","Fragments":["added"]},{"Key":"was added","Fragments":["(not"]},{"Key":"added (not","Fragments":["that"]},{"Key":"(not that","Fragments":["they're"]},{"Key":"that they're","Fragments":["going"]},{"Key":"they're going","Fragments":["to"]},{"Key":"more nucleotides","Fragments":[":)"]},{"Key":"nucleotides :)","Fragments":[")."]},{"Key":":) ).","Fragments":["Anyway,"]},{"Key":"). Anyway,","Fragments":["it's"]},{"Key":"Anyway, it's","Fragments":["something"]},{"Key":"it's something","Fragments":["to","that","new"]},{"Key":"whole this","Fragments":["looks"]},{"Key":"me but","Fragments":["I'm"]},{"Key":"still very","Fragments":["new","limited"]},{"Key":"Do need","Fragments":["the"]},{"Key":"the ```to[Set]```","Fragments":["to"]},{"Key":"```to[Set]``` to","Fragments":["improve"]},{"Key":"improve the","Fragments":["performance?","\"head\""]},{"Key":"the performance?","Fragments":["I"]},{"Key":"performance? I","Fragments":["think"]},{"Key":"work without","Fragments":["the"]},{"Key":"the cast","Fragments":["as"]},{"Key":"cast as","Fragments":["well"]},{"Key":"well and","Fragments":["would"]},{"Key":"Minor nit,","Fragments":["as","but"]},{"Key":"nit, as","Fragments":["I"]},{"Key":"similar thing,","Fragments":["but.."]},{"Key":"thing, but..","Fragments":["I"]},{"Key":"but.. I","Fragments":["would"]},{"Key":"the Map('A'","Fragments":["-\u003e"]},{"Key":"-\u003e 0)","Fragments":["and"]},{"Key":"0) and","Fragments":["Set('A',"]},{"Key":"and Set('A',","Fragments":["'C',"]},{"Key":"Set('A', 'C',","Fragments":["'G',"]},{"Key":"'C', 'G',","Fragments":["'T')"]},{"Key":"'G', 'T')","Fragments":["as"]},{"Key":"'T') as","Fragments":["a"]},{"Key":"single map","Fragments":["val."]},{"Key":"map val.","Fragments":["And,"]},{"Key":"val. And,","Fragments":["then"]},{"Key":"have isValid","Fragments":["check"]},{"Key":"isValid check","Fragments":["the"]},{"Key":"check the","Fragments":["map.","regex"]},{"Key":"leave your","Fragments":["Java"]},{"Key":"Java mind","Fragments":["at"]},{"Key":"at home","Fragments":["and"]},{"Key":"home and","Fragments":["not"]},{"Key":"use `var`?!","Fragments":[":-)"]},{"Key":" how","Fragments":["about"]},{"Key":"`map` on","Fragments":["`factors`?","the"]},{"Key":"would only","Fragments":["change","recommend"]},{"Key":"only change","Fragments":["the"]},{"Key":"the naming","Fragments":["of"]},{"Key":"naming of","Fragments":["the"]},{"Key":"the variables.","Fragments":["string1"]},{"Key":"variables. string1","Fragments":["and"]},{"Key":"string1 and","Fragments":["string2"]},{"Key":"and string2","Fragments":["could"]},{"Key":"string2 could","Fragments":["be"]},{"Key":"of creating","Fragments":["an","a","a"]},{"Key":"empty map","Fragments":["using"]},{"Key":"map using","Fragments":["`Map[String,"]},{"Key":"using `Map[String,","Fragments":["Int]()`"]},{"Key":"`Map[String, Int]()`","Fragments":["it's"]},{"Key":"Int]()` it's","Fragments":["usually"]},{"Key":"it's usually","Fragments":["good"]},{"Key":"usually good","Fragments":["practice"]},{"Key":"the `empty`","Fragments":["constructor:"]},{"Key":"`empty` constructor:","Fragments":["`Map.empty[String,"]},{"Key":"constructor: `Map.empty[String,","Fragments":["Int]`."]},{"Key":"the `Option`","Fragments":["in"]},{"Key":"`Option` in","Fragments":["another"]},{"Key":"in another","Fragments":["way","place"]},{"Key":"way than","Fragments":["pattern","using"]},{"Key":"than pattern","Fragments":["matching:"]},{"Key":"val newCount","Fragments":["="]},{"Key":"newCount =","Fragments":["m"]},{"Key":"m get","Fragments":["word"]},{"Key":"get word","Fragments":["map"]},{"Key":"word map","Fragments":["(_"]},{"Key":"map (_","Fragments":["+"]},{"Key":"(_ +","Fragments":["1)"]},{"Key":"1) getOrElse","Fragments":["0"]},{"Key":"m +","Fragments":["(word","n)`"]},{"Key":"+ (word","Fragments":["-\u003e"]},{"Key":"(word -\u003e","Fragments":["newCount)"]},{"Key":" difference","Fragments":["with"]},{"Key":"difference with","Fragments":["the"]},{"Key":"* call","Fragments":["normalize"]},{"Key":"call normalize","Fragments":["on"]},{"Key":"normalize on","Fragments":["input"]},{"Key":"* split","Fragments":["multiple"]},{"Key":"split multiple","Fragments":["of"]},{"Key":"multiple of","Fragments":["whitespace"]},{"Key":"if scala","Fragments":["already"]},{"Key":"scala already","Fragments":["has"]},{"Key":"thing in","Fragments":["the"]},{"Key":"too happy","Fragments":["with"]},{"Key":"Well, whenever","Fragments":["you"]},{"Key":"use side","Fragments":["effects"]},{"Key":"effects (like","Fragments":["using"]},{"Key":"(like using","Fragments":["a"]},{"Key":"a ```var```)","Fragments":["and"]},{"Key":"```var```) and","Fragments":["iterating"]},{"Key":"and iterating","Fragments":["over","over"]},{"Key":"collection on","Fragments":["your"]},{"Key":"own you","Fragments":["could"]},{"Key":"probably do","Fragments":["better!"]},{"Key":"do better!","Fragments":[":-)"]},{"Key":"functions on","Fragments":["the","it","it"]},{"Key":"two Strings","Fragments":["instead.","...?","and","instead"]},{"Key":"about ```zip```ping","Fragments":["the"]},{"Key":"the mutable","Fragments":["`GregorianCalendar`","state)"]},{"Key":"mutable `GregorianCalendar`","Fragments":["here"]},{"Key":"`GregorianCalendar` here","Fragments":["is"]},{"Key":"very un-functional,","Fragments":["but"]},{"Key":"un-functional, but","Fragments":["this"]},{"Key":"clearly how","Fragments":["the"]},{"Key":"the library","Fragments":["is"]},{"Key":"library is","Fragments":["intended"]},{"Key":"be used.","Fragments":["A"]},{"Key":"used. A","Fragments":["better"]},{"Key":" Nekem","Fragments":["ez"]},{"Key":"Nekem ez","Fragments":["tetszett"]},{"Key":"ez tetszett","Fragments":["a"]},{"Key":"tetszett a","Fragments":["legjobban:"]},{"Key":"class DNA(text:","Fragments":["String)"]},{"Key":"DNA(text: String)","Fragments":["{"]},{"Key":"val nucleotideCounts:","Fragments":["Map[Char,"]},{"Key":"nucleotideCounts: Map[Char,","Fragments":["Int]"]},{"Key":"Map[Char, Int]","Fragments":["="]},{"Key":"val default","Fragments":["=","="]},{"Key":"default =","Fragments":["Map('A'","anything"]},{"Key":"-\u003e 0).withDefault","Fragments":["{"]},{"Key":"0).withDefault {","Fragments":["x"]},{"Key":"{ x","Fragments":["=\u003e"]},{"Key":" text.foldLeft(default)((acc,","Fragments":["c)"]},{"Key":"text.foldLeft(default)((acc, c)","Fragments":["=\u003e"]},{"Key":"c) =\u003e","Fragments":["acc"]},{"Key":"=\u003e acc","Fragments":["+"]},{"Key":"+ (c","Fragments":["-\u003e"]},{"Key":"(c -\u003e","Fragments":["(acc(c)"]},{"Key":"-\u003e (acc(c)","Fragments":["+"]},{"Key":"(acc(c) +","Fragments":["1)))"]},{"Key":"val count","Fragments":["="]},{"Key":"count =","Fragments":["nucleotideCounts"]},{"Key":" Szia","Fragments":["Marci!"]},{"Key":"A .groupBy.mapValues.map","Fragments":["soha"]},{"Key":".groupBy.mapValues.map soha","Fragments":["nem"]},{"Key":"soha nem","Fragments":["jutott"]},{"Key":"nem jutott","Fragments":["volna"]},{"Key":"jutott volna","Fragments":["eszembe,"]},{"Key":"volna eszembe,","Fragments":["mindig"]},{"Key":"eszembe, mindig","Fragments":["tanulok"]},{"Key":"mindig tanulok","Fragments":["valamit!"]},{"Key":" Mit","Fragments":["szólsz"]},{"Key":"Mit szólsz","Fragments":["ehhez?"]},{"Key":"szólsz ehhez?","Fragments":["http://exercism.io/submissions/1d3dab2598da4d408f0a8145e26ca18a"]},{"Key":"the `Random`","Fragments":["classes'"]},{"Key":"`Random` classes'","Fragments":["`alphanumeric`"]},{"Key":"classes' `alphanumeric`","Fragments":["property,"]},{"Key":"`alphanumeric` property,","Fragments":["which"]},{"Key":"property, which","Fragments":["is"]},{"Key":"basically a","Fragments":["stream"]},{"Key":"of random","Fragments":["letters"]},{"Key":"random letters","Fragments":["and","and","and"]},{"Key":" c.isDigit","Fragments":["and"]},{"Key":"c.isDigit and","Fragments":["c.isWhitespace"]},{"Key":"and c.isWhitespace","Fragments":["are"]},{"Key":"c.isWhitespace are","Fragments":["redundant"]},{"Key":" what's","Fragments":["going"]},{"Key":"on with","Fragments":["isNumber?"]},{"Key":"with isNumber?","Fragments":["why"]},{"Key":"isNumber? why","Fragments":["not"]},{"Key":" last","Fragments":["remark:"]},{"Key":"last remark:","Fragments":["performance-wise"]},{"Key":"remark: performance-wise","Fragments":["inserting"]},{"Key":"performance-wise inserting","Fragments":["an"]},{"Key":"inserting an","Fragments":["element"]},{"Key":"an element","Fragments":["at"]},{"Key":"element at","Fragments":["the"]},{"Key":"not ideal.","Fragments":["one"]},{"Key":"ideal. one","Fragments":["could"]},{"Key":"consider inserting","Fragments":["at"]},{"Key":"inserting at","Fragments":["the"]},{"Key":"and reversing","Fragments":["the"]},{"Key":"the List","Fragments":["in","(instead","(instead","groupBy","into","of"]},{"Key":"List in","Fragments":["the","a"]},{"Key":"the termination","Fragments":["case."]},{"Key":"shortest and","Fragments":["simplest.","most"]},{"Key":"good. some","Fragments":["small"]},{"Key":"can further","Fragments":["shorten"]},{"Key":"further shorten","Fragments":["your"]},{"Key":"shorten your","Fragments":["code"]},{"Key":"code by","Fragments":["using"]},{"Key":"underscore as","Fragments":["in"]},{"Key":"to ```forall```","Fragments":["there"]},{"Key":"```forall``` there","Fragments":["is"]},{"Key":"is ```exists```","Fragments":["(instead"]},{"Key":"```exists``` (instead","Fragments":["of"]},{"Key":"your length","Fragments":["check)."]},{"Key":"String method","Fragments":["```endsWith```."]},{"Key":"method ```endsWith```.","Fragments":[":-)"]},{"Key":"your checks","Fragments":["into","as"]},{"Key":"checks into","Fragments":["small"]},{"Key":"into small","Fragments":["private"]},{"Key":"private functions","Fragments":["like","like"]},{"Key":"like ```isQuestion```","Fragments":["to"]},{"Key":"```isQuestion``` to","Fragments":["better"]},{"Key":"to better","Fragments":["communicate"]},{"Key":"better communicate","Fragments":["purpose."]},{"Key":"a further","Fragments":["exercise"]},{"Key":"further exercise","Fragments":["you"]},{"Key":"Scala regex","Fragments":["matching."]},{"Key":"you said","Fragments":["you"]},{"Key":"said you","Fragments":["tried"]},{"Key":"matching I","Fragments":["suggest"]},{"Key":"suggest that","Fragments":["you"]},{"Key":"you give","Fragments":["a"]},{"Key":"give a","Fragments":["look"]},{"Key":"at an","Fragments":["interesting"]},{"Key":"interesting solution","Fragments":["here:"]},{"Key":"solution here:","Fragments":["http://exercism.io/submissions/0147832e7ab4278ac0542eca."]},{"Key":"here: http://exercism.io/submissions/0147832e7ab4278ac0542eca.","Fragments":["Although"]},{"Key":"http://exercism.io/submissions/0147832e7ab4278ac0542eca. Although","Fragments":["the"]},{"Key":"bit longer","Fragments":["(abstract"]},{"Key":"longer (abstract","Fragments":["class"]},{"Key":"(abstract class","Fragments":["+"]},{"Key":"class +","Fragments":["case"]},{"Key":"+ case","Fragments":["classes)"]},{"Key":"case classes)","Fragments":["it"]},{"Key":"classes) it","Fragments":["minimizes"]},{"Key":"it minimizes","Fragments":["the"]},{"Key":"minimizes the","Fragments":["pattern"]},{"Key":"matching code.","Fragments":["Interesting"]},{"Key":"code. Interesting","Fragments":["for"]},{"Key":"Interesting for","Fragments":["you"]},{"Key":"see more","Fragments":["advanced"]},{"Key":"more advanced","Fragments":["uses"]},{"Key":"advanced uses","Fragments":["of"]},{"Key":"uses of","Fragments":["this"]},{"Key":" Trying","Fragments":["to"]},{"Key":"Trying to","Fragments":["get"]},{"Key":"my feet","Fragments":["wet"]},{"Key":"feet wet","Fragments":["in"]},{"Key":"wet in","Fragments":["Scala."]},{"Key":"Scala. Attempted","Fragments":["to"]},{"Key":"Attempted to","Fragments":["find"]},{"Key":"find regexes/patterns","Fragments":["first"]},{"Key":"regexes/patterns first","Fragments":["that"]},{"Key":"would enable","Fragments":["me"]},{"Key":"enable me","Fragments":["to"]},{"Key":"to shorten","Fragments":["my"]},{"Key":"shorten my","Fragments":["cases"]},{"Key":"my cases","Fragments":["to:"]},{"Key":"case pattern(_)","Fragments":["=\u003e"]},{"Key":"pattern(_) =\u003e","Fragments":["\"...\""]},{"Key":"way without","Fragments":["the","using"]},{"Key":"the \"case","Fragments":["x"]},{"Key":"\"case x","Fragments":["if"]},{"Key":"* No,","Fragments":["UsedNamesMap"]},{"Key":"No, UsedNamesMap","Fragments":["holds"]},{"Key":"UsedNamesMap holds","Fragments":["unique"]},{"Key":"holds unique","Fragments":["hashcode"]},{"Key":"unique hashcode","Fragments":["for","to"]},{"Key":"hashcode for","Fragments":["every"]},{"Key":"every instance","Fragments":["of"]},{"Key":"of Robot","Fragments":["class."]},{"Key":"Robot class.","Fragments":["Map"]},{"Key":"class. Map","Fragments":["is"]},{"Key":"Map is","Fragments":["required","too","just"]},{"Key":"required b/c","Fragments":["I"]},{"Key":"map unique","Fragments":["hashcode"]},{"Key":"hashcode to","Fragments":["Robot's"]},{"Key":"to Robot's","Fragments":["name,"]},{"Key":"Robot's name,","Fragments":["so"]},{"Key":"name, so","Fragments":["I"]},{"Key":"easily update","Fragments":["it"]},{"Key":"update it","Fragments":["w/o"]},{"Key":"using var","Fragments":["and"]},{"Key":"var and","Fragments":["if","could"]},{"Key":"I check","Fragments":["for"]},{"Key":"for uniqueness","Fragments":["globally"]},{"Key":"uniqueness globally","Fragments":["who"]},{"Key":"globally who","Fragments":["not"]},{"Key":"who not","Fragments":["use"]},{"Key":"* About","Fragments":["implicits"]},{"Key":"About implicits","Fragments":["-"]},{"Key":"implicits -","Fragments":["probably"]},{"Key":"- probably","Fragments":["I"]},{"Key":"am bit","Fragments":["hyped"]},{"Key":"bit hyped","Fragments":["about"]},{"Key":"hyped about","Fragments":["them,"]},{"Key":"about them,","Fragments":["b/c"]},{"Key":"them, b/c","Fragments":["it"]},{"Key":"b/c it","Fragments":["is"]},{"Key":"quite cool!","Fragments":["I"]},{"Key":"cool! I","Fragments":["have"]},{"Key":"* Thanks","Fragments":["for"]},{"Key":"for Seq.fill","Fragments":["method,"]},{"Key":"Seq.fill method,","Fragments":["will"]},{"Key":"method, will","Fragments":["refactor"]},{"Key":"Looks to","Fragments":["me"]},{"Key":"if ```UsedNamesMap```","Fragments":["always"]},{"Key":"```UsedNamesMap``` always","Fragments":["just"]},{"Key":"just holds","Fragments":["exactly"]},{"Key":"holds exactly","Fragments":["one"]},{"Key":"one value,","Fragments":["namely"]},{"Key":"value, namely","Fragments":["the"]},{"Key":"namely the","Fragments":["value"]},{"Key":"for key","Fragments":["```Indentifier```?!"]},{"Key":"key ```Indentifier```?!","Fragments":["But"]},{"Key":"```Indentifier```?! But","Fragments":["then"]},{"Key":"you never","Fragments":["check"]},{"Key":"never check","Fragments":["for"]},{"Key":"for previously","Fragments":["used"]},{"Key":"previously used","Fragments":["names."]},{"Key":"used names.","Fragments":["(btw,"]},{"Key":"names. (btw,","Fragments":["I"]},{"Key":"usually avoid","Fragments":["the"]},{"Key":"the technical","Fragments":["type"]},{"Key":"technical type","Fragments":["like"]},{"Key":"type like","Fragments":["\"Map\""]},{"Key":"\"Map\" in","Fragments":["a"]},{"Key":"name if","Fragments":["I"]},{"Key":"I can).","Fragments":["Why"]},{"Key":"can). Why","Fragments":["not"]},{"Key":"to mention:","Fragments":["Instead"]},{"Key":"mention: Instead","Fragments":["of"]},{"Key":"mapping over","Fragments":["a"]},{"Key":"Range there","Fragments":["is"]},{"Key":"function ```Seq.fill```","Fragments":["which"]},{"Key":"```Seq.fill``` which","Fragments":["is"]},{"Key":"is exactly","Fragments":["what","the"]},{"Key":"Did I","Fragments":["already","miss"]},{"Key":"I already","Fragments":["talk"]},{"Key":"already talk","Fragments":["about"]},{"Key":"about my","Fragments":["uneasy"]},{"Key":"my uneasy","Fragments":["feeling"]},{"Key":"uneasy feeling","Fragments":["on"]},{"Key":"feeling on","Fragments":["the"]},{"Key":"implicits here?","Fragments":[";-)"]},{"Key":"here? ;-)","Fragments":["If"]},{"Key":";-) If","Fragments":["you"]},{"Key":"insist then","Fragments":["at"]},{"Key":"least split","Fragments":["the"]},{"Key":"arg list","Fragments":["into"]},{"Key":"list into","Fragments":["two,"]},{"Key":"into two,","Fragments":["as"]},{"Key":"two, as","Fragments":["```length```"]},{"Key":"as ```length```","Fragments":["should"]},{"Key":"```length``` should","Fragments":["definitely"]},{"Key":"should definitely","Fragments":["be"]},{"Key":"definitely be","Fragments":["implicit,"]},{"Key":"be implicit,","Fragments":["too?!"]},{"Key":"move ```getRandomElement```","Fragments":["inside"]},{"Key":"```getRandomElement``` inside","Fragments":["```generateRandomOfLength```"]},{"Key":"inside ```generateRandomOfLength```","Fragments":["so"]},{"Key":"```generateRandomOfLength``` so","Fragments":["that"]},{"Key":"that ```seq```","Fragments":["is"]},{"Key":"```seq``` is","Fragments":["in"]},{"Key":"its scope.","Fragments":["Or"]},{"Key":"scope. Or","Fragments":["else"]},{"Key":"Or else","Fragments":["does"]},{"Key":"else does","Fragments":["it"]},{"Key":"it hurt","Fragments":["so"]},{"Key":"hurt so","Fragments":["much"]},{"Key":"arg along","Fragments":["as"]},{"Key":"along as","Fragments":["a"]},{"Key":"a non-implicit","Fragments":["arg?"]},{"Key":"non-implicit arg?","Fragments":[":-)"]},{"Key":"use ```containsSlice```","Fragments":["then"]},{"Key":"```containsSlice``` then","Fragments":["you"]},{"Key":"live by","Fragments":["w/"]},{"Key":"by w/","Fragments":["just"]},{"Key":"w/ just","Fragments":["a"]},{"Key":"few simple","Fragments":["if-else"]},{"Key":"using ```containsSlice```","Fragments":["is"]},{"Key":"```containsSlice``` is","Fragments":["too"]},{"Key":"way out","Fragments":["and"]},{"Key":"out and","Fragments":["re-implemented","cash"]},{"Key":"and re-implemented","Fragments":["it"]},{"Key":"re-implemented it","Fragments":["myself,"]},{"Key":"it myself,","Fragments":["but"]},{"Key":"is up","Fragments":["to"]},{"Key":"to you.","Fragments":[":-)"]},{"Key":" Worked","Fragments":["with"]},{"Key":"Worked with","Fragments":["a"]},{"Key":"of mine,","Fragments":["James"]},{"Key":"mine, James","Fragments":["Heather,"]},{"Key":"James Heather,","Fragments":["on"]},{"Key":"Heather, on","Fragments":["this"]},{"Key":"solution depends","Fragments":["on"]},{"Key":"that `Enumeration`","Fragments":["values"]},{"Key":"`Enumeration` values","Fragments":["are"]},{"Key":"are assigned","Fragments":["ids"]},{"Key":"assigned ids","Fragments":["sequentially"]},{"Key":"ids sequentially","Fragments":["starting"]},{"Key":"sequentially starting","Fragments":["at"]},{"Key":"at 0.","Fragments":["I'm"]},{"Key":"0. I'm","Fragments":["not"]},{"Key":"100% confident","Fragments":["that"]},{"Key":"confident that","Fragments":["that's"]},{"Key":"that that's","Fragments":["part"]},{"Key":"that's part","Fragments":["of"]},{"Key":"the specification;","Fragments":["if"]},{"Key":"specification; if","Fragments":["anyone"]},{"Key":"if anyone","Fragments":["knows"]},{"Key":"anyone knows","Fragments":["where"]},{"Key":"knows where","Fragments":["to"]},{"Key":"check that,","Fragments":["I'd"]},{"Key":"that, I'd","Fragments":["love"]},{"Key":" Captures","Fragments":["the"]},{"Key":"Captures the","Fragments":["general"]},{"Key":"general case,","Fragments":["but"]},{"Key":"doesn't pass","Fragments":["all"]},{"Key":"personally find","Fragments":["exponent"]},{"Key":"find exponent","Fragments":["literals"]},{"Key":"exponent literals","Fragments":["(1e9"]},{"Key":"literals (1e9","Fragments":["etc)"]},{"Key":"(1e9 etc)","Fragments":["much"]},{"Key":"etc) much","Fragments":["more"]},{"Key":"is however","Fragments":["admirably"]},{"Key":"however admirably","Fragments":["concise"]},{"Key":"admirably concise","Fragments":["(despite"]},{"Key":"concise (despite","Fragments":["the"]},{"Key":"(despite the","Fragments":["mutable"]},{"Key":" :)","Fragments":["I'm"]},{"Key":":) I'm","Fragments":["still","sure"]},{"Key":"still exposing","Fragments":["a"]},{"Key":"exposing a","Fragments":["mutable"]},{"Key":"mutable value,","Fragments":["so"]},{"Key":"so you're","Fragments":["not"]},{"Key":"You're right.","Fragments":["I"]},{"Key":"I read","Fragments":["too","about","about"]},{"Key":"read too","Fragments":["quickly."]},{"Key":"too quickly.","Fragments":["Sorry"]},{"Key":"quickly. Sorry","Fragments":["for"]},{"Key":" `GregorianCalendar`","Fragments":["is"]},{"Key":"is mutable.","Fragments":["That"]},{"Key":"mutable. That","Fragments":["means"]},{"Key":"means if","Fragments":["you"]},{"Key":"call `date`","Fragments":["several"]},{"Key":"`date` several","Fragments":["times,"]},{"Key":"several times,","Fragments":["it"]},{"Key":"times, it","Fragments":["will"]},{"Key":"will add","Fragments":["*each","to"]},{"Key":"add *each","Fragments":["time*"]},{"Key":"*each time*","Fragments":["1"]},{"Key":"time* 1","Fragments":["gigasecond."]},{"Key":"No it","Fragments":["won't."]},{"Key":"it won't.","Fragments":["That"]},{"Key":"won't. That","Fragments":["part"]},{"Key":"That part","Fragments":["will"]},{"Key":"part will","Fragments":["run"]},{"Key":"run only","Fragments":["once,"]},{"Key":"only once,","Fragments":["during","like"]},{"Key":"once, during","Fragments":["construction."]},{"Key":"Seems like","Fragments":["the","a"]},{"Key":"the \"character\"","Fragments":["function"]},{"Key":"\"character\" function","Fragments":["might"]},{"Key":"be inefficient","Fragments":["since"]},{"Key":"inefficient since","Fragments":["it"]},{"Key":"to rescan","Fragments":["the"]},{"Key":"rescan the","Fragments":["entire"]},{"Key":"entire lines","Fragments":["list"]},{"Key":"lines list","Fragments":["each"]},{"Key":"list each","Fragments":["time"]},{"Key":"know that.","Fragments":["Good"]},{"Key":"that. Good","Fragments":["to"]},{"Key":"learn and","Fragments":["Thank-you"]},{"Key":"and Thank-you","Fragments":["for"]},{"Key":"Thank-you for","Fragments":["the"]},{"Key":" Incrementing","Fragments":["balance"]},{"Key":"Incrementing balance","Fragments":["can"]},{"Key":"balance can","Fragments":["be"]},{"Key":"done without","Fragments":["pattern"]},{"Key":"without pattern","Fragments":["matching"]},{"Key":"matching using","Fragments":["map:"]},{"Key":" `balance","Fragments":["="]},{"Key":"`balance =","Fragments":["balance"]},{"Key":"= balance","Fragments":["map"]},{"Key":"balance map","Fragments":["{"]},{"Key":"map {","Fragments":["_"]},{"Key":"{ _","Fragments":["+"]},{"Key":"_ +","Fragments":["a"]},{"Key":"+ a","Fragments":["}`"]},{"Key":"a `fold`","Fragments":["over"]},{"Key":"`fold` over","Fragments":["the"]},{"Key":"the `Range`","Fragments":["of"]},{"Key":"`Range` of","Fragments":["indexes"]},{"Key":"of indexes","Fragments":["to"]},{"Key":"indexes to","Fragments":["me"]},{"Key":"w/ `zip`","Fragments":["and"]},{"Key":"`zip` and","Fragments":["`count`.","`count`","`count`","`count`"]},{"Key":" Cleaning","Fragments":["up"]},{"Key":"Cleaning up","Fragments":["reset"]},{"Key":"up reset","Fragments":["to"]},{"Key":"be less","Fragments":["weird"]},{"Key":"found [Scala","Fragments":["String"]},{"Key":"[Scala String","Fragments":["Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)"]},{"Key":"String Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)","Fragments":["really"]},{"Key":"Interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html) really","Fragments":["useful"]},{"Key":"use ```identity```","Fragments":["instead"]},{"Key":"of ```x","Fragments":["=\u003e","=\u003e"]},{"Key":"=\u003e x```,","Fragments":["but"]},{"Key":"x```, but","Fragments":["that's"]},{"Key":"that's kinda","Fragments":["matter"]},{"Key":"kinda matter","Fragments":["of"]},{"Key":"may utilize","Fragments":["some"]},{"Key":"utilize some","Fragments":["regex"]},{"Key":"for sanitizing","Fragments":["and"]},{"Key":"sanitizing and","Fragments":["splitting"]},{"Key":"and splitting","Fragments":["the"]},{"Key":"the words.","Fragments":[":-)","I"]},{"Key":"Ok, would","Fragments":["be"]},{"Key":"your findings","Fragments":["..."]},{"Key":"findings ...","Fragments":[":-)"]},{"Key":" @emanuel","Fragments":["I'm"]},{"Key":"@emanuel I'm","Fragments":["mostly"]},{"Key":"I'm mostly","Fragments":["trying"]},{"Key":"mostly trying","Fragments":["this"]},{"Key":"trying this","Fragments":["site"]},{"Key":"site to","Fragments":["explore"]},{"Key":"explore expressiveness","Fragments":["of"]},{"Key":"expressiveness of","Fragments":["different"]},{"Key":"different languages.","Fragments":["So"]},{"Key":"languages. So","Fragments":["conciseness"]},{"Key":"So conciseness","Fragments":["is"]},{"Key":"conciseness is","Fragments":["at"]},{"Key":"least as","Fragments":["important","important"]},{"Key":"as important","Fragments":["as","to"]},{"Key":"important as","Fragments":["readability"]},{"Key":"as readability","Fragments":["for"]},{"Key":"readability for","Fragments":["me"]},{"Key":"agree about","Fragments":["\"heavy","```case```"]},{"Key":"about \"heavy","Fragments":["weight\"."]},{"Key":"\"heavy weight\".","Fragments":[":-)"]},{"Key":"consider these","Fragments":["exercises"]},{"Key":"exercises as","Fragments":["a"]},{"Key":"to experiment","Fragments":["and"]},{"Key":"experiment and","Fragments":["try"]},{"Key":"different ways,","Fragments":["also","not"]},{"Key":"ways, also","Fragments":["in"]},{"Key":"of better","Fragments":["readability."]},{"Key":"shortest possible","Fragments":["code."]},{"Key":"possible code.","Fragments":["Then"]},{"Key":"code. Then","Fragments":["everything"]},{"Key":"Then everything","Fragments":["beyond"]},{"Key":"everything beyond","Fragments":["that"]},{"Key":"beyond that","Fragments":["is"]},{"Key":"an overkill.","Fragments":[":-)"]},{"Key":" @neva","Fragments":["Thanks"]},{"Key":"@neva Thanks","Fragments":["for"]},{"Key":"your suggestions!","Fragments":["I"]},{"Key":"suggestions! I","Fragments":["agree"]},{"Key":"that making","Fragments":["each"]},{"Key":"making each","Fragments":["`case`"]},{"Key":"each `case`","Fragments":["clause"]},{"Key":"`case` clause","Fragments":["speak"]},{"Key":"clause speak","Fragments":["for"]},{"Key":"speak for","Fragments":["itself"]},{"Key":"for itself","Fragments":["makes"]},{"Key":"itself makes","Fragments":["sense."]},{"Key":"sense. Regex","Fragments":["might"]},{"Key":"Regex might","Fragments":["be"]},{"Key":"too heavy","Fragments":["weight,"]},{"Key":"heavy weight,","Fragments":["and"]},{"Key":"weight, and","Fragments":["I"]},{"Key":"think regex","Fragments":["can"]},{"Key":"than simple","Fragments":["predicates."]},{"Key":"simple predicates.","Fragments":["Private"]},{"Key":"predicates. Private","Fragments":["methods"]},{"Key":"Private methods","Fragments":["do"]},{"Key":"methods do","Fragments":["improve"]},{"Key":"do improve","Fragments":["readability"]},{"Key":"still seem","Fragments":["to"]},{"Key":"bit heavy","Fragments":["weight"]},{"Key":"heavy weight","Fragments":["for"]},{"Key":"weight for","Fragments":["such"]},{"Key":"like always","Fragments":["using"]},{"Key":"always using","Fragments":["the"]},{"Key":"the case-clauses.","Fragments":["You"]},{"Key":"case-clauses. You","Fragments":["could"]},{"Key":"just simple","Fragments":["use","```Int```s"]},{"Key":"simple use","Fragments":["if-else"]},{"Key":"if-else if's","Fragments":["instead"]},{"Key":"if's instead","Fragments":["of"]},{"Key":"true match","Fragments":["variable?"]},{"Key":"match variable?","Fragments":["(which"]},{"Key":"variable? (which","Fragments":["would"]},{"Key":"(which would","Fragments":["also"]},{"Key":"readable IMHO","Fragments":["as"]},{"Key":"IMHO as","Fragments":["each"]},{"Key":"as each","Fragments":["line"]},{"Key":"line then","Fragments":["speaks"]},{"Key":"then speaks","Fragments":["for"]},{"Key":"speaks for","Fragments":["itself)."]},{"Key":"also narrow","Fragments":["down"]},{"Key":"narrow down","Fragments":["the"]},{"Key":"scope (instead","Fragments":["of"]},{"Key":"of referring","Fragments":["to"]},{"Key":"some variable","Fragments":["outside"]},{"Key":"variable outside","Fragments":["the"]},{"Key":"also turn","Fragments":["your"]},{"Key":"your if-conditions","Fragments":["into","are"]},{"Key":"if-conditions into","Fragments":["little"]},{"Key":"into little","Fragments":["private"]},{"Key":"like \"isShouting()\"","Fragments":["or"]},{"Key":"\"isShouting()\" or","Fragments":["so."]},{"Key":"try regex","Fragments":["pattern"]},{"Key":"Scala better","Fragments":["use"]},{"Key":"== instead","Fragments":["of"]},{"Key":"need .toSeq?","Fragments":["Strings"]},{"Key":".toSeq? Strings","Fragments":["are"]},{"Key":"already of","Fragments":["type"]},{"Key":"rules if","Fragments":["you"]},{"Key":"you align","Fragments":["`default`"]},{"Key":"align `default`","Fragments":["with"]},{"Key":"`default` with","Fragments":["the"]},{"Key":"the rest:","Fragments":["`private"]},{"Key":"rest: `private","Fragments":["val"]},{"Key":"`private val","Fragments":["default"]},{"Key":"= anything","Fragments":["?\u003e"]},{"Key":"anything ?\u003e","Fragments":["WHATEVER`"]},{"Key":"can skip","Fragments":["the","an"]},{"Key":"parentheses of","Fragments":["`hey`,"]},{"Key":"of `hey`,","Fragments":["the","as"]},{"Key":"`hey`, the","Fragments":["rules"]},{"Key":"`if` statement","Fragments":["in"]},{"Key":"the `RuleMaker`.","Fragments":["`hey`"]},{"Key":"`RuleMaker`. `hey`","Fragments":["can"]},{"Key":"`hey` can","Fragments":["be"]},{"Key":"`val` (would","Fragments":["require"]},{"Key":"(would require","Fragments":["it"]},{"Key":"require it","Fragments":["to"]},{"Key":"another place","Fragments":["or"]},{"Key":"place or","Fragments":["mark"]},{"Key":"or mark","Fragments":["the"]},{"Key":"mark the","Fragments":["rules"]},{"Key":"rules as","Fragments":["`lazy`)."]},{"Key":"good -","Fragments":["however","however"]},{"Key":"- however","Fragments":["do","what"]},{"Key":"however do","Fragments":["we"]},{"Key":"do we","Fragments":["need"]},{"Key":"we need","Fragments":["40"]},{"Key":"need 40","Fragments":["lines?"]},{"Key":"good question.","Fragments":["Half"]},{"Key":"question. Half","Fragments":["of"]},{"Key":"Half of","Fragments":["them"]},{"Key":"them are","Fragments":["boilerplate."]},{"Key":"are boilerplate.","Fragments":["Your"]},{"Key":"boilerplate. Your","Fragments":["solution"]},{"Key":"solution definitely","Fragments":["wins"]},{"Key":"definitely wins","Fragments":["there."]},{"Key":"wins there.","Fragments":["I'd"]},{"Key":"there. I'd","Fragments":["argue"]},{"Key":"argue mine","Fragments":["is"]},{"Key":"mine is","Fragments":["simpler"]},{"Key":"simpler though;","Fragments":["you"]},{"Key":"though; you","Fragments":["can"]},{"Key":"can move","Fragments":["the"]},{"Key":"second half","Fragments":["to"]},{"Key":"half to","Fragments":["another"]},{"Key":"another file,","Fragments":["ignore"]},{"Key":"file, ignore","Fragments":["it"]},{"Key":"ignore it","Fragments":["and"]},{"Key":"still makes","Fragments":["perfect"]},{"Key":"makes perfect","Fragments":["sense"]},{"Key":"perfect sense","Fragments":["while"]},{"Key":"sense while","Fragments":["being"]},{"Key":"being very","Fragments":["extensible."]},{"Key":"is half-way","Fragments":["between"]},{"Key":"half-way between","Fragments":["FP"]},{"Key":"between FP","Fragments":["and"]},{"Key":"FP and","Fragments":["OO."]},{"Key":"and OO.","Fragments":["I"]},{"Key":"OO. I","Fragments":["think"]},{"Key":"it strikes","Fragments":["a"]},{"Key":"strikes a","Fragments":["good"]},{"Key":"initially thought","Fragments":["of"]},{"Key":"but ended","Fragments":["up","up"]},{"Key":"up using","Fragments":["a","ranges,"]},{"Key":"simple if-else.","Fragments":["What"]},{"Key":"if-else. What","Fragments":["is"]},{"Key":"the idiomatic","Fragments":["way"]},{"Key":"idiomatic way","Fragments":["of"]},{"Key":"doing this","Fragments":["in","quickly!"]},{"Key":"in Scala's","Fragments":["pattern"]},{"Key":"declare private","Fragments":["only"]},{"Key":"private only","Fragments":["once,"]},{"Key":"once, like","Fragments":["in"]},{"Key":"in ruby","Fragments":["instead"]},{"Key":"ruby instead","Fragments":["of"]},{"Key":"of it,","Fragments":["i"]},{"Key":"it, i","Fragments":["could've","forget"]},{"Key":"i could've","Fragments":["added"]},{"Key":"could've added","Fragments":["isYelling"]},{"Key":"added isYelling","Fragments":["and"]},{"Key":"isYelling and","Fragments":["isQuestion"]},{"Key":"and isQuestion","Fragments":["to"]},{"Key":"isQuestion to","Fragments":["a"]},{"Key":"a custom","Fragments":["String"]},{"Key":"custom String","Fragments":["extension"]},{"Key":"String extension","Fragments":["like"]},{"Key":"extension like","Fragments":["StringOps"]},{"Key":"ok, so","Fragments":["2nd"]},{"Key":"so 2nd","Fragments":["iteration"]},{"Key":"2nd iteration","Fragments":["has"]},{"Key":"iteration has","Fragments":["one"]},{"Key":"one less","Fragments":["pair"]},{"Key":"less pair","Fragments":["of"]},{"Key":"pair of","Fragments":["braces,","lists"]},{"Key":"of braces,","Fragments":["nice"]},{"Key":"braces, nice","Fragments":["!"]},{"Key":"nice !","Fragments":[":)"]},{"Key":"solution might","Fragments":["run","involve","be"]},{"Key":"run into","Fragments":["issues","an"]},{"Key":"into issues","Fragments":["for"]},{"Key":"issues for","Fragments":["words"]},{"Key":"for words","Fragments":["longer"]},{"Key":"words longer","Fragments":["than"]},{"Key":"than 10","Fragments":["characters,"]},{"Key":"10 characters,","Fragments":["remember"]},{"Key":"characters, remember","Fragments":["n!"]},{"Key":"remember n!","Fragments":["grows"]},{"Key":"n! grows","Fragments":["hyper-exponentially!"]},{"Key":"use (lazy)","Fragments":["```val```s"]},{"Key":"(lazy) ```val```s","Fragments":["instead"]},{"Key":"```val```s instead","Fragments":["of"]},{"Key":"of ```def```s","Fragments":["as"]},{"Key":"```def```s as","Fragments":["the"]},{"Key":" better","Fragments":["use"]},{"Key":"use ```math.round```","Fragments":["or"]},{"Key":"```math.round``` or","Fragments":["so"]},{"Key":"so instead","Fragments":["of"]},{"Key":"```++``` operation","Fragments":["already"]},{"Key":"operation already","Fragments":["does"]},{"Key":"already does","Fragments":["the"]},{"Key":"right thing,","Fragments":["so"]},{"Key":"thing, so","Fragments":["no"]},{"Key":" Alternatively","Fragments":["you"]},{"Key":"using recursion,","Fragments":["this"]},{"Key":"recursion, this","Fragments":["way"]},{"Key":"do without","Fragments":["modifying"]},{"Key":"without modifying","Fragments":["state."]},{"Key":" Personally","Fragments":["I","I","I"]},{"Key":"written `!(yr","Fragments":["%"]},{"Key":"`!(yr %","Fragments":["100"]},{"Key":"% 100","Fragments":["==","!=","=="]},{"Key":"100 ==","Fragments":["0)`","0)"]},{"Key":"== 0)`","Fragments":["as"]},{"Key":"0)` as","Fragments":["`yr"]},{"Key":"as `yr","Fragments":["%"]},{"Key":"`yr %","Fragments":["100"]},{"Key":"100 !=","Fragments":["0`"]},{"Key":"a longer","Fragments":["way"]},{"Key":"longer way","Fragments":["of"]},{"Key":"of refactorings.","Fragments":["I"]},{"Key":"refactorings. I","Fragments":["think"]},{"Key":"think what","Fragments":["the"]},{"Key":"original commenter","Fragments":["actually"]},{"Key":"commenter actually","Fragments":["ment"]},{"Key":"actually ment","Fragments":["is"]},{"Key":"ment is","Fragments":["that"]},{"Key":" `def","Fragments":["isLeap"]},{"Key":"`def isLeap","Fragments":[":"]},{"Key":"isLeap :","Fragments":["Boolean"]},{"Key":": Boolean","Fragments":["="]},{"Key":"= yr","Fragments":["%"]},{"Key":"yr %","Fragments":["4","400"]},{"Key":"% 4","Fragments":["=="]},{"Key":"4 ==","Fragments":["0"]},{"Key":"0 \u0026\u0026","Fragments":["(!(yr"]},{"Key":"\u0026\u0026 (!(yr","Fragments":["%"]},{"Key":"(!(yr %","Fragments":["100"]},{"Key":"== 0)","Fragments":["||"]},{"Key":"0) ||","Fragments":["yr"]},{"Key":"|| yr","Fragments":["%"]},{"Key":"% 400","Fragments":["=="]},{"Key":"400 ==","Fragments":["0)`"]},{"Key":"need an","Fragments":["if"]},{"Key":"statement with","Fragments":["explicit","another"]},{"Key":"with explicit","Fragments":["`true`"]},{"Key":"explicit `true`","Fragments":["and"]},{"Key":"`true` and","Fragments":["`false`"]},{"Key":"and `false`","Fragments":["you"]},{"Key":"`false` you","Fragments":["also"]},{"Key":"temporary variable.","Fragments":["The"]},{"Key":"variable. The","Fragments":["statement"]},{"Key":"The statement","Fragments":["itself"]},{"Key":"statement itself","Fragments":["is"]},{"Key":"is of","Fragments":["type"]},{"Key":" 와우","Fragments":["코드가"]},{"Key":"와우 코드가","Fragments":["멋지네요"]},{"Key":"코드가 멋지네요","Fragments":[":)"]},{"Key":" 두가지","Fragments":["배우고"]},{"Key":"두가지 배우고","Fragments":["갑니다."]},{"Key":" `match`문","Fragments":["안에"]},{"Key":"`match`문 안에","Fragments":["조건문"]},{"Key":"안에 조건문","Fragments":["이"]},{"Key":"조건문 이","Fragments":["들어"]},{"Key":"이 들어","Fragments":["가는"]},{"Key":"들어 가는","Fragments":["것이랑"]},{"Key":" `x","Fragments":["=="]},{"Key":"`x ==","Fragments":["x.toUpperCase"]},{"Key":"== x.toUpperCase","Fragments":["\u0026\u0026"]},{"Key":"x.toUpperCase \u0026\u0026","Fragments":["x"]},{"Key":"\u0026\u0026 x","Fragments":["!="]},{"Key":"!= x.toLowerCase`","Fragments":["이"]},{"Key":"x.toLowerCase` 이","Fragments":["로직이"]},{"Key":"이 로직이","Fragments":["맘에"]},{"Key":"로직이 맘에","Fragments":["드네요"]},{"Key":"simplified `addends`","Fragments":["w/"]},{"Key":"`addends` w/","Fragments":["`maxIndex`."]},{"Key":" foldLeft","Fragments":["over"]},{"Key":"foldLeft over","Fragments":["keys,"]},{"Key":"over keys,","Fragments":["not"]},{"Key":"keys, not","Fragments":["the"]},{"Key":"is largely","Fragments":["a"]},{"Key":"largely a","Fragments":["copy"]},{"Key":"of @chris's","Fragments":["version."]},{"Key":"@chris's version.","Fragments":["After"]},{"Key":"version. After","Fragments":["reading"]},{"Key":"After reading","Fragments":["his,"]},{"Key":"reading his,","Fragments":["I"]},{"Key":"his, I","Fragments":["decided"]},{"Key":"to redo","Fragments":["mine,"]},{"Key":"redo mine,","Fragments":["and"]},{"Key":"mine, and","Fragments":["it"]},{"Key":"it came","Fragments":["out"]},{"Key":"came out","Fragments":["nearly"]},{"Key":"out nearly","Fragments":["identical."]},{"Key":" @leslie:","Fragments":["sorry","What"]},{"Key":"@leslie: sorry","Fragments":["I"]},{"Key":"sorry I","Fragments":["misunderstood"]},{"Key":"I misunderstood","Fragments":["you,"]},{"Key":"misunderstood you,","Fragments":["I"]},{"Key":"you, I","Fragments":["thought"]},{"Key":"you meant","Fragments":["lazy"]},{"Key":"meant lazy","Fragments":["modifier"]},{"Key":"lazy modifier","Fragments":["in","appropriate"]},{"Key":"modifier in","Fragments":["regex."]},{"Key":" \\w","Fragments":["is","match"]},{"Key":"\\w is","Fragments":["a","a"]},{"Key":"special token","Fragments":["that"]},{"Key":"token that","Fragments":["is"]},{"Key":"is equal","Fragments":["to","to"]},{"Key":"equal to","Fragments":["[a-zA-Z0-9_],","the"]},{"Key":"to [a-zA-Z0-9_],","Fragments":["so"]},{"Key":"[a-zA-Z0-9_], so","Fragments":["I"]},{"Key":"added '","Fragments":["and"]},{"Key":"' and","Fragments":["make"]},{"Key":"with +","Fragments":["and"]},{"Key":"+ and","Fragments":["of"]},{"Key":"and of","Fragments":["course","course","course"]},{"Key":"course inverted","Fragments":["it."]},{"Key":"inverted it.","Fragments":["So"]},{"Key":"it. So","Fragments":["it"]},{"Key":"So it","Fragments":["will","depends","is"]},{"Key":"will match","Fragments":["everything"]},{"Key":"match everything","Fragments":["besides"]},{"Key":"everything besides","Fragments":["these"]},{"Key":"besides these","Fragments":["mentioned"]},{"Key":"these mentioned","Fragments":["before."]},{"Key":"@leslie: What","Fragments":["would"]},{"Key":"you advice","Fragments":["to"]},{"Key":"advice to","Fragments":["look"]},{"Key":"into as","Fragments":["more"]},{"Key":"as more","Fragments":["efficient"]},{"Key":"totally agree,","Fragments":["the"]},{"Key":"agree, the","Fragments":["regex"]},{"Key":"is sheer","Fragments":["beauty!"]},{"Key":"Also interesting","Fragments":["is"]},{"Key":"interesting is","Fragments":["your"]},{"Key":"is your","Fragments":["combination"]},{"Key":"your combination","Fragments":["of"]},{"Key":"of groupBy","Fragments":["and","-"]},{"Key":"groupBy and","Fragments":["mapValues.","then","mapValues"]},{"Key":"don't care","Fragments":["about"]},{"Key":"about efficiency","Fragments":["this"]},{"Key":"efficiency this","Fragments":["might"]},{"Key":"most elegant","Fragments":["you"]},{"Key":"elegant you","Fragments":["can"]},{"Key":"Re: the","Fragments":["regex."]},{"Key":"the regex.","Fragments":["From"]},{"Key":"regex. From","Fragments":["my"]},{"Key":"From my","Fragments":["limited"]},{"Key":"my limited","Fragments":["understanding"]},{"Key":"limited understanding","Fragments":["of"]},{"Key":"regex it","Fragments":["looks"]},{"Key":"like [^\\w']","Fragments":["would"]},{"Key":"[^\\w'] would","Fragments":["catch"]},{"Key":"would catch","Fragments":["everything"]},{"Key":"catch everything","Fragments":["that"]},{"Key":"that wasn't","Fragments":["a"]},{"Key":"wasn't a","Fragments":["backslash,"]},{"Key":"a backslash,","Fragments":["a"]},{"Key":"backslash, a","Fragments":["w,"]},{"Key":"a w,","Fragments":["or"]},{"Key":"w, or","Fragments":["a"]},{"Key":"a '.","Fragments":["But"]},{"Key":"'. But","Fragments":["I'm"]},{"Key":"I'm guessing","Fragments":["\\w"]},{"Key":"guessing \\w","Fragments":["is"]},{"Key":"special token,","Fragments":["perhaps"]},{"Key":"token, perhaps","Fragments":["meaning"]},{"Key":"perhaps meaning","Fragments":["whole"]},{"Key":"meaning whole","Fragments":["words?"]},{"Key":"I follow","Fragments":["you."]},{"Key":"follow you.","Fragments":["Making"]},{"Key":"you. Making","Fragments":["the"]},{"Key":"Making the","Fragments":["val"]},{"Key":"val lazy","Fragments":["changes"]},{"Key":"lazy changes","Fragments":["nothing"]},{"Key":"changes nothing","Fragments":["except"]},{"Key":"nothing except","Fragments":["when"]},{"Key":"except when","Fragments":["the"]},{"Key":"the assignment","Fragments":["is"]},{"Key":"assignment is","Fragments":["evaluated,","always"]},{"Key":"is evaluated,","Fragments":["no?"]},{"Key":"evaluated, no?","Fragments":["That"]},{"Key":"no? That","Fragments":["is"]},{"Key":"is evaluated","Fragments":["on"]},{"Key":"time called","Fragments":["instead"]},{"Key":"called instead","Fragments":["of"]},{"Key":"of when","Fragments":["the"]},{"Key":"the Phrase","Fragments":["object"]},{"Key":"Phrase object","Fragments":["is"]},{"Key":"is instantiated.","Fragments":["If"]},{"Key":"instantiated. If","Fragments":["your"]},{"Key":"is counting","Fragments":["non-words"]},{"Key":"counting non-words","Fragments":["as"]},{"Key":"non-words as","Fragments":["words"]},{"Key":"as words","Fragments":["that"]},{"Key":"that sounds","Fragments":["like"]},{"Key":"problem regardless","Fragments":["of"]},{"Key":" @laurel:","Fragments":["I"]},{"Key":"@laurel: I","Fragments":["don't"]},{"Key":"the lazy","Fragments":["modifier,"]},{"Key":"lazy modifier,","Fragments":["because"]},{"Key":"modifier, because","Fragments":["in"]},{"Key":"get empty","Fragments":["\"\""]},{"Key":"empty \"\"","Fragments":["as"]},{"Key":"\"\" as","Fragments":["a"]},{"Key":" [^\\w']+","Fragments":["match"]},{"Key":"[^\\w']+ match","Fragments":["a"]},{"Key":"match a","Fragments":["single"]},{"Key":"single character","Fragments":["not"]},{"Key":"character not","Fragments":["present"]},{"Key":"not present","Fragments":["in"]},{"Key":"present in","Fragments":["the"]},{"Key":" Quantifier:","Fragments":["+"]},{"Key":"Quantifier: +","Fragments":["Between"]},{"Key":"+ Between","Fragments":["one"]},{"Key":"Between one","Fragments":["and"]},{"Key":"and unlimited","Fragments":["times,"]},{"Key":"unlimited times,","Fragments":["as"]},{"Key":"times, as","Fragments":["many"]},{"Key":"as many","Fragments":["times"]},{"Key":"many times","Fragments":["as"]},{"Key":"times as","Fragments":["possible,"]},{"Key":"possible, giving","Fragments":["back"]},{"Key":"giving back","Fragments":["as"]},{"Key":"back as","Fragments":["needed"]},{"Key":"as needed","Fragments":["[greedy]"]},{"Key":"\\w match","Fragments":["any"]},{"Key":"match any","Fragments":["word"]},{"Key":"any word","Fragments":["character"]},{"Key":"word character","Fragments":["[a-zA-Z0-9_]"]},{"Key":"a thing","Fragments":["of"]},{"Key":"thing of","Fragments":["beauty."]},{"Key":"of beauty.","Fragments":["I"]},{"Key":"beauty. I","Fragments":["can't"]},{"Key":"even figure","Fragments":["out"]},{"Key":"to *Google*","Fragments":["that"]},{"Key":"*Google* that","Fragments":["regex"]},{"Key":"that regex","Fragments":["to"]},{"Key":"it does!","Fragments":["Would"]},{"Key":"does! Would","Fragments":["you"]},{"Key":"modifier appropriate","Fragments":["here?"]},{"Key":"appropriate here?","Fragments":["My"]},{"Key":"here? My","Fragments":["instinct"]},{"Key":"My instinct","Fragments":["is"]},{"Key":"instinct is","Fragments":["to"]},{"Key":"to tag","Fragments":["that"]},{"Key":"tag that","Fragments":["wherever"]},{"Key":"that wherever","Fragments":["it's"]},{"Key":"wherever it's","Fragments":["an"]},{"Key":"an externally","Fragments":["called"]},{"Key":"externally called","Fragments":["val"]},{"Key":"called val","Fragments":["with"]},{"Key":"I vaguely","Fragments":["remember"]},{"Key":"vaguely remember","Fragments":["something"]},{"Key":"remember something","Fragments":["about"]},{"Key":"something about","Fragments":["implicit"]},{"Key":"about implicit","Fragments":["conversions"]},{"Key":"implicit conversions","Fragments":["being"]},{"Key":"conversions being","Fragments":["considered"]},{"Key":"being considered","Fragments":["bad"]},{"Key":"considered bad","Fragments":["now?"]},{"Key":"bad now?","Fragments":["Or"]},{"Key":"now? Or","Fragments":["was"]},{"Key":"Or was","Fragments":["it"]},{"Key":"was it","Fragments":["something"]},{"Key":"great! Tough","Fragments":["your"]},{"Key":"Tough your","Fragments":["variables"]},{"Key":"your variables","Fragments":["could"]},{"Key":"variables could","Fragments":["be"]},{"Key":" sophisticated","Fragments":["logic."]},{"Key":"sophisticated logic.","Fragments":[":-)"]},{"Key":"it simple:","Fragments":["just"]},{"Key":"simple: just","Fragments":["increase"]},{"Key":"just increase","Fragments":["by"]},{"Key":"But your","Fragments":["solution"]},{"Key":"efficient (once","Fragments":["you've"]},{"Key":"(once you've","Fragments":["got"]},{"Key":"you've got","Fragments":["your","here","good"]},{"Key":"got your","Fragments":["head","point"]},{"Key":"your head","Fragments":["around","and"]},{"Key":"that Strings","Fragments":["are"]},{"Key":"zip two","Fragments":["Strings."]},{"Key":"about ```pending```:","Fragments":["just"]},{"Key":"```pending```: just","Fragments":["remove"]},{"Key":"just remove","Fragments":["that"]},{"Key":"that keyword","Fragments":["from"]},{"Key":"keyword from","Fragments":["the"]},{"Key":"resp. tests.","Fragments":["The"]},{"Key":"tests. The","Fragments":["guy"]},{"Key":"The guy","Fragments":["who"]},{"Key":"guy who","Fragments":["wrote"]},{"Key":"who wrote","Fragments":["them"]},{"Key":"wrote them","Fragments":["seems"]},{"Key":"them seems","Fragments":["to"]},{"Key":"of test-driven","Fragments":["development"]},{"Key":"test-driven development","Fragments":["and"]},{"Key":"development and","Fragments":["wanted"]},{"Key":"wanted you","Fragments":["to"]},{"Key":"fix one","Fragments":["test"]},{"Key":"test at","Fragments":["a"]},{"Key":"a time.","Fragments":[":-)"]},{"Key":"about ```case```","Fragments":["and"]},{"Key":"```case``` and","Fragments":["```if```:"]},{"Key":"and ```if```:","Fragments":["if"]},{"Key":"```if```: if","Fragments":["you"]},{"Key":"really have","Fragments":["pattern","found"]},{"Key":"have pattern","Fragments":["matching"]},{"Key":"but boolean","Fragments":["conditions"]},{"Key":"boolean conditions","Fragments":["then"]},{"Key":"conditions then","Fragments":["```if```"]},{"Key":"then ```if```","Fragments":["is"]},{"Key":"```if``` is","Fragments":["perfectly"]},{"Key":"The learning","Fragments":["curve"]},{"Key":"learning curve","Fragments":["for"]},{"Key":"curve for","Fragments":["Scala"]},{"Key":"Scala may","Fragments":["be"]},{"Key":"be steep,","Fragments":["but"]},{"Key":"steep, but","Fragments":["IMHO"]},{"Key":"but IMHO","Fragments":["it"]},{"Key":"IMHO it","Fragments":["is","is"]},{"Key":"is worth","Fragments":["the","the"]},{"Key":"worth the","Fragments":["effort!","hazzle.","cost"]},{"Key":"the effort!","Fragments":[":-)"]},{"Key":" `case`","Fragments":["annoyed"]},{"Key":"`case` annoyed","Fragments":["me"]},{"Key":"annoyed me","Fragments":["in"]},{"Key":"a previous","Fragments":["exercise,"]},{"Key":"previous exercise,","Fragments":["so"]},{"Key":"am punishing","Fragments":["it."]},{"Key":"punishing it.","Fragments":["I"]},{"Key":"about zip,","Fragments":["and"]},{"Key":"zip, and","Fragments":["will"]},{"Key":"try that","Fragments":["in"]},{"Key":"been having","Fragments":["trouble"]},{"Key":"having trouble","Fragments":["finding","finding"]},{"Key":"trouble finding","Fragments":["out","the"]},{"Key":"finding out","Fragments":["how"]},{"Key":"with scala,","Fragments":["because"]},{"Key":"scala, because","Fragments":["it"]},{"Key":"like useful","Fragments":["documentation"]},{"Key":"useful documentation","Fragments":["is"]},{"Key":"documentation is","Fragments":["not"]},{"Key":"not consolidated,","Fragments":["but"]},{"Key":"consolidated, but","Fragments":["instead"]},{"Key":"but instead","Fragments":["spread","cycle"]},{"Key":"instead spread","Fragments":["like"]},{"Key":"spread like","Fragments":["butter"]},{"Key":"like butter","Fragments":["over"]},{"Key":"butter over","Fragments":["the"]},{"Key":"the toasty,","Fragments":["toasty"]},{"Key":"toasty, toasty","Fragments":["internet."]},{"Key":"toasty internet.","Fragments":["It's"]},{"Key":"internet. It's","Fragments":["much"]},{"Key":"It's much","Fragments":["more"]},{"Key":"more difficult","Fragments":["to","to","to"]},{"Key":"to search","Fragments":["for","for"]},{"Key":"search for","Fragments":["butter","ham.","\"scala"]},{"Key":"for butter","Fragments":["than"]},{"Key":"butter than","Fragments":["it"]},{"Key":"Also, wouldn't","Fragments":["using"]},{"Key":"wouldn't using","Fragments":["List.zip"]},{"Key":"using List.zip","Fragments":["first"]},{"Key":"List.zip first","Fragments":["involve"]},{"Key":"first involve","Fragments":["converting"]},{"Key":"involve converting","Fragments":["from"]},{"Key":"converting from","Fragments":["strings,"]},{"Key":"from strings,","Fragments":["and"]},{"Key":"if so,","Fragments":["what"]},{"Key":"so, what","Fragments":["would"]},{"Key":"would the","Fragments":["relative"]},{"Key":"the relative","Fragments":["speed"]},{"Key":"relative speed","Fragments":["cost"]},{"Key":"speed cost","Fragments":["be"]},{"Key":"cost be","Fragments":["for"]},{"Key":"be for","Fragments":["a"]},{"Key":"a few-billion-character","Fragments":["string"]},{"Key":"few-billion-character string","Fragments":["when"]},{"Key":"string when","Fragments":["doing"]},{"Key":"when doing","Fragments":["it"]},{"Key":"way vs.","Fragments":["just"]},{"Key":"vs. just","Fragments":["working"]},{"Key":"just working","Fragments":["with"]},{"Key":"Finally, I've","Fragments":["just"]},{"Key":"noticed something.","Fragments":["It"]},{"Key":"something. It","Fragments":["looks"]},{"Key":"like sometimes","Fragments":["`sbt"]},{"Key":"sometimes `sbt","Fragments":["test`"]},{"Key":"`sbt test`","Fragments":["isn't"]},{"Key":"test` isn't","Fragments":["running"]},{"Key":"isn't running","Fragments":["all"]},{"Key":"running all","Fragments":["the"]},{"Key":"tests. Instead","Fragments":["they"]},{"Key":"Instead they","Fragments":["just"]},{"Key":"they just","Fragments":["say"]},{"Key":"say (pending)","Fragments":["and"]},{"Key":"(pending) and","Fragments":["it"]},{"Key":"doesn't say","Fragments":["why.","there"]},{"Key":"say why.","Fragments":["Is"]},{"Key":"why. Is","Fragments":["there"]},{"Key":"any way","Fragments":["I"]},{"Key":"using case","Fragments":["matching","classes"]},{"Key":"scala specific","Fragments":["way"]},{"Key":"specific way","Fragments":["than"]},{"Key":"using multiple","Fragments":["if/else"]},{"Key":"multiple if/else","Fragments":["statements,"]},{"Key":"if/else statements,","Fragments":["however,"]},{"Key":"statements, however,","Fragments":["in"]},{"Key":"however, in","Fragments":["this"]},{"Key":"succinct solution","Fragments":["with"]},{"Key":"the built","Fragments":["in"]},{"Key":"called zip()","Fragments":["in"]},{"Key":"zip() in","Fragments":["List"]},{"Key":"in List","Fragments":["and"]},{"Key":"List and","Fragments":["the"]},{"Key":"count method","Fragments":["which","is","several"]},{"Key":"which takes","Fragments":["a"]},{"Key":" Small","Fragments":["enhancement","nitpick:"]},{"Key":"Small enhancement","Fragments":["on"]},{"Key":"enhancement on","Fragments":["FreddieSanchez's"]},{"Key":"on FreddieSanchez's","Fragments":["2nd"]},{"Key":"FreddieSanchez's 2nd","Fragments":["verson."]},{"Key":" @jacklyn","Fragments":["Thank"]},{"Key":"@jacklyn Thank","Fragments":["you"]},{"Key":"feedback! Glad","Fragments":["you"]},{"Key":"Glad you","Fragments":["like","like"]},{"Key":"you like","Fragments":["the","\"utterance\"!"]},{"Key":" Avoiding","Fragments":["duplicate","identical"]},{"Key":"Avoiding duplicate","Fragments":["names"]},{"Key":"names is","Fragments":["in","limited","limited","limited","not"]},{"Key":"README of","Fragments":["this"]},{"Key":"exercise if","Fragments":["I"]},{"Key":"I recall","Fragments":["correctly"]},{"Key":"recall correctly","Fragments":[":-)."]},{"Key":"I followed","Fragments":["up"]},{"Key":"followed up","Fragments":["on"]},{"Key":"on you","Fragments":["suggestion",":)"]},{"Key":"you suggestion","Fragments":["and"]},{"Key":"suggestion and","Fragments":["introduced"]},{"Key":"and introduced","Fragments":["the"]},{"Key":"introduced the","Fragments":["static"]},{"Key":"the static","Fragments":["in"]},{"Key":"static in","Fragments":["that"]},{"Key":"that version","Fragments":["of"]},{"Key":"solution (#4),","Fragments":["nicer"]},{"Key":"(#4), nicer","Fragments":["indeed."]},{"Key":"the infinite","Fragments":["loop:"]},{"Key":"infinite loop:","Fragments":["you"]},{"Key":"loop: you","Fragments":["are"]},{"Key":"right, well","Fragments":["spotted!"]},{"Key":"checked with","Fragments":["a"]},{"Key":"a simplified","Fragments":["version"]},{"Key":"simplified version","Fragments":["(only","here:"]},{"Key":"version (only","Fragments":["one"]},{"Key":"(only one","Fragments":["digit"]},{"Key":"one digit","Fragments":["names)"]},{"Key":"digit names)","Fragments":["and"]},{"Key":"names) and","Fragments":["if"]},{"Key":"over 10","Fragments":["robots"]},{"Key":"10 robots","Fragments":["you"]},{"Key":"robots you","Fragments":["end"]},{"Key":"you end","Fragments":["up"]},{"Key":"up looping","Fragments":["forever."]},{"Key":"I cannot","Fragments":["see"]},{"Key":"cannot see","Fragments":["a"]},{"Key":"prevent the","Fragments":["current","case","same"]},{"Key":"current setup","Fragments":["using"]},{"Key":"setup using","Fragments":["`Random.alphanumeric`."]},{"Key":"tried something","Fragments":["else"]},{"Key":"else (#6):","Fragments":["build"]},{"Key":"(#6): build","Fragments":["a"]},{"Key":"lazy list","Fragments":["of","from"]},{"Key":"possible combinations","Fragments":["and"]},{"Key":"combinations and","Fragments":["shuffle","then"]},{"Key":"and shuffle","Fragments":["them."]},{"Key":"shuffle them.","Fragments":["When"]},{"Key":"them. When","Fragments":["it"]},{"Key":"When it","Fragments":["gets"]},{"Key":"gets exhausted","Fragments":["it"]},{"Key":"exhausted it","Fragments":["just"]},{"Key":"just throws","Fragments":["an"]},{"Key":"as my","Fragments":["original"]},{"Key":"my original","Fragments":["solution"]},{"Key":"original solution","Fragments":["but"]},{"Key":"loop and","Fragments":["is"]},{"Key":"Cool, you're","Fragments":["handling"]},{"Key":"you're handling","Fragments":["collisions"]},{"Key":"handling collisions","Fragments":["between"]},{"Key":"collisions between","Fragments":["names!"]},{"Key":"of `Random.alphanumeric`","Fragments":["(but"]},{"Key":"`Random.alphanumeric` (but","Fragments":["note"]},{"Key":"(but note","Fragments":["that"]},{"Key":"note that","Fragments":["it","this","you"]},{"Key":"static way","Fragments":["without"]},{"Key":"new instance","Fragments":["of","to","of"]},{"Key":"try but","Fragments":["isn't"]},{"Key":"isn't there","Fragments":["a"]},{"Key":"a risk","Fragments":["of"]},{"Key":"of infinite","Fragments":["loop"]},{"Key":"loop when","Fragments":["all"]},{"Key":"when all","Fragments":["names"]},{"Key":"names have","Fragments":["already"]},{"Key":"already been","Fragments":["generated?","answered"]},{"Key":"Simplified based","Fragments":["on"]},{"Key":"on other","Fragments":["solutions:"]},{"Key":" -no","Fragments":["need"]},{"Key":"-no need","Fragments":["to"]},{"Key":"to cut","Fragments":["down"]},{"Key":"the end:","Fragments":["zip"]},{"Key":"end: zip","Fragments":["will"]},{"Key":"zip will","Fragments":["do"]},{"Key":"-use partial","Fragments":["function"]},{"Key":"partial function","Fragments":["for","to"]},{"Key":"for count:","Fragments":["no"]},{"Key":"count: no","Fragments":["need"]},{"Key":"declare Char","Fragments":["types"]},{"Key":"Char types","Fragments":["in"]},{"Key":" Like","Fragments":["the","the","I"]},{"Key":"Like the","Fragments":["way","case"]},{"Key":"way you've","Fragments":["given"]},{"Key":"you've given","Fragments":["more"]},{"Key":"given more","Fragments":["context"]},{"Key":"more context","Fragments":["to"]},{"Key":"context to","Fragments":["the"]},{"Key":"those explanatory","Fragments":["methods."]},{"Key":"the \"return\"","Fragments":["keyword","keywords"]},{"Key":"somewhat considered","Fragments":["a"]},{"Key":"considered a","Fragments":["bad","question"]},{"Key":"for telling","Fragments":["about"]},{"Key":"telling about","Fragments":["the"]},{"Key":"the bad","Fragments":["practice."]},{"Key":"bad practice.","Fragments":["I"]},{"Key":"practice. I","Fragments":["wasn't"]},{"Key":"wasn't aware","Fragments":["of"]},{"Key":"use combination","Fragments":["of"]},{"Key":"of ```groupBy```","Fragments":["and"]},{"Key":"```groupBy``` and","Fragments":["```mapValues```"]},{"Key":"```mapValues``` to","Fragments":["make"]},{"Key":"make you","Fragments":["code"]},{"Key":" Braces","Fragments":["for"]},{"Key":"Braces for","Fragments":["pure"]},{"Key":"for pure","Fragments":["functions"]},{"Key":"functions (such","Fragments":["as"]},{"Key":"as toLowerCase)","Fragments":["should"]},{"Key":"toLowerCase) should","Fragments":["be"]},{"Key":"omitted (http://docs.scala-lang.org/style/control-structures.html#curly-braces).","Fragments":["Also"]},{"Key":"(http://docs.scala-lang.org/style/control-structures.html#curly-braces). Also","Fragments":["lambdas"]},{"Key":"Also lambdas","Fragments":["```x"]},{"Key":"lambdas ```x","Fragments":["=\u003e"]},{"Key":"=\u003e x.foo```","Fragments":["could"]},{"Key":"x.foo``` could","Fragments":["be"]},{"Key":"simplified to","Fragments":["```_.foo```."]},{"Key":"use ```str.toLowerCase.split(\"[^\\\\w']+\")```","Fragments":["and"]},{"Key":"```str.toLowerCase.split(\"[^\\\\w']+\")``` and","Fragments":["get"]},{"Key":"get thereby","Fragments":["rid"]},{"Key":"thereby rid","Fragments":["of"]},{"Key":"of lines","Fragments":["5-7."]},{"Key":" short","Fragments":["and"]},{"Key":"is `names`","Fragments":["a"]},{"Key":"`names` a","Fragments":["`var`?"]},{"Key":" don't","Fragments":["use","know","you"]},{"Key":"use technical","Fragments":["details"]},{"Key":"in names","Fragments":["if"]},{"Key":"names if","Fragments":["they"]},{"Key":"really important.","Fragments":["I"]},{"Key":"important. I","Fragments":["would"]},{"Key":"would rather","Fragments":["have","use"]},{"Key":"have `pots`","Fragments":["instead"]},{"Key":"`pots` instead","Fragments":["of"]},{"Key":"of `potsArr`.","Fragments":["And"]},{"Key":"`potsArr`. And","Fragments":["then"]},{"Key":"constructor arg:","Fragments":["perhaps"]},{"Key":"arg: perhaps","Fragments":["something"]},{"Key":"perhaps something","Fragments":["like"]},{"Key":"on `Seq`","Fragments":["that"]},{"Key":"`Seq` that","Fragments":["can"]},{"Key":"help here","Fragments":["(including"]},{"Key":"here (including","Fragments":["`grouped`)"]},{"Key":"at ```zip```","Fragments":["function"]},{"Key":"uses second","Fragments":["approach."]},{"Key":"* `return`","Fragments":["isn't"]},{"Key":"`return` isn't","Fragments":["needed"]},{"Key":"* Consider","Fragments":["using","whether","aligning"]},{"Key":"using `drop(1)`","Fragments":["instead"]},{"Key":"`drop(1)` instead","Fragments":["of"]},{"Key":"of `substring(1,","Fragments":["a.length)`"]},{"Key":" Love","Fragments":["the"]},{"Key":"Love the","Fragments":["recursion.","graceful"]},{"Key":" Tail","Fragments":["recursive"]},{"Key":"Tail recursive","Fragments":["version"]},{"Key":"recursive version","Fragments":["of"]},{"Key":"only complaint","Fragments":["I"]},{"Key":"complaint I","Fragments":["could"]},{"Key":"have is","Fragments":["that"]},{"Key":"be so","Fragments":["economical"]},{"Key":"so economical","Fragments":["with"]},{"Key":"economical with","Fragments":["space"]},{"Key":"with space","Fragments":["characters"]},{"Key":"space characters","Fragments":["around"]},{"Key":"characters around","Fragments":["colons,"]},{"Key":"around colons,","Fragments":["curly"]},{"Key":"colons, curly","Fragments":["braces"]},{"Key":"and equal","Fragments":["signs."]},{"Key":"equal signs.","Fragments":[";-)"]},{"Key":" @elaina","Fragments":["I"]},{"Key":"@elaina I","Fragments":["don't"]},{"Key":"see much","Fragments":["point","sense"]},{"Key":"much point","Fragments":["in"]},{"Key":"point in","Fragments":["not"]},{"Key":"in not","Fragments":["modifying"]},{"Key":"not modifying","Fragments":["the","values"]},{"Key":"argument which","Fragments":["is"]},{"Key":"then return","Fragments":["another"]},{"Key":"return another","Fragments":["mutable"]},{"Key":"another mutable","Fragments":["object."]},{"Key":"the advantages","Fragments":["of"]},{"Key":"advantages of","Fragments":["not"]},{"Key":"modifying values","Fragments":["but"]},{"Key":"values but","Fragments":["that's"]},{"Key":"that's we","Fragments":["should"]},{"Key":"we should","Fragments":["be","also"]},{"Key":"be passing","Fragments":["around"]},{"Key":"passing around","Fragments":["immutable"]},{"Key":"around immutable","Fragments":["objects."]},{"Key":" Anyway","Fragments":["not"]},{"Key":"Anyway not","Fragments":["sure"]},{"Key":"sure doing","Fragments":["that"]},{"Key":"that adds","Fragments":["any"]},{"Key":"adds any","Fragments":["vaue"]},{"Key":"any vaue","Fragments":["in"]},{"Key":"vaue in","Fragments":["this"]},{"Key":"similar feeling.","Fragments":[":-)"]},{"Key":"least you","Fragments":["could"]},{"Key":"could return","Fragments":["a"]},{"Key":"Pretty sure","Fragments":["I've","I"]},{"Key":"sure I've","Fragments":["missed"]},{"Key":"I've missed","Fragments":["the"]},{"Key":"w/o `var`","Fragments":["or"]},{"Key":"`var` or","Fragments":["mutable"]},{"Key":"mutable objects?","Fragments":[";-)"]},{"Key":"After learning","Fragments":["about"]},{"Key":"learning about","Fragments":["Extractors"]},{"Key":"about Extractors","Fragments":["Objects"]},{"Key":"Extractors Objects","Fragments":["from"]},{"Key":"Objects from","Fragments":["the"]},{"Key":"solutions, this","Fragments":["one"]},{"Key":"Did just","Fragments":["that"]},{"Key":"that (Iteration","Fragments":["4)."]},{"Key":"(Iteration 4).","Fragments":["The"]},{"Key":"4). The","Fragments":["first"]},{"Key":"attempt wasn't","Fragments":["too"]},{"Key":"wasn't too","Fragments":["great,"]},{"Key":"too great,","Fragments":["but"]},{"Key":"found some","Fragments":["things"]},{"Key":"it nicer","Fragments":["(Iteration"]},{"Key":"nicer (Iteration","Fragments":["5)."]},{"Key":"(Iteration 5).","Fragments":["Nice"]},{"Key":"5). Nice","Fragments":["exercise,"]},{"Key":"Nice exercise,","Fragments":["thanks!"]},{"Key":"PartialFunctions and","Fragments":["chain"]},{"Key":"and chain","Fragments":["them"]},{"Key":"chain them","Fragments":["with"]},{"Key":"with \"orElse\".","Fragments":[":-)"]},{"Key":"Yes, match","Fragments":["is"]},{"Key":"match is","Fragments":["often"]},{"Key":"often preferable","Fragments":["to"]},{"Key":"preferable to","Fragments":["if."]},{"Key":"Same for","Fragments":["the","\"Nucleotide\""]},{"Key":"Java methods,","Fragments":["e.g."]},{"Key":"methods, e.g.","Fragments":["```filter```"]},{"Key":"e.g. ```filter```","Fragments":["instead"]},{"Key":"about input","Fragments":["Strings"]},{"Key":"input Strings","Fragments":["containing"]},{"Key":"Strings containing","Fragments":["letters?"]},{"Key":"if-conditions are","Fragments":["complex"]},{"Key":"are complex","Fragments":["enough"]},{"Key":"complex enough","Fragments":["to"]},{"Key":"to deserve","Fragments":["a"]},{"Key":"deserve a","Fragments":["private"]},{"Key":"function w/","Fragments":["a"]},{"Key":"use upper","Fragments":["case"]},{"Key":" Speaking","Fragments":["of","of"]},{"Key":"Speaking of","Fragments":["constants,","thinking"]},{"Key":"of constants,","Fragments":["they"]},{"Key":"constants, they","Fragments":["should"]},{"Key":"some (the","Fragments":["companion?!)"]},{"Key":"(the companion?!)","Fragments":["object."]},{"Key":"One of","Fragments":["most","the"]},{"Key":"of most","Fragments":["often"]},{"Key":"most often","Fragments":["seen"]},{"Key":"often seen","Fragments":["scala"]},{"Key":"seen scala","Fragments":["feature"]},{"Key":"feature which","Fragments":["is"]},{"Key":"is \"match\"","Fragments":["(for"]},{"Key":"\"match\" (for","Fragments":["me)"]},{"Key":"(for me)","Fragments":["is"]},{"Key":"me) is","Fragments":["lost"]},{"Key":"is lost","Fragments":["on"]},{"Key":"lost on","Fragments":["you"]},{"Key":"you :)","Fragments":["use"]},{"Key":":) use","Fragments":["it"]},{"Key":"it it","Fragments":["looks"]},{"Key":"looks so","Fragments":["much"]},{"Key":"nicer than","Fragments":["ifs"]},{"Key":" tricky","Fragments":["week"]},{"Key":"tricky week","Fragments":["day"]},{"Key":"week day","Fragments":["arithmetics,"]},{"Key":"day arithmetics,","Fragments":["but"]},{"Key":"arithmetics, but","Fragments":["why"]},{"Key":"not if","Fragments":["it"]},{"Key":"works ...","Fragments":["although"]},{"Key":"... although","Fragments":["it"]},{"Key":"it costs","Fragments":["some"]},{"Key":"costs some","Fragments":["mental"]},{"Key":"to understand:","Fragments":["I"]},{"Key":"understand: I","Fragments":["am"]},{"Key":"the exact","Fragments":["meaning"]},{"Key":"exact meaning","Fragments":["of"]},{"Key":"of ```firstDayInWeekNumber```","Fragments":[":-)"]},{"Key":"this default","Fragments":["value"]},{"Key":"of 13.","Fragments":["the"]},{"Key":"13. the","Fragments":["explicit"]},{"Key":"explicit value","Fragments":["at"]},{"Key":"value at","Fragments":["the"]},{"Key":"place makes","Fragments":["for"]},{"Key":"have spotted","Fragments":["a","another"]},{"Key":"spotted a","Fragments":["\"Java-semicolon\"!"]},{"Key":"a \"Java-semicolon\"!","Fragments":[";-)"]},{"Key":"nit, but","Fragments":["I"]},{"Key":"toString is","Fragments":["a"]},{"Key":"complex than","Fragments":["it"]},{"Key":"to be.","Fragments":["I"]},{"Key":"be. I","Fragments":["think"]},{"Key":"be cleaner","Fragments":["if","if","to"]},{"Key":"cleaner if","Fragments":["you","you"]},{"Key":"used some","Fragments":["intermediate"]},{"Key":"some intermediate","Fragments":["variables"]},{"Key":"intermediate variables","Fragments":["to","might"]},{"Key":"the areacode,","Fragments":["the"]},{"Key":"areacode, the","Fragments":["first"]},{"Key":"first three","Fragments":["digits"]},{"Key":"three digits","Fragments":["and"]},{"Key":"last 4","Fragments":["digits."]},{"Key":"w/o treating","Fragments":["Earth"]},{"Key":"treating Earth","Fragments":["special?"]},{"Key":"Just a","Fragments":["small"]},{"Key":"small enhancment","Fragments":["at:"]},{"Key":"enhancment at:","Fragments":["http://exercism.io/submissions/10831eb300d9409cad4a4f598c7bd9e8"]},{"Key":" ``sortWith(_\u003c_)``","Fragments":["can"]},{"Key":"``sortWith(_\u003c_)`` can","Fragments":["be"]},{"Key":"by ``sorted``.","Fragments":["You"]},{"Key":"``sorted``. You","Fragments":["trick"]},{"Key":"You trick","Fragments":["test"]},{"Key":"trick test","Fragments":["suite."]},{"Key":"test suite.","Fragments":["Input"]},{"Key":"suite. Input","Fragments":["sequence"]},{"Key":"Input sequence","Fragments":["should"]},{"Key":"sequence should","Fragments":["not"]},{"Key":"be altered","Fragments":["in"]},{"Key":"altered in","Fragments":["this"]},{"Key":" ``var``","Fragments":["in"]},{"Key":"``var`` in","Fragments":["this"]},{"Key":"class allows","Fragments":["uncontrolled"]},{"Key":"allows uncontrolled","Fragments":["ability"]},{"Key":"uncontrolled ability","Fragments":["to"]},{"Key":"modify class","Fragments":["content"]},{"Key":"class content","Fragments":["and"]},{"Key":"content and","Fragments":["bypass"]},{"Key":"and bypass","Fragments":["validation"]},{"Key":"bypass validation","Fragments":["logic."]},{"Key":"validation logic.","Fragments":["I'd"]},{"Key":"logic. I'd","Fragments":["recommend"]},{"Key":"mutable variables.","Fragments":["Following"]},{"Key":"variables. Following","Fragments":["[Functional"]},{"Key":"Following [Functional","Fragments":["design"]},{"Key":"[Functional design","Fragments":["paradigm](https://en.wikipedia.org/wiki/Functional_design)"]},{"Key":"design paradigm](https://en.wikipedia.org/wiki/Functional_design)","Fragments":["greatly"]},{"Key":"paradigm](https://en.wikipedia.org/wiki/Functional_design) greatly","Fragments":["improves"]},{"Key":"greatly improves","Fragments":["code"]},{"Key":"improves code","Fragments":["reliability"]},{"Key":"code reliability","Fragments":["and"]},{"Key":"reliability and","Fragments":["overall"]},{"Key":"First cut","Fragments":["of"]},{"Key":"cut of","Fragments":["our"]},{"Key":"of our","Fragments":["implementation."]},{"Key":"our implementation.","Fragments":["We"]},{"Key":"implementation. We","Fragments":["were"]},{"Key":"We were","Fragments":["a"]},{"Key":"bit unsure","Fragments":["about"]},{"Key":"unsure about","Fragments":["the"]},{"Key":"between case","Fragments":["classes"]},{"Key":"and companion","Fragments":["objects"]},{"Key":"objects and","Fragments":["wanted"]},{"Key":"do two","Fragments":["iterations"]},{"Key":"two iterations","Fragments":["to"]},{"Key":"iterations to","Fragments":["see"]},{"Key":"they compare.","Fragments":["See"]},{"Key":"compare. See","Fragments":["second"]},{"Key":"See second","Fragments":["iteration"]},{"Key":"iteration for","Fragments":["alternate","comments"]},{"Key":"for alternate","Fragments":["implementation"]},{"Key":"alternate implementation","Fragments":["using"]},{"Key":"Included @mateo's","Fragments":["feedback."]},{"Key":" ``Tuple2``","Fragments":["is"]},{"Key":"``Tuple2`` is","Fragments":["redundant"]},{"Key":"Looks quite","Fragments":["Javy"]},{"Key":"quite Javy","Fragments":[";-)."]},{"Key":"Javy ;-).","Fragments":["You"]},{"Key":";-). You","Fragments":["can"]},{"Key":"use default","Fragments":["parameters"]},{"Key":"default parameters","Fragments":["in"]},{"Key":"parameters in","Fragments":["Scala"]},{"Key":"Scala instead","Fragments":["of"]},{"Key":"of overloading","Fragments":["them."]},{"Key":"one small","Fragments":["thing:"]},{"Key":"thing: you","Fragments":["could"]},{"Key":"also store","Fragments":["word.toLowerCase"]},{"Key":"store word.toLowerCase","Fragments":["as"]},{"Key":"word.toLowerCase as","Fragments":["a"]},{"Key":"just started","Fragments":["learning"]},{"Key":"started learning","Fragments":["scala"]},{"Key":"and haven't","Fragments":["touched"]},{"Key":"haven't touched","Fragments":["pattern"]},{"Key":"touched pattern","Fragments":["matching"]},{"Key":"matching yet,","Fragments":["but"]},{"Key":"yet, but","Fragments":["I"]},{"Key":"I indeed","Fragments":["noticed"]},{"Key":"indeed noticed","Fragments":["it's"]},{"Key":"noticed it's","Fragments":["a"]},{"Key":"big deal","Fragments":["in"]},{"Key":"pattern matching;","Fragments":["here"]},{"Key":"matching; here","Fragments":["could"]},{"Key":"here could","Fragments":["be"]},{"Key":"a ```switch","Fragments":["case```,"]},{"Key":"```switch case```,","Fragments":["but"]},{"Key":"case```, but","Fragments":["it's"]},{"Key":"it's much","Fragments":["more"]},{"Key":"only recommend","Fragments":["using"]},{"Key":"match inside","Fragments":["the"]},{"Key":"count block.","Fragments":["For"]},{"Key":"block. For","Fragments":["readability"]},{"Key":"For readability","Fragments":["purposes","reasons,"]},{"Key":" Say,","Fragments":["we"]},{"Key":"Say, we","Fragments":["have"]},{"Key":"we have","Fragments":["four","good"]},{"Key":"have four","Fragments":["allergens:"]},{"Key":" Eggs","Fragments":["1"]},{"Key":"Eggs 1","Fragments":["0001"]},{"Key":" Peanuts","Fragments":["2"]},{"Key":"Peanuts 2","Fragments":["0010"]},{"Key":" Shellfish","Fragments":["4"]},{"Key":"Shellfish 4","Fragments":["0100"]},{"Key":" Strawberries","Fragments":["8"]},{"Key":"Strawberries 8","Fragments":["1000"]},{"Key":"how 1","Fragments":["moves?"]},{"Key":"1 moves?","Fragments":["What"]},{"Key":"moves? What","Fragments":["allergies"]},{"Key":"What allergies","Fragments":["a"]},{"Key":"allergies a","Fragments":["patient"]},{"Key":"a patient","Fragments":["has"]},{"Key":"patient has","Fragments":["for"]},{"Key":"has for","Fragments":["a"]},{"Key":"a score","Fragments":["of"]},{"Key":"score of","Fragments":["10"]},{"Key":"of 10","Fragments":["(binary"]},{"Key":"10 (binary","Fragments":["1010)?"]},{"Key":"(binary 1010)?","Fragments":["Can"]},{"Key":"1010)? Can","Fragments":["you"]},{"Key":"find them","Fragments":["using"]},{"Key":"using only","Fragments":["binary","the","Option."]},{"Key":"only binary","Fragments":["operators?"]},{"Key":"Also, your","Fragments":["loop"]},{"Key":"your loop","Fragments":["looks"]},{"Key":"loop looks","Fragments":["like"]},{"Key":"like it's","Fragments":["**filtering**"]},{"Key":"it's **filtering**","Fragments":["the"]},{"Key":"**filtering** the","Fragments":["list"]},{"Key":"I realise","Fragments":["this"]},{"Key":"realise this","Fragments":["is"]},{"Key":"bad solution","Fragments":["but"]},{"Key":"had problems","Fragments":["understanding"]},{"Key":"problems understanding","Fragments":["the"]},{"Key":"my problem","Fragments":["was"]},{"Key":"was coming","Fragments":["from"]},{"Key":"from rounding","Fragments":["twice."]},{"Key":"rounding twice.","Fragments":["I"]},{"Key":"twice. I","Fragments":["fixed"]},{"Key":"I fixed","Fragments":["that","the"]},{"Key":"fixed that","Fragments":["and"]},{"Key":"things worked","Fragments":["out."]},{"Key":"worked out.","Fragments":["I"]},{"Key":"also cleaned","Fragments":["up"]},{"Key":"of things","Fragments":["that","here:"]},{"Key":"that weren't","Fragments":["very"]},{"Key":"weren't very","Fragments":["Scala-ish"]},{"Key":"very Scala-ish","Fragments":["imo."]},{"Key":"for `if(a)","Fragments":["true"]},{"Key":"`if(a) true","Fragments":["else"]},{"Key":"else false`.","Fragments":["You"]},{"Key":"false`. You","Fragments":["can"]},{"Key":"can simply","Fragments":["return","say","use"]},{"Key":"simply return","Fragments":["`a`"]},{"Key":"pair element.","Fragments":["It"]},{"Key":"element. It","Fragments":["looks"]},{"Key":"good! two","Fragments":["nitpicks:"]},{"Key":"usual (and","Fragments":["more"]},{"Key":"(and more","Fragments":["readable)"]},{"Key":"more readable)","Fragments":["way"]},{"Key":"readable) way","Fragments":["to"]},{"Key":"a `Range`","Fragments":["is"]},{"Key":"`Range` is","Fragments":["`1"]},{"Key":"is `1","Fragments":["to"]},{"Key":"`1 to","Fragments":["i`."]},{"Key":"to i`.","Fragments":["(and"]},{"Key":"i`. (and","Fragments":["`Range`s"]},{"Key":"(and `Range`s","Fragments":["can"]},{"Key":"`Range`s can","Fragments":["be"]},{"Key":"be `map`ped","Fragments":["over,"]},{"Key":"`map`ped over,","Fragments":["so"]},{"Key":"don't then","Fragments":["need"]},{"Key":"then need","Fragments":["to"]},{"Key":"convert them","Fragments":["to"]},{"Key":"of `class","Fragments":["Bob`"]},{"Key":"`class Bob`","Fragments":["it"]},{"Key":"Bob` it","Fragments":["could"]},{"Key":"be `object","Fragments":["Bob`"]},{"Key":"`object Bob`","Fragments":["because"]},{"Key":"Bob` because","Fragments":["these"]},{"Key":"because these","Fragments":["are"]},{"Key":"are like","Fragments":["static"]},{"Key":"like static","Fragments":["functions"]},{"Key":"static functions","Fragments":["that"]},{"Key":"that don't","Fragments":["require","do"]},{"Key":"don't require","Fragments":["a"]},{"Key":"require a","Fragments":["`new","`return`"]},{"Key":"a `new","Fragments":["Bob`."]},{"Key":"`new Bob`.","Fragments":["Also"]},{"Key":"Bob`. Also","Fragments":["if"]},{"Key":"Also if","Fragments":["the","I"]},{"Key":"the `isX`","Fragments":["functions"]},{"Key":"`isX` functions","Fragments":["are"]},{"Key":"needed by","Fragments":["`hey`,"]},{"Key":"by `hey`,","Fragments":["you"]},{"Key":"`hey`, you","Fragments":["could"]},{"Key":"could actually","Fragments":["nest"]},{"Key":"actually nest","Fragments":["them"]},{"Key":"nest them","Fragments":["inside"]},{"Key":"them inside","Fragments":["`hey`."]},{"Key":"must ask:","Fragments":["Why"]},{"Key":"ask: Why","Fragments":["the"]},{"Key":"Why the","Fragments":["curly","need"]},{"Key":"curly braces?","Fragments":["Looks"]},{"Key":"braces? Looks","Fragments":["great"]},{"Key":"Looks great","Fragments":["otherwise.",":D"]},{"Key":" had","Fragments":["an","to"]},{"Key":"had an","Fragments":["unnecessary","if/else","extra"]},{"Key":"an unnecessary","Fragments":["vaR"]},{"Key":"unnecessary vaR","Fragments":["for"]},{"Key":"vaR for","Fragments":["newName"]},{"Key":"having var","Fragments":["in"]},{"Key":"exercise at","Fragments":["all?..."]},{"Key":"at all?...","Fragments":["I"]},{"Key":"all?... I","Fragments":["mean"]},{"Key":"mean for","Fragments":["this"]},{"Key":"private var","Fragments":["factoryName"]},{"Key":"var factoryName","Fragments":["="]},{"Key":"factoryName =","Fragments":["generateRandomName","generateRandomName"]},{"Key":"def name","Fragments":["="]},{"Key":"name =","Fragments":["factoryName"]},{"Key":"def reset():","Fragments":["Unit"]},{"Key":"reset(): Unit","Fragments":["="]},{"Key":"Unit =","Fragments":["{"]},{"Key":" factoryName","Fragments":["="]},{"Key":"Probably the","Fragments":["cleanest"]},{"Key":"cleanest solution","Fragments":["I've"]},{"Key":"seen on","Fragments":["here"]},{"Key":"here so","Fragments":["far."]},{"Key":"far. Good","Fragments":["job!"]},{"Key":"as two","Fragments":["other"]},{"Key":"two other","Fragments":["exercises"]},{"Key":"other exercises","Fragments":["you"]},{"Key":"use PartialFunctions","Fragments":["chained"]},{"Key":"right @murl,","Fragments":["just"]},{"Key":"@murl, just","Fragments":["tweaked"]},{"Key":"just tweaked","Fragments":["it"]},{"Key":"tweaked it","Fragments":["a"]},{"Key":"Your ```transcription```","Fragments":["Map"]},{"Key":"```transcription``` Map","Fragments":["is"]},{"Key":"too complicated!","Fragments":[":-)"]},{"Key":"just w/","Fragments":["```'a'"]},{"Key":"w/ ```'a'","Fragments":["to"]},{"Key":"```'a' to","Fragments":["'z'```","'z'```"]},{"Key":"to 'z'```","Fragments":["and","for"]},{"Key":"'z'``` and","Fragments":["some"]},{"Key":"some little","Fragments":["one-liner?"]},{"Key":"use Predef's","Fragments":["```require```","```require```","```require```"]},{"Key":"validity check,","Fragments":["and","and"]},{"Key":"check, and","Fragments":["remove","remove"]},{"Key":"should consider","Fragments":["having"]},{"Key":"having some","Fragments":["private"]},{"Key":"usual Scala","Fragments":["way"]},{"Key":"create (and","Fragments":["initialize)"]},{"Key":"(and initialize)","Fragments":["a"]},{"Key":"initialize) a","Fragments":["Map"]},{"Key":"just ```","Fragments":["="]},{"Key":"``` =","Fragments":["Map()```."]},{"Key":"pls omit","Fragments":["these"]},{"Key":"omit these","Fragments":["ugly"]},{"Key":"these ugly","Fragments":["semicolons!"]},{"Key":"ugly semicolons!","Fragments":[";-)"]},{"Key":" Can't","Fragments":["get"]},{"Key":"Can't get","Fragments":["a"]},{"Key":"doing it...","Fragments":["I'll"]},{"Key":"it... I'll","Fragments":["have"]},{"Key":"at Scala's","Fragments":["sequences"]},{"Key":"Scala's sequences","Fragments":["doc."]},{"Key":" Anyways,","Fragments":["in"]},{"Key":"Anyways, in","Fragments":["this"]},{"Key":"need recursion.","Fragments":["Look"]},{"Key":"recursion. Look","Fragments":["at"]},{"Key":"it detects","Fragments":["that"]},{"Key":"detects that","Fragments":["a"]},{"Key":"method can","Fragments":["be"]},{"Key":"be tail-recursive,","Fragments":["it"]},{"Key":"tail-recursive, it","Fragments":["will"]},{"Key":"will optimize","Fragments":["it."]},{"Key":"optimize it.","Fragments":["But"]},{"Key":"not any","Fragments":["recursive"]},{"Key":"any recursive","Fragments":["method"]},{"Key":"recursive method","Fragments":["is"]},{"Key":"is tail","Fragments":["recursive.","recursive"]},{"Key":"tail recursive.","Fragments":["Annotating","But"]},{"Key":"recursive. Annotating","Fragments":["a"]},{"Key":"Annotating a","Fragments":["method"]},{"Key":"with @allie","Fragments":["enforces"]},{"Key":"@allie enforces","Fragments":["it"]},{"Key":"enforces it","Fragments":["to"]},{"Key":"thought it","Fragments":["does"]},{"Key":"that by","Fragments":["default,"]},{"Key":"by default,","Fragments":["I"]},{"Key":"default, I","Fragments":["mean"]},{"Key":"mean tail","Fragments":["recursion"]},{"Key":"Could annotate","Fragments":["with"]},{"Key":"annotate with","Fragments":["@gilbert"]},{"Key":"with @gilbert","Fragments":["to"]},{"Key":"@gilbert to","Fragments":["enforce"]},{"Key":"to enforce","Fragments":["tail"]},{"Key":"enforce tail","Fragments":["recursion"]},{"Key":"like yours,","Fragments":["although"]},{"Key":"yours, although","Fragments":["I"]},{"Key":"to stretch","Fragments":["maybe"]},{"Key":"stretch maybe","Fragments":["a"]},{"Key":"maybe a","Fragments":["bit","better"]},{"Key":"much since","Fragments":["I"]},{"Key":"since I","Fragments":["was","read","was"]},{"Key":"the immutable","Fragments":["Map"]},{"Key":"there's any","Fragments":["preference","significant","specific"]},{"Key":"any preference","Fragments":["in"]},{"Key":"preference in","Fragments":["the"]},{"Key":"Scala community","Fragments":["in"]},{"Key":"community in","Fragments":["terms"]},{"Key":"of snake_case","Fragments":["vs"]},{"Key":"snake_case vs","Fragments":["camelCase"]},{"Key":"vs camelCase","Fragments":["for"]},{"Key":"for variable","Fragments":["names?"]},{"Key":"matching pattern","Fragments":["matches"]},{"Key":" override","Fragments":["def"]},{"Key":"override def","Fragments":["toString"]},{"Key":"def toString","Fragments":[":"]},{"Key":"toString :","Fragments":["String"]},{"Key":": String","Fragments":["=","=","="]},{"Key":"val pat","Fragments":["="]},{"Key":"pat =","Fragments":["\"\"\"(.{3})(.{3})(.*)\"\"\".r"]},{"Key":"val pat(code,first,second)","Fragments":["="]},{"Key":"pat(code,first,second) =","Fragments":["number"]},{"Key":" s\"($code)","Fragments":["$first-$second\""]},{"Key":"all possible.","Fragments":["A"]},{"Key":"possible. A","Fragments":["one"]},{"Key":"A one","Fragments":["tiny"]},{"Key":"one tiny","Fragments":["thing"]},{"Key":"tiny thing","Fragments":["that"]},{"Key":"that caught","Fragments":["my"]},{"Key":"caught my","Fragments":["eye"]},{"Key":"my eye","Fragments":["was"]},{"Key":"eye was","Fragments":["an"]},{"Key":"an overcomplicated","Fragments":["condition:"]},{"Key":"my mind,","Fragments":["this"]},{"Key":"mind, this","Fragments":["is"]},{"Key":"more simple","Fragments":["to"]},{"Key":"simple to","Fragments":["read:"]},{"Key":" dna1.length","Fragments":["!="]},{"Key":"dna1.length !=","Fragments":["dna2.length"]},{"Key":"this -","Fragments":["wouldn't","is"]},{"Key":"- wouldn't","Fragments":["have"]},{"Key":"zip (and/or,","Fragments":["I'm"]},{"Key":"(and/or, I'm","Fragments":["not"]},{"Key":"understand zip","Fragments":["well"]},{"Key":"zip well","Fragments":["enough"]},{"Key":"well enough","Fragments":["to"]},{"Key":"looking through","Fragments":["other","the"]},{"Key":"through other","Fragments":["implementations,"]},{"Key":"implementations, a","Fragments":["better"]},{"Key":"better one","Fragments":["than"]},{"Key":"one than","Fragments":["my"]},{"Key":"my first.","Fragments":["Still"]},{"Key":"first. Still","Fragments":["cargo-culted"]},{"Key":"Still cargo-culted","Fragments":["a"]},{"Key":"cargo-culted a","Fragments":["bit,"]},{"Key":"a bit,","Fragments":["but","thanks"]},{"Key":"bit, but","Fragments":["hopefully"]},{"Key":"but hopefully","Fragments":["a"]},{"Key":"hopefully a","Fragments":["good"]},{"Key":" Change","Fragments":["length"]},{"Key":"Change length","Fragments":["checking"]},{"Key":"length checking","Fragments":["to"]},{"Key":"checking to","Fragments":["regex","make"]},{"Key":"to regex","Fragments":["approach."]},{"Key":"regex approach.","Fragments":["not"]},{"Key":"approach. not","Fragments":["sure"]},{"Key":"is better;","Fragments":["it's"]},{"Key":"better; it's","Fragments":["a"]},{"Key":"little smaller,","Fragments":["but"]},{"Key":"smaller, but","Fragments":["more"]},{"Key":"more readable?","Fragments":["You"]},{"Key":"readable? You","Fragments":["tell"]},{"Key":"You tell","Fragments":["me."]},{"Key":"Also change","Fragments":["substring()"]},{"Key":"change substring()","Fragments":["to"]},{"Key":"substring() to","Fragments":["slice()."]},{"Key":"to slice().","Fragments":["Not"]},{"Key":"slice(). Not","Fragments":["sure"]},{"Key":"better over","Fragments":["the"]},{"Key":"the other,","Fragments":["but"]},{"Key":"other, but","Fragments":["other"]},{"Key":"but other","Fragments":["people"]},{"Key":"people submitting","Fragments":["this"]},{"Key":"submitting this","Fragments":["problem"]},{"Key":"problem seem","Fragments":["to"]},{"Key":"to like","Fragments":["slice","Scala's"]},{"Key":"like slice","Fragments":["so"]},{"Key":"slice so","Fragments":["I'll"]},{"Key":"of \"+\":","Fragments":["use"]},{"Key":"\"+\": use","Fragments":["Scala"]},{"Key":"two \"hello\"","Fragments":["methods:"]},{"Key":"\"hello\" methods:","Fragments":["consider"]},{"Key":"methods: consider","Fragments":["using"]},{"Key":"pls don't","Fragments":["over-complicate","overdo","get"]},{"Key":"don't over-complicate","Fragments":["matters"]},{"Key":"over-complicate matters","Fragments":["and"]},{"Key":"matters and","Fragments":["simply"]},{"Key":"of `say`","Fragments":["in"]},{"Key":"`say` in","Fragments":["your"]},{"Key":"your case-clauses.","Fragments":["if"]},{"Key":"case-clauses. if","Fragments":["you"]},{"Key":"make readers","Fragments":["of"]},{"Key":"code think","Fragments":["or"]},{"Key":"think or","Fragments":["google"]},{"Key":"or google","Fragments":["unnecessarily"]},{"Key":"google unnecessarily","Fragments":["you"]},{"Key":"unnecessarily you","Fragments":["have"]},{"Key":"probably done","Fragments":["something"]},{"Key":"done something","Fragments":["wrong!"]},{"Key":"something wrong!","Fragments":[";-)"]},{"Key":"of thinking","Fragments":["too"]},{"Key":"thinking too","Fragments":["much:"]},{"Key":"too much:","Fragments":["If"]},{"Key":"much: If","Fragments":["you"]},{"Key":"on removing","Fragments":["those"]},{"Key":"removing those","Fragments":["chars"]},{"Key":"those chars","Fragments":["you"]},{"Key":"chars you","Fragments":["should"]},{"Key":"should prefer","Fragments":["Scala's"]},{"Key":"prefer Scala's","Fragments":["filter"]},{"Key":"Scala's filter","Fragments":["function"]},{"Key":"over replace.","Fragments":["But"]},{"Key":"replace. But","Fragments":["a"]},{"Key":"But a","Fragments":["more","var"]},{"Key":"and readable","Fragments":["solution"]},{"Key":"readable solution","Fragments":["might"]},{"Key":"might involve","Fragments":["a"]},{"Key":"involve a","Fragments":["regex"]},{"Key":"whole String?","Fragments":["How"]},{"Key":"String? How","Fragments":["can"]},{"Key":"regexes in","Fragments":["a"]},{"Key":"a match-case","Fragments":["clause"]},{"Key":"match-case clause","Fragments":["directly"]},{"Key":"clause directly","Fragments":["then?"]},{"Key":" null","Fragments":["checks"]},{"Key":"null checks","Fragments":["are"]},{"Key":"are necessary","Fragments":["in"]},{"Key":"necessary in","Fragments":["Java,"]},{"Key":"Java, but","Fragments":["in"]},{"Key":"Scala we","Fragments":["usually"]},{"Key":"we usually","Fragments":["just"]},{"Key":"usually just","Fragments":["assume"]},{"Key":"just assume","Fragments":["non-null"]},{"Key":"assume non-null","Fragments":["values!"]},{"Key":"non-null values!","Fragments":["(and"]},{"Key":"values! (and","Fragments":["if"]},{"Key":"(and if","Fragments":["there"]},{"Key":"some null","Fragments":["involved"]},{"Key":"null involved","Fragments":["we"]},{"Key":"involved we","Fragments":["telegraph"]},{"Key":"we telegraph","Fragments":["this"]},{"Key":"telegraph this","Fragments":["by"]},{"Key":"using Option","Fragments":["instead)."]},{"Key":"Option instead).","Fragments":["Having"]},{"Key":"instead). Having","Fragments":["said"]},{"Key":"that, your","Fragments":["empty"]},{"Key":"your empty","Fragments":["function"]},{"Key":"empty function","Fragments":["probably"]},{"Key":"function probably","Fragments":["should"]},{"Key":"should then","Fragments":["check"]},{"Key":"\"is null","Fragments":["or"]},{"Key":"null or","Fragments":["trim.isEmpty\"?"]},{"Key":"or trim.isEmpty\"?","Fragments":["As"]},{"Key":"trim.isEmpty\"? As","Fragments":["it"]},{"Key":"As it","Fragments":["stands"]},{"Key":"it stands","Fragments":["you"]},{"Key":"stands you","Fragments":["would"]},{"Key":"would get","Fragments":["an"]},{"Key":"an NPE","Fragments":["in"]},{"Key":"NPE in","Fragments":["the"]},{"Key":"second case-clause!","Fragments":[";-)"]},{"Key":" Moved","Fragments":["away"]},{"Key":"Moved away","Fragments":["from","from"]},{"Key":"using bytes","Fragments":["--"]},{"Key":"bytes --","Fragments":["unnecessary."]},{"Key":"-- unnecessary.","Fragments":["Used"]},{"Key":"unnecessary. Used","Fragments":["withFilter"]},{"Key":"Used withFilter","Fragments":["stack,"]},{"Key":"withFilter stack,","Fragments":["even"]},{"Key":"stack, even","Fragments":["though"]},{"Key":"though this","Fragments":["isn't"]},{"Key":"this isn't","Fragments":["big","possible.","a"]},{"Key":"isn't big","Fragments":["data."]},{"Key":"big data.","Fragments":["Moved"]},{"Key":"data. Moved","Fragments":["away"]},{"Key":"from for","Fragments":["comprehension"]},{"Key":"comprehension because","Fragments":["I"]},{"Key":"liked better","Fragments":["how"]},{"Key":"better how","Fragments":["this"]},{"Key":" ``exists``","Fragments":["can"]},{"Key":"``exists`` can","Fragments":["be"]},{"Key":"by ``contains``.","Fragments":["``map``"]},{"Key":"``contains``. ``map``","Fragments":["can"]},{"Key":"``map`` can","Fragments":["be"]},{"Key":"beginning using","Fragments":["`var`"]},{"Key":"using `var`","Fragments":["looked"]},{"Key":"`var` looked","Fragments":["\"dirty\""]},{"Key":"looked \"dirty\"","Fragments":["but"]},{"Key":"\"dirty\" but","Fragments":["it"]},{"Key":"ends up","Fragments":["producing"]},{"Key":"up producing","Fragments":["much"]},{"Key":"producing much","Fragments":["cleaner"]},{"Key":"cleaner code,","Fragments":["and"]},{"Key":"code, and","Fragments":["the"]},{"Key":"data structures","Fragments":["are","manually,"]},{"Key":"structures are","Fragments":["still"]},{"Key":"create that","Fragments":["many","Map."]},{"Key":"many vals","Fragments":["in"]},{"Key":"vals in","Fragments":["order"]},{"Key":"compute \"vn\".","Fragments":["You"]},{"Key":"\"vn\". You","Fragments":["can"]},{"Key":"can name","Fragments":["your"]},{"Key":"name your","Fragments":["input","functions"]},{"Key":"input \"number\"","Fragments":["instead"]},{"Key":"\"number\" instead","Fragments":["of"]},{"Key":"of \"raw\"","Fragments":["and"]},{"Key":"\"raw\" and","Fragments":["wrap"]},{"Key":"and wrap","Fragments":["its"]},{"Key":"wrap its","Fragments":["computation"]},{"Key":"its computation","Fragments":["with"]},{"Key":"computation with","Fragments":["{"]},{"Key":"with {","Fragments":["}."]},{"Key":"say, 10","Fragments":["letters"]},{"Key":"10 letters","Fragments":["and"]},{"Key":"and 20","Fragments":["digits?"]},{"Key":"20 digits?","Fragments":[";-)"]},{"Key":"can immediately","Fragments":["assign"]},{"Key":"immediately assign","Fragments":["the"]},{"Key":"line noise","Fragments":["here"]},{"Key":"noise here","Fragments":["that"]},{"Key":"here that","Fragments":["makes"]},{"Key":"follow. Some","Fragments":["suggestions:"]},{"Key":"* De-nest","Fragments":["`placeQueens`"]},{"Key":"De-nest `placeQueens`","Fragments":["-"]},{"Key":"`placeQueens` -","Fragments":["It"]},{"Key":"- It","Fragments":["does"]},{"Key":"defined inside","Fragments":["`boardString`."]},{"Key":"Consider whether","Fragments":["all"]},{"Key":"whether all","Fragments":["the"]},{"Key":"annotations are","Fragments":["worthwhile"]},{"Key":"are worthwhile","Fragments":["-"]},{"Key":"worthwhile -","Fragments":["if"]},{"Key":"if some","Fragments":["can"]},{"Key":"some can","Fragments":["be"]},{"Key":"be inferred,","Fragments":["especially"]},{"Key":"inferred, especially","Fragments":["in"]},{"Key":"especially in","Fragments":["private"]},{"Key":"private functions,","Fragments":["things"]},{"Key":"functions, things","Fragments":["will"]},{"Key":"things will","Fragments":["read"]},{"Key":"will read","Fragments":["more"]},{"Key":"read more","Fragments":["easily."]},{"Key":"Consider aligning","Fragments":["logic"]},{"Key":"aligning logic","Fragments":["so"]},{"Key":"logic so","Fragments":["to"]},{"Key":"so to","Fragments":["avoid"]},{"Key":"avoid very","Fragments":["long"]},{"Key":"very long","Fragments":["lines","lists."]},{"Key":"long lines","Fragments":["-"]},{"Key":"lines -","Fragments":["`canAttack`"]},{"Key":"- `canAttack`","Fragments":["is"]},{"Key":"`canAttack` is","Fragments":["a"]},{"Key":"good candidate","Fragments":["here."]},{"Key":" Mutability","Fragments":["makes"]},{"Key":"Mutability makes","Fragments":["reading"]},{"Key":"makes reading","Fragments":["code"]},{"Key":"reading code","Fragments":["much"]},{"Key":"code much","Fragments":["harder,"]},{"Key":"much harder,","Fragments":["as"]},{"Key":"harder, as","Fragments":["it"]},{"Key":"things harder","Fragments":["to"]},{"Key":"track -","Fragments":["the"]},{"Key":"mutable arrays","Fragments":["for"]},{"Key":"arrays for","Fragments":["`lines`"]},{"Key":"for `lines`","Fragments":["can"]},{"Key":"`lines` can","Fragments":["be"]},{"Key":"be avoided,","Fragments":["and"]},{"Key":"avoided, and","Fragments":["pure"]},{"Key":"and pure","Fragments":["functions"]},{"Key":"functions used","Fragments":["instead."]},{"Key":"Nice, readable","Fragments":["solution."]},{"Key":"readable solution.","Fragments":["I"]},{"Key":"of benchmarking,","Fragments":["and"]},{"Key":"benchmarking, and","Fragments":["the"]},{"Key":"the tail-recursive","Fragments":["solution"]},{"Key":"is roughly","Fragments":["10"]},{"Key":"roughly 10","Fragments":["times"]},{"Key":"times slower","Fragments":["than"]},{"Key":"slower than","Fragments":["a"]},{"Key":"a left-fold.","Fragments":["But"]},{"Key":"left-fold. But","Fragments":["thanks"]},{"Key":"But thanks","Fragments":["for"]},{"Key":"making me","Fragments":["aware"]},{"Key":"me aware","Fragments":["of"]},{"Key":"the `@boris`","Fragments":["annotation!"]},{"Key":"point, asked","Fragments":["myself"]},{"Key":"asked myself","Fragments":["the"]},{"Key":"myself the","Fragments":["same"]},{"Key":"same question.","Fragments":["Funnily"]},{"Key":"question. Funnily","Fragments":["enough,"]},{"Key":"enough, this","Fragments":["nested"]},{"Key":"this nested","Fragments":["way"]},{"Key":"nested way","Fragments":["seemed"]},{"Key":"way seemed","Fragments":["closer"]},{"Key":"seemed closer","Fragments":["to"]},{"Key":"original problem","Fragments":["description."]},{"Key":"might give","Fragments":["it"]},{"Key":"another round","Fragments":["at"]},{"Key":"round at","Fragments":["some"]},{"Key":"checks as","Fragments":["a"]},{"Key":"single Boolean","Fragments":["expression"]},{"Key":"expression instead","Fragments":["of"]},{"Key":"these nested","Fragments":["if's"]},{"Key":"nested if's","Fragments":["resulting"]},{"Key":"if's resulting","Fragments":["in"]},{"Key":"resulting in","Fragments":["Booleans?"]},{"Key":"move `calendar`","Fragments":["inside"]},{"Key":"`calendar` inside","Fragments":["`adjustDate`"]},{"Key":"inside `adjustDate`","Fragments":["to"]},{"Key":"`adjustDate` to","Fragments":["keep"]},{"Key":"the side","Fragments":["effects"]},{"Key":"effects local","Fragments":["(and"]},{"Key":"local (and","Fragments":["have"]},{"Key":"(and have","Fragments":["your"]},{"Key":"Maybe a","Fragments":["pattern"]},{"Key":"matching based","Fragments":["solution"]},{"Key":"based solution","Fragments":["would"]},{"Key":"could `map`","Fragments":["over"]},{"Key":"`map` over","Fragments":["the","the"]},{"Key":"in `dnaNucleotides`","Fragments":["and"]},{"Key":"`dnaNucleotides` and","Fragments":["use"]},{"Key":"use `++`","Fragments":["to"]},{"Key":"`++` to","Fragments":["add"]},{"Key":"map operation","Fragments":["to"]},{"Key":"operation to","Fragments":["an"]},{"Key":"empty `Map`.","Fragments":["If"]},{"Key":"`Map`. If","Fragments":["you"]},{"Key":"don't mind","Fragments":["a"]},{"Key":"mind a","Fragments":["spoiler,"]},{"Key":"a spoiler,","Fragments":["you"]},{"Key":"spoiler, you","Fragments":["could"]},{"Key":"at [my","Fragments":["solution](http://exercism.io/submissions/ac9783248f91b218d8d056c1)."]},{"Key":" @harold:","Fragments":["Can"]},{"Key":"@harold: Can","Fragments":["you"]},{"Key":"you help","Fragments":["me"]},{"Key":"me with","Fragments":["the"]},{"Key":"of loading","Fragments":["`dnaNucleotides`"]},{"Key":"loading `dnaNucleotides`","Fragments":["into"]},{"Key":"into `nucleotideCounts`?","Fragments":["I"]},{"Key":"`nucleotideCounts`? I","Fragments":["can't"]},{"Key":"can't seem","Fragments":["to"]},{"Key":"convert `strand`","Fragments":["using"]},{"Key":"`strand` using","Fragments":["`toCharArray`."]},{"Key":"using `toCharArray`.","Fragments":["You"]},{"Key":"`toCharArray`. You","Fragments":["can"]},{"Key":"call `forall`","Fragments":["directly"]},{"Key":"`forall` directly","Fragments":["on"]},{"Key":"of allNucleotides","Fragments":["should"]},{"Key":"allNucleotides should","Fragments":["be"]},{"Key":"be expressed","Fragments":["as","by"]},{"Key":"as `dnaNucleotides","Fragments":["+"]},{"Key":"`dnaNucleotides +","Fragments":["'U'`"]},{"Key":"+ 'U'`","Fragments":["iso"]},{"Key":"'U'` iso","Fragments":["the"]},{"Key":"iso the","Fragments":["difference"]},{"Key":"difference you","Fragments":["use"]},{"Key":"use currently,","Fragments":["since"]},{"Key":"currently, since","Fragments":["the"]},{"Key":"the `'U'`","Fragments":["literal"]},{"Key":"`'U'` literal","Fragments":["needs"]},{"Key":"literal needs","Fragments":["to"]},{"Key":"used twice.","Fragments":["Furthermore"]},{"Key":"twice. Furthermore","Fragments":["the"]},{"Key":"Furthermore the","Fragments":["`nucleotideCounts`"]},{"Key":"`nucleotideCounts` can","Fragments":["be"]},{"Key":"the `dnaNucleotides`","Fragments":["set."]},{"Key":"`dnaNucleotides` set.","Fragments":["That"]},{"Key":"set. That","Fragments":["prevents"]},{"Key":"That prevents","Fragments":["the"]},{"Key":"the 'knowledge'","Fragments":["of","of"]},{"Key":"'knowledge' of","Fragments":["what","what"]},{"Key":"what are","Fragments":["the"]},{"Key":"DNA nucleotides","Fragments":["to"]},{"Key":"be encoded","Fragments":["twice."]},{"Key":"Thanks. That's","Fragments":["very"]},{"Key":"very useful","Fragments":["feedback.","count"]},{"Key":"useful feedback.","Fragments":["I"]},{"Key":"I especially","Fragments":["appreciate"]},{"Key":"especially appreciate","Fragments":["the"]},{"Key":"the pointers","Fragments":["towards"]},{"Key":"pointers towards","Fragments":["zip/List/StringOps."]},{"Key":"style avoid","Fragments":["the"]},{"Key":"of `var`s","Fragments":["and"]},{"Key":"and mutable","Fragments":["values."]},{"Key":"case `len`","Fragments":["could"]},{"Key":"`len` could","Fragments":["simply"]},{"Key":"could simply","Fragments":["be","use"]},{"Key":"simply be","Fragments":["made"]},{"Key":"made `val`","Fragments":["rather"]},{"Key":"`val` rather","Fragments":["than"]},{"Key":"than `var`","Fragments":["since"]},{"Key":"`var` since","Fragments":["it"]},{"Key":"it never","Fragments":["changes"]},{"Key":"never changes","Fragments":["after"]},{"Key":"changes after","Fragments":["it"]},{"Key":"after it","Fragments":["is"]},{"Key":"are ways","Fragments":["to"]},{"Key":"mutable `var`","Fragments":["for"]},{"Key":"`var` for","Fragments":["`distance`."]},{"Key":"for `distance`.","Fragments":["Look"]},{"Key":"`distance`. Look","Fragments":["at"]},{"Key":"documentation for","Fragments":["classes","my"]},{"Key":"for classes","Fragments":["like"]},{"Key":"classes like","Fragments":["`List`"]},{"Key":"like `List`","Fragments":["and"]},{"Key":"`List` and","Fragments":["`StringOps`"]},{"Key":"and `StringOps`","Fragments":["to"]},{"Key":"`StringOps` to","Fragments":["get"]},{"Key":"a feel","Fragments":["for"]},{"Key":"feel for","Fragments":["kinds"]},{"Key":"for kinds","Fragments":["of"]},{"Key":"of operations","Fragments":["that"]},{"Key":"operations that","Fragments":["are"]},{"Key":"are available.","Fragments":["There's"]},{"Key":"available. There's","Fragments":["a"]},{"Key":"single express","Fragments":["whose"]},{"Key":"express whose","Fragments":["value"]},{"Key":"whose value","Fragments":["is"]},{"Key":"Also, for","Fragments":["this"]},{"Key":"of \"pair-wise\"","Fragments":["list"]},{"Key":"\"pair-wise\" list","Fragments":["processing"]},{"Key":"list processing","Fragments":["it's"]},{"Key":"processing it's","Fragments":["often"]},{"Key":"it's often","Fragments":["useful"]},{"Key":"use `zip`","Fragments":["to"]},{"Key":"`zip` to","Fragments":["convert","create"]},{"Key":"convert a","Fragments":["pair"]},{"Key":"of lists","Fragments":["into"]},{"Key":"lists into","Fragments":["a"]},{"Key":"pairs (tuples).","Fragments":["`StringOps`"]},{"Key":"(tuples). `StringOps`","Fragments":["provides"]},{"Key":"`StringOps` provides","Fragments":["a"]},{"Key":"of list","Fragments":["like"]},{"Key":"list like","Fragments":["methods"]},{"Key":"that operate","Fragments":["on"]},{"Key":"on strings.","Fragments":["It","A"]},{"Key":"strings. It","Fragments":["is"]},{"Key":"good place","Fragments":["to"]},{"Key":"a partial","Fragments":["function"]},{"Key":" strand1.zip(strand2).count","Fragments":["{"]},{"Key":"strand1.zip(strand2).count {","Fragments":["case"]},{"Key":"case (b1,","Fragments":["b2)"]},{"Key":"(b1, b2)","Fragments":["=\u003e"]},{"Key":"b2) =\u003e","Fragments":["b1"]},{"Key":"=\u003e b1","Fragments":["!="]},{"Key":"b1 !=","Fragments":["b2"]},{"Key":"!= b2","Fragments":["}"]},{"Key":"mutable cache","Fragments":["to"]},{"Key":"cache all","Fragments":["the"]},{"Key":"previous computed","Fragments":["values."]},{"Key":"computed values.","Fragments":["And"]},{"Key":"values. And","Fragments":["uses"]},{"Key":"And uses","Fragments":["BigInt"]},{"Key":"uses BigInt","Fragments":["vs"]},{"Key":"BigInt vs","Fragments":["Double"]},{"Key":"vs Double","Fragments":["in"]},{"Key":"Double in","Fragments":["the"]},{"Key":"the square","Fragments":["calculation."]},{"Key":"square calculation.","Fragments":["Summing"]},{"Key":"calculation. Summing","Fragments":["doubles,"]},{"Key":"Summing doubles,","Fragments":["then"]},{"Key":"doubles, then","Fragments":["trying"]},{"Key":"then trying","Fragments":["to"]},{"Key":"a BigInt","Fragments":["didn't"]},{"Key":"BigInt didn't","Fragments":["work"]},{"Key":"work very","Fragments":["well."]},{"Key":"very well.","Fragments":["There"]},{"Key":"well. There","Fragments":["was"]},{"Key":"There was","Fragments":["some"]},{"Key":"some precision","Fragments":["loss"]},{"Key":"precision loss","Fragments":["using"]},{"Key":"loss using","Fragments":["`\"%.0f\".format(_)`."]},{"Key":"the readability,","Fragments":["but"]},{"Key":"an if/else","Fragments":["chain,"]},{"Key":"if/else chain,","Fragments":["since"]},{"Key":"chain, since","Fragments":["you"]},{"Key":"you basically","Fragments":["put"]},{"Key":"basically put","Fragments":["that"]},{"Key":"that inside","Fragments":["a"]},{"Key":"inside a","Fragments":["match."]},{"Key":"I aimed","Fragments":["for"]},{"Key":"aimed for","Fragments":["simplicity,"]},{"Key":"for simplicity,","Fragments":["and"]},{"Key":"simplicity, and","Fragments":["a"]},{"Key":"It was","Fragments":["suggested","pretty"]},{"Key":"was suggested","Fragments":["that"]},{"Key":"suggested that","Fragments":["I"]},{"Key":"try case","Fragments":["classes"]},{"Key":"classes for","Fragments":["this,"]},{"Key":"for this,","Fragments":["so"]},{"Key":"this, so","Fragments":["that"]},{"Key":"be my","Fragments":["next"]},{"Key":" @candida","Fragments":["Thanks"]},{"Key":"@candida Thanks","Fragments":["again!"]},{"Key":"for just","Fragments":["going"]},{"Key":"just going","Fragments":["with"]},{"Key":"with private","Fragments":["methods"]},{"Key":"methods –","Fragments":["it's"]},{"Key":"– it's","Fragments":["simpler,"]},{"Key":"it's simpler,","Fragments":["and"]},{"Key":"simpler, and","Fragments":["less"]},{"Key":"and less","Fragments":["code."]},{"Key":"less code.","Fragments":["But"]},{"Key":"code. But","Fragments":["there's"]},{"Key":"But there's","Fragments":["definitely"]},{"Key":"there's definitely","Fragments":["a"]},{"Key":"made for","Fragments":["extracting"]},{"Key":"for extracting","Fragments":["an"]},{"Key":"extracting an","Fragments":["object"]},{"Key":"object also.","Fragments":["The"]},{"Key":"also. The","Fragments":["choice"]},{"Key":"The choice","Fragments":["depends"]},{"Key":"choice depends","Fragments":["on"]},{"Key":"on things","Fragments":["like"]},{"Key":"you expect","Fragments":["to","the"]},{"Key":"expect to","Fragments":["also"]},{"Key":"to also","Fragments":["parse","use","fetch","exclude"]},{"Key":"also parse","Fragments":["utterances"]},{"Key":"parse utterances","Fragments":["elsewhere,"]},{"Key":"utterances elsewhere,","Fragments":["if"]},{"Key":"elsewhere, if","Fragments":["you"]},{"Key":"Bob class","Fragments":["to"]},{"Key":"to grow","Fragments":["etc."]},{"Key":" Glad","Fragments":["you"]},{"Key":"tried defining","Fragments":["the"]},{"Key":"implicit in","Fragments":["the"]},{"Key":"object, but","Fragments":["that","this"]},{"Key":"work –","Fragments":["I'm"]},{"Key":"– I'm","Fragments":["getting"]},{"Key":"I'm getting","Fragments":["the"]},{"Key":"impression you","Fragments":["can"]},{"Key":"can define","Fragments":["implicit"]},{"Key":"define implicit","Fragments":["parameters"]},{"Key":"implicit parameters","Fragments":["that"]},{"Key":"parameters that","Fragments":["way,"]},{"Key":"not implicit","Fragments":["type"]},{"Key":"implicit type","Fragments":["conversions."]},{"Key":"to me!","Fragments":["I","I"]},{"Key":"me! I","Fragments":["agree","think"]},{"Key":"complex using","Fragments":["an"]},{"Key":"implicit but","Fragments":["I"]},{"Key":"the `isShout`","Fragments":["etc","etc"]},{"Key":"`isShout` etc","Fragments":["methods","methods"]},{"Key":"etc methods","Fragments":["end","on"]},{"Key":"methods end","Fragments":["up"]},{"Key":"class on","Fragments":["which"]},{"Key":"on which","Fragments":["they"]},{"Key":"which they","Fragments":["make"]},{"Key":"they make","Fragments":["sense"]},{"Key":"sense -","Fragments":["`bob.isShout`"]},{"Key":"- `bob.isShout`","Fragments":["just"]},{"Key":"`bob.isShout` just","Fragments":["doesn't"]},{"Key":"just doesn't","Fragments":["feel"]},{"Key":"feel right","Fragments":["to"]},{"Key":"also really","Fragments":["like"]},{"Key":"like \"Utterance\"","Fragments":["as"]},{"Key":"\"Utterance\" as","Fragments":["a"]},{"Key":"think if","Fragments":["you"]},{"Key":"the `Bob`","Fragments":["class"]},{"Key":"`Bob` class","Fragments":["and"]},{"Key":"and put","Fragments":["your","into"]},{"Key":"put your","Fragments":["implicit"]},{"Key":"your implicit","Fragments":["conversion"]},{"Key":"conversion on","Fragments":["that,"]},{"Key":"that, you","Fragments":["won't"]},{"Key":"import you","Fragments":["have"]},{"Key":"have on","Fragments":["line"]},{"Key":"5 -","Fragments":["it"]},{"Key":"be automatically","Fragments":["available"]},{"Key":"automatically available","Fragments":["inside"]},{"Key":"available inside","Fragments":["`Bob`."]},{"Key":"an implicit.","Fragments":["This"]},{"Key":"implicit. This","Fragments":["is"]},{"Key":"learn Scala","Fragments":["–"]},{"Key":"Scala –","Fragments":["to"]},{"Key":"– to","Fragments":["my"]},{"Key":"my eyes,","Fragments":["this"]},{"Key":"eyes, this","Fragments":["made"]},{"Key":"this made","Fragments":["the"]},{"Key":"understand, and","Fragments":["of"]},{"Key":"course more","Fragments":["complex."]},{"Key":"extra points","Fragments":["you"]},{"Key":"points you","Fragments":["could"]},{"Key":"even make","Fragments":["it","`toString`"]},{"Key":"right, thanks","Fragments":["for"]},{"Key":"1. and","Fragments":["2."]},{"Key":"and 2.","Fragments":["are"]},{"Key":"2. are","Fragments":["good"]},{"Key":"good points.","Fragments":["Thanks!"]},{"Key":"in 3.","Fragments":["I"]},{"Key":"the reg","Fragments":["exp"]},{"Key":"reg exp","Fragments":["is"]},{"Key":"exp is","Fragments":["wrong."]},{"Key":"is wrong.","Fragments":["```[^\\W]+```"]},{"Key":"wrong. ```[^\\W]+```","Fragments":["matches"]},{"Key":"```[^\\W]+``` matches","Fragments":["every"]},{"Key":"matches every","Fragments":["string"]},{"Key":"string not","Fragments":["consisting"]},{"Key":"not consisting","Fragments":["of"]},{"Key":"consisting of","Fragments":["non-word","[A-Za-z0-9_]."]},{"Key":"of non-word","Fragments":["characters."]},{"Key":"non-word characters.","Fragments":["So"]},{"Key":"will split","Fragments":["the"]},{"Key":"the phrase","Fragments":["at"]},{"Key":"phrase at","Fragments":["every"]},{"Key":"at every","Fragments":["word"]},{"Key":"every word","Fragments":["and"]},{"Key":"and we","Fragments":["get"]},{"Key":"a array","Fragments":["of"]},{"Key":"array of","Fragments":["characters"]},{"Key":"characters between","Fragments":["the"]},{"Key":"words. I","Fragments":["figured"]},{"Key":"that ```(?!')[\\W]+```","Fragments":["works"]},{"Key":"```(?!')[\\W]+``` works","Fragments":["fine"]},{"Key":"works fine","Fragments":["(we"]},{"Key":"fine (we","Fragments":["need"]},{"Key":"(we need","Fragments":["to"]},{"Key":"to exclude","Fragments":["the"]},{"Key":"exclude the","Fragments":["apostrophe"]},{"Key":"the apostrophe","Fragments":["as"]},{"Key":"apostrophe as","Fragments":["it"]},{"Key":"is describe","Fragments":["in"]},{"Key":"describe in","Fragments":["the"]},{"Key":"The outer","Fragments":["curly"]},{"Key":"outer curly","Fragments":["braces"]},{"Key":"2. `Map.empty[String,","Fragments":["Int]`"]},{"Key":"`Map.empty[String, Int]`","Fragments":["can"]},{"Key":"Int]` can","Fragments":["be"]},{"Key":"the basis","Fragments":["of"]},{"Key":"basis of","Fragments":["`foldLeft`"]},{"Key":"of `foldLeft`","Fragments":["instead.","seems"]},{"Key":"`foldLeft` instead.","Fragments":["It"]},{"Key":"instead. It","Fragments":["can"]},{"Key":"more improved","Fragments":["with"]},{"Key":"improved with","Fragments":["`Map.empty[String,"]},{"Key":"with `Map.empty[String,","Fragments":["Int].withDefaultValue(0)`"]},{"Key":"`Map.empty[String, Int].withDefaultValue(0)`","Fragments":["to"]},{"Key":"Int].withDefaultValue(0)` to","Fragments":["remove"]},{"Key":"remove `if`","Fragments":["in"]},{"Key":"`if` in","Fragments":["the"]},{"Key":"3. The","Fragments":["splitting"]},{"Key":"The splitting","Fragments":["regex"]},{"Key":"splitting regex","Fragments":["can"]},{"Key":" ah,","Fragments":["and"]},{"Key":"ah, and","Fragments":["you"]},{"Key":"use copy","Fragments":["together"]},{"Key":"copy together","Fragments":["w/"]},{"Key":"together w/","Fragments":["the"]},{"Key":"the named","Fragments":["parameter"]},{"Key":"named parameter","Fragments":["notation"]},{"Key":"parameter notation","Fragments":["so"]},{"Key":"notation so","Fragments":["that"]},{"Key":"only update","Fragments":["the"]},{"Key":"the changed","Fragments":["values"]},{"Key":"changed values","Fragments":["explicitly."]},{"Key":"values explicitly.","Fragments":["For"]},{"Key":"explicitly. For","Fragments":["example:"]},{"Key":" `this.copy(location","Fragments":["="]},{"Key":"`this.copy(location =","Fragments":["add(direction,"]},{"Key":"= add(direction,","Fragments":["location))`"]},{"Key":"more sense,","Fragments":["i"]},{"Key":"sense, i","Fragments":["think"]},{"Key":"it now.","Fragments":["thank"]},{"Key":"now. thank","Fragments":["you."]},{"Key":" maybe","Fragments":["it"]},{"Key":"just my","Fragments":["personal","old","first"]},{"Key":"personal taste,","Fragments":["but"]},{"Key":"me `copy`","Fragments":["highlights"]},{"Key":"`copy` highlights","Fragments":["the"]},{"Key":"highlights the","Fragments":["fact"]},{"Key":"is is","Fragments":["a"]},{"Key":"state transformation","Fragments":["of"]},{"Key":"the Robot.","Fragments":[":-)"]},{"Key":"of feedback,","Fragments":["foldLeft"]},{"Key":"feedback, foldLeft","Fragments":["seems"]},{"Key":"foldLeft seems","Fragments":["an"]},{"Key":"an improvement.","Fragments":["don't"]},{"Key":"improvement. don't","Fragments":["know"]},{"Key":"using copy","Fragments":["makes"]},{"Key":"copy makes","Fragments":["much"]},{"Key":"makes much","Fragments":["difference,"]},{"Key":"much difference,","Fragments":["but"]},{"Key":"difference, but","Fragments":["maybe"]},{"Key":"maybe i","Fragments":["misunderstood."]},{"Key":"it short","Fragments":["and"]},{"Key":"and elegant","Fragments":["without"]},{"Key":"elegant without","Fragments":["being"]},{"Key":"without being","Fragments":["one"]},{"Key":"being one","Fragments":["long"]},{"Key":"one long","Fragments":["dificult"]},{"Key":"long dificult","Fragments":["to"]},{"Key":"dificult to","Fragments":["read"]},{"Key":"After nitpicking","Fragments":["I"]},{"Key":"nitpicking I","Fragments":["managed"]},{"Key":"the \"head\"","Fragments":["generation"]},{"Key":"\"head\" generation","Fragments":["by"]},{"Key":"generation by","Fragments":["applying"]},{"Key":"by applying","Fragments":["a"]},{"Key":"applying a","Fragments":["filter"]},{"Key":"a filter","Fragments":["in"]},{"Key":"filter in","Fragments":["order"]},{"Key":"remove numeric","Fragments":["values."]},{"Key":"improve readibility","Fragments":["by"]},{"Key":"readibility by","Fragments":["using"]},{"Key":"aliases instead","Fragments":["of"]},{"Key":"various Scala","Fragments":["types"]},{"Key":"types Int,","Fragments":["Map,"]},{"Key":"Int, Map,","Fragments":["Seq"]},{"Key":"Map, Seq","Fragments":["..."]},{"Key":"another exercise:","Fragments":["Use"]},{"Key":"Use ```flatMap/map```","Fragments":["or"]},{"Key":"```flatMap/map``` or","Fragments":["a"]},{"Key":"But pls","Fragments":["no"]},{"Key":"no ```return```","Fragments":["in"]},{"Key":"also annotate","Fragments":["w/"]},{"Key":"annotate w/","Fragments":["@kraig"]},{"Key":"Added check","Fragments":["for"]},{"Key":"I never","Fragments":["came"]},{"Key":"never came","Fragments":["to"]},{"Key":"like Scala's","Fragments":["```Enumeration```,"]},{"Key":"Scala's ```Enumeration```,","Fragments":["prefer"]},{"Key":"```Enumeration```, prefer","Fragments":["```sealed"]},{"Key":"prefer ```sealed","Fragments":["trait```"]},{"Key":"of `Enumeration`","Fragments":["since"]},{"Key":"`Enumeration` since","Fragments":["I"]},{"Key":"read about","Fragments":["it","Pattern"]},{"Key":"on http://underscore.io/blog/posts/2014/09/03/enumerations.html.","Fragments":["Guess"]},{"Key":"http://underscore.io/blog/posts/2014/09/03/enumerations.html. Guess","Fragments":["I'll"]},{"Key":"Guess I'll","Fragments":["do"]},{"Key":"I'll do","Fragments":["a","that"]},{"Key":"with `sealed","Fragments":["trait`"]},{"Key":"`sealed trait`","Fragments":["then,"]},{"Key":"trait` then,","Fragments":["just"]},{"Key":"then, just","Fragments":["for"]},{"Key":"alias in","Fragments":["method"]},{"Key":"signatures and","Fragments":["updated"]},{"Key":"and updated","Fragments":["`teenth`"]},{"Key":"updated `teenth`","Fragments":["implementation"]},{"Key":" Who","Fragments":["explains"]},{"Key":"Who explains","Fragments":["that:"]},{"Key":"explains that:","Fragments":["sc.parts.tail.map(_"]},{"Key":"that: sc.parts.tail.map(_","Fragments":["=\u003e"]},{"Key":"sc.parts.tail.map(_ =\u003e","Fragments":["\"x\"):"]},{"Key":"=\u003e \"x\"):","Fragments":["_*"]},{"Key":"\"x\"): _*","Fragments":["I"]},{"Key":"_* I","Fragments":["will"]},{"Key":"will pay","Fragments":["a"]},{"Key":"pay a","Fragments":["beer."]},{"Key":"a beer.","Fragments":["(I"]},{"Key":"beer. (I","Fragments":["found"]},{"Key":"(I found","Fragments":["that"]},{"Key":"found that","Fragments":["on"]},{"Key":"that on","Fragments":["Stackoverflow)."]},{"Key":"that groups","Fragments":["letters"]},{"Key":"groups letters","Fragments":["with"]},{"Key":"letters with","Fragments":["the"]},{"Key":"same values.","Fragments":["I"]},{"Key":"values. I","Fragments":["think"]},{"Key":"it read","Fragments":["better."]},{"Key":"True, I","Fragments":["updated"]},{"Key":"even simplify","Fragments":["some"]},{"Key":"simplify some","Fragments":["more"]},{"Key":"the ```count```","Fragments":["function.","function"]},{"Key":"statements i","Fragments":["was"]},{"Key":"i was","Fragments":["expecting","able"]},{"Key":"was expecting","Fragments":["case"]},{"Key":"expecting case","Fragments":["(statemnt)"]},{"Key":"case (statemnt)","Fragments":["'ll"]},{"Key":"(statemnt) 'll","Fragments":["work"]},{"Key":"'ll work","Fragments":["but"]},{"Key":"work but","Fragments":["it"]},{"Key":"it required","Fragments":["variable"]},{"Key":"required variable","Fragments":["if."]},{"Key":"variable if.","Fragments":["(whats"]},{"Key":"if. (whats","Fragments":["the"]},{"Key":"(whats the","Fragments":["better"]},{"Key":"the better","Fragments":["way)?"]},{"Key":"In My","Fragments":["local,"]},{"Key":"My local,","Fragments":["i've"]},{"Key":"local, i've","Fragments":["update"]},{"Key":"i've update","Fragments":["the"]},{"Key":"the testsuite","Fragments":["to"]},{"Key":"testsuite to","Fragments":["import"]},{"Key":"import the","Fragments":["Class,"]},{"Key":"the Class,","Fragments":["`"]},{"Key":" ```import","Fragments":["package._``"]},{"Key":"without that?","Fragments":["i"]},{"Key":"that? i","Fragments":["followed"]},{"Key":"i followed","Fragments":["package"]},{"Key":"followed package","Fragments":["structure:"]},{"Key":"package structure:","Fragments":["src/main/scala"]},{"Key":"structure: src/main/scala","Fragments":["for"]},{"Key":"src/main/scala for","Fragments":["creating"]},{"Key":"creating source","Fragments":["file."]},{"Key":"was unsure","Fragments":["whether"]},{"Key":"unsure whether","Fragments":["to"]},{"Key":"use patterm","Fragments":["matching"]},{"Key":"patterm matching","Fragments":["or"]},{"Key":"or if-else,","Fragments":["here"]},{"Key":"if-else, here","Fragments":["i"]},{"Key":"here i","Fragments":["dont"]},{"Key":"i dont","Fragments":["see"]},{"Key":"dont see","Fragments":["a"]},{"Key":"a difference,","Fragments":["whats"]},{"Key":"difference, whats","Fragments":["the"]},{"Key":"whats the","Fragments":["real"]},{"Key":"real use","Fragments":["of"]},{"Key":"So it's","Fragments":["great"]},{"Key":"it's great","Fragments":["if"]},{"Key":"aren't sure,","Fragments":["but"]},{"Key":"sure, but","Fragments":["if"]},{"Key":"it's obvious","Fragments":["(and"]},{"Key":"obvious (and","Fragments":["this"]},{"Key":"(and this","Fragments":["one"]},{"Key":"to someone","Fragments":["less"]},{"Key":"someone less","Fragments":["familiar"]},{"Key":"less familiar","Fragments":["with"]},{"Key":"with it)","Fragments":["I"]},{"Key":"it) I","Fragments":["think"]},{"Key":"it's legit","Fragments":["to"]},{"Key":"legit to","Fragments":["keep"]},{"Key":"keep in","Fragments":["there."]},{"Key":"Thanks @frankie","Fragments":["for"]},{"Key":"@frankie for","Fragments":["the"]},{"Key":"I'm taking","Fragments":["over"]},{"Key":"taking over","Fragments":["a"]},{"Key":"Scala project","Fragments":["for"]},{"Key":"project for","Fragments":["a"]},{"Key":"a departing","Fragments":["coworker,"]},{"Key":"departing coworker,","Fragments":["so"]},{"Key":"coworker, so","Fragments":["I'm"]},{"Key":"I'm trying","Fragments":["to","to"]},{"Key":"get up","Fragments":["to"]},{"Key":"to speed","Fragments":["as"]},{"Key":"speed as","Fragments":["fast"]},{"Key":"as fast","Fragments":["as"]},{"Key":"fast as","Fragments":["possible."]},{"Key":"One question:","Fragments":["is"]},{"Key":"question: is","Fragments":["it"]},{"Key":"it common","Fragments":["to"]},{"Key":"common to","Fragments":["not"]},{"Key":"the tailrec","Fragments":["annotation?"]},{"Key":"tailrec annotation?","Fragments":["I"]},{"Key":"annotation? I","Fragments":["like"]},{"Key":"like having","Fragments":["it"]},{"Key":"there so","Fragments":["that"]},{"Key":"get warned","Fragments":["if"]},{"Key":"warned if","Fragments":["I've"]},{"Key":"if I've","Fragments":["made"]},{"Key":"made an","Fragments":["oversight"]},{"Key":"an oversight","Fragments":["and"]},{"Key":"oversight and","Fragments":["made"]},{"Key":"it not","Fragments":["tail"]},{"Key":"not tail","Fragments":["recursive."]},{"Key":"recursive. But","Fragments":["maybe"]},{"Key":"maybe I'm","Fragments":["just"]},{"Key":"also submitted","Fragments":["before"]},{"Key":"submitted before","Fragments":["I"]},{"Key":"learned about","Fragments":["the"]},{"Key":"the Twitter","Fragments":["Scala"]},{"Key":"Twitter Scala","Fragments":["Style"]},{"Key":"Scala Style","Fragments":["Guide,"]},{"Key":"Style Guide,","Fragments":["so"]},{"Key":"Guide, so","Fragments":["I'm"]},{"Key":"I'm currently","Fragments":["reading"]},{"Key":"currently reading","Fragments":["through"]},{"Key":"reading through","Fragments":["that,"]},{"Key":"through that,","Fragments":["trying"]},{"Key":"that, trying","Fragments":["to"]},{"Key":"to digest","Fragments":["it."]},{"Key":"Thanks again","Fragments":["for"]},{"Key":"again for","Fragments":["the","every"]},{"Key":"the great","Fragments":["advice!"]},{"Key":" Things","Fragments":["I"]},{"Key":"Things I","Fragments":["noticed:"]},{"Key":"1) @eduardo","Fragments":["is"]},{"Key":"@eduardo is","Fragments":["not"]},{"Key":"not required,","Fragments":["the"]},{"Key":"required, the","Fragments":["compiler"]},{"Key":"compiler will","Fragments":["automatically"]},{"Key":"will automatically","Fragments":["note"]},{"Key":"automatically note","Fragments":["that"]},{"Key":"recursive --","Fragments":["give"]},{"Key":"-- give","Fragments":["it"]},{"Key":"a shot","Fragments":["if"]},{"Key":"shot if","Fragments":["you"]},{"Key":"don't believe","Fragments":["me.","in"]},{"Key":"believe me.","Fragments":[":)"]},{"Key":"2) naming","Fragments":["your"]},{"Key":"naming your","Fragments":["inner"]},{"Key":"inner method","Fragments":["compute"]},{"Key":"method compute","Fragments":["too"]},{"Key":"compute too","Fragments":["isn't"]},{"Key":"too isn't","Fragments":["awesome"]},{"Key":"isn't awesome","Fragments":["in"]},{"Key":"awesome in","Fragments":["my"]},{"Key":"my book.","Fragments":["Typically"]},{"Key":"book. Typically","Fragments":["when"]},{"Key":"Typically when","Fragments":["you"]},{"Key":"FP programs","Fragments":["it's"]},{"Key":"programs it's","Fragments":["named"]},{"Key":"it's named","Fragments":["'go'"]},{"Key":"named 'go'","Fragments":["or"]},{"Key":"'go' or","Fragments":["'loop'."]},{"Key":"or 'loop'.","Fragments":["Also"]},{"Key":"'loop'. Also","Fragments":["the"]},{"Key":"the accumulator,","Fragments":["which"]},{"Key":"accumulator, which","Fragments":["you've"]},{"Key":"which you've","Fragments":["named"]},{"Key":"you've named","Fragments":["'count',"]},{"Key":"named 'count',","Fragments":["is"]},{"Key":"'count', is","Fragments":["usually"]},{"Key":"usually named","Fragments":["acc."]},{"Key":"named acc.","Fragments":["This"]},{"Key":"acc. This","Fragments":["is"]},{"Key":"is sort","Fragments":["of"]},{"Key":"of like","Fragments":["naming"]},{"Key":"like naming","Fragments":["the"]},{"Key":"the counter","Fragments":["in"]},{"Key":"counter in","Fragments":["a"]},{"Key":"loop 'i'","Fragments":["--"]},{"Key":"'i' --","Fragments":["yes"]},{"Key":"-- yes","Fragments":["you"]},{"Key":"yes you","Fragments":["can"]},{"Key":"use anything","Fragments":["you"]},{"Key":"anything you","Fragments":["want,"]},{"Key":"you want,","Fragments":["and","which"]},{"Key":"want, and","Fragments":["sometimes"]},{"Key":"and sometimes","Fragments":["there's"]},{"Key":"there's good","Fragments":["reason"]},{"Key":"good reason","Fragments":["to","(both","not","to"]},{"Key":"do so,","Fragments":["but"]},{"Key":"so, but","Fragments":["absent"]},{"Key":"but absent","Fragments":["such"]},{"Key":"absent such","Fragments":["a"]},{"Key":"probably want","Fragments":["to","to"]},{"Key":"use traditional","Fragments":["names."]},{"Key":"3) 'extra'","Fragments":["isn't"]},{"Key":"'extra' isn't","Fragments":["a"]},{"Key":"great name,","Fragments":["and"]},{"Key":"name, and","Fragments":["I'm"]},{"Key":"sure 'original'","Fragments":["is"]},{"Key":"'original' is","Fragments":["awesome"]},{"Key":"is awesome","Fragments":["either."]},{"Key":"awesome either.","Fragments":["This"]},{"Key":"either. This","Fragments":["is"]},{"Key":"a nitpick,","Fragments":["but"]},{"Key":"nitpick, but","Fragments":["I'd"]},{"Key":"I'd use","Fragments":["some","some"]},{"Key":"other name,","Fragments":["something"]},{"Key":"name, something","Fragments":["that"]},{"Key":"doesn't imply","Fragments":["a"]},{"Key":"imply a","Fragments":["subordinate"]},{"Key":"a subordinate","Fragments":["role"]},{"Key":"subordinate role","Fragments":["to"]},{"Key":"role to","Fragments":["the"]},{"Key":"second parameter","Fragments":["--"]},{"Key":"parameter --","Fragments":["you're"]},{"Key":"-- you're","Fragments":["basically"]},{"Key":"you're basically","Fragments":["diffing"]},{"Key":"basically diffing","Fragments":["two"]},{"Key":"diffing two","Fragments":["lines,"]},{"Key":"two lines,","Fragments":["one"]},{"Key":"lines, one","Fragments":["isn't"]},{"Key":"one isn't","Fragments":["any"]},{"Key":"isn't any","Fragments":["more"]},{"Key":"any more","Fragments":["or"]},{"Key":"the other.","Fragments":["I","I"]},{"Key":"other. I","Fragments":["chose","think"]},{"Key":"chose 'first'","Fragments":["and"]},{"Key":"'first' and","Fragments":["'second',"]},{"Key":"and 'second',","Fragments":["which"]},{"Key":"'second', which","Fragments":["I"]},{"Key":"don't like,","Fragments":["but"]},{"Key":"like, but","Fragments":["I"]},{"Key":"liked 'a'","Fragments":["and"]},{"Key":"'a' and","Fragments":["'b'"]},{"Key":"and 'b'","Fragments":["less"]},{"Key":"'b' less","Fragments":["(even"]},{"Key":"less (even","Fragments":["tho"]},{"Key":"(even tho","Fragments":["those"]},{"Key":"tho those","Fragments":["are"]},{"Key":"are traditional","Fragments":[":))."]},{"Key":"4) you","Fragments":["should"]},{"Key":"should type","Fragments":["annotate"]},{"Key":"annotate public","Fragments":["methods,"]},{"Key":"public methods,","Fragments":["meaning"]},{"Key":"methods, meaning","Fragments":["compute"]},{"Key":"meaning compute","Fragments":["should"]},{"Key":"compute should","Fragments":["be"]},{"Key":"be annotated","Fragments":["to"]},{"Key":"annotated to","Fragments":["return"]},{"Key":" 5)","Fragments":["You"]},{"Key":"5) You","Fragments":["use"]},{"Key":"You use","Fragments":["String's"]},{"Key":"String's head","Fragments":["method,"]},{"Key":"head method,","Fragments":["but"]},{"Key":"use substring","Fragments":["to"]},{"Key":"substring to","Fragments":["extract","ensure"]},{"Key":"extract things.","Fragments":["Just"]},{"Key":"things. Just","Fragments":["use"]},{"Key":"Just use","Fragments":["String's","the"]},{"Key":"String's tail","Fragments":["method"]},{"Key":"tail method","Fragments":["there,"]},{"Key":"method there,","Fragments":["it's"]},{"Key":"there, it's","Fragments":["clear"]},{"Key":"it's clear","Fragments":["and","to"]},{"Key":" FWIW,","Fragments":["the"]},{"Key":"FWIW, the","Fragments":["basic"]},{"Key":"basic approach","Fragments":["you've"]},{"Key":"approach you've","Fragments":["got"]},{"Key":"got here","Fragments":["is"]},{"Key":"one I","Fragments":["chose"]},{"Key":"use ```sortWith```?","Fragments":["what's"]},{"Key":"```sortWith```? what's","Fragments":["wrong"]},{"Key":"wrong w/","Fragments":["the"]},{"Key":"default Char","Fragments":["Ordering?"]},{"Key":"Char Ordering?","Fragments":[":-)"]},{"Key":"way out,","Fragments":["to"]},{"Key":"out, to","Fragments":["just"]},{"Key":"use `containsSlice`.","Fragments":[":-)"]},{"Key":"about implementing","Fragments":["it"]},{"Key":"implementing it","Fragments":["yourself,"]},{"Key":"it yourself,","Fragments":["for"]},{"Key":"yourself, for","Fragments":["example?"]},{"Key":"the Stream","Fragments":["of"]},{"Key":"Stream of","Fragments":["names,"]},{"Key":"of names,","Fragments":["it","I"]},{"Key":"names, it","Fragments":["is"]},{"Key":"very fuctional","Fragments":["way."]},{"Key":" Already","Fragments":["guarantee"]},{"Key":"Already guarantee","Fragments":["the"]},{"Key":"is valid","Fragments":["DNA"]},{"Key":"valid DNA","Fragments":["so"]},{"Key":"DNA so","Fragments":["we"]},{"Key":"the ```getOrElse```.","Fragments":["```contains```"]},{"Key":"```getOrElse```. ```contains```","Fragments":["is"]},{"Key":"```contains``` is","Fragments":["more"]},{"Key":"about jschauls","Fragments":["advice."]},{"Key":"jschauls advice.","Fragments":["My"]},{"Key":"advice. My","Fragments":["[first"]},{"Key":"My [first","Fragments":["iteration]("]},{"Key":"[first iteration](","Fragments":["http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb"]},{"Key":"iteration]( http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb","Fragments":[")"]},{"Key":"http://exercism.io/submissions/bdbb79f807a296b84f0ee2eb )","Fragments":["was"]},{"Key":") was","Fragments":["based"]},{"Key":"was based","Fragments":["on"]},{"Key":"on patternmatching","Fragments":["and"]},{"Key":"patternmatching and","Fragments":["since"]},{"Key":"and since","Fragments":["I","your"]},{"Key":"was basically","Fragments":["matching"]},{"Key":"basically matching","Fragments":["against"]},{"Key":"against _","Fragments":["with"]},{"Key":"_ with","Fragments":["guards"]},{"Key":"with guards","Fragments":["it"]},{"Key":"guards it","Fragments":["didn't"]},{"Key":"it didn't","Fragments":["look","make"]},{"Key":"didn't look","Fragments":["much"]},{"Key":"at pattern","Fragments":["matching"]},{"Key":"great :D","Fragments":["The"]},{"Key":":D The","Fragments":["inner"]},{"Key":"The inner","Fragments":["curly"]},{"Key":"inner curly","Fragments":["braces"]},{"Key":"braces can","Fragments":["be"]},{"Key":"be removed","Fragments":["since"]},{"Key":"removed since","Fragments":["`hey`"]},{"Key":"since `hey`","Fragments":["consists"]},{"Key":"`hey` consists","Fragments":["of"]},{"Key":"to smash","Fragments":["two"]},{"Key":"smash two","Fragments":["collections"]},{"Key":"two collections","Fragments":["together,"]},{"Key":"collections together,","Fragments":["completely"]},{"Key":"together, completely","Fragments":["forget"]},{"Key":"completely forget","Fragments":["about"]},{"Key":"can offer","Fragments":["even"]},{"Key":"offer even","Fragments":["more"]},{"Key":"readable way","Fragments":["(inspired"]},{"Key":"way (inspired","Fragments":["by"]},{"Key":"by Python","Fragments":["unwrapping"]},{"Key":"Python unwrapping","Fragments":["of"]},{"Key":"unwrapping of","Fragments":["tuple,"]},{"Key":"of tuple,","Fragments":["since"]},{"Key":"tuple, since","Fragments":["```parir._1```"]},{"Key":"since ```parir._1```","Fragments":["does"]},{"Key":"```parir._1``` does","Fragments":["not"]},{"Key":" s1.zip(s2).count","Fragments":["{"]},{"Key":"s1.zip(s2).count {","Fragments":["case"]},{"Key":"case (first,","Fragments":["second)"]},{"Key":"(first, second)","Fragments":["=\u003e"]},{"Key":"second) =\u003e","Fragments":["first"]},{"Key":"=\u003e first","Fragments":["!="]},{"Key":"first !=","Fragments":["second"]},{"Key":"!= second","Fragments":["}"]},{"Key":" Shorter:","Fragments":["(p"]},{"Key":"Shorter: (p","Fragments":["=\u003e"]},{"Key":"(p =\u003e","Fragments":["p"]},{"Key":"=\u003e p","Fragments":["!="]},{"Key":"p !=","Fragments":["p.swap)"]},{"Key":"The map","Fragments":["could"]},{"Key":"map could","Fragments":["be"]},{"Key":"looks kind","Fragments":["of"]},{"Key":"of odd","Fragments":["with"]},{"Key":"odd with","Fragments":["the"]},{"Key":"the \"r.\"","Fragments":["on"]},{"Key":"\"r.\" on","Fragments":["a"]},{"Key":"Two minor","Fragments":["suggestions:"]},{"Key":"replace both","Fragments":["instances"]},{"Key":"both instances","Fragments":["of"]},{"Key":"of `.sortWith((w1,","Fragments":["w2)"]},{"Key":"`.sortWith((w1, w2)","Fragments":["=\u003e"]},{"Key":"w2) =\u003e","Fragments":["w1.compare(w2)"]},{"Key":"=\u003e w1.compare(w2)","Fragments":["\u003c"]},{"Key":"w1.compare(w2) \u003c","Fragments":["0)`"]},{"Key":"\u003c 0)`","Fragments":["with"]},{"Key":"0)` with","Fragments":["`.sorted`"]},{"Key":"* scala","Fragments":["doesn't"]},{"Key":"scala doesn't","Fragments":["require"]},{"Key":"a `return`","Fragments":["in"]},{"Key":"final statement","Fragments":["of","is"]},{"Key":"a method;","Fragments":["the"]},{"Key":"method; the","Fragments":["value"]},{"Key":"4 at","Fragments":["all."]},{"Key":"at all.","Fragments":["But"]},{"Key":"all. But","Fragments":["I"]},{"Key":"can't find","Fragments":["a","good"]},{"Key":"map based","Fragments":["on"]},{"Key":"it's current","Fragments":["value,"]},{"Key":"current value,","Fragments":["other"]},{"Key":"value, other","Fragments":["than"]},{"Key":"than to","Fragments":["actually"]},{"Key":"actually implement","Fragments":["the"]},{"Key":"implement the","Fragments":["missing"]},{"Key":"the missing","Fragments":["function"]},{"Key":"missing function","Fragments":["to"]},{"Key":"Consider refactoring","Fragments":["your"]},{"Key":"statement so","Fragments":["that"]},{"Key":"each response","Fragments":["is"]},{"Key":"response is","Fragments":["only"]},{"Key":"used once,","Fragments":["or"]},{"Key":"once, or","Fragments":["if"]},{"Key":"or if","Fragments":["it"]},{"Key":"to repeat","Fragments":["responses,"]},{"Key":"repeat responses,","Fragments":["extract"]},{"Key":"responses, extract","Fragments":["them"]},{"Key":"into constants","Fragments":["in"]},{"Key":"constants in","Fragments":["case"]},{"Key":"also rename","Fragments":["your"]},{"Key":"rename your","Fragments":["\"isDigit()\"","`n`"]},{"Key":"your \"isDigit()\"","Fragments":["method"]},{"Key":"\"isDigit()\" method","Fragments":["since"]},{"Key":"method since","Fragments":["it"]},{"Key":"really checking","Fragments":["if"]},{"Key":"no letters","Fragments":["exist"]},{"Key":"letters exist","Fragments":["-"]},{"Key":"exist -","Fragments":["the"]},{"Key":"String can","Fragments":["contain"]},{"Key":"can contain","Fragments":["punctuation"]},{"Key":"contain punctuation","Fragments":["and"]},{"Key":"punctuation and","Fragments":["whitespace.","then"]},{"Key":"approach after","Fragments":["seeing"]},{"Key":"after seeing","Fragments":["so"]},{"Key":"seeing so","Fragments":["many"]},{"Key":"many verbose","Fragments":["responses"]},{"Key":"verbose responses","Fragments":["to"]},{"Key":"responses to","Fragments":["such"]},{"Key":"Rewrote `isContainedIn`","Fragments":["and"]},{"Key":"`isContainedIn` and","Fragments":["included"]},{"Key":"included @brennan's","Fragments":["feedback."]},{"Key":"but map,","Fragments":["foldleft"]},{"Key":"map, foldleft","Fragments":["implements"]},{"Key":"foldleft implements","Fragments":["count"]},{"Key":"implements count","Fragments":["method."]},{"Key":"See mine","Fragments":["http://exercism.io/submissions/00c7b40515d74d3ebf8ae67037b551be"]},{"Key":"mine http://exercism.io/submissions/00c7b40515d74d3ebf8ae67037b551be","Fragments":[":)"]},{"Key":"No problem!","Fragments":["Remembering"]},{"Key":"problem! Remembering","Fragments":["all"]},{"Key":"Remembering all","Fragments":["the"]},{"Key":"the different","Fragments":["conventions"]},{"Key":"different conventions","Fragments":["is"]},{"Key":"conventions is","Fragments":["part"]},{"Key":"fun and","Fragments":["challenge"]},{"Key":"and challenge","Fragments":["of"]},{"Key":"challenge of","Fragments":["there"]},{"Key":"of there","Fragments":["being"]},{"Key":"there being","Fragments":["so"]},{"Key":"being so","Fragments":["many"]},{"Key":"many languages","Fragments":["on"]},{"Key":"languages on","Fragments":["here"]},{"Key":"the comments.","Fragments":["I"]},{"Key":"comments. I","Fragments":["got"]},{"Key":"got confused","Fragments":["with"]},{"Key":"confused with","Fragments":["other"]},{"Key":"with other","Fragments":["languages."]},{"Key":"you gain","Fragments":["any"]},{"Key":"any clarity","Fragments":["as"]},{"Key":"clarity as","Fragments":["to"]},{"Key":"what each","Fragments":["branch"]},{"Key":"each branch","Fragments":["of"]},{"Key":"branch of","Fragments":["the"]},{"Key":"match expression","Fragments":["*means*"]},{"Key":"expression *means*","Fragments":["(to"]},{"Key":"*means* (to","Fragments":["Bob)"]},{"Key":"(to Bob)","Fragments":["by"]},{"Key":"Bob) by","Fragments":["extracting"]},{"Key":"by extracting","Fragments":["the","the"]},{"Key":"extracting the","Fragments":["predicates","Option"]},{"Key":"into helpfully","Fragments":["named"]},{"Key":"helpfully named","Fragments":["functions?"]},{"Key":"find that","Fragments":["method","using"]},{"Key":"that method","Fragments":["names"]},{"Key":"method names","Fragments":["in"]},{"Key":"names in","Fragments":["Scala"]},{"Key":"usually written","Fragments":["in","as"]},{"Key":"in camelCase,","Fragments":["not"]},{"Key":"camelCase, not","Fragments":["snake_case"]},{"Key":"not snake_case","Fragments":["(an"]},{"Key":"snake_case (an","Fragments":["abomination,"]},{"Key":"(an abomination,","Fragments":["I"]},{"Key":"abomination, I","Fragments":["know)"]},{"Key":"I know)","Fragments":["so"]},{"Key":"know) so","Fragments":["you"]},{"Key":"change `find_alphabet`","Fragments":["to"]},{"Key":"`find_alphabet` to","Fragments":["`findAlphabet`"]},{"Key":"to `findAlphabet`","Fragments":["(but"]},{"Key":"`findAlphabet` (but","Fragments":["in"]},{"Key":"(but in","Fragments":["fact,"]},{"Key":"in fact,","Fragments":["as"]},{"Key":"fact, as","Fragments":["predicate"]},{"Key":"as predicate","Fragments":["functions"]},{"Key":"as `isThing`","Fragments":["or"]},{"Key":"`isThing` or","Fragments":["`hasThing`"]},{"Key":"or `hasThing`","Fragments":["you"]},{"Key":"`hasThing` you","Fragments":["might"]},{"Key":" Alright,","Fragments":["let's"]},{"Key":"Alright, let's","Fragments":["try"]},{"Key":"let's try","Fragments":["without"]},{"Key":"try without","Fragments":["map"]},{"Key":"without map","Fragments":[":)"]},{"Key":"great, also","Fragments":["had"]},{"Key":"also had","Fragments":["it"]},{"Key":"that initially","Fragments":[":)"]},{"Key":"initially :)","Fragments":["..."]},{"Key":":) ...","Fragments":["but"]},{"Key":"... but","Fragments":["the"]},{"Key":"README asks","Fragments":["to"]},{"Key":"asks to","Fragments":["implement"]},{"Key":"solution not","Fragments":["using"]},{"Key":"always find","Fragments":["it"]},{"Key":"nice refresher","Fragments":["to"]},{"Key":"refresher to","Fragments":["implement"]},{"Key":" Alright.","Fragments":["`containsSlice`"]},{"Key":"Alright. `containsSlice`","Fragments":["was"]},{"Key":"`containsSlice` was","Fragments":["the"]},{"Key":"was the","Fragments":["trick."]},{"Key":"use Range","Fragments":["and"]},{"Key":"Range and","Fragments":["\"count\""]},{"Key":"and \"count\"","Fragments":["together!"]},{"Key":"Btw, the","Fragments":["more"]},{"Key":"common way","Fragments":["instead","-"]},{"Key":"way instead","Fragments":["of"]},{"Key":"of \"Range.apply\"","Fragments":["is"]},{"Key":"\"Range.apply\" is","Fragments":["to"]},{"Key":"use \"to\"","Fragments":["or"]},{"Key":"or \"until\"","Fragments":["as"]},{"Key":"\"until\" as","Fragments":["in"]},{"Key":" ```(0","Fragments":["until"]},{"Key":"another possibility:","Fragments":["zip"]},{"Key":"possibility: zip","Fragments":["the"]},{"Key":"zip the","Fragments":["two","two"]},{"Key":"A List","Fragments":["is"]},{"Key":"a singly","Fragments":["linked"]},{"Key":"linked list,","Fragments":["so"]},{"Key":"list, so","Fragments":["appending"]},{"Key":"O(n). Prepending","Fragments":["f(x)"]},{"Key":"Prepending f(x)","Fragments":["to"]},{"Key":"f(x) to","Fragments":["acc"]},{"Key":"to acc","Fragments":["then"]},{"Key":"acc then","Fragments":["reversing"]},{"Key":"final list","Fragments":["will"]},{"Key":"list will","Fragments":["be"]},{"Key":"much faster.","Fragments":["Alternatively"]},{"Key":"faster. Alternatively","Fragments":["you"]},{"Key":"a Vector","Fragments":["or"]},{"Key":"Vector or","Fragments":["a"]},{"Key":"mutable builder,","Fragments":["then"]},{"Key":"builder, then","Fragments":["convert"]},{"Key":"then convert","Fragments":["the"]},{"Key":"result to","Fragments":["List."]},{"Key":"we don't","Fragments":["know","know"]},{"Key":"know closed","Fragments":["formula"]},{"Key":"closed formula","Fragments":["for"]},{"Key":"for 1+2+..","Fragments":["and"]},{"Key":"1+2+.. and","Fragments":["1^2+2^2+..."]},{"Key":"and 1^2+2^2+...","Fragments":["recursion"]},{"Key":"1^2+2^2+... recursion","Fragments":["(with"]},{"Key":"recursion (with","Fragments":["tailrec)"]},{"Key":"(with tailrec)","Fragments":["is"]},{"Key":"tailrec) is","Fragments":["still"]},{"Key":"still avialable","Fragments":["if"]},{"Key":"avialable if","Fragments":["we"]},{"Key":"want solution","Fragments":["for"]},{"Key":"Looks ok.","Fragments":["But"]},{"Key":"ok. But","Fragments":["of"]},{"Key":"always room","Fragments":["for"]},{"Key":"for improvement.","Fragments":[";-)"]},{"Key":"1. Instead","Fragments":["of"]},{"Key":"of \"message.filter","Fragments":["..."]},{"Key":"\"message.filter ...","Fragments":["\u003e"]},{"Key":"... \u003e","Fragments":["0\":"]},{"Key":"\u003e 0\":","Fragments":["try"]},{"Key":"0\": try","Fragments":["out"]},{"Key":"the \"exists\"","Fragments":["function."]},{"Key":"expressions for","Fragments":["pattern"]},{"Key":"of \"Silence\"","Fragments":["and"]},{"Key":"\"Silence\" and","Fragments":["\"Question\"."]},{"Key":"and \"Question\".","Fragments":["(\"Shout\""]},{"Key":"\"Question\". (\"Shout\"","Fragments":["might"]},{"Key":"(\"Shout\" might","Fragments":["be"]},{"Key":"more difficult,","Fragments":["though)."]},{"Key":"Nice to","Fragments":["know"]},{"Key":"about \"groupBy(identity)\",","Fragments":["cause"]},{"Key":"\"groupBy(identity)\", cause","Fragments":["I've"]},{"Key":"cause I've","Fragments":["end"]},{"Key":"I've end","Fragments":["up"]},{"Key":"up doing","Fragments":["\"groupBy(w"]},{"Key":"doing \"groupBy(w","Fragments":["=\u003e"]},{"Key":"\"groupBy(w =\u003e","Fragments":["w)\""]},{"Key":"is similar","Fragments":["to"]},{"Key":" Насколько","Fragments":["я"]},{"Key":"Насколько я","Fragments":["знаю"]},{"Key":"я знаю","Fragments":["Emacs"]},{"Key":"знаю Emacs","Fragments":["поддерживает"]},{"Key":"Emacs поддерживает","Fragments":["редактирование/запуск/навигацию"]},{"Key":"поддерживает редактирование/запуск/навигацию","Fragments":["по"]},{"Key":"редактирование/запуск/навигацию по","Fragments":["ошибкам"]},{"Key":"по ошибкам","Fragments":["для"]},{"Key":"ошибкам для","Fragments":["Scala,"]},{"Key":"для Scala,","Fragments":["плюс"]},{"Key":"Scala, плюс","Fragments":["goto"]},{"Key":"плюс goto","Fragments":["definition,"]},{"Key":"goto definition,","Fragments":["используя"]},{"Key":"definition, используя","Fragments":["ctags."]},{"Key":"используя ctags.","Fragments":["Но"]},{"Key":"ctags. Но","Fragments":["для"]},{"Key":"Но для","Fragments":["целей"]},{"Key":"для целей","Fragments":["debug"]},{"Key":"целей debug","Fragments":["пока"]},{"Key":"debug пока","Fragments":["не"]},{"Key":"пока не","Fragments":["вижу"]},{"Key":"не вижу","Fragments":["альтернативы"]},{"Key":"вижу альтернативы","Fragments":["для"]},{"Key":"альтернативы для","Fragments":["Eclipse."]},{"Key":" Однако","Fragments":["для"]},{"Key":"Однако для","Fragments":["наших"]},{"Key":"для наших","Fragments":["целей"]},{"Key":"наших целей","Fragments":["обучения"]},{"Key":"целей обучения","Fragments":["будет"]},{"Key":"обучения будет","Fragments":["лучше,"]},{"Key":"будет лучше,","Fragments":["если"]},{"Key":"лучше, если","Fragments":["все"]},{"Key":"если все","Fragments":["без"]},{"Key":"все без","Fragments":["исключения"]},{"Key":"без исключения","Fragments":["будут"]},{"Key":"исключения будут","Fragments":["пользоваться"]},{"Key":"будут пользоваться","Fragments":["\"sbt"]},{"Key":"пользоваться \"sbt","Fragments":["test\","]},{"Key":"\"sbt test\",","Fragments":["а"]},{"Key":"test\", а","Fragments":["то"]},{"Key":"а то","Fragments":["мы"]},{"Key":"то мы","Fragments":["не"]},{"Key":"мы не","Fragments":["сможем"]},{"Key":"не сможем","Fragments":["сравнивать"]},{"Key":"сможем сравнивать","Fragments":["решения"]},{"Key":"сравнивать решения","Fragments":["между"]},{"Key":"решения между","Fragments":["собой."]},{"Key":" \"sbt","Fragments":["~test\""]},{"Key":"\"sbt ~test\"","Fragments":["in"]},{"Key":"~test\" in","Fragments":["a"]},{"Key":"separate Terminal","Fragments":["window"]},{"Key":"Terminal window","Fragments":["helps"]},{"Key":"window helps","Fragments":["a"]},{"Key":"helps a","Fragments":["lot"]},{"Key":"lot with","Fragments":["interactive"]},{"Key":"with interactive","Fragments":["testing."]},{"Key":"interactive testing.","Fragments":["For"]},{"Key":"testing. For","Fragments":["non-toy"]},{"Key":"For non-toy","Fragments":["projects"]},{"Key":"non-toy projects","Fragments":["I've"]},{"Key":"projects I've","Fragments":["integrated"]},{"Key":"I've integrated","Fragments":["it"]},{"Key":"integrated it","Fragments":["into"]},{"Key":"into my","Fragments":["editor"]},{"Key":"my editor","Fragments":["to"]},{"Key":"editor to","Fragments":["enjoy"]},{"Key":"to enjoy","Fragments":["navigation-to-error"]},{"Key":"enjoy navigation-to-error","Fragments":["feature."]},{"Key":"using nulls.","Fragments":["They"]},{"Key":"nulls. They","Fragments":["behave"]},{"Key":"They behave","Fragments":["like"]},{"Key":"behave like","Fragments":["a"]},{"Key":"a virus.","Fragments":["Once"]},{"Key":"virus. Once","Fragments":["you"]},{"Key":"you allow","Fragments":["them"]},{"Key":"allow them","Fragments":["you"]},{"Key":"them you","Fragments":["will"]},{"Key":"check nulls","Fragments":["everywhere."]},{"Key":"nulls everywhere.","Fragments":["Give"]},{"Key":"everywhere. Give","Fragments":["Option[T]"]},{"Key":"Give Option[T]","Fragments":["a"]},{"Key":"Option[T] a","Fragments":["chance"]},{"Key":"a chance","Fragments":[":-)"]},{"Key":" Ты","Fragments":["уверен,"]},{"Key":"Ты уверен,","Fragments":["что"]},{"Key":"уверен, что","Fragments":["твой"]},{"Key":"что твой","Fragments":["код"]},{"Key":"твой код","Fragments":["работает?"]},{"Key":"код работает?","Fragments":["В"]},{"Key":"работает? В","Fragments":["Test"]},{"Key":"В Test","Fragments":["Suite"]},{"Key":"Test Suite","Fragments":["вызываются"]},{"Key":"Suite вызываются","Fragments":["функции"]},{"Key":"вызываются функции","Fragments":["у"]},{"Key":"функции у","Fragments":["объекта"]},{"Key":"у объекта","Fragments":["'HelloWorld',"]},{"Key":"объекта 'HelloWorld',","Fragments":["а"]},{"Key":"'HelloWorld', а","Fragments":["ты"]},{"Key":"а ты","Fragments":["объявил"]},{"Key":"ты объявил","Fragments":["'Hello'"]},{"Key":"объявил 'Hello'","Fragments":["!??"]},{"Key":"'Hello' !??","Fragments":["Или"]},{"Key":"!?? Или","Fragments":["ты"]},{"Key":"Или ты","Fragments":["с"]},{"Key":"ты с","Fragments":["первого"]},{"Key":"с первого","Fragments":["задания"]},{"Key":"первого задания","Fragments":["учишься"]},{"Key":"задания учишься","Fragments":["писать"]},{"Key":"учишься писать","Fragments":["неработающий"]},{"Key":"писать неработающий","Fragments":["код"]},{"Key":"неработающий код","Fragments":[";)"]},{"Key":"think flatMap","Fragments":["would"]},{"Key":"flatMap would","Fragments":["let"]},{"Key":"would let","Fragments":["you"]},{"Key":"want with","Fragments":["a"]},{"Key":"slightly cleaner","Fragments":["implementation,"]},{"Key":"cleaner implementation,","Fragments":["but"]},{"Key":"implementation, but","Fragments":["you"]},{"Key":"you worked","Fragments":["the"]},{"Key":"worked the","Fragments":["hell"]},{"Key":"the hell","Fragments":["out"]},{"Key":"hell out","Fragments":["it"]},{"Key":"out it","Fragments":["with"]},{"Key":"Ok, up","Fragments":["to"]},{"Key":"to passing","Fragments":["the"]},{"Key":"first four","Fragments":["tests"]},{"Key":"four tests","Fragments":["now!"]},{"Key":"tests now!","Fragments":[":)"]},{"Key":"right, there","Fragments":["is"]},{"Key":"some leeway","Fragments":["for"]},{"Key":"leeway for","Fragments":["interpretation"]},{"Key":"for interpretation","Fragments":["here."]},{"Key":"interpretation here.","Fragments":["Well,"]},{"Key":"here. Well,","Fragments":["for"]},{"Key":"Well, for","Fragments":["me","example,"]},{"Key":"an insensitive","Fragments":["person"]},{"Key":"insensitive person","Fragments":["shouting"]},{"Key":"person shouting","Fragments":["must"]},{"Key":"shouting must","Fragments":["be"]},{"Key":"be all","Fragments":["upper"]},{"Key":"all upper","Fragments":["case.","case."]},{"Key":"upper case.","Fragments":[":-)","I'd"]},{"Key":"When they","Fragments":["are","are"]},{"Key":"are accessed:","Fragments":["There"]},{"Key":"accessed: There","Fragments":["must"]},{"Key":"some check","Fragments":["if"]},{"Key":"already instantiated.","Fragments":["Just"]},{"Key":"instantiated. Just","Fragments":["search"]},{"Key":"Just search","Fragments":["for"]},{"Key":"for \"scala","Fragments":["lazy","recurse"]},{"Key":"\"scala lazy","Fragments":["val"]},{"Key":"val performance\"","Fragments":["or"]},{"Key":"performance\" or","Fragments":["so"]},{"Key":"The spec","Fragments":["says"]},{"Key":"spec says","Fragments":["that","there"]},{"Key":"Bob should","Fragments":["respond","only"]},{"Key":"should respond","Fragments":["to"]},{"Key":"respond to","Fragments":["yelling","the"]},{"Key":"to yelling","Fragments":["with"]},{"Key":"yelling with","Fragments":["\"Whoa,"]},{"Key":"with \"Whoa,","Fragments":["chill"]},{"Key":"chill out!\"","Fragments":["it"]},{"Key":"out!\" it","Fragments":["does"]},{"Key":"not specify","Fragments":["what"]},{"Key":"specify what","Fragments":["exactly"]},{"Key":"exactly constitutes","Fragments":["yelling,"]},{"Key":"constitutes yelling,","Fragments":["but"]},{"Key":"yelling, but","Fragments":["this"]},{"Key":"site and","Fragments":["the"]},{"Key":"various readme","Fragments":["files"]},{"Key":"readme files","Fragments":["the"]},{"Key":"files the","Fragments":["exercises"]},{"Key":"the exercises","Fragments":["put"]},{"Key":"exercises put","Fragments":["out"]},{"Key":"put out","Fragments":["are"]},{"Key":"out are","Fragments":["careful"]},{"Key":"are careful","Fragments":["to"]},{"Key":"careful to","Fragments":["specify"]},{"Key":"specify that","Fragments":["you"]},{"Key":"be writing","Fragments":["your"]},{"Key":"writing your","Fragments":["code"]},{"Key":"code merely","Fragments":["to"]},{"Key":"merely to","Fragments":["satisfy"]},{"Key":"tests presented","Fragments":["but"]},{"Key":"presented but","Fragments":["to"]},{"Key":"satisfy any","Fragments":["possible"]},{"Key":"any possible","Fragments":["test"]},{"Key":"possible test","Fragments":["that"]},{"Key":"that matches","Fragments":["the"]},{"Key":"matches the","Fragments":["spec.","empty"]},{"Key":" Lazy","Fragments":["vals"]},{"Key":"Lazy vals","Fragments":["come","come"]},{"Key":"vals come","Fragments":["at","w/"]},{"Key":"come at","Fragments":["a"]},{"Key":"performance hit?","Fragments":["When"]},{"Key":"hit? When","Fragments":["they"]},{"Key":"are initialized","Fragments":["or"]},{"Key":"initialized or","Fragments":["every"]},{"Key":"or every","Fragments":["time"]},{"Key":"time they","Fragments":["are"]},{"Key":"are accessed?","Fragments":["Why"]},{"Key":"accessed? Why","Fragments":["is"]},{"Key":"Why is","Fragments":["that?","the","`letters`"]},{"Key":" \"YOU","Fragments":["ARE"]},{"Key":"\"YOU ARE","Fragments":["A","A"]},{"Key":"ARE A","Fragments":["bad","bad"]},{"Key":"A bad","Fragments":["PERSON\"","PERSON\""]},{"Key":"bad PERSON\"","Fragments":["is","is"]},{"Key":"PERSON\" is","Fragments":["still","still"]},{"Key":"still yelling?","Fragments":["Where"]},{"Key":"yelling? Where","Fragments":["is"]},{"Key":"Where is","Fragments":["this"]},{"Key":"this spec?","Fragments":["Did"]},{"Key":"spec? Did","Fragments":["I"]},{"Key":"I miss","Fragments":["something"]},{"Key":"miss something","Fragments":["here?"]},{"Key":"About lazy","Fragments":["val"]},{"Key":"Here it","Fragments":["doesn't"]},{"Key":"doesn't really","Fragments":["matter","add","use"]},{"Key":"really matter","Fragments":["as"]},{"Key":"as both","Fragments":["are"]},{"Key":"both are","Fragments":["only"]},{"Key":"called once","Fragments":["at"]},{"Key":"at max.","Fragments":["Lazy"]},{"Key":"max. Lazy","Fragments":["vals"]},{"Key":"come w/","Fragments":["a"]},{"Key":"small performance","Fragments":["hit,"]},{"Key":"performance hit,","Fragments":["though."]},{"Key":"hit, though.","Fragments":["So"]},{"Key":"though. So","Fragments":["it"]},{"Key":"actual use","Fragments":["case."]},{"Key":"By helper","Fragments":["functions"]},{"Key":"you suggesting","Fragments":["assigning"]},{"Key":"suggesting assigning","Fragments":["the"]},{"Key":"assigning the","Fragments":["other"]},{"Key":"other if","Fragments":["conditions"]},{"Key":"if conditions","Fragments":["to"]},{"Key":"local member","Fragments":["like"]},{"Key":"member like","Fragments":["with"]},{"Key":"like with","Fragments":["isMoreThanHalfUppercase?"]},{"Key":"with isMoreThanHalfUppercase?","Fragments":["So"]},{"Key":"isMoreThanHalfUppercase? So","Fragments":["something"]},{"Key":"\u003e else","Fragments":["if"]},{"Key":"if (isAskingQuestion)","Fragments":["\"Sure.\""]},{"Key":" edit:","Fragments":["You"]},{"Key":"edit: You","Fragments":["explicitly"]},{"Key":"You explicitly","Fragments":["use"]},{"Key":"explicitly use","Fragments":["the"]},{"Key":"word function","Fragments":["but"]},{"Key":"function but","Fragments":["wouldn't"]},{"Key":"but wouldn't","Fragments":["it"]},{"Key":"wouldn't it","Fragments":["be"]},{"Key":"val when","Fragments":["it's"]},{"Key":"same return","Fragments":["for"]},{"Key":"return for","Fragments":["that"]},{"Key":"Wow, I","Fragments":["don't"]},{"Key":"was doing","Fragments":["with","this"]},{"Key":"the half","Fragments":["uppercase,","part!"]},{"Key":"half uppercase,","Fragments":["I"]},{"Key":"uppercase, I","Fragments":["guess"]},{"Key":"half part!","Fragments":["I"]},{"Key":"part! I","Fragments":["definitely"]},{"Key":"definitely don't","Fragments":["think"]},{"Key":"think checking","Fragments":["all"]},{"Key":"checking all","Fragments":["uppercase"]},{"Key":"all uppercase","Fragments":["is"]},{"Key":"uppercase is","Fragments":["matching"]},{"Key":"is matching","Fragments":["the"]},{"Key":"the specs.","Fragments":["\"YOU"]},{"Key":"specs. \"YOU","Fragments":["ARE"]},{"Key":" Names","Fragments":["are"]},{"Key":"Names are","Fragments":["important!"]},{"Key":"are important!","Fragments":["So"]},{"Key":"important! So","Fragments":["if"]},{"Key":"you name","Fragments":["a"]},{"Key":"name a","Fragments":["function"]},{"Key":"function \"isMoreThanHalfUppercase\"","Fragments":["and"]},{"Key":"\"isMoreThanHalfUppercase\" and","Fragments":["check"]},{"Key":"check with","Fragments":["\"forall\""]},{"Key":"with \"forall\"","Fragments":["inside"]},{"Key":"\"forall\" inside","Fragments":["then"]},{"Key":"inside then","Fragments":["it"]},{"Key":"only misleads","Fragments":["readers."]},{"Key":"misleads readers.","Fragments":[":-)"]},{"Key":" lettersOnly","Fragments":["is"]},{"Key":"lettersOnly is","Fragments":["also"]},{"Key":"strange here:","Fragments":["Either"]},{"Key":"here: Either","Fragments":["have"]},{"Key":"boolean or","Fragments":["rename"]},{"Key":"or rename","Fragments":["it."]},{"Key":"rename it.","Fragments":["But"]},{"Key":"to what?","Fragments":["if"]},{"Key":"what? if","Fragments":["you"]},{"Key":"cannot find","Fragments":["a"]},{"Key":"name this","Fragments":["is"]},{"Key":"often an","Fragments":["indicator"]},{"Key":"an indicator","Fragments":["that"]},{"Key":"indicator that","Fragments":["the"]},{"Key":"whole concept","Fragments":["is"]},{"Key":"concept is","Fragments":["somewhat"]},{"Key":"somewhat flawed.","Fragments":["Regex"]},{"Key":"flawed. Regex","Fragments":["matching"]},{"Key":"Regex matching","Fragments":["is"]},{"Key":"idea, but","Fragments":["then"]},{"Key":"it explicitly","Fragments":["with"]},{"Key":"explicitly with","Fragments":["case"]},{"Key":"having helper","Fragments":["functions"]},{"Key":"functions also","Fragments":["for"]},{"Key":"other tests","Fragments":["for"]},{"Key":"tests for","Fragments":["better"]},{"Key":"course it","Fragments":["would!"]},{"Key":"it would!","Fragments":["Good"]},{"Key":"would! Good","Fragments":["eye,"]},{"Key":"Good eye,","Fragments":["I"]},{"Key":"eye, I","Fragments":["clearly"]},{"Key":"I clearly","Fragments":["didn't"]},{"Key":"clearly didn't","Fragments":["think"]},{"Key":"that choice","Fragments":["through."]},{"Key":"choice through.","Fragments":["I"]},{"Key":"through. I","Fragments":["think"]},{"Key":"have somehow","Fragments":["imagined"]},{"Key":"somehow imagined","Fragments":["a"]},{"Key":"imagined a","Fragments":["case"]},{"Key":"where there","Fragments":["would"]},{"Key":"be non-trailing","Fragments":["spaces"]},{"Key":"non-trailing spaces","Fragments":["in"]},{"Key":"spaces in","Fragments":["a"]},{"Key":"string with","Fragments":["only"]},{"Key":"if (s.replace(\"","Fragments":["\","]},{"Key":"(s.replace(\" \",","Fragments":["\"\").isEmpty)"]},{"Key":"\", \"\").isEmpty)","Fragments":["\"Fine."]},{"Key":"\"\").isEmpty) \"Fine.","Fragments":["Be"]},{"Key":"if (s.trim().isEmpty)","Fragments":["\"Fine."]},{"Key":"(s.trim().isEmpty) \"Fine.","Fragments":["Be"]},{"Key":"look clear","Fragments":[":)"]},{"Key":" ```rand```","Fragments":["could"]},{"Key":"```rand``` could","Fragments":["be"]},{"Key":"defined outside","Fragments":["```setName```,"]},{"Key":"outside ```setName```,","Fragments":["same"]},{"Key":"```setName```, same","Fragments":["for"]},{"Key":"same for","Fragments":["your"]},{"Key":"same letter","Fragments":["or"]},{"Key":"letter or","Fragments":["digit"]},{"Key":"or digit","Fragments":["in"]},{"Key":"digit in","Fragments":["a"]},{"Key":"name, eg.","Fragments":["\"AA000\"."]},{"Key":" ```robotName```","Fragments":["is"]},{"Key":"```robotName``` is","Fragments":["a"]},{"Key":"a public","Fragments":["var","var."]},{"Key":"public var","Fragments":["and"]},{"Key":" ```setName```","Fragments":["should"]},{"Key":"```setName``` should","Fragments":["be"]},{"Key":" Given","Fragments":["the","this"]},{"Key":"the multiline","Fragments":["test"]},{"Key":"multiline test","Fragments":["in"]},{"Key":"given test","Fragments":["suite,"]},{"Key":"worth considering","Fragments":["multi-*sentence*"]},{"Key":"considering multi-*sentence*","Fragments":["messages"]},{"Key":"multi-*sentence* messages","Fragments":["for"]},{"Key":"messages for","Fragments":["all"]},{"Key":"all responses.","Fragments":["This"]},{"Key":"responses. This","Fragments":["*could*"]},{"Key":"This *could*","Fragments":["be"]},{"Key":"*could* be","Fragments":["as"]},{"Key":"be as","Fragments":["simple"]},{"Key":"as simple","Fragments":["as","as"]},{"Key":"as splitting","Fragments":["on"]},{"Key":"on sentence","Fragments":["punctuation"]},{"Key":"sentence punctuation","Fragments":["and"]},{"Key":"then finding","Fragments":["a"]},{"Key":"finding a","Fragments":["responder"]},{"Key":"responder for","Fragments":["the"]},{"Key":"last 'sentence',","Fragments":["but"]},{"Key":"'sentence', but","Fragments":["it'll"]},{"Key":"but it'll","Fragments":["easily"]},{"Key":"it'll easily","Fragments":["slip"]},{"Key":"easily slip","Fragments":["up"]},{"Key":"slip up","Fragments":["on"]},{"Key":"on acronyms","Fragments":["and"]},{"Key":"probably many","Fragments":["other"]},{"Key":"many other","Fragments":["issues."]},{"Key":"The given","Fragments":["solution"]},{"Key":"given solution","Fragments":["tries"]},{"Key":"solution tries","Fragments":["to"]},{"Key":"tries to","Fragments":["balance","avoid","fix"]},{"Key":"balance simplicity,","Fragments":["extensibility"]},{"Key":"simplicity, extensibility","Fragments":["and"]},{"Key":"extensibility and","Fragments":["readability."]},{"Key":"make Responders","Fragments":["more"]},{"Key":"Responders more","Fragments":["composable"]},{"Key":"more composable","Fragments":["so"]},{"Key":"composable so","Fragments":["that"]},{"Key":"val responder","Fragments":["="]},{"Key":"responder =","Fragments":["aResponder"]},{"Key":"= aResponder","Fragments":["+"]},{"Key":"aResponder +","Fragments":["anotherResponder"]},{"Key":"This removes","Fragments":["the"]},{"Key":"the Converser,","Fragments":["but"]},{"Key":"Converser, but","Fragments":["perhaps"]},{"Key":"but perhaps","Fragments":["the","that's"]},{"Key":"the Converser","Fragments":["makes"]},{"Key":"Converser makes","Fragments":["it"]},{"Key":"to manipulate","Fragments":["a"]},{"Key":"manipulate a","Fragments":["collection"]},{"Key":"of responders","Fragments":["(i.e."]},{"Key":"responders (i.e.","Fragments":["add"]},{"Key":"(i.e. add","Fragments":["a"]},{"Key":"responder to","Fragments":["the"]},{"Key":"beginning, to","Fragments":["the"]},{"Key":"end, to","Fragments":["the"]},{"Key":"and clean,","Fragments":["easy"]},{"Key":"clean, easy","Fragments":["to"]},{"Key":"could generalize","Fragments":["your"]},{"Key":"generalize your","Fragments":["pair_does_not_match"]},{"Key":"your pair_does_not_match","Fragments":["method"]},{"Key":"pair_does_not_match method","Fragments":["so"]},{"Key":"just work","Fragments":["on"]},{"Key":"work on","Fragments":["chars,","that","shared","the","and","Strings."]},{"Key":"on chars,","Fragments":["but"]},{"Key":"chars, but","Fragments":["works"]},{"Key":"any type,","Fragments":["right?"]},{"Key":"define `listOfAllergies`","Fragments":["inside"]},{"Key":"`listOfAllergies` inside","Fragments":["the"]},{"Key":"the `Allergen`","Fragments":["object"]},{"Key":"`Allergen` object","Fragments":["(as"]},{"Key":"w/ simpler","Fragments":["and"]},{"Key":"simpler and","Fragments":["more","shorter."]},{"Key":"the excercise","Fragments":["Bob"]},{"Key":"excercise Bob","Fragments":["answers"]},{"Key":"answers 'Whatever.'","Fragments":["to"]},{"Key":"'Whatever.' to","Fragments":["anything"]},{"Key":"the special","Fragments":["case"]},{"Key":"case ending","Fragments":["in"]},{"Key":"ending in","Fragments":["\"!\""]},{"Key":"in \"!\"","Fragments":["?"]},{"Key":"see str1","Fragments":["is"]},{"Key":"str1 is","Fragments":["assigned"]},{"Key":"is assigned","Fragments":["to"]},{"Key":"assigned to","Fragments":["twice."]},{"Key":"to twice.","Fragments":["The"]},{"Key":"twice. The","Fragments":["first"]},{"Key":"first assignment","Fragments":["is"]},{"Key":" Neither","Fragments":["\"str1\""]},{"Key":"Neither \"str1\"","Fragments":["or"]},{"Key":"\"str1\" or","Fragments":["\"a\""]},{"Key":"or \"a\"","Fragments":["are"]},{"Key":"\"a\" are","Fragments":["descriptive"]},{"Key":"are descriptive","Fragments":["names..."]},{"Key":"the instances","Fragments":["of"]},{"Key":"of ```Day```","Fragments":["are"]},{"Key":"```Day``` are","Fragments":["actually"]},{"Key":"actually constants,","Fragments":["so","so"]},{"Key":"constants, so","Fragments":["a","they"]},{"Key":"a ```case","Fragments":["class```"]},{"Key":"```case class```","Fragments":["seems"]},{"Key":"class``` seems","Fragments":["inappropriate."]},{"Key":"seems inappropriate.","Fragments":["Instead"]},{"Key":"inappropriate. Instead","Fragments":["use"]},{"Key":"Instead use","Fragments":["either","`map`,"]},{"Key":"either Scala's","Fragments":["```Enumeration```"]},{"Key":"Scala's ```Enumeration```","Fragments":["(which"]},{"Key":"```Enumeration``` (which","Fragments":["I"]},{"Key":"like b/c","Fragments":["of"]},{"Key":"the obscure","Fragments":["syntax"]},{"Key":"obscure syntax","Fragments":["mostly)"]},{"Key":"syntax mostly)","Fragments":["or"]},{"Key":"mostly) or","Fragments":["a"]},{"Key":"trait``` w/","Fragments":["```case","```case"]},{"Key":"w/ ```case","Fragments":["object```","object```"]},{"Key":"```case object```","Fragments":["instances.","instances."]},{"Key":"just believe","Fragments":["you"]},{"Key":"your calendar","Fragments":["arithmetic."]},{"Key":"One possible","Fragments":["attempt"]},{"Key":"possible attempt","Fragments":["to"]},{"Key":"improve and","Fragments":["simplify"]},{"Key":"simplify (?)","Fragments":["the"]},{"Key":"(?) the","Fragments":["code:"]},{"Key":"the code:","Fragments":["merge"]},{"Key":"code: merge","Fragments":["```calc```"]},{"Key":"merge ```calc```","Fragments":["and"]},{"Key":"```calc``` and","Fragments":["```getDay```"]},{"Key":"and ```getDay```","Fragments":["into"]},{"Key":"```getDay``` into","Fragments":["one"]},{"Key":"broke things","Fragments":["down"]},{"Key":"things down","Fragments":["into"]},{"Key":"down into","Fragments":["a"]},{"Key":"of functions.","Fragments":["It"]},{"Key":"functions. It","Fragments":["was"]},{"Key":"pretty easy","Fragments":["to"]},{"Key":"things working.","Fragments":["I"]},{"Key":"working. I","Fragments":["might"]},{"Key":"some names,","Fragments":["but"]},{"Key":"names aren't","Fragments":["terrible."]},{"Key":" @victoria","Fragments":["pointed"]},{"Key":"@victoria pointed","Fragments":["out"]},{"Key":"pointed out","Fragments":["that"]},{"Key":"my previous","Fragments":["iterations","comment.","iteration.","def"]},{"Key":"previous iterations","Fragments":["were"]},{"Key":"iterations were","Fragments":["cheating"]},{"Key":"were cheating","Fragments":["according"]},{"Key":"cheating according","Fragments":["to"]},{"Key":"problem statement.","Fragments":["I"]},{"Key":"statement. I","Fragments":["had"]},{"Key":"to agree.","Fragments":["While"]},{"Key":"agree. While","Fragments":["I'm"]},{"Key":"While I'm","Fragments":["using"]},{"Key":"comprehension here,","Fragments":["I'm"]},{"Key":"here, I'm","Fragments":["fairly"]},{"Key":"fairly certain","Fragments":["this"]},{"Key":"certain this","Fragments":["is"]},{"Key":"still cheating","Fragments":["a"]},{"Key":"cheating a","Fragments":["bit"]},{"Key":"since for","Fragments":["comprehensions"]},{"Key":"comprehensions apparently","Fragments":["compile"]},{"Key":"apparently compile","Fragments":["to"]},{"Key":"compile to","Fragments":["maps/fmaps"]},{"Key":"to maps/fmaps","Fragments":["etc."]},{"Key":"maps/fmaps etc.","Fragments":[":"]},{"Key":"etc. :","Fragments":["http://docs.scala-lang.org/tutorials/FAQ/yield.html"]},{"Key":"I'll see","Fragments":["if"]},{"Key":"can refine","Fragments":["this"]},{"Key":"refine this","Fragments":["more"]},{"Key":"in subsequent","Fragments":["iterations"]},{"Key":" `chars`","Fragments":["contains"]},{"Key":"`chars` contains","Fragments":["all"]},{"Key":"contains all","Fragments":["characters"]},{"Key":"characters covered","Fragments":["by"]},{"Key":"covered by","Fragments":["the"]},{"Key":"regex within","Fragments":["the"]},{"Key":"test which","Fragments":["uses"]},{"Key":"uses \"\\w\",","Fragments":["i.e."]},{"Key":"\"\\w\", i.e.","Fragments":["all"]},{"Key":"i.e. all","Fragments":["word"]},{"Key":"all word","Fragments":["characters:"]},{"Key":"word characters:","Fragments":["[a-zA-Z_0-9]"]},{"Key":"were on","Fragments":["a"]},{"Key":"better track","Fragments":["w/"]},{"Key":"track w/","Fragments":["this"]},{"Key":"w/ this","Fragments":["solution.","`reverse`"]},{"Key":"why does","Fragments":["```chars```"]},{"Key":"does ```chars```","Fragments":["not"]},{"Key":"```chars``` not","Fragments":["just"]},{"Key":"just contain","Fragments":["only"]},{"Key":"contain only","Fragments":["chars?"]},{"Key":"\"random\" name","Fragments":["by"]},{"Key":"name by","Fragments":["calling"]},{"Key":"calling random.nextInt","Fragments":["for"]},{"Key":"random.nextInt for","Fragments":["each"]},{"Key":"char /","Fragments":["digit"]},{"Key":"/ digit","Fragments":["separately"]},{"Key":"digit separately","Fragments":["so"]},{"Key":"separately so","Fragments":["I"]},{"Key":"IMO the","Fragments":["spec"]},{"Key":"spec doesn't","Fragments":["say"]},{"Key":"say there","Fragments":["should","is"]},{"Key":"a uniqueness","Fragments":["check,","check","check!"]},{"Key":"uniqueness check,","Fragments":["it"]},{"Key":"check, it","Fragments":["only"]},{"Key":"only says","Fragments":["\"In"]},{"Key":"says \"In","Fragments":["some"]},{"Key":"\"In some","Fragments":["exercism"]},{"Key":"some exercism","Fragments":["language"]},{"Key":"exercism language","Fragments":["tracks"]},{"Key":"language tracks","Fragments":["there"]},{"Key":"tracks there","Fragments":["are"]},{"Key":"are tests","Fragments":["to"]},{"Key":"used twice.\"","Fragments":["But"]},{"Key":"twice.\" But","Fragments":["since"]},{"Key":"But since","Fragments":["the","the"]},{"Key":"of possible","Fragments":["robot","robot","robot","robot","nucleotides."]},{"Key":"possible robot","Fragments":["names","names)","names","names","names."]},{"Key":"is limited","Fragments":["due","to","and"]},{"Key":"limited due","Fragments":["to"]},{"Key":"to spec","Fragments":["even"]},{"Key":"spec even","Fragments":["the"]},{"Key":"even the","Fragments":["best"]},{"Key":"best uniqueness","Fragments":["check"]},{"Key":"uniqueness check","Fragments":["cannot","then"]},{"Key":"check cannot","Fragments":["avoid"]},{"Key":"cannot avoid","Fragments":["duplicates"]},{"Key":"avoid duplicates","Fragments":["when","or"]},{"Key":"duplicates when","Fragments":["there"]},{"Key":"available robot","Fragments":["names."]},{"Key":"robot names.","Fragments":["So","But"]},{"Key":"names. So","Fragments":["I"]},{"Key":"didn't see","Fragments":["much"]},{"Key":"much sense","Fragments":["in"]},{"Key":"will think","Fragments":["again"]},{"Key":"think again","Fragments":["about"]},{"Key":"again about","Fragments":["it"]},{"Key":"and maybe","Fragments":["I'll","a","there"]},{"Key":"maybe I'll","Fragments":["add"]},{"Key":"I'll add","Fragments":["another"]},{"Key":"add another","Fragments":["solution"]},{"Key":"The calculation","Fragments":["within"]},{"Key":"calculation within","Fragments":["`randomRobotName`"]},{"Key":"within `randomRobotName`","Fragments":["simply"]},{"Key":"`randomRobotName` simply","Fragments":["is"]},{"Key":"simply is","Fragments":["a"]},{"Key":"a one-to-one","Fragments":["translation","translation"]},{"Key":"one-to-one translation","Fragments":["of","makes"]},{"Key":"translation of","Fragments":["the"]},{"Key":"the random","Fragments":["value","letters"]},{"Key":"random value","Fragments":["`num`"]},{"Key":"value `num`","Fragments":["(which"]},{"Key":"`num` (which","Fragments":["takes"]},{"Key":"(which takes","Fragments":["one"]},{"Key":"takes one","Fragments":["random"]},{"Key":"random robot","Fragments":["name"]},{"Key":"name out","Fragments":["of"]},{"Key":"robot names)","Fragments":["into"]},{"Key":"names) into","Fragments":["a"]},{"Key":"robot name.","Fragments":["I"]},{"Key":"name. I","Fragments":["thought"]},{"Key":"thought a","Fragments":["one-to-one"]},{"Key":"translation makes","Fragments":["sense"]},{"Key":"sense if","Fragments":["I"]},{"Key":"I rely","Fragments":["on"]},{"Key":"rely on","Fragments":["Random"]},{"Key":"on Random","Fragments":["to"]},{"Key":"Random to","Fragments":["create","generate","generate","have"]},{"Key":"create different","Fragments":["robot"]},{"Key":"different robot","Fragments":["names.","names"]},{"Key":"maybe my","Fragments":["first"]},{"Key":"first submission","Fragments":["is"]},{"Key":"submission is","Fragments":["as"]},{"Key":"as good","Fragments":["(and"]},{"Key":"good (and","Fragments":["easier"]},{"Key":"to understand)","Fragments":["as"]},{"Key":"understand) as","Fragments":["the"]},{"Key":"With \"limited","Fragments":["due"]},{"Key":"\"limited due","Fragments":["to"]},{"Key":"to spec\"","Fragments":["I"]},{"Key":"spec\" I","Fragments":["meant"]},{"Key":"limited to","Fragments":["`numPossibleRobotNames`"]},{"Key":"to `numPossibleRobotNames`","Fragments":["so"]},{"Key":"`numPossibleRobotNames` so","Fragments":["it"]},{"Key":"isn't possible","Fragments":["to"]},{"Key":"to supply","Fragments":["the"]},{"Key":"supply the","Fragments":["whole"]},{"Key":"whole galaxy","Fragments":["with","w/"]},{"Key":"galaxy with","Fragments":["robots"]},{"Key":"with robots","Fragments":["that"]},{"Key":"robots that","Fragments":["have"]},{"Key":"just submitted","Fragments":["another"]},{"Key":"which tries","Fragments":["to","to"]},{"Key":"avoid duplicate","Fragments":["names"]},{"Key":"names and","Fragments":["throws"]},{"Key":"case this","Fragments":["isn't"]},{"Key":"isn't possible.","Fragments":["What"]},{"Key":"possible. What","Fragments":["do"]},{"Key":"by \"spec\"","Fragments":["just"]},{"Key":"\"spec\" just","Fragments":["the"]},{"Key":"tests then","Fragments":["yeah,"]},{"Key":"then yeah,","Fragments":["it"]},{"Key":"yeah, it","Fragments":["is"]},{"Key":"quite unlikely","Fragments":["that"]},{"Key":"unlikely that","Fragments":["you"]},{"Key":"will ever","Fragments":["have"]},{"Key":"but imagine","Fragments":["the"]},{"Key":"imagine the","Fragments":["robot"]},{"Key":"robot factory","Fragments":["supplying"]},{"Key":"factory supplying","Fragments":["the"]},{"Key":"supplying the","Fragments":["whole","whole"]},{"Key":"galaxy w/","Fragments":["robots"]},{"Key":"w/ robots","Fragments":["..."]},{"Key":"robots ...","Fragments":[";-)"]},{"Key":"question has","Fragments":["already"]},{"Key":"has already","Fragments":["been"]},{"Key":"been answered","Fragments":["contrary"]},{"Key":"answered contrary","Fragments":["to"]},{"Key":"contrary to","Fragments":["your"]},{"Key":"your view:","Fragments":["If"]},{"Key":"view: If","Fragments":["the"]},{"Key":"says there","Fragments":["should"]},{"Key":"check then","Fragments":["there"]},{"Key":"then there","Fragments":["must"]},{"Key":"uniqueness check!","Fragments":[":-)"]},{"Key":"Why don't","Fragments":["you"]},{"Key":"create random","Fragments":["letters"]},{"Key":"and digits","Fragments":["directly"]},{"Key":"digits directly","Fragments":["instead"]},{"Key":"directly instead","Fragments":["of"]},{"Key":"be smart","Fragments":["w/"]},{"Key":"smart w/","Fragments":["some"]},{"Key":"some strange","Fragments":["```numPossibleRobotNames```"]},{"Key":"strange ```numPossibleRobotNames```","Fragments":["number"]},{"Key":"```numPossibleRobotNames``` number","Fragments":["and"]},{"Key":"and divisions?","Fragments":["I"]},{"Key":"divisions? I","Fragments":["as"]},{"Key":"I as","Fragments":["a"]},{"Key":"a reviewer","Fragments":["don't"]},{"Key":"reviewer don't","Fragments":["want"]},{"Key":"to invest","Fragments":["so"]},{"Key":"invest so","Fragments":["much"]},{"Key":"much time","Fragments":["to","on"]},{"Key":"your algorithm","Fragments":["if"]},{"Key":"algorithm if","Fragments":["I"]},{"Key":"avoid it.","Fragments":["Imagine"]},{"Key":"it. Imagine","Fragments":["yourself"]},{"Key":"Imagine yourself","Fragments":["being"]},{"Key":"yourself being","Fragments":["forced"]},{"Key":"being forced","Fragments":["to"]},{"Key":"forced to","Fragments":["maintain"]},{"Key":"maintain and","Fragments":["debug"]},{"Key":"and debug","Fragments":["your"]},{"Key":"debug your","Fragments":["own"]},{"Key":"code after,","Fragments":["say"]},{"Key":"after, say","Fragments":["one"]},{"Key":"say one","Fragments":["year?!"]},{"Key":"one year?!","Fragments":[";-)"]},{"Key":"about an","Fragments":["additional"]},{"Key":"used twice,","Fragments":["but"]},{"Key":"twice, but","Fragments":["then"]},{"Key":"decided against","Fragments":["it"]},{"Key":"against it","Fragments":["for","I"]},{"Key":"it for","Fragments":["the","`0`"]},{"Key":"The number","Fragments":["of"]},{"Key":"limited and","Fragments":["as","it's"]},{"Key":"as soon","Fragments":["as"]},{"Key":"soon as","Fragments":["there"]},{"Key":"as there","Fragments":["are"]},{"Key":"names it","Fragments":["is"]},{"Key":"is unavoidable","Fragments":["that"]},{"Key":"unavoidable that","Fragments":["there"]},{"Key":"don't trust","Fragments":["Random"]},{"Key":"trust Random","Fragments":["to"]},{"Key":"generate different","Fragments":["robot"]},{"Key":"names I","Fragments":["also"]},{"Key":"also need","Fragments":["to"]},{"Key":"uses Random","Fragments":["to"]},{"Key":"generate one","Fragments":["robot"]},{"Key":"one robot","Fragments":["name"]},{"Key":"name after","Fragments":["the"]},{"Key":"other until","Fragments":["a"]},{"Key":"until a","Fragments":["new"]},{"Key":"new (not","Fragments":["used"]},{"Key":"(not used","Fragments":["before)"]},{"Key":"used before)","Fragments":["robot"]},{"Key":"before) robot","Fragments":["name"]},{"Key":"found doesn't","Fragments":["result"]},{"Key":"doesn't result","Fragments":["in"]},{"Key":"This seemed","Fragments":["too"]},{"Key":"seemed too","Fragments":["much"]},{"Key":"overhead to","Fragments":["me,"]},{"Key":"me, IMO","Fragments":["a"]},{"Key":"IMO a","Fragments":["better"]},{"Key":"been to","Fragments":["not"]},{"Key":"use Random","Fragments":["but"]},{"Key":"Random but","Fragments":["instead"]},{"Key":"instead cycle","Fragments":["through"]},{"Key":"cycle through","Fragments":["all"]},{"Key":"For now","Fragments":["I"]},{"Key":"only make","Fragments":["sure"]},{"Key":"that different","Fragments":["robots","people"]},{"Key":"different robots","Fragments":["get"]},{"Key":"robots get","Fragments":["different"]},{"Key":"get different","Fragments":["names"]},{"Key":"names by","Fragments":["making"]},{"Key":"making val","Fragments":["random"]},{"Key":"val random","Fragments":["static"]},{"Key":"random static","Fragments":["and"]},{"Key":"static and","Fragments":["leave"]},{"Key":"and leave","Fragments":["the","you"]},{"Key":"leave the","Fragments":["rest"]},{"Key":"rest to","Fragments":["Random."]},{"Key":"to comment","Fragments":["if"]},{"Key":"comment if","Fragments":["you"]},{"Key":" Looked","Fragments":["at"]},{"Key":"Looked at","Fragments":["other"]},{"Key":"other submissions","Fragments":["as"]},{"Key":"submissions as","Fragments":["I"]},{"Key":"was having","Fragments":["trouble"]},{"Key":"finding the","Fragments":["proper"]},{"Key":"the proper","Fragments":["function","name,"]},{"Key":"proper function","Fragments":["to"]},{"Key":"the sublists.","Fragments":["I"]},{"Key":"sublists. I","Fragments":["knew"]},{"Key":"knew there","Fragments":["had"]},{"Key":"there had","Fragments":["to"]},{"Key":"something in","Fragments":["Scala"]},{"Key":"looking for!","Fragments":["Love"]},{"Key":"for! Love","Fragments":["the"]},{"Key":"the graceful","Fragments":["solution"]},{"Key":"graceful solution","Fragments":["and"]},{"Key":"functional feel","Fragments":["of"]},{"Key":"feel of","Fragments":["this"]},{"Key":"little code-golfy,","Fragments":["and"]},{"Key":"code-golfy, and","Fragments":["I"]},{"Key":"deliberately chose","Fragments":["to"]},{"Key":"make wordCount","Fragments":["pure"]},{"Key":"wordCount pure","Fragments":["when"]},{"Key":"pure when","Fragments":["the"]},{"Key":"the signatures","Fragments":["imply"]},{"Key":"signatures imply","Fragments":["the"]},{"Key":"imply the","Fragments":["class"]},{"Key":"class is","Fragments":["stateful.","created?"]},{"Key":"is stateful.","Fragments":["It"]},{"Key":"stateful. It","Fragments":["might"]},{"Key":"be worth","Fragments":["adding"]},{"Key":"worth adding","Fragments":["a"]},{"Key":"to people","Fragments":["who","who"]},{"Key":"people who","Fragments":["don't","aren't","are"]},{"Key":"who don't","Fragments":["know"]},{"Key":"about negative","Fragments":["lookahead."]},{"Key":"negative lookahead.","Fragments":["The"]},{"Key":"lookahead. The","Fragments":["foldLeft"]},{"Key":"The foldLeft","Fragments":["syntax"]},{"Key":"foldLeft syntax","Fragments":["is"]},{"Key":"little arcane","Fragments":["to"]},{"Key":"arcane to","Fragments":["people"]},{"Key":"who aren't","Fragments":["used"]},{"Key":"aren't used","Fragments":["to"]},{"Key":"to it.","Fragments":["Not","A"]},{"Key":"it. Not","Fragments":["my"]},{"Key":"Not my","Fragments":["best"]},{"Key":"best effort,","Fragments":["but"]},{"Key":"effort, but","Fragments":["I"]},{"Key":"A perfect","Fragments":["place"]},{"Key":"perfect place","Fragments":["for"]},{"Key":"for for","Fragments":["comprehension."]},{"Key":"comprehension. Interesting","Fragments":["that"]},{"Key":"Interesting that","Fragments":["I"]},{"Key":"went through","Fragments":["the"]},{"Key":"same route,","Fragments":["foldLeft"]},{"Key":"route, foldLeft","Fragments":["frist"]},{"Key":"foldLeft frist","Fragments":["and"]},{"Key":"frist and","Fragments":["for"]},{"Key":"in next","Fragments":["version"]},{"Key":"next version","Fragments":["(I"]},{"Key":"version (I","Fragments":["submitted"]},{"Key":"(I submitted","Fragments":["the"]},{"Key":"submitted the","Fragments":["for","iterations"]},{"Key":"about to","Fragments":["use"]},{"Key":" @hayley","Fragments":["Thank"]},{"Key":"@hayley Thank","Fragments":["you"]},{"Key":"are absolutely","Fragments":["right,"]},{"Key":"The `allNames`","Fragments":["method"]},{"Key":"`allNames` method","Fragments":["indeed"]},{"Key":"method indeed","Fragments":["generates"]},{"Key":"indeed generates","Fragments":["a"]},{"Key":"generates a","Fragments":["new"]},{"Key":"new list","Fragments":["on"]},{"Key":"list on","Fragments":["each","another"]},{"Key":"too optimisitic/naive","Fragments":["on"]},{"Key":"optimisitic/naive on","Fragments":["the"]},{"Key":"the `shuffle`","Fragments":["generating"]},{"Key":"`shuffle` generating","Fragments":["a"]},{"Key":"generating a","Fragments":["lazy"]},{"Key":"an original","Fragments":["one"]},{"Key":"original one","Fragments":["too."]},{"Key":" So,","Fragments":["given"]},{"Key":"So, given","Fragments":["that"]},{"Key":"that `shuffle`","Fragments":["does"]},{"Key":"`shuffle` does","Fragments":["in"]},{"Key":"does in","Fragments":["fact"]},{"Key":"fact generate","Fragments":["all"]},{"Key":"generate all","Fragments":["combinations,","combinations"]},{"Key":"all combinations,","Fragments":["I"]},{"Key":"combinations, I","Fragments":["like"]},{"Key":"your final","Fragments":["proposal"]},{"Key":"final proposal","Fragments":["for"]},{"Key":"proposal for","Fragments":["what"]},{"Key":"achieve as","Fragments":["it"]},{"Key":"not generate","Fragments":["all"]},{"Key":"all combinations","Fragments":["at","and"]},{"Key":"combinations at","Fragments":["once."]},{"Key":"at once.","Fragments":["As"]},{"Key":"once. As","Fragments":["you"]},{"Key":"you say","Fragments":["it"]},{"Key":"really random","Fragments":["(for"]},{"Key":"random (for","Fragments":["people"]},{"Key":"(for people","Fragments":["who"]},{"Key":"are curious,","Fragments":["it"]},{"Key":"curious, it","Fragments":["looks"]},{"Key":"looks like:","Fragments":["RV767,"]},{"Key":"like: RV767,","Fragments":["RV765,"]},{"Key":"RV767, RV765,","Fragments":["RV761,"]},{"Key":"RV765, RV761,","Fragments":["RV760,"]},{"Key":"RV761, RV760,","Fragments":["RV737,"]},{"Key":"RV760, RV737,","Fragments":["RV736,"]},{"Key":"RV737, RV736,","Fragments":["RV733,...)"]},{"Key":"RV736, RV733,...)","Fragments":["but"]},{"Key":"RV733,...) but","Fragments":["I"]},{"Key":"over generating","Fragments":["all"]},{"Key":"then shuffling,","Fragments":["beats"]},{"Key":"shuffling, beats","Fragments":["the"]},{"Key":"beats the","Fragments":["purpose"]},{"Key":"purpose of","Fragments":["having","its","`number`"]},{"Key":"a Stream","Fragments":["over"]},{"Key":"Stream over","Fragments":["a"]},{"Key":"an opinion","Fragments":["on"]},{"Key":"opinion on","Fragments":["the"]},{"Key":"the `var`","Fragments":["and"]},{"Key":"`var` and","Fragments":["what"]},{"Key":"would happen","Fragments":["if"]},{"Key":"happen if","Fragments":["multiple"]},{"Key":"if multiple","Fragments":["clients"]},{"Key":"multiple clients","Fragments":["would"]},{"Key":"clients would","Fragments":["start"]},{"Key":"start generating","Fragments":["random"]},{"Key":"generating random","Fragments":["names?"]},{"Key":"So far,","Fragments":["this"]},{"Key":"far, this","Fragments":["solution"]},{"Key":"the closest","Fragments":["to"]},{"Key":"closest to","Fragments":["handling"]},{"Key":"to handling","Fragments":["duplicates","the"]},{"Key":"handling duplicates","Fragments":["and"]},{"Key":"duplicates and","Fragments":["exhaustion","exhaustion"]},{"Key":"and exhaustion","Fragments":["I","in"]},{"Key":"exhaustion I","Fragments":["can"]},{"Key":"can think","Fragments":["of","of","about"]},{"Key":"of without","Fragments":["maybe"]},{"Key":"without maybe","Fragments":["going"]},{"Key":"maybe going","Fragments":["too"]},{"Key":"far out","Fragments":["..."]},{"Key":"If anyone","Fragments":["passing"]},{"Key":"anyone passing","Fragments":["by"]},{"Key":"passing by","Fragments":["can"]},{"Key":"by can","Fragments":["think"]},{"Key":"that handles","Fragments":["duplicates","bad"]},{"Key":"handles duplicates","Fragments":["and"]},{"Key":"exhaustion in","Fragments":["different"]},{"Key":"in different","Fragments":["way"]},{"Key":"different way","Fragments":["and"]},{"Key":"way and","Fragments":["with"]},{"Key":"and with","Fragments":["a"]},{"Key":"more randomly","Fragments":["looking"]},{"Key":"randomly looking","Fragments":["stream"]},{"Key":"looking stream","Fragments":["of"]},{"Key":"names, I","Fragments":["am"]},{"Key":"very interested","Fragments":["to"]},{"Key":"interested to","Fragments":["find"]},{"Key":"Regarding Random.shuffle(Stream),","Fragments":["try"]},{"Key":"Random.shuffle(Stream), try","Fragments":["this"]},{"Key":"try this","Fragments":["in"]},{"Key":"in REPL","Fragments":["or"]},{"Key":"REPL or","Fragments":["scala"]},{"Key":"or scala","Fragments":["ide"]},{"Key":"scala ide","Fragments":["workspace:"]},{"Key":"// classic","Fragments":["Fibonacci"]},{"Key":"classic Fibonacci","Fragments":["stream"]},{"Key":"Fibonacci stream","Fragments":["with"]},{"Key":"stream with","Fragments":["a"]},{"Key":" lazy","Fragments":["val","val","val"]},{"Key":"val fibs:","Fragments":["Stream[Int]"]},{"Key":"fibs: Stream[Int]","Fragments":["="]},{"Key":"Stream[Int] =","Fragments":["0","Naturals.map(i","Naturals.map(square)"]},{"Key":"= 0","Fragments":["#::"]},{"Key":"0 #::","Fragments":["1"]},{"Key":"#:: 1","Fragments":["#::"]},{"Key":"1 #::","Fragments":["fibs.zip(fibs.tail).map"]},{"Key":"#:: fibs.zip(fibs.tail).map","Fragments":["{"]},{"Key":"fibs.zip(fibs.tail).map {","Fragments":["n"]},{"Key":"{ n","Fragments":["=\u003e"]},{"Key":"n =\u003e","Fragments":["println(n);"]},{"Key":"=\u003e println(n);","Fragments":["n._1"]},{"Key":"println(n); n._1","Fragments":["+"]},{"Key":"n._1 +","Fragments":["n._2"]},{"Key":"+ n._2","Fragments":["}"]},{"Key":"a fix","Fragments":["for"]},{"Key":"fix for","Fragments":["this"]},{"Key":"this (http://exercism.io/submissions/6695633118904ce991b9383a3a898155),","Fragments":["not"]},{"Key":"(http://exercism.io/submissions/6695633118904ce991b9383a3a898155), not","Fragments":["the"]},{"Key":"whole Stream","Fragments":["is"]},{"Key":"Stream is","Fragments":["shuffled,"]},{"Key":"is shuffled,","Fragments":["only"]},{"Key":"shuffled, only","Fragments":["the"]},{"Key":"the sub","Fragments":["streams."]},{"Key":"sub streams.","Fragments":["That"]},{"Key":"streams. That","Fragments":["solves"]},{"Key":"That solves","Fragments":["the"]},{"Key":"solves the","Fragments":["problem"]},{"Key":"problem but","Fragments":["the"]},{"Key":"really random,","Fragments":["one"]},{"Key":"random, one","Fragments":["character"]},{"Key":"one character","Fragments":["is"]},{"Key":"character is","Fragments":["changeing","uppercase"]},{"Key":"is changeing","Fragments":["only"]},{"Key":"changeing only","Fragments":["from"]},{"Key":"only from","Fragments":["call"]},{"Key":"from call","Fragments":["to"]},{"Key":"fix what","Fragments":["I"]},{"Key":"meant in","Fragments":["my"]},{"Key":"previous comment.","Fragments":["Please"]},{"Key":"comment. Please","Fragments":["see:"]},{"Key":"Please see:","Fragments":["http://exercism.io/submissions/40d6361260a94a499e44b9535e1a4c59."]},{"Key":"could exhaust","Fragments":["names"]},{"Key":"exhaust names","Fragments":["(got"]},{"Key":"names (got","Fragments":["UnsupportedOperationException)"]},{"Key":"(got UnsupportedOperationException)","Fragments":["by"]},{"Key":"UnsupportedOperationException) by","Fragments":["test."]},{"Key":"is clean","Fragments":["and"]},{"Key":"and nice.","Fragments":["However."]},{"Key":"think names","Fragments":["will"]},{"Key":"names will","Fragments":["never"]},{"Key":"never be","Fragments":["exhausted"]},{"Key":"be exhausted","Fragments":["because"]},{"Key":"exhausted because","Fragments":["the"]},{"Key":"the allNames","Fragments":["function"]},{"Key":"allNames function","Fragments":["recreates"]},{"Key":"function recreates","Fragments":["the"]},{"Key":"recreates the","Fragments":["resulting"]},{"Key":"resulting (shuffled)","Fragments":["Stream"]},{"Key":"(shuffled) Stream","Fragments":["each"]},{"Key":"Stream each","Fragments":["time"]},{"Key":"could wirte","Fragments":["a"]},{"Key":"wirte a","Fragments":["test"]},{"Key":"test proving","Fragments":["this:"]},{"Key":"proving this:","Fragments":["I"]},{"Key":"this: I","Fragments":["stripped"]},{"Key":"I stripped","Fragments":["down"]},{"Key":"stripped down","Fragments":["name"]},{"Key":"down name","Fragments":["to"]},{"Key":"name to","Fragments":["1","occur"]},{"Key":"to 1","Fragments":["letter"]},{"Key":"1 letter","Fragments":["1"]},{"Key":"letter 1","Fragments":["digit"]},{"Key":"1 digit","Fragments":["and"]},{"Key":"and was","Fragments":["not"]},{"Key":"not able","Fragments":["to"]},{"Key":"to exhaust","Fragments":["with"]},{"Key":"exhaust with","Fragments":["test"]},{"Key":"with test","Fragments":["but"]},{"Key":"test but","Fragments":["got"]},{"Key":"but got","Fragments":["same","stuck"]},{"Key":"got same","Fragments":["name"]},{"Key":" Beside","Fragments":["that,"]},{"Key":"Beside that,","Fragments":["I"]},{"Key":"if shuffle","Fragments":["will"]},{"Key":"shuffle will","Fragments":["do"]},{"Key":"it lazy","Fragments":["way,"]},{"Key":"lazy way,","Fragments":["I"]},{"Key":"with longer","Fragments":["letter"]},{"Key":"longer letter","Fragments":["streems"]},{"Key":"letter streems","Fragments":["(adding"]},{"Key":"streems (adding","Fragments":["('a'"]},{"Key":"(adding ('a'","Fragments":["to"]},{"Key":"'z') too)","Fragments":["and"]},{"Key":"too) and","Fragments":["test"]},{"Key":"test become","Fragments":["significantly"]},{"Key":"become significantly","Fragments":["longer."]},{"Key":"A solution","Fragments":["that","without"]},{"Key":"that keeps","Fragments":["on"]},{"Key":"keeps on","Fragments":["returning"]},{"Key":"on returning","Fragments":["random","0"]},{"Key":"returning random","Fragments":["names"]},{"Key":"random names","Fragments":["without"]},{"Key":"names without","Fragments":["duplicates."]},{"Key":"Note the","Fragments":["list"]},{"Key":"is generated","Fragments":["lazily."]},{"Key":"generated lazily.","Fragments":["(I"]},{"Key":"lazily. (I","Fragments":["tested"]},{"Key":"(I tested","Fragments":["but"]},{"Key":"tested but","Fragments":["if"]},{"Key":"someone could","Fragments":["confirm"]},{"Key":"could confirm","Fragments":["that"]},{"Key":"See also","Fragments":["my"]},{"Key":"also my","Fragments":["solution"]},{"Key":"solution #2","Fragments":["which"]},{"Key":"#2 which","Fragments":["I"]},{"Key":"nice alternative","Fragments":["although"]},{"Key":"alternative although","Fragments":["that"]},{"Key":"although that","Fragments":["solution"]},{"Key":"that solution","Fragments":["will"]},{"Key":"are exhausted","Fragments":["eventually."]},{"Key":" speaking","Fragments":["of","of"]},{"Key":"speaking of","Fragments":["overkill,","pattern"]},{"Key":"of overkill,","Fragments":["using"]},{"Key":"overkill, using","Fragments":["unapply"]},{"Key":"using unapply","Fragments":["is"]},{"Key":"unapply is","Fragments":["not"]},{"Key":"in comparison?","Fragments":[";-)"]},{"Key":"explore different","Fragments":["solutions"]},{"Key":"different solutions","Fragments":["in"]},{"Key":"solutions in","Fragments":["the"]},{"Key":"Scala world?","Fragments":[":-)"]},{"Key":"thanks :)","Fragments":["tried"]},{"Key":":) tried","Fragments":["to"]},{"Key":"first iteration,","Fragments":["should"]},{"Key":"iteration, should","Fragments":["be"]},{"Key":"better solution,","Fragments":["just"]},{"Key":"solution, just","Fragments":["a"]},{"Key":"Interesting approach","Fragments":["to"]},{"Key":"Consider also","Fragments":["to","to"]},{"Key":"the mixed","Fragments":["size"]},{"Key":"mixed size","Fragments":["case"]},{"Key":"size case","Fragments":["according"]},{"Key":"case according","Fragments":["to"]},{"Key":"readme or","Fragments":["tests."]},{"Key":"or tests.","Fragments":["Should"]},{"Key":"tests. Should","Fragments":["throw"]},{"Key":"Should throw","Fragments":["IllegalArgumentException"]},{"Key":"throw IllegalArgumentException","Fragments":["if","exception"]},{"Key":"the sizes","Fragments":["are"]},{"Key":"sizes are","Fragments":["unequal."]},{"Key":"are unequal.","Fragments":["(I"]},{"Key":"unequal. (I","Fragments":["see"]},{"Key":"(I see","Fragments":["a"]},{"Key":"of submissions","Fragments":["that"]},{"Key":"submissions that","Fragments":["don't"]},{"Key":"don't do","Fragments":["this"]},{"Key":"in error,","Fragments":["or"]},{"Key":"error, or","Fragments":["did"]},{"Key":"or did","Fragments":["the"]},{"Key":"did the","Fragments":["requirements"]},{"Key":"requirements change","Fragments":["recently?)"]},{"Key":" Zip","Fragments":["handles"]},{"Key":"Zip handles","Fragments":["this"]},{"Key":"this case.","Fragments":["It"]},{"Key":"case. It","Fragments":["will"]},{"Key":"only return","Fragments":["elements"]},{"Key":"return elements","Fragments":["if"]},{"Key":"elements if","Fragments":["there"]},{"Key":"an entry","Fragments":["in"]},{"Key":"entry in","Fragments":["both"]},{"Key":"Wow! Short","Fragments":["and"]},{"Key":"Short and","Fragments":["sweet!"]},{"Key":"you manage","Fragments":["the"]},{"Key":"manage the","Fragments":["longer"]},{"Key":"longer vs.","Fragments":["shorter"]},{"Key":"vs. shorter","Fragments":["string."]},{"Key":"not bad","Fragments":["-"]},{"Key":"are becoming","Fragments":["a"]},{"Key":"becoming a","Fragments":["Scalaist!"]},{"Key":"a Scalaist!","Fragments":[":-)"]},{"Key":"use two","Fragments":["different"]},{"Key":"different algorithms","Fragments":["for"]},{"Key":"algorithms for","Fragments":["`ciphertext`","aesthetic"]},{"Key":"for `ciphertext`","Fragments":["and"]},{"Key":"`ciphertext` and","Fragments":["`normalizedCiphertext`."]},{"Key":"and `normalizedCiphertext`.","Fragments":["try"]},{"Key":"`normalizedCiphertext`. try","Fragments":["to"]},{"Key":" avoid","Fragments":["the"]},{"Key":"train wreck","Fragments":["anti-pattern:"]},{"Key":"wreck anti-pattern:","Fragments":["have"]},{"Key":"anti-pattern: have","Fragments":["`val`s"]},{"Key":"have `val`s","Fragments":["for"]},{"Key":"`val`s for","Fragments":["intermediate"]},{"Key":"for intermediate","Fragments":["results"]},{"Key":"results and","Fragments":["private"]},{"Key":"may apply","Fragments":["eta-reduction:"]},{"Key":"apply eta-reduction:","Fragments":["`_`","`(_"]},{"Key":"eta-reduction: `_`","Fragments":["instead"]},{"Key":"`_` instead","Fragments":["of"]},{"Key":"of `a","Fragments":["=\u003e"]},{"Key":"`a =\u003e","Fragments":["a`."]},{"Key":"realized an","Fragments":["anagram"]},{"Key":"an anagram","Fragments":["here","of"]},{"Key":"anagram here","Fragments":["would"]},{"Key":"here would","Fragments":["be","be"]},{"Key":"be valid","Fragments":["if"]},{"Key":"valid if","Fragments":["it"]},{"Key":"was made","Fragments":["up","to"]},{"Key":"made up","Fragments":["of"]},{"Key":"up of","Fragments":["all"]},{"Key":"original word.","Fragments":["So,"]},{"Key":"word. So,","Fragments":["a"]},{"Key":"So, a","Fragments":["sorted"]},{"Key":"a sorted","Fragments":["anagram","word."]},{"Key":"sorted anagram","Fragments":["would"]},{"Key":"anagram would","Fragments":["be"]},{"Key":"sorted word.","Fragments":["Then"]},{"Key":"word. Then","Fragments":["it"]},{"Key":"case checking","Fragments":["to"]},{"Key":"sure we","Fragments":["didn't","didn't"]},{"Key":"we didn't","Fragments":["return","get"]},{"Key":"didn't return","Fragments":["\"the"]},{"Key":"return \"the","Fragments":["word\""]},{"Key":"\"the word\"","Fragments":["as"]},{"Key":"word\" as","Fragments":["an"]},{"Key":"of itself,","Fragments":["and"]},{"Key":"itself, and","Fragments":["put"]},{"Key":"a set","Fragments":["to","of"]},{"Key":"didn't get","Fragments":["dupes"]},{"Key":"get dupes","Fragments":["out."]},{"Key":"Heavily regex","Fragments":["dependent,"]},{"Key":"regex dependent,","Fragments":["and"]},{"Key":"dependent, and","Fragments":["scala's"]},{"Key":"and scala's","Fragments":["regexes"]},{"Key":"scala's regexes","Fragments":["are"]},{"Key":"little weird.","Fragments":["Still,"]},{"Key":"weird. Still,","Fragments":["in"]},{"Key":"Still, in","Fragments":["a"]},{"Key":"way those","Fragments":["regexs"]},{"Key":"those regexs","Fragments":["are"]},{"Key":"are \"encapsulated\"","Fragments":["behind"]},{"Key":"\"encapsulated\" behind","Fragments":["vals"]},{"Key":"behind vals","Fragments":["which"]},{"Key":"vals which","Fragments":["make"]},{"Key":"which make","Fragments":["the"]},{"Key":"Removed inferable","Fragments":["return"]},{"Key":"inferable return","Fragments":["type"]},{"Key":"could split","Fragments":["up"]},{"Key":"split up","Fragments":["the"]},{"Key":"the one-liner","Fragments":["for"]},{"Key":"one-liner for","Fragments":["better"]},{"Key":"better readability,","Fragments":["cf."]},{"Key":"readability, cf.","Fragments":["http://tech.gilt.com/2013/06/18/the-human-side-of-scala/"]},{"Key":"aliases might","Fragments":["also","also"]},{"Key":"exercise: Try","Fragments":["to"]},{"Key":"To feel","Fragments":["functional"]},{"Key":"feel functional","Fragments":["spirit"]},{"Key":"functional spirit","Fragments":["of"]},{"Key":"Why does","Fragments":["```reset```"]},{"Key":"does ```reset```","Fragments":["return"]},{"Key":"```reset``` return","Fragments":["a"]},{"Key":"Ranges like","Fragments":["```A'"]},{"Key":"like ```A'","Fragments":["to"]},{"Key":"```A' to","Fragments":["'Z'```."]},{"Key":"Doesn't ```getLetter```","Fragments":["always"]},{"Key":"```getLetter``` always","Fragments":["return"]},{"Key":"same String","Fragments":["\"z\"?","share"]},{"Key":"check to","Fragments":["not","not","see"]},{"Key":"missed it.","Fragments":["getLetter"]},{"Key":"it. getLetter","Fragments":["always"]},{"Key":"getLetter always","Fragments":["get"]},{"Key":"always get","Fragments":["the"]},{"Key":"Yes it's","Fragments":["missing"]},{"Key":"missing but","Fragments":["according"]},{"Key":"but according","Fragments":["to"]},{"Key":"to math","Fragments":["my"]},{"Key":"math my","Fragments":["program"]},{"Key":"my program","Fragments":["has"]},{"Key":"program has","Fragments":["success"]},{"Key":"has success","Fragments":["rate"]},{"Key":"success rate","Fragments":["about"]},{"Key":"rate about","Fragments":["1/4608000,"]},{"Key":"about 1/4608000,","Fragments":["but"]},{"Key":"1/4608000, but","Fragments":["I"]},{"Key":"huge robot","Fragments":["factory,"]},{"Key":"robot factory,","Fragments":["supplying"]},{"Key":"factory, supplying","Fragments":["the"]},{"Key":"whole milky","Fragments":["way!"]},{"Key":"milky way!","Fragments":["so"]},{"Key":"way! so","Fragments":["math"]},{"Key":"so math","Fragments":["is"]},{"Key":"math is","Fragments":["not"]},{"Key":"not your","Fragments":["friend"]},{"Key":"your friend","Fragments":["here!"]},{"Key":"friend here!","Fragments":[";-)"]},{"Key":"you push","Fragments":["the"]},{"Key":"push the","Fragments":["`Statement`"]},{"Key":"the `Statement`","Fragments":["class"]},{"Key":"`Statement` class","Fragments":["into"]},{"Key":"object you","Fragments":["could"]},{"Key":"it extend","Fragments":["`AnyVal`"]},{"Key":"extend `AnyVal`","Fragments":["(don't","(runtime"]},{"Key":"`AnyVal` (don't","Fragments":["forget"]},{"Key":"(don't forget","Fragments":["to"]},{"Key":"the `stmt`","Fragments":["parameter"]},{"Key":"`stmt` parameter","Fragments":["a"]},{"Key":"parameter a","Fragments":["`val`"]},{"Key":"`val` in","Fragments":["that"]},{"Key":"that case).","Fragments":["That"]},{"Key":"case). That","Fragments":["way"]},{"Key":"way no","Fragments":["`Statement`"]},{"Key":"no `Statement`","Fragments":["object"]},{"Key":"`Statement` object","Fragments":["would"]},{"Key":"object would","Fragments":["be"]},{"Key":"be actually","Fragments":["created,"]},{"Key":"actually created,","Fragments":["the"]},{"Key":"created, the","Fragments":["function"]},{"Key":"calls would","Fragments":["be"]},{"Key":"be inlined","Fragments":["and"]},{"Key":"inlined and","Fragments":["you"]},{"Key":"had zero","Fragments":["runtime"]},{"Key":"zero runtime","Fragments":["overhead."]},{"Key":"Just saying","Fragments":[":)"]},{"Key":"( [more","Fragments":["info"]},{"Key":"[more info","Fragments":["about"]},{"Key":"info about","Fragments":["that](http://docs.scala-lang.org/overviews/core/value-classes.html)"]},{"Key":"about that](http://docs.scala-lang.org/overviews/core/value-classes.html)","Fragments":[")"]},{"Key":"The fold","Fragments":["could"]},{"Key":"fold could","Fragments":["be"]},{"Key":"by Traversable's","Fragments":["```groupBy```."]},{"Key":"using vars","Fragments":["when"]},{"Key":"vars when","Fragments":["possible"]},{"Key":"when possible","Fragments":["to"]},{"Key":"a useful","Fragments":["method"]},{"Key":"useful method","Fragments":["```pow```"]},{"Key":"method ```pow```","Fragments":["in"]},{"Key":"```pow``` in","Fragments":["```math```"]},{"Key":"in ```math```","Fragments":["package."]},{"Key":"* ```total```","Fragments":["could"]},{"Key":"```total``` could","Fragments":["be"]},{"Key":"be ```val```","Fragments":["(or"]},{"Key":"```val``` (or","Fragments":["even"]},{"Key":"(or even","Fragments":["```lazy","a"]},{"Key":"even ```lazy","Fragments":["val```)"]},{"Key":"```lazy val```)","Fragments":["since"]},{"Key":"val```) since","Fragments":["it"]},{"Key":"* Body","Fragments":["of"]},{"Key":"Body of","Fragments":["```total```"]},{"Key":"of ```total```","Fragments":["method"]},{"Key":"```total``` method","Fragments":["could"]},{"Key":"simplified (apply","Fragments":["some"]},{"Key":"(apply some","Fragments":["math"]},{"Key":"some math","Fragments":["transformations)."]},{"Key":" Stole","Fragments":["some","the"]},{"Key":"Stole some","Fragments":["ideas"]},{"Key":"from @webster","Fragments":["implementation."]},{"Key":" Standard","Fragments":["\"helper"]},{"Key":"Standard \"helper","Fragments":["function\""]},{"Key":"\"helper function\"","Fragments":["for"]},{"Key":"function\" for","Fragments":["a"]},{"Key":"recursive list","Fragments":["traversal"]},{"Key":"list traversal","Fragments":["-"]},{"Key":"traversal -","Fragments":["do"]},{"Key":"to with","Fragments":["the"]},{"Key":"the head,","Fragments":["and"]},{"Key":"head, and","Fragments":["recurse"]},{"Key":"and recurse","Fragments":["on"]},{"Key":"recurse on","Fragments":["the","list\":","a","a"]},{"Key":"tail and","Fragments":["the"]},{"Key":"comment. I","Fragments":["changed"]},{"Key":"changed it","Fragments":["up"]},{"Key":"little by","Fragments":["defaulting"]},{"Key":"by defaulting","Fragments":["the"]},{"Key":"defaulting the","Fragments":["Roster"]},{"Key":"the Roster","Fragments":["to"]},{"Key":"Roster to","Fragments":["a"]},{"Key":"Map `withDefaultValue`","Fragments":["of"]},{"Key":"`withDefaultValue` of","Fragments":["`Seq()`."]},{"Key":"of `Seq()`.","Fragments":["This"]},{"Key":"`Seq()`. This","Fragments":["cleans"]},{"Key":"This cleans","Fragments":["up"]},{"Key":"the `add(...)`","Fragments":["function"]},{"Key":"`add(...)` function","Fragments":["and"]},{"Key":"and anywhere","Fragments":["else"]},{"Key":"anywhere else","Fragments":["I"]},{"Key":"else I","Fragments":["called"]},{"Key":"I called","Fragments":["`getOrElse`."]},{"Key":"good overall.","Fragments":["Great"]},{"Key":"overall. Great","Fragments":["use"]},{"Key":"of immutable","Fragments":["map,"]},{"Key":"map, type","Fragments":["aliases"]},{"Key":"aliases increase","Fragments":["readability."]},{"Key":"In add(),","Fragments":["you"]},{"Key":"add(), you","Fragments":["can"]},{"Key":"use map's","Fragments":["getOrElseUpdate"]},{"Key":"map's getOrElseUpdate","Fragments":["to"]},{"Key":"getOrElseUpdate to","Fragments":["initialize"]},{"Key":"empty element","Fragments":["instead"]},{"Key":"element instead","Fragments":["and"]},{"Key":"instead and","Fragments":["simplify"]},{"Key":"of `if","Fragments":["(condition)"]},{"Key":"`if (condition)","Fragments":["throw"]},{"Key":"(condition) throw","Fragments":["new"]},{"Key":"new IllegalArgumentException`,","Fragments":["try"]},{"Key":"IllegalArgumentException`, try","Fragments":["`require(condition)`"]},{"Key":"I'd try","Fragments":["to"]},{"Key":"give more","Fragments":["descriptive"]},{"Key":"descriptive names","Fragments":["to"]},{"Key":"the parameters.","Fragments":["What"]},{"Key":"parameters. What","Fragments":["does"]},{"Key":"does 's'","Fragments":["mean?"]},{"Key":"'s' mean?","Fragments":["And"]},{"Key":"mean? And","Fragments":["'ns'?"]},{"Key":"Ok, a","Fragments":["couple"]},{"Key":"is mostly","Fragments":["Java"]},{"Key":"mostly Java","Fragments":["written"]},{"Key":"Java written","Fragments":["in"]},{"Key":"Scala. :-)","Fragments":["That"]},{"Key":":-) That","Fragments":["is"]},{"Key":"for starters,","Fragments":["but"]},{"Key":"starters, but","Fragments":["of"]},{"Key":"start \"thinking","Fragments":["Scala\"."]},{"Key":"String is","Fragments":["also"]},{"Key":"also automagically","Fragments":["a"]},{"Key":"automagically a","Fragments":["Seq[Char],"]},{"Key":"a Seq[Char],","Fragments":["so"]},{"Key":"Seq[Char], so","Fragments":["you"]},{"Key":"use ```Array[Char]```","Fragments":["(btw,"]},{"Key":"```Array[Char]``` (btw,","Fragments":["Array"]},{"Key":"(btw, Array","Fragments":["is"]},{"Key":"Array is","Fragments":["a"]},{"Key":"a also","Fragments":["a"]},{"Key":"a Seq).","Fragments":["Just"]},{"Key":"Seq). Just","Fragments":["pass"]},{"Key":"Just pass","Fragments":["on"]},{"Key":"and pretend","Fragments":["it"]},{"Key":"pretend it","Fragments":["is"]},{"Key":"you did)","Fragments":["use"]},{"Key":"did) use","Fragments":["Scala's"]},{"Key":"Scala's for-comprehension","Fragments":["very"]},{"Key":"for-comprehension very","Fragments":["similarly"]},{"Key":"very similarly","Fragments":["to"]},{"Key":"similarly to","Fragments":["a"]},{"Key":"Java for-loop.","Fragments":["But"]},{"Key":"for-loop. But","Fragments":["Scala"]},{"Key":"provides much","Fragments":["better,"]},{"Key":"much better,","Fragments":["concise"]},{"Key":"better, concise","Fragments":["and"]},{"Key":"readable (well,","Fragments":["if"]},{"Key":"(well, if","Fragments":["you"]},{"Key":"have gotten","Fragments":["used"]},{"Key":"gotten used","Fragments":["to"]},{"Key":"to them)","Fragments":["ways"]},{"Key":"them) ways","Fragments":["to"]},{"Key":"with Collection","Fragments":["(Seqs"]},{"Key":"Collection (Seqs","Fragments":["are"]},{"Key":"(Seqs are","Fragments":["of"]},{"Key":"course Collections)","Fragments":["manipulation:"]},{"Key":"Collections) manipulation:","Fragments":["There"]},{"Key":"manipulation: There","Fragments":["are"]},{"Key":"are those","Fragments":["wonderful"]},{"Key":"those wonderful","Fragments":["Collection"]},{"Key":"wonderful Collection","Fragments":["functions"]},{"Key":"flatMap, filter,","Fragments":["forall,"]},{"Key":"exists, count,","Fragments":["..."]},{"Key":"count, ...","Fragments":["Pls"]},{"Key":"... Pls","Fragments":["have"]},{"Key":"Pls have","Fragments":["a"]},{"Key":"look and","Fragments":["then"]},{"Key":"to rewrite","Fragments":["your"]},{"Key":"rewrite your","Fragments":["code"]},{"Key":"code using","Fragments":["them."]},{"Key":"using them.","Fragments":["The"]},{"Key":"them. The","Fragments":["goal"]},{"Key":"The goal","Fragments":["is"]},{"Key":"goal is","Fragments":["that"]},{"Key":"end you","Fragments":["look"]},{"Key":"look back","Fragments":["at"]},{"Key":"back at","Fragments":["your"]},{"Key":"code here,","Fragments":["shake"]},{"Key":"here, shake","Fragments":["your"]},{"Key":"shake your","Fragments":["head"]},{"Key":"just smile.","Fragments":[";-)"]},{"Key":"length equality","Fragments":["check"]},{"Key":"equality check","Fragments":["there"]},{"Key":"Predef that","Fragments":["suggests"]},{"Key":"that suggests","Fragments":["itself"]},{"Key":"Scala also","Fragments":["provides"]},{"Key":"also provides","Fragments":["the"]},{"Key":"provides the","Fragments":["nice","[`require`](http://www.scala-lang.org/api/2.10.2/index.html#scala.Predef$)"]},{"Key":"feature of","Fragments":["type"]},{"Key":"aliases which","Fragments":["you"]},{"Key":"say \"String\"","Fragments":["but"]},{"Key":"\"String\" but","Fragments":["\"Strand\""]},{"Key":"but \"Strand\"","Fragments":["etc."]},{"Key":"\"Strand\" etc.","Fragments":["This"]},{"Key":"etc. This","Fragments":["way"]},{"Key":"are closer","Fragments":["to"]},{"Key":"business domain,","Fragments":["moving"]},{"Key":"domain, moving","Fragments":["away"]},{"Key":"moving away","Fragments":["from"]},{"Key":"from programming","Fragments":["internals."]},{"Key":"line 1","Fragments":["-"]},{"Key":"1 -","Fragments":["3"]},{"Key":"Avoid regex","Fragments":["when"]},{"Key":"when simple","Fragments":["equivalent"]},{"Key":"simple equivalent","Fragments":["native"]},{"Key":"equivalent native","Fragments":["code"]},{"Key":"native code","Fragments":["exists,"]},{"Key":"code exists,","Fragments":["how"]},{"Key":"exists, how","Fragments":["about"]},{"Key":"about `str.exists(_.isLetter)","Fragments":["\u0026\u0026"]},{"Key":"`str.exists(_.isLetter) \u0026\u0026","Fragments":["str.forall(!_.isLower)`"]},{"Key":"for curly","Fragments":["braces"]},{"Key":"all your","Fragments":["methods."]},{"Key":"for `if","Fragments":["(expression)"]},{"Key":"`if (expression)","Fragments":["return"]},{"Key":"(expression) return","Fragments":["true"]},{"Key":"else false`","Fragments":["just"]},{"Key":"false` just","Fragments":["use"]},{"Key":"Method `hey`","Fragments":["avoid"]},{"Key":"`hey` avoid","Fragments":["`else"]},{"Key":"if` idiom,","Fragments":["lookup"]},{"Key":"idiom, lookup","Fragments":["pattern"]},{"Key":" `isYell`","Fragments":["is"]},{"Key":"`isYell` is","Fragments":["colloquial"]},{"Key":"is colloquial","Fragments":["to"]},{"Key":"colloquial to","Fragments":["american,"]},{"Key":"to american,","Fragments":["use"]},{"Key":"american, use","Fragments":["`isShout`"]},{"Key":" Kind","Fragments":["of"]},{"Key":"Kind of","Fragments":["a"]},{"Key":"a brute","Fragments":["force"]},{"Key":"brute force","Fragments":["solution","methods"]},{"Key":"force solution","Fragments":["to"]},{"Key":"would perhaps","Fragments":["have"]},{"Key":"perhaps have","Fragments":["mapValues","vals"]},{"Key":"have mapValues","Fragments":["called"]},{"Key":"mapValues called","Fragments":["on"]},{"Key":"called on","Fragments":["the"]},{"Key":"the TreeMap","Fragments":["(or"]},{"Key":"TreeMap (or","Fragments":["use"]},{"Key":"(or use","Fragments":["SortedMap"]},{"Key":"SortedMap instead),","Fragments":["but"]},{"Key":"instead), but","Fragments":["to"]},{"Key":"effect, of","Fragments":["course."]},{"Key":" \"So","Fragments":["for"]},{"Key":"\"So for","Fragments":["production"]},{"Key":"for production","Fragments":["code","code"]},{"Key":"production code","Fragments":["I","I"]},{"Key":"Collection combinators","Fragments":["\"","if"]},{"Key":" Totally","Fragments":["agree!"]},{"Key":"Totally agree!","Fragments":["I"]},{"Key":"agree! I","Fragments":["was"]},{"Key":"just seeing","Fragments":["if"]},{"Key":"seeing if","Fragments":["I"]},{"Key":"the long","Fragments":["way."]},{"Key":" count","Fragments":["does"]},{"Key":"count does","Fragments":["reduce"]},{"Key":"does reduce","Fragments":["it"]},{"Key":"reduce it","Fragments":["a"]},{"Key":"bit, thanks","Fragments":["for"]},{"Key":"the nitpick","Fragments":[":)"]},{"Key":"all on","Fragments":["your"]},{"Key":"your own,","Fragments":["but"]},{"Key":"own, but","Fragments":["at"]},{"Key":"but at","Fragments":["least"]},{"Key":"to offer.","Fragments":[":-)"]},{"Key":" Much","Fragments":["less","cleaner,"]},{"Key":"Much less","Fragments":["code"]},{"Key":"code -","Fragments":["therefore"]},{"Key":"- therefore","Fragments":["less"]},{"Key":"therefore less","Fragments":["error-prone"]},{"Key":"and maintain","Fragments":["(and"]},{"Key":"maintain (and","Fragments":["probably"]},{"Key":"more efficient).","Fragments":["So"]},{"Key":"efficient). So","Fragments":["for"]},{"Key":"So for","Fragments":["production"]},{"Key":"combinators if","Fragments":["I"]},{"Key":"I can!","Fragments":[":-)"]},{"Key":"Small nitpick:","Fragments":["You"]},{"Key":"nitpick: You","Fragments":["could"]},{"Key":" @maud","Fragments":["wow"]},{"Key":"@maud wow","Fragments":["people"]},{"Key":"wow people","Fragments":["actually"]},{"Key":"people actually","Fragments":["comment"]},{"Key":"actually comment","Fragments":["on"]},{"Key":"on these.","Fragments":["Thanks!"]},{"Key":"these. Thanks!","Fragments":["Yes,"]},{"Key":"Thanks! Yes,","Fragments":["I"]},{"Key":"practice the","Fragments":["recursive"]},{"Key":"recursive way,","Fragments":["but"]},{"Key":"right, it","Fragments":["is"]},{"Key":"scala built","Fragments":["in"]},{"Key":"helper functions,","Fragments":["and"]},{"Key":"and show","Fragments":["how"]},{"Key":"show how","Fragments":["nicely"]},{"Key":"how nicely","Fragments":["it"]},{"Key":"nicely it","Fragments":["reduces."]},{"Key":"it reduces.","Fragments":["Fun."]},{"Key":"aliases should","Fragments":["start"]},{"Key":"should start","Fragments":["w/"]},{"Key":"But IMHO","Fragments":["your"]},{"Key":"IMHO your","Fragments":["type"]},{"Key":"alias does","Fragments":["not"]},{"Key":"not help","Fragments":["much."]},{"Key":"help much.","Fragments":["Try"]},{"Key":"much. Try","Fragments":["to"]},{"Key":"find type","Fragments":["aliases"]},{"Key":"aliases in","Fragments":["the"]},{"Key":"`foldLeft` -","Fragments":["the"]},{"Key":"and `flatMap`","Fragments":["methods"]},{"Key":"`flatMap` methods","Fragments":["on"]},{"Key":"on `Map[K,","Fragments":["V]`"]},{"Key":"`Map[K, V]`","Fragments":["produce"]},{"Key":"V]` produce","Fragments":["new"]},{"Key":"produce new","Fragments":["`Map`s."]},{"Key":"Much cleaner,","Fragments":["thanks!"]},{"Key":"generate 2","Fragments":["random"]},{"Key":"2 random","Fragments":["letters."]},{"Key":"random letters.","Fragments":["Not"]},{"Key":"letters. Not","Fragments":["only"]},{"Key":"Not only","Fragments":["just"]},{"Key":"only just","Fragments":["\"AB\"!"]},{"Key":"just \"AB\"!","Fragments":[":-)"]},{"Key":"And wasn't","Fragments":["it"]},{"Key":"wasn't it","Fragments":["always"]},{"Key":"always 3","Fragments":["digits?"]},{"Key":"Also missing:","Fragments":["the"]},{"Key":" Calling","Fragments":["the"]},{"Key":"Calling the","Fragments":["argument"]},{"Key":"argument \"test\"","Fragments":["implies"]},{"Key":"\"test\" implies","Fragments":["this"]},{"Key":"implies this","Fragments":["class"]},{"Key":"class exists","Fragments":["for"]},{"Key":"exists for","Fragments":["the"]},{"Key":"the sole","Fragments":["purpose"]},{"Key":"sole purpose","Fragments":["of"]},{"Key":"its Unit","Fragments":["Test."]},{"Key":"Unit Test.","Fragments":["Consider"]},{"Key":"Test. Consider","Fragments":["a"]},{"Key":"Consider a","Fragments":["more"]},{"Key":"more meaningful","Fragments":["parameter"]},{"Key":"meaningful parameter","Fragments":["name."]},{"Key":" Performance","Fragments":["cost"]},{"Key":"Performance cost","Fragments":["for"]},{"Key":"cost for","Fragments":["type"]},{"Key":"for type","Fragments":["aliases?"]},{"Key":"type aliases?","Fragments":["Not"]},{"Key":"aliases? Not","Fragments":["that"]},{"Key":"Not that","Fragments":["I"]},{"Key":"know of.","Fragments":["Should"]},{"Key":"of. Should","Fragments":["be"]},{"Key":"be dealt","Fragments":["w/"]},{"Key":"dealt w/","Fragments":["by"]},{"Key":"w/ by","Fragments":["the"]},{"Key":"compiler easily.","Fragments":["So"]},{"Key":"easily. So","Fragments":["it"]},{"Key":"a free","Fragments":["lunch."]},{"Key":"can mis-/overuse","Fragments":["almost"]},{"Key":"mis-/overuse almost","Fragments":["anything."]},{"Key":"almost anything.","Fragments":["Common"]},{"Key":"anything. Common","Fragments":["sense"]},{"Key":"Common sense","Fragments":["is"]},{"Key":"the guide","Fragments":["here,"]},{"Key":"guide here,","Fragments":["as"]},{"Key":"here, as","Fragments":["always."]},{"Key":"Oh wow,","Fragments":["I"]},{"Key":"wow, I","Fragments":["didn't"]},{"Key":"about type","Fragments":["aliases."]},{"Key":"type aliases.","Fragments":["Is"]},{"Key":"aliases. Is","Fragments":["there"]},{"Key":"performance cost","Fragments":["associated"]},{"Key":"cost associated","Fragments":["with"]},{"Key":"associated with","Fragments":["using"]},{"Key":"using these?","Fragments":["They"]},{"Key":"these? They","Fragments":["seem"]},{"Key":"They seem","Fragments":["very"]},{"Key":"seem very","Fragments":["powerful"]},{"Key":"powerful yet","Fragments":["also"]},{"Key":"yet also","Fragments":["very"]},{"Key":"also very","Fragments":["prone"]},{"Key":"very prone","Fragments":["to"]},{"Key":"prone to","Fragments":["mis-/over-use."]},{"Key":"example, we","Fragments":["deal"]},{"Key":"we deal","Fragments":["w/"]},{"Key":"deal w/","Fragments":["\"Strands\"","empty"]},{"Key":"w/ \"Strands\"","Fragments":["here"]},{"Key":"\"Strands\" here","Fragments":["instead"]},{"Key":"of Strings,","Fragments":["so"]},{"Key":"type alias?","Fragments":["Same"]},{"Key":"alias? Same","Fragments":["for"]},{"Key":"for \"Nucleotide\"","Fragments":["and"]},{"Key":"\"Nucleotide\" and","Fragments":["Char."]},{"Key":" String","Fragments":["and"]},{"Key":"Char are","Fragments":["not"]},{"Key":"very telling,","Fragments":["could"]},{"Key":"telling, could","Fragments":["mean"]},{"Key":"could mean","Fragments":["anything."]},{"Key":"\u003e another","Fragments":["good"]},{"Key":"good habit","Fragments":["is","is"]},{"Key":"habit is","Fragments":["to","to"]},{"Key":"aliases of","Fragments":["the","the"]},{"Key":"\"business domain\"","Fragments":["instead","instead"]},{"Key":"domain\" instead","Fragments":["of","of"]},{"Key":"Scala primitive","Fragments":["(or","(or"]},{"Key":"primitive (or","Fragments":["\"technical","\"technical"]},{"Key":"(or \"technical","Fragments":["domain\")","domain\")"]},{"Key":"\"technical domain\")","Fragments":["types.","types."]},{"Key":"you elaborate","Fragments":["on"]},{"Key":"elaborate on","Fragments":["this?"]},{"Key":"like \"require\"","Fragments":["(perhaps"]},{"Key":"\"require\" (perhaps","Fragments":["also"]},{"Key":"short explanatory","Fragments":["error"]},{"Key":"explanatory error","Fragments":["msg"]},{"Key":"error msg","Fragments":["added)."]},{"Key":"About having","Fragments":["these"]},{"Key":"having these","Fragments":["dense"]},{"Key":"these dense","Fragments":["one-liners:"]},{"Key":"dense one-liners:","Fragments":["Readability"]},{"Key":"one-liners: Readability","Fragments":["is"]},{"Key":"always key","Fragments":["here!"]},{"Key":"case might","Fragments":["be"]},{"Key":"still short","Fragments":["enough"]},{"Key":"be readable.","Fragments":["but"]},{"Key":"readable. but","Fragments":["to"]},{"Key":"habit you","Fragments":["might"]},{"Key":"private little","Fragments":["helper"]},{"Key":"Looks awesome!","Fragments":["some"]},{"Key":"awesome! some","Fragments":["(tiny)"]},{"Key":"some (tiny)","Fragments":["nipticks"]},{"Key":" making","Fragments":["`areaCode`"]},{"Key":"making `areaCode`","Fragments":["a"]},{"Key":"`areaCode` a","Fragments":["val"]},{"Key":"val defeats","Fragments":["the"]},{"Key":"defeats the","Fragments":["purpose"]},{"Key":"of `number`","Fragments":["being"]},{"Key":"`number` being","Fragments":["lazy"]},{"Key":"being lazy","Fragments":["(it's"]},{"Key":"lazy (it's","Fragments":["eagerly"]},{"Key":"(it's eagerly","Fragments":["evaluated"]},{"Key":"eagerly evaluated","Fragments":["anyway)."]},{"Key":"make `areaCode`","Fragments":["lazy"]},{"Key":"`areaCode` lazy","Fragments":["too,"]},{"Key":"lazy too,","Fragments":["and"]},{"Key":"lazy val.","Fragments":["Scala"]},{"Key":"val. Scala","Fragments":["let's"]},{"Key":"Scala let's","Fragments":["you"]},{"Key":"let's you","Fragments":["override"]},{"Key":"you override","Fragments":["a"]},{"Key":"override a","Fragments":["def"]},{"Key":"def with","Fragments":["a","two"]},{"Key":" @tracy","Fragments":["No,"]},{"Key":"@tracy No,","Fragments":["that"]},{"Key":"No, that","Fragments":["was"]},{"Key":"my old","Fragments":["implementation"]},{"Key":"old implementation","Fragments":["that"]},{"Key":"implementation that","Fragments":["I"]},{"Key":"left in.","Fragments":["As"]},{"Key":"in. As","Fragments":["you"]},{"Key":"can see,","Fragments":["it's"]},{"Key":"see, it's","Fragments":["quite"]},{"Key":"bit shorter,","Fragments":["but"]},{"Key":"shorter, but","Fragments":["the"]},{"Key":"groupBy was","Fragments":["a"]},{"Key":"Really interesting","Fragments":["approach."]},{"Key":"interesting approach.","Fragments":["I'm"]},{"Key":"approach. I'm","Fragments":["new"]},{"Key":"scala, is","Fragments":["wordCountIdiomatic"]},{"Key":"is wordCountIdiomatic","Fragments":["being"]},{"Key":"wordCountIdiomatic being","Fragments":["used"]},{"Key":"previous iteration","Fragments":["worked","for"]},{"Key":"iteration worked","Fragments":["and"]},{"Key":"worked and","Fragments":["looked"]},{"Key":"and looked","Fragments":["very"]},{"Key":"looked very","Fragments":["pretty,"]},{"Key":"very pretty,","Fragments":["it"]},{"Key":"pretty, it","Fragments":["did"]},{"Key":"did have","Fragments":["O(n"]},{"Key":"have O(n","Fragments":["log"]},{"Key":"O(n log","Fragments":["n)"]},{"Key":"log n)","Fragments":["time"]},{"Key":"n) time","Fragments":["complexity"]},{"Key":"time complexity","Fragments":["because","beyond"]},{"Key":"complexity because","Fragments":["of"]},{"Key":"the sorting.","Fragments":["The"]},{"Key":"sorting. The","Fragments":["more"]},{"Key":"The more","Fragments":["efficient"]},{"Key":"efficient version","Fragments":["looks"]},{"Key":"version looks","Fragments":["slightly"]},{"Key":"looks slightly","Fragments":["less"]},{"Key":"less good,","Fragments":["but"]},{"Key":"but avoids","Fragments":["the"]},{"Key":"the sorting","Fragments":["and"]},{"Key":"sorting and","Fragments":["thus"]},{"Key":"thus time","Fragments":["complexity"]},{"Key":"complexity beyond","Fragments":["O(n)."]},{"Key":"beyond O(n).","Fragments":["It's"]},{"Key":"O(n). It's","Fragments":["very"]},{"Key":"to how","Fragments":["`Counter`"]},{"Key":"how `Counter`","Fragments":["in"]},{"Key":"`Counter` in","Fragments":["Python"]},{"Key":"in Python","Fragments":["would"]},{"Key":"Python would","Fragments":["work."]},{"Key":"pretty nifty","Fragments":["site!"]},{"Key":"is correct.","Fragments":["However"]},{"Key":"correct. However","Fragments":["value"]},{"Key":"However value","Fragments":["name"]},{"Key":"value name","Fragments":["``filterS``"]},{"Key":"name ``filterS``","Fragments":["is"]},{"Key":"``filterS`` is","Fragments":["a"]},{"Key":"bit confusing","Fragments":["for"]},{"Key":"confusing for","Fragments":["me."]},{"Key":"me. [Scala","Fragments":["string"]},{"Key":"[Scala string","Fragments":["interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)"]},{"Key":"string interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html)","Fragments":["and"]},{"Key":"interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html) and","Fragments":["``StringOps.slice``"]},{"Key":"and ``StringOps.slice``","Fragments":["can"]},{"Key":"``StringOps.slice`` can","Fragments":["improve"]},{"Key":"readability of","Fragments":["this"]},{"Key":"good. My","Fragments":["nitpicks:"]},{"Key":"As often","Fragments":["you"]},{"Key":"also here","Fragments":["simplify"]},{"Key":"here simplify","Fragments":["an"]},{"Key":"simplify an","Fragments":["expression"]},{"Key":"expression ```x","Fragments":["=\u003e"]},{"Key":"f(x)``` to","Fragments":["```f(_)```"]},{"Key":"to ```f(_)```","Fragments":["or"]},{"Key":"```f(_)``` or","Fragments":["even"]},{"Key":"just ```f```:","Fragments":["```seq"]},{"Key":"```f```: ```seq","Fragments":["filter"]},{"Key":"```seq filter","Fragments":["isAnagram```."]},{"Key":"There should","Fragments":["also"]},{"Key":"name than","Fragments":["just","just"]},{"Key":"for public","Fragments":["functions"]},{"Key":"functions (and","Fragments":["also"]},{"Key":"for private","Fragments":["ones"]},{"Key":"private ones","Fragments":["if"]},{"Key":"ones if","Fragments":["it"]},{"Key":"it improves","Fragments":["readability)"]},{"Key":"improves readability)","Fragments":["I"]},{"Key":"readability) I","Fragments":["prefer"]},{"Key":"type (as","Fragments":["they"]},{"Key":"are part","Fragments":["of"]},{"Key":"The val","Fragments":["\"counts\""]},{"Key":"val \"counts\"","Fragments":["is"]},{"Key":"\"counts\" is","Fragments":["only"]},{"Key":"the nucleotideCounts","Fragments":["method."]},{"Key":"nucleotideCounts method.","Fragments":["Shouldn't"]},{"Key":"method. Shouldn't","Fragments":["you"]},{"Key":"val so","Fragments":["it"]},{"Key":"get evaluated","Fragments":["when"]},{"Key":"evaluated when","Fragments":["you"]},{"Key":"to google","Fragments":["a"]},{"Key":"google a","Fragments":["bit."]},{"Key":"bit. :-)","Fragments":["Here"]},{"Key":":-) Here","Fragments":["is"]},{"Key":"first hit","Fragments":["I"]},{"Key":"hit I","Fragments":["got"]},{"Key":"got for","Fragments":["\"scala"]},{"Key":"\"scala recurse","Fragments":["on"]},{"Key":" @leanne","Fragments":["don't"]},{"Key":"@leanne don't","Fragments":["worry"]},{"Key":"don't worry","Fragments":["about"]},{"Key":"worry about","Fragments":["getting"]},{"Key":"about getting","Fragments":["on"]},{"Key":"getting on","Fragments":["my"]},{"Key":"my nerves.","Fragments":["I"]},{"Key":"nerves. I","Fragments":["actually"]},{"Key":"actually really","Fragments":["appreciate"]},{"Key":"feedback. I'm","Fragments":["only"]},{"Key":"only 2","Fragments":["weeks"]},{"Key":"2 weeks","Fragments":["into"]},{"Key":"weeks into","Fragments":["learning"]},{"Key":"into learning","Fragments":["Scala"]},{"Key":"appreciate that","Fragments":["you"]},{"Key":"take the","Fragments":["time"]},{"Key":"the noobs","Fragments":["like"]},{"Key":"noobs like","Fragments":["myself"]},{"Key":"like myself","Fragments":[":)"]},{"Key":"use \"null\"","Fragments":["in","in"]},{"Key":"\"null\" in","Fragments":["Scala!","Scala!"]},{"Key":"Scala! (there","Fragments":["is","is"]},{"Key":"(there is","Fragments":["the","the","always"]},{"Key":"Option type","Fragments":["for","for"]},{"Key":"a non-value).","Fragments":["Why","Why"]},{"Key":"non-value). Why","Fragments":["not","not"]},{"Key":"just initialize","Fragments":["it","it"]},{"Key":"initialize it","Fragments":["w/","w/"]},{"Key":"right starting","Fragments":["value","value"]},{"Key":"starting value","Fragments":["instead","instead"]},{"Key":"value instead","Fragments":["of","of"]},{"Key":"None tip,","Fragments":["I'll"]},{"Key":"tip, I'll","Fragments":["keep"]},{"Key":"in mind.","Fragments":["I"]},{"Key":"mind. I","Fragments":["can't"]},{"Key":"can't initialize","Fragments":["the"]},{"Key":"nested funtion","Fragments":["with"]},{"Key":"funtion with","Fragments":["a"]},{"Key":"a non-null","Fragments":["(non-None?)"]},{"Key":"non-null (non-None?)","Fragments":["value"]},{"Key":"(non-None?) value","Fragments":["because"]},{"Key":"because then","Fragments":["I"]},{"Key":"move my","Fragments":["ListBuffer"]},{"Key":"my ListBuffer","Fragments":["outside"]},{"Key":"ListBuffer outside","Fragments":["the"]},{"Key":"still more","Fragments":["complicated","complicated","readable."]},{"Key":"could be.","Fragments":["The","The"]},{"Key":"be. The","Fragments":["usual","usual"]},{"Key":"to recurse","Fragments":["on","a","on"]},{"Key":"the \"::\"","Fragments":["(de)constructor","operator","(de)constructor,"]},{"Key":"find good","Fragments":["examples"]},{"Key":"good examples","Fragments":["of"]},{"Key":"examples of","Fragments":["this."]},{"Key":"of this.","Fragments":["From"]},{"Key":"this. From","Fragments":["the"]},{"Key":"From the","Fragments":["docs"]},{"Key":"the docs","Fragments":["the"]},{"Key":"docs the","Fragments":["\"::\""]},{"Key":"\"::\" operator","Fragments":["on"]},{"Key":"operator on","Fragments":["List"]},{"Key":"on List","Fragments":["is","for"]},{"Key":"a concatenation","Fragments":["operation,"]},{"Key":"concatenation operation,","Fragments":["not"]},{"Key":"operation, not","Fragments":["\"deconstructor\"."]},{"Key":"not \"deconstructor\".","Fragments":["Does"]},{"Key":"\"deconstructor\". Does","Fragments":["this"]},{"Key":"Does this","Fragments":["behaviour"]},{"Key":"this behaviour","Fragments":["change"]},{"Key":"behaviour change","Fragments":["during"]},{"Key":"change during","Fragments":["pattern"]},{"Key":"during pattern","Fragments":["matching"]},{"Key":"* ,","Fragments":["and"]},{"Key":", and","Fragments":["going"]},{"Key":"and going","Fragments":["into","into"]},{"Key":"going into","Fragments":["recursion","recursion"]},{"Key":"into recursion","Fragments":["on","on"]},{"Key":"List (instead","Fragments":["of","of"]},{"Key":"Here I'm","Fragments":["drawing"]},{"Key":"I'm drawing","Fragments":["a"]},{"Key":"drawing a","Fragments":["blank.","board"]},{"Key":"a blank.","Fragments":["I've"]},{"Key":"blank. I've","Fragments":["found"]},{"Key":"I've found","Fragments":["no","the"]},{"Key":"found no","Fragments":["way"]},{"Key":"no way","Fragments":["to"]},{"Key":"recurse a","Fragments":["List"]},{"Key":"way that","Fragments":["conforms","you've"]},{"Key":"that conforms","Fragments":["with"]},{"Key":"conforms with","Fragments":["the"]},{"Key":"the exercism.","Fragments":["E.g."]},{"Key":"exercism. E.g.","Fragments":["foreach()"]},{"Key":"E.g. foreach()","Fragments":["returns"]},{"Key":"foreach() returns","Fragments":["a"]},{"Key":"a Unit,","Fragments":["which"]},{"Key":"Unit, which","Fragments":["seems"]},{"Key":"which seems","Fragments":["to","to"]},{"Key":"to imply","Fragments":["in-place"]},{"Key":"imply in-place","Fragments":["mutation"]},{"Key":"in-place mutation","Fragments":["of"]},{"Key":"mutation of","Fragments":["the"]},{"Key":"list or","Fragments":["other"]},{"Key":"or other","Fragments":["state"]},{"Key":"other state","Fragments":["?"]},{"Key":"Yes, (tail-)","Fragments":["recursion"]},{"Key":"(tail-) recursion","Fragments":["does"]},{"Key":"recursion does","Fragments":["the"]},{"Key":"still consider","Fragments":["this"]},{"Key":"this too","Fragments":["much"]},{"Key":"- You","Fragments":["should"]},{"Key":"- The","Fragments":["code"]},{"Key":"\"::\" (de)constructor,","Fragments":["and"]},{"Key":"(de)constructor, and","Fragments":["going"]},{"Key":"Scala sources","Fragments":["are","to"]},{"Key":"sources are","Fragments":["not"]},{"Key":"best example","Fragments":["as"]},{"Key":"example as","Fragments":["they"]},{"Key":"they often","Fragments":["make"]},{"Key":"often make","Fragments":["efficiency"]},{"Key":"make efficiency","Fragments":["the"]},{"Key":"efficiency the","Fragments":["top"]},{"Key":"top priority","Fragments":["(which"]},{"Key":"priority (which","Fragments":["is"]},{"Key":" (sorry","Fragments":["if"]},{"Key":"(sorry if","Fragments":["I"]},{"Key":"should get","Fragments":["on"]},{"Key":"get on","Fragments":["your"]},{"Key":"your nerves,","Fragments":["but"]},{"Key":"nerves, but","Fragments":["I"]},{"Key":"you learn","Fragments":["quite"]},{"Key":"learn quite","Fragments":["a"]},{"Key":"bit about","Fragments":["proper"]},{"Key":"about proper","Fragments":["Scala"]},{"Key":"Scala coding","Fragments":["here)."]},{"Key":"Thanks to","Fragments":["@selina's","@jeanette"]},{"Key":"to @selina's","Fragments":["prompting,"]},{"Key":"@selina's prompting,","Fragments":["I"]},{"Key":"prompting, I","Fragments":["dug"]},{"Key":"I dug","Fragments":["a"]},{"Key":"dug a","Fragments":["little"]},{"Key":"little deeper,","Fragments":["and"]},{"Key":"deeper, and","Fragments":["came"]},{"Key":"and came","Fragments":["up"]},{"Key":"nested tail-recursive","Fragments":["function"]},{"Key":"tail-recursive function","Fragments":["which"]},{"Key":"which iteratively","Fragments":["applies"]},{"Key":"iteratively applies","Fragments":["the"]},{"Key":"the op()","Fragments":["function"]},{"Key":"op() function","Fragments":["to"]},{"Key":"each element,","Fragments":["and"]},{"Key":"element, and","Fragments":["adds"]},{"Key":"and adds","Fragments":["them"]},{"Key":"adds them","Fragments":["to"]},{"Key":"best part:","Fragments":["No"]},{"Key":"part: No","Fragments":["more"]},{"Key":"No more","Fragments":["side"]},{"Key":"more side","Fragments":["effects!"]},{"Key":"side effects!","Fragments":[":)"]},{"Key":"take complete","Fragments":["credit"]},{"Key":"complete credit","Fragments":["for"]},{"Key":"I ended","Fragments":["up"]},{"Key":"sources to","Fragments":["see"]},{"Key":"the map()","Fragments":["function","function"]},{"Key":"map() function","Fragments":["manages","directly."]},{"Key":"function manages","Fragments":["to"]},{"Key":"manages to","Fragments":["compose"]},{"Key":"to compose","Fragments":["a"]},{"Key":"compose a","Fragments":["new"]},{"Key":"new List()","Fragments":["without"]},{"Key":"List() without","Fragments":["side-effects."]},{"Key":"like Java.","Fragments":["I"]},{"Key":"Java. I","Fragments":["think"]},{"Key":"\"var\" on","Fragments":["validatedNumber."]},{"Key":"extract your","Fragments":["if/else"]},{"Key":"your if/else","Fragments":["condition"]},{"Key":"if/else condition","Fragments":["into"]},{"Key":"condition into","Fragments":["a"]},{"Key":"function isValidPhone()","Fragments":["so"]},{"Key":"isValidPhone() so","Fragments":["that"]},{"Key":"can assign","Fragments":["the"]},{"Key":"the appropriate","Fragments":["value"]},{"Key":"appropriate value","Fragments":["to"]},{"Key":"to \"validatedNumber\"","Fragments":["without"]},{"Key":"\"validatedNumber\" without","Fragments":["having"]},{"Key":"interpolation functionality","Fragments":["for"]},{"Key":"functionality for","Fragments":["the"]},{"Key":"toString method!","Fragments":["I'm"]},{"Key":"method! I'm","Fragments":["improving"]},{"Key":"I'm improving","Fragments":["my"]},{"Key":"improving my","Fragments":["solution"]},{"Key":"The toString","Fragments":["formating"]},{"Key":"toString formating","Fragments":["would"]},{"Key":"formating would","Fragments":["be"]},{"Key":"if done","Fragments":["using"]},{"Key":"done using","Fragments":["string"]},{"Key":"the \"java","Fragments":["way\""]},{"Key":"\"java way\"","Fragments":[";)."]},{"Key":"unapply here","Fragments":["is"]},{"Key":"is creative","Fragments":["but"]},{"Key":"creative but","Fragments":["to"]},{"Key":"me it","Fragments":["doesn't"]},{"Key":"really add","Fragments":["anything"]},{"Key":"add anything","Fragments":["but"]},{"Key":"anything but","Fragments":["extra"]},{"Key":"but extra","Fragments":["code"]},{"Key":"the solution.","Fragments":["I","This"]},{"Key":"actually prefer","Fragments":["your"]},{"Key":"detecting shouting","Fragments":["take"]},{"Key":"shouting take","Fragments":["a"]},{"Key":"functions provided","Fragments":["by"]},{"Key":"by StringOps.","Fragments":["Via"]},{"Key":"StringOps. Via","Fragments":["the"]},{"Key":"Via the","Fragments":["magic"]},{"Key":"implicits all","Fragments":["those"]},{"Key":"are made","Fragments":["available"]},{"Key":"made available","Fragments":["on"]},{"Key":"available on","Fragments":["strings.","`Strings`"]},{"Key":"strings. A","Fragments":["shouted"]},{"Key":"A shouted","Fragments":["phrase"]},{"Key":"shouted phrase","Fragments":["is"]},{"Key":"phrase is","Fragments":["one"]},{"Key":"one where","Fragments":["every"]},{"Key":"where every","Fragments":["letter"]},{"Key":"every letter","Fragments":["character"]},{"Key":"letter character","Fragments":["is"]},{"Key":"is uppercase","Fragments":["and"]},{"Key":"the non-letter","Fragments":["characters"]},{"Key":"non-letter characters","Fragments":["don't"]},{"Key":"characters don't","Fragments":["matter."]},{"Key":"don't matter.","Fragments":["What"]},{"Key":"matter. What","Fragments":["is"]},{"Key":"of Char.isLower","Fragments":["(or"]},{"Key":"Char.isLower (or","Fragments":["isUpper"]},{"Key":"(or isUpper","Fragments":["for"]},{"Key":"isUpper for","Fragments":["that"]},{"Key":"that matter)","Fragments":["when"]},{"Key":"matter) when","Fragments":["applied"]},{"Key":"when applied","Fragments":["to"]},{"Key":"applied to","Fragments":["a","get"]},{"Key":"to convey","Fragments":["what"]},{"Key":"convey what","Fragments":["is"]},{"Key":"meant by","Fragments":["the"]},{"Key":"the isShouting","Fragments":["method."]},{"Key":"consider usage","Fragments":["of"]},{"Key":"of capital","Fragments":["letters"]},{"Key":"capital letters","Fragments":["shouting.","followed"]},{"Key":"letters shouting.","Fragments":["However"]},{"Key":"shouting. However","Fragments":["if"]},{"Key":"However if","Fragments":["the"]},{"Key":"uppercased version","Fragments":["is"]},{"Key":"the lowercased","Fragments":["version."]},{"Key":"lowercased version.","Fragments":["Than"]},{"Key":"version. Than","Fragments":["there"]},{"Key":"Than there","Fragments":["was"]},{"Key":"was no","Fragments":["other"]},{"Key":"no other","Fragments":["way","reasons"]},{"Key":"other way","Fragments":["to"]},{"Key":"it so","Fragments":["it's"]},{"Key":"not considered","Fragments":["shouting.","a"]},{"Key":"shouting. (invariant","Fragments":[":"]},{"Key":"(invariant :","Fragments":["doesn't"]},{"Key":": doesn't","Fragments":["contain"]},{"Key":"any alphabethic","Fragments":["characters)"]},{"Key":" Introduced","Fragments":["case","a"]},{"Key":"Introduced case","Fragments":["objects."]},{"Key":"case objects.","Fragments":["i.m.o"]},{"Key":"objects. i.m.o","Fragments":["this"]},{"Key":"i.m.o this","Fragments":["has"]},{"Key":"this has","Fragments":["two"]},{"Key":"has two","Fragments":["advantages."]},{"Key":"1. the","Fragments":["'hey'"]},{"Key":"the 'hey'","Fragments":["method","function,"]},{"Key":"'hey' method","Fragments":["is"]},{"Key":"the eyes,","Fragments":["and"]},{"Key":"still using","Fragments":["the"]},{"Key":"previous iteration.","Fragments":["I"]},{"Key":"iteration. I","Fragments":["Wanted"]},{"Key":"I Wanted","Fragments":["the"]},{"Key":"Wanted the","Fragments":["statements"]},{"Key":"the statements","Fragments":["to"]},{"Key":"be mutually","Fragments":["exclusive"]},{"Key":"mutually exclusive","Fragments":["and"]},{"Key":"exclusive and","Fragments":["are"]},{"Key":"are thus","Fragments":["using"]},{"Key":"thus using","Fragments":["!isShouting(s)"]},{"Key":"using !isShouting(s)","Fragments":["in"]},{"Key":"!isShouting(s) in","Fragments":["the"]},{"Key":"reuse this","Fragments":["code"]},{"Key":"code if","Fragments":["I"]},{"Key":"were to","Fragments":["put"]},{"Key":"the unapply","Fragments":["methods."]},{"Key":"about moving","Fragments":["the"]},{"Key":"methods into","Fragments":["the"]},{"Key":"the ```hey```-method","Fragments":["so"]},{"Key":"```hey```-method so","Fragments":["you"]},{"Key":"the ```statement```","Fragments":["as"]},{"Key":"```statement``` as","Fragments":["parameter?"]},{"Key":"rule I","Fragments":["avoid"]},{"Key":"I avoid","Fragments":["using"]},{"Key":"expressions unless","Fragments":["it's"]},{"Key":"unless it's","Fragments":["really"]},{"Key":"`StringOps` class.","Fragments":["It"]},{"Key":"for strings.","Fragments":["For"]},{"Key":"strings. For","Fragments":["example"]},{"Key":"example `statement.exists(_.isAlpha)`","Fragments":["will"]},{"Key":"`statement.exists(_.isAlpha)` will","Fragments":["return"]},{"Key":"one alpha","Fragments":["char."]},{"Key":" Generating","Fragments":["the"]},{"Key":"Generating the","Fragments":["name"]},{"Key":"bit dirty","Fragments":["but"]},{"Key":"dirty but","Fragments":["was"]},{"Key":"was coded","Fragments":["very"]},{"Key":"coded very","Fragments":["quickly."]},{"Key":"like Random","Fragments":["to"]},{"Key":"called alphabetic.","Fragments":["Anyway,"]},{"Key":"alphabetic. Anyway,","Fragments":["since"]},{"Key":"Anyway, since","Fragments":["performance"]},{"Key":"since performance","Fragments":["is"]},{"Key":"not an","Fragments":["issue"]},{"Key":"an issue","Fragments":["my"]},{"Key":"issue my","Fragments":["workaround"]},{"Key":"my workaround","Fragments":["should"]},{"Key":"workaround should","Fragments":["work.."]},{"Key":"keep things","Fragments":["in"]},{"Key":"in smallest","Fragments":["scope"]},{"Key":"smallest scope","Fragments":["possible:"]},{"Key":"```val translationMap","Fragments":["="]},{"Key":"translationMap =","Fragments":["{"]},{"Key":"val letters","Fragments":["="]},{"Key":"letters =","Fragments":["'a"]},{"Key":"= 'a","Fragments":["to"]},{"Key":"'a to","Fragments":["'z'"]},{"Key":"use ```(_.isLetterOrDigit)```","Fragments":["in"]},{"Key":"```(_.isLetterOrDigit)``` in","Fragments":["ln"]},{"Key":"ln 12","Fragments":["directly."]},{"Key":" ```5```","Fragments":["is"]},{"Key":"```5``` is","Fragments":["a"]},{"Key":"a magic","Fragments":["number,"]},{"Key":"magic number,","Fragments":["should"]},{"Key":"number, should","Fragments":["be"]},{"Key":"if ```toSegmentedString```","Fragments":["is"]},{"Key":"```toSegmentedString``` is","Fragments":["worth"]},{"Key":"the hazzle.","Fragments":[":-)"]},{"Key":" @chase","Fragments":["Agreed."]},{"Key":"@chase Agreed.","Fragments":["Thanks"]},{"Key":"Agreed. Thanks","Fragments":["for"]},{"Key":"your name","Fragments":["choice"]},{"Key":"name choice","Fragments":["of"]},{"Key":"filter for","Fragments":["your"]},{"Key":"inner function.","Fragments":["Maybe"]},{"Key":"function. Maybe","Fragments":["isAnagram?"]},{"Key":"written the","Fragments":["`turnRight`"]},{"Key":"the `turnRight`","Fragments":["and"]},{"Key":"`turnRight` and","Fragments":["`turnLeft`"]},{"Key":"and `turnLeft`","Fragments":["methods"]},{"Key":"`turnLeft` methods","Fragments":["using"]},{"Key":"methods using","Fragments":["some"]},{"Key":"some integer","Fragments":["processing"]},{"Key":"integer processing","Fragments":["code"]},{"Key":"processing code","Fragments":["to"]},{"Key":"and previous","Fragments":["bearing,"]},{"Key":"previous bearing,","Fragments":["but"]},{"Key":"bearing, but","Fragments":["I"]},{"Key":"it explicit","Fragments":["using"]},{"Key":"explicit using","Fragments":["the"]},{"Key":"match statements.","Fragments":["This"]},{"Key":"main advantage","Fragments":["that"]},{"Key":"advantage that","Fragments":["is"]},{"Key":"readable in","Fragments":["my"]},{"Key":"for `nucleotideCounts`","Fragments":["it'll"]},{"Key":"`nucleotideCounts` it'll","Fragments":["only"]},{"Key":"it'll only","Fragments":["run"]},{"Key":"only run","Fragments":["if"]},{"Key":"run if","Fragments":["called."]},{"Key":"if called.","Fragments":["Maybe"]},{"Key":"called. Maybe","Fragments":["the"]},{"Key":"=\u003e ...}\"","Fragments":["for"]},{"Key":"...}\" for","Fragments":["the"]},{"Key":"readability perhaps","Fragments":["have"]},{"Key":"have vals","Fragments":["or"]},{"Key":"vals or","Fragments":["little"]},{"Key":"or little","Fragments":["private"]},{"Key":"methods (and","Fragments":["even"]},{"Key":"(and even","Fragments":["type"]},{"Key":"even type","Fragments":["aliases?)"]},{"Key":"type aliases?)","Fragments":["with"]},{"Key":"aliases?) with","Fragments":["good"]},{"Key":"executed you","Fragments":["can"]},{"Key":"map constructed","Fragments":["once"]},{"Key":"constructed once","Fragments":["on"]},{"Key":"on init,","Fragments":["and"]},{"Key":"init, and","Fragments":["then"]},{"Key":"One reason","Fragments":["for","might"]},{"Key":"reason for","Fragments":["the"]},{"Key":"regexes being","Fragments":["a"]},{"Key":"complex is","Fragments":["that"]},{"Key":"I interpreted","Fragments":["\"to"]},{"Key":"interpreted \"to","Fragments":["say"]},{"Key":"\"to say","Fragments":["anything\"","nothing\"."]},{"Key":"say anything\"","Fragments":["as"]},{"Key":"anything\" as","Fragments":["a"]},{"Key":"a text","Fragments":["with"]},{"Key":"text with","Fragments":["at"]},{"Key":"with at","Fragments":["least"]},{"Key":"one alphanum","Fragments":["character"]},{"Key":"alphanum character","Fragments":["while"]},{"Key":"character while","Fragments":["something"]},{"Key":"while something","Fragments":["like"]},{"Key":"like \"---\"","Fragments":["IMO"]},{"Key":"\"---\" IMO","Fragments":["means"]},{"Key":"IMO means","Fragments":["\"to"]},{"Key":"means \"to","Fragments":["say"]},{"Key":"say nothing\".","Fragments":["But"]},{"Key":"nothing\". But","Fragments":["I'll"]},{"Key":"But I'll","Fragments":["look","need"]},{"Key":"it again","Fragments":["later","which","which"]},{"Key":"again later","Fragments":["to"]},{"Key":"later to","Fragments":["find"]},{"Key":"regexes can","Fragments":["be"]},{"Key":"The regexes","Fragments":["could"]},{"Key":"regexes could","Fragments":["perhaps"]},{"Key":"simplified some","Fragments":["more,"]},{"Key":"some more,","Fragments":["but"]},{"Key":"more, but","Fragments":["the"]},{"Key":"them is","Fragments":["nice."]},{"Key":"btw, if","Fragments":["you"]},{"Key":"don't declare","Fragments":["groups"]},{"Key":"declare groups","Fragments":["in"]},{"Key":"groups in","Fragments":["your"]},{"Key":"regex you","Fragments":["can","posted"]},{"Key":"say \"()\"","Fragments":["as"]},{"Key":"\"()\" as","Fragments":["in"]},{"Key":"case shouting()","Fragments":["=\u003e"]},{"Key":"shouting() =\u003e","Fragments":["..."]},{"Key":"The entities","Fragments":["defined"]},{"Key":"entities defined","Fragments":["in"]},{"Key":"object are","Fragments":["actually"]},{"Key":"should at","Fragments":["least"]},{"Key":"least be","Fragments":["declared"]},{"Key":"Better than","Fragments":["just"]},{"Key":"simple ```Int```s","Fragments":["they"]},{"Key":"```Int```s they","Fragments":["should"]},{"Key":"either an","Fragments":["```Enumeration```"]},{"Key":"an ```Enumeration```","Fragments":["or"]},{"Key":"```Enumeration``` or","Fragments":["a"]},{"Key":"the triple-quote","Fragments":["string"]},{"Key":"triple-quote string","Fragments":["delimiter"]},{"Key":"string delimiter","Fragments":["avoids"]},{"Key":"delimiter avoids","Fragments":["the"]},{"Key":"extra backslashes","Fragments":["and"]},{"Key":"backslashes and","Fragments":["makes"]},{"Key":"and makes","Fragments":["regexes"]},{"Key":"makes regexes","Fragments":["easier"]},{"Key":"regexes easier","Fragments":["to"]},{"Key":"Checkout the","Fragments":["groupBy()"]},{"Key":"the groupBy()","Fragments":["method"]},{"Key":"groupBy() method","Fragments":["on"]},{"Key":"List for","Fragments":["an"]},{"Key":"elegant way","Fragments":["to"]},{"Key":"very procedural.","Fragments":["You"]},{"Key":"procedural. You","Fragments":["can"]},{"Key":"return statements","Fragments":["in"]},{"Key":"the case.","Fragments":["The"]},{"Key":"case. The","Fragments":["functions"]},{"Key":"functions return","Fragments":["the"]},{"Key":"the block.","Fragments":["By"]},{"Key":"block. By","Fragments":["this"]},{"Key":"By this","Fragments":["you"]},{"Key":"this you","Fragments":["can"]},{"Key":"omit also","Fragments":["most"]},{"Key":"also most","Fragments":["of"]},{"Key":"'hey' function,","Fragments":["you"]},{"Key":"should bear","Fragments":["in"]},{"Key":"bear in","Fragments":["mind"]},{"Key":"mind that","Fragments":["in"]},{"Key":"functional languages,","Fragments":["the"]},{"Key":"languages, the","Fragments":["if-else"]},{"Key":"if-else statement","Fragments":["is"]},{"Key":"a control","Fragments":["sequence,"]},{"Key":"control sequence,","Fragments":["but"]},{"Key":"sequence, but","Fragments":["also"]},{"Key":"also an","Fragments":["expression."]},{"Key":" Colonel-sanders","Fragments":["is"]},{"Key":"Colonel-sanders is","Fragments":["right"]},{"Key":"is right","Fragments":["that"]},{"Key":"right that","Fragments":["you"]},{"Key":"should rewrite","Fragments":["it"]},{"Key":"matching. See,","Fragments":["e.g.,"]},{"Key":"See, e.g.,","Fragments":["stackoverflow.com/questions/4636610/regular-expression-and-pattern-matching-in-scala"]},{"Key":"definitely like","Fragments":["the"]},{"Key":"functional decomposition;","Fragments":["the"]},{"Key":"decomposition; the","Fragments":["individual"]},{"Key":"the individual","Fragments":["function"]},{"Key":"individual function","Fragments":["names"]},{"Key":"each type","Fragments":["of"]},{"Key":"prompt make","Fragments":["it"]},{"Key":"it very","Fragments":["easy"]},{"Key":"is happening","Fragments":["in"]},{"Key":"happening in","Fragments":["the"]},{"Key":"The mix","Fragments":["of"]},{"Key":"mix of","Fragments":["Unicode-compatible"]},{"Key":"of Unicode-compatible","Fragments":["and"]},{"Key":"Unicode-compatible and","Fragments":["ASCII-only"]},{"Key":"and ASCII-only","Fragments":["matchers"]},{"Key":"ASCII-only matchers","Fragments":["in"]},{"Key":"matchers in","Fragments":["the"]},{"Key":"regex seems","Fragments":["awkward."]},{"Key":"seems awkward.","Fragments":["An"]},{"Key":"awkward. An","Fragments":["ASCII-only"]},{"Key":"An ASCII-only","Fragments":["implementation"]},{"Key":"ASCII-only implementation","Fragments":["would"]},{"Key":"implementation would","Fragments":["be"]},{"Key":"be fine","Fragments":["for"]},{"Key":"fine for","Fragments":["this"]},{"Key":"particular exercise","Fragments":["(especially"]},{"Key":"exercise (especially","Fragments":["if"]},{"Key":"that assumption","Fragments":["is"]},{"Key":"assumption is","Fragments":["documented),"]},{"Key":"is documented),","Fragments":["but"]},{"Key":"documented), but","Fragments":["it's"]},{"Key":"easier IMO","Fragments":["to"]},{"Key":"IMO to","Fragments":["use"]},{"Key":"use \\p{Upper},","Fragments":["\\p{Space},"]},{"Key":"\\p{Upper}, \\p{Space},","Fragments":["et.al."]},{"Key":"idiomatic Scala","Fragments":["implementation"]},{"Key":"Scala implementation","Fragments":["might"]},{"Key":"implementation might","Fragments":["utilize"]},{"Key":"might utilize","Fragments":["pattern"]},{"Key":"utilize pattern","Fragments":["matching"]},{"Key":"implicit returns,","Fragments":["but"]},{"Key":"returns, but","Fragments":["this"]},{"Key":"a fine","Fragments":["solution"]},{"Key":"fine solution","Fragments":["as-is."]},{"Key":"Looks basically","Fragments":["alright."]},{"Key":"use camel-case","Fragments":["starting","instead"]},{"Key":"camel-case starting","Fragments":["with"]},{"Key":"in \"NucleotideTypes\"","Fragments":["(I"]},{"Key":"\"NucleotideTypes\" (I","Fragments":["would"]},{"Key":"also omit","Fragments":["the"]},{"Key":"the Types/Type","Fragments":["postfix"]},{"Key":"Types/Type postfix","Fragments":["here?!)."]},{"Key":"And personally","Fragments":["I"]},{"Key":"also dislike","Fragments":["the"]},{"Key":"leading underscore","Fragments":["\"_xyz\""]},{"Key":"underscore \"_xyz\"","Fragments":["names,"]},{"Key":"\"_xyz\" names,","Fragments":["but"]},{"Key":"of throwing","Fragments":["an"]},{"Key":"could again","Fragments":["just"]},{"Key":"again just","Fragments":["use"]},{"Key":"use \"require\"?","Fragments":["(together"]},{"Key":"\"require\"? (together","Fragments":["w/,"]},{"Key":"(together w/,","Fragments":["say,"]},{"Key":"w/, say,","Fragments":["\"forall\")."]},{"Key":"say, \"forall\").","Fragments":["This"]},{"Key":"\"forall\"). This","Fragments":["way"]},{"Key":"also separate","Fragments":["the"]},{"Key":"check from","Fragments":["the"]},{"Key":"for another","Fragments":["solution:"]},{"Key":"solution: an","Fragments":["idea"]},{"Key":"To ignore","Fragments":["the"]},{"Key":"difference in","Fragments":["length","running"]},{"Key":"length i","Fragments":["was"]},{"Key":"was able","Fragments":["to"]},{"Key":" Math.min(src.length,dest.length)","Fragments":["and"]},{"Key":"Math.min(src.length,dest.length) and","Fragments":["substring"]},{"Key":"and substring","Fragments":["to"]},{"Key":"ensure they","Fragments":["were"]},{"Key":"they were","Fragments":["always"]},{"Key":"were always","Fragments":["the"]},{"Key":"also wanted","Fragments":["to"]},{"Key":"to gain","Fragments":["some"]},{"Key":"gain some","Fragments":["experience"]},{"Key":"some experience","Fragments":["of"]},{"Key":"experience of","Fragments":["the"]},{"Key":"matching system,","Fragments":["so"]},{"Key":"system, so","Fragments":["further"]},{"Key":"so further","Fragments":["feedback"]},{"Key":"further feedback","Fragments":["here"]},{"Key":"feedback here","Fragments":["would"]},{"Key":"be great.","Fragments":["Especially"]},{"Key":"great. Especially","Fragments":["as"]},{"Key":"Especially as","Fragments":["I"]},{"Key":"be relatively","Fragments":["easy"]},{"Key":"relatively easy","Fragments":["to"]},{"Key":"with another","Fragments":["case"]},{"Key":"case match,","Fragments":["just"]},{"Key":"match, just","Fragments":["not"]},{"Key":"just not","Fragments":["sure"]},{"Key":"than initially,","Fragments":["thanks"]},{"Key":"initially, thanks","Fragments":[";)"]},{"Key":"Fixed wrongly","Fragments":["named"]},{"Key":"wrongly named","Fragments":["converter"]},{"Key":"named converter","Fragments":["method."]},{"Key":"class !","Fragments":["I"]},{"Key":"! I","Fragments":["had"]},{"Key":"To replace","Fragments":["that"]},{"Key":"replace that","Fragments":["long"]},{"Key":"that long","Fragments":["yield"]},{"Key":"long yield","Fragments":["block"]},{"Key":"yield block","Fragments":["you"]},{"Key":"the Char","Fragments":["to"]},{"Key":"to display","Fragments":["for"]},{"Key":"display for","Fragments":["a"]},{"Key":" Inside","Fragments":["that"]},{"Key":"Inside that","Fragments":["helper"]},{"Key":"that helper","Fragments":["function"]},{"Key":"function you","Fragments":["can","could"]},{"Key":"use orElse-getOrElse","Fragments":["instead"]},{"Key":"orElse-getOrElse instead","Fragments":["of"]},{"Key":"of isDefined-get","Fragments":["(-\u003e"]},{"Key":"isDefined-get (-\u003e","Fragments":["stay"]},{"Key":"(-\u003e stay","Fragments":["in"]},{"Key":"stay in","Fragments":["the","the"]},{"Key":"Option monad","Fragments":["as"]},{"Key":"monad as","Fragments":["long"]},{"Key":"As mentioned","Fragments":["already,"]},{"Key":"mentioned already,","Fragments":["Scala"]},{"Key":"already, Scala","Fragments":["has"]},{"Key":"val SquaresOfNaturals:","Fragments":["Stream[Int]","Stream[Int]"]},{"Key":"SquaresOfNaturals: Stream[Int]","Fragments":["=","="]},{"Key":"= Naturals.map(i","Fragments":["=\u003e"]},{"Key":"Naturals.map(i =\u003e","Fragments":["i"]},{"Key":"=\u003e i","Fragments":["*"]},{"Key":"i *","Fragments":["i)"]},{"Key":"* i)","Fragments":["should"]},{"Key":"i) should","Fragments":["be"]},{"Key":" Intention","Fragments":["was"]},{"Key":"Intention was","Fragments":["using"]},{"Key":"using Streams","Fragments":["to"]},{"Key":"Streams to","Fragments":["avoid"]},{"Key":"avoid OutOfMemoryError","Fragments":["for"]},{"Key":"OutOfMemoryError for","Fragments":["big"]},{"Key":"way does","Fragments":["not"]},{"Key":"not work.","Fragments":["Stream"]},{"Key":"work. Stream","Fragments":["keeps"]},{"Key":"Stream keeps","Fragments":["all"]},{"Key":"keeps all","Fragments":["its"]},{"Key":"all its","Fragments":["previous"]},{"Key":"its previous","Fragments":["values"]},{"Key":"previous values","Fragments":["in"]},{"Key":"Also, using","Fragments":["```forall```"]},{"Key":"using ```forall```","Fragments":["for"]},{"Key":"for validation","Fragments":["might"]},{"Key":"validation might","Fragments":["be"]},{"Key":"you expose","Fragments":["db"]},{"Key":"expose db","Fragments":["as"]},{"Key":"as mutable","Fragments":["to"]},{"Key":"mutable to","Fragments":["the"]},{"Key":"outside world,","Fragments":["as"]},{"Key":"world, as","Fragments":["navaro1"]},{"Key":"as navaro1","Fragments":["already"]},{"Key":"navaro1 already","Fragments":["mentioned."]},{"Key":" sorted","Fragments":["looks"]},{"Key":"sorted looks","Fragments":["a"]},{"Key":"too complicated:","Fragments":["there"]},{"Key":"complicated: there","Fragments":["are"]},{"Key":"are sorted","Fragments":["versions"]},{"Key":"of Map","Fragments":["in"]},{"Key":"find your","Fragments":["add"]},{"Key":"your add","Fragments":["method"]},{"Key":"add method","Fragments":["very"]},{"Key":"method very","Fragments":["concise"]},{"Key":"access db","Fragments":["from"]},{"Key":"db from","Fragments":["anywhere"]},{"Key":"from anywhere","Fragments":["outside"]},{"Key":"anywhere outside","Fragments":["of"]},{"Key":"and change","Fragments":["as"]},{"Key":"change as","Fragments":["I"]},{"Key":" Completed","Fragments":["this"]},{"Key":"Completed this","Fragments":["two"]},{"Key":"this two","Fragments":["different"]},{"Key":"ways, not","Fragments":["very"]},{"Key":"with either","Fragments":["one."]},{"Key":"one, was","Fragments":["by"]},{"Key":"was by","Fragments":["transforming"]},{"Key":"by transforming","Fragments":["the"]},{"Key":"input first,","Fragments":["eliminating"]},{"Key":"first, eliminating","Fragments":["non-valid"]},{"Key":"eliminating non-valid","Fragments":["characters"]},{"Key":"non-valid characters","Fragments":["and"]},{"Key":"characters and","Fragments":["then"]},{"Key":"then simply","Fragments":["splitting"]},{"Key":"simply splitting","Fragments":["by"]},{"Key":"by white","Fragments":["spaces."]},{"Key":"Also, one","Fragments":["of"]},{"Key":"the nicest","Fragments":["things"]},{"Key":"nicest things","Fragments":["of"]},{"Key":"things of","Fragments":["Scala"]},{"Key":"it provides","Fragments":["abstractions"]},{"Key":"provides abstractions","Fragments":["so"]},{"Key":"abstractions so","Fragments":["you"]},{"Key":"the content","Fragments":["of"]},{"Key":"content of","Fragments":["your"]},{"Key":"your data","Fragments":["structures"]},{"Key":"structures manually,","Fragments":["but"]},{"Key":"manually, but","Fragments":["only"]},{"Key":"but only","Fragments":["by"]},{"Key":"only by","Fragments":["providing"]},{"Key":"by providing","Fragments":["your"]},{"Key":"providing your","Fragments":["transformation"]},{"Key":"your transformation","Fragments":["criteria."]},{"Key":"transformation criteria.","Fragments":["Have"]},{"Key":"criteria. Have","Fragments":["you"]},{"Key":"This fails","Fragments":["the"]},{"Key":"final test","Fragments":["\"allow"]},{"Key":"test \"allow","Fragments":["apostrophes\"."]},{"Key":"\"allow apostrophes\".","Fragments":["Using"]},{"Key":"apostrophes\". Using","Fragments":["regexr.com"]},{"Key":"Using regexr.com","Fragments":["I've"]},{"Key":"regexr.com I've","Fragments":["found"]},{"Key":"regex that","Fragments":["should"]},{"Key":"should match","Fragments":["the"]},{"Key":"split I","Fragments":["just"]},{"Key":"just can't","Fragments":["get"]},{"Key":"can't get","Fragments":["it","it"]},{"Key":"Any hints","Fragments":["\u0026"]},{"Key":"hints \u0026","Fragments":["tips"]},{"Key":"\u0026 tips","Fragments":["on"]},{"Key":"than welcome.","Fragments":["And"]},{"Key":"welcome. And","Fragments":["on"]},{"Key":"And on","Fragments":["the"]},{"Key":"general, a","Fragments":["foreach"]},{"Key":"a foreach","Fragments":["is"]},{"Key":"foreach is","Fragments":["the"]},{"Key":"most 'functional'","Fragments":["I've"]},{"Key":"'functional' I've","Fragments":["gone"]},{"Key":"I've gone","Fragments":["here"]},{"Key":"gone here","Fragments":["which"]},{"Key":"here which","Fragments":["is"]},{"Key":"allow ``|``","Fragments":["as"]},{"Key":"``|`` as","Fragments":["a"]},{"Key":"a word","Fragments":["character?"]},{"Key":"word character?","Fragments":["There"]},{"Key":"character? There","Fragments":["is"]},{"Key":"a library","Fragments":["function"]},{"Key":"library function","Fragments":["for"]},{"Key":"for ``w","Fragments":["=\u003e"]},{"Key":"``w =\u003e","Fragments":["w``"]},{"Key":"=\u003e w``","Fragments":["pattern:"]},{"Key":"w`` pattern:","Fragments":["``identity``."]},{"Key":"of square","Fragments":["to"]},{"Key":"be \"BigInt\"","Fragments":["so"]},{"Key":"\"BigInt\" so","Fragments":["you"]},{"Key":"a distinction","Fragments":["between"]},{"Key":"distinction between","Fragments":["ints,"]},{"Key":"between ints,","Fragments":["longs"]},{"Key":"ints, longs","Fragments":["or"]},{"Key":"longs or","Fragments":["BigInts."]},{"Key":" there","Fragments":["is","is","is","should","is","is","is"]},{"Key":"no global","Fragments":["cache"]},{"Key":"global cache","Fragments":["for"]},{"Key":"cache for","Fragments":["all","efficiency."]},{"Key":"all lazy","Fragments":["vals"]},{"Key":"the reasons","Fragments":["why"]},{"Key":"reasons why","Fragments":["I"]},{"Key":"- wordCount","Fragments":["doesn't"]},{"Key":"wordCount doesn't","Fragments":["change"]},{"Key":"change anymore","Fragments":["for"]},{"Key":"anymore for","Fragments":["any"]},{"Key":"any instance","Fragments":["of"]},{"Key":"of Phrase","Fragments":["once"]},{"Key":"Phrase once","Fragments":["it"]},{"Key":"once it","Fragments":["has","is","is","is"]},{"Key":"been calculated,","Fragments":["so"]},{"Key":"calculated, so","Fragments":["make"]},{"Key":"so make","Fragments":["it"]},{"Key":"do any","Fragments":["heavy"]},{"Key":"any heavy","Fragments":["work"]},{"Key":"the constructor,","Fragments":["so"]},{"Key":"constructor, so","Fragments":["declare"]},{"Key":"so declare","Fragments":["it"]},{"Key":"understand lazy","Fragments":["val"]},{"Key":"val will","Fragments":["postpone"]},{"Key":"will postpone","Fragments":["the"]},{"Key":"postpone the","Fragments":["function"]},{"Key":"function execution","Fragments":["until"]},{"Key":"execution until","Fragments":["the"]},{"Key":"the wordCount","Fragments":["is"]},{"Key":"is used,","Fragments":["but"]},{"Key":"used, but","Fragments":["is"]},{"Key":"also \"cached\"?","Fragments":["it"]},{"Key":"\"cached\"? it","Fragments":["is,"]},{"Key":"it is,","Fragments":["right?"]},{"Key":"is, right?","Fragments":["so"]},{"Key":"right? so","Fragments":["for"]},{"Key":"each constructed","Fragments":["Phase"]},{"Key":"constructed Phase","Fragments":["it"]},{"Key":"Phase it","Fragments":["will"]},{"Key":"will call","Fragments":["wordCount"]},{"Key":"call wordCount","Fragments":["only"]},{"Key":"wordCount only","Fragments":["when"]},{"Key":"only when","Fragments":["I"]},{"Key":"and store\u0026return","Fragments":["each"]},{"Key":"store\u0026return each","Fragments":["next"]},{"Key":"each next","Fragments":["call."]},{"Key":"the Phrases","Fragments":["with"]},{"Key":"Phrases with","Fragments":["same"]},{"Key":"with same","Fragments":["String","name"]},{"Key":"String share","Fragments":["wordCount"]},{"Key":"share wordCount","Fragments":[":)))"]},{"Key":"and concise,","Fragments":["although"]},{"Key":"\"return\" keywords","Fragments":["when"]},{"Key":"keywords when","Fragments":["writing"]},{"Key":"when writing","Fragments":["Scala"]},{"Key":"writing Scala","Fragments":["functions."]},{"Key":"btw, Scala","Fragments":["is"]},{"Key":"cannot just","Fragments":["simply"]},{"Key":"just simply","Fragments":["remove"]},{"Key":"simply remove","Fragments":["all"]},{"Key":"all returns","Fragments":["here."]},{"Key":" Instead,","Fragments":["have"]},{"Key":"Instead, have","Fragments":["the"]},{"Key":"body as","Fragments":["a"]},{"Key":"if-else if-else.","Fragments":["Then"]},{"Key":"if-else. Then","Fragments":["you"]},{"Key":"many if-else","Fragments":["if's,","clauses:"]},{"Key":"if-else if's,","Fragments":["well,"]},{"Key":"if's, well,","Fragments":["then"]},{"Key":"well, then","Fragments":["why"]},{"Key":"pattern matching?","Fragments":[":-)"]},{"Key":" yes","Fragments":["pls,"]},{"Key":"yes pls,","Fragments":["no"]},{"Key":"pls, no","Fragments":["\"return\""]},{"Key":"of \"filter\":","Fragments":["look"]},{"Key":"\"filter\": look","Fragments":["at"]},{"Key":"at functions","Fragments":["\"forall\"","\"forall\""]},{"Key":"functions \"forall\"","Fragments":["and","and"]},{"Key":"\"forall\" and","Fragments":["\"exists\".","\"exists\"."]},{"Key":"using small","Fragments":["private"]},{"Key":"private predicate","Fragments":["functions"]},{"Key":"and my","Fragments":["rule"]},{"Key":"my rule","Fragments":["of"]},{"Key":"of thumb:","Fragments":["if","If"]},{"Key":"thumb: if","Fragments":["it"]},{"Key":"if-else then","Fragments":["consider"]},{"Key":"then consider","Fragments":["using"]},{"Key":"matching regular","Fragments":["expressions"]},{"Key":"expressions come","Fragments":["to"]},{"Key":"to mind","Fragments":["(just"]},{"Key":"mind (just","Fragments":["to"]},{"Key":"(just to","Fragments":["explore"]},{"Key":"explore other","Fragments":["possible"]},{"Key":"other possible","Fragments":["solutions).","solutions:"]},{"Key":"With this","Fragments":["solution"]},{"Key":"solution the","Fragments":["'knowledge'"]},{"Key":"correct dna","Fragments":["nucleotides"]},{"Key":"dna nucleotides","Fragments":["are,"]},{"Key":"nucleotides are,","Fragments":["is"]},{"Key":"are, is","Fragments":["repeated"]},{"Key":"is repeated","Fragments":["three"]},{"Key":"repeated three","Fragments":["times,"]},{"Key":"three times,","Fragments":["can"]},{"Key":"times, can","Fragments":["you"]},{"Key":"once. Furthermore","Fragments":["Scala"]},{"Key":"Furthermore Scala","Fragments":["provides"]},{"Key":"argument validation","Fragments":["more"]},{"Key":"validation more","Fragments":["concise."]},{"Key":"I'd break","Fragments":["out"]},{"Key":"the checksum","Fragments":["function"]},{"Key":"checksum function","Fragments":["as"]},{"Key":"a `private`","Fragments":["function"]},{"Key":"`private` function","Fragments":["and"]},{"Key":"then make","Fragments":["the"]},{"Key":"value `checksum(word)`","Fragments":["a"]},{"Key":"`checksum(word)` a","Fragments":["`private"]},{"Key":"a `private","Fragments":["val`"]},{"Key":"`private val`","Fragments":["so"]},{"Key":"val` so","Fragments":["that"]},{"Key":"keep calling","Fragments":["it"]},{"Key":"calling it","Fragments":["each","each"]},{"Key":"you loop","Fragments":["through"]},{"Key":"through for","Fragments":["`filter`."]},{"Key":"for `filter`.","Fragments":["Also,"]},{"Key":"`filter`. Also,","Fragments":["things"]},{"Key":"Also, things","Fragments":["might"]},{"Key":"things might","Fragments":["be"]},{"Key":"be clearer","Fragments":["if"]},{"Key":"clearer if","Fragments":["you"]},{"Key":"code inside","Fragments":["the"]},{"Key":"was well","Fragments":["named"]},{"Key":"well named","Fragments":["(isAnagram(),","(btw,"]},{"Key":"named (isAnagram(),","Fragments":["for"]},{"Key":"(isAnagram(), for","Fragments":["instance)."]},{"Key":"first pass","Fragments":["getting"]},{"Key":"pass getting","Fragments":["things"]},{"Key":"getting things","Fragments":["to"]},{"Key":"to compile","Fragments":["and","without."]},{"Key":"and pass","Fragments":["the"]},{"Key":"seems overly","Fragments":["verbose,"]},{"Key":"overly verbose,","Fragments":["but"]},{"Key":"but definitely","Fragments":["solid"]},{"Key":"definitely solid","Fragments":["communication"]},{"Key":"solid communication","Fragments":["through"]},{"Key":"communication through","Fragments":["code,"]},{"Key":"through code,","Fragments":["excellent"]},{"Key":"code, excellent","Fragments":["use"]},{"Key":"excellent use","Fragments":["of"]},{"Key":"system to","Fragments":["document"]},{"Key":"to document","Fragments":["the"]},{"Key":"document the","Fragments":["code."]},{"Key":"use ```equalsIgnoreCase```","Fragments":["string"]},{"Key":"```equalsIgnoreCase``` string","Fragments":["method"]},{"Key":"method instead","Fragments":["of"]},{"Key":"using ``foldLeft``","Fragments":["with"]},{"Key":"``foldLeft`` with","Fragments":["``Map[String,"]},{"Key":"with ``Map[String,","Fragments":["Int]()``"]},{"Key":"``Map[String, Int]()``","Fragments":["as"]},{"Key":"Int]()`` as","Fragments":["the"]},{"Key":"the accumulator","Fragments":["on"]},{"Key":"accumulator on","Fragments":["the"]},{"Key":"of parsed","Fragments":["words."]},{"Key":"the `asDigit`","Fragments":["method"]},{"Key":"`asDigit` method","Fragments":["on"]},{"Key":"on `Char`,","Fragments":["which"]},{"Key":"`Char`, which","Fragments":["is"]},{"Key":"bit cleaner","Fragments":["than"]},{"Key":"I share","Fragments":["your"]},{"Key":"share your","Fragments":["sentiments"]},{"Key":"your sentiments","Fragments":["about"]},{"Key":"sentiments about","Fragments":["the"]},{"Key":"odd sentinel","Fragments":["value."]},{"Key":"Introduced a","Fragments":["query"]},{"Key":"a query","Fragments":["class"]},{"Key":"query class","Fragments":["that"]},{"Key":"some descriptions","Fragments":["for"]},{"Key":"descriptions for","Fragments":["what"]},{"Key":"what Bob","Fragments":["responds","is"]},{"Key":"Bob responds","Fragments":["to."]},{"Key":"Don't realy","Fragments":["like"]},{"Key":"realy like","Fragments":["the","how"]},{"Key":"new Query(s)","Fragments":["part."]},{"Key":"use `{","Fragments":["case"]},{"Key":"case (a,b)","Fragments":["=\u003e"]},{"Key":"b }`","Fragments":["instead"]},{"Key":"like `p","Fragments":["=\u003e"]},{"Key":"feedback. True","Fragments":["enough"]},{"Key":"True enough","Fragments":["on"]},{"Key":"enough on","Fragments":["the"]},{"Key":"statement -","Fragments":["I"]},{"Key":"was my","Fragments":["thought","best"]},{"Key":"my thought","Fragments":["process"]},{"Key":"thought process","Fragments":["at"]},{"Key":"process at","Fragments":["the"]},{"Key":"still trying","Fragments":["to"]},{"Key":"groupBy -","Fragments":["though"]},{"Key":"- though","Fragments":["it"]},{"Key":"optimal method","Fragments":["to"]},{"Key":"Scala. I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["it"]},{"Key":" Awesome!","Fragments":["I"]},{"Key":"Awesome! I","Fragments":["was"]},{"Key":"an example","Fragments":["of"]},{"Key":"a foldLeft","Fragments":["solution."]},{"Key":"small nitpick.","Fragments":["Generally"]},{"Key":"nitpick. Generally","Fragments":["on"]},{"Key":"Generally on","Fragments":["an"]},{"Key":"if statement,","Fragments":["I"]},{"Key":"statement, I","Fragments":["tend"]},{"Key":"the positive","Fragments":["branch"]},{"Key":"positive branch","Fragments":["at"]},{"Key":"branch at","Fragments":["the"]},{"Key":"\"if\" branch","Fragments":["instead"]},{"Key":"branch instead","Fragments":["of"]},{"Key":"the \"else\"","Fragments":["one(If"]},{"Key":"\"else\" one(If","Fragments":["that"]},{"Key":"one(If that","Fragments":["makes"]},{"Key":"makes any","Fragments":["sense...)."]},{"Key":"if (!containsWord)","Fragments":["\"buuu\""]},{"Key":"(!containsWord) \"buuu\"","Fragments":["else"]},{"Key":"\"buuu\" else","Fragments":["\"yeyy\""]},{"Key":"if (containsWord)","Fragments":["\"yeyy\""]},{"Key":"(containsWord) \"yeyy\"","Fragments":["else"]},{"Key":"\"yeyy\" else","Fragments":["\"buuu\""]},{"Key":"Also can","Fragments":["you"]},{"Key":"why did","Fragments":["you"]},{"Key":"foldLeft instead","Fragments":["of"]},{"Key":"but unnecessarly","Fragments":["long"]},{"Key":"unnecessarly long","Fragments":["-"]},{"Key":"long -","Fragments":["classes"]},{"Key":"- classes","Fragments":["and"]},{"Key":"matching not","Fragments":["need"]},{"Key":"something simple","Fragments":["ifs"]},{"Key":"simple ifs","Fragments":["could"]},{"Key":"ifs could","Fragments":["handle"]},{"Key":"After thinking","Fragments":["about"]},{"Key":"about why","Fragments":["I"]},{"Key":"was returning","Fragments":["the"]},{"Key":"response from","Fragments":["object"]},{"Key":"from object","Fragments":["I"]},{"Key":"object I","Fragments":["felt"]},{"Key":"felt it","Fragments":["didn't"]},{"Key":"didn't make","Fragments":["as"]},{"Key":"make as","Fragments":["much"]},{"Key":"much sense.","Fragments":["It"]},{"Key":"sense. It","Fragments":["would"]},{"Key":"would force","Fragments":["someone"]},{"Key":"force someone","Fragments":["reviewing"]},{"Key":"someone reviewing","Fragments":["the"]},{"Key":"reviewing the","Fragments":["code"]},{"Key":"response was.","Fragments":["It"]},{"Key":"was. It","Fragments":["also"]},{"Key":"also duplicated","Fragments":["the"]},{"Key":"duplicated the","Fragments":["use"]},{"Key":"the m","Fragments":["variable."]},{"Key":"m variable.","Fragments":["This"]},{"Key":"variable. This","Fragments":["version"]},{"Key":"Ignore this","Fragments":["one","solution,"]},{"Key":"one -","Fragments":["submitted","named"]},{"Key":"- submitted","Fragments":["by"]},{"Key":"submitted by","Fragments":["mistake!"]},{"Key":"Thanks! It's","Fragments":["not"]},{"Key":"not every","Fragments":["day"]},{"Key":"day I","Fragments":["get"]},{"Key":"a nit","Fragments":["in"]},{"Key":"nit in","Fragments":["scala!"]},{"Key":"in scala!","Fragments":["I"]},{"Key":"scala! I","Fragments":["appreciate"]},{"Key":"number.take(3) seems","Fragments":["more"]},{"Key":"logical than","Fragments":["number.dropRight(7)"]},{"Key":"scala it","Fragments":["is"]},{"Key":"not recommended","Fragments":["to"]},{"Key":"recommended to","Fragments":["use"]},{"Key":"love how","Fragments":["the"]},{"Key":"sorted map","Fragments":["is"]},{"Key":"calculated from","Fragments":["the"]},{"Key":"existing map.","Fragments":["Very"]},{"Key":"map. Very","Fragments":["elegant."]},{"Key":"for advices,","Fragments":["@maxine."]},{"Key":"advices, @maxine.","Fragments":["Think"]},{"Key":"@maxine. Think","Fragments":["it's"]},{"Key":"Think it's","Fragments":["cleaner"]},{"Key":"it's cleaner","Fragments":["now."]},{"Key":" very","Fragments":["compact."]},{"Key":"move \"empty\"","Fragments":["to"]},{"Key":"\"empty\" to","Fragments":["the"]},{"Key":"(and maybe","Fragments":["give"]},{"Key":"maybe give","Fragments":["it"]},{"Key":"better name)","Fragments":["as","directly?"]},{"Key":"name) as","Fragments":["it"]},{"Key":"Removed semicolon","Fragments":["and"]},{"Key":"of monkey","Fragments":["patching"]},{"Key":"monkey patching","Fragments":["-"]},{"Key":"patching -","Fragments":["private"]},{"Key":"- private","Fragments":["helper"]},{"Key":"take it","Fragments":["a"]},{"Key":"a step","Fragments":["further"]},{"Key":"step further","Fragments":["and"]},{"Key":"further and","Fragments":["also"]},{"Key":"just define","Fragments":["one","translate"]},{"Key":"define one","Fragments":["private"]},{"Key":"one private","Fragments":["helper"]},{"Key":"helper to","Fragments":["reduce"]},{"Key":" ```unapply```","Fragments":["is"]},{"Key":"```unapply``` is","Fragments":["nice,"]},{"Key":"it b/c","Fragments":["you"]},{"Key":"can. :-)","Fragments":["A"]},{"Key":"function returning","Fragments":["a","an"]},{"Key":"Boolean (and","Fragments":["then"]},{"Key":"(and then","Fragments":["perhaps"]},{"Key":"then perhaps","Fragments":["just"]},{"Key":"matching) is","Fragments":["easier"]},{"Key":"simplify to","Fragments":["```(_.isDigit)```."]},{"Key":"for final","Fragments":["polishing"]},{"Key":"final polishing","Fragments":["you"]},{"Key":"polishing you","Fragments":["might"]},{"Key":"number (for","Fragments":["readability"]},{"Key":"(for readability","Fragments":["and"]},{"Key":"and b/c","Fragments":["that"]},{"Key":"b/c that","Fragments":["is"]},{"Key":"a sense","Fragments":["the"]},{"Key":"sense the","Fragments":["main"]},{"Key":"main operation","Fragments":["in"]},{"Key":"operation in","Fragments":["this"]},{"Key":"this exercise).","Fragments":[":-)"]},{"Key":"and -","Fragments":["I"]},{"Key":"spotted another","Fragments":["Java-semicolon!"]},{"Key":"another Java-semicolon!","Fragments":[";-)"]},{"Key":" Ok.","Fragments":["Got"]},{"Key":"Ok. Got","Fragments":["it"]},{"Key":" Explicit","Fragments":["IllegalArgumentException"]},{"Key":"Explicit IllegalArgumentException","Fragments":["routine"]},{"Key":"IllegalArgumentException routine","Fragments":["can"]},{"Key":"routine can","Fragments":["be"]},{"Key":"by require","Fragments":["function:"]},{"Key":" require(h1.length","Fragments":["=="]},{"Key":"require(h1.length ==","Fragments":["h2.length)"]},{"Key":"== h2.length)","Fragments":["will"]},{"Key":"h2.length) will","Fragments":["throw"]},{"Key":"IllegalArgumentException exception","Fragments":["if"]},{"Key":"your `sorted`","Fragments":["method."]},{"Key":"`sorted` method.","Fragments":["Mine"]},{"Key":"method. Mine","Fragments":["is"]},{"Key":"Mine is","Fragments":["way","a"]},{"Key":"is way","Fragments":["too"]},{"Key":"too java-like.","Fragments":["Am"]},{"Key":"java-like. Am","Fragments":["going"]},{"Key":"Am going","Fragments":["to"]},{"Key":"to re-do","Fragments":["it"]},{"Key":"re-do it","Fragments":["now."]},{"Key":"feedback. It's","Fragments":["my"]},{"Key":"It's my","Fragments":["first","first"]},{"Key":"time writing","Fragments":["Scala,"]},{"Key":"writing Scala,","Fragments":["I"]},{"Key":"learn the","Fragments":["conventions"]},{"Key":"the conventions","Fragments":["or","are,"]},{"Key":"conventions or","Fragments":["install"]},{"Key":"or install","Fragments":["a"]},{"Key":"install a","Fragments":["better"]},{"Key":"better linter","Fragments":[";)"]},{"Key":"I've implemented","Fragments":["your"]},{"Key":"implemented your","Fragments":["suggestions"]},{"Key":"and submitted","Fragments":["another","again."]},{"Key":"Your regexes","Fragments":["look"]},{"Key":"regexes look","Fragments":["a"]},{"Key":"bit ad-hoc,","Fragments":["tailored"]},{"Key":"ad-hoc, tailored","Fragments":["for"]},{"Key":"tailored for","Fragments":["the"]},{"Key":"cases and","Fragments":["not","still"]},{"Key":"very well","Fragments":["named","here."]},{"Key":"named (btw,","Fragments":["Scala"]},{"Key":"(btw, Scala","Fragments":["convention"]},{"Key":"camel-case instead","Fragments":["of"]},{"Key":"of underscores).","Fragments":["And"]},{"Key":"underscores). And","Fragments":["as"]},{"Key":"constants you","Fragments":["might"]},{"Key":"object (so","Fragments":["that"]},{"Key":"(so that","Fragments":["they"]},{"Key":"not instantiated","Fragments":["again"]},{"Key":"instantiated again","Fragments":["for"]},{"Key":"every class","Fragments":["instance)."]},{"Key":"need \"(_*)\".","Fragments":["Why"]},{"Key":"\"(_*)\". Why","Fragments":["not"]},{"Key":"type restriction","Fragments":["\":"]},{"Key":"restriction \":","Fragments":["String\""]},{"Key":"\": String\"","Fragments":["in"]},{"Key":"String\" in","Fragments":["your"]},{"Key":"case-clauses is","Fragments":["redundant"]},{"Key":"redundant -","Fragments":["what"]},{"Key":"- what","Fragments":["else"]},{"Key":"what else","Fragments":["than"]},{"Key":"else than","Fragments":["a"]},{"Key":"String could","Fragments":["it"]},{"Key":"Use String's","Fragments":["isEmpty"]},{"Key":"String's isEmpty","Fragments":["function,"]},{"Key":"isEmpty function,","Fragments":["that"]},{"Key":"function, that","Fragments":["makes"]},{"Key":"think less","Fragments":["about"]},{"Key":"less about","Fragments":["your"]},{"Key":"first case-clause.","Fragments":[":-)"]},{"Key":"variable as","Fragments":["in"]},{"Key":"last case-clause","Fragments":["use"]},{"Key":"case-clause use","Fragments":["an"]},{"Key":" i","Fragments":["like"]},{"Key":"regex fan","Fragments":["I"]},{"Key":"fan I","Fragments":["suppose."]},{"Key":"are your","Fragments":["thing,"]},{"Key":"your thing,","Fragments":["Scala"]},{"Key":"thing, Scala","Fragments":["has"]},{"Key":"has very","Fragments":["cool"]},{"Key":"very cool","Fragments":["pattern"]},{"Key":"cool pattern","Fragments":["matching"]},{"Key":"matching support","Fragments":["for"]},{"Key":"support for","Fragments":["you:"]},{"Key":"object DummyObject","Fragments":["{"]},{"Key":"= \".+\\?$\"r","Fragments":["//"]},{"Key":"\".+\\?$\"r //","Fragments":["notice"]},{"Key":"// notice","Fragments":["the"]},{"Key":"notice the","Fragments":["'r'?"]},{"Key":"def dummyFunction(s:String)","Fragments":["="]},{"Key":"dummyFunction(s:String) =","Fragments":["s.trim"]},{"Key":"= s.trim","Fragments":["match"]},{"Key":"s.trim match","Fragments":["{"]},{"Key":"case Question(_)","Fragments":["=\u003e"]},{"Key":"Question(_) =\u003e","Fragments":["\"Sure.\""]},{"Key":"In any","Fragments":["case"]},{"Key":"make regexes","Fragments":["class"]},{"Key":"regexes class","Fragments":["members"]},{"Key":"class members","Fragments":["so"]},{"Key":"members so","Fragments":["they"]},{"Key":"the uppercase","Fragments":["will"]},{"Key":"uppercase will","Fragments":["not"]},{"Key":"numbers test,","Fragments":["I"]},{"Key":"test, I","Fragments":["had"]},{"Key":"that but","Fragments":["I"]},{"Key":"it rather","Fragments":["ugly."]},{"Key":"rather ugly.","Fragments":["Depending"]},{"Key":"ugly. Depending","Fragments":["on"]},{"Key":"Depending on","Fragments":["the"]},{"Key":"actual code","Fragments":["situation"]},{"Key":"code situation","Fragments":["I"]},{"Key":"situation I","Fragments":["might"]},{"Key":"also break","Fragments":["the"]},{"Key":"matching into","Fragments":["their"]},{"Key":"own functions,","Fragments":["i.e."]},{"Key":"functions, i.e.","Fragments":["isShouting,"]},{"Key":"i.e. isShouting,","Fragments":["isQuestion."]},{"Key":" please","Fragments":["see"]},{"Key":"see previous","Fragments":["iteration"]},{"Key":"for comments","Fragments":["regarding"]},{"Key":"comments regarding","Fragments":["why"]},{"Key":"regarding why","Fragments":["I"]},{"Key":"chose that","Fragments":["functional"]},{"Key":"that functional","Fragments":["style."]},{"Key":"Just moved","Fragments":["stuff"]},{"Key":"moved stuff","Fragments":["to"]},{"Key":"to companion","Fragments":["object"]},{"Key":"make `RuleMaker`","Fragments":["extend"]},{"Key":"`RuleMaker` extend","Fragments":["`AnyVal`"]},{"Key":"`AnyVal` (runtime","Fragments":["performance)"]},{"Key":"(runtime performance)","Fragments":["and"]},{"Key":"performance) and","Fragments":["for"]},{"Key":"for cleaner","Fragments":["class"]},{"Key":"cleaner class","Fragments":["code"]},{"Key":"class code","Fragments":["in"]},{"Key":"Looking at","Fragments":["the"]},{"Key":"of `RuleMaker`","Fragments":["works"]},{"Key":"`RuleMaker` works","Fragments":["here"]},{"Key":"works here","Fragments":["but"]},{"Key":"actually dangerous.","Fragments":["I'll"]},{"Key":"dangerous. I'll","Fragments":["fix"]},{"Key":"fix that","Fragments":["in","problem"]},{"Key":"next iteration","Fragments":["(if"]},{"Key":"iteration (if","Fragments":["there"]},{"Key":"(if there","Fragments":["is"]},{"Key":"any :)","Fragments":[")"]},{"Key":"think foldLeft","Fragments":["is"]},{"Key":"better abstraction","Fragments":["for"]},{"Key":"abstraction for","Fragments":["the"]},{"Key":"operation of","Fragments":["transforming"]},{"Key":"of transforming","Fragments":["the"]},{"Key":"the map.","Fragments":["Using"]},{"Key":"map. Using","Fragments":["the"]},{"Key":"for-comprehension it","Fragments":["takes"]},{"Key":"takes the","Fragments":["extra"]},{"Key":"extra step","Fragments":["that"]},{"Key":"step that","Fragments":["fold"]},{"Key":"that fold","Fragments":["wouldn't","based"]},{"Key":"fold wouldn't","Fragments":["so"]},{"Key":"wouldn't so","Fragments":["folding"]},{"Key":"folding is","Fragments":["probably"]},{"Key":"probably faster.","Fragments":["But"]},{"Key":"faster. But","Fragments":["the"]},{"Key":"with fold","Fragments":["takes"]},{"Key":"fold takes","Fragments":["me"]},{"Key":"takes me","Fragments":["longer"]},{"Key":"me longer","Fragments":["to"]},{"Key":"longer to","Fragments":["understand"]},{"Key":"understand than","Fragments":["the"]},{"Key":"the for-comprehension;","Fragments":["perhaps"]},{"Key":"for-comprehension; perhaps","Fragments":["that's"]},{"Key":"perhaps that's","Fragments":["the","just"]},{"Key":"imperative thinking","Fragments":["of"]},{"Key":"brain coming","Fragments":["to"]},{"Key":"coming to","Fragments":["the"]},{"Key":"the fore","Fragments":[":)"]},{"Key":"fore :)","Fragments":["Thanks"]},{"Key":":) Thanks","Fragments":["for"]},{"Key":"however what","Fragments":["about"]},{"Key":"using foldLeft?","Fragments":["I"]},{"Key":"foldLeft? I","Fragments":["used"]},{"Key":"used foldLeft","Fragments":["for","or"]},{"Key":"which one","Fragments":["is"]},{"Key":"is better.","Fragments":["Mine"]},{"Key":"better. Mine","Fragments":["is"]},{"Key":"one-liner but","Fragments":["that's"]},{"Key":"that's not","Fragments":["really","correct."]},{"Key":"measure software","Fragments":["quality"]},{"Key":"software quality","Fragments":[":)"]},{"Key":" simple","Fragments":["String"]},{"Key":"simple String","Fragments":["matching,"]},{"Key":"String matching,","Fragments":["I"]},{"Key":"matching, I","Fragments":["guess"]},{"Key":"guess a","Fragments":["\"nicer\""]},{"Key":"a \"nicer\"","Fragments":["way"]},{"Key":"\"nicer\" way","Fragments":["would"]},{"Key":"all upercase","Fragments":["/"]},{"Key":"upercase /","Fragments":["'!'"]},{"Key":"/ '!'","Fragments":["in"]},{"Key":"'!' in","Fragments":["the"]},{"Key":"end for","Fragments":["the"]},{"Key":"and '?'","Fragments":["for"]},{"Key":"'?' for","Fragments":["the"]},{"Key":"third case","Fragments":["after"]},{"Key":"case after","Fragments":["I"]},{"Key":"trade-offs I","Fragments":["considered"]},{"Key":"considered was","Fragments":["to"]},{"Key":"the getLetters","Fragments":["calls"]},{"Key":"getLetters calls","Fragments":["in"]},{"Key":"calls in","Fragments":["the"]},{"Key":"the isYell","Fragments":["function"]},{"Key":"isYell function","Fragments":["in"]},{"Key":"executed only","Fragments":["once."]},{"Key":"once. However,","Fragments":["for"]},{"Key":"However, for","Fragments":["readability"]},{"Key":"readability purposes","Fragments":["I"]},{"Key":"purposes I","Fragments":["preferred"]},{"Key":"preferred both","Fragments":["function"]},{"Key":"both function","Fragments":["calls."]},{"Key":"When browsing","Fragments":["other"]},{"Key":"browsing other","Fragments":["solutions"]},{"Key":"exercise I","Fragments":["came"]},{"Key":"came upon","Fragments":["one"]},{"Key":"upon one","Fragments":["which"]},{"Key":"used `zip`","Fragments":["and"]},{"Key":"and `count`","Fragments":["much","methods","leads"]},{"Key":"`count` much","Fragments":["like"]},{"Key":"this. What","Fragments":["I"]},{"Key":"it delegates","Fragments":["the"]},{"Key":"delegates the","Fragments":["work"]},{"Key":"work of","Fragments":["counting"]},{"Key":"the nucleic","Fragments":["acids"]},{"Key":"nucleic acids","Fragments":["to"]},{"Key":"acids to","Fragments":["the"]},{"Key":"Scala library","Fragments":["rather"]},{"Key":"library rather","Fragments":["than"]},{"Key":"counting them","Fragments":["oneself"]},{"Key":"them oneself","Fragments":["and"]},{"Key":"oneself and","Fragments":["iterating"]},{"Key":"over them","Fragments":["with"]},{"Key":"loop, much","Fragments":["like"]},{"Key":"I've added","Fragments":["documentation"]},{"Key":"added documentation","Fragments":["for"]},{"Key":"without methods","Fragments":["from"]},{"Key":"methods from","Fragments":["the"]},{"Key":" Triangle","Fragments":["could"]},{"Key":"Triangle could","Fragments":["be"]},{"Key":"case class.","Fragments":["Looks"]},{"Key":"class. Looks","Fragments":["good"]},{"Key":"this complicated","Fragments":["`getTranslation`:"]},{"Key":"complicated `getTranslation`:","Fragments":["why"]},{"Key":"`getTranslation`: why","Fragments":["not"]},{"Key":"use `map`","Fragments":["on"]},{"Key":"of prime","Fragments":["factors"]},{"Key":"use `count","Fragments":[":"]},{"Key":"`count :","Fragments":["(A"]},{"Key":": (A","Fragments":["=\u003e"]},{"Key":"(A =\u003e","Fragments":["Boolean)"]},{"Key":"=\u003e Boolean)","Fragments":["=\u003e"]},{"Key":"Boolean) =\u003e","Fragments":["Int`"]},{"Key":"=\u003e Int`","Fragments":["instead"]},{"Key":"Int` instead","Fragments":["of"]},{"Key":"also rewrite","Fragments":["it"]},{"Key":"a for-comprehension?","Fragments":[";-)"]},{"Key":"use ```.groupBy(_.toLowerCase)```instead","Fragments":["of"]},{"Key":"```.groupBy(_.toLowerCase)```instead of","Fragments":["```.groupBy(w"]},{"Key":"of ```.groupBy(w","Fragments":["=\u003e"]},{"Key":"```.groupBy(w =\u003e","Fragments":["w.toLowerCase())```"]},{"Key":"from @lonnie","Fragments":["."]},{"Key":"@lonnie .","Fragments":["I"]},{"Key":". I","Fragments":["think"]},{"Key":"that's probably","Fragments":["the"]},{"Key":"probably the","Fragments":["best","simplest"]},{"Key":" Idea","Fragments":["for"]},{"Key":"Idea for","Fragments":["name"]},{"Key":"for name","Fragments":["generation:"]},{"Key":"name generation:","Fragments":["the"]},{"Key":"generation: the","Fragments":["requested"]},{"Key":"the requested","Fragments":["regex"]},{"Key":"requested regex","Fragments":["looks"]},{"Key":"regex looks","Fragments":["like"]},{"Key":"a section","Fragments":["from"]},{"Key":"section from","Fragments":["a"]},{"Key":"a standard","Fragments":["UUID.","imperative"]},{"Key":" Currently","Fragments":["skipping"]},{"Key":"Currently skipping","Fragments":["this"]},{"Key":"skipping this","Fragments":["and"]},{"Key":"it later.","Fragments":["Not"]},{"Key":"later. Not","Fragments":["particularly"]},{"Key":"Not particularly","Fragments":["interested"]},{"Key":"particularly interested","Fragments":["in"]},{"Key":"the GregorianCalendar","Fragments":["challenges."]},{"Key":"This conditions:","Fragments":["((c"]},{"Key":"conditions: ((c","Fragments":["!="]},{"Key":"((c !=","Fragments":["'A')\u0026\u0026(c"]},{"Key":"!= 'A')\u0026\u0026(c","Fragments":["!="]},{"Key":"'A')\u0026\u0026(c !=","Fragments":["'T')\u0026\u0026(c"]},{"Key":"!= 'T')\u0026\u0026(c","Fragments":["!="]},{"Key":"'T')\u0026\u0026(c !=","Fragments":["'C')\u0026\u0026(c"]},{"Key":"!= 'C')\u0026\u0026(c","Fragments":["!="]},{"Key":"'C')\u0026\u0026(c !=","Fragments":["'G'))"]},{"Key":" could","Fragments":["be"]},{"Key":"with \"contains\".","Fragments":["Think"]},{"Key":"\"contains\". Think","Fragments":["about"]},{"Key":"about String","Fragments":["as"]},{"Key":"don't get","Fragments":["is","the","into"]},{"Key":"get is","Fragments":["how"]},{"Key":"handles strings","Fragments":["of"]},{"Key":"of differing","Fragments":["lengths?"]},{"Key":"differing lengths?","Fragments":["Does"]},{"Key":"lengths? Does","Fragments":["zip"]},{"Key":"Does zip","Fragments":["throw"]},{"Key":"zip throw","Fragments":["away"]},{"Key":"extra chars","Fragments":["or"]},{"Key":"chars or","Fragments":["does"]},{"Key":"or does","Fragments":["the"]},{"Key":"count handle","Fragments":["that?"]},{"Key":"1. endsWith","Fragments":["\"?\""]},{"Key":"2. (_","Fragments":["isLetter),"]},{"Key":"(_ isLetter),","Fragments":["(_"]},{"Key":"isLetter), (_","Fragments":["isUpper)"]},{"Key":"(_ isUpper)","Fragments":["..."]},{"Key":"3. def","Fragments":["hey:"]},{"Key":"def hey:","Fragments":["String"]},{"Key":"well, you","Fragments":["already"]},{"Key":"already know","Fragments":["my"]},{"Key":"know my","Fragments":["main"]},{"Key":"my main","Fragments":["criticism"]},{"Key":"main criticism","Fragments":["here:"]},{"Key":"criticism here:","Fragments":["no"]},{"Key":"here: no","Fragments":["`var`s,"]},{"Key":"no `var`s,","Fragments":["no"]},{"Key":"`var`s, no","Fragments":["side"]},{"Key":"also line","Fragments":["8"]},{"Key":"already doing","Fragments":["too"]},{"Key":"doing too","Fragments":["much"]},{"Key":"taste -","Fragments":["split"]},{"Key":"- split","Fragments":["it","things"]},{"Key":"it up!","Fragments":["(and"]},{"Key":"up! (and","Fragments":["I"]},{"Key":"guess `toList`","Fragments":["is"]},{"Key":"as Scala","Fragments":["Strings"]},{"Key":"are implictly","Fragments":["already"]},{"Key":"implictly already","Fragments":["a"]},{"Key":"version where","Fragments":["the"]},{"Key":"on letters","Fragments":["is"]},{"Key":"only done","Fragments":["once."]},{"Key":"could rename","Fragments":["your"]},{"Key":"your `n`","Fragments":["variable"]},{"Key":"`n` variable","Fragments":["to"]},{"Key":"variable to","Fragments":["something"]},{"Key":"descriptive like","Fragments":["`digits`"]},{"Key":"like `digits`","Fragments":["or"]},{"Key":"`digits` or","Fragments":["`numbers`?"]},{"Key":"w/ eta-reduction:","Fragments":["instead"]},{"Key":"eta-reduction: instead","Fragments":["of"]},{"Key":"=\u003e scoreLetter(x)```","Fragments":["just"]},{"Key":"scoreLetter(x)``` just","Fragments":["```scoreLetter```."]},{"Key":"returning 0","Fragments":["for"]},{"Key":"0 for","Fragments":["non-letters"]},{"Key":"for non-letters","Fragments":["I"]},{"Key":"non-letters I","Fragments":["would"]},{"Key":"```withDefaultValue``` so","Fragments":["that"]},{"Key":"the toplevel","Fragments":["public"]},{"Key":"toplevel public","Fragments":["function"]},{"Key":"public function","Fragments":["remains"]},{"Key":"function remains","Fragments":["simple."]},{"Key":" Unfortunately,","Fragments":["one"]},{"Key":"Unfortunately, one","Fragments":["must"]},{"Key":"one must","Fragments":["compromise"]},{"Key":"must compromise","Fragments":["between"]},{"Key":"compromise between","Fragments":["the"]},{"Key":"most elegant/simplest","Fragments":["solution"]},{"Key":"elegant/simplest solution","Fragments":["and"]},{"Key":"most performant.","Fragments":["Given"]},{"Key":"performant. Given","Fragments":["that"]},{"Key":"Given that","Fragments":["compilers"]},{"Key":"that compilers","Fragments":["tend"]},{"Key":"compilers tend","Fragments":["to"]},{"Key":"very smart,","Fragments":["I"]},{"Key":"smart, I","Fragments":["would"]},{"Key":"would expect","Fragments":["them"]},{"Key":"expect them","Fragments":["to"]},{"Key":"the optimization","Fragments":["so"]},{"Key":"optimization so","Fragments":["that"]},{"Key":"can remain","Fragments":["as"]},{"Key":" Nice:)","Fragments":["However"]},{"Key":"Nice:) However","Fragments":["you"]},{"Key":"However you","Fragments":["are"]},{"Key":"are unnecessarily","Fragments":["sorting"]},{"Key":"unnecessarily sorting","Fragments":["the"]},{"Key":"original word","Fragments":["every"]},{"Key":"word every","Fragments":["time"]},{"Key":"A smart","Fragments":["compiler"]},{"Key":"smart compiler","Fragments":["should"]},{"Key":"compiler should","Fragments":["be"]},{"Key":"figure this","Fragments":["out"]},{"Key":"this out","Fragments":["and"]},{"Key":"and cash","Fragments":["this"]},{"Key":"cash this","Fragments":["operation,"]},{"Key":"operation, so","Fragments":["I"]},{"Key":"not sort","Fragments":["\"word\""]},{"Key":"sort \"word\"","Fragments":["once"]},{"Key":"\"word\" once","Fragments":["when"]},{"Key":"once when","Fragments":["the","requested."]},{"Key":"is created?","Fragments":["It's"]},{"Key":"created? It's","Fragments":["not"]},{"Key":"if it'll","Fragments":["change"]},{"Key":"it'll change","Fragments":[":)"]},{"Key":"the trimmed","Fragments":["value"]},{"Key":"trimmed value","Fragments":["of"]},{"Key":"input for","Fragments":["all"]},{"Key":"mark should","Fragments":["be"]},{"Key":"good. small","Fragments":["things:"]},{"Key":" remove","Fragments":["the"]},{"Key":"parens for","Fragments":["length"]},{"Key":"for length","Fragments":["everywhere."]},{"Key":"also discuss","Fragments":["code"]},{"Key":"discuss code","Fragments":["style"]},{"Key":"code style","Fragments":["-"]},{"Key":"- when","Fragments":["to"]},{"Key":"use dots","Fragments":["and"]},{"Key":"dots and","Fragments":["parens?"]},{"Key":"can give","Fragments":["the"]},{"Key":"give the","Fragments":["anonymous"]},{"Key":"count a","Fragments":["name"]},{"Key":"also, instead","Fragments":["of"]},{"Key":"of a,b,x","Fragments":["I"]},{"Key":"a,b,x I","Fragments":["would"]},{"Key":"would chose","Fragments":["better"]},{"Key":"chose better","Fragments":["names"]},{"Key":"that describe","Fragments":["what"]},{"Key":"describe what","Fragments":["those","Bob"]},{"Key":"what those","Fragments":["Strings"]},{"Key":"those Strings","Fragments":["\"really\""]},{"Key":"Strings \"really\"","Fragments":["are?!"]},{"Key":" ```foldLeft```","Fragments":["seems","is"]},{"Key":"```foldLeft``` seems","Fragments":["to"]},{"Key":"a kind","Fragments":["of"]},{"Key":"of overkill","Fragments":["here."]},{"Key":"```map``` and","Fragments":["```sum```?","```sum```?"]},{"Key":"First pass","Fragments":["-"]},{"Key":"pass -","Fragments":["only"]},{"Key":"- only","Fragments":["satisfies"]},{"Key":"only satisfies","Fragments":["the"]},{"Key":"satisfies the","Fragments":["first","tests."]},{"Key":"conditions -","Fragments":["submitting"]},{"Key":"- submitting","Fragments":["more"]},{"Key":"submitting more","Fragments":["as"]},{"Key":"more as","Fragments":["a"]},{"Key":"a store","Fragments":["than"]},{"Key":"store than","Fragments":["a"]},{"Key":"a finished","Fragments":["artifact"]},{"Key":"finished artifact","Fragments":["(fingers-crossed"]},{"Key":"artifact (fingers-crossed","Fragments":["I"]},{"Key":"(fingers-crossed I","Fragments":["can"]},{"Key":"can resubmit","Fragments":[":)"]},{"Key":"Set for","Fragments":["nucleoBases?"]},{"Key":" Struggled","Fragments":["building"]},{"Key":"Struggled building","Fragments":["on"]},{"Key":"building on","Fragments":["my"]},{"Key":"1st iteration,","Fragments":["because"]},{"Key":"iteration, because","Fragments":["I"]},{"Key":"string was","Fragments":["empty"]},{"Key":"was empty","Fragments":["of"]},{"Key":"empty of","Fragments":["not."]},{"Key":"of not.","Fragments":["Overcomplicated"]},{"Key":"not. Overcomplicated","Fragments":["the"]},{"Key":"Overcomplicated the","Fragments":["solution."]},{"Key":"solution. This","Fragments":["one"]},{"Key":"Use may","Fragments":["use"]},{"Key":"use `forall`","Fragments":["and"]},{"Key":"`forall` and","Fragments":["`exists`"]},{"Key":"and `exists`","Fragments":["instead"]},{"Key":"`exists` instead","Fragments":["of"]},{"Key":"Your sort","Fragments":["method"]},{"Key":"sort method","Fragments":["is"]},{"Key":"is overkill.","Fragments":["Just"]},{"Key":"overkill. Just","Fragments":["use"]},{"Key":"the `.sorted`","Fragments":["String"]},{"Key":"`.sorted` String","Fragments":["method."]},{"Key":"String method.","Fragments":["Then"]},{"Key":"method. Then","Fragments":["I'd"]},{"Key":"Then I'd","Fragments":["recommend"]},{"Key":"val anagram","Fragments":["=","="]},{"Key":"anagram =","Fragments":["inAnagram","inAnagram.toLowerCase"]},{"Key":" ,","Fragments":["which"]},{"Key":", which","Fragments":["gives"]},{"Key":"which gives","Fragments":["the"]},{"Key":"benefit of","Fragments":["not"]},{"Key":"use `anagram.toLowerCase`","Fragments":["twice"]},{"Key":"`anagram.toLowerCase` twice","Fragments":["and"]},{"Key":"not calling","Fragments":["it"]},{"Key":"you test","Fragments":["in"]},{"Key":"recommend moving","Fragments":["your"]},{"Key":"moving your","Fragments":["`if`"]},{"Key":"your `if`","Fragments":["test"]},{"Key":"`if` test","Fragments":["to"]},{"Key":"also that","Fragments":["rather"]},{"Key":"that rather","Fragments":["than"]},{"Key":"than create","Fragments":["a"]},{"Key":"temporary list","Fragments":["and"]},{"Key":"using `foreach`,","Fragments":["that"]},{"Key":"`foreach`, that","Fragments":["you"]},{"Key":"you familiarize","Fragments":["yourself"]},{"Key":"familiarize yourself","Fragments":["with"]},{"Key":"yourself with","Fragments":["the"]},{"Key":"sequence method","Fragments":["`filter`"]},{"Key":"method `filter`","Fragments":["which"]},{"Key":"`filter` which","Fragments":["will"]},{"Key":"to readabilty","Fragments":["and"]},{"Key":"readabilty and","Fragments":["clarity"]},{"Key":"and clarity","Fragments":["here."]},{"Key":"Interesting. I","Fragments":["used"]},{"Key":"sorted strings","Fragments":["instead"]},{"Key":"strings instead","Fragments":["of"]},{"Key":"map, but","Fragments":["I've"]},{"Key":"of maps","Fragments":["used"]},{"Key":"maps used","Fragments":["for"]},{"Key":"for this.","Fragments":["I'd"]},{"Key":"this. I'd","Fragments":["recommend"]},{"Key":"recommend adding","Fragments":["making"]},{"Key":"adding making","Fragments":["`!sameWord`"]},{"Key":"making `!sameWord`","Fragments":["part"]},{"Key":"`!sameWord` part","Fragments":["of"]},{"Key":"your `isAnagram`","Fragments":["function"]},{"Key":"`isAnagram` function","Fragments":["and"]},{"Key":"using `filter`","Fragments":["instead"]},{"Key":"`filter` instead","Fragments":["of"]},{"Key":"of `for`","Fragments":["with"]},{"Key":"`for` with","Fragments":["a"]},{"Key":"and `yield`.","Fragments":["Still"]},{"Key":"`yield`. Still","Fragments":["nice,"]},{"Key":"Still nice,","Fragments":["though."]},{"Key":"agree on","Fragments":["all"]},{"Key":"your points","Fragments":["and"]},{"Key":"points and","Fragments":["have"]},{"Key":"have submitted","Fragments":["a"]},{"Key":"a 2nd","Fragments":["iteration."]},{"Key":"the `_1`","Fragments":["and"]},{"Key":"and `_2`","Fragments":["methods"]},{"Key":"`_2` methods","Fragments":["(which"]},{"Key":"methods (which","Fragments":["I"]},{"Key":"understand are","Fragments":["rarely"]},{"Key":"are rarely","Fragments":["used)"]},{"Key":"rarely used)","Fragments":["you"]},{"Key":"used) you","Fragments":["could"]},{"Key":"match to","Fragments":["extract"]},{"Key":"the values.","Fragments":["Something"]},{"Key":"values. Something","Fragments":["like"]},{"Key":" (a.toList","Fragments":["zip"]},{"Key":"(a.toList zip","Fragments":["b.toList).count(nonMatching"]},{"Key":"zip b.toList).count(nonMatching","Fragments":["_)"]},{"Key":"b.toList).count(nonMatching _)","Fragments":["count"]},{"Key":"_) count","Fragments":["{"]},{"Key":"There's actually","Fragments":["no"]},{"Key":"actually no","Fragments":["need"]},{"Key":"call `toList`","Fragments":["on","on"]},{"Key":"`toList` on","Fragments":["the","the"]},{"Key":"input strings.","Fragments":["Slightly"]},{"Key":"strings. Slightly","Fragments":["more"]},{"Key":"Slightly more","Fragments":["descriptive"]},{"Key":"names than","Fragments":["`a`"]},{"Key":"than `a`","Fragments":["and"]},{"Key":"`b` could","Fragments":["be"]},{"Key":"You haven't","Fragments":["surrounded"]},{"Key":"haven't surrounded","Fragments":["the"]},{"Key":"surrounded the","Fragments":["body"]},{"Key":"of `nonMatching`","Fragments":["with"]},{"Key":"`nonMatching` with","Fragments":["curly"]},{"Key":"with curly","Fragments":["braces,"]},{"Key":"braces, which","Fragments":["I"]},{"Key":"like -","Fragments":["but"]},{"Key":"have with","Fragments":["`compute`"]},{"Key":"with `compute`","Fragments":["-"]},{"Key":"- any","Fragments":["reason?"]},{"Key":"had this","Fragments":["as"]},{"Key":"a one-liner,","Fragments":["but"]},{"Key":"one-liner, but","Fragments":["ended"]},{"Key":"up defining","Fragments":["`nonMatching`"]},{"Key":"defining `nonMatching`","Fragments":["for"]},{"Key":"`nonMatching` for","Fragments":["better"]},{"Key":"readability. Comments","Fragments":["are"]},{"Key":"Comments are","Fragments":["welcome"]},{"Key":"are welcome","Fragments":["and",":)"]},{"Key":"welcome and","Fragments":["appreciated."]},{"Key":"using `apply`","Fragments":["with"]},{"Key":"`apply` with","Fragments":["`nextInt`"]},{"Key":"with `nextInt`","Fragments":["on"]},{"Key":"`nextInt` on","Fragments":["the"]},{"Key":"the ranges","Fragments":["to","instead"]},{"Key":"ranges to","Fragments":["select"]},{"Key":"to select","Fragments":["a"]},{"Key":"select a","Fragments":["random"]},{"Key":"random character","Fragments":["within"]},{"Key":"character within","Fragments":["each"]},{"Key":"within each","Fragments":["range."]},{"Key":"each range.","Fragments":["I"]},{"Key":"range. I","Fragments":["wound"]},{"Key":"I wound","Fragments":["up"]},{"Key":"using ranges,","Fragments":["too,"]},{"Key":"ranges, too,","Fragments":["but"]},{"Key":"too, but","Fragments":["went"]},{"Key":"but went","Fragments":["about"]},{"Key":"went about","Fragments":["selecting"]},{"Key":"about selecting","Fragments":["from"]},{"Key":"selecting from","Fragments":["them"]},{"Key":"from them","Fragments":["in"]},{"Key":"more roundabout","Fragments":["way."]},{"Key":"to Message","Fragments":["to"]},{"Key":"Message to","Fragments":["abstract"]},{"Key":"to abstract","Fragments":["out"]},{"Key":"abstract out","Fragments":["the"]},{"Key":"tests of","Fragments":["each"]},{"Key":"each input","Fragments":["string."]},{"Key":"input string.","Fragments":["I"]},{"Key":"string. I","Fragments":["also"]},{"Key":"use very","Fragments":["descriptive"]},{"Key":"very descriptive","Fragments":["method"]},{"Key":"descriptive method","Fragments":["names."]},{"Key":"method names.","Fragments":["The"]},{"Key":"The primary","Fragments":["goal"]},{"Key":"primary goal","Fragments":["was"]},{"Key":"business logic","Fragments":["easy"]},{"Key":"logic easy","Fragments":["to"]},{"Key":"By minimal,","Fragments":["I"]},{"Key":"minimal, I","Fragments":["mean"]},{"Key":"mean the","Fragments":["most"]},{"Key":"most stupid","Fragments":["one"]},{"Key":"stupid one","Fragments":[":)"]},{"Key":" Ahahahah,","Fragments":["this"]},{"Key":"Ahahahah, this","Fragments":["one"]},{"Key":"has pretty","Fragments":["limited"]},{"Key":"pretty limited","Fragments":["usages"]},{"Key":"limited usages","Fragments":[")))"]},{"Key":"not minimal","Fragments":["code"]},{"Key":"you write","Fragments":["the"]},{"Key":"the minimal","Fragments":["code"]},{"Key":"minimal code","Fragments":["that"]},{"Key":"that satisfies","Fragments":["the"]},{"Key":"tests. Then","Fragments":["you"]},{"Key":"about refactor","Fragments":["it."]},{"Key":"No its","Fragments":["not"]},{"Key":"its not","Fragments":[":P"]},{"Key":"It's TDD","Fragments":[":)"]},{"Key":"have over-engineered","Fragments":["and"]},{"Key":"over-engineered and","Fragments":["thus"]},{"Key":"thus over-complicated","Fragments":["matters"]},{"Key":"over-complicated matters","Fragments":["by"]},{"Key":"matters by","Fragments":["keeping"]},{"Key":"keeping a","Fragments":["TX"]},{"Key":"a TX","Fragments":["history."]},{"Key":"TX history.","Fragments":["This"]},{"Key":"history. This","Fragments":["is"]},{"Key":"a requirement","Fragments":["in"]},{"Key":"requirement in","Fragments":["the"]},{"Key":"Just keep","Fragments":["the"]},{"Key":"current deposit","Fragments":["amount"]},{"Key":"deposit amount","Fragments":["of"]},{"Key":"account instead","Fragments":["of"]},{"Key":"of `PartialFunction`","Fragments":["and"]},{"Key":"`PartialFunction` and","Fragments":["`collect`!"]},{"Key":"`val aphabet","Fragments":["="]},{"Key":"aphabet =","Fragments":["'a'"]},{"Key":"= 'a'","Fragments":["to"]},{"Key":"not mutating","Fragments":["any"]},{"Key":"mutating any","Fragments":["vars,"]},{"Key":"any vars,","Fragments":["both"]},{"Key":"vars, both","Fragments":["functions"]},{"Key":"both functions","Fragments":["are"]},{"Key":"are pure,","Fragments":["so"]},{"Key":"pure, so","Fragments":["your"]},{"Key":"implementation looks","Fragments":["pretty"]},{"Key":"pretty functional","Fragments":["to"]},{"Key":"functional to","Fragments":["me."]},{"Key":"Using ```return```","Fragments":["is"]},{"Key":"```return``` is","Fragments":["discouraged,"]},{"Key":"is discouraged,","Fragments":["you"]},{"Key":"discouraged, you","Fragments":["could"]},{"Key":"improve it","Fragments":["a"]},{"Key":"bit if","Fragments":["you","you"]},{"Key":"you remove","Fragments":["all","the"]},{"Key":"the ```returns```","Fragments":["and"]},{"Key":"```returns``` and","Fragments":["add"]},{"Key":"an ```else```","Fragments":["for"]},{"Key":"```else``` for","Fragments":["```Whatever```"]},{"Key":"Scala coming","Fragments":["from"]},{"Key":"from Java","Fragments":["and"]},{"Key":"Java and","Fragments":["C#."]},{"Key":"probably way","Fragments":["less"]},{"Key":"way less","Fragments":["functional"]},{"Key":"less functional","Fragments":["and"]},{"Key":"functional and","Fragments":["more"]},{"Key":"imperative than","Fragments":["it"]},{"Key":"Nice how","Fragments":["each"]},{"Key":"how each","Fragments":["operation"]},{"Key":"each operation","Fragments":["is"]},{"Key":"operation is","Fragments":["done","kept"]},{"Key":"done only","Fragments":["once."]},{"Key":"from coding","Fragments":["Java"]},{"Key":"coding Java","Fragments":["in"]},{"Key":"semicolon -","Fragments":["they"]},{"Key":"- they","Fragments":["are"]},{"Key":"scala. You","Fragments":["could"]},{"Key":"also remove","Fragments":["the"]},{"Key":"function (scala","Fragments":["infers"]},{"Key":"(scala infers","Fragments":["the"]},{"Key":"infers the","Fragments":["return"]},{"Key":"return type),","Fragments":["but"]},{"Key":"type), but","Fragments":["I"]},{"Key":"if functions","Fragments":["have"]},{"Key":"an explicit","Fragments":["return"]},{"Key":"explicit return","Fragments":["type."]},{"Key":"way around","Fragments":["the"]},{"Key":"the '''case'''","Fragments":["syntax"]},{"Key":"'''case''' syntax","Fragments":["or"]},{"Key":"or is","Fragments":["this"]},{"Key":"the \"scala\"","Fragments":["way"]},{"Key":"\"scala\" way","Fragments":["to"]},{"Key":" Hey,","Fragments":["if","why"]},{"Key":"Hey, if","Fragments":["the"]},{"Key":"tests pass...","Fragments":[":)"]},{"Key":"Actually this","Fragments":["challenge"]},{"Key":"this challenge","Fragments":["is"]},{"Key":"challenge is","Fragments":["a"]},{"Key":"a particularly","Fragments":["interesting"]},{"Key":"particularly interesting","Fragments":["case"]},{"Key":"interesting case","Fragments":["when"]},{"Key":"to testing.","Fragments":["Randomness"]},{"Key":"testing. Randomness","Fragments":["and"]},{"Key":"Randomness and","Fragments":["testing"]},{"Key":"testing lead","Fragments":["to"]},{"Key":"to potential","Fragments":["errors."]},{"Key":"potential errors.","Fragments":["For"]},{"Key":"errors. For","Fragments":["example,"]},{"Key":"example, about","Fragments":["every"]},{"Key":"about every","Fragments":["26*26=676"]},{"Key":"every 26*26=676","Fragments":["times"]},{"Key":"26*26=676 times","Fragments":["these"]},{"Key":"times these","Fragments":["tests"]},{"Key":"these tests","Fragments":["are"]},{"Key":"are run,","Fragments":["its"]},{"Key":"run, its","Fragments":["going"]},{"Key":"its going","Fragments":["to"]},{"Key":"to happen","Fragments":["to"]},{"Key":"a dupilicate","Fragments":["name."]},{"Key":"dupilicate name.","Fragments":["And"]},{"Key":"name. And","Fragments":["without"]},{"Key":"And without","Fragments":["more"]},{"Key":"without more","Fragments":["information"]},{"Key":"more information","Fragments":["about"]},{"Key":"information about","Fragments":["the"]},{"Key":"the problem,","Fragments":["we"]},{"Key":"problem, we","Fragments":["don't"]},{"Key":"name differing","Fragments":["by"]},{"Key":"differing by","Fragments":["letters"]},{"Key":"by letters","Fragments":["or"]},{"Key":"by numbers","Fragments":["mean"]},{"Key":"numbers mean","Fragments":["different"]},{"Key":"mean different","Fragments":["things."]},{"Key":"different things.","Fragments":["My"]},{"Key":"things. My","Fragments":["solution"]},{"Key":"be terrible","Fragments":["or"]},{"Key":"terrible or","Fragments":["in"]},{"Key":"or in","Fragments":["fact"]},{"Key":"The numeric","Fragments":["part"]},{"Key":"numeric part","Fragments":["of"]},{"Key":"string must","Fragments":["be"]},{"Key":"be randomly","Fragments":["generated."]},{"Key":"quite good","Fragments":["because"]},{"Key":"good because","Fragments":["it"]},{"Key":"pretty short","Fragments":["compared"]},{"Key":"short compared","Fragments":["to"]},{"Key":"to others","Fragments":["around"]},{"Key":"others around","Fragments":["here."]},{"Key":"around here.","Fragments":["One"]},{"Key":"here. One","Fragments":["tip"]},{"Key":"One tip","Fragments":["from"]},{"Key":"tip from","Fragments":["me"]},{"Key":"from me","Fragments":["would"]},{"Key":"me would","Fragments":["be"]},{"Key":"have another","Fragments":["look","such"]},{"Key":"another look","Fragments":["at"]},{"Key":"on `Strings`","Fragments":["in"]},{"Key":"`Strings` in","Fragments":["Scala."]},{"Key":"Scala. e.g.","Fragments":["you"]},{"Key":"e.g. you","Fragments":["can"]},{"Key":"shorten `sentence.dropWhile(ch","Fragments":["=\u003e"]},{"Key":"`sentence.dropWhile(ch =\u003e","Fragments":["!Character.isAlphabetic(ch)).length\u003e0`"]},{"Key":"=\u003e !Character.isAlphabetic(ch)).length\u003e0`","Fragments":["by"]},{"Key":"!Character.isAlphabetic(ch)).length\u003e0` by","Fragments":["using"]},{"Key":"the `exists(p:","Fragments":["(Char)"]},{"Key":"`exists(p: (Char)","Fragments":["⇒"]},{"Key":"(Char) ⇒","Fragments":["Boolean)`"]},{"Key":"⇒ Boolean)`","Fragments":["method."]},{"Key":"you by","Fragments":["any"]},{"Key":"by any","Fragments":["chance"]},{"Key":"any chance","Fragments":["coming"]},{"Key":"chance coming","Fragments":["from"]},{"Key":"a Python","Fragments":["background?"]},{"Key":"Python background?","Fragments":["Anyways,"]},{"Key":"background? Anyways,","Fragments":["you"]},{"Key":"Anyways, you","Fragments":["might"]},{"Key":"guide e.g.","Fragments":["[1]"]},{"Key":"e.g. [1]","Fragments":["or"]},{"Key":"[1] or","Fragments":["[2]."]},{"Key":"or [2].","Fragments":["A"]},{"Key":"[2]. A","Fragments":["couple"]},{"Key":"1. Get","Fragments":["your"]},{"Key":"Get your","Fragments":["indentations"]},{"Key":"your indentations","Fragments":["straight"]},{"Key":"2. Always","Fragments":["put"]},{"Key":"Always put","Fragments":["spaces"]},{"Key":"put spaces","Fragments":["left"]},{"Key":"spaces left","Fragments":["and"]},{"Key":"and right","Fragments":["of"]},{"Key":"right of","Fragments":["`==`"]},{"Key":"3. Either","Fragments":["use"]},{"Key":"Either use","Fragments":["`sentence.trim`"]},{"Key":"use `sentence.trim`","Fragments":["and"]},{"Key":"`sentence.trim` and","Fragments":["`sentence.toUpperCase`"]},{"Key":"and `sentence.toUpperCase`","Fragments":["or"]},{"Key":"`sentence.toUpperCase` or","Fragments":["`sentence.trim()`"]},{"Key":"or `sentence.trim()`","Fragments":["and"]},{"Key":"`sentence.trim()` and","Fragments":["`sentence.toUpperCase()`."]},{"Key":"and `sentence.toUpperCase()`.","Fragments":["Don't"]},{"Key":"`sentence.toUpperCase()`. Don't","Fragments":["mix"]},{"Key":"Don't mix","Fragments":["and"]},{"Key":"mix and","Fragments":["match."]},{"Key":" Want","Fragments":["to"]},{"Key":"Want to","Fragments":["try"]},{"Key":" [1]:","Fragments":["http://docs.scala-lang.org/style/"]},{"Key":" [2]:","Fragments":["http://twitter.github.io/effectivescala/"]},{"Key":" Unfortunately","Fragments":["then","Java","this"]},{"Key":"Unfortunately then","Fragments":["you"]},{"Key":"full thumbs","Fragments":["up!"]},{"Key":"thumbs up!","Fragments":[";-)"]},{"Key":"don't overdo","Fragments":["implicits.","the"]},{"Key":"Unfortunately Java","Fragments":["semicolon"]},{"Key":"Java semicolon","Fragments":["stayed"]},{"Key":"unnecessary redundancy","Fragments":["by"]},{"Key":"redundancy by","Fragments":["defining,"]},{"Key":"by defining,","Fragments":["for"]},{"Key":"defining, for","Fragments":["example,"]},{"Key":"example, a","Fragments":["variable"]},{"Key":"variable like","Fragments":["`threes`"]},{"Key":"like `threes`","Fragments":["and"]},{"Key":"`threes` and","Fragments":["then"]},{"Key":"doing `toScores(threes,","Fragments":["3)`"]},{"Key":"for @katelin","Fragments":["'s"]},{"Key":"@katelin 's","Fragments":["point."]},{"Key":"Why change","Fragments":["```letters```"]},{"Key":"change ```letters```","Fragments":["to"]},{"Key":"```letters``` to","Fragments":["a"]},{"Key":"a ```Stream```?","Fragments":["Strings"]},{"Key":"```Stream```? Strings","Fragments":["are"]},{"Key":"```Seq[Char]``` so","Fragments":["you"]},{"Key":"can ```map```","Fragments":["over"]},{"Key":"```map``` over","Fragments":["them."]},{"Key":"And ```Map```s","Fragments":["are"]},{"Key":"a ```PartialFunction```,","Fragments":["so"]},{"Key":"```PartialFunction```, so","Fragments":["you"]},{"Key":"simply say","Fragments":["```scoring(char.toUpper)```."]},{"Key":"is ok.","Fragments":["Can"]},{"Key":"ok. Can","Fragments":["you"]},{"Key":"using ```map```","Fragments":["and"]},{"Key":"put vals","Fragments":["and"]},{"Key":"and helping","Fragments":["method"]},{"Key":"helping method","Fragments":["toScores"]},{"Key":"method toScores","Fragments":["method"]},{"Key":"toScores method","Fragments":["into"]},{"Key":"method into","Fragments":["companion"]},{"Key":"You won","Fragments":[")))"]},{"Key":" hmm,","Fragments":["we"]},{"Key":"hmm, we","Fragments":["are"]},{"Key":"are entering","Fragments":["the"]},{"Key":"entering the","Fragments":["world"]},{"Key":"the world","Fragments":["of"]},{"Key":"world of","Fragments":["personal"]},{"Key":"taste here.","Fragments":[":-)"]},{"Key":"two args","Fragments":["more"]},{"Key":"args more","Fragments":["readable,"]},{"Key":"readable, so","Fragments":["I"]},{"Key":"would accept","Fragments":["the"]},{"Key":"accept the","Fragments":["_"]},{"Key":"_ and","Fragments":["tupled"]},{"Key":"and tupled","Fragments":["as",":)"]},{"Key":"tupled as","Fragments":["a"]},{"Key":"I admit","Fragments":["that"]},{"Key":"different people","Fragments":["have"]},{"Key":"have different","Fragments":["tastes."]},{"Key":"different tastes.","Fragments":[":-)"]},{"Key":" Let's","Fragments":["just"]},{"Key":"Let's just","Fragments":["say"]},{"Key":"room left","Fragments":["for"]},{"Key":"left for","Fragments":["personal"]},{"Key":"The implementation","Fragments":["of"]},{"Key":"function differentNucleotides","Fragments":["is"]},{"Key":"differentNucleotides is","Fragments":["a"]},{"Key":"bit opaque","Fragments":["because"]},{"Key":"opaque because","Fragments":["of"]},{"Key":"of '_'","Fragments":["and"]},{"Key":"'_' and","Fragments":["tupled"]},{"Key":"tupled :)","Fragments":["Handling"]},{"Key":":) Handling","Fragments":["tuples"]},{"Key":"Handling tuples","Fragments":["using"]},{"Key":"tuples using","Fragments":["case"]},{"Key":"classes is","Fragments":["much"]},{"Key":"using \"require\"","Fragments":["is"]},{"Key":"\"require\" is","Fragments":["much"]},{"Key":"and simpler","Fragments":["here."]},{"Key":"this mostly","Fragments":["for"]},{"Key":"mostly for","Fragments":["educational"]},{"Key":"for educational","Fragments":["purposes,"]},{"Key":"educational purposes,","Fragments":["but"]},{"Key":"purposes, but","Fragments":["maybe"]},{"Key":"maybe having","Fragments":["this"]},{"Key":"having this","Fragments":["call-by-name"]},{"Key":"this call-by-name","Fragments":["stuff"]},{"Key":"call-by-name stuff","Fragments":["is"]},{"Key":"too early","Fragments":["for"]},{"Key":"early for","Fragments":["now"]},{"Key":"object PhoneNumber","Fragments":["you"]},{"Key":"PhoneNumber you","Fragments":["might"]},{"Key":" `implicit","Fragments":["class"]},{"Key":"class Clean(val","Fragments":["number:"]},{"Key":"Clean(val number:","Fragments":["String)"]},{"Key":"number: String)","Fragments":["{"]},{"Key":"def clean","Fragments":["="]},{"Key":"clean =","Fragments":["number"]},{"Key":"number match","Fragments":["{...}}`"]},{"Key":"call \"number","Fragments":["clean\","]},{"Key":"\"number clean\",","Fragments":["instead"]},{"Key":"clean\", instead","Fragments":["of"]},{"Key":"may introduce","Fragments":["a"]},{"Key":"introduce a","Fragments":["cache?!"]},{"Key":"a cache?!","Fragments":[";-)"]},{"Key":"whether ```def","Fragments":["first"]},{"Key":"```def first","Fragments":["=","(dayOfWeek:Int)"]},{"Key":"first =","Fragments":["dayInWeekStartingWith(1,"]},{"Key":"= dayInWeekStartingWith(1,","Fragments":["_:Int)```","dayOfWeek)```is"]},{"Key":"dayInWeekStartingWith(1, _:Int)```","Fragments":["or"]},{"Key":"_:Int)``` or","Fragments":["```def"]},{"Key":"or ```def","Fragments":["first"]},{"Key":"first (dayOfWeek:Int)","Fragments":["="]},{"Key":"(dayOfWeek:Int) =","Fragments":["dayInWeekStartingWith(1,"]},{"Key":"dayInWeekStartingWith(1, dayOfWeek)```is","Fragments":["more"]},{"Key":"dayOfWeek)```is more","Fragments":["readable"]},{"Key":" @paris","Fragments":["Thanks!"]},{"Key":"@paris Thanks!","Fragments":["That"]},{"Key":"Thanks! That","Fragments":["was"]},{"Key":"was very","Fragments":["helpful."]},{"Key":"very helpful.","Fragments":["I"]},{"Key":"helpful. I","Fragments":["did"]},{"Key":"did another","Fragments":["revision."]},{"Key":"a the","Fragments":["``zip``"]},{"Key":"the ``zip``","Fragments":["function"]},{"Key":"``zip`` function","Fragments":["with"]},{"Key":"two input","Fragments":["strings."]},{"Key":"hard life","Fragments":["w/o"]},{"Key":"life w/o","Fragments":["\"900,"]},{"Key":"w/o \"900,","Fragments":["400,"]},{"Key":"\"900, 400,","Fragments":["40"]},{"Key":"400, 40","Fragments":["and","and"]},{"Key":"40 and","Fragments":["so","so"]},{"Key":"can simplify.","Fragments":["For"]},{"Key":"simplify. For","Fragments":["example:"]},{"Key":"For example:","Fragments":["If"]},{"Key":"example: If","Fragments":["you"]},{"Key":"have either","Fragments":["a"]},{"Key":"a ```SortedMap```","Fragments":["or"]},{"Key":"```SortedMap``` or","Fragments":["just"]},{"Key":"or just","Fragments":["a","more"]},{"Key":"simple ```Seq```","Fragments":["of"]},{"Key":"```Seq``` of","Fragments":["pairs"]},{"Key":"pairs then","Fragments":["you"]},{"Key":"Although completely","Fragments":["valid,"]},{"Key":"completely valid,","Fragments":["I"]},{"Key":"valid, I","Fragments":["consider"]},{"Key":"only three-quarters","Fragments":["of"]},{"Key":"three-quarters of","Fragments":["a"]},{"Key":"solution, b/c","Fragments":["I"]},{"Key":"use \"helping","Fragments":["values\","]},{"Key":"\"helping values\",","Fragments":["as"]},{"Key":"values\", as","Fragments":["900,"]},{"Key":"as 900,","Fragments":["400,"]},{"Key":"900, 400,","Fragments":["40"]},{"Key":" @edwina:","Fragments":["fix"]},{"Key":"@edwina: fix","Fragments":["according"]},{"Key":"fix according","Fragments":["to"]},{"Key":"this purely","Fragments":["functional,"]},{"Key":"functional, but","Fragments":["unfortunately","I"]},{"Key":"but unfortunately","Fragments":["I"]},{"Key":"unfortunately I","Fragments":["have"]},{"Key":"not enough","Fragments":["knowledge"]},{"Key":"enough knowledge","Fragments":["to"]},{"Key":"knowledge to","Fragments":["code"]},{"Key":"code so.","Fragments":["Next"]},{"Key":"so. Next","Fragments":["iteration"]},{"Key":"in fp","Fragments":["style"]},{"Key":"fp style","Fragments":["after"]},{"Key":"style after","Fragments":["I"]},{"Key":"know and","Fragments":["understand"]},{"Key":"understand monads","Fragments":["and"]},{"Key":"monads and","Fragments":["reactive"]},{"Key":"and reactive","Fragments":["things."]},{"Key":"eta-reduction: `(_","Fragments":["+"]},{"Key":"`(_ +","Fragments":["v)`."]},{"Key":"verbose for","Fragments":["the"]},{"Key":"just `v`.","Fragments":[":-)"]},{"Key":"Looks cool","Fragments":["now!"]},{"Key":" my","Fragments":["Haskell"]},{"Key":"my Haskell","Fragments":["solution"]},{"Key":"Haskell solution","Fragments":["transferred"]},{"Key":"solution transferred","Fragments":["back"]},{"Key":"transferred back","Fragments":["to"]},{"Key":"w/ simple","Fragments":["recursion."]},{"Key":"nice way","Fragments":["to"]},{"Key":"Wow, that","Fragments":["is"]},{"Key":"cleaner solution!","Fragments":["I"]},{"Key":"solution! I","Fragments":["need"]},{"Key":"get used","Fragments":["to"]},{"Key":"scala way","Fragments":["of"]},{"Key":"a quite","Fragments":["nice"]},{"Key":"quite nice","Fragments":["solution,"]},{"Key":"nice solution,","Fragments":["can"]},{"Key":"solution, can","Fragments":["you"]},{"Key":"by maybe","Fragments":["using"]},{"Key":"maybe using","Fragments":["the"]},{"Key":"the [`count`](http://www.scala-lang.org/api/current/#scala.collection.Iterable)","Fragments":["method?"]},{"Key":"Scala's definition","Fragments":["of"]},{"Key":"`containsSlice` seems","Fragments":["to"]},{"Key":"So who","Fragments":["are"]},{"Key":"are we","Fragments":["to"]},{"Key":"we to","Fragments":["question"]},{"Key":"to question","Fragments":["this"]},{"Key":"question this","Fragments":["decision?"]},{"Key":"this decision?","Fragments":[";-)"]},{"Key":"it really","Fragments":["makes"]},{"Key":"really makes","Fragments":["sense","the"]},{"Key":"to even","Fragments":["consider"]},{"Key":"consider lists","Fragments":["of"]},{"Key":"two types","Fragments":["as"]},{"Key":"types as","Fragments":["sub/superlists?"]},{"Key":"to @jeanette","Fragments":["for"]},{"Key":"@jeanette for","Fragments":["the"]},{"Key":"the tips","Fragments":[":)"]},{"Key":"had started","Fragments":["this"]},{"Key":"started this","Fragments":["solution"]},{"Key":"very ugly,","Fragments":["clunky"]},{"Key":"ugly, clunky","Fragments":["solution."]},{"Key":"clunky solution.","Fragments":["It"]},{"Key":"solution. It","Fragments":["worked,"]},{"Key":"It worked,","Fragments":["but"]},{"Key":"worked, but","Fragments":["it"]},{"Key":"wasn't very","Fragments":["readable."]},{"Key":"very readable.","Fragments":["After"]},{"Key":"readable. After","Fragments":["spending"]},{"Key":"After spending","Fragments":["some"]},{"Key":"spending some","Fragments":["time"]},{"Key":"some time","Fragments":["looking","to"]},{"Key":"time looking","Fragments":["through"]},{"Key":"API and","Fragments":["debugging"]},{"Key":"and debugging","Fragments":["I"]},{"Key":"debugging I","Fragments":["came"]},{"Key":"with this.","Fragments":["`isUpper`"]},{"Key":"this. `isUpper`","Fragments":["might"]},{"Key":"`isUpper` might","Fragments":["not"]},{"Key":"be strictly","Fragments":["needed,"]},{"Key":"strictly needed,","Fragments":["but"]},{"Key":"alternative `!s.filter(_.isLetter).isEmpty","Fragments":["\u0026\u0026"]},{"Key":"`!s.filter(_.isLetter).isEmpty \u0026\u0026","Fragments":["s.filter(_.isLetter).forall(_.isUpper)`"]},{"Key":"\u0026\u0026 s.filter(_.isLetter).forall(_.isUpper)`","Fragments":["is"]},{"Key":"s.filter(_.isLetter).forall(_.isUpper)` is","Fragments":["far"]},{"Key":"is far","Fragments":["less"]},{"Key":"far less","Fragments":["elegant."]},{"Key":"of ```count```!","Fragments":["It"]},{"Key":"```count```! It","Fragments":["may"]},{"Key":"but +1","Fragments":["for"]},{"Key":"Yes, Scala","Fragments":["pattern"]},{"Key":"just great,","Fragments":["but"]},{"Key":"still there","Fragments":["might"]},{"Key":"where other","Fragments":["constructs"]},{"Key":"other constructs","Fragments":["might"]},{"Key":"constructs might","Fragments":["be"]},{"Key":"be simpler!","Fragments":[":-)"]},{"Key":"simpler! :-)","Fragments":["You"]},{"Key":":-) You","Fragments":["could,"]},{"Key":"a plain","Fragments":["old"]},{"Key":"plain old","Fragments":["```Set```"]},{"Key":"old ```Set```","Fragments":["(or"]},{"Key":"```Set``` (or","Fragments":["even"]},{"Key":"a ```String```","Fragments":["as"]},{"Key":"```String``` as","Fragments":["it"]},{"Key":"also implicitly","Fragments":["a"]},{"Key":"```Seq[Char]``` w/","Fragments":["a"]},{"Key":"a ```contains```","Fragments":["function)"]},{"Key":"```contains``` function)","Fragments":["to"]},{"Key":"function) to","Fragments":["```validate```."]},{"Key":"make ```nucleotideCounts```","Fragments":["a"]},{"Key":"```nucleotideCounts``` a","Fragments":["(lazy)"]},{"Key":"a (lazy)","Fragments":["```val```"]},{"Key":"```val``` as","Fragments":["it"]},{"Key":"never change","Fragments":["once"]},{"Key":"change once","Fragments":["it"]},{"Key":"is calculated.","Fragments":["Having"]},{"Key":"calculated. Having","Fragments":["it"]},{"Key":"Having it","Fragments":["as"]},{"Key":"```def``` means","Fragments":["that"]},{"Key":"be recalculated","Fragments":["for"]},{"Key":"recalculated for","Fragments":["every"]},{"Key":"Done in","Fragments":["what"]},{"Key":"believe is","Fragments":["more"]},{"Key":"way -","Fragments":["using"]},{"Key":"- using","Fragments":["map"]},{"Key":"map and","Fragments":["Map","I'm"]},{"Key":"and Map","Fragments":[";-)"]},{"Key":"List groupBy","Fragments":["and"]},{"Key":"and mapValues","Fragments":["functions."]},{"Key":"mapValues functions.","Fragments":["Using"]},{"Key":"functions. Using","Fragments":["these"]},{"Key":"Using these","Fragments":["functions"]},{"Key":"Hey, why","Fragments":["have"]},{"Key":"why have","Fragments":["you"]},{"Key":"have you","Fragments":["defined"]},{"Key":"defined two","Fragments":["methods?"]},{"Key":"two methods?","Fragments":["You"]},{"Key":"methods? You","Fragments":["can"]},{"Key":"can achieve","Fragments":["the","it"]},{"Key":"achieve the","Fragments":["results","same"]},{"Key":"results wanted","Fragments":["by"]},{"Key":"wanted by","Fragments":["one"]},{"Key":"- named","Fragments":["hello."]},{"Key":"Also, in","Fragments":["Scala"]},{"Key":"Scala you","Fragments":["do"]},{"Key":"use return","Fragments":["(and"]},{"Key":"return (and","Fragments":["shouldn't"]},{"Key":"(and shouldn't","Fragments":["tbh)."]},{"Key":"of Java-like","Fragments":["concat"]},{"Key":"Java-like concat","Fragments":["you"]},{"Key":"concat you","Fragments":["can"]},{"Key":"into Scala-like","Fragments":["interpolation"]},{"Key":"Scala-like interpolation","Fragments":[":)"]},{"Key":"first program","Fragments":["with"]},{"Key":"program with","Fragments":["Scala."]},{"Key":"Please let","Fragments":["me"]},{"Key":" good,","Fragments":["but"]},{"Key":"not extremely","Fragments":["readable."]},{"Key":"extremely readable.","Fragments":[":-)"]},{"Key":"of val's","Fragments":["(to"]},{"Key":"val's (to","Fragments":["store"]},{"Key":"(to store","Fragments":["intermediate"]},{"Key":"store intermediate","Fragments":["results),"]},{"Key":"intermediate results),","Fragments":["def's"]},{"Key":"results), def's","Fragments":["and"]},{"Key":"def's and","Fragments":["type"]},{"Key":"aliases with","Fragments":["good"]},{"Key":"telling names","Fragments":["to","over"]},{"Key":"things working","Fragments":["mostly."]},{"Key":"readable abd","Fragments":["longer"]},{"Key":"abd longer","Fragments":["version"]},{"Key":"longer version","Fragments":["can"]},{"Key":"version can","Fragments":["be"]},{"Key":"be found","Fragments":["at"]},{"Key":"found at","Fragments":["iteration"]},{"Key":"at iteration","Fragments":["2."]},{"Key":"The shortest","Fragments":["and"]},{"Key":"and most","Fragments":["concise","elegant."]},{"Key":"most concise","Fragments":["solution"]},{"Key":"could come","Fragments":["up"]},{"Key":"with after","Fragments":["reading"]},{"Key":"reading other","Fragments":["code"]},{"Key":"other code","Fragments":["on"]},{"Key":"code on","Fragments":["the"]},{"Key":"standard imperative","Fragments":["solution"]},{"Key":"effects and","Fragments":["explicit","probably"]},{"Key":"over collections","Fragments":["(as"]},{"Key":"collections (as","Fragments":["you"]},{"Key":"(as you","Fragments":["would"]},{"Key":"it in,","Fragments":["say"]},{"Key":"in, say","Fragments":["Java","the"]},{"Key":"say Java","Fragments":["7)."]},{"Key":"Java 7).","Fragments":["Nothing"]},{"Key":"7). Nothing","Fragments":["inherently"]},{"Key":"Nothing inherently","Fragments":["bad"]},{"Key":"inherently bad","Fragments":["about"]},{"Key":"bad about","Fragments":["it."]},{"Key":"doing much","Fragments":["work"]},{"Key":"work here","Fragments":["yourself"]},{"Key":"here yourself","Fragments":["(w/"]},{"Key":"yourself (w/","Fragments":["the"]},{"Key":"risk for","Fragments":["bugs"]},{"Key":"for bugs","Fragments":["that"]},{"Key":"bugs that","Fragments":["comes"]},{"Key":"that comes","Fragments":["w/","in"]},{"Key":"comes w/","Fragments":["it)"]},{"Key":"w/ it)","Fragments":["that"]},{"Key":"it) that","Fragments":["could"]},{"Key":"be saved","Fragments":["by"]},{"Key":"saved by","Fragments":["using"]},{"Key":"built-in Scala","Fragments":["Collection"]},{"Key":"flatMap, filter","Fragments":["etc."]},{"Key":"filter etc.","Fragments":["in"]},{"Key":"The resulting","Fragments":["code"]},{"Key":"resulting code","Fragments":["will"]},{"Key":"be shorter,","Fragments":["less"]},{"Key":"less error-prone,","Fragments":["w/o"]},{"Key":"error-prone, w/o","Fragments":["side"]},{"Key":"w/o side","Fragments":["effects"]},{"Key":"readable. So","Fragments":["why"]},{"Key":"So why","Fragments":["not","not."]},{"Key":"not give","Fragments":["it"]},{"Key":"a try?","Fragments":[":-)"]},{"Key":" Done,","Fragments":["but"]},{"Key":"Done, but","Fragments":["in"]},{"Key":"brackets at","Fragments":["the"]},{"Key":"nice exercise","Fragments":["to"]},{"Key":"hard work","Fragments":["yourself"]},{"Key":"work yourself","Fragments":["w/"]},{"Key":"yourself w/","Fragments":["recursion."]},{"Key":"w/ recursion.","Fragments":[":-)"]},{"Key":"recursion. :-)","Fragments":["(you"]},{"Key":":-) (you","Fragments":["could"]},{"Key":"```zip, map,","Fragments":["flatMap,"]},{"Key":"flatMap, count,","Fragments":["...```"]},{"Key":"define translate","Fragments":["as"]},{"Key":"translate as","Fragments":["a"]},{"Key":" Map('G'","Fragments":["-\u003e"]},{"Key":"Map('G' -\u003e","Fragments":["'C',"]},{"Key":" 'C'","Fragments":["-\u003e"]},{"Key":" 'T'","Fragments":["-\u003e"]},{"Key":" 'A'","Fragments":["-\u003e"]},{"Key":"'A' -\u003e","Fragments":["'U')"]},{"Key":" Works","Fragments":["as"]},{"Key":"Works as","Fragments":["s.map(translate)"]},{"Key":"as s.map(translate)","Fragments":["too."]},{"Key":"about drawing","Fragments":["a"]},{"Key":"a board","Fragments":["w/"]},{"Key":"board w/","Fragments":["only"]},{"Key":"w/ only","Fragments":["one"]},{"Key":"one queen","Fragments":["on"]},{"Key":"queen on","Fragments":["it?"]},{"Key":"on it?","Fragments":[";-)"]},{"Key":"Using `\"[^\\\\W']+\"`","Fragments":["as"]},{"Key":"`\"[^\\\\W']+\"` as","Fragments":["your"]},{"Key":"your split","Fragments":["regex"]},{"Key":"split regex","Fragments":["should"]},{"Key":"regex should","Fragments":["do"]},{"Key":"To be","Fragments":["consistent"]},{"Key":"be consistent","Fragments":["with"]},{"Key":"consistent with","Fragments":["your"]},{"Key":"your \"\\_.size\"","Fragments":["notation"]},{"Key":"\"\\_.size\" notation","Fragments":["in"]},{"Key":"in mapValues","Fragments":["you"]},{"Key":"mapValues you","Fragments":["could"]},{"Key":"use \"\\_.toLowerCase\"","Fragments":["in"]},{"Key":"\"\\_.toLowerCase\" in","Fragments":["the"]},{"Key":"anyone have","Fragments":["an"]},{"Key":"idea on","Fragments":["how"]},{"Key":"not understand","Fragments":["your"]},{"Key":"regex, I","Fragments":["tried"]},{"Key":"tried nevertheless","Fragments":["and"]},{"Key":"nevertheless and","Fragments":["does"]},{"Key":"and does","Fragments":["not"]},{"Key":"not seem","Fragments":["to"]},{"Key":"work either.","Fragments":["Could"]},{"Key":"either. Could","Fragments":["you"]},{"Key":"you double","Fragments":["check"]},{"Key":"double check","Fragments":["the"]},{"Key":"you posted","Fragments":["or"]},{"Key":"posted or","Fragments":["explain"]},{"Key":"or explain","Fragments":["so"]},{"Key":"explain so","Fragments":["I"]},{"Key":"find what","Fragments":["might"]},{"Key":"be wrong","Fragments":["please?"]},{"Key":"fixed the","Fragments":["consistency."]},{"Key":" @lura","Fragments":["English"]},{"Key":"@lura English","Fragments":["isn't"]},{"Key":"English isn't","Fragments":["my"]},{"Key":"isn't my","Fragments":["first"]},{"Key":"first language","Fragments":["so"]},{"Key":"language so","Fragments":["I'm"]},{"Key":"than probably","Fragments":["wrong"]},{"Key":"probably wrong","Fragments":[":)"]},{"Key":" isDivisibleBy","Fragments":["is"]},{"Key":"isDivisibleBy is","Fragments":["the"]},{"Key":"proper name,","Fragments":["I"]},{"Key":"name, I","Fragments":["mistakenly"]},{"Key":"I mistakenly","Fragments":["named"]},{"Key":"mistakenly named","Fragments":["mine"]},{"Key":"named mine","Fragments":["divides..."]},{"Key":"using ```.sum```","Fragments":["instead"]},{"Key":"```.sum``` instead","Fragments":["of"]},{"Key":"a mapping","Fragments":["from"]},{"Key":"mapping from","Fragments":["the"]},{"Key":"the chars","Fragments":["to"]},{"Key":"chars to","Fragments":["their","reduce"]},{"Key":"to their","Fragments":["int"]},{"Key":"their int","Fragments":["equivalent."]},{"Key":"int equivalent.","Fragments":["Instead"]},{"Key":"equivalent. Instead","Fragments":["you"]},{"Key":"use Char.asDigit.","Fragments":["Char.asDigit"]},{"Key":"Char.asDigit. Char.asDigit","Fragments":["will"]},{"Key":"Char.asDigit will","Fragments":["return"]},{"Key":"the Int","Fragments":["equivalent"]},{"Key":"Int equivalent","Fragments":["for"]},{"Key":"equivalent for","Fragments":["0..9"]},{"Key":"for 0..9","Fragments":["and"]},{"Key":"0..9 and","Fragments":["'a'..'f'."]},{"Key":"Ah, the","Fragments":["`for`"]},{"Key":"the `for`","Fragments":["expression"]},{"Key":"`for` expression","Fragments":["is"]},{"Key":"the piece","Fragments":["I"]},{"Key":"piece I","Fragments":["was"]},{"Key":"was missing.","Fragments":["I"]},{"Key":"missing. I","Fragments":["had"]},{"Key":"the `Option`,","Fragments":["but"]},{"Key":"`Option`, but","Fragments":["I"]},{"Key":"always ended","Fragments":["up"]},{"Key":"of ugly","Fragments":["code"]},{"Key":"ugly code","Fragments":["trying"]},{"Key":"code trying","Fragments":["to"]},{"Key":"There isn't","Fragments":["much"]},{"Key":"much benefit","Fragments":["in"]},{"Key":"benefit in","Fragments":["having"]},{"Key":"in having","Fragments":["it"]},{"Key":"object rather","Fragments":["than","than"]},{"Key":"class, apart","Fragments":["from"]},{"Key":"from clearly","Fragments":["signally"]},{"Key":"clearly signally","Fragments":["that"]},{"Key":"signally that","Fragments":["it"]},{"Key":"a static/pure","Fragments":["method."]},{"Key":"handling the","Fragments":["fold"]},{"Key":"a sentinel","Fragments":["value"]},{"Key":"sentinel value","Fragments":["for"]},{"Key":"invalid case","Fragments":["-"]},{"Key":"case -","Fragments":["`Option[Int]`"]},{"Key":"- `Option[Int]`","Fragments":["works"]},{"Key":"`Option[Int]` works","Fragments":["very"]},{"Key":"works very","Fragments":["well"]},{"Key":"well here.","Fragments":["You"]},{"Key":"see [my","Fragments":["submission](http://exercism.io/submissions/5e16916d69a24d3da9a8bb4c4b515ecd)"]},{"Key":"[my submission](http://exercism.io/submissions/5e16916d69a24d3da9a8bb4c4b515ecd)","Fragments":["as"]},{"Key":"submission](http://exercism.io/submissions/5e16916d69a24d3da9a8bb4c4b515ecd) as","Fragments":["an"]},{"Key":"I discovered","Fragments":["`Nil`"]},{"Key":"discovered `Nil`","Fragments":["after"]},{"Key":"`Nil` after","Fragments":["doing"]},{"Key":"after doing","Fragments":["a"]},{"Key":"of exercises","Fragments":["and"]},{"Key":"exercises and","Fragments":["I"]},{"Key":"haven't gone","Fragments":["back"]},{"Key":"gone back","Fragments":["to"]},{"Key":"fix all","Fragments":["the"]},{"Key":"the old","Fragments":["ones"]},{"Key":"old ones","Fragments":["yet."]},{"Key":"a fold,","Fragments":["but"]},{"Key":"fold, but","Fragments":["got"]},{"Key":"stuck with","Fragments":["the"]},{"Key":"invalid case.","Fragments":["I"]},{"Key":"case. I","Fragments":["think"]},{"Key":"explicit recursion","Fragments":["works"]},{"Key":"recursion works","Fragments":["better"]},{"Key":"works better","Fragments":["here,"]},{"Key":"better here,","Fragments":["but"]},{"Key":"in seeing","Fragments":["a"]},{"Key":"seeing a","Fragments":["fold-based"]},{"Key":"a fold-based","Fragments":["solution"]},{"Key":"fold-based solution","Fragments":["that"]},{"Key":"handles bad","Fragments":["input"]},{"Key":"bad input","Fragments":["cleanly."]},{"Key":"particular benefit","Fragments":["to"]},{"Key":"benefit to","Fragments":["putting"]},{"Key":"to putting","Fragments":["`parseBinary`"]},{"Key":"putting `parseBinary`","Fragments":["on"]},{"Key":"`parseBinary` on","Fragments":["the"]},{"Key":"the class?","Fragments":["(It"]},{"Key":"class? (It","Fragments":["seems"]},{"Key":"(It seems","Fragments":["to"]},{"Key":"it near","Fragments":["the"]},{"Key":"near the","Fragments":["only"]},{"Key":"uses it,","Fragments":["but"]},{"Key":"but my","Fragments":["Scala","thinking","comment"]},{"Key":"my Scala","Fragments":["experience"]},{"Key":"Scala experience","Fragments":["is"]},{"Key":"experience is","Fragments":["still"]},{"Key":"very limited","Fragments":["and"]},{"Key":"it's likely","Fragments":["I'm"]},{"Key":"likely I'm","Fragments":["missing"]},{"Key":"I'm missing","Fragments":["something.)"]},{"Key":"matching -","Fragments":["you"]},{"Key":"the `List()`","Fragments":["in"]},{"Key":"`List()` in","Fragments":["your"]},{"Key":"pattern with","Fragments":["`Nil`,"]},{"Key":"with `Nil`,","Fragments":["which"]},{"Key":"`Nil`, which","Fragments":["matches"]},{"Key":"which matches","Fragments":["the"]},{"Key":"a fold","Fragments":["if"]},{"Key":"fold if","Fragments":["you"]},{"Key":"want, which","Fragments":["avoids"]},{"Key":"the recursion,","Fragments":["but"]},{"Key":"since `parseBinary`","Fragments":["does"]},{"Key":"`parseBinary` does","Fragments":["not"]},{"Key":"not read","Fragments":["the"]},{"Key":"class variable","Fragments":["`input`,"]},{"Key":"variable `input`,","Fragments":["it"]},{"Key":"`input`, it","Fragments":["can"]},{"Key":"lot nicer","Fragments":["looking"]},{"Key":"looking than","Fragments":["the"]},{"Key":"tuple accessors","Fragments":["from"]},{"Key":"accessors from","Fragments":["the"]},{"Key":" @aurelio","Fragments":["Awesome"]},{"Key":"@aurelio Awesome","Fragments":["feedback,"]},{"Key":"Awesome feedback,","Fragments":["thank"]},{"Key":"feedback, thank","Fragments":["you!"]},{"Key":"Fixed the","Fragments":["compilation"]},{"Key":"compilation error.","Fragments":["Not"]},{"Key":"error. Not","Fragments":["sure"]},{"Key":"your reasons","Fragments":["for"]},{"Key":"for specifying","Fragments":["the"]},{"Key":"specifying the","Fragments":["type"]},{"Key":"are good.","Fragments":["But"]},{"Key":"good. But","Fragments":["don't"]},{"Key":"But don't","Fragments":["you","realy"]},{"Key":"a colon","Fragments":["between"]},{"Key":"colon between","Fragments":["the"]},{"Key":"argument list","Fragments":["and"]},{"Key":"of `hey`?","Fragments":["I"]},{"Key":"`hey`? I","Fragments":["can't"]},{"Key":"extra challenge,","Fragments":["you"]},{"Key":"challenge, you","Fragments":["could"]},{"Key":"consider creating","Fragments":["a"]},{"Key":"new class","Fragments":["(maybe","(and"]},{"Key":"class (maybe","Fragments":["`Message`"]},{"Key":"(maybe `Message`","Fragments":["or"]},{"Key":"`Message` or","Fragments":["`Sentence`)"]},{"Key":"or `Sentence`)","Fragments":["which"]},{"Key":"`Sentence`) which","Fragments":["accepts"]},{"Key":"which accepts","Fragments":["a"]},{"Key":"a `String`","Fragments":["and"]},{"Key":"`String` and","Fragments":["has"]},{"Key":"on it,","Fragments":["and"]},{"Key":"it, and","Fragments":["create"]},{"Key":"and create","Fragments":["an"]},{"Key":"from `String`","Fragments":["to"]},{"Key":"`String` to","Fragments":["your"]},{"Key":"class (and","Fragments":["put"]},{"Key":"(and put","Fragments":["it"]},{"Key":"it somewhere","Fragments":["that"]},{"Key":"somewhere that","Fragments":["`Bob`"]},{"Key":"that `Bob`","Fragments":["will"]},{"Key":"`Bob` will","Fragments":["have"]},{"Key":"have access","Fragments":["to"]},{"Key":"access to","Fragments":["it,"]},{"Key":"to it,","Fragments":["such"]},{"Key":"it, such","Fragments":["as","as"]},{"Key":"as `Bob`'s","Fragments":["companion"]},{"Key":"`Bob`'s companion","Fragments":["object)"]},{"Key":"companion object)","Fragments":["so"]},{"Key":"object) so","Fragments":["you"]},{"Key":"predicate methods","Fragments":["directly"]},{"Key":"methods directly","Fragments":["on"]},{"Key":"have let","Fragments":["Scala"]},{"Key":"let Scala","Fragments":["infer","choose:"]},{"Key":"Scala infer","Fragments":["the"]},{"Key":"infer the","Fragments":["return"]},{"Key":"`hey`, as","Fragments":["I"]},{"Key":"conventions are,","Fragments":["but"]},{"Key":"my thinking","Fragments":["was"]},{"Key":"thinking was","Fragments":["this."]},{"Key":"was this.","Fragments":["It's"]},{"Key":"this. It's","Fragments":["nice"]},{"Key":"It's nice","Fragments":["to"]},{"Key":"about public","Fragments":["APIs,"]},{"Key":"public APIs,","Fragments":["especially"]},{"Key":"APIs, especially","Fragments":["with"]},{"Key":"a poorly","Fragments":["named"]},{"Key":"poorly named","Fragments":["method"]},{"Key":"named method","Fragments":["like"]},{"Key":"like `hey`.","Fragments":["For"]},{"Key":"`hey`. For","Fragments":["private"]},{"Key":"For private","Fragments":["methods,"]},{"Key":"methods, it's","Fragments":["less"]},{"Key":"less important,","Fragments":["and"]},{"Key":"important, and","Fragments":["names"]},{"Key":"and names","Fragments":["like"]},{"Key":"like `isSomething`","Fragments":["clearly"]},{"Key":"`isSomething` clearly","Fragments":["communicate"]},{"Key":"clearly communicate","Fragments":["the"]},{"Key":"communicate the","Fragments":["return"]},{"Key":"code ever.","Fragments":["Please"]},{"Key":"ever. Please","Fragments":["don't"]},{"Key":"don't hold","Fragments":["back!"]},{"Key":"private method","Fragments":["and","`namesInGrade`"]},{"Key":"and in","Fragments":["my","general","Predef"]},{"Key":"opinion you","Fragments":["should"]},{"Key":"should mark","Fragments":["those"]},{"Key":"mark those","Fragments":["as"]},{"Key":"those as","Fragments":["`private`"]},{"Key":"of `match`","Fragments":["you"]},{"Key":"`match` you","Fragments":["could"]},{"Key":"learn some","Fragments":["scala"]},{"Key":"you originally","Fragments":["a"]},{"Key":"originally a","Fragments":["Lisp"]},{"Key":"a Lisp","Fragments":["guy?"]},{"Key":"Lisp guy?","Fragments":["The"]},{"Key":"guy? The","Fragments":["use"]},{"Key":"`foldLeft` seems","Fragments":["a"]},{"Key":"bit odd","Fragments":["here"]},{"Key":"odd here","Fragments":["to"]},{"Key":"me. You're","Fragments":["just"]},{"Key":"You're just","Fragments":["filtering"]},{"Key":"filtering your","Fragments":["list"]},{"Key":"your list","Fragments":["on","and"]},{"Key":"on another","Fragments":["condition,"]},{"Key":"another condition,","Fragments":["so"]},{"Key":"condition, so","Fragments":["why"]},{"Key":"same block","Fragments":["as"]},{"Key":"first test,","Fragments":["making"]},{"Key":" candidates.filter(_.toLowerCase.sorted","Fragments":["=="]},{"Key":"candidates.filter(_.toLowerCase.sorted ==","Fragments":["given.toLowerCase.sorted)"]},{"Key":" .foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e","Fragments":["if"]},{"Key":".foldLeft(Seq[String]())((b:Seq[String],a:String)=\u003e if","Fragments":["(b"]},{"Key":"if (b","Fragments":["exists"]},{"Key":"(b exists","Fragments":["(_"]},{"Key":"exists (_","Fragments":["equalsIgnoreCase"]},{"Key":"(_ equalsIgnoreCase","Fragments":["a))"]},{"Key":"equalsIgnoreCase a))","Fragments":["b"]},{"Key":"a)) b","Fragments":["else"]},{"Key":"b else","Fragments":["a+:b)"]},{"Key":" look","Fragments":["more"]},{"Key":" candidates.filter(w","Fragments":["=\u003e"]},{"Key":" w.toLowerCase.sorted","Fragments":["=="]},{"Key":"w.toLowerCase.sorted ==","Fragments":["given.toLowerCase.sorted"]},{"Key":"\u0026\u0026 w","Fragments":["equalsIgnoreCase"]},{"Key":"w equalsIgnoreCase","Fragments":["given)"]},{"Key":"I'd ask","Fragments":["you"]},{"Key":"ask you","Fragments":["to"]},{"Key":"test block","Fragments":["into"]},{"Key":"Probably you","Fragments":["already"]},{"Key":" filter(_.isLetterOrDigit)","Fragments":["is"]},{"Key":"filter(_.isLetterOrDigit) is","Fragments":["available"]},{"Key":"available for","Fragments":["normalizePlaintext"]},{"Key":"for normalizePlaintext","Fragments":["function."]},{"Key":"me (math.)max(1,squareSize(msg))","Fragments":["reads"]},{"Key":"(math.)max(1,squareSize(msg)) reads","Fragments":["better"]},{"Key":"Otherwise it","Fragments":["looks"]},{"Key":"a Java-style","Fragments":["for-loop"]},{"Key":"Java-style for-loop","Fragments":["and"]},{"Key":"for-loop and","Fragments":["a"]},{"Key":"a `var`","Fragments":["in"]},{"Key":"`var` in","Fragments":["`loopAgain`"]},{"Key":"in `loopAgain`","Fragments":["and"]},{"Key":"`loopAgain` and","Fragments":["in"]},{"Key":"general too","Fragments":["many"]},{"Key":"too many","Fragments":["trampoline"]},{"Key":"many trampoline","Fragments":["functions"]},{"Key":"trampoline functions","Fragments":["that"]},{"Key":"code hard","Fragments":["to"]},{"Key":"understand and","Fragments":["maintain."]},{"Key":"maintain. can","Fragments":["you"]},{"Key":"you simplify,","Fragments":["ideally"]},{"Key":"simplify, ideally","Fragments":["have"]},{"Key":"ideally have","Fragments":["just"]},{"Key":"one (tail-)recursive","Fragments":["function?"]},{"Key":"hint: the","Fragments":["collection"]},{"Key":"function `find`","Fragments":["might"]},{"Key":"`find` might","Fragments":["come"]},{"Key":"might come","Fragments":["in"]},{"Key":" Probably,","Fragments":["yes."]},{"Key":"fact, I'd","Fragments":["like"]},{"Key":"define scores","Fragments":["without"]},{"Key":"scores without","Fragments":["a"]},{"Key":"big map...","Fragments":["but"]},{"Key":"map... but","Fragments":["I"]},{"Key":"think I'm","Fragments":["trying","going"]},{"Key":"too smart...","Fragments":["and"]},{"Key":"smart... and","Fragments":["it"]},{"Key":" Wouldn't","Fragments":["a"]},{"Key":"Wouldn't a","Fragments":["map"]},{"Key":"to points","Fragments":["easier?"]},{"Key":"I could,","Fragments":["but"]},{"Key":"could, but","Fragments":["I"]},{"Key":"the return-early-return-often","Fragments":["approach."]},{"Key":"return-early-return-often approach.","Fragments":["It"]},{"Key":"approach. It","Fragments":["takes"]},{"Key":"It takes","Fragments":["care","some"]},{"Key":"and then,","Fragments":["so"]},{"Key":"then, so","Fragments":["the"]},{"Key":"reader never","Fragments":["have"]},{"Key":"go check","Fragments":["at"]},{"Key":"the of","Fragments":["the"]},{"Key":"the if/elseif/else","Fragments":["loop"]},{"Key":"if/elseif/else loop","Fragments":["to"]},{"Key":"loop to","Fragments":["see"]},{"Key":"if something","Fragments":["else"]},{"Key":"else will","Fragments":["happen."]},{"Key":"the return-keyword","Fragments":["if"]},{"Key":"return-keyword if","Fragments":["you"]},{"Key":"use if/elseif/else","Fragments":["blocks"]},{"Key":" zipping","Fragments":["the"]},{"Key":"strings could","Fragments":["make"]},{"Key":"First version.","Fragments":["Not"]},{"Key":"version. Not","Fragments":["very"]},{"Key":"Not very","Fragments":["happy"]},{"Key":"it. Pretty","Fragments":["sure"]},{"Key":"cleaner with","Fragments":["further"]},{"Key":"with further","Fragments":["research"]},{"Key":"further research","Fragments":["and"]},{"Key":"research and","Fragments":["experimentation."]},{"Key":"first draft.","Fragments":["It"]},{"Key":"draft. It","Fragments":["passes"]},{"Key":"It passes","Fragments":["the"]},{"Key":"but Bob","Fragments":["still"]},{"Key":"Bob still","Fragments":["seems"]},{"Key":"still seems","Fragments":["like"]},{"Key":"like quite","Fragments":["a"]},{"Key":"a complicated","Fragments":["kid"]},{"Key":"complicated kid","Fragments":["right"]},{"Key":"kid right","Fragments":["now."]},{"Key":"Replaced `map`","Fragments":["and"]},{"Key":"and `sum`","Fragments":["stuff"]},{"Key":"`sum` stuff","Fragments":["with"]},{"Key":"stuff with","Fragments":["`count`"]},{"Key":"with `count`","Fragments":["as"]},{"Key":"`count` as","Fragments":["suggested"]},{"Key":"suggested by","Fragments":["@myles"]},{"Key":"to simplify.","Fragments":[":-)"]},{"Key":"a `PartialFunction`:","Fragments":["Create"]},{"Key":"`PartialFunction`: Create","Fragments":["a"]},{"Key":"Create a","Fragments":["`Map`"]},{"Key":"`Map` from","Fragments":["clear"]},{"Key":"from clear","Fragments":["text"]},{"Key":"clear text","Fragments":["to"]},{"Key":"to encoded","Fragments":["`Char`,"]},{"Key":"encoded `Char`,","Fragments":["then"]},{"Key":"`Char`, then","Fragments":["use"]},{"Key":"to `map`","Fragments":["over"]},{"Key":"to encode","Fragments":["..."]},{"Key":" Replace","Fragments":["nucleotideCounts"]},{"Key":"Replace nucleotideCounts","Fragments":["using"]},{"Key":"nucleotideCounts using","Fragments":["groupBy"]},{"Key":"groupBy +","Fragments":["mapValues."]},{"Key":"+ mapValues.","Fragments":["It"]},{"Key":"mapValues. It","Fragments":["might"]},{"Key":"than call","Fragments":["count"]},{"Key":"method several","Fragments":["times."]},{"Key":"if \"\"","Fragments":["=\u003e"]},{"Key":"looks strange.","Fragments":["does"]},{"Key":"strange. does","Fragments":["this"]},{"Key":"this even","Fragments":["compile?"]},{"Key":"even compile?","Fragments":["have"]},{"Key":"compile? have","Fragments":["it"]},{"Key":"it either","Fragments":["as"]},{"Key":"if e.isEmpty","Fragments":["=\u003e"]},{"Key":"you agree","Fragments":["that"]},{"Key":"looks now","Fragments":["much"]},{"Key":"now much","Fragments":["more"]},{"Key":"elegant and","Fragments":["sweet?","beautiful"]},{"Key":"and sweet?","Fragments":[":-)"]},{"Key":"need that","Fragments":["if-statement"]},{"Key":"that if-statement","Fragments":["at"]},{"Key":"if-statement at","Fragments":["all"]},{"Key":"all (and","Fragments":["pls:"]},{"Key":"(and pls:","Fragments":["no"]},{"Key":"pls: no","Fragments":["unnecessary"]},{"Key":"no unnecessary","Fragments":["semicolons"]},{"Key":"unnecessary semicolons","Fragments":["anywhere)."]},{"Key":"```count``` function","Fragments":["instead"]},{"Key":"I resubmitted","Fragments":["a"]},{"Key":"resubmitted a","Fragments":["new"]},{"Key":"new solution.","Fragments":["I"]},{"Key":"not familiar","Fragments":["with"]},{"Key":"useful count","Fragments":["function."]},{"Key":"And zipping","Fragments":["is"]},{"Key":"zipping is","Fragments":["enough,"]},{"Key":"is enough,","Fragments":["no"]},{"Key":"enough, no","Fragments":["need"]},{"Key":"copy in","Fragments":["order"]},{"Key":"Unfortunately this","Fragments":["is"]},{"Key":"not my","Fragments":["work"]},{"Key":"my work","Fragments":["completely,"]},{"Key":"work completely,","Fragments":["I"]},{"Key":"completely, I","Fragments":["mixed"]},{"Key":"I mixed","Fragments":["from"]},{"Key":"mixed from","Fragments":["2"]},{"Key":"from 2","Fragments":["others,"]},{"Key":"2 others,","Fragments":["but"]},{"Key":"others, but","Fragments":["this"]},{"Key":" Must","Fragments":["be."]},{"Key":"Must be.","Fragments":["Here's"]},{"Key":"be. Here's","Fragments":["the"]},{"Key":"Here's the","Fragments":["one"]},{"Key":"that came","Fragments":["with"]},{"Key":"came with","Fragments":["mine"]},{"Key":"with mine","Fragments":["if"]},{"Key":"mine if","Fragments":["you"]},{"Key":"check (although","Fragments":["it"]},{"Key":"(although it","Fragments":["is","would"]},{"Key":"is absurdly","Fragments":["trivial):"]},{"Key":"should \"be","Fragments":["undefined"]},{"Key":"\"be undefined","Fragments":["for"]},{"Key":"undefined for","Fragments":["strands"]},{"Key":"for strands","Fragments":["of"]},{"Key":"strands of","Fragments":["unequal"]},{"Key":"of unequal","Fragments":["length\""]},{"Key":"unequal length\"","Fragments":["in"]},{"Key":"length\" in","Fragments":["{"]},{"Key":" an[IllegalArgumentException]","Fragments":["should"]},{"Key":"an[IllegalArgumentException] should","Fragments":["be"]},{"Key":"be thrownBy","Fragments":["{"]},{"Key":" Hamming.compute(\"AAACTAGGGG\",","Fragments":["\"AGGCTAGCGGTAGGAC\")"]},{"Key":"skip an","Fragments":["else"]},{"Key":"an else","Fragments":["word"]},{"Key":"else word","Fragments":["because"]},{"Key":"word because","Fragments":["if"]},{"Key":"exception will","Fragments":["be"]},{"Key":"be thrown","Fragments":["your"]},{"Key":"thrown your","Fragments":["program"]},{"Key":"your program","Fragments":["terminate"]},{"Key":"program terminate","Fragments":["anyway."]},{"Key":" None","Fragments":["of"]},{"Key":"for Hamming","Fragments":["when"]},{"Key":"Hamming when","Fragments":["I"]},{"Key":"I completed","Fragments":["it"]},{"Key":"completed it","Fragments":["had"]},{"Key":"that threw","Fragments":["an"]},{"Key":"threw an","Fragments":["IllegalArgumentException."]},{"Key":"an IllegalArgumentException.","Fragments":["In"]},{"Key":"IllegalArgumentException. In","Fragments":["cases"]},{"Key":"In cases","Fragments":["where"]},{"Key":"strings are","Fragments":["not"]},{"Key":"not of","Fragments":["equal","any"]},{"Key":"equal length,","Fragments":["we"]},{"Key":"length, we","Fragments":["simply"]},{"Key":"we simply","Fragments":["\"ignore\""]},{"Key":"simply \"ignore\"","Fragments":["the"]},{"Key":"\"ignore\" the","Fragments":["extra"]},{"Key":"extra length","Fragments":["cases"]},{"Key":"length cases","Fragments":["and"]},{"Key":"still return","Fragments":["the"]},{"Key":"Hamming distance.","Fragments":["Possibly"]},{"Key":"distance. Possibly","Fragments":["a"]},{"Key":"Possibly a","Fragments":["test"]},{"Key":"test file","Fragments":["they"]},{"Key":"file they","Fragments":["updated?"]},{"Key":"sure, I'll","Fragments":["have"]},{"Key":"on Monday","Fragments":["when"]},{"Key":"Monday when","Fragments":["I"]},{"Key":"my computer","Fragments":["where"]},{"Key":"computer where","Fragments":["I"]},{"Key":"all my","Fragments":["exercisms"]},{"Key":"my exercisms","Fragments":[":)"]},{"Key":"exercisms :)","Fragments":["I'm"]},{"Key":"I'm sure","Fragments":["I"]},{"Key":"that though","Fragments":["since"]},{"Key":"though since","Fragments":["you're"]},{"Key":"you're probably","Fragments":["reading"]},{"Key":"probably reading","Fragments":["it"]},{"Key":"reading it","Fragments":["correctly."]},{"Key":"it correctly.","Fragments":["I"]},{"Key":"correctly. I","Fragments":["wonder"]},{"Key":"new they","Fragments":["added."]},{"Key":"Right, but","Fragments":["zip"]},{"Key":"but zip","Fragments":["won't"]},{"Key":"zip won't","Fragments":["throw"]},{"Key":"won't throw","Fragments":["illegal"]},{"Key":"throw illegal","Fragments":["arg"]},{"Key":"illegal arg","Fragments":["exception"]},{"Key":"arg exception","Fragments":["if"]},{"Key":"lengths are","Fragments":["unequal,"]},{"Key":"are unequal,","Fragments":["which"]},{"Key":"unequal, which","Fragments":["is"]},{"Key":"is specified","Fragments":["in"]},{"Key":"on length","Fragments":["based"]},{"Key":"length based","Fragments":["on"]},{"Key":"how zip","Fragments":["works"]},{"Key":"zip works","Fragments":["for"]},{"Key":"exercise. It","Fragments":["will"]},{"Key":"will zip","Fragments":["characters"]},{"Key":"zip characters","Fragments":["to"]},{"Key":"to Option","Fragments":["objects,"]},{"Key":"Option objects,","Fragments":["which"]},{"Key":"objects, which","Fragments":["will"]},{"Key":"will still","Fragments":["yield"]},{"Key":"still yield","Fragments":["a"]},{"Key":"yield a","Fragments":["false"]},{"Key":"a false","Fragments":["comparison","on"]},{"Key":"false comparison","Fragments":["when"]},{"Key":"comparison when","Fragments":["you"]},{"Key":" Updated","Fragments":["once"]},{"Key":"Updated once","Fragments":["I"]},{"Key":"to short-circuit","Fragments":["the"]},{"Key":"short-circuit the","Fragments":["\"s","need"]},{"Key":"the \"s","Fragments":["=="]},{"Key":"\"s ==","Fragments":["s1\""]},{"Key":"== s1\"","Fragments":["case"]},{"Key":"s1\" case","Fragments":["(although"]},{"Key":"case (although","Fragments":["it"]},{"Key":"efficient in","Fragments":["those"]},{"Key":"in those","Fragments":["cases.)"]},{"Key":"understand what's","Fragments":["going"]},{"Key":"performance difference","Fragments":["in"]},{"Key":"running 3","Fragments":["different"]},{"Key":"3 different","Fragments":[".filter()"]},{"Key":"different .filter()","Fragments":["instead"]},{"Key":".filter() instead","Fragments":["of"]},{"Key":"of adding","Fragments":["more"]},{"Key":"adding more","Fragments":["conditions"]},{"Key":"more conditions","Fragments":["to"]},{"Key":"first one?","Fragments":["ie:"]},{"Key":" .filter(candidate","Fragments":["=\u003e"]},{"Key":".filter(candidate =\u003e","Fragments":["candidate.length"]},{"Key":"=\u003e candidate.length","Fragments":["=="]},{"Key":"candidate.length ==","Fragments":["originalWord.length"]},{"Key":"== originalWord.length","Fragments":["\u0026\u0026"]},{"Key":"originalWord.length \u0026\u0026","Fragments":["notTheSameWordAsOriginal(candidate)"]},{"Key":"\u0026\u0026 notTheSameWordAsOriginal(candidate)","Fragments":["\u0026\u0026"]},{"Key":"notTheSameWordAsOriginal(candidate) \u0026\u0026","Fragments":["hasTheSameCharsAsOriginal(candidate))"]},{"Key":"Then every","Fragments":["argument"]},{"Key":"every argument","Fragments":["of"]},{"Key":"any public","Fragments":["method"]},{"Key":"public method","Fragments":["should"]},{"Key":"method should","Fragments":["be"]},{"Key":"be prefixed","Fragments":["with"]},{"Key":"prefixed with","Fragments":["original."]},{"Key":"the originally","Fragments":["provided"]},{"Key":"originally provided","Fragments":["one,"]},{"Key":"provided one,","Fragments":["not"]},{"Key":"one, not","Fragments":["\"a"]},{"Key":"not \"a","Fragments":["word\""]},{"Key":"main argument","Fragments":["called"]},{"Key":"argument called","Fragments":["originalWord?"]},{"Key":"called originalWord?","Fragments":["What"]},{"Key":"originalWord? What","Fragments":["is"]},{"Key":"so original","Fragments":["about"]},{"Key":"original about","Fragments":["it?"]},{"Key":" god","Fragments":["damn"]},{"Key":"god damn","Fragments":["it,"]},{"Key":"damn it,","Fragments":["i"]},{"Key":"i forget","Fragments":["about"]},{"Key":"less effective","Fragments":["that"]},{"Key":"effective that","Fragments":["fold"]},{"Key":"fold based","Fragments":["in"]},{"Key":"of memory","Fragments":["use"]},{"Key":"memory use","Fragments":["because"]},{"Key":"use because","Fragments":["you"]},{"Key":"are going","Fragments":["to"]},{"Key":"to replicate","Fragments":["the"]},{"Key":"replicate the","Fragments":["whole"]},{"Key":"whole collection","Fragments":["in"]},{"Key":"collection in","Fragments":["memory"]},{"Key":"in memory","Fragments":["before"]},{"Key":"memory before","Fragments":["running"]},{"Key":"before running","Fragments":["final"]},{"Key":"running final","Fragments":["``map(_.length)``"]},{"Key":"final ``map(_.length)``","Fragments":["step."]},{"Key":"Simplified solution","Fragments":["and"]},{"Key":"included @myrl's","Fragments":["suggestion"]},{"Key":"@myrl's suggestion","Fragments":["to"]},{"Key":"use only","Fragments":["a"]},{"Key":" foreach/flatMap","Fragments":["are"]},{"Key":"foreach/flatMap are","Fragments":["operations"]},{"Key":"are operations","Fragments":["of"]},{"Key":"operations of","Fragments":["Option"]},{"Key":"Option (=","Fragments":["var's"]},{"Key":"(= var's","Fragments":["first"]},{"Key":"var's first","Fragments":["and"]},{"Key":"and last),","Fragments":["not"]},{"Key":"last), not","Fragments":["of"]},{"Key":"These Option","Fragments":["functions"]},{"Key":"are named","Fragments":["like"]},{"Key":"named like","Fragments":["the"]},{"Key":"resp. Collection","Fragments":["functions"]},{"Key":"reason (both","Fragments":["being"]},{"Key":"(both being","Fragments":["monads)."]},{"Key":"being monads).","Fragments":["But"]},{"Key":"monads). But","Fragments":["of"]},{"Key":"can sometimes","Fragments":["be"]},{"Key":"sometimes be","Fragments":["the"]},{"Key":"the cause","Fragments":["of"]},{"Key":"cause of","Fragments":["confusion"]},{"Key":"of confusion","Fragments":["(I"]},{"Key":"confusion (I","Fragments":["occasionally"]},{"Key":"(I occasionally","Fragments":["fall"]},{"Key":"occasionally fall","Fragments":["into"]},{"Key":"fall into","Fragments":["this"]},{"Key":"this trap","Fragments":["myself,"]},{"Key":"trap myself,","Fragments":["too"]},{"Key":"myself, too","Fragments":["when"]},{"Key":"too when","Fragments":["there"]},{"Key":"are different","Fragments":["kinds"]},{"Key":"different kinds","Fragments":["of"]},{"Key":"of monads","Fragments":["involved)."]},{"Key":"never an","Fragments":["iteration"]},{"Key":"an iteration","Fragments":["over"]},{"Key":" Technically","Fragments":["a"]},{"Key":"Technically a","Fragments":["Deque"]},{"Key":"a Deque","Fragments":["allows"]},{"Key":"Deque allows","Fragments":["insertion/extraction"]},{"Key":"allows insertion/extraction","Fragments":["in"]},{"Key":"insertion/extraction in","Fragments":["constant"]},{"Key":"in constant","Fragments":["time"]},{"Key":"time (or","Fragments":["close"]},{"Key":"(or close","Fragments":["to)"]},{"Key":"close to)","Fragments":["as"]},{"Key":"to) as","Fragments":["explained"]},{"Key":"as explained","Fragments":["in"]},{"Key":"explained in","Fragments":["the"]},{"Key":"Readme, but","Fragments":["your"]},{"Key":"is iterating","Fragments":["over"]},{"Key":"full sequence","Fragments":["of"]},{"Key":"of links","Fragments":["via"]},{"Key":"links via","Fragments":["flatmap/foreach,"]},{"Key":"via flatmap/foreach,","Fragments":["which"]},{"Key":"flatmap/foreach, which","Fragments":["is"]},{"Key":"is linear","Fragments":["time."]},{"Key":"with \"require\"","Fragments":["and"]},{"Key":"\"require\" and","Fragments":["the"]},{"Key":"the \".tupled\"","Fragments":["thingy"]},{"Key":"\".tupled\" thingy","Fragments":["hidden"]},{"Key":"thingy hidden","Fragments":["by"]},{"Key":"hidden by","Fragments":["an"]},{"Key":" (imagine","Fragments":["functions"]},{"Key":"(imagine functions","Fragments":["\"different\""]},{"Key":"functions \"different\"","Fragments":["and"]},{"Key":"\"different\" and","Fragments":["\"function2AsTupled\""]},{"Key":"and \"function2AsTupled\"","Fragments":["as"]},{"Key":"\"function2AsTupled\" as","Fragments":["imported"]},{"Key":"as imported","Fragments":["from"]},{"Key":"imported from","Fragments":["some"]},{"Key":"some shared","Fragments":["code"]},{"Key":"shared code","Fragments":["source","in"]},{"Key":"code source","Fragments":["similar"]},{"Key":"source similar","Fragments":["to"]},{"Key":"course one","Fragments":["could"]},{"Key":"say \"nucleotidePairs","Fragments":["count"]},{"Key":"\"nucleotidePairs count","Fragments":["different[Nucleotide]\"","different\"."]},{"Key":"count different[Nucleotide]\"","Fragments":["or"]},{"Key":"different[Nucleotide]\" or","Fragments":["even"]},{"Key":"even \"nucleotidePairs","Fragments":["count"]},{"Key":"count different\".","Fragments":["But"]},{"Key":"different\". But","Fragments":["I"]},{"Key":"still find","Fragments":["this"]},{"Key":"version more","Fragments":["readable."]},{"Key":" @delores","Fragments":["@delores"]},{"Key":" Hope","Fragments":["you"]},{"Key":"Hope you","Fragments":["guys"]},{"Key":"you guys","Fragments":["like"]},{"Key":"guys like","Fragments":["this"]},{"Key":"version somewhat","Fragments":["better?"]},{"Key":"the `if`altogether","Fragments":["as"]},{"Key":"`if`altogether as","Fragments":["it"]},{"Key":"just returns","Fragments":["the"]},{"Key":"the truth","Fragments":["value"]},{"Key":"truth value","Fragments":["of"]},{"Key":"of long","Fragments":["\"train"]},{"Key":"long \"train","Fragments":["wrecks\""]},{"Key":"\"train wrecks\"","Fragments":["-"]},{"Key":"wrecks\" -","Fragments":["split"]},{"Key":"split things","Fragments":["up"]},{"Key":"things up","Fragments":["into"]},{"Key":"the rows","Fragments":["and"]},{"Key":"rows and","Fragments":["files/columns."]},{"Key":"and files/columns.","Fragments":["this"]},{"Key":"files/columns. this","Fragments":["will"]},{"Key":"will improve","Fragments":["readability"]},{"Key":"for `get`:","Fragments":["try"]},{"Key":"`get`: try","Fragments":["to"]},{"Key":"to \"stay","Fragments":["in"]},{"Key":"\"stay in","Fragments":["the"]},{"Key":"the Monad\"","Fragments":["as"]},{"Key":"Monad\" as","Fragments":["long"]},{"Key":"possible, no","Fragments":["premature"]},{"Key":"no premature","Fragments":["`getOrElse`."]},{"Key":"premature `getOrElse`.","Fragments":["you"]},{"Key":"`getOrElse`. you","Fragments":["can"]},{"Key":"and `orElse`","Fragments":["instead."]},{"Key":"`orElse` instead.","Fragments":["only"]},{"Key":"instead. only","Fragments":["the"]},{"Key":"final result","Fragments":["value"]},{"Key":"value should","Fragments":["use"]},{"Key":" CamelCase","Fragments":["is"]},{"Key":"CamelCase is","Fragments":["considered"]},{"Key":"considered idiomatic","Fragments":["correct"]},{"Key":"idiomatic correct","Fragments":["scala."]},{"Key":" (Even","Fragments":["though"]},{"Key":"(Even though","Fragments":["I"]},{"Key":"think underscore_case","Fragments":["reads"]},{"Key":"underscore_case reads","Fragments":["better)"]},{"Key":"Yes. You","Fragments":["are"]},{"Key":" ```numberToRoman```","Fragments":["should"]},{"Key":"```numberToRoman``` should","Fragments":["be"]},{"Key":"a ```val```","Fragments":["or"]},{"Key":"```val``` or","Fragments":["```lazy"]},{"Key":"or ```lazy","Fragments":["val```"]},{"Key":"val``` .","Fragments":["Unless"]},{"Key":". Unless","Fragments":["I"]},{"Key":"Unless I","Fragments":["am"]},{"Key":"am mistaken,","Fragments":["```numberToRoman```"]},{"Key":"mistaken, ```numberToRoman```","Fragments":["is"]},{"Key":"```numberToRoman``` is","Fragments":["going"]},{"Key":"be reevaluated","Fragments":["each"]},{"Key":" Passed","Fragments":["tests,"]},{"Key":"Passed tests,","Fragments":["but"]},{"Key":"but obviously","Fragments":["worng"]},{"Key":"obviously worng","Fragments":["without"]},{"Key":"worng without","Fragments":["any"]},{"Key":"you run","Fragments":["the"]},{"Key":"tests? This","Fragments":["code"]},{"Key":"fail a","Fragments":["bunch"]},{"Key":"cases. If","Fragments":["your"]},{"Key":"are passing","Fragments":["did"]},{"Key":"passing did","Fragments":["you"]},{"Key":"the pending","Fragments":["statements?"]},{"Key":" Simplest","Fragments":["code"]},{"Key":"Simplest code","Fragments":["I"]},{"Key":"think of,","Fragments":["its"]},{"Key":"of, its","Fragments":["very"]},{"Key":"its very","Fragments":["java-like"]},{"Key":"very java-like","Fragments":["though..."]},{"Key":"see, thanks","Fragments":["for"]},{"Key":"the advice.","Fragments":["Just"]},{"Key":"advice. Just","Fragments":["fixed"]},{"Key":"Just fixed","Fragments":["and"]},{"Key":" `zip`","Fragments":["ignores"]},{"Key":"`zip` ignores","Fragments":["remaining"]},{"Key":"ignores remaining","Fragments":["elements"]},{"Key":"remaining elements","Fragments":["of"]},{"Key":"longer collection,","Fragments":["you"]},{"Key":"collection, you","Fragments":["don't"]},{"Key":"handle that.","Fragments":["Also,"]},{"Key":"that. Also,","Fragments":["try"]},{"Key":"Also, try","Fragments":["not"]},{"Key":"variables if","Fragments":["it's"]},{"Key":"necessary. Use","Fragments":["fold"]},{"Key":"Use fold","Fragments":["or"]},{"Key":"have such","Fragments":["similar"]},{"Key":"such similar","Fragments":["implementations"]},{"Key":"similar implementations","Fragments":["for"]},{"Key":"for grade","Fragments":["and"]},{"Key":"grade and","Fragments":["add!"]},{"Key":"and add!","Fragments":["Great"]},{"Key":"add! Great","Fragments":["minds"]},{"Key":"Great minds","Fragments":["think"]},{"Key":"minds think","Fragments":["alike!"]},{"Key":"tests sort","Fragments":["of"]},{"Key":"of implied","Fragments":["that"]},{"Key":"implied that","Fragments":["`Squares`"]},{"Key":"that `Squares`","Fragments":["should"]},{"Key":"`Squares` should","Fragments":["be"]},{"Key":"this design","Fragments":["choice"]},{"Key":"design choice","Fragments":["makes"]},{"Key":"choice makes","Fragments":["no"]},{"Key":"makes no","Fragments":["sense"]},{"Key":"no sense","Fragments":["to","to"]},{"Key":"me. Why","Fragments":["use"]},{"Key":"class when","Fragments":["there's"]},{"Key":"when there's","Fragments":["no"]},{"Key":"no instance","Fragments":["specific"]},{"Key":"instance specific","Fragments":["data?"]},{"Key":"change this","Fragments":["to"]},{"Key":"just perform","Fragments":["a"]},{"Key":"writing out","Fragments":["the"]},{"Key":"FP style:","Fragments":["no"]},{"Key":"style: no","Fragments":["side"]},{"Key":"your case:","Fragments":["no"]},{"Key":"case: no","Fragments":["`var`,"]},{"Key":"no `var`,","Fragments":["no"]},{"Key":"`var`, no","Fragments":["`foreach`."]},{"Key":"no `foreach`.","Fragments":["Instead"]},{"Key":"`foreach`. Instead","Fragments":["use"]},{"Key":"use `map`,","Fragments":["`flatMap`"]},{"Key":"`map`, `flatMap`","Fragments":["and"]},{"Key":"The contract","Fragments":["defined"]},{"Key":"contract defined","Fragments":["by"]},{"Key":"defined by","Fragments":["the"]},{"Key":"tests does","Fragments":["not"]},{"Key":"allow to","Fragments":["keep"]},{"Key":"names sorted","Fragments":["on"]},{"Key":"sorted on","Fragments":["entry"]},{"Key":"on entry","Fragments":["which"]},{"Key":"entry which","Fragments":["is"]},{"Key":"a pity.","Fragments":["So"]},{"Key":"pity. So","Fragments":["in"]},{"Key":"in `sorted`","Fragments":["the"]},{"Key":"`sorted` the","Fragments":["sort"]},{"Key":"the sort","Fragments":["is"]},{"Key":"sort is","Fragments":["done"]},{"Key":"done on","Fragments":["demand."]},{"Key":"Cool. Thanks","Fragments":["for"]},{"Key":"first if-clause","Fragments":["can"]},{"Key":"if-clause can","Fragments":["be"]},{"Key":"why so","Fragments":["many"]},{"Key":"many empty","Fragments":["lines?"]},{"Key":"empty lines?","Fragments":[":-)"]},{"Key":"like \"isQuestion\"","Fragments":["etc."]},{"Key":"Since you've","Fragments":["done"]},{"Key":"you've done","Fragments":["it"]},{"Key":"it recursively,","Fragments":["couldn't"]},{"Key":"recursively, couldn't","Fragments":["you"]},{"Key":"couldn't you","Fragments":["have"]},{"Key":"or foldRight","Fragments":["to"]},{"Key":"foldRight to","Fragments":["achieve"]},{"Key":" Client","Fragments":["code"]},{"Key":"Client code","Fragments":["can"]},{"Key":"change `name`","Fragments":["due"]},{"Key":"`name` due","Fragments":["to"]},{"Key":"public var.","Fragments":["Also,"]},{"Key":"var. Also,","Fragments":["`r`"]},{"Key":"Also, `r`","Fragments":["seems"]},{"Key":"`r` seems","Fragments":["to"]},{"Key":"be unused","Fragments":["by"]},{"Key":"unused by","Fragments":["`Robot`"]},{"Key":"by `Robot`","Fragments":["and"]},{"Key":"`Robot` and","Fragments":["yet"]},{"Key":"yet is","Fragments":["public"]},{"Key":"public so","Fragments":["any"]},{"Key":"any client","Fragments":["can"]},{"Key":"client can","Fragments":["use"]},{"Key":"robot to","Fragments":["generate"]},{"Key":"generate random","Fragments":["values."]},{"Key":"9 I","Fragments":["want"]},{"Key":"match that","Fragments":["x"]},{"Key":"that x","Fragments":["is"]},{"Key":"x is","Fragments":["1"]},{"Key":"is 1","Fragments":["not"]},{"Key":"1 not","Fragments":["x"]},{"Key":"not x","Fragments":["%y"]},{"Key":"x %y","Fragments":["is"]},{"Key":"%y is","Fragments":["1."]},{"Key":" ok","Fragments":["right."]},{"Key":"ok right.","Fragments":["but"]},{"Key":"right. but","Fragments":["my"]},{"Key":"my comment","Fragments":["should"]},{"Key":"comment should","Fragments":["tell"]},{"Key":"should tell","Fragments":["you"]},{"Key":"tell you","Fragments":["that"]},{"Key":"good style,","Fragments":["hard"]},{"Key":"style, hard","Fragments":["to"]},{"Key":"and understand.","Fragments":[":-)"]},{"Key":"can pattern","Fragments":["match"]},{"Key":"match `1`","Fragments":["directly"]},{"Key":"`1` directly","Fragments":["in"]},{"Key":"9 -","Fragments":["you"]},{"Key":"for `0`","Fragments":["already"]},{"Key":"`0` already","Fragments":["in"]},{"Key":"next line.","Fragments":[":-)"]},{"Key":"declare them","Fragments":["as"]},{"Key":"as ```lazy","Fragments":["val```"]},{"Key":"val``` as","Fragments":["the"]},{"Key":"inefficient in","Fragments":["itself"]},{"Key":"itself (there","Fragments":["is"]},{"Key":"copy made","Fragments":["of"]},{"Key":"made of","Fragments":["the"]},{"Key":"guess overall","Fragments":["you"]},{"Key":"overall you","Fragments":["are"]},{"Key":"better off","Fragments":["w/","writing"]},{"Key":"off w/","Fragments":["this"]},{"Key":"this `reverse`","Fragments":["at"]},{"Key":"`reverse` at","Fragments":["the"]},{"Key":"end in","Fragments":["terms"]},{"Key":"of efficiency.","Fragments":["Simplicity"]},{"Key":"efficiency. Simplicity","Fragments":["and"]},{"Key":"Simplicity and","Fragments":["readability"]},{"Key":"and readability","Fragments":["is"]},{"Key":"another matter,","Fragments":["of"]},{"Key":"matter, of","Fragments":["course."]},{"Key":"Btw, there","Fragments":["is"]},{"Key":"the `Seq`","Fragments":["operator"]},{"Key":"`Seq` operator","Fragments":["`:+`"]},{"Key":"operator `:+`","Fragments":["to"]},{"Key":"`:+` to","Fragments":["append"]},{"Key":"append a","Fragments":["single"]},{"Key":"single element","Fragments":["to"]},{"Key":"element to","Fragments":["the"]},{"Key":"to mine,","Fragments":["so"]},{"Key":"mine, so","Fragments":["it"]},{"Key":"it great","Fragments":[":D"]},{"Key":"believe if","Fragments":["you"]},{"Key":"change `prime","Fragments":["::"]},{"Key":"`prime ::","Fragments":["acc`"]},{"Key":":: acc`","Fragments":["to"]},{"Key":"acc` to","Fragments":["`acc"]},{"Key":"to `acc","Fragments":[":::"]},{"Key":"`acc :::","Fragments":["List(prime)`"]},{"Key":"::: List(prime)`","Fragments":["You"]},{"Key":"List(prime)` You","Fragments":["will"]},{"Key":"save precious","Fragments":["CPU"]},{"Key":"precious CPU","Fragments":["time"]},{"Key":"CPU time","Fragments":["on"]},{"Key":"on reverse","Fragments":["method"]},{"Key":"reverse method","Fragments":[":)"]},{"Key":"Probably Achim","Fragments":["knows"]},{"Key":"Achim knows","Fragments":["a"]},{"Key":"knows a","Fragments":["bit"]},{"Key":"mutable state","Fragments":["for"]},{"Key":"state for","Fragments":["this"]},{"Key":"exercise. You","Fragments":["can"]},{"Key":"use ``split``","Fragments":["function"]},{"Key":"``split`` function","Fragments":["to"]},{"Key":"to tokenize","Fragments":["your"]},{"Key":"tokenize your","Fragments":["input"]},{"Key":"input and","Fragments":["``foldLeft``"]},{"Key":"and ``foldLeft``","Fragments":["or"]},{"Key":"``foldLeft`` or","Fragments":["``foldRight``"]},{"Key":"or ``foldRight``","Fragments":["to"]},{"Key":"``foldRight`` to","Fragments":["compute"]},{"Key":"But use","Fragments":["the"]},{"Key":"general types,","Fragments":["in"]},{"Key":"types, in","Fragments":["this"]},{"Key":"case Map","Fragments":["instead"]},{"Key":"of HashMap","Fragments":["and"]},{"Key":"HashMap and","Fragments":["LinkedHashMap"]},{"Key":"and LinkedHashMap","Fragments":["if"]},{"Key":"LinkedHashMap if","Fragments":["you"]},{"Key":" db","Fragments":["is"]},{"Key":"db is","Fragments":["public"]},{"Key":"public and","Fragments":["should"]},{"Key":"therefore not","Fragments":["expose"]},{"Key":"have sorted()","Fragments":["w/o"]},{"Key":"sorted() w/o","Fragments":["relying"]},{"Key":"w/o relying","Fragments":["on"]},{"Key":"effects (mutable","Fragments":["result"]},{"Key":"(mutable result","Fragments":["Map"]},{"Key":"result Map","Fragments":["and"]},{"Key":"about Predef.","Fragments":["Thanks!"]},{"Key":"the String/Collection","Fragments":["function"]},{"Key":"String/Collection function","Fragments":["\".isEmpty\"."]},{"Key":"way for","Fragments":["a"]},{"Key":"is \"(0","Fragments":["to/until"]},{"Key":"\"(0 to/until","Fragments":["x)\"."]},{"Key":"your Range","Fragments":["you"]},{"Key":"Range you","Fragments":["could"]},{"Key":"out zipping","Fragments":["the"]},{"Key":"version this","Fragments":["one"]},{"Key":"actually matches","Fragments":["against"]},{"Key":"matches against","Fragments":["`text`"]},{"Key":"against `text`","Fragments":["and"]},{"Key":"`text` and","Fragments":["assigns"]},{"Key":"and assigns","Fragments":["to"]},{"Key":"assigns to","Fragments":["a"]},{"Key":"value `t`","Fragments":["that"]},{"Key":"`t` that","Fragments":["is"]},{"Key":"conditionals which","Fragments":["seems"]},{"Key":"sure using","Fragments":["a"]},{"Key":"mutable map","Fragments":["all","as"]},{"Key":"map all","Fragments":["over"]},{"Key":"all over","Fragments":["is"]},{"Key":"over is","Fragments":["appropriate"]},{"Key":"appropriate in","Fragments":["functionnal"]},{"Key":"in functionnal","Fragments":["programming."]},{"Key":"should this","Fragments":["```map(identity)```"]},{"Key":"```map(identity)``` be","Fragments":["good"]},{"Key":"good for?","Fragments":["Strings"]},{"Key":"for? Strings","Fragments":["are"]},{"Key":" Missing:","Fragments":["the"]},{"Key":"Missing: the","Fragments":["check"]},{"Key":" all","Fragments":["versions"]},{"Key":"all versions","Fragments":["make"]},{"Key":"versions make","Fragments":["good"]},{"Key":"make good","Fragments":["sense."]},{"Key":"even more:","Fragments":["there"]},{"Key":"more: there","Fragments":["is"]},{"Key":"special purpose","Fragments":["collection"]},{"Key":"purpose collection","Fragments":["function"]},{"Key":"function \"count\"","Fragments":["that"]},{"Key":"\"count\" that","Fragments":["comes"]},{"Key":"comes in","Fragments":["handy"]},{"Key":"Predef there","Fragments":["is"]},{"Key":"prefer more","Fragments":["telling"]},{"Key":"more telling","Fragments":["names"]},{"Key":"names over","Fragments":["\"pf\""]},{"Key":"over \"pf\"","Fragments":["for"]},{"Key":"\"pf\" for","Fragments":["readability."]},{"Key":"Accidentally submitted","Fragments":["the"]},{"Key":"the iterations","Fragments":["in"]},{"Key":"iterations in","Fragments":["reverse"]},{"Key":"in reverse","Fragments":["order."]},{"Key":"reverse order.","Fragments":["Our"]},{"Key":"order. Our","Fragments":["favourites"]},{"Key":"Our favourites","Fragments":["are"]},{"Key":"favourites are","Fragments":["#1"]},{"Key":"are #1","Fragments":["and"]},{"Key":"#1 and","Fragments":["#2."]},{"Key":"In #3","Fragments":["and"]},{"Key":"#3 and","Fragments":["#4"]},{"Key":"and #4","Fragments":["we"]},{"Key":"#4 we","Fragments":["experimented"]},{"Key":"we experimented","Fragments":["with"]},{"Key":"experimented with","Fragments":["using"]},{"Key":"and unpacking","Fragments":["of"]},{"Key":"unpacking of","Fragments":["tuple"]},{"Key":"of tuple","Fragments":["in"]},{"Key":"in named","Fragments":["functions."]},{"Key":"var ```randomAsciiCodes```","Fragments":["instead"]},{"Key":"```randomAsciiCodes``` instead","Fragments":["of"]},{"Key":"just calling","Fragments":["```randomizeAsciiCodes```"]},{"Key":"calling ```randomizeAsciiCodes```","Fragments":["(perhaps"]},{"Key":"```randomizeAsciiCodes``` (perhaps","Fragments":["w/"]},{"Key":"(perhaps w/","Fragments":["a"]},{"Key":"name) directly?","Fragments":["(btw,"]},{"Key":"directly? (btw,","Fragments":["what"]},{"Key":"(btw, what","Fragments":["is"]},{"Key":"this 4","Fragments":["in"]},{"Key":"4 in","Fragments":["```take"]},{"Key":"in ```take","Fragments":["4```?"]},{"Key":"```take 4```?","Fragments":["Why"]},{"Key":"4```? Why","Fragments":["4,"]},{"Key":"Why 4,","Fragments":["not"]},{"Key":"4, not","Fragments":["7"]},{"Key":"not 7","Fragments":["or"]},{"Key":"7 or","Fragments":["22?)."]},{"Key":"use ```take```","Fragments":["to"]},{"Key":"```take``` to","Fragments":["also"]},{"Key":"also fetch","Fragments":["the"]},{"Key":"simplify you","Fragments":["could"]},{"Key":"like ```'A'","Fragments":["to"]},{"Key":"```'A' to","Fragments":["'Z'```."]},{"Key":"to 'Z'```.","Fragments":["I"]},{"Key":"'Z'```. I","Fragments":["would"]},{"Key":"another such","Fragments":["Range"]},{"Key":"such Range","Fragments":["for"]},{"Key":" ```randomizeAsciiCodes.take```","Fragments":["gives"]},{"Key":"```randomizeAsciiCodes.take``` gives","Fragments":["you"]},{"Key":"different letters,","Fragments":["never"]},{"Key":"letters, never","Fragments":["something"]},{"Key":"never something","Fragments":["like"]},{"Key":"like \"AA\".","Fragments":["How"]},{"Key":"\"AA\". How","Fragments":["could"]},{"Key":"How could","Fragments":["you"]},{"Key":"you remedy","Fragments":["this?"]},{"Key":"this iteration","Fragments":["I"]},{"Key":"changed nucleotideCounts","Fragments":["from"]},{"Key":"nucleotideCounts from","Fragments":["val"]},{"Key":"from val","Fragments":["to"]},{"Key":"val to","Fragments":["def,"]},{"Key":"to def,","Fragments":["so"]},{"Key":"so now","Fragments":["we"]},{"Key":"now we","Fragments":["do"]},{"Key":"we do","Fragments":["not"]},{"Key":"not store","Fragments":["two"]},{"Key":"store two","Fragments":["Maps"]},{"Key":"two Maps","Fragments":["-"]},{"Key":"Maps -","Fragments":["one"]},{"Key":"- one","Fragments":["mutable"]},{"Key":"one mutable","Fragments":["and"]},{"Key":"mutable and","Fragments":["other"]},{"Key":"Some intermediate","Fragments":["variables"]},{"Key":"variables might","Fragments":["help"]},{"Key":"might help","Fragments":["readability:"]},{"Key":" .replaceAll(\"[^\\\\w\\\\s,']\",","Fragments":["\"\")"]},{"Key":" .groupBy(s","Fragments":["=\u003e"]},{"Key":".groupBy(s =\u003e","Fragments":["s)"]},{"Key":"be local","Fragments":["vals"]},{"Key":"local vals","Fragments":["with"]},{"Key":"with appropriate","Fragments":["names."]},{"Key":"Hi -","Fragments":["very"]},{"Key":"- very","Fragments":["good"]},{"Key":"point, let","Fragments":["me"]},{"Key":"me have","Fragments":["a"]},{"Key":"a go","Fragments":["at"]},{"Key":"at this.","Fragments":["It"]},{"Key":"this. It","Fragments":["might"]},{"Key":" filter","Fragments":["and","and"]},{"Key":"and isEmpty","Fragments":["could"]},{"Key":"as exists/forall","Fragments":["maybe?"]},{"Key":"think count()","Fragments":["could"]},{"Key":"count() could","Fragments":["be"]},{"Key":"you refactor","Fragments":["this"]},{"Key":"mutable map?","Fragments":["I"]},{"Key":"map? I","Fragments":["find"]},{"Key":"a succession","Fragments":["of"]},{"Key":"succession of","Fragments":["transformations"]},{"Key":"of transformations","Fragments":["on"]},{"Key":"transformations on","Fragments":["the"]},{"Key":"input data","Fragments":["to"]},{"Key":"data to","Fragments":["get"]},{"Key":"haven't done","Fragments":["any"]},{"Key":"done any","Fragments":["measurements"]},{"Key":"any measurements","Fragments":["to"]},{"Key":"measurements to","Fragments":["be"]},{"Key":"is faster","Fragments":["than"]},{"Key":"faster than","Fragments":["the","with"]},{"Key":"the non-Map","Fragments":["version"]},{"Key":"non-Map version","Fragments":["is"]},{"Key":"this variant","Fragments":["faster"]},{"Key":"variant faster","Fragments":["than"]},{"Key":"than with","Fragments":["```groupby```","hard-to-reason-about"]},{"Key":"with ```groupby```","Fragments":["or"]},{"Key":"```groupby``` or","Fragments":["just"]},{"Key":"just more","Fragments":["readable?"]},{"Key":"with ``groupBy``","Fragments":["you"]},{"Key":"``groupBy`` you","Fragments":["could"]},{"Key":"could check","Fragments":["for"]},{"Key":"for equality","Fragments":["of"]},{"Key":"equality of","Fragments":["sorted"]},{"Key":"Felt short,","Fragments":["but"]},{"Key":"particularly readable.","Fragments":["I"]},{"Key":"argue I'm","Fragments":["relying"]},{"Key":"I'm relying","Fragments":["on"]},{"Key":"as documentation,","Fragments":["but"]},{"Key":"documentation, but","Fragments":["that"]},{"Key":"that shouldn't","Fragments":["count"]},{"Key":"shouldn't count","Fragments":[";-)"]},{"Key":"count ;-)","Fragments":["Was"]},{"Key":";-) Was","Fragments":["thinking"]},{"Key":"Was thinking","Fragments":["about"]},{"Key":"about going","Fragments":["the"]},{"Key":"going the","Fragments":["way"]},{"Key":"of matching","Fragments":["with"]},{"Key":"with functions,","Fragments":["but"]},{"Key":"functions, but","Fragments":["things"]},{"Key":"but things","Fragments":["just"]},{"Key":"things just","Fragments":["fell"]},{"Key":"just fell","Fragments":["into"]},{"Key":"fell into","Fragments":["place"]},{"Key":"into place","Fragments":["too"]},{"Key":"place too","Fragments":["fast."]},{"Key":"Excellent ideas,","Fragments":["thanks!"]},{"Key":"you sort","Fragments":["the"]},{"Key":"and `triangleType`","Fragments":["should"]},{"Key":"`triangleType` should","Fragments":["probably"]},{"Key":"a `val`,","Fragments":["since"]},{"Key":"`val`, since","Fragments":["it"]},{"Key":"than splitting,","Fragments":["you"]},{"Key":"splitting, you","Fragments":["can"]},{"Key":"this up","Fragments":["a"]},{"Key":"bit by","Fragments":["using"]},{"Key":" Fixing","Fragments":["the"]},{"Key":"Fixing the","Fragments":["regex,"]},{"Key":"the regex,","Fragments":["and"]},{"Key":"regex, and","Fragments":["removing"]},{"Key":"natural (?)","Fragments":["version"]},{"Key":"(?) version","Fragments":["with"]},{"Key":"a parse","Fragments":["function"]},{"Key":"parse function","Fragments":["returning"]},{"Key":"returning an","Fragments":["Option."]},{"Key":" MultiMaps","Fragments":["are"]},{"Key":"MultiMaps are","Fragments":["fun"]},{"Key":"are fun","Fragments":["although"]},{"Key":"fun although","Fragments":["I've"]},{"Key":"although I've","Fragments":["spent"]},{"Key":"I've spent","Fragments":["to"]},{"Key":"spent to","Fragments":["much"]},{"Key":"to much","Fragments":["time"]},{"Key":" added","Fragments":["missing","check"]},{"Key":"added missing","Fragments":["condition"]},{"Key":"missing condition","Fragments":["that"]},{"Key":"condition that","Fragments":["all"]},{"Key":"sides must","Fragments":["be"]},{"Key":"solution, the","Fragments":["equalSides"]},{"Key":"the equalSides","Fragments":["idea"]},{"Key":"equalSides idea","Fragments":["is"]},{"Key":"should indeed","Fragments":["be"]},{"Key":"indeed be","Fragments":["a"]},{"Key":"test about,","Fragments":["for"]},{"Key":"about, for","Fragments":["example"]},{"Key":"the all-zero","Fragments":["side"]},{"Key":"all-zero side","Fragments":["use"]},{"Key":"side use","Fragments":["case"]},{"Key":"in cal","Fragments":["instance."]},{"Key":"cal instance.","Fragments":["This"]},{"Key":"instance. This","Fragments":["is"]},{"Key":"bad idea.","Fragments":["Instead"]},{"Key":"idea. Instead","Fragments":["you"]},{"Key":"should clone","Fragments":["the"]},{"Key":"in cal,","Fragments":["and"]},{"Key":"cal, and","Fragments":["mutate"]},{"Key":"and mutate","Fragments":["the"]},{"Key":"like looping","Fragments":["two"]},{"Key":"looping two","Fragments":["times"]},{"Key":"two times","Fragments":["through"]},{"Key":"times through","Fragments":["the"]},{"Key":"String for","Fragments":["yelling.."]},{"Key":"The !c.isLower","Fragments":["statement"]},{"Key":"!c.isLower statement","Fragments":["is"]},{"Key":"also exclude","Fragments":["all"]},{"Key":"exclude all","Fragments":["numeric"]},{"Key":"all numeric","Fragments":["and"]},{"Key":"numeric and","Fragments":["special"]},{"Key":"and special","Fragments":["characters."]},{"Key":"The reason","Fragments":["why","I"]},{"Key":"the yelling","Fragments":["condition"]},{"Key":"yelling condition","Fragments":["came"]},{"Key":"condition came","Fragments":["first"]},{"Key":"came first","Fragments":["is"]},{"Key":"it's specified","Fragments":["in"]},{"Key":"tests that","Fragments":["yelling"]},{"Key":"that yelling","Fragments":["can"]},{"Key":"yelling can","Fragments":["also"]},{"Key":"also end","Fragments":["with"]},{"Key":"with question","Fragments":["marks."]},{"Key":"question marks.","Fragments":["Otherwise"]},{"Key":"marks. Otherwise","Fragments":["I'd"]},{"Key":"Otherwise I'd","Fragments":["completely"]},{"Key":"I'd completely","Fragments":["agree"]},{"Key":"I'd start","Fragments":["with"]},{"Key":"with changing","Fragments":["````!c.isLower````"]},{"Key":"changing ````!c.isLower````","Fragments":["to"]},{"Key":"````!c.isLower```` to","Fragments":["````c.isUpper````,"]},{"Key":"to ````c.isUpper````,","Fragments":["just"]},{"Key":"````c.isUpper````, just","Fragments":["for"]},{"Key":"for clarity.","Fragments":["You"]},{"Key":"clarity. You","Fragments":["could"]},{"Key":" (c:Char)","Fragments":["=\u003e"]},{"Key":"(c:Char) =\u003e","Fragments":["!c.isLower"]},{"Key":"with cmd.toUpperCase","Fragments":["=="]},{"Key":"cmd.toUpperCase ==","Fragments":["cmd"]},{"Key":"the sentence's","Fragments":["letters"]},{"Key":"sentence's letters","Fragments":["are"]},{"Key":"case. I'd","Fragments":["reverse"]},{"Key":"I'd reverse","Fragments":["the"]},{"Key":"reverse the","Fragments":["order"]},{"Key":"your conditional,","Fragments":["since"]},{"Key":"conditional, since","Fragments":["a"]},{"Key":"since a","Fragments":["false"]},{"Key":"current second","Fragments":["condition"]},{"Key":"second condition","Fragments":["will"]},{"Key":"condition will","Fragments":["short-circuit"]},{"Key":"will short-circuit","Fragments":["the"]},{"Key":"for evalutating","Fragments":["the"]},{"Key":"evalutating the","Fragments":["other."]},{"Key":"is wrong","Fragments":["with","with"]},{"Key":"calculate this","Fragments":["value"]},{"Key":"this value","Fragments":["if"]},{"Key":"value if","Fragments":["I"]},{"Key":"duplicates or","Fragments":["an"]},{"Key":"endless recursion","Fragments":["within"]},{"Key":"recursion within","Fragments":["`randomName`"]},{"Key":"within `randomName`","Fragments":["-"]},{"Key":"`randomName` -","Fragments":["this"]},{"Key":"the limitation","Fragments":["given"]},{"Key":"limitation given","Fragments":["by"]},{"Key":"given by","Fragments":["the"]},{"Key":"your ideas","Fragments":["around"]},{"Key":"ideas around","Fragments":["```maxNumRobotNames```."]},{"Key":" Anyhow:","Fragments":["Why"]},{"Key":"Anyhow: Why","Fragments":["use"]},{"Key":"a StringBuilder","Fragments":["and"]},{"Key":"StringBuilder and","Fragments":["not"]},{"Key":"just assign","Fragments":["a"]},{"Key":"assign a","Fragments":["String?"]},{"Key":"a String?","Fragments":["Try"]},{"Key":"String? Try","Fragments":["to"]},{"Key":"reduce potential","Fragments":["sources"]},{"Key":"potential sources","Fragments":["of"]},{"Key":"sources of","Fragments":["bugs."]},{"Key":"of bugs.","Fragments":["Of"]},{"Key":"bugs. Of","Fragments":["course,"]},{"Key":"object. But","Fragments":["a"]},{"Key":"var might","Fragments":["be"]},{"Key":"nitpick could","Fragments":["be"]},{"Key":"could refer","Fragments":["to"]},{"Key":"variable inside","Fragments":["the"]},{"Key":"```case``` instead","Fragments":["of"]},{"Key":"any specific","Fragments":["reason"]},{"Key":"specific reason","Fragments":["why"]},{"Key":"why you're","Fragments":["using"]},{"Key":"Array[Char] instead","Fragments":["of"]},{"Key":"Thanks, didn't","Fragments":["actually"]},{"Key":"didn't actually","Fragments":["read"]},{"Key":"actually read","Fragments":["the"]},{"Key":"the README.md...","Fragments":["I'll"]},{"Key":"README.md... I'll","Fragments":["try"]},{"Key":"a Restrictions","Fragments":["section"]},{"Key":"Restrictions section","Fragments":["in"]},{"Key":"section in","Fragments":["Readme.md:"]},{"Key":"not modify","Fragments":["an","the"]},{"Key":"modify an","Fragments":["input"]},{"Key":"input argument,","Fragments":["so"]},{"Key":"argument, so","Fragments":["better"]},{"Key":"so better","Fragments":["make"]},{"Key":"better make","Fragments":["a"]},{"Key":"copy for","Fragments":["the"]},{"Key":"have ```Math.pow(10D,","Fragments":["9D)```"]},{"Key":"```Math.pow(10D, 9D)```","Fragments":["as"]},{"Key":"9D)``` as","Fragments":["a"]},{"Key":"own ```math```","Fragments":["in"]},{"Key":"```math``` in","Fragments":["Predef"]},{"Key":"Predef which","Fragments":["is"]},{"Key":"more convenient","Fragments":["to"]},{"Key":"convenient to","Fragments":["use."]},{"Key":" Optimized","Fragments":["the"]},{"Key":"Optimized the","Fragments":["implementation"]},{"Key":"removing function","Fragments":["literal,"]},{"Key":"function literal,","Fragments":["and"]},{"Key":"literal, and","Fragments":["simply"]},{"Key":"simply passing","Fragments":["in"]},{"Key":"passing in","Fragments":["the"]},{"Key":"the rnaMap","Fragments":["to"]},{"Key":"rnaMap to","Fragments":["the"]},{"Key":"function directly.","Fragments":["Using"]},{"Key":"directly. Using","Fragments":["the"]},{"Key":"Map as","Fragments":["the"]},{"Key":"function parameter","Fragments":["works"]},{"Key":"parameter works","Fragments":["because"]},{"Key":"works because","Fragments":["rnaMap(x)"]},{"Key":"because rnaMap(x)","Fragments":["resolves"]},{"Key":"rnaMap(x) resolves","Fragments":["correctly."]},{"Key":"2nd iteration,","Fragments":["thats"]},{"Key":"iteration, thats","Fragments":["what"]},{"Key":"thats what","Fragments":["Sasha"]},{"Key":"what Sasha","Fragments":["suggested."]},{"Key":"Sasha suggested.","Fragments":["I"]},{"Key":"suggested. I","Fragments":["like"]},{"Key":"like swap,","Fragments":["but"]},{"Key":"swap, but","Fragments":["I"]},{"Key":"could settle","Fragments":["for"]},{"Key":"settle for","Fragments":["pair._1"]},{"Key":"for pair._1","Fragments":["!="]},{"Key":" pattern","Fragments":["matching"]},{"Key":"tuple would","Fragments":["have"]},{"Key":" Updated.","Fragments":["Thanks"]},{"Key":"Updated. Thanks","Fragments":["for"]},{"Key":" note","Fragments":["that"]},{"Key":"explicitly call","Fragments":["`toList`"]},{"Key":"input strings","Fragments":["before"]},{"Key":"strings before","Fragments":["using"]},{"Key":"before using","Fragments":["`zip`"]},{"Key":"using `zip`","Fragments":["-","and"]},{"Key":"`zip` -","Fragments":["`zip`"]},{"Key":"- `zip`","Fragments":["is"]},{"Key":" StringOps","Fragments":["provides"]},{"Key":"StringOps provides","Fragments":["zip."]},{"Key":"provides zip.","Fragments":["You"]},{"Key":"zip. You","Fragments":["don't"]},{"Key":"convert strings","Fragments":["to"]},{"Key":"you checking","Fragments":["that"]},{"Key":"checking that","Fragments":["string"]},{"Key":"that string","Fragments":["doesn't"]},{"Key":"string doesn't","Fragments":["contain"]},{"Key":"contain \"OK\"?","Fragments":["For"]},{"Key":"\"OK\"? For","Fragments":["example,"]},{"Key":"example, \"HEY,","Fragments":["OK\""]},{"Key":"\"HEY, OK\"","Fragments":["returns"]},{"Key":"OK\" returns","Fragments":["\"Whatever.\""]},{"Key":"returns \"Whatever.\"","Fragments":["instead"]},{"Key":"\"Whatever.\" instead","Fragments":["of"]},{"Key":"of \"Whoa,","Fragments":["chill"]},{"Key":" ``foldLeft``","Fragments":["can"]},{"Key":"``foldLeft`` can","Fragments":["be"]},{"Key":"by ``","Fragments":["count(p:"]},{"Key":"`` count(p:","Fragments":["(A)"]},{"Key":"Boolean): Int","Fragments":["``."]},{"Key":"Int ``.","Fragments":["I'd"]},{"Key":"``. I'd","Fragments":["move"]},{"Key":"move precondition","Fragments":["check"]},{"Key":"precondition check","Fragments":["one"]},{"Key":"check one","Fragments":["line"]},{"Key":"line upper.","Fragments":["There"]},{"Key":"upper. There","Fragments":["is"]},{"Key":"some work","Fragments":["in"]},{"Key":"in advance","Fragments":["if"]},{"Key":"advance if","Fragments":["your"]},{"Key":"why turning","Fragments":["the"]},{"Key":"turning the","Fragments":["Strings"]},{"Key":"the Strings","Fragments":["into"]},{"Key":"Strings into","Fragments":["```Array[Char]```?"]},{"Key":"into ```Array[Char]```?","Fragments":["Strings"]},{"Key":"```Array[Char]```? Strings","Fragments":["in"]},{"Key":"implicitly of","Fragments":["type"]},{"Key":"idea you","Fragments":["might"]},{"Key":"Strings and","Fragments":["go"]},{"Key":"and go","Fragments":["from"]},{"Key":"right track.","Fragments":[":-)"]},{"Key":"way (i.e.","Fragments":["w/o"]},{"Key":"(i.e. w/o","Fragments":["any"]},{"Key":"effects) to","Fragments":["iterate"]},{"Key":"turn it","Fragments":["into"]},{"Key":"refactored down","Fragments":["to"]},{"Key":"to *very*","Fragments":["non-functional"]},{"Key":"*very* non-functional","Fragments":["style"]},{"Key":"non-functional style","Fragments":["code."]},{"Key":"style code.","Fragments":["I'm"]},{"Key":"code. I'm","Fragments":["using"]},{"Key":"just regular","Fragments":["looping"]},{"Key":"regular looping","Fragments":["and"]},{"Key":"looping and","Fragments":["a"]},{"Key":"mutable List","Fragments":["now"]},{"Key":"List now","Fragments":["to"]},{"Key":"now to","Fragments":["construct"]},{"Key":"to construct","Fragments":["my","one."]},{"Key":"construct my","Fragments":["return"]},{"Key":"my return","Fragments":["value."]},{"Key":"value. It's","Fragments":["probably"]},{"Key":"probably as","Fragments":["honest"]},{"Key":"as honest","Fragments":["as"]},{"Key":"honest as","Fragments":["I"]},{"Key":"make it,","Fragments":["but"]},{"Key":"this does","Fragments":["not","not."]},{"Key":"not feel","Fragments":["very"]},{"Key":"feel very","Fragments":["\"Scala\"-ish"]},{"Key":"very \"Scala\"-ish","Fragments":[":/"]},{"Key":"the ```if-else```","Fragments":["just"]},{"Key":"```if-else``` just","Fragments":["complicates"]},{"Key":"some Boolean","Fragments":["expression"]},{"Key":"Whoops, left","Fragments":["the"]},{"Key":"left the","Fragments":["`distance`"]},{"Key":"the `distance`","Fragments":["argument"]},{"Key":"`distance` argument","Fragments":["in"]},{"Key":"iterate recursively","Fragments":["over"]},{"Key":"recursively over","Fragments":["a"]},{"Key":"w/ ```Nil```","Fragments":["and"]},{"Key":"```Nil``` and","Fragments":["```::```"]},{"Key":"and ```::```","Fragments":["to"]},{"Key":"```::``` to","Fragments":["split"]},{"Key":"List into","Fragments":["head"]},{"Key":"into head","Fragments":["and"]},{"Key":"a ```@cicero```ursive","Fragments":["solution?"]},{"Key":"```@cicero```ursive solution?","Fragments":[";-)"]},{"Key":"The readme","Fragments":["said"]},{"Key":"readme said","Fragments":["not"]},{"Key":"said not","Fragments":["to"]},{"Key":"map function","Fragments":["which"]},{"Key":"the obvious","Fragments":["solution"]},{"Key":"obvious solution","Fragments":["(input.map(f))"]},{"Key":"solution (input.map(f))","Fragments":["would"]},{"Key":"(input.map(f)) would","Fragments":["also"]},{"Key":"also solve","Fragments":["the"]},{"Key":"the mapping.","Fragments":["My"]},{"Key":"mapping. My","Fragments":["first"]},{"Key":"attempt can","Fragments":["still"]},{"Key":"can still","Fragments":["work","use"]},{"Key":"much smaller","Fragments":["mapping"]},{"Key":"smaller mapping","Fragments":["(several"]},{"Key":"mapping (several","Fragments":["of"]},{"Key":"(several of","Fragments":["the"]},{"Key":"the entries","Fragments":["are"]},{"Key":"entries are","Fragments":["redundant)"]},{"Key":"are redundant)","Fragments":["-"]},{"Key":"redundant) -","Fragments":["this"]},{"Key":"solution can't.","Fragments":["I"]},{"Key":"can't. I","Fragments":["do"]},{"Key":"do feel","Fragments":["that"]},{"Key":"more obvious/intuitive","Fragments":["in"]},{"Key":"obvious/intuitive in","Fragments":["this"]},{"Key":"are any","Fragments":["particular"]},{"Key":"particular advantages","Fragments":["to"]},{"Key":"advantages to","Fragments":["a"]},{"Key":"a smaller","Fragments":["mapping."]},{"Key":"That's quite","Fragments":["a"]},{"Key":"hardcoded mappings","Fragments":["you"]},{"Key":"mappings you","Fragments":["have"]},{"Key":"considered deduplicating/automating","Fragments":["that"]},{"Key":"deduplicating/automating that","Fragments":["a"]},{"Key":"Once again,","Fragments":["came"]},{"Key":"again, came","Fragments":["up"]},{"Key":"two alternative","Fragments":["implementations."]},{"Key":" `raw.filter('0'","Fragments":["to"]},{"Key":"`raw.filter('0' to","Fragments":["'9'"]},{"Key":"to '9'","Fragments":["contains","and"]},{"Key":"'9' contains","Fragments":["_)`"]},{"Key":"using stream!","Fragments":["See"]},{"Key":"stream! See","Fragments":["simplified"]},{"Key":"See simplified","Fragments":["version"]},{"Key":"version here:","Fragments":["http://exercism.io/submissions/3728a65080b34baab50a53d325ed0ca0."]},{"Key":"to triple","Fragments":["quote"]},{"Key":"triple quote","Fragments":["those"]},{"Key":"quote those","Fragments":["strings."]},{"Key":"conditionals can","Fragments":["be"]},{"Key":"Scala (coming","Fragments":["from"]},{"Key":"(coming from","Fragments":["Java),"]},{"Key":"from Java),","Fragments":["so"]},{"Key":"Java), so","Fragments":["maybe"]},{"Key":"so maybe","Fragments":["your","they"]},{"Key":"maybe your","Fragments":["way"]},{"Key":"more functional,","Fragments":["but"]},{"Key":"the Response","Fragments":["trait"]},{"Key":"Response trait","Fragments":["to"]},{"Key":"trait to","Fragments":["get"]},{"Key":"response value.","Fragments":["This","I"]},{"Key":"value. This","Fragments":["would"]},{"Key":"would guarantee","Fragments":["that"]},{"Key":"each Response","Fragments":["type"]},{"Key":"Response type","Fragments":["has","and"]},{"Key":"value. I","Fragments":["think"]},{"Key":"would improve","Fragments":["maintainability;"]},{"Key":"improve maintainability;","Fragments":["I"]},{"Key":"maintainability; I","Fragments":["could"]},{"Key":"could imagine","Fragments":["myself"]},{"Key":"imagine myself","Fragments":["editing"]},{"Key":"myself editing","Fragments":["this"]},{"Key":"editing this","Fragments":["code"]},{"Key":"new Response","Fragments":["type"]},{"Key":"type and","Fragments":["forgetting"]},{"Key":"and forgetting","Fragments":["to"]},{"Key":"forgetting to","Fragments":["update"]},{"Key":"the responseFor()","Fragments":["method."]},{"Key":"solution much","Fragments":["more"]},{"Key":"than mine","Fragments":[":)"]},{"Key":"initially wrote","Fragments":["this"]},{"Key":"as `.filter","Fragments":["{...}.count`,"]},{"Key":"`.filter {...}.count`,","Fragments":["expecting"]},{"Key":"{...}.count`, expecting","Fragments":["that"]},{"Key":"expecting that","Fragments":["`count`"]},{"Key":"`count` meant","Fragments":["the"]},{"Key":"meant the","Fragments":["same"]},{"Key":"as `length`","Fragments":["for"]},{"Key":"`length` for","Fragments":["a"]},{"Key":"sequence (blame","Fragments":["Rails),"]},{"Key":"(blame Rails),","Fragments":["but"]},{"Key":"Rails), but","Fragments":["it"]},{"Key":"even better!","Fragments":["I"]},{"Key":"better! I","Fragments":["could"]},{"Key":"predicate into","Fragments":["`count`"]},{"Key":"into `count`","Fragments":["directly!"]},{"Key":"`count` directly!","Fragments":["Awesome"]},{"Key":"directly! Awesome","Fragments":[":D"]},{"Key":"one piece","Fragments":["on"]},{"Key":"piece on","Fragments":["the"]},{"Key":"the board?","Fragments":["Can"]},{"Key":"board? Can","Fragments":["you"]},{"Key":"make `Chessboard`","Fragments":["immutable?"]},{"Key":"the addition","Fragments":["of"]},{"Key":"addition of","Fragments":["the"]},{"Key":"the `CaseInsensitive`","Fragments":["class."]},{"Key":"`CaseInsensitive` class.","Fragments":["It"]},{"Key":"It really","Fragments":["makes"]},{"Key":"* Indentation","Fragments":["would","would"]},{"Key":"Indentation would","Fragments":["help","help"]},{"Key":"would help","Fragments":["with","with"]},{"Key":"help with","Fragments":["readability.","readability."]},{"Key":" -Totally","Fragments":["agree."]},{"Key":"first if","Fragments":["check"]},{"Key":"if check","Fragments":["isn't"]},{"Key":"check isn't","Fragments":["necessary","necessary"]},{"Key":"(though following","Fragments":["TDD","TDD"]},{"Key":"following TDD","Fragments":["strictly","strictly"]},{"Key":"TDD strictly","Fragments":["will","will"]},{"Key":"strictly will","Fragments":["get","get"]},{"Key":"get you","Fragments":["there!)","there!)"]},{"Key":" -Haha,","Fragments":["yep"]},{"Key":"-Haha, yep","Fragments":["I"]},{"Key":"yep I","Fragments":["was"]},{"Key":"in rush","Fragments":["and"]},{"Key":"rush and","Fragments":["didn't"]},{"Key":"and didn't","Fragments":["refactor"]},{"Key":"didn't refactor","Fragments":["after"]},{"Key":"refactor after","Fragments":["passing"]},{"Key":"after passing","Fragments":["the"]},{"Key":"The .map{case","Fragments":["...}.foldLeft{...}"]},{"Key":".map{case ...}.foldLeft{...}","Fragments":["could"]},{"Key":"...}.foldLeft{...} could","Fragments":["be"]},{"Key":"as count{case","Fragments":["...}"]},{"Key":"count{case ...}","Fragments":["since"]},{"Key":"...} since","Fragments":["count"]},{"Key":"since count","Fragments":["takes"]},{"Key":"count takes","Fragments":["a"]},{"Key":"elements for","Fragments":["which","which"]},{"Key":"for which","Fragments":["the","the"]},{"Key":"predicate is","Fragments":["true","true"]},{"Key":" -Thanks!!","Fragments":["because"]},{"Key":"-Thanks!! because","Fragments":["your"]},{"Key":"comment I","Fragments":["used"]},{"Key":"* Out","Fragments":["of"]},{"Key":"curiosity, is","Fragments":["there"]},{"Key":"use s.equals(s1)","Fragments":["instead"]},{"Key":"s.equals(s1) instead","Fragments":["of"]},{"Key":"s ==","Fragments":["s1"]},{"Key":"== s1","Fragments":["?"]},{"Key":" -not","Fragments":["a"]},{"Key":"-not a","Fragments":["single"]},{"Key":"single reason,","Fragments":["maybe"]},{"Key":"reason, maybe","Fragments":["I"]},{"Key":"in java","Fragments":[":P"]},{"Key":"first `if`","Fragments":["check"]},{"Key":"`if` check","Fragments":["isn't"]},{"Key":"The `.map{case","Fragments":["...}.foldLeft{...}`"]},{"Key":"`.map{case ...}.foldLeft{...}`","Fragments":["could"]},{"Key":"...}.foldLeft{...}` could","Fragments":["be"]},{"Key":"as `count{case","Fragments":["...}`"]},{"Key":"`count{case ...}`","Fragments":["since"]},{"Key":"...}` since","Fragments":["`count`"]},{"Key":"since `count`","Fragments":["takes"]},{"Key":"`count` takes","Fragments":["a"]},{"Key":"of curiousity,","Fragments":["is"]},{"Key":"curiousity, is","Fragments":["there"]},{"Key":"use `s.equals(s1)`","Fragments":["instead"]},{"Key":"`s.equals(s1)` instead","Fragments":["of"]},{"Key":"of `s","Fragments":["=="]},{"Key":"`s ==","Fragments":["s1`","\"\"`."]},{"Key":"== s1`","Fragments":["?"]},{"Key":"believe numeric","Fragments":["sequences"]},{"Key":"numeric sequences","Fragments":["have"]},{"Key":"sequences have","Fragments":["a"]},{"Key":"a `.sum`","Fragments":["method,"]},{"Key":"`.sum` method,","Fragments":["to"]},{"Key":"method, to","Fragments":["replace"]},{"Key":"replace `foldLeft(0)((m:","Fragments":["Int,"]},{"Key":"`foldLeft(0)((m: Int,","Fragments":["n:"]},{"Key":"Int, n:","Fragments":["Int)"]},{"Key":"n: Int)","Fragments":["=\u003e"]},{"Key":"Int) =\u003e","Fragments":["m"]},{"Key":"=\u003e m","Fragments":["+"]},{"Key":"moved type","Fragments":["declaration"]},{"Key":"of Allergens","Fragments":["to"]},{"Key":"Allergens to","Fragments":["Allergen"]},{"Key":"to Allergen","Fragments":["object"]},{"Key":" @damien","Fragments":["Ah,"]},{"Key":"@damien Ah,","Fragments":["good"]},{"Key":"Ah, good","Fragments":["point"]},{"Key":"point indeed.","Fragments":["Thanks!"]},{"Key":"4 and","Fragments":["`getOrElse`"]},{"Key":"line 11?","Fragments":["Isn't"]},{"Key":"11? Isn't","Fragments":["one"]},{"Key":"for fun,","Fragments":["you"]},{"Key":"fun, you","Fragments":["could"]},{"Key":"the `foldLeft`","Fragments":["content","is"]},{"Key":"`foldLeft` content","Fragments":["as:"]},{"Key":"zip s2).foldLeft(0)","Fragments":["{"]},{"Key":"case (diff,","Fragments":["(s1,"]},{"Key":"(diff, (s1,","Fragments":["s2))"]},{"Key":"(s1, s2))","Fragments":["=\u003e"]},{"Key":" diff","Fragments":["+"]},{"Key":"diff +","Fragments":["(s1"]},{"Key":"+ (s1","Fragments":["!="]},{"Key":"(s1 !=","Fragments":["s2"]},{"Key":"s2 compareTo","Fragments":["false)"]},{"Key":"am afraid","Fragments":["that"]},{"Key":"afraid that","Fragments":["you"]},{"Key":"made life","Fragments":["too"]},{"Key":"life too","Fragments":["easy"]},{"Key":"too easy","Fragments":["for"]},{"Key":"easy for","Fragments":["yourself."]},{"Key":"for yourself.","Fragments":[":-)"]},{"Key":"A robot","Fragments":["name"]},{"Key":"name should","Fragments":["consist"]},{"Key":"two random","Fragments":["capital"]},{"Key":"random capital","Fragments":["letters"]},{"Key":"letters followed","Fragments":["by"]},{"Key":"by 3","Fragments":["random"]},{"Key":"3 random","Fragments":["digits,"]},{"Key":"random digits,","Fragments":["e.g."]},{"Key":"digits, e.g.","Fragments":["```RX837"]},{"Key":"e.g. ```RX837","Fragments":["or"]},{"Key":"```RX837 or","Fragments":["BC811```.","BC811```."]},{"Key":" Additionally,","Fragments":["you"]},{"Key":"Additionally, you","Fragments":["should"]},{"Key":"should check","Fragments":["that"]},{"Key":"name has","Fragments":["never"]},{"Key":"has never","Fragments":["been"]},{"Key":"never been","Fragments":["used"]},{"Key":"been used","Fragments":["before."]},{"Key":"Two other","Fragments":["possible"]},{"Key":"possible solutions:","Fragments":["Use"]},{"Key":"solutions: Use","Fragments":["regex'es,"]},{"Key":"Use regex'es,","Fragments":["or"]},{"Key":"regex'es, or","Fragments":["use"]},{"Key":" From","Fragments":["previous"]},{"Key":"From previous","Fragments":["to"]},{"Key":"previous to","Fragments":["current,"]},{"Key":"to current,","Fragments":["I"]},{"Key":"current, I","Fragments":["just"]},{"Key":"removed some","Fragments":["comments."]},{"Key":"To extract","Fragments":["all"]},{"Key":"extract all","Fragments":["digits"]},{"Key":"all digits","Fragments":["you"]},{"Key":"digits you","Fragments":["could"]},{"Key":"```filter``` w/","Fragments":["```isDigit```."]},{"Key":" Aha,","Fragments":["you"]},{"Key":"Aha, you","Fragments":["(re-)discovered"]},{"Key":"you (re-)discovered","Fragments":["```implicit```"]},{"Key":"(re-)discovered ```implicit```","Fragments":["and"]},{"Key":"and ```.par```!","Fragments":[":-)"]},{"Key":"your ```Shouting```","Fragments":["regex"]},{"Key":"```Shouting``` regex","Fragments":["is"]},{"Key":"quite complex:","Fragments":["consider"]},{"Key":"complex: consider","Fragments":["using"]},{"Key":"using ```exists```","Fragments":["and"]},{"Key":"```exists``` and","Fragments":["```forall```"]},{"Key":"and ```forall```","Fragments":["instead."]},{"Key":"the `Map::withDefaultValue`","Fragments":["method"]},{"Key":"`Map::withDefaultValue` method","Fragments":["you"]},{"Key":"for presence","Fragments":["in"]},{"Key":"presence in","Fragments":["multiple"]},{"Key":"still use","Fragments":["immutable"]},{"Key":"immutable collections","Fragments":["here,"]},{"Key":"collections here,","Fragments":["rather"]},{"Key":"here, rather","Fragments":["than"]},{"Key":"than making","Fragments":["all"]},{"Key":"making all","Fragments":["state"]},{"Key":"all state","Fragments":["mutable."]},{"Key":"Fixed typo","Fragments":["in"]},{"Key":"typo in","Fragments":["regex"]},{"Key":"http://exercism.io/lhohan, an","Fragments":["improved"]},{"Key":"an improved","Fragments":["version"]},{"Key":"improved version","Fragments":["of:"]},{"Key":"version of:","Fragments":["http://exercism.io/submissions/325ca2c346414a5b9475613754b9b316."]},{"Key":"not prescribe","Fragments":["the"]},{"Key":"prescribe the","Fragments":["implementation"]},{"Key":"but let","Fragments":["Scala"]},{"Key":" mutable.Map[Int,","Fragments":["Seq[String]]()."]},{"Key":"btw, why","Fragments":["Integer?"]},{"Key":"why Integer?","Fragments":["You"]},{"Key":"Integer? You","Fragments":["still"]},{"Key":"You still","Fragments":["live"]},{"Key":"still live","Fragments":["in"]},{"Key":"Java world?","Fragments":[";-)"]},{"Key":"using constants","Fragments":["for"]},{"Key":"for stuff","Fragments":["like"]},{"Key":"stuff like","Fragments":["Seq()."]},{"Key":"like Seq().","Fragments":["type"]},{"Key":"Seq(). type","Fragments":["aliases"]},{"Key":"also come","Fragments":["in","in"]},{"Key":"Map, if","Fragments":["only"]},{"Key":"if only","Fragments":["for"]},{"Key":"for comparison","Fragments":["with"]},{"Key":"comparison with","Fragments":["this"]},{"Key":"Removed not","Fragments":["needed"]},{"Key":"needed \"extends\"","Fragments":["and"]},{"Key":"\"extends\" and","Fragments":["changed"]},{"Key":"and changed","Fragments":["sorted"]},{"Key":"changed sorted","Fragments":["to"]},{"Key":"sorted to","Fragments":["more"]},{"Key":"to more","Fragments":["concise"]},{"Key":"concise sorted","Fragments":["method,"]},{"Key":"sorted method,","Fragments":["as"]},{"Key":"method, as","Fragments":["seen","it"]},{"Key":"as seen","Fragments":["at"]},{"Key":"seen at","Fragments":["@lennie"]},{"Key":"at @lennie","Fragments":["code"]},{"Key":"with fewer","Fragments":["functions"]},{"Key":"fewer functions","Fragments":["and"]},{"Key":"to direct","Fragments":["things."]},{"Key":"direct things.","Fragments":["I"]},{"Key":"one better.","Fragments":["I"]},{"Key":"there has","Fragments":["to"]},{"Key":"the tuples","Fragments":["in","provided"]},{"Key":"tuples in","Fragments":["the"]},{"Key":"the call.","Fragments":["Perhaps"]},{"Key":"call. Perhaps","Fragments":["I'll"]},{"Key":"I'll work","Fragments":["on"]},{"Key":"Some suggestions","Fragments":["for"]},{"Key":"1. FP-style","Fragments":["instead"]},{"Key":"FP-style instead","Fragments":["of"]},{"Key":"if-else clauses:","Fragments":["use"]},{"Key":"clauses: use","Fragments":["pattern"]},{"Key":"2. use","Fragments":["small"]},{"Key":"use small","Fragments":["private"]},{"Key":"like \"isShout()\"","Fragments":["for"]},{"Key":"\"isShout()\" for","Fragments":["better"]},{"Key":"3. instead","Fragments":["of"]},{"Key":"filter take","Fragments":["a"]},{"Key":"4. you","Fragments":["might"]},{"Key":"expression pattern","Fragments":["matching."]},{"Key":"My rule","Fragments":["of"]},{"Key":"thumb: If","Fragments":["it"]},{"Key":"if-else use","Fragments":["pattern"]},{"Key":"regular expresssions,","Fragments":["too."]},{"Key":"by \"zipping\"","Fragments":["all"]},{"Key":"\"zipping\" all","Fragments":["segments."]},{"Key":" trade","Fragments":["off."]},{"Key":"trade off.","Fragments":["The"]},{"Key":"off. The","Fragments":["methods"]},{"Key":"methods describe","Fragments":["what"]},{"Key":"Bob is","Fragments":["responding"]},{"Key":"is responding","Fragments":["to."]},{"Key":"don't realy","Fragments":["like"]},{"Key":"statement looks","Fragments":["maintainability"]},{"Key":"looks maintainability","Fragments":["wise."]},{"Key":"another responds","Fragments":["needs"]},{"Key":"responds needs","Fragments":["to"]},{"Key":"to shout","Fragments":["a"]},{"Key":"shout a","Fragments":["question"]},{"Key":"question but","Fragments":["in"]},{"Key":"case Bob","Fragments":["should"]},{"Key":"only respond","Fragments":["to"]},{"Key":"shouting part.","Fragments":["Because"]},{"Key":"part. Because","Fragments":["of"]},{"Key":"Because of","Fragments":["the"]},{"Key":"order the","Fragments":["checks"]},{"Key":"are done","Fragments":["this"]},{"Key":"done this","Fragments":["will"]},{"Key":"tests. But","Fragments":["what","isn't"]},{"Key":"checks mutually","Fragments":["exclusive?"]},{"Key":"mutually exclusive?","Fragments":["Than"]},{"Key":"exclusive? Than","Fragments":["order"]},{"Key":"Than order","Fragments":["of"]},{"Key":"checking doesn't","Fragments":["matter"]},{"Key":"matter AND","Fragments":["in"]},{"Key":"AND in","Fragments":["my"]},{"Key":"made explicit","Fragments":["that"]},{"Key":"a shouting","Fragments":["question"]},{"Key":"shouting question","Fragments":["is"]},{"Key":"question at","Fragments":["all."]},{"Key":"checking with","Fragments":["else"]},{"Key":"with else","Fragments":["if"]},{"Key":"if for","Fragments":["strand1.length()"]},{"Key":"for strand1.length()","Fragments":["!="]},{"Key":"strand1.length() !=","Fragments":["strand2.length(),"]},{"Key":"!= strand2.length(),","Fragments":["you"]},{"Key":"strand2.length(), you","Fragments":["can"]},{"Key":"Scala function","Fragments":["require,"]},{"Key":"function require,","Fragments":["which"]},{"Key":"require, which","Fragments":["does"]},{"Key":"does precisely","Fragments":["what"]},{"Key":"precisely what","Fragments":["you"]},{"Key":"wonder -","Fragments":["do"]},{"Key":"need first","Fragments":["case"]},{"Key":"no, you","Fragments":["don't"]},{"Key":"for ```isEmpty```.","Fragments":["the"]},{"Key":"```isEmpty```. the","Fragments":["Scala"]},{"Key":"functions know","Fragments":["how"]},{"Key":"w/ empty","Fragments":["collections."]},{"Key":"w/ ```count```","Fragments":["instead"]},{"Key":"```count``` instead","Fragments":["of"]},{"Key":" @torrey","Fragments":["good"]},{"Key":"@torrey good","Fragments":["tip,"]},{"Key":"good tip,","Fragments":["thanks."]},{"Key":"tip, thanks.","Fragments":["I"]},{"Key":"thanks. I","Fragments":["gave","think"]},{"Key":"gave implementing","Fragments":["contains"]},{"Key":"implementing contains","Fragments":["myself"]},{"Key":"contains myself","Fragments":["a"]},{"Key":"myself a","Fragments":["shot."]},{"Key":"should avoid","Fragments":["type"]},{"Key":"avoid type","Fragments":["```Any```"]},{"Key":"type ```Any```","Fragments":["if"]},{"Key":"```Any``` if","Fragments":["you"]},{"Key":"can as","Fragments":["this"]},{"Key":"this prevents","Fragments":["the"]},{"Key":"compiler from","Fragments":["helping"]},{"Key":"from helping","Fragments":["you."]},{"Key":"helping you.","Fragments":["instead"]},{"Key":"you. instead","Fragments":["use"]},{"Key":"instead use","Fragments":["type"]},{"Key":"if want","Fragments":["a"]},{"Key":"a challenge","Fragments":["you"]},{"Key":"may re-implement","Fragments":["```containsSlice```"]},{"Key":"```containsSlice``` yourself.","Fragments":[":-)"]},{"Key":" an","Fragments":["excellent"]},{"Key":"excellent point,","Fragments":["thank"]},{"Key":"point, thank","Fragments":["you."]},{"Key":"minor nitpick:","Fragments":["I"]},{"Key":"think `testPrime(l,","Fragments":["primes)`"]},{"Key":"`testPrime(l, primes)`","Fragments":["should"]},{"Key":"primes)` should","Fragments":["not"]},{"Key":"be public,","Fragments":["because"]},{"Key":"public, because","Fragments":["it"]},{"Key":"specify this","Fragments":["primes"]},{"Key":"this primes","Fragments":["stream,"]},{"Key":"primes stream,","Fragments":["which"]},{"Key":"stream, which","Fragments":["is"]},{"Key":"is internal","Fragments":["housekeeping."]},{"Key":"internal housekeeping.","Fragments":["Especially"]},{"Key":"housekeeping. Especially","Fragments":["because"]},{"Key":"Especially because","Fragments":["the"]},{"Key":"first line","Fragments":["says"]},{"Key":"line says","Fragments":["`if"]},{"Key":"says `if","Fragments":["(primes.head"]},{"Key":"`if (primes.head","Fragments":["\u003e"]},{"Key":"(primes.head \u003e","Fragments":["math.sqrt(l))"]},{"Key":"\u003e math.sqrt(l))","Fragments":["true`"]},{"Key":"math.sqrt(l)) true`","Fragments":["which"]},{"Key":"true` which","Fragments":["is"]},{"Key":"pretty confusing","Fragments":["if"]},{"Key":"know what's","Fragments":["going"]},{"Key":"more indents","Fragments":["for"]},{"Key":"indents for","Fragments":["readability"]},{"Key":"then some","Fragments":["stuff"]},{"Key":"some stuff","Fragments":["might"]},{"Key":"stuff might","Fragments":["be"]},{"Key":"be broken","Fragments":["out"]},{"Key":"broken out","Fragments":["into"]},{"Key":"make things","Fragments":["a"]},{"Key":"then length","Fragments":["is"]},{"Key":"length is","Fragments":["the"]},{"Key":"as count","Fragments":[":)"]},{"Key":" nice.","Fragments":["the"]},{"Key":"nice. the","Fragments":["hamming"]},{"Key":"distance between","Fragments":["this"]},{"Key":"between this","Fragments":["and"]},{"Key":"shortest solution","Fragments":["might"]},{"Key":"liked this","Fragments":["one."]},{"Key":"this one.","Fragments":["I"]},{"Key":"with brute","Fragments":["force"]},{"Key":"force methods","Fragments":["for"]},{"Key":"for ```getOnes```,","Fragments":["```getTens```"]},{"Key":"```getOnes```, ```getTens```","Fragments":["and"]},{"Key":"```getTens``` and","Fragments":["so"]},{"Key":"so on,","Fragments":["then"]},{"Key":"on, then","Fragments":["gradually"]},{"Key":"then gradually","Fragments":["refactored"]},{"Key":"gradually refactored","Fragments":["to"]},{"Key":"point where","Fragments":["I"]},{"Key":"I extracted","Fragments":["the"]},{"Key":"the ```getPlaceString```","Fragments":["method,"]},{"Key":"```getPlaceString``` method,","Fragments":["which"]},{"Key":"then partially","Fragments":["applied"]},{"Key":"partially applied","Fragments":["to"]},{"Key":"each place.","Fragments":["Probably"]},{"Key":"place. Probably","Fragments":["some"]},{"Key":"Probably some","Fragments":["more"]},{"Key":"more that","Fragments":["I"]},{"Key":"with it,","Fragments":["such"]},{"Key":"as dynamically","Fragments":["applying"]},{"Key":"dynamically applying","Fragments":["```getPlaceString```"]},{"Key":"applying ```getPlaceString```","Fragments":["using"]},{"Key":"```getPlaceString``` using","Fragments":["a"]},{"Key":"a ```map```","Fragments":["or"]},{"Key":"```map``` or","Fragments":["```list```"]},{"Key":"or ```list```","Fragments":["of"]},{"Key":"```list``` of","Fragments":["tuples."]},{"Key":"tuples. Perhaps","Fragments":["I'll"]},{"Key":"I'll take","Fragments":["a"]},{"Key":"a stab","Fragments":["at"]},{"Key":"stab at","Fragments":["that"]},{"Key":"that later","Fragments":["on."]},{"Key":"A different","Fragments":["implementation"]},{"Key":"different implementation","Fragments":["than"]},{"Key":"implementation than","Fragments":["my"]},{"Key":"exercise that","Fragments":["does"]},{"Key":"this than","Fragments":["a"]},{"Key":"`match` expression","Fragments":["with"]},{"Key":"expression with","Fragments":["entirely"]},{"Key":"with entirely","Fragments":["wildcard"]},{"Key":"entirely wildcard","Fragments":["cases"]},{"Key":"wildcard cases","Fragments":["-"]},{"Key":"cases -","Fragments":["maybe"]},{"Key":"maybe an","Fragments":["`if`?"]},{"Key":"an `if`?","Fragments":["But"]},{"Key":"`if`? But","Fragments":["it"]},{"Key":"would irk","Fragments":["me"]},{"Key":"irk me","Fragments":["having"]},{"Key":"me having","Fragments":["to"]},{"Key":"put parens","Fragments":["around"]},{"Key":"predicates in","Fragments":["an"]},{"Key":"Cool to","Fragments":["see"]},{"Key":"solution optimized","Fragments":["for"]},{"Key":"optimized for","Fragments":["speed."]},{"Key":"definitely orders","Fragments":["of"]},{"Key":"orders of","Fragments":["magnitude"]},{"Key":"magnitude more","Fragments":["difficult"]},{"Key":"read, to","Fragments":["me."]},{"Key":"may or","Fragments":["may"]},{"Key":"or may","Fragments":["not"]},{"Key":"be faster","Fragments":["(lacking"]},{"Key":"faster (lacking","Fragments":["benchmarks)."]},{"Key":"With real-life","Fragments":["code,"]},{"Key":"real-life code,","Fragments":["it"]},{"Key":"come down","Fragments":["to"]},{"Key":"whether we","Fragments":["have"]},{"Key":"have good","Fragments":["reason"]},{"Key":"optimize for","Fragments":["speed","readability?"]},{"Key":"for speed","Fragments":["at"]},{"Key":"speed at","Fragments":["the"]},{"Key":"the expense","Fragments":["of"]},{"Key":"expense of","Fragments":["maintainability,"]},{"Key":"of maintainability,","Fragments":["and"]},{"Key":"maintainability, and","Fragments":["of"]},{"Key":"course to","Fragments":["actually"]},{"Key":"actually benchmark","Fragments":["it"]},{"Key":"benchmark it","Fragments":["to"]},{"Key":"what we","Fragments":["pay"]},{"Key":"we pay","Fragments":["for."]},{"Key":"over optimized","Fragments":["performance"]},{"Key":"optimized performance","Fragments":["if"]},{"Key":"performance if","Fragments":["there"]},{"Key":"no noticeable","Fragments":["performance"]},{"Key":"noticeable performance","Fragments":["issues"]},{"Key":"performance issues","Fragments":["during"]},{"Key":"issues during","Fragments":["real"]},{"Key":"during real","Fragments":["use,"]},{"Key":"real use,","Fragments":["but"]},{"Key":"use, but","Fragments":["that's"]},{"Key":"that's based","Fragments":["on"]},{"Key":"on *my*","Fragments":["experience"]},{"Key":"*my* experience","Fragments":["–"]},{"Key":"experience –","Fragments":["if"]},{"Key":"– if","Fragments":["@trever"]},{"Key":"if @trever","Fragments":["works"]},{"Key":"@trever works","Fragments":["in"]},{"Key":"works in","Fragments":["a"]},{"Key":"field where","Fragments":["he"]},{"Key":"where he","Fragments":["sees"]},{"Key":"he sees","Fragments":["more"]},{"Key":"sees more","Fragments":["problems"]},{"Key":"more problems","Fragments":["with"]},{"Key":"problems with","Fragments":["slow"]},{"Key":"with slow","Fragments":["code"]},{"Key":"slow code","Fragments":["than","because"]},{"Key":"code than","Fragments":["with"]},{"Key":"with hard-to-reason-about","Fragments":["code,"]},{"Key":"hard-to-reason-about code,","Fragments":["I"]},{"Key":"Another factor","Fragments":["is"]},{"Key":"factor is","Fragments":["whether"]},{"Key":"is whether","Fragments":["you"]},{"Key":"you work","Fragments":["on"]},{"Key":"on shared","Fragments":["code"]},{"Key":"a team,","Fragments":["or"]},{"Key":"team, or","Fragments":["on"]},{"Key":"or on","Fragments":["your"]},{"Key":"own stuff.","Fragments":["A"]},{"Key":"stuff. A","Fragments":["clever,"]},{"Key":"A clever,","Fragments":["lone"]},{"Key":"clever, lone","Fragments":["programmer"]},{"Key":"lone programmer","Fragments":["can"]},{"Key":"programmer can","Fragments":["work"]},{"Key":"can work","Fragments":["quickly"]},{"Key":"work quickly","Fragments":["with"]},{"Key":"quickly with","Fragments":["pretty"]},{"Key":"with pretty","Fragments":["complex"]},{"Key":"pretty complex","Fragments":["code,"]},{"Key":"complex code,","Fragments":["but"]},{"Key":"if others","Fragments":["work"]},{"Key":"others work","Fragments":["on"]},{"Key":"same code","Fragments":["(at"]},{"Key":"code (at","Fragments":["the"]},{"Key":"same time,","Fragments":["or"]},{"Key":"time, or","Fragments":["when"]},{"Key":"first programmer","Fragments":["quits),"]},{"Key":"programmer quits),","Fragments":["then"]},{"Key":"quits), then","Fragments":["optimizing"]},{"Key":"then optimizing","Fragments":["for"]},{"Key":"optimizing for","Fragments":["readability"]},{"Key":"readability can","Fragments":["pay"]},{"Key":"can pay","Fragments":["off."]},{"Key":"are Java","Fragments":["strings,"]},{"Key":"Java strings,","Fragments":["so"]},{"Key":"strings, so","Fragments":["they"]},{"Key":"are arrays,","Fragments":["not"]},{"Key":"arrays, not","Fragments":["lists."]},{"Key":"not lists.","Fragments":["`length`"]},{"Key":"lists. `length`","Fragments":["is"]},{"Key":"`length` is","Fragments":["a"]},{"Key":"shorter (yet","Fragments":["still"]},{"Key":"(yet still","Fragments":["efficient)"]},{"Key":"still efficient)","Fragments":["version"]},{"Key":"efficient) version","Fragments":["using"]},{"Key":"head that","Fragments":["`length`"]},{"Key":"that `length`","Fragments":["would"]},{"Key":"`length` would","Fragments":["iterate"]},{"Key":"would iterate","Fragments":["over"]},{"Key":"strings too","Fragments":["-"]},{"Key":"but they're","Fragments":["java"]},{"Key":"they're java","Fragments":["strings,"]},{"Key":"java strings,","Fragments":["aren't"]},{"Key":"strings, aren't","Fragments":["they,"]},{"Key":"aren't they,","Fragments":["not"]},{"Key":"they, not","Fragments":["linked"]},{"Key":"not linked","Fragments":["lists,"]},{"Key":"maybe they","Fragments":["don't."]},{"Key":"In terms","Fragments":["of"]},{"Key":"of \"significantly","Fragments":["longer"]},{"Key":"\"significantly longer","Fragments":["or"]},{"Key":"longer or","Fragments":["more","more"]},{"Key":"more convoluted\",","Fragments":["by"]},{"Key":"convoluted\", by","Fragments":["my"]},{"Key":"by my","Fragments":["count"]},{"Key":"my count","Fragments":["your"]},{"Key":"count your","Fragments":["version"]},{"Key":"your version","Fragments":["takes","does"]},{"Key":"version takes","Fragments":["twice"]},{"Key":"takes twice","Fragments":["as"]},{"Key":"twice as","Fragments":["much"]},{"Key":"much code","Fragments":["and"]},{"Key":"and includes","Fragments":["10"]},{"Key":"includes 10","Fragments":["operations"]},{"Key":"10 operations","Fragments":["to"]},{"Key":"operations to","Fragments":["parse"]},{"Key":"parse and","Fragments":["understand"]},{"Key":"understand versus","Fragments":["3"]},{"Key":"versus 3","Fragments":["in"]},{"Key":"3 in","Fragments":["mine."]},{"Key":"in mine.","Fragments":["I"]},{"Key":"that's significantly","Fragments":["longer"]},{"Key":"significantly longer","Fragments":["and","or"]},{"Key":"more convoluted!","Fragments":["Here's"]},{"Key":"convoluted! Here's","Fragments":["how"]},{"Key":"Here's how","Fragments":["I"]},{"Key":"I count","Fragments":["it:"]},{"Key":" Operations","Fragments":["in","in"]},{"Key":"Operations in","Fragments":["your","my"]},{"Key":" `until,","Fragments":["length,"]},{"Key":"`until, length,","Fragments":["min,"]},{"Key":"length, min,","Fragments":["length,"]},{"Key":"min, length,","Fragments":["foldLeft,"]},{"Key":"length, foldLeft,","Fragments":["if,"]},{"Key":"foldLeft, if,","Fragments":["a(i),"]},{"Key":"if, a(i),","Fragments":["b(i),"]},{"Key":"a(i), b(i),","Fragments":["!=,"]},{"Key":"b(i), !=,","Fragments":["+`"]},{"Key":"!=, +`","Fragments":["=\u003e"]},{"Key":"+` =\u003e","Fragments":["10"]},{"Key":"=\u003e 10","Fragments":["operations"]},{"Key":" `zip,","Fragments":["count,"]},{"Key":"`zip, count,","Fragments":["!=`"]},{"Key":"count, !=`","Fragments":["=\u003e"]},{"Key":"!=` =\u003e","Fragments":["3"]},{"Key":"=\u003e 3","Fragments":["operations"]},{"Key":"The difference","Fragments":["is"]},{"Key":"just garbage.","Fragments":["Your"]},{"Key":"garbage. Your","Fragments":["version"]},{"Key":"Your version","Fragments":["iterates"]},{"Key":"version iterates","Fragments":["over"]},{"Key":"iterates over","Fragments":["the"]},{"Key":"zip them,","Fragments":["and"]},{"Key":"then does","Fragments":["a"]},{"Key":"separate iteration","Fragments":["to"]},{"Key":"the counts.","Fragments":["I"]},{"Key":"counts. I","Fragments":["expect"]},{"Key":"I expect","Fragments":["it"]},{"Key":"expect it","Fragments":["to"]},{"Key":"run at","Fragments":["half"]},{"Key":"at half","Fragments":["the"]},{"Key":"half the","Fragments":["speed"]},{"Key":"the speed","Fragments":["or"]},{"Key":"speed or","Fragments":["worse,"]},{"Key":"or worse,","Fragments":["not"]},{"Key":"worse, not","Fragments":["even"]},{"Key":"even including","Fragments":["the"]},{"Key":"additional GC","Fragments":["pressure."]},{"Key":"believe in","Fragments":["using","what"]},{"Key":"in using","Fragments":["worse"]},{"Key":"using worse","Fragments":["algorithms"]},{"Key":"worse algorithms","Fragments":["for"]},{"Key":"for aesthetic","Fragments":["reasons"]},{"Key":"aesthetic reasons","Fragments":["when"]},{"Key":"reasons when","Fragments":["better"]},{"Key":"when better","Fragments":["ones"]},{"Key":"better ones","Fragments":["are"]},{"Key":"ones are","Fragments":["clear"]},{"Key":"are clear","Fragments":["and"]},{"Key":"not significantly","Fragments":["longer"]},{"Key":"I say,","Fragments":["if"]},{"Key":"say, if","Fragments":["you"]},{"Key":"to \"write","Fragments":["slow"]},{"Key":"\"write slow","Fragments":["code\""]},{"Key":"slow code\"","Fragments":["then"]},{"Key":"code\" then","Fragments":["write"]},{"Key":"then write","Fragments":["everything"]},{"Key":"write everything","Fragments":["in"]},{"Key":"in C!","Fragments":["These","Language"]},{"Key":"C! These","Fragments":["high-level"]},{"Key":"These high-level","Fragments":["constructs"]},{"Key":"high-level constructs","Fragments":["are"]},{"Key":"constructs are","Fragments":["a"]},{"Key":"a tradeoff","Fragments":["of"]},{"Key":"tradeoff of","Fragments":["readability,"]},{"Key":"maintainability \u0026","Fragments":["productivity"]},{"Key":"\u0026 productivity","Fragments":["for"]},{"Key":"productivity for","Fragments":["execution"]},{"Key":"for execution","Fragments":["time."]},{"Key":"execution time.","Fragments":["If"]},{"Key":"time. If","Fragments":["you"]},{"Key":"that trade-off","Fragments":["you"]},{"Key":"trade-off you","Fragments":["don't"]},{"Key":"have to,","Fragments":["but"]},{"Key":"to, but","Fragments":["you"]},{"Key":"well choose","Fragments":["to"]},{"Key":"or choose","Fragments":["not"]},{"Key":" Btw","Fragments":["-"]},{"Key":"Btw -","Fragments":["am"]},{"Key":"- am","Fragments":["I"]},{"Key":"I right","Fragments":["in"]},{"Key":"right in","Fragments":["thinking","`hey`"]},{"Key":"in thinking","Fragments":["the"]},{"Key":"thinking the","Fragments":["two"]},{"Key":"two examples","Fragments":["aren't"]},{"Key":"examples aren't","Fragments":["any"]},{"Key":"aren't any","Fragments":["different"]},{"Key":"any different","Fragments":["in"]},{"Key":"different in","Fragments":["speed,"]},{"Key":"in speed,","Fragments":["just"]},{"Key":"speed, just","Fragments":["in"]},{"Key":"just in","Fragments":["the"]},{"Key":"of garbage","Fragments":["objects"]},{"Key":"garbage objects","Fragments":["they","get","I"]},{"Key":"objects they","Fragments":["generate?"]},{"Key":"they generate?","Fragments":["(which"]},{"Key":"generate? (which","Fragments":["admittedly"]},{"Key":"(which admittedly","Fragments":["could"]},{"Key":"admittedly could","Fragments":["cause"]},{"Key":"could cause","Fragments":["speed"]},{"Key":"cause speed","Fragments":["issues"]},{"Key":"speed issues","Fragments":["due"]},{"Key":"issues due","Fragments":["to"]},{"Key":"to garbage","Fragments":["collection"]},{"Key":"garbage collection","Fragments":["down","for"]},{"Key":"collection down","Fragments":["the"]},{"Key":"line -","Fragments":["but"]},{"Key":"but shouldn't","Fragments":["the"]},{"Key":"shouldn't the","Fragments":["garbage"]},{"Key":"the garbage","Fragments":["objects"]},{"Key":"objects get","Fragments":["collected"]},{"Key":"get collected","Fragments":["very"]},{"Key":"collected very","Fragments":["quickly"]},{"Key":"very quickly","Fragments":["due"]},{"Key":"quickly due","Fragments":["to"]},{"Key":"to immediately","Fragments":["going"]},{"Key":"immediately going","Fragments":["out"]},{"Key":"going out","Fragments":["of"]},{"Key":"to convince","Fragments":["you"]},{"Key":"convince you","Fragments":["though,"]},{"Key":"you though,","Fragments":["so"]},{"Key":"not going","Fragments":["to"]},{"Key":"try anymore","Fragments":["-"]},{"Key":"anymore -","Fragments":["we're"]},{"Key":"- we're","Fragments":["coming"]},{"Key":"we're coming","Fragments":["from"]},{"Key":"from fundamentally","Fragments":["different"]},{"Key":"fundamentally different","Fragments":["viewpoints."]},{"Key":"different viewpoints.","Fragments":["I"]},{"Key":"viewpoints. I","Fragments":["write"]},{"Key":"I write","Fragments":["code"]},{"Key":"be read","Fragments":["first,"]},{"Key":"read first,","Fragments":["and"]},{"Key":"first, and","Fragments":["then"]},{"Key":"then optimized","Fragments":["later"]},{"Key":"optimized later","Fragments":["*if"]},{"Key":"later *if","Fragments":["needed*,"]},{"Key":"*if needed*,","Fragments":["you"]},{"Key":"needed*, you","Fragments":["appear"]},{"Key":"you appear","Fragments":["to"]},{"Key":"appear to","Fragments":["write"]},{"Key":"be optimized","Fragments":["first"]},{"Key":"optimized first","Fragments":["-"]},{"Key":"first -","Fragments":["sometimes,"]},{"Key":"- sometimes,","Fragments":["it"]},{"Key":"sometimes, it","Fragments":["seems"]},{"Key":"me at","Fragments":["least,"]},{"Key":"at least,","Fragments":["without"]},{"Key":"least, without","Fragments":["questioning"]},{"Key":"without questioning","Fragments":["if"]},{"Key":"questioning if","Fragments":["that"]},{"Key":"that optimization","Fragments":["is"]},{"Key":"optimization is","Fragments":["needed"]},{"Key":"is needed","Fragments":["or"]},{"Key":"needed or","Fragments":["worth"]},{"Key":"or worth","Fragments":["the"]},{"Key":"Just two","Fragments":["more"]},{"Key":"two more","Fragments":["things,"]},{"Key":"more things,","Fragments":["and"]},{"Key":"things, and","Fragments":["then"]},{"Key":"then I'll","Fragments":["shut"]},{"Key":"I'll shut","Fragments":["up"]},{"Key":"shut up","Fragments":["and"]},{"Key":"leave you","Fragments":["to"]},{"Key":"it. A","Fragments":["quote"]},{"Key":"A quote","Fragments":["from"]},{"Key":"the \"About\"","Fragments":["page"]},{"Key":"\"About\" page","Fragments":["of"]},{"Key":"page of","Fragments":["this"]},{"Key":" \"The","Fragments":["goal"]},{"Key":"\"The goal","Fragments":["of"]},{"Key":"goal of","Fragments":["exercism"]},{"Key":"exercism is","Fragments":["to"]},{"Key":"think deeply","Fragments":["about"]},{"Key":"deeply about","Fragments":["simple,"]},{"Key":"about simple,","Fragments":["expressive,"]},{"Key":"simple, expressive,","Fragments":["readable"]},{"Key":"expressive, readable","Fragments":["code.\""]},{"Key":"for comparison,","Fragments":["a"]},{"Key":"comparison, a","Fragments":["solution"]},{"Key":"that foregrounds","Fragments":["readability"]},{"Key":"foregrounds readability","Fragments":["at"]},{"Key":"readability at","Fragments":["a"]},{"Key":"a runtime","Fragments":["cost"]},{"Key":"cost that","Fragments":["I"]},{"Key":"than worth","Fragments":["it:"]},{"Key":"def compute(strand:","Fragments":["String,"]},{"Key":"compute(strand: String,","Fragments":["other:"]},{"Key":"String, other:","Fragments":["String)"]},{"Key":"other: String)","Fragments":["="]},{"Key":" strand","Fragments":["zip"]},{"Key":"strand zip","Fragments":["other"]},{"Key":"zip other","Fragments":["count"]},{"Key":"other count","Fragments":["{"]},{"Key":" \"Write","Fragments":["slow"]},{"Key":"\"Write slow","Fragments":["code"]},{"Key":"code because","Fragments":["you're"]},{"Key":"because you're","Fragments":["using"]},{"Key":"using Scala\"","Fragments":["isn't"]},{"Key":"Scala\" isn't","Fragments":["a"]},{"Key":"very convincing","Fragments":["argument."]},{"Key":"convincing argument.","Fragments":["This"]},{"Key":"argument. This","Fragments":["implementation"]},{"Key":"still purely","Fragments":["functional,"]},{"Key":"functional, concise,","Fragments":["and"]},{"Key":"concise, and","Fragments":["uses"]},{"Key":"and uses","Fragments":["FP"]},{"Key":"uses FP","Fragments":["paradigms."]},{"Key":"FP paradigms.","Fragments":["If"]},{"Key":"paradigms. If","Fragments":["Scala"]},{"Key":"If Scala","Fragments":["had"]},{"Key":"had zipWith","Fragments":["(to"]},{"Key":"zipWith (to","Fragments":["avoid"]},{"Key":"(to avoid","Fragments":["the","building"]},{"Key":"unnecessary tuple)","Fragments":["and"]},{"Key":"tuple) and","Fragments":["lazy"]},{"Key":"lazy lists","Fragments":["(to"]},{"Key":"lists (to","Fragments":["avoid"]},{"Key":"avoid building","Fragments":["up"]},{"Key":"building up","Fragments":["an"]},{"Key":"up an","Fragments":["O(n)"]},{"Key":"O(n) sized","Fragments":["data"]},{"Key":"sized data","Fragments":["structure"]},{"Key":"immediately discarded)","Fragments":["then"]},{"Key":"discarded) then","Fragments":["it"]},{"Key":"that you've","Fragments":["proposed."]},{"Key":"you're really","Fragments":["that"]},{"Key":"really that","Fragments":["concerned"]},{"Key":"that concerned","Fragments":["about"]},{"Key":"concerned about","Fragments":["intermediate"]},{"Key":"about intermediate","Fragments":["garbage"]},{"Key":"intermediate garbage","Fragments":["objects"]},{"Key":"objects I","Fragments":["think"]},{"Key":"off writing","Fragments":["this"]},{"Key":"C! Language","Fragments":["implementations"]},{"Key":"Language implementations","Fragments":["have"]},{"Key":"implementations have","Fragments":["garbage"]},{"Key":"have garbage","Fragments":["collection"]},{"Key":"collection for","Fragments":["a"]},{"Key":"good reason.","Fragments":["Why"]},{"Key":"reason. Why","Fragments":["not"]},{"Key":"not optimize","Fragments":["for"]},{"Key":"for readability?","Fragments":["(by"]},{"Key":"readability? (by","Fragments":["humans?)"]},{"Key":"That creates","Fragments":["garbage,"]},{"Key":"creates garbage,","Fragments":["this"]},{"Key":"garbage, this","Fragments":["does"]},{"Key":"Scala's lists","Fragments":["have"]},{"Key":"lists have","Fragments":["`zip`"]},{"Key":"have `zip`","Fragments":["and"]},{"Key":"`count` methods","Fragments":["which"]},{"Key":"methods which","Fragments":["do"]},{"Key":"which do","Fragments":["pretty"]},{"Key":"do pretty","Fragments":["much"]},{"Key":"much exactly","Fragments":["what"]},{"Key":"Nicely improved","Fragments":["compared"]},{"Key":"improved compared","Fragments":["to"]},{"Key":"to version","Fragments":["one."]},{"Key":"`getOrElse` method","Fragments":["in"]},{"Key":"the `grade`","Fragments":["method"]},{"Key":"`grade` method","Fragments":["to"]},{"Key":"the a","Fragments":["possible"]},{"Key":"a possible","Fragments":["non-existing"]},{"Key":"possible non-existing","Fragments":["grade."]},{"Key":"non-existing grade.","Fragments":["You"]},{"Key":"grade. You","Fragments":["could"]},{"Key":"use `withDefaulValuet`","Fragments":["when"]},{"Key":"`withDefaulValuet` when","Fragments":["constructing"]},{"Key":"when constructing","Fragments":["the"]},{"Key":"constructing the","Fragments":["map."]},{"Key":"Avoiding identical","Fragments":["words"]},{"Key":"identical words","Fragments":["is"]},{"Key":"words is","Fragments":["a"]},{"Key":"a pig","Fragments":["-"]},{"Key":"pig -","Fragments":["I"]},{"Key":"simpler one-liner","Fragments":["is"]},{"Key":"one-liner is","Fragments":["possible"]},{"Key":"possible if","Fragments":["that"]},{"Key":"that requirement","Fragments":["was"]},{"Key":"requirement was","Fragments":["not"]},{"Key":"and regex","Fragments":["matching"]},{"Key":"more different","Fragments":["approach."]},{"Key":"of ```if","Fragments":["else```"]},{"Key":"```if else```","Fragments":["statements,"]},{"Key":"else``` statements,","Fragments":["try"]},{"Key":"statements, try","Fragments":["pattern"]},{"Key":"out Scala's","Fragments":["regex"]},{"Key":"could name","Fragments":["your"]},{"Key":"\"business domain\",","Fragments":["for"]},{"Key":"domain\", for","Fragments":["example"]},{"Key":"example ```isQuestion```","Fragments":["instead"]},{"Key":"```isQuestion``` instead","Fragments":["of"]},{"Key":"of ```map/reduce```","Fragments":["(we"]},{"Key":"```map/reduce``` (we","Fragments":["are"]},{"Key":"(we are","Fragments":["not"]},{"Key":"not into","Fragments":["big"]},{"Key":"into big","Fragments":["data"]},{"Key":"big data","Fragments":["processing"]},{"Key":"data processing","Fragments":["here):"]},{"Key":"processing here):","Fragments":["make"]},{"Key":"here): make","Fragments":["it"]},{"Key":"it simple,","Fragments":["use"]},{"Key":"simple, use","Fragments":["```forall```"]},{"Key":"use ```forall```","Fragments":["and"]},{"Key":"def grade(i:","Fragments":["Int):"]},{"Key":"grade(i: Int):","Fragments":["Seq[String]"]},{"Key":"Just testing","Fragments":["the"]},{"Key":"testing the","Fragments":["workflow"]},{"Key":"the workflow","Fragments":["of"]},{"Key":"workflow of","Fragments":["exercism.io"]},{"Key":"of exercism.io","Fragments":["..."]},{"Key":"exercism.io ...","Fragments":["more"]},{"Key":"... more","Fragments":["to"]},{"Key":"come later.","Fragments":["Maybe."]},{"Key":"that ```getMeetupDate```","Fragments":["modifies"]},{"Key":"```getMeetupDate``` modifies","Fragments":["the"]},{"Key":"modifies the","Fragments":["outside"]},{"Key":"outside ```calendar```","Fragments":["as"]},{"Key":"```calendar``` as","Fragments":["a"]},{"Key":"side effect.","Fragments":["Can"]},{"Key":"effect. Can","Fragments":["you"]},{"Key":"function argument","Fragments":["instead"]},{"Key":"argument instead","Fragments":["so"]},{"Key":"instead so","Fragments":["that"]},{"Key":"either no","Fragments":["side"]},{"Key":"effect or","Fragments":["only"]},{"Key":"or only","Fragments":["one"]},{"Key":"one inside","Fragments":["the"]},{"Key":"Hmm. The","Fragments":["```turnWith```"]},{"Key":"The ```turnWith```","Fragments":["function"]},{"Key":"```turnWith``` function","Fragments":["is"]},{"Key":"somewhat tricky.","Fragments":["But"]},{"Key":"tricky. But","Fragments":["ok,"]},{"Key":"But ok,","Fragments":["why"]},{"Key":"not -","Fragments":["it"]},{"Key":"it works!","Fragments":[":-)"]},{"Key":"well, this","Fragments":["is"]},{"Key":"taste to","Fragments":["some"]},{"Key":"reason might","Fragments":["be:"]},{"Key":"might be:","Fragments":["I"]},{"Key":"be: I","Fragments":["don't"]},{"Key":"any conversion","Fragments":["to"]},{"Key":"to immutable","Fragments":["Map"]},{"Key":" Everything","Fragments":["looks"]},{"Key":"Everything looks","Fragments":["very"]},{"Key":"you've chosen","Fragments":["to"]},{"Key":"chosen to","Fragments":["use"]},{"Key":"immutable map","Fragments":["as"]},{"Key":"as var","Fragments":["instead"]},{"Key":"var instead","Fragments":["of"]},{"Key":"I put","Fragments":["this"]},{"Key":"put this","Fragments":["one"]},{"Key":"one off","Fragments":["forever"]},{"Key":"off forever","Fragments":["because"]},{"Key":"forever because","Fragments":["I"]},{"Key":"really didn't","Fragments":["want"]},{"Key":"didn't want","Fragments":["to"]},{"Key":"to finding","Fragments":["if"]},{"Key":"finding if","Fragments":["a"]},{"Key":"list was","Fragments":["contained"]},{"Key":"was contained","Fragments":["within"]},{"Key":"contained within","Fragments":["another."]},{"Key":"within another.","Fragments":["I"]},{"Key":"another. I","Fragments":["started"]},{"Key":"recursive function","Fragments":["to"]},{"Key":"it out,","Fragments":["was"]},{"Key":"out, was","Fragments":["looking"]},{"Key":"looking up","Fragments":["how"]},{"Key":"up how","Fragments":["to"]},{"Key":"a slice","Fragments":["of"]},{"Key":"slice of","Fragments":["a"]},{"Key":"```List``` in","Fragments":["scala,"]},{"Key":"scala, came","Fragments":["across"]},{"Key":"came across","Fragments":["the"]},{"Key":"across the","Fragments":["documentation"]},{"Key":"documentation of","Fragments":["```containsSlice()```"]},{"Key":"of ```containsSlice()```","Fragments":["and"]},{"Key":"```containsSlice()``` and","Fragments":["realized"]},{"Key":"and realized","Fragments":["that"]},{"Key":"prefer having","Fragments":["one"]},{"Key":"having one","Fragments":["if-else"]},{"Key":"one if-else","Fragments":["instead"]},{"Key":"matching plus","Fragments":["nested"]},{"Key":"plus nested","Fragments":["if-else."]},{"Key":"little different,","Fragments":["use"]},{"Key":"different, use","Fragments":["`unfoldRight`:"]},{"Key":"by explicitly","Fragments":["referencing"]},{"Key":"explicitly referencing","Fragments":["the"]},{"Key":"referencing the","Fragments":["tuples"]},{"Key":"tuples provided","Fragments":["by"]},{"Key":"by \"zip\"","Fragments":["operation."]},{"Key":"The anonymous","Fragments":["pattern"]},{"Key":"in #1","Fragments":["iteration"]},{"Key":"#1 iteration","Fragments":["automatically"]},{"Key":"iteration automatically","Fragments":["unpacks"]},{"Key":"automatically unpacks","Fragments":["the"]},{"Key":"unpacks the","Fragments":["tuple"]},{"Key":"tuple for","Fragments":["us."]},{"Key":"Interesting use","Fragments":["of"]},{"Key":"the `apply()`","Fragments":["method"]},{"Key":"`apply()` method","Fragments":["to"]},{"Key":"First time","Fragments":["I"]},{"Key":"see this","Fragments":["construction."]},{"Key":"`count` leads","Fragments":["to"]},{"Key":"leads to","Fragments":["a"]},{"Key":"and declarative","Fragments":["solution."]},{"Key":"more declaratively","Fragments":["(and"]},{"Key":"declaratively (and","Fragments":["with"]},{"Key":"(and with","Fragments":["identical"]},{"Key":"with identical","Fragments":["performance"]},{"Key":"identical performance","Fragments":["characteristics)"]},{"Key":"performance characteristics)","Fragments":["using"]},{"Key":"characteristics) using","Fragments":["`zip`."]},{"Key":"I'll need","Fragments":["to","to"]},{"Key":"enumerate all","Fragments":["the","the"]},{"Key":"Because you","Fragments":["don't"]},{"Key":"the members","Fragments":["of"]},{"Key":"members of","Fragments":["sequence"]},{"Key":"use ranges","Fragments":["like"]},{"Key":"ranges like","Fragments":["nums"]},{"Key":"like nums","Fragments":["="]},{"Key":"nums =","Fragments":["'0'"]},{"Key":"= '0'","Fragments":["to"]},{"Key":"'0' to","Fragments":["'9'"]},{"Key":"'9' and","Fragments":["chars"]},{"Key":"and chars","Fragments":["="]},{"Key":"chars =","Fragments":["'A'"]},{"Key":"to 'Z'","Fragments":["instead"]},{"Key":"'Z' instead","Fragments":["of"]},{"Key":"for ```(seconds","Fragments":["_)"]},{"Key":"```(seconds _)","Fragments":["round2decimalPlaces```"]},{"Key":" @hiram:","Fragments":["Well,"]},{"Key":"@hiram: Well,","Fragments":["of"]},{"Key":"Well, of","Fragments":["course"]},{"Key":"course I","Fragments":["do"]},{"Key":"know answer","Fragments":["to"]},{"Key":"right ballance,","Fragments":["to"]},{"Key":"ballance, to","Fragments":["be"]},{"Key":"be honest","Fragments":["-"]},{"Key":"honest -","Fragments":["on"]},{"Key":"this rather","Fragments":["basic"]},{"Key":"rather basic","Fragments":["question"]},{"Key":"basic question","Fragments":["I"]},{"Key":"question I","Fragments":["like"]},{"Key":"try make","Fragments":["it"]},{"Key":"as short","Fragments":["as"]},{"Key":"short as","Fragments":["possible."]},{"Key":"possible. In","Fragments":["real"]},{"Key":"In real","Fragments":["life"]},{"Key":"life scenario","Fragments":["I"]},{"Key":"scenario I","Fragments":["woud"]},{"Key":"I woud","Fragments":["definetly"]},{"Key":"woud definetly","Fragments":["add"]},{"Key":"definetly add","Fragments":["message"]},{"Key":"add message","Fragments":["to"]},{"Key":"to IAE,","Fragments":["that's"]},{"Key":"IAE, that's","Fragments":["a"]},{"Key":"a must","Fragments":["and"]},{"Key":"must and","Fragments":["depending"]},{"Key":"and depending","Fragments":["on"]},{"Key":"what level","Fragments":["Hamming"]},{"Key":"level Hamming","Fragments":["ojbect"]},{"Key":"Hamming ojbect","Fragments":["would"]},{"Key":"ojbect would","Fragments":["be"]},{"Key":"be I'd","Fragments":["make"]},{"Key":"but less","Fragments":["informative."]},{"Key":"less informative.","Fragments":["What"]},{"Key":"informative. What","Fragments":["is"]},{"Key":"balance I","Fragments":["wonder?"]},{"Key":"I wonder?","Fragments":["Is"]},{"Key":"wonder? Is","Fragments":["it"]},{"Key":"it preferred","Fragments":["in"]},{"Key":"preferred in","Fragments":["Scala"]},{"Key":"leave details","Fragments":["like"]},{"Key":"details like","Fragments":["what"]},{"Key":"what s1/s2","Fragments":["are,"]},{"Key":"s1/s2 are,","Fragments":["and"]},{"Key":"are, and","Fragments":["why"]},{"Key":"the IAE","Fragments":["is"]},{"Key":"IAE is","Fragments":["thrown,"]},{"Key":"is thrown,","Fragments":["in"]},{"Key":"thrown, in","Fragments":["the"]},{"Key":"for FP","Fragments":["programming"]},{"Key":"FP programming","Fragments":["suggestion,"]},{"Key":"programming suggestion,","Fragments":["now"]},{"Key":"suggestion, now","Fragments":["operating"]},{"Key":"now operating","Fragments":["on"]},{"Key":"operating on","Fragments":["clone"]},{"Key":"on clone","Fragments":[":)"]},{"Key":"without if/else","Fragments":["blocks,"]},{"Key":"if/else blocks,","Fragments":["but"]},{"Key":"blocks, but","Fragments":["your"]},{"Key":"version does","Fragments":["look"]},{"Key":"does look","Fragments":["a"]},{"Key":"lot simpler","Fragments":["and"]},{"Key":"added check","Fragments":["about"]},{"Key":"check about","Fragments":["zero-sided"]},{"Key":"about zero-sided","Fragments":["use"]},{"Key":"zero-sided use","Fragments":["cases"]},{"Key":" sorry,","Fragments":["slipped"]},{"Key":"sorry, slipped","Fragments":["my"]},{"Key":"slipped my","Fragments":["notice"]},{"Key":"my notice","Fragments":["last"]},{"Key":"notice last","Fragments":["time:"]},{"Key":"last time:","Fragments":["you"]},{"Key":"time: you","Fragments":["could"]},{"Key":"Range ```'a'","Fragments":["to"]},{"Key":"'z'``` for","Fragments":["```alphabet```."]},{"Key":"good. Being","Fragments":["a"]},{"Key":"Being a","Fragments":["bit"]},{"Key":"bit picky,","Fragments":["the"]},{"Key":"picky, the","Fragments":["innermost"]},{"Key":"the innermost","Fragments":["parens"]},{"Key":"innermost parens","Fragments":["after"]},{"Key":"after `.count`","Fragments":["looks"]},{"Key":"`.count` looks","Fragments":["redundant."]},{"Key":"as opposed","Fragments":["to"]},{"Key":"opposed to","Fragments":["the"]},{"Key":"the Python","Fragments":["version"]},{"Key":"Python version","Fragments":["of"]},{"Key":"of it.","Fragments":["Maybe"]},{"Key":"it. Maybe","Fragments":["because"]},{"Key":"Maybe because","Fragments":["I've"]},{"Key":"because I've","Fragments":["done"]},{"Key":"I've done","Fragments":["a"]},{"Key":"done a","Fragments":["lot"]},{"Key":"of work","Fragments":["with","to"]},{"Key":"Java date/time","Fragments":["libraries,"]},{"Key":"date/time libraries,","Fragments":["but"]},{"Key":"libraries, but","Fragments":["it"]},{"Key":"just felt","Fragments":["very"]},{"Key":"felt very","Fragments":["approachable"]},{"Key":"very approachable","Fragments":["without"]},{"Key":"approachable without","Fragments":["needing"]},{"Key":"needing to","Fragments":["be"]},{"Key":"be brute","Fragments":["forced."]},{"Key":"brute forced.","Fragments":["I"]},{"Key":"forced. I","Fragments":["liked"]},{"Key":"liked my","Fragments":["helper"]},{"Key":"my helper","Fragments":["method,"]},{"Key":"helper method,","Fragments":["as"]},{"Key":"it made","Fragments":["everything"]},{"Key":"made everything","Fragments":["nice"]},{"Key":"everything nice","Fragments":["and"]},{"Key":"point. Thanks","Fragments":["for"]},{"Key":"of FP","Fragments":["(also"]},{"Key":"FP (also","Fragments":["considering"]},{"Key":"(also considering","Fragments":["thread"]},{"Key":"considering thread","Fragments":["safety)"]},{"Key":"thread safety)","Fragments":["if"]},{"Key":"safety) if","Fragments":["you"]},{"Key":"this ```cal```","Fragments":["and"]},{"Key":"```cal``` and","Fragments":["modify"]},{"Key":"effect, but","Fragments":["create"]},{"Key":"but create","Fragments":["a"]},{"Key":"new ```GregorianCalendar```","Fragments":["inside"]},{"Key":"```GregorianCalendar``` inside","Fragments":["```nth```."]},{"Key":"that: nice.","Fragments":[":-)"]},{"Key":"code satifies","Fragments":["the"]},{"Key":"satifies the","Fragments":["tests."]},{"Key":"But isn't","Fragments":["not"]},{"Key":"isn't not","Fragments":["realy"]},{"Key":"not realy","Fragments":["expressive."]},{"Key":"conditions Bobs","Fragments":["responds"]},{"Key":"Bobs responds","Fragments":["to."]},{"Key":"simplest and","Fragments":["most"]},{"Key":"most elegant.","Fragments":["The"]},{"Key":"elegant. The","Fragments":["Java"]},{"Key":"Java concurrency","Fragments":["objects"]},{"Key":"concurrency objects","Fragments":["in"]},{"Key":"objects in","Fragments":["`java.concurrent.atomic`"]},{"Key":"in `java.concurrent.atomic`","Fragments":["don't"]},{"Key":"`java.concurrent.atomic` don't","Fragments":["win"]},{"Key":"don't win","Fragments":["very"]},{"Key":"win very","Fragments":["much"]},{"Key":"use \"World\"","Fragments":["directly"]},{"Key":"\"World\" directly","Fragments":["as"]},{"Key":"directly as","Fragments":["default"]},{"Key":"as default","Fragments":["value."]},{"Key":"Included @dayna's","Fragments":["suggestion"]},{"Key":"@dayna's suggestion","Fragments":["to"]},{"Key":"use matched","Fragments":["variables"]},{"Key":"matched variables","Fragments":["inside"]},{"Key":"variables inside","Fragments":["of"]},{"Key":"`case` statement","Fragments":["instead"]},{"Key":"take advantage","Fragments":["of"]},{"Key":"that PrimeFactors","Fragments":["is"]},{"Key":"PrimeFactors is","Fragments":["a"]},{"Key":"can thus","Fragments":["keep"]},{"Key":"thus keep","Fragments":["state."]},{"Key":"keep state.","Fragments":["Like"]},{"Key":"state. Like","Fragments":["that,"]},{"Key":"Like that,","Fragments":["while"]},{"Key":"that, while","Fragments":["you"]},{"Key":"keep an","Fragments":["immutable"]},{"Key":"immutable interface","Fragments":["you"]},{"Key":"interface you","Fragments":["can"]},{"Key":"can speed","Fragments":["up"]},{"Key":"speed up","Fragments":["computation"]},{"Key":"up computation","Fragments":["in"]},{"Key":"computation in","Fragments":["the"]},{"Key":"the background","Fragments":["by"]},{"Key":"background by","Fragments":["storing"]},{"Key":"by storing","Fragments":["the"]},{"Key":"factors you've","Fragments":["computed"]},{"Key":"you've computed","Fragments":["so"]},{"Key":"computed so","Fragments":["far."]},{"Key":"Maybe it","Fragments":["would"]},{"Key":"elegant with","Fragments":["for-comprehension"]},{"Key":"with for-comprehension","Fragments":["(syntactic"]},{"Key":"for-comprehension (syntactic","Fragments":["sugar"]},{"Key":"(syntactic sugar","Fragments":["for"]},{"Key":" NOTE:","Fragments":["My"]},{"Key":"NOTE: My","Fragments":["second"]},{"Key":"My second","Fragments":["solution"]},{"Key":"second solution","Fragments":["is"]},{"Key":"actually justa","Fragments":["a"]},{"Key":"justa a","Fragments":["copy"]},{"Key":"of @bobbie","Fragments":["solution"]},{"Key":"@bobbie solution","Fragments":["for"]},{"Key":"own reference","Fragments":["as"]},{"Key":"reference as","Fragments":["its"]},{"Key":"as its","Fragments":["a"]},{"Key":"its a","Fragments":["very","var..."]},{"Key":"very neat","Fragments":["little"]},{"Key":"neat little","Fragments":["solution."]},{"Key":"improve readability!","Fragments":[":-)"]},{"Key":"Ok, it","Fragments":["works."]},{"Key":"it works.","Fragments":["But"]},{"Key":"works. But","Fragments":["looks"]},{"Key":"But looks","Fragments":["too"]},{"Key":"me for","Fragments":["what"]},{"Key":"does (and","Fragments":["btwm"]},{"Key":"(and btwm","Fragments":["it"]},{"Key":"btwm it","Fragments":["is"]},{"Key":"too US-fixated!","Fragments":[";-)."]},{"Key":"think as","Fragments":["Strings"]},{"Key":"as Strings","Fragments":["as"]},{"Key":"Strings as","Fragments":["a"]},{"Key":"```Seq[Char]``` (as","Fragments":["a"]},{"Key":"String indeed","Fragments":["is"]},{"Key":"indeed is","Fragments":["in"]},{"Key":"in Scala)","Fragments":["when"]},{"Key":"Scala) when","Fragments":["you"]},{"Key":"nice Scala","Fragments":["Collection"]},{"Key":"like \"filter\"","Fragments":["etc."]},{"Key":"And parsing","Fragments":["with"]},{"Key":"parsing with","Fragments":["a"]},{"Key":"regex could","Fragments":["also"]},{"Key":"started off","Fragments":["using"]},{"Key":"off using","Fragments":["patterns"]},{"Key":"using patterns","Fragments":["and"]},{"Key":"patterns and","Fragments":["then"]},{"Key":"I though","Fragments":["it"]},{"Key":"complicated :)","Fragments":["hence"]},{"Key":":) hence","Fragments":["make"]},{"Key":"hence make","Fragments":["one"]},{"Key":"make one","Fragments":["test"]},{"Key":"test pass","Fragments":["one"]},{"Key":"pass one","Fragments":["by"]},{"Key":"one by","Fragments":["one"]},{"Key":"one yielded","Fragments":["this"]},{"Key":"yielded this","Fragments":["solution."]},{"Key":"solution. Agree","Fragments":["with"]},{"Key":"Agree with","Fragments":["the"]},{"Key":"btw, declaring","Fragments":["digits"]},{"Key":"lazy has","Fragments":["not"]},{"Key":"has not","Fragments":["the"]},{"Key":"desired effect","Fragments":["here"]},{"Key":"effect here","Fragments":["as"]},{"Key":"other two","Fragments":["val's"]},{"Key":"two val's","Fragments":["referring"]},{"Key":"val's referring","Fragments":["to"]},{"Key":"it are","Fragments":["declared"]},{"Key":"are declared","Fragments":["non-lazy."]},{"Key":"this solution,","Fragments":["I"]},{"Key":"just took","Fragments":["it"]},{"Key":"took it","Fragments":["when"]},{"Key":"when reviewing","Fragments":["solutions"]},{"Key":"reviewing solutions","Fragments":["by"]},{"Key":"solutions by","Fragments":["other"]},{"Key":"by other","Fragments":["people"]},{"Key":"people due","Fragments":["to"]},{"Key":"its sheer","Fragments":["elegance"]},{"Key":"other reasons","Fragments":["against"]},{"Key":"reasons against","Fragments":["it"]},{"Key":"it I","Fragments":["prefer"]},{"Key":"```foldLeft``` to","Fragments":["avoid"]},{"Key":"just google","Fragments":["for"]},{"Key":"google for","Fragments":["\"foldRight"]},{"Key":"for \"foldRight","Fragments":["vs"]},{"Key":"\"foldRight vs","Fragments":["foldLeft\""]},{"Key":"vs foldLeft\"","Fragments":["or"]},{"Key":"foldLeft\" or","Fragments":["so"]},{"Key":"would it","Fragments":["overflow."]},{"Key":"it overflow.","Fragments":["I"]},{"Key":"overflow. I","Fragments":["used"]},{"Key":"used foldR","Fragments":["jusr"]},{"Key":"foldR jusr","Fragments":["becouse"]},{"Key":"jusr becouse","Fragments":["it"]},{"Key":"becouse it","Fragments":["was"]},{"Key":"was first","Fragments":["on"]},{"Key":"first on","Fragments":["sugestions"]},{"Key":"on sugestions","Fragments":["(ashamed)"]},{"Key":"this ```Position(-1,","Fragments":["-1)```"]},{"Key":"```Position(-1, -1)```","Fragments":["for"]},{"Key":"-1)``` for","Fragments":["a"]},{"Key":"a ```None```","Fragments":["queen"]},{"Key":"```None``` queen","Fragments":["looks"]},{"Key":"queen looks","Fragments":["a"]},{"Key":"bit artificial","Fragments":["to"]},{"Key":"artificial to","Fragments":["me."]},{"Key":"not stay","Fragments":["in"]},{"Key":"the ```Option```","Fragments":["monad"]},{"Key":"```Option``` monad","Fragments":["instead"]},{"Key":"monad instead","Fragments":["of"]},{"Key":"Yes, that","Fragments":["was"]},{"Key":"a work","Fragments":["around"]},{"Key":"work around","Fragments":["to"]},{"Key":"cleaner API","Fragments":["for"]},{"Key":"API for","Fragments":["the"]},{"Key":"the \"Board\"","Fragments":["class."]},{"Key":"\"Board\" class.","Fragments":["I've"]},{"Key":"class. I've","Fragments":["submitted"]},{"Key":"I've submitted","Fragments":["another"]},{"Key":"another iteration","Fragments":["using"]},{"Key":" Turned","Fragments":["`nucleotidesCount`"]},{"Key":"Turned `nucleotidesCount`","Fragments":["into"]},{"Key":"`nucleotidesCount` into","Fragments":["`lazy"]},{"Key":"into `lazy","Fragments":["val`"]},{"Key":"val` instead","Fragments":["of"]},{"Key":"a `def`,","Fragments":["it"]},{"Key":"`def`, it","Fragments":["only"]},{"Key":"more referring","Fragments":["to"]},{"Key":"to http://exercism.io/exercises/scala/robot-name/readme","Fragments":["where"]},{"Key":"http://exercism.io/exercises/scala/robot-name/readme where","Fragments":["they"]},{"Key":"where they","Fragments":["only"]},{"Key":"only mention","Fragments":["```RX837"]},{"Key":"mention ```RX837","Fragments":["or"]},{"Key":"or BC811```.","Fragments":["But"]},{"Key":"BC811```. But","Fragments":["of"]},{"Key":"course, if","Fragments":["you"]},{"Key":"only believe","Fragments":["in"]},{"Key":"actual tests","Fragments":["..."]},{"Key":"tests ...","Fragments":[":-)"]},{"Key":" @jackson","Fragments":["yes"]},{"Key":"@jackson yes","Fragments":["I"]},{"Key":"yes I","Fragments":["need"]},{"Key":"see names","Fragments":["can't"]},{"Key":"names can't","Fragments":["be"]},{"Key":"be reused.","Fragments":["I'll"]},{"Key":"reused. I'll","Fragments":["do"]},{"Key":"next iteration.","Fragments":["The"]},{"Key":"iteration. The","Fragments":["tests"]},{"Key":"tests at","Fragments":["the"]},{"Key":"moment pass","Fragments":["as"]},{"Key":"pass as","Fragments":["the"]},{"Key":"the chances","Fragments":["two"]},{"Key":"chances two","Fragments":["robots"]},{"Key":"two robots","Fragments":["will"]},{"Key":"robots will","Fragments":["be"]},{"Key":"be created","Fragments":["with"]},{"Key":"created with","Fragments":["same"]},{"Key":"name are","Fragments":["remote."]},{"Key":"are remote.","Fragments":["But"]},{"Key":"remote. But","Fragments":["I"]},{"Key":"understand I","Fragments":["need"]},{"Key":"chars not","Fragments":["always"]},{"Key":"be two","Fragments":["(uppercase?)"]},{"Key":"two (uppercase?)","Fragments":["letters?"]},{"Key":"(uppercase?) letters?","Fragments":["(and"]},{"Key":"letters? (and","Fragments":["never"]},{"Key":"(and never","Fragments":["a"]},{"Key":"never a","Fragments":["digit)."]},{"Key":"also missing","Fragments":["is"]},{"Key":" @dudley","Fragments":["\\w"]},{"Key":"@dudley \\w","Fragments":["stands"]},{"Key":"\\w stands","Fragments":["for"]},{"Key":"stands for","Fragments":["\"word"]},{"Key":"for \"word","Fragments":["character\","]},{"Key":"\"word character\",","Fragments":["consisting"]},{"Key":"character\", consisting","Fragments":["of"]},{"Key":"called ``containsSlice``","Fragments":["that"]},{"Key":"``containsSlice`` that","Fragments":["is"]},{"Key":"defined on","Fragments":["List."]},{"Key":"List. I","Fragments":["think"]},{"Key":"cleaner to","Fragments":["use"]},{"Key":"works and","Fragments":["it's"]},{"Key":"a `SortedMap`","Fragments":["only","over"]},{"Key":"`SortedMap` only","Fragments":["in"]},{"Key":"only in","Fragments":["the"]},{"Key":"`sorted` function","Fragments":["and"]},{"Key":" @ardella,","Fragments":["true,"]},{"Key":"@ardella, true,","Fragments":["I'll"]},{"Key":"true, I'll","Fragments":["update"]},{"Key":"reflect it.","Fragments":["Thank"]},{"Key":"it. Thank","Fragments":["you."]},{"Key":"Hi, thought","Fragments":["I"]},{"Key":"should give","Fragments":["some"]},{"Key":"give some","Fragments":["feedback"]},{"Key":"improve mine.","Fragments":["Much"]},{"Key":"mine. Much","Fragments":["more"]},{"Key":"concise them","Fragments":["my"]},{"Key":"them my","Fragments":["initial"]},{"Key":"my initial","Fragments":["attempt"]},{"Key":"initial attempt","Fragments":["as"]},{"Key":"attempt as","Fragments":["I"]},{"Key":"about list","Fragments":["equality(doh!)."]},{"Key":"a sequence,","Fragments":["Scala"]},{"Key":"sequence, Scala","Fragments":["will"]},{"Key":"Scala will","Fragments":["implicitly"]},{"Key":"will implicitly","Fragments":["pass"]},{"Key":"implicitly pass","Fragments":["in"]},{"Key":"pass in","Fragments":["a"]},{"Key":"sort function","Fragments":["based"]},{"Key":"function based","Fragments":["on"]},{"Key":"type. Also","Fragments":["you"]},{"Key":"word param","Fragments":["to"]},{"Key":"param to","Fragments":["isAnagram"]},{"Key":"to isAnagram","Fragments":["as"]},{"Key":"isAnagram as","Fragments":["it's"]},{"Key":"it's in","Fragments":["the"]},{"Key":"class scope,","Fragments":["but"]},{"Key":"scope, but","Fragments":["if"]},{"Key":"prefer that","Fragments":["style"]},{"Key":"style I","Fragments":["wouldn't"]},{"Key":"you synchronize","Fragments":["on"]},{"Key":"synchronize on","Fragments":["increment,","the"]},{"Key":"on increment,","Fragments":["you"]},{"Key":"increment, you","Fragments":["will"]},{"Key":"other assignment,","Fragments":["ie."]},{"Key":"assignment, ie.","Fragments":["closing"]},{"Key":"ie. closing","Fragments":["the"]},{"Key":"account (although","Fragments":["contention"]},{"Key":"(although contention","Fragments":["between"]},{"Key":"between updates","Fragments":["and"]},{"Key":"updates and","Fragments":["closing"]},{"Key":"and closing","Fragments":["the"]},{"Key":"account is","Fragments":["not"]},{"Key":" Frankly","Fragments":["a"]},{"Key":"Frankly a","Fragments":["better"]},{"Key":"better spec","Fragments":["is"]},{"Key":"spec is","Fragments":["probably"]},{"Key":"agree. if","Fragments":["it"]},{"Key":"only about","Fragments":["boolean"]},{"Key":"about boolean","Fragments":["checks"]},{"Key":"boolean checks","Fragments":["if-else"]},{"Key":"checks if-else","Fragments":["is"]},{"Key":"probably more","Fragments":["adequate."]},{"Key":"Was there","Fragments":["a"]},{"Key":"using match?","Fragments":["If-else"]},{"Key":"match? If-else","Fragments":["seemed"]},{"Key":"If-else seemed","Fragments":["better"]},{"Key":"seemed better","Fragments":["here."]},{"Key":"```var``` and","Fragments":["side"]},{"Key":"and side","Fragments":["effects"]},{"Key":"w/ ```flatMap/map```","Fragments":["(you"]},{"Key":"```flatMap/map``` (you","Fragments":["can"]},{"Key":"even write","Fragments":["it"]},{"Key":"a ```for-comprehension```","Fragments":["if"]},{"Key":"```for-comprehension``` if","Fragments":["you"]},{"Key":"make `Dna`","Fragments":["a"]},{"Key":"class you","Fragments":["can","don't"]},{"Key":"the `apply`","Fragments":["method."]},{"Key":"`Dna` -","Fragments":["since"]},{"Key":"- since","Fragments":["it"]},{"Key":"is fixed,","Fragments":["it"]},{"Key":"fixed, it","Fragments":["can"]},{"Key":"be shared","Fragments":["between"]},{"Key":"between them","Fragments":["by"]},{"Key":"that returning","Fragments":["a"]},{"Key":"pair indicates","Fragments":["that"]},{"Key":"indicates that","Fragments":["your"]},{"Key":"function violates","Fragments":["the"]},{"Key":"violates the","Fragments":["Single"]},{"Key":"the Single","Fragments":["Responsibility"]},{"Key":"Single Responsibility","Fragments":["Principle:"]},{"Key":"Responsibility Principle:","Fragments":["It"]},{"Key":"Principle: It","Fragments":["does"]},{"Key":"does two","Fragments":["things"]},{"Key":"two things","Fragments":["instead"]},{"Key":"things instead","Fragments":["of"]},{"Key":"just one.","Fragments":[":-)"]},{"Key":"would separate","Fragments":["the"]},{"Key":"the two,","Fragments":["and"]},{"Key":"two, and","Fragments":["have"]},{"Key":"a cache","Fragments":["for"]},{"Key":"Not happy","Fragments":["about"]},{"Key":"happy about","Fragments":["the"]},{"Key":"tuple return","Fragments":["here."]},{"Key":"return here.","Fragments":["but"]},{"Key":"here. but","Fragments":["it"]},{"Key":"an attempt","Fragments":["to"]},{"Key":"one algorithm","Fragments":["used"]},{"Key":"algorithm used","Fragments":["by"]},{"Key":"by both","Fragments":["methods."]},{"Key":"Changed it","Fragments":["to"]},{"Key":"to tail-recursive","Fragments":["as"]},{"Key":"tail-recursive as","Fragments":["well."]},{"Key":"well. \"recurse\"","Fragments":["as"]},{"Key":"\"recurse\" as","Fragments":["a"]},{"Key":"an extremely","Fragments":["horrible..."]},{"Key":"extremely horrible...","Fragments":["sorry."]},{"Key":"horrible... sorry.","Fragments":["Should"]},{"Key":"sorry. Should","Fragments":["fix"]},{"Key":"make `Year`","Fragments":["a"]},{"Key":"`Year` a","Fragments":["case"]},{"Key":"object with","Fragments":["its"]},{"Key":"with its","Fragments":["apply"]},{"Key":"its apply","Fragments":["method"]},{"Key":"Another case","Fragments":["of"]},{"Key":"Scala implicit","Fragments":["conversion"]},{"Key":"guess \"wrapString\"","Fragments":["in"]},{"Key":"\"wrapString\" in","Fragments":["Predef"]},{"Key":"Predef is","Fragments":["responsible"]},{"Key":"is responsible","Fragments":["here."]},{"Key":"Interesting, you're","Fragments":["right!"]},{"Key":"wondering how","Fragments":["the"]},{"Key":"is converted","Fragments":["automatically"]},{"Key":"converted automatically","Fragments":["to"]},{"Key":"automatically to","Fragments":["Seq[Char]."]},{"Key":"nice idea","Fragments":["to"]},{"Key":"own h_:","Fragments":["operator."]},{"Key":"h_: operator.","Fragments":[":-)"]},{"Key":"declare s1","Fragments":["and"]},{"Key":"s2 of","Fragments":["type"]},{"Key":"type ```Seq[Char]```","Fragments":["then"]},{"Key":"```Seq[Char]``` then","Fragments":["you"]},{"Key":"the build-in","Fragments":["\"+:\""]},{"Key":"build-in \"+:\"","Fragments":["operator"]},{"Key":"\"+:\" operator","Fragments":["instead."]},{"Key":"another approach","Fragments":["you"]},{"Key":"with zipping","Fragments":["the"]},{"Key":"Strings instead","Fragments":["of"]},{"Key":"of pattern-matching","Fragments":["them"]},{"Key":"pattern-matching them","Fragments":["individually."]},{"Key":"Didn't need","Fragments":["the"]},{"Key":"the toList","Fragments":["from"]},{"Key":"toList from","Fragments":["previous"]},{"Key":"from previous","Fragments":["iteration."]},{"Key":"@hilda just","Fragments":["saw"]},{"Key":"just saw","Fragments":["your"]},{"Key":"your answer,","Fragments":["great!"]},{"Key":"Hi @kaitlyn","Fragments":["you"]},{"Key":"@kaitlyn you","Fragments":["could"]},{"Key":"use split","Fragments":["function?"]},{"Key":"split function?","Fragments":["I"]},{"Key":"function? I","Fragments":["think"]},{"Key":"can create","Fragments":["a"]},{"Key":"clean solution","Fragments":["with"]},{"Key":"and array's","Fragments":["functions."]},{"Key":"thing -","Fragments":["I've"]},{"Key":"- I've","Fragments":["made"]},{"Key":"same mistake","Fragments":["-"]},{"Key":"mistake -","Fragments":["you"]},{"Key":"original calendar,","Fragments":["but"]},{"Key":"calendar, but","Fragments":["work"]},{"Key":"but work","Fragments":["on"]},{"Key":"on and","Fragments":["return"]},{"Key":"return copy","Fragments":["of"]},{"Key":" GIGASECOND","Fragments":["is"]},{"Key":"GIGASECOND is","Fragments":["a"]},{"Key":"could go","Fragments":["to"]},{"Key":"go to","Fragments":["some"]},{"Key":"object (-\u003e","Fragments":["companion"]},{"Key":"(-\u003e companion","Fragments":["object?)."]},{"Key":"But most","Fragments":["important"]},{"Key":"important is","Fragments":["@tyshawn"]},{"Key":"is @tyshawn","Fragments":["'s"]},{"Key":"@tyshawn 's","Fragments":["point"]},{"Key":"'s point","Fragments":["about"]},{"Key":"about returning","Fragments":["a"]},{"Key":"copy to","Fragments":["avoid"]},{"Key":"avoid side","Fragments":["effects."]},{"Key":"that (regarding","Fragments":["the"]},{"Key":"(regarding the","Fragments":["pattern"]},{"Key":"matching) and","Fragments":["after"]},{"Key":"and after","Fragments":["reviewing"]},{"Key":"after reviewing","Fragments":["some"]},{"Key":"reviewing some","Fragments":["other"]},{"Key":"solutions it","Fragments":["appears"]},{"Key":"it appears","Fragments":["to"]},{"Key":"appears to","Fragments":["be"]},{"Key":"most popular","Fragments":["approach."]},{"Key":"really use","Fragments":["the"]},{"Key":"matching since","Fragments":["we"]},{"Key":"since we","Fragments":["are"]},{"Key":"only matching","Fragments":["against"]},{"Key":"against an","Fragments":["untyped"]},{"Key":"an untyped","Fragments":["variable"]},{"Key":"untyped variable","Fragments":["and"]},{"Key":"variable and","Fragments":["the"]},{"Key":"the guards","Fragments":["do"]},{"Key":"guards do","Fragments":["all"]},{"Key":"the work.","Fragments":["This"]},{"Key":"work. This","Fragments":["is"]},{"Key":"didn't propose","Fragments":["pattern"]},{"Key":"propose pattern","Fragments":["matching"]},{"Key":"There however","Fragments":["some"]},{"Key":"however some","Fragments":["very"]},{"Key":"some very","Fragments":["elegant"]},{"Key":"very elegant","Fragments":["solutions"]},{"Key":"elegant solutions","Fragments":["that"]},{"Key":"that build","Fragments":["on"]},{"Key":"build on","Fragments":["objects"]},{"Key":"on objects","Fragments":["with"]},{"Key":"with their","Fragments":["own"]},{"Key":"own `unapply`","Fragments":["definitions:"]},{"Key":"case object","Fragments":["Question"]},{"Key":"def unapply(statement:","Fragments":["String)"]},{"Key":"unapply(statement: String)","Fragments":["="]},{"Key":"class Bob","Fragments":["{"]},{"Key":" hey(statement:String):String","Fragments":["={"]},{"Key":"case Question()","Fragments":["=\u003e"]},{"Key":"Question() =\u003e","Fragments":["\"Sure.\""]},{"Key":" @alicia:","Fragments":["Thanks"]},{"Key":"@alicia: Thanks","Fragments":["for"]},{"Key":"suggestion I've","Fragments":["incorporated"]},{"Key":"I've incorporated","Fragments":["it"]},{"Key":"incorporated it","Fragments":["in"]},{"Key":"Yeah, you","Fragments":["are"]},{"Key":"a direct","Fragments":["formula"]},{"Key":"direct formula","Fragments":["for"]},{"Key":"for sumOfSquares,","Fragments":["as"]},{"Key":"sumOfSquares, as","Fragments":["you"]},{"Key":"did for","Fragments":["squareOfSums"]},{"Key":" two","Fragments":["things:"]},{"Key":"```SortedMap``` for","Fragments":["simplification."]},{"Key":"overdo the","Fragments":["throws"]},{"Key":"the throws","Fragments":["annotations!"]},{"Key":"throws annotations!","Fragments":["In"]},{"Key":"annotations! In","Fragments":["fact,"]},{"Key":"fact, I","Fragments":["would"]},{"Key":"would completely","Fragments":["do"]},{"Key":"completely do","Fragments":["w/o"]},{"Key":"w/o them","Fragments":["(only"]},{"Key":"them (only","Fragments":["if"]},{"Key":"(only if","Fragments":["it"]},{"Key":"some high-level","Fragments":["API"]},{"Key":"high-level API","Fragments":["and/or"]},{"Key":"API and/or","Fragments":["called"]},{"Key":"and/or called","Fragments":["from"]},{"Key":"called from","Fragments":["Java)."]},{"Key":"Do the","Fragments":["validity"]},{"Key":"validity just","Fragments":["once"]},{"Key":"beginning (ideally","Fragments":["using"]},{"Key":"(ideally using","Fragments":["\"require\")."]},{"Key":"using \"require\").","Fragments":["And"]},{"Key":"\"require\"). And","Fragments":["from"]},{"Key":"And from","Fragments":["then"]},{"Key":"from then","Fragments":["on"]},{"Key":"on no","Fragments":["checks"]},{"Key":"no checks","Fragments":["and"]},{"Key":"checks and","Fragments":["thrown"]},{"Key":"and thrown","Fragments":["exceptions"]},{"Key":"thrown exceptions","Fragments":["anymore."]},{"Key":"And avoid","Fragments":["unnecessary"]},{"Key":"avoid unnecessary","Fragments":["semicolons!"]},{"Key":"unnecessary semicolons!","Fragments":[";-)"]},{"Key":"this tail","Fragments":["recursive,"]},{"Key":"recursive, to","Fragments":["avoid"]},{"Key":"avoid consuming","Fragments":["the"]},{"Key":"consuming the","Fragments":["stack?"]},{"Key":"the recursion","Fragments":["with"]},{"Key":"recursion with","Fragments":["foldLeft."]},{"Key":"... count","Fragments":["{"]},{"Key":"{ case(a,b)","Fragments":["=\u003e"]},{"Key":"case(a,b) =\u003e","Fragments":["a!=b"]},{"Key":"=\u003e a!=b","Fragments":["}"]},{"Key":"a!=b }","Fragments":["?"]},{"Key":"} ?","Fragments":[";)"]},{"Key":" Rewrite","Fragments":["it"]},{"Key":"Rewrite it","Fragments":["with"]},{"Key":"with tail-recursive","Fragments":["foldLeft."]},{"Key":"looks clean","Fragments":["and"]},{"Key":"and effective.","Fragments":["However,"]},{"Key":"effective. However,","Fragments":["I"]},{"Key":"be robust","Fragments":["enough"]},{"Key":"robust enough","Fragments":["to"]},{"Key":"handle very","Fragments":["long"]},{"Key":"long lists.","Fragments":["How"]},{"Key":"lists. How","Fragments":["would"]},{"Key":" @holden","Fragments":["I"]},{"Key":"@holden I","Fragments":["agree"]},{"Key":"agree this","Fragments":["solution"]},{"Key":"`foldLeft` is","Fragments":["indeed"]},{"Key":"indeed tail-recursive","Fragments":["but"]},{"Key":"tail-recursive but","Fragments":["you"]},{"Key":"also implement","Fragments":["a"]},{"Key":"what @holden","Fragments":["may"]},{"Key":"@holden may","Fragments":["have"]},{"Key":"been referring","Fragments":["to."]},{"Key":"Using `unapply`","Fragments":["is"]},{"Key":"`unapply` is","Fragments":["certainly"]},{"Key":"is certainly","Fragments":["a"]},{"Key":"certainly a","Fragments":["creative"]},{"Key":"a creative","Fragments":["way"]},{"Key":"creative way","Fragments":["to"]},{"Key":"solve this.","Fragments":[":-)"]},{"Key":" @freida","Fragments":["I"]},{"Key":"@freida I","Fragments":["guess"]},{"Key":"guess then","Fragments":["you'll"]},{"Key":"then you'll","Fragments":["have"]},{"Key":"you'll have","Fragments":["to"]},{"Key":"put something","Fragments":["like"]},{"Key":"like `identity[Boolean]`","Fragments":["or"]},{"Key":"`identity[Boolean]` or","Fragments":["`i"]},{"Key":"or `i","Fragments":["=\u003e"]},{"Key":"`i =\u003e","Fragments":["i`"]},{"Key":"=\u003e i`","Fragments":["into"]},{"Key":"i` into","Fragments":["`count`."]},{"Key":"into `count`.","Fragments":["Somehow"]},{"Key":"`count`. Somehow","Fragments":["`count(_)`"]},{"Key":"Somehow `count(_)`","Fragments":["doesn't"]},{"Key":"`count(_)` doesn't","Fragments":["work"]},{"Key":"best and","Fragments":["shortest"]},{"Key":"and shortest","Fragments":["version!"]},{"Key":"shortest version!","Fragments":[":-)"]},{"Key":" great!","Fragments":["I"]},{"Key":"great! I","Fragments":["don't"]},{"Key":"can in","Fragments":["any"]},{"Key":"be further","Fragments":["improved."]},{"Key":"a tiny","Fragments":["bit"]},{"Key":"tiny bit","Fragments":["simpler:"]},{"Key":"bit simpler:","Fragments":["move"]},{"Key":"simpler: move","Fragments":["the"]},{"Key":"the ```!```","Fragments":["into"]},{"Key":"```!``` into","Fragments":["```(_"]},{"Key":"into ```(_","Fragments":["!="]},{"Key":"```(_ !=","Fragments":["_)```?"]},{"Key":"\u003e I","Fragments":["think"]},{"Key":" Yup,","Fragments":["I"]},{"Key":"Yup, I","Fragments":["agree"]},{"Key":"* Current","Fragments":["implementation"]},{"Key":"Current implementation","Fragments":["relies"]},{"Key":"implementation relies","Fragments":["on"]},{"Key":"relies on","Fragments":["the"]},{"Key":"the particular","Fragments":["order"]},{"Key":"particular order","Fragments":["of"]},{"Key":"of conditions","Fragments":["execution."]},{"Key":"conditions execution.","Fragments":["In"]},{"Key":"execution. In","Fragments":["this"]},{"Key":"seems reasonable.","Fragments":["In"]},{"Key":"reasonable. In","Fragments":["the"]},{"Key":"the order-independent","Fragments":["version"]},{"Key":"order-independent version","Fragments":["of"]},{"Key":"of ```isQuestion```","Fragments":["method"]},{"Key":"```isQuestion``` method","Fragments":["we"]},{"Key":"method we","Fragments":["should"]},{"Key":"also check","Fragments":["that"]},{"Key":"* We","Fragments":["don't"]},{"Key":"whole string","Fragments":["if"]},{"Key":"string if","Fragments":["it"]},{"Key":"it contains","Fragments":["a"]},{"Key":"* Would","Fragments":["the"]},{"Key":"Would the","Fragments":["`match`"]},{"Key":"in `hey`","Fragments":["be","whereas"]},{"Key":"`hey` be","Fragments":["more"]},{"Key":"more naturally","Fragments":["expressed"]},{"Key":"naturally expressed","Fragments":["as"]},{"Key":"as `if`","Fragments":["/"]},{"Key":"`if` /","Fragments":["`else`?"]},{"Key":"if `s","Fragments":["=="]},{"Key":"== \"\"`.","Fragments":["The"]},{"Key":"\"\"`. The","Fragments":["way"]},{"Key":"is ordered","Fragments":["this"]},{"Key":"ordered this","Fragments":["isn't"]},{"Key":"a problem,","Fragments":["but"]},{"Key":"problem, but","Fragments":["calling"]},{"Key":"but calling","Fragments":["`.lastOption`"]},{"Key":"calling `.lastOption`","Fragments":["would"]},{"Key":"`.lastOption` would","Fragments":["be"]},{"Key":"is `letters`","Fragments":["a"]},{"Key":"`letters` a","Fragments":["`lazy"]},{"Key":"am working","Fragments":["on"]},{"Key":"one still.","Fragments":["I"]},{"Key":"still. I","Fragments":["am"]},{"Key":"am stuck.","Fragments":["Currently,"]},{"Key":"stuck. Currently,","Fragments":["my"]},{"Key":"Currently, my","Fragments":["nucleotideCounts"]},{"Key":"my nucleotideCounts","Fragments":["is"]},{"Key":"nucleotideCounts is","Fragments":["getting"]},{"Key":"is getting","Fragments":["errors"]},{"Key":"getting errors","Fragments":["at"]},{"Key":"errors at","Fragments":["line"]},{"Key":"line 13.","Fragments":["Something"]},{"Key":"13. Something","Fragments":["is"]},{"Key":"Something is","Fragments":["wrong"]},{"Key":"with how","Fragments":["I","this"]},{"Key":"to yield","Fragments":["the"]},{"Key":"yield the","Fragments":["counts"]},{"Key":"sure why.","Fragments":["Looking"]},{"Key":"why. Looking","Fragments":["for"]},{"Key":"Looking for","Fragments":["some"]},{"Key":"some tips","Fragments":["and"]},{"Key":"and hints","Fragments":["to"]},{"Key":"hints to","Fragments":["continue"]},{"Key":"to continue","Fragments":["on"]},{"Key":"continue on","Fragments":["this.","my"]},{"Key":"on this.","Fragments":["Thank"]},{"Key":"this. Thank","Fragments":["you!"]},{"Key":"EDIT: I","Fragments":["found"]},{"Key":"error is","Fragments":["because"]},{"Key":"because c","Fragments":["\u003c-"]},{"Key":"c \u003c-","Fragments":["count(n)"]},{"Key":"\u003c- count(n)","Fragments":["can"]},{"Key":"count(n) can","Fragments":["not"]},{"Key":"be iterated.","Fragments":["\"Count\""]},{"Key":"iterated. \"Count\"","Fragments":["can"]},{"Key":"\"Count\" can","Fragments":["not"]},{"Key":"be iterated","Fragments":["over"]},{"Key":"iterated over","Fragments":["since"]},{"Key":"over since","Fragments":["it"]},{"Key":"map function.","Fragments":["The"]},{"Key":"function. The","Fragments":["way"]},{"Key":"that problem","Fragments":["was"]},{"Key":"count to","Fragments":["the"]},{"Key":"the yield","Fragments":["statement"]},{"Key":"yield statement","Fragments":["which"]},{"Key":"statement which","Fragments":["was"]},{"Key":"which was","Fragments":["an"]},{"Key":"and beautiful","Fragments":["solution."]},{"Key":"beautiful solution.","Fragments":["Additionally,"]},{"Key":"solution. Additionally,","Fragments":["I"]},{"Key":"was told","Fragments":["to"]},{"Key":"told to","Fragments":["transform"]},{"Key":"transform strand","Fragments":["to"]},{"Key":"strand to","Fragments":["a"]},{"Key":"times count","Fragments":["is"]},{"Key":"called since","Fragments":["sets"]},{"Key":"since sets","Fragments":["will"]},{"Key":"sets will","Fragments":["only"]},{"Key":"only hold","Fragments":["distinct"]},{"Key":"hold distinct","Fragments":["values."]},{"Key":"function generateRandomOfLength","Fragments":["will"]},{"Key":"generateRandomOfLength will","Fragments":["always"]},{"Key":"String with","Fragments":["different"]},{"Key":"different chars,","Fragments":["and"]},{"Key":"chars, and","Fragments":["cannot"]},{"Key":"and cannot","Fragments":["generate"]},{"Key":"cannot generate","Fragments":["Strings"]},{"Key":"generate Strings","Fragments":["with"]},{"Key":"Strings with","Fragments":["length"]},{"Key":"with length","Fragments":["\u003e"]},{"Key":"length \u003e","Fragments":["seq.size."]},{"Key":"your check","Fragments":["in"]},{"Key":"in reset()","Fragments":["will"]},{"Key":"reset() will","Fragments":["only"]},{"Key":"only prevent","Fragments":["the"]},{"Key":"to occur","Fragments":["twice"]},{"Key":"occur twice","Fragments":["in"]},{"Key":"row. but","Fragments":["not"]},{"Key":"it re-occurs","Fragments":["in,"]},{"Key":"re-occurs in,","Fragments":["say"]},{"Key":"third call","Fragments":["to"]},{"Key":"to reset().","Fragments":["and"]},{"Key":"reset(). and","Fragments":["what"]},{"Key":"about different","Fragments":["Robot"]},{"Key":"different Robot","Fragments":["instances?"]},{"Key":"Robot instances?","Fragments":["thus,"]},{"Key":"instances? thus,","Fragments":["uniqueness"]},{"Key":"thus, uniqueness","Fragments":["of"]},{"Key":"uniqueness of","Fragments":["names"]},{"Key":"of names","Fragments":["is"]},{"Key":"Thanks! Maybe","Fragments":["I"]},{"Key":"some ```val","Fragments":["variable```"]},{"Key":"```val variable```","Fragments":["for"]},{"Key":"variable``` for","Fragments":["readability,"]},{"Key":"Nice regex","Fragments":["usage!"]},{"Key":"regex usage!","Fragments":["Didn't"]},{"Key":"usage! Didn't","Fragments":["know"]},{"Key":"solution a","Fragments":["bit"]},{"Key":"read, but","Fragments":["very"]},{"Key":"The `#db`","Fragments":["method"]},{"Key":"`#db` method","Fragments":["is"]},{"Key":"immutable transformation","Fragments":["into"]},{"Key":"transformation into","Fragments":["a"]},{"Key":"`SortedMap` over","Fragments":["the"]},{"Key":"the mutable,","Fragments":["private"]},{"Key":"mutable, private","Fragments":["`internalDb`."]},{"Key":"The `#add`","Fragments":["operation"]},{"Key":"`#add` operation","Fragments":["is"]},{"Key":"is kept","Fragments":["simple"]},{"Key":"kept simple","Fragments":["by"]},{"Key":"simple by","Fragments":["extracting"]},{"Key":"Option unwrapping","Fragments":["into"]},{"Key":"unwrapping into","Fragments":["a"]},{"Key":"method `namesInGrade`","Fragments":["that"]},{"Key":"`namesInGrade` that","Fragments":["returns"]},{"Key":"empty `Seq`","Fragments":["in"]},{"Key":"`Seq` in","Fragments":["the"]},{"Key":"the `None`","Fragments":["case,"]},{"Key":"`None` case,","Fragments":["allowing"]},{"Key":"case, allowing","Fragments":["us"]},{"Key":"allowing us","Fragments":["to"]},{"Key":"always sum","Fragments":["two"]},{"Key":"sum two","Fragments":["`Seq`s"]},{"Key":"two `Seq`s","Fragments":["in"]},{"Key":"`Seq`s in","Fragments":["`#add`."]},{"Key":"Looking good!","Fragments":["A"]},{"Key":"A lot","Fragments":["of","of"]},{"Key":"defs don't","Fragments":["need","need"]},{"Key":"be defs.","Fragments":["areaCode","areaCode"]},{"Key":"defs. areaCode","Fragments":["and","and"]},{"Key":"areaCode and","Fragments":["number","number"]},{"Key":"and number","Fragments":["should","should"]},{"Key":"number should","Fragments":["probably","probably"]},{"Key":"be vals","Fragments":["since","since"]},{"Key":"vals since","Fragments":["they","they"]},{"Key":"they aren't","Fragments":["being","being"]},{"Key":"aren't being","Fragments":["called","called"]},{"Key":"called multiple","Fragments":["times,","times,"]},{"Key":"multiple times,","Fragments":["they","they"]},{"Key":"times, they","Fragments":["are","are"]},{"Key":"not changing.","Fragments":["So","So"]},{"Key":"changing. So","Fragments":["once","once"]},{"Key":"So once","Fragments":["it","it"]},{"Key":"calculated once","Fragments":["within","within"]},{"Key":"once within","Fragments":["the","the"]},{"Key":"the program,","Fragments":["it","it"]},{"Key":"program, it","Fragments":["will","will"]},{"Key":"again which","Fragments":["increases","increases"]},{"Key":"which increases","Fragments":["efficiency.","efficiency."]},{"Key":"since sanitize","Fragments":["returns","returns"]},{"Key":"sanitize returns","Fragments":["a","a"]},{"Key":"a String,","Fragments":["you","you","you"]},{"Key":"String, you","Fragments":["should","can","should"]},{"Key":"call all","Fragments":["of","of"]},{"Key":"your String","Fragments":["functions","functions"]},{"Key":"it directly,","Fragments":["instead","instead"]},{"Key":"directly, instead","Fragments":["of","of"]},{"Key":"of setting","Fragments":["rep","rep"]},{"Key":"setting rep","Fragments":["to","to"]},{"Key":"rep to","Fragments":["sanitize","sanitize"]},{"Key":"to sanitize","Fragments":["and","and"]},{"Key":"sanitize and","Fragments":["then","then"]},{"Key":"then modifying","Fragments":["rep","rep"]},{"Key":"modifying rep","Fragments":["in","in"]},{"Key":"rep in","Fragments":["your","your"]},{"Key":"code. Reduces","Fragments":["one"]},{"Key":"Reduces one","Fragments":["line,"]},{"Key":"one line,","Fragments":["not"]},{"Key":"line, not","Fragments":["necessarily"]},{"Key":"necessarily that","Fragments":["important,"]},{"Key":"that important,","Fragments":["but"]},{"Key":"but something","Fragments":["to"]},{"Key":"change `s`","Fragments":["directly,"]},{"Key":"`s` directly,","Fragments":["but"]},{"Key":"directly, but","Fragments":["since"]},{"Key":"are calling","Fragments":["sanitize"]},{"Key":"calling sanitize","Fragments":["on"]},{"Key":"sanitize on","Fragments":["it"]},{"Key":"since your","Fragments":["sanitize"]},{"Key":"your sanitize","Fragments":["function"]},{"Key":"sanitize function","Fragments":["returns"]},{"Key":"can chain","Fragments":["methods"]},{"Key":"chain methods","Fragments":["off"]},{"Key":"methods off","Fragments":["it"]},{"Key":"off it","Fragments":["that"]},{"Key":"on Strings.","Fragments":["To"]},{"Key":"Strings. To","Fragments":["continue"]},{"Key":"To continue","Fragments":["on"]},{"Key":"previous def","Fragments":["to"]},{"Key":"def to","Fragments":["val"]},{"Key":"to val","Fragments":["transformation,"]},{"Key":"val transformation,","Fragments":["you"]},{"Key":"transformation, you","Fragments":["can"]},{"Key":"actually make","Fragments":["`sanitize`"]},{"Key":"make `sanitize`","Fragments":["a"]},{"Key":"`sanitize` a","Fragments":["val,"]},{"Key":"a val,","Fragments":["too,"]},{"Key":"val, too,","Fragments":["since"]},{"Key":"too, since","Fragments":["it"]},{"Key":"only sanitizing","Fragments":["once"]},{"Key":"sanitizing once","Fragments":["per"]},{"Key":"once per","Fragments":["`PhoneNumber`,"]},{"Key":"per `PhoneNumber`,","Fragments":["so"]},{"Key":"`PhoneNumber`, so","Fragments":["you"]},{"Key":"replace all","Fragments":["instances"]},{"Key":"of rep","Fragments":["with"]},{"Key":"rep with","Fragments":["sanitize."]},{"Key":"`val sanitize","Fragments":["="]},{"Key":"sanitize =","Fragments":["{"]},{"Key":"val good_number","Fragments":["="]},{"Key":"good_number =","Fragments":["\"\"\"1?([0-9]{10})\"\"\".r"]},{"Key":"val cleaned:","Fragments":["String"]},{"Key":"cleaned: String","Fragments":["="]},{"Key":" cleaned","Fragments":["match"]},{"Key":"cleaned match","Fragments":["{"]},{"Key":"case good_number(keeper)","Fragments":["=\u003e"]},{"Key":"good_number(keeper) =\u003e","Fragments":["keeper"]},{"Key":"\u003e A","Fragments":["lot"]},{"Key":" 100%","Fragments":["correct,"]},{"Key":"100% correct,","Fragments":["thanks."]},{"Key":"correct, thanks.","Fragments":["I"]},{"Key":"started thinking","Fragments":["these"]},{"Key":"thinking these","Fragments":["would"]},{"Key":"these would","Fragments":["be"]},{"Key":"called more","Fragments":["than"]},{"Key":"than once","Fragments":["for"]},{"Key":"different input","Fragments":["values,"]},{"Key":"input values,","Fragments":["but"]},{"Key":"values, but","Fragments":["I"]},{"Key":"see that's","Fragments":["not"]},{"Key":"\u003e Also,","Fragments":["since"]},{"Key":"mean here","Fragments":["-"]},{"Key":"- rep","Fragments":["isn't"]},{"Key":"rep isn't","Fragments":["modified"]},{"Key":"isn't modified","Fragments":["at"]},{"Key":"modified at","Fragments":["all"]},{"Key":"all once","Fragments":["calculated"]},{"Key":"calculated (it","Fragments":["is"]},{"Key":"used `rep`","Fragments":["(and"]},{"Key":"`rep` (and","Fragments":["let"]},{"Key":"(and let","Fragments":["me"]},{"Key":"if I'm","Fragments":["thinking"]},{"Key":"this wrong)","Fragments":["is"]},{"Key":"wrong) is","Fragments":["that"]},{"Key":"couldn't modify","Fragments":["the"]},{"Key":"input parameter","Fragments":["`s`"]},{"Key":"parameter `s`","Fragments":["directly"]},{"Key":"`s` directly","Fragments":["in"]},{"Key":"constructor (or","Fragments":["can"]},{"Key":"(or can","Fragments":["I?),"]},{"Key":"can I?),","Fragments":["so"]},{"Key":"I?), so","Fragments":["I"]},{"Key":"wanted something","Fragments":["to"]},{"Key":"to store","Fragments":["that"]},{"Key":"store that","Fragments":["would"]},{"Key":"and munging","Fragments":["done"]},{"Key":"munging done","Fragments":["once."]},{"Key":" Ahhh,","Fragments":["right."]},{"Key":"Ahhh, right.","Fragments":["I"]},{"Key":"understand you","Fragments":["now."]},{"Key":"you now.","Fragments":["Thanks;"]},{"Key":"now. Thanks;","Fragments":["this"]},{"Key":"Thanks; this","Fragments":["was"]},{"Key":"best nit","Fragments":["so"]},{"Key":"nit so","Fragments":["far!"]},{"Key":"w/ `count`","Fragments":["instead"]},{"Key":"`count` instead","Fragments":["of"]},{"Key":"w/ eta-reduction,","Fragments":["for"]},{"Key":"eta-reduction, for","Fragments":["example:"]},{"Key":" ```ch","Fragments":["=\u003e"]},{"Key":"```ch =\u003e","Fragments":["ch.isWhitespace```"]},{"Key":"=\u003e ch.isWhitespace```","Fragments":["-\u003e"]},{"Key":"ch.isWhitespace``` -\u003e","Fragments":["```_.isWhitespace```."]},{"Key":"I *think*","Fragments":["I"]},{"Key":"*think* I","Fragments":["like"]},{"Key":"of `unapply`","Fragments":["here,"]},{"Key":"`unapply` here,","Fragments":["it"]},{"Key":"here, it","Fragments":["makes"]},{"Key":"makes `hey`","Fragments":["read"]},{"Key":"`hey` read","Fragments":["very"]},{"Key":"read very","Fragments":["nicely,"]},{"Key":"very nicely,","Fragments":["but"]},{"Key":"nicely, but","Fragments":["I'm"]},{"Key":"objects make","Fragments":["sense"]},{"Key":"own right","Fragments":["as"]},{"Key":"right as","Fragments":["a"]},{"Key":" Regardless,","Fragments":["there"]},{"Key":"Regardless, there","Fragments":["seems"]},{"Key":"there seems","Fragments":["to"]},{"Key":"a difference","Fragments":["between"]},{"Key":"the `Question`","Fragments":["object"]},{"Key":"`Question` object","Fragments":["is"]},{"Key":"is named","Fragments":["(for"]},{"Key":"named (for","Fragments":["what"]},{"Key":"(for what","Fragments":["it"]},{"Key":"it *means*)","Fragments":["and"]},{"Key":"*means*) and","Fragments":["the"]},{"Key":"the `AllCaps`","Fragments":["and"]},{"Key":"`AllCaps` and","Fragments":["`Empty`","`Empty`"]},{"Key":"and `Empty`","Fragments":["objects","be"]},{"Key":"`Empty` objects","Fragments":["(for"]},{"Key":"objects (for","Fragments":["how"]},{"Key":"(for how","Fragments":["they"]},{"Key":"be implemented).","Fragments":["Could"]},{"Key":"implemented). Could","Fragments":["`AllCaps`"]},{"Key":"Could `AllCaps`","Fragments":["and"]},{"Key":"`Empty` be","Fragments":["given"]},{"Key":"given names","Fragments":["that"]},{"Key":"that better","Fragments":["describe"]},{"Key":"better describe","Fragments":["their"]},{"Key":"describe their","Fragments":["meaning?"]},{"Key":"Given this","Fragments":["type"]},{"Key":"this type","Fragments":["of"]},{"Key":"of solution","Fragments":["(I"]},{"Key":"solution (I","Fragments":["went"]},{"Key":"(I went","Fragments":["with"]},{"Key":"little simpler),","Fragments":["I"]},{"Key":"simpler), I","Fragments":["don't"]},{"Key":"the inconsistency","Fragments":["of"]},{"Key":"inconsistency of","Fragments":["\"Whatever\""]},{"Key":"of \"Whatever\"","Fragments":["being"]},{"Key":"\"Whatever\" being","Fragments":["right"]},{"Key":"being right","Fragments":["in"]},{"Key":"`hey` whereas","Fragments":["the"]},{"Key":"whereas the","Fragments":["other"]},{"Key":"other responses","Fragments":["are"]},{"Key":"responses are","Fragments":["in"]},{"Key":"their respective","Fragments":["objects."]},{"Key":"respective objects.","Fragments":["Could"]},{"Key":"objects. Could","Fragments":["a"]},{"Key":"Could a","Fragments":["catch-all"]},{"Key":"catch-all object","Fragments":["be"]},{"Key":"object be","Fragments":["introduced"]},{"Key":"be introduced","Fragments":["that's"]},{"Key":"introduced that's","Fragments":["more"]},{"Key":"that's more","Fragments":["consistent?"]},{"Key":"recommend renaming","Fragments":["first"]},{"Key":"renaming first","Fragments":["and"]},{"Key":"and second,","Fragments":["because"]},{"Key":"second, because","Fragments":["they"]},{"Key":"Remove 'dna'","Fragments":["in"]},{"Key":"'dna' in","Fragments":["name"]},{"Key":"name since","Fragments":["Hamming"]},{"Key":"since Hamming","Fragments":["distance"]},{"Key":"distance applies","Fragments":["to"]},{"Key":"general. Also","Fragments":["from"]},{"Key":"Also from","Fragments":["looking"]},{"Key":"solutions, tuple","Fragments":["unpacking"]},{"Key":"tuple unpacking","Fragments":["makes"]},{"Key":"unpacking makes","Fragments":["things"]},{"Key":"not terribly","Fragments":["happy"]},{"Key":"terribly happy","Fragments":["with"]},{"Key":"this looks.","Fragments":["Things"]},{"Key":"looks. Things","Fragments":["ought"]},{"Key":"Things ought","Fragments":["to"]},{"Key":"bit simpler","Fragments":["for"]},{"Key":"simpler for","Fragments":["a"]},{"Key":"project like","Fragments":["this."]},{"Key":"I've written","Fragments":["very"]},{"Key":"written very","Fragments":["little"]},{"Key":"little Scala.","Fragments":["Started"]},{"Key":"Scala. Started","Fragments":["with"]},{"Key":"Started with","Fragments":["some"]},{"Key":"some if/then","Fragments":["logic"]},{"Key":"if/then logic","Fragments":["then"]},{"Key":"logic then","Fragments":["kept"]},{"Key":"then kept","Fragments":["improving"]},{"Key":"kept improving","Fragments":["to"]},{"Key":"improving to","Fragments":["what"]},{"Key":"see here.","Fragments":["All"]},{"Key":"here. All","Fragments":["tests"]},{"Key":"All tests","Fragments":["passed."]},{"Key":"tests passed.","Fragments":["Tips"]},{"Key":"passed. Tips","Fragments":["welcome."]},{"Key":"will work","Fragments":["pretty"]},{"Key":"work pretty","Fragments":["well."]},{"Key":"pretty well.","Fragments":["I"]},{"Key":"well. I","Fragments":["read"]},{"Key":"about Pattern","Fragments":["Matching"]},{"Key":"Pattern Matching","Fragments":["and","used"]},{"Key":"Matching and","Fragments":["maybe"]},{"Key":"maybe there","Fragments":["is"]},{"Key":"readable, but","Fragments":["I've"]},{"Key":"I've only","Fragments":["seen"]},{"Key":"only seen","Fragments":["Pattern"]},{"Key":"seen Pattern","Fragments":["Matching"]},{"Key":"Matching used","Fragments":["for"]},{"Key":"for cases","Fragments":["with"]},{"Key":"same implicit","Fragments":["class"]},{"Key":"a `copyAnd`method","Fragments":["that"]},{"Key":"`copyAnd`method that","Fragments":["clones"]},{"Key":"that clones","Fragments":["the"]},{"Key":"clones the","Fragments":["calendar,"]},{"Key":"the calendar,","Fragments":["and"]},{"Key":"calendar, and","Fragments":["applies"]},{"Key":"applies a","Fragments":["modification"]},{"Key":"a modification","Fragments":["and"]},{"Key":"modification and","Fragments":["returns"]},{"Key":"a implicit","Fragments":["class."]},{"Key":"implicit class.","Fragments":["Nice"]},{"Key":"class. Nice","Fragments":["trick."]},{"Key":"not overkill","Fragments":["to"]},{"Key":"of days","Fragments":["from"]},{"Key":"days from","Fragments":["the"]},{"Key":"of seconds","Fragments":["instead"]},{"Key":"seconds instead","Fragments":["of"]},{"Key":"of directly","Fragments":["adding"]},{"Key":"directly adding","Fragments":["seconds."]},{"Key":"adding seconds.","Fragments":["But"]},{"Key":"seconds. But","Fragments":["I'm"]},{"Key":"wondering and","Fragments":["I"]},{"Key":" Indeed","Fragments":["I"]},{"Key":"Indeed I","Fragments":["create"]},{"Key":"I create","Fragments":["a"]},{"Key":"of ```Calendar```","Fragments":["to"]},{"Key":"```Calendar``` to","Fragments":["erase"]},{"Key":"to erase","Fragments":["the"]},{"Key":"erase the","Fragments":["time"]},{"Key":"time of","Fragments":["day","day"]},{"Key":"of day","Fragments":["and","can"]},{"Key":"a \"clean\"","Fragments":["date,"]},{"Key":"\"clean\" date,","Fragments":["that"]},{"Key":"date, that","Fragments":["was"]},{"Key":"was necessary","Fragments":["to"]},{"Key":"suite when","Fragments":["I"]},{"Key":"exercise. But","Fragments":["since"]},{"Key":"suite has","Fragments":["been"]},{"Key":"been changed","Fragments":["and"]},{"Key":"changed and","Fragments":["it"]},{"Key":"you didn't","Fragments":["use"]},{"Key":"the `clone()`","Fragments":["method"]},{"Key":"`clone()` method","Fragments":["on"]},{"Key":"on `Calendar`","Fragments":["but"]},{"Key":"`Calendar` but","Fragments":["erasing"]},{"Key":"but erasing","Fragments":["the"]},{"Key":"erasing the","Fragments":["time"]},{"Key":"day can","Fragments":["be"]},{"Key":"a reason.","Fragments":["So"]},{"Key":"reason. So","Fragments":["why"]},{"Key":"pass ```(foldHelper","Fragments":["_).tupled```"]},{"Key":"```(foldHelper _).tupled```","Fragments":["(or"]},{"Key":"_).tupled``` (or","Fragments":["let"]},{"Key":"let ```foldHelper```","Fragments":["take"]},{"Key":"```foldHelper``` take","Fragments":["a"]},{"Key":"tuple as","Fragments":["arg)"]},{"Key":"as arg)","Fragments":["directly"]},{"Key":"arg) directly","Fragments":["to"]},{"Key":"directly to","Fragments":["```foldLeft```."]},{"Key":"would go","Fragments":["for"]},{"Key":"tuple instead","Fragments":["of"]},{"Key":"of ```if-else```.","Fragments":["and"]},{"Key":"```if-else```. and","Fragments":["perhaps"]},{"Key":"even inline","Fragments":["the"]},{"Key":"inline the","Fragments":["function"]},{"Key":"helper function:","Fragments":["is"]},{"Key":"function: is","Fragments":["there"]},{"Key":"for it?","Fragments":["what"]},{"Key":"it? what","Fragments":["about"]},{"Key":"about something","Fragments":["like"]},{"Key":"like ```decimalToBinary```?","Fragments":["anything"]},{"Key":"```decimalToBinary```? anything","Fragments":["that"]},{"Key":"that somehow","Fragments":["describes"]},{"Key":"somehow describes","Fragments":["the"]},{"Key":"describes the","Fragments":["function"]},{"Key":"than ```...Helper```.","Fragments":[":-)"]},{"Key":"I tackled","Fragments":["this"]},{"Key":"tackled this","Fragments":["earlier"]},{"Key":"this earlier","Fragments":["today."]},{"Key":"earlier today.","Fragments":["I"]},{"Key":"today. I","Fragments":["handled"]},{"Key":"handled validation","Fragments":["in"]},{"Key":"validation in","Fragments":["my"]},{"Key":"my count()","Fragments":["function"]},{"Key":"count() function","Fragments":["and"]},{"Key":"then had","Fragments":["a"]},{"Key":"a line","Fragments":["`s.foreach{"]},{"Key":"line `s.foreach{","Fragments":["count(_)`"]},{"Key":"`s.foreach{ count(_)`","Fragments":["after"]},{"Key":"count(_)` after","Fragments":["I"]},{"Key":"I initialized","Fragments":["my"]},{"Key":"initialized my","Fragments":["list"]},{"Key":"my list","Fragments":["of"]},{"Key":"possible nucleotides.","Fragments":["That"]},{"Key":"That handled","Fragments":["the"]},{"Key":"validation of","Fragments":["the"]},{"Key":"input to","Fragments":["the"]},{"Key":"than creating","Fragments":["a"]},{"Key":"mutable `Map`","Fragments":["with"]},{"Key":"`Map` with","Fragments":["default"]},{"Key":"default values,","Fragments":["I"]},{"Key":"values, I","Fragments":["feel"]},{"Key":"feel it's","Fragments":["better"]},{"Key":"the `List.map()`","Fragments":["function"]},{"Key":"`List.map()` function","Fragments":["to"]},{"Key":"get another","Fragments":["list"]},{"Key":"another list","Fragments":["with"]},{"Key":"the `scala.collection.breakout`","Fragments":["and"]},{"Key":"`scala.collection.breakout` and","Fragments":["`zip`"]},{"Key":"map from","Fragments":["two"]},{"Key":"from two","Fragments":["lists."]},{"Key":"two lists.","Fragments":["I'm"]},{"Key":"lists. I'm","Fragments":["just"]},{"Key":"just learning","Fragments":["more"]},{"Key":"learning more","Fragments":["and"]},{"Key":"to hate","Fragments":["temporary"]},{"Key":"hate temporary","Fragments":["values,"]},{"Key":"temporary values,","Fragments":["especially"]},{"Key":"values, especially","Fragments":["mutable"]},{"Key":"especially mutable","Fragments":["ones."]},{"Key":"Finally, on","Fragments":["your"]},{"Key":"your `count()`","Fragments":["function,"]},{"Key":"`count()` function,","Fragments":["I'd"]},{"Key":"function, I'd","Fragments":["suggest"]},{"Key":"suggest just","Fragments":["testing"]},{"Key":"testing to","Fragments":["see"]},{"Key":"nucleotide is","Fragments":["in"]},{"Key":"and returning","Fragments":["`nucleotides"]},{"Key":"returning `nucleotides","Fragments":["count"]},{"Key":"`nucleotides count","Fragments":["{"]},{"Key":"{ _==nucleotide}","Fragments":["if"]},{"Key":"_==nucleotide} if","Fragments":["it"]},{"Key":"is and","Fragments":["the"]},{"Key":"if not.","Fragments":["Seems"]},{"Key":"not. Seems","Fragments":["like"]},{"Key":"counts to","Fragments":["get"]},{"Key":"count for","Fragments":["a"]},{"Key":"single nucleotide,","Fragments":["but"]},{"Key":"matching here!","Fragments":["I"]},{"Key":"here! I","Fragments":["think"]},{"Key":"it's my","Fragments":["favorite"]},{"Key":"favorite solution","Fragments":["so"]},{"Key":"solution so","Fragments":["far."]},{"Key":"readability reasons,","Fragments":["I'm"]},{"Key":"reasons, I'm","Fragments":["not"]},{"Key":"not fond","Fragments":["of"]},{"Key":"def number","Fragments":[":",":"]},{"Key":"number :","Fragments":["String","String"]},{"Key":"I'd personnally","Fragments":["prefer:"]},{"Key":"that's my","Fragments":["point"]},{"Key":"my point","Fragments":["of"]},{"Key":"of view","Fragments":["and"]},{"Key":"view and","Fragments":["if"]},{"Key":"got good","Fragments":["reasons"]},{"Key":"good reasons","Fragments":["to"]},{"Key":"reasons to","Fragments":["do"]},{"Key":"do it,","Fragments":["I'd"]},{"Key":"it, I'd","Fragments":["be"]},{"Key":" thanks,","Fragments":["i"]},{"Key":"thanks, i","Fragments":["will"]},{"Key":"i will","Fragments":["revise"]},{"Key":"will revise","Fragments":["at"]},{"Key":"revise at","Fragments":["next"]},{"Key":"at next","Fragments":["chance."]},{"Key":"next chance.","Fragments":[":)"]},{"Key":"error check","Fragments":["as:"]},{"Key":" require(seq.forall(nucletide.keySet.contains),","Fragments":["errorMessage)"]},{"Key":"how unfortinatelly.","Fragments":["Any"]},{"Key":"unfortinatelly. Any","Fragments":["suggestions"]},{"Key":"suggestions are","Fragments":["welcome"]},{"Key":"the immutability","Fragments":["of"]},{"Key":"immutability of","Fragments":["your"]},{"Key":"your db,","Fragments":["but"]},{"Key":"db, but","Fragments":["its"]},{"Key":"but its","Fragments":["a"]},{"Key":"a var...","Fragments":["was"]},{"Key":"var... was","Fragments":["wondering"]},{"Key":"achieve it","Fragments":["with"]},{"Key":"with constant","Fragments":["immutable"]},{"Key":"constant immutable","Fragments":["map."]}],"prefix_len":2}