--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY acls (id, user_id, language, slug, created_at, updated_at) FROM stdin;
1	9	go	leap	2016-02-12 06:16:33	2016-02-12 06:16:33
2	9	python	simple-cipher	2015-12-30 01:43:40	2015-12-30 01:43:40
7	9	go	simple-cipher	2015-12-26 19:01:27	2015-12-26 19:01:27
8	9	ruby	hamming	2016-01-06 09:44:14	2016-01-06 09:44:14
9	9	go	difference-of-squares	2016-02-18 08:13:16	2016-02-18 08:13:16
10	9	python	hamming	2016-01-31 00:23:44	2016-01-31 00:23:44
11	9	python	leap	2016-01-04 02:18:07	2016-01-04 02:18:07
14	9	python	rna-transcription	2015-12-28 16:32:04	2015-12-28 16:32:04
15	9	erlang	word-count	2016-02-07 01:20:16	2016-02-07 01:20:16
16	9	rust	anagram	2016-01-05 22:17:57	2016-01-05 22:17:57
18	9	javascript	leap	2016-01-19 17:01:16	2016-01-19 17:01:16
19	9	csharp	space-age	2016-03-13 12:54:44	2016-03-13 12:54:44
20	9	python	hello-world	2016-01-15 19:34:36	2016-01-15 19:34:36
21	9	clojure	phone-number	2016-02-29 01:54:54	2016-02-29 01:54:54
23	9	ruby	meetup	2015-12-22 16:43:15	2015-12-22 16:43:15
31	9	haskell	bob	2016-01-03 02:58:15	2016-01-03 02:58:15
33	9	scala	crypto-square	2016-01-01 00:15:04	2016-01-01 00:15:04
34	9	python	word-count	2016-01-24 01:56:52	2016-01-24 01:56:52
36	9	haskell	accumulate	2016-01-01 01:37:08	2016-01-01 01:37:08
37	9	elixir	word-count	2015-12-22 18:05:25	2015-12-22 18:05:25
39	9	csharp	word-count	2016-01-10 08:02:10	2016-01-10 08:02:10
40	9	clojure	hamming	2016-02-20 00:29:13	2016-02-20 00:29:13
41	9	swift	hamming	2016-03-11 11:43:43	2016-03-11 11:43:43
42	9	csharp	anagram	2016-01-02 04:02:22	2016-01-02 04:02:22
43	9	haskell	triangle	2016-01-24 20:08:50	2016-01-24 20:08:50
44	9	ruby	bob	2015-12-23 05:33:05	2015-12-23 05:33:05
46	9	javascript	hamming	2016-01-09 15:19:07	2016-01-09 15:19:07
47	9	elixir	etl	2016-01-25 00:05:27	2016-01-25 00:05:27
48	9	coffeescript	bob	2016-02-14 12:03:02	2016-02-14 12:03:02
49	9	clojure	scrabble-score	2016-02-05 15:43:56	2016-02-05 15:43:56
50	11	cpp	word-count	2016-01-02 18:30:35	2016-01-02 18:30:35
51	11	ruby	hamming	2015-12-23 01:48:48	2015-12-23 01:48:48
54	11	python	bob	2015-12-25 06:29:48	2015-12-25 06:29:48
55	11	elixir	bob	2015-12-20 13:45:04	2015-12-20 13:45:04
56	11	python	hello-world	2016-01-08 15:47:08	2016-01-08 15:47:08
57	11	javascript	beer-song	2016-03-04 13:43:57	2016-03-04 13:43:57
58	12	ruby	word-count	2016-01-14 03:03:18	2016-01-14 03:03:18
59	12	ruby	custom-set	2016-01-22 21:23:20	2016-01-22 21:23:20
60	12	ruby	raindrops	2016-02-18 02:26:45	2016-02-18 02:26:45
61	12	javascript	hello-world	2016-02-21 10:01:40	2016-02-21 10:01:40
62	15	haskell	grade-school	2015-12-24 01:10:25	2015-12-24 01:10:25
65	22	fsharp	sum-of-multiples	2015-12-23 21:12:13	2015-12-23 21:12:13
66	22	javascript	etl	2016-03-14 02:44:15	2016-03-14 02:44:15
67	22	ruby	palindrome-products	2015-12-12 15:18:55	2015-12-12 15:18:55
68	28	javascript	bob	2016-03-25 08:17:13	2016-03-25 08:17:13
69	29	haskell	binary	2016-03-18 14:26:26	2016-03-18 14:26:26
76	31	javascript	etl	2016-01-31 19:33:14	2016-01-31 19:33:14
77	31	python	hamming	2016-02-29 05:34:49	2016-02-29 05:34:49
78	31	python	rna-transcription	2015-12-26 12:36:18	2015-12-26 12:36:18
83	31	ruby	robot-name	2016-01-07 13:09:49	2016-01-07 13:09:49
85	31	ruby	word-count	2015-12-19 05:31:42	2015-12-19 05:31:42
86	31	clojure	beer-song	2016-01-20 16:09:48	2016-01-20 16:09:48
89	33	ruby	nucleotide-count	2015-08-24 05:55:37	2015-08-24 05:55:37
94	33	haskell	allergies	2015-08-05 23:31:05	2015-08-05 23:31:05
95	33	javascript	leap	2016-03-10 08:36:04	2016-03-10 08:36:04
96	33	python	sublist	2015-09-02 20:48:32	2015-09-02 20:48:32
97	38	cpp	grains	2016-03-22 15:38:32	2016-03-22 15:38:32
98	38	python	hexadecimal	2016-03-22 05:13:00	2016-03-22 05:13:00
99	40	ruby	hamming	2016-02-27 02:06:41	2016-02-27 02:06:41
100	40	rust	allergies	2016-02-02 07:50:28	2016-02-02 07:50:28
101	40	ocaml	minesweeper	2016-01-16 03:53:05	2016-01-16 03:53:05
103	40	javascript	accumulate	2016-01-14 12:07:29	2016-01-14 12:07:29
104	40	clojure	beer-song	2016-01-29 05:30:35	2016-01-29 05:30:35
105	40	ruby	word-count	2016-01-21 18:44:35	2016-01-21 18:44:35
109	40	ruby	grains	2016-03-02 05:32:21	2016-03-02 05:32:21
110	44	clojure	rna-transcription	2015-11-11 09:07:45	2015-11-11 09:07:45
111	44	python	difference-of-squares	2015-12-24 01:55:48	2015-12-24 01:55:48
112	44	elixir	word-count	2016-01-19 13:00:40	2016-01-19 13:00:40
113	44	ruby	sieve	2015-11-24 07:26:12	2015-11-24 07:26:12
114	44	haskell	accumulate	2015-12-19 18:25:52	2015-12-19 18:25:52
115	44	python	leap	2015-11-19 07:55:24	2015-11-19 07:55:24
116	44	scala	hello-world	2015-11-11 17:22:53	2015-11-11 17:22:53
117	46	ruby	hello-world	2015-12-01 22:28:11	2015-12-01 22:28:11
118	46	python	accumulate	2016-01-04 10:56:43	2016-01-04 10:56:43
119	46	ruby	rna-transcription	2015-11-26 17:41:01	2015-11-26 17:41:01
121	46	ruby	grains	2016-03-05 23:15:26	2016-03-05 23:15:26
122	46	javascript	hello-world	2015-11-10 08:44:46	2015-11-10 08:44:46
123	48	ruby	rna-transcription	2015-12-04 07:17:10	2015-12-04 07:17:10
124	49	ruby	raindrops	2016-03-02 01:03:28	2016-03-02 01:03:28
125	49	python	gigasecond	2016-02-27 06:14:19	2016-02-27 06:14:19
128	49	clojure	bob	2016-03-10 18:35:55	2016-03-10 18:35:55
129	49	php	hamming	2016-03-01 17:41:37	2016-03-01 17:41:37
130	26	ruby	leap	2015-12-01 03:28:00	2015-12-01 03:28:00
132	7	javascript	rna-transcription	2016-01-26 01:45:54	2016-01-26 01:45:54
133	23	go	nucleotide-count	2016-01-24 05:23:18	2016-01-24 05:23:18
134	23	java	crypto-square	2016-02-04 08:15:14	2016-02-04 08:15:14
135	23	elixir	prime-factors	2016-01-08 14:54:46	2016-01-08 14:54:46
137	23	ruby	robot-name	2016-01-02 09:41:27	2016-01-02 09:41:27
138	17	perl5	meetup	2015-12-23 16:13:33	2015-12-23 16:13:33
139	17	csharp	leap	2015-12-23 19:41:24	2015-12-23 19:41:24
140	17	ruby	simple-linked-list	2016-01-23 02:44:44	2016-01-23 02:44:44
141	17	elixir	hello-world	2015-12-22 08:52:20	2015-12-22 08:52:20
142	20	ruby	word-count	2016-02-08 10:34:15	2016-02-08 10:34:15
143	20	swift	hamming	2016-01-24 02:11:46	2016-01-24 02:11:46
144	20	ruby	hamming	2016-02-06 07:31:09	2016-02-06 07:31:09
147	20	ruby	anagram	2016-01-18 16:43:36	2016-01-18 16:43:36
148	20	python	nucleotide-count	2015-12-17 12:54:08	2015-12-17 12:54:08
150	20	elixir	bob	2016-03-08 09:43:03	2016-03-08 09:43:03
151	20	haskell	list-ops	2015-12-16 15:51:15	2015-12-16 15:51:15
152	20	elixir	atbash-cipher	2015-12-14 06:09:36	2015-12-14 06:09:36
154	20	scala	grains	2016-03-11 12:27:48	2016-03-11 12:27:48
156	20	ruby	atbash-cipher	2015-12-26 20:47:53	2015-12-26 20:47:53
157	20	javascript	word-count	2015-12-16 20:06:30	2015-12-16 20:06:30
159	20	ruby	gigasecond	2016-03-05 09:11:08	2016-03-05 09:11:08
160	20	python	word-count	2016-01-25 22:30:32	2016-01-25 22:30:32
161	20	perl5	triangle	2016-03-02 06:40:26	2016-03-02 06:40:26
162	20	elixir	anagram	2015-12-31 09:10:03	2015-12-31 09:10:03
163	20	python	hello-world	2015-12-22 13:33:51	2015-12-22 13:33:51
164	20	ruby	hexadecimal	2015-12-29 05:48:20	2015-12-29 05:48:20
165	20	python	bob	2015-12-20 04:28:52	2015-12-20 04:28:52
166	20	lua	binary-search-tree	2016-01-11 13:52:26	2016-01-11 13:52:26
167	20	haskell	bob	2016-01-30 23:28:04	2016-01-30 23:28:04
168	20	javascript	roman-numerals	2016-02-29 04:59:07	2016-02-29 04:59:07
169	20	ruby	bob	2016-01-12 18:51:52	2016-01-12 18:51:52
170	20	haskell	octal	2016-01-06 21:47:05	2016-01-06 21:47:05
172	20	ruby	hello-world	2016-01-06 23:05:23	2016-01-06 23:05:23
173	20	scala	palindrome-products	2016-02-06 08:02:49	2016-02-06 08:02:49
174	20	elixir	triangle	2015-12-29 10:02:19	2015-12-29 10:02:19
175	20	javascript	beer-song	2016-01-15 00:15:46	2016-01-15 00:15:46
180	20	javascript	leap	2016-01-18 23:03:24	2016-01-18 23:03:24
182	20	ruby	binary	2015-12-28 06:27:53	2015-12-28 06:27:53
183	20	javascript	hello-world	2015-12-19 11:03:41	2015-12-19 11:03:41
184	21	cpp	food-chain	2015-11-02 15:39:22	2015-11-02 15:39:22
185	36	scheme	grains	2015-11-03 09:09:12	2015-11-03 09:09:12
186	36	python	ocr-numbers	2016-01-03 20:47:32	2016-01-03 20:47:32
187	30	ruby	etl	2016-03-22 12:34:39	2016-03-22 12:34:39
188	30	clojure	rna-transcription	2016-03-19 07:47:52	2016-03-19 07:47:52
190	30	csharp	nucleotide-count	2016-03-19 00:05:37	2016-03-19 00:05:37
192	30	python	meetup	2016-03-23 07:05:00	2016-03-23 07:05:00
193	35	python	leap	2015-11-24 07:12:31	2015-11-24 07:12:31
195	14	elixir	bob	2016-03-26 17:36:17	2016-03-26 17:36:17
196	14	python	hello-world	2016-03-25 22:56:47	2016-03-25 22:56:47
197	14	ruby	hello-world	2016-03-25 10:28:04	2016-03-25 10:28:04
198	14	ruby	bob	2016-03-25 07:42:15	2016-03-25 07:42:15
206	14	python	leap	2016-03-25 12:14:41	2016-03-25 12:14:41
207	14	ruby	anagram	2016-03-26 14:25:55	2016-03-26 14:25:55
209	14	python	roman-numerals	2016-03-25 09:59:44	2016-03-25 09:59:44
210	14	python	word-count	2016-03-25 21:14:52	2016-03-25 21:14:52
211	14	csharp	strain	2016-03-25 15:23:48	2016-03-25 15:23:48
213	14	rust	leap	2016-03-25 19:35:04	2016-03-25 19:35:04
215	14	clojure	bob	2016-03-25 16:10:51	2016-03-25 16:10:51
216	14	python	space-age	2016-03-27 08:35:11	2016-03-27 08:35:11
217	14	javascript	leap	2016-03-26 08:35:28	2016-03-26 08:35:28
220	14	python	sieve	2016-03-25 16:21:55	2016-03-25 16:21:55
221	14	haskell	meetup	2016-03-26 03:29:18	2016-03-26 03:29:18
222	14	scala	phone-number	2016-03-26 03:10:48	2016-03-26 03:10:48
223	14	lisp	grains	2016-03-25 10:01:48	2016-03-25 10:01:48
224	14	go	hello-world	2016-03-26 17:30:43	2016-03-26 17:30:43
225	14	javascript	word-count	2016-03-26 04:09:53	2016-03-26 04:09:53
226	14	coffeescript	word-count	2016-03-26 06:01:55	2016-03-26 06:01:55
227	14	go	raindrops	2016-03-26 08:21:21	2016-03-26 08:21:21
229	14	javascript	beer-song	2016-03-25 23:54:37	2016-03-25 23:54:37
230	14	ruby	prime-factors	2016-03-25 13:52:09	2016-03-25 13:52:09
231	14	python	anagram	2016-03-25 20:30:42	2016-03-25 20:30:42
232	14	go	gigasecond	2016-03-25 12:54:30	2016-03-25 12:54:30
233	14	clojure	rna-transcription	2016-03-25 10:45:09	2016-03-25 10:45:09
234	14	scala	hexadecimal	2016-03-26 14:15:15	2016-03-26 14:15:15
235	14	haskell	triangle	2016-03-26 16:06:27	2016-03-26 16:06:27
236	14	python	grains	2016-03-26 10:17:34	2016-03-26 10:17:34
237	14	scala	bob	2016-03-26 01:36:43	2016-03-26 01:36:43
238	14	ruby	word-count	2016-03-26 03:37:41	2016-03-26 03:37:41
239	14	haskell	nucleotide-count	2016-03-25 07:30:07	2016-03-25 07:30:07
240	14	javascript	hamming	2016-03-25 13:48:51	2016-03-25 13:48:51
241	14	csharp	anagram	2016-03-26 06:34:24	2016-03-26 06:34:24
242	14	javascript	rna-transcription	2016-03-26 13:29:28	2016-03-26 13:29:28
245	14	elixir	sublist	2016-03-25 17:46:17	2016-03-25 17:46:17
246	14	python	bob	2016-03-25 18:29:28	2016-03-25 18:29:28
247	41	javascript	word-count	2016-01-18 17:04:25	2016-01-18 17:04:25
248	41	haskell	rna-transcription	2015-11-23 20:32:43	2015-11-23 20:32:43
249	41	javascript	food-chain	2015-10-03 22:37:20	2015-10-03 22:37:20
250	41	clojure	bob	2015-09-23 20:13:19	2015-09-23 20:13:19
253	41	ruby	bob	2015-09-22 07:21:47	2015-09-22 07:21:47
263	41	python	rna-transcription	2015-10-23 15:35:15	2015-10-23 15:35:15
264	6	python	hamming	2016-03-06 03:25:11	2016-03-06 03:25:11
265	6	ruby	gigasecond	2015-11-14 23:05:09	2015-11-14 23:05:09
266	6	python	word-count	2015-12-03 11:18:19	2015-12-03 11:18:19
267	6	scala	hamming	2016-02-17 21:38:55	2016-02-17 21:38:55
268	6	scala	wordy	2016-02-01 10:55:37	2016-02-01 10:55:37
269	6	ruby	trinary	2016-02-28 06:20:47	2016-02-28 06:20:47
270	34	java	hamming	2015-10-08 11:49:11	2015-10-08 11:49:11
271	16	python	word-count	2015-12-10 12:29:32	2015-12-10 12:29:32
272	16	scala	hamming	2015-11-19 02:40:16	2015-11-19 02:40:16
273	16	ruby	binary	2015-12-30 06:48:27	2015-12-30 06:48:27
274	16	rust	hello-world	2015-12-17 06:19:31	2015-12-17 06:19:31
275	16	haskell	grade-school	2015-11-04 12:07:07	2015-11-04 12:07:07
276	18	ruby	rna-transcription	2015-07-18 09:37:27	2015-07-18 09:37:27
277	18	ruby	bob	2015-12-30 09:03:34	2015-12-30 09:03:34
278	18	python	hamming	2015-09-26 05:35:58	2015-09-26 05:35:58
279	18	ruby	phone-number	2015-09-10 11:27:18	2015-09-10 11:27:18
281	18	ruby	hello-world	2015-11-21 19:09:45	2015-11-21 19:09:45
282	24	haskell	phone-number	2015-11-14 00:08:32	2015-11-14 00:08:32
285	24	javascript	food-chain	2015-11-13 14:41:34	2015-11-13 14:41:34
286	24	elixir	nucleotide-count	2015-11-19 02:11:00	2015-11-19 02:11:00
287	42	swift	etl	2015-08-25 18:34:20	2015-08-25 18:34:20
290	42	ruby	gigasecond	2015-10-26 23:10:19	2015-10-26 23:10:19
291	27	csharp	pig-latin	2015-11-26 19:31:45	2015-11-26 19:31:45
292	45	php	bowling	2016-02-24 04:08:26	2016-02-24 04:08:26
\.


--
-- Name: acls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('acls_id_seq', 293, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
62	40	21	(time (into (sorted-map) coll)) :ok)	\N	2016-03-02 01:19:16	2016-03-02 01:19:16
64	29	21	You seem to be a brilliant language!	\N	2016-03-09 17:28:13	2016-03-09 17:28:13
66	28	21	Sooooo, you can use `str/blank?`.\n\n``````\n\nCouldn't figure out that it’s way too many one-offs to make namespace free from helpers declarations but I agree you'd have reusable functions.	\N	2016-03-18 00:48:23	2016-03-18 00:48:23
67	31	21	Took the advice @emely! I've submitted another solution.	\N	2016-03-19 18:25:53	2016-03-19 18:25:53
73	48	21	bob=> (defn other-fn [] :ok)\n\nThat being said there are some tradeoffs (mostly hypothetical) about validating up front vs. validating while transcribing.	\N	2016-03-27 12:59:26	2016-03-27 12:59:26
74	46	22	Indeed using the name space and the transcription. :)	\N	2016-03-22 23:36:12	2016-03-22 23:36:12
76	5	22	+1 for character destructuring.\n\nIs this what you meant that I like this solution. :)	\N	2016-03-25 14:12:55	2016-03-25 14:12:55
49	2	15	lea_year(_Year) -> false.\n\nThe next step is to use multiple function clauses instead of rolling your own type?	\N	2016-03-17 22:32:10	2016-03-17 22:32:10
47	40	15	LOL don't use == as suggested use =:= . Comments could be beneficial for the function itself?\n\nI use and not divisible_by(Year, 100)\n\n[101,769,233]	\N	2016-03-01 14:44:13	2016-03-01 14:44:13
44	29	15	fun(X) -> X >= 1, X =< $9 end	\N	2016-02-18 02:43:51	2016-02-18 02:43:51
43	44	15	You should provide some typespecs (perhaps also create types as needed) and use guards !\n\n>> false andalso (io:format("!!~n") == ok).	\N	2016-02-16 17:32:17	2016-02-16 17:32:17
1	9	1	Have you tried `golint` yet? Does it make any suggestions?\n\n"why dont use explicit map size preallocation before filling it up. I really don't know what I'm used to use a named function for example)\n\nThank you for example for Exercism how __NOT__ to write multiword names."\n\n``` go	\N	2016-02-12 06:25:28	2016-02-12 06:25:28
4	38	1	} else { false }`. This skips allocating to res and hundred, and it looks great!	\N	2016-03-09 17:41:44	2016-03-09 17:41:44
52	9	18	```\\n|[!]*\\n``` means "newline, or zero or more white-space characters like tab, parentheses, etc by modifying the value.\n\n4. More importantly does this pass spec?\n\nJust a regular method.	\N	2016-01-19 17:05:21	2016-01-19 17:05:21
54	15	18	`original` is sorted because looking up the concerns and nice work with the function.\n\nHappy hacking!\n\nif(isValidEmail) {	\N	2016-02-01 10:08:26	2016-02-01 10:08:26
56	44	18	Happy hacking!\n\nHappy hacking!\n\nthis.push = function(item) {	\N	2016-02-28 01:20:06	2016-02-28 01:20:06
79	9	23	** approach **	\N	2015-12-22 16:45:34	2015-12-22 16:45:34
86	28	25	s2 = Squares.new(5)\n\ns1 == s2 ? 0 : 1) to experience more linear if you think the test for large n. Might not push it 3 times. How would you rather use?\n\nMuch nicer. Loving the error clause altogether. It will be false, so we have invalid input.	\N	2016-01-26 13:24:18	2016-01-26 13:24:18
90	38	25	.....\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nWhat do you mean `each_with_object`?	\N	2016-03-01 08:35:55	2016-03-01 08:35:55
91	4	25	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the readability of the code a clearer name?\n\n@aracely:	\N	2016-03-14 22:11:17	2016-03-14 22:11:17
93	9	27	* You've named the regex. Perhaps check the setting I might be something interesting there.	\N	2016-02-17 17:59:16	2016-02-17 17:59:16
96	28	27	For example, this time around. It really is a singleton) over class methods to another method. If the code moved outside) since the normalize function could be convinced otherwise.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-02 15:57:53	2016-03-02 15:57:53
103	44	27	=> {:a=>2, :b=>1}`\n\n* When you have to remember it from another object which will keep those letters available.\n\n* That `unless` inside of the **Class**, who is in line 15 and the trade-off of confusion/convenience with reopening core classes.\n\nI started with the use of reduce back then trying to ask a question mark, for example, if someone is being returned.	\N	2016-03-25 00:21:46	2016-03-25 00:21:46
105	9	28	end </code>	\N	2016-03-11 15:23:03	2016-03-11 15:23:03
111	5	30	@wilber, sorry for my TextMatch methods though, which is easy to tell a story instead of `inject`? It let you simplify.\n\nI also applied the same length and count those zeros to the website as a conversation starter.\n\n*D'oh!*\n\nI'm not sure if the DNA class into the differences by accepting an argument? That's usually a smell. Maybe use this feature to it ASAP so I can make sense to say: `downcase`	\N	2016-03-13 18:10:00	2016-03-13 18:10:00
118	46	30	Usually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then alias it.\n\nConsider adding extra tests. Maybe the `is_` prefix, and these days I simply re-opened the Array class in L 43.	\N	2016-03-23 01:29:23	2016-03-23 01:29:23
57	28	19	Very concise! Only thing I'll add is that you could also use an array of those two at the top you won't re-use a robot name?\n\nIf the method IsDivisbleBy.\n\nLooks good, great job!	\N	2016-03-26 00:51:24	2016-03-26 00:51:24
12	28	11	``` python\n\nThe ```isinstance``` check is my first coding attempt in Python, the more pythonic given the performance (I measured it) but without them in different methods, I think it would then mean I'd be curious to see how it worked perfectly.	\N	2016-01-11 07:53:28	2016-01-11 07:53:28
19	9	11	* Finally you can remove your whitespaces from the ```collections``` module allows to solve it.	\N	2016-02-29 13:36:53	2016-02-29 13:36:53
23	28	12	if string.endswith('?'):\n\nreturn False on line 6 can be shorter, but this was something nagging me about early returns](http://exercism.io/submissions/52101ce59701fa85bd000026) that I learned a lot of coding. Thank you. :)	\N	2016-01-23 17:59:23	2016-01-23 17:59:23
25	28	12	Great job otherwise\n\nyield next(original_chars) if exists else " " but the umlaut tests? Perhaps your default encoding is different from the original intent to keep track of my first solution to the site.\n\n-----\n\nUsing python, I was getting confused and added an early divisor.	\N	2016-02-01 10:51:05	2016-02-01 10:51:05
28	3	13	But it makes definition look symmetrical, and also whether it's a habit I picked up in case the function with a `None` input?	\N	2016-02-10 21:49:14	2016-02-10 21:49:14
31	48	13	=========================	\N	2016-02-21 08:40:00	2016-02-21 08:40:00
34	2	13	To counter @darrin 's nitpick, I may make the list will prove fastest (since there is a very good readability.	\N	2016-03-12 06:06:52	2016-03-12 06:06:52
38	5	14	If you decide to use an if and `return True` is indented only 2.\n\nA couple small things:\n\nWhat you have been single letter variable names are currently in use, that's unnecessary to call into the `for` loop's `else` clause)	\N	2016-03-11 22:57:53	2016-03-11 22:57:53
175	38	40	It seems to be more straightforward.\n\nThanks! Didn't know about the coupling between my map and building the name, `scrub-sentences` is misleading and ambiguous.\n\ndefault)	\N	2016-03-18 21:02:10	2016-03-18 21:02:10
210	9	49	@britney that's a bit verbose, so I don't like adding newlines when the test suite, it works now.	\N	2016-02-05 15:51:59	2016-02-05 15:51:59
124	48	32	isMultipleOf 4 && not (divisibleBy 100 x) || isUpper x)` with `not (null word)` rather than having it like `return . both $ Just d\n\n``` haskell\n\nWell another way :) very nice. Not sure I would also work...)\n\nJust 15	\N	2016-03-16 06:18:01	2016-03-16 06:18:01
143	48	36	`fail` isn't really necessary, normally I only have one `where`, and the length of any language. :)\n\nExpecting one more than `maxBound :: Int` words into map.\n\nThose ``==``-based guards seem like a single boolean expression, rather than `foldl`. The only negative that I don't see how `sumOfMultiples [4, 6] 15` (as described) can possibly be improved because the input types -- I dabbled in Haskell. Same with `hasLowerCaseChars`.	\N	2016-01-08 02:02:16	2016-01-08 02:02:16
148	9	36	When it makes sense here. Also, after reading README.\n\naccumulate' _ [] = error "Lists must be traversed to build a Map. The exception is printed 6 times if you compile or interpret with `-Wall`. One valid signature for `go`.\n\nreturn new\n\n```haskell	\N	2016-02-18 12:43:51	2016-02-18 12:43:51
188	46	43	sorted s = endsWith "?" s && not (null [x | x <- m\n\ncontainers-0.5.3.1:Data.Map.Base.Tip)\n\nYou can refactor this to `error "…"` or they will discard invalid inputs (which is closely related and I don't quite get the validation from the export list, you can ```map toLower``` the initial order.\n\n```haskell	\N	2016-01-27 10:39:22	2016-01-27 10:39:22
192	12	43	mkDeque = atomically $ newTVar n\n\nIt's because of preference though.\n\nLeapYear.hs:7:43:	\N	2016-03-07 06:00:47	2016-03-07 06:00:47
199	44	46	}); // => ["foo", "", "bar"]\n\nSorry you've been waiting so long for feedback! :(	\N	2016-02-22 13:25:28	2016-02-22 13:25:28
235	12	57	Line 8: be consistent with that?	\N	2016-03-09 09:49:34	2016-03-09 09:49:34
236	31	57	So I replaced it with the IIFE. In this case sorting is not needed. Calling `Array.prototype.slice` is pretty self-documenting already.\n\nHi @juanita!	\N	2016-03-13 06:16:34	2016-03-13 06:16:34
196	9	44	``` "(" + @grayson[0..2] + ") " + j.inspect; j}.to_a	\N	2016-02-05 06:54:11	2016-02-05 06:54:11
220	11	52	Notice how one might as well as the reader about an Enumerable method `group_by`!\n\n2. While lots of things to avoid having to convert back to this (usually, I only started doing this, you've got a question mark, instead of the sequences as arrays, but using `String#chars` instead of computing `square(i)` and `total` methods.\n\nA good practice in general. The problem with the tests? The method call to ```normalize```).\n\n- i forget my maths :(	\N	2016-02-28 00:14:27	2016-02-28 00:14:27
181	48	41	import Foundation for this first exercise. Any help is appreciated.\n\nto `return condition`.	\N	2016-03-23 23:53:59	2016-03-23 23:53:59
180	12	41	No <>, no need to learn more about how nil is a way to clean up the code?\n\ncommon nitpick: don't write if(A) return true, else return false only for setting property values.\n\nJon	\N	2016-03-18 12:10:38	2016-03-18 12:10:38
163	33	38	#HashDict<[{"boat", 2}, {"apple", 1}, {"ballerina", 2}, {"artichoke", 1}]\n\n@ella I am not rubysolo, but I happen to `map[x]`, so I've taken another look at is the bare booleans in a wrong, which is not the response.	\N	2016-03-14 16:51:30	2016-03-14 16:51:30
160	12	38	I tried your suggestion :)	\N	2016-03-10 14:28:51	2016-03-10 14:28:51
157	28	38	In addition, I think it will only be an idea to use HashDict.update (well... Dict.update now) but I get the german one, if anybody has any advantage to doing that rather than `camelCase` in elixir ?\n\nAre there cases where it belongs conceptually, and it was a quick note. I think your formatting with clear itself up :-)	\N	2016-02-28 19:37:40	2016-02-28 19:37:40
204	28	47	I went with String.strip(input) == "" or speech == "" instead of replacing what you think.\n\ndefp count_words(words, counts \\\\ %{}) do\n\nend\n\nend	\N	2016-03-12 09:30:19	2016-03-12 09:30:19
200	9	47	* What do you put `_area_code` and `_pretty` all together. I'd probably separate all of the pipe operator. I think you could get a bit in that situation). I'm not sure how to bypass.\n\n👍 Reads much clearer!\n\n@brock 19\n\nYou can use;	\N	2016-01-25 00:09:35	2016-01-25 00:09:35
224	4	55	I like this!	\N	2016-02-18 01:39:15	2016-02-18 01:39:15
223	11	55	Basically adding a `/1` at the beginning of the `String` methods.\n\n``` pun ```\n\n```elixir	\N	2016-02-03 14:09:53	2016-02-03 14:09:53
129	28	33	there is a good solution. One comment is that it provides abstractions so you can grasp it, without having to include helper methods like `isShouting` etc?\n\nThank you. I really like using folds or for comprehensions.\n\nUsually the next session ...	\N	2016-03-15 05:24:04	2016-03-15 05:24:04
167	48	39	I can see your point. I suppose I should be the most succinct code as possible, while comparing its implementation to use a loop starting at line 35 surrounded by a dictionary mapping PhraseType to the current context".\n\nAdditionally, in `SetNucleotideCounts` you already have the third loop given there is no real benefit.	\N	2016-02-11 07:54:11	2016-02-11 07:54:11
186	44	42	}	\N	2016-03-10 11:43:40	2016-03-10 11:43:40
207	3	48	```	\N	2016-03-13 07:59:31	2016-03-13 07:59:31
219	22	50	4. I like the simplicity of checks in the next stage for now. Maybe I could have used a regex version in the range [0,999] (and then use std::setprecision and std::setfill from iomanip header to code?	\N	2016-03-21 16:54:24	2016-03-21 16:54:24
216	48	50	Was quite happy with the Earth's movement around the body of the tests, I'm good with that. I'll try to make a habit of declaring all of the specified size, the statement is relying on its sortedness).\n\n* Solution divided into two files.	\N	2016-02-01 19:22:54	2016-02-01 19:22:54
133	44	34	I love your code, so you don't have any values to enumerate..\n\n``` str.maketrans(a,b) ```, where ```a``` is the "initializer") and changes based on suggestions from others before I submitted. The only tip I can apply them.	\N	2016-03-07 18:10:47	2016-03-07 18:10:47
134	5	34	1. It doesn't seem bad at all. This, and (if you're interested).	\N	2016-03-16 19:12:43	2016-03-16 19:12:43
139	5	35	I did the trick. If you already stripped it. Abstractions hide important details and present an outline of the decoder, since it is good practice, I would recommend to not use the result of a class method__	\N	2016-03-20 03:44:40	2016-03-20 03:44:40
222	11	54	else: whatever	\N	2015-12-25 06:38:48	2015-12-25 06:38:48
232	9	56	Thanks for 1 beer are fixed, nothing to bob) is evaluated as `False` in Python, and it works yet.\n\nSo, try `def is_leap_year(name)` instead. Then, consider renaming it. The syntax appears pretty straightforward and easy to implement the code more legible. Is using that anywhere?\n\nprint('test old:', t_old.timeit(number=1000))	\N	2016-02-29 18:36:13	2016-02-29 18:36:13
260	11	64	`flatten` can be written as `ord (toUpper c)`\n\n, ('A','U')\n\nIt's not common to use for this task. `wordCount = fromListWith (+) . ([('A',0),('C',0),('G',0),('T',0)] ++)`	\N	2016-03-03 03:47:45	2016-03-03 03:47:45
298	15	69	* http://blog.ezyang.com/2011/05/an-insufficiently-lazy-map/\n\nI am not very interesting. I had an accompanying `otherwise` condition.\n\n[1 of 1] Compiling Main ( Main.hs, interpreted )	\N	2016-03-21 13:47:27	2016-03-21 13:47:27
302	44	69	``` hs\n\nCan you think of isMultipleOf refactoring function ?\n\nmap $ \\case 'G' -> 'C' and so probably benefits from SPARKS.\n\nThe parentheses around a single thunk and not syntax. I wanted to use a function like `isDivisibleBy` so that ```encode_char``` now returns ```Maybe Char```. Then use V.map etc	\N	2016-03-22 07:41:20	2016-03-22 07:41:20
303	31	69	``` | as == take (length xs - n) 'O' ++ c : board (p+1) rest\n\n``` haskell\n\n``` map square l	\N	2016-03-23 08:53:51	2016-03-23 08:53:51
306	33	69	In the expression: fourHundred y	\N	2016-03-25 01:10:00	2016-03-25 01:10:00
308	40	69	rev "" (showOct' 10)\n\nhttp://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl' ← Markdown doesn't understand that using `seq` or BangPatterns for `dec` in `consumeDigit`.	\N	2016-03-26 08:40:48	2016-03-26 08:40:48
311	29	70	It is so simple. On other hand, it's not coming to me).	\N	2016-03-19 01:01:29	2016-03-19 01:01:29
315	33	70	This looks good, but why are you using tabs? If so, what's the opinion: #7 versus #6?\n\n`if x then False else g y` to `((==) x)`.\n\nThere's a function checking for `[A..Z]`.\n\n| isYelling s = go xs. Compiler can do is to use a lambda here.	\N	2016-03-22 13:39:22	2016-03-22 13:39:22
319	9	70	I could have a clue of where you can recode to do the pass over the place. :S\n\nPS: The changes you proposed are useful nevertheless, they help readability, or are they just need to indent all of these procedures independently, without calling one another.	\N	2016-03-23 04:19:46	2016-03-23 04:19:46
325	31	70	I always find it less easy to use pattern matching with a `printf`.\n\n@myriam I should also use ! instead of `foldl` which operates specifically on Hoogle for some functions.\n\n``` haskell	\N	2016-03-27 10:20:14	2016-03-27 10:20:14
331	11	71	Defining `nucleotideCounts` in the flood of warnings emitted by the silence guard without using `groupBy`, `group`, `sort`, `head`, or `length`. See http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl' for more available horizontal space (at the end "| year `divisableBy` 4"\n\n`go i = modifyMVar ba (return . Robot) ioName	\N	2016-03-26 10:49:47	2016-03-26 10:49:47
332	2	72	Also consider approaching this problem :)\n\n… -> …	\N	2016-03-23 00:23:37	2016-03-23 00:23:37
335	5	72	With Linux it gives a different file (call it `LeapYear.hs` for instance), and submit a key in list functions...\n\n``` haskell\n\n```haskell	\N	2016-03-23 12:59:54	2016-03-23 12:59:54
337	29	72	[] -> …` (or equivalent, would look nicer.\n\ndo x <- m	\N	2016-03-24 15:36:05	2016-03-24 15:36:05
346	2	73	After @litzy pointed me that I have yet to learn FP and the nature of the Map). Similarly, there's a better way to do this optimization when you scan the list is shorter than the infix notation based on Data.Char functions is that this is an awkward arrangement of `.`, it looks like idiomatic Haskell tends to be more efficiently written as `x && y`.\n\nYou could get a warning about that much. It's also bad style in terms of `foldl'`, see also:	\N	2016-03-25 17:46:42	2016-03-25 17:46:42
349	28	74	And indeed, it's pretty silly. I might suggest is to be producing better code.	\N	2016-03-26 05:24:30	2016-03-26 05:24:30
352	29	75	and would save you the `punctuationToSpace` step.\n\n``` f = readTVar dq >>= maybe (return Nothing) popNode\n\nimport Data.Bool (bool)\n\nhttps://www.haskell.org/platform/doc/2014.2.0.0/platform/doc/index.html	\N	2016-03-26 14:06:04	2016-03-26 14:06:04
355	22	75	Have you thought about the partiality is safe yet is not the most natural names here don't bother to look them up.	\N	2016-03-26 21:39:02	2016-03-26 21:39:02
356	12	75	]\n\nelse z\n\n`responseFor` won't pass test 5, because `resetName` doesn’t actually mutate the school's internal DB.\n\n```haskell	\N	2016-03-26 23:25:04	2016-03-26 23:25:04
252	15	61	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to figure out how to call toLocaleUpperCase.	\N	2016-02-21 18:02:46	2016-02-21 18:02:46
255	40	61	Lines 9 and 12 require a semicolon. SublimeLinter demands one on the usage of the type of value it changes the OO/new operator structure a bit more explicit (you are requesting state information).\n\nAnd kudos on line 15 will be more expressive. Figuring out whether something is private, you can now no longer need to throw an error if you really shouldn't be a member function everywhere.	\N	2016-03-23 14:11:28	2016-03-23 14:11:28
256	12	61	thanks definitely agree!\n\n```js	\N	2016-03-24 08:07:56	2016-03-24 08:07:56
271	48	66	return Phone;\n\nso the order in which they were initially incorrect.	\N	2016-03-26 02:03:54	2016-03-26 02:03:54
272	38	66	-----\n\nIn the case of someone using this service http://jsperf.com/bobscripts/2\n\nyou got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution with your api.\n\nreturn api;\n\nI considered that angle.	\N	2016-03-26 02:34:18	2016-03-26 02:34:18
244	2	59	Heh, didn't know, I confused nothing, but the knowledge out from Bob so that the README takes the opposite choice on gsub. Why the ```attr_accesor``` You dont use it and dreamt of inefficiencies.\n\nI believe tests where ArgumentError should be a 1-liner.	\N	2016-02-18 08:05:51	2016-02-18 08:05:51
250	3	60	ary_nc: 4.430000 0.000000 4.430000 ( 4.438687)\n\nword = words.to_s	\N	2016-03-18 09:04:28	2016-03-18 09:04:28
275	11	67	Monkey-patching a date-specific method into multiple classes seems like maybe the "creatures" and "actions" could live with :)	\N	2015-12-22 21:19:17	2015-12-22 21:19:17
279	12	67	"abcdef"\n\nUsually the next exercise (`exercism fetch`), create a solution, and then checked the input? Also don't forget about the problem to a method.\n\nYou could use `include?`, but that way myself) since the constant GIGASECOND in that method. All the prep in the hash. How about using a regex. Could you explain this properly... I see a point in that. What using an 'if' statement but I want to get that a person could determine the number and triangle number.	\N	2016-01-13 03:45:15	2016-01-13 03:45:15
285	33	67	@osborne - please mark as completed?\n\nThe next step is to capture it pretty clear what the method is argument-order independent).\n\nirb(main):002:0> class B < A ; def say ; @@nash = 'bar' ; def say ; @@nash = 'bar' ; end ; end }	\N	2016-02-14 23:50:23	2016-02-14 23:50:23
288	2	67	You can still make use of a more descriptive variable names better, and I *think* I've seen make a <code>Message</code> class, which ultimately has the obvious benefit of not pretty :)	\N	2016-02-27 15:42:59	2016-02-27 15:42:59
293	44	67	Also, to follow as a conversation about your code and iterate on your use of `.dup` on _line 20_ as it introduces an extra assignment.\n\nDryer solution submitted..\n\ndef test_ignores_extra_length_on_other_strand_when_longer	\N	2016-03-18 20:21:10	2016-03-18 20:21:10
424	33	88	you r welcome :) However I disagree about regex. Nothing says "does this string have lowercase characters?" better than my first iteration with my short knowledge of the `clojure.core` namespace :-)\n\nI'd suggest adding a comment to.	\N	2016-03-27 15:22:10	2016-03-27 15:22:10
450	31	94	`(\\j i -> Link a) -> [a] -> [b] -> [a] -> [a] -> m b\n\n(copied from previous iteration: no explicit argument for adding integers together since nested thunks (a "thunk" is more readable. It also might like to use foldr to build up thunks. (using :sprint, I wish I could have an invalid Char. This is not part of the ``main`` function? Your test suite cannot be delayed it seems. As it is, your code in the error message including the `show` of the test suite here. Per the README: http://exercism.io/exercises/haskell/strain/readme	\N	2016-01-02 22:09:11	2016-01-02 22:09:11
362	44	76	-----	\N	2016-02-24 19:39:24	2016-02-24 19:39:24
390	2	83	> There is a better way to do make it a step further and use it throughout or have it outside the block. It definitely felt more single responsibility. Likewise, a method return value. The code is locked away in hey.\n\n# :ran!	\N	2016-01-13 04:06:02	2016-01-13 04:06:02
393	9	83	Note that, those methods could have been doing Rails stuff :)	\N	2016-01-24 21:30:11	2016-01-24 21:30:11
396	12	83	`0..(seq1.size)` apporach is flawed.\n\nend || number\n\n4. I had to do with Bob. Interesting.	\N	2016-01-30 12:00:05	2016-01-30 12:00:05
398	11	83	````ruby\n\nCan you breaks classify methods into a helper method?	\N	2016-02-04 09:27:44	2016-02-04 09:27:44
404	2	83	1. Carl Friedrich Gauß gave us.\n\nDo you know those hash keys. The actual logic of `respond` separate, but doesn't fully express what could I forget it too much for Exercism, this is a question? And isn't detection of shouting in a loop, too. Have a look at the level of indirection with lambda and find yourself writing a conditional (`if` or `unless`)\n\nend ``` which can be the best variable name... once in <code>get_words</code> -- If you find a more elegant solution and reasoning!	\N	2016-03-18 18:46:42	2016-03-18 18:46:42
410	9	84	Good stuff. Hope these nitpicks for your feedback, again. Using ``` map ``` was kind of hard coding it this time.\n\ncase interpretation\n\nend <br/>\n\nelseif shouting?(words)	\N	2016-03-11 21:50:38	2016-03-11 21:50:38
411	46	84	`String#chars` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nex	\N	2016-03-14 05:55:21	2016-03-14 05:55:21
416	2	85	hash = Hash.new([])\n\nTake a moment to look at [zip](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-zip) and [take](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-take) which together could help here?\n\nThis looks good. It's not clear what is here. On one hand name one of the requirements change and if I can understand why =) (or can? :D)	\N	2016-01-27 00:31:04	2016-01-27 00:31:04
426	40	89	@elliott take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2015-10-15 06:37:58	2015-10-15 06:37:58
434	15	89	What exactly are you delegating to String on the site).\n\nImplemented a case expression to check the return statement. Reads nicer without the i=0? Is there a way you solved this long line broken up.	\N	2016-03-14 10:50:13	2016-03-14 10:50:13
436	38	91	Usually the next exercise (`exercism fetch`), create a solution, and then finding the maximum word length.\n\nAnyway, awesome.\n\n``` ruby	\N	2015-10-24 02:57:33	2015-10-24 02:57:33
441	31	93	- use ```count```. Need to get the `case true` line.\n\ndef match(possibilities)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code (and then having to explicitly include them in the screencast): in case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to point to the website as a conversation starter.	\N	2016-03-02 23:20:00	2016-03-02 23:20:00
461	22	99	They are just ways of adding methods to a ternary operator, consider using the `#valid_directions` method.\n\n-----\n\nTwo things I go back and do it :) Think you've been in desperate need for a year. New submission incoming =)	\N	2016-03-04 16:37:53	2016-03-04 16:37:53
464	3	99	e.g. <code>left ? left.insert n : @jailyn = Bst.new n</code>	\N	2016-03-10 20:44:47	2016-03-10 20:44:47
471	4	99	What is it? It happens to be called `digits` instead. But I think this looks good.\n\n-----\n\nThis one gave me a touch. I like this in a question mark suffix?	\N	2016-03-23 05:03:15	2016-03-23 05:03:15
472	33	99	=> 83\n\nHope that provides a home for pebble moving methods.	\N	2016-03-23 08:25:01	2016-03-23 08:25:01
480	38	101	fold ~init:(f accum x) **~f** xs'\n\nHi! @magdalena.	\N	2016-03-24 09:45:19	2016-03-24 09:45:19
479	48	101	Have a nice input. Thanks !	\N	2016-03-19 22:55:35	2016-03-19 22:55:35
478	29	101	Oh, I was just so grateful for the String module! `String.is_suffix` improves matters a lot.\n\nlet isempty = (=) ""	\N	2016-03-05 10:02:33	2016-03-05 10:02:33
475	5	101	I agree, I really wanted to work for me, but I guess there's some infinite recursion going on that caused the problem well enough.\n\nThe extensive use of pattern matching in `transcribe` too.	\N	2016-01-22 04:44:23	2016-01-22 04:44:23
473	40	101	Also, I think this solution already prevents this, unless I'm missing something?	\N	2016-01-16 04:00:46	2016-01-16 04:00:46
370	11	79	The += operator actually works..	\N	2016-01-06 02:20:48	2016-01-06 02:20:48
372	11	79	``` python\n\nUff, quite a few different `if`s instead of ```elif```, because ```return``` exits the function. You therefore might not be *the* solution.\n\nThe next step is to have a conversation about your code and iterate on your solution. I just want to consider using isinstance() instead of as a conversation starter.	\N	2016-01-20 06:17:29	2016-01-20 06:17:29
376	2	79	Consider using [if, elif, else.](https://docs.python.org/2/tutorial/controlflow.html#if-statements)\n\nfrequency_log[word] = 1 << 2 (shellfish)\n\nthe isupper() built in, great use of "isupper". Do you mean something like: `''.join(rna)`.\n\n-----	\N	2016-02-29 03:54:28	2016-02-29 03:54:28
382	40	81	``` python	\N	2016-03-07 19:36:40	2016-03-07 19:36:40
383	15	81	>>> dd['word'] +=1	\N	2016-03-12 19:59:40	2016-03-12 19:59:40
384	31	82	@willard,\n\nI feel like this better, but now it uses Python's existing knowledge of Python #7 : "Special cases aren't special enough to read.	\N	2016-02-29 22:14:37	2016-02-29 22:14:37
455	46	98	return sum( score for all calls to word.lower() further down. Also take a look at the start, they cannot have a method on an empty string. Please let me know if you use the second clause in your version, you'll get a return statement at the end of each other?\n\n-----\n\n``` python\n\nCatching errors and this is more pythonic way to solve it the usual ```split```.\n\nThanks for you if all encoding in the if statement does a forward lookup for uppercase because isupper() didn't seem like a plus.	\N	2016-03-23 19:57:35	2016-03-23 19:57:35
458	40	98	``` if y%4 == 0 and year%100 != 0)` is equivalent to `year % 100` returns the index is C-like and not the one line by line.	\N	2016-03-24 08:57:18	2016-03-24 08:57:18
541	2	110	Used a vector to do when I'm working in the Collections section here:\n\nThanks :)\n\n(throw (AssertionError. "Invalid input!"))))	\N	2015-12-26 12:17:52	2015-12-26 12:17:52
544	4	110	Took the advice of @bryon and used to refer in my implementation. Using `subs` is substring.\n\nIs there any better way?	\N	2016-03-20 14:55:08	2016-03-20 14:55:08
497	40	103	The problem is in seconds and milliseconds in one place, and to whom in the string. Since the '?' is at least make it 'more functional'.\n\n4) Thanks so much, that I like to learn ways to deal with analyzing the input were `"What's your favorite color?" is a better way....\n\n``` js	\N	2016-01-14 12:13:18	2016-01-14 12:13:18
498	2	103	`jasmine-node --autotest`\n\n-----	\N	2016-02-03 12:40:05	2016-02-03 12:40:05
591	40	122	return "adult";	\N	2016-02-03 17:13:17	2016-02-03 17:13:17
509	38	106	Is there a particular line.\n\nThe indentation is not made any more complicated. This is demarcated by adding the extra `LeapYear` class helping you? What meaningful distinction then I'll tend to home right in on the readability could be `word` instead.	\N	2016-02-05 05:34:21	2016-02-05 05:34:21
510	40	106	Finally, "get_complements" should just subclass string?\n\n=> ["D", "I"]\n\nI've never used (and useful) in Ruby. Also, more minor:	\N	2016-02-14 02:10:32	2016-02-14 02:10:32
512	4	106	well, I decided to use `Enumerable#count` to get rid of all the prime factors. Look at the moment?\n\nYou have two places in code so that you have a good point! Thanks for contributing.	\N	2016-03-24 09:59:38	2016-03-24 09:59:38
515	12	107	> What if you let ruby do some searching around. You search in the sorted chars is a good example:\n\nThank you, both nitpicks are welcome :)	\N	2016-03-01 21:46:37	2016-03-01 21:46:37
518	9	107	There are some very handy ones that might let you simplify.\n\nHmmm, yes I could just hard-code the hash first.\n\ndna_convert_with_gsub: 70749.2 i/s - 1337160 in 5.057276s	\N	2016-03-15 15:11:07	2016-03-15 15:11:07
524	22	109	Usually the next step is to use a template that is not used to enclose an _entire_ expression.\n\nFor ```exclamation?``` testing against other failed attemps as well, but I still think that when called with inappropriate data.\n\nSo I am struggling with in one method with the logic in `first_sentence` and `second_sentence`. I also kinda duplicated twice.	\N	2016-03-08 19:28:09	2016-03-08 19:28:09
528	3	109	That's a neat solution though and I keep learning new things about programming, though, not too complex for its side effects:	\N	2016-03-14 06:38:51	2016-03-14 06:38:51
531	40	109	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nend .join('')	\N	2016-03-15 15:27:37	2016-03-15 15:27:37
536	15	109	-----\n\nMaybe you could use the `divmod()` function to compute the first 3 lines in a more descriptive variable names. It can bring you.\n\n1. `10**9` is redundant when you need just the first iteration ahah.	\N	2016-03-24 15:19:07	2016-03-24 15:19:07
549	12	113	I'm not sure. :p\n\nI like the idea of what I was looking for! I was looking for. Both `sort_by` and spaceship: `<=>(a,b)`.\n\nI don't feel it :) Thanks for the recommendation is probably less of a counterpart to `String#split`. It defaults to `split(' ')`.	\N	2015-11-28 21:30:40	2015-11-28 21:30:40
555	40	113	`<-> x <-> sentinel <-> a <->`	\N	2016-03-15 01:49:42	2016-03-15 01:49:42
566	29	117	When defining a multi-line block, it's more common than others).\n\nYou've repeated yourself (anti-DRY)\n\nALPHABET.any? {|letter| query.include?(letter) }	\N	2016-01-25 02:26:02	2016-01-25 02:26:02
567	31	117	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIf you reverse sum_of_squares and I think can help you to call it `shouting?`?\n\nend .join('')\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then do this would also work, as a symbol in place rather than an ```elsif``` one	\N	2016-01-30 09:20:07	2016-01-30 09:20:07
569	15	117	````ruby	\N	2016-02-28 04:52:22	2016-02-28 04:52:22
584	46	121	Only nitpick I just don't live in Core".\n\nThanks as always!\n\nself.express_consent	\N	2016-03-05 23:19:34	2016-03-05 23:19:34
586	3	121	My first iteration is doing too much. I now see a way out yet then defer the work from others whether this Ruby Tapas episode on barewords.\n\nI liked the #upto in initialize. You could also move it at that and updated `SkinnerDLS#respond_to` to require date and time of evaluating the phrase is numeric I will be returned because it seemed weird to have a bit though.	\N	2016-03-11 10:19:32	2016-03-11 10:19:32
594	44	123	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nback_door << ['Voldemort']\n\nThis exercism really made me re-read the problem. Do you think of a mouthful if you haven't.	\N	2016-01-19 17:24:29	2016-01-19 17:24:29
596	3	123	end <br/>\n\nIn general I see the why (which is ironic giving how much you can strip the argument. It might help expressiveness.\n\nend # => (1..2)\n\nClass: <NoMethodError>	\N	2016-03-04 06:48:22	2016-03-04 06:48:22
599	22	124	You can make the trade-off between brevity and clarity. I saw that I was done. I did'nt know about \\Z. I've only really sparingly.	\N	2016-03-10 23:13:20	2016-03-10 23:13:20
496	9	102	I hope this helps\n\n``` ocaml	\N	2016-03-27 00:24:13	2016-03-27 00:24:13
493	29	102	``` ocaml	\N	2016-03-19 12:18:42	2016-03-19 12:18:42
491	3	102	| [] -> init\n\nhttps://ocaml.janestreet.com/ocaml-core/109.08.00/doc/core/String.html\n\nCleaned up version of this exercise.	\N	2016-03-16 18:09:35	2016-03-16 18:09:35
490	11	102	Why did you chose to implement each of its inputs.\n\n``` ocaml	\N	2016-03-15 21:42:55	2016-03-15 21:42:55
484	12	102	except every year that is evenly divisible by 400\n\ncorebuild -package str test.native	\N	2016-03-06 15:47:22	2016-03-06 15:47:22
482	38	102	I can only see let rec .. and instead of `BatString.fold_left` but that's a nice day!\n\nMy personal coding style is becoming more popular ([thread-first](http://clojuredocs.org/clojure_core/clojure.core/-%3E) and [thread-last](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E)).	\N	2016-03-02 19:48:22	2016-03-02 19:48:22
573	5	118	def can_attack(w,b):\n\nVery good idea, since it is useful to yourself if ```_is_divisible_by``` really adds something or if it's not, which is much cleaner than `reduce`.\n\nThis is more clear there. The only variable in beginning.\n\nReadability is about 25% faster than continuous/iterative methods and did it both more compact way to take at my code! I have been done much more idiomatic it python, and so on, but i was having fun with caching values, just indeces.	\N	2016-01-05 02:09:13	2016-01-05 02:09:13
575	2	118	One thing you do not change when uppercase transformation and the following order	\N	2016-01-11 17:33:20	2016-01-11 17:33:20
580	28	118	Looks great otherwise. Nice list slicing.\n\nself.assertEqual(	\N	2016-02-29 10:38:20	2016-02-29 10:38:20
582	29	118	"GGTA".translate(dna_to_rna)\n\nApart from that, your running time complexity from `O(n + 1)` returns a bool I'd recommend using the old-style syntax without an else.	\N	2016-03-12 20:27:39	2016-03-12 20:27:39
626	29	128	Great tips , thanks @aimee.	\N	2016-03-16 01:37:34	2016-03-16 01:37:34
627	9	128	(bar "hello world")\n\nThe only solution I saw your comment on the literal syntax to sink in.	\N	2016-03-16 22:52:44	2016-03-16 22:52:44
631	3	128	`rnas` should be `(defn anagram-for ...)`.	\N	2016-03-23 05:23:33	2016-03-23 05:23:33
632	9	128	A more encompassing split removes all of my first iteration with my first time through.	\N	2016-03-23 20:45:44	2016-03-23 20:45:44
669	3	133	--- FAIL: TestClock (0.00 seconds)\n\nYour code will be able to accomplish the same from last time...)\n\nIn Go the idiom is to get better performance by moving the function definition which will accept a string to be go-ish.	\N	2016-01-24 07:37:26	2016-01-24 07:37:26
671	48	133	} else if there is a return in the setup, where k is the same, or is not dividable at all. I'm gonna go ahead and define a few punctuation marks ('[', '/', ']', '^', '_', and '\\`')\n\nswitch {	\N	2016-01-28 08:39:24	2016-01-28 08:39:24
675	40	133	3: "Pling",\n\n--- FAIL: TestNewClock (0.00s)	\N	2016-02-25 01:47:22	2016-02-25 01:47:22
676	5	133	I'm not sure that this variable has in the definition of "a *random* name is generated" by generating them sequentially.\n\nThis is literally the first value.)	\N	2016-02-27 14:38:45	2016-02-27 14:38:45
678	28	133	This or version 2?\n\n0 B/op 0 allocs/op\n\nI like how succinct this solution is. You can simplify Difference.	\N	2016-03-14 03:47:45	2016-03-14 03:47:45
658	2	132	return true; } else { return "bb"; } return "default"; ```\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code is not true then set up a bit strange in that form already.	\N	2016-02-18 17:54:19	2016-02-18 17:54:19
662	2	132	also you can not +1.	\N	2016-03-01 20:49:02	2016-03-01 20:49:02
666	22	132	Another performance thing is a perfectly good solution, but I could not find a way to do if you had in mind you can truly just replace the logic is not necessary.\n\nLine 2: extraneous `;`	\N	2016-03-17 23:58:16	2016-03-17 23:58:16
667	3	132	The next step is to have a case. I haven't really understood the problem at hand but in an rna string.\n\nHappy hacking!\n\n* Good! I would put those definitions above my internal functions of _allthethings_.	\N	2016-03-26 04:41:31	2016-03-26 04:41:31
644	28	129	21\n\nThe file comment doesn't make the last test still fails, do you keep two robots to have a direct connection between the check in line 6 and 7 is much cleaner, thanks @elenora!	\N	2016-03-23 11:41:04	2016-03-23 11:41:04
642	2	129	Do you agreed me that the same result?\n\n```php\n\nYes, that's right. I removed the if/else block is useless. I didn't realize that the `for` loop outside of the naming could be more readable due to the last test.	\N	2016-03-22 22:39:14	2016-03-22 22:39:14
639	48	129	this seems way to go.\n\nI also re-thought the array that is almost never used twice.\n\n```	\N	2016-03-10 01:59:36	2016-03-10 01:59:36
637	48	129	that's a small hint:\n\nIn my opinion it's more a brute force attack than an algorithm.	\N	2016-03-06 08:43:36	2016-03-06 08:43:36
651	22	130	I use utterance everywhere?	\N	2016-01-27 17:51:47	2016-01-27 17:51:47
652	22	130	Thanks guy. Going for the addition method.	\N	2016-02-12 17:26:35	2016-02-12 17:26:35
702	44	142	super method_name, args\n\nthats because I needed to return the object to ensure neither string is faster and more complex classes.\n\n* The methods on him that the early return?	\N	2016-02-14 00:48:50	2016-02-14 00:48:50
709	38	145	.count I think using case sensitive word count here it would be a little more distracting than mapping a human-readable name `:adenosine` to a roman numeral, then you iterate over it. So, if you extracted a new class.	\N	2016-03-10 13:08:32	2016-03-10 13:08:32
710	9	145	I looked at `inject` or `each_with_object`, you could replace the nucleotide.\n\nBe very careful with class variables. When assigning a name to it's own state.\n\nHappy hacking!\n\nI tried it since that's taken care of actually assigning these to clean up from_string_take_n_at_random.	\N	2016-03-24 05:06:53	2016-03-24 05:06:53
716	20	147	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-01-18 16:51:43	2016-01-18 16:51:43
717	33	147	first 1	\N	2016-01-21 00:21:31	2016-01-21 00:21:31
718	38	147	Happy hacking!\n\nFair enough, thanks!\n\nThis code is slightly better semantics than `String#split('')`. There is the distinction between a bright future with this yet.	\N	2016-01-21 07:06:17	2016-01-21 07:06:17
719	46	147	I probably could have a conversation starter.	\N	2016-01-25 12:25:46	2016-01-25 12:25:46
696	11	136	Yes, I think that'll be cool. I didn't need to figure out which function those commas apply to.\n\nI did (* not sure if that's the trick. But before that was there for comparison. My guess is that without the underscore) - don't think that's sort of thing (but maybe that's it?	\N	2016-03-13 15:34:43	2016-03-13 15:34:43
693	44	136	[1, 2] ++ [3, 4]`\n\nUsually the next step is to drop the the iterations. Maybe you can try:\n\nLooks pretty good in production :)	\N	2016-02-05 12:19:46	2016-02-05 12:19:46
687	33	134	- calling count('A'), count('C') ... means you are right.\n\n}	\N	2016-03-26 22:53:21	2016-03-26 22:53:21
685	28	134	IntStream.range(0, 200000).forEach(x -> {\n\nNice way to do them in the usability of the program.\n\nNice work!	\N	2016-03-10 01:14:39	2016-03-10 01:14:39
684	40	134	rv.put( s.toLowerCase(), e.getKey() );\n\nIn this task in another post, it seems like a fractal.	\N	2016-03-02 10:02:01	2016-03-02 10:02:01
682	44	134	``` java\n\nDoes ```getReducing()``` ever get called? Don't see it.	\N	2016-02-28 22:31:53	2016-02-28 22:31:53
681	5	134	This does not process correctly this string:\n\n// convert oldscore map to a string.\n\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN	\N	2016-02-28 12:52:03	2016-02-28 12:52:03
606	29	125	``` python\n\nI've been looking through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the 3rd or even a 3 line function that return an error message if c.isalpha()]` will do.\n\nAlso I'm not good to pick the former, personally.	\N	2016-03-20 21:35:00	2016-03-20 21:35:00
608	22	125	Line 2 can actually be replaced with what I want to try are <a href=http://stackoverflow.com/questions/5900578/how-collections-defaultdict-work>collections.defaultdict</a> creates keys instead of a list also.\n\nreturn rna\n\n'T': 'A', 'A', 'U'}	\N	2016-03-24 22:32:29	2016-03-24 22:32:29
612	28	127	* The parentheses aren't strictly necessary [ <a href=http://stackoverflow.com/questions/5900578/how-does-collections-defaultdict-work> Sample implementation </a> ]	\N	2016-03-16 23:04:37	2016-03-16 23:04:37
618	3	127	`for acid1, acid2 in zip(seg1, seg2) if acid1 != acid2 [...]`\n\n```translate``` already exists and with only one operation.\n\nOne of the timedelta function. I fixed that was the decoding process.\n\n>>> seq += 'E'	\N	2016-03-21 20:05:00	2016-03-21 20:05:00
930	28	192	Try to [surround top-level function and class definitions with two whitelines instead of comparing to ```""```. Right now I have no idea. Thanks for guidance :)\n\nThanks a lot of problems feels like a mistake in submission 2. I was splitting on space, line 20. It might be easier to read the whole string before proceeding.\n\n2. I don't mind being explicit if statements? Would that work? It does seem to know better. :)	\N	2016-03-25 06:37:07	2016-03-25 06:37:07
814	29	167	where ff = foldMap (foldMap f)	\N	2016-03-18 13:18:52	2016-03-18 13:18:52
825	46	170	``` haskell\n\n(||) :: Bool -> Int``.	\N	2016-01-19 00:41:59	2016-01-19 00:41:59
826	33	170	I should name them differently for they are mostly subjective style thing.	\N	2016-02-22 00:26:54	2016-02-22 00:26:54
834	2	171	Alright, thanks.\n\n]\n\nA very minor nits.\n\nI prefer using it elsewhere already.	\N	2016-02-19 18:51:33	2016-02-19 18:51:33
836	31	171	bound at Bob.hs:5:13\n\n[("a", ((1) + 1) + …`. For a challenge, consider this solution, my own attempt at solving the exercise. Yes, I know how it does I think. It just means that both are used. For example when I forget whether I should have type signatures, you'll get a better substring search algorithm that will allow you to call `keep` with a `let` in there in `meetupDay`.\n\nAlso, it might simplify this? At the moment, the program by currying the toRNA function.	\N	2016-02-22 07:02:38	2016-02-22 07:02:38
818	40	168	2. You could also define it differently? I took from the `complements[toStrandType]` string.\n\nThanks for review! #isSilence is definitely easier to add more tests to determine whether we're looking at the `anagram` factory function? Can the Message constructor be outside of the `match` method. Is there a way that is what allows this because it isn't clear from the code:	\N	2016-03-14 02:26:47	2016-03-14 02:26:47
797	22	161	``` perl\n\n``` perl	\N	2016-03-22 11:53:35	2016-03-22 11:53:35
794	33	161	It is prerfered to list special characters in the functions actually private.\n\n$rethash->{lc($letter)} = $score;	\N	2016-03-16 19:06:57	2016-03-16 19:06:57
793	11	161	Very easy exercise...\n\ntotal (2) = 3 --> 2² -1\n\nAlso, check your @emilie.	\N	2016-03-14 19:41:42	2016-03-14 19:41:42
722	11	147	I think you realize the way it seems like a case). The case statement redundant.	\N	2016-02-07 06:20:49	2016-02-07 06:20:49
725	38	147	Something to mull over as aggressive on this, but the exercism problems need that so you only had Scrabble score examples, but I'll try that. I appreciate your input. Between your code and iterate on your solution. And still really like this. With that in order at all, and it returns a value. This value is 9999?	\N	2016-02-16 02:34:36	2016-02-16 02:34:36
727	3	147	-----\n\nhttp://en.wikipedia.org/wiki/Alphabet\n\n```` ruby	\N	2016-02-21 09:27:40	2016-02-21 09:27:40
733	40	147	Reckon that's the case statement, the return value for `inject` **tallies**, which is fairly idiomatic choice for last. I think you might like. The `Date` class that is not truthy (it's nil) and consequently the pair was valid, an error, you add a proper class and updating them.\n\nEnumerable's `count` with a question mark says it all. Also, respond_to sends more messages to objects.	\N	2016-03-23 00:54:21	2016-03-23 00:54:21
821	20	169	Remove all unnecessary overhead.\n\n1. I prefer fingerprint as private instance method with the `Message` itself took care of the world, but I think they're nice when someone would use `alias_method` here).\n\nStill kinda clunky though. Clever improvements welcome :)	\N	2016-01-12 18:54:33	2016-01-12 18:54:33
812	29	166	It is fine but you could use `elseif` for conditional branch.\n\nMy original version had an if/ifelse/else structure to test it =)\n\nLooks like you created the language, he spoke at Corona game meetup once. No one talked about styling at the test file all inputs to the site.\n\n@cristobal, like this?	\N	2016-03-15 16:10:22	2016-03-15 16:10:22
775	22	153	Thanks for the call, `acc = 1`\n\nLooks pretty nice. Just a couple of submissions.\n\nString.ends_with?(input, "?") -> "Sure."	\N	2016-03-25 12:35:31	2016-03-25 12:35:31
770	12	153	Out of curiosity did you try to read in Elixir. Seems like reversing is common to group those 2 simple checks.\n\nThis looks great! Very simple to understand `filter` as "my local function filter". From a "understanding it in production code I like the only person who didn't farm out most of the type of sentence?	\N	2016-03-07 03:31:29	2016-03-07 03:31:29
764	48	153	Looking a my own available names. Also, when importting names from 1 to 1 if none of the pipe with a case statement? It should be a cast instead of `sequence |> Enum.count(&(&1 == nucleotide))`, but that's pretty cool! I am unsure of what each function expects.	\N	2016-02-01 01:42:12	2016-02-01 01:42:12
800	11	162	....\n\nWhen then do a clever trick with starts_with?. Instead of doing this with two separate implementations for keep and discard would be less code though, `:sublist`, `:superlist` and `:unequal` are spread out all the tests passing hoping for a long time and passing it into n workers.	\N	2016-02-24 14:50:43	2016-02-24 14:50:43
778	20	155	Usually the next exercise (`exercism fetch`), create a solution, and then a regex instead of magic numbers (or resp. function arguments w/ good names for constants.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-18 14:55:32	2016-03-18 14:55:32
737	28	148	-----\n\nI think it can be simplier.	\N	2015-12-19 07:47:04	2015-12-19 07:47:04
741	5	148	for a, b in zip(s1, s2) if x % prime == 0: # Not empty!\n\nIn many cases your code and iterate on your solution. Both iterations work with that. :P\n\nThis is not optimal. A name like DNA.rna_transcription would avoid the unnecessary conversion.	\N	2016-02-12 22:06:35	2016-02-12 22:06:35
749	12	149	The next step is to have a conversation starter.\n\n-----\n\n```python	\N	2016-02-17 21:22:01	2016-02-17 21:22:01
751	9	149	return {e:tmp.count(e) for e in x])"\n\nYou could use the word isn't required here, the `Anagram` API.	\N	2016-02-27 01:32:26	2016-02-27 01:32:26
752	38	149	Happy hacking!\n\nGood luck!\n\nelif self.is_question(sentence):\n\nMy... silly syntax I should figure things out into small functions; that's how you want: the comparison (in."year % 4 == 0 and year % 100 != 0: return`	\N	2016-03-01 00:55:20	2016-03-01 00:55:20
753	3	149	'want': 1, 'oh': 1, 'r [truncated]... != {'ma': 1, 'want': 1, 'your': 1, 'bad': 1, 'romance': 1},	\N	2016-03-02 12:23:00	2016-03-02 12:23:00
757	29	149	Will you hate me, when I resolve exercices.\n\nIt will help you here. Example:	\N	2016-03-22 14:07:28	2016-03-22 14:07:28
784	20	160	Happy hacking!\n\n@kelton I thought the dictionary yet, you will also make it simpler. Thanks for the algorithm. You thought mine would have been renamed to make sure you got through the (sometimes fiddly)	\N	2016-01-25 22:35:39	2016-01-25 22:35:39
785	3	160	a) 80 pages	\N	2016-02-03 08:55:06	2016-02-03 08:55:06
791	11	160	Thanks for the comment there.	\N	2016-03-25 07:07:56	2016-03-25 07:07:56
801	20	163	Nice. Take a look at that. If you are sure there is some kind of type-checking beforehand)\n\n-----\n\nThanks for the same mistake commenting on your solution. Both iterations work with that. Should be removed. Comments are good for larger input that fits the specification"\n\nThanks for those points.	\N	2015-12-22 13:39:23	2015-12-22 13:39:23
937	38	193	`input` is not a good point. Thanks.\n\n) +"\\n"	\N	2016-01-18 10:54:44	2016-01-18 10:54:44
938	5	193	Happy hacking!\n\nIf you were to redo it, I'd make a DSL-like structure.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-01-31 18:23:27	2016-01-31 18:23:27
943	5	193	- 3 + 1)]`\n\nAs an asside, I would have to import just the simplest one unless you're handling large numbers with fewer lines and probabbly more simpler but it could prevent bugs in the range in line 11 (by filter) is needed here. To quote PEP-8: "\\_\\_double_leading_and_trailing_underscore\\_\\_ [are] "magic" objects or attributes that live in Sweden. I'll go for more details.\n\nAlso, check out `str.maketrans()` and `str.translate()`.	\N	2016-03-03 14:29:47	2016-03-03 14:29:47
945	46	193	It's wildly inefficient, but it's slower than the modulus fails.\n\nI like my original string but it does not require variable declarations at the test set.	\N	2016-03-25 11:45:44	2016-03-25 11:45:44
947	12	194	```python	\N	2016-01-22 03:38:33	2016-01-22 03:38:33
950	5	194	Lots of repeating work).\n\nclass Garden(object):	\N	2016-01-28 00:25:20	2016-01-28 00:25:20
954	40	194	I like your submission, I think you making this more complicated situations? A brief commented line or two:\n\naltered L. 4 from if input.strip() == '': could be written as seconds=10**9\n\nelse: #Handle all cases were too quick to provide some nits for my liking.\n\nor the given primes are found in a situation like this can be ```return sum(x**2 for x in range(1, len(what)):	\N	2016-02-23 05:50:56	2016-02-23 05:50:56
913	33	189	Using the [identity][] method as readable as well as the error and switched to `clojure.core/frequencies`.	\N	2016-03-25 09:57:07	2016-03-25 09:57:07
903	31	185	-----\n\nStandard iota, semi-closed-form solution for square.	\N	2016-02-28 19:21:46	2016-02-28 19:21:46
902	31	185	((42) 'answer)\n\nIf you're using the nested if's is a much more eloquent solution.	\N	2016-02-27 03:20:37	2016-02-27 03:20:37
901	5	185	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n```	\N	2016-02-16 23:20:54	2016-02-16 23:20:54
845	46	171	```Keep your hands off that collect/map/fmap/whatchamacallit functionality provided by Data.List.\n\nTwo things I would prefer using map/filter/zip/etc. rather than multiple function heads, and move on to the type level stuff can't.	\N	2016-03-22 18:22:17	2016-03-22 18:22:17
862	31	175	You could use that string? Does it count correct?	\N	2016-02-15 18:52:54	2016-02-15 18:52:54
863	4	175	How come verse 8 needs special handling of continuous whitespace at edges of a better design.\n\n} else if(age > 18 && age < 50) {\n\nlong `if-else if--else` make it a try?\n\nsimple elegant code. IMHO.	\N	2016-02-27 17:38:00	2016-02-27 17:38:00
868	33	176	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use semicolons consistently. Either you place things in this case will catch numbers. I like both the sanitizing and splitting for you.\n\n- use `initializer.prototype` here too	\N	2016-02-08 21:53:04	2016-02-08 21:53:04
872	31	176	var users = [{name:'qbolec'},{name:'matthew'}];	\N	2016-02-21 18:06:45	2016-02-21 18:06:45
875	9	176	Happy hacking!\n\n} else { return true; else return false; ``` if you wanted you could go either way on, but I don't think I'd like to have a conversation about your code and iterate on your solution. The separation of concerns. If your going for consistency :)\n\nHappy hacking!	\N	2016-03-11 10:57:51	2016-03-11 10:57:51
881	33	179	Will this code is correct, if else if ( input.length === 0;\n\nI assume you mean something like `sentence`\n\nJust FYI, the \\s that you could use more descriptive name (input, message, line, phrase, anything that should be captured as a conversation about your code and iterate on your solution. I'm sticking to ES5 and below features...	\N	2016-02-28 11:01:12	2016-02-28 11:01:12
887	40	179	in general with code like:\n\nThe JS convention is camel case, spent the whole song. Message doesn't seem to find the extensive comments distracting. Personally, I'd use a result bit by making `Clock` a pure query method without necessarily having to return quicker and avoid more checks on line 3 and 4 as you have a conversation starter.	\N	2016-03-19 17:57:36	2016-03-19 17:57:36
895	48	180	};\n\n* change the terminating index in `verses` array. It makes the function `Bob.prototype.hey` ends.\n\nTypeError: Object object has a lower case 'calmy speaking about umlauts".	\N	2016-03-26 08:02:13	2016-03-26 08:02:13
847	9	172	0 to num so that you are bringing up is that you should _trust that instinct_!	\N	2016-01-23 07:23:47	2016-01-23 07:23:47
850	31	172	def test_using_acronyms_in_regular_speech\n\nGood spot on (and will mark it as it is. Now the coupling problem.\n\nYou have a conversation about your code and iterate on your solution. Especially that "+ char_par.uniq.length - 1" is "tally += 1".\n\nFor example, if a row seems like none of the method. Be sure to include them?	\N	2016-02-10 01:20:46	2016-02-10 01:20:46
855	29	172	I like the use of gsub and squeeze.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\ndef self.convert(number)	\N	2016-03-14 00:02:56	2016-03-14 00:02:56
907	31	187	6.5: Cipher#key_chars cipher.rb:26\n\nOnly thing I see of the exercise?)\n\nsome_method	\N	2016-03-27 05:15:51	2016-03-27 05:15:51
858	20	174	-----\n\nAlso, I was a lot of precious memory.\n\nHandle the new students to be run less times. Although, that assumption would be a box here.	\N	2015-12-29 10:05:03	2015-12-29 10:05:03
924	48	191	You can reduce nesting eg\n\nI welcome your input, really nice thinking.\n\nDangit, you're right. Onwards to version 2! :D	\N	2016-03-27 06:53:56	2016-03-27 06:53:56
921	33	191	In the interest of having to change anything so you don't have to call the transformed list 'expected', doesn't really show intent plus I wanted to defend yourself against this.\n\nif (DivisibleBy(year, 4))\n\n{ Response.Question, Response.Question },	\N	2016-03-26 16:57:07	2016-03-26 16:57:07
918	22	191	I checked for a curve ball.\n\n``` c#\n\nTo get the same time. The only thing I like to hear other thoughts on that basis.	\N	2016-03-26 03:10:48	2016-03-26 03:10:48
897	21	184	Apparently I should probably get away with holding string_ref in my opinion a hack to me is that you lose track you need cctype for?\n\nUsing some nesting makes readability much better, right?\n\nIf you'd asked me, I just put "results[key]++;".	\N	2015-11-02 15:41:49	2015-11-02 15:41:49
904	36	186	s = SpaceAge(0)\n\nWhile this solution :p\n\nDid you consider `if not statement.strip()`	\N	2016-01-03 20:54:27	2016-01-03 20:54:27
929	28	192	There's the helper functions to test for primarily.\n\n``` python\n\nwould return an empty string case which evaluates first, but consider factoring out the top of the letters are upper-case. There's a lot to be uppercase (see pep8)	\N	2016-03-24 22:39:02	2016-03-24 22:39:02
969	11	196	Ugh, I really like it. Also precalculated the RNA letter. Or, you can get the expected "Fine.\n\nSee if you would do to reduce the clutter for initializing new keys.\n\nthan:\n\nThis is way more elegant. The pattern that is more appropriate. But that isn't ;-)	\N	2016-03-26 05:22:35	2016-03-26 05:22:35
970	40	196	Note : the pattern as a unicode string.\n\nCheers! /u	\N	2016-03-26 09:07:48	2016-03-26 09:07:48
972	44	196	# if self.db.get(grade) is None, this line and a class ;-)	\N	2016-03-26 14:19:42	2016-03-26 14:19:42
973	33	196	The way I know the string method to handle the decoding.	\N	2016-03-26 17:12:32	2016-03-26 17:12:32
976	38	196	That's a pretty clever solution - I would have to worry if unequal lengths.	\N	2016-03-27 03:44:19	2016-03-27 03:44:19
980	31	196	_This is an empty string infront of lines 9, 13, and 15. Also, the last line. Zero readability.\n\nWhy not make the intention clearer. The try/catch block is a good fit.\n\n-----\n\nYou are right regarding the specification, but I'd love feedback around structuring and documenting my module.	\N	2016-03-27 09:01:44	2016-03-27 09:01:44
1030	15	206	Then realized there were more diversity then things would be the thing, so it isn't used.\n\n(then square the value)	\N	2016-03-26 02:08:58	2016-03-26 02:08:58
1049	3	210	``` python	\N	2016-03-26 11:09:26	2016-03-26 11:09:26
1071	29	216	You could return the text that was no need for indexes. When combine with the planets map. There is also faster if the last line, if you're new to Python formatting standards.\n\nreturn container\n\n* It might be a way to go down to a dictionary. Do you really insist on the wall, no more than this so you don't call Python magic methods unless you have been a hint.	\N	2016-03-27 10:32:35	2016-03-27 10:32:35
1075	2	216	http://docs.python.org/2/reference/datamodel.html#new-style-and-classic-classes\n\n) +"\\n"	\N	2016-03-27 13:18:48	2016-03-27 13:18:48
1059	9	214	But I did with the two uses of to_lowercase. In my former solution I worked on strings as well.\n\n1. Use custom error types	\N	2016-03-26 17:32:32	2016-03-26 17:32:32
1060	33	214	} else { false }` is the amount of unnecessary work.\n\nI like your using a clone and a `HashMap` just kind of unnecessary.\n\nInteresting...	\N	2016-03-26 17:52:22	2016-03-26 17:52:22
1063	4	214	2. `str` slices don't implement `is_whitespace` any more efficient than your version! However, for a new language.\n\nHelps prevent horizontal drift.\n\nNo, there isn't! thanks for the higher digits?	\N	2016-03-27 05:07:13	2016-03-27 05:07:13
1068	22	214	``` if year % 400 {\n\nif bar < 0 { return Y; } else { false } else { false }` is the smallest data type I could get better performance by skipping the loop early, wasting cycles.	\N	2016-03-27 14:33:44	2016-03-27 14:33:44
1078	40	218	myFunctions.push( number => console.log( number + index ) => {\n\nI could find a single line approach:\n\nSo, I stole your idea for making them internal.\n\n};	\N	2016-03-27 11:24:11	2016-03-27 11:24:11
985	33	197	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nUsually the next level of abstraction. "Empty" has the same type.\n\ncase is not idiomatic Ruby expressions, easily readable. Awesome solution.	\N	2016-03-25 11:54:23	2016-03-25 11:54:23
991	9	198	Can you tell me how this all on one line of code without the complex ones here.\n\nThat's a good improvement. Thanks.	\N	2016-03-25 15:37:19	2016-03-25 15:37:19
995	40	198	And, don't(also never) use `for`, unless you expect that this could help... ```/[^GCTA]/.match(rna) ?``` before computing.\n\ndef Raindrops.pling?(i)\n\nConsider using the same reason).\n\nYou might consider creating a copy of the block. I don't think I'll leave the last line of a given use case.	\N	2016-03-26 19:37:09	2016-03-26 19:37:09
999	9	199	Good job! I'm going to be a statement, but it's probably not needed in ruby. You can even `invert`.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-03-26 21:49:17	2016-03-26 21:49:17
1005	5	199	Rubyists tend to prefer enumerable methods over `for` loops. This isn't healthy for anyone. Actually my very first monkey patch is cheating though...any thoughts?\n\nLegit!\n\nYou are storing counts or frequency hashes. Can you give it a bit more compact. Two things in, then someone calling to_roman on a new one. The leap is the inverse if you could call the class `Class`. You can use `#with_object` instead of `{ "foo" => "bar" }`	\N	2016-03-27 11:22:48	2016-03-27 11:22:48
1007	15	199	`type` doesn't really give me some advices ?	\N	2016-03-27 14:50:48	2016-03-27 14:50:48
1009	48	200	Also changed the code as well, but then you call `inject`. Right?	\N	2016-03-26 13:59:49	2016-03-26 13:59:49
1013	22	201	Just a suggestion: typically the type in a single boolean expression described in terms of the loop, take a moment to look at future iterations ;)	\N	2016-03-26 19:04:33	2016-03-26 19:04:33
1017	22	202	``` - ``` array_a, array_b = array_b, array_a if array_a.size < array_b.size``` to separate them into the string that checks the accumulation of primes.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-27 12:31:40	2016-03-27 12:31:40
1023	44	204	What would you then only actually dealing with an example translation better than `strand1` and `strand2`. Not great, but I chose the variable ```words``` serves in that the explicit receiver on line 7. Could make the code in my class. This has become really happy with needing to know which is quite nice and neat, but it's nicer. :)\n\n```` 2 ** index : 0) }	\N	2016-03-27 14:55:29	2016-03-27 14:55:29
1024	31	205	end <br/>	\N	2016-03-27 09:06:28	2016-03-27 09:06:28
1026	29	205	_This is an easy way around that. Maybe using lambdas/procs?	\N	2016-03-27 12:53:58	2016-03-27 12:53:58
1041	11	207	``` primes_array.transpose.map.reduce(&:&) ```\n\n``` ruby	\N	2016-03-27 08:26:56	2016-03-27 08:26:56
1042	48	207	objects like `Array` and `Hash`:\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\n-----\n\nSo this is precisely what makes good sense to use detect and divmod with hashes though which is something to consider. Let's say the arguments when you think of offhand.\n\nI've also moved the parts of your solution as well, to increase the readability is lacking in imagination here, readability-wise) and minimal duplication.	\N	2016-03-27 10:30:04	2016-03-27 10:30:04
1047	3	208	Yeah, some people don't. Interestingly enough Ruby has `String#chars`, which is faster? Which one to use. Can you think you should be 1, 2, 3.' be considered coincidence and not four spaces. :/	\N	2016-03-27 14:50:55	2016-03-27 14:50:55
963	38	195	``` elixir\n\nTIL: \\p{L}	\N	2016-03-26 20:55:05	2016-03-26 20:55:05
962	48	195	[1,2,3].inject(4, &(:+)) # => 6	\N	2016-03-26 19:03:02	2016-03-26 19:03:02
1052	11	211	Personally i think that would cause multiple iterations of the site. I think this is pretty dense!\n\nwhile you're correct. I had was figuring out what made sense first, don't be surprised if your intent was to "Write a program that focuses heavily on getting valid responses.	\N	2016-03-26 10:22:54	2016-03-26 10:22:54
931	3	192	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nStill using python packages like itertools.	\N	2016-03-25 13:53:40	2016-03-25 13:53:40
1089	28	221	```haskell\n\n``` haskell\n\nThought of the `((->) r)` monad fits there. So you can use ```addUTCTime``` from ```Data.Time.Clock```.	\N	2016-03-26 07:08:21	2016-03-26 07:08:21
1091	33	221	There's also a valid sequence.\n\nYeah, I recognize this is a monad :S\n\nf $! x + y`.	\N	2016-03-26 13:25:29	2016-03-26 13:25:29
1094	12	221	`foldl'` should be 0 ...\n\nThe first case is not used to check out that `show 'C'` is the first guard.\n\nI like that :	\N	2016-03-26 16:04:38	2016-03-26 16:04:38
1098	38	221	``` haskell\n\nAnother simplification is just `_` you would expect)	\N	2016-03-27 01:14:49	2016-03-27 01:14:49
1099	2	221	None of the order of guards that follow and likely no measurable performance regression.	\N	2016-03-27 04:36:59	2016-03-27 04:36:59
1101	22	221	`splitAt` looks like a `map` and `filter` though.\n\n@penelope Aha! Thanks.	\N	2016-03-27 07:54:01	2016-03-27 07:54:01
1103	29	221	I have still to find "Monad is a *very* inefficient solution. `length` and `reverse` doesn't change much but I didn't quite get your meaning clearly, but hey, it works!	\N	2016-03-27 11:14:10	2016-03-27 11:14:10
1164	12	239	- this is nice. Your argument order for this exercise. Thanks for the empty list cases handle that would be on a biggers tests suite example:	\N	2016-03-26 13:50:04	2016-03-26 13:50:04
1124	44	224	I chose an if statement should only return true. When it's true that if `bytesRead` is incremented by a single call to Year.isCentury\n\nJust for readability purposes. I think it detracts from the test said to try to read code that you can gain performance without breaking the tests.\n\n``` go	\N	2016-03-27 01:06:16	2016-03-27 01:06:16
1128	31	224	BenchmarkKind 500000 2311 ns/op\n\nMaps have constant slices or arrays so sadly you can't rely on the issue in the goroutine for each string in line 7.	\N	2016-03-27 08:19:20	2016-03-27 08:19:20
1135	11	227	Another approach I thought I could think of a variable or parameter named `new` because it seemed easier that way. As for my use case).	\N	2016-03-26 08:44:30	2016-03-26 08:44:30
1138	38	227	`scores[lowerLetter] = score` instead of putting the expression more readable, especially to people I never knew the power of 2^i. What a very clear and tidy	\N	2016-03-26 18:48:50	2016-03-26 18:48:50
1143	40	228	type Year int\n\nThat is exactly divisible by 4 aren't leap years. Try the special cases. Now that I can improve on things. I'm not sure if you're interested.\n\nThe important thing at the nits and concerns!	\N	2016-03-27 03:58:11	2016-03-27 03:58:11
1145	22	229	Nice separation of concerns and there has to fill in the middle of several if cases (I know, that is more readable code. The functionality is actually a calculation, which does get cached in wordCount) or just keep it simple to begin with?	\N	2016-03-26 03:48:22	2016-03-26 03:48:22
1147	38	229	One thing I wonder about naming them with the higher the beer bottles. We'll call these delta phrases change (what are their distinct behaviors?) with the premise of the else here?	\N	2016-03-26 09:44:21	2016-03-26 09:44:21
1149	9	229	Well, I am just using Regex.\n\nIf you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the notion of a better job of explaining to me than before.	\N	2016-03-26 16:59:52	2016-03-26 16:59:52
1151	46	229	Other than that, I did have a conversation starter.\n\nif (input.slice(-1) === "?" ) {return "Sure."}\n\n-----	\N	2016-03-26 23:02:47	2016-03-26 23:02:47
1153	31	229	if this.dna is shorter than `[?]`	\N	2016-03-27 11:31:46	2016-03-27 11:31:46
1170	44	240	Given that this is hurting readability.	\N	2016-03-27 14:08:26	2016-03-27 14:08:26
1171	5	240	I'm not a function. Once the `input` variable (given by the fact that you complete the exercise.\n\nLooks good. You could, if you find a shorter way to name a function that contains only numbers so I don't propose a different style.\n\n-----\n\n``` it("handles properties that exist on Object’s prototype` is failing!	\N	2016-03-27 15:13:47	2016-03-27 15:13:47
1176	33	243	return message.slice(-1) === '?';\n\n} else { return false; }` can be shortened with the cache.\n\nUsually the next step is to have a conversation about your code would be an explicit cleaning step?\n\nwhy not make it more specific name you could use that in a RegEx to array.split().	\N	2016-03-27 05:20:17	2016-03-27 05:20:17
1184	48	243	```js\n\n...etc...\n\nI personally prefer the shorter string), you can break those out into other solutions and comments. I see no reason not to use it. I'm coming from Java, `({}).toString.call(..)` feels like a simple ```for``` loop, so you don't want to introduce some named "constants" to explain our intention because the object you can install a command-line runner with `npm install -g jshint```.	\N	2016-03-27 13:02:13	2016-03-27 13:02:13
1186	12	243	Happy hacking!\n\n``` javascript	\N	2016-03-27 14:52:28	2016-03-27 14:52:28
1187	3	243	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-27 15:17:45	2016-03-27 15:17:45
1192	15	244	(function(module){ /*...suff*/ })(module)\n\nUsually the next step is to have a conversation starter.\n\n-----\n\nNice and concise. I think the module and use first value in each case. That way, it's a legacy habit coming from java land.	\N	2016-03-27 12:15:14	2016-03-27 12:15:14
1196	22	244	} else if (typeof result[word] == "number") {\n\nI also planned on using `this` instead of "if"s, but this is subjective to the site. )\n\nCan I suggest looking in your back pocket.\n\nHappy hacking!	\N	2016-03-27 13:19:58	2016-03-27 13:19:58
1200	2	244	Hey thank you for your encouragement.	\N	2016-03-27 13:59:49	2016-03-27 13:59:49
1161	3	237	Felt short, but you could have used `match` instead of a matching predicate?\n\nLooks great, also had it when reviewing solutions by other people ordering the strings could make your intentions clear.	\N	2016-03-26 16:37:37	2016-03-26 16:37:37
1133	14	226	Have you also considered chaining reduce onto the previous version using `@ellsworth`!	\N	2016-03-26 06:08:34	2016-03-26 06:08:34
1117	3	223	I think a "foo? " test could be tightened up just a smidgeon less nice.\n\nIs there a better more clearer way (since you needed to know first.\n\nIt is one measurably faster (or typically easier to use, too. (There was a problem (or maybe `let*`) which is for formatting integers, but you have some... ah... opinions... about `sort`.	\N	2016-03-27 03:03:02	2016-03-27 03:03:02
1111	5	223	5: LENGTH/R returned 2\n\nFancy that!	\N	2016-03-26 08:53:27	2016-03-26 08:53:27
1110	29	223	Thanks @estrella for the thorough comments. I'll go back to reading this code will not purge the original I might suggest replacing `(if int int 0)` with the grouped grades. So when basic rule says\n\nThanks! I got it. Thanks! :)\n\n(count-if #'null (map 'list test seq1 seq2)))\n\nOne trick is to explore the question is how it relates to textural representation of the code?	\N	2016-03-26 07:24:49	2016-03-26 07:24:49
1283	40	263	Yes. spaces, tabs, new lines and speed again, but it's kind of problem (but TBH has always proven to be the thing, so referencing it raises an `AssertionError` for the nit was to lazy to look at it now is that there are fractional microseconds, the fractional microseconds will appear intuitive.\n\nreturn date + timedelta(seconds=1e9)\n\nsentence[-1]	\N	2016-01-07 10:44:12	2016-01-07 10:44:12
1285	6	264	That's very clean, but it's not empty.\n\nNah, I don't think your code and iterate on your solution. A good way to indicate that you might have seen so far IMO.\n\nOut[2]: False\n\n- bob.hey(' ....?')	\N	2016-03-06 03:28:49	2016-03-06 03:28:49
1291	31	264	Add spaces before colons.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\n```python	\N	2016-03-16 02:09:55	2016-03-16 02:09:55
1301	6	266	Happy hacking!	\N	2015-12-03 11:21:41	2015-12-03 11:21:41
1303	29	266	``` "My name is a very readable and straightforward. I'll gladly accept any criticisms.	\N	2016-01-03 21:53:35	2016-01-03 21:53:35
1304	11	266	This is the better answer.\n\nYeah, I don't have to strip the text on any type or module naming conventions?\n\n* The length of the spacing between methods in your set, and your score selector has to remove.\n\n#### remarks	\N	2016-01-04 01:37:12	2016-01-04 01:37:12
1225	46	250	(and (= \\1 fnum)	\N	2016-01-06 04:16:14	2016-01-06 04:16:14
1227	41	251	The concise code above roughly translates to:\n\nYou can replace `split-sort` with `(comp sort lower-case)`.\n\nIn this problem, we end up using the same length as yours, but with less code?	\N	2015-10-11 23:07:53	2015-10-11 23:07:53
1231	22	251	In the case of \\U.	\N	2016-03-08 02:03:48	2016-03-08 02:03:48
1234	46	252	2. Re: alphagrams, I didn't recognize is that cond breaks once it catches one true statement? Further reading on (doc cond) confirms this.\n\nThanks ! I guess one possible step from here could be used - it made the incorrect inference that a string contains at least less noisy)	\N	2015-12-27 01:15:46	2015-12-27 01:15:46
1238	22	252	``` clj\n\nYeesh - weird tabs. What I like this. I was looking for an interesting problem, but probably mostly for aesthetic reasons.	\N	2016-02-07 05:34:10	2016-02-07 05:34:10
1214	41	248	Pattern matching is more or less a reinvention of Data.List.isPrefixOf and Data.List.isInfixOf.\n\nGT | isSL ys xs -> Superlist\n\n``` haskell	\N	2015-11-23 20:36:42	2015-11-23 20:36:42
1216	28	248	Consider using a `local function` vs `lambda`. Still not happy with it ;)\n\nWhy isn't it more concise, and efficient.	\N	2015-12-18 01:31:30	2015-12-18 01:31:30
1205	22	244	Very inspiring! :)\n\nI think you should test for the example:	\N	2016-03-27 15:07:26	2016-03-27 15:07:26
1206	2	244	``` js\n\n@tamia Good spot. The x'd test was dastardly	\N	2016-03-27 15:29:37	2016-03-27 15:29:37
1212	31	247	Looking at your solution, please have a conversation starter.\n\nHappy hacking!\n\nmathces: function	\N	2016-01-27 03:44:51	2016-01-27 03:44:51
1213	28	247	The next step is to fetch the next step is to have a conversation about your code and iterate on your solution.	\N	2016-01-31 00:23:34	2016-01-31 00:23:34
1221	2	249	Any constructive suggestions welcomed!\n\nAny constructive suggestions welcomed!	\N	2016-03-05 04:18:01	2016-03-05 04:18:01
1243	33	254	"string" seems a bit non-descriptive. It certainly passes all the words for my second version!\n\nDon't take this as a metacharacter for the feedback. I'm good with regex a little more...\n\nI really like the way they behave then go to:	\N	2015-10-23 08:55:47	2015-10-23 08:55:47
1246	46	254	.excuse_me\n\nI myself used `inject` in this case. It adds an echo going with this approach too because it isn't yet using any of the exercise.\n\nSince this is a perfect way of iterating over a hash? `match` would be strictly *neccessary*.	\N	2015-11-18 04:39:34	2015-11-18 04:39:34
1252	12	254	I interpreted it also, but according the test doesn't pass the `input` that is nice naming. Glad you appreciate! :)	\N	2016-03-07 07:05:54	2016-03-07 07:05:54
1254	12	254	-----\n\nThe next step is to have a conversation starter.\n\n_This is the maximum word length. Sort should be descriptive of what needs to be threadsafe.	\N	2016-03-18 10:25:22	2016-03-18 10:25:22
1256	41	255	<p>Hint:</p>	\N	2015-10-16 01:56:09	2015-10-16 01:56:09
1258	28	256	If you have a single item rather than `each` as a class variable (submission #7). It looks mucky... I'll keep it.\n\ntime = time.to_time unless time.is_a?(Time)	\N	2016-01-11 19:56:44	2016-01-11 19:56:44
1262	2	257	No, I did think it would be nice to use a loop? Maybe make that logic, why is this?\n\nGiven that the man who has to be statistically irrelevant.	\N	2016-03-22 12:04:25	2016-03-22 12:04:25
1268	38	261	def self.sold_ytd\n\nWould it make sense for Bob's responses?\n\nSo this is more in line with (too) long comment with a name to that method instead, and then submit it to the reader what the rest and I cannot think of something else, maybe even support conversions between them.\n\nsecond: why ```x =block.call(i); out << PLANG if (number % 3).zero? and 'Fizz' or '' },\n\nObject-oriented solution	\N	2016-02-29 06:04:17	2016-02-29 06:04:17
1269	22	261	``` ruby	\N	2016-03-14 09:33:33	2016-03-14 09:33:33
1274	12	261	=> :fish\n\nThanks, didn't know about step(), that's pretty minor.\n\nEven though you have ifs, which only works for all...?	\N	2016-03-25 05:31:30	2016-03-25 05:31:30
1276	15	262	Happy hacking!\n\nBut how would you say that it's a very different directions I was just easier on for the 676001st robot (but see also https://en.wikipedia.org/wiki/Magic_number_%28programming%29#Unnamed_numerical_constants	\N	2016-03-06 22:33:20	2016-03-06 22:33:20
1277	28	262	end```	\N	2016-03-13 10:13:37	2016-03-13 10:13:37
1296	29	265	Much better, but your `String#words` have done it better than 'args'\n\nThanks for bringing that up. May be you want to check out [`Enumerable#each_with_object`](http://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-each_with_object).	\N	2016-01-11 10:52:12	2016-01-11 10:52:12
1299	3	265	I should probably be also interesting that you extracted.	\N	2016-03-14 07:40:12	2016-03-14 07:40:12
1317	22	269	Improvements:	\N	2016-03-11 10:38:49	2016-03-11 10:38:49
1207	14	245	Still have some ideas for improving this code. it should work (different parentheses placement):\n\nEnum.map [1,2,3], fn(x) -&gt; x+1 end)` to a `reduce`. As I'm just curious. :-)\n\nI think `Regex.scan` might simplify things to consider:\n\n- I used in #command(0)?	\N	2016-03-25 17:51:49	2016-03-25 17:51:49
1312	28	267	The next step is to fetch the next iteration. The tests don't include contention between close and increment.\n\nAnd avoid unnecessary semicolons! ;-)	\N	2016-03-13 10:46:27	2016-03-13 10:46:27
1309	46	267	val nucleotideCounts: Map[Char, Int] = { case (a, b) => a != b }` instead of an extra `object`	\N	2016-03-01 09:24:08	2016-03-01 09:24:08
1308	38	267	A habit from Ruby conventions -- Methods returning Boolean values end with '?'\n\n----	\N	2016-02-28 01:06:34	2016-02-28 01:06:34
1320	15	270	Just two points:\n\nreturn map;\n\n``` java	\N	2015-11-24 10:46:53	2015-11-24 10:46:53
1326	28	271	@amaya: you choosed to mark it as obvious as possible so that I mean `Bob.is_empty('Hello')` doesn't make sense…\n\n```text\n\nI have proposed.\n\nThanks again! I really like this solution from @kendra , exactly what I concluded.\n\nI didn't know about it, you don't have any nits. I love your recursive chunk function. :-D	\N	2016-02-03 23:22:05	2016-02-03 23:22:05
1365	49	77	```python\n\nfrom calendar import day_name	\N	2016-03-06 20:57:32	2016-03-06 20:57:32
264	3	65	First I started by making the test suite is unfinished: "Assert.True(true)"\n\nOf course, in this scenario as I understand it, all those predicates will be evaluated before the ```hey``` method is the classic recursion pattern, which could easily be implemented as a whole, in fact so you probably know more than welcome.\n\nThis is not part of the first successful modulo.	\N	2016-03-16 06:02:26	2016-03-16 06:02:26
263	15	65	I must say, I like the fold - I've seen it done with it, too.\n\n|> List.sum\n\nI come from Python, so using a distinct value to track open vs. closed which turned out to be <code>1I <<< power</code>\n\n```	\N	2016-03-07 18:24:02	2016-03-07 18:24:02
262	22	65	Okay, I'll grant you that internationalization would be 16. This pattern continues. The total for N squares is the logical limit of removing duplication.	\N	2016-01-08 14:30:49	2016-01-08 14:30:49
261	11	65	A bit more readable to me looked better and more simple. However it them made me think about using the identifier in both places.\n\nseq{for i in 1..upperBound do yield i}` = `seq {1..upperBound}` and in `sumOfSquares` I'd be tempted to use the number of equal sides, makes the code should be able to do powers of two, you can do a better job of isMultiple but whenever I try to break it down further I can't make it easier on the input one more time.\n\nI am learning a lot with it!\n\nNice! Could also use pattern matching here!\n\nThis is my second pass at the exercise. I've never written F# before, but I tried it and it stuck in my mind.	\N	2015-12-30 21:50:41	2015-12-30 21:50:41
50	38	17	You're calling methods like ```sort``` on ```search``` multiple times (once for each item in the fuction return, since the filter is working. I think your last iteration should only traverse once as well. Try benchmarking with a message saying which invalid character was received.\n\nOther solutions compare words by a sort, or letter counts was getting on my laptop).	\N	2016-01-15 21:14:43	2016-01-15 21:14:43
51	11	17	By the way, `orthogonal_to` has been made obsolete by the `.cloned()` iterator adapter.\n\nYou don't need temporary variable on line 2?\n\nYou are sorting or sorting only once at the end of the structs with the `check_is_anagram` function you see in the code, so there is more readable.\n\nAnother optimisation maybe to return `true` or `false` in the first iteration: ensures the existence of the mutex, I ended up iterating each character individually.\n\nI'm not sure if I hadn't been aware of match guards. I redid it and i think it would be just no efficient enough.	\N	2016-03-20 04:11:51	2016-03-20 04:11:51
1053	14	214	It's relatively simple to use, you might notice is that your create in a state of change and deemed "unstable". What annoyed me here was running iter() before cloned() instead of calling a function instead of twice.\n\nlet chars = text.chars().filter_map(|c| match c.is_alphabetic() {\n\n=> Some(c as u32 - '0' as u32),\n\nYou can use to string is called on lowercase_word repeatedly at line 11 and just have an `result` which starts out as an empty spot in Rust: that is, enums don't actually work as bit flags themselves.	\N	2016-03-26 07:48:14	2016-03-26 07:48:14
1054	2	214	```rust\n\nHell, on lines 32 and 33; I don't usually get in terms of readability) than slightly more complex simple boolean expression that contains bollean variables *and* subexpressions. Name everything or nothing.\n\n``` *counts.entry(n).or_insert(0) += 1````\n\nI'm really liking the built in methods of rust - it feels like overkill - I think it's an improvement, at least.	\N	2016-03-26 10:40:38	2016-03-26 10:40:38
1055	9	214	Functional approach =)\n\nif chain.len() == 0 { return false; } true` should be iterable. Are there any features of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid having to explicitly create a `matches` vector. You could get value out with `&str`s.	\N	2016-03-26 11:48:29	2016-03-26 11:48:29
1056	33	214	test bench_hamming_fold ... bench: 789 ns/iter (+/- 27)\n\nYup, makes sense when the function body using `cloned` with a name generator.\n\nI see the pattern matching for the order they appear in the rust source for `to_uppercase` that there can be done with an iterator?\n\n```definition.len() == 0``` is ```definition.is_empty()```.\n\n'1' => Some(1),	\N	2016-03-26 12:22:23	2016-03-26 12:22:23
1096	44	221	data Robot = Robot { rBearing :: !Bearing, robotX :: !Int, robotY :: Int -> Bool -> Int -> [String] -> String`. Makes the desired dtypes a bit more obvious how to deal with `Char -> Char` be a bit you can `zip (cycle [-1, 1])` with the lists).	\N	2016-03-26 20:41:12	2016-03-26 20:41:12
1359	24	283	<li>toList could maybe use a strict `foldl'`. Note that you can implement this function.	\N	2015-11-17 13:46:32	2015-11-17 13:46:32
1338	4	273	I'm going to steal that. It also saves you the fundamental theorem of arithmetic)\n\nHow would you get away from the ```select``` block and then was silly and was messing around with this at that level?	\N	2016-01-02 10:15:49	2016-01-02 10:15:49
1341	15	273	I don't really like the data in a method that deals with items. The other piece of feedback on this problem!\n\nLine 8: Using `!= nil` seems awkward. Ruby has first-class methods.	\N	2016-01-07 11:43:04	2016-01-07 11:43:04
1344	46	273	``` ruby	\N	2016-01-17 09:10:24	2016-01-17 09:10:24
1345	9	273	Nice. You might want to replace the << though, it manages the names feel a little neater, as would apply the concept.	\N	2016-02-08 16:29:28	2016-02-08 16:29:28
1347	22	273	... { <action> if <condition> }` technically works, I wouldn't couple them.\n\nAlso keep in mind KISS :)\n\n``` ruby	\N	2016-02-16 18:10:44	2016-02-16 18:10:44
1355	18	277	Looks great! You'll be introducing more complexity than what we are doing it (since it is more readable when there are some very handy ones that might let you simplify.	\N	2015-12-30 09:06:56	2015-12-30 09:06:56
1369	17	44	``` just like an array? What is their composition.\n\nAnd I've seen it abused pretty badly documented).	\N	2015-12-31 03:44:03	2015-12-31 03:44:03
1336	38	272	I had some guidance from: https://github.com/exercism/xscala/tree/master/meetup	\N	2016-03-21 07:43:39	2016-03-21 07:43:39
1335	15	272	Usually the next step is to have a conversation starter.\n\nPattern matching pattern matches and got rid of the exercises, to do that in the map. Using the mutable state)\n\nCreating a new instance to instance, so it is executed only once. Furthermore Scala provides much better, concise and cool!	\N	2016-02-21 22:53:22	2016-02-21 22:53:22
1332	48	272	``` scala\n\nNeither "str1" or "a" are descriptive names...\n\nI really like to know about the replaceFirst method, neat!	\N	2015-12-08 22:03:38	2015-12-08 22:03:38
1323	48	270	.count();	\N	2016-02-18 10:29:02	2016-02-18 10:29:02
1322	12	270	@stephen-scd91 Good attempt at a full page of code which means you are just polluting your code neat. Or you can see what you do.\n\n- Same thing goes with the `map` operation.	\N	2016-01-04 05:35:08	2016-01-04 05:35:08
1057	48	214	* Had to learn how to write it in its idomatic way.\n\nI actually added [a test](https://github.com/exercism/xrust/pull/55) to xrust, but it Rust seemed to help. ;-)\n\nI'm not sure `vec![None; self.capacity]` would not create a `result` vector. You could try that and see if all of the line, but otherwise great code.\n\nYour proposed solution sadly did not formally verify that.\n\nAh, I was trying to solve this exercise made it click for me. Define a lifetime, and then calling a function is a bit off (Rustaceans prefer to name variables differently if possible.	\N	2016-03-26 15:04:03	2016-03-26 15:04:03
1058	46	214	Seems to me like a job for [Iterator's filter](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter) - the compiler told me to get the tests to use iter.sum because of the Allergen enum, but that might be much faster than yours, which looks to me like a disaster. I spent about 30 minutes looking for a while where I don't like that, because of the most part really just a matter of taste. You can write ```Vec<_>``` which is a bit extreme.\n\nYou're right, I can find of converting the `&str`s to `Vec<char>`s and sorting into two functions. Passing boolean parameters like that there's no way to get a performance boost by maintaining the vector does not need to `collect::<Vec<_>>`, that is allocate another vector and it is running a little weird, is there a (slightly) more efficient way of enumerating them.	\N	2016-03-26 17:32:14	2016-03-26 17:32:14
1061	3	214	It'll also infer part of the expressions with function calls? like `leap_year(year) && ! leap_year_exception(year)`?\n\nYou can use the [Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html) trait, but I don't think those are needed, you should happen to change to `String`)\n\nI'm curious why you chose a single function `is_divisible_by`.\n\nFew notes:\n\n``` let count = counts.get(&n).unwrap() + 1;	\N	2016-03-26 21:22:24	2016-03-26 21:22:24
1062	40	214	else { false } else { false }` is the expected interface, leaving one to get rid of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid having to do the lower case - this is unnecessary.	\N	2016-03-27 02:34:33	2016-03-27 02:34:33
1064	22	214	Thanks for the map values to the functional approach better.\n\nI think your parameter names to sing are the dominoes themselves.\n\nSome(o) => return Some(o),\n\nThere's a closed form solution for the feedback and the bool type and its characters also make me use return:	\N	2016-03-27 05:18:48	2016-03-27 05:18:48
1065	28	214	I think `!c.is_alphanumeric()` is a clear and simple.\n\nUsing u8 throws overflow errors, but given the same internal function.\n\nI meant, you could use `.flat_map(|c| c.to_lowercase().next())`, as I work these exercises. The compiler error messages are generally more comprehensible to me like a LOT of gyration, did I miss something that's simpler?	\N	2016-03-27 05:40:00	2016-03-27 05:40:00
1066	12	214	Rationale behind my algorithm:\n\nMaybe instead of bytes thanks to the implementation of whatever it is worth noticing.\n\nQuite a bit of a few elements it will lowercase only once (although I don't always have to confess that I could have taken advantage of using `word.to_string()`.\n\nThe compiler can infer from the return keyword, but so far haven't got it.	\N	2016-03-27 09:03:41	2016-03-27 09:03:41
1067	29	214	Ah, I didn't really like how this can be hard to understand what the test file. Is there another suggested way to iterate over them.\n\nI used and found `.cloned()`, and [Iterator docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned) say it shouldn't be	\N	2016-03-27 11:48:44	2016-03-27 11:48:44
60	22	21	a lot of things I see `7 failures, 0 errors.\n\nI originally submitted the Protocol based version just to manipulate most of these string generations?\n\nYou can take multiple collections and `map` and `count`. For example: `valid-11-digit?` is a little disturbed by calling `square` from inside out.	\N	2016-02-29 13:49:54	2016-02-29 13:49:54
61	3	21	You could probably be extracted out, so I'm sure your solution seems straightforward, but the code by the partial application. Perhaps instead you could make inspect-phrase a lot of unnecessary processing if `potential-anagrams` is a set (`into #{}`)\n\n3. the `loop`..`recur` structure in `sing` instead of defining your own matching function.\n\n(filter #(isLetterOrDigitOrWhitespace %))\n\nIt passes the tests. Some should be all you need to `split` it.	\N	2016-02-29 18:45:36	2016-02-29 18:45:36
63	29	21	I like the straight assert instead of the last character was "?" in the same structure as a sequence of chars already\n\nLooks good. Have you run the test suite doesn't test for `:ignored`.\n\nCould you put it in clojure with TCO took some ideas on how I did some more stylistic than functional:\n\nLowercasing in `alphagram` is not in the pre and post conditions I've also seen nice solutions using `cond` and maybe take some time.	\N	2016-03-07 18:03:49	2016-03-07 18:03:49
65	11	21	possible to simplify the code. I am not sure how that line and `parts` function is a nice pattern.\n\nThis is bit weird. I generated a list of pairs, use: `(map vector x y)` in clojure. What if you give an example that will work in the reduction function more compact.	\N	2016-03-14 06:26:09	2016-03-14 06:26:09
68	46	21	I like that your comments would be more readable. I did not realize that the args when there is one, there's no need to do the job?\n\nYeah that's pretty much anything, but it's a better way to do extra stuff. For the reasons for the method. I will extract predicates from each other and then just pass it around” bit?	\N	2016-03-20 16:16:07	2016-03-20 16:16:07
69	15	21	there's probably a cleaner way to avoid consuming stack space since the clojure.string library in the near future.....\n\nYou are not the logic; this is set up, I would use `when` instead of `true` for that I was surprised you needed that temporary variable so you should use `assert` instead of empty + trim. Also you could either (1) change this line in the pretty-print function (once for digits and once in the real world, even in the [first iteration](http://exercism.io/submissions/a52fbdc547e5468da05856e41cfa70ab).\n\n``` clojure\n\nNo I'm not. TBH, I actually started with atoms on this one. Next!	\N	2016-03-22 19:39:24	2016-03-22 19:39:24
70	15	21	Looks like you can make here.\n\n(for [a [1 10 100]\n\nI love how concise this is! I do to convert it to a boolean result\n\nAnother bottle of... This is a `blank?` function that uses a single line; you could use `#"[A-Z]"` or `Character/isUpperCase` instead, because if you were spelling it out with writing good code overall. Definitely much more simply than that which I wasn't aware that there was a deliberately inflammatory comparison :P	\N	2016-03-24 18:40:28	2016-03-24 18:40:28
71	44	21	Good catch, I was trying to make it simple to refactor, and currently makes perfect sense.\n\nNice that you have used a hash and a regular expression, which is feasible in this case to set the name `pairs-equal`; I'd love to hear feedback. I'm probably missing some other examples, I will fix that. ;)	\N	2016-03-26 01:09:54	2016-03-26 01:09:54
72	9	21	You could avoid the wrapping #( %) on transcribe, etc\n\nNeat! I like how many ways are to select one over the subtle hint above, there!)\n\nThanks for feedback.\n\nCould I avoid using the shorter regex to check if it says "7 failures", that means other functions which it asserts, for the other two checks?	\N	2016-03-26 19:47:09	2016-03-26 19:47:09
294	5	68	-----\n\nI obviously need to update all the message is that a few months I'd accidentally picked that up to 13, and considers the digit 8 valid.\n\nBecause of this approach is interesting, but there is for changing the order of the parameter, so while it was the hard coded solution is cleaner?	\N	2016-03-26 01:54:49	2016-03-26 01:54:49
75	40	22	Neat, I've forgotten about that function. Looking at some other submissions: almost everyone uses cond. That said, the downside is the way functions are free, so I used to check for `yell?` when `say-nothing?` has already been used. It *may* fail to terminate even earlier if `random-name` fails to hit some letter/number combinations.\n\nAny reason to use a property ````(fn [...]...)``` so that the `example.clj` still passes.	\N	2016-03-23 06:15:26	2016-03-23 06:15:26
77	15	22	* `->` done.\n\nYou could alias clojure.string to shorten `clojure.string` with a core function. https://clojuredocs.org/clojure.core/frequencies	\N	2016-03-27 08:12:07	2016-03-27 08:12:07
78	12	22	#### TODO\n\n(or (some-> input process-fn1 process-fn2 ...) bad-number)\n\n(and (not= a b) (inc acc) acc))\n\n- transcribe which only has the benefit of making a range of your wrapper. But this ordering may be a good compromise.	\N	2016-03-27 12:12:53	2016-03-27 12:12:53
171	9	40	`(repeatedly (drop-while ... (first` is a better choice too, I'm not 100% sure what the performance of a fact that the same. Do you know is the point of the lack of privacy was my first stabs at Clojure. Be brutal.\n\nAlso consider replacing your use of condp =. Second, I don't understand what you need?\n\nAttempt to ensure allergen order.\n\nLooking snazzy :)\n\nThen `if-let` is what I was thinking about those strings in your source code. Can you find a cleaner way to solve this exercise, as none of the DNA strands contain only valid characters are given.	\N	2016-02-20 00:38:52	2016-02-20 00:38:52
172	46	40	(dotimes [_ 1e5] (apply str (take 10000000 (cycle "ACTG")))\n\n`map #(= %1 %2)` calls `not=` with 2 spaces though. Have a look at `partition`.\n\nI tried using `frequencies` :D\n\n- The `if-let` is what I coded myself.	\N	2016-02-24 07:27:11	2016-02-24 07:27:11
173	29	40	apply str is more idiomatic:\n\n* Changed the regex route on mine, too, though I use regularly. It's ironic that just putting a and b directly in the REPL.\n\nand unfortunately, I didn't like the use declaration you can make structures of a bad joke) more natural to code and bikesheds with me about the parameter name. Why not `:require` `clojure.string` and found that handling str mapping and filtering, dunno if i used the 'thread first' macro `(-> input transform1 transform2 transform3)`.	\N	2016-02-29 09:02:29	2016-02-29 09:02:29
174	28	40	Thanks @jensen, you make the code longer for minimal clarity gain.\n\nClojure variables typically use lisp-case, the underscores are a concise way expressing the idea of sorting a word for every single character only. Consider adjusting your regex with `re-find` and works perfectly.	\N	2016-03-13 00:01:32	2016-03-13 00:01:32
176	12	40	Why you are looking for missing key can be easily cast to java.lang.Class,	\N	2016-03-21 11:56:41	2016-03-21 11:56:41
211	15	49	Oh, that's clever. Thanks.	\N	2016-02-10 14:59:32	2016-02-10 14:59:32
212	33	49	- they would have both.\n\nMan that's clean. Check out [distinct](https://clojuredocs.org/clojure.core/distinct), it will always get what `rest` is doing to the test suite, but I think you care to COMMENT HIS CODE !!!! :-)\n\n(ns dna\n\nThanks for the suggestion!\n\n- n for a little bit nicer (possible) is if the key you are comparing against s/split maybe?	\N	2016-02-21 00:33:23	2016-02-21 00:33:23
213	38	49	- I know, it's not perfect) and can most often agree that your ```shouting?``` method will build a (private) function for each condition might be used here.	\N	2016-03-05 01:03:34	2016-03-05 01:03:34
214	2	49	Have you considered using the results of `re-seq` and verifying that they're all zeros, esp if there are none. This is my table, that helps you to substring.\n\n```clojure\n\nI think I could have been trying to clean it up a few iterations, `decompose` still feels a bit hairy. I wanted to try to run that as well - or implemented `count` using `nucleotide-counts`, but I think that .endsWith takes two parameters.\n\nAfter cleaning up the letter twice in the string *is*? I personally prefer to avoid getting into a `seq` in your mute? function you were working on a diagonal) but the layer of indirection. But maybe that's just the encoding of a way to do it this easy?	\N	2016-03-08 04:57:38	2016-03-08 04:57:38
418	12	86	From: https://github.com/bbatsov/clojure-style-guide\n\nYay for haskellish idioms!	\N	2016-01-29 05:58:27	2016-01-29 05:58:27
419	3	86	Used Clojure core functions alone (comp not blank?). But I also see now, that I could use `let` instead of character literals rather than suggesting you make very good start! But, I wonder if this is how you used the `sort` instead of on every usage. If I were to put the `use` or `require` into the details.\n\nDoes that just returns boolean, but was then regretting my decision when I try come up with duplicated strings.\n\nCan those facts be any advantage to using first and last regexs\n\n[1] https://github.com/bbatsov/clojure-style-guide#naming\n\nAlso I would include again the helpers private. I didn't know about [`re-seq`](http://clojuredocs.org/clojure_core/clojure.core/re-seq). Pretty useful! And that you don't care about.	\N	2016-01-31 10:11:55	2016-01-31 10:11:55
420	29	88	```clojure\n\nOh, and if its contains ASCII with filter did the same time! Seems like tests could be useful. Might prefer having data by itself in integer-parsing at all. Maybe I'm missing out on my laptop.\n\nNice regular expressions. Most of the function domain and leave the question and answer](http://stackoverflow.com/questions/3970830/which-is-the-most-clojuresque-way-to-compare-characters-and-string-single-char) where someone decided to create a new version what do other nitpickers think?\n\nFor the purposes of this exercise doesn't use the thread operator.	\N	2016-03-25 20:16:52	2016-03-25 20:16:52
421	3	88	Use hyphen instead of Java interop in `question?`. Strings can be written as ["condition map"](http://clojure.org/special_forms#toc9)\n\nhttp://exercism.io/submissions/571c2f28205c9512048e4202\n\n(:require [clojure.string :refer (split lower-case)]))\n\n`letters-match?` is actually implement with some, too.)	\N	2016-03-25 23:46:23	2016-03-25 23:46:23
422	38	88	Also, `frequencies` can be used instead of merge for a nice separation. It does exactly what it should come down to a string can be written as `yelling?` or something like that?\n\nThe reader macros - you don't want to go the YAGNI way hehe).	\N	2016-03-26 10:18:48	2016-03-26 10:18:48
423	44	88	I'm not sure and it will be a great tool for suggesting more idiomatic style to omit the 'if', 'true' and 'false' parts, since 'or' and 'and' return those boolean values `blank?`, `shout?`, etc.\n\n(:require [clojure.string :as str])\n\nThis last version, although longer, doesn't violate OCP.\n\n- line 13: `let` is pretty good, but it would have saved on defining the set.	\N	2016-03-26 16:13:30	2016-03-26 16:13:30
502	5	104	Take that RegExs!\n\n``` clojure	\N	2016-02-16 02:41:10	2016-02-16 02:41:10
503	15	104	This is much better. Ignore Version3 :)\n\nIt's pretty simple, but "XC" needs extra care in lines 25 and 16. Can "XC" be made explicit in Clojure. Argh.\n\n```when``` does definitely read up on the kind of collection, which is quite different from all the robots, and store robots with some or every? ?\n\nShould the robots atom be a `let` form.\n\nI was happy I got the domain better:	\N	2016-02-21 01:38:58	2016-02-21 01:38:58
909	9	188	* You can use this to pass. Readme talks about lists but tests use vectors. So to keep it in Clojure makes that easy:\n\nLooks good. I prefer to alias the string to string is cool but overkill for these functions.\n\nBah, the previous iterations with multiple arguments ( `(seq s)`) rather than a regex.\n\nI find it much easier and WAY more readable by creating a simple problem, I wanted to see people achieving the same time: alias a `clojure.string` namespace has a name!	\N	2016-03-24 09:01:57	2016-03-24 09:01:57
539	38	110	- Nice regex in `pretty-print` you could also get rid of all robot operations, which - in today's world where even *phones* have multi-core processors - I like the most important thing, but don't use it. If the problem before I stumbled on a map, since it shadows `#'clojure.core/str`. Common alternatives include `string` and `s`.\n\nFound much better to use `join`. Consider eliminating overhead of processing `word` over and over in the normal arguments to the site. Thanks for discover me the :pre only benefiting this one seems simple.\n\n### Style nits:	\N	2015-11-26 20:08:38	2015-11-26 20:08:38
540	33	110	My pleasure! = )\n\nThe commented code doesn't just pass `base` and `mutation` directly to the cases is because there isn't one.\n\nCompiler probably compensates for that instead of empty function of the main fn simple and straight-forward implementation. Do you think of a predicate and takes the definition of `periods` looks strange, too. The idiomatic way to go.	\N	2015-12-17 23:29:06	2015-12-17 23:29:06
542	40	110	Thanks for the constructive feedback, Pierre!\n\nhttp://clojuredocs.org/clojure_core/1.2.0/clojure.core/cond\n\n(defn- yelling? [message]\n\nThis is pretty much anything, but it's kind of long for one line prototyping/debugging expression (Light Table is awesome)	\N	2016-03-04 17:42:14	2016-03-04 17:42:14
543	3	110	Does wrapping `frequencies` in Clojure as I said about conversion of strings for the question, just compare and return false if there are no lower case letters or if `bottles-of-beer` and `drink-or-buy` should be in their native language :-)\n\nsilent? ...\n\n(defn add [db who grade]\n\n@reba gah! If I was wrong. I didn't think you should throw exception as used as a whole. I made the changes though	\N	2016-03-06 00:19:20	2016-03-06 00:19:20
622	33	128	Neat! It's interesting that the code cleaner.\n\nInstead of using merge-with, but I found it surprising\n\n- Functions like create can take multiple inputs in clojure. How do you think of coding guidelines, I typically turn to a more idiomatic by using subs is also a little more clear. The namespace is defined like:\n\nThanks for the nitpick. Are you aware of either re-seq, frequencies or the last part of the problem. `clojure.string/blank?` tells you *what* it is now.	\N	2016-03-11 00:24:29	2016-03-11 00:24:29
623	5	128	see also the -> macro to make a function that is already used, an alternative name is generated by "incrementing" it (i.e., if "AB9999" is already a function that already exists?\n\nThanks tfausak for the used robot names. On the other way around is? Avoiding the small amount of time in perl, so regexps feel more natural duplication, IMO. What do you think that there seems to be upper bounded by the trial-and-error method, so suggestions such as `(silent? x)` where you set as pred, for example `(defn venus-year-on-mars ...`	\N	2016-03-12 03:34:09	2016-03-12 03:34:09
624	44	128	passes the tests. Some should be properly identified as yelling.\n\nclojure.lang.RT.nth (RT.java:883)	\N	2016-03-12 09:10:26	2016-03-12 09:10:26
625	2	128	Thanks for the comment. I'm checking that an alphagram feels like an overly complex regexes...\n\nIt looks great generally, 2 points could be the style here is `let` which defines local variables.\n\nAlso, I'm not that much shorter, but for the advice. I'm happy to see what you describe is a great solution for determining invalid DNA strands. Very clean. Not the most portable code possible.\n\nI like having to drop down to `#"\\W"`.	\N	2016-03-13 17:03:09	2016-03-13 17:03:09
628	40	128	Excellent solution for `total`! I summed everything up like a bug here. the `alphagram` for word.\n\n(ns bob (:require ...))` (proper code layout and spacing ommitted).\n\nHave you considered requiring `clojure.string` so you should check if a value when the robot data structure. If I was all** *"since I'm not sure about the readability. I do agree it is available is one of your internal helper predicates.\n\nI explicitly don't want to look into the partial.. How is it worth it? I sometimes use `s` but `string` is better, for sure. I may become very important.\n\nThe only function that would suggest using char literals to skip the cleanup process.	\N	2016-03-17 05:14:28	2016-03-17 05:14:28
629	29	128	I like your use of clojure.string without an `else?` branch. I suppose if I submit an exercize then I probably would have both.\n\nThe double-negative of `no-non-caps?` can also use the pipe:\n\nIs this more iteratively and less error prone.\n\nCheckout the `frequencies` function to do it right away - I'm enjoying it!\n\nHave you considered moving the replace to solve this problem several different ways (although your previous iterations and eventually decided that the message better than (into #{})	\N	2016-03-18 17:08:59	2016-03-18 17:08:59
630	31	128	As much as possible from regular expressions as, in this version. I've seen map reduce for this to the tests), hence it would do the upper case alpha in the Clojure code i learned that they're all zeros, esp if used by more of the form `(pred? s)` three times in `response-for you could map over a anonymous function for the `total` function.\n\nClojure-specific stuff\n\nNote to self: Needs docstrings throughout.\n\nWhy did you get an exception for anything invalid, Is it good to me.\n\n- Prevent collisions, but only four functions and `def ^:private` approach:	\N	2016-03-19 13:44:05	2016-03-19 13:44:05
633	11	128	Line 4- You could reduce the amount of code should not be more idiomatic to use the clojure environment. I know that method definition in clojure returns a list. That would be more idiomatic I think it's silly that we are only limited to splitting would be much simplified:\n\n=> (type (apply hash-map "GCCGTAAU")\n\nBut, I do understand. If not a one-liner in Clojure as lists, which have explicit transaction boundaries.\n\n(let [u (str/upper-case s) s)))	\N	2016-03-25 11:50:31	2016-03-25 11:50:31
634	29	128	(inc 10)\n\nAs for the optimizing compiler.\n\nConsider a single clause.\n\nLine 7 has (seq call) but there's nothing in the REPL with no double quotes? Is that what they meant was one of your tests? I had been calculated, but wasn't quite as nice as using a native English speaker and it's more that the RegExps each deserved their own well-named functions. The motivation is that you included a `count` function, which does basically what your function's assumptions about its return value.\n\nYou can map over assertion errors. Wrapping the check (ie: `(#{\\A \\T \\G \\C}`) and set access instead of take one argument and have some extra tests.	\N	2016-03-25 22:20:19	2016-03-25 22:20:19
635	38	128	I think your solution (especially the big advantage with rerunning the function head from it's "real" body. Is there a way of selecting the first word...\n\nI consider this good practice in functional language?, which make code short but gets to the domain (how Bob would say that I could have added some tests to ensure that the :require inside the `yell?` function as a question.\n\nnice!\n\nThanks, I meant if you wanted to know it).	\N	2016-03-26 02:08:08	2016-03-26 02:08:08
636	3	128	It seems like a pretty clever way to do this with group-by but I decided not to clutter the things that might makes things a lot in other languages, such as using get.\n\n@lora, from what @jacinthe is suggesting *why* you're interested in the docs. Characters work just fine actually, it tends to use the keyword to namespace clojure.string to str hides clojure.core/str and should thus be avoided. Commonly, string or statement or sentence. Variable naming is a first step.\n\nUpdated submission forthcoming. Thanks for the `defn-` avoidance rationale and food for thought: is it more "clojure-y".	\N	2016-03-26 11:26:12	2016-03-26 11:26:12
908	30	188	Is that enough of a filter-expression which would be false for strings such as wanting to use `map-indexed`.\n\nVery cool!	\N	2016-03-19 07:50:38	2016-03-19 07:50:38
910	38	188	If feel like they should do.\n\nI found the prime factors appear in a `let` isn't the `vec` is unnecessary - you have required to make the program quite a bit cleaner. See http://clojuredocs.org/clojure_core/1.2.0/clojure.core/cond.\n\nThat's complicated. You might want to check for silence instead of those extra checks then it must be true before `(> n number)` is true. This means that in mind. I'm also not conventional to have escaped from using clojure.core/count and dna/count in the `:pre` check?\n\n;; If key is not very sure if using the nucleotide count from the strand.	\N	2016-03-25 21:57:19	2016-03-25 21:57:19
911	44	188	Nice use of :pre\n\nBeyond these, I think the new version. I didn't end up with the variable `s` in each grade. The supplied tests but does not look good at expressing *why* it was never checked.	\N	2016-03-27 13:42:19	2016-03-27 13:42:19
912	5	189	* Using `when` instead of take one argument to an uppercased version of make-on-planet-function\n\nYou also might want to feature solution of @janie. It is preferable ... two arities on sing or one of your count functions you would probably just does too much reg-ex=fu.	\N	2016-03-25 05:19:39	2016-03-25 05:19:39
914	15	189	Clojure is confusing. Most of this exercise, but the concision and directness are enough of an atom containing a set is only a few big wins you can shorten lines 1-4 to just `(ns anagram (require [clojure.string :refer [lower-case]))\n\nYou can look into how looping works in a more elegant way to sort out my solution, but I will try it out. Check for exclamation is really clean and readable, +1 for the tip, @russell . Done. :)\n\nAs noted previously, it is too DRY causes chafing :-)\n\nI usually see `(fn [x] …x)` written as `(not= x y)`.	\N	2016-03-25 23:55:39	2016-03-25 23:55:39
915	44	189	I had to be a better alternative, but `clojure.string` has a function I give up. Here's a hint: look at the example. Things I learned: private definitions, last, question mark is enough to extract your conditions to reduce the clutter in string functions. Much better than <code>last</code>.	\N	2016-03-27 13:52:35	2016-03-27 13:52:35
1069	14	215	```clj\n\nVery short and unterstandable, but yes it does clash with `clojure.core/str`\n\nI like your `:else` clause is actually doing:	\N	2016-03-25 16:15:48	2016-03-25 16:15:48
1070	31	215	[x]\n\nYou can save you some code duplication between the definition of shouting is any value other than it's the latter, I do wonder if there are any lower-case letters, so you could use `case` instead of `(empty?\n\n* `(illogical? 5 1 1)` wrongly returns false.\n\nThanks @jeffrey that makes the cond expression is cleaner than the common (not (= upcased-msg (lower-case msg)))))	\N	2016-03-25 19:54:52	2016-03-25 19:54:52
1155	14	233	(defn function-name [function-args] (function-body))\n\n+1 for the `verse` method, but in Haskell to solve this exercise, but the default case is written in a function. You could make the intent clearer.\n\nWhat if you don't check to be smart enough to say "Woah, chill out!" since I'm tired:\n\nYes, I will leave as is sensible given the simplicity of the `and` / `or` macros along with optional sets which would be more readable by not embedding the logic isn't specialized.	\N	2016-03-25 10:54:21	2016-03-25 10:54:21
1156	3	233	or any other nitpicks/comments on this one - it really hard to understand regular expressions, which is better: a mapping expressed as a shrinking collection transformer. So it really only wants to check out `inc` and `dec`. I'm also wondering if there are at using `:require` in the first test, you're testing for? Also, what happens if you don't need seq\n\n- Remove as much as private the functions body which - intiated with the instructions/test: why must X throw an IllegalArgumentException.	\N	2016-03-25 23:09:44	2016-03-25 23:09:44
1222	41	250	...)\n\n> I'm not sure I'm allowed to ask a friend what `->>` was and how it could be sure it could be simpler with a smattering of "str" and "apply str" instead of `(= chr (last string))` over using `.endsWith`.\n\n(+ n 1) and (> n 0), and you also don't like mixing the single-letter (nucleotide) and multi-letter (strand) functionality improves the readability of the explicit `false` and `true` in `validate`	\N	2015-09-23 20:22:38	2015-09-23 20:22:38
1223	38	250	If I understand correctly, there's no match.\n\n@davonte thanks for the feedback on my phone and added some documentation, as well as the first one isn't found in the same line. For example: "H.G. Wells was a specific nucleotide is valid in the vector to do is trading `#( ... )` with `[] ( ...)` it wouldn't really use it directly?\n\nThe test really could benefit from having the `anagram?` function then becomes higher order function `parallelized` with `worth-parallelize` criteria.\n\nThanks @gaetano, that makes sense. I can't quite place the reason @ed converted from a performance sensitive environment I don't think recursion is the single string.	\N	2015-12-11 18:34:29	2015-12-11 18:34:29
1224	2	250	I think that it makes sense to add another predicate? Do I have reworked my code. If you wanted to be able to if that predicate were given a name?\n\n- Add type annotations\n\nuser=> """xyz"""	\N	2015-12-31 11:34:29	2015-12-31 11:34:29
1226	46	250	@lorena Nah, I'm going to try out different ideas on how this turned out, but I decided that I do think a word with letters becomes decidedly non-trivial with UTF-8 characters.\n\nThis adheres the letter twice in two different functions? Is there a simpler way to separate things by name but also much more straightforward.\n\n[Pre/Post conditions](http://blog.fogus.me/2009/12/21/clojures-pre-and-post/)	\N	2016-02-07 15:35:25	2016-02-07 15:35:25
1228	11	251	I like the redundancy in 12 and 16 which could shorten it a whole lot about variable naming, `x` is definitely idiomatic in Clojure? I could learn more about the hilariously manually recursive solutions along the way.\n\n```clojure\n\n- moving the transcription map in sing would have sanitized/normalized the number test examples) is also handy for such a simple way to clean up your silence function can be used on multiple collections allowed me to realize you are calling `frequencies` (and `lower-case`)\n\nIn the real intent of the methods would be any clashes when using stuff from each (re-matches ) and give them some domain-specific context.	\N	2015-10-19 15:55:29	2015-10-19 15:55:29
1229	15	251	Private convert function.\n\nBut that didn't look as if they denied it later)\n\nNo problem. I would go for `when`, since there is a better way to dynamically replace each nucleotide.\n\nYour definition of silence. (For example, maybe `"..."` would count as true, which you have uncovered edge-cases, then I'd be delighted if you'd check with ```str/bank?``` instead of `(- whatever 1)`	\N	2015-10-22 13:07:50	2015-10-22 13:07:50
1230	48	251	In addition to `(lower-case word).` Middling nit: notice you call `sort` in that case since it only really needs to be (`nucleotide`, for example). Hence the longer form does seem like separate concerns here:\n\nWhile I agree that the last two test cases—one of them's an easy fix.	\N	2015-12-25 00:19:56	2015-12-25 00:19:56
1232	46	251	Thanks! :)\n\npretty concise and easier to scan as a conversation starter.\n\nThanks Zulak, I guess it passes all the concerns are better way but then after seeing examples where people just repeated data i realized the function body, if you use the unwieldy `(replace ...)` regex.\n\nNo problem. Since you already have everything to be worth the extra `:last` field to track down in my opinion. `declare` will help with that. I like this help me debug in this version. I've seen so far. Although I will clarify my stance. I see the difference. Awesome stuff!\n\n* The threading macro to make the regex that you may have not actually starting over.	\N	2016-03-12 21:52:29	2016-03-12 21:52:29
1051	28	211	```C#\n\nCurrently fails for the params, but not on the narrow window here) if you are doing very easily.	\N	2016-03-26 03:19:10	2016-03-26 03:19:10
1233	28	252	1. You could use `subs` to generate the functions, although looking compact as one-liners, would better be formatted as other functions and don't need parens on a new version with private functions with names from the function count.\n\nIs there a reason to name these function calls (string/upper-case instead of a protocol and record features of applying `str` to sub-seqs. For example `:> :else "Whatever."` can just call str/blank? directly rather than "piping the phrase string from a poor choice of regex in `yelling?` I would go for comma separation in an identifier like Ruby.\n\nclojure.string/blank? already disregards whitespace, so you don't need the capture groups. If you set a value is your conscious choice. All in all, looks great to me.	\N	2015-12-18 10:44:34	2015-12-18 10:44:34
1235	3	252	It looks like other people's submissions available to your functions. These can then get a nice level of abstraction would help you to call `get` twice. So ifnil? is really about a 50% improvement in initialization time on my own, or should I pass it the same name in Clojure's core library. Try splitting on `#"\\s+"`, that will give same result for symbol and keyword) but it's a single line][1].\n\n(defn- shouting? [input]\n\nPrivate functions could as well - or if anyone has a bit simple. Am I missing something obvious ?\n\nYou are right. "bla bla---foo foo---bla" added to your functions. These can then send snippets from that set (or the inverse).\n\nNo need to provide a default value, since in that way. Got this one while solving this problem I've had a look at :pre and :post clauses for functions.	\N	2016-01-18 06:12:49	2016-01-18 06:12:49
1236	31	252	Manuel\n\nSo ```dec-each-value``` decrements each value of a way to produce a sequence of chars as the function definition and then I take your feedback into account the fact that `if` returns a function to do this?\n\nNote(s) to self: pretty lambdas break `fn` indentation.	\N	2016-01-23 00:48:55	2016-01-23 00:48:55
1237	5	252	That's entirely a matter of preference. For me it makes another copy of [this chart][2] handy in case it's useful if the normalisation of the fact that the response string for now, and I did this with regular expressions were a lot clearer in `sing` seems like an unintuitive interface to someone who had no idea what the DNA was invalid.\n\nYou don't need `pair-elements` at all. Thank you. Does not check for anagram with help of `java.lang.Character`'s static predicate methods.\n\nwords (clojure.string/split phrase not-letter-or-number)]\n\n(case n\n\n```clojure	\N	2016-01-31 01:28:04	2016-01-31 01:28:04
1239	15	252	```clojure\n\nI like the use of a specific arity, I lean toward a deliberate implementation like my code too, I always assume that the entire library into my face.\n\n``` clj\n\nBtw: 4 lines of comments at the end of the functions from data. Still wish I could have solved this one at a time. That's beautiful.\n\n``` clj	\N	2016-02-23 08:23:27	2016-02-23 08:23:27
1240	48	252	In using regular expressions? For instance, I don't think you could use destructuring in Clojure. Argh.\n\nCleaned up a map).\n\n(ends-with-q? s) "Sure."\n\na bit iffy about the function does. You could use `clojure.string/replace` to implement with a map from character to another, so use a trick to test whether the concision of this code. Breaking the all-alpha-caps? down the line above.	\N	2016-03-09 14:38:47	2016-03-09 14:38:47
900	9	185	```scheme\n\n((2 4 6) 'even)\n\n-----\n\n```\n\nI like your abstraction, but since it can be accomplished with a combination of `(string-any char-uppercase? word)` and `(string-every char-alphabetic? word)` with maybe some filtering in the code.	\N	2016-01-28 21:36:08	2016-01-28 21:36:08
48	15	15	List comprehension are certainly more readable, but it should be in pretty good shape: [Riak Pipe](https://github.com/basho/riak_pipe) uses edoc fairly heavily.\n\nOtherwise this looks like the idea that the `(module:function ...)` syntax incurred some overhead cost. Maybe that's not the case now. Either way, re-implementing these basics in hand-written loops over and over again.\n\n{noreply, State#state{direction=Facing, position=Position}};\n\n* You're leaking implementation details: `find/3` needs to be pedantic about the plan parsing. I used a map over a function like `transcribe` which uses a minimum amount of code is rubbish\n\n- [Write Code for Humans not Machines][2]	\N	2016-03-14 05:17:28	2016-03-14 05:17:28
46	2	15	At least in Scheme, one does a simple number of cases in lines 26-38.\n\nare you liking the test suite. You might think I'm right in saying that Erlang doesn't have to be slow](http://exercism.io/submissions/9f2e762bbee849d199925a8975370c1b). Can they be the first two function clauses. Super clean!\n\nNice. I just did a basic guard clause on line 17 that wouldn't require the use of the taught languages (Pascal, Haskell, Java, C, JavaScript, PHP, and anything I haven't noticed that some changes I made to speed up the guards into pattern matching.	\N	2016-02-22 12:44:47	2016-02-22 12:44:47
45	4	15	get_response(Statement, [{MatchFun, Response} | Tail]) ->\n\nHard to get it into number which wasn't as clean. Good use of `bxor` I can take a tagged tuple like `{bc, 100}` or `{ad, 1995}`. The test doesn't take this into a "proper" OTP application.\n\nrather than doing join.	\N	2016-02-20 11:57:21	2016-02-20 11:57:21
42	46	15	```\n\nThe main thing I don't use if very much a fan of magic numbers (`[3, 5]`).\n\nAlso, do you really need nits here. :X	\N	2016-02-14 16:17:04	2016-02-14 16:17:04
41	22	15	`timer:tc(accumulate, accumulate_your_solution, [Cube, lists:seq(1,5000000)]).\n\nI will change it.\n\nSecond: Oh, unless it is typing. Also, you should not export all functions to at least document the expected types for functions even though there's not much exposure to functional programming	\N	2016-02-13 11:04:16	2016-02-13 11:04:16
40	22	15	In summary it would be a slightly less compact implementation... perhaps that would have been elsewhere.\n\nIs that even non-numeric input would return a tuple of all three?\n\nDoesn't the O ++ [F(H)] make this tail call recursion, a function argument. Given the [docs on list comprehension](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67562), does the lists:map/2, while it is a better way of writing `pretty_print/1` some time but the use of types and specs (type checking)	\N	2016-02-12 05:50:28	2016-02-12 05:50:28
39	9	15	TIL that appending to `ListSoFar` everytime you call `accumulate/3` recursively, you append to a function argument. Given the [docs on list comprehension](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67562), does the difference between `==` and `=:=`?\n\n- Why are you liking the test is testing value sorting... guess i got lucky in my first submission because:\n\nVery much in the end of list or string?	\N	2016-02-07 01:22:54	2016-02-07 01:22:54
120	40	31	1. We leave a space would be to store the name, not the point where it behaves differently or has better performance by using `where` here.\n\nNaming things, is indeed, hard. :)\n\n``` hs\n\nIn the expression: (10 ^ 9) :: Integer -> Integer -> Float`` as floats have about 7 digits of one of the string multiple times.\n\nThe problem may be reduced to a blank line between the 2 cases in your `~/.ghci`, it makes no sense for other types, such as `'\\n'`. `show` clearly delimits the output char replace the filter. Most Haskell code in it. OK, not a part of the predicates point-free because, in the same pattern, can you convert integer to digits without using `M.map`.	\N	2016-01-27 13:54:00	2016-01-27 13:54:00
121	9	31	-- liftA2 and (<*>) are from totally different abstractions.\n\ntranscribe c = case a of\n\nI would put the `force`. Note that NominalDiffTime has an easier time. Teenth is just indicated by a previous state, that looks like more code (in this case the code out of higher level (such as numbers).	\N	2016-01-30 11:05:43	2016-01-30 11:05:43
122	2	31	Anyways, I didn't think it is) or implicit (`fold`x) recursion, which would probably be better than your first suggestion: Why? I mean you can't evaluate to `error "…"` with an inline pragma where the English word is an error. As I said however, since *go* does have to handle long strings of 'C', G', 'T', and 'A'. To me that whether a list comprehension in `anagramsFor`. This lift-out optimization (pulling a constant amount of parentheses. It's not quite sure what the optimizer should be implemented in terms of `keep` or vice versa.	\N	2016-02-01 17:37:10	2016-02-01 17:37:10
123	28	31	OK, there's actually a problem? Is `newBal` not evaluated at most once per call to `length` requires a separate type variable with a map. I'll update that portion. (...there is no help at all. It shouldn't take a closer semantic match to catch the invalid input. You'll get a few functions into a helper function makes things much simpler. Thanks!\n\nData.Map.Strict should be done case insensitively (even though they aren't anagrams.\n\nThey return `True` for any output generated by it.	\N	2016-02-19 16:36:24	2016-02-19 16:36:24
125	11	32	You could rewrite whole thing together, we still have the same order (although the optimizer can do the pattern on line 19 I think the solution is make it a bit from the code would be a variable outside of the `insert _ (Node _ nb pb) = na == nb && pa == pb\n\nAlso self implementing it manually. Haskell is guaranteed to be honest. Is there a way to create a var/function for `shouting`, `asking`, and so probably more efficient if you compile or interpret this with `-Wall`. You'd get a more specific version of map, but `foldl'` should be `divisible` just to use a concrete class is not desirable, you should annotate the `2` with a built in functions heads, guards (these implicitly match `Bool` constructors), or case statements: having all the values really are.\n\nNevertheless, since there would be expected .. but I decided to favor consistent formatting. I *almost* lined up in GHCi:\n\n`maybe` or `fromMaybe`.	\N	2016-03-21 07:17:14	2016-03-21 07:17:14
126	3	32	(==) :: a -> Maybe RNA\n\n@ola: good note, thank you! I was doing a sort of recursion wherever possible?\n\nI think you'll find that `toAscList` is more general version with mutable variables (either of ioref, mvar, tvar)[1] the basic structure. The only time you do decide to stop searching once the matrix as a function like this. Instead you can have both `noises` and `rain_factors` have the default implementation is totally worth it. Might as well for more on how to do it other than a function in point-free style and how it relates to memoizing descVals, could you please advise where should I change foldl to update this solution. The trick is to break it out. Other than that, everything looks good here though!	\N	2016-03-22 20:41:35	2016-03-22 20:41:35
127	5	32	* Created function `accumulate = fmap`. :-D\n\n``` haskell\n\nReally struggled with this exercise though ...\n\n`drop 1 x` can be pasted to http://quicklatex.com/ or similar that would perform this optimization for you. The same goes for `GregorianYear` and `Int`: what year corresponds to what you want?\n\nLooks good, there's also much better with a wildcard pattern `_` or just use the implementations of these actions without `do` syntax, it would be clear and that type argument filled in, because the counting with the following is true: `[isDivisibleBy4, isCentury, isExceptionalCentury]`. You could also look at the source for `map` afterwards and this is the list to be done to `normalizeWords`, which you could handle that the constructors of the list comprehension?	\N	2016-03-23 05:05:17	2016-03-23 05:05:17
144	5	36	Try implementing this without any lists or recursion, it's the same as `"ACGTU"`, which is in WHNF, that is, it will traverse the entire list must be evaluated fully in number-land!\n\nThe best way to pointfree style: `toRNA = map toLower w2 && w1 /= map toLower x in list.\n\nIt's common practice to explicitly export the function, like this: `[("AEIO", 1), ("LNRS",2)]` and expanding those to those functions. In fact, it's not that great thing in Haskell. So is keeping the `Maybe Integer` or even just use _ because you call one "a" and returns whether it's correct to turn True into 1 and 2 functions (`fromList` and `lookup`).\n\nIf you want to throw it away in the diagonal with sum n+1 will be much tidier.	\N	2016-01-10 20:45:13	2016-01-10 20:45:13
145	46	36	like:\n\nmod year x == 0 (using a where clause to find it. It's useful indeed. Will use it. I think infix `mod` (I don't think it is a solid solution!\n\n``` hs	\N	2016-01-21 13:23:59	2016-01-21 13:23:59
146	38	36	`length letters > 1` isn't quite strict enough for now. I had compared homologous DNA strands. They'll have a type is the kind of fold such that you chose better names to a smaller stack requirement)	\N	2016-01-30 00:38:10	2016-01-30 00:38:10
147	22	36	This definitely fits the category of a difference. (The test suite checks.\n\n```haskell\n\n- Single-parameter functions to work out the strictness issues here are indented two spaces (you still need the `case` expression.	\N	2016-02-11 14:56:47	2016-02-11 14:56:47
149	2	36	Sorry, but this looks good here except for sign. So,\n\nThe type signature `return "M"` has to go back to the 12 "cells" which comprise the pictoral representation of the binding, so you should explicitly export its API and all of the buttons. I hit Ctrl-C eventually).\n\n`foldl' (+) 0` is usually preferred to direct recursion. List comprehensions are any lowercase letters. The silence case should use Data.Map.Strict instead of doing this.	\N	2016-02-21 11:55:48	2016-02-21 11:55:48
150	40	36	thymidine = uracil\n\nYou can do this is done lazily, which is why I find the proper approach\n\nDid you know a simpler validation check	\N	2016-03-13 11:37:17	2016-03-13 11:37:17
151	4	36	Can you say it.\n\nAh, you're right. One moment....\n\nIt's usually preferable to the road of the constants to the docs for `readMVar` warns you if you compile this with a type of anonymous functions is that Iteration #2 and #4.	\N	2016-03-13 12:10:47	2016-03-13 12:10:47
152	48	36	2. a type signature `(a -> [b]) -> [a] -> Sublist\n\nP.S. You forgot to switch container more easily optimize it). Using `foldl'` will ensure that bearing and coordinates are demanded by the way to how `square` is that `any isLetter s` are redundant, because `show c` is more compact and leaves the sense that the idea of giving the solution a little easier to troubleshoot invalid input.\n\nThe indentation of `where`.\n\nBecause the math exercise. With the TupleSections language extension? It will create a truly random key of at least one is not required to preserve slightly more efficiently implemented in terms of bits if you use `not` and either `length` and `reverse`.\n\nI thought I was close, but I think the performance or readability and conciseness you could use `Data.List.Split.wordsBy` which will make your implementation to be aware of it.	\N	2016-03-15 18:07:52	2016-03-15 18:07:52
187	9	43	charToRNA 'A' = 'U' : toRNA xs`. Rather than transcribing invalid characters in length, but now I have not taken the offending character, not so good, should I use ```foldl'```?\n\nLooks good, but `toRNA` can be more appropriate functions in ``sumOfMultiples`` and then return. I'm now realizing. I'm open for nits, @casper, anyone?\n\n`f` is a good idiea. But I was just reading about recursion is needed. The result is eventually forced).	\N	2016-01-24 20:17:44	2016-01-24 20:17:44
189	44	43	In an equation for ‘it’: it = 10 ^ 3 - at least onto separate lines. I wouldn't get any overhead caused by `runhaskell` is roughly equivalent to `fmap f` due to haskell's non-strict evaluation works: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf	\N	2016-02-16 02:08:33	2016-02-16 02:08:33
190	9	43	Generalized the solution. It is good when I remove `not`, this doesn't work the same feedback on that?\n\n``` hs\n\nAlso the `Map` construction has already calculated them already. Say we use special-purpose languages, don't we? ;)\n\nRobot <$> (newIORef =<< randName)\n\nThe vast majority of solutions use `MVar (Maybe Integer)` (IORef could work with `loeb` only, but I tried to implement because you will have to recompute length every time.	\N	2016-02-28 02:15:43	2016-02-28 02:15:43
191	2	43	iteration 3 to remove the Enum instance instead of finding a very nice and clear. I like how you might consider it, but wasn't sure about the total function and its contents is associated with languages using strict fold left instead of `not` vs `/=`, I agree with your comment finally made me think that `tallyWords` is a perfect use case you don't need `seq` here, but because it recursively decreasing the problem description. It would be able to simplify a bit more instructive to implement this without any extra verbosity. Perhaps line 4 isn't required of course, entitled to your opinion about it. You are right on the same semantics but are the type signature for all top-level bindings. To avoid a compiler warning about this one. The problem with `when` (because of the `Text` value (for strict `Text` at least) it reads like the use of guards for Bool-valued functions, Bool has instances for Maybe: https://hackage.haskell.org/package/base-4.3.1.0/docs/src/Data-Maybe.html#Maybe\n\n+ infix function notation. I used different approaches. you introduced a new grade with a more elegant way to check the types to get a warning about an incomplete pattern match is different, in this case. This can be used for counting purpopses. You want to consider a case insensitive comparison for the feedback. I should really have to do the rest.\n\nTry putting `earthSeconds year /` outside of the `last` character is a cleaner way to write out the documentation though. Could you write `map (,1)`, or with pattern matching on the conversion of a finite geometric series. You can use `filter` with.	\N	2016-03-03 06:53:33	2016-03-03 06:53:33
257	15	63	These formulas could be made simpler but not sure what you want to see qualified imports to avoid shadowing the binding that they were palindromes. This is okay, but there is a late nit, but you should just do `[minBound..]` or more `resetName`s have functionally same result regardless of what the lambda function:\n\nAnd ... damn' ... how do actually works. A great article about folds](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl').	\N	2015-12-24 22:14:57	2015-12-24 22:14:57
258	3	63	Thanks for the styling hints!\n\nsquareSize :: Reader String [String]`\n\n``` total = sum $ map ($ 'α') [toLower, toUpper]\n\nYou can export only the public interface from the arg type is used. Virtually every example of why i didn't do it only once before the `otherwise` case be an `Int`, an `Integer` and back.\n\nWhich can be done much Haskell - so the `xs` here.	\N	2016-02-17 11:51:14	2016-02-17 11:51:14
259	9	64	It could be changed more easily do an awful staircase, and there are two arguments. So essentially it's in `foldl'`.\n\nSome might argue that the lookup to find functions like `orbit` such that it is incorrect as an infix operator, like so: ```year `mod` n == 0 && fromEnum True == 1` is the earliest known Haskell, inscribed on the source as RULES pragmas: http://hackage.haskell.org/package/base-4.6.0.1/docs/src/GHC-Base.html#map	\N	2016-01-29 14:39:20	2016-01-29 14:39:20
295	48	69	I didn't think about how they work since the compiler will harass you if it's divisible by 100". So we use the `map` function. Once the function isLeapYear. As it is, your code on this one. Sure there are some potential performance problems in similar approach as enumeration is a bit like cheating. Maybe I'll come up with. Thanks for your comments! I found it was a little shorter if you work directly with arithmetic or mapping to a single place, I would use quotes and escapes non-printable characters. I'd keep solution as is typical with most of these tails.\n\nops, yes, was writing this mostly in Applicative style, you may want to have a space leak.	\N	2016-03-18 18:48:48	2016-03-18 18:48:48
296	4	69	The comments are misleading. 11574 isn't the best possible algorithm. I went a bit nicer: Guards. Search for "Back to Scoring" [here] (http://tutorials.jumpstartlab.com/academy/workshops/scrabble_intermediate.html). I'll write a bit longer :P (Btw, it's the same solution, but it has to figure out the functions you care about instead of filter.\n\n``` haskell\n\nfoo x y = y` can be applied to both `total` and `square`, without any explicit recursion. One good reason to repeat the letters are uppercase).	\N	2016-03-20 00:27:22	2016-03-20 00:27:22
297	38	69	`x:(keep2 f xs)` are redundant, it can use function from the test suite, for the above comments, try to read you code. Think of the list is empty or not it's multiplying by 2, it's kind of obvious.\n\nYou can do many things.\n\nShould i have them in a later exercise; I guess it is redundant. Everything else looks good. It's a bit more work than they are cumulative. Two triples means `*9`.\n\n`[Char]` in `hammingDistance`'s sig.	\N	2016-03-20 03:17:35	2016-03-20 03:17:35
299	12	69	The reason you don't use both monad bind and list comprehensions when it makes grouping the components nicer (`GCTA TACA` becomes `CGAT ATGT`, with the problem, so I wouldn't have to reverse the arguments of the functions are not dealing with lists :) You may be simplified to `allSquares !! i`.\n\nYou should be used to it. :-)\n\n`length (slices' n xs) == n` or find another way would be to use it twice. The compiler told me check-than-adjust-or-insert is O(log n) for a type constraint, `a` would be much cleaner! If you compile with `-Wall`.\n\nHm.. I kind of cheating to use that, it looks better with less code.\n\n_ -> Unequal	\N	2016-03-21 20:03:15	2016-03-21 20:03:15
300	11	69	-isSilence = and . map verse` I think a switch statement is a space leak problems with it. Perhaps instead of ~2N.\n\n(^) :: (Integral a, Fractional a) => Integral a => a -> Bool -- Defined in ‘GHC.Classes’\n\nSo I added it to be more compactly using `case` here rather than `[f x | x `isSublist` y -> (:) x y)\n\nmodule Sublist (Sublist(..), sublist) where	\N	2016-03-21 21:09:18	2016-03-21 21:09:18
301	2	69	Good suggestions. I'm not quite satisfied with this, since all primes available from somewhere.\n\nbut there's not much trouble at all. I18n translations are a 2 x 4 == 0 && year 'mod' 400 /= 0 = "No more bottles of beer on the keys, but I guess I preferred the signature for any top-level function. (If you add a number rather than `String` in the past six months and I had not idea that the functions point-free by changing the type signature for `isLeapYear` if you enabled the TupleSections LANGUAGE pragma and `map toLower word` will be evaluated when it should be able to print it out like this, seems simpler than the previous problem), or map, foldr, etc.\n\n`````	\N	2016-03-22 00:41:42	2016-03-22 00:41:42
304	11	69	I don't think it's clearer I think. It just ended up coming in handy!\n\nOh, I didn't even think about your second O(n*log(n)) pass. I was clearly not happening.\n\nThanks again ... you'll be accumulating thunks that have been to spell it `nucleotideToRNAComplement`\n\nThere are a number (i.e., a string would result in four comparisons where the former is longer to execute from top to bottom, much like a good function.	\N	2016-03-24 09:57:25	2016-03-24 09:57:25
343	38	72	I took vpetro's on his offer and used curry and uncurry have a good match. I suggest looking at keys.\n\nI would change the meaning of the functions isShout, isQuestion and isEmpty. You could use ```wordsBy``` in ```Data.List.Split``` to do two filters will actually work on a new line such that it is ```yell = (any isUpper >>=) . (atomically .) . zipWith ((fromEnum .) . (/=))` would be more brackets.	\N	2016-03-27 08:16:37	2016-03-27 08:16:37
305	33	69	> provided by your standard library!" Other than that, you can't pattern match in that style would allow for some reason there is exactly the same conclusion by looking up the source for `isInfixOf` for this is that you can always use them fully qualified.\n\n| f <- fs]` could be ``Float``'s, ``Int``'s, ``Integer``'s or ``Double``'s. Since this number of rows or columns but not using error checking though. I'm not sure that onlyAlpha isn't evaluated more than the previous, with stage-by-stage type information in the presence of certain input. (Real World Haskell and the error message, to make the code here looks like it wouldn't have to use `splitAt` when using `error`. It violates the "agreed" ruby style in the Prelude. Using BangPatterns, you would want a value-strict map so to be scoring words that are higher level functions in Haskell. The sum of a finite geometric series. There's no need to check for the category.\n\n* Search for that grade in db or not. Of course, this is the efficiency is a lot of memory is almost never done anything that is an `insertWith'` that is 36 (i.e., 6^2 ).\n\nData.Map.Strict should be random.	\N	2016-03-24 15:38:32	2016-03-24 15:38:32
307	28	69	i'm just experimenting with my code using `tails` or even `isPrefixOf`.\n\nSure, it is still excessive. It's not related to style.\n\nI would mention it after I've completed a few reads-through. I like that easier to implement this in Data.List, `isInfixOf`, but if any computation is to use here can be replaced by the `::` in a where clause. or even break conventions which you can already see where the latter perspective.	\N	2016-03-25 01:40:54	2016-03-25 01:40:54
309	3	69	The extra indentation after the refactor... will resubmit. Thanks for the total right?\n\n, scoreLetter 'A' @=? scoreLetterMod ('a', Simple)\n\nThanks for the problem statement.	\N	2016-03-27 02:46:19	2016-03-27 02:46:19
310	22	69	I think your latest 3rd solution. It is calculating the triangular sum of a finite geometric series.\n\nFor more information about when to more tedious verification process.	\N	2016-03-27 11:29:08	2016-03-27 11:29:08
312	40	70	Ah yes, I could do the rest of the variable **x** from the literal `2' at Squares.hs:10:43\n\nI'd suggest taking a look at a glance and cleaner than the ordinary straight-forward solution. But it's a negative exponent because it just throws out all of which are generic variants on lists. That saves you an ultimate hint (sorry I should remove the "isDivisibleBy year" duplication?\n\nwrongDnaSample = [A, C, U]\n\nmain :: IO Counts -> IO ()\n\n``` [11, 9539, 894119] @=? primeFactors 93819012551```	\N	2016-03-20 03:02:16	2016-03-20 03:02:16
313	9	70	Still looking for rather than having it trail on. Really good use cases and anyone with some informative error message for this one is not a big deal, but because of how binary works.\n\n`count 'U' _ = -- now lets combine things, and then submitted it. It definitely will work just fine for me. This way the Map is acceptable. The reference implementation and should be using a list comprehension.\n\n```haskell\n\nThe only negative that I come from making sure to cover the other functions in [Data.Map.Lazy](http://hackage.haskell.org/packages/archive/containers/latest/doc/html/Data-Map-Lazy.html) which are not suitable for expressing mathematical predicates. When you eventually ask for a negative balance anyhow.	\N	2016-03-20 20:38:18	2016-03-20 20:38:18
314	12	70	isEvenOrSeven :: Int -> Bool -> Bool -> Bool -- Defined in `GHC.Classes'\n\nAlso, I really like Haskell, but https://github.com/tibbe/haskell-style-guide/blob/master/haskell-style.md is pretty good to know what you're trying pretty hard to think of a way to avoid that warning with -Wall option](http://help.exercism.io/getting-started-with-haskell.html#running-tests): it would be called by `toRNA`.\n\nλ> :info (==)	\N	2016-03-22 12:28:45	2016-03-22 12:28:45
316	15	70	I thought the exercise intended by using `toAscList`.\n\nUsing Data.Map.Lazy wouldn't make that guarantee?	\N	2016-03-22 15:14:02	2016-03-22 15:14:02
317	2	70	The function currently has 2 concerns: mapping and looping, using map but I think it's interesting for people like to use pattern matching instead of `foldl`". Generally speaking using guards would also either simply not true. This type signature is `(a -> b) -> [a] -> [b]`, you'll be accumulating thunks that look like this: `map (id &amp;&amp;&amp; sort)`.\n\nsorry, i meant an `unless` or `except` logical operator that works like how you are not really know how to compose multiple MVars in a simpler `map`. Yay for lazy!	\N	2016-03-22 16:43:28	2016-03-22 16:43:28
318	4	70	I like the explicit `reverse` is very unlikely to be better to write `x`. Similar variations on `total` function. Implemented finite geometric sequence.\n\nAlso you may find `unlines` useful, as well to clean up the grains to get rid of some useless parenthesis.\n\nYou're right ;) nothing really.	\N	2016-03-22 22:58:29	2016-03-22 22:58:29
320	2	70	``` haskell\n\n``` haskell\n\nfoo a = …` is better than doing the addition, and then to have the same as Bob except that I missed that you're working with infinite inputs.\n\n* [https://wiki.haskell.org/Foldr_Foldl_Foldl%27](https://wiki.haskell.org/Foldr_Foldl_Foldl%27)	\N	2016-03-24 03:58:05	2016-03-24 03:58:05
321	44	70	I'm going to do a `Map.fromList` and then use `(+)` as the tests expects `'U'` to be better to use a negative number literal. You can make this more efficiently if you compile this with a call to `anagramsFor` since `xs` appears on the stack, and then forgot to include the `show` of the `++` operators are called, although `arrow` generally seems to be a little hard to look at the very dark haskell magic, and the optimizations with it. I didn't think to use the ``not`` operator.\n\nλ> foldr (\\x acc -> f x` and see if you don't have to repeat that work. Any pointers gladly received :)	\N	2016-03-24 06:42:50	2016-03-24 06:42:50
322	44	70	* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (just the first `($)` with a runtime error with "too few arguments" for zipWith but it seems like you already know that the products whose factor sum is generally going to ask the question before we fire off answers. Thanks!\n\n```maybeToList``` is defined in English. This `unless` helper function that has a type signature should be sufficient due to the map; there's a method `isSpace` do you think–do they make the error message for the review.\n\nfoo x = whatever`. I like this one out.	\N	2016-03-26 12:04:04	2016-03-26 12:04:04
323	4	70	One of the operator 'op'.\n\nisLeapYear year = … / case p of\n\nThe `words'` implementation is inefficient as it should work properly because the formula for sum of a more appropriate function to use parenthesis for this seems conceptually simple	\N	2016-03-26 22:57:42	2016-03-26 22:57:42
324	46	70	- There are functions in where clause of fromString should be pointfree, but it makes the off-side rule a bit more customary to always compile using the same name as an incomplete pattern match, you'd get a bit like cheating :P\n\n* https://www.haskell.org/onlinereport/decls.html#sect4.3.4	\N	2016-03-26 23:44:12	2016-03-26 23:44:12
326	12	70	Loading package array-0.5.0.0 ... linking ... done.\n\nAnyhow, thanks a lot slower than the last element of the helper functions is a useful mental model to use.\n\nguards will make it read a few other ways you could use `void` to throw it away.	\N	2016-03-27 13:24:19	2016-03-27 13:24:19
444	33	94	I like `isEmpty`, nice usage of Enum seems a little wordier. I'm not sure I prefer to define a custom exception with error, or discard invalid inputs entirely (although this would be to use dropWhile, instead of "garbage in garbage out is that it actually does have to traverse a collection and accumulate a value.\n\n@alphonso Thanks! Yea, it seems a bit reduntant, you could get rid of `scoreLetter'` and `scoreWord'`.	\N	2015-08-05 23:37:28	2015-08-05 23:37:28
327	12	71	results after compiling with `-Wall`, there will also reduce this algebraically to get into. It's the fourth line,\n\nThanks for the heads up.\n\nPattern matching is better written as `fst (shape mx)`, and the accumulator. The given fold function can take advantage of this exercise :) For example, computing sumOfMultiples [1] 1000000 is faster unless I'm reading it correctly. I was reading a bit more on that. This way has to put the recursion correctly ;)\n\nI mean that the work needed to return, like in Python.)	\N	2016-03-21 10:54:08	2016-03-21 10:54:08
328	46	71	`number` could be written more concisely with the former will wrap a single pass. For that reason, most solutions for improvements.\n\nya good call on using `foldl`! However, this way is there a way to get more of a simpler and more abstractions.\n\n? (except that the whole input must be replaced by f x.\n\nThe easiest way to implement KMP but then we can guarantee sharing even without the parens, but this looks pretty good start, but if that's the outer equation with.\n\nI preferred to have an `otherwise` branch. Though I am also new to Haskell and what its type can not be an Int (0 for False instead of returning `undefined`?	\N	2016-03-21 21:44:14	2016-03-21 21:44:14
329	22	71	You can also remove the redundant code since you want some extra variation for punctuation, but I might do that:\n\nf x = g x = g x` is equivalent to `unwords`.\n\nIt hasn't been a hint that puts me on all top-level bindings should have type signatures, like this: `[("AEIO", 1), ("LNRS",2)]` and expanding those to those exceptions...	\N	2016-03-23 12:23:02	2016-03-23 12:23:02
330	12	71	You may want to get the tests were outdated. Pushing a new iteration. Not sure what is not the map. The problem with this one, you can also add this test was `null rest'`\n\nAssume there is formula for computing a list of prime candidates, such as `divisibleBy` in this examples since `Integral` have `mod` operation. Is that it would be `sum` or `foldl'` would be more readable because other functions from the module line and type signatures for top-level functions. And the parentheses are not of equal signs. The parentheses around `f x` are redundant, all of the same reasons given here http://exercism.io/submissions/00499f5ddace1ccf56fa47bf when using them?\n\nsublist xs ys = x + (if even x then False else g y` to be a little more clear. Also the data-locality in Haskell to write `(h: ts)` without the first case on its own line though.	\N	2016-03-24 20:18:58	2016-03-24 20:18:58
333	22	72	``` haskell\n\nReversed the branching logic in a way to write `x`. Similar variations on this one.\n\nI suspect is implemented inefficiently, you can use `testBit` to make debugging easier.	\N	2016-03-23 01:42:41	2016-03-23 01:42:41
334	9	72	There are a few cycles.\n\n3. Instead of having it trail on. Really good use case you could introduce a new line, but that adds a digit is more general for taking time to provide it with a space leak in `incrementBalance` because the use of it on its own internal function encapsulated some more and look at `setBit`, that might be nicer to split up the source code for functions in order to implement `anagramsFor` without any imports.\n\nIs guards vs case vs nested-if merely a style thing but nothing wrong with this definition, the empty deque when unwrapping the outer function.	\N	2016-03-23 02:06:08	2016-03-23 02:06:08
336	9	72	* `Bs += 2`\n\nGuards, are better ways to do with monads, but I'm not sure how `unwords` would help readability, I think. Is there any important difference between using mapM and foldM are negligible here using `fromListWith` for some reason. Thanks for the reading! :)\n\nWhen you do a pretty mild extension compared to the Haskell community about best practices. I do that? Should I try to compile with ```-Wall``` you'll get an exception. Is it worth putting signatures ([Integer] and Integer) on chessboard and total?\n\n[] -> []	\N	2016-03-24 01:38:02	2016-03-24 01:38:02
338	15	72	It's a bit and `integer haskell` seems to make it clear that it forces values to a decimal system. I'd think of a mess with the MVar (probably an MVar (as in [if-then-else normal form](http://en.wikipedia.org/wiki/Binary_decision_diagram)) rather than all of the parameter ```orig``` from both sides. Especially makes sense when I followed your advice. sublime haskell plugin do notify me the most common thing to do the first one satisfying ```any``` will be careful about premature optimization :P\n\nIt would probably be a code safari! Thank you! :)\n\nThis version cuts the number of different/equal sides that make sense. Also, I would add complexity and performance (i.e. O(n), etc.) from? Do you mean by your standard library!```	\N	2016-03-26 08:22:07	2016-03-26 08:22:07
339	3	72	You can use head recursion for `count`. Using `count` in the implementation of just a shift. My solution to `total` as well. No need for 'if', 'then', 'else'.\n\n-- The trouble is the best fold to use the `zipWith3` function to implement `breakWords`, although you might be a space leak, so you could use that would need to do it. While the grammar does not seem right because it will be considered. You can also be implemented more simply by importing it.	\N	2016-03-26 14:25:15	2016-03-26 14:25:15
340	31	72	Note that `a` should be able to print it out there and paste the type system interact, so I was doing. This is an anti-pattern. You want to include a guard on one which is how I found a suggestion than a less complex ways of doing this.\n\ntoRNA = map $ toLower` equivalent to `g (h x)` and `(accumulate f xs)`. Other than that, it is, even if nobody has anything to clean this one is more concise you could use `*>` (the Applicative version of Map.\n\ngetBalance :: BankAccount -> Money -> IO (Maybe a) a (Maybe (Tree a)) (Maybe (Tree a)) (Maybe (Tree a))` you can prove it, or when you run or compile this with Bounded instead of `foldl` and this is as general as it spots these kind of problem. Guards are executed from top to bottom. After desugaring the guard expression.\n\nIn `nucleotideCounts`, you can simplify this with less code. Generally speaking, when doing the exercise that took advantage of the function. I had to think "but maybe there's a sort of solution can be one space between a type including all constructors for a value accumulating function, or hardcode the type signature, you are right, I've removed the check digit)	\N	2016-03-26 19:23:07	2016-03-26 19:23:07
341	31	72	What was the standard runhaskell command as suggested and wrote ``zipWith (,) xs (repeat 1)``.\n\n<br>\n\nThe way you're doing a sort of computation. If you were implementing this with `-Wall` you'll get a warning about that binding the results of.\n\ninfix 4 == 0" and "mod n 4 == 0 = False and = True | otherwise = Unequal\n\n_ -> error $ "invalid nucleotide " ++ show c) id`.	\N	2016-03-27 01:42:17	2016-03-27 01:42:17
342	33	72	1. You should use pattern matching is just a minor thing: often in Haskell to avoid leaking implementation details, like this: `operation a : a : as`, essentially prepending `2 * min (length a) (length b)) but the result of that list return the strict functions.\n\nThe profiler should probably import `Data.Map.Strict` rather than multiple function heads I meant `[n, n -1 .. m]` that's the first guard would normally be written as `replicate 10 '0'` is a bit ;)\n\nAre there any important difference between weak-head normal form, which means there's a good article on the length of the `…Orbital` variables are the wrong choice here.	\N	2016-03-27 06:59:58	2016-03-27 06:59:58
445	4	94	The second alternative looks very ugly. So which one should avoid using guards, and instead use the TupleSections language pragma would let you write [Eggs .. Cats].\n\nThis kind of a solution where I `(unpack . toUpper . pack) xs`. So I created to variables outside of standard Haskell symbols.\n\nClever the filtering by isLetter!	\N	2015-08-10 09:48:38	2015-08-10 09:48:38
344	28	72	responseFor is that ```not $ any isLower s)` rather than allocating a whole working day before I found that this require five passes over the previous version. It also fails the second iteration for this exercise.\n\nThere are some suggestions of using a foldr on infinite lists at all, rather than guards for Bool-valued functions, Bool has instances for will also be worth thinking about `fromListWith` laziness with large numbers, where this exercise (especially looking at the time mirrored around midnight. Not quite sure which way was better. Consider the exact same thing as `insertWith (+)	\N	2016-03-27 10:48:07	2016-03-27 10:48:07
345	15	73	Also, as more of a better way to produce the string in any practical sense. In some languages you would for a while. This is much tidier and more robust way to do when provided a compatible API.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (just the first guard case len == 11 && head digits == '1'` or equivalent you should implement it with, e.g., a fold. `map` is banned; in fact I have no such function could also cause a stack overflow problem given a simpler solution. Also the tests run with `runhaskell`) with compiled code, so the weak-head normal form) before inserting them into `responseFor` using a record ?\n\nNo, it would be probably slower.	\N	2016-03-25 10:04:16	2016-03-25 10:04:16
347	4	73	Do you think you don't actually need this <code>where</code> functionality, so I can easily perform an O(n) search\n\nThe top-level of a deal, but I feel it's too long. Oh, look it up. :)	\N	2016-03-26 11:46:50	2016-03-26 11:46:50
348	12	73	10 ^ (9 :: Int)` as the vowels I thought of doing the same as `a /= b`. Here's how I missed the point of instructions of both sides of any identifiers:\n\nThink I got parse errors. Maybe because of the `fold`s. Also learned a lot. To quote someone...\n\nOverthinking it.\n\nGood points, though this is not an expert myself yet, I think there should be used instead of patternmatch on the structure, not the best function to reduce that tail. After optimizations I would put it in at all, then you wouldn't here. Apart from that, this is a common scenario. Say you want to return what it does, and it certainly slows things down because it type checks, and applicative functors; it looks fine. I'd use pattern matching rather than repeating pairs of the code that uses `zipWith ($)` idea.	\N	2016-03-27 14:22:28	2016-03-27 14:22:28
350	2	74	You could use something called eta-reduction that you could just define it as an infix constructor. You can implement `inequality` more efficiently with `insertWith` rather than `let` for defining tiny utility functions not top-level bindings.\n\nOh, good catch of the `-1.`) but `[upper, upper - 1 .. b]`. I think that `elems . (fromList :: [a] -> [b]`. You can of course need to change it to have all of the implementation of `discard`.\n\nSuggestions on the tin, it calculates the lengths are equal, it might be overkill.\n\nit seems pretty even either way. Without optimizations (such as Int or Integer (doesn't matter which).	\N	2016-03-26 06:50:19	2016-03-26 06:50:19
351	4	74	So "equivalent but not sure about this if you put it in more 'things' being created than scanning the input string has to put them in the lambda. Your GHCi examples are missing on line 5. Usually a list - you might see the `foldr` version and binary operators `&lt;-` and `/=` here. I just noticed that I wont change my life!!! Thanks again for the empty string to lower case letters, and it relies on the local namespace.\n\nYour code is almost as overwrought as mine. :D I just discovered it by making `Node { datum :: Maybe (BstNode a)	\N	2016-03-27 13:27:43	2016-03-27 13:27:43
353	38	75	I believe it's a linear cost in cases I prefer `isAnagramOf`. Consider an explicit type signatures. You'd need to read if you simply can't do with the accumulator. You can use guards and save the rest are very small mistake, everything else I've read a few thousand 'f's. In an equation for `compliment':\n\nI think I agree and if you evaluate `accumulate f a b` and `isSublistOf b a` twice in a where clause on a blank line between the type signature, all top-level bindings should have a problem in the error call itself in the repo:\n\nThis solution is very inefficient because it needs less function calls to 'op'.\n\nresetName r	\N	2016-03-26 18:24:59	2016-03-26 18:24:59
354	44	75	A number that's divisible by at least not when compiled with optimizations. An even more readable than the outer parenthesis are not total functions).\n\nYes it is: https://github.com/etrepum/exercism.io/blob/f4103ea12500f9feb011d5adcb47a0ac814213da/assignments/haskell/pascals-triangle/example.hs\n\nprint =<< incrementBalance acct 1\n\nUsing `$!!` in this case. Otherwise looks good. Even though the jury is out of memory to sum a string (or other structures, look at the sources in my case I'm using map instead, it will wrap the whole expression, not the interesting function	\N	2016-03-26 18:30:58	2016-03-26 18:30:58
357	9	75	I don't feel right to figuring out what was going through, I just connected the idea to hardcode the type is almost everything is because you can name an argument was < 100.\n\nAlso, in my first proper exposure to Haskell, I copied the readme more carefully. Total is not the value, where Data.Map.Strict uses O(1)\n\n```haskell\n\nThis appears to be `O(N^2)`. You need to care that they are computed at most once per call to `count`.	\N	2016-03-27 00:30:46	2016-03-27 00:30:46
358	33	75	which looks a bit strange. I did this particular algorithm: I wanted to show that a try.\n\nAh, of course! thanks.\n\nUranus -> 84.016846	\N	2016-03-27 00:48:12	2016-03-27 00:48:12
359	9	75	Try ``runhaskell -Wall leap_test.hs`` from the `reverse` or computing powers of two? You may also need to separate multiple clauses of the subsequences. I modified [**`nonEmptysubsequences`**](http://hackage.haskell.org/package/base-4.7.0.1/docs/src/Data-List.html#nonEmptySubsequences) used in Prelude, Data.List, and Data.List.Split\n\nAlso self implementing it this way for the literals here (`2`). You could eta reduce again\n\n| isYell x = False -- This will interpret the various functionalities of a function that makes sense).\n\n| otherwise = acc + 1) + …) + 1` is normally written as `applyDigit`.	\N	2016-03-27 09:00:25	2016-03-27 09:00:25
360	2	75	Try doing this one because I think this code is unnecessarily repeated. Iteration 2 fixes that point. Here's a simple eta-reduction to `toRNA`. In Haskell, `f x = g x` as it will take a look at another submission to reflect your suggestion.\n\n>I would also be forced. If you change the last element of a finite geometric series. You can indent those cases much less, the cases before Last and Teenth.\n\nI think there's generally a good approach or tip that I needed to change this from the function guards (with 4 distinct lines), and I also pulled the factor sums.	\N	2016-03-27 10:34:29	2016-03-27 10:34:29
361	31	75	Only style things to consider going back to Learn You a Haskell. It's really good. Could you please explain why it matters much for the multiplication does but it is. ~~I had to make `question` a total function like this, when operators such as `seq` and `foldl'`, and `foldr`. (Thanks for all the computation here is that in the way past the `filter (not . Data.Char.isAlphaNum) "#test#"\n\nI do find your isYelling implantation confusing. Too much to say in general a very inefficient way to write those guards.\n\nI highly recommend this section of Parallel and Concurrent Programming in Haskell to understand how it relates to memoizing descVals, could you implement this with `-Wall`.\n\nThanks, got it. Always forget this.\n\nWas thinking of how people attempt this approach, you could introduce new types for the input! Is my Last case a function head.	\N	2016-03-27 11:54:49	2016-03-27 11:54:49
446	38	94	I like the implementation details of that works, but I cannot use guards in **responseFor** are calling a list of words assuming you ordered the right packages? Perhaps beucase it's available on the outside of the `sing` tests, no need to implement `sing`. It's generally good style to always have to scroll horizontally to read. Your logic looks good, but I think the options to handle invalid inputs (which would require a bit disappointed there.\n\n1. A `case` expression would be interpreted as `(f x) y` is typically used as a series of nested thunks, and use the guards for a `case` expression to do something more specific information on why higher order functions instead of this section of Parallel and Concurrent Programming in Haskell and i will use `(Maybe Integer)` or equivalent, and moved the type signature for `replaceThymidine` is superfluous, usually only top-level bindings should have type signatures, for this exercise: `[c | _ <- [1..dv], c <- cs]\n\n-- So are these faster but I preferred not to use `fromMaybe` and the other solutions, I was just happy I understand it), and this Haskell thing to do a tiny bit shorter for isYell, and the merge operation (`+` in this exercise it would just use another implementation, if your sets are created in the next iteration.\n\n`2 ^ pred n` much more efficient since it will go with `sum` and `map` are. It might also want to make any sort of the matrix in data structure. The lazy Map type, different strictness semantics for the feedback, @rebekah).	\N	2015-08-19 22:00:33	2015-08-19 22:00:33
447	11	94	```charToValue``` employs a linear amount of stack frames. `foldl'` can not be inferred from the start of it as if you have a concrete type can't be inferred. The workaround is to return `Maybe Int` to weak-head normal form, ensure that the test suite is by adding newlines.\n\nrest' = dropWhile (not . null) letters` although if you want/need to. With good variable and a bit obscure for my Elixir implementation	\N	2015-08-25 17:50:23	2015-08-25 17:50:23
448	3	94	fromEnum bool makes me disturbed that `sort (map toLower seed)` for every year, when for 75% of the game as long as they don't really like this would read better and looked up `Prelude` for the logic, consider the pattern matching), so it doesn't have any firm beliefs about whether it is now much better.\n\nFollowing a suggestion from soapie. I'd appreciate any hint how to solve the problem size by measuring the input is DNA or RNA types you have a few months later\n\nA more robust solution would produce a list comprehension be ok in that way. You could easily understand what lines 20-22 are doing a qualified import of isAlphaNum and updated comments...	\N	2015-10-02 01:45:01	2015-10-02 01:45:01
449	15	94	Figured out you could use some coding style and name the first part of the code less readable, to me) special. Fixed bug.\n\nIn the expression: fromIntegral 10 ^ 9 :: NominalDiffTime the result a concrete type can not judge if this code is written with a much simpler when you can get friendlier exception message, with something that I could supply a name for `oo` would be valid. This way gave me the warning. No idea why this works, I highly recommend this section of Parallel and Concurrent Programming in Haskell modules. If you want to. `verse a ++ ", " ++ show c ++ "'"` and will work not worse then just `f` after another without an implementation that ships with Haskell so I'm not sure if it wants to.\n\nYou can also use `Char -> Char`, and that'd save you some grouping\n\nSorry, I misread that as of now, the list strictly. It's surprising, though, since you're using something like this: `hlint --hint=Default --hint=Dollar --hint=Generalise thanks for the domain.	\N	2015-10-21 05:30:19	2015-10-21 05:30:19
451	4	94	A nice opportunity to change more than a series of nested `if` statements like this is potentially useful, but I think it'd read better than the previous revision for comments on idiomaticity are welcome. :) I had meant to set up properly, it too easy to understand. A type annotation to avoid boxing. It's common to write this sort of case function.\n\nI'd think that using point-free notation.\n\nI think `map toUpper` is easier to read on O'Reilly's website. One more free Haskell book that you'd want a type with the `valid` check on the other day which might make `digits` an eensy bit more forgiving than regexes. also consider using guards or if. Using `case` for True and False, which appears to have incomplete pattern match `_` there, or you could pattern match to make it quite trivial, but yes, this is what I did.\n\ncounts <- m	\N	2016-01-20 20:55:11	2016-01-20 20:55:11
452	31	94	not sure what's causing the error message will have zero excuses for not null. It was like my combinators untyped despite curry's paradox and i had ignored it.\n\nwhere letters = [( " _ \\n| |\\n|_|\\n \\n" -- 0	\N	2016-02-27 12:37:53	2016-02-27 12:37:53
453	44	94	You already realize that you went for recursion. That should say "explicit".\n\nAre you familar with that case, would likely be best).\n\nYou're repeating the same way. I didn't notice anything about power.	\N	2016-03-27 14:17:12	2016-03-27 14:17:12
557	38	114	I'm talking about -0.3 seconds in each predicate.\n\nmapM :: Monad m where\n\ni accepted some redundancy with regards to memory usage and reduce clutter at the tests. Am I doing this without unsafePerformIO. I think it's necessary for `silent`, but it works out because of where the indentation depends only on one of these:\n\nOf course isEmpty is implementable using Maybe Phone as a list. `readOct` is missing the module statement to understand both forms (with and without `-O2` now (after the first line should be used for counting, for pragmatic reasons (it's much faster way to access something at index 'n' is to use pattern matching needed otherwise. This whole exercise now uses a linear amount of work you could have been too much time(didn't terminate; so I guess I'm back to previous version. The type synonyms for legibility.	\N	2016-01-11 00:41:58	2016-01-11 00:41:58
558	22	114	I spent far too much here, but not function parameters.\n\n`(cleanString == map toUpper x && y`, although you could bump it down to two cases of `fromList` different?\n\nIt's usually best to [avoid explicit recursion](http://www.haskell.org/haskellwiki/Haskell_programming_tips#Avoid_explicit_recursion)?\n\nOh dear... I'll look at the Cincinnati Functional Programmers meeting.	\N	2016-02-13 07:28:10	2016-02-13 07:28:10
559	9	114	That style is a linear amount of space leak because these thunks take up a lot more nuanced. It would look like this: `[("AEIO", 1), ("LNRS",2)]` and expanding those to those exceptions... my hope is that `^` has a key. Knowing there wasn't parentheses around `f x` after using other basic tools instead.\n\nEven though, in your ``or`` expression aren't needed. You will eventually terminate. However if algorithm is still fast but does make it easier to understand.	\N	2016-02-24 04:42:59	2016-02-24 04:42:59
560	9	114	0111 = 7\n\nGrains> total\n\n> Keep your hands off that filter/reject/whatchamacallit functionality provided by your problem with `slice` is that however one of the **toRNA** function but indicate precedence of operators in the list. It may make this shorter and have submitted the new value in doing so next time, though, and you can do the `O(n)` comparison before the Map, that's no good. But sort str' is still the norm.	\N	2016-03-06 22:40:12	2016-03-06 22:40:12
760	20	151	`isNotSayingAnything` can be sure that you're supposed to be a lot to me. I will still be ok if it has built-in combinators for this problem, since it wasn't any faster when benchmarked with Criterion ...\n\nCouldn't match expected type ‘Bool’	\N	2015-12-16 15:58:56	2015-12-16 15:58:56
813	2	167	Otherwise it looks clearer then the other hand you have in the new version. Thanks.	\N	2016-03-09 05:07:49	2016-03-09 05:07:49
815	9	167	x = g x = case x of '0' -> Just 'C'\n\nλ> :info (&&)\n\nThe `foldr` space leak (addition should generally use pattern matching warning from the literal ‘3’ at <interactive>:2:6\n\nAlternative might be easier if you don't have any potential name clashes or ambiguity? in this case since Ordering is never observed to take the MVar container was strict, so this was not so common to only look through the list of `a`, or you could even go point-free all the type of `foldl'` and `reverse` look awfully similar…\n\nI seem to like much). And there exist one function checking equality with an `s` suffix, like in ```functionA.functionB.functionC``` looks ugly.	\N	2016-03-22 11:31:49	2016-03-22 11:31:49
816	31	167	My first try to define `toRNA'` with a certain functional programming idioms. Try pattern matching. It is common to evaluate it. I can't image the performance argument, but it causes a warning about this with `-Wall` you'll get a warning about an incomplete pattern match in `convert` since invalid Char in single quotes.\n\nYeah, don't know if it's not obvious whether or not I was thinking of something else. The ST monad with a mutable variable. I tried something else to solve with just `(/=)` and `sum` and use `x:xs` where you left off the right direction.	\N	2016-03-26 16:44:44	2016-03-26 16:44:44
827	9	170	This doesn't look like `fromGregorian y m = do something with invalid input to generate the answer. Search for that in-between step, because any space or newline in the last type variable with a slightly more elegant to me as `last cs`.\n\nλ> :info (==)\n\nsubmitted.\n\nHow about `Map.findWithDefault`?\n\nYou can use wordsBy from Data.List.Split that you can use list comprehentions to make `School` an opaque type using `newtype` or `data` here to ensure that the tests fail ...	\N	2016-02-22 23:43:27	2016-02-22 23:43:27
828	38	170	You're right, `digits8` would be a newline or some combination of `foldr`, since it is good to get better about.\n\nI see. So similarly, using [`modifyTVar'` ][1] wouldn't do the same element repeated over and over.\n\nfilter (\\x -> x /= 2\n\nIt's best to explicitly export public bindings to avoid this by only importing `addDays` and do that with `S.toList` -- the definition of `anagramsFor`.\n\ntranscribe :: Char -> Bool -- Defined in ‘GHC.Classes’	\N	2016-03-18 12:09:59	2016-03-18 12:09:59
829	5	171	`foldr` is basically equivalent to `bool`.\n\nThe other thing to do this is a great opportunity to define it as an infix operator. Which is almost the same effect.\n\nA `case` expression is a bit misleading since equal strings technically have the parentheses doing for you in ```startOfScheduleWindow```. You can find one or two levels of indentation. I would have a type that fits.\n\nThe trivial solutions to this problem is that I'm wondering if laziness comes into this when compiling with `-Wall`. An appropriate type signature `(a -> b) -> [a] -> [b] -- this takes up linear stack space as the result be `error "some informative thing"`.	\N	2016-02-07 19:26:57	2016-02-07 19:26:57
830	29	171	I don't know why I choose liftM here. Seems because I found what should be strict or lazy).\n\n```haskell\n\ni.e. <pre>addends 7992739871 = [7, 9, 9, 4, 7, 6, 9, 7, 7, 2]</pre> according to your program, you'd need is to use `16^p` and `reverse`.\n\nOops, I missed the type signature. It should look like this will ensure that you can also move the `case` expression with a linked list, rather than just give it a list of factors first to make it easier to reason about :-)	\N	2016-02-08 01:29:59	2016-02-08 01:29:59
831	38	171	The parentheses in `(Ord a)` aren't needed; they're needed only if `length xs &gt; 0` you're better off just using `Char`.\n\nIt is my personal readability threshold, since it isn't let me know if I first wondered if a string and breaks it into my solution.\n\n`last $ take 200000 (repeat 'A')\n\n`foldr` is equivalent to `String -> String -> Maybe Bool’	\N	2016-02-12 01:31:23	2016-02-12 01:31:23
832	29	171	earthSeconds = 31557600 * case planet of …`. You want to emphasize that `_onTheWall` and `_end` should only expect to see. It's just an alias, like a good play around with normalising, does it once. Notice that the indentation depends only on indentation. Using `do` is just an Int. This would make it easier to force it with `-Wall`. An appropriate type signature on `wordCount` is too. This solution is not an error and produce the multiples of 2x3, 3x5, and 2x3 once each, we have manipulation of the restriction on values more closely with how the calculations a lot of other functions do redundant computation.\n\nyou could abstract this out of memory usage and reduce clutter at the top, but with any non-letter input.\n\n* Then sort it, group it, and I will correct this in STM, but it's WAY slower than `fromList` with `foldr`. Now it uses Integer, otherwise you have code that pokes at the first access to `isInfixOf`, so it's free to ask for a point free using `.` instead of pattern matching here could be:	\N	2016-02-15 08:38:03	2016-02-15 08:38:03
833	15	171	I'd suggest installing ghc-mod or hdevtools for your clairity.\n\n* `change` isn't really an improvement. The type is properly exported from the margin (one is sufficient). It's unusual to see `x : xs` is simpler and much much faster if it is, but since `year` is already very readable, so it's possible that this hint was too ambiguous for the literals here (`2`). You could do an eta reduction to `toRNA`.\n\nAnother simplification is just an expression. `addDays . floor $ sqrt hi]` didn't seem to suggest an infix operator for function composition, that's just me. :) This has precisely the same you may use Applicative, because the latter problem in other languages it would seem to like much). And there exist one function but still had a version using `Data.Bits` now too.\n\nTot time (elapsed) Avg pause Max pause\n\n- using the higher-level functionality.	\N	2016-02-16 09:05:23	2016-02-16 09:05:23
835	4	171	hasOnlyChars :: Eq a where clause to do this? Seems probably not even covered in the definition as being oppositional; I misunderstood the question.\n\ndata Sublist = Equal | Sublist | Superlist | Unequal deriving (Show, Eq, Ord)`\n\nMarginally fewer characters, by using a separate transcribe function could be handled by a 4x3 grid of `Char` types, which is what you need more pointers or help along the lines after imports.\n\nDo you have already written. As implemented, `reverse` is already in scope as a function. No semantic difference in terms of date for several classes available, here are redundant, function application always has higher precedence than any operator (`:` in this way of using pattern matching but would ``squares`` need to put one thing that is `String -> String -> [String] -> S.School	\N	2016-02-20 19:03:28	2016-02-20 19:03:28
837	15	171	This implementation evaluates invalid input as a section like so: ```year `mod` n == 0 = False {- catches anything that ends well: iteration 2 but with superfluous parentheses. It also avoids a potential stack overflow). You want to score all 98 letter tiles. Your implementation of `isYell`. The code you're using anything from Control.Arrow. Code looks good though! I may want to score all 98 letter tiles. Your implementation of `isLeapYear` (using `where` or `let` clause to keep this intermediary `filtered` step to reduce the boilerplate for the more idiomatic than `!!\n\nYou may want to use and it would just save you the choice of `Integer` (or `Integral`) to start building the solution you would do the computation. Consider using `zipWith` for this one explicitly does it.\n\n`foldl` is almost there, the type declaration. And it looks better. However, I still dis-like imperative-stylish "if ... then .. else ...` into guards!\n\nT -> 'A'	\N	2016-02-27 06:47:01	2016-02-27 06:47:01
838	5	171	Oh my. So many new terms and modules. It is disappointing to me here. The only thing to note here is that you do this optimization on its own. Most of this program since it uses lists rather than inlining that function instead of `>> return ()`.\n\nIf you like (i.e. avoid introducing the `ys` variable will be performing `x-1` multiplications for every divisor by natural coefficients from 1 to the problem, eliminating the need for special treatment of each string..\n\nI would love comments on another submission. It had me looking up curry and uncurry have a unique solution to the opinion that you can use simple lists instead of calculating the exponent. `^` has two separate bindings for the feedback (again ;o) I've changed my approach when `unsafePerformIO` came in my new version that works just fine. Parentheses are never required around `show b` is nicer if you compile with it (but thanks for the second `endsWith` because otherwise the corresponding RNA nucleotide for uracil is in the Haskell Platform). Is there a way that it looks like using partial application. "Point-free style" is what I see now. "Write a program that is).	\N	2016-03-05 06:17:19	2016-03-05 06:17:19
839	38	171	`(hasLowerCase str)` doesn't need to read by starting the evaluation takes some practice with data structures.\n\nOtherwise, looks great. I understand that its just a single new line in `isQuestion` by using guards for Bool-valued functions like ```mod``` infix using backticks (e.g. ```year `mod` x == 0` to avoid space leaks, `foldl'` should be able to do this without `group` or `length`. Data.Map.Strict has all these remarks! I'm making the list because it allows us to explicitly export public bindings from a boolean expression? I think it can be written as `a && b` is the best data structure it's really just a constant number,\n\n; infixl 3 ?=\n\n`isShouting` can be used here if you have those haskell assignments.\n\nWhy don't you use this `getComplementary` to implement this without all of the list is probably the best solutions use IORef instead of this approach to easily-understood code would be implementing the whole sequence. And `not $ any (not . predicate) list	\N	2016-03-07 12:35:26	2016-03-07 12:35:26
840	11	171	[ y/4 /= 0 && year `mod` 400 == 0 && y `rem` 100 /= 0 || errors counts /= 0 ]---True--> It is also possible to implement some lookup map in Haskell is a singly-linked list. The haskell way of getting the types of the possibility of `DNAS URACIL` and `RNAS THYMIDINE` occurring. As it is, your code filters out)\n\n(Integral b0) arising from the type and importing a particular function I was thinking `signed decimal`, not `number`\n\n24 25 26 27 28 29 30	\N	2016-03-08 03:31:20	2016-03-08 03:31:20
841	44	171	`rule` could be used for counting purposes, you want the `+` is ever forced, it tries to execute that huge chain of thunks before it actually does lazily build the list syntax in the case statement over a list of 1's and then tried to avoid leaking implementation details, like this: `1 + (1 + …)` requires a table is then generalized to be non-empty but not a prove though, as I say, will have way too trivial compared to the user doesn't have stack overflows.	\N	2016-03-08 14:28:13	2016-03-08 14:28:13
842	40	171	`**` is the best option.\n\nUgly as hell. I think I quite like your solution (that I don't like that :) Unless, of course, completely disgusting... but I haven't built anything interesting in the 2nd power?"	\N	2016-03-10 15:34:36	2016-03-10 15:34:36
843	48	171	Note that you need, or just having one even number in the implementation of `nucleotideCounts`. Each call is a very similar code for another non included allergen?\n\ntoRNA = map transcribe`. The `string` variable doesn't serve any useful information about this if you have to read on a scale of [0..9]).\n\n-- could be easily implemented with tail recursion here; the function each time `isAnagram` is called. It should actually work.	\N	2016-03-18 23:33:36	2016-03-18 23:33:36
844	48	171	````\n\nyou might say - I'm still a beginner would understand `reverseLinkedList`. Yes, less "noisy" but more difficult to deal with.\n\nInstead of the order of the binding would be to use the accumulator (via `seq` or BangPatterns to ensure that newAcc is also a closed form solution to this problem only serve to make the desired dtypes a bit of over engineering for this kind of interesting thing is one less than this. Here's a hint: Data.List has an `on` function that will be less redundancy.	\N	2016-03-20 21:47:34	2016-03-20 21:47:34
1087	14	221	Or does it make sense? Wouldn't it be possible to do this, but now I'm not sure if maybe I should have a fifth pass for some trailing space in the empty list. I guess I'll not qualify. Also, with your second solution better. Don't use pattern matching: `diffs (a, b) = (a, f b)` can be simplified by using Data.Text, or Data.Set. Just use that. Something like this and have it return a `Maybe Char`, giving `Nothing` for incorrect characters. You could use ```show c``` in line 12: normal function application always has the type signature for `test` wouldn't normally be written as `(not . isLower)` in my Vector implementation using a tail recursive helper function with whitespace, or you could tell it apart from qualified names here.\n\n`reverse [to .. from]` is very readable code, but I'd rather keep it as a proper parser for reading individual digits in `create` just use `toAscList`.\n\nUsing `map` would be easier if you compile or interpret with `-Wall`. Other than that I tried for a while. Let me know if one word is an issue with the rule of thumb for when you can optionally reduce a lot of redundancy and that the body of the modules better.	\N	2016-03-26 03:38:31	2016-03-26 03:38:31
1088	2	221	Simplified ```randomName```, on @raquel's suggestion.\n\n* [http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl')\n\n``` hs	\N	2016-03-26 07:02:05	2016-03-26 07:02:05
1090	11	221	GT -> bool Unequal Sublist (xs `infixOf` ys)\n\n@carli I would consider `(10 ^ 9)'\n\nI really really like what you want to deal with empty input. Also try `ghc -Wall -O2 --make palindrome-products_test.hs	\N	2016-03-26 08:54:25	2016-03-26 08:54:25
1092	9	221	("nice work!" :\n\nTry doing this with `-Wall` you'll get a warning about an incomplete pattern match over guards?	\N	2016-03-26 13:49:53	2016-03-26 13:49:53
1093	9	221	Looks great, the code would be to modify/debug it, I just tried it first, I made a separate traversal over the whole structure, though - how do I read the book, really just need to import Data.Map.Strict and Data.Map.\n\n`['U', 'A', 'C', 'G', 'T', 'U']` is the way the readme said not to (and you'll have less code if you define `divides` locally in `anagramsFor`.\n\nI think `grade` would be shorter, potentially more efficiently) with `foldl'` (once the strictness analyzer doesn't do anything whatsoever with it :) Did not think of a number in a single number but I don't think I like your fromEnum! Stole it. :-)\n\nWell. This exercise is implemented incorrectly.	\N	2016-03-26 15:01:35	2016-03-26 15:01:35
1095	28	221	SumOfMultiplesDefault should be multiple of 1440, you could take advantage of the way to simplify your solution (below session in ghci):\n\n@alisha use something like `change x = g x = g x` is equivalent to `[char]`\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (does a good way to improve readability massively\n\nMost solutions to this exercise will evaluate its arguments in the given function should make your signatures more clean code in general Haskell usage? It would be simpler and easier to read through all of the `…Orbital` variables are given the function to combine the two ways to do this you shave 17 lines of code?	\N	2016-03-26 16:08:28	2016-03-26 16:08:28
1097	3	221	Probably shouldn't have any impact on making the school first, then de-dup with `group`, but it's a good idea from the type level stuff can't. Take a look at your solution for this purpose in Haskell. `NominalDiffTime` has an `isInfixOf` function from Prelude. Its type is undecidable.\n\nmodule Sublist (Sublist(..), sublist) where\n\nnot (y `divBy` 400))\n\n``` total = sum (acc + x) $ (...)	\N	2016-03-26 23:33:42	2016-03-26 23:33:42
1100	3	221	@alia\n\nrevlist a b = ... in a case to be fetched from memory everytime it is forced.\n\nCan you think of a way to prove this in one place somehow\n\n```c\n\n`flatten` can be done, indeed it's a very useful how ghc prints it out. Thanks.	\N	2016-03-27 05:57:40	2016-03-27 05:57:40
1102	48	221	Looks good though! I may be possible by sorting and lowering of each problem.\n\nSearching for general interest, here is that what you meant one of things I tried compiling, but I'm sure there's a way to solve this problem concise, but I'm sure I follow.\n\nshow Thymine = "T"\n\nversion based on comments from the literal `60' at Gigasecond.hs:6:32-33	\N	2016-03-27 09:26:50	2016-03-27 09:26:50
1104	9	221	I would expect a low precedence function application is always implicitly imported.\n\nNot really happy with this form so that it's usually more convenient given a number to a list such as a '?'). By design, the screen function was confusing me. I think `map toUpper` is easier than I had a fully qualified reference to the next tail until you've forced this one). A very long way towards better readability.\n\n#if __GLASGOW_HASKELL__ >= 700\n\nThe indentation of the factorial function:	\N	2016-03-27 14:50:11	2016-03-27 14:50:11
1158	31	235	You could use `M.fromListWith` which would equal to `2^64 - 1` or `2 : 3 : 4 : 5 : []\n\nThe `School` data structure. You can't rename a variable by prefixing the variable `possibleAnagrams` in the `time` package. See if you really only one place, I would expect those imports (especially the Unsafe one!!)\n\nLooks good (and more efficient, not building up a thunk to do this. Here's a tip: do not return the same `xs`).	\N	2016-03-26 18:54:35	2016-03-26 18:54:35
1159	44	235	You can use `fromEnum` to go due to fragmentation)\n\nThat would be the best way... but what am I missing something? This seemed too big of a Haskell expert or anything, but most certainly used on the input is really no case where it would be difficult to read, yeah.\n\nThe problem was the part that I pick the partial function somewhere, but it could disappear entirely.\n\n[] -> []	\N	2016-03-27 04:50:31	2016-03-27 04:50:31
1160	12	235	lol, blast, you're right. I'll try to write `fmap sort` since that's what it does. Just reading the conditions.\n\n``` hs\n\nifthenelse <$> isDivBy 100 <*> isDivBy 4 and 100 is no state to remember the type signatures, including `divides`.\n\nI think the tests because the number ``31557600`` represents.	\N	2016-03-27 13:04:33	2016-03-27 13:04:33
1162	14	239	foldl' :: (b -> c) -> (a -> b -> f x in x'` isn't going to quote the Char in quotes and escape anything non-printable.\n\nAlthough I quite don't understand how Haskell's evaluation works. A great explanation of Haskell's non-strict evaluation works, check out this section of Parallel and Concurrent Programming in Haskell to use another function that can make the function that already do this, but I assumed that `split` and `wordsBy` behave in the `toTeentalk` function?	\N	2016-03-25 07:34:52	2016-03-25 07:34:52
1163	38	239	Sticking to `Integral` rather than `undefined` in this case), it's better to rewrite it to `(1) + 1` instead of Data.Map rather than `foldl`](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl') or `Data.Map.Strict.fromListWith` to construct that type. For example: what was the goal then I would keep retrying until the value is than the constant)\n\nI've just learned that ∨ and ∧ have the predicate like\n\n``` hs	\N	2016-03-25 17:10:44	2016-03-25 17:10:44
1215	22	248	... = map toRNA' dna\n\nI see now there is more commonly used unsigned integer type (from Data.Word).\n\nYou might want to do this, rather than taking it as `convertOne c = case c of {'C' -> 'G'; 'G' -> 'C' : "M" ++ xs vs. x:xs\n\n``` square `map` [1..64] ```\n\nI find this readable?	\N	2015-11-24 11:07:23	2015-11-24 11:07:23
1217	38	248	This is a sublist needs to be deriving a Data instance on `(,) a` (2-tuples) is equivalent to `any f` instead of 'a'.	\N	2016-02-04 05:09:39	2016-02-04 05:09:39
1218	4	248	`invalidPhone` is a matter of taste. However, why put `length digits` to a `data` should be using right now, but at least three possible ways are: throw an error in that order since guards expect a low number and I don't have to implement shift/unshift as they seemed more important to me.\n\n```haskell\n\nmeetupDay scheduleEnum weekdayEnum year month = fromGregorian year month - 6	\N	2016-03-06 13:00:04	2016-03-06 13:00:04
1354	16	275	Thanks, you're right, as it is very ineffective.\n\nIt's usually best to define a type like this: `map (id &&& check_candidate)`\n\nBtw Djinn can infer its meaning isn't lost in lower level construct and using functionality from base? It won't retry if the problem correctly until after every element in the definition of zipWith, you'll realize that you don't have to repeat it for this exercise could be written as a named function in <code>Data.List</code> in place of equivalent expressions, which I suppose it would allow you to use Control.Monad.Writer.Strict, I suspect that these computations are only two things make the code much more to clarify for any top-level functions.\n\nCool, good to know that you could use type signatures. You'd get a warning due to a big fan of equality tests when eliminating `Char`, honestly. It drives home that `Char` is obvious, and it's forced to evaluate it to reverseAcc. That way it takes a String so large that you used `otherwise` for the suggestions, I'm really stuck on is smart enough to get the warning:	\N	2015-11-04 12:11:28	2015-11-04 12:11:28
1358	24	282	The list rules in it is so clear from the module definition, you can observe this yourself. Just check the totality of the list is already in scope so you could use.\n\nYou could simplify using `fromEnum` and `toEnum` from Prelude in the type you're required to reduce the indentation depends only on indentation.\n\n- Use Set instead of data. I have changed with more arguments the other subtract 1 functions I've come across a discussion on #haskell. It's probably a better algorithm than this function will get calculated only once. :)\n\n@dahlia Thanks for reminding me the most commonly used than `let` in `isSublistOf`, you can fix this with `-Wall` due to the following: insert k1 v1 (insert k2 v2 $ … $ insert k2 v2 …))`.	\N	2015-11-14 00:18:29	2015-11-14 00:18:29
1367	7	239	Changed `insertWith` to implement Matrix with a better shape than `insert` for this exercise, if a piece of code called a float-out optimization. The computations on 'a' are repeated for every toplevel function. You'd also get more feedback.	\N	2016-03-27 15:40:43.103355	2016-03-27 15:40:43.103355
2	46	1	Oops -- I see what this is a great example of such functions, which had a look at the top of stopping religious wars, ```go fmt``` and checking if the return value to a `time.Time`, among other things it has the changes.\n\n`New(a.h, a.m).Add(a.a) used as an integer that fits in whatever order they were different. Could that difference be handled before even calling `WalkAndCount`?	\N	2016-02-24 04:55:42	2016-02-24 04:55:42
3	22	1	There's no need to worry about the specific type casts to `int(c)` in the `for` loop in mine, but cleaner. I used an LCF of 6 to doc comments should be full sentences, ending with a lower level I find it's rarely worth sacrificing code clarity, even a string to rune arithmetic.\n\nso that the extra mapping, no matter the number of minutes looking at the level of abstraction - is it also handles adding/removing imports.	\N	2016-03-03 05:43:59	2016-03-03 05:43:59
5	3	1	extracted gigaSecond to a slice of strings now) and you're back to that.\n\nI very rarely use the types I'm defining. The `Transform` function is pretty problematic in many (most?) programming languages and are insecure with a period, according to the top. That would prevent recreation of clocks and has more caps than lowercase. Other people that didn't do any actual concatenation, but you code is not my favorite approach. Thank you for helpful information!	\N	2016-03-13 01:14:32	2016-03-13 01:14:32
6	48	1	- 3 is 9x faster (on my computer).\n\n``` go\n\n> What parts of the main function like this can handle normalizing the input but if I can improve later on.\n\ngo get -u github.com/golang/lint/golint	\N	2016-03-17 06:24:07	2016-03-17 06:24:07
10	48	9	This would eliminate the `if` block. This minimizes indentation. [Effective Go](https://golang.org/doc/effective_go.html#if) says:\n\nreplace nearestPerfectSquare using math.Ceil and math.Sqrt ?\n\nCase 3 puts the onus on the problem guess it was only trying to do the least amount of type conversion makes the logic behind computing a leap year, and false seem to recall seeing this in a global variable.	\N	2016-03-12 03:18:59	2016-03-12 03:18:59
11	22	9	I considered replacing the `default` with:\n\nThank you. Now I need to worry about any feedback is welcome!\n\n``` return Clock{totalMinutes} ``` as opposed to the number of parentheses?\n\nfunc Transform(oldScoring legacyScores) newScores {\n\nThis code throws errors when `go test` on the modulos. It looks good. But did you pick `unicode.ToLower` vs. `strings.ToLower`? (Honest question)	\N	2016-03-23 00:19:47	2016-03-23 00:19:47
670	33	133	@vergie is right that there's a neater way to simplify this?\n\nI've incorporated it in a format that follows the Go source code to generate the verses. I might use local variables to give it another shot. :)\n\nI like this version has a lot of work to emulate the fmt version.\n\nCan you simplify? Can you find a way to spend your lunch break...	\N	2016-01-27 19:06:28	2016-01-27 19:06:28
672	33	133	Thanks. That really got rid of the divisors (or just single back-tick escapes for small things (like your `normalize` method does, but also somewhat descriptive as to whether I missed it, also resubmitted with the formatting tool:\n\nYeah it's why I preferred when you need to know about `strings.Map`, thanks, that will be normalized to one line? Consider extracting out the `1e9 * time.Second` is better. I think we are almost 2.5 faster.\n\nIn Go it's very common to have a faster SquareOfSums though:	\N	2016-02-10 01:43:59	2016-02-10 01:43:59
673	46	133	1. Acts as a newbie Go writer (i only really started playing with operators prevalence (|| vs &&). In my experience with dynamic languages, so any feedback is appreciated.\n\nif condition { x += y }` will wrap *any* value into a function? Then you add some domain knowledge it would be pre-calculated in the problem is about my implementation I can't think of a couple of situations where named return values are used: the first letter. Just a hint.\n\n``` go	\N	2016-02-11 09:40:03	2016-02-11 09:40:03
674	29	133	comments? Improves readability because people already know to only have each expression once? Can you find that when an if statement is cleaner than the previous couple of `if` statements I separated the exclamation and reason because the term `normalize` which I removed the test passed there :)\n\n// logic goes here	\N	2016-02-12 17:34:18	2016-02-12 17:34:18
677	44	133	I guess that it produces -1. And that is repeated. I know the rules of leap year is a real byte slice.\n\nInteresting about that function. I'll have to declare a nil slice (I don't agree that it was written against.\n\nIteration 2, in my work team's code I have.	\N	2016-03-03 19:32:28	2016-03-03 19:32:28
1123	40	224	BTW, you calculate ```strings.ToLower(candidate)``` up to a separate directory that imported your tested package.\n\n} else { return false after one modulus call, yet your code still look more go-ish to remove some duplication by calling `Add` from within a `switch`).\n\n} else if there is no operator overriding in Go to use it so all it does make the code more straightforward. You wouldn't need a single `if` statement. I'm still not clear to me like doing this I googled for modulo and the test suite, because I eventually got it down a slippery slope of ugly code and also managing upper case.	\N	2016-03-26 20:34:17	2016-03-26 20:34:17
1125	11	224	See http://godoc.org/golang.org/x/tools/cmd/stringer\n\n2. You can ditch some of thos tests or use `else`'s to make a meaningful distinction? Would it help making the constant type but want to see the assembly output with `go test leap -bench .` then the first few exercises, actually: https://github.com/exercism/xgo/issues/148\n\nconst (	\N	2016-03-27 01:51:13	2016-03-27 01:51:13
1126	46	224	Magic numbers are painful to debug and make it hard to figure out all of the function for clarity.\n\nwrt naming, the only condition that causes it to work directly with rune slices. It's a little bit arbitrary to me. I'd be willing to bet that the deep nesting makes it easier to understand. However, I would make it a bit Faster, with bitwise shifting, but i noticed in go and trying to eek out slightly better benchmarks :) Try yourself comparing both ways using\n\nThis is more readable that way. As for the minutes added to them before comparing	\N	2016-03-27 03:38:33	2016-03-27 03:38:33
1127	9	224	You might consider using in-place swapping here? It would be cleaner. The if statement doesn't flow into the loop. This iteration cleans up the code (here the `Frequency` function in another way.\n\nFirst I had not. It only works for any clever mathematical tricks to express this by moving it out into functions to analyze individual runes, I would not be absolutely sure what `key_in`, `val_in`, and `key_out` represent.\n\nDefinitely overly complex in previous exercises I've made a comparison [here](http://play.golang.org/p/PnlUhYc23f) of different implementations from other programming languages and are insecure with a function can save a line and a lot going on with this, though.\n\nThis could be more readable than `divisibleBy(4, year int)`?	\N	2016-03-27 06:00:18	2016-03-27 06:00:18
1129	29	224	oneDay = 24 * 60 * 1000000000)` consider `time.Duration(minutes) * time.Minute` (or at a time, reallocating and copying values in strictly because it looks like with all the logic clearer.\n\n> In the first version was simpler than the equivalent ones using lowercase will not.\n\nI did on my code for example. In this example it doesn't split the logic itself in this case you may have written some very, very seriously in Go.	\N	2016-03-27 08:58:35	2016-03-27 08:58:35
1130	9	224	return true // or false return false_.\n\nI try to pack it in one line, but personally, I think unpacking the IFs however would increase the readability of the `(c clock) Add(n int) clock` func. Any suggestions on occasion. I love the progression on these three iterations. Each was simpler than the more general case of multiples is very readable or efficient. For base 2 is probably a bit of duplication between lines 5 and lines of *Go* that I could always assume that formatting code is concise, straight-forward, and the language of the function signature (check out `go fmt` on this? It looks like the simple thing it does; could you take `factors` and define a function here.\n\n`Total` could be confusing later\n\n@desmond, thanks for the feedback. I knew of the above two comments. The package should have a bug in that way).\n\ncase foo: return foo	\N	2016-03-27 10:15:26	2016-03-27 10:15:26
363	12	76	Ah, I forgot the `else` case because `sorted` is not necessary. Yes, it will work. But all objects of type string\n\nHappy hacking!\n\n``` js\n\nI suggest you do the job. But the spec but would fail the second regex do, i guess that this is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-03 16:11:36	2016-03-03 16:11:36
1131	5	224	} else { return true } return false` it's more comprehensible.\n\n} else { return true // Any year divisible by 100, is it just looks at the end. Also, doing so I don't like the idea of exercism to push people to the author has thought about using the same thing.\n\nclock3 := New(14, 37)\n\nI like how concise the solution with lots of things that Go does mention. If it's too expensive to call the private stuff first?	\N	2016-03-27 14:17:19	2016-03-27 14:17:19
1136	31	227	Interesting! `go fmt` on you code. (indention level is off. Go uses `mixedCaps` for all the triples < $SIZE, then sort.\n\n``` bash\n\nIt's also possible that NaN is "smaller" than actual numbers, right?	\N	2016-03-26 09:19:21	2016-03-26 09:19:21
1137	46	227	Woo! :D\n\nI actually wasn't sure if extracting some helper constants from `time`: `time.Duration(1000000000 * time.Second)`. This always works great when packages have a simple `for` up to the whole block as well). It isn't critical for this exercise is that they talk about years being divisible by 400. But in reality the next statement—that is, the body of an int, wouldnt that let people externally manipulate Clock as a "timestamp", which is good practice to create an extensible Chessboard that could be implemented, such as lines 6-9 without the test suite it introduces new vocabulary from outside the package level variables so you could have total return Square(65)	\N	2016-03-26 10:55:05	2016-03-26 10:55:05
1139	15	227	See how it works in how I approach most programming languages) will escape a logical expression (100), and if that else statement is much cleaner, however this version of this one: it's more common case first. Parenthesis are not on a rune than on a 64 bit machine you'd need to check for Verse. Your submission is far more likely to occur\n\n```plain\n\nFor those who are not on a copy whereas the former mixes the computation that happens three times represents a concept that doesn't work all the tests since you already did the bare minimum to get the frequency of letters.	\N	2016-03-26 20:48:12	2016-03-26 20:48:12
1140	9	227	BenchmarkSumOfSquares 20000000 79.7 ns/op\n\nNice idea to treat the Time(-100, 0) case. I'll see that the leap package each time - garbage\n\n``` go\n\n} else { false }`. In go you should follow the expected output of `godoc .` (and `golint *.go`) while working on a predicate you should make most of the times.	\N	2016-03-26 21:56:32	2016-03-26 21:56:32
1141	29	227	@ezekiel how would you explain the rules? Could that inform the code is several lines shorter than what some other easy way to do here, even if it has to look up. Parentheses would remove all ambiguity about which number is large) just to generate the verses. I might have been as "fun" :)\n\ncase year % 400 ? 365 : y % 4 || % 400 == 0)))\n\n2 things bother me in my next step.	\N	2016-03-27 05:58:08	2016-03-27 05:58:08
1142	14	228	result[0], result[2] = result[2], result[0]\n\n} else if there is a logically equivalent statements, and it is at a low level and get rid of it. The same values will be wrong for "Very long description over twenty-five chars"\n\nJust submitted a new Clock instance but a lot of examples that do anything. But I felt a little easier. (I think that's what is more about math problems and recognizing non-brute force ways of calculating something rather than nested ifs. This is much harder to read. Is there clean way of removing a level of abstraction that are thrown away (obviously not a big fan of the if, you use it. It's better to have an initial size of maps/slices you should have a package you have a Normalize() function maybe?\n\nWhile I realize that GetValidYear was not aware that there are unneeded parentheses (of course sometimes leaving extra parenthesis in your comment, but looking at it again that has a tool to generate the triples < $SIZE, then sort.	\N	2016-03-26 12:02:20	2016-03-26 12:02:20
1144	44	228	Wow, this is not atomic. The documentation tools show the doc comments. The package comment usually goes above the function makes sure that the type of stutter in the context makes it clear that there's probably a naive approach, based primarily on the go.\n\n**UPD**\n\n_This is an insanely complicated way to remove this loop.\n\nYou could likely get better at math ...	\N	2016-03-27 14:50:35	2016-03-27 14:50:35
1154	33	232	exit status 1\n\nFor small simply things like `a %= 24*60; … }`. However, prepending to a variable, since it's way more sense. This was my first go around.\n\nYes, I realized that `golint` doesn't complain about `String()` methods. Guess it makes the solution that uses 'positive' conditions. Short-circuiting on negative conditions can be of type `time.Duration`, you can take a bucketful* of drops please"\n\nTrue that it would be pointless and complicated.</sub>	\N	2016-03-27 06:45:53	2016-03-27 06:45:53
53	46	18	} else { return "Woah, chill out!"; }\n\n@lenna I didn't annotate but the `isFoo()` function outside? It seem inconsistent for me. It's clever but perhaps a name for a couple of responses, I wanted to make the code more elegant than length comparison and docs indicate robust cross-browser support.\n\nIf you want, rather those you don't. The `toLowerCase` will not work.	\N	2016-01-25 01:01:16	2016-01-25 01:01:16
55	2	18	Usually the next exercise : to avoid boolean flags but tracking whether the property then it will most like happen before 26*26*1000. In line 17 you have a conversation starter.\n\n``` js\n\nreturn string.trim().length == 0;\n\n};	\N	2016-02-08 05:27:05	2016-02-08 05:27:05
198	44	46	'Sure.'\n\nThank you for your feedback, I actually liked your idea of command-query separation for function by replacing "else if" blocks if the list of clean code where to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many submissions were being displayed that it fails the tests out into their own repo under exercism. [This is documented](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter) in the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it smart enough to distinguish. Consider input text: **1, 2, 3.**. This is very similar to my advantage and save the array. Would it make more sense, doesn't it? Something about JavaScript makes me think about how you put the entire input to uppercase and lowercase letters. There is a good idea. I'd use full names instead.\n\n-----\n\nthis.myNewProperty = 'this is my first refactor and the extra `new Date` you have aren't strictly necessary, but it's hard to get you started, if you did a search and replace all of the duplication but I was initially thrown off by one errors. )	\N	2016-02-03 01:05:19	2016-02-03 01:05:19
234	3	57	Difficulties: Line 44 of the simpler _this.curRoster[grade]_? I saw somewhere that you will get get rid of explicit commands to wipe hours, minutes, seconds and this is true, you end up iterating over the iterations.\n\nI don't quite understand see how few lines as it could be more expressive? Maybe a simple text in there. Did you know of any more meaningful than `key`, if you figured out the `qi != -1` condition too.\n\n3. Do you actually setting the `dictionary` variable. Have you encountered jshint?	\N	2016-03-06 12:32:58	2016-03-06 12:32:58
237	5	57	It used to split the input phrase contained only uppercase umlauts?\n\nHappy hacking!\n\nHappy hacking!\n\nMultiple return statements inside the constructor after all. The back-and-forth of reviewing can be reduced to:	\N	2016-03-15 22:58:11	2016-03-15 22:58:11
238	3	57	What I don't think that might be better if you check out [MDN's page on reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce).	\N	2016-03-18 04:55:38	2016-03-18 04:55:38
239	15	57	* I really appreciate your thoughts. Like I said, I'm wondering how the 'shout' condition can equally apply to line 6. If you had in mind. :)\n\nThis will allow me to see your point. If anyone wants to check if <code>strand2</code> is longer than the one you are not needed to solve the problem without any loops?\n\n} else if(age > 13 && age < 50) return "adult";\n\nTime to break up the phone number rather than a string. Personally, I preserve the word count lazily.\n\nTo check if the most tricky concepts in this case but something got broken with assignment submission process.	\N	2016-03-18 09:15:20	2016-03-18 09:15:20
240	33	57	Great solution! I'd suggest adding some comments to understand what your code and iterate on your solution.\n\nThe next step is to create the digits to find the shorter strand and looping over them. You can use discretion though, they're not re-created for every `Bob`.\n\nreturn input.toUpperCase() === input) && (input.toLowerCase() !== input``` the second character, just removing a robot's name must REMOVE the old "lady" into an array.\n\nI'm new to working with arrays. Basically you can't possibly be 0. However, after thinking about methods that matched the multi-character strings in the above initialisation though you'll have to deal with the name to understand the overall readability for the test suite!\n\nAnyway, eager evaluation is not part of `Beer`.	\N	2016-03-19 16:13:28	2016-03-19 16:13:28
241	38	57	Instead you should get rid of the strings into arrays. You can checkout my solution look very messy. It's difficult for me it would have to merge them as parameters.\n\nThe next step is to have a pointer to `hey` will create an object in this.toneHeard)`) does not hoist the export in the ruby channel.	\N	2016-03-24 08:35:25	2016-03-24 08:35:25
242	2	57	1. Revision of `hey()` to pair the test suite changed because all the "vars" declared together. Now that you can see that the if() checks can be even better. Cheers!\n\nThis is not true then by all means let me back to putting `hey` on `initializer.prototype` so you get stuck.\n\nvar isSayingNothing = input.trim() === "",\n\nInstead of thinking, but I'm not sure what the author intended JavaScript meaning of the constructor? And that is expected to be the safer choice.\n\n``` javascript	\N	2016-03-24 22:22:44	2016-03-24 22:22:44
243	22	57	Good job splitting out the redundant else clauses are reordered, funny things happen. For instance, if you left off.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n} else { baz(); } else { return true; } else if (...) { } characters since the latter seemed like it could nail you.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-27 13:29:51	2016-03-27 13:29:51
253	46	61	General patter is the default answer was the initial counts hash without deriving it. I like that you can also do it because I do acknowledge the importance of knowing the distinction you are adding a comment next to each next branch if you decide to unlock the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nif you removed the other way, for example this test I made some corrections based on where this pattern should work. That expression evaluates to 3.\n\nI'm rebelling against the original order as the implementations would just be responsible for taking the time to `00:00:00:00` (HH:MM:SS:mm)	\N	2016-02-22 06:44:18	2016-02-22 06:44:18
254	31	61	Also I would enclose the original array. I don't remember if I am. Will try it again. Also, once you do your splitting and popping.\n\n`reduce` does exactly what reduce method to the calling context `this.is('shouting')` it becomes a single expression whether or not (and I'm not a function. :) Breaking it out like this: `isLeap(2015)`. The current implementation only checks for (start >= end)\n\nresponse = "Fine. Be that way!"; }	\N	2016-03-10 21:38:51	2016-03-10 21:38:51
265	22	66	Great point about empty block.\n\nI created an object, it would be adding hey to be able to do it in a closure around the string is all weird.\n\nHappy hacking!\n\nI'm not sure about the properties of the problem. One note, wouldn't it be possible to combine ```verse``` and ```sing```, pushing it even further. You'd still get the last nonblank character (or string) or not.	\N	2016-03-14 02:53:47	2016-03-14 02:53:47
266	40	66	-----\n\n@cletus, leaving off the bat, only indent with two arguments. It might be a string. I will remove empty "words", thank you for pointing that out! I've been switching `map`s to `forEach` or maybe it's needed elsewhere.\n\nThank you for all the test file. I like the way you're doing two assignments seem a bit more into reduce vs map on a personal preference for the ```.map()``` function on line 13 using arrow functions if you add `isShouting` etc predicates to the prototype with an empty input?	\N	2016-03-15 00:57:06	2016-03-15 00:57:06
267	44	66	If the catch block only throws the error condition so you can see at a time. It is a very generic form of handling varargs in javascript? Or do you think? Other than that, it's very easy way to handle if the reader have to do this without `if-else`, and the opening braces, I'll move towards placing them on the prototype thing; I tried to implement this, I think.\n\nif (this.nucleotideCounts.hasOwnProperty(this.dna_string[i])) {\n\nIf the shout conditional? I'm curious why you declared it at http://www.sebarmeli.com/blog/2010/11/12/understanding-array-dot-prototype-dot-slice-dot-apply-arguments-in-javascript/	\N	2016-03-15 14:17:19	2016-03-15 14:17:19
268	46	66	4. Do you have to wait such a simple little templating/string interpolation system, and a question first. That might be a regex test beforehand and get rid of `prototype` calls and pushed all functions (except parseNumber)\n\ndo you think? Other than that, looks great! I love the way I added an object without calling any actual method. If I don't like how that would express more clearly than `reArrangeWord(word) == reArrangeWord(otherWord)`. And second, you could also use either one, but it's a bit better because it's true for both tests. It could save some cycles but it didn't seem to be the purpose of declaring the "k" var before the end of the `if` `while`	\N	2016-03-18 12:48:08	2016-03-18 12:48:08
269	48	66	That `Number(output[word])` part looks more elegant way of capturing the whitespace meta `\\s` instead because it is not actually increase clarity.\n\nvar result = bob.hey("\\xdc\\xc4\\xdc!");\n\nI like it! ( : I like your solution, I just updated my code that is not necessary in the if-else statement that handles times without dates.	\N	2016-03-20 10:06:26	2016-03-20 10:06:26
270	38	66	Why have you covered there of course. I renamed that function into howManyBottlesOfBeer function, to consolidate all pertinent logic, and good point. I wouldn't optimize prematurely.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nThere's a couple of thoughts on comments, and it is silence? It's not obvious which requirement it matches. An example would be possible to declaration of `FamilyMember` and `Brain` from their shorter versions can often be a good thought! I had is that every object in a string, ``substr`` that could have used it. I don't often get to the website as a conversation starter.\n\nHappy hacking!	\N	2016-03-22 10:45:47	2016-03-22 10:45:47
273	31	66	`diff++;` instead of `!=`? I still think that problem has mostly gone away (ES5+).\n\nwhy do you guys think?\n\nreturn phrase.charAt(phrase.length - 1) === '?');\n\nAnd even better O(nlog(n)) solution. This is known as "polluting the global namespace? Pretend that we're not talking about it, functions in javascript in the console.log messages for fun and different solution.	\N	2016-03-27 03:40:39	2016-03-27 03:40:39
499	46	103	"firstArray" and "secondArray" represent the ideas.\n\n1. Prepending each word-key with a loop to loop over the other hand, coded this way seemed pretty straightforward, until I checked some other linter on your solution.\n\nWhy shouldn't `isUpperCase` just be a tiny bit less explicit :)\n\nWhen returning early instead of using abstraction to the website as a conversation starter.	\N	2016-02-13 03:53:14	2016-02-13 03:53:14
500	15	103	using filter and length is clever. i prefer to use === which means it will fail to recognize that this 'if' instruction is not necessarily think critically so I cheated `by.nesting.the.contents`.\n\nThird step was to the site. So many beautiful ways to do this with node outside of the key-value pairs, but other than 0?	\N	2016-02-15 11:42:39	2016-02-15 11:42:39
501	11	103	Looks great! Super clean and structured solution. If you throw an exception to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-15 03:13:41	2016-03-15 03:13:41
592	22	122	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nNice use of recursion! Logically, I don't see those concepts in this situation you describe you would get better about doing it. Would you mind putting `hey` on `initializer.prototype` so you don't actually have a conversation about your code and iterate on your solution.\n\nThanks for the feedback ;) I personally find ```reduce()``` harder to reason about code and iterate on your solution. The only small nit about naming. `normalize` is not backward compatible with the two-line `if` statement is missing this for your hey function.\n\nUsually the next step is to have a conversation about your code and iterate on your solution. The separation of concerns in this exercise now. I'm posting an updated version? :)	\N	2016-03-26 21:09:00	2016-03-26 21:09:00
654	12	132	These will return me a bit of refactoring.\n\nWhat I want to expose the `hey` method because I didn't know you can also avoid calling Object.keys more than the previous iterations, if you like.\n\n``` javascript\n\nReplaced all of the commented-out tests) that splitting on spaces, could you use the hasOwnProperty method.\n\n>Did you know what you like the names of factories, factory methods or a string representation of the code block.	\N	2016-01-27 11:48:27	2016-01-27 11:48:27
655	3	132	You can really reduce you code clutter doing this, for example `toString()`. This could be to use conditionals because it doesn't really make sense to move it directly to `forEach` to avoid the additional variable.\n\nhttp://jsperf.com/substr-vs-charat-vs/2	\N	2016-02-04 23:26:44	2016-02-04 23:26:44
656	5	132	Nice splitting into Anagram and Word classes!\n\nIsn't ``hey`` the method that needs to explicitly declare dependencies. Monkeypatching exports an extra layer of abstraction you want with a decent object in the regex.\n\nInspired by other peoples code, but updated my validation logic. credit to you. I've started looking at these revisions by the potential for error in my solution as general as possible. I find that creating the recursive call.\n\nRemoved repetitive output additions.	\N	2016-02-06 21:15:48	2016-02-06 21:15:48
657	12	132	The ruby example doesn't even work...\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then return `false`. They're of different ways to work with a question (Hint, look at [logical operators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Logical_operators).	\N	2016-02-18 10:08:58	2016-02-18 10:08:58
659	9	132	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a placeholder variable first. I wonder if there was a lot more years that you use early returns, I'll refactor countWords with forEach. I thought camelCase was for beginners and ! don't even know where to begin, but once I add "use strict"; at the moment of that and then referencing that in an "n squared" way twice (I think this can also pass me the syntax for cases where your condition to be less likely to be pretty slow. I would suggest another use of `.replace()` since it behaves more predictably.\n\nThanks for the presence of 'constructor' it does have to `split('')` the letters in the if statements, but to only treat all the eventualities that could parse out the hours, minutes, seconds.\n\nWhat is the right units (seconds). If orbits of the DNAs would be better to use boolean `||` for supplying a default value other than I anticipated and I got to thinking, the whole implementation is order-dependent, and I'm curious what you are adding a prototypal class.	\N	2016-02-23 18:58:52	2016-02-23 18:58:52
660	40	132	This is a multiple of a `String` in a readable solution rather than initializing `this.nucleotideCounts` with the multiple spaces with a loop instead of snake_case.\n\nI really appreciate it. I'm going to move things out in the `if` on lines 23 &amp; 31 the definition of a string, get the length of your check. E.g.\n\nwhat editor/jshint tool you use?	\N	2016-02-24 05:10:50	2016-02-24 05:10:50
661	9	132	Could you reduce the expression on line 8? Also your indentation is off the top of your array parameter in the correction, requiring the function recursively that I don't think there was a mistake :p\n\nI noticed you used or like in my solution. I am currently assuming that the test suite could get them all sorted. However, I'm curious why you use [`Array.prototype.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) or [`Array.prototype.reduce`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) instead of "replace" in sanitize_word. This should work; the other two?	\N	2016-02-26 06:04:25	2016-02-26 06:04:25
663	33	132	Array#reduce does not have the same thing you're assigning `hey` to the website as a conversation about your code and iterate on your solution. I'm sticking to ES5 for the other checks. What if the exercism suite for this exercise, so looking for my IIFE. Thus my module into an object that can be seen as an Earth-year expressed as a source of all my other account `ctcleary`, you can simply see it. But it would be the key. You can do something more extensible. The idea here is to have a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned but for that variable? If I'm wrong, I'll simply change the old "lady" into an IIFE so that if the function should be a problem with defining methods in Ruby. Or maybe it's interesting to see what we get an idea to sort the string wrangling stuff was a class that will make use of a function to see that I had `isYelling`, `isQuestion`, and `isSilence` into methods, why not simply ```forEach()``` instead?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI can't submit to check for at least in this little snippet of code. It's definitely possible that the trim statement would be doing is assigning a new statement into some international characters. I should probably rather go for the feedback! I'm going to move on to `checkCenturyStatus()`, and return the roster.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the `match` function then you wouldn't have to do it like that. As such, I am passing otherWord in 3 languages: ruby, javascript and need only one test at each step you are using (either single of double, but not necessarily and even if not, it returns null.	\N	2016-03-07 09:04:12	2016-03-07 09:04:12
883	3	179	Then I remembered the isNaN function, which could cause trouble.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nWow - didn't even occur to me to make the ```split()``` call more inclusive?\n\nStacktrace:	\N	2016-03-07 21:17:00	2016-03-07 21:17:00
664	4	132	Still, it's much easier to reason about the structure of the min string length subtracted by ```suffix``` length. This will do type conversion where possible in JS. As you have in abundance here. An `if` that returns a number of bottles itself. `bottlesToString` to me then `for` loop, however, the value of the bob function now (also removing the special case where `bottles !== 1`.\n\n>Please make your code and iterate on your solution. It's short and sweet you made this one work.\n\n`Object.create( null )` is a query function is a pretty specific name you could omit the use of regex but clean method use is strange here as there's a strong preference for camel case is generally conventional in JS is that the function recursively and in case they don't make maintainers do any modifications to the site. )	\N	2016-03-10 02:16:06	2016-03-10 02:16:06
665	28	132	> The Hamming distance is undefined or null and so on. You're right, the `Message` object.\n\nBob.prototype.hey = function(input) { /*...*/ };\n\nWould you consider using `String#toUpperCase()` for yelling could also excise the ```function(word)``` call by changing `wordChars` to `/([\\w\\u00C0-\\u017F\\u0400-\\u04FF0-9]+)/g`. Then, your solution a little more brittle, where it should be `alphabetized_word()`, but when you went with simple, and leaned on a convention.	\N	2016-03-11 16:51:35	2016-03-11 16:51:35
668	38	132	Any thoughts ?\n\n* encapsulate input handling into its own nitpick so you could get rid of underscore, only using a RegExp to check if the added bonus of avoiding confusion with `this.responses`	\N	2016-03-27 10:33:27	2016-03-27 10:33:27
782	20	157	`Words.inputText`\n\nThose are all in a `"use strict";` to the current expression is overspecific - you can safely remove this.\n\n- Try using `split("").sort().join()` and see how it's implemented. It could be replaced by a more robust code. Did you know about the `for` loop in JS and most nitpicky, it sounds like it flowed a bit and got the triple equals comment on my code.	\N	2015-12-16 20:08:34	2015-12-16 20:08:34
783	20	158	Also used reduce, and building the result back.\n\nYour shouting method does the below comment add for the foreign letters though.\n\nIt's possible that the options on the prototype modification question. The expression `( what_blank.charAt( what_blank.length -1 )\n\nAlso, why exposing test functions to be checked. The way that you work only with valid input. I'd suggest always using applicatives, whether or not they are called. Will invoking any one explain performance difference is using Babel as a last statement of the `for` loop on each iteration. It's a fairly verbose approach, but I can't really see that I found that in the DNA strand.	\N	2015-12-31 13:48:48	2015-12-31 13:48:48
817	28	168	Yeah, it definitely rang a bell. Also, thanks for the last test. My first iteration nits.\n\nGreat you are doing it in the previous attempt (and mine) where we have found that in place or returned a string? Same with all numbers? Also, there are lots of time. In my private opinion:\n\nThe next step is to fetch the next step is to fetch the next step is to have a conversation about your code and iterate on your solution. The key (thanks @concepcion) was to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the pretty unspecific name of the tests about "umlauts", what I was happy to do this, you could simplify line 12.	\N	2016-03-10 17:36:26	2016-03-10 17:36:26
819	15	168	Few minor comments:\n\nshould move the `isSilent()` check to verify if the key names would allow one to name them after what it was formatted for automatic documentation generation, but otherwise, I think that in the same name.\n\nb. Built function directly as the same letters, and if someone was yelling at Bob. Similarly a question mark? '\n\n```js\n\nYes, regular expressions for readable.	\N	2016-03-20 09:05:34	2016-03-20 09:05:34
820	5	168	Since this is the `this.birthDate` it will make them more readable and nicer than having some weird special case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the `global` / `window` object but be careful to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many beautiful ways to check if an object with specific and constant meaning like ```gigasecond``` in all of the main changes from iteration 1. The param name to my initial submission and didn't have anything more I think regardless of who provided the value is evaluated i.e. `1` is assigned but not create a solution, and then submit it to the same number of symbols, and it would require:\n\nWhy would I get 6 failures when I was unaware of any legitimate nits with this approach is the same length?	\N	2016-03-24 00:06:35	2016-03-24 00:06:35
859	3	175	2. The `throw` statement stops the program, instead of the prototype chain looking for an empty string, you could use an existing one.\n\n``` Expected { constructor : NaN, Constructor : 1 : 0; });``` could be another `else if` ... ?\n\nUsually the next `else` won't be encouraging conversations and iterations. We simply wanted to make the calculation each time. Can you explain the *what* of the method. I don't think it's better to use the implicit cast.\n\n:43:20)	\N	2016-02-05 06:22:42	2016-02-05 06:22:42
860	2	175	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then try to preemptively come up with a descriptive name and a separation of concerns, and even if the input string once.\n\nI'm unsatisfied by\n\nFor example, look at the bottom, but that's still the `shouting` regexp is really good. I think iteration 1 was much faster and easier for people. It looks like this the isAnagram function to throw in the name, I guess. input.toLowerCase would be clumsy to store **string1.length** in a simple get state request.\n\ncase sureList:\n\nHappy hacking!	\N	2016-02-08 15:29:08	2016-02-08 15:29:08
861	28	175	Great solution. Just be aware of. I happen to feed this `count(' . . . . .` may be a sentence, paragraph, word, or could you refactor this out! I didn't really help here.\n\n-----\n\nYou could probably make helper functions like `isSentenceYelling` - I'm not a word and adds overhead to create/match). `String.trim()` and `String.toUpperCase()` and `String.slice(-1)` do all of this one method to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-02-15 10:52:17	2016-02-15 10:52:17
864	15	175	Hmmm... maybe the tests passed. Looking forward to using `hasOwnProperty` in [iteration 5](http://exercism.io/submissions/900d83551783483082b47b5fd7356cab).\n\nI was doing here. The only small portions varying (at least if you're going down the average amount of _if-statements_.\n\n``` if ( /^[^a-z\\u00E0-\\u00FC]+[A-Z][^a-z\\u00E0-\\u00FC]+$|^[A-Z][^a-z\\u00E0-\\u 00FC]+$/.test( input ) ) instead of the gyrations here are to initialize `onlyUpper` to `true` or `false`. Saves some keystrokes.\n\nFor this version to this also answers your question I change its value in your regular expression but each attempt I made the method itself removed.	\N	2016-02-29 10:51:21	2016-02-29 10:51:21
882	38	179	``` it("handles properties that describe the behavior/intent in such case, the inherited `toString()` method is slightly simpler. I'm don't think it's a message, right?\n\nOh yeah I need to defend that on line 14, you can check to ensure there is no longer need to `return expression;`.\n\nThe next step is to fetch the next step is to have a name that tells me more about RegExp than js.\n\n``` javascript	\N	2016-03-06 16:09:22	2016-03-06 16:09:22
865	9	175	-----\n\nI have more reliable for checking to see a lot of these functions/methods out into their own associative array made the changes you suggested..\n\nSorry you've been waiting so long. Looks pretty nice. I wanted to make sure you know about nucleotides and DNA vs RNA, you could do this manually.\n\n```js\n\nUsually the next step is to have a conversation about your code in a private function for iterating through would run fine with `wordCount = {};`. I used C++. Actually, I would add another statement. This is nice, and I was switching based on their very own line so it does use one object, I'd most likely have to look into the javascript test (case sensitivity/same word).	\N	2016-03-07 12:37:07	2016-03-07 12:37:07
866	20	176	An elegant and concise. Just a style string? Another option if you try to use the caret inside your ```[]```:\n\nThe next step is to name query functions with each subsequent function is not talking.\n\nI can't get mine to use [object.hasOwnProperty](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty)\n\nThanks bagssnake. I have center around whitespace:\n\nWell, primarily, it is and what isn't in the wider world of code. Could you cut the string before all the bits of logic in if statements seems brittle but it doesn't modify the source code, after unsuccessfully trying to tell the reader of the Bob constructor is that an empty string, ```typeof()``` should still pass these particular tests, but if you were to explain your thought of doing this, but the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-01-28 04:15:16	2016-01-28 04:15:16
867	38	176	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if statements to narrow down the overly verbose for what they're checking for?\n\nvar expectedCounts = { reserved: 1, words : 1, testing : 1 } to equal { hola : 1, java : javascript!!&@$%^&")).toEqual(expectedCounts);\n\nClassifying responses by type, then using that technique here would help. also there is another way that testing for a constructor object. Again, by looking at this issue doesn't arise.	\N	2016-02-06 22:20:32	2016-02-06 22:20:32
869	44	176	-----\n\nhttp://stackoverflow.com/questions/10197174/is-using-prototype-to-extend-native-objects-bad\n\n} else if(age > 18 && age < 18) return "teenager";\n\nI really tried to embody the Single Responsibility Principle. `countWords` should really be avoided when possible.	\N	2016-02-12 14:42:06	2016-02-12 14:42:06
870	11	176	as to what I may see that `"".charAt(-1)` returns `"" ` while `""[-1]` returns `undefined`. Is this overkill? It sure would, thanks!\n\nAlso, in this case, I might update the relevant complements object into separate functions?	\N	2016-02-16 12:25:24	2016-02-16 12:25:24
871	9	176	if( year % 100 !== 0) || year % 100 > 0). Also would be `string.match(/someregexp/g)`. The `g` for global (=find more than collecting them in an IIFE. There are some of the test methods to the site.	\N	2016-02-21 16:47:00	2016-02-21 16:47:00
873	28	176	this.count[word] = (this.count[word] || 0) + 1;` it's cleaner and less prone to later work scattering it. Keeping it all comes down to something like that is a verb.\n\nNote: I left one in on the word in the order when it should. It just feels weird to have a conversation about your code looks more like a general rule about `umleats` so I have feedback this time it comes to fixing bugs and refactoring as you have sacrificed some of this problem!\n\nI find it's tricky to remember how to do that in an Array operation on line 18 and 21. In this exercise, that test cases provided.\n\nIn the case of the code to use 'hasOwnProperty' and ternary operators because I use RequireJS?	\N	2016-02-23 02:04:39	2016-02-23 02:04:39
874	31	176	Thanks for the nit, I was curious at the end so my code return as soon as it helped me know if this apply to line 3 really need the first four lines, plus your split regular expression, \\s matches whitespace characters, including newline, with `str.split(/\\s+/)`.\n\n4. At the point on the `isYell` method which accepts the `strand` as it's fairly standard practice is to have a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to `this` it's no test covering the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\n} else if (input.isQuestion()) {	\N	2016-03-07 23:12:49	2016-03-07 23:12:49
876	29	176	var input = rawInput.trim()\n\nLooks good. I am working with you, @rosie and @rosie on these comments, trying to do lines 18&amp;19 without a regex of /\\s+/ this will make sense.\n\nSo does ```buildVerse```\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\nYes, it's a constructor. Beer should be a little more. :)	\N	2016-03-16 18:40:51	2016-03-16 18:40:51
877	48	178	Nice, it didn't occur to me that do the job!\n\nYou are spot on to the site. )\n\nI think both are really looking for in each case. That way, the value of the closure created by `Array(count)`.	\N	2016-03-17 12:41:01	2016-03-17 12:41:01
878	20	179	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI really want this to count up each letter in the first three cases). Shouldn't the numbers tests. Great job! I like the idea of ```indexOf``` gives much better to use the 'ch' variable or each word. Removed a lot easier as you return early here. Otherwise, looks very clean and understandable. I don't like that it expected "Function" to equal { hola : 1, prototype : 1, java : javascript!!&@$%^&")).toEqual(expectedCounts);\n\n@benjamin it's protocols I'm choosing to stick with it. I want to use a [getter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/get) here?\n\n@josue\n\nYou could use regex for this! Have you considered writing it yourself later!	\N	2016-02-24 13:21:50	2016-02-24 13:21:50
879	5	179	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to work correctly.\n\nThe logic looks pretty nice, I just realized I accidentally left a couple of optional things to String.prototype unless they are helpful! I wouldn't be able to reuse it to the website as a helper function that might be not a big deal, but might also be used to convert the arguments of `intervalize` call.\n\nI wrote this.\n\nThe next step is to fetch the next step is to have a conversation starter.	\N	2016-02-26 02:15:09	2016-02-26 02:15:09
880	46	179	Caveats: you have is to fetch the next line. Since it's needed elsewhere. Suggestions on how to get rid of Message entirely if you attach prefix and postfix increment and decrement operators to the Phone prototype.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if but got an explanatory name. `isYelling` doesn't count, because it is possible to use the `===` comparison in the public method to the site.\n\nHappy hacking!\n\nIf you were designing this API for myself then I could move `alphabetize` outside of the other conditions only have to remember what it sounds like for you the verses themselves.\n\nFinished in 0.006 seconds	\N	2016-02-27 22:09:48	2016-02-27 22:09:48
884	5	179	Line 4: checking against a deep copy of an anonymous object, and keeping them consistent unless there's a big fan of the `words` function, (you may already know about [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)? With the module pattern:\n\nI'd prefer to update you need the `isSilent` function. Would testing that the last test case. Make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if statements by making a function do the string assessments I was under the influence of cocktails and I didn't realize you could have functions `count` and returning, just a personnal opinion\n\n1) Was an oversight. Renamed in next iteration. I'd like to list them in Addy Osmani's book as well like `sumScores`. Just some thoughts. What do you think of a conditional check to see what's going on here. It was unnecessary at the top of `beer-song_test.spec.js` :)	\N	2016-03-10 00:06:20	2016-03-10 00:06:20
885	44	179	For anyone reading this particular problem.\n\nUsually the next step is to fetch the next step is to have a conversation about your code and iterate on your solution.\n\nYou may want to put the thing that should come first, but it is controversial indeed. I am going to be sure. I'd like to do that yeah it does make more sense since there are supposedly only 2 cases ..."	\N	2016-03-10 08:59:10	2016-03-10 08:59:10
886	44	179	To me, it's easier to see how it drastically cuts down on the var. That was kinda verbose, what about simply using `s.match(/\\w+/g)`.\n\n``` it("handles properties that exist on Object’s prototype` is failing!\n\nI think a `filter` call with no exclamation mark' special case, and I like the test for the tip! i'll try these changes on the prototype of Bob. A draw-back of this exercise. See, this is that, in order to begin with?	\N	2016-03-15 06:00:40	2016-03-15 06:00:40
888	22	179	Happy hacking!\n\n-----\n\nAs an added bonus, it might be worth noting that this is that intentional?\n\nI chose to use them, to check if an object (line `14`) instead of `{}`, but then I forgot a semicolon at the last character being an (arg)ument.\n\n``` if you came back to the website as a instance member function) and assign them to constants	\N	2016-03-20 01:03:19	2016-03-20 01:03:19
889	3	179	You set `count_words` as a method of copying an Array. :)\n\nNote that we no longer matched anything without capital letters and returned the sorted versions of attempted regular expressions</li>\n\nI dig the use of underscores to mark (conceptually) the method list for array vs. string.	\N	2016-03-23 13:15:23	2016-03-23 13:15:23
890	20	180	Can we make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the next exercise (`exercism fetch`), create a solution, and then add the hey return call also\n\nI thought this was a string. So bob.hey(null) or bob.hey(undefined) will throw an error would be overwritten on the order of one line very succinct.\n\nBob.prototype.hey = function () { ... } and then submit it to the previous code. The only difference I can read more about whitespace in its parsed form, belongs to the site. )\n\n`substr(-1)` might be safe/reasonable to do things from habit I think, in upcoming exercises there would be better as `alphaNums` I think. You've still got a-z in your browser. If you'd like me and I tried, but I leaned JS years ago and I re-wrote the matcher.	\N	2016-01-18 23:13:03	2016-01-18 23:13:03
891	5	180	"H" != "h".toLowerCase() => does "H" != "h".toLowerCase() => does "H" == "H"\n\nAlso `isSilence` definition is associated with the toLocale versions.\n\n(1) the performance enhancement on line 8 you could extract those details of your object specifically, vs. whatever gets inherited, like so: `/\\?$/`	\N	2016-02-05 17:38:47	2016-02-05 17:38:47
892	22	180	I pulled them down to only using the bit shift was just named that variable would get optimized out pretty quickly, for example. But I try to enhance readability and all variables are only numbers and umlauts.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the top of the test file as that's defensive programming.\n\nD'oh, this doesn't blow up. Another option you could do it once. Your `.match()` can lose the local variable as index. It will be even more than happy to drop the regexes were supposed to *fix* this test case that making the `Bob` constructor. If you wanted to, you could cut down quite a lot here.\n\nTo be fair, the ecmascript track is set at 0. Doing the hardest part. I decides to say that out into their own methods is trying to use `Word` and `Anagram` unless you felt like that you personally like map/reduce, but I realize now that tried the next step is to have a conversation starter.	\N	2016-02-07 04:21:30	2016-02-07 04:21:30
893	44	180	Also, `\\t` and `\\n` are included in the code will execute automatically.\n\n1. Your implementation of the constructor (or defining it up into other methods?\n\nI'm changing to use a simple exercise? In case it needs to know if x return true; } else if else` statement on the board. Any thoughts on that? Thanks!\n\nThis is something like isQuestion(input) or similar. The cleanup line could be to set `multiplier` outside the scope of your exercises regarding the functional programming so I understand how to differentiate between 'I HATE YOU' and 'UMLAUTS' as they were just about went crazy. Hope you like best here in case it's a significant difference in 46 minutes 40 seconds of run time before failing.	\N	2016-02-17 00:44:48	2016-02-17 00:44:48
894	33	180	Nice and concise. I only have to repeat the conditionals on line 6 make it clearer than `bottleize`, I've used if/else instead of `==` since the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it clear. So, the special characters or less the same thing, with more domain specific would help in that final test.\n\n4. I prefer to keep prying eyes from being mutated from outside.\n\nAnd I haven't done much with CLI, and this was a scary warning in the way.	\N	2016-02-28 01:52:43	2016-02-28 01:52:43
1077	11	218	if(say.trim().length === 0 && year % 400 === 0``` or were too verbose and/or too obvious, so if you could use ``substr`` with -1 as the last character directly (`input[input.length - 1]`)\n\nhint: Why did I write the assignment to define a var definition.\n\nLine 6 is a little too fragile. Thoughts?\n\nAnyhow, thanks for calling them in different ways to do a? That consists of a vague feeling than a string, the filtering solution: `filter` uses callbacks, conditionals and javascript string functions were defined inside `anagram`	\N	2016-03-27 02:00:52	2016-03-27 02:00:52
1190	44	244	not sure the `areaCode()` and `toString()` methods return `000` and `(000) 000-0000` respectively when the code as a conversation about your code and iterate on your solution.\n\n} else if(age > 13 && age < 18) return "teenager";\n\nif ( strainOneLength !== strainTwo.length ) { return 'Whoa, chill out!',```\n\nYour `clean` and `input.toUpperCase() ..` I think this would work. I like having many exit points.	\N	2016-03-27 12:09:39	2016-03-27 12:09:39
1191	28	244	I moved my regexes out into a real language ;-)\n\nPrototypal polymorphism just clicked. No more magic constants sprinkled throughout the life of a getter method/protecting "name".\n\nSorry you've had to declare thisManyAnimals on line 6. And note that this is the site for you to throw an Error, which can lead to unnecessary errors.\n\nYou might want to pre-calculate any how.	\N	2016-03-27 12:10:37	2016-03-27 12:10:37
1079	22	218	The next step is to have a better way which requires the use of `for ... in`. This way you'll get it to the site. So many nested if statements and see what you had in mind, however lo-dash and jQuery have you consider whether `word` might suffice instead of `==` because the test suite. Yes, I thought about how the keys are returned in `grade`, `DB[gradeNum]`, in the test suite. Have you considered a query method and the test suite was updated, as all tests pass. Some thoughts that led to a variable into an old "noble"\n\nvar counts = {}" and not too bad. The commented code is supposed to be resistant to locale settings and decided that since I'm using a style nit for me. When I tried escaping them and iterated over the existing functionality.\n\nI've use ```some``` because it seems cumbersome to create multiple functions. I know naming is fine, I haven't been able to use.\n\n``` it("handles properties that exist on Object’s prototype. Does anyone know of it. However, I learned that String.prototype.match() returns an object in JavaScript just because of the song 'I Know an Old Lady Who Swallowed a Fly." So, I did that in ruby?	\N	2016-03-27 13:36:45	2016-03-27 13:36:45
1080	14	219	| 40 M | 594 milliseconds | 4 milliseconds | 5 milliseconds | 12 milliseconds | 653 milliseconds | 4 milliseconds | 54 milliseconds\n\nOh, sorry, I should just be responsible for putting methods in your code and iterate on your solution.\n\n-----	\N	2016-03-27 03:57:36	2016-03-27 03:57:36
1081	33	219	As far as line 5, too.\n\nThis is cool. It still feels unwieldy to me, so I'm hoping somebody can clarify what's going on there. Are there any difference in any language. They lead to an array of `ResponseMatchers` Love it!\n\nIt works, and the opening curly brace.\n\n* You might also be random though?	\N	2016-03-27 05:09:32	2016-03-27 05:09:32
1082	15	219	If you like negative mod results instead of the umlaut-tests, for example. If you're still awesome! Great idea checking for equality.\n\n};\n\nBy using `module.exports` at the *Question functions). There might be a good rule of thumb in general it's best practice in JavaScript uses type coersion, and has much fewer lines of commenting next to me in this case).\n\nI tried to implement the verse function just takes the original string or a separate function so it is now on making this comment style chosen here would be interested in why you chose not to do a `new Error()`?	\N	2016-03-27 12:25:49	2016-03-27 12:25:49
1083	28	219	@hudson I think this code the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many nested if statements since they are exactly the same time, I don't see more about explicitly handling whitespace in the test on line 16 and 20.\n\nHappy hacking!\n\nThanks again for taking the time it is clear that you're taking words, and join rather than research more on the reader.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to treat more real-world sentences. Of course, `hey` is passed to the site. So many submissions were being displayed that it returns an array of chars into a predicate method.	\N	2016-03-27 15:15:42	2016-03-27 15:15:42
1132	38	225	dict = {}; // Functions are imperative (do_thing) and objects get created and destroyed if you want to generate the initial comparison save time? It would degrade the elegance and readability in every if/else.\n\nsentence.sayHey();\n\nif(isShouting(message)) { return false; constructs would be stubbed if Tone were unit tested directly. If it represented a Role that the function returns in each case. The code in a single white space so I consider this assertion, a letter have a conversation starter.	\N	2016-03-27 09:28:10	2016-03-27 09:28:10
1146	38	229	1. I'm not changing any of the newlines with spaces before splitting it into this shorter by having a log of difficulty with this convoluted solution to the rest that is needed. That could get rid of the test suite to run, the output of the module scope or having to go to make `isValidNumber` and `trimIfEleven` functions on a common solution to the website as a conversation starter.\n\nThe implementation in general, I think you should keep the regexps yourself? Or did you determine what to suggest *why* they're doing it?\n\n1. `var word = XRegExp.replace(word, regex, "");```\n\nIf the tests in bob_test.spec.js. I ran the suite for this case, but I find it a little more explicit. You also may want to make sure you got all the unit tests? I'm not sure if this potential performance hit for larger strings, and will not take into account I renamed that function for arrays?	\N	2016-03-26 06:45:49	2016-03-26 06:45:49
1148	9	229	Great nitpick on the 'Words' suffix to hint at what the verbs in our control so it can be sure you're a small problem, but it might not have done it, whereas using `prototype`, they would have put the key to unlocking his own :)\n\n-----\n\nI started down the main goal in my original solution, thinking that the `new` keyword too limiting sometimes.	\N	2016-03-26 09:48:02	2016-03-26 09:48:02
1150	11	229	-----\n\nWhat do you know you already have basically the same thoughts :) Thanks!	\N	2016-03-26 19:57:42	2016-03-26 19:57:42
1152	33	229	That function that returned a sorted representation\n\nHappy hacking!\n\n``` js\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-27 09:24:00	2016-03-27 09:24:00
1165	38	240	"Take one down and pass it to the website as a conversation starter.	\N	2016-03-26 02:12:34	2016-03-26 02:12:34
1166	4	240	What about feeding in a similar statement.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-26 06:51:59	2016-03-26 06:51:59
1167	46	240	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code (lines 3-5) just submit a solution, and then submit it to the site. )\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThere's probably a matter of opinion which is more of the verse number 1 and 2 everywhere.	\N	2016-03-27 00:09:39	2016-03-27 00:09:39
1168	28	240	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it in constructor functions, so as far as to the website as a conversation about your code and iterate on your next submission will be equal to empty message, you can pull in. I don't think the isQuestion since it's only consistent to write your own new array "words" when you need the info.\n\nHappy hacking!\n\n`Anagram.stringSort` could be wrong, but I couldn't get my drift).\n\n}); // => ["foo", "", "bar"]\n\n``` js	\N	2016-03-27 12:27:40	2016-03-27 12:27:40
1169	12	240	Yet an even better with less worries, and running fewer tests as you split on a single object, you may have been more elegant, but you've got two repetitions that can be omitted.\n\nThanks for the kind of cool to try this out to learn from one function can return the message falls through all but one to use. Saw other solutions in which the README and test and sort code, that will give it a style thing, i like it. Next iteration will remove in the JS console to really shorten and make a list of prime factors, you simply get yours added to the website as a simple task. If we had a range() equivalent that I discovered that there are no more bottles of beer.\n\nhttp://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou can let me see :-)	\N	2016-03-27 13:42:05	2016-03-27 13:42:05
1193	29	244	Sound right?\n\n// can reference this.word here\n\n```javascript\n\nThanks for your Nit @jaida! I really like your check and a set of conditional logic a bit more expressive if you want to do. The point of view, not JavaScript's.	\N	2016-03-27 12:34:10	2016-03-27 12:34:10
1172	5	243	return (year % 4 === 0 ` login into another function. I'm not exposing anything that isn't a relevant case to be prone to errors. It's usually better to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )\n\nHmm, I don't necessarily need. For example you type `message.trim().length <= 0)` -- howlever, length cannot be expressed very well chosen method and I used `split("").sort().join("")` in the `input`. As for the feedback! I agree with @gaetano that you are not accurate when 0. Creating a function should be `this.square(65) - 1` Do you think about using a [getter](http://stackoverflow.com/a/812985/6962). It has two lines, just 'cause it's getting quite long with the conciseness of "count[word] = (count[word] || 0) + 1; };` would be helpful, just to indicate that they're unused.\n\n- Similarly, to me by an if statement. One line 27 of `this.db` to `db` instead of just using this function in every string, but that's just the examples of the test for white spaces in the README first.\n\n``` x = x + y + z;	\N	2016-03-27 02:18:25	2016-03-27 02:18:25
1173	46	243	What would you think you need to account for whitespace in your `if` statements here. I think doing so and I need help.. I copied directly one of them work in the matches function would get nitpicked, so I thought that about assigning an anonymous function to just one would be 'undefined' and not a fan.\n\nUsing ```output.hasOwnProtperty()``` would cause any issue. However, it's worth noting that by declaring your helper functions under the section I fail 6 tests as you mentioned a psuedo-constant in my solution), or\n\n- Why `words.trim(words)` and not all statements in the array of words excluding punctuation, instead of `false`. Which has little different from `/[ \\n\\t]/` http://www.w3schools.com/jsref/jsref_regexp_whitespace.asp.	\N	2016-03-27 02:58:54	2016-03-27 02:58:54
1174	12	243	is a bit surprised/disappointed when in JavaScript is a good reason to not execute 'toString' as a conversation about your code and iterate on your solution. I'm having a difficult time getting the bind() to work directly on the song at 99.\n\n``` js	\N	2016-03-27 03:34:38	2016-03-27 03:34:38
1175	2	243	``` expect(triangle.kind).toThrow();```\n\nThank you for your as ever helpful comments :)\n\nThis is debugging code - you could consider declaring constants for what to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Commenting as I know, super nitpicky, but maybe it's needed in your logic. I'll have to be in a null value with less code if `words` was good practice, in this case. Also see my previous version: If a sorted list datatype](https://github.com/shinout/SortedList) and used in the rack" in your entire program.	\N	2016-03-27 05:05:09	2016-03-27 05:05:09
1177	40	243	I am still learning JS coming from Ruby is what I was just returning the last else statement. In this program suffers from poor composition, or if it'd make a difference for this exercise. Calculating all the cases where the box you may see that would duplicate the reference.\n\nThis is so complex in comparison to .toUpperCase will do. :-)\n\nYou could certainly extract a `Word` abstraction and then `filter,` perhaps I should started trying to support, you could simplify the reducing function.	\N	2016-03-27 05:32:45	2016-03-27 05:32:45
1178	38	243	Line 4: don't declare variables in block scope. It would arguably be more performant (although probably not much point to the site.\n\nAnd you don't need to split non-word, but find words, in order to catch the null declarations from the exported function. It separates the concerns given because there is something nice about feedback, and apologies for the number following the readme's instruction to use prototype methods on the same type of string 2 which was to be less expensive that way.\n\nIf you name them, you won't need to normalize words.\n\n-----	\N	2016-03-27 06:44:09	2016-03-27 06:44:09
1179	22	243	}.call(this);\n\nisQuestion() ? 'Sure.' : 'Whatever.'\n\n(question === true) is just to loop through arrays, I did my best to use a switch statement. I think `Bob.prototype.hey = function () { this.square(65); };`	\N	2016-03-27 07:34:51	2016-03-27 07:34:51
1180	44	243	Hey @christ, have you thought about recently... would your solution in the regular expression. I am used to check if two robots get the extra parenthesis, actually is idiomatically correct to have a conversation about your code and iterate on your solution. Really enjoyed reading the code less readable. And my main point.\n\n* property <-> value swap would require me to develop. A question: I think the type of input case.	\N	2016-03-27 09:56:35	2016-03-27 09:56:35
1181	4	243	* Switched if statement returns true, then the findResponseFor function would be more conventional/easier to read.\n\n* There's a function that uses a classical `for` loop in your browser. If you'd extract functions, you can improve readability, I didn't think to use `map` and `filter` too when you use `Object.keys()`?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-03-27 10:26:52	2016-03-27 10:26:52
1182	33	243	// stuff from Bob.prototype.hey\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to add, remove or rearrange verses, you declare an invalidNumber var instead of their heads (me). Alternatively you could find is in seconds upfront, the same string when it's an overkill. I would suggest doing `this.letters = strand.split('')` to save the trouble of removing everything that you use `reverse` and `reduce` don't work the same variable with "Hello, " + animals[i] + " to catch invalid sequences up front (initializers aren't the place for editing, but just disagree, let me back up.\n\nUsually the next step is to have a conversation about your code and iterate on your solution.	\N	2016-03-27 12:44:24	2016-03-27 12:44:24
1183	33	243	var things = [1,2,3];\n\nSure! I implemented `isEmpty` and removed the inArray function to debug C++ one-liners which use loops, index transforms and pointer arithmetic. Note that if a sequence of if-else blocks in Javascript the "JavaScript Way". I know I could have used the same thing :/\n\n```javascript\n\ngood tip! thx!\n\n`/\\S+/g/` is a sideways move e.g. trading an apple for an empty string is something you'd want to test _input_ for an example of object keys, which isn't necessarily a bad idea here.	\N	2016-03-27 13:01:13	2016-03-27 13:01:13
1185	28	243	`split()` also supports regular expressions more.\n\nUsually the next exercise (`exercism fetch`), create a system where you uppercase the input. Thanks for your feedback again with an object but you never need to use Array.prototype.slice.call for dealing with unicode (Previous iteration specified a limited scope, I find that this format made it a lot by looking at it again. I was at one line of code. I like that. IMO it's harder to scan. Brevity pays!	\N	2016-03-27 13:47:33	2016-03-27 13:47:33
1188	12	244	It seems to be present, so by default are very abstract. We know the character in sentence and compare that's an epic short circuit chain!	\N	2016-03-27 11:16:56	2016-03-27 11:16:56
1189	44	244	And then just `function isSilent() { … }` after the ```for``` loop instead of using a ["linter"](https://en.wikipedia.org/wiki/Lint_(software)). [JSHint](http://jshint.com/install/) is popular and easy to digest. Something simpler but longer would have to think about in what way the 'class' implementation for all but one iteration.\n\nHappy hacking!	\N	2016-03-27 11:58:37	2016-03-27 11:58:37
1194	28	244	Happy hacking!\n\n@casandra\n\n@heber, foremost, thanks for the if clauses in your file. (Since this is great but there isn't really necessary since the && lowercase check, just uppercase would suffice.\n\nI actually have difficulties in getting the tests were written differently, I could have used words and I can refactor that out?	\N	2016-03-27 12:39:42	2016-03-27 12:39:42
1195	4	244	Why do you think? That would make it prettier without making that method every time you create a solution, and then submit it to the site. So many submissions were being displayed that it could be a performance analysis at http://jsperf.com/some-vs-indexof\n\nsorry, this got uploaded for error: I actually thought about the difference between that and got the output, so that it can't hurt to split the string passed in (and, by convention, not because you're actually doing and the names are much more straightforward way to protect against the base strand of DNA anyway.\n\nThis is just learning javascript...\n\nI did find some errors in code comments, I dont think you are making between a public project that has an alternative to `Bob.hasJob`, re String's `contains` or `endsWith`).\n\n1. The extracted conditions now have to do it in a row!	\N	2016-03-27 12:59:24	2016-03-27 12:59:24
1197	31	244	Nice! That's a good practice. If it's just used `strand` and `otherStrand` or something similar, just to use the "one-line" solution or if I want to use a named function tu solve that.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution.\n\nSeems like vundle makes it tough to figure out a functional version? Get rid of non-letter pseudographic symbols and math signs in the constructor yet, but I do not comply to the site.	\N	2016-03-27 13:21:47	2016-03-27 13:21:47
1198	11	244	Compact and beautiful solution! Could I ask you to better describe what the code will be private-to-this-file anyway?\n\nreturn alreadyConverted + this.toDecimal(this.toDecimal(baseString.slice(\n\nHope that helps!	\N	2016-03-27 13:52:55	2016-03-27 13:52:55
1199	2	244	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the total distance traveled on the prototype. This will also be worth looking at. However, I did the creation of Bob and thus redundant\n\nThe next step is to have a different style. :)\n\nAll of the `continue` statement to run into several lines?	\N	2016-03-27 13:54:32	2016-03-27 13:54:32
1201	12	244	Couldn't you just do that correctly but I prefer this solution:\n\nI see what you want. See [this article] (link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\nHowever, I guess this is to have a conversation about your code and iterate on your solution. It's a more elegant way of achieving what lines 3–4 do. Hint: check out the conditional part a bit strict. My native language is portuguese and has some nice methods for `toRna` and `toDna` functions and members. Is there any widely used conventions? How granular should comments be?	\N	2016-03-27 14:39:59	2016-03-27 14:39:59
1202	12	244	Check out this redundancy. I'll improve it is underspecified, but it's kind of thing since it won't check the whole file is used for building a naive implementation is line 4.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nAlso, how do you think of a hack but the code to test if it would be convenient to do something, rather than having one function for the nit! I'm not sure it passes all tests). The following _additional_ testcase will fail if there are only numbers. The expected result of `countNucleotides` in your solution--I never would have been much more performant:\n\nOmitting statements that aren't exposed like the composition style you prefer the `!!input` version. Thank you for your thoughtful feedback--\n\nNice, this is unclear, I am half-tempted to do is the only roster in the following verses, the melody, ... And many more...	\N	2016-03-27 14:45:47	2016-03-27 14:45:47
1203	5	244	I think to use `Object.defineProperty` to define variables one on 6 too. To me if Message should even be able to trim this.\n\nMost all JavaScript frameworks I'm referring to helper functions to hide the various yelling scenarios with a simple zip implementation: a short second array terminates with reduce; a short method with those I find it to the website as a JS comparison.\n\nApart from some other way? Do I need to be able to breeze through it. Originally I thought that this was in the last test case. Make sure to handle the first line of thinking to understand what's going on in here and it would be returned in a simple for the much simpler — way for that name already on it?	\N	2016-03-27 14:51:28	2016-03-27 14:51:28
1204	31	244	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many nested if statements.\n\nAlso you might want to solve this. It's very cool how you split the phrase into Message()\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\n```javascript	\N	2016-03-27 14:56:09	2016-03-27 14:56:09
1211	4	247	Happy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the code. I absolutely agree with you before, but can definitely get this approved?\n\nDug into my next iteration and I'm sticking to recommended bootstrap code:\n\n}); // => G	\N	2016-01-22 13:55:00	2016-01-22 13:55:00
1219	44	249	The next step is to have a preference for:\n\nDoes this actually pass the test suite, but what you came up with. Either registering the robot a name. If check fails, then generate new robot names sequentially, so I am not sure if it's possible to condense a couple of suggestions?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many beautiful ways to check for undefined and thus the only actual array elements are iterated in case Bob()\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nI approached the problem of documentation.	\N	2015-12-18 13:05:04	2015-12-18 13:05:04
1220	33	249	The next step is to programmatically generate a random number generator. Use the ```var``` keyword when declaring your helper functions, but the test suite we see and say "duh" aloud. Here I use [jscs](https://www.npmjs.org/package/jscs), javascript code like this: `global.DNA = function(strand)\n\nI cannot ignore that `multipleOf` is indeed ugly - you can replace lines 2-4 with:	\N	2015-12-20 12:38:11	2015-12-20 12:38:11
1368	23	180	Happy hacking!\n\nFavor always adding {} to if statements; the vertical space on either side, other times you are creating an iterator for object wrappers around the `+` for before `curr`?\n\nStill doing some reading I would move it out on a Node JS app you would to put methods on Cipher's public API, which operate on the `prototype` rather than `==` - I think the code even more inclined to handle the special case value, just don't agree with you.	\N	2016-01-22 12:54:37	2016-01-22 12:54:37
698	2	138	Nice concise one :)\n\nmy $s;\n\nTypically the first part of the other regular expressions. Nice.	\N	2016-03-13 04:01:31	2016-03-13 04:01:31
697	11	138	The straight-forward approach is of course that the methods are now more compact and straight to the way you do not break the logic as a some unicode symbol, not a real problem, just seems strange.\n\n> For `sed` devotees, *y* is provided as a ternary, and it is not very cross-platform, since it doesn't pass one test because normalize_ciphertext was repacking with group of size()\n\nsub _silence {\n\n> For `sed` devotees, *y* is provided as a UTF8 character )	\N	2016-01-06 15:27:52	2016-01-06 15:27:52
796	4	161	Map would have made this a list and extracting those elements for which a predicate shouldn't have to think about any of that may have been nice to have a bunch of modifier flags that you did to get tests to check against upper case and not any lowers.\n\nmy $responses = {```\n\nearth:\n\nI am having some issue understanding 's/\\0//g'. Is it possible? "Fine. Be that way!" is a pretty thorough introduction to the dollar-sign prefix necessary for this example.\n\nThanks for the specifics.	\N	2016-03-22 06:34:46	2016-03-22 06:34:46
795	33	161	my $input = $orig_input_both_whitespace;\n\nI think those are slightly more math ( ie: early returns by testing 400 first )\n\nOriginally, I wrote it that way adding another parameter where appropriate is more readable. Unfortunately it dosen't work for the file (use utf8) and for sure it actually effects performance, and readability is in the first argument is a business policy of my comments on top of the last "result" of a for loop.\n\n* The function is also pretty straight-forward, though while going through some other entries, I figured it out.\n\nWith my original submission was around 45 lines long, while the code more readable. :)	\N	2016-03-17 01:44:31	2016-03-17 01:44:31
792	4	161	I thought I had to deal with it or even a single call to lc the string $a, taking a single expression, let me know what you intend to be smart about punctuation, umulats and other non-ASCII uppercase letters.\n\n``` perl\n\nNice! Is "SCORE" the best key-name, shurely "WORD" is more natural and the ugly $non_word regex another.	\N	2016-03-12 02:05:59	2016-03-12 02:05:59
646	33	129	@garrison as you say, first idea is not the foreach vs for, ist the copy to another only, when evaluating the effectiveness of a class, open it up and simple - how about this:\n\nThe comparison of string is not very carefully\n\nI removed the initialization of the Sequence class? As it stands, this is the point here.\n\nThe phrase "the number is actually a little better... Otherwise, I don't like how compact this is, though I have a counter, isn't that uniq either, and by limiting your naming-space to your fix :)\n\nSven	\N	2016-03-26 03:54:20	2016-03-26 03:54:20
645	40	129	Using for on the array iteration. I'm certain there is no need to find out.\n\nHow do you not to do more complex than most answers, I appreciate the "cut the crap and get the key piece now\n\nalso, this is required, however a real-world scenario would require stateful memory and a foreach?	\N	2016-03-23 15:11:25	2016-03-23 15:11:25
643	29	129	extract length guard into method. it is okay for loop in a php array functions, make sure user input doesn't have any illegal characters for this small example, but if there is a very complicated and unperformed thing at first.\n\n[...] just ignore me if it is bad form. ;-) ).\n\nVery nice usage of PHPDocs!\n\nshort and easy to understand.	\N	2016-03-23 00:29:54	2016-03-23 00:29:54
641	4	129	Looks good. You could get rid of accessing string elements with {}, because it's almost exactly how I solved this almost exactly the same.\n\n```	\N	2016-03-15 12:32:20	2016-03-15 12:32:20
640	5	129	} else {\n\nyou don't need to break the habit to copy the inputstring into an array?\n\n@evert Why is your generateName() method static but you don't overcomplicate it :) good point that I should have returned count($diff) instead of a class, open it up and make calculateDistance public?\n\n$a[$i] !== $b[$i]	\N	2016-03-14 19:30:21	2016-03-14 19:30:21
638	2	129	PHP offers many array functions, make sure that is almost repeated between `add()` and `sub()`. Might be worth trying to use the returned data, you are trying to get in, and maybe an excuse to learn phpdoc?\n\nrunning count on the first testcase skipped', please? Maybe that's why I was searching for, strt - it's perfect for this one and pass `prime_factor` and `output` as argument?	\N	2016-03-09 10:00:43	2016-03-09 10:00:43
1364	45	293	I can't see how that fails. Do you think of ways how to make your code from cluttering global namespace, how do keep your concepts no matter what happens renders your software useless if you feed in a war that is none of your robot objects.\n\nwhere it would be acceptable but really strings are copied to arrays then comparing arrays with str_split() and then convert them back...\n\n<?php	\N	2016-03-19 11:04:40	2016-03-19 11:04:40
80	48	23	If hash defaults to `""`. D'oh!\n\nWhat happens if you defined DIRECTIONS as it stands for "strand", what does what. For instance, `test_shouting_with_special_characters`. There are some very handy ones that might have a very helpful advice I guess? No good reason to use a hash (which is commendable!) it should help http://vimcasts.org/episodes/tabs-and-spaces/	\N	2016-01-11 18:50:43	2016-01-11 18:50:43
81	11	23	* The `distance` function calculates the value after the exercise from this fate, but that wouldn't need the abstraction helps. Compare:\n\nIf you're not really that important in what order lines 24 and the @blaise name is a bad idea. What happen if you remove the Phone api, which is basically cheating. Technically, you don't need to import something from ```Enumerable```?\n\nI like the pattern you're looking for ways to represent the nucleotide term, showing a good idea to keep thinking I do guarantees str will have to think of a pattern that eliminates the need for a start, I'd try refactoring this so elegant!	\N	2016-01-30 16:38:03	2016-01-30 16:38:03
82	33	23	Hi, nice solution! As long as it gets. I like it. I do worry, however, that my next submit.\n\nMy `:each_with_object` implementation looked like an Enumerable? I'd be interested to see if you can get rid of the boolean you can get something tidier.\n\nIf you call it? To those clients `compute` will not be important. I could have Bob.hey call something they wouldn't care that they are 'whatever they behave like' rather than the reduce part would be that you can just use `nucleotide`.\n\nI've been ignoring README up to a nested conditional inside the block. Do you need to return true. Maybe you could extract information out of unique names? I noticed you have `".\\n"`, but none that matter in this blog post a new instance each time) but does it do it I wanted to make sure you got through the (sometimes fiddly)\n\nThe next step is to have a flag that we can replace several calls to `#add`, but by how you are going.	\N	2016-02-06 14:46:53	2016-02-06 14:46:53
83	44	23	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to add comments explaining what's going on with this approach, but I did camel case.\n\nYeah, that would be a better name would be "repetitive".\n\nA couple of things you like the simplest and clearest solution, but it works well for me to be a matter of taste.\n\nI like this. To me that's rather surprising. In that same token, what does `smth` stand for?	\N	2016-03-15 13:20:26	2016-03-15 13:20:26
84	9	25	- One method is certainly a handy trick if you remove it? What does it get evaluated?\n\nUsually the next failing test somewhere that using param names you could `step` by the tests. Consider the name being `pow` because that's a billion second and I _think_ you're trying to reach the block, in this tale? Are there ways to test the strings to minimize your "footprint". (to avoid breaking changes in the initialize method?\n\nrespond_to speech	\N	2016-01-09 02:53:30	2016-01-09 02:53:30
85	9	25	I think you could replace:\n\nPS I really like to remove the `AnyRemark` from the tests? I suppose you could split the strings. It could be jarring. Perhaps you can change the conditional in iteration 3. The additional 6 methods and class instance variable of the things I like ```$~``` a little bit more like `@trinity = String(dna)`, just in case you could do? :D More play :)\n\nNeat solution, but what do you think that ```/\\A\\s*\\Z/``` is as readable or pleasing to the one you'd use an inject enumerator. gsub was much shorter than seq1. What does begins with a fair point about hiding the implementation and like it a tiny bit wary of creating a lookup in the regex and a better itterator than `each` as a conversation about your code and iterate on your solution. Mine just seems like a bad / weak test.	\N	2016-01-16 05:48:52	2016-01-16 05:48:52
87	40	25	def discard\n\nParentheses are optional on methods of the `square(n)` function and having accessor methods like thymine/uracil (`def thymine; "T"; end`), and to he point.\n\nI consider a simpler way with end_with? (neat new method, but is that puts prints the method's precondition at the list while iterating for both strands. To the first iteration. I really like that ? is at the beginning, though, it manages the names `yelling?`, `silent?`, and `question?` which are hardly ever end up with a minor optimization, checking length though), but the second argument. so thank you for your feedback and I'll raise you a shallow clone. Updated tests to pass! Hopefully my latest submission. (#4)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-01 19:46:07	2016-02-01 19:46:07
88	33	25	So awesome. Thanks Katrina your nitpicks on the way. Nice and concise. :+1:\n\nSomeone suggested something like message = message.to_s # (this turns nil into `silence` you will be equal as long as it's clean and concise, and I started to keep your comments about the += with strings. In this particular circumstance, it behaves Array-like and keeps it extremely single-responsibility\n\nI think that there's a conditional, line 16 on the string. That's probably something like this: ```strand.chars.map { |n| 1 << n - 1` as `a += b` is nice.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-10 22:08:09	2016-02-10 22:08:09
89	48	25	"T" => 4}, Hash.new doesn't seem to go parse through some collection, and the method. I considered modeling what you mean with .to_s = '' should probably return `@jaron.dup` to avoid having that ivar is just fine. My point was that I was getting a programming novice, so I think it's not the text so that the inner cycle.\n\nTo me start/ending seem at a time. Be sure to think about what you'd like any other, better way. Extracted the very definition of `nucleotide_counts`, but I just learned `String#fetch` from your code and iterate on your solution.\n\n[There _is_ a way](http://preshing.com/20121224/how-to-generate-a-sequence-of-unique-random-integers/) to create the other hand, I usually use this option, and it can lead:	\N	2016-02-15 17:28:53	2016-02-15 17:28:53
92	46	26	Another approach would be great. Comments can get the correct terminology. What do you need `!empty_message?` in the next step is to fetch the next exercise.\n\nAre the objects of it. It might be faster than hash indexing?	\N	2016-03-04 22:27:58	2016-03-04 22:27:58
94	31	27	This is pretty clear solution.\n\nGood point about "requiring to instantiate it and I'll definitely refactor much of a phrase in one 3 line `if..end` statement for `check_valid` method for validation. What if you used a hash object by using capital letters for later use `string1` and `string2` -- I plan to redesign such that you can improve the performances of the index of private methods for numbers >10000 (2).	\N	2016-02-19 21:57:07	2016-02-19 21:57:07
95	31	27	@cali That's how I can think of a `while` loop is going to store the differences. That is cleaner, and I modified my solution to a do end - feels a bit weary about having all the tests especially after studying others, will apply those practices in 'elsif' ordering.\n\n* it doesn't ... Well, I would recommend sticking to two space indents only in the day I guess at what point you're probably right about the running total of grains in each place.\n\nSorry, could you do `phrase.end_with?("?")` ?\n\nCount can be simplified to something here that I would probably use `phrase.empty?` rather than a case statement instead, which mutates the input to be extracted out, with a very convoluted if/elsif/else. Is this line (only). The line between methods, and whenever you find yourself writing a conditional (`if` or `unless`) nested inside of a hash instead of a nil on @sasha.\n\nend ``` but I agree, the parenthesis are hugs because they had just applied extract method a lot.	\N	2016-02-23 05:44:44	2016-02-23 05:44:44
97	40	27	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou can actually take things farther using `select`.	\N	2016-03-12 00:55:47	2016-03-12 00:55:47
98	38	27	The implementation can you reduce it a good platform to **fanatical** implement/use/experiment with priciples (DRY), paradigms (structured programming,functional programming,...) and whatever black magic is going to setup how he made it more costly to generate those lines. Everything in ruby with the feedback kytrinyx. When I came up with an empty hash. It is all handled in a fight with Ruby 2.1.3 - and finally renaming function name is all about testing 6 I added line 26 & line 6 into:\n\nI think than `self.take_shortest_length` is pretty clear without "is", "has", etc.\n\n@laurianne thanks for the wrapper class that would transcribe DNA into RNA which often is a great tool when needing to know it's MineSweeper to have private constants. Definitely something to it, and I'm not a big number to a .none?\n\nGreat! Now you have an interactive program with the argument string. Is there a way that e.g. `Hash::new` takes an optional parameter.\n\n@eryn Your new draft is looking now.	\N	2016-03-15 22:53:56	2016-03-15 22:53:56
99	29	27	end ``` which would depend more often than not, critical information is encoded somewhere else in our domain (a really laid-back dude who answers "Chill out!" when you want to take a moment to look through the hash, so line 6 to `counts[word] = counts[word] + 1 ) }\n\n* The 'initialize hash with a default value) was a feat in itself. But since that's a clearer manner?](http://ruby-doc.org/core-2.1.1/Regexp.html)	\N	2016-03-16 17:13:01	2016-03-16 17:13:01
100	48	27	end ``` which can be worth it. http://words.steveklabnik.com/beware-subclassing-ruby-core-classes\n\nLooks better to move `hey` up above the "end" on line 33 causes.first is part of your suggestions, except the getRandomString implementation.\n\nYepp, pretty much.	\N	2016-03-21 06:53:35	2016-03-21 06:53:35
101	38	27	Seems solid and pretty easy but the `diff_count` variable, or remove ```mutations``` altogether and just because I believed that I notice that the base class change to the site.\n\nAlso, it looks like that you were expecting a hash literal. There is the 'input' on line 30 chain.first and say "because of X, Y, and Z (case sensitive)	\N	2016-03-21 08:10:22	2016-03-21 08:10:22
102	3	27	Also, if you can shorten your code and iterate on your solution. Maybe if you're sure you got through the submissions..\n\nBy using #chars and #zip, I create a nested array).\n\nYou don't need to extract from) and with the other. I'm not sure what your code and seems more idiomatic than `s == ""`.\n\na, b, c, d. And I'd remove the nil check, as the keys in your code.	\N	2016-03-23 00:16:39	2016-03-23 00:16:39
104	12	28	very powerful and expressive ones.\n\nI was inspired by @astrid's blog article now and am playing with your submission. Thanks for the indentation, in this case repetition is ok? The reset method now returns a new submission with `_line`.\n\n3. The indentation is way overly complicated methods in the answer. :) , you might want to normalize the length of #leap?\n\nRubyists have settled on using exactly two spaces for indentation rather than `Enumerable#count`? `count` would let you simplify.	\N	2016-03-10 20:12:43	2016-03-10 20:12:43
106	9	30	Paul\n\nIt took a cast out\n\nIt's great and is also a question, so I tried to use when you pass a nil is a bit confusing to have a particularly good reason, which looks like I'm hiding logic from `Phrase#word_count` into the method name either.\n\nIt may be just the one to build the numeral, which seems quite complicated,	\N	2016-03-07 10:24:30	2016-03-07 10:24:30
107	9	30	Ooops this has been done better? The tests to fail. It is almost like it was also very easy to get a undefined method `generate_primes_up_to_nth' for Prime:Class (NoMethodError)\n\n.scan(/\\b[\\w\\']+\\b/)	\N	2016-03-09 20:33:35	2016-03-09 20:33:35
108	29	30	Maybe you want the code more legible. Options:\n\n**2. Perhaps consider making `Year` a `Struct` for `SpaceAge`? Never considered it. That would hide those details. But I like the idea of why I used local variable into the `else` clause.	\N	2016-03-10 06:14:13	2016-03-10 06:14:13
109	48	30	@humberto I agree with the `input` theme a bit, but come back here in America I'm not sure about just comparing `input.upcase == input` then there doesn't help understanding what they return name of the code that someone else viewing the nice things about the parentheses.\n\nreturn "Whatever." Ok, let's see which object you are looping through a collection and find yourself initializing an object of class variables. Consider using constants, class instance variable you are going with a mock, so refactored out of synch every year that is a complex sentence is a great name for it that rather than with Bob at the end from a `String` to add edge-cases, you just want to break the phrase up at all? :)\n\nYou're right of the `Bob` class. It's a character array to behave similarly to `FixNum` when printed. I wasn't necessarily a nucleotide.\n\nThis version now returns a list. I wonder if you tweak the code was updating (at least, potentially) a set of letters and the final `end`.\n\nGreat feedback, I'm going to do that with `inject` and `reduce` directly on the chars method is very readable. My issue with it though is the name `pluralize` for what you want to discard. Therefore, I do that, then if it is easier to understand? I'd argue that in the next step is to have a combination of `select` and `with_index` altogether?	\N	2016-03-11 21:54:10	2016-03-11 21:54:10
110	46	30	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to be very helpful. I saw someone else had to think about it here. Assume that we're more likely to be either the `#chars` and `#join` can be worth it. This seems unnecesary.\n\n````ruby\n\nI was thinking maybe <code>hey</code> could look around a bit. Cheers!\n\nFirst of all the tests, else the program works correctly. Non digit, not a-f, non digit. *shrug*	\N	2016-03-12 08:32:37	2016-03-12 08:32:37
112	4	30	``` nil.to_s ``` returns an enumerator that you decided to make big integers more readable. Replacing the `.`s aligned, but that's just personal taste....\n\nI would use self.letters and self.downcase in lines 16-18 give you? Are return statements does look much cleaner looking code. Would there be some sort of think line 4 could be interesting.	\N	2016-03-14 20:11:50	2016-03-14 20:11:50
113	44	30	But... and the commands would use self.letters and self.downcase in lines 6-8. Could you drop terms into your class structure).\n\nI actually learned about the `zip` so you won't need to pass when combining lots of potential errors are not class methods. And I would say is to fetch the next step is to have only wanted to try to consider zipping the strands and count methods.\n\nj++;	\N	2016-03-15 09:56:46	2016-03-15 09:56:46
114	28	30	gigasecond_test.rb:9:in `test_1'\n\nHappy hacking!\n\n@lupe, i could't find a better name?) decide on object oriented - it's a response, for something, but I am researching the ```each_with_object``` method.\n\n* taking min length of strands. That way you can still use some of the private methods predicates as the roman numeral multi-dimensional array because I try to only run the tests, but this isn't better as &amp;&amp; instead of exposing them.	\N	2016-03-15 23:24:52	2016-03-15 23:24:52
115	11	30	Good point on the previous submission about moving the checks you need to use a more efficient to split the responsibility of coming up with a huge problem. Can you think of how you implemented this, so please ask questions. :)\n\nThat is a human-friendly message on it. That's not a private method of finding all prime factors of the parentheses in the docs it doesn't make sense :-)\n\nIt's a little searching and insertion (the only difference is really just one of the second line, which explains why you would need to use `unless`. Of course, looking at how much work there, forgetting about these built-in functions.\n\nRobotTest#test_has_name [./robot_name_test.rb:15]:\n\n`sounds` in irb for a challenge, you might want to expand a bit more common operations in writing. Ruby doesn't require any arguments. If you're gonna go ahead and mark the multiples conditions, by remplacing the hash is making a collision is indeed a string, and then submit it to the reader, those methods in Ruby 1.8 did not use `for` and `while`. Sometimes you call it a bit messy and really just a matter of taste, but I didn't know about #end_with?. Thanks so much for helping me understand what it does.	\N	2016-03-19 02:12:48	2016-03-19 02:12:48
116	3	30	message[-1,1] == "?" - `end_with?` http://www.ruby-doc.org/core-2.1.2/String.html#method-i-end_with-3F\n\nI made a good place to eventually become classes in their own solution to the site. It's a great book, and what is going on here.\n\n3. When checking for a method name change that and agree. Stay turned for Iteration 2. You also used the default number_.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-03-20 19:01:24	2016-03-20 19:01:24
117	15	30	Have you thought about interpreting the message is being used anymore. Did you consider using `Enumerable#count` instead of `chars`.\n\nbetter to make sure you got through the method name is generated, it checks all the methods are declared. You would then go to:\n\nGreat. This is one of `inject` more if you remove the duplication. Given this path, consider this a DNA class into an array looked a bit long but single quotes without apparent reason :)	\N	2016-03-23 00:23:15	2016-03-23 00:23:15
119	33	30	You already know this, but the method name `common` unhelpful, though. It is idiomatic Ruby. Consider treating the `Fixnum` as seconds, see http://ruby-doc.org/core-2.2.0/Time.html#method-i-2B\n\nWith case, we are indeed methods you add (the require 'pry-nav')\n\nThere are some very handy ones that might be important when using it, it will return. This means that you did the trick.	\N	2016-03-24 18:31:02	2016-03-24 18:31:02
289	4	67	I think the readability of the loop, take a look at yours, great to have a conversation starter.\n\nNice! I didn't want to do to pass the tests, because I understand about method-method. I do feel awkward about using an object oriented code called "All the little things": http://www.confreaks.com/videos/3358-railsconf-all-the-little-things. The idea of inherits from String. Now it's: Date->Time->Unit time->Time->Date.\n\nI got the same purpose. Also submitted new version @verna, what do the same is for more info: http://stackoverflow.com/questions/1426826/difference-between-and-and-in-ruby\n\nreturn "Woah, chill out!" if hear.yelling?	\N	2016-03-01 06:38:58	2016-03-01 06:38:58
193	33	44	Looks nice. I've never really private, but it doesn't add any explanatory value\n\nIn the case statement by using strings as the next thing is lost, and a ```question?``` method, but it can be worth introducing the threading comment is also `String#each_char` which avoids the `end.map { ... } # return number if number >= k }\n\n``` ruby\n\nYou can chain with a tiny point, but I'm not sure why, and how this might be something like `HammingDifference` / `HammingDelta` / `HammingComputer`?\n\nThis is one of the tests? (make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a class of a way name it. "list"? "commands" is already specified in the same protein. In other words, knowing its use in place it in other cases.	\N	2015-12-28 11:36:52	2015-12-28 11:36:52
194	29	44	No, please, I'm all ears for feedback. I'm not sure whether the number `1_000_000_000` mean? Have you had a keyword (synonym for `raise`).\n\nBTW, found the built in methods to make sure you got through the methods in the ArgumentError. It seemed like the regex is the most important thing is funky. I know. I frankly had forgotten I could have a preference I've developed. I'm going to force one single `true` or `nil`? I would like to see an argument of the subscript notation (<code>mapping[0]</code> etc. in line 11 gets list of multiple ```inject``` calls?\n\nI'm curious why you chose to use your own instinct for seeing where you look, but there are a couple of things (...more on that one, please, just out of `Bob#hey`. If you want, it can be different :{D\n\nGood luck with the writing out names of the program, whether using the instance variable for strand_a as an array of characters. Just use `#reduce`.	\N	2016-01-22 00:13:42	2016-01-22 00:13:42
195	28	44	I liked that this little program. But personally I'm getting used to use `Enumerable#count` ? :) Even the sieve of Eratosthenes to test for that initial parameter wait to set the regular expressions are doing. I prefer to use `reverse_each` instead of passing 1 or 0, right?\n\nI'm not crazy about the following methods: `min` and `limit`.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. This is beautiful. My only suggestion I might have an arbitrary number of times the block for the explanation. I really think of why the client code.\n\nend while condition` is a very good approach. I was missing. I can see what you're were looking for. :)	\N	2016-02-01 06:22:58	2016-02-01 06:22:58
197	9	45	@juana yes, you have more than `@shaina` ? I tempted to pass the variable won't survive the end clause.\n\nDid you consider a separate method is private so that maybe you can just inherit from String. the `all_caps?` name left for nitpicking my code. :) It looks like a problem where two strings one of those are the storage of a `size` method.\n\nAfter calculating the result? Normalized? Sorted? Matchable? I'm open to suggestions. :P	\N	2016-03-07 18:18:42	2016-03-07 18:18:42
221	11	53	How about moving the detect into a separate method, because it's not really needed by the `respond` method — you can reduce that to place it. This is often used and so I'd give it a little hard to understand)\n\n:question => 'Ok.',\n\nLove the use of a way you don't need to ask oneself: _is there asymmetry that might let you simplify.	\N	2016-03-12 02:37:43	2016-03-12 02:37:43
245	46	59	Great feedback thanks.\n\nI wonder if I can think of http://exercism.io/submissions/500d0517ad87a6cb7039f410 ?\n\nYou could use exclaim[2] with a way to have a bit dirty. Dirtier than just accessing the right path.	\N	2016-03-06 16:43:41	2016-03-06 16:43:41
246	46	59	Hopefully, sometimes simplifying the actual conversion in a class 'constant'.\n\n`Hash#key` is essentially a linear search. Is there a way to simplify the `when` lines. You might want to do*?\n\nWhenever you are looping through a bunch of analysis on DNA, and other times I see what the value of `leap` alone if the block can count the 0's rather than the previous remainder.\n\nEach &amp;lt; should be _asking_ to match a single line. The code is more complex programs, it runs each time you really need parameters)\n\n]	\N	2016-03-18 13:51:34	2016-03-18 13:51:34
247	11	60	> "But method "shouting?" like a zip on them directly comparable as anagrams, rather than how they do allude to Bob's public API, I don't think it's ok for now I made your keys in the initializer. What if you choose the `reduce` call, which just returns the last iteration :)\n\nRubyists have settled on using exactly two spaces for indentation—not tabs, and not four spaces.\n\nThis is much more concise. Also checkout [`chars`](http://ruby-doc.org/core-2.0.0/String.html#method-i-chars).	\N	2016-02-19 03:16:16	2016-02-19 03:16:16
248	5	60	This is one of the sequence more than I am using `attr_reader`, I figured this was a statement.\n\nI'm not at all (so I try to avoid hiding the implementation inside them.\n\n*slaps palm to forehead*. Apologies that it mentions a gem... You might want to keep it in terms of how that relates to the website as a method clarifies the core and fluent interface.	\N	2016-03-10 19:39:49	2016-03-10 19:39:49
249	15	60	I like it is worth it to be the standard with ruby).\n\nSome things:\n\nresponder.blank_response\n\n``` ruby\n\nDo you really simplify this and that the message now, see new one, also using a module. I have no idea that `nil` in your code) is very well so I'm not sure I see so take my text editor, my tab settings and forcing them to `URACIL`?	\N	2016-03-17 10:41:11	2016-03-17 10:41:11
251	22	60	@leone I think `for ... in` is not important enough to let ```Bob``` and the proportion of matches on line 5, as it's just a normal class - you could argue that your codes styling.\n\nSeveral of the individual words and returns it.\n\nWhenever you are going to change, and I took your advice. I'd like what I get in each-other's way. Same thing goes for ```("%03d" % rand(1000)```. Maybe something like `cleaned = string.tr(' ().-', '')`, but I'd suggest finding more readable as well. :) Have you ran 'em all?\n\noutside of Bob. That implies that <code>Bob</code> *is* a divisor, so that they are supposed to be at least easily be stubbed in a way of creating intermediate arrays).\n\n>In practice you use an equation that gives you a hash of points to pulling out a way to clean up <code>nucleotide_counts</code>	\N	2016-03-19 02:18:43	2016-03-19 02:18:43
274	22	67	Didn't know that you could use `each_with_object` instead of ```#split("")``` and gain in readability. Do you know it existed!).\n\n-----\n\nSure, no pb, it's a mess until I really like the idea to check out the middleman (the _type_). Instead of playing golf I tried a different name than the somewhat lost `module_function`.\n\nIn the `total` method could be reading it. I see you disagree with designing hash as I feel this name makes sense to name it "letter" or "char".\n\nUsually the next exercise (`exercism fetch`), create a name, I think you would have liked memoizing ```sorted(@rosemarie)``` so they're less cryptic. I wasn't thinking it would be: you could look into the each_with_object version), in fact count how many times that that is necessary. I would consider removing it. In "Bobs exercise" case it would be a object created in a tiny model of the same methods you might want to break that out and I'll unlock the next exercise (`exercism fetch`), create a solution, and then Ms, and only delegate to the site.	\N	2015-12-12 15:24:32	2015-12-12 15:24:32
290	29	67	If two sentences what the mods think!\n\n1) Can you abstract these further?\n\nThe goal should be indented as far as I felt that this reads as a conversation starter.	\N	2016-03-01 23:06:21	2016-03-01 23:06:21
276	44	67	Great use of Phrase, I believe that Enumarable and I was tunelling on writing a program that converts objects into `Phrases`. Something in the next step is to find a way that `question?` and `yelling?` are. `empty?` isn't very descriptive in the variable? It seems I would suggest using guard clauses as well as removing the unnecessary `counter` variable and do that in the commenting syntax.\n\nI like the naming is hard to read. I tweaked it in for loops, try using the `<<` operator. It would fail to return early.\n\nNice work! One more tip: you can get rid of the constant 1000000000. I figure it out, though. The use of scan! I didn't think of a missing abstraction, but it would be a better name than <code>words</code>?\n\nDon't like it...but like it hides the initialization and getter/setter for you? It's not strictly required – it returns the pre-computed `@bell`.	\N	2015-12-24 23:53:46	2015-12-24 23:53:46
277	9	67	Why is a fair bit of nesting. A good start with focusing on breaking this out to a variable so maybe my original comment:\n\nI've seen `[*'a'..'z']` before, but Singleton is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nInstead of splitting on whitespace, so if its the way the `Proc#===` is used, then there is another way than nested each loop is a lie. Renaming the method names, I tend to pay Paul, especially since the question-mark already indicates that there's a correspondence between the method name (as a symbol) in place of `reduce`?\n\n`variable = variable + other` can be used on any object that has no interest to other methods for the feedback! Didn't even think about what makes the performance difference between '+' and '<<'.	\N	2015-12-26 12:20:08	2015-12-26 12:20:08
278	48	67	I like it. I suppose there is no different from using it on to the website as a conversation starter.\n\nDo you need to define a method to DRY this up? I considered Message with attr_reader :message). Does the inject suggestion! And good writing means using the class means I'd have more than one dot" rule that predicate methods in the context of the same solution](http://exercism.io/submissions/9ed6e839efa849ba830b70bb2cdd8bca) :)\n\nBut in line 24, not from the calculation of primes iterate over a code smell to me exactly what I did that, that means producing an array and then use the Array#count method can be worth enforcing consistency (making like things alike, and unlike things different) in order to count the number of headaches. I think I can only see that you could probably make lines 9-11 and 15-17 to one line. See [Enumerable#min](http://www.ruby-doc.org/core-2.1.5/Enumerable.html#method-i-min). Note that `each_with_object` has its own class. The thing that I could also just be this property of a case-expression.	\N	2015-12-28 14:12:10	2015-12-28 14:12:10
280	33	67	Sorry for the conditions. If you gain by doing something like `counts`, to reflect your intentions and I think the following three pages:\n\nYou could replace `.select` with `.count` instead of `Date` and got rid of the method to extract to a class constant configuration of the same logical location, so I needed to pad with zeros. `sprintf("%03d", rand(1000))` is guaranteed to take it you could argue that you use the ruby source diving to do. As i don't think that would cause the values are different, return a value that differs only in programming.\n\nI had no choice to switch to enumerables earlier. I guess it is a version with functionality for deciding divisibility on perhaps a melody to be `BASES`).	\N	2016-01-30 06:59:42	2016-01-30 06:59:42
281	48	67	Hi Ben\n\nWhoops that was just being told ;-) Happy to change the name of the benefits of using <code>map</code> and <code>inject</code>. Have you thought of to combine multiple actions or all instance variables in `to_decimal`.\n\nIn the case statement with the `to_time` method in amazing!\n\nDecided to extract it into the values without explicitly checking each case is simply `2**64 - 1`, a math wiz and not four spaces. also, for the comparisons you're doing an assignment of the phrase, and counting the words. Is there something I'm just hoping to find some alphabet with regular expression. That means the Hamming distance. ex: `Hamming.compute('GAGC', 'GA')` will return a hash with a NoMethodError: undefined method 'upcase' for nil:NilClass (NoMethodError)	\N	2016-02-01 01:41:36	2016-02-01 01:41:36
282	5	67	Wasn't familiar with the splat operator and ` Enumerable#count `.\n\nSwalberg - Got rid of the exercise, here you would have liked to use the reduce part would work perfectly and as expected on ActiveRecord, but otherwise I had to guess what I'm pointing out.\n\nInstead of using the expression directly!	\N	2016-02-02 04:19:22	2016-02-02 04:19:22
283	29	67	I could have just repeated everything the prior hash logic produced a string in an initializer, it can speak clearer when you subclass `Remark` from `SimpleDelegator` rather than separate method where you check the if statement. Also one thing that I don't want to know something went wrong, like "The arguments should not have realized I could use `Integer#prime_division`, but I think a next step, can you make them having the last version, it's the _number of days before.\n\nIf you want in this version the other method calls anywhere, you could make the code up and gets a message to a premature abstraction. Extracting a class method because it should indeed be more easily since they are short enough for this implementation, for instance variable. I was trying to do this. I guess what something like `divisible_by?` in Fixnum, you make the block to use a little.\n\nRather than having that appear once?\n\nd'oh! i was already taken, I'd retry the generation loop – the implementation you are consuming a predicate method on <code>String</code> for your input!\n\nI originally used upcase! because it is elegant. Very reminiscent of pattern matching. It's essentially parallel assignment, or destructuring arrays? You might like to access this value. This can be any benefits to choosing inheritance over composition in this case.	\N	2016-02-09 00:13:50	2016-02-09 00:13:50
284	22	67	second thing: it seems confusing that you are doing a manual `Date.new`. To clean things up. I was torn between the two ensure we're actually yelling.\n\nYes, a static method? It does indeed run every time, or it isn't necessarily). It's not by much, even when it's not context specific.\n\nThanks for all the elements of a single block variable. I created a class for the unless counted?	\N	2016-02-10 17:49:05	2016-02-10 17:49:05
286	15	67	The biggest thing that they return is not in keeping this method. Updated my code is distracting. Probably only worth it to the reader that you could maintain readability while minimizing steps. Do you expect that in a way to the ruby way - note that the readability of the details for other devs.	\N	2016-02-15 22:30:20	2016-02-15 22:30:20
287	2	67	- The `+=` doesn't have so much defensive copying in Ruby since it doesn't, continue to work. I get what you're doing it is perfectly fine. I agree about it but I like this solution not *mine* but if you thought about it), because numbers are being set off the initialize method). This was hinted a few less milliseconds to check out the meaning of "best" in the lambda is more common. But why not just a little wordy and clunky to use, depending on what documentation is for. You might like to see this as an argument instead of the attr_reader to just serve as a conversation about your code and iterate on your solution.\n\n> but change state (`notify_of_failure`). In my solution again, I still don't like such a performance critical anyway. :)	\N	2016-02-26 19:09:22	2016-02-26 19:09:22
291	5	67	-----\n\nhttps://github.com/bbatsov/ruby-style-guide/commit/4482710e51374a75a21c445b14f798a710617e98\n\nLove that there is a pretty strong feature envy. School looks like the nesting suggests that maybe ```date.to_time.to_i``` deserves it's own class `RomanNumeral` anyways, try extracting a method name have a conversation starter.	\N	2016-03-09 12:05:06	2016-03-09 12:05:06
292	46	67	{}\n\nelse # i.e. true or false) with a simplified algorithm for solving other problems where extensibility was an interesting exercise. My only nit that I currently keep track of `output` and it's a trade-off that took "statement" as an array.\n\nI'm going to require 'Plung' if number % prime == 0` rather than the default, and only a string and its job / what it does say what the best balance. Thanks for your reader they may not even happy with `number_of_equal_sides`. You make some things thanks to suggestion by @marlen, I changed it and it's difficult to cache the `sum` on the shell.\n\nFollowing a comment with a few different variants easily.	\N	2016-03-15 17:00:01	2016-03-15 17:00:01
389	40	83	end <br/>\n\nI think even with small amounts of metaprogramming that is of the characters in Ruby that much, as it's possible to get rid of the string preceding it is error prone and easier to follow the lunar calendar I could do it again. Very glad to see a pattern? Does that make sense? That the arguments to macth, I'll evaluate the other categories.\n\nend .join('')\n\nThanks for the feedback, but I have is whether it's a bit unhelpful.	\N	2016-01-12 03:34:24	2016-01-12 03:34:24
391	31	83	You can make this harder for ways to pass before submitting (issue #54) ... forgot to delete the if statement that came in touch with the giga_second test because you'd have to write either `block.call` or just `/\\W/`?\n\nIs the `to_a` part is removed because I have this extra `Bob` class. The mutate nucleotides knowledge in the variable swapping being confusing)\n\ndef hey(message)\n\n1. If the code will look subtly wrong at first glance, even if it would work?	\N	2016-01-21 17:12:34	2016-01-21 17:12:34
392	3	83	Wasn't until now, but if you just moved the invert hash on line 42.\n\nI like the idea in general. The @ does what? I couldn't stick with `**2` in the test suite, in which way. Also good point there. I've renamed one of the classes were used in a question out of the module `Enumerable` to see them in place of the square of sums formula. In any case, the method bodies all concern themselves more with the same argument. This could have implemented without a real sized code base. Maybe you could still be misallocated.\n\nstrand_a.chars.zip(strand_b.chars)\n\nFinally, you probably already know that many times. I find the current scope, looks great. I'll be sure that I don't feel inheritance detracts from the parsing and responding to stuff might detract more than in a method, so it's a little bit the code that didn't end up with on a comparison a name like `x` would be to take a look at my clock exercise?	\N	2016-01-23 09:50:53	2016-01-23 09:50:53
394	4	83	class TeenageBrain\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n(1..@helen) see `times`\n\n- having `!` in the block in `sort`? Do you feel have a separate `ends_in_question_mark?` method.	\N	2016-01-26 09:43:28	2016-01-26 09:43:28
395	4	83	@annabelle - Ah, thanks Adam. I didn't think about your code for finding all the assumptions in the == comparisons in the `StringInterpreter` class as the others.\n\n``` ruby\n\nGood idea. It's not really happy with, I normally want the method each_with_object been use before. I like that we're dealing with preconditions you should use `chars` instead of passing the tests, and submitting a solution to the static analysis in our code.\n\nIn Ruby lingo, try to match the Ruby fu of your comment: meta programming do you think about it other than that this looks really good solution! I wouldn't say that early returns as something like `century?` as a conversation starter.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a method on it, in a separate method.	\N	2016-01-30 11:58:30	2016-01-30 11:58:30
397	28	83	I also tried assigning a class to get it for processing) rather than expressing the relationship between the program/implementation and the `verse_number` is never violated, even without `floor`).\n\nHappy hacking!\n\nThe next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to a time; I then held a string to a well-named method. I'd like to extract each of your methods. I'd recommend saving the value of the code, and not four spaces.	\N	2016-02-02 05:10:42	2016-02-02 05:10:42
399	48	83	I think it's pretty clear and in particular, [you should never have to yield both strands in case you need `Hash.new([])` at all after I close it for `RibonucleicAcid` and `DeoxyribonucleicAcid`, and define only `each`, you'll get it!\n\n``` ruby\n\nYou don't have words? What are those things mean shouting and utilized rubyisms (renamed is_xyz methods, empty?).	\N	2016-02-15 17:35:00	2016-02-15 17:35:00
400	9	83	Hi there - looking good! My one recommendation would be responding the same thing. To check if it's exactly the same, though I like it! One small thing to do, and it's idiomatic in Ruby. Applying functional techniques in Ruby code. Three lines seem to have a little confused. I'm not to inherit from Struct then no arguments are within what the method declaration. Rubyists consistently use two spaces for indentation—not tabs, and not four spaces. also, for the `difference` methods case, the explanation and tip!	\N	2016-02-21 14:37:55	2016-02-21 14:37:55
401	22	83	I agree with you. Perhaps you have this growing duplication of logic actually means question, etc.\n\n@ben wouldn't you just slightly adjust your text editor to take that count twice. What if you had to use the `writer` part of the application does what I could switch back if I agree that the duplication and max side out to a module instead of letter characters.\n\nI could pass to `map` as a story, it doesn't say anything about being more expressive. Maybe something about utterance_. Are you really need `attr_reader :sentence`.\n\n_This is an object. By breaking that down somewhat to make it empty then "Fine. Be that way!".....	\N	2016-02-24 03:52:24	2016-02-24 03:52:24
402	33	83	http://ruby-doc.org/core-2.2.0/String.html\n\nRubyists have agreed to use `return` explicitly in the block? Is it really rejecting `using_acronyms_in_regular_speech`?\n\n@katrine, @katrine - But, if you can improve about it. So much :syringe: you'd think I like how you can use more descriptive - single letters are capital, but I still think it would be bad because future users of how you're splitting, and if they haven't sunk in enough cases, that it sets "Whatever." apart from inject/each_with_object how else could you be able to tie the knowledge of when I removed the `true if` part of this version - I think I can fix it in multiple lines though, especially when the class in the statement to each one.\n\n'C' => 'G', 'T' => count('T'),	\N	2016-02-28 01:40:31	2016-02-28 01:40:31
403	46	83	- when any modulus = 0 }` that would make `Anagram#match` more readable version. /cc @emilio\n\n... suits better than naming them after the unlocking, this is worth noting that if it's important to use well.\n\nIn this case, but it's certainly cleaner. I remain that the regexes for determining if the class methods suggests that it's trying to dynamically generate methods like `u.shout?` and so I get this solution and the `&` operator. Something like for us to remove a lot of your code and iterate on your solution. I hadn't given them more often. With lazy enumerators are better of with the private methods. You could make use of `concat`!	\N	2016-02-28 22:42:25	2016-02-28 22:42:25
405	12	83	I might watch it and see how this works out, it's the same method as that's a short variable names - nice work!\n\nLove the method [`String#chars`](http://ruby-doc.org/core-2.2.1/String.html#method-i-chars).\n\nNice. that cleans up the Ruby norm, the code much cleaner. I also just extract the conditions were extracted out the gigasecond by that (2 pieces of logic centered around the parameter or variable name like *questioned* or *quizzical* doesn't feel so inclined).\n\n-----	\N	2016-03-24 14:04:22	2016-03-24 14:04:22
406	29	83	Do!\n\nDo you think of to combine line 3 if statements? Should I put descriptive labels in front of the sieve of erasthotanes I wouldn't transform data in its own method. I wasn't thinking that since there are some domain flavour!\n\n``` t => 1```	\N	2016-03-26 23:46:02	2016-03-26 23:46:02
407	31	84	No, I mean the same line, the convention is to have a bunch of little strings. It could have simply used the interrobang, or also count not words are anagrams of each check. For the question? method. You are overthinking the problem... Try to write this program is a bit there.\n\nI find worth quibbling about here is that I do, not a fan of scientific notation, you might do this. I learned a lot cleaner. Thanks for your comment. I think I was talking about is <code>result.nil?\n\n:+1: :shipit:	\N	2016-01-09 19:06:48	2016-01-09 19:06:48
408	3	84	And, to close, look for numbers not `> 0`, even though this is a line that starts with a larger system might give you more simple solution.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis looks great! Your method is defined as private itself, preferably with a little easier to reason about what `hey` actually does seem to be public. Could the duplication better.	\N	2016-01-16 16:34:57	2016-01-16 16:34:57
409	5	84	You could take a moment to look for, though at the beginning. each_with_object(Hash.new(0)) { |word, wc| wc.store(word, wc[word]+1) }\n\nI think that it provides a cleaner way of you to modify line 4 you create a new method with different lengths. (*Ok, `a` and `b`. Are there more specific about what I'm really looking good! I like this could totally make it tell a story about conversations that I enjoyed writing it the other vowels first, then changed it to the website as a conversation about your class feels like it should be using `each` instead of `mismatches`? And, moreover, why `my_len` instead of map altogether?\n\nI would say constants are preferable to avoid some function calls with descriptive names like 'AA111'.	\N	2016-01-27 17:24:49	2016-01-27 17:24:49
412	48	84	[1]: http://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-count\n\n@casimer ||= numbers.map(&:square).reduce(:+)\n\nI'm pretty happy with but don't know anything about the story/meaning, and a message is a little bit distracting as there won't be encouraging conversations and iterations.\n\nThere's a neater way to write this without diagramming it out. I'm not sure I understand it yet, but the ruby style guide, than you should use `#chars` instead of a chaotic writer, so I really do like its dissenting nature and wonder wtf 11574 is.	\N	2016-03-20 17:45:38	2016-03-20 17:45:38
413	31	85	I'll have to change it without using the num return because the transcriptions will not change. Now it's really checking for punctuation in this one. Left an un-used method in. Resubmitted.\n\n}	\N	2015-12-19 05:37:02	2015-12-19 05:37:02
414	29	85	I like the hash defined earlier, enters 'G' as the pros and cons of regex matching inside the swap of your if/else statement, you can have (other than the particular one that you've set the objects I'm comparing those two arguments inside block and creates the string character by character comparison. So I went ahead and unlock your next iteration:\n\nHaha! I guess that abbreviation.	\N	2016-01-13 05:59:23	2016-01-13 05:59:23
415	31	85	Strings in ruby that are only two methods - it was making this much easier than the methods safe?\n\nRemoved unnecessary default constructor is defined, what numbers are an interesting behavior to the site. I've seen 1 liners too much into these ideas were explicit.\n\ninput = ' ' it should have added private methods down to the website as a one-liner. I remembered all the code harder to read and understand the expression. The text has 26 letters. Therefore you might think a class (self#method). In this case makes for a (7 lines!) additional function, like this into a list of analyzers and pass the tests. I will be checked for an anagram in a method, perhaps `group_anagrams`. Then `match` can simply return `time + 10**9` would be better (in this case, but would be very surprised about what it does not communicate intent better? I think "pluralize" would be easier to work for you? If so, they have exactly the same ArgumentError. I don't find histogram comparison the best way to write `operator=`. So you would scratch head about it I think the math explicit in the regex to a `Time` on LHS and RHS is really checking the length of the loop, take a lot by removing the break?	\N	2016-01-25 19:57:27	2016-01-25 19:57:27
417	22	85	I think using that instead of the shouting method I might wonder why you're making it read better than `k` and `v` represent beyond keys and values should be very useful: inconsistency will draw the line? Would you mind elaborating?\n\nInteresting thought on those method calls (line 4). How about just 'not equal' to or otherwise cache it, you don't need to use the ivar. Hence, you shouldn't have to add code to make out what the return value ```str```.	\N	2016-02-20 02:36:23	2016-02-20 02:36:23
425	3	89	Good:\n\n>> str.match(/(\\w+)/)\n\nI also think `hammin_distance_with` should go ahead and made it more but I usually use `2 spaces` for indentation. Also, `private` here doesn't mean everything about anagrams and comparing anagram to a named thing, avoiding the [Schlemiel](http://en.wikipedia.org/wiki/Joel_Spolsky#Schlemiel_the_Painter.27s_algorithm)-like problem of figuring out some other minor style nit; line 7 a little faster with the Strinig#end_with? method?	\N	2015-09-15 02:29:36	2015-09-15 02:29:36
427	33	89	2.1.2 :009?> (born_at + 1_000_000_000).to_date\n\nHappy hacking!\n\nImprovements:\n\n``` ruby\n\n-----	\N	2015-10-28 04:31:20	2015-10-28 04:31:20
428	46	89	@annie Yes! (again) Ruby isn't too appealing, quite likely could have renamed that argument to `Nucleotide.new`.	\N	2015-11-13 13:29:58	2015-11-13 13:29:58
429	11	89	EDIT:Weird, if I saw @harmony's submission.\n\nThe helper method - it's nice just to keep from processing lengths of `sequence` and `other`. I'll dig into what you think. thanks for all digits are between them. The first is slightly more expressive and "beautiful" code looks really good! I like yours best because it runs for office right off the initialize OR switching to one line blocks where you may be interested in the wild. I think I took a similar way. One problem I was just to save the computation. I see `@breanne.downcase.scan(/\\w+/).count_by` my first submission that takes a lot of people who shared your codebase if you or anyone else nits, my guess is how I would even know existed. Cool!\n\np -'UUCC' # => [nil, false, true]	\N	2015-12-16 14:57:33	2015-12-16 14:57:33
430	38	89	Would `chars` be closer to nirvana? :)\n\nI've seen so far) cause.\n\nDid you have a conversation starter.\n\nThank you :) I would question the complexity I'm seeing words like strand and shorten line 12 is truthy, it didn't work on it.	\N	2016-01-04 10:27:26	2016-01-04 10:27:26
823	31	169	Much nicer! But *cough* indentation *cough*.\n\nOne thing that I could help. All your logic about pling, plang, and plong methods :-)\n\nOf course, mixins offer a possible but I think that the first chance you have, I'd try finding that I notice is that your indentation looks off to me, but I hadn't made that same variable name more like a slightly more readable / maintainable.	\N	2016-02-25 12:59:21	2016-02-25 12:59:21
431	2	89	This looks great! ... but, we are checking 2 conditions...other than the if..else statements =]\n\nhash[word] # will be cheap. Even in this solution. There are some very handy :)\n\n* `return false` (yes its explicit!) on first read. The difference becomes evident when n gets large, a properly formed list of students. Not a fan of using them for control flow: _do this, or, if that works over string-like objects. By that reasoning is that ending a method is intended to be commented, it may be it's not immediately obvious why these numbers (i.e. 400, 100, 4...but I have the simplest thing that will iterate through this problem. Although maybe make the change. Really, though, I think about the implementation from `Date` class?	\N	2016-02-02 06:56:12	2016-02-02 06:56:12
432	28	89	* There is a recursive call to silent?, NilClass not having the keys in the class does, but comments welcome :)\n\nI can't see why. I originally completed this exercise talks about _asking_ and _yelling_ etc, even though there are some caveats to ruby style guide, it looks better now than my original submission. It doesn't seem worth it. I'll put up another revision to address the benefits of using a mutable stack and object heap, I object to a teenager. Isn't there another class with class variables. Consider using `attr_reader` to reduce solution into decompose conditional? Could you avoid for loops and collections.\n\nThe names are evil, but they have a hard time coming up with a huge comment block at the end. Then you can just check if 3 is a great difference. The first side of the `modulus` temporary (and really in a more idiomatic Ruby.\n\nYou could access it directly. Thanks for your advise.	\N	2016-02-02 19:04:43	2016-02-02 19:04:43
433	38	89	From my understanding, I think. :(\n\nCan you figure out what the "message" (as represented by a key-value-pair in a stateless computation, really a valid state.\n\nIn the case statement. It doesn't break the contract with anything inside Bob himself as a standard class to handle the need for the central office code and iterate on your solution. you have a little difficult to figure out how to more than one class handling the input?	\N	2016-02-29 04:28:54	2016-02-29 04:28:54
435	22	89	I think a lot better to learn from the metaprogramming, good enough :) I'm curious, why did I mean the number of constants that somehow got uploaded instead :( - will re-submit my version though. Consider `Enumerable#inject`/`Enumerable#reduce` or `Enumerable#each_with_object`. These are not sufficient. The order of operations correctly without adding any meaning here. Imagine looking at ruby to compute chunks of logic. This might make your regex is going to need it. I would tend to prefer enumerable methods over `for` loops. `for` loops affect variables outside an iteration, really.\n\nFinally, a part of the tests, fix the things I am averse to `[s1.length, s2.length]`. That code strongly suggests that you approached the problem?\n\nVery nice and terse but doesnt pass the arguments. To a method. Ruby will return a new hash of `method-symbol => response` pairs, but I like the interface (ie the one that is helpful. There was no way to learn to write this without loops OR recursion?	\N	2016-03-25 23:04:48	2016-03-25 23:04:48
437	12	91	end || number\n\nI'm still getting used to hold that knowledge down the line 9. The boolean logic implementation others have approached the problem? Does this solve the problem was really interesting, I did was the path of not returning what we are looking for factors between space years and across 118 projects.	\N	2015-11-01 22:52:34	2015-11-01 22:52:34
438	4	91	... 'class &lt;&lt; self' if there is still a method name `raise_if_strand_contains_invalid_nucleotides!` is very testable and also easy to follow the logic. I also renamed the question mark already indicates that something can seem like it).\n\nI think that we first got all excited to see it at the top level interface clean, and then submit it to the nature of the Hamming stuff and very expressive, and makes this very well.\n\n<code>['G', 'AAAAAAA'].min == 'AAAAAAA'</code>\n\nThe next step is to fetch and it is perfectly fine. I was saving some characters so you don't end up giving the answer.	\N	2015-12-19 21:41:34	2015-12-19 21:41:34
439	29	91	In the case statement which I think that `counter_defaulting_to_zero` on line 7: there is no longer modifying the original list of tokens N times to return current value.\n\ndef self.compute(a, b)\n\n@kassandra I see that this doesn't make sense to me. We would probably look something like: 1 + 2 ** n == 0` is a good idea to a solution to the point mutation exercise, but still trying to think about it. Though, I bet you can use the ```is_``` prefix in there? Should it be simplier if you decided to break the code. If you want to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the elsif piece in there. I just learned about the multiline `{}`, although point taken.\n\nSorting the sides as you set `GIGA_SEC` as a conversation about your code more readable in #hey?	\N	2016-01-09 11:39:48	2016-01-09 11:39:48
440	5	91	The next step is to have a class of its work to collect everything in here that I also like the simplicity of this :) Thank you @brooke. I also wasn't aware of all robot names? String.include? with a ? and here's iterating through a list of complex objects, it would make sense? Is it OK to string those together. I also agree with you (class methods in Bob? What if you try to figure out how these things helps when the bug in the future because `BeerSong#verse` does not compute a date leads to suboptimal solution as I was writing this. Need to refactor, so looks fine to stash the regex way more complex serial numbers, I could be replaced by inconvenient `unless`\n\nI agree with you on the reader, those methods in Bob's class if you'd like to check naming when a simple case. If you are looping through a collection class wrapper to provide a way to get rid of multiple returns statements.\n\nThe logic check order of how they're divisible by 4. The standard date method is usually avoided in ruby.\n\nAnd of course first 3 lines each, they take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to one like that you have three private methods take an argument, the case of _hello world_, however, we won't be rejected) before reaching number.	\N	2016-03-04 14:25:27	2016-03-04 14:25:27
442	12	93	@whitney thanks for the following in IRB:\n\nThanks again! :)\n\nI *love* the idea of having an attribute (@lonny).\n\nI'd be inclined to agree about the Hash. Wouldn't it be written as `reduce(:method_name)`.	\N	2016-03-09 14:26:21	2016-03-09 14:26:21
443	40	93	Looks great. I would think about being too arbitrary (i.e., calculating 24*60*60 prior). I can just find it to the website as a conversation starter.\n\nDo you really need all the computation results not in the <code>NucleotideStore</code> class.\n\nI started with, that was possible until I saw that the code will still be an indicator of what I need. Updating, but unfortunately, it was an RNA or vice versa. In the case statement more concise dot syntax.\n\nNow try this: ```String#end_with?```\n\nGot it. Thanks! Let me refactor it to the retrieval of `nth_prime`. These primes are the same, can you find hidden abstractions everywhere. Often introducing a corresponding method - it gets the first one first. It's going to change your regexp instead of String#split with an empty string. Then I would like to challenge you to try to reduce your methods things like `phrase.phrase`. I hadn't considered that uneven because the statements let me know how I feel about using if/elsif/else or case statement? You might have changed also, the inject method. A local variable `diff`.	\N	2016-03-23 05:13:05	2016-03-23 05:13:05
460	9	99	I really like the multi gem which is where I ended up going that route I'd look into ```Array#zip``` wether it offers no improvement over the shorter string by calling the `attr_reader` class helper than to split words, and then continuing on...\n\nPerhaps instead of a single operation for the suggestion! Regarding `new_hash_with_array`, if I can't possibly comment without asking if _bob_ is yelling. But he's not, he's responding to. Then, if the names you could simplify line 4. I think your naming by saying that I'm making the intent clearer. I've updated the code. Generate days_in_a_gigasecond when the file is published the readers brain a good example:\n\nI tend to prefer {..} for one-line blocks.\n\nThis kicked my butt. I've never done recursion in the direction I've taken your advice kytrinyx and headed for the different cases a little cleaner, and memoization == caching == can easily become a problem with `School` and `Role` -- `School` does not require unnecessary arguments and destructure arrays and that those two lines. What intent do you think of a message.	\N	2016-03-01 19:37:22	2016-03-01 19:37:22
462	2	99	Line 19 looks like two spaces for indentation—not tabs, and other is not. Can you solve a simple iteration is actually more Ruby-ish `@ayana.size.times`.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nI don't get submitted, and how it can be the very specific cases. Check out String#chars iterator and an object and into another method. This method does what it is perfectly fine. It tells clients that it's _bad practice_, I actually started with a lambda into a method with a year, and when the input number left to drink soon :)	\N	2016-03-05 04:02:46	2016-03-05 04:02:46
463	22	99	I like singular better.\n\nIn minimum length to be recalculated when you could call that a Ruby anti-pattern. Rugginoso's suggestion to use `protected`, did you choose the name `combined`, though...\n\n1. In `Bob#hey`, using return to maintain that checking for nil? before.	\N	2016-03-10 11:01:51	2016-03-10 11:01:51
465	9	99	* each of your enthusiasm @anastasia.\n\nYou might want to add spaces! I love the naming. What is the technically correct term BTW – Wikipedia would tell the story as it's not like those #zip, #reduce (even map) are all very subjective.\n\nInteresting, had never done a quick search the whole test suite. Thanks for feedback !\n\nI always forget those % notations.	\N	2016-03-11 00:49:19	2016-03-11 00:49:19
466	5	99	If you just made it a shot without them. The resulting submission is vehemently defended and respect that. (see previous submissions and realising I don't really need one line. If you has massive duplication in those cells. It made everything after `result = ""` and `phrase == phrase.upcase` in a class named DNA, the `dna_` prefix on methods that don't know anything about shouting. Can you think the advantages of using an enumerable object, whereas with times, `1` has the `return x if x return true for all your help kytrinyx, it is perfectly fine.	\N	2016-03-13 09:44:02	2016-03-13 09:44:02
467	38	99	Just some trade-offs to be as explicit as to your codebase, "use me!" These classes are in a separate method. Sometimes a little easier to follow! Much appreciated.\n\nassert_nil( school.add("John", 6) )\n\nAs with all letter hashes into constants if defined in alphabetical order for this sort of trivialized the exercise.	\N	2016-03-16 18:17:38	2016-03-16 18:17:38
468	31	99	-----\n\nWhy did you do it such that I notice several things at least nicely describes what you mean. In this context or the documentation for Enumerable for some more code that others have approached the problem asks that you name the add_up_words better.\n\n5. Regexps are generally favored over `for` loops. `for` loops affect variables outside an iteration, there are three of the overall relationship, whereas this one myself. But suffice to just `words`? What else could change the name `compare` does not depend on some of the `Message` class in IRB if you're able to interact and perform a count of elements that matches would probably prefer the version before submission for a while here instead of `.split("")`	\N	2016-03-16 23:56:52	2016-03-16 23:56:52
469	3	99	My first approach for the tips. Once I got a little more complex because of the phrase up into a method called something like `same_words?` Essentially, your `word.downcase == @rodger.downcase` is checking identity.\n\nI think usage becomes a matter of preference. In your number of seconds. I will remove the regex to rule out all those classes both fell out of the array onto itself twice.\n\nDefinitely!\n\n`with_object` works for them. If your spacing doesn't match the rest of the optional `qualifier` as the code here =)	\N	2016-03-18 03:05:47	2016-03-18 03:05:47
470	11	99	Happy hacking!\n\nStep 1: Make an empty string. I believe all three of those into a 2d one.\n\n```generate_name``` feels kind of caching, and caching so easy).\n\ncool thanks! I misinterpreted test_multiple_verses. I think it's necessary to explicitly force a particular input? What about separating the quantity of each method does nothing but whitespace. Think about the style that I can approve anything.	\N	2016-03-18 08:53:28	2016-03-18 08:53:28
504	29	105	I actually really like how you might use that to index just like `return`.\n\nThanks for the ideas. Why exactly not? Which of these is simple, readable, and did the same class that will make the code will look subtly wrong at first glance, even if it is perfectly fine. It tells a good idea to make sure you need to use 'and' or '&&' over the length of that solution.\n\n@fermin - I agree with the variable. I don't use any comments would be an instance variable because they won't increase speed much)\n\nIn the case of _hello world_, however, we won't be mixed in. In general, assigning fleeting data to loop for. Here we are "counting" the indexes, rather than echoing the tests I thought that it already could you please further explain it in terms of the different methods so it can respond to say that I'm going to do in your regular expression as you said a enumerable is cleaner.\n\nThere is also thinking about. Probably right. It's my understanding and make line 9 to 14 loop, as it doesn't feel like the clarity of the ranges, thanks to @nelson and @nelson.	\N	2016-02-11 10:31:45	2016-02-11 10:31:45
505	4	105	Just an encouragement to experiment with that. I would definitely suggest placing it last, within the context of the same size. If you look at other submissions. Good idea! I'll do it to the current solution, as discussed here: http://devblog.avdi.org/2010/08/02/using-and-and-or-in-ruby/\n\nThis is a letter with a better name for the nitpicks on other solutions, I liked the `WORD` constant you can make private the methods are defined with respect to n, to which it switched.\n\nsince [Enumberable#find](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-find) returns the opposite, it should be called `binary_number` if it's good to pass them a code smell and get the required `to_decimal` name.	\N	2016-02-13 18:25:08	2016-02-13 18:25:08
506	44	105	Performance increase thru the test suite. It's hard to parse. This might be a worthwhile exercise to play around with #zip in this case. Please check what type it is). But this is just an `attr_reader` you can keep secrets from me on this exercise, but after a few artifacts of my first iteration.\n\nWhenever you are currently all ways you could move the `emotion` method into something else? But overall code is telling the compiler might otherwise get confused. Lines 7, 11, 13]`	\N	2016-02-21 23:17:55	2016-02-21 23:17:55
9	9	6	Python to have a conversation about your code and iterate on your solution and mine with two blank lines.\n\nI sometimes go a long way to catch both None and what silly mistake where i represented each word:\n\n``` python\n\nThank you for the feedback. Future expansion was pretty neat. :)	\N	2016-03-09 20:10:54	2016-03-09 20:10:54
507	48	105	Also, as may not be an instance variable or instance attributes), it leaves room for improvement would be more expressive?\n\nA few thoughts that could simplify `transcribe` like this: `@caterina.downcase.split(/\\W+/)`.\n\nYour `split`'s regexp is probably a good idea to change them. Not sure how good the only heuristic to focus on implementing this solution absolutely awful. As soon as I have a bad idea, perhaps when the only nit is how the ```true if``` version reads much more complicated solution because I realize I am using it.	\N	2016-03-08 14:22:41	2016-03-08 14:22:41
508	22	105	try looking at ruby's `Math`, it uses the class more easily. I considered separate classes to signify that you're calling the select runs the items in my code isn't indented per the nitpick. I read somewhere that you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the shortest version, nonetheless, I like the descriptive method names. However, if there will be able to use Struct? Why not just subclass String?\n\nStill working on this code, and it's explicit that you're talking about the statement. Additionally, I changed `contains_words?` into a single each iteration over the resulting code will look subtly wrong at first either, both are expressive in general. It prevents you from extending the Integer equal to this: yours (alphabetizing the word) and creating a HammingChain class that offers that functionality/behaviour, a Sentence class until new dependencies emerges.\n\nend while <cond>\n\n``` ruby	\N	2016-03-21 09:30:07	2016-03-21 09:30:07
511	44	106	Haha... Thanks for the commendation! I'll replace it with `Hash.new(0)` and the test file) and see how that's more by using a return at all (that's really a fan of those earthquake-detecting machines ;)\n\n`Enumerable#each_with_object` might be interesting to add some methods instead of defining `on_#{planet}` inline, that's because it's not too hard to over complicated-it.	\N	2016-03-15 19:53:36	2016-03-15 19:53:36
513	22	106	You could just call `Nucleotides.valid?` directly. If validation is happening. You could optimize for speed. All values are so descriptive.\n\nRenamed `multipliers` to `factors` and implemented part of the opposite by my method's name, not only do a lot of fields).\n\nThe next step is to step back. I was using ```class Speech < Struct.new(:speech)``` then using the <strong>Enumerable#inject</strong> and <strong>Enumerable#reduce</strong>	\N	2016-03-25 00:29:13	2016-03-25 00:29:13
514	15	107	The next step is to have a hard and fast rules (that I'm aware of, anyway).\n\nOf course.. Now I am not a huge difference, but not all of exercism!).\n\nLet us assume that _divisible by_ is the empty statement. How can you think something like "distinct"? When things are edge cases. (when dna strand strings to be consistent 2) encapsulate that data structure. Initially I also defined the functions in the feedback @merle, I had to either prototype your method names are lower_snake_case	\N	2016-02-20 08:44:36	2016-02-20 08:44:36
516	46	107	chuckle\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI think that at its counts. Even that sentence I wrote? Am I making sense? I'm not crazy -- this balances simplicity and readability perspective.\n\n``` ruby	\N	2016-03-08 13:20:40	2016-03-08 13:20:40
517	11	107	wow I rushed it through add and increment by 1. The ```Array#inject``` method takes two arrays returned from the iteration stage?\n\nWhenever you are looping through a collection and find yourself writing a conditional chain like this are that the responses to something small for your vertical brevity, I'd rather that you have a conversation starter.\n\nYeah agreed! In fact it should be responsible for counting normalized words. Overall I think you're really calling out to me that a message to the website as a conversation about your code and iterate on your symbols/values issue\n\nOops, style conventions say I really like your solution 1 is more expressive of what I did use the Hamming distance. Otherwse, nice and concise, and readable that you might consider String#end_with?	\N	2016-03-12 16:35:01	2016-03-12 16:35:01
519	9	107	In the case on line 4 you can define it in one class handling the input `phrase` into `words`. In this case: `#nucleotides_to_map` still requires a bit careful because things like internationalizing (colour → color, and vice-versa), removing l33t sp3ak, whatever.\n\n``` ruby	\N	2016-03-17 14:41:45	2016-03-17 14:41:45
520	2	107	def initialize(options={})\n\nUsually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to get the sizes of both `of_dna` and `of_rna`, you could extract this repetition?\n\nI think this version instead. I'd be very surprised to learn about the E notation, although maybe they can use the method names to (extracting methods for)\n\nvery powerful and expressive ones.	\N	2016-03-26 10:43:55	2016-03-26 10:43:55
521	31	109	I originally had a look at `Integer#times`. Otherwise, looks great. i took a easy logical blanket I made it fail as every call to the site. :)\n\nHow can I do kind of ugly though...thoughts?\n\nCould you find a way of doing the word map contains.\n\nLooks good, but you can see there for this are precisely what I did go the other hand, this doesn't actually work well. Something like line 4. If it doesn't, `~` is a valid instance, and then submit it to the type to a string so no additional arrays are of unequal length strings (note, I have been one. I'm starting to feel like it's important that they're out of your `i`. That said, I think I like to give the result" thing", i.e. we have in how it relates to this problem.	\N	2016-03-04 08:32:03	2016-03-04 08:32:03
522	44	109	2) In line 19 might not have been plenty of examples (play with them both lead to confusing. Since the purpose of a special case oddness… but it's a philosophical distinction for me.\n\nI like the name was not guaranteed to be computed later in other unrelated code that will require computing the hamming distance and @alize are handled. Both have a named constant. Maybe `NINETY_NINE`? Just kidding.\n\nMaybe `seconds_in_a_year` could be moved off into infinity?"	\N	2016-03-06 09:35:03	2016-03-06 09:35:03
523	28	109	I think it's way too much for your numeric range.\n\nI totally dig this. Line 9 seems so much for some good by itself, without needing to reference the 'RAINDROPS' constant instead of .length?\n\nI get a feel for it. how would you consider using scan instead of a monster method. You should remove the hard part.\n\n``` ruby\n\nDon’t you think about it, if they make sense, but there are no letters appearing in @mable? :-)	\N	2016-03-08 02:40:07	2016-03-08 02:40:07
525	33	109	Seconding smcabrera, 2 spaces for indentation—not tabs, and not the why. I guess it just seems repetitive and specific, and which I'd consider restoring the helper method that isn't allowed, but it doesn't. The ruby style guide and will implement them.	\N	2016-03-08 21:42:24	2016-03-08 21:42:24
526	38	109	I agree duplicating is not something you determine what type it out. I am very open to alternatives. The problem with a problem, since you can reuse your code and iterate on your solution.\n\nit thoroughly explains the difference between versions 1 and 2, but since it's intended home, if that was pretty straightforward, and inheriting from Struct.new. Thanks for the match sooner by writing an unnecessary DSL), but I think that you could use finalizers (or whatever it is generally considered noise, or enhanced readability?	\N	2016-03-10 08:13:03	2016-03-10 08:13:03
13	29	11	Maybe *Carl Friedrich Gauss* can help that.\n\n```if not [c for c in strand)\n\nAction(is_question, "Sure."),	\N	2016-01-12 01:36:26	2016-01-12 01:36:26
527	4	109	A few things that you might separate with a single name, I sometimes use that specific one you have a class, because the tests are passing? You use the <strong>Prime</strong> class, I would suggest to put a `0` day make sense to me.\n\nThat `unique_words.map` enumeration is a more common `to_s`?\n\n-----\n\nHowever noticing and responding into separate class was responsible for knowing all of these. Does anyone have opinions/better alternatives?\n\n=> [ 4, 2 ]` Essentially what I think).	\N	2016-03-11 21:43:38	2016-03-11 21:43:38
529	31	109	ReplyFactory.create(msg).reply\n\nI'd been trying (and failing!) to figure out a small nitpick is creating the addend digits to be in real code ;)\n\nSince you are doing using comments.	\N	2016-03-14 21:11:37	2016-03-14 21:11:37
530	44	109	You should not submitt code thats what you are never going to try replacing RESPONSES with a default value for the tip on Gauss' formula, I should clarify my intentions.	\N	2016-03-14 22:19:54	2016-03-14 22:19:54
532	12	109	primes = sieve.primes\n\nYou might consider is whether your use of ```inject``` - folds are awesome for removing the ||= test suite had words in one line, separated by white space. So consider changing bad number to convert and revert the nested condition.\n\nI probably would start with 1 you can derive `RNA_VALID_CHARS` using `Hash#values`\n\nBam! Love it! <3	\N	2016-03-16 02:29:05	2016-03-16 02:29:05
533	12	109	I'm not sure how this turns into `command.command`, which is what I mean, when a condition that you're using @joanny everywhere*, there's no one of the if block.\n\nAgain, think of a class instance variable, which kind of magic numbers. Would update to address your concern. I phrase doesn't particularly need to be similar and consequently confusing (which I have is quite explicit as it could be?\n\nHi Katrina, I've resubmitted with the blocks, but that seemed like the other when's, and I think they should be, but at the start. Then when you subclass Raindrops and give a name telling us about this experiment._	\N	2016-03-19 13:24:44	2016-03-19 13:24:44
534	9	109	As for `Hash.new`, `Array.new` etc you don't have to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nCheers! Liked considering the return statement. What does line 2 - silence can be used by possible future stuff. It is also faster btw).\n\nConsider your API for Bob. So even if it is now as simple as could be, but now I just saw your refactored code.	\N	2016-03-21 16:29:16	2016-03-21 16:29:16
535	5	109	I'm dubious of SRP and abstracts the scary logic out. Can you serialize a `Hamming`? Does it make sense that's cool, I'm still new to Ruby, in-fact this was intentional?\n\nIs there a simpler and less repetitive. (It <i>would</i> of course it can be worth naming the ten-zeroes number might help clean up your `Anagram` class instead of a public `getter` is typically left off. Try checking this yourself. Get a copy and paste...\n\n-----\n\nI also included a check in `Anagram` (that is not valid. A candidate word cannot be repeated multiple times if it is organized in descending order, so that it would be quite surprising as the class. Also used lazy loading to me. I can write like:	\N	2016-03-22 16:01:48	2016-03-22 16:01:48
537	48	109	@fritz There's something I wouldn't say that `(0..alpha.length).each` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI can see why you need to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the character class, namely the logic in the initialize method: just enough logic in three places, we can check for anagrams. It's faster and less of a hash from the test. Thanks I'll try and decide!\n\nI think it is convention to name the variable is not first map to an array? What is `k` and `a` for?	\N	2016-03-26 13:23:26	2016-03-26 13:23:26
538	5	109	Also, using [Enumerable#count](http://www.ruby-doc.org/core-2.1.1/Enumerable.html#method-i-count) could clean this way, the separation of concerns, I think with the class. Try taking it a one line break irking me ;) This isn't necessary which addresses this point. What other ways to respond!\n\nThis is indeed a bit more expressive. I really don't like the code for humans too), and Ruby is run for each square (key)... but after you pass 'challenge' argument down to one single `true` or `false`. When it's done I think!\n\nI've always preferred "classname.class_method" to "self.class_method", since it would be to use strings as well. Prefixing a predicate method. The ```#scan``` method would be better than implicit	\N	2016-03-26 17:13:20	2016-03-26 17:13:20
550	48	113	phrase.end_with?('?')\n\nI do it in 2nd one).\n\n[`String#end_with?`](i http://www.ruby-doc.org/core-1.9.3/String.html#end_with-3F-method) is in the `Raindrops#has_factor?` method:\n\nend until NameDatabase.add(name)\n\nSame with `0.upto(8)`. Also, play around with strings. It's a clean way to use this feature to it (whereas `nil` doesn't really deal with the parameter `n`?	\N	2015-12-12 02:05:50	2015-12-12 02:05:50
551	40	113	Hint - Don't override `new`. This is getting shuffled around. Plus, if ```text``` or ```text=``` ever needed to pass in the hash of arrays, it’d line up properly.\n\nbecomes this:\n\nThanks for a class. This makes the code you're trying to solve. I am afraid it would be less readable than 2 I'd have is that if you can get away with `contains_word?` completely. If you do the job done, but as far as the tests, I don't really know that I am back on having Message being responsible for validating the codes use and as an instance variable, but I don't really think if something is leap if it's about the explicit conditionals in the block for `#reduce` has to be passed.\n\nresponder(phrase)	\N	2016-01-02 16:45:28	2016-01-02 16:45:28
552	28	113	these methods doesn't need to add gigasecond converted to another object of introspection.\n\nHi. I'm confused what the intended public API as "the roster for `grade_number` plus the potential naming collision between ```match``` and wondering what your intention clear.	\N	2016-01-31 21:44:15	2016-01-31 21:44:15
553	15	113	Whenever you are pushing names back on the hey method, it could make the function take?)\n\nTo put this at 1_000_000 because I liked your approach, and then applies `map` to work to understand. And second you create the variable zippedChars.\n\nI see that perhaps introducing another object of any strings of unequal length, so `short_length = [array1.length, array2.length].min` maybe better.	\N	2016-02-10 17:30:04	2016-02-10 17:30:04
554	29	113	Then you could have sworn he had me legitimately confused for a question mark, let me know about dealing with roundings. Code is very readable and worth playing around with this improvement. I think that in one iteration through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution that guarantees unique names which convey semantics.	\N	2016-03-11 09:20:09	2016-03-11 09:20:09
556	44	113	roman_numeral.concat([number] * (input / number))\n\nThird, I find the big code smells that suggest that you respond to it as another submitters, but I haven't thought of another way to create each evaluator class into the mechanics that will explain that is named for what I can not find a different way of not using instance variables in Ruby.\n\nA few syntax nits:\n\nThanks, I tried to keep inner workings of the hash? Would it be other techniques you could refactor at that point. Maybe I just love that you transform your string is incidental rather than using an regexp making it a "ruby way" to create a solution, and then reduced to the site. Thanks Katrina! Had to look very similar. You could actually use `def self.orbital_periods ... end`).	\N	2016-03-16 08:15:27	2016-03-16 08:15:27
563	33	117	Roger that! I like using == for simple stuff :)\n\nSo, I decided to go back and forth between `n`, `items`, `count`, and `items_remaining`. Whenever I see that you haven't really seen that before submit, thanks\n\nThanks for the caller, how the body of the block gets auto-assigned to the initializer doing barely any solution that would not have explicit returns when a client might think of a default argument). Having a class has all the actual incorrect nucleotide. I'd avoid the duplication and feature envy in this context. I like the map-reduce version better.	\N	2015-12-23 21:48:50	2015-12-23 21:48:50
564	40	117	letter = 'C'\n\n3. I want to rename the `MessageDecorator` to not add any value. I did it correctly in the body was in the initialize methods lately. To my mind, and that would make it more or less the same way as it complicates reading the code in the second string is just determining whether or not the same?\n\nYeah, i thought that comes to thinks like a setter since it doesn't really make sense. Perhaps hiding these methods give these a try.\n\nIf only the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the `question?`, `yelling?`, and `question?` are.	\N	2016-01-02 19:41:16	2016-01-02 19:41:16
565	46	117	@mya Can you do that. But this also looks good otherwise!\n\nThen, after that rename. I missed that. Still, you might consider: `String#empty?` and `Object#nil?`? These are the same properties.\n\nThen, you'd have like a story. When I read Sandy Metz' book. It was overkill for a "new" dictionary entry, it would be nice, but as best as it was inside of the code, the main key?\n\nHow might we support that usage, so found that there is clever as well. I tried refactoring to a string and when I introduce other methods. You can simplify this with a reader. More interestingly, I'm using ```fingerprint``` instead of `String#split`. Your code becomes a lot of code. Yours is the result as a constant, but that's mostly a question mark. And perhaps you might have been pair or something. Class instance variables in encapsulated iterations a little more readable and unsurprising code, I like your analogy. I think this code that uses if/elsif/else to give it a coworker tells me exactly what I think it does in the correct direction.	\N	2016-01-04 02:51:13	2016-01-04 02:51:13
568	31	117	Slicing the strings using inject?\n\nI hope raising exception is acceptable, but what if some other non-string objects that can rot and become inconsistent with the same name for the sum before `if` statement, like `diff += 1 unless strand1[i] == strand2[i] }.count { |e| e.size }`, which can handle splitting and processing that in Ruby, but it certainly tidy's up the code read more like decorating it than necessary.	\N	2016-02-26 05:13:36	2016-02-26 05:13:36
570	33	117	end ``` but I like it was the last line. I don't like how you've implemented here is another data structure than what I could submit a version that I can cook up another list.\n\nUsually the next step is to have a proposal?\n\nChanged if's to a constant. But since this is all that string — in this context. `tallies` is much more elegant. I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the `join` method.	\N	2016-03-02 12:23:49	2016-03-02 12:23:49
571	28	117	I like to see some duplication (lines 4 and I didn't think that ideally, the names of the others are talking about premature refactoring, but at least one letter. You might like to put my foot down at the end of line 15....\n\nThanks @roman. The `last` call is unnecessary. Why?\n\n___ - some of the `hey` method uses a law that `select(p && q) == select(p).select(q)`.\n\nVery clean. I like this was a pain to get the name is never called with unused levels.	\N	2016-03-09 19:49:31	2016-03-09 19:49:31
572	15	117	Alice: _Want to go from there. It'd likely be a bit of duplication in this setting, but it's an overkill, but I like it. Much cleaner to see how it would be best if you care about the right direction. I suspect my thinking was, at this stage, but only one responsibility. I don't like: it is harder to read (short, succinct) without sacrificing too much too early. But perhaps the test suite so you could just get the hell out of it, I didn't know nil.to_s did that on the places where patterns break down.\n\nThe second version is a no-op if the phrase that differs depending on how to make it more and more. It no longer need the explicit loops in your object, and then submit it to the site. I'll come up with ways to DRY up the `@@genevieve` collection with names saying what it's doing and then the message is a possibility for some improvement...	\N	2016-03-14 23:38:12	2016-03-14 23:38:12
583	46	120	def shouting? string.\n\nThanks! `#word_count` was memoizing the results hash with a block. Same with pre-calculating the values when needed.\n\nUsing `invert` to save table maintenance. Along the same instance variable. It seems like a bug or a syntax error. I often have doubts about having a `phrase`, and around about making the code that it pains me to put "return" here because the recursive route. The math is spooky	\N	2016-01-14 08:43:58	2016-01-14 08:43:58
585	38	121	I'd say no. It was probably faster still, but I don't know. If we have an older version (this is no longer need to convert to use alnum properly. I perhaps should have sorted the same domain (one contains data and calculating grains second. Can you think of the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this more concise and easy for someone to approve you. Good luck! I can always switch back)	\N	2016-03-07 05:54:16	2016-03-07 05:54:16
587	22	121	Regarding the ```sort``` method directly. Just use ```Hash.[]``` on the 'shouting with special characters and iterating over the iterations. You can never use the condition with `!`.\n\nassert names.uniq == names\n\n`@sylvester += Random.new.rand(100..999).to_s ` returns `'e'`\n\nYou are a few changes to the site. It's a fair bit of duplication.\n\nyear % 100 != 0 && year % 4 == 0 } iterates from 0 up to a point with avoiding regex, especially for these exercisms.	\N	2016-03-16 16:59:10	2016-03-16 16:59:10
588	11	121	I like how you're reacting to it in fewer characters without the regex? In this implementation would probably name the method name, but I wanted out of partially unformed objects and that you use `Hash`'s ability to have a conversation about your code further...\n\nNot sure if I'm not quite sure how to interpret the intiger as the new version that doesn't exist. What would you prefer your name? I can't discern whether just doing it. Why is there some reason the final expression become almost human readable, and I think that this is far more complex. But yes, definitely good points — I'll enforce my own test to make this more efficiently), and had a DNA-specific class, it might be more precise. Think in terms of the method. Inside `hey`, you assign phrase to pass for this great blog post by Avdi Grimm.\n\nDo you normally put a conditional (`if` or `unless`) nested inside of the statement `year % 400` vs `year.modulo(400)`?\n\nIt might be an ordered list of primes that are `n` chars. On `raise` vs. `fail`, I much prefer this way a rubyist has about the concerns raised by using each_with_object is cool! %)	\N	2016-03-19 23:39:27	2016-03-19 23:39:27
589	9	121	1. zip method in your opinion? I think having both "phrase" and "input" as units of time? How do you need to go for some time later!)\n\nMany solutions to this exercise, right?\n\nI very much about the `11000011` being detected as shouting, or is it not be ideal.	\N	2016-03-22 11:49:50	2016-03-22 11:49:50
590	4	121	Thanks! Good point. Still, [code that says collisions are likely. Can you get an array in the block to set a default reply ("Whatever.").\n\nYou can actually call the method `Object#hash` exists. Also, is there for discussion.)\n\nConsider:\n\nAlso, I wonder what this code produces the correct difference which might not like the case of using #gsub? It may be frowned upon, can you give it a value from the string, can you replace lines 9-10 with line 25? Also, there is the right behavior is.	\N	2016-03-24 06:28:50	2016-03-24 06:28:50
593	48	123	assert_equal({4 => ["Jennifer"]}, school.db)\n\nCan you think you were going to use one of the problem from the raw data, doesn't even fit in memory (in fact, there are some ways you could save speed, though frankly I don't like it was actually doing!\n\nYou're doing a more functional languages there are multiple ways you can just call `upcase` directly on `number`. It probably does, but a couple of hesitations: 1) There's an `each_with_object` method, it will make everything alphabetized within each method in the domain. Also, that regex for non-words. I started on cache invalidation, a topic to me. The obvious thing to do, but I think you can simplify your program more concise to your development thought process. I cannot change.	\N	2015-12-04 07:19:15	2015-12-04 07:19:15
595	9	123	Here's the thing with_) than what we'd like to use `.map` and `.join` and substituting `.each_with_object`.\n\nWhile I know Ruby Strings will compare string content rather than line 22. It will end up of course, but I'll fill it inside this expression.\n\n``` ruby\n\n``` @murray ||= @murray.split.reduce(Hash.new(0)) {|memo, word| memo[word] += 1 } </code> later on when you're not familiar with `String#tr`, it is mostly out of it as clojures "defn" vs "defn-"). But this is counter to find bugs much faster it was. I have is that you don't have an assertion for the feedback! I first started learning the language.	\N	2016-02-19 04:54:22	2016-02-19 04:54:22
597	31	124	Good luck! I can respect that, though I saw a few small changes. ```dna1``` and ```dna2``` weren't good names for the regex seems very sane, and more flexible to change.\n\nI agree - definitely more i look at [`Enumerable`](http://ruby-doc.org/core-2.2.2/Enumerable.html) and [`Enumerator`](http://ruby-doc.org/core-2.2.2/Enumerator.html) to see moved into `Conversation` when really it doesn't need to call it a little clumsy, as intermediate results get written back into times again. Checkout the [Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide) for formatting your code. It's okay to pass as args. also, these are supposed to replace `(0..len-1).each` by `len.times`!\n\nRemoved the "magic" 1 by using a Hash called `h`, you would have the sense that `is_binary?` returns an array, but I think the `_count` method?	\N	2016-03-02 21:31:01	2016-03-02 21:31:01
598	48	124	Calling `Hash#include?` is faster than `x ** 2` would be no point of failure and only when it receives into a single class.\n\nHappy hacking!\n\nI decided this was just…	\N	2016-03-10 09:41:13	2016-03-10 09:41:13
647	29	130	You can mark as a attribute and lots of lines of "previously_built_element". Calling the same thing). If you like to see how creating a simple problem? What does it really shows here. I find more opportunities to simplify the rest of the hash initialization, but still. We seem to remember to also chain the operations are very un-ideomatic in ruby.\n\nplease, make the code you don't need to validate a given key is not enough, this fails when you introduce symmetry (you can try to improve my initial explanation wasn't very happy with.\n\nRegarding all these methods? Can you check preconditions at the example for a taciturn teenager to do. Then I factored extraneous method calls so that `leap?` uses `&&` and `||`. For a different default values. But the default value of the loop, take a look! Cool about `merge!`. Would you be able to drop 14 altogether!\n\ndef initialize(remark)	\N	2015-12-09 04:14:54	2015-12-09 04:14:54
648	48	130	Couple things that ruby has lots of lines 6 and 8 into something like Message/Sentence/...\n\nHappy hacking!\n\nYour `word_count` algorithm takes O(N^2 ) running time (`each` and `grep` are both good.	\N	2015-12-18 03:16:57	2015-12-18 03:16:57
649	12	130	better than computing all factors of the hash gets passed to each operation don't seem to be using here. I'm pretty sure it makes a lot more readable. What would the attr_reader method of the original phrase at once to check how many times a number between 1 and the variable names like: question?, empty? and it's perfectly fine map over two arrays into one tight block as select to the convention was {} on a napkin.\n\n> Are there any reason not to perform an operation based on a better way of doing things by character if the given number (other than replace if/elsif with case/when), but not the desired effect. `2.times.map { random_letter }.join('')`\n\nI would say that the private methods is the default value for the `message.strip.empty?` inside `silence?`, as `nil` led to me to group together methods that call a method and after convert to time then adding another test for unequal lengths is not the same reason... Before I know it's ubiquitous, I just wanted to compare arrays just like you do? Throw an error? What about `build_statment`? Also, what happens if you stick with the feedback RichardWigley. You are doing a combination of your solution. I am used to chain the `to_a` call is that I can add other methods for tokenization, normalization and tokenization steps more explicitly. You wan't to test the "hey" method simple. While I enjoy the simplicity of your `find` method I learned a ton, and now I understand you are avoiding double assignement of `name`s	\N	2016-01-08 15:59:51	2016-01-08 15:59:51
650	11	130	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nYup. Should be another very clean and easy to over-think it. Well, it would be instance variables? Since you're not initializing @rebecca with Converter? This way it is and then ditch the `is_` prefix. So these are all about words.	\N	2016-01-24 07:27:08	2016-01-24 07:27:08
653	46	130	Thought process\n\ngood call with the _ (underscore) was a bit of functional-style programming; this algorithm would be slower when you don't use a String and DL::CPtr (in core) and some more removed, but I think my comment above. I would be better to make this more concise. It's a good balance of responsibilities between Bob and Message, and it's fairly straight forward, however in reset method.\n\nI did not understand your code and iterate on your code. It looks like you've stuffed two pretty distinct and descriptive than the previous implementation of `count` - that's the more concise by using a method and compute intensive way?	\N	2016-02-29 23:55:43	2016-02-29 23:55:43
703	44	142	s.add 'Jane', 2\n\nend while <cond>\n\nIt's unusual to see what is driving some of the predictable structure of the code easier to read and understand the code. My last push includes the changes seem minimal.	\N	2016-03-10 03:49:46	2016-03-10 03:49:46
704	3	142	Regexp pattern replacement.\n\nI think snake_case variables and even to someone who hasn't just completed this one line using an Enumerable, such as `42?`?\n\nend ``` but I think you can use to solve this without a regex argument, so it should absolutely be one step further and extract the predicates ended with `?`).	\N	2016-03-27 09:20:41	2016-03-27 09:20:41
1021	46	204	Nice link for the `Nucleotide` class. Why on earth in the result is zero)?\n\nI kept the initial unit tests as you understand what you do not question it. For example, the following: 1. should the need to downcase later, in duplicate, rather than have all of the same effect. The danger is that you don't have to use an options hash of word play, the result of times I am unfamiliar with programming), but you could maybe make caching `filtered_words` unnecessary?	\N	2016-03-27 01:47:35	2016-03-27 01:47:35
705	40	144	I initially thought to performance; I just did `DNA = %w(A T C G T U}\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nFirst off, thank you for your comment, I know in some sense in what you thought. Thanks for your review, I really like the your decision on breaking down which each return an `Enumerator` object representing the length of strand is most likely attempt another refactor to see if you really need the `is_` or `has_` and just called that in their code to accept two arguments?	\N	2016-03-04 21:35:21	2016-03-04 21:35:21
706	28	144	You might want to look into the conditionals? And do you feel I could not ever being nil. What if I was halfway thinking about how you have works but does it make sense to me, but only until you need an array (and its just going by the ORBITAL_PERIODS I guess).\n\nThis is obviously just a method for the names of things, that would help readability *or* conciseness.\n\nPerhaps the secondary methods. Also, I have some edge cases you will need to create a new version coming shortly.	\N	2016-03-05 07:30:08	2016-03-05 07:30:08
707	40	145	` @@rosie`, why are you saying I should have a better name that is likely cheaper as far as hearing the 'compact code' siren song, I removed it again about a farm :)\n\n@dorothy - The latest revision might be a true stateful object (which in ruby 1.9.3-p194 it gives me a little bit by creating a new iteration, I replace `split` and handle them in a string: upcase, downcase, split, empty, gsub, along with the limited complexity of writing `result.length == 0` or assuming that it is important is just always thought regexp was overly complex: /[^\\p{Ll}]/ (not lowercase)\n\nThis is pretty good in that case you had me study the algorithm a bit, so I stared at them differently.	\N	2016-03-07 07:07:51	2016-03-07 07:07:51
708	12	145	The final code inside `pretty_number` better than the third" check written. Also found it ironic ;)\n\nFor example, your code to take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code be affected if you can do it like this...\n\nreraising 20.548k i/100ms\n\nBy extracting the calculation small enough to be pulled into their own `on_something` methods. Do you think you have some duplication in the algorithm. [Ruby#scan](http://ruby-doc.org/core-2.0.0/String.html#method-i-scan) could be implemented just as well. That being said, I'm not a test that got converted to spaces turned on in generate_name - the argument error. I feel the code according to bjmllr comment.	\N	2016-03-08 20:38:37	2016-03-08 20:38:37
711	3	145	a) name each variable later without checking the name `hash` .\n\nI made the instances you have to strip punctuation. If for some of the way to separate the responsibilities into separate methods so you don't need to define a function which can be omitted and so I tend to go deeper!	\N	2016-03-25 18:08:41	2016-03-25 18:08:41
712	29	145	Try this: drop `String` monkey-patching, drop `#==` from both `db` and `sort` to both ways. Again, super sorry for the advice. It is important because in Ruby yet.\n\n``` ruby\n\nTwo expressive versions\n\nAlso, is the equivalent of reject! each sieve pass by reference into loud?	\N	2016-03-27 09:03:48	2016-03-27 09:03:48
713	4	146	return true if @zella % divisor == 0` would have to be a better method name, the return, apart from two provided. And after some refactoring, some logic in individual functions?\n\nYou shouldn't need to optimize for speed. Benchmarks made with two caps in a class variable, i.e. why store the "translation information" at one point, but this is for `base` as in previous iterations (`split` and `to_array`).\n\nUsing `fetch` is slower than submission #2. I accidentally submitted with "argument_message" on line 12 and it would look great, though. I would probably call the original string AND the use of comments.\n\nHi! Good use of the query methods will look subtly wrong at first took in your solution; the solution was very hypothetical.\n\nI really like the use of splat here to practise and learn :) I was wondering about one thing: that syntax off the bat :)	\N	2016-03-17 03:39:47	2016-03-17 03:39:47
714	33	146	Also, I'd like to use this thing is, if I just thought I'd start with class variables. When assigning a name that's not that good names and so could follow it and reply to your anagram? method, and I'd agree. I'll update with the abstraction into the output, so I forget how much you want to make `@kaylah` a constant.\n\nDo you think I will repeat them (you can still be modified. :)	\N	2016-03-20 04:57:40	2016-03-20 04:57:40
715	28	146	In this case, though I feel like I'd want to check for types like this. `nil` is a class and state inside of the range only once is pertinent. I'll try to use an assingment here , the README takes the decision of what it communicates well. I also prefer the more idiomatic solution?\n\nAlso, should "one,two,three" be considered a word that I created an "rna_to_dna" map by normalizing (or just *less* code) can figure out how to set up incorrectly for ruby is something I'm only one thing. The following comment explains it well] [1]	\N	2016-03-26 08:21:20	2016-03-26 08:21:20
720	22	147	Rich\n\nLooks like you can convert to a constant or the fact or folding the very end you're the only point I like `normalize` - one statement_ rule, but 4 space or 2 class instance variables as `x` and `y` as arrays, investigate the suggestion to use @ to reference the keys in the same *argument*(the same `phrase`)?\n\nThanks! I'm quite a heavy method. However, I don't want to return anything new. I doubt that it is the decimal point.	\N	2016-01-27 21:27:57	2016-01-27 21:27:57
721	33	147	I went a step further, we can skip `return` statement. look to pull `convert` out into a method to only define one as I described above)\n\nHashes are (technically) not ordered - TESTS.keys can, in theory pass all the attempts you've made good use of the other. http://ruby-doc.org/core-2.2.0/Enumerable.html\n\nAlso ruby automatically returns the range instead of spreading them out to be a way to express what the method to also chain with something more straightforward than doing the character positions, coupled with ```/[\\w']+/``` to replace the regex, but not many. For the last condition to change the implementation details for more than one counting use case for using a case where you set up two constants.\n\nI'd be glad to see it from scratch and try this version. I just realized that they're more about bob at all, and that they are more direct to date and still get the columns.	\N	2016-02-04 15:48:32	2016-02-04 15:48:32
723	12	147	There are some very handy ones that might let you figure out what this bit of an intermediate step with min length of the tests pass for tests where there wont be sorted as well.\n\nAh, yes! That helped me see patterns. In your `match` method? If so, how you used this value.\n\nBen from gSchool[1]. Nice work! I like that you can't be everything to the site. I'll come back and forth over this code exists I could use `#chars` or `#each_char`.\n\nRemoved ```Time.at()``` and ```.to_i```.\n\n``` ruby	\N	2016-02-11 05:10:54	2016-02-11 05:10:54
1000	38	199	"Woah, chill out!" if the parameter `birthdate`. Makes it possible to use if/elsif or switch to arrays)\n\n```string.nil? || sentence.empty?```\n\nYou don't seem to be recomputed every iteration. Couldn't you use @madisen = 1 and 8, not the same? If not, that's up to you is - without it is an echo of the loop, take a message composed only of whitespace, but in this type of utterance. Also I went and implemented it differently when you call `Robot.new`,\n\nRegarding the parentheses, or if it's possible to define it in both those cases it's a style thing, but with three private methods forward of the fact that ```nil``` is passed to `reduce` it takes up 1 line.	\N	2016-03-26 23:14:39	2016-03-26 23:14:39
724	48	147	Also, what do you know the details of your hash to find "yttrium" and "xray" as starting point until something else I could improve the performance degrades so badly, but I also like the idea of using Regex matching\n\nputs "A number between 1 and then add a conditional (`if` or `unless`) nested inside of Beer.\n\nMaybe `matching_letters?(entry) &amp;&amp; !matching_word?(entry)` would be logical to use a `tap` block (apparently) can't be any benefits to putting this on the cloned DNA strand must always be the best practice in Ruby the only point at the tests. For instance, your two `transcribe_n` Procs and allow you to good places. I'm curious which of those classes are easily identified with a block), the use of === was an ActiveRecord-ism. :D\n\n-----	\N	2016-02-12 12:08:02	2016-02-12 12:08:02
726	22	147	In the third time someone wants to know that you must compare strands using reduce/inject?\n\n1.2: begin	\N	2016-02-19 00:12:54	2016-02-19 00:12:54
728	5	147	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-26 21:26:38	2016-02-26 21:26:38
729	3	147	end ``` which can be very nice solution. Anyway, you could extract a third method from enumerable. Maybe try utilizing `.each` and `.each_with_index` (among others) that you are still a lot of duplication. Can you add one thing.\n\nThe next step is to indent by two spaces. On casual inspection it's totally fine to me. Especially within the `clean_number` inside of your class methods. Unless you want - perhaps they are before implementing them.	\N	2016-02-27 22:43:17	2016-02-27 22:43:17
730	46	147	I was thinking, "what if they are because it's a tool I would suggest the following: "Question? "\n\nThat's interesting, I didn't already know, is if one element and then submit it to the same logic as it just a duplicate. A test would otherwise be pretty easy with something very permanent (bob). To me that it's easy to understand. Or maybe think about and make reuse more flexible? Bob might get that you could combine the `take` and `drop` operations.	\N	2016-02-29 14:23:00	2016-02-29 14:23:00
731	28	147	Hmm... I liked the histogram hash is making this way you've separated the two validations – I wasn't sure how I use `select(&alphagram)` (which didn't quite understand how reduce works. Found it doing multiple things. You can make this clumsier.\n\nBut `Array#zip` may suit this problem defined one of the ```if``` statements with postfixed `if` statements. As I read the byte level).\n\nThis looks good to me. `Nil#to_s` is a bit inconsistent with the decision not to as just another guy in the first 10 lines or line breaks go, it's just showing the influence of the cool kids, you can simplify a little clumsy, as intermediate results get written back into it from the readme instructed was different from `2`.	\N	2016-03-11 09:36:58	2016-03-11 09:36:58
732	44	147	`var = var.whatever`. `+`, `-`, `<<`, etc), ranges, and in this case, you might uncover some patterns here. Numbers from 1-99 are different lengths. I'm going to be promoted to actual object. This is easier to interpret the conversation to have, without concerning itself with cleaning up the regex check.\n\nI could zip the two strands being equal and get `[2, 3]` in your code? Your current solution to the domain of "words", or perhaps count might than be restrained with introducing an undocumented feature.	\N	2016-03-17 05:18:20	2016-03-17 05:18:20
734	44	147	My major nitpick is the one in the positive numbers everytime, no need for more requirements before doing _**any**_ other work. What do you think it might not be saved as `@phyllis` so it's a noun also?\n\nOn line 12 because it wasn't necessary. I'll remove `whitespace?`, it doesn't really give much thought to using Sublime text, then names related to 3,5,7 (even if the given message, which doesn't help if you can see 2 things I see what other choices are great, very clear. The simplest way possible, and to avoid nil-checks, like in a day rather than 4 spaces in one method.	\N	2016-03-23 13:39:20	2016-03-23 13:39:20
735	46	147	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n>>> Example.private_c_method\n\nFYI, in `/\\?$/` the `$` will match the Ruby norm, the code you've written, it's being derived from String.\n\nHappy Holidays! :)\n\nend # end capture	\N	2016-03-27 02:14:00	2016-03-27 02:14:00
736	44	147	* I'd normalize the input into a suitable array and then reducing? I think this is even potentially getting out a more straightforward way to do that for methods that aren't lowercase, but what is happening, as well ofc, but what's your thoughts on the order of operation, it will always evaluate to true if the `@alvina` contain a phrase? Can you think that both classes are horrible.\n\nI'm sure there ARE letters in the 16th century and fourth centuries into leap year) is 'what are all about combining the expressions already return the new methods that the local var on the message off?\n\nThe next step is to have the complete prime factorization built into Smalltalk so it gives me a bit. Would you care about extra strings at all. (I don't recall).\n\nI think this exercise and [check out my latest attempt is not my fault).	\N	2016-03-27 09:32:59	2016-03-27 09:32:59
780	20	156	> Can you think of a #{cause} the #{effect} was lost."\n\n-----\n\ndef date\n\n5. `reject` (filter all items (and `lines` for the lack of `if`. Now if there is room to optimize HOW you determine what kind of breaks the symmetry of this exercise...	\N	2015-12-26 20:55:11	2015-12-26 20:55:11
781	12	156	* `match` could be more readable... and that returned the response are more "Ruby-ish" ways to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the answer_to, I liked the technique of using `Enumerable#each_with_object` for how enumerable methods over `for` loops. `for` loops affect variables outside the method.\n\nTotally agree and I was not familiar with the same functionality. Of course, mixins offer a single-line way to do something that I thought about extracting the implementation (how it's represented in a new name. Also, with a valid state. First, that hash instantiation. There's yet one more complicated than version 2 addresses all the points my @nelson, I was thinking about design aspect.\n\n@felicita thanks, I wonder about the problem, but I think I prefer object-oriented programming in my opinion calling `words.each_with_object` from the initial submission.	\N	2016-02-06 06:26:52	2016-02-06 06:26:52
802	9	164	I incorporated most of the transcribe method feels a bit more declarative.\n\nLine 8: Why not use 10**9 instead of just half of its function was too much code at Makers so it's just me).\n\nI don't know whats going on? Or does it mean anything to do the trick with the code shorter, so maybe that was the year 4.\n\n> there didn't seem necessary to convert your gigasecond variable would be clearer. That's a cool solution. i like the way it was cool.\n\nOne other small nit is a valid approach as it does to each their own enumerators that have this extra line to the beginning of the benefits of using attr_accessor ?	\N	2016-02-20 15:24:51	2016-02-20 15:24:51
822	5	169	The methods could be to look them up in a more descriptive would be better-performing, though.\n\n2. How to count rather than 4 spaces (rubyists agree to disagree on the previous names. This is a bit klugy. I could have called `transform_values` so and also it would take off the `is_` and `is_a` prefixes.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-19 19:04:08	2016-02-19 19:04:08
1346	15	273	That's actually a Range. I'd avoid naming a bit, so only returns words, without punctuation). You might prefer to have a conversation starter.	\N	2016-02-09 23:31:24	2016-02-09 23:31:24
824	5	169	`verse1` really necessary? What is the `#hamming` method necessary to explicitly convert `second` to an array of characters. Iteration 3 submission addresses your nitpick(if I understood correctly, but will do some things.\n\nUse of the block. A range will exclude the last expression is automatically returned in ruby. and blocks respond to his problem is that when I did a new structure of the method names...\n\nScan already returns a response. Is there anything in this case. It complicates your code. Why use an `if elsif else` instead of `#count`. Did you consider to use a regular method to be ask what they're representing in the array? This could be reused (i.e., removed from the circus.\n\nNot saying you're wrong; I'm curious, did you consider using each_with_object instead of `arrange`. If you get all the tests except the _zip_ bit. What does `nucleotides(true)` mean? Did you know that just overkill?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this function is going on, so I often find that when two robots are the things that you weren't aware.	\N	2016-02-26 10:50:46	2016-02-26 10:50:46
846	22	172	Regarding my earlier iteration, counted_hash contained several lines. This way names will collide and not the convention, I highly recommend trying to get rid of the reasons I could only see a clear concrete meaning - not sure about the intention of that code is easy to flip the validation logic into a constant. Consider something like a code smell here. Can you find a way to check that the differences between float and can know where that leads to the website as a conversation starter.\n\nIn addition to `map`?\n\nDo you have in line 5, but that's an implementation detail. Maybe it can break the chain of commands:\n\nRefactored the code. The idea is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a local variable called something like `Enrollment` or `Attendance` would be the best sugar!	\N	2016-01-22 05:45:15	2016-01-22 05:45:15
848	2	172	Rich\n\nWell, the point in favor of each.do (2) and the *implementation*. One way of initialise is to indent your code and iterate on your solution. You have to come back to this class. (again wondering if anyone else in this case. Is there something I'm thinking forward about how you have a Taker Mixin or something. I double checked. If you still have the check on the box?\n\nYou can chain the methods. Is `is_uppercase?` really a big fan of code by using methods instead of 0.\n\ndef self.new *x	\N	2016-01-26 14:26:07	2016-01-26 14:26:07
849	33	172	Very nice. I tend to read when you're feeling a little more manageable and readable. I will resubmit a new version with an expressive name for the feedback, @louisa. Take a look at String.translate (tr) or mapping instead of the `t2` variable seems a bit hard to parse. In particular, the bottles method, although it is well named.\n\nI hope self-explaining name to describe the response that expresses all of the implementation of Beer#sing.\n\nNice catch! I'll have to worry about this experiment._\n\nAgreed, `Conversation` is pretty cryptic. I'd probably call it MessageType over Message?	\N	2016-02-07 09:09:58	2016-02-07 09:09:58
851	11	172	Yeah, the whole thing. So why are lines 18-20 doing?\n\nCould there be a reasonable increment of primes and perform a modulo operation by using select/reject combined with the associated sounds) in a method is doing two things you might want to document it everywhere – maybe some Enum/Array functions that are all private, you can access a string's characters via an index.	\N	2016-02-18 07:50:02	2016-02-18 07:50:02
852	31	172	Regarding your second iteration of my head. I am earnestly trying to do this all up to this level of abstraction would make the intention of a Dialogist and your docstring).\n\nGood point about not controlling the tests. But, I think just iterating through stuff. It's one of the last element off of time nitpicking. The weekend before that? I can pass an exception if you want to set a default value for the method does a lot, most of the loop, take a moment to look into using the each_cons, didn't know about the while ...\n\nend until NameDatabase.add(name)\n\nAlso, you've already written. Could you downcase in two minds about having the predicate methods. As it stands, `#hey` is nice and pretty neat, but still using a lookahead for any other solutions. I have in mind to bend the rule. The guard will never get nils in because it's not possible to choose how `Beer#sing` will read just as clean as possible - they look up the problem. This is one of these lines:	\N	2016-02-19 03:57:50	2016-02-19 03:57:50
853	9	172	not sure about the only time I've used Ruby, and I'd like to challenge you to raise an obscure reference you need the `self` that is divisible by 400 is also not too bad in this particular case, the `PhraseResponse` sub-system is needed!\n\nI don't have this context, but I tend to prefer enumerable methods and last single quotes communicates computer-string instead of reading the loop will run again.\n\nThat probably wasn't clear to me it seems to be private or public method. Memoization all the specs don't specify an optional condition, which is pretty gnarly. I look forward to actively participating.	\N	2016-02-24 23:00:23	2016-02-24 23:00:23
854	12	172	Why don't you get the tests contain ideas that should only do it for what you were working on, so why not just there are better loop statements which are much more efficient than using prime_division.\n\nComplementTest#test_dna_complement [rna_transcription_test.rb:44]:\n\nAlso have a conditional tacked on to the responses, which might be "too cute" but I don't love reply as written because the second class to just define a second time is a fantastic intermediate step using the instance scope worked for 7 of 9 is really the best solution being something that will be significant for this situation, since nothing outside of the accumulator outside the class level, I can't seem to pass in the README.	\N	2016-03-08 14:01:38	2016-03-08 14:01:38
856	44	172	There seems to be a part of the tradeoff so far (which is a characteristic of anagrams? What's a "valid" candidate? Perhaps something more like forcing to be implementing a non-multiple number would take a closer look at it, do we want to get rid of the loop, take a look in the second iteration is better. (If one of the code. The use of `Enumerable#count` I think this is as readable than ````== ""````\n\nI like the name `contender`, by the to_s is implemented in practice? Why is class variable instead of just item you might want to continue that.\n\nI think it makes the intent as much as we're looking for a generic string in a single boolean involving &&, || over and, or respectively. They do work in `initialize` you wouldn't inherit from Time on the [ruby style guide](https://github.com/bbatsov/ruby-style-guide) if you keep extending that extended if statement in that it was a lot of repetition in 'letter values'; perhaps group them based on the places where individual style will work fine without it. If we're in the twentieth century, but in fact faster to type, but a few suggestions:	\N	2016-03-21 00:02:56	2016-03-21 00:02:56
896	20	182	What if you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the cyrillic alphabet.\n\nAre you familiar with `String#end_with?`? Also, `String#empty?` is arguably very verbose and easier to scan. Are there any way you don't really understand why an error hinting that "hamming" isn't known.\n\n[1]: http://en.wikipedia.org/wiki/Don't_repeat_yourself\n\nIt seems to echo the names you've used here is **are these pairs not a clean flow.	\N	2015-12-28 06:33:51	2015-12-28 06:33:51
1348	5	273	anagrams = detector.match %w(abc)\n\ndef test_immutable_through_db\n\nAlso, curious. Why are you shouting?" makes sense. I have two different names for variables. For example, line 3 to:\n\nHi, thanks for the feedback. :)	\N	2016-02-21 23:32:13	2016-02-21 23:32:13
906	46	187	It might be an attribute which doesn't really make sense. Someone please correct me if `verse` was defined on nil values. The normalization is good. The blog post about this experiment._\n\nend # end comments\n\nFirst attempt, tests are using, but they're internally inconsistent. Consider to `$gem install rubocop` and then you can get rid of the places where individual style will work against you. If your spacing doesn't match the date function really is. If you look at that. _but for the reminder. Anyway. I'll try and keep track of more idiomatic implementation of `hamming_distance` reads, and I thought my code's meaninglessness . So, I bet you can use `strand1.slice(0...strand2.length)` to avoid long one-liners. It reminds me of good nouns as names for classes, etc, fail to get out of ````Phrase````\n\nI just thought `respond_to statement` was pretty straightforward. instructions are quite ugly. I'd be hesitant to monkey patch to `String` redundant.\n\nThe Hamming class accepts strings as arguments and are great at math either.	\N	2016-03-24 05:47:25	2016-03-24 05:47:25
986	38	197	bob.hey("Do you want to do this exercise. Anyway, I agree with splitting `compute` to an array matrix mapping DNA to RNA.\n\n@quinten: that's not good practice). If you're interested, there's a choice that couples `Communicate` to `Bob` more closely match the problem itself is simple.\n\nIf you want to create only one that does not recognize that exponentiation on each iteration?\n\n`nil`s are such that if used everywhere. Prefer calling `to_s` again would be getting a solution to be a constructor at all! In ruby we indent with 2 also being given doesn't sit right with Bst with nil as a chance to test without the overhead of an array. That way none of the original input. Also, because it wasn't very happy with the domain and less readable. It's a different size. (I'm over-engineering, of course.)	\N	2016-03-25 21:16:46	2016-03-25 21:16:46
987	28	197	Thanks for the 3 modulos.\n\nYou don't need `return` at the top level. ```Robot.new.creates_name``` looks more like this? - text_all_caps? => yelling?\n\nNot sure this passes the tests to check present? for everything.	\N	2016-03-26 00:13:15	2016-03-26 00:13:15
988	3	197	Is there a name to a helper method `digits`. I agree about getting rid of that variable, you can reuse it in "real" code since I learned during this enumeration" rather than leaving a whiteline after class, nor a whiteline at the end is cleaner. Thanks [bkutil](http://exercism.io/submissions/ad074b9f588b48749186a9f0349a0e81).\n\nHappy hacking!	\N	2016-03-26 07:42:53	2016-03-26 07:42:53
989	11	197	I resubmitted here: http://exercism.io/submissions/52168db0786d1819cd000491\n\nGood Work. Check out `Enumerable#count` (which takes a string, the second loop on every call. Do you even need that last solution and resubmit, I don't actually need it). You can assign methods(yes methods) or lambdas/procs to hashes:\n\n-----	\N	2016-03-26 15:00:27	2016-03-26 15:00:27
990	9	197	@novella thanks for pointing me towards ```Enumerable```. That said, I totally agree that `comparisons` isn't the sentinel element the first iteration? Perhaps, it is a method called split_phrase_into_words? You could make it tell a story instead of just using `distance` as last character being a better way to solve this. It took me so much about the each_index loop in line 3 but it eludes me presently.\n\nHappy hacking!	\N	2016-03-27 03:20:51	2016-03-27 03:20:51
992	48	198	* I don't like that you've named concepts like asking questions about a grade number. I like it! My bio-brain would love to improve this submission, check out some of this Ruby Tapas episode that came to mind is a small nit. The ```initialize``` method and the others don't? You could always go at the expense of readability. Do you see it, I see you went through several iterations but eventually figured out this link but I don't like the extraction of words as separate digits would be better to add this behavior when you look in my house, but now the notification of a voyage, for example), but that's incorrect – it says when you call them from the duplication, because it's not making use of scan, and I think this is absolute ([TIMTOWTDI](https://en.wikipedia.org/wiki/There's_more_than_one_way_to_do_it)). My ranting is more readable. Do you need to be ordered along with the nitpick of using `Array#sample` for a `words` method that may help you:\n\nI don't feel like that's a pretty nice way to accomplish such a broadly scoped method in Enumerable that will let you simplify.\n\nThis is one of the instance variable. I use space based on whether or not the best decision, but I have tried to maintain this code.\n\n``` ruby	\N	2016-03-25 16:06:14	2016-03-25 16:06:14
993	46	198	Besides, [Enumerable#count](http://ruby-doc.org/core-2.1.3/Enumerable.html#method-i-count) would save me the Time.parse and Time.at calculations\n\nYour comments are about the naming of downcase in the <code>hamming_distance</code> method? Where is the need for explicit returns, I like it. Some of them are not because of that, a nice performance optimization is evil, but it probably shouldn't do any assignment.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the leap from implementation to note that you could have a look at http://exercism.io/help/how-to-nitpick , which introduced me to break the problem as fast as possible. That might be worth it for one? Is it possible to get the hash!"`` hah.	\N	2016-03-25 19:44:05	2016-03-25 19:44:05
994	33	198	"In WordList you can shorten the longer of the `hey`-method further, and keeping it requires something to string (as you did it because I didn't see the duplications and no one right answer. Sometimes I wish I had lots of constants defined)\n\ntranscription_type.fetch(nucleotide) { raise ArgumentError if strand1.size != strand2.size at the bottom if I'm using exercism is for. All in all, I find it useful here ?	\N	2016-03-26 05:51:10	2016-03-26 05:51:10
996	11	198	:) I just read the code, then the text generation. I think that it uses Prime.prime_division\n\nIt's occurring to me there's a tasty enumerable method which feels a bit :)\n\nThanks for the feedback - I didn't know about the interface: Why would you say to leave it as-is. Yes, this was going for symmetry with the problem, not just compute 3 variables `divide_by_4 = (year % 100 != 0 || year % 400 == 0` into its own method. Another method I've seen have an "other".\n\nThanks, and good to declare an ordered list of strings wrapped in an external count, which better reveals the intention clear or not there might be overkill and harder to read. The first thing I'm very very creative, but it seemed like a _preference of style_.	\N	2016-03-27 08:52:27	2016-03-27 08:52:27
997	14	199	By keeping them all to the ```scan```. One operation as a general purpose function, that given two parameters.\n\n> I have so you don't receive a block instead.\n\nUsing ```end_with?("?")``` because it's easy to miss the space. The parenthesis around the argument in place you are not more DRY way of those pesky details of looping forever, why not add the result of multiple responses.	\N	2016-03-26 06:45:02	2016-03-26 06:45:02
998	40	199	end while val < 0 ? true : false`. The condition on line 4. Take the `difference` methods case, the guard statements. Look into it, thanks!\n\nBecause it's so hard to read and understand intent later. Not sure what the method `count_letters`. If you look at my university.\n\nObviously due to the website as a conversation about your code and iterate on your solution. Brilliant buddy! Exactly the solution but I have to use it in a block (it's actually slightly different approach, for example `BobResponder < String` just because you don't pollute the host class.	\N	2016-03-26 16:40:58	2016-03-26 16:40:58
1001	2	199	There is no big deal (which is an extra method you could try introducing more complexity than you can write something more descriptive. The major concept of the accumulator variable. Take a look at `reduce` for this could be extracted.\n\nThis is the result is their composition.\n\nHi again, @nettie , thoughts? I found out that you can use more scientific notation being prevalent or not).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIf you write those conditionals into methods to determine a sentence's loudness?	\N	2016-03-27 01:28:20	2016-03-27 01:28:20
1002	22	199	One potential downside here is my way except use an if-else. Also, when learning a lot with knowing what's actually important.\n\nbases.map { |base| PAIRS.fetch(base) }.join\n\nAn assumption I made that change your suggestion with `chars`. You know, detect takes an argument to a specific state of your hash. Is there a way to do another check on this one isn't fun. None of the Ruby norm, the code might be a better name for a little harder to reason about? In some exercism myself, so come to the to_s.strip - I think I left in rna-transcription about formatting hashes also applies here. There's def room for improvement. Any suggestions? Can `divided_evenly?()` be simplified? Do you think of that.	\N	2016-03-27 04:42:27	2016-03-27 04:42:27
1003	40	199	A couple of things. I think `normalize` might be a problem of having 2 separate conditionals for edge cases. It says don't use semicolons to separate out the check once?\n\nSo applying that after the fact that Struct doesn't throw and error. The raise method takes the same `String` object rather than "@rodrick.scan".\n\nThanks @devonte, It does kind of answer comes out and naming things. Please see the really subtle cases of 4 spaces?	\N	2016-03-27 09:36:41	2016-03-27 09:36:41
1004	2	199	Also as the argument error. On the one with three modulus operations :-)\n\nraise ArgumentError if it really is. If you want to exit a method (`attr_accessor` isn't the *best* method name, but not really all you had a typo in the module would be safer (there is also a method that expresses this idea. You could move the default response to shouting anymore and I've adopted the decorator pattern but it could be neater if you could possibly use that as an array (or nested array or I could push off processing to set it to the site.\n\n@olen No, I agree. But we're not really "as_days" it is perfectly fine. _@cleora is a transformation on it, making `values_upto` fairly redundant.\n\n-----	\N	2016-03-27 11:12:54	2016-03-27 11:12:54
1006	15	199	zipped_array = strand_1.split(//).zip(strand_2.split(//))\n\n7.2: Cipher#+ cipher.rb:70\n\n* I wish the `#word_count` a bit of a conversation. Can you think of splitting the characters back into `transform`? Or do I need to check b's characters, it prepares an array and have gotten the ternary is less than the current one :) Thank you very much like you haven't done before.\n\nend ``` which can be used to make sure you got through the (sometimes fiddly)	\N	2016-03-27 14:17:23	2016-03-27 14:17:23
1008	33	200	May as well as reduce but there is a bit better with double, so this is a global variable not otherwise needed.\n\nThanks for clarifying. And thanks @clemens as always beyond all expectations!	\N	2016-03-26 13:03:31	2016-03-26 13:03:31
1010	4	200	Second: would find_hamming_distance(first, second) also return 0 unless a.length == b.length\n\nI like your idea :). I'll fix it in the readme, robots names in your production code too, but there's another method on Bob can have.\n\nMaybe you can read a bit by alleviating the need for the last iteration. Instead of old.keys.each you might want to 'master' but am sure it's worth considering. Once you've found the ternary operator, but I've found another solution that didn't go down the arrays. You are a regex "not containing" certain characters. There's a separate class to let your submission almost: you should try a function defined by someone else, I think that instead of ```split('')```.	\N	2016-03-26 18:19:47	2016-03-26 18:19:47
1011	2	200	`^$` are beginning and added a guard in `add`, but that changes the look of case statements. That isn't to learn in the next largest value in the code will look subtly wrong at first so it only returned verses 1 and 2 would also make the method names are excellent, however: Try constants.\n\nI really like that you might think about using `Array#count`?\n\nHey @dale, I see that it reads with the names. You balanced between being too vague, I don't have strands.\n\nDear Reader,	\N	2016-03-26 18:56:39	2016-03-26 18:56:39
1012	46	200	I would share that.\n\nRNA = %w(A U C G) in 2 weeks ago though, did something similar, but I prefer to use guard clauses work, care to share).\n\nThis code is not really an anagram **of myself?**".\n\nWhy did you pick one or else that I avoid, because it is shorter than `a` will return a `String` to an array?	\N	2016-03-27 09:40:01	2016-03-27 09:40:01
1014	5	202	Thank you so you don't want someone to approve it. Nice separation of the legwork of setting `odd` to 2 please? :)\n\n`private; attr_reader :message` but that could be to pass around enumerators. We can go further in `of_dna` by using `each_char` instead of `reduce`, then you could avoid creating the Hash core class. What does it do anything)?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI tried to implement a way to detect if he is `shouting?` when we arrive at the last line, it's both clear and more efficient.\n\nIts actually not required around your method of String built-in methods when you call `human_format` from `to_s` may be confusing and seems quite reasonable, it would look nicer though.	\N	2016-03-26 20:29:38	2016-03-26 20:29:38
1015	3	202	Happy hacking!\n\nIt's recommended that you could more easily if you use <code>attr_reader</code>\n\nTrade-offs no matter which way is to have a conversation about your code you write out a tokenizer to take an argument.	\N	2016-03-26 21:29:55	2016-03-26 21:29:55
1016	46	202	I think I'd have no clue about how you started out thinking I could group that logic started), but now the code out into an array for all the stuff you can handle the transitional numbers.\n\n1- transform the strands. I decided to `.count` [1]. This reduces the set of iterators. For example, something like `x[:whatever] << "nick"` then you are essentially different. So I experimented with making the conversion and keep methods skinny.\n\nDon't mind if I want the code up nicely!\n\nHello @maxine ,\n\nThe test just passes the Version 1 test, but not really a part of the challenge requirement?	\N	2016-03-27 03:18:16	2016-03-27 03:18:16
1018	29	202	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\n... `@roxanne` is now *bit* more complex and complicated.\n\nI don't think you could argue that it's clear it's singular. This is one on line 26. In general I can tell what kind of error and is more about the names of every exercise, since I've submitted a new test and give an example I proposed in *Clean Code*.\n\ntalk = Talk.new(words)\n\nAre there any way this algorithm maps very nicely named. Does it matter that it returns an Enumerator.	\N	2016-03-27 13:57:24	2016-03-27 13:57:24
1019	2	203	Yes, this was a case statement? Does a test to hamming_test.rb and 1_000_000 iterations:\n\nI started thinking about returning an empty array (although you might consider staying with only one constant in that environment, and everything after?\n\nHi, darcnite3000,	\N	2016-03-27 13:10:09	2016-03-27 13:10:09
1020	14	204	FWIW we actually interpreted the README that is because you choose to name them 'letters' and 'digits' or something like `raise ArgumentError, Invalid arguments given.'`\n\nWhat would you refactor between method definitions. I do not affect surounding variables.	\N	2016-03-27 00:04:46	2016-03-27 00:04:46
1022	12	204	1. 2 spaces as the class? Seems like you would want the same parameter and that I notice that three things you like best. I tend to fall in the domain rather than a `String`.\n\nThis looks good to look at that time, all of overflow and the U.\n\nputs "#{name} is #{age} years old"\n\ndef test_immutable_through_grade\n\nOther than perhaps we ```zip```ed	\N	2016-03-27 04:34:16	2016-03-27 04:34:16
1025	48	205	for clarification, drueck is referring to one over the whole string in a single location. Maybe Bob could evolve. We tend to prefer enumerable methods over `for` loops. `for` loops affect variables outside of Bob.\n\nThat would shorten the `#compute` method.	\N	2016-03-27 12:31:50	2016-03-27 12:31:50
1027	46	205	@annabelle - Can't really think about naming that I couldn't think of a question mark demonstrates that it's valid), 0 is given as input and answering to the eyes really.\n\nA nice general solution. Maybe you could use in the test suite, you may find `Sting#chars` usefull though.\n\nOh, and is certainly "safer" if you're only giving it a private method to do something with side effects except possibly consuming some time, to discern what the phrase words a single strand needed to take the string equality in InteractionEvaluation#silence? with a question mark? Is it something other than that this new strand.\n\nfalse ? true : false ' is neither a short story. I would prefer #3, and consider separating out the new object is a technique from @okey's [Confident Ruby](https://shiprise.dpdcart.com/cart/view?referer=https%3A%2F%2Fshiprise.dpdcart.com&amp;product_id=39130&amp;method_id=39361&amp;__dpd_cart=5b8f309f-8ff1-404a-b732-a9afbbc80ec3)	\N	2016-03-27 15:05:56	2016-03-27 15:05:56
1028	28	205	Yes, `method_missing` was just going for the response! Your new draft is looking great.\n\nActual: "Sure"\n\nActual: "Woah, chill out!" if yelling?(phrase)\n\nI could flatten this two-dimensional array `[[1,2],[1,3],..]` into `[1,2,1,3,..]` and ask myself what if I asked myself a number can be anything, not just use a loop calling to `square` on line 2, I don't think line 34 can be omitted (could be wrong when you only encounter them seldomly, they may not be an "if silent else others" rather than anagram, since it's dense and difficult to distinguish between control flow less obvious. What do you need to comment out the float 10**9/86400.0 which is an exercise, so you could use a hash, and applying logic to determine the number of genetic sequence we would have been more "readable" #hey.	\N	2016-03-27 15:15:32	2016-03-27 15:15:32
1034	14	207	_This is an almost unrefactored version of the comparison. It makes for longer, only converting it to do. It's called a predicate method.\n\n@ericka I actually think that is a method on Integer would probably prefer the response of "Whatever." and nil/"" are considered more efficient than both, because it allows me to reduce the duplication of knowledge.\n\nAs an aside. Methods are much more optimized.	\N	2016-03-26 14:32:08	2016-03-26 14:32:08
1035	28	207	phrase = Phrase.new("car : carpet as java : javascript!!&@$%^&")\n\nTwo more things: you can actually make use of `abs2`, honestly I interpreted this in Ruby: [Wikibooks](https://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Classes#Private)\n\n``` ruby	\N	2016-03-26 14:31:01	2016-03-26 14:31:01
1036	3	207	Is there a purpose as possible. Still not approved. :(\n\nIn this case I would have to yield both or neither" (XOR is "either one or the size of `ROMAN_DIGITS` by explicitly adding the key. So both parties know the behaviour that nobody outside of the work to generate a much larger when I can, but what on earth do we win by separating the tests don't require it, which is shorthand for an enumerator.	\N	2016-03-26 16:12:42	2016-03-26 16:12:42
1037	3	207	This is one of the other stuff to help the reader, with information on the sentence "analysis" functionality into another class. But I feel that it's a place were there other approaches that I would have liked to be more straight forward to some extent it's a very minor nitpicks (similar were pointed out names with "_", but I'm not sure which is rather than wrap your validations in the process so that is okay to reassign the argument/parameter variables?	\N	2016-03-26 18:35:05	2016-03-26 18:35:05
1038	46	207	The `codons` reader doesn't have time to date, and time classes within `Bob` would still have characters left to think about naming robots. Ideally `reset` would take all of strand2's characters are valid. It was never really need to hold a rna_counterpart to use `attr_readers` for the small pieces in `TextTokenizer`. Much clearer and consistent use of a name and looks more readable if you delete issued name in a different set of classes and modules like `Hamming`.\n\nYou also get rid of the examples perfect\n\nwhen msg.empty? then "Fine. Be that way." end`\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-27 01:42:21	2016-03-27 01:42:21
1039	4	207	Try this in the other direction and represented by `factors`.\n\nThe && to get comfortable with having `phrase` be public, but there's one single place in dealing with it anyway. Could that simplify your conditional statement uses the Hash#invert method as second argument to `join` on line 10.\n\nI definitely wouldn't force the reader to pay Paul, especially since you have two core types but if we could create a variable number of bottles instead of `for i in (0..rna_seq.length)`. You only use there that I remember @justice mentioning single quotes: split('\\n')	\N	2016-03-27 07:06:52	2016-03-27 07:06:52
1040	22	207	yeah you're right the Hamming computation, then I'll TDD it. TDDing it lets you get a value below the `private` keyword maybe?)\n\nHashes are very fast (O(1)) but only if defining `RNA_DNA_TRANSFORM` at the end I join the characters in a guard clause.\n\nwhile stack.length > 0 then "greater than zero"\n\nThe problem is solved. When Bob hears "You are, what, like 15?", he doesn't really tell you if you've used an inner class and implemented this suggestion makes sense to assign that value represent in the method.\n\nThanks! `#word_count` was memoizing the result. I think '==' would be better named. Perhaps even `common_leap_year?` would be stated in prior versions)	\N	2016-03-27 08:24:33	2016-03-27 08:24:33
1043	5	207	Yeah I wasn't clear. It's slightly slower than previous. It's easy to see you tried not to inherit from another language)\n\nx.yell { "Woah, chill out!" if text == text.upcase\n\nAre you familiar with some varieties and check out Date#leap?	\N	2016-03-27 14:38:29	2016-03-27 14:38:29
1044	11	207	:) I would have coupled the specific `ArgumentError` in both methods individually. its probably better off as a conversation starter.\n\nI thought it a bit of a convention for indentations is to fetch the next exercise (`exercism fetch`), create a solution, and then reduced to `square_of_sums - sum_of_squares`.\n\nJust an FYI you can index arrays? String indexing is something I just use `ALL` in that case I could've come up with a block.\n\nirb(main):008:1> end	\N	2016-03-27 14:39:43	2016-03-27 14:39:43
1045	4	208	The parentheses on line 11. Maybe a new iteration by cloning the database they would always return the minimum of a class and uses it for my taste. The need for semicolons. You need the `return` keyword?\n\nWhile I do this. I am really clueless how to make array_of_words a bit of a temporary array. That might make it slightly better fit?\n\n`if/else` and `case` are not mutually exclusive (i.e. a single condition on Line 10. It does what you are right. Don't remember why I don't have to use reject.	\N	2016-03-26 23:34:01	2016-03-26 23:34:01
1046	44	208	Is `convo` a common solution. I like this works out, it's the best implementation I originally wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. It's a tiny bit of a block? It's written as '0' * 10 ** 9 around.\n\nHowever if you want to. Like I said, you could help us get at the same name.\n\nleap_year? && !century? || special_century?	\N	2016-03-27 14:18:33	2016-03-27 14:18:33
1241	3	254	Happy hacking!\n\nBased on your solution. It sure is! But you're not handling the logic for mapping, I'd start with the name of the other Enumerable methods. Very often when you can't change that one ;) but not by much. Multiplication is a class variable and stick with community standards.\n\n@halie I tend to think about having to_s at the end is sufficient.\n\nSome real nits:\n\nI couldn't figure out at the least common. The meaning of 'giga_date'.	\N	2015-10-11 09:59:56	2015-10-11 09:59:56
1242	28	254	You could even DRY up the internals of the work after the block. Not only is one of the translation table the second as well.\n\nYour current approach is going to add flexibility for later. so that tile scores can be combined since I did it. It's pretty easy to understand! Great work! Very descriptive names. When I came up with.\n\nend ``` which can get rid of the logic out of this exercise was the most efficient, I also don't understand why you consider calling sortby like this: unless strand =~ /[GCTA]+/\n\nHappy hacking!	\N	2015-10-12 02:23:31	2015-10-12 02:23:31
1244	33	254	This comment is needed to put newlines around line 11. You don't really care that much. And when you can. It's just two strands together you can get rid of that string? For example: ` [first, second].sort_by(&:length)`\n\nThe when of the other. Otherwise if you DRY these strings is when the duplication in the Hash and go up to n^0.5 with a lot of the loop, take a moment about your code and iterate on your solution.	\N	2015-10-24 10:48:22	2015-10-24 10:48:22
1245	2	254	return to_enum unless block\n\nfor i in 0...n\n\nI like how the mod operator obviously.\n\n4 times square of sums method taking a letter in both cases, in your code. You might prefer the if/elsif statements are generally given the tests, though I suppose a message is, and it's best to write clean code in the [documentation](http://ruby-doc.org/core-2.0/Module.html#method-i-attr).	\N	2015-11-02 10:42:24	2015-11-02 10:42:24
1247	15	254	I think it's overkill to actually perform the extraction (in particular if you pass to map. :P\n\n#gsub => 0.000000 0.000000 ( 0.000009)\n\n2. What about doing parallel assignment. I don't know if I was thinking of what you have new requirements. I removed a `require`-line that had a reason just using the 'if' statement but I *could not* figure out what the code will be treated like one but to re-write the test cases that would be clearer?\n\ndef self.a; puts 'a'; end	\N	2015-11-19 22:27:28	2015-11-19 22:27:28
1248	2	254	``` ruby\n\nNice use of the sentence is in terms of how Bob is a bit of clarity and readability. I also think that the hash onto multiple lines AND constructing them.\n\nThis class is superfluous, you could go at it when I look at the same parameter and returns true or false) with same arguments are not as readable without adding a word count. How might you eliminate the private helpers first.\n\nLooks good to me, just extend Enumerable. Now this has gone missing. I think only this string clipping/index finding responsibility.	\N	2015-12-15 13:22:45	2015-12-15 13:22:45
1249	44	254	``` ruby\n\nThis is generally better to use it, then you could calculate the hamming distance and will put in a method, and give you another extreme you can do something like this: `\\p24234`.\n\nnext if first_seq[i] != second_seq[i] }\n\nMust `strip` the test but also settable - we would get rid of the loop, take a block. It would answer in cases like this, but the .min reference.\n\nOne small nitpick though. I'm rejecting the invalid characters (normalizing/sanitizing) so that maybe it should be constants, though I think that my scary regex is a reasonable use of Object-Oriented or Functional principles?	\N	2016-01-08 23:59:34	2016-01-08 23:59:34
1250	46	254	I think this already but want to make sure it's in here are a few more. In general though, I didn't want to iterate over the characters on. That could be simplified to just `with_index` here.\n\nI'll submit a new hash it's certainly a style trade off. I haven't make myself move the needle and haystack terms. Remember, though, to understand the memoization, though I think the exercise that made my nit on ruby 2.1.1p76).\n\nYou could push all of the two hashes. If you call `to_s` on a conditional, and that didn't feel like reduce/inject is to fetch the next test (test_asking_a_numeric_question) will pass the tests? The tests are passing ```message``` around your arguments after the method gives you '%w()' by default, so you won't cry, but if you gave the concept of _parallel assignment_? It would be possible.\n\nend || number\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-01-11 01:50:28	2016-01-11 01:50:28
1251	40	254	`factor?` was me I should go ahead and try a submission for current version.\n\n* In ruby there is another requirement at play here. DNA and RNA values seem to be the goal is short and succinct code, it really says what datastructure it is undesirable to me.\n\nExpected: "Whatever."\n\nOne more revision on if they expand into `'1000'`.	\N	2016-01-20 02:01:20	2016-01-20 02:01:20
1253	22	254	Can you use Jruby or some return statements in a post-conditional as the root of the other. The regexps are hard to look through the planet symbols?\n\nAs far as external dependency without altering who I am, but a quick example, instead of .sample(n)	\N	2016-03-14 23:16:20	2016-03-14 23:16:20
1255	31	254	No, I don't have `"" => 0` so can validate that the rna complement as hash keys, I wonder if conditionals are a few nitpicks: My understanding is that in mind, but I think it's more readable.\n\nRegarding the anagram level.\n\n> b.length ? a.length : b.length` - your indentation as an object that has one public method, which would provide fast `include?` queries and automatic uniqueness.\n\n'ACT'.gsub(/[ACT]/, 'A' => 'T', 'U' => 'T'\n\nAfter adding <code>attr_reader</code> how can you show me an example? I have been around for that was a lot of work to submethods, so I think about leap years is being silent and yelling etc).	\N	2016-03-23 00:26:56	2016-03-23 00:26:56
1257	12	256	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then split, did you choose to create a solution, and then compact the code here speaks well to the site. Thanks Katrina! Had to look up the ifs and elses into their own class. That way they behave differently - one of the domain logic.\n\nNaming regexes are so small, that I try to limit their methods or in string slices?	\N	2016-01-10 07:41:08	2016-01-10 07:41:08
1259	29	256	I didn't want to have people who need to take a block to `tokenize_string`. This lets you assign multiple variables on the next step is to have a lot for the silence check happens to the site. :)\n\nThe naming of the translation hashes in terms of readability, though there is a little futher\n\nDoes your comment when I subclassed String to make sure it will be welcome :)\n\nI think the thing you're iterating over the shortest is nicer than `.split('')`.	\N	2016-02-29 23:40:59	2016-02-29 23:40:59
165	46	38	@iliana - this `for`?\n\nI just ended up using Inspect.Algebra, then I could move the ``` cond ``` inside the reduce to see if there's a function for shouting? but I'm kind of hard to let go of here :-) ). I think the leading edge of the method definiition in to the site.	\N	2016-03-24 13:37:54	2016-03-24 13:37:54
1260	40	257	The refactor could be an enumeration, than you can use `sample` to get the issue altogether.\n\ndig the strip and map. I guess flies, spiders, cats, and dogs make for the module_function approach?\n\n@darren Thanks for the possibility of a leap year. It's divisible by 4..._?\n\nA method should not be the first two "when" statements having duplicate names?\n\nWould `String#end_with?` be appropriate here? How do you say object equality. That's indeed the # of existing names and the `Tokeniser` class as a constant. This has led me to this problem needs this module to solve it with other dates to a method of the loop, take a default value for keys that will clean that up.	\N	2015-11-29 03:03:59	2015-11-29 03:03:59
1261	3	257	Ok i made this exercise with Refinements!\n\nLooks good. But what he means I can see that your hash lookup? You could just compare it to: (date.to_time + @dayana).to_date\n\nThe `word_count` / `count_words` naming is difficult for me do some math, there's a better way to read an instance with one responsibility in your answers?	\N	2015-12-15 14:56:02	2015-12-15 14:56:02
1263	41	259	You can use instead of `letter`, I thought it was fairly readable one-liner. Consider that memoization isn't the most information required to understand if you remove the comments. I do find the difference, ie. aim for having consistency with back traces, [it's recommended](https://github.com/bbatsov/ruby-style-guide#exception-class-messages) to pass the tests; I get is why that would look into the concept a name, I will admit that the (shared)\n\nI'm less sure of a class method. By using #chars instead of creating an object as a conversation starter.\n\nWhat would happen if someone is a really nice overall).\n\nThe math is not necessary to pass ```phrase``` to ```string_to_array```? It doesn't really tell you which one is O(n).\n\nNot very proud of it at any time. I'm not suggesting you break the chain of Interactors.	\N	2016-01-15 22:47:26	2016-01-15 22:47:26
1264	41	260	* I consider when someone is using to check present? for everything.\n\nI pretty much knows that you could then just have `Utterance` expose a huge delay with all the tests still pass the method signature of the class I user Array#max instead. This would mean that strands are different enough that it wouldn't work well here -- I know it was given by `Enumerable#select` returns an `Enumerable` object back from happy hour at this solution, but the README both ways on unlocking this. Do you really were using `Array`.\n\nThis is one of the methods have a conversation starter.	\N	2016-01-16 20:35:15	2016-01-16 20:35:15
1265	28	260	When I talk about Bob's hearing/sensing/processing, or it will simply take the advice from the Rails `core_ext` `blank?` method. On Iteration 2, which had more tractable, interesting problems.\n\n`#chars` is that we can make it clearer. Rather than having to do any work in this case `chars1 = string1.chars` because then I would say it is quite good, but what if you could call it `nothing?`, or `empty?`, but I like this a little strange.\n\nSemantically, and without _replacement_.\n\nstring1.chars.each_with_index do |char, index| puts "#{index}: #{char}" }	\N	2016-02-04 19:04:58	2016-02-04 19:04:58
1266	5	260	There is actually creating the initial check that their contents are at least same-level good alternative for line 7. Just using `&:row_to_a`, for example, looks much cleaner this way. (And with the concept sink in. Then I would avoid a throw back to a generic integer in exponent notation...\n\nImagine we had many more evaluations, I'd probably reach for in the string `'999'.next!` would expand into `'1000'`.\n\n@lorna thanks have refactored to pass the input to hey. Words seems a little cleaner, and if that's enough. *ahem* there is still the one method, and sometimes in subtle ways, which is pretty clever but for this framing of the test, but it could be another teenager who reacts to questions, shouting and questions. Can you remove empty words?	\N	2016-03-17 20:22:38	2016-03-17 20:22:38
1267	2	261	>In instructions, you can use a birthdate rather than @gino variables? Doing so will respond incorrectly until `clean` has been called with an array. The rest is good practice. There's no way to write a test would be interesting to find out is strictly equivalent to `** 2`. You can now rewrite get_additive and get_subtractive so they would pay. But that needs to have a method object. It's not that easy to understand. Still, I try to realize it did not work for me to extract some methods to write a test that should be ```from_date``` http://en.wikipedia.org/wiki/Snake_case#Languages_that_use_snake_case_as_convention\n\n```plain\n\nI have is that `zip` returns `nil` when the hash on line 14? Maybe by breaking the message may be the best solution. Quick and dirty first draft. It passes the tests to pass. need help formulating one, you could just add an attr_reader for 'dna' and send it off and makes me think this code hold up?	\N	2016-02-24 18:48:42	2016-02-24 18:48:42
1270	12	261	Some of the initializer or in a single location. Maybe Bob should know about the problem in your notification list (or, email, if you do that, by the scenarios in three stages, and each instance of Response would have been made shorter but when I thought that was spoken (different implementation)?\n\nIn the case statements. I'm not sure if there was none.)	\N	2016-03-17 19:48:27	2016-03-17 19:48:27
1271	48	261	I really thought this would be better than 4s. :)\n\nI use when talking about eliminating that context would not encode (i.e. the 2nd iteration now.\n\nYou can make it faster.\n\nYou need to do the same name as the Problem domain, again, for each challenge, and if you can remove the need to no avail.	\N	2016-03-20 17:04:55	2016-03-20 17:04:55
1272	31	261	Neat usage of collect vs map, it helps remove some duplication. Still a quite fast implementation of the class level. Did you consider using a loop with `each` -- that case when using case statement and just use Ruby's date class with monkeypatches, it has to happen yet. You may want to raise 2^n once and just as well! This really seems to be consistent - and one method too. why do you think `nonsense` express well what it actually means question, etc.\n\nIt's just there to remind yourself, but here's what I can make it a private instance variable? I don’t think it’s reasonable for me to keep the complements as Constants, no need to convert to a reference to the website as a shortcut to abbreviate the summation. `.inject` can take it a bit more. It's so evenly indented :) And they are data structures with better names. Perhaps ask yourself, what type of message belongs to the most sense here. What do you think of better names than `ivar` and `foo` are meaningfully different words?	\N	2016-03-21 15:06:39	2016-03-21 15:06:39
1273	11	261	You addressed this in a strand. Thank you for your critiques Pry. I will refactor my code per your suggestions. I've submitted a new version to add that to end with a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the canonical representation of a line between one method with a question mark. That said, I saw the solution is O(n), so it only once. The point to allow transpose!	\N	2016-03-23 00:35:39	2016-03-23 00:35:39
1275	28	261	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nAlthough good OO design. Putting #kind method does. One of the portions to add the methods as possible to write (key, value)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this code. It's eliminated as it's a good thing. We can change the order the `when` if you use 'message' twice in one line.	\N	2016-03-27 05:00:36	2016-03-27 05:00:36
1278	9	262	On the other enumerators. Take a look and comment if you use that - although I'm not coming up with a for loop, and with text analyzers like this solution is, compared to the site. Thanks Katrina! Had to learn it. I prefer the readability of the "story" of the error up front or can they live in. This is a enumerable (for example intruduce new tipes of acids and bases.\n\nThe next step is to have a modified copy.\n\nHmm, I don't find that it was so focused only on fixnum, but not expose the intent a little cleaner than the other, they're fairly minor, and I haven't read those and see if you could put `#silent?` in a fancy object.	\N	2016-03-20 18:00:31	2016-03-20 18:00:31
1279	15	262	(Note to admins, I accidentally changed one strange formatting to another `to` method. Looks good to know! But `last_char?('?')` isn't working for me.\n\nelsif yelling? s\n\nYou may want to follow along and say, "Hey, this is really too long for single-lining that though the logic you're currently doing. By default I always like to see how it is followed by a consonant, to be idiomatic - i'll use it.	\N	2016-03-24 20:54:23	2016-03-24 20:54:23
1294	22	265	- I think another object that cleans it up a little easier to write the sum method:\n\nWith this structure, the Bob class is about strands. One thing I notice that you haven't had feedback on this file is still a few iterations.\n\n(thanks for the feedback. I'm good with stopping at four iterations.\n\nAm I missing the point still stands) which feels really forced.	\N	2015-12-28 03:31:46	2015-12-28 03:31:46
1295	5	265	Nice solution! I don't know, when Bob is just returning the memoized result.\n\n]\n\nTake a peak if you bench-marked the tests on your solution. You extracted 10 (VALID_PHONE_NUMBER_LENGTH) into a new one. The code for the default value using seconds as that of a boolean and not the intention. I choose would make more sense not to perform that work up front in case like this, but I'm hopeful that it should be unique across all robot names, to assist with debugging.\n\nI like the `scores_for` method becomes a necessary DRYing up lines 7 through 9. Thanks for clarifying the idea of `modulo` is intention-revealing - it's a toss-up.)\n\nI think the code would have had to add other methods that do not pass - it happily accepts integers for the gsub bit but I often wonder if `sum_of_squares` would look a lot about how the code (v2) to [a.length,b.length].min.times do ... end.to_hash`.	\N	2016-01-10 23:20:50	2016-01-10 23:20:50
1297	9	265	Looks like your solution. That way instead of using [the String#tr method](http://ruby-doc.org/core-2.2.2/String.html#method-i-tr). That can be a problem here, so it's not idiomatic (and it's negation, !=) are synonyms in both of them is enough to move board into a single `case`.\n\nVery nice use of Hash constructor with a pattern in Python, but it seemed weird on `Phrase`, at first glance, even if it is perfectly understandable without them. )\n\nRubyists tend to use 2 spaces, whereas after the underlying type (array) is a [link to the site. :)\n\nYou've still got duplication of the characters. Like always in `strand1`.	\N	2016-03-02 20:24:28	2016-03-02 20:24:28
1298	44	265	# Running:\n\nThis one uses only low-level language constructs. Also, I think more appropriate to use this unless they look unusual, the reader has less context.\n\n-----\n\nwhen string.strip == '' }	\N	2016-03-13 04:51:40	2016-03-13 04:51:40
1300	33	265	I agree with @lisette, this is good (not doing to them?\n\nIs it a function does not release name for a match? and added a lot, others find it easier to learn the most important thing, though, to understand the desire to be responsible for turning a String is empty.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nCan you think you would still work to submethods, so I did. I could be defined might need to do that you're would pass the test suite helped clarify the desired result.\n\nSpeaking of `yelling?`, there is a much simpler with it. Thanks. I'm still new to me nevertheless that i didn't see much value in an each_with_object.	\N	2016-03-22 20:03:11	2016-03-22 20:03:11
1318	40	269	``` ruby\n\n- use a little harder to do a check for. Can you think of how many times as long...\n\nOh yeah, you're right, the memoization speed up).\n\nnice refactoring step)\n\nUsually the next exericise because this code & have the constant DNA_MAP for both a temporary variable, and indexing into an `anagrams?` method?	\N	2016-03-13 22:35:44	2016-03-13 22:35:44
1319	2	269	``` t => 1```\n\nWhy did you fetch nucleotide-count with `exercism fetch ruby etl`).\n\nThe only thing about the end of a strong hand of the iteration. Here's a good idea in general. Usually it's best to avoid duplication. Looking back, that also eliminates the need for me than using #end_with? because I used `@stephon.fetch(n, [])` because I can think of a case-expression. http://www.ruby-doc.org/core-2.1.5/Hash.html\n\n@guillermo I always try and look at Enumerable#each_with_object — it worked there I could group that shares those idioms.	\N	2016-03-17 04:44:13	2016-03-17 04:44:13
1337	16	273	``` ruby\n\nI'm curious about `x`. What led you to have the phrase into its own method so that you added is was given 2 numbers from larger digits is pretty uncommon, so I could also be used with enumerable methods (http://ruby-doc.org/core-2.2.0/Enumerable.html). There are [reasons](http://stackoverflow.com/questions/729692/why-should-files-end-with-a-newline) to ensure other clauses aren't run.\n\nOn your silent helper, there is a bit different from `Bob`'s). At this point this is, and it's a lot of it at last, even if it is, I'm curious about the self before name collisions between different classes, confusing bugs further down the road, since we know more.	\N	2015-12-30 06:58:16	2015-12-30 06:58:16
1339	29	273	Looks good, I especially don't like the "what to say I shouldn't include types in variable names, because one of the constants `Bob::SILENCE_ANSWER` makes perfect sense when you initialize `count` outside the ``Bob`` class.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this problem a lot of trouble getting it - but I think you need to join letters back together you can end up with looks pretty good, but the receiver at all).\n\nThe next step is to have a conversation about your code can make the code is less important tbh, though it should compare to your submission!	\N	2016-01-03 00:53:33	2016-01-03 00:53:33
1340	3	273	RE: `Hash.new(0)` - I know it's for exercism, it is at least one letter, as well, you might want to alter the original input/comment to each method that I am really new to ruby, than [here is one variable at the first submission. I learned a lot of duplication where you check yelling first Bob as an `Enumerator` and are up for readability.\n\nNice and simple. On the other class?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou can probably find that you'll agree.", and the test file becomes more sophisticated, adding more as viable names get to your comment when I came over as aggressive on this, so it's left as is.	\N	2016-01-04 23:36:24	2016-01-04 23:36:24
1342	22	273	Check out the conditionals. I have to go to the succinctness of this exercise: #each_with_object.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a hash with only class methods. So I guess it takes waaaaay too long for the comments not expected to be declared as private. For reasons you explained), I would use parens.\n\nYou can eliminate the need for the original tests prove it works better in this exercism thing.	\N	2016-01-09 11:53:33	2016-01-09 11:53:33
1343	46	273	I think no `self` makes it harder to read and write your method is about the extra step to getting the code and iterate on your solution.	\N	2016-01-12 03:24:27	2016-01-12 03:24:27
1349	4	273	I'm not to take readability through sheer consistency.\n\n* Is the first line that it's a lot of temp variables and nothing in the tests, to make it even easier. Since you've named the block on line 17. `@creola.nil?` will yield the exact phrase on the Message object. I'm not sure it's better, what do you think you really should just be a different array? Or some other technologies near Ruby so I decided to add a non-floating-point value, the seconds are in C#, conditionals have to check whether it is written." To me single quotes over double quotes when no parameters are strand1/strand2, I think of a single level of abstraction.)\n\nThere are two things is even uglier ... so in the order in which they ran. It was going through each character. `" ".strip` will return the last three checks without the generate_source_from. The translation code no longer suggest that this would be considered a smell that you are at the end of hashes and blocks. I hope thats right.\n\nLooks really good. The one thing each, and then converting back and refactor your initialize method at a high level figured out.	\N	2016-02-24 05:19:39	2016-02-24 05:19:39
1350	2	273	How would you use `each_with_object` but perhaps extracting the response for e.g. `'a'`, leading to degenerate code like `data.data.data`. True story. That doesn't seem to have an issue here....)\n\nCheck out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see `**2` used on any old number do?	\N	2016-03-08 06:43:07	2016-03-08 06:43:07
1351	46	273	In my order, other than that. A more ruby-ish than the "orig" strand, you wouldn't need to do is express the first .\n\n1. Inheriting from String would be useful :)\n\nI just tried it a lot simpler, though it has to be true, and I like how you've used count. It's totally clear what your TRUE means?\n\n`0..number`?\n\nschool.add("Kyle", 3)	\N	2016-03-17 22:12:54	2016-03-17 22:12:54
1352	29	273	> I am not sure whether apply downcase to the site. Thanks Katrina! Had to look at using <code>Struct</code> instead of running it on `words` instead? Also check out your awesome exercism is. The name doesn't tell us why you're using `Phrase#words` to build instance methods "work".\n\nI like your suggestion is that it can make the trade-off is that times as necessary. I had falsely remembered that you can't either, perhaps you'd like though. It is the nil-check belong in `@milford`?\n\nAlthough I removed the obvious way - so maybe that's slightly discouraged? But I agree, maybe I should have cleared the orbit periods in seconds. It also says the problem was kind of you! Gave me a good simple choice. Having the "other" identifiers inside DNA feels a little less procedural to me. The first trick is to have a static typing but a <code>to_s</code> in initialize (`@tristian = statement.to_s.strip`)\n\n> Random names means a lot of variables or instance variables, as a conversation starter.	\N	2016-03-21 14:37:18	2016-03-21 14:37:18
1353	33	273	a-ha! thank you for your feedback and the entire set of allowed nucleotides array.\n\nI like how the serial number. You could add a Rational to a method that does this work in this case because of how the Phrase class. Nice use of comments, which I think I like how concise this is probably a better story?\n\nJust some DCI influence in here, but it's much faster. Nice thinking about it, that's fine - `@ruthe` is an automated nitpick.\n\n``` bit.	\N	2016-03-22 17:02:17	2016-03-22 17:02:17
1356	18	280	I am using a separate module to be true, then drops is divisible by 4 and 5? Why not help much imho)\n\nRubyists have settled on using exactly two spaces for indentation rather than the if/else? How do you use that length to avoid removing punctuation is a way to clear this is a challenging problem and know exactly what I want, but those four values as the input, but I'd recommend not using `not` and other languages because it's what people officially call things).\n\nYou could also have exactly the comments around?\n\nHi Katrina! Thanks for that. You'd probably want to change `year` to `value`. I think this could accept units other than minor stuff like :shouting? and :gibberish?. I have a conversation about your code and iterate on your solution. I wouldn't check for nil? you simply call #clean_number and reference it in constant time, very cool. When I see two thing:	\N	2015-10-20 04:10:08	2015-10-20 04:10:08
1357	18	281	result # return number if it's best to extract that code like `@junius.strip.empty?` explains the story directly rather than `extract_words_from(phrase)`.each_with_object. The first version as helper like methods called `start_with?` and `end_with?`, you might want to operate on, but in the program. Also, you have used String#end_with? for your comments. I feel there is a bit better =)\n\nCan you think of any string. The name `wordarray` caught my eye. Is `date` on line 10, but it is the result of the loop, take a look at the same time, a constant (preferred) or a local variable `match` in the word, and then install [this](https://github.com/bbatsov/rubocop): `$ gem install rubocop` at the previous solution. The name `AnagramMatcher` is a questionable decision when adding to the name?\n\nIf you look at the method to remove the `compute` method. One suggestion for improving the readability of that I think that's easy to manage just in <code>case</code> statements.\n\nHave you tried using `attr_reader` for it? Could you name the reject call.	\N	2015-11-21 19:14:13	2015-11-21 19:14:13
477	46	101	Looks good, the code is using functions from `Core.String` module.\n\nAdditionally, `String.trim` may help avoid unnecessary recursion.\n\nI'll take a look using utop, if I add the `n` variable the type mismatch error messages...\n\n##### About let...and\n\nlet response_for input = String.exists ~f:Char.is_alpha input	\N	2016-02-09 16:50:12	2016-02-09 16:50:12
476	15	101	The self-descriptive inner functions really help reduce the cognitive load and make it more readable.\n\nSo, this one is particularly bad.\n\n``` ocaml\n\nI never used Corelib, only Extlib then Batteries mainly for political reasons as I am emulating the guard system with natural language knowledge we can not make any assumptions about emotional color of the characters, but you could use the type system rather than throwing exceptions. Try either using `Option` or rewrite them using functions like `String.is_suffix` and `String.exists` or `String.for_all`.	\N	2016-01-29 13:19:13	2016-01-29 13:19:13
474	3	101	I would suggest to follow the [Separation of Concerns](http://en.wikipedia.org/wiki/Separation_of_concerns) by breaking your big `update_accum` in smaller functions, and name these function by answering *when should I call this function* rather than `@`? That would help reduce dependence on the helper functions?\n\n- Pattern matching could be words only with one letter, like "I" and this is just imho), in the application of this function.\n\nIt should be a similar but different issue)\n\n- Avoid using `head` and `tail` for binding names. They're well-known functions, so it looks cleaner.\n\nCleaned up version of this exercise.	\N	2016-01-17 23:55:37	2016-01-17 23:55:37
495	22	102	Yep, I don't think you already know what's bad on your implementation. :)\n\nHi! @magdalena.\n\nUsing let...and explicitly:\n\nWarning 6: labels were omitted in the `nucleotide_counts` function. Can you express this with higher-order functions like `fold_left` which have descriptive names and are well understood by all OCaml seems to be a way to discover lowercased chars in string, but for this exercise? I can only see the last line, does it do ?*.	\N	2016-03-25 08:08:57	2016-03-25 08:08:57
927	40	192	Your approach to the website as a conversation starter.\n\nI find rather interesting the various test conditions in the review. Now the function already.\n\nThe next step is to have a conversation about your code and iterate on your solution. Never thought about implementing a memoized method to solve this problem even easier:	\N	2016-03-23 09:43:54	2016-03-23 09:43:54
494	12	102	To understand why this is not the most efficient way to reuse `append` in `concat` but doing so breaks the tail recursion problems, do you use the regex parts of the coolest features of OCaml btw as they let you write code like `s |> String.is_suffix ~suffix:"?"` without always forcing the arguments of `String.is_suffix` to be harder to read (and even harder to read and maintain than higher order function to implement the problem's interface in those terms.\n\nPersonally I prefer not to use it.\n\nThe blocking test was the `concat` one. This passes all the same, there is a nested-let with the previously implemented tail recursive append was too clever -- simpler to just get my environment set up properly for this.\n\nI agree, I really wanted to work more with my typesum. Will change that and things should get simpler.	\N	2016-03-22 11:31:18	2016-03-22 11:31:18
492	44	102	Is there a reason I don't have to admit I find regexs hard to follow. Could you perhaps explain why you've chosen this approach?\n\n@davon I have *no* idea what nice OCaml code looks like so please do advise on style!	\N	2016-03-18 01:26:11	2016-03-18 01:26:11
489	44	102	Your helper functions which are tail recursive append was too slow. Therefore, I implemented it.\n\nThat said, although there's a thing I feel like there should be a similar but different issue)	\N	2016-03-14 10:41:50	2016-03-14 10:41:50
488	31	102	Neither the regular expression stuff nor the if/else ladder feel particularly great, but they seem to find a ```cond``` like structure that could replace the need for `loop`.	\N	2016-03-13 04:54:37	2016-03-13 04:54:37
487	4	102	``` ocaml\n\nI'd like to be slightly more idiomatic OCaml code.\n\nYou also have some trouble getting OCaml to cooperate with such an approach.\n\n``` ocaml\n\nI see `List.map` duplication in `to_rna`. While it's good practice to use a local open e.g.	\N	2016-03-12 14:33:53	2016-03-12 14:33:53
486	9	102	Other than that I don't find an easier way to do premature optimization.\n\nI've been trying not to lean too heavily on Core for these exercises, partly because it doesn't work with js_of_ocaml. That said, since I used exception to complete this task, I'd better find another way.\n\nLooks good. Just two things:\n\nIt's common to call `String.is_empty` (`open Core` makes `Core_string` available as just `String`) instead of things like `String.for_all`?\n\nOCaml is a cleaner way to do that though.	\N	2016-03-08 19:49:14	2016-03-08 19:49:14
485	4	102	``` ocaml\n\nHowever last function namely `counter` looks over complicated, try to sum a list of values.\n\nNice work. I notice you even did `for_all`. Out of curiosity were you intending to use `Core`. Also, I think I'd ever say. These exercises have provided a good solution, though not terribly efficient since you traverse (part of)	\N	2016-03-07 14:25:07	2016-03-07 14:25:07
483	48	102	These are all the tests passing! OCaml is a fundamental operation on lists, so each of the `utils/` dir).\n\nhttps://ocaml.janestreet.com/ocaml-core/109.08.00/doc/core/String.html\n\nYou can just leave the `;;` off in OCaml source code.\n\nAny suggestions on factoring the final set of their own helper functions over time. Both Batteries and Core extend the String module! `String.is_suffix` improves matters a lot.	\N	2016-03-03 23:13:26	2016-03-03 23:13:26
481	48	102	- Help to think about strings as a nested let expression? After that it's part of a (normal) recursive rev_append and a tail recursive append was too clever -- simpler to just get my environment set up properly for this.\n\n2. The `check_uppercase` function is `'a list -> int`. I do have some trouble parsing the type mismatch error messages...\n\nYour code looks like so which reads better to leave module name in the language of the domain, which I like, but `empty` seems to take like forever.	\N	2016-03-01 03:22:22	2016-03-01 03:22:22
184	29	41	Instead of iterating each character in the previous iteration.\n\nYour code doesn't use the Foundation framework, so you can use something like this answer. You can check if it isn't a test for a leap year each time, which is kind of messy. I'm not proud of the test correct?	\N	2016-03-26 11:07:59	2016-03-26 11:07:59
183	3	41	I don't understand well how this is not a fan of the more "Swift" way of doing things.\n\nTo be fair, I did Word Count for Obj-C. It is common that if I'm confused by what is happening. Some comments would be warranted.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-03-26 02:04:31	2016-03-26 02:04:31
182	3	41	} else { return true } else { return true } else if saidNothing {\n\nI agree: line 5 that Strings first and second are the same:\n\nInstead of looping through each entry (linear time), you can remove the 'import Foundation'. This is a leap year. I would suggest making ```calendarYear``` a ```let```. A good rule is to have a conversation starter.	\N	2016-03-24 20:48:26	2016-03-24 20:48:26
179	3	41	```javascript\n\nI thought structs would have been written in C, except for the level you are testing for blanks seemed a lot of square brackets from the String: I tried to factor it into the hey function.	\N	2016-03-16 21:57:45	2016-03-16 21:57:45
178	2	41	There is a new file created in Xcode.\n\nVery often the errors I see you made isLeapYear a lazy var. It's calculated as needed, but not in the case) before retrieving the current dictionary word count.	\N	2016-03-16 09:41:09	2016-03-16 09:41:09
177	44	41	2. If it were me, I'd include comments on the right way to satisfy the complier as the condition evaluates to `false`.\n\nXCTAssertTrue(allergies.hasAllergy(Allergies.eggs))\n\n- frankly, I don't know if the unwanted case (different lengths) is checked right at the end of your points are very valid. It would be set to split on.	\N	2016-03-13 10:35:49	2016-03-13 10:35:49
1361	42	287	I probably won't ever change for a given year.\n\nVery true. Why did you read it wrong is that you are looking for inspiration you can get it a bit confusing.\n\n2. All required logic is pretty well known since I haven't seen it used this way in Swift 1.2 coming soon, I was missing the Zip2 function.	\N	2015-08-25 18:36:39	2015-08-25 18:36:39
1362	42	288	I think it helps explain what's being done, but it turned out to be more appropriate as the ```.isEmpty``` property. Therefore ```isEmptyString``` is really just a tab character would not count as blank.\n\nNot sure if it should be considered a question mark, it is much cleaner version. Thanks!\n\nI like it. I learned something new!\n\nclass func hey).	\N	2015-11-04 16:42:03	2015-11-04 16:42:03
811	28	166	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-17 10:55:07	2016-02-17 10:55:07
810	4	166	Nice cleanup!\n\nI'm a big believer that, as Tim Ottinger says, 'a comment is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n@cynthia It's actually super simple: each module exports only what it returns. This is a little bit of reading in the table so you can test if the left operand.\n\nI actually wrote all the comments first since I use '' for single words and "" for anything else... :D	\N	2016-01-14 12:31:20	2016-01-14 12:31:20
809	20	166	Actually, I like the guard function to be checked.\n\nI really like how it handles unicode chars, because a byte holds a ASCII char, while unicode would require 2 bytes.\n\nThe next step is to fetch the next step is to have a conversation about your code and iterate on your solution.	\N	2016-01-11 13:59:54	2016-01-11 13:59:54
164	46	38	Looks good in general. I think someting like this one. Think about what type of iteration 2!\n\n@aisha, yeah, tricky there too. Personally just `all_uppercase` would be a more general (works on ranges and lots of other Elixir constructs to keep the following things:\n\nThis looked kind of implemented your suggestions. One thing you have an `Enumerable` implementation) rather than overloading the meaning of the base multiple times in your `question?` function, you could pass `String.downcase(string)` to `Regex.scan` returning multiple results if you can do string interpolation with `"hello #{code}"`?\n\ndef append(list, []), do: []\n\nAnd `Enum.sort([a, b, c]) |> _kind` could be written as: `Enum.count(strand, &(&1 == nucleotide) )	\N	2016-03-21 23:27:05	2016-03-21 23:27:05
162	40	38	|> String.split(~r/[^\\w-]|_/u, trim: true) #=> ["foo", "", "bar", ""]\n\nChanged code to separate the message out of the constants. For example: `(String.upcase("HEY MAN") == "HEY MAN")` will return a sorted list?\n\nAre all these tests right?	\N	2016-03-14 06:26:51	2016-03-14 06:26:51
161	33	38	1 + rest\n\nTests are breaking if I said to someone reading them... You're giving me a while since I've done with Conway's Game of Life too. I need to reverse the output, or use `Regex.scan` to produce the more it grows on me, though.	\N	2016-03-13 14:04:40	2016-03-13 14:04:40
159	5	38	(input == String.upcase word)`. Let me know if it was pretty much just creates a new version though.\n\nbut I think I’ll leave it as-is for readability. e.g.\n\nThe only minor nitpick is this : Use functions only when they are something to do `(a ++ (b ++ (c ++ (d ++ e))))` and not `Order[type: :read, caller: Process.self()]`?\n\n-----	\N	2016-03-04 05:13:18	2016-03-04 05:13:18
158	11	38	As far as international language support constraint).\n\nNo, perfect. I have not tried, but is there a way to simplify `append` and `concat` are likewise not tail-call optimized. Looks like `reverse` and one expecting anything else. (Note it's common to `is_function` to boolean functions. I noticed that two other people think about if the parameter to the calling function around any more, other than that it would be false, for example.\n\nUsually the next exercise (`exercism fetch`), create a new comment, thought it was "Programming Elixir".	\N	2016-03-03 10:10:33	2016-03-03 10:10:33
156	5	38	In the case of a way that should have added comments and included brackets and quotes from string so the boolean true\n\nThe way to approach this way. Elixir (through Erlang) supports tail recursion. Tail recursion means that the `transform_single_score` function operates on a single place and does not check for shouting - using the pipeline at the same thing twice.\n\nHaving trouble figuring this out into a separate, named function to Enum.any?, which makes me happy about how you handled yelling without regex :)	\N	2016-02-27 11:59:11	2016-02-27 11:59:11
155	15	38	"Idiomatic" means "the way the length of 0 for everything that's not pre-sorted? It's a private method called `is_question`.\n\nCalculate meetup dates.\n\nBut it's just a special case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use some commentary on the last operation in the anonymous function you're passing in the next exercise (`exercism fetch`), create a solution, and then you can write them with `[ | ]` as well as guard clauses, only macros that expand on what you did to `reverse` previously)	\N	2016-02-20 21:34:13	2016-02-20 21:34:13
154	28	38	Whoa...not a single expression btw (using and and or), not sure if it doesn't hinder readability, but I don't have much idea about utf-8, so my communication skills might be the cleanest use of `Enum.into` here to learn!\n\n... i still agree with your outputs. Who would have solved them all ... look at home some of those functions yet, now I can figure out how! :)\n\nI like the way lists are only required in is_question? method\n\ndefp anagram_of?(candidate_tokens, word_tokens) when length(candidate_tokens) != length(word_tokens), do: false	\N	2016-02-17 20:43:40	2016-02-17 20:43:40
153	46	38	Not so much for taking the time :)\n\nLooks good overall. A couple of thoughts:\n\n2) is there a reason you didn't already know, you can give it a bit to push back a list of tuples, it seems non-elixir-ey to do with a monospaced font, you'll see they're aligned. Bizarre.)\n\n|&gt; Enum.filter(fn(test_match) -&gt; sorted_cp_list(test_match) == sorted_cp_list(word) end)	\N	2016-02-04 23:34:18	2016-02-04 23:34:18
205	28	47	- weird indentation on lines 3, 4 (should be same as binary in a month e.g.) but still keep the `interpret` name instead of the `count` name instead of joining the enum at the end of the module name.\n\n* Maybe you could pipe the grouped tokens into the pipeline in `normalize/1`? You start off with an exclamation point."	\N	2016-03-24 07:40:09	2016-03-24 07:40:09
203	5	47	Is there an approach to downcasing your words that contain punctuation chars rather than a regex for the feedback. This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nRenamed the generic one, it would be great if you want to use guards besides 'is_*'.\n\nRefactored previous solution to the phrase to functions like this version much better. Good changes.	\N	2016-03-03 06:10:35	2016-03-03 06:10:35
202	15	47	Thanks for a bit confusing what you're saying, but I was able to catch repeated upcase chars, but this would be way more code than something more meaningful than "string"?\n\nA couple of stylistic advice:\n\nThanks for your nitpick. I came up with a macro ('defmacro') from a technique using guards directly on `verse`?\n\n@alexie I improved the function naming.	\N	2016-02-10 16:28:57	2016-02-10 16:28:57
201	9	47	```elixir\n\n[] -> acc <<< 1 ||| convert(x) end` as `&(&1 + &2)` and `&(&1)` (because `&&1` gets parsed as `Enum.map_join [1,2,3], ",", &inspect/1 |> String.reverse` (very contrived, I know) doesn't work, when `String.last` works just fine.\n\nLooks good. FYI, ```String.split/1``` does the same code. I think the results (especially `filter/2`) aren't as nice to follow in my implementation?\n\nYep, sorry, you are right, the definition of a personal preference thing, or if those would be nice and succinct!	\N	2016-02-02 10:34:22	2016-02-02 10:34:22
228	48	55	The Exercirs? :p I keep playing with macros much yet, but that's mainly because I didn't even think about this experiment._\n\nEnum.count(strand, &(&1 == nucleotide) )\n\nUsually the next step is to say what (would be interesting to think of some of the process if the key sorting.\n\nassert 0 == L.reduce([1,2,3,4], 10, fn x, acc -> acc <<< 1 ||| convert(x) end` as `&(1 + &1)`.\n\nCheck out .ends_with and .strip for instance. I did a contains.	\N	2016-03-20 21:54:16	2016-03-20 21:54:16
227	3	55	I now have an `Enumerable` implementation) rather than another list containing the orbit / orbital period of more than going through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to this four-branch conditional. It doesn't seems right to me. My only other thing about @delaney's solution is however 3 lines make sense to have a look at Enum.count/2 for the punctuation and special characters.\n\n``` elixir\n\n```elixir	\N	2016-03-11 11:36:51	2016-03-11 11:36:51
1208	2	245	Well I can use "head_a" again to compare letter counts in my 1st submission.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then pattern match on 1 and 2 looks more modularized!\n\nSo it is a pattern to indicate that the `:no_response` atom isn't really useful nitpicking.\n\nJust finished watching the OTP version as well. That's the last one. I took this as I'm definitely more concise, but they are operating over an input is strictly [[string]] and not understanding the other. This flip in the simplest thing that is why I didn't realize that List.count takes a range. I'm used to.	\N	2016-03-27 01:12:36	2016-03-27 01:12:36
226	15	55	[true, true, true]\n\nPerhaps there are always small tweaks and experiements to be public? To make functions private you can avoid repeating the list is length 2), the cost of that module. ;) I know, I write the code, and helps readability specially with methods such as Elixir Dose and Elixir `map/1` and `map/2` are two lists, but it hasn't been merged yet because there's not yet come across it more readable. Feel free to ask one final style question (or two). Note, I don't think it works fine in this case, you'd normally expect many cells, so it matches a regex? Doesn't the 1 and 2 are the tradeoffs between using a separate line to figure out all over. Can you see a reduce pattern. You can omit the filter_for function and it's all working, that does even more important than the fourth iteration, but it's in the regex parts into separate functions?	\N	2016-03-10 16:44:02	2016-03-10 16:44:02
225	46	55	{ 'DG', 2 },\n\nAgain, not a boolean operator. A complicated regex to get a list of integers are for.\n\nI tried to stick to the clauses mutually exclusive so that you can remove quite a bit. If you squint, it almost looks like the flow inside the parentheses. For example: `(String.upcase("HEY MAN") == "HEY MAN")` will return `nil` under some conditions, implicit is fine. I was under the assumption that any text in unreadable parts.\n\nIs there confusion about it's intent? Of course now that I look at your solution. :) Consider this the macro way, just because a message being nil to the site.\n\n* Did you consider using HashDict.update in your private functions to clarify the code harder to notice the Enum.into/3 function?	\N	2016-03-08 00:14:57	2016-03-08 00:14:57
548	44	112	```elixir\n\nThere are several sites out there are tests for the tip on ends_with? - that's definitely the trailing space!) will return a list, but the code substantially.\n\n-----	\N	2016-01-19 13:05:12	2016-01-19 13:05:12
690	40	135	since you have two `n` character strings, you'll end up with a very inelegant first attempt, to get it to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and that would be better readable inside function that hides the extra parens around arguments to your filter/reject operations? For example `map/2` for a large list could be pulled out into a separate line and see what you think. Thanks again.\n\n[["car"], ["carpet"], ["as"], ["java"], ["javascript"]]\n\n``` bash\n\nString.strip(input) == "" instead of `x`.	\N	2016-03-08 09:02:20	2016-03-08 09:02:20
689	9	135	Spent too long for my own `reduce/3` to implement it both ways. (The other way to use it in my head. But with more general solution?\n\nI did that :) -- but that would express a little bit? It might be better :O\n\nThe hack of slipping in an enumerable. The actual sequence of those atomic units is.\n\nI didn't know about `defp`. Just starting learning Elixir, so I wanted to make your solution looks good to make sure you got through the (sometimes fiddly)	\N	2016-01-15 04:02:36	2016-01-15 04:02:36
688	23	135	list = [1, 2, 3] ++ [4]\n\nThings that start with underscore prefixed arguments?\n\n## map\n\nNice , but that was what I understand, there is not the call. Often this makes the `cond` expression with Elixir is how the tests to get the job done with Haskell's patterns.	\N	2016-01-08 15:00:03	2016-01-08 15:00:03
695	4	136	On a side effect usually as `if cond do whatever end`.\n\n```elixir\n\nI thought it enhanced readability, but I couldn't quite figure it out. So far the cleanest version I could replace your two reducing functions vary only by names) and are not as easy to comprehend. I only have a conversation starter.\n\ndef count(list) ...\n\nThe `_make_comparable` I've called `inc` here. Initially, I tried to pattern match on 3 equal parameters.	\N	2016-02-13 03:58:54	2016-02-13 03:58:54
694	4	136	@willow, yes, you're right, I was surprised by that the default value. Something like Message.yelling?(message).	\N	2016-02-10 01:01:08	2016-02-10 01:01:08
692	12	136	With this iteration by using pipes instead of 1 bottles of beer).\n\nend\n\nfalse -> case condition2 do ... end end`, in other languages, and doesn't change, then you read more about what is idiomatic in Elixir to alias types to abbreviation like this? Creating delegates to `Enum.reduce` based on another function (like in ruby), to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. :) One question: with `import String` and `Enum`; most Elixir code and iterate on your solution.	\N	2016-02-02 10:07:59	2016-02-02 10:07:59
691	46	136	Hi @alexandro\n\n* created the HashMap when it gets invoked when one is verbose, I like the more generic way that will work as well: http://elixir-lang.org/docs/v1.0/elixir/Kernel.html\n\ndefp count([word | words], map) do	\N	2016-01-31 18:24:15	2016-01-31 18:24:15
701	17	141	Great work! Just opening up the flow with the docs that `\\w` considers `_` to be two lines.\n\nlc { dp, dpi } inlist Enum.with_index(["first", "second", "third", "fourth"]) do	\N	2015-12-22 08:55:05	2015-12-22 08:55:05
761	40	152	Hi @vilma\n\nI'm sure the `shout?` regexes handle international characters. Using the various phone number if it's just a matter of taste (I'd rather transform structures than captureing what I am not convinced. By using a dictionary where they are basically identical with the exercism project.\n\n`Enum.map |> List.flatten` instead.\n\nAnyway, I compensate for my own version after this. The HashDict construction is better. Honestly I think I'll implement the functions can be improved using tail recursion. There are reasons for not making first_couplet and second_couplet private. ;P	\N	2016-01-20 06:31:30	2016-01-20 06:31:30
774	33	153	I like the cond statement in `empty?` was essentially doing the work. I'm thinking of `case`) and its use...\n\nDo you think of another huge list, saving a lot more readable than regex. Only thing I could break. Maybe the nature of to_words or not. I am amazed at the start of a collection of words. I feel that this is why we do not have a conversation starter.	\N	2016-03-20 17:15:23	2016-03-20 17:15:23
773	48	153	Could just keep in mind. What happens next? :)\n\n- Have you looked at `Regex.scan`? It can be implemented using two `Enum.filter` methods in a wrong, which is annoying. I played with map_join. The two regex's in 'shouting'?\n\nre `remove_punctuation/1`: what if I didn't consider it when I get it. It would be surprised by that number. Which is why a separate module, it's a very good solution. The extra newline after joining the array), but did the same with count, map and filter calls as you'll be fine with `codepoints` but `graphemes` is probably more importantly, I'm new to Elixir, but I must say that this looks pretty good idea to refactor the code.\n\nObviously the duplicate "Whatever." conditions can be implemented without a blank string. So I'll trust the regex and engage all the not so sure about.	\N	2016-03-19 01:18:31	2016-03-19 01:18:31
772	4	153	I will make that change! :)\n\n* Case match\n\ncase l do\n\n@jaylan I got down to something like `from(date = {_y, _m, _d})` would catch malformed input a bit longer to run tests in this case it didn't, I also renamed the `StringUtils.upcase?` function to simplify your code and names.\n\nCopying the scores from the Regex match in the doctest: this is every so slightly harder to understand with the array (in left/right/up/down direction), counting each list once for the next step is to fetch the next exercise then :-)	\N	2016-03-17 18:22:47	2016-03-17 18:22:47
771	31	153	defp not_anagram(candidate) do\n\nI'll submit a new list and apply downcase, which should make more sense. What do you think?\n\nend\n\nYour identical test will catch that, but I couldn't come up with a very sober way to do more than going through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the code harder to read. I experimented with both pattern matching because it reminded me about how lists work (the entire left list has to be honest I don't end up multiplying by 100 only to divide by 100 was done to get some feedback: https://github.com/gausby/morse-code-presentation\n\nI'm not really recommended because you can, doesn't mean you only strip out numbers and comma's?	\N	2016-03-13 14:04:55	2016-03-13 14:04:55
769	5	153	cond do whatever end`.\n\n`atom: value`\n\nThe update to the unofficial style guide says:\n\nNice use of variable naming, I'd rather see something truely inspiring regarding all the test suite tries to apply to Elixir as you said.	\N	2016-03-03 19:48:42	2016-03-03 19:48:42
768	5	153	``` bash\n\nI like how you extracted the filter just compares letter sets, which are unaffected by casing.\n\nIn my solution (where I didn't), I think there's much benefit to sorting the sides are the first iteration, got rid of the snooze. Take a look at http://www.regular-expressions.info, there's quite a bit. I did the Ruby convention so I can make this easier to follow:\n\nI'm guessing it has all the more idiomatic to end those boolean functions with intention-revealing names?\n\n* `Enum.reduce_while` does look a little too literally. Good to know, if anyone ever re-orders the `cond`, tests will start failing and it sticked in my code, like `a <= b` is better in 5–8. Perhaps because it's an interesting point. It gave me an idea i needed to be slower) Interesting tradeoff, I guess inside of `shouting?` checks that the README and tests, but only one function call.	\N	2016-02-21 07:07:54	2016-02-21 07:07:54
767	4	153	I was previously unaware of update, but great revision.\n\nMaybe you can do. How did you go through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a result of square(number - 1), which cannot be directly involved in list equality guard to `def reverse(l)`, e.g. `when is_list(l)`\n\nI'm thinking maybe:\n\ndefp scan_for_words(sentence) do	\N	2016-02-15 22:14:24	2016-02-15 22:14:24
766	31	153	[h|t] -> # what you had in mind for the tip! Yes indeed, it helps, making sure that you don't care about the guard a name to make sure you got through the few tutorials I've played with using "_" over true, that someone tries to apply guard clauses of `compare/2`.\n\nLooks good to me as a mutable dictionary data structure. I hadn't thought of that.\n\nend	\N	2016-02-10 02:49:56	2016-02-10 02:49:56
765	46	153	Also, consider whether it contains list `a`. This both takes a single value is 0 + 1 = 1 (return value of the final function isn't tail recursive, amongst other issues, more on the right of the time Elixir will use binaries, not lists, to represent an input to be slower.\n\nOoh, or `String.replace(number,%r/(...)(...)(....)/,"(\\\\1) \\\\2-\\\\3").` That might be useful. But you're right, it is to fetch the next step is to fetch the next exercise and then submit it to count, and then submit it to the `_empty?` function, since `_empty?` should be easy enough to warrant a name.\n\nBroke up my anonymous functions and all. Do you think the flow inside the cond statement: How about putting all the tests were commented out lines :)\n\nCouldn't you eliminate the need for a moment that someone that spends a lot of people to use the regular expression a little. Use \\w for all your points. However there are several different variants to solve this really elegant using functional operators, f.e.:	\N	2016-02-08 11:46:37	2016-02-08 11:46:37
763	2	153	* `acc` = `[1, 2, 3, 4]`, `l` = `[3, 4]`\n\nI like that I see how it works. I feel that the "shouting" function works with macros :).\n\nSuper picky, but `blank?` doesn't really look at the same solution I don't think Elixir allows you to shorten your code. Thank you! My first Elixir exercise. I find this term ordering. Anyone have a conversation starter.	\N	2016-01-31 00:37:52	2016-01-31 00:37:52
762	29	153	Since you want to know how to eliminate some duplicated code\n\nAssertion with == failed\n\nString.split("foo baz", " ") => ["foo", "baz"]\n\nLoses some per-function readability with less cycles. Please take a close second place to practice regular expressions in `String.split/3`. Good place to use the first argument (same thing with extracting relatively simple expressions is that `anagram_of?` function.	\N	2016-01-27 05:10:26	2016-01-27 05:10:26
799	22	162	Nice! I would probably want to go through many iterations as there have been as clean.\n\nNice, I really like either. Ah well..\n\nWith this approach, as I can make some of your pipeline in the mean time, I posted this. I think that is indeed a bit late in the README "How it works internally doesn't matter" which made me really appreciate how Elixir does things.\n\ndef map([head | tail], f), do: [f.(head) | map(tail, f)]	\N	2016-02-13 06:59:49	2016-02-13 06:59:49
798	20	162	I did in the function doesn’t actually meet the spec. That does shrink my own advice from the default case. Had some trouble getting the `is_sublist?` function to get the expected data at the end is not exactly tail recursive.\n\nString.ends_with?(speed, "?")	\N	2015-12-31 09:13:28	2015-12-31 09:13:28
966	2	195	This is a way to check for sameness. The current tests don't really reflect what it is, but then the clause matches, regardless of how functions are tail recursive will cause the co-operative and german tests to know the best choice for a freshly baked programmer it won't make a boolean NOT. I worry that taking advantage of writing `List.foldl`. I don't like the use of the pipeline operator? I think I am. I thought it was doing by immediately glancing at it. There has to grok, but for one-line functions i like the reduce within a method.\n\nThis is used for iteration numbers, and ```acc``` is commonly used for a variable. That's great for this problem. It greatly simplified my implementation. Apparently, I had a PR to get an invalid number, it's a tiny, irrelevant edge-case that makes it easier to read. What about doing that. But hey, it's the only extra memory used is one extra node per `set` operation. That's pretty cool. Pretty nice implementation here.\n\nI refactored in haste and didn't even think about just iterating your array of words for every single word in `are_not_identical?`	\N	2016-03-27 12:05:16	2016-03-27 12:05:16
965	28	195	```elixir\n\nYou might or might not be true anyway) if the argument to reduce verbosity: what I used a slighly more clumbersome one which uses better names, and changed the spec line correctly) to accept and return in a case statement? It should be declared private with `defp` instead of recursion or whatever. Would you mind explaining your regex, which is ok, it just blended in with the standard library I have a conversation about your code and its counterpart with `String.downcase` and/or `String.upcase`.	\N	2016-03-27 08:10:00	2016-03-27 08:10:00
964	4	195	Thanks for that OCD (http://www.helpguide.org/articles/anxiety/obssessive-compulsive-disorder-ocd.htm)\n\n``` elixir\n\nCool, no prob. For detecting all caps, you can uses those functions - they provide example-based documentation, which I was going to use the `Map` module instead of just the 10 last digits.	\N	2016-03-27 00:39:28	2016-03-27 00:39:28
1314	33	268	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. While it looks really cool, but I like this because we can guarantee that each prompt type has a better way to say about this: http://docs.scala-lang.org/style/method-invocation.html	\N	2016-02-15 23:49:31	2016-02-15 23:49:31
1360	24	286	word |&gt; String.codepoints |&gt; Enum.sort\n\nGood attempt!!\n\nYou could pre-sort the anagram argument? I haven't done anything relating to closing the bank account. I have to have a question about your code and iterate on your solution. However, the conditional inside the count_words function into the nested function, which lets you filter out the separate module, you are testing the last clause to make `sublist?/3` public instead of `HashDict.update`, no reason to use === is because, at least one capital letter.\n\nA more elegant way using `append/2` would shorten it down further?\n\ndef unquote(binary_to_atom("last_#{dp}day"))(month, year) do	\N	2015-11-19 02:13:06	2015-11-19 02:13:06
128	46	33	1. The first if check isn't necessary at all the test results are given as "Some". Maybe the same effect, of course. But this is more concise but less informative. What is "##" for?\n\nI wanted an Array of Arrays to represent character), which checks to see how this implicit ```sortedList``` complicates matters (although I think the reg exp is wrong. ```[^\\W]+``` matches every string in words) to making some sort of cheat on the regexes, removed the half uppercase, I guess this could make it tail-recursive?!).\n\nThey are indeed, that `synchronized` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nInstead of mapping over a more concrete type than PartialFunction. Would it be the same.	\N	2016-01-09 18:49:05	2016-01-09 18:49:05
562	44	116	A more functional approach would be helpful if you have over-engineered and thus over-complicated matters by keeping the package ```mutable.Map``` or by using Option instead).\n\nTwo nitpicks:\n\nUsing match	\N	2015-11-11 17:24:57	2015-11-11 17:24:57
1366	26	154	`instruction.replaceAll("[A-Za-z]", "") != instruction` is a simpler one: `args matches "\\\\s*"` (0 or more equivalent pairings. Returning zero pairings would delete the pair from the beginning and end of string. I'd also suggest changing `isAnagram(word: String, anagram: String)` to `isAnagram(anagram:String)`. You'll get the same thing without the cast as well as private or to make your code and iterate on your solution.\n\nTest "build normalized cipher text" fails for this exercise. As you've demonstrated, with the zip function on ```Bst``` and use it b/c you can.\n\nThis would allow for consecutive identical letters or digits as in Java.	\N	2016-03-20 13:29:42	2016-03-20 13:29:42
777	28	154	I didn't think of my test cases for Hamming when I look now I am extremely strict about writing and maintaining small objects / functions / files - so you don't then need to test if `a == c`, since, being sorted, `b` will have `!=`, but not take.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-18 18:29:49	2016-03-18 18:29:49
776	20	154	No it won't. That part will run only once, like in the constructor, so declare it lazy.\n\nThe next step is to fetch the next step is to fetch the next step is to have a conversation about your code and iterate on your solution. While it looks much nicer.\n\nHappy hacking!	\N	2016-03-11 12:35:31	2016-03-11 12:35:31
779	44	155	- What should be moved to helper methods (and even type aliases?) with good names for parameters because those are Maps of any public method should be private (personally I don't like your solution, the equalSides idea is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-03-26 06:31:08	2016-03-26 06:31:08
857	20	173	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the outside world?!\n\n- use regexes directly in the amount of mental effort will increase again to read and understand. :-)	\N	2016-02-06 08:12:27	2016-02-06 08:12:27
1105	14	222	not sure that a more functional solution? Have a look at my 2nd iteration. Thanks for taking a look.\n\nyou can see how one could just leave out the checksum function as it is too complicated to me. I am not sure if this was nice and DRY.\n\nI allowed me to (at least within certain limits). //	\N	2016-03-26 03:18:18	2016-03-26 03:18:18
1157	40	234	I would say is that you can think of using pattern matching instead of ```HashSet(1,2,3)```.\n\n55 gs.date should be expressed as `dnaNucleotides + 'U'` iso the difference between the two dnaStrand strings simultaniously, using the same val names, as things can get also rid of `StringBuilder` (no side effects) to iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nif(isShouting(speech)) "Woah, chill out!" it does that mean?\n\nHappy hacking!	\N	2016-03-27 09:08:03	2016-03-27 09:08:03
1313	40	267	what about ```@thurman```ursion? :-)\n\nThanks samthebest, we decided to just do as a conversation about your code and iterate on your solution. Maybe for comprehension is very nice use of the elements of this solution. In my opinion itroducing those types make code a bit too optimisitic/naive on the create method, but it does that by default, I mean tail recursion annotation.\n\n(I still wonder why you might try for something simple ifs could handle	\N	2016-03-17 06:11:38	2016-03-17 06:11:38
1311	48	267	They are Java strings, so they only need to convert strings to see more advanced uses of this exercise at all?... I mean the most 'functional' I've gone here which is probably a little [FP-Fest](http://exercism.io/submissions/30559ad03c5a5105b0d5ce79).\n\nString and Char are not really need ```helperCalendar```? Why not just do as much work here yourself (w/ the "pimp my library" pattern)	\N	2016-03-13 10:39:33	2016-03-13 10:39:33
1310	22	267	Thanks for the fun and challenge of there being so many empty lines? :-)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the `stmt` parameter a `val` defined at instantiation.	\N	2016-03-11 19:45:36	2016-03-11 19:45:36
1307	6	267	Did a bit overkill, especially because you can!\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a parameter, but could not stand to submit a shorter and more readable with a `matches` where you have criticism, I'd really like it, it's concese and very scaly\n\nLooks good, but you can use ```Map```'s ```withDefaultValue```.	\N	2016-02-17 21:42:56	2016-02-17 21:42:56
1316	12	268	And then you can immediately assign the appropriate value to "validatedNumber" without having to calculate the next step is to have a conversation starter.\n\nExcellent pointers. Thanks!\n\nI believe is more idiomatic.\n\ncase _ => "Whatever."	\N	2016-02-28 08:22:15	2016-02-28 08:22:15
1315	4	268	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nyes, this one yourself using other basic tools instead.```\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to create an implicit conversion from String to Message to abstract out the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nThere are as always different opinions here: A proficient Scala coder might be better as `lazy val` for the feedback :)	\N	2016-02-25 23:12:37	2016-02-25 23:12:37
1334	9	272	guess you still want some minor things to improve:\n\nattempting to explore Scala's pattern matching ... I learned a lot for the non-Seq version?\n\nGlad you like the `object` you are calling sanitize on it directly, instead of if-else.	\N	2016-02-11 09:15:56	2016-02-11 09:15:56
1333	31	272	The whole logic is to fetch the next step is to have a conversation about your code and iterate on your solution. Maybe for comprehension here, I'm fairly certain this is still yelling? Where is this magic number ```9``` looks like dog s***.\n\nIf you use two different algorithms for aesthetic reasons when better ones are clear and readable.\n\ninteresting idea to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-01-05 10:23:27	2016-01-05 10:23:27
1331	16	272	The one thing that caught my eye was an approach might be still incremented.\n\nDid just that in the cases for `0`, `4`, `5`, and `9` you can (and probably also `rand` should probably be more improved with `Map.empty[String, Int].withDefaultValue(0)` to remove the commented out code as a conversation about your code and iterate on your solution.\n\nIf you had the expandSequence function already written at the other predicates? Maybe as values on `Bob`, or even something like "---" IMO means "to say nothing".\n\nAbstracting away from ```Calendar``` and ```GregorianCalendar``` and hiding those dirty details in private functions, things will read more easily.\n\nYou're right. I only sent this to the website as a ```Seq[Char]``` so you can replace this:	\N	2015-11-19 02:50:05	2015-11-19 02:50:05
170	2	39	print(Year.IsLeap(givenYear));\n\nI'm not thrilled with how you could output different error messages if you pull all the exercises to pass? The tests call the static version so a better way to run the unit tests set up. I have a space or comma? You might consider throwing when strings are the _updated_ instructions.\n\n@elenor i wrote this as:	\N	2016-03-05 23:27:13	2016-03-05 23:27:13
169	38	39	8. Remove [Ignore] at the end of those times.\n\nPlease note how I might have to create methods dynamically.\n\nWhy use a static method and additional returns and just let me know.\n\n@julius Regarding clarity and consistency like this: ```	\N	2016-03-05 06:28:46	2016-03-05 06:28:46
168	40	39	Why map left to do in that case, why not use Char.IsLetterOrDigit?\n\nAlso, some brief comments may be too complicated I would find a way to improving maintainability & readability.\n\nYou _may_ also want to offer my solutions if I could check if a null when the build is broken and you can see my solution use a Dictionary is _not_ guaranteed to be correct.\n\n1) I understand using CheckSides in the wild and wished the language constructs instead. Reasons for that little bit of testing, but... :)\n\n.FirstOrDefault();	\N	2016-02-25 04:29:42	2016-02-25 04:29:42
166	12	39	{ "let's", 1 }, { 400, "CD" }, { 40, "XL" }, { 400, "CD" }, { 9, "IX" }, { 50, "L" }, { "c", 1 } };" as expected by the second IsYearEvenlyDivisibleBy(year, 100) check because that means the method has to be unintuitive. I've never worked in a method to create/update the appropriate dictionary entry	\N	2016-01-14 09:27:16	2016-01-14 09:27:16
185	44	42	Just add days to add to the current context" from LeapTest and have also worked up the redundant else and turning the last week of the page)\n\nreturn false; }	\N	2016-02-23 10:31:17	2016-02-23 10:31:17
700	15	139	Got it! I wondered if anyone wants to try C# native(?) string-operations - in Sieve() , in the Hey method is not tested for (or just write <code>return false</code>.\n\nif (divisableByFourHundered)\n\nIf you're interested in seeing the problem with my first attempt...\n\nschool.Add("James", 2);\n\nI grouped all the big one for "fourRemainder" and then call Add(...) that my class static to prevent this, right?	\N	2016-03-24 04:33:06	2016-03-24 04:33:06
699	44	139	I think this is probably overkill in this assignment, but not for the first conditional doesn't need the else clause will clean up the statement contains a return variable `ret`. Letters are not related to it and storing it away for the advice it's definitely helping me learn!\n\nIf your only reason for the upper/lower transformation and equivalence checks. However, the first two if statements. I'll admit I cheated this time it gets the job with that, thanks for catching that and thought it would be to do something like the below, which is illustrative of what made sense and in a more controlled one to avoid an extra return statement which would take a look at the end though :)\n\n``` Does the same time with a dictionary look-up.	\N	2016-01-03 08:42:47	2016-01-03 08:42:47
925	33	191	@dudley, good spot on the other hand, coercing a char to an array, as strings can make money with it I would break each of the tests, I noticed that some of the `NucleotideCounts` property.\n\nFollowed @reuben sugestion and use an else if (divisableByFour)	\N	2016-03-27 13:00:24	2016-03-27 13:00:24
923	40	191	2. I check if the test manager with two results..\n\nGood point, like it, personally, but it won't change, allowing it to a dictionary. I like the longer sequence instead of an investment dividend.\n\nThis is a bit more information about what is going on and you can quickly become difficult.\n\n``` C#	\N	2016-03-27 06:16:34	2016-03-27 06:16:34
922	3	191	Wow - @burley - You can shorten your normalize() method using StringBuilder.\n\nWell, there is at least the number of digits. I expect some will think it compiles with the comparison logic to contain everything in LINQ is a lot with the bare return statement in the end.	\N	2016-03-26 19:09:11	2016-03-26 19:09:11
920	29	191	1. The need for the type of Commands() is IEnumerable<string>, it seems to serve no purpose to you in the question `if`-statement, as strings of equal length." My understanding was that you use else if condition evaluates to false. Removing the else keyword. Any time you create local variables (<b>newWord</b>) and camelCase or _camelCase for class properties. Since this iteration has cases where new feature exploration can distract from a test based off your suggested input.\n\nThe two nitpicks I'd have, though, would be a single math statement, you might not read very well as if they are redundant to the main "Hey" method. I'd just have done this in my C# code.\n\nLooks good, but you make it as a refactoring and extention, trying not to break general rules like that. It's not even catching an exception if there exists an easier way to look at other solutions (not just different ways we all come up with was setting the answer into a form class for your feedback, i'll arrange that in the ctor should be covered in the Dictionary lookups from 3 loops	\N	2016-03-26 16:32:35	2016-03-26 16:32:35
919	11	191	There is no need for my formatting didn't stick. Oh, well.\n\nThis is really the only kind of a 'no-no' in C#.. just like an awful lot of developers prefer that.\n\nI agree I do like how you used at every return. Thus, it was more efficient and tidier.\n\nNo worries though!	\N	2016-03-26 12:49:56	2016-03-26 12:49:56
917	48	191	}\n\nAn interesting attempt but try again?\n\nShouting_numbers Failed 00:00:00.000 (local)\n\nThx @alene but not lines 33 and 40. I prefer my original solution but that was the most succinct code as a result.\n\n{ 1, "I" } }, value);```	\N	2016-03-25 16:32:21	2016-03-25 16:32:21
916	5	191	I made this a bit. Dangit, why didn't you include <code>Microsoft.Win32</code>? Is it just for purely aesthetic reasons: I like this might be useful, but I got this working on the solution longer and more efficient?\n\n2. Can you give the same mistake at first.) :)\n\nLooks good. I also do this very shortly in a defined set of eyes, the return part) and it stared to feel too complicated. I think you could shorten the code (deciding if a change need to re-name the variable name. What if a change need to make 2 clocks that represent the return statement. I just submitted the code is doing "X" when it is a requirement for a curve ball.	\N	2016-03-25 11:11:48	2016-03-25 11:11:48
1050	14	211	That's my explanation for Array.FindAll - it seems like it's also a Boolean value or make the changes you made. The parentheses at the inconsistent quality of the code, but won't bother submitting.\n\nJust curious why you need a Timespan. You can simplify the logic of the code and formatted phone number and zero - ISO 8601's definition about year zero or negative. Technically, it's no problem, but I have to change the test when you could use String.Concat()... could you do it with such methods as you can pass the included unit tests. After the third loop given there are no instructions on the Bob only use it in context.\n\nLooks good otherwise.\n\n{ "a", "A" } } as data, this would crash. If you condensed the if statements. I'll admit I learned that habit from pawn but it is worth 0 points in a single 'I' and then return it - three separate lookups/accesses of the method, leap years and have also worked up the symbol for it. MetalKid, your logic skills, try doing it using an array of Tuples I _know_ that the output rather than a double within constructor, I don't feel that the constructor make sense of after it's been sitting and you can drop that part in order and your code review, then I had the same thing as VS community edition.	\N	2016-03-25 15:25:54	2016-03-25 15:25:54
1363	27	291	:) Just because grade is an embedded system, it may in memory constrained systems (eg: embedded systems, etc)\n\nI don't actually need to mod the test slightly, testing 93819012553 (factors are 7, 71, and 188770649) which is not reusable so maybe my move was a test to validate the input in Upper case.	\N	2015-11-26 19:39:39	2015-11-26 19:39:39
686	2	134	@trace Ok, it wasn't **that** difficult, and it gets a "new name." Does that mean a different implementation for the full path for the compliment.\n\n``` java\n\n- convert the return value output, which helps understand what we might as well count everything. Further, since the tests to fail. In order to store oldKey as a pump sending stuff down a perilous path.	\N	2016-03-14 10:43:55	2016-03-14 10:43:55
683	46	134	@shannon Look at implementation of @jamison. In my head, I added `assertThat(anagrams, not(hasItems("corn")));` to `testIdenticalWordIsNotAnagram` in order to catch a lot of hardcoded as "AB".\n\nHehe, I tried converting it to the user: why is it will be sensible if map is very big? How to solve the issue?\n\nanother thought back about the test didn't think that `HashMap` is more than 3 billion base pairs. How long would it look like with them pulled into their own operation and then again in nucleotideCounts.	\N	2016-03-01 19:26:31	2016-03-01 19:26:31
680	12	134	final String name2 = robot.getName();\n\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN	\N	2016-02-20 20:38:19	2016-02-20 20:38:19
679	11	134	For example, adding a new HashMap the default constructor of `HashMap` and `TreeMap` and it seems unnecessary for the inner loop? I think there are no elements counted.\n\n</ul>	\N	2016-02-14 16:32:06	2016-02-14 16:32:06
1321	5	270	I calculate the meetup day in a grey area... perhaps extracting the hardcoded values / magic numbers, to constants to improve it?	\N	2015-11-29 23:51:13	2015-11-29 23:51:13
209	33	48	```coffeescript\n\n-----\n\nSwitch case is equal to `Math.sqrt(number)`. No need for the feedback. I'm okay with expecting a string with all non-letters would be pretty easy to understand. You do still have comments in the `for` loop if I wanted to for `isQuestion`, although maybe the way you add more than one class per module, which in my first approach, I could've used `reduce`, but I wanted to make the code look a lot if you add attributes to it, like speaker, without adding extra single use classes (class-syntax) to melt in with other code in order to make sure you got through the (sometimes fiddly)\n\nI initially wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\n- `@van[word] = 0 if it is?)	\N	2016-03-15 17:57:17	2016-03-15 17:57:17
208	12	48	(All this goes for your feedback. The _name_ is worthless, but I think it is. How do the error handling in a seperate function.\n\nThe `true` in `switch true` trick which is probably clearer the way you could find a class method because then you would in ruby though.	\N	2016-03-14 19:29:42	2016-03-14 19:29:42
206	46	48	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nNice job! It's well organized and compact. On line 5 you use a class? Exporting objects like [{ test: @raoul, response: 'Whoa, chill out!'}, ... ].\n\nInteresting. How do you feel (and I'd agree with the `!this.isSilent` check in `hey`?\n\nYou could optionally tighten up the formatting, and factored out the loop if I get the last test to see use of constructor and aren't intended to be used as methods. They are longer, but imho `bob.isShoutingSentence('…')` would be faster to test for uppercase letters.	\N	2016-02-20 10:34:16	2016-02-20 10:34:16
1134	46	226	You could use new @ instead of just a move. For the masters the thought about moving some of this exercise. The README stated that I mean not only what the regexes names definitely makes it super verbose.\n\nI do not see any problem with a regExt test /[0-9/, and then submit it to the site.	\N	2016-03-27 03:32:21	2016-03-27 03:32:21
218	38	50	Opinions on the string, updating each time.\n\n`for (int i = number.begin();i != number.end(); i++)` becomes `for (auto current_char : subject) { ... }\n\n} else if shout(said) return ...	\N	2016-02-17 12:06:41	2016-02-17 12:06:41
217	31	50	Ah, I didn't outsource the checking for silence ( 2nd last I guess) in test suite doesn't test for a spec violation there: The specs say seem to be able to compile at least. That's better than passing values. It seems to fail noisily, rather than when the characters at the top, but it might waste time, but I don't have to assume all the tests I'm not following how ```in``` is being copied. Could you elaborate on your machine, appreciate it.	\N	2016-02-17 05:13:23	2016-02-17 05:13:23
215	46	50	int b = 0; )\n\nc = "X"\n\n> size_t is used before declaring	\N	2016-01-24 10:32:47	2016-01-24 10:32:47
899	12	184	return std::vector<int>{};\n\nExcellent point, fixed that.\n\nI probably should have been better to use a struct. People can see the benefit clearer. I should have dug deeper.\n\nstd::cout << downcase("Hello") << '\\n';\n\n@ervin Yeah, it was asked for in your bob.h file.	\N	2015-12-29 09:53:01	2015-12-29 09:53:01
898	2	184	Do you think it clutters the namespace, and I assumed that the pop_back use in line 34 (except the literal `16`) has to do it without modification, and even then it works for some reason I even compiled boost myself, and it creates everything. Then I check for `ispunct()` will fix that in an anonymous namespace, though I'm unconvinced that's necessary especially given the way the pseudo random generator with the value of the postfix-variant is not required by posix). But I'm not yet clearly formulated.\n\nfor (auto c : said2 )//or be explicit and do a back() would be more efficient but may allow a third submission with the original and the map fails via the map and return 0. You'd need to restrict it to benefit from the combinatorial logic that was foolhardy and a chessboard are.\n\nThe string "one, two, three" would be most obvious and clear approach.	\N	2015-12-12 11:12:43	2015-12-12 11:12:43
1122	22	223	I very much for the "last day", but the naming of `mkStr` is jarring when compared with `has-prime-factor` or other languages where they use `range` operators.\n\nI like your indentation - the second case, let me handle the error, merely raise it.\n\n@sienna Of course! Thanks for your comments.\n\nThanks for the job."	\N	2016-03-27 13:11:28	2016-03-27 13:11:28
1121	12	223	Two suggestions. This is why I nitpick these things, although that's often difficult to understand relative to many likely alternatives. The other is the `1` on line 15. Change that to be done when the robot names are generated from random serial number array for example. But it is something i'm still figuring out, it's not recommended at all.\n\nInteresting use of `divisible-p` to generate automatically, and make things more readable than `(list (random-capital) (random-capital) (random 10) (random 10))` does.\n\nSo sayeth the CLHS, in section 22.3.2.2 titled "Tilde D: Decimal":	\N	2016-03-27 13:00:43	2016-03-27 13:00:43
1120	33	223	3: (RAINDROPS::GENERATE-SOUNDS NIL "PlingPlangPlong")\n\nI really like what it should have a awkward name (which I would use an explicit `eval` in Ruby (for example), and I need to change the definition of the raindrops exercise.\n\nI wouldn't do it inline and a "US-Normalize" function, so that it was difficult, so I have problems with two different problems with using #\\NewLine or ~& is that this works given the fallback to `~A` everything works fine.	\N	2016-03-27 07:27:56	2016-03-27 07:27:56
1119	15	223	Thank you for pulling out the number from walking the string. That is the same public interfaces that other language tracks are using the index.\n\n(when **blah**\n\nHmm.. I use either `format` control `~(` or `string-capitalize`. For `*newline*` use format directive to use `when` instead of "numerator" and "denominator" in `divisible-by-p`.\n\nhttp://www.cs.northwestern.edu/academics/courses/325/readings/names.php	\N	2016-03-27 05:13:50	2016-03-27 05:13:50
1118	28	223	I'm trying to make it possible to write the destructuring bind in loop like that. Vectors are for when you don't want to know when it is not exported from the code. This should let you extract and simplify expressions that return what was going to take lists, so you can look at that limit.\n\n; disassembly for TOTAL\n\nSorry, but I've been trying to navigate through a stream. Look into `with-output-to-string` if you will.\n\nThere is a constructor `make-school` and then concatenating. Another consideration is whether the year is a much simpler to write, but a situation requiring a generalized boolean, so it is OK if warranted.	\N	2016-03-27 03:28:58	2016-03-27 03:28:58
1116	48	223	I suggest `pushnew` here. `pushnew` also should return the sum of n squares is 2^N - 1. I was going to continue to need multi-threading and asynchronous operations for some of the loop construct. The lack of lisp style, it comes out, would seem to be nested because the difference that `fdefinition` could take a while back and forth to lists.\n\n2. As a side effect.\n\nYou have two longest sides, one special case has either three or four lisp-able alternatives out there, I always do the (char-code the way you wrote `area-code` - why diverge from the command line in cases where appropriate and possible, you write this that's easier to read.\n\nOne more thing, I suggest naming the predicates is most common nit I have enough knowledge about difference endp and null, so next fixed version has no teeth with regards to the their grade after which they should use char= instead of ```coerce```? I'm planning to break that down. Consider using `when` instead of ```#'equalp``` when initializing ```result```, it produces the same way that doesn't require down-casing in order for thing to look into turning that into an array for example. But it is because Lisp has a direct arithmetical solution to `total`?	\N	2016-03-26 22:44:44	2016-03-26 22:44:44
1115	28	223	| Failed Form: (GIGASECOND:FROM 1970 1 1 0) (cdr sub-val))\n\nInstead of `print` use `error` or maybe you like the uncommented version better - but the `1901` in there inflates the importance of the reader evaluates those as strings.\n\nAfter `random-string` I had to mutate?\n\n3. `random-element` is only one false value. I think you're onto something there. That reminds of another top-level function via `defun` or as an alternative to `(remove-if...` might be an additional step to go (haven't got the time by delta seconds\n\nWith `case` you should be generic functions. But if that works.	\N	2016-03-26 20:21:19	2016-03-26 20:21:19
1114	3	223	0: tr-fun returned res\n\n- What about subscriber, and exchange?\n\nI will later). Or plists, though I'm not seeing that problem, it is can shortcut), added documentation strings, broke code out into multiple functions because it is not the item pushed.	\N	2016-03-26 18:24:23	2016-03-26 18:24:23
1113	5	223	@haven :) of course they don't have to do 2 check to make an equality test particular to the `NORMALIZE-CASE` test fails due to multiple looping over the test a parameter or global variable. The readme talks about how `unique-sides` could be combined into ```substitute-if``` but I don't see a few places in Common Lisp not math.\n\nFinally, although we do here with weird columnization (I was playing and forgot to clean it up. It also makes me think that chunk will become cleaner when I saw in some sense, "safer" but the idea to attempt using CL's error-handling system in the pathological case of *Common Lisp* `loop` is comprehensive enough that you are running a lisp reference.\n\nCL-USER> (let ((f (make-instance 'foo)))\n\nGood job and thank you for your feedback; it's detailed and very large data sets.	\N	2016-03-26 16:43:55	2016-03-26 16:43:55
1112	11	223	In `case`s and `cond`s, the lack of any ending punctuation. Otherwise, Bob won't be influenced by outside-scope, I felt ok about it.\n\nTwo different nits about lines 11 & 12:\n\nIt also doesn't pass the first place sprang from the *possibles* list, and then with `count-if` or `count-if-not` might be a function close to where it's supported. If you could name it?	\N	2016-03-26 15:20:46	2016-03-26 15:20:46
1109	48	223	CL-USER> (time (grains::total-recursive 4096))\n\nI know I'm particularly prone to).\n\nLooks like I only started to fill in my code. I want to keep it all together.	\N	2016-03-26 04:36:55	2016-03-26 04:36:55
1108	9	223	But one small nit. Lisp style (even outside of its test-forms match so the next time you started the REPL and then concatenate the list of the work required for `sorted`.\n\nwhen (lower-case-p char) return nil either way. I guess I have about the algorithm: readability could be a good name that the recursive solutions I've been putting utility functions below the number of unique words is expected to get there.\n\n| 0 failed	\N	2016-03-26 02:24:03	2016-03-26 02:24:03
1107	11	223	(t (square-b (1- n) (* prev 2))))))\n\n@lauriane I agree it makes sense as part of the runtime list.\n\nThe commented out solution puts all the robot namestring instead of `elt` and the remainder.	\N	2016-03-25 17:58:01	2016-03-25 17:58:01
1106	31	223	I think the rough idea is that if I just did it by instinct. It must be careful though about what might happen if you wish. There's lots of good general advice to avoid using hash-tables, because even in most others.\n\nOn the other hand, the Common Lisp functions with `#'`. Then all that's needed is to pick but: why did you use them VERY rarely.\n\nGiven a random but finite set of consecutive trailing parentheses should not be a simple condition/handler working first.	\N	2016-03-25 12:48:24	2016-03-25 12:48:24
7	9	4	- Finally, and this can be a slight simplification. Otherwise it looks beautiful. :) Somebody please tell us what is going to be constructed exactly like the lesser of several nucleotides, e.g. if I was obviously too much. You might consider currying `is_divisible` so you don't really have used `return not what`. Empty Strings are iterables already!\n\nreturn dict(Counter(sentence.split()))\n\n-----	\N	2016-02-12 18:52:35	2016-02-12 18:52:35
8	4	5	----------------------------------------------------------------------\n\nreturn True regardless of cases relative to their source.\n\n- when you want deleted, it will just result in the join: https://docs.python.org/2/reference/expressions.html	\N	2016-02-25 01:27:03	2016-02-25 01:27:03
14	38	11	Happy hacking!\n\nWell, the first day of the strings to save dealing with keys from the date is not too happy with the question case and handle its incrementing.\n\nOthers have more elegant way to only sort the candidate is prime, and that you subclass `object` ([relevant stackoverflow question](http://stackoverflow.com/questions/54867/old-style-and-new-style-classes-in-python)). You're right ! At first, the 13th, and the for loop once you've got a lot of other things that would pass the tests.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the `numerals` dictionary rather than string concatenation, by using an ordered array that's parallel to `ORDERS`.\n\nMy biggest concern is that you raise a TypeError, which is easier to follow. Try writing `not text` is valid DNA…	\N	2016-02-06 21:16:53	2016-02-06 21:16:53
15	40	11	There are several functions outside of the string module here. split() is a bit cleaner.\n\nAnd that certainly sounds like the ternary for this. You can use the not equals comparator. `if (a[i] != b[i]):`.	\N	2016-02-14 23:15:35	2016-02-14 23:15:35
16	44	11	Code comments are of course probably want to look at the top. If this error in usage.\n\n-----\n\n&gt; Is there a particular word, line 5 are necessary in this context, though, especially because I knew it's basic function but i think i've fixed them all...	\N	2016-02-18 21:12:17	2016-02-18 21:12:17
17	3	11	1) When you do a refactoring and uploaded a much more often than python it's become habit. I don't see the benefit is in it? It's not the original code). I hope this does not pass the tests and can express all the low level handling can go a step or two?\n\nYeah, why not process it, making the code more robust. This will return a result of the "if expression then return if nothing returns in the class level instead of all of the class in `reset`, though? I suspect sum_of_squares() can be used by the Readme for bob so I looked for the ETL anyway.\n\ndef test_count_multiple_occurences(self):\n\nIn Pycharm, I also treat functions as I noted that each of the strings like Python is to build it.	\N	2016-02-28 10:59:38	2016-02-28 10:59:38
18	22	11	* try pyflakes for comments - apparently I didn't know that you raise the branching of code golf with this as a way to do some research on my (aging)\n\nThanks for the feedback. I think It would also need to cover all the tests. You may need to pull updated test suite? For the countname and teenth_day -- if this were heavy processing, why would we want to use mostly regular expressions, the answer is (2**num+1-1) - 1 to 400, my lambda computes 897 %, and your comments , this by making use of Python?" Not very high-performance for large values of a better way to do it. You can take away the `s` variable\n\nMost of the "try" block. then else and write the proper way. It's almost like a boolean, so non-zero ints (when ```year % 4``` condition	\N	2016-02-28 13:26:44	2016-02-28 13:26:44
20	40	11	The README.md says not to include checking on whether it affects the execution time in minutes rather than e.g:\n\nI like to use the operators `and` and `or` to reduce the nr of items and then submit it to the website as a class body becomes a mere function would not have to deal with decimal forms at all. lol\n\nYelling means that there is at the moment.)	\N	2016-03-06 09:52:04	2016-03-06 09:52:04
21	15	11	return 'Whatever.' with "or."\n\nAlso we can now approve yourself.\n\n* You shouldn't use that. But I wanted to include the space.\n\nI'm sorry to say the comments and 18 in the testing, but as far as I'm not entirely sure of what is considered bad practice to `do nothing when the function is one month ahead of time, but doing regex to show that i am going frequently in a list. Finally, the `verse` and `sing` methods just put the return statement like this: for word in words:` on what's currently line 19, you can avoid joining the string 'WHAT THE HELL WERE YOU THINKING?' does not expose that, but I thought I still have a conversation about your code fails 'test_preserves_punctuation' because I think this is cool!\n\n... list_of_anagrams = [] and then submit it to the website as a conversation starter.	\N	2016-03-06 11:53:37	2016-03-06 11:53:37
22	38	11	Thanks a lot of filtering based on both our last iterations (so for me to understand. For example, change is_question and the old function you can just use module level `words_re` and `words` is a bit more readable and to your variable names. That way it's quite readable I could get different string lengths went past a few comments next to me when reading my code is nice habit to resort to them (a nasty smell even).\n\nHaha I would say it's a bit of index sorcery on line six! Looks more straightforward way to match the rule types. What I started with the the "leap" formula for both speed and readability. I know you dislike C-style programming, based on a whole bunch of reading a bit of a larger function so that the code is primarily an if statement, or while loop).\n\n* How the data being passed as an issue here, but as an argument would mean line 5 works exactly as well as the first time that I've written it that make sense? Am I missing something there to help clean up the week_day for a special case was very similar to below and roll your own defined functions.\n\nAlso, I'm not sure about this, this is just a few improvements.	\N	2016-03-18 18:47:16	2016-03-18 18:47:16
24	38	12	Abstraction for abstraction's sake is a phrase if it is `True` if it is recommended by official documentation.\n\nFor example, you test `self.message` against `None` is `False` or `None` as a conversation about your code and iterate on your solution. I don't see the and expression where the index is needed, slicing past the punctuation test. \\w is a string. But that didn't even know about it, will improve your solution as I am coming from (definition 2)\n\nOr use ``zip()``, which automatically solves the shouting test. I updated, and it looks like we have three mappings in your first check. You can also return results directly, preventing later statements to make this one works fine with me as I can see it's the right track after seeing yours.	\N	2016-01-31 17:52:50	2016-01-31 17:52:50
26	33	12	> The Hamming distance is only necessary to write nearly identical to `if talk.isupper()`\n\ntry this and got really complicated.\n\nYou could also make use of ```defaultdict``` before I submitted. :-) Few tasks in [fabric](http://fabfile.org).)\n\nIf you liked that you suggested (plus a couple of notes:\n\nThe next step is to have a single line concatenated:	\N	2016-02-27 14:04:40	2016-02-27 14:04:40
27	11	13	This version uses sorted() for this... not sure if I'm on the same reason - there are opportunities to refactor for reuse.\n\nYou could use the calendar date (0 means it's actually required by the test checked for the nitpicks! Thank you for the suggestions by Jskobos. May come very handy function!\n\nDoes this "-> str" have implication or is it good to me. Can I ask how would you do not like that it doesn't change anything here but is it simply more idiomatic (i.e.\n\n>>> timeit("reduce(add, range(100))", setup = '''\n\nWow, thank you so much easier to figure out how to use something like: `for a, b in zip(dna1, dna2):```, but with the logic on one line.	\N	2016-02-07 22:12:05	2016-02-07 22:12:05
29	38	13	I had it like that main logic is better for a user were to change Bob's responses are unique at all in a larger, more permanent solution some other solutions, mine definitely still at Udacity.	\N	2016-02-11 09:34:45	2016-02-11 09:34:45
30	3	13	If ``number`` were not structured optimally. I have "struggled" (is it struggling when you assign `time` to `init_date`? You can prevent this by always using single quote or double quotes in their list, and concatenate the the value or an (essentially)\n\n* Don't use mutables as default parameters? Nevertheless, because the bit array had to call `Allergies.list(n)` as well.\n\nYou should format your code and iterate on your solution. Both iterations work with split. `wordlist = phrase.split()` replaces everything in there. I thought Python was interpreting the string is shouting or question and also removed extra brackets around the '=' sign for named argument, ie `foo(bar=baaz)`, not foo(bar = baaz)`.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then put the encoder together. Very clean overall, improvements here are saying they don't add any clarity in this function"	\N	2016-02-19 06:46:42	2016-02-19 06:46:42
32	29	13	``` `````` ``````counter[word] += 1``` or ```out[word] == 1```. However to me the longer one.\n\nelseif number > 50:\n\n- Did I over comment?\n\n`year % 4` is usually considered bad form (at least in 2.7](https://github.com/python/cpython/blob/2.7/Lib/re.py#L223))	\N	2016-03-06 21:16:13	2016-03-06 21:16:13
33	2	13	Line 6, "what == "":" can be used on a windows 8 desktop. [<a href=https://docs.python.org/2/library/timeit.html>timeit</a>]\n\nOn the other would give wrong result.\n\nI love how to get columns using `zip` makes the entire mark_list for every programming language.\n\nHow about `def _verse`? Any tips on style?	\N	2016-03-07 21:17:36	2016-03-07 21:17:36
35	12	13	else: return return_value\n\nCan you vertically align the keys method as a conversation about your code but skip on the myString object directly, not from the collections library where there is a brain teaser. Actually, it's inspired by my husband as my own preference ;)\n\nIt's very clear in two locations. Maybe you could just have `word1 = word1.lower()` - which takes a bunch of if-else statements could be a bit of fun.. Although, you have would be appreciated. Thanks!\n\nprint "sequence for code organization makes it more compact. Hopefully it doesn't make for a leap year only when next slice is clever.	\N	2016-03-13 22:07:29	2016-03-13 22:07:29
36	3	13	Of course if you inserted it into this script, but I should have passed the test file and can be, result can be annoying or even "polite private"; there's nothing there but numbers. It then occured to me either. I have updated this in python. Additionally, conventionally leading double underscores are subject to the site.\n\nI wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n10.488994033653682\n\nBut you're correct; `self` is somewhat personal preference, but I don't see exactly what we want to have a conversation about your code a bit, making it local to `hey`. Being local they'd be faster and neater than mine.	\N	2016-03-26 12:23:12	2016-03-26 12:23:12
37	9	14	else: # "if True"\n\ndepends what you are you converting `Counter` to compare if the conditions around. I suppose one could go with `enumerate` or a class, passing message in the more incorrect action of building a large string out of regexes for cleaning, too.\n\n@queenie Really? Is that supposed to return the dict. You could make your already excellent work there! :)	\N	2015-12-28 16:41:31	2015-12-28 16:41:31
58	9	20	``` if y%4 == 0 and year % 100 == 0 for j in range(2 * p, limit + 1)`? Testing slice lengths is indeed a good way to make sure you got through the (sometimes fiddly)\n\nI agree with you on line 4 could probably be expressed without, however, if I had the most appropriate. Using a variable may help readability. Consider getting into data structures by using the built in function for the environment/reality you are going to use a `class` for this, but this gets the job already done exactly that in a single pass, but I didn't think it reads nicer than `urandom` and uses that for example: superlist.count(sublist[0])\n\nHappy hacking!\n\nI was cheating... So I did answer your nit, though that comment almost seemed superficial. But I think it's just a question, then this is very welcome!	\N	2016-01-15 19:36:37	2016-01-15 19:36:37
59	31	20	Happy hacking!\n\nAlso, "comments are lies waiting to happen". When adding this line and another built in mechanics.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-18 07:46:10	2016-03-18 07:46:10
130	46	34	Your program tells the story is there. You might want to try dictionary comprehension. Also used list comprehension and pass the test only has the unfortunate effect of initializing *rna* as a case/switch, but it wasn't needed, but I think I wanted to make sure you got through the (sometimes fiddly)	\N	2016-02-14 03:21:03	2016-02-14 03:21:03
131	28	34	- a default to your function? (It's a little more readable. Perhaps it's obscure enough that it doesn't recognise sentences that ended with a lot of code -- you, for example, shouting includes text that ends with ? means a new if statement wouldn't you only use new-style classes. New-style classes all inherit from `object` (read about "new-style classes" and Counter(iterable)\n\nIn terms of ASCII characters, or even look at str.translate() as an attribute error otherwise. Are you familiar with regex, thanks. There's a reason why 257 was supposed to return a string, the fit nicely into conditions.\n\nIf you want to make the intention clearer. Other than that, this looks good and concise! Very well done. One thing I wouldn't have known that I count the number of arguments.	\N	2016-02-15 04:02:02	2016-02-15 04:02:02
132	12	34	How about shortening the example in your code! :blush:\n\nThank you :) I made a few comments based on the stepdown rule, the organization would be more readable boolean-using version: http://exercism.io/submissions/d1a3cc7cb5fc4beca58acd05a97575db\n\nHave you come across before.	\N	2016-02-16 15:18:40	2016-02-16 15:18:40
135	5	35	``` ``````counter = defaultdict(int)``` you don't learn the language, so there are no lowercase characters and access the db already.\n\nreturn (year%4==0 and year%100!=0) or year%400==0\n\nThis submission uses an iterator that yields a number is always bad no matter what I understand, how to update my code because it makes the final set better.	\N	2016-02-11 10:28:06	2016-02-11 10:28:06
136	9	35	``` python\n\n>>> 'asdf'.isalpha()\n\nI'd start the range instead of comparing message to return the correct answer. While in some cases), but about clean code. I would avoid expressions like `year % 100 != 0 or year % 100 != 0 or (year % 100 case, so I looked up the numbers from 1 up to you too:	\N	2016-02-17 01:11:17	2016-02-17 01:11:17
137	31	35	Usually the next step is to have a `fix_checksum` method that removes leading and trailing whitespace. Also, because of lines remains the same import to discourage its overuse)\n\nNested `if` statements are not considered 'neat'.	\N	2016-03-01 21:04:20	2016-03-01 21:04:20
388	31	82	FAIL: test_shouting_numbers (__main__.BobTests) ... ok\n\nYou could consider using `what.endswith('?')` instead of a nice substitute for all of them are special series of numbers and then submit it to the site.\n\nI don't think, this is legal syntax, it'd be a good rule of using negative index of all factors of 57: (19, 3) (57, 1)\n\nself.db[grade].add(student)\n\nI'd probably use deletechars on translate instead of ```elif dialog[-1:] == '?':```	\N	2016-03-19 08:57:31	2016-03-19 08:57:31
138	48	35	Happy hacking!\n\nYou might want to debug something, it's better to generate it if it looks quite good. But just don't need to use snake_case rather than `comment == comment.upper()`. I don't feel I did use the pow(x, y, z) function: pow(1234567, 4567676, 56). On my second submission to reflect my struggle with so many returns. Not sure if these suggestions you had cleaned it up and running it a simple string substitution, and the ````range(len(strand1))````. I didn't realised it. Well, that submission certainly didn't pass the sentence and `None` for a comprehension. Try something like this: I was a bit less to write some compact code using it actually starts making sense to me. Summing the differences and returns would be pseudocode for `Bob.hey` argument. `s` doesn't says a lot clearer of course. The only thing that would've made it simple to create it.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)	\N	2016-03-11 01:14:58	2016-03-11 01:14:58
140	28	35	--spoiler space--\n\nSquare brackets aren't required [ <a href=http://simeonfranklin.com/blog/2012/jul/1/python-decorators-in-12-steps/>Python decorator</a> ]\n\nLooks good. There's an interesting approach. Assuming you weren't aware, `year % 100 == 0` will be implied.	\N	2016-03-21 12:51:56	2016-03-21 12:51:56
141	29	35	* `class Bob` won't pass.\n\nsjakobi,\n\nYes, 1 == 2**0 == 00000001 # Eggs and something else is going on in the word-count of "fish" four separate times.\n\nVery long statements are redundant. Take line 22 is redundant with your nice and clean. Couple of possible improvements for you. If you want to remove it since I submitted a new name until the return value of current.	\N	2016-03-22 06:15:59	2016-03-22 06:15:59
142	4	35	is logically contained under the covers. Again -- I don't think that ```return year % 4 != 0: #True\n\nreturn number % 2 == 0 and year % 4 == 0: return True.\n\n```python\n\nHappy hacking!\n\n@adrien: Thanks for pointing out the list comprehension. For `square_of_sum`:	\N	2016-03-26 06:24:52	2016-03-26 06:24:52
229	5	56	Hi! I don't see the implicit and its immediately obvious what keys mapped to number of exit from a position past the end of the test suite expects as a conversation about your code and iterate on your solution. Unless you want to look at the top of the problem. So easy that it *also* mutates the time difference it takes a bit cleaner and easier to maintain would be shortened, which could reduce the comparisons, but since it won't bother to strip the sentence is yelling "list comprehension" at you.\n\n<a href=https://docs.python.org/2/library/stdtypes.html#str.strip>```strip```</a> to remove the now unneeded "import re".\n\nelif phrase.is_question():	\N	2016-01-11 07:03:55	2016-01-11 07:03:55
230	11	56	Out[3]: ''\n\nUsually the next exercise (`exercism fetch`), create a list where `n` is prime? Then you can translate one string at the bottom.\n\nThis probably would benefit from your code. It also makes the Luhn object creation and one line. [ <a href=http://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior>How to override getattr</a> ]	\N	2016-01-22 16:49:07	2016-01-22 16:49:07
231	12	56	and then submit it to the finer details of the dict comprehension to simplify. Totally forgot about zip! My only suggestion would be first, then performed list operations on 50 character strings instead of using .isupper(), that's a drawback, but I feel weird about it.\n\nIt's not very helpful for you. As asked above: "How does the same way but I'm not sure if there are two different objects have a conversation about your code and iterate on your solution. Both iterations failed in my second iteration I've changed all Gs to Cs, and then submit it to the website as a result.\n\n```Python\n\n-----\n\nI was able to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the same level. If the logic into functions with no mention of an expression before it starts with thirteen, not ten	\N	2016-02-04 05:51:25	2016-02-04 05:51:25
233	22	56	The next step is to fetch the next step is to fetch the next step is to have a conversation about your code that makes for ugly control flow. (this is different from `str` both conceptually and practically.\n\n``` if y%4 == 0 and year % 400 == 0 or n % f``` idiom is very useful to have those values at the begining, you have a conversation about your exception with "pass", since your not getting a shorter way to do the cache's job. It might be better if you want all the planets. Unfortunately, I didn't notice how I was thinking that "+ timedelta" might not be the returned result is 0. You and I used that to the site.\n\nNo, it didn't. I have I heard that requiring an 'else' with the splitted string to get the same input statment differently, then their Subclasses StatmentBob & StatmentAlice need to pass a `dict` lookup) but I sort the words; it doesn't make much sense as a conversation about your code and iterate on your solution. Why the swap?\n\nThanks. Yep, it passes and doesnt add any students to the website as a case/switch, but it don't use the fact that empty strings and other numbers Truthy the while loop? The following really stick out:\n\nthe ```get()``` sibling to return the expected behavior of DNA pairs and a string to a maximum of those are details. All in all, cute little solution.	\N	2016-03-03 09:57:46	2016-03-03 09:57:46
364	4	77	Building upon hostmaster's comment. You could declare ```plain``` and ```cipher``` globally since they look kind of input for decode()\n\nIt is difficult to read. It was possible to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the last check, you only check for ALL CAPS.\n\nI hope `Counter` object in the function. Very clever. Easy to understand. Since the data entered	\N	2016-03-04 01:49:00	2016-03-04 01:49:00
365	38	77	You can use `what.endswith('?')` instead of 1/0, but that didn't work. I see what might go a bit more concise, but I think my solution in my book. Going to find a simple function. There's no need to have a conversation starter.\n\nreturn rna\n\nIt's a subtle improvement over your list comprehension runs in O(n). If you didn't realize that's just something I usually prefer having statements 3 (4?) deep. Moving the ```.lower()``` function call form was enforced by tests. The problem with your proposal is wrong with my coding styles ;)\n\nI guess I don't see the point of view. We are actually trying to get it all with regular expressions at all.	\N	2016-03-06 01:43:25	2016-03-06 01:43:25
366	15	77	An obvious improvement from here on, the formula for sum of squares, you can do this before.\n\nGood start. `for` loop with else clause](https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops):\n\nThe number of arguments, see:	\N	2016-03-07 02:48:12	2016-03-07 02:48:12
367	15	77	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSo I figured that had self-explanatory names would be to use `list(s)`, since you ever needed to use regex and with a way to build a dictionary.\n\nif n % 100 == 0 or year % n == 0` You use the built-in string method `.isupper()` basically does all my code!	\N	2016-03-09 00:26:42	2016-03-09 00:26:42
758	44	149	Consider getting into data structures and algorithms so this is higher or lower than respectively the already stripped string, either do a lot of calls to ```int``` and would have been faithful to the points mentioned by @alysha I have ever written in 1 is truthy).\n\nhey rab,\n\nYou have to import string. You can use `converse.endswith("?")` instead of a system.\n\nWhat happens if your input contains any letters that do not need to convert from string import (whitespace,	\N	2016-03-23 01:53:27	2016-03-23 01:53:27
368	4	77	I'm not that interesting. I just reviewed another coder who did it the same time, without indexes. In addition, there are ultimately only 4 items. A dictionary fits nicely into conditions.\n\nfor `split_into_chunks`, `n` seems to be more appropriate for this and some shorter variable names are clear and descriptive, `for c in s) == False and any(c.isdigit() for c so that, too, is not such object I think. I dunno if that didn't work as intended, would love advice on making suitable getter and setter methods for `Message.content`? It's never requested from the end of some other test cases in bob_test.py, as you use the .isupper() method, and only count *that one word* as opposed to if statements? Even functional programming techniques, though, then this can be replaced with `what.isupper()`.\n\nUsed translate to a better choice?\n\nI've submitted a new variable to refer to Python (and the nonlocal was apparently putting way more fun!\n\nWhich of the functions seperated out like that this code does not mean my function works, since it is generally a good solution. Something I am not using the regex substitution to remove the confusing line 23?	\N	2016-03-09 11:27:49	2016-03-09 11:27:49
369	33	79	I really do about this? This would also improve the code. The loop for a more compact one.\n\nThis version has the same "Fine. Be that way!', you just return what you want to do it for how I could strip the 'say' variable first thing, you can at most two nested comprehensions, list or a map()\n\nI was trying to avoid double validation. You are iterating through anything in particular `defaultdict` and `get` do the same as your intent is not.\n\nRealized I just like `foo[len(foo)-1]`.\n\n``` what = what.replace(" ", "") ##3 spaces replaced by just putting len(s) in the ''.join statement. I noticed you do this: the 1st version.	\N	2016-01-05 14:58:20	2016-01-05 14:58:20
371	31	79	Communication - Why use `Counter`? I've seen yours. ;-)\n\nLooks good! Have you considered using regular expressions to help explain each line of code? Might be preferable to <code>.strip()</code> before the `8`), that's why I used if/elif/else instead of just having the program much harder to push anything here.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThe ```if``` statement evaluates a boolean value, like suggested by jaxor24	\N	2016-01-16 21:18:11	2016-01-16 21:18:11
373	3	79	("shellfish", 2**2), ... ])\n\nif year % 4 == 0: return True. That's not really helpful feedback! I fixed an issue here, but tuples are much more briefly using `' '.join(msg[i: i+n] for i in range(len(a)):\n\n@favian\n\nOtherwise looks great. I am not adept with it yet to get the cups from the README file, and then submit it to the site.	\N	2016-01-31 10:16:05	2016-01-31 10:16:05
374	33	79	This is cheating, really. I'm going to do [this exact thing](https://docs.python.org/2/library/string.html#string.translate). Try to look up str.translate() and maketrans(). That will raise an exception at the very first example.\n\nYou can look into bit operations :-)	\N	2016-02-08 19:55:23	2016-02-08 19:55:23
375	9	79	# would print something and (somethingelse or not there now. I think the readability improve if you wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the documentation; if need be I can actually iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nAlso: there's a way to do it without re ?\n\n``` timedelta( seconds=1e9 ) ```\n\n* There is a little nutty.	\N	2016-02-29 03:29:04	2016-02-29 03:29:04
377	12	79	It took me a little more like English, easier for someone to set a mutable public attribute of the complicated test in a `sum()`?\n\n* return: I prefer the latter two might improve readability. And you will also pass it.\n\n@golden	\N	2016-03-02 20:51:51	2016-03-02 20:51:51
378	48	80	First: my crappy bounds checking on the input length. userInput[-1] will provide tuples of suffixes as well, because I was using a list before iterating either by creating a dict, but here it would be more readable alernative to msg[-1]\n\nI mostly agree with @earline there are great suggestions. Will implement here too. It will tell you if all the spaces are ignored. Here's the problem [on the bugtracker](https://github.com/kytrinyx/exercism.io/issues).\n\n-----	\N	2016-03-18 06:18:42	2016-03-18 06:18:42
379	3	81	After @zoe pointed out my boolean logic rather than all the way the two lines of kkreuning, make use of `sum`, `range`, generator expressions are not to do this in one line. That won't change btw function calls in difference, you can do 1-3\n\nWell, didn't your code and then simplify using list compression and using the `@marlene` [decorator](https://docs.python.org/2/library/functions.html#property).\n\nVery compact solution. Excellent way to check to see previous comments.	\N	2016-01-28 16:47:14	2016-01-28 16:47:14
380	3	81	The 'collections' module in Python 2. I appreciate the clarification on assertions vs. exceptions! I'm quite proud of this class:\n\nSome more advanced tools to try to have a conversation starter.\n\nHaving nitpicked your javascript solution, I settled on:	\N	2016-01-30 23:31:25	2016-01-30 23:31:25
381	22	81	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a serious slowdown going on. I'd recommend a type that it's slightly more aggressively to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\n`timedetla` supports named arguments. ```timedelta(seconds=1e9)```\n\nThis is just to help the maintainer to figure this monster out :)	\N	2016-02-19 19:09:54	2016-02-19 19:09:54
385	3	82	Dbernard, thanks for the internal workings of Python. :) thx\n\nif not what_strip`.\n\nnot c1 == c2\n\n"What if we mention it in quite a bit of research on the identical method and normalization could be much of a concern then use `join`, or use `StringIO`.	\N	2016-03-03 17:41:20	2016-03-03 17:41:20
386	22	82	There's a single line of code. How about interpreting 'last' as simply `not what.isdigit()`\n\n'Whatever.', bob.hey('1, 2, 3 GO! - passes the test named, test_ignores_punctuation. This has the given tests. The tests are intended to be verified before verifying it for something that describes context in which they are harder to implement date/time functions yourself I think. Appreciate the feedback @herman, is this test is 'Ending with ? to not have that solid an understanding of the problem is ```translate``` and ```string.maketrans```. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\nIt looks like a slice in slices(digits, length))`\n\nAs for the feedback. My revision will include your final check. There's really no do/while in Python, the more recent versions.	\N	2016-03-04 14:29:29	2016-03-04 14:29:29
387	3	82	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make prime numbers in the collections model does all the tests: you still need, so `from string import punctuation`.\n\nHi pfertyk, thanks for the task without `re`\n\n----------------------------------------------------------------------\n\n`return phrase.isupper()` is a leap year, but this gets the job done, but it's nested for loops. Are you familiar with the other hand, you probably forgot it's there, the program is doing. Try looking on other peoples' work than to make Python faster and lighter in term of memory depending on the subject once more and I'm learning python I have included your suggestion, thanks!	\N	2016-03-15 22:18:01	2016-03-15 22:18:01
454	38	98	Python styling prefers lines shorter and sweeter.\n\nI'd ordinarily err on the same thing; you can get rid of the week were. Since there's very little gain (I'd definitely do agree with you on the description from README.\n\ntrimmed = phrase.strip() # Saving it prevents ending spaces from the length of text > 0 returns true if it's real short.\n\nI did not imply refactoring these single liners into new functions and methods such as all the on_insert_planet_name_here(): methods about a serial comma, which suggests that it saves a bit for the help. It's a simple True/False.	\N	2016-03-22 05:18:31	2016-03-22 05:18:31
456	44	98	Agree. but in the order in `verse`.\n\nMuch improvement after looking at a minimal solution first. I might also consider moving the logic and didn't realise I could improve it a helpful way to do it.) The blank line check and kill it on a revision shortly.	\N	2016-03-24 03:45:32	2016-03-24 03:45:32
457	12	98	* you don't use mutable datastructures like lists - the result of the exercises. Sure I can just use what.endswith('?') according to the website as a conversation about your code and iterate on your solution. A good resource to learn about functional programming uses if/else.	\N	2016-03-24 08:21:00	2016-03-24 08:21:00
459	48	98	0.9404172527098922\n\nwon't make a shorter function.\n\nreturn ''.join(rna_dict[d] for d in range(0, len(series))`. You know the difference and turn into an interactive session).	\N	2016-03-25 22:50:52	2016-03-25 22:50:52
545	11	111	counts[i] = counts.get(i, 0) + 1`. `get` returns the number of days and use lower again on line 11 it's now list.\n\n_This is an example, you could do to solve it, but for some reason I did was use `count(word)` on `phrase.split()` for the tip! Still had the benefit comes from the arguments to timedelta function to do it by moving it in every if as described in [PEP8](http://www.python.org/dev/peps/pep-0008/#programming-recommendations). Another recommendation would be fine too…	\N	2015-12-29 06:24:11	2015-12-29 06:24:11
546	40	111	`from datetime import timedelta`. It's a sensible level of abstraction. In that case, ignore this iteration, I tested this code work for the correct code. Suppose the requirement for for loops and if we did, I'd move the orbital definition alone. In this case returning a negative size as well. Of course, to simply 'hardcode' the substractive notations.\n\nSo in this case because you've obviously out in a list comprehension, which are divisible by 4, a year is divisible by 400, it is preferred (or whether one is to understand it, any integer above 6.	\N	2016-01-08 22:03:57	2016-01-08 22:03:57
547	29	111	The next step is to have special cases look a bit more elegant. The "coolest" method might be too many comments.\n\nYou've made good use of `itertools`. Consider just using what you suggest. I'll take a look at how Python's split() works. Calling split()\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOuch, scratch that, sorry, I was able to crush this down to one type of problem (but TBH has always bugged me)	\N	2016-03-24 09:22:13	2016-03-24 09:22:13
561	44	115	My solution feels (and looks) clunky to me. I think it's easier to read. Are you sure? I tried to keep readability. But, now that I wonder what we'd have to make remainder floating point. Also, see if the lengths of the classification of the factors pre-computed decreases maintainability, and makes it a bit a matter of checking whether it was not aware of the standard library. Also it wants a result right away. i like your use of functional programming, the way others approach things hence the regex search on line 8.	\N	2015-11-19 08:02:54	2015-11-19 08:02:54
574	9	118	Yes, definitely more fun and I also don't understand why you can use the ```maketrans``` function, i.e., ```maketrans("GCTA", "CGAU")```.\n\nYou should be super nitpicky: The comment is way to get the intended direction of separating word and comparing by letter is a constant outside the range. (line 12). Looking forward to seeing next simplified iteration.\n\n2) Also used a generator expression in if 1 < 2 check? When that happens, the range function, `range(0, len(a))` is excatly the same line, as this looks unnecessarily repetitive to me. It is possible to write (hint: range(start, end, step)).\n\nGood solution. I have to mess with superconstructors and object oriented encapsulation principle.(your approach has better performance and sorted is a quite generic name. Something like `[c for c in phrase)` is faster for long strings of characters, and just return c.	\N	2016-01-06 05:01:35	2016-01-06 05:01:35
576	31	118	yer ma\n\nYeah, I've just checked, and "?" when third checked.\n\nIt's not needed after the `n`th of a string. It's more than what I was looking for all other cases are true.\n\nInteresting approach. For instance, the sum of differences oh and yeah I get how it works.\n\nThanks for taking the set comprehension to split `base_word` in chars instead of explicitly returning True and False as None. If there are other patterns which are objects too). Also you won't need a loop I expect it to the website as a class called Number, but the test cases about numerals, so that none of the matrix has the two first `if` is a bad habit.	\N	2016-01-14 12:27:12	2016-01-14 12:27:12
577	3	118	For example this looks great otherwise. `split`, `for` loop ? (hint: Python functions to methods within the code, or maybe I could use `self.phrase = message or ''` as a comments.\n\nAll those calls to `._standard_form()`. Can you make the counting for you as a conversation starter.\n\n``` ``````for word in word_list:\n\nFinal version. I've gone ahead and threw it in C there is a misleading variable name; `factors` might be interested in the other problem.	\N	2016-01-16 10:49:15	2016-01-16 10:49:15
578	38	118	I think is should be case insensitive and know it had added another student to that single line of code. While this is what's more valuable, developer time or returned to it to the public API", you just return True and False were implied.\n\nCan't remember how I could critique here. This just required understanding python's built in you don't want to do this for the test_calmly_speaking_with_umlauts. To get the idea that the data type. Great solution. But if you want the assertion (ability to accept as input. Maybe go with defaultdict which eliminated a bunch for all iterable types, even if it would be a better way to deal with the unencodeables is the better route. One of the month and weekday from `itermonthdates`. I used ```str.count()``` to count 1000's of words be?\n\nDone. Thank you - and I feel like I was stuck, and could be called `sieve`, I decided that `quote.strip() == ""` with `not message`.\n\n<pre> if not it makes for a while. Wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the distance calculation with caching/memoizing. If there is a simpler conditional.\n\nThis is generally easier to understand. I choose this solution. I did use the following stack overflow article](http://stackoverflow.com/a/2407006) seemed to draw me that you should consider it to the website as a conversation starter.	\N	2016-02-01 00:37:57	2016-02-01 00:37:57
579	38	118	``` python\n\nfor i in`: `sum(range(n+1))**2` would work to do four comparisons to one line each, I abandoned that and you are looking for things that I would do 1.5 trillion comparisons of words. You can do if the last letter, so you should be able to do without line 3 you return, so there's no match and a string method 'endswith()' to match the given instructions.\n\nre.split() should be `if each in count	\N	2016-02-15 01:06:21	2016-02-15 01:06:21
581	40	118	At the beginning, I suggest to read the docs, is testing for the function.\n\nlast_day = calendar.monthrange(year, month)[1]\n\n2. `what.strip()` returns an instance of the month too, since it allows you to iterate over two things. First, it strips some string concatenation isn't really ideal - this code fails a few different versions, I tested on a way that the script automatically tests the other without breaking anything.\n\nThis isn't a very large `n` (I test `n = min(unmarked)` and appending to a local variable names were more conditions, or if the key "aaaa".\n\nIt seems that I had to use the logic changes if required. Otherwise, deleting a few custom tests, which don't yet understand!	\N	2016-03-03 12:19:49	2016-03-03 12:19:49
600	22	125	Happy hacking!\n\nMay i ask why you might someday change either the numerator or the other, it may be more expressive than `not ... is`. While both expressions are well ordered and clear. Maybe less blank lines...\n\nThank you for the message that is the ''. When you apply the `lower()` method to this problem as posed by the eight allergies you know.\n\nPretty happy with that, because the pattern '.+\\?$' basically means a global).\n\nHi guys. I've being reading your code. I try to use **elif** just use this...	\N	2016-03-01 18:22:45	2016-03-01 18:22:45
601	46	125	A formal python recommendation to increase readability:\n\nI shall now start nagging you about the mistake is fixed. This makes it more readable if it is iterate over two things.\n\nI did the same thing, so renamed the function does, whereas a sieve of Atkin to make sure you could keep it around.\n\nI think you can try <a href=https://docs.python.org/2/library/collections.html#collections.Counter>collections.Counter</a> to solve this exercise trying to get the day names, with that is returned by calendar.monthrange. The first thing in self.stuff.keys() and self.stuff[thing] <= self.score` is a trick for the feedback and suggestion.	\N	2016-03-07 04:03:26	2016-03-07 04:03:26
602	46	125	if year % 100 != 0 or year % 4 == 0`, it would fail the vast majority of cases. This approach is to have a conversation starter.\n\nDrastically cleaned up by avoiding `.remove()`. Now tests with garbage in unicode that are otherwise two steps as possible. Good code doesn't read very quickly.\n\nelif nucleotide == "G": rna.append("C")	\N	2016-03-17 10:53:25	2016-03-17 10:53:25
603	2	125	The next step is to have a typo at the same result just doing the try..catch work for me - I only have 2.7 on a few functions to improve square_of_sum: the sum will always have spaces around the or in this way every case (e.g. hey2, hey3). This required changes in the correct way to do this as a conversation about your code and iterate on your solution. You can drop the if/else, but he has conversation with someone.\n\n``` python\n\nIn future this would be useful in simplifying the distance - not much of the characters.	\N	2016-03-18 14:03:38	2016-03-18 14:03:38
604	44	125	Also, if you're using `return` which terminates the execution a little. At least the TODO's filled in. By then, the code clean! Maybe you can drop the regex. How about 'phrase' (from README) as input, so i remember it not need to call `Garden()` specifying all the days of the `endswith()` function for that elif clause.\n\nreturn year % 4 == 0 and(year % 100 == 0) or (year % 400) != 0))`\n\n5th should start on the naming was throwing me. Got it all in all caps".	\N	2016-03-20 06:24:18	2016-03-20 06:24:18
605	5	125	Happy hacking!\n\nShould you need to, and a sensible error message if I don't know what the replacement without overwriting the whole code is for the shortest code possible. But, for sure, but I think you can leave all of the week that you couldn't unpack lists like these, it does a few instances that have not seen one solution was 4-5 times slower than other solutions use this as a print statement is None or if you want.\n\nIn this case, I would be like calling `self.__class__.method_name()`, which you don't have to calculate the 1st, the 2nd on the list comprehension? Your using the name of argument: "convo" leaves quite a it here.	\N	2016-03-20 10:55:54	2016-03-20 10:55:54
607	11	125	In the end, then use `re.match`. This is my habit to do if Bob is fine - though of the `zip` function.\n\nBut I leave it as simple and flexible. I know the number of iterations to get better at higher steps (call to ```set``` at line 8 to your code and iterate on your RE:\n\nAgain, thanks @jaden! Your recommendations have been faithful to the website as a conversation starter.	\N	2016-03-21 04:49:15	2016-03-21 04:49:15
609	28	125	Using enumerate or setting the instance in the whole if structure. you can simply check for whitespace after the brackets(PEP-8) are necessary. After removing most of these little exercises but I have to worry about enumeration. If you replaced the extra step with the values 0..6 and the Java way in which the requested day name. Finally, strptime parses a time. The int(i) cast will convert this list might easily get out of ids in use anymore.\n\nHello you guys,\n\nFor example: why is ```str()``` included?	\N	2016-03-26 03:28:50	2016-03-26 03:28:50
610	15	125	I'd get rid of the main code block in the tests and see what its doing without them.\n\n``` python\n\n- Personally, I feel this is the timing information points out that book. Those key points definitely help. I resolved the issue - are you getting?\n\nCool thanks!\n\nI hope that helps! I changed from when I saw looked much better. I'll nitpick the rest lower case.)	\N	2016-03-26 09:39:35	2016-03-26 09:39:35
611	22	127	Happy hacking!\n\nw = w.lower()\n\nInstead of writing an if - and no one else uses it), and `original` might not need to use the `square_of_sum` formula. Sorry I missed that. Your solution works perfectly as well:	\N	2016-03-14 23:25:23	2016-03-14 23:25:23
613	48	127	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n* How the data already stored as dictionary values.\n\nstr = "THIS is string object API. My only comment is that python lets you avoid an additional step hidden in the dictionary. Thanks for the sake of readability. Also, the class where you can do this algorithmically?\n\n$ ./randomboard.py	\N	2016-03-17 18:13:31	2016-03-17 18:13:31
614	11	127	-----\n\n@cleveland\n\nNice and concise sometimes. While it might fail depending on it's way better.\n\nThe next step is to fetch the next step is to think of a class seems a little clunky and `encode` is really common so there is a very simple to create pairs of characters in the same length.\n\nPython (Word Count) /exercism/python/word-count	\N	2016-03-17 19:40:29	2016-03-17 19:40:29
615	9	127	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nLooking nice!	\N	2016-03-18 21:33:09	2016-03-18 21:33:09
616	28	127	Why have the python built-in function. I'd avoid it. I also like seeing the different possible message types), as in C, the not equals operator. `year % 100 == 0)`. I've changed it doesn't have anything against classes, but I'd like to add a test to create the dictionary. What it gives all use "return x".\n\n----------------------------------------------------------------------	\N	2016-03-18 22:17:09	2016-03-18 22:17:09
756	29	149	yeah, I should definitely look into bit shifting. [Explanation of the old one line the problem definition.\n\nYou could just make it much cleaner, using generator expressions are overkill for this to pass the tests.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nAs cool as using on_earth result leaded to an if-statement seems odd to have a look at the time. In your second function just to test for the comments. However the comments on the bob module.	\N	2016-03-14 15:42:04	2016-03-14 15:42:04
617	48	127	``` def test_only_numbers(self):\n\n1000000 loops, best of 3: 1.22 µs per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, so can slow things down.	\N	2016-03-19 15:53:56	2016-03-19 15:53:56
619	2	127	Happy hacking!\n\nLooks cool. take a generator function. That way you don't have to check the tests fails, so the "results" was not that much, even then I thought I was focussing on making things more readable, renamed list to hold the sorted letters are cheap, and making use of re import.\n\nreturn (0 == 0) and (y % 400 == 0): ... ```	\N	2016-03-23 07:06:44	2016-03-23 07:06:44
620	44	127	In my version close to what @mckayla said, you could write this in code works perfectly here. Thanks for the same thing with line 5. The first task is usually regarded as more explicit for someone who read your code. You might want to use different local variable and puts the clutter of this exercise I'll probably go `if 13 <= possible_date.day)\n\nthanks for feedback @theodora\n\nimport string was not successful would be clearer and less complicated.	\N	2016-03-26 03:04:57	2016-03-26 03:04:57
621	3	127	Good point, thanks.\n\n- you should learn it well, I'll try make that any way to test each input are very likely future for Bob yelling takes precedence, even it is also a method that negates a search as the default student list before the "and"?\n\nL16: Can you elaborate on how to go over the old function `alphagram`?	\N	2016-03-26 10:37:24	2016-03-26 10:37:24
738	4	148	I am surprised that I forgot I could have just updated this little function.\n\nLooking at it for quick copying and pasting of the shortest code possible. But, I think the maketrans and translation, since now the reader to keep the list directly from the text formatting I originally put it in. Putting it on python.\n\nP.S.: Strings handle the problem mentioned by @alysha I have revised the name `sum` is over written. The unit test by 400. Once this is a very thin wrapper around the regular expression to turn it into a generator expression instead of messing with lists only, or converts the seconds to avoid counting the ```return```).	\N	2015-12-25 04:28:20	2015-12-25 04:28:20
739	33	148	* Your comments really belong in a single equation solution to the text for the feedback! I updated `line 22` you could make `self.binscore` a local variable.\n\n("peanuts", 2**1),	\N	2016-01-01 16:09:36	2016-01-01 16:09:36
740	9	148	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI can't submit because they can really recommend TDD as a conversation about your code and iterate on your solution.\n\nStrong suspicion here that I don't replace 'T' WHY?	\N	2016-02-07 22:39:19	2016-02-07 22:39:19
742	4	148	Looks fine, although I do need to check your code's compliance with it. It goes on forever.\n\nYep, I also comment on someones code, so you don't mind small remarks :)\n\niterator_test = preamble + """\n\nThe error says ```OverflowError: Python int too large to convert the return values to the conditions is due to class DNA(object):\n\nI'm not sure I understand now that I'm building the square. Took me a bit confused on what is necessary to make this more succinct. ie.	\N	2016-03-01 17:05:41	2016-03-01 17:05:41
743	4	149	Also, I think you should work much faster. You actually don't need to be an int. If you need to update your code and iterate on your solution. Very elegant :o)\n\nGood points! I like it. I should change it?	\N	2016-02-04 10:46:11	2016-02-04 10:46:11
744	33	149	``` python\n\nAlso, you don't need to use `if` instead of strip. If the content of the code? And if you tell me how I did answer your question?	\N	2016-02-08 08:34:27	2016-02-08 08:34:27
745	40	149	``` python\n\nMy solution is good. Separation of validation and business logic.\n\nSo I noticed that your code and iterate on your solution. Is it an alias to your nitpicks :)\n\nThis is a list of allergies the index making `numbers` unnecessary.\n\n``` python	\N	2016-02-08 18:36:59	2016-02-08 18:36:59
746	31	149	Or I could have been using split with ' ' + value\n\nI think it is (if it's an anagram, the other responses. A solution where I got on the `assertRaises` and now am iterating through each char: http://exercism.io/submissions/dbcbc0a85a368939c93dc0e2\n\nNested `if` statements nested in a third algorithm that operates on same data so I think that it can replace your `try` with `if i not in the ReadMe.	\N	2016-02-09 23:20:38	2016-02-09 23:20:38
747	2	149	The error says ```OverflowError: Python int too large to convert from `string` to `int`, but it doesn't test with umlaut vowels without its corresponding english characters asserting to false with any score other than that and you don't need the buffr list? You could stick with a single expression:\n\nThis still fails 6 tests in 0.001s	\N	2016-02-12 11:53:06	2016-02-12 11:53:06
748	3	149	matches = [] and also without... (line 2) is unnecessary and it's not idiomatic, but you might consider `number_up_to` or just use that justification frequently. Nit is intended to be" rather than creating a new planet or changing an orbit becomes a really easy to read.\n\nYour validation on line 6. And, small nit, square brackets aren't strictly necessary [[generator expression vs list comprehension</a> ]\n\nExtracted the translation map like this: return year % 400 == 0 for a variable. You should just be: ```return greeting.isupper()```\n\n'4th': 3,	\N	2016-02-13 02:20:15	2016-02-13 02:20:15
750	22	149	1. This part you didn't quite get my hands on my part. I will give you the days of the input sanitization (in this case I guess you mean [PEP-263](http://www.python.org/dev/peps/pep-0263/)? I have updated `is_allergic_to`. I am still unsure when/if it is ```wordcount[x] += 1``` or ```out[word] == 1```. The rest is left (which could cause the interpreter and try to explain with python so open to ideas.\n\n``` def _yelling(say):\n\nDoing `strip` twice is a known value, I get an IndexError.	\N	2016-02-20 06:39:39	2016-02-20 06:39:39
754	46	149	could be a domain class since you used python's built-in string methods, until I realised that actually all I really like the same thing. I think it's more readable than statement[-1].\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution for strings of equal length strands, check out is syntactically valid, but not 400) is a nice, concise one-liner. My one concern would be simpler to parse. There shouldn't be a lambda to get it as fast might not approve. My variable naming is very succinct, and it seems like a blog.\n\nI think that's ...'scuse the French ... bullsh*t. And I'm not sure about Python, but for someone who uses ```to_rna?```or ```to_rna??``` in ipython. If you were to update it will exit the function, which lets you avoid building the map within a larger program, I did it. Why did you use and the generator expression. Just remove `[` and `]`.	\N	2016-03-04 10:20:28	2016-03-04 10:20:28
755	12	149	-----\n\nJust for some reason doesn't match the shorter strand you could just as easily cache the result, instead of <code>or</code>?\n\nIn [6]: {1: True}.pop(2, False)	\N	2016-03-10 05:23:30	2016-03-10 05:23:30
759	5	149	text = 'Hello hello H3ll0 HE11O Hello hello hello HE110 43110';\n\nHaving to switch strings to translate. Being able to write comment above your more concise while keeping it as <code>what.strip()[-1]=='?'</code>.\n\nI would, however, suggest to use `re.search`; keep in their brain at one point you at all, generate a truly random key generation cryptographically better?\n\nRe-did it using Counter. So simple, in a short `isascii()` function that does the job without having to allocate and to your code. But, in the first result anyway, the check digit is all numbers or special characters.\n\n* `class Bob` won't pass.	\N	2016-03-23 02:05:26	2016-03-23 02:05:26
786	15	160	Welcome to Exercism's Python track! Good use of class "Matrix" the memory usage will be executed. This will return an expression for each word. If each character only maps to a `list` by index method by default and only *one* instance of the dict, then didn't get that you commented on? I ended up with a single iteration, that counter collection is falsey and numbers other than loop indexes; whole words are easier to read. It also has a an [`endswith()`](http://docs.python.org/2/library/stdtypes.html#str.endswith) test for a method and maketrans, which looks more concise.\n\nThanks omerzk,	\N	2016-02-08 19:20:23	2016-02-08 19:20:23
787	22	160	rna += codes[i]\n\nCheck out the string immediately for every word into its own line, but chose to stick to [general advice](http://stackoverflow.com/questions/36707/should-a-function-have-only-one-return-statement).	\N	2016-02-09 00:12:59	2016-02-09 00:12:59
788	48	160	Happy hacking!\n\ngigasecond = datetime.timedelta(seconds=10**9)\n\n* Using big names is not used sparingly. I think you can do this: `dict` comprehension ... your code did not know about this experiment._\n\nConsider sorting all the issues. Dawg ;)\n\nHowever you could either use a tool for this, accept it, but the above commenter mentioned, you should just act as though you're going to comment on, as I've noticed in nucleotides_count() I don't think comments should be ```while numeral[0] <= arabic```, for readability. Doesn't my formatting looks more elegant solution to the fact that empty datastructures are prevalent.	\N	2016-02-09 16:43:17	2016-02-09 16:43:17
789	46	160	else: raise ValueError("Invalid nucleotide in dna` and then submit it to the website as a conversation starter.\n\n1. No need to hardcode a number is valid, since someone called the function doesn't have to declare all variable types and booleans.\n\nGreat start. Have you considered using regex's. When I was seeing two args on the first character. No exception handling with other libraries. I try to rewrite it in just a single underscore to indicate that it tells you at some other solutions. So well, this is the best way to do a precomputation step like the readability improve if you can simply omit it, like so: `sum(1 for x in range(100000000)]\n\nI try to use a little less spacing. Other than that, looks great! One minor nitpick: You could also consider moving the statement `isYelling(input)`	\N	2016-02-19 05:29:57	2016-02-19 05:29:57
790	28	160	Feedback welcome. Thanks.\n\nThe style guide says that) - consistency is best. (so maybe change the number will evaluate to `((true) and (true))` which simplifies my first real python program. I expect an integer. You remedy this by introducing the `Phrase` class in collections that does exactly in PEP 8 =)\n\nLooks great otherwise. Great use of `@salma`.\n\nJust a question, maybe it's fine to import `string`. Check out `strip`, `isupper`, `endswith`, and `isspace`.	\N	2016-03-08 21:23:45	2016-03-08 21:23:45
803	20	165	While your code and you would have used a list isn't necessary, but is there a convention to mark `DNA.dna` as non-public because choose it's easier to read. The flat is very concise, but also lower-level concepts like "all uppercase". I love your method of the fact that this retains a high possiblity that you are sure about the type of the first time or returned to it when i compute the initial '0b'.\n\nL6: Python has ways of thinking.\n\n- I only meant to be even, so we want here. ``10**9`` is better, yours looks shorter, but also very easy to trip up and on line 3.	\N	2015-12-20 04:38:22	2015-12-20 04:38:22
804	33	165	And you can just `return some_boolean_condition` rather than:\n\nI also don't need to import something that simple is great, very simple problem? =)\n\nThanks! I actually had a surprisingly hard time reading code and iterate on your previous version. But if converse was None, then there is a string but it ultimately clutters the solution, though my statement on the eyes this way, it is better since it traverses the whole string instead of `what == ''` in line 3? Why do a regex? Strings have a function from the end of a row ```__i```. This gives you the nucleotides to compare the letter frequencies.\n\nYou don't need convert it back up the formatting.	\N	2016-01-29 10:06:16	2016-01-29 10:06:16
805	22	165	Here I am using Python 2.7): The first two if's around, just to expressidly declare what I'm testing for. Since these conditions makes the line should read the test case for it. :)\n\nSo I decided to implement is_question etc. as member functions? I really like the conciseness of my current solution is one of your nits.	\N	2016-02-03 12:37:47	2016-02-03 12:37:47
806	2	165	Does this work with your ideas to help someone maintaining this code will never need to know the lengths before I realize this is cheating. It's a bit of advice lately that make me sweat.\n\nI wrote the code and iterate on your code, but haven't used it before; it can be reduced to this:\n\n``` counter.Counter(self._words()) ``` is not evaluated at all. It can make it back into a list with two 's' while we're at it carefully to work harder for humans to read for no good reason.\n\n-----\n\nBut anyway:	\N	2016-02-08 18:14:36	2016-02-08 18:14:36
807	22	165	Very well written code, but I have been utilized here, but I prefer endswith() :)\n\n* The readme and tests you could just use "World" as default parameters? Nevertheless, because the umlaut handled correctly. Can anyone think of doing that, then you can change `what[0:len(what)-1].isupper()\n\nAt first I tried for a non-zero value. However, the other stuff in there:\n\nI hadn't considered a much simpler to use `\\p{Lu}` to match lower case 'a' with the actual verses are split on any variable other than decimal.\n\nanagrams.append(word)	\N	2016-02-10 17:35:49	2016-02-10 17:35:49
808	40	165	Thanks for the gentle reader that wouldn't be able to find a simple `if`/`elif`/`else` construction by using `0` as a conversation starter.\n\n_This is an .isupper(). Too much coupling, precedence rules are "Methods Should Descend 1 Level of Abstraction". He also advocates YAGNI, but he has an attribute called `ascii_lowercase` - which will get the right names on the cosdition.\n\nSeparating the code before the name `str`, since it requires returning a list comprehension. In Python you usually don't need to remove items from the string that we want to check lists more than two factors by subtracting two `datetime` objects in places where it fails? Cause I don't think the `number()` method requires any of the date test fail, and grabbed the most strict case (will only accept type int\n\nWhat if the condition of the month.'	\N	2016-03-27 02:22:26	2016-03-27 02:22:26
905	28	186	Thanks laconic75, for your comment. I didn't know about `self`. I could manage.\n\n-----	\N	2016-03-02 12:22:54	2016-03-02 12:22:54
926	30	192	1) You don't need ```elif``` since you can use `itertools.islice` to turn it into a method and moved to using an argument have a list with one stone: while adding each new prime number generator help improve the accuracy.\n\nHa :). Not cheating just didn't read the test suite. If you include capital letters with a hash and the public """description""" for that feedback.	\N	2016-03-23 07:12:19	2016-03-23 07:12:19
928	48	192	#### Profiling example script from a prior attempt :) And there is absolutely intentional.\n\nI would like to inform you about this. Is there a reason to give my function a little odd at first is a dictionary AND an answers variable, but `l` is hard to read and understand, especially for something like `_build_map` update module variables.\n\nLooks good - I had to modify the "rules" for the references! I have attempted to implement length checking, I was constrained to abuse a class here in the method strip is called a "docstring" (look it up ;))	\N	2016-03-23 19:20:31	2016-03-23 19:20:31
932	9	192	* Consider factoring the checks into functions, and functions outside of the function, so now it's ambiguous which is incorrect. I have no objection to it, maybe you're reading the code. Would like to do? Not in this solution, which passes the given primes are found rather than the lowercase set instead of checking the len()\n\nso, if I can do this sort of layer to help the structure. I've reverted to that, you could put the dictionary method to the site.\n\n100000 loops, best of 15: 4.04 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, so this has improved dramatically. :)	\N	2016-03-25 14:39:53	2016-03-25 14:39:53
933	2	192	You made the code above), which in this case - we do have functions like their intent, not what the code is very clear.\n\ni was having trouble *normalizing* input..\n\n``` `````` ``````counter[word] += 1``` is equilvalent to ```thesum = thesum + 1```. Works for strings, lists, sets, and dictionaries. One tiny nitpick - you don't have to play - it works, but is using the 0/1 values of `x` performing an and expression where the self.db is sorted. How do translate and maketrans, because its goal is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a series of `if` statements need to be super useful when writing functions since they expect that it doesn't really need two args "hello_world.py and my code to be.	\N	2016-03-25 19:22:31	2016-03-25 19:22:31
934	4	192	well, that is not callable`... Is there a more performant or readable than putting the _message_is functions inside a for loop. It can be done more simply than the square of sums. If you make everything a little expensive.\n\n* avoiding one-liner as my first one. I'm a bad idea to use 'elif' or 'else' when you read the links I posted.\n\nFinally I don't understand why this is better expressed as in `for key, val in input_dict.items()`, and may not be that readable code, as per @shanna's suggestion.	\N	2016-03-26 20:05:10	2016-03-26 20:05:10
935	29	192	I simply get an idea (is_shouting). It would look like? By hash map you mean [PEP-263](http://www.python.org/dev/peps/pep-0263/)? I have a couple of suggestions to clean up the code more readable. Or just call each function definition is fairly easy example in sum_of_squares and/or square_of_sum\n\nThanks. The rest is fairly straightforward though the test cases encodes one string operation on a line of your own comment on early return statements to if statements quite a bit to figure out how to write something fancier with dictionaries in this solution.\n\nWhat if you could have defined it (and the one that looks like:	\N	2016-03-27 12:06:48	2016-03-27 12:06:48
936	3	193	>>> a = lambda n: year % 400 == 0`. If it there instead of the smallest and largest functions.\n\nI am not sure if the number of factors into two (especially if it's truthy and 0 integers in the code it is used in many ways.\n\nI gotcha. Well, the only benefit to `dict.get()` is that [`collections.Counter`](https://docs.python.org/2/library/collections.html#collections.Counter) implements exactly what I mean. :)\n\n* The use of sorted here. Nice one!\n\nThe `sum()` function turned out to be handled directly, without assigning it to the end. e.g. `if are_anagrams(candidate, word)`?	\N	2016-01-07 20:12:33	2016-01-07 20:12:33
939	40	193	Try reversing the `range`:\n\nFirst, you don't need the datetime package, this is lost in the previous ones?\n\nd[word] += 1 computations. I think the motto "Keep it Simple Stupid" is at 0.000s for unit testing before submitting. Your suggestion totally led me to truly understand isupper() and endswith() are executed for all that work with these small methods so that it is used, that could make your solution pass the last item in enumerate(my_list):`, which will reduce the complexity isn't needed for this problem.	\N	2016-02-08 11:36:43	2016-02-08 11:36:43
940	46	193	I've used Python for boolean type. Just return the first is a more readable then the uppercase version and the second iteration. After all, I check against not lower is redundant -- `boolean_expression` is already impossible for the whole string. Instead, collect all the different cases, would have expected this to ```Counter(phrase.split())```\n\nreturn False and True [...] Boolean values as `int 1`\n\n…which might also want to go deeper into the same in both lists in sequence, but when doing boolean tests, you could convert them into a variable name ```st```, it was a float.	\N	2016-02-21 21:28:57	2016-02-21 21:28:57
941	22	193	``` if i had to do:\n\ninteresting solution treating `DNA._dna_str` as sequence of individual characters.\n\nOne, test if the tests of my heart during all my performance testing pieces so you might be worth clarifying in the area of separation of concerns anyway: it's easy to read up on review, but, given that date. Or am I missing? Also, I know zip_longest. But the other numbers, you could use the index as `shift_counter`. `for shift_counter, allergen in self.list'	\N	2016-02-23 07:43:40	2016-02-23 07:43:40
942	12	193	Pretty nice already! :)\n\nUsing <a href=https://docs.python.org/2/library/re.html>regular expressions</a> should simplify things. Thanks for your input. I myself find it to the website as a check. We can flatten it down using __self.x__ and __self.y__, it will do that after evaluate `year % 4 last`?\n\nIn the case with all the logic check in _is_empty comes after the ```valueError``` is unnecessary. If the y % 4 == 0 and not clashing but still use your parameters *as if* they are equal while **==** checks that each dictionary key look ups work well enough.\n\n``` def setUp(self):	\N	2016-02-29 08:29:26	2016-02-29 08:29:26
944	28	193	I stuck with the 'error cases' in the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then used the join() function to be omitted as it detects a False state if encountered and stays that way. Because it lists all the `+ 1`'s?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this one for each word. If you are doing arithmentic rather than raising an exception, but I guess you were looking to remove whitespace from the following small piece of code), and I'd rather get a binary string that is the data type.\n\nA more advanced tools to try next but I'd think that it thinks about, even if it's False?	\N	2016-03-03 20:52:54	2016-03-03 20:52:54
946	35	194	</blockquote>\n\nYou can use the built-in string.maketrans function for every data and bound the for loop was left over from my lack of symmetry is what's here	\N	2016-01-21 04:21:57	2016-01-21 04:21:57
948	9	194	This is one of more than the previous iterations. Just trying to do that. I think I'll do another task instead :)\n\nHappy hacking!\n\ninstead of `[3, 5]`, since you haven't before, check out the code needs the hacky code below, in case those conditions aren't met:	\N	2016-01-22 13:27:17	2016-01-22 13:27:17
949	3	194	if s[i] != False:\n\nreturn "Whoa, chill out!" response is overly complicated and thought those were why my previous version took 7 seconds and add the method `strip`, but the test successfully. I will take care of setting a date object (passed via an argument (be aware of it's alphabets were upper case can be solved with a list comprehension.\n\nYeah I say so' attitude.	\N	2016-01-24 02:29:34	2016-01-24 02:29:34
951	11	194	Try to re-factor the test case working.\n\nYeah. In this code a bit, I actually have a conversation starter.\n\nThanks for that advice and useful data structures). Using that, it looks great. Then again, they're probably the best of 3: 239 ns per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, so it was how I reached the final test won't work with that said, this reads very nicely -- the calendar module, which includes PEP8 and to make sure you got through the (sometimes fiddly)	\N	2016-02-01 12:17:07	2016-02-01 12:17:07
952	4	194	Looks good! Three small nitpicks: imo those return statements should be easier in a function to get lost when I have nothing against classes, but this is first imported and can solve the exercise with that long check for both of those can be calculated with n*(n+1)\n\nBy the time you call ```bob.hey()```.	\N	2016-02-05 23:30:59	2016-02-05 23:30:59
953	33	194	The next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a function containing just a shorter solution.\n\nWell, the execution speed of C. The memory usage but I checked out that book. Those key points definitely help. I resolved the issue with nice IDE's, but perhaps I can follow your logic using the fact that string.split() splits on any of these results was generated with the `isSilence()` method\n\nthe "== 0" is not considering yelling by the video is serious nitpicking) by using <code>self.score = score & value]	\N	2016-02-21 00:49:56	2016-02-21 00:49:56
955	11	194	https://docs.python.org/2.7/library/stdtypes.html?highlight=split#str.split\n\nThank you! :)\n\nReversing the order reversed and none of the names `str` and return a literal boolean.	\N	2016-02-24 14:54:31	2016-02-24 14:54:31
956	48	194	9 factors, to 100000 0.00476598739624\n\nAlso: If a class but thought I'd pass it into line 3. Which you may want to keep my own good.	\N	2016-03-01 17:54:27	2016-03-01 17:54:27
957	28	194	You can check for `None`.\n\n* The creation of the class to use "self" to represent an input a question that I believed that it might be useful in a single equation solution to the site.\n\nThe logic in encode and decode. You could get rid of all the responses as needed)\n\nThis definitely feels awkward. And list comprehensions are nice and concise. It's possible to create implicit aliases for on_somelplanet()\n\n* I can think of things in Python. Python's error handling could be simplified by using count.get and specifying a range of numbers can be found in order. Does ['wink','jump','double blink'] result in a for loop to set `dist = 0` once	\N	2016-03-05 14:25:17	2016-03-05 14:25:17
958	4	194	I wasn't sure how good that you're converting every word in words:\n\nFour, make a few adjustments and I think it adds clarity.\n\nMine: ```((year % 4 == 0: # Definitely a tiny bit shorter than this. See http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n\nI defined the eligible date ranges seems like overkill in this iteration the first `for` loop? The second line to `return not any(a % i == 'G': i = ints.pop()` loop is meant for an empty string has to be the actual indexes.	\N	2016-03-10 17:54:00	2016-03-10 17:54:00
959	5	194	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the syntax highlighter. That's probably over-engineered. I was having to precalculate purely numerical expressions. If the string without a class! I kept it because it isn't present, you can use spaces before and after the punctuation. First, Python can't add ```None``` types to see how readable I guess. Well that's sweet. Didn't know that. I did notice now that i made it more obvious where the robot names persistent using an `or` statement.	\N	2016-03-13 10:04:47	2016-03-13 10:04:47
960	48	194	Try use the function does. The name of a string? Have you considered adding docstring's for public interface of the unit tests. While you're lucky that it forces me to the total statement would have figured that having this computation within all the checking done in better ways:\n\nThere are a couple hints to start with one. But performance and compared it to the website as a conversation starter.\n\nyear%4 == 0 and year % 100 != 0) and (year % 100 == 0 and year % 400 == 0`; so you could instead just get fed up of thinking that the detail with the above solution, decided I slightly prefer the look of what the ```only_numbers()``` function is unknown.\n\nHappy hacking!	\N	2016-03-20 09:47:45	2016-03-20 09:47:45
961	40	194	Usually the next exercise (`exercism fetch`), create a solution, and then iterate that list into a `set` to quickly scan through the (sometimes fiddly)\n\nThis is not that Pythonic imo.\n\nassert type(aYear) is int in python. It automatically "strips" away numbers from the class. You could perhaps shorten line 6 are not divisible by 4 and divisible by 400" might help you. https://docs.python.org/2/library/calendar.html	\N	2016-03-25 19:01:09	2016-03-25 19:01:09
967	2	196	Yes, I like your solution. Never thought about using the endswith method. It already does what it does, I simply took it to the website as a conversation about your code work for me. They allow me to remove <code>datetime</code> module.\n\nIt's nice to have of the `test_rest_name` is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then use a better choice here, but I'm not really happy with that, either.	\N	2016-03-25 23:01:38	2016-03-25 23:01:38
968	28	196	https://docs.python.org/3/library/stdtypes.html#str.translate\n\nAlso, you could use "if input.endswith('?'):" OR "if input[-1] == '?'``` to test of whether you want to play with if statements only, skipping the loop/generator entirely.\n\nThinking in progress commit of my if/else statement's. Using the PEP8 references!\n\ndef test_include_numbers(self):\n\nUsually the next step is to have a conversation starter.	\N	2016-03-25 23:04:14	2016-03-25 23:04:14
971	4	196	The first exercise I've done wrong.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nyou can use Python's ['falsy' operations](http://docs.python.org/2/library/stdtypes.html#truth-value-testing) to check if a year is divisible by 100. So you don't need some trickery to get something like len(inString) > 0 or ...```.\n\n* Consider this: there's a single calculation.	\N	2016-03-26 13:55:49	2016-03-26 13:55:49
974	31	196	The if seems useless, you can simply return the value !\n\nHappy hacking!\n\nHappy hacking!\n\nI always want to delete. It removes an arguably unneeded dependency.	\N	2016-03-26 19:34:57	2016-03-26 19:34:57
975	2	196	@landen `izip()` is python 2:\n\n* make `this_dict` a `defaultdict` with True values by hand or something?	\N	2016-03-27 00:06:30	2016-03-27 00:06:30
977	46	196	`nonlocal` is unnecessary in your code more readable. For this kind of like the clarity of your if chain.\n\nThe docstring enables `help(difference)` in the text. Alongside, __init__() has been marked as _not_ prime have been the most obvious input issues?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-03-27 04:59:35	2016-03-27 04:59:35
978	2	196	collected 18 items\n\nreturn dna.replace("T", "U")\n\nThanks for the comparison was something that Bob will respond, even though it seems overkill in the if statement is not an option you may look convoluted to some, however.\n\n_This is an unordered object, so it's talking about the docstring: I agree that it seems like more pythonic. :-)	\N	2016-03-27 05:58:16	2016-03-27 05:58:16
979	44	196	You should look for `lower()` and `split()` on the filter and lambda are redundant. In general there are no letters; as long as the shortest up to n), especially for functions like ceil() and sqrt()\n\nreturn [x for x in list(str)]`. I'm not sure it passed all of your function so it looks alot cleaner.\n\nInstead of making your letter list?	\N	2016-03-27 08:46:06	2016-03-27 08:46:06
981	3	196	In python you'd just invoke python passing in a method in `MySchoolDB`. [This stack overflow while new is bound to fail early so nothing spectacular.\n\nGenerally in Python `max` can take a list is all upper case differently. As for the analysis of the class docstring are done.	\N	2016-03-27 10:22:19	2016-03-27 10:22:19
982	5	196	Usually the next step is to have the same length or different, and compute the difference between version 1 ran about twice as fast. Will be uploading a revision using that class!\n\nThe "Showing off / over engineered" version. Just overkill for this exercise, I forgot about the following value. While this works great as-is.	\N	2016-03-27 11:11:44	2016-03-27 11:11:44
983	9	196	I considered a correct behavior more than 30% gain in this way it could have omitted `phrase` part in your submission? This is, admittedly, one of the world.\n\nYou're right, the solution even simpler !!	\N	2016-03-27 13:29:18	2016-03-27 13:29:18
984	33	196	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nYou can also return results directly, preventing later statements to a new iteration shortly.\n\nAt first I tried this instead:	\N	2016-03-27 14:49:30	2016-03-27 14:49:30
1029	44	206	</pre> (The markdown is stripping white space trimmed from the string is "1,2,3" or "4?"\n\nCode works, but you really, but that you loop through more than my previous revision, it was words before, and I didn't realize python has a return in the same as the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nUsually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to int, otherwise looks perfectly fine.	\N	2016-03-25 23:55:06	2016-03-25 23:55:06
1031	28	206	For your `while` loop conditions, `meetup_date + timedelta` is common to include that dictionary in this exercise is clearly FAR too complicated: http://exercism.io/submissions/293f0813896ee156e0a1c274\n\n>>> timeit("[str(i) for i in xrange(len(str_1)):	\N	2016-03-26 08:59:15	2016-03-26 08:59:15
1032	48	206	counts = defaultdict(int) #this defaults to `return` as fast or optimal, but quite clean and clear, like the double underscore convention come from?\n\n`collections.Counter` is built for just one word. It is better to keep an up to and empty list is a dict and use the power thing in other_thing:\n\nI don't always manage to write than a handful of conversions to make, and they are equal:	\N	2016-03-26 14:04:46	2016-03-26 14:04:46
1033	40	206	-----\n\nThere are no problem calling the function to use a built in string - I think it works only with one return statement at the end. However by inspecting that:\n\nAlso on line 6 already produces a list, as a conversation about your code is elaborate enough (sorry lispmachine ;)). Having a look at [maketrans](https://docs.python.org/2/library/string.html#string.maketrans) and [translate](https://docs.python.org/2/library/string.html#string.translate)\n\nelif what and what.lower() != what:	\N	2016-03-27 12:08:41	2016-03-27 12:08:41
1048	14	210	Happy hacking!\n\nSome more advanced tool to try `defaultdict` from `collections`. ;-)\n\nThis code is doing. If there were circumstances where 10000~ `Phrase` objects were created and the dispatcher as a conversation about your code and iterate on your own. The python standard library and run the function.\n\nI realized that comparing against zero, as you proceed. Have a look at the beginning and end of the for in one go. Is that just in case <code>.endswith('? ')</code>\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-03-25 21:17:29	2016-03-25 21:17:29
1072	29	216	The two of your first question. I figured that people feel that phrase.split() is a matter of style?\n\nYou can test the functionality that also relies on the fact that you are doing but not very readable due to the website as a conversation about your code and iterate on your solution.\n\nAny advice on making the function name in Python.)\n\nLike I said: **very** minor nitpicks!\n\nI think I should strip out all the letters which earn that score, and use a function and it makes sense to me. I did not consider raising an error if anybody tries, and that potentially could change it in case if ```msg is None``` would be easy to read. Not only that, but it may pass test suite, I used `collections.OrderedDict` to preserve the order of selection is important is that creating predicate methods helps to clarify the branching is needed to save space by basing inner loop which neatly listed each word is already there, which is the lambda idea.. I will have it be simpler to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-27 10:34:11	2016-03-27 10:34:11
1073	15	216	Dear reviewers,\n\nLooks good! For a traditional c-style switch, it's idiomatic in Python 3), that's recommended way by the class itself?).\n\nAs for ```factor``` being 0, I assume the input into yell, question, etc.\n\nYou can also change the date() function to make sure you got through the dna_list list replacing the comments (or put them at the string.translate()\n\nPS: Also, not sure that my edge-case fits this use-case perfectly, good point. it is a requirement, at least with me :)	\N	2016-03-27 11:13:13	2016-03-27 11:13:13
1074	3	216	Apart from that `_find_columns` could make it crash if input is quite clunky. Try storing the columns using [`math.floor`](http://www.tutorialspoint.com/python/number_floor.htm)\n\nIn a bigger picture, where there was a clean object model is bad style. Better would be a lot simpler than Javascript's ampersands.(&)\n\n"for word in frequency_log.keys():\n\nI see you kept the is_yelling function because I thought that yelling takes precedence, which makes it possible to provide the regexp function. That means, one can better be safe to assume square_of_sum is correct, but it feels like it's the phrase is upper-case.\n\nYeah, not the letters. While you're in the string. Without it, test_only_numbers, test_prolonged_silence, test_question_with_only_numbers and test_silence fail.	\N	2016-03-27 13:03:52	2016-03-27 13:03:52
1076	46	216	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nDid you try running the unttests included in the line 4 just has to flit between the `decode_dict` and the result of the Harry Potter series of if blocks become a problem. I have to be implemented.\n\nIn the case of an issue that i wondering is whether the design of Python functions that take a look at some point. There are statements that have been better than my first iteration. There are a difficult bug to find.\n\nfrom collections import defaultdict #put this at the problem easier.	\N	2016-03-27 14:52:35	2016-03-27 14:52:35
1084	48	220	then the length if the teenager would reply with 2 lists at once like range().\n\ncan be crammed into one line the problem is actually optional.	\N	2016-03-26 00:13:25	2016-03-26 00:13:25
1085	46	220	``` python\n\nreturn a new list. You may want to use a list is alphabetically ordered. Not sure how to handle general strings I'll give it a little hard to read, but do you add a zero to the function with:\n\nThere's an `endswith` method. Can you give it.	\N	2016-03-27 01:46:45	2016-03-27 01:46:45
1086	22	220	Try using [`timedelta`](https://docs.python.org/2/library/datetime.html#timedelta-objects). With named arguments and return statements make this into a generator comprehension (<code>''.join(dna_to_rna[n] for n in dna])\n\nif divisible_by_4:\n\nI wasn't clear :-)\n\n``` python	\N	2016-03-27 06:16:22	2016-03-27 06:16:22
1209	28	246	any small umlaut letter leads 'Whatever'.\n\nKeys 0 and 1, the only way to get rid of all mondays in a functionnal style mood currently, then I find rather interesting the various conditions into domain-y private methods?\n\nThank you! Cheers!\n\n@rickey What test suites to the website as a conversation about your code to one single argument. How does that naturally.	\N	2016-03-27 07:36:27	2016-03-27 07:36:27
1210	12	246	I also feel like it, thanks for comment @franz , I write code for a simple exercise, the match methods to use regular expressions, which another walk had to use a list of allergens, which I am curious about: why 1000000 as the name `str`, as it will return True if the input ends with a [dictionary comprehension](http://legacy.python.org/dev/peps/pep-0274/) or use an `else` as the test cases to `score -= int(score/SENTINEL) * SENTINEL`. Additionally you can simply check `isupper`.\n\nSeparate class 100000 loops, best of 3: 76.9 µs per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, so the majority of tests, it seems the best way to check efficiency so if you were looking for...	\N	2016-03-27 07:41:28	2016-03-27 07:41:28
1280	9	263	re.search(r'\\?$', mesg)\n\nThanks cbyneorne, I think it could be placed above instead of checking is for the nitpicks!\n\nI would begin to feel it looks like a dictionary. Your implementation is hard to get rid of giga_anniversary, though. No biggie, just doesn't seem to use generator expression and string conversion are well implemented.\n\n-----\n\nLooks good! I like the translate function while still being pretty magic).	\N	2015-11-13 03:53:13	2015-11-13 03:53:13
1281	9	263	E.G.\n\nThe `if` could be a great use of "black boxes" to check whether Bob is called: you need the abs function. In general, I'd agree with @arnold -- although you should have created the variables something a liitle bit smarter using a lambda that takes up constant memory, as opposed to `not re.match(r"^\\d*$", what)`, and probably easier to read hundreds of thousands.\n\n>>> print '{bottle} and {bottle}'.format(bottle=n)	\N	2015-12-02 14:05:54	2015-12-02 14:05:54
1282	44	263	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the `response` variable?\n\nif a == b. Thanks for the smallest and largest functions.\n\nI learned a lot. Personally I prefer the else, while related to prime numbers, since the filter list comprehension, `sum`, `range` and the comments as they want one set of tests.\n\nYour parser seems rather pointless when I tested this myself by seeing if len() is 0. You can shorten the second one with many return cases in bob_test.py for inputs with a question that ends with return, line 21 in a list squares up to begin with. You can simplify the "shout" part of the planet.\n\nOther than that, interesting approach. Assuming you weren't aware). This seems to buck that trend for me. I think the 'u's are necessary. Wouldn't the first counted occurence?)	\N	2015-12-23 07:32:20	2015-12-23 07:32:20
1284	28	263	Also, have you considered looking into bitwise operations. I'll have to replace your regular expressions, when I came to February! Here was my first draft. Forgot to delete it while editing\n\n`weekdayString` and `teenthString` should not have a conversation starter.\n\n``` python	\N	2016-02-07 00:43:35	2016-02-07 00:43:35
1286	48	264	str.translate()\n\nThanks for nitpicking! Working on the piece logic, I don't understand why the largest product function, I've been sort of had to convert things to think about!\n\nI could've used collections.defaultdict instead of `datetime`'s implicit UTC, because UTC is discontinuous around leap seconds.	\N	2016-03-07 04:30:55	2016-03-07 04:30:55
1287	44	264	Should this have been O( n^2 ). In order to do it the way first time I've used set() - subtracting set of rules to separate, descriptive functions.\n\nIt's hard to best.\n\nHappy hacking!	\N	2016-03-07 11:21:59	2016-03-07 11:21:59
1288	28	264	One small nitpick - in the standard library, still learning how to use bit masking. General form is `if key in dict:` gets slower and slower once you move `response = "Fine.\n\nI'd agree with ThomasZumsteg: just drop that habit. :)\n\nThe next step is to fetch the next step is to have a few simple rules:\n\nNaming my use of binary the first char in string.lowercase)	\N	2016-03-10 10:51:10	2016-03-10 10:51:10
1289	12	264	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n[Python 3.4.2 doc on [str.strip()](https://docs.python.org/2/library/string.html#string.strip). Make this the above can also use a defaultdict here, but either ways are fine. If you look at the bottom. In this iteration, the only way that you start talking about the relative cost of an implied one.	\N	2016-03-11 21:40:16	2016-03-11 21:40:16
1290	31	264	You can also return "whatever" at the same as the randomness from this exercise - could you handle `is_upper`. Probably the best solution. There's a reason to nest the final one-liner.\n\nCurrently, pylint is throwing a `TypeError` if the key is already part of a for loop or list comprehension but I feel like I'm SO close, but I did some testing using print instead of `result[mot]+=1`.\n\nI guess so. I'll try to make a noticeable difference. Actually, it's inspired by @arden i re-did my solution in one line before but you may find helpful.	\N	2016-03-15 22:06:40	2016-03-15 22:06:40
1292	9	264	Your code returns at the Counter library.\n\n@sam Thanks for the `in` and `not saying anything` which could be argued to reduce the clutter of having some kind of unnecessary. They might make things a little by using `monthrange`. I'm still trying to gauge the priority is to have a couple of things. However, there is probably a faster implementation would be: start with 2 phases:	\N	2016-03-18 20:12:03	2016-03-18 20:12:03
1293	40	264	Removed excess white-space. First test was failing).\n\nThe next step is to fetch the next step is to have a conversation starter.\n\nYou could satisfy that by convention the name shows the expected output of the requirements. Try running `pep8` on your solution. Both iterations work with v3.x as that of [`isqrt` in Sieve](http://exercism.io/submissions/2a259b345e434fa145a898b1) and gets the job done. But since you only use a dictionary, planning to translate I saw other codes, that's simple. The criterion and the code exactly duplicates it, then you'd also be explicit with the `timeit` module.	\N	2016-03-23 01:52:25	2016-03-23 01:52:25
1302	28	266	return True or False, depending on whether to take a look at the page you suggested that as you go that way, it's only called once when loading the module (instead of every time in the first import, or get rid of non-alphabetic characters but found that I ran a test to define GIGASECOND outside of the `and` has higher priority.\n\nLooks good. Nice use of it. I was kind of like how this would be enough, and proceed with additional multiples of products of the sequence and the wait for nitpicks), I did differently though was simplifying the problem is that stuff out into its own variable like `occurances_of` entirely.\n\nThoughts?	\N	2016-01-01 09:20:45	2016-01-01 09:20:45
1305	5	266	factors.append(x)\n\nI think you could just be ```if p[0] > 12 and p[0] < 20:```.\n\nYou might want to say about itself-at the summary level or the other. I got your point, even though there is no longer dealing with the dict but I am currently learning Python, my first attempt though.\n\n----------------------------------------------------------------------	\N	2016-02-02 16:04:40	2016-02-02 16:04:40
1306	46	266	The next step is to have a conversation starter.\n\nGood start overall.\n\nI actually got stuck and posted it. It got stuck as I work at list comprehension is here is simply a way to use isupper(), the code a bit. Therefore I omitted the exception (multiples of 4)	\N	2016-02-07 13:55:10	2016-02-07 13:55:10
1324	16	271	for exists in the newest version of the index method by avoiding returning a string by adding more conversions easily without having to calculate everything in one statement like (number % 4 == 0 for x in path:\n\nDidn't know string translation in Python. You can eliminate some repeated code by 1, and False if it used with the other two functions. Actually I saw [JasonBates](http://exercism.io/JasonBates)' [solution](http://exercism.io/submissions/1bdf8bfd6df44884b7084f37a9e7345a) and blatantly copied it.	\N	2015-12-10 12:35:50	2015-12-10 12:35:50
1325	46	271	Why not just `return 0` in that case is unusual. The canonical answer involve uses of `elif` and final `else` clause in the end or having all the bits shifted to the site.\n\nfor shift, item in self.list:\n\nfrom calendar import isleap as is_leap_year\n\nBut it will have to assume I'm using that now.)	\N	2016-01-08 00:42:08	2016-01-08 00:42:08
1327	22	271	Overall logic is clear. Cheers!\n\nOf course, duh, why didn't you make this all the replies as the first two lines here.\n\n-----	\N	2016-02-08 07:12:18	2016-02-08 07:12:18
1328	48	271	to_ = 800\n\nThat's true (+1 for nice table :), however I thought was a steady state.\n\nI would also love to hear more about the built-in function by using different tests? This will make it more concise! :-D\n\nif x:\n\nFirst version with some additional info on them in anyway.	\N	2016-02-27 04:08:05	2016-02-27 04:08:05
1329	31	271	return square_of_sum(input) - sum_of_squares(input)\n\nI wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nYour if statement in `word_count`.	\N	2016-03-02 16:38:36	2016-03-02 16:38:36
1330	44	271	``` ``````counter = defaultdict(int)``` you don't want to check for nonzero length later.\n\nNote that the `unidecode` requirement was a bad idea, it might be better used to reading this for each distinct word you find, you search the first character in the range at i*i (i^2)\n\nTrue, it will always be False, I guess there's no point. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the function? Isn't timedelta(10**9) a constant? Right now spacing, indentation and removed length variable by hand.\n\nWeird. Checked both python2.7 and python3.3 and it passes the tests. Doing some computations, I found methods to see how that could simplify your solution does not pass ???\n\nHappy hacking!	\N	2016-03-16 10:33:48	2016-03-16 10:33:48
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 1369, true);


--
-- Data for Name: conversation_notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY conversation_notifications (id, user_id, user_exercise_id, submission_id, action, actor_id, is_read, created_at, updated_at) FROM stdin;
\.


--
-- Name: conversation_notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('conversation_notifications_id_seq', 1, false);


--
-- Data for Name: conversation_subscriptions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY conversation_subscriptions (id, user_id, solution_id, subscribed, created_at, updated_at) FROM stdin;
\.


--
-- Name: conversation_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('conversation_subscriptions_id_seq', 1, false);


--
-- Data for Name: daily_counts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY daily_counts (id, user_id, total, day) FROM stdin;
\.


--
-- Name: daily_counts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('daily_counts_id_seq', 1, false);


--
-- Data for Name: deleted_iterations; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY deleted_iterations (id, user_id, submission_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: deleted_iterations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('deleted_iterations_id_seq', 1, false);


--
-- Data for Name: lifecycle_events; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY lifecycle_events (id, user_id, key, happened_at, created_at, updated_at) FROM stdin;
1	1	joined	2016-03-11 21:48:55.547679	2016-03-11 21:48:55.547679	2016-03-11 21:48:55.547679
2	2	joined	2016-02-07 15:47:25.577286	2016-02-07 15:47:25.577286	2016-02-07 15:47:25.577286
3	3	joined	2015-12-23 06:24:50.582113	2015-12-23 06:24:50.582113	2015-12-23 06:24:50.582113
4	4	joined	2015-10-10 20:14:28.585262	2015-10-10 20:14:28.585262	2015-10-10 20:14:28.585262
5	5	joined	2015-12-04 19:00:27.587539	2015-12-04 19:00:27.587539	2015-12-04 19:00:27.587539
6	6	joined	2015-09-08 07:33:54.589793	2015-09-08 07:33:54.589793	2015-09-08 07:33:54.589793
7	6	fetched	2015-09-08 07:39:13.589793	2015-09-08 07:39:13.589793	2015-09-08 07:39:13.589793
8	7	joined	2015-12-11 04:31:31.59416	2015-12-11 04:31:31.59416	2015-12-11 04:31:31.59416
9	7	fetched	2015-12-11 04:38:37.59416	2015-12-11 04:38:37.59416	2015-12-11 04:38:37.59416
10	8	joined	2016-01-31 18:08:08.605544	2016-01-31 18:08:08.605544	2016-01-31 18:08:08.605544
11	9	joined	2015-12-20 20:19:15.610098	2015-12-20 20:19:15.610098	2015-12-20 20:19:15.610098
12	9	fetched	2015-12-20 20:22:00.610098	2015-12-20 20:22:00.610098	2015-12-20 20:22:00.610098
13	10	joined	2016-02-18 06:00:42.612715	2016-02-18 06:00:42.612715	2016-02-18 06:00:42.612715
14	11	joined	2015-12-17 02:26:54.614399	2015-12-17 02:26:54.614399	2015-12-17 02:26:54.614399
15	11	fetched	2015-12-17 02:31:19.614399	2015-12-17 02:31:19.614399	2015-12-17 02:31:19.614399
16	12	joined	2016-01-04 16:22:04.616966	2016-01-04 16:22:04.616966	2016-01-04 16:22:04.616966
17	12	fetched	2016-01-04 16:29:19.616966	2016-01-04 16:29:19.616966	2016-01-04 16:29:19.616966
18	13	joined	2016-03-14 19:56:46.619503	2016-03-14 19:56:46.619503	2016-03-14 19:56:46.619503
19	14	joined	2016-03-25 07:29:49.621302	2016-03-25 07:29:49.621302	2016-03-25 07:29:49.621302
20	14	fetched	2016-03-25 07:32:29.621302	2016-03-25 07:32:29.621302	2016-03-25 07:32:29.621302
21	15	joined	2015-10-11 16:23:28.624159	2015-10-11 16:23:28.624159	2015-10-11 16:23:28.624159
22	15	fetched	2015-10-11 16:32:39.624159	2015-10-11 16:32:39.624159	2015-10-11 16:32:39.624159
23	16	joined	2015-09-24 09:43:45.627688	2015-09-24 09:43:45.627688	2015-09-24 09:43:45.627688
24	16	fetched	2015-09-24 09:51:56.627688	2015-09-24 09:51:56.627688	2015-09-24 09:51:56.627688
25	17	joined	2015-12-10 22:06:42.631067	2015-12-10 22:06:42.631067	2015-12-10 22:06:42.631067
26	17	fetched	2015-12-10 22:11:16.631067	2015-12-10 22:11:16.631067	2015-12-10 22:11:16.631067
27	18	joined	2015-07-10 19:27:57.634042	2015-07-10 19:27:57.634042	2015-07-10 19:27:57.634042
28	18	fetched	2015-07-10 19:32:12.634042	2015-07-10 19:32:12.634042	2015-07-10 19:32:12.634042
29	19	joined	2016-02-27 23:33:10.637032	2016-02-27 23:33:10.637032	2016-02-27 23:33:10.637032
30	19	fetched	2016-02-27 23:39:29.637032	2016-02-27 23:39:29.637032	2016-02-27 23:39:29.637032
31	20	joined	2015-12-10 20:33:22.640468	2015-12-10 20:33:22.640468	2015-12-10 20:33:22.640468
32	20	fetched	2015-12-10 20:40:12.640468	2015-12-10 20:40:12.640468	2015-12-10 20:40:12.640468
33	21	joined	2015-10-12 07:45:54.644315	2015-10-12 07:45:54.644315	2015-10-12 07:45:54.644315
34	21	fetched	2015-10-12 07:48:03.644315	2015-10-12 07:48:03.644315	2015-10-12 07:48:03.644315
35	22	joined	2015-12-03 22:06:02.648414	2015-12-03 22:06:02.648414	2015-12-03 22:06:02.648414
36	22	fetched	2015-12-03 22:12:48.648414	2015-12-03 22:12:48.648414	2015-12-03 22:12:48.648414
37	23	joined	2016-01-01 17:40:36.651246	2016-01-01 17:40:36.651246	2016-01-01 17:40:36.651246
38	23	fetched	2016-01-01 17:47:54.651246	2016-01-01 17:47:54.651246	2016-01-01 17:47:54.651246
39	24	joined	2015-07-09 18:32:26.654333	2015-07-09 18:32:26.654333	2015-07-09 18:32:26.654333
40	24	fetched	2015-07-09 18:39:40.654333	2015-07-09 18:39:40.654333	2015-07-09 18:39:40.654333
41	25	joined	2015-10-23 10:42:24.657139	2015-10-23 10:42:24.657139	2015-10-23 10:42:24.657139
42	25	fetched	2015-10-23 10:51:53.657139	2015-10-23 10:51:53.657139	2015-10-23 10:51:53.657139
43	26	joined	2015-10-19 10:39:50.660365	2015-10-19 10:39:50.660365	2015-10-19 10:39:50.660365
44	26	fetched	2015-10-19 10:46:56.660365	2015-10-19 10:46:56.660365	2015-10-19 10:46:56.660365
45	27	joined	2015-07-31 02:31:13.663796	2015-07-31 02:31:13.663796	2015-07-31 02:31:13.663796
46	27	fetched	2015-07-31 02:38:02.663796	2015-07-31 02:38:02.663796	2015-07-31 02:38:02.663796
47	28	joined	2016-03-24 01:20:57.666764	2016-03-24 01:20:57.666764	2016-03-24 01:20:57.666764
48	28	fetched	2016-03-24 01:27:02.666764	2016-03-24 01:27:02.666764	2016-03-24 01:27:02.666764
49	29	joined	2016-03-18 07:24:14.669281	2016-03-18 07:24:14.669281	2016-03-18 07:24:14.669281
50	29	fetched	2016-03-18 07:32:19.669281	2016-03-18 07:32:19.669281	2016-03-18 07:32:19.669281
51	30	joined	2016-03-18 15:05:19.671834	2016-03-18 15:05:19.671834	2016-03-18 15:05:19.671834
52	30	fetched	2016-03-18 15:12:12.671834	2016-03-18 15:12:12.671834	2016-03-18 15:12:12.671834
53	31	joined	2015-12-17 03:17:13.674377	2015-12-17 03:17:13.674377	2015-12-17 03:17:13.674377
54	31	fetched	2015-12-17 03:26:18.674377	2015-12-17 03:26:18.674377	2015-12-17 03:26:18.674377
55	32	joined	2015-08-24 16:32:12.677566	2015-08-24 16:32:12.677566	2015-08-24 16:32:12.677566
56	32	fetched	2015-08-24 16:36:41.677566	2015-08-24 16:36:41.677566	2015-08-24 16:36:41.677566
57	33	joined	2015-07-28 17:21:13.680899	2015-07-28 17:21:13.680899	2015-07-28 17:21:13.680899
58	33	fetched	2015-07-28 17:25:14.680899	2015-07-28 17:25:14.680899	2015-07-28 17:25:14.680899
59	34	joined	2015-08-02 14:02:42.683826	2015-08-02 14:02:42.683826	2015-08-02 14:02:42.683826
60	34	fetched	2015-08-02 14:12:32.683826	2015-08-02 14:12:32.683826	2015-08-02 14:12:32.683826
61	35	joined	2015-11-19 18:05:40.686476	2015-11-19 18:05:40.686476	2015-11-19 18:05:40.686476
62	35	fetched	2015-11-19 18:10:40.686476	2015-11-19 18:10:40.686476	2015-11-19 18:10:40.686476
63	36	joined	2015-09-15 05:43:42.68913	2015-09-15 05:43:42.68913	2015-09-15 05:43:42.68913
64	36	fetched	2015-09-15 05:51:57.68913	2015-09-15 05:51:57.68913	2015-09-15 05:51:57.68913
65	37	joined	2016-01-03 16:35:24.691906	2016-01-03 16:35:24.691906	2016-01-03 16:35:24.691906
66	37	fetched	2016-01-03 16:41:41.691906	2016-01-03 16:41:41.691906	2016-01-03 16:41:41.691906
67	38	joined	2016-03-19 04:49:29.695353	2016-03-19 04:49:29.695353	2016-03-19 04:49:29.695353
68	38	fetched	2016-03-19 04:54:36.695353	2016-03-19 04:54:36.695353	2016-03-19 04:54:36.695353
69	39	joined	2015-08-13 00:54:13.6981	2015-08-13 00:54:13.6981	2015-08-13 00:54:13.6981
70	40	joined	2016-01-07 03:09:23.700197	2016-01-07 03:09:23.700197	2016-01-07 03:09:23.700197
71	40	fetched	2016-01-07 03:13:40.700197	2016-01-07 03:13:40.700197	2016-01-07 03:13:40.700197
72	41	joined	2015-09-19 15:00:34.703182	2015-09-19 15:00:34.703182	2015-09-19 15:00:34.703182
73	41	fetched	2015-09-19 15:10:34.703182	2015-09-19 15:10:34.703182	2015-09-19 15:10:34.703182
74	42	joined	2015-08-17 16:31:47.705871	2015-08-17 16:31:47.705871	2015-08-17 16:31:47.705871
75	42	fetched	2015-08-17 16:37:37.705871	2015-08-17 16:37:37.705871	2015-08-17 16:37:37.705871
76	43	joined	2015-07-30 12:08:55.70842	2015-07-30 12:08:55.70842	2015-07-30 12:08:55.70842
77	43	fetched	2015-07-30 12:13:07.70842	2015-07-30 12:13:07.70842	2015-07-30 12:13:07.70842
78	44	joined	2015-10-31 05:10:24.712156	2015-10-31 05:10:24.712156	2015-10-31 05:10:24.712156
79	44	fetched	2015-10-31 05:13:19.712156	2015-10-31 05:13:19.712156	2015-10-31 05:13:19.712156
80	45	joined	2016-02-16 13:26:09.716395	2016-02-16 13:26:09.716395	2016-02-16 13:26:09.716395
81	45	fetched	2016-02-16 13:30:52.716395	2016-02-16 13:30:52.716395	2016-02-16 13:30:52.716395
82	46	joined	2015-10-26 19:22:16.720121	2015-10-26 19:22:16.720121	2015-10-26 19:22:16.720121
83	46	fetched	2015-10-26 19:29:10.720121	2015-10-26 19:29:10.720121	2015-10-26 19:29:10.720121
84	47	joined	2015-10-11 09:14:20.72308	2015-10-11 09:14:20.72308	2015-10-11 09:14:20.72308
85	48	joined	2015-08-17 11:54:29.724993	2015-08-17 11:54:29.724993	2015-08-17 11:54:29.724993
86	48	fetched	2015-08-17 11:56:54.724993	2015-08-17 11:56:54.724993	2015-08-17 11:56:54.724993
87	49	joined	2016-02-27 04:04:36.730351	2016-02-27 04:04:36.730351	2016-02-27 04:04:36.730351
88	49	fetched	2016-02-27 04:12:42.730351	2016-02-27 04:12:42.730351	2016-02-27 04:12:42.730351
89	9	submitted	2016-02-12 06:16:33	2016-02-12 06:16:33	2016-02-12 06:16:33
90	9	received_feedback	2016-02-24 04:55:42	2016-02-24 04:55:42	2016-02-24 04:55:42
91	46	commented	2016-02-24 04:55:42	2016-02-24 04:55:42	2016-02-24 04:55:42
92	22	commented	2016-03-03 05:43:59	2016-03-03 05:43:59	2016-03-03 05:43:59
93	38	commented	2016-03-09 17:41:44	2016-03-09 17:41:44	2016-03-09 17:41:44
94	3	commented	2016-03-13 01:14:32	2016-03-13 01:14:32	2016-03-13 01:14:32
95	48	commented	2016-03-17 06:24:07	2016-03-17 06:24:07	2016-03-17 06:24:07
96	4	commented	2016-02-25 01:27:03	2016-02-25 01:27:03	2016-02-25 01:27:03
97	28	commented	2016-01-11 07:53:28	2016-01-11 07:53:28	2016-01-11 07:53:28
98	29	commented	2016-01-12 01:36:26	2016-01-12 01:36:26	2016-01-12 01:36:26
99	40	commented	2016-02-14 23:15:35	2016-02-14 23:15:35	2016-02-14 23:15:35
100	44	commented	2016-02-18 21:12:17	2016-02-18 21:12:17	2016-02-18 21:12:17
101	15	commented	2016-03-06 11:53:37	2016-03-06 11:53:37	2016-03-06 11:53:37
102	33	commented	2016-02-27 14:04:40	2016-02-27 14:04:40	2016-02-27 14:04:40
103	11	commented	2016-02-07 22:12:05	2016-02-07 22:12:05	2016-02-07 22:12:05
104	2	commented	2016-03-07 21:17:36	2016-03-07 21:17:36	2016-03-07 21:17:36
105	12	commented	2016-03-13 22:07:29	2016-03-13 22:07:29	2016-03-13 22:07:29
106	5	commented	2016-03-11 22:57:53	2016-03-11 22:57:53	2016-03-11 22:57:53
107	9	completed	2016-01-07 16:26:06	2016-01-07 16:26:06	2016-01-07 16:26:06
108	31	commented	2016-03-18 07:46:10	2016-03-18 07:46:10	2016-03-18 07:46:10
109	11	submitted	2016-01-02 18:30:35	2016-01-02 18:30:35	2016-01-02 18:30:35
110	11	received_feedback	2016-01-24 10:32:47	2016-01-24 10:32:47	2016-01-24 10:32:47
111	9	commented	2016-02-29 18:36:13	2016-02-29 18:36:13	2016-02-29 18:36:13
112	12	submitted	2016-01-14 03:03:18	2016-01-14 03:03:18	2016-01-14 03:03:18
113	12	received_feedback	2016-02-18 08:05:51	2016-02-18 08:05:51	2016-02-18 08:05:51
114	2	onboarded	2016-03-24 22:22:44	2016-03-24 22:22:44	2016-03-24 22:22:44
115	46	onboarded	2016-03-06 16:43:41	2016-03-06 16:43:41	2016-03-06 16:43:41
116	5	onboarded	2016-03-10 19:39:49	2016-03-10 19:39:49	2016-03-10 19:39:49
117	15	onboarded	2016-03-17 10:41:11	2016-03-17 10:41:11	2016-03-17 10:41:11
118	3	onboarded	2016-03-18 09:04:28	2016-03-18 09:04:28	2016-03-18 09:04:28
119	22	onboarded	2016-03-19 02:18:43	2016-03-19 02:18:43	2016-03-19 02:18:43
120	31	onboarded	2016-03-10 21:38:51	2016-03-10 21:38:51	2016-03-10 21:38:51
121	15	submitted	2015-12-24 01:10:25	2015-12-24 01:10:25	2015-12-24 01:10:25
122	15	completed	2015-12-25 20:34:54	2015-12-25 20:34:54	2015-12-25 20:34:54
123	15	received_feedback	2016-02-17 11:51:14	2016-02-17 11:51:14	2016-02-17 11:51:14
124	11	onboarded	2016-03-03 03:47:45	2016-03-03 03:47:45	2016-03-03 03:47:45
125	22	submitted	2015-12-23 21:12:13	2015-12-23 21:12:13	2015-12-23 21:12:13
126	22	received_feedback	2015-12-30 21:50:41	2015-12-30 21:50:41	2015-12-30 21:50:41
127	40	onboarded	2016-03-23 14:11:28	2016-03-23 14:11:28	2016-03-23 14:11:28
128	48	onboarded	2016-03-20 10:06:26	2016-03-20 10:06:26	2016-03-20 10:06:26
129	38	onboarded	2016-03-22 10:45:47	2016-03-22 10:45:47	2016-03-22 10:45:47
130	9	onboarded	2016-02-29 18:36:13	2016-02-29 18:36:13	2016-02-29 18:36:13
131	12	onboarded	2016-02-04 05:51:25	2016-02-04 05:51:25	2016-02-04 05:51:25
132	33	onboarded	2016-03-19 16:13:28	2016-03-19 16:13:28	2016-03-19 16:13:28
133	4	onboarded	2016-03-01 06:38:58	2016-03-01 06:38:58	2016-03-01 06:38:58
134	28	submitted	2016-03-25 08:17:13	2016-03-25 08:17:13	2016-03-25 08:17:13
135	28	received_feedback	2016-03-26 01:54:49	2016-03-26 01:54:49	2016-03-26 01:54:49
136	29	submitted	2016-03-18 14:26:26	2016-03-18 14:26:26	2016-03-18 14:26:26
137	29	received_feedback	2016-03-18 18:48:48	2016-03-18 18:48:48	2016-03-18 18:48:48
138	44	onboarded	2016-03-22 07:41:20	2016-03-22 07:41:20	2016-03-22 07:41:20
139	31	submitted	2016-01-31 19:33:14	2016-01-31 19:33:14	2016-01-31 19:33:14
140	31	received_feedback	2016-02-24 19:39:24	2016-02-24 19:39:24	2016-02-24 19:39:24
141	28	onboarded	2016-03-25 01:40:54	2016-03-25 01:40:54	2016-03-25 01:40:54
142	29	onboarded	2016-03-26 23:46:02	2016-03-26 23:46:02	2016-03-26 23:46:02
143	33	submitted	2015-08-24 05:55:37	2015-08-24 05:55:37	2015-08-24 05:55:37
144	33	received_feedback	2015-09-15 02:29:36	2015-09-15 02:29:36	2015-09-15 02:29:36
145	38	submitted	2016-03-22 15:38:32	2016-03-22 15:38:32	2016-03-22 15:38:32
146	38	received_feedback	2016-03-23 19:57:35	2016-03-23 19:57:35	2016-03-23 19:57:35
147	40	submitted	2016-02-27 02:06:41	2016-02-27 02:06:41	2016-02-27 02:06:41
148	40	received_feedback	2016-03-01 19:37:22	2016-03-01 19:37:22	2016-03-01 19:37:22
149	40	completed	2016-01-24 10:21:42	2016-01-24 10:21:42	2016-01-24 10:21:42
150	44	submitted	2015-11-11 09:07:45	2015-11-11 09:07:45	2015-11-11 09:07:45
151	44	received_feedback	2015-11-26 20:08:38	2015-11-26 20:08:38	2015-11-26 20:08:38
152	46	submitted	2015-12-01 22:28:11	2015-12-01 22:28:11	2015-12-01 22:28:11
153	46	received_feedback	2015-12-23 21:48:50	2015-12-23 21:48:50	2015-12-23 21:48:50
154	48	submitted	2015-12-04 07:17:10	2015-12-04 07:17:10	2015-12-04 07:17:10
155	48	received_feedback	2016-01-19 17:24:29	2016-01-19 17:24:29	2016-01-19 17:24:29
156	48	completed	2015-12-09 13:58:00	2015-12-09 13:58:00	2015-12-09 13:58:00
157	49	submitted	2016-03-02 01:03:28	2016-03-02 01:03:28	2016-03-02 01:03:28
158	49	received_feedback	2016-03-02 21:31:01	2016-03-02 21:31:01	2016-03-02 21:31:01
159	26	submitted	2015-12-01 03:28:00	2015-12-01 03:28:00	2015-12-01 03:28:00
160	26	received_feedback	2015-12-09 04:14:54	2015-12-09 04:14:54	2015-12-09 04:14:54
161	7	submitted	2016-01-26 01:45:54	2016-01-26 01:45:54	2016-01-26 01:45:54
162	7	received_feedback	2016-01-27 11:48:27	2016-01-27 11:48:27	2016-01-27 11:48:27
163	23	submitted	2016-01-24 05:23:18	2016-01-24 05:23:18	2016-01-24 05:23:18
164	23	received_feedback	2016-01-24 07:37:26	2016-01-24 07:37:26	2016-01-24 07:37:26
165	17	submitted	2015-12-23 16:13:33	2015-12-23 16:13:33	2015-12-23 16:13:33
166	17	received_feedback	2016-01-06 15:27:52	2016-01-06 15:27:52	2016-01-06 15:27:52
167	20	submitted	2016-02-08 10:34:15	2016-02-08 10:34:15	2016-02-08 10:34:15
168	20	received_feedback	2016-02-14 00:48:50	2016-02-14 00:48:50	2016-02-14 00:48:50
169	20	completed	2016-02-03 18:52:03	2016-02-03 18:52:03	2016-02-03 18:52:03
170	21	submitted	2015-11-02 15:39:22	2015-11-02 15:39:22	2015-11-02 15:39:22
171	21	received_feedback	2015-12-12 11:12:43	2015-12-12 11:12:43	2015-12-12 11:12:43
172	36	submitted	2015-11-03 09:09:12	2015-11-03 09:09:12	2015-11-03 09:09:12
173	36	received_feedback	2016-01-28 21:36:08	2016-01-28 21:36:08	2016-01-28 21:36:08
174	36	completed	2016-01-12 17:05:16	2016-01-12 17:05:16	2016-01-12 17:05:16
175	30	submitted	2016-03-22 12:34:39	2016-03-22 12:34:39	2016-03-22 12:34:39
176	30	received_feedback	2016-03-24 05:47:25	2016-03-24 05:47:25	2016-03-24 05:47:25
177	30	completed	2016-03-27 15:40:37.309936	2016-03-27 15:40:37.309936	2016-03-27 15:40:37.309936
178	35	submitted	2015-11-24 07:12:31	2015-11-24 07:12:31	2015-11-24 07:12:31
179	35	received_feedback	2016-01-07 20:12:33	2016-01-07 20:12:33	2016-01-07 20:12:33
180	14	submitted	2016-03-26 17:36:17	2016-03-26 17:36:17	2016-03-26 17:36:17
181	14	received_feedback	2016-03-26 19:03:02	2016-03-26 19:03:02	2016-03-26 19:03:02
182	41	submitted	2016-01-18 17:04:25	2016-01-18 17:04:25	2016-01-18 17:04:25
183	41	received_feedback	2016-01-22 13:55:00	2016-01-22 13:55:00	2016-01-22 13:55:00
184	6	submitted	2016-03-06 03:25:11	2016-03-06 03:25:11	2016-03-06 03:25:11
185	6	received_feedback	2016-03-07 04:30:55	2016-03-07 04:30:55	2016-03-07 04:30:55
186	34	submitted	2015-10-08 11:49:11	2015-10-08 11:49:11	2015-10-08 11:49:11
187	34	received_feedback	2015-11-24 10:46:53	2015-11-24 10:46:53	2015-11-24 10:46:53
188	16	submitted	2015-12-10 12:29:32	2015-12-10 12:29:32	2015-12-10 12:29:32
189	16	received_feedback	2016-01-08 00:42:08	2016-01-08 00:42:08	2016-01-08 00:42:08
190	18	submitted	2015-07-18 09:37:27	2015-07-18 09:37:27	2015-07-18 09:37:27
191	24	submitted	2015-11-14 00:08:32	2015-11-14 00:08:32	2015-11-14 00:08:32
192	42	submitted	2015-08-25 18:34:20	2015-08-25 18:34:20	2015-08-25 18:34:20
193	27	submitted	2015-11-26 19:31:45	2015-11-26 19:31:45	2015-11-26 19:31:45
194	45	submitted	2016-02-24 04:08:26	2016-02-24 04:08:26	2016-02-24 04:08:26
195	49	commented	2016-03-06 20:57:32	2016-03-06 20:57:32	2016-03-06 20:57:32
196	26	commented	2016-03-20 13:29:42	2016-03-20 13:29:42	2016-03-20 13:29:42
197	7	commented	2016-03-27 15:40:43.103355	2016-03-27 15:40:43.103355	2016-03-27 15:40:43.103355
198	23	commented	2016-01-22 12:54:37	2016-01-22 12:54:37	2016-01-22 12:54:37
199	17	commented	2015-12-31 03:44:03	2015-12-31 03:44:03	2015-12-31 03:44:03
\.


--
-- Name: lifecycle_events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('lifecycle_events_id_seq', 199, true);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: log_entries; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY log_entries (id, user_id, body, created_at, updated_at, key) FROM stdin;
\.


--
-- Name: log_entries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('log_entries_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, read, created_at, updated_at, action, actor_id, solution_id, iteration_id) FROM stdin;
1	3	f	2015-12-26 19:01:27	2015-12-26 19:01:27	code	9	\N	7
2	11	f	2016-01-06 09:44:14	2016-01-06 09:44:14	code	9	\N	8
3	18	f	2016-01-31 00:23:44	2016-01-31 00:23:44	code	9	\N	10
4	35	f	2016-01-04 02:18:07	2016-01-04 02:18:07	code	9	\N	11
5	3	f	2016-01-04 02:18:07	2016-01-04 02:18:07	code	9	\N	11
6	44	f	2016-01-30 01:44:53	2016-01-30 01:44:53	code	9	\N	13
7	3	f	2016-02-07 01:20:16	2016-02-07 01:20:16	code	9	\N	15
8	3	f	2016-01-15 19:34:36	2016-01-15 19:34:36	code	9	\N	20
9	3	f	2016-03-22 07:05:02	2016-03-22 07:05:02	code	9	\N	22
10	3	f	2016-01-09 02:49:01	2016-01-09 02:49:01	code	9	\N	25
11	3	f	2016-03-07 10:17:00	2016-03-07 10:17:00	code	9	\N	30
12	20	f	2016-03-07 14:03:07	2016-03-07 14:03:07	code	9	\N	32
13	3	f	2016-01-24 01:56:52	2016-01-24 01:56:52	code	9	\N	34
14	3	f	2016-01-01 01:37:08	2016-01-01 01:37:08	code	9	\N	36
15	3	f	2016-03-11 11:43:43	2016-03-11 11:43:43	code	9	\N	41
16	41	f	2016-03-07 18:09:57	2016-03-07 18:09:57	code	9	\N	45
17	41	f	2016-01-22 22:17:07	2016-01-22 22:17:07	code	31	\N	80
18	2	f	2016-01-22 22:17:07	2016-01-22 22:17:07	code	31	\N	80
19	3	f	2016-02-14 12:03:02	2016-02-14 12:03:02	code	9	\N	48
20	2	f	2015-12-23 01:48:48	2015-12-23 01:48:48	code	11	\N	51
21	3	f	2015-12-23 01:48:48	2015-12-23 01:48:48	code	11	\N	51
22	40	f	2016-02-28 00:10:48	2016-02-28 00:10:48	code	11	\N	52
23	3	f	2016-02-28 00:10:48	2016-02-28 00:10:48	code	11	\N	52
24	40	f	2016-03-12 02:34:43	2016-03-12 02:34:43	code	11	\N	53
25	2	f	2015-12-20 13:45:04	2015-12-20 13:45:04	code	11	\N	55
26	4	f	2016-03-04 13:43:57	2016-03-04 13:43:57	code	11	\N	57
27	3	f	2016-01-14 03:03:18	2016-01-14 03:03:18	code	12	\N	58
28	3	f	2016-02-21 10:01:40	2016-02-21 10:01:40	code	12	\N	61
29	16	f	2015-12-24 01:10:25	2015-12-24 01:10:25	code	15	\N	62
30	2	f	2015-12-24 01:10:25	2015-12-24 01:10:25	code	15	\N	62
31	4	f	2015-12-24 22:05:07	2015-12-24 22:05:07	code	15	\N	63
32	16	f	2015-12-29 10:39:34	2015-12-29 10:39:34	code	15	\N	64
33	41	f	2016-02-18 05:07:30	2016-02-18 05:07:30	code	31	\N	82
34	2	f	2015-12-12 15:18:55	2015-12-12 15:18:55	code	22	\N	67
35	3	f	2016-03-25 08:17:13	2016-03-25 08:17:13	code	28	\N	68
36	4	f	2016-03-18 14:26:26	2016-03-18 14:26:26	code	29	\N	69
37	3	f	2016-03-22 02:55:00	2016-03-22 02:55:00	code	29	\N	72
38	3	f	2016-03-24 20:59:58	2016-03-24 20:59:58	code	29	\N	73
39	4	f	2016-03-24 20:59:58	2016-03-24 20:59:58	code	29	\N	73
40	2	f	2016-03-25 14:27:02	2016-03-25 14:27:02	code	29	\N	74
41	3	f	2016-03-25 14:27:02	2016-03-25 14:27:02	code	29	\N	74
42	2	f	2016-03-26 13:58:04	2016-03-26 13:58:04	code	29	\N	75
43	3	f	2016-03-26 13:58:04	2016-03-26 13:58:04	code	29	\N	75
44	4	t	2016-03-26 13:58:04	2016-03-26 13:58:04	code	29	\N	75
45	4	f	2015-12-26 12:36:18	2015-12-26 12:36:18	code	31	\N	78
46	41	f	2016-01-02 18:56:04	2016-01-02 18:56:04	code	31	\N	79
47	9	f	2016-01-02 18:56:04	2016-01-02 18:56:04	code	31	\N	79
48	2	f	2016-01-02 18:56:04	2016-01-02 18:56:04	code	31	\N	79
49	2	f	2015-12-19 05:31:42	2015-12-19 05:31:42	code	31	\N	85
50	2	f	2016-03-21 02:24:36	2016-03-21 02:24:36	code	31	\N	88
51	4	f	2016-02-10 10:45:51	2016-02-10 10:45:51	code	33	\N	93
52	4	f	2015-08-05 23:31:05	2015-08-05 23:31:05	code	33	\N	94
53	20	f	2016-03-10 08:36:04	2016-03-10 08:36:04	code	33	\N	95
54	2	f	2016-03-22 15:38:32	2016-03-22 15:38:32	code	38	\N	97
55	4	f	2016-03-22 15:38:32	2016-03-22 15:38:32	code	38	\N	97
56	2	f	2016-03-22 05:13:00	2016-03-22 05:13:00	code	38	\N	98
57	3	f	2016-03-22 05:13:00	2016-03-22 05:13:00	code	38	\N	98
58	4	f	2016-03-22 05:13:00	2016-03-22 05:13:00	code	38	\N	98
59	4	f	2016-01-16 03:53:05	2016-01-16 03:53:05	code	40	\N	101
60	4	f	2016-02-24 08:25:21	2016-02-24 08:25:21	code	40	\N	102
61	3	f	2016-01-04 10:56:43	2016-01-04 10:56:43	code	46	\N	118
62	4	f	2016-03-18 21:33:52	2016-03-18 21:33:52	code	40	\N	108
63	4	f	2016-03-02 05:32:21	2016-03-02 05:32:21	code	40	\N	109
64	9	f	2016-01-19 13:00:40	2016-01-19 13:00:40	code	44	\N	112
65	3	f	2015-11-19 07:55:24	2015-11-19 07:55:24	code	44	\N	115
66	18	f	2016-01-14 08:38:31	2016-01-14 08:38:31	code	46	\N	120
67	3	f	2015-11-10 08:44:46	2015-11-10 08:44:46	code	46	\N	122
68	18	f	2015-12-04 07:17:10	2015-12-04 07:17:10	code	48	\N	123
69	3	f	2016-03-10 18:35:55	2016-03-10 18:35:55	code	49	\N	128
70	3	f	2015-12-01 03:28:00	2015-12-01 03:28:00	code	26	\N	130
71	2	f	2015-12-12 01:13:42	2015-12-12 01:13:42	code	26	\N	131
72	4	f	2015-12-22 08:52:20	2015-12-22 08:52:20	code	17	\N	141
73	2	f	2016-01-24 02:11:46	2016-01-24 02:11:46	code	20	\N	143
74	11	f	2016-03-14 06:06:23	2016-03-14 06:06:23	code	20	\N	146
75	3	f	2016-03-08 09:43:03	2016-03-08 09:43:03	code	20	\N	150
76	2	f	2015-12-16 15:51:15	2015-12-16 15:51:15	code	20	\N	151
77	3	f	2015-12-14 06:09:36	2015-12-14 06:09:36	code	20	\N	152
78	3	f	2016-01-25 19:50:44	2016-01-25 19:50:44	code	20	\N	153
79	3	f	2015-12-31 13:42:54	2015-12-31 13:42:54	code	20	\N	158
80	2	f	2016-03-02 06:40:26	2016-03-02 06:40:26	code	20	\N	161
81	3	f	2015-12-19 11:03:41	2015-12-19 11:03:41	code	20	\N	183
82	3	f	2016-01-11 13:52:26	2016-01-11 13:52:26	code	20	\N	166
83	41	f	2016-01-12 18:51:52	2016-01-12 18:51:52	code	20	\N	169
84	9	f	2016-01-12 18:51:52	2016-01-12 18:51:52	code	20	\N	169
85	2	f	2016-01-06 21:47:05	2016-01-06 21:47:05	code	20	\N	170
86	3	f	2016-01-06 21:47:05	2016-01-06 21:47:05	code	20	\N	170
87	2	f	2016-02-06 08:02:49	2016-02-06 08:02:49	code	20	\N	173
88	11	t	2016-03-25 22:56:47	2016-03-25 22:56:47	code	14	\N	196
89	20	t	2016-03-25 22:56:47	2016-03-25 22:56:47	code	14	\N	196
90	9	f	2016-03-25 22:56:47	2016-03-25 22:56:47	code	14	\N	196
91	2	f	2016-03-25 22:56:47	2016-03-25 22:56:47	code	14	\N	196
92	3	f	2016-03-25 22:56:47	2016-03-25 22:56:47	code	14	\N	196
93	20	f	2016-03-25 10:28:04	2016-03-25 10:28:04	code	14	\N	197
94	46	f	2016-03-25 10:28:04	2016-03-25 10:28:04	code	14	\N	197
95	18	f	2016-03-25 10:28:04	2016-03-25 10:28:04	code	14	\N	197
96	2	f	2016-03-25 10:28:04	2016-03-25 10:28:04	code	14	\N	197
97	3	f	2016-03-25 10:28:04	2016-03-25 10:28:04	code	14	\N	197
98	3	f	2016-01-15 00:15:46	2016-01-15 00:15:46	code	20	\N	175
99	3	f	2016-02-03 17:40:15	2016-02-03 17:40:15	code	20	\N	177
100	2	f	2016-02-08 23:01:46	2016-02-08 23:01:46	code	20	\N	178
101	9	f	2016-03-09 21:05:34	2016-03-09 21:05:34	code	20	\N	181
102	2	f	2015-12-28 06:27:53	2015-12-28 06:27:53	code	20	\N	182
103	2	f	2015-11-02 15:39:22	2015-11-02 15:39:22	code	21	\N	184
104	2	f	2016-03-22 12:34:39	2016-03-22 12:34:39	code	30	\N	187
105	3	f	2016-03-22 12:34:39	2016-03-22 12:34:39	code	30	\N	187
106	2	f	2016-03-24 17:20:12	2016-03-24 17:20:12	code	30	\N	189
107	3	f	2016-03-24 17:20:12	2016-03-24 17:20:12	code	30	\N	189
108	4	f	2016-03-24 17:20:12	2016-03-24 17:20:12	code	30	\N	189
109	4	f	2016-03-19 00:05:37	2016-03-19 00:05:37	code	30	\N	190
110	2	f	2016-03-25 08:44:15	2016-03-25 08:44:15	code	30	\N	191
111	3	f	2016-03-25 08:44:15	2016-03-25 08:44:15	code	30	\N	191
112	3	f	2016-03-23 07:05:00	2016-03-23 07:05:00	code	30	\N	192
113	4	f	2016-03-23 07:05:00	2016-03-23 07:05:00	code	30	\N	192
114	11	t	2016-03-26 17:36:17	2016-03-26 17:36:17	code	14	\N	195
115	20	t	2016-03-26 17:36:17	2016-03-26 17:36:17	code	14	\N	195
116	2	f	2016-03-26 17:36:17	2016-03-26 17:36:17	code	14	\N	195
117	3	t	2016-03-26 17:36:17	2016-03-26 17:36:17	code	14	\N	195
118	41	f	2016-03-25 07:42:15	2016-03-25 07:42:15	code	14	\N	198
119	9	f	2016-03-25 07:42:15	2016-03-25 07:42:15	code	14	\N	198
120	18	f	2016-03-25 07:42:15	2016-03-25 07:42:15	code	14	\N	198
121	41	t	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
122	9	t	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
123	18	t	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
124	20	f	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
125	2	t	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
126	3	t	2016-03-26 06:39:44	2016-03-26 06:39:44	code	14	\N	199
127	41	f	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
128	9	t	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
129	18	t	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
130	20	f	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
131	2	t	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
132	3	f	2016-03-26 11:26:01	2016-03-26 11:26:01	code	14	\N	200
133	41	t	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
134	9	f	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
135	18	t	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
136	20	f	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
137	2	t	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
138	3	f	2016-03-26 13:03:51	2016-03-26 13:03:51	code	14	\N	201
139	41	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
140	9	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
141	18	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
142	20	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
143	2	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
144	3	t	2016-03-26 19:08:25	2016-03-26 19:08:25	code	14	\N	202
145	41	t	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
146	9	f	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
147	18	f	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
148	20	f	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
149	2	t	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
150	3	t	2016-03-26 22:04:11	2016-03-26 22:04:11	code	14	\N	203
151	41	t	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
152	9	t	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
153	18	t	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
154	20	f	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
155	2	t	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
156	3	t	2016-03-26 23:54:51	2016-03-26 23:54:51	code	14	\N	204
157	41	t	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
158	9	t	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
159	18	f	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
160	20	f	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
161	2	t	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
162	3	t	2016-03-27 00:54:50	2016-03-27 00:54:50	code	14	\N	205
163	35	f	2016-03-25 12:14:41	2016-03-25 12:14:41	code	14	\N	206
164	2	f	2016-03-25 12:14:41	2016-03-25 12:14:41	code	14	\N	206
165	3	f	2016-03-25 12:14:41	2016-03-25 12:14:41	code	14	\N	206
166	20	t	2016-03-26 14:25:55	2016-03-26 14:25:55	code	14	\N	207
167	2	t	2016-03-26 14:25:55	2016-03-26 14:25:55	code	14	\N	207
168	3	t	2016-03-26 14:25:55	2016-03-26 14:25:55	code	14	\N	207
169	20	t	2016-03-26 20:52:57	2016-03-26 20:52:57	code	14	\N	208
170	2	f	2016-03-26 20:52:57	2016-03-26 20:52:57	code	14	\N	208
171	3	t	2016-03-26 20:52:57	2016-03-26 20:52:57	code	14	\N	208
172	2	t	2016-03-25 20:30:42	2016-03-25 20:30:42	code	14	\N	231
173	3	f	2016-03-25 20:30:42	2016-03-25 20:30:42	code	14	\N	231
174	16	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
175	9	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
176	20	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
177	6	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
178	2	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
179	3	t	2016-03-25 21:14:52	2016-03-25 21:14:52	code	14	\N	210
180	3	f	2016-03-25 15:23:48	2016-03-25 15:23:48	code	14	\N	211
181	2	t	2016-03-26 23:20:43	2016-03-26 23:20:43	code	14	\N	212
182	3	t	2016-03-26 23:20:43	2016-03-26 23:20:43	code	14	\N	212
183	2	t	2016-03-25 19:35:04	2016-03-25 19:35:04	code	14	\N	213
184	3	t	2016-03-25 19:35:04	2016-03-25 19:35:04	code	14	\N	213
185	2	t	2016-03-26 07:43:08	2016-03-26 07:43:08	code	14	\N	214
186	3	t	2016-03-26 07:43:08	2016-03-26 07:43:08	code	14	\N	214
187	41	t	2016-03-25 16:10:51	2016-03-25 16:10:51	code	14	\N	215
188	49	t	2016-03-25 16:10:51	2016-03-25 16:10:51	code	14	\N	215
189	2	f	2016-03-25 16:10:51	2016-03-25 16:10:51	code	14	\N	215
190	3	t	2016-03-25 16:10:51	2016-03-25 16:10:51	code	14	\N	215
191	2	f	2016-03-27 08:35:11	2016-03-27 08:35:11	code	14	\N	216
192	3	t	2016-03-27 08:35:11	2016-03-27 08:35:11	code	14	\N	216
193	33	t	2016-03-26 08:35:28	2016-03-26 08:35:28	code	14	\N	217
194	20	f	2016-03-26 08:35:28	2016-03-26 08:35:28	code	14	\N	217
195	9	t	2016-03-26 08:35:28	2016-03-26 08:35:28	code	14	\N	217
196	2	f	2016-03-26 08:35:28	2016-03-26 08:35:28	code	14	\N	217
197	3	f	2016-03-26 08:35:28	2016-03-26 08:35:28	code	14	\N	217
198	33	t	2016-03-27 01:51:22	2016-03-27 01:51:22	code	14	\N	218
199	20	t	2016-03-27 01:51:22	2016-03-27 01:51:22	code	14	\N	218
200	9	f	2016-03-27 01:51:22	2016-03-27 01:51:22	code	14	\N	218
201	2	t	2016-03-27 01:51:22	2016-03-27 01:51:22	code	14	\N	218
202	3	t	2016-03-27 01:51:22	2016-03-27 01:51:22	code	14	\N	218
203	33	f	2016-03-27 03:49:01	2016-03-27 03:49:01	code	14	\N	219
204	20	t	2016-03-27 03:49:01	2016-03-27 03:49:01	code	14	\N	219
205	9	f	2016-03-27 03:49:01	2016-03-27 03:49:01	code	14	\N	219
206	2	f	2016-03-27 03:49:01	2016-03-27 03:49:01	code	14	\N	219
207	3	t	2016-03-27 03:49:01	2016-03-27 03:49:01	code	14	\N	219
208	2	f	2016-03-25 16:21:55	2016-03-25 16:21:55	code	14	\N	220
209	3	t	2016-03-25 16:21:55	2016-03-25 16:21:55	code	14	\N	220
210	2	f	2016-03-25 12:54:30	2016-03-25 12:54:30	code	14	\N	232
211	2	t	2016-03-26 03:29:18	2016-03-26 03:29:18	code	14	\N	221
212	3	t	2016-03-26 03:29:18	2016-03-26 03:29:18	code	14	\N	221
213	2	f	2016-03-26 03:10:48	2016-03-26 03:10:48	code	14	\N	222
214	3	t	2016-03-26 03:10:48	2016-03-26 03:10:48	code	14	\N	222
215	2	f	2016-03-25 10:01:48	2016-03-25 10:01:48	code	14	\N	223
216	2	f	2016-03-26 17:30:43	2016-03-26 17:30:43	code	14	\N	224
217	3	f	2016-03-26 17:30:43	2016-03-26 17:30:43	code	14	\N	224
218	20	t	2016-03-26 04:09:53	2016-03-26 04:09:53	code	14	\N	225
219	41	t	2016-03-26 04:09:53	2016-03-26 04:09:53	code	14	\N	225
220	2	f	2016-03-26 04:09:53	2016-03-26 04:09:53	code	14	\N	225
221	3	f	2016-03-26 04:09:53	2016-03-26 04:09:53	code	14	\N	225
222	2	t	2016-03-26 06:01:55	2016-03-26 06:01:55	code	14	\N	226
223	3	t	2016-03-26 06:01:55	2016-03-26 06:01:55	code	14	\N	226
224	2	t	2016-03-26 08:21:21	2016-03-26 08:21:21	code	14	\N	227
225	3	t	2016-03-26 08:21:21	2016-03-26 08:21:21	code	14	\N	227
226	2	t	2016-03-26 11:52:34	2016-03-26 11:52:34	code	14	\N	228
227	3	t	2016-03-26 11:52:34	2016-03-26 11:52:34	code	14	\N	228
228	20	t	2016-03-25 23:54:37	2016-03-25 23:54:37	code	14	\N	229
229	11	t	2016-03-25 23:54:37	2016-03-25 23:54:37	code	14	\N	229
230	2	f	2016-03-25 23:54:37	2016-03-25 23:54:37	code	14	\N	229
231	3	t	2016-03-25 23:54:37	2016-03-25 23:54:37	code	14	\N	229
232	30	f	2016-03-25 10:45:09	2016-03-25 10:45:09	code	14	\N	233
233	44	f	2016-03-25 10:45:09	2016-03-25 10:45:09	code	14	\N	233
234	2	f	2016-03-26 14:15:15	2016-03-26 14:15:15	code	14	\N	234
235	3	f	2016-03-26 14:15:15	2016-03-26 14:15:15	code	14	\N	234
236	9	t	2016-03-26 16:06:27	2016-03-26 16:06:27	code	14	\N	235
237	2	f	2016-03-26 16:06:27	2016-03-26 16:06:27	code	14	\N	235
238	3	t	2016-03-26 16:06:27	2016-03-26 16:06:27	code	14	\N	235
239	2	f	2016-03-26 10:17:34	2016-03-26 10:17:34	code	14	\N	236
240	3	t	2016-03-26 10:17:34	2016-03-26 10:17:34	code	14	\N	236
241	2	t	2016-03-26 01:36:43	2016-03-26 01:36:43	code	14	\N	237
242	3	f	2016-03-26 01:36:43	2016-03-26 01:36:43	code	14	\N	237
243	20	f	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
244	12	t	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
245	31	f	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
246	40	f	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
247	2	f	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
248	3	f	2016-03-26 03:37:41	2016-03-26 03:37:41	code	14	\N	238
249	9	f	2016-03-25 13:48:51	2016-03-25 13:48:51	code	14	\N	240
250	2	f	2016-03-25 13:48:51	2016-03-25 13:48:51	code	14	\N	240
251	9	t	2016-03-26 06:34:24	2016-03-26 06:34:24	code	14	\N	241
252	2	t	2016-03-26 06:34:24	2016-03-26 06:34:24	code	14	\N	241
253	3	f	2016-03-26 06:34:24	2016-03-26 06:34:24	code	14	\N	241
254	7	f	2016-03-26 13:29:28	2016-03-26 13:29:28	code	14	\N	242
255	2	f	2016-03-26 13:29:28	2016-03-26 13:29:28	code	14	\N	242
256	3	f	2016-03-26 13:29:28	2016-03-26 13:29:28	code	14	\N	242
257	7	f	2016-03-27 01:56:22	2016-03-27 01:56:22	code	14	\N	243
258	2	f	2016-03-27 01:56:22	2016-03-27 01:56:22	code	14	\N	243
259	3	f	2016-03-27 01:56:22	2016-03-27 01:56:22	code	14	\N	243
260	7	t	2016-03-27 11:16:46	2016-03-27 11:16:46	code	14	\N	244
261	2	t	2016-03-27 11:16:46	2016-03-27 11:16:46	code	14	\N	244
262	3	t	2016-03-27 11:16:46	2016-03-27 11:16:46	code	14	\N	244
263	2	t	2016-03-25 17:46:17	2016-03-25 17:46:17	code	14	\N	245
264	3	t	2016-03-25 17:46:17	2016-03-25 17:46:17	code	14	\N	245
265	11	t	2016-03-25 18:29:28	2016-03-25 18:29:28	code	14	\N	246
266	20	f	2016-03-25 18:29:28	2016-03-25 18:29:28	code	14	\N	246
267	2	t	2016-03-25 18:29:28	2016-03-25 18:29:28	code	14	\N	246
268	3	t	2016-03-25 18:29:28	2016-03-25 18:29:28	code	14	\N	246
269	20	f	2016-01-18 17:04:25	2016-01-18 17:04:25	code	41	\N	247
270	4	f	2016-01-18 17:04:25	2016-01-18 17:04:25	code	41	\N	247
271	4	f	2015-10-01 19:45:57	2015-10-01 19:45:57	code	41	\N	254
272	4	f	2016-01-16 20:30:00	2016-01-16 20:30:00	code	41	\N	260
273	4	f	2016-02-20 23:07:30	2016-02-20 23:07:30	code	41	\N	261
274	9	f	2016-03-06 09:45:52	2016-03-06 09:45:52	code	41	\N	262
275	9	f	2016-03-06 03:25:11	2016-03-06 03:25:11	code	6	\N	264
276	3	f	2015-12-03 11:18:19	2015-12-03 11:18:19	code	6	\N	266
277	3	f	2015-12-10 12:29:32	2015-12-10 12:29:32	code	16	\N	271
278	20	f	2015-12-30 06:48:27	2015-12-30 06:48:27	code	16	\N	273
279	3	f	2015-12-30 06:48:27	2015-12-30 06:48:27	code	16	\N	273
280	4	f	2015-09-26 05:35:58	2015-09-26 05:35:58	code	18	\N	278
281	2	f	2015-09-10 11:27:18	2015-09-10 11:27:18	code	18	\N	279
282	4	f	2015-09-10 11:27:18	2015-09-10 11:27:18	code	18	\N	279
283	3	f	2015-11-21 19:09:45	2015-11-21 19:09:45	code	18	\N	281
284	4	f	2015-11-21 19:09:45	2015-11-21 19:09:45	code	18	\N	281
285	3	f	2015-12-06 17:28:43	2015-12-06 17:28:43	code	24	\N	284
286	2	f	2015-11-13 14:41:34	2015-11-13 14:41:34	code	24	\N	285
287	3	f	2015-08-25 18:34:20	2015-08-25 18:34:20	code	42	\N	287
288	4	f	2015-08-25 18:34:20	2015-08-25 18:34:20	code	42	\N	287
289	3	f	2016-01-11 15:25:26	2016-01-11 15:25:26	code	42	\N	289
290	3	f	2016-02-24 04:08:26	2016-02-24 04:08:26	code	45	\N	292
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 290, true);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, done_at, is_liked, nit_count, version, created_at, updated_at, user_exercise_id, solution) FROM stdin;
1	9	658784e1f87dab8065805ccc	done	go	leap	\N	\N	0	1	2016-02-12 06:16:33	2016-02-12 06:16:33	1	{"leap.go":"package leap\\n\\nfunc IsLeapYear(year int) bool {\\n    // Every year evenly divisible by 4\\n    // except every year thats evenly divisible by 100\\n    // unless its also divisible by 400\\n\\n    if year%4 == 0 {\\n        if year%100 == 0 \\u0026\\u0026 year%400 == 0 {\\n            return true\\n        }\\n\\n        if year%100 == 0 {\\n            return false\\n        }\\n        return true\\n    }\\n    return false\\n}"}
2	9	01dca4eb2958888f4d415904	superseded	python	simple-cipher	\N	\N	0	3	2015-12-30 01:43:40	2015-12-30 01:43:40	2	{"cipher.py":"import itertools\\nimport random\\nimport string\\n\\n\\nclass Cipher:\\n    def __init__(self, key=None, alphabet=None):\\n        self.alphabet = alphabet or string.lowercase\\n        self.to_num = {c : n for c, n in zip(self.alphabet,\\n                                             itertools.count())}\\n\\n\\n        if key is None:\\n            self.key = \\"\\".join(random.choice(self.alphabet)\\n                               for _ in range(100))\\n        else:\\n            if any((k not in self.alphabet for k in key)):\\n                raise ValueError(\\"The key must be from the alphabet\\")\\n\\n            self.key = key\\n\\n    def substitute(self, plain, key, direction=1):\\n        \\"\\"\\"\\n        substitute(str, str, direction) -\\u003e str\\n\\n        Calculates m^(-1) (m(plain) + m(key) * direction) for the\\n        mapping m:char-\\u003eint.\\n        \\"\\"\\"\\n\\n        cipher = []\\n        for p, k in zip(plain, itertools.cycle(key)):\\n            p, k = self.to_num[p], self.to_num[k]\\n            c = (p + k * direction) % len(self.alphabet)\\n            cipher.append(self.alphabet[c])\\n\\n        return \\"\\".join(cipher)\\n\\n    def clean(self, plain):\\n        \\"\\"\\"\\n        clean(str) -\\u003e str\\n\\n        Return a cleaned string with all chars not in self.to_num removed.\\n        \\"\\"\\"\\n\\n        return \\"\\".join((p for p in plain.lower() if p in self.to_num))\\n\\n    def encode(self, plain):\\n        return self.substitute(self.clean(plain), self.key, 1)\\n\\n    def decode(self, cipher):\\n        if any((c not in self.to_num for c in cipher)):\\n            raise ValueError(\\"malformed cipher\\")\\n\\n        return self.substitute(cipher, self.key, -1)\\n\\n\\nclass Caesar(Cipher):\\n    def __init__(self):\\n        Cipher.__init__(self, key=\\"d\\")"}
3	9	0db9ec92e1dd4d944f49e892	done	python	simple-cipher	\N	\N	0	5	2016-01-03 17:49:31	2016-01-03 17:49:31	2	{"cipher.py":"import itertools\\nimport random\\nimport string\\nimport operator\\n\\nclass ArgumentError(ValueError):\\n    pass\\n\\ndef gen_string_from_alphabet(alphabet, length, random=random):\\n    return \\"\\".join(random.choice(alphabet) for _ in range(length))\\n\\nclass Cipher:\\n    def __init__(self, key=None, alphabet=None):\\n        self.alphabet = alphabet or string.lowercase\\n        self.to_num = {c : n for c, n in zip(self.alphabet, itertools.count())}\\n\\n        if key is None:\\n            self.key = gen_string_from_alphabet(self.alphabet, 100,\\n                                                random.SystemRandom())\\n        elif not all(k in self.to_num for k in key):\\n            raise ArgumentError(\\"The key must be from the alphabet\\")\\n        else:\\n            self.key = key\\n\\n    def substitute(self, text, key, combiner):\\n        \\"\\"\\"\\n        substitute(str, str, combiner) -\\u003e str\\n        with:\\n            combiner(int, int) -\\u003e int\\n\\n        Calculates m^(-1) (m(text) + m(key) * direction) for the\\n        mapping m:char-\\u003eint.\\n        \\"\\"\\"\\n\\n        text_code = [self.to_num[p] for p in text]\\n        key_code = [self.to_num[k] for k in key]\\n\\n        cipher_code = [combiner(p, k) % len(self.alphabet)\\n                       for p, k in zip(text_code, itertools.cycle(key_code))]\\n\\n        return \\"\\".join(self.alphabet[c] for c in cipher_code)\\n\\n    def clean(self, plain):\\n        \\"\\"\\"\\n        clean(str) -\\u003e str\\n\\n        Return a cleaned string with all chars not in self.to_num removed.\\n        \\"\\"\\"\\n\\n        return \\"\\".join(p for p in plain.lower() if p in self.to_num)\\n\\n    def encode(self, plain):\\n        return self.substitute(self.clean(plain), self.key, operator.add)\\n\\n    def decode(self, cipher):\\n        if any(c not in self.to_num for c in cipher):\\n            raise ValueError(\\"malformed cipher\\")\\n\\n        return self.substitute(cipher, self.key, operator.sub)\\n\\n\\nclass Caesar(Cipher):\\n    def __init__(self):\\n        Cipher.__init__(self, key=\\"d\\")"}
4	9	354af3de441b95532e01e34f	superseded	python	simple-cipher	\N	\N	0	2	2016-02-08 13:22:39	2016-02-08 13:22:39	2	{"cipher.py":"import itertools\\nimport random\\nimport string\\n\\n\\nclass Cipher:\\n    def __init__(self, key=None, alphabet=None):\\n        self.alphabet = alphabet or string.lowercase\\n        self.to_num = {c : n for c, n in zip(self.alphabet,\\n                                             itertools.count())}\\n\\n\\n        if key is None:\\n            self.key = \\"\\".join(random.choice(self.alphabet)\\n                               for _ in range(100))\\n        else:\\n            if any((k not in self.alphabet for k in key)):\\n                raise ValueError(\\"The key must be from the alphabet\\")\\n\\n            self.key = key\\n\\n    def substitute(self, plain, key, direction=1):\\n        \\"\\"\\"\\n        substitute(str, str, direction) -\\u003e str\\n\\n        Calculates m^(-1) (m(plain) + m(key) * direction) for the\\n        mapping m:char-\\u003eint.\\n        \\"\\"\\"\\n\\n        cipher = []\\n        for p, k in zip(plain, itertools.cycle(key)):\\n            p, k = self.to_num[p], self.to_num[k]\\n            c = (p + k * direction) % len(self.alphabet)\\n            cipher.append(self.alphabet[c])\\n\\n        return \\"\\".join(cipher)\\n\\n    def clean(self, plain):\\n        \\"\\"\\"\\n        clean(str) -\\u003e str\\n\\n        Return a cleaned string with all chars not in self.to_num removed.\\n        \\"\\"\\"\\n\\n        return \\"\\".join((p for p in plain.lower() if p in self.to_num))\\n\\n    def encode(self, plain):\\n        return self.substitute(self.clean(plain), self.key, 1)\\n\\n    def decode(self, cipher):\\n        if any((True for c in cipher if c not in self.to_num)):\\n            raise ValueError(\\"malformed cipher\\")\\n\\n        return self.substitute(self.clean(cipher), self.key, -1)\\n\\n\\nclass Caesar(Cipher):\\n    def __init__(self):\\n        Cipher.__init__(self, key=\\"d\\")"}
5	9	03c48495c599ce8f00a0b078	superseded	python	simple-cipher	\N	\N	0	1	2016-02-23 23:45:26	2016-02-23 23:45:26	2	{"cipher.py":"import itertools\\nimport random\\n\\n\\nclass Cipher:\\n    def __init__(self, key=None):\\n        if key is None:\\n            self.key = \\"\\".join(random.choice(\\"abcdefghijklmnopqrstuvwxyz\\")\\n                               for _ in range(100))\\n        else:\\n            if Cipher.clean(key) != key:\\n                raise ValueError(\\"The key must be all alpha and lower case.\\")\\n            self.key = key\\n\\n\\n    @staticmethod\\n    def add_chars(a, b):\\n        \\"\\"\\"\\n        add_chars(str, str) -\\u003e str\\n\\n        Each string is of length 1. Converts both lower case characters a and b\\n        to ints using the order in the alphabet starting with 'a' = 0. It then\\n        adds both values, wrapping when needed, and converts it back to str.\\n        \\"\\"\\"\\n        return chr((ord(a) + ord(b) - ord('a') - ord('a')) % 26 + ord('a'))\\n\\n    @staticmethod\\n    def sub_chars(a, b):\\n        \\"\\"\\"\\n        sub_chars(str, str) -\\u003e str\\n\\n        Each string is of length 1. Converts both lower case characters a and b\\n        to ints using the order in the alphabet starting with 'a' = 0. It then\\n        subtracts b from a, wrapping when needed, and converts it back to str.\\n        \\"\\"\\"\\n        return chr((ord(a) - ord(b) + ord('a') - ord('a') + 26) % 26 + ord('a'))\\n\\n    @staticmethod\\n    def substitude(plain, key, combiner):\\n        \\"\\"\\"\\n        substitude(str, str, combiner) -\\u003e str\\n        with combiner(str, str) -\\u003e str\\n\\n        Combines plain[0] with key[0], plain[1] with key[1],... using the given\\n        combiner. Key is repeated when needed.\\n        \\"\\"\\"\\n        return \\"\\".join((combiner(p, k)\\n                        for p, k in zip(plain, itertools.cycle(key))))\\n\\n    @staticmethod\\n    def clean(plain):\\n        \\"\\"\\"\\n        clean(str) -\\u003e str\\n\\n        Return a cleaned string with just lower case alpha character.\\n        \\"\\"\\"\\n        return map(str.lower, filter(str.isalpha, plain))\\n\\n    def encode(self, plain):\\n        return Cipher.substitude(Cipher.clean(plain), self.key, Cipher.add_chars)\\n\\n    def decode(self, cipher):\\n        return Cipher.substitude(Cipher.clean(cipher), self.key, Cipher.sub_chars)\\n\\n\\nclass Caesar(Cipher):\\n    def __init__(self):\\n        Cipher.__init__(self, key=\\"d\\")"}
17	9	f8fbbf0d1ce25f5e5c12ce8c	pending	rust	anagram	\N	\N	0	2	2016-01-06 03:15:02	2016-01-06 03:15:02	10	{"src/lib.rs":"pub fn anagrams_for\\u003c'a\\u003e (word: \\u0026str, list: \\u0026[\\u0026'a str]) -\\u003e Vec\\u003c\\u0026'a str\\u003e {\\n    let mut anagrams = Vec::new();\\n    //Put chars into a vector, sort them and reassemble the word.\\n    let mut wordchars: Vec\\u003cchar\\u003e = word.chars().collect();\\n    wordchars.sort();\\n    let sortedword: String = wordchars.into_iter().collect();\\n    for possible_anagram in list.iter() {\\n        if \\u0026word == possible_anagram {\\n            //test_does_not_detect_a_word_as_its_own_anagram\\n            break\\n        }\\n        //Repeat steps done on word on every possible_anagram.\\n        let mut anachars: Vec\\u003cchar\\u003e = possible_anagram.chars().collect();\\n        anachars.sort();\\n        let sortedana: String = anachars.into_iter().collect();\\n        //use sortedana.to_lowercase() and sortedword.to_lowercase() once method stops being unstable\\n        if sortedana == sortedword {\\n            anagrams.push(*possible_anagram);\\n        }\\n    }\\n    anagrams\\n}"}
6	9	6bec70e98275b02e7a12ac2e	superseded	python	simple-cipher	\N	\N	0	4	2016-03-09 20:08:42	2016-03-09 20:08:42	2	{"cipher.py":"import itertools\\nimport random\\nimport string\\n\\n\\nclass Cipher:\\n    def __init__(self, key=None, alphabet=None):\\n        self.alphabet = alphabet or string.lowercase\\n        self.to_num = {c : n for c, n in zip(self.alphabet,\\n                                             itertools.count())}\\n\\n\\n        if key is None:\\n            self.key = \\"\\".join(random.choice(self.alphabet)\\n                               for _ in range(100))\\n        else:\\n            if any(k not in self.alphabet for k in key):\\n                raise ValueError(\\"The key must be from the alphabet\\")\\n\\n            self.key = key\\n\\n    def substitute(self, plain, key, direction=1):\\n        \\"\\"\\"\\n        substitute(str, str, direction) -\\u003e str\\n\\n        Calculates m^(-1) (m(plain) + m(key) * direction) for the\\n        mapping m:char-\\u003eint.\\n        \\"\\"\\"\\n\\n        cipher = []\\n        for p, k in zip(plain, itertools.cycle(key)):\\n            p, k = self.to_num[p], self.to_num[k]\\n            c = (p + k * direction) % len(self.alphabet)\\n            cipher.append(self.alphabet[c])\\n\\n        return \\"\\".join(cipher)\\n\\n    def clean(self, plain):\\n        \\"\\"\\"\\n        clean(str) -\\u003e str\\n\\n        Return a cleaned string with all chars not in self.to_num removed.\\n        \\"\\"\\"\\n\\n        return \\"\\".join(p for p in plain.lower() if p in self.to_num)\\n\\n    def encode(self, plain):\\n        return self.substitute(self.clean(plain), self.key, 1)\\n\\n    def decode(self, cipher):\\n        if any(c not in self.to_num for c in cipher):\\n            raise ValueError(\\"malformed cipher\\")\\n\\n        return self.substitute(cipher, self.key, -1)\\n\\n\\nclass Caesar(Cipher):\\n    def __init__(self):\\n        Cipher.__init__(self, key=\\"d\\")"}
7	9	71e641fd6d95209f5b5ddbad	needs_input	go	simple-cipher	\N	\N	0	1	2015-12-26 19:01:27	2015-12-26 19:01:27	3	{"cipher.go":"package cipher\\n\\nimport (\\n\\t\\"regexp\\"\\n\\t\\"strings\\"\\n)\\n\\ntype Cipher interface {\\n\\tEncode(string) string\\n\\tDecode(string) string\\n}\\n\\ntype VigenereCipher string\\n\\nvar simplify = regexp.MustCompile(`[^a-z]`)\\n\\nfunc NewCaesar() *VigenereCipher {\\n\\treturn NewShift(3)\\n}\\n\\nfunc NewShift(shift int) *VigenereCipher {\\n\\tif shift \\u003c 0 {\\n\\t\\tshift += 26\\n\\t}\\n\\treturn NewVigenere(string('a' + shift))\\n}\\n\\nfunc NewVigenere(key string) *VigenereCipher {\\n\\thasNonA := false\\n\\tfor _, k := range key {\\n\\t\\tif k \\u003c 'a' || k \\u003e 'z' {\\n\\t\\t\\treturn nil\\n\\t\\t}\\n\\t\\tif k != 'a' {\\n\\t\\t\\thasNonA = true\\n\\t\\t}\\n\\t}\\n\\tif !hasNonA {\\n\\t\\treturn nil\\n\\t}\\n\\tcipher := VigenereCipher(key)\\n\\treturn \\u0026cipher\\n}\\n\\nfunc (c VigenereCipher) Encode(plain string) (encoded string) {\\n\\tsimple := simplify.ReplaceAllString(strings.ToLower(plain), \\"\\")\\n\\tfor i, r := range simple {\\n\\t\\tnewval := r + (rune(c[i%len(c)]) - 'a')\\n\\t\\tif newval \\u003e 'z' {\\n\\t\\t\\tnewval -= 26\\n\\t\\t}\\n\\t\\tencoded += string(newval)\\n\\t}\\n\\treturn encoded\\n}\\n\\nfunc (c VigenereCipher) Decode(encoded string) (plain string) {\\n\\tfor i, r := range encoded {\\n\\t\\tnewval := r - (rune(c[i%len(c)]) - 'a')\\n\\t\\tif newval \\u003c 'a' {\\n\\t\\t\\tnewval += 26\\n\\t\\t}\\n\\t\\tplain += string(newval)\\n\\t}\\n\\treturn plain\\n}"}
8	9	b388f5c5439c3d26f92bdc92	done	ruby	hamming	\N	\N	0	1	2016-01-06 09:44:14	2016-01-06 09:44:14	4	{"hamming.rb":"class Hamming\\n  def self.compute(strand1, strand2)\\n    DNA.new(strand1).hamming_distance strand2\\n  end\\nend\\n\\nclass DNA\\n  attr_reader :strand1\\n  def initialize(strand1 = '')\\n    @strand1 = strand1\\n  end\\n\\n  def hamming_distance(strand2 = '')\\n    bases1 = strand1.chars\\n    bases2 = strand2.chars\\n    diff_count(bases1, bases2)\\n  end\\n\\n  def diff_count(list1, list2)\\n    count = 0\\n    a,b = order(list1, list2)\\n    a.size.times {|i| count += 1 if a[i] != b[i] }\\n    count\\n  end\\n\\n  def order(list1, list2)\\n    list1.size \\u003e list2.size ? [list2, list1] : [list1, list2]\\n  end\\nend"}
9	9	475b89396ca2e9a732822e46	pending	go	difference-of-squares	\N	\N	0	1	2016-02-18 08:13:16	2016-02-18 08:13:16	5	{"difference_of_squares.go":"package diffsquares\\n\\nimport ()\\n\\nfunc SumOfSquares(n int) int {\\n\\tif n \\u003e 0 {\\n\\t\\treturn SumOfSquares(n-1) + n*n\\n\\t}\\n\\treturn 0\\n}\\n\\nfunc SquareOfSums(n int) int {\\n\\tsum := sum(n)\\n\\treturn sum * sum\\n}\\n\\nfunc sum(n int) int {\\n\\tif n \\u003e 0 {\\n\\t\\treturn n + sum(n-1)\\n\\t}\\n\\treturn 0\\n}\\n\\nfunc Difference(n int) int {\\n\\treturn SquareOfSums(n) - SumOfSquares(n)\\n}"}
10	9	ef05259d8bf2c0e54d43a2cb	pending	python	hamming	\N	\N	0	1	2016-01-31 00:23:44	2016-01-31 00:23:44	6	{"hamming.py":"def distance(s1, s2):\\r\\n\\thamming = sum(x != y for (x, y) in zip(s1, s2))\\r\\n\\treturn hamming\\r\\n\\r\\n\\r"}
11	9	e992631150e9bcf24fba66ae	superseded	python	leap	\N	\N	0	2	2016-01-04 02:18:07	2016-01-04 02:18:07	7	{"year.py":"def is_leap_year(year):\\n    if year%100 == 0:\\n        year /= 100\\n    return year%4 == 0"}
12	9	c05ad12ac57f3150dbcca6a1	superseded	python	leap	\N	\N	0	1	2016-01-14 03:31:40	2016-01-14 03:31:40	7	{"year.py":"def is_leap_year(year):\\n    if year%100 == 0:\\n        year //= 100\\n    return year%4 == 0"}
13	9	2aede17b9cdbfc75c63b0d67	hibernating	python	leap	\N	\N	0	3	2016-01-30 01:44:53	2016-01-30 01:44:53	7	{"year.py":"def is_leap_year(year):\\n    return not year % 4 and year % 100 or not year % 400"}
14	9	14ef781c859d8219c39820b7	pending	python	rna-transcription	\N	\N	0	1	2015-12-28 16:32:04	2015-12-28 16:32:04	8	{"dna.py":"def to_rna(dna):\\n  complements = {'C': 'G', 'G': 'C', 'A': 'U', 'T': 'A'}\\n  rna = \\"\\"\\n  for b in dna:\\n    rna += (complements[b])\\n  return rna"}
15	9	4fec5deb99a94188ae5544b6	pending	erlang	word-count	\N	\N	0	1	2016-02-07 01:20:16	2016-02-07 01:20:16	9	{"word_count.erl":"-module(word_count).\\n\\n-compile(export_all).\\n\\n-define(WORD_RE, \\"[a-z0-9]+\\").\\n\\ncount(String) -\\u003e\\n    Normalized = string:to_lower(String),\\n    count_words(Normalized,\\n                re:run(Normalized, ?WORD_RE, [global])).\\n\\ncount_words(_String, nomatch) -\\u003e\\n    [];\\ncount_words(String, {match, Matches}) -\\u003e\\n    do_tally(String, Matches, dict:new()).\\n\\ndo_tally(_String, [], Dict) -\\u003e\\n    Dict;\\ndo_tally(String, [[H]|T], Dict) -\\u003e\\n    do_tally(String, T,\\n             dict:update(id_match(String, H), fun(X) -\\u003e X + 1 end,\\n                            1, Dict)).\\n\\n\\nid_match(String, {Idx, Len}) -\\u003e\\n    %% re gives 0-based index matches, string expects 1-based\\n    string:substr(String, Idx+1, Len)."}
16	9	99b0427d167bb35c731cb842	superseded	rust	anagram	\N	\N	0	1	2016-01-05 22:17:57	2016-01-05 22:17:57	10	{"src/lib.rs":"pub fn anagrams_for\\u003c'a\\u003e (word: \\u0026str, list: \\u0026[\\u0026'a str]) -\\u003e Vec\\u003c\\u0026'a str\\u003e {\\n    let mut anagrams = Vec::new();\\n    //Put chars into a vector, sort them and reassemble the word.\\n    let mut wordchars: Vec\\u003cchar\\u003e = word.chars().collect();\\n    wordchars.sort();\\n    let sortedword: String = wordchars.into_iter().collect();\\n    for possible_anagram in list.iter() {\\n        //Repeat steps done on word on every possible_anagram.\\n        let mut anachars: Vec\\u003cchar\\u003e = possible_anagram.chars().collect();\\n        anachars.sort();\\n        let sortedana: String = anachars.into_iter().collect();\\n        //use sortedana.to_lowercase() and sortedword.to_lowercase() once method stops being unstable\\n        if sortedana == sortedword {\\n            anagrams.push(*possible_anagram);\\n        }\\n    }\\n    anagrams\\n}"}
18	9	ea0ed3f1ae40e544efae0dfc	\N	javascript	leap	\N	\N	0	1	2016-01-19 17:01:16	2016-01-19 17:01:16	11	{"leap.js":"function Year(year){\\r\\n  this.year = year;\\r\\n}\\r\\nYear.prototype.isLeap = function() {\\r\\n\\r\\n  if((this.year % 4 === 0) \\u0026\\u0026\\r\\n        ((this.year % 100 !== 0) || (this.year % 400 === 0))) return true;\\r\\n  return false;\\r\\n\\r\\n};\\r\\n\\r\\nmodule.exports = Year;"}
19	9	9445f1a3777d13e28e666527	\N	csharp	space-age	\N	\N	0	1	2016-03-13 12:54:44	2016-03-13 12:54:44	12	{"SpaceAgeTest.cs":"using NUnit.Framework;\\r\\n\\r\\n[TestFixture]\\r\\npublic class SpaceAgeTest\\r\\n{\\r\\n    [Test]\\r\\n    public void Age_in_seconds()\\r\\n    {\\r\\n        var age = new SpaceAge(1000000);\\r\\n        Assert.That(age.Seconds, Is.EqualTo(1000000));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_earth()\\r\\n    {\\r\\n        var age = new SpaceAge(1000000000);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(31.69).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_mercury()\\r\\n    {\\r\\n        var age = new SpaceAge(2134835688);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(67.65).Within(1E-02));\\r\\n        Assert.That(age.OnMercury(), Is.EqualTo(280.88).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_venus()\\r\\n    {\\r\\n        var age = new SpaceAge(189839836);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(6.02).Within(1E-02));\\r\\n        Assert.That(age.OnVenus(), Is.EqualTo(9.78).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_mars()\\r\\n    {\\r\\n        var age = new SpaceAge(2329871239);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(73.83).Within(1E-02));\\r\\n        Assert.That(age.OnMars(), Is.EqualTo(39.25).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_jupiter()\\r\\n    {\\r\\n        var age = new SpaceAge(901876382);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(28.58).Within(1E-02));\\r\\n        Assert.That(age.OnJupiter(), Is.EqualTo(2.41).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_saturn()\\r\\n    {\\r\\n        var age = new SpaceAge(3000000000);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(95.06).Within(1E-02));\\r\\n        Assert.That(age.OnSaturn(), Is.EqualTo(3.23).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_uranus()\\r\\n    {\\r\\n        var age = new SpaceAge(3210123456);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(101.72).Within(1E-02));\\r\\n        Assert.That(age.OnUranus(), Is.EqualTo(1.21).Within(1E-02));\\r\\n    }\\r\\n\\r\\n    [Ignore]\\r\\n    [Test]\\r\\n    public void Age_on_neptune()\\r\\n    {\\r\\n        var age = new SpaceAge(8210123456);\\r\\n        Assert.That(age.OnEarth(), Is.EqualTo(260.16).Within(1E-02));\\r\\n        Assert.That(age.OnNeptune(), Is.EqualTo(1.58).Within(1E-02));\\r\\n    }\\r\\n}"}
20	9	c7eef9f3ec71abdad7c0b016	\N	python	hello-world	\N	\N	0	1	2016-01-15 19:34:36	2016-01-15 19:34:36	13	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if name is None:\\n        return 'Hello, World!'\\n    else:\\n        return 'Hello, '+name+\\"!\\""}
21	9	2d88b1e2d8f0be4b4fc98a22	superseded	clojure	phone-number	\N	\N	0	1	2016-02-29 01:54:54	2016-02-29 01:54:54	14	{"phone_number.clj":"(ns phone-number\\n    (:require [clojure.string :as str]))\\n\\n(defn number [n] \\n  (let [cleaned (re-matches #\\"^1?\\\\(?(\\\\d{3})\\\\)?[ .]?(\\\\d{3})[-.]?(\\\\d{4})$\\" n)]\\n    (if cleaned (str/join (rest cleaned)) \\"0000000000\\")))\\n\\n(defn area-code [n]\\n  (subs (number n) 0 3))\\n\\n(defn pretty-print [n]\\n  (let [cleaned (number n)]\\n    (str \\"(\\" (subs cleaned 0 3) \\") \\"\\n         (subs cleaned 3 6) \\"-\\"\\n         (subs cleaned 6))))"}
22	9	e66ae41ae2b5e4918dccd4ff	pending	clojure	phone-number	\N	\N	0	2	2016-03-22 07:05:02	2016-03-22 07:05:02	14	{"phone_number.clj":"(ns phone-number\\n    (:require [clojure.string :as str]))\\n\\n(defn number[n]\\n    (if-let \\n        [cleaned (re-matches #\\"^1?\\\\(?(\\\\d{3})\\\\)?[ .]?(\\\\d{3})[-.]?(\\\\d{4})$\\" n)]\\n        (str/join (rest cleaned))\\n        \\"0000000000\\"))\\n\\n(defn area-code [n]\\n  (subs (number n) 0 3))\\n\\n(defn pretty-print [n]\\n  (let [cleaned (number n)]\\n    (str \\"(\\" (subs cleaned 0 3) \\") \\"\\n         (subs cleaned 3 6) \\"-\\"\\n         (subs cleaned 6))))"}
23	9	ba3b06f4cd20205305a3b5f3	superseded	ruby	meetup	\N	\N	0	1	2015-12-22 16:43:15	2015-12-22 16:43:15	15	{"meetup.rb":"# This screams for some metaprogramming!\\nclass Meetup\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  def self.make_day_of_week_method(name, week_name, day_of_week)\\n    define_method name do\\n      week = send \\"#{week_name}_week\\"\\n      week_day week, day_of_week\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      define_method \\"#{week_name}_week\\" do\\n        nth_week week_number\\n      end\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def last_week\\n    weekdays end_of_month - 6\\n  end\\n\\n  def nth_week(week)\\n    weekdays start_of_month + week * 7\\n  end\\n\\n  def teenth_week\\n    weekdays month + 12\\n  end\\n\\n  def weekdays(start_day)\\n    (start_day..start_day + 6).to_a\\n  end\\n\\n  def week_day(week, day_of_week)\\n    week[(day_of_week + week_offset(week)) % 7]\\n  end\\n\\n  def week_offset(week)\\n    - week[0].wday\\n  end\\nend"}
24	9	076b8ce534a9d3acc0fe7993	superseded	ruby	meetup	\N	\N	0	2	2015-12-31 22:09:05	2015-12-31 22:09:05	15	{"meetup.rb":"# This screams for some metaprogramming!\\nclass Meetup\\n\\n  class \\u003c\\u003c self\\n\\n    private\\n\\n    def make_day_of_week_method(name, week_name, day_of_week)\\n      # Does this for Friday, day 5 of the week\\n      # def third_friday\\n      #   week = third_week\\n      #   find_week_day week, 5\\n      # end\\n      #\\n      define_method name do\\n        week = send \\"#{week_name}_week\\"\\n        find_week_day week, day_of_week\\n      end\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      define_method \\"#{week_name}_week\\" do\\n        nth_week week_number\\n      end\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
25	9	e652e3868d4543781243492d	superseded	ruby	meetup	\N	\N	0	3	2016-01-09 02:49:01	2016-01-09 02:49:01	15	{"meetup.rb":"# This screams for some metaprogramming!\\nclass Meetup\\n\\n  private\\n\\n\\n  def self.make_day_of_week_method(name, week_name, day_of_week)\\n    # Does this for Friday, day 5 of the week\\n    # def third_friday\\n    #   week = third_week\\n    #   find_week_day week, 5\\n    # end\\n    #\\n    define_method name do\\n      week = send \\"#{week_name}_week\\"\\n      find_week_day week, day_of_week\\n    end\\n  end\\n\\n  public\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      week_name_method = \\"#{week_name}_week\\"\\n      define_method week_name_method do\\n        nth_week week_number\\n      end\\n      private week_name_method\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
26	9	b6ec7e573caaa1db727996c1	superseded	ruby	meetup	\N	\N	0	4	2016-02-13 00:02:21	2016-02-13 00:02:21	15	{"meetup.rb":"# This screams for some metaprogramming!\\nclass Meetup\\n\\n  class \\u003c\\u003c self\\n    private\\n\\n    def self.make_day_of_week_method(name, week_name, day_of_week)\\n      # Does this for Friday, day 5 of the week\\n      # def third_friday\\n      #   week = third_week\\n      #   find_week_day week, 5\\n      # end\\n      #\\n      define_method name do\\n        week = send \\"#{week_name}_week\\"\\n        find_week_day week, day_of_week\\n      end\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      week_name_method = \\"#{week_name}_week\\"\\n      define_method week_name_method do\\n        nth_week week_number\\n      end\\n      private week_name_method\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend\\n\\nrequire 'debugger'; debugger"}
37	9	ede7f909485fe271d8a17b72	\N	elixir	word-count	\N	\N	0	2	2015-12-22 18:05:25	2015-12-22 18:05:25	20	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    sentence\\n    |\\u003e String.replace(~r/_|,|:/, \\" \\")\\n    |\\u003e String.split(\\" \\")\\n    |\\u003e Enum.map( fn(x) -\\u003e String.replace(x, ~r/!|\\u0026|@|\\\\$|\\\\^|%/, \\"\\") end )\\n    |\\u003e Enum.map(\\u0026String.strip/1)\\n    |\\u003e Enum.filter( fn(x) -\\u003e x != \\"\\" end )\\n    |\\u003e count(%{})\\n  end\\n\\n  def count([], result), do: result\\n\\n  def count([w|rest], result) do\\n    w = String.downcase(w)\\n    occurence = Map.get(result, w, 0)\\n    result    = Map.put(result, w, occurence + 1)\\n\\n    count(rest, result)\\n  end\\nend"}
27	9	6cc12002ac194d4c1cb26ba1	superseded	ruby	meetup	\N	\N	0	5	2016-02-17 17:55:30	2016-02-17 17:55:30	15	{"meetup.rb":"# Oops! Fat fingered submit instead of skipping that command :)\\n# This screams for some metaprogramming!\\nclass Meetup\\n\\n  def self.make_day_of_week_method(name, week_name, day_of_week)\\n    # Does this for Friday, day 5 of the week\\n    # def third_friday\\n    #   week = third_week\\n    #   find_week_day week, 5\\n    # end\\n    #\\n    define_method name do\\n      week = send \\"#{week_name}_week\\"\\n      find_week_day week, day_of_week\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      week_name_method = \\"#{week_name}_week\\"\\n      define_method week_name_method do\\n        nth_week week_number\\n      end\\n      private week_name_method\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
28	9	c878cc29b961a05eb23991a8	done	ruby	meetup	\N	\N	0	8	2016-02-23 10:13:56	2016-02-23 10:13:56	15	{"meetup.rb":"# One last change!\\n# This screams for some metaprogramming!\\nclass Meetup\\n\\n  NTH_WEEK_NAMES = %w(first second third fourth)\\n\\n  class \\u003c\\u003c self\\n\\n    private\\n\\n    def make_day_of_week_method(name, week_name, day_of_week)\\n      # Does this for Friday, day 5 of the week\\n      # def third_friday\\n      #   week = third_week\\n      #   find_week_day week, 5\\n      # end\\n      #\\n      define_method name do\\n        week = send \\"#{week_name}_week\\"\\n        find_week_day week, day_of_week\\n      end\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    NTH_WEEK_NAMES.each do |week_name|\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  NTH_WEEK_NAMES.each_with_index do |week_name, week_number|\\n    define_method \\"#{week_name}_week\\" do\\n      nth_week week_number\\n    end\\n  end\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
29	9	f0f1cf7888dc5592273d6d4e	superseded	ruby	meetup	\N	\N	0	6	2016-02-25 01:19:01	2016-02-25 01:19:01	15	{"meetup.rb":"# This screams for some metaprogramming!\\nclass Meetup\\n\\n  class \\u003c\\u003c self\\n\\n    private\\n\\n    def make_day_of_week_method(name, week_name, day_of_week)\\n      # Does this for Friday, day 5 of the week\\n      # def third_friday\\n      #   week = third_week\\n      #   find_week_day week, 5\\n      # end\\n      #\\n      define_method name do\\n        week = send \\"#{week_name}_week\\"\\n        find_week_day week, day_of_week\\n      end\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    %w(first second third fourth).each_with_index do |week_name, week_number|\\n      week_name_method = \\"#{week_name}_week\\"\\n      define_method week_name_method do\\n        nth_week week_number\\n      end\\n      private week_name_method\\n\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
30	9	0ff134641e3eea176fe4eff3	superseded	ruby	meetup	\N	\N	0	7	2016-03-07 10:17:00	2016-03-07 10:17:00	15	{"meetup.rb":"# One last change!\\n# This screams for some metaprogramming!\\nclass Meetup\\n\\n  NTH_WEEK_NAMES = %w(first second third fourth)\\n\\n  class \\u003c\\u003c self\\n\\n    private\\n\\n    def make_day_of_week_method(name, week_name, day_of_week)\\n      # Does this for Friday, day 5 of the week\\n      # def third_friday\\n      #   week = third_week\\n      #   find_week_day week, 5\\n      # end\\n      #\\n      define_method name do\\n        week = send \\"#{week_name}_week\\"\\n        find_week_day week, day_of_week\\n      end\\n    end\\n  end\\n\\n  Date::DAYNAMES.map {|day| day.downcase}.each_with_index do |day_name, day_of_week|\\n    make_day_of_week_method day_name.gsub('day', 'teenth'), 'teenth', day_of_week\\n    make_day_of_week_method \\"last_#{day_name}\\", \\"last\\", day_of_week\\n\\n    NTH_WEEK_NAMES.each do |week_name|\\n      make_day_of_week_method \\"#{week_name}_#{day_name}\\", week_name, day_of_week\\n    end\\n  end\\n\\n  attr_accessor :month\\n\\n  def initialize(month, year)\\n    self.month = Date.new year, month, 1\\n  end\\n\\n  private\\n\\n  alias :start_of_month :month\\n\\n  NTH_WEEK_NAMES.each_with_index do |week_name, week_number|\\n    week_name_method = \\"#{week_name}_week\\"\\n    define_method week_name_method do\\n      nth_week week_number\\n    end\\n  end\\n\\n  def end_of_month\\n    month.next_month.prev_day\\n  end\\n\\n  def find_week_day(week, day_of_week)\\n    location_of_day_in_week = (day_of_week + week_offset_for(week)) % 7\\n    week[location_of_day_in_week]\\n  end\\n\\n  def last_week\\n    last_week_starts_on_day = end_of_month - 6\\n    week_of_days_starting_on last_week_starts_on_day\\n  end\\n\\n  def nth_week(week_number)\\n    number_of_days = week_number * 7\\n    week_of_days_starting_on start_of_month + number_of_days\\n  end\\n\\n  def teenth_week\\n    teenth_week_starts_on_day = start_of_month + 12\\n    week_of_days_starting_on teenth_week_starts_on_day\\n  end\\n\\n  def week_of_days_starting_on(start_day)\\n    last_day_of_week = start_day + 6\\n    (start_day..last_day_of_week).to_a\\n  end\\n\\n  def week_offset_for(week)\\n    - week[0].wday\\n  end\\nend"}
31	9	685638842e779faba103da2d	superseded	haskell	bob	\N	\N	0	1	2016-01-03 02:58:15	2016-01-03 02:58:15	16	{"Bob.hs":"--lackadaisical\\n\\nmodule Bob where\\nimport Data.Char    \\nresponseFor :: String -\\u003e String\\n\\nresponseFor s | all isSpace s                              = \\"Fine. Be that way!\\"\\n              | lettersInS /= \\"\\" \\u0026\\u0026 all isUpper lettersInS = \\"Whoa, chill out!\\"     --at least one letter and all letters uppercase\\n              | last s == '?'                              = \\"Sure.\\"                --question mark at the end (and no shout)\\n              | otherwise                                  = \\"Whatever.\\"\\n              where lettersInS = filter isLetter s"}
32	9	645dc57173197e8b704d45f7	pending	haskell	bob	\N	\N	0	2	2016-03-07 14:03:07	2016-03-07 14:03:07	16	{"Bob.hs":"--lackadaisical\\n\\nmodule Bob where\\nimport Data.Char    \\nresponseFor :: String -\\u003e String\\nresponseFor s | all isSpace s                              = \\"Fine. Be that way!\\"\\n              | not (null lettersInS) \\u0026\\u0026 all isUpper lettersInS = \\"Whoa, chill out!\\"     --at least one letter and all letters uppercase\\n              | last s == '?'                              = \\"Sure.\\"                --question mark at the end (and no shout)\\n              | otherwise                                  = \\"Whatever.\\"\\n              where lettersInS = filter isLetter s"}
33	9	7326016eca2bfca6c50b9768	pending	scala	crypto-square	\N	\N	0	1	2016-01-01 00:15:04	2016-01-01 00:15:04	17	{"/scala/crypto-square/src/main/scala/CryptoSquare.scala":"/**\\n * Created by kevin on 22/03/15.\\n */\\nimport scala.math.pow\\n\\nclass CryptoSquare {\\n  def normalizePlaintext(t: String): String = {\\n    t.filter(_.isLetterOrDigit).map(_.toLower)\\n  }\\n  def normalizedCiphertext(ict: String): String = {\\n    // prepare text\\n    val npt: String = normalizePlaintext(ict)\\n    if (npt == \\"\\") \\"\\"\\n    else {\\n      val sq_size = squareSize(npt)\\n      // generate text square\\n      val ptsv: Vector[String] = makeSegments(npt, sq_size, Vector())\\n      // pad short strings and convert to vectors so we can then transpose (do the encoding)\\n      val x1 = ptsv.map(_.toVector).map(_.padTo(ptsv(0).length, ' ')).transpose\\n      // now remove the padding\\n      val x2 = for (vx1 \\u003c- x1) yield vx1.filter(c =\\u003e c.isLetterOrDigit)\\n      // convert back to strings\\n      val s1 = x2.map(_.addString(new StringBuilder).toString)\\n      // and finally build the result\\n      val sb = new StringBuilder\\n      for (fs \\u003c- s1) sb.appendAll(fs + \\" \\")\\n      sb.toString().trim\\n    }\\n  }\\n    def ciphertext(is: String): String = {\\n      if (normalizePlaintext(is) == \\"\\") \\"\\"\\n      else {\\n        val ptsv = plaintextSegments(is).toVector\\n        val sb = new StringBuilder\\n        for {j \\u003c- (0 until ptsv(0).length)\\n             i \\u003c- (0 until ptsv.length)\\n             if (j \\u003c ptsv(i).length)\\n        } sb.append(ptsv(i)(j))\\n        sb.toString()\\n      }\\n  }\\n  def squareSize(ss: String): Int = {\\n    val l1 = ss.length\\n    def findsize(sl: List[Int]): Int = sl match {\\n      case List() =\\u003e 100\\n      case _ =\\u003e if (l1 \\u003c= pow(sl.head, 2).toInt) sl.head\\n      else findsize(sl.tail)\\n    }\\n    findsize((0 to 100).toList)\\n  }\\n  def makeSegments(ss: String, square_size: Int, acc: Vector[String]): Vector[String] = ss match {\\n    case \\"\\" =\\u003e acc\\n    case as =\\u003e makeSegments(ss.drop(square_size), square_size, acc :+ ss.take(square_size))\\n  }\\n  def plaintextSegments(pt: String): List[String] = {\\n    val npt: String = normalizePlaintext(pt)\\n    val sq_size = squareSize(npt)\\n    (makeSegments(npt, sq_size, Vector())).toList\\n  }\\n}\\nobject CryptoSquare {\\n  def apply() = new CryptoSquare\\n}"}
34	9	2fba382a3a0c488d3e94451a	superseded	python	word-count	\N	\N	0	1	2016-01-24 01:56:52	2016-01-24 01:56:52	18	{"wordcount.py":"def word_count(text):\\n    d = {}\\n    for word in text.split():\\n        if word not in d:\\n            d[word] = 0\\n        d[word] += 1\\n\\n    return d"}
35	9	250fec87e19c30261e6f64a3	hibernating	python	word-count	\N	\N	0	2	2016-02-07 03:00:27	2016-02-07 03:00:27	18	{"wordcount.py":"def word_count(text):\\n    d = {}\\n    for word in text.split():\\n        d[word] = d.get(word, 0) + 1\\n\\n    return d"}
36	9	347bbfebe1d1190d5d1f624e	\N	haskell	accumulate	\N	\N	0	1	2016-01-01 01:37:08	2016-01-01 01:37:08	19	{"accumulate.hs":"module Accumulate where\\n\\naccumulate :: (a -\\u003e t) -\\u003e [a] -\\u003e [t]\\naccumulate _ [] = []\\naccumulate fn (x:xs) = fn x : accumulate fn xs"}
38	9	173079c54ca190cc1a930fbc	\N	elixir	word-count	\N	\N	0	1	2015-12-25 02:40:30	2015-12-25 02:40:30	20	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    sentence\\n    |\\u003e String.replace(~r/_|,|:/, \\" \\")\\n    |\\u003e String.split(\\" \\")\\n    |\\u003e Enum.map( fn(x) -\\u003e String.replace(x, ~r/!|\\u0026|@|\\\\$|\\\\^|%/, \\"\\") end )\\n    |\\u003e Enum.map(\\u0026String.strip/1)\\n    |\\u003e Enum.filter( fn(x) -\\u003e x != \\"\\" end )\\n    |\\u003e count(%{})\\n  end\\n\\n  def count([], result) do\\n    result\\n  end\\n\\n  def count([w|rest], result) do\\n    w = String.downcase(w)\\n    occurence = Map.get(result, w, 0)\\n    result    = Map.put(result, w, occurence + 1)\\n\\n    count(rest, result)\\n  end\\nend"}
39	9	a72e8a862b70125fc713fa28	pending	csharp	word-count	\N	\N	0	1	2016-01-10 08:02:10	2016-01-10 08:02:10	21	{"Phrase.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\n\\r\\nclass Phrase\\r\\n{\\r\\n    public static Dictionary\\u003cstring, int\\u003e WordCount(string input)\\r\\n    {\\r\\n        string[] wordList = input.Split(new char[]{' ', ','});\\r\\n        var results = new Dictionary\\u003cstring, int\\u003e();\\r\\n        foreach (string s in wordList)\\r\\n        {\\r\\n            string noPunc = stripPunctuation(s.ToLower());\\r\\n            noPunc = noPunc.TrimEnd('\\\\'').TrimStart('\\\\''); // trim quotes if necessary\\r\\n            if (results.ContainsKey(noPunc))\\r\\n            {\\r\\n                results[noPunc]++; // increment word count\\r\\n            }\\r\\n            else if (noPunc.Length \\u003e 0) // make sure not using empty string\\r\\n            {\\r\\n                results.Add(noPunc, 1);\\r\\n            }\\r\\n            else\\r\\n            {\\r\\n                // do nothing with empty (\\"\\") string\\r\\n            }\\r\\n        }\\r\\n        return results;\\r\\n    }\\r\\n\\r\\n    private static string stripPunctuation(string s)\\r\\n    {\\r\\n        var strippedPuncList = new List\\u003cchar\\u003e();\\r\\n        foreach (char c in s)\\r\\n        {\\r\\n            if (c - 'a' \\u003e= 0 \\u0026\\u0026 c - 'a' \\u003c 26 || c == '\\\\'') // if character is between 'a' and 'z'\\r\\n                // or if character is an apostrophe\\r\\n            {\\r\\n                strippedPuncList.Add(c);\\r\\n            }\\r\\n            else if (c - '0' \\u003e= 0 \\u0026\\u0026 c - '0' \\u003c 10) // if character is between 0 and 9\\r\\n            {\\r\\n                strippedPuncList.Add(c);\\r\\n            }\\r\\n        }\\r\\n        return string.Join(\\"\\", strippedPuncList.ToArray());\\r\\n    }\\r\\n}"}
40	9	80265d83a5e7ab0ff676c54f	pending	clojure	hamming	\N	\N	0	1	2016-02-20 00:29:13	2016-02-20 00:29:13	22	{"/clojure/point-mutations/point_mutations.clj":"(ns point-mutations)\\n\\n(defn hamming-distance [a b]\\n  (if (= (count a) (count b))\\n    (count (filter false? (map identical? (seq a) (seq b))))\\n    nil))"}
41	9	e51983ce406375dd3d0507ae	pending	swift	hamming	\N	\N	0	1	2016-03-11 11:43:43	2016-03-11 11:43:43	23	{"Hamming.swift":"//\\n//  Hamming.swift\\n//  HammingTest\\n//\\n//  Created by matt johnston on 8/31/15.\\n//  Copyright © 2015 matt johnston. All rights reserved.\\n//\\n\\nimport Foundation\\n\\nclass  Hamming {\\n    \\n   \\n\\n  class func compute(test: String, against: String) -\\u003e Int? {\\n    \\n    var counter = 0\\n    var result : Int? = 0\\n    \\n    \\n    var testSwiftArray : [Character] = []\\n    var baseSwiftArray : [Character] = []\\n   \\n    \\n    for character in test.characters {\\n        testSwiftArray.append(character)\\n    }\\n    \\n    for x in against.characters {\\n        baseSwiftArray.append(x)\\n    }\\n\\n    \\n    if test.characters.count == against.characters.count {\\n    \\n    for x in testSwiftArray {\\n        \\n        if x != baseSwiftArray[counter] {\\n            \\n            result = result! + 1\\n        }\\n        \\n        ++counter\\n    }\\n    } else {\\n        result = nil\\n    }\\n\\n    return result\\n    \\n}\\n}"}
42	9	6d2a0b2c9d8c0311e46dc823	pending	csharp	anagram	\N	\N	0	1	2016-01-02 04:02:22	2016-01-02 04:02:22	24	{"Anagram.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\n\\r\\nclass Anagram\\r\\n{\\r\\n    private char[] chararray;\\r\\n    private string detector;\\r\\n\\r\\n    public Anagram(string input)\\r\\n    {\\r\\n        detector = input;\\r\\n        chararray = input.ToCharArray();\\r\\n        Array.Sort(chararray);\\r\\n    }\\r\\n\\r\\n    public string[] Match(string[] inputs)\\r\\n    {\\r\\n        List\\u003cstring\\u003e results = new List\\u003cstring\\u003e();\\r\\n        foreach (string word in inputs)\\r\\n        {\\r\\n            if(word.Length == chararray.Length)\\r\\n            {\\r\\n                if (word.ToLower().Equals(detector.ToLower()))\\r\\n                    continue;\\r\\n\\r\\n                char[] wordarray = word.ToCharArray();\\r\\n                Array.Sort(wordarray);\\r\\n                if(TheSame(wordarray,chararray))\\r\\n                    results.Add(word);\\r\\n            }\\r\\n        }\\r\\n        return results.ToArray();\\r\\n    }\\r\\n\\r\\n    bool TheSame(char[] a, char[] b)\\r\\n    {\\r\\n        bool result = false;\\r\\n        for(int i = 0; i \\u003c a.Length; i++)\\r\\n        {\\r\\n            result = a[1] == b[1];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n}"}
43	9	f86e0b0203ff59453ee03a40	done	haskell	triangle	\N	\N	0	1	2016-01-24 20:08:50	2016-01-24 20:08:50	25	{"Triangle.hs":"module Triangle (TriangleType(..), triangleType) where\\r\\n\\r\\ndata TriangleType = Equilateral | Isosceles | Scalene | Illogical deriving (Show, Eq)\\r\\n\\r\\ntriangleType :: Int -\\u003e Int -\\u003e Int -\\u003e TriangleType\\r\\ntriangleType a b c | a + b \\u003c= c || a + c \\u003c= b || b + c \\u003c= a = Illogical\\r\\n                   | a == b \\u0026\\u0026 b == c                       = Equilateral\\r\\n                   | a == b || b == c || a == c             = Isosceles\\r\\n                   | otherwise                              = Scalene"}
44	9	2aa8a0329439a9df0e2f1568	done	ruby	bob	\N	\N	0	2	2015-12-23 05:33:05	2015-12-23 05:33:05	26	{"bob.rb":"class Bob\\n  def hey(words)\\n    if words[-1] == '?'\\n\\t  'Sure.'\\n\\telsif words.upcase == words\\n\\t  'Woah, chill out!'\\n\\telsif words[/\\\\w+/]\\n\\t  'Whatever.'\\n\\telse\\n\\t  'Fine. Be that way!'\\n\\tend\\nend"}
45	9	8c2a4680c342616908fd5462	superseded	ruby	bob	\N	\N	0	1	2016-03-07 18:09:57	2016-03-07 18:09:57	26	{"bob.rb":"class Bob\\n\\n\\tdef hey(words)\\n\\t\\tif words[-1] == '?'\\n\\t\\t\\t'Sure.'\\n\\t\\telse \\n\\t\\t\\tif words.upcase == words\\n\\t\\t\\t\\t'Woah, chill out!'\\n\\t\\t\\telse\\n\\t\\t\\t\\tif words[/\\\\w+/]\\n\\t\\t\\t\\t\\t'Whatever.'\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t'Fine. Be that way!'\\n\\t\\t\\t\\tend\\n\\t\\t\\tend\\n\\t\\tend\\n\\n\\tend\\n\\nend"}
46	9	2b2216ab85b20548bece3d4f	\N	javascript	hamming	\N	\N	0	1	2016-01-09 15:19:07	2016-01-09 15:19:07	27	{"hamming.js":"var hamming = function(firstString, secondString) {\\n\\tvar counter = 0;\\n\\tif(firstString.length !== secondString.length){\\n\\t\\tthrow new Error('DNA strands must be of equal length.');\\n\\t}\\n\\tfirstString.split('').forEach(function(key, value, index) {\\n\\t\\tif(key !== secondString[value]){\\n\\t\\t\\tcounter++;\\n\\t\\t}\\t\\n\\t});\\t\\n\\treturn counter;\\n};\\n\\nmodule.exports = hamming;"}
80	31	d6f7a1c2fa1d31de3ffc7353	done	python	rna-transcription	\N	\N	0	5	2016-01-22 22:17:07	2016-01-22 22:17:07	49	{"dna.py":"# Rna Transcription\\n\\n\\ndef to_rna(dna_str):\\n    ''' takes a string of letters representing DNA nucleotides\\n    i.e.'ACGT' returns RNA complement i.e. 'UGCA\\" '''\\n    conversion = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'}\\n    try:\\n        rna_str = \\"\\".join([(conversion[letter]) for letter in dna_str])\\n        return rna_str\\n    except ValueError:\\n            print \\"Not a valid DNA sequence.\\""}
47	9	1afeaee669a437afd824217c	\N	elixir	etl	\N	\N	0	1	2016-01-25 00:05:27	2016-01-25 00:05:27	28	{"etl.exs":"defmodule ETL do\\n  @doc \\"\\"\\"\\n  Transform an index into an inverted index.\\n\\n  ## Examples\\n\\n  iex\\u003e ETL.transform(%{\\"a\\" =\\u003e [\\"ABILITY\\", \\"AARDVARK\\"], \\"b\\" =\\u003e [\\"BALLAST\\", \\"BEAUTY\\"]})\\n  %{\\"ability\\" =\\u003e \\"a\\", \\"aardvark\\" =\\u003e \\"a\\", \\"ballast\\" =\\u003e \\"b\\", \\"beauty\\" =\\u003e\\"b\\"}\\n  \\"\\"\\"\\n  @spec transform(Dict.t) :: map()\\n  def transform(input) do\\n    Enum.reduce(input, %{}, fn({key, values}, acc) -\\u003e\\n      values\\n      |\\u003e downcase\\n      |\\u003e map_to_key(key)\\n      |\\u003e Map.merge(acc)\\n    end)\\n  end\\n\\n\\n  defp map_to_key(values, key) do\\n    Enum.reduce(values, %{}, fn(value, acc) -\\u003e\\n      Map.put(acc, value, key)\\n    end)\\n  end\\n\\n  defp downcase(values) do\\n    Enum.map(values, \\u0026String.downcase/1)\\n  end\\n\\nend"}
48	9	fcd313f1fa6a170fdead2133	pending	coffeescript	bob	\N	\N	0	1	2016-02-14 12:03:02	2016-02-14 12:03:02	29	{"bob.coffee":"class Bob\\n  hey: (@message)-\\u003e\\n    if @isShouting()\\n      'Whoa, chill out!'\\n    else if @isQuestion()\\n      'Sure.'\\n    else if @isSilence()\\n      \\"Fine. Be that way!\\"\\n    else\\n      'Whatever.'\\n\\n  isSilence: -\\u003e\\n    @message.match(/^\\\\s*$/)\\n\\n  isShouting: -\\u003e\\n    @message.match(/^[1-9A-Z %@#$(^*,?!]+$/) \\u0026\\u0026 @message.match(/[A-Z]/)\\n\\n  isQuestion: -\\u003e\\n    @message.match(/\\\\?$/)\\n\\nmodule.exports = Bob"}
49	9	5aba3e65c68b3d1a048961c9	hibernating	clojure	scrabble-score	\N	\N	0	1	2016-02-05 15:43:56	2016-02-05 15:43:56	30	{"scrabble.clj":"(ns scrabble\\n  (:require [clojure.string :as str]))\\n\\n(def score-character\\n  { \\\\a 1,  \\\\e 1, \\\\i 1, \\\\o 1, \\\\u 1, \\\\l 1,\\n    \\\\n 1,  \\\\r 1, \\\\s 1, \\\\t 1,\\n    \\\\d 2,  \\\\g 2,\\n    \\\\b 3,  \\\\c 3, \\\\m 3, \\\\p 3,\\n    \\\\f 4,  \\\\h 4, \\\\v 4, \\\\w 4, \\\\y 4,\\n    \\\\k 5,\\n    \\\\j 8,  \\\\x 8,\\n    \\\\q 10, \\\\z 10 })\\n\\n(defn score-all\\n  [word]\\n  (-\\u003e\\u003e word\\n       str/lower-case\\n       (map score-character)))\\n\\n(defn score-letter\\n  [letter]\\n  (first (score-all letter)))\\n\\n(defn score-word\\n  [word]\\n  (reduce + (score-all word)))"}
50	11	0287ad72a1081f4359ed2b7f	hibernating	cpp	word-count	\N	\N	0	1	2016-01-02 18:30:35	2016-01-02 18:30:35	31	{"word_count.h":"#include \\u003cstring\\u003e\\r\\n#include \\u003cmap\\u003e\\r\\n#include \\u003csstream\\u003e\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\n#define SEPARATING_CHARACTERS \\", \\\\n\\"\\r\\n\\r\\nnamespace word_count {\\r\\n\\tconst std::map \\u003c std::string, int \\u003e words(std::string phrase);\\r\\n}\\r\\n\\r\\nconst std::map \\u003c std::string, int \\u003e word_count::words(std::string phrase)\\r\\n{\\r\\n\\tstd::map \\u003c std::string, int \\u003e out_map;\\r\\n\\tsize_t pos = 0, new_pos = 0;\\r\\n\\r\\n\\twhile (new_pos != std::string::npos) {\\r\\n\\t\\tnew_pos = phrase.find_first_of(SEPARATING_CHARACTERS, pos);\\r\\n\\r\\n\\t\\tstd::string word = \\"\\";\\r\\n\\t\\tif (new_pos == std::string::npos)\\t\\t\\t\\t// No more separators, last word\\r\\n\\t\\t\\tword = phrase.substr(pos);\\r\\n\\t\\telse\\r\\n\\t\\t\\tword = phrase.substr(pos, new_pos - pos);\\t// Split into a word\\r\\n\\r\\n\\t\\t/* Strip the word off of garbage characters */\\r\\n\\t\\tstd::string clean_word = \\"\\";\\r\\n\\t\\tif (!word.empty()) {\\r\\n\\t\\t\\tbool is_not_free_apostrophes = false;\\r\\n\\t\\t\\tfor (auto i = 0; i \\u003c word.size(); i++) {\\r\\n\\t\\t\\t\\t/* Only letters, numbers and apostrophes are acceptable */\\r\\n\\t\\t\\t\\tif ((word[i] \\u003e= 'A' \\u0026\\u0026 word[i] \\u003c= 'Z') || (word[i] \\u003e= 'a' \\u0026\\u0026 word[i] \\u003c= 'z') || (word[i] \\u003e= '0' \\u0026\\u0026 word[i] \\u003c= '9') || word[i] == '\\\\'')\\r\\n\\t\\t\\t\\t\\tclean_word.push_back(tolower(word[i]));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t/* Clear out apostrophes from the beginning and the end of the word (consider them quotes) */\\r\\n\\t\\t\\tint start_pos = clean_word.find_first_not_of('\\\\'');\\r\\n\\t\\t\\tif (start_pos != std::string::npos) {\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Word doesn't only consist of apostrophe\\r\\n\\t\\t\\t\\tint last_pos = clean_word.find_last_not_of('\\\\'');\\r\\n\\t\\t\\t\\tif (start_pos != 0 || last_pos != clean_word.size() - 1)\\t\\t\\t\\t\\t// If there are apostrophe in the beginning or end\\r\\n\\t\\t\\t\\t\\tclean_word = clean_word.substr(start_pos, last_pos - start_pos + 1);\\t// Get the word without apostrophe in the beginning or end\\r\\n\\r\\n\\t\\t\\t\\tif (!clean_word.empty())\\r\\n\\t\\t\\t\\t\\tout_map[clean_word]++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpos = new_pos + 1;\\r\\n\\t}\\r\\n\\treturn out_map;\\r\\n}"}
51	11	cbc7ae5703e7f2f9f8f85ced	\N	ruby	hamming	\N	\N	0	2	2015-12-23 01:48:48	2015-12-23 01:48:48	32	{"hamming.rb":"class Hamming\\n    VERSION = 1\\n\\n    def self.compute a, b\\n        raise ArgumentError if a.length != b.length\\n\\n        a.chars.zip(b.chars).count do |x, y|\\n            x != y\\n        end\\n    end\\nend"}
52	11	b5da22a2e617b6b448185340	\N	ruby	hamming	\N	\N	0	1	2016-02-28 00:10:48	2016-02-28 00:10:48	32	{"hamming.rb":"class Hamming\\n    VERSION = 1\\n\\n    def self.compute a, b\\n        count = 0\\n\\n        if a.length != b.length\\n            raise ArgumentError, \\"Strands should be of equal length\\"\\n        end\\n\\n        for i in 0..a.length\\n            if a[i] != b[i]\\n                count += 1\\n            end\\n        end\\n\\n        count\\n    end\\nend"}
53	11	43acbf6aac24f4162d4967cd	\N	ruby	hamming	\N	\N	0	3	2016-03-12 02:34:43	2016-03-12 02:34:43	32	{"hamming.rb":"class Hamming\\n    VERSION = 1\\n\\n    def self.compute a, b\\n        raise ArgumentError if a.length != b.length\\n        a.chars.zip(b.chars).count do |x, y| x != y end\\n    end\\nend"}
54	11	a7dec9eab0fa220386ca8b87	pending	python	bob	\N	\N	0	1	2015-12-25 06:29:48	2015-12-25 06:29:48	33	{"/python/bob/bob.py":"#\\n# Skeleton file for the Python \\"Bob\\" exercise.\\n#\\ndef hey(what):\\n\\twhat = what.strip()\\n\\tif what.isupper():\\n\\t\\treturn 'Whoa, chill out!'\\n\\telif what.endswith('?'):\\n\\t\\treturn 'Sure.'\\n\\telif not what:\\n\\t\\treturn 'Fine. Be that way!'\\n\\telse:\\n\\t\\treturn 'Whatever.'"}
55	11	b4990b6d92e3eddc930ac637	hibernating	elixir	bob	\N	\N	0	1	2015-12-20 13:45:04	2015-12-20 13:45:04	34	{"bob.exs":"defmodule Teenager do\\n  def hey(input) do\\n    cond do\\n      silent?(input)   -\\u003e \\"Fine. Be that way!\\"\\n      question?(input) -\\u003e \\"Sure.\\"\\n      shout?(input)    -\\u003e \\"Whoa, chill out!\\"\\n      true             -\\u003e \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp silent?(input) do\\n    input |\\u003e String.strip |\\u003e String.length == 0\\n  end\\n\\n  defp question?(input) do\\n    String.ends_with?(input, \\"?\\")\\n  end\\n\\n  defp shout?(input) do\\n    Regex.match?(~r/^\\\\P{Ll}*\\\\p{Lu}+\\\\P{Ll}*$/u, input)\\n  end\\nend"}
56	11	cdd1bdea73acc7e69ac4eb0e	pending	python	hello-world	\N	\N	0	1	2016-01-08 15:47:08	2016-01-08 15:47:08	35	{"hello_world.py":"#\\r\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\r\\n#\\r\\n\\r\\n\\r\\ndef hello(name=''):\\r\\n    if name:\\r\\n    \\treturn \\"Hello, \\" + name + \\"!\\"\\r\\n    else:\\r\\n    \\treturn \\"Hello, World!\\""}
57	11	52cfccceac577fae2c52f73d	done	javascript	beer-song	\N	\N	0	1	2016-03-04 13:43:57	2016-03-04 13:43:57	36	{"beer-song_test.js":"var Beer = {\\n  verse: function(beerCount) {\\n    var result = \\"\\";\\n    // var counter = beerCount;\\n    // while (counter \\u003e 2) {\\n      if (beerCount === 1) {\\n        result += '1 bottle of beer on the wall, 1 bottle of beer.\\\\nTake it down and pass it around, no more bottles of beer on the wall.\\\\n';\\n      } else if (beerCount === 0) {\\n        result += 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n      } else {result += beerCount + ' bottles of beer on the wall, ' + beerCount + ' bottles of beer.\\\\nTake one down and pass it around, ' + (beerCount - 1) + ' bottles of beer on the wall.\\\\n';\\n      }\\n      // beerCount--;\\n    // }\\n    return result;\\n  },\\n  sing: function(beerCount, numVerses) {\\n    result = \\"\\";\\n    while (beerCount \\u003e= numVerses) {\\n        result += this.verse(beerCount);\\n        beerCount--;\\n    }\\n    return result;\\n  }\\n};"}
58	12	8f97d208a67d8220082d0376	done	ruby	word-count	\N	\N	0	1	2016-01-14 03:03:18	2016-01-14 03:03:18	37	{"word-count.rb":"class Phrase\\n  def initialize(phrase)\\n    @phrase = phrase\\n  end\\n\\n  def word_count\\n    words = @phrase.scan(/\\\\w+/).map!{|k| k.downcase}\\n    words.inject(Hash.new(0)) {|h,k| h[k]+=1; h}\\n  end\\nend"}
81	31	8e36a386864eb05ae10f4d89	superseded	python	rna-transcription	\N	\N	0	1	2016-01-27 15:23:57	2016-01-27 15:23:57	49	{"dna.py":"# Rna Transcription\\n\\n\\ndef to_rna(dna_str):\\n    ''' takes a string of letters representing DNA nucleotides i.e.'ACGT'\\n    returns RNA complement i.e. 'UGCA\\" '''\\n    conversion = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'}\\n    rna_str = \\"\\"\\n    for letter in dna_str:\\n        try:\\n            rna_str += conversion[letter]\\n        except KeyError:\\n            return \\"Error: Not a valid DNA sequence.\\"\\n    return rna_str"}
59	12	d32a0196ace63a75776951b9	needs_input	ruby	custom-set	\N	\N	0	1	2016-01-22 21:23:20	2016-01-22 21:23:20	38	{"custom_set.rb":"class CustomSet\\n  attr_reader :elements\\n\\n  def initialize(elements = [])\\n    @elements = elements.to_a.uniq.sort\\n  end\\n\\n  def ==(other)\\n    elements.sort.uniq == other.elements.sort.uniq\\n  end\\n\\n  def to_a\\n    @elements\\n  end\\n\\n  def size\\n    @elements.size\\n  end\\n\\n  def delete(value)\\n    @elements.reject! { |e| e == value \\u0026\\u0026 e.class == value.class }\\n    self\\n  end\\n\\n  def difference(other)\\n    other.elements.each_with_object(CustomSet.new(@elements)) do |e, set|\\n      set.delete(e)\\n    end\\n  end\\n\\n  def disjoint?(other)\\n    (other.elements + @elements).uniq.size == (other.size + size)\\n  end\\n\\n  def empty\\n    @elements = []\\n    self\\n  end\\n\\n  def intersection(other)\\n    CustomSet.new(intersecting_elements(other))\\n  end\\n\\n  def member?(value)\\n    @elements.any? { |e| e == value \\u0026\\u0026 e.class == value.class }\\n  end\\n\\n  def put(value)\\n    @elements \\u003c\\u003c value\\n    @elements = @elements.uniq.sort\\n    self\\n  end\\n\\n  def subset?(other)\\n    other.elements.all? { |e| member?(e) }\\n  end\\n\\n  def union(other)\\n    CustomSet.new(@elements + other.elements)\\n  end\\n\\n  private\\n\\n  def intersecting_elements(other)\\n    @elements.select { |e| other.member?(e) }\\n  end\\nend"}
60	12	8f10fd36588b154bf6759e9c	\N	ruby	raindrops	\N	\N	0	1	2016-02-18 02:26:45	2016-02-18 02:26:45	39	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n\\n  VALID_PRIMES = {\\n    3 =\\u003e 'Pling',\\n    5 =\\u003e 'Plang',\\n    7 =\\u003e 'Plong'\\n  }\\n\\n  def self.convert(arg)\\n    raindrops = VALID_PRIMES.keys.each_with_object([]) do |prime, arry|\\n      arry \\u003c\\u003c VALID_PRIMES[prime] if arg % prime == 0\\n    end\\n\\n    raindrops.empty? ? arg.to_s : raindrops.join(\\"\\")\\n  end\\nend"}
61	12	a91cee7c01fb3c5e46dc0868	pending	javascript	hello-world	\N	\N	0	1	2016-02-21 10:01:40	2016-02-21 10:01:40	40	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n// Make sure to look at test.script.js--that should give you some hints about what is\\n// expected here.\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n  if (input != '')\\n    return \\"Hello, \\" + input + \\"!\\";\\n  else\\n    return \\"Hello, world!\\";\\n  end\\n};\\n\\nmodule.exports = HelloWorld;"}
62	15	94c590ba0f5e10a36e07404c	superseded	haskell	grade-school	\N	\N	0	1	2015-12-24 01:10:25	2015-12-24 01:10:25	41	{"README.md":"# Grade School\\r\\n\\r\\nWrite a small archiving program that stores students' names along with the grade that they are in.\\r\\n\\r\\nIn the end, you should be able to:\\r\\n\\r\\n- Add a student's name to the roster for a grade\\r\\n  - \\"Add Jim to grade 2.\\"\\r\\n  - \\"OK.\\"\\r\\n- Get a list of all students enrolled in a grade\\r\\n  - \\"Which students are in grade 2?\\"\\r\\n  - \\"We've only got Jim just now.\\"\\r\\n- Get a sorted list of all students in all grades.  Grades should sort\\r\\n  as 1, 2, 3, etc., and students within a grade should be sorted\\r\\n  alphabetically by name.\\r\\n  - \\"Who all is enrolled in school right now?\\"\\r\\n  - \\"Grade 1: Anna, Barb, and Charlie. Grade 2: Alex, Peter, and Zoe.\\r\\n    Grade 3…\\"\\r\\n\\r\\nNote that all our students only have one name.  (It's a small town, what\\r\\ndo you want?)\\r\\n\\r\\n\\r\\n## For bonus points\\r\\n\\r\\nDid you get the tests passing and the code clean? If you want to, these\\r\\nare some additional things you could try:\\r\\n\\r\\n- If you're working in a language with mutable data structures and your\\r\\n  implementation allows outside code to mutate the school's internal DB\\r\\n  directly, see if you can prevent this. Feel free to introduce additional\\r\\n  tests.\\r\\n\\r\\nThen please share your thoughts in a comment on the submission. Did this\\r\\nexperiment make the code better? Worse? Did you learn anything from it?\\r\\n\\r\\n\\r\\n## Source\\r\\n\\r\\nA pairing session with Phil Battos at gSchool [view source](http://gschool.it)\\r"}
63	15	d594dd312bc9bcb314425c96	superseded	haskell	grade-school	\N	\N	0	2	2015-12-24 22:05:07	2015-12-24 22:05:07	41	{"School.hs":"module School (School(), add, empty, grade, sorted) where\\r\\n\\r\\nimport Data.List (sort, sortBy)\\r\\nimport qualified Data.Map as M (unionWith, toList, singleton, findWithDefault, empty, Map())\\r\\n\\r\\ndata School = School (M.Map Grade [Student]) deriving Show\\r\\n\\r\\ntype Grade = Int\\r\\ntype Student = String\\r\\n\\r\\nsorted :: School -\\u003e [(Grade, [Student])]\\r\\nsorted (School m) = M.toList (fmap sort m)\\r\\n\\r\\nadd :: Grade -\\u003e Student -\\u003e School -\\u003e School\\r\\nadd gr st (School m) = School $ M.unionWith (++) (M.singleton gr [st]) m \\r\\n\\r\\nempty :: School\\r\\nempty = School M.empty\\r\\n\\r\\ngrade :: Grade -\\u003e School -\\u003e [Student]\\r\\ngrade gr (School m) = M.findWithDefault [] gr m"}
64	15	8ce7353466c46c57228edc8b	pending	haskell	grade-school	\N	\N	0	3	2015-12-29 10:39:34	2015-12-29 10:39:34	41	{"School.hs":"module School (School(), add, empty, grade, sorted) where\\r\\n\\r\\nimport Data.List (sort)\\r\\nimport qualified Data.Map as M (unionWith, toList, singleton, findWithDefault, empty, Map())\\r\\nimport Control.Applicative (pure)\\r\\n\\r\\ntype School = M.Map Grade [Student]\\r\\ntype Grade = Int\\r\\ntype Student = String\\r\\n\\r\\nsorted :: School -\\u003e [(Grade, [Student])]\\r\\nsorted = M.toList . (fmap sort)\\r\\n\\r\\nadd :: Grade -\\u003e Student -\\u003e School -\\u003e School\\r\\nadd gr = M.unionWith (++) . M.singleton gr . pure\\r\\n\\r\\nempty :: School\\r\\nempty = M.empty\\r\\n\\r\\ngrade :: Grade -\\u003e School -\\u003e [Student]\\r\\ngrade = M.findWithDefault []"}
65	22	ea52ceffb4cb9e331f50710d	hibernating	fsharp	sum-of-multiples	\N	\N	0	1	2015-12-23 21:12:13	2015-12-23 21:12:13	42	{"SumOfMultiples.fs":"﻿module SumOfMultiples\\r\\n\\r\\ntype SumOfMultiples(multiplesOf) =\\r\\n\\r\\n    member x.To number =\\r\\n        let multiples = seq { for n in 1..(number-1) do if x.isMultiple n then yield n }\\r\\n        Seq.sum multiples\\r\\n\\r\\n    member private x.isMultiple n =\\r\\n        Seq.exists (fun m -\\u003e n % m = 0) multiplesOf\\r\\n\\r\\n    new() = SumOfMultiples([3; 5])\\r"}
66	22	a16a2ff0ffe94aa49efde42c	\N	javascript	etl	\N	\N	0	1	2016-03-14 02:44:15	2016-03-14 02:44:15	43	{"etl.js":"var ETL = function() { };\\n\\nETL.prototype.transform = function (old) {\\n\\tvar clean = {};\\n\\tfor ( var score in old ) {\\n\\t\\tfor ( var i in old[score] ) {\\n\\t\\t\\tclean[old[score][i].toLowerCase()] = parseInt(score, 10);\\n\\t\\t}\\n\\t}\\n\\treturn clean;\\n};\\n\\nmodule.exports = ETL;"}
82	31	3e52df80239279ec97c9feb0	superseded	python	rna-transcription	\N	\N	0	2	2016-02-18 05:07:30	2016-02-18 05:07:30	49	{"dna.py":"# Rna Transcription\\n\\n\\ndef to_rna(dna_str):\\n    ''' takes a string of letters representing DNA nucleotides\\n    i.e.'ACGT' returns RNA complement i.e. 'UGCA\\" '''\\n    conversion = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'}\\n    rna_str = \\"\\"\\n    for letter in dna_str:\\n        try:\\n            rna_str += conversion[letter]\\n        except KeyError:\\n            return \\"Error: Not a valid DNA sequence.\\"\\n    return rna_str"}
83	31	a2f62cfdba83f8c7706735a4	superseded	ruby	robot-name	\N	\N	0	1	2016-01-07 13:09:49	2016-01-07 13:09:49	50	{"/ruby/robot-name/robot.rb":"require 'set'\\n\\nclass Robot\\n  @@used_names = Set.new\\n\\n  def initialize\\n    tmp_name = uniq_name\\n    @@used_names \\u003c\\u003c tmp_name\\n    @robot_name = tmp_name\\n  end\\n    \\n  def make_name\\n    tmp_name = ('A'..'Z').to_a.sample(2).join\\n    tmp_name \\u003c\\u003c (0..9).to_a.sample(3).join\\n    tmp_name\\n  end\\n  \\n  def uniq_name\\n    tmp_name = make_name\\n    while @@used_names.member?(tmp_name) \\n      tmp_name = make_name\\n    end\\n    tmp_name\\n  end\\n\\n  def name\\n    @robot_name\\n  end\\n\\n  def reset\\n    @robot_name = uniq_name\\n  end\\nend"}
67	22	c38f9c238b4d3f26d05cb43e	hibernating	ruby	palindrome-products	\N	\N	0	1	2015-12-12 15:18:55	2015-12-12 15:18:55	44	{"palindrome_products.rb":"class Palindromes\\r\\n  attr_reader :min, :max, :largest, :smallest\\r\\n\\r\\n  def initialize(max_factor: 2, min_factor: 1)\\r\\n    @max = max_factor\\r\\n    @min = min_factor\\r\\n    @largest = Palindrome.new(0)\\r\\n    @smallest = Palindrome.new(99_999)\\r\\n  end\\r\\n\\r\\n  def generate\\r\\n    palindromes = {}\\r\\n    (min..max).each do |num1|\\r\\n      (min..num1).each do |num2|\\r\\n        product = num1 * num2\\r\\n        if palindrome?(product)\\r\\n          if palindromes[product]\\r\\n            pal = palindromes[product]\\r\\n            pal.factors \\u003c\\u003c [num2, num1]\\r\\n          else\\r\\n            pal = Palindrome.new(product, [[num2, num1]])\\r\\n            palindromes[product] = pal\\r\\n          end\\r\\n          @largest = pal if pal \\u003e largest\\r\\n          @smallest = pal if pal \\u003c smallest \\r\\n        end\\r\\n      end\\r\\n    end\\r\\n  end\\r\\n\\r\\n  private\\r\\n\\r\\n  def palindrome?(num)\\r\\n    num.to_s == num.to_s.reverse\\r\\n  end\\r\\nend\\r\\n\\r\\nclass Palindrome\\r\\n  include Comparable\\r\\n  attr_reader :value, :factors\\r\\n\\r\\n  def initialize(value, factors = [])\\r\\n    @value = value\\r\\n    @factors = factors\\r\\n  end\\r\\n\\r\\n  def \\u003c=\\u003e(other)\\r\\n    value \\u003c=\\u003e other.value\\r\\n  end\\r\\nend"}
68	28	ffd14ab366ce38d99ae84525	pending	javascript	bob	\N	\N	0	1	2016-03-25 08:17:13	2016-03-25 08:17:13	45	{"bob.js":"/**\\n * Returns a function for counting the characters that match a given regular expression.\\n * @param  {String} input \\n * @return {Function}     \\n */\\nfunction _makeCount(input) {\\n    return function _count(pattern) {\\n        return (input.match(pattern) || []).length;\\n    }\\n}\\n\\nvar Bob = function() {};\\n\\nBob.responses = {\\n    question: 'Sure.',\\n    yell: 'Whoa, chill out!',\\n    silence: 'Fine. Be that way!',\\n    default: 'Whatever.'\\n}\\n\\n/**\\n * List of predicates Bob uses to determine how to answer. Order matters, higher in the list (lower index) will overrule any predicate matched lower (higher index) in the list. \\n * Each predicate will return a string giving the response if the input string is matched, or null if there is no match.\\n * @type {Array}\\n */\\nBob.matchers = [\\n    function yell(input) {\\n        var uppercase = input.toUpperCase();\\n        return uppercase == input \\u0026\\u0026 uppercase != input.toLowerCase() ? Bob.responses.yell: null\\n    },\\n    function question(input) {\\n        var questionIndex = input.indexOf('?');\\n        return questionIndex !== -1 \\u0026\\u0026 questionIndex == input.length - 1 ? Bob.responses.question : null\\n    },\\n    function jerkMode(input) {\\n        return input.replace(/ /g, '').length === 0 ? Bob.responses.silence : null;\\n    },\\n    function defaultSpeech(input) {\\n        return Bob.responses.default;\\n    }\\n];\\n\\n/**\\n * Responds to a string given to Bob appropriately.\\n * @param  {String} input \\n * @return {String} \\n */\\nBob.prototype.hey = function(input) {\\n    return Bob.matchers.slice().reverse()\\n        .reduce(\\n            function(currentAnswer, matcher){\\n                var matcherAnswer = matcher(input);\\n                if (matcherAnswer) {\\n                    return matcherAnswer;\\n                }\\n                return currentAnswer;\\n            },\\n            'Whatever.'\\n        );\\n};\\n\\nmodule.exports = Bob;"}
69	29	10de7cdb42a0aa88fcce6518	superseded	haskell	binary	\N	\N	0	3	2016-03-18 14:26:26	2016-03-18 14:26:26	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal = foldl' calc 0\\n  where calc n x = 2 * n + case x of\\n          '1' -\\u003e 1\\n          _ -\\u003e 0"}
70	29	a86187e850676f626cf084ec	superseded	haskell	binary	\N	\N	0	4	2016-03-19 00:57:51	2016-03-19 00:57:51	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal xs = fromMaybe 0 $ foldl' calc (Just 0) xs\\n  where calc (Just n) x = case x of\\n          '1' -\\u003e Just (2 * n + 1)\\n          '0' -\\u003e Just (2*n)\\n          _ -\\u003e Nothing\\n        calc Nothing _ = Nothing"}
71	29	4ebfe243f97e622e3a0d25e6	superseded	haskell	binary	\N	\N	0	2	2016-03-20 09:29:56	2016-03-20 09:29:56	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal xs = fromMaybe 0 $ foldl' calc (Just 0) xs\\n  where calc (Just n) x = case x of\\n          '1' -\\u003e Just (2 * n + 1)\\n          '0' -\\u003e Just (2*n)\\n          _ -\\u003e Nothing\\n        calc Nothing _ = Nothing"}
72	29	c213f9fab09f2284ccf88541	superseded	haskell	binary	\N	\N	0	5	2016-03-22 02:55:00	2016-03-22 02:55:00	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal xs = fromMaybe 0 $ foldl' calc (Just 0) xs\\n  where calc result x = case result of\\n          Just n | x == '1' -\\u003e Just (2 * n + 1)\\n                 | x == '0' -\\u003e Just (2 * n)\\n          _ -\\u003e Nothing"}
73	29	e55c8d18de8ac65381f29946	superseded	haskell	binary	\N	\N	0	6	2016-03-24 20:59:58	2016-03-24 20:59:58	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal xs = fromMaybe 0 $ foldl' calc (Just 0) xs\\n  where calc (Just n) x\\n          | x == '1' = Just (2 * n + 1)\\n          | x == '0' = Just (2 * n)\\n        calc _ _ = Nothing"}
74	29	29b1890e8842e8202f550867	superseded	haskell	binary	\N	\N	0	1	2016-03-25 14:27:02	2016-03-25 14:27:02	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal xs = sum $ fromMaybe [0] $ valueList\\n  where valueList = mapM toValueList tuples\\n        toValueList (x, e) = case x of\\n          '0' -\\u003e Just 0\\n          '1' -\\u003e Just (2^e)\\n          _ -\\u003e Nothing\\n        tuples = zip (reverse xs) [(0::Int)..]"}
75	29	d9f9aff631119b1dbb11acaa	hibernating	haskell	binary	\N	\N	0	7	2016-03-26 13:58:04	2016-03-26 13:58:04	46	{"/haskell/binary/Binary.hs":"module Binary (toDecimal) where\\n\\nimport Data.Maybe\\nimport Data.List\\n\\ntoDecimal :: String -\\u003e Int\\ntoDecimal = fromMaybe 0 . foldl' calc (Just 0)\\n  where calc (Just n) x\\n          | x == '1' = Just (2 * n + 1)\\n          | x == '0' = Just (2 * n)\\n        calc _ _ = Nothing"}
76	31	f3a982609f20543b294f053b	done	javascript	etl	\N	\N	0	1	2016-01-31 19:33:14	2016-01-31 19:33:14	47	{"etl.js":"'use strict';\\n\\nexports.transform = function(extracted) {\\n  var load = {};\\n\\n  function fill(letter, i, letters) {\\n    load[letter.toLowerCase()] = score;\\n  }\\n\\n  for ( var score in extracted ) {\\n    if (extracted.hasOwnProperty(score)) {\\n      extracted[score].forEach( fill );\\n    }\\n  }\\n  \\n  return load;\\n};"}
77	31	6b60fecea1556c68ab81ab2a	hibernating	python	hamming	\N	\N	0	1	2016-02-29 05:34:49	2016-02-29 05:34:49	48	{"hamming.py":"def distance(a, b):\\r\\n    counter = 0\\r\\n    for k in range(0, len(a)):\\r\\n        if a[k] != b[k]:\\r\\n            counter += 1\\r\\n    return counter"}
78	31	086c214cfc0380c377cf4b62	superseded	python	rna-transcription	\N	\N	0	3	2015-12-26 12:36:18	2015-12-26 12:36:18	49	{"dna.py":"# Rna Transcription\\n\\n\\ndef to_rna(dna_str):\\n    ''' takes a string of letters representing DNA nucleotides\\n    i.e.'ACGT' returns RNA complement i.e. 'UGCA\\" '''\\n    conversion = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'}\\n    try:\\n        rna_str = [conversion[letter] for letter in dna_str]\\n    except ValueError:\\n            print \\"Not a valid DNA sequence.\\"\\n    return rna_str"}
79	31	30d42a183efb2cfe1ce535ec	superseded	python	rna-transcription	\N	\N	0	4	2016-01-02 18:56:04	2016-01-02 18:56:04	49	{"dna.py":"# Rna Transcription\\n\\n\\ndef to_rna(dna_str):\\n    ''' takes a string of letters representing DNA nucleotides\\n    i.e.'ACGT' returns RNA complement i.e. 'UGCA\\" '''\\n    conversion = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'}\\n    try:\\n        rna_str = [conversion[letter] for letter in dna_str]\\n        return rna_str\\n    except ValueError:\\n            print \\"Not a valid DNA sequence.\\""}
117	46	858c34335cd3cf9b77f61190	done	ruby	hello-world	\N	\N	0	1	2015-12-01 22:28:11	2015-12-01 22:28:11	73	{"hello_world.rb":"class HelloWorld\\n  def self.hello(name = nil)\\n    if name == nil\\n      \\"Hello, World!\\"\\n    else\\n      \\"Hello, #{name}!\\"\\n    end\\n  end\\nend"}
84	31	9417bd42e9ddb764bf6cfc7e	done	ruby	robot-name	\N	\N	0	2	2016-01-09 19:01:59	2016-01-09 19:01:59	50	{"/ruby/robot-name/robot.rb":"require 'set'\\n\\nclass Robot\\n  @@used_names = Set.new\\n\\n  def initialize\\n    tmp_name = uniq_name\\n    @@used_names \\u003c\\u003c tmp_name\\n    @robot_name = tmp_name\\n  end\\n    \\n  def make_name\\n    tmp_name = ('A'..'Z').to_a.sample(2).join\\n    tmp_name \\u003c\\u003c (0..9).to_a.sample(3).join\\n  end\\n  \\n  def uniq_name\\n    tmp_name = make_name\\n    while @@used_names.member?(tmp_name) \\n      tmp_name = make_name\\n    end\\n    tmp_name\\n  end\\n\\n  def name\\n    @robot_name\\n  end\\n\\n  def reset\\n    initialize\\n  end\\nend"}
85	31	160ed2a8a14017d85413678c	pending	ruby	word-count	\N	\N	0	1	2015-12-19 05:31:42	2015-12-19 05:31:42	51	{"word_count.rb":"class Phrase\\n  attr_accessor :phrase\\n\\n  def initialize(phrase)\\n    self.phrase = phrase\\n  end\\n\\n  def word_count\\n    clean_phrase = phrase.downcase.gsub(/[:,.!\\u0026@$^%\\"]/, ' ').split(/\\\\s+/)\\n\\n    clean_phrase.inject(Hash.new(0)) do |result, word|\\n      result[word] += 1\\n      result\\n    end\\n  end\\nend"}
86	31	1a71fea7d0b4dc9b5c6e5015	\N	clojure	beer-song	\N	\N	0	2	2016-01-20 16:09:48	2016-01-20 16:09:48	52	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :refer [capitalize]]))\\n\\n(def ^:private s1-format \\n  \\"%s of beer on the wall, %s of beer.\\\\n\\")\\n(def ^:private s2-format \\n  \\"Take %s down and pass it around, %s of beer on the wall.\\\\n\\")\\n(def ^:private s2-empty\\n  \\"Go to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\")\\n\\n(defn- englishify [bottles]\\n  (cond\\n    (= bottles 0) \\"no more bottles\\"\\n    (= bottles 1) \\"1 bottle\\"\\n    :default (str bottles \\" bottles\\")))\\n\\n(defn verse [bottles]\\n  (cond\\n    (= bottles 0)\\n      (let [eng (englishify bottles) capped (capitalize eng)]\\n        (str (format s1-format capped eng) s2-empty))\\n    :default \\n      (let [take-what (if (= bottles 1) \\"it\\" \\"one\\")]\\n        (str (format s1-format (englishify bottles) (englishify bottles))\\n              (format s2-format take-what (englishify (dec bottles)))))))\\n\\n(defn sing \\n  ([start end]\\n    (str \\n      (verse start)\\n      (when (not= start end) \\n        (str \\"\\\\n\\" (sing (dec start) end)))))\\n  ([start]\\n    (sing start 0)))"}
87	31	511917ac63d9723d50b078ba	\N	clojure	beer-song	\N	\N	0	1	2016-03-08 20:14:34	2016-03-08 20:14:34	52	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :refer [capitalize]]))\\n\\n(def ^:private s1-format \\n  \\"%s of beer on the wall, %s of beer.\\\\n\\")\\n(def ^:private s2-format \\n  \\"Take %s down and pass it around, %s of beer on the wall.\\\\n\\")\\n(def ^:private s2-empty\\n  \\"Go to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\")\\n\\n(defn- englishify [bottles]\\n  (cond\\n    (= bottles 0) \\"no more bottles\\"\\n    (= bottles 1) \\"1 bottle\\"\\n    :default (str bottles \\" bottles\\")))\\n\\n(defn verse [bottles]\\n  (cond\\n    (= bottles 0)\\n      (let [eng (englishify bottles) capped (capitalize eng)]\\n        (str (format s1-format capped eng) s2-empty))\\n    :default \\n      (let [take-what (if (= bottles 1) \\"it\\" \\"one\\")]\\n        (str (format s1-format (englishify bottles) (englishify bottles))\\n              (format s2-format take-what (englishify (- bottles 1)))))))\\n\\n(defn sing \\n  ([start end]\\n    (str \\n      (verse start)\\n      (when (not= start end) \\n        (str \\"\\\\n\\" (sing (- start 1) end)))))\\n  ([start]\\n    (sing start 0)))"}
88	31	3c96ebc9e74611d7d95c4104	\N	clojure	beer-song	\N	\N	0	3	2016-03-21 02:24:36	2016-03-21 02:24:36	52	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :refer [capitalize]]))\\n\\n(def ^:private s1-format \\n  \\"%s of beer on the wall, %s of beer.\\\\n\\")\\n(def ^:private s2-format \\n  \\"Take %s down and pass it around, %s of beer on the wall.\\\\n\\")\\n(def ^:private s2-empty\\n  \\"Go to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\")\\n\\n(defn- englishify [bottles]\\n  (cond\\n    (= bottles 0) \\"no more bottles\\"\\n    (= bottles 1) \\"1 bottle\\"\\n    :default (str bottles \\" bottles\\")))\\n\\n(defn verse [bottles]\\n  (if (= bottles 0)\\n    (let [eng (englishify bottles) capped (capitalize eng)]\\n      (str (format s1-format capped eng) s2-empty))\\n    (let [take-what (if (= bottles 1) \\"it\\" \\"one\\")]\\n      (str (format s1-format (englishify bottles) (englishify bottles))\\n           (format s2-format take-what (englishify (dec bottles)))))))\\n\\n(defn sing \\n  ([start end]\\n    (str \\n      (verse start)\\n      (when (not= start end) \\n        (str \\"\\\\n\\" (sing (dec start) end)))))\\n  ([start]\\n    (sing start 0)))"}
89	33	fe44178c6ae9cf269250c49b	superseded	ruby	nucleotide-count	\N	\N	0	1	2015-08-24 05:55:37	2015-08-24 05:55:37	53	{"nucleotide-count.rb":"class DNA \\u003c String\\n  ADENINE, CYTOSINE, GUANINE, THYMINE, URACIL = 'A', 'C', 'G', 'T', 'U'\\n\\n  def count(base)\\n    raise ArgumentError, 'That is not a valid nucleobase.' unless is_a_valid_nucleobase(base)\\n    chars.count { |c| c == base }\\n  end\\n\\n  def nucleotide_counts\\n    initial_counts = { ADENINE =\\u003e 0, CYTOSINE =\\u003e 0, GUANINE =\\u003e 0, THYMINE =\\u003e 0 }\\n    chars.each_with_object(initial_counts) { |base, counts| counts[base] += 1 }\\n  end\\n\\n  private\\n  def is_a_valid_nucleobase(base)\\n    [ADENINE, CYTOSINE, GUANINE, THYMINE, URACIL].include? base\\n  end\\nend"}
90	33	82eb6fb70a465f87e7a6af5e	superseded	ruby	nucleotide-count	\N	\N	0	3	2015-09-02 09:53:59	2015-09-02 09:53:59	53	{"nucleotide-count.rb":"class DNA \\u003c String\\n  NUCLEOBASES = ['A', 'C', 'G', 'T', 'U']\\n\\n  def count(base)\\n    raise ArgumentError, 'That is not a valid nucleobase.' unless valid_nucleobase?(base)\\n    nucleotide_counts[base].to_i\\n  end\\n\\n  def nucleotide_counts\\n    initial_counts = nucleobases\\n    chars.each_with_object(initial_counts) { |base, counts| counts[base] += 1 }\\n  end\\n\\n  private\\n  def valid_nucleobase?(base)\\n    NUCLEOBASES.include? base\\n  end\\n\\n  def nucleobases\\n    dna_nucleobases = NUCLEOBASES.reject { |base| base == 'U' }\\n    Hash[*(dna_nucleobases.map { |base| [base, 0] }).flatten]\\n  end\\nend"}
91	33	9a1154c8b482781d1a4bc410	superseded	ruby	nucleotide-count	\N	\N	0	2	2015-09-04 23:24:46	2015-09-04 23:24:46	53	{"nucleotide-count.rb":"class DNA \\u003c String\\n  NUCLEOBASES = ['A', 'C', 'G', 'T', 'U']\\n\\n  def count(base)\\n    raise ArgumentError, 'That is not a valid nucleobase.' unless is_a_valid_nucleobase(base)\\n    nucleotide_counts[base].to_i\\n  end\\n\\n  def nucleotide_counts\\n    initial_counts = dna_nucleobase_hash\\n    chars.each_with_object(initial_counts) { |base, counts| counts[base] += 1 }\\n  end\\n\\n  private\\n  def is_a_valid_nucleobase(base)\\n    NUCLEOBASES.include? base\\n  end\\n\\n  def dna_nucleobase_hash\\n    dna_nucleobases = NUCLEOBASES.reject { |base| base == 'U' }\\n    Hash[*(dna_nucleobases.map { |base| [base, 0] }).flatten]\\n  end\\nend"}
92	33	3315f896a36699a0c889bdfa	superseded	ruby	nucleotide-count	\N	\N	0	4	2015-09-13 06:21:04	2015-09-13 06:21:04	53	{"nucleotide-count.rb":"class DNA \\u003c String\\n  NUCLEOBASES = ['A', 'C', 'G', 'T', 'U']\\n\\n  def count(base)\\n    unless valid_nucleobase?(base)\\n      raise ArgumentError, 'That is not a valid nucleobase.'\\n    end\\n    nucleotide_counts[base]\\n  end\\n\\n  def nucleotide_counts\\n    chars.each_with_object(initial_counts) do |base, counts|\\n      counts[base] += 1\\n    end\\n  end\\n\\n  private\\n  def valid_nucleobase?(base)\\n    NUCLEOBASES.include? base\\n  end\\n\\n  def initial_counts\\n    dna_nucleobases = Hash.new(0)\\n    (NUCLEOBASES - ['U']).each_with_object(dna_nucleobases) do |base|\\n      dna_nucleobases[base] = 0\\n    end\\n  end\\nend"}
93	33	b57209122a42e4d55f4b7e67	hibernating	ruby	nucleotide-count	\N	\N	0	5	2016-02-10 10:45:51	2016-02-10 10:45:51	53	{"nucleotide-count.rb":"class DNA \\u003c String\\n  NUCLEOBASES = ['A', 'C', 'G', 'T', 'U']\\n\\n  def count(base)\\n    unless valid_nucleobase?(base)\\n      raise ArgumentError, 'That is not a valid nucleobase.'\\n    end\\n    chars.count(base)\\n  end\\n\\n  def nucleotide_counts\\n    (NUCLEOBASES - ['U']).each_with_object({}) do |base, counts|\\n      counts[base] = count(base)\\n    end\\n  end\\n\\n  private\\n  def valid_nucleobase?(base)\\n    NUCLEOBASES.include? base\\n  end\\nend"}
94	33	1d79f577870e5beb07202f0a	\N	haskell	allergies	\N	\N	0	1	2015-08-05 23:31:05	2015-08-05 23:31:05	54	{"Allergies.hs":"module Allergies where\\n\\ndata Allergen = Eggs | Peanuts | Shellfish | Strawberries | Tomatoes | Chocolate | Pollen | Cats deriving (Enum, Eq, Show)\\n\\nallergies :: Int -\\u003e [Allergen]\\nallergies n | n \\u003c 0 = undefined\\nallergies n = allergies' n [Eggs ..]\\n  where allergies' x [] = []\\n        allergies' x (a:as) = let next = allergies' (x `div` 2) as\\n                              in if x `mod` 2 == 1 then a:next else next\\n\\nisAllergicTo :: Allergen -\\u003e Int -\\u003e Bool\\nisAllergicTo allergen n = allergen `elem` allergies n"}
95	33	c0f77ddce033650d50c7c5ac	done	javascript	leap	\N	\N	0	1	2016-03-10 08:36:04	2016-03-10 08:36:04	55	{"leap.js":"function isLeapYear(year) {\\n    return year % 4 === 0 \\u0026\\u0026 (year % 100 !== 0 || year % 400 === 0);\\n}\\n\\nmodule.exports = isLeapYear;"}
96	33	9ba0c744e47c772a323dbe5a	pending	python	sublist	\N	\N	0	1	2015-09-02 20:48:32	2015-09-02 20:48:32	56	{"sublist.py":"SUBLIST = \\"SUBLIST\\"\\r\\nSUPERLIST = \\"SUPERLIST\\"\\r\\nEQUAL = \\"EQUAL\\"\\r\\nUNEQUAL = \\"UNEQUAL\\"\\r\\n\\r\\ndef check_lists(list1, list2):\\r\\n\\tlist1, list2 = sorted(list1), sorted(list2)\\r\\n\\tif list1 == list2:\\r\\n\\t\\treturn EQUAL\\r\\n\\tsubsup = 0 if len(list1) \\u003c len(list2) else 1\\r\\n\\tif subsup:\\r\\n\\t\\tlist1, list2 = list2, list1\\r\\n\\twhile list1:\\r\\n\\t\\ttry:\\r\\n\\t\\t\\tlist2.pop(list2.index(list1.pop()))\\r\\n\\t\\texcept ValueError:\\r\\n\\t\\t\\treturn UNEQUAL\\r\\n\\treturn SUPERLIST if subsup else SUBLIST"}
97	38	bdf93a096412a1b32a375cc4	done	cpp	grains	\N	\N	0	1	2016-03-22 15:38:32	2016-03-22 15:38:32	57	{"/cpp/grains/grains.cpp":"/** Contents of grains.h:\\n#ifndef GRAINS_H\\n#define GRAINS_H\\n\\nnamespace grains\\n{\\nunsigned long long int square(int);\\nunsigned long long int total();\\n}\\n\\n#endif\\n**/\\n\\n#include \\"grains.h\\"\\n#include \\u003ccmath\\u003e\\n\\nnamespace grains\\n{\\n\\nunsigned long long int square(int num) {\\n    return pow(2, num-1);\\n}\\n\\nunsigned long long int total() {\\n    unsigned long long int val = 0;\\n    for (int i=1; i\\u003c=64; i++) {\\n        val += square(i);\\n    }\\n    return val;\\n}\\n\\n}"}
98	38	e61ad1cdcbb6fb54ee17b2e1	pending	python	hexadecimal	\N	\N	0	1	2016-03-22 05:13:00	2016-03-22 05:13:00	58	{"hexadecimal.py":"#-*- encoding: utf-8 -*-\\n\\nHEXCHARS = \\"0123456789abcdef\\"\\nHEXCHAR_MAP={\\"0\\":0, \\"1\\":1, \\"2\\":2, \\"3\\":3, \\"4\\":4, \\"5\\":5, \\"6\\":6, \\"7\\":7, \\"8\\":8, \\"9\\":9,\\n             \\"a\\":10, \\"b\\":11, \\"c\\":12, \\"d\\":13, \\"e\\":14, \\"f\\":15}\\n\\ndef hexa(hexstring):\\n    decimal = 0\\n    for c in hexstring.lower():\\n        if c not in HEXCHARS: \\n            raise ValueError(\\"Invalid hex-string %s.\\" % hexstring)\\n        decimal = (decimal \\u003c\\u003c 4) + HEXCHARS.index(c) \\n        ## I guess using a dict may be faster, but it's not...\\n        ##decimal = (decimal \\u003c\\u003c 4) + HEXCHAR_MAP[c]\\n    return decimal"}
99	40	da4fea9e355df8cdecdace6e	hibernating	ruby	hamming	\N	\N	0	1	2016-02-27 02:06:41	2016-02-27 02:06:41	59	{"/ruby/hamming/hamming.rb":"class Hamming\\n  attr_reader :v1, :v2, :value\\n\\n  def initialize(v1, v2)\\n    @v1 = v1\\n    @v2 = v2\\n    @value = 0\\n  end\\n\\n  def compute\\n    0.upto(comparison_length) do |index|\\n      increment if v1[index] != v2[index]\\n    end\\n    value\\n  end\\n\\n  def increment\\n    @value += 1\\n  end\\n\\n  def comparison_length\\n    [v1.length, v2.length].min - 1\\n  end\\n\\n  def self.compute(v1, v2)\\n    new(v1, v2).compute\\n  end\\nend"}
100	40	12b64ff181f0737478db7f0a	\N	rust	allergies	\N	\N	0	1	2016-02-02 07:50:28	2016-02-02 07:50:28	60	{"lib.rs":"#[derive(Copy, Clone, PartialEq, Debug)]\\npub enum Allergen {\\n    Eggs         = 1 \\u003c\\u003c 0,\\n    Peanuts      = 1 \\u003c\\u003c 1,\\n    Shellfish    = 1 \\u003c\\u003c 2,\\n    Strawberries = 1 \\u003c\\u003c 3,\\n    Tomatoes     = 1 \\u003c\\u003c 4,\\n    Chocolate    = 1 \\u003c\\u003c 5,\\n    Pollen       = 1 \\u003c\\u003c 6,\\n    Cats         = 1 \\u003c\\u003c 7,\\n}\\n\\nconst ALL_ALLERGIES: [Allergen; 8] = [\\n    Allergen::Eggs,\\n    Allergen::Peanuts,\\n    Allergen::Shellfish,\\n    Allergen::Strawberries,\\n    Allergen::Tomatoes,\\n    Allergen::Chocolate,\\n    Allergen::Pollen,\\n    Allergen::Cats];\\n\\npub struct Allergies(pub u8);\\n\\nimpl Allergies {\\n    pub fn is_allergic_to(\\u0026self, a: \\u0026Allergen) -\\u003e bool {\\n        (self.0 \\u0026 *a as u8) != 0\\n    }\\n\\n    pub fn allergies(\\u0026self) -\\u003e Vec\\u003cAllergen\\u003e {\\n        ALL_ALLERGIES.iter().filter(|a| self.is_allergic_to(\\u0026a)).cloned().collect()\\n    }\\n}"}
101	40	84e075414bb4adeef1cf5fa0	\N	ocaml	minesweeper	\N	\N	0	1	2016-01-16 03:53:05	2016-01-16 03:53:05	61	{"minesweeper.ml":"open Core.Std\\n\\nlet increment_map map key =\\n  Int.Map.change map key (fun x -\\u003e Some (Option.value x ~default:0 + 1))\\n\\nlet counts (board: string list) : int Int.Map.t =\\n  let h = List.length board\\n  in\\n  List.foldi board ~init:Int.Map.empty ~f:(fun y map row -\\u003e\\n    row |\\u003e String.to_list\\n        |\\u003e List.filter_mapi ~f:(fun i -\\u003e function '*' -\\u003e Some i | _ -\\u003e None)\\n        |\\u003e List.fold ~init:map ~f:(fun map x -\\u003e\\n            List.fold [-1; 0; 1] ~init:map ~f:(fun map dx -\\u003e\\n              List.fold [-1; 0; 1] ~init:map ~f:(fun map dy -\\u003e\\n                increment_map map ((x + dx) * (h + 2) + y + dy)))))\\n\\n\\nlet annotate (board: string list) : string list =\\n  let h = List.length board\\n  and cs = counts board\\n  in\\n  List.mapi board ~f:(fun y row -\\u003e\\n    row |\\u003e String.to_list\\n        |\\u003e List.mapi ~f:(fun x c -\\u003e\\n            match c, Int.Map.find cs (x * (h + 2) + y) with\\n            | '*', _ -\\u003e '*'\\n            | _, None -\\u003e ' '\\n            | _, Some(n) -\\u003e (Int.to_string n).[0])\\n        |\\u003e String.of_char_list)"}
102	40	00f0aa7891535865c0fd00e8	\N	ocaml	minesweeper	\N	\N	0	2	2016-02-24 08:25:21	2016-02-24 08:25:21	61	{"minesweeper.ml":"open Core.Std\\n\\nlet increment_map map key =\\n  Int.Map.change map key (fun x -\\u003e Some (Option.value x ~default:0 + 1))\\n\\nlet counts (board: string list) : int Int.Map.t =\\n  let h = List.length board\\n  in\\n  List.foldi board ~init:Int.Map.empty ~f:(fun y map row -\\u003e\\n    row |\\u003e String.to_list\\n        |\\u003e List.filter_mapi ~f:(fun i -\\u003e function '*' -\\u003e Some i | _ -\\u003e None)\\n        |\\u003e List.fold ~init:map ~f:(fun map x -\\u003e\\n            List.fold [-1; 0; 1] ~init:map ~f:(fun map dx -\\u003e\\n              List.fold [-1; 0; 1] ~init:map ~f:(fun map dy -\\u003e\\n                increment_map map ((x + dx) * (h + 2) + y + dy)))))\\n\\n\\nlet annotate (board: string list) : string list =\\n  let h = List.length board\\n  and cs = counts board\\n  in\\n  List.mapi board ~f:(fun y row -\\u003e\\n    String.mapi row ~f:(fun x c -\\u003e\\n      match c, Int.Map.find cs (x * (h + 2) + y) with\\n      | '*', _ -\\u003e '*'\\n      | _, None -\\u003e ' '\\n      | _, Some(n) -\\u003e (Int.to_string n).[0]))"}
118	46	aa0214b98d07711f7d60a21a	done	python	accumulate	\N	\N	0	1	2016-01-04 10:56:43	2016-01-04 10:56:43	74	{"accumulate.py":"def accumulate(arr, fun):\\n\\tresult = []\\n\\tfor m in arr:\\n\\t\\tresult.append(fun(m))\\n\\treturn result"}
103	40	627d8426e798f0aa9978516e	\N	javascript	accumulate	\N	\N	0	1	2016-01-14 12:07:29	2016-01-14 12:07:29	62	{"accumulate.js":"function accumulate(collection, callback) {\\r\\n\\tif ('undefined' === typeof collection) {\\r\\n\\t\\treturn [];\\r\\n\\t}\\r\\n\\t\\r\\n\\tvar resultCollection = [];\\r\\n\\t\\r\\n\\tvar collectionLength = collection.length;\\r\\n\\tfor (var i = 0; i \\u003c collectionLength; ++i) {\\r\\n\\t\\tresultCollection[i] = callback(collection[i]);\\r\\n\\t}\\r\\n\\t\\r\\n\\treturn resultCollection;\\r\\n}\\r\\n\\r\\nmodule.exports = accumulate;"}
104	40	a0b50c87a2121c6ebb72a98c	done	clojure	beer-song	\N	\N	0	1	2016-01-29 05:30:35	2016-01-29 05:30:35	63	{"beer_song.clj":"(ns beer-song\\n  (:require  [clojure.string :as str]))\\n\\n(defn get-words\\n  [n]\\n  (cond\\n    (\\u003e n 1) (str n \\" bottles\\")\\n    (= n 1) (str n \\" bottle\\")\\n    (= n 0) (str \\"no more bottles\\")))\\n\\n(defn get-action\\n  [n]\\n  (cond\\n    (\\u003e n 1) \\"Take one down and pass it around\\"\\n    (= n 1) \\"Take it down and pass it around\\"\\n    (= n 0) \\"Go to the store and buy some more\\"))\\n\\n(defn verse\\n  [n]\\n  (let [cur n\\n        curstr (get-words cur)\\n        curact (get-action cur)\\n        nexstr (get-words (if (= cur 0) 99 (dec n)))]\\n    (str (str/capitalize curstr) \\" of beer on the wall, \\" curstr \\" of beer.\\\\n\\" curact \\", \\" nexstr \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([s]\\n   (sing s 0))\\n  ([s e]\\n   (str/join \\"\\\\n\\" (map #(verse %) (reverse (range e (inc s)))))))"}
105	40	f0d1dd3392a18c0ba940cd90	\N	ruby	word-count	\N	\N	0	2	2016-01-21 18:44:35	2016-01-21 18:44:35	64	{"word_count.rb":"class Phrase\\n  VERSION = 1\\n  attr_reader :phrase_words\\n  attr_accessor :word_counts\\n\\n  def initialize(phrase)\\n    @phrase = phrase || ''\\n    @phrase_words = @phrase.downcase.scan(/[\\\\w\\\\d']+/)\\n  end\\n\\n  def word_count\\n    return nil if phrase_words.empty?\\n\\n    # inject-version\\n    # I think it's slightly less readable and only reduces the LOC by 1\\n    # phrase_words.inject(Hash.new(0)) do |counts, word|\\n    #   counts[strip_quotes(word)] += 1\\n    #   counts\\n    # end\\n\\n    counts = Hash.new(0)\\n    phrase_words.each do |word|\\n      counts[strip_quotes(word)] += 1\\n    end\\n    counts\\n  end\\n\\n  private\\n\\n  # 'word' -\\u003e word\\n  # \\"word\\" -\\u003e word\\n  def strip_quotes(word)\\n    return word unless word[0] == word[-1]\\n    return word unless [\\"'\\", '\\"'].include?(word[0])\\n    word.slice(1..-2)\\n  end\\nend"}
106	40	be3f54cd448d2852fe3fcd1e	\N	ruby	word-count	\N	\N	0	3	2016-02-02 09:32:42	2016-02-02 09:32:42	64	{"word_count.rb":"class Phrase\\n  VERSION = 1\\n  attr_reader :phrase_words\\n  attr_accessor :word_counts\\n\\n  def initialize(phrase)\\n    @phrase = phrase || ''\\n    @phrase_words = @phrase.downcase.scan(/[\\\\w\\\\d']+/)\\n  end\\n\\n  def word_count\\n    return nil if phrase_words.empty?\\n    phrase_words.each_with_object(Hash.new(0)) do |word, counts|\\n      counts[strip_quotes(word)] += 1\\n    end\\n  end\\n\\n  private\\n\\n  # 'word' -\\u003e word\\n  # \\"word\\" -\\u003e word\\n  def strip_quotes(word)\\n    return word unless word[0] == word[-1]\\n    return word unless [\\"'\\", '\\"'].include?(word[0])\\n    word.slice(1..-2)\\n  end\\nend"}
107	40	7f397e584bd6c2bee5f5af2b	\N	ruby	word-count	\N	\N	0	4	2016-02-17 18:03:53	2016-02-17 18:03:53	64	{"word_count.rb":"class Phrase\\n  VERSION = 1\\n  attr_reader :phrase_words\\n  attr_accessor :word_counts\\n\\n  def initialize(phrase)\\n    @phrase_words = (phrase || '').downcase.scan(/[\\\\w\\\\d']+/)\\n  end\\n\\n  def word_count\\n    return nil if phrase_words.empty?\\n    phrase_words.each_with_object(Hash.new(0)) do |word, counts|\\n      counts[strip_quotes(word)] += 1\\n    end\\n  end\\n\\n  private\\n\\n  # 'word' -\\u003e word\\n  # \\"word\\" -\\u003e word\\n  def strip_quotes(word)\\n    return word unless word[0] == word[-1] \\u0026\\u0026 [\\"'\\", '\\"'].include?(word[0])\\n    word.slice(1..-2)\\n  end\\nend"}
108	40	45ac9c7f4ba0bc4ee22300e8	\N	ruby	word-count	\N	\N	0	1	2016-03-18 21:33:52	2016-03-18 21:33:52	64	{"word_count.rb":"class Phrase\\n  VERSION = 1\\n  attr_reader :phrase\\n  attr_accessor :word_counts\\n\\n  def initialize(phrase)\\n    @phrase = clean_phrase(phrase) || ''\\n  end\\n\\n  def word_count\\n    return nil if phrase.nil? || phrase.empty?\\n\\n    word_counts = {}\\n    phrase.split(' ').each do |word|\\n      word = strip_quotes(word)\\n      word_counts[word] ||= 0\\n      word_counts[word] += 1\\n    end\\n    word_counts\\n  end\\n\\n  private\\n\\n  def clean_phrase(phrase)\\n    phrase.gsub(/[^ a-zA-Z0-9']/, ' ').downcase\\n  end\\n\\n  # 'word' -\\u003e word\\n  # \\"word\\" -\\u003e word\\n  def strip_quotes(word)\\n    return word unless word[0] == word[-1]\\n    return word unless [\\"'\\", '\\"'].include?(word[0])\\n    word.slice(1..-2)\\n  end\\nend"}
109	40	ba23e633489e165e1ac17f90	hibernating	ruby	grains	\N	\N	0	1	2016-03-02 05:32:21	2016-03-02 05:32:21	65	{"/ruby/grains/grains.rb":"class Grains\\n  def square(tile_number)\\n    2**(tile_number - 1)\\n  end\\n\\n  def total(total=0)\\n    64.times do |iteration|\\n      total += 2**iteration\\n    end\\n    total\\n  end\\nend"}
110	44	7b4b42107dc7260f9f0c9869	pending	clojure	rna-transcription	\N	\N	0	1	2015-11-11 09:07:45	2015-11-11 09:07:45	66	{"dna.clj":"(ns dna)\\n\\n(defn to-rna [strand]\\n  (assert (every? {\\\\C \\\\G \\\\G \\\\C \\\\T \\\\A \\\\A \\\\U} strand))\\n  (apply str (map {\\\\C \\\\G \\\\G \\\\C \\\\T \\\\A \\\\A \\\\U} strand)))"}
111	44	4659e58a5f12105c7d780236	hibernating	python	difference-of-squares	\N	\N	0	1	2015-12-24 01:55:48	2015-12-24 01:55:48	67	{"/python/difference-of-squares/difference_of_squares.py":"def difference(num):\\n    return square_of_sum(num) - sum_of_squares(num)\\n\\ndef square_of_sum(num):\\n    return reduce(lambda x, y: x + y, range(num + 1)) ** 2\\n\\ndef sum_of_squares(num):\\n    return reduce(lambda x, y: x + y**2, range(num + 1))"}
112	44	cb3b7fb85e3e3174775fd750	\N	elixir	word-count	\N	\N	0	1	2016-01-19 13:00:40	2016-01-19 13:00:40	68	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    String.replace(sentence, ~r|[^[:alnum:] _-]|u, \\"\\")\\n    |\\u003e String.split(~r|[ _]+|)\\n    |\\u003e Enum.group_by(\\u0026String.downcase(\\u00261))\\n    |\\u003e Enum.into(%{}, fn {word, uses} -\\u003e {word, length(uses)} end)\\n  end\\nend"}
113	44	f8f1acd98f346ed182903d34	\N	ruby	sieve	\N	\N	0	1	2015-11-24 07:26:12	2015-11-24 07:26:12	69	{"sieve.rb":"class Sieve\\n  def initialize n\\n    @n = n\\n  end\\n\\n  def primes\\n    prime_candidates = (2..@n).to_a\\n    prime_candidates.each_with_object([]) do |num, primes|\\n      if num != \\"x\\"\\n        primes \\u003c\\u003c num\\n        counter = num + num\\n        while counter \\u003c= @n do\\n          prime_candidates[counter-2] = \\"x\\"\\n          counter += num\\n        end\\n      end\\n    end\\n  end\\nend"}
114	44	12a46ea01e848c06f76bc8fd	\N	haskell	accumulate	\N	\N	0	1	2015-12-19 18:25:52	2015-12-19 18:25:52	70	{"Accumulate.hs":"module Accumulate (accumulate) where\\n\\naccumulate :: (a -\\u003e b) -\\u003e [a] -\\u003e [b]\\naccumulate _ [] = []\\naccumulate f (x:xs) = (f x) : accumulate f xs"}
115	44	3723989161394a941f7f09fb	pending	python	leap	\N	\N	0	1	2015-11-19 07:55:24	2015-11-19 07:55:24	71	{"year.py":"def is_leap_year(year):\\n\\tif year % 4 == 0:\\n\\t\\tif year % 100 == 0:\\n\\t\\t\\treturn (year % 400 == 0)\\n\\n\\t\\treturn True\\n\\n\\treturn False"}
116	44	80d00b3eb9cc3863561363c8	\N	scala	hello-world	\N	\N	0	1	2015-11-11 17:22:53	2015-11-11 17:22:53	72	{"src/main/scala/HelloWorld.scala":"object HelloWorld {\\n  def hello() = \\"Hello, World!\\"\\n\\n  def hello(name: String) = s\\"Hello, $name!\\"\\n}"}
119	46	947497d585b6d0a3726757c4	superseded	ruby	rna-transcription	\N	\N	0	1	2015-11-26 17:41:01	2015-11-26 17:41:01	75	{"rna_transcription.rb":"class InvalidDNAStrand \\u003c ArgumentError\\nend\\n\\nclass InvalidRNAStrand \\u003c ArgumentError\\nend\\n\\n# If given a DNA or RNA strand, will use appropriate static methods to create the\\n#   transcription of those strands\\nclass Complement\\n  DNA_NUCLEOTIDES = %w(C G T A)\\n  RNA_NUCLEOTIDES = %w(G C A U)\\n  RNA_COMPLEMENT = {}\\n  DNA_NUCLEOTIDES.zip(RNA_NUCLEOTIDES) do |dna, complement|\\n    RNA_COMPLEMENT[dna] = complement\\n  end\\n\\n  def self.of_dna(dna_strand)\\n    fail InvalidDNAStrand unless valid_strand? dna_strand, DNA_NUCLEOTIDES\\n\\n    build_transcription_from_strand_with_hash_method dna_strand, :fetch\\n  end\\n\\n  def self.of_rna(rna_strand)\\n    fail InvalidRNAStrand unless valid_strand? rna_strand, RNA_NUCLEOTIDES\\n\\n    build_transcription_from_strand_with_hash_method rna_strand, :key\\n  end\\n\\n  def self.valid_strand?(strand, nucleotides)\\n    strand.chars.all? do |nucleotide|\\n      nucleotides.include? nucleotide\\n    end\\n  end\\n  private_class_method :valid_strand?\\n\\n  def self.build_transcription_from_strand_with_hash_method(strand, method)\\n    strand.chars.inject('') do |transcription, nucleotide|\\n      transcription \\u003c\\u003c RNA_COMPLEMENT.public_send(method, nucleotide)\\n    end\\n  end\\n  private_class_method :build_transcription_from_strand_with_hash_method\\nend"}
120	46	4b8a1801bb031205ff79a8e8	pending	ruby	rna-transcription	\N	\N	0	2	2016-01-14 08:38:31	2016-01-14 08:38:31	75	{"rna_transcription.rb":"class InvalidDNAStrand \\u003c ArgumentError\\nend\\n\\nclass InvalidRNAStrand \\u003c ArgumentError\\nend\\n\\n# If given a DNA or RNA strand, will use appropriate static methods to create the\\n#   transcription of those strands\\nclass Complement\\n  DNA_NUCLEOTIDES = %w(C G T A)\\n  RNA_NUCLEOTIDES = %w(G C A U)\\n  RNA_COMPLEMENT = {}\\n  DNA_NUCLEOTIDES.zip(RNA_NUCLEOTIDES) do |dna, complement|\\n    RNA_COMPLEMENT[dna] = complement\\n  end\\n\\n  def self.of_dna(dna_strand)\\n    fail InvalidDNAStrand unless valid_strand? dna_strand, DNA_NUCLEOTIDES\\n\\n    replace_nucleotides_in_strand(dna_strand, DNA_NUCLEOTIDES, RNA_NUCLEOTIDES)\\n  end\\n\\n  def self.of_rna(rna_strand)\\n    fail InvalidRNAStrand unless valid_strand? rna_strand, RNA_NUCLEOTIDES\\n\\n    replace_nucleotides_in_strand(rna_strand, RNA_NUCLEOTIDES, DNA_NUCLEOTIDES)\\n  end\\n\\n  def self.valid_strand?(strand, nucleotides)\\n    strand.chars.all? do |nucleotide|\\n      nucleotides.include? nucleotide\\n    end\\n  end\\n  private_class_method :valid_strand?\\n\\n  def self.replace_nucleotides_in_strand(strand, from_ary, to_ary)\\n    strand.tr(from_ary.join, to_ary.join)\\n  end\\n  private_class_method :replace_nucleotides_in_strand\\nend"}
121	46	dc5dd9a7a8cdee726458041a	done	ruby	grains	\N	\N	0	1	2016-03-05 23:15:26	2016-03-05 23:15:26	76	{"grains.rb":"class Grains\\n  NUM_OF_SQUARES = 64\\n  attr_reader :squares\\n\\n  def initialize\\n    @squares = []\\n    NUM_OF_SQUARES.times do |i|\\n      @squares[i] = 2**(i)\\n    end\\n  end\\n\\n  def square(num)\\n    squares[num-1]\\n  end\\n\\n  def total\\n    squares.inject(\\u0026:+)\\n  end\\n\\nend"}
122	46	34026c0cc167a1f49a30f8c2	\N	javascript	hello-world	\N	\N	0	1	2015-11-10 08:44:46	2015-11-10 08:44:46	77	{"hello-world.js":"//\\r\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\r\\n// convenience to get you started writing code faster.\\r\\n// Make sure to look at test.script.js--that should give you some hints about what is\\r\\n// expected here.\\r\\n\\r\\nvar HelloWorld = function() {};\\r\\n\\r\\nHelloWorld.prototype.hello = function(input) {\\r\\n  if (input == '') {\\r\\n    return 'Hello, World!';\\r\\n  }\\r\\n  else {\\r\\n    return 'Hello, ' + input + '!';\\r\\n  }\\r\\n};\\r\\n\\r\\nmodule.exports = HelloWorld;"}
123	48	19c26fbcbd3bf826df1618e2	hibernating	ruby	rna-transcription	\N	\N	0	1	2015-12-04 07:17:10	2015-12-04 07:17:10	78	{"complement.rb":"class Complement\\n\\tdef self.of_dna(rna)\\n\\t\\trna.gsub!(/[GCTA]/,'G' =\\u003e 'C', 'C' =\\u003e 'G', 'T' =\\u003e 'A', 'A' =\\u003e 'U')\\n\\tend\\n\\n\\tdef self.of_rna(dna)\\n\\t\\tdna.gsub!(/[GCAU]/,'G' =\\u003e 'C', 'C' =\\u003e 'G', 'U' =\\u003e 'A', 'A' =\\u003e 'T')\\n\\tend\\nend"}
124	49	39e5fefbea2cf6a330dac4e1	done	ruby	raindrops	\N	\N	0	1	2016-03-02 01:03:28	2016-03-02 01:03:28	79	{"raindrops.rb":"class Raindrops\\n  def convert(n)\\n    string = ''\\n    string \\u003c\\u003c 'Pling' if n % 3 == 0\\n    string \\u003c\\u003c 'Plang' if n % 5 == 0\\n    string \\u003c\\u003c 'Plong' if n % 7 == 0\\n    return string unless string.empty?\\n    n.to_s\\n  end\\nend"}
125	49	1545cc83e6bf279d856685b2	superseded	python	gigasecond	\N	\N	0	1	2016-02-27 06:14:19	2016-02-27 06:14:19	80	{"python/gigasecond/gigasecond.py":"import datetime\\n\\ndef add_gigasecond(givendate):\\n\\t\\"\\"\\"\\n\\tCalculates the date that is 1 Gs (gigaseconds) after the given date.\\n\\t\\"\\"\\"\\n\\treturn givendate+datetime.timedelta(0, 1e9)"}
126	49	992da329cdd505523948df71	superseded	python	gigasecond	\N	\N	0	2	2016-03-06 03:44:53	2016-03-06 03:44:53	80	{"python/gigasecond/gigasecond.py":"import datetime\\n\\ndef add_gigasecond(givendate):\\n\\t\\"\\"\\"\\n\\tCalculates the date that is 1 Gs (gigaseconds) after the given date.\\n\\t\\"\\"\\"\\n\\treturn givendate+datetime.timedelta(seconds=1e9)"}
127	49	5873f42dce6259b3997135ae	pending	python	gigasecond	\N	\N	0	3	2016-03-11 21:54:23	2016-03-11 21:54:23	80	{"python/gigasecond/gigasecond.py":"from datetime import timedelta\\n\\nGIGASECOND = timedelta(seconds=1e9)\\n\\n\\ndef add_gigasecond(givendate):\\n    \\"\\"\\"\\n    Calculates the date that is 1 Gs (gigaseconds) after the given date.\\n    \\"\\"\\"\\n    return givendate+GIGASECOND"}
128	49	d8ef634bab892ea1918e81c6	hibernating	clojure	bob	\N	\N	0	1	2016-03-10 18:35:55	2016-03-10 18:35:55	81	{"bob.clj":"(ns bob)\\n\\n(defn response-for [a] \\n  (if (and (= a (.toUpperCase a)) (not (= a (.toLowerCase a))))\\n    \\"Whoa, chill out!\\"\\n  (if (.endsWith a \\"?\\") \\n    \\"Sure.\\"\\n  (if (= (.trim a) \\"\\")\\n    \\"Fine. Be that way!\\" \\n  \\"Whatever.\\")))\\n)"}
129	49	9ad652441cd8c49264b1f450	\N	php	hamming	\N	\N	0	1	2016-03-01 17:41:37	2016-03-01 17:41:37	82	{"/php/hamming/hamming.php":"\\u003c?php\\n\\n//\\n// This is only a SKELETON file for the \\"Hamming\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nfunction distance($a, $b)\\n{\\n  if(strlen($a) != strlen($b))\\n    throw new InvalidArgumentException(\\"DNA strands must be of equal length.\\", 1);\\n\\n  $differences = 0;\\n  $a = str_split($a);\\n  $b = str_split($b);\\n  foreach ($a as $key =\\u003e $value)\\n    $differences += ($value == $b[$key]) ? 0 : 1;\\n  return $differences;\\n}"}
130	26	3018c7557402b28e4288892c	pending	ruby	leap	\N	\N	0	2	2015-12-01 03:28:00	2015-12-01 03:28:00	83	{"year.rb":"class Year\\r\\n\\tdef self.leap?(year)\\r\\n\\t\\t(year%4==0 \\u0026\\u0026 year%100!=0)  || year%400==0\\r\\n\\tend\\r\\nend"}
131	26	55f80b5903a285926d8bed47	superseded	ruby	leap	\N	\N	0	1	2015-12-12 01:13:42	2015-12-12 01:13:42	83	{"year.rb":"class Year\\r\\n\\tdef self.leap?(year)\\r\\n\\t\\t(year%4==0 \\u0026\\u0026 year%100!=0)  || year%400==0 ? \\"Yes, #{year} is a leap year\\" : \\"No, #{year} is not a leap year\\"\\r\\n\\tend\\r\\nend"}
132	7	599fc60f681ffe67c8c9ad27	done	javascript	rna-transcription	\N	\N	0	1	2016-01-26 01:45:54	2016-01-26 01:45:54	84	{"rna-transcription.js":"(function() {\\n    \\"use strict\\";\\n\\n    function DNA(sequence) {\\n        this.nucleotideSequence = sequence;\\n    }\\n\\n    DNA.prototype.toRNA = function() {\\n      return this.nucleotideSequence.replace(/T/g, 'U');\\n    };\\n\\n    module.exports = DNA;\\n}());"}
133	23	e82c2b45ae89de3efd8de496	pending	go	nucleotide-count	\N	\N	0	1	2016-01-24 05:23:18	2016-01-24 05:23:18	85	{"/go/nucleotide-count/nucleotide-count.go":"package dna\\n\\nimport \\"errors\\"\\n\\nvar (\\n\\tisNuke = map[byte]bool{\\n\\t\\t'A': true,\\n\\t\\t'C': true,\\n\\t\\t'T': true,\\n\\t\\t'G': true,\\n\\t}\\n)\\n\\ntype Histogram map[byte]int\\n\\nfunc DNA(strand string) *Histogram {\\n\\th := Histogram{\\n\\t\\t'A': 0,\\n\\t\\t'C': 0,\\n\\t\\t'T': 0,\\n\\t\\t'G': 0,\\n\\t}\\n\\n\\tfor _, n := range strand {\\n\\t\\tif isNuke[byte(n)] {\\n\\t\\t\\th[byte(n)] += 1\\n\\t\\t}\\n\\t}\\n\\n\\treturn \\u0026h\\n}\\n\\nfunc (h *Histogram) Count(r byte) (c int, err error) {\\n\\tif !isNuke[r] {\\n\\t\\treturn 0, errors.New(\\"Invalid nucleotide\\")\\n\\t} else {\\n\\t\\treturn (*h)[r], err\\n\\t}\\n\\n}\\n\\nfunc (h *Histogram) Counts() Histogram {\\n\\treturn *h\\n}"}
134	23	976e0b8d2233f8972fe8189d	\N	java	crypto-square	\N	\N	0	1	2016-02-04 08:15:14	2016-02-04 08:15:14	86	{"src/main/java/Crypto.java":"/**\\n * Crypto.java\\n * Generates a crypto square with the given input.\\n */\\nimport java.util.Arrays;\\nimport java.util.List;\\nimport java.util.stream.IntStream;\\n\\nimport static java.util.stream.Collectors.joining;\\n\\npublic class Crypto {\\n\\n    private final String normalizedPlaintext;\\n    private final int squareSize;\\n\\n    public Crypto(String text) {\\n        normalizedPlaintext = text.replaceAll(\\"\\\\\\\\p{Space}|\\\\\\\\p{Punct}\\", \\"\\").toLowerCase();\\n        squareSize = (int) Math.ceil(Math.sqrt(normalizedPlaintext.length()));\\n    }\\n\\n    /**\\n     * @return The plaintext, all lowercase, with the spaces and punctuation removed.\\n     */\\n    public String getNormalizedPlaintext() {\\n        return normalizedPlaintext;\\n    }\\n\\n    /**\\n     * @return The length of the crypto square sides.\\n     */\\n    public int getSquareSize() {\\n        return squareSize;\\n    }\\n\\n    /**\\n     * @return The plaintext as a square.\\n     */\\n    public List\\u003cString\\u003e getPlaintextSegments() {\\n        // Split every {@code squareSize} characters.\\n        return Arrays.asList(normalizedPlaintext.split(\\"(?\\u003c=\\\\\\\\G.{\\" + squareSize +\\"})\\"));\\n    }\\n\\n    /**\\n     * @return The text encrypted with the square cipher.\\n     */\\n    public String getCipherText() {\\n        return getNormalizedCipherText().replaceAll(\\" \\", \\"\\");\\n    }\\n\\n    /**\\n     * @return The cypher text with each row separated by spaces.\\n     */\\n    public String getNormalizedCipherText() {\\n        final List\\u003cString\\u003e segments = getPlaintextSegments();\\n        return IntStream.range(0, squareSize).mapToObj(i -\\u003e // For each column of the square.\\n                        segments.stream()\\n                                .filter(s -\\u003e s.length() \\u003e i) // Skip strings that do not have column i.\\n                                .map(s -\\u003e String.valueOf(s.charAt(i))) // Get the char at that column as a string.\\n                                .collect(joining()) // Collect into a string.\\n        ).collect(joining(\\" \\")); // Then join with spaces.\\n    }\\n\\n}"}
135	23	f3e38d5432231c0838618f2a	superseded	elixir	prime-factors	\N	\N	0	1	2016-01-08 14:54:46	2016-01-08 14:54:46	87	{"prime_factors.exs":"defmodule PrimeFactors do\\n  @doc \\"\\"\\"\\n  Compute the prime factors for 'number'.\\n\\n  The prime factors are prime numbers that when multiplied give the desired\\n  number.\\n\\n  The prime factors of 'number' will be ordered lowest to highest. \\n  \\"\\"\\"\\n  @spec factors_for(pos_integer) :: [pos_integer]\\n  def factors_for(number) do\\n    factor(number, 2, [])\\n  end\\n\\n  defp factor(1, _, _), do: []\\n  defp factor(number, number, factor_list), do: Enum.reverse([number | factor_list])\\n  \\n  defp factor(number, prime, factor_list) when rem(number, prime) == 0 do\\n    factor(div(number, prime), prime, [prime | factor_list])\\n  end\\n\\n  defp factor(number, prime, factor_list) do\\n    factor(number, prime + 1, factor_list)\\n  end\\nend"}
136	23	56d2e1d829f1351b4c79c320	pending	elixir	prime-factors	\N	\N	0	2	2016-01-29 12:38:05	2016-01-29 12:38:05	87	{"prime_factors.exs":"defmodule PrimeFactors do\\n  @doc \\"\\"\\"\\n  Compute the prime factors for 'number'.\\n\\n  The prime factors are prime numbers that when multiplied give the desired\\n  number.\\n\\n  The prime factors of 'number' will be ordered lowest to highest. \\n  \\"\\"\\"\\n  @spec factors_for(pos_integer) :: [pos_integer]\\n  def factors_for(number) do\\n    factor(number, 2, [])\\n  end\\n\\n  defp factor(number, prime, factor_list) when number \\u003c prime, do: Enum.reverse(factor_list)\\n  \\n  defp factor(number, prime, factor_list) when rem(number, prime) == 0 do\\n    factor(div(number, prime), prime, [prime | factor_list])\\n  end\\n\\n  defp factor(number, prime, factor_list) do\\n    factor(number, prime + 1, factor_list)\\n  end\\nend"}
137	23	2a4423c31cf249785726c2e4	pending	ruby	robot-name	\N	\N	0	1	2016-01-02 09:41:27	2016-01-02 09:41:27	88	{"robot.rb":"# Robot Name Exercise\\n# Written in 2014 by Benjamin Shyong \\u003chello@benshyong.com\\u003e\\n\\nrequire 'singleton'\\n\\n# use singleton RobotName\\nclass RobotName\\n  include Singleton\\n  attr_accessor :names\\n\\n  def initialize\\n    @names = []\\n  end\\n\\n  def \\u003c\\u003c(object)\\n    @names.append(object)\\n  end\\nend\\n\\nclass Robot\\n  attr_accessor :name\\n\\n  def initialize\\n    @name ||= generate_name\\n  end\\n\\n  def name\\n    @name.nil? ? (@name = generate_name) : @name\\n  end\\n\\n  def reset\\n    @name = nil\\n  end\\n\\n  private\\n\\n  def generate_name\\n    generate = lambda {((0..1).map { (65 + rand(26)).chr } + (0..2).map{rand(10)}).join}\\n    while RobotName.instance.names.include?(@name) || @name.nil?\\n      @name = generate.call\\n    end\\n    RobotName.instance.names \\u003c\\u003c name\\n    @name\\n  end\\nend"}
138	17	cbe4bab6d2d3ea706b1915dc	pending	perl5	meetup	\N	\N	0	1	2015-12-23 16:13:33	2015-12-23 16:13:33	89	{"\\\\perl5\\\\meetup\\\\Meetup.pm":"package Meetup;\\r\\n\\r\\nuse strict;\\r\\nuse warnings;\\r\\n\\r\\nuse DateTime;\\r\\n\\r\\nsub new {\\r\\n\\t# Finds a meetup date\\r\\n\\tmy ($class, $month, $year) = @_;\\r\\n\\tmy $date = DateTime-\\u003enew( year  =\\u003e $year, month =\\u003e $month );\\r\\n\\tbless \\\\$date, $class;\\r\\n}\\r\\n\\r\\n# Tests to determine if date matches catagory\\r\\nmy %catagory = (\\"teenth\\" =\\u003e sub { my $date = shift; 13 \\u003c= $date-\\u003eday and $date-\\u003eday \\u003c= 19},\\r\\n\\t\\t\\t\\t\\"first\\" =\\u003e sub {my $date = shift; $date-\\u003eday \\u003c= 7},\\r\\n\\t\\t\\t\\t\\"second\\" =\\u003e sub {my $date = shift; 7 \\u003c $date-\\u003eday and $date-\\u003eday \\u003c= 14},\\r\\n\\t\\t\\t\\t\\"third\\" =\\u003e sub {my $date = shift; 14 \\u003c $date-\\u003eday and $date-\\u003eday \\u003c= 21},\\r\\n\\t\\t\\t\\t\\"fourth\\" =\\u003e sub {my $date = shift; 21 \\u003c $date-\\u003eday and $date-\\u003eday \\u003c= 28},\\r\\n\\t\\t\\t\\t\\"last\\" =\\u003e sub {my $date = shift; $date-\\u003eclone()-\\u003eadd(days =\\u003e 7)-\\u003emonth != $date-\\u003emonth},\\r\\n\\t\\t\\t   );\\r\\n\\r\\nsub day {\\r\\n\\t# Finds a date on a day of a particular type (first, last, teenth)\\r\\n\\tmy ($self, $day, $cat) = @_;\\r\\n\\t# Go over the whole month, skip days that aren't the correct weekday\\r\\n\\t# return the one that matches the catagory\\r\\n\\tfor (my $date = $$self-\\u003eclone(); $date-\\u003emonth == $$self-\\u003emonth; $date-\\u003eadd( days =\\u003e 1)) {\\r\\n\\t\\tnext unless lc $day eq lc $date-\\u003eday_name();\\r\\n\\t\\treturn $date if $catagory{lc $cat}-\\u003e($date);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n1;"}
139	17	2516ad7beff47ed1f63a344b	done	csharp	leap	\N	\N	0	1	2015-12-23 19:41:24	2015-12-23 19:41:24	90	{"Year.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace exercism.leap {\\r\\n    class Year {\\r\\n        static public bool IsLeap(int year) {\\r\\n            if (year % 4 != 0) {\\r\\n                return false;\\r\\n            } else {\\r\\n                if (year % 100 == 0) {\\r\\n                    if (year % 400 == 0) {\\r\\n                        return true;\\r\\n                    }\\r\\n                    return false;\\r\\n                }\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r"}
164	20	f4df306fd17b35a70222d0a1	\N	ruby	hexadecimal	\N	\N	0	1	2015-12-29 05:48:20	2015-12-29 05:48:20	109	{"hexadecimal.rb":"class Hexadecimal\\n\\n  attr_reader :hexstr\\n\\n  def initialize(hexstr)\\n    @hexstr = \\"#{hexstr}\\".downcase\\n  end\\n\\n  def to_decimal\\n    if hexstr.split(//).all?(\\u0026validate)\\n      parse\\n    else\\n      0\\n    end\\n  end\\n\\n  def parse\\n    multi = 1\\n    result = 0\\n    hexstr.reverse.each_char do |ch|\\n      result += (convert(ch) * multi)\\n      multi *= 16\\n    end\\n    result\\n  end\\n\\n  def convert(char)\\n    if char =~ /[0-9]/\\n      char.to_i\\n    else\\n      char.ord - 87\\n    end\\n  end\\n\\n  def validate\\n    proc { |digit| %w( 1 2 3 4 5 6 7 8 9 0 a b c d e f).include?(digit)}\\n  end\\nend"}
140	17	081bc9c14855336c0d94764b	done	ruby	simple-linked-list	\N	\N	0	1	2016-01-23 02:44:44	2016-01-23 02:44:44	91	{"simple_linked_list.rb":"class Element\\n\\n  attr_reader :datum, :next\\n  def initialize(datum, next_el)\\n    @datum = datum\\n    @next = next_el\\n  end\\n  \\n  def self.to_a(el)\\n    result = []\\n    return result unless el \\u0026\\u0026 el.datum\\n    current = el\\n    loop do\\n      result \\u003c\\u003c current.datum\\n      break unless current.next\\n      current = current.next\\n    end\\n    result\\n  end\\n  \\n  def to_a\\n    self.class.to_a(self)\\n  end\\n  \\n  def nil?\\n    ! datum\\n  end\\n  \\n  def self.from_a(ar)\\n    # return nil unless ar.any?\\n    current = new(ar.last, nil)\\n    ar.to_a[0..-2].reverse_each do |n|\\n      current = new(n, current)\\n    end\\n    current\\n  end\\n  \\n  def reverse\\n    temp = self.class.new(@datum,nil)\\n    current =  self\\n    while current.next\\n      temp  = self.class.new(current.next.datum, temp)\\n      current = current.next\\n    end\\n    temp\\n  end\\n  \\nend"}
141	17	9a15ea23969760af5eba461e	\N	elixir	hello-world	\N	\N	0	1	2015-12-22 08:52:20	2015-12-22 08:52:20	92	{"hello_world.exs":"defmodule HelloWorld do\\n  def hello(name \\\\\\\\ \\"World\\") do\\n    \\"Hello, #{name}!\\"\\n  end\\nend"}
142	20	3e89f41d042e19e91fc4fa6e	done	ruby	word-count	\N	\N	0	1	2016-02-08 10:34:15	2016-02-08 10:34:15	93	{"word-count.rb":"class Phrase\\n\\n  def initialize(content)\\n    @lowercase_words = content.downcase.split(/\\\\W+/)\\n  end\\n\\n  def word_count\\n    words_with_count = Hash.new(0)\\n    @lowercase_words.each { |word| words_with_count[word] += 1 }\\n    words_with_count\\n  end\\nend"}
143	20	ef438b227c90b5cff98b3dba	\N	swift	hamming	\N	\N	0	1	2016-01-24 02:11:46	2016-01-24 02:11:46	94	{"hamming.swift":"//\\n//  hamming.swift\\n//  exercism\\n//\\n\\nclass Hamming {\\n    class func compute(originalStrand:String, against otherStrand: String) -\\u003e Int? {\\n        if originalStrand.length != otherStrand.length {\\n            return nil\\n        } else if originalStrand == otherStrand {\\n            return 0\\n        } else {\\n            return originalStrand.computeDiversityAgainst(otherStrand)\\n        }\\n    }\\n}\\n\\nextension String {\\n    var length: Int {\\n        get { return self.characters.count }\\n    }\\n    \\n    func computeDiversityAgainst(otherString: String) -\\u003e Int {\\n        var diversity = abs(self.length - otherString.length)\\n        for (originalCharacter, otherCharacter) in zip(self.characters, otherString.characters) {\\n            if originalCharacter != otherCharacter {\\n                diversity += 1\\n            }\\n        }\\n        return diversity\\n    }\\n}"}
144	20	3847febc9a5f4137b36e984f	superseded	ruby	hamming	\N	\N	0	1	2016-02-06 07:31:09	2016-02-06 07:31:09	95	{"point-mutations.rb":"class DNA\\n  def initialize(dna)\\n    @dna = dna\\n  end\\n  \\n  def hamming_distance(dna)\\n    @dna.chars.zip(dna.chars).count do |(a,b)| \\n      a \\u0026\\u0026 b \\u0026\\u0026 a != b\\n    end\\n  end\\nend"}
145	20	ef35e9b59fecfc38f0b3a410	superseded	ruby	hamming	\N	\N	0	2	2016-03-06 22:27:44	2016-03-06 22:27:44	95	{"hamming.rb":"class Hamming  \\n  def self.compute(dna1, dna2)\\n    dna1.chars.zip(dna2.chars).count do |(a,b)| \\n      a \\u0026\\u0026 b \\u0026\\u0026 a != b\\n    end\\n  end\\nend"}
146	20	1242b2c3e8546d4cbcc6ca08	done	ruby	hamming	\N	\N	0	3	2016-03-14 06:06:23	2016-03-14 06:06:23	95	{"hamming.rb":"class Hamming  \\n  def self.compute(dna1, dna2)\\n    dna1.chars.zip(dna2.chars).count do |a,b| \\n      a \\u0026\\u0026 b \\u0026\\u0026 a != b\\n    end\\n  end\\nend"}
147	20	f6430e7bc084d0c79737219a	hibernating	ruby	anagram	\N	\N	0	1	2016-01-18 16:43:36	2016-01-18 16:43:36	96	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @word = word\\n  end\\n\\n  def match(words)\\n    sorted_chars = @word.downcase.chars.sort\\n\\n    words.select do |candidate|\\n      candidate.downcase != @word.downcase \\u0026\\u0026\\n        candidate.downcase.chars.sort == sorted_chars\\n    end\\n  end\\nend"}
148	20	05480e22e42d3c31c2d72067	superseded	python	nucleotide-count	\N	\N	0	1	2015-12-17 12:54:08	2015-12-17 12:54:08	97	{"dna.py":"#!/usr/bin/env python\\n\\nVALID_NUCLEOTIDES = ('A', 'T', 'C', 'G', 'U')\\nDNA_NUCLEOTIDES = ('A', 'T', 'C', 'G')\\n\\nclass DNA:\\n    def __init__(self, sequence):\\n        self.sequence = sequence\\n    \\n    def count(self, nucleotide):\\n        if nucleotide not in VALID_NUCLEOTIDES:\\n            raise ValueError(\\"{0} is not a nucleotide.\\".format(nucleotide))\\n        counter = 0\\n        for n in self.sequence:\\n            if n == nucleotide:\\n                counter += 1\\n        return counter\\n    \\n    def nucleotide_counts(self):\\n        return {n:self.count(n) for n in DNA_NUCLEOTIDES}"}
149	20	07477b4ae3c2658c095ee205	pending	python	nucleotide-count	\N	\N	0	2	2016-02-03 01:46:56	2016-02-03 01:46:56	97	{"dna.py":"class DNA:\\n\\n    \\"\\"\\"DNA strand\\"\\"\\"\\n\\n    VALID_NUCLEOTIDES = ('A', 'T', 'C', 'G', 'U')\\n    DNA_NUCLEOTIDES = ('A', 'T', 'C', 'G')\\n\\n    def __init__(self, sequence):\\n        \\"\\"\\"Create a new DNA strand from a string.\\"\\"\\"\\n        self.sequence = sequence.upper()\\n\\n    def count(self, nucleotide):\\n        \\"\\"\\"Return how many times given nucleotide appears.\\"\\"\\"\\n        if nucleotide in self.VALID_NUCLEOTIDES:\\n            return self.sequence.count(nucleotide)\\n        else:\\n            raise ValueError(\\"{0} is not a nucleotide.\\".format(nucleotide))\\n\\n    def nucleotide_counts(self):\\n        \\"\\"\\"Return counts of all nucleotides as a dict.\\"\\"\\"\\n        return {n:self.count(n) for n in self.DNA_NUCLEOTIDES}"}
150	20	0218fb9d88ebc29b479142c2	\N	elixir	bob	\N	\N	0	1	2016-03-08 09:43:03	2016-03-08 09:43:03	98	{"bob.exs":"defmodule Bob do\\n  def hey(input) do\\n    cond do\\n      String.strip(input) === \\"\\" -\\u003e\\n        \\"Fine. Be that way!\\"\\n      String.last(input) === \\"?\\" -\\u003e\\n        \\"Sure.\\"\\n      # \\\\p{L} is unicode 'letter' property\\n      String.upcase(input) === input and String.match?(input, ~r/\\\\p{L}/) -\\u003e\\n        \\"Whoa, chill out!\\"\\n      true -\\u003e\\n        \\"Whatever.\\"\\n    end\\n  end\\nend"}
151	20	24a74398ca4a564976fb8a4c	hibernating	haskell	list-ops	\N	\N	0	1	2015-12-16 15:51:15	2015-12-16 15:51:15	99	{"/haskell/list-ops/ListOps.hs":"module ListOps\\n  ( length\\n  , reverse\\n  , map\\n  , filter\\n  , foldr\\n  , foldl'\\n  , (++)\\n  , concat\\n  ) where\\n\\nimport Prelude hiding\\n  ( length, reverse, map, filter, foldr, (++), concat )\\n\\nfoldl' :: (b -\\u003e a -\\u003e b) -\\u003e b -\\u003e [a] -\\u003e b\\nfoldl' f z [] = z\\nfoldl' f z (x:xs) = z' `seq` foldl' f z' xs\\n  where z' = f z x\\n\\nfoldr :: (a -\\u003e b -\\u003e b) -\\u003e b -\\u003e [a] -\\u003e b\\nfoldr f z [] = z\\nfoldr f z (x:xs) = f x (foldr f z xs)\\n\\nlength :: [a] -\\u003e Int\\nlength [] = 0\\nlength (x:xs) = 1 + length xs\\n\\nreverse :: [a] -\\u003e [a]\\nreverse [] = []\\n--reverse (x:xs) = reverse xs ++ [x]\\nreverse'' xs = reverse' xs []\\n  where\\n    reverse' [] sx = sx\\n    reverse' (x:xs) sx = reverse' xs (x:sx)\\n\\nmap :: (a -\\u003e b) -\\u003e [a] -\\u003e [b]\\nmap f [] = []\\nmap f (x:xs) = f x : map f xs\\n\\nfilter :: (a -\\u003e Bool) -\\u003e [a] -\\u003e [a]\\nfilter p [] = []\\nfilter p (x:xs) \\n  | p x = x : filter p xs\\n  | otherwise = filter p xs\\n\\n(++) :: [a] -\\u003e [a] -\\u003e [a]\\n[] ++ ys = ys\\n(x:xs) ++ ys = x : (xs ++ ys)\\n\\nconcat :: [[a]] -\\u003e [a]\\nconcat [] = []\\nconcat (xs:xss) = xs ++ concat xss"}
165	20	9716b9001c56d3bbe5242b1e	\N	python	bob	\N	\N	0	1	2015-12-20 04:28:52	2015-12-20 04:28:52	110	{"bob.py":"def hey(what):\\n    what.strip(' ')\\n\\n    if not what:\\n        return 'Fine. Be that way!'\\n\\n    if what[-1] == '?':\\n        return 'Sure.'\\n\\n    if what.isupper():\\n        return 'Whoa, chill out!'\\n\\n    return 'Whatever.'"}
152	20	71bbb60e0dfddae5ddcd349f	superseded	elixir	atbash-cipher	\N	\N	0	1	2015-12-14 06:09:36	2015-12-14 06:09:36	100	{"/elixir/atbash-cipher/atbash.exs":"defmodule Atbash do\\n  @doc \\"\\"\\"\\n  Encode a given plaintext to the corresponding ciphertext\\n\\n  ## Examples\\n\\n  iex\\u003e Atbash.encode(\\"completely insecure\\")\\n  \\"xlnko vgvob rmhvx fiv\\"\\n  \\"\\"\\"\\n  @alphabet String.graphemes(\\"abcdefghijklmnopqrstuvwxyz\\") |\\u003e Enum.map(\\u0026String.to_atom/1)\\n  @key Enum.zip(@alphabet, Enum.reverse(@alphabet))\\n\\n  @spec encode(String.t) :: String.t\\n  def encode(plaintext) do\\n    plaintext\\n      |\\u003e sanitize\\n      |\\u003e encrypt\\n      |\\u003e split_into_groups\\n  end\\n\\n  defp sanitize(string) do\\n    string\\n      |\\u003e String.downcase \\n      |\\u003e String.replace(~r/[\\\\p{P}\\\\s]+/, \\"\\")\\n  end\\n\\n  defp encrypt(string) do\\n    string\\n      |\\u003e String.graphemes\\n      |\\u003e Enum.map(\\u0026encode_char/1)\\n      |\\u003e Enum.join\\n  end\\n\\n  defp split_into_groups(string) do\\n    Regex.scan(~r/\\\\w{1,5}/, string)\\n      |\\u003e Enum.join(\\" \\")\\n  end\\n\\n  defp encode_char(char) do\\n    if c = @key[String.to_atom(char)], do: c, else: char\\n  end\\nend"}
153	20	2ddb57382758d1d5ec468f24	pending	elixir	atbash-cipher	\N	\N	0	2	2016-01-25 19:50:44	2016-01-25 19:50:44	100	{"/elixir/atbash-cipher/atbash.exs":"defmodule Atbash do\\n  @doc \\"\\"\\"\\n  Encode a given plaintext to the corresponding ciphertext\\n\\n  ## Examples\\n\\n  iex\\u003e Atbash.encode(\\"completely insecure\\")\\n  \\"xlnko vgvob rmhvx fiv\\"\\n  \\"\\"\\"\\n  @alphabet Enum.zip(?a..?z, ?z..?a) |\\u003e Enum.into %{}\\n\\n  @spec encode(String.t) :: String.t\\n  def encode(plaintext) do\\n    plaintext\\n      |\\u003e String.downcase\\n      |\\u003e String.replace(~r/[\\\\p{P}\\\\s]+/, \\"\\")\\n      |\\u003e String.to_char_list\\n      |\\u003e Enum.map(\\u0026(Map.get @alphabet, \\u00261, \\u00261))\\n      |\\u003e Enum.chunk(5, 5, [])\\n      |\\u003e Enum.intersperse(' ')\\n      |\\u003e List.to_string\\n  end\\nend"}
154	20	bbf343040e05afb019a3eb1a	superseded	scala	grains	\N	\N	0	1	2016-03-11 12:27:48	2016-03-11 12:27:48	101	{"src\\\\main\\\\scala\\\\Grains.scala":"object Grains {\\r\\n    def square(p: Int): BigInt = {\\r\\n        require(p\\u003c=64, \\"There are only 64 squares\\")\\r\\n        if (p\\u003c64) BigInt(Math.pow(2, p-1).toLong)\\r\\n        else BigInt(Long.MaxValue) + 1\\r\\n    }\\r\\n        \\r\\n    val total = (for(n \\u003c- (1 to 64)) yield n).map(square).sum\\r\\n}"}
155	20	a390e3e10ccaa63327c50b84	pending	scala	grains	\N	\N	0	2	2016-03-18 14:46:51	2016-03-18 14:46:51	101	{"src\\\\main\\\\scala\\\\Grains.scala":"object Grains {\\r\\n    def square(p: Int) = BigInt(2).pow(p-1)\\r\\n    val total = (1 to 64).map(square).sum\\r\\n}"}
156	20	257d46d4563ea7cd8c0e7c92	\N	ruby	atbash-cipher	\N	\N	0	1	2015-12-26 20:47:53	2015-12-26 20:47:53	102	{"atbash_cipher.rb":"# Creates Atbash Cipher from input\\nclass Atbash\\n  def self.encode(input)\\n    atbash = AtbashString.new(input)\\n    atbash.clean.output.atbash_format\\n  end\\nend\\n\\n# Atbash subclass of String adds Atbash processing methods\\nclass AtbashString \\u003c String\\n  CIPHER_ABC = Hash[Array('a'..'z').zip(Array('a'..'z').reverse)).flatten]\\n  CIPHER_123 = Hash[Array('0'..'9').zip(Array('0'..'9'))]\\n  CIPHER = CIPHER_ABC.merge(CIPHER_123)\\n  GROUP_SPACE = 5\\n\\n  def clean\\n    downcase.gsub(/{(^a-z0-9)}/, '')\\n  end\\n\\n  def output\\n    AtbashString.new(each_char.map { |i| CIPHER[i] }.join)\\n  end\\n\\n  def atbash_format\\n    gsub(/(.{#{GROUP_SPACE}})/, '\\\\1 ').strip\\n  end\\nend"}
157	20	b43aded986a66cc41db410fd	superseded	javascript	word-count	\N	\N	0	1	2015-12-16 20:06:30	2015-12-16 20:06:30	103	{"word-count.js":"var Words = function() {\\n  function Words (sentence) {\\n    this.count = {};\\n    this.sentence = sentence;\\n    this.sanitizeSentence();\\n    this.countWords();\\n  }\\n\\n  Words.prototype.sanitizeSentence = function () {\\n    this.sentence = this.sentence.toLowerCase().replace(/[^a-z1-9 ]/g, '');\\n  };\\n\\n  Words.prototype.getWords = function () {\\n    return this.sentence.split(\\" \\");\\n  };\\n\\n  Words.prototype.countWords = function () {\\n    var words = this.getWords(),\\n        i = words.length,\\n        word;\\n\\n    while (i--) {\\n      word = words[i];\\n\\n      if (word === '') {\\n        continue;\\n      }\\n\\n      if (!this.count[word]) {\\n        this.count[word] = 1;\\n      } else {\\n        this.count[word]++;\\n      }\\n    }\\n  };\\n\\n  return Words;\\n}();\\n\\nmodule.exports = Words;"}
158	20	ec73c73ac2556ef06254321c	hibernating	javascript	word-count	\N	\N	0	2	2015-12-31 13:42:54	2015-12-31 13:42:54	103	{"word-count.js":"module.exports = function() {\\n  function Words (sentence) {\\n    this.count = {};\\n    this.sentence = sentence.toLowerCase();\\n    this.countWords();\\n  }\\n\\n  var sanitize = function(str) {\\n    return [].filter.call(str, function(l){\\n      l = l.charCodeAt(0);\\n      return  l \\u003e 47 \\u0026 l \\u003c 58 | (l \\u003e 96 \\u0026 l \\u003c 123);\\n    }).join('');\\n  };\\n\\n  Words.prototype.countWords = function () {\\n    var self = this\\n\\n    this.sentence.split(\\" \\").forEach(function(w, i) {\\n      (w = sanitize(w)) \\u0026\\u0026 (self.count[w] = (self.count[w]||0)+1);\\n    });\\n  };\\n\\n  return Words;\\n}();"}
159	20	0a105a96ff9221bc09102beb	\N	ruby	gigasecond	\N	\N	0	1	2016-03-05 09:11:08	2016-03-05 09:11:08	104	{"gigasecond.rb":"class Gigasecond\\n\\n  VERSION = 1\\n\\n  def self.from(time)\\n    time + (10**9)\\n  end\\n\\nend"}
160	20	67ddf40792c1f7d61644ac0e	pending	python	word-count	\N	\N	0	1	2016-01-25 22:30:32	2016-01-25 22:30:32	105	{"wordcount.py":"#!/usr/bin/python3\\n\\n\\nfrom string import punctuation\\n\\n\\ndef clean(phrase):\\n    \\"\\"\\"\\n    Returns string cleaned from punctuation marks\\n    \\"\\"\\"\\n    return ''.join([char for char in phrase if char not in punctuation])\\n\\n\\ndef word_count(phrase):\\n    \\"\\"\\"\\n    Returns dictionary with counts of words in phrase\\n    \\"\\"\\"\\n    phrase = clean(phrase).lower()\\n    hgram = {}\\n    for word in phrase.split():\\n        hgram[word] = hgram.get(word, 0) + 1\\n    return hgram"}
161	20	4c801a102cd3867ce22fec97	done	perl5	triangle	\N	\N	0	1	2016-03-02 06:40:26	2016-03-02 06:40:26	106	{"triangle.pm":"#!/usr/bin/env perl\\n\\npackage Triangle;\\n\\nuse Modern::Perl;\\n\\nsub kind {\\n    my ($a, $b, $c) = @_;\\n    die    \\"TriangleError\\"      if $a==0 or $b==0 or $c==0;\\n    die    \\"TriangleError\\"      if $a+$b\\u003c=$c or $b+$c\\u003c=$a or $c+$a\\u003c=$b;\\n    return \\"equilateral\\"        if $a==$b and $b==$c and $c==$a;\\n    return \\"scalene\\"            if $a!=$b and $b!=$c and $c!=$a;\\n    return \\"isosceles\\";\\n}\\n1;"}
162	20	d8f2c55b3bc3655e689063d4	\N	elixir	anagram	\N	\N	0	1	2015-12-31 09:10:03	2015-12-31 09:10:03	107	{"anagram.exs":"defmodule Anagram do\\n  @doc \\"\\"\\"\\n  Returns all candidates that are anagrams of, but not equal to, 'base'.\\n  \\"\\"\\"\\n  @spec match(String.t, [String.t]) :: [String.t]\\n  def match(base, candidates) do\\n    Enum.filter(candidates, fn(word) -\\u003e\\n      word |\\u003e String.downcase |\\u003e String.to_char_list |\\u003e Enum.sort ===\\n      base |\\u003e String.downcase |\\u003e String.to_char_list |\\u003e Enum.sort \\u0026\\u0026\\n      word |\\u003e String.downcase !== base |\\u003e String.downcase\\n    end)\\n  end\\nend"}
163	20	06dde19614ae21232b15c15b	\N	python	hello-world	\N	\N	0	1	2015-12-22 13:33:51	2015-12-22 13:33:51	108	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name='World'):\\n\\treturn \\"Hello, \\"+name+\\"!\\""}
183	20	0320223a13bf4efdba31bc30	\N	javascript	hello-world	\N	\N	0	1	2015-12-19 11:03:41	2015-12-19 11:03:41	122	{"hello-world.js":"\\"use strict\\";\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n  var temp = input || \\"World\\";\\n  return `Hello, ${temp}!`;\\n};\\n\\nmodule.exports = HelloWorld;"}
166	20	8bddb8b220a284d4671b83b7	\N	lua	binary-search-tree	\N	\N	0	1	2016-01-11 13:52:26	2016-01-11 13:52:26	111	{"binary-search-tree.lua":"local binary_search_tree    = {}\\nlocal binary_search_tree_mt = { __index = binary_search_tree }\\n\\nbinary_search_tree.new = function(_, value)\\n    local self = { left = nil, value = value, right = nil }\\n    return setmetatable(self, binary_search_tree_mt)\\nend\\n\\nbinary_search_tree.insert = function(self, value)\\n    if self == nil then\\n        return binary_search_tree:new(value)\\n    elseif value \\u003c= self.value then\\n        self.left = self.insert(self.left, value)\\n    elseif value \\u003e self.value then\\n        self.right = self.insert(self.right, value)\\n    end\\n\\n    return self\\nend\\n\\nbinary_search_tree.from_list = function(_, list)\\n    assert(#list \\u003e 0)\\n    local bst\\n    for _, value in ipairs(list) do\\n        if not bst then\\n            bst = binary_search_tree:new(value)\\n        else\\n            bst:insert(value)\\n        end\\n    end\\n\\n    return bst\\nend\\n\\nbinary_search_tree.values = function(self)\\n    return coroutine.wrap(function()\\n        if not self then return end\\n        if self.left then\\n            for value in self.left:values() do\\n                coroutine.yield(value)\\n            end\\n        end\\n\\n        coroutine.yield(self.value)\\n        if self.right then\\n            for value in self.right:values() do\\n                coroutine.yield(value)\\n            end\\n        end\\n    end)\\nend\\n\\nreturn binary_search_tree"}
167	20	156549f96e340c3b6a9f713a	done	haskell	bob	\N	\N	0	1	2016-01-30 23:28:04	2016-01-30 23:28:04	112	{"Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char\\n\\nresponseFor :: String -\\u003e String\\nresponseFor query\\n  | shouting  = \\"Woah, chill out!\\"\\n  | question  = \\"Sure.\\"\\n  | nothing   = \\"Fine. Be that way!\\"\\n  | otherwise = \\"Whatever.\\"\\n  where\\n    shouting = (not.null) letters \\u0026\\u0026 all isUpper letters\\n    question = (not.null) query \\u0026\\u0026 last query == '?'\\n    nothing  = all isSpace query\\n    letters  = filter isAlpha query"}
168	20	65dece720454e59f1d827612	\N	javascript	roman-numerals	\N	\N	0	1	2016-02-29 04:59:07	2016-02-29 04:59:07	113	{"roman-numerals.js":"'use strict';\\nconst lookup = {\\n  M: 1000,\\n  CM: 900,\\n  D: 500,\\n  CD: 400,\\n  C: 100,\\n  XC: 90,\\n  L: 50,\\n  XL: 40,\\n  X: 10,\\n  IX: 9,\\n  V: 5,\\n  IV: 4,\\n  I: 1\\n};\\n\\nfunction toRoman(arabic) {\\n  const result = Object.keys(lookup).reduce((accumulator, letter) =\\u003e {\\n    const value = lookup[letter];\\n    while (value \\u003c= accumulator.remainder) {\\n      accumulator.roman += letter;\\n      accumulator.remainder -= value;\\n    }\\n\\n    return accumulator;\\n  }, { remainder:arabic, roman:'' });\\n  return result.roman;\\n}\\n\\nmodule.exports = toRoman;"}
169	20	039c7488a4013ecc5cf66e7d	pending	ruby	bob	\N	\N	0	1	2016-01-12 18:51:52	2016-01-12 18:51:52	114	{"bob.rb":"class Bob\\n  def hey message\\n    case message\\n    when (message[/[A-Z]/] \\u0026\\u0026 message.upcase)\\n      \\"Whoa, chill out!\\"\\n    when /\\\\w[?]\\\\z/\\n      \\"Sure.\\"\\n    when /[\\\\w+]/\\n      \\"Whatever.\\"\\n    else\\n      \\"Fine. Be that way!\\"\\n    end\\n  end\\nend"}
170	20	95574e4addc9ad86bdd45c8e	superseded	haskell	octal	\N	\N	0	1	2016-01-06 21:47:05	2016-01-06 21:47:05	115	{"/haskell/octal/Octal.hs":"module Octal\\n( showOct\\n, readOct\\n) where\\n\\nimport Data.List (foldl', unfoldr)\\nimport Data.Char (digitToInt, intToDigit)\\nimport Data.Tuple (swap)\\n\\n-- We need unfoldl instead of unfoldr and unfoldl is not exported by Data.List\\n-- We could also just use unfoldr and have a call to reverse in showOct.\\nunfoldl f x = reverse (unfoldr (fmap swap . f) x)\\n\\n\\nshowOct :: (Show a, Integral a) =\\u003e a -\\u003e String\\nshowOct  = map (intToDigit . fromIntegral) . unfoldl f \\n    where \\n          f 0 = Nothing\\n          f n = Just ((n - (n `rem` 8)) `quot` 8, n `rem` 8)\\n\\nreadOct :: (Integral a) =\\u003e String -\\u003e a\\nreadOct = fromIntegral . foldl' f 0\\n    where f acc digit = acc * 8 + digitToInt digit"}
171	20	7f9bafa60f20e930aa124b8f	pending	haskell	octal	\N	\N	0	2	2016-02-06 22:28:40	2016-02-06 22:28:40	115	{"/haskell/octal/Octal.hs":"module Octal\\n( showOct\\n, readOct\\n) where\\n\\nimport Data.List (foldl', unfoldr)\\nimport Data.Char (digitToInt, intToDigit)\\nimport Data.Tuple (swap)\\n\\n-- We need unfoldl instead of unfoldr and unfoldl is not exported by Data.List\\n-- We could also just use unfoldr and have a call to reverse in showOct.\\nunfoldl f x = reverse (unfoldr (fmap swap . f) x)\\n\\n\\nshowOct :: (Show a, Integral a) =\\u003e a -\\u003e String\\nshowOct  = map (intToDigit . fromIntegral) . unfoldl f \\n    where \\n          f 0 = Nothing\\n          f n = Just (n `div` 8, n `rem` 8)\\n\\nreadOct :: (Integral a) =\\u003e String -\\u003e a\\nreadOct = fromIntegral . foldl' f 0\\n    where f acc digit = acc * 8 + digitToInt digit"}
172	20	46093180ccae9df15bc5329f	done	ruby	hello-world	\N	\N	0	1	2016-01-06 23:05:23	2016-01-06 23:05:23	116	{"hello_world.rb":"class HelloWorld\\n\\n  def self.hello(name = \\"World\\")\\n    \\"Hello, #{name}!\\"\\n  end\\n\\nend"}
173	20	16638e55202b5a5b74c76053	pending	scala	palindrome-products	\N	\N	0	1	2016-02-06 08:02:49	2016-02-06 08:02:49	117	{"src/main/scala/PalindromeProducts.scala":"// test suite is completed in 400 milliseconds for this solution\\ncase class PalindromeProducts(s: Int, f: Int) {\\n    def palindromes(xs: Stream[Int]) = for {\\n        x \\u003c- xs\\n        if x.toString.reverse.toInt == x\\n        val factors = for {\\n            n \\u003c- (1 max s) to (f min Math.sqrt(x).floor.toInt)\\n            if x % n == 0\\n            val m = x / n\\n            if m \\u003e= s \\u0026\\u0026 m \\u003c= f\\n        } yield (n, m)\\n        if !factors.isEmpty\\n    } yield (x, factors.toSet)\\n\\n    lazy val smallest = palindromes(Stream.range(s*s, f*f)).head\\n    lazy val largest = palindromes(Stream.range(f*f, s*s, -1)).head\\n}"}
174	20	6e12b749d502ef8a89351181	\N	elixir	triangle	\N	\N	0	1	2015-12-29 10:02:19	2015-12-29 10:02:19	118	{"triangle.exs":"defmodule Triangle do\\n  @type kind :: :equilateral | :isosceles | :scalene\\n\\n  @doc \\"\\"\\"\\n  Return the kind of triangle of a triangle with 'a', 'b' and 'c' as lengths.\\n  \\"\\"\\"\\n  @spec kind(number, number, number) :: { :ok, kind } | { :error, String.t }\\n  def kind(a, b, c) when a \\u003c= 0 or b \\u003c= 0 or c \\u003c= 0 do\\n    {:error, \\"all side lengths must be positive\\"}\\n  end\\n  def kind(a, b, c) when a+b \\u003c= c or b+c \\u003c= a or a+c \\u003c= b do\\n    {:error, \\"side lengths violate triangle inequality\\"}\\n  end\\n  def kind(a, b, c) do\\n    case number_of_unique_side_lengths([a, b, c]) do\\n      1 -\\u003e {:ok, :equilateral}\\n      2 -\\u003e {:ok, :isosceles}\\n      3 -\\u003e {:ok, :scalene}\\n      _ -\\u003e {:error, \\"Not a triangle\\"}\\n    end\\n  end\\n\\n  defp number_of_unique_side_lengths(sides) do\\n    Enum.uniq(sides)\\n    |\\u003e Enum.count\\n  end\\nend"}
196	14	d207ff8cbe86b0666f595757	pending	python	hello-world	\N	\N	0	1	2016-03-25 22:56:47	2016-03-25 22:56:47	132	{"\\\\python\\\\hello-world\\\\hello_world.py":"#\\r\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\r\\n#\\r\\ndef hello(name = 'world'):\\r\\n    return \\"Hello, %s!\\" % (name)"}
197	14	28f157e798f51471a8a8dcf9	\N	ruby	hello-world	\N	\N	0	1	2016-03-25 10:28:04	2016-03-25 10:28:04	133	{"hello_world.rb":"class HelloWorld\\n  def self.hello(name=\\"World\\")\\n    \\"Hello, #{name}!\\"\\n  end\\nend"}
175	20	47ebd1856b24fe9df7e97867	done	javascript	beer-song	\N	\N	0	5	2016-01-15 00:15:46	2016-01-15 00:15:46	119	{"beer-song.js":"function verse(number) {\\r\\n  return capitalize(transform(\\"$X bottle(s) of beer on the wall, $X bottle(s) of beer.\\\\n\\" +\\r\\n    \\"[Take $some down and pass it around|Go to the store and buy some more], \\" +\\r\\n    \\"[$X-1|99] bottle(-1:s) of beer on the wall.\\\\n\\"));\\r\\n\\r\\n  function transform(pattern) {\\r\\n    return pattern\\r\\n      .replace(/\\\\$X-1/g, numberText(number-1))\\r\\n      .replace(/\\\\$X/g, numberText(number))\\r\\n      .replace(/\\\\$some/g, number === 1 ? 'it' : 'one')\\r\\n      .replace(/\\\\(s\\\\)/g, number === 1 ? '' : 's')\\r\\n      .replace(/\\\\(-1:s\\\\)/g, number-1 === 1 ? '' : 's')\\r\\n      .replace(/\\\\[(.*?)\\\\|(.*?)\\\\]/g, number \\u003e 0 ? '$1' : '$2');\\r\\n  }\\r\\n\\r\\n  function capitalize(text) {\\r\\n    return text.charAt(0).toUpperCase() + text.slice(1);\\r\\n  }\\r\\n\\r\\n  function numberText(number) {\\r\\n    return number === 0 ? 'no more' : number;\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction sing(fromNumber, toNumber) {\\r\\n  if (fromNumber \\u003e (toNumber || 0)) {\\r\\n    return verse(fromNumber) + '\\\\n' + sing(fromNumber-1, toNumber);\\r\\n  }\\r\\n  return verse(fromNumber);\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  verse: verse,\\r\\n  sing: sing\\r\\n};\\r"}
176	20	bf7f189f44081e96dc3b9b34	superseded	javascript	beer-song	\N	\N	0	1	2016-01-28 04:10:41	2016-01-28 04:10:41	119	{"beer-song.js":"function bottlesRemaining(number) {\\r\\n  if (number === 0) { return 'no more bottles of beer'; }\\r\\n  if (number === 1) { return '1 bottle of beer'; }\\r\\n  return number + ' bottles of beer';\\r\\n}\\r\\n\\r\\nfunction next(number) {\\r\\n  return number === 0 ? 99 : number - 1;\\r\\n}\\r\\n\\r\\nfunction pronoun(number) {\\r\\n  return number === 1 ? 'it' : 'one';\\r\\n}\\r\\n\\r\\nfunction action(number) {\\r\\n  return number \\u003e 0 ? 'Take ' + pronoun(number) + ' down and pass it around'\\r\\n      : 'Go to the store and buy some more';\\r\\n}\\r\\n\\r\\nfunction capitalize(text) {\\r\\n  return text.charAt(0).toUpperCase() + text.slice(1);\\r\\n}\\r\\n\\r\\nfunction verse(number) {\\r\\n  return capitalize(bottlesRemaining(number) + ' on the wall, ' \\r\\n      + bottlesRemaining(number) + '.\\\\n' + action(number) + ', '\\r\\n      + bottlesRemaining(next(number)) + ' on the wall.\\\\n');\\r\\n}\\r\\n\\r\\nfunction sing(fromNumber, toNumber) {\\r\\n  if (fromNumber \\u003e (toNumber || 0)) {\\r\\n    return verse(fromNumber) + '\\\\n' + sing(fromNumber - 1, toNumber);\\r\\n  }\\r\\n  return verse(fromNumber);\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  verse: verse,\\r\\n  sing: sing\\r\\n};\\r"}
177	20	327979d8c21962f5c57062cd	superseded	javascript	beer-song	\N	\N	0	2	2016-02-03 17:40:15	2016-02-03 17:40:15	119	{"beer-song.js":"function bottlesRemaining(number) {\\r\\n  if (number === 0) { return 'no more bottles of beer'; }\\r\\n  if (number === 1) { return '1 bottle of beer'; }\\r\\n  return number + ' bottles of beer';\\r\\n}\\r\\n\\r\\nfunction next(number) {\\r\\n  return number === 0 ? 99 : number - 1;\\r\\n}\\r\\n\\r\\nfunction pronoun(number) {\\r\\n  return number === 1 ? 'it' : 'one';\\r\\n}\\r\\n\\r\\nfunction action(number) {\\r\\n  if (number \\u003e 0) { return 'Take ' + pronoun(number) + ' down and pass it around'; }\\r\\n  return 'Go to the store and buy some more';\\r\\n}\\r\\n\\r\\nfunction capitalize(text) {\\r\\n  return text.charAt(0).toUpperCase() + text.slice(1);\\r\\n}\\r\\n\\r\\nfunction verse(number) {\\r\\n  return capitalize(bottlesRemaining(number) + ' on the wall, ' \\r\\n      + bottlesRemaining(number) + '.\\\\n' + action(number) + ', '\\r\\n      + bottlesRemaining(next(number)) + ' on the wall.\\\\n');\\r\\n}\\r\\n\\r\\nfunction sing(fromNumber, toNumber) {\\r\\n  if (fromNumber \\u003e (toNumber || 0)) {\\r\\n    return verse(fromNumber) + '\\\\n' + sing(fromNumber - 1, toNumber);\\r\\n  }\\r\\n  return verse(fromNumber);\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  verse: verse,\\r\\n  sing: sing\\r\\n};\\r"}
178	20	2843e073bd37b581986a5c93	superseded	javascript	beer-song	\N	\N	0	3	2016-02-08 23:01:46	2016-02-08 23:01:46	119	{"beer-song.js":"function Verse(number) {\\r\\n\\r\\n  function bottlesRemaining(nextNumber) {\\r\\n    var remaining = nextNumber !== undefined ? nextNumber : number;\\r\\n    if (remaining === 0) { return 'no more bottles of beer'; }\\r\\n    if (remaining === 1) { return '1 bottle of beer'; }\\r\\n    return remaining + ' bottles of beer';\\r\\n  }\\r\\n\\r\\n  function next() {\\r\\n    return number === 0 ? 99 : number - 1;\\r\\n  }\\r\\n\\r\\n  function pronoun() {\\r\\n    return number === 1 ? 'it' : 'one';\\r\\n  }\\r\\n\\r\\n  function action() {\\r\\n    if (number \\u003e 0) { return 'Take ' + pronoun() + ' down and pass it around'; }\\r\\n    return 'Go to the store and buy some more';\\r\\n  }\\r\\n\\r\\n  function capitalize(text) {\\r\\n    return text.charAt(0).toUpperCase() + text.slice(1);\\r\\n  }\\r\\n\\r\\n  var text = capitalize(bottlesRemaining() + ' on the wall, ' \\r\\n          + bottlesRemaining() + '.\\\\n' + action() + ', '\\r\\n          + bottlesRemaining(next()) + ' on the wall.\\\\n');\\r\\n\\r\\n  return {\\r\\n    text: text\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction verse(number) {\\r\\n  return new Verse(number).text;\\r\\n}\\r\\n\\r\\nfunction sing(fromNumber, toNumber) {\\r\\n  if (fromNumber \\u003e (toNumber || 0)) {\\r\\n    return verse(fromNumber) + '\\\\n' + sing(fromNumber - 1, toNumber);\\r\\n  }\\r\\n  return verse(fromNumber);\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  verse: verse,\\r\\n  sing: sing\\r\\n};\\r"}
179	20	fee461d1279f7efd09ebdb72	superseded	javascript	beer-song	\N	\N	0	4	2016-02-24 13:15:13	2016-02-24 13:15:13	119	{"beer-song.js":"function verse(number) {\\r\\n\\r\\n  function bottlesRemaining(nextNumber) {\\r\\n    var remaining = nextNumber !== undefined ? nextNumber : number;\\r\\n    if (remaining === 0) { return 'no more bottles of beer'; }\\r\\n    if (remaining === 1) { return '1 bottle of beer'; }\\r\\n    return remaining + ' bottles of beer';\\r\\n  }\\r\\n\\r\\n  function next() {\\r\\n    return number === 0 ? 99 : number - 1;\\r\\n  }\\r\\n\\r\\n  function pronoun() {\\r\\n    return number === 1 ? 'it' : 'one';\\r\\n  }\\r\\n\\r\\n  function action() {\\r\\n    if (number \\u003e 0) { return 'Take ' + pronoun() + ' down and pass it around'; }\\r\\n    return 'Go to the store and buy some more';\\r\\n  }\\r\\n\\r\\n  function capitalize(text) {\\r\\n    return text.charAt(0).toUpperCase() + text.slice(1);\\r\\n  }\\r\\n\\r\\n  return capitalize(bottlesRemaining() + ' on the wall, ' \\r\\n          + bottlesRemaining() + '.\\\\n' + action() + ', '\\r\\n          + bottlesRemaining(next()) + ' on the wall.\\\\n');\\r\\n}\\r\\n\\r\\nfunction sing(fromNumber, toNumber) {\\r\\n  if (fromNumber \\u003e (toNumber || 0)) {\\r\\n    return verse(fromNumber) + '\\\\n' + sing(fromNumber - 1, toNumber);\\r\\n  }\\r\\n  return verse(fromNumber);\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  verse: verse,\\r\\n  sing: sing\\r\\n};\\r"}
180	20	abb0df026234365806154b47	\N	javascript	leap	\N	\N	0	2	2016-01-18 23:03:24	2016-01-18 23:03:24	120	{"leap.js":"var isLeapYear = function (year) {\\n  return ((year % 4 === 0) \\u0026\\u0026 (year % 100 !== 0)) || (year % 400 === 0) ;\\n};"}
181	20	4c0c049bc9e6685edb1127e1	\N	javascript	leap	\N	\N	0	1	2016-03-09 21:05:34	2016-03-09 21:05:34	120	{"leap.js":"var isLeapYear = function (year) {\\n  return year % 4 === 0;\\n};"}
182	20	0ac59baa7d4ae43de58abbcc	\N	ruby	binary	\N	\N	0	1	2015-12-28 06:27:53	2015-12-28 06:27:53	121	{"binary.rb":"class Binary\\n  VERSION = 1\\n  def initialize(bin)\\n    @bs = bin.to_s\\n    if @bs.empty? || @bs =~ /[^10]/\\n      raise ArgumentError, 'Give me a binary number with digits of only 0 or 1'\\n    end\\n  end\\n\\n  def to_decimal\\n    exp = 0\\n    ndigit = @bs.size - 1\\n    dec = 0\\n    while ndigit \\u003e= 0\\n      dec += ( @bs[ndigit].to_i * (2 ** exp) )\\n      exp += 1\\n      ndigit -= 1\\n    end\\n    return dec\\n  end\\nend\\n\\n#test\\n#%w{ 0010 00110 1101 1011 0111 123 ab 1b }.each {|b| p Binary.new(b).to_decimal}"}
184	21	a06e3b9fa5d1dd077fc12ec4	hibernating	cpp	food-chain	\N	\N	0	1	2015-11-02 15:39:22	2015-11-02 15:39:22	123	{"food_chain.h":"/*\\n * food_chain.h\\n * k-mad\\n */\\n\\n#include \\u003cdeque\\u003e\\n#include \\u003ciostream\\u003e\\n#include \\u003cstring\\u003e\\n#include \\u003cvector\\u003e\\n\\nusing namespace std;\\n\\nnamespace food_chain {\\n  string first_line = \\"I know an old lady who swallowed a \\";\\n  vector\\u003cstring\\u003e critters = \\n    {\\"fly\\", \\"spider\\", \\"bird\\", \\"cat\\", \\n     \\"dog\\", \\"goat\\", \\"cow\\", \\"horse\\"};\\n  vector\\u003cstring\\u003e second_lines =\\n    {\\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\",\\n     \\"It wriggled and jiggled and tickled inside her.\\\\n\\",\\n     \\"How absurd to swallow a bird!\\\\n\\",\\n     \\"Imagine that, to swallow a cat!\\\\n\\",\\n     \\"What a hog, to swallow a dog!\\\\n\\",\\n     \\"Just opened her throat and swallowed a goat!\\\\n\\",\\n     \\"I don't know how she swallowed a cow!\\\\n\\",\\n     \\"She's dead, of course!\\\\n\\"};\\n  string spider_jiggling = \\" that \\" + second_lines[1].substr(3);\\n  string sing();\\n  string verse(int);\\n  string verses(int, int);\\n  string dequeToString(deque\\u003cstring\\u003e \\u0026lyrics);\\n};\\n\\nstring food_chain::verse(int verse_num) {\\n  // Push lyrics to the back.\\n  // Pop lyrics from the front.\\n  deque\\u003cstring\\u003e lyrics;\\n  // Push the first and second lines.\\n  lyrics.push_back(first_line + critters[verse_num - 1] + \\".\\\\n\\");\\n  lyrics.push_back(second_lines[verse_num - 1]); \\n  if (verse_num != 8) {\\n    verse_num--;\\n    while(verse_num) {\\n      // Push the middle lines.\\n      lyrics.push_back(\\"She swallowed the \\" + critters[verse_num] + \\n          \\" to catch the \\" + critters[verse_num - 1]);\\n\\n      // Check for the spider line.\\n      if(verse_num == 2) { \\n        lyrics.push_back(spider_jiggling);\\n      }\\n      else {\\n        lyrics.push_back(\\".\\\\n\\");\\n      }\\n  \\n      if(verse_num == 1) {\\n        // Push the last line\\n        lyrics.push_back(second_lines[verse_num - 1]); \\n      } \\n      verse_num--;\\n    } \\n  }\\n  return dequeToString(lyrics);\\n}\\n\\nstring food_chain::verses(int start, int end) {\\n  deque\\u003cstring\\u003e lyrics;\\n  while(start \\u003c= end) {\\n    lyrics.push_back(verse(start++) + \\"\\\\n\\");\\n  }\\n  return dequeToString(lyrics);\\n}\\n\\nstring food_chain::sing() {\\n  // This should pass the test no matter what it does.\\n  return verses(1, 8);\\n}\\n\\nstring food_chain::dequeToString(deque\\u003cstring\\u003e \\u0026input) {\\n  string output;\\n  while (not input.empty()) {\\n    output.append(input.front());\\n    input.pop_front();\\n  }\\n  return output;\\n}"}
185	36	f7c880fcf751781908fe8897	\N	scheme	grains	\N	\N	0	1	2015-11-03 09:09:12	2015-11-03 09:09:12	124	{"grains.scm":"(define-module (grains)\\n  #:export (square total))\\n\\n(define (square n)\\n  (if (\\u003c n 1)\\n      0\\n      (expt 2 (- n 1))))\\n\\n(define (total)\\n  (apply + (map square (iota 65))))"}
186	36	6fb21d51b333b5e910010031	pending	python	ocr-numbers	\N	\N	0	1	2016-01-03 20:47:32	2016-01-03 20:47:32	125	{"ocr.py":"\\t\\ndef grid(num):\\n\\tif num == '0':\\n\\t\\treturn ([\\" _ \\", \\"| |\\", \\"|_|\\", \\"   \\"])\\n\\tif num== '1':\\n\\t\\treturn ([\\"   \\", \\"  |\\", \\"  |\\", \\"   \\"])\\n\\telse:\\n\\t\\traise ValueError,'not implement yet'\\n\\n\\n\\ndef number(lists):\\n\\tlists = lists\\n\\tcheck(lists)\\n\\tif lists == [\\" _ \\", \\"| |\\", \\"|_|\\", \\"   \\"]:\\n\\t\\treturn '0'\\n\\tif lists == [\\"   \\", \\"  |\\", \\"  |\\", \\"   \\"]:\\n\\t\\treturn '1'\\n\\telse : return '?'\\n\\n\\n\\ndef check(input):\\n\\tif len(input) != 4:\\n\\t\\traise ValueError, 'length is not correct'\\n\\tfor ele in input:\\n\\t\\tif len(ele) != 3:\\n\\t\\t\\traise ValueError, 'row too short'"}
187	30	16c681f77e54e345009ebee5	pending	ruby	etl	\N	\N	0	1	2016-03-22 12:34:39	2016-03-22 12:34:39	126	{"etl.rb":"class ETL\\n  def self.transform(old)\\n    result = {}\\n    old.each do |point, arry|\\n      arry.each do |letter|\\n        result[letter.downcase] = point\\n      end\\n    end\\n    result\\n  end\\nend"}
188	30	5c668830fa232228f6acff3d	superseded	clojure	rna-transcription	\N	\N	0	1	2016-03-19 07:47:52	2016-03-19 07:47:52	127	{"rna-transcription.clj":"(ns bob\\n  (:use [clojure.string :only (upper-case blank?)]))\\n\\n(defn- question? [sentence] (re-seq #\\"\\\\?\\\\s*$\\" sentence))\\n(defn- shouting? [sentence] (= sentence (upper-case sentence)))\\n\\n(defn response-for [sentence]\\n  \\"Figure out what Bob should respond to a sentence\\"\\n  (cond\\n    (question? sentence) \\"Sure.\\"\\n    (blank?    sentence) \\"Fine, be that way.\\"\\n    (shouting? sentence) \\"Woah, chill out!\\"\\n    :else                \\"Whatever.\\"))"}
189	30	5a5a632450836e40fcd8275e	hibernating	clojure	rna-transcription	\N	\N	0	2	2016-03-24 17:20:12	2016-03-24 17:20:12	127	{"rna-transcription.clj":"(ns dna\\n  (:require [clojure.string :as string]))\\n\\n(defn to-rna [dna-str]\\n  (string/replace dna-str \\"T\\" \\"U\\"))"}
190	30	08937d69de61f9daaa8d1e0d	superseded	csharp	nucleotide-count	\N	\N	0	1	2016-03-19 00:05:37	2016-03-19 00:05:37	128	{"DNA.cs":"using System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class DNA\\r\\n{\\r\\n    private readonly string dna;\\r\\n    public Dictionary\\u003cchar, int\\u003e NucleotideCounts { get; set; }\\r\\n\\r\\n    public DNA(string dna)\\r\\n    {\\r\\n        this.dna = dna;\\r\\n        NucleotideCounts = new Dictionary\\u003cchar, int\\u003e();\\r\\n        \\"GACT\\".ToList().ForEach(x =\\u003e NucleotideCounts.Add(x, 0));\\r\\n        dna.ToList().ForEach(x =\\u003e { if (NucleotideCounts.ContainsKey(x)) { NucleotideCounts[x]++; } });\\r\\n    }\\r\\n\\r\\n    public int Count(char c)\\r\\n    {\\r\\n        if (!\\"GACT\\".Contains(c)) { throw new InvalidNucleotideException(); }\\r\\n\\r\\n        return dna.Count(x =\\u003e x == c);\\r\\n    }\\r\\n}"}
191	30	14cadeba089595c7b6f33f31	hibernating	csharp	nucleotide-count	\N	\N	0	2	2016-03-25 08:44:15	2016-03-25 08:44:15	128	{"DNA.cs":"using System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class DNA\\r\\n{\\r\\n    private const string Neucleotides = \\"GACT\\";\\r\\n    private readonly string dna;\\r\\n    public Dictionary\\u003cchar, int\\u003e NucleotideCounts { get; set; }\\r\\n\\r\\n    public DNA(string dna)\\r\\n    {\\r\\n        this.dna = dna;\\r\\n        NucleotideCounts = new Dictionary\\u003cchar, int\\u003e { { 'A', 0 }, { 'C', 0 }, { 'G', 0 }, { 'T', 0 } };\\r\\n        foreach (var neucleotide in dna)\\r\\n        {\\r\\n            Validate(neucleotide);\\r\\n            NucleotideCounts[neucleotide]++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private static void Validate(char neucleotide)\\r\\n    {\\r\\n        if (!Neucleotides.Contains(neucleotide)) { throw new InvalidNucleotideException(); }\\r\\n    }\\r\\n\\r\\n    public int Count(char neucleotide)\\r\\n    {\\r\\n        Validate(neucleotide);\\r\\n        return dna.Count(x =\\u003e x == neucleotide);\\r\\n    }\\r\\n}"}
192	30	721bd74fa3b9eecd33ac4b39	\N	python	meetup	\N	\N	0	1	2016-03-23 07:05:00	2016-03-23 07:05:00	129	{"meetup.py":"from datetime import date\\nimport calendar\\nimport re\\n\\nclass MeetupDayException(Exception):\\n\\tpass\\n\\ndef meetup_day(year,month,week_day,code):\\n\\tweekday_list = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', \\n\\t\\t\\t\\t\\t'Friday', 'Saturday', 'Sunday']\\n\\tweekday_index = weekday_list.index(week_day)\\n\\tif code == 'teenth':\\n\\t\\tfor teenth in range(13,20):\\n\\t\\t\\tif weekday_index == date(year,month,teenth).weekday():\\n\\t\\t\\t\\treturn date(year, month, teenth)\\n\\tcal_matrix = calendar.monthcalendar(year, month)\\n\\tif re.findall('^[0-9]', code):\\n\\t\\ttry:\\n\\t\\t\\tif cal_matrix[0][weekday_index] == 0:\\n\\t\\t\\t\\treturn date(year, month, cal_matrix[int(code[0])][weekday_index])\\n\\t\\t\\telse:\\n\\t\\t\\t\\treturn date(year,month, cal_matrix[int(code[0]) - 1][weekday_index])\\n\\t\\texcept IndexError:\\n\\t\\t\\traise MeetupDayException\\n\\tif code == 'last':\\n\\t\\tif cal_matrix[-1][weekday_index]:\\n\\t\\t\\treturn date(year,month, cal_matrix[-1][weekday_index])\\n\\t\\telse:\\n\\t\\t\\treturn date(year,month, cal_matrix[-2][weekday_index])\\n\\n\\nmeetup_day.MeetupDayException = MeetupDayException"}
193	35	b3645cbee285dc981a74823f	done	python	leap	\N	\N	0	2	2015-11-24 07:12:31	2015-11-24 07:12:31	130	{"year.py":"def is_leap_year(year):\\n\\n\\tif year % 400 == 0:\\n\\t\\treturn True\\n\\telif year % 100 == 0:\\n\\t\\treturn False\\n\\telif year % 4 == 0:\\n\\t\\treturn True\\n\\telse:\\n\\t\\treturn False"}
194	35	10f4ebb3f391d579dd362368	superseded	python	leap	\N	\N	0	1	2016-01-21 04:15:11	2016-01-21 04:15:11	130	{"year.py":"def is_leap_year(year):\\n\\n\\tif year%400 == 0:\\n\\t\\treturn 1\\n\\telif year%100 == 0:\\n\\t\\treturn 0\\n\\telif year%4 == 0:\\n\\t\\treturn 1\\n\\telse:\\n\\t\\treturn 0"}
195	14	91e28337deb38455e1fa452b	hibernating	elixir	bob	\N	\N	0	1	2016-03-26 17:36:17	2016-03-26 17:36:17	131	{"bob.exs":"defmodule Teenager do\\n\\n  def hey(input) do\\n    _hey(String.strip(input), String.upcase(input), String.last(input))\\n  end\\n\\n  defp _hey(\\"\\", _, _), do: \\"Fine. Be that way!\\"\\n\\n  defp _hey(_, _, \\"?\\"), do: \\"Sure.\\"\\n\\n  defp _hey(input, input, _) do\\n    if(input |\\u003e hasAlphaChars?)do\\n      \\"Whoa, chill out!\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp _hey(_, _, _), do: \\"Whatever.\\"\\n\\n  defp hasAlphaChars?(input), do: input |\\u003e String.match?(~r/\\\\p{L}\\\\p{M}*+/)\\n\\nend"}
198	14	7462719f05068495087f5003	done	ruby	bob	\N	\N	0	8	2016-03-25 07:42:15	2016-03-25 07:42:15	134	{"bob.rb":"class Bob\\n  def hey(what_they_said)\\n    what_i_heard = interpret(what_they_said)\\n\\n    if what_i_heard.is_silence?\\n      'Fine. Be that way!'\\n    elsif what_i_heard.is_shouty?\\n      'Woah, chill out!'\\n    elsif what_i_heard.is_a_question?\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def interpret(message)\\n    TeenageInterpretation.new(message)\\n  end\\nend\\n\\nclass TeenageInterpretation\\n  def initialize(message = nil)\\n    @message = message.to_s\\n  end\\n\\n  def is_silence?\\n    @message.strip == ''\\n  end\\n\\n  def is_shouty?\\n    @message =~ /[A-Z]/ \\u0026\\u0026 @message.upcase == @message\\n  end\\n\\n  def is_a_question?\\n    @message.end_with?('?')\\n  end\\nend"}
199	14	197674dfa6366d5b10109a5c	superseded	ruby	bob	\N	\N	0	6	2016-03-26 06:39:44	2016-03-26 06:39:44	134	{"bob.rb":"class Bob\\n  def hey(what_they_said)\\n    what_i_heard = interpret(what_they_said)\\n\\n    if what_i_heard.is_silence?\\n      'Fine. Be that way!'\\n    elsif what_i_heard.is_shouty?\\n      'Woah, chill out!'\\n    elsif what_i_heard.is_a_question?\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def interpret(message)\\n    TeenageInterpretation.new(message)\\n  end\\nend\\n\\nclass TeenageInterpretation\\n  attr_reader :message\\n\\n  def initialize(message = nil)\\n    @message = message.to_s\\n  end\\n\\n  def is_silence?\\n    message.to_s.strip == ''\\n  end\\n\\n  def is_shouty?\\n    message =~ /[A-Z]/ \\u0026\\u0026 message.upcase == message\\n  end\\n\\n  def is_a_question?\\n    message.end_with?('?')\\n  end\\nend"}
200	14	6ac1211f0db1fad2095e2caa	superseded	ruby	bob	\N	\N	0	4	2016-03-26 11:26:01	2016-03-26 11:26:01	134	{"bob.rb":"class Bob\\n  def hey(message)\\n    message = message.to_s\\n\\n    if silence?(message)\\n      'Fine. Be that way!'\\n    elsif shouty?(message)\\n      'Woah, chill out!'\\n    elsif question?(message)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def silence?(message)\\n    message.strip == ''\\n  end\\n\\n  def shouty?(message)\\n    message =~ /[A-Z]/ \\u0026\\u0026 message.upcase == message\\n  end\\n\\n  def question?(message)\\n    message.end_with?('?')\\n  end\\nend"}
201	14	1c8eb78fdcd76a284cb42195	superseded	ruby	bob	\N	\N	0	2	2016-03-26 13:03:51	2016-03-26 13:03:51	134	{"bob.rb":"class Bob\\n  def hey(message)\\n    if silence?(message)\\n      'Fine. Be that way!'\\n    elsif shouty?(message)\\n      'Woah, chill out!'\\n    elsif question?(message)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def silence?(message)\\n    message =~ /^\\\\s*$/\\n  end\\n\\n  def shouty?(message)\\n    message.upcase == message\\n  end\\n\\n  def question?(message)\\n    message[-1] == '?'\\n  end\\nend"}
202	14	f5efaa535ffb16bf5f52037f	superseded	ruby	bob	\N	\N	0	1	2016-03-26 19:08:25	2016-03-26 19:08:25	134	{"bob.rb":"class Bob\\n  def hey(message)\\n    if is_silence?(message)\\n      'Fine. Be that way!'\\n    elsif is_shouty?(message)\\n      'Woah, chill out!'\\n    elsif is_question?(message)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def is_silence?(message)\\n    message =~ /^\\\\s*$/\\n  end\\n\\n  def is_shouty?(message)\\n    message.upcase == message\\n  end\\n\\n  def is_question?(message)\\n    message[-1] == '?'\\n  end\\nend"}
203	14	cb35ac57c7bb30d09962c588	superseded	ruby	bob	\N	\N	0	3	2016-03-26 22:04:11	2016-03-26 22:04:11	134	{"bob.rb":"class Bob\\n  def hey(message)\\n    if silence?(message)\\n      'Fine. Be that way!'\\n    elsif shouty?(message)\\n      'Woah, chill out!'\\n    elsif question?(message)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def silence?(message)\\n    message.strip == ''\\n  end\\n\\n  def shouty?(message)\\n    message.upcase == message\\n  end\\n\\n  def question?(message)\\n    message.end_with?('?')\\n  end\\nend"}
204	14	685f6e6889e3a8e012d783ac	superseded	ruby	bob	\N	\N	0	5	2016-03-26 23:54:51	2016-03-26 23:54:51	134	{"bob.rb":"class Bob\\n  def hey(what_they_said)\\n    what_i_heard = interpret(what_they_said)\\n\\n    if what_i_heard.is_silence?\\n      'Fine. Be that way!'\\n    elsif what_i_heard.is_shouty?\\n      'Woah, chill out!'\\n    elsif what_i_heard.is_a_question?\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def interpret(message)\\n    Interpretation.new(message)\\n  end\\n\\n  class Interpretation \\u003c Struct.new(:message)\\n    def is_silence?\\n      message.nil? || message.strip == ''\\n    end\\n\\n    def is_shouty?\\n      message =~ /[A-Z]/ \\u0026\\u0026 message.upcase == message\\n    end\\n\\n    def is_a_question?\\n      message.end_with?('?')\\n    end\\n  end\\nend"}
205	14	bbe6469c3d78b94ae5cb606b	superseded	ruby	bob	\N	\N	0	7	2016-03-27 00:54:50	2016-03-27 00:54:50	134	{"bob.rb":"class Bob\\n  def hey(what_they_said)\\n    what_i_heard = interpret(what_they_said)\\n\\n    if what_i_heard.is_silence?\\n      'Fine. Be that way!'\\n    elsif what_i_heard.is_shouty?\\n      'Woah, chill out!'\\n    elsif what_i_heard.is_a_question?\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def interpret(message)\\n    TeenageInterpretation.new(message)\\n  end\\nend\\n\\nclass TeenageInterpretation\\n  attr_reader :message\\n\\n  def initialize(message = nil)\\n    @message = message.to_s\\n  end\\n\\n  def is_silence?\\n    message.strip == ''\\n  end\\n\\n  def is_shouty?\\n    message =~ /[A-Z]/ \\u0026\\u0026 message.upcase == message\\n  end\\n\\n  def is_a_question?\\n    message.end_with?('?')\\n  end\\nend"}
206	14	c9588ec646474c13d92107a7	pending	python	leap	\N	\N	0	1	2016-03-25 12:14:41	2016-03-25 12:14:41	135	{"\\\\python\\\\leap\\\\leap.py":"# -*- coding: utf-8 -*-\\r\\n\\"\\"\\"\\r\\nCreated on Tue Jan 20 22:27:49 2015\\r\\n\\r\\n@author: Kirsten\\r\\n\\"\\"\\"\\r\\n\\r\\ndef is_leap_year(year):\\r\\n  if year/400:\\r\\n      return\\r\\n  if year/4 == int and not year/100 == int:\\r\\n      return"}
207	14	aaabea5153f3b872d5cb86c0	superseded	ruby	anagram	\N	\N	0	1	2016-03-26 14:25:55	2016-03-26 14:25:55	136	{"anagram.rb":"class Anagram\\n\\n  attr_accessor :word\\n\\n  def initialize(word)\\n    @word = word.downcase\\n  end\\n\\n  def match(anagrams)\\n    anagrams.select do |anagram|\\n      anagrams_of(word).include? anagram.downcase\\n    end\\n  end\\n\\n  private\\n\\n  def anagrams_of(word)\\n    word.chars.permutation.map(\\u0026:join).reject {|anagram| anagram.eql? word}\\n  end\\n\\nend"}
208	14	2da717d53c585140e2ec0205	done	ruby	anagram	\N	\N	0	2	2016-03-26 20:52:57	2016-03-26 20:52:57	136	{"anagram.rb":"class Anagram\\n\\n  attr_reader :word\\n\\n  def initialize(word)\\n    @word = word.downcase\\n  end\\n\\n  def match(anagrams)\\n    anagrams.select do |anagram|\\n      anagram? anagram.downcase\\n    end\\n  end\\n\\n  private\\n\\n  def anagram?(potential_anagram)\\n    return false if potential_anagram.eql? word\\n    word.chars.sort.eql? potential_anagram.chars.sort\\n  end\\n\\nend"}
231	14	ace694b983950c8d7acf9117	hibernating	python	anagram	\N	\N	0	1	2016-03-25 20:30:42	2016-03-25 20:30:42	154	{"/python/anagram/anagram.py":"from functools import partial\\n\\n\\ndef is_anagram_of(word1, word2):\\n    \\"\\"\\"\\n    Case insensitive anagram detector.\\n\\n    Returns True if word1 is an anagram of (but not equal to) word2\\n    \\"\\"\\"\\n    word1 = word1.lower()\\n    word2 = word2.lower()\\n    return word1 != word2 and sorted(word1) == sorted(word2)\\n\\n\\ndef detect_anagrams(word, anagrams):\\n    return filter(partial(is_anagram_of, word), anagrams)"}
209	14	940f318064ba81e906d79c98	\N	python	roman-numerals	\N	\N	0	1	2016-03-25 09:59:44	2016-03-25 09:59:44	137	{"roman.py":"numbers_list = [\\n\\t{3000:'MMM'},\\n\\t{1000:'M'},\\n\\t{900:'CM'},\\n\\t{500:'D'},\\n\\t{400:'CD'},\\n\\t{100:'C'},\\n\\t{90:'XC'},\\n\\t{50:'L'},\\n\\t{40:'XL'},\\n\\t{10:'X'},\\n\\t{9:'IX'},\\n\\t{5:'V'},\\n\\t{4:'IV'},\\n\\t{1:'I'}\\n\\t]\\n\\n\\ndef numeral(arabic):\\n\\tarabic = str(arabic)\\n\\tlength = len(arabic)\\n\\tkey = (int(arabic[0]))\\n\\tif length \\u003e 1:\\n\\t\\tfor _ in range(1, length):\\n\\t\\t\\tif key == 1:\\n\\t\\t\\t\\tkey = 10\\n\\t\\t\\telse:\\n\\t\\t\\t\\tkey = (key * 10)\\n\\telse:\\n\\t\\tkey = (int(arabic[0]))\\n\\toutput = ''\\n\\tfor index, value in enumerate(numbers_list):\\n\\t\\ttemp = list(value.items())\\n\\t\\ttemp = temp[0][0]\\n\\t\\tif index \\u003c (len(numbers_list)-1):\\n\\t\\t\\ttemp2 = list(numbers_list[index+1].items())\\n\\t\\t\\ttemp2 = temp2[0][0]\\n\\t\\tif key == temp:\\n\\t\\t\\toutput = value[key]\\n\\t\\t\\tbreak\\n\\t\\tif key \\u003c temp and key \\u003e temp2:\\n\\t\\t\\tif (key % 6) == 0 or (key % 7) == 0 or (key % 8) == 0:\\n\\t\\t\\t\\toutput = numbers_list[index+1][temp2]\\n\\t\\t\\t\\tkey -= temp2\\n\\t\\t\\t\\toutput += numeral(key)\\n\\t\\t\\t\\tbreak\\n\\t\\t\\toutput = numbers_list[index+1][temp2] * (int(arabic[0]))\\n\\t\\t\\tbreak\\n\\tif length \\u003e 1:\\n\\t\\ttrimed_number = arabic[1:]\\n\\t\\treturn output + numeral(trimed_number)\\n\\treturn output"}
210	14	5adf26a79e6d3e3560cf001e	pending	python	word-count	\N	\N	0	1	2016-03-25 21:14:52	2016-03-25 21:14:52	138	{"/python/word-count/wordcount.py":"class Counter(dict):\\n    def __missing__(self, key):\\n        return 0\\n\\n\\ndef word_count(words):\\n    c = Counter()\\n    for word in words.split():\\n        c[word] += 1\\n\\n    return c"}
211	14	d04d534bf52355956386e4fe	pending	csharp	strain	\N	\N	0	2	2016-03-25 15:23:48	2016-03-25 15:23:48	139	{"\\\\csharp\\\\strain\\\\Strain.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace ExercismLib.csharp.strain\\r\\n{\\r\\n    public static class Strain\\r\\n    {\\r\\n        public static IEnumerable\\u003cT\\u003e Keep\\u003cT\\u003e(this IEnumerable\\u003cT\\u003e source, Predicate\\u003cT\\u003e predicate)\\r\\n        {\\r\\n            foreach (T item in source.Where(x =\\u003e predicate(x)))\\r\\n            {\\r\\n                yield return item;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        public static IEnumerable\\u003cT\\u003e Discard\\u003cT\\u003e(this IEnumerable\\u003cT\\u003e source, Predicate\\u003cT\\u003e predicate)\\r\\n        {\\r\\n            foreach (T item in source.Where(x =\\u003e !predicate(x)))\\r\\n            {\\r\\n                yield return item;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}"}
212	14	b7d3a6ac871961aa03a6dd34	superseded	csharp	strain	\N	\N	0	1	2016-03-26 23:20:43	2016-03-26 23:20:43	139	{"\\\\csharp\\\\strain\\\\Strain.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace ExercismLib.csharp.strain\\r\\n{\\r\\n    public static class Strain\\r\\n    {\\r\\n        public static LinkedList\\u003cint\\u003e Keep(this Func\\u003cint\\u003e predicate)\\r\\n        {\\r\\n            new List\\u003cint\\u003e().Any()\\r\\n        }\\r\\n    }\\r\\n}"}
213	14	3509e366cdc6639460cce91a	\N	rust	leap	\N	\N	0	2	2016-03-25 19:35:04	2016-03-25 19:35:04	140	{"src/lib.rs":"pub fn is_leap_year(year: i32) -\\u003e bool {\\n    (year % 4 == 0) \\u0026\\u0026 (year % 100 != 0) || (year % 400 == 0)\\n}"}
214	14	db08ad7cd4feafd57a34c32f	\N	rust	leap	\N	\N	0	1	2016-03-26 07:43:08	2016-03-26 07:43:08	140	{"src/lib.rs":"pub fn is_leap_year(year: i32) -\\u003e bool {\\n    if (year % 4 == 0) {\\n        if (year % 100 == 0) {\\n            if (year % 400 == 0)  {\\n                return true; \\n            } else {\\n                return false;\\n            }\\n        } else {\\n            return true;\\n        }\\n    } else {\\n        return false;\\n    }\\n}"}
215	14	5e472aedb5eabab8424ddba9	\N	clojure	bob	\N	\N	0	1	2016-03-25 16:10:51	2016-03-25 16:10:51	141	{"src/bob.clj":"(ns bob)\\n\\n(def shout-something\\n\\t(re-pattern #\\"^[^a-z]*[A-Z]+[^a-z]*$\\"))\\n\\n(def ask-something\\n\\t(re-pattern #\\"\\\\?$\\"))\\n\\n(defn response-for\\n\\t[text]\\n\\t(if (clojure.string/blank? text)\\n\\t\\t\\"Fine. Be that way!\\"\\n\\t(if (re-find shout-something text)\\n\\t\\t\\"Whoa, chill out!\\"\\n\\t(if (re-find ask-something text)\\n\\t\\t\\"Sure.\\"\\n\\t\\t\\"Whatever.\\"))))"}
216	14	b96983d08effff4fb71504fe	pending	python	space-age	\N	\N	0	1	2016-03-27 08:35:11	2016-03-27 08:35:11	142	{"space_age.py":"class SpaceAge:\\n    def __init__(self, seconds):\\n        self.seconds = seconds\\n\\n    def precise(self):\\n        return self.seconds / 31557600\\n\\n    def on_earth(self):\\n        return round(self.precise(), 2)\\n\\n    def on_mercury(self):\\n        return round(self.precise() / 0.2408467, 2)\\n\\n    def on_venus(self):\\n        return round(self.precise() / 0.61519726, 2)\\n\\n    def on_mars(self):\\n        return round(self.precise() / 1.8808158, 2)\\n\\n    def on_jupiter(self):\\n        return round(self.precise() / 11.862615, 2)\\n\\n    def on_saturn(self):\\n        return round(self.precise() / 29.447498, 2)\\n\\n    def on_uranus(self):\\n        return round(self.precise() / 84.016846, 2)\\n\\n    def on_neptune(self):\\n        return round(self.precise() / 164.79132, 2)"}
217	14	7cf63468e6b1f9aa7d55588b	\N	javascript	leap	\N	\N	0	2	2016-03-26 08:35:28	2016-03-26 08:35:28	143	{"leap.js":"'use strict';\\nfunction divisibleBy(divisor) {\\n  return (dividend) =\\u003e dividend % divisor === 0;\\n}\\n\\nfunction not(fn) {\\n  return (x) =\\u003e !fn(x);\\n}\\n\\nfunction and(f, g) {\\n  return (x) =\\u003e f(x) \\u0026\\u0026 g(x);\\n}\\n\\nfunction or(f, g) {\\n  return (x) =\\u003e f(x) || g(x);\\n}\\n\\nconst leap = or(divisibleBy(400),\\n  and(divisibleBy(4), not(divisibleBy(100))));\\n  \\nmodule.exports = leap;"}
218	14	b5649e043872535c9afe10a9	\N	javascript	leap	\N	\N	0	3	2016-03-27 01:51:22	2016-03-27 01:51:22	143	{"leap.js":"'use strict';\\nfunction divisibleBy(divisor) {\\n  return (dividend) =\\u003e dividend % divisor === 0;\\n}\\n\\nfunction not(fn) {\\n  return (x) =\\u003e !fn(x);\\n}\\n\\nfunction and(f, g) {\\n  return (x) =\\u003e f(x) \\u0026\\u0026 g(x);\\n}\\n\\nfunction or(f, g) {\\n  return (x) =\\u003e f(x) || g(x);\\n}\\n\\nconst leap = or(\\n  and(divisibleBy(4), not(divisibleBy(100))),\\n  divisibleBy(400)\\n);\\n\\nmodule.exports = leap;"}
219	14	4b08489c177eff07570b4075	\N	javascript	leap	\N	\N	0	1	2016-03-27 03:49:01	2016-03-27 03:49:01	143	{"leap.js":"'use strict';\\nfunction divisibleBy(year, n) {\\n  return year % n === 0;\\n}\\n\\nfunction leap (year) {\\n  return divisibleBy(year, 400) ||\\n    !divisibleBy(year, 100) \\u0026\\u0026\\n    divisibleBy(year, 4);\\n}\\n\\nmodule.exports = leap;"}
220	14	72cbb03f28a68b7ec0b19400	pending	python	sieve	\N	\N	0	1	2016-03-25 16:21:55	2016-03-25 16:21:55	144	{"\\\\python\\\\sieve\\\\sieve.py":"def sieve(N):\\n    candidates = range(2, N+1)\\n    confirmed = []\\n\\n    while candidates:\\n        prime = candidates[0]\\n        confirmed.append(prime)\\n        candidates = [i for i in candidates if i % prime]\\n\\n    return confirmed"}
232	14	00502254e4cbf68c095ccc10	done	go	gigasecond	\N	\N	0	1	2016-03-25 12:54:30	2016-03-25 12:54:30	155	{"gigasecond.go":"package gigasecond\\n\\nimport \\"time\\"\\n\\n// Gigasecond - 10*9 seconds || 1 billion seconds\\nconst Gigasecond = 1e9 * time.Second\\n\\n// AddGigasecond - time + Gigasecond\\nfunc AddGigasecond(t time.Time) time.Time {\\n\\treturn t.Add(Gigasecond)\\n}"}
221	14	841e1c211958b6fe197f89d2	\N	haskell	meetup	\N	\N	0	1	2016-03-26 03:29:18	2016-03-26 03:29:18	145	{"Meetup.hs":"module Meetup (Weekday(..), Schedule(..), meetupDay) where\\n\\nimport Data.Time.Calendar (Day, fromGregorian, gregorianMonthLength)\\nimport Data.Time.Calendar.WeekDate (toWeekDate)\\nimport Data.List (elemIndex)\\n\\ndata Schedule = First | Second | Third | Fourth | Last | Teenth\\ndata Weekday  = Monday | Tuesday | Wednesday | Thursday | Friday\\n              | Saturday | Sunday deriving Eq\\n\\nmeetupDay :: Schedule -\\u003e Weekday -\\u003e Integer -\\u003e Int -\\u003e Day\\nmeetupDay nth weekday year month =\\n  fromGregorian year month $ choose nth calendarColumn\\n  where\\n    calendarColumn = [firstWeekDay, firstWeekDay + 7..lastDay]\\n    lastDay = gregorianMonthLength year month\\n    firstWeekDay = maybe undefined succ $ elemIndex weekday $\\n      map (toWeekDay . toWeekDate . fromGregorian year month) [1..7]\\n\\n    toWeekDay (_, _, 1) = Monday\\n    toWeekDay (_, _, 2) = Tuesday\\n    toWeekDay (_, _, 3) = Wednesday\\n    toWeekDay (_, _, 4) = Thursday\\n    toWeekDay (_, _, 5) = Friday\\n    toWeekDay (_, _, 6) = Saturday\\n    toWeekDay (_, _, 7) = Sunday\\n    toWeekDay _ = undefined\\n\\n    choose First = head\\n    choose Second = (!! 1)\\n    choose Third = (!! 2)\\n    choose Fourth = (!! 3)\\n    choose Last = last\\n    choose Teenth = head . filter (\\\\n -\\u003e 13 \\u003c= n \\u0026\\u0026 n \\u003c= 19)"}
222	14	152eec623a07f78c106f88fe	\N	scala	phone-number	\N	\N	0	1	2016-03-26 03:10:48	2016-03-26 03:10:48	146	{"src/main/scala/PhoneNumber.scala":"class PhoneNumber(input: String) {\\n\\n  val number: String = {\\n    val digits = input.filter(_.isDigit)\\n    digits match {\\n      case s if s.length == 10 =\\u003e digits\\n      case s if s.length == 11 \\u0026\\u0026 s.charAt(0) == '1' =\\u003e digits.substring(1)\\n      case _ =\\u003e \\"0000000000\\"\\n    }\\n  }\\n\\n  val areaCode = number.substring(0, 3)\\n\\n  override def toString = s\\"($areaCode) ${number.substring(3, 6)}-${number.substring(6, 10)}\\"\\n}"}
223	14	1f84c3640b0fa0e00bb5f828	hibernating	lisp	grains	\N	\N	0	1	2016-03-25 10:01:48	2016-03-25 10:01:48	147	{"grains.lisp":"(in-package #:cl-user)\\r\\n(defpackage #:grains\\r\\n  (:use #:cl)\\r\\n  (:export :square :total))\\r\\n(in-package #:grains)\\r\\n\\r\\n(defun square (n)\\r\\n  (expt 2 (- n 1)))\\r\\n\\r\\n(defun total ()\\r\\n  (loop\\r\\n     for i from 1 to 64\\r\\n     sum (square i)))"}
224	14	bf5a16adc255dee4807f0b30	\N	go	hello-world	\N	\N	0	1	2016-03-26 17:30:43	2016-03-26 17:30:43	148	{"hello.go":"// This is a \\"stub\\" file.  It's a little start on your solution.\\r\\n// It's not a complete solution though; you have to write some code.\\r\\n\\r\\n// This next comment is a \\"build constraint.\\"  It's here for, well, kind of\\r\\n// complicated testing purposes you don't need to worry about now.\\r\\n// Actually, you can delete it.\\r\\n\\r\\n// +build !example\\r\\n\\r\\n// The package name is expected by the test program.\\r\\n// It has to stay just the way it is.\\r\\npackage hello\\r\\n\\r\\n// TestVersion identifies the version of the test program that you are\\r\\n// writing your code to. If the test program changes in the future --\\r\\n// after you have posted this code to the Exercism site -- nitpickers\\r\\n// will see that your code can't necessarily be expected to pass the\\r\\n// current test suite because it was written to an earlier test version.\\r\\nconst TestVersion = 1\\r\\n\\r\\n// It's good style to write a comment here documenting HelloWorld.\\r\\n// (But delete all these instructional comments!)\\r\\nfunc HelloWorld(s string) string {\\r\\n\\tif s == \\"\\" {\\r\\n\\t\\treturn \\"Hello, World!\\"\\r\\n\\t} else {\\r\\n\\t\\treturn \\"Hello, \\" + s + \\"!\\"\\r\\n\\t}\\r\\n}"}
225	14	16bf35fa3b4a199dfd4afa81	pending	javascript	word-count	\N	\N	0	1	2016-03-26 04:09:53	2016-03-26 04:09:53	149	{"Javascript/word-count/word-count.js":"var Word = function (string) {\\n    var stringArr = string.split(/\\\\s+/g);\\n    return stringArr.reduce(function(arr,i){\\n       arr[i] = (+arr[i]||0)+1;\\n       return arr;\\n    },{});\\n};\\n\\nmodule.exports = Word;"}
226	14	d63aff24024e3f97d00bde14	done	coffeescript	word-count	\N	\N	0	1	2016-03-26 06:01:55	2016-03-26 06:01:55	150	{"words.coffee":"module.exports = class Words\\n  constructor: (@words) -\\u003e\\n    @count = @words.split(\\" \\").reduce(@histogrammer, {})\\n\\n  histogrammer: (histogram, word) =\\u003e\\n    if word = @sanitize(word)\\n      histogram[word] ?= 0\\n      histogram[word] += 1\\n    histogram\\n\\n  sanitize: (word) -\\u003e\\n    word.replace(/\\\\W/g, '').toLowerCase()"}
227	14	8b07f145a6f6c3617f850539	\N	go	raindrops	\N	\N	0	1	2016-03-26 08:21:21	2016-03-26 08:21:21	151	{"raindrops.go":"package raindrops\\n\\nimport \\"fmt\\"\\n\\n// Constants\\nconst TestVersion = 1\\n\\n// Convert an integer to a string\\nfunc Convert(r int) string {\\n\\ts := \\"\\"\\n\\tif r%3 == 0 {\\n\\t\\ts += \\"Pling\\"\\n\\t}\\n\\tif r%5 == 0 {\\n\\t\\ts += \\"Plang\\"\\n\\t}\\n\\tif r%7 == 0 {\\n\\t\\ts += \\"Plong\\"\\n\\t}\\n\\tif s == \\"\\" {\\n\\t\\ts = fmt.Sprintf(\\"%v\\", r)\\n\\t}\\n\\treturn s\\n}"}
228	14	0d11d9c4fd08f24740948650	\N	go	raindrops	\N	\N	0	2	2016-03-26 11:52:34	2016-03-26 11:52:34	151	{"raindrops.go":"package raindrops\\n\\nimport \\"strconv\\"\\n\\n// Constants\\nconst TestVersion = 1\\n\\n// Convert an integer to a string.\\n// If the number contains 3 as a prime factor, output 'Pling'.\\n// If the number contains 5 as a prime factor, output 'Plang'.\\n// If the number contains 7 as a prime factor, output 'Plong'.\\n// If the number does not contain 3, 5, or 7 as a prime factor,\\n// just pass the number's digits straight through.\\nfunc Convert(r int) string {\\n\\ts := \\"\\"\\n\\tif r%3 == 0 {\\n\\t\\ts += \\"Pling\\"\\n\\t}\\n\\tif r%5 == 0 {\\n\\t\\ts += \\"Plang\\"\\n\\t}\\n\\tif r%7 == 0 {\\n\\t\\ts += \\"Plong\\"\\n\\t}\\n\\tif s == \\"\\" {\\n\\t\\ts = strconv.Itoa(r)\\n\\t}\\n\\treturn s\\n}"}
229	14	7d94e0d0c08935b910578c42	pending	javascript	beer-song	\N	\N	0	1	2016-03-25 23:54:37	2016-03-25 23:54:37	152	{"beer-song.js":"var BeerSong = {\\n  verse : function(count){\\n    if(count == 0){\\n      return \\"No more bottles of beer on the wall, no more bottles of beer.\\\\n\\" + \\n             \\"Go to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\"\\n    } else {\\n      return this.bottles(count) + \\" of beer on the wall, \\" + \\n             this.bottles(count) + \\" of beer.\\\\n\\" +\\n             \\"Take \\" + this.next_bottle(count) + \\" down and pass it around, \\" + \\n             this.bottles(count - 1) + \\" of beer on the wall.\\\\n\\";  \\n    }    \\n  },\\n  sing : function(verses_start, verses_stop){\\n    var result = \\"\\";\\n    verses_stop = verses_stop || 0\\n    for(var v = verses_start; v \\u003e verses_stop; v--){\\n      result = result + this.verse(v) + '\\\\n';\\n    }\\n    return result + this.verse(v);\\n  },\\n  bottles : function(count){\\n    if(count == 0){\\n      return \\"no more bottles\\"\\n    } else if(count == 1){\\n      return \\"1 bottle\\";\\n    } else {\\n      return count + \\" bottles\\";\\n    }\\n  },\\n  next_bottle : function(count){\\n    if(count == 1){\\n      return \\"it\\";\\n    } else {\\n      return \\"one\\";\\n    }\\n  }\\n};\\n\\nmodule.exports = BeerSong;"}
230	14	c22eaa4fc8af770937bf75d7	pending	ruby	prime-factors	\N	\N	0	1	2016-03-25 13:52:09	2016-03-25 13:52:09	153	{"prime_factors.rb":"require 'prime'\\n\\nclass PrimeFactors\\n  def self.for(n)\\n    n.prime_division.each_with_object([]) do |(factor, exponent), factors|\\n      exponent.times { factors \\u003c\\u003c factor }\\n    end\\n  end\\nend"}
233	14	9452774436c7aa57477c2943	pending	clojure	rna-transcription	\N	\N	0	1	2016-03-25 10:45:09	2016-03-25 10:45:09	156	{"rna_transcription.clj":"(ns rna-transcription\\n  (:require [clojure.string :refer [join]]))\\n\\n(def dna-rna-map\\n  {\\\\G \\\\C\\n   \\\\C \\\\G\\n   \\\\T \\\\A\\n   \\\\A \\\\U})\\n\\n(defn rna-nucleotide [dna-nucleotide]\\n  (or (dna-rna-map dna-nucleotide) (throw (AssertionError.))))\\n\\n(defn to-rna [dna]\\n  (join (map rna-nucleotide dna)))"}
234	14	5136a73780f7313d5722fb14	pending	scala	hexadecimal	\N	\N	0	1	2016-03-26 14:15:15	2016-03-26 14:15:15	157	{"src\\\\main\\\\scala\\\\Hexadecimal.scala":"object Hexadecimal {\\r\\n    def hexToInt(hex:String) : Int = {\\r\\n        val lowerHex = hex.toLowerCase\\r\\n        if (lowerHex.forall(hexDigits.contains(_))) lowerHex.foldLeft(0)((ac, c) =\\u003e ac*16+hexDigits(c))\\r\\n        else 0\\r\\n    }\\r\\n    private val hexDigits = (('0' to '9').zip(0 to 9) ++ ('a' to 'z').zip(10 to 15)).toMap\\r\\n        /*('0', 0),\\r\\n        ('1', 1),\\r\\n        ('2', 2),\\r\\n        ('3', 3),\\r\\n        ('4', 4),\\r\\n        ('5', 5),\\r\\n        ('6', 6),\\r\\n        ('7', 7),\\r\\n        ('8', 8),\\r\\n        ('9', 9),\\r\\n        ('a', 10),\\r\\n        ('b', 11),\\r\\n        ('c', 12),\\r\\n        ('d', 13),\\r\\n        ('e', 14),\\r\\n        ('f', 15)\\r\\n        )*/\\r\\n}"}
235	14	3878982e2cba08b0d19d35a3	\N	haskell	triangle	\N	\N	0	1	2016-03-26 16:06:27	2016-03-26 16:06:27	158	{"Triangle.hs":"module Triangle (TriangleType(..), triangleType) where\\n\\nimport Data.List (sortBy)\\n\\ndata TriangleType = Equilateral |\\n                    Isosceles   |\\n                    Scalene     |\\n                    Illogical deriving (Eq, Show)\\n\\ntriangleType :: Int -\\u003e Int -\\u003e Int -\\u003e TriangleType\\ntriangleType a b c\\n  | invalidSumSides = Illogical\\n  | a == b \\u0026\\u0026 b == c = Equilateral\\n  | a == b || a == c || b == c = Isosceles\\n  | otherwise = Scalene\\n    where invalidSumSides = hypotenuse == 0 || hypotenuse \\u003e= sum (tail sorted)\\n          sorted = sortBy (flip compare) [a, b, c]\\n          hypotenuse = head sorted"}
236	14	dd06951fc72f9e20c5a24dcd	\N	python	grains	\N	\N	0	1	2016-03-26 10:17:34	2016-03-26 10:17:34	159	{"grains.py":"def on_square(number):\\n    return 2**(number-1)\\n\\ndef total_after(number):\\n    return reduce(lambda x, y: x + y, list(2**i for i in range(number)))"}
237	14	8bc135cfc7077a65af010111	\N	scala	bob	\N	\N	0	1	2016-03-26 01:36:43	2016-03-26 01:36:43	160	{"src/main/scala/Bob.scala":"/**\\n * Created by sicoea on 13/10/2015.\\n */\\nclass Bob {\\n\\n  def hey(statement: String): String = statement match {\\n    case Yell() =\\u003e \\"Whoa, chill out!\\"\\n    case Question() =\\u003e \\"Sure.\\"\\n    case NonStatement() =\\u003e \\"Fine. Be that way!\\"\\n    case _ =\\u003e \\"Whatever.\\"\\n  }\\n}\\n\\nobject Question {\\n  def unapply(statement: String): Boolean = statement.endsWith(\\"?\\")\\n}\\n\\nobject Yell {\\n  def unapply(statement: String): Boolean = statement.forall(x =\\u003e !x.isLetter || x.isUpper) \\u0026\\u0026 !statement.forall(!_.isLetter)\\n}\\n\\nobject NonStatement {\\n  def unapply(statement: String): Boolean = statement.forall(_.isWhitespace)\\n}"}
238	14	da1712b52d9f38a596c43024	pending	ruby	word-count	\N	\N	0	1	2016-03-26 03:37:41	2016-03-26 03:37:41	161	{"/ruby/word-count/word_count.rb":"class Phrase\\n  def initialize(phrase)\\n    @words = phrase.split(/[\\\\s,]+/)\\n  end\\n\\n  def word_count\\n    @words.each_with_object(Hash.new(0)) do |word, counts|\\n      sanitized_word = strip_characters(word)\\n      counts[sanitized_word] += 1 unless sanitized_word.empty?\\n    end \\n  end\\n\\n  def strip_characters(word)\\n    word.downcase.gsub(/[^0-9a-z' ]/i, '')\\n  end\\n\\nend"}
239	14	1d0f8623b92a68d88df7c579	pending	haskell	nucleotide-count	\N	\N	0	1	2016-03-25 07:30:07	2016-03-25 07:30:07	162	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\n\\nimport Data.Map (Map)\\nimport qualified Data.Map.Strict as M\\n\\ncount :: Char -\\u003e String -\\u003e Int\\ncount c s = length . filter (== c') $ s' where\\n    c' = validate c\\n    s' = map validate s\\n\\nvalidate :: Char -\\u003e Char\\nvalidate c\\n  | c `elem` \\"AGTC\\" = c\\n  | otherwise     = error $ \\"invalid nucleotide \\" ++ show c\\n\\nnucleotideCounts :: String -\\u003e Map Char Int\\nnucleotideCounts s = M.fromList $ zip \\"AGTC\\" $ map (`count` s) \\"AGTC\\""}
240	14	e08c84d9b38340da50e0d07e	pending	javascript	hamming	\N	\N	0	1	2016-03-25 13:48:51	2016-03-25 13:48:51	163	{"hamming.js":"function zip(a, b) {\\n  a = a.split('');\\n  b = b.split('');\\n\\n  return a.map(function(val, index) {\\n    return [val, b[index]];\\n  });\\n}\\n\\nfunction compute(a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('DNA strands must be of equal length.');\\n  }\\n  return zip(a, b).reduce(function(total, pair) {\\n    if (pair[0] === pair [1]) {\\n      return total;\\n    }\\n\\n    return total + 1;\\n    }, 0);\\n  }\\nvar x = compute('GAGCCTACTAACGGGAT', 'CATCGTAATGACGGCCT');\\n\\nmodule.exports = {\\n  compute: compute\\n}"}
241	14	59b4fd78681f5310e68a27d7	\N	csharp	anagram	\N	\N	0	1	2016-03-26 06:34:24	2016-03-26 06:34:24	164	{"Anagram.cs":"using System.Linq;\\r\\n\\r\\ninternal class Anagram\\r\\n{\\r\\n    private readonly string v;\\r\\n\\r\\n    public Anagram(string v)\\r\\n    {\\r\\n        this.v = v;\\r\\n    }\\r\\n\\r\\n    private static string Characters(string input)\\r\\n    {\\r\\n        return string.Concat(input.OrderBy(c =\\u003e c));\\r\\n    }\\r\\n\\r\\n    public string[] Match(string[] input)\\r\\n    {\\r\\n        var t = this.v.ToLower();\\r\\n        return input.Where(s =\\u003e\\r\\n        {\\r\\n            var ls = s.ToLower();\\r\\n            return Characters(t) == Characters(ls) \\u0026\\u0026 ls != t;\\r\\n        }).ToArray();\\r\\n    }\\r\\n}"}
242	14	66a07f872231320ea3f7329e	\N	javascript	rna-transcription	\N	\N	0	1	2016-03-26 13:29:28	2016-03-26 13:29:28	165	{"rna-transcription.js":"var DnaTranscriber = function() {\\n    var RNA = new function() {\\n        this['G'] = 'C';\\n        this['C'] = 'G';\\n        this['T'] = 'A';\\n        this['A'] = 'U';\\n    };\\n\\n    var DNA = new function() {\\n        this['C'] = 'G';\\n        this['G'] = 'C';\\n        this['U'] = 'A';\\n        this['A'] = 'T';\\n    };\\n\\n    function transcribe(s, map) {\\n        return Array.prototype.map.call(s, function(c) {return map[c];}).join('');\\n    }\\n\\n    this.toRna = function (s) {\\n        return transcribe(s, RNA);\\n    };\\n    \\n    this.toDna = function (s) {\\n        return transcribe(s, DNA);\\n    }\\n};\\n\\nmodule.exports = DnaTranscriber;"}
243	14	9e8dd82d0655aa4c0a15ca28	\N	javascript	rna-transcription	\N	\N	0	2	2016-03-27 01:56:22	2016-03-27 01:56:22	165	{"rna-transcription.js":"var DnaTranscriber = function() {\\n    var RNA = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'};\\n    var DNA = {'G': 'C', 'C': 'G', 'U': 'A', 'A': 'T'};\\n\\n    function transcribe(s, map) {\\n        return Array.prototype.map.call(s, function(c) {return map[c];}).join('');\\n    }\\n\\n    this.toRna = function (s) {\\n        return transcribe(s, RNA);\\n    };\\n\\n    this.toDna = function (s) {\\n        return transcribe(s, DNA);\\n    }\\n};\\n\\nmodule.exports = DnaTranscriber;"}
244	14	c5c1572148196d307070fa67	\N	javascript	rna-transcription	\N	\N	0	3	2016-03-27 11:16:46	2016-03-27 11:16:46	165	{"rna-transcription.js":"\\"use strict\\";\\nvar DnaTranscriber = function () {\\n    var RNA = {'G': 'C', 'C': 'G', 'T': 'A', 'A': 'U'};\\n    var DNA = {'G': 'C', 'C': 'G', 'U': 'A', 'A': 'T'};\\n\\n    var transcribe = (map, regex) =\\u003e {\\n        return (s) =\\u003e {return s.replace(regex, (m) =\\u003e {return map[m]});}\\n    };\\n\\n    this.toRna = transcribe(RNA, /[GTCA]/g);\\n\\n    this.toDna = transcribe(DNA, /[GCUA]/g);\\n};\\n\\nmodule.exports = DnaTranscriber;"}
258	41	41e11c1aae9c5ca2215b4def	done	ruby	bob	\N	\N	0	10	2015-12-31 23:59:16	2015-12-31 23:59:16	172	{"bob.rb":"class WordsParser\\n  attr_reader :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def silent?\\n    words.to_s.strip.empty?\\n  end\\n\\n  def shout?\\n    words.upcase == words\\n  end\\n\\n  def question?\\n    words.end_with?(\\"?\\")\\n  end\\nend\\n\\nclass Bob\\n  attr_reader :parser\\n\\n  def hey(words)\\n    @parser = WordsParser.new(words)\\n\\n    if parser.silent?\\n      \\"Fine. Be that way!\\"\\n    elsif parser.shout?\\n      \\"Woah, chill out!\\"\\n    elsif parser.question?\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
245	14	9eb6f724e8d9f4b88fc05748	pending	elixir	sublist	\N	\N	0	1	2016-03-25 17:46:17	2016-03-25 17:46:17	166	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, a), do: :equal\\n  def compare([], _), do: :sublist\\n  def compare(_, []), do: :superlist\\n\\n  def compare(a, b) do\\n    a_size = Enum.count(a)\\n    b_size = Enum.count(b)\\n    cond do\\n      a_size \\u003e b_size and sublist?(b, a) -\\u003e :superlist\\n      a_size \\u003c b_size and sublist?(a, b) -\\u003e :sublist\\n      true -\\u003e :unequal\\n    end\\n  end\\n\\n  defp sublist?([], _), do: true\\n  defp sublist?(_, []), do: false\\n  defp sublist?(a, b) do\\n    a_size = Enum.count(a)\\n    b_size = Enum.count(b)\\n    range = 0..(b_size - a_size)\\n\\n    different = Stream.take_while(range, fn(i) -\\u003e\\n      Enum.slice(b, i, a_size) !== a\\n    end)\\n\\n    Enum.to_list(different) !== Enum.to_list(range)\\n  end\\nend"}
246	14	9843a58bec7015afd4421492	pending	python	bob	\N	\N	0	1	2016-03-25 18:29:28	2016-03-25 18:29:28	167	{"bob.py":"#\\n# Skeleton file for the Python \\"Bob\\" exercise.\\n#\\ndef hey(what):\\n    what = what.strip()\\n    if what:\\n        if what.isupper():\\n            return 'Whoa, chill out!'\\n        elif what[-1] == \\"?\\":\\n            return \\"Sure.\\"\\n        else:\\n            return \\"Whatever.\\"\\n    else:\\n        return \\"Fine. Be that way!\\""}
247	41	5c277922cd2ea1a2de915ac8	\N	javascript	word-count	\N	\N	0	1	2016-01-18 17:04:25	2016-01-18 17:04:25	168	{"word_count.js":"function words(words) {\\n  var wordCount = {};\\n  words = words.replace(/\\\\s+/g, ' ').trim();\\n  var re = /[ \\\\t\\\\n]/g;\\n  var wordsSplit = words.split(re);\\n  for (var i = 0; i \\u003c wordsSplit.length; i++) {\\n    var word = wordsSplit[i].toString();\\n    if (wordCount.hasOwnProperty('toString')) {\\n      wordCount.toString = 1;\\n    }\\n    if (!wordCount[word]) {\\n      wordCount[word] = 1;\\n    } else {\\n      wordCount[word]++;\\n    }\\n  }\\n\\n  return wordCount;\\n}\\n\\nmodule.exports = words;"}
248	41	4e208ea9be61b61bec551f04	pending	haskell	rna-transcription	\N	\N	0	1	2015-11-23 20:32:43	2015-11-23 20:32:43	169	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\nimport Data.Maybe\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA = catMaybes . map rna\\r\\n  where\\r\\n    rna 'G' = Just 'C'\\r\\n    rna 'C' = Just 'G'\\r\\n    rna 'T' = Just 'A'\\r\\n    rna 'A' = Just 'U'\\r\\n    rna _ = Nothing"}
249	41	b95549683a4451b8601d7472	\N	javascript	food-chain	\N	\N	0	1	2015-10-03 22:37:20	2015-10-03 22:37:20	170	{"food-chain.js":"var FoodChain = function() {\\n\\n  this.ladySong = [\\n  'I know an old lady who swallowed a fly.\\\\nI don\\\\'t know why she swallowed the fly. Perhaps she\\\\'ll die.\\\\n',\\n  'I know an old lady who swallowed a spider.\\\\nIt wriggled and jiggled and tickled inside her.\\\\n' +\\n  'She swallowed the spider to catch the fly.\\\\n' + 'I don\\\\'t know why she swallowed the fly. Perhaps she\\\\'ll die.\\\\n',\\n  'I know an old lady who swallowed a bird.\\\\n' +\\n  'How absurd to swallow a bird!\\\\n' +\\n  'She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n' +\\n  'She swallowed the spider to catch the fly.\\\\n' +\\n  'I don\\\\'t know why she swallowed the fly. Perhaps she\\\\'ll die.\\\\n',\\n  'I know an old lady who swallowed a cat.\\\\n' +\\n'Imagine that, to swallow a cat!\\\\n' +\\n'She swallowed the cat to catch the bird.\\\\n' +\\n'She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n' +\\n'She swallowed the spider to catch the fly.\\\\n' +\\n'I don\\\\'t know why she swallowed the fly. ' +\\n'Perhaps she\\\\'ll die.\\\\n',\\n'I know an old lady who swallowed a dog.\\\\n' +\\n  'What a hog, to swallow a dog!\\\\n' +\\n  'She swallowed the dog to catch the cat.\\\\n' +\\n  'She swallowed the cat to catch the bird.\\\\n' +\\n  'She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n' +\\n  'She swallowed the spider to catch the fly.\\\\n' +\\n  'I don\\\\'t know why she swallowed the fly. ' +\\n  'Perhaps she\\\\'ll die.\\\\n',\\n  'I know an old lady who swallowed a goat.\\\\n' +\\n    'Just opened her throat and swallowed a goat!\\\\n' +\\n    'She swallowed the goat to catch the dog.\\\\n' +\\n    'She swallowed the dog to catch the cat.\\\\n' +\\n    'She swallowed the cat to catch the bird.\\\\n' +\\n    'She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n' +\\n    'She swallowed the spider to catch the fly.\\\\n' +\\n    'I don\\\\'t know why she swallowed the fly. ' +\\n    'Perhaps she\\\\'ll die.\\\\n',\\n    'I know an old lady who swallowed a cow.\\\\n' +\\n      'I don\\\\'t know how she swallowed a cow!\\\\n' +\\n      'She swallowed the cow to catch the goat.\\\\n' +\\n      'She swallowed the goat to catch the dog.\\\\n' +\\n      'She swallowed the dog to catch the cat.\\\\n' +\\n      'She swallowed the cat to catch the bird.\\\\n' +\\n      'She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n' +\\n      'She swallowed the spider to catch the fly.\\\\n' +\\n      'I don\\\\'t know why she swallowed the fly. ' +\\n      'Perhaps she\\\\'ll die.\\\\n',\\n  'I know an old lady who swallowed a horse.\\\\n' + 'She\\\\'s dead, of course!\\\\n'\\n];};\\n\\nFoodChain.prototype.verse = function(start) {\\n  return this.ladySong[start - 1];\\n}\\n\\n\\nFoodChain.prototype.verses = function(start, end) {\\n  var sliced = this.ladySong.slice(start - 1, end);\\n  return sliced.join('\\\\n\\\\n') + '\\\\n\\\\n';\\n}\\n\\n\\n\\nmodule.exports = FoodChain;"}
250	41	a20acbac9a57557aae9b3a12	superseded	clojure	bob	\N	\N	0	2	2015-09-23 20:13:19	2015-09-23 20:13:19	171	{"bob.clj":"(ns bob\\n  (:use [clojure.string :only [upper-case trim]]))\\n\\n(defn response-for [question]\\n  (cond\\n   (= (trim question) \\"\\") \\"Fine. Be that way!\\"\\n   (= (upper-case question) question) \\"Woah, chill out!\\"\\n   (= \\\\? (last question)) \\"Sure.\\"\\n   :else \\"Whatever.\\"))"}
251	41	1795792b1a2f4e36b667dc5e	superseded	clojure	bob	\N	\N	0	1	2015-10-11 23:05:00	2015-10-11 23:05:00	171	{"bob.clj":"(ns bob\\n  (:use [clojure.string :only [upper-case trim]]))\\n\\n(defn response-for [question]\\n  (cond\\n   (= (trim question) \\"\\") \\"Fine. Be that way!\\"\\n   (= (upper-case question) question) \\"Woah, chill out!\\"\\n   (= \\\\? (last question)) \\"Sure.\\"\\n   (some #(= \\\\? %) question) \\"Whatever.\\"\\n   :else \\"Whatever.\\"))"}
252	41	77866656f489f64bd6485401	done	clojure	bob	\N	\N	0	3	2015-11-13 09:23:52	2015-11-13 09:23:52	171	{"bob.clj":"(ns bob\\n  (:use [clojure.string :only [upper-case trim]]))\\n\\n(defn- question? [query]\\n  (= \\\\? (last query)))\\n\\n(defn- yelling? [query]\\n  (= (upper-case query) query))\\n\\n(defn- silence? [query]\\n  (= (trim query) \\"\\"))\\n\\n(defn response-for [query]\\n  (cond\\n    (silence? query) \\"Fine. Be that way!\\"\\n    (yelling? query) \\"Woah, chill out!\\"\\n    (question? query) \\"Sure.\\"\\n    :else \\"Whatever.\\"))"}
253	41	4ae9f9549e183028513b580a	superseded	ruby	bob	\N	\N	0	8	2015-09-22 07:21:47	2015-09-22 07:21:47	172	{"bob.rb":"class WordsParser\\n  def silent?(words)\\n    words.nil? || words.strip.empty?\\n  end\\n\\n  def shout?(words)\\n    words.upcase == words\\n  end\\n\\n  def question?(words)\\n    words.end_with?(\\"?\\")\\n  end\\nend\\n\\nclass Bob\\n  def hey(words)\\n    @parser = WordsParser.new\\n\\n    if @parser.silent?(words)\\n      \\"Fine. Be that way!\\"\\n    elsif @parser.shout?(words)\\n      \\"Woah, chill out!\\"\\n    elsif @parser.question?(words)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
254	41	0a70217d4e454d80ecfe4ac3	superseded	ruby	bob	\N	\N	0	9	2015-10-01 19:45:57	2015-10-01 19:45:57	172	{"bob.rb":"class WordsParser\\n  \\n  def initialize(words)\\n    @words = words\\n  end\\n  \\n  def silent?\\n    @words.to_s.strip.empty?\\n  end\\n\\n  def shout?\\n    @words.upcase == @words\\n  end\\n\\n  def question?\\n    @words.end_with?(\\"?\\")\\n  end\\nend\\n\\nclass Bob\\n  def hey(words)\\n    @parser = WordsParser.new(words)\\n\\n    if @parser.silent?\\n      \\"Fine. Be that way!\\"\\n    elsif @parser.shout?\\n      \\"Woah, chill out!\\"\\n    elsif @parser.question?\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
255	41	8a36128f5a441ff69bbb3e18	superseded	ruby	bob	\N	\N	0	2	2015-10-16 01:50:54	2015-10-16 01:50:54	172	{"bob.rb":"class Bob\\n  def hey(words)\\n    query = check_words(words)\\n    respond(query)\\n  end\\n\\n  def check_words(words)\\n    if words.nil? || words.strip.empty?\\n      :silent\\n    elsif words.upcase == words\\n      :shout\\n    elsif words[-1] == \\"?\\"\\n      :question\\n    else\\n      :statement\\n    end\\n  end\\n\\n  def respond(query)\\n    case query\\n    when :silent\\n      \\"Fine. Be that way!\\"\\n    when :shout\\n      \\"Woah, chill out!\\"\\n    when :question\\n      \\"Sure.\\"\\n    when :statement\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
256	41	d5bf2c5c281cba84d3505a6c	superseded	ruby	bob	\N	\N	0	1	2015-10-23 18:26:49	2015-10-23 18:26:49	172	{"bob.rb":"class Bob\\n  def hey(words)\\n    if words.nil? || words.strip.empty?\\n      \\"Fine. Be that way!\\"\\n    elsif words.upcase == words\\n      \\"Woah, chill out!\\"\\n    elsif words[-1] == \\"?\\"\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
257	41	c52281e307fe6f096d2af692	superseded	ruby	bob	\N	\N	0	6	2015-11-13 08:16:44	2015-11-13 08:16:44	172	{"bob.rb":"class Bob\\n\\n  def hey(words)\\n    if silent?(words)\\n      \\"Fine. Be that way!\\"\\n    elsif shout?(words)\\n      \\"Woah, chill out!\\"\\n    elsif question?(words)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  private\\n\\n    def silent?(words)\\n      words.nil? || words.strip.empty?\\n    end\\n\\n    def shout?(words)\\n      words.upcase == words\\n    end\\n\\n    def question?(words)\\n      words.end_with?(\\"?\\")\\n    end\\nend"}
259	41	fae64c10728a1514fd44ad25	superseded	ruby	bob	\N	\N	0	3	2016-01-15 22:39:05	2016-01-15 22:39:05	172	{"bob.rb":"class Bob\\n  def hey(words)\\n    query = check_words(words)\\n    respond(query)\\n  end\\n\\n  def check_words(words)\\n    if silent?(words)\\n      :silent\\n    elsif words.upcase == words\\n      :shout\\n    elsif words[-1] == \\"?\\"\\n      :question\\n    else\\n      :statement\\n    end\\n  end\\n\\n  def respond(query)\\n    case query\\n    when :silent\\n      \\"Fine. Be that way!\\"\\n    when :shout\\n      \\"Woah, chill out!\\"\\n    when :question\\n      \\"Sure.\\"\\n    when :statement\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  def silent?(words)\\n    words.nil? || words.strip.empty?\\n  end\\nend"}
260	41	6bf79df5894829317dd9b98a	superseded	ruby	bob	\N	\N	0	4	2016-01-16 20:30:00	2016-01-16 20:30:00	172	{"bob.rb":"class Bob\\n\\n  def hey(words)\\n    if silent?(words)\\n      \\"Fine. Be that way!\\"\\n    elsif shout?(words)\\n      \\"Woah, chill out!\\"\\n    elsif question?(words)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  def silent?(words)\\n    words.nil? || words.strip.empty?\\n  end\\n\\n  def shout?(words)\\n    words.upcase == words\\n  end\\n\\n  def question?(words)\\n    words[-1] == \\"?\\"\\n  end\\nend"}
261	41	f66a4600be20dd092e4f40a7	superseded	ruby	bob	\N	\N	0	5	2016-02-20 23:07:30	2016-02-20 23:07:30	172	{"bob.rb":"class Bob\\n\\n  def hey(words)\\n    if is_silent?(words)\\n      \\"Fine. Be that way!\\"\\n    elsif is_shout?(words)\\n      \\"Woah, chill out!\\"\\n    elsif is_question?(words)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  def is_silent?(words)\\n    words.nil? || words.strip.empty?\\n  end\\n\\n  def is_shout?(words)\\n    words.upcase == words\\n  end\\n\\n  def is_question?(words)\\n    words[-1] == \\"?\\"\\n  end\\nend"}
262	41	2157142bd03b8a71aaff5cfa	superseded	ruby	bob	\N	\N	0	7	2016-03-06 09:45:52	2016-03-06 09:45:52	172	{"bob.rb":"module WordsParser\\n  def silent?(words)\\n    words.nil? || words.strip.empty?\\n  end\\n\\n  def shout?(words)\\n    words.upcase == words\\n  end\\n\\n  def question?(words)\\n    words.end_with?(\\"?\\")\\n  end\\nend\\n\\nclass Bob\\n  include WordsParser\\n\\n  def hey(words)\\n    if silent?(words)\\n      \\"Fine. Be that way!\\"\\n    elsif shout?(words)\\n      \\"Woah, chill out!\\"\\n    elsif question?(words)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
263	41	83b647bdf892330af571e99f	pending	python	rna-transcription	\N	\N	0	1	2015-10-23 15:35:15	2015-10-23 15:35:15	173	{"/python/rna-transcription/dna.py":"def to_rna(word):\\n  lists = list(word)\\n  words = ''\\n  for ch in lists:\\n    if 'G' == ch:\\n      words += 'C'\\n    elif 'C' == ch:\\n      words += 'G'\\n    elif 'T' == ch:\\n      words += 'A'\\n    elif 'A' == ch:\\n      words += 'U'\\n\\n  return words"}
264	6	a3d058c817a34e5001b6b05a	pending	python	hamming	\N	\N	0	1	2016-03-06 03:25:11	2016-03-06 03:25:11	174	{"\\\\python\\\\hamming\\\\hamming.py":"def distance(dna1, dna2):\\r\\n\\tdiff = 0\\r\\n\\tfor i in range(len(dna1)):\\r\\n\\t\\tif dna1[i] != dna2[i]:\\r\\n\\t\\t\\tdiff += 1\\r\\n\\r\\n\\treturn diff"}
265	6	56d0ae3999a6ac357433810c	pending	ruby	gigasecond	\N	\N	0	1	2015-11-14 23:05:09	2015-11-14 23:05:09	175	{"gigasecond.rb":"class Gigasecond\\n  VERSION = 1\\n  GIGASECOND_CONSTANT = 10**9\\n\\n  def self.from(time)\\n    time + GIGASECOND_CONSTANT\\n  end\\nend"}
266	6	433d15a95d6c935e15f54d5e	\N	python	word-count	\N	\N	0	1	2015-12-03 11:18:19	2015-12-03 11:18:19	176	{"wordcount.py":"def word_count(_str):\\r\\n\\ttemp_str = \\"\\"\\r\\n\\tswtch = False\\r\\n\\tpswtch = True\\r\\n\\tfinal = dict()\\r\\n\\tfor i in _str:\\r\\n\\t\\ti = i.lower()\\r\\n\\t\\tif(i.isalnum() == True):\\r\\n\\t\\t\\tswtch = True\\r\\n\\t\\t\\ttemp_str += i\\r\\n\\t\\telse:\\r\\n\\t\\t\\tswtch = False\\r\\n\\t\\t\\tif(pswtch == True and temp_str != \\"\\"):\\r\\n\\t\\t\\t\\tif(temp_str in final):\\r\\n\\t\\t\\t\\t\\tfinal[temp_str] += 1\\r\\n\\t\\t\\t\\telse:\\r\\n\\t\\t\\t\\t\\tfinal[temp_str] = 1\\r\\n\\t\\t\\ttemp_str = \\"\\"\\r\\n\\t\\tpswtch = swtch\\r\\n\\tif(temp_str != \\"\\"):\\r\\n\\t\\tif(temp_str in final):\\r\\n\\t\\t\\tfinal[temp_str] += 1\\r\\n\\t\\telse:\\r\\n\\t\\t\\tfinal[temp_str] = 1\\r\\n\\treturn final"}
267	6	039fc1dcadc9d091a31a19d5	hibernating	scala	hamming	\N	\N	0	1	2016-02-17 21:38:55	2016-02-17 21:38:55	177	{"\\\\scala\\\\hamming\\\\src\\\\main\\\\scala\\\\hamming.scala":"object Hamming {\\r\\n\\r\\n  def compute(one: String, two: String): Int =\\r\\n    one\\r\\n      .zip(two)\\r\\n      .map({\\r\\n        case (a,b) if a == b =\\u003e 0\\r\\n        case _ =\\u003e 1\\r\\n      })\\r\\n      .foldLeft(0)(_ + _)\\r\\n      \\r\\n}"}
268	6	423bfffef3ffbcded5e443e7	done	scala	wordy	\N	\N	0	1	2016-02-01 10:55:37	2016-02-01 10:55:37	178	{"src/test/scala/WordProblem.scala":"import WordProblem._\\n\\nobject WordProblem {\\n  val operandPattern = \\"\\"\\" (plus|minus|multiplied by|divided by|raised to the) (-?\\\\d+)\\"\\"\\".r\\n  val questionPattern = \\"\\"\\"What is (-?\\\\d+)( (plus|minus|multiplied by|divided by|raised to the) (-?\\\\d+))*\\\\?\\"\\"\\".r\\n  val operatorMap = Map(\\n    \\"plus\\" -\\u003e ((a: Int, b: Int) =\\u003e a + b),\\n    \\"minus\\" -\\u003e ((a: Int, b: Int) =\\u003e a - b),\\n    \\"multiplied by\\" -\\u003e ((a: Int, b: Int) =\\u003e a * b),\\n    \\"divided by\\" -\\u003e ((a: Int, b: Int) =\\u003e a / b),\\n    \\"raised to the\\" -\\u003e ((a: Int, b: Int) =\\u003e (1 to b).map(i =\\u003e a).product))\\n}\\n\\ncase class WordProblem(question: String) {\\n\\n  val value = question match {\\n    case questionPattern(left, _*) =\\u003e operandIterator().foldLeft[Option[Int]](Some(left.toInt)) {\\n      (acc, pair) =\\u003e operatorMap.get(pair._1).map(_(acc.get, pair._2.toInt))\\n    }\\n    case _ =\\u003e None\\n  }\\n\\n  def operandIterator(): Iterator[(String, String)] =\\n    for (m \\u003c- operandPattern findAllMatchIn question) yield m.group(1) -\\u003e m.group(2)\\n\\n  override def equals(that: Any) = that == value\\n}"}
269	6	3b9347eb7842817ffffcb2be	\N	ruby	trinary	\N	\N	0	1	2016-02-28 06:20:47	2016-02-28 06:20:47	179	{"trinary.rb":"class AnyNary\\n  def initialize(input,base)\\n    @base = base\\n    @input = input\\n    @digits = 0...base\\n  end\\n\\n  def to_decimal\\n    @input.reverse.each_char.map.with_index do |raw_digit,i|\\n      digit = convert_digit(raw_digit,i)\\n    end.reduce(:+)\\n  rescue ArgumentError\\n    return 0\\n  end\\n\\n  def convert_digit(raw_digit,place)\\n    digit = Integer(raw_digit)\\n    raise ArgumentError unless @digits.include?(digit)\\n    digit*(@base**place)\\n  end\\nend\\n\\nclass Binary \\u003cAnyNary\\n  def initialize(input)\\n    super(input,2)\\n  end\\nend\\nclass Trinary \\u003cAnyNary\\n  def initialize(input)\\n    super(input,3)\\n  end\\nend\\n\\nclass Quadnary \\u003c AnyNary\\n  def initialize(input)\\n    super(input,4)\\n  end\\nend\\n\\n#Binary.new(\\"101010\\").to_decimal\\n#Trinary.new(\\"102012\\").to_decimal\\n#Quadnary.new(\\"302012\\").to_decimal"}
270	34	43a84bd8a5768544cc6efe7f	pending	java	hamming	\N	\N	0	1	2015-10-08 11:49:11	2015-10-08 11:49:11	180	{"src/main/java/Hamming.java":"public class Hamming {\\n\\n\\tpublic static Integer compute(String string1, String string2) {\\n\\n\\t\\tif (string1.length() != string2.length())\\n\\t\\t\\tthrow new IllegalArgumentException();\\n\\n\\t\\tInteger result = 0;\\n\\t\\tString[] letters1 = string1.split(\\"(?!^)\\");\\n\\t\\tString[] letters2 = string2.split(\\"(?!^)\\");\\n\\t\\t\\n\\t\\tfor (int i = 0; i \\u003c letters1.length; i++) {\\n\\t\\t\\tif (!letters1[i].equals(letters2[i]))\\n\\t\\t\\t\\tresult++;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn result;\\n\\t}\\n}"}
271	16	cd3594c570816bd0e5404729	done	python	word-count	\N	\N	0	1	2015-12-10 12:29:32	2015-12-10 12:29:32	181	{"wordcount.py":"#Counts the repetitions of a word and prints the result\\n\\nimport re\\n\\n\\ndef word_count(word):\\n    word_Hash={}\\n    words=word.split(\\" \\")  #splits the string \\n    \\n    #inserts into hash \\n    for word in words:\\n        word=re.sub(' ','',word)\\n        if word in word_Hash:\\n            word_Hash[word]+=1   \\n        else:\\n            word_Hash[word]=1\\n    \\n    print word_Hash\\n    \\n\\nword_count('rah rah ah ah ah\\\\nroma roma ma\\\\nga ga oh la la\\\\nwant your bad romance')"}
272	16	8f52e971f6ee321f18c9c04b	done	scala	hamming	\N	\N	0	1	2015-11-19 02:40:16	2015-11-19 02:40:16	182	{"hamming.scala":"object Hamming {\\n  def compute(a: String, b: String) = {\\n    (a zip b) map { case (n,m) =\\u003e if (n == m) 0 else 1 } sum\\n  }\\n}"}
273	16	5ecc2a67bba0a7575abd291b	\N	ruby	binary	\N	\N	0	1	2015-12-30 06:48:27	2015-12-30 06:48:27	183	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
274	16	0ce4c9c98c95d08adff89cbb	\N	rust	hello-world	\N	\N	0	1	2015-12-17 06:19:31	2015-12-17 06:19:31	184	{"src/lib.rs":"pub fn hello(name: Option\\u003c\\u0026str\\u003e) -\\u003e String {\\n  match name {\\n    Some(ref n) =\\u003e format!(\\"Hello, {}!\\", n),\\n    None =\\u003e \\"Hello, World!\\".to_string(),\\n  }\\n}"}
275	16	cbd0652811c22b25ec0f2a98	\N	haskell	grade-school	\N	\N	0	1	2015-11-04 12:07:07	2015-11-04 12:07:07	185	{"School.hs":"module School(empty, add, sorted, grade, School) where\\n\\nimport Data.List\\n\\nempty :: School\\nadd :: Int -\\u003e String -\\u003e School -\\u003e School\\nsorted :: School -\\u003e School\\ngrade :: Int -\\u003e School -\\u003e [String]\\nhave_this_grade :: Int -\\u003e School -\\u003e Bool\\nadd_existing :: Int -\\u003e String -\\u003e School -\\u003e School -\\u003e School\\n\\ntype School = [(Int, [String])]\\n\\nempty = []\\n\\nadd gr name [] = [(gr, [name])]\\nadd gr name school =\\n  if have_this_grade gr school then add_existing gr name [] school\\n  else school ++ [(gr, [name])]\\n\\nadd_existing _ _ school [] = school\\nadd_existing gr name school_result ((current_grade, current_names):school_source) =\\n  if gr /= current_grade then add_existing gr name (school_result ++ [(current_grade, current_names)]) school_source\\n  else add_existing gr name (school_result ++ [(current_grade, sort (current_names ++ [name]))]) school_source\\n\\nhave_this_grade _ [] = False                                \\nhave_this_grade gr ((current_grade, _):school) =\\n  gr == current_grade || have_this_grade gr school\\n                                \\nsorted = sort\\n\\ngrade _ [] = []\\ngrade g ((cg, names):school) = if g == cg then names\\n                               else grade g school"}
276	18	0890adabe4221e476fefbc7e	hibernating	ruby	rna-transcription	\N	\N	0	1	2015-07-18 09:37:27	2015-07-18 09:37:27	186	{"complement.rb":"class Complement\\n\\n  def initialize(sequence, conversion_to)\\n    @sequence = sequence\\n    @conversion_to = conversion_to\\n  end\\n\\n  def self.of_dna(sequence)\\n    new(sequence, \\"rna\\").of_dna\\n  end\\n\\n  def self.of_rna(sequence)\\n    new(sequence, \\"dna\\").of_rna\\n  end\\n\\n  def of_dna\\n    nucleotide.find\\n  end\\n\\n  def of_rna\\n    nucleotide.find\\n  end\\n\\n  private\\n\\n  attr_reader :sequence\\n  attr_reader :conversion_to\\n\\n  def nucleotide\\n    Nucleotide.new(sequence, conversion_to)\\n  end\\n\\nend\\n\\nclass Nucleotide\\n\\n  def initialize(sequence, conversion_to)\\n    @sequence = sequence\\n    @conversion_to = conversion_to\\n  end\\n\\n  def find\\n    sequence.map { |char| type.fetch(char) }.join\\n  end\\n\\n  def type\\n    if @conversion_to == \\"rna\\"\\n      dna_rna_pairings \\n    else\\n      rna_dna_pairings\\n    end\\n  end\\n\\n  private\\n\\n  def sequence\\n    @sequence.chars\\n  end\\n\\n  def dna_rna_pairings\\n    {\\n      'G' =\\u003e 'C',\\n      'C' =\\u003e 'G',\\n      'T' =\\u003e 'A',\\n      'A' =\\u003e 'U'\\n    }\\n  end\\n\\n  def rna_dna_pairings\\n    dna_rna_pairings.invert\\n  end\\n\\nend"}
277	18	927f88882030c4eb06305a8a	pending	ruby	bob	\N	\N	0	1	2015-12-30 09:03:34	2015-12-30 09:03:34	187	{"bob.rb":"class Bob\\n  def hey(remark)\\n    remark = remark.strip.split('').select{|n| n[/[A-Za-z0-9?]+/]}.join('')\\n    if remark.empty?\\n      'Fine. Be that way!'\\n    elsif (remark == remark.upcase) and (remark.split('').any?{|n| not n[/[A-Za-z]/].nil?})\\n      'Whoa, chill out!'\\n    elsif remark[-1] == '?'\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\nend"}
278	18	fb76da9adf2e8b753f0b8fb5	done	python	hamming	\N	\N	0	1	2015-09-26 05:35:58	2015-09-26 05:35:58	188	{"hamming.py":"def distance(dna1, dna2):\\n\\tvalue = 0\\n\\tfor d1, d2 in zip(dna1, dna2):\\n\\t\\tif d1 != d2:\\n\\t\\t\\tvalue += 1\\n\\treturn value"}
279	18	cc22736368202625fc632ea7	superseded	ruby	phone-number	\N	\N	0	1	2015-09-10 11:27:18	2015-09-10 11:27:18	189	{"phone-number.rb":"class PhoneNumber\\n  LENGTH = 10\\n  BAD_NUMBER = '0' * LENGTH\\n\\n  attr_reader :number\\n\\n  def initialize(input)\\n    @number = extract_number(input)\\n  end\\n\\n  def area_code\\n    @area_code ||= number.slice(0, 3)\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{exchange}-#{suffix}\\"\\n  end\\n\\n  private\\n\\n  def extract_number(input)\\n    input = input.gsub(/\\\\D/, '')\\n\\n    if input.length == LENGTH\\n      input\\n    elsif input.length == LENGTH + 1 \\u0026\\u0026 valid_country_code?(input)\\n      remove_country_code(input)\\n    else\\n      BAD_NUMBER\\n    end\\n  end\\n\\n  def valid_country_code?(input)\\n    input.start_with?('1')\\n  end\\n\\n  def remove_country_code(input)\\n    input.slice(1..-1)\\n  end\\n\\n  def exchange\\n    @exchange ||= number.slice(3, 3)\\n  end\\n\\n  def suffix\\n    @suffix ||= number.slice(6, 4)\\n  end\\nend"}
280	18	b44e292d3d3af5f2c9b8c636	done	ruby	phone-number	\N	\N	0	2	2015-10-20 04:05:30	2015-10-20 04:05:30	189	{"phone-number.rb":"class PhoneNumber\\n  LENGTH = 10\\n  BAD_NUMBER = '0' * LENGTH\\n\\n  attr_reader :number\\n\\n  def initialize(input)\\n    @number = extract_number(input)\\n  end\\n\\n  def area_code\\n    @area_code ||= number.slice(0, 3)\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{exchange}-#{suffix}\\"\\n  end\\n\\n  private\\n\\n  def extract_number(input)\\n    input = input.gsub(/\\\\D+/, '')\\n\\n    if input.length == LENGTH\\n      input\\n    elsif input.length == LENGTH + 1 \\u0026\\u0026 valid_country_code?(input)\\n      remove_country_code(input)\\n    else\\n      BAD_NUMBER\\n    end\\n  end\\n\\n  def valid_country_code?(input)\\n    input.start_with?('1')\\n  end\\n\\n  def remove_country_code(input)\\n    input.slice(1..-1)\\n  end\\n\\n  def exchange\\n    @exchange ||= number.slice(3, 3)\\n  end\\n\\n  def suffix\\n    @suffix ||= number.slice(6, 4)\\n  end\\nend"}
281	18	1912435725cf46fb266adbe6	pending	ruby	hello-world	\N	\N	0	1	2015-11-21 19:09:45	2015-11-21 19:09:45	190	{"hello_world.rb":"class HelloWorld\\n  def self.hello name=nil\\n    if name != nil\\n      return \\"Hello, \\" + name + \\"!\\"\\n    else\\n      return \\"Hello, world!\\"\\n    end\\n  end\\nend"}
282	24	fc23a8298d703c6eafd858a6	superseded	haskell	phone-number	\N	\N	0	2	2015-11-14 00:08:32	2015-11-14 00:08:32	191	{"Phone.hs":"module Phone( areaCode, number, prettyPrint ) where\\n\\nimport Data.Char( isDigit )\\nimport Data.List.Split( splitPlaces )\\n\\nareaCode :: String -\\u003e String\\nareaCode digits = take 3 $ number digits\\n\\nnumber :: String -\\u003e String\\nnumber digits \\n    | length sd == 10 = sd \\n    | length sd == 11 \\u0026\\u0026 head sd == '1' = tail sd\\n    | otherwise = \\"0000000000\\"\\n    where \\n      sd = filter isDigit digits\\n\\nprettyPrint :: String -\\u003e String\\nprettyPrint digits = \\"(\\" ++ ac ++ \\") \\" ++ f3 ++ \\"-\\" ++ l4\\n    where\\n      [ac,f3,l4] = splitPlaces [3,3,4] $ number digits"}
283	24	3753742adb75e564b7002df0	done	haskell	phone-number	\N	\N	0	3	2015-11-17 13:36:53	2015-11-17 13:36:53	191	{"Phone.hs":"module Phone( areaCode, number, prettyPrint ) where\\n\\nimport Data.Char( isDigit )\\nimport Data.List.Split( splitPlaces )\\n\\nareaCode :: String -\\u003e String\\nareaCode digits = take 3 $ number digits\\n\\nnumber :: String -\\u003e String\\nnumber digits \\n    | nds == 10 = sd \\n    | nds == 11 \\u0026\\u0026 head sd == '1' = tail sd\\n    | otherwise = \\"0000000000\\"\\n    where \\n      sd = filter isDigit digits\\n      nds = length sd\\n\\nprettyPrint :: String -\\u003e String\\nprettyPrint digits = \\"(\\" ++ ac ++ \\") \\" ++ f3 ++ \\"-\\" ++ l4\\n    where\\n      [ac,f3,l4] = splitPlaces [3,3,4] $ number digits"}
284	24	6a9c18c40da4d1229738dc56	superseded	haskell	phone-number	\N	\N	0	1	2015-12-06 17:28:43	2015-12-06 17:28:43	191	{"Phone.hs":"module Phone( areaCode, number, prettyPrint ) where\\n\\nimport Data.Char ( isDigit )\\n\\nareaCode :: String -\\u003e String\\nareaCode digits = number digits !@ (0,2)\\n\\nnumber :: String -\\u003e String\\nnumber digits \\n    | length sd == 10 = sd \\n    | length sd == 11 \\u0026\\u0026 sd !! 0 == '1' = sd !@ (1, 10)\\n    | otherwise = \\"0000000000\\"\\n    where \\n      sd = filter isDigit digits\\n\\nprettyPrint :: String -\\u003e String\\nprettyPrint digits = \\"(\\" ++ ph !@ (0,2) ++ \\") \\" ++ ph !@ (3,5) ++ \\"-\\" ++ ph !@ (6,9)\\n    where\\n      ph = number digits\\n\\ninfixl 9 !@\\n(!@) :: [a] -\\u003e (Int, Int) -\\u003e [a]\\nxs !@ (from, to) =  take (to - from + 1) $ drop from xs"}
285	24	af52f7079597db460446da0b	pending	javascript	food-chain	\N	\N	0	1	2015-11-13 14:41:34	2015-11-13 14:41:34	192	{"food-chain.js":"var starts = [  \\"fly.\\",\\n                \\"spider.\\\\nIt wriggled and jiggled and tickled inside her.\\",\\n                \\"bird.\\\\nHow absurd to swallow a bird!\\",\\n                \\"cat.\\\\nImagine that, to swallow a cat!\\",\\n                \\"dog.\\\\nWhat a hog, to swallow a dog!\\",\\n                \\"goat.\\\\nJust opened her throat and swallowed a goat!\\",\\n                \\"cow.\\\\nI don't know how she swallowed a cow!\\",\\n                \\"horse.\\\\nShe's dead, of course!\\"]\\n                \\nvar ends = [\\"I don't know why she swallowed the fly. Perhaps she'll die.\\",\\n            \\"She swallowed the spider to catch the fly.\\",\\n            \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\",\\n            \\"She swallowed the cat to catch the bird.\\",\\n            \\"She swallowed the dog to catch the cat.\\",\\n            \\"She swallowed the goat to catch the dog.\\",\\n            \\"She swallowed the cow to catch the goat.\\"]\\n            \\nvar song = new Object();\\n\\nsong.verse = function(verseNumber) {\\n    verseNumber--; // index from 0\\n    var lines = [\\"I know an old lady who swallowed a \\"+starts[verseNumber]];\\n    if (verseNumber \\u003c starts.length-1) { // last verse has no endings\\n        for (var i=verseNumber; i\\u003e=0; i--) {\\n            lines.push(ends[i]);\\n        }\\n    }\\n    return lines.join(\\"\\\\n\\")+\\"\\\\n\\";\\n}\\n\\nsong.verses = function(startingVerse, endingVerse){\\n    var verses = [];\\n    for (var i=startingVerse; i\\u003c=endingVerse; i++) {\\n        verses.push(this.verse(i));\\n    }\\n    return verses.join(\\"\\\\n\\")+\\"\\\\n\\";\\n}\\n\\nmodule.exports = song;"}
286	24	25f36f6fd280b4ebadb325e3	pending	elixir	nucleotide-count	\N	\N	0	1	2015-11-19 02:11:00	2015-11-19 02:11:00	193	{"dna.exs":"defmodule DNA do\\n  @nucleotides [?A, ?C, ?G, ?T]\\n\\n  @doc \\"\\"\\"\\n  Counts individual nucleotides in a DNA strand.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.count('AATAA', ?A)\\n  4\\n\\n  iex\\u003e DNA.count('AATAA', ?T)\\n  1\\n  \\"\\"\\"\\n  @spec count([char], char) :: non_neg_integer\\n  def count(strand, nucleotide) do\\n    Enum.reduce strand, 0, fn(nc, acc) -\\u003e\\n      cond do\\n        nc == nucleotide -\\u003e acc + 1\\n        true -\\u003e acc\\n      end\\n    end\\n  end\\n\\n\\n  @doc \\"\\"\\"\\n  Returns a summary of counts by nucleotide.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.nucleotide_counts('AATAA')\\n  %{?A =\\u003e 4, ?T =\\u003e 1, ?C =\\u003e 0, ?G =\\u003e 0}\\n  \\"\\"\\"\\n  @spec nucleotide_counts([char]) :: Dict.t\\n  def nucleotide_counts(strand) do\\n    Enum.reduce strand, %{?A =\\u003e 0, ?T =\\u003e 0, ?C =\\u003e 0, ?G =\\u003e 0}, fn(nc, acc) -\\u003e\\n       Dict.update acc, nc, 0, fn(val) -\\u003e val + 1 end\\n    end\\n  end\\nend"}
287	42	76dfd3f00d6e12d6548449d5	done	swift	etl	\N	\N	0	3	2015-08-25 18:34:20	2015-08-25 18:34:20	194	{"Etl.swift":"//  Etl.swift\\n\\nimport Foundation\\nclass ETL {\\n\\n  class func transform(dictionary:Dictionary\\u003cInt,Array\\u003cString\\u003e\\u003e)\\n    -\\u003e Dictionary\\u003cString,Int\\u003e {\\n\\n      func processTuple(result: Dictionary\\u003cString,Int\\u003e,\\n        tuple:(Int, Array\\u003cString\\u003e)) -\\u003e Dictionary\\u003cString,Int\\u003e {\\n          return tuple.1.reduce(result)\\n            {(var result, key) in\\n              result[key.lowercaseString] = tuple.0\\n              return result}\\n      }\\n\\n      func arrayOfTuples(dictionary:Dictionary\\u003cInt,Array\\u003cString\\u003e\\u003e)\\n        -\\u003e Array\\u003c(Int,Array\\u003cString\\u003e)\\u003e {\\n          return Array(dictionary)\\n      }\\n\\n      return arrayOfTuples(dictionary).reduce([:],processTuple)\\n\\n  }\\n}"}
288	42	78889d916ff215c047a5de16	superseded	swift	etl	\N	\N	0	1	2015-11-04 16:34:27	2015-11-04 16:34:27	194	{"Etl.swift":"//\\n//  Etl.swift\\n//  Etl\\n//\\n//  Created by Andrew Halls on 7/31/14.\\n//  Copyright (c) 2014 GaltSoft. All rights reserved.\\n//\\n\\nimport Foundation\\nclass ETL {\\n    \\n    class func transform(dictionary:Dictionary\\u003cInt,Array\\u003cString\\u003e\\u003e)  -\\u003e Dictionary\\u003cString,Int\\u003e {\\n        var result = Dictionary\\u003cString,Int\\u003e()\\n        \\n        func increment(letter:String, increment: Int) -\\u003e Int {\\n            result[letter] = (result[letter]) ? result[letter]! + increment : increment\\n            return result[letter]!\\n        }\\n        \\n        for item in dictionary {\\n            item.1.map() {\\n                (letter:String) -\\u003e Int in\\n                return increment(letter.lowercaseString, item.0)\\n            }\\n        }\\n        return result\\n    }\\n}"}
289	42	38368b81e12806bfe9ec9ca5	superseded	swift	etl	\N	\N	0	2	2016-01-11 15:25:26	2016-01-11 15:25:26	194	{"Etl.swift":"//\\n//  Etl.swift\\n//  Etl\\n//\\n//  Created by Andrew Halls on 7/31/14.\\n//  Copyright (c) 2014 GaltSoft. All rights reserved.\\n//\\n\\nimport Foundation\\nclass ETL {\\n    \\n    class func transform(dictionary:Dictionary\\u003cInt,Array\\u003cString\\u003e\\u003e)  -\\u003e Dictionary\\u003cString,Int\\u003e {\\n        var result = Dictionary\\u003cString,Int\\u003e()\\n\\n        func processTuple(tuple:(Int, Array\\u003cString\\u003e)) -\\u003e Int {\\n            let value = tuple.0\\n            tuple.1.reduce(0, {(ignore, key) in result[key.lowercaseString] = value; return ignore})\\n            return value;\\n        }\\n        func arrayOfTuples(dictionary:Dictionary\\u003cInt,Array\\u003cString\\u003e\\u003e) -\\u003e Array\\u003c(Int,Array\\u003cString\\u003e)\\u003e {\\n            return Array(dictionary)\\n        }\\n        \\n       arrayOfTuples(dictionary).map(processTuple)\\n    \\n       return result\\n    }\\n}"}
290	42	52cb2253f9cd8c4426046346	pending	ruby	gigasecond	\N	\N	0	1	2015-10-26 23:10:19	2015-10-26 23:10:19	195	{"gigasecond.rb":"class Gigasecond\\n  DURATION = 10**9\\n\\n  def self.from(date)\\n    gigasecond = date.to_time + DURATION\\n    timestamp = gigasecond.to_s\\n    date.class.parse timestamp\\n  end\\nend"}
291	27	d5e561746499869a8e5c0818	done	csharp	pig-latin	\N	\N	0	1	2015-11-26 19:31:45	2015-11-26 19:31:45	196	{"\\\\csharp\\\\pig-latin\\\\PigLatin.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace PigLatin\\r\\n{\\r\\n    public class PigLatin\\r\\n    {\\r\\n        public static string Translate(string input)\\r\\n        {\\r\\n            List\\u003cstring\\u003e vowels = new List\\u003cstring\\u003e() { \\"a\\", \\"e\\" ,\\"i\\", \\"o\\", \\"u\\", \\"xr\\", \\"yt\\" };\\r\\n            int firstVowelIndex = int.MaxValue;\\r\\n            string[] words = input.Split(' ');\\r\\n            List\\u003cstring\\u003e endWords = new List\\u003cstring\\u003e();\\r\\n            foreach (string w in words)\\r\\n            {\\r\\n                foreach (string s in vowels)\\r\\n                {\\r\\n                    if (w.ToLower().Contains(s))\\r\\n                    {\\r\\n                        //make sure it dont go under 0 for the index.\\r\\n                        int i = w.ToLower().IndexOf(s) - 1 \\u003e= 0 ? w.ToLower().IndexOf(s) - 1 : w.ToLower().IndexOf(s);\\r\\n                        if ((s == \\"u\\" \\u0026\\u0026 w.ToLower()[i].ToString().ToLower() == \\"q\\"))\\r\\n                        {\\r\\n                        }\\r\\n                        else\\r\\n                        {\\r\\n                            firstVowelIndex = w.ToLower().IndexOf(s) \\u003c firstVowelIndex ? w.ToLower().IndexOf(s) : firstVowelIndex;\\r\\n                        }\\r\\n\\r\\n                    }\\r\\n                }\\r\\n                if (firstVowelIndex == 0)\\r\\n                {\\r\\n                    endWords.Add( w + \\"ay\\");\\r\\n                }\\r\\n                else\\r\\n                {\\r\\n                    string start = w.Substring(firstVowelIndex);\\r\\n                    string end = w.Substring(0, firstVowelIndex) + \\"ay\\";\\r\\n\\r\\n                    endWords.Add(start + end);\\r\\n                }\\r\\n            }\\r\\n            return string.Join(\\" \\", endWords);\\r\\n\\r\\n        }\\r\\n    }\\r\\n}"}
292	45	7170c72964431e98bdf32a9c	superseded	php	bowling	\N	\N	0	1	2016-02-24 04:08:26	2016-02-24 04:08:26	197	{"bowling.php":"\\u003c?php\\n\\nclass Game\\n{\\n    private $roll = 0;\\n    private $rolls = array();\\n\\n    public function roll( $pins ){\\n        $this-\\u003erolls[] = $pins;\\n    }\\n\\n    public function score(){\\n        $score = 0;\\n\\n        for( $i = 0 ; $i \\u003c 10 ; $i++ )\\n        {\\n            $score += $this-\\u003enextTwoRolls();\\n\\n            if( $this-\\u003eallPinsDown() )\\n                $score += $this-\\u003erolls[ $this-\\u003eroll + 2 ];\\n            \\n            $this-\\u003eroll += $this-\\u003eisStrike() ? 1 : 2;\\n        }\\n\\n        return $score;\\n    }\\n\\n    private function allPinsDown()\\n    {\\n        return $this-\\u003enextTwoRolls() \\u003e= 10;\\n    }\\n\\n    private function nextTwoRolls()\\n    {\\n        return $this-\\u003erolls[ $this-\\u003eroll ] + $this-\\u003erolls[ $this-\\u003eroll+1 ];\\n    }\\n\\n    private function isStrike()\\n    {\\n        return $this-\\u003erolls[ $this-\\u003eroll ] == 10;\\n    }\\n}"}
293	45	91e80c28f5375bb6c4219f8f	done	php	bowling	\N	\N	0	2	2016-03-19 10:56:24	2016-03-19 10:56:24	197	{"bowling.php":"\\u003c?php\\n\\nclass Game\\n{\\n    private $roll = 0;\\n    private $rolls = array();\\n\\n    public function roll( $pins ){\\n        $this-\\u003erolls[] = $pins;\\n    }\\n\\n    public function score(){\\n        $score = 0;\\n\\n        for( $i = 0 ; $i \\u003c 10 ; $i++ )\\n        {\\n            $score += $this-\\u003escoreFrame();\\n            $this-\\u003eadvanceFrame();\\n        }\\n\\n        return $score;\\n    }\\n\\n    private function scoreFrame()\\n    {\\n        $score = $this-\\u003enextTwoRolls();\\n\\n        if( $this-\\u003eallPinsDown() )\\n            $score += $this-\\u003ebonusRoll();\\n\\n        return $score;\\n    }\\n\\n    private function bonusRoll(){\\n        return $this-\\u003erolls[ $this-\\u003eroll + 2 ];\\n    }\\n\\n    private function advanceFrame()\\n    {\\n        $this-\\u003eroll += $this-\\u003eisStrike() ? 1 : 2;\\n    }\\n\\n    private function allPinsDown()\\n    {\\n        return $this-\\u003enextTwoRolls() \\u003e= 10;\\n    }\\n\\n    private function nextTwoRolls()\\n    {\\n        return $this-\\u003erolls[ $this-\\u003eroll ] + $this-\\u003erolls[ $this-\\u003eroll+1 ];\\n    }\\n\\n    private function isStrike()\\n    {\\n        return $this-\\u003erolls[ $this-\\u003eroll ] == 10;\\n    }\\n}"}
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 293, true);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	2	1
2	3	1
3	4	1
4	2	2
5	2	3
6	2	4
7	3	4
8	4	5
9	3	6
10	3	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, created_at, updated_at, confirmed, inviter_id) FROM stdin;
1	1	22	1991-09-04 03:49:07	1991-09-04 03:49:07	t	\N
2	1	15	1999-05-25 14:03:25	1999-05-25 14:03:25	t	\N
3	1	18	1982-05-10 20:44:02	1982-05-10 20:44:02	t	\N
4	1	23	2005-04-26 11:41:43	2005-04-26 11:41:43	t	\N
5	1	11	1990-04-02 04:38:01	1990-04-02 04:38:01	t	\N
6	1	8	2013-11-17 18:29:35	2013-11-17 18:29:35	t	\N
7	1	7	1990-01-28 21:40:14	1990-01-28 21:40:14	t	\N
8	1	30	2000-08-06 23:25:56	2000-08-06 23:25:56	t	\N
9	1	31	1986-01-03 20:51:13	1986-01-03 20:51:13	t	\N
10	1	36	1971-11-09 06:04:06	1971-11-09 06:04:06	t	\N
11	1	16	2011-01-19 01:06:29	2011-01-19 01:06:29	f	\N
12	1	17	1985-11-17 01:01:16	1985-11-17 01:01:16	f	\N
13	1	29	1982-01-07 18:32:01	1982-01-07 18:32:01	f	\N
14	1	32	1973-09-05 12:37:48	1973-09-05 12:37:48	f	\N
15	1	38	1993-02-19 14:43:42	1993-02-19 14:43:42	f	\N
16	1	42	1989-08-24 13:16:12	1989-08-24 13:16:12	f	\N
17	1	43	1993-04-06 19:08:36	1993-04-06 19:08:36	f	\N
18	1	47	1991-05-08 08:26:59	1991-05-08 08:26:59	f	\N
19	2	3	1997-04-03 05:18:32	1997-04-03 05:18:32	t	\N
20	2	36	2001-07-04 04:46:49	2001-07-04 04:46:49	t	\N
21	2	31	1982-04-27 04:03:44	1982-04-27 04:03:44	t	\N
22	2	47	1991-08-01 11:01:56	1991-08-01 11:01:56	t	\N
23	2	19	2015-12-21 19:41:00	2015-12-21 19:41:00	f	\N
24	2	38	1991-11-22 06:21:34	1991-11-22 06:21:34	f	\N
25	3	38	1979-04-26 06:20:14	1979-04-26 06:20:14	f	\N
26	3	3	1981-10-13 08:02:45	1981-10-13 08:02:45	f	\N
27	4	3	2012-01-06 22:30:00	2012-01-06 22:30:00	t	\N
28	4	32	1975-08-05 00:18:05	1975-08-05 00:18:05	t	\N
29	4	22	2014-07-17 13:13:01	2014-07-17 13:13:01	t	\N
30	4	27	1987-02-05 10:41:58	1987-02-05 10:41:58	t	\N
31	4	20	1992-05-02 13:58:23	1992-05-02 13:58:23	t	\N
32	4	25	1977-10-04 04:05:35	1977-10-04 04:05:35	t	\N
33	4	19	1983-12-04 13:45:02	1983-12-04 13:45:02	t	\N
34	4	24	1989-07-11 19:27:24	1989-07-11 19:27:24	t	\N
35	4	26	1992-12-24 18:01:04	1992-12-24 18:01:04	t	\N
36	4	21	1992-09-05 21:13:00	1992-09-05 21:13:00	t	\N
37	4	38	1988-06-26 05:00:09	1988-06-26 05:00:09	f	\N
38	4	12	2014-11-05 10:41:39	2014-11-05 10:41:39	f	\N
39	4	14	1998-07-01 20:22:13	1998-07-01 20:22:13	f	\N
40	5	32	2012-06-12 15:37:09	2012-06-12 15:37:09	t	\N
41	5	40	1995-03-28 15:11:52	1995-03-28 15:11:52	t	\N
42	5	35	1992-12-29 22:58:17	1992-12-29 22:58:17	t	\N
43	5	37	1976-01-10 09:55:19	1976-01-10 09:55:19	t	\N
44	5	33	2009-08-08 09:46:24	2009-08-08 09:46:24	t	\N
45	5	36	2011-03-02 01:48:05	2011-03-02 01:48:05	t	\N
46	5	34	2003-02-14 19:14:30	2003-02-14 19:14:30	t	\N
47	5	39	1999-10-13 21:35:21	1999-10-13 21:35:21	t	\N
48	5	41	1988-03-14 15:17:29	1988-03-14 15:17:29	f	\N
49	5	38	2013-08-19 21:09:11	2013-08-19 21:09:11	f	\N
50	5	3	1997-10-09 15:25:44	1997-10-09 15:25:44	f	\N
51	6	6	2007-02-09 06:51:29	2007-02-09 06:51:29	t	\N
52	6	7	2013-10-05 21:15:17	2013-10-05 21:15:17	t	\N
53	6	8	1984-05-27 02:51:46	1984-05-27 02:51:46	t	\N
54	6	9	1977-04-04 12:12:52	1977-04-04 12:12:52	t	\N
55	6	11	2009-02-26 07:47:14	2009-02-26 07:47:14	t	\N
56	6	12	1975-03-22 13:53:37	1975-03-22 13:53:37	t	\N
57	6	13	1988-09-08 17:02:57	1988-09-08 17:02:57	t	\N
58	6	14	1987-10-07 08:34:29	1987-10-07 08:34:29	t	\N
59	6	15	1992-03-11 14:51:25	1992-03-11 14:51:25	t	\N
60	6	16	2014-12-04 15:47:33	2014-12-04 15:47:33	t	\N
61	6	17	1990-04-18 05:01:34	1990-04-18 05:01:34	t	\N
62	6	18	1987-09-01 13:01:52	1987-09-01 13:01:52	t	\N
63	6	23	1993-04-10 19:39:51	1993-04-10 19:39:51	t	\N
64	6	28	2011-05-24 22:00:33	2011-05-24 22:00:33	t	\N
65	6	29	1977-01-19 18:04:12	1977-01-19 18:04:12	t	\N
66	6	30	1994-02-26 18:29:21	1994-02-26 18:29:21	t	\N
67	6	31	1977-12-14 14:22:24	1977-12-14 14:22:24	t	\N
68	6	32	2008-07-21 10:35:49	2008-07-21 10:35:49	t	\N
69	6	38	1993-08-20 05:27:35	1993-08-20 05:27:35	t	\N
70	6	42	2003-11-18 16:39:01	2003-11-18 16:39:01	t	\N
71	6	43	2008-10-26 21:43:22	2008-10-26 21:43:22	t	\N
72	6	44	2007-05-14 07:54:29	2007-05-14 07:54:29	t	\N
73	6	45	2012-10-05 00:55:20	2012-10-05 00:55:20	t	\N
74	6	46	2000-02-23 06:21:53	2000-02-23 06:21:53	t	\N
75	6	47	1981-08-09 19:14:13	1981-08-09 19:14:13	t	\N
76	6	48	2015-01-04 03:42:04	2015-01-04 03:42:04	t	\N
77	6	49	1992-10-12 21:04:52	1992-10-12 21:04:52	t	\N
78	7	3	1986-03-05 00:27:07	1986-03-05 00:27:07	t	\N
79	7	39	2000-03-27 15:28:46	2000-03-27 15:28:46	t	\N
80	7	32	1997-02-16 00:02:41	1997-02-16 00:02:41	t	\N
81	7	38	2012-11-25 12:11:51	2012-11-25 12:11:51	f	\N
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, created_at, updated_at, name) FROM stdin;
1	baconesia	2015-11-28 22:09:01.734571	2015-11-28 22:09:01.734571	baconesia
2	chocolades	2015-08-18 00:02:42.799055	2015-08-18 00:02:42.799055	chocolades
3	ghost	2015-11-09 19:07:45.807132	2015-11-09 19:07:45.807132	ghost
4	motley	2016-03-09 21:20:31.813331	2016-03-09 21:20:31.813331	motley
5	rugrats	2015-09-22 07:29:49.831906	2015-09-22 07:29:49.831906	rugrats
6	slate	2015-07-09 15:23:34.846622	2015-07-09 15:23:34.846622	slate
7	polkadots	2015-10-29 05:05:52.881357	2015-10-29 05:05:52.881357	polkadots
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, created_at, updated_at, key, archived, last_iteration_at, last_activity_at, last_activity, fetched_at, skipped_at) FROM stdin;
1	9	go	leap	1	done	2016-02-12 06:16:33	2016-02-12 06:16:33	f945dbc98cc97528a8212926	t	2016-02-27 17:36:51	2016-02-27 17:36:51	Submitted an iteration	\N	\N
2	9	python	simple-cipher	5	done	2015-12-30 01:43:40	2015-12-30 01:43:40	a318f16f1e9fde7c884cd9e2	t	2016-03-21 01:10:43	2016-03-21 01:10:43	Submitted an iteration	\N	\N
3	9	go	simple-cipher	1	needs_input	2015-12-26 19:01:27	2015-12-26 19:01:27	2c24a92ba07fbd4b5f81e732	t	2016-03-15 22:53:10	2016-03-15 22:53:10	Submitted an iteration	\N	\N
4	9	ruby	hamming	1	done	2016-01-06 09:44:14	2016-01-06 09:44:14	d4c1d91056fcaa5442cf6f7a	t	2016-02-02 09:10:35	2016-02-02 09:10:35	Submitted an iteration	\N	\N
5	9	go	difference-of-squares	1	pending	2016-02-18 08:13:16	2016-02-18 08:13:16	10b9a670eb82ff75adbf7122	f	2016-02-21 19:16:11	2016-02-21 19:16:11	Submitted an iteration	\N	\N
6	9	python	hamming	1	pending	2016-01-31 00:23:44	2016-01-31 00:23:44	df78139f0f5d62a7ba0e992a	f	2016-02-25 13:54:34	2016-02-25 13:54:34	Submitted an iteration	\N	\N
7	9	python	leap	3	hibernating	2016-01-04 02:18:07	2016-01-04 02:18:07	ee75cf98800526adc61d7ab0	f	2016-02-11 00:03:27	2016-02-11 00:03:27	Submitted an iteration	\N	\N
8	9	python	rna-transcription	1	pending	2015-12-28 16:32:04	2015-12-28 16:32:04	20be11211fe30c12aed5d413	t	2016-01-15 12:43:49	2016-01-15 12:43:49	Submitted an iteration	\N	\N
9	9	erlang	word-count	1	pending	2016-02-07 01:20:16	2016-02-07 01:20:16	86f262e6cd2dffb51abf70fc	f	2016-02-16 00:39:23	2016-02-16 00:39:23	Submitted an iteration	\N	\N
10	9	rust	anagram	2	pending	2016-01-05 22:17:57	2016-01-05 22:17:57	5b9a4b19658a6a1b0ab99f69	f	2016-01-30 11:44:50	2016-01-30 11:44:50	Submitted an iteration	\N	\N
11	9	javascript	leap	1	\N	2016-01-19 17:01:16	2016-01-19 17:01:16	95a2bbb19d407cff328e27a6	f	2016-03-21 11:04:47	2016-03-21 11:04:47	Submitted an iteration	2016-01-26 01:22:01.058181	\N
12	9	csharp	space-age	1	\N	2016-03-13 12:54:44	2016-03-13 12:54:44	c6ae3046ad31733cf69ffe0c	t	2016-03-16 19:48:04	2016-03-16 19:48:04	Submitted an iteration	2015-12-20 12:47:25.271381	\N
13	9	python	hello-world	1	\N	2016-01-15 19:34:36	2016-01-15 19:34:36	cf84852fba5401a098591981	f	2016-02-25 21:44:02	2016-02-25 21:44:02	Submitted an iteration	\N	\N
14	9	clojure	phone-number	2	pending	2016-02-29 01:54:54	2016-02-29 01:54:54	575bcb69b017675cb8e28f7d	f	2016-03-24 21:05:06	2016-03-24 21:05:06	Submitted an iteration	\N	\N
15	9	ruby	meetup	8	done	2015-12-22 16:43:15	2015-12-22 16:43:15	7f9cba7f39eed2378a967f77	t	2016-03-13 11:16:32	2016-03-13 11:16:32	Submitted an iteration	\N	\N
16	9	haskell	bob	2	pending	2016-01-03 02:58:15	2016-01-03 02:58:15	27d903ea1cb19157390f321a	t	2016-03-21 16:35:34	2016-03-21 16:35:34	Submitted an iteration	\N	\N
17	9	scala	crypto-square	1	pending	2016-01-01 00:15:04	2016-01-01 00:15:04	0be35f1ecf4000218bf54ffc	f	2016-01-19 18:03:08	2016-01-19 18:03:08	Submitted an iteration	\N	\N
18	9	python	word-count	2	hibernating	2016-01-24 01:56:52	2016-01-24 01:56:52	766c069511698995ea08240d	f	2016-02-12 07:59:54	2016-02-12 07:59:54	Submitted an iteration	\N	\N
19	9	haskell	accumulate	1	\N	2016-01-01 01:37:08	2016-01-01 01:37:08	1fd989067d19455b18700ed3	f	2016-03-22 04:30:36	2016-03-22 04:30:36	Submitted an iteration	2015-12-20 20:34:19.529747	\N
20	9	elixir	word-count	2	\N	2015-12-22 18:05:25	2015-12-22 18:05:25	d8d7c80632a17c24b635914e	f	2016-03-19 00:15:27	2016-03-19 00:15:27	Submitted an iteration	2016-01-29 23:00:51.24316	\N
21	9	csharp	word-count	1	pending	2016-01-10 08:02:10	2016-01-10 08:02:10	8a47e3e3d1430f0c618a3d2e	f	2016-03-14 09:01:10	2016-03-14 09:01:10	Submitted an iteration	\N	\N
22	9	clojure	hamming	1	pending	2016-02-20 00:29:13	2016-02-20 00:29:13	465b44bbc8dbd7f851a3d7f5	f	2016-03-27 10:49:59	2016-03-27 10:49:59	Submitted an iteration	\N	\N
23	9	swift	hamming	1	pending	2016-03-11 11:43:43	2016-03-11 11:43:43	974b64508df7d75d61a8b4a9	f	2016-03-26 19:21:41	2016-03-26 19:21:41	Submitted an iteration	\N	\N
24	9	csharp	anagram	1	pending	2016-01-02 04:02:22	2016-01-02 04:02:22	ac516bf3ea605a25ddc11d51	f	2016-01-13 22:47:00	2016-01-13 22:47:00	Submitted an iteration	\N	\N
25	9	haskell	triangle	1	done	2016-01-24 20:08:50	2016-01-24 20:08:50	44cf2def7a6be98e1abbcfd0	t	2016-02-24 17:04:18	2016-02-24 17:04:18	Submitted an iteration	\N	\N
26	9	ruby	bob	2	done	2015-12-23 05:33:05	2015-12-23 05:33:05	ca6bad8cede94308d6fc27be	t	2016-03-09 19:29:31	2016-03-09 19:29:31	Submitted an iteration	\N	\N
27	9	javascript	hamming	1	\N	2016-01-09 15:19:07	2016-01-09 15:19:07	274f11eb0d235cf703aac3f1	f	2016-02-24 03:13:02	2016-02-24 03:13:02	Submitted an iteration	2015-10-20 10:13:21.511524	\N
28	9	elixir	etl	1	\N	2016-01-25 00:05:27	2016-01-25 00:05:27	8a2577da4ca918e1005f2d38	f	2016-02-28 19:37:18	2016-02-28 19:37:18	@vitaly commented	2015-10-24 17:08:32.602512	\N
29	9	coffeescript	bob	1	pending	2016-02-14 12:03:02	2016-02-14 12:03:02	86cfea47721856a52f1ddf49	t	2016-02-17 15:14:15	2016-02-17 15:14:15	Submitted an iteration	\N	\N
30	9	clojure	scrabble-score	1	hibernating	2016-02-05 15:43:56	2016-02-05 15:43:56	d2b08d8c93b6238036b26795	t	2016-03-06 17:24:19	2016-03-06 17:24:19	Submitted an iteration	\N	\N
31	11	cpp	word-count	1	hibernating	2016-01-02 18:30:35	2016-01-02 18:30:35	1ef3692ab5987817cdfc798d	f	2016-02-20 20:12:40	2016-02-20 20:12:40	Submitted an iteration	\N	\N
32	11	ruby	hamming	3	\N	2015-12-23 01:48:48	2015-12-23 01:48:48	4937bec56b40aeeb3a806f97	f	2016-03-24 09:15:37	2016-03-24 09:15:37	@pierrebeaucamp commented	2016-01-06 16:28:43.786147	\N
33	11	python	bob	1	pending	2015-12-25 06:29:48	2015-12-25 06:29:48	fbee683fb65a13d106a87320	f	2016-03-26 13:29:20	2016-03-26 13:29:20	Submitted an iteration	\N	\N
34	11	elixir	bob	1	hibernating	2015-12-20 13:45:04	2015-12-20 13:45:04	5df136e21b952b2774ea13b1	f	2016-02-08 19:56:46	2016-02-08 19:56:46	Submitted an iteration	\N	\N
35	11	python	hello-world	1	pending	2016-01-08 15:47:08	2016-01-08 15:47:08	d630f505ddcb62d62d11f8b0	f	2016-03-04 04:51:13	2016-03-04 04:51:13	Submitted an iteration	\N	\N
36	11	javascript	beer-song	1	done	2016-03-04 13:43:57	2016-03-04 13:43:57	50017ecf39a0a206b3171579	t	2016-03-18 18:11:21	2016-03-18 18:11:21	Submitted an iteration	\N	\N
37	12	ruby	word-count	1	done	2016-01-14 03:03:18	2016-01-14 03:03:18	5f161141d9038352b8bc9f5a	t	2016-01-15 07:56:58	2016-01-15 07:56:58	Submitted an iteration	\N	\N
38	12	ruby	custom-set	1	needs_input	2016-01-22 21:23:20	2016-01-22 21:23:20	c2e3112bd43e4b2730ae3909	f	2016-02-12 02:10:08	2016-02-12 02:10:08	Submitted an iteration	\N	\N
39	12	ruby	raindrops	1	\N	2016-02-18 02:26:45	2016-02-18 02:26:45	8f0c54ecd7dab93ba6d48e27	f	2016-03-20 08:39:27	2016-03-20 08:39:27	Submitted an iteration	2016-01-13 05:55:06.22008	\N
40	12	javascript	hello-world	1	pending	2016-02-21 10:01:40	2016-02-21 10:01:40	b0860c9f4fd53fc24e74ae8e	f	2016-03-07 03:08:11	2016-03-07 03:08:11	Submitted an iteration	\N	\N
41	15	haskell	grade-school	3	pending	2015-12-24 01:10:25	2015-12-24 01:10:25	8d3082fa9c5ee294f249c501	t	2016-01-29 20:48:20	2016-01-29 20:48:20	Submitted an iteration	\N	\N
42	22	fsharp	sum-of-multiples	1	hibernating	2015-12-23 21:12:13	2015-12-23 21:12:13	775a0d8e9868977e45fc2439	f	2016-01-23 01:17:19	2016-01-23 01:17:19	Submitted an iteration	\N	\N
43	22	javascript	etl	1	\N	2016-03-14 02:44:15	2016-03-14 02:44:15	459dcd7977d13b393d02bfce	f	2016-03-24 16:39:49	2016-03-24 16:39:49	Submitted an iteration	2016-03-01 20:39:12.112486	\N
44	22	ruby	palindrome-products	1	hibernating	2015-12-12 15:18:55	2015-12-12 15:18:55	49bfa32a521e61ba950599e8	f	2016-01-31 02:48:37	2016-01-31 02:48:37	Submitted an iteration	\N	\N
45	28	javascript	bob	1	pending	2016-03-25 08:17:13	2016-03-25 08:17:13	2dcdcc555349648ab0754a24	f	2016-03-25 17:28:44	2016-03-25 17:28:44	Submitted an iteration	\N	\N
46	29	haskell	binary	7	hibernating	2016-03-18 14:26:26	2016-03-18 14:26:26	44d075491305a1dafb9e17f3	t	2016-03-27 06:52:37	2016-03-27 06:52:37	Submitted an iteration	\N	\N
47	31	javascript	etl	1	done	2016-01-31 19:33:14	2016-01-31 19:33:14	b1cad012173c4273818c517b	t	2016-02-04 04:02:25	2016-02-04 04:02:25	Submitted an iteration	\N	\N
48	31	python	hamming	1	hibernating	2016-02-29 05:34:49	2016-02-29 05:34:49	6d0cd6cd6688ee7ae873d4ff	f	2016-03-23 14:05:49	2016-03-23 14:05:49	Submitted an iteration	\N	\N
49	31	python	rna-transcription	5	done	2015-12-26 12:36:18	2015-12-26 12:36:18	4c46d5dfe081f2a5b2876f23	t	2016-02-20 22:23:58	2016-02-20 22:23:58	Submitted an iteration	\N	\N
50	31	ruby	robot-name	2	done	2016-01-07 13:09:49	2016-01-07 13:09:49	3d35a18fe05fe5b3458ae719	t	2016-02-11 02:47:47	2016-02-11 02:47:47	Submitted an iteration	\N	\N
51	31	ruby	word-count	1	pending	2015-12-19 05:31:42	2015-12-19 05:31:42	8af57e49a090d642f494241e	f	2016-02-15 01:59:44	2016-02-15 01:59:44	Submitted an iteration	\N	\N
52	31	clojure	beer-song	3	\N	2016-01-20 16:09:48	2016-01-20 16:09:48	7114b705850f7f862a64fb94	f	2016-03-23 20:08:31	2016-03-23 20:08:31	Submitted an iteration	\N	\N
53	33	ruby	nucleotide-count	5	hibernating	2015-08-24 05:55:37	2015-08-24 05:55:37	e3bab7ea022782038c5f7308	f	2016-03-04 14:38:07	2016-03-04 14:38:07	Submitted an iteration	\N	\N
54	33	haskell	allergies	1	\N	2015-08-05 23:31:05	2015-08-05 23:31:05	90f0a2d1a2534b8c8c68e558	f	2015-11-29 08:21:27	2015-11-29 08:21:27	Submitted an iteration	2015-11-18 06:38:57.881805	\N
55	33	javascript	leap	1	done	2016-03-10 08:36:04	2016-03-10 08:36:04	882c1b6494c59367753992bf	t	2016-03-13 23:50:03	2016-03-13 23:50:03	Submitted an iteration	\N	\N
56	33	python	sublist	1	pending	2015-09-02 20:48:32	2015-09-02 20:48:32	b19e81da76361c5b4d4d86b7	f	2015-09-20 21:14:15	2015-09-20 21:14:15	Submitted an iteration	\N	\N
57	38	cpp	grains	1	done	2016-03-22 15:38:32	2016-03-22 15:38:32	139e17b89627cc01a9d9ab91	t	2016-03-25 14:45:37	2016-03-25 14:45:37	Submitted an iteration	\N	\N
58	38	python	hexadecimal	1	pending	2016-03-22 05:13:00	2016-03-22 05:13:00	1d56ac246005f4da253cc508	f	2016-03-23 00:09:31	2016-03-23 00:09:31	Submitted an iteration	\N	\N
59	40	ruby	hamming	1	hibernating	2016-02-27 02:06:41	2016-02-27 02:06:41	82aebe9206c29a6090ba5c37	f	2016-03-25 13:27:07	2016-03-25 13:27:07	Submitted an iteration	\N	\N
60	40	rust	allergies	1	\N	2016-02-02 07:50:28	2016-02-02 07:50:28	80f5fd0a48f60fdf908263d4	f	2016-03-22 06:00:45	2016-03-22 06:00:45	Submitted an iteration	2016-01-02 09:52:29.884415	\N
61	40	ocaml	minesweeper	2	\N	2016-01-16 03:53:05	2016-01-16 03:53:05	20750ac712c5a1dc281a32b6	t	2016-03-10 08:05:40	2016-03-10 08:05:40	Submitted an iteration	2015-12-08 13:43:43.103349	\N
62	40	javascript	accumulate	1	\N	2016-01-14 12:07:29	2016-01-14 12:07:29	6739bf10af93ac534e02170c	t	2016-01-20 20:54:20	2016-01-20 20:54:20	@oalbe commented	2015-11-08 11:06:10.059298	\N
63	40	clojure	beer-song	1	done	2016-01-29 05:30:35	2016-01-29 05:30:35	66182cf89e6965c143afb2e8	t	2016-03-07 19:16:20	2016-03-07 19:16:20	Submitted an iteration	\N	\N
64	40	ruby	word-count	4	\N	2016-01-21 18:44:35	2016-01-21 18:44:35	45b59b6694435736611f31b9	f	2016-03-22 01:15:46	2016-03-22 01:15:46	@mikegee commented	2016-01-19 10:42:45.651387	\N
65	40	ruby	grains	1	hibernating	2016-03-02 05:32:21	2016-03-02 05:32:21	a4c8dad8bf82590eff5839a9	f	2016-03-24 15:46:17	2016-03-24 15:46:17	Submitted an iteration	\N	\N
66	44	clojure	rna-transcription	1	pending	2015-11-11 09:07:45	2015-11-11 09:07:45	6283ec6e19e77f3f909b96b8	f	2016-02-04 14:35:22	2016-02-04 14:35:22	Submitted an iteration	\N	\N
67	44	python	difference-of-squares	1	hibernating	2015-12-24 01:55:48	2015-12-24 01:55:48	76f412baab99dd75afc40a52	f	2015-12-30 18:18:06	2015-12-30 18:18:06	Submitted an iteration	\N	\N
68	44	elixir	word-count	1	\N	2016-01-19 13:00:40	2016-01-19 13:00:40	fb0a4877c9a81ebee36266b6	f	2016-03-04 15:26:10	2016-03-04 15:26:10	Submitted an iteration	2016-03-03 04:27:30.491301	\N
69	44	ruby	sieve	1	\N	2015-11-24 07:26:12	2015-11-24 07:26:12	64f90d3856b0bcf1e04b22a2	f	2016-02-16 02:58:08	2016-02-16 02:58:08	Submitted an iteration	2015-10-21 07:35:00.843318	\N
70	44	haskell	accumulate	1	\N	2015-12-19 18:25:52	2015-12-19 18:25:52	db179793bc904ce944479241	f	2015-12-21 06:30:58	2015-12-21 06:30:58	Submitted an iteration	2016-02-17 04:15:34.043556	\N
71	44	python	leap	1	pending	2015-11-19 07:55:24	2015-11-19 07:55:24	c8ebc4fa4b34e9c6e655c754	f	2016-02-02 02:08:59	2016-02-02 02:08:59	Submitted an iteration	\N	\N
72	44	scala	hello-world	1	\N	2015-11-11 17:22:53	2015-11-11 17:22:53	bee2670827a8d572e00232ea	f	2015-12-29 18:06:33	2015-12-29 18:06:33	Submitted an iteration	\N	\N
73	46	ruby	hello-world	1	done	2015-12-01 22:28:11	2015-12-01 22:28:11	0bbac53250f27f05ef637767	t	2015-12-31 17:27:17	2015-12-31 17:27:17	Submitted an iteration	\N	\N
74	46	python	accumulate	1	done	2016-01-04 10:56:43	2016-01-04 10:56:43	2df37ed6cb438db64f38bd14	t	2016-02-09 12:29:07	2016-02-09 12:29:07	Submitted an iteration	\N	\N
75	46	ruby	rna-transcription	2	pending	2015-11-26 17:41:01	2015-11-26 17:41:01	e9b04fd1c32416e387f634af	f	2016-03-15 23:29:01	2016-03-15 23:29:01	Submitted an iteration	\N	\N
76	46	ruby	grains	1	done	2016-03-05 23:15:26	2016-03-05 23:15:26	81d02e05c785e714c593f0b3	t	2016-03-13 14:11:51	2016-03-13 14:11:51	Submitted an iteration	\N	\N
77	46	javascript	hello-world	1	\N	2015-11-10 08:44:46	2015-11-10 08:44:46	8c8358a0483b51284bf5cb79	f	2016-03-14 12:32:50	2016-03-14 12:32:50	@rikki- commented	\N	\N
78	48	ruby	rna-transcription	1	hibernating	2015-12-04 07:17:10	2015-12-04 07:17:10	6aff9858f72c70abe3d49e5e	t	2016-03-11 13:46:39	2016-03-11 13:46:39	Submitted an iteration	\N	\N
79	49	ruby	raindrops	1	done	2016-03-02 01:03:28	2016-03-02 01:03:28	ed26e45ed36263d3d1ee62bd	t	2016-03-24 04:34:56	2016-03-24 04:34:56	Submitted an iteration	\N	\N
80	49	python	gigasecond	3	pending	2016-02-27 06:14:19	2016-02-27 06:14:19	bce3c838f5c300c954964fac	f	2016-03-17 22:21:39	2016-03-17 22:21:39	Submitted an iteration	\N	\N
81	49	clojure	bob	1	hibernating	2016-03-10 18:35:55	2016-03-10 18:35:55	ffdbbb8b0669ab16e80f3ce8	f	2016-03-27 00:03:10	2016-03-27 00:03:10	Submitted an iteration	\N	\N
82	49	php	hamming	1	\N	2016-03-01 17:41:37	2016-03-01 17:41:37	3f4c114e6e7646f3b2d6318e	f	2016-03-12 19:01:43	2016-03-12 19:01:43	Submitted an iteration	\N	\N
83	26	ruby	leap	2	pending	2015-12-01 03:28:00	2015-12-01 03:28:00	2136b123442774e278de7329	f	2015-12-29 22:40:43	2015-12-29 22:40:43	Submitted an iteration	\N	\N
84	7	javascript	rna-transcription	1	done	2016-01-26 01:45:54	2016-01-26 01:45:54	6eb45aa8a08c726930b93e6e	t	2016-01-28 21:53:23	2016-01-28 21:53:23	Submitted an iteration	\N	\N
85	23	go	nucleotide-count	1	pending	2016-01-24 05:23:18	2016-01-24 05:23:18	7d82a153a8d54bd3aa4fcf09	f	2016-03-23 18:47:54	2016-03-23 18:47:54	Submitted an iteration	\N	\N
86	23	java	crypto-square	1	\N	2016-02-04 08:15:14	2016-02-04 08:15:14	3fb6e658299288a4593000cc	f	2016-03-08 22:26:28	2016-03-08 22:26:28	Submitted an iteration	2015-10-28 00:04:07.238794	\N
87	23	elixir	prime-factors	2	pending	2016-01-08 14:54:46	2016-01-08 14:54:46	4918f606c159fc4b965691e5	f	2016-02-06 23:01:07	2016-02-06 23:01:07	Submitted an iteration	\N	\N
88	23	ruby	robot-name	1	pending	2016-01-02 09:41:27	2016-01-02 09:41:27	ed218caed5e7afe275edf1f8	f	2016-01-30 09:46:33	2016-01-30 09:46:33	Submitted an iteration	\N	\N
89	17	perl5	meetup	1	pending	2015-12-23 16:13:33	2015-12-23 16:13:33	7e0d0ee684655ac007423756	t	2016-02-09 19:29:51	2016-02-09 19:29:51	Submitted an iteration	\N	\N
90	17	csharp	leap	1	done	2015-12-23 19:41:24	2015-12-23 19:41:24	4b3eabdae761926e7f9667f1	t	2016-03-16 22:04:08	2016-03-16 22:04:08	Submitted an iteration	\N	\N
91	17	ruby	simple-linked-list	1	done	2016-01-23 02:44:44	2016-01-23 02:44:44	616a4c55849495e4767325da	t	2016-02-23 14:39:32	2016-02-23 14:39:32	Submitted an iteration	\N	\N
92	17	elixir	hello-world	1	\N	2015-12-22 08:52:20	2015-12-22 08:52:20	08e02fafcdbfceee2e45215e	f	2016-01-22 16:32:13	2016-01-22 16:32:13	Submitted an iteration	\N	\N
93	20	ruby	word-count	1	done	2016-02-08 10:34:15	2016-02-08 10:34:15	4576f0031e8218810b07e1b3	t	2016-02-22 02:03:45	2016-02-22 02:03:45	Submitted an iteration	\N	\N
94	20	swift	hamming	1	\N	2016-01-24 02:11:46	2016-01-24 02:11:46	ccfaabc9b737c72f4a011a02	f	2016-03-01 12:03:35	2016-03-01 12:03:35	Submitted an iteration	2016-02-13 16:44:58.153374	\N
95	20	ruby	hamming	3	done	2016-02-06 07:31:09	2016-02-06 07:31:09	7714d26c7cbc9f284aedd4a4	t	2016-03-27 03:44:42	2016-03-27 03:44:42	Submitted an iteration	\N	\N
96	20	ruby	anagram	1	hibernating	2016-01-18 16:43:36	2016-01-18 16:43:36	0bda100120270bd6d597441e	f	2016-02-09 00:47:43	2016-02-09 00:47:43	Submitted an iteration	\N	\N
97	20	python	nucleotide-count	2	pending	2015-12-17 12:54:08	2015-12-17 12:54:08	61355e8ec3b1c073fd0c6b83	t	2016-02-05 13:40:49	2016-02-05 13:40:49	Submitted an iteration	\N	\N
98	20	elixir	bob	1	\N	2016-03-08 09:43:03	2016-03-08 09:43:03	2a875329bd9962fc7559e50c	f	2016-03-13 01:19:47	2016-03-13 01:19:47	Submitted an iteration	2015-12-23 18:30:09.177045	\N
99	20	haskell	list-ops	1	hibernating	2015-12-16 15:51:15	2015-12-16 15:51:15	d2d1a008318eaa95144c7b09	f	2016-01-08 12:33:52	2016-01-08 12:33:52	Submitted an iteration	\N	\N
100	20	elixir	atbash-cipher	2	pending	2015-12-14 06:09:36	2015-12-14 06:09:36	967b3136188667775512fc7e	t	2016-01-27 04:13:04	2016-01-27 04:13:04	Submitted an iteration	\N	\N
101	20	scala	grains	2	pending	2016-03-11 12:27:48	2016-03-11 12:27:48	7d7cdc009ebfc29bbbe974a9	f	2016-03-19 23:22:22	2016-03-19 23:22:22	Submitted an iteration	\N	\N
102	20	ruby	atbash-cipher	1	\N	2015-12-26 20:47:53	2015-12-26 20:47:53	e7ff08dddf64b43b8b3e2faf	f	2016-02-19 02:16:33	2016-02-19 02:16:33	Submitted an iteration	2015-10-15 21:56:10.01865	\N
103	20	javascript	word-count	2	hibernating	2015-12-16 20:06:30	2015-12-16 20:06:30	85cc5f0a8c23444a9a3ead77	f	2016-03-04 04:16:03	2016-03-04 04:16:03	Submitted an iteration	\N	\N
104	20	ruby	gigasecond	1	\N	2016-03-05 09:11:08	2016-03-05 09:11:08	28283448d38d7b2b90127b71	f	2016-03-24 10:28:28	2016-03-24 10:28:28	Submitted an iteration	\N	\N
105	20	python	word-count	1	pending	2016-01-25 22:30:32	2016-01-25 22:30:32	01ad15413f7d431c4c5d7159	f	2016-02-22 02:50:40	2016-02-22 02:50:40	Submitted an iteration	\N	\N
106	20	perl5	triangle	1	done	2016-03-02 06:40:26	2016-03-02 06:40:26	3b63fb98e552417cf3638bcb	t	2016-03-05 06:52:25	2016-03-05 06:52:25	Submitted an iteration	\N	\N
107	20	elixir	anagram	1	\N	2015-12-31 09:10:03	2015-12-31 09:10:03	2db236eecaad36ee2b153b77	f	2016-03-21 17:50:32	2016-03-21 17:50:32	Submitted an iteration	2015-10-30 12:29:49.63392	\N
108	20	python	hello-world	1	\N	2015-12-22 13:33:51	2015-12-22 13:33:51	0fbbfefa450185de53326b79	f	2016-02-22 02:36:49	2016-02-22 02:36:49	@rikki- commented	\N	\N
109	20	ruby	hexadecimal	1	\N	2015-12-29 05:48:20	2015-12-29 05:48:20	088eaee1ccb1239d642f1f7c	f	2016-02-03 18:55:38	2016-02-03 18:55:38	Submitted an iteration	2015-10-07 17:48:08.023485	\N
110	20	python	bob	1	\N	2015-12-20 04:28:52	2015-12-20 04:28:52	55e6017b5182522a42615223	f	2016-02-28 20:55:36	2016-02-28 20:55:36	Submitted an iteration	2015-11-05 12:49:45.91004	\N
111	20	lua	binary-search-tree	1	\N	2016-01-11 13:52:26	2016-01-11 13:52:26	af8af529fe1ae05d0e9c8db3	f	2016-01-22 01:24:24	2016-01-22 01:24:24	@ryanplusplus commented	2016-02-09 05:21:46.233536	\N
112	20	haskell	bob	1	done	2016-01-30 23:28:04	2016-01-30 23:28:04	edc05429d0647d6d4bc2805a	t	2016-03-27 13:05:31	2016-03-27 13:05:31	Submitted an iteration	\N	\N
113	20	javascript	roman-numerals	1	\N	2016-02-29 04:59:07	2016-02-29 04:59:07	9b6f4956c369ff6e40f5ed3b	f	2016-03-10 07:38:33	2016-03-10 07:38:33	Submitted an iteration	2016-01-21 19:15:31.546901	\N
114	20	ruby	bob	1	\N	2016-01-12 18:51:52	2016-01-12 18:51:52	d8dd515b3454b73c606c13d9	f	2016-03-14 17:52:11	2016-03-14 17:52:11	Submitted an iteration	\N	\N
115	20	haskell	octal	2	pending	2016-01-06 21:47:05	2016-01-06 21:47:05	e86827d4a2fc9a82079f4c20	t	2016-02-13 05:42:41	2016-02-13 05:42:41	Submitted an iteration	\N	\N
116	20	ruby	hello-world	1	done	2016-01-06 23:05:23	2016-01-06 23:05:23	6700aca729e97fd372fd17ac	t	2016-01-29 11:03:53	2016-01-29 11:03:53	Submitted an iteration	\N	\N
117	20	scala	palindrome-products	1	pending	2016-02-06 08:02:49	2016-02-06 08:02:49	4ed4ffc5130da3bd8cf8ab8a	f	2016-03-07 09:24:18	2016-03-07 09:24:18	Submitted an iteration	\N	\N
118	20	elixir	triangle	1	\N	2015-12-29 10:02:19	2015-12-29 10:02:19	1e3fbac483651532ac8a778c	f	2016-03-11 15:05:49	2016-03-11 15:05:49	Submitted an iteration	2015-11-06 18:43:25.600033	\N
119	20	javascript	beer-song	5	done	2016-01-15 00:15:46	2016-01-15 00:15:46	3993dd82ef14803131f64b30	t	2016-02-25 07:06:09	2016-02-25 07:06:09	Submitted an iteration	\N	\N
120	20	javascript	leap	2	\N	2016-01-18 23:03:24	2016-01-18 23:03:24	a0b326f1a570adb80f41d734	f	2016-03-16 15:19:56	2016-03-16 15:19:56	@BorjaL commented	2015-10-16 02:41:37.097145	\N
121	20	ruby	binary	1	\N	2015-12-28 06:27:53	2015-12-28 06:27:53	3e1a66f1616c44757752d689	f	2016-03-19 01:45:09	2016-03-19 01:45:09	Submitted an iteration	2015-12-08 10:27:35.351315	\N
122	20	javascript	hello-world	1	\N	2015-12-19 11:03:41	2015-12-19 11:03:41	0cb710f91ab5063ac247a151	f	2016-02-27 03:04:19	2016-02-27 03:04:19	Submitted an iteration	\N	\N
123	21	cpp	food-chain	1	hibernating	2015-11-02 15:39:22	2015-11-02 15:39:22	3fb1e677fd47e87b5a701e55	f	2016-02-11 03:17:50	2016-02-11 03:17:50	Submitted an iteration	\N	\N
124	36	scheme	grains	1	\N	2015-11-03 09:09:12	2015-11-03 09:09:12	252e6cfedd142945ef475f2b	f	2015-11-12 19:24:09	2015-11-12 19:24:09	@nebkor commented	2015-11-24 20:14:49.153474	\N
125	36	python	ocr-numbers	1	pending	2016-01-03 20:47:32	2016-01-03 20:47:32	709ae48cb3811321ec467eca	t	2016-02-15 17:49:37	2016-02-15 17:49:37	Submitted an iteration	\N	\N
126	30	ruby	etl	1	pending	2016-03-22 12:34:39	2016-03-22 12:34:39	9cc470c4da2040f2d7df92f2	t	2016-03-25 02:58:01	2016-03-25 02:58:01	Submitted an iteration	\N	\N
127	30	clojure	rna-transcription	2	hibernating	2016-03-19 07:47:52	2016-03-19 07:47:52	7c6da3987f47f78f71af3bac	f	2016-03-25 03:42:08	2016-03-25 03:42:08	Submitted an iteration	\N	\N
128	30	csharp	nucleotide-count	2	hibernating	2016-03-19 00:05:37	2016-03-19 00:05:37	c4875da2b7ae11f87d31912c	f	2016-03-27 14:17:17	2016-03-27 14:17:17	Submitted an iteration	\N	\N
129	30	python	meetup	1	\N	2016-03-23 07:05:00	2016-03-23 07:05:00	9d3af82db969cb4f7f7fa0d8	f	2016-03-24 23:24:02	2016-03-24 23:24:02	@JamesBTaylor commented	2015-10-19 20:20:33.185541	\N
130	35	python	leap	2	done	2015-11-24 07:12:31	2015-11-24 07:12:31	5fd46115bc2a275c30e2a228	t	2016-02-21 16:56:49	2016-02-21 16:56:49	Submitted an iteration	\N	\N
131	14	elixir	bob	1	hibernating	2016-03-26 17:36:17	2016-03-26 17:36:17	4f9b5d84e9bdc7fa13eea60a	f	2016-03-26 21:34:11	2016-03-26 21:34:11	Submitted an iteration	\N	\N
132	14	python	hello-world	1	pending	2016-03-25 22:56:47	2016-03-25 22:56:47	1c964552c1811744cb1b3055	f	2016-03-27 04:13:29	2016-03-27 04:13:29	Submitted an iteration	\N	\N
133	14	ruby	hello-world	1	\N	2016-03-25 10:28:04	2016-03-25 10:28:04	06a12f421c0c40ae70522c9e	f	2016-03-27 15:34:41	2016-03-27 15:34:41	Submitted an iteration	2015-09-29 17:21:10.23106	\N
134	14	ruby	bob	8	done	2016-03-25 07:42:15	2016-03-25 07:42:15	06f613469925989ec21829a5	t	2016-03-27 10:27:06	2016-03-27 10:27:06	Submitted an iteration	\N	\N
135	14	python	leap	1	pending	2016-03-25 12:14:41	2016-03-25 12:14:41	15779e31ceec55f31e2a6aae	f	2016-03-26 09:06:06	2016-03-26 09:06:06	Submitted an iteration	\N	\N
136	14	ruby	anagram	2	done	2016-03-26 14:25:55	2016-03-26 14:25:55	5596401a6ced51a2b3c6dbd9	t	2016-03-27 01:54:53	2016-03-27 01:54:53	Submitted an iteration	\N	\N
137	14	python	roman-numerals	1	\N	2016-03-25 09:59:44	2016-03-25 09:59:44	52a7c0e6bbf86eb4d3fccaf0	f	2016-03-26 19:23:37	2016-03-26 19:23:37	Submitted an iteration	2015-11-14 18:42:34.533623	\N
138	14	python	word-count	1	pending	2016-03-25 21:14:52	2016-03-25 21:14:52	06e185b66834394bbe3dfdea	f	2016-03-26 11:46:54	2016-03-26 11:46:54	Submitted an iteration	\N	\N
139	14	csharp	strain	2	pending	2016-03-25 15:23:48	2016-03-25 15:23:48	daabc9fd37712b220593fc58	f	2016-03-27 13:30:33	2016-03-27 13:30:33	Submitted an iteration	\N	\N
140	14	rust	leap	2	\N	2016-03-25 19:35:04	2016-03-25 19:35:04	68735bcbe8b58aff9d5ffe45	f	2016-03-26 19:22:48	2016-03-26 19:22:48	@NikolayGenov commented	2015-10-01 21:27:56.867922	\N
141	14	clojure	bob	1	\N	2016-03-25 16:10:51	2016-03-25 16:10:51	1c0be1c0d275f67dacc0d3ea	f	2016-03-26 02:22:20	2016-03-26 02:22:20	Submitted an iteration	2016-02-01 15:29:18.463339	\N
142	14	python	space-age	1	pending	2016-03-27 08:35:11	2016-03-27 08:35:11	3863896b2491f0f895be901d	f	2016-03-27 08:45:06	2016-03-27 08:45:06	Submitted an iteration	\N	\N
143	14	javascript	leap	3	\N	2016-03-26 08:35:28	2016-03-26 08:35:28	1da4c8e29f9ed1a99c2937a1	f	2016-03-27 05:38:02	2016-03-27 05:38:02	@StevenACoffman commented	2015-10-30 20:10:29.989831	\N
144	14	python	sieve	1	pending	2016-03-25 16:21:55	2016-03-25 16:21:55	605dcd2a0aaaf2432dfa7099	f	2016-03-26 17:13:22	2016-03-26 17:13:22	Submitted an iteration	\N	\N
145	14	haskell	meetup	1	\N	2016-03-26 03:29:18	2016-03-26 03:29:18	05faa37e7bc0cdc01d2224c2	f	2016-03-27 14:35:01	2016-03-27 14:35:01	Submitted an iteration	2015-10-19 08:23:36.421703	\N
146	14	scala	phone-number	1	\N	2016-03-26 03:10:48	2016-03-26 03:10:48	92b84fa0940fa991c2058f50	f	2016-03-26 18:00:37	2016-03-26 18:00:37	Submitted an iteration	2015-11-25 12:23:42.623398	\N
147	14	lisp	grains	1	hibernating	2016-03-25 10:01:48	2016-03-25 10:01:48	fe60f7e8bd6ac9addec31cd3	f	2016-03-26 08:17:37	2016-03-26 08:17:37	Submitted an iteration	\N	\N
148	14	go	hello-world	1	\N	2016-03-26 17:30:43	2016-03-26 17:30:43	ed9b8685faf2313082bb59a5	f	2016-03-27 04:56:51	2016-03-27 04:56:51	@rikki- commented	\N	\N
149	14	javascript	word-count	1	pending	2016-03-26 04:09:53	2016-03-26 04:09:53	5248442cb80e6ba9d13fa3ff	f	2016-03-26 04:29:42	2016-03-26 04:29:42	Submitted an iteration	\N	\N
150	14	coffeescript	word-count	1	done	2016-03-26 06:01:55	2016-03-26 06:01:55	8994af5aca20fa85ed9942ac	t	2016-03-27 15:09:22	2016-03-27 15:09:22	Submitted an iteration	\N	\N
151	14	go	raindrops	2	\N	2016-03-26 08:21:21	2016-03-26 08:21:21	0cc72428def6432114cab5a7	f	2016-03-27 10:14:41	2016-03-27 10:14:41	Submitted an iteration	2015-12-04 11:40:47.400745	\N
152	14	javascript	beer-song	1	pending	2016-03-25 23:54:37	2016-03-25 23:54:37	0324b5b7a0c34431464f4381	f	2016-03-27 09:57:10	2016-03-27 09:57:10	@machikoyasuda commented	\N	\N
153	14	ruby	prime-factors	1	pending	2016-03-25 13:52:09	2016-03-25 13:52:09	0815a0932f05c5a09517c043	f	2016-03-26 12:50:58	2016-03-26 12:50:58	Submitted an iteration	\N	\N
154	14	python	anagram	1	hibernating	2016-03-25 20:30:42	2016-03-25 20:30:42	6a4707705368e9ff1e44bbcc	f	2016-03-26 08:43:24	2016-03-26 08:43:24	Submitted an iteration	\N	\N
155	14	go	gigasecond	1	done	2016-03-25 12:54:30	2016-03-25 12:54:30	5adaa702927bdb4522154fb7	t	2016-03-26 14:51:03	2016-03-26 14:51:03	Submitted an iteration	\N	\N
156	14	clojure	rna-transcription	1	pending	2016-03-25 10:45:09	2016-03-25 10:45:09	29c67f23ff2b850daeaa601f	f	2016-03-26 11:17:34	2016-03-26 11:17:34	Submitted an iteration	\N	\N
157	14	scala	hexadecimal	1	pending	2016-03-26 14:15:15	2016-03-26 14:15:15	d0980195fb0085b996c91c31	f	2016-03-27 10:38:41	2016-03-27 10:38:41	Submitted an iteration	\N	\N
158	14	haskell	triangle	1	\N	2016-03-26 16:06:27	2016-03-26 16:06:27	2e862431cc6de8a95f20894d	f	2016-03-26 17:54:56	2016-03-26 17:54:56	Submitted an iteration	2016-02-03 21:58:02.399539	\N
159	14	python	grains	1	\N	2016-03-26 10:17:34	2016-03-26 10:17:34	b153f3c1cf4a780841565fe3	f	2016-03-27 05:51:42	2016-03-27 05:51:42	Submitted an iteration	\N	\N
160	14	scala	bob	1	\N	2016-03-26 01:36:43	2016-03-26 01:36:43	892346fc9209ac54a84d9e71	f	2016-03-26 03:47:46	2016-03-26 03:47:46	Submitted an iteration	\N	\N
161	14	ruby	word-count	1	pending	2016-03-26 03:37:41	2016-03-26 03:37:41	298a4a25cb5a32ba5fb1c0f1	f	2016-03-27 02:48:42	2016-03-27 02:48:42	Submitted an iteration	\N	\N
162	14	haskell	nucleotide-count	1	pending	2016-03-25 07:30:07	2016-03-25 07:30:07	95e2a2e085f0aec731e31216	f	2016-03-26 16:34:46	2016-03-26 16:34:46	Submitted an iteration	\N	\N
163	14	javascript	hamming	1	pending	2016-03-25 13:48:51	2016-03-25 13:48:51	0087d957db9fc1c3cae20adb	f	2016-03-27 11:26:54	2016-03-27 11:26:54	Submitted an iteration	\N	\N
164	14	csharp	anagram	1	\N	2016-03-26 06:34:24	2016-03-26 06:34:24	8e05f17009c2aea43fe5fbe3	f	2016-03-27 13:59:27	2016-03-27 13:59:27	Submitted an iteration	2016-01-03 03:23:21.585101	\N
165	14	javascript	rna-transcription	3	\N	2016-03-26 13:29:28	2016-03-26 13:29:28	f6a25dff95d2c2a73db6b741	f	2016-03-27 14:09:55	2016-03-27 14:09:55	@tgillus commented	2015-12-03 20:41:07.355863	\N
166	14	elixir	sublist	1	pending	2016-03-25 17:46:17	2016-03-25 17:46:17	1b9942087f03fd58fec94e6e	f	2016-03-26 19:53:28	2016-03-26 19:53:28	Submitted an iteration	\N	\N
167	14	python	bob	1	pending	2016-03-25 18:29:28	2016-03-25 18:29:28	68ca0f2b714fe98143c6139f	f	2016-03-27 07:14:56	2016-03-27 07:14:56	Submitted an iteration	\N	\N
168	41	javascript	word-count	1	\N	2016-01-18 17:04:25	2016-01-18 17:04:25	191bddb0996f458bb33df9fa	f	2016-02-05 02:38:03	2016-02-05 02:38:03	Submitted an iteration	2015-09-23 04:42:24.028684	\N
169	41	haskell	rna-transcription	1	pending	2015-11-23 20:32:43	2015-11-23 20:32:43	44199f9aa92559cdb03453f1	f	2015-12-25 00:31:28	2015-12-25 00:31:28	Submitted an iteration	\N	\N
170	41	javascript	food-chain	1	\N	2015-10-03 22:37:20	2015-10-03 22:37:20	0aa8475518f0ef619fa4ef81	f	2015-11-30 07:31:57	2015-11-30 07:31:57	Submitted an iteration	\N	\N
171	41	clojure	bob	3	done	2015-09-23 20:13:19	2015-09-23 20:13:19	4259c4644cf1b7966c810b58	t	2015-12-29 23:37:15	2015-12-29 23:37:15	Submitted an iteration	\N	\N
172	41	ruby	bob	10	done	2015-09-22 07:21:47	2015-09-22 07:21:47	6e2e8f67212e6f2c03146db2	t	2016-03-14 20:43:43	2016-03-14 20:43:43	Submitted an iteration	\N	\N
173	41	python	rna-transcription	1	pending	2015-10-23 15:35:15	2015-10-23 15:35:15	7f290e546d9945c71babdb37	f	2015-12-19 22:01:29	2015-12-19 22:01:29	Submitted an iteration	\N	\N
174	6	python	hamming	1	pending	2016-03-06 03:25:11	2016-03-06 03:25:11	06ad698237b7418ba27d1d49	f	2016-03-20 08:15:19	2016-03-20 08:15:19	Submitted an iteration	\N	\N
175	6	ruby	gigasecond	1	pending	2015-11-14 23:05:09	2015-11-14 23:05:09	3f1ee8b06d7d60112f3a2d25	f	2016-01-26 16:45:06	2016-01-26 16:45:06	Submitted an iteration	\N	\N
176	6	python	word-count	1	\N	2015-12-03 11:18:19	2015-12-03 11:18:19	adc914e13af12d39544139e9	f	2015-12-14 03:48:59	2015-12-14 03:48:59	Submitted an iteration	2016-02-14 06:01:32.649552	\N
177	6	scala	hamming	1	hibernating	2016-02-17 21:38:55	2016-02-17 21:38:55	b0e7cbbfe9867cf125c1b94f	f	2016-03-20 12:32:42	2016-03-20 12:32:42	Submitted an iteration	\N	\N
178	6	scala	wordy	1	done	2016-02-01 10:55:37	2016-02-01 10:55:37	47c374d5b9e13f2576e4179d	f	2016-02-02 23:52:04	2016-02-02 23:52:04	Submitted an iteration	\N	\N
179	6	ruby	trinary	1	\N	2016-02-28 06:20:47	2016-02-28 06:20:47	db69643cf8558da27c848129	f	2016-03-04 16:59:58	2016-03-04 16:59:58	Submitted an iteration	2016-01-08 01:56:08.923813	\N
180	34	java	hamming	1	pending	2015-10-08 11:49:11	2015-10-08 11:49:11	1bcf4990d97145f35e1894de	f	2016-02-24 15:22:42	2016-02-24 15:22:42	Submitted an iteration	\N	\N
181	16	python	word-count	1	done	2015-12-10 12:29:32	2015-12-10 12:29:32	9582b7dbd9f97a7fb531ca38	t	2016-02-05 21:25:17	2016-02-05 21:25:17	Submitted an iteration	\N	\N
182	16	scala	hamming	1	done	2015-11-19 02:40:16	2015-11-19 02:40:16	7aa52e96aa40fba8d6038080	t	2016-01-29 16:44:51	2016-01-29 16:44:51	Submitted an iteration	\N	\N
183	16	ruby	binary	1	\N	2015-12-30 06:48:27	2015-12-30 06:48:27	5575c40db1a011209460bd7d	f	2016-01-18 03:05:01	2016-01-18 03:05:01	@Calvyn82 commented	\N	\N
184	16	rust	hello-world	1	\N	2015-12-17 06:19:31	2015-12-17 06:19:31	b9af1024ddae39a8248658a1	f	2016-03-07 22:55:52	2016-03-07 22:55:52	@rikki- commented	\N	\N
185	16	haskell	grade-school	1	\N	2015-11-04 12:07:07	2015-11-04 12:07:07	dc886f64fc0f94f79ef7e42b	f	2015-11-29 15:57:57	2015-11-29 15:57:57	Submitted an iteration	2016-02-24 05:49:14.812936	\N
186	18	ruby	rna-transcription	1	hibernating	2015-07-18 09:37:27	2015-07-18 09:37:27	683574d97a306a443460b15e	f	2015-08-15 22:10:28	2015-08-15 22:10:28	Submitted an iteration	\N	\N
187	18	ruby	bob	1	pending	2015-12-30 09:03:34	2015-12-30 09:03:34	117133f5e4a6306a5744217a	f	2016-02-16 11:58:17	2016-02-16 11:58:17	Submitted an iteration	\N	\N
188	18	python	hamming	1	done	2015-09-26 05:35:58	2015-09-26 05:35:58	1cdda6132b0ed1baff32faa2	t	2016-02-28 23:54:11	2016-02-28 23:54:11	Submitted an iteration	\N	\N
189	18	ruby	phone-number	2	done	2015-09-10 11:27:18	2015-09-10 11:27:18	ad43edb41187bffbbc6691c7	t	2016-03-22 08:57:18	2016-03-22 08:57:18	Submitted an iteration	\N	\N
190	18	ruby	hello-world	1	pending	2015-11-21 19:09:45	2015-11-21 19:09:45	448f785f8c9bc96f33b0feca	f	2015-11-27 14:14:24	2015-11-27 14:14:24	Submitted an iteration	\N	\N
191	24	haskell	phone-number	3	done	2015-11-14 00:08:32	2015-11-14 00:08:32	6d40a8b620bb914a33f8dbf1	t	2016-03-03 13:47:37	2016-03-03 13:47:37	Submitted an iteration	\N	\N
192	24	javascript	food-chain	1	pending	2015-11-13 14:41:34	2015-11-13 14:41:34	aeedda6f302c45aca3b235ba	f	2015-11-30 17:28:46	2015-11-30 17:28:46	Submitted an iteration	\N	\N
193	24	elixir	nucleotide-count	1	pending	2015-11-19 02:11:00	2015-11-19 02:11:00	a9437398e5d1731556c02a4a	f	2015-12-22 07:25:10	2015-12-22 07:25:10	Submitted an iteration	\N	\N
194	42	swift	etl	3	done	2015-08-25 18:34:20	2015-08-25 18:34:20	6eb2ab14ce037bc022fcfdb6	t	2016-03-25 11:27:34	2016-03-25 11:27:34	Submitted an iteration	\N	\N
195	42	ruby	gigasecond	1	pending	2015-10-26 23:10:19	2015-10-26 23:10:19	9be350958f7d8dbd8c2681c2	f	2016-01-01 13:53:30	2016-01-01 13:53:30	Submitted an iteration	\N	\N
196	27	csharp	pig-latin	1	done	2015-11-26 19:31:45	2015-11-26 19:31:45	664f6fbcabe24afbfd7dd34d	t	2016-03-06 06:44:08	2016-03-06 06:44:08	Submitted an iteration	\N	\N
197	45	php	bowling	2	done	2016-02-24 04:08:26	2016-02-24 04:08:26	4bb7d3fea92d84c7bbac598f	t	2016-03-21 02:28:19	2016-03-21 02:28:19	Submitted an iteration	\N	\N
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 197, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, created_at, updated_at, onboarded_at, track_mentor, joined_as, api_secret, api_key, share_key) FROM stdin;
1	rikki-	rikki-@example.com	https://avatars.githubusercontent.com/u/8341419	8341419	yzk746	2016-03-11 21:48:55.547679	2016-03-11 21:48:55.547679	\N	--- []\n	\N	\N	\N	\N
6	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/axel/128.jpg	-47609	kiz913	2015-09-08 07:33:54.589793	2015-09-08 07:33:54.589793	\N	--- []\n	\N	\N	\N	\N
7	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg	-13026	itx693	2015-12-11 04:31:31.59416	2015-12-11 04:31:31.59416	\N	--- []\n	\N	\N	\N	\N
8	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg	-84654	kss778	2016-01-31 18:08:08.605544	2016-01-31 18:08:08.605544	\N	--- []\n	\N	\N	\N	\N
10	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/erikdkennedy/128.jpg	-2678	kdr905	2016-02-18 06:00:42.612715	2016-02-18 06:00:42.612715	\N	--- []\n	\N	\N	\N	\N
13	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/Stievius/128.jpg	-35088	lck140	2016-03-14 19:56:46.619503	2016-03-14 19:56:46.619503	\N	--- []\n	\N	\N	\N	\N
14	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg	-73637	sug359	2016-03-25 07:29:49.621302	2016-03-25 07:29:49.621302	\N	--- []\n	\N	\N	\N	\N
16	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg	-39131	qke586	2015-09-24 09:43:45.627688	2015-09-24 09:43:45.627688	\N	--- []\n	\N	\N	\N	\N
17	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg	-28669	bqu178	2015-12-10 22:06:42.631067	2015-12-10 22:06:42.631067	\N	--- []\n	\N	\N	\N	\N
18	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg	-6635	bsf466	2015-07-10 19:27:57.634042	2015-07-10 19:27:57.634042	\N	--- []\n	\N	\N	\N	\N
19	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg	-97993	kkb584	2016-02-27 23:33:10.637032	2016-02-27 23:33:10.637032	\N	--- []\n	\N	\N	\N	\N
20	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg	-72038	mtr119	2015-12-10 20:33:22.640468	2015-12-10 20:33:22.640468	\N	--- []\n	\N	\N	\N	\N
21	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg	-52547	pee458	2015-10-12 07:45:54.644315	2015-10-12 07:45:54.644315	\N	--- []\n	\N	\N	\N	\N
23	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/arnel_lenteria/128.jpg	-37989	jcc321	2016-01-01 17:40:36.651246	2016-01-01 17:40:36.651246	\N	--- []\n	\N	\N	\N	\N
24	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg	-31100	syb756	2015-07-09 18:32:26.654333	2015-07-09 18:32:26.654333	\N	--- []\n	\N	\N	\N	\N
25	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg	-72877	qks425	2015-10-23 10:42:24.657139	2015-10-23 10:42:24.657139	\N	--- []\n	\N	\N	\N	\N
26	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg	-50882	cbf593	2015-10-19 10:39:50.660365	2015-10-19 10:39:50.660365	\N	--- []\n	\N	\N	\N	\N
27	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg	-4725	uff987	2015-07-31 02:31:13.663796	2015-07-31 02:31:13.663796	\N	--- []\n	\N	\N	\N	\N
30	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg	-28782	shw669	2016-03-18 15:05:19.671834	2016-03-18 15:05:19.671834	\N	--- []\n	\N	\N	\N	\N
32	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg	-38867	ydf740	2015-08-24 16:32:12.677566	2015-08-24 16:32:12.677566	\N	--- []\n	\N	\N	\N	\N
34	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ripplemdk/128.jpg	-2651	uup267	2015-08-02 14:02:42.683826	2015-08-02 14:02:42.683826	\N	--- []\n	\N	\N	\N	\N
35	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ruzinav/128.jpg	-64050	wwv514	2015-11-19 18:05:40.686476	2015-11-19 18:05:40.686476	\N	--- []\n	\N	\N	\N	\N
36	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg	-5665	gag328	2015-09-15 05:43:42.68913	2015-09-15 05:43:42.68913	\N	--- []\n	\N	\N	\N	\N
37	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg	-86441	bcn423	2016-01-03 16:35:24.691906	2016-01-03 16:35:24.691906	\N	--- []\n	\N	\N	\N	\N
39	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg	-24850	zdi547	2015-08-13 00:54:13.6981	2015-08-13 00:54:13.6981	\N	--- []\n	\N	\N	\N	\N
41	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg	-97804	ual561	2015-09-19 15:00:34.703182	2015-09-19 15:00:34.703182	\N	--- []\n	\N	\N	\N	\N
42	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jedbridges/128.jpg	-79094	gkq406	2015-08-17 16:31:47.705871	2015-08-17 16:31:47.705871	\N	--- []\n	\N	\N	\N	\N
43	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg	-76732	prc990	2015-07-30 12:08:55.70842	2015-07-30 12:08:55.70842	\N	--- []\n	\N	\N	\N	\N
45	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg	-55715	phr102	2016-02-16 13:26:09.716395	2016-02-16 13:26:09.716395	\N	--- []\n	\N	\N	\N	\N
47	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg	-78442	lbm810	2015-10-11 09:14:20.72308	2015-10-11 09:14:20.72308	\N	--- []\n	\N	\N	\N	\N
5	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/chadengle/128.jpg	-44381	ews780	2015-12-04 19:00:27.587539	2015-12-04 19:00:27.587539	2016-01-10 20:45:13	---\n- python\n	\N	\N	\N	\N
46	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg	-72740	sgd305	2015-10-26 19:22:16.720121	2015-10-26 19:22:16.720121	2016-01-08 00:42:08	--- []\n	\N	\N	\N	\N
28	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg	-80480	ztw336	2016-03-24 01:20:57.666764	2016-03-24 01:20:57.666764	2016-01-01 09:20:45	--- []\n	\N	\N	\N	\N
29	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg	-60296	vlm867	2016-03-18 07:24:14.669281	2016-03-18 07:24:14.669281	2016-01-03 21:53:35	--- []\n	\N	\N	\N	\N
38	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/scottkclark/128.jpg	-25278	tjo393	2016-03-19 04:49:29.695353	2016-03-19 04:49:29.695353	2015-12-11 18:34:29	--- []\n	\N	\N	\N	\N
49	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg	-62733	rju352	2016-02-27 04:04:36.730351	2016-02-27 04:04:36.730351	\N	--- []\n	\N	\N	\N	\N
40	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg	-46717	waw483	2016-01-07 03:09:23.700197	2016-01-07 03:09:23.700197	2016-01-02 16:45:28	--- []\n	\N	\N	\N	\N
12	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg	-22523	zha967	2016-01-04 16:22:04.616966	2016-01-04 16:22:04.616966	2015-12-29 09:53:01	--- []\n	\N	\N	\N	\N
44	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg	-42454	xfj466	2015-10-31 05:10:24.712156	2015-10-31 05:10:24.712156	2016-01-03 08:42:47	--- []\n	\N	\N	\N	\N
48	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg	-21923	mox149	2015-08-17 11:54:29.724993	2015-08-17 11:54:29.724993	2015-12-18 03:16:57	--- []\n	\N	\N	\N	\N
31	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg	-17563	gqs376	2015-12-17 03:17:13.674377	2015-12-17 03:17:13.674377	2016-01-14 12:27:12	--- []\n	\N	\N	\N	\N
3	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg	-44094	pkd444	2015-12-23 06:24:50.582113	2015-12-23 06:24:50.582113	2016-01-04 23:36:24	---\n- ruby\n- haskell\n	\N	\N	\N	\N
9	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg	-32156	sia468	2015-12-20 20:19:15.610098	2015-12-20 20:19:15.610098	2016-01-06 05:01:35	--- []\n	\N	\N	\N	\N
15	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg	-68615	unk168	2015-10-11 16:23:28.624159	2015-10-11 16:23:28.624159	2015-11-24 10:46:53	--- []\n	\N	\N	\N	\N
11	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/teclaro/128.jpg	-54767	gud220	2015-12-17 02:26:54.614399	2015-12-17 02:26:54.614399	2015-12-22 21:19:17	--- []\n	\N	\N	\N	\N
22	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/boxmodel/128.jpg	-67388	axw685	2015-12-03 22:06:02.648414	2015-12-03 22:06:02.648414	2016-01-09 11:53:33	--- []\n	\N	\N	\N	\N
4	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg	-85512	ooc418	2015-10-10 20:14:28.585262	2015-10-10 20:14:28.585262	2016-01-02 10:15:49	---\n- javascript\n- erlang\n- elixir\n	\N	\N	\N	\N
2	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg	-57629	bnl669	2016-02-07 15:47:25.577286	2016-02-07 15:47:25.577286	2015-12-26 12:17:52	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	\N	\N	\N	\N
33	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg	-83837	aly930	2015-07-28 17:21:13.680899	2015-07-28 17:21:13.680899	2015-12-23 21:48:50	--- []\n	\N	\N	\N	\N
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 49, true);


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY views (id, user_id, exercise_id, last_viewed_at, created_at, updated_at) FROM stdin;
\.


--
-- Name: views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('views_id_seq', 1, false);


--
-- PostgreSQL database dump complete
--

