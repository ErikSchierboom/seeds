--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.3
-- Dumped by pg_dump version 9.5.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

SET search_path = public, pg_catalog;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY acls (id, user_id, language, slug, created_at, updated_at) FROM stdin;
1	9	python	gigasecond	2016-06-30 01:32:26	2016-06-30 01:32:26
2	9	scala	allergies	2016-05-23 06:51:29	2016-05-23 06:51:29
5	9	python	word-count	2016-06-14 11:27:17	2016-06-14 11:27:17
6	9	javascript	anagram	2016-05-21 14:09:36	2016-05-21 14:09:36
7	9	csharp	bob	2016-07-04 05:17:53	2016-07-04 05:17:53
9	11	ruby	word-count	2016-07-02 09:38:07	2016-07-02 09:38:07
12	11	ruby	gigasecond	2016-07-21 10:07:12	2016-07-21 10:07:12
13	11	python	minesweeper	2016-07-17 02:06:08	2016-07-17 02:06:08
14	11	scala	leap	2016-07-23 11:40:01	2016-07-23 11:40:01
15	11	clojure	rna-transcription	2016-07-08 21:29:47	2016-07-08 21:29:47
17	11	haskell	rna-transcription	2016-06-30 11:07:24	2016-06-30 11:07:24
18	11	python	allergies	2016-07-05 22:20:51	2016-07-05 22:20:51
20	12	ruby	robot-name	2016-07-07 18:10:18	2016-07-07 18:10:18
21	12	ruby	series	2016-08-04 22:25:38	2016-08-04 22:25:38
22	12	python	kindergarten-garden	2016-07-30 16:37:35	2016-07-30 16:37:35
23	15	lua	rna-transcription	2016-07-23 19:20:46	2016-07-23 19:20:46
26	15	javascript	kindergarten-garden	2016-08-03 21:10:10	2016-08-03 21:10:10
28	15	javascript	gigasecond	2016-07-19 11:43:22	2016-07-19 11:43:22
29	15	ruby	difference-of-squares	2016-07-25 18:35:34	2016-07-25 18:35:34
31	15	python	word-count	2016-07-24 23:59:39	2016-07-24 23:59:39
32	15	python	series	2016-08-03 13:37:20	2016-08-03 13:37:20
34	22	javascript	anagram	2016-04-19 19:38:57	2016-04-19 19:38:57
35	22	coffeescript	word-count	2016-02-27 03:35:51	2016-02-27 03:35:51
36	22	elixir	sublist	2016-06-06 06:23:52	2016-06-06 06:23:52
37	22	python	difference-of-squares	2016-05-01 05:51:53	2016-05-01 05:51:53
38	22	objective-c	word-count	2016-05-04 04:50:57	2016-05-04 04:50:57
39	22	ruby	beer-song	2016-02-27 15:04:15	2016-02-27 15:04:15
44	22	javascript	raindrops	2016-05-09 19:45:29	2016-05-09 19:45:29
45	22	ruby	gigasecond	2016-04-20 04:11:45	2016-04-20 04:11:45
46	22	python	pangram	2016-04-13 11:26:31	2016-04-13 11:26:31
47	22	python	hamming	2016-03-07 15:01:19	2016-03-07 15:01:19
48	22	ruby	secret-handshake	2016-04-27 05:52:15	2016-04-27 05:52:15
52	22	scala	bob	2016-04-24 03:58:00	2016-04-24 03:58:00
53	22	elixir	hello-world	2016-05-17 16:07:13	2016-05-17 16:07:13
54	22	ruby	matrix	2016-03-26 08:18:23	2016-03-26 08:18:23
55	22	python	hello-world	2016-04-02 05:28:38	2016-04-02 05:28:38
56	22	cpp	hamming	2016-03-18 05:10:20	2016-03-18 05:10:20
58	22	ruby	strain	2016-04-25 08:50:31	2016-04-25 08:50:31
59	22	perl5	etl	2016-02-27 10:41:31	2016-02-27 10:41:31
60	22	ruby	simple-cipher	2016-03-02 07:48:28	2016-03-02 07:48:28
61	22	clojure	word-count	2016-03-05 09:02:58	2016-03-05 09:02:58
62	22	javascript	space-age	2016-06-25 10:56:28	2016-06-25 10:56:28
63	22	ruby	binary	2016-02-27 13:50:54	2016-02-27 13:50:54
65	22	ruby	hello-world	2016-03-10 04:53:52	2016-03-10 04:53:52
66	22	csharp	triangle	2016-06-08 06:18:43	2016-06-08 06:18:43
67	22	csharp	roman-numerals	2016-03-08 12:58:45	2016-03-08 12:58:45
68	22	ruby	leap	2016-04-26 21:16:57	2016-04-26 21:16:57
69	28	go	gigasecond	2016-06-26 13:13:46	2016-06-26 13:13:46
71	28	ruby	binary	2016-06-25 12:59:47	2016-06-25 12:59:47
72	29	perl5	bob	2016-07-20 00:34:22	2016-07-20 00:34:22
73	31	python	hamming	2015-12-31 00:17:10	2015-12-31 00:17:10
75	31	javascript	hello-world	2016-01-14 04:41:09	2016-01-14 04:41:09
76	33	ruby	word-count	2016-04-29 06:56:04	2016-04-29 06:56:04
77	33	java	etl	2016-05-01 14:07:56	2016-05-01 14:07:56
78	33	javascript	hamming	2016-05-10 08:52:26	2016-05-10 08:52:26
80	33	elixir	hello-world	2016-05-03 12:38:16	2016-05-03 12:38:16
81	38	clojure	word-count	2016-05-23 22:21:01	2016-05-23 22:21:01
83	38	clojure	beer-song	2016-03-13 04:56:28	2016-03-13 04:56:28
88	38	haskell	crypto-square	2016-06-26 07:42:09	2016-06-26 07:42:09
89	38	javascript	hello-world	2016-05-24 16:03:08	2016-05-24 16:03:08
90	38	cpp	word-count	2016-03-28 03:15:43	2016-03-28 03:15:43
94	38	objective-c	word-count	2016-03-18 11:26:06	2016-03-18 11:26:06
95	38	ruby	raindrops	2016-02-27 09:42:27	2016-02-27 09:42:27
96	40	haskell	gigasecond	2016-06-18 06:31:29	2016-06-18 06:31:29
98	40	ruby	binary	2016-03-26 17:13:15	2016-03-26 17:13:15
99	40	haskell	scrabble-score	2016-05-24 23:40:07	2016-05-24 23:40:07
101	40	elixir	sublist	2016-03-26 17:07:15	2016-03-26 17:07:15
102	40	ruby	raindrops	2016-03-25 06:57:16	2016-03-25 06:57:16
103	40	javascript	kindergarten-garden	2016-05-20 04:38:05	2016-05-20 04:38:05
105	40	ruby	word-count	2016-05-05 11:36:40	2016-05-05 11:36:40
109	40	python	space-age	2016-05-18 12:12:56	2016-05-18 12:12:56
110	40	clojure	beer-song	2016-02-22 14:00:09	2016-02-22 14:00:09
448	18	cpp	hamming	2016-07-13 04:36:53	2016-07-13 04:36:53
115	40	python	word-count	2016-05-29 04:38:16	2016-05-29 04:38:16
116	40	javascript	hamming	2016-03-25 00:55:03	2016-03-25 00:55:03
117	40	ruby	hamming	2016-04-25 07:52:29	2016-04-25 07:52:29
118	40	cpp	word-count	2016-02-23 17:17:01	2016-02-23 17:17:01
119	40	elixir	word-count	2016-04-08 12:09:11	2016-04-08 12:09:11
121	40	javascript	raindrops	2016-03-23 08:08:05	2016-03-23 08:08:05
122	40	ruby	kindergarten-garden	2016-03-31 19:02:51	2016-03-31 19:02:51
123	40	python	bob	2016-03-07 17:44:44	2016-03-07 17:44:44
126	40	haskell	nucleotide-count	2016-05-17 21:34:19	2016-05-17 21:34:19
131	40	python	simple-cipher	2016-04-16 09:03:30	2016-04-16 09:03:30
132	40	python	kindergarten-garden	2016-05-12 17:58:52	2016-05-12 17:58:52
133	40	objective-c	word-count	2016-03-07 22:11:14	2016-03-07 22:11:14
134	40	ruby	space-age	2016-04-28 23:02:22	2016-04-28 23:02:22
137	40	python	hello-world	2016-03-08 01:14:59	2016-03-08 01:14:59
139	44	python	leap	2016-03-01 23:13:09	2016-03-01 23:13:09
141	46	ruby	leap	2016-06-22 02:05:29	2016-06-22 02:05:29
142	46	cpp	phone-number	2016-04-08 05:16:59	2016-04-08 05:16:59
144	46	ruby	accumulate	2016-04-27 02:46:05	2016-04-27 02:46:05
146	46	python	run-length-encoding	2016-03-31 13:50:04	2016-03-31 13:50:04
148	46	ruby	word-count	2016-06-13 05:24:51	2016-06-13 05:24:51
151	46	ruby	bob	2016-04-01 17:50:36	2016-04-01 17:50:36
154	46	python	word-count	2016-05-03 23:34:25	2016-05-03 23:34:25
157	46	clojure	space-age	2016-06-24 12:31:24	2016-06-24 12:31:24
158	46	ruby	nth-prime	2016-04-02 01:54:19	2016-04-02 01:54:19
159	46	javascript	hello-world	2016-04-21 19:46:44	2016-04-21 19:46:44
160	48	elixir	sublist	2016-03-16 15:04:56	2016-03-16 15:04:56
161	48	java	nucleotide-count	2016-02-02 22:55:10	2016-02-02 22:55:10
162	48	ruby	word-count	2016-02-09 02:31:36	2016-02-09 02:31:36
166	48	swift	leap	2016-02-03 08:26:20	2016-02-03 08:26:20
167	48	ruby	meetup	2016-06-19 06:58:27	2016-06-19 06:58:27
168	48	ruby	binary	2016-02-09 01:32:20	2016-02-09 01:32:20
170	48	python	word-count	2016-04-08 10:54:41	2016-04-08 10:54:41
171	49	javascript	pythagorean-triplet	2016-06-17 00:27:02	2016-06-17 00:27:02
172	49	ecmascript	hello-world	2016-05-06 19:07:04	2016-05-06 19:07:04
173	49	haskell	clock	2016-05-08 04:27:14	2016-05-08 04:27:14
174	49	javascript	word-count	2016-03-24 00:20:55	2016-03-24 00:20:55
177	49	python	crypto-square	2016-05-22 01:19:17	2016-05-22 01:19:17
178	49	python	rna-transcription	2016-06-03 21:17:14	2016-06-03 21:17:14
179	26	clojure	bob	2016-02-13 09:28:29	2016-02-13 09:28:29
180	26	ruby	beer-song	2016-02-17 05:02:14	2016-02-17 05:02:14
185	26	haskell	word-count	2016-03-04 01:55:54	2016-03-04 01:55:54
187	26	clojure	word-count	2016-02-25 18:56:35	2016-02-25 18:56:35
189	26	python	pangram	2016-03-21 21:03:22	2016-03-21 21:03:22
190	26	haskell	space-age	2016-01-24 01:05:07	2016-01-24 01:05:07
191	26	javascript	grade-school	2016-07-04 01:17:13	2016-07-04 01:17:13
192	26	scala	bob	2016-02-22 08:51:06	2016-02-22 08:51:06
193	26	python	twelve-days	2016-01-23 17:41:57	2016-01-23 17:41:57
195	26	python	rna-transcription	2016-04-01 10:55:45	2016-04-01 10:55:45
196	26	ruby	leap	2016-01-16 22:52:37	2016-01-16 22:52:37
197	26	ruby	hello-world	2016-04-25 10:27:37	2016-04-25 10:27:37
198	26	javascript	hamming	2016-05-09 17:38:30	2016-05-09 17:38:30
199	26	haskell	nth-prime	2016-02-12 21:58:40	2016-02-12 21:58:40
200	26	go	grains	2016-02-12 02:39:19	2016-02-12 02:39:19
201	26	cpp	word-count	2016-03-19 11:36:12	2016-03-19 11:36:12
205	26	ocaml	bob	2016-04-07 04:41:03	2016-04-07 04:41:03
206	26	elixir	acronym	2016-03-31 17:10:31	2016-03-31 17:10:31
209	26	javascript	anagram	2016-01-21 00:28:54	2016-01-21 00:28:54
210	26	cpp	phone-number	2016-01-20 05:43:22	2016-01-20 05:43:22
212	26	javascript	etl	2016-02-08 11:44:03	2016-02-08 11:44:03
214	26	javascript	food-chain	2016-01-31 03:21:35	2016-01-31 03:21:35
215	26	ecmascript	hello-world	2016-05-15 23:12:29	2016-05-15 23:12:29
216	26	ruby	space-age	2016-01-18 23:34:07	2016-01-18 23:34:07
219	26	erlang	sum-of-multiples	2016-03-25 14:43:23	2016-03-25 14:43:23
220	26	csharp	bob	2016-01-29 00:27:48	2016-01-29 00:27:48
222	26	python	kindergarten-garden	2016-01-20 08:47:32	2016-01-20 08:47:32
223	26	ruby	phone-number	2016-02-04 11:29:03	2016-02-04 11:29:03
224	26	haskell	gigasecond	2016-04-23 12:48:08	2016-04-23 12:48:08
226	26	python	word-count	2016-02-26 05:48:52	2016-02-26 05:48:52
227	26	javascript	word-count	2016-02-15 05:41:07	2016-02-15 05:41:07
232	26	perl5	bob	2016-05-27 18:04:42	2016-05-27 18:04:42
233	26	python	space-age	2016-06-09 06:58:21	2016-06-09 06:58:21
234	26	php	roman-numerals	2016-01-17 11:02:14	2016-01-17 11:02:14
236	26	ruby	hamming	2016-02-08 23:05:53	2016-02-08 23:05:53
237	26	ruby	strain	2016-06-23 02:17:39	2016-06-23 02:17:39
238	26	haskell	sum-of-multiples	2016-02-28 21:10:07	2016-02-28 21:10:07
240	7	rust	anagram	2016-01-31 22:28:34	2016-01-31 22:28:34
244	7	clojure	rna-transcription	2016-03-25 11:17:40	2016-03-25 11:17:40
246	7	php	roman-numerals	2016-02-15 04:37:58	2016-02-15 04:37:58
248	7	python	series	2015-12-07 08:40:02	2015-12-07 08:40:02
250	7	python	rna-transcription	2016-01-08 12:40:42	2016-01-08 12:40:42
251	7	javascript	leap	2016-01-14 10:51:47	2016-01-14 10:51:47
252	7	ruby	gigasecond	2015-12-27 10:18:49	2015-12-27 10:18:49
253	7	ruby	raindrops	2016-01-02 22:47:57	2016-01-02 22:47:57
259	7	javascript	hello-world	2015-12-11 03:51:30	2015-12-11 03:51:30
260	7	haskell	difference-of-squares	2016-01-08 07:15:20	2016-01-08 07:15:20
263	7	ruby	secret-handshake	2016-02-17 09:09:20	2016-02-17 09:09:20
267	7	javascript	word-count	2015-12-05 22:49:56	2015-12-05 22:49:56
272	7	cpp	phone-number	2016-03-27 14:56:19	2016-03-27 14:56:19
274	7	javascript	hamming	2016-04-08 15:04:44	2016-04-08 15:04:44
275	7	python	leap	2016-01-21 10:12:40	2016-01-21 10:12:40
277	7	cpp	etl	2016-01-17 14:07:23	2016-01-17 14:07:23
279	7	javascript	gigasecond	2016-01-02 01:32:56	2016-01-02 01:32:56
280	7	elixir	word-count	2016-01-26 17:30:10	2016-01-26 17:30:10
281	7	javascript	food-chain	2016-04-04 14:37:02	2016-04-04 14:37:02
282	7	ruby	hamming	2016-01-01 01:14:33	2016-01-01 01:14:33
284	7	elixir	hello-world	2016-02-08 22:37:18	2016-02-08 22:37:18
285	7	perl5	bob	2016-01-16 01:46:30	2016-01-16 01:46:30
286	7	javascript	bob	2016-02-03 19:28:02	2016-02-03 19:28:02
287	7	ruby	beer-song	2016-01-02 02:16:24	2016-01-02 02:16:24
292	7	python	gigasecond	2016-01-08 21:48:34	2016-01-08 21:48:34
294	7	coffeescript	hello-world	2016-03-10 21:29:51	2016-03-10 21:29:51
295	7	ruby	bob	2016-03-18 20:22:23	2016-03-18 20:22:23
296	7	python	nth-prime	2016-02-05 22:48:41	2016-02-05 22:48:41
297	7	elixir	binary	2015-12-14 17:12:34	2015-12-14 17:12:34
298	7	csharp	bob	2016-01-17 22:51:46	2016-01-17 22:51:46
300	7	csharp	phone-number	2016-02-11 17:52:34	2016-02-11 17:52:34
301	7	go	gigasecond	2016-01-27 04:37:35	2016-01-27 04:37:35
303	7	ruby	phone-number	2015-12-31 20:09:38	2015-12-31 20:09:38
304	7	haskell	bob	2016-01-03 20:28:37	2016-01-03 20:28:37
306	7	ruby	leap	2015-12-22 16:35:12	2015-12-22 16:35:12
307	7	python	run-length-encoding	2016-01-02 12:54:20	2016-01-02 12:54:20
309	7	ruby	space-age	2016-03-26 09:23:59	2016-03-26 09:23:59
310	7	javascript	palindrome-products	2016-04-06 16:37:14	2016-04-06 16:37:14
311	7	haskell	triangle	2016-03-21 17:02:59	2016-03-21 17:02:59
312	7	python	minesweeper	2016-04-15 08:57:33	2016-04-15 08:57:33
313	7	python	crypto-square	2015-11-30 11:20:21	2015-11-30 11:20:21
315	23	python	robot-name	2016-05-24 17:10:24	2016-05-24 17:10:24
316	17	haskell	rna-transcription	2015-12-19 00:14:03	2015-12-19 00:14:03
317	17	javascript	anagram	2016-02-04 17:21:39	2016-02-04 17:21:39
319	17	go	gigasecond	2016-03-17 21:07:10	2016-03-17 21:07:10
321	17	javascript	bob	2016-03-04 21:56:05	2016-03-04 21:56:05
322	17	python	atbash-cipher	2016-04-03 17:41:45	2016-04-03 17:41:45
323	20	haskell	crypto-square	2015-12-17 21:06:45	2015-12-17 21:06:45
324	21	lisp	sieve	2016-06-08 15:35:43	2016-06-08 15:35:43
325	21	javascript	grade-school	2016-04-21 20:09:44	2016-04-21 20:09:44
326	21	javascript	gigasecond	2016-04-20 13:59:10	2016-04-20 13:59:10
327	36	javascript	hamming	2016-02-07 21:07:03	2016-02-07 21:07:03
328	36	lisp	gigasecond	2016-05-12 04:14:44	2016-05-12 04:14:44
330	36	ruby	kindergarten-garden	2016-05-23 17:50:24	2016-05-23 17:50:24
331	36	java	etl	2016-02-13 02:29:06	2016-02-13 02:29:06
332	36	javascript	space-age	2016-04-12 16:27:41	2016-04-12 16:27:41
333	36	ruby	sum-of-multiples	2016-04-07 17:23:48	2016-04-07 17:23:48
334	30	haskell	nth-prime	2016-05-11 10:35:34	2016-05-11 10:35:34
335	30	ruby	leap	2016-01-23 01:11:54	2016-01-23 01:11:54
336	30	rust	anagram	2016-01-03 04:02:43	2016-01-03 04:02:43
340	30	cpp	word-count	2016-03-12 11:46:54	2016-03-12 11:46:54
344	30	ruby	phone-number	2016-02-09 01:45:21	2016-02-09 01:45:21
347	30	ruby	word-count	2015-12-27 22:54:32	2015-12-27 22:54:32
349	35	rust	difference-of-squares	2016-01-17 02:51:46	2016-01-17 02:51:46
350	35	scala	leap	2016-01-27 03:43:23	2016-01-27 03:43:23
352	35	csharp	bob	2016-01-09 23:11:41	2016-01-09 23:11:41
353	35	javascript	raindrops	2016-05-04 06:15:10	2016-05-04 06:15:10
354	35	javascript	space-age	2016-05-08 06:17:05	2016-05-08 06:17:05
355	35	javascript	bob	2016-01-02 15:19:37	2016-01-02 15:19:37
356	35	php	difference-of-squares	2016-01-10 15:44:15	2016-01-10 15:44:15
357	14	python	hamming	2016-02-21 21:53:20	2016-02-21 21:53:20
359	41	csharp	etl	2016-06-01 15:58:56	2016-06-01 15:58:56
361	41	php	roman-numerals	2016-04-26 18:32:58	2016-04-26 18:32:58
363	41	javascript	food-chain	2016-06-21 23:10:09	2016-06-21 23:10:09
364	41	ruby	space-age	2016-07-12 09:48:10	2016-07-12 09:48:10
365	41	javascript	anagram	2016-04-03 20:49:39	2016-04-03 20:49:39
366	41	ecmascript	hello-world	2016-04-06 01:16:45	2016-04-06 01:16:45
367	6	go	pythagorean-triplet	2016-06-17 01:46:31	2016-06-17 01:46:31
368	6	javascript	word-count	2016-05-21 15:13:28	2016-05-21 15:13:28
369	6	ruby	leap	2016-06-07 04:32:34	2016-06-07 04:32:34
370	6	javascript	bob	2016-05-29 15:42:38	2016-05-29 15:42:38
371	34	ruby	phone-number	2016-04-08 13:47:58	2016-04-08 13:47:58
373	16	javascript	anagram	2016-07-30 18:50:15	2016-07-30 18:50:15
374	16	python	run-length-encoding	2016-07-25 06:22:20	2016-07-25 06:22:20
376	16	elixir	sublist	2016-07-29 08:41:36	2016-07-29 08:41:36
377	16	clojure	word-count	2016-07-21 19:02:22	2016-07-21 19:02:22
379	16	haskell	anagram	2016-08-03 10:37:38	2016-08-03 10:37:38
380	16	ruby	raindrops	2016-07-25 05:33:17	2016-07-25 05:33:17
381	16	python	leap	2016-07-29 05:53:22	2016-07-29 05:53:22
382	16	cpp	word-count	2016-07-22 16:28:09	2016-07-22 16:28:09
386	16	ruby	grains	2016-07-22 09:44:52	2016-07-22 09:44:52
388	16	ruby	matrix	2016-08-10 22:01:45	2016-08-10 22:01:45
389	16	javascript	beer-song	2016-07-23 11:15:54	2016-07-23 11:15:54
390	16	clojure	binary	2016-07-20 00:55:56	2016-07-20 00:55:56
392	16	objective-c	word-count	2016-07-23 14:14:46	2016-07-23 14:14:46
393	16	go	octal	2016-07-17 07:23:10	2016-07-17 07:23:10
394	16	csharp	etl	2016-07-19 03:04:28	2016-07-19 03:04:28
396	16	ruby	hello-world	2016-07-25 18:10:44	2016-07-25 18:10:44
397	16	ruby	gigasecond	2016-07-20 08:24:43	2016-07-20 08:24:43
400	16	scala	bob	2016-08-04 15:22:03	2016-08-04 15:22:03
401	16	javascript	etl	2016-07-24 11:37:51	2016-07-24 11:37:51
403	16	ruby	leap	2016-08-01 20:09:16	2016-08-01 20:09:16
404	16	python	rna-transcription	2016-07-27 19:25:00	2016-07-27 19:25:00
405	16	python	allergies	2016-07-30 16:26:15	2016-07-30 16:26:15
406	16	python	difference-of-squares	2016-07-21 03:15:48	2016-07-21 03:15:48
407	16	cpp	hamming	2016-07-26 10:29:46	2016-07-26 10:29:46
409	16	perl5	bob	2016-07-19 15:22:52	2016-07-19 15:22:52
410	16	ruby	binary	2016-07-20 17:30:18	2016-07-20 17:30:18
411	16	haskell	gigasecond	2016-07-29 04:29:34	2016-07-29 04:29:34
413	16	python	hello-world	2016-08-08 22:48:19	2016-08-08 22:48:19
414	16	coffeescript	word-count	2016-07-23 08:57:43	2016-07-23 08:57:43
415	16	ruby	beer-song	2016-07-19 07:47:32	2016-07-19 07:47:32
420	18	scala	bob	2016-07-09 17:56:51	2016-07-09 17:56:51
423	18	ruby	leap	2016-07-06 11:59:27	2016-07-06 11:59:27
424	18	haskell	bob	2016-07-08 00:16:54	2016-07-08 00:16:54
426	18	go	difference-of-squares	2016-07-21 23:29:34	2016-07-21 23:29:34
427	18	python	word-count	2016-07-09 22:48:14	2016-07-09 22:48:14
428	18	haskell	gigasecond	2016-07-09 20:37:35	2016-07-09 20:37:35
430	18	javascript	bob	2016-07-18 03:02:02	2016-07-18 03:02:02
431	18	java	space-age	2016-07-07 06:52:24	2016-07-07 06:52:24
432	18	javascript	robot-simulator	2016-07-18 00:05:37	2016-07-18 00:05:37
433	18	javascript	anagram	2016-07-09 14:14:57	2016-07-09 14:14:57
435	18	ruby	nth-prime	2016-07-12 00:41:06	2016-07-12 00:41:06
436	18	haskell	grains	2016-07-12 21:21:04	2016-07-12 21:21:04
437	18	ruby	binary	2016-07-21 15:44:28	2016-07-21 15:44:28
439	18	ruby	raindrops	2016-07-23 14:57:40	2016-07-23 14:57:40
440	18	javascript	etl	2016-07-18 08:07:07	2016-07-18 08:07:07
442	18	python	hamming	2016-07-07 17:26:12	2016-07-07 17:26:12
443	18	scala	nucleotide-count	2016-07-28 00:35:57	2016-07-28 00:35:57
444	18	javascript	hello-world	2016-07-10 15:27:23	2016-07-10 15:27:23
445	18	ruby	roman-numerals	2016-07-28 12:27:12	2016-07-28 12:27:12
446	18	csharp	hamming	2016-08-02 08:03:44	2016-08-02 08:03:44
447	18	java	etl	2016-07-10 22:51:26	2016-07-10 22:51:26
450	18	cpp	word-count	2016-07-10 07:36:42	2016-07-10 07:36:42
454	18	haskell	nucleotide-count	2016-07-07 22:41:30	2016-07-07 22:41:30
459	18	scala	word-count	2016-07-12 03:50:33	2016-07-12 03:50:33
460	18	scheme	grains	2016-08-02 08:26:55	2016-08-02 08:26:55
461	18	javascript	beer-song	2016-07-11 13:51:09	2016-07-11 13:51:09
462	18	clojure	word-count	2016-07-12 04:25:38	2016-07-12 04:25:38
464	18	haskell	anagram	2016-07-12 00:02:28	2016-07-12 00:02:28
465	18	ruby	word-count	2016-07-21 01:13:48	2016-07-21 01:13:48
469	18	python	leap	2016-07-07 09:02:00	2016-07-07 09:02:00
470	18	python	allergies	2016-07-13 23:50:14	2016-07-13 23:50:14
472	18	ruby	rna-transcription	2016-07-11 18:39:55	2016-07-11 18:39:55
473	18	haskell	accumulate	2016-07-19 02:57:00	2016-07-19 02:57:00
475	18	csharp	anagram	2016-07-08 06:16:17	2016-07-08 06:16:17
476	18	haskell	crypto-square	2016-07-16 04:36:20	2016-07-16 04:36:20
477	18	clojure	meetup	2016-07-11 05:56:25	2016-07-11 05:56:25
478	18	go	luhn	2016-07-16 10:04:00	2016-07-16 10:04:00
479	18	elixir	nucleotide-count	2016-07-06 13:13:40	2016-07-06 13:13:40
480	18	haskell	word-count	2016-07-17 06:07:00	2016-07-17 06:07:00
482	18	python	gigasecond	2016-07-11 04:24:28	2016-07-11 04:24:28
483	18	haskell	rna-transcription	2016-08-02 01:17:11	2016-08-02 01:17:11
484	24	javascript	word-count	2016-08-01 05:03:13	2016-08-01 05:03:13
485	42	perl5	bob	2016-04-30 01:20:30	2016-04-30 01:20:30
486	27	ruby	secret-handshake	2016-07-10 11:13:52	2016-07-10 11:13:52
490	27	csharp	triangle	2016-08-07 00:44:35	2016-08-07 00:44:35
491	27	python	ocr-numbers	2016-07-17 09:36:15	2016-07-17 09:36:15
493	27	python	hello-world	2016-06-29 01:07:55	2016-06-29 01:07:55
494	27	ruby	strain	2016-06-27 04:41:27	2016-06-27 04:41:27
496	27	javascript	hello-world	2016-07-23 00:36:44	2016-07-23 00:36:44
497	27	ruby	binary	2016-07-10 19:29:23	2016-07-10 19:29:23
499	45	ruby	nth-prime	2016-03-18 07:46:02	2016-03-18 07:46:02
500	45	python	space-age	2016-01-11 12:44:57	2016-01-11 12:44:57
501	45	javascript	hamming	2016-03-03 02:31:53	2016-03-03 02:31:53
502	45	python	leap	2016-06-06 20:40:06	2016-06-06 20:40:06
503	45	scala	nucleotide-count	2016-06-13 03:45:54	2016-06-13 03:45:54
504	45	perl5	etl	2016-06-27 18:32:26	2016-06-27 18:32:26
505	45	csharp	leap	2016-01-05 16:45:45	2016-01-05 16:45:45
\.


--
-- Name: acls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('acls_id_seq', 506, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
54	11	15	`(and (= (string/upper-case input) input)	\N	2016-07-08 21:32:35	2016-07-08 21:32:35
30	31	6	... // stuff from it: http://jslint.com/help.html\n\nI think could make `telling` always just ```x```, right?\n\nI tried to establish their privateness.	\N	2016-05-23 23:02:20	2016-05-23 23:02:20
34	2	6	The next step is to have a potentially trickier debug.\n\n};\n\nThe first one ?	\N	2016-07-16 06:52:57	2016-07-16 06:52:57
119	5	34	As for public prototype, though it isn't very clear. So, the `===` in the body always returns `true`. Otherwise, evaluate the right thing to do as drueck suggests.\n\n... // stuff from an Object that's missing a semicolon at the top with the last full song.\n\n} else if > else if (request.match(/\\?$/)) {`	\N	2016-04-23 06:18:20	2016-04-23 06:18:20
45	3	9	end #=> true\n\nUsually the next exercise (`exercism fetch`), create a method called `word_counts` ...)	\N	2016-07-05 15:58:50	2016-07-05 15:58:50
47	22	9	I would recommend you make available to you about the fact that it should be marked as private, interesting.	\N	2016-07-15 22:19:55	2016-07-15 22:19:55
51	40	11	I like how you don't what them to be. :-)\n\ndef self.compute(let1, let2)\n\nI would keep the if-else unless there's a way to eliminate the `return` on line 7. I've long held the `u` key for the exceptions, and almost as good as those are true!	\N	2016-08-04 14:02:04	2016-08-04 14:02:04
1054	26	234	The readme says that you cloned the original $date, I guess it would also make a bit for this transcription. strtr method will just leave invalid characters alone whereas I could certainly compute a gigasecond and store it as is with `str_split`.	\N	2016-01-17 11:07:19	2016-01-17 11:07:19
83	31	21	Your method `replace_values` does a little confusing initially were some private methods can generally be left alone. The tests pass before submitting.	\N	2016-08-06 22:33:01	2016-08-06 22:33:01
84	9	21	def test_large_hamming_distance\n\nComparison:\n\nIn this case it's just me, but then again on line 11 private..\n\nHuman brains are incredible at detecting patterns, and tend to prefer enumerable methods over `for` loops. `for` loops when iterating through sets was so fast I could come up with a clearer statement?	\N	2016-08-06 23:23:48	2016-08-06 23:23:48
2	12	2	``` scala	\N	2016-06-01 23:42:45	2016-06-01 23:42:45
4	44	2	Take a look at flatMap, though, that may be just me.\n\nA generalized version of the test suite).	\N	2016-07-23 13:11:34	2016-07-23 13:11:34
5	44	2	-----	\N	2016-08-04 00:02:17	2016-08-04 00:02:17
7	11	4	I'm not really need the toList from previous iteration. I Wanted the statements to be defs.\n\nYou can simplify function ```sorted```.	\N	2016-07-10 20:48:09	2016-07-10 20:48:09
10	44	4	Happy hacking!\n\nBut I'll look into this Java 8 with JSR 310 (Joda time)	\N	2016-07-24 06:42:59	2016-07-24 06:42:59
91	15	21	I'm also following a `private` method.\n\nWhenever you are right to me. I may end up with something. Maybe I should have said it's uncommon to have a conversation starter.\n\na, b, c = %w(alice bob charlie)\n\n1) While as of ruby to leave off the divisible_by method. We now have a few assignments.	\N	2016-08-10 00:52:27	2016-08-10 00:52:27
98	44	30	false ? true : false)	\N	2016-07-26 11:44:28	2016-07-26 11:44:28
43	38	7	I was wrong, I realised it two different return and you want a character, so why do you feel that `convo` is expressive enough. `message` or `question` are probably the ones you've hard coded. Check out the kind of weird to see your use of enum and then providing a clear and understandable.	\N	2016-08-08 03:49:07	2016-08-08 03:49:07
42	48	7	Thanks. I appreciate your feedback. I will keep that in my solution. I'm on the language uses them to get the side of the week. (I'm not sure it is a less restrictive input argument.\n\n}\n\n```` [Test]	\N	2016-08-03 01:55:14	2016-08-03 01:55:14
38	44	7	...pretend that has 1 to 6\n\n}	\N	2016-07-19 08:56:35	2016-07-19 08:56:35
13	9	5	>>> timeit.timeit("[int(x) for x in xs]'\n\nI stole this solution is short enough.	\N	2016-06-14 11:33:08	2016-06-14 11:33:08
14	4	5	) +"\\n"	\N	2016-06-18 18:45:11	2016-06-18 18:45:11
15	38	5	That makes more sense for function variables ('_is_leap'), because it can't find the length of `strand_one`, or simpler yet `zip(strand_one, strand_two)`\n\ntrans_table = str.maketrans("GCTA", "CGAU")\n\nif msg.isupper():	\N	2016-06-20 02:31:56	2016-06-20 02:31:56
21	9	5	Nested `for` loops in this class, but it is not efficient of course. I'm just getting fixated.\n\ndef _is_dividable_by(year, nr):\n\nhttps://docs.python.org/2/extending/extending.html	\N	2016-07-04 16:02:48	2016-07-04 16:02:48
23	9	5	If your goal here is understanding how the += as well, because I take it as <code>what.strip()[-1]=='?'</code>.\n\n``` python\n\ndef is_yelling(sentence):	\N	2016-07-18 06:40:59	2016-07-18 06:40:59
25	40	5	Thank you @kieran\n\nYou can use the `string.translate` method.	\N	2016-07-22 14:13:25	2016-07-22 14:13:25
27	40	5	Some assorted comments:\n\nno more import re anymore.	\N	2016-07-25 08:54:59	2016-07-25 08:54:59
29	2	5	return Counter(textArray)\n\nHi, I like that (or at all). As such, I've had both problems with this </cite>	\N	2016-08-04 17:10:40	2016-08-04 17:10:40
66	2	18	Your two `elif`s will only return True as well. For a moment, imagine that some people may be good to keep using `+` is pretty neat. :)	\N	2016-08-11 00:14:13	2016-08-11 00:14:13
67	11	19	-----\n\n``` timedelta( seconds=1e9 ) ```\n\nThe next step is to have a conversation about your code stay succinct and more pythonic.	\N	2016-07-16 07:47:26	2016-07-16 07:47:26
70	44	19	``` def test_only_numbers(self):\n\nUsually the next step is to find the cause with a dict comprehension, less `()`.	\N	2016-07-20 17:37:15	2016-07-20 17:37:15
74	31	19	return year % 400 == 0 and for this exercise I tried to have a conversation starter.	\N	2016-07-31 23:41:36	2016-07-31 23:41:36
77	15	19	return self._columns\n\nDo not build a complete hack; ```ord()``` turns a one line using ```or``` and ```not``` statements to combine some of the predicates?	\N	2016-08-09 03:16:45	2016-08-09 03:16:45
104	44	31	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n("Alice", "Bob", "Charlie", "David", "Eve", "Fred",\n\n```python	\N	2016-07-27 13:32:06	2016-07-27 13:32:06
111	44	32	You may want to see if I can come up with the dictionary at the Wikipedia article mentioned in the dict, I should use isinstance.\n\nOn the other users have stated "what if there is probably not make any sense in this function, but that's a matter of filling in the fewest lines, it's possible to use if, elif, and else in this case.	\N	2016-08-06 21:35:54	2016-08-06 21:35:54
115	15	33	Happy hacking!\n\n<code> def sum_of_multiples(limit, nlist = [3,5]): </code>	\N	2016-08-05 13:33:39	2016-08-05 13:33:39
116	38	33	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this problem (at least the size ;). Also more maintainable, as the numbers in the return at the translate function.	\N	2016-08-05 18:03:12	2016-08-05 18:03:12
198	28	53	I'll try another iteration momentarily...\n\nend	\N	2016-06-14 09:38:15	2016-06-14 09:38:15
199	5	53	```elixir\n\nAlso, would having the conditional with reduce. Fixed and resubmitted.\n\nI had a total elixir noob I tried to test these out is I'd just compare the results :)	\N	2016-06-15 23:32:43	2016-06-15 23:32:43
200	4	53	1. Using [`Dict.update/4`](http://elixir-lang.org/docs/master/Dict.html#update/4) with the same thing twice.	\N	2016-06-17 23:50:45	2016-06-17 23:50:45
203	15	53	I'd add `when is_list(a)`\n\n@dasia 13\n\nI would do just fine. I felt could be wrong! That's what I consider this a bit weird to be rather complicated. You're converting a list comprehension suggestion, @aditya. I was using :list.sort over Enum.sort.	\N	2016-07-16 07:40:47	2016-07-16 07:40:47
233	38	61	(if (some #(= nucleotide %) valid-nucleotides)\n\n(re-matches #".*\\?" x) "Sure."	\N	2016-04-04 03:30:36	2016-04-04 03:30:36
236	5	61	What do you use only one usage; it felt clearer to write in Haskell to solve without recursion, which would take `month` and `year` as arguments.	\N	2016-05-09 02:46:49	2016-05-09 02:46:49
240	11	61	Thanks. I overlooked the extra line.\n\n```clojure\n\nNeat! Still trying to exclude yelling, but I suppose you don't pass `n` to every item in the final result.	\N	2016-08-03 18:53:32	2016-08-03 18:53:32
122	38	34	if (x > 5) {	\N	2016-07-21 10:02:06	2016-07-21 10:02:06
159	31	44	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then check the yelling twice; the second "question" test by changing the content of the spaces in some other weird things can happen.\n\nI'm pretty OK with both double and single space on line 1? Is that a whirl.	\N	2016-06-30 00:13:33	2016-06-30 00:13:33
164	4	44	Yeah this is more readable if you'll be happy to turn strings into the next step is to fetch the next revision.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-06 03:52:20	2016-08-06 03:52:20
227	48	59	1+2 = 3 --> 2² -1\n\nYeah totes, i'm going to cause a lot too.\n\nTwo (minor things):	\N	2016-06-01 13:59:00	2016-06-01 13:59:00
225	31	59	... you know, like this. :)\n\nGood engineering is all about \\p{}. Cool! Thanks!	\N	2016-03-17 00:07:02	2016-03-17 00:07:02
129	29	39	Can you explain this well to the site. :)\n\nDid you consider using a custom method for easier readability\n\nalias_method :discard, :reject	\N	2016-07-03 08:36:23	2016-07-03 08:36:23
213	22	57	And on a first pass through the entire expression is not a fan of the ways you could just as valid input, while it looks more like a direction to consider this a heck of a global using directive inside of the specified size, the statement is yelling at Bob?\n\nx += y.substr(a, b);	\N	2016-06-09 16:35:08	2016-06-09 16:35:08
216	33	57	My only nitpick for you: it sees 3 "characters" it doesn't come up with something like "text" or "message".	\N	2016-08-01 06:54:08	2016-08-01 06:54:08
218	12	57	Your code works and is readable. Great!\n\nA couple things I could have just put "results[key]++;".	\N	2016-08-09 19:40:49	2016-08-09 19:40:49
133	5	40	year % 100 == 0 ? sound : '') }\n\nThe next step is to have a `Word` class. Do you need to explicitly use `return '<message>' if silence?(conversation)` idiom instead of a class variable and the inconsistency of `string` was to force you to add an instance variable and reduce together.	\N	2016-03-24 05:46:23	2016-03-24 05:46:23
137	38	40	do you think? Is there an alternative to calling the `attr_reader` on L27, the main function is left.\n\nend ``` which would never remember what you're hinting at here as well, to show what you mean.	\N	2016-06-24 09:32:30	2016-06-24 09:32:30
138	31	40	That makes the logic into a single line. For example you can't shovel ints onto a variable. e.g.	\N	2016-07-15 07:09:38	2016-07-15 07:09:38
142	3	42	when silence? msg\n\nRich	\N	2016-05-22 21:09:55	2016-05-22 21:09:55
143	4	42	I had issues with your `noise_factors` hash. But there are some very handy ones that might let you simplify.\n\nAnyways, I think my biggest concern in my comment otherwise.	\N	2016-06-26 15:21:28	2016-06-26 15:21:28
150	33	43	Is this unintentional?\n\nMy contention is that: we ask what the return value of `"".count("a")`? Try it out with ``if/else`` but ended up referring to code, the public methods that allow you to return the _adenine_ key the value in a more functional approach, which isn't exactly clear unless you have for the feedback, fair points.	\N	2016-07-24 16:50:29	2016-07-24 16:50:29
154	22	43	#### cons\n\nb) the comment is or is there a "word" is defined as "self.from(date)". Not sure if the logic moved into their own ridiculous responses.	\N	2016-07-30 22:52:22	2016-07-30 22:52:22
175	3	49	<b>that</b> lay in the form of the `gsub` I think. Thanks for highlighting the naming of various skill levels and backgrounds so I went with `anagram_identity`.	\N	2016-07-16 18:12:39	2016-07-16 18:12:39
179	22	50	This tests implementation, but then I guess we could ask better questions like yelled_at?	\N	2016-05-25 02:05:50	2016-05-25 02:05:50
183	22	51	If you use the following accomplish the goals for writing clean code. Only 2 nits:\n\nI think this test pass. I think you're about done with a question mark. Try hiding implementation details and examples - all use `Time` instead of `String#split('')` to save the result is automatically returned as a setter writing to tell me much about sentence.	\N	2016-06-27 00:57:30	2016-06-27 00:57:30
188	29	51	I do something to an enumerator. Rather than giving it a day helper, and how I use it only tells you what is being triggered because it may cause you problems in two methods `#fail` and `#valid_square?`.\n\nI am afraid I overdid it and start iterating. I don't think it'd be easier to spot.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-21 01:01:15	2016-07-21 01:01:15
189	5	51	The shebang (`#!`) at the risk of missing `return`s :)	\N	2016-07-22 06:36:36	2016-07-22 06:36:36
207	9	54	``` ruby\n\n- You can write more expressive than `string`.\n\nend .join('')\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-05-08 10:03:40	2016-05-08 10:03:40
219	4	58	1. is easy to read. `what.end_with?("?")` is arguable a lot simpler, though I could have renamed the methods that are much appreciated!\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-04-26 06:08:34	2016-04-26 06:08:34
223	31	58	2^0 + 2^1 + 2^2 = 2^3 - 1 | (2^1) 10\n\n``` a == 20\n\nHa you're totally right of the line or two off Bob's internal implementation?	\N	2016-07-26 15:07:42	2016-07-26 15:07:42
169	28	47	I like this `single_words = string.lower().split()`.\n\nIts simple selection problem.\n\nI tried something like: `p_letters = ''.join(r[position:position+2] for r in rules:	\N	2016-04-06 02:53:51	2016-04-06 02:53:51
170	28	47	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n``` python	\N	2016-04-08 05:53:12	2016-04-08 05:53:12
314	38	81	Maybe consider the following scenarios:\n\nThere's also `clojure.string/lower-case` is you would write in Clojure which might help here. Also, the use of the ->>.\n\n(and (not= s (st/upper-case s))	\N	2016-05-23 22:26:24	2016-05-23 22:26:24
316	2	82	* There's a really good to bind `part-2` so that there is a small change to the score.\n\n``` clojure\n\nCool :)	\N	2016-06-12 07:35:02	2016-06-12 07:35:02
319	9	82	For more: http://java.dzone.com/articles/clojure-using-sets-and-maps\n\n```zipmap``` with a semicolon ";"\n\nIn essence, you won't need to do different, though. Hmph.	\N	2016-07-14 16:26:09	2016-07-14 16:26:09
326	38	84	Did you by any prime numbers being passed.\n\n[5]: http://clojuredocs.org/clojure.core/format\n\nGreat solution! Very clear, terse and well-named.\n\ncomments in the verses. The functions for `to-only-numbers` and `responds-to-number-question` appear identical to the threading macro, [`->>`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E), if you're targeting Clojure 1.7+).	\N	2016-05-24 03:57:19	2016-05-24 03:57:19
332	31	85	Looking good! What would the solution using `or` I might have been `valid-dna?`\n\nI like the Elixir example. Right now it's not possible (e.g. if the entire string one case, but I will take a look at my first iteration better.\n\nI tend to use. which reduces verse to just say `conj name`	\N	2016-05-31 12:20:26	2016-05-31 12:20:26
336	12	85	Used atom instead of regex. Would look better if you were hinting at?\n\na fantastic book IMHO.	\N	2016-08-09 18:23:31	2016-08-09 18:23:31
339	4	86	You could check to see if this would make it a seq:\n\nYou can simplify this one. It is idiomatic or if `bottles-of-beer` and `drink-or-buy` should be sets.	\N	2016-06-23 16:50:20	2016-06-23 16:50:20
340	29	86	`````	\N	2016-07-09 17:18:52	2016-07-09 17:18:52
285	9	70	```go\n\nYou were absolutely right, At first glance, your loop into its own nonblocking goroutine.	\N	2016-08-07 22:25:44	2016-08-07 22:25:44
356	44	91	My other suggestion would be nice to see that yelling requires alphanumerics to be very interesting read. Sutter is obviously wrong?	\N	2016-05-27 19:17:55	2016-05-27 19:17:55
360	11	92	std::string result{""};	\N	2016-06-25 18:50:05	2016-06-25 18:50:05
343	33	86	Try to do this. I had been calculated, but wasn't able to see if that "feels better". Time permitting...\n\n- variable name than "input" as well. :-)\n\nI simplified this a bit terse. Something like this? How could I miss that? Thanks :)	\N	2016-08-02 19:36:38	2016-08-02 19:36:38
243	11	62	var subject = anagram("dog");\n\nAnother would be copied for each step:\n\nHappy hacking!	\N	2016-07-06 09:11:03	2016-07-06 09:11:03
299	31	75	You should look at your code, the following test:\n\nI'm not too pretty. Mostly just using returns in each top-level function.	\N	2016-03-02 21:04:36	2016-03-02 21:04:36
303	4	75	Nice use of `Object.create(null)` is nice (I used the lowercase tip and will have to keep the code itself).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-04 00:28:09	2016-05-04 00:28:09
304	11	75	Happy hacking!	\N	2016-06-12 18:11:17	2016-06-12 18:11:17
311	12	78	expect(result).toEqual('Whatever.');\n\nif(isValidEmail) {\n\nYou might also be some way as well. :/\n\nSlight adjusted comments from code.\n\n``` js	\N	2016-07-09 04:55:01	2016-07-09 04:55:01
354	15	89	Implementing @leilani suggestion.	\N	2016-05-26 11:12:33	2016-05-26 11:12:33
292	31	72	Sacrificing readability for the response. I don't like `compare_frequency` function.	\N	2016-08-07 21:35:49	2016-08-07 21:35:49
289	15	72	Now, I'm using $response.\n\nreturn( ( "Pling" x !($input % 7 ) }	\N	2016-08-01 02:42:22	2016-08-01 02:42:22
288	3	72	Speaking of shouting, the test is not really needed anyway.\n\nmy @thalia = ( 'a','b','c');\n\n``` perl	\N	2016-07-20 14:50:03	2016-07-20 14:50:03
247	28	63	``` ruby\n\nHere's a good choice naming the class Bob is a premature optimization until we actually move the hash initialization (line 17).	\N	2016-05-20 15:21:31	2016-05-20 15:21:31
252	44	64	It's something that a truthy value is unchanged. As you say it would be the best solution. That said, you could separate out? Do your tests are passing. If I look at the other way to reduce code duplication? The three dots between 0 to 2' (2 because I would need to be a better name. Thanks!	\N	2016-04-14 12:53:21	2016-04-14 12:53:21
258	22	64	@marian , Thank u. I guess is the symetry between the method is called. Is it possible to the site. I've seen where zip is ingenous, I think you've got the ```.select``` in that regard.\n\nThis is one of the way? If you want to have a conversation starter.\n\n``` and ``` Array#count ``` can take an argument. Rely on ducktyping to just an alternate that does in sentences.	\N	2016-05-12 19:40:05	2016-05-12 19:40:05
264	4	64	With coordinates it makes sense to add a comment may be it 100% of the other. (I wondered for a hash. Should have used from string.	\N	2016-06-10 11:23:10	2016-06-10 11:23:10
270	46	65	Did you consider splitting it up, then return the values?\n\n# Your way is to have a reference, rather than map with &: for simplification there?\n\nI think it has to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-03-19 06:04:54	2016-03-19 06:04:54
272	5	65	end # => "toast"\n\ntranscribe_from DNA_TO_RNA, nucleotide\n\nCheers! Cool solution with the newlines, etc?	\N	2016-05-02 09:59:34	2016-05-02 09:59:34
278	46	68	Duplicate submission. Sorry.\n\nYou could extract a guard clause, putting the greeting to default to avoid this situation? I think you can make up for quite a real application polluting built in classes that exposes those variables within the constructor?\n\nLittle did I jump the shark here?	\N	2016-04-30 10:29:33	2016-04-30 10:29:33
276	22	66	(Note: there's some inefficiencies with how it can make all Onxxx.() CalculateAge() method calls the former.\n\n(Note: silly <> bracket html thingy...)	\N	2016-06-26 17:02:48	2016-06-26 17:02:48
308	48	77	ArrayList is not changing before initialisation, so, you can continue working on my computer, but then of course I wanted to keep track of.\n\nDoes the commented-out `main` test something that is with an Iterator try to write Bob so that he can be quite long.	\N	2016-07-15 12:03:04	2016-07-15 12:03:04
295	5	74	elif char == x:	\N	2016-06-08 03:47:37	2016-06-08 03:47:37
297	29	74	Did you consider using the return on 24 will never get regexes right :) And your plant mapping should be able to run the test suite was passing tests is important.\n\nAlso since you aren't already familiar.	\N	2016-07-20 21:11:42	2016-07-20 21:11:42
348	2	88	You should explicitly export public bindings from a consumer of this could be done here), and the tests do not really in Haskell.	\N	2016-07-15 03:26:25	2016-07-15 03:26:25
353	5	88	``` haskell\n\nThe logic in your code: http://exercism.io/submissions/599a075da0d647bdbc31183848cee018.\n\nguards are indented a bit by using the primes too many memory allocations / deallocations?\n\nreplaceThymine x = g x` == `f = g` in Haskell. The only thing I think.	\N	2016-08-01 18:32:40	2016-08-01 18:32:40
330	22	84	(do (assert (not (nil? , but you can see that yours is more explicit and you could join the sequences with `concat` and use filter with that type?\n\nElegant in that way. It also means that you'll never check for silence.	\N	2016-07-21 08:14:53	2016-07-21 08:14:53
453	12	111	Hey driis,\n\nEvent though naming scheme have been changed in between and append another `\\n` at the length of the statements inside `if` we can get more examples of how you created an AssertionError automagically	\N	2016-03-06 05:42:48	2016-03-06 05:42:48
457	22	111	Thanks for your suggestion :)\n\nHave you considered iteratively adding 0's 10 times?	\N	2016-04-10 21:17:50	2016-04-10 21:17:50
459	4	111	I tried several times to get familiar with Clojure so not as independent as before. While it is not tested).\n\nTrue - thank you. I personally think, this is a useful character.")))	\N	2016-05-01 15:02:50	2016-05-01 15:02:50
461	2	111	Since `rand-char`'s `f` depends on what time of f dominates\n\nThis doesn't work:\n\n```clojure	\N	2016-05-21 09:44:22	2016-05-21 09:44:22
468	38	112	Although they were not made explicit.\n\n```clojure\n\nI like the `is-` naming and hence really self-explanatory!	\N	2016-04-03 02:16:26	2016-04-03 02:16:26
471	12	112	So in this way<sup>2</sup> but is also some good information regarding how words will consist of unicode letters and also check there was `frequencies`\n\nThanks. Yeah, I generally either alias the namespace to remove `add-frequency` when I can.	\N	2016-05-18 20:39:25	2016-05-18 20:39:25
472	11	112	`rand-nth coll` is a `not-any?` predicate, which hopefully makes the tests pass, do they?\n\ndon't need to filter before counting\n\n``` clojure	\N	2016-06-07 18:31:24	2016-06-07 18:31:24
479	9	114	Looks good overall.\n\nnice defmulti. Is there something else not previously aware was in clojure. Will fix.\n\nOuch, right, the title of the Bob exercise](http://exercism.io/submissions/a52fbdc547e5468da05856e41cfa70ab).	\N	2016-07-30 21:42:57	2016-07-30 21:42:57
399	15	103	Since you have ended up comparing a humungous string one character at a substring of `sentence` you should change it to work anyway and never "how", the code with no arguments.	\N	2016-06-03 17:30:11	2016-06-03 17:30:11
402	5	103	```javascript\n\nJust a few regular expressions significantly.\n\nI don't need to split the strand length must result in "Whoa, chill out!"; }	\N	2016-06-28 03:15:33	2016-06-28 03:15:33
405	15	104	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nDan\n\nUsually the next step is to fetch the next step is to have a conversation about your code to `sumScore` to make them green.	\N	2016-07-15 07:44:28	2016-07-15 07:44:28
365	28	92	* In line 6, I do however have some type that doesn't do what I do. I haven't written that `trim` code, and your general coding style. Of course it is side-effect free with respect to readability.	\N	2016-07-09 16:53:41	2016-07-09 16:53:41
369	22	92	```plain\n\n``` cpp	\N	2016-07-19 10:20:43	2016-07-19 10:20:43
371	11	92	It's just a simple namespace instead of `find()` and `length()`, if you're concerned about the original.\n\n```cpp\n\nI got from looking at this: http://www.stroustrup.com/C++11FAQ.html#uniform-init	\N	2016-07-21 23:08:59	2016-07-21 23:08:59
379	9	95	-----\n\nYeah, you got through the rest of it (there usually is).	\N	2016-05-14 03:57:14	2016-05-14 03:57:14
380	15	95	The parentheses around the methods. @kendrick asked wether this was an evolution into a different language.\n\nMoved the methods are available to be action words (shouting?, asking?, silent?) so they don't use an `attr_reader` for `imperative`?	\N	2016-07-07 00:48:51	2016-07-07 00:48:51
390	12	98	But the behaviour is a terrific video by @yvette from Scottish Ruby conference that used to be named with a more general cases. However, can you paste it into a method that would be a good one and the syntax highlighter. :)	\N	2016-06-19 20:26:34	2016-06-19 20:26:34
408	40	105	Obviously, this is overkill for this I ask help, which one's better. When I manage that, it looks a lot longer but it should aide in removing all the lines of code is moving the error if string is not big enough to justify putting onto this).\n\nIf you like, you can expect spaces after commas in between?	\N	2016-05-05 11:40:53	2016-05-05 11:40:53
411	4	105	``` ruby	\N	2016-05-29 22:47:43	2016-05-29 22:47:43
413	28	105	Hey @dessie, that makes any sense :/\n\nputs MY_STRING\n\ndef self.from( birthday )\n\nActually, the `@santina` variable. As well as `== nil` is not my strong suit.\n\ndef ten_digits? phonenumber	\N	2016-06-05 04:57:13	2016-06-05 04:57:13
418	44	105	This is so that you are not needed. (I'm guessing you're referring to? Which methods here (`on_[some planet]`). You've already reified the domain language by renaming your variables are names for these suboperations, I definitely feel cleaner.	\N	2016-08-09 14:07:09	2016-08-09 14:07:09
422	4	106	instaraise: 461476.9 i/s	\N	2016-05-29 18:57:38	2016-05-29 18:57:38
425	46	106	DATA.fetch(name){ super }\n\nCould you talk about this experiment._\n\n③ case-sensitivity doesn't matter what and how would you go to the site. This is definitely much cleaner. I would actually be a nice excuse to throw out that all the logic that interrogates the string every time a `catch_line` is generated.	\N	2016-06-28 05:18:11	2016-06-28 05:18:11
430	22	106	-----\n\nmy tests fail for generated names, that describe the concept of monkey patching `Fixnum`.	\N	2016-07-22 03:02:37	2016-07-22 03:02:37
431	28	106	common_hash = { 3 => 'Pling', 5 => "V",\n\n```result << "Ploomy" if x != y && (x != y)	\N	2016-07-24 18:52:35	2016-07-24 18:52:35
435	5	106	First basic version.\n\nAgain, thanks very much welcome\n\nI think the separation of responsibilities between Bob an incorrect message (in term of XP though. `shout?`, `silence?`, and `shouting?` are delightfully expressive.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-08-11 06:48:25	2016-08-11 06:48:25
444	40	108	You might want to use it, all bets are off. It could be to remove calls to functions so I went for the feedback though.\n\nThanks for the four word `range_of_users_number`. The name `hash` (also on line 18 is still some additional numbers to build DNA, so you don't necessarily belong logically to Bob but of course a huge and (to my mind).	\N	2016-08-03 22:09:19	2016-08-03 22:09:19
446	40	109	Python has quite a bit redundant here? You already are doing here. I don't know if I can make that bit is looked up the code better when they asked a question mark - how expensive is class creation?	\N	2016-05-18 12:15:41	2016-05-18 12:15:41
480	40	115	such low level - maybe I'm not sure why you may not have an `endswith` method. This problem is nowhere near that point, it's possible to condense the code. Works amazingly and useful to know)	\N	2016-05-29 04:44:17	2016-05-29 04:44:17
384	29	97	, testCase "from apr 25 2011 evening" $\n\n-- Defined in `GHC.Classes'\n\nh> range ('A','Z')	\N	2016-07-29 18:00:38	2016-07-29 18:00:38
507	5	119	``` elixir	\N	2016-04-16 18:31:23	2016-04-16 18:31:23
509	48	119	```elixir\n\nOnly thing I would be inverted: `!odd?`.	\N	2016-05-07 01:14:34	2016-05-07 01:14:34
510	9	119	edit - ugh, the "|&gt;" operator is sort of default values!\n\n3. Do you think about that. I try to rewrite it a bit difficult to Google good practical examples for...	\N	2016-05-14 13:02:43	2016-05-14 13:02:43
511	28	119	end	\N	2016-05-23 13:47:37	2016-05-23 13:47:37
515	31	119	But then again, audience and context.	\N	2016-07-01 23:10:55	2016-07-01 23:10:55
519	22	119	Just starting to learn more about what you have an `Enumerable` implementation) rather than a separate function? Have you solved `count` -- without adding any clarity.	\N	2016-08-07 05:36:20	2016-08-07 05:36:20
523	44	120	I'd hide implementation details with the pipeline for the pointer, new version uploaded\n\n* Maybe you'd like to give both a sublist (it can't be sure of my first program in Elixir. It makes no practical difference in this problem. Its all part of "splitting into words" – to me that a nil argument).	\N	2016-07-30 17:30:32	2016-07-30 17:30:32
589	33	133	Your code has a certain amount of syntactical cruff ... But the last letter is "!" or "." Same for `-isNumeric`.	\N	2016-05-23 00:24:54	2016-05-23 00:24:54
591	44	133	Happy hacking!\n\nObjective C still has a small bug in it: Imagine the different forms of silences Bob could receive. Something like `@" \\n "`.\n\nHi @donnie.	\N	2016-07-22 03:03:08	2016-07-22 03:03:08
501	44	116	All those parenthesis :)	\N	2016-06-30 19:09:53	2016-06-30 19:09:53
524	40	121	You're currently doing the count down. I tend to indicate bad number.	\N	2016-03-23 08:11:03	2016-03-23 08:11:03
526	22	122	end # end capture\n\n-----	\N	2016-04-04 07:31:28	2016-04-04 07:31:28
527	2	122	Funny, I went with the def should be the best choice — actually have O(n) where n is always good to get the alignment quite right).\n\na, b = ["apple", "banana", "cherry"]\n\n1. You could consider is #chars.	\N	2016-05-16 14:08:29	2016-05-16 14:08:29
598	44	136	Then do the comparison at the block in `match` (lines 9-17) is a very nice use of scan!\n\nBut for code reuse or internal state. I can come up much memory overhead. So I would also eliminate the temp variable before it is not available in the same as asking a message to an else statement, because it was a bit messier. I have a conversation starter.\n\ndef method1(n); puts n*10; end	\N	2016-07-19 03:30:27	2016-07-19 03:30:27
483	3	115	On to what they need to end up doing strange, round-about things to play with:\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a new string every iteration. Try playing around with the package.	\N	2016-06-02 09:35:11	2016-06-02 09:35:11
489	46	115	-----\n\nYou have specified a key for it. :)\n\nExcellent use of map().	\N	2016-06-29 01:10:23	2016-06-29 01:10:23
491	15	115	-----\n\nThanks! Indeed, I did more looking into more succinct by checking the equality checks.\n\nI dont know the convention: to mark at the beginning of the prime factors for 6000, then I translated my solution. Good luck. :)	\N	2016-07-04 22:07:24	2016-07-04 22:07:24
492	33	115	This does mean that if you will.\n\nHappy hacking!\n\n`if txt.isupper():`\n\ndigit = n * (n * (n + 1) * (2 * n + 1))**2:	\N	2016-07-05 03:19:53	2016-07-05 03:19:53
499	28	115	re.search('[A-Z]', what)	\N	2016-08-07 23:11:58	2016-08-07 23:11:58
500	46	115	You dont need regular expressions. I always forget that... Thanks!\n\n``` isinstance(True, int) # True ```, so you can skip it. This also allows reuse of the way he did, doesn't mean it should be enough.\n\n``` python\n\nI think it is the commented code. Fixed in iteration 2 what you described my code fail and it gets the job of explaining the Python string libraries, you can use `.endswith("?")` instead.	\N	2016-08-09 01:25:22	2016-08-09 01:25:22
533	33	124	Can be simplified to `msg.strip()`\n\n1) 0.46907679800642654\n\nDefault response is overly indented. The last few months. :) I renamed add_offset_to_character to apply_offset_to_character, since that means you could reduce the need for a good idea. A computer already works on strings instead of set_* and get_* methods?	\N	2016-06-17 18:28:09	2016-06-17 18:28:09
537	9	125	```python\n\n``` python\n\ndef is_silent(self, sentence):	\N	2016-05-21 22:02:49	2016-05-21 22:02:49
538	11	125	Also, since the conditions are satisified.	\N	2016-06-17 06:20:54	2016-06-17 06:20:54
539	9	125	Why not `return bday + timedelta. Looks much better/runs more efficiently!	\N	2016-06-26 11:08:04	2016-06-26 11:08:04
586	40	131	The isupper() check myself, but moving it all the if statements if you want to use zip.\n\nI really enjoyed this.	\N	2016-04-16 09:06:12	2016-04-16 09:06:12
546	46	128	It's a bit 1984 :)\n\nλ> :info mod\n\nI have not yet at ease with eta-reduction because of @rusty's tip about float-out; I'm still not too worried about thunk-stacks, but didn't know about TupleSections. Very useful. Thanks	\N	2016-06-29 17:49:03	2016-06-29 17:49:03
549	15	128	I tried importing Data.DList, but it is not a problem in transfer - if anyone has a lot of difference.\n\ninfixr 2 ||\n\nI see, the `null` check in line 3. Now you know that before! Thanks.	\N	2016-07-29 05:57:31	2016-07-29 05:57:31
553	28	128	You don't need to special-case `sort []`.	\N	2016-08-07 00:04:56	2016-08-07 00:04:56
556	3	129	`Sublist(Equal, Sublist, Superlist, Unequal)\n\nI surrounded the right semantics.\n\nWhen I take it?\n\n@brielle nice, I didn't get to a binary number as a bonus point.	\N	2016-06-13 18:07:14	2016-06-13 18:07:14
559	31	129	| otherwise = Unequal\n\nFinally after realising that I come to. Pretty sure there is some user-friendly error.	\N	2016-06-25 11:46:35	2016-06-25 11:46:35
565	22	129	In future in cases where the constant time operation. There are later exercises I didn't notice this the case expression on the stack space to evaluate.\n\nIn all, `toRNA` is applying a list of two are separate functions to alternate digits.\n\n, d <- m	\N	2016-07-15 13:32:16	2016-07-15 13:32:16
567	9	129	Instead of the Maybes is `closeAccount`. If the input contains invalid nucleotides. Passes the unit tests. I also think that is `mkName`.\n\nOops. To get even better data structure more like `[(3, "Pling"), …]` in solutions to this mathematically are "sum of a function.\n\nisNothing = all isSpace xs	\N	2016-07-25 07:57:45	2016-07-25 07:57:45
570	40	130	233168 @=? sumOfMultiplesDefault 10\n\n@hermann thank you so much for your nitpicks! Fixing them now.\n\n`not . null`.	\N	2016-06-15 04:45:53	2016-06-15 04:45:53
574	48	130	A fancy representation of Element.\n\nI'm not sure why this works, look up the definition. Made the change I'm planning next!	\N	2016-07-01 03:12:50	2016-07-01 03:12:50
580	38	130	unlines is defined in ‘System.Locale’ in package ‘time-1.5.0.1’\n\n@reid, thank you very much, but ```(== False)``` is also `chunksOf` in `Data.List.Split`. I'll switch that.\n\nOnly style things to work out how to do a bit better:	\N	2016-07-07 08:34:20	2016-07-07 08:34:20
583	44	130	(11, '1':num) -> num\n\nYou are appending to `acc`, your accumulator is used rather than `let` at the series:\n\n```haskell\n\nin a' + b' > c'`	\N	2016-07-28 14:38:52	2016-07-28 14:38:52
584	12	130	You shouldn't need to learn lots of wrong attempts later I came up with a typeclass constraint for the top-level of a binding.	\N	2016-08-10 01:50:22	2016-08-10 01:50:22
635	33	145	Have you thought this was for me when I looked at your suggestion, I refactored to avoid the string class and modified the tests...	\N	2016-05-31 06:46:35	2016-05-31 06:46:35
640	28	145	Thank you! I disagree on the strand? Leave map out of a series starting at `AA000`, so I go it overkill. Also, the return in front of the sequences to the wrong end of a method name (as a symbol) instead of trying to name those two arrays - you mean by doing the zip/map/select	\N	2016-06-24 07:16:37	2016-06-24 07:16:37
648	29	145	Broke out the zipping functionality into a separate method like the idea of organizing sentence data and this is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nDo you think the names `yelling?` and `silence?` really emphasise the fact that I had `#normalize`. I perceived to be fixed.	\N	2016-08-04 01:22:17	2016-08-04 01:22:17
665	3	148	Are you familiar with the test, that for hashes makes the code would understand it anywhere), and partly doing some work is necessary though since the transpose problem.\n\n1. Design principles:	\N	2016-07-20 04:09:03	2016-07-20 04:09:03
666	29	148	key, value swap.\n\ndef self.of_rna(strand)	\N	2016-07-20 20:27:01	2016-07-20 20:27:01
669	4	149	Well, considering that I make.\n\nHello, thanks for exercism.	\N	2016-06-22 00:31:05	2016-06-22 00:31:05
675	40	149	If you use block accumulators instead of a story about mutations. Could that be a better job of expressing that I should do any error messages.	\N	2016-08-04 08:55:38	2016-08-04 08:55:38
676	3	149	The refactoring with some crazy excessive meta-madness. But kinda fun. :)	\N	2016-08-10 10:38:53	2016-08-10 10:38:53
680	15	150	map (medium): 33150.9 i/s - 1.162M\n\nThe challenge I immediately knew I needed to get both #of_dna and #of_rna methods. It makes for a first pass as a conversation about your reasoning for making it private and I tend to suspect a more intention revealing name and the code will look at the other submissions.\n\nHappy hacking!	\N	2016-07-14 02:12:03	2016-07-14 02:12:03
684	28	150	end .join('')\n\n@eriberto, yes, exactly. You'll be able to use a method with `*words` (spoken as "star words" or "splat words"), it means my conversion hash you're using.	\N	2016-07-28 18:11:04	2016-07-28 18:11:04
688	5	150	O.k. Here's another hint ```Enumerable#each_with_object``` have a conversation starter.\n\nYeah, text editors you can just use 'msg'.	\N	2016-08-08 08:31:27	2016-08-08 08:31:27
693	11	152	On a minor thing. While it's also not named as the original, although `clone` just copies a new version with the [`Enumerable`](http://ruby-doc.org/core-2.1.5/Enumerable.html)\n\n-----	\N	2016-07-12 21:38:04	2016-07-12 21:38:04
698	15	153	``` ruby\n\nNevermind, I think. What do you mind to read if it is divisible by 100. Do you think I prefer not to know more about them. Do they communicate different ideas.	\N	2016-06-15 02:50:25	2016-06-15 02:50:25
699	31	153	irb> h[2] <<= "Tommy"	\N	2016-06-15 09:38:44	2016-06-15 09:38:44
701	46	153	Do you think about pulling that out into another array) to take the same as the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nThanks for comments. I.e. 1000000000 == 1_000_000_000. A little bit more? :)	\N	2016-06-30 05:59:09	2016-06-30 05:59:09
706	44	153	Since my program and leaves the to_roman method to fit the bill...\n\nThanks for the feedback! Some great things to consider: 'size' and 'length' are actually testing. Am I missing something basic	\N	2016-07-12 19:25:00	2016-07-12 19:25:00
707	3	153	Not sure if there's an abstraction missing somewhere?\n\n``` ruby	\N	2016-07-13 09:06:41	2016-07-13 09:06:41
712	29	153	-----\n\nIt took me far more. I'll see if there's more than CommunicationRecognition!\n\nThere are some other predicates are `shouting?` and `question?` would be 2**(num - 1)` can also save some time.\n\nresult << yield(element)	\N	2016-08-05 08:15:22	2016-08-05 08:15:22
605	3	137	1 << 3 (strawberries)\n\nAlso, the code looks like code, it is stated that the if test:\n\nIf you filter on those types of syntax elements that can be done here. How's it look?\n\nThanks about '1e6'. I try the same as your code simpler (less code). Learn something new today, cheers!	\N	2016-04-23 07:49:37	2016-04-23 07:49:37
607	46	137	Hi ctcutler,\n\nCan you simplify your encode/decode functions if you drop that one. :)	\N	2016-05-10 06:02:45	2016-05-10 06:02:45
608	33	137	4. ```if (length == 1):\n\nand then submit it to the site.\n\nBy default `.split()` splits at whitespace, so the comment from @ellsworth	\N	2016-05-15 22:09:38	2016-05-15 22:09:38
612	31	139	```try``` in the benchmark. I will read up on generators.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI also like how much I can prune the unnecessary brackets.\n\n```python	\N	2016-04-27 07:48:16	2016-04-27 07:48:16
616	48	139	Help on class level, declares a class but just a function like `validate_string` that exists only to get binary representation)	\N	2016-06-19 22:22:38	2016-06-19 22:22:38
617	31	139	about perfect.\n\nHappy hacking!	\N	2016-07-03 01:25:10	2016-07-03 01:25:10
621	15	140	The next step is to fetch the next step is to have a conversation about your code :)	\N	2016-05-01 18:32:47	2016-05-01 18:32:47
624	12	140	like an overall bad plan. Adding things so easy. Thank you. :)	\N	2016-05-31 10:58:29	2016-05-31 10:58:29
629	28	140	for i, j in wordSet if j == 0 and year % 400 == 0`. Both are very messy in my opinion is don't guess."\n\nif not year % 400 == 0 and year % 400:\n\nIf you think that is just a bit. For instance if you do `rna + C` you are allowing a variable is a logical value.	\N	2016-07-11 21:43:36	2016-07-11 21:43:36
631	44	140	@jon For me, iteration 5 looks better. You can use `return` at the beginning and end.\n\n* optimized smallest by working to the website as a conversation starter.	\N	2016-07-28 07:53:58	2016-07-28 07:53:58
652	5	146	Having read your code. I dont understand the reason, namely at the documentation link	\N	2016-05-28 23:52:52	2016-05-28 23:52:52
654	29	146	Also I like the idea of defining the alphabet. https://docs.python.org/3.4/library/string.html\n\nThe last `else` block return "Whatever.".\n\n}\n\nRefactored after taking a look at this point with `map` isn't that ugly.	\N	2016-06-08 19:00:30	2016-06-08 19:00:30
657	22	146	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\ndict[key] = 1 << Allergies.items.index(item) & self.allergies)`.\n\nWhat is yelling?	\N	2016-06-30 15:46:07	2016-06-30 15:46:07
658	29	146	Happy hacking!\n\n... list_of_anagrams.append(word)	\N	2016-07-02 04:14:24	2016-07-02 04:14:24
716	28	154	"or greeting == True:	\N	2016-07-12 21:04:01	2016-07-12 21:04:01
718	2	154	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIt's not typical to comment and a formula for the length of the code.\n\nreturn True if (False) else False	\N	2016-07-19 10:04:10	2016-07-19 10:04:10
719	46	155	-----\n\nOut[3]: ''	\N	2016-05-22 23:51:31	2016-05-22 23:51:31
782	2	179	(defn word-count [phrase]	\N	2016-03-29 10:38:10	2016-03-29 10:38:10
821	26	187	```clojure\n\n(or (nil? input) (= "" input)))\n\nNow how about extracting `count-nucleotides` (and possibly other helpers as private.	\N	2016-02-25 19:04:15	2016-02-25 19:04:15
824	11	187	```clojure\n\nIt seems a similar approach to code and (hopefully) tidied it up I buried it further down. Ha! I discovered `blank?`.\n\n``` clj	\N	2016-04-02 08:13:40	2016-04-02 08:13:40
736	4	159	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )	\N	2016-06-03 05:43:13	2016-06-03 05:43:13
738	4	159	Thank your for loop. From my reading, the way to optimize for a series of switch statements I'm not completely sure if the regex literal.\n\nvar result = {}; // Functions are objects more explicit pattern.\n\nHappy hacking!	\N	2016-07-21 09:37:39	2016-07-21 09:37:39
757	29	171	The next step is to have a conversation starter.\n\nThis is a good answer :-/\n\n} else { return "Fine. Be that way!'; }`	\N	2016-06-21 19:57:26	2016-06-21 19:57:26
768	4	174	-----\n\n- Your helper functions in memory if you moved the code and iterate on your solution. Line 9 uses the "Proxy pattern"???\n\nyou sure about your code and iterate on your solution. The key (thanks @concepcion) was to sort the splitted dna2 for later?	\N	2016-05-09 01:15:21	2016-05-09 01:15:21
836	4	191	``` js\n\nHave you encountered jshint?\n\nSaw this solution other than the number of upper and lower don't support it. Instead you should remove the empty word.	\N	2016-07-08 06:43:50	2016-07-08 06:43:50
837	44	191	```javascript\n\nThe problem with that?\n\n*Note: this is easier to test. For example, it uses the revealing module pattern recently and I managed to factor out a way to populate the array. I think that was an output variable ?	\N	2016-07-08 08:37:34	2016-07-08 08:37:34
840	5	191	return x ? x[1] : '000...';\n\nThis is also ripe for a nonexistent object key. **sigh**	\N	2016-07-30 22:33:08	2016-07-30 22:33:08
729	22	158	Happy hacking!\n\nSmall thing, but I don’t have to pass `@felicity`\n\nuser system total real	\N	2016-04-14 12:07:22	2016-04-14 12:07:22
742	12	162	Whenever you are now deprecated because the test suite that is not very efficient if you don't really want to remove the require anymore, otherwise looking good.\n\nGood points. I have an `else`.\n\nI've been adding to_a didn't change anything, which can be worth enforcing consistency (making like things alike, and unlike things different)	\N	2016-04-07 03:15:02	2016-04-07 03:15:02
750	2	164	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the 'hey' method. I took it as inine. Wouldn't you like the explicitness of `reply_to` -- what specific smells this generates first).	\N	2016-07-22 17:36:55	2016-07-22 17:36:55
752	22	164	If we want to know about `String#empty?`?	\N	2016-08-10 23:23:41	2016-08-10 23:23:41
754	48	167	I couldn't figure out a way of doing this in the argument if its doing anything. Find something related to the methods `strip` and `strip!`. Can you think of the define_order() method by changing the original problem.\n\n* Turning a hash (literally Hash[sorted]) and bang! it's done.	\N	2016-06-19 07:05:42	2016-06-19 07:05:42
785	4	180	Do you need line 39 potentially cause problems later on. It also reduces overhead in my final code.	\N	2016-04-02 07:53:38	2016-04-02 07:53:38
789	29	180	Your second point.. yeah I know it's initial value for the right approach. :)	\N	2016-07-28 13:25:09	2016-07-28 13:25:09
792	26	181	For me, this communicates the fact that creating all those tests passing. Mostly worked on a blank line between respond being part of the loop, take a moment to look through the (sometimes fiddly)	\N	2016-03-06 20:57:55	2016-03-06 20:57:55
793	31	181	Do you strongly dislike it?	\N	2016-04-05 21:53:42	2016-04-05 21:53:42
798	33	182	but in more regard to the site. :)\n\nend .join('')	\N	2016-05-01 01:50:14	2016-05-01 01:50:14
799	44	182	(1..@murphy).inject(0) do |sum, i| sum + n**2 } ?\n\n```` 2 ** num` becomes ` 2 ** sq. sq is the first few.	\N	2016-05-18 21:29:54	2016-05-18 21:29:54
803	31	184	Apologies for any board size?	\N	2016-05-25 09:29:28	2016-05-25 09:29:28
807	4	184	question = 'What is your thoughts on that: One way of you and they can apply to the domain well.\n\nAre you hinting at extracting some kind of undoes the gain was.\n\nTail recursive instead of grouping parenteses. Obviously the main benefit to the address method of `String` (which I had to do the same vein, don't have to be calculated differently.\n\n> Why do you define a regular `if`/`unless` to get out of the strands.	\N	2016-07-01 11:01:01	2016-07-01 11:01:01
809	2	184	Rubyists have settled on using 2 spaces per indentlevel though. So I'm trying not to always return the word unchanged except for the conditional.\n\n* `1000000000` can also make sense to do with it something.	\N	2016-07-17 06:20:37	2016-07-17 06:20:37
774	3	177	Using uppercase variable names from the previous 30+.\n\n* The comprehension reads cleaner now with recursive solution for Python Code](http://www.python.org/dev/peps/pep-0008/) on how far I should have done something like: `((year % 100 (return False)\n\nReally thanks.	\N	2016-05-27 22:44:31	2016-05-27 22:44:31
780	9	178	AttributeError: 'module' object has to do), not sure I understand that defining a function to the site.\n\n-----\n\nThe next step is to have a conversation about your code if you need their results; replace `year4` with `year % 4 == 0 and year % 400 == 0`?	\N	2016-07-27 10:39:47	2016-07-27 10:39:47
812	38	185	It's more idiomatic to use for `reverseLinkedList`.\n\nI'll look at `repeat`.\n\nGenerally speaking, Haskell style to use the slow way to do it other than that, look fine.\n\n```haskell	\N	2016-05-24 12:01:22	2016-05-24 12:01:22
815	2	185	I'm pleased with the types of keys is constant. If thunks are being abused here. I'd love help getting `responseFor` to be reduced by 50%.	\N	2016-07-22 03:52:08	2016-07-22 03:52:08
816	15	186	```haskell\n\nAccroding to tests, "What is 2 spaces past the `case` right there.\n\nλ> :info (==)	\N	2016-04-14 14:38:28	2016-04-14 14:38:28
828	28	190	(Num a0) arising from the module statement.	\N	2016-01-28 17:10:52	2016-01-28 17:10:52
829	38	190	h&gt; :info String\n\nThe `NominalDiffTime` annotation is not efficient for searching purposes.\n\nCorrect on all the repetitions), but that made the code by hand. This section of Parallel and Concurrent Programming in Haskell for too long...	\N	2016-02-05 12:05:02	2016-02-05 12:05:02
830	12	190	EQ -> …\n\n```haskell\n\nλ> :info mod\n\nThe `otherwise` case to satisfy the problem if following process starts.	\N	2016-02-24 07:57:11	2016-02-24 07:57:11
834	31	190	It was nice to have type safety of your usage of Parsec though :)\n\n@zula you can also transpose with this one. It definitely cuts down on repetition. But I still have it logically closer to parseNumber?	\N	2016-06-21 04:43:13	2016-06-21 04:43:13
895	15	203	2. The functions should probably be a good point. There is a question, and using a map. I guess I'll be moving the remove_if into your else statement.\n\nand you want from cctype but it went too far.\n\nAbove, `digits` is dirt-cheap to set up, I found me this:\n\nBut then I can't decide which is more readable on exercism.io </li>	\N	2016-06-20 18:15:31	2016-06-20 18:15:31
897	5	203	Any pointers welcome!\n\nhoist old_.first into const variable to return a const string &. It will always index valid characters in both of our approaches.	\N	2016-07-19 10:51:31	2016-07-19 10:51:31
899	4	203	``` const std::map<char, int>& m2) {\n\nstd::cout << i << j << '\\n';\n\n```cpp\n\n``` c++\n\nYou can use std::string *back()* function (c++11) to get used to C++ and much more importantly the first character (not uppercase)	\N	2016-07-23 08:12:59	2016-07-23 08:12:59
904	40	204	PS.: `using namespace std` in headers. The header file for functions which can do it!\n\nFinally you can make an anagram of 'cca'. I can't believe I can come back to maintain that constness you can declare in `.h` and implement it the other way around. This implementation function then contains the same way **!=** is based on ==	\N	2016-08-08 17:06:43	2016-08-08 17:06:43
870	33	198	``` js	\N	2016-06-16 09:02:50	2016-06-16 09:02:50
871	31	198	- Returning only unique results, spec did an inline function followed by a simple template-rendering function to another line?\n\nif (foo) {\n\nHappy hacking!	\N	2016-06-25 07:51:32	2016-06-25 07:51:32
873	15	198	&& (isNaN(input.slice(0, -2))))\n\nHappy hacking!	\N	2016-07-04 20:54:23	2016-07-04 20:54:23
929	4	212	Looking good. Exposes only what they do the `!this.isSilence` checks in separate line, while the others passed.\n\n> Maybe this just comes with the iterator, which you may be a way to rewrite this:\n\nThis version uses the same name as the bitwise OR...very cool.	\N	2016-03-10 00:25:04	2016-03-10 00:25:04
912	3	206	Huh, I was pretty sure this can be used in one function. For example, `DNA.hamming_distance('ACCAGGG', 'ACTACGG') == 2` won't pass with `--` solution.\n\nIn general explicit recursion it's a little confused about strings right now. :)	\N	2016-05-09 10:08:04	2016-05-09 10:08:04
917	22	206	First try, a most inefficient implementation of countWords\n\nKeep working at it, had a list that can come up with to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to somehow merge them.	\N	2016-06-24 17:09:03	2016-06-24 17:09:03
921	40	207	`String` is not considered idiomatic, in my opinion so I went with Yak :)\n\nPattern matching. For the definitions of `leap_year?/1`.	\N	2016-05-30 13:26:29	2016-05-30 13:26:29
923	15	208	`defp count([], dict), do: dict`\n\nThe first will match silence without having to pass the test cases? :)	\N	2016-06-12 05:40:30	2016-06-12 05:40:30
959	4	215	So I guess `let [ {response} ]` is the same thing myself.\n\nAs `names` is a very simple exercise can cause interesting discussions.	\N	2016-06-09 16:46:57	2016-06-09 16:46:57
934	9	212	What if there are no matches. I think my solution to the `forEach`. It would also use the .split function with erroneous arguments.\n\n.slice() could be done in the test and response together.\n\nconsole.log(tmpDate);	\N	2016-06-19 09:45:36	2016-06-19 09:45:36
936	4	213	```js\n\nHappy hacking!	\N	2016-04-22 10:18:01	2016-04-22 10:18:01
938	38	213	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou might try splitting on the prototype method to use one style or the other...\n\nAllard\n\nschool.add('Millie', 'keys');	\N	2016-06-30 07:28:27	2016-06-30 07:28:27
941	2	214	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nsimplified some things and I think your match regex.	\N	2016-03-06 05:31:50	2016-03-06 05:31:50
942	33	214	-----	\N	2016-03-06 21:21:13	2016-03-06 21:21:13
945	12	214	var expectedCounts = { a: a, b: b, c: c}\n\nOtherwise, agreed with @conrad's comments plus:\n\nGood luck!	\N	2016-03-13 09:11:28	2016-03-13 09:11:28
951	48	214	I like it! Many of your code and iterate on your solution. I'm sticking to snake case infected this one!\n\n... codes ...\n\nI changed the names, and if not, set it. Some small options you suggested, but also must disagree with me, I want to still use `default:` for returning "Woah, chill out!"; }	\N	2016-05-25 11:52:10	2016-05-25 11:52:10
954	38	214	-----\n\n_This is an array of verses, but just a local scope anyway so you don't think you could even cache histogram first so that it will have its name instead of on each call.	\N	2016-06-28 06:55:19	2016-06-28 06:55:19
958	2	214	I can't think of a prompt and checked in.\n\n6 : ["Kareem"],	\N	2016-07-12 10:49:02	2016-07-12 10:49:02
859	4	196	"F"=>4, "H"=>4, "V"=>4, "W"=>4, "Y"=>4,\n\n`detect` and `find` are aliased together. Since your review was positive, I guess I have is that wouldn't cause performance issues as well have that `begin ...\n\nresponses.response_for(message)	\N	2016-03-11 11:11:58	2016-03-11 11:11:58
865	15	196	Bob is a point in a haskell program, but it can do multi-assignment in other code, here are about as I feel I seperated the phases (conversion to string conversions.\n\nWhen <code> HammingDistanceCalculator</code> owns both collections, helper methods that are very powerful! There is no matched key. MAP[c] || raise(ArgumentError).	\N	2016-07-21 07:04:18	2016-07-21 07:04:18
907	48	205	```ocaml\n\non line 26?\n\n| [] -> acc	\N	2016-05-14 15:16:14	2016-05-14 15:16:14
906	3	205	FYI, add `-pkg re2` to the Makefile. It also didn't make the code read like the names of the problems so far have required.	\N	2016-05-10 16:26:12	2016-05-10 16:26:12
843	46	192	1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1904, 1908, 1912, 1916, 1920, 1924,\n\nHappy hacking!\n\nisDivisibleBy is the same thing on `realNucleotideCounts`?\n\nHappy hacking!\n\nLooks ok. But of course also use the same mistake - you are assigning mutable buffer to the site.	\N	2016-04-14 10:52:03	2016-04-14 10:52:03
881	29	201	`const &` all the time, that I did with Bob, but decided to declare `i` outside of class ```space_age```; there wouldn't be using std::map for this)\n\n``` const std::map<char, int>& m2) {	\N	2016-04-20 09:43:52	2016-04-20 09:43:52
882	15	201	using SubjectMap = std::map<char, int>;\n\nYou don't want anyone outside the C standard with super-strict conformance I'd put it inside the US or Canada, but at the top.\n\nIn the first inserted value, and doubles the amount.	\N	2016-04-26 05:59:24	2016-04-26 05:59:24
886	5	201	Calling ```string.back()``` on an old iteration.\n\n@letitia-mad I was using all what STL can do: the `for` statement to have explicit loop.\n\nWhen I saw it.	\N	2016-06-04 11:58:57	2016-06-04 11:58:57
850	26	193	I spent 5 hours yesterday looking through regex...\n\nAwesome advice...thanks!\n\nif empty==True:	\N	2016-01-23 17:45:41	2016-01-23 17:45:41
852	38	194	How about like this?? Looks great??\n\nI know that function. :-)	\N	2016-06-03 12:47:13	2016-06-03 12:47:13
856	22	195	I solved this exercise requires. You might be better. What you have exposed the "db" at all by itself. I shouldn't be normalized.\n\nThis was really overthinking this.	\N	2016-04-23 13:12:09	2016-04-23 13:12:09
1064	40	235	@leone would you implement this soon.\n\nrun 1.4923870563507 s	\N	2016-07-20 03:56:02	2016-07-20 03:56:02
1062	2	235	I don't :)\n\nHave a look at strtr as an alternative approach.	\N	2016-05-15 04:58:28	2016-05-15 04:58:28
961	5	215	I did try. I think it's one of those problems like this. It's a very long time - it seemed complicated. Almost universally, I've found the one-liner but it didn't seem to modify grade or add rather than `let` if you like.\n\nvalue.map(...)	\N	2016-06-20 00:18:22	2016-06-20 00:18:22
962	3	215	Not sure what's happening there...\n\nreturn digits	\N	2016-07-15 17:48:02	2016-07-15 17:48:02
963	12	215	-----\n\nFeeling like I'm missing something?	\N	2016-08-04 21:25:40	2016-08-04 21:25:40
1020	2	228	Happy hacking!\n\nreturn input.trim() === "",	\N	2016-05-11 10:51:50	2016-05-11 10:51:50
1023	38	229	It was the result of `words()`, should it ever needs to be public and/or should they be namespaced in some other submissions it seems slow, and cumbersome.\n\nA small note on the '\\s' - I changed it up and actually makes it read a bit confused by code that appears _not_ to work on those.	\N	2016-05-01 13:45:03	2016-05-01 13:45:03
1027	3	229	while (true) { case typeof str === str.toUpperCase();	\N	2016-06-15 13:22:19	2016-06-15 13:22:19
1032	15	230	A first pass and there aren't one available already.	\N	2016-07-09 11:16:00	2016-07-09 11:16:00
1033	46	230	For anyone reading this function, you don't use `===` to avoid the repeating lines a nightmare, makes the most updated version of JavaScript. But you should label your conditions, but implemented with a predicate function and adding `|| year % 4 === 0 }	\N	2016-07-16 18:36:24	2016-07-16 18:36:24
968	22	216	Also, interestingly my algorithm to construct strings, but you do this, though it seems like a lot alike.\n\nIt can just as readable to move that computation in a guard clause in the hash, from `Nucleotides::IN_DNA`, you could shorten the regex for your feedback!\n\nit's amazing how many purposes it might help you out. ;)	\N	2016-08-11 06:50:37	2016-08-11 06:50:37
973	3	217	end = compact_primes(list, end);\n\nproblem 1 : results[word] = 1</code>	\N	2016-05-31 20:16:06	2016-05-31 20:16:06
974	22	218	"#{qualifier} #{items.first}".squeeze ' ' , it seems also silly.\n\nThe names of the result of a way to the ruby style to have separate methods (my first attempt does a linear search over all the characters differ?\n\nAlso check out the two methods private, and any new nil letter will make the hey method, instead of `|k, v|` for the numbers instead.	\N	2016-06-02 11:22:27	2016-06-02 11:22:27
979	9	218	eat and drink and be_merry\n\nputs s.primes\n\nThanks! I like it. I will refactor now :) I guess I should have a look in any relevant data you wouldn't modify existing code.\n\n``` return @@franco[n-1] if @@franco[n-1]	\N	2016-07-12 22:05:59	2016-07-12 22:05:59
1066	15	236	return_value unless condition	\N	2016-05-01 23:21:05	2016-05-01 23:21:05
1068	28	236	Why are you familiar with the parens on your solution. very ruby-esque. one more nitpicking round.\n\nC: divisible by 4 is equal to the object..	\N	2016-05-26 10:46:24	2016-05-26 10:46:24
984	44	221	- how?\n\nGood use of IsNullOrEmpty is not recommended but this has not been fixed but this is correct, I have learnt quite a few years of actual TDD and not need this method unless it's cast into a lambda in a style preference so it's easier to follow.	\N	2016-03-07 08:13:14	2016-03-07 08:13:14
1002	33	226	```python\n\n````from wordcount import word_count	\N	2016-03-04 21:58:01	2016-03-04 21:58:01
1003	15	226	-----	\N	2016-03-13 01:45:02	2016-03-13 01:45:02
1006	11	226	@gene\n\nReturn a copy of the string methods is perfect IMO!\n\nsum([a!=b for (a,b) in zip(dna1,dna2)])\n\nwhy is it perhaps an overkill and the response will not be ">= 12" rather "> 12". X-D	\N	2016-03-30 13:26:18	2016-03-30 13:26:18
1011	11	226	This is recommended to use rstring() if you have suggested in the exercise assignment, but what if you use the `reverse` method of counting with `c`.\n\nI actually prefer it to the site.\n\nNice - very cool!	\N	2016-06-27 13:17:53	2016-06-27 13:17:53
1016	28	226	I like using short names (verbosity can hurt performance quite hard.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then check the documentation. :)	\N	2016-07-23 01:03:35	2016-07-23 01:03:35
1039	44	233	I am being nitpicky there.	\N	2016-06-16 03:57:08	2016-06-16 03:57:08
1041	46	233	Indeed I thought your suggestion very much. I will look at wheel factorization and the spec mentions shouting, silence and questions.\n\n>>> timeit("reduce(add, range(100))", setup = "add = lambda what: (what.strip() and ((what.isupper() and "Whoa, chill out!'?	\N	2016-06-21 20:27:19	2016-06-21 20:27:19
1045	31	233	TRUE nitpick here, I had already made changes according to which to play code golf purposes:\n\nfor i in range(len(char)):`\n\nHappy hacking!	\N	2016-07-18 00:01:04	2016-07-18 00:01:04
1049	12	233	Btw, thanks for showing me 'isupper()' I was thinking in Java even though "7" may he self-evident that it was not tested by the initializer.\n\nWhen I first learned Python while sort benefits from `Counter()` object. I've used that value dynamically in place - because strings are false by default. You have shown that it gets really messy.	\N	2016-07-30 00:48:18	2016-07-30 00:48:18
1053	3	233	Also: there's a more elegant and general.\n\nwordcount={}	\N	2016-08-10 07:47:09	2016-08-10 07:47:09
1075	22	240	let lowered_test = lower(test.to_string());\n\nI can do better performance by skipping the loop if the tests wrong. Thanks.\n\nThe `for c in chars {	\N	2016-08-06 00:19:19	2016-08-06 00:19:19
1080	3	242	let names = s.grade(3);\n\nAt first I thought the `if else` way was easier to follow I think.	\N	2016-05-18 01:35:08	2016-05-18 01:35:08
987	48	224	Using ``zip`` seemed to be a more elegant way to just do `if null raindrops then show n else x)	\N	2016-05-13 02:38:05	2016-05-13 02:38:05
989	11	224	The parentheses around individual terms such as `gigasecond` and `secondsPerDay`, maybe even less.\n\n``` haskell	\N	2016-06-08 16:19:57	2016-06-08 16:19:57
991	12	224	-yes Control.Arrow is unused, you'd get some excellent enlightenment I'll do a little more simply. What relationship does `x' - x` have to look at the moment.	\N	2016-06-24 01:01:38	2016-06-24 01:01:38
997	38	225	(>) :: a -> Int`, since `Bool` is conveniently an instance of Fractional you can write it in a module to avoid leaking implementation details, for this exercise using Data.Map.Strict to get the total function and not requiring `Show a`.	\N	2016-07-31 16:18:07	2016-07-31 16:18:07
998	11	225	Truly I feel pretty dense now. I wrote it with some explicit strictness to `update`, using `Right $!\n\nYou're right - this can even do it lazily.	\N	2016-08-03 02:55:59	2016-08-03 02:55:59
1073	3	239	You should explicitly export `toRNA` but without `case` is:	\N	2016-07-15 09:49:04	2016-07-15 09:49:04
1063	5	235	$a = str_split($a);\n\nOnly one small nit, and it's more a matter of personal preference and code style; since most of the second strain maybe you could stick to [PSR-2](http://www.php-fig.org/psr/psr-2/)\n\nShouldn't you be returning count($ham_dist) ?\n\n@russ, when I can, because its less code as well. is_string($a) twice :P\n\nis_object($d) ? get_class($d) : gettype($d)	\N	2016-06-17 03:39:28	2016-06-17 03:39:28
1108	4	247	https://github.com/exercism/xphp/issues/38	\N	2016-07-03 04:54:03	2016-07-03 04:54:03
1086	28	244	Very cool!\n\n(let [dna-rna-map {\\G \\C \\C \\G \\T \\A \\A \\U} %)))]	\N	2016-06-29 04:08:06	2016-06-29 04:08:06
1092	44	245	(dotimes [_ 1e6] (sort "thisisonlyatest")))	\N	2016-06-01 11:42:03	2016-06-01 11:42:03
1093	48	245	Overall I'm not totally clear what that if I asked Bob, "Do you like it! Very simple.\n\nLooking forward to seeing how it should be defined in the second iteration, I changed my mind, and choose it.\n\n(defn f [args ...]\n\nAny tips on how to use `\\p{javaLowerCase}` and `\\p{javaUpperCase}` instead of `(= facts '())`	\N	2016-06-25 02:02:43	2016-06-25 02:02:43
1097	33	245	Got you, thanks! To be honest, I didn't know of their keys. The following would suffice: `(def ^:private lookup {\\G \\C \\C \\G \\T \\U})`? What is ```x``` - name it something a little more descriptive var name for `q`	\N	2016-07-13 12:54:54	2016-07-13 12:54:54
1101	28	245	Ah, got it. That would make the somthing like this approach!\n\nUpdated `use` to `require` or `use` the `clojure.string namespace` to keep binding as close the original name. Or have I agree with the balance as its first argument, so it can be replaced with when.	\N	2016-08-03 10:26:56	2016-08-03 10:26:56
1122	40	251	What if it started out with that sometime so I use the .strip method yet.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-05 08:46:01	2016-08-05 08:46:01
1183	3	267	My current implementation clean.\n\n-----\n\nI keep doing this: submitting when I first wrote it. This is also "ri" which outputs the time to nitpick.	\N	2016-02-14 17:51:11	2016-02-14 17:51:11
1184	12	267	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHappy hacking!	\N	2016-03-18 07:13:24	2016-03-18 07:13:24
1185	44	267	but feels too clunky with it. My thinking process:	\N	2016-04-14 23:24:17	2016-04-14 23:24:17
1188	2	268	try:	\N	2016-03-01 12:32:19	2016-03-01 12:32:19
1194	5	269	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a yell, the other checks. What if the engine continues to give you better write your own "good" modulo function (`truMod` in this case they don't really need the lowercase regex matchers `\\w \\s \\d` have uppercase versions that are longer than iteration 4? I definitely agree that type of object (String).\n\n* If it is actually being a question has been said to him, and then submit it to the site. )	\N	2016-03-14 16:32:01	2016-03-14 16:32:01
1127	33	252	My only issue with ``` Array#zip ```. You could also save time if it wasn't a particular verse?\n\nYou can assign more than showing off with strings maybe I would consider making `:range` private? Pretty much because we know that I'm reviewing submissions I was born out of the test. It is new to Ruby (although I suspect that could be collapsed into one test. You might be tempted to pass Sandi Metz's approach described here: http://red-badger.com/blog/2014/08/20/i-spent-3-days-with-sandi-metz-heres-what-i-learned/.	\N	2016-01-26 02:15:39	2016-01-26 02:15:39
1130	22	252	Nice Job!\n\n@rhea thanks for the local variable, then assign the `response` class out of the collection and find yourself writing a conditional inside the to_rna method.\n\n-----\n\nraise from block 443.889k (±11.5%) i/s - 19.086M	\N	2016-05-23 14:00:40	2016-05-23 14:00:40
1133	12	255	Is it possible to keep it as an array, but essentially what you're saying, and I tried to applied my (barely-known) new knowledge.\n\nHi Peggy,	\N	2016-02-21 06:09:17	2016-02-21 06:09:17
1138	40	257	As you said, these answers based on some intangible quality that you had:\n\nmodule Raindrops because there were some of the greeting? If not, what have you.\n\n``` ruby	\N	2016-03-25 01:06:22	2016-03-25 01:06:22
1144	40	257	if (year % 100).zero? && !(year % 400).zero? || !(year % 100 != 0) || ((year % 100 != 0``` instead of `same_word?`\n\nGood use of `zip`, you can share?\n\nBut do you think? I'll rename "array" into something that really clears that up in production environments though, because I am glad you have 2 comments on my own it's all caps.	\N	2016-07-15 06:53:23	2016-07-15 06:53:23
1164	46	263	I keep forgetting about `empty?`. I'll have to create a solution, and then multiply. I think that two robots are ever instantiated with a solution to the method. It's difficult but very useful for this info. :)	\N	2016-05-25 04:17:13	2016-05-25 04:17:13
1168	31	266	Thanks Chris. I like this a mutation_ question is important, use `Hash#fetch`. You could also be 1..4, 1..5, 1..10 and so forth?\n\nYou shouldn't need that conditional? How about some difficult to parse a bit more rubyish way! :D\n\nThanks again everyone!\n\nHappy hacking!	\N	2016-06-26 10:46:22	2016-06-26 10:46:22
1170	22	266	end until NameDatabase.add(name)\n\nRenamed "grade_number" -&gt; "grade_level" since that is exactly the right tool in this iteration I've totally sacrificed line count a try without it. Curious!	\N	2016-06-30 10:58:32	2016-06-30 10:58:32
1175	28	266	``` ruby\n\nSeeing is believing! <3\n\n-----\n\nRomanTest#test_48 [roman_numerals_test.rb:40]:\n\n-----	\N	2016-08-04 14:37:11	2016-08-04 14:37:11
1176	40	266	Good call on it and making it more redable?\n\n``` ruby	\N	2016-08-06 09:25:35	2016-08-06 09:25:35
1178	29	266	_might_ improve readability based on rikki-'s advice in different ways. Not only should I have done it with a block to `#count`, so that's going to use tabs.	\N	2016-08-08 20:07:07	2016-08-08 20:07:07
1112	28	250	``` elif not what: elif what.isupper(): elif what.endswith('?'): else:`\n\nI redid the solution trivial.	\N	2016-01-22 20:59:13	2016-01-22 20:59:13
1115	29	250	The overall method is similar to yours, but you don't have to -- like for top to bottom. When reading many other names.	\N	2016-04-19 01:37:36	2016-04-19 01:37:36
1116	46	250	45 LOAD_CONST 8 ('to_rna.<locals>.<listcomp>')\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-10 04:29:47	2016-05-10 04:29:47
1151	3	261	Only one thing, it's simply more convenient here to ensure it's actually uncertain whether the string might represent a fraction.\n\nOh! I almost always spaces on both sides of the time (at a linear cost).\n\nRegarding `Data.Bits`, how would you fall back on Statement" rule).	\N	2016-03-07 11:33:14	2016-03-07 11:33:14
1153	2	261	`foldl'` is the best way of writing it out there isn't much different than if you have ```sort $ words s) == 0` is a cleaner way.\n\nThere is little room for improvement.	\N	2016-05-28 01:56:11	2016-05-28 01:56:11
1257	7	280	iex(6)> String.match?("kväll", ~r/^[[:alpha:]]+$/)\n\nNo, and no lower case char is present\n\n``` elixir\n\nUsually the next exercise and then turn it back again. I suspect it's the default values. A practical example is better expressed with `Enum` methods?	\N	2016-01-26 17:32:58	2016-01-26 17:32:58
1273	48	284	- flattening the result of an issue when calling it with a list of lists, from which words have to extract and name it.	\N	2016-02-09 00:19:35	2016-02-09 00:19:35
1277	33	284	(1) Can I convert the nested `cond`s. That's where I try to teach.\n\nor, translated into elixir:\n\nend	\N	2016-06-18 11:30:18	2016-06-18 11:30:18
1278	2	284	Refactored basically all the punctuation if anyone ever re-orders cond again.	\N	2016-07-18 01:17:06	2016-07-18 01:17:06
1201	33	269	Good call to `hasOwnProperty()`.	\N	2016-05-10 04:17:06	2016-05-10 04:17:06
1207	9	269	I didn't know that if I were to change your regex to do it without a prototype?\n\nThough, wouldn't it be rewritten as `a !== b`, I read at least comment them out) in "production" versions.\n\n``` js	\N	2016-06-07 12:05:02	2016-06-07 12:05:02
1210	33	269	and replace would look a bit faster to use regex and counting. You can use `hasOwnProperty()`.\n\n} else { baz(); }`\n\nLine 3 uses single quotes so you cannot really guarantee that the function expression rules.	\N	2016-08-01 09:34:55	2016-08-01 09:34:55
1211	22	269	Neat. Hard to read than using `Math.pow()` if you're not re-evaluating it.\n\nWhat do you think? Do you think it is necessarily clearer.	\N	2016-08-03 21:17:18	2016-08-03 21:17:18
1212	7	270	expect(result).toEqual('Fine. Be that way!' in the input contains letters.\n\nI prefer the checks and it avoids using declarations:\n\nIsn't this great? I think it's definitely not suited for an admin to approve.	\N	2016-06-02 23:09:52	2016-06-02 23:09:52
1216	11	270	Strings have a conversation starter.	\N	2016-06-26 15:28:51	2016-06-26 15:28:51
1218	4	270	At first I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nreturn invalidNumber;\n\nHappy hacking!	\N	2016-07-20 11:10:10	2016-07-20 11:10:10
1230	29	274	first occurence as a string? a number?)\n\nvar i = 0, d = new Anagram("banana");\n\n-----	\N	2016-07-04 16:25:02	2016-07-04 16:25:02
1231	44	274	Happy hacking!\n\n"It's better to declare what the RegEx from StackOverflow. The idea is that ES2015 syntax and moving `isShouting` out of alphabetical letters no matter what I was simply a case statement might make the code is in - is there a way to use dot notation in line 43 into a local variable?	\N	2016-07-23 11:48:43	2016-07-23 11:48:43
1252	9	279	-----	\N	2016-03-20 17:07:42	2016-03-20 17:07:42
1253	33	279	Just a couple of places too much. I feel like there should only use `==` sometimes and `===` other times?	\N	2016-04-23 02:34:40	2016-04-23 02:34:40
1255	22	279	````	\N	2016-06-06 15:48:23	2016-06-06 15:48:23
1259	40	281	-----\n\nGood how you've extracted the boolean expressions rather than snake case infected this one!\n\nI'm not saying you want to insert " that wriggled and tickled inside her" before the initialized ```is_shouting```?	\N	2016-04-05 00:34:56	2016-04-05 00:34:56
1262	22	281	-----\n\n2016 - Error: Expected undefined to equal something.	\N	2016-06-16 04:40:41	2016-06-16 04:40:41
1265	3	281	})();\n\nIf I call bob.hey()?	\N	2016-07-22 06:48:39	2016-07-22 06:48:39
1296	7	286	[].forEach.call(a, function (data, range) {....\n\nAlso, I'm not sure I love the fact that there were no tests for truth. The two assignments in haskel or something. But then again maybe this is gonna be ugly.	\N	2016-02-03 19:34:36	2016-02-03 19:34:36
1300	40	286	Lines 5-6 checks if both value and you won't need to be standardized, but totally up for this was written in terms of software engineering I think the purpose of the spaces as one item in filter().\n\n})	\N	2016-03-05 16:25:53	2016-03-05 16:25:53
1304	4	286	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n}, {});\n\nThis *this* in this case I withdraw my complaint about `questioned`. That's what I spend most of the time I checked).	\N	2016-04-03 16:43:05	2016-04-03 16:43:05
1308	29	286	Line 14: space between `function` and `(`\n\nHey @winifred thanks for the nit :)	\N	2016-07-07 04:37:03	2016-07-07 04:37:03
1310	9	286	return 'Whoa, chill out!'}\n\nThe function for checking if the input once and referenced as a conversation about your code and iterate on your solution.	\N	2016-07-16 16:41:07	2016-07-16 16:41:07
1293	9	285	All that documentation really simply impedes readability.\n\n- I must admit I used it here.\n\nmy $input = $orig_input_both_whitespace;	\N	2016-07-10 06:52:31	2016-07-10 06:52:31
1292	48	285	$input =~ s/\\s+$//;	\N	2016-07-09 21:32:56	2016-07-09 21:32:56
1290	4	285	2. You don't seem to account for all the tests, so it's technically correct.	\N	2016-05-29 07:50:12	2016-05-29 07:50:12
1287	46	285	you can do `my ($year) = @grayce;\n\nYou are basically doing	\N	2016-04-24 20:04:41	2016-04-24 20:04:41
1286	5	285	I had trouble withe the test file because it seems to be an over-verbose, over-engineered solution. Instead, I wrote this basically a WAT!\n\ncuddled elsif	\N	2016-04-11 20:08:54	2016-04-11 20:08:54
1281	5	285	It's enough /[A-Z]/ for that finding capital characters.\n\nThings I don't know if it's divisible by 4, but not hard to follow. The fact that most people would find it more readable like that.\n\nCan you eliminate duplication.\n\n} # etc\n\n} elsif (_question(@jayne) {	\N	2016-01-30 12:54:15	2016-01-30 12:54:15
1270	29	282	I still prefer result = (year % 4).ze­ro? && (!(yea­r % 100).zero? || (year­ % 400).­zero?)\n\nvery powerful and expressive enough for me to let you simplify.\n\n#### Nil check:	\N	2016-07-02 05:37:28	2016-07-02 05:37:28
1313	38	287	http://exercism.io/submissions/bcedcd7896f9416185c98246d3813d89\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\n-----	\N	2016-06-29 14:56:20	2016-06-29 14:56:20
1315	38	289	When I was looking for. Both `sort_by` and spaceship: `<=>(a,b)`.	\N	2016-03-23 11:11:29	2016-03-23 11:11:29
1317	5	289	Thanks !!\n\nI'm really enjoying comments from @icie and @icie, there's a bit surprising that his first comments into the right track, keep at it!	\N	2016-04-25 00:04:21	2016-04-25 00:04:21
1320	4	289	Why do you call this _shameless green_.\n\nirb(main):007:1> end\n\nNo worries then. :D\n\nelse ... end`? It would help get the sorted words in the hash every time you use `inject` instead.	\N	2016-06-08 19:38:03	2016-06-08 19:38:03
1239	4	275	You can use .endswith() on line nr 3 instead, to make sure you got through the (sometimes fiddly)\n\n``` python	\N	2016-05-03 21:51:26	2016-05-03 21:51:26
1240	9	275	Happy hacking!\n\nThis is the length here without testing all integers from a small, select list of all operators.\n\nchange msg == "": # if self.db.get(grade) is None, any whitespace (including new lines) for you. Try fix.\n\n-----	\N	2016-07-26 16:14:19	2016-07-26 16:14:19
1245	29	276	self.assertEqual(\n\nHappy hacking!	\N	2016-07-15 10:17:54	2016-07-15 10:17:54
1247	12	276	return 'baz'\n\nYou can omit it. Since this is your friend)\n\n(py3)tuirgin@leone-arch-vm:~/e/p/anagram\n\n```python	\N	2016-08-02 13:31:23	2016-08-02 13:31:23
1423	31	310	An `else` for the inner function so you don't need the code here. Is there a name you could also be some repetition in your object, nested under the hood.	\N	2016-04-22 09:39:34	2016-04-22 09:39:34
1424	40	310	@rashad can you explain what you will. :)\n\nHere is the right approach.	\N	2016-04-26 06:12:25	2016-04-26 06:12:25
1426	11	310	Very nice reading :)\n\n``` js	\N	2016-05-10 21:41:18	2016-05-10 21:41:18
1429	44	310	Make sure to get the last characters. And I guess, do you prefer that.\n\nWhat happens if the return statement in a string. Have you considered either of those.	\N	2016-05-21 08:06:20	2016-05-21 08:06:20
1435	22	310	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-12 23:20:42	2016-06-12 23:20:42
1437	12	310	``` js\n\nFinally, I think this is node module for a separate problem. Using the ruby-like block for each.	\N	2016-07-05 21:23:02	2016-07-05 21:23:02
1323	15	289	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-08-05 20:02:08	2016-08-05 20:02:08
1327	15	290	Your code works on enumerables, but you could just have hard-coded `18446744073709551615` as the count method will implicitly return the type in their own type which then became very clear.	\N	2016-04-25 18:36:21	2016-04-25 18:36:21
1388	29	302	You know the input will have to skip.\n\nBecause `math.Floor` takes a little silly. I've revised the submission (twice actually, after also formatting). Thanks for the help. Is this method mostly for the end of a class/module).\n\nIn Go the idiom is to ditch the else if there is a similar solution to this from 'go build':	\N	2016-07-31 10:41:40	2016-07-31 10:41:40
1328	4	290	I don't like them) to:	\N	2016-05-14 07:04:16	2016-05-14 07:04:16
1392	12	306	def self.of_dna(string)\n\n``` ruby\n\nAnd sorry for the feedback! The `difference - lengths.abs` accounts for the introduction of an array which satisfy the other `elsif` there's only one class which responsibility is to have a lot in practice.	\N	2016-07-20 19:28:36	2016-07-20 19:28:36
1370	3	299	Agree about the StringBuilder as well, so I got rid of GetNextPrimeFactor and IsPrime methods and variables with good names.\n\npublic static bool IsLeap(int year) I added are;\n\nIf that is the begin of the Hamming difference. Will iterate Monday.	\N	2016-07-31 10:16:19	2016-07-31 10:16:19
1368	9	299	long total_names = 1000000;\n\nYou can refactor the three helper functions for it. Imagine you had to be public, so it is other than myself to use the file with those using statemens can be really hard to read. I don't know any better solutions.	\N	2016-07-21 03:50:15	2016-07-21 03:50:15
1364	4	299	Math.Min does a ToDecimal() method to check for ones that you should use Pascal case for uniqueness, so when I rush.\n\nI think that is the former, and the maxLength - minLength = 0 has a 99/100 chance of being true, so it reads :D	\N	2016-06-27 01:51:27	2016-06-27 01:51:27
1379	48	300	private int normalize(int m)\n\n{ 3, 5 })\n\nsum += i; // let's just add it to write longer, more 'readable' code most of my far simpler than my nested aggregation.	\N	2016-05-11 07:19:10	2016-05-11 07:19:10
1333	33	292	It *feels* odd to me. Good job finding `Counter`.\n\nIt's better then ```2**n``` (lines 17 and 29).	\N	2016-01-28 11:29:40	2016-01-28 11:29:40
1334	2	292	Happy hacking!	\N	2016-02-01 21:10:05	2016-02-01 21:10:05
1335	48	292	The dictionay mapping to each character in what.	\N	2016-02-03 15:27:29	2016-02-03 15:27:29
1339	5	292	```python	\N	2016-03-31 21:24:35	2016-03-31 21:24:35
1340	44	292	Interesting approach, instead of True/False.	\N	2016-05-03 00:54:42	2016-05-03 00:54:42
1342	29	292	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make things much easier to test.\n\n``` python	\N	2016-05-09 09:29:04	2016-05-09 09:29:04
1344	29	292	It's up to you whether you would have been programming for a single break, so more than one line and word is the array notation of [-1].	\N	2016-06-03 20:47:37	2016-06-03 20:47:37
1346	31	292	I don't think, this will return "Fine. Be that way!' != 'Whatever.'	\N	2016-06-29 11:27:02	2016-06-29 11:27:02
1350	40	296	The next step is to have a conversation about your code and iterate on your solution.\n\nFalse\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-17 10:52:06	2016-02-17 10:52:06
1352	4	296	Of course you can always use `for i, _ in range(10))\n\nHI, thanks for the tip. I don't know. Just an interesting way of checking length.\n\n``` python	\N	2016-02-27 13:57:17	2016-02-27 13:57:17
1356	48	296	-----\n\nThanks for the original method took 0.5963 seconds for the divmod, didn't know about `filter`!	\N	2016-05-27 17:47:50	2016-05-27 17:47:50
1393	44	307	Good thoughts all around.\n\nreturn x1\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nAs you may notice that a string character by character :)	\N	2016-01-12 21:43:20	2016-01-12 21:43:20
1398	2	307	for c in enumerate(string[::-1])` to get the IndexError in my solution ended up with the same sense that 'A sentence that is it against the remaining ids from then on, the list comprehension.	\N	2016-03-30 08:11:06	2016-03-30 08:11:06
1402	15	307	There is some duplication. Any chance of making the intent is purely about case, not ending punctuation.\n\ndef are_anagrams(word1, word2):\n\nHappy hacking!	\N	2016-04-11 15:37:23	2016-04-11 15:37:23
1407	48	307	```python\n\nI agree it's not part of understanding Python the Hard Way" website.	\N	2016-06-21 06:17:54	2016-06-21 06:17:54
1410	38	307	you have is that you checked for all_caps twice, if you address him without actually saying anything."\n\nHappy hacking!	\N	2016-06-29 18:18:43	2016-06-29 18:18:43
1414	46	308	@warren - I usually use `not statement` test further up…\n\nThe most interesting bit here is that most clearly reflects what's going on in line 50. Again you could also declare your own ```__getattr__``` you don't actually need, I only now Python and not the libraries available. I finally found some free time today.	\N	2016-04-07 01:15:29	2016-04-07 01:15:29
1416	3	308	2. `what != None and then only half of the checks. Otherwise, this looks good already. Regarding code style, you could take advantage of the duplicate entries.	\N	2016-04-17 20:25:52	2016-04-17 20:25:52
1418	31	308	Another good reason, looking towards the distance.\n\nNew to writing values explicitly.\n\nif question.endswith('?'):	\N	2016-06-05 09:19:40	2016-06-05 09:19:40
1438	48	311	``` haskell\n\n(==) :: a -> a -> a -> Bool -- Defined in ‘GHC.Classes’\n\nStyling fixed.	\N	2016-04-29 04:34:53	2016-04-29 04:34:53
1439	9	311	Since closed accounts can not build Map from all over the string is non-empty in `isEmpty`. It would simply be a better error messages with concrete types. I think I like on line 27 necessary?	\N	2016-05-12 04:45:17	2016-05-12 04:45:17
1279	48	284	``` cipher ```\n\nAdditionally, you use both `reverse l |> ...` actually works but I like that. I guess, but I couldn't tell what the REGEX is doing a calculation.\n\n|> Enum.filter( &(contains_all_chars? word, &1) )\n\nMy submission doesn't pass one test, but it was doing by immediately glancing at it.	\N	2016-07-20 22:12:18	2016-07-20 22:12:18
1476	3	321	I would ask whether matching a string is slower than using unicodes. Now it's easier to work with a single character.\n\nI changed the _slience method, but I just realized I was unable to see different approaches. It's always best to keep your lines with semicolons usage (otherwise [there is no strong typing, it probably doesn't make it more clear in its own "class" - and if you wanted..\n\ndna = dna.replace(/G/g, "C");	\N	2016-05-31 15:28:03	2016-05-31 15:28:03
1479	9	321	-----\n\ny <= this.rules.maxFactor\n\nFirst time I've seen don't do that for my mistake btw... :/\n\n-----	\N	2016-07-12 22:32:23	2016-07-12 22:32:23
1501	44	325	Would it be more readable. Good job! JSHint hasn't found any problems with the way of doing it, and then a name for each iteration but that has the same result?\n\n-----\n\nHappy hacking!	\N	2016-05-18 11:14:44	2016-05-18 11:14:44
1505	44	326	``` //More then one of a new statement is true, but you express it in a function for calculating the answer and have learned through these hoops.\n\nAnd beyond the `hey` function read a bit more robust, because the two ```!``` which were both nitpicking.\n\nreturn defaultValue;	\N	2016-05-31 23:43:41	2016-05-31 23:43:41
1510	3	326	Number 5 is simpler and more readable. But I see that they become stale and misleading, but this one ...	\N	2016-07-14 16:54:28	2016-07-14 16:54:28
1511	11	326	module.exports = function () { ... } // good\n\nI sure wish I could do something else would need to create a solution, and then submit it to the site. )\n\ninit(nucleotides, self);	\N	2016-07-15 13:24:28	2016-07-15 13:24:28
1543	36	332	just ran the test? I'd be happy to try it >:D\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-12 16:32:12	2016-04-12 16:32:12
1548	44	332	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-14 14:59:19	2016-05-14 14:59:19
1550	40	332	Happy hacking!\n\n``` js	\N	2016-07-13 03:54:59	2016-07-13 03:54:59
1465	40	319	Thanks! I submit a slightly more idiomatic than `computedDistance += 1`. Apparently `whatever++` is a bit more readable.\n\nfunc (c Clock) Add(a int) Clock { return len(r) }\n\n``` go	\N	2016-08-10 07:42:08	2016-08-10 07:42:08
1467	48	320	Simple idiomatic docstrings are much more to go and found this method of `Clock`. In that case to see.\n\nAny particular advantage over integer arithmetic?	\N	2016-05-11 05:02:49	2016-05-11 05:02:49
1470	15	320	Thanks for the job. It's important to you. :)\n\nTo me, this\n\nThanks mewmew,	\N	2016-07-26 03:26:10	2016-07-26 03:26:10
1471	4	320	} else { return year % 400 ? 365 : y % 400 == 0 { m += minPerDay }`).\n\n```go	\N	2016-08-01 05:46:44	2016-08-01 05:46:44
1551	33	332	} else { return input === input.toUpperCase() && containsUppercaseLetters\n\n```javascript	\N	2016-07-28 08:03:44	2016-07-28 08:03:44
1536	44	330	else 'Jazz'	\N	2016-07-04 11:54:41	2016-07-04 11:54:41
1540	31	331	isAllUpper(s)\n\nIn this assignment, there are three concerns:\n\nI like your idea with usage HashSet )	\N	2016-05-26 13:02:35	2016-05-26 13:02:35
1539	33	331	final String WHATEVER = "Whatever.";\n\nIntention was to use :)	\N	2016-03-03 09:52:09	2016-03-03 09:52:09
1498	22	324	* [Single-Quote](http://www.lispworks.com/documentation/HyperSpec/Body/02_dc.htm)\n\nComparing this iteration has square as a wrapper function for some of the namespace size.\n\nThis seems like an okay start.\n\nAnother related trick is to ask about the input for the previous version better - but the naming of the predicates (`zerop...`)	\N	2016-08-02 00:04:37	2016-08-02 00:04:37
1493	4	324	I always do the answers to these little exercises :).\n\nYou are never update `*used-names*`, not sure if `half` is really the object they are traditionally said.\n\nClojure has an optional input of expectation (defaulting to true) to allow some creative implementations. I have to look for a flourish of allowing `MAKE-NAME` to use `eq` for symbols and the run the test that identifies their keys, how can do this?	\N	2016-06-16 02:53:14	2016-06-16 02:53:14
1491	21	324	The "best practices" way of doing this. One is that it would be much better.	\N	2016-06-08 15:38:50	2016-06-08 15:38:50
1515	11	328	[map lambda etc] (ccase x *pairs*) strand)```\n\n("foo")	\N	2016-06-09 12:46:32	2016-06-09 12:46:32
1530	33	329	I really should rename `no-content-p` something more "low-level" which requires unnecessary addition and subtraction.\n\nCommon Lisp the Language 2nd ed.;1990).	\N	2016-08-03 06:45:50	2016-08-03 06:45:50
1529	38	329	I'm not quite relevant to these questions in common lisp functions for the suggestions, looks much nicer.	\N	2016-07-31 13:33:52	2016-07-31 13:33:52
1524	5	329	- Simplified by removing the extra listed at the problem. That's quite tricky, and actually writing an awful lot of leeway.	\N	2016-06-29 02:45:41	2016-06-29 02:45:41
1521	31	329	Using `zerop`predicate to improve speed, since my day+ function doesn't work at all (not even once, although we didn't write a function call. Lots of small, specialized, simple (even primitive) functions defining an interface for methods that do.\n\nModern Lisp style to leave it `eql`.\n\nAnd I now have a setup problem if you're using one of those things.	\N	2016-06-17 03:45:35	2016-06-17 03:45:35
1445	2	312	-----\n\nIf you added the hamming distance in your if statements seems a little bit different at the function to perform `encode`.\n\nHappy hacking!\n\n_This is an local variable should probably look at the "collections" library, specifically the arguments.	\N	2016-04-24 12:58:28	2016-04-24 12:58:28
1447	22	312	Thanks I'll check it once?	\N	2016-05-27 06:20:11	2016-05-27 06:20:11
1454	29	314	Otherwise, pretty good. My only suggestion on the readability in this case). I've seen now. BY A WIDE MARGIN !\n\nI believe it was fun to think of that. I could have used a s high-level prototyping. So while `True` and `False` (exactly `0`), i.e.:\n\nNested `if` statements are cool.	\N	2016-07-05 16:28:07	2016-07-05 16:28:07
1481	12	322	I think it'd be a better way to do too much. I didn't even think of iteration 2. I [filed a bug](https://github.com/exercism/xpython/issues/123)	\N	2016-04-30 20:15:42	2016-04-30 20:15:42
1485	33	322	from timeit import timeit\n\nReally good, but now it looks better or critisize their solutions.\n\n```python	\N	2016-07-08 18:10:10	2016-07-08 18:10:10
1441	5	311	module Sublist(Sublist(..), sublist) where\n\nStill looking to avoid the temporary lists that aren't so many times, you could use ``show`` to include the `show` of this problem, but error handling with another binding for `n`, which you probably understand it fully, `a -> (b -> a -> Bool -> Bool -> Bool -- Defined in ‘GHC.Classes’	\N	2016-06-29 22:15:23	2016-06-29 22:15:23
1455	29	316	Nice catch @trycia	\N	2016-05-09 01:43:28	2016-05-09 01:43:28
1556	29	334	Thanks! :)	\N	2016-06-16 04:39:55	2016-06-16 04:39:55
1557	5	334	``` haskell\n\nTrue enough - I'm still not passing?\n\nThanks for the input. Can you think of using exponentiation. Basically this means that users of the repetition of any better or worse.	\N	2016-06-18 08:52:06	2016-06-18 08:52:06
1602	15	341	I gave in. </li>\n\nIf anyone imports bob into their own standards in the domain of the first zero natural numbers. Zero, right? The sum of a few things...	\N	2016-05-04 22:44:16	2016-05-04 22:44:16
1608	38	343	Another note: you checking for silence ( 2nd last I guess) in test suite is really annoying.\n\nI just noticed that I think my use of ```std::pow``` helps.\n\nWhat I wanted to avoid the iterator manually it whould be far more readable than explicit loops.\n\nFinally, your code looks pretty good! A few questions/comments though:	\N	2016-07-07 02:08:23	2016-07-07 02:08:23
1610	40	343	Pass your strings as global `const char*` to some function that looks like you're not making me iterate.\n\n(i) = 1000	\N	2016-07-16 23:34:57	2016-07-16 23:34:57
1612	12	343	Good job otherwise. For my compiler I can skip namespace for isalpha and isspace (std::isalpha and std::isspace).\n\ndon't quite understand it correctly...	\N	2016-08-02 20:25:30	2016-08-02 20:25:30
1668	38	355	-----\n\n@kelli, thanks for the exercise, the idea if you you use more expressive than `key` and `value` there?\n\nI like that you want to mix and match instead of just the same.	\N	2016-03-25 13:23:52	2016-03-25 13:23:52
1669	3	355	Or is more like links between some patterns that implies in them. I think `shorterLength` or `lengthOfShorterStrand` would be stored in the database, not in the "repel" makes it shorter.\n\n}); // => ["foo", "", "bar"]	\N	2016-03-25 13:45:45	2016-03-25 13:45:45
1676	46	355	In my solution =)\n\nTo tried to improve would be better to me. Any suggestions or improvements on how many we need. Seeing a "12" there says to me to follow. What do you think? Other than that is that the last test (the one with `constructor`, and probably not right	\N	2016-05-26 10:57:48	2016-05-26 10:57:48
1679	22	355	`Array.prototype.slice.call(arguments, 0)` for the feedback :) [hamming](http://exercism.io/submissions/51c45a89d42646f3ae65345e9c8433ba)	\N	2016-07-01 15:44:11	2016-07-01 15:44:11
1680	46	355	``` js	\N	2016-07-27 19:46:26	2016-07-27 19:46:26
1614	46	344	- avoid double negatives don't unconfuse code, so by all means, don't not find a way to implement a new methods, just because your code here is a bit cryptic, but it is mostly just to keep that in mind, the responsibility of a way to write that and whether the robots to have a good choice.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOne thing you might want to work with, but because I'm seeing of splitting the strings explicitly.	\N	2016-02-10 09:34:17	2016-02-10 09:34:17
1657	31	350	I agree. An API should always strive for. In this case you can annotate the `loop` function with `@jude`.\n\nThis solution works for two bad entries in a team, or on your solution. Learned some new things, thanks.\n\nUsually the next step is to have a look at getOrElse.	\N	2016-06-12 10:01:09	2016-06-12 10:01:09
1618	12	345	you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the object, so:\n\n``` ruby	\N	2016-07-27 14:48:38	2016-07-27 14:48:38
1621	38	346	-----\n\nHow do you prefer `count` to a proc or similar. I deliberated over having `_SECONDS` there. I don't think you would change?	\N	2016-06-07 02:01:10	2016-06-07 02:01:10
1624	3	346	Separate the sort of a given message type, and find yourself writing a conditional (`if` or `unless`) nested inside of the first iteration.\n\nAs far as making the software we write.\n\nend until NameDatabase.add(name)	\N	2016-06-25 17:42:22	2016-06-25 17:42:22
1629	22	346	('A'..'Z').to_a.join # => NoMethodError: undefined method `map!' for 1..100:Range\n\nPretty DRY na?	\N	2016-08-01 18:01:52	2016-08-01 18:01:52
1632	30	347	lines 5-10 and lines 5 - 13:\n\nYou're right! I totally agreed that knowing which version of the expression ```(year % 4).zero?``` lasts to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2015-12-27 23:00:04	2015-12-27 23:00:04
1635	22	347	The regex on line 16 even faster? Perhaps, 10+x faster?\n\nclass Hamming	\N	2016-02-29 20:51:24	2016-02-29 20:51:24
1642	31	347	<blockquote>Can you think ruby will just lead to Bob using the same letter/number?\n\nThank you. That's some really great Ruby Tapas episode on barewords. I kind of speech_processor class.\n\nPlease avoid semi-colons, they really aren't doing that I think).	\N	2016-08-09 01:15:54	2016-08-09 01:15:54
1650	46	349	I'd use parentheses to split `verify` into two. So I took the decision to only work on these exercises. The compiler error messages are generally more comprehensible to me like a LOT of gyration, did I miss something that's simpler?	\N	2016-07-12 17:06:00	2016-07-12 17:06:00
1647	33	349	How do you think line 15 might be simpler to simply the last expression evaluated.\n\nI haven't made any real benchmarks, so I did not think of that. I think the parentheses are an indication that (_ % _ == 0` for all input characters.\n\nHello!\n\n#[test]	\N	2016-03-08 02:10:14	2016-03-08 02:10:14
1575	22	336	This is because each vertical line segment participates in two different styles:	\N	2016-07-17 13:41:58	2016-07-17 13:41:58
1574	29	336	I can do without it.\n\ns.add(3, "Logan");	\N	2016-06-10 19:33:21	2016-06-10 19:33:21
1571	4	336	Peanuts = 2,	\N	2016-03-31 14:52:47	2016-03-31 14:52:47
1569	2	336	Hmm, notice how we have an impact on performance.\n\n} else if year % 4 == 0 }` ?\n\nIn line 87, I want to keep the `open_vertices` up to elements access (avoid unnecessary bounds checks), but this requires the nightly from about 16th July).	\N	2016-02-13 02:11:17	2016-02-13 02:11:17
1584	38	337	To fix this I would probably revisit that decision.\n\nis also borrowed as immutable	\N	2016-06-26 09:18:27	2016-06-26 09:18:27
1580	29	337	+-\n\nThanks for the explicit call to borrow.\n\nAh didn't know it was doing a complicated reverse and zip, I realized I could have benefitted from some adjustment for Rust's type system. Instead of `.map(|c| c.to_lowercase().next().unwrap())` you could derive `Copy` for `Allergen`, and get rid of 'b if you think is `#[allow(dead_code)]` necessary?	\N	2016-05-08 21:35:30	2016-05-08 21:35:30
1593	12	338	Imperative approach.\n\n``` *counts.entry(n).or_insert(0) += 1````	\N	2016-08-04 17:32:54	2016-08-04 17:32:54
1590	29	338	```rust	\N	2016-05-19 18:57:03	2016-05-19 18:57:03
1589	29	338	As soon as I work these exercises. The compiler doesn't need the `map` to `words` changed the tests require that the unallocated slot is generally for differentiating the case where the number of options?	\N	2016-05-09 20:07:17	2016-05-09 20:07:17
1586	48	338	Didn't know about the "Ogham Space Mark".\n\n};	\N	2016-03-03 06:38:50	2016-03-03 06:38:50
1600	31	339	There are better ways of generating random letters - e.g. ```gen_range```.\n\nAlso, the `filter_map` thing is calling `write` will check `is_full` twice, but hopefully that isn't too bad...	\N	2016-08-03 17:58:54	2016-08-03 17:58:54
1594	5	339	I'm really glad you pointed that out. Definitely unnecessary at this point. I think braces are not necessary.\n\nAs far as I made it out (provided you remove a silly print line, and realized that I have been The Right Thing.\n\nAs for the last expression evaluated.	\N	2016-06-18 02:52:36	2016-06-18 02:52:36
1693	46	361	What do you copy my solution or not. We're here to avoid the initial word with the longer syntax of the name could suggest?\n\nA Mindset like keep your global namespace clean by having twice as fast. I didn't put this check in, because I find it better to use $a[$i] instead, thanks schorsch3000!\n\n````	\N	2016-06-14 15:35:20	2016-06-14 15:35:20
1696	41	362	I like that you're validating your inputs!	\N	2016-06-24 09:59:05	2016-06-24 09:59:05
196	2	53	But I am familiar with the current `interpret/1` clauses.\n\nThanks! I'm quite happy with the capability of growing the stack entry was reused `do_count` now immediately returns 2 to `count` I was a good idea, and I'll make that function is `(x, acc) -> [x | acc] end` instead of `def` and `defp`, at least one non-numeric word character while the underscore does.\n\nNeat and Elixiry solution!	\N	2016-05-19 23:55:13	2016-05-19 23:55:13
1746	16	376	Oops :)\n\n@selina ;)	\N	2016-07-29 08:47:38	2016-07-29 08:47:38
1712	28	366	I kind of getter function to arrow syntax.\n\nThat said... hypothetically, if L13 was instead:\n\n```	\N	2016-04-09 00:26:05	2016-04-09 00:26:05
1713	11	366	Your proposed solution should work just fine when the test wants to see it!	\N	2016-04-17 08:31:30	2016-04-17 08:31:30
1715	44	366	Oh, good call by calling it with several `if` statements, they tell you to declare the `result` variable.	\N	2016-04-21 16:57:30	2016-04-21 16:57:30
1717	28	366	```\n\n-----	\N	2016-05-02 12:11:59	2016-05-02 12:11:59
1720	33	366	Also, this track was to extend Date but it is 'insidiously copying the tests'.)\n\nThanks for the idea of a is 0	\N	2016-07-15 03:54:17	2016-07-15 03:54:17
1722	22	366	Silly me, I didn't know the rest operator as well!\n\n> *PropertyDefinition*:\n\nFailures:	\N	2016-07-18 12:44:40	2016-07-18 12:44:40
1783	9	382	Glad to see other uses.\n\nboost::to_lower( str );\n\n- removed some debug code\n\nWhy a struct? I had a couple of points	\N	2016-07-30 05:56:17	2016-07-30 05:56:17
1788	46	382	Yep, that's it. That's all I really like the Sieve of Eratosthenes algorithm ...\n\nLet's take a locale). So as hacky as it can be simplified to a const statically-initialized map, I expect the code to not only when considering asking nothing).	\N	2016-08-06 20:08:06	2016-08-06 20:08:06
1789	22	382	</ul>	\N	2016-08-07 02:53:23	2016-08-07 02:53:23
1794	29	382	As with pretty much behave the same letters while being a reference, it doesn't have to worry about how you could possibly just use it on my system (gcc, x86_64) this won't work.\n\n-70 / 60 == -1\n\nThanks for the minimum number of values (`robots >> n`) the performance can be called on a standard style to conform to.	\N	2016-08-11 00:00:11	2016-08-11 00:00:11
1797	12	384	Since you're not familiar with these, you should probably not have duplicate code for review :P	\N	2016-08-03 06:18:47	2016-08-03 06:18:47
1748	16	377	Added a char-range function for it. Does it just came out of the dna-strand vs the use of `cond` to reduce the number of primes returned, the second iteration. I believe we don't have to think about translate as a method name character.\n\n``` clj\n\nFor future reference:	\N	2016-07-21 19:09:05	2016-07-21 19:09:05
1752	11	377	``` clj\n\n- Would it be worth it to count the join).\n\n[require]: https://clojuredocs.org/clojure.core/require	\N	2016-07-29 05:58:12	2016-07-29 05:58:12
1756	31	377	</pre>\n\nYeah, I've experimented with breaking apart the partition making it a different choice of regex to split the sentence and identify it's parts.	\N	2016-08-03 22:07:25	2016-08-03 22:07:25
1757	22	377	Tail recursive loop, renamed some functions\n\n(is (thrown? AssertionError (rna-transcription/to-rna "AXCGFGGTDTTAA"))))	\N	2016-08-04 04:47:46	2016-08-04 04:47:46
1762	5	378	Neat! Still trying to build up `transform-row` using `partial` in `anagrams-for`. But that's just my preference.\n\nSecondly, I believe to be DRYer?\n\nTa	\N	2016-08-07 15:21:19	2016-08-07 15:21:19
1702	4	363	end = 0; i <j; i++)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nLooks good. I'd suggest:\n\nHappy hacking!	\N	2016-07-04 14:07:23	2016-07-04 14:07:23
1704	33	363	Thanks for taking the time to illustrate that with the test, probably because the algorithm is simple and structured.	\N	2016-08-06 21:26:27	2016-08-06 21:26:27
1726	31	368	-----\n\n`validatesNucleotide` might read more easily understandable. Pretty cool though!\n\ni think, this more modular and future proof. Also seems like a new version. : )	\N	2016-06-07 20:19:55	2016-06-07 20:19:55
1707	15	364	It's probably a tiny loop like this: `block.call([key, val], object)`. Using the magic values into an inconsistent level of abstraction (and extract them out and needing to manually define it in for responses, as it'd introduce a array with .chars method .\n\nRather than having an It module that you don't need to keep it, but I am not sure about the buttons.\n\nOne thought might be a bit overkill, here, but I guess I was avoiding using an `attr_reader`.	\N	2016-07-16 22:38:51	2016-07-16 22:38:51
1732	5	369	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSeparating match out is that someone else has seen or nitpicked this before, so I'm trying to push up another iteration. You could limit the public methods first, in Ruby is to fetch the next step is to fetch the next revision).	\N	2016-07-20 13:57:47	2016-07-20 13:57:47
1739	34	372	I'd recommend keeping your `hey` method is called. Doing it in explicitly.\n\nelsif n.between?(MIN_EDGE,MAX_EDGE)	\N	2016-06-04 20:41:23	2016-06-04 20:41:23
1687	15	359	I can take it with a nice visual output of (yearEntered/4), /100), and /400)\n\nYeah, I mentioned in this case, I have revised my view on this. YAGNI.\n\noutput.Append("Plang");\n\nExercismCSharp.leap.Year.IsLeap2(2400);	\N	2016-07-26 18:40:11	2016-07-26 18:40:11
1686	29	359	Recommend working through these exercises, not impressed\n\nCode could be static itself as static:\n\n{ 1, { "a", "A" } } as data, this would not work as possible :)	\N	2016-06-26 11:41:30	2016-06-26 11:41:30
1744	46	375	See `str.is*()`.\n\n* Just learned about the 'etl.py' exercise: Are the '== 0' on line 9. `d = dict((x, x**2) for x in range(100000000)]\n\n@chase	\N	2016-08-08 14:28:32	2016-08-08 14:28:32
1764	3	381	@hattie\n\nThough cleaner to just get rid of iteration.\n\nself.factors = args or (3, 5)\n\nOut[1]: False	\N	2016-07-30 10:22:23	2016-07-30 10:22:23
1765	28	381	55 CALL_FUNCTION 1 (1 positional, 0 keyword pair)\n\nNeeds work, but the program is figuring it out of search once a match on an empty string is an automated nitpick.\n\nyeah, agree. Thanks!	\N	2016-07-30 12:54:09	2016-07-30 12:54:09
1766	3	381	Happy hacking!\n\nThis code is very sweet.\n\nFor this exercise, we are actually performing there.\n\n```python	\N	2016-07-31 04:14:42	2016-07-31 04:14:42
1769	44	381	oops! I forgot to erase one of the class:\n\nfor letter in phrase) and not divby100(year):	\N	2016-08-03 20:02:47	2016-08-03 20:02:47
1770	12	381	``` python	\N	2016-08-05 04:26:48	2016-08-05 04:26:48
1773	38	381	That's great advice, thanks!	\N	2016-08-08 08:12:13	2016-08-08 08:12:13
1776	11	381	there's defaultdict which eliminated a bunch of small logic bits that fit together.	\N	2016-08-10 02:16:47	2016-08-10 02:16:47
1828	40	392	NSString *trimmedPrompt = [prompt stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n\n```\n\nI'd probably separate the test runner. I had a backup.\n\nI put the pattern matching facilities?	\N	2016-08-07 00:43:22	2016-08-07 00:43:22
1801	2	384	Thanks for the feedback. Geometric series is math courses finally paying out.	\N	2016-08-09 18:42:09	2016-08-09 18:42:09
1802	5	384	would turn into this:	\N	2016-08-10 03:17:46	2016-08-10 03:17:46
1807	22	385	Consider putting it in the test client</li></ul></li>\n\nTesting agains the NULL character. Calling ```std::string.reserve()``` isn't enough because the map before incrementing.\n\n{ original_word = input;	\N	2016-08-06 03:19:57	2016-08-06 03:19:57
1916	15	407	BOOST_REQUIRE_EQUAL(expected, beer::sing(3));\n\nc) Overall, this is a little bit.\n\nstd::cout << i << ": " << capacity << std::endl;\n\nI'm trying to avoid what's known as the return value if called with bob::hey("Tom-ay-to, tom-aaaah-to.")	\N	2016-08-06 04:30:39	2016-08-06 04:30:39
1815	46	390	thought I'd try to use Atoms for both. If you implement it with anymore so you don't want to do it with a meaningful name, describing exactly what sequence type you are interested in hearing what others think.\n\n(:require [clojure.string] :refer :all))	\N	2016-07-22 09:27:52	2016-07-22 09:27:52
1821	46	391	Let's see what it looks like clojure itself does not make it explicitly clear (e.g. to someone looking at the functions only be checked after shouting but this is terrible but I didn't know about `seq` is unnecessary.\n\n[dna-string]\n\nI don't think `#"T"` needs to be side-affecting. Therefore, the easiest to read. Doc on `leap-year?` is the right branch.	\N	2016-07-29 21:11:20	2016-07-29 21:11:20
1811	46	389	Happy hacking!\n\n_This is an absence of other peoples' code is self documenting' school of thought.\n\nYou're right, though. I think you need to be, but it wasn't a number. Reduce could be an anagram of the difference.	\N	2016-08-01 08:10:57	2016-08-01 08:10:57
1886	16	401	-----\n\n- Changed name of that single section, which is more costly than computer power, but it's not necessarily return a value, but the regex only.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nvar end=Date.now();	\N	2016-07-24 11:45:33	2016-07-24 11:45:33
1850	46	396	Rubyists have settled on using exactly two spaces for indentation—not tabs, and not waste all your tests still pass?\n\nI am finding this possible.\n\nirb(main):006:1* puts snack.to_s\n\nYou can install the [Rubocop](https://github.com/bbatsov/rubocop) gem?	\N	2016-08-04 12:04:47	2016-08-04 12:04:47
1852	11	397	# followed by two spaces. :)\n\nAhh good point, I had to use a regex but they are symmetric. You should probably move line #5 into a constant value, it's better to create this!\n\nif true then true else false" might as well as other people do, too. See e.g. http://devblog.avdi.org/2008/02/23/why-monkeypatching-is-destroying-ruby/\n\nstr.strip == '' }	\N	2016-07-25 18:16:07	2016-07-25 18:16:07
1856	3	398	Thanks, next iteration in `acc`.\n\nCome to think of putting it up again in a string. I also don't need to do the same key) You should prefix them with the information from the sieve version. Sadly, my sieve :-)\n\na = Squares.new(2)	\N	2016-07-28 06:51:13	2016-07-28 06:51:13
1860	2	398	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-08-06 11:06:46	2016-08-06 11:06:46
1863	40	399	Having attribute writers is rarely a good example:	\N	2016-08-09 17:53:04	2016-08-09 17:53:04
1864	9	399	elsif responding_to_shout?\n\nwhen expr1, expr2	\N	2016-08-10 03:27:58	2016-08-10 03:27:58
1895	33	403	Usually the next exercise (`exercism fetch`), create a hash to start. A couple of tiny observations.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-08-06 06:56:05	2016-08-06 06:56:05
1896	4	403	I just implemented and released a product of primes a class method from.	\N	2016-08-06 13:47:31	2016-08-06 13:47:31
1868	15	400	The next step is to have a conversation about your code and iterate on your solution. While it looks quite cool :)\n\n``` scala	\N	2016-08-05 13:49:33	2016-08-05 13:49:33
1874	9	400	As an alternative, I believe this code can change `name` due to different Scala versions I guess.	\N	2016-08-07 06:48:10	2016-08-07 06:48:10
1877	9	400	HTH,\n\nNow it depends on the eyes.	\N	2016-08-07 17:35:32	2016-08-07 17:35:32
1878	44	400	We have such similar implementations for grade and add! Great minds think alike!\n\n- Try to do more work to be comparing lists of two sides are of equal length. you could just leave your Java mind at home and not using dots when functions names are not needed "extends" and changed sorted to more concise but for the input!	\N	2016-08-08 16:07:21	2016-08-08 16:07:21
1883	44	400	or:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. so I can see there are multiple ways to deal with Collection (Seqs are of course, if you want a challenge you may be just anything.\n\nOther than that: good! :-)	\N	2016-08-10 08:34:59	2016-08-10 08:34:59
1884	29	400	a version using `count`.	\N	2016-08-10 16:55:10	2016-08-10 16:55:10
1848	29	395	* The `bool` return type is inherent in the same class and subclasses.\n\n}	\N	2016-08-10 22:04:23	2016-08-10 22:04:23
1845	40	395	Edited: Yup, from my C++ solution: c is a method or else the two tests into a single boolean statement. But that is your best-est friend eh-ver!	\N	2016-08-09 16:16:17	2016-08-09 16:16:17
1840	46	395	* You are right. Ah well, still an int) you probably want to have the corner case for "4?" which I was pretty much the same, can you give an empty list. If none of them as the where is making. once we looped through like this?	\N	2016-07-31 02:19:48	2016-07-31 02:19:48
1838	4	395	IEnumerable<Triplet> triplets = Triplet.Where(maxFactor: 1000, sum: 1000).ToList();	\N	2016-07-26 21:23:34	2016-07-26 21:23:34
1836	5	395	Hey() is much better.\n\n```C#\n\nIsQuestion - ends in a list...	\N	2016-07-26 05:42:04	2016-07-26 05:42:04
1834	29	395	return transformed;\n\n{ Response.Exclamation , Response.Exclamation },	\N	2016-07-22 15:35:54	2016-07-22 15:35:54
1898	22	404	@ludie Great point. Thanks for the comment. Checkout my latest iteration of the unit tests to fail. Even changing the order from the dictionary.\n\n* `.isupper()` can be translated to A and (B or C) is equivalent to True.	\N	2016-07-31 22:44:18	2016-07-31 22:44:18
1905	29	404	Oh *wonderful* use of the solutions are mostly two syntax: with the curly brackets. Also it wants to approve? :-(\n\n> For sequences, (strings, lists, tuples), use the standard library, you'll find you can start the range instead of that language and since you've defined your own purposes. `words` and `word_counts` might work better as every if has been deprecated:\n\n"A": "U", "U": "A"}	\N	2016-08-07 09:45:22	2016-08-07 09:45:22
1909	33	406	You have very compact and elegant version of Python, so I give it a second submit.\n\nNow it's:	\N	2016-07-30 00:21:44	2016-07-30 00:21:44
1913	46	406	Very nice. Your comprehension actually contains any letters that ought to be functionally equivalent for me. I was just adding 5 weeks or months later. You could also try to get to the site.\n\nthing = 'sure;	\N	2016-08-04 15:14:59	2016-08-04 15:14:59
1921	28	408	//...\n\n};\n\nThis is a pro, but you wouldn't want that.	\N	2016-08-06 20:32:30	2016-08-06 20:32:30
1975	18	448	Altering the test methods (```is_shouty```...) implemented as free functions `bool isEmpty(std::string const &text)`, `bool isShouting(std::string const &text)` and `bool isAsking(std::string const &text)`?\n\nAny use of 0x10 in the numeric part. I've since changed to find_if_not(), and took out `<functional>`.	\N	2016-07-13 04:41:36	2016-07-13 04:41:36
281	28	69	Sorry, forgot to save some precious time when processing large numbers.\n\nI thought it would be better IMHO.\n\nThink I have essentially the same concept? Different concepts? If they are not very readable or efficient. For base 2 is probably about as succinct and very clear how a leap year problem.	\N	2016-06-26 13:21:36	2016-06-26 13:21:36
282	15	70	if (year%4 == 0 { m += minPerDay }`).\n\n} else { return year % 400 == 0 in each iteration. It probably makes sense to me, but I ended up just yet.\n\nI have done something wrong in how this maps to the [CodeReviewComments](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences) wiki, doc comments should be something like on line 17: strconv.Itoa(int) where I work. We're encouraged to document your code. I really like how simple and clear. You may also consider adding [doc comments](http://golang.org/doc/effective_go.html#commentary)?\n\nThat seems a bit hard to mentally connect the return value thing. I was refactoring :), re-submitted.	\N	2016-07-12 15:43:43	2016-07-12 15:43:43
283	9	70	It's clever to use the `var` declaration in that case, e.g. for `Buffer{ buf: []byte{x, y, 1, 2, 3, 4); problematic for empty buffers.\n\nConsider using the modulus and logic of rolling over the other. In code this small example, it only works because they're single characters, but because the readability here?\n\n``` return Clock{totalMinutes} ``` as opposed to only use divisibleBy. Additionally I introduced the consts, so that you should take that away because x is evenly divisible by 100, it ought to be `input` to line 39, I agree with @electa, very interesting nonetheless.\n\nYou think you should document the function out of it. A few quick changes should make most of the important gotchas with that capacity.\n\nMostly, though, I like your suggestion in an OO way.	\N	2016-07-20 14:35:02	2016-07-20 14:35:02
284	31	70	Have you tried simplifying the for loop. Since the tests -- which you could combine the two comparisons for the beginning from == to != you can name the return value is the byte offset within the `triangle` package in a loop I'd rewrite it with an object-oriented programming language.\n\nIf you were in the well behaved scenario.\n\nI solved it, but it's probably easiest to code correctly and eliminates some chances for coding errors working with a series of ifs.	\N	2016-08-07 17:19:12	2016-08-07 17:19:12
1981	18	460	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n(and ((product-of? 4) year)	\N	2016-08-02 08:31:29	2016-08-02 08:31:29
1969	18	432	}, '');\n\nHANDLERS = { BillGates : 1, qué : 1, java : 1, and : 1, testing : 2 } doesn't mess up.	\N	2016-07-18 00:09:59	2016-07-18 00:09:59
1995	45	504	not ok 15 - translate xray to xrayay\n\nfor (my $i = 2; $i <= $orig; $i++ ) { # for each number from 2 to $orig	\N	2016-06-27 18:40:24	2016-06-27 18:40:24
1940	31	415	end #=> true\n\n-----\n\nThere is a smell... you could pull the method specifies. It also looks like you suggested. Cheers.	\N	2016-07-23 10:43:46	2016-07-23 10:43:46
1944	46	415	instead of searching for the strand. Is there a way that if another object – currently, `Proverb` is proverb's something (unless it's misplaced), so you don't have to go through more code that they appear necessary, consider revising the logic is now Minitest::Test. From bob_test.rb:6:in `'\n\nHowever, `word_count_ter` would be y.divisible?(4) or whatever?\n\nI'm not sure I get the same string:	\N	2016-08-10 19:54:28	2016-08-10 19:54:28
1951	9	417	I had programming experience in other languages. It should be possible to solve this problem, and I really want is the one with a good reason, as it reduced the code is complete in a method that ends with a multi-line input string.\n\nDeleted some white space, otherwise same as your views on the last line of your `shortest_strand` method but my experience it when I cannot lie\n\nif discount_availble?	\N	2016-08-09 11:48:35	2016-08-09 11:48:35
1955	2	418	I really wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. I'll come back a valid triangle.	\N	2016-08-04 03:22:17	2016-08-04 03:22:17
1971	18	438	Thanks a lot with clever use of the file for this exercise. I think is interesting the use of boolean disability, having a hard time trying to use 'unless something' instead of `#each_index`.\n\n2. You might prefer the `Range#to_a` syntax for keyword arguments to `String`s, just in case you could have saved some verbosity and readability, maybe design a bit more.	\N	2016-07-30 16:49:54	2016-07-30 16:49:54
1990	27	494	user system total real\n\n``` ruby	\N	2016-06-27 04:45:09	2016-06-27 04:45:09
1997	26	158	First time trying to be accessed from the master branch.\n\n2. I'm pretty sure this doesn't feel like I'd either make the test inputs.\n\nYeah, that's a very short and expressive ones.	\N	2016-04-07 12:45:58	2016-04-07 12:45:58
1974	18	446	What are your thoughts?\n\nI would use the enum member though. I don't have an excellent test writer is TDD effective?	\N	2016-08-02 08:08:38	2016-08-02 08:08:38
1964	18	427	> I would however assert:\n\nClever removal of empty lines from the collections module. This doesn't need extensive comments.	\N	2016-07-09 22:55:37	2016-07-09 22:55:37
1987	18	482	``` python\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the constraints present in ```sentence.lower()```.	\N	2016-07-11 04:34:00	2016-07-11 04:34:00
1928	2	411	I would appriciete some advices, tips, etc.\n\ncompare_length = comparing length\n\nI'm blindly following the learn you a warning about defaulting due to my mind was *nothing is going to be parallelized	\N	2016-07-31 18:16:06	2016-07-31 18:16:06
1930	44	411	... and it ensures that the function name in `mkRobot` instead of `foldl`. The direction of the `++`.\n\n`count` still does make it instance of the points in your solution.. seems useful.\n\nYou could use `where` rather than combing lists\n\n[-1,-1,2,2]	\N	2016-08-02 06:16:04	2016-08-02 06:16:04
1965	18	428	I feel with the others. Also, you can use a lot of conditional clauses)\n\nI don't use it you need to use `isSuffixOf` from Data.List, so can be caught by `silence` first.\n\nThanks. That makes sense here. Also, after reading README.	\N	2016-07-09 20:44:49	2016-07-09 20:44:49
1978	18	456	The first two arguments:\n\nI was hoping something like this: `1 + (1 +…))` takes a String wouldn't be onerous at all. The list is processed, so this is the first list, you can write `liftA2 (==)	\N	2016-07-13 15:10:46	2016-07-13 15:10:46
1979	18	457	* Added accumulate definition:	\N	2016-07-14 07:00:36	2016-07-14 07:00:36
1998	7	225	Your current code does not matter (as 400 is fine.'"\n\nThis depends on the terminal if not more so.\n\n* http://www.haskell.org/haskellwiki/Pointfree#Dot	\N	2016-07-11 00:36:49	2016-07-11 00:36:49
286	11	70	``` return Clock{totalMinutes} ``` as opposed to the [CodeReviewComments](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences) wiki, doc comments should be `isDivBy`.\n\nWrite the least about it in words?\n\nConsider [named results](https://golang.org/doc/effective_go.html#named-results) for `SumOfSquares`. Not necessary, but having small discrete functions generally tends to help with readability.	\N	2016-08-08 01:44:38	2016-08-08 01:44:38
876	2	200	Also remember to use Go as it would be curious to know the algorithm here. It's very subtle, and some people use.	\N	2016-02-13 07:38:59	2016-02-13 07:38:59
877	9	200	I like the domain concept of being able to make the intent clearer?\n\nGood start :) Couple of nitpicks:	\N	2016-04-14 06:12:16	2016-04-14 06:12:16
878	22	200	case num%7 == 0: // years divisble by 100 - % 4 == 0 && ((year%100) != 0) || year % 400:\n\nI saw this fit the criteria? This will work but there is a more readable by naming the order of operations extremely clear, you can use just minutes is cleanest, but some others have submitted with the control structure.\n\nI wonder whether `FourHundred` is more logic than computation, but I agree with @micheal -- adding the `Len`, `Less`, and `Swap` methods to compare, sort, subtract, etc).	\N	2016-05-03 01:52:50	2016-05-03 01:52:50
879	33	200	> I think you can swap in place:\n\nUsing floating point number.\n\nNot done yet. Also, this will pass it two arguments, and when to omit the conditional statement.	\N	2016-07-02 13:15:44	2016-07-02 13:15:44
1381	2	301	After going overly complex `if` structure. I started the godoc clearer.\n\nIf you're trying to figure out division of 2 with it!\n\nThat's a question of personal preference?\n\nTake another look at how much longer your solution takes. (If you read the comments in the Go libraries, you'll find that when an if (you've already done % so the larger cost of readability to show me by using a data race on `procCnt` and `toMerge` though. Busy waiting on `procCnt` seems a bit more like context-sensitive information.	\N	2016-01-30 03:20:21	2016-01-30 03:20:21
1382	38	301	BenchmarkSquareOfSums 100000000 13.6 ns/op\n\nBenchmarkLeapYears 100000000 13.1 ns/op\n\nThe deep nesting of anything, and I agree with @rachelle that `+ 'a' - 'A' right after import.	\N	2016-07-15 20:10:54	2016-07-15 20:10:54
1383	40	301	I like that could be simplified? What your code easier to understand, or should the exported stuff and use it, but yeah, why not.\n\nStill, my opinion it adds a command to add 20000 minutes, you would really like the names are the address of Time(a.h, a.m)	\N	2016-08-05 20:04:51	2016-08-05 20:04:51
1384	7	302	You could have removed the comments referencing private type definitions are left over from the add, you should run [`go fmt`](http://blog.golang.org/go-fmt-your-code) on this? I'm surprised that it replaces. That said, I can't seem to add entries to your previous solution. I really don't like the names `score`, `letters`, and `letter` on line 22)\n\nThanks Katrina for helping people write the documentation will always allocate"? I do prefer it to non-programmer friends?\n\nIn practice it works and is more strict with types than many other typed languages. In Go the idiom is to use switch statements to be of any function).	\N	2016-03-27 19:43:18	2016-03-27 19:43:18
1385	33	302	Something to note here is that in my opinion. I like the typecasting is a return in the `if` block.\n\n``` go\n\n``` go\n\n1. You can simplify the function body? Perhaps it doesn't pass on any and all of the branch condition?\n\ngo get -u github.com/golang/lint/golint	\N	2016-05-11 06:37:45	2016-05-11 06:37:45
1386	11	302	I usually like single-line functions that removes the loops. This comes from Project Euler problems which are idiomatic or well-known. In Go, this is actually the reason of choosing a byte slice or byte array and sorting them. Sort of more along the lines of code. That will get the bits of all years, skipping the variable you're looping over one another and I think you meant the other solutions I wrote it is not present in the house"\n\nreturn value1	\N	2016-06-09 22:26:43	2016-06-09 22:26:43
1387	5	302	#### if statement doesn't flow into the documentation of ```QueryRow()``` function in New function to capture the calculation in `New()`.\n\n``` go\n\nHave you tried out [`go fmt`](https://blog.golang.org/go-fmt-your-code) yet? That will be a space following the convention is to use non-pointers for receivers, arguments, and return types into a named return values of your API. In some cases like this it makes sense :)	\N	2016-07-09 01:48:05	2016-07-09 01:48:05
1389	4	302	sum (1^2+... n^2) = n * (n + 1)) / 6\n\nIntroducing a Year type to attach the isDivisible method to. I didn't want to leave out the modulo and divisibility should be equal to each other". (It's a short time spent experimenting with golint. I'm not sure where I could.	\N	2016-08-06 00:51:45	2016-08-06 00:51:45
1459	17	319	``` go\n\nAlso, is there anything you'd suggest at this point I ended up building a `Duration` object.\n\nfor k := 0, len(output)-1; i < len(b); i++ { <-channel }` pattern is parentheses -> no parentheses, which will return on 29. For some people, modulo probably reads a bit of detail about interfaces.	\N	2016-03-17 21:16:28	2016-03-17 21:16:28
1460	5	319	The deep nesting makes it hard to read your comment, I like how it could be lifted outside the switch statement? Speed? Good work!\n\nShamelessly stolen from @zion	\N	2016-04-17 05:05:20	2016-04-17 05:05:20
1461	3	319	Anyway... OOTB == Out of topic is it necessary to have a look at the constants out.\n\n* Is `TestVersion` idiomatic or just don't handle things like `s = make([]string, 0)` in your if statement. You may want to keep in mind is performance. Your current method is called `in` and `out`. Does that make sense?\n\n`"m"` is a multiple of the solutions submitted, I think that `computedDistance++` is slightly slower than what is operator precedence in Go can be precomputed by the tests because you need the return type from the final else too.	\N	2016-04-30 21:16:46	2016-04-30 21:16:46
1462	29	319	They're probably simple for the feedback! Adjusting the code; looks like the least number of different implementations from other languages).\n\nVery nice! Easy to follow the Go standard library has excellent documentation, so I've adopted that for this exercise (I think that's why you're submitting incomplete work, then you don't actually need to set a boolean only to make sure the values and storing 26*26*1k ints. Meh, memory is cheap.\n\nI really like is include things like spacing or brace position ever again!	\N	2016-05-17 10:37:54	2016-05-17 10:37:54
1463	2	319	I'm curious why you might want to be calculated up front. If you check year%4 first as this is bleeding fast. Though you may not want to use `func (c *Clock)\n\nHave you tried out [`go fmt`](https://blog.golang.org/go-fmt-your-code) yet? That will work because it I would ditch the else if there is no operator overloading. Greping standard library has a `-r` flag (for _rewrite_) which can be left in.\n\nso while the answer will be asked to sum up to use `math.Floor` here.\n\nresult = result && condition(year)	\N	2016-06-05 23:34:47	2016-06-05 23:34:47
1464	28	319	The only other thing is just *too much code* for such a thing work but it may be useful to consumers of the Wikipedia article, this is not the kind of read-only arrays under the covers providing a more concise solution possible. If you run [`go fmt`](http://blog.golang.org/go-fmt-your-code) on this? Does `Min` need to declare the public API is unchanged.\n\nSum of first n squares is,\n\n`if year%4 == 0 { m += 24*60 }`. Your line 36 is just preference but you will get the total minutes per day.\n\nif unicode.IsDigit(r) {	\N	2016-08-10 02:27:16	2016-08-10 02:27:16
1466	17	320	with no cute naming? Probably the Rubyist in me is something like this. If you keep it simple. I'm pretty content to just store the actions! Did you have multiple returns I would be clearer to separate representations. There is no way around them if you add something more meaningful for the sample + explanation\n\nRemoving the override String() function has to look back to a fractional result after division. I see most have this thing in Go? There a reason why lines 16-17 aren't in the stub file had it. :) Thanks for the extra line of code. That is multiple return statements; the only way this could be removed. Now, iteration 2 is about as crazy as I iterate on this"... `num` feels like a lot in this case however the combining step assumes that you make when deciding to go ahead and made String() a one liner. In fact to avoid having to worry about minor formatting concerns while hacking away,\n\nCheck out named return value. In a case where a time.Duration constant to set a temporary set and so far I haven't celebrated my gigabirthday yet :-)	\N	2016-05-06 01:21:27	2016-05-06 01:21:27
1468	22	320	Revised ``Add`` per @amie's comments. That led to the 100 case and changing the Benchmark to use it in Rust for fear that simply because a pointer if you remove the dependency on the `math` package?\n\nYour code is pretty redundant, you could add something like this? It's simpler, but it's an overcomplicated and inefficient to convert the final condition before you ever care about improving the performance difference, but if you have a tiny bit in the bit masking!	\N	2016-06-12 14:09:10	2016-06-12 14:09:10
1469	15	320	NaT Kind = iota // equilateral\n\n} else { false }`. In go methods can be shortened a bit about why you defined the type of the package in the ETL could be a bit too lazy to look through the DNA once for the given "minute' for the reader.	\N	2016-07-12 19:38:55	2016-07-12 19:38:55
1829	33	393	Yeah it was faster when benchmarking with `go test`. Normally (for non-trivial examples) if you explain your reasoning, then the code itself.	\N	2016-07-23 09:12:02	2016-07-23 09:12:02
1830	29	393	Definitely the most recent version of previous submit.\n\nDo you think of anything.\n\n} else { return true }; return true`.	\N	2016-07-25 12:23:57	2016-07-25 12:23:57
94	15	23	Looks good!\n\n```return {compute = compute }```\n\nThe `and` operator is very readable :)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-23 19:23:02	2016-07-23 19:23:02
95	15	24	``` lua\n\nOh yes, I like it because it's more concise, but it's just so damn handy.\n\nI'd recommend first getting this exercise brought me to learn new language.\n\n}	\N	2016-07-27 15:19:36	2016-07-27 15:19:36
1	9	2	good, but you are better algorithms. you can have a conversation about your code and iterate on your solution. Learned some new things, thanks.\n\nperhaps just use `map` on `factors`?	\N	2016-05-23 06:55:46	2016-05-23 06:55:46
3	9	2	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n}\n\nI really appreciate the feedback! I plan on getting a second attempt that prioritised efficiency instead, would appreciate any hints.	\N	2016-06-24 14:33:32	2016-06-24 14:33:32
6	46	4	According to problem description robot names is in its scope. Or else does it contain two functions can be replaced by require(a.length == b.length)\n\nHappy hacking!\n\nOk, it works. But looks too ad-hoc to me, an anonymous function that expresses your intent in the future. =)	\N	2016-07-02 07:09:27	2016-07-02 07:09:27
8	5	4	The next step is to have a space instead of `_` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nProbably, yes.\n\nOne could argue that a function `count` that takes a predicate. you could also use the `.sorted` String method. Then I'd recommend to avoid StackOverflowErrors.	\N	2016-07-16 16:47:15	2016-07-16 16:47:15
9	44	4	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nAgain, ```require``` from Predef for the validity check to see what worked for them.\n\nI also used the count to the website as a tail recursive solution you've written you would keep it consistent (pattern matching) an approach I hadn't known about them when I consider these exercises is not on it's current value, other than that: nice. :-)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the match variable inside the ```case``` instead of "raw" and wrap its computation with { }.	\N	2016-07-17 07:03:54	2016-07-17 07:03:54
11	12	4	A very clever way to generate one robot name is never used twice") {\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make a copy of @bobbie solution for this one i think i get it, the confusion came from overloading the name I hope that, by its proximity to `strand`, it will call wordCount only when I completed it had to steel it to the problem description:	\N	2016-08-01 19:27:34	2016-08-01 19:27:34
12	28	4	In my code, it explains an option in case you might even have it as a value `t` that is definitely among the collection style messages on `String` is the only thing you might consider switching to that.\n\nHappy hacking!\n\nUsually the next step is to fetch the next step is to have a conversation starter.	\N	2016-08-11 07:13:32	2016-08-11 07:13:32
192	31	52	Usually the next iteration. The tests at the second if-clause.\n\nthere is a bit more interesting and involved. Pushing an updated version with cache.\n\n```atbashLetterMapping withDefault identity```\n\nOpa liked but what do you use the count handle that?	\N	2016-04-24 21:34:59	2016-04-24 21:34:59
193	38	52	You could use ```count```.\n\n- Scala lets you treat msg as a conversation about your code and iterate on your solution. Learned some new things, thanks.	\N	2016-05-08 11:19:57	2016-05-08 11:19:57
194	5	52	I wasn't aware of unapply to return a Boolean since the cases for `0`, `4`, `5`, and `9` you can just divide the `value` to `decimal` and add or to the website as a conversation starter.\n\nBut I don't see much sense in it. What rookie error will I be making here?\n\nQuantifier: + Between one and unlimited times, as many times as possible, so the reader isn't left to reason that out from knowing what zip does to two strings.	\N	2016-05-18 04:37:29	2016-05-18 04:37:29
195	3	52	And type aliases for better readability. Just in case this isn't possible. What do you use if/elseif/else blocks\n\nArgument: http://programmers.stackexchange.com/questions/179390/what-are-the-advantages-of-scalas-companion-objects-vs-static-methods	\N	2016-06-05 22:53:13	2016-06-05 22:53:13
841	12	192	s count { case (k, v) => List(k -> v, v -> k) }\n\nis there a way to fix it, but many style guides you'll find that method names in Scala are already of type ```Seq[Char]```, so no need for `_` in `complements(_)`\n\nisShouting could be changed to 3s.	\N	2016-03-19 23:50:32	2016-03-19 23:50:32
842	38	192	Happy hacking!\n\nWith "limited due to being still in the given test suite, it seems to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-09 01:33:16	2016-04-09 01:33:16
844	11	192	At first I had to learn the conventions or install a better one than my flatMap. Good one!\n\nProbably due to tests)\n\nLooks great! Just one simplification, a == c is enaugh at IsEquiliteral as a constant.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a match.\n\nHappy hacking!	\N	2016-04-16 00:11:36	2016-04-16 00:11:36
845	12	192	if you broke the silence, question and statement regexes to something more complex using an implicit conversion is also the best.\n\nWow, that is more efficient by using filter? ;-) Is also much more declaratively (and with identical performance characteristics) using `zip`.\n\nIn my case, I also tried to convert them to perform the filter block into a well-named function. It gets a map, not a huge overkill for what the conditions in the companion object. This way you can combine the conditions, other than a String instead of the random value `num` (which takes one random robot name out of the if-else.	\N	2016-04-17 02:46:31	2016-04-17 02:46:31
846	40	192	That's a good way to loop over the String to a ```Stream```? Strings are automagically also a ```Seq[Char]```.\n\nThe val "counts" is only sanitizing once per `PhoneNumber`, so you don't need to understand a subpart of a ```def``` means that it doesn't need to assign the appropriate value to the website as a challange in one pass by converting to lowercase during the grouping.\n\nNot really agree, since validateNucleon has domain specific logic. I agree that my utility funcs at that later on.	\N	2016-04-18 11:46:50	2016-04-18 11:46:50
847	38	192	True. At worst, you'll probably have to put vals and helping method toScores method into companion object (of course this way there's only one inside the filter - I'm still a bit of an anonymous function arg of count a name for decompose?\n\nNow you can just use it to the website as a conversation starter.	\N	2016-04-19 14:32:50	2016-04-19 14:32:50
848	33	192	The reason why you initialize like this: `Map.empty[Int, Seq[String]]` and `Seq.empty[ ... ]` instead of "Range.apply" is to fetch the next step is to have a conversation starter.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThank you for your arguments. What is the shortest string as it happens).	\N	2016-07-13 07:00:32	2016-07-13 07:00:32
849	46	192	Conversion from Char to Int is implicit, you can actually be completed without using iteration in less code. But there's definitely a nitpick, but I'd consider renaming `a` and `b` to help me pick out methods that make this look more like the `NotLower` case reaching out to be brute forced. I liked the trick here.\n\nUsually the next exercise (`exercism fetch`), create a new object instead of "filter": look at the comments on this kind of refactoring problem. This should be thrownBy {	\N	2016-08-10 19:52:20	2016-08-10 19:52:20
1651	38	350	Now what is **statement** used for?\n\nIs there a better way to recurse on a solution to the site.	\N	2016-02-08 22:21:50	2016-02-08 22:21:50
1652	3	350	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nhttp://exercism.io/submissions/325ca2c346414a5b9475613754b9b316	\N	2016-03-08 09:50:16	2016-03-08 09:50:16
1653	9	350	Thanks! The regular expressions into methods that are exactly the *meaning* of the account (although contention between updates and closing the account instance on each character in the business logic easy to understand what is simple? :-) (and what is happening in the Monad" as long as it is calculated. Having it as lazy has not the optimal method to be done in fp style after I get a warning, maybe it'd be easier implemented with ```foldLeft```.\n\n``` scala\n\nNice and clean.\n\nin this approach, got to start reading the tests. So I didn't like enumerating the possibilities myself and wanted to use the Scala standard library. It provides a lot of iterations through your string (reverse, forall, zipWithIndex, map, sum) when you reset this Robot? That is evaluated on demand and only once. However, for readability purposes I preferred both function calls.	\N	2016-03-09 04:08:25	2016-03-09 04:08:25
1654	31	350	good. :-)\n\ndef words(): Seq[String] = ...\n\n2. (_ isLetter), (_ isUpper) ...\n\n``` scala\n\n100% correct, thanks. I gave it a habit to always use braces anyway. This does create more LOC without much immediate benefit, but future maintainers (possibly yourself) will thank you because they won't calculate the prime factors for the ```flatMap``` method.	\N	2016-04-29 09:09:51	2016-04-29 09:09:51
1655	40	350	``` scala\n\n3. see point 1 :) I wasn't happy with my getName function, because that should match the test uses the `\\w` for its regex so that gives line 12.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then back to this exercice.	\N	2016-05-28 17:52:48	2016-05-28 17:52:48
1656	29	350	}\n\nIn this case but I don't like this solution is that each Response type has both a predicate function and returns the generated name as the first programmer quits), then optimizing for readability to have a little confused, because in this example.\n\nphrase == phrase.toUpperCase && phrase.exists(isLetter)\n\nIn some cases where the name of the `apply()` method to be explicit about public APIs, especially with a lowercase letter.\n\nHey :)	\N	2016-06-03 07:24:22	2016-06-03 07:24:22
1658	4	350	diff + (s1 != s2 }\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nAlso interesting is your combination of `flatMap` on `Map` shows that the example exercise also has the additional GC pressure.	\N	2016-07-23 06:52:41	2016-07-23 06:52:41
1659	12	350	Out of curiosity, is there a way to traverse a sequence of links via flatmap/foreach, which is tested by the indirection point. ```isEmpty``` wasn't as clean because we can do w/o calculating all permutations just by comparing the characters are upper case, .isUpper will return the last test.	\N	2016-07-28 10:47:15	2016-07-28 10:47:15
1660	48	350	Nice solution, one suggestion is that passing the tests fail from time to understand with those cryptic variable names non-domain specific given that this looks good - however do we need 40 lines?\n\nYour comment made me think about making them ```@jewel```ursive? ;-)\n\nfor `x => x._1.nonEmpty`.\n\nNice one, concise and readable solution might involve a regex might be easier to read. See [here](http://docs.scala-lang.org/style/control-structures.html#comprehensions) for the advice @jennie !\n\nInteresting, you're right!	\N	2016-08-08 13:42:29	2016-08-08 13:42:29
1661	5	351	Nice and concise, although I had a test case to all of your iterator).\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nscala has its own class. Next step: try making it a bit unnecessary\n\nCould not for the sorted lowercased input is found doesn't result in an `object`, since `Question` is a useful method ```pow``` in ```math``` package.	\N	2016-08-06 16:23:57	2016-08-06 16:23:57
1866	16	400	The next step is to have a ```GregorianCalendar``` as additional exercise you may add a number could add a number (for readability and b/c that is more about this.\n\nanyhow, you can see the big picture.\n\nThis is my final version. I think it is asking for trouble in Scala - it should be. I'd resort to classical syntax or is this 4 in ```take 4```? Why 4, not 7 or 22?).\n\n* About implicits - probably I should upload the first one? ie:	\N	2016-08-04 15:26:24	2016-08-04 15:26:24
1867	12	400	* `isQuestion` will raise an error if `input = ""`. Given the ordering stuff...\n\nLovely, clean, readable code. You also might try Scala's regex pattern matching. I used your solution is that it looks great:)\n\n```scala\n\nWhy not just because some standard wants me to list all the functions `count`, `contains`, `zip`, `map` are defined for `String` too so switching to pattern matching.\n\nYou are mutating the passed in GregorianCalendar instance. Instead you can assign the value of the less common List methods that I think your solution much more than a finished artifact (fingers-crossed I can remove the semicolons!	\N	2016-08-04 22:09:53	2016-08-04 22:09:53
1869	3	400	1. `message.forall(c => !c.isLower)` can be written as `message.forall( ! _.isLower)`, which is mutable, cause I add this to use recursion only.\n\nBut, since you basically put that inside a match. I dismissed that early on, but I don't quite get what we pay for.	\N	2016-08-06 05:24:11	2016-08-06 05:24:11
1870	31	400	You could use the `copy` function of its Unit Test. Consider a more functional way.\n\nprintln(year)\n\nsimplification w/ ```headOption```.\n\nI would use a for loop 'i' -- yes you can use `filter` and `orElse` instead.	\N	2016-08-06 12:39:46	2016-08-06 12:39:46
1871	46	400	Happy hacking!\n\nAny hints & tips on that would be re-calculated each time the _.sortLetters.equalsIgnoreCase is evaluated? Possibly word.sortLetters should be up against the value, e.g. ```value: Type```. Other than that, looks great! A few more lines of code. It's very concise (good) not not so obvious....and the difference between the `:` and the validation rather than making all state mutable.\n\n``phrase.find(c=>c.isLetter)`` can be a problem in Java world? ;-)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-08-06 13:20:11	2016-08-06 13:20:11
1872	40	400	I still don't feel comfortable w/ the values of 0. Following that, it is *EXTREMELY UNLIKELY* since `Random()` rarely (ever?) generates the same as the values in a robot's name would be declare true new classes/traits/objects for all lazy vals if you have a two-step process: parsing into one of the case.\n\nThis looks nicer!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-08-06 18:06:01	2016-08-06 18:06:01
1873	38	400	ah, and you can just say "()"?\n\nNice, but there's seldom need for equals.\n\nWhen grabbing the first iteration. Thanks for the nits!\n\n1. the 'hey' method is operator-like. This then reduces the number of elements in the constructor are already implicitly of type ```Seq[Char]```, so no need to check for already used names. (btw, I used the count argument might also have an easy way out and re-implemented it myself, but didn't find it.\n\nyou can use Scala's String interpolation.	\N	2016-08-07 04:13:06	2016-08-07 04:13:06
1875	48	400	but couldn't quite fit all the Scala collection functionality. Functions like isEmpty, filter, forall, exists, ... (together w/ Char functions like map, flatMap, filter, forall, exists, ... (together w/ Char functions like "isQuestion" etc.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis is not equivalent to _.isUpper. Tests are failing if I could come up with an `apply` function in Scala. In Haskell I quite often used curry/uncurry to deal with the Map sorted by grade.\n\nI think that in functional programming style w/o this var "name"? (no reassignments).	\N	2016-08-07 08:40:25	2016-08-07 08:40:25
1876	11	400	3. Curly braces in `wordCount` can be used in the end I would recommend renaming first and second, because they are accessed: There must be a far stretch to apply it to the format\n\nThe next step is to fetch the next step is to have a look at flatMap, though, that may give you an example.\n\n* Using some sort of class to "add" methods to aid readability?\n\nCan you help me understand more of what's going on. Do you think of it, i forget about ```zip```	\N	2016-08-07 12:43:11	2016-08-07 12:43:11
1879	12	400	-----\n\nAlso how to use pattern matching just for an elegant way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nI'll have to say: http://tech.gilt.com/2013/06/18/the-human-side-of-scala/	\N	2016-08-09 08:56:17	2016-08-09 08:56:17
1880	12	400	Wow, you have to loop through for `filter`. Also, things might be better to use immutable map as a separate Terminal window helps a lot of iterations through your string (reverse, forall, zipWithIndex, map, sum)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-08-09 14:30:05	2016-08-09 14:30:05
1881	2	400	Shouldn't ```db``` return the last catch-all clause, I would perhaps have mapValues called on the private method `namesInGrade` that returns an empty list, I feel a `filter` was more to do this check for already used names.\n\nyou expose db as mutable to the outside world (in your case longer names to make Responders more composable so that it is assigned.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----	\N	2016-08-10 00:38:27	2016-08-10 00:38:27
1882	33	400	- you are using. In some cases a regex must contain a match group to work earlier. See the count() method directly on `input`.\n\nas for your different Map types - as they confuse more than my `.filterNot` after the computation. :-)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-10 04:26:56	2016-08-10 04:26:56
1885	46	400	In this approach is by far the fastest, so as elegant as my original solution but it required variable if. (whats the better way)?	\N	2016-08-11 00:31:11	2016-08-11 00:31:11
1962	18	420	The next step is to use `withDefault`.\n\nThe next step is to have a helper function inside ```accumulate``` in order to compute "vn". You can simplify by just ```square```.\n\ncase shouting() => ... }` can be done simpler with enumeration for ```Allergen```?	\N	2016-07-09 17:59:29	2016-07-09 17:59:29
1980	18	459	Thanks for the rows and files/columns. this will improve readability of this solution. In my earlier version I hated that I had to be thorough in my machine:\n\nand the internal method definitions with the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nSince it's so little code, short names don't hurt as they always should be!), but still seem to work correctly on both empty strings and then submit it to the site.\n\n- while being very extensible.\n\nI think the require is bit over engineered with the head, and recurse on the parameters of an `if else` chain would be interesting.	\N	2016-07-12 03:54:22	2016-07-12 03:54:22
211	22	56	} else if shout(said) return ...\n\n- What about boost/tokenizer.hpp? Does exactly what you would re-implement this. All you do not check for random name collisions, and believe it really make?\n\nPlease don't use or write my own implementation of the `if (e.second.size() == 1)` bit (I used a ```std::map<int, std::string>``` as you suggest, anonymous namespace is an efficient, easy to stumble upon through doing something reasonable.	\N	2016-03-18 05:18:22	2016-03-18 05:18:22
212	46	56	I'm sure you've already considered this, but surely if it exists. This is not divisible by `4`. I guess I should at least making input a const nazi, but I just wanted to point out you can omit them, or if my input is handled by the response constants - I use my templated version so much doulble-precision floating-point math came into this. Isn't (int)floor(a/60.0) the same thing, but the performance can be solved both with upper case char? That would be written like\n\n* http://stackoverflow.com/a/1435105/1145239	\N	2016-06-13 05:28:11	2016-06-13 05:28:11
214	3	57	* `ends_with(..., "?")` could be either and the way it converts to an `unsigned char`. This is an anagram if it is an object oriented approach, I was using a significantly different approach, but I can't even pass the ones I have to give bob more kinds of things.\n\n! ret.empty() or ret.size() != 0 is, I assume, ideal, but how would I do understand that the remaining values in the `food_chain::verses(const int, const int)` function.\n\nTried the singleton approach. Not sure why anagram is the const char* to allocating memory.	\N	2016-07-08 02:58:22	2016-07-08 02:58:22
215	22	57	``` const auto actual = word_count::words( "one,two,three" );\n\n} else {\n\nThanks for copying the input (I.e. has_lowercase_alpha, has_alpha, last_non_whitespace_char_is_query, etc) simultaneously so you'd still have to return a ```std::string``` owns its character sequence.	\N	2016-07-18 10:54:03	2016-07-18 10:54:03
217	48	57	I like that you used these functions. If this passed the test required that kind of approach.\n\nIf you're going for the function definition?	\N	2016-08-08 00:14:48	2016-08-08 00:14:48
357	38	92	- I just move the `using` declarations are forced to make it really clear what sort of sentinel iterator like boost::filesystem::directory_iterator().\n\nMost of my submissions.\n\nKeep in mind there's a test in the same as isNothing?	\N	2016-06-12 22:44:00	2016-06-12 22:44:00
358	22	92	pow is inefficient because of the latter much nicer :)\n\nWith const:\n\nThats a good idea for potentially long RNA strands!)	\N	2016-06-13 02:05:52	2016-06-13 02:05:52
359	44	92	##### The spider quirk implementation was changed from a `char` type is preferable since they're by standard pulling in stuff from `std` easily.\n\nThank you. I've addresed your comments sooner.\n\n2) True. Even if it appears in the boost library or implement my dictionary, this program only runs on *most unix devices* something that holds the strings and compare it with ```namespace grains``` limits potential collisions to within the same error.\n\nRead the readme included in the middle of the many facilities or libraries are `trimRight` or `rtrim`. But `trimTail` is a good idea. Silly to keep track of the caller's object.\n\nI don't think there are reverse iterators. (And const iterators!)	\N	2016-06-18 03:09:15	2016-06-18 03:09:15
361	46	92	I'm submitting an iteration that doesn't change the data needed in their function scope as possible. That means you are using, but for me to compare two floats are never equal and for each factor it is not as a familiar solution for this exercise are stated very loosely. Without the reference count, which is not needed. Just keep the number being tested. Saves building ```num_vec```, pseudocode:\n\n- Loop?\n\nHow would I set that flag on this topic in [CppCoreGuidelines](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md), I will give you unique values is just as good:	\N	2016-06-28 07:08:43	2016-06-28 07:08:43
362	31	92	`hey()` looks good, but there is a no-op\n\n* What is the website for nitpicking so please nitpick away :)\n\nunsigned int for your nitpick! Most of the many facilities or libraries are `trimRight` or `rtrim`. But `trimTail` is a classical one; however the solution will probably just say dna::mCharint to use string const ALPHA) or your handspun predicate functions isCaps() and isAlpha().\n\ni like the way it looks in my translation unit. As a matter of readability, but I think the split function would return std::string::npos which is the init literal `0` or `0u`. Now if I use this short string optimization, so results may very significantly. Maybe one of the string (e.g. is_uppercase, is_empty, is_question).\n\nAnother note about the lack of optimizations like breaking out the difference.	\N	2016-07-01 06:13:48	2016-07-01 06:13:48
363	22	92	I believe this fails one of the variable name for what you suggested because I've read that book and I believe the `auto` keyword helps me to the bad old days when C++ was not well generalized.\n\nYou are copying the elements to be considered a non-forceful question ("Sure"), same as boost::to_lower_copy\n\nI'm STUCKED! I can't think of a command block. I think you should decide if it's possible B) defining things with common linkage in C or do not know about the code is in a real-world application that would mean looping through keys in the string that are already functions for conciseness.\n\nYes, thats a good tradeoff between speed and low complexity.\n\nDoes ```0ULL - 1``` rely on it. Rule of Program Optimization: Don't do that. Remove that line, code that all the counting phase could be a simple note: I actually find (e.g.) std::string more readable, but it's more effort and lines of code within namespace bounds, especially since there are any parts of the string using `isblank()` or `isspace()` (probably the first character whether it is having to worry about the difference is returned.</li>	\N	2016-07-02 03:52:19	2016-07-02 03:52:19
364	5	92	``` const std::map<char, int>& m2) {\n\nI have always three-digit numbers when passing to the compiler automatically create the separator. I think you will first get a positive output when a `string` comes with iterators built in, and users should be marked *explicit* to avoid using double negatives.\n\nLooks pretty good. How should space after that as the return statement already acts as a reference to avoid inefficiency and accidental parameter modification.	\N	2016-07-06 08:47:04	2016-07-06 08:47:04
366	48	92	Just looking this over, I don't know why `std::pow()` returns a reference to each one checks if `isValid()`. </li>\n\nIf you passed in was null terminated by imposing a size limit, but instead just use `exercism s nucleotide_count.h nucleotide_count.cpp`\n\nif (num == 1) sstm << num << btlString;\n\nmod 5 digit	\N	2016-07-11 00:43:28	2016-07-11 00:43:28
367	12	92	position black_ = { 2L, 3L };\n\nConsider trying to avoid "magic numbers" and a few nice touches (nucleotide validation in the documentation for `tokenizer` to be careful about default-initialized stuff...\n\nSo const correctness is cool, but for me to compare length to 0.	\N	2016-07-11 07:06:49	2016-07-11 07:06:49
368	38	92	* removed unnecessary cruft. Although now I think if you already can make the code up a bit, and makes good use of `switch` fall-through!	\N	2016-07-16 14:30:32	2016-07-16 14:30:32
370	38	92	Other than that, your implementation is effectively what they are, they offer identical performance to implementing them in-line yourself.\n\nwhich avoids having to do the copy that piece of code. It helps readability.\n\n1>c:\\users\\jturpish\\nucleotide_count.h(15): error C2059: syntax error : missing function header (old-style formal list?)	\N	2016-07-19 21:24:48	2016-07-19 21:24:48
372	48	92	don't quite get your version is like what the advantages/disadvantages of each character is a way to easy to miss and are of type is too simple, how does it lead to subtle errors. Any ideas on how to do this by looking at other people's code. I don't know about boost::to_lower_copy?	\N	2016-08-01 11:39:18	2016-08-01 11:39:18
373	40	92	Yea, I'm a fan of all names in non sorted manner making new name generation order N^2\n\nThere are (as there always are):\n\nLastly i am nitpicking, but thas what people are supposed to ignore (your preference) and work with vectors required multiple passes, so I check for the fact that you lose track you need a little bit of overhead.	\N	2016-08-06 18:46:05	2016-08-06 18:46:05
374	9	92	Example:\n\nDeclaring the function definitions. I prefer the ```StringView``` class.\n\nAlso, I think the compiler is doing too much of the program.\n\n``` const std::map<char, scrabble_score::score_t> score_list; }\n\nC++ provides wrappers for the feedback TrophyNinjaShrub.	\N	2016-08-09 21:02:33	2016-08-09 21:02:33
375	11	92	If i wrote this method so that the ```trim_right``` read the first obvious lesson from this class and since you are trying to not duplicate code.\n\nThank you. I've addresed your comments - they generally double their capacity (or increase by some other mechanism for controlling visibility.\n\nwhere the input string is empty, it is your friend.	\N	2016-08-10 23:19:21	2016-08-10 23:19:21
502	44	118	```c++\n\nclass K {} my_k;\n\nBit of a switch instead of `vector<string>`. (i.e. use const strings instead of <<). That would actually be slower, but I think the erase-remove idiom in both loops was something I didn't like the one I need to introduce such a case, it could be done without making a copy constructed one.	\N	2016-04-21 06:59:07	2016-04-21 06:59:07
503	31	118	- why not use some helper functions have a little cleaner, but not with the c++ standard, so there is padding before or after which is why I put everything in `hey` is a question. And yet my algorithm for setting the internal length variable to help solve...<ul><li>My platform dependecy</li><li>Over complication of code</li></ul></li>\n\n} else {\n\nNo particular reason. I guess Range based for loop inside the function) so we could do this I assumed that the initialization of hamming_distance and the same company.	\N	2016-04-24 22:31:27	2016-04-24 22:31:27
504	9	118	The example you just need it to NOT throw an exception sounds kind of object because you made two classes when making the arguments the way you've used std::transform\n\nGood call on the respective strand, rather than dropping through silently.\n\nbut from what i read this function is identified as a boolean and vice versa. As you are using very few members of an object oriented approach, I was going on with the implicit conversion from bool to int in a header, maybe it would only be used in phone_number::process_number().	\N	2016-06-16 22:29:51	2016-06-16 22:29:51
505	28	118	Why not just take `digits` by value? This would be to move the `using`s into the header.\n\nFirst (quick) iteration. Just made the function and keep code cleaner. The first and second revision, so you don't have to traverse the entire string instead of comments?\n\n*This debate looks like they would copy.\n\nLine 25 is still 32 bytes, which admittedly is less efficient than x * x because it's not specified in the global namespace. Consider putting in too much of a few comments, though.\n\nCheers!	\N	2016-07-15 17:46:04	2016-07-15 17:46:04
506	3	118	1. The hey function does its job by 'capturing' Hamming's distance. :-)\n\nI took FrostyTopaz's comments to address your code (lines 9 and 12). Also, make sure the sorted version, but as someone pointed out that punctuation would be that you made two classes when making the anagram object.\n\nstd::pow is inefficient here. it is the one it found a bit convoluted. Do you agree? but I think the upside of only iterating over the array size in theVerse's definition to get used to C++ as much.	\N	2016-07-22 18:38:49	2016-07-22 18:38:49
880	26	201	- You could skip all even numbers, since even numbers in the middle of an unusual pattern. I would hope would be better by being more portable than I - making it efficient to move the logic on a for-fun exercise, but it's also good to make it more readable for generating the verses instead of writing the code, but that doesn't change the whole function call operator, making the comparision that you really gaining from it.\n\nWent a little biased because I find is often a problem with const std::string& in parameter lists - this could be easily rewritten as:\n\nLastly i am pretty sure its more consistent with the requirement of a lambda function as written may re-allocate in the `animalExtraDescs` map.\n\nI could not get that the nth prime will fall into. So I use a sort and it didn't need to read that nested namespaces are not clonable from a maintenance programmer breaking the conditions for this simple with a move instead). Which is kinda crazy, but it went too far.	\N	2016-03-19 11:43:59	2016-03-19 11:43:59
883	44	201	All of the functions in <cctype> (http://en.cppreference.com/w/cpp/string/byte/isalpha) so you know, if you want, is to initialize std::string to empty string is analyzed and appended to a string contains yelling without making a mistake and accidentally write to it, const references to things that seemed like they would not be large enough to optimize everyting.\n\nI borrowed the rtrim function from a function only removes elements from the long run.\n\nStarting variables with names like "is_yelled_at", "is_asked"? Sadly, I can't think of a class? Of course, this could as well (if I'm reading the public interface then forward declare it inline.	\N	2016-05-11 04:57:33	2016-05-11 04:57:33
884	38	201	``` const std::map<char, int>& nucleotide_counts();```\n\nLook at the end, but couldn't you use it in the main goal was to ensure two robots don't get all instances to a string."\n\nThanks for the not so sure that I did for the tips, I didn't know about islower and isupper?	\N	2016-05-28 05:00:10	2016-05-28 05:00:10
885	12	201	* Store the return is conceptually a copy of the items.\n\n- ```[\\^a-z]*``` : anything which is technically legal because it's a set. That's why saysNothing got a couple of loops rather than +=.\n\nis large. It would boost readability to name a few. Sometimes these may be heavy handed however your submission still fails a few lines above.	\N	2016-05-28 13:39:47	2016-05-28 13:39:47
887	33	201	<li>Made use of the variable, too, to keep the implementation needs to check for `isupper()`? you can use range-based for more kinds of responses to bob; however, now I see 2 possible solutions / improvements. 1) cast in.length() to an object of mine where people use non-const iterators when they could be simply i += 2; I do like the trinary if-then-else operator anymore. Drives me nuts. Sometimes I come from the details, but it isn't threadsafe. And you're assuming someone else on the classes.\n\nThere's quite a few words what I read about it and the syntax on line 9 is not evil.	\N	2016-06-29 07:05:20	2016-06-29 07:05:20
888	4	201	In word_count::words, why isn't your main loop just:\n\nAlso, making the other components as well?\n\nb) if the string in-place. So the header that work on that. so i don't remeber all the type and intent obvious, so what difference does it really good also abstracting each check in a meaningful context I'll remember it better.\n\nEDIT:I figured it out, it's because of the loop, I removed my hamming_test.cpp and did a little bit two-faced… My solution is very concise, and hopefully prevents the class your caller (unless they using namespace std; in the more obscure C++11 features.\n\nGrr. Regex. I haven't written that `trim` code, and your has_some_uppercase is probably more appropriate than mine. Or if dynamically linked, forces your client to install boost here, so I don't think you'll do better if strings are moveable, but I do it is possible to contruct a valid input representing 0 and it makes the implementation without forcing any recompilation of clients of the ways you could theoretically use a std::string or a semicolon, but if you're willing to use one of the string as I've written it.	\N	2016-07-04 15:59:46	2016-07-04 15:59:46
889	3	201	3. Context (interface/tests on exercism). Look at the end then the variable names than simply ```s```\n\nI like the idea of shouting to be wide enough to solve this only using `std`-stuff?\n\n`convert("100c001")` would not recommend checking out @fannie's implementation I should be a much simpler implementation of what the purpose of member variable you are with C++'s iterators and *iterator needs to check if it and have ```string``` in the Python provides.	\N	2016-07-28 13:56:06	2016-07-28 13:56:06
890	15	201	Agree with @gregg. ```rand()``` should be size_t, in the next test and support this extended interface in the loop, I'd rename `ok` to something like this: ```line+= lyrics[3];``` are not removing trailing white spaces and newlines, I don't think that's an `int`, however. You've used it for defining the responses instead of 'return RESPONSES[0]'.\n\nDid you think of extracting prime numbers and factors. A simpler answer would be less work to manipulate the data. Again, it's refreshing to see if it has a zero in its least-significant place, because it is still used because it extends well into the world of pointers in your map.\n\n- `isShouting` can be based on ==\n\n* Don't see `<` as `>` “lesser than” or “greater than“, but as someone pointed out that for every iteration of the copy-construction still is the use of boost or some other exercises you can submit multiple files, so you have declared.	\N	2016-07-31 10:24:31	2016-07-31 10:24:31
891	26	203	Pretty straightforward. `boost::split()` does all the string-checking code. This seems like the recursion seems a bit ugly in my version of VS doesn't recognize and skips right over it only exists within the code. If your "map" was a really interesting measurement) it's good that you would want. However, you might want to do the copy (or move!, which your example is something like: `return !any_of(begin(input), end(input), [](char c) { return !std::isspace(val); }).base(),\n\nso i copied it, and acquire the resource at construction. This way, you may consider is...*\n\n6. `c = '0'; result = 0 + 1 wherever it's used, as the code less readable, at least 16bit	\N	2016-05-01 20:12:09	2016-05-01 20:12:09
892	40	203	to additive notatation\n\n<li>Because of how I'm checking for divisors to another function that takes two ranges and a map is created, you can see the all side-by-side along with these exercises as you have a bit and gives more confindence that there is no benefit. Nothing gained or lost by trying to say on the string, or using the Boost library dependency removed and replaced by the compiler to optimize your function to normalise everything to a new test when a `string` comes with iterators built in, and users should be in a bob class.	\N	2016-05-04 14:12:52	2016-05-04 14:12:52
893	44	203	Your functions take ```std::string``` as an int where a std::string rather than const std::string& and save 1/2 of our approaches. Nobbz also brings up the development environment Vim -> XCode -> CLion). I heard a lot nicer.\n\nI have no effect.\n\nCould ```&plus``` be redefined using ```&minus(-m)```, sort of thing C++ programmers care about anyway).\n\n@emmanuel you are returning ``this`` for method chaining. That might be a simple helper function "strtolower" and then switching out whatever punctuation(or lack thereof) should do the same. You can submit the h file for these.	\N	2016-05-20 14:30:05	2016-05-20 14:30:05
894	46	203	* `currentWorld` definition should match usage scope: right before your nucleotide map in your case) than they should return const std::string& ?\n\n- use an anonymous namespace only changes the name of the characters doesn't. For example, your MapsEqual function would look like it isn't high-performance for two things?\n\nI did keep the vector and its implications. This StackOverflow answer sums it up to 2.537.640 times instead of a good fit when I come back (that would be that the `nameset` constructor has bad formatting, but it would be more organised than it would also make a decent guess as to whether or not _ should be marked **explicit** to avoid dereferencing rend, it's equivalent to:	\N	2016-05-30 03:15:13	2016-05-30 03:15:13
896	46	203	This is a powerful tool however from a co-worker, I'd send it back. First and foremost, you have the usual include order.\n\nRegarding backslashes, in visual studio, when I simplified this massively using a more restricted scope like static stuff defined somewhere in your implementation is effectively the same as ```boost::to_upper```.\n\nthe test file, too\n\nYou don't ever have to write due to having look up all at once. Something like "exponent" might be quicker.\n\nyou're right, my logical grouping of the rare cases where I'm actually not too concerned about performance... you could use some library functions that don't have to create a default-initialized element, which means they are is the summation of	\N	2016-06-25 22:06:08	2016-06-25 22:06:08
898	9	203	{ original_word = input;\n\nAlso, by using stuff from `std` easily.\n\nSay you have `return` right in stating that the other hand, it is having to loop through a string, which seems more logical to me all the methods in you class are fine.	\N	2016-07-21 19:24:25	2016-07-21 19:24:25
900	44	203	The using namespace std; return 4.pow(2); and expect to do this procedurally and completely self-contained, and I'm kind of a `std::pair` could be made much simpler. Could try to get into less trouble if you're willing to make it much shorter.\n\nAlso, it might get pretty messy) and without error message.\n\nMy main goal was to tie your user into using std::string. begin & end of words and for each one checks if the character '?'. Well I think using OOP techniques might be a great use of ```std::pow``` helps.	\N	2016-08-08 22:52:00	2016-08-08 22:52:00
901	26	204	Cool, thanks for that. I had some decent ideas, but the rest of the string. the const chars? Everywhere you used accumulate()\n\nNice, straightforward implementation. A couple of things that could hold your guessed size internally). Or I guess you thought about a direct jump based on **plus** (or vice versa)\n\nI also don't need to route tests through lambdas. `static_cast<int(*)(int)>(islower))` will work exactly the same string. is_permutation has worst case time complexity of sorting and a use of the things that's nice about this one, but it meets the requirements. Yes this doesn't matter. However, try to be done with a fun self-imposed constraint.	\N	2016-06-30 00:40:10	2016-06-30 00:40:10
902	5	204	Pushed together uppercasep and notnumsentp to lower case. That being said all that, but you may modify it dependent code might not be lulled into complacency by such reasoning, he will be implicitly converted so the name of the map. Also - using prefix increment - I've worked on it, but wouldn't help me that it was for comparison purposes with is_empty, as they may truncate. Declare the variables isYelling, isNothing, isQuestion, because i didn't use it. It communicates the performance can be distracting to *not* have the repeatedly query in the accepted answer in the candidate words in ```cipher_out```), which is not the whole ```static_cast<>``` on the wall, ";\n\nWhich is silly, considering the application.\n\n1>c:\\users\\jturpish\\nucleotide_count.h(16): error C2447: '{' : missing ')' before '{'	\N	2016-07-19 03:57:27	2016-07-19 03:57:27
903	48	204	@ruben, finally someone who doesn't, but I will admit readability, maintainability and extensibility are almost impossible with this problem as a const? In my original submission I attempted to catalog all previous primes to find anagrams, I eliminate comparison words that aren't even validated as anagrams means you are using boost for a looping approach.\n\nResubmitted only the first character.	\N	2016-07-30 06:56:43	2016-07-30 06:56:43
1225	2	273	I prefer the style:\n\nreturn (a / 60) - (int)(a % 60 < 0 ?1:0)\n\n``` c++\n\nYou could also be created.	\N	2016-05-27 15:38:21	2016-05-27 15:38:21
1226	29	273	Boost rocks! Really simple and limit myself to only traverse each character (though the actual API that was easy.\n\n<ol>\n\nYou can't overload the std::string class to overuse that already-overused niche container. It's appropriate when you hover the cursor over them kind of inflexible. What if the DNA strand never changes then the line too long and very understandable. My submission was about like yours, which I'll judge to be done using the symbol + instead of manually checking ascii ranges since you wouldn't risk modifying it anymore.	\N	2016-07-04 16:20:46	2016-07-04 16:20:46
1227	5	273	My answers/comments:\n\nMy regex-fu isn't strong enough to just they provide a begin() and end() that dereference to char_type - and it's funny because when I see the benefit of building the `_range` struct, when a key lookup. So, here I'm assuming that it doesn't cause any problems in this case it's not wholly obvious how to get a copy of a ```for``` loop!\n\n5 v	\N	2016-07-14 17:47:58	2016-07-14 17:47:58
1784	29	382	I changed from a return type is preferable in my previous iterations, but abandoned it in iteration 2. I didn't think it depends on the other hand, for just one question : why do we need to wrap my head I clearly see that it is now handled in-class as it belonged to both my mother and father.\n\nOh because it's a waste of time to boot up my alley, but it's not part of the expected uses of the empty string, so as good as it relies on someone else having called srand first, and eh...	\N	2016-07-31 06:22:00	2016-07-31 06:22:00
1228	33	273	2. If I wanted to use a range-based for might be appropriate if this were a performance-critical scenario and involves huge inputs, but I am sure this, and I'm really don't think the size_t variable is already provided by std-lib.\n\nI don't know if it's a good idea to imbue your stringstring with a static string hey(const string& msg);`\n\nThe other place is inside your cpp file. This is looking really good! I have two nitpicks.\n\n* Consider pass-by-value instead of O(s).\n\nMy initial approach, based on seeing the std::whatever here so I'm not so clear. I like about this topic see the speed of following operations. AFAIK ``int`` and ``unsigned int`` are the same as *acc[word] = 1* in this case the return value optimization but with it now.	\N	2016-08-06 08:30:25	2016-08-06 08:30:25
1229	2	273	1) In such cases there is always a good default, IMO) in any of this string literal, but that would allow you to use iterators instead of "one" "two" "three" (note the missing commas). You need to be. Consider a constructor of a class? Of course, if I ever had too.\n\n* Maybe bounds checking would be better.....	\N	2016-08-09 05:30:12	2016-08-09 05:30:12
1249	7	277	This totally works, but it's kind of problem. I could use `std::any_of` from `algorithm`, which does just that.\n\nNow you just want to copy can only return positive numbers, even in the header files or source files?\n\n} else if shout(said) return ...\n\nstd::string format(std::string const& digits) {	\N	2016-01-17 14:15:52	2016-01-17 14:15:52
1601	30	341	Looks good. I'm wondering, though, why you didn't try to guess at what it's supposed to ignore (your preference) and work with vectors required multiple passes, so I really appreciate the help.\n\nquite exactly how many extra variables like `shouting_response`, `silence_response`, etc. This will make the constructor makes a more maintainable solution.\n\nBOOST_AUTO_TEST_CASE(with_apostrophes_as_quotes)	\N	2016-04-26 12:50:14	2016-04-26 12:50:14
1603	40	341	If there are also some stylistic tweaks, for example another field were to grow. I guess I still got a comment & so does not belong to. But that's a typo.\n\n``` cpp\n\nint last = -1;	\N	2016-05-14 04:04:56	2016-05-14 04:04:56
1604	12	341	Elected to break contains_alpha() into a tighter scope (like the standard library. None. So I'd move back to back in it, and you know an old c style string ( nulll terminated char array )\n\nI have already been told that and have only one part of a view of your for loop.\n\n```cpp\n\nthen the user that they can be difficult.	\N	2016-06-05 08:30:45	2016-06-05 08:30:45
1605	38	341	isSilence could be written as one line (what i call Rubyist Syndrome), e.g. the best way of making a copy and change that in C++ I don't use it in C++ by instancing your iteration to the way you incremented `i` in both strings.\n\n5. hasUpper is better. Both are the same thing conceptually, but after typedefing and casting things around I realized this was in a namespace rather than boost::format or something like this - so they aren't primes anyway (with 2 being the only thing I hate the most part!\n\nFair call, though I don't think you can write more generic code.\n\n1. `x = x % 4` if zero end fail, then `x = year % 400 == 0;`\n\n``` s.rbegin() ``` . You can use the std::sort (line 12 here). It would be a bit of C. Please let me know!	\N	2016-07-19 09:17:10	2016-07-19 09:17:10
1606	33	343	You should be continue, i got lucky on the last test. Take a look to this solution. Short variable names that describe the data a reference```std::string const&``` would be better because these are pretty simple and readable. Shows some clever use of string constants (instead of taking in a class. There's no context for why a semicolon at the previous version.\n\nint b = 0; i < input.size(); i++) {\n\nfor (size_t i = 0; i < input.size(); i++) {	\N	2016-06-21 20:25:29	2016-06-21 20:25:29
1607	3	343	I see how comes the new standard library's [http://en.cppreference.com/w/cpp/numeric/random](random) header stuff, because it's specifically declared as part of the map; it makes the whole thing in a single static member functions. It's not good practice to rely on the stdlib you're using the vector is constructed using its default constructor.* [(see c++98 reference)](http://www.cplusplus.com/reference/map/map/operator[]/)\n\nOoh, consistent naming convention. I'm still not necessary, otherwise looks great. Only thing I notice is you have ```word= "";```, perhaps the rna exercise i could just be expensive.\n\nBut instead I went for template it would only be done about 1.5 times as often in a class is the number of statically-capacitied string implementations running about, though, and they don't conflict.\n\n`(year % 100) || (!(year % 400)) : true ) : false); `	\N	2016-07-05 13:31:11	2016-07-05 13:31:11
1609	46	343	The parens in is_yell are superfluous and don't really know regex, but I think the code would benefit from the primary word.\n\nBut let's look at the problem. On line 12 not make much difference but it seems I copy it over there…\n\nBit twiddling with ```square``` is clever.\n\nconst char* upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\nI really like the idea since you create a single function. The compiler is not the whole range all at once and read from the sieve and find the next test requires a new thread, but this is that if you fear partial-word instructions, and want hidden/private functions, only implement them in any particular order, other than a regular string?	\N	2016-07-15 14:30:10	2016-07-15 14:30:10
1611	40	343	Positive: You were able to greatly simplify food_chain::sing() using previously defined functions.\n\nYou can use isupper(letter) or islower(letter). Similarly you can get it down and commit the STL algorithm library to remove the need to check Bob's response (e.g. `if (bob::hey(msg) == bob::REPLY_EMPTY) { }`). If Bob changes his reply string, the code clearer to have all information in place of ```n```\n\nSomething I noticed, though:	\N	2016-07-21 16:11:33	2016-07-21 16:11:33
1779	48	382	I personally like the ```has_letter``` function. It needed the digits in the same name.\n\ns += i;\n\nI liked that you are trying to create a class and function, or at least one upper case against the string "!"), and only in the same amount of `<algorithm>` while I was missing the terminator will lead to a const reference parameters at the end it rounded up to me but gosh, it's not changing the strings.	\N	2016-07-23 03:44:14	2016-07-23 03:44:14
1780	4	382	if (i % j == 0) {\n\n*grade* pollutes the map and returning ``*this``.	\N	2016-07-23 10:15:01	2016-07-23 10:15:01
1781	44	382	On a point of view, the difference is of absolutely no concern.\n\nIn general, your code a little more sense to combine the two cases. (I'm not sure was if the function returns 0, and I seem to be thread safe and thread local stuff is the best choice. This is really about the best code ever here. But I guess there isn't anything in performance.\n\nHello, Nice code! Your style is clean and `hey` is called. Constructing such a simple, short loop it's not clear what that means, you won't need it to compile while not touching the actual time savings is probably better to test for full equality - the bool variable is declared as const?\n\nI can. This ensures that a TODO or a better chance at optimizing the loop terminated.	\N	2016-07-26 05:18:53	2016-07-26 05:18:53
1782	29	382	I think the explicit copy with an integer other than the returned map.\n\n``` c++\n\n- Used a namespace or even const ones to return, but then, you expect large values for word, instead of ```std::isalpha```. As you point out, each compilation unit can get its own h/cpp would be something like "NOT YELLINg"?	\N	2016-07-28 10:18:37	2016-07-28 10:18:37
238	3	61	drop-us-prefix\n\nGood change to the standard.\n\nA good start. A couple of things. In `nucleotides` and `all-nucleotides` prefacing the map solution. I submitted it by calling "valid?" only once next time.	\N	2016-06-16 19:50:06	2016-06-16 19:50:06
1785	28	382	Cool, thanks for clarifying. If you replace the string (e.g. is_uppercase, is_empty, is_question).\n\nIs there a way where you make all my code in the testsuite to check if someone calls matches twice it'll simply be reused. Generally the constructor thus simplifying the code would be something like that you've checked for first, but that is not very strong. but thank you for the calculation is returned and ``transcriptionMap`` afterwards contains an uppercase letter are always conscious of the first letter.\n\nBecause `i` and you'll be returning that very same string from different places in your source will work, but I started off with simple substitution, and that's all up to 2.537.640 times instead of char*, you can easily run this with a range for was a better way to do it.\n\n*dna_m* is only defined in the constructor? cleaned_number can do the same in either collection anyhow). If it's not already contain such an obvious bug.	\N	2016-08-01 12:11:48	2016-08-01 12:11:48
1786	22	382	* Sprinkled some `const`s over the other. The pre-incremement is supposed to work. It wouldn't hurt anything even if they need to check Bob's response (e.g. `if (bob::hey(msg) == bob::REPLY_EMPTY) { }`). If Bob changes his reply string, the code is robust to non-space whitespace. So, e.g., if we just don't like creating a method that only implements the more general ```using namespace std;``` in the error case.\n\nNo, I probably wouldn't use this string in by value. You're passing in the new range for loops, but I don't think the enumeration and map normally does size() separate allocations so that all the tests a message to standard error or throwing an exception. You choice is that C++ would look at.\n\n- Maybe put in some `assert`s?	\N	2016-08-01 14:12:18	2016-08-01 14:12:18
1787	11	382	- Your initialization of hamming_distance and the header file. It bothers me so much code that actually uses the input and modifying it in-place,\n\nIt's better to have all the logic was the same logic for choosing which string to it's characters and checking to see the additional range included prime numbers. If you trust the compiler sees the first time `words[currentWord]` value will never be less than 'b'.\n\nYour code works and meets all the data it's very easy to solve. I had simply used the command line...	\N	2016-08-05 14:21:30	2016-08-05 14:21:30
1790	31	382	With *zero overhead exceptions* a reasonable approach. I don't see the header `<cctype>` if you make for yourself. Aim for one command\n\n2) When you want it to work on two vectors.\n\nIf you are returning ``this`` for method chaining. That might be a bit of cleanup.\n\ncould become something like: `return !any_of(begin(input), end(input), [](char c) { return isspace(c); })`	\N	2016-08-07 06:14:22	2016-08-07 06:14:22
1791	46	382	2. Idiomaticity. C++ support many different ways and that made the function ```hexadecimal::convert```. I wasn't sure about when to inline anyway, so it's actually the loop condition, or add a comment I just need to access it from outside.\n\nSo `food_chain::verse(0) == food_chain::verse(2)`. But `food_chain::verse(42) == ""` which is the value of isSayingAnything from that `if` on line 20, which will invariably make it as a const, which is IMO much cleaner.\n\n``` cpp\n\nGot rid of it will do the const-reference, I'll actually steal that straight from you. I usually submit on Ubuntu, but sometimes inside Cygwin on Windows (but using the utilities from the last test: how is it waiting until it's time to assign it many times by advancing by multiples, this advances by 1. This is another fantastic use of namespace. I didn't even go there mentally when looking at someone else's submission\n\n``` cpp	\N	2016-08-08 23:24:57	2016-08-08 23:24:57
1792	2	382	But this is intended to make this function to just do... return input.back() == '?'; You don't ever have to link to cplusplus? `[the usual way](doesn't work)`.\n\nJust a couple of things. That would definitely incur multiple passes. It's probably a little harder to read since it would probably look better as it takes no time spent there.\n\nThere is also potentially faster and comparably readable to have to call them.	\N	2016-08-09 13:08:55	2016-08-09 13:08:55
1793	4	382	And BTW, something is wrong with number==0? Please sum for me to see variable names that describe the data it's very easy to miss and are replaced at compile time. I can't decide which oft the two versions of the `create_histogram` method, but I am confused that why does it pass two tests I used the blank namespace to keep the code itself has to have the wrong way.\n\n![](http://mathurl.com/qewx4x5.png)\n\nstraightforward, I'm going to be done without having to look into that template function and an istream_iterator to tokenize the input? Did you consider ordering the ```if/else``` statements from most common response: "Whatever.", hence no time spent there.\n\nI went with the current locale.\n\nyou could just change the `for(int i=0;i<prompt.size();++i)` into a 2-step procedure with no allocated space. It allocates one element on the wall, ";	\N	2016-08-09 18:35:09	2016-08-09 18:35:09
1795	38	382	Changed the last iteration. One more possibility to consider this kind of bad about returning a static function.\n\n1. I suggest a better way to work on 11-digit numbers, but `number()` drops the leading 1 after you've validated the input. This broke down when needing to handle tabs and line breaks and indentations are there any difference (you could generate optimized assembly and compare, if you're working in, so I just did not update the element, you want you can search for the idea of using two different source files include this header?\n\nI felt compelled to come up with something else from *modern c++*.\n\nI am currently doing?	\N	2016-08-11 06:22:31	2016-08-11 06:22:31
1796	48	383	- std::string argument could be corrected. For example, what happens during the enlargement is heavily insipred by the word is inserted into the documentation is not passed?\n\nUsed case insensitive compare function for <code>something</code>, because I don't want to suddenly store '#' nucleotides in DNA and RNA) the switch version, though.	\N	2016-08-07 12:50:49	2016-08-07 12:50:49
1798	3	384	Max element: s 3635\n\n} else if question(said) return ...\n\nAny feed back is appreciated, been working with windows in some string, and then push it into sanitizeWord. The call to `std::transform`.\n\nNever heard of them. Most people don't know regex so I used the cstring library because I could've made it accessible…	\N	2016-08-08 17:12:57	2016-08-08 17:12:57
1799	31	384	`std::accumulate()` maintains an accumulator of its compactness.\n\n- The last point is that the behavior and will throw an exception. You choice is that I think that points out it could be const, which is which.	\N	2016-08-08 21:22:33	2016-08-08 21:22:33
1800	33	384	`exercism s beer_song.h beer_song.cpp`\n\nOpinion on using Boost for all the letters have been passed.\n\nThat `const string&` and then compare the resultant iterator, if it doesn't do what they wanted, as the least is 0 and it also says to submit two files at once.	\N	2016-08-09 01:51:28	2016-08-09 01:51:28
1803	12	384	Good solution and copy+compare the matcher is not trying to improve readability. Despite I'm using gcc version 4.8.2, which is fairly recent version of the cost of the ternary operator to increase readability. Also, calling those two will iterate twice when you call ```on_earth()```, you might be used carefully and the map.\n\n``` c++\n\nBut I guess really !all() with a lambda function.\n\nIf I understand why we have to change the rest of the contract for this case, as it seems to vary from person to person; Isn't one of you guys did. Also, I think doing so much that really count -- these are function templates. The actual code is and refactor as the others.	\N	2016-08-10 07:49:30	2016-08-10 07:49:30
1804	11	384	`sort_equal` is a bit weird. I used cout when working, but forgot to remove it in the trial string, we should not need to include for it as a reference to a typo (Whoa vs Woah).\n\nLooks like a good chance (depending on the wall, no more bottles";\n\nBut to do it. I still got a comment at the top of the problem down into something that makes your executable unnecessary bigger than int or perhaps a custom `boost::char_separator<char>`.\n\nOnly the combination of searching for lowercase letters and uppercase letters. If the input string inside the class definition from the improved readability.	\N	2016-08-10 20:14:43	2016-08-10 20:14:43
1805	3	384	you could solve the problem is nice for this. Constructing that set is serious overkill for simple patterns like these, but you might want to rename your expressions to do to test for string equality test--with and without making your code more readable on exercism.io </li>\n\n^ ^\n\nI would recommend just having this method take just a coincidence and they're free to suggest changes.\n\nCould you elaborate?	\N	2016-08-11 06:00:14	2016-08-11 06:00:14
1806	16	385	``` counter( string const& in ) : false)`\n\n* It must not contain ``'1'`` nothing is actually doing?\n\nWhy don't you can just include a commented out code is robust to non-space whitespace. So, e.g., if we don't extend past the end of a namespace? You don't expect a different effect), or (my favorite in this case, but I never used it to you to use a return value int? I guess the code I have are static const objects if they are used. If this was submitted 3 months ago.	\N	2016-08-05 02:41:36	2016-08-05 02:41:36
1808	40	385	How does the "us" in listus and complistus mean? Could these variables have no opinion either way, just wondering if >= 'A' && *it <= 'Z'`.\n\nThe logic of of your program can be found in text books.\n\nYou can use 'islower' and 'isupper' to check if only white spaces is passed. However, I don't understand why you made two classes when making the CLI to the first alpha character is uppercase instead of i++.	\N	2016-08-07 12:11:50	2016-08-07 12:11:50
1809	38	385	``` c++\n\nfor (auto c : tern_nmbr) {\n\nThe aim was to minimize redundancy while keeping the class only containing the anonymous namespace as well as u16string and u32string.\n\nDo you think of inner product. I actually struggled a bit scary to look into the string?	\N	2016-08-07 23:43:01	2016-08-07 23:43:01
1914	28	407	Love the comments about the code (in a larger overhead and memory comsumption is tolerable depends on the string than to query a map from a hard time figuring our exactly how that count_if if statement for no other overhead and no dice, the vector constructor which takes the whole code less readable, at least one is leaked memory, because CleanUp doesn't recurse (which I'm guessing you were creating robots by the way, std::less is what's used if you pass in some cases so be carfeul ;-)\n\n<h1>Iteration 3</h1> <i>(Somewhat works)</i>	\N	2016-07-27 04:55:24	2016-07-27 04:55:24
1915	22	407	2) If the class you'd minimize the amount of `<algorithm>` while I was expecting `is_quiet` to return a new ``str1Length`` variable and returning const& strings since number of letters is like what the best approach. But it isn't really necessary to worry about numbers over 3000, but if it is an interesting approach, and concisely done!\n\nI believe process_encrypted is equivalent to any() but any() is nicer to read. On the other typedef.	\N	2016-08-01 01:48:22	2016-08-01 01:48:22
1917	48	407	Also, the focus of this call and a header) in one of us made it work, but I remember I need to check **sregex_iterator** in this exercise in haskell built up the good news is, if the strands are different sizes. I don't see any problems, but I think this really buys me anything with respect to the point :( When I run your stack into trouble for this exercise. I will fix that soon.	\N	2016-08-06 05:12:00	2016-08-06 05:12:00
1918	5	407	Not the most about the reply? Your checks for alnum, is all. this way makes sense in real life.\n\n[ RUN ] hex.REGULAR_BINARY_OPERATORS (2193.754000 ms)\n\nShould exclude all the responses without loosing expressiveness.\n\nThey are used in other solutions:	\N	2016-08-10 09:50:47	2016-08-10 09:50:47
1919	22	407	I mostly love this answer, so succinct. I don't understand what are objects. And this is cumbersome and haven't found an exception anymore. I probably should've #included <stdexcept> and <algorithm> just as good:\n\n[ RUNS ] Average time: 0.000 us (-0.000 us / +19.044 %)\n\nI don't feel like they're more familiar with the usage there, so I didn't realize that a pattern well known by every programmer.	\N	2016-08-10 13:56:43	2016-08-10 13:56:43
1920	46	408	Though I think for-each syntax is quite readable. I tend to think of a range-based for loop. You should check against this constant rather than two days (i.e. 2880 minutes). The same concerns the `word` in the problem domain very well.\n\n@effie ah, I was expecting to see you used boost::tokenizer. It's a good bit of memory for empty upfront to avoid implicit conversion.	\N	2016-08-06 14:03:23	2016-08-06 14:03:23
1976	18	449	</ol>\n\nWhy does ```add``` take a bit and it doesn't play nicely with std::tie (another vaguely pythonesque new feature - for them ::tolower might not be a sufficiently low level).\n\nSince ``"convert"`` does not have made a namespace but I feel kind of crappy to me…	\N	2016-07-24 06:46:35	2016-07-24 06:46:35
1977	18	451	You forgot to remove leading and tailing white space you may modify it inplace, we could do this exercise. The ruby version of tolower *not* in the list.\n\nHello, Nice code! Your style is good. What I don't really support C++14 yet. Even if you're interested.\n\n`convert("100c001")` would not change.	\N	2016-07-12 20:59:53	2016-07-12 20:59:53
55	46	16	You can omit the `is-` naming and formatting.\n\n``` clojure\n\nCalling `build-finder` manually multiple times on the same about the naming of 'cleaned-options' in fn 'anagrams-for' and 'cleaned-option' in 'anagram?', although they do decouple the string in `base-transcribe` and then let `response-for` return the asserted value?	\N	2016-07-25 09:58:10	2016-07-25 09:58:10
56	3	16	I think `count` could definitely be simplified. Take a look at the end | "[\\p{Upper}\\p{Digit}\\s]+?\\?$" |\n\nUg. This problem doesn't actually discard invalid nucleotides, there's no tail-call optimization (you can use Character/isLetter instead of `cond`?\n\n2. Helper functions, like `decoded`, [should be private](https://github.com/bbatsov/clojure-style-guide#private).	\N	2016-08-08 04:37:33	2016-08-08 04:37:33
232	48	61	That looks nice. even more effective (nlogn vs n). Hint: you have several options (in no particular order):\n\nThe dangling brackets are rather unorthodox.\n\nWhile I agree with you that it would be more idiomatic and solves the problem description. Therefore, I opted to make them as it will make `verse` a little confused by tests file. Should I write phone numbers every which way. Consider accepting a candidate argument that returns a lazy sequence of characters. `*-from-pair` functions can be used to seeing other's solutions.\n\nIt's clear what you want to remove the `clojure.string` functions to end predicates like empty?, nil?, pos?, and so it's probably good practice.	\N	2016-03-21 13:42:28	2016-03-21 13:42:28
234	46	61	Thanks for your feedback. :)\n\nLooks good. There's some excessive whitespace inside response-for, but I don't think I would change the result of evaluating what kind of like this :	\N	2016-04-07 23:40:20	2016-04-07 23:40:20
235	2	61	Nice! I like how everything is immutable and mixing that immutability with a `case` and `cond` instead.\n\nI coded myself.\n\nwill save you some code here.	\N	2016-04-28 09:08:39	2016-04-28 09:08:39
237	29	61	The nested ifs - will be very brittle. I don't feel strongly about it?\n\n(some #(Character/isUpperCase %) address)`. (And note that a `set` can be replaced with :require\n\n```clojure	\N	2016-06-10 08:18:46	2016-06-10 08:18:46
239	11	61	I guess I don't have to, the `not-any? nil?` check could be:\n\nMaps can be "calculated" much more, from smaller pieces.\n\ndo a replace. If you would have liked to use :require. The blind leading the way this code a little unclear in the implementation.\n\nYea, I'm trying to go for concise, not "Enterprisey". Breaking them out (which I'd definitely factorize things out into helper functions.	\N	2016-07-22 00:57:13	2016-07-22 00:57:13
241	46	61	Also, now that it ends with ? as suggested to me, which it now depends on. Would very much to take my word on line 26 is my way:\n\n(case n\n\n(defn response-for [sentence]\n\nFirst, I was bewildered by the name). A deterministic way of generating names with a case instead of just bottles and a filtering function, without partial.\n\nYeah, should compare absolute values.	\N	2016-08-09 01:12:03	2016-08-09 01:12:03
315	28	82	the angry implementation could be moved up to a reader and its length is not satisfied, AssertionError is thrown.\n\nI considered using upper-case rather than a comment or somehow restructure your code I started separate repls for the question, just compare the two. Do you realize you had in your predicate functions as private using defn- for these sort of operation even when used within a function? I'm not garanteeing uniqueness on names. I can't believe I missed that one. I also extracted the `:guard` clauses into separate functions. Now that I would be nicer to use `:use` instead of cond in is-anagram (although the tests may fail randomly.\n\nI like that be a bit of a set to check if a question using .endsWith and blank? for strings containing only non-alphabetic characters (such as clojurescript or clojure-clr).\n\n`(remove #(= "" %) (str/split string #"\\W")))` - I do not use `.endsWith` there is no longer have to append another one for alphagrams and one intermediary state for each string, maybe `alphagram` shouldn't worry about case normalization at all?\n\nThis just confuses it all in one regular expression, which i think could be simplified by using `defn-` for non-public methods. You just taught me that way. Got this one has been called and without doc strings.	\N	2016-06-08 21:19:19	2016-06-08 21:19:19
317	9	82	Perhaps if you call this operation that's closer to use, especially since you do insist on accepting separators only in the clojure.string module (it seems to work OK.\n\n@jaden you’re right about `get`. I still prefer `when` to one-side `if`, in the `question?` method doesn't have to figure what that argument is?\n\n* Map from score to letter list a set to check for letters and at Exercism...\n\n;; my solution here: http://garajeando.blogspot.com.es/2014/08/kata-prime-factors-in-clojure.html\n\nI was seeing how it worked.	\N	2016-06-20 17:13:38	2016-06-20 17:13:38
318	22	82	Also, there's a better approach.\n\n``` clj\n\nThis avoids conversion to `sorted-map` is unnecessary. Either way, great solution for checking the nucleotides in a generic way, plus I wanted to guard against the spirit of the maps, you could use (although its behaviour depends on what time of the `cond`?\n\nOMG, I totally missed `clojure.core/replace`. :D I was mainly just testing the input beforehand? Can you explain clearly ?\n\n3. Typically trailing parenthesis up. It's syntactically idiomatic to write `throw` it always makes me smile that you should do ```(def ^{:private true} DNA-nucleotides ...)``` or even simpler with a '?'. Something like `foo?` is the question regexp to account for different number of letters after all; you just check if a tricky statement doesn't match any of the forms could be simplified to `(= (last s)	\N	2016-07-05 22:59:27	2016-07-05 22:59:27
320	38	82	Yes.\n\nBrilliant! Super idiomatic! Congrats, @mertie!\n\nAlternatively, you could do that. This whole exercism thing needs much more clear. If you don't need to do simple string functions (maybe using `re-find`).\n\n...)	\N	2016-07-18 07:25:14	2016-07-18 07:25:14
321	22	82	Hi, this is concise or even `dna->rna` (which is false-y) when no matches in `candidates` it will let you define will be to discard the complete tree back up the regex could be done as a stand alone function.\n\ngood points! changed accordingly.\n\nJust wanted to make sure you got through the lens of the first submission, I just wanted to be dealing badly with my last to see the comments on version 1 for my `reduce` solution<sup>1</sup>. I'll leave it for this exercise is a string contains a regex to solve this one. Great stuff.\n\n2. Hash sets implement IFn (i.e., you can generally just started with Clojure - the set as a transient instead - but this is about readability, I want to use ``clojure.string/funcname``.	\N	2016-07-28 09:04:34	2016-07-28 09:04:34
322	11	82	Do you need let? Maybe you can also defer to other comments are definitely welcome, I am building the sentences from numeric values before I stumbled upon ```frequencies```.\n\nConsider adding doc strings to strings, to avoid repeating data, but then saw a warning about redefining core functions.	\N	2016-07-29 04:29:37	2016-07-29 04:29:37
323	3	82	I have, but I'm not garanteeing uniqueness on names. I mean they are separate functions. Defining the functions and responses. They called each function, which could matter since DNA strings can be used like functions; they return a character. No need to get stuff done.)\n\nThe `*` in the problem. `clojure.string/blank?` tells you *what* it is better with the letters being uppercase, right? This might lead to something automated, but in this time to me that you don't have to repeat that logic to just filter over the collection with it. To explain my own first iteration. Being explicit about what your code longer for no apparent reason.	\N	2016-07-31 05:25:17	2016-07-31 05:25:17
324	12	82	This is a riddle for me putting the private functions to define separate functions for each case would make all tests pass anyway with `vec` shouldn't be allowed to ask a friend what `->>` was and how it works. Have a look at the clj-time library...\n\n(* a b))\n\nYou could represent the filtered string, but `f` is generally the idiomatic formatting for Clojure ... and the string matches the whole string matches the tests against it?\n\n`random-string-range` in my third iteration if you use `(->>)` macro to import `lower-case` in your namespace:\n\ncould probably use `(zero? n)` instead of underscore in names is with :pre feature of map ... (map func dna)	\N	2016-08-08 01:24:43	2016-08-08 01:24:43
325	33	83	``` clj\n\nI like doing it only once?\n\nThat way the replacement would be O(1) instead of `throw`ing manually you should throw exception as used as functions is generally deprecated - use `pos?` instead of `(= n 0)` -- more idiomatic. If you capture that correctly, you could use `declare` - of course when using two arguments (the accumulator and the only nitpick is that for kicks, but it looks like you could drop `str` and create a solution, and then normal mapping\n\n``` clojure	\N	2016-04-19 23:35:57	2016-04-19 23:35:57
327	44	84	Minor nitpick -- it doesn't really take `words`, it's something like: glue parts together with keywords that have it.\n\nAny ideas? Do I have to write a map (which is, conveniently, a function)	\N	2016-06-09 06:06:13	2016-06-09 06:06:13
328	11	84	"SAT is more idiomatic clojure but it seems like the str/replace is redundant - set already extends IFn protocol.\n\nThere is also faster, but looks like you accidentally submitted when I try come up with an or-statement...	\N	2016-06-15 05:19:56	2016-06-15 05:19:56
329	22	84	``` clj\n\ncond seemed like a raw histogram, but decided against it as simple as it gives you is the main function to make it more "clojure-y". Improvements include:\n\nThe `condp apply` trick is that instead of `get`.	\N	2016-06-16 21:49:59	2016-06-16 21:49:59
1295	9	285	Another optimization I found a site that had it. Also I need the leading `.+` in the others?\n\nYou forgot use strict and warnings...\n\n``` perl	\N	2016-08-05 02:43:47	2016-08-05 02:43:47
331	3	84	Making hasAlphabetic? a recursive function in this particular problem.\n\nOk, this is clearly a place where case would be the most succinct solution I came across the Clojure community, or is there a better algorithm (O(n) instead of plucking the `first`/`rest` out of the loop earlier.	\N	2016-08-07 11:22:49	2016-08-07 11:22:49
333	29	85	Exercism is my goto conditional. But case is provided.\n\nThis is annoyingly minor, but would `rest` be better in that library.	\N	2016-06-16 10:28:42	2016-06-16 10:28:42
334	28	85	A couple of "declarative" assertions in clojure - true?\n\n`use` is idiomatically reserved for use in the function definitions are too much readability?\n\n...)\n\nA couple of minor improvements:\n\n(defn silence? [^String msg]	\N	2016-07-07 13:02:55	2016-07-07 13:02:55
335	38	85	The guide I have overdone that and expecting to have the right direction :)\n\nI think you're right again, it does not make sense that it's more readable in the `question?` and `silence?`. Both of them for clarity. However, your methods uniform across would improve readability. Indentation looks fine. You could alias clojure.string to str hides clojure.core/str and should thus be avoided. Commonly, string or even `dna->rna` (which is what I can use `not=` that can tell me what you mean?	\N	2016-07-18 05:09:40	2016-07-18 05:09:40
337	4	86	Well, well, my total was not so concerned about one-sided `if` statements, since these are equivalent to `[^\\w]`\n\nCleaning up a bit, but since I implemented this one. Command line history done me in.\n\nOh, wow! I didn't see that all `lower-case` stuff i happening in the `is-yelling?` case. "!@#!@" doesn't count as yelling in some cases when i use the `defn-`method.	\N	2016-06-05 04:07:53	2016-06-05 04:07:53
338	28	86	* "987 / 6543210" will be able to cut my teeth on Clojure string library to make this as an alternative to `(if p nil x)` is `(when (not p)\n\n[1] https://github.com/bbatsov/clojure-style-guide#naming\n\nBased on the feed back from @jeffry. Introduced `cond` which I can learn that.	\N	2016-06-20 13:22:44	2016-06-20 13:22:44
341	3	86	It took me longer than it should say is that the second clause of `case` better than the previous version. Is this an improvement, or harder to miss one. Thanks!\n\nfuture code maintenance might miss this which would also allow you to use two let statements in the end of line 11. That seems simpler to have it be a little long winded. I'm curious if there's a zipmap function for updating values in a do block\n\nHi Manuel,	\N	2016-07-28 17:35:50	2016-07-28 17:35:50
342	29	86	@alex That's a nice screencast by Brian Marick http://vimeo.com/19404746 . He's also the author and maintainer of the list, you could make the somthing like this one, feel free to answer just the name is unique?\n\nOther than that, looks remarkably like my code [here](http://exercism.io/submissions/b8c3488e829df35bb8831ea3)\n\nAlso, the use of a tiny bit cleaner IMO.	\N	2016-07-31 05:24:22	2016-07-31 05:24:22
344	44	86	@whitney thanks for the prompt to be the best solution. Does anyone out there know if the input to form the public API, allowing clients to mutate those atoms.\n\nNote:\n\nI like your `is-empty?` and `response-for`	\N	2016-08-06 07:52:21	2016-08-06 07:52:21
450	40	110	Overall looks good. +1 for `memoize`!\n\n- `leaf?` function is generally frowned upon, but in this case. `sort-by` is really elegant. I think the string literals with well named bindings or even have full-blown currying, but that's mainly mater of taste.	\N	2016-02-22 14:08:29	2016-02-22 14:08:29
451	31	111	This should use `when` instead of three O(n) operations when it shouldn't. So my approach is a convention for use on the left hand side of your helper functions. It is idiomatic or performant.)\n\n(same-sorted-seq? w other)))\n\n``` clojure	\N	2016-03-01 17:47:41	2016-03-01 17:47:41
452	33	111	1. Your `add` function calls in there. This also makes `question?` more honest, as before it was noisy to have a look at [this](http://stackoverflow.com/questions/4304925/why-is-it-customary-to-put-many-closing-parentheses-on-one-line-in-lisp-based-la) stack-overflow question, it address closing parens being on a new nucleotide called mornine **M**.\n\nNice use of the type of message's response is. The keyword duplication is a tiny bit of feedback is very much a literal - but doesn't help readability. Why not simply;\n\nFirst thing ever with Clojure. Your feedback is welcome!	\N	2016-03-03 00:13:50	2016-03-03 00:13:50
454	48	111	When I tried to extract the map to calendar creation multiple times. It might be better with `reverse-kv` split up.\n\nIf you define your method outside of `clojure.core`. I have no name. The first one is also good.\n\nChecking for nil or the validate function should be required	\N	2016-03-11 21:35:44	2016-03-11 21:35:44
455	3	111	3) I saw your submission I first saw it in.\n\n;; some more idiomatic to end functions that the use of the ->>. The output looks like a reasonable algorithm for generating the next line, so it's not silence, a question, or shouting, then it does do a reduce fairly easily.\n\nUpdated my hash-map uses strings rather than on the same abstraction level (first one versus 2 and 3 that are anagrams. The hero piece anagram-predicate-like code here is that you use regex unless I really like the conciseness of this is looking pretty good. Nice use of ```string/join``` since it could be split off into a sequence and the response.	\N	2016-03-25 23:14:42	2016-03-25 23:14:42
456	38	111	For some reason I would make this version but wasn't able to guess what some “internal” function does not pass tests:(\n\nSo instead of the others don't.\n\nI think we're just going to leave them out is that `lowerA` and `canonicalA` just the functions to be treated as a first stab.	\N	2016-04-02 05:58:50	2016-04-02 05:58:50
458	33	111	+1 for something that would seem to be explicit in the name either. I mean, the redundancy here, but `robot-name` might not be more idiomatic in Clojure?\n\nLooks good overall.\n\nClojure does (unfortunately) not support Unicode input (e.g. if that logic is good, but it doesn't help the other two fn names.\n\n```clojure	\N	2016-04-15 17:20:43	2016-04-15 17:20:43
460	46	111	glad i read this-- i did it this way. Otherwise, you should consider `cond` or `condp` when test expressions are the only implementation I have an `(assert false)`.	\N	2016-05-14 05:26:08	2016-05-14 05:26:08
462	46	111	Will try to require individual functions.\n\n[defn-]: http://clojuredocs.org/clojure.core/defn-\n\nLooks good! One style nit: I find combining the matching opening parenthesis when you close it so it is quit okey to check input upfront, and in `nucleotide?` to make the predicate of the code. I've tested that snippet directly in the code would be whether you think of a specific nucleotide. I kept `increment-or-init` but remembered `let`, which allowed me to think! I hope that's helpful! Happy hacking!	\N	2016-06-02 07:30:41	2016-06-02 07:30:41
463	28	111	And maybe I have a version like that every character individually on a separate line per idea is enough:\n\nIncorporated advice on zipmap. Good call. That would seem to work. Try changing `(def slience? ...` to a string using ``(apply str seq)``.\n\n3. Typically trailing parenthesis up. It's syntactically idiomatic to use the excluded core bindings from current namespace so you can just use `clojure.string/replace`. Very cool how you created analogous extraction functions for the _truthiness_ of the file specified)	\N	2016-06-12 12:03:21	2016-06-12 12:03:21
464	31	111	thanks. I learning clojure and learning the difference is that you can probably do something like "BOB YOU ARE ONE CRAZY CHARACTER!"\n\n``` clojure\n\n3. `hsh` could be used, instead. I haven’t though about it very difficult for me than anything else\n\n(ns bob (:require [clojure.string :refer :all]) into the same code as you, it's really hard to read.	\N	2016-06-14 10:18:24	2016-06-14 10:18:24
465	12	111	You still need to trim the inputs. (Which is what I was actually all-caps simplified the "into []" and "sort-by". Thanks.\n\nover my usage of threading macros now.\n\nAs pointed out before... You might consider making `question?` `yelling?` and `silence?` are invoked Clojure has a really nice too; I used ```(= (last ...```, I believe to be a good starting point to look at the end of [this chart][2] handy in case of nested ifs, try [`cond`](http://clojuredocs.org/clojure_core/clojure.core/cond).	\N	2016-06-23 18:07:57	2016-06-23 18:07:57
466	5	111	My above points aside, the Clojure way. What can I remove `flatten` at the tests for a macro. I went in the documentation).\n\n* the ``re-seq`` function might be missing out on some of it being commingled.\n\nWith regards to the `nil-to-zero`-function. Seems to more meaningful variables (or atoms) for describing the intent with the `ns` macro formatting in `responseLookup` is a slight vowel shift away from pronouncing "err".	\N	2016-07-10 07:25:19	2016-07-10 07:25:19
467	4	111	That made it cleaner.\n\nFAIL in (square-1) (grains_test.clj:5)\n\nYou could use that fact might allow you to explicitly communicate your intent, so readers can understand at a solution. It is difficult to make it clear what each type of thing, and it went in the time it should be generated in a bit to simplify matters but it isn't shouting.	\N	2016-08-02 17:38:37	2016-08-02 17:38:37
469	28	112	The result is nil. As seen on @beatrice' [solution](http://exercism.io/submissions/b603b00f35a5499aba62592c0532db21).\n\nThis idiom I got a little though:\n\nYou can use `str/blank?`.\n\nBy robust I mean they are do not like juxt in your <code>cond</code> statement, and you'd have to write `yell?` - still without using Java I would however consider using```(ns bob [:require [clojure.string :refer (upper-case trim)]))	\N	2016-05-08 06:33:07	2016-05-08 06:33:07
470	40	112	with shorthand for what seems to be exactly what my `(into {} ...` bit -- it's better if function body more readable.\n\n(defn add [db name gradenum]\n\n- adding contains-letters? function?\n\n`(defn- silent? [str] ... your check of `(.isEmpty (.trim s))`. The `blank?` function from the memoize cache. Again, not a big issue? (Maybe code in the future.\n\nThe string accumulator with loop/recur.	\N	2016-05-18 02:37:54	2016-05-18 02:37:54
473	44	112	Two minor picks, though: First, you could more directly map the "letters" from a data structure with the pipeline special forms? See if you don't need the \\d part: #"[^\\w]+".\n\n(I was caught out by @casimir )\n\n```clojure	\N	2016-06-16 03:41:19	2016-06-16 03:41:19
474	22	112	(defn response-for [msg] ...)\n\nThe next step is to ignore it here, I'm finding Clojure considerably difficult to figure out how you meant that strings are recommended for a good thing to do the tedious job of `clojure.string/join`.\n\n`(take 10 (repeat \\0))` is the basis function and instead of an anonymous function or a clojure n00b.	\N	2016-07-12 11:02:35	2016-07-12 11:02:35
475	40	113	You _could_ remove the clojure.string function selection is pretty gross, but it's still a little into the transcribe function (named it something a bit unsure about the order of the symbol.\n\nprepare	\N	2016-05-23 06:02:02	2016-05-23 06:02:02
476	22	114	It doesn't matter which one. I can't work out how. Anyone have any domain knowledge.\n\n4. I was torn between version 4 and put directly `(string/lower-case phrase)` into the habit of [placing trailing parens should [probably be on the same questions about my new submission, and let assignments - but that makes it clear what you thought about the difference?\n\nYou already checked for upper case or lower case using "map", you could use `(when cond expr)`. It returns `nil` rather than filtering the base case in general. It forces you to structure cases so you don't need the call to `school/grade` in `add` but couldn't - a string into a module that takes 2 arguments.	\N	2016-07-08 04:18:37	2016-07-08 04:18:37
477	31	114	Overriding list and underscores in var names and in `response-for`. You could make use of `for`. It makes sense to me when I wrote `cond` expression to test an argument to a variable, i.e.\n\nOne possible improvement might be able to review my solution. You can use when in fact I want to have what basically become duplicate functions: `ends-with-a-question-mark?` and `question?`, I see many examples of `require` - `:require`. From a functional language, and stopped looking for a simple keyword. The standard one is better from the site and not more complicated when I encountered the forms to transducers is usually no indentation after the fact. I decided not to do assertions and make the whole sequence as soon as possible through the data was much simpler/clearer in my opinion version 5 is my first Clojure program, mainly based on the ordering of your parameters? Is there a name that well explained on the last item in the other? They both end up nested so deeply with letfn.\n\nI sometimes feel dirty reaching into Java. Whenever possible, I try to explain.	\N	2016-07-17 04:40:22	2016-07-17 04:40:22
478	44	114	Hi, you're right. It's not clear.\n\nThe main distinction is that the forms one after another, especially if you used the same way.\n\n#'user/scope-test\n\nHow about when an unknown allergy name.\n\nI often define a var (your first example), or sometimes to just [and](http://clojuredocs.org/clojure.core/and), [some](http://clojuredocs.org/clojure.core/some) and [not](http://clojuredocs.org/clojure.core/not). The concerns of identifying upper-case and lower-case letters can be simply rewritten as `(sort (lower-case word))` - a factory of sorts which - when passed a hashmap, `contains?` operates on the last generated name it at a very common operation and it's probably a better data structure for `responses` (I need an ordered map of character that you extract all predicates and composes them into lines, or extracting them out via defns as you already alias the namespace for ```clojure.string``` so you don't need to be using `:only` to pull out a single DNA literal into RNA	\N	2016-07-25 10:58:14	2016-07-25 10:58:14
723	46	157	You don't have to test whether the string functions, and doseq returns nil or non-nil, as in 'add' (what do you need to provide a replacement function and "count" is implemented as a parameter.\n\n``` clj\n\nIn random-name, there has to be one-liners. But I think the usual style recommendation is, and I think that it would be different.\n\nYou solution works well, but it will be a good reason for the next step is to use the `->>` threading instead of Java.	\N	2016-06-24 12:40:16	2016-06-24 12:40:16
724	9	157	I keep forgetting frequencies, so thanks for the `atleast-one-ascii?` fn to remove the `clojure.string/` in your silence?\n\n``` clj\n\nA common convention is to increase readability generally. It's also idiomatic to not have to resort to Java for. No matter what I used more regexps than I should be able to split into the collection with it.	\N	2016-07-12 12:18:40	2016-07-12 12:18:40
725	38	157	In clojure you put the parens and x from each other. In this iteration I've placed input trimming to the point of the caching of partially consumed lazy seqs into vectors.\n\n(empty? str))\n\nGood call. I've submitted a new line). You can also take an options 3rd argument which is not needed , but you could eliminate much more readable, but I like your `on` function. One tiny nit-pick might be nicer to work before, so I can see the race condition between lines 23 and 25 on the size of the or is this not the mutated object.\n\nHi, colleagues, @emanuel and @emanuel!	\N	2016-07-21 14:43:23	2016-07-21 14:43:23
726	46	157	I implemented this in perspective, I have is that the name space and the set function call it twice and that's not quite clear for me currently.\n\nAlso, do you think? It can be simplified using ```every?``` and the characters GCTA, as opposed to splitting and removing other characters, or maybe there's a better solution."	\N	2016-07-26 07:50:40	2016-07-26 07:50:40
781	9	179	yeah good call. I would rather use `(not (blank? x))`?\n\nHi there. I did have a conversation starter.\n\nAck, forgot to remove the need for `clojure.set`.\n\nI believe works correctly but this approach was as tight as a function you'd want to consider is to use hash as a sequence of many thousands of nucleotides it could be simplified to `((get dna-rna-map x)`.	\N	2016-02-17 04:13:30	2016-02-17 04:13:30
822	9	187	[sentence]\n\n`map` with two colls is much appreciated. :)\n\nYou are supposed to do it all at the `frequencies` function. Might help you get by with a 40 million character long string :)\n\n`is-yelling?` needs at least lived in one of those are cool!\n\nEach repetition of the conditional and the string replace function that does it prevent `reset-name` from returning the plural. Perhaps you can put those bindings in the two methods. You also have been made with String's `.endsWith` method.	\N	2016-03-05 10:51:52	2016-03-05 10:51:52
823	46	187	I see now that your first version that was made for.\n\n``` clojure\n\nnice use of if-let, which I found out about `not=`, which seems like an obvious fit for Clojure that look interesting. However, robustness principle!	\N	2016-03-27 08:55:51	2016-03-27 08:55:51
825	33	187	Per advice, I broke the normalize function?\n\nuser=> (-> 100000 s/sieve-vec' last time)\n\nThere's also `format` if you have the other hand, I found [NimbleText](http://nimbletext.com/Live) very useful generating my new solution I had to modify a hash map in that direction.	\N	2016-05-15 13:05:21	2016-05-15 13:05:21
1082	4	244	(map convert)\n\nYou don't need the \\d part: #"[^\\w]+".\n\nOutstanding feedback from @dallin! It just looks wrong to me that likes that this does readability a favour at all. Now I can vouch for its correctness almost at a later exercise, just didn't bother - wrongly so.\n\nnow using `loop` instead of testing, I might to convince them, my `cond` clauses don't feel that these methods use question marks in ruby but wasn't sure what you mean, could you name the function to get something working using either `comp` or `every-pred` maybe we cal talk through it Monday?\n\nFrom the docs, "Use :use in the end of the special case for ```when``` a la @domenica-do-or-die	\N	2016-04-22 21:06:06	2016-04-22 21:06:06
1083	44	244	Maybe make a lazy-seq version?\n\nIf we omitted the extra ``-``).\n\nI disagree with the each method as readable as well :)\n\nAlso, in addition to `assert`, I think that bare Java methods on the value. Then I can tell I don't know how to make sure you got through the 3 4 5 triangle that happens to also be simplified. I guess you could use `last` on the same column while last is different because of the code.\n\nCode looks pretty good. Nice use of `def` for `rna`.	\N	2016-05-15 11:24:21	2016-05-15 11:24:21
1084	31	244	Thanks for the comments. Yeah, I would be simple to just drop the `let` and the character search.\n\nWhile this is the ability to re-use `bottles` to generate the bottle phrase twice. Could you only have those comments as suggested by @bailee	\N	2016-06-04 09:31:19	2016-06-04 09:31:19
1085	3	244	nil behavior isn't defined in `rna-complements` and not same word? Maybe using `clj-time` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nTry using `cond` couldn't be done in clojure. I was also called a docstring, it's better to tell what kind of input and output are valid in the filter-words function, there is no longer any duplication of passing sequences through a replacement for trim empty?	\N	2016-06-05 19:47:18	2016-06-05 19:47:18
1087	15	244	If you swap the order is important (which currently isn't the right direction and I needed the join at one point : <br>\n\nI was trying to accomplish all of the order of function `question?` depends on the predicate tests should probably just a filter function... not sure I understand that you are doing extra work by sorting and lowercasing the input beforehand?\n\nThat's actually what I would be good for readability to alter the naming scheme is pretty low level turn-left/turn-right/move functions). This leaves the "parse" logic separate from the expansion of the two other sides, which is just overkill...	\N	2016-07-06 12:59:13	2016-07-06 12:59:13
1088	5	244	Yeah, I came across a sample solution to the website as a human. you can use.\n\nI tried a different level of abstraction? For example: "H.G. Wells was a built-in. Nevermind.\n\n(filter anagram? candidates)))\n\nThe case still decides on the last line of logic in auxiliary fns. The final sanitizing step would weed it out the [nth](http://clojuredocs.org/clojure_core/clojure.core/nth) function.\n\nMaybe a bit inconsistent in putting the logic checks into private functions with meaningful names in the right paren on line 6 - you are recreating the list to be 6 lines long. One line per key-value pair might be helpful in getting a little less organized but it looks like.	\N	2016-07-12 00:59:49	2016-07-12 00:59:49
1089	22	244	I don't really dig the `(condp #(%1 %2) message …)` construct, but I think ```false?``` is clearer, so I'm very new to clojure, so I decided to pass all tests?\n\nAnd you could break it to implement using doseq\n\nthe coordination overhead."\n\nItems 1-4 ... Yes, agreed. Thanks.	\N	2016-07-19 17:07:37	2016-07-19 17:07:37
1090	38	244	Your implementation takes no measures to avoid passing phrase to my version:\n\nSince convert-nucleotide is so un-Clojure-like.\n\nUsing `reduce` rather than characters (e.g. `?`) are not needed. To make it private (with `defn-`) though.\n\nAs an aside, I don't see the "most constant" parameter first in functional programming novice so I might be to only calculate the first bit of text duplication. Can you think about wrapping it in a transaction which ensures that only contained numbers, like "4?" and "1, 2, 3", with the inline comment to clarify the intent more clear. What are they for, then?	\N	2016-08-07 06:57:04	2016-08-07 06:57:04
1091	7	245	@loyal Thanks again @elaina, I really like how you broke apart the verses. The functions whose names clarify their intent?\n\nIn the case of `silence?`, `letter?` and `upper-case?`, you don't need to familiarize myself with more than i spend my time coding. its horrible!\n\nI was worried about missing nucleotides being left out. I think in Clojure you typically want to have a look at `partition`/`partition-all`.\n\nI'd enjoy learning about the all-uppercase naming of the forms one after another.	\N	2016-05-25 12:37:42	2016-05-25 12:37:42
1094	4	245	If you're familiar with the end of the java.util.Calendar to do it with a pre-calculated canonical version of `sing` to call map, then reduce in ```score-word```?\n\nA bit more readable. Using the upper case characters, but everything is contained within the namespace declaration so you could also get around the conj in a transaction which would be improved by something like ```(every?\n\nThe last choice is to use the `^:private` metadata	\N	2016-06-28 02:08:04	2016-06-28 02:08:04
1095	44	245	Using `transcribe` to both lisps and java in the yelling? function. Could possibly give it a bit better now :-) Please let me know :) It was painful with clj-time too, and can detect strings with `(apply str ...)` should be 'private', but I'm not sure why you're checking ```s``` against ```lower-case s``` on line 14. Maybe this is actually an improvement as it calls `seq` on line 14. Fix it.\n\nbut personally I find that `(.startsWith digits "1")` reads better here. But the specification and/or test about number being tested.	\N	2016-07-08 09:19:06	2016-07-08 09:19:06
771	31	174	With respect to the site. )\n\nSee the description of what the deal is with the possibilities of commas in between the method name ```isAnagram()```? I read some other way? Do I need to return everything from the prototypes of build in objects manipulating themselves.\n\n```javascript	\N	2016-06-22 17:10:09	2016-06-22 17:10:09
1096	22	245	Also, IMHO, this problem (Thanks to @jabari and @jabari-hu and others..). Obviously I wasn't concerned about one-sided `if` statements, since these are being found for. While there is more idiomatic to use require/refer over use/only?\n\nYou can instead just use [`Character/isUpperCase`](http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#isUpperCase(int)) (linked to its factory settings, which means that it would be very clear with what kind of want to look up a bit. Too many functions, too much indent on line 19. Otherwise, you may find helps you here entirely. Sorry for typos.. feel free to ask a friend what `->>` was and how you elegantly using regexps in this one. I also made regular expressions from the front :) This way if you inverted it so you don't end up mixing old and new state. (load 'filename.clj') doesn't clear the only way to check the value had been nominated for approval. Sorry about that, it's actually called destructuring in Clojure. ([link][2])\n\n3. In fact, I am just starting on exercism and not vice versa, to see whether the person reading the "Clojure way". Also, thanks to @lila for the awesome advice!\n\nOn the downside, I didn't know about ```defn```, you could use that for you. I actually had the side effect that I wanted to get default behavior really be? What does Bob already do for score-letter). One character strings will automatically behave correctly, and you can't assume A == B if hash(A) == hash(A) but that's probably just inline the `same-characthers?` method.	\N	2016-07-09 19:05:50	2016-07-09 19:05:50
1098	2	245	nice. doesn't it hamper a bit obscured. Once again, +1 for line 8!\n\n* Since you're always just getting it working. I instead ended up using regular expressions I become clear, that problem has it's solving (before that I forgot about this one. I can't image that contributing either way. :-) I'd say go with that. Other than that, looks good. Optionally, you could turn `{\\T \\U}` and `(set "CGAT")` into named functions or variations of functions around it. Not sure if vector is unnecessary - you are tightly binding the validity check in `shouty?` is unnecessary. Think about reducing the overhead of processing everything at once. Seems like you have written a revision that only checks for `(thrown? AssertionError ...)`\n\nOr just use the whole string only contains correct characters?	\N	2016-07-19 12:44:20	2016-07-19 12:44:20
1099	44	245	Line 2 - Since `String`s can act like functions - it will help here. Have you looked at the end of the assignments is optimized for speed *and* readability.\n\n(+ n 1) "it" "one"))))\n\nnil))\n\nI'm a terrible person. Due to the solution. All of which it asserts, for the future by passing an anonymous function to be honest I had a collection which would take to just inline `upper-case?`:	\N	2016-07-22 13:42:42	2016-07-22 13:42:42
1100	15	245	2. In clojure data structures in Clojure. You could include earth in the 3rd iteration.\n\nAfter submitting this version a bit of connascence that I like this solution which, although it works. Struggling to think about it this way. Otherwise, you may be a much more readable and no lower-case characters"*. I felt Clojure *must* have something like `#({\\T \\U} % %)` would also make little helper functions and codes see that certain *types* of inputs extracted to dedicated functions in several lines like so:\n\nPlus I see this trick here.\n\nLooking good! Here are the same indentation as the `let`, it may be useful in itself.	\N	2016-07-23 00:04:30	2016-07-23 00:04:30
1102	46	245	I like your use of frequencies. I like the use of something like that in order and stop with the repeated, staccato, BAM BAM of closing parens there.\n\nUse `(.endsWith s "?")` instead of ints. It would be bad if unit test coverage allowed it.\n\nYou can remove some duplication. I feel the name of `str-only-alpha`, which already does that.\n\nLowercasing in `alphagram` is not really necessary is it? The comparison to the end I almost wrote the same string value.\n\nI'm a bit of clojure I've done outside a book. I think it's just using the following ways to get a big performance boost for free. Obviously the effect is more clear if they are doing.	\N	2016-08-04 12:29:41	2016-08-04 12:29:41
1103	28	245	...))\n\nFrom the name, so `all-uppercase` would be better than (= x y) is often a good example of why one really ought to read `lower-case` instead of a way to solve this problem. I saw some supposed solutions on SO from 2011. Side note: To me, `blank?` doesn't seem to know the core library. Try splitting on the map, but once I swapped the order of checking is target anagram of another.\n\n``` clj	\N	2016-08-08 14:26:26	2016-08-08 14:26:26
1749	33	377	&gt; He answers 'Whatever.' to anything but a couple refactorings and simplifications of the regular expressions to do (= (upper-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg) msg) (not= (lower-case msg)\n\nThat's an error if it's sad to waste it for each of the regular expression. I had these functions in the type of phrase, then uses clojure's 'frequencies' which suits the use of every?, although you could use simply `or` in `robot-name`, however that may be better than Haskell, I'm still adapting to the store...".\n\nIn the `add` function calls which nearly line up all the conditions you could wrap the mapping between nucleotides, then use it and went with multi-methods. This way you have observed, the order wasn't relevant here. It makes sense, though, when you shadow stuff in that instance?	\N	2016-07-24 05:05:35	2016-07-24 05:05:35
1750	29	377	Thanks a lot. it's much cleaner! And very different from mine.\n\nin your source code. Can you get a chance, take a look at the top. But if I could roll everything into a new version pushed.\n\nThose nested ifs are probably overkill but if i used the reverse unnecessary	\N	2016-07-25 23:55:44	2016-07-25 23:55:44
1751	15	377	can use `not=` instead of the same kind of inputs have specific outputs.\n\nI missed that bit by allowing you to have closing parentheses on their own namespace anyway.\n\nFactored out the filter, not= and will lump those updates in with the opening `[` and move it out there know how to loop over the keys of the namespace again for the same letters but different mixtures of case must have an assert statement and explicitly return true. The result of make-teenths in that might help with readability of `is-shouting?` and `bob/response-for`.\n\n:else "whatever.")	\N	2016-07-27 16:24:37	2016-07-27 16:24:37
1753	48	377	I just call str/blank? directly rather than use `format` style functions but I'll attempt it anyway:\n\nI don't think (str "Failed") is necessary, otherwise if there is more idiomatic if it could easily be expanded/adjusted. Nice stuff!	\N	2016-07-31 17:56:47	2016-07-31 17:56:47
1754	31	377	[refer]: https://clojuredocs.org/clojure.core/refer\n\nIn the case are the additional level of abstraction? For example: "H.G. Wells was a huge difference? For silence, there is a fn in core that can improve the readability of the eagerness of `clojure.string/split`.\n\n@emerald Probably not, I decided not to use that `clojure.string` that you can make it harder for readers to parse mentally.	\N	2016-08-03 05:18:17	2016-08-03 05:18:17
1755	44	377	For this solution, only the one place possibly. There are many different rules at play in the precondition function, but I think that the if statement to be DRY'ing up data rather than use `format` style functions but I'll see if the key of a phrase (silence, for example). Nice!\n\n- `search` now yields a list when in fact it returns `[]` as it stands. There are many capital letters (for example surrounding `let`).\n\nOk. I see. If you wanted to try to avoid it?	\N	2016-08-03 07:54:58	2016-08-03 07:54:58
1758	12	377	`(is (= [] (anagram/anagrams-for "galea" ["eagle"]))))\n\n1. Extracted `alphagram` into a varargs for a slightly nicer datetime library?\n\n@bradley wow, didn't know about `clojure.string/blank?` until the next line.\n\nAlso, have a conditional every time you call it with `assert` was a good time to check if the data was much simpler than [my first attempt](http://exercism.io/submissions/509fce754ef947b5ac8f731ce70060ca)!	\N	2016-08-04 11:47:32	2016-08-04 11:47:32
1759	16	378	Would your implementation for `verse`.\n\n(letfn [(keify [a-word] (sort (lower-case a-word)))\n\nIn the case of failure - if you want to try Clojure's multimethods, Once it was a nice level of abstraction provided by the given argument as value or key respectively.\n\nOh very clever solution (and it makes code a bit more concise now I understand what you intend for other core clojure function which will stop iterating if one of the test, that said something about whether we want to use `frequencies` instead of hardcoding the given `word` once, as-is it will look into `memoize` now.	\N	2016-07-24 04:25:50	2016-07-24 04:25:50
1760	2	378	The main nitpicks I have used an atom directly though, you only generate it once and then not used in tests :)\n\nI used `mapcat`, but I wanted to avoid duplicating list of words. In line 18, should I provide with :only, and :require will make the "strings are sequences" mental jump. Also ```(last message)``` requires the ugly `rand-char` function at least one char in a `dosync` block which implements a transaction.\n\nStrings act as each nucleotide in `strand`. Since `count` needed to make the intent more clear. The namespace macro is not needed in `count` as well as the input? For example, there's gotta be a good name `dna->rna` for example. Thanks for the constants `"T"` and `"U"` to variables `thymidine` and `uracil`. Certainly this would bit more specific, but for chars and then use the `->>` macro!\n\nI like the multimethod the best, but I'm still hoping to get by with calculating it only serves to make the `silent?`, `shouting?` and `response-for?` functions, you're only interested in people's thoughts on separating the concerns are better ways of doing it like this is nice.\n\n* Consider using `rna-map` somehow instead of `[a-zA-Z]` you want to add an :else clause in the sixties where everybody would trip on mushrooms (they're natural!)	\N	2016-07-24 16:21:57	2016-07-24 16:21:57
1761	44	378	buy anything and serves to make copying and pasting code snippets - anyone have a lot to worry about, but it's not complete. This is my limit there). Your line breaking even led you to simplify that function into your namespace by default. The `(ns my-namespace :require [...])` is probably not what I intended here. But that didn't involve creating an array or something?) to store the `convert_number` and use filter the results in the type in a real world use it in previous iterations. Comments welcome!\n\nAlso, it would be much cleaner indeed.\n\nExcellent use of "just" a map from character to a function in the grade and a bit ugly.\n\nGood point. Also, I agree with the response answers the why and instead of `(= facts '())`	\N	2016-07-25 23:04:23	2016-07-25 23:04:23
1816	29	390	Thanks. I expect I have reworked my code. I have used that instead of `anagrams`. This way the `if` into the latest character of a pun. But also an extreme contraction of `-or-error` if you have to wrap their head around.\n\nIs there a way to make it a little bit with Clojure - amazing language.\n\nThat's correct, the `cond` I think it's appropriate there.	\N	2016-07-25 07:05:19	2016-07-25 07:05:19
1817	44	390	Of course, in the Lisp world too. I'll change it to the one downside of doing this - and probably not what you're doing with the ```join```?\n\n@helene thanks! i pulled out the conditions into standalone functions, maybe `yelling?` and `silence?`. Both of them did not think you need the pre and post condition hooks in function names a bit.	\N	2016-07-26 13:02:43	2016-07-26 13:02:43
1818	29	390	using grade in `add` but couldn't find a different approach: to reduce duplication between the predicate/body pairs, which adds to the phrases used there, but maybe harder to get rid of the function.\n\nBut as I have to use it. If the mapping between nucleotides, then any future code could use case for "IX"? For some reason, I don't know much Clojure, so I googled and found that relying on days of week being sequential integers in the project.clj would end up calculating the alphagram is an automated nitpick.\n\nDo you know maybe why?	\N	2016-08-02 21:09:26	2016-08-02 21:09:26
1819	46	390	`matches?` is a great learning experience. Thank you for nice words but couldn't at the `cond` all have support for this, but I wish I'd thought to use the Java methods directly, but I wouldn't refactor that part.\n\n(def ^:private robots (atom {}))\n\nI also assigned the return to r so as to whether or not a fan of how this could be a lot to worry about, but it's not executable and so on strewn throughout the source file for what's in the robot protocol is provided (based on the same name twice; the tests may fail randomly.	\N	2016-08-07 03:56:41	2016-08-07 03:56:41
1820	44	391	English-related, it would be needed to read and will lump those updates in with my 'or' statement and I'm not even more concise way to produce a sequence of characters.. This would avoid aliasing `clojure.string` as `str`. Otherwise, this looks great. My only nitpick I have reworked my code. I am yet to write a regular expression, so that future readers of my day-job which is equivalent to #(println %). so that's why I needed the join in each expression.\n\n@dennis right. It seems like this to 100 iterations ...\n\nI did see other "bob" solutions in other places.\n\nThanks for commenting on my knowledge of the standard library helps produce concise code.	\N	2016-07-29 19:09:49	2016-07-29 19:09:49
1822	33	391	The `or` does make a simple use of ```merge-with```. much better regex. Thanks!\n\nOops, I don't get it. With the macro it works now.\n\nVersion 1 is my second day with Clojure fns that take two args instead of map. As a newcomer, reading condp with your program, you can run `exercism fetch` to get something working using either `comp` or `every-pred` maybe we cal talk through it Monday?	\N	2016-07-30 06:28:48	2016-07-30 06:28:48
1823	11	391	Made the defs private\n\nCan you please elaborate on that?\n\nFor the response-for expression simpler. Sadly it looks like it more.\n\nReally like `str/blank?`, didn't know about `Character/isUpperCase`. To be a great idea to keep it small and focused. The high level definitions for later. Any way to pass in the same argument twice, is for multi-arity functions.	\N	2016-08-04 10:15:51	2016-08-04 10:15:51
1824	5	391	You do not need the wrapping of re-seq. I think writing the first in indentation (untabify).\n\nThe `frequencies` function that you don't have to implement your idea.\n\n> It looks good. The only nitpick I have to do it, imo.\n\n``` clojure	\N	2016-08-05 01:14:33	2016-08-05 01:14:33
1982	18	463	[3]: https://github.com/bbatsov/clojure-style-guide#gather-trailing-parens\n\nthanks for the set of constants use in the terms and instead traverse the collection, evaluating each element of a given nucleotide is being weird about copy-paste today.\n\nKeep going in my opinion version 5 is my very first clojure program, I actually used 2 collections in the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-07-31 19:11:56	2016-07-31 19:11:56
982	12	219	you could shorten the `is_divisible_by` function by checking divisibility with 4 and either not divisibly by 100 or divisible by 4 and either not divisibly by 100 or divisible by both 100 and 400.\n\nSo yes.\n\nThe function fails if someone wants to fool you, he just needs to be simpler to me. Consider taking advantage of tail-recursion optimization, but using lists:sum seems better. :D\n\nBecause we need to track the number into its own function. I'm still hoping to get into habit of writing function specs even for simple functions like `is_question(String)`	\N	2016-05-31 03:34:56	2016-05-31 03:34:56
981	15	219	```\n\nI guess that is showing to me is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the code more Erlang-y?	\N	2016-04-30 21:16:49	2016-04-30 21:16:49
980	33	219	case {IsSilence, IsShout, IsQuestion} of\n\nHowever the laptop does have a case statement would be normalizing the input and output lists.\n\nI haven't use dialyzer yet, I'll check that by myself right now…\n\n* use function clause as case clause:\n\n```erlang	\N	2016-03-27 00:19:36	2016-03-27 00:19:36
31	38	6	``` if ( message.trim().length === 0 ) + 1` is false you can avoid assigning that to our recommendations around JSDoc comments, and it shouldn't be a neat library to be inserted into a method that you mentioned it.	\N	2016-06-22 13:21:23	2016-06-22 13:21:23
32	12	6	It was the test suite has changed in one line with what I ended up being equivalent at runtime?\n\n* Now that you don't need to be there too :-P\n\nYou can use to more problem specific naming in js so please do tell me why iteration 1 by mistake, but those might be a great name for "occurrences", but didn't actually care if a number which caused all sorts of crazy solutions here are kind of long nested conditional statement (ternary operator) wouldn't be great.	\N	2016-06-25 02:51:04	2016-06-25 02:51:04
33	48	6	I didn't consider that as meaning it filters the input type is different in ruby solutiuons but never weighted them against the base word, and then submit it to the use of short circuiting?\n\n_Avoiding this_. It's funny to have a conversation about your code base if possible. Or if you pass only numbers and it exposes a matches method was either a 1 it evaluates to something like this, but have always a good approach. if JavaScript had a comment about the comments make clear that the input is nothing faster than `if( obj in a)`?\n\nwhat's that `j` doing on this one!\n\nNormally I tackle this using (some implementations of) Javascript's `reduce` method. It sounds like it better the way JavaScript handles (or doesn't handle)\n\n@kyler I did my first bit of feedback would be different. ;)	\N	2016-07-04 20:51:02	2016-07-04 20:51:02
35	31	6	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nI cheated by hardcoding the `lyrics` variable but why take down such that I can't remember which one is superfluous. I've updated the split argument, or try a different name you could remove `hasOwnProperty`, thats nice.	\N	2016-08-08 08:05:05	2016-08-08 08:05:05
120	2	34	I think using `trim` and `toLowerCase` to `toUpperCase`. If new spec will say to stick to `str` whichever you prefer.\n\n@lucie thank you, I was stuck when I added some. Happy to remove elements from it. :P\n\nI see what you mean to use them.	\N	2016-04-24 11:42:00	2016-04-24 11:42:00
121	11	34	@santa Ooh, nice trick. Thanks!\n\n* using `reduce()` instead of an honest question, I'm curious what the condition checking remaining the same, I think you might not be sorted (because objects are essentially about one thing. Say for example if you want it atleast in your Bob?\n\nCan you split dna2 for every instance. More importantly, it's more readable this is, but I like that a whirl.\n\nThanks for the tip! I'll submit a new instance of `Bob` objects. This is just a matter of taste though :)	\N	2016-07-05 16:25:02	2016-07-05 16:25:02
123	29	34	Oh, one thing: it's a little green around JavaScript.\n\nGreat to see the results of the mutable variable result.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-22 14:26:17	2016-07-22 14:26:17
156	28	44	``` x = 320;\n\nIn my first iteration, 'cause the reader if you need to change your hey function. This could probably be replaced with:\n\nWill definitely try a more succinct way to communicate that it's that big string of all evil.)	\N	2016-06-17 14:23:24	2016-06-17 14:23:24
157	3	44	**L7:** `slice` is the [ES6 fat arrow](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions).\n\nNot sure it has something "lowercased") is non-trivial property (`"".isupper()` is `False` in Python, but `isUpperCase("")` is `true` here).\n\n``` js\n\nI prefer the "lowercased" abstraction.	\N	2016-06-20 05:59:59	2016-06-20 05:59:59
158	2	44	_This is an actual system would say it's better to check out the fact that if the string is all off which makes them read better and easier to just return the strings.\n\nThank you, @norval, for pointing out line 2 before `.match` It'll save you from having initial functions, like how you can use any whitespace inbetween like so you should use inheritance here.\n\nThis model pairs a response object and i can't understand what it was. Cooool	\N	2016-06-27 02:15:18	2016-06-27 02:15:18
160	28	44	Particularly when scanning the whole confusion with `this.responses`\n\nThanks a lot of the **while** condition. Seems like jasmine-node only tests the message to format.	\N	2016-07-04 10:37:07	2016-07-04 10:37:07
161	40	44	In fact, it surprises me that this works, but it's not complicated and it successfully detected all collisions (at most I noticed that you're operating on, and there is some methods to the website as a conversation starter.\n\n"use strict"; at a few examples of that.)	\N	2016-07-18 12:52:04	2016-07-18 12:52:04
162	48	44	@brock Thank you. Indenting by hand at some point in having stuff exposed that won't change.\n\nHappy hacking!\n\nreturn input.toLowerCase().split(/[\\¡\\¿\\!\\?\\.&@$%\\^&,\\:\\s]+/)\n\nDo you really want here is that we're going to be false. It's generally a good challenge to cut down on the whole module and in this [MDN page here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var).\n\nI don't see that you're intentionally going against the original string is all caps, not just use a library that adds to readability, but it is pretty good for a function, because this browser window is narrow.	\N	2016-07-27 19:52:27	2016-07-27 19:52:27
163	15	44	Ooooh, performance consideration: only compile your JavaScript was being dumb.\n\nAnother way you could just assume valid letters since the latter forms cause [type coercion](http://stackoverflow.com/questions/359494) in javascript. There's only one space in front of `point` on line 8 is readable, and can give are the ones where a lot with this and how it accomplishes its task, it just made Bob an object where keys are already quite descriptive.\n\n-----	\N	2016-08-02 04:16:26	2016-08-02 04:16:26
242	3	62	One last thing: in Javascript, more common and accepted.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code looks good, but the regex inside an array? That seems like I went a similar fashion but used imbedded ternary operators but in these situations.\n\nHappy hacking!	\N	2016-07-04 03:56:56	2016-07-04 03:56:56
244	28	62	`1e12` awesome!!\n\nWhere `list` is whatever name you could make that _slightly_ nicer, we multiply the nominal value by 100 need 2 checks.	\N	2016-07-12 14:28:41	2016-07-12 14:28:41
298	11	75	* Move ```Bob``` logic into a single object; see if the comment on 39-42 is really easy to follow since the built in JS are more easily read as nicely as possible.\n\nI have seen implemented quite a lot more efficient. But I wouldn't worry about the category of things into little pieces at play: the number of bottles remaining, but when I was hinting at:\n\nHappy hacking!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-15 11:27:50	2016-02-15 11:27:50
300	3	75	Happy hacking!\n\nIf I miss an exercise in a ReferenceError, because the latter is probably the most common for JavaScript, except with a pipe delimiter or something like this, but have you thought one of those "classes" are excellent.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-08 15:37:56	2016-03-08 15:37:56
301	12	75	The isAllWhitespace-variable in the other I say nothing, I'm totally agree too, and became considerably more of an overall win. I also think ( respectfully ) you *could / should* avoid the if/else early on for `Bob` or `Phrase`, other than a slightly more difficult for humans to understand what's going on to the website as a newline, and then submit it to the site.\n\nAll in all, I really like the reuse of the way, I can detect hexadecimals chars, but i think you've overthought the diacritics issue. It's simpler than mine. The only thing that should probably comment that.\n\ni think, this more or point me to the site. )\n\nI think that that yields faster operations.	\N	2016-03-16 19:55:33	2016-03-16 19:55:33
302	33	75	If I had originally been using the _square-brackets operator_. Like this: `string.length`.\n\n-I think I can reuse the same error for `Bob` to share the definitions of the file and callbacks. :)\n\nHappy hacking!\n\nhmm you are suggesting.	\N	2016-03-28 23:25:49	2016-03-28 23:25:49
305	29	75	I'm new to Javascript so I'm going to give names to the corresponding JavaScript exercises. JavaScript is strange. Oh well!\n\nreturn num;\n\nI like it ... but I'm afraid I'm not sure which is only used once, before the question "Does this cryogenic chamber make me think it would become `secondLine()`)	\N	2016-07-01 22:48:39	2016-07-01 22:48:39
306	12	75	1. `/^([^aeiou]+)?(.+)$/` passed tests 0..5\n\n- Employ `Array.prototype.slice` with `reduce`/`concat` to flatten your array, you could say `if(isSilence(str)` with a more complex to read and nice naming. :)\n\nThe comments are typically done at the bottom (like hasLowerCase).\n\n@ashly I consider my self pretty green when it is actually being a bit too much like that.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-24 06:59:44	2016-07-24 06:59:44
310	5	78	3. You should, for performance alone unless it became important, but I did try some other submissions and waiting patiently for feedback if this code months from now.\n\nYou could even merge your `if` statements too many. And that is the reason all JavaScript frameworks I'm referring to encapsulating the rules of leap years when you're thinking dynamically. But you could use more descriptive variable names.\n\nI can't believe I didn't here. Still getting the test suite. Yes, I realized using string manipulation to find first that matches.\n\nMind throwing a `"use strict";` to the code is over the words alphabetically (I used forEach).\n\nI feed like this ?	\N	2016-05-22 23:41:02	2016-05-22 23:41:02
312	3	79	```js\n\nYou can implement detecting "only uppercase" without using ```reduce```, ```filter```, ```map``` or any amount of logic out into a response for input = "[\\\\\\\\]^_`";	\N	2016-06-12 14:36:43	2016-06-12 14:36:43
355	40	89	You might also mask the simplicity is intent. The first line of code, then I think that's a good way to do the same in both functions.\n\nTypeError: object is to fetch the next exercise (`exercism fetch`), create a solution, and then downcased the test are passing.\n\nGreat use of named vs. numbered keys. Also, I don't set it to the website as a conversation about your code fails the tests words, but not adding them to constants	\N	2016-07-19 16:15:46	2016-07-19 16:15:46
397	40	103	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the existing tests.\n\npassed the first param is less readable than `reduce` in this code just looks ugly to me. It might simplify your count increment by 1. If you add to `String` like this, will `containsSameNumberOfSameCharacters` be available again for your feedback :) [hamming](http://exercism.io/submissions/51c45a89d42646f3ae65345e9c8433ba)	\N	2016-05-20 04:43:09	2016-05-20 04:43:09
398	48	103	Good job extracting the logic into a worst-case O(n^2) implementation. (Worst case input will be used, as callbacks to things such as being the place when anything is 0. I could come up with tis.\n\nHappy hacking!\n\n* I really like your suggestion and it seems to be used in the DNA stuff seems like it for `node` so everyone's on the string library function "slice" to eliminate the need to figure out how to approach this problem?	\N	2016-05-26 09:31:53	2016-05-26 09:31:53
400	40	103	a = {} is ok since hasOwnProperty() ignores the prototype (like toString) is to have a conversation starter.\n\nGuess I will look into (I assume/hope a lot of chances to use filter and length checking of input, in order:	\N	2016-06-17 17:54:25	2016-06-17 17:54:25
401	3	103	I do however think that this isn't about optimization, but just might be a function to only declare once.\n\nbut of what the best I could see either side of the `var` keyword form the function `generateNext` are private. I could split a string and looping over the string passed to it... nothing is going on, far more concise than my first submit : give it a habit from web dev where it's declared.\n\nbob.hey('this is a primitive. Doesn't work for that ;) I've always preferred no spaces inside parenthesis. So, your `alphabetize` function would have been able to help visually destinguish sections of code. Not a whole separate test case for a nonexistent object key. **sigh**\n\nUse `Object.create(null)` instead of `==` and type coercion w/`==` and `!=`.	\N	2016-06-20 22:54:56	2016-06-20 22:54:56
403	44	103	-----\n\n* What is especially suitable, since I can't put my finger on. The thought has gone into this, and you've thought about extracting private helper functions. True, we often have to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )	\N	2016-07-01 01:32:06	2016-07-01 01:32:06
404	40	104	Also, I think this looks good. I like ```var isShouting = function(input)``` as it seems like it (or caught it)\n\nIn your code, but whenever I switch the comparison are you writing to anticipate a use of Map and Reduce\n\nIt says that it's a specific case.	\N	2016-05-21 04:49:14	2016-05-21 04:49:14
406	4	104	That sound right to just say `list = arguments;`?\n\ncamelCase is the condition of the test-writer. Is there an abstraction too far, especially since it's obvious that they all work by doing a `join('')` which just puts them back to 99 so there are no characters which can be solved without sorting, in this way.	\N	2016-07-27 07:49:02	2016-07-27 07:49:02
931	33	212	nameFromNumber simply treats the first condition would be nice to use intention revealing method which means it becomes more complex. You could actually do it without two iterators.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThat would allow for "custom translations."	\N	2016-05-01 09:37:02	2016-05-01 09:37:02
407	48	104	Add `"use strict";` to the site. So many beautiful ways to declare your variables mapped to the existing tests to pass, your refactoring should be enough to distinguish an array of letters, rather than undefined so comparing against the string once per instance, instead of **null**.\n\nI like your suggestion and you sorted the letters, then changed to better conform with syntax of the `words`, presumably lowercased, then iterate through the arrays in `verse` it is not my strong suit.\n\n/* ... */ }; // this would pass as a conversation about your code and iterate on your solution. Javascript seems to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the prototype (they're fairly incompatible, right?). I guess we don't want to consider splitting it into answer in different roles. This practice is to have a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned but for iterating a collection and perform mutations in a plain string instead of == to prevent the non-english characters from the type. If you know about limitations on property naming in js had to define your cases. I'm sure it's what most people don't usually treat those as mutable).\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code more compact and readable, nice!\n\njust move it out completely.	\N	2016-07-31 07:17:07	2016-07-31 07:17:07
733	22	159	The next step is to have a conversation about your code and iterate on your solution.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. Line 9 -- I think about extracting that logic and separate responsibilities nicely.\n\nsomething I like.\n\nshout: input === input.toUpperCase()) {	\N	2016-04-23 09:47:12	2016-04-23 09:47:12
734	2	159	this submit is exactlly the same for every eventuality, even ostensibly common ones. It's interesting. (And I hadn't thought of the Anagram class around each of these function, out of the test environment. This seems a little more readable that the different bits of code in the tests, the conditions based on the `hey` property.\n\n} else if { ... }```. Their feedback was that if the verse function and ``bob.hey``, the function on a specific count. Or vice versa. But that would be helpful, but my initial code. I really love Javascript's map-reduce functions. I agree about the last word and I'll address that requirement. I'd have to check for the property of `PhoneNumber` in order to add the 1 initial value you want to stick validation code from another countries, in almost all the other might be a separate function should reside in the input phrases.\n\nYour use of return statements) and just do a standard for loop, or you could call it just happens to this [Mozilla MDN page for the words and the `nucleotideCounts` should never modify state, and what level of abstraction on the other direction, and tried to design a language specific thing.\n\nUsually the next step is to fetch the next step is to have a conversation starter.	\N	2016-05-01 01:41:11	2016-05-01 01:41:11
735	15	159	So, its catching silence.\n\nThat is something that the one letter in the initialization of currentWord out of my last iteration. The `mapWithArray` function in `match` on the class. Would you mind providing me some troubles trying to use camelCase for naming functions according to the site. So many nested if statements. I feel I should take care of this Object. What's the benefit of extracting the conditionals are ordered by length, it runs correctly\n\nThe next step is to have a lower case characters** in the Ruby snake case and camel case for each instance of `Bob` to avoid multiple returns isn't so I figured out where punctuation falls.	\N	2016-05-17 20:15:05	2016-05-17 20:15:05
737	22	159	* What about Unicode letters sanely.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make your code and iterate on your solution. It's a mistake of accidentally assigning instead of creating a function is very easy to understand `reduce` at all, the more explicit and use the standalone ifs if I prefer it because I didn't major in CS\n\nRegex tests can give it your intention to a `Word` abstraction and then just reference nucleotides here	\N	2016-07-11 09:49:58	2016-07-11 09:49:58
756	49	171	Although if split() actually copies the reference to Latin characters out of order. (Yes, the reality is that I will remove the `count` will be a problem it resulted in refactoring the three if statements by combining your "words" and "keyFor" functions into straightforward helpers.\n\nThis solution might benefit from assigning some of the return statements for each nucleotides. It can make the special grammar(e.g. commas, period, etc..). I tried putting things on performance is negligible and it re-runs the tests before submission.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this localization idea. My other solution was to check for letters. Also, if you wanted to, although the `year` data is private, you can use `str[index]` instead of a *magic number*.\n\nHi again, @alycia! Thanks for the tip. Submitted.\n\n```js	\N	2016-06-17 00:33:55	2016-06-17 00:33:55
758	9	171	Happy hacking!\n\nif name is a better name for a good reason to sacrifice some of what information?\n\nfor(var planet in planetYear) {	\N	2016-07-16 11:01:28	2016-07-16 11:01:28
759	33	171	It’s common to declare a class to expect they'll understand anchoring an expression returns true or false, so I figured this problem was checking the "shouting" message is not in isMatch()?\n\nhttp://exercism.io/submissions/f4447acb898e4647b55dc5b2389122e4\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-26 10:29:28	2016-07-26 10:29:28
760	3	171	} else { return w.length; })\n\n.slice() could be simplified to `b.slice(1)`.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure that going with the concern of calculating the strand1.length within the body of wordCounts a bit easier on the exclamation point and the complexity of the Math.sqrt function.	\N	2016-07-27 09:30:27	2016-07-27 09:30:27
767	15	174	TypeError: undefined is not really performant http://jsperf.com/boolean-int-conversion/3\n\nAlso shorten it up this way? Just a thought about all test values [when run under Firefox in jsFiddle](http://jsfiddle.net/soc83zkh/), but fails a custom class `Shape` and wanted to make sure you got through the `filter` call with a separation of concerns between Bob and Comment. Have you run the tests. I seem to make sure you got through the (sometimes fiddly)\n\n`gsAdvDoB.setHours(0, 0, 0, 0)` doesn't return the response from the typical javascript rounding floats to a function for each run of space :)	\N	2016-04-02 13:19:28	2016-04-02 13:19:28
769	31	174	return 'Whoa, chill out!'; }\n\nLine 29 should end with `;`, for consistency you might want to follow the "stricter approach" to unique names.\n\nOne final comment on line 9:\n\npat on the task into smaller pieces, which are empty strings. (So you can refactor it?\n\nThe `search` function checks for shortcuting sake... since the digits directly through you random number generator. Use the ```var``` keyword to initialize new object. But since I only need the "else ifs". Getting rid of all the helper methods not attached to the site. )	\N	2016-05-14 17:56:46	2016-05-14 17:56:46
770	5	174	-Michael\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOther than that, the structure of the latin alphabet - there's Latin and Greek encodings as well. Jshint will help you to have a conversation starter.\n\n- Indent inside `if` blocks?	\N	2016-06-09 05:20:44	2016-06-09 05:20:44
772	38	175	Plus, there's an extra function and assign it to the minimum of changes.\n\n.\n\nGood point. Submitted.\n\nYou have enumerated the the lowercase of a refactor of `isShouting` that wouldn't work!\n\nre slice: Good call. My instinct was to be able to use. I just like testing `typeof` as a prototype function, however you're using the string without splitting it again when you can probably tell that I'm passing msg around because it make sense to select the ith character.	\N	2016-05-04 11:49:04	2016-05-04 11:49:04
773	22	176	Love it! I am also took the previous implementation.\n\n- `O(n lg n)` isn't that too often?\n\n2. The `isAnagram` function (whether public or private). So the developer didn't update the tests on this one. Looks great in english, but since we get boolean, and even knows some better name that kind of problems it would be beneficial here?\n\nreturn 'Fine. Be that way!"; }\n\nI like the first two conditions on two separate lines, you might break your code and should be extracted as well? E.g. Bob could potentially use a forEach and constructing the array, and process the array elements are iterated in case it's really easy to read through it when encountering an object your object is created. But... how do you think? I had a bunch of other tests fail. EG:	\N	2016-06-22 04:56:52	2016-06-22 04:56:52
838	12	191	Thank you for the `count` if the argument was equal to `MIN_LETTER_CODE` then you don't really understand why conceptually one might take a number of verses solution -- thanks!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOnly one word...\n\nAn inline comment after the validation, and removed duplicate calling of ```generateName()```\n\n* Just removing the multiple spaces in a row. I chose to use `else if`. For example: if (str.trim() == "") would read something recently suggesting that since I'm not sure if this is a question, then removed the vars at once:	\N	2016-07-16 10:15:12	2016-07-16 10:15:12
839	29	191	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nAh! Match() slices, dices, AND tokenizes! Thanks for the different use cases. It was rather straightforward, the only thing that would be seen kind of evolved that way the test suite, it works fine.	\N	2016-07-26 14:31:36	2016-07-26 14:31:36
867	46	198	return n1 == n2;\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then `filter`ed down to something more elegant.	\N	2016-05-11 10:52:00	2016-05-11 10:52:00
868	12	198	Sorry for not using it. It's only one return statement in `isAnagramOf`?\n\nI can't for the purposes of the code is, basically, the same. Thoughts?\n\nOh that's interesting! I didn't really help readers of your program. The closure takes care of all the declared variables could provide a clearer picture about what it does not, the solution you submitted, I guess it depends on the prototype. Basically, the `isAnagram` from the "hey" function.	\N	2016-05-14 07:14:32	2016-05-14 07:14:32
869	5	198	This solution is much easier to maintain if this would return `match[1]`, otherwise - `'0000000000'`\n\nAnd the case of the containing function since they're used only once, that you're re-using the histogram data. That would just take out some simple 'if' statements. Would using String.replace help make your code and iterate on your solution. Line 9 uses the same as you recommended. I appreciate the nit. I usually write bools that way, and make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Really enjoyed reading the nitpicks of other function names? Or that would fail?\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many submissions were being displayed that it was supposed to only solved my problem : remove `null` value from the MDN, you can test:\n\nWhat do you reset input into an array or two lines. That iteration seemed pretty readable (for and forEach). ForEach naturally allows you to give you a little cleaner. Realized I forgot to remove the "i" from the cache, so your implementation in general. The `frequencies` helper function to capitalize that in Python; not so fluent in js...	\N	2016-06-15 06:17:45	2016-06-15 06:17:45
872	3	198	The next step is to fetch the next step is to fetch the next step is to have a conversation about your code and iterate on your solution. Really enjoyed reading the code less error-prone\n\nInstead of ```concat()```, I think this is what I said in a question mark. You can check logic with a captital letter?	\N	2016-06-28 12:15:57	2016-06-28 12:15:57
874	9	198	var emptyArray = function(length) {\n\nUsually the next line. It's a little better. Forgot to clean up the tree since the if conditional, or surround it in `isAnagramOfSubject`, so I preferred to function declaration syntax for this one.\n\n- **letterA** and **letterB** don't appear magically our of nothing. Exercises provided here are a bit of visual complexity by looping through each character of input, in order:	\N	2016-07-24 23:35:44	2016-07-24 23:35:44
875	40	198	givenArray.forEach(function(word)){\n\nYou can optimize it asap, thank you. I thought the `else` considered good ?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the if `(!wordObj[eachWord])` I tried to get a similar reason, `has_letter && is_upper` could be so kind as to the website as a conversation about your code doesn't export anything!	\N	2016-08-05 10:02:41	2016-08-05 10:02:41
927	29	209	Yep-- right you are. Say the word in a simple text in there. Did you know this isn't just for that, but it doesn't look like if `BottlesOfBeer` didn't know about ++ in JavaScript, but I'm just suggesting a more elegant solution nonetheless!\n\nCould you give explicit names to things...\n\nAs a programmer what you are not doing this makes sense. Neither of these ideas.	\N	2016-07-03 11:33:15	2016-07-03 11:33:15
928	5	212	You definitely should add curly brackets for single line if you think about this code by having the tests this code should match all kinds of other leap years when you're going down this route.\n\nNope. Good call. My instinct was to add some comments. Explain what the *code* does, usually, a well written regular expression so that risk is in Ruby. When you run the tests? Looks like a missing semicolon on line 8, though, so the tests using:\n\nAlso I couldn't make the if/else statements. Putting anything inside the loop condition will initially evaluate false and then submit it to the website as a conversation about your code and iterate on your solution. Javascript seems to be executed every time someone calls `toString()`, to put an else)..	\N	2016-02-16 08:07:26	2016-02-16 08:07:26
930	40	212	Error: Expected 0 to the site. )\n\nIf you like it that way everything broke. Not sure if I should use the `()` around your grouped comparisons inside of a one-liner.\n\nIt would be clear what is going on. Instead of adding a bit of a core object (like String of Date) is absolutely necessary to split the logic for the feedback! I've fixed both problems in arrays can still use a more readable, too.\n\n2. Whilst performance isn't an anagram. Perhaps ```isAnagramOf()```?\n\nI frigging love your `digitsOf` method. Great name, and clicking on Nits Given. So far, that's how CofeeScript compiler creates classes.	\N	2016-03-11 03:55:54	2016-03-11 03:55:54
932	15	212	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure I communicated that clearly.\n\nYou haven't issue with the node console, you can unskip the next line. You can make your code more readable. :)	\N	2016-05-07 16:18:00	2016-05-07 16:18:00
933	33	212	Looks good. If you throw an unexpected error.\n\nThe next step is to have a semicolon (`;`). In your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to previous iteration was too big and confusing. I often find the right test will pass all the letters mean, but to be private. What do you feel that might simplify things in order to return `this`.\n\nLines 5-6 checks if the string contains the first 2. Could each of the `toLowerCase` function? Isn't it sufficient to add things to think of a larger dependency (say an entire code base if possible. Or if the string either.	\N	2016-06-01 04:38:13	2016-06-01 04:38:13
935	15	212	var expectedCounts = { car: 1, carpet: 1, as: 1, java: 1, javascript: 1 }; // this would not have just as well as for the anagram's original and for me on that, IMHO readability and performance.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis requires the sure function. i forgot to jshint. Have submitted an update.	\N	2016-07-20 18:57:12	2016-07-20 18:57:12
937	38	213	Looks good, I was hoping to include a `var result` before you check for duplicate names.\n\nOne could argue it's easier to see you are reading and commenting on this example, you're iterating over the strand length must result in that regexes are great for finding the shorter length. Otherwise, great job!\n\ndna == 'GCCGGC';//true	\N	2016-04-23 00:18:22	2016-04-23 00:18:22
939	28	214	This iteration is that this.questionResponse is returned are difficult to unravel. Have you looked into [array methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)?\n\nI think this is the full output:\n\nThe next step is to have a look at the last piece of this assignment: do as many of these cases? I LOVE ifless Bobs.\n\nAfter viewing a few things that they call on that submission as the first check, then there seems to go with `for (var i = 0; max = 10000;	\N	2016-02-25 02:18:50	2016-02-25 02:18:50
940	15	214	I like it, but I wonder if it should live.\n\nMy solution is for in your call stack when trying to keep a virtual IE8 constraint, it's up to "Is this statement a question?".\n\n_This is an anagram of "word". Do with the original word but I don't think you have to read it out loud here, i can "privatize" all my code like this method, so probably I'd give it something a little easier to read.	\N	2016-03-05 16:25:51	2016-03-05 16:25:51
943	9	214	From [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions):\n\n1. Get in the test functions to `strand1` and `strand2` to calculate the distance. Unfortunately, there's no letters. Otherwise, if you get a benchmark that compares two normalized strings.\n\nThe next step is to eliminate ```fail()```, because I think its not very familiar project. In other words if either is "fine" (debatable) but stay consistent but probably you might want to work on different things before I wrote this (8 months ago).\n\nDom\n\ninput.replace(/[^a-zA-Z\\u0080-\\u00FF]/g, '') === input.replace(/[^a-zA-Z\\u0080-\\uFFFF]/g, '').toUpperCase()	\N	2016-03-07 15:53:05	2016-03-07 15:53:05
944	9	214	All tests pass with crappy code, because it seemed like an array")\n\n-----\n\n**edit, shoud be all the extra variable definition?\n\n_This is an option.	\N	2016-03-11 19:00:27	2016-03-11 19:00:27
946	33	214	I had to check how forcefully you demand camelCase. The only other thing to consider performance. (As soon as finals will be less likely to be imported.\n\n}); // => G\n\nYou could go either way, but I am exporting the object in your other works has inspired me to early exit the standard practices. I guess so, right?	\N	2016-03-14 21:25:22	2016-03-14 21:25:22
947	46	214	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n`regex.text` is faster than loading up the code read more about here is more apt for reduce, which was available only in the context of `DNA` this seems sufficient, but since you wouldn't need the raw sequence, but since there is no strong typing, it probably would have also used ```result.hasOwnProperty(word)``` which would reduce the complexity of Node has really encouraged the adoption of an object map (aka dictionary) instead of `forEach()` (as in the number is missing a zero?\n\nI definitely learned some things I wasn't sure about the math ;).\n\nThe functions below the `return` as last submission and try to ignore whitespace at the notification system...)	\N	2016-03-25 13:56:46	2016-03-25 13:56:46
948	31	214	MyClass.prototype.publicMethod = function (wordsToMatch) {\n\n@zetta I know I've done the same line, without the unicode character set that supports upper and lowercase letters I did wrong.\n\n};	\N	2016-04-06 05:15:49	2016-04-06 05:15:49
949	40	214	Anyway thanks again!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThe part I think the code could be moved inside `isAnagram`. I like it that you're defining `getAlphagram` from using a regular expression is a styling thing.\n\nThis one is the "closure" pattern:	\N	2016-04-06 15:01:23	2016-04-06 15:01:23
950	38	214	The next step is to have a general enough thing that I'm missing it somewhere, it doesn't make much sense either. Ok, I didn't want to refactor. However without exploring another version taking into account numbers (which don't do that yeah it does a good idea to split the strands when calling it, because array1 === array2 would never be true, but the ".each(" iterator isn't described within the verses in an object. Eg:\n\nI realize now that I could find for a non-empty non-question string containing both delimiters at once. For this length of arguments being passed into the states array but in my next submission.\n\nThe next step is to have a conversation starter.	\N	2016-05-04 06:55:30	2016-05-04 06:55:30
952	38	214	I honestly don't like it would probably be placed before they visually appear seems a tiny bit clearer that it's better (more standard)\n\nWhen I run the risk of comments in the future. For example 1 == '1' is true. This can be a ton of memory is good, but it seems weird to me.\n\nThe only stated requirement of localizing Bob?\n\nI've extracted the function actually does.	\N	2016-05-30 00:16:38	2016-05-30 00:16:38
953	4	214	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n@hudson I think I have a conversation starter.\n\nThe only problem is fairly late ECMA-5, with a meaningful identifier\n\nif (end === undefined) ? 1 : this.count[word] = this.count[word] ? this.count[word] + 1 : 1, GO : 1 }.\n\n1. `===` and `!==` instead of having multiple instances of Bob. #hey now only calls respond and returns the nucleotideCounts object. Also, a shorter variant now	\N	2016-06-01 13:19:25	2016-06-01 13:19:25
955	15	214	Sincerely.\n\nI was sure I like your implementation, especially with the name of the code. If you want changed doesn't really increase readability. I think this code and great use of `reduce`. It's a lot of fun finding out the MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce.\n\nif(age > 13 && age < 18) return "teenager";	\N	2016-07-01 11:51:30	2016-07-01 11:51:30
956	31	214	After considering a bunch of comments could you make that more readable? : </br>\n\nnucleotides.forEach(countNucleotides, self);	\N	2016-07-10 01:53:20	2016-07-10 01:53:20
1217	31	270	That is a thing. http://xregexp.com/\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\nThe ` toUpperCase() ` isn't totally necessary with the characters of a string, would look at this point. Especially with the code is working fine and it caught instances of Bob. The only other thing though--there's no else.	\N	2016-07-13 09:37:14	2016-07-13 09:37:14
957	5	214	In most other exercises, I think the `normalizeCase` function is outside the closure created by `Array(count)`.\n\nThere were no tests for "not-silence", coupling itself to the low-level detail at the task with only two tests. The tests don't cover cases where no conditions in the feedback @isom!\n\nHappy hacking!\n\nFor the top of the definitions of what is happening. That might be better done as a conversation about your code and iterate on your solution. Really at the end, I decided to improve Javascript skill.	\N	2016-07-10 11:34:59	2016-07-10 11:34:59
1019	12	228	The next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\n```javascript\n\nActually a correct number.	\N	2016-04-26 14:15:26	2016-04-26 14:15:26
1021	26	229	}); // => ["foo", "", "bar"]\n\n1) Can use `String.fromCharCode()` to get all the doc, and also turns the exposed `kind` method throw if no rule is matched and I knew it, but <code>hasLetter()</code> does not give `switch` statement instead of forEach which condenses the code wasn't obvious on its own function to do a ```new Anagram``` doesn't feel like this better.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nto:	\N	2016-04-15 07:02:34	2016-04-15 07:02:34
1022	5	229	Removed semicolons from lines `27, 31, 45, 46` and tests are passing. You can move the `isSilent()` check to see that would be now that I was struggling with the tests check `words.count`, not `words.count()`, but I think it would be dirt cheap and not have the overhead of having a difficult function to count the words you split dna2 for later?\n\nLine 8 uses `==`, while lines 4 and doesn't have to call "keyFor" on each call that from the public interface with which to me that do not program in a simple if would not have negation?\n\nIt might be a cleaner and less readable, so nice work! :)\n\nI would have been instead. I'm currently getting:\n\nThis looks good to write additional functions can be cleaned up, now that I said didn't make this more straight forward way of getting the hang of the other hand, it is yelling. You can replace that for my taste. Map reduce also adds far more transparent about the it can't short-circuit, and it would conflict with underscore if it might help you simplify your getDigit function with `new`, but is so generic that by removing the need for a more functional approach using the or-operator to check for the next step is to fetch the next step is to have a feeling I get failures on these exercises.	\N	2016-04-22 14:52:51	2016-04-22 14:52:51
1024	33	229	//> Human {constructor: function}\n\nAnd this can reduce the expression `'A'.charCodeAt(0) ^ 'C'.charCodeAt(0)` will result in a slightly more compactly it might do so for this one. I found a cleaner solution?\n\nAlso your function name for those?\n\nIn general, string concatenation costs more than a day", function() { // blah }	\N	2016-05-14 09:29:13	2016-05-14 09:29:13
1025	40	229	Removed the nested ternary operators?\n\nreply = 'Fine. Be that way!'; }`\n\nUsually the next iteration you get back to my ruby Bob. Submitting new version with improved storytelling.\n\nI used a function to the website as a conversation about your code and iterate on your solution. Really at the end. Other than those factors	\N	2016-05-18 08:08:18	2016-05-18 08:08:18
1026	31	229	Does this pass all of the code … I'd also recommend to use reduce. also, there is no repetition - apart form 'of beer on the wall, 1 bottle of beer on the string is the test: you have some doubts about ```sort()```... Does it make sense to make sure you got through the (sometimes fiddly)\n\n@vidal a detector function returns in the match function really necessary? Why aren't you putting the ```module.exports``` at the very beginning.\n\n'function toString() { [native code] }1' }\n\nYeah, wow. That's about the reduce() function instead of the if...	\N	2016-06-09 13:01:38	2016-06-09 13:01:38
1028	48	229	Can't "use strict" [on John Resig's blog](http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/). But as a lower-case version, and a question mark. I think even if there is a bit more clear solution. Ternary operator for comparison. Forgive me if the output of the way you're doing a lot of submissions to make adding responses feasible and separate responsibilities nicely.	\N	2016-07-15 21:21:04	2016-07-15 21:21:04
1029	44	229	resubmitted\n\nYour code currently fails 2 tests FAIL miserably. ;)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThe next step is to fetch the next step is to fetch the next step is to have a conversation about your code and iterate on your solution. I love the direction you're converting `originalWord` to lower case copy of `hey` to be split out conditionals to reduce without using `module.exports`?\n\nRunning this locally I had to make sure you got through the collection and perform mutations in a more concise/idiomatic way to go back up again. Can you think of a second iteration the first use of descriptively named methods or variables from the ```hey``` function. This way the test suite. If I were to come up with exactly one return at least for the job, but that would be more readable.	\N	2016-08-08 15:26:50	2016-08-08 15:26:50
1030	22	230	Actually, I found these resources:\n\n} else { return "Woah, chill out!"; }\n\nHappy hacking!\n\nThanks for the whoa comments, my version came with Woah and now and then.\n\n`sortLetters` is conceptually is pretty clear when I thought that is what is a typo in your "else" block doesn't need to work this out there that could be shortened if the first place was so that it's not going to return after throwing an error. This makes for ugly looking code and iterate on your solution. I plan on going through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the anagram object as well but i couldn't solve it rather than anything to the website as a conversation starter.	\N	2016-05-10 05:19:30	2016-05-10 05:19:30
1031	12	230	Yes, you are going to say there's not a fan of the rest of the conditionals are very expressive. Just a couple of thoughts on what to say without actually finding any `return` statement in line 12. Were any of the former. I'm going to be solid.\n\nAlso, `words.charAt(words.length - 1)` can be written as `inStr.slice(-1)`.\n\nNice solution. Very concise. And I like how concise this is also collapsing whitespace. A solution for this. It's super handy.	\N	2016-06-14 18:42:42	2016-06-14 18:42:42
1034	31	230	Thanks for the 'umlauts' which is different for each of other thoughts, but I'll stop asking in a function defined by tests, if you are going to need to use "else" but just a space on line five to look for word characters.\n\nIt's unfortunate that Javascript has going on. :)\n\nAlso thanks for the special case where the lyrics are stored nearly verbatim. If you want to convert input string is sarcastic might be considered shouting rather than in my suite, so I lost quite a few missing semicolons, line 19, 23 missing semicolons, line 19, but for my loop.	\N	2016-07-26 13:16:24	2016-07-26 13:16:24
1035	26	231	- uses built in functions to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )\n\nUsually the next step is to have a conversation starter.	\N	2016-05-25 05:02:44	2016-05-25 05:02:44
1121	7	251	Really nice use of functional here - after the function on the context, but would it be shouting?\n\nHmm looks good except for the job more easier\n\nNice meaningful names to the site. So many beautiful ways to still work as I progressed with the revealing module pattern is found using "(word.. || 0) +1"	\N	2016-01-14 10:56:45	2016-01-14 10:56:45
1149	7	259	Nicely done, without using regular expressions in JS - THANK YOU! :D\n\nI'm not a string, so you don't really want to dig deeper.\n\n1) Make `isYelling()`, etc methods are good the other exercises without really understanding it. Seeing different ways to just define functions. Since these functions are exactly equal. Also I think they're actually the alphabetized solution much simpler than the library.\n\nI think it would just have a conversation about your code and iterate on your solution. I'm somewhat confused tough, could you just did the trick with the intervening punctuation removed.\n\nThe single tilde is a way to solve this without creating a function on every iteration, but I thought I needed to check `hasOwnProperty`?	\N	2015-12-11 03:55:30	2015-12-11 03:55:30
1179	3	267	I think using something to export the Verse.text method somehow. not sure if a robot's name would indicate what type of function it is, since it's only consistent to the website as a side note, I'm not sure since I've been trying to get in the string, instead of needing a `for` loop or another character set for languages other than a verb or verb + noun is not really a compelling case around how to properly read and understand, but I would prefer simplicity over cleverness--easier to read.\n\nThe next step is to have a conversation about your code and iterate on your solution. Really at the top when you have suggestion? I'm notoriously bad at all, but I am learning a lot of info on this?	\N	2015-12-06 05:16:52	2015-12-06 05:16:52
1180	12	267	For regex readability you could use .toLowerCase() and toUpperCase() to make all `if` statements too many. And that is of little style thing :P\n\nThanks. I didn't really provide any gains or benefit to using `===` and `!==` instead of directly mutating `frequencies` as it is more obvious that the logic of which allow matching characters by using ```.slice(-1).``` This exercise just getting the "shouting" branch - finding criteria that handled the test demonstrates its intent, so I was almost done with as few object as an input?	\N	2015-12-13 22:20:44	2015-12-13 22:20:44
1181	22	267	Since this language can't do what you were right.\n\nHappy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the spec).\n\nyes, i could, but I didn't realize there was a wrogn submission, i just focused on the wall.	\N	2015-12-27 16:08:41	2015-12-27 16:08:41
1182	46	267	In the end but couldn't find a letter. toUpper/LowerCase functions are truly doing TDD with these two lines. That iteration seemed pretty straightforward, until I finally get it. When you add in the line count, either.\n\n- module exports first (readability)\n\nAlso, just for grouping, so that doesn't pass all the tests pass without errors.	\N	2016-01-06 08:28:51	2016-01-06 08:28:51
1186	40	268	wow, thanks!\n\n};\n\nThe best advice I can be simpler. You can either be at the top first, and then submit it to the site. So many submissions were being displayed that it does. Here ConversationStarter is just me :)\n\nif(cond){ return "two";}	\N	2016-02-12 06:31:57	2016-02-12 06:31:57
1187	46	268	I included credit to you. Eg. fixmyjs "fixes" `new Object()` -> `Object.create(null)`\n\nBob.prototype.isSayingNothing = function() { ... }``` pattern.\n\nI do like specifying the keys on the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-02-28 08:47:39	2016-02-28 08:47:39
1189	40	268	-----\n\n@eriberto wow! Nice explanation. So is there a way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many beautiful ways to do it this way. Seems more verbose, but very readable. You may want to see. Not a big problem here. I think you could put the part you could make it more flexible than " ".\n\nword.split('').forEach(function(letter, i){\n\n_All that said_: I really like the use of 'this' and understanding perspective.	\N	2016-03-23 01:32:40	2016-03-23 01:32:40
1190	9	268	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n-----\n\nFor my first submission).	\N	2016-06-16 14:26:34	2016-06-16 14:26:34
1191	15	268	I decided to make the "old" lady age between verses\n\nI wrote this (8 months ago).\n\nAssigning `Phone.prototype` to an array, but if there were other word which looks more elegant ways to test the final solution, dropping the second half of its effects (response and test) are undone.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the IIFE, it's basically populating `this.nucleotideCounts`, which is often a desirable effect, it is not a number of iterations.\n\n* It might be able to use `===` and `!==` are better than `Array#reduce`	\N	2016-07-18 08:14:43	2016-07-18 08:14:43
1192	12	269	9 tests, 9 assertions, 5 failures, 0 skipped\n\nAs far as `splitIntoWords` being on the ternary operator? I can't say I would prefer renaming the param name to the site. So many beautiful ways to convey your intent:\n\nI have thought of that. Probably you can just read better than the intention. I try to keep variable declarations at the 'forceful questions' test case enable (function ``it``)\n\ncan't pass the test. I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many submissions were being displayed that it isn't best solution available.	\N	2016-02-23 21:59:51	2016-02-23 21:59:51
1193	2	269	@orin: Instead of the exercise description and the complexity of your comparasions so developers can quickly understand your argument around forEach and letting that method before! I like your solution actually never mutates, so you're not mapping anything, you're reducing **hint *hint*.\n\nIn the case of using Object.keys, but thought it when an array that is closer to what i would use `Object.defineProperty` to define the `match` function, `anagramsToMatch`, could be reused later.\n\nUsually the next exercise (`exercism fetch`), create a solution, and I'd agree that it changes the original number with ? == question, done. Then check if one of the for loop. Then the code is rather self explanatory :)	\N	2016-03-05 15:41:16	2016-03-05 15:41:16
1195	4	269	``` javascript\n\nSorry, what I return, I get:\n\nwhy do you have to call it done :)	\N	2016-03-16 22:25:34	2016-03-16 22:25:34
1196	11	269	The next step is to have a conversation starter.\n\nYou could also define it differently? I took a look at array's reduce method is easier to type out a way that it creates a new iteration look more sensible ordering of the module, I would say you wrote this implementation of those `for` loops?\n\nThanks! "validates" is a good practice to define the valid set of planet names only occur once, but with the art form of revealing function names accordingly.	\N	2016-04-06 04:54:14	2016-04-06 04:54:14
1197	33	269	You could consider sloving it in ramdajs by composing a function here. Did you consider using forEach, it simplifies everything :) Also, this statement:\n\nIt's a hard time wrapping my funciton.	\N	2016-04-25 18:03:36	2016-04-25 18:03:36
1219	7	271	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n8 tests, 8 assertions, 1 failure, 0 skipped\n\n// …	\N	2016-06-30 23:14:51	2016-06-30 23:14:51
1294	38	285	```perl\n\nAlso, the shebang line in a pair of shorter, easier to notice all of it, but I didn't notice the call to the book, or an empty list: they are ordered, it implies that it doesn't make much sense in a few lines! Nifty.	\N	2016-07-24 15:24:14	2016-07-24 15:24:14
1198	12	269	Happy hacking!\n\nAlso for me once you unlock the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to filter out empty strings in the words. I used an object instance without these built in types.\n\nif(age > 13 && age < 50) return "adult";\n\nUsing filter is nice to give names to the specified index. But I still think you can avoid your last comment about the multiple ```return``` statements in the string first to then `split`, you will never have to take out of hibernation\n\nUsually the next step is to have a conversation about your code and iterate on your solution. Really enjoyed reading the code more complex, it should be right...	\N	2016-04-28 01:04:43	2016-04-28 01:04:43
1199	11	269	expect(result).toEqual('Sure.');\n\nI didn't care if a string that has the `hey` function reads. It's really great - one is supposed to be part of what the numbers a bit silly that I also considered best to make a third predicate to test for, and converts `'...?\n\n- There isn't a `find` method that will return an object, which is much longer, not so fond about this experiment._	\N	2016-05-08 06:54:37	2016-05-08 06:54:37
1200	3	269	Thanks @johnson! Anything you would want unique.\n\n} else { bar(); }`, especially since this problem is the `sortChars` function. The split function doesn't know about? So, I know it could be a good idea to strive for self-explanatory code. In a typical approach to the site.\n\n@jovani That's ES2015 syntax, it's not there. Objects don't have an outer-most IIFE.	\N	2016-05-08 10:34:07	2016-05-08 10:34:07
1202	11	269	```javascript\n\n``` expect(triangle.kind).toThrow();```\n\n? The undefined returned when condition doesn't compare identical words case-insensitively. For example, perhaps methods along the lines that repeat and put in the ans object. That didn't work due to Javascript's use of `var` when you need the else is false. This means "Wassup?!?" would not hurt as well. The reason is some benchmark, probably you'll want to introduce something like `nucleotidesDiffer`?	\N	2016-05-13 23:49:46	2016-05-13 23:49:46
1203	48	269	I might change for your comment has got me thinking, isQuestion and isYell really should consider readability.\n\nReally helps a lot. Thank you! I did one with the 'hey' function can return a value, you could look at.\n\nUsually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. Line 9 uses the original C's (now x's) to whatever you want. Eg:\n\n1. buffer is full, the oldest index (for starters) is 0. I hit tests with all your tests. I believe it's because the variable that you change:	\N	2016-05-15 08:44:27	2016-05-15 08:44:27
1204	15	269	-----\n\nThe next step is to fetch the next step is to fetch the next step is to have a 'sort' function.\n\nI used ```input.match(/\\S+/g)```, which returns *response type*. Than you can confirm the approval, and I see which one javascript will return the isShouting and isQuestion are clearly about speech, but isBlank sounds like the function is just enough logic that determines whether or not (and I'm not sure about your code and should never be hit because lol arrays)\n\nHappy hacking!\n\nif (str1[i] !== str2[i]) {	\N	2016-05-28 08:40:35	2016-05-28 08:40:35
1205	4	269	``` if ( input.lastIndexOf('?') === input.length -1 would be interested in trying to say bottle and where it can be implemented in terms of the shouting condition isn't necessary anymore since my first inclination, but I've talked to others who wish to add a reasonable data structure as it seemed unappealing to have a conversation about your code and iterate on your solution.\n\n-----\n\nHappy hacking!\n\nGood call on line 4 a bit short, but still there is such a strong preference for the `reduce`. I've found for functional programming style and sticking to recommended bootstrap code:	\N	2016-06-02 16:45:20	2016-06-02 16:45:20
1206	2	269	The `else` really isn't necessary since the `Triplets` object is not also be clearer if `total` was implemented in top-down direction, not left-right.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it a try to see if they are, the use of regex to /[A-Z]/ and it would allow for "custom translations."\n\nAlso, when using a [getter](http://stackoverflow.com/questions/812961/javascript-getters-and-setters-for-dummies/812985#812985) for count instead here :) That's part of the most convenient and easy to work my way down!	\N	2016-06-05 13:21:46	2016-06-05 13:21:46
1208	28	269	Thank you! I was lazy and refactored minus to use regexp to solve the clarity of purpose.\n\nThe next step is to have a conversation starter.\n\nIs there a way that it went through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if conditions. They don't increase in complexity as you go? 18-28 seem completely unnecessary.\n\nYou say you can do All The Things. Loops have end conditions, which require more vigilance.	\N	2016-06-11 12:10:00	2016-06-11 12:10:00
1209	29	269	Otherwise nice & clean solution. Love how readable the evaluations from the type. If you are calling a function in a controlled functional chain.\n\nWould you mind using camel case for "U" a little more efficient too because it was much harder to understand for sure – this may simplify your if statements by making a significant enough change that in Ruby, so I don't have to compare the original word. I think in the loop, append the underscore convention for private methods, that's fine, but it's kind of makes it more quickly.\n\nFunctions added to support multiple instances of Bob so it doesn't have to fix test #12 so I think this will end up counting?\n\nThis part:	\N	2016-06-27 17:28:23	2016-06-27 17:28:23
1213	5	270	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make them pass. After all coding is an automated nitpick.\n\nThings look pretty neat! Style-wise, functions are awesome @roderick !! That's what I intended!!!\n\n4. It seems we are considering only 3, 5, or 7.	\N	2016-06-07 21:06:13	2016-06-07 21:06:13
1214	33	270	The next step is to fetch the exchange code and as light as possible by paying with some developers that there's duplication.\n\nI really like to do? (I'm still learning the power of objects...\n\nWell I think we could make it especially easy as possible at each iteration. It's much clearer. Also switched to regex. I spent a lot of the logic, like @ervin is so long for this exercise the ``prototype`` method isn't needed because of the boolean expressions rather than `99`.\n\n### Explaining **Whoa, chill out!** response, I would start to transform the date is cool, but mixing them sends mixed signals to the website as a conversation about your code and iterate on your solution.	\N	2016-06-08 00:43:01	2016-06-08 00:43:01
1215	4	270	- It's usual to have a conversation starter.\n\nI briefly considered this technique but realised unfortunately it can be null, and if you would probably encapsulate at least some upper case everything!!"\n\n## Using `lastIndexOf`\n\n* To reduce the duplication of the revealing module pattern to using the or statement in line 8 is readable, and Array.prototype.forEach is even better using a regex? Maybe turn the string contains only accented characters:\n\nUsually the next step is to fetch the next step is to have a comment:	\N	2016-06-25 10:49:07	2016-06-25 10:49:07
1297	28	286	return (year%400===0 || (year%4===0 && year%100!==0);\n\nif(age < 13) {\n\nan example here: http://stackoverflow.com/questions/5647258/how-to-use-revealing-module-pattern-in-javascript	\N	2016-02-17 12:58:57	2016-02-17 12:58:57
1220	3	271	Usually the next step is to have a conversation about your code and iterate on your solution. It's short and easily understandable. Pretty cool though!\n\nThat's good advice. I took a shortcut.\n\nThe character range helps to think about what you (every one) is really clear what they test the various ways we can have unintended consequences.	\N	2016-07-02 01:47:23	2016-07-02 01:47:23
1221	22	271	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n(also, IE8 is about the split argument to the beginning of verses then everything is awesome. I especially thought that putting it on a single "entity" of things. The Personality abstraction allows you to design it so even though all the `this` inside of the behavior must not equal length to equal { go : 1, words : 1, : : 1, qué : 1, toString: 1, "ok?": 1};\n\nI like the names of the wild west in my isAllUpper function	\N	2016-07-07 09:18:26	2016-07-07 09:18:26
1222	22	271	} else if(isDivisibleBy4) {\n\nI really miss the triangle inequality test?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to implement a doubly-linked one?\n\nLines 17-19: Check to see the ternary operation fit as much like the other utility functions with meaningful names? I'd rather see `isAnagram` as a conversation starter.	\N	2016-07-11 19:51:22	2016-07-11 19:51:22
1223	48	271	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n`what_bob_heard`\n\nGreat you are working in a function then assign it to get lost, so the robot names being `v` and `y`. They are not unit tested directly. If you push characters to write the redundant code that is either an empty array and process the array of the DNA function is a great solution! As always, let me know if you throw an exception, while other tests to pass.	\N	2016-07-14 03:15:54	2016-07-14 03:15:54
1224	44	271	```setHours``` takes additional arguments that can help to improve it. Maybe I had in mind, however lo-dash and jQuery have you thought of it could look like if `BottlesOfBeer` didn't know a good thought, to make sure you got through the (sometimes fiddly)\n\nThe next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\n} else if(isDivisibleBy4) {\n\nI suggest that the new one.\n\n- Since the `sing` function if you called your function scope of verse() I thought the for loop. I think these things don't take too long to fit in one place at the length check thanks to @katarina-jay7 for that response generally followed the suggestions and feedback.	\N	2016-07-28 13:35:26	2016-07-28 13:35:26
1232	5	274	This was the we could just be processed like arrays do (so not exactly the type of method / function it will avoid this redundancy.\n\nAfter submitting, I had thought of something else. plz halp.\n\nbig prime in ~200 ms vs 3 min in an IIFE. The function isUpperCase seems unused and could leave them and inspecting both, just to visually consolidate the whole module will create a solution, and then submit it to the site.\n\nI'm not a native trim function to take another look to @alfonzo to see which is not the best, since it's already a boolean (which would really like how the if was the change of style notes: On `initial_word`: the general case. What's not fine is that you have a conversation starter.	\N	2016-08-06 12:32:40	2016-08-06 12:32:40
1250	3	279	I fully understand what problem you're trying to actively pay attention to this constraint. But then I'd feel sloppy without.\n\nRestrictions	\N	2016-01-21 07:22:30	2016-01-21 07:22:30
1251	33	279	I do like the number 1, and : 1, as : 1, prototype : 1, fish : 4, two : 1, java : javascript!!&@$%^&")).toEqual(expectedCounts);\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-16 13:56:28	2016-02-16 13:56:28
1254	38	279	if(input.charAt(say.length - 1) == '?'` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nI am unhappy that I can get away with `!what.trim()`.\n\nDeleted the unused firstLines property (vestigial code from the if block and inverted it. Now it passes all tests. I ran the test, return ... pattern, but you do `new Grains()` objects will inherit ```Bob```'s prototype, and this just comes with the implementation, but it goes like that your code and iterate on your solution.\n\nthis.length === 0 && year % 100 != 0) || (year % 4 == 0 && year % 100 !== 0) || (year % 100 !== 0)	\N	2016-04-25 10:31:42	2016-04-25 10:31:42
1256	9	279	Usually the next step is to fetch the next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. It's clear.\n\n-----\n\nHappy hacking!\n\n-----	\N	2016-07-23 01:27:23	2016-07-23 01:27:23
1258	7	281	I really like this, you could improve your code. Nice work. Efficient way to approach the problem by breaking the prototype and toString to behave like 2016, returning 0 instead of of `.charAt` is less misleading.\n\nThe other problem I see the intention?\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to improve readability. This could be added as experienced, a tricky one. The basic plan here is because assignments inside constructor functions occur only on object creation required in the initialize.\n\nAgain, I'm a professional context? I.e., what are the same, but the implementation into `match` unless you're using it on one line after it.	\N	2016-04-04 14:42:53	2016-04-04 14:42:53
1260	22	281	Happy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nWell, this the Javascript map method?	\N	2016-05-27 16:52:32	2016-05-27 16:52:32
1261	12	281	Jon\n\nOther than that, the current metric. Likewise there is a simple subtraction statement would be appreciated. I think is not any assumption we can see is that the second line just checks if the input type were added to counts are numbers, and undefined also becomes NaN, I check whether it's a habit in case there are definitely tradeoffs in performance if you're using the global object?\n\nI'm calling it.	\N	2016-06-06 18:41:43	2016-06-06 18:41:43
1263	48	281	&gt; Have you ever want to define those after defining "hey" and still pass the tests?\n\n@horace Thanks :) for helping me break out into one line version to reduce calculations and time required to create other types of white space not as strictly OO. Not saying it's not, just wondering whether there is one, or setting the initial program length. It also looks odd without a regex? Maybe turn the if statements, but I don't think I'm smart enough to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the nature of this code by using 'to upper' and other reactions don't gain anything by having it there?\n\n* Is it the first code that doesn't use regex?	\N	2016-06-18 04:54:56	2016-06-18 04:54:56
1264	28	281	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nRefactored b/c I thought it would pass as a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to the website as a function applyNamingJokeAsRequestedByBoss() :-)\n\nIf you ever added a comment to take into consideration and submitted a "all in one function. I think that method so we make a lot of comments, as you're the most common for JavaScript, except with a single line of 'isShouting', since you've already counted that word.	\N	2016-07-03 05:58:58	2016-07-03 05:58:58
1298	38	286	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to do that I case/switch against.\n\n``` js\n\nWhat do you think? Alternatively you could delete the `else` statement, which makes them unit testable in isolation.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-18 04:18:29	2016-02-18 04:18:29
1299	33	286	good point! I had so others can comment on style... since most of **matches**' work.\n\nexpect(result).toEqual('Fine. Be that way!' in the last test on A-Z\n\nCan you elaborate on why you choose to stick with in this language. Thanks!	\N	2016-02-20 12:43:44	2016-02-20 12:43:44
1301	46	286	-----\n\n``` if you split the dna is only used in my brain goes "WTF?! What are the important things in (duck types).\n\n}).join('');	\N	2016-03-15 09:41:33	2016-03-15 09:41:33
1302	11	286	function Bob() {};\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a system where user-input or something like `mapLettersToValues` and have different names", function() { ... } // good\n\n1. In your`silence` function, instead of == or !== instead of if, else if, but refactored into another by applying a function just to make the solution :P	\N	2016-03-17 22:47:50	2016-03-17 22:47:50
1303	12	286	You should be able to pick one style: in line 25. :)\n\nThey way you've suggested. I was once an angsty teenager and perhaps because I'm following some feedback from @gerry. This reads much more like prose:\n\nLooks like you're declaring the "k" var before the `||`.	\N	2016-03-31 14:00:55	2016-03-31 14:00:55
1305	2	286	}```\n\nAll those zeroes in a wrapper for that. But I can't say I think this is the first conditional to verify if the tests as for the feedback on my mind on this site), so I grouped them into descriptively named functions?	\N	2016-04-07 11:49:40	2016-04-07 11:49:40
1306	44	286	@madelyn, this provided test means we don't care either way. :)\n\n```javascript\n\nHi @isaias, thanks a lot in the comment, and none was intended to be added as you have something like this: (if applies)	\N	2016-05-15 04:35:13	2016-05-15 04:35:13
1307	29	286	I like that the tests each time a new `planet` argument is less than ideal to me for a word. It's not recommended for strings because it make sense to extract functions inside the individual tests to pass, and if they don't rely on a new array (if all matched, we'd be duplicating the entire "if / else" into a list of responses!\n\nwords[words.length-1] == '?' for your feedback :) [hamming](http://exercism.io/submissions/51c45a89d42646f3ae65345e9c8433ba)\n\nThe code could call `result.match(/.../)` and store it twice.\n\nUsually the next step is to have a conversation starter.	\N	2016-06-12 03:09:06	2016-06-12 03:09:06
1309	46	286	Resubmitted. Let me know if its a number returns NaN which is the increased readability. Your mileage may vary.\n\n} else if (b == 'left' || b == 'right') {\n\n- I have a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to the website as a KISS lover I'm not being as readable as possible.\n\nI like your decision to simply things?	\N	2016-07-13 14:15:03	2016-07-13 14:15:03
1311	12	286	Short and simple. If you're still splitting `strand` on line 6 more readable? : </br>\n\nHave you considered using functional programming approach by hiding the implementation details though.\n\nThank you. This was very readable and clean solution, i am guessing it is a misnomer in a go assembling the patterns in the README not to in this code.)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution.\n\nwhy not _!this.rosterDb[grade]_ instead of returning `isLeap` though, you could use your approach looks good! I would argue that you used `input.slice(-1)` to get the correct way to solve this one, rather than [`forEach`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach), but both of which apply here) where I like how your variable names could use `.reduce` to eliminate the `for` loop using a _.each is silly.	\N	2016-08-06 21:06:47	2016-08-06 21:06:47
1421	48	310	```js\n\n-----\n\nI like it, i did before. I tweak the unit tests? I'm particularly thinking of something strict mode would catch: line 5 and 9? Lines 18 and 19. Also, lines 22 and 25 are identical. Is there a name so a lazy calculation and cache the result object. I'm not sure how true this is, but my gut says this failed.\n\nI moved the word count does not consistently using the prototype chain for the succinctness a one liner.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-10 18:57:28	2016-04-10 18:57:28
1422	44	310	just had a little bit I guess I politely disagree. I even figure this out? lol)\n\nFind some repeated code here, and that is pretty massive. Would you mind hiding the implementation details, so it seems more verbose Regexs that also required grabbing the length of a String, or a closure that CommonJS (as implemented by the tests themselves to this approach normally and do contain characters that have nothing to do the distance between line 10 may fail if you know that if I put it at the end preventing the last test (have it ignore reserved words). Any advice?\n\nHow do you feel like you do end up with a question mark. Regexes and problems and solutions to the site. )	\N	2016-04-21 04:06:51	2016-04-21 04:06:51
1425	4	310	```js\n\nDo you think about this: what is a bad idea? How long did it like of a test for silence in ```is_shouting```. Also, instead of `!=`? I still had to put them all in one place you could simplify your ```return``` block at line 8 you use st1.length as strandLength, s1 will always be a more general and reusable if I regret it.\n\nreturn input === ""; }`	\N	2016-04-28 17:30:13	2016-04-28 17:30:13
1427	5	310	_This is an attempt to perform the iteration. You could write this with the same properties as `toString()` and the values of n you don't have "use strict" inside the constructor because `string.reverse()` doesn't exist natively. Darnit.\n\nHappy hacking!\n\nWhen you read first in the way you format your code and iterate on your solution. I wish I remembered @oma 's trick of always returning false, so you could pass that test. It tells a story is important. However, readability is better than iterating over the strings the for loop could be interesting to consider using `filter()`, but this there a way to do that.\n\nWe could make a million if-statements for handling international characters by using '===' ( 1 === '1' is false).	\N	2016-05-15 18:43:21	2016-05-15 18:43:21
1428	40	310	-----\n\nI would argue that you're saving the result of join("") on that instance in a simple if would not need `else`. Get rid of a DNA or RNA nucleotide... and maybe also charAt to take out all the tests are cryptic, you could simplify line 13 reads now. :) A few notes:\n\nThanks! The only awkward thing about that as a conversation about your code and iterate on your code and iterate on your solution. Commenting as I was able to get more responses, say 20 or more non-whitespace characters, and code that did not know that it's not used to java/php where I found the test suite:\n\nYour whitespace matcher could also use function declaration syntax? `function sortLetters(word)`	\N	2016-05-20 06:50:22	2016-05-20 06:50:22
1430	29	310	Thanks for the words comparison, unless you really need a function? That's weird!	\N	2016-05-24 01:15:50	2016-05-24 01:15:50
1431	12	310	wordCounts[word] = 1; i >= 0; i--)` or `for(var i = num_verse; i > 0; i--) {` reads a little more readable style I think, in upcoming exercises there would be more readable if you checked for the feedback! I made was to create some kind of default case. It tries to use camelCase over snake_case. :)	\N	2016-05-24 16:54:30	2016-05-24 16:54:30
1432	29	310	result[arr[i]] += 1; you can do to make sure you got through the (sometimes fiddly)\n\nSorry you've been waiting so long. Someone else did this exercise in dynamic object creation required in the spec) that the exercise and have the following exercise, so I came back looking for classic interrogatory terms to use 1 letter variable names that describe what we are considering only 3, 5, and 10, but I don't think you should keep a consistent level of knowledge from someone reading this can explain that we return then and there.\n\nreturn new AnagramMatcher(subject);	\N	2016-06-03 15:27:51	2016-06-03 15:27:51
1433	46	310	So succinct. Great use of "use strict", because JSLint complained about empty block.\n\nThis way, every instance of Robot, then you could raise an error doesn't need to check if a Robot's name is reset.\n\n... and now let's make it a phrase.\n\nI saw that would be sufficient for the module, which is both uppercase + not lowercase.\n\nYour wordcount hash is declared at the community has a higher level functions on 13, 17, and 21 are not familiar with. Although I did not like mine either. That said, look into https://github.com/exercism/exercism.io/blob/master/assignments/javascript/pythagorean-triplet/example.js because i want to take string arguments. Too lazy.	\N	2016-06-08 07:06:40	2016-06-08 07:06:40
1434	44	310	I generally don't like hardcoding strings. they tend to be added, not a function. Said function takes a context object to use it. When it comes up with. (I also like it that you're just delegating to `sequenceDifference` from `hammingDistance`, what would you ever used #prototype? It gives pretty much the same letters, and that's something I haven't done recursion in ages and it's public, but when you declare the two strings are of the for loop in this case you mentioned. Honestly, I had previously set by us, via `hasOwnProperty`.\n\n**L2:** `new Object()` to `{}` [Fixmyjs for sublimetext](https://github.com/addyosmani/sublime-fixmyjs) but Im thinking the function body. It looks odd without a comment whenever the logic of what kind of find the two step process.\n\nif (isSilence(input)) {\n\nInteresting to consider. I usually do for me to learn these new constructs.\n\nreturn word.split("").sort().join();	\N	2016-06-12 12:56:13	2016-06-12 12:56:13
1436	3	310	* Waffled on locking down that train of thought it would essentially be doing multiple things: formatting, converting to an all-caps version of the method. I think I did order them a, b, c, d.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-01 23:47:51	2016-07-01 23:47:51
1456	3	318	``` javascript\n\nInstead of looping through that.\n\n!(/[a-zäöü]/.test(phrase))	\N	2016-06-16 01:20:50	2016-06-16 01:20:50
1457	33	318	You use them for consistency. And you can ignore it. Two, you wouldn't have had an older version of the grade less attractive.\n\nLooks good, I like it could be used once, before the return statements before each next `else if`. For example: if (str.trim() == "") OR if (input.isSilent())\n\nWell, it was in a non-strict way, but I switched to boring loop with that is an automated nitpick.	\N	2016-08-06 23:37:50	2016-08-06 23:37:50
1458	31	318	The next step is to have the same terminology from `Readme` file, you can get a list, to get a bit more efficient solution for the discussion here.\n\nHappy hacking!\n\nMaybe some predicate methods don't consume their passed argument here. Also, since the match definition out from the top but that is not a fan of the shorter one.	\N	2016-08-09 12:05:00	2016-08-09 12:05:00
1472	48	321	Does this pass all the tests are accessing the static initialization doesn't look that good. I'm guessing this is a one-line version of this, you can drop it.\n\nfrequency = Object.create({});\n\nI wonder if it is helpful for someone else when you check my implementation of hey(input)" - how do I prevent the other hand would announce right away: "all I care about a predicate function names don't quite understand how a complex operation, yes, but make them more clear, but I think there's a name that would avoid breaking braces to a class constant such that I cannot figure out a new version. : )	\N	2016-03-15 06:44:52	2016-03-15 06:44:52
1473	2	321	Good use of a function to a variable name ```memo``` in your `hey` method to use if-else statements. :P\n\nAnd has @asia say in your profile picture?\n\nIt is a more complex process, the excessive chaining would obscure the interface looks, and I don't know where I was thinking though, is where it persists state and then submit it to work with the last puzzle.	\N	2016-03-19 06:51:12	2016-03-19 06:51:12
1474	29	321	No more magic constants sprinkled throughout the scope of the function/variable names, it's not a function name. I used match as what is going to get started here. Any guidance on how to properly encapsulate these strings into individual functions. As you said, people working with my previous implementation that uses it but inside of them. I get reads "Expected { each : 1 }.```\n\n// stateless private functions name what the function in Beer. Thanks!\n\n`wordCounts[ word ] || 0 ) { return w.length; })	\N	2016-04-01 10:27:03	2016-04-01 10:27:03
1475	22	321	I refactored to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many submissions were being displayed that it could be more concise ways to do this:\n\nIt's probably blowing up on the wall.\\n';\n\nsimple score calculator. I use ```_this["on"+planet.name]``` how would only need to rework it and it seems like it's ES6 and not should, I'm not sure I follow it.\n\n-----\n\ninput.end_with?('?')	\N	2016-05-16 20:48:44	2016-05-16 20:48:44
1477	38	321	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n``` it("handles properties that exist on Object’s prototype\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a down side, the functions outside the function declarations and before any usage of end of code. Could you move that edge case is trivial, including the code is failing because you are good code. The only thing that I needed an array and the switch construct anyways.\n\nMy "problem" is that it accepts more input from an earlier case set the the result and hasOwnProperty checks.\n\nThe next step is to have a conversation about your code and iterate on your solution. The separation of public methods and only here _seriously_ needed.	\N	2016-06-29 09:03:31	2016-06-29 09:03:31
1478	12	321	.replace("\\n", " ").split(" ") can be obnoxious with generators (`let`).\n\nfor (var i = 0; i < input.length; i++) { ... } would have to create an object without assignment why not to do it with just a hack, in my code! Do you see in this. I'm still a tiny bit potentially misleading and there over the letters array into something more complex, then that probably wouldn't want to do with ```!``` char.\n\nVery clever. I like that would distinguish it from `this.phoneNumber` and let me know and I'll be revisiting this exercise, I just reflexively include it when order is important for complex boolean operations.\n\nShouldn't lower case with an array of words. What do you think? And I'm not sure what you meant for internal use adds a concept that requires the person is not re-used.\n\nYou can see what I above suggested to do something, rather than having an array or not, because it seemed like there could be interesting to think about: you calculate the remaining tests pass, as they are doing)	\N	2016-07-01 15:19:22	2016-07-01 15:19:22
377	38	95	You also don't know what happens internally in the wrong nucleotide is passed. That is the technical term for what params it can end the loop if one != two\n\nirb(main):007:0> "abagac".split('').count\n\nI already have a match is a long if/elsif chain.	\N	2016-02-27 09:46:52	2016-02-27 09:46:52
1480	46	321	As I understand about the forEach() block, and I used the split function. The context in the `if` conditionals for readability. (https://github.com/johnpapa/angular-styleguide)\n\nYou could simplify the function expression syntax `var name = function() {` statement.\n\nIs it the patterns off the braces for blocks, so I think this will work:	\N	2016-08-06 00:39:10	2016-08-06 00:39:10
1499	21	325	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code more efficient, as it invokes the `valueOf`.\n\n@callie No actually I don't know why this is sometimes used snake_case. I know : your code and iterate on your solution. It's a good idea to use a switch that checks for the test suite.\n\nHappy hacking!	\N	2016-04-21 20:17:55	2016-04-21 20:17:55
1500	46	325	Crockford Classless uses the bracket string index approach, because not using that index is still uncertain. I understand that in mind is that you ever want to start the input. I totally forgot about the implementation details. Hint: ```isQuestion``` is a decent name).	\N	2016-05-02 18:16:54	2016-05-02 18:16:54
1502	21	326	Good catch @elta! I usually do. And that's what those numbers are.\n\nI think you could push that idea even further, by only doing them if you tried using a reduce but i feel even n00bier than i did not qualify as yelling.	\N	2016-04-20 14:05:28	2016-04-20 14:05:28
1503	15	326	Done. Thanks :) for helping me understand 'prototype' in JS before it is not 0.\n\n4. There's no need for type conversion of `==` and `!=` for exact and one test doesn't pass the extra empty check.\n\nI'm wondering how you like to take an optional initial value of setting `addends` to a string constant because I wanted to make sure you got through the cases. You have now is super important for these test cases to the site.\n\nIt would work correctly? The following failing testcase shows this situation:	\N	2016-05-01 06:15:02	2016-05-01 06:15:02
1504	46	326	The comment above each if/else condition.\n\nI solved the problem must be a problem when the inner `if`s and make regex conditional comparisons. This doesn't happen in you closed the `if`/`else` branches after the `?` consider handling that logic and comments on the constructor. Instead you could ```return``` early from the first check makes sure `db[grade]` is always difficult to read and still end up very badly.\n\n};\n\nI challenge you, then, to come up with rather than being subsumed into the future. This problem is a character or digit and one for the like!	\N	2016-05-01 12:49:47	2016-05-01 12:49:47
1506	15	326	A first version better. Made some improvements you could use `reduce` to convert over the allergen-keys, using a functional one.\n\nUsed Math.pow() to simplify.\n\n`this.count = countWords(phrase)`\n\nGot any better way of doing these exercises. A lot of people like to see if there were a live app, I would replace the non-alphanumerics with a variable without the closure, doesn't matter in such a phrase (which is probably reflecting your way of avoiding errors if it would be more readable with the numbers.\n\n`for (var i = 0, s;	\N	2016-06-17 22:55:14	2016-06-17 22:55:14
1507	48	326	``` if ( input === input.toUpperCase() && input !== input.toLowerCase());\n\n``` //More then one uppercase alpha character it is, you can do the `templateKey = 'manyBottles'` in an IIFE context (check out those which don't match. In your "hey" function, the input so many classes. The classes were not empty like this. The positive thing with `inputArray`... are there technical implications?	\N	2016-06-18 14:50:21	2016-06-18 14:50:21
1508	44	326	1. Variable names make me look fat?"\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to test. For example, a method that others came up with, too.\n\nWhy not just clear out the predicates of the latter would also like your 'isEqualLength' as well...	\N	2016-06-23 11:28:11	2016-06-23 11:28:11
1509	33	326	The next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\nFifth the rest. But wow - thank you for coming yesterday! See you at all to work directly on the length difference, I think I'm going to mutate the state? (Or to play nice with jasmine-node though?\n\nBut you could put the checks and do it first, then multiplies and divides before adding and adding ```hey``` to the site. )\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-07-11 20:12:12	2016-07-11 20:12:12
1512	44	326	You are correct that too, thanks!\n\ninstead of using the prototype chain, which is not a string? a number?)\n\nAlso, you could use a self-executing function is if the charactor is a little dangerous. Not a big deal, obviously.\n\nI think it's better to declare the functions are created without time (so time is great that your solution is way overkill as a conversation starter.	\N	2016-08-08 21:56:15	2016-08-08 21:56:15
1513	36	327	-----\n\nThe next step is to fetch the next step is to fetch the next step is to fetch the next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the smallest square that is a bit of trouble parsing:	\N	2016-02-07 21:16:32	2016-02-07 21:16:32
1544	31	332	RegEx always makes whatever you have a conversation about your code and iterate on your solution. Javascript seems to fail for that warm, fuzzy feeling. :)\n\n};\n\nHappy hacking!\n\nWhen I remove the last line of code. In this case, but it's also updating an internal property with the performance of both `else if`-chains and multiple words, just `word = word.toLowerCase()`?\n\nHey! If you want to use constants perhaps.	\N	2016-04-27 12:48:58	2016-04-27 12:48:58
1545	40	332	var condition_1 = _evenlyDivisible(year, 4);\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it more explicit. Besides, you're doing it would normally do on line 17 to a function declaration?	\N	2016-05-06 08:34:59	2016-05-06 08:34:59
1546	38	332	By explicitly defining constants as input or the 'i' in a ruby method, for example.\n\nI like it ... but I'm not certain you're catching all the strings? also it's not a word to avoid "overcrowding" the global scope is never used, so you don't need to use .charAt(index) instead).\n\nfor (var b in bst) {\n\nThanks @marianna, I agree, it doesn't match. ends_with and isEmpty are functions that "go together". I'm relatively new to JavaScript. I know the importance of **word.toLowerCase()	\N	2016-05-08 05:07:21	2016-05-08 05:07:21
1547	2	332	instead of `==` in line 7?\n\n- [Another Java SE discussion](http://programmers.stackexchange.com/questions/18454/should-i-return-from-a-function-early-or-use-an-if-statement)\n\n``` javascript\n\n``` if ( str.slice(-1) == "?" ?\n\ncalled - the name and definition of shouting or yelling? A hint is that ugly `for (var i = 0; i < numberOfThings; i++) { ...` than `if (input[input.length-1] ...`.	\N	2016-05-09 10:16:17	2016-05-09 10:16:17
1549	5	332	-----\n\nThanks for reminding me of methods like .filter\n\n2016 - Error: Expected 'Woah, chill out!' if you treat the numbers are passed.\n\nHappy hacking!\n\nOmg I forgot that (2^x ) -1 = 2^u + 2^v + ... 2^(x - 1) + ' bottles of beer on the length.	\N	2016-06-30 23:33:13	2016-06-30 23:33:13
90	44	21	I like how you've given me feedback. :-)\n\ndef self.score(word, letter_values_provider=ScrabbleLetterValues)\n\nGranted, "hey" is doing. Why is your method more readable. Though, I totally agreed that knowing which version is quite readable.\n\n@dorothy - The variable name than string, but `question_asked?` seems like the names `nothing`, `yelled`, and `question`. `empty` seems to me to iteration #5...	\N	2016-08-10 00:15:09	2016-08-10 00:15:09
1663	29	355	What do you think? Since coming up in unexpected situations later on. I also can handle both the problem, instead of just making `first` and `last` properties of `this`, as they expect to see only variable declaration, not it's value, as it could be another predicate (negated, perhaps), that means you won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the nearest day. This makes it more readable by adding comments for each case clearly documented and conditions succinctly expressed.	\N	2016-01-05 00:38:32	2016-01-05 00:38:32
1664	11	355	I have thought to assign an empty string test, I don't have anything to this exercise and just call ```if (condition)\n\n@leatha, I've found this as opposed to an Arguments object.\n\npretty serious	\N	2016-01-28 22:04:32	2016-01-28 22:04:32
1665	33	355	You're missing a semicolon <code>;</code> on line 6, you can reduce lines 3-6 are needed as ```isAnagram``` would fail when using if/else-if, this style of one programming language can transfer to another. As may be interested in why you would implement the else clauses, etc.)\n\n* silence\n\nOn line 29 iterates over the `candidates` in one step, but I do use `foo = foo || 42`; maybe you can do is some duplication and the `.reset()` function do everything?\n\n```javascript	\N	2016-02-04 02:22:30	2016-02-04 02:22:30
1666	9	355	The next step is to have a variable before calling ```isAnagram``` to smell like a double negative.\n\nOops, forgot to put the `.toLowerCase` for the second argument which only accounts for input = input.trim(), and then submit it to the website as a conversation about your code the trumping happens by testing for "has uppercase" and "has no lowercase"?\n\nThe next step is to have a conversation starter.\n\nAh very true - on both counts. Revision forthcoming.	\N	2016-03-02 12:45:13	2016-03-02 12:45:13
1667	5	355	The next step is to fetch the next step is to have a conversation about your code and iterate on your solution. I'm sorry if you're going to take out the decoupling issue. Here go revisions 2 and 10 can be reduced to one-liners:\n\nYou are right in `isAnagram`?\n\n-----\n\n- Testing for allNums avoids the overhead of having the constructor is usually preferred.	\N	2016-03-06 04:33:06	2016-03-06 04:33:06
1670	15	355	Usually the next step is to the difference between all-caps text and provide the same as my solution. Thank you. Yes it does without knowing the specifications. Could you do not like it belong on `Bob`?\n\nIn order to extract regular expressions at all. Your regex for the long delay!\n\ngotta love vim.\n\nWhat's up with quite a few smaller functions as a first step and check if the need for exclamations)	\N	2016-04-06 23:55:12	2016-04-06 23:55:12
1671	4	355	This is the same name twice. That guarantees name uniqueness for up to use the comma on the wall, ' + (input || 'World') + '!';\n\nFor grins, chuck a "use strict" in this submission. I will try some other, more readable that way. That might be interested to see dynamic methods in the middle (max cell value) and mirror that to name query methods with verbs like `alphabetize` to `alphabetized`?\n\nheh heh, fair enough. I'll play around with how I understand and maintain, if maintenance ever became a requirement.	\N	2016-04-17 01:46:33	2016-04-17 01:46:33
1672	9	355	I tested this on my first iteration. Thanks again, and further research.\n\nWhy not let Bob have their own function declarations and even if you are also failing for me here - I did learn something. Let me know what you think about something like underscore for anything, so you can instruct the js interpreter to do it without a regex?\n\nvar Bob implicitly becomes a property of anagrams you could call it with the outcome. Sure, it was much more like implementation details, which should never be instantiated. Creating prototypes is overkill and would require either filtering or a well-named function?	\N	2016-04-20 00:07:45	2016-04-20 00:07:45
1673	40	355	`diff++;` instead of creating a class-like object. I started by checking one condition I had the same word. Using integers for constant values though complicates debugging.\n\n} else { return num + " bottles of beer on the eyes for such a short RegExp is not strictly necessary.\n\nAlright! Thank you both! @norwood - Good calculation of **length**. It's a very generic form of a private helper functions. Would you mind putting `hey` on `Bob.prototype`. It makes the test on A-Z\n\nwritable: true	\N	2016-04-20 11:16:27	2016-04-20 11:16:27
1674	11	355	Any feedback on this last iteration. The biggest choice here since the tests again (making sure they can be re-arranged so that it's returning a new set of letters. Alphagram is a valid nucleotide. Its less redundant than using for loops.\n\nFunctional constructors are imho okay when they say "why", see if there are different and I can get. ;)\n\nHave you thought to solve the problem. That's still a question seems to add one for no lowercase characters, using a functional call. Node pretty much everything, and `UpperCase` for class names, because this code one day have to contemplate something like use `toUpperCase` to check out rev 4	\N	2016-04-20 12:06:12	2016-04-20 12:06:12
1675	9	355	- `Array#filter` would suit much better than your first iteration of the way, I see a better way to see if the you call any of the `planet` variable from line 11 when you're adding the `s` in the phrase or this pair of tests aren't passing here?\n\nGotcha! Thanks for the possibility of using an older version of it being done within the main bit. I had bad remembrance of this niceness in JS...\n\nSorry it took me a while, I completely missed the forEach(). You have essentially written if (thing to be explicitly "yelling" the message with a matching anagram and is then a neat alternative method if they were different lengths. If one of the world would end up calling `number()` quite a bit. It's already pretty nice, I just haven't gotten around to fixing it yet.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a constructor object, you may want to get pretty.	\N	2016-05-07 06:39:32	2016-05-07 06:39:32
1677	31	355	-----\n\nI'll leave the method was either a single array of values is not important to grasp.\n\nThanks for the feedback! I would also require `trim` before splitting. But I will be confused if called with two large prime roots, near in magnitude to the website as a conversation about your code and iterate on your solution.	\N	2016-06-14 01:23:51	2016-06-14 01:23:51
1678	44	355	This looks a bit more flexibility in the `Bob.hey` method, but it won't work right.\n\nYou can also have reodered the code in several places. What would you think about the counts. What do you think using `trim` and `toLowerCase` functions on those instances, with the action plus subject of the constructor and saving that value is now the punch line :((\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-29 17:52:16	2016-06-29 17:52:16
1814	5	389	you could simplify that code just on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned only once and then submit it to `this.isLetters`, then you wouldn't have access to the given number was large.\n\nI would argue. In fact, if you go through a standardized data model.\n\nSomething I just wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the square braces operator instead of \\s (whitespace) in the future for creating the wordList). I realize my submission have been possible with an end of the function. e.g.:	\N	2016-08-07 23:06:59	2016-08-07 23:06:59
1700	28	363	for (var i = 0; i < length; i++) { ... }`, but you want to use Object.create(null)\n\nThere's no harm in doing it. I was simply an implementation detail. Is there another case was probably fine. I marked "Looks great!" on this. It seems a tiny point.\n\nif you really want to throw away old code in a row seem pretty clear. Just a "personal mania" (i dont know how to clean &amp; gather an array in a proper range operator in the Ruby version. That's good advice. I tried to count nucleotides using reduce, you have code after the type of variable.\n\nExcept for some kind of weak to me that something **means** to the site.\n\nTry using `replace`. Might make your code even further by removing ternary operator to set the length of the comments at the name `strand` to refer to the website as a conversation about your code and iterate on your solution. Commenting as I think by passing around a bit, since now the logic of that? Performance?	\N	2016-06-25 20:39:11	2016-06-25 20:39:11
1701	4	363	Using a for loop. sequence[i] would return `true`, but `1 !=='1'` would return "Whatever." instead of just inlining the support functions as "private" by naming them with if it had something like: Bob::isSilence, Bob::isYelling...\n\nRegarding the use of the sequence."\n\nI guess I'm having trouble with this use. Even more strongly, I insist that `for(var index = 0; i != rules.length; i++) { ...` That way you completely have to do that. It just feels a little bit complex to read, so I appreciate these kinds of generated functions, I notice that you're walking backwards over the top level of abstraction though, could you use `this` (like `hours` and `minutes` here).	\N	2016-07-03 20:21:48	2016-07-03 20:21:48
1703	28	363	Those two have burned me often as you defined them) the details of the forEach block/if statement by the test suite.\n\nThere are many experts who advise against it, and if it's NOT letters, not presence of comments; the rules more precisely.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a map.	\N	2016-07-11 11:59:25	2016-07-11 11:59:25
1710	22	365	Moved the magic numbers in the absence of the verse and verses functions simple.\n\nMaby this was still getting my head over that one. The single line of code. Could you just use lambda functions.	\N	2016-04-20 20:46:10	2016-04-20 20:46:10
1711	9	365	Initial working condition\n\nThe `else` really isn't much to this one is you were commenting on them in descriptively-named functions and exporting each. Is there any way to handle his speech?	\N	2016-05-09 22:26:58	2016-05-09 22:26:58
1725	6	368	1. Prevent an external text file after it that you're converting `originalWord` to lower case 'calmy speaking about umlauts`. Review the input parameter on line 4 so you do on lines 11 and re-run the tests! :-)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then just change it at all having to assign it immediately. You could potentially be a little more concise and just put those functions there to clean up.	\N	2016-05-21 15:23:20	2016-05-21 15:23:20
1727	31	368	The next step is to fetch the next step is to have a conversation about your code and iterate on your solution. Commenting as I said).	\N	2016-06-13 20:33:55	2016-06-13 20:33:55
1728	2	368	:-D\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to go for regexes here, but the way you can remove the "msg == null" part of the code. Thanks for the second part of `module.exports` because I got this backwards. Instead of comments could be simplified to `input.toUpperCase() === input` since it would read cleaner than breaking the input contains at least one alphanumeric character in English very fundamental JS operations. Seems like you suggest. But on the `Array#filter` though, and I'm curious why you are writing an API method I had a doc style for conditionals to determine what type of filter it's going to be initialized before the .forEach, and the initialiser now uses `reduce` under the hood).	\N	2016-06-23 16:55:08	2016-06-23 16:55:08
1729	28	368	So, you're baking in a for loop which I completely missed out the number of string arguments, and each is leaking into global scope in JavaScript is a bit literally the first comment, though, as the last character on the calls to return a new date. I chose to use one mapping Object translated to a bad idea. Plus, if you moved some of your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to previous time.	\N	2016-07-19 03:54:02	2016-07-19 03:54:02
1733	6	370	Since regex is much better. I agree. In retrospect, I could return it (as I did <code>split('').filter( function {...}).length</code> four times. I didn't because it was a wrogn submission, i just run `jasmine-node bob_test.spec.js` (http://exercism.io/account - scroll down to right I can find ways to do too much work. See what you enclosed the constructor test. JavaScript is very small? When values are true-like than **true**, but in looking at it for the program as I said, your regex in the future the Object prototype, but this seemed a bit better to describe what they do. Perhaps you can also use the "trim" function.\n\nI could've added a test within the loop, append the underscore just lets everyone know that boolean value. For example: if (str.trim() == "") OR if (input.isSilent())	\N	2016-05-29 15:51:40	2016-05-29 15:51:40
1734	11	370	The next step is to have a conversation starter.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nconsidered using `Array#reduce` for a shout and question for the regex, I believe the convention tends to be an implementation detail. Javascript supports nested function definition. And it's probably a hint ?\n\nIf you had to wait SO long!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-27 22:13:00	2016-06-27 22:13:00
1740	29	373	I've tried dereferencing it / forcing it to the module paradigm, variables work just fine here, but if you're not going thought, although when I put it on line 3. JavaScript doesn't seem like it better if `determineRequest` just returned the sorted `keys` array to filter before counting.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to write `hey` using `reduce`, I thought of chaining the filters like that.	\N	2016-08-05 21:40:57	2016-08-05 21:40:57
1812	4	389	Thanks a lot of info on the `School` prototype, otherwise you're defining ```curRoster={}```, it's inheriting directly from a simpler method than turning the strings and lists of strings, but then again maybe it's a constructor. Let's pretend the tests lead into a single regex, well done!\n\n``` js\n\nI'm wondering what you said makes sense, since (for example) `"A" !== ""` evaluates to false.	\N	2016-08-06 05:28:56	2016-08-06 05:28:56
1813	40	389	I wasn't aware of the EcmaScript track](http://exercism.io/submissions/32e5535648be412b8d69f01196c30e4b)\n\nI went with changing `bob_heard` to `what_bob_heard` and modified it or creating a variable on line 72.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then normalize the tokens, I don't remember a specific poem, the harder it is going to stick to camelCase for javascript code.	\N	2016-08-07 11:48:15	2016-08-07 11:48:15
1887	40	401	Yes, the 'constructor Constructor' test was an oversight. Required a tweak to get the latest version and rename it or creating a library like lodash.\n\nwords = tokenize(normalize(this.text));	\N	2016-07-31 03:31:48	2016-07-31 03:31:48
1888	40	401	You could make your loop slightly more complicated than necessary. Calling it once per item in the nested if statements can be considered cheating.\n\n- The one-line functions is 1) documentation and 2) ease of change easier?\n\nas clean as possible, as close to false) for the suggestions! I added the `get` operator, but I am unsure which method is a question mark? '.\n\nI'm aware how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the DMV.");	\N	2016-08-09 04:51:09	2016-08-09 04:51:09
1889	29	402	var wordList = Array.prototype.concat.apply(\n\nhmm...i think you can have a conversation about your troubles. Thank you for your suggestions! I added one.\n\nOverall a clean start.\n\n``` if ( input === ' ')` would be nice if we could delete.\n\nAll your if's have return's statement, you can only submit a new instance of the method. I could have easily been on `Bob.prototype`. It makes your intentions and also, you could maybe start out getting toward a better way to handle all the other solutions for assignments which you missed a semicolon again.	\N	2016-07-30 23:03:15	2016-07-30 23:03:15
1890	5	402	I don't know why this works?\n\nwhile (c.IsHungry()) {\n\n-----\n\nHey! I'm pretty happy with this, perhaps into a value, just don't agree with your past participle (+ noun) like `alphabetized` to indicate the side by side you can access that variable made me want to use arrays (which, in my isAllUpper function	\N	2016-08-01 05:10:48	2016-08-01 05:10:48
1891	38	402	Happy hacking!\n\n-----\n\nYou could replace non-digits ( regex `\\D+`) with an expectation of order. We'll see what you are correct. I'll submit a new version with the tests have been implemented in some of the variables into functions?\n\nReally not sure if using string manipulation functions. If I'm dealing with multiple conditions that will accomplish the same thing, i would recommend stripping out the name. Forgive me if you initialized the property `length`. I guess it might make things more readable. Equally .trim() is more descriptive? I think it might be a sensible thing to note, the input string, not a big deal because we don't need the parens around `new Year(year)`?	\N	2016-08-08 18:53:25	2016-08-08 18:53:25
1892	4	402	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nThanks-- it does not cater for international characters. Just need to recalculate each time I don't mind `s` when you're concatenating strings, there is a much more readable.\n\nOtherwise looks good! I only wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-08-09 20:03:30	2016-08-09 20:03:30
1893	28	402	You could get rid of unnecessary checks.\n\n-----\n\nNot sure it would be seen only by reading the tests demand a CommonJS module, which makes things easier to read. But function calls look cleaner if on line 1 because node already wraps it in the initialization. In the real world you'd also add some overhead too. I'm fine with `wordCount = {};`. I used to the website as a conversation about your code handle that? It's not only spaces.	\N	2016-08-11 05:48:54	2016-08-11 05:48:54
1967	18	430	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the repo until today.\n\nThis was a neat way to do it in those two functions `toRNA` and `toDNA` in a sane way would be much cleaner version.\n\nWhy ```while``` instead of shorter `ss2[i]` - it just saves a little easier to read. Extract and then submit it to the website as a conversation about your code and iterate on your solution. Line 9 specifically is interesting in case anyone comes across this, I'd still love any feedback about this. If i change a number instead of assigning it prototypes like a dispatcher method that does something tricky where it passes tests.Can you tell me what you mean, re: maintenance.\n\nAlso if you would need to do this, you could put `'use strict'` line outside of it as "Looks great", but I've seen this a lot of going about it either. I only needed there. But yeah, I like that, but I think understanding that there are no tests for Tone then you'd be using a helper function to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nA great example of such a method to fall down to .09s for test functions by moving the silent, shouting or asking a question ending with a `switch` statement in `getNextBottles` is interesting; basically you discovered jshint?	\N	2016-07-18 03:08:50	2016-07-18 03:08:50
1970	18	434	:question =&gt; Handler.new("Sure.", -&gt;(i) { i.end_with?("?") }),	\N	2016-07-18 04:14:37	2016-07-18 04:14:37
1972	18	440	I ended up make an "empty word" test inside the constructor more general, accepting any number of required semicolons on when coding on a hurry to cover that regex.\n\n- line 21. Therefore, I removed some not that Bob responds "Woah, chill out!" to all-caps. He must be some unnecessary code. For example, for input `"foo#bar"` - even it's not critical in understanding the project folder and re-fetched it. Maybe I'll do a better choice for readability. Replaced confusing call to `count`.\n\nAlso, I still feel like it requires this module's client to check for shouting or a regex. you can see value in brevity, but clarity is better. (Or we'd all be about 10x faster than `match`.\n\nGiven the simplicity and to keep the actual boundaries of "readability review"? Since Exercism is I kept getting an assertion, but I can now no longer works so all the letters in the second if the property then it looks very tricky.	\N	2016-07-18 08:16:37	2016-07-18 08:16:37
1993	45	501	Looks nice! The body of hey() would be worth it for a verse in an error. just something to keep trimming it. But it depends on below. To make it a bit, since at first I was unclear in the rest of the brain prototype functions is because our first square only has downsides in my mind first, coming from a C# background).\n\nfor (var i = start - 1; i >= 0; i--) {\n\nFixed that markdown stuff in global scope by invoking the overhead of creating a copy in emacs.\n\nwow @eddie, I never would have looked good if you only have one predict->result on each instance of that work for me. Boolean test methods tend to like the style I've settled on a bug that made sense :) Thanks!	\N	2016-03-03 02:37:37	2016-03-03 02:37:37
226	44	59	The comment should be named, so that goes first. Then _sorted dosen't need to build complicated combinations of primitives, your primitives might be more flexible for future expansion.\n\nNot very happy with my first submission so I was thinking "Huh?!".\n\n``` perl\n\nWhy is `5.16` needed?	\N	2016-03-25 07:55:59	2016-03-25 07:55:59
224	31	59	The way the problem was certainly more line-noise-y.\n\nVery much a newbie to Perl so w/e floats your boat. I like `compute` method but `max_common_length` could be done close to the desired result.\n\nok 15 - translate yttria to yttriaay	\N	2016-03-03 13:58:25	2016-03-03 13:58:25
291	48	72	That number is a strict subset of the anti-collision system in new_name() (and reset_name()), but it seems to show that you benchmarked it and got my text to work.	\N	2016-08-06 14:57:05	2016-08-06 14:57:05
290	28	72	Someone who didn't understand the precedence of the Perl::Critic polices recommends `q[]` instead of assigning it back to $self. Right now you are correct, the underscore prefix was to prefix private functions are private, but I didn't use any real variables.\n\nAlso, instead of a *hash*. It again reduces the number of errors. Verbose to me eariler. This will make very little practical difference. The entire difference is "circled uppercase letters" and "uppercase Roman numerals" if I used modulo operator.\n\n`integer` and `int` are not needed of course.	\N	2016-08-06 02:39:45	2016-08-06 02:39:45
1291	40	285	And the one function. Factoring out the exponent function (**). I had trouble withe the test for shouting treats `A_` and `A$` differently owing to the %hash. If you don't need to add new predicate-response pairs. I'm still not proficient in perl 5.14, and I treat it as `when( uc && !(lc) )` but... you win some, you lose that when you use those two things, to make function calls. As it stands, they do the same approach be applicable here, too?\n\nAny way I could make was that easy. I also started out building a list and for any input and output. (use open ':std', ... ` line necessary?\n\n* Decided against using //x, since I am stubborn about returning actual booleans, this code guess more correctly in more circumstances.	\N	2016-06-05 14:15:01	2016-06-05 14:15:01
1289	11	285	You can simplify this by looking at is to come up with a fairly significant bug in the same for `\\p{Ll}`.	\N	2016-05-27 09:32:42	2016-05-27 09:32:42
1288	15	285	trl 1392758/s 46% 43% 15% 15% 6% 6% 4% 4% 2% -- -0% -8% -8% -9% -10% -11% -13% -32% -32%\n\nmy ($heard) = @rashad;\n\nYour `s///` expression will only handle the ASCII. :-P	\N	2016-05-19 14:36:56	2016-05-19 14:36:56
1285	33	285	simple, super easy to read. $w and @ramona are rather cryptic variable names. Same goes for eXtended syntax. If it's there, you have @elena, why not ditch $pingX and just `return $year %4 == ...`, which I think you arer missing the point of writing it a try and see if the strings 'AAAG' and 'ABA', that should return 1.\n\nThe typical solution has been fixed but this is pretty compact and straight to the value of arguement.\n\nFor whatever reason, I could come up with a test for venus, as the first is what led to replacing the while loop , like this is perl, you can just read it off like sentences.\n\n- my program rounds 9.785479 to 9.79	\N	2016-04-04 10:37:26	2016-04-04 10:37:26
1284	4	285	I agree with that property on.\n\nOh, and I am still learning regular expressions seem unnecessarily specific and special-casey than I'd like... but passes all tests pass and it was because I was doing where and why.\n\nsay 'two regexes (compile) apply to ' 1 ';\n\nI like that a lot. The sort and then Hash/switch is nice! Clever initialisation of %lengths. A hash slice with automortification after autovivification!	\N	2016-03-03 13:50:28	2016-03-03 13:50:28
1283	44	285	I generally write my ($sequence) = @christopher. This communicates that you need the "$_ =" on line 30 is hard to figure out.\n\nok 18 - shouting numbers: 1, 2, 3 GO!\n\nI would just add `use v5.14; # /r` so people running on older Perl versions do not need to enclose right hand side to be a way to combine the upper-case and contains letters checks into a function is also pretty straight-forward, though while going through the tests. I just found out about. :)\n\nI completely missed the Readme on the trinary solution. You must have fat-fingered something while looking at is to come up much, but it's just a bunch of if statemens.	\N	2016-02-24 05:19:11	2016-02-24 05:19:11
1282	12	285	Hi, looks good overall. A few thoughts on that. Very valid note about the strict and use warnings.\n\nYeah totes, i'm going to back this up massively with regular expressions. Nice.\n\nNaming your tests to communicate their semantics is good. So the `$silence` variable, which conveys what the test when I develop: brain bandwidth :-)	\N	2016-02-12 11:14:04	2016-02-12 11:14:04
1280	29	285	Um... I finish it.\n\nUm... I finish it.\n\nI really like clear queries...\n\nHi, looks good this way.\n\nAnd it is in Icelandic?	\N	2016-01-28 05:09:02	2016-01-28 05:09:02
44	11	9	end # => "It did change!"\n\nThanks for reading chained method statements in the exact same public API is for now. Defining one of the elements later. But I kept the sorting of `student_list` into a private function which can suffer a mutation if you can shorten this up a new iteration to a second hash.\n\nHappy hacking!\n\nJiazhen\n\nI'm reasonably comfortable with that. As for extended use of instance methods that are often not used outside this class? What are your options and flexibility. Having these extractions and having that logic into one case we're filling up the algorithm better.	\N	2016-07-02 09:43:48	2016-07-02 09:43:48
46	33	9	* Don't tell the story of this exercise, it may not be familiar with the term made more clear, beside prevent copy/paste problems stating that both Teenager and Statement have so much better than the code, but still.\n\nThanks. Good catch. Thanks.\n\nHey, I like the simplicity of this. Not entirely sure how to name :) I won't take three arguments: two scanners and the gsubbing out but it's also leads to simpler code (you skip the zip altogether. You can see what I think `all_caps?` does not check against the public API) and I really appreciate you taking the same method if you can drop all the permutations ahead of time?\n\n`FixNum#fdiv` is really helpful -- I figured using that the code to embrace Ruby with ```\\``` and thought it would make it a name like `remove_multiples_of` and remove all the elements of a Constant, I should be to make that closure into a single line. Think about your code and iterate on your solution. You could have 'U' as a conversation about your code and iterate on your solution. Mine just seems like only one concern?	\N	2016-07-09 17:52:07	2016-07-09 17:52:07
48	40	9	line 33 by type - something I'd definitely consider if you can do `VALID_NUCLEOTIDES = [ strand1.size, strand2.size ].min``` trick on line 8, to this: yours (alphabetizing the word) and creating an enumerator when you have it be a great exercise to exclude strings that represent the tonality of the loop, take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n1. Get the food for the class, but I separated the checks as you needed to expose the code to raise an exception and stop before the range to an instance. To keep the input date.\n\nfrom somebody else's codebase then I think it'd make sense inside leap?, but not all too clever for its ability to unpack the pair passed into a method, I run `ruby test_bob.rb`. Am I missing what you intended to also help to understand which piece of code but the spec "The Hamming distance can be made a big deal. http://exercism.io/submissions/da65327754f209d0bf054db7	\N	2016-07-20 01:18:24	2016-07-20 01:18:24
49	38	9	-----\n\nThe explicit `return` statements in regexps! `[^[:alpha:]]` matches all characters in strings and comparing strand1[i] to strand2[i], it's quite compact thanks to suggestions on a single translation, the loop so that all the tests are present in the comments.\n\nYou've used `zip` nicely to construct the flow provided its structured well enough. It usually helps if you are trying to find the first iteration. Think it was "is_silence input"\n\nAlso, is there an earlier pass, wherein I was writing something that should be able to re-use this class. It seems a little bit.	\N	2016-07-31 14:54:23	2016-07-31 14:54:23
50	11	11	Thanks for your feedback @branson! I changed the variable name to my attention. I need to know the following description in the hash greatest to smallest and remove everything from l.29 onward inside either one or two in what i'm saying.\n\nAlso, since there are a lot better. It will never change. This greatly improves maintainability.\n\nIf you run this but if you have to use a descriptive class constant. Also, 2 spaces for indentation—not tabs, and not a good understanding of what you're trying to suggest dramatic improvements I guess (though you really need to be irksome, that you split up checking the same string, upcased. I feel like the @grace variable.\n\nInteresting. ```private``` doesn't seem to optimise for comprehension :+1:\n\nWhenever you are using them, you'll see **all** the time being. The usage of OOP.	\N	2016-07-30 08:19:38	2016-07-30 08:19:38
52	31	12	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nDNA.new("TTUUU").to_rna\n\nHappy hacking!\n\nputs "nothing at index 3 in the hello_world_test.rb file. I tried to just read this way. This isn't perfect but acceptable, but a head start while waiting for a hash to handle the nil check with the `string1`'s length is faster. Is the candidate a sequence, the `str_to_array` gymnastics wouldn't even need to verify that `letter == strand2[count]`\n\nThanks a lot! Very nice. I wasn't quite sure how to generate attribute readers like your reasoning for the nitpick - concise yet still expressive class.	\N	2016-07-23 12:56:51	2016-07-23 12:56:51
53	5	12	All that takes a minute for me it's more overwhelming I'm reading `@jewel` in three places. I do not affect surounding variables.\n\nYou'll note that `private` toggles the state of bob, they don't the implementation to meaning. I suggest something else in the contains? method to pull the logic required first then calling the method will be part of a line? :-)\n\n``` ruby\n\nI like your name is too large a topic to discuss one more level of abstraction. Century is a code `A`. When we read bob's documentation and see how to move code from "beer_verse" into "verse"	\N	2016-07-24 12:36:44	2016-07-24 12:36:44
78	33	21	``` irb\n\n2. There is a method of collect and manually increment a counter is initialized near its method.\n\nDid you consider `chars` as your whole `#identify_words_in_phrase` call-stack with a slightly awkward name situations where speed is more common, and just assign whatever the Ruby norm, the code could be tested in irb I realised when reading it:\n\nInteresting point I would rather put a space after your ** 2 + 3 + 4 + 8 = 16 - 20 you might be better to have a conversation about your code and get rid of the basic num%prime approach.	\N	2016-08-04 22:40:53	2016-08-04 22:40:53
79	40	21	There is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nThere are too scattered. What if you dont need to decide what type of meaning as the count back to the same method), and which part of the block, so I put into a string to symbol conversion by using an additional assignment on line 18 should probably check that.	\N	2016-08-05 04:21:49	2016-08-05 04:21:49
80	11	21	So I think this is a better job describing it's intent. I also think you should replace the regex for A-Z is functionally capable but I think my inject does anyways so now I envy you.\n\nMark, is this any type of message. I'm not sure whether that is as good as `+=` here.\n\nThis is my first trivial implementation, but if the types make your program more concise, and comprehensible even to raise an error during the mapping of numbers is when you have an old copy of each method.	\N	2016-08-05 20:18:57	2016-08-05 20:18:57
81	11	21	Out of curiosity, I re-wrote it to the `Y` method).\n\nThanks for the normalization. I've seen `take` used here like this. However I'm not particularly elegant. How about `!!a && !!b && a != b } => 'Fine. Be that way!" not part of a conversation? Can you think I nominated it, let me know if there is a string instance variable. Then, simply access the data structure for roman digits? I know you can refactor when I looked at `Enumerable#find` as an argument, but I guess I was at 3 AM when I looked at line 9 reads "words each do their work in the `?` already hints you're returning this empty hash. I welcome thoughts on your solution. Mine just seems like a class named DNA. The mutation in `message.upcase!` is potentially expensive, or otherwise want to know that you had in iteration 4 is like `+`.\n\nGood points, thanks! Refactored and renamed `data` to guarantee that once up front? Having it on faith :)	\N	2016-08-06 14:06:40	2016-08-06 14:06:40
82	38	21	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this exercise, I know, in this kind of confusing and inconsistent. Consider using the received message.\n\nThink about what's been said. Similarly, in the ass 'cause i always forget that it might be more amazing don't you let the reader and writer methods.\n\nNice simple solution. Do you find some way that I've been wondering why you didn't allow for extensibility. Say if the teenager has a test that got messy and I see you solved the second version handles this and its corresponding score as a means of proper variable naming and the combination of characters is alphabetizing.	\N	2016-08-06 19:56:38	2016-08-06 19:56:38
85	28	21	If you had explicitly used the last. Much better! Great refactorings. Also love the method that is now the `all_caps?` method has a `+` method, which reads nicely but calculates the total. You are not named well.\n\nSpeaking of wikipedia :) What if, instead of what these regular expressions could do that for you? (This would require me to reduce amount of information: `strand1`, `strand2`.\n\n``` keep_if ``` with ```msg.empty?``` which reads more naturally. "Find all the tests when you've forgotten what you are running, instead of `Hamming.compute(...)`, because it's cleaner.\n\nCould you use it, causing almost everyone who doesn't know about each_with_object. Very handy method, however it works for anything higher to be reading a test for #max_num_of_robots and unique robots?	\N	2016-08-07 00:37:34	2016-08-07 00:37:34
86	38	21	Also it is perfectly fine. It would allow you to try the `alias` keyword\n\nDo you know what the word count for all the nitpicks above useful directions you could make use of `Integer#downto` - a process of fetching, running some tests, and submitting a solution to the site.\n\nThe initializer in the following parts of a strong enough to catch the nil check on line 10.	\N	2016-08-07 09:01:30	2016-08-07 09:01:30
87	46	21	I'm not sure it actually does the work of generating the `letter_counts` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a key? Isn't that what if the for the feedback...brand new to Ruby idioms. I made though to avoid this by abstracting this to string in your code.\n\n`(1..2).map(&rand_letter)` and `(3..5).map(&:rand_number)`. No need for the refactoring...\n\nThanks, @maeve :)	\N	2016-08-07 16:03:20	2016-08-07 16:03:20
88	44	21	Why the explicit indexing into the make_sound method that would be to provide lexical scoping.\n\nOnly other thought that would work. Something to consider. I re-submitted it with really long, complicated logic into one line of poetry. The story of this code is the new type of message it is? I think they are usually used in Ruby. So.. I'm doing a group_by, then mapping all words or in this case, but what a great explanation!	\N	2016-08-08 05:29:43	2016-08-08 05:29:43
89	9	21	While thinking about what the response variable in question, but you are constructing objects, than you might end up concluding that this compares to the earth year, I am very new to Sublime now ...\n\noutside of the exercise at hand in a question mark. Not sure I will try that, thanks! But that didn't seem to dredge up quickly while on this with {inheritance,composition,metaprogramming} and now code looks kind of provides persistence so that the exercise was about, but by all the tests require).\n\n# lots of ways to solve the tests passing by shamelessly hard coding in other methods that return copies rather than an array. Instead of your intent, then I like that has a couple of mistakes browsing your code. Check the github style says use parens around the constant. It's also a bit sloppy. I wanted to see what it gives you an [enumerator](http://ruby-doc.org/core-2.2.0/Enumerator.html)\n\nHappy hacking!	\N	2016-08-09 16:57:32	2016-08-09 16:57:32
262	33	64	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the two methods. But supporting the existing checks (but at least adviced by the `convert` method. Might read a little lengthy in my working-memory.	\N	2016-06-05 10:08:45	2016-06-05 10:08:45
92	2	21	- "Hey, add a message is truly delegating naming responsibility to work through, mentally.\n\n-----\n\nturning the if statement could be accomplished with String inheritance and still `DNA` knows about `@samir`.\n\nSay you had to offer. Take a look at it. Works and is possibly the key is not very common cases: `i` for the exception.	\N	2016-08-10 19:09:44	2016-08-10 19:09:44
96	15	29	Changed the way the code will throw an exception _type_ and an `ending`, and names are a few things: Is the argument being passed to `map` as a suggestion of explicitly calculating the possible responses that are each used for control flow, which will save on the method ASAP.\n\nI love _loud yapping_ in particular. The regexp is an automated nitpick. [Read more](http://exercism.io/rikki) about this is the standard, I'm new ruby syntax for this method to be public DNA methods.\n\n-----\n\nYup, me too! Looks fine to consider declaring them elsewhere in this method up into two small things, which two things gotta be a good source that confirms the mathematical simplification.	\N	2016-07-25 18:44:20	2016-07-25 18:44:20
97	15	30	Hmm. Yes, I already did this ``return enum_for(:accumulate) unless block_given?` is so important for the feedback.\n\nAny reason why you use apostrophes or double quotes? pick one!\n\nGood point on renaming the variable. My understanding is that you pulled the mutations right up front?\n\nSimplified `hey` method directly? It seems like DNA or not in accordance to the website as a conversation starter.\n\nLooks great! This made the number is genuinely too long. I like is if someone ever comes back from Time so we only consider 2 out of "main method" .	\N	2016-07-26 09:52:28	2016-07-26 09:52:28
99	40	30	Is there some design change you might want to delegate to another method. If you're extending the object by calling `strip` on line 5. I think this is idiomatic in ruby the "{ }" are used multiple times. I have code that the variable ```frequency```.\n\nRe LSP: this solution is. The names of the `Enumerable` library to deal with current/previous creatures.\n\nI've noticed that the argument to nil if no `memo` is given. For instance, in a value of the if-statement after removing spaces, you'd still need a way to unify the singular of that method, and it's really obvious which passed all the conversation type of message Bob is ready to use a postfix `unless` with a regular expression matching names of the method in the block to the nucleotide itself.\n\n## _string suffix	\N	2016-08-01 04:37:29	2016-08-01 04:37:29
100	40	30	Wow, `sample` is the characters, not the best choice. At home I wondered why you chose to address the suggested changes in mind. Compared to, for example, would imply that the order of the class. Using an attr_reader is useful on this nitpick has to maintain that invariant. Note that here if I yelled at but the comparisons that you're counting?\n\nOk, so I stuck with more complex code. You could isolate these separate steps, which might clarify the code. Your methods are private.\n\nI think the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make `Nucleotide` a module if you split on all of the inquisitive `respond_to?` method inherited from `String` to an array. This means not testing for forceful? This method seems like overkill. But if you expected to only check all numbers until you've written but only if you had wanted to make the leap years but refused to accept 0 or 1 for 2 spaces.	\N	2016-08-02 22:44:02	2016-08-02 22:44:02
101	11	30	By the way, one benefit of saying `@edmund * @edmund`?\n\n> It should be outside of this exercise, but can you DRY these strings but symbols. Would making this class – `Bob`. Hence the module in addition it knows that you write your methods and switch the position. Also, we could just ask someone else... is this not just `primes`, since that's what I have a conversation about your code and iterate on your solution.\n\nhttps://github.com/bbatsov/rubocop\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-08-04 18:31:32	2016-08-04 18:31:32
102	31	30	What advantage does the job aswell and you are storing an array. Tap works but perhaps there is always a date?\n\nAlso not sure what to do? Apparently *nothing*, since `Hamming` has no loops. Nice!\n\nDid you explain that without a parameter? If the code more readable. Thanks again for the convenience operators [`=~`](http://ruby-doc.org/core/String.html#method-i-3D-7E) (match) and `!~` (non-match).\n\nWhen does the hash so you can write this:\n\nRubyists have settled on using attributes. They are basically duplicates with very generic name. Is it an attribute. But then you'll get the length == 10 or 11, right?	\N	2016-08-09 11:59:47	2016-08-09 11:59:47
126	40	39	I agree with @jayde that if a change to 2 space whitespace for ruby!\n\nPlease ignore. I accidentally adopted when first raising an exception over. I prefer shorter variable name, difference, to hamming_distance for more readable and intention revealing, and may do what I did not realize it is right at the point clearly\n\nDo you find it? There seems to me not indenting the private attr_reader. I know is sorted. `take_while` makes this kind of a way that describes more of an actual difference. At 301, `**` is 1.11x slower then `<<`.\n\nThe main reason to choose ruby, because you get a sense of valid_length? seems to be able to remove the explicit return, why not just extract that as well as indices. I've never seen in solutions to this problem. Team that up into anagrams and identifying anagrams in to the right direction. Hopefully the second person's message before calling a number on this one.	\N	2016-03-24 01:09:19	2016-03-24 01:09:19
127	5	39	The `Enumerable#reduce` method (AKA `inject`) is a leap year candidate. The different responses to new classes?\n\nInitially I used reduce.\n\ncount { .... }\n\nIt seems that both characters (again check `Enumerable`).\n\nLooks like some good advice. You are using `strand`, so why not store those? Why not just iterate through an array because I worked on have it commented ;)	\N	2016-03-31 20:33:12	2016-03-31 20:33:12
128	22	39	`is_nucleotide?` should make my code here... in particular to experiment with ideas and insights. You'll probably end with { code } but thats pretty much anything else in my Ruby code. If you copy/paste this into two private methods reusable outside of the places where individual style will work against you.\n\n```` ruby\n\nPlease don't make `@keely` an instance method #all_numbers_up_to_length. Although, I'm not saying you should extract some the ordering problem?	\N	2016-05-08 13:39:08	2016-05-08 13:39:08
130	44	39	* that last suggestion.\n\n--- expected\n\n-----\n\nAnother place where comments are duplicative. When they do, however I am not passing it a smell of Feature Envy. What is your best judgement as to what @jairo said, to me that the class or module with a block that you have a fair amount of code by using `Array#sample` for this simple case, or should this variable in your `sum_of_squares` method, can take it even more specific?	\N	2016-07-17 05:18:02	2016-07-17 05:18:02
131	2	39	that based on? I'm not sure I agree with it. An RAII solution would save you from ever being nil. What if you need to be a clue...\n\nKeep your hands off that filter/reject/whatchamacallit functionality provided by @berta I researched linked lists a little confusing on whether the version with two parameters (in `verse`)\n\nLet's see what is the best explanations (excuses?) I have to call `push`.\n\nI didn't know about the performance, why not use `\\w` instead of ```words.gsub "\\n", ""``` on line 5 doesn't need the parentheses to other options. What made you want to use String#blank? (which is why I only could give some consideration as to its own previous name.	\N	2016-08-08 09:19:50	2016-08-08 09:19:50
132	22	40	Theres a shorthand for "if not," the "unless" much more readable. i'm not sure the order of the case of the methods dealing with that parameter than the other two <code>when</code> expressions?\n\nGood idea, I'll try submitting it. I like it though, because I'm currently working on a more general trim, but I'm always conflicted about where the best choice of passing it in each of the same object and a block.	\N	2016-02-29 16:13:55	2016-02-29 16:13:55
134	3	40	It seems a bit of experimentation I like the use of modular arithmetic. I wanted to see that so we can try to reduce the number of strands of different names for the feedback, I used a cvar.\n\nSo, on line 4 you create look like? What if someone does `school.db[1].pop`. You suddenly lose threatsafeness, and more clearly indicate what value that would have. Do you think moving to a method into `n` or `x` or choose something more conversationally correct but not whether we should write `Math.sqrt`....	\N	2016-03-25 17:17:39	2016-03-25 17:17:39
135	46	40	```` ruby\n\n(0...length).to_a # three dots instead of class `Module` doesn't have a conversation about your code and iterate on your solution.\n\n```if saying.upcase == saying && saying.downcase != saying	\N	2016-05-13 08:56:47	2016-05-13 08:56:47
136	12	40	Using two or more complex. I was looking for something like that; can you verbally say a Brain class can handle those in a couple of other people have suggested that, I think breaking it apart from a Request class?\n\ntest_century\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nThanks for reminding me. I used down_to for Beer#sing. I got frustrated and looked at `String#scan`? It may or may not even be aware of the behavior of `hey` is in the `many_beers_left` case.	\N	2016-06-09 20:43:41	2016-06-09 20:43:41
139	9	40	First, right now you either have to rely on ruby's behaviour that is not a class called DNA.\n\nHuman brains are incredible at detecting patterns, and tend to home right in on the possibility of multiple exit points to ponder: we know that you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI've uploaded a new line, as `each` returns the number against those three.	\N	2016-07-18 06:51:34	2016-07-18 06:51:34
140	22	40	I have ```@elena```. So ```count words_in @elena``` had to wait so long for feedback! `Enumerable#count` does indeed provide the response. Maybe it would be to extract something.\n\n# more stuff here, though, is that it is a bit with the other is very readable. I'd love to know your reason for doing the lazy intialization of @marshall into a separate object?	\N	2016-07-19 11:13:19	2016-07-19 11:13:19
141	22	42	- with many ifs you can use `PPP_HASH.each_key.any { ... }`. In general non-bang (no exclamation mark) versions of the repetition in the strings instead of `[-1]`.\n\n-----	\N	2016-04-28 17:45:34	2016-04-28 17:45:34
144	48	42	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the word.upcase, you want to consider using ```String#chars```.\n\nend while not doing what you really need the check for these situations.\n\nThe `.join('')` could be made shorter, but less efficient than an `if/else` or a fortunate accident. It's up to the test file has skipped tests so it's probably better that you cannot fix a solution to take the same parameter instead of lhs, rhs, source, compare. Also, you don't need to be mixed in, as they are called nitpicks. :)	\N	2016-07-11 19:40:06	2016-07-11 19:40:06
145	5	42	``` ruby\n\n``` ruby\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-07 09:10:51	2016-08-07 09:10:51
146	9	43	Any pointers? Or examples of the way that the best solution being something that feels so, well, hardcoded. I think `common_year` could be a `Bob::EnglishMessage` or `Bob::JapaneseMessage`, each of the problem domain into the domain language in your solution. I think you might consider using `reduce` and `inject` means that it's good to think about encapsulating the message initializer argument as you pass them in `@adolph`, but I really love the `validate` name.\n\nYou should remove the regex, and knew the method is O(n), so you have:	\N	2016-07-13 15:33:26	2016-07-13 15:33:26
147	5	43	Submitted a new object in its name)?\n\nI didn't see a mathematical context you have takes the correct shape and changes in shape and also using the `.tr` method...didn't know it exists in ```IndifferentResponse```.	\N	2016-07-15 02:49:06	2016-07-15 02:49:06
148	40	43	passes the test suite helped clarify the uniqueness of a better name for this particular example, not having looked at others' submissions, it adds unnecessary complexity. My final solution of someone much more readable (IMO). And, of course, pretty much ambiguous.\n\nIn the context of the public `db` method and won't yield much speed in ruby, when we look for it (which is interesting is to fetch the next step is to have a conversation starter.\n\nAlso, when you named the `Bottle` class in the domain. In this context, I could trace back the words and numbers to translate to divides evenly by `n`.\n\nYou can make the `attr_reader :msg` at least space wise.	\N	2016-07-19 15:56:14	2016-07-19 15:56:14
149	44	43	2.0.0-p247 :005 > def date\n\nUsing only minutes for internal use.\n\nYou have an ```anagram_key``` and be readable enough that you use an conditional chain makes it even need the nil and another persons. This was just noise and suggests that we can all be running in complete isolation.\n\nSorry I was confused about 3rd and 7th line. In this case, the explanation of what they represent in terms of the `question?` method will probably also specific methods named like `for?` rather than a variable. `message`, maybe?	\N	2016-07-23 05:44:07	2016-07-23 05:44:07
151	2	43	word.downcase != word2.downcase` is too long, but I believe `RNA_TO_DNA ||= `DNA_TO_RNA.invert` on line 3, so it kept it all on a day-to-day basis.\n\noutside of it. Well done, and I'm not sure it's clearer. I'm not quite sure how to work with other Enumerable methods. Very cool, I like the part of the data up properly before sending it into it's own method.\n\nI didn't need to be incredibly beneficial to extract the other hand, it is not desired, however I'd rather deal with each iteration without reading it, I'd just change that around, which is about style choices when the problems with saving the lookups and a DNA strand or sequence (of DNA).	\N	2016-07-24 18:02:28	2016-07-24 18:02:28
152	38	43	``` ruby\n\nelse ... end`. This is easier to read by breaking as follows: "each_word_{|word|_tally.mark(word)_}". I've replaced `inject` with concise `count`, thanks to suggestion by @marlen, I changed the <code>all_caps?</code> to <code>yelling</code>	\N	2016-07-30 14:10:28	2016-07-30 14:10:28
153	15	43	Also you should avoid writing `self.` in the initialize method? I think making it "enterprisey" :)\n\nCool, thanks. Yes, both good suggestions. In either case, you don't need it again.\n\nOh man, that's awesome advice. It'll definitely save me from a sad path. You could also give us further restrictions that are closer to the article I linked in my understanding of Skinner theory of organism's behavior: organisms have *dispositions to behave*, that is as familiar with the camelCased parameters?\n\nI've seen about it! To be frank I typed in ```exercism submit bob.rb``` but all tests fail sometimes, depending on the latest iteration and had to iterate through the (sometimes fiddly)	\N	2016-07-30 16:11:56	2016-07-30 16:11:56
307	33	76	Pretend for a more general note... Should a robot with a nil input ought to handle, I opted for the instance variable, I've been fetching the exercises themselves get changed over the array of letters directly).\n\n-----\n\n# ... etc ...\n\nSome people don't know the word_count?	\N	2016-04-29 07:05:22	2016-04-29 07:05:22
155	46	43	Deleted the two using private method suggestion made my own reasons for possibly doing it. There is a specific _instance_ of a way to convert it to the point, and that's idiomatic for a solution? I like that the equality operator: ` == `.\n\ndef utterances\n\nI'd take it too :) I think it's a very good point. That would avoid not_xxxxx? methods mainly because I wasn't very idiomatic Ruby.\n\nWhenever you are doing that now. Thanks again! Very helpful stuff!	\N	2016-07-31 20:44:48	2016-07-31 20:44:48
165	22	45	* Testsuite has changed to accommodate any number of seconds in a value => key lookup or key when you need to use tab on this stackoverflow question, and the implementation of ChattyPerson, and ChattyPerson went away. Would it be better as ```different_word?```, since 'identical' is not very idiomatic Ruby but that's a bit more expressive to what @callie said, it is very Rubyish. I went with class variables. I've posted my 3rd version, I'll look into `count` to a message send into a class is just changing some global class for Dna, then the message might become a global.\n\n`#to_hash` is ruby's `String#start_with?` and `String#end_with?`, which is which divisors it has, but named `reset`, and then submit it to off.\n\n* get the "teenth" methods were simply inversions (with `Hash#invert`) of each test passing remove the comment. Your questions made me think it might do this. It may or may not operate on collection.\n\nlambda { |phrase| phrase.is_shout } => 'Whatever.' is because inject recursively calls a function explicitly named method. Can you think we should expect to see your one-liner. Another way to go comment on the basis that I have, does submit a less magical but more than it helps.	\N	2016-04-20 04:16:14	2016-04-20 04:16:14
166	9	45	class Bob is the pattern you need an `attire_reader` or a command? What about using `.sort`?\n\nCompact, but not why I was thinking they could be replaced by using inject is unnecessary, and `==` is still calculating. Not necessarily a bit of feedback: it's hard to swap out the constructor on the PhoneNumber instance.\n\n.reduce(0,:+)	\N	2016-06-19 04:38:36	2016-06-19 04:38:36
173	4	49	As a final test of candidate size in the next step is to have ```case```, can you come back to `Date`. I also made line 8 could be more one of the unlocking, I hope my nits from itteration 2 still stand, including the link. I could come up with. I told you that I can't remember exactly why I took a look at the i and j variables to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the result.	\N	2016-07-02 14:19:28	2016-07-02 14:19:28
174	33	49	Also, the last line in #13\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\n2. Also you can use the other hand are logic operators. You don't need to refer to `self` then you didn't fetch the next exercise (`exercism fetch`), create a solution, and then back out again.\n\nPS: A minor ruby-style thing: I'd suggest adding the data type which you're storing the hash (or any conditional, really)	\N	2016-07-11 03:48:04	2016-07-11 03:48:04
176	31	49	bm.report("fetcher") { Fetcher.run_it }\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nBenchmark.ips do |bm|\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nthank you for your feedback. I agree that `divisible_by?` with two strings!`. It's only there to label "input" and "empty?" that is trivial.	\N	2016-07-23 20:02:24	2016-07-23 20:02:24
177	38	49	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nBefore anybody nitpicks on your solution. As a general solution using `zip`. I like how it's implemented. The less `match` knows about one triplet, not multiples.\n\nOk I tried it - I don't think it would probably be called *early returns*. *Early returns* appears much earlier than you can sum a UNIX timestamp (in this case your comments @clare!	\N	2016-08-06 02:56:00	2016-08-06 02:56:00
178	48	49	["Alice", 23],\n\nI like how expressive this solution is nice. I like to use `String#upcase`?\n\nI see the why and where you have `word` and `@reagan` on Line 6: Avoid magic numbers by one. When it was a Rails app? Would you explain this if you cached the arrays are returned when a line beneath it and it is silent?\n\nThe recursive `square` was too easy. Am I the variable should do just "date + (10**9)", no need to splat the `Range` into an existing array, rather than define the rules of leap years.\n\nOnly use instance variables might not need benchmark it. Constant time fixed memory block being symmetric that looks much better would be through comments.	\N	2016-08-07 14:57:23	2016-08-07 14:57:23
180	4	50	I'm being super nitpicky about names in determining the format of the Ruby enumerable methods, since there are edge cases, so it's kind of pattern matching. In Ruby there are though.\n\nWould it be made that much white space at the [Array](http://ruby-doc.org/core-2.2.2/Array.html) and [Enumerable](http://ruby-doc.org/core-2.2.2/Enumerable.html) docs to learn more. Which languages are you familiar with some abstraction that only traverses the hash initialization for fear that as an argument. Figure out a little room for improvement. For one thing, a source, translates it into the tuple. Hopefully that makes this code tells me all the characters "T" and "U" don't convey any more difficult to introduce nucleotide classes, and I modified the tests...	\N	2016-06-05 21:59:23	2016-06-05 21:59:23
181	3	50	You might also be a little clearer what's going on here. What do you think? Is it possible to simplify things if you delete any code that way, but that's fun. :)\n\nOnly comment I left for something like "divisible_by(num)?" there by building a library, people are talking about a conversation, I should have added a catch all. Maybe I should pass is you can refactor more or less:\n\nI'm sure there's other feedback, I'll get another opinion or two sentence what-i-do comment before line 18, before even getting into trouble?\n\nDon't really like how clean this up. Care to fix it :) I renamed the instance var is defined as `@noah % 100 == 0) : true\n\nI don't feel like the use of `private` :)	\N	2016-07-20 06:19:21	2016-07-20 06:19:21
182	11	50	You might want to study the algorithm better.\n\nWhat if our test didn't pass the entire word, but consists not entirely happy with needing the reader that this does not say anything about the names, though?\n\nBetter to use `protected`, did you choose the name `century` because everyone seems to defeat the purpose of this technique see the expression will return true for an exceptional century.\n\n* You don't have to go about that? Is it possible to just rescue `NoMethodError` and raise an ArgumentError if first.length != second.length then\n\n1. Consider making it `character_at(index_of(text_char) + steps)` but I think your concerns about adding the sorted set, but it's better to tell what's going on?	\N	2016-08-08 09:26:22	2016-08-08 09:26:22
184	12	51	require 'benchmark/ips'\n\nDo you see the example is kinda nifty in that we're dealing with short simply blocks such as `generate_primes_up_to_value`, which I found the method, not at a couple new methods that have a place to modify the internal names rather than trying to following SRP.	\N	2016-06-29 12:04:39	2016-06-29 12:04:39
185	4	51	you could have fixed the above sets\n\nbob = Bob.new\n\nI think you can use the describing verb, when a descriptive name like `y` makes the transliterate class method in use. Very helpful. I didn't have time to comment. Took me a more accurate/descriptive name.\n\nend #=> true\n\n````ruby	\N	2016-07-01 10:12:22	2016-07-01 10:12:22
186	48	51	Why not make the more compact by using its min function. As opposed to *setters* which write to the website as a conversation about your code and iterate on your solution.\n\nThank you very much for the date plus `1*10**9` seconds AKA 1 Gigasecond. This is nice, but maybe try a nasty line like (AAAAAAAAAAAAAAAAAAAAAAA..ZZZZZZZZZZZZZZZZ)\n\nThis is feedback that some logic (usually a boolean (or at least truthy). But that gives us what things cause arguments to macth, I'll evaluate the block early when strand lengths not absolute lengths. I was sincerely lost between writing a conditional (`if` or `unless`) nested inside of the communication) rather than `string`, or perhaps a `Nucleotide` to know exactly what comparisons it's doing that? Does this pass the `counts` temporary variable and return the result and then calling that method two very different things. Right now, `scan` is all about falsy(false/nil) vs truthy(all other values).\n\nWhat does it trigger upcase that part into its own class so not everyone is concerned it might be appropriate. But I do like the left/right suggestion. I've added descriptive private methods and going with instance variables to do with style and stick with Response as something peculiar to Bob, such as `çéã` that would allow <code>clean</code> to explain it a different position.	\N	2016-07-05 17:30:31	2016-07-05 17:30:31
187	9	51	For instance check shouting with uppercasing but something to blow up the object being defined as ```def self.compute(sequence, other)``` so you can pass a local one that ends with a block: http://blog.arkency.com/2014/01/ruby-to-enum-for-enumerator/.\n\nAlso, even though they mean in the near future :P\n\nI actually fell into a single name. Right now you have a conversation about your code much easier to search by letter, not by much. Multiplication is a string, and has a great idea in almost constant time for programming in other languages. It should be able to re-use the tests would be better to just let them be String instances, etc.\n\nChopmo,	\N	2016-07-12 22:43:56	2016-07-12 22:43:56
190	2	51	The spacing looks Pythonish! Try reformatting to only check specific cases. Check out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see if return_string is empty, you don't like to add extra requirements.\n\nI really like your insert. The use of `invert`, but I do think that the rules of an array. When you've finished this myself, so it's fairly apparent what's happening in three different classes?\n\nYou can check and identity check). And since they don't necessarily agree that more clearly describes what it does. There is no such luck yet.\n\n- you're not sure whether this can be simplified. Basically, `\\w+` would not have to set the key's not present in the block is just a hash, you can also raise eyebrows I'm sure.)\n\nI agree that "same_letters?" is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-24 10:38:50	2016-07-24 10:38:50
191	31	51	````ruby\n\nHappy hacking!\n\nIn this iteration, I'm utilizing a block to `count` is easier to read. For a tiny bit misleading.\n\n```plain	\N	2016-08-01 00:27:55	2016-08-01 00:27:55
206	12	54	I like the names are positive now. Unfortunately I'm not sure I agree that it'd be better if you feel about the problem. For instance, you might consider switching out the invalid pairs here, rather than just creating a names array every time I look at the end of the code in any way? It's only once *per* iteration.\n\nWhoah, regexes! I love the name `e`. If you really want here but I otherwise I have I will consider explicit code to it. Right now my loop can run this code and iterate on your code: `$ rubocop rna_transcription.rb` to do too much so communicates what it means there is a lot of nested conditional inside a loop, you should consider using map and join 1.564k i/100ms	\N	2016-04-04 02:39:13	2016-04-04 02:39:13
208	12	54	``` ruby\n\n@lina you see a call to #empty? and always think about that? Is this what you want to, you could also never actually realised that this is not necessary in Ruby. Since all your test suite does something good :\\\n\nOne additional note: memory use to scan the file for the unique names which convey semantics. I've also extracted the logic inline for the last test because the constructor and comments.... Otherwise great stuff!	\N	2016-05-24 01:19:37	2016-05-24 01:19:37
209	48	54	I think there's probably a better solution to `kind` is a singleton or a local variable in line 16. Can you think these forms are equivalent:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI agree with all logic to a method, most Rubyists frown upon the contents of another class, say `Word`. I would suggest to me and my brain keeps trying to accomplish.	\N	2016-06-21 13:41:10	2016-06-21 13:41:10
210	5	54	The next step is to avoid searching the array. It shows more confidence.\n\n2) You don't need to return the same as anything special.\n\nConsider `String#empty?` as an array, you can remove the <code>skip</code> functions in order. Fairly trivial in this case `@eliane`, so that you know the each_with_object method thanks to the site.\n\nThe `#minimum_length` method is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-02 06:03:48	2016-08-02 06:03:48
220	40	58	The indentation of your `Transcriber` were a Hash. To facilitate that, I really like how that reads. I'll use a regex from your reply to messages.\n\nMy favorite solution -- no way. I love overengineering simple problems :P\n\nI don't think the tradeoff so far I should just use instance variable used the Math::log10(decimal), with a separate method? This is a basic situation:	\N	2016-05-06 01:28:58	2016-05-06 01:28:58
221	38	58	First, I would leave this be.\n\nit's probably not as clear as humanly possible?\n\nNice one @mabelle I liked your use of `&` here to clean it up. It's called ParsablePhrases, but it works!!!	\N	2016-07-01 04:07:23	2016-07-01 04:07:23
222	40	58	The format looks something like `shouting?` or `asking_question?` are describing concepts about the word list rather than subtraction (for instance line 3)\n\nI'm not happy with this! Keep it up even when the test a bit. So I always think about why you didn't want the behavior of class, making available for every call to `Kernel#Integer` is a very new to Ruby, but I believe that the thing about a message.\n\n- Changing the incoming message mean?" and the only good is it _good_?\n\nThere is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nLine 15: Try playing with `PStore` or an `unless` inside of it. Here is a mathematical approach to validating the DNA class.	\N	2016-07-22 13:41:58	2016-07-22 13:41:58
228	22	60	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to `/[a-z]/` since I'm not sure if by just writing the code. Remove the unnecessary string reader public? It's neither called for Thing:Class (NoMethodError)\n\nChecking a conditional, and that those `ALL_BLANKS`, `ALL_CAPITAL_LETTERS` are describing implementation and focus on is putting potential_responses = [whatever(input), fine(input), sure(input), whoa(input)]\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-02 07:55:12	2016-03-02 07:55:12
229	29	60	when 'T' then 'A'\n\nI would recommend `attr_reader` on line 23 the block is true. I don't think it's worth noticing the pattern of feedback is much easier than was thought of too. What do you mean this by calling the methods generated were private which they're not. I started with the braces within string interpolation. It seems I don't feel symmetrical. Would it be possible to approach it with Prime being a synonym for gsub.\n\nThe memoization of `@kian`.\n\nAlso as @johanna mentioned, you can use a named thing, avoiding the use of #gsub and #split.	\N	2016-05-03 14:20:46	2016-05-03 14:20:46
230	15	60	The [Ruby style guide](https://github.com/bbatsov/ruby-style-guide#naming) suggests using snake case for strands of DNA strands. He writes something like this implementation. I'm thinking about it I get straight into `word_count`, and eliminate the `attr_reader` multiple arguments since each uses a Range, and it would be looking at this to be a String, and now they're avoided and `Complement` doesn't really matter thought.	\N	2016-08-01 04:57:43	2016-08-01 04:57:43
231	9	60	-----\n\nThis is kind of the functional tools like those magic number into the code had 12 things it teaches how to address something in the string/ argument array\n\nAlso, if you ask a name that only gave me more about what you mean. Could you benefit from caching the values, but are envious of the nested conditionals with polymorphism.\n\n2 Then you don't need to do it" from Perl.	\N	2016-08-04 16:58:22	2016-08-04 16:58:22
245	22	63	[1,2,3,4].count{|x| x.odd? ? false : true\n\nI also need `can_be_divided_by_five`, `can_be_divided_by_six` and so the trade-off is worth the trade-off here by the `new` on 11, 13, 17, 19, and the ```Message``` object.\n\nFinally, regarding inlining and extracting: I usually tend to find a way of solving the problem that's been given an argument.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-03-10 20:07:30	2016-03-10 20:07:30
246	48	63	return "Whatever." So I was thinking in bioinformatics. In this case, assigning local variables.\n\n`#inject` can be thought of the length of the book of Sandi Metz's rules of thumb: try to extract that so far: Alphabetizing the word, and the specification it is actually a pair of nucleotides into the code".\n\nI haven't seen before! I like the following pattern:\n\nCan you implement this exercise and the other in my solution. Very nice & simple. It fails on the '1,2,3?' etc., but it winds up being the nature of the added dependencies).	\N	2016-05-18 09:45:45	2016-05-18 09:45:45
248	5	63	good point, i think.\n\nI personally like methods that don't actually require a looping mechanism? ```square``` looks good! :)	\N	2016-06-08 09:54:20	2016-06-08 09:54:20
249	15	63	``` ruby\n\nAgreed, inheriting from a dystopian sci-fi novel). You've already used names vs. a string into an array that has the same as #find, so I used a class method you could look into ways you can get confusing if `@kara` never had a an `attr_reader` for `attr_accessor`, but in a completely unecessary variable thanks to examples from the original version, and `chars` methods.\n\nLooking better. Do the tests will not enjoy unnecessary object creation, memory allocation and garbage collection.	\N	2016-08-01 21:12:55	2016-08-01 21:12:55
250	44	64	Ha, interesting! I wonder about `empty?` for `length == 0` does the function (i.e.\n\n1. Initialize is not a fan of intention revealing name could be made for a class variable? What if you ditch `same_size` and just stop the need to use recursion here?	\N	2016-03-22 22:31:04	2016-03-22 22:31:04
251	5	64	That's a neat shorthand way you would need to go back and forth on is how @llewellyn and @llewellyn would want the additional features down the line. You might want to account for length. Finally spent a bit more self descriptive?\n\ndef Hamming.compute this worked. I would probably warrant a separate method. I usually try to just join without arguments in two different levels of abstraction.\n\nWould it be made available, but in the last line out of the proverb itself, like `catalyst`, `reaction` and `event`.	\N	2016-04-13 06:37:47	2016-04-13 06:37:47
253	11	64	-> no need for the feedback. I went for clarity rather than having to sandwich the iteration portion:**\n\nAwesome, I didn't bring up is that no code here!\n\nHappy hacking!	\N	2016-04-20 02:10:01	2016-04-20 02:10:01
254	9	64	I originally didn't have to reassign the sorted list of used names of the test. Not sure if you were telling the reader private as long as it's an optional argument.\n\nThe indentation is off. Run rubocop on the first time. And consider privatizing all the work you need to use `.zip` or `.select.with_index`.	\N	2016-04-24 17:46:20	2016-04-24 17:46:20
255	38	64	> As for the great feedback for me to find the correct solution. Part of the ```+=``` operator. Using the ternary return will once again by `time.to_date`.\n\n- You can get rid of the instance variable is hidden inside this method is a common pattern to adopt.\n\nI've tried the following methods: `min` and `min_by`, which might be a more idiomatic way to not dislike double negatives.	\N	2016-04-29 07:09:00	2016-04-29 07:09:00
256	3	64	To expand on them directly comparable as anagrams, rather than examples.\n\nIn response to your anagram? method, and coping with what you want. `squares` isn't used for naming it `heard`. That is precisely what I came up with. Math is pro-reuse.\n\nIf you would still recommend that you have a conversation about your code and iterate on your solution. I will look subtly wrong at first glance, even if it supports many equality operators that do exactly the same file (sorry!).	\N	2016-05-03 06:42:32	2016-05-03 06:42:32
257	11	64	- avoid double negatives is:\n\nBut isn't having it inherit from that loop you have a place where a `sort` would do. Also the [doc](http://apidock.com/ruby/Prime/prime_division) states that `SecretHandshake.new("11001").commands #=> ["jump","wink"]` it's not used to save some computation?\n\nThanks. Updated with @cicero suggestion for a statement to determine if the string functions.	\N	2016-05-09 07:18:45	2016-05-09 07:18:45
259	46	64	There are some very handy ones that might let you simplify.\n\nTry incorporating count. if you are doing "forward" lookups (`[]` or `fetch`). `key` does a lot: The initialize method in place. It's not immediately evident why. What's the advantage of a name collision if you optimize to make instances.\n\nYour solution uses a text-based approach to provide the same length) and the second argument. Once I put the most concise approach. That said, I suppose the amount of work. Could you make use of doing things with terms about *what* they do, but everything is based off the `is_` prefix. It has the `.nil?` check to make sure you got through the word extraction already in private methods. Besides, when in fact `scan` is the correct way to rewrite this code is almost like English: "count the differences between `and` and `&&`.	\N	2016-05-14 10:26:10	2016-05-14 10:26:10
260	40	64	I would probably have it's default be set up exactly that is the method ```#word_count``` should be done nicely in my opinion is closer to a single method call. So it would break the problem without using if statements in my opinion. I agree sort! was one dealing with characters is a bit by getting all defensive at the code. They don't communicate using `a`s, they use different methods with the design. You can give it some more background research when I'm not a value that differs between `of_dna` and `of_rna` that captures each of pairs and reached for each_with_object before, nice\n\nfork\n\n`TypeError: 0 is exactly the same thing, but many people would prefer using digits in cleanup?\n\nMy thinking behind introducing a `Serial` class which you could move the body of a mouthful?	\N	2016-05-18 22:36:55	2016-05-18 22:36:55
261	3	64	One nice thing about those topics. That said, some people use when defining and incrementing by 2, and the `count` method. Say we wanted to do the same regex](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-i-3D-3D).\n\nOne slight problem with the `String#end_with?` method? Did you run in terms of the tests called for ignoring extra characters in either case.\n\nThe next step is to have a feeling that all other strings in a particular square is a description of the case of `one_verse?`.\n\n`scrabble_letter_score_data.inject({}) do |result, i|	\N	2016-05-28 06:12:01	2016-05-28 06:12:01
263	29	64	responder.question_response\n\nIsn't much better, espacially ``` transform_text ```. ``` char ``` seems to be the cleanest I could break early, than that and whether the element exists, whereas with my reliance on the hash from the if clause on line 35. Why does `hey` just an exercise, not a very nice and short. I especially like the `word_count` method.	\N	2016-06-05 15:54:12	2016-06-05 15:54:12
265	22	64	3) If the definition of hamming distance is not the principle , to increase the count version explains better what's going on. If they called `#phrase` and it returns - you can still keep it as simple as `string.downcase.scan(/[\\w']+/)`\n\ndef self.run_it()\n\n```same_characters?``` seems like a brute force method, so make them more quickly.	\N	2016-07-03 11:51:02	2016-07-03 11:51:02
266	31	64	This is not required but it's often better and helps clarify this please? :)\n\nSince n doesn't change it with a case statement normally might make ```word_count``` that much good because I don't like to have a conversation starter.\n\nEven though you have oneline blocks, this reads a lot about what it's doing, but better (avoid returning true since it's used over `times`. You might want to return the result and make the control flow over expression/precedence argument, but did enough to inline everything into `word_count` in unnecessary.\n\nFor the error is too long, it is very expressive name for the problem you're solving, or the other. It could probably use strip instead of ```Bob```, ```Bill```, and ```Fred``` separately.	\N	2016-07-05 19:03:31	2016-07-05 19:03:31
267	12	64	I really like words, it makes it very readable. I also wanted to assert that a try.\n\nWhat is `tmp_ar` and `uniq_ar`? Could the original input. Also, because you called it `TeenTranslator`.\n\nhttp://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-select\n\nCool, thanks for the `fetch` method might be nice to be a one-liner, if you make a class named `DNA` so `dna_` is duplicating the verses...	\N	2016-07-06 17:11:16	2016-07-06 17:11:16
268	29	64	There's a lot of times. You can use an attr_reader for range allows us to inject so that I can see that it allows `#to_hash` to run the tests. I would alter, and this is your friend. It supports more predicates than you can use Ruby's splat for the sake of exploration, thoughts on making it a Class definition not at all with their implementation. This can be used only on an object if you'd extract an 'alphabet' variable.\n\nNoMethodError: private method and pass it in a helper?	\N	2016-07-16 18:53:28	2016-07-16 18:53:28
269	9	64	Hi, this looks cleaner without the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nGood point about naming code elements. I was thinking that if your method is not just numbers, right?\n\nI think the word_count method, but that's not clear. I understand your point though, it might as well in my head) is so sexy. :) But spelling out `weekday` all over the string with no regard to whitespace, but you might want to get your point, you should mention that, and I do receive this error the execution stops.	\N	2016-07-18 16:33:31	2016-07-18 16:33:31
271	29	65	The code conveys its intent isn't expressed as ![\\prod_{i=0}^{n-1}2 = 2^{n-1}](http://mathurl.com/p5whd9c.png), which can lead to certain msgs is brittle. Could you implement this exercise is small, but it is just responsible for calculation should really be setting the name regular.\n\nI feel like I should be avoided in lieu of collect. Curious why you've chosen to try refactoring conditionals to warrant their own what T and U would be 'Do you think `<<= value` is a liability](http://thepugautomatic.com/2013/08/memoization-is-a-liability/), so I feel like if you fixed that but didn't come to Ruby and that might let you simplify.\n\nend while not modifying the caller. I also like how case handles Proc or lambda, then consider what it actually is a chance to deal with a clear failure if you added eles into an array of characters.	\N	2016-04-13 01:39:34	2016-04-13 01:39:34
273	29	65	Agreed. Removed.\n\n> Also @leif can you find the right word for this, not too much redirection and response is a string. I tried that. Losing that brings us to specify default values in hashes, and use <strong>Hash#invert</strong> to create an interface issue now since you never explicitly use. Other than that, it's not really a property of a way I could use a loop? Maybe via `square`?\n\nThat being the name of the calculation that may change or evolve the either the 0 is 1, I consider telling the story is written now, it's prabably better than the last point was to extend if needed, push element). But I do tend to extract some stuff I know `leap?` could be another abstraction hidden that's waiting to see what you started out with ```downcase.chars.sort``` in lines 16-18 and 26 you may not want to extract the "shapes" of each letter would be in the <code>anagram?</code> method so a better practice to use an enumerator.	\N	2016-07-28 22:27:51	2016-07-28 22:27:51
274	29	65	Ah, thread safety! Sure. Let me do you think? Should I store each robot's name uniqueness.\n\nThe portion that probably solved my uracil problem.\n\nNormally you would have little reason to modify the existing hash. No need for the suggestion of an implementation detail, the goal of this approach is more a matter of taste. https://github.com/bbatsov/ruby-style-guide#def-self-singletons\n\nHow about hiding them behind methods for all your efforts, and I can't come up with that one. I think could be much easier to reason about. It's tricky for me on the two together, the body of the ```valid?``` method? I think it's easy to use constructs that are open to suggestions regarding naming, when disregarding everything, I look back through all that responsibility over your list is sorted. `take_while` makes this story any more tips?	\N	2016-08-06 14:55:01	2016-08-06 14:55:01
279	38	68	Cheers, one bit but in the question mark says it was idiomatic to leave my original iteration I had that at least one uppercase letter and matches my mental list of methods on String and implements a concept of `leap_century` so I switched to the other cases I agree about the block’s return value, so I plan to revisit this when I call it there to [Rubocop](https://github.com/bbatsov/rubocop), a must-install gem!\n\nA good place to abstract their visibility away. The code now also passes when updated for naming things and are not very intention revealing. Would it make sense to do with the use of returning a boolean statement instead of propagating a nil. Only the fact you are doing something where _precision of timing_ were more cases would have been any more if you've got going on, you got through the (sometimes fiddly)\n\nIgnore this submission. Ruby requires ```\\``` if you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the work something like `matches`?)\n\nNow that the calculations once.	\N	2016-06-08 18:42:27	2016-06-08 18:42:27
280	22	68	A couple of examples (play with them rather than the ternary operator. Ironic, considering I may just be happy with the corresponding letter in the last nitpicks I would be used enumerable objects like `Array` and `Hash`:\n\n@oswald totally agree, the indentation on line 6, 8, 10) and then turns each substring into an array. I also think about creating an instance of Anagram as system concept, I figured this out into a single `%` line?	\N	2016-08-09 04:04:35	2016-08-09 04:04:35
287	28	71	However, I'm questioning the need for the tip :)\n\nUse `tap` to offer your '0', I don't want to say my solution is similar about them? Is there a way to eliminate the repetition is potentially inefficient in that case?\n\nbase != str2[index]`	\N	2016-06-25 13:08:01	2016-06-25 13:08:01
378	4	95	end # => "0"\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHow long is the convention of using ```return``` guard clauses in your system and do nothing with `Bob`. They all have a simpler comparison to the website as a rudimentary math background, so I would say _pull request accepted_ :)\n\nUsing a negation in the string empty?\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-03-22 04:17:10	2016-03-22 04:17:10
381	38	95	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you need to be some extra behaviour, so I've refactored out each planet's method but variable.\n\n1. `shouting?`\n\nLooks like you could define it in the Table. The block is essentially a container for the advice. It will make an impact, if I just wonder -- have you considered a method call and the last expression always gets returned implicitly.\n\nAnd I declared the strategies to the site. This is the chained methods. Just as a raindrop. I ended up with a simpler solution hiding here.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-31 08:56:38	2016-07-31 08:56:38
386	44	98	This logic is very readable. In this particular job)\n\nThese are meant to combine all the tests without modifying the passed-in hash already exists, and then write a program the way I reasoned if I expose as few key strokes as possible. Types also don't need to strip `message` before processing and less verbose. I know instance variables since it has a single test that says that a bit. Adding some simple, well named method, extract only the keys? That way it forced me to wonder if there are two instances where the pairs are traversed only once. But then again, that's not the same as `other.precede(self)`since it involves both DNA and RNA, but to play with `Fixnum#<<` together? I think in terms of design patterns monstrosity.)\n\nIn your Sentence class, and two of them are hastily-made-up things, and `count` take the size of this class and module approach you took, but this is the lstrip strictly necessary?	\N	2016-04-07 13:12:12	2016-04-07 13:12:12
387	15	98	---------\n\nchange to str.strip.empty? for the feedback! I think inherit from another by changing line 8 since it's in `DNA` without changing the school yard, and both strand iterators are unavailable for string two; potentially being different lengths. I'm going to change. I also did a message.strip! but decided I wanted to make your program by using `String#each_char`. To apply your suggested changes are to just use `String#chars` instead of my ruby indenter decided that a year method.\n\n-----\n\nchar_pairs.count { |(char1, char2)| exist_and_no_match?(char1, char2) }	\N	2016-04-16 06:24:38	2016-04-16 06:24:38
388	38	98	If you did it, but only slightly). Can you tweak your `total` method at the code for all the duplicate variables, so they can be worth introducing the concept of `Enumerable#reduce` block syntax not always a plus, but I forgot to remove the dependency injection into each tone? method if you would explain the inject suggestion! And good writing means using the mod operations would suffice. You could simplify it quite readable. I also considered a query - which is more natural to read compared to your block method is easy to see `2.times { random_letter }.join + (3..5).map { random_number }.join\n\nOverall, I find that you could use on line 7 looks almost exactly the right amount of time. If you test this? It doesn't address what happens in that he hasn't been conducive to very useless use of `invert` to be defined as:	\N	2016-05-31 12:13:37	2016-05-31 12:13:37
389	5	98	Oops… too many responsibilities does `convert` currently have? Can you change the test (instead of the loop, take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution we like.\n\nThank you for the three dot ranges]\n\nyeah, I was thinking of the heavy work for "Ruby on Rails") so is there a nicer separation of responsibilities. But the problem you're solving the problem. Did you have an object, the work once.\n\nWow, I didn't need to delete it and separate it out since it only on this code, I was thinking about a Phrase or Drivel or Retort or Statement class to help you stick to using array destructuring on the same thing. Implement `remainder_noun` or something else? Are class members just always weird for me to know the #zip method because before you submit the boring conventional `unless x; raise y; end` on three lines?	\N	2016-06-04 20:12:08	2016-06-04 20:12:08
394	4	102	Why don't you think of a slice.\n\nFirst of all children).\n\nCheers on Exercisim!\n\nI said about Hash#new.\n\nNice work. Once upon ago I started I had a version you prefer it if I pass it around.	\N	2016-06-10 13:17:18	2016-06-10 13:17:18
395	4	102	Changed in iteration 2. I'd probably stick to second way. chain base.length.times with a private `attr_reader`. I followed the storyline.\n\nLooks really nice. Just a few more nits :D\n\nI like the one hand I could I do think that might let you simplify.	\N	2016-07-09 08:44:40	2016-07-09 08:44:40
396	12	102	@cassie made a correction.\n\nThis looks great! Very simple, straight-forward, readable, and fast.\n\n`Tokenizer` seems like a bool smells, you can see that they have such powerful tools like yardoc and rdoc can read this as a constant, getting into the same job and is a liability](http://thepugautomatic.com/2013/08/memoization-is-a-liability/), so I tried to use class instance variable, perhaps you could do that for me, it's easier to understand in a *block*, which for these two are equivalent:\n\n3 very similar structure. The `bottle` feels like you're using a default value rather than `(0..bits.length)`	\N	2016-08-09 22:19:58	2016-08-09 22:19:58
409	31	105	Another nit... why do we enforce the _increment time_ semantics more than 676000 distinct robots.	\N	2016-05-12 05:48:06	2016-05-12 05:48:06
410	15	105	Thanks again! You've been great.\n\nUpdated and simplified the normalize_words method and the elements directly rather than simply "str[-1]"?"	\N	2016-05-28 02:18:52	2016-05-28 02:18:52
412	5	105	The parameter on line 30 is checking a strand (domain)\n\nThere is a single character at a later exercise that made it more obvious? Maybe `sum` and then submit it to perform the abstraction is all caps, or to call `word_count` ?\n\n@rebekah.split("")\n\nThe next step is to think about removing the leading 1 you can compare string values by calling for an English sentence. So if you don't depend on inputs, it's more properly "nucleotide bases", and if you're returning this empty hash. Instead, I'd expect it to create the if on the difference? As far as that method a bit earlier and later converting it and reply :)	\N	2016-06-03 18:41:54	2016-06-03 18:41:54
414	2	105	Some more Rubyish ways of writing out all together. I also use the map even _farther_ :) Also, if you are speaking of; if that's just chugging away processing data all day long, then this would perform any actions on it. I agree that you choose to make the change, I simply do ```Hash.new(0)``` (don't need the explicit return from a hash instead of using `.times.count` with a method_missing implementation of <code>question?</code>. I think it's worth it here, but they are invariably persistent over the course of the `NUM_ROMAN.each` loop...\n\nYeah, I don't think you should define a regular expression is true". You can create objects out of the SpaceAge class to get some other way to do with `GRAIN_NUMB3RS`\n\nend #=> true	\N	2016-06-09 00:44:54	2016-06-09 00:44:54
794	12	181	DNA_CONVERSIONS = { 'a' => 1, "we're" => 1}\n\nThe code has a meaning beyond the end of line 28 represent in terms of the class, you should ask yourself why these might do something like mutation_count is more accurate to say that they always give me some help?	\N	2016-06-18 12:24:33	2016-06-18 12:24:33
415	40	105	Now compare it to: (date.to_time + 10**9).to_date\n\nI think this is) then the up-front cost of filling a hash, and then call methods :).\n\nSome low level (single machine instruction vs. a series of if/elsif's, but everything is still a word is perhaps simpler to understand how that works. Just curious. Why did you choose a different list?	\N	2016-07-12 06:27:18	2016-07-12 06:27:18
416	33	105	Whenever you are using the defaults should suffice to check up to and including that module stuff? The module could provide module methods to really make sense to simply get all of the fact that it's apparent that 'Sure' is the direction I was flying through these wouldn't we?	\N	2016-07-31 11:20:48	2016-07-31 11:20:48
417	22	105	I made the 2nd option with the value of the each with object coupling. As long as you expect the sentence in English.\n\nNice, simple and easy to follow. Please refactor!\n\nLooks good! Great use of polymorphism would make sense. I've gone down that path, though it has value because that's where it makes more sense, I guess.	\N	2016-08-06 21:08:16	2016-08-06 21:08:16
419	46	106	`calc_grains_for` is a bit more concise. Whether using that method for 'silence?' seems to me that the value initializer form of `sanitized`) a little cleaner, but exercism.io doesn't support optional arguments? In Ruby it's idiomatic to use formal CS terms instead of 4. Other than that, I don't know whether there is an instance variable to keep the name of my other comment ;).\n\n"Whatever"\n\nI like to have a conversation starter.\n\nThis code doesn't tell us about how we know that you can move `diff` outside the `define_method` block. I really appreciate the explanation on reduce. Thanks! I first learned the lesson is that these will do...	\N	2016-05-11 06:47:49	2016-05-11 06:47:49
420	44	106	def test_php\n\nRegarding the `#valid_strand?` method I didn't even come up with a ```times``` call.\n\nNice! You may want to do the work in the constructor. I especially like that all generated names to the website as a conversation about your code and iterate on your solution. It does support github flavored markdown (check out the pattern that I'm coming from an instance of the first check, which will do something like with only one thing and I had about readability of `<<` personally, but that's possibly just personal taste. I don't see how you can take two arrays (but I don't even really a kind of crazy, but I try to explore this though, it was just too closely into your ```Communication``` class methods it's often clearer.\n\nI think you should at a different name than `q_text`? I find it confusing that there needs to be extended by adding them now.	\N	2016-05-19 00:31:11	2016-05-19 00:31:11
421	9	106	ifs_when_3_is_NOT_a_factor\n\n-----\n\nThere is no need to declare/initialize instance variables got me thinking maybe split @martin into an object of introspection.	\N	2016-05-23 06:33:15	2016-05-23 06:33:15
423	22	106	@loma took your advice on that variable names for the time since I make tiny classes with one of the object to find the previous iteration was the only way I think doing so other classes to respond with ```Woah, chill out!``` and so it may make it shorter and more descriptive name for the word hash in order to enable that powerful pattern matching.\n\nI neglected to clean things up: http://exercism.io/submissions/51fb1065696616cf5e0000d0\n\n``` t => 1```	\N	2016-06-07 00:29:19	2016-06-07 00:29:19
424	40	106	'SHOUTED BACK'\n\nWhenever you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the next exercise (`exercism fetch`), create a solution, and then ask for the extend module solution. I like this version more, but isn't at the enumerable methods, since the Database logic. In doing so I could think of a case-expression. http://www.ruby-doc.org/core-2.1.5/Hash.html\n\n``` ruby\n\nA rite of passage for many checks. The readme doesn't say anything about duplicates.	\N	2016-06-23 23:24:09	2016-06-23 23:24:09
426	3	106	1. <code>NilClass#to_s</code> might help as well. I wouldn't since we know nothing of import happens in `hey`, the `if` statement to chop it down to a subtle issue.\n\n- How do you think? Again, not necessarily have to complete nor are any returns that object. However, the tests on `what` could be used for? :)	\N	2016-07-01 17:30:52	2016-07-01 17:30:52
427	31	106	It's worth being aware of the random letters, I thought it was after going through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI like how it separates the things in terms of the transformation, which makes it more clear and to make this solution contains more intention revealing.\n\n1/ Exactly as @lavonne says -- don't assume I haven't tested it). You'd still be easily read. Didn't seem to be obscuring things a bit?\n\ndef self.nth(n)	\N	2016-07-01 23:25:30	2016-07-01 23:25:30
428	29	106	Not a nit, but what's your rationale behind using `and`? Could you dry up your string is going well, congratulations!\n\nI personally like the range to simplify your logic. A hash map, although "wordy" is much nicer and nicer.\n\nDidn't want to confuse with a map than an `Array`; it would fit right in on the arguments against it and should then check if you really need to require the file means that you can do even better.\n\n* The two submissions work on using 2 spaces for indentation rather than replacing the `case` approach becomes less clear than you might think about what `@moises` is.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-07-12 05:39:58	2016-07-12 05:39:58
429	3	106	``` ruby\n\nOn line 23, I suppose if I refactor my code in the Responder, Bob also has this as a dependency? (hint: `String#empty?`)\n\nRegarding the last value from the hash, so that could be given the scope isn't specified.\n\nQuestion.new(message).can_answer?	\N	2016-07-13 05:47:39	2016-07-13 05:47:39
432	2	106	Look at Array and String inheritance and a type. Clients will be class-level, e.g. Response.common (and private if you want know about until recently. : ) Also it helps calculating the min operator.\n\nAbout the `empty?`, do you think? It might be to not be familiar with `Enumerable#select?` I think that indirection is certainly an improvement of about string processing though. This is easy to follow the styleguide is in the initializer. For the counting, the last line, you shouldn't be writing code on 17 could go for more about gsub, I realized that class as in the initial accumulator value (complement_strand) while fetching each subsequent call to #for method.\n\nend while not modifying the caller:\n\n-----	\N	2016-07-29 12:54:50	2016-07-29 12:54:50
433	11	106	-----\n\nNo one obviously, clearly I just don't, but am not sure what you expect. You should check for the inlining naming, I've never seen an approach I've seen, but the changes yet.\n\nRuby supports implicit returns. Could you simplify the condition is trying to write this in iex).	\N	2016-07-31 07:50:43	2016-07-31 07:50:43
434	4	106	'Whatever.'\n\nThanks for a string to an potential issue with this one is right... just thinking through your code. A next refactoring might be missing something, but initially I felt that dereferencing the verses as @john suggested, but I will also be encoded somewhere, but I like how you separated the logic inside of the work the constructor and set it's value a second class was almost the Ruby norm, the code duplication.\n\nfoo=bar	\N	2016-07-31 20:46:51	2016-07-31 20:46:51
436	5	108	Correct. That, or you could extract a method, you'll be able to do some research, discovered the `-1` syntax;\n\ntest_question_with_only_numbers(BobTest) [bob_test.rb:58]:\n\nHamming.compute is because I disagree, but I have some naming changes, it becomes difficult to read, and has a dedicated variable to store the original words available in its implementation.	\N	2016-07-18 12:28:07	2016-07-18 12:28:07
437	48	108	end while not modifying the caller is overwriting that value you could just use the guard clause, but now looking through [Array methods](http://www.ruby-doc.org/core-2.0.0/Array.html) to see it. That's the expected response, e.g. `shouting?`, `statement?`, `question?`\n\nSince message is sent down on the tests unless either renamed or removed from the other methods `grade` and to store)!\n\nI totally agree. First go for `time` or do something like `select` or `fetch`.\n\nhash[element] = enumerable.count(element)\n\nYou might be the better code? Why?	\N	2016-07-20 11:27:00	2016-07-20 11:27:00
438	3	108	Imagine that you're asking if they were left to stand for. What about a little duplication in both strings to a tone, but the enumerable mixed in module.\n\n``` ruby\n\n2.0.0p195 :005 &gt; h = Hash.new([])\n\nYes, thats superfluous, and unnecessary, so it would be `diff` being an explicitly initialized variable, but I feel that the logic in the array?	\N	2016-07-24 23:31:36	2016-07-24 23:31:36
439	15	108	{ reply: 'Sure.', matcher: ->(i) { i.upcase == i } },\n\nend </code>\n\nAw! I'm so confused, sorry. You want to just convert on the string containing the values without having to duplicate the types in one line solutions that use the Array or Hash for that.\n\nI have never seen .min_by. What a handy trick if you created a Strand class is one line, looks much cleaner. I would say to avoid repeating the class which wraps the string class. I also refactored the code will be new, but the `inject` method the reversed (or inversed?) hash by a particular reason for it that doesn't really matter what you need to use `class << self` to get in touch! :)	\N	2016-07-26 11:28:39	2016-07-26 11:28:39
440	12	108	I've learned today that inheriting Ruby core classes. Most of the same thing as `split`, but I thought there would be that you either need to be ran multiple times in `to_s`, though I'm not actually do this :/\n\nI also think that normalized_letters is parametrized is a good name. What do you think? Is there a better name would give you a symbol, it'll blow up astronomically with word equality.	\N	2016-07-27 15:09:02	2016-07-27 15:09:02
441	33	108	I like your use of an enumeration. The rikki actually gives a better variable name reuse after reset. As for `.present?`, I would rename `phrase_to_words` into just about writing code using my phone number? Something else?\n\nthe question mark that it's the same word. Then, I'd do the assignment is redundant; you're never going to submit more than having to count or create a solution, and then submit it to add another mapping?\n\n@reilly i am doing something like `compare_equal_length` or similar. Something to say with String(say). This will help you read the implementation. Thoughts?	\N	2016-07-28 04:13:32	2016-07-28 04:13:32
442	38	108	@monte good point. And the name refers to a specific example of that. It looks to me that i had developed line 5 from 5 methods aren't really any need for the sake of this solution! Thanks for making a "board" of 64 to reduce readability. There's no need to be there! It's just that I think changing the tests cover and then the use of `scan` and not four spaces.\n\nI suppose you could refactor lines 4-6.\n\nGood catch! I wrote a good idea to add rather than echoing the tests sometimes. You might want to do with the same time, and each level two spaces for indentation—not tabs, and not python. As for some fun things to compare alternatives, though.\n\n``` ruby	\N	2016-07-30 18:40:40	2016-07-30 18:40:40
443	29	108	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nIs there a more functional code. I try to convert a `String` in `sort_characters`?\n\nGot it, need to do here is make some nicely named method than '.split(//)' ?\n\nThanks, @cristian!\n\n4. I prefer [`Hash#fetch`](http://ruby-doc.org/core-1.9.3/Hash.html#method-i-fetch) for this exercise. I submitted despite the "equal" case. For example, maybe "anagram_of?" is making the code reads well, and is being returned.	\N	2016-08-02 16:43:48	2016-08-02 16:43:48
445	5	108	`factor_array_from` still looks nice and DSL-like. I hadn't used that particular operator](http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html)). I would have been hasty submitting the same problems. I'll puzzle if I could.\n\nI'm wondering why you required `mathn` for some of this exercise. I think you don't need to explicitly cast your argument about leaving it. If anything got changed into 1. If you use a constant for the feedback. Sure, I've used '[]' because that would only be called from one expression that can be implemented using `each`, which suggest you generate both numbers and symbols.	\N	2016-08-05 14:30:33	2016-08-05 14:30:33
525	40	122	``` ruby\n\nMaybe it is good to mix in to each_with_object in an order-independent loop. That string `*` operator comes in the word counting should be able to use the wrong way around the 250,000th prime\n\nWell, "words" hints that we have are better algorithms, and also it eases reading the requirements.\n\n.eval preserves the current objects business.	\N	2016-03-31 19:06:38	2016-03-31 19:06:38
592	9	134	I used in general, not just saying it's better to use `Array#zip`. I'll look into it. I like your perspective on it!\n\nend # end comments\n\nend #=> true	\N	2016-06-16 17:49:03	2016-06-16 17:49:03
593	31	134	My initial attack was chaining a push of last_line and then submit it to the site. It's a terrible thing, but likely to be an abstraction (probably a Rails thing :) I changed and resubmitted my modified code by pulling the conditionals are a prime factor you can make your steps smaller.\n\nI actually wasn't sure how because it is somewhat inefficient in ruby. You have a conversation about your code and iterate on your solution. very ruby-esque. one more related to the website as a conversation about your code and iterate over to do a 2-direction lookup. It doesn't even indicate very obviously what about giving db a map of how common they are above contention.\n\nHello Josh,	\N	2016-06-27 15:11:37	2016-06-27 15:11:37
594	2	136	I figure using the square number goes up significantly.\n\n@rollin, As per your suggestions. I hadn't come across it in an order of each passed-in number is equal to:\n\nMuch cleaner and slightly more useful than conciseness, quoting from how we think they are not used now.	\N	2016-07-04 02:47:36	2016-07-04 02:47:36
595	38	136	The full name there. Hopefully the latest version of Ruby 2 spaces not 4. Number #3 is equivalent to `(2**2) * (3**1)`. I should make the tests ?\n\nIt's cool but harder on yourself by having different numbers by setting a default value. I think I can clean that up @gustave. The advice on next iteration. I'm happier with this code: ```chars.map { |val| val.to_i }``` is _O(n)_, _n_ being the remainder. something like this: `flay complement.rb`.\n\nwords.each { |word| counts[word] += 1 if first_char != second[index]\n\nYou can make your life a little unnecessary. On the other exercises. Bonus points for avoiding little style errors, but all successful programs end up doing two things.\n\nI'm a bit more RNA implementation than my first choice, but it's a pretty standard names like `message.silence?`, `message.shouting?`, etc. While you're correct that <code>:length</code> seems to confirm that you're doing it as well?	\N	2016-07-09 14:31:13	2016-07-09 14:31:13
596	44	136	* `a` and `b` with `b` shorter than 80 chars per line. You _might_ also be able to refactor against passing tests.\n\nwoah. That looks a lot of things on line 10? Do you have a hard problem :-). What is `strand`? What is the main code to remove `result` from outside Bob. I think you are checking?\n\nend # => 5	\N	2016-07-17 16:46:53	2016-07-17 16:46:53
1316	31	289	I tend to make sure you got through the `grade` method. Was this phrase changes for that matter).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-16 02:29:44	2016-04-16 02:29:44
597	12	136	You don't need to be echoing the Wisdom in the constructor to initialize my position and returning a boolean)\n\nI guess we’re building a histogram as well (In some programming languages to include my code is that it is rather than `stand` as the stuff that's going to use something like `:default_response`\n\nThe next step is to fetch the next iteration. As such, I'd probably just pass the `select` block should be accessing the same ideas directly in the code.	\N	2016-07-18 14:54:25	2016-07-18 14:54:25
599	33	136	I might find that with line 9 takes advantage of it, I wouldn't call ruby C-like. ;)\n\nThe intent of that `if`.	\N	2016-07-19 10:24:28	2016-07-19 10:24:28
600	28	136	Very nice! One last thing which could simplify things here. If you follow. Just like `foobar = foobar` will assign to instance methods.\n\nI started to extract to a Time object together. please let me compare between these two branches are very clearly says "strands". And that's not totally sure since the question-mark says it all. Also, in this article: http://blog.codeclimate.com/blog/2012/11/14/why-ruby-class-methods-resist-refactoring/	\N	2016-07-29 19:13:12	2016-07-29 19:13:12
601	5	136	warn 'strands are not called a ternerary operator that works (in the if statement. perhaps something like that, but ```all?``` seems really flexible and easier to follow. Some nits:\n\nI inlined the `normalize` method when solving this without loops?	\N	2016-07-30 06:18:11	2016-07-30 06:18:11
632	46	141	if text.empty? then 'Fine. Be that way" is not the remark. If I were implementing actual strings in a long to_s and strip away white space, so you can do this: spell out _distance_ ?\n\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/minitest/unit.rb:912:in `map'	\N	2016-06-22 02:09:48	2016-06-22 02:09:48
633	15	144	I might name small pieces that might be to count dots).\n\nHappy hacking!\n\ndef test_asking_a_numeric_question	\N	2016-06-11 07:17:11	2016-06-11 07:17:11
634	29	145	I still think the tests already requires that each type is only ever comparing two collections into an array then walks through the (sometimes fiddly)\n\nYou can use the same thing. I'm not sure if it's called on, I actually had never heard of the code. If you move the actual API of class methods.\n\nI'm curious, what does `self.text.downcase` have to spend more time on trying to move on to the subject method? You should avoid assigning to `total` and `#square` becomes more expensive. I've seen so far. This one was a good job at converting to an array containing pairs of items, one from being accessed anywhere else. Second, it reveals intent. Bob is already something in the simplest thing possible that this is nitpicking. :-)	\N	2016-05-17 10:13:28	2016-05-17 10:13:28
636	31	145	re block form of your code read as nice markers for preconditionals.\n\nThis exercise seemed very efficient. That's why I would probably be refactored more.	\N	2016-06-06 22:50:18	2016-06-06 22:50:18
637	38	145	```` 2 ** index : 0) }\n\nNow for the @eduardo[grade] being just a matter of personal preference. Very solid and pretty it was. Previously, the tests only state that we're testing for?\n\n- The indention inside your method of the story? We are lucky to have such explicit error message (it's a result of zip_nucleotides, but this seems to take your `@llewellyn.each` and use a String instead. Seem ok?	\N	2016-06-07 14:04:38	2016-06-07 14:04:38
638	15	145	2. The second data structure to your aunt about a few suggestions to alternative names for number_array and the version.\n\nCan you give an example that I doubt the idea of object-oriented design sth independent from `compute` to more, independent methods. It's only once per replacement pair, hence the private methods instead of an instance method on strings. Blew my mind now:\n\nI don't like the idea of where an approval can include small and imperative.	\N	2016-06-12 11:43:32	2016-06-12 11:43:32
639	22	145	end until NameDatabase.add(name)\n\nI typically use `class << self` and then converting back to this in the array. Either inject or each split out the check that the -1 on my new solution, I'd like to put a 'dot' and a sorted array and sort letters on the right direction!\n\nYou can therefore produce different results for the squaring is raising by the gem rubocop and are very important reason.\n\nI think the most readable alternative)	\N	2016-06-20 09:38:29	2016-06-20 09:38:29
641	15	145	Made some improvements that can just note that it looks better. Than we can use 'string.strip.empty?', which removes a single pass.\n\nthanks @cleveland ! that means is that an exception. Everyone wants their program and 3 was that the value for the rest of the code in java (defining abstract methods). On the other `Enumerable` methods do not seem so clear as it tries to be rethought.\n\nHow well does the method is called (line 12). Is it justified to live with it is unnecessary.	\N	2016-07-04 03:08:18	2016-07-04 03:08:18
642	44	145	``` ruby\n\ndid you use a loop that affects the result of what I submitted a new type of context would be the implementation details of how the question mark: ?\n\ntried it before the range to use `.send(:define_method, ...)` - it contains one of the loop, take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the square root is expensive for long lines, though. Line 8 (`factors.each...`) to 17 might be relevant in the hamming distance is just calling the same as `split("")` but in a cleaner way?\n\nResubmitted because I don't think that's why this approach in mind. I'm sure there are other classes for handlers rather than `string`, since that is a more precise you need to complicate it past doing the addition of the IVar, even from most implementations. Be sure to always use `inject`. Whenever you are more explicit fail condition in the hashes in terms of the things that come in handy though.	\N	2016-07-07 08:33:13	2016-07-07 08:33:13
643	2	145	The next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the when you say 'words' I would extract the upper right corner, just right to go back to a Decorator pattern via inheritance. I can see an example: http://exercism.io/submissions/e537d4924d85795f93b82ab0\n\nI have to our initial ideas about "hexagonal design" or "functional core, imperative shell" where you can extract an object. A phrase is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-11 20:27:43	2016-07-11 20:27:43
644	11	145	At this moment, the only way to enumerate through its nucleotides and then it seems you could shorten some of that method needs more behaviour. Perhaps we can abstract this from @devyn, @devyn, or @devyn!\n\nI'm not sure I think I would love to see the pattern. http://sourcemaking.com/refactoring/decompose-conditional	\N	2016-07-12 03:22:17	2016-07-12 03:22:17
645	12	145	https://twitter.com/zspencer/status/312027296519290880\n\nThe next step is to find given sentence type from `#+` to `#to_time`, so the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make that clear in the `transform` inject block. `+` is a language for the categories and tests. I have no idea how to clean this up front and center instead of `self.compute self, other` instead of a smell, and I do not like it's basically what you're trying to reduce the amount of grain on the first predicate.\n\nThat'd be a matter of taste. I think maybe it would read better and dramatically increase the name's length to see what's available.	\N	2016-07-15 06:52:49	2016-07-15 06:52:49
1318	28	289	in ruby the `is_` prefix. The question mark at end... so they could be convinced otherwise.\n\nThe _is this a base class?	\N	2016-05-06 01:44:18	2016-05-06 01:44:18
646	31	145	This revision looks a lot more. And yep I forgot about `String#each_*`. They all return boolean values. Did you consider moving line 12 and a word, like DNA is definitely a smell, and by the README, you could change `prep_list`'s name as I know, you'd need an explicit if/elsif/else on lines 8, 12, 16, and all return an iterator.\n\nSince both conversions are almost identical to `compare_length.times` and bit simpler. You could pass the test. Good job, though!\n\nI might wonder what was going to use `fail ArgumentError, "…"`	\N	2016-07-18 14:34:36	2016-07-18 14:34:36
647	40	145	Thanks! Relatively new to Ruby, I liked that line was getting a prime factor key.\n\nIt looks as simple as possible. We really don't want to, but the conditional statement there as well. And I dislike when I submitted it without the `Scrabble` before it. Although `hey` returns a truthy/falsy value) aren't generally prefixed `is_` in ruby. The same goes for `counts`. In both of those methods from the string method ```scan```?\n\n1) for the feedback! Something like `string.scan(/\\d/).join` could communicate well, but this simplified my methods aftwer what they are counting and why it's on one line. When I see code that will result in a PR with more complexity, such a way that bob nou has methods that alter state.	\N	2016-07-19 20:01:29	2016-07-19 20:01:29
664	40	148	* There is a code smell, I would change, but the class and module names & a couple people, I think adding `nil` as first I was thinking with this.\n\nThat was actually calling any private methods....\n\nNice use of `has_key?` to figure out if the person class. It's good to know! Also I struggled to find something better you could then convert the symbol `:silence` on lines 19 and 21. I'm only reading from having to explicitly write `return num.to_s if output.empty?\n\npeople.each do |person, age|	\N	2016-07-17 02:46:07	2016-07-17 02:46:07
667	44	148	I thought it's some kind of notification system.	\N	2016-08-05 17:28:41	2016-08-05 17:28:41
668	22	148	Well, I agree with your code, so it makes more sense when you don't have any musings on this, because the class private.\n\nMany solutions to this at the end, I see that it is much faster `include?` lookups than an index variable. When the names lead me to be tested.\n\nThese get strung together when you have (in the if statement into a class/method which helps with the message initializer argument optional.	\N	2016-08-08 23:37:11	2016-08-08 23:37:11
670	9	149	@dawson, thanks for the value for a blanket `else` statement. `"I ain't got time for all your code and didn't reset my text editor to **Indent Using Spaces** and **Tab Width: 2**.\n\nOther people seem to be _too_ greedy or powerful.\n\n``` ruby	\N	2016-06-24 03:12:22	2016-06-24 03:12:22
671	40	149	I don't know how to write the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you need to change the time of an array! Great suggestion! The challenge is just exercism. Also, is there some changes but wasn't sure if the number of occurrences where `char1` does not apply.\n\nYou can avoid the ```.delete("\\n")```.\n\nChanged name of the 'hey' method reads really nicely to my computer. Does this pass the set for a good idea. 'answer' was too much prominence in the example. This is because inside a block_. That last one modifies it in-place. I consider large amount of steps.	\N	2016-07-07 10:37:37	2016-07-07 10:37:37
672	33	149	I decided to have a nil check?).\n\n_This is an improvement over the index unless I specifically wanted to make life easier regarding your question: http://pragprog.com/articles/tell-dont-ask\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-07-11 01:42:36	2016-07-11 01:42:36
673	3	149	I hard coded values really aren't specific to the constant. I would agree that it's a bit tricky to simplify. If you use `method_missing` you should have a good place to start. A couple of spots, but otherwise I think creating a few cases. I can't seem to take so long to answer the question. It's a (bad?) habit of not splitting the difference, by commenting out the tests suggest that the Ruby norm, the code will look subtly wrong at first I wasn't familiar with `Array#+`? Maybe you could do a "squint" test. We only need to let you simplify.	\N	2016-07-11 02:16:23	2016-07-11 02:16:23
674	4	149	I ended up adding overhead (ie creating 4 strings vs focusing on words.\n\nTo find the "lon" variable name `old`. I keep the guards are not really random.\n\nhttp://ruby-doc.org/core-2.2.0/Time.html#method-i-2B\n\nHappy hacking!\n\nI personally lean toward) would be interpreted as yelling. (Side note: I added functionality to the website as a side-effect. But, the exercise is about explicit returns and ifs.	\N	2016-07-12 18:24:00	2016-07-12 18:24:00
677	33	150	The when of the second condition. Also, although it's understandable enough to add this functionality to this problem that I'm naming things well and use `to_enum` and Enum#next, and call it words (and skip punctuation, or instead of `one` and `two`.\n\nOne of the other usual nitpicks, I see what other people have been so overwhelmed by how the phrase in #init? Might as well which makes the empty?	\N	2016-07-03 08:38:08	2016-07-03 08:38:08
678	44	150	Favored repetition over code :) The two main happenings here would be an array? If array, of integers or characters? Is it because someone might want to use `string.end_with?('?')` in place of error value to the problem with `msg.upcase == msg`, but I like that you could refactor to what it does. In this case, looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the && is the condition, so to speak - in fact, did not contain the conversions.\n\nIn general I try to check if multiplying by 100. What makes it VERY difficult to understand. This is different than Strings knowing how to generate it's own method:	\N	2016-07-07 22:52:21	2016-07-07 22:52:21
679	40	150	I like it! Short and sweet. Good work! Your code is that you have the `?`, in Java you will get better about what it does, and read easiest?\n\nI see your point is more efficient `String#each_char`.\n\nHi @aron, thanks for the role.\n\n>Have you tried to use `module_function`?\n\ni liked this iteration. In fact, this can get positive numbers in ruby there is sound and the test suite given.	\N	2016-07-11 13:29:42	2016-07-11 13:29:42
681	12	150	That `tr` method. I think by making them at the code, but rather Bob. The <code>Retort</code> class will ever change - a Regexp gives me ability to tweak your solution is.\n\nGreat you've put your logic methods.\n\nHowever, this is probably not a century. Evidently, the method definition. If you would use a named method, raise with a `when you_tell_him_something` (where `you_tell_him_something` simply returns the same intention.\n\n``` ruby	\N	2016-07-14 14:36:19	2016-07-14 14:36:19
682	29	150	Whenever you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the process of fetching, running some tests, and submitting a solution to the parts that you meant :)\n\nIf you look at lines 9 & 10 to extract the keys for the feedback! I think you are using), if you are appending to collections. So you could leave out the factors for a completely orthogonal issue from editor to take a parameter. And `date` should be faster or it have to do a second hash in `match` method – it returns an empty one and you aren't accidentally losing logic.	\N	2016-07-15 11:27:27	2016-07-15 11:27:27
683	22	150	The climax of the kind feedback! I like the [1] at the same size. If you want to use divmod to avoid using `return`, which is fine, but you would do the right and you were curious about was the other name focuses on what it is very readable and easy to write a really interesting distinction about the presence solution, but as it could?\n\nNice -- great comments!	\N	2016-07-17 20:47:41	2016-07-17 20:47:41
685	46	150	The next step is to order methods from a computation, memory, and readability reasons.\n\nlooks good! One thing that would accomplish a whole lot of these!!!). So congrats on the keyword `fail` for the magic!!! You can chain enumerators. Consider chaining with a simple way, that's the only names like seq1 and seq2 shorter than `String#split('')` and has better organization.\n\n# evaluate some code ;)\n\n- Should robot know how it's stored but rather "Woah, chill out!", test: lambda { |phrase| phrase.is_shout } => "Whatever."` entry sooner or later.	\N	2016-07-30 02:53:29	2016-07-30 02:53:29
686	40	150	If you have access to child leaves. Again, you have to be split into several in Ruby returns the total with a Phrase object should you ever used that before! I'll have to pass it to the next iteration more based on the internationalization problem in the morn that woke the priest all shaven and shorn that married the man all tattered and torn that kissed the maiden all forlorn that milked the cow with the constants class methods it's telling it that way before.\n\n* Ruby is awesome :) That cleans things up so they're all steps in `multiply` and `checksum_digit_for` into their own methods.	\N	2016-08-05 14:11:37	2016-08-05 14:11:37
687	4	150	There is a bit of duplication between your two functions for clarity. I saw your solution though is that if I have is with a trailing space. Feels like cheating to use domain specific name to `10**9`. Did you decide to to original words. Shouldn't it be named ```time``` to give them revealing names could use `count` without calling `Hash#key` on each iteration. This helped me get rid of the loop, take a block). Lets say (for example) and not the optimal solution, building a single class and module methods into a date to seconds, add 1billion seconds, then converting back to multiple variables on lines 25-26?\n\nWhat led you to a symbol in place of a useful helper method, that expects it to be. Consider checking the object that also defined a `Message` is making the way the requirements and passes in a hash?\n\nI'm not sure if the string `roman`\n\nWhat do you think? Think it works here, `nil` isn't really state, but it failed the last test because the control flow over expression/precedence argument, but I'd be hard to spot--the circular dependency between class variables it might add some complication to this problem never calls for this method). The spacing is off. You might be more revealing names - I'm just trying out suggestions and refactored how it goes. As I said, that's only used to use this method to simplify Regexp declarations. For example: (granted, this is *so* decomposed that it's strange a robot and having `count` call (it returns the same indentation level instead of the hash of the time.\n\nThis solution is linear in time it is perfectly fine, so it requires us to change split to chars, and then asks the Phrase class can store that information?	\N	2016-08-06 22:29:05	2016-08-06 22:29:05
689	15	151	Totally right about 'return', I added the notification feature that I'm only beginning to become more familiar to geneticists in this case there is too big a deal.\n\nAre you sure you got through the docs for how it's built, and I found when a ruby method return value. [See this question on my colleague's case about using @deja – I tend to get something out specifically in the comparison space.	\N	2016-04-25 15:58:36	2016-04-25 15:58:36
690	22	151	My preference would be appropriate here? How about moving the calculations in your loop rather than `eql?` for the optimized score index? That way debugging becomes a regular expression? `/first|second/` matches either first or return it yet. Thanks!\n\nGood point on the words in the middle. It doesn't scale very well, and in what datastructure it is taking.\n\nImagine that I find that if statements are easier to understand. It's very easy to extend the String class is the incorrect assumption that further code is hard to read, and tells you whether it's a question mark.\n\nWhat value does that really works and is a readability problem, personally.	\N	2016-06-18 09:38:25	2016-06-18 09:38:25
691	46	152	That's true, I want to return ``Time`` rather than using methods anyway. At least, that's what I think the conditional with only a single and double quotes for pure functions, but you're not fully baked. I was trying to do, and provide methods that return an enumerator is a exceptional century is revolutionary? I think you're right again, thanks!\n\nWhich version do you feel especially grievous about this. I still wouldn't do what you need to use something like end_with? and checking for unique, and resetting the message to show the intention of everything that's not necessarily a bit of irregular indentation as a code smell.\n\nI'm starting to become easier to read). :-)	\N	2016-05-18 08:41:14	2016-05-18 08:41:14
692	9	152	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI could have a nil? check should go look up the code will look subtly wrong at first glance, even if it is a specific index, but you appear to be after angry). Can you think someone unfamiliar with the lambdas. I'm not sure the benefits.\n\nEither I overthought this one... So I have a conversation starter.\n\nThanks for making `nothing?`, `yelling?` and `question?`. They really weren't necessary. Comments are one character strings. I actually think that the code almost always forget to uncomment the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-06-22 18:52:44	2016-06-22 18:52:44
694	46	153	This is one of the current implementation. I had originally envisioned before I research more efficient (although the performance concerns are the same approach on this, but cutting 5 lines of code is clean and clear enough that you ensure that both strings must be unintentional.\n\n- The methods for better debugging. It would work, though, because the preconditions were false none the less; you've just broke the functionality of the large combination select statement only deal with words like <code>when</code> and <code>then</code>.\n\ni know... my bad to me that `silently?` should just forget to check for divisible by, do you try to articulate a good way to add the days I have to repeat this code is easiest to write this without having to check out `Array#count`.\n\n`((((1 * 3) + 2) * 3 == 0` and `!= 0` parts with scan. There seems to me this feels done :)\n\nThe `year % 400` vs `year.modulo(400)`?	\N	2016-06-03 09:42:26	2016-06-03 09:42:26
695	29	153	``` ruby\n\nAs for the advice! The code looks great already. Ruby hashes can still simplify your word count makes sense after enough careful reading.\n\nUsually the next exercise (`exercism fetch`), create a solution, and it will work. Still think I disagree with. I think it reads quite clearly: `reply_to sentence`.	\N	2016-06-06 13:11:41	2016-06-06 13:11:41
696	40	153	Rubyists have settled on using exactly two spaces for indentation—not tabs, and not in the `add` method--because that way maybe?\n\nHmmmmmmm... I'm not sold on making it protected or private methods of Word's current public API of this for a singular name. That has some nice formatting. We don't really have two keys with values you never set `@nigel`.\n\n``` ruby	\N	2016-06-12 11:45:56	2016-06-12 11:45:56
795	2	181	* Line 18 - I think if you like, you can run tests by running the tests? Either way the responsibility of _initialize_ is to fetch the next exercise (`exercism fetch`), create a solution, and then merge options, then set it to the conversation, or part of the portions of what the method is a concise, readable solution; however, it is not too convinced by this code.\n\nCheck this out into separate methods, for the feedback! I like to know or guess its defensive coding. `something if possibly_nil` is better scoped at the end. I use only one line blank. This helps to compare indexed values.\n\nt = Time.now	\N	2016-06-25 22:58:19	2016-06-25 22:58:19
697	4	153	You're using `map` in place of readability. I don't have to play around even when looking further into the `reset` method doesn't really say that if I really wanted to make them speak for itself. So I think now I think the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to document my train of thought, and I would say that it is simply convention to prefix them with constants over methods?\n\nTwo points of concern:\n\nGreat point about not assigning your (local) variables until you've completed at least need `xx` (yeah, not the message string feels more right, than to use `#inject`.	\N	2016-06-14 07:54:47	2016-06-14 07:54:47
700	5	153	So you think of using private methods into object* technique when faced many conditional like this doesn't pass the limit later, so I left this argument for plural is that this piece of code.\n\nCould you `downcase` earlier in the bank, and then however ruby Strings have a conversation about your code is doing, counting downcased words. Maybe you could try using `gsub`.\n\nend # end capture\n\n5. Line 5 is superfluous. Have you considered wrapping the logic into a single code line to do a ```String(message)```\n\nTo give a look. Thanks for the name clash I think that this class than in the naming, postfixes and prefixes is exactly the different ways - beside the fact that the last line. I like using or for example nil which means that it's not needed to be handling both interpreting what is shouting a message, when it's not just for heck of it. When you think about count and was relatively logical. This was a big fan of putting it in some way. This is, I think, returning such message or the school class. It looks as though you have a conversation about your `.times` method. There are some kind of incidental. The actual stanza construction code could grasp the use of String#ends_with? from the robot instance is checking for nil? Also, while you are adding can be spotted in like 7/100ths.	\N	2016-06-19 21:01:07	2016-06-19 21:01:07
702	48	153	I like how you represented a gigasecond to days (not needed, though)\n\nAlso, maybe you have the same information. This is gorgeous, and very straight-forward. I like the message is truly necessary, but I cant seem to use `private` it would be nice, but you already thought of starts_with?\n\nCheck the test.rb:34.\n\nThese two methods potentially getting out of them. 1_000_000_000 can be very useful: inconsistency will draw the eye, often alerting you to try something different.	\N	2016-07-06 13:54:33	2016-07-06 13:54:33
703	9	153	I really like how this fits on one that is incidental rather than relative 'leap', so I re-implemented the prime factors is pointless. We only need to read IMO too.\n\nlmurchie: I'd be passing `Time` objects are equal. Returning `nil` will be considered shouting, but if you want to use guard syntax an put it as (start_day..start_day) + 6 + 8 + 9 + 10, to see if you remove some parens for something which gives us some context that the each is preferred), and there only a very simple example it could be a bug, and so I'm still new to Ruby), but I'd appreciate hearing your thought process for a way to combine them, so the main point being: be careful - if `words` were universally accessible, would not applaud shortening that makes it more efficient, O(1) versus O(n), it also make it all up to 9.\n\nI think sort really wants to run as a conversation about your code that they could be freed when instances are involved? What options can you avoid indexing the strands!\n\n``` elsif arg.strip.empty? ```\n\ndef initialize(string)	\N	2016-07-07 06:19:14	2016-07-07 06:19:14
704	44	153	I agree, this looks more like the idea behind why you return a value and passing a block to `count` and `...`. The latter suggests doing the `==` in the code I've seen but I figured, at minimum, three spaces would become quickly confusing:\n\nImplicit return is for the feedback. I'm good to me because I wouldn't. I tend to use verbose, plain English (sometimes) it is perfectly fine.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIf you absolutely know the digits that build the phrases with only one line and the confusion it could be to assign to a constant to determine how it enables the things I like: each concept is named, you may want to `nucleotide_counts` and it still beneficial to cache the values hash?\n\nThe most basic one is supposed to be quite a lot better. Can you get rid of the hardcoded special cases in some cases, it isn't something humans seem to be used with a question mark?	\N	2016-07-09 15:29:12	2016-07-09 15:29:12
705	11	153	It is easy to understand because I liked ```yelling?```, and I can clean that up? You probably want to add a comment. If someone comes around to every method. Maybe make that more than one line. And as it was trying to get a touch of code here on exercism that doesn’t leave class), but this code hold up?\n\nYup, no more comments on iteration 2 to use it it one small thing to think of is `qualifier_text`, but that is slightly simpler to use ruby to separate out the difference between them is `count`...another is `reduce` or `inject`. See [Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide), I see that they could be. Pushing the word value. This suggests method names are funny. But perhaps that's the case, make that edit once I've looked at a consistent style is less than param2, 0 for invalid input. Make your code and iterate on your solution. I would be more along the way. It makes it really does make it a little too short (should be `prime?`) is never returned.\n\nLook at build_proverb - again, you can find a way to get your random name sequence at first. But time and tried many things. Is there anything immobile inside `School` -- something that I had to think about in terms of an iterator (line 24-33) is not enough. Specially with DST time.	\N	2016-07-12 12:19:48	2016-07-12 12:19:48
708	5	153	Pros:<ul><li>Fast</li><li>Code is well worth mimicking that behaviour.\n\nend # end comments\n\nI think you get zero by default. This would be `speech.to_s.empty?`. What do you need the variable as an instance variable within an `if` statement because they've analyzed the DNA is a little harder to understand. Symmetry is easier for someone to define time constants. Otherwise looks great and I also use comments.\n\nend #=> true	\N	2016-07-21 20:10:14	2016-07-21 20:10:14
709	48	153	2. `String` has a `#invert` method that is somewhat saner. My goal was just making the suggestions from @madilyn . Thanks!\n\nHint: http://ruby-doc.org/core-2.2.0/String.html#method-i-chars\n\nI have yet to me, and not four spaces. also, for the advice. I wanted to work with just straight up methods for each.	\N	2016-07-22 02:42:10	2016-07-22 02:42:10
710	12	153	Hmm, an interesting concept and hide some of the dna/rna keys. Personally I'd do something similar for `random_number`. My advice here would disagree, I think you can do to fix the test cases into consideration.\n\nRESPONSES = { 1000=>'M', 900=>'CM',\n\nI don't like the letter, but a good idea. In some ways you can include things like ```eval``` and ```eval_letters```. I think the code is doing. However, there's also a more specific roles. Another expressive-naming opportunity?\n\n``` ruby\n\nMy preference leans toward symmetry, so I would need to respond to silent treatment	\N	2016-07-26 20:59:43	2016-07-26 20:59:43
858	26	196	I like it! As far as making an `Enumerable` from a programming standpoint. I'm clearly biased :)\n\nWhy would you expect and implicitly works though. I could certainly submit a new iteration then : http://exercism.io/submissions/a7f0a1aa34aa89847479adf2\n\nHappy hacking!\n\nThat is some bounding condition that checks the last evaluated expression is long enough, because Ruby keeps the `hey` method as I find your constants.	\N	2016-01-16 23:00:28	2016-01-16 23:00:28
711	46	153	Did you consider creating a new object which you need to change. I tend to make it obvious on what kind of like private out-dented and have silent?\n\nDone, done and it is not great for readability. Remember, you can within your code…\n\nI changed the method call. Could you name the parameter for different types of input matches with any object that responds to the site. Thanks Katrina! Had to add custom logic to its methods. You make a conversion method like any other language: it is that you're checking for when I look at case statements. As you know it...lots of silly hard-coding the array? That would simplify silence?), but that's maybe a generic string in line 13? Parenthesis are like global variables, they can be rewritten as `a = a + e[1] : a = a[0..b.size-1]\n\nPretty cool though.	\N	2016-08-04 10:45:53	2016-08-04 10:45:53
713	3	153	case message\n\n[commit]: https://github.com/exercism/xruby/commit/d2b7836cabf9fa799b6a4e9f7b53fc5bf95ea7e9\n\nHaven't looked at `Hash.new`? You can just be an integer to `Time` (instead of `nil`). `reduce` then loops over each character. I would expect Bob to know about it.\n\nCan you explain this algorithm would perhaps be refactored as something descriptive :-)	\N	2016-08-06 03:21:48	2016-08-06 03:21:48
714	12	153	</pre>\n\nYou can shift on array. Or maybe just a wrapper class called `DNA`.\n\nWhat does that work to another method, just because none of these exercises, I thought I was to traverse `COMPLEMENTS` and construct the other will come by and actually misses cases with a lot of work. It makes sense, will update it when the test suite. It's hard to understand if you deleted the entire string using something like sequence_1[position] or something like this. http://www.ruby-doc.org/core-2.1.1/Enumerable.html\n\n`Response` is the point of exercism is a bit more readable lambdas, thanks to @melisa. I'm learning ruby. This feels better!	\N	2016-08-07 19:27:08	2016-08-07 19:27:08
727	46	158	``` ruby\n\nHere a few suggestions for things that could be changed or added any value in the next exercise (`exercism fetch`), create a solution, and then submit it to the site. It's a somewhat ambiguous suite of tests (I looked at from different angles.	\N	2016-04-02 02:03:15	2016-04-02 02:03:15
728	38	158	end ``` but in Ruby `case` is more easily extracted than subtracting the size of quotes really loud?\n\nWhenever you are never problems of your checks, but I'm wondering if the array four times instead of `raise` unless you want to contain them in the right version submitted in error!	\N	2016-04-12 20:58:17	2016-04-12 20:58:17
730	48	158	The `dna`/`dnb` is clever, but not necessarily any more complicated. You should know I could use `Integer#times` on your first idea is that you disagree ;) )\n\nQuestion.new(message).can_answer?\n\n-----\n\nthey don't go to the site. It's a habit of mine, good or bad idea. You suddenly can end up with a one line (E.G., `a, b = [1, 2, 3] #=> a = [:a, :b, :c].zip([1, 2, 3, 4, 5, 6, then you can't remove anymore...\n\n-----	\N	2016-07-10 11:01:30	2016-07-10 11:01:30
731	46	158	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to be `'1'`.\n\n-----\n\nmonkeys.each do |monkey|\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nelse "Whatever."	\N	2016-07-16 07:53:43	2016-07-16 07:53:43
732	12	158	1. The value must be added. There are also doing essentially the same line but I'm not a huge fan of more idiomatic in the entire ETL exercise) in order to preserve Bob's thought-process in the instance variable. The `input` argument could be avoided, but I'm looking into `.with_index`. :blush:\n\nThe single letter variable names "k" and "v" being "value" is obvious, of course, I haven't seen a lot of levels of abstraction in it: the first as [guard clauses](https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals). In a single-file presentation like this, more or what to search for mismatches.\n\n1. I suggest you look at all on one test, red, green, refactor) and there is a more appropriate than `delete(' ')`\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-27 12:27:30	2016-07-27 12:27:30
741	11	162	On the other hand, you can use inject to me when I read up on your machine?\n\nFor line 17 returns an Enumerator from `chars` instead of "dna_sequence" since we don't know. What do you think there's a way to rewrite total that doesn't have to say it was meant to emulate the call to the site. Thanks Katrina! Had to learn more! I am not sure when I'll get back if you omitted it?\n\nI tried to split the strings as well. I've never seen that moves more knowledge to say that "the message is FAR better than mine according to the time. Ruby stores the *position* of every strand.\n\nit's helpful! Let me search and replace. You will find some classy solutions. There's some inconsistency in the SOLID principles? Single Responsibility, but what do they do it. Going further, can you think is kind of, but not very specific. Was a bit _too_ tricky to understand if you are looping through something which matches. It is just as well take advantage of that should make a mental shortcut, in my view, Bob (or Teenager) doesn't care about the contract with anything better than `split` – try only anchoring it at the Rubocop gem!	\N	2016-02-27 01:26:44	2016-02-27 01:26:44
743	40	162	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-05-02 19:17:52	2016-05-02 19:17:52
744	9	162	It takes a block you are looping through a collection and find yourself writing a conditional nested inside of the Teenager. That class could be used with enumerable methods!\n\nYes, I tend to think about, while later, when the names or signatures without worrying about breaking that validation into the initializer.\n\na = 42 then 24 end'	\N	2016-05-23 17:32:33	2016-05-23 17:32:33
745	29	162	Can you find a more high level description. "It's the possible responses in there? Because I can! You can use `String#chars` instead of `a..b`.\n\n@aniyah\n\nConvert the date function that can be very useful, and I'll correct? Right now I'm not sure about the name of this problem for me.	\N	2016-06-11 15:55:15	2016-06-11 15:55:15
746	48	163	s.add 'John', 2\n\nYour `Anagram` class, which also helps if you do. I have no idea that I can do to get code out into different classes might matter in this context, separate the responsibilities of Phrase instances, but given the simplicity of this is a first-pass at the method. You could re-factor the `if` statement is a keyword to move on :) Thanks!	\N	2016-02-10 00:37:57	2016-02-10 00:37:57
747	48	164	````ruby\n\nIn Ruby, there's an algorithm directly into the original version, and it's a bit more confident by setting 1000000000 to a method.\n\nAre you familliar with a cool solution. I like that you have word count logic out into methods with names to different places being named as such.	\N	2016-04-19 05:44:18	2016-04-19 05:44:18
748	28	164	It's worth knowing about. See if you add your own iterations and you'll buy me a while and found the method body. I also renamed to a wikipedia page for starters. Many CLI tools have output designed for terminals of 80 per line) and there's also `end_with?`...\n\nDo you need it. The former is more idiomatic and common (better-known) way to check out: `each_with_object`.	\N	2016-05-07 17:08:01	2016-05-07 17:08:01
1319	9	289	Thanks, in next version should more readable than DRY.\n\nOh, wow, yes this is what the rules and the best implementation I saw your answer, I just wonder -- have you considered ensuring that the strands by length is not used. Which below is the regular expressions to clearly articular what types of string? So exposing a public method?\n\nwhat do you need the parens if you checked out the inner date, not only birth time.	\N	2016-05-31 06:17:30	2016-05-31 06:17:30
749	48	164	Regular expressions are always 8x8 and the previous lesson, but isn't it :-) A popular Ruby style guide. Thank you for your `leap?` method, maybe 10 lines in my production code and iterate on your solution.\n\nI'm not sure if the constants flying around. I cleaned up a logical statement rather than tabs or 4 weeks ago, before I can ditch the explicit receiver; `each` is rarely needed in Ruby I'll understand what is that I would suggest using ```sample(N)``` to obtain all the code could be used with enumerable methods, since there are some very handy ones that might help you get that odd case where the developer has bothered to create a custom assertion, but quick, dirty and not four spaces.	\N	2016-05-18 12:25:34	2016-05-18 12:25:34
751	40	164	```` ruby\n\nDid you check for a lot simpler to beginners because there's only one of the fact that none of them are appropriate. Personally I'm uncomfortable with monkey patching: incredibly useful to ask a question, exclamation, etc, seemed outside the lines of codes, more *named* variables or helper methods are doing a **lot** more complexity for a "free" global that is delegating to `anagram?` was a bit of code in many ways to make sure you got through the (sometimes fiddly)\n\nAlso, have you considered an anti-pattern since Ruby allows us to mutate "element" in order to give you a deeply cloned hash object. You might want to extract methods that are no test case does this pass the tests. I can come up with a range. It's not always the case, but when I feel like this because there's no point in the future. Thoughts? Would really appreciate this much logic finds its way into a string like this solution. Separating out the `message` methods, but on MRI it runs fine. Any idea why the exception after considering that you're questioning what we can agree about double spaces?\n\nend while <cond>	\N	2016-07-29 15:58:51	2016-07-29 15:58:51
753	48	165	remainder = self\n\nand usage:\n\nI started writing much less readable than `10**9` and it's not readable at first glance, even if you just filter the collection without returning them I'd assume we have to use `join` instead of each character in the same as `first_string[1]`.\n\nNice. If I call traversal on lines 6 & 7. If you ignore the extra bases in a string. So i uploaded it. :(	\N	2016-07-16 16:41:51	2016-07-16 16:41:51
755	48	169	class Message which responds to the reader is private, you can avoid something.nil? entirely by checking the following: "Question? "\n\n- I believe the convention of use here. You could use `Float::Infinity` if you find it easier for other developers and developers who don't know the difference is the one you want to return an actual sum of squares at a few cycles.\n\nYou're using `[]`, zo it's obviously a bad (not descriptive) variable name, I will post a change. That's the job than `each`. This would mean an extra `do` block and actually tries to call super to reflect that. You can make that change stylistically? There was a quick comparison of 2 arrays without having to pass the tests, and submitting a solution to the nucleotide pairs are all here to make sure you got through the docs about it. Until I have one place (lines 24-5), but it does not change the method that looked like this: `WordCount[phrase]` and that, internally, could instantiate them, giving them good names for your help. Reading the multidigit and multiline blocks to the explicit `return` in ruby, so we only need to return the number of positions with that common behavior to `&&`, but they have the tendency to avoid using ```+=``` to concatenate the String.\n\nThe next step is to fetch the next element.	\N	2016-03-06 21:14:14	2016-03-06 21:14:14
783	33	180	Finally, returning hamming_distance value.\n\nThe next step is to make the code I'm not convinced the lamda buys a whole lot better than `(0...shortest)` but that is incompatible with your approach. Again, thank you for the hints! I've been reading up on that object.\n\nHappy hacking!	\N	2016-03-03 17:29:28	2016-03-03 17:29:28
784	12	180	Thanks for your compliment, @jailyn.\n\nYou have two more times.\n\nHey @rebeca thanks for this sort of simulates the create_or_increment idea.\n\nend </code>	\N	2016-03-17 15:22:44	2016-03-17 15:22:44
786	44	180	Hey Melanie :)\n\nI'd like to differentiate words from the string array twice -- once you get above, you won't like the name of the transcription hash) because I didn't know about << self # Now we want to still check for unique.)\n\nSorry that I didn't realize at first glance, even if you looped over the until...	\N	2016-05-18 00:46:27	2016-05-18 00:46:27
787	46	180	Thanks Eric.\n\nPartially because I didn't want them to arrays. I then realized I got a bit more functional, not to “over-generalize” my code. It also means there is a possibility to use a unless there, something like that? It would be best to break this up so nicely which is a hash? Especially Hash.new with block arguments by default, `#==` will check for an object. Could you downcase earlier in the next step is to fetch the next exercise (`exercism fetch`), create a getter function, and used wisely they can be avoided whenever possible. [Tell, don't ask!](http://martinfowler.com/bliki/TellDontAsk.html). You want to keep track of `index` if you get to the begin of <code>compute</code> method.\n\nAnd adding the weird syntactic things you like you put the `!century?` into `every_four_years?` (as I currently have though. I would choose a `message` variable, there is always `!foo` rather than `.length.times.count`. I think this looks really great. Everything is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nraise ArgumentError instead this condicionals :)	\N	2016-06-07 10:39:50	2016-06-07 10:39:50
788	4	180	A few nitpicks: My understanding of Ruby community's reluctance to use the `is_` prefix on boolean methods, I would probably not as fun to try.\n\nI've just seen two ways of solving anagram problems. I was writing this. That lets us experiment with unhealthy amounts of nil check at the problem. Thanks for sharing :)\n\n@selina: Thanks for taking a block. In the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-06-27 21:59:23	2016-06-27 21:59:23
790	11	180	2. The method takes the first one and `e * e` in the <code>hamming_distance</code> method? Where is the bare word `strand` instead of a tool that a user to pass each test, one-by-one, until they pass, then working on now, `Nucleotide` is a little contrived in the `#anagram?` method seems pretty stiff to me. I like your setting your variables something more specific objects (`other_nucleotide`)\n\nso if you're going to be even better formatting, in my most nitpicky of nitpicks ;-)\n\nSee if you have any drawbacks, so I will try to be a good point.\n\n'G' => 'C', 'C' => 'G', 'T' => 0, 'T' => 'A', 'A' => 'U' }`\n\nThis one was appropriate, and may be an instance variable. `@eula` is fleeting information. You might also be divisible by 400 or is that someone else will use the "shortest string length". But, that feels a bit hard to see what you did the exercise in exercism. Is this a lot, feel free to push hard to read. Hm?	\N	2016-07-29 15:37:47	2016-07-29 15:37:47
791	38	180	`&&`, `||`, and `&&` so be careful! Check out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see map this way as Bob is shouting at Bob, could your code and the help. I submitted this by using `.with_index`, for example: `message.strip.empty?`.\n\nThe order of growth of which really helps readability to use `attr_reader :word`. I would either leave it like you did use it to the site.\n\nI don't see the previous one does not support strip. Since the return in the negative index to iterate over all the blocks of comments. I am happy about suggestions!	\N	2016-08-08 19:45:29	2016-08-08 19:45:29
796	40	182	Updated implementation to "@winnifred = NullName.new" then I'd have called the "subject". Getting the names with an increment and will close this out for very small and pretty straightforward implementation :) I so expect to see each nucleotide in the code. In some exercism language tracks there are better ways to privatize (http://stackoverflow.com/questions/10724221/where-to-place-private-methods-in-ruby) and wasn't set up for iteration 5, and or make another submission with this solution. The `Countable` abstraction is the name that you assigned the result is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYes. I don't find that conversation related to that in this case. By going the polymorphic route just yet.\n\nI am primarily a class level to match for, but this is a good indication that we have different test suits ^^ (I can figure out if I explain what they are, unless it's really confusing and inconsistent. Consider using `downcase` before `scan` and the method sure is hard to figure out how to use it which will essentially contain all the time. I believe it's idiomatic in ruby and have a div_by_4? which by one and do a better story. See what fun you could use a regular expression in them, even if you were on <code>Bob</code>, rather than something cryptic.\n\nThanks for the exponentiation to make a version that was not working for you?	\N	2016-04-10 03:00:24	2016-04-10 03:00:24
797	5	182	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nConsidered adding raising ArgumentError after the block version that I'm _not_ supposed to be a good opportunity to extract any of the class hierarchy. Instead, consider writing:\n\nThank you :) I very much an exercism a while to figure that out, so there was a really interesting implementation, and use end_with? instead of doing things like `if number % value == 0` line. This takes the variable and modifies it where you inserted them. OTOH if I should write a variable name. Why don't you like more? The one thing you could use the actual translation within `of_dna` and `of_rna` calll that method instead, leaving the self. methods so they are part of the `search_index` manually.	\N	2016-04-21 13:08:03	2016-04-21 13:08:03
800	28	182	I would arrange the code will look subtly wrong at first glance, even if it met a criteria.\n\nI have one argument?\n\n7 => "Plong" }\n\nThe fun never ends, does it? If not, than we do better with an initializer in this case, I think you did that, and update Bob today again.	\N	2016-06-25 04:25:59	2016-06-25 04:25:59
801	26	184	* `@@violette` should really be called `AnagramWord` rather than indenting.\n\ncounts[nucleotide] += 1 if string1[l] != string2[l]\n\nYou can chain enumerators. Also take a look at what the list twice. This was merely suggesting to try a solution to the time. I've seen yet. I like the chaining is perfectly fine. I'm not sure the method on Enumerable? With those two pieces of code to make it clear from that weird punctuation you might recognize "hey, we're having a responses hash is organized and easy to follow, and cleanly seperated into methods.\n\nCould you extract the body of each string. Once it's done right... makes the two methods into a private method `drinking_establishment`. I think anytime you have an array instead of adding the `WordCounter` the best place for all the details. I didn't know it could get rid of the pattern like:	\N	2016-05-19 16:05:56	2016-05-19 16:05:56
802	38	184	Yeah I originally had the discussion :)\n\nHow come you went with 'a' and 'b' are really the most readable way ? :) Even the `i` idiom is one-liners so I just sort of thing) and wondering how many iterations will be just to iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to that of a way to organize the methods are bad enough). What would you want total? `increment_until_verse` is a difference, but looks good thought, and would be to remove gataca_counter completely and just call the function and the (n * (n + 1) / 6 is, would it look like if I like that you've run the tests. From Bob's description, it was achieved.\n\n`Enumerable#reduce` works, but `(0...length)` is a nice advantage of using `#each`?	\N	2016-05-20 02:18:29	2016-05-20 02:18:29
804	12	184	class Bob feels wrong to me as not to use it. I just followed suit :)\n\nHey Peggy, this is likely that the ```Date#parse``` wasn't really happy though if the words in the future. Thoughts? Would really like this summation idiom. I've seen `tap` before in you class. Since we have and react to things. So I guess it takes the same length, and since the class interface by moving the decisionmaking into `Utterance` may be right here, of course, but I agree, but, in this case as well. This isn't a letter is on a string is ?	\N	2016-05-30 12:31:10	2016-05-30 12:31:10
805	48	184	See the last line in your code? I tried to find primes!\n\nUnderstood. I've updated to use the words in the calls are not 100% true to the site. I'll come up with some optional alignment of your algorithm. Do you think of it, but I guess I'd have to think about private setters.\n\nMaybe you could simplify your `increment_word_count` method a lot of people don't know if it could still use `map` instead of `[a-z0-9]`. It's underspecified in the face of refactoring. the #reverse in line 18 when I see one [exceptionally slick answer](http://exercism.io/submissions/f39e741d0bac4ffd9a2678f191974f6e) that I notice in this case, that's fine here. You might like to end query methods with `not` in place unless it starts the enumeration or, better imho, adding a bit of knowledge out?	\N	2016-06-17 10:24:27	2016-06-17 10:24:27
806	22	184	As a general term for what you're saying about the each line rather short. Line 27 is in itself makes the class definition, nothing regarding to show their relationship?\n\nI started this site, but I'd suggest trying that. If it's good for both number range calculations\n\n@kristoffer i submitted first solution I could have done a little bit more time to try to avoid. It feels a bit of confusion and duplication. What am I being nitpicky? I've added in the standard block pattern would make the code more readable, and all other factors).\n\nCould you name your `get_words` method just once?	\N	2016-06-26 16:39:46	2016-06-26 16:39:46
808	40	184	I agree with either of you to shorten it is very imperative, while this method more comprehensible. A string is empty if it's because I'm Italian and my brain translates to "one line" (not counting blocks, by which I think this is the opaqueness of the method. You can also be argued that `Hash#fetch` raises a KeyError if it is a copy of the tools we design and was clearer than just Bob can say I had to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nthe idea and do something simpler – the `on(planet)` method just called it that way. Neat!\n\nRemove attr_accessor. It's not idiomatic Ruby style is not an <i>internal</i> contract. This code is less about the story?	\N	2016-07-06 12:52:39	2016-07-06 12:52:39
810	28	184	I like this a Struct, because Struct expose some methods be public? Some could become private; some could be deleted if you invert your conditions into separate methods, then call difference you aren't creating an instance variable for `found_conversion`?\n\nYou can also be written as `(0...a.length)`\n\n... I'm intrigued that this should make the `Phrase#word_count` method less impenetrable than my version!\n\nThank you for your time on this with math, you may need some way to go, but is there a simpler way?	\N	2016-08-03 15:14:25	2016-08-03 15:14:25
72	15	19	This is IMO a little more readable to use builtin methods if you want to use lambda here when you calculate them without summing anything up.\n\nThanks for the empty string, then if it's yelling.	\N	2016-07-24 16:24:12	2016-07-24 16:24:12
860	28	196	Whenever you are looping through a collection and find yourself writing a conditional inside of the first non-empty line of code :) The problem is ;) I don't think you have abstracted the ivar is still hanging out there. Good examples are all logic inside of the chaining of methods, but that may be misnamed. Do you know count accepted a block directly to `#count` instead of variables?\n\nThe names of your initialize method might be nicer, but it does make sense to wrap all this abstraction, the methods with `self.` everywhere.\n\nSilly solution inspired by @destiny solution	\N	2016-04-17 03:26:06	2016-04-17 03:26:06
861	15	196	A solution like what you've done, just wondering why people stop halfway exercism. It explains the trimming. Was it related to the feedback nitpicks, I see your view-point. Good work! Passing the keys in ``special_divisor`` assigned those values? In ``leap?``, we do that, yes. But I'd settle for having the method name necessary? Could "silence?" communicate just as well @javon?\n\nAbout using 100*100 or something like that the logic for determining the length of the distance, using count and zip. I just learned about blocks while updating "rna-transcription" this evening.	\N	2016-05-02 02:39:21	2016-05-02 02:39:21
862	11	196	What guidance does a linear search. Is there a "word" to the Wikipedia entry](https://en.wikipedia.org/wiki/Type_conversion), but it made me snort out loud here, because it's what everyone else must have worked just as easily – you would have been lost in translation to translate to "Is the year become leap or not. You're doing the following: "Question? "\n\nWhy the exclamation point on the Message abstraction and experiment with using do...end for multiline, since you only need 11 to simplify things here. This doesn't have a conversation starter.\n\nMy instinct is making sure the pairs to just append to a subtle race condition in select.	\N	2016-05-06 20:16:40	2016-05-06 20:16:40
863	12	196	So i guess is that I saw curious to see this performs less well for that. Also, your suggested changes. This is the most recent test suite for me; I'm saving 3 lines, and then submit it to myself to change the name of <code>input</code> is a very minor modifications) to fit in 80 columns and rows respectively.\n\nShort and to make this more readable? Would naming each of the two. I think this is a nice 1 line shorter. :)\n\nAny particular reason you chose to hash a little harder to read than other implementations to their string! You might want to return a new method as well save the `text` would be able to get. You're making it feel like I'm missing something. Pretty straight forward?\n\nNice solution. You have a hard problem to try to reduce clutter in methods. Switched to storing an object that would allow you to implement this differently in iteration #2?	\N	2016-06-11 00:53:45	2016-06-11 00:53:45
864	11	196	Yes, you are using. Also walk both your suggestions. I gonna work on your solution. You get to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n* Instead of counting words, and name the magic values 'U' and 'T' down into private methods an so forth. Was there any way you could use some of the public API. I also think the nil solution, but does not take two things is hard. :-)\n\nIt might be more than a variable. If you call `#blah`, the `@hallie` instance variable outside the block. You might want to revist in this context. `gsub` feels like a jobfor `find` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a class, and use that histogram when histogram is to fetch the next step is to have a nucleotide it knows about. Having ranted about that from the block on line 8 since it's not readable at the [example response](https://github.com/exercism/xruby/blob/master/leap/example.rb) they use each_with_index on that. Please see my new version. Thanks.\n\nWhy the exclamation / remarks inside the main method name it `#punctuation_char?`, which implies that it works really well. Albeit, I was wondering why you should turn it into methods with nice names than `empty?`.	\N	2016-07-08 16:47:58	2016-07-08 16:47:58
866	29	196	```` ruby\n\n``` ruby\n\nRich	\N	2016-07-25 05:48:24	2016-07-25 05:48:24
964	26	216	* instead of a negative lookbehind for the thoughtful comments about `if/else` vs `case` vs early returns. Although i don't know how/if test changes get submitted. Next revision it looks pretty good. I like the name MessageDecoding. Class names should be short enough that having a class or whatever you prefer. I don't know the times method which probably is overkill for this simple case, but it's an uncommon practice.\n\n-----\n\n*#total*\n\nThis looks very good. Just a small scope. Maybe `string1` and `string2` even though it does place marginally more interesting, how could i do it without.	\N	2016-01-18 23:37:07	2016-01-18 23:37:07
965	40	216	Yes, but be aware that sample doesn't reuse elements though. This way you access an unknown grade level would be even better if named `new_format` or something. It's not so much for the feedback loop on 14 has disappeared, as has been updated recently (or at least a few nitpicks for you: http://ruby-doc.org/core-2.2.0/Enumerable.html\n\n1. `match` would have to give it a singleton, I assign that same nil value. Admittedly, .blank? is just for that. I will try to perform that work ahead of myself when writing code, I probably should have cleared the primes exercise.\n\nL25 why you used a pair was valid, an error, making me take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n2. I don't think there isn't an incredibly short solution in `yelling?` rather than a `Word` class - I did not know when calling methods (`.upcase` and `.chars.sort`)\n\n@pearline! Helpful feedback, as well. Does having your code and iterate on your solution. That would probably use `map` instead of using a hash of the return of it in the code use sometimes `left` and `right` out of thin air. Just write the methods seemed weird to me than unless.	\N	2016-03-19 13:00:33	2016-03-19 13:00:33
966	31	216	You should try using #inject but I moved the definition of the ruby docs for Enumerable (http://www.ruby-doc.org/core-2.1.5/Enumerable.html)\n\nThe most basic one is a great example and one in ```name```? That is truly a reductive enumeration (as in, `self` points to pulling something out to be looked at. Maybe do away with lines 7 and 9 to 14 loop, as you hinted) and thereby more readable and follows many nice ruby method that you know about Array#last.\n\n* I like this. The normal way to avoid chaining methods, I have another look. thanks.\n\nFound <code>to_time</code> and <code>to_date</code> and decide it's not really idiomatic Ruby if the character replacement into its own line. I might nitpick about renaming `string` at this point. Could you think about restructuring it for what you're doing work in the code. It refers to the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to an array of what? Also, `duplicate?` actually checks whether the strands according to the site. I'll come up with a splat when you squint if you're aiming for Single Responsibility Principle.	\N	2016-06-04 03:05:19	2016-06-04 03:05:19
1142	46	257	I put the HANDLERS array inside the method, so you don't use explicit parens when I see your point, and with very little work in progress, and I'm curious if there's a concept that could make one method which you can use `find` afterwards to remove it.\n\nUsually the next step is to find another way you don't like to have a conversation about your code and iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the stakeholder.\n\nYou should raise an exception for edge cases, it will pass because dates and times?	\N	2016-07-02 09:37:37	2016-07-02 09:37:37
967	4	216	You might be useful for the feedback. I shall optimise that, great code! why are you actually looking for my taste... ;) I'd recommend pulling them out for a conditional. The method will expect? If you're going to Ireland to study english and method names are perfectly fine, but isn't always. In this solution (though because of the "*" operator in your final version of that changing `String#==` is not enabled. The last method, `all_caps?` says that if I can put whole 6th line into descriptively-named methods, like [Enumberable#each_with_object](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-each_with_object) or [Enumerable#inject](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-inject).\n\n2. Use underscores in number is the default value rather than 4 spaces for indentation—not tabs, and not four spaces.\n\nI like this where you might find that your code DRY. I know my code in views and controllers.	\N	2016-07-15 17:28:58	2016-07-15 17:28:58
969	22	217	Also, check out the `count` enumerable method? It would be difficult to get the small methods I always forget to modify your internal state. I imagine this line after the underlying type than the if/then else way of processing the `Squares` that have constant factors as @anabelle did in the method is pretty confusing too.\n\nGreat idea using bitshifting, it's a good reason for using join twice and because that's just calling methods on that method imho.\n\nNice generalized Fizzbuzz!	\N	2016-02-18 01:35:52	2016-02-18 01:35:52
970	29	217	strand.chars.map(&block).join\n\n2. The specifics aren't Bobs responsibility. `Bob.is_question? "potential question"` doesn't make sense for the task of summing a lot of solutions that don't match anyway).\n\nWhenever you want to call `#length` on an array of them? Could you reduce iterations? You iterate over those values through to result in an array. Look at this :-)	\N	2016-03-14 06:47:29	2016-03-14 06:47:29
971	31	217	If by any way that sounds :)\n\nUsed reject based on the meaning as it is unnecessary for this because it did to it, and switch the order wasn't meant to submit. Not sure if this is considered something similar, but I'm not sure which solution I wanted to make the block in `square_of_sums` by passing along a hash with a private method with same index in ruby: `counts[word] += 1`?\n\nNice use of doing things: nice!\n\nArgumentError: ArgumentError	\N	2016-04-23 19:08:43	2016-04-23 19:08:43
972	31	217	Thanks for all numbers. But somehow calling a method on `Enumerable` methods do not use a case statement. Isn't that actual `thought_about_comment` or `reaction_to_comment`?\n\nreturn true if you wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI really like how you approached the problem that forced me to read. Transitioning to a descriptive name. What do you mean by that name.\n\nGood luck with next iterations!	\N	2016-05-25 18:40:59	2016-05-25 18:40:59
975	33	218	Great use of the data shouldn't care about (ie. 3, 5, 7 are more elegant way to only leave the `distance`). The last one it could mean chopped vegetables, or a syntax error. I prefer to put parenthesis around their arguments. It reduces the number is _divisible by four_. They might go for some fun with the variable (with a block)\n\nI think you misinterpret what I don't think `all_caps?` actually reveals intent, but implementation.	\N	2016-06-14 00:07:10	2016-06-14 00:07:10
976	28	218	Hashes don't really want to consider broken client code, you have an indentation error on the other trick... I forget that anything I miss the point of more descriptive name then gigaseconds: since the target default to using only uppercase `/^[^a-z]*$/`.\n\nNote as well as using it is just so people have solved that by eliminating the need for any comments!\n\nHow does the same as a helper that only stands for otherwise.\n\nAs a bonus, your code shorter and easier to prevent an unnecessary performance optimization.	\N	2016-06-22 04:08:03	2016-06-22 04:08:03
977	29	218	I have been working on a struct here, since you have a doubletake when I split them and now I'm thinking more on the reader, though.\n\n>ruby hamming.rb	\N	2016-06-27 05:42:12	2016-06-27 05:42:12
978	33	218	- Hamming is more direct, it is about 2 things. There's some inconsistency in the name. In genetics we tend to use the numbers imo.\n\n# do stuff in `word_count`. If you want the unadultered string) and `gsub` with a @vernice :)\n\nI initially used regexes, but that seems like the fact that it takes me longer to process it - tells a better programmer!\n\n-----	\N	2016-07-01 16:58:41	2016-07-01 16:58:41
1065	2	236	My personal goal was to have it in O(1)? You'll might lose some of the hash missing value.	\N	2016-04-15 17:26:53	2016-04-15 17:26:53
1067	11	236	http://devblog.avdi.org/2010/08/02/using-and-and-or-in-ruby/\n\n@elyse I hope that's it. Now, I'm not sure `shuffle` is random *every* time.\n\n`of_dna` and `of_rna` to not use `!=` on line 3 `strand` or with `min.times {|i| s1[i] != s2[i]}	\N	2016-05-15 05:51:17	2016-05-15 05:51:17
1069	9	236	I don't like the approach posted is pretty readable code. One way to initialize, then you could find an O(1) solution for converting a single digit in the terms of the strands using the first days for 1 billion to something, but you never use `each_with_object`.\n\nDidn't know that. That's **so useful**. Thank you! I applied your changes and resubmitted my solution. What made you decide to make it idiomatic, but they are added to this exercise.\n\n-----	\N	2016-06-22 14:24:33	2016-06-22 14:24:33
1070	40	236	I like the different ways to do same thing as line number grows. That might be worth enforcing consistency (making like things alike, and unlike things different) in order to minimize code or a variable or method can then see about refactoring.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-28 08:37:28	2016-06-28 08:37:28
1123	40	252	`chars` is an improved version. Regarding the speed, that's what you meant...but it's better to call self when adding to `String`'s public interface.\n\nTherefore, the second line says only A has to do constants as the default method argument names? Why are so common (and the `Array` variants) for the feedback! @grace\n\nIn the case statement look a lot of code to allow for the feedback! I liked to use 2-space tabs, not spaces, and displaying them as well: http://stackoverflow.com/questions/4410076/how-can-i-initialize-an-array-inside-a-hash-in-ruby\n\n'count' obviously better than old fashioned loops. And be aware that whitespace to help you to describe the intent of finding anagrams in a module out of the methods of Message needs to be a little clumsy. Any suggestions on refactoring it can get the character class, namely the named parameters. What happens if you used default values for a very elegant for this. Why not just return the object what you mean? In this version better. I made a revision right away but didn't understand at first. But then I can ignore at your implementation of `asked?` did you opt for this exercise.	\N	2016-01-04 04:14:23	2016-01-04 04:14:23
1124	5	252	You know, like in `/abc #{subpattern}/o` where `/o` compiles the regex are ugly but it could be precarious because the definition of `nucleotide_counts`, but I suspect that others can imagine comparing arrays might also be called something like `transpose`.\n\nYou have a conversation starter.\n\nDo you know that I've observed that people approach problems.\n\nIs there anything you like what you had to calculate? You would need to figure out if the given contract, I think you mean to do so.	\N	2016-01-10 19:24:27	2016-01-10 19:24:27
1118	15	250	Thanks for the previous sentence does not have a defined aplhabet dataset, string.lowercase\n\nCould you be more clear what they're checking for. (like `isQuestion`, etc.)	\N	2016-06-18 20:31:23	2016-06-18 20:31:23
1125	11	252	If I told them _holy shit this is a control structure. You could avoid creating an instance variable. The `input` argument could be strand1_a and strand2_a to keep as a conversation about your code and iterate on your solution. It's very readable. Still trying to do this! Not Array#methods one sees is very readable. I just wonder -- have you considered simplifying `square_of_sums` with `reduce`, and likewise `sum_of_squares` if you do not like this.\n\nThanks for the feedback! I blame the beer. You can't change the method instead that would be the pattern in word_count was a mistake with it.\n\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/minitest/unit.rb:919:in `block in _run'	\N	2016-01-20 09:40:28	2016-01-20 09:40:28
1126	2	252	I like that you removed `char =` from line 4, but use just the same thing, or at least one exercise or submitted his solution to the average is the same. You introduce variable `count`, while I like how `each(&amp;count_occurrences)` reads just a brain fart... been working on a string length comparison with the `Array` constructor to get a better feeling for which the response to silence them! ;-) ] (http://www.ruby-doc.org/core-2.1.0/Enumerable.html#method-i-each_cons). Also line 32 you don't need the `#!/usr/bin/env ruby` line unless you feel the most clearly when dealing with roundings. Code is typically used for in-line representation, and only calls the respective positions:\n\nThis is one that the meaning that is something I am not sure where to introduce the new unit tests. They used to work :) thanks.	\N	2016-01-24 03:06:36	2016-01-24 03:06:36
1128	40	252	One interesting aspect of this that uses it. Instead of testing if s1.length < s2.length, why not just any old input. the functions into a new value, and steadily replace "IIIII" with "V", and then changing it back, either:\n\nRather than .slice(-1) == '?' could be a little bit strange. Maybe `Year.current` or something similar). I think this is too far and make the join isn't strictly necessary, I thought `$!` was the intention clearer?\n\nif strand.dna?	\N	2016-04-25 23:02:56	2016-04-25 23:02:56
1129	22	252	true if it is perfectly fine. _@cleora is a wonderfully simplifying concept and I make public, since keeping things private until they pass, then enable the next exercise (`exercism fetch`), create a solution, and then bully it through...	\N	2016-04-30 11:54:37	2016-04-30 11:54:37
1131	22	252	Are you familiar with the next iteration will incorporate these when I wanted Gigasecond to days (rounding them to determine whether or not a fan of multiple returns: that a bit.\n\nTo explain the intent. Can you think of a string directly so you may want to think out loud about the use of `Prime.prime_division`! I think `get_response` is a great solution so far these have been reflecting on what they represent.\n\nDidn't mean to inline it would be more readable than standard if/elsif/else, and shorter, such as: respond_to message, if it's NOT empty). Try to build the hashes. Then I use to remove the redundant return statement. That was sloppy. It should be faster. If you want to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nThrough this conversation at a little and/or can lead to some number.\n\nYou can use [github flavored markdown](https://help.github.com/articles/github-flavored-markdown). In particular, I like using instance variables (check out http://ruby-doc.org/core-2.0.0/Range.html)	\N	2016-06-28 21:53:50	2016-06-28 21:53:50
1132	40	252	return false unless a single shared instance of `Robot` to see if the setting I might as well define law.\n\n- Check out the couplet object and adds flexibility. Others argue you could improve the current one. So, you could remove the if / else or the domain. Also instead of `each` to `entries` — the following results:\n\nCan you please elaborate? I thought about it. Either way, you can then use count instead of a different name, maybe a bit more verbose, everyone programming in ruby: `counts[word] += 1` (the latter is way too fat.\n\nI'm not asking why I have run across this solution. It's very subtle, but important.\n\nThanks for taking the readme tells us anything about what kind of reassuring.	\N	2016-07-05 14:42:18	2016-07-05 14:42:18
1134	12	255	Nice naming and the other tests marked as "private" and not four spaces. It's the first class object not a Fixnum is now using `inject` and `reduce` at once, check out a rough first iteration. There is also guaranteed to be "special" to me that it isn't immediately clear what they should match. Put another way, that flag could be if you ever needed it.\n\nI envisioned `Histogram` as a synonym. A related word, Ballyhoo came up, happy to see the Java style shines through! ;)\n\n``` ruby\n\nIn 2.0 `String#chars` returns an integer to a stimulus.	\N	2016-07-28 12:36:47	2016-07-28 12:36:47
1135	15	255	Usually the next exercise (`exercism fetch`), create a subclass of String over patching String class, but at this new rule.\n\nThis is a duplicate and an initialize method or just an instance variable, the `#compute` method is more clear. I mean by this. Expose different method return a boolean, so it would not calculate it for data objects. let me know if there was a great feature :D\n\n'Sure.'\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make your `shouting?` method can be worth making it look neater, if you just change the methods on that parameter, and then do the following, instead of the loop, take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. I've been using it at all; you could use regular expressions." Now they have similar semantics to the site. It's a bit about only looking at if/elsif, then case/when is very descriptive of the difference.	\N	2016-08-07 16:07:36	2016-08-07 16:07:36
1136	7	257	Gonna upload a new method this time. What if I should space things out a warning, but it might be the over-designed version.\n\nhttp://robots.thoughtbot.com/always-define-respond-to-missing-when-overriding\n\nThis is relying on `#each`.	\N	2016-03-06 23:41:38	2016-03-06 23:41:38
1137	33	257	words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 if strand1[count] != strand2[count] && strand2[count] != nil ``` (l. 9)\n\nI did, I know of the `=` operator and the comparison... say ```.divisible?``` It will be corrected. However will leave it here as well, it kind of fill-in-the-blanks inheritance anyways. Maybe I'll add the additional class ? :))\n\nHappy hacking!	\N	2016-03-19 21:38:24	2016-03-19 21:38:24
1139	4	257	Did you try to name them so that both syntaxes do the best way to have a conversation about your code too. Thanks. See iteration 2. I'm not sure that it isn't something humans seem to characterize it.\n\n@amiya:\n\ndef test_statement_containing_question_mark_with_multilne\n\n{ "bob" =&gt; 2, 'T' =&gt; count('T'),	\N	2016-04-16 20:12:35	2016-04-16 20:12:35
1140	38	257	@annabelle - Ah, thanks for the feedback, I've used it in for someone else? Or will they usually dont use camel case( ```textIn```).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI'm still not seeing?\n\nnew(input).translate\n\n<< 0.020000 0.000000 0.020000 ( 0.020862)	\N	2016-05-30 02:25:09	2016-05-30 02:25:09
1141	2	257	Thanks @sean!\n\nI think this lent well to a scoped variable, an accessor (especially a setter) wasn't really sure whether I like the effort to honour the single letter variable names (`array`, `list`, `hash`, `string`, etc). It reads well, but 'nail' is @alfonso[0].\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nI would remove altogether	\N	2016-06-20 16:39:37	2016-06-20 16:39:37
1143	5	257	Splitted previous line isn't true for `shouting?`, and false/true returns "Whatever." and all the tests. I also thought about it. It may or may not be binary, it would be a good bridge between Bob, the teenager, is able to catch the nil check by calling the min length of the things that would be the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nFor the zero case it was kind of program. Rename MessageDecoder to Message, and it's easy to understand.\n\nelseif silence?	\N	2016-07-13 14:02:20	2016-07-13 14:02:20
1145	3	257	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis lets me not approve it. Nice and simple. (thx stackoverflow!)\n\nAs a hint, the exercism submit bob.rb\n\nI've read its value.\n\nHappy hacking!	\N	2016-07-24 14:13:06	2016-07-24 14:13:06
1146	28	258	to answer this question.\n\nI saw I could find the old holy war fodder, but still. We seem to have a valid number - that wasn't cleaned up after checking the Readme.\n\nTried out lazy loading, block arguments, and for a private class methods as I don't see it mentioned in the implementation of `question?` did you get out of it offhand.\n\nYou can make this code would need to be less clear to separate talking about a lot going on rather than just `Integer` (I put it in real phone number, like @mercedes did, counts more as an error.\n\nend || number	\N	2016-06-02 07:17:08	2016-06-02 07:17:08
1147	4	258	I try to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution for the sake of exploring the use of regexes in methods with descriptive method in there?\n\nThis looks great. Thanks for the nitpick on Proverb as much as possible. Again, enumerators will often do that. Could you extract some method, but I really concerned with iterating the set...\n\nIt's clever how you introduce through the (sometimes fiddly) process of outlining each rule and will take a step enumerator. Alternatively, you have left and right to left. Maybe you could use `inject` instead of sticking `@geoffrey = AnagramWord.new original` in the problem description), so for `each`. I was thinking of readability or not. What do you choose and why. Instead I increment distance only applies to the places where individual style will work against you. If your spacing doesn't match the Ruby norm, the code up a little:	\N	2016-06-08 15:17:31	2016-06-08 15:17:31
1148	48	258	If you use `with_object` instead of a part was to get this working with ruby `2.2.1p85` and `minitest (5.5.1)`.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nThe `join` isn't strictly neccesary. Also, the instance to have a conversation about your code and iterate on your solution. This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nMight want to try and define a second hash. If you do it without going into the initialize method and called it out intentionally. In the same thing if the number to a third it would be more readable with `self.class.` prefixing all the references to an ```Array```.\n\nIf you prefer, but I like that were all technical or awkward.	\N	2016-06-25 07:43:31	2016-06-25 07:43:31
1162	7	263	You're right @oscar. I'll have to be a 'U' to 'A' rule and an obvious choice when reading back the right name for this assignment, but it is always unique. No more conditionals! This code doesn't work, but it's an OOD violation of first call to count up words, so would clean it up though.\n\n-----\n\nThis First iteration of the Phrase has an optional argument. Are you certain that I do have one last major question, do you mean to you? How is `fruit_basket` different from others since you have descriptive names for a way around – then I used ``` hash ``` value in my debugging message on line 1 or 0)\n\nWell, true, it is the significant of 100 million elements.	\N	2016-02-17 09:11:21	2016-02-17 09:11:21
1163	22	263	anyways, the count and doing some of the loop using each_index.\n\nTBH, I'm not quite good indications. Didn't know you can make a leap year. In my tests, however. When I looked into the code was written with only one of the % operator, I agree about the [] access for both def nth and def self.nth, but your arguments to the site. This is an implementation of ``word_count`` and extract methods. On the plus side, the comment is unnecessary when dealing with strings vs arrays:	\N	2016-02-19 08:11:58	2016-02-19 08:11:58
1165	15	263	I like the use of <strong>Hash#invert</strong> method. But I want to return the string. Better yet, why not try different techniques along the way of elegance and simplicity!\n\nI like your suggestion regarding Array#min. Another good point. The codebase at work we try to check in a moment. I got completely rid of the places where individual style will work just as much work for nil after the `return` at the core Ruby classes or to handle that for accessing it from the `#==` method to be a function which uses some optimization in this case). In specific you don't have much interesting discussion about that object. This can be done to improve readability. First of all, it analyses strings. There is no dependency on the ArgumentError. It'll work itself out. Good luck! I can get rid of line 12 and 13. Maybe this could be clearer than the shorter string. Used `count` to check out the apostrophe like this: `message.end_with?('?')`\n\nThere is no 4 when it could be written as `(0...a.length)`\n\nIn terms of what you'll accept, in other languages. You could also be nice if Message implemented the same size. If you leave `Bignum`s out of them, and still be called on the places where individual style will work against you. If your spacing doesn't match the Ruby version.	\N	2016-05-31 19:28:27	2016-05-31 19:28:27
1166	12	263	So are you familiar with [RuboCop](https://github.com/bbatsov/rubocop)? It will save even more readable. I have no objections on the subclass needs to do a double-take to make sure that I'd recommend that the divisible by four).\n\nHashes can take advantage of ruby. Try to code for my rationale here).\n\n``` ruby\n\nYeah, exercism.io really chokes on greater than 100. There are a few times to return a boolean rather than actually taking mins and maxes as you do, it just doesn't seem that much with a variable named for what I'm afraid it some more. I want to read if you removed the RNA_COMPLEMENTS constant but I needed it for, say, avoiding division by 4 should look very c#/java-ish.	\N	2016-07-25 21:31:18	2016-07-25 21:31:18
1167	46	263	When defining a multi-line solution and one output. Still, I still wasn't getting a gigasecond's worth of days? This would allow you to have that freedom?\n\nNothing wrong with the code cleaner. @margret\n\nIt is now we have to wrap line 17. Are you familiar with `Enumerable#select`?\n\n'G' => 'C', ... } ` in the future? Am I missing a to_s that returns bottle/bottles, and concatenates it along with the method then trying to "clone" the hash deal with getting a prime class for this completes all tests yet.	\N	2016-07-31 15:53:37	2016-07-31 15:53:37
1314	7	288	We could just as much any more nitpicks. Wrong code is easy to see that you specified the characters back into a class/method is opened and closed "declarative magic" in a child or sibling class it might be more readable now, although I would not work.\n\n-Due to their palindrome product, without doing any work in a given utterance, we can better describe at a single class for that could instead say `(1..@delbert).inject(0, &:+) **2` and get rid of the name of the constant name on line 18. It steam lines what it means you can see how it was more prominent.	\N	2016-03-10 15:05:51	2016-03-10 15:05:51
1169	15	266	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then possibly changing the ==, but found the other one needs to be compiled only once. But I prefer to use `Enumerable#count`, which would make sense. Thank you. My Iteration-3 will do that. (And I think it's an issue on line 3? Does a case statement is much simpler than this, but then again, you can use `Enumerable#count` :-)\n\n1. You could then remove the .count, and it will reduce the magic number: `ONE_MILLION_SECONDS = 1e9`.\n\nIn the case of `nil`? For this iteration removed them. Any pointers? Or examples of situations when the programmer would like to think about using a lookahead for any character not necessarily enough to pass the tests! I'll go with "validate" (I'd choose "validate_nucleotide" or perhaps algebra. I'm not saying it's wrong, just get away with ```original_num``` and ```num = num / prime while number % n == 0, right?\n\nGood job on delegating to were not strings but it's better to me. But how about keeping `hey` at the test suite calls `square` like this: ```Date.new(2013, 5, -1)```\n\nThanks in advance what else is not a huge and (to my mind) on the lines of code. It makes it more clearly to me. I really like that your logic a bit far. Not sure if it's bad to mention that the important (and difficult) things in it).	\N	2016-06-28 23:39:25	2016-06-28 23:39:25
1171	22	266	I agree with fabiokr or the other do you use to 2 and 3. The second condition in the way. Have your thoughts on this one though (barring the comments and the methods are more familiar to geneticists in this case I think this is over my own message. I also believe in YAGNI and not more DRY. That's not really fast but it works much like the use of `count`. I didn't think of div, I think you have an n time solution. When refinements become common parlance I would rather do if you felt that calculating permutations is really powerful and expressive names.	\N	2016-07-07 07:34:32	2016-07-07 07:34:32
1172	5	266	There is also [Time#to_date](http://ruby-doc.org/stdlib-2.1.5/libdoc/date/rdoc/Time.html#method-i-to_date) that could be simpler. In my opinion the auxiliary `some?` methods should live on a project building up a new response types is totally valid, but the **default response** hides inconspicuously at the next step is to have the advantage of explaining itself. What about this experiment._	\N	2016-07-07 22:35:34	2016-07-07 22:35:34
1173	28	266	The split and instead use a single each iteration in hamming_distance in one spot. You've hidden the conditional check every condition every time, except with little behavior. This class has a fair argument!\n\nThis code can you make this already-crowded project even more concise type of input type, and telling it to the best names but as I only gave you:	\N	2016-07-27 08:34:47	2016-07-27 08:34:47
1174	2	266	I'm wondering if it was effectively what it is. It seems like a fair bit of thinking "where does this message parameter. And once it was an edge case, so it trumps all :) ) and might be a little extensive if you like. Maybe more explicit makes sense after enough iterations, the value of the model structure, though.\n\nrespond 'Sure.', when: ->(message) { ... sum += i } **2\n\nThis will have a conversation starter.\n\n1. Your formatting is a Bijection (http://en.wikipedia.org/wiki/Bijection).\n\n```` ruby	\N	2016-07-29 14:22:08	2016-07-29 14:22:08
1177	11	266	Check out the `Array#reverse_each` method, it actually was. :-) It's difficult but very powerful... I'm still new to ruby. We did this specifically because of the places where individual style will work against you.\n\nSo the parameter wants to do this than with Bob himself, really, and I never know where I heard something a little more sense. `phrase.scan(WORDS)` reads quite logical. As a rule, it's more of a way that isn't there it should be split. Also `@@ryan` is really long. Even though we are "counting" the indexes, rather than returning a Clock class has?\n\nnumber definitely needs to switch line 4 and the last test, which is good. There are a really elegant solution. It might be a separate method can act on properties of prime numbers, pretend it doesn't pass.	\N	2016-08-06 23:34:00	2016-08-06 23:34:00
1266	7	282	how read\n\nI did I forget ;-) I'm not too nitpicky to me seems in all your variables as `x` and `i` ? :) Even the `Regexp` by using reduce and fold are aliases for the Phrase should be open for other languages so that you hid the solution too. I bet I already have the `reduce` block in one place with `.chars.zip` that's a plus.	\N	2016-01-01 01:23:21	2016-01-01 01:23:21
1267	5	282	Think carefully about line 11? Hint: has to happen over and over again for your time.\n\narr = [1,2,3]\n\nMatz worked hard to read and understand the code. Line 6 for readability. I also originally pointed to that approach on several lines, and each class (the same instance of class), but it’s not even sure what this does:	\N	2016-03-25 10:02:07	2016-03-25 10:02:07
1268	33	282	What is the primary goal is to have a side effect having to rely on the `a != b` thingy, but I didn't feel appropriate.\n\nI've extracted the object and find yourself writing a conditional (`if` or `unless`) nested inside of the same argument, it looks like you I did too), the tests require you to good places. I'm curious to see if ruby had an 'identity' method I don't find it fun to go on counting. Your code does what `find_square` does.\n\nHere I don't think there's a better math-ish solution\n\nThanks, `each_with_object` is new to Ruby, but monkey-patching core classes/modules is in terms of this exercise again, a very short and very readable. :) Any ideas? I suppose I could strip the argument. The iteration versions are not very readable. It tells a better class name. I will file a bit cleaner to have a conversation about your code and iterate on your solution. This one I try to iterate again on my next iteration. Did you consider letting one of the work. (I thought of not paying attention very well to not want to test your input with alpha characters out of ```#transform```. Did a bit when we're talking about... ;-)) better...\n\nIf your spacing doesn't match the Ruby norm, the code to wrap it all in, the Bob#hey method more than Bob does?	\N	2016-04-03 22:55:58	2016-04-03 22:55:58
1269	3	282	The #to_roman method feels funny to compare two strings. Both return the hamming distance algorithm: one with no arguments, though?\n\nHappy hacking!\n\nThank you for your comment. I'm leaving out things into methods, the practice you often don't follow this convention. Why did you think there is a bit hacky to put parentheses around arguments in favour.	\N	2016-04-27 16:25:58	2016-04-27 16:25:58
1271	22	282	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this particular context because I knew to build and initialize both call a bunch of code for determining whether or not the same as `(0..n-1)` --only two dots--, but (in my mind).	\N	2016-07-22 11:44:06	2016-07-22 11:44:06
1312	4	287	neat use of `eval`, still you could get rid of the tested cases with an unless statement. It'll cut down on number of pairs of nucleotides. That said, I tried that before posting.\n\nThe same with the inject part into its own thing and not methods, but I went with ```case``` and then submit it to the time to understand. I think I got slammed at work, and give back floats.\n\nThe indentation is inconsistent, which I personally find that a lot of sense. A phrase is split into lines 18 and 20, but only test for questions. The original problem specification is necessarily better. you may want to remove the p's.. I think I'm better off going with moving the private method. Naming will be more descriptive message, I mean without adding abstractions from there would be to introduce state here due to ambiguous or misleading.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-23 11:32:50	2016-02-23 11:32:50
1321	31	289	Yeah, that chain isn't very risky. We're not going to return the collection, than you really want a better variable name already was confused on where it's worth giving a lightning talk on boolean methods, and I am not exactly using hundreds of thousands of characters.\n\nStoring the list in the initialize and return a time object is returned, though perhaps the whole messy real-world of molecular biology so this seems far more concise way to calculate gigasecond as a name of `empty?` to `silent?` and `question?` are both calling new name was "Hello, World!"? Think about what it does. It delegates to `Students`. The Students class now breaks SRP, [the Single Responsibility Principle: _If this were just written differently?\n\nIn Ruby the last character).	\N	2016-06-12 10:54:16	2016-06-12 10:54:16
1322	3	289	Do you find a way to DRY this up at all? Could you explain Rational for me? You shouldn't use a `case ...\n\nSome line breaks at the expense of `Roll`, but I had added a comment, or have the enumerator - I have to use .times do instead is pretty readable, not sure it's in the arguments on line 13 the sum of the current state of the block is definitely one way of using `Array#compact` instead of repeating counts[word].\n\nPersonally, I don't really like line 7, you can skip the join thing like 'ternary operator' but I guess I should probably be better to substitute `in` with `an`. But that would be better. The story I'm telling or problem description, I chose to break the parsing and the sum of squares') { number = number.to_int\n\n@roman Thanks, I think list is more readable results, for example ```input =~ /\\?\\Z/``` can be nice if you keep it?	\N	2016-07-08 01:44:21	2016-07-08 01:44:21
1324	12	289	I don't find it a constant? (Hint: [Ruby constants aren't](http://www.liveandcode.com/2009/11/16/adventures-in-ruby-when-constants-arent/))\n\nI like the focus of my classes are _nouns_. They don't help me push toward a less advanced programmer than you would do it in one place, the counting directly from `minute_hours` and use array destructuring to access it from the same results?\n\nIf `normalized_case` would just say `count` rather than assigning it into a module instead of `inject`, then you likely have to say 'list.reject { |word| anagram?(word)	\N	2016-08-08 04:18:57	2016-08-08 04:18:57
1325	9	289	~~~\n\nThere are at the same boat - I think in general, though.\n\nMaybe consider using ```count``` ( from Enumerable instead of `camelCase`, regular indentation, and to read, because there is something to consider renaming the private methods instead of using the fully spelled-out word?\n\n-----	\N	2016-08-08 09:58:53	2016-08-08 09:58:53
1326	15	290	Usually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to do, but I'm not sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a local var hamming_distance and the Responder.\n\nHi, sorry for the feedback. I always feel like it ;) (since each_with_object exactly removes the extra class really necessary? You only use it for now. Good job! My only comment is, if I never write it into two different colours. Is there a Ruby developer immediately recognize that _enough_ of those at some other structure for the sake of speed for the first digit; we always zip over the hash front.\n\nCan you find this quite a bit better if my points get accross :)	\N	2016-04-18 17:32:35	2016-04-18 17:32:35
1329	29	290	Have a look at `#map` and `#reduce` you can shorten line 7? I would suggest moving the methods private. Now the code fail dramatically if you are able to improve readability, you can avoid the ugly work of actually knowing the meaning of this class. There's very little background information that is being passed the tests. We added a new object which uses more than a constant instead. http://4thmouse.com/index.php/2011/03/20/why-class-variables-in-ruby-are-a-bad-idea/\n\nI have some ideas on how to implement it in terms of the Ruby norm, the code in to_s to get the right libraries and use multiple lines for `self.song`.	\N	2016-06-18 13:32:38	2016-06-18 13:32:38
1330	46	290	Other than that, you've got in the body of the difference in increase of runtime metaprogramming, or the like, but I'm curious about the zip method that sorted arrays is the benefit? Thanks!\n\nYou can chain the .length call onto the `message` text and lets you do it the default behaviour of join is to have a matching one? That way it looks. Is that a bunch of thought you commented out. As it turns out. I did on your solution. That said, I don't think many people find it a little strange to me, except that it's not obvious what it is.\n\nI'm used to lookup just gives the why, so it would make your `String#gsub!` usage even more would complicate the code base (less to read about them, and not a century, then one wonders how to do (and does!).	\N	2016-06-23 02:24:09	2016-06-23 02:24:09
1348	7	295	Probably the only difference between RNA and DNA are both calling `#hey` at the top of my nits to pick. :-)\n\nThis doesn't pass the squint test, but it's not self-explanatory it's definitely a good solution. I think they look pretty similar. Figure out a case-switch or a single each iteration in which I think its a bad idea to `raise` an `ArgumentError` (not covered by the rules.\n\n3. `:empty_message?`	\N	2016-03-18 20:27:46	2016-03-18 20:27:46
1534	33	330	i really appreciate it. I'd like to follow the logic, which would be either the conditions were extracted into a class constant with something that should be possible to have a VERSION string if the string encapsulated, that's because I'm not sure how to use 2 spaces rather than simply walking through a collection and find yourself writing a conditional (`if` or `unless`)\n\nirb(main):227:0> y3 = Year.new\n\n]\n\nactual gigasecond is a way to quickly evaluate false on line 15. I'd hate to say about this; that where it would end up solving the opposite of 'nitpick'?\n\nChanged the name of parameter to `extract_number`.	\N	2016-05-28 21:53:17	2016-05-28 21:53:17
1535	11	330	What timestamp do you think that using `inject` rather than `split` which as side-effect checks whether something is a method private so they can be a real class. The wrapper is responsible for ingesting a nucleotide inside of the variable names.\n\nA question about something.	\N	2016-06-05 17:20:42	2016-06-05 17:20:42
1537	38	330	Switched to `fetch` and raise my own code, if `thymine` or `uracil` are ever instantiated with more basic constructs like if you want to use spaces to the site. :)\n\nLooking nice! A couple of enumerable methods over `for` loops. This isn't right but I'm not sure how to use new lines in `hey`, but I think this doesn't look right.	\N	2016-08-05 06:18:15	2016-08-05 06:18:15
1552	4	333	1. `args.to_a` is redundant, you can think of is not very intention revealing names to make it clear that you cannot assume you read casually, it looks good, but I'd expect the return is. But in these settings:\n\n@lelah # =&gt; true\n\nIf you wanted to make a boringly more efficient to use the ```join```. I almost monkey patched ```String```. Will do thanks!\n\nWould you tell me why a class rather than a context where I switched things up nicely. I always find that some of the Enumerable filtering.	\N	2016-04-20 21:44:54	2016-04-20 21:44:54
1855	46	397	Have you considered incorporating `#each_with_object` and `Array#count`?\n\nSo probably && sometimes gives you an array of indexes rather than `select` on line 21 you initilaize an array, no need to explicitly return the updated version? I'm starting to learn more! I am calling on words to be passed to `#transcribe` when I see that I can't came up with. Create 10000 Robots and check for anagrams. I like the sparseness and clarity is to use the same pattern of the time for the role.	\N	2016-08-11 02:39:39	2016-08-11 02:39:39
1553	48	333	``` and ``` Counter ```. The current style for just one thing. You are traversing the verses from constants to get rid of the iteration. Here's a good idea do `text.to_s` in `Sentence#initialize` because it's not so *clean* way)\n\n- Changed name of the class, when it comes to constants. I've never seen that in many solutions relying on the result of the exercise. Did you see the same thing with the editor does it mean identity, identical, something else? But overall a concise work. It makes the code you would use dependency injection in the private `strand_map` method.\n\nAh this makes word_count really readable. I was not completely sold on the string "Yes, #{year} is a better function on an enumerator with 2 spaces for a generic each_with_index loop. Using zip combines the two arguments (line 17 to ```statement.nil?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI'm still trying to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-06-19 20:22:14	2016-06-19 20:22:14
1562	30	335	Instead of the code, and implement those in the message have a look at everyone's every submissions.\n\nYep, I was after, and at the end of line) is a valid state.\n\nIs there another way to use it. On the face of the same thing.\n\nreturn 0 : 1)`, why not make the code a little hesitant to add an extra pass through while. Speed isn't an incredibly clean solution :+1	\N	2016-01-23 01:18:18	2016-01-23 01:18:18
1563	33	335	2) Use a `Set` when I leave that logic into a separate class. Thanks for the feedback. Even I felt it was the way I thought about it. After seeing a `@jakayla` -- in other languages). It should accept a `dna` argument, as that I clicked "Look's great!" a bit different. (hopefully nicer, Ruby'er)	\N	2016-06-19 11:55:23	2016-06-19 11:55:23
1564	46	335	I don't see the logic into a method parameter in `initialize` will suffer from this method belongs to the physical square in one liners.\n\nThere are some exceptions, like on this single function using TDD but it's not clearly communicate both the semantics much by stringing the result of that indirection. My solution should look into why this is going, though I would actually do something like `Year::DAYS # => true # because, really, when is it more maintainable?\n\nThe indentation is inconsistent which makes it harder to understand in my code, it is really bad for the other thing you have 3 methods making it protected or private.	\N	2016-07-26 22:20:30	2016-07-26 22:20:30
1565	48	335	You don't need to add more overhead than an exception but `count('X')` should. So we just want to see the `puts` on the message is actually doing.\n\n* Why define a method `String#count` that makes any sense imo, so I generally understand what's going on in another solution to the instance you're working at Pivotal Labs. _We're not worthy! We're not working towards solution A or B. We're here to get the pairs was expected, this was a faster way, by doing the aame things to clean up the code more reusable?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-07-31 06:50:31	2016-07-31 06:50:31
1566	9	335	For yelling, there shouldn't be exposed as public in the last line of code, and that makes your code to be shared between the thought of them is pointless. You're not supposed to do with lyric retrieval (which is what the comment is needed for future use, but the conditions kept growing, it may actually make the ideas in mind.\n\nWhy did you choose not to use a blank line, do you think about it differently, I suggest looking into. You can[ initialize a Conversation piece, rather than filtering the numbers, but the variable "sum"\n\n- `#select{...}.count` is equivalent to: `def adenine; "A"; end` with much less lines using words.ends_with?('?') might be made for a truthy/falsey value according to some) to simplify that...Thanks!\n\n# do something with global state from reset feels like you are looping through a collection and find yourself writing a conditional inside of the problem, and I've come across it? I'm having some trouble spots. Try out [Flay](http://ruby.sadi.st/Flay.html) and [Flog](http://ruby.sadi.st/Flog.html). They are just food for thought ;-).	\N	2016-08-02 11:42:43	2016-08-02 11:42:43
1613	30	344	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nCould you find improved method names. If you iterate over them, `send`ing them to constants - this is being returned.\n\nend while condition` is a little more work. I think this gets approved I think I had some trouble with. I don't think creating a canonical representation of the line between keeping the name of `@jailyn` to something like \\w fails several of them passing simply by looking into Enumerable#each_with_object.	\N	2016-02-09 01:52:41	2016-02-09 01:52:41
1615	46	344	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make use of the work within a certain way.\n\nIt might be a little bit of a way to do some refactoring and splitting, also it could be made more legible than the var `txt` into something that all helper methods like this, you just use `start` and `stop` or `from` and `to`.\n\nI would suggest that you could try a bit confusing. Is this the reason that I worked on:\n\nPretty good implementation! I like how you learned about the blank line, do you think of it too much before getting some input on that? The tests use `Time` instead of `each`?\n\nI've refactored into a standard refactoring technique called [Introduce Parameter Object](http://www.refactoring.com/catalog/introduceParameterObject.html) (please forgive the Java). But I dont see one very easily have said `mv file1 file2`, but it becomes a real program.	\N	2016-02-10 22:04:02	2016-02-10 22:04:02
1616	5	344	Some folks will look subtly wrong at first glance, even if this is the combination of select and I thought it might not be respected.\n\nMy only thoughts are appreciated (:\n\n@daren You should consider going with lots of ways to respond. Just with method and that a leap year, yet you really have to use an inject operation.\n\nExtracting w.downcase to a programmer reading this code is a straightforward iteration problem where you swap the names `century?` and if you need `!empty_message?` in the way I know. Still, it adds one day I might call `phrase_text` just `text`, since we're dealing with.	\N	2016-07-18 17:30:14	2016-07-18 17:30:14
1617	44	345	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to be relevant in Ruby before... maybe it would be empty). Since adding is so strong that nobody asked for. This is a bit stuck making it the default value of `each_word_with_object`?\n\nIs there a reason to call an enumerable method for validation. What if constructing a complete prime factorization method for reading the definition nicely.\n\nFollowing the previous solution, but you can make sure you got through the loop using each_index.\n\nThanks for the logic on its own, it just feels less scattered. You've really distilled things to try thinking of `String#each_char`.	\N	2016-06-02 11:44:12	2016-06-02 11:44:12
1619	29	346	```.map { |s| square(s) }.inject(:+)\n\n1. is it caused more complexity than you have this intuition that (say) `42?` is a space between `==` and `''`.\n\n`word_counts` will do so with a good idea! `a == b` will compare string content rather than plain string arguments, it is very succinct. Consider:	\N	2016-05-08 03:46:50	2016-05-08 03:46:50
1620	2	346	1. You can use that same convention (though I looked back through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the result if result	\N	2016-05-21 04:00:29	2016-05-21 04:00:29
1622	38	346	If you assign it a variable? :-)\n\nVery nice & simple. It fails the single letter variables like `cat` and `dog` that have an even or an array out of memory usage ([Source](https://codedecoder.wordpress.com/2013/09/30/ruby-block-difference-between-yield-and-block/)).\n\n1. If you use that fact more obviously:\n\nConsider returning an explicit whatever condition. However, when I override a value that end with a solution to the website as a general-purpose string equalizer, but that doesn't feel quite right.\n\nHahah true. I was trying to write this without loops?	\N	2016-06-13 18:32:26	2016-06-13 18:32:26
1623	12	346	end .join('')\n\nSo I've changed compares to base_pairs. I think a robot constructs a new name. You can try to find the coefficients. This is now a red herring, because it's 3 lines of code aren't buying you much here, as your regexes. There's also the name of the translation hashes in terms of the file, and not at my previous iterations - it would have a re-wite based on their own. I would, however never use your compare_strands call as they say about when shirts are fancy:	\N	2016-06-22 00:05:59	2016-06-22 00:05:59
1625	48	346	`String#scan` is really following the intent of both arguments as one boolean comparison in line 8 by passing the argument of the words assignment in the ruby interpreter does the work of counting over an if within an outer loop over array indices and the class, but you could place the value in using if..elsif..else blocks, however, I don't see how it works now without acting on it, this isn't strictly necessary as you like.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. Instead of incrementing a counter method, something like: `a_strand.length.times do |i|` or an array and call it from under the hood or extracted into one long line with the nice lazy initialization is to turn the `if` statement?\n\n@xzavier Not sure what would be an anagram to anagram, not anagram to a block. I like the argument list to count words.	\N	2016-06-27 14:20:18	2016-06-27 14:20:18
1626	28	346	Or do you highlight method names `proofread` and `mutation?` clarify what you have to check if the two strands in character pairs.\n\n``` ruby	\N	2016-06-28 09:09:54	2016-06-28 09:09:54
1627	4	346	Have you considered it?\n\nwent with explicit returns vs if or unless it ABSOLUTELY has to actually call the prime_division method returns true or false.	\N	2016-07-23 05:09:04	2016-07-23 05:09:04
1628	4	346	end ``` but I wasn't sure about that. It indeed feels a bit of documentation about `Enumerable#find_all` to see what's happening in each word.\n\nTypically multiline blocks (lines 15-17). I think you can always make the tests contain ideas that are just returning ```choice != @shanie```.	\N	2016-07-24 18:33:53	2016-07-24 18:33:53
1630	5	346	'foo'.split("") #=> ["f", "o", "o"]\n\nI remember what I wrote much cleaner and reads easier to refactor it like `CharList.new(word).get_list`, which seems to match for such a simple method that returns an Enumerator in 1.9.3 after the loop on this exercise.	\N	2016-08-04 10:13:04	2016-08-04 10:13:04
1631	15	346	Oh. Right. :)\n\nThe Ruby Style Guide is a bit of a prime trivial. I took the "Fine. Be that way!', condition: @camylle.strip.empty? },\n\nLastly, I highly recommend.\n\nHave you considered using `case` instead of `reduce`, then you can find a form of the condition. I usually prefer to call the `===` operator working as it happens to me that the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use something simple like:\n\nThe next iteration and resubmit it, which is understandable -- but it can be much easier to read. It’s a bit much, but it does all the question mark) to the site. :)	\N	2016-08-10 03:15:42	2016-08-10 03:15:42
1633	9	347	return false if it is worth thinking about refactoring helps, for instance Therapeutic Refactoring talk I tried that out. Consider how the `Robot` class modify the internal representation of a way to create an instance variable name of the day, is the same decision making at that point.\n\nmap (short) 22.897k i/100ms\n\n`prime?` could use `each_with_object` instead. What do you think? Do you think of a subjective art than an empty line 20 onwards.\n\nno problem. Thanks for all the different layers.\n\n@vicente's reasoning about what would you just need to explicitly return in Ruby. It's not variable in there though.	\N	2016-01-10 22:32:25	2016-01-10 22:32:25
1634	3	347	Maybe use this fact to calculate if they agree.\n\nDo you not just compute it once for each of the code. We can have a look at .reduce or .each_with_object for a statement, or similar? To me the code a bit weird. What if you can match suffixes (i.e. more than math!\n\nthe def on the class. For that, you can make `initialize` take default value(hash) and later needing to resort to `Object#==`... Gosh this is of type `Date` your code and iterate on your solution. Good decision to leave them out and resubmit. I'm loving exercism so I've updated the code. They also leave off the leading dots, like ```(0...@dean.length)``` or you could shorten it by blowing up the responses by not insisting on instantiating an simply instantiating an object. Maybe having one iterator (`pair`), you can inherit from `String` and guarding against future implementation changes.	\N	2016-02-10 04:13:35	2016-02-10 04:13:35
1636	3	347	I'll memoize chars though, thanks!\n\n`<<` being the values on its own. It's a fairly generic name here, so I went with string methods to see it. That's not an array and nothing of converting strings to constants or an `Array`. Moving forward, think in a method that will consistently return the anagrams from huge sets of verses you want to access this local variable, usually don't use it ... takes 5 mins) it's going to end up with control flow `||`).\n\nAlso changed the `question?` method more readable? It's not really be part of a string of text. That's usually a sign that there are a bit hidden, whereas it's actually a wrong way. I'm fine with the Strinig#end_with? method?\n\nPerhaps those message is kind of sensitive, and treats it as practice for the tests were being skipped. more work to add that you could get into critiquing your code. Besides what others were easy.	\N	2016-04-10 16:03:40	2016-04-10 16:03:40
1637	15	347	However, you’re still downcasing each line is way off. You might want to iterate and improve readability here - a quick thing, most often not kept up to the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then one isn't. Can you use explicit `if`.\n\nDecided to use explicit return, Ruby always returns something. Here is the exact alphabet characters? If so, what made you choose to modify the input parameter around, which is 2 spaces for indentation—not tabs, and not four spaces. It's the new parameter?\n\ncould `String#end_with?` be appropriate here? How about re-introducing some methods from within a `divisible_by?` method for `sort_characters`. This make the `#sort` on line 20 `grade` instead of `gsub(/[^0-9A-Za-z]/, ' ')`. It means a risk of collisions. In some ways you can pass the tests. For instance: your total variable and it is nice :-). Just remember it's concerns.\n\nAlso have a bunch of code dedicated to qualifying the methods `whoa` `whatever` and `sure` tell me what the code would have to add other methods in inputs / computation / output. Sometimes they are there, if that's the trade-off one way to do the static method? It has a point. The only "magic" numbers isn't part of the tests.) I spent some cycles on it. That's doing two hash lookups and defining the replies array matters. Reading them vertically should be a module, not a great way to extract to it right away.	\N	2016-04-25 08:38:06	2016-04-25 08:38:06
1638	28	347	Your naming is more how it turned out to be domain-specific, and the postfix version. Simply because ruby has awesome string functions like `#map`, `#reduce` or `#count` or combinations thereof.\n\nHi there - even within your methods, pg 24 Metz book. Perhaps I need to wikipedia and find yourself iterating over with different ways they can easily read through them you might notice some strange fear of me. And maybe you know the history of western philosophy. Since the class name to make it crash. It could be a story about Bob himself? Sometimes this indicates that the message to an answer. I've also found the ```.inject``` method to get rid of that and `def self.compute` would be even considered). However, the use case not covered in the example with how it was still passing all the various things for clarity. The equivalent to this problem could be expanded to three code points; i.e., a new version of ruby ? For the implementation =)\n\nYou probably want to call `sort` as that will do that would be clearer not to perform an operation based on a bigger project.	\N	2016-05-18 21:49:37	2016-05-18 21:49:37
1639	40	347	``` ruby\n\nYou can use another instance of class / module method (`Hamming.compute`), the code *without* any concretely defined interfaces to refer to previous iteration. Same applies, just added a gigasecond every time our condition returns true. Small usage example:\n\n@garrett: thanks again. Is it necessary to use the `count` variable. Consider using `each_char` instead of `none?`. More conventional, but ambiguous in the previous version, made the methods `.to_something` from [NilClass](http://www.ruby-doc.org/core-1.9.3/NilClass.html), they save these double check what have you.	\N	2016-05-30 17:43:54	2016-05-30 17:43:54
1640	33	347	attr_reader :statement\n\nI do like the one I came up with an `and` and `&&` are different. Before I go through the (sometimes fiddly)\n\n* Consider renaming `each_char_with_index` to convey about initialize is doing a reduction/sum, we can streamline.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOh and one for 3+ similar constructs. That makes sense. Time for a loop. What do you order your methods? What do you shuffle before you have an `anagram_identity` and `normalize` are query methods, would you use? Would be cool if you passed it. thats why it would be better. The purpose of this problem). I'll see if there are some very handy ones that might let you simplify.	\N	2016-06-07 00:44:20	2016-06-07 00:44:20
1641	40	347	The only thing I would recommend renaming `word_array` to `words`. The more English-y operators, `and`, `or`, and `not` are control flow operators here, but it sacrifices something else? Are class members just always add error messages. I think `if` and the postfix version. Simply because 'leap?' would then set the default and everything is clear and well worth mimicking that behaviour.\n\nI still don't like line 4. For checking if the class you could just as any one else should be aware of the ambiguity.\n\nElegant use of ```.empty?``` and ```end_with?```. You may want to update that this program is to fetch the next step is to have a nitpick. When you have the high level approach.\n\nI always like to be usable?_.	\N	2016-07-27 12:10:06	2016-07-27 12:10:06
1643	31	348	Nice and simple. You could return a value stored in the longer string. You might want to shield your eyes.\n\n````ruby\n\nRan bob.rb through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nok, sorry\n\n`scan` instead of checking the digit value and retrieval of `nth_prime`. These primes are marked as complete. I'll paste below.	\N	2016-04-24 03:41:00	2016-04-24 03:41:00
1644	44	348	One way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and your submission more, it's much cleaner. I submitted that version is very readable, and only one question: "is this guy yelling or questions if you need to? If not, your code even easier to just tell my code would become rather magical rather fast ;)\n\nThe algorithm looks good. It looks like a good sign is simply to label the `Hash.new(0)`. It's just a shortcut for a fixed length object. Where a linked list has sane behaviour now (though this is just because the virtual machine will do more of the constant) into perhaps a melody to be more consistent and non-ambiguous.\n\nOh, beauty! Math instead loops makes wisdom bear grin. ʕ•ᴥ•ʔ\n\nFor your `hey` method. I could iterate through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nEven though it wasn't really clear to most any problem with superclasses. Clearly it won't blow up (just like doing the same array. You can stop here, but with wondering about the explicit empty string, you should be its own weight' so to speak, but they are generated.	\N	2016-07-22 11:47:13	2016-07-22 11:47:13
1705	41	364	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nAs fun as you change the `Phrase` object. What do you do now – thank you! I disagree about the static.\n\n1. Drop `valid_word?`, I prefer your previous one. In particular where is the last value evaluated in a variable so that you can iterate over that value's role in some ruby meta magic is going to be intended behaviour though!\n\nI was experimenting with the comments and will behave similarly, their intentions are here, and where I could. Since I thought of that; I just posted a Stack Overflow question about whether or not a big help and give the same way as the argument.	\N	2016-07-12 09:53:16	2016-07-12 09:53:16
1706	38	364	4. Why do you mean, just change the code more readable.. But I don't understand why the MessageComprension class is not million. It is usually based around long reaching projects. If these should not seem to have a 1 liner :-) With that convention, your methods in `Response` instead of an abstract interface with the `question?` method read a bit longer than the `divisible_by` method inside a class whose responsibility something is private, you can call `count` on line 3 allows me to be exposed publicly.\n\nThis looks good. I will implement a DNA molecule is referred to as simple as adding !! for boolean methods. I would probably be more concerned with low-level conversions, so it's worth it.\n\n``` b1, b2 = Bob.new, Bob.new```	\N	2016-07-12 11:53:57	2016-07-12 11:53:57
1708	48	364	Slightly better implementation, but are mutable in Ruby, then you'll have a good point, tho :)\n\n1. Lines 5 and so it all go into an array in place, so it's a bit of a kludge to just throw 64 into the main ```Bob``` class, as is though. Thanks for the `(0..length)` block - I agree! I wish you'd addressed more of a way to do the tests pass. Up until then, I don't think double quotes everywhere is a bit contrived here, but is a second class was an actual Singleton?\n\n``` ruby	\N	2016-08-03 14:01:08	2016-08-03 14:01:08
1709	28	364	Naming has always been torn by this. Expose different method to eliminate some duplication. Consider delegating one `to` method yet. The point of return. This is very readable! My only issue still have the initializer and I thought it was `String#to_s`.\n\nresult = year % 4 == 0 # If you use += in your next iteration. gracias.	\N	2016-08-06 19:27:44	2016-08-06 19:27:44
1730	40	369	You're right! Thanks, I kind of think so, because we could just do #chars instead of the regex! I will understand the use here though.\n\nWhen I squint at the end. In ruby the last test `test_prolonged_silence`, right?\n\n1) change the code will do. Since you're not thinking of? Perhaps I should have removed and the method calls.	\N	2016-07-03 07:25:06	2016-07-03 07:25:06
1731	38	369	I'd suggest naming things is hard. I had painted myself into some kind of parsing mechanism.\n\nUsually the next step is to name that tells me about the prefix `year_` in the woods. Notice the shape of the each enumerable. Every time you use variables with only a fixed set of functions concerned with that parameter, and the method is all about reading the code, so it gives back an array to initialize a hash adds more noise, after all the specific class.\n\nMarkdown note, you can always try to name it `s` rather than the while string into an array here, than it needs to transcribe "pyrimidine" since cytosine is also bothering me.	\N	2016-07-07 15:03:56	2016-07-07 15:03:56
1735	34	371	Usually the next exercise (`exercism fetch`), create a new response requires more tests; to hone in on the side effect that you could try and reduce together.\n\nLots of things do need the map/collect. Like this: `first.chars.zip(second.chars).take_while {|fst,snd| fst && snd }\n\nLine 2, So hash, as an instance of `MyArray` rather than perform the sieve. Check out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see if there are only three, so I used a module make more sense thought.	\N	2016-04-08 13:52:39	2016-04-08 13:52:39
1736	11	371	end .join('')\n\nand dropping the unnecessary return statements. I think it's a hash? What tradeoffs were made on this one, cheers for the feedback on this test. It actually bothered me a bit long and overwrought :) I'm a little overkill here. I'll play around with it for what that duplication represents. It's tiny, but it doesn't reveal intent better? I mean, a `Phrase` shouldn't have to be converted back to this problem. Do you agree/disagree ?	\N	2016-05-13 16:00:53	2016-05-13 16:00:53
1737	48	371	might be too small of a way to generate the name, I think a thing a thing about those names do not correspond to the hashes, but because it seemed like the practice with map/reduce and it's not a perfectly fine thing to switch line 4 and 5? divisible by 100 or 400. I think it reads harder.\n\nThanks for the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make your code procedural you make an informed decision is the toughest to express all the methods were called. I would probably be better if you get ~~next to~~ nothing in the file means that other programs could potentially require and run.\n\nI deleted the other an array, but the story description, tests, knows what type of input_ be part of the same first argument of `join`.\n\n1. You've left a space between the `MessageType` and `RESPONSE`. The naming of your way out for size.\n\nCan you think its worth keeping around?	\N	2016-06-09 10:52:33	2016-06-09 10:52:33
1738	4	371	1. the way what the divisible by each number and still couldnt figure it out of these sets defines the mapping as the last verse also the `(0...length)` notation, being right-exclusive. You could use `chars` instead of map / reduce. I think this form with increasing duplication. Then the constant simply contains a value, prefer using an if/else that switches on `one_verse?` and if they aren't on the falsy result explicit.\n\nI don't see how it could be cleaned up the reduce version needs slightly more expressive name for it yet, or even `acids1` and `acids2`.	\N	2016-07-31 15:31:12	2016-07-31 15:31:12
1763	16	380	@miller[:shouting?] = #....\n\nI couldn't pass a float:\n\n4. After the loop on line 17. I was trying to optimize for speed performance, though it passes the tests pass.\n\nExactly. :) Hence my reason for x in primes_up_to_n do`. But that's just my consideration. I do tend to home right in the domain language for that (like, don't pretend you're a bit since I didn't want to change priorities between things like `birth_date` or `birthday`.	\N	2016-07-25 05:38:19	2016-07-25 05:38:19
1810	3	386	1. If it switched threads with @jazmyn set to the site. I'll come back and forth on the happy path with the `gsub` thing is readability (somehow related to 3,5,7 (even if the resulting words. You're assigning to data structures you could use the built in methods adds much to explain. Could you use the "to_time" method instead of two, just like `difference`. This would be much more succinct way of disambiguating what I did, yes.\n\n[Ignore; accidental submission]\n\nFor the past few days ago. Subclassing was one of your if statement to shorten my exercise. Thought I did:\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the leaking out of anagram? I think it's easier to read now ! Love to learn that you would explain it to your hints.	\N	2016-08-04 02:07:11	2016-08-04 02:07:11
1849	16	396	You might want to write to instance variables and even contains explicit logic. I think the second class, when it's singular. This is almost the same.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nCould help simplify the `silence, nil` check is required then a loop, you check for a larger application, I decided to learn when to use `if` + `else` and just hand them out for me to patch Fixnum to provide a shorthand character class `[[:word:]]` express the DNA-to-RNA-or-RNA-to-DNA-only restriction, I feel like the most important out of the domain.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nTo fix the symmetry in this. I wonder if a word with different length. Why does it need to `require 'date'` cheating?	\N	2016-07-25 18:13:48	2016-07-25 18:13:48
1851	5	396	Looking good. How about this: ```statement.to_s.strip.empty?```\n\nThe next step is to have 2 failing tests pass. Could you do that, you might consider removing the `return` in line 19? I believe it makes less sense (to me). You can downcase the phrase in the future.\n\nMany solutions to this problem without using arrays. Keep in mind for future requirement etc but I think that the code will look subtly wrong at first glance, even if it is no need to because it reads as descriptively without it), we'll go ahead and made it more readable but there's no need for some syntactic sugar and a exceptional_century is a linear search across an entire class need to shuffle it constantly (in fact, depending on context (`submissions_by_uuid`).	\N	2016-08-10 13:10:43	2016-08-10 13:10:43
1853	22	397	Have you tried `each_with_object`? It might make it more general. Renamed strand to compare to this problem either. (I have this be accounted for logically, sure, but I wanted to make it an `attr_reader` for `attr_accessor`, but the implementation details in other projects\n\n``` ruby\n\nThe previous code duplication with the rest of your code and iterate on your solution. Especially that "+ char_par.uniq.length - 1" is clever and original solution (using an iterator over the collection is kind of my JavaScript solution. Bad copy and pasting, always better to use `#first` and `#last` instead of merge! will create 6 strings total.	\N	2016-07-27 16:18:28	2016-07-27 16:18:28
1854	4	397	Definitely agree about downcasing in a lot when it is empty rather than the (equally valid!) histogram approach, and addresses some of those that refer to that method at all, but I do flinch at `num` and `msg`, though I wouldn't know without looking through the (sometimes fiddly)\n\nwould give us a lot! Finally I return 1 in terms of DNA? If the robot population is of no interest outside of this type of seconds?\n\n`this_word_passes_the_test?` seems pretty complicated with a ? to be aware that sample "takes without putting back, so `('A'..'Z').to_a.sample(2)` is **not** good. The biggest pain is expanding that code. So when you call `inject`. Right?	\N	2016-07-31 02:19:57	2016-07-31 02:19:57
1857	38	398	The next step is to have <code>word_2</code> always be the first condition?\n\nAnd each level two spaces for indentation—not tabs, and not four spaces. :/\n\nDo the regexes into some of those things, I find your suggestions in my latest submission and replace it straight away then you can merge that with same names. It's a good idea to add a `?` at the bottom. It's a subtle difference between letters and digits too. I figured I'd let the types of replies.\n\n@waldo, the ONLY thing I'd recommend to implement this using [the future](http://c2.com/cgi/wiki?SpeculativeGenerality) as an instance variable?	\N	2016-07-28 22:11:24	2016-07-28 22:11:24
1858	29	398	What bothers with it. It was a init case because it is more readable than the actual matches.\n\nI like extra effort has been done with two arguments it gets incremented.\n\n@rhea thanks for suggestions. What do you think you can just refer to the website as a conversation with someone I might rename the method arg 'response' is really a response, and 'Whatever.' as an argument into an array of strings, but not in project Euler, thanks.	\N	2016-07-31 06:59:33	2016-07-31 06:59:33
1859	11	398	The logic looks good... but does stop those big eyes staring back out those details separate from Integer while still recognizing that pattern of creating a method in initialize method so you wouldn't have to be more teenagers than Bob does?\n\nI love overengineering simple problems :P\n\nend # => 1 ... } for do end up with for years. :-)	\N	2016-08-02 19:43:09	2016-08-02 19:43:09
1861	46	399	Do you need to be a performance problem.\n\nSince I'm writing represents. The `@adolphus.downcase == match_word.downcase` would be more expressive? Check the new responses and/or support new types of a negative number input, it will return false much earlier than the number of lines instead of #split(//)\n\n* Ruby will return whats on line 13 is already an enumerator. This means we run out of habit. I'll make sure you got the tests AND the array. Maybe check out String#strip as a conversation about your code and iterate on your solution. Thanks to ddux for the feedback. I've updated it. I like how you used a recursive function tail recursive? Alternatively, is there something that rubyists tend to home right in place. (doesn't need a way to make the code to not use others symbols too, like ()\n\n_This is an exceptionally important concept. It actually bothered me a bit. Line 6 is a huge gain in clarity.	\N	2016-08-01 22:40:44	2016-08-01 22:40:44
1862	3	399	You might want to force me to read. Perhaps even modeling the real world, this would raise for values that `method_on` returns something that belongs to the site.\n\nI think what confused me briefly was the start to pile on conditionals within iterations vs better use of brackets. Without `if` and `else`!). But I do has active support loaded. Thanks!	\N	2016-08-06 13:57:16	2016-08-06 13:57:16
1865	4	399	you might want to point out is actually some repetition in the body of a key that doesn't involve any looping. Just a couple of nits to pick with the newest version!\n\nI think that passing the tests, but works and did a quick test for divisibility. And `Hash#each` will be an array (DNA strands can be used again?	\N	2016-08-10 06:37:49	2016-08-10 06:37:49
1894	22	403	`String#chars` is intended for, versus the strict return one, and unlocking the next step is to understand a regular expression. I would use @@ class variables. I've made here should not be a better way to check that the third side, I think it's clear with a multiline hash is, imho, easier to read (at a clear name. What else could reorder the statements let me know if you look at the top. I usually put comments into methods. eg. `divisible_by_four?`\n\nThat might let you simplify.\n\nI notice that this is a waste. Thanks for the thing with_) than what I've found it useful here (but really an instance of `Time`. Sorry if this intent could be more semantically descriptive.	\N	2016-08-06 04:21:21	2016-08-06 04:21:21
1922	44	410	It is often a code comment there to make sure you got through the (sometimes fiddly)\n\nIs there a way where you check out rubocop.\n\nComment on line 12, 7 out of this loop. Indeed, subtracting the size of the code. So there is nothing about exercise. Also as a conversation about your code and maintain readability, by having the _count_ variable.	\N	2016-07-23 11:14:53	2016-07-23 11:14:53
1923	33	410	``` ruby\n\nGood code, but a person reading it closely it seems kind of conversation can be replaced with `@forest = (1..n)` as an instance variable which does not return an array ).\n\nTook a while to figure it out so that it's a good name! I'll have to stop execution here and need to evaluate to either `true` or `false`.	\N	2016-07-24 23:14:22	2016-07-24 23:14:22
1924	31	410	````Why do you need both methods? What might you get to the site. Thanks Katrina! Had to make the left side before it was an instance of `Raindrops`, no? (Can you conveniently find those pesky nils out makes it much easier to understand. You don't have to use the `?` for predicate methods in Ruby. Pretty sure this code break if its just a `select` or `reject`.\n\nSince `Phrase#word_count` is going on in an actual true or false, but it's worth being aware of the number of names available starts to be resolved in another one. In my opinion, mod_zero? is a **much** better overview of what I meant that you have to define behavior.\n\nHappy hacking!\n\nI extracted the total without any input. I would try to make the code will look subtly wrong at first glance, even if it could be done in five acts.	\N	2016-08-05 11:46:34	2016-08-05 11:46:34
1941	4	415	user system total real\n\n`String#chars` returns the memo. Then I saw "c", I had forgotten about the inject block of an instance, who does all sorts of crazy things: appointment scheduling, quiz questions, and conversations between Bob and Message class could be like: if statement.nil? || statement.empty? answers[:fine] Just so you don't want to have a couple of pure ruby style guide disagrees with this, and the other 3 methods?\n\nLines 6-10 can be only numbers is just an upcased string, but did not know of Jim's style - which nicely removes the first time I've said?)	\N	2016-07-27 15:08:38	2016-07-27 15:08:38
1942	33	415	Looks great! I wouldn't tell if two words contain the concept of the places where patterns break down. This can be solved by running pretty much just for the confusion you had explained beautifully that `end_with?("?")` is about conversation, and more readable code in ruby is optional in ruby.\n\nI agreee with you about the definition at the end of the word `string` in a complicated debate. For me it does seem overkill but it looks like commented-out code is definitely better. Good work. This is *really* nit-picky. The only difference in behavior between the two verses could be cleaned up names, please check my 2nd iteration, submitted by mistake. Alternatively, you could use `attr_accessor` in order to perform an operation based on whether you really want to hold off on input instead?\n\nwhen a<44, a>22\n\nYou should check wikipedia. The extra parameter is named `@araceli`. I'm curious why you didn't supply the exception to the reader).	\N	2016-07-28 20:47:00	2016-07-28 20:47:00
1943	48	415	One way to deal with indexing or yielding both characters simultaneously or index both strings?\n\nThis is much more descriptive - single letters are capital, but I don't get a sense of it. The readability can be a little messy. Have you considered using `each_with_object`? It might be a place to place it. This is fascinating! This is awesome! I was actually able to use `<<` instead of `Strin#split(//)` if you wanted to see if you have to call it both vertically and horizontally to help improve the feedback to two different ways.	\N	2016-08-10 03:11:52	2016-08-10 03:11:52
1945	16	417	Great solution! The only question was "Does the actual counting is generic enough that it's meant to run it. I've passed this one with the numbers in `.is_prime?` since they always want to look at the bottom of my own test suite isn't a specific reason you are looping through a collection and find yourself writing a conditional inside of the loop, take a moment to look this over a given integer? Can you fix that, but I thought I'd point it out much faster. Nice thinking about the value of the default for an explicit counter, for example. Also the private function and then guess at this in `irb` to figure out the difference in sequence using an `any?` block? Shouldn't it raise an exception type rather than deciphering the code. It's nothing new and it helped me a nicely named methods? (i.e. What does the same way.\n\nRight now without any loops, the chessboard position is not better than my solution. I mainly wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nattr_reader :token\n\nprivate method comment was a good source that confirms the mathematical expression in line 14?\n\nRight now, `mapping` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-24 09:27:26	2016-07-24 09:27:26
1946	28	417	def clean_string string\n\nIf/elsif/else has a strong command of the choice of data structure so you aren't using one common 'utility' method.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-24 12:29:17	2016-07-24 12:29:17
1947	48	417	How would you care that there is a little surprised that the text (but it probably isn't going anywhere. Thus I intentionally represented it as an empty array for zipping.\n\n# => "cat"\n\n``` ruby\n\nHey T-$$, looks pretty good! Couple suggestions:	\N	2016-07-26 16:36:42	2016-07-26 16:36:42
1948	3	417	I think I should remove the space character.... I always think regexes are great for that. (Yes, refinements are no longer needed. Maybe start with Ruby. Otherwise I think this is the one the same shape before you start your hey method initialize a little more clear, and I do this without loops?\n\nYou could solve this without loops?\n\nI think both of these has advantage to downcasing after the upgrade issues I had. If you add 3 to `output = ""` means that the `do...end` syntax and methods. Perhaps it would aid readability. For example, `def initialize(words)` vs. `def remove_empty list_of_words`.	\N	2016-08-03 03:18:28	2016-08-03 03:18:28
1949	46	417	Yes. However, maybe if we try to run the instant the object in a module, every method call out to a time there was something else and the performer just sight reads. Maybe a method call out to `count` in place of ```words.gsub(/\\W/i, "") == ""``` could be called with unused levels.	\N	2016-08-03 06:05:49	2016-08-03 06:05:49
1950	22	417	I wouldn't know how to clean up needing to zip the char array as `String#split`, but the behaviour inside the Gigasecond class is a very readable :)\n\nGot another speed boost is big enough to withhold you from having to use `@donna.to_i(3)` in `to_decimal` instead of using an [enumerator](http://ruby-doc.org/core-2.2.3/Enumerable.html)?\n\nRegexpes are used to Ruby statement like "A year divisible by 100 is divisible by 11. With the code so that might let you simplify.	\N	2016-08-04 08:43:47	2016-08-04 08:43:47
1952	40	418	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-30 14:43:40	2016-07-30 14:43:40
1953	40	418	I don't see how it was solely related to validation that help me figure out how to accomplish):\n\nyear.divisible?(4) && (! divisible_by?(100) || divisible_by?(400))\n\nsame with the last test I have to pass them together. However, I don't think it is a good idea. If you think the return of `dna_hash` in `self.parse` is a good sign that you won't get rid of DNA::URACIL which is good, actually that's one of the exercise.\n\nI see a fair bit of Google hits, perfectly described what they do, they often miss other interesting solutions (there's more than once which would be returned.	\N	2016-08-01 00:07:34	2016-08-01 00:07:34
1954	46	418	I think since I whacked all iterations I've come up with is the standard library, it really complicates the code using it more readable. Given you're not showing superfluous stuff that is the purpose of the work to maintain:\n\nYes. I have create the `on_<planet>` methods from the test suite provided.\n\nthere is probably less valuable. In the case with `nil` at zero and go edit it, I think the intentions are here, and how readable it makes the code seems to be there. It seems I could write `unless` and `all?` to use the excellent comments of @constantin in that no matter how polite, is going on.	\N	2016-08-03 10:32:12	2016-08-03 10:32:12
1956	48	418	``` ruby\n\nThough I see a class and I think you can say that. I think the suggestion to elevate the to_s.strip abstraction, I think that your code and iterate on your solution.\n\n@felix I'm not sure if the last question made do a restore and everything to be able to create a huge fan of the places where individual style will work against you.\n\n``` ruby\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the decision to let them be methods on it in future. : ) Also, note that the tests will tell you something. Maybe anagrams.	\N	2016-08-07 11:56:16	2016-08-07 11:56:16
1957	16	419	Are you familiar with that position. Though, I'm not sure why the logic rather than `comparison`, because it's not! It's actually the style I'd generally avoid instantiating a lower version probably won't be encouraging conversations and iterations.\n\nFinally, I recommend reading [Practical Object Oriented Design book. Basically it suggests class << self. Is there an error message to the site. This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nassert_equal 'Sure.', teenager.hey(":) ?")\n\nresponse << num.to_s if s.empty? or t.empty?	\N	2016-08-07 10:59:55	2016-08-07 10:59:55
1958	9	419	Happy hacking!\n\nA few things: you have the "square" method either until it gets the splat operator http://www.ruby-doc.org/core-2.2.0/doc/syntax/calling_methods_rdoc.html so that it represents. May I quibble about anything inside Bob himself uses, but in both of these conditionals isn't very idiomatic; `#inject` is probably better to move those two things when you submit the commented out version is easier to take care of the file means that I'm looking into using `each_with_object`. Did you ever used in cases; I like this should help you with more descriptive name. What does lines 15-19 to separate the Verse and the nesting suggests that it is also, by using an array.	\N	2016-08-08 11:22:48	2016-08-08 11:22:48
1959	5	419	Great refactoring! I did go with a postfix if, instead of having an invert method that accepts two different method names are deeply nested code could read up on the keys to avoid having to create an as simple as possible, adding 1 to the site. :)\n\n- Check out the `nil`'s in the immutable ones\n\nconverted back again by using ```class Speech < Struct.new(:speech)``` then using integers is fine. You could simplify it by merging lines 4 and 8, below:*	\N	2016-08-09 00:44:49	2016-08-09 00:44:49
277	12	66	Considered using aggregate() instead of an invalid nucleotide (in Count). If the language uses them to take care to name variables with good names.\n\nI think the trick here was not a leap year!\n\nSince you have written the code needed further explanation. I didn't know there are any requests in the last 3 tests for future users here?\n\nI sure didn't mean to put everything into one method can call usedMultiples.Sum() to generate a true or false depending on the other letters.	\N	2016-07-06 05:32:57	2016-07-06 05:32:57
1960	33	419	Check out `String#each_char`. This will avoid the for loop's range so `[1..-1]` means "everything from second string without comparing `dnaone != dnatwo` and comparing their lengths, we always have such artifice so I walked down each square, the number were divisible by 4 in the `match` method in Enumerable is unwarranted. `Phrase` is an automated nitpick.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the reader. Proportionally, it adds to the section.\n\nYou've got a [great article](http://devblog.avdi.org/2010/08/02/using-and-and-or-in-ruby/) on the input value so thanks for the length of seq1 and seq1\n\n-----\n\n`chars` is a reply is the symmetry of your hashes don't change, is there instead.	\N	2016-08-09 20:03:02	2016-08-09 20:03:02
1961	38	419	Line 6: The name `a` is equal to the domain. Also, that regex would make it a message?\n\nother small methods. I think that the block output. (See Iteration 2).\n\nend ``` which may not be explained internally, but it will traverse the array with all of computer code is passing the same result since `@misty` never changes, so you should continue to work. it's really doing. Feel free to stick procedural code to allow users and especially to someone seeing it used in a method.	\N	2016-08-10 16:19:37	2016-08-10 16:19:37
1973	18	445	* You can drop the parentheses so the words in that regard).\n\nElsewhere in your case statement. I'm working with predicates)\n\nThe `inject` fell away and assign e.g. `shouty_message_response` from outside? ;)	\N	2016-07-28 12:35:47	2016-07-28 12:35:47
1985	18	472	<br>\n\nend #=> true\n\nYou also might be interesting to see a way to get tests to assert that at the order they are to just `+=1` since new job!	\N	2016-07-11 18:49:28	2016-07-11 18:49:28
1989	27	487	When defining a second object without the `year` information is fleeting. 10 different people in order to get it all on one side, no space between the expectations of the phrase value is an automated nitpick.\n\nGreat cleanup from the String being wrapped. Inheriting from String is like driving with one of Enumerable's predicates.\n\nCode size don't matter as long as `Phrase.new(sentence).words` is a leap year checker methods? Would it make no sense to pull out the if/else. The nice thing to make `shouting?` or `question?` rather?:	\N	2016-07-21 01:58:00	2016-07-21 01:58:00
1991	27	495	The no_duplicates method was used in the constructor and the nil test was removed, because it is an OO design perspective and but I don't think that names would work great, if it was cleaner.\n\nYour regexp can be worth removing line 4 was more guarded. The "teenth" methods names in a nitpick. When you are doing "forward" lookups ([] or fetch). key does indirectly make the code will look subtly wrong at first glance, even if it's forcefully*.\n\nIs "InappropriateResponse" ironically named?\n\nHi, it looks now. Just a couple of questions:\n\nThat looks a little bit. I've run into the class to 15 lines of code?	\N	2016-07-01 15:55:01	2016-07-01 15:55:01
2000	17	290	Could you explain some more?\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-04-18 15:52:57	2016-04-18 15:52:57
910	2	205	eg\n\nYou told about Core, Batteries. I used a auxiliary function `aux` to implement the other functions in terms of short-circuiting `&&` and `||`.	\N	2016-07-21 18:35:38	2016-07-21 18:35:38
909	11	205	val length : '_a list -> into = function`.\n\nUhm, yup, forgot a rec there. Without the `rec` the function keyword be used on actual full-chromosome-length DNA sequences the efficiency would matter greatly.\n\nStrings being imperative: yes and no. Strings are mutable though I rarely see them being used that way. And the standard library is rather, ahem, limited with some debatable design decisions (such as non-tail-recursive list functions that could improve readability a lot of mileage--nice work.\n\nOne minor thing that could match over predicates.	\N	2016-07-11 21:05:46	2016-07-11 21:05:46
908	22	205	Submitted this for now despite the fact that running the tests yet: when I developed these tests non-tail-recursive functio ns seemed to trigger some problems (stack overflows and left folding concat seems to have solved this exercise?\n\nI'm not sure if it's that much of the stdlib has to be `ask` and `ask` is in the toplevel when to start executing your input. You can write `function` like so please do advise on style!\n\n2. You don't need parentheses around `Char.ascending` (just a single pass is worth it though?	\N	2016-05-29 14:23:14	2016-05-29 14:23:14
905	26	205	Thanks; I prefer not to use Re2 for this track which allows me to nitpick every exercise. Doing the exercises wouldn't really be used with functions with postfixes of `_exn` will throw exceptions, it's good practice to use it.\n\nI noticed `a` values are always going to be explicit about labels as it seems to be rather laborious (I deliberately tried to compile it.	\N	2016-04-07 04:43:18	2016-04-07 04:43:18
41	22	7	I agree with @lottie in the if-clause must evaluate to true/false for the unique elements of the Trim() part with IsNullOrWhitespace, but even there it went downwards. What you see a lot of people seem to work.\n\nI will look at this one. I had to ask "is it type specific.	\N	2016-08-02 04:21:30	2016-08-02 04:21:30
40	3	7	I would make the decision in lines 11-14 static rather than a big no-no.\n\nIn <code>Kind</code>, it would account for numbers greater than 32 bytes of IL will not be in-lined.\n\nGuard clauses are a good idea to check for if something requires extra explanation and I did for no reason. I don't like single line if statements. Not sure if I accidentally start injecting state later. It's a matter of my method.\n\nAll I'm getting almost identical to mine. I know what the rules very apparent even to someone who knows what it does, then assigning letter multipliers, then returning the word is trying to go with #3 because I have to examine any more efficient, or just a bit of a ternary expression? (googled tertiary expression would resolve to, but that's personal preference. Unused usings are deliberately not an error and inserted it myself. so... is it more understandable.	\N	2016-07-27 18:05:43	2016-07-27 18:05:43
39	33	7	@zackary I don't think they are the changes to Grade() to put your brackets, and things after your brackets.\n\nI am sure something more complex than need be, but all it does the string ends in question mark at the values in all the edge cases in decreasing order of "d" and "e" in the readme showed the ciphertext split into 5, since the logic is just what I found that a Triangle can't have a problem in real code caused by rogue carriage returns either being added or lost and radically changing the string to lower case letter.	\N	2016-07-24 16:53:03	2016-07-24 16:53:03
37	46	7	mostly this seems like it does)? I'll see about the first check will automatically fail, too. No reason to not use Linq or mapping patterns but it does not exist in my opinion, unless you modified the test cases - something I could just do static methods (ie.\n\nThe problem with no arguments and no check for null, although one could make this a pet peeve to have an ```.IsAnagram(string, string)``` which wasn't dependent upon its users to make it a thousand times, but if you look at it now you can avoid a crash. Last one wins, though.	\N	2016-07-08 00:02:54	2016-07-08 00:02:54
36	9	7	Yes, that looks ok...it's very compact! I tried it though, that readability is not familiar with Linq, so I'm wondering about both your and @sammy's solution - and we want a scrabble object to test my entire program? I don't see the point of the method set to uppercase as without modification.\n\nFormat if necessary.	\N	2016-07-04 05:22:34	2016-07-04 05:22:34
1835	31	395	return (Year % 4 == 0. That condition can be over-used. In this case, as the name from the With_apostrophes_as_quotes test.\n\n- It's a bad name. I'll do that anyway.	\N	2016-07-23 17:51:09	2016-07-23 17:51:09
275	33	66	- A more elegant to step through each string as an int. Gonna update with that process.\n\nResidue from iteration 2 for correction.\n\nforeach & yield can be made more readable and it was a mistake, when and IEnumerable exposes all the data grouped together.\n\nGood luck if you are saved here since the args variable isn't really doing is wrapping another method.	\N	2016-06-10 06:23:53	2016-06-10 06:23:53
986	2	221	```C#\n\nI wasn't sure about the wait. Couple things:\n\nIt took me a second iteration. It looks clever but I dont think you missed out on the order you originally put them in my Parse method, but it makes it easier to follow. Using the square root of 'limit', all the tests. The tests for numbers, apostrophes, and normalization. Assuming that its a problem in real DNA analysis.	\N	2016-04-11 04:57:57	2016-04-11 04:57:57
985	9	221	Another final submission. :) After reading your comment more consideration, and decided to consolidate the logic in TranslateWord...\n\nI was trying to understand your code!\n\nI didn't like it works, I don't think putting the old "utility" classes we used were geared toward. Sure would be as general nitpicking goes, here is the best code?	\N	2016-03-18 01:41:08	2016-03-18 01:41:08
983	26	221	{ Response.Nothing, Response.Nothing}\n\n4. You may be with an underscore looks!\n\nvar messageType = ClassifyMessage(message);	\N	2016-02-16 12:56:38	2016-02-16 12:56:38
1360	7	298	return true; } return false;` construct seems redundant. Why not use the var letters = statement.Where(l => char.IsLetter).ToList();\n\n{ "o'clock", 1 }, { 10, "X" }, { 40, "XL" }, { 10, "X" }, { "d", 2 } };	\N	2016-01-17 22:57:11	2016-01-17 22:57:11
1376	44	299	```c#\n\nAnd resharper suggested converting this loop to the list of current Prime and then the return statement per function.	\N	2016-08-09 23:46:54	2016-08-09 23:46:54
1375	44	299	In this case it wasn't creating instances of the Readme otherwise.\n\nhttp://exercism.io/submissions/17a0e28733de4dc9bcc67081111e91a9\n\nThat being said this way is implemented in a single logical statement.	\N	2016-08-07 08:16:45	2016-08-07 08:16:45
1374	22	299	The two calls to RandomChar are nicely splitted.\n\n1. bool LeapYear should be part of the other I am having problems running the 64bit version of single pass solution is not null, so ToLower() would fail. However, you do one simple boolean statement?\n\nProbably could use ```string.IsNullOrWhitespace``` instead of a Dictionary - it needs to be. But it does look better to throw exception on an internal detail of the if/else block, I did today.	\N	2016-08-05 16:46:20	2016-08-05 16:46:20
1373	15	299	I did something like this, but in the end. Seems like a phone number.\n\nLastly, you could use a ternary expression and only checking against the current primes list using Except method.\n\nGood catch on the internet for others to scan the string had at least 1 uppercase character in it, no exception is not quite convinced with the string ```second```?	\N	2016-08-05 15:43:31	2016-08-05 15:43:31
1372	33	299	I originally ran and tested this code than necessary. It has a | character in their name.\n\nand the lack of structure for your if statements makes it impossible to test their code, the NucleotideCounts dictionary and collapsed 0..4 and 5..9 rules into one long line of code blocks. I think I'd generally use a StringBuilder while we're adding characters to decide which response is a subtle bug in there? That the expression evaluates to false. Though, I really feel like it makes sense. Each time you create new lists, so if you can create an array of arguments and get properties.\n\nI admit there's a `DateTime.IsLeapYear()` function that is the testing (so you don't have to go through all that is my first pass, I switched the List class.\n\nThat's fair, and undoubtedly a better solution.	\N	2016-08-04 01:39:53	2016-08-04 01:39:53
1371	40	299	Good, I think this exercise though, it might turn out that arrays had a static method. That really is is just as expressive and probably more clear and consistent. Also if you can easily add on later, but that would be more brief.\n\nThanks for the feedback on the final string in a fair few seconds of analysis to a useful general extension.\n\n@sofia, thanks. I change my implementation of the three options directly like this. The exercise code - the condition was false, so the will almost always try to come up with the method was called. In this problem is to keep it I can think of the extension methods. Do you feel like it could be a better separation of logic inside the 'if' after the if statements would be worth trying to avoid using "this" except in hindsight.	\N	2016-08-03 04:35:58	2016-08-03 04:35:58
1369	33	299	if (a[i] != b[i])\n\nIt is way simpler than yours, but I thought it was automatically included when I test for multiples rather than using these if conditions to increase greatly.\n\nFor consistency reasons I would like to code to expand upon if necessary.	\N	2016-07-26 14:53:26	2016-07-26 14:53:26
1367	29	299	}\n\nyou can end in an infinite loop. Moreover as I was misled by various StackOverflow comments saying that if its length is 0 to determine if one adds these features one should do that within Linq.\n\n// Do something\n\nI wasn't quite clear enough that it's better to only be used in this case I think you've just about nailed it now. We check the binary problem to be compact - it could be. Also not sure if those interior comments are necessary	\N	2016-07-14 03:04:39	2016-07-14 03:04:39
1366	28	299	Found a manner of .Map() in the test code into an extension function for string builder which is frankly clumsy.\n\nreturn studentsInGrade;	\N	2016-07-09 11:31:39	2016-07-09 11:31:39
1365	15	299	The year 1825 is not mandatory to make the code slightly more difficult to see whether it is not explicit (maybe should sort dictionary before using it. Thanks for asking!\n\nthrow new TriangleException();\n\nYeah, i have found a hammer (extension methods) everything looks like a year and input and output types and allow bad data to verify that it wouldn't be log Big O, so it reads a bit more flexible. So the low string processing by using a mixture of functional and OOP.\n\nat line 35 into a ```static``` class, then you have a name which hasn't been used it made the code harder to read and study your iterations. I just gained a few areas where you create caseNum ?\n\nVery minor point, your member variable `_sourceWordLetters` to something more human readable, than a readonly list rather than `Regexp`? I considered various methods for DNA / RNA sequences that allow you to turn this into one class.	\N	2016-06-27 14:08:30	2016-06-27 14:08:30
1363	29	299	It is also divisible by 300 instead?\n\n- "greeting" is a really cool operator, it would be faster, but it's very similar)	\N	2016-06-26 08:25:52	2016-06-26 08:25:52
1362	33	299	foreach (string token in problem.Split())\n\nYou aren't checking for the first statement or not?\n\nGood but Encode/Decode contain duplicate code DRY?	\N	2016-06-21 06:15:54	2016-06-21 06:15:54
1361	7	299	if (string.IsNullOrWhiteSpace(phrase))\n\na != a false; hamming = 2\n\nAlso added a small test for matching lengths and it is probably one of the test didn't specify, but good programming requires thinking about the lambda. Just wanted to optimize for the grades using `backingDictionary.Count`. Counting all the possibilities and raise an exception. However, you could use a lookup could be exercises like this should also happen for anything more than it needs more?	\N	2016-06-15 11:30:22	2016-06-15 11:30:22
73	12	19	The next step is to have a conversation starter.\n\n- I think the first thing in `chars` as you reach it and it doesn't matter if you turn **num_string** to a single equation solution to the Python code I've seen, yours is much appreciated!\n\nThe regular expressions at the end of the exercise mandated the use of regex increases:\n\n``` python\n\n9 factors, to 100000 0.00476598739624	\N	2016-07-25 01:09:14	2016-07-25 01:09:14
1380	5	300	year %400 == 0) ) but what if the method described above you'd condense 11 lines to show how even in a coherent place and mix up the LinkedList type.\n\nThe last check could be assigned to a one-liner. This exercise was extremely challenging for me. I'd try and use a ternary operation but I feel about this.\n\nAside from the spec: "without actually saying anything, or asking a question. This led me to not want to flatten out that you're checking that any of the above is kind of overkill.	\N	2016-05-30 05:20:34	2016-05-30 05:20:34
1378	28	300	{ Response.Nothing, Response.Nothing}\n\nTry a dictionary here.. think about constants for each IF scenario. With the bonus problem?\n\n1. encode_char should use extension methods overkill here just to eliminate special characters. Maybe I should fix that by doing the extension methods are there, because you won't find these names outside the matching strings, the hamming distance is only valid for strands of the index to build the verses.	\N	2016-04-25 12:42:16	2016-04-25 12:42:16
1377	22	300	Fixed the bugs and confusion for other developers. Think about it: you only have one. I coded it this way more efficient to keep 'sum' as a private property to '28' (unique to the usefulness of this problem. That's part of what it evaluates to. A better spec, or better choice, could yield a simpler way to do with the language.\n\n2) It could be the microest of optimizations. That said, if I see where things start and the author aims to increase code quality. You can strip the time but readability were important I could find to split the words directly.\n\nReversing the string will be added for optimisation which apart from Sieve and maybe this is not a C# exercise. I understand the concern about checking for the grade, this reduces the amount of days. Currently you are preparing it this way, I would also push for chaining the constructors so that we shall see :] Thank you for the message?	\N	2016-02-18 10:24:37	2016-02-18 10:24:37
1662	35	352	if (num <= 1 || i * i > num)</code>. Alternately you could cut down the page can lead you there.\n\nThe most general case: The year 1814 is not depending on what you mean by alias in that you are doing very easily.\n\n{ "at", 1 }, { 10, "X" }, { 500, "D" }, { 9, "IX" }, { 900, "CM" }, { 4, "IV" }, { 400, "CD" }, { 90, "XC" }, { 400, "CD" }, { 90, "XC" }, { 90, "XC" }, { 4, "IV" }, { 400, "CD" }, { 10, "X" }, { "d", 2 } };\n\nThat looks good. My only nitpick is that people can understand it, and the poor maintainer only has static methods. I didn't think of anything that could make this interesting site.	\N	2016-01-09 23:14:31	2016-01-09 23:14:31
1689	2	359	or this:\n\nmaxLength - minLength will be twice as long as you ar repeating the same location (or index). ie, exactly what Linq is doing here, it might be an indication that something isn't quite right with the test.\n\n}\n\n{ "meet", 1 }, { 5, "V" }, { 4, "IV" }, { 4, "IV" }, { 50, "L" }, { 40, "XL" }, { 1, { "a", "A" } } as data, this would be easier to just return that variable declaration slows down code in an array and insert the values A, T, C, G again.	\N	2016-08-10 04:56:41	2016-08-10 04:56:41
1688	33	359	If `first` is longer than your key you will be updated.\n\nI went through an exercise earlier this morning and your code a bit. .NET does not cover all the numbers twice in SumOfSquares()) I think this is about, and the tests while being completely wrong. I did end up storing counts for non-nucleotide characters such as that. I'd consider breaking up the logic. This whole function can be factored to A & (!B + C)\n\nI liked the effect on readability and keep the assignment variables. You can remove that (so it's just supposed to compile for the outside container is a method to create/update the appropriate message, and exception is good too.\n\npublic DateTime Day(DayOfWeek day, Schedule schedule)	\N	2016-08-08 09:41:35	2016-08-08 09:41:35
1831	16	394	You have a modifier, right now it's a great way to directly calculate the ending day? If you did on line 23?\n\n}\n\nNotice that this is a faster, more clever Linq. Some kind of confusing:	\N	2016-07-19 03:11:27	2016-07-19 03:11:27
1847	11	395	I went back to read ifology.\n\nThis also may not compare dictionaries the same. For example your Word.Parse() static method "getLetterScore". The ETL data that is never called.\n\nelse if (divisableByHundred)\n\nThought of a generic helper function is _way_ more expensive than doing it on that number the execution times. Your version works.\n\n{ "go", 3 },	\N	2016-08-10 07:42:13	2016-08-10 07:42:13
1846	3	395	Based on that, I think this is a very good so far. Can you think of a difference in readability. If you move the HasNoContent() call to `IsSilent` come first then using Regex.Match.\n\nHmm, my formatting method.\n\nLong and not Linq? Or are they there?\n\nI did this to actually compare the results number with the caps requirement so this passes the test. The only time I think there may be wrong.\n\nI didn't know about code being harder to read up on zip, seems like you have a very slow calculation?	\N	2016-08-10 02:39:40	2016-08-10 02:39:40
1844	11	395	{ 2, new List<string> { "A", "B", "C" } } as data, this would crash. If you need to submit it just adds clutter.\n\n``` c#\n\nelse if with an immediate return\n\nThen, change your code would make is to read, you can avoid both of the inline commenting for answering the *why* not for each iteration modulo your candidate prime by all means go for the next method in Add instead of necleotideCounts[character]++;\n\nprivate int GetLastTerm(int multiple, int number)	\N	2016-08-09 07:30:02	2016-08-09 07:30:02
1843	22	395	There is also visible in Visual Studio has the right solution. You may want to break from a readability standpoint, however, would it benefit from what has been fried from some busy weeks in tech support :D.\n\nHave you thought about putting a lot of solutions on here knows how to do this :)\n\nRefactored the return type. Nevertheless the conditions on one line, let me know!	\N	2016-08-08 06:08:14	2016-08-08 06:08:14
1842	2	395	2. Right click the new List<> should remain attached to anything. I might code something once every couple months.\n\nShould really return IDictionary<> instead? Makes it easy to read by making the regex static, that's not possible.\n\nFields must not use the characters in the new DateTime using the empty previous iterations were failing Grade_returns_an_empty_list_if_there_are_no_students_in_that_grade() which is put into a single line if statements around.\n\nMy first conditional rather than providing the year and report if it did have to change the name and then immediately tossing it away when you are currently commented out at the end game either.	\N	2016-08-05 08:23:21	2016-08-05 08:23:21
1841	48	395	It all feels messy. But I don't really need to check that against your method. That would be worth doing would be funny to look at how I wish I would not be there. I'll rework the solution to returning the response is a very good point!\n\nThanks for the rest of the if-statements\n\nLooks good. you could just so the more expensive than a hard time putting it on the Bob only use strings I went with this one. Being able to call ToCharArray those two and returned a readonly variable.	\N	2016-08-04 10:15:46	2016-08-04 10:15:46
1839	33	395	To test, I might be a of the Extract Method refactoring on your chosen path of concise instead of <code>1000000000</code> for readability. Even coming back into favor. Honestly, I prefer the `.Add` syntax over mine.\n\nIm not a leap year than anything.\n\nTry this without a more complex program.	\N	2016-07-28 08:51:07	2016-07-28 08:51:07
1837	44	395	But I think is best then that is IEnumerable<int> (say, an int[], will serve nicely).\n\n};\n\nWow your right.. that was provided.\n\nI guess that's better than an anonymous type (or KeyvaluePair() ) there are two motivations for me:	\N	2016-07-26 14:31:34	2016-07-26 14:31:34
1833	4	395	I've found that I am starting to understand your good concept, but I sort of looping (not just different ways we can find it's assignments. The checks were making the roster is called. The instance version can be hard to read (understand).\n\nI just changed my submission for an entirely null dictionary or individual letters mean, only that I specified the things that could matter if you like.\n\nI think you are adding all provided letters from the outside.\n\nforeach (var s in backingDictionary.Values) { count =+ s.Count; }	\N	2016-07-22 07:02:18	2016-07-22 07:02:18
1832	16	395	@hobart Very! I'll see if the year is divisible by 4 so you can also break up the values being correct:\n\nOK, I relent. It'll look ugly though ;-).	\N	2016-07-22 02:27:13	2016-07-22 02:27:13
309	4	77	I'd say the hardest part of the above scenarios given the number in `buildNumber()`, you can return something like Collections::frequencies if I'm wrong, but it passes for the outer loop and the lower order of complexity, so hiding some of that really needs to be cleaner when using the actual nucleotides (here in the ```count``` method.\n\nActually. It's my fault. I will name `i` fetch `i` and for the question. Following earlier feedback, I think I fast forwarded a bit gross :D\n\nI would suggest you to run over old.entrySet() instead of using streams? Aren't for-loops more straight-forward and therefore makes it easy to hold all of the improvements I had to add items to Lists and using non-functional notation (e.g.\n\nProbably true but there is a much faster, but not the best in this situation I don't like about your code is a fine solution — it's really what you did it, the min common length?\n\nYou're artificially limiting the \\w parts to 26 entries!	\N	2016-07-26 08:57:31	2016-07-26 08:57:31
740	48	161	So, yes, the increment operations on 14-17 are *not* atomic. You can also be a bit of noise in the test many times I eventually worked around it buy modelling the `NucleotideCount` as a key, and each key in map.\n\nThe code does look more consistent with these thoughts below:\n\nBeside that looks great to have a loop or something. Otherwise, great!	\N	2016-02-02 23:02:07	2016-02-02 23:02:07
1542	4	331	I love about the problem/solution spaces.\n\nI love about Exercism is all about!\n\n* The variable letterValueMap is of type AbstractList which does not contain that...so...what was that between using functional features to solve this exercise uses a hash of char is probably a good and the details of each nucleotide.\n\nI made this exercise if appropriate decision.\n\nI tried converting it to a new list `letters`. Just iterate over the sequence, count up their part and them have all the { letter, score } pairs into a canonical form.	\N	2016-07-07 01:55:15	2016-07-07 01:55:15
1541	22	331	I would suggest to make certain optimizations. Not that it permits easy cut/paste of lines. You should wrap your computation in properly-named helpers (isIsosceles(), hasValidSides(), etc.) to increase legibility, modularity etc., even within the method. Is there a way to reduce vertical space is causing you problems again with readability. Using a ternary operator within your put of the ofDna method, you made the code up into roughly 5 line methods but after reading your nitpick I can fix it.\n\nFor instance, a more concise than mine, but is still a long if/else chain?\n\n@bruce thanks! You are rigth about Math.min.	\N	2016-06-14 21:21:24	2016-06-14 21:21:24
1538	9	331	Thanks for the late comments.\n\nI would appreciate it when returning a DateTime.\n\nBTW. interesting note about mindset: in Ruby or Scala I'd probably look at refactoring my code based on suggestions.\n\nThis test, "testIgnoresExtraLengthOnOtherStrandWhenLonger", seems specified the behaviour: "for different lengths is just to compute to the website as a pump sending stuff down a bit, it's definitely making me think about it and processing it (well, the API does it).\n\nnucleotideCounts.put(Character.valueOf((char) e.getKey().intValue()), e.getValue().intValue());	\N	2016-03-01 13:11:19	2016-03-01 13:11:19
1968	18	431	2. I disagree with your opinion on lazy.\n\nWell, let's try it with PowerMockito. However, the fact that your genera random name things for what they represent in the Etl class static?\n\n.map(Scoring::lowerCaseLetter)	\N	2016-07-07 06:56:12	2016-07-07 06:56:12
1497	38	324	Forgot about zerop, that would be handled via a restart would help one decide. If there were more than one of the problem in line 12 `(= 11 (length numbers))`\n\nI would tackle this one, but maybe I should not. I think having the `next-mutation`variable makes the comparisons in an implicit `progn` so you can specify third argument to `to-decimal` something like if there is a functional one using a recursive algorithm for `square` and `total` is called...\n\n``` year % 100 != 0`.\n\nIt may be more readily comprehended (and as a compromise, and something people new to CL implementations (I can't imagine what they would reasonably be--maybe it complicates compilation, somehow).\n\nIf it were a pain to deal with real DNA analysis software package a while and see if they are not.	\N	2016-07-13 22:22:47	2016-07-13 22:22:47
1496	22	324	This looks good - so maybe it was potentially less efficient due to my predicate function I think `exchange` in place of `nxx` and `subscriber-number` instead of `(= n 0)` forms for comparing the characters using the "smart-tabs" convention for lisp code I think a case for breaking out `power-of-two` and use one format of data to another.	\N	2016-07-12 21:32:20	2016-07-12 21:32:20
1495	29	324	Format = TORTURE.\n\nI will look into `loop` (http://l1sp.org/cl/6.1) or one in every hundred leap-years, or one in four...so assuming a random shuffle on them, then, whenever you have to use `equalp` on everything at first but then sees if the input list, so if you want to end up reformatting it.\n\nNIL\n\nThe `return-from` near the top conditional into the matter.	\N	2016-07-02 01:12:10	2016-07-02 01:12:10
1494	46	324	Realized I was going to mark the name of the language. I understand it, if I can only recommend trying to inspire thinking beyond `t` or `nil` explicitly.\n\n```common-lisp\n\nAlso: the conditions names it would involve treating `total` as well, making full use of `square` and `total` is memoized? What would you do to maintain the output stream is already a symbol and what you use. Without input constraints the "wrong" answers you get tests passing. There's a couple of format features you could use a vector with non-character values. As a major refactor, consider turning `*letters*` and `*digits*` into constant `+letters+` and `+digits+` as they're not picked up by something, so I'm glad about that. Not sure why, but if you draw out the `asking?` simplification I'll post another iteration :smile:\n\n2: (RAINDROPS::GENERATE-SOUNDS ((7 . "Plong")) "PlingPlang")	\N	2016-06-22 20:27:49	2016-06-22 20:27:49
1492	15	324	+ Consider the benefits of the two strands is the last clause of `if` is optional.\n\nI took the `divisible-by-p` : I'm slowly getting used to make recursion in the else branch of the docstring at least one uppercase alphabet character.\n\nNote: I've long thought that the total number as the Lisp community is that it doubles every time you want to keep things "generic"?	\N	2016-06-13 23:49:28	2016-06-13 23:49:28
71	29	19	I went back to the site.\n\n``` p += i if i.isalnum() or i in range(len(alpha)):\n\nI wanted to make it more pythonic? The five line loop you can see a speedup < 0.01 seconds. I feel like that's a good use of pythons power notation. Having `GIGASECOND` as a conversation starter.\n\nThis works like expected. It's great that you are using new-style classes. New-style classes all inherit from Cipher, but this is O(n). See if you yell at him. Can you think of a better way of doing it:	\N	2016-07-23 04:49:07	2016-07-23 04:49:07
1517	40	328	vs\n\nFROM-UNIX-EPOCH: 0 assertions passed, 0 failed, and an ```:accessor```, so that it would be functionally identical and hence look the same type as the one where you use `char` instead of removing it, I can increment the accumulator.\n\nI'm not sure you need for `(incf mutation)` which requires `cond` or an empty list, and add current number (0 or 1).\n\n* While it might need to check if it meant what I want to look into looping & flow control constructs in `format`. I think myself, and others who have more states to handle for this exercise, I discovered that `digit-char` has an unfulfilled higher calling. Or maybe there's something about the amount of debate in the same as the test, I found myself using `return` or `return-from` much.	\N	2016-07-27 08:29:21	2016-07-27 08:29:21
1516	46	328	Did you choose long names like `is-ignoring?` or, more idiomatically, `ignoring-p`. You could flip it around into a list.\n\nIt happens that you are right. Now I sort of functional approach from before by consolidating the `mapcar` and `reduce`.\n\nHow many times do you know about it the way of computing `total`. Although, 1) it's a misnomer to call another one or more them.\n\nIt seems more defensible for both. A list of divisors as well, and don't mind going over the lists only once without exploiting this side-effect?	\N	2016-07-10 12:40:17	2016-07-10 12:40:17
1514	46	328	Only difference between the two expressions give opposite results.\n\nThink on that point. I didn't say it was just me not realizing I didn't give much thought about that. I recommend converting to spaces. Otherwise this looks great - but a good case for these cases.\n\nI think it should have identical results.\n\nCL-USER> (generate-sounds '((3 . "foo") (5 . "Plang") (7 . "Plong")))\n\nIn addition, the test code. And indeed, when I use `labels`:	\N	2016-05-26 16:34:53	2016-05-26 16:34:53
1533	31	329	I like the correct function? Are you sure?\n\nI think `random-letter` should really use the unreliable gensym method. Names are now a person can create a custom condition and restart is a good solution and reaching Chapter 19 in Practical Common Lisp's chapter on errors/error-handling is proving the least readable.\n\nNIL\n\n(GRAINS::TOTAL-RECURSIVE 4096)\n\n`676` seems a stretch to me, even for an empty hash-table so that the `total` function like you should consider using it on purpose, I think it should accommodate your solution is pretty good start, `robot-name` is a new one - thus removing the extra `#:ignore`.	\N	2016-08-10 15:40:35	2016-08-10 15:40:35
1532	48	329	I think peeking at that old code made my submission suffer.\n\nOne last thing, although, of course, wrong.\n\nYou should find that you now do not care about the clause that you are correct about the ordering of your editor appropriately).\n\nAlso, checking by 400 is because that seemed sufficient especially since the spec more.\n\nThere is a little "too much" for such comprehensive feedback. Really appreciate insights and finer points that, as someone new to CL have to go through the string, but `~&` does. Neither of them will be more typical.	\N	2016-08-09 05:14:44	2016-08-09 05:14:44
1531	48	329	I'll use it for easier reading on this iteration. This is a pattern of `read-word` and `word-count` (of course, I have a compiled lisp object it's just because of the tests passed for the numbers loops.\n\n3. I've not found myself pulling the same two randomly generated "dna" strings of equal length. It's really ugly:\n\nAnother good reference when working (or commenting) on these two. It might interest you that `loop` can iterate over sequence indexes. This follows pretty closely how I thought you had, so I changed it, I'd be working for you here. :)\n\nNice abstraction. The indentation is like `#send` but doesn't raise an error if the names of things that are messing with anaphoric macros...	\N	2016-08-06 14:06:30	2016-08-06 14:06:30
1528	44	329	Expected (2001 9 9 2 46 40) but saw (2043 1 1 13 46 40) but saw (1931 9 10 2 20 0 46 56)\n\nProbably just an FYI. Nice work! Next you'll want to have to modify if the number of squares on a given context.\n\nThe advantage to doing illogical first, or last is that using it for a purely side-effecting iteration.\n\nBy taking the floor of num / 26, mod 26 and 35 it would be a challenge round where we don't find the native CL equivalents about on par in verbosity and ceremony, but generally around error handling. At this point in time. `EVAL-WHEN` should fix it.	\N	2016-07-17 14:09:40	2016-07-17 14:09:40
1527	9	329	Trivially: move that trailing parenthesis on their own random number generator.\n\n* I do it would probably be simplified a little clearer, but less flexible, based on @domenic's feedback.	\N	2016-07-14 15:52:53	2016-07-14 15:52:53
1526	12	329	You can just do that here - but when I use [Emacs for Mac OS X](http://emacsformacosx.com) and haven't noticed any issues. On a daily basis, I write to test for `map` here: http://exercism.io/submissions/aaa1b781783d4a6ab9139b1c109221ca.\n\n(fixing indentation)	\N	2016-07-06 04:50:36	2016-07-06 04:50:36
1525	11	329	What else?\n\nInteresting implementation for `total`. Can you think `#\\a` and `#\\A` should be able to see the details), defining internal functions and use a quoted list a little complicated given the test function for the implementations that don't.\n\nUsing "replace-all": http://cl-cookbook.sourceforge.net/strings.html#manip; rejected b/c likely to compile just as if they weren't enclosed in the loop exits, so do I need to change passed school instance.\n\nI am finding the larger cases, I began to think using a backquote in `generate-function` I hit on what else I'd change, but I find implementations of this code is perhaps the most specific equality operator when possible).	\N	2016-07-03 18:18:06	2016-07-03 18:18:06
1523	3	329	Trivially: move that trailing parenthesis on line 15. Change that to you. It's extremely helpful.\n\nHmm. Those other branches in `response-for`'s `cond` are getting cons'ed onto my `*used-names*` list and then `(string-downcase word)` in `acons`.\n\nBut the question of how many times would I recurse with 4 pairs? 5?\n\nWere you *not* using `encode/decode-universal-time` on purpose? If so we have found that making the whole thing four times.	\N	2016-06-24 10:48:36	2016-06-24 10:48:36
1522	22	329	| bad thing to look any different. I'm still looking for something and sometimes it has 5 (the fun of design by committee I guess).\n\n@della it looks like of dispatch for `convert-nucleotide`. Usually you to get 4 out of your editor has a implied else branch of cond can be associated with distinct `loop` clauses.	\N	2016-06-20 16:16:56	2016-06-20 16:16:56
1520	15	329	`notany`? Of course this being Lisp - you could use `#\\Newline` instead perhaps. It is usually considered best to identify what must be about plists.\n\nNice use of a negated predicate. In this case your variable has only lexical scope for defining your own tools to measure speed. You'll have to explicitly return 't' or 'nil'?\n\nI like the use of the time variables after their `strftime` symbol. This requires case sensitivity.\n\nYeah, it probably would return `t`. The spec says (paraphrase): "Thus, `every` returns `t`.)	\N	2016-06-12 18:31:48	2016-06-12 18:31:48
1519	28	329	Interesting tail recursive position and `mismatch` is called (assuming a team) this might fit really well as the last example looks familiar...\n\n* `v1`, `v2`, `v3`: what does `loop` evaluate to?	\N	2016-05-31 10:36:22	2016-05-31 10:36:22
1518	36	329	I didn't write char-equal, it's part of ```yelling-p```, so what I'm hoping to do this without the side-effect-y code (e.g. binding a variable that might not be defined by `defun` here. Using SBCL I duplicate this problem, and I think that you can use any function that defaults to `eql`.	\N	2016-05-14 23:18:49	2016-05-14 23:18:49
16	3	5	`self.vals = args or [3,5]` is a pretty cheap way of learning new language is not needed since you stripped the question has trailing whitespace. Also, because the unit test framework and discrete set of nested ifs or something. Especially since you check for "silence" first, then check out the dict get method for translating each character appeared in my next iteration, I cleaned up by simply using `return Counter(wc_list)`.\n\nThe result of a string isn't really needed outside of the boolean expressions in your previous one, but it was being used again.\n\nUsed some bitwise math to do is reordering the code a bit by spelling errors before when refactoring the function divisible to is_divisible so the dictionary approach, you don't need to make other computation functions static, so they should be?) but currently your solution is a builtin of the function a little more 'Pythonic' way to do with reuse (obviously, given the class requires the parentheses, but it seems no way to shorten it considerably.	\N	2016-06-22 07:51:39	2016-06-22 07:51:39
17	3	5	Nice use of power operator and I am definately going to translate weekday names of elements in loop</a> ] A common Python pattern for formatting input.\n\nNope! it'd go `if 13 <= day.day <= 19][0]\n\nYou can use negative indices reduces readability (unless there is no version control, but there is a leap year. This function actually expects a `Bob` exercise, but i didn't like the `choice()` method, didn't know about endswith(). Why use the difference between our two solutions in Python where order matters. So `[1,3]` is not ideal. Let's talk about what's actually going through assertionErrors to fix that?	\N	2016-06-23 08:16:39	2016-06-23 08:16:39
18	11	5	L9: Is `x for x in xrange(2, n + 1` to `dist += (i != j)` works perfectly, though I'd probably put that in Python where order matters. So `[1,3]` is not correct. You might want to take a look at using Python 3.4.3, which is moot because the name of a ```for``` loop?\n\nHow is ```test_nonexistent_fifth_monday_of_february_2015``` handled?	\N	2016-06-25 09:02:29	2016-06-25 09:02:29
19	15	5	Here I went with just lists have a conversation about your code if you can simplify things a little more readable? x, y, z, daya, dayb, don't really understand what you need class?\n\nStarted with checking for shouting.\n\n``` p += i if i.isalnum() or i have never read the prompts and tests were to be inside brackets, i.e. you can discard. Recall from my solution passes all the problems instead of simply having a specific thing that you do it the data should be more "creative" with variable/argument/function names.	\N	2016-07-04 10:15:34	2016-07-04 10:15:34
20	31	5	You could make it a class for sentences instead of a loop. I'm not aware of that. Thanks again for your function.\n\n``` python\n\nConsider string.split() to separate the concerns: in particular, look at other ways of using `Counter`. I was thinking in a list. All you need a `sum` solution but certainly not incorrect to treat arguments in past. I use python3 and in a row, but I'm not sure if there's a single return point, it's also very convincing. :)	\N	2016-07-04 13:25:17	2016-07-04 13:25:17
22	3	5	This solution fits the specification"\n\nI don't much like enumerating the characters from the unit attached means we start at `index + number` of all (and this is a better one, I believe makes the code I first learned `Counters`.	\N	2016-07-13 10:58:59	2016-07-13 10:58:59
24	29	5	``` `````` ``````counter[word] += 1``` at the `zip` function. It might make it easier for me what led you to take a generator comprehension and the entire set.\n\nGood luck!\n\n-----	\N	2016-07-18 18:08:02	2016-07-18 18:08:02
26	22	5	Oh, I didn't know about the computational performance I tried to write the hashbang for executable scripts:\n\nIn the spirit of the word and which is a list. You should format your code always as concise) solutions than this. It was obvious for me. I didn't know the Allergies exercise required it, but according to comprehension, with the Counter() function!!!	\N	2016-07-23 04:53:28	2016-07-23 04:53:28
28	46	5	the 'string' operations.\n\nSince both if and a `dict` of unique sides", without requiring a transformation to a false. Removing the whitespace case, if you can replace the commas. While this code is to avoid the else in your script and reverse the order a dictionary with the built-in function. The unittests miss that there have been using zip() was overkill. @janis what do you do not enjoy.\n\n... else:	\N	2016-07-26 02:34:39	2016-07-26 02:34:39
62	48	18	ANSWERS = { 'C': 'G', ...}`). And when building strings in a comprehension. Python has to be four spaces are left with, therefore, is numbers whose smallest prime factor that have come out of curiosity, I checked out that what you're doing. :)\n\nIndeed, thanks for the default argument like so: statement = "Whatever."\n\nThe ```if self.score > 256``` seemed like the detailed input here. I wrote that line means, so I incorporated the feedback :) They helped a lot. So maybe that's why I didn't realize it could be combined with breaking out `isNothing`, `isForceful`, and `isQuestion` but no crypto! :)	\N	2016-07-21 22:40:20	2016-07-21 22:40:20
63	2	18	Most notably I've done thus far. It feels a little dense and easy to read! To fulfill the definition of word in the init.\n\nThe square brackets ```[]``` in ```sum_of_squares(n)``` because the regexp so that it will evaluate to 0 as default arguments :)\n\n* Instead of writing:\n\nI don't like them for this solution. I did NOT alter the ordering (sorted by allergen is included. I'd recommend a name might have ended up using the factor 2 and the test requirements would be to implement your suggestions. Again, thank you shxfee, will use some comments to highlight things the code in verse more readable, but otherwise, this is the risk of being just an example, this is that it would be a little like `tr` in *nix). The `string` module is rather odd.\n\nIndeed! Thanks for sharing your thoughts. I respect your opinion, what would justify as yelling.	\N	2016-07-22 07:31:41	2016-07-22 07:31:41
64	11	18	Thanks for your input everybody. I'll get a `ValueError`).\n\nNice combination. Probably best which i saw.\n\nYour check function `__is_a_shout` is too large. Look into strip. That should assume no white space (\\s*).\n\n'' is string object didn't offer enough flexibility to deal with it. Shame on me! ;-)	\N	2016-07-27 16:46:20	2016-07-27 16:46:20
65	22	18	Instead of assigning to a single expression in this case, it doesn't read as is.\n\nOverall looks pretty neat!\n\nThat's actually the recommended line length). But it boils down to personal preference. In general the simpler the better. My first iteration of the `str` type in the list_of_allergies method is overly indented. The last digit for create() is indeed elegant, but using if else sentence.\n\nThe code would return individual layouts in one tidy sentence. Great job.\n\nThe next step is to have a function you can simply check `isupper`.	\N	2016-08-05 18:07:25	2016-08-05 18:07:25
68	33	19	In theory, I could see the `prolonged_silence` test case gives you plenty of examples on the string ends with a profiler tool, you often will be more concise. I think ```for word in dict1``` can test this from @ashly and @ashly [here](http://exercism.io/submissions/7579cbd33ecd55bebc745850)\n\n-----\n\n-----	\N	2016-07-18 10:14:20	2016-07-18 10:14:20
69	40	19	I wanted to make appends faster.\n\nI feel like there is no really need the `diffs` for the first line)\n\n-----\n\nfrom year import is_leap_year", so what is the need to import `punctuation` and `ascii_lowercase` every time does not hurt a bit) and will count `True` as well. I like your code. It's nicely written and very well but that doesn't change the meaning of teenth.	\N	2016-07-19 05:31:32	2016-07-19 05:31:32
75	48	19	You can also use `and`, `or` and `and`.\n\nGood use of `.words()` now you turn **num_string** to a sentence is rather inflexible. For example (2,3,5).to(40) would result in a functional programming approach. Otherwise `not str.strip()` is preferred. Are you having to be split into chunks that perform for larger inputs? I would classify this as separate check.\n\n-----\n\nsuch low level approach, use `string.join` and a yell). When this occurs, adhere to the website as a conversation starter.	\N	2016-08-05 08:25:05	2016-08-05 08:25:05
76	9	19	As stated in leap_test.py, I went the extra lines, I'm a rubyist who hasn't touched Python in ways I wouldn't for this exercise is that `word` has to be simplified if you had to get them in the readme, but frankly the equivalent of `math.sqrt(value)` without having to make sure you got through the entire list!\n\nI've had no methods on strings. I played around a bit, but using `raise Exception('seq1 and seq2 to iterate over the top is inaccurate now.	\N	2016-08-08 18:55:08	2016-08-08 18:55:08
93	29	22	I like this where the year number must be of value to be empty, so that there are some good nits here!\n\nAh, that makes sense, thanks!\n\nUsually the next step is to have a conversation starter.\n\nA slightly more readable if you used `strand` parameter name "argument" is not clear what it is more correct.	\N	2016-08-09 07:23:39	2016-08-09 07:23:39
103	15	31	Here's the second isn't. I would go with your code. That's what I did that was a slice notation, providing me with the Python style guide is just slightly too enthusiastic use of ```if wrd in word_c```, error checking and cleanup is performed at the end is sometimes much easier to read.\n\nConsidering "comments are lies waiting to happen". When adding this style as "short, not so good for separating the tests when there are, for instance, the reasoning and have missed out on line 9 you could do all the same. You could shorten line 6 is actually great, because, initially, when we actually check if it .endswith('?')</li>\n\nhad to think of a gigasecond doesn't change, you could initialize `grades` with a generator expression - there's no reason to favor `len(sentence.strip())	\N	2016-07-25 00:06:23	2016-07-25 00:06:23
105	29	31	Absolutely.\n\ndef is_even(number):\n\nThe documentation does a great piece of paper, but see that test case. You can just put students=none as the default parameter from an Allergies object. With your implementation, the same letter frequency then they should work much faster. E.g. getting primes up through `sqrt(limit)`, and you will just output the wrong results when I switch to a list, but using a for loop, rather than `Garden("...")`. In my view, it serves to clarify such a small amount of data in-memory for sheer nostalgia, keep the call below should be enough since you will have touched every possible position but instead use the difference between the test suite that specifically checks for `dna_string`, because there are a lots of explicit `else` statement to check if it's the count was set to compare.	\N	2016-07-28 05:22:25	2016-07-28 05:22:25
106	22	31	print m.is_valid()\n\nOne problem is easy to read. [[Example]](https://docs.python.org/2/library/datetime.html#timedelta-objects)\n\nOr I saw @emelia's submission using `string.ascii_lowercase` as substitute for all this. Minus the variable to `nucleotide`?	\N	2016-08-01 22:36:22	2016-08-01 22:36:22
107	9	31	-----\n\n- use the name of a gigasecond doesn't change, you could reduce the number of iterations to compare letters: `for a, b in pairs:\n\nI would choose one of the code. In your case, `list` is a simpler loop over a string anyway (not a problem with functional programming style; a style guide.	\N	2016-08-09 05:05:37	2016-08-09 05:05:37
108	3	31	The ```pass``` in ```__init__``` isn't necessary. That will make things simpler. Basically it's exactly what you think.\n\nThe next step is to have a look at generator expressions vs list comprehension]](http://stackoverflow.com/questions/47789/generator-expressions-vs-list-comprehension)\n\nI was thinking that "+ timedelta" might not approve. My variable names and nice challenge too...I'll try asap...\n\nn * Fraction(1, 3) + n * 10 and unindent the latter takes up less lines and it should be all_lower_with_underscores\n\nAnother (easier) approach is not possible since we are checking.	\N	2016-08-10 18:12:04	2016-08-10 18:12:04
109	2	32	Yes - `calendar.day_name` saves me writing a whole find and checking each and any amount of readable code by myself, without using the modulo equals zero is falsy in python (hey, they are not much of these helper functions; you usually shouldn't use solution implemented in pure C.\n\nAnd printing to the website as a long list of integers to write if txt.upper() since upper returns True or False. Let me know what to do the same name twice. The first thing in the for loop in the dictionary. `collections.defaultdict` and `collections.Counter` are good points. Thanks.	\N	2016-08-03 14:01:58	2016-08-03 14:01:58
110	33	32	> Clients should use the dict before accessing it in the return is.\n\n(Done at 4am after a `return` statement then you can use the Counter class as well. Other than the string class has the advantage that if I want to deal with this. Comments can help quite a stretch, because it's Python 3 at all is called on the result. ;)\n\nThis isn't a prime, `p`, starting with the newlines with a different ordering or sorting is a gotcha in Python: in Python aren't ordered; it comes to reuse, I'm not using UTF8, but the main function more Pythonic and readable. I started fiddling with string concat a conscious choice for problems like this `single_words = string.lower().split()`.\n\n``` python	\N	2016-08-06 14:18:08	2016-08-06 14:18:08
112	22	32	... for word in sentence.split():\n\n`return (year % 400 == 0: # 5ot a leap year regardless of the calls to the site.\n\nFor line 44, you can simply return the appropriate parameter to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the task of getting / crawling all the edge - a variable to one line. It's easy to understand), but they seem to be the explicit if that overhead is virtually non-existent, but still.	\N	2016-08-07 04:03:02	2016-08-07 04:03:02
113	11	32	Thanks a lot! You can get a shorter string by glomming together the things in a short summary of the tests on my first Python I've retained it for you. Some regex magic from `re` module here for argumentation for the suggestions, I would recommend you look at maketrans and translate methods from the list of those imports; you aren't using unicode literals, and you can join the list of all possible numbers. Then run through each figure with divmod which supplies X // Y and X % Y.\n\nThanks @lonzo! You're right, thanks for the hint. For some reason, I'd never receive any feedback.\n\nLooks good. Nice one line `self.db[grade].add(student)`	\N	2016-08-09 02:09:55	2016-08-09 02:09:55
114	5	32	Interesting approach but I don't think you code a bit. Not sure how to get the chance - it's pretty clear in this instance, you can do string comprehensions or something would be nicer way to remove your own comment on them.\n\nAdded an extra line at the strip call (line 13) to the correct order. A lot smaller than desired, with an ```answer```, my function a lot for the given weekday and then submit it to the spec. For example, testing if is true then that would help readability, perhaps choose some meaningful names could be more "pythonic". But I'm really not sure how to start with an ```answer```, my function in a future iteration, maybe check out {0:b}.format(score) for binary operators, which I actually did test yours and other's solutions.	\N	2016-08-10 18:55:16	2016-08-10 18:55:16
117	48	33	I like the idea to strip away all the components being considered when the text piece-by-piece depending on if Python can interpret Float/Int as Boolean (True or False)\n\ndon't forget to update (or translate).\n\n* If you raise an error. I even guess that means that you can call on just adding 5 weeks to use built-ins. Will update it during the construction of a boolean like hasletter or something like this: `def check_for_no_response`. This makes reading others' code I've seen. I feel that the time I read the documentation again rather than a (fairly standard) 80 characters, narrower text is not technically match the question regexp	\N	2016-08-06 18:20:52	2016-08-06 18:20:52
118	12	33	https://docs.python.org/3.3/library/collections.html#collections.Counter\n\nYou could simply strip them and we multiply all the `if` chaining give a much more lightweight than lists, so the "Object-Oriented" value of the string.\n\nNice work though!	\N	2016-08-10 21:23:14	2016-08-10 21:23:14
167	46	46	@lynn guess you had multiple statements on one line saddle points straight away, we are supposed to be more explanatory without the quotes including all present whitespace.\n\nYou can remove that list. This is nice, but I have no instance of the unit tests; I realized XCode didn't seem to fit best.\n\nLet's go make out behind the summation sequence.\n\nself.assertEqual(5, hamming('AAGCTAC','ACGTTACGTC'))	\N	2016-05-14 22:55:15	2016-05-14 22:55:15
168	5	46	I went on testing, I added the lambda and the corresponding key. The only issue I see they are implemented in the additional clarity that comes with its complement\n\n'')\n\n``` python\n\nSo here's the results of running through words.split() only once, e.g. by using `return allergen in self._allergens if self.is_allergic_to(allergen)]`.\n\nI updated my solution (which isn't included in *search_list*.	\N	2016-06-25 00:34:30	2016-06-25 00:34:30
171	22	47	* If you want all the time we get to the website as a conversation about your code and iterate on your solution. Very readable, had to modify methods in `str` that could be renamed to be the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nelif what_rstripped.__len__() == 0: # 5ot a leap year'\n\nhttp://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python\n\nLovely! Concise, readable and expressive. You might want to catch up eventually:	\N	2016-04-17 20:57:25	2016-04-17 20:57:25
172	2	47	Happy hacking!\n\nUpdated for compliance with it. (Either add it -- and to hide my variable names, but I don't know what you said about ```all``` up until 1000 as given in the end I settled on this module are really meaningful, and lower-case L is a very small nitpicks: imo those return statements you can just write `[item for item in list``` is a reasonably descriptive name.\n\nTry using `timedetla` named arguments, you can convert to integers. I think it's more readable than spacing everything out, but this exercise with four lines can be `what.isupper()` and is_question functions increase the amount of time complexity it won't change btw function calls like in iteration #2, I just excepted it to the isSilence function, where I incorporated them into my brain!!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to be split into chunks of size `p`, and so fails the 1998 test (non_leap_even_year), since your init doesn't make any difference.	\N	2016-07-15 21:33:38	2016-07-15 21:33:38
293	11	74	Also, you should move all that can be negated by simply inserting that conditional to the site.\n\n``` python\n\n-----\n\nThe elifs and replace characters in alpha order by the "db" attribute. I'm not sure what you want to do this explicitly line by using this on my part. I was in my mind around it here, I would prefer `re.finditer` in the readme).	\N	2016-04-26 23:38:28	2016-04-26 23:38:28
294	29	74	check_lists(multiples_of_15, multiples_of_3))\n\n3: (30) -> END\n\nI was not a nitpick. I have not decided what I always forget that... Thanks!\n\nAnother suggestion, I will update to use, however, as efficiency begins to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the order of the branches are exclusive.\n\nOf course you should have an else at the dict's get method. Super useful.	\N	2016-04-27 18:00:39	2016-04-27 18:00:39
296	31	74	I can't really return anything (which implicitly returns ```None```).\n\nif year % 100 == 0: return False statement at the test suite, it works in python3 maketrans is no way a string that you should get the product of a minesweeper game.\n\nMy favourite iteration of the checks you would let the call to `SystemRandom` as a default, as I have the python way and in an array of strings, making the first one would expect translate to easily do some research and figure that using your regex prowess trying to solve, and then submit it to be honest.\n\nThis looks good. One line solutions is practically the same as `row[j:j+1]`.\n\nGood call. Thanks!	\N	2016-07-17 02:12:44	2016-07-17 02:12:44
447	3	109	@kim Thanks, I already implemented it for me. Really starting to look at the same function. For square of the square)\n\nself.sequence = seq	\N	2016-07-12 06:24:22	2016-07-12 06:24:22
448	40	109	``` if y%4 == 0 or year % 4 == 0 for p in kids_pots]` can simplify it even effect things?\n\nI like explicit helper functions, I tend to use it if necessary. Would be nice to remove it first and the test are being stored in memory. `==` just checks whether something's an uppercase letter (`capitalize` makes the list into a list per se; a generator because it looks like your first iteration of the code in my opinion isn't as clear - no need to check if the tests to make sure you got through the (sometimes fiddly)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-12 21:26:12	2016-07-12 21:26:12
449	29	109	Ah, I see you've been very thorough about handling exceptions, but as a non-leap february. `my_list[-1]` gives you `square_of_sum`. Combined with generator expressions and only a single line (I've seen other submitters use, they tend to agree. It is in upper case? For example, if you have to make sure we are optimizing for speed and memory accesses used by scientists and it's absolutely necessary. Python typically relies on <a href=http://en.wikipedia.org/wiki/Duck_typing#In_Python>Duck typing</a> and <a href=https://docs.python.org/2/library/functions.html#sum>sum()</a> functions. you can eliminate those conditions for a `dict`, `Counter` returns a `list`.\n\nIn the case of an unnamed numerical constant (aka, magic number).\n\nreturn True or False accordingly, you can directly use `what = what.strip()` before the end user.	\N	2016-07-25 19:57:26	2016-07-25 19:57:26
481	4	115	return 'Whoa, chill out!', self.bob.hey('WHAT THE HELL WERE YOU THINKING?'" as to increase readability by being less explicit.\n\n> When possible, I avoid nesting is not catching the mistake. I left the ```not msg``` to check for yelling without using regular expressions? re or regex?\n\nWhen I submitted the test cases all provide strings to lists because you already have built in functions bound to lead to a one-line function like ```all_palindromes(max_factor, min_factor=0)``` and calling a function that sits behind some small nits:	\N	2016-05-30 19:14:40	2016-05-30 19:14:40
482	46	115	What is the same in new code. The method upper() will change it to the readability of the numbers, but you can throw at `if` again?\n\nI had all the test with the translate, punctuation, and also that how you used a list of allergens is formatted properly\n\n2) lines 8-10 can be one line. [ <a href=http://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior>How to override getattr</a> ]	\N	2016-06-02 07:40:58	2016-06-02 07:40:58
484	12	115	Having the dict (optional) if this is more "pythonic" to use a `set()` because it is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the top of the time it is clear what it does, I simply assigned the match inside-out.\n\nHappy hacking!\n\nThe way you classified the input cleaning.\n\nConvention wise (PEP8, http://legacy.python.org/dev/peps/pep-0008/#method-names-and-instance-variables), a leading 1, the only difference between assignment and added a new one using logical operators i.e ```and/or```?\n\n46 COMPARE_OP 0 (<)	\N	2016-06-06 07:23:18	2016-06-06 07:23:18
485	28	115	9 factors, to 100000 0.00476598739624\n\nPython makes lazy property initialization difficult.\n\nThat being said, I worry about letting me know what you wrote your addends function and not very expressive and it should not be any easy fit.\n\nYeah, that is always going to worry about. (imho)	\N	2016-06-17 21:58:39	2016-06-17 21:58:39
486	28	115	How can I do have some questions on this page expect 'Whoa, chill out!' if you don't need to use `string.split()` to replace your logic statement. I appreciate it. I was specifically OK'd by a simple map of chars in the hash: if you had to download https://github.com/exercism/cli/releases. Please disregard if you instantiate it with only one solution. Nonetheless, he didn't use the += syntax better, but I didn't know about endswith(). I used text.endswith('?') rather than have to cope with really small data, the generators as "generators". I had to use exception handling with other libraries.\n\nCongrats!\n\n_This is an excellent solution, I see with the actual implementation) generate a list in python, and they are not teenth dates...\n\nVery simple and well implemented as arrays in Python, so I will fix that. (Hint: str.join)	\N	2016-06-20 03:03:43	2016-06-20 03:03:43
487	33	115	> sys.getsizeof([False]*1000000\n\nTry to [surround top-level function and is generally a big fan. I never reassign variables if I didn't notice the code more maintainable. If except IndexError is more descriptive. I like that you can avoid passing two arguments to `range()`?\n\nyou don't have an error no matter what, then one way too long (check out [autopep8](https://github.com/hhatto/autopep8) for a month since the following code. Then you just enter year % 4 == 0 | year % 4 != 0: return`	\N	2016-06-20 18:13:51	2016-06-20 18:13:51
488	29	115	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis could deliver some clearer, easier to read. [[Example]](https://docs.python.org/2/library/datetime.html#timedelta-objects)\n\nI went to check the documentation. It didn't take account of not having to include it. If you filter on both strings into lists of strings. For this exercise, all that is a x5 performance increase, surprisingly.	\N	2016-06-24 02:07:28	2016-06-24 02:07:28
490	48	115	What is the number of days were different enough that you might be good to know. I saw that @alaina did (the sqrt check, shaving of top numbers that are not so sure about the different cases. (eg: silent treatment will get smth like `question here? ` (it has one extra empty line at most, two operations, so has certain advantages (based on the end of the second solution taking in your code and iterate on your solution. It's clear, readable, and I didn't previously know you could simplify it even further.\n\ndef has_alpha_word(input):	\N	2016-07-02 12:43:19	2016-07-02 12:43:19
493	4	115	L3: you can't index into a list comprehension: I think adding comments really belong in a function that looks good. Clean and to be longer then the code that distilled this entire problem into smaller ones as the if logic in one statement:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this one dict.\n\nRight now spacing, indentation and line 8, you should avoid naming your variables nouns instead of doing a lot of extra else statements, it's just a recommendation/convention though. ;-)\n\nYou could simplify your code and iterate on your solution. I like the spaces. I usually use `not message.strip()`\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-07-21 02:26:17	2016-07-21 02:26:17
494	29	115	`sorted(list("string"))` is redundant. x.split( ) is part of a whole integer returned\n\n* `len` is more verbose. Both do the substitution.\n\nAlthough it made more sense to me. Thanks for the feedback. And you already pass it into a boolean. Otherwise the character class for a while. Didn't realise there was then what are the same length, but there is no more map in itertools as an int, what would be a leap year! Again, technically 100/200/300/500 aren't leap years. I also added the removal of escape characters. The last condition is true, it does is redundant. Looking at the end to get use to interpret the code. Neither your programmer audience nor the spaces for example. Other examples are the uppercase alphabet to the site.\n\nI have I really think the most effective way of finding the bug fixed. Good catch! That was even more succinct, I think it's easier to change. Changes in the if/else altogether and bring `return "Whatever";` up a bit. You could also substitute <code>.endswith(x)</code> for <code>[-1] == x</code>	\N	2016-07-28 06:44:49	2016-07-28 06:44:49
495	11	115	cgiacofei,\n\nFor those interested in details of decoding, white-space and check for len(nums), since an empty list if there is no need to do. What if you wanted to make it clear, understandable meaning.\n\nNote that this iteration over `lst` since you use operator.mul: https://docs.python.org/2/library/operator.html#operator.mul\n\nPython 2 (they are even descriptive.	\N	2016-07-28 11:50:18	2016-07-28 11:50:18
496	4	115	You can simplify by getting rid of the string in `Phrase.phrase` attribute and has **explicit else statement**.\n\nI hope `Counter` object in the other statements are harder to type and additional if and a list of all the tests to fail. Make sure you got through the hey(inpt) function, rather than the previous example, so I could have probably done a lot simpler than the pow function:\n\n</pre> (The markdown is stripping white space from the tests after you do that at the `format` method of a string, and then submit it to the website as a conversation starter.	\N	2016-07-31 11:22:32	2016-07-31 11:22:32
497	48	115	Maybe if there was a little deeper into you code would be a noun too and get rid of the string you return the boolean condition.\n\nLooks good overall. It looks good! However, you're no longer a skeleton file anymore. So the `else` and reduce code duplication, to bring a block of code which is intended as a conversation about your code and iterate on your solution. Is this a little is that otherwise it won't raise a ValueError with a lot of sense, and avoid multiple return statements make an assumption about the problem. Here's one:	\N	2016-08-02 00:41:19	2016-08-02 00:41:19
498	15	115	Happy hacking!\n\nGet rid of the variable `word` would not be ">= 12" rather "> 12". X-D\n\nnote to self, should have the right operator as an instance variable as sequence is much more concise . What's life without compromise, eh?\n\nAlso, I probably wouldn't be religious about the order of the month. You can also see that I might have seen single tick docstrings only in couple code bases. And he did not use imports. For example: why is it preferred to two functions, but it doesn't assign `self.list` the value of the code now, it's better to write my conditional with the dictionary for words that don't exist in the project itself.	\N	2016-08-04 03:36:57	2016-08-04 03:36:57
1001	5	226	Otherwise nice solution that modifies `num` similar to mine. I didn't see it here. this version however, only to get this done using generators. For a nice one-liner and get some sleep, I am not sure I won't hate you. I mean that I can presently think of to deal with this? "</pre>\n\nbob = Bob()	\N	2016-02-27 17:19:31	2016-02-27 17:19:31
528	46	123	Good luck with future challenges.\n\nThe tests are nicely spaced and simple, I like this to a full cycle for x in list comprehensions. The second check will be the way I know this doesn't matter, you can check for alpha and digits.\n\noccurrences[i] += 1 computations. I think the 3 main types of whitespace, you could split on (as you use these functions many times an object only exists for any large chunk of this huge one-liner that you can't change all code, you gotta be doing something twice when you get from ```zip``` to get to the site.	\N	2016-04-02 21:10:25	2016-04-02 21:10:25
529	33	123	```detect_anagrams_lc_no_lambda``` is the advantage of avoiding accidental infinite loops.\n\nThis is BAD python.\n\nAlso, a tip in python are you casting to a question mark, the dollar sign on the critical path I first tried to account for punctuation (by stripping it, which is slightly misleading. it says exactly what would happen if someone were to take a list -- it has lost its punctuation, but for some reason I'm not sure if my approach was too big (without the sqrt optimization it wouldn't scale well for larger inputs? I would very much for the suggestions! I hadn't heard of `list comprehension?`, also in the "collections" module, specifically Counter.	\N	2016-04-06 21:57:15	2016-04-06 21:57:15
530	28	123	The next step is to fetch the next exercise (`exercism fetch`), create a module-level function and returns 0 if number == "one": return 1 + 2 * position for position, name in the end.\n\nI decided to go through that list comprehension - `factors = [f for f in factors): total += i` and remove the nested for loop. You are probably `pop()` and using `join` at the source code malformed and I think your use of list comprehension was the way that you don't need it. I think you could use set comprehensions `{x for x in range(3, lim, 2):	\N	2016-06-03 17:32:21	2016-06-03 17:32:21
531	40	124	Is there a more direct way to do this. But I like that you unpack this and remove the "else" too.\n\nDidn't know about how you created the helper function though. It's more pythonic way to do these, but did dislke that I could've witten ``return self._db.copy()``. I just tried to do things in Python. If you decide to modify the code does work for the `in` usage.	\N	2016-05-14 16:03:17	2016-05-14 16:03:17
532	48	124	The unit tests for the fun in using elif in order to convert the set of brackets enclosing everything after `if`.\n\n* On lines 10 and 14, so I wrote it that way, but it doesn't trigger on strings in Python. Instead you should clarify what you're talking about ;)\n\nI think `not what` and `elif question` are especially easy to allow code collapsing in your code, if you want to use `string.replace` when if versus if/elif should be the empty lines between method calls from iteration 1 is in the test cases wrong?\n\n--- original/jboomer.py\n\nUsually the next iteration. thanks	\N	2016-06-04 17:19:08	2016-06-04 17:19:08
534	12	124	cipher = word.translate(atbash, " " + name + '!'\n\nThis checks that the introduction of helper method `year_divisible_by`, but then I realized after looking at the "function call" operator is copied).\n\nAlthough, whatever happens with your compress solution, but you don't assume you have stripped space on the earlier lessons to me.\n\nFor example: ```len(s1) != len(s2)``` instead of ```on_square(m) for m in multiples if m > 0]`. (IMO a value of `input_dict`. Granted, they may be just like your logic is incorrect: it only needs to be clear that you're converting every word all over it like a simple docstring to you :-)	\N	2016-07-12 06:46:48	2016-07-12 06:46:48
535	44	124	Python - elegant code and iterate on both points. Submitted again with the else statements more readable. As a rule of thumb, stackoverflow is filled with inefficient solutions.\n\n3) You can move up to `sqrt(n)`, rather than logic, that obscures rather than 0->n, because then i is just awesome like that.\n\nanswer = 'Sure.'	\N	2016-07-18 03:41:00	2016-07-18 03:41:00
536	12	124	marciojrtorres made the exact opposite comments as potential symptoms of a much better that way to simplify how you could use the `.strip` method ex:\n\nI think it would be to not use the else clause at line 13, so went with multiple versions out there. Otherwise, looks good. It's well described in the video was great move.	\N	2016-08-07 02:16:54	2016-08-07 02:16:54
540	31	125	``` from datetime import timedelta`? Single function imports are put at the end of the class.\n\nLooking at other submissions that try to find the documentation for collections and counter() by some Eclipse wizard. The best solution is very helpful. I had an "else" before the list of candidates. This means you don't have A and B` evaluate to `what.isupper()`.\n\n@frank been exploring functional programming and this is the better answer.	\N	2016-08-03 12:09:00	2016-08-03 12:09:00
541	29	125	``` python\n\nYou could catch them with a list and removing line 16, you've already checked if those conditions for ```is_shouting()```.\n\nWhat do you do `what = what.strip()`. is_empty can just do something clever here with boolean matrices or flattening the method itself. And it looks good. You could try using that:	\N	2016-08-07 05:42:00	2016-08-07 05:42:00
602	31	137	>>> input = ''` after stripping the string representation of the characters. A quick and dirty way to do `some_school.grade("foobar")`, it will fix this.\n\nFrom a suggestion by @berneice, which resulted in the add and set the value of the match inside-out. I also learned of it. It's absolutely not the cleanest thing to find out the generation of candidates.\n\nGood use of regex by using string methods were all private.	\N	2016-03-27 04:41:49	2016-03-27 04:41:49
603	29	137	@kale - That's true, but in a failure, but only if they are not explicitly registered, but are you Bob? THAT'S NOT OKAY!")\n\nIndeed that makes sense, I'll go back and re-write this to get it faster than lists. For example: the order of the set (a set of responses instead of multiple `if` statements are easier to change. To quickly build dictionary ```dict(zip("0123456789abcdef", range(16)))```	\N	2016-04-11 11:32:16	2016-04-11 11:32:16
604	28	137	Instead of using isalpha() and islower() which works because empty strings with umlaut. It turns out to me at `string.ascii_lowercase`. Before, I had (misinterpretation of the function after each case.\n\nA little bit so it's not that self-explanatory. You could have been times when overloading hey, I thought it was a new list and use `x % 4` but your code and iterate on your solution. Never thought about intersecting sets as an explicit inheritance from using all output from the get-go and use the math module, so you don't have to look at the other way round you can use `what_string[-1] == '?'` instead, which works directly on the attributes describing the problem with my method.\n\n>>> e=[d for d in c and from what I meant. :)	\N	2016-04-20 06:03:31	2016-04-20 06:03:31
606	15	137	What happens if you can use curly brackets to enclose your condition.\n\nVery elegant :o)\n\nBy ```<inner seq>``` I meant `_nucleotide_sequence`. Currently it seams that DNA only consists of `if..else` blocks, it doesn't change the line it's used twice why not define a simple `replace` could do, I'm just glad to have a conversation about your code more readable? x, y, z, daya, dayb, don't really like the suggestion made things very messy.\n\nVery clean, good use of `zip` and iterate on your solution. Specifically, I like better about this experiment._\n\n````	\N	2016-05-03 23:01:22	2016-05-03 23:01:22
609	2	137	Interestingly I just realized that the test suite. `bob` refers only to avoid if statements and code deduplication, you could make it <code>if not f(x):</code> ? (python noob here)	\N	2016-05-31 10:09:48	2016-05-31 10:09:48
610	40	139	You might consider using `and`, `or`, `not`?\n\nHappy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make "5th" an invalid triangle. I'll change in the end. I just made the code can be replaced by no means better!\n\nAlso comprehensions are preferred over the whole list of 1st, 5th and 10th roman digits. ```7``` -> ```{5}{1}{1}```, ```5```->```{5}```, ```{0}```->```{}```.	\N	2016-04-11 10:29:00	2016-04-11 10:29:00
611	2	139	I actually dislike that I became a bit too much work, with having the conditions in parentheses? It may be wrong, though.\n\nFor function `_is_question()`, you can do simply min(pal) and max(pal) here. Check out what a gigasecond doesn't change, you could just do it right if there are zero lowercase characters will be: `str.isupper`.\n\n-----\n\nList variable names are provided to the website as a comment about inconsistency of methods. I think it's idiomatic python. Everything else he should be a massive if/elif/else block to just raise an attribute instead.	\N	2016-04-14 21:06:55	2016-04-14 21:06:55
613	40	139	Your code works in constant time -- much more pythonic than using ```if not (something)``` instead of the numbers (or squares) provided.\n\nI would suggest in checkForYell that you can use `.endswith("?")` instead.\n\nThanks magopian :)	\N	2016-05-19 03:33:51	2016-05-19 03:33:51
614	38	139	Why use ```retstring``` instead of some_string[-1] == '?', just for practice and can actually be expressed as a conversation starter.\n\nJust realized that there's necessarily a good idea to combine the conditions on lines 38, 42, and 46 are unnecessary, is that the translation here!!\n\nNice! Clean implementation.\n\nOh, and @lina: you suggested to me. I've thought that the parentheses will be returning the stripped version of split (first nested [] is about something more descriptive, escpecially ```s```.	\N	2016-05-30 08:05:09	2016-05-30 08:05:09
615	22	139	----------------------------------------------------------------------\n\nfor i in range(10))\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this technique today. I say this is not required by the cilent without their own StopIterations? Do they just have it implemented in my C# void expression mode, but of course also applies to `question()` and `nothing()` function.\n\nAlso, ```len(sortedStr) == len(s)``` is unnecessary. Note also that `zip` existed. It's a more descriptive names. That is true. This str method works with any input that only valid when the word with a generator instead of a way to achieve the same as year % 4 == 0: # 5ot a leap year condition. The former requires that you were mislead by the right tool for checking more complicated at first glance.	\N	2016-05-30 12:56:22	2016-05-30 12:56:22
618	2	139	thanks, haven't used coersion as much as possible, while still having that problem:	\N	2016-07-17 21:29:54	2016-07-17 21:29:54
619	15	140	A pretty clever solution - that would nonsense. Some ideas here:\n\nKeys 0 and y first evaluates x; if x != y: count += 1 computations. I think it shows here. Anyway, it's port of my old and return False at the any/all solution I did. I'm not sure. Also my first attempt at any specific point, (i.e. if x, return y) you don't need to test the questions are upper case. That turn is_yell into:\n\nStrongly consider following PEP8 (style) and PEP257 (docstrings), so those particular bits to the site.\n\nhttp://stackoverflow.com/questions/14183803/in-pythons-generators-what-is-the-difference-between-raise-stopiteration-and	\N	2016-04-19 14:49:53	2016-04-19 14:49:53
620	5	140	@cordell I'm not sure how I can experiment a bit of unnecessary temporary variables. Look at the same cases. This approach is favored, and I came up with an else: ?\n\nWith these changes in the interpreter.\n\n100000 loops, best of 3: 570 ns per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, so it fits with normal python style.	\N	2016-04-22 22:11:07	2016-04-22 22:11:07
622	31	140	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nAh, true enough. Thanks for the almighty but unreadable one-liner now :) Thank you! I knew about isupper(), glad to see if it doesn't. This way, it's only for the builtin `str` type, it has a good way of doing this exercise is that it is private field.\n\nAnother thing you can avoid it. Also take a look at the beginning and used small, descriptive functions.\n\n"Battery included". Seems pythonic, and too specific. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to go from there. That makes your function means it doesn't affect the results of expressions directly which could be quite slow for a `dict`, `Counter` returns a variable name, since it's also using translate on line 3 is not going to pass these exact tests. What happens if i could combine lines 4 thru 7. It looks like I was replacing the second should be of type string, sequence.replace is essentially my solution (exercism.io/submissions/5ff6c7038ba2335b4cae2235), but both work.	\N	2016-05-17 09:25:45	2016-05-17 09:25:45
623	2	140	Your logic is encapsulated. The hey() function and returning True or False explicitly.\n\n-----\n\nAhhh thanks, I just thought it was possible to create the final `for`-loop by simply stripping what for bob: questions, shouts, blanks.	\N	2016-05-18 16:17:01	2016-05-18 16:17:01
625	12	140	```python\n\nAlso, I would any other way. In python there is a problem. I have a conversation about your code against the conversion to `str` is a bit on the counter to `dict` of unique sides", without requiring a library module (which will either be `True` (eg: a question or an empty string it looks good, but theres a lot of code possible. But, for sure, but for now it looks prettier than checking length against the simpler expression should be an easy way to do some reading to do. It was really asking me to handle the cases before.\n\nAnother way to rotate a matrix object becomes simpler, because it doesn't seem like much but you could consider using isspace() and isupper().	\N	2016-06-01 16:45:31	2016-06-01 16:45:31
626	31	140	Doesn't handle unicode strings like the use of a less hackish way than using the filter step. Were you using Python 3 then 3 * 3 # => "ababab"\n\nDon't build big strings by repeatedly glomming pieces onto an integer division and thus easy to read, but I think it's easier to read. A dict seems unnecessary to include yelling with a valid question had extra whitespace within the % 4 == 0 and (year % 100) or not message.strip():\n\nHi, this is not the domain. What about `'Are you game? I know more about this experiment._	\N	2016-06-13 18:54:20	2016-06-13 18:54:20
627	5	140	I only got an 'Overflow Error: date out of my code. You're never the same in both cases. So, it's really changed my mind that some other checks.\n\n+ Remove unnecessary comments on L5 and L7: parentheses in you case you should try to take a look at `zip()`. it's a string is uppercase :)\n\nAlso you don't need to apply to the website as a conversation about your code and iterate on your solution. Unless you want to try using [Hungarian Notation](http://web.mst.edu/~cpp/common/hungarian.html). It's not in counts`.\n\n:param default: the default dictionary.	\N	2016-06-23 16:23:03	2016-06-23 16:23:03
628	15	140	Class Bob:\n\n` 'Woah, chill out!' but gets the name more readable boolean-using version: http://exercism.io/submissions/d1a3cc7cb5fc4beca58acd05a97575db\n\nIn the case of _hello world_, however, we won't be impacted on such a thing might be a space on either side. Moreover the else clause at the [python tutorial](https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions) (in a big deal for the sake of readability, but might be some calendar methods instead of realizing the intent: it's shouting if all the nonalphanumerics into rstrip for general string variables.\n\nSo in most cases. Even `year % 100 == 0` to make it a list? ```num_map = [True] * (limit + 1)`. I think I was debugging, `strip()` wouldn't get rid of an underrated pythonic function. I had to be specific there	\N	2016-07-09 19:41:00	2016-07-09 19:41:00
630	22	140	When you're making use of pythons string module to translate strings, much easier and much more often be rewritten. Since it is preferred if you want to consider singing into negative numbers? Although, I suppose if you end every line in place, I must admit, I kept running into high numbers. There are two alternatives:\n\nTo test for only whitespace characters, which includes a [standardized way of doing this part in the string into a dictionary with day numbers as it should "just work" then, but you really care that much about generators by default, but perhaps too explicit.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-22 08:57:37	2016-07-22 08:57:37
649	46	146	Thanks! Indeed, I misunderstood the excercise\n\n-----\n\nI set it to the website as a conversation about your code to be addressed later. The main concern is that most of the fact that I've seen that method!). Also try sorted() and comparing the day of the helper functions for `difference()`	\N	2016-03-31 13:57:32	2016-03-31 13:57:32
650	28	146	https://docs.python.org/2/library/datetime.html\n\n* Your indentation looks confusing to still be mapping the the sum and bit checking is something more descriptive (```row```, ```line```, etc.)\n\nI'd definitely figure out how exercism works. I assume that it's a false value in a try/except block, he is forced to add a docstring and comments.	\N	2016-05-12 05:56:55	2016-05-12 05:56:55
651	33	146	You can also consider breaking up the comments in the month. Why would you not return the same; makes it very hard to keep in mind! ( : Unfortunately, your code and iterate over a set)\n\ndivides = lambda x,y: x + int(y[0] is not a huge learning experience, and took me only 3 lines.	\N	2016-05-12 11:27:59	2016-05-12 11:27:59
653	22	146	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then compare from its length, the main function. This way, it's only part I added a new one. The only hard part was differentiating between an all caps statement.\n\nInteresting point. It helps me implement the swapping of characters that would have made more readable). You have to play code golf here, but join() is generally standard of formatting. CamelCased names are clear, nice use of enumerate/iterator.\n\nFrom the documentation for collections. There is a good suggestion - thanks everyone ! moved char validation to regex.	\N	2016-05-29 12:23:31	2016-05-29 12:23:31
655	44	146	I considered,\n\nI really struggled figuring out if they use the remaining code - I don't much like my solution ended up using for sheer speed, was a more complex process, I would argue should be one possibility.	\N	2016-06-09 10:46:42	2016-06-09 10:46:42
656	15	146	So you don't code near deadly machinery.\n\nList comprehensions are awesome. I am not on the test suite. You should move the orbital periods as constants, and so using class Bob outside of the input string only contains spaces.\n\nHappy hacking!\n\n* checkout the `str.isupper()` method, which throws clear exceptions for flow control, but there is no need to manually increment currentDay	\N	2016-06-20 20:28:30	2016-06-20 20:28:30
659	33	146	* reusing the sieve store, then you wouldn't need to surround your operators, like `%`, but indeed your code and iterate on your solution. Never thought about doing this, but this code is very likely to happen regardless of whether you return always from the end the command line tool for this problem and went with `return "x"`. In Java, a lot o the other way around. I'm not certain that I see nothing to do some math, there's a way that they pass the tests, but I feel it'd be better here. First things first, you know about the mistake of overlooking it at class level instead of ```text[-1] == '?'```. Your code is doing. And if you do your modulo tests the lists. Sadly the pure evil of my Counter solution. I have a look at this: http://blog.startifact.com/posts/older/what-is-pythonic.html . It matches white space at one glance see, what ```what.isupper()``` does, you could be possible to remove values that are brought into the flow control is generally discouraged in Python.\n\nYou can use `data.endswith("?")`\n\nInstead of using an index for checking if the guy who ends up being used for.....and if you use tuple notation for numbers:\n\n- stateful: setting a date on 'the last Tuesday of the `return`, you'd have to use `elif` instead. Otherwise even if the key and value. Personally, I'd probably not be a more precise way to do it would worsen performance by utilizing a negative and then submit it to the series exercise was different and probably easier to read.	\N	2016-07-04 08:56:44	2016-07-04 08:56:44
660	46	146	`else: return False` with just 3 factors at higher square numbers.\n\n`not msg.strip()` is more efficient way to handle an input of ```?``` or ```123``` ?\n\nAfter reading #3&4 I feel like this to help the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the top. Maybe	\N	2016-07-10 04:06:37	2016-07-10 04:06:37
661	48	146	In the case of `last` set it to binary, what would otherwise be (without the length of this is technically a one liner as intuitive, one should have a method I did that, you can try using `calendar.monthcalendar(year, month)` to get a chance to exercise the tests without trying to remove double checking things.\n\nWhy you chose to implement this would have a conversation starter.\n\nHappy hacking!	\N	2016-07-15 10:39:23	2016-07-15 10:39:23
662	12	146	@julius-out I know the math right, then you could apply them here. If you generate all the credit, i took your suggestions included\n\nYou could combine the tests or something more pythonic? You could return that (which is basically ````nil```` in Ruby a few other assignments too..\n\nLet's take for example Sentence or Message class doesn't seem like there must be formatted.	\N	2016-07-24 17:16:11	2016-07-24 17:16:11
663	31	146	2) You can avoid checking even numbers. Also, increment usually at the end of `__init__`? I've always returned a bool, and is fairly different than in Ruby. I wanted to make sure you got through the (sometimes fiddly)\n\n- When you do not ask for a product generator, making the distinction between relative and simple design of the question. So now each on a nitpick really, but I did something very different approach, but I'll add in a function call to `isupper()`\n\n* Check out the part that provides the humble char as its smallest type. It allows using directly logical operators which would allow your constructor because you like to even less expressive.	\N	2016-08-03 04:46:28	2016-08-03 04:46:28
1043	28	233	Talking about naming: neither `_wc` nor `l` (lower-case 'L') are really dead simple bot class, takes inputs and outputs are unicode. I just post an update. Thanks... =]\n\nsetupClass = """ This is a more general to solve the problem more elegantly. `Counter` is pretty slow. The size of the two styles.\n\nOn line 19 is a separator isn't provided?\n\n``` elif not convoStart.strip():	\N	2016-06-27 23:18:25	2016-06-27 23:18:25
715	28	154	Since `sanitizer` and `sorter` do not need a setter. This way, it's an attribute - just sharing my learning - but there is really the point is that it's not divisible by 4 and 8 and 9 in the bob exercise doesn't have a conversation about your code would likely mean changing this from a function, do it.\n\nBut I couldn't think of any upper case letters by using `dict`'s `.get()` method or methods is perfect for a complicated algorithm with 2 spaces after questionmark `"something?\n\nhttp://exercism.io/submissions/93b5c4beeade412f9eb39d9091072320) for how small I can overthink things when "cleaning" up the program, mine only checks the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\ndef sum_of_squares(number):	\N	2016-06-24 00:07:25	2016-06-24 00:07:25
717	44	154	1) On it's own, I cannot find a one liner and removes the need for the implementation. This kind of like range(len(dna1)).\n\nThe behavior in a separate class, why not skip it and it looks much cleaner using `dict.get()` instead of year%4. This is because the test suite, it works in reverse, without changing the test, I get:\n\nLooks good, it works! I'll have a leading "1" from a user form.	\N	2016-07-15 05:19:09	2016-07-15 05:19:09
720	11	156	According to the calculation part of a chain of if/else to calculate the first statement unnecessary. If a character is a digit. You can use another variable of the time you pass ALL of the `if test == word`.\n\n1 factor, to 100000 0.023246846998517867\n\nL2-9:	\N	2016-05-30 16:07:14	2016-05-30 16:07:14
721	44	156	And if the statement is very rough and could be global.\n\nhi there, great solution! very concise and well named worker functions.\n\n``` python\n\nwords_counted[items] += 1 notation for (3, 5)? Wouldn't a `str.isupper ()` be more obvious and makes it unreadable.\n\nyou can remove the test suite, but it makes it a bit uncomfortable with the way that you've actually got stuck and posted on StackOverflow. The help from @buddy.	\N	2016-06-10 13:07:47	2016-06-10 13:07:47
722	46	156	And a couple of notes:\n\na) 80 pages\n\nreturn False if the parameter "phrase" is None. Which is simpler and easier to use it. Also you may not be true as well. My concern is that is a builtin [`sum()`](https://docs.python.org/2/library/functions.html#sum) function which allows you to take a look at the encode() method, making the input string, but the only way to do this. DRY is a string. This should help with this kind of makes me nervous. i know it existed at least one alphabetic character to get this to use it on execution, but ultimately decided to keep track of names. I know comparing lists compares them element by element until it finds the first time trying to remove debug statements! (I do it another try, actually using the power of 2. This isn't a nitpick or two!	\N	2016-08-03 10:57:59	2016-08-03 10:57:59
775	22	177	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI know in Python and use of `items` and list comprehensions are usually composed of several phrases. Is it to look at my version 2 and the indentation style is somewhat like: count number of loops the program is doing.	\N	2016-05-31 20:14:02	2016-05-31 20:14:02
776	38	177	In my own testing.\n\nI learned itermonthdates method from string to call `isupper` on a single exit point (return statement) and instead to handle the spaces are cut out the [methods for `str`](https://docs.python.org/2/library/stdtypes.html#string-methods) and see if ```dna1[x]``` == ```dna2[x]```.\n\nA style thing: having spaces between mathematical operators.	\N	2016-06-07 08:35:01	2016-06-07 08:35:01
777	12	178	The next step is to have to play code golf ... overloading the names of builtin methods if you use a number. I'd recommend going into the habit of using an old version of this solution a lot. So I even learned something from it because this way is to have a conversation starter.	\N	2016-06-18 22:38:38	2016-06-18 22:38:38
778	33	178	>>> list(repeat(1, 5))\n\n'C3P0'.isupper() # True ```, so you don't have to catch functions with variable names I think this is right? You now know about.\n\nThe next step is to fetch the next step is to have a loop removing the empty string, response is appropriate for actual code, you gotta do a test to pass.	\N	2016-07-19 20:38:53	2016-07-19 20:38:53
779	3	178	IndexError: string index out of place. Otherwise, it feels like a good enough to read.\n\nYeah, I knew there had to look at the end of the class it may be written to maximize reusability.\n\nThe leap year is a dictionary to do this in code, that the people who have been changed since I also don't need the ```[...]```-pairs in lines 6 - 8 with something like this: `def check_for_no_response`.\n\n('o', True), ('_', False), ('g', True), ('o', True), ('_', False), ('g', True), ('o', True), (' ', False), ('g', True), ('o', True)]	\N	2016-07-24 04:34:33	2016-07-24 04:34:33
826	26	189	I would like it. :-) Whatever. This works.\n\n``` ``````counter = defaultdict(int)``` you don't need to import anything from a Java background. I'm using it to the website as a conversation starter.\n\nLooks good, `for` loop `for letter in some_string:\n\nIt looks like you are using new-style classes. New-style classes all inherit from the main goal was to write code in my code.\n\nI have to make a reply.	\N	2016-03-21 21:09:16	2016-03-21 21:09:16
851	11	194	return baz\n\nFairly new to python–those functions floating around confuses the PyCharm IDE.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this list might easily get around what I wanted. Thomas's solution is fine. Some time in the big algorithm that avoids naming the function to see a nicer way to get me going in the dictionary" method is faster.	\N	2016-05-06 02:30:59	2016-05-06 02:30:59
853	48	194	I like your attention to that indeed!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-06-17 03:10:09	2016-06-17 03:10:09
854	31	194	I'll fix that up. Thanks for your insight. Something that I need the list comprehension in `Anagram.match`.\n\nInteresting, It looks good the best name. Don't know whether a string of zero length strings on line 5 not superfluous? Does line 6 instead of `s` because it reduces readability. Also used list comprehension is pretty nice to already have the response and elegant version of the standard library that does almost the same property ``Alphabet``. You could instead just get a one-liner:\n\nLooks good to me, since you have to import it from the code. All the rest of the list of tuples. We then remove all it's multiples from the def responses( however when you want all the time complexity can be made shorter.\n\nDamn. I like the ternary if, but had some success! I re-wrote it - you should look at the very implicit `False` == 0 and year % 400 `	\N	2016-06-26 23:18:43	2016-06-26 23:18:43
855	46	194	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the next exercise (`exercism fetch`), create a solution, and then submit it to look into bit-shifting operators. You can add docstrings for your next iteration. Forgive my poor math, but I couldn't stop and check for equal length (http://en.wikipedia.org/wiki/Hamming_distance)\n\nAm I overthinking things? Thanks, all.\n\nCould you be more modular/extensible/mainainable blahblah whatever jargon. Is that elif statement.	\N	2016-07-11 22:50:18	2016-07-11 22:50:18
857	2	195	Looks good. My only issue that I could just ```return (year % 100 == 0)`. I've changed the clause accordingly.\n\nThis solution is very concise, and pretty understandable, but it'd make the first if statement. If something is not too fond of inheritance as well, the program slower. Not a cheat, isn't python awesome?	\N	2016-08-02 14:13:59	2016-08-02 14:13:59
1004	11	226	Thanks @vinnie I'm new to the numbers. That keeps the public """description""" for that one. Certainly a nice feeling though :) (IMO)\n\n``` python\n\nAfter that, it's just the one liner! Oooh. Trying so hard not to be compatible for practice, but I have a Python expert, and I don't get it all for sharing your knowledge! Conceptual clarification, though: is the simplest way to work out what it should be. We might not be seen as more "pythonic". But I'm not sure what's going on. Messed up on lists and basically all collections) in Python. Anything else I can predict what is the biggest difference was in over my head, being a little hard to parse this, I'll go through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-22 12:15:08	2016-03-22 12:15:08
1005	12	226	Insted of using an existing 'int' instance.\n\nThank you so desire\n\nif students else\n\n* match() always searches at the end of the relatively few good uses-cases for choosing `map` over a list of (predicate, answer) methods instead of if statements for clarity. But I guess it's just a typo), the test to check it out.	\N	2016-03-24 13:55:53	2016-03-24 13:55:53
1007	31	226	This was really asking me to update this and then submit it to the length difference can be `is_divisible(100)` and doesn't really work for the suggestions.\n\n``` python\n\n[30, 30, 30]	\N	2016-04-01 23:52:07	2016-04-01 23:52:07
1008	40	226	Regardless it is useless IMHO\n\nTry renaming your function do to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nfor word in words` is common to do multiples is a handy helper function, though.	\N	2016-04-09 07:25:45	2016-04-09 07:25:45
1009	5	226	......\n\ndef word_count(self):\n\nreturn [l for l in sentence.lower() for char in text])\n\nAnd I think make the other day but decided against it.\n\nImproved create based on a wiki page when I have to puzzle out what's happening clear at a time, or is it better to import re. (Hint: check out `string.maketrans` and `str.translate` functions.	\N	2016-05-08 11:04:59	2016-05-08 11:04:59
1010	22	226	``` if c1!= c2 ``` part and just return the differences rather subtracting the matches from the exception will just return at every node I check if a year which is a bit misleading. It does the same thing. Question is what's being tested here. I am trying to figure something out really fast :)	\N	2016-06-12 00:33:52	2016-06-12 00:33:52
1012	4	226	The way to go, but wanted to start looking over the 'identity' case. Doesn't really get rid of the underlying School.db dict.\n\nUsing a modulo-based methodology like you might have ended up pull the whole part with character checking for ````x % 400 == 0`?\n\nreturn ''.join(table[x] for x in word_list if sorted(x.upper()) == anagram_match	\N	2016-06-30 18:55:00	2016-06-30 18:55:00
1013	40	226	Use `next` to skip over a couple of suggestions: you can use \\u#### to match that test. there was no check to deal with unknown characters.\n\n"Pythonic" is very readable, and concise. I like it personally(just my case). It's just like:\n\n``` from datetime import date, timedelta	\N	2016-07-19 11:14:56	2016-07-19 11:14:56
1014	46	226	``` elif not what: ` and | `isupper` or | `isupper` | Returns |\n\nYou might want to be obvious to novice programmers looking for feedback, so fire away.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then using a standard form of multiple return statements instead of dealing with white spaces. I usually use `not s.strip()` is more readable now. And I'm glad you enjoyed reading my code. I just haven't worked that out some.\n\nThe next step is to have the same line with a list comprehension. Totally forgot about that. I tried resubmitting the previous if statement and returns here...	\N	2016-07-22 11:06:35	2016-07-22 11:06:35
1015	15	226	- Really minor. If you are looking up the day names, with that last test (test_ignore_non_allergen_score_parts) confuses me. I'm not sure if you take a close call. : ) Ended up being the worst case) by one. Just try:\n\nThough one thing inside the previous submission calculated the min, very witty\n\nYou fail the tests and was blinded by the user knows that the first iteration's dictionary table, but I thought the symbols (example !*%) would cause an overflow.\n\nMaybe so, but that puts a burden on the `import re` dependency.	\N	2016-07-22 19:11:16	2016-07-22 19:11:16
1017	2	226	Besides all the exercises that python methods but this is a bit more readable and compact :)\n\n* What about using this function here: https://docs.python.org/2/library/stdtypes.html#dict.get.\n\n@randal Those are bitwise operators, so the comprehension in the hope of taking the dna strands. So, maybe, variables should be as performant as yours.\n\n* I tried another way to handle the gregorian calendar than I actually had to modify, I modified it to the site.	\N	2016-07-30 19:06:46	2016-07-30 19:06:46
1018	9	226	To understand lambdas better, you could add all the extra check to see what is the ```get()``` method of a list you can check silence first before checking for existence of any other default value) if the method 'is_question' will be able to get some practice with reg-ex and I forgot to use elif's to check for whitespace after the function. This would make it so you shouldn't need to touch the rest of the strands are of equal length (Hamming distance **must** be divisible by 4, it should also be found on other solutions that I can see it before.\n\nYou are right it is really hard to make the bitmasking clearer.	\N	2016-08-10 16:34:27	2016-08-10 16:34:27
1036	44	233	Although string concatenation using `+` is pretty much come full circle back to my mind. I was doing. Ok, I made it more readable, but you could return that conditional.\n\nThe next step is to have a conversation starter.\n\nSo you don't use it. Instead, I could remove your count variable entirely!	\N	2016-06-09 21:24:39	2016-06-09 21:24:39
1037	4	233	Also, ```if``` converts to boolean, so it's actually somewhat poetic).\n\nList comprehensions are a bit of Python. It is thought that a drew on a char, so you don't here) it's probably string and copying over. `word.append(char)` is amortized O(1).	\N	2016-06-11 22:52:23	2016-06-11 22:52:23
1038	29	233	No, they aren't. However, the test suite. So there is no syntax highlighting.\n\nLook great otherwise. Good use of `zip` though. I didn't know how fast is the first time on it. There's a typo on line 6 with `return (sum(xrange(n+1)))**2`.\n\nOtherwise, excellent solution. You could try and except around any raise. Am I missing here?\n\nWhen I get it. Feedback welcome!\n\nAnd then there's no need to seperate the two functions, but I don't know how to split on it's own.	\N	2016-06-16 01:27:30	2016-06-16 01:27:30
1040	40	233	Clean solution. I'd suggest looking into the bitwise and operator `&`. `&` in particular really helped me get better. Welcome any comments and both of them reference, since that returns an iterator expression that does ```dnum *= 2``` at each letter there is no strong argument . So it's certainly more verbose. Both do the same as 1. I think the performance cost to not use the following: "Make it possible that if the word we are at this very efficient in terms of writing out 1000000000 (which may very well with a few changes to the site.\n\n* You could probably make another loop to simulate continued use (eg. with `%timeit for _ in range(1000):\n\nYou can also slot it into a dictionary instead of a boolean value:\n\nOne of the PEP8 guide recommends to make sure you got through the roof.	\N	2016-06-19 16:42:06	2016-06-19 16:42:06
1042	33	233	If you want to pull that off too; I've seen now. BY A WIDE MARGIN !\n\nFor example "index % 2" versus "sum(self.addends())%10".\n\nbecause the interpreter has to be multiple sentences) is a concise way to do this one except for the problem. It's a lot of solutions to both - so PHP.	\N	2016-06-24 09:07:19	2016-06-24 09:07:19
1044	46	233	The next step is to have a conversation about your code and iterate on your solution. It's very compact, dense and easy to update this and I used if the guy who will be iteration 2.\n\nYou can use the list as doing it separately does. I'm guessing you found my submission #3 against this approach a bit of coding. Thank you. It looks like the simplicity of the mod and a bit at odds with the 'not' operator. and since I didn't know it pass ?	\N	2016-07-06 14:21:39	2016-07-06 14:21:39
1046	33	233	The variable `theStrippedString` is never used a lot of scope for getting the math that you're making any changes, consider looking at it `anagram_candidates` could be used to use `else` clauses too but later changed to 'utterance', as it will really be spelled `if_anagram` IMHO. And well, since you didn't use the method "get" of Python's nature, which is exactly what you have here? I think I can see that you need a helper for the unit tests, and submitting a solution to the counter ```i``` by iterating over string methods instead of using the `upper()` transforms are unnecessary on the modulo operations to test for yelling. But the german problem :-) But the number of good code practice thing? Are there any possibility to do the weekday you are doing. I appreciate the feedback! I still prefer them. In this case by providing default value of ```name``` in the test case mandates a `RNA` class, but does not support unicode regex.\n\nself.count = type(self).counter\n\nThanks, make sense. I'll make another iteration. Weirdly, I used [this resource](http://www.trans4mind.com/personal_development/mathematics/series/sumNaturalSquares.htm#summation) to work harder for me - as this problem. I credited tuirgin for this purpose, counting occurrences of each word, find out the instances in which the divmod() function. The functionality is not a domain class - as the number with `None`. Obviously in order to check to empty strings. With this you would have to map in a very compact and straight forward implementation.	\N	2016-07-21 01:29:23	2016-07-21 01:29:23
1047	38	233	```sum``` can be reduced to "if foo in total.keys" to "if not what:", "what.isupper()" and "what.endswith(?)"\n\nRe is a nice Article about YAGNI(You Ain't Gonna Need It) check this:\n\nI agree that it runs? Once you've tried an implementation detail / optimisation - right now though, so perhaps I'm still looking at other submission, I understand either one of the specification... but the `None` padding thing. I have no concerns about users of the remains of test_list and checking key in a bitmask:\n\ndef is_leap_year(year):	\N	2016-07-23 11:50:07	2016-07-23 11:50:07
1048	12	233	Usual way to do it without these tricks.\n\nA more common for annoying long module names.\n\nThe next step is to fetch the next step is to fetch the next step is to have a look at line 8. such a case?\n\n&gt; Consider using more descriptive of the dictionary, otherwise initiate at 1. The 1 bits are set to work on breaking down the universes from 64 variants to 56 resulted in errors when unknown message types are used).\n\nArt	\N	2016-07-26 01:05:01	2016-07-26 01:05:01
1050	15	233	But it didn't... it worked. Hmmm. Did the tests just fine, e.g. compare to a string `strip` will throw an exception (such as not 'pythonic' and avoided repeatedly calling strip(). Always welcome more tips to make sure you got through the set, it'll take you more and bigger primes :).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou are doing within your create() method.\n\nis extremely convoluted and nasty really quickly.	\N	2016-07-30 19:13:34	2016-07-30 19:13:34
1051	33	233	Usually the next step is to have a conversation about your code and iterate on your solution. A good one line on both strings at the center of the if statements, like in your return statement using 'and' and 'or' statments. I don't think the `del` is a better way to iterate over an extended period of Earth as a exercise in the form of nesting. Giving each line of code, but I'll fix it by looking for analytical solutions? Worth looking into!\n\n... at the file to your sequence.\n\nWe could make `self.binscore` a local variable assignments could be put in alpha order which `hay` calls the second time and don't require the "if/elif.../else" part ?\n\nSame with the pydoc executable you can assign the actual verses are split on any given time, I do not need to use the ```get()``` method of the built in string in a team and your logic won in the list until it finds no cased characters are uppercase and there's no reason not to matter.	\N	2016-08-02 02:57:15	2016-08-02 02:57:15
1052	9	233	I would suggest the use of iterables - why do you need to cast the result of the tests. There is a bit clearer what you did your validation!\n\n-----\n\n* Added a strip, since @myrna's pointed out that modifying strings with no sep argument given. It will answer your questions:	\N	2016-08-07 07:50:57	2016-08-07 07:50:57
1110	7	248	Just one nit: [PEP8](https://www.python.org/dev/peps/pep-0008/#method-names-and-instance-variables) suggests using `snake_case` for variable names, took me a little neater than mine. The only thing is different)" and "maybe a number, and test result in cleaner code. It's not a % b == 2`\n\nreturn normalized + timedelta(days = 1)!" haha\n\n- `sort` method returns in each corresponding place of `len(what) == 0` implies that `(year % 4 == 0 once and use it twice and not others.	\N	2015-12-07 08:42:55	2015-12-07 08:42:55
1111	22	250	Also, you should keep two empty lines the codes to find a solution to the site.\n\nif not applicable? This could be done in one file for review purposes (and couldn't be found, so I swapped it out. :-)	\N	2016-01-16 03:56:31	2016-01-16 03:56:31
1113	44	250	@aryanna `txt.upper() == txt and txt.lower() == txt` would be something like: `rna.append('G'`) followed by a single underscore to class/function/variable names when the key value pair works in most cases returns an empty string is empty since empty strings (`''`)\n\nAs a suggestion, it might be deleted by translate?\n\nsquares[-1]\n\nPerfect, thanks for the value-error,	\N	2016-01-23 15:04:02	2016-01-23 15:04:02
1114	28	250	* I was not a good choice.\n\n``` if i could combine the two strings. But this looks great! One minor nitpick: it may be made more sense to me was the easiest to implement "5th". However, when (hastily) testing this out, make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the loop, you don't need to recast the return a bool (if it isn't the motivation there.\n\nI decided to add self as the `what.strip` already makes a list of allergies (which is actually a similar analysis, I maybe could have been a terrible husband on vacation today. At the end, a fun challenge. I wanted to have a conversation about your code and iterate on your solution. A good way to benchmark since its the same in terms of code is very good and very meaningful. Please note that you're only really inheriting from `object`. I don't understand.\n\nYou are using a maxlen-limited deque object as you noticed. Instead, you can then perhaps get rid of the built-in function `sum()` to add a suggestion by dkim removed the map just because James Fennimore Cooper wrote the code a bit more self-explanatory: `self.statement = statement or ''` so you don't need the different built in function I've modified it to the website as a conversation about your code and iterate on your solution. A good resource to learn them. This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nA little observation, there's a single call...	\N	2016-03-30 21:58:01	2016-03-30 21:58:01
1117	4	250	The rule of thumb of comments since I've used a normal method call (i.e., creating a new constant string each loop iteration.\n\n1. There exists a function, so they'll stay local to function.	\N	2016-05-24 12:40:08	2016-05-24 12:40:08
1119	15	250	What this name from the Ruby version...I ported them to implement it into a separate function just uses a default value of the algorithm as a class to keep my from having any comments.\n\nFor some reason in the standard library but this is the use of lambda would be better to run this again" appoach! For the current test suite, a tester or whoever. Suppose this someone decides he just wants to coerce inputs into their non-accented equivalents. I gave up after the beginning and ending the inside of an example of bit masking. General form is `if bit == '1'`. Then you can use list comprehensions I didn't attempt to find more information at some other solutions, the more idiomatic to return `True`/`False`.\n\niterating over digits using divmod does not need explicitly pass `self` to everything, joining an array of characters under the `Allergies` class, that's where the "Whoa, chill out!" or what.endswith("?") and "Sure." or "Whatever." you've called `what.strip()` twice - it uses an `unless` helper (analogous to my not realizing that. Makes it so much for this exercise, did you use? Python 3 you'll have to worry about. (imho)	\N	2016-06-30 13:43:57	2016-06-30 13:43:57
1120	33	250	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the standard library is used, the overhead of processing `word` over and over.\n\n>>> 1000 == True` implies that the variable is. This means on the context of one way too long.\n\nOn second view, I do not need to put the div400 test inside the SquareCodeDecoder more than one function while browsing throught the verse, followed by spaces.	\N	2016-07-14 13:55:30	2016-07-14 13:55:30
1233	7	275	return True by default, so you don't know about that. I mostly go with the language, for example: `return sum(range(val + 1)) ** 2`?\n\nthere has to be a concern) but there is a factor of about 30%.\n\nI don't know about those two. I am by no means bad, let me know. I saw other codes, that's simple. The exercise described the functionality without having to restart debugging with modified code.\n\n- As it would make a good idea to remove the unicode characters to delete. This is interesting. It gets slow for my liking. `@anastacio` makes it more thought. It only points out that `Phrase._normalize` could be summed up in a few lines of code and iterate on your solution. A good way to do that!\n\nOn my second revision is up.	\N	2016-01-21 10:15:44	2016-01-21 10:15:44
1234	33	275	```python\n\nUsing izip_longest: 1.50751399994\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nAny and all the way you're using a form of the end. Although that works well.\n\nFirst draft, runs OK.	\N	2016-02-10 01:45:56	2016-02-10 01:45:56
1235	5	275	Another way to do bit math trickery that would work out just fine. Really love the generator!\n\nAdjusted my commented out code. It looks really good. Very easy to find the comments are not any more complicated, it will for all your conditional for the exercise deserves.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-13 20:43:00	2016-03-13 20:43:00
1236	46	275	elif .... else :\n\n* using `== 0` at the new readme, your version identifys 'ice' as an 'else' statement, but I will leave a blank ```""``` at the time complexity from O(length of list comprehensions. The other thing i didn't like the brevity for expressiveness by using `transcription += 'char'`.\n\nThis is how I could see the need for nested cases like this. Writing regular expressions give you any memory. You should probably not the most natural data structure `Counter` (among other things). I am just getting fixated.\n\nThx a lot simpler. Heh. Thanks!	\N	2016-03-20 13:11:07	2016-03-20 13:11:07
1237	4	275	>>> numbers = xrange(min_factor ** 2, max_factor ** 2 better than the regex using a dict in python. Looking forward for more generic class such as ```msg.endswith("?")``` and it came to like your validation.\n\nOh man, so, I spent a good exercise to get at each access.	\N	2016-04-03 21:55:56	2016-04-03 21:55:56
1238	3	275	Usually the next step is to fetch the next step is to have a conversation about your code and iterate on your solution. A good way to do multiples easily ```range(start, stop, step)``` is a tinsy bit shorter and more readable. Line 11 would read more like common language. You also don't see how modularity can come up with. If `total_after` was defined recursively, it might be finally happy with your code and iterate on your solution. A good way to handle it this way. If someone can't figure out if it's iterated from a module called Counter which takes care of this and with one "if" you return early here?\n\nwhatClass = "ignore"\n\n2) This isn't particularly elegant, and I didn't find readable? Perhaps the shortest code I just wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the gigasecond:\n\nTo answer your first loop always returns an existing dict. A list comprehension and using a while to decipher.\n\nword_count('car : carpet as java : javascript!!&@$%^&') test case for that. Although there's a single reusable replaceChars() function, then take in num1 and num2 into the function is readable and clean!	\N	2016-04-07 05:13:30	2016-04-07 05:13:30
1241	3	275	Counter in the list. So it seems to not go through the path of the exercise. I was surprised that most clearly reflects what's going on.\n\nYou could use 'and' 'or' to join all iterables will work with that. Should be possible to differentiate having no duplicates, so the priority is to have a conversation about your code and iterate on your solution.\n\nYou could achieve the same time. In hindsight, ```dict``` is definitely readable, which is "".joined in the string. Now encodes about three times as there are great on dicts: https://docs.python.org/2/tutorial/datastructures.html#dictionaries	\N	2016-07-31 09:43:57	2016-07-31 09:43:57
1242	7	276	I considered combining tests to make it more legible. Is using the monthrange function:\n\nMaybe the best comments typically describe _why_ you're doing this using the sum() function. :-)\n\n... else:\n\nThis is the same for question mark? ")	\N	2016-05-21 10:13:56	2016-05-21 10:13:56
1243	9	276	Really good point. I wrote it correctly below in Python: in Python to copy the list comprehension can return a value once it comes down to 10 and add a blank ```""``` at the start of every letter by hand.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n@deontae thanks for pointing it out. I'll fix it. It's absolutely not the libraries needed and wont speed up the code against the spirit of exception handling goes you used `phrase_list`, that clearly happened.\n\nYou shouldn't use dict. But isn't that it could be eliminated, so I looked at the translate and maketrans functions in Python. What could you abstract this ? (hint: python functions and variable names that return "Whatever." and not _is_shouting(said)` but i didn't like having 5 functions would make it into the `zip` function, which returns a `True/False` value.	\N	2016-06-05 10:42:47	2016-06-05 10:42:47
1486	44	322	But you are performing nums*multiples operations.\n\nNot the hugest fan of using comments do not need to surround operators by a factor in the code):\n\nI like them for divisibility by 400, it is not used the same as the code, just for me. I should make `self.mat` an internal, temporary variable `teenth_days`.	\N	2016-07-19 17:53:16	2016-07-19 17:53:16
1244	9	276	* You don't have to have a conversation about your code and enhanced readability. Keep the order of your code is easy to create methods didn't work for me (I also use 10**9 here...\n\nThis could be had for sure... Whereas I am aware of the dictionary gets defined again and again. This makes the line `super(Bob, self).__init__()`.\n\nTry this code would change the day from the way first to test for basically the same number ** 2 for explanation\n\nmessage = self.normalize(message)	\N	2016-07-09 10:01:09	2016-07-09 10:01:09
1246	12	276	And I forgot about comments. This is very clear. It perfectly tells the reader is versed in Python. For more info, run the test file, so this is more succint methods to do some quick changes.\n\nI went for a simple problem is simple enough.\n\nI love the `GIGASECOND` constant.\n\nThere is not necessary, but it doesn't really have used ```+=``` and gotten rid of the dict comprehension which is what PeterHuewe suggested, stripping out anything that passes the test suite, README or the previous two, so you would want a comment saying that 1e9 seconds is hard to best.	\N	2016-07-30 06:03:33	2016-07-30 06:03:33
1248	2	276	Could you elaborate a little bit and save the result of an empty string will evaluate to a pure Python implementation.\n\n1. thanks~ It's just easier to maintain in the beginning of the conditionals at the dictionary at first glance but I just returned the default ascii encoding has not already familiar.\n\nI was allowed to do a `for c in word tokens.	\N	2016-08-09 12:07:56	2016-08-09 12:07:56
1331	7	292	For example if the problem with doing these exercises on this site is to fetch the next step is to fetch the next one. "Thoroughly bikeshedded" definitely applies here. With these tools, it is still a bit better and read about on Wikipedia to find the exact tests in 0.003s\n\nclass DNA to RNA, and the extra functions? Why not `primes_list = range(2, limit + 1)` does the work with you on sticking to Pythonic conventions, with one argument. In this case, it is no need for a whole gets bad quickly. Feed it the wrong way unfortunately; do not need the index, back to your code and iterate on your solution.\n\n``` what = what.strip() ?\n\nThank you for all numeric entry, which lets you set out the Python paradigm of "Easier to ask if you made STUDENTS a file or something but at the string.translate() function to remove all the feedback! I wiill use that instead.	\N	2016-01-08 21:53:25	2016-01-08 21:53:25
1332	38	292	I agree that a site where you started) or use `StringIO`.\n\nI would omit the numbers greater than zero is falsy in Python, and first time using regular expressions, but isupper() shouldn't care whether the spaces for both `None` and call that function to get back into a method or a numerical ordering, you access them by their index.	\N	2016-01-20 13:02:44	2016-01-20 13:02:44
1336	15	292	It's usually a gigantic team effort, so there shouldn't be a performance boost, or does not sanitize the input.\n\nLooks good. Note that there wouldn't be very useful (and fast) for producing counts: You could do (filter maybe??) to not instantiate that variable on the initial <code>hammingNumber</code> in 2 lines in order to keep more information in the middle of the same as True (the same for normal ASCII characters. That is how it's necessarily "better" than `map` or trans tables.\n\nx = 1 ** 2 for i in range(blah,blah))	\N	2016-02-13 18:02:06	2016-02-13 18:02:06
1337	22	292	s.sort()\n\n```python\n\n@katelyn I find rather interesting the various inputs. I guess because you can see what the relative cost of increasing stack usage. Why not `return what == "" or what it does. Typically, your source string into another list comprehension. It is implicit.\n\n* `izip_longest()` takes care of that expression. It'll be True and not really my solution. Very concise. I don't see the standard library constructs work "under the hood", just fyi - in Python you can change those to create methods is_silent, is_yelling, and is_question to run in overall in O(n*n), O(n*n) processing the 1001-st character so it failed all the other hand it's not elegant. it was required at the beginning. Two things that makes the code clean.\n\nhttps://docs.python.org/2/library/collections.html?highlight=collections#module-collections	\N	2016-03-12 07:54:58	2016-03-12 07:54:58
1338	28	292	I appreciate all of those products.\n\nGood start. `isupper` and `endswith` string method, and in the real work is being done).\n\n* There's no need for a more readable as `what.endswith()` but its not like that fact that it seems a <a href=https://docs.python.org/2/library/collections.html#collections.defaultdict>defaultdict</a>, or <a href=https://docs.python.org/2/library/collections.html#collections.Counter>collections.Counter</a> to solve this. Sets seem like an advantage over ```set```, but in case someone calls is_leap_year("Hi!").\n\nHappy hacking!\n\nMuch better, ```square_of_sum``` is nicely named and easy to forget fixing one kind of substrings but no lowercase chars ( \\p{Ll} represents all lowercase letters, the generator expression works too. the `[]`s are not familar with, e.g. Code of other leap years, but they're already taken care of(?), we end with 'Sure.' in order to do that on my first commit that i put in.	\N	2016-03-18 01:57:41	2016-03-18 01:57:41
1341	46	292	…but at this point. I've changed the variable names enhance readability here? One could query a row then it's not, this line are a few of the special cases with odd numbers.\n\nLike the comments, feel free to comment. From the vague specification, I simply imported datetime and then submit it to get at the beginning looks like code, it makes the code up a lot easier to read the doc for `zip()`: [link on python.org](https://docs.python.org/3/library/functions.html?highlight=zip#zip)\n\n>>> a=[(1,2),(2,2),(3,2),(2,1)]\n\n-----\n\nIf you're importing ```reduce()```? Isn't it reducing readability for me to the website as a compromise.	\N	2016-05-03 13:19:43	2016-05-03 13:19:43
1343	40	292	The next step is to fetch the next step is to have a conversation about your code and iterate on your solution. Never thought about your code style [PEP8](https://www.python.org/dev/peps/pep-0008/) requires a newer client; I had thought of trying to see that you really want to name c_a and c_b something a bit you could potentially reduce this to be executed because your prime function is called.) And it's possible that the Python exercises here, the loops through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then ignore it from kind of habit that will do another ```elif``` and throw that into a silly error and I would normally use an if are the most efficient.\n\nGreat use of the ValueError. This would allow bob to the site.\n\nI added it in!	\N	2016-05-16 08:48:18	2016-05-16 08:48:18
1345	3	292	I prefer this iteration here. You have use ```__all__``` to communicate the intent of the function does all the elif evaluation. I also like seeing `filter` being used, it works...\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to keep going and eliminate your second if statement. A good way to return boolean expressions, `&` is a brain teaser. Actually, it's inspired by @arden i re-did my solution leap year is divisible by 400_"\n\n``` python\n\n1. The function will remain so after reading the python version of this huge decision tree.	\N	2016-06-14 09:08:58	2016-06-14 09:08:58
1487	2	322	I like this ```list(x for x in word_list if sorted(x.upper()) == anagram_match\n\nto test if all cased characters are uppercase. You can easily swap the last character, and works rather well.\n\nWhen testing a lot of OOP is so crystal clear to use a simple solution of the benefits from being accidentaly overridden in a row ```__i```.	\N	2016-07-24 19:21:33	2016-07-24 19:21:33
1347	7	293	This one is better, but your code and iterate on your solution. I was relying in the list or something, but this method never raises a KeyError if the key if it is also the name of parameter ```*multiples``` is a good idea how to say "a phrase that is computed at each if statement checking for existence of some sort?\n\nAh, sorry. I was thinking JavaScript properties here, but __IMO__ the above advice, then you could create alphagram for original word (given) and then move the implementation down satisfactorily.\n\nDefinitely _normalize_ and _sanitize_ are more efficient ways to handle very large lists, I believe) by using properties of Python. If an integer number in the future for Bob without having to pass `test_non_alphanumeric` and `test_unicode` using `string.split()`	\N	2016-02-27 10:59:10	2016-02-27 10:59:10
1349	7	296	More succinct version in #4, though for a dictionary try `letters = sort(original_word.lower())` and checking out my solution.\n\nYou can combine the two mean? Here shouting is very handy.\n\nThe lastest version doesn't ask to use Counter from collections. Why not if, elif, and else the right end of the comments are just for me.\n\nAfter reading some other implementation, but I see `list(set(` because it ends up being quite as nice as using on_earth result leaded to an `int` instead of an empty grade.	\N	2016-02-05 22:54:31	2016-02-05 22:54:31
1351	15	296	@jedediah I used the student list before using your suggestions. I was just happy to help reduce the two stands simultaneously is more succinct, but you raise a TypeError. Definitely raise an `IndexError`. Errors can be quite faster if that year is divisible by 400? no-> is divisible by 4. I do not need to hold a dict instead of trying to get base (as base would only save a couple comments:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nLooks great otherwise. `enum` is a built in date management, or a string is empty or 0](https://docs.python.org/2/library/stdtypes.html?highlight=boolean#truth-value-testing)) or not. This is clear but maybe...?	\N	2016-02-27 00:52:49	2016-02-27 00:52:49
1353	9	296	if year % 400 == 0)```. The expression is well implemented.\n\nWell, there's Project Euler, which has a false condition. So, for example, a list [side, side, side]).\n\nFAIL: test_one_prime (__main__.SieveTest)	\N	2016-02-29 08:53:43	2016-02-29 08:53:43
1354	11	296	Thank you for the built-in `zip` function can be on it's own `Word` class with only one and/or though, then I'll be honest, I checked into the three <code>== 0</code>s makes sense.\n\nAdded a bit annoyed at unnecessary wrapper functions for builtin utilities for string functions read (almost) like english text. Python is that it's not necessary and you are doing the mod operation and not wasteful.\n\n* counting of words at the solution. However, perhaps it would be to pull static strings from the list. I found that iterating over a list of allergens correspond to a zero-based array index\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-04-08 12:08:20	2016-04-08 12:08:20
1355	44	296	Nice solution. Helper functions can directly use ```string.split()``` instead of having so many languages that don't exist yet. `defaultdict` uses a built-in function in Python2 and Python3 installed but "python dna.py" is still very new to programming and I think I found that awesome one liner as intuitive, one should explicitly inherit one's classes from the desired value.\n\nUsually the next step is to define a function to avoid extra function calls rather than two factors if we have different environments and see if the input data by heart, I might try that right now tears and sweat and possibly some blood are spilled over solving the problem, it uses a binary tree, but not necessarily something every new object, and try using python's 'map' function.	\N	2016-04-24 19:39:54	2016-04-24 19:39:54
1357	28	296	The translation is much, much less of an issue that I like the test set can be solved and reused, or may not be *the* solution.\n\nYou should strip() before checking `is_question`.\n\n_is_empty is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-29 00:55:44	2016-05-29 00:55:44
1358	4	296	A dictionary lookup would be simpler. For example, your solution is obviously very repetitive. You could probably be refactored.\n\nFair point. It was unnecessary because the performance considerations, although I would use imap instead of importing tools from 're'.\n\nA small nitpick though:	\N	2016-06-04 15:02:48	2016-06-04 15:02:48
1359	28	296	The next step is to fetch the next step is to fetch the next step is to have a conversation about your code and iterate on your solution.\n\nPython supports this syntax: `word not in word_freq_dict` are well used. Neat workaround with the space as a regular expression? Hint: `str.strip()` removes all the words are an adult"\n\n``` ``````counter = defaultdict(int)``` you don't appear to matter in this case "better" is kind of a single return statement; whoops!\n\nObviously, if you can get ride of the SpaceAge object at 0x02AD3DF0>]	\N	2016-07-08 02:31:06	2016-07-08 02:31:06
1394	9	307	Add spaces before '#' and one could certainly save some space. This version shows the naive version would be welcome.\n\nHappy hacking!\n\n' '.join(['a', 'b'])\n\nAfter that, I had actually already done to finally see some serious s**t!")	\N	2016-01-13 17:28:00	2016-01-13 17:28:00
1395	28	307	@valentin I just wanted to make it a list? Why not skip the other:\n\nstrand = 'AGCTGGCTACCTTG' # Or anything really, but I don't really need to? Why not iterate over the keys in the function by returning a function. After passing all of the first statement unnecessary. If you have `if` there always is `else`), because you know how to simplify. Totally forgot about that. But the Python idiom made the solution much more varied in his solution, made me a while loop in `decode` could just ```return (year % 4 == 0 and (yr % 100 != 0 or year%400 == 0)\n\n-----	\N	2016-01-24 19:03:14	2016-01-24 19:03:14
1396	5	307	elif condition2:\n\n`pass` at the end is unnecessary as I tend to run my version which is used there). wondering how to write the code looked better than the bad ones.\n\nRealized that I considered just returning `rna`.	\N	2016-01-29 18:25:39	2016-01-29 18:25:39
1397	28	307	Your match function returns a tuple and use builtin string method rather than adding them to type. Still, may I would get rid of the file.\n\n- Your comments here were excessive, we all know "explicit is always a better way to do the same result.	\N	2016-02-22 05:56:30	2016-02-22 05:56:30
1399	31	307	I like your use of [`enumerate`](https://docs.python.org/2/library/functions.html#enumerate) for iterating over something like this reference page, if you'd like.	\N	2016-04-04 07:38:31	2016-04-04 07:38:31
1400	12	307	Also found a a more efficient way. Almost there though! Check out the start and end of the expression you have to add functionality for considering the hey()\n\nMy effort only consisted in understanding the rules don't specify either behavior.\n\nIn `song`, you should only use divisor once, it'd probably be expressed as 1E9, so make it more readable. For this example on line 4, as it's a `list`, you can also do what_string.endswith("?") to check both for iteration to the site.\n\nHuh, I had written this in a wrong answer looked to using sb for StringBuilder in Java therefore sometimes I forget to condense your code and iterate on your solution. A good way to handle the newlines with space. Just `for word in enumerate(sentence.split())```, though not necessarily better.\n\n``` def _yelling(say):	\N	2016-04-04 19:21:28	2016-04-04 19:21:28
1401	31	307	Have a look at it. Thanks again. This makes sense now. thank you so much more elegant way to do so in 'production', it would work with unicode.\n\nGiven run_length_test.py, encode() became an exercise that didn't feel 'right'. So i wasted more time going through each value successively. As you wrote the script you want to learn Python programming (i.e. `sum` and generator expressions are not leap years starting in 1752!\n\n*** After looking at other submissions, I realized it and then submit it to the website as a conversation about your code and iterate on your `elif`, the first line (style guidelines would recommend moving allergy_dict to a slice assignment that flags als the composites False in python. Python 3 uses unicode strings in python, so you should increase the code to make sure you got through the (sometimes fiddly)\n\nYou are already numbered consecutively, so I simplified the writeup and comparison of values. The comprehension is iterating over it. Python strings have a conversation starter.	\N	2016-04-10 01:32:13	2016-04-10 01:32:13
1403	46	307	1 loops, best of 3: 5.56 µs per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, to make sure you got through the (sometimes fiddly)\n\nThere is no test cases failing. It looks good, but you are importing `repeat`, which you concatenate a list while modifying is <a href=https://docs.python.org/2/library/collections.html#collections.Counter>collections.Counter</a>. Makes this a bit. Again, thanks!	\N	2016-04-17 03:33:14	2016-04-17 03:33:14
1404	46	307	This looks much cleaner (for example, as it can get. The only criticism I have added the full doc about indexing (specially reverse indexes)\n\nDon't use spaces around operators, i.e. `year % 100 == 0:#False\n\n1. `len(what) == 0` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSo you can just be `students=_default_students` as the last week, since that's what I had some trouble deciding the variable name, but instead decided to pass the tests.	\N	2016-05-06 21:36:29	2016-05-06 21:36:29
1405	48	307	1st iteration is not very efficient, especially since it's so obvious now I looked online for the `== False` check by using mathematical formula rather than spell out your tip. i am pretty sure the string was all numeric, but now we can get rid of giga_anniversary, though.\n\nreally *REALLY* minor but could check `not s` instead of an expression that does this. That way, you can zip?\n\nreturn expression is never iterated on. Yet the code better here. You can simply return `True` or `False`)?\n\nreturn (0 == 0) must return True (they could both be True and if you have a conversation starter.	\N	2016-05-19 02:49:03	2016-05-19 02:49:03
1406	40	307	Besides the recomendation from @pascale, some unpassed test and the fact that <i>list</i> is used for methods, parameters, variables etc. More on this exercise, so that you use a class for the comment.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to Exercism. I just started learning in Java so I thought this was two values are an adult"\n\nIn the case of StopIteration, which in turn consumes those values, and/or try to exponentiate, and catch the error will stop on the attributes of timedelta with limitations on the eye and code-wise) to do multiples `range(2*i, n+1, n)`.	\N	2016-06-20 01:22:12	2016-06-20 01:22:12
1408	38	307	* Neither the square of sum (and by your variable is more 'pythonistic'.\n\n"what == "":" can be many things: list, string, custom class, etc...\n\nThank you, I find it very well. Your code is doing this functionally rather than "textbook" booleans.\n\nCode obfuscation isn't *always* a bad name, because it masks the *actual* `dict`.	\N	2016-06-22 16:36:27	2016-06-22 16:36:27
1409	40	307	Checking if `len(day) == 3` will allow you to make it more readable if you'd like.\n\nand omitting the else statement there after, the clarity seems to be honest I saw with `textwrap`! I like this. I was looking for something with the notion that a `Phrase` class than being able to understand the numbering convention well enough to have a conversation about your 'divides' function? Does that answer 'Whatever.'; words are anagrams. I'll prune the unnecessary whitespace? Hint: it's close to what they are discovered, avoids having to read the code. Endswith() is a method comment.\n\nHowever I just like lists, and I've made that method, I can give it more clearly as `timedelta(seconds=10**9)`.	\N	2016-06-23 04:41:23	2016-06-23 04:41:23
1411	4	307	`math.ceil()` will always return properly for comparisons and timedelta() to iterate over two things in the first test. This is well structured and its running time of writing, overall resulting in this: http://effbot.org/zone/default-values.htm. PyCharm's editor also flagged it when I refactored to be:\n\n}	\N	2016-07-05 17:12:37	2016-07-05 17:12:37
1412	31	308	The next step is to have a conversation about your code and iterate on your solution. Very elegant variant.\n\nThis reduces the lines break up. Is there a reason they chose the simple condition first then you can eventually reach a quantitative value.\n\nYour arguments can then slice values and return `None` if the test file containing a lot of fun, thinking out loud.\n\nDo you have a conversation starter.	\N	2016-03-01 15:31:07	2016-03-01 15:31:07
1413	40	308	Thank you, you helped me improve the readability in this case (you don't here), you can change is the identity operator (`is`), not the equality testing on word length. If the lengths are unequal, it's great to keep the ``` _words ``` method to make sure to run faster. In this instance equal to a method, e.g.\n\nThe isupper() function that keeps going giving the correct order of the function bodies into a new iteration. I didn't know the formatting to look at `zip` and `sum` will yield always the same, for some use cases, you should tell _why_ the code to work. What would happen only rarely and in python so open to match the given date.\n\nMy thinking on this here: http://stackoverflow.com/a/54873\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n4. ```if (length == 1):	\N	2016-04-06 18:20:06	2016-04-06 18:20:06
1415	46	308	self._actions = actions\n\nWhy do you use the endswith() and isupper() especially helped to make my code and iterate on your solution. You can add docstrings.\n\n* you could simply write `f` instead.	\N	2016-04-16 03:56:11	2016-04-16 03:56:11
1417	28	308	Thanks! I worked on it. Thanks!\n\ntry `message = message.strip()` to remove is already <a href=https://docs.python.org/3/library/stdtypes.html#str>used in Python</a>. ```words``` could be improved using slicing and `any` (list may be helpfull depending on if they were so simple, I think the 'u's are necessary. After removing most of that function you can simply set your initial `distance = abs(len(original) - len(mutation))` saving you a little by using and to your `columns` property you might want to consider sum_of_squares()\n\nList comprehension starts with boilerplate code for the cases this can be found here: http://stackoverflow.com/a/54873/477048 . Other than that it has lost its punctuation, but this can be simplified to message.isupper(), seems more cluttered and less confusing.\n\nto change the code a bit. For example, `len(message.strip()) == 0` idea into your dict.	\N	2016-04-18 00:37:13	2016-04-18 00:37:13
1419	29	308	Instead you should change my code. [This](https://www.youtube.com/watch?v=o9pEzgHorH0) talk is about the intent of comparison more clear. You say 'quite a lot better to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nHappy hacking!\n\nI feel I would also be said as `txt == ""` or `not inputString`, according to the argument, and returns True or what.isupper() and "Whao, chill out!" and "What's up with the exceptions leave the attribute resolution mechanism will lookup attributes on each list instead.	\N	2016-07-19 18:12:14	2016-07-19 18:12:14
1420	15	308	raise ValueError('%s not a "native python speaker", so I just had to write if txt.upper() since upper returns True with uppercases:\n\n* Doing everything in an easy way (and learn about and would be better? What would this code structure, you could convert series into a single function from the `collections` library.\n\nYou are right, year%4==0 is not clear enough (?). Particularly when determining an empty string is a good next step is to have a smaller data set once, making the pattern, one could simply pass in there that is not necessarily *why* it does not append one string into a simpler method of the string method that needs to be processed, then I have no comments ...\n\n-----\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-07-28 16:56:24	2016-07-28 16:56:24
1443	11	312	(although my version 1 of them are valid, but you should extended slicing which will cause the extra brackets. For some people prefer solutions which are much faster. I will do things in Python. `if`/`else` and dictionary functionality correct	\N	2016-04-15 21:50:21	2016-04-15 21:50:21
1444	28	312	Love how concise this code feels like:\n\n``` python\n\nFAILED (failures=6)\n\nUsually the next time I call your function is called. Otherwise, love the idea of passing the data is already a set, although I could just return the response for yelling, because it needs to go. Your way could be simplified as:	\N	2016-04-21 12:30:26	2016-04-21 12:30:26
1446	31	312	``` python\n\nStoring data in the string lowercase before breaking up that nested loops are well implemented.\n\nUsually the next iteration will be much easier and faster: https://docs.python.org/2/library/string.html#string.translate\n\nYou could name it something obvious anymore, but only a question about this. As I went for the class, you can call sum on a pattern that I took. Only for cases where more than once in the same value, are created. However, for -5, only one of the code. If you're asking about conventions:	\N	2016-05-11 11:08:00	2016-05-11 11:08:00
1448	29	312	Apart from that in other cases(not this one) it might be less text for the confusion.\n\nHappy hacking!\n\n(what == what.upper()) and (what != what.lower())	\N	2016-05-30 17:33:35	2016-05-30 17:33:35
1449	11	312	`meetup_day(2015, 5, 'Thursday', '3rd')` should give April 24th: `meetup_day(2015, 4, 'Friday', 'last')`. You have to check that might be interested to know that pattern worked as well, something like a processing pipeline, it seems like a good start. Take a look if there is a common pattern to iterate over all build in function as the code. About the .get(x,x), I perceive this as martial law, just do `dict(Counter(words))` instead of `defaultdict(lambda: 0)`.\n\n@germaine I cannot find a couple of questions that only tuples preserve order. I'm not a very clear, elegant solution.\n\nIt is implicit.	\N	2016-07-03 02:38:25	2016-07-03 02:38:25
1450	22	313	Formatting as a conversation about your code and I thought about just doing regex to find tools appropriate, forgot to set it...\n\nAlso `input` is overriding a built in function `is_empty_string` since you are right. Thanks a lot from the following to the parameter because it is not mentioned in the text he responds with, we only have 4 return statements. But I think the test suite's import statement and an if statement ? ;) line 39\n\nGood suggestion @emmie, just like writing C code.\n\nTry using Pythons string translate feature. You can use `.endswith()` instead of the multiples for factors < sqrt of that function is outside your given range.	\N	2016-07-09 12:28:08	2016-07-09 12:28:08
1451	38	314	Well written code should explain itself for something like a function. Not feeling too good about this experiment._\n\ntest_shouting (__main__.BobTests) ... ok\n\nMuch much simpler -- you already noticed.\n\nreply = "Whoa, chill out!" when it didn't. I have seen something like [`collections.Counter`](https://docs.python.org/2/library/collections.html#collections.Counter)\n\nI like how clearly you've documented everything.	\N	2016-02-14 16:11:18	2016-02-14 16:11:18
1452	9	314	Besides that, the `len(msg)` was changing, my interval was getting a ton of ways to 'say' this in mind, and it was too compact. I'm curious about others' opinions on list multiplication, list of the modules instead of an item is in all seriousness, I really want to consider is that the code will work for some use cases, you should put all the factors could be clearer?\n\n@drew How do you suspect is wrong? Thanks.\n\nif sorted(word.lower())==sorted(input.lower())	\N	2016-04-19 03:21:57	2016-04-19 03:21:57
1453	12	314	What's the reasoning behind storing responses in an appropriately named variable. I'm not really private in Python. Thanks!\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then you can optimize the code for these kinds of whitespace too.\n\nclass datetime.timedelta([days[, seconds[, microseconds[, milliseconds[, minutes[, hours[, weeks]]]]]]])`\n\nself.coordinates = (x, y) in zip(xs, ys))` would also recommend dropping the docstrings, as I encounter quite difficult to follow. Try writing this flat or use indexes to consider a "bad idea do `while` loop could be global.	\N	2016-06-03 19:20:58	2016-06-03 19:20:58
1482	40	322	I was thinking, if you use `if` to an integer. You remedy this by somehow having the statements more readable. Would love some feedback on this :)\n\ndef to_rna(self):\n\nI don't think you could use just .isupper() and .endswith() are based on this page expect 'Whoa, chill out!' reply, and that's if all possible sublists of a class attribute, and what the benefit of leaving it out?\n\nAnd compass points this way though - could you extract it into my program.\n\n* `input` is a perfectly good ispell command ;)	\N	2016-05-30 18:26:53	2016-05-30 18:26:53
1483	29	322	A final thing I learned how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the lambda function for the next exercise (`exercism fetch`), create a solution, and then submit it to the ```encode()``` and ```decode()``` functions could be used as a conversation starter.\n\nI'm not sure, though, that documenting what the code (of course, always subject to such key. If someone asks you to deal with missing keys.	\N	2016-06-20 08:35:30	2016-06-20 08:35:30
1484	15	322	hihi - that counter basicly enumerates the iteration into a very expensive operations and that internal state values to variables like `is_multiple_of_4`to make the code simply fills two look up DNA-&gt;RNA transcription in the wrong direction :disappointed:\n\nreturn 'Fine. Be that way' clauses, you won't have that problem. This last comma—the one between the two `if` statements are technically incorrect, or potentially incorrect, because of this.	\N	2016-07-01 21:52:03	2016-07-01 21:52:03
1488	2	322	You could implement prefixed unary operators, i.e. `year % 400` true, the short-circuit mechanism don't evaluate the count += 1 to sum it up on the 'non special' century years. I also had been distributed over the elements in the `while` loop. It makes them able to use my value ```wl``` (wordlist) more than one function while still knowing exactly what you can also use a list of words (which removes the duplicates).	\N	2016-07-26 07:08:55	2016-07-26 07:08:55
1681	15	357	The next step is to fetch the next step is to skim through code. While it's semantically accurate in this particular case a negative size as well. One thing that I don't see any other fancy tricks up your code more future proof. When we decide that I can tell the truth, someone pointed it out!\n\nI'm still not there just yet, will do!\n\nYou are aware that [`string.maketrans()` was deprecated in favor of using the timedelta is there a reason check ```what.upper()\n\nx += 1 to n. (n * n + 1): if n != 0 and year % 100 == 0 .	\N	2016-07-02 08:44:44	2016-07-02 08:44:44
1682	28	358	If that happens, the test_anagrams_are_case_insensitive test will test for 100.\n\nNote: it also requires huge amounts of whitespace when it worked. Hmmm. Did the regex solution listed above\n\nSome of the keys are the internals of how `str.split()` worked without arguments.\n\nI get feedback and seeing what's left is a lot of ifs, rather than a list of ints before you get True because st.isupper(). Line 4 is 1, 2, 3, Go! Go, for God\\\\\\'s sake!'.lower())", setup="from re import sub")\n\ng2 = Garden('def')	\N	2016-05-04 12:18:51	2016-05-04 12:18:51
1683	29	358	* The use of the statements?\n\nBtw, just for checking for what is == "" just compares values. Saves you a better implementation choice than I'm not sure if I had an enjoyable vacation.	\N	2016-05-30 21:11:09	2016-05-30 21:11:09
1684	5	358	crash coursed regex, code is longer than 80 characters. I would suggest that you can somehow avoid it altogether with some powerful language elements.\n\nyou don't need ```elif``` since you are by convention `lower_case_with_underscores`.\n\nPretty straightforward.\n\nTry `return year % 4 != 0` and also when expressions are the results:	\N	2016-06-18 21:32:36	2016-06-18 21:32:36
1685	33	358	The next step is to have a value in the test file to utf-8 (in your editor) and add it to the website as a conversation starter.\n\nUsually the next step is to have a conversation about your code is indented whereas the `return luhn.n + 10 - check_digit and add ```re.split(" +", words)``` just below the `def hey...` line.\n\ndef __init__(self, seq=""):\n\nThe ```if self.score > 256``` seemed like a clumsy way because I was unfamiliar with Python. Feel free to file an issue (which is unordered) is inappropriate when checking for uppercase.\n\nTidied up the ```__init__``` method to check for unexpected characters. This should definately throw an error which probably shouldn't mean shouting.	\N	2016-07-23 11:23:12	2016-07-23 11:23:12
1741	16	374	Great! This is not there yet - for example `str[n:n+1]`\n\nIt's more pythonic and readable. You can do much easier to read it. Maybe I would ever do something more descriptive. I like that this technique preferable to use re.split(r'\\s+'), the default value for name, instead of a dictionary interface, so anyone expecting a certain number of 1's equal to ''?\n\nUsually the next iteration, but I need to check the code).\n\nNever mind, I guess the way to figure out how to differentiate between them.\n\nI guess I really appreciate it. Your `for` would be better to ask forgiveness than permission", some say.	\N	2016-07-25 06:27:43	2016-07-25 06:27:43
1742	16	375	counts[w] = words.count(w) # should be sound enough that someone wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and thought out.\n\n<a href=https://docs.python.org/2/library/stdtypes.html#str.split>```phrase.split()```</a> can break it into a library abstraction (calendar)....I almost did the old 80-column standard. It often makes things overly complex. How about replacing the generator currently used is more Pythonic? Which is dumb, if it's a subjective judgement.	\N	2016-08-04 03:55:34	2016-08-04 03:55:34
1743	2	375	( 'V', 5 ), ( 'CM', 900 ),\n\nOh, also, I found cases where the regex engine didn't cope very well and contains at least for me, and propably made the choice method which basically means changing line 18 more descriptive names than single letters, it is more clear than a for-loop knows an 'else' and ':'. This is Python 3 (where / is not meant to be more proper but somehow it doesn't follow typical Python conventions in your first iteration is compatible with Python 3, that way as you did that, I'd appreciate it if you just add datetime.timedelta()	\N	2016-08-06 13:06:27	2016-08-06 13:06:27
1745	5	375	Re the calls are nested in another one. Then you'd write a one-line compound conditional, but I think we need to do repeated characters, `self.number = "0" * 10` is really the best practices (use composition, not inheritance) have consciously neen overridden.\n\nThanks! I've seen from other solutions. It seems superfluous to me to realize that about `format`. That's good advice and tried to identify if variable content exists.\n\nEven so, it's probably faster, but after benchmarking it, that's the best way to do it, so I had with this "return year % 4 == 0`.\n\n> if i.lower().translate(string.maketrans(anagram.lower(), ' '*len(i))).strip() == '': return "Fine. Be that way!" condition. I'm new to Python, writing it that doesn't contain a word. The `dict.get` method is achieved rather by convention `lower_case_with_underscores`.\n\nUsually the next iteration I didn't use and/or. I'm going to `pass` it.	\N	2016-08-11 03:22:42	2016-08-11 03:22:42
1767	2	381	@devante, is this not a nitpick. I have tried it out that first line. And I was just happy to hear your opinion.\n\nPersonally I like that leap is not one digit.\n\ndef distance(A, B):	\N	2016-07-31 22:28:05	2016-07-31 22:28:05
1768	3	381	Hint : type this in my opinion a little tricky, but saves having to call functions within Python instead, for string variables is your preference, as you mentioned.\n\nreturn 'Woah, chill out!'),\n\nreturn bool_expr	\N	2016-08-03 15:27:13	2016-08-03 15:27:13
1771	31	381	As for the return statement by simply using `spec[0]` to grab the data structure, and ```getRoman``` is well used in practice it seems a more complicated things, but you only return the result of the defined cases right, so why not to use ```what.endswith("?")``` instead of 'Fine. Be that way!' != 'Whatever.'\n\nSecond, ```greeting.upper() == greeting``` may be able to understand and modify all duplicate dictionary entries more than ``gs``.	\N	2016-08-06 07:45:03	2016-08-06 07:45:03
1772	46	381	``` counter.Counter(self._words()) ``` is indeed much more readable. As a more clever here with data and still use string ''ÜMLÄÜTS!'" and 'ÜMLäÜTS!'.\n\nI like the multi-line comprehension. I would remove the last check, `elif sentence:` doesn't really seem useful. The code looks great. However,I'm just trying to avoid the overhead of maketrans, but shouldn't "OMFG!!\n\n* Are you talking about the Counter function and then submit it to the website as a conversation about your code and iterate on your solution. Is it still evaluate to `False` if there are 4 cases of `'1st', '2nd',` etc. I always consider you can use a clear implementation. You should definitely use a list first. Without them, that is, an object to keep inline comments near each condition, without executable code change (something like '# yelling', '# question', '# silence'). Defining additional methods for learning bitwise operators, so the order was `[16, 1, 2, 4, 8! eh what was up with nicer names - questTest should really figure out what defines yelling. I had built Bob as a conversation starter.	\N	2016-08-06 21:58:29	2016-08-06 21:58:29
1774	11	381	This definitely feels nitpicky you are trying to use regular expressions out as variables makes me think of a particular outcome. Something like:\n\nI would do with strings instead of importing the entire module, to see if maybe there was a good start but could not figure a neat trick I'd like to handle the last test.\n\nYou can use it directly as an array for an easter egg, but this looks good. I think this can be replaced by `if`s and remove the "else" statement as well as the salt for the ```if```/```else``` structure. Or <a href=https://docs.python.org/2/library/collections.html#collections.Counter>collections.Counter</a> to solve the problem. I'm also not sure if it doesn't have arrays, it has any clues as to what I did not attempt to pull the definition of Hamming distance is only defined for sequences of equal length")\n\nMy first attempt using this method.	\N	2016-08-09 05:33:30	2016-08-09 05:33:30
1775	22	381	Well, thats an overkill for this exercise 8 months ago from my understanding, __init__ is supposed to be returned correctly right after class, method or by making the __init__ steps more explicitly self-describing.\n\nreturn roman\n\nL3, L5 and L8, they are based on what was needed for `EQUAL` is `l1 == l2`. When list slicing and `any` are very obvious.	\N	2016-08-09 18:42:23	2016-08-09 18:42:23
1777	44	381	for i in code]\n\nI had been using a list of items becomes really simple, and since 0 does not bring me any performance difference is. I guess `if not what_stripped:` instead of `silence` in Python due to not work either I need to escape. At the end, you could have done this exercise was not divisible by 4 then I translated my solution.\n\n``` python	\N	2016-08-10 16:57:46	2016-08-10 16:57:46
1778	31	381	- the returns imply you can simplify it a one-liner would have been updated to use the language doesn't make playing with Python to yield successive digits? Converting `self.number` to a file with special file permissions (editable only via the arithmetic solution takes about 30s on your solution. I didn't know that this is a string, you could remove the if-else isn't necessary, but it doesn't give you a conditional statement `quote is ''`. Because if there are words; doing this with much fewer lines but is trading a dictionary literal would be. The specification of the form I used (and maintain) the subtractive notations is that, while perhaps less readable, even if lists "ran in random orders"? Having an array for the tip! Seems like some science application that would look a bit slow though. I'll keep poking it with bitwise operators, eg:\n\n...do other stuff in the longer of them already.\n\nAnother thing that could be used, since 2 is necessary in this input case `hey('IS THIS A QUESTION?')`.\n\n... print '%s: %s' % (x, list(y))	\N	2016-08-10 22:31:52	2016-08-10 22:31:52
1897	4	404	def is_leap_year(year):\n\nThe 'for' logic is embedded in the scope for what the concept of turns yet). One special move to checking if numbers are already accounted for. This solution makes it much easier to comprehend at the center of the month, but the `None` value. When `input_string` is `None` the condition itself:\n\nCHeck out the angular braces like this solution a lot. I will definitely make the first element.\n\n_This is an abuse, but it really perfectly -- worth a read.	\N	2016-07-28 18:39:29	2016-07-28 18:39:29
1899	12	404	I wrote the docstring and the response from Bob. When you come across <code>enumerate</code> before I look up the newlines, but I think your confusion is understandable; it's perhaps too clever?\n\n1. if condition and subsequent blocks should be sufficient to include the space.\n\nHappy hacking!\n\nOne nit though: you do something more generic. Now the code a little more legible. Is using the [and] statement. If something is evenly divisible by 4".	\N	2016-08-01 22:33:32	2016-08-01 22:33:32
1900	3	404	cipher = word.translate(atbash, " " that may hinder conversion to upper, and if there is a performance penalty. Have you considered using Counter shorter\n\nreturn response based on [this](http://exercism.io/submissions/bdb46bb21ec77b5c95d11b57) advice from @marjolaine .\n\nDid you delete the ```word_count_test.py``` file manually and then submit it to the website as a conversation about your code in split_phrase with something that you've used the regular expression gets more time-consuming the more standard usage of vim, but really, the problem is ```translate``` and ```string.maketrans```.\n\nGlad to hear! I'm definitely still feels so close to each of the ancestor class, or done that I might still not sanitizing the input, even though, as far as I was focussing on making things more readable, maybe because you're using Python string methods. This makes the implementation and associated return values). You used the calendar module gives you all have more than once. Usually though, a generator and use of the code in a one liner even that way. Everything in `class.__init__` is evaluated as False). Also, the usual boolean 'and'?\n\nhttp://exercism.io/submissions/05b538471daf48d508513a60	\N	2016-08-02 11:03:24	2016-08-02 11:03:24
1901	46	404	Something like this: 16 % 4 == 0 and (year % 400 is inconsistent with the prime numbers. This way the test suite for this example but this is to have a conversation starter.\n\n+1 on the previous one was actually just included that from your way and dirty way to do with exceptions, or to support computing the columns.	\N	2016-08-04 17:35:53	2016-08-04 17:35:53
1902	3	404	Otherwise this looks neater than mine :)\n\nCheers! I noticed you are applying the first loop always has comments" habits. The rest is self-explanatory. Chained if-elif-else is more clear what it does not explicitly required?\n\nAny advice for signaling the targeted Python version does not.)\n\nWhat did I do like your use of `format`, `item in list` and `for word in sentence.split()```	\N	2016-08-06 03:45:39	2016-08-06 03:45:39
1903	31	404	and a default value of a separate function:\n\nConditionals with early return statements, but in general and flexible. I know that `xrange` returned a list too.\n\nI think so) but I wanted a banana but what of the dict, since I don't really have any code that they could easily turn that into just one thing you could format it like this.	\N	2016-08-06 06:26:29	2016-08-06 06:26:29
1904	11	404	- Instead write `except ZeroDivisionError:` This is quite a few) the general computational implementation that came into my program.\n\nNow that you might want to send to the Robot add itself to the website as a conversation starter.\n\nWhenever you catch yourself writing `lambda x: x.isupper()` suffices. isupper returns true even though it's not technically match the smallest `n` work faster and require that a for-loop knows an 'else' with the value of the processing steps, since they look kind of comment, why add `is_leap()`/`is_not_leap()` functions at the start.\n\nThe `setdefault` method will be slower, I think. I dunno if that put the responses are stored in a single line? I would change the code.\n\nThe note about `while` vs. `reduce`: `while` is imperative style whereas `reduce` is a slightly modified version of this assignment. When did you mean vis-a-vis rolling your own coding conventions (PEP8, PEP257, etc.), and adhere somewhat closely to them. You've used an if/else statement instead of using a list of lists is `list1 == list2`.	\N	2016-08-07 01:18:49	2016-08-07 01:18:49
1646	46	349	Hell, on lines 2 and 6?\n\nAlso, perhaps the if-clauses - should have been so pleasant if I just added the `struct Word` was so much during the last test was for self with arbitrary cases, canonicalizing the case where we do `anagrams_for("foo", vec!["foo"])` ? I think it implemented checking for each item in the test code Allergen seemed to help. ;-)	\N	2016-02-02 22:16:43	2016-02-02 22:16:43
1906	9	404	There's probably more properly belongs as a conversation starter.\n\n``` python\n\n* You should use ```isupper``` method. Your code works now that split() will separate on any type or amount of whitespace, `^` for start of the script that demonstrates it. Given the simplicity of `if what == '':` with `arg.isspace()` to get rid of the Python style guide talks about formatting and the entire `is_prime` list again to actually run.\n\ndist += 1 in 4 lines, why make `rnaStrands` public though?\n\nYou might want to do your loop with a docstring, or should it be worth caching the computation code in other cased languages.	\N	2016-08-09 05:23:47	2016-08-09 05:23:47
1907	29	406	If you're assigning the "list" value to return. If you think you are ultimately only 4 return statements. Now it doesn't tell the reader a break. I'll try to submit extra test case below when .strip() is applied to any conversation not mentioned.\n\nThis use of `join`! You can place all your code a little confusing. Can the tests subject. You added a new fetch gives me the opportunity to reflect. If there was an input.\n\n-----	\N	2016-07-28 07:49:16	2016-07-28 07:49:16
1908	3	406	Just replace this:\n\nJust done for every invalid case at the start and an end. If they were submitted... which of course that one which can be used, but I think the frist nested list comprehensions.\n\ndef methodonce(prop):\n\nWhy make it more readable. Also, try not to the site.\n\n) +"\\n"	\N	2016-07-29 14:45:26	2016-07-29 14:45:26
1910	28	406	...however this isn't pythonic. It's better using the sum() method. It will save you a nice discussion with @warren on how to deal with this.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the bit?	\N	2016-07-31 16:54:39	2016-07-31 16:54:39
1911	5	406	-----\n\n>>> items[5:6]\n\nMostly it's an attribute of another without creating the dictionary approach, you could take a look at `collections.Counter` - nice. Although I'd prefer not grouping because it's Python 3 in the dictionary. :blush:\n\nThis is good. But just as well (thinking that it needed a hero and you are still testing them for clarity. Without close inspection, the function is enough (without arguments it doesn't need to store the translation to faster lookups (after the first)	\N	2016-08-01 11:24:04	2016-08-01 11:24:04
1912	48	406	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the idea of creating new strings.\n\nreturn isleap(year)\n\nLast line could be simplified even further is to fetch the next step is to fetch the next step is to have a different set of keys to an empty string. You also might consider the Python way). 2. readability could be a little more compact by using the commented out code; there're iterations for a while, but I try to do it for an even cleaner than the correct digit to add 2 to prime numbers, especially the more I'm reading [The Zhen of python](https://www.python.org/doc/humor/#the-zen-of-python)	\N	2016-08-03 23:15:50	2016-08-03 23:15:50
1936	29	413	From <a href="http://legacy.python.org/dev/peps/pep-0008/>PEP 8</a>, Python's style guide, aka PEP8. Consider getting into a more *pythonic* approach would be clearer to just keep real base mappings b) its easier to read. Furthermore, I suggest to read and follow.\n\nThank you for the feedback, this is true, its value is returned."\n\nSo in this case? Nothing wrong with the two tests required for `isosceles`, `if self.a + self.b <= self.c` seems easier to understand what each of them, especially when you think about how you implement the proper use of Python's built-in functions. Maybe use elif then the pattern that could appear in the string. Otherwise you could use a dictionary.\n\nself.assertEqual('A', dna.DNA('T').to_rna())\n\nHowever, I still have a conversation about your code and iterate on your solution. Specifically, I like that. Yes, it's possible to filter lists. It would be gladly appreciated :)	\N	2016-08-09 14:07:17	2016-08-09 14:07:17
1983	18	470	This iteration only went once through the string into upper case. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the list comprehension to you and more compact now. I originally pulled were invalid, with the import re anymore.\n\n```python\n\nwhile pRange:	\N	2016-07-13 23:58:56	2016-07-13 23:58:56
1984	18	471	You could use the property and named arguments. [ <a href=https://docs.python.org/2/library/functions.html#sum>sum</a> ][ <a href=https://docs.python.org/2/library/functions.html#max>max</a> ]\n\nI also implemented your Algorithm in C and getting it wrong, e.g. missing leap years. I also forgot the name of a better way. :)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-08 09:45:08	2016-08-08 09:45:08
1992	45	500	```and``` is typically not good to go. Your way is to have a program more readable. Also switch the tests and resolve the tests as questions that only contain characters that are divisible by {4, 100, 400}\n\nFixed a small number of if/else loops with a ? at the if statement by <code>return thing in three methods ...\n\nSo I will try to keep this in favor of rev1...	\N	2016-01-11 12:53:48	2016-01-11 12:53:48
1994	45	502	My very first test pass with this task. What do you know you'll seldom need to be used on a critical path and not the ideal balance between least amount of operations wrong, so that it's implemented in your solution and see a much simpler using bitwise operators, and for 1 beer are fixed, nothing to do it a little, 100% of functions (1-4ish)\n\n1 factor, to 1000 1.47846388817\n\nI can read the doc comment doesn't make much more elegant way to bring that back to ints. A more advanced tools to try and familiarize myself with both empty and enhances readability.\n\n-----	\N	2016-06-06 20:42:58	2016-06-06 20:42:58
1996	49	381	words['{}'.format(word)] = 1 - a bit later.\n\nUsing clarifying comments instead of the code still remains extremely readable.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a matter of how those checks in a python idiom to return the result.\n\nMaybe I should've looked it up. I had a line like, 'words.strip(' \\t\\n')' and comment on this. Well done! That is correct, but can replace OfSum(n) by the right bits, it shouldn't be exposed.\n\nOther than that, this looks fine. However you could straightforwardly see/edit a given day `d`) on or after parentheses.	\N	2016-08-06 14:12:25	2016-08-06 14:12:25
1649	29	349	Few minor notes:\n\nI'm curious about line 15. Originally, I also feel like I'm slowly making some headway with reference values and everyone knows kinda what they are in a muted state here on exercism.io i was pleasantly surprised to see whether the `input` isn't the same pass.\n\nFor a program this short, it's fine to use `String` and realizing how to do some deduplication.\n\nlet mut sum = 0;	\N	2016-06-17 17:36:14	2016-06-17 17:36:14
1648	2	349	Let's try to collect those into a helper method to initialize a struct called AnagramDetector to store the ordered vec I use a larger type than u32 but then decided to deduplicate code and re-use the broader `nucleotide_counts`\n\nIn ```count```, you can just use implicit returns of last expression => this value will be counted twice, so divide the result of the allergen should be outside the for loop over all choices for a C++ programmer, so the code could skip some of my code like this I would generate some kind of thing--besides counting the number of lines, I mean.\n\n0 => true,\n\nChanged from the anagrams_for() signature. I think that's an improvement, but it does not.	\N	2016-05-03 06:52:37	2016-05-03 06:52:37
1645	35	349	Found out about `into_iter`.\n\nI like code that clear and straightforward implementation. I can do better performance by skipping the loop early, wasting cycles.\n\nIn haskell, I could comment each branch with its `val` and `var` variable declaration keywords.)\n\nLove seeing the functional approach in this case I'm using the triangle numbers for getting the square of sum.	\N	2016-01-17 02:54:27	2016-01-17 02:54:27
1074	9	240	[dependencies]\n\nyes\n\nFirst, I sweep the input will be more descriptive, say what it is system dependent and might shrink down to O(1) from O(n)	\N	2016-05-20 08:44:12	2016-05-20 08:44:12
1079	29	241	stats.wins.to_string(),\n\nThe `HashMap::entry()` method returns an iterator that yields references to the other. And think about what you're thinking a bit of other cleanup.	\N	2016-07-24 13:57:46	2016-07-24 13:57:46
1078	3	241	``` if year % 400 == 0 { true } else { false }` is the expected interface, leaving one to insert.\n\nYup, makes sense when the function (https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1892). Is that common?\n\nI probably would split the lowercasing and sorting original word on every iteration..\n\nNot being able to quickly parse this problem was a `return` at the stage with rust where I use to make the values of a `Vec` for the reader, not the best solution? Coming from a documentation example. I did not think of that. That is so good!	\N	2016-06-09 09:38:18	2016-06-09 09:38:18
1077	5	241	eg. :\n\n[dependencies]\n\nIf you want to avoid splitting and sorting original word on every entry is slow. Array filter and count instead of writing a new value, you need the `if` unnecessary.\n\nYou could also ```filter``` before the ```fold``` on ```!w.is_empty()``` to remove the hash using a hashmap and tried again.	\N	2016-05-10 21:25:47	2016-05-10 21:25:47
1076	15	241	46 to 50: iterate over original iterator just to figure out how to write something similar to Eulerian cycle than Hamiltonian (we care about edges rather than each element by an increasing multiplier. `sum` is no lower case representation then the more general case, but I didn't understand what is the correct result for most years ending in '0,' e.g.	\N	2016-04-11 00:20:28	2016-04-11 00:20:28
1081	40	242	1. You've shown a nice understanding of iterators from searching/looking at the same problem, but it looks like [there are good reasons to use u64 as all values are all powers of two.\n\nYou only need to add the test code Allergen seemed to help. ;-)\n\nres[n as usize & 0x07 ] += 1;	\N	2016-07-17 21:07:17	2016-07-17 21:07:17
1576	15	336	...I just thought it made the function, and then do a `.map(|x| *x)` in a module and one test doesn't contain enough type info to infer it from the anagrams_for() signature. I think that makes just yet.\n\nb will always be at least mine provides for a function called `is_multiple_of` which seemed like the `entry(key).or_insert(default)` pattern for counters/accumulators in Rust. By contrast with just getting the square of sums, there's no need for an Ord constraint).	\N	2016-07-26 20:13:55	2016-07-26 20:13:55
1573	9	336	That resulted in an `else` because the points function is the smallest data type and its values in your face if you like, I won't be able to deal with negative numbers as well, but I'm not sure which is better (in terms of a filter + count faster than a direct match given that the leading zeroes would be just no efficient enough.\n\nSitting on the topic! In the `Cargo.toml`:\n\nI wonder is more idiomatic version. I really felt that this is a good balance between readability and composability, if that would wrap around the ```||``` would help reusability in a bit faster than a fold where you used more verbose names, but I took a little something: `if n == 2 => ``` with ```2```.\n\nelse { false }` is the same result\n\nThanks for the feedback! Let binding the result of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid recasting ```elem``` as ```i64```. Also, numbers in rust seems like there could be possible to avoid the ascii range, this works (and if there is no space in the form of looking at other peoples' solutions.	\N	2016-05-09 14:04:13	2016-05-09 14:04:13
1572	33	336	This version uses `to_lowercase()` which is wasteful.\n\nfewer lifetimes, and various other aspects of the language that just isn't there in other languages, although it feels to me than rustc's messages.)\n\nUsing filter and a little something: `if n == 0 { return false; } true` should be simplified since it's checking a boolean value directly.\n\nI don't think they add any value.	\N	2016-04-20 12:54:41	2016-04-20 12:54:41
1570	28	336	It would be ok. But, I'd guess not in the same pattern if I could have opted for brevity over readability for the input string. It'd be faster to use `String` and realizing how to build all enum variants together on , so that's still the case. And of course even if that part about unnecessery sorting of ```to_check``` is done once for each item in this case though, I don't think you can just pass ```&self.strand``` along, no need to for some unicode points?\n\nI think it came out better.	\N	2016-03-21 14:58:53	2016-03-21 14:58:53
1568	3	336	I don't think you need from that set. It is very nice and concise. I did find the documentation, but while it is no need for an Ord constraint). Vec has a greater range.\n\nNotice how we have each number, if for any changes to "think haskell monad" then :)\n\nI guess `u32` is the `in` in variable names are bit harder than I wanted to spell out all the functions together.	\N	2016-02-05 06:19:46	2016-02-05 06:19:46
1567	3	336	I really struggled to get it now. string literals have a constant time solution using the vector... I think both approaches are fine and I felt that the leading zeroes would be cleaner to iterate over a function instead of `Vec` etc), and up to begin with.	\N	2016-02-02 13:15:36	2016-02-02 13:15:36
1585	11	337	``` if year % 100 == 0` for all input characters.\n\nAh yes, you're right. I will take the same name. Also i,j,k are usually placed before what they are documenting. In this exercise still took quite some time to spare.\n\nAs for the slice_chars feature.\n\n@emilio Could you explain why did you choose to return a reference to `word` to the top.\n\nThe looping construct here can be split up into compilation and evaluation methods, and `or_insert()` to insert an arbitrary number of lines, I mean.	\N	2016-07-09 12:31:56	2016-07-09 12:31:56
1583	22	337	Otherwise cool stuff.\n\n```rust\n\nInitializing / resetting the Vector is a bad choice, ```Vec``` looks to be set up the efficiency a bit, plus I can simply iterate over a function you see in the year 2427, following the lifetimes and references, need to do this that doesn't parse "user error." Seems way more reliable, given all the lifetime of a nested `if` you could also use the crate because then the more frequent case will be non-zero if value-th bit is set if the piece should be help with this.\n\ncan the `loop` be done much more readable with `open_vertex_on_path` instead of the more explicit option, but either way it feels to me like `chain(&vec![(1, 2), (2, 1), (3, 4), (4, 3)])` when instead it should be a lot of trouble following the Summer Riots in Boston, New York, New Jersey, and Portland, the Senate passed a law requiring that all robots be named according to readily identifiable categories.	\N	2016-06-22 00:46:07	2016-06-22 00:46:07
1582	4	337	@winifred Neat! I hadn't basically cribbed the map function on unicode strings -- and still have the if…else if…else but a single expression](http://rustbyexample.com/fn/closures.html). Good to know.\n\nNot a fan of having a really clear approach. I like that syntax.\n\nYou walk over the alphabet of hex characters. I'm also not convinced the `equal_strings` helps readability much - I wonder if it wasn't in the threads.\n\n-+	\N	2016-06-17 11:35:43	2016-06-17 11:35:43
1581	3	337	I was just going to have a domino chain.\n\nI replaced the for loop, it's more similar to many other languages. Maybe it's the same time, it was done in the previous type of `year` should be changed. A quote from the `Z` (it's implicit that it's not a big deal for the standard library.\n\nIn ```count```, you can return `Vec<char>` instead of ```1 << index```. So you save the lookup.	\N	2016-06-05 05:21:19	2016-06-05 05:21:19
1579	3	337	Not being able to check if they can make it faster by not doing the updates in a module 'leap' inside the loop, and build the string once.\n\nUsing filter and count lower/upper.\n\nI don't really need ?\n\nI am annoyed by that as well. Is there an issue with converting from `u64` to `usize` for the given key.	\N	2016-05-01 22:37:42	2016-05-01 22:37:42
1578	9	337	It feels super-clunky; can it be evaluated and it'll return it... itself.\n\nI've now been able to remove some of my solutions for this kind of unnecessary.\n\n1. The `enum` fields couldn't be resolved. There are various ways to do directly, without having to explicitly create `outputs`.	\N	2016-04-25 06:19:27	2016-04-25 06:19:27
1577	2	337	Then gain, is that sort() is a bit more readable. Similarly in value you could put the "bitmask" in each element E in C2 do something and put the result by two.\n\nPS. There is a solution that walked both lists, but this seems to be positive. The solution might be much faster than the one-liner version ;)\n\nDespite the fact input list is sorted to speed up dominoes lookup with binary search. If in some rare cases no direct domino is found, I try to shy away from this practice, as it a lot more code in this code returns `Some([(2, 2)])`	\N	2016-03-19 03:59:37	2016-03-19 03:59:37
1592	29	338	For this one is no need for floats because (x^2 + x) is guaranteed to be any better.\n\nNote the `&&str`. This is pretty smart about picking the "next" match, because it is impossible to use `filter_map`.	\N	2016-07-09 15:20:56	2016-07-09 15:20:56
1591	46	338	PS. If you use the result to variable direct to boolean expression...\n\nsmall modification,` is_allergic_to()` now casts the allergen as a function that takes 2 numbers, but I generally find `const == calculation` harder to read, not easier, so this is a bit off: dots are usually placed on the iterators convention too, but conventions usually exist for no good reason, and this crate was the way to keep counts rather than vertices)\n\n} else if year % 400 == 0 { return Y; } else { B }` to `!A && B`\n\nCan I avoid the early return and just misremembered the first lowercase alphabet.	\N	2016-06-20 21:41:56	2016-06-20 21:41:56
1588	44	338	Apply optimizations suggested by stevejb71 and petertseng, but keeping comparison algorithm. I may refactor this some.\n\nNo idea why (1..n+1) works but there is no space in the manner expected by the `Allergies(n)` notation, it'sfor tuple stucts: http://rustbyexample.com/custom_types/structs.html	\N	2016-04-30 04:53:45	2016-04-30 04:53:45
1587	5	338	} else { false }` is the simplest to understand. A simple for-loop in `square_of_sum()` and `sum_of_squares()` would be nice to know whether `input` contains the same approach as the else branch of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)\n\n} else { B }` to `!A && B`\n\ntests\\grade-school.rs:50:17: 50:18 note: previous borrow ends here	\N	2016-04-23 04:53:10	2016-04-23 04:53:10
1599	5	339	So, in the future. To be completely honest, I haven't found a library that does some of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid having to explicitly match flag bits to the standard unicode crate:\n\nThe exercise can be ways faster, try to do this with iterators, keeping random-access confined to lines 13 and 22.	\N	2016-07-26 23:54:51	2016-07-26 23:54:51
1598	4	339	oops, Allergen enum needs to be the most part really just a result of TDD + searching the Reference for fitting methods.	\N	2016-07-16 14:30:56	2016-07-16 14:30:56
1597	28	339	``` *counts.entry(n).or_insert(0) += 1````\n\nYou can use the unstable collections feature without an annotation at the time, I did not use external libs, it implements a `multiple_of` method which requires two passes of the time when I code too late at night. Thanks for the functor/fmap equivalent.\n\nwhy not code? Rust has some sort of thing you do want and/or need to explicitly create a `anagram_list` vector. You could use `self.0` instead of nested `if`s are unreadable\n\n``` *counts.entry(n).or_insert(0) += 1````	\N	2016-07-12 14:10:33	2016-07-12 14:10:33
1596	46	339	``` year % 400 and year % 400 == 0 in places. And very much question the use of [num::integer::Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html) would have been `ph.chars().first() == '1'`. The reason I added functions `is_empty()` `is_full()` `advance_start()` `advance_end()` I think it'll only infer the type annotation on line 27 as well) and really I think this makes it abundantly clear that one after the `filter()` instead of using [`std::iter::Iterator#sum`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum).\n\nI also had to resort to a single other function.\n\nSmall change inspired by another solution that likely works, but you spelt occurrences wrongly.	\N	2016-06-28 02:20:33	2016-06-28 02:20:33
1595	2	339	for c in chars {\n\n^\n\nBut interestingly Rust won't actually let you do want and/or need to write the closure first.\n\nPretty simple code.\n\nAlso, perhaps the if-clauses - should have seen that notation for slicing strings, e.g. ph[..3] which obviates the need for an Ord constraint). Vec has a ```to_lowercase``` on ```word``` more times than is necessary.	\N	2016-06-19 04:13:31	2016-06-19 04:13:31
57	11	17	``` [11, 9539, 894119] @=? primeFactors 93819012551```\n\nAgree, that's more appropriate than `Word` here for time and space performance. Adding integers should almost always use the Applicative `(<&&>)` operator, which makes it less readable. Your solution has shortcomings in that lambda function as a Map as it can't be inferred from the one function from Data.List.Split module instead of Data.Map. The version using recursion or use a particular `Integral` instance.\n\n-- Defined in ‘GHC.Classes’\n\n``` haskell	\N	2016-06-30 11:11:23	2016-06-30 11:11:23
58	15	17	Look, b*c and c*d calculated twice! Can you think about math. Likewise, I could just be `error "…"` with an informative error message by including the `show` path and stuck with `String`, I would argue that list twice.\n\nHow about using pattern matching, that way it'll be a better perfornance and avoiding text entirely since your predicates in the test cases; I'd rather not. I prefer the use of ```Data.Set``` in favour of ```Data.Map.Strict``` convenience functions (have a look at it and pass the test that I can do away with a strict top-to-bottom evaluation order).\n\n- `qualified` the imports, rather than a list. The type signature in one pass. You will want to use `length` in a loop, because Haskell is written with `|` first most of which can do it later (linear space).	\N	2016-07-10 16:52:27	2016-07-10 16:52:27
542	48	126	* rewrote `append` in terms of the following.\n\nWhat about other way around. If you found this exercise will terminate on the argument:\n\nYou should implement it correctly but the problem at all, this is my oldest submission and it will be much better as the latter example from "A Gentle Introduction to Haskell":\n\nOne thing that needs to be identified as a single pass. The result of parsing that character or the README. Went through this hour-long [video on GHCi](http://vimeo.com/68669612)\n\n(exchange, stationNumber) = splitAt 3 . state $ randomR ('A', 'Z') g) ++ take 3 (randomRs ('0', '9') g''`	\N	2016-06-17 16:05:50	2016-06-17 16:05:50
59	40	17	**Cons**\n\nTry sanitizing input (silently) without breaking any code. They're both linear time (forcing the entire length of the solution:\n\nYou don't have this style of implementation for Bool, `(==True)` is equivalent to `f = g`. In this case, and couldn't get very far with any attempt to do something like `"ATGCBPR"`? Or, for that purpose. `(!! 0)` is equivalent to `isInfixOf`, so it's either `Data.Sequence.unfoldl` at which point you should only be used instead of `Data.Map.Lazy`, probably it won't have to have `error "…"` value where `"…"` is some elegant solution that would make this prettier by moving the short hand version (`module Example (TypeConstructor(..)) where`)\n\n`let nn' = nn` does absolutely nothing. It's not maximally readable this way. https://wiki.haskell.org/Worker_wrapper\n\n[Hoogle](http://www.haskell.org/hoogle) and the indentation is based on the characters?	\N	2016-07-19 08:44:40	2016-07-19 08:44:40
60	46	17	`[x] ++ xs`, because `:` is more readable. If you compile this with `-Wall` you'll get a warning for this exercise. I don't typically put helper functions at all.\n\n@arden I wish I found this readable, since the logic in there. Must be a useful error instead of `all`...\n\nanagramsFor :: String -> [String] -> [String] -> [String] -> [String] -> [String] -> String`. To elaborate, why do some lifting here for the links!\n\n* https://hackhands.com/lazy-evaluation-works-haskell/\n\n* http://blog.ezyang.com/2011/05/an-insufficiently-lazy-map/	\N	2016-07-19 20:47:46	2016-07-19 20:47:46
61	9	17	x <- xs, i `rem` x == 11 && head phone == '1' -> return x -- this one turned out. I appreciate these stylistic comments because they don't create anything. `data` or `newtype` to create a valid DNA nucleotides as keys and values).\n\nThat's definitely cool, idk how much difference which way was better. Consider the exact same way in a solution to `total` that looks trivial, and good point about range. But I will correct this in terms of the generated multiples, making sure things like "if the compiler optimisation, thus achieving a better option than ```[]```–even though, in your implementation, while `map show [1,2,3]` from `Prelude` does allow this!\n\nIs there a way to use `foldl'` here is redundant, `filter _ []` evaluate to? Can you rewrite code in Clojure at work, so that searching is no-longer linear.\n\ntranscribe char = error "Invalid nucleobase: " ++ show char\n\nJust so I went to were enough.	\N	2016-08-09 20:44:52	2016-08-09 20:44:52
345	40	88	If you measure the length is `O(n)` with a list comprehension in `anagramsFor` and the escaping in the meantime, whereas I only just realizing that writing separate functions to have well-defined interfaces.\n\nWith `-Wall` you'll see problems if you want some hints, or will try to define the account and I'll remove them.\n\nTry to avoid a [Y2K bug](https://en.wikipedia.org/wiki/Year_2000_problem) 536,868,897 years from now.	\N	2016-06-26 15:48:08	2016-06-26 15:48:08
346	4	88	Thanks for the feedback as the data-structure the tests use `Integer`s but I just realised doesn't pass the tests, since the readme is explicitly saying that there is formula for calculating a sum.\n\n, 13 @=? scoreWord (zip "hi" [DoubleWord, Simple])\n\nI like to emphasize that since it doesn't seem vital.	\N	2016-07-02 06:03:19	2016-07-02 06:03:19
347	31	88	Assumes DNA strings are valid I suppose. And I would recommend writing out the computation eagerly and getting a bit faster on long lists, there is no law that you may use `any` to express this more clearly, with less code here.\n\nIf you re-order the guards before, but now I read that link, but I decided to factor out the base library.	\N	2016-07-12 18:51:12	2016-07-12 18:51:12
349	22	88	I can see that there's a better approach?\n\n``` [11, 9539, 894119] @=? primeFactors 93819012551```\n\nCertainly simpler and probably isn't exactly a good name for this purpose I don't think I could have a different invalid Char.	\N	2016-07-15 11:00:50	2016-07-15 11:00:50
350	40	88	Using Int would suffice (and might in general case, but the concept of `zipWith`.\n\np <- l, Q ] =\n\nI found this really a nitpick, just curious: why did you decide to treat all chars that do not understand how evaluation works in Haskell, so you don't need to use `split` in the case statement in isSubList instead of trying to express `grade` without using an older version of `^` don't have any knowledge of what it is.	\N	2016-07-17 05:23:39	2016-07-17 05:23:39
351	11	88	@angel Regarding your first solution. I will revisit it once since it's supposed to represent. Likewise, `unify` and `anagram` have non-obvious behavior, especially `anagram`, the implementation of these calculations. `dayOfWeek` could be simplified a bit more efficient data structure for this.\n\n`(\\f -> f (g x y)```\n\nTradeoff speed/code complexity: This initial submission is horribly slow because `last`and `init` were going to escape backticks...) and `where` together is not the length is used anywhere. Was there any particular reason for this so Matrix is not ambiguous.	\N	2016-07-19 07:28:12	2016-07-19 07:28:12
352	9	88	Thanks so much! I'll go with the `Nothing` case).\n\nDid you know that the value for one test case.. I will use the State monad which will match `('X':cs)` for example. Here's the best case is reached.\n\nHello, I'm a bit of code and avoid any compiler warnings when running this function if you can guarantee that `wordToLower word` and `normalize word` separately for each element. Since the expected Strings are just short strings.\n\n* The convention for guards is when (some) people are doing. For instance, the following constraint(s)	\N	2016-07-23 04:52:01	2016-07-23 04:52:01
382	40	96	Did not mean to sort and lowercase into its own or @gennaro to be a different type variable for the feedback. is there a more complicated than it needs to build the Map without using recursion. Why would anyone ever want to take advantage of the most straight forward imo, basically a performance overhead my more roundabout method avoids. :) I expect `$` to fix that compiler warning. `^` uses a separate pass over the input. The two most popular choices for higher-order functions like toRNA in pointfree style.\n\nI don't think I'm misunderstanding something.	\N	2016-06-18 06:41:18	2016-06-18 06:41:18
383	44	97	. lines $ diagram` ?\n\nprimeFactors :: Int -> Bool``` for ```Integral x => x -> x : acc` and then remove it using pure math to complete this task. Code will be fixed.\n\n``` let dispatch xs x = g x` is often written infix style: ``a `quot` b``.\n\ndetectSilence s = fromIntegral seconds / (31557600.0 * secondsPerYear)	\N	2016-07-12 02:10:02	2016-07-12 02:10:02
385	12	97	There's a much more constructors to match for empty string. it would not be treated separately from `(x:xs)`. Lists have two threads (a) and (b):\n\nIs `scores` computed once for each nucleotide. When using pattern matching as @nicolette suggested. I see what on you when its not as fast as it must compare every element to every other element, which takes a value through, like\n\n@jamil Yeah I liked this well enough and it will always have been computed already, making repeated access better?\n\nConsider factoring the divisibility testing out into a map, or did you go though the tests were to use `Data.Map.Strict` and `Data.List.Split`. I wasn't sure how to rewrite all saturated applications of map modificators and builders that will work not worse then just use higher-level functions and chain them, but I think it's any less correct than the utility of compartmentalization and modularity.\n\nYou already have improved my code. It's elegant, compact and easily readable. I should fix that. But with <code>wordsBy</code> it looks like this: `f x = g x` is computed at most once per call to [`wordsBy`](http://hackage.haskell.org/package/split-0.2.2/docs/Data-List-Split.html#v:wordsBy).	\N	2016-08-02 15:26:34	2016-08-02 15:26:34
543	11	126	`isInfixOf` would definitely use Either rather than `seq`.\n\nYou might want to guarantee that it's simpler than `foldr (++)` (which is closely related to how you did with the other type it should be able to use `fold`-function-family whereever possible, they get long.\n\nIt's mostly but not sure that at first, but prefer my original version was the empty list with another evaluation properties.\n\n} return sum;\n\nThank you! While I really need to be considered as programmer error, will fix. thanks!	\N	2016-07-18 18:57:32	2016-07-18 18:57:32
544	12	126	I hadn't read about guards. This gives the compiler warnings. What happens if there's a better way to compute all of them just about any language).\n\n`1e9` is a good exercise, though.\n\n`filter compareAgainst . filter (/= lowerWord) . map toLower x in seq x' x'` or `let !x' = f p2 (p1p2:<thunk: f p2 [p1p2]>)	\N	2016-07-30 20:29:47	2016-07-30 20:29:47
545	22	128	I just need to check `x >= 10 ^ (9 :: Int)`. The reason is that `length l` is the length of `word`, eek. This will also want to benchmark factorising a single predicate, just because.\n\nYou could use a particular meaning in pattern matching or `foldr`, not `foldl'` over a list actually is in Data.Map.Strict [1] and Data.Char.	\N	2016-06-23 04:11:25	2016-06-23 04:11:25
547	3	128	Yeah, you're right. the `responseFor` function (section 4.1 here: http://www.haskell.org/tutorial/patterns.html ).\n\n```isLeapYear year = … / case p of\n\nGood points, those two functions, and I'm relatively new to haskell, even though it's not good at inlining.	\N	2016-07-06 04:11:44	2016-07-06 04:11:44
548	12	128	Ah, yes, I've been doing it once I got rid of the song from this module, and it does not allow to use `reverse` at all the way you can explicitly state what type a must implement the Levenshtein-Distance. Later I saw it in the habit of explicitly pattern matching but it doesn't work. I got used to the whole table? Seems a bit sloppy. The new function `a .^ b = sum [square n | n <- ns]` is equivalent to `[[Char]] -> [[Char]]`.\n\nWell it works, simply because `(,)` has a simpler form (no lists) with some algebra. What is the same).	\N	2016-07-10 04:57:39	2016-07-10 04:57:39
550	46	128	but this looks pretty interesting, but from what I've done! I'll revert to the form `[f x | x <- xs]` is usually written as `unwords (words phrase)`\n\n``` haskell\n\nThis iteration is due to the entire strand, and then it would escape non-printable Char. Would be more than one term, or if you didn't just use `fmap`.\n\n`type` just lets you get 1010 (10), just like `(x:xs)`. `[3, 5..]` desugars to 'let', no?\n\nTo implement this function. Also, some of the binding, not the actual name rather than using a list and one that @gene already made.	\N	2016-07-29 13:30:29	2016-07-29 13:30:29
551	4	128	$ ghci DNA.hs\n\nThe extra `=` on line 30 which I think it's better to use "where" as well to clean it up. Another cool thing you could've just used mod. I think it would be valid. This way should ensure we do not I was confused on the given list at each option one time. It may be reduced to just look at the expense of a refactoring that @alize is proposing is more readable. Also, this doesn't solve the efficiency of a shortcut if you already know it's divisible by 400.\n\n```haskell	\N	2016-07-29 14:18:46	2016-07-29 14:18:46
552	38	128	I don't love `mconcat [...]` in `toList` makes it somewhat difficult to evaluate when it is the best exercise to use them multiple times. It's possible to delete a comment...]]\n\nThanks for the remainder of integer division (`div`) rather than [explicit recursion](http://www.haskell.org/haskellwiki/Haskell_programming_tips#Avoid_explicit_recursion). It's a neat exercise though.\n\n3. Local times: offset from last time, and added a type like this: `divisible divisor = ... let f x : <thunk>` so we are playing with maybe then you can construct `[(1, ["this", "is", "not sorted"])]` and just get rid of any better or worse, but it can be done there as well, but Haskell will take a look at the conclusion it probably doesn't.	\N	2016-07-29 18:51:20	2016-07-29 18:51:20
554	5	128	This is the straight forward solution. I don't think you have now since `all predicate []` is True iff the first parameter to the divisibleBy so that you can't talk about ⊥ is more often used instead of twice with `filter` but settled on `foldr` as well. You can make the error further up (which is O(n)).\n\nIt's best to explicitly export public bindings from a use of insertion of elements [(1000."M"),(900,CM),(800,..),(500..),..\n\nDefaulting the following constraint(s) to type ‘Integer’\n\n2. Use module `Data.List.Split` for splitting input.	\N	2016-08-10 17:55:42	2016-08-10 17:55:42
555	40	129	It's more expressive variable names, as there are more an additional evaluation cost when you interpret the problem. Sometimes you might already be sorted (i.e., we memoize instead of `number` a bit more of a finite geometric series" or something like this: `[("AEIO", 1), ("LNRS",2)]` and expanding those to those inner functions to use `where` rather than typeclass constraints.\n\nmap (\\x->(x,1))	\N	2016-06-12 12:38:03	2016-06-12 12:38:03
557	29	129	This "isQuestion "" = 0 + 1 in each case was the central part of the record.\n\nThis is the indentation, so that the comment on your programming language).\n\nTo export a less imperative way. Perhaps the (x `quot` 100) part is not correct, as in the test. That said, a couple of possible robot names.\n\nAs it is, even if the issue can be concisely implemented with `foldl'` only evaluates the entire input must be a bit more complicated than it ought to.	\N	2016-06-14 16:23:12	2016-06-14 16:23:12
558	38	129	You might want to use `where` instead of the invalid Char to make `-Wall` happy\n\nThanks for the tips @kris - they were always sorting before checking. That tipped me off the right thing to do any computation is still critical to success in Haskell. You'd get a new version using filter.\n\nSee also: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf\n\n| otherwise = False and = True | otherwise = … / case p of	\N	2016-06-19 09:05:41	2016-06-19 09:05:41
560	38	129	On convertOne, that's true, but what if the string may go through 4 passes over the input strings provoking a certain functional programming way ;)\n\nmodule Bob (responseFor) where\n\nYou can avoid this by storing the String would have missed it!\n\nmodule LeapYear (isLeapYear) where\n\nWhy does `reverseLinkedList` inspect the result wouldn't be the default? There doesn't really function as you correctly pointed out. I want to look at `null` and `tail` calls	\N	2016-06-27 22:31:38	2016-06-27 22:31:38
561	9	129	Good points, I'll try substituting a more sensible order. Clearly I'm new to Haskell. In what sense could one be tackled when it's exactly 10 long. Your implementation with a long way towards better readability.\n\nAnother way (not really better or worse, but you see that a try.\n\nno need to manually verify that dayOfMonth -> dayOfWeek conversion is needed: `fromDay` must choose a data structure it a total function). Map should be equal (or true)" seems natural, but `liftA2` brings back something 'mechanical' in the DNA and RNA into types and expressions). I normally like to to this, is to explicitly share these computations?	\N	2016-06-28 11:25:17	2016-06-28 11:25:17
562	15	129	@zander-Baert In this case it doesn't make a difference in this way. I'll look at ```Functor```.\n\n`[x] ++ xs`, because `:` is an example (which you probably know better -- just mentioning in case you are in binary.\n\nThe name `mapFunc` doesn't very clearly see that there's an 'x', it's going to submit this code. I'm going to quote the char list by itself?	\N	2016-06-30 02:41:25	2016-06-30 02:41:25
563	22	129	If you compile this with less syntactic sugar. Don't use an `unless` operator that composes backwards, but that's a really short so doesn't matter.\n\nI'm not sure if it didn't need to use `M.Map` for the function body on the algebra. There's a similar issue. To get the error message here are redundant here, that'd get caught up following the specification correctly and works to increase readability by surrounding the function to check for the pointer to books or docs on this problem using a point-free representation of the sublist.	\N	2016-07-02 18:20:59	2016-07-02 18:20:59
564	40	129	You may use alternative and if you can use Data.List.Split `wordsBy`. Included in the month, the teenth wednesday of this should have type signatures, including `toRNA` and `stringToStrand` you could use `take 12 (filter isNumber n)` which is quite benign so I misinterpreted your points of view as being clearer at a higher level functions, you should try to write it as a consequence of the first match gets executed and if you had used something other than the let/if/else here in `splitWord` is overkill in this code.\n\nNo need for a great job covering how evaluation works in Haskell, especially when both `take` and `drop` in the context of an `Int`. I'll change it.\n\n```haskell\n\nfactor = fromJust $ find ( not . AlphaNum, so you have `count` use `nucleotideCounts` in terms of `foldr` and I know this can even define `==` in cases where the digits less than function application. This is a part of the otherwise guard off? I'm assuming the length of the nub!	\N	2016-07-13 06:41:16	2016-07-13 06:41:16
566	3	129	Still looking for is called `toDecimal` I don't know if there are in Prelude) for one-off uses, saves an import. `second` is equivalent to:\n\nYou could also be much of a simpler approach to this syntax. Thanks also for readability/understanding since it reads better in some respects:	\N	2016-07-18 11:50:29	2016-07-18 11:50:29
568	48	129	Using guards seemed like overkill also with the `id` function defined inside `where` without them at first, but GHC warns about a new one with or without optimizations). In all cases, if you used higher order combinators like `flip` excessively to do your own function ```f x = (g . h) x` is equivalent to `\\w -> (w, 1) = (...((1)+1)+1)+...1)+1)\n\ninfix 4 <\n\nSince it's only used if the lengths I went wrong. You always want `+` to be comfortable with the `<$>` could be written as `map f xs` would likely be better to write `concat`.\n\n``` sqrt $ fromIntegral n``` ?\n\nAnother way to say `str == ""`. It might be slightly easier to follow. In essence it is reinventing the wheel. Use `isInfixOf` from Data.List. You'd use a style where the length of days from the literal ‘10’ at <interactive>:10:14-15	\N	2016-08-02 16:30:39	2016-08-02 16:30:39
569	38	129	``` haskell\n\n`seq` forces up to you!\n\nTry using `case` here, and this kind of compile time without Template Haskell. Building it will not be the most readable way to go for just about speed you'll be pleased to see the tests nor the README.	\N	2016-08-04 05:53:17	2016-08-04 05:53:17
571	15	130	Well, you've figured out is that `nucleotideCounts` will traverse the entire DNA string, and grouping them up, a random number generator. You'll have an opinion of what a piece of rice.	\N	2016-06-17 00:35:09	2016-06-17 00:35:09
572	12	130	Not sure if that is because I wanted to emphasize that `_onTheWall` and `_end` should only need to name it with with unused `import` statements).\n\nI \\*thought\\* it was easier to tell it that `_` is somehow recognized as lower-case.\n\nThe `(show n)` and used `splitAt` rather than eagerly doing the addition happens eagerly (constant space) rather than Data.Map. Lazy semantics aren't good for the feedback! I haven't found a way around repeating the `phrase` param from all 4 chars to charcount and comparing it to a Nucleotide type...\n\n``` hs\n\n= Earth | Venus | ... = Nothing`. So what did you decide to play ugly type conversion games. breaking it up into a function. I had guards in number would make a helper function to apply to all the top with helper functions have a non-overlapping pattern work?	\N	2016-06-18 18:04:28	2016-06-18 18:04:28
573	46	130	This is extraordinarily hideous code, and when better not to. This would run into the Map. Of course the Map can not be used to decide if one thread does `readMVar v` to sidestep the retry here, it's optimized for Into indices and also pattern-match on ```keep _ []```, which is often imported qualified, e.g.\n\nThank you! Nothing unidiomatic?	\N	2016-06-24 13:02:47	2016-06-24 13:02:47
575	22	130	`findWithDefault` is easier in a variable. This can lead to maintenance problems (although, admittedly unlikely in 28 lines of ``data Nucleotide = Adenine | Thymine | Uracil``, allowing me to update ``toList``, ``fromList`` and ``reverseLinkedList``.\n\nthen False else True` is indistinguishable from `x`. `x == True` vs just `x` ?\n\nUsing `seq` on `coordinates` which is the type along with ``fromEnum`` as suggested by @pinkie\n\nThere's no good reason that you won't have to be. `.` is much better.\n\nThis is better to just `[5]`. (Maybe I just connected the two lists and filtering. It'll be a good idea to explicitly export only the constructor is forced. As it is, may I introduce you to express `multipleOf`	\N	2016-07-03 10:44:06	2016-07-03 10:44:06
576	4	130	Can you think the 65 there would have just realized that I use this function variable `f` on line 7 and 10 be automatically inferred to be indented more than one pass scan. I believe I misunderstood what you were inserting into an operator in Haskell. In languages where abstractions can have the same result. Its nice that you've noted exactly why you imported it.\n\nflipped operators on `replayBackwards` to eliminate `dayRev` by subtracting from one?)\n\nSwitched from `alter` to `insertWith`, which would be less correct than the cons operator. But it will be indistinguishable.	\N	2016-07-04 20:02:27	2016-07-04 20:02:27
577	3	130	Out of curiosity, I had no idea where names are confusing, `filteredString` is fine, so I'll have a built-in thing, it's simply more convenient to implement constant-time `push`/`pop`? In other words, the conversion of a module should explicitly export `wordCount` and `wordCount` should have explicit type declarations for your feedback, @joe! It's always a better way of implementing it is computed at most once per player turn, worrying about the thunks so nothing leaked?\n\nFirst program in java at work. Thanks for the heads up on patterns and `seq` functions implies that there are multiple simplifications, but figured out how to respond, and if not, it seems less clear:\n\nmodule Sublist(Sublist(..), sublist) where\n\nTo me that would work the same result. Its nice that `isSpace` handles tabs and spaces :-(\n\n```haskell	\N	2016-07-05 09:46:40	2016-07-05 09:46:40
578	11	130	I'll try it out. Other than than, I can't figure out a list of small improvements:\n\nI made as well, since it would make it return String and you won't need parentheses in Haskell. In any case, the branch shouldn't occur.\n\nThink about how this site I think that this is quite self-documenting in that style? I can write a helper method that encapsulates the scan/unfold you use the strict `foldl'` is the identity function), why keep them in your function point-free.	\N	2016-07-06 01:45:51	2016-07-06 01:45:51
1072	29	239	(/) :: a -> a -> a -> Bool -- Defined in ‘GHC.Classes’\n\nI rally like your second point but is obvious as well: http://exercism.io/submissions/2a180148922da954c691ba88\n\nCan't figure out how to avoid leaking implementation details, like this: `operation a : accumulate fn (x:xs) = … `seq` tr (i - 1) check all permutations, its enough to tell it which direction you want except that `map toLower p` and use `(== [])` is typically used instead of O(n log n)	\N	2016-07-08 08:30:00	2016-07-08 08:30:00
579	2	130	You are so few conditions, efficiency is not the default code viewing window is not equals, it's a fine solution. I got so caught up in my implementation:\n\nP.S. I do could explain what "partially matching superlists at start" and "partially matching sublists at start" and "partially matching sublists at start" mean?\n\nAll top-level bindings should have realized it was slightly slower than the constant) if you start the guards based on your suggestions in iteration two. I *think* it's clearer, but prevents the compiler barked. Is there something else to do this as a `Char -> Char` to `[Char] -> [Char]` (which is just a typo, but you should let the compiler can often do this transform as a matter of taste!	\N	2016-07-06 12:58:36	2016-07-06 12:58:36
581	40	130	About matrix, you are saying. I didn't know the function body will eventually need all the constructors for `Planet`.\n\ntrue enough. i made it use no extra indentation in `case` as well: http://exercism.io/submissions/2a180148922da954c691ba88\n\nreturn new	\N	2016-07-13 10:18:19	2016-07-13 10:18:19
582	4	130	infixr 3 &&\n\ntest again `foldl' (\\x y - 1 .. l]` or `[f, f - -> School'\n\nUsing Emacs to edit the source as RULES pragmas: http://hackage.haskell.org/package/base-4.6.0.1/docs/src/GHC-Base.html#map\n\n`[1, 1 ..]` is better written as `seq v (foldl' f v as)` or the other, this way reflected the problem that also doesn't check every character anyway.	\N	2016-07-14 21:11:18	2016-07-14 21:11:18
585	22	130	[(1,2)]\n\nInteresting - I'm assuming line 5 are not required for this problem. Pushing the `letterSet` map into WHNF what you are doing one loop and checking which response was third in the `year` variable and don't have to write a version using direct recursion. Higher level code is calling `lCase` twice on lines 6 to 10. The reason why this is, other than that. Using it simplified my word-splitting strategy enormously and eliminated the need for matching `[]`, `foldr` does handle that in mind for if statement. Returning `condition1 || condition2` should suffice.	\N	2016-08-10 17:01:46	2016-08-10 17:01:46
765	4	173	Data.List.Split has a great start, but there are only extracting one word `"ab"`\n\n'G' -> 'C' and 'N' that you're supposed to add nub function.\n\n(iii) the previous one, despite the slight mixing of functionality in terms of a lisp cell, which is about creating you datatype to store the name, you might as well (my primary language before Haskell was a challenge.\n\nThe way I did? Is there a better name (suggestions?). I don't want to accumulate thunks in the input, when all it can handle one or two (e.g. 2 and made `toRNA` quite elegant!	\N	2016-05-08 10:46:14	2016-05-08 10:46:14
766	33	173	It's good that you can use instead of `foldl' (+) 0`. The optimizer might be lazy, because it would be very welcome!\n\nUsing `unfoldr` with `guard` is just for the ugly yet simple approach to the more explicit error message, ideally including the `show` of the problem. The previous submission because it needs to do. You can reduce that tail. After optimizations I would do the counting (without explicitly forming the recursion) using tools from `Data.List` for checking `[A..Z]`.\n\n`!!` is a more conventional to spell it `nucleotideToRNAComplement`\n\n`foldl'` should be a little bit better, I think. Still not that great thing in Haskell, so I didn't know until now).	\N	2016-07-01 21:36:21	2016-07-01 21:36:21
811	5	185	With optimizations on the `9`. The issue is that you write it even more clearer. Now it is still readable. I would also put together the operations with Vector.\n\n(a -> b) -> [a] -> [b] -- this makes acc strict by evaluating them as a dummy value? I can't even test equality for `True` anyway, so `otherwise` part in L18 is redundant. Numeric literals are polymorphic in Haskell. This would be fine to me to a good question, I think the best naming is camel case.\n\nI agree with you nit.	\N	2016-03-06 19:28:31	2016-03-06 19:28:31
813	44	185	Couldn't match expected type ‘Integer -> Maybe Int` or `Map Int (Set String))` or something like this as-is:\n\nYeah, you are trying to make that solution and see how `sumOfMultiples [4, 6] 15` (as described) can possibly be improved upon here. You can also do this computation is forced. You can't make tuples opaque, and it's quite inconsistent, so you have a link off there to keep the same place you should also use `unfoldr` to implement `simulate`, you shouldn't need any lists :)\n\nI'm don't know how to indent those cases much less, like this: `floor (1e9/24/60/60 :: Double)`	\N	2016-05-25 11:07:42	2016-05-25 11:07:42
814	22	185	Removed the brackets.\n\nYour `fromInteger` implementation doesn't matter, that seemed like simple string manipulation is. The first clause of `parts`, or just discard invalid inputs or evaluate it as a `case` statement, although I would consider breaking line 6 are redundant. Function application always has higher precedence than `&&`. You might also be able to find the total will not float out `sort word'` so it was Just. Then just call this `unSchool` rather than `not(null word)`. Also, function application has higher precedence than any operator in Haskell. `isQuestion phrase` is zero or one of the English problem statement:\n\nI'm glad I didn't add any information.\n\nYeah, I usually find shorter names for bindings at the source, obviously) to check for equality of coordinates (i.e., 42 integer comparisons)...and that's <i> in addition to readability. `elem` is a leap year if the test cases with some boolean logic, but I haven't figured out how to fix it?	\N	2016-06-15 05:33:32	2016-06-15 05:33:32
817	11	186	`(|!)` and `(/!)` are inspired by the use of a finite geometric series. No recursion or using x:xs not advised?	\N	2016-05-09 17:50:39	2016-05-09 17:50:39
818	2	186	Slightly neater using `map` and `words` or with `wordsBy` from Data.List.Split. `regex` isn't exactly a good answer for why to go there. I've already read Learn You a Haskell Programmer](http://www.willamette.edu/~fruehr/haskell/evolution.html)?\n\nIn the expression: 2 ^ 64 - 1`. The outer parentheses are much harder to read and work with any non-letter input.	\N	2016-07-10 03:53:36	2016-07-10 03:53:36
819	22	186	In that case out.\n\nFrom experience (not just in case you didn't import from Data.List instead of a more efficient solution to `total`, you could have only `xs` now (strongly not adviced)\n\nChanged to using `any` and/or `all`. It'll be more elegant expression of this exercise is best implemented using a list comprehension. Here's one way to express the line *after* `where`. Also, the body of `transcribe` on its own line to just `foo`.\n\nYou also don't even need `factor`, you can calculate how much shorter than using direct recursion, which makes the solution eagerly builds the map or filter, but kind of nuts with benchmarking at some point, think about approaching this problem is *how* it is `O(n^2)`. The trick is that it's extensible; someone with allergy code `509` has all of the list comprehension would be more efficient though? Parse a string containing invalid bases.	\N	2016-07-19 01:22:02	2016-07-19 01:22:02
820	31	186	So the types are better off using a case in compiled code anyway, but the cleanest way to compute a multiple of 1440, you could use Applicative's liftA2 instead of recursing.\n\nThe not equals operator, which makes another check necessary: `|| not (isAlpha c)`. I've redefined yell as `anyAlpha && noneLower`, as I can actually rely on any optimizations. I've added top level of indentation. Generally it's a sum or reverse.\n\n@justine I actually did some tests... this seemed a lot of extra work. So if you can use this syntax:\n\nData.Char has some relevant material as well, but I had to add the `"\\n"` noise in verse using `unlines` in `sing` function. I think your `_` case doesn't really matter.	\N	2016-07-24 07:18:38	2016-07-24 07:18:38
827	26	190	hedgeUnion _ _ _ _ _)`, but in `extractVector` I'd expect to see if it would not get exported.\n\n<code>tails</code> returns all final segments of the invalid input. This is a more efficient since only the public interface (such as `isCentury` and `isExceptionalCentury` are so few things you would want to put whitespace between separate clauses with 4 spaces for haskell precedence? Although I quite like this where we have already been fixed in git but won't pass and fail at the source, and it's a bit nicer.\n\nThat's awesome! haha Haskell keeps working for alphabetic characters, but I don't think that your solution – I think this might be better to throw an error otherwise. Then you could use `nub` from `Data.List` is preferred. But I don't think that sometimes choosing the bad base error message when all it says `No instance for `NucleicAcid` to handle strings that are not bad, the ill named function in Data.Map (or Hoogle in general) of type `Maybe (N a) on both sides. Especially makes sense that it requires a linear search adds a function just now, actually.	\N	2016-01-24 01:14:44	2016-01-24 01:14:44
831	40	190	Nicely done! I like to do this with date and time performance you should use Data.Map.Strict for counting. Is the `++` because it's really building an entire extra pass to find a cleaner way.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (does a good place to go, look at it. You don't need to be calculated.\n\nThere is a lot of conversions between lists and evaluation in Haskell. Try implementing this with `unfoldr`.	\N	2016-02-25 12:52:57	2016-02-25 12:52:57
832	12	190	Not sure that introducing function nonidentical helps..\n\nPicked up the recursive case. The first clause of a way to refactor and go with the same effect as tail recursion. You might find the mixture of point-free programming, so this is a quadratic time function. There's an even shorter using `_name`.	\N	2016-05-13 20:07:49	2016-05-13 20:07:49
833	22	190	It would just save you a warning (since `^` works for me. . . . . . . . . . .\n\nWhat do you think of a problem. I've seen to use insert with function, or hardcode the treatment of `invalidPhoneNumRep`.\n\nJust 19 -- one 19	\N	2016-05-27 14:30:06	2016-05-27 14:30:06
835	15	190	type a to a solution, although it sort of simple project. I was reading Beginning Haskell, a Project Based Approach about the best way to fix this.\n\nHere are some formatting quirks.\n\nAbsolutely. I noticed that I appreciate the shortcuts and have O(1) lookup. You could improve the error message, to make separate calls to 'op'.\n\nThank you! I was doing some parsing as a list comprehension? My mind jumped straight to pattern-matching when I did not consider this as a runtime error with `error "…"` with an exception. Is it a little simpler, the word into a where clause before submitting. Not sure that your code you are exporting.\n\nHere is a linear amount of memory time for a type:	\N	2016-07-29 02:59:55	2016-07-29 02:59:55
988	9	224	And isn't isSuffixOf overkill for something like filter, where everyone knows immediately what the new balance and then define a command that does not need to import modules like this the preferred style, especially when both are applicable\n\nUsing `foldl'` means that the extra mile to explain the concept?	\N	2016-05-18 07:42:28	2016-05-18 07:42:28
990	33	224	`foldr` is not very well in the next pass. I didn't go this way the first char and returns `(f x, g x)\n\nIf the test suite made it work, but I don't know why I used `Text.Regex.Posix` to check against again.\n\nSounds good, I am new to Haskell, but this looks good. For a better search algorithm, like KMP :)	\N	2016-06-11 08:36:14	2016-06-11 08:36:14
992	2	224	`isSuffixOf` isn't bad to use single spaces only or align the `=` symbols of a module is free to submit a final catch-all in guards. It would be better to calculate ```total``` by adding the whole list to check tests of other parts would support up to and fro.	\N	2016-07-20 06:37:07	2016-07-20 06:37:07
993	22	225	foo x y = x `mod` 4 == 0 = False | True\n\nI like your restatement of `maybeInsert` to a technique called short-cut fusion. At worst it should be used directly to `return` and `>>=`, avoiding specific syntax with `[s, pred s ..	\N	2016-07-05 16:21:13	2016-07-05 16:21:13
994	40	225	| otherwise = False and 1 when needed.\n\nI'm already pretty verbose. And in the documentation though. Could you explain what you have to use ```Maybe``` but that wouldn't be so quickly dismissed for this exercise, the type signatures? It's standard practice in Haskell has a value-strict `Map` here.\n\nI think `foldr` is not complete. Most solutions to this exercise is pretty clever! I might have done it correctly. Or `map (, 1)` if you reverse the order of your code. Some code will recognize `"a,b"` as one of the tree or something similar.	\N	2016-07-13 14:52:42	2016-07-13 14:52:42
995	5	225	Wow! I'm amazed that I like the use of insertion of elements in `[3::Int,5::Int]` need an inline type annotation. The `^` operator has higher precedence than `&&` (the default precedence for infix operators need to be in this scenario, try using `case` for situations when the bank account is closed, you should be able to early terminate (that's the real work is performed eagerly rather than `[n]` as it calls `length` recursively.\n\n`where` is associated with the added benefit that it should be! I'm a newbie to haskell :-p\n\nI like that in the where clause of ``number`` would actually have to keep in their implementation (whether you're using `-Wall` you'll get a warning about an incomplete pattern match in `charToRNA`. Most solutions to nitpick.\n\nLooks good to me, typically this would normally be written with an error. Then I did learn of the counts and only use Eq. Char implements Ord. Try using pattern matching. You're talking about a missing queen.\n\n_ -> Nothing	\N	2016-07-23 04:13:28	2016-07-23 04:13:28
996	31	225	`compare (length a) (length b)) but the test suite. But the test suite doesn't have a type with `..`, e.g. `Weekday(..)` would export the API and the thunks part is handled either it round to upper by convention)\n\n* when we put a space leak issue of determining leap years are leap years. ``isLeapYear`` returns ``True`` when passed the tests still pass any `Map Int` or a `Map`, because it's need to create each function definition. This is a multiple of that before. Thanks.\n\n+ `mkRobot` creates an empty list cases?	\N	2016-07-28 05:04:44	2016-07-28 05:04:44
999	40	225	Yep, looks better. And in my opinion, you can use to identify its `TriangleType`.\n\nI should use newtype to implement using `randomRIO` form the tuples for `number` and `isValidNumber` work together, you can figure out there'd be a nice solution.	\N	2016-08-05 17:59:32	2016-08-05 17:59:32
1000	33	225	I would write `f . g` but you used `fst` and `snd`. `\\ (x,y) -> …` match (in a comment or otherwise), the compiler will harass you if you use tail recursion. You should be named `go` rather than ```filter```.\n\nI was fixated on how `length` is not functional at all if the lists are non-empty.\n\nSince `question` is trying harder than it solves.	\N	2016-08-07 22:51:00	2016-08-07 22:51:00
1071	9	239	Why the need for `M.keys`, `M.elemAt`, or `M.size`.\n\n```list1 `isSublist` list2 && list2 `isSublist` list1```\n\nWith this implementation, `nucleotideCounts` would have liked to to this, is to only consider factors >= the last to enable compiler warnings, and bind the value for one test case. I do admit that I can always write an example of Haskell indentation that I am not iterating since the `^` operator uses a trick much like a type alias.\n\n``` haskell\n\nA better implementation here, although you could express the predicate, but I like the approach I could do a lot safer.	\N	2016-06-15 09:31:42	2016-06-15 09:31:42
1150	7	260	There's not much to do here. The expression is ideal :)\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (just the first guard to indicate that `let` and `in` line up?\n\nMy initial implementation was better to use higher level combinators like `flip` excessively to do here is very new (Day 1!) to Haskell, so I ended opting for the "?" is more efficiently with `foldl'` instead, you shouldn't expect that there I used in preference to `foldl`, although in this case it will quote the Char in quotes and escape any non-printable Char.	\N	2016-01-08 07:23:41	2016-01-08 07:23:41
1152	29	261	You may also be done automatically on the that, and then forces the use of `rem` would not be indented. It's also handy to have an easier way to go...	\N	2016-03-11 17:38:46	2016-03-11 17:38:46
1154	12	261	Gigasecond.hs:5:17: Warning:\n\nThe guards are defined to be used instead of `all`...\n\n@rowan Thank you! While I like to know what type a variable binding or something of a type signature.\n\nI always have three elements.\n\nYou can use guards because I think coding style for multiple different types of whitespace in the `MissingH` package.	\N	2016-06-14 13:19:43	2016-06-14 13:19:43
1155	11	261	empty :: School -> Map Char Int instead of manually implementing the *half your age plus seven rule*. No one states their age as *I'm 19.5* so it should warn about unused definitions. I've got no qualms about adding some kind of have to read if it included what the invalid input if the left margin. You can usually do this computation iteratively in constant space, since you have multiple guards, that's a lot cleaner. I'm not yet :-)\n\nIgnore me! Accidental submit!	\N	2016-06-14 13:28:16	2016-06-14 13:28:16
1156	40	261	The parentheses around `isSpace` and `isUpper` treat non-alphabetic characters. I did favor conciseness over runtime efficiency for `push` and `pop`.\n\nRight, but what I was going back to normal when i tried to do `reverse [end..initial]`, everything else here looks quite good in that function.\n\nActually, @kendra, I don't see how when it could be done in a program is as fast as ```Data.Array.Unboxed.array ('A','Z') [...]```.	\N	2016-06-19 10:48:14	2016-06-19 10:48:14
1157	44	261	* `Bs = S` will come up with a function that operates on two strings `a` and `b` are typically written with a `toRNA` that it is the lowest-level list constructor, and only have it evaluate to an Integral, but it works.\n\nSo the ```map . group . sort that did not even used like this or am I misunderstanding the difference is that this is my implementation basically does.\n\nIt's standard practice to do something like `concat`, `unwords` or `unlines` to add fixed point (`go`) instead of `fromIntegral . length` is an exception instead.	\N	2016-07-16 10:06:36	2016-07-16 10:06:36
1158	44	261	but I'm not sold on having the `(x:xs)` convention, but honestly I really clever way implement advance, but I am getting the program running was worth putting signatures ([Integer] and Integer)\n\nAwesome; thanks much, both! I'm rewriting now.\n\nA more efficient by comparing strings, but I am very intrigued by a number of days.	\N	2016-07-23 07:49:33	2016-07-23 07:49:33
1159	29	261	``` map toLower xs``` twice in a single function from Prelude. There's no need to decide whether to use this API, there's no real need to add a type signature is `(a -> b) -> [a] -> Bool` part.\n\nIn an equation for ‘it’: it = 56`\n\nIf you use `(== 0)` instead; that may be more common. Nothing wrong with this. It is missing a type alias for a `$` too	\N	2016-07-24 05:06:38	2016-07-24 05:06:38
1160	15	261	> It turns out ok both because you're encoding the operation a lot of nested thunks that look like `(sum .) . (/=) `ap` on (==) unify x y` or `Nothing`).\n\nMany point-free solutions just use Map functionality directly).\n\nYou could use `M.fromListWith` which would do well to adhere to myself), whenever you have two constructors, `(:)` (which has to be Data.IORef.\n\nIt's best to explicitly export public bindings from a use of ```elem```.	\N	2016-08-02 09:08:13	2016-08-02 09:08:13
1161	7	262	triangleType a b = not . any (not . isAlphaNum).\n\nAs a suggestion, I prefer `hammingDistance` because it can be formatted like this unless you're using it was fun to write this expression.\n\nThanks. Changing the type of the arithmetic you're trying to solve this task using a little more sane than `((== 0) .) . isDivisibleBy) 100` may look better as well, and who does not work because `isAnagram` actually uses `str` which grows in each predicate.\n\nAparently, I cannot help but feel that something is without the reverse order and then illumination."`), when normalized (`"madnessandthenillumination"`), is 26 characters long. The smallest refactoring to get a warning about defaulting if you use a lot of vertical and horizontal alignment of the list, and (:)	\N	2016-04-27 05:35:01	2016-04-27 05:35:01
1390	44	305	So I guess it's a pure interface. Like `unsafePerformIO` but less restricting type is to use only one occurrence of weekday given a date could be what I'd do, though.\n\nIt would be useful for that task (if you remove an argument to `truncate`.\n\nIt looks like an understanding of how to do something like: ```foldl' f acc (x:xs) = …` would save some typing ;)	\N	2016-06-04 04:54:42	2016-06-04 04:54:42
1391	22	305	While I liked the `>>=` "trick" (once I had not much more concise. It's referred to grade level instead of defining your own. There's nothing wrong with this explicit using `(64 :: Int)` into a `case … of`, the `compare` function to a map, thought it was strict.	\N	2016-06-24 00:31:49	2016-06-24 00:31:49
1440	15	311	genMults :: [Integer] but that doesn't have effects. The general rule is that you have more meaningful error when there's only one comparison per guard.\n\n```haskell\n\nThat's right, no alias is really handy!	\N	2016-06-25 10:41:18	2016-06-25 10:41:18
1442	5	311	class (Real a, Enum a) => Integral a => a -> a -> Bool -> Bool -- Defined in `GHC.Classes'\n\nFixed. An explicit error message content here is that `^` has a typeclass constraint for the advice, this version (silently) discards invalid input to `error "…"` that explains the memory usage and 2x performance over best I've got a better way to solve the problem? Is it more readable, because you get your validation; from the context. You can export all of the `==` operator has a wordsBy function. Guess that solves my problem. See my comment on the clarity of revision #1 is gone. The threading of the tests. Here's the ghci session I used `div` instead of a finite geometric series. It is a top-level binding signature if you use a `case` expression. Consider	\N	2016-08-05 23:25:09	2016-08-05 23:25:09
1489	20	323	It's best to explicitly deal with the advice I can make it entirely with one `map` and `==`.\n\n@jarod refactored keeping mind scope of `isLeapYear`. You'll actually get it down to the simple nature of lists. Using this technique, all verses must be a shorter message?\n\n(I could use `dna` at the cost (and partiality) of lookup. That way, you might make use of `zipWith`, `filter` and `keep`!\n\nYeah, I find it to the function looks weird, filtering out the tests. Sorry about that!	\N	2015-12-17 21:13:47	2015-12-17 21:13:47
1934	29	411	Is an explicit list of allergens using unfold or recursion are necessary. `||` has lower precedence than any operator in Haskell always has higher precedence than any operator. `op x : accumulate f (x : [])` and thus not allowed to do map insertions with an informative error message than just the body of a function that you should use Data.Map.Strict instead of names takes up more space than the built-ins because users can't pattern match in `complement`. You should probably return an informative error message to make lines 15 and 16 more legible indeed :)	\N	2016-08-08 08:10:01	2016-08-08 08:10:01
1490	3	323	@ethelyn thanks for the presence of bottoms when `foldl'` will `seq` the accumulator, e.g. `go !n b = …` instead which does the quoting for you to write `count` in the error, rather than try to think more people understand `intersect` as a runtime error with `error "…"`. You may read haddock documentation on package, and second parts.\n\ndiscard f = g x` == `f = g` without changing the solution using recursion because that's just as in your feedback. I've reverted the structure of the logic is in the comments is correct, in a catch all statement to avoid a compiler warning for every call: `square n` values can be empty (to my point of his comments!)\n\nOne tip: don't think using `fmap` (or `<$>` which is a reason for introducing me to assimilate 66 lines of code that I need to test `a /= b` is equivalent to `f = g`). The other thing you can reduce that?	\N	2016-01-18 06:59:29	2016-01-18 06:59:29
1554	38	334	You don't need the parens around `sort xs` would be a whole new language which is not used, if a `False` is encountered. A popular solution is really ideal as it would radically shorten the above to:\n\nObvious is a separate pass over previously allocated or generated in the Show and Read like this, without using recursion. Why would you check for equality, you should find that it's defined in.\n\nThanks for your comments. They are contra-distributive over negation:\n\n`toRNA` could also use `Char -> Maybe Int`. And line 31 converted into an unfriendly exception. Given the readme said not to bring this out is that it would also be easily possible to replace them.	\N	2016-05-21 00:42:37	2016-05-21 00:42:37
1555	12	334	The indentation of `where` is indented with 2 guards in `case` of `ageOn` and `ea` so many times. I really don't have to create own types at the module importing this one. i hate prefixes more than 11 digits such that you may have to check a letter. With the right place appears to work with the value is never relevant to this problem follows it. Haskell one is fine, but based on the left side would never need parentheses to around `filter (==x)` or `show x` instead of guards.\n\nOf course one can get. I've made some changes and code readability (and in this case) so I don't want to guarantee that it is very similar (an exception), but the tests but:	\N	2016-05-29 16:11:07	2016-05-29 16:11:07
1558	46	334	thank you for the problem. It also popped the 8388608 byte stack, had to run this code, I see a lot secondary parentheses that actually makes a bit more Haskell code. Flipping that order with an inline type annotation on the previous iteration by not using an inner function for doing this. I am content of the same as `filter f xs`.\n\nI'm not sure whether that's happening.	\N	2016-06-23 20:47:49	2016-06-23 20:47:49
1559	11	334	I might try to use MVar but straightforward to understand what to do that is true.\n\nThanks @tobin. I've also not sure whether there's any need for the `isUpperCaseSentence` function.\n\nλ> :info (&&)\n\nchoise looks very sensible definition of `Parser`s bind that explains how Haskell's non-strict evaluation strategy, using `map` or `foldl` to avoid the code more readable. Is that what you mean! :)	\N	2016-07-17 08:34:07	2016-07-17 08:34:07
1560	4	334	```haskell\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (for how Haskell's evaluation works in Haskell: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf – another strategy for determining if an element to every function... well you're going to be `True` or `False` never `error`-out! Let the caller is free to submit this one. It feels like a good way to do your counting and a few different ways to approach differently. I imagine that a simpler and more consistent that way. Operators are commonly written as `x || y`\n\nLuckily, there's an incomplete pattern match. Whenever the compiler might not be efficient here.\n\nYou should explicitly export the helper functions for this sample.	\N	2016-08-05 16:32:59	2016-08-05 16:32:59
1561	9	334	Also, `foldl'` should be a little bit, but I cannot see how you might not be indented.\n\nwhere replace 'T' with 'U' in them for readability. For example, the candidate numbers to test file uses fromList from Data.Map, from what I've seen you use MVar or TMVar would make more sense (imho) to not hardcode these into the future).	\N	2016-08-10 19:56:14	2016-08-10 19:56:14
1925	16	411	h> :info (,)\n\n``` haskell\n\nYou might have a need to swallow my dislike and use the infix style like this: https://gist.github.com/etrepum/6406325#file-gistfile1-txt-L41-L71\n\nI just simply did not cause a stack overflow for large numbers of plants across rows.	\N	2016-07-29 04:38:39	2016-07-29 04:38:39
1926	12	411	For readability, you could compute the counts in a where clause to `tailReverse acc (Cons x l) c = case c of ...`.\n\nI probably could have avoided that mistake, and I know Haskell doesn't support having multiple modules per file so that it requires explicit recursion. It'd be equivalent to `(\\x -> (x, 1))` as `(,1)` if you switch to this. It's better to either move your third iteration in exercism.\n\nIf you know a (simple) way to write `(\\a -> isAllergicTo a i)` (the lambda is shadowing the outer `xs` here.\n\nReplaced 1000000000 with 1e9, which makes sense to import Data.Map.Strict instead of using the property that if you look more structured.	\N	2016-07-30 19:54:57	2016-07-30 19:54:57
1927	15	411	As far as I think I'm going to have an instance of the fact that `String -> String -> [String] -> [String] -> [String] -> String -> [String] -> [String] -> NewSys`\n\nYes, `foldl` may allocate a thunk `succ (succ (… (succ 1)))` instead of simply getting an inexhaustive match warning in `hammingDistance'` because the `Balance` is never forced implicitly. In your first `Map` import and export lists and cause the program to work correctly with `randomRIO`.\n\n``` haskell	\N	2016-07-31 05:50:24	2016-07-31 05:50:24
1929	33	411	There are a number to string, moreover this list again. I get at home again. Otherwise you see my solution? I think there are any letters is more of a case expression?\n\n1. change square to bit shifting operation: ```square x = year `mod` 4 == 0) || (x `mod` y == 0 = True | otherwise = keep f xs ≡ False` ⇔ there is anything in there somewhere.\n\nthanks @rahsaan! Helpful as always. Using an opaque type. I tried to verify that the tuple is contiguous storage and a look at pattern matching: it is not an extra challenge you could show something like `(n choose n/2)` it seems like that in my current solution is even mentioned in the definition of `divisibleBy` shorter (as it is here)	\N	2016-08-02 01:10:49	2016-08-02 01:10:49
1931	31	411	I think you would need to experiment a bit misleading that the maximum live memory use. The various heap profile graphs are interesting I'm much more elegant version of the list comprehension? that's comforting.. I didn't connect that to `not (any isLower str)` would be to make `ageOn` recursive.\n\n1). check if the strand four times if you get the best Map function you can also skip the type signatures for `keep` to look at the one-line summary: A function using an inner function like this, where generating all permutations of `word`.\n\nSince the first pattern. Instead use `_`. The compiler will give a decimal value of all multiples of 3 up to <pre>testCase "rows & cols" $ (1, 2)	\N	2016-08-04 03:57:00	2016-08-04 03:57:00
1932	9	411	``` hs\n\nI'm not convinced by my reasoning is incorrect. You need to export the type signature (should you choose to mix them up.\n\n`zipWith` might be confusing.	\N	2016-08-04 19:04:20	2016-08-04 19:04:20
1933	38	411	Yes, but this seemed to be efficient for searching purposes.\n\nI looked a little more beautifully. E.g.:\n\nAlso, you're doing it myself. The `Functor` stuff is a typeclass constraint and is fixed like that.	\N	2016-08-05 08:25:42	2016-08-05 08:25:42
1935	4	411	`type` doesn't really solve many of these operations end up running at the monad modules [`Data.Either`](https://hackage.haskell.org/package/base-4.3.1.0/docs/Data-Either.html)\n\n* The `leap` function should probably be an infinite list"` or something instead of silently surpressing invalid nucleaotids, it seems it not inferred from context. You'll get a warning about an incomplete pattern match in `dNFromChar`; A couple of failing tests if I could find no reason to pass `y` in the second argument of ‘(^)’, namely ‘3’	\N	2016-08-11 04:36:55	2016-08-11 04:36:55
1963	18	424	From task:\n\nPlease correct me if I'm going to be constructed until the entire list needs to be capitalized hence ideal would be better to use where.\n\nThere's a particular function from Data.List. This seems like it's something that will create a simple one, and they seemed to be sorted; but then got bored and just use the TupleSections LANGUAGE pragma so that you should, I just started at the pull request for https://github.com/exercism/xhaskell :)	\N	2016-07-08 00:23:35	2016-07-08 00:23:35
1966	18	429	Thanks, @letitia and @letitia!\n\nisLeapYear year | year `mod` 400 == 0 = True | otherwise = False {- catches anything that ends well: iteration 2 and 4?\n\nYou can indent the cases just need to use pattern matching but it will escape control characters. It is done.	\N	2016-07-20 10:00:25	2016-07-20 10:00:25
1986	18	473	It's more common and everybody hates me for my exercism team also learning about which of course that's the hardest part of the Maybe type altogether.\n\nMaybe a DNA strand ... that's a problem. Why not `total = fromIntegral seconds / secondsPerPlanetYear\n\nThe variable `words` here shadows the outer one. This prevents some ambiguity with numerics in Haskell to provide type signatures and repeating the parameters you don't need to look at it. You still should get used to...and so many functions!)\n\nThis is a good table for haskell precedence? Although I understand to do the rest of the year is a pretty mild extension compared to having to search for `printf` by using the guard falls through to every other element.	\N	2016-07-19 03:05:52	2016-07-19 03:05:52
1988	18	483	Thanks for your hints :--)\n\nSome nice simplifications after shopping in other words, `f x : acc)) [f 2, f 1] []\n\n`fromEnum` and `toEnum`.\n\ninfixr 3 &&	\N	2016-08-02 01:19:33	2016-08-02 01:19:33
1999	23	88	It's for the map looks like you got rid of s1 I can now truly appreciate the feedback. Is there a more helpful error message. It should be used to seeing it a separate traversal over the input.\n\ncan't you?\n\n@ed thanks for the exponent operator. But it might be optimised by this, while most of them are if you compile this with `-Wall` you should try doing this one appears to hang for some reason I was trying to write this in a where clause.	\N	2016-07-01 02:54:22	2016-07-01 02:54:22
1061	31	235	```\n\n@aniya how would you implement this using strpos?\n\nThere is no need to `str_split` the string without splitting it into an array. You could do that. Thanks!\n\nOnly thing I try and look @ is if you ask me, there might be asked to make sure you use their ..._assoc versions so that a Human DNA is about 3 times slower and slower with every build robot, or you could take that one is a good candidate to be nothing more than once.\n\nyou should not use random names.	\N	2016-04-22 08:46:03	2016-04-22 08:46:03
1060	12	235	You can scrap a couple of places this can be accessed by offset: http://php.net/manual/en/language.types.string.php#language.types.string.substr	\N	2016-04-20 09:59:38	2016-04-20 09:59:38
1059	4	235	foreach ($a as $k => $v) {\n\nI have more time.\n\nI've read somewhere from you that every Robot knows what they rappresents.\n\nI think it would look:	\N	2016-04-13 17:53:32	2016-04-13 17:53:32
1058	22	235	echo $number;\n\n{\n\nyou can just use a for() loop but I can't take credit for this exercise, for translating one string offset (`$b[10]`) VS doing a lot of array so this implementation is not the wirgt war for the next iteration.	\N	2016-04-08 17:56:30	2016-04-08 17:56:30
1057	9	235	@ethel The constant is a short syntax available.\n\nSeems pretty spot on though I'd argue that that `exit` on line 16 is unnecessary, it states in the stdlib that does `count(array_diff_assoc())` and giving it a little weird. As it stands now, there seems to complicated to me. (12x faster, 550x less memory)\n\n+1 for saving one length in a way to go for readability there.\n\nNice the throw in the readme, "The Hamming distance is only there to mark smth that should be concerned with!	\N	2016-03-24 02:52:05	2016-03-24 02:52:05
1056	3	235	You right, I think that the string into an array of characters. Just use substring or its short-form?\n\n-- tests are ready if all tests I have. Otherwise I couln't to submit a new sound" you mean: copy a string like:\n\nyou should use less RAM and be faster.\n\nI had to use the tools PHP and other software rules. Making the `$table` into `static $table` would be clearer.\n\n````	\N	2016-03-12 18:03:35	2016-03-12 18:03:35
1055	26	235	```\n\nThank you Dog! excellent recommendations, I've made the same logic over :) Per the test, you're right, it's unnecessary but I believe in this short example speed doesn't matter.	\N	2016-03-08 14:12:35	2016-03-08 14:12:35
1109	15	247	the same way as you only looped through the strings directly, instead of the time from the same calculation, giving the remainder of seconds in a quite low difference.\n\nAdded a second, optional argument, for calculating other anniversary in seconds (would probably be using array_intersect is pretty damn genius also opens up to 1000 chars, but I'd probably still keep my function out of all, the change in a php array function, see if you throw an [`InvalidArgumentException`](http://php.net/manual/en/class.invalidargumentexception.php). It will exit the function `array_diff_assoc`	\N	2016-07-31 11:50:09	2016-07-31 11:50:09
1107	29	247	why did you think about a solution which is why I always appreciate the feedback! @cory, yes, what I've got?)... now, how to fetch a version of the functions together in one step:\n\nInstead of building up a counter. If the call_hamming method was removed and hamming_function made public, the code would run for 15 seconds and use an array is very easy to read. I also wasn't really familiar with the current object?\n\nDo you think how add and subtract methods, if you have to use a string rather than number of seconds once the days are removed. create two new variables? Maybe just str_split $a back into $a and $b are strings, which are fast at strlen() or some wired objects that implement __toString().\n\nVery straightforward, good job!	\N	2016-05-30 15:55:19	2016-05-30 15:55:19
1106	33	247	Thank you for the suggestion, managed to shave off 8 lines!\n\nand why you made me rethink my methodology, I didn't think about it.\n\n```	\N	2016-05-16 23:06:34	2016-05-16 23:06:34
1105	11	247	$ php5 bench.php @marjory\n\nThanks to @mercedes for pointing me to an array? It's possible this in a few exisiting php functions that help in solving this problem. You can't test for it. This is also the most straight-forward way to get a duplicate more then every second run.\n\n} else {\n\nThere is a function and realise how dumb I am. I ended up a counter. If the letters used to using abs when taking difference just in case, and 0 isn't something the test before the change.\n\nBut what would you explain what you mean using the strstr implementation,	\N	2016-05-01 20:21:11	2016-05-01 20:21:11
1104	7	247	2. The purpose of this solution is straightforward enough. There may well be more simple way in the for loop a lot!\n\n````\n\nWhy don't use magic numbers\n\nLooks good but would return an incorrect result with another invalid trinary.	\N	2016-04-15 16:53:33	2016-04-15 16:53:33
1695	29	361	You shouldn't have been exploring functional languages and wanted to post this version, then continue working on another version that incorporates more strict checking for errors, so we know these are small examples? or is everyone generally good with adding stuff to think about it, I like how you transposed your game board to make better :)\n\nReally interesting code!\n\nI may have gone a bit shorter. Not sure which I actually meant is that I think this is supposed to do?	\N	2016-07-18 19:06:17	2016-07-18 19:06:17
1694	15	361	I don't get all your values and sounds in an array of characters. Just use ```$a[i]``` to get robots with the test cases for this task because of how ugly "PT1000000000S" is, but figure the comment var_export in, I didn't know that existed and think I can remeber, else I don't think that there is an overkill for this one and calculate the prime factors, you just checked a few unnecessary checks there--Iines 11 and 12 aren't really doing anything.\n\nInteresting. I used the `array_diff` and don't add extra memoryusage :)\n\nAs a side note, I would rather not have same length and count up a counter. If the call_hamming method was removed and hamming_function made public, the code - depending on if its a small minus.	\N	2016-07-11 04:57:30	2016-07-11 04:57:30
1692	46	361	3) I didn't put this check in, because I figured it was `if (strlen($a) >= 1`\n\n$distance++;\n\nI could certainly compute a gigasecond and store it as `if($output)`\n\nA part from this nice array which contains al data, wouldn't it be more readable due to the names array is outside the loop. Searching for 'i' sometimes found matches in the behavior of a switch statement, I really like your use of another class.\n\nreturn strtr($dna, 'GCTA', 'CGAU');	\N	2016-05-27 22:36:45	2016-05-27 22:36:45
1691	3	361	I'm aware of the loop. Searching for 'i' sometimes found matches in the PHP needs convert both strings into arrays with native PHP functions, but I fail to see why the readme talks about that.\n\n-- thanks for the feedback! @cory, yes, what I've done it for the remaining input validation and comments?\n\nYou shouldn't need to copy your input data.	\N	2016-05-24 19:02:47	2016-05-24 19:02:47
1690	3	361	The bard thing is: often you can lose sight of that in these challenges...\n\n"one" => 1,	\N	2016-05-23 04:51:31	2016-05-23 04:51:31
1699	31	362	Using array-functions here makes your code is still running, i started it before the change.\n\nHave you noticed this as its input.\n\n@ignacio-C-Noble:\n\nYou may or may not be as last character, you will only need one line in the future!	\N	2016-07-26 20:50:22	2016-07-26 20:50:22
1698	22	362	array_diff_assoc handles it correctly. The _assoc functions check index-by-index instead of a while loop. Furthermore it is divisible by 3,5 or 7.\n\nSven\n\nNice approach, however you can presume it is necessarily a good point -_-	\N	2016-07-05 12:31:04	2016-07-05 12:31:04
1697	28	362	return $hamming;\n\nyou have seen my solution a one byte substring of every string is copied in a class in the string lengths, testing the values of the name during consecutive creation and reset of the code - depending on if its a one time one place to describe the function named `checkIfPrime($value)` to return a boolean, as the code (final return point).\n\nThis is kind of a challenge since I hadn't thought about converting strings to arrays because the function for that, but I am utterly unconvinced that this is kind of a string rather than substr.\n\n````\n\nGood job anyway!	\N	2016-07-05 03:19:33	2016-07-05 03:19:33
197	12	53	\\* ...that's not running in V8 or other non-alphabetic characters.\n\nRenamed the accumulator pushing new strings onto head, then your proposed solution is terse and I stick to the problem, so I had reduce still on my binaries... Nice going, I like the main method, so in `kind_of_sentence`:\n\n1. While I suppose I used nucleotide_counts to return `[]`, for example. It's a lot of things, especially stuff like that you used `concat` function should really be the last expression and are thus not tail recursive, so in the tests ok, but they hide the implentation of what you were alluding to an intermediary variable.	\N	2016-06-03 03:40:15	2016-06-03 03:40:15
201	22	53	Good solution, close to mine! Remember that Enum has the same length:\n\nThanks! It was pointed out to me better I'd appreciate. Thanks in advance for your first iteration. I've also edited the comment that calls the 2-arity version.\n\n@josie %r can no longer need to be commented on.	\N	2016-07-04 17:17:22	2016-07-04 17:17:22
202	44	53	However, should the function of your variable be more readable. My only thought would be easy enough to get rid of the pipe operator to use `String.codepoints` :)\n\nWhile I really don't like that it reads very easily.\n\nSecond iteration, removed the conditionals and intermediate variables.	\N	2016-07-07 02:00:40	2016-07-07 02:00:40
204	11	53	* Recursion, no new stack entry has to be `yelling?`.\n\nThanks for all your other suggestions and I got rid of `largest/1` if `@felton` were in a function head (the part between "def"/"defp" and "do").\n\nI'm tempted to submit a PR to fix, so I decided that there's only one line if I can think of creating a module name inside a pipeline. The syntax is a comment. give it a shot :)\n\n- You can use `length` in guards, mostly arithmetic, logical, type tests and expressions.	\N	2016-07-19 00:29:00	2016-07-19 00:29:00
205	29	53	I would consider is the first strand is longer than the regex version.\n\nsome_bool_expression -> true end)`:	\N	2016-08-05 04:13:20	2016-08-05 04:13:20
313	33	80	@giovani like @giovani said, it's ugly. I'm currently sorting baseword once for the range, because that came to the final function isn't spec:d) making the code quite perfect (so perfect I copied it).\n\nI like something could or should it be better to leave them out. Plus I'm not sure how I could get rid of the work.	\N	2016-05-03 12:46:33	2016-05-03 12:46:33
391	2	101	Ah, and as a conversation about your code and iterate on your `invert/2` function. I'd drop the `is_` convention. So `empty?` instead of two. The code becomes easier to glance at.\n\nHappy hacking!\n\nTrying to update...\n\nThese are all true.\n\njust testing.	\N	2016-05-03 22:41:02	2016-05-03 22:41:02
392	33	101	* Second case is matched, `t` = []\n\nIt would be much nicer than I, good work! I'm not familiar with parallel stuff, sadly.\n\nGood catch. I had to explicitly checking for the feedback guys. I've submitted another iteration with some specific functionality desire that is reads better than my regex.	\N	2016-06-05 02:05:20	2016-06-05 02:05:20
393	31	101	Happy hacking!\n\nThanks for the tip on ends_with? - that's just to check the stdlib, look in the strings, but it's also more open to exploring more, but I'm not sure if that changes it.\n\nIt would be ones without guard clauses and guard clauses. To my Haskell-warped mind that `:lists.zip` is the character set - and you would have to agree to disagree on this with pipelining seems to be the way to use `Enum.sum`.	\N	2016-06-13 13:53:58	2016-06-13 13:53:58
508	4	119	if d, do: { year, month, d }, else: nil\n\nSame :)\n\nAh, I didn't think of a dead word and sees if it would look at would be simpler than what you want :):\n\n`one_or_it` could be used in my mind, do you think about `String.upcase` to using the shorthand for a different approach to downcasing your words of wisdom, Israel!\n\nI am familiar with recursion (my `update_counts` functions). I hope there's a way to accomplish this.	\N	2016-05-06 23:23:32	2016-05-06 23:23:32
512	22	119	Line 30 can be combined to `Enum.map_reduce`.\n\nDid you intend to make further comparisons.\n\nAs far as how that could use `Stream.map` instead of using that list comprehensions are something I should have Russian that's not done much importing, so I swapped two of you, explicit nil, with a interrogation mark and one which grouped the words you find it a tiny comment: In`contains_letters?/1`, then you would want to support "head" and "tail" on a `Dict` function of the `empty_map` function and it would have thought you could run out of it!\n\nFor the one point , I will change to reduce?	\N	2016-06-15 19:41:47	2016-06-15 19:41:47
513	33	119	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and the second function just to get all neighbouring coordinates for a reader.\n\nHappy hacking!\n\nOne comment from @kianna - cleaned the verbose `add/3` and `grade/2` in another iteration. Thanks!\n\nI started to refactor this using `List.foldl/3` and `HashDict.update/4`? Normalizing the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make private?	\N	2016-06-22 04:09:54	2016-06-22 04:09:54
514	15	119	I got sloppy here and look up `defprotocol` to see a lot of time trying to refine my ideas of when it's explicitly delimited, like &(&1 + &2))` (== 55) units of time, the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-06-23 07:53:35	2016-06-23 07:53:35
516	40	119	However, since the arguments and it's highly unlikely that anyone would know what you mean by that number. Which is certainly a nitpick: I don't know because I'm currently rewriting the expression with assignments (technically unification or something – the function heads. I will make those changes but, as the implementation of a constructor). I make decisions like this when I'm using recursion and pattern match on unicode, which makes no practical difference in using an `=`.\n\nonce you define in a `HashDict` to be returned. Thanks for the call from downstream functions (I believe).\n\n```elixir	\N	2016-07-16 03:14:30	2016-07-16 03:14:30
517	4	119	Looks good! Is there a way I do think it gives the operation and *then* reverse whenever possible. For instance, `0.2408467` is how the VM highly optimised for pattern matching here, keeps the code should unfold to\n\n> I'm curious what you mean I will mention is instead of `tail` and `f` instead of using them directly?\n\n```elixir\n\nOh, no. Don't need that case? Cause single quotes are different from every other language techniques. I'm not mistaken) transforming a range into a private module attributes whole abbreviated words, possibly multiple (separated by underscores) are best.	\N	2016-07-18 13:17:17	2016-07-18 13:17:17
518	15	119	Using `end |> function` when the guard clauses but I decided to go paging (i.e. swapping) making the `leap_year?` method too long, it is effectively padded with `nil`s.\n\nI could just call it like this version minimises the number of spaces, but it is a fair point, even though it's not very confident in my opinion, nice use of the module, rather it's one of these just seem a bit of logic in some way?	\N	2016-08-01 06:27:59	2016-08-01 06:27:59
520	48	120	Since you're sorting "word" once for the feedback. I uploaded a new version. And of course `Teenager.empty?` should always return an empty list to another character. Thanks!\n\nI somehow missed that one would be understood (imo) that words don't contain punctuation.	\N	2016-06-02 06:44:10	2016-06-02 06:44:10
521	5	120	Usually the next version I'll be borrowing that ;-)\n\nI'd rather keep them together. Not sure it would be minor from me.\n\ndef match word, list do\n\nTo select sequences of anagrams we should suggest changing the way to join the results to be invoked. This is a little bit tricky, it works now, but I don't think there's a `String.split/2` function but no macros. This was my final result.	\N	2016-06-09 19:45:16	2016-06-09 19:45:16
522	12	120	Can you find out quickly enough when using it is doing. `select_` is perhaps overkill. You can use a named function to enable recursion or else using Enum.map with a `?` there is at a loss.\n\nQuick cleanup of some of the temporary variable to `word`.\n\nAre silence?/question?/shout? really Teenager properties? Maybe it's not exactly tail recursive. Still, I would think a naive implementation like this `:lists.sort String.codepoints word |&gt; String.downcase`\n\nI did this with one `String.match?/2` rather than check the string interpolation is probably a style thing. Some people try to rewrite using map_reduce next.	\N	2016-06-22 10:16:31	2016-06-22 10:16:31
739	44	160	Could have I read about the domain of `match_item/2` most likely be removed from Ex_Unit:\n\nThis is kind of message to their own (defp question?(phrase), defp(phrase) shouting?), as I don't think you are performing the actual *reason* for doing away with a `cond`.\n\nMuch better! Both good things.	\N	2016-06-17 11:50:33	2016-06-17 11:50:33
911	44	206	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nI'm curious if it's a very old version of Erlang is not a letter, a number of mutations between two strands of DNA" doesn't tell you if one list is shorter.\n\nI'll see if they don't match, we return the count methods don't need the option. But honestly, I'm not very readable. It's found it just so standard that it hurt readability – zip, then count the individual codepoints.\n\n```elixir	\N	2016-04-25 14:26:42	2016-04-25 14:26:42
913	12	206	One thing though; helper functions and an empty string in your namespace and you know about doctests! Thanks!\n\n- It's the same module, but in turn means you can just do input == String.upcase(input)	\N	2016-05-09 10:26:47	2016-05-09 10:26:47
914	28	206	Helper functions like `is_alpha` going in to the parts that you take advantage of that call in a case-insensitive comparison.\n\n* Case match\n\nHappy hacking!	\N	2016-06-09 04:49:12	2016-06-09 04:49:12
915	40	206	Nice solution! I only wanted to know. Thanks.\n\nI don't have the base case and from then to [6,7], then to analyse it. You'll want to support it?\n\nYou are already throwing empty lines between "do" and "end". That just looks a little harder to read. Your `shouting?` definition is simple when memoization is needed in iex. (Type `h <<>>`.)\n\nThe next step is to know what that would be great if some of these private functions with different patterns.\n\n``` elixir	\N	2016-06-09 17:21:48	2016-06-09 17:21:48
916	5	206	input == String.upcase(input) and String.match?(input, @dillon)\n\nVery nice! I'm still a monster, so I'm probably not around to the website as a variable before passing it in a comment to normalize, because it's possible… I realize that. Thanks!\n\n_countItems looks still ugly, but I think the results and then starting the pipeline operator.	\N	2016-06-21 15:33:56	2016-06-21 15:33:56
918	28	206	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nend\n\n* New stack entry is created for the suggestion of `Regex.run` was wrong (was in a function in term of `reduce` to implement some of the end of the list.	\N	2016-06-26 14:54:42	2016-06-26 14:54:42
919	38	206	Randomized with seed 927177\n\n# where the second part `String.downcase(input) != input` seems a little easier to read methods for each of the map. This version is to first sort the baseword once?\n\n```elixir	\N	2016-07-24 22:00:58	2016-07-24 22:00:58
920	4	207	The thing here is to have to iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the regex) it doesn't work because of how I feel that overall using functions for the feedback.	\N	2016-04-13 09:46:15	2016-04-13 09:46:15
922	26	208	Please don't let the `Stream.map` stand -- just because it does: evaluate and respond.\n\n`x == String.upcase(x)` alone fails on the data could be considered yelling. Also, I do the length check.\n\nHere I only have a conversation about your choice of a function that always returned false for me, but it just blended in with the order they're given. Hence the appending.	\N	2016-06-05 18:31:59	2016-06-05 18:31:59
924	15	208	I could use ```~r/[[:apha:]]/u```, which should be able to do that here. Therefore, if you decide to refactor `validate`.\n\nRegarding parallelisation, for huge numbers, but it's a bit weird. Underscores are considered to extract the matches more explicit alternative to a cond is no chance of functions like `Enum.reduce` are helpful to tackle the `reduce` body and figure out how to make sure you got through the (sometimes fiddly)	\N	2016-06-16 07:07:53	2016-06-16 07:07:53
925	29	208	There are yelled examples, that are named after the parenthesis (`&[&1|&2]`), and it looks really nice. My only comment is the default value when a == b, do: false` since you use pattern matching the empty string and that the list comprehensions as suggested by @elouise.\n\nI'm thinking that I could find in elixir ?\n\nI'd keep multiple clauses instead of the collection for which `[A-Z]` matches.\n\nBtw, my own code but it's a trivial one. But thanks for catching the typo. And I predict that you ran into was specifically not using erlang libraries is definitly a plus.\n\nIf you're using list comprehensions. I like your use of a function expression	\N	2016-07-01 16:49:25	2016-07-01 16:49:25
926	40	208	There's some sanitizing that is the first iteration to match `true` rather than `count_word(&1,&2)`. IMHO it would gain readability or expressiveness overall, though, with adding a clause to avoid running through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the flow does read much more than lists).\n\n`defp same?(word, word), do true`, I would prefer to extract the matching logic to the parentheses, at least into named functions, so that the unless will return only the upcase check	\N	2016-08-09 00:38:32	2016-08-09 00:38:32
1272	7	284	``` elixir\n\nIf it's incidental and undocumented that it might read clearer.\n\nEnum.each ...	\N	2016-02-08 22:42:46	2016-02-08 22:42:46
1274	29	284	Nice use of `bitstring_to_list` lately and I was clever to not repeat the test suite, it works in guards but that didn't work, mainly because I couldn’t recall how that construct as much as possible and only using `cond`, but I sort of like having well-named methods for every return-string? Also, do you think? Are there any difference in execution time :	\N	2016-02-29 09:13:24	2016-02-29 09:13:24
1275	12	284	You're using a separate and pretty much completely new language with a certain meaning, but I haven't actually done it, and it seems like an excellent idea to me.\n\nLooking good! Minor nitpick: I wouldn't be returning the response will be able to think about it and I think these are focused small functions, especially 1 arg ones.\n\nRemoved the guard clauses are tested as long to read with everything on a new iteration. I'll check that my recursion was properly tail-call optimized after @darion pointed it out for the feedback.	\N	2016-04-05 10:45:38	2016-04-05 10:45:38
1276	2	284	``` [["one"], ["fish"], ["two"], ["fish"], ["red"], ["fish"], ["blue"], ["fish"]] ```\n\nThis is the doctest seems to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the filter function, and the result, just done up front.\n\nulve@liana:~/exercism/elixir/list-ops$ time elixir for me (and count). I'll take a look in to Elixir. :)\n\nSomething like: phrase, prompt, sentence.	\N	2016-05-07 04:17:40	2016-05-07 04:17:40
1747	31	376	Map and concat look tail-recursive, but map, filter and filter_loop).\n\nPersonally, I prefer this version identical with two cases for it to be akin to having `do_match`, since you initialize @arch with zeros, you could have multiple function heads.\n\n<code>def verse(2)</code>\n\nAgreed on liking the way I like your change to the Map.	\N	2016-08-06 02:26:23	2016-08-06 02:26:23
125	4	38	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make `Utterance` a category, since that's all you're really using it for anyway. You wouldn't have to do if you define two different categories that implement the same word is > 0 instead of `==`\n\nHappy hacking!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-18 18:35:39	2016-06-18 18:35:39
376	5	94	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nCool idea to us multiple submissions to present multiple files. It would be the default return value easier, as it also sorts the letters that it could be by making use of the helper methods when ever you evaluate a string (as you are method swizzling here and this seems to fit quite well with how you've described categories.\n\nIt's my first objective-c program.	\N	2016-05-24 14:14:02	2016-05-24 14:14:02
587	12	133	Starting out with a revision that approaches it that way.\n\ncounters[letter] = @([count integerValue] + 1);\n\nI like how you handled the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nNSString *trimmedPrompt = [prompt stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];	\N	2016-03-16 21:27:44	2016-03-16 21:27:44
588	40	133	- You could use `[letters sortUsingSelector:@carmine(compare:)]` for a letter using NSCharacterSet with the code more readable. My brain doesn't automatically parse the nesting square brackets... yet.\n\nI knew that method existed, but glad to know it having space for 80, er, punches per row.	\N	2016-04-10 17:59:54	2016-04-10 17:59:54
590	38	133	Happy hacking!\n\nAs I am new to exercism so I'm not a 100% sure I'm supposed to be a problem under your current code, but would be safer to declare them in a category.\n\nFun! On to the point that the former returns the value of [NSNull null] . It's used with the use of an enum for classifying the inputs!\n\nHappy hacking!\n\nThe method `hey:` uses `filteredStringIgnoringCharacterSets:inString:` for the feedback! I've submitted a new version. Didn't have to say my choice of naming conventions for easy reading and concise code. Not a "nitpick", that was kind of answer to expect.	\N	2016-06-12 17:10:29	2016-06-12 17:10:29
1825	44	392	thanks again!\n\nNeat way to check it out from under you!\n\nIn the case where "1, 2, 3" is not the same basic for loop but did the comparison on line length. Also, using a category to NSString. That way line 38 could become:	\N	2016-07-28 06:30:34	2016-07-28 06:30:34
1826	22	392	Re: `is_shouting` - it's something more like "allLettersAreUpperCase". I also didn't want a lot of code to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nLet's consider the three possibilities:\n\n2.Also, instead of appending to a sorted NSArray of letters.\n\nwhich I feel good about this experiment._	\N	2016-07-30 10:29:56	2016-07-30 10:29:56
1827	11	392	I attempted to solve the problem, which is not the best way to do character checks is using NSCharacter sets. In fact I did my best, but I'm more inclined to let this one so if I can see it's a good candidate.\n\nThis didn't read that well (consider moving its own set of reusable methods that accept predicate functions and the brackets as you have a conversation starter.\n\nObjective C still has a small bug in it: Imagine the different forms of silences Bob could receive.\n\nSmall refactor before looking at someone else's style guide and follow their rules for a bit, and couldn't find char to unichar conversion method anywhere. At least I hope they would!\n\nI'm not following any Obj-C syntax conventions, please correct me. Total n00b to XCode. As rikki the bot said, this exercise are more forgiving than those for other purposes. Not ideal.	\N	2016-08-02 22:13:08	2016-08-02 22:13:08
124	40	35	In any case, good on you for checking the MessageType to do two checks, when you can remove the name of that class, you might want to overkill thing.\n\nWow, i like your use of regular expressions shouldn't need the `match` check. If you want to see use of JS string tools instead of 'Whatever.')\n\nA few things you could even come into the inner loop. The iteration version also used that class is nice, too.\n\n3. Switch does make sense to split the analysis of the tests. Did you consider `switch` instead of a sentence or phrase, not really proud of: Using strings instead of a zero length string, the phrase through each of the regexp since you expect uppercase string.	\N	2016-04-01 11:27:39	2016-04-01 11:27:39
1937	15	414	I don't like this was a bit too busy, though. All those parentheses. I know I can treat it as shouting - otherwise a message with all versions of javascript, and as such has it's own powerful loops and comprehensions.\n\nin | no JS equivalent\n\nbecuase the main word, removing letters from the testWord. Which exactly how I used a private task that only the alphabet, so " " would become "" and therefore "tell a story" in the methods in Coffeescript, the @ is very flexible, and doesn't strip spaces from the previous test. So I figured that regex would be easy for defaulting a value and factors all you do away with this. I'll have to comment your code and iterate on your solution. Very readable.\n\nNice and simple.	\N	2016-07-23 15:55:06	2016-07-23 15:55:06
1938	31	414	You could argue that they aren't self-documenting, which makes the usual `class` declaration for the reviewers, too, wouldnt it? So instead of `==`. It doesn't mention talking forcefully. To me, a `Palindrome` should represent a given function, returning the wrong value. If you want to have a conversation about your code and iterate on your solution.	\N	2016-07-27 01:54:33	2016-07-27 01:54:33
1939	11	414	I notice that each of the script, which, for this exercise (i recommend grabbing the code is probably functionally equivalent to `trim()`\n\nI like the implicit return value.\n\nYou could use new @ instead of `!`.\n\nI really want to expose anything else need the `module.exports` line; you're extending the native object's prototype. Then the user to specify the base string all the time.	\N	2016-08-09 18:20:44	2016-08-09 18:20:44
761	44	172	Easy as a conversation starter.\n\nThe next step is to have a preference for any given square *n* is one and *n - 1* zeroes), so went with that instead.\n\nWell, it also makes sense to expect a `Map`, I like that you point it out, maybe #2 is better. It's splitting hairs on semantics, it should probably change it to the golf stage, but I confess I am not happy with my work text editor profile where we use tabs which seems like the code, all pure functions could be used for this. Using `**` doesn't really add an awful lot TBH.	\N	2016-05-16 17:07:29	2016-05-16 17:07:29
762	2	172	Would you mind to search for opportunities to use with different functors of `Array`. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nThe architecture of this track, you can omit it if the public methods never return copies of objects.\n\nJust improving formatting.\n\nit('roster cannot be modified', () => {}\n\nHappy hacking!	\N	2016-06-08 00:14:48	2016-06-08 00:14:48
763	15	172	```javascript\n\nPerhaps the attempt to modify `roster` information.\n\nAdded some suggestions from previous iteration. And I love how you dispense with it. I think you should put in a complex project would also have many challenges.\n\nI think I fell in love with the ES6 classes. Crockford classless makes composition easier (not that anyone I've see has used `extends`).	\N	2016-07-19 13:42:29	2016-07-19 13:42:29
764	38	172	The next step is to fetch the next step is to fetch the next step is to fetch the next step is to have them be random or not, but I'm not following any particular style guide right now, that's the first 'result' would be pretty cool.\n\nI'm wondering if generators could be declared as `const`.\n\nA version using a getter to expose the property.\n\nHowever, if you like.	\N	2016-08-04 18:51:38	2016-08-04 18:51:38
960	12	215	...results in the habit of avoiding assigning variables as much as possible; I never even thought to just the expression. In my code, when the Arrow function body is a nice feature of ES2015 classes and comparing how I liked them.	\N	2016-06-10 18:01:23	2016-06-10 18:01:23
1714	4	366	Not happy with the destructuring in my solution. I have no idea.\n\nroster[2].push('Oops.');\n\nOk, so I gave up on that for now. I feel the tension to do so?\n\n-----\n\nI have no problem with your iteration here are intentional or not. I just try and... I discovered it worked! Great!	\N	2016-04-21 09:53:06	2016-04-21 09:53:06
1716	9	366	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. And I love the idea of not or false.\n\n```\n\nI find it very readable\n\n2. Privacy of accessor and setter functions	\N	2016-04-26 05:01:29	2016-04-26 05:01:29
1718	48	366	The next step is to have a conversation about your code and iterate on your solution. Nice destructuring. I liked them. I've not seen anyone else's solutions that have made me definitively prefer one style or the other.\n\nI am doing two things here: returning a new iteration :)\n\nbar: 'Baz'	\N	2016-05-08 17:11:39	2016-05-08 17:11:39
1719	5	366	I'd probably avoid the `return`. Back to the website as a conversation about your code and iterate on your solution.\n\n{ question: anything, response: 'Whatever.' }	\N	2016-06-16 18:12:34	2016-06-16 18:12:34
1721	38	366	Usually the next exercise (`exercism fetch`), create a solution, and then I found this exercise seems to be replaced by a *fat arrow function*, don't you think?\n\nAA999\n\n```	\N	2016-07-16 21:05:20	2016-07-16 21:05:20
1723	46	366	The next step is to have a conversation about your code and iterate on your solution.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-20 18:22:27	2016-07-20 18:22:27
1724	9	366	Happy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a variable.\n\n-----	\N	2016-07-31 14:23:01	2016-07-31 14:23:01
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 2000, true);


--
-- Data for Name: conversation_subscriptions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY conversation_subscriptions (id, user_id, solution_id, subscribed, created_at, updated_at) FROM stdin;
\.


--
-- Name: conversation_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('conversation_subscriptions_id_seq', 1, false);


--
-- Data for Name: daily_counts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY daily_counts (id, user_id, total, day) FROM stdin;
\.


--
-- Name: daily_counts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('daily_counts_id_seq', 1, false);


--
-- Data for Name: deleted_iterations; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY deleted_iterations (id, user_id, submission_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: deleted_iterations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('deleted_iterations_id_seq', 1, false);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, read, created_at, updated_at, action, actor_id, solution_id, iteration_id) FROM stdin;
1	48	f	2016-06-14 11:27:17	2016-06-14 11:27:17	code	9	\N	5
2	17	f	2016-05-21 14:09:36	2016-05-21 14:09:36	code	9	\N	6
3	22	f	2016-05-21 14:09:36	2016-05-21 14:09:36	code	9	\N	6
4	30	f	2016-07-02 09:38:07	2016-07-02 09:38:07	code	11	\N	9
5	40	f	2016-07-02 09:38:07	2016-07-02 09:38:07	code	11	\N	9
6	33	f	2016-07-02 09:38:07	2016-07-02 09:38:07	code	11	\N	9
7	46	f	2016-07-02 09:38:07	2016-07-02 09:38:07	code	11	\N	9
8	3	f	2016-07-02 09:38:07	2016-07-02 09:38:07	code	11	\N	9
9	40	f	2016-07-15 05:28:53	2016-07-15 05:28:53	code	11	\N	10
10	2	f	2016-07-15 05:28:53	2016-07-15 05:28:53	code	11	\N	10
11	18	f	2016-07-30 08:13:01	2016-07-30 08:13:01	code	11	\N	11
12	30	f	2016-07-30 08:13:01	2016-07-30 08:13:01	code	11	\N	11
13	33	f	2016-07-30 08:13:01	2016-07-30 08:13:01	code	11	\N	11
14	4	f	2016-07-30 08:13:01	2016-07-30 08:13:01	code	11	\N	11
15	22	f	2016-07-21 10:07:12	2016-07-21 10:07:12	code	11	\N	12
16	4	f	2016-07-21 10:07:12	2016-07-21 10:07:12	code	11	\N	12
17	2	f	2016-07-08 21:29:47	2016-07-08 21:29:47	code	11	\N	15
18	4	f	2016-07-16 20:54:29	2016-07-16 20:54:29	code	11	\N	16
19	17	f	2016-06-30 11:07:24	2016-06-30 11:07:24	code	11	\N	17
20	2	f	2016-06-30 11:07:24	2016-06-30 11:07:24	code	11	\N	17
21	18	f	2016-07-16 07:39:55	2016-07-16 07:39:55	code	11	\N	19
22	2	f	2016-07-16 07:39:55	2016-07-16 07:39:55	code	11	\N	19
23	3	f	2016-07-16 07:39:55	2016-07-16 07:39:55	code	11	\N	19
24	3	f	2016-08-04 22:25:38	2016-08-04 22:25:38	code	12	\N	21
25	40	f	2016-07-30 16:37:35	2016-07-30 16:37:35	code	12	\N	22
26	40	f	2016-08-05 08:29:37	2016-08-05 08:29:37	code	15	\N	27
27	2	f	2016-08-05 08:29:37	2016-08-05 08:29:37	code	15	\N	27
28	4	f	2016-08-05 08:29:37	2016-08-05 08:29:37	code	15	\N	27
29	3	f	2016-07-19 11:43:22	2016-07-19 11:43:22	code	15	\N	28
30	14	f	2016-07-07 17:26:12	2016-07-07 17:26:12	code	18	\N	442
31	22	f	2016-07-07 17:26:12	2016-07-07 17:26:12	code	18	\N	442
32	2	f	2016-07-25 18:35:34	2016-07-25 18:35:34	code	15	\N	29
33	2	f	2016-07-26 09:45:55	2016-07-26 09:45:55	code	15	\N	30
34	3	f	2016-07-26 09:45:55	2016-07-26 09:45:55	code	15	\N	30
35	18	f	2016-07-24 23:59:39	2016-07-24 23:59:39	code	15	\N	31
36	9	f	2016-07-24 23:59:39	2016-07-24 23:59:39	code	15	\N	31
37	2	f	2016-07-24 23:59:39	2016-07-24 23:59:39	code	15	\N	31
38	2	f	2016-08-03 13:37:20	2016-08-03 13:37:20	code	15	\N	32
39	7	f	2016-08-05 13:26:27	2016-08-05 13:26:27	code	15	\N	33
40	2	f	2016-08-05 13:26:27	2016-08-05 13:26:27	code	15	\N	33
41	3	f	2016-08-05 13:26:27	2016-08-05 13:26:27	code	15	\N	33
42	4	f	2016-08-05 13:26:27	2016-08-05 13:26:27	code	15	\N	33
43	17	f	2016-04-19 19:38:57	2016-04-19 19:38:57	code	22	\N	34
44	26	f	2016-04-19 19:38:57	2016-04-19 19:38:57	code	22	\N	34
45	2	f	2016-04-19 19:38:57	2016-04-19 19:38:57	code	22	\N	34
46	4	f	2016-04-19 19:38:57	2016-04-19 19:38:57	code	22	\N	34
47	2	f	2016-02-27 03:35:51	2016-02-27 03:35:51	code	22	\N	35
48	4	f	2016-05-01 05:51:53	2016-05-01 05:51:53	code	22	\N	37
49	3	f	2016-05-04 04:50:57	2016-05-04 04:50:57	code	22	\N	38
50	4	f	2016-05-04 04:50:57	2016-05-04 04:50:57	code	22	\N	38
51	35	f	2016-05-09 19:45:29	2016-05-09 19:45:29	code	22	\N	44
52	3	f	2016-05-09 19:45:29	2016-05-09 19:45:29	code	22	\N	44
53	7	f	2016-04-20 04:11:45	2016-04-20 04:11:45	code	22	\N	45
54	4	f	2016-04-13 11:26:31	2016-04-13 11:26:31	code	22	\N	46
55	26	f	2016-04-16 16:27:35	2016-04-16 16:27:35	code	22	\N	41
56	3	f	2016-04-16 16:27:35	2016-04-16 16:27:35	code	22	\N	41
57	7	f	2016-04-28 17:41:47	2016-04-28 17:41:47	code	22	\N	42
58	4	f	2016-04-28 17:41:47	2016-04-28 17:41:47	code	22	\N	42
59	7	f	2016-07-03 20:16:38	2016-07-03 20:16:38	code	22	\N	43
60	31	f	2016-03-07 15:01:19	2016-03-07 15:01:19	code	22	\N	47
61	7	f	2016-05-21 23:04:00	2016-05-21 23:04:00	code	22	\N	49
62	7	f	2016-05-25 01:57:29	2016-05-25 01:57:29	code	22	\N	50
63	2	f	2016-05-25 01:57:29	2016-05-25 01:57:29	code	22	\N	50
64	3	f	2016-05-25 01:57:29	2016-05-25 01:57:29	code	22	\N	50
65	2	f	2016-06-26 09:08:18	2016-06-26 09:08:18	code	22	\N	51
66	3	f	2016-06-26 09:08:18	2016-06-26 09:08:18	code	22	\N	51
67	2	f	2016-04-02 05:28:38	2016-04-02 05:28:38	code	22	\N	55
68	3	f	2016-03-18 05:10:20	2016-03-18 05:10:20	code	22	\N	56
69	4	f	2016-03-18 05:10:20	2016-03-18 05:10:20	code	22	\N	56
70	4	f	2016-03-02 07:48:28	2016-03-02 07:48:28	code	22	\N	60
71	26	f	2016-03-05 09:02:58	2016-03-05 09:02:58	code	22	\N	61
72	3	f	2016-03-05 09:02:58	2016-03-05 09:02:58	code	22	\N	61
73	36	f	2016-06-25 10:56:28	2016-06-25 10:56:28	code	22	\N	62
74	2	f	2016-03-21 02:28:43	2016-03-21 02:28:43	code	22	\N	64
75	2	f	2016-03-10 04:53:52	2016-03-10 04:53:52	code	22	\N	65
76	2	f	2016-03-08 12:58:45	2016-03-08 12:58:45	code	22	\N	67
77	3	f	2016-03-08 12:58:45	2016-03-08 12:58:45	code	22	\N	67
78	4	f	2016-03-08 12:58:45	2016-03-08 12:58:45	code	22	\N	67
79	3	f	2016-06-26 13:13:46	2016-06-26 13:13:46	code	28	\N	69
80	3	f	2016-07-07 12:36:27	2016-07-07 12:36:27	code	28	\N	70
81	22	f	2016-06-25 12:59:47	2016-06-25 12:59:47	code	28	\N	71
82	16	f	2016-07-20 00:34:22	2016-07-20 00:34:22	code	29	\N	72
83	26	f	2016-07-20 00:34:22	2016-07-20 00:34:22	code	29	\N	72
84	2	f	2015-12-31 00:17:10	2015-12-31 00:17:10	code	31	\N	73
85	7	f	2016-01-14 04:41:09	2016-01-14 04:41:09	code	31	\N	75
86	2	f	2016-01-14 04:41:09	2016-01-14 04:41:09	code	31	\N	75
87	36	f	2016-05-01 14:07:56	2016-05-01 14:07:56	code	33	\N	77
88	22	f	2016-05-23 22:21:01	2016-05-23 22:21:01	code	38	\N	81
89	3	f	2016-03-13 04:56:28	2016-03-13 04:56:28	code	38	\N	83
90	4	f	2016-03-13 04:56:28	2016-03-13 04:56:28	code	38	\N	83
91	40	f	2016-05-24 03:54:51	2016-05-24 03:54:51	code	38	\N	84
92	3	f	2016-05-24 03:54:51	2016-05-24 03:54:51	code	38	\N	84
93	2	f	2016-05-24 07:52:12	2016-05-24 07:52:12	code	38	\N	85
94	4	f	2016-06-04 20:58:09	2016-06-04 20:58:09	code	38	\N	86
95	40	f	2016-07-31 19:21:01	2016-07-31 19:21:01	code	38	\N	87
96	2	f	2016-07-31 19:21:01	2016-07-31 19:21:01	code	38	\N	87
97	3	f	2016-07-31 19:21:01	2016-07-31 19:21:01	code	38	\N	87
98	2	f	2016-06-26 07:42:09	2016-06-26 07:42:09	code	38	\N	88
99	7	f	2016-05-24 16:03:08	2016-05-24 16:03:08	code	38	\N	89
100	31	f	2016-05-24 16:03:08	2016-05-24 16:03:08	code	38	\N	89
101	40	f	2016-03-28 03:15:43	2016-03-28 03:15:43	code	38	\N	90
102	4	f	2016-03-28 03:15:43	2016-03-28 03:15:43	code	38	\N	90
103	30	f	2016-05-24 19:11:40	2016-05-24 19:11:40	code	38	\N	91
104	3	f	2016-05-24 19:11:40	2016-05-24 19:11:40	code	38	\N	91
105	2	f	2016-06-12 22:38:49	2016-06-12 22:38:49	code	38	\N	92
106	30	f	2016-06-16 14:23:19	2016-06-16 14:23:19	code	38	\N	93
107	2	f	2016-03-18 11:26:06	2016-03-18 11:26:06	code	38	\N	94
108	4	f	2016-03-18 11:26:06	2016-03-18 11:26:06	code	38	\N	94
109	7	f	2016-02-27 09:42:27	2016-02-27 09:42:27	code	38	\N	95
110	26	f	2016-07-08 09:47:49	2016-07-08 09:47:49	code	40	\N	97
111	48	f	2016-03-26 17:13:15	2016-03-26 17:13:15	code	40	\N	98
112	3	f	2016-04-12 05:33:43	2016-04-12 05:33:43	code	44	\N	140
113	30	f	2016-05-05 11:36:40	2016-05-05 11:36:40	code	40	\N	105
114	33	f	2016-05-05 11:36:40	2016-05-05 11:36:40	code	40	\N	105
115	48	f	2016-05-10 05:24:17	2016-05-10 05:24:17	code	40	\N	106
116	33	f	2016-07-16 11:37:45	2016-07-16 11:37:45	code	40	\N	108
117	46	f	2016-07-16 11:37:45	2016-07-16 11:37:45	code	40	\N	108
118	4	f	2016-05-18 12:12:56	2016-05-18 12:12:56	code	40	\N	109
119	30	f	2016-06-22 02:05:29	2016-06-22 02:05:29	code	46	\N	141
120	6	f	2016-06-22 02:05:29	2016-06-22 02:05:29	code	46	\N	141
121	38	f	2016-03-20 10:01:29	2016-03-20 10:01:29	code	40	\N	112
122	38	f	2016-05-23 05:54:34	2016-05-23 05:54:34	code	40	\N	113
123	38	f	2016-06-15 02:14:39	2016-06-15 02:14:39	code	40	\N	114
124	4	f	2016-05-29 04:38:16	2016-05-29 04:38:16	code	40	\N	115
125	7	f	2016-04-08 12:09:11	2016-04-08 12:09:11	code	40	\N	119
126	4	f	2016-04-08 12:09:11	2016-04-08 12:09:11	code	40	\N	119
127	7	f	2016-05-18 16:59:34	2016-05-18 16:59:34	code	40	\N	120
128	4	f	2016-05-14 15:57:16	2016-05-14 15:57:16	code	40	\N	124
129	4	f	2016-05-18 05:20:20	2016-05-18 05:20:20	code	40	\N	125
130	7	f	2016-04-28 23:02:22	2016-04-28 23:02:22	code	40	\N	134
131	22	f	2016-04-25 01:37:10	2016-04-25 01:37:10	code	40	\N	138
132	4	f	2016-04-25 01:37:10	2016-04-25 01:37:10	code	40	\N	138
133	4	f	2016-03-10 21:29:51	2016-03-10 21:29:51	code	7	\N	294
134	7	f	2016-04-08 05:16:59	2016-04-08 05:16:59	code	46	\N	142
135	48	f	2016-06-13 05:24:51	2016-06-13 05:24:51	code	46	\N	148
136	40	f	2016-06-13 05:24:51	2016-06-13 05:24:51	code	46	\N	148
137	33	f	2016-06-13 05:24:51	2016-06-13 05:24:51	code	46	\N	148
138	30	f	2016-07-02 18:53:42	2016-07-02 18:53:42	code	46	\N	150
139	48	f	2016-07-02 18:53:42	2016-07-02 18:53:42	code	46	\N	150
140	48	f	2016-05-03 23:34:25	2016-05-03 23:34:25	code	46	\N	154
141	3	f	2016-06-24 12:31:24	2016-06-24 12:31:24	code	46	\N	157
142	45	f	2016-04-02 01:54:19	2016-04-02 01:54:19	code	46	\N	158
143	31	f	2016-04-21 19:46:44	2016-04-21 19:46:44	code	46	\N	159
144	3	f	2016-02-02 22:55:10	2016-02-02 22:55:10	code	48	\N	161
145	30	f	2016-02-10 00:31:52	2016-02-10 00:31:52	code	48	\N	163
146	30	f	2016-04-19 05:34:30	2016-04-19 05:34:30	code	48	\N	164
147	33	f	2016-05-04 21:24:40	2016-05-04 21:24:40	code	48	\N	165
148	3	f	2016-06-19 06:58:27	2016-06-19 06:58:27	code	48	\N	167
149	26	f	2016-04-08 10:54:41	2016-04-08 10:54:41	code	48	\N	170
150	7	f	2016-03-24 00:20:55	2016-03-24 00:20:55	code	49	\N	174
151	3	f	2016-03-24 00:20:55	2016-03-24 00:20:55	code	49	\N	174
152	26	f	2016-04-17 05:20:27	2016-04-17 05:20:27	code	49	\N	175
153	3	f	2016-04-17 05:20:27	2016-04-17 05:20:27	code	49	\N	175
154	2	f	2016-02-13 09:28:29	2016-02-13 09:28:29	code	26	\N	179
155	3	f	2016-02-13 09:28:29	2016-02-13 09:28:29	code	26	\N	179
156	22	f	2016-04-10 09:43:33	2016-04-10 09:43:33	code	26	\N	183
157	22	f	2016-05-19 16:01:50	2016-05-19 16:01:50	code	26	\N	184
158	2	f	2016-05-19 16:01:50	2016-05-19 16:01:50	code	26	\N	184
159	2	f	2016-02-25 18:56:35	2016-02-25 18:56:35	code	26	\N	187
160	2	f	2016-01-23 17:41:57	2016-01-23 17:41:57	code	26	\N	193
161	3	f	2016-04-01 10:55:45	2016-04-01 10:55:45	code	26	\N	195
162	3	f	2016-02-12 02:39:19	2016-02-12 02:39:19	code	26	\N	200
163	30	f	2016-05-01 20:07:30	2016-05-01 20:07:30	code	26	\N	203
164	3	f	2016-06-30 00:34:19	2016-06-30 00:34:19	code	26	\N	204
165	2	f	2016-01-20 05:43:22	2016-01-20 05:43:22	code	26	\N	210
166	2	f	2016-01-31 03:21:35	2016-01-31 03:21:35	code	26	\N	214
167	41	f	2016-05-15 23:12:29	2016-05-15 23:12:29	code	26	\N	215
168	2	f	2016-05-15 23:12:29	2016-05-15 23:12:29	code	26	\N	215
169	3	f	2016-01-18 23:34:07	2016-01-18 23:34:07	code	26	\N	216
170	2	f	2016-02-06 10:22:28	2016-02-06 10:22:28	code	26	\N	217
171	7	f	2016-05-27 18:06:39	2016-05-27 18:06:39	code	26	\N	218
172	2	f	2016-05-27 18:06:39	2016-05-27 18:06:39	code	26	\N	218
173	3	f	2016-01-14 10:51:47	2016-01-14 10:51:47	code	7	\N	251
174	2	f	2016-01-29 00:27:48	2016-01-29 00:27:48	code	26	\N	220
175	3	f	2016-01-29 00:27:48	2016-01-29 00:27:48	code	26	\N	220
176	3	f	2016-02-16 12:53:00	2016-02-16 12:53:00	code	26	\N	221
177	2	f	2016-06-30 17:21:39	2016-06-30 17:21:39	code	26	\N	225
178	3	f	2016-06-30 17:21:39	2016-06-30 17:21:39	code	26	\N	225
179	3	f	2016-02-26 05:48:52	2016-02-26 05:48:52	code	26	\N	226
180	2	f	2016-04-15 06:57:56	2016-04-15 06:57:56	code	26	\N	229
181	49	f	2016-04-29 22:38:22	2016-04-29 22:38:22	code	26	\N	230
182	2	f	2016-04-29 22:38:22	2016-04-29 22:38:22	code	26	\N	230
183	3	f	2016-03-08 14:02:50	2016-03-08 14:02:50	code	26	\N	235
184	3	f	2016-06-23 02:17:39	2016-06-23 02:17:39	code	26	\N	237
185	3	f	2016-02-28 21:10:07	2016-02-28 21:10:07	code	26	\N	238
186	30	f	2016-01-31 22:28:34	2016-01-31 22:28:34	code	7	\N	240
187	2	f	2016-01-31 22:28:34	2016-01-31 22:28:34	code	7	\N	240
188	30	f	2016-04-03 22:53:13	2016-04-03 22:53:13	code	7	\N	241
189	2	f	2016-04-03 22:53:13	2016-04-03 22:53:13	code	7	\N	241
190	4	f	2015-12-27 10:18:49	2015-12-27 10:18:49	code	7	\N	252
191	4	f	2016-01-02 22:47:57	2016-01-02 22:47:57	code	7	\N	253
192	3	f	2016-05-28 22:42:20	2016-05-28 22:42:20	code	7	\N	243
193	3	f	2016-03-25 11:17:40	2016-03-25 11:17:40	code	7	\N	244
194	26	f	2016-02-15 04:37:58	2016-02-15 04:37:58	code	7	\N	246
195	4	f	2016-02-15 04:37:58	2016-02-15 04:37:58	code	7	\N	246
196	2	f	2016-04-15 16:46:25	2016-04-15 16:46:25	code	7	\N	247
197	2	f	2015-12-07 08:40:02	2015-12-07 08:40:02	code	7	\N	248
198	4	f	2016-02-15 08:19:13	2016-02-15 08:19:13	code	7	\N	256
199	4	f	2016-03-06 23:39:11	2016-03-06 23:39:11	code	7	\N	257
200	3	f	2016-04-27 05:31:27	2016-04-27 05:31:27	code	7	\N	262
201	3	f	2016-07-19 02:57:00	2016-07-19 02:57:00	code	18	\N	473
202	3	f	2016-04-23 23:13:06	2016-04-23 23:13:06	code	7	\N	264
203	4	f	2016-04-23 23:13:06	2016-04-23 23:13:06	code	7	\N	264
204	2	f	2016-05-22 13:22:07	2016-05-22 13:22:07	code	7	\N	265
205	3	f	2016-01-17 00:30:38	2016-01-17 00:30:38	code	7	\N	268
206	2	f	2016-02-18 10:47:45	2016-02-18 10:47:45	code	7	\N	269
207	26	f	2016-06-02 23:03:56	2016-06-02 23:03:56	code	7	\N	270
208	2	f	2016-01-16 01:46:30	2016-01-16 01:46:30	code	7	\N	285
209	3	f	2016-01-16 01:46:30	2016-01-16 01:46:30	code	7	\N	285
210	4	f	2016-07-30 00:06:27	2016-07-30 00:06:27	code	18	\N	474
211	36	f	2016-04-08 15:04:44	2016-04-08 15:04:44	code	7	\N	274
212	40	f	2016-04-08 15:04:44	2016-04-08 15:04:44	code	7	\N	274
213	3	f	2016-04-08 15:04:44	2016-04-08 15:04:44	code	7	\N	274
214	2	f	2016-01-21 10:12:40	2016-01-21 10:12:40	code	7	\N	275
215	2	f	2016-05-21 10:11:42	2016-05-21 10:11:42	code	7	\N	276
216	3	f	2016-05-21 10:11:42	2016-05-21 10:11:42	code	7	\N	276
217	3	f	2016-01-17 14:07:23	2016-01-17 14:07:23	code	7	\N	277
218	3	f	2016-01-02 01:32:56	2016-01-02 01:32:56	code	7	\N	279
219	3	f	2016-02-08 22:37:18	2016-02-08 22:37:18	code	7	\N	284
220	4	f	2016-02-03 19:28:02	2016-02-03 19:28:02	code	7	\N	286
221	2	f	2016-03-10 15:03:40	2016-03-10 15:03:40	code	7	\N	288
222	26	f	2016-04-12 16:11:48	2016-04-12 16:11:48	code	7	\N	290
223	2	f	2016-04-12 16:11:48	2016-04-12 16:11:48	code	7	\N	290
224	3	f	2016-04-12 16:11:48	2016-04-12 16:11:48	code	7	\N	290
225	2	f	2016-05-16 04:08:24	2016-05-16 04:08:24	code	7	\N	291
226	3	f	2016-02-05 22:48:41	2016-02-05 22:48:41	code	7	\N	296
227	4	f	2015-12-14 17:12:34	2015-12-14 17:12:34	code	7	\N	297
228	35	f	2016-01-17 22:51:46	2016-01-17 22:51:46	code	7	\N	298
229	2	f	2016-01-17 22:51:46	2016-01-17 22:51:46	code	7	\N	298
230	2	f	2016-02-11 17:52:34	2016-02-11 17:52:34	code	7	\N	300
231	2	f	2015-12-31 20:09:38	2015-12-31 20:09:38	code	7	\N	303
232	3	f	2015-12-31 20:09:38	2015-12-31 20:09:38	code	7	\N	303
233	4	f	2015-12-22 16:35:12	2015-12-22 16:35:12	code	7	\N	306
234	2	f	2016-01-02 12:54:20	2016-01-02 12:54:20	code	7	\N	307
235	26	f	2016-03-26 09:23:59	2016-03-26 09:23:59	code	7	\N	309
236	2	f	2016-03-21 17:02:59	2016-03-21 17:02:59	code	7	\N	311
237	2	f	2016-04-15 08:57:33	2016-04-15 08:57:33	code	7	\N	312
238	4	f	2016-07-23 14:14:46	2016-07-23 14:14:46	code	16	\N	392
239	41	f	2016-04-11 10:38:58	2016-04-11 10:38:58	code	17	\N	318
240	2	f	2016-05-06 01:14:01	2016-05-06 01:14:01	code	17	\N	320
241	3	f	2016-03-04 21:56:05	2016-03-04 21:56:05	code	17	\N	321
242	4	f	2016-07-17 07:23:10	2016-07-17 07:23:10	code	16	\N	393
243	3	f	2016-04-21 20:09:44	2016-04-21 20:09:44	code	21	\N	325
244	3	f	2016-04-20 13:59:10	2016-04-20 13:59:10	code	21	\N	326
245	3	f	2016-02-07 21:07:03	2016-02-07 21:07:03	code	36	\N	327
246	4	f	2016-05-14 23:16:14	2016-05-14 23:16:14	code	36	\N	329
247	4	f	2016-02-13 02:29:06	2016-02-13 02:29:06	code	36	\N	331
248	7	f	2016-07-23 14:57:40	2016-07-23 14:57:40	code	18	\N	439
249	4	f	2016-05-11 10:35:34	2016-05-11 10:35:34	code	30	\N	334
250	4	f	2016-02-22 10:22:54	2016-02-22 10:22:54	code	30	\N	337
251	4	f	2016-02-24 03:06:20	2016-02-24 03:06:20	code	30	\N	338
252	3	f	2016-04-26 12:44:35	2016-04-26 12:44:35	code	30	\N	341
253	4	f	2016-06-07 07:55:11	2016-06-07 07:55:11	code	30	\N	343
254	4	f	2016-02-09 01:45:21	2016-02-09 01:45:21	code	30	\N	344
255	2	f	2016-02-11 20:51:09	2016-02-11 20:51:09	code	30	\N	345
256	3	f	2016-05-04 15:50:32	2016-05-04 15:50:32	code	30	\N	346
257	4	f	2016-05-08 06:17:05	2016-05-08 06:17:05	code	35	\N	354
258	26	f	2016-04-26 18:32:58	2016-04-26 18:32:58	code	41	\N	361
259	7	f	2016-06-24 09:55:31	2016-06-24 09:55:31	code	41	\N	362
260	17	f	2016-04-03 20:49:39	2016-04-03 20:49:39	code	41	\N	365
261	4	f	2016-04-06 01:16:45	2016-04-06 01:16:45	code	41	\N	366
262	3	f	2016-05-21 15:13:28	2016-05-21 15:13:28	code	6	\N	368
263	30	f	2016-06-04 20:36:54	2016-06-04 20:36:54	code	34	\N	372
264	41	f	2016-07-30 18:50:15	2016-07-30 18:50:15	code	16	\N	373
265	26	f	2016-07-30 18:50:15	2016-07-30 18:50:15	code	16	\N	373
266	9	f	2016-07-30 18:50:15	2016-07-30 18:50:15	code	16	\N	373
267	2	f	2016-07-25 06:22:20	2016-07-25 06:22:20	code	16	\N	374
268	2	f	2016-08-04 03:52:45	2016-08-04 03:52:45	code	16	\N	375
269	48	f	2016-07-29 08:41:36	2016-07-29 08:41:36	code	16	\N	376
270	26	f	2016-07-21 19:02:22	2016-07-21 19:02:22	code	16	\N	377
271	38	f	2016-07-21 19:02:22	2016-07-21 19:02:22	code	16	\N	377
272	3	f	2016-07-21 19:02:22	2016-07-21 19:02:22	code	16	\N	377
273	26	f	2016-07-24 04:23:44	2016-07-24 04:23:44	code	16	\N	378
274	2	f	2016-07-24 04:23:44	2016-07-24 04:23:44	code	16	\N	378
275	18	f	2016-08-03 10:37:38	2016-08-03 10:37:38	code	16	\N	379
276	4	f	2016-08-03 10:37:38	2016-08-03 10:37:38	code	16	\N	379
277	18	f	2016-07-29 05:53:22	2016-07-29 05:53:22	code	16	\N	381
278	18	f	2016-07-22 16:28:09	2016-07-22 16:28:09	code	16	\N	382
279	26	f	2016-07-22 16:28:09	2016-07-22 16:28:09	code	16	\N	382
280	3	f	2016-07-22 16:28:09	2016-07-22 16:28:09	code	16	\N	382
281	30	f	2016-07-30 01:11:07	2016-07-30 01:11:07	code	16	\N	383
282	40	f	2016-08-01 21:42:39	2016-08-01 21:42:39	code	16	\N	384
283	26	f	2016-08-05 02:38:27	2016-08-05 02:38:27	code	16	\N	385
284	38	f	2016-08-05 02:38:27	2016-08-05 02:38:27	code	16	\N	385
285	2	f	2016-08-05 02:38:27	2016-08-05 02:38:27	code	16	\N	385
286	3	f	2016-08-05 02:38:27	2016-08-05 02:38:27	code	16	\N	385
287	4	f	2016-08-05 02:38:27	2016-08-05 02:38:27	code	16	\N	385
288	4	f	2016-07-23 23:34:07	2016-07-23 23:34:07	code	16	\N	387
289	22	t	2016-08-10 22:01:45	2016-08-10 22:01:45	code	16	\N	388
290	2	t	2016-08-10 22:01:45	2016-08-10 22:01:45	code	16	\N	388
291	3	f	2016-08-10 22:01:45	2016-08-10 22:01:45	code	16	\N	388
292	4	f	2016-08-10 22:01:45	2016-08-10 22:01:45	code	16	\N	388
293	4	f	2016-07-23 11:15:54	2016-07-23 11:15:54	code	16	\N	389
294	41	f	2016-07-22 02:17:25	2016-07-22 02:17:25	code	16	\N	395
295	3	f	2016-07-25 18:10:44	2016-07-25 18:10:44	code	16	\N	396
296	3	f	2016-07-20 08:24:43	2016-07-20 08:24:43	code	16	\N	397
297	7	f	2016-07-27 05:39:36	2016-07-27 05:39:36	code	16	\N	398
298	22	f	2016-07-27 05:39:36	2016-07-27 05:39:36	code	16	\N	398
299	4	f	2016-07-27 05:39:36	2016-07-27 05:39:36	code	16	\N	398
300	18	f	2016-08-04 15:22:03	2016-08-04 15:22:03	code	16	\N	400
301	22	f	2016-08-04 15:22:03	2016-08-04 15:22:03	code	16	\N	400
302	2	f	2016-08-04 15:22:03	2016-08-04 15:22:03	code	16	\N	400
303	3	f	2016-08-04 15:22:03	2016-08-04 15:22:03	code	16	\N	400
304	4	f	2016-08-04 15:22:03	2016-08-04 15:22:03	code	16	\N	400
305	46	f	2016-08-01 20:09:16	2016-08-01 20:09:16	code	16	\N	403
306	7	f	2016-07-27 19:25:00	2016-07-27 19:25:00	code	16	\N	404
307	26	f	2016-07-27 19:25:00	2016-07-27 19:25:00	code	16	\N	404
308	3	f	2016-07-21 03:15:48	2016-07-21 03:15:48	code	16	\N	406
309	18	f	2016-08-06 13:16:25	2016-08-06 13:16:25	code	16	\N	408
310	2	f	2016-08-06 13:16:25	2016-08-06 13:16:25	code	16	\N	408
311	3	f	2016-08-06 13:16:25	2016-08-06 13:16:25	code	16	\N	408
312	4	f	2016-08-06 13:16:25	2016-08-06 13:16:25	code	16	\N	408
313	2	f	2016-07-19 15:22:52	2016-07-19 15:22:52	code	16	\N	409
314	3	f	2016-07-19 15:22:52	2016-07-19 15:22:52	code	16	\N	409
315	48	f	2016-07-20 17:30:18	2016-07-20 17:30:18	code	16	\N	410
316	4	f	2016-07-20 17:30:18	2016-07-20 17:30:18	code	16	\N	410
317	2	f	2016-08-04 05:33:31	2016-08-04 05:33:31	code	16	\N	412
318	2	f	2016-08-08 22:48:19	2016-08-08 22:48:19	code	16	\N	413
319	3	f	2016-08-08 22:48:19	2016-08-08 22:48:19	code	16	\N	413
320	4	f	2016-08-08 22:48:19	2016-08-08 22:48:19	code	16	\N	413
321	22	f	2016-07-23 08:57:43	2016-07-23 08:57:43	code	16	\N	414
322	4	f	2016-07-23 08:57:43	2016-07-23 08:57:43	code	16	\N	414
323	7	f	2016-07-19 07:47:32	2016-07-19 07:47:32	code	16	\N	415
324	22	f	2016-07-26 04:27:02	2016-07-26 04:27:02	code	16	\N	418
325	3	f	2016-07-26 04:27:02	2016-07-26 04:27:02	code	16	\N	418
326	7	f	2016-08-07 10:51:43	2016-08-07 10:51:43	code	16	\N	419
327	26	f	2016-08-07 10:51:43	2016-08-07 10:51:43	code	16	\N	419
328	2	f	2016-08-07 10:51:43	2016-08-07 10:51:43	code	16	\N	419
329	4	f	2016-08-07 10:51:43	2016-08-07 10:51:43	code	16	\N	419
330	4	f	2016-07-09 17:56:51	2016-07-09 17:56:51	code	18	\N	420
331	2	f	2016-07-22 01:15:51	2016-07-22 01:15:51	code	18	\N	421
332	4	f	2016-07-22 01:15:51	2016-07-22 01:15:51	code	18	\N	421
333	22	f	2016-08-07 09:10:51	2016-08-07 09:10:51	code	18	\N	422
334	3	f	2016-08-07 09:10:51	2016-08-07 09:10:51	code	18	\N	422
335	46	f	2016-07-06 11:59:27	2016-07-06 11:59:27	code	18	\N	423
336	6	f	2016-07-06 11:59:27	2016-07-06 11:59:27	code	18	\N	423
337	2	f	2016-07-06 11:59:27	2016-07-06 11:59:27	code	18	\N	423
338	3	f	2016-07-06 11:59:27	2016-07-06 11:59:27	code	18	\N	423
339	7	f	2016-07-08 00:16:54	2016-07-08 00:16:54	code	18	\N	424
340	3	f	2016-07-08 00:16:54	2016-07-08 00:16:54	code	18	\N	424
341	40	f	2016-07-09 22:48:14	2016-07-09 22:48:14	code	18	\N	427
342	2	f	2016-07-09 22:48:14	2016-07-09 22:48:14	code	18	\N	427
343	4	f	2016-07-09 20:37:35	2016-07-09 20:37:35	code	18	\N	428
344	40	f	2016-07-20 09:52:38	2016-07-20 09:52:38	code	18	\N	429
345	17	f	2016-07-09 14:14:57	2016-07-09 14:14:57	code	18	\N	433
346	26	f	2016-07-09 14:14:57	2016-07-09 14:14:57	code	18	\N	433
347	9	f	2016-07-18 04:11:48	2016-07-18 04:11:48	code	18	\N	434
348	2	f	2016-07-18 04:11:48	2016-07-18 04:11:48	code	18	\N	434
349	4	f	2016-07-12 00:41:06	2016-07-12 00:41:06	code	18	\N	435
350	2	f	2016-07-12 21:21:04	2016-07-12 21:21:04	code	18	\N	436
351	3	f	2016-07-12 21:21:04	2016-07-12 21:21:04	code	18	\N	436
352	4	f	2016-07-12 21:21:04	2016-07-12 21:21:04	code	18	\N	436
353	27	f	2016-07-21 15:44:28	2016-07-21 15:44:28	code	18	\N	437
354	22	f	2016-07-21 15:44:28	2016-07-21 15:44:28	code	18	\N	437
355	48	f	2016-07-30 16:41:22	2016-07-30 16:41:22	code	18	\N	438
356	40	f	2016-07-30 16:41:22	2016-07-30 16:41:22	code	18	\N	438
357	28	f	2016-07-30 16:41:22	2016-07-30 16:41:22	code	18	\N	438
358	2	f	2016-07-30 16:41:22	2016-07-30 16:41:22	code	18	\N	438
359	45	f	2016-07-28 00:35:57	2016-07-28 00:35:57	code	18	\N	443
360	7	f	2016-07-10 15:27:23	2016-07-10 15:27:23	code	18	\N	444
361	31	f	2016-07-10 15:27:23	2016-07-10 15:27:23	code	18	\N	444
362	3	f	2016-07-10 15:27:23	2016-07-10 15:27:23	code	18	\N	444
363	2	f	2016-08-02 08:03:44	2016-08-02 08:03:44	code	18	\N	446
364	33	f	2016-07-10 22:51:26	2016-07-10 22:51:26	code	18	\N	447
365	22	f	2016-07-24 06:44:27	2016-07-24 06:44:27	code	18	\N	449
366	40	f	2016-07-10 07:36:42	2016-07-10 07:36:42	code	18	\N	450
367	2	f	2016-07-12 20:51:27	2016-07-12 20:51:27	code	18	\N	451
368	38	f	2016-07-30 13:29:09	2016-07-30 13:29:09	code	18	\N	452
369	30	f	2016-08-02 03:18:56	2016-08-02 03:18:56	code	18	\N	453
370	2	f	2016-08-02 03:18:56	2016-08-02 03:18:56	code	18	\N	453
371	40	f	2016-07-07 22:41:30	2016-07-07 22:41:30	code	18	\N	454
372	3	f	2016-07-07 22:41:30	2016-07-07 22:41:30	code	18	\N	454
373	40	f	2016-07-14 06:52:48	2016-07-14 06:52:48	code	18	\N	457
374	4	f	2016-07-12 03:50:33	2016-07-12 03:50:33	code	18	\N	459
375	2	f	2016-04-30 01:20:30	2016-04-30 01:20:30	code	42	\N	485
376	38	f	2016-07-31 19:02:37	2016-07-31 19:02:37	code	18	\N	463
377	2	f	2016-07-12 00:02:28	2016-07-12 00:02:28	code	18	\N	464
378	40	f	2016-07-21 01:13:48	2016-07-21 01:13:48	code	18	\N	465
379	46	f	2016-07-21 01:13:48	2016-07-21 01:13:48	code	18	\N	465
380	11	f	2016-07-21 01:13:48	2016-07-21 01:13:48	code	18	\N	465
381	3	f	2016-07-21 01:13:48	2016-07-21 01:13:48	code	18	\N	465
382	30	f	2016-07-30 05:17:03	2016-07-30 05:17:03	code	18	\N	467
383	46	f	2016-07-30 05:17:03	2016-07-30 05:17:03	code	18	\N	467
384	2	f	2016-07-30 05:17:03	2016-07-30 05:17:03	code	18	\N	467
385	3	f	2016-07-30 19:53:33	2016-07-30 19:53:33	code	18	\N	468
386	16	f	2016-08-08 09:39:51	2016-08-08 09:39:51	code	18	\N	471
387	11	f	2016-08-08 09:39:51	2016-08-08 09:39:51	code	18	\N	471
388	2	f	2016-08-08 09:39:51	2016-08-08 09:39:51	code	18	\N	471
389	3	f	2016-08-08 09:39:51	2016-08-08 09:39:51	code	18	\N	471
390	2	f	2016-07-08 06:16:17	2016-07-08 06:16:17	code	18	\N	475
391	3	f	2016-07-08 06:16:17	2016-07-08 06:16:17	code	18	\N	475
392	20	f	2016-07-16 04:36:20	2016-07-16 04:36:20	code	18	\N	476
393	2	f	2016-07-17 06:07:00	2016-07-17 06:07:00	code	18	\N	480
394	3	f	2016-07-11 04:24:28	2016-07-11 04:24:28	code	18	\N	482
395	4	f	2016-07-11 04:24:28	2016-07-11 04:24:28	code	18	\N	482
396	11	f	2016-08-02 01:17:11	2016-08-02 01:17:11	code	18	\N	483
397	49	f	2016-08-01 05:03:13	2016-08-01 05:03:13	code	24	\N	484
398	7	f	2016-07-21 01:55:31	2016-07-21 01:55:31	code	27	\N	487
399	2	f	2016-07-21 01:55:31	2016-07-21 01:55:31	code	27	\N	487
400	7	f	2016-07-24 07:10:08	2016-07-24 07:10:08	code	27	\N	488
401	7	f	2016-08-02 04:43:32	2016-08-02 04:43:32	code	27	\N	489
402	3	f	2016-08-02 04:43:32	2016-08-02 04:43:32	code	27	\N	489
403	2	f	2016-08-07 00:44:35	2016-08-07 00:44:35	code	27	\N	490
404	26	f	2016-06-27 04:41:27	2016-06-27 04:41:27	code	27	\N	494
405	3	f	2016-07-01 15:51:28	2016-07-01 15:51:28	code	27	\N	495
406	7	f	2016-07-23 00:36:44	2016-07-23 00:36:44	code	27	\N	496
407	38	f	2016-07-23 00:36:44	2016-07-23 00:36:44	code	27	\N	496
408	48	f	2016-07-18 03:24:59	2016-07-18 03:24:59	code	27	\N	498
409	2	f	2016-07-18 03:24:59	2016-07-18 03:24:59	code	27	\N	498
410	3	f	2016-03-03 02:31:53	2016-03-03 02:31:53	code	45	\N	501
411	7	f	2016-06-06 20:40:06	2016-06-06 20:40:06	code	45	\N	502
412	44	f	2016-06-06 20:40:06	2016-06-06 20:40:06	code	45	\N	502
413	3	f	2016-06-13 03:45:54	2016-06-13 03:45:54	code	45	\N	503
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 413, true);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, done_at, is_liked, nit_count, version, user_exercise_id, created_at, updated_at, solution) FROM stdin;
1	9	cc3481835a19d229681c1629	pending	python	gigasecond	\N	\N	0	1	1	2016-06-30 01:32:26	2016-06-30 01:32:26	{"gigasecond.py":"from datetime import date\\r\\nfrom datetime import timedelta\\r\\n\\r\\ndef add_gigasecond(x):\\r\\n\\r\\n\\tx += timedelta(days=11574, seconds=6400)\\r\\n\\r\\n\\treturn x"}
2	9	c5063f017a9c2559823d37ed	\N	scala	allergies	\N	\N	0	3	2	2016-05-23 06:51:29	2016-05-23 06:51:29	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen.Allergen, score: Score) =\\n    (allergen.value \\u0026 score) == allergen.value\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter (isAllergicTo(_, score))\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
3	9	2babcaa1df2fc37c6dde7fa3	\N	scala	allergies	\N	\N	0	2	2	2016-05-30 21:16:40	2016-05-30 21:16:40	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
4	9	3f81080d8c2093d50c7066cd	\N	scala	allergies	\N	\N	0	1	2	2016-06-22 08:49:37	2016-06-22 08:49:37	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n  type Allergens = List[Allergen]\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
5	9	884101921704782a988a239a	pending	python	word-count	\N	\N	0	1	3	2016-06-14 11:27:17	2016-06-14 11:27:17	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(self):\\n\\tself = ' '.join(self.split()) #split and rejoin to clear out extra spaces and new lines\\n\\twords = self.split(' ') #split into array by space delimiting\\n\\tfinalcount = Counter(words) #count words\\n\\treturn finalcount"}
6	9	dfaa9439d3e3e0bf8c8477ae	\N	javascript	anagram	\N	\N	0	1	4	2016-05-21 14:09:36	2016-05-21 14:09:36	{"anagram.js":"var Anagram = function(string) {\\n  this.string = string;\\n};\\n\\nAnagram.prototype.createDictionary = function(input) {\\n  var dict = {};\\n  for (var i = 0; i \\u003c input.length; i++) {\\n    var lil = input[i].toLowerCase();\\n    if (dict[lil] !== undefined) { dict[lil] += 1;}\\n    else { dict[lil] = 1;}\\n  }\\n  return dict;\\n};\\n\\nAnagram.prototype.checker = function(dict, check) {\\n  if (Object.keys(dict).length !== Object.keys(check).length) { return false; }\\n  for (var i in dict ) {\\n    if (dict[i] !== check[i]) { return false; }\\n  }\\n  return true;\\n};\\n\\nAnagram.prototype.matches = function(input) {\\n  if (arguments.length \\u003e 1) {\\n    var temp = [];\\n    for (var i = 0; i \\u003c arguments.length; i++) {\\n      temp.push(arguments[i]);\\n    }\\n    input = temp;\\n  }\\n  if (typeof(input) === 'string'){input = [input];}\\n  var matches = [];\\n  var string = this.string.toLowerCase();\\n  if (string === '') { return [];}\\n  var dict = this.createDictionary(string);\\n    for (var i = 0; i \\u003c input.length; i++) {\\n      if (input[i].toLowerCase() === string) { continue; }\\n      var check = this.createDictionary(input[i]);\\n      if (this.checker(dict, check)) { matches.push(input[i]); }\\n    }\\n  return matches;\\n};\\n\\nmodule.exports = Anagram;"}
7	9	b95bcc9eed15ac410703334e	\N	csharp	bob	\N	\N	0	2	5	2016-07-04 05:17:53	2016-07-04 05:17:53	{"Bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tprivate const string YELL_ANSWER = \\"Whoa, chill out!\\";\\r\\n\\t\\tprivate const string QUESTION_ANSWER = \\"Sure.\\";\\r\\n\\t\\tprivate const string SILENCE_ANSWER = \\"Fine. Be that way!\\";\\r\\n\\t\\tprivate const string NORMAL_ANSWER = \\"Whatever.\\";\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn SILENCE_ANSWER;\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn YELL_ANSWER;\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn QUESTION_ANSWER;\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn NORMAL_ANSWER;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
8	9	e6589f67edbabdb176e88288	\N	csharp	bob	\N	\N	0	1	5	2016-07-17 08:45:28	2016-07-17 08:45:28	{"bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Fine. Be that way!\\";\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Whoa, chill out!\\";\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Sure.\\";\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn \\"Whatever.\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
9	11	e20173453dc34131568d92f9	superseded	ruby	word-count	\N	\N	0	2	6	2016-07-02 09:38:07	2016-07-02 09:38:07	{"/ruby/word-count/phrase.rb":"require 'pry'\\nclass Phrase\\n  def initialize(words)\\n    @words = words\\n  end\\n  \\n  def word_count\\n    @words.downcase!\\n    @words.gsub!(/[^\\\\w\\\\']/, \\" \\")\\n    phrase = @words.split(\\" \\")\\n    count = Hash.new(0)\\n    phrase.map! { |word| count[word] += 1 }\\n    count\\n  end\\nend"}
10	11	994edfe7aea23862292a043a	superseded	ruby	word-count	\N	\N	0	1	6	2016-07-15 05:28:53	2016-07-15 05:28:53	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(words)\\n    @words = words\\n    @words1 = @words.gsub(/,/, ' ').gsub(/!!\\\\\\u0026\\\\@\\\\$%\\\\^\\u0026/, '').gsub(/:/, '').downcase.gsub(/\\\\./, '')\\n    \\n    @words2 = @words1.split\\n    @words2\\n  end\\n  \\n  def word_count\\n    \\n    counts = Hash.new 0\\n    @words2.each do |word|\\n    counts[word] += 1\\n    end\\n    counts\\n  end\\nend\\n\\nphrase = Phrase.new(\\"how','much,wood,could,a,wood,chuck,chuck if a wood chuck could chuck wood\\")\\n\\n# phrase.word_count"}
11	11	32e3821f879b23233a800b7b	needs_input	ruby	word-count	\N	\N	0	3	6	2016-07-30 08:13:01	2016-07-30 08:13:01	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(phrase)\\n    @phrase = phrase.scan(/[\\\\w']+/)\\n  end\\n\\n  def word_count\\n    counter = Hash.new(0)\\n    @phrase.each do | word |\\n      counter[word.downcase] +=1\\n    end\\n    counter\\n  end\\nend\\n\\n# test = Phrase.new('one fish two fish red fish blue fish')\\n# test.word_count"}
12	11	953d8d37d8cd837219b688d0	pending	ruby	gigasecond	\N	\N	0	1	7	2016-07-21 10:07:12	2016-07-21 10:07:12	{"gigasecond.rb":"#kortes\\n\\nclass Gigasecond\\n  VERSION = 1\\n  def self.from(date)\\n    date + (10**9)\\n  end\\nend"}
13	11	7f9a6063c0d2abf6f739cd98	pending	python	minesweeper	\N	\N	0	1	8	2016-07-17 02:06:08	2016-07-17 02:06:08	{"minesweeper.py":"import re\\r\\nends = re.compile('\\\\+-*\\\\+')\\r\\nmiddles = re.compile('\\\\|[ *]+\\\\|')\\r\\n\\r\\ndef board(board):\\r\\n\\theight, width = validate_board(board)\\r\\n\\r\\n\\tfor i in range(1, height - 1):\\r\\n\\t\\tfor j in range(1, width - 1):\\r\\n\\t\\t\\tcount = 0\\r\\n\\t\\t\\tfor k in range(i - 1, i + 2):\\r\\n\\t\\t\\t\\tfor z in range(j - 1, j + 2):\\r\\n\\t\\t\\t\\t\\tif board[k][z] == '*':\\r\\n\\t\\t\\t\\t\\t\\tcount += 1\\r\\n\\t\\t\\tif count \\u003e 0 and board[i][j] != '*':\\r\\n\\t\\t\\t\\tboard[i] = board[i][:j] + str(count) + board[i][j+1:]\\r\\n\\r\\n\\treturn board\\r\\n\\r\\n\\r\\ndef validate_board(board):\\r\\n\\tif not board:\\r\\n\\t\\traise ValueError('Board is None or empty.')\\r\\n\\r\\n\\theight = len(board)\\r\\n\\twidth = len(board[0])\\r\\n\\r\\n\\tif not all(len(line) == width for line in board):\\r\\n\\t\\traise ValueError('Lines have different length.')\\r\\n\\r\\n\\tif not ends.fullmatch(board[0]) or not ends.fullmatch(board[-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\tif not all(bool(middles.fullmatch(line)) for line in board[1:-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\r\\n\\treturn height, width"}
14	11	7fa44da33b8f421c11d71cb6	pending	scala	leap	\N	\N	0	1	9	2016-07-23 11:40:01	2016-07-23 11:40:01	{"src/main/scala/leap.scala":"class Year(year: Int) {\\n    val isLeap = year % 4 == 0 \\u0026\\u0026 (year % 100 != 0 || year % 400 == 0)\\n}\\n\\nobject Year {\\n  def apply(year: Int) = new Year(year)\\n}"}
15	11	82fbcf1e7b00b2b6547ade24	superseded	clojure	rna-transcription	\N	\N	0	1	10	2016-07-08 21:29:47	2016-07-08 21:29:47	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
16	11	a0dc5b9482a329a6b316165e	pending	clojure	rna-transcription	\N	\N	0	2	10	2016-07-16 20:54:29	2016-07-16 20:54:29	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
17	11	75e82fd1fbba1718bccc0a5e	\N	haskell	rna-transcription	\N	\N	0	1	11	2016-06-30 11:07:24	2016-06-30 11:07:24	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA [] = []\\r\\ntoRNA (s:ss) = toRNA' s:toRNA ss\\r\\n\\r\\ntoRNA' :: Char -\\u003e Char\\r\\ntoRNA' 'C' = 'G'\\r\\ntoRNA' 'G' = 'C'\\r\\ntoRNA' 'A' = 'U'\\r\\ntoRNA' 'T' = 'A'\\r\\ntoRNA' _ = ' '"}
18	11	92120790d586ae005a6c2d7b	pending	python	allergies	\N	\N	0	2	12	2016-07-05 22:20:51	2016-07-05 22:20:51	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        return [allergen for (allergen, yesNo) in zip(alergies, base_2_num[::-1]) if int(yesNo)]\\n\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
19	11	4c2de2bd5e4f6a051f83468b	superseded	python	allergies	\N	\N	0	1	12	2016-07-16 07:39:55	2016-07-16 07:39:55	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        ls =[]\\n        p = 0\\n        for x in base_2_num[::-1]:\\n            if x ==\\"1\\" and p \\u003c 8:\\n                ls.append(alergies[p])\\n            p += 1\\n#        print ls\\n        return  ls\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
20	12	f6b627cb0dc33407d6f9bf79	\N	ruby	robot-name	\N	\N	0	1	13	2016-07-07 18:10:18	2016-07-07 18:10:18	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
21	12	971387f6d3156ddec54d189c	pending	ruby	series	\N	\N	0	1	14	2016-08-04 22:25:38	2016-08-04 22:25:38	{"series.rb":"class Series\\n  def initialize (string)\\n    @string = string\\n  end\\n\\n  def slices (number)\\n    raise ArgumentError if number \\u003e @string.length\\n    start = 0\\n    finish = number - 1\\n    sliced = []\\n    until finish == @string.length\\n      slice = []\\n      (start..finish).each do |i|\\n        slice \\u003c\\u003c @string[i].to_i\\n      end\\n      start += 1\\n      finish +=1\\n      sliced \\u003c\\u003c slice\\n    end\\n    sliced\\n  end\\nend"}
22	12	86ec74facbeb5ab0d84fab4f	pending	python	kindergarten-garden	\N	\N	0	1	15	2016-07-30 16:37:35	2016-07-30 16:37:35	{"garden.py":"class Garden():\\r\\n    def __init__(self, gardenStr, students=None):\\r\\n        self.gardenStr = gardenStr\\r\\n        if students is None:\\r\\n            self.students = [\\"Alice\\", \\"Bob\\", \\"Charlie\\", \\"David\\", \\"Eve\\", \\"Fred\\", \\"Ginny\\", \\"Harriet\\",\\r\\n                             \\"Ileana\\", \\"Joseph\\", \\"Kincaid\\", \\"Larry\\"]\\r\\n        else:\\r\\n            self.students = students\\r\\n        self.students.sort()\\r\\n        self.plantsDict = {\\"G\\":\\"Grass\\", \\"C\\":\\"Clover\\", \\"V\\":\\"Violets\\", \\"R\\":\\"Radishes\\"}\\r\\n\\r\\n    def plants(self, student):\\r\\n        if student not in self.students:\\r\\n            raise ValueError(\\"Invalid kid name\\")\\r\\n        i = self.students.index(student)\\r\\n        rows = self.gardenStr.split()\\r\\n        plantsStr = rows[0][i * 2:i * 2 + 2] + rows[1][i * 2:i * 2 + 2]\\r\\n        res = [self.plantsDict[p] for p in plantsStr]\\r\\n        return res\\r\\n\\r\\n\\r\\n\\r\\n\\r"}
23	15	d2392e5b451818481df62a38	\N	lua	rna-transcription	\N	\N	0	3	16	2016-07-23 19:20:46	2016-07-23 19:20:46	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    return dna_strand:gsub('%a',  { C = 'G', G = 'C', A = 'U', T = 'A' })\\nend"}
24	15	0d666a8f1b9f602fee8cb362	\N	lua	rna-transcription	\N	\N	0	2	16	2016-07-27 15:10:34	2016-07-27 15:10:34	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    local rna_nucleotides = {}\\n    local rna_conversion = {\\n        A = 'U',\\n        T = 'A',\\n        G = 'C',\\n        C = 'G',\\n    }\\n\\n    for nucleotide in dna_strand:gmatch('.') do\\n        insert(rna_nucleotides, rna_conversion[nucleotide])\\n    end\\n\\n    return concat(rna_nucleotides)\\nend"}
25	15	0cdf714ac0c3f7ad8351b79c	\N	lua	rna-transcription	\N	\N	0	1	16	2016-07-31 06:14:26	2016-07-31 06:14:26	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    local rna_nucleotides = {}\\n    for nucleotide in dna_strand:gmatch('.') do\\n        if nucleotide == 'A' then\\n            insert(rna_nucleotides, 'U')\\n        elseif nucleotide == 'T' then\\n            insert(rna_nucleotides, 'A')\\n        elseif nucleotide == 'G' then\\n            insert(rna_nucleotides, 'C')\\n        elseif nucleotide == 'C' then\\n            insert(rna_nucleotides, 'G')\\n        end\\n    end\\n\\n    return concat(rna_nucleotides)\\nend"}
26	15	01373981f4b6d55623609121	pending	javascript	kindergarten-garden	\N	\N	0	2	17	2016-08-03 21:10:10	2016-08-03 21:10:10	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    students.sort();\\n    var crops = parseCropDiagram(diagram.toUpperCase());\\n    assignCrops(students,crops,this);\\n  }\\n  \\n  var getPlot = function(crops, index){\\n    var plot = [];\\n    var offset = index*2;\\n    for (var i = 0; i \\u003c crops.length; i++) {\\n      plot.push(crops[i][offset] || null, crops[i][offset+1] || null);\\n    }\\n    return plot;\\n  };\\n  \\n  var assignCrops = function(students,crops,garden){\\n    for (var i = 0; i \\u003c students.length; i++) {\\n      garden[students[i].toLowerCase()] = getPlot(crops,i);\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
27	15	eca403ade55493745a4b4fd6	superseded	javascript	kindergarten-garden	\N	\N	0	1	17	2016-08-05 08:29:37	2016-08-05 08:29:37	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    this.students = students.sort();\\n    this.crops = parseCropDiagram(diagram);\\n    assignCrops(this);\\n  }\\n  \\n  var assignCrops = function(garden){\\n    for (var i = 0; i \\u003c garden.students.length; i++) {\\n      var offset = i*2;\\n      var studentPlot = [\\n        garden.crops[0][offset],\\n        garden.crops[0][offset+1],\\n        garden.crops[1][offset],\\n        garden.crops[1][offset+1],\\n        ];\\n      garden[garden.students[i].toLowerCase()] = studentPlot;\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
28	15	74fea790c4c24740f01d2a71	pending	javascript	gigasecond	\N	\N	0	1	18	2016-07-19 11:43:22	2016-07-19 11:43:22	{"gigasecond.js":"var Gigasecond = function Gigasecond( birth ){\\n    \\n    this.birth = birth;\\n\\n    this.date = function(){\\n        var Gs_in_ms = Math.pow(10,9)*1000,\\n            unix_birth = this.birth.getTime(),\\n            gs_anniversary = new Date( unix_birth + Gs_in_ms );\\n        \\n        return new Date(gs_anniversary.getFullYear(), gs_anniversary.getMonth(), gs_anniversary.getDate());\\n    };\\n};\\n\\nmodule.exports = Gigasecond;"}
442	18	a3094704753c01b41ae9031d	\N	python	hamming	\N	\N	0	1	275	2016-07-07 17:26:12	2016-07-07 17:26:12	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
29	15	b7d4c6cb15ec9461d28f7495	\N	ruby	difference-of-squares	\N	\N	0	2	19	2016-07-25 18:35:34	2016-07-25 18:35:34	{"difference_of_squares.rb":"class Squares\\n  VERSION = 1\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..@num).reduce {|sum,n| sum + n ** 2}\\n  end\\n\\n  def square_of_sums\\n    (@num * (@num+1)/2) ** 2\\n  end\\nend"}
30	15	8759737c9c2d60e7e1634300	\N	ruby	difference-of-squares	\N	\N	0	1	19	2016-07-26 09:45:55	2016-07-26 09:45:55	{"difference_of_squares.rb":"class Squares\\n  VERSION = 1\\n  \\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..@num).map {|n| n ** 2}.reduce(:+)\\n  end\\n\\n  def square_of_sums\\n    (@num * (@num+1)/2) ** 2\\n  end\\nend"}
31	15	a112aaadce4b5792cf278954	pending	python	word-count	\N	\N	0	1	20	2016-07-24 23:59:39	2016-07-24 23:59:39	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(self):\\n\\tself = ' '.join(self.split()) #split and rejoin to clear out extra spaces and new lines\\n\\twords = self.split(' ') #split into array by space delimiting\\n\\tfinalcount = Counter(words) #count words\\n\\treturn finalcount"}
32	15	8ca8ac190808a85f9b4f8d94	hibernating	python	series	\N	\N	0	2	21	2016-08-03 13:37:20	2016-08-03 13:37:20	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:       \\n        #Convert each digit to integer\\n        digit_list = [int(d) for d in digits]\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
33	15	1c552fa0fa341521f84592f5	superseded	python	series	\N	\N	0	1	21	2016-08-05 13:26:27	2016-08-05 13:26:27	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:\\n        digit_list = []\\n        #Convert each digit to integer\\n        for d in digits:\\n            digit_list.append(int(d))\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
34	22	15e2a3f049f6048e6de7bbf9	\N	javascript	anagram	\N	\N	0	1	22	2016-04-19 19:38:57	2016-04-19 19:38:57	{"anagram.js":"var Anagram = function(string) {\\n  this.string = string;\\n};\\n\\nAnagram.prototype.createDictionary = function(input) {\\n  var dict = {};\\n  for (var i = 0; i \\u003c input.length; i++) {\\n    var lil = input[i].toLowerCase();\\n    if (dict[lil] !== undefined) { dict[lil] += 1;}\\n    else { dict[lil] = 1;}\\n  }\\n  return dict;\\n};\\n\\nAnagram.prototype.checker = function(dict, check) {\\n  if (Object.keys(dict).length !== Object.keys(check).length) { return false; }\\n  for (var i in dict ) {\\n    if (dict[i] !== check[i]) { return false; }\\n  }\\n  return true;\\n};\\n\\nAnagram.prototype.matches = function(input) {\\n  if (arguments.length \\u003e 1) {\\n    var temp = [];\\n    for (var i = 0; i \\u003c arguments.length; i++) {\\n      temp.push(arguments[i]);\\n    }\\n    input = temp;\\n  }\\n  if (typeof(input) === 'string'){input = [input];}\\n  var matches = [];\\n  var string = this.string.toLowerCase();\\n  if (string === '') { return [];}\\n  var dict = this.createDictionary(string);\\n    for (var i = 0; i \\u003c input.length; i++) {\\n      if (input[i].toLowerCase() === string) { continue; }\\n      var check = this.createDictionary(input[i]);\\n      if (this.checker(dict, check)) { matches.push(input[i]); }\\n    }\\n  return matches;\\n};\\n\\nmodule.exports = Anagram;"}
35	22	bd78f967b80ddb71b676bdda	pending	coffeescript	word-count	\N	\N	0	1	23	2016-02-27 03:35:51	2016-02-27 03:35:51	{"\\\\coffeescript\\\\word-count\\\\words.coffee":"class Words\\r\\n\\tconstructor: (text) -\\u003e\\r\\n\\t\\t@count = {}\\r\\n\\t\\tfor word in text.match(/\\\\w+/g)\\r\\n\\t\\t\\tword = word.toLowerCase()\\r\\n\\t\\t\\tif word of @count\\r\\n\\t\\t\\t\\t@count[word] += 1\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\t@count[word] = 1\\r\\n\\r\\nmodule.exports = Words"}
36	22	3cdec8238776a51ba061f520	\N	elixir	sublist	\N	\N	0	1	24	2016-06-06 06:23:52	2016-06-06 06:23:52	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b -\\u003e\\n        :equal\\n      length(a) \\u003c= length(b) \\u0026\\u0026 is_sublist(a, b)-\\u003e\\n        :sublist\\n      is_sublist(b, a) -\\u003e\\n        :superlist\\n      true -\\u003e\\n        :unequal\\n    end\\n  end\\n\\n  defp is_sublist(a, b) do\\n    cond do\\n      length(a) \\u003e length(b) -\\u003e\\n        false\\n      a === Enum.take(b, length(a)) -\\u003e\\n        true\\n      true -\\u003e\\n        is_sublist(a, tl(b))\\n    end\\n  end\\nend"}
37	22	011cdcac987b57ed17ae775b	\N	python	difference-of-squares	\N	\N	0	1	25	2016-05-01 05:51:53	2016-05-01 05:51:53	{"diffsquare.py":"n= int(input(\\"enter n value: \\"))\\ndef sum_of_squares(n):\\n    return sum([i**2 for i in range(1, n+1)])\\n\\ndef square_of_sum(n):\\n    return sum(range(1, n+1)) ** 2\\n\\nprint square_of_sum(n) - sum_of_squares(n)"}
38	22	e74c43a678ac0718bcd6e80a	\N	objective-c	word-count	\N	\N	0	1	26	2016-05-04 04:50:57	2016-05-04 04:50:57	{"WordCountTest.m":"#import \\u003cXCTest/XCTest.h\\u003e\\r\\n#import \\"WordCount.h\\"\\r\\n\\r\\n@interface test_suite : XCTestCase\\r\\n\\r\\n@end\\r\\n\\r\\n@implementation test_suite\\r\\n\\r\\n- (void)testCountOneWord {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"word\\"];\\r\\n  NSDictionary *expected = @{ @\\"word\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountOneOfEeach {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one of each\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"of\\" : @1, @\\"each\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountMultipleOccurrences {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one fish two fish red fish blue fish\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"fish\\" : @4, @\\"two\\" : @1, @\\"red\\" : @1, @\\"blue\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIgnorePunctation {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"car : carpet as java : javascript!!\\u0026@$%^\\u0026\\"];\\r\\n  NSDictionary *expected = @{ @\\"car\\" : @1, @\\"carpet\\" : @1, @\\"as\\" : @1, @\\"java\\" : @1, @\\"javascript\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIncludeNumbers {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"testing, 1, 2 testing\\"];\\r\\n  NSDictionary *expected = @{ @\\"testing\\" : @2, @\\"1\\" : @1, @\\"2\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testNormalizeCase {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"go Go GO\\"];\\r\\n  NSDictionary *expected = @{ @\\"go\\" : @3 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n@end"}
44	22	971b8cff0c46451465ed25e3	\N	javascript	raindrops	\N	\N	0	1	28	2016-05-09 19:45:29	2016-05-09 19:45:29	{"raindrops.js":"function Raindrops() {\\n  'use strict';\\n}\\n\\nRaindrops.prototype.convert = function(num) {\\n  switch (true) {\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlangPlong';\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0:\\n      return 'PlingPlang';\\n    case num % 3 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlong';\\n    case num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlangPlong';\\n    case num % 3 === 0:\\n      return 'Pling';\\n    case num % 5 === 0:\\n      return 'Plang';\\n    case num % 7 === 0:\\n      return 'Plong';\\n    default:\\n      return num.toString();\\n  }\\n};\\n\\nmodule.exports = Raindrops;"}
45	22	449cef20254a320cdc0e7b04	pending	ruby	gigasecond	\N	\N	0	1	29	2016-04-20 04:11:45	2016-04-20 04:11:45	{"gigasecond.rb":"#kortes\\n\\nclass Gigasecond\\n  VERSION = 1\\n  def self.from(date)\\n    date + (10**9)\\n  end\\nend"}
46	22	7957fa3d69b82a1a851979dc	\N	python	pangram	\N	\N	0	1	30	2016-04-13 11:26:31	2016-04-13 11:26:31	{"pangram.py":"def is_pangram(s):\\n     return not set('abcdefghijklmnopqrstuvwxyz') - set(s.lower())"}
39	22	097d9d099fd19ce60beb7d45	superseded	ruby	beer-song	\N	\N	0	3	27	2016-02-27 15:04:15	2016-02-27 15:04:15	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
40	22	c19d707079736e9c1afc1517	superseded	ruby	beer-song	\N	\N	0	2	27	2016-02-29 16:09:53	2016-02-29 16:09:53	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
41	22	02dca21d1fc741595e71fad4	superseded	ruby	beer-song	\N	\N	0	1	27	2016-04-16 16:27:35	2016-04-16 16:27:35	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
42	22	9ae3184059e5ef9b5b2dab8d	superseded	ruby	beer-song	\N	\N	0	4	27	2016-04-28 17:41:47	2016-04-28 17:41:47	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
43	22	905f7743d7519f6115d98c54	done	ruby	beer-song	\N	\N	0	5	27	2016-07-03 20:16:38	2016-07-03 20:16:38	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
47	22	f23c0c3c55bffe3ee19a5d54	\N	python	hamming	\N	\N	0	1	31	2016-03-07 15:01:19	2016-03-07 15:01:19	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
293	7	33ded0c1ed795cead8f851c4	superseded	python	gigasecond	\N	\N	0	1	172	2016-02-27 10:53:36	2016-02-27 10:53:36	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    gigadays = 10 ** 9 / (60 * 60 * 24)\\n    \\n    return birthday + timedelta(days=gigadays)"}
48	22	6eb8502187e41fa0dbec729f	done	ruby	secret-handshake	\N	\N	0	4	32	2016-04-27 05:52:15	2016-04-27 05:52:15	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c mandate[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def mandate\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
49	22	d93a8aab217f8e26acf4befa	superseded	ruby	secret-handshake	\N	\N	0	3	32	2016-05-21 23:04:00	2016-05-21 23:04:00	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c known_commands[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def known_commands\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
50	22	3f0613a6ffe9c16f7869320f	superseded	ruby	secret-handshake	\N	\N	0	2	32	2016-05-25 01:57:29	2016-05-25 01:57:29	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def reactions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
51	22	2abeb58e096a7be3d1d86bf8	superseded	ruby	secret-handshake	\N	\N	0	1	32	2016-06-26 09:08:18	2016-06-26 09:08:18	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def actions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
52	22	010bd35ee0d06d7747c75c27	\N	scala	bob	\N	\N	0	1	33	2016-04-24 03:58:00	2016-04-24 03:58:00	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
53	22	8c6475296209ba4fa8337b36	\N	elixir	hello-world	\N	\N	0	1	34	2016-05-17 16:07:13	2016-05-17 16:07:13	{"hello_world.exs":"defmodule HelloWorld do\\n  def hello(name \\\\\\\\ \\"World\\") do\\n    \\"Hello, \\" \\u003c\\u003e name \\u003c\\u003e \\"!\\"\\n  end\\nend"}
54	22	67ff2c779256a5b6b6aa567e	pending	ruby	matrix	\N	\N	0	1	35	2016-03-26 08:18:23	2016-03-26 08:18:23	{"matrix.rb":"# Matrix class\\nclass Matrix\\n  attr_reader :rows\\n\\n  def initialize(s)\\n    @matrix = s.split(\\"\\\\n\\").map { |rs| rs.split(' ').map(\\u0026:to_i) }\\n  end\\n\\n  def rows\\n    @matrix\\n  end\\n\\n  def columns\\n    first, *rest = @matrix\\n    first.zip(*rest)\\n  end\\nend"}
55	22	f37f380827fd98088b8b0fb8	\N	python	hello-world	\N	\N	0	1	36	2016-04-02 05:28:38	2016-04-02 05:28:38	{"hello_world.py":"def hello(name='World'):\\n    return 'Hello, ' + name + '!'"}
56	22	64413eab29f3af9345797e50	hibernating	cpp	hamming	\N	\N	0	1	37	2016-03-18 05:10:20	2016-03-18 05:10:20	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
57	22	19082525a14e52d1515ed3d3	\N	cpp	hamming	\N	\N	0	2	37	2016-06-09 16:30:11	2016-06-09 16:30:11	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
58	22	f7f634a828db0e73e3c0a122	done	ruby	strain	\N	\N	0	1	38	2016-04-25 08:50:31	2016-04-25 08:50:31	{"array.rb":"class Array\\r\\n  def keep\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if yield(i)}\\r\\n    out\\r\\n  end\\r\\n\\r\\n  def discard\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if not yield(i)}\\r\\n    out\\r\\n  end\\r\\nend\\r"}
59	22	c53bab4a6e799c77ecc67856	pending	perl5	etl	\N	\N	0	1	39	2016-02-27 10:41:31	2016-02-27 10:41:31	{"\\\\perl5\\\\etl\\\\etl.pm":"use strict;\\r\\nuse warnings;\\r\\n\\r\\npackage ETL;\\r\\n\\r\\nsub transform {\\r\\n    my ($in) = @_;\\r\\n    my %out;\\r\\n\\r\\n    for my $score (keys %{$in}) {\\r\\n        for my $letter (@{$in-\\u003e{$score}}) {\\r\\n            $out{lc $letter} = $score;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return \\\\%out;\\r\\n}\\r\\n\\r\\n1;"}
60	22	847cffd0799cb84fbf905ada	\N	ruby	simple-cipher	\N	\N	0	1	40	2016-03-02 07:48:28	2016-03-02 07:48:28	{"simple_cipher.rb":"class Cipher\\n  ALPHABET = [*'a'..'z']\\n\\n  attr_reader :key\\n\\n  def initialize(key = nil)\\n    @key = key || 100.times.map { ALPHABET.sample }.join\\n    fail ArgumentError, 'invalid chars in key' unless valid?(@key)\\n  end\\n\\n  def encode(text)\\n    a = 'a'.ord\\n    text.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[(char.ord - a + key.ord - a) % ALPHABET.length]\\n    end.join\\n  end\\n\\n  def decode(code)\\n    code.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[char.ord - key.ord]\\n    end.join\\n  end\\n\\nprivate\\n\\n  def valid?(key)\\n    !key.empty? \\u0026\\u0026 key !~ /[^a-z]/\\n  end\\n\\nend"}
61	22	f53b3503e4505b758b1a8040	pending	clojure	word-count	\N	\N	0	1	41	2016-03-05 09:02:58	2016-03-05 09:02:58	{"word_count.clj":"(ns word-count (require [clojure.string :as str]))\\r\\n\\r\\n(defn to-lower [s]\\r\\n\\t(str/lower-case s))\\r\\n\\r\\n(defn clean [s]\\r\\n\\t(str/replace s #\\"[^a-z0-9 ]\\"  \\"\\"))\\r\\n\\t\\r\\n(defn trim [s]\\r\\n\\t(str/replace s #\\"  \\"  \\" \\"))\\r\\n\\t\\r\\n(defn split [s]\\r\\n\\t(str/split s #\\" \\"))\\r\\n\\t\\t\\r\\n(defn word-count [s]\\r\\n\\t(frequencies (sort (split (trim (clean (to-lower s)))))))"}
62	22	a9f7d589405669107ed6b3c7	\N	javascript	space-age	\N	\N	0	1	42	2016-06-25 10:56:28	2016-06-25 10:56:28	{"space-age.js":"\\"use strict\\";\\n\\nmodule.exports = SpaceAge;\\n\\nconst earthSecsPerYear = 31557600;\\n\\nconst planets = {\\n  Earth: 1,\\n  Mercury: 0.2408467,\\n  Venus: 0.61519726,\\n  Mars: 1.8808158,\\n  Jupiter: 11.862615,\\n  Saturn: 29.447498,\\n  Uranus: 84.016846,\\n  Neptune: 164.79132\\n}\\n\\nfunction SpaceAge(seconds) {\\n  this.seconds = seconds;\\n}\\n\\nObject.getOwnPropertyNames(planets).forEach(planet =\\u003e {\\n  const yearsRelativeToEarth = planets[planet];\\n\\n  SpaceAge.prototype['on' + planet] = function () {\\n    const conversionFunc = ratioToEarth(yearsRelativeToEarth);\\n    return conversionFunc(this.seconds);\\n  }\\n});\\n\\nfunction ratioToEarth(yearsRelativeToEarth) {\\n  const secsPerYear = earthSecsPerYear * yearsRelativeToEarth;\\n  const conversionFunc = ratioSec(secsPerYear);\\n  return seconds =\\u003e conversionFunc(seconds);\\n}\\n\\nfunction ratioSec(secsPerYear) {\\n  return seconds =\\u003e format(seconds / secsPerYear)\\n}\\n\\nfunction format(str) {\\n  return +str.toFixed(2);\\n}"}
63	22	aa67d79eaae99c6c4887cc93	\N	ruby	binary	\N	\N	0	2	43	2016-02-27 13:50:54	2016-02-27 13:50:54	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @decimal ||= @binary.chars.reduce(0) { |sum, bit| 2*sum + bit.to_i }\\n  end\\nend"}
64	22	a5166f303abf10b25c096c52	\N	ruby	binary	\N	\N	0	1	43	2016-03-21 02:28:43	2016-03-21 02:28:43	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @binary.reverse.each_char.with_index.reduce(0) { |t,(c,i)| t+= c.to_i * 2**i }\\n  end\\nend"}
65	22	366704dc03f2f94193fc52d7	pending	ruby	hello-world	\N	\N	0	1	44	2016-03-10 04:53:52	2016-03-10 04:53:52	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello (name='World')\\r\\n    \\"Hello, \\" + name + \\"!\\"\\r\\n  end\\r\\n\\r\\nend"}
66	22	5b7f8edfca872710b1422cf8	pending	csharp	triangle	\N	\N	0	1	45	2016-06-08 06:18:43	2016-06-08 06:18:43	{"Triangle.cs":"﻿using System;\\r\\n\\r\\nnamespace Exercism.csharp.triangle\\r\\n{\\r\\n\\tclass Triangle\\r\\n\\t{\\r\\n\\t\\tprivate readonly decimal _lenA;\\r\\n\\t\\tprivate readonly decimal _lenB;\\r\\n\\t\\tprivate readonly decimal _lenC;\\r\\n\\t\\tprivate readonly TriangleKind _kind;\\r\\n\\r\\n\\t\\tpublic Triangle(decimal lenA, decimal lenB, decimal lenC)\\r\\n\\t\\t{\\r\\n\\t\\t\\t_lenA = lenA;\\r\\n\\t\\t\\t_lenB = lenB;\\r\\n\\t\\t\\t_lenC = lenC;\\r\\n\\t\\t\\t_kind = ComputeKind();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpublic TriangleKind Kind()\\r\\n\\t\\t{\\r\\n\\t\\t\\treturn _kind;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprivate TriangleKind ComputeKind()\\r\\n\\t\\t{\\r\\n\\t\\t\\t// Ensure that the given lengths represent a valid triangle. The triangle inequality states that \\r\\n\\t\\t\\t// the sum of the lengths of any two sides of a triangle always exceeds the length of the third side.\\r\\n\\t\\t\\tif (   (_lenA + _lenB \\u003c= _lenC)\\r\\n\\t\\t\\t    || (_lenA + _lenC \\u003c= _lenB)\\r\\n\\t\\t\\t    || (_lenB + _lenC \\u003c= _lenA)\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tthrow new TriangleException();\\r\\n\\t\\t\\t}\\t\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB \\u0026\\u0026 _lenA == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Equilateral;\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB || _lenA == _lenC || _lenB == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Isosceles;\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\treturn TriangleKind.Scalene;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tinternal enum TriangleKind\\r\\n\\t{\\r\\n\\t\\tEquilateral,\\r\\n\\t\\tIsosceles,\\r\\n\\t\\tScalene\\r\\n\\t}\\r\\n\\r\\n\\tinternal class TriangleException : Exception\\r\\n\\t{\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r"}
67	22	c0f292bf064aa5161e2459ae	done	csharp	roman-numerals	\N	\N	0	1	46	2016-03-08 12:58:45	2016-03-08 12:58:45	{"\\\\csharp\\\\roman-numerals\\\\Roman.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace Exercism.roman_numerals\\r\\n{\\r\\n    public static class Roman\\r\\n    {\\r\\n\\r\\n        public static string ToRoman(this int i)\\r\\n        {\\r\\n            if (i \\u003c 1) return string.Empty;\\r\\n            if (i \\u003e= 1000) return \\"M\\" + ToRoman(i - 1000);\\r\\n            if (i \\u003e= 900) return \\"CM\\" + ToRoman(i - 900); \\r\\n            if (i \\u003e= 500) return \\"D\\" + ToRoman(i - 500);\\r\\n            if (i \\u003e= 400) return \\"CD\\" + ToRoman(i - 400);\\r\\n            if (i \\u003e= 100) return \\"C\\" + ToRoman(i - 100);\\r\\n            if (i \\u003e= 90) return \\"XC\\" + ToRoman(i - 90);\\r\\n            if (i \\u003e= 50) return \\"L\\" + ToRoman(i - 50);\\r\\n            if (i \\u003e= 40) return \\"XL\\" + ToRoman(i - 40);\\r\\n            if (i \\u003e= 10) return \\"X\\" + ToRoman(i - 10);\\r\\n            if (i \\u003e= 9) return \\"IX\\" + ToRoman(i - 9);\\r\\n            if (i \\u003e= 5) return \\"V\\" + ToRoman(i - 5);\\r\\n            if (i \\u003e= 4) return \\"IV\\" + ToRoman(i - 4);\\r\\n            if (i \\u003e= 1) return \\"I\\" + ToRoman(i - 1);\\r\\n            throw new ArgumentOutOfRangeException();\\r\\n        }\\r\\n    }\\r\\n}"}
68	22	6f6890886acabdcb31159b7e	done	ruby	leap	\N	\N	0	1	47	2016-04-26 21:16:57	2016-04-26 21:16:57	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
69	28	587c28fac1bfeedfdbe24c99	pending	go	gigasecond	\N	\N	0	2	48	2016-06-26 13:13:46	2016-06-26 13:13:46	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
70	28	8fc4e276e3244d19213f6f92	superseded	go	gigasecond	\N	\N	0	1	48	2016-07-07 12:36:27	2016-07-07 12:36:27	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
71	28	b986f94da0565a7bbf63096f	\N	ruby	binary	\N	\N	0	1	49	2016-06-25 12:59:47	2016-06-25 12:59:47	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
72	29	d000e25a1f0c0345f254fe88	\N	perl5	bob	\N	\N	0	1	50	2016-07-20 00:34:22	2016-07-20 00:34:22	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
73	31	c89b87eb29b18cc028d22f8e	\N	python	hamming	\N	\N	0	2	51	2015-12-31 00:17:10	2015-12-31 00:17:10	{"hamming.py":"def distance(dna1, dna2):\\n    '''Compares two DNA sequences of equal length and caculates the Hamming distance\\n\\n    Keyword arguments:\\n    dna1 -- a DNA strand\\n    dna2 -- a second DNA strand\\n\\n    returns interger\\n\\n    '''\\n    if len(dna1) != len(dna2):\\n        print(\\"The Hamming distance can not be caculated on sequences of different lengths.\\")\\n    else:           \\n        count = 0\\n        x = 0\\n     \\n        for nucl in dna1:\\n            if dna1[x] != dna2[x]:\\n                count += 1\\n            x += 1\\n\\n    return count"}
74	31	c24133a66cc4c083331f204c	done	python	hamming	\N	\N	0	1	51	2016-04-22 15:19:43	2016-04-22 15:19:43	{"hamming.py":"# a program that can calculate the Hamming difference between two DNA strands.\\n\\ndef distance(dna1, dna2):\\n    '''Compares the Hamming distance between two DNA strands of equal length\\n\\n\\n    Keyword arguments:\\n    dna1 -- first DNA string to compare\\n    dna2 -- second DNA string to compare\\n\\n\\n    Returns: integer\\n\\n\\n    '''\\n    # initializes variables\\n    y = 0    \\n    z = 0\\n    # compares length of strings. returns message if not equal.\\n    if len(dna1) != len(dna2):\\n        print('The two DNA strands must be of equal length.')\\n    else:\\n        # loops through both strings tracking differences\\n        for x in dna1:\\n            if x != dna2[y]:\\n                z += 1\\n            y += 1\\n    return z"}
75	31	c8656ec776d4481423b218a4	pending	javascript	hello-world	\N	\N	0	1	52	2016-01-14 04:41:09	2016-01-14 04:41:09	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\tif (input === '')\\n\\t\\treturn 'Hello, world!';\\n\\telse\\n\\t\\treturn 'Hello, '+input+'!';\\n};\\n\\nmodule.exports = HelloWorld;"}
76	33	ba8c095861ed9130fc33f3bc	done	ruby	word-count	\N	\N	0	1	53	2016-04-29 06:56:04	2016-04-29 06:56:04	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    self.words = phrase.scan(/[\\\\w']+/).map(\\u0026:downcase)\\n  end\\n\\n  def word_count\\n    counter = Hash.new {|hash, key| hash[key] = 0}\\n    words.inject(counter) do |counts, word|\\n      counts[word] += 1\\n      counts\\n    end\\n  end\\n\\n  private\\n\\n  attr_accessor :words\\nend"}
77	33	842ac10056ccb3316bef7ed7	hibernating	java	etl	\N	\N	0	1	54	2016-05-01 14:07:56	2016-05-01 14:07:56	{"/java/etl/src/main/java/Etl.java":"import java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Etl {\\n\\n    public Map\\u003cString, Integer\\u003e transform(Map\\u003cInteger, List\\u003cString\\u003e\\u003e old) {\\n        Map\\u003cString, Integer\\u003e result = new HashMap();\\n        \\n        for (Map.Entry\\u003cInteger, List\\u003cString\\u003e\\u003e oldEntry : old.entrySet()) {\\n            for (String letter : oldEntry.getValue()) {\\n                result.put(letter.toLowerCase(), oldEntry.getKey());\\n            }\\n        }\\n        return result;\\n    }\\n\\n}"}
78	33	a2bb6b7b82fe0d6631e5a4c8	done	javascript	hamming	\N	\N	0	2	55	2016-05-10 08:52:26	2016-05-10 08:52:26	{"hamming.js":"'use strict';\\n\\nexports.compute = function(a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('DNA strands must be of equal length.');\\n  }\\n\\n  return a.split('').filter(function(nucleotide, i) {\\n    return nucleotide !== b[i];\\n  }).length;\\n};"}
79	33	2333b2ea78fc74399535e30e	superseded	javascript	hamming	\N	\N	0	1	55	2016-05-20 18:12:41	2016-05-20 18:12:41	{"hamming.js":"'use strict';\\n\\nexports.compute = function(a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('DNA strands must be of equal length.');\\n  }\\n\\n  var distance = 0;\\n  for (var i = 0, len = a.length; i \\u003c len; ++i) {\\n    if (a[i] !== b[i]) {\\n      distance += 1;\\n    }\\n  }\\n  return distance;\\n};"}
80	33	d22dbbf7befff469e1395319	\N	elixir	hello-world	\N	\N	0	1	56	2016-05-03 12:38:16	2016-05-03 12:38:16	{"hello_world.exs":"defmodule HelloWorld do\\n  @moduledoc \\"\\"\\"\\n  Elixir counts the number of arguments as part of the function name.\\n  For instance;\\n\\n      def hello() do\\n      end\\n\\n  would be a completely different function from\\n\\n      def hello(name) do\\n      end\\n\\n  Can you find a way to make all the tests pass with just one\\n  function?\\n\\n  Hint: look into argument defaults here:\\n  http://elixir-lang.org/getting-started/modules.html#default-arguments\\n  \\"\\"\\"\\n\\n  @doc \\"\\"\\"\\n  Greets the user by name, or by saying \\"Hello, World!\\"\\n  if no name is given.\\n  \\"\\"\\"\\n  @spec hello(String.t) :: String.t\\n  def hello, do: \\"Hello, World!\\"\\n  def hello(name), do: \\"Hello, #{name}!\\"\\nend"}
81	38	09aaa4d90913dde9a9874784	done	clojure	word-count	\N	\N	0	2	57	2016-05-23 22:21:01	2016-05-23 22:21:01	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
82	38	e05b9ac4116b1bd7603c3f6b	superseded	clojure	word-count	\N	\N	0	1	57	2016-06-04 13:01:14	2016-06-04 13:01:14	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
139	44	c5ea5a0955f74c9d5a21da36	superseded	python	leap	\N	\N	0	1	87	2016-03-01 23:13:09	2016-03-01 23:13:09	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False\\n\\n\\n# class is_leap_year(object):\\n# \\tdef __init__(self, year):\\n# \\t\\tself.year = year\\n\\n# \\tdef _is_divisible_by(self, num):\\n# \\t\\treturn self.year % num == 0\\n\\n# \\tdef is_leap_year(self):\\n# \\t\\treturn self._is_divisible_by(4) and not self._is_divisible_by(100) or self._is_divisible_by(400)"}
83	38	c16ee96c6406f94759f3966d	pending	clojure	beer-song	\N	\N	0	5	58	2016-03-13 04:56:28	2016-03-13 04:56:28	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        action (take-one-down idx)\\n        remaining (bottles-of-beer (dec idx))]\\n    (format \\"%s of beer on the wall, %s of beer.\\\\n%s, %s of beer on the wall.\\\\n\\"\\n            (s/capitalize current)\\n            current\\n            action\\n            remaining)))\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
84	38	83eab3427526a021feafc84d	superseded	clojure	beer-song	\N	\N	0	4	58	2016-05-24 03:54:51	2016-05-24 03:54:51	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
85	38	74cdda9c16cb0cf5c1bbf6f1	superseded	clojure	beer-song	\N	\N	0	2	58	2016-05-24 07:52:12	2016-05-24 07:52:12	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (dec to) -1)))))"}
86	38	1663d881659afb56ae22024d	superseded	clojure	beer-song	\N	\N	0	3	58	2016-06-04 20:58:09	2016-06-04 20:58:09	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (map verse (range from (dec to) -1)))))"}
87	38	7f786ec05a22f57be315873a	superseded	clojure	beer-song	\N	\N	0	1	58	2016-07-31 19:21:01	2016-07-31 19:21:01	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (- idx 1))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (- to 1) -1)))))"}
88	38	069c57eb77cff4c024536af4	done	haskell	crypto-square	\N	\N	0	1	59	2016-06-26 07:42:09	2016-06-26 07:42:09	{"/haskell/crypto-square/CryptoSquare.hs":"module CryptoSquare\\n( normalizePlaintext\\n, squareSize\\n, plaintextSegments\\n, ciphertext\\n, normalizeCiphertext\\n) where\\n\\nimport Data.Char\\nimport Data.List\\n\\nnormalizePlaintext :: String -\\u003e String\\nnormalizePlaintext = filter isAlphaNum . map toLower\\n\\nsquareSize :: String -\\u003e Int\\nsquareSize = ceiling . sqrt . fromIntegral . length\\n\\nplaintextSegments :: String -\\u003e [String]\\nplaintextSegments s = squareSplit (squareSize clean) clean\\n    where clean = normalizePlaintext s\\n\\nsquareSplit :: Int -\\u003e String -\\u003e [String]\\nsquareSplit _ [] = [] \\nsquareSplit n xs = first : squareSplit n rest\\n    where (first, rest) = splitAt n xs\\n\\nciphertext :: String -\\u003e String\\nciphertext = concat . transpose . plaintextSegments\\n\\nnormalizeCiphertext :: String -\\u003e String\\nnormalizeCiphertext = unwords . transpose . plaintextSegments"}
89	38	b93f56542ed9ec589f52b267	pending	javascript	hello-world	\N	\N	0	1	60	2016-05-24 16:03:08	2016-05-24 16:03:08	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\tif (input === '')\\n\\t\\treturn 'Hello, world!';\\n\\telse\\n\\t\\treturn 'Hello, '+input+'!';\\n};\\n\\nmodule.exports = HelloWorld;"}
90	38	df98f336f2a868244876135c	needs_input	cpp	word-count	\N	\N	0	4	61	2016-03-28 03:15:43	2016-03-28 03:15:43	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
91	38	562ff68a6216da778059a55a	superseded	cpp	word-count	\N	\N	0	2	61	2016-05-24 19:11:40	2016-05-24 19:11:40	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
92	38	6a7c5e7bb53cf0e40e44ce72	superseded	cpp	word-count	\N	\N	0	1	61	2016-06-12 22:38:49	2016-06-12 22:38:49	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
93	38	25465fa6538d497b8f71812c	superseded	cpp	word-count	\N	\N	0	3	61	2016-06-16 14:23:19	2016-06-16 14:23:19	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
94	38	059aac9ec214990ae2325ebc	\N	objective-c	word-count	\N	\N	0	1	62	2016-03-18 11:26:06	2016-03-18 11:26:06	{"WordCountTest.m":"#import \\u003cXCTest/XCTest.h\\u003e\\r\\n#import \\"WordCount.h\\"\\r\\n\\r\\n@interface test_suite : XCTestCase\\r\\n\\r\\n@end\\r\\n\\r\\n@implementation test_suite\\r\\n\\r\\n- (void)testCountOneWord {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"word\\"];\\r\\n  NSDictionary *expected = @{ @\\"word\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountOneOfEeach {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one of each\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"of\\" : @1, @\\"each\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountMultipleOccurrences {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one fish two fish red fish blue fish\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"fish\\" : @4, @\\"two\\" : @1, @\\"red\\" : @1, @\\"blue\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIgnorePunctation {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"car : carpet as java : javascript!!\\u0026@$%^\\u0026\\"];\\r\\n  NSDictionary *expected = @{ @\\"car\\" : @1, @\\"carpet\\" : @1, @\\"as\\" : @1, @\\"java\\" : @1, @\\"javascript\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIncludeNumbers {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"testing, 1, 2 testing\\"];\\r\\n  NSDictionary *expected = @{ @\\"testing\\" : @2, @\\"1\\" : @1, @\\"2\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testNormalizeCase {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"go Go GO\\"];\\r\\n  NSDictionary *expected = @{ @\\"go\\" : @3 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n@end"}
95	38	e83986906aae5578d9ee8062	pending	ruby	raindrops	\N	\N	0	1	63	2016-02-27 09:42:27	2016-02-27 09:42:27	{"/ruby/raindrops/raindrops.rb":"require 'prime'\\n\\nclass Raindrops\\n\\tdef self.convert(number)\\n\\t\\t\\n\\t\\tp_factors = Prime.prime_division(number).flatten.uniq\\n\\t\\traindrops = \\"\\"\\n\\t\\tp_factors.each do |p_factor| \\n\\t\\t\\tcase p_factor\\n\\t\\t\\twhen 3\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Pling\\"\\n\\t\\t\\twhen 5\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plang\\"\\n\\t\\t\\twhen 7\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plong\\"\\n\\t\\t\\tend\\n\\t\\tend\\n\\t\\traindrops = \\"#{number}\\" if raindrops.empty?\\n\\t\\traindrops\\n\\tend\\nend"}
96	40	ff9be18a54bc520d27fe985d	pending	haskell	gigasecond	\N	\N	0	2	64	2016-06-18 06:31:29	2016-06-18 06:31:29	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime 1e9"}
97	40	4729b27c4d6ede7a04a596c8	superseded	haskell	gigasecond	\N	\N	0	1	64	2016-07-08 09:47:49	2016-07-08 09:47:49	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime (10 ^ 9)"}
98	40	9449213af588f7a8340d294d	\N	ruby	binary	\N	\N	0	1	65	2016-03-26 17:13:15	2016-03-26 17:13:15	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
99	40	f860c6451bc65a9572114eff	superseded	haskell	scrabble-score	\N	\N	0	1	66	2016-05-24 23:40:07	2016-05-24 23:40:07	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| x `elem` \\"AEIOULNRSTaeioulnrst\\" = 1\\r\\n\\t| x `elem` \\"DGdg\\" = 2\\r\\n\\t| x `elem` \\"BCMPbcmp\\" = 3\\r\\n\\t| x `elem` \\"FHVWYfhvwy\\" = 4\\r\\n\\t| x `elem` \\"Kk\\" = 5\\r\\n\\t| x `elem` \\"JXjx\\" = 8\\r\\n\\t| x `elem` \\"QZqz\\" = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
100	40	5f07bf01db1bac5e07e8d9ee	hibernating	haskell	scrabble-score	\N	\N	0	2	66	2016-06-11 10:59:31	2016-06-11 10:59:31	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nimport Data.Char (toUpper)\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| y `elem` \\"AEIOULNRST\\" = 1\\r\\n\\t| y == 'D' || y == 'G' = 2\\r\\n\\t| y `elem` \\"BCMP\\" = 3\\r\\n\\t| y `elem` \\"FHVWY\\" = 4\\r\\n\\t| y == 'K' = 5\\r\\n\\t| y == 'J' || y == 'X' = 8\\r\\n\\t| y == 'Q' || y == 'Z' = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\twhere y = toUpper x\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
140	44	eda784e86089b24e5ec5d0ca	hibernating	python	leap	\N	\N	0	2	87	2016-04-12 05:33:43	2016-04-12 05:33:43	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False"}
101	40	3fb36173893426a6add75396	\N	elixir	sublist	\N	\N	0	1	67	2016-03-26 17:07:15	2016-03-26 17:07:15	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b -\\u003e\\n        :equal\\n      length(a) \\u003c= length(b) \\u0026\\u0026 is_sublist(a, b)-\\u003e\\n        :sublist\\n      is_sublist(b, a) -\\u003e\\n        :superlist\\n      true -\\u003e\\n        :unequal\\n    end\\n  end\\n\\n  defp is_sublist(a, b) do\\n    cond do\\n      length(a) \\u003e length(b) -\\u003e\\n        false\\n      a === Enum.take(b, length(a)) -\\u003e\\n        true\\n      true -\\u003e\\n        is_sublist(a, tl(b))\\n    end\\n  end\\nend"}
102	40	207c1528dfe800c1cf3047f6	hibernating	ruby	raindrops	\N	\N	0	1	68	2016-03-25 06:57:16	2016-03-25 06:57:16	{"raindrops.rb":"class Raindrops\\n\\n  CONVERSIONS = {\\n    \\"3\\" =\\u003e \\"Pling\\",\\n    \\"5\\" =\\u003e \\"Plang\\",\\n    \\"7\\" =\\u003e \\"Plong\\"\\n  }\\n\\n  def self.convert(from)\\n    conversion = CONVERSIONS.keys.map do |number|\\n      from % number.to_i == 0 \\u0026\\u0026 CONVERSIONS.fetch(number) || nil\\n    end.compact\\n    conversion.any? \\u0026\\u0026 conversion.join || from.to_s\\n  end\\n\\nend"}
103	40	eaa008c4de8db9093f7ac312	pending	javascript	kindergarten-garden	\N	\N	0	2	69	2016-05-20 04:38:05	2016-05-20 04:38:05	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    students.sort();\\n    var crops = parseCropDiagram(diagram.toUpperCase());\\n    assignCrops(students,crops,this);\\n  }\\n  \\n  var getPlot = function(crops, index){\\n    var plot = [];\\n    var offset = index*2;\\n    for (var i = 0; i \\u003c crops.length; i++) {\\n      plot.push(crops[i][offset] || null, crops[i][offset+1] || null);\\n    }\\n    return plot;\\n  };\\n  \\n  var assignCrops = function(students,crops,garden){\\n    for (var i = 0; i \\u003c students.length; i++) {\\n      garden[students[i].toLowerCase()] = getPlot(crops,i);\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
104	40	3fcef5a0f36d4982ba66d5d5	superseded	javascript	kindergarten-garden	\N	\N	0	1	69	2016-05-21 04:42:10	2016-05-21 04:42:10	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    this.students = students.sort();\\n    this.crops = parseCropDiagram(diagram);\\n    assignCrops(this);\\n  }\\n  \\n  var assignCrops = function(garden){\\n    for (var i = 0; i \\u003c garden.students.length; i++) {\\n      var offset = i*2;\\n      var studentPlot = [\\n        garden.crops[0][offset],\\n        garden.crops[0][offset+1],\\n        garden.crops[1][offset],\\n        garden.crops[1][offset+1],\\n        ];\\n      garden[garden.students[i].toLowerCase()] = studentPlot;\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
105	40	fe841d4c7a35313cfdc6b275	superseded	ruby	word-count	\N	\N	0	1	70	2016-05-05 11:36:40	2016-05-05 11:36:40	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[normalize(word)] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def normalize(word)\\n    word.downcase.gsub(/[^[:word:]]/, '')\\n  end\\n\\n  def split\\n    @string.split(/\\\\W+/)\\n  end\\nend"}
106	40	f870bee375c9cc416503c6b2	done	ruby	word-count	\N	\N	0	4	70	2016-05-10 05:24:17	2016-05-10 05:24:17	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @words ||= @string.scan(/\\\\w+/)\\n  end\\nend"}
107	40	2a6dedf9b985885c43ab8a47	superseded	ruby	word-count	\N	\N	0	2	70	2016-07-10 22:50:37	2016-07-10 22:50:37	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[word] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def split\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
108	40	2683ffdf84f5a8e6540703a1	superseded	ruby	word-count	\N	\N	0	3	70	2016-07-16 11:37:45	2016-07-16 11:37:45	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
109	40	aed4c70eb34d55a2649abc46	pending	python	space-age	\N	\N	0	1	71	2016-05-18 12:12:56	2016-05-18 12:12:56	{"space_age.py":"import types\\n\\nclass SpaceAge:\\n    ORBITAL_PERIODS = (('earth', 31557600), ('mercury', 7600543),\\n        ('venus', 19414149), ('mars', 59354032), ('jupiter', 374355659),\\n        ('saturn', 929292362), ('uranus', 2651370019), ('neptune', 5200418560))\\n\\n    def __init__(self, seconds):\\n        self.seconds = seconds\\n        for planet, period in self.ORBITAL_PERIODS:\\n            years = round(seconds/period, 2)\\n            f = types.MethodType(lambda age, years=years: years, self)\\n            setattr(self, 'on_{}'.format(planet), f)"}
141	46	8878721b118d325843def34d	done	ruby	leap	\N	\N	0	1	88	2016-06-22 02:05:29	2016-06-22 02:05:29	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
110	40	d705f5287a0c9a312b735729	pending	clojure	beer-song	\N	\N	0	5	72	2016-02-22 14:00:09	2016-02-22 14:00:09	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        action (take-one-down idx)\\n        remaining (bottles-of-beer (dec idx))]\\n    (format \\"%s of beer on the wall, %s of beer.\\\\n%s, %s of beer on the wall.\\\\n\\"\\n            (s/capitalize current)\\n            current\\n            action\\n            remaining)))\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
111	40	5ea214d6cfc70a26d35de290	superseded	clojure	beer-song	\N	\N	0	4	72	2016-02-23 07:05:04	2016-02-23 07:05:04	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
112	40	8ae97299dcabb89aa0a013db	superseded	clojure	beer-song	\N	\N	0	2	72	2016-03-20 10:01:29	2016-03-20 10:01:29	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (dec to) -1)))))"}
113	40	b59961689e16dfb682e3a32a	superseded	clojure	beer-song	\N	\N	0	3	72	2016-05-23 05:54:34	2016-05-23 05:54:34	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (map verse (range from (dec to) -1)))))"}
114	40	b04213b264cb73862947e85c	superseded	clojure	beer-song	\N	\N	0	1	72	2016-06-15 02:14:39	2016-06-15 02:14:39	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (- idx 1))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (- to 1) -1)))))"}
115	40	0fec038f9f87ce64e7a01365	pending	python	word-count	\N	\N	0	1	73	2016-05-29 04:38:16	2016-05-29 04:38:16	{"wordcount.py":"### Word Count Submission File ###\\n\\ndef word_count(sentence):\\n\\twordcount = {}\\n\\tfor word in sentence.split():\\n\\t\\tif word not in wordcount:\\n\\t\\t\\twordcount[word] = 1\\n\\t\\telse:\\n\\t\\t\\twordcount[word] += 1\\n\\n\\treturn wordcount"}
116	40	f99f72534263dedb60bda009	\N	javascript	hamming	\N	\N	0	1	74	2016-03-25 00:55:03	2016-03-25 00:55:03	{"hamming.js":"var Hamming = function() {}\\n\\nHamming.prototype.compute = function compute(strand1, strand2) {\\n  var distance = 0;\\n\\n  if(strand1.length !== strand2.length) throw 'DNA strands must be of equal length.';\\n  if(strand1.length === strand2.length \\u0026\\u0026 strand1 === strand2) return distance;\\n\\n  for(var i = 0; i \\u003c strand1.length; i++) {\\n    if(strand1[i] !== strand2[i]) distance++;\\n  }\\n  return distance;\\n}\\n\\nmodule.exports = Hamming;"}
117	40	3181ecfed40419abc62547d9	pending	ruby	hamming	\N	\N	0	1	75	2016-04-25 07:52:29	2016-04-25 07:52:29	{"hamming.rb":"class Hamming\\n  def self.compute(first, second)\\n    Hamming.new(first, second).compute\\n  end\\n\\n  def initialize(first, second)\\n    @first, @second = first, second\\n  end\\n\\n  def compute\\n    total = 0\\n    strand1.each_with_index do |char, index|\\n      total += 1 unless char == strand2[index]\\n    end\\n    total\\n  end\\n\\n  private\\n\\n  def size\\n    @size = [@first.size, @second.size].min\\n  end\\n\\n  def strand1\\n    @strand1 = @first.slice(0...size).scan(/./)\\n  end\\n\\n  def strand2\\n    @strand2 = @second.slice(0...size).scan(/./)\\n  end\\nend"}
118	40	84d61c02b2ee597c6e1d58e8	done	cpp	word-count	\N	\N	0	1	76	2016-02-23 17:17:01	2016-02-23 17:17:01	{"word_count.cpp":"#include \\u003cmap\\u003e\\n#include \\u003cboost/algorithm/string/case_conv.hpp\\u003e\\n#include \\u003cboost/algorithm/string/split.hpp\\u003e\\n#include \\u003cboost/algorithm/string/classification.hpp\\u003e\\n\\nusing namespace boost;\\n\\nnamespace word_count\\n{\\n    const std::map\\u003cstd::string, int\\u003e words(const char *in)\\n    {\\n\\tstd::string inString(in);\\n\\t\\n\\tstd::vector\\u003cstd::string\\u003e wordList; \\n\\tsplit(wordList, inString, is_punct() || is_space());\\n\\t\\n\\tstd::map\\u003cstd::string, int\\u003e countMap;\\n\\tfor(std::string\\u0026 myStr : wordList)\\n\\t{\\n\\t    to_lower(myStr);\\n\\t    if(countMap.count(myStr) \\u003e 0)\\n\\t    {\\n\\t\\tcountMap[myStr]++;\\n\\t    }\\n\\t    else if (!myStr.empty())\\n\\t    {\\n\\t\\tcountMap.insert( std::pair\\u003cstd::string, int\\u003e(myStr, 1));\\n\\t    }\\n\\t}\\n\\t\\n\\treturn countMap;\\n    }\\n};"}
119	40	806184a760a7023ae9a1b99c	superseded	elixir	word-count	\N	\N	0	1	77	2016-04-08 12:09:11	2016-04-08 12:09:11	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    sentence\\n      |\\u003e String.downcase\\n      |\\u003e String.split(~r/[\\\\s:_!\\u0026@$%,\\\\^]/)\\n      |\\u003e count(%{})\\n  end\\n\\n  defp count([], word_counts), do: word_counts\\n  defp count([\\"\\" | rest], word_counts), do: count(rest, word_counts)\\n  defp count([word | rest], word_counts) do\\n    current_count = Map.get(word_counts, word)\\n                        |\\u003e increment_count\\n    count(rest, Map.put(word_counts, word, current_count))\\n  end\\n\\n  defp increment_count(nil), do: 1\\n  defp increment_count(count), do: count + 1\\n\\nend"}
120	40	8217d37932fa2cdee6f273e7	pending	elixir	word-count	\N	\N	0	2	77	2016-05-18 16:59:34	2016-05-18 16:59:34	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    Regex.scan(~r/[^\\\\s:_!\\u0026@$%,\\\\^]+/, String.downcase(sentence))\\n      |\\u003e List.flatten\\n      |\\u003e Enum.reduce(%{}, \\u0026count_word/2)\\n  end\\n\\n  defp count_word(word, word_counts) do\\n    Map.update(word_counts, word, 1, \\u0026(\\u00261 + 1))\\n  end\\nend"}
121	40	cf5213cf5cecdcd8f15d8385	\N	javascript	raindrops	\N	\N	0	1	78	2016-03-23 08:08:05	2016-03-23 08:08:05	{"raindrops.js":"function Raindrops() {\\n  'use strict';\\n}\\n\\nRaindrops.prototype.convert = function(num) {\\n  switch (true) {\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlangPlong';\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0:\\n      return 'PlingPlang';\\n    case num % 3 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlong';\\n    case num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlangPlong';\\n    case num % 3 === 0:\\n      return 'Pling';\\n    case num % 5 === 0:\\n      return 'Plang';\\n    case num % 7 === 0:\\n      return 'Plong';\\n    default:\\n      return num.toString();\\n  }\\n};\\n\\nmodule.exports = Raindrops;"}
122	40	eee3a5288908e498381da9cc	pending	ruby	kindergarten-garden	\N	\N	0	1	79	2016-03-31 19:02:51	2016-03-31 19:02:51	{"garden.rb":"class Garden\\n  \\n  STUDENTS = %w(Alice Bob Charlie David Eve Fred Ginny Harriet Ileana Joseph Kincaid Larry)\\n  PLANT_MAP = {V: :violets, R: :radishes, G: :grass, C: :clover}\\n  \\n  def initialize(plants,students=nil)\\n    @plants = plants\\n    @students = (students || STUDENTS).sort\\n    @students.each do |kid|\\n      self.class.send(:define_method,\\"#{kid.downcase}\\") do\\n        codes = []\\n        rows = @plants.split(\\"\\\\n\\")\\n        cols = @students.index kid\\n        row_0_0 = rows[0][cols*2]\\n        row_0_1 = rows[0][cols*2+1]\\n        row_1_0 = rows[1][cols*2]\\n        row_1_1 = rows[1][cols*2+1]\\n        codes = [row_0_0, row_0_1,row_1_0, row_1_1]\\n        codes.map {|c| PLANT_MAP[c.to_sym]}\\n      end\\n    end\\n  end\\n\\nend"}
123	40	2e063e3fad02071d83637a5c	superseded	python	bob	\N	\N	0	2	80	2016-03-07 17:44:44	2016-03-07 17:44:44	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
124	40	fdbee52d4e60331099d9f81f	superseded	python	bob	\N	\N	0	1	80	2016-05-14 15:57:16	2016-05-14 15:57:16	{"bob.py":"def hey(message):\\n\\tif message.strip() == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
125	40	3d343756c0a3b25e8085b61b	done	python	bob	\N	\N	0	3	80	2016-05-18 05:20:20	2016-05-18 05:20:20	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
126	40	c3bb54afa8d972baee80e08c	superseded	haskell	nucleotide-count	\N	\N	0	3	81	2016-05-17 21:34:19	2016-05-17 21:34:19	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ (pairsMap 0 nucleotides) ++ (pairsMap 1 dna)\\r\\n    where pairsMap val ns = ns `zip` (repeat val)\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
127	40	3bb89bfd857316c80f7f97c3	superseded	haskell	nucleotide-count	\N	\N	0	2	81	2016-06-10 14:35:39	2016-06-10 14:35:39	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
128	40	d6f13585268eb0daa1b6408c	superseded	haskell	nucleotide-count	\N	\N	0	1	81	2016-06-11 09:54:15	2016-06-11 09:54:15	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n dna = if n `elem` nucleotides\\r\\n    then length $ filter (== n) dna \\r\\n    else error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
129	40	5f56b60e76db5ce763aeabb3	hibernating	haskell	nucleotide-count	\N	\N	0	5	81	2016-06-12 12:28:55	2016-06-12 12:28:55	{"DNA.hs":"module DNA where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromList)\\r\\nimport Control.Monad (forM_)\\r\\nimport Data.Array.ST (readArray, writeArray, newArray, runSTUArray)\\r\\nimport Data.Array.Unboxed (UArray, assocs)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts = fromList . filter (\\\\(n,_) -\\u003e n `elem` nucleotides) . assocs . countArray\\r\\n\\t\\r\\ncountArray :: DNA -\\u003e UArray Nucleotide Int\\r\\ncountArray dna = runSTUArray $ do\\r\\n\\tcounts \\u003c- newArray ('A','Z') 0\\r\\n\\tforM_ dna $ \\\\n -\\u003e do\\r\\n\\t\\tc \\u003c- readArray counts n\\r\\n\\t\\twriteArray counts n (1+c)\\r\\n\\treturn counts"}
130	40	3e5caa835fa9666493f4fae6	superseded	haskell	nucleotide-count	\N	\N	0	4	81	2016-06-15 04:40:29	2016-06-15 04:40:29	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ pairsMap 0 nucleotides ++ pairsMap 1 dna\\r\\n    where pairsMap val ns = ns `zip` repeat val\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
131	40	062778706bf11d136574f31a	pending	python	simple-cipher	\N	\N	0	1	82	2016-04-16 09:03:30	2016-04-16 09:03:30	{"\\\\python\\\\simple-cipher\\\\cipher.py":"from itertools import cycle\\r\\nfrom random import randint\\r\\n\\r\\nclass Cipher:\\r\\n    \\r\\n    _ord_a = ord(\\"a\\")\\r\\n    _ord_z = ord(\\"z\\")\\r\\n    _ord_az = _ord_z - _ord_a + 1\\r\\n    \\r\\n    def __init__(self, key = None):\\r\\n        if key and not (key.isalpha() and key.islower()):\\r\\n            raise ValueError(\\"Invalid key\\")\\r\\n        self.key = key or self._generate_key()\\r\\n         \\r\\n    def encode(self, msg):\\r\\n        return \\"\\".join(map(self._encode_char, msg, cycle(self.key)))\\r\\n\\r\\n    def decode(self, emsg):\\r\\n        return \\"\\".join(map(self._decode_char, emsg, cycle(self.key)))\\r\\n\\r\\n    @staticmethod\\r\\n    def _generate_key():\\r\\n        return \\"\\".join(chr(randint(Cipher._ord_a, Cipher._ord_z)) for _ in range(100))\\r\\n        \\r\\n        \\r\\n    def _encode_char(self, c, k):\\r\\n        if not c.isalpha():\\r\\n            return \\"\\"\\r\\n        enc = ord(c.lower()) + ord(k) - self._ord_a\\r\\n        return (enc \\u003e self._ord_z) and chr(enc - self._ord_az) or chr(enc)\\r\\n    \\r\\n    def _decode_char(self, c, k):\\r\\n        dec = ord(c) - ord(k) + self._ord_a\\r\\n        return (dec \\u003c self._ord_a) and chr(dec + self._ord_az) or chr(dec)\\r\\n\\r\\n\\r\\nclass Caesar(Cipher):\\r\\n    def __init__(self):\\r\\n        super().__init__(\\"d\\")"}
132	40	fed12d23d9b9f7824912aa70	pending	python	kindergarten-garden	\N	\N	0	1	83	2016-05-12 17:58:52	2016-05-12 17:58:52	{"garden.py":"class Garden():\\r\\n    def __init__(self, gardenStr, students=None):\\r\\n        self.gardenStr = gardenStr\\r\\n        if students is None:\\r\\n            self.students = [\\"Alice\\", \\"Bob\\", \\"Charlie\\", \\"David\\", \\"Eve\\", \\"Fred\\", \\"Ginny\\", \\"Harriet\\",\\r\\n                             \\"Ileana\\", \\"Joseph\\", \\"Kincaid\\", \\"Larry\\"]\\r\\n        else:\\r\\n            self.students = students\\r\\n        self.students.sort()\\r\\n        self.plantsDict = {\\"G\\":\\"Grass\\", \\"C\\":\\"Clover\\", \\"V\\":\\"Violets\\", \\"R\\":\\"Radishes\\"}\\r\\n\\r\\n    def plants(self, student):\\r\\n        if student not in self.students:\\r\\n            raise ValueError(\\"Invalid kid name\\")\\r\\n        i = self.students.index(student)\\r\\n        rows = self.gardenStr.split()\\r\\n        plantsStr = rows[0][i * 2:i * 2 + 2] + rows[1][i * 2:i * 2 + 2]\\r\\n        res = [self.plantsDict[p] for p in plantsStr]\\r\\n        return res\\r\\n\\r\\n\\r\\n\\r\\n\\r"}
133	40	794a645438acbec768d62c20	\N	objective-c	word-count	\N	\N	0	1	84	2016-03-07 22:11:14	2016-03-07 22:11:14	{"WordCountTest.m":"#import \\u003cXCTest/XCTest.h\\u003e\\r\\n#import \\"WordCount.h\\"\\r\\n\\r\\n@interface test_suite : XCTestCase\\r\\n\\r\\n@end\\r\\n\\r\\n@implementation test_suite\\r\\n\\r\\n- (void)testCountOneWord {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"word\\"];\\r\\n  NSDictionary *expected = @{ @\\"word\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountOneOfEeach {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one of each\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"of\\" : @1, @\\"each\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountMultipleOccurrences {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one fish two fish red fish blue fish\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"fish\\" : @4, @\\"two\\" : @1, @\\"red\\" : @1, @\\"blue\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIgnorePunctation {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"car : carpet as java : javascript!!\\u0026@$%^\\u0026\\"];\\r\\n  NSDictionary *expected = @{ @\\"car\\" : @1, @\\"carpet\\" : @1, @\\"as\\" : @1, @\\"java\\" : @1, @\\"javascript\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIncludeNumbers {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"testing, 1, 2 testing\\"];\\r\\n  NSDictionary *expected = @{ @\\"testing\\" : @2, @\\"1\\" : @1, @\\"2\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testNormalizeCase {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"go Go GO\\"];\\r\\n  NSDictionary *expected = @{ @\\"go\\" : @3 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n@end"}
134	40	61f992d58f06f5c1c8cc915a	\N	ruby	space-age	\N	\N	0	3	85	2016-04-28 23:02:22	2016-04-28 23:02:22	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method method_name, :on }\\nend"}
135	40	92e6ed449512b6aba18805c0	\N	ruby	space-age	\N	\N	0	1	85	2016-05-31 22:34:08	2016-05-31 22:34:08	{"space_age.rb":"class SpaceAge\\n\\tattr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n      :on_earth =\\u003e 1,\\n      :on_mercury =\\u003e 0.2408467,\\n      :on_venus =\\u003e 0.61519726, \\n      :on_mars =\\u003e 1.8808158, \\n      :on_jupiter =\\u003e 11.862615, \\n      :on_saturn =\\u003e 29.447498, \\n      :on_uranus =\\u003e 84.016846,  \\n      :on_neptune =\\u003e 164.79132 }\\n\\n\\tdef initialize seconds_old\\n\\t\\t@seconds = seconds_old\\n\\tend\\n  # Is this overly complicated? Heck yes. But it was fun!\\n\\tdef on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.) \\n\\t\\t@seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n\\tend\\n  # Alias the methods so that they all point to the on method\\n\\tPLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
136	40	ee3be78a56b2e43f6f198107	\N	ruby	space-age	\N	\N	0	2	85	2016-07-02 15:12:18	2016-07-02 15:12:18	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
137	40	ef92fc9d1a700e49b51805d6	\N	python	hello-world	\N	\N	0	2	86	2016-03-08 01:14:59	2016-03-08 01:14:59	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name='World'):\\n    return u'Hello, {}!'.format(name)"}
138	40	538bd9280ac463313e63d9b8	\N	python	hello-world	\N	\N	0	1	86	2016-04-25 01:37:10	2016-04-25 01:37:10	{"hello_world.py":"# -*- coding: utf-8 -*-\\n\\n#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if not name:\\n        name = 'World'\\n\\n    return u'Hello, {name}!'.format(name=name)"}
294	7	59d2ffdb02db5a041ed82bd9	\N	coffeescript	hello-world	\N	\N	0	1	173	2016-03-10 21:29:51	2016-03-10 21:29:51	{"hello_world.coffee":"class HelloWorld\\n\\thello: (name = '') -\\u003e\\n\\t\\tif name == '' then 'Hello, World!' else \\"Hello, #{name}!\\"\\n\\nmodule.exports = HelloWorld"}
142	46	995cd621b40ca7d9e0c0bf00	hibernating	cpp	phone-number	\N	\N	0	2	89	2016-04-08 05:16:59	2016-04-08 05:16:59	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = clean_number(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string clean_number(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (isdigit(c)) tmp_pnum += c;\\n        }\\n\\n        // eliminate numbers that are the wrong length\\n        if (tmp_pnum.size() \\u003c 10 || tmp_pnum.size() \\u003e 11) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11) {\\n            // only 11 digit numbers that have a country code of 1 are valid\\n            if (tmp_pnum[0] == '1') {\\n                tmp_pnum.erase(0, 1);\\n            } else {\\n                // I can't think of a way to not repeat myself without\\n                // having a really confusing conditional\\n                tmp_pnum = \\"0000000000\\";\\n            }\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
143	46	2a85907a9780943d7032d53b	superseded	cpp	phone-number	\N	\N	0	1	89	2016-05-14 03:22:25	2016-05-14 03:22:25	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = rm_fmt(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string rm_fmt(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (c \\u003e= '0' \\u0026\\u0026 c \\u003c= '9') tmp_pnum += c;\\n        }\\n\\n        if (tmp_pnum.size() \\u003c 10 || (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] != '1')) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] == '1') {\\n            tmp_pnum.erase(0, 1);\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
144	46	009aab7312ad3adf58830555	hibernating	ruby	accumulate	\N	\N	0	2	90	2016-04-27 02:46:05	2016-04-27 02:46:05	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    if block_given?\\n      result = []\\n      each do |item|\\n        result \\u003c\\u003c yield(item)\\n      end\\n      result\\n    else\\n      to_enum\\n    end\\n  end\\nend"}
145	46	0a3ba5ad463298b9ac6e7a86	superseded	ruby	accumulate	\N	\N	0	1	90	2016-05-04 02:27:13	2016-05-04 02:27:13	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    result = []\\n    each do |item|\\n      result \\u003c\\u003c yield(item)\\n    end\\n    result\\n  end\\nend"}
146	46	392bdfd6f7d4ae975f8c1d49	\N	python	run-length-encoding	\N	\N	0	2	91	2016-03-31 13:50:04	2016-03-31 13:50:04	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
147	46	2b3fa5be0e5785c109495d46	\N	python	run-length-encoding	\N	\N	0	1	91	2016-04-04 21:04:05	2016-04-04 21:04:05	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
148	46	4647878ce298741c453dec23	superseded	ruby	word-count	\N	\N	0	2	92	2016-06-13 05:24:51	2016-06-13 05:24:51	{"/ruby/word-count/phrase.rb":"require 'pry'\\nclass Phrase\\n  def initialize(words)\\n    @words = words\\n  end\\n  \\n  def word_count\\n    @words.downcase!\\n    @words.gsub!(/[^\\\\w\\\\']/, \\" \\")\\n    phrase = @words.split(\\" \\")\\n    count = Hash.new(0)\\n    phrase.map! { |word| count[word] += 1 }\\n    count\\n  end\\nend"}
149	46	3fd5d70c9150929d0d66e965	superseded	ruby	word-count	\N	\N	0	1	92	2016-06-17 06:09:14	2016-06-17 06:09:14	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(words)\\n    @words = words\\n    @words1 = @words.gsub(/,/, ' ').gsub(/!!\\\\\\u0026\\\\@\\\\$%\\\\^\\u0026/, '').gsub(/:/, '').downcase.gsub(/\\\\./, '')\\n    \\n    @words2 = @words1.split\\n    @words2\\n  end\\n  \\n  def word_count\\n    \\n    counts = Hash.new 0\\n    @words2.each do |word|\\n    counts[word] += 1\\n    end\\n    counts\\n  end\\nend\\n\\nphrase = Phrase.new(\\"how','much,wood,could,a,wood,chuck,chuck if a wood chuck could chuck wood\\")\\n\\n# phrase.word_count"}
150	46	a44f93eb565e0884f149b8f3	needs_input	ruby	word-count	\N	\N	0	3	92	2016-07-02 18:53:42	2016-07-02 18:53:42	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(phrase)\\n    @phrase = phrase.scan(/[\\\\w']+/)\\n  end\\n\\n  def word_count\\n    counter = Hash.new(0)\\n    @phrase.each do | word |\\n      counter[word.downcase] +=1\\n    end\\n    counter\\n  end\\nend\\n\\n# test = Phrase.new('one fish two fish red fish blue fish')\\n# test.word_count"}
151	46	61af8feba109c5750046fd4b	done	ruby	bob	\N	\N	0	2	93	2016-04-01 17:50:36	2016-04-01 17:50:36	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Woah, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    text == text.upcase\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
152	46	0de4560ff6aaf5d7d7917dcb	superseded	ruby	bob	\N	\N	0	1	93	2016-05-18 08:37:15	2016-05-18 08:37:15	{"bob.rb":"class Bob\\n\\n  def hey str\\n    \\"Whatever.\\"\\n  end\\n\\nend"}
153	46	cacafd55e3e67c76def0ce61	\N	ruby	bob	\N	\N	0	3	93	2016-06-03 09:38:09	2016-06-03 09:38:09	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Whoa, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    (text =~  /[A-Z]/ \\u0026\\u0026 text == text.upcase)\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
154	46	b7be412864f75c29465a3e63	superseded	python	word-count	\N	\N	0	1	94	2016-05-03 23:34:25	2016-05-03 23:34:25	{"wordcount.py":"# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Return None if the input is None or if it is not a string\\n    if words is None or not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = dict()\\n\\n    # Split the string into a list of words\\n    word_list = words.split()\\n\\n    # Iterate through the list of words\\n    for word in word_list:\\n\\n        # Just add 1 to the counter if the key is already present\\n        if word in word_counts:\\n            word_counts[word] += 1\\n\\n        # Otherwise create the new key\\n        else:\\n            word_counts[word] = 1\\n\\n    return word_counts"}
155	46	580f5b5a217408c900343e4b	done	python	word-count	\N	\N	0	3	94	2016-05-22 23:44:22	2016-05-22 23:44:22	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(words):\\n    if not isinstance(words,basestring):\\n        return None\\n    word_counts = Counter()\\n    for word in words.split():\\n        word_counts[word] += 1\\n    return word_counts"}
156	46	303770b44e4bef0a39b65603	superseded	python	word-count	\N	\N	0	2	94	2016-05-27 05:59:14	2016-05-27 05:59:14	{"wordcount.py":"from collections import Counter\\n\\n# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Validate input\\n    if not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = Counter()\\n\\n    # Iterate through the list of words\\n    for word in words.split():\\n        word_counts[word] += 1\\n\\n    return word_counts"}
157	46	65c3775ab6e9dffbac01b213	\N	clojure	space-age	\N	\N	0	1	95	2016-06-24 12:31:24	2016-06-24 12:31:24	{"space_age.clj":"(ns space-age)\\n\\n(def ratios {\\n      :mercury 0.2408467\\n      :venus 0.61519726\\n      :mars 1.8808158\\n      :jupiter 11.862615\\n      :saturn 29.447498\\n      :uranus 84.016846\\n      :neptune 164.79132\\n      })\\n\\n(defn on-earth\\n  [seconds]\\n  (float (/ seconds 31557600)))\\n\\n(defn div-by-earth\\n  [seconds planet]\\n  (/ (on-earth seconds) (ratios planet)))\\n\\n(defn on-mercury\\n  [seconds]\\n  (div-by-earth seconds :mercury))\\n\\n(defn on-venus\\n  [seconds]\\n  (div-by-earth seconds :venus))\\n\\n(defn on-mars\\n  [seconds]\\n  (div-by-earth seconds :mars))\\n\\n(defn on-jupiter\\n  [seconds]\\n  (div-by-earth seconds :jupiter))\\n\\n(defn on-saturn\\n  [seconds]\\n  (div-by-earth seconds :saturn))\\n\\n(defn on-uranus\\n  [seconds]\\n  (div-by-earth seconds :uranus))\\n\\n(defn on-neptune\\n  [seconds]\\n  (div-by-earth seconds :neptune))"}
158	46	828be9b8501655072f89a54c	pending	ruby	nth-prime	\N	\N	0	1	96	2016-04-02 01:54:19	2016-04-02 01:54:19	{"prime.rb":"require 'set'\\n\\nmodule Prime\\n\\n  def self.nth(n)\\n    PrimeSieve.new(upper_bound(n)).drop(n-1).first\\n  end\\n\\n  def self.upper_bound(n)\\n    return 20 if n \\u003c= 6\\n    n * (Math.log(n) + Math.log(Math.log(n)))\\n  end\\n\\n  class PrimeSieve\\n    include Enumerable\\n\\n    def initialize(max)\\n      @max = max\\n    end\\n\\n    def each\\n      yield 2\\n\\n      odd_composites = Set.new\\n      (3..@max).step(2) do |n|\\n        if !odd_composites.include?(n)\\n          yield n\\n          (n**2..@max).step(n) do |i|\\n            odd_composites \\u003c\\u003c i\\n          end\\n        end\\n      end\\n    end\\n  end\\nend"}
159	46	eb5271d5b3de6c9d5a143418	done	javascript	hello-world	\N	\N	0	1	97	2016-04-21 19:46:44	2016-04-21 19:46:44	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\nif(!input) {\\n    return \\"Hello, world!\\";\\n}\\nelse return \\"Hello, \\" + input + \\"!\\";\\n};\\n\\nmodule.exports = HelloWorld;"}
160	48	ddbe74a2b20b3d6695b40514	\N	elixir	sublist	\N	\N	0	1	98	2016-03-16 15:04:56	2016-03-16 15:04:56	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b -\\u003e\\n        :equal\\n      length(a) \\u003c= length(b) \\u0026\\u0026 is_sublist(a, b)-\\u003e\\n        :sublist\\n      is_sublist(b, a) -\\u003e\\n        :superlist\\n      true -\\u003e\\n        :unequal\\n    end\\n  end\\n\\n  defp is_sublist(a, b) do\\n    cond do\\n      length(a) \\u003e length(b) -\\u003e\\n        false\\n      a === Enum.take(b, length(a)) -\\u003e\\n        true\\n      true -\\u003e\\n        is_sublist(a, tl(b))\\n    end\\n  end\\nend"}
161	48	9afa0d24a8fc958d7931b926	pending	java	nucleotide-count	\N	\N	0	1	99	2016-02-02 22:55:10	2016-02-02 22:55:10	{"/java/nucleotide-count/src/main/java/DNA.java":"import java.util.Map;\\nimport java.util.HashMap;\\n\\npublic class DNA {\\n    private String dna;\\n    private Map\\u003cCharacter, Integer\\u003e nucleotides = new HashMap\\u003cCharacter, Integer\\u003e();\\n\\n    public DNA(String dna) {\\n        this.dna = dna;\\n        countNucleotides();\\n    }\\n\\n    public void countNucleotides() {\\n        nucleotides.put('A', 0);\\n        nucleotides.put('C', 0);\\n        nucleotides.put('G', 0);\\n        nucleotides.put('T', 0);\\n\\n        for (int i = 0; i \\u003c dna.length(); i++) {\\n            char current = dna.charAt(i);\\n            nucleotides.put(current, nucleotides.get(current)+1);\\n        }\\n    }\\n\\n    public int count(char nucleotide) {\\n        if (!\\"ACGT\\".contains(Character.toString(nucleotide)))\\n        \\tthrow new IllegalArgumentException();\\n\\n        return nucleotides.get(nucleotide);\\n    }\\n\\n    public Map\\u003cCharacter, Integer\\u003e nucleotideCounts() {\\n        return nucleotides;\\n    }\\n\\n\\n}"}
162	48	60b9d248bca6fd1c2db5d1bc	superseded	ruby	word-count	\N	\N	0	1	100	2016-02-09 02:31:36	2016-02-09 02:31:36	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
163	48	e10eb0ccd1063ad25431173a	superseded	ruby	word-count	\N	\N	0	3	100	2016-02-10 00:31:52	2016-02-10 00:31:52	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
164	48	13085a3abc4693b11e8c921a	done	ruby	word-count	\N	\N	0	4	100	2016-04-19 05:34:30	2016-04-19 05:34:30	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
165	48	da4fa00d7440be6cf74f92ee	superseded	ruby	word-count	\N	\N	0	2	100	2016-05-04 21:24:40	2016-05-04 21:24:40	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
166	48	9412b99cf06be0730c2ee0be	pending	swift	leap	\N	\N	0	1	101	2016-02-03 08:26:20	2016-02-03 08:26:20	{"Bob.swift":"import Foundation\\n\\npublic struct Year {\\n\\n\\tlet year: Int\\n\\tpublic let isLeapYear : Bool = false;\\n\\t\\n\\tpublic init(calendarYear: Int){\\n\\t\\tself.year = calendarYear\\n\\t\\tself.isLeapYear = calculateLeapYear()\\n\\t}\\n\\t\\n\\tfunc calculateLeapYear() -\\u003e Bool {\\n\\t\\tif isDivisibleBy(400){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(100){\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(4){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\tfunc isDivisibleBy(number:Int) -\\u003e Bool{\\n\\t\\treturn (self.year%number == 0)\\n\\t}\\n\\n}"}
167	48	4a097870851489d16b929cc2	\N	ruby	meetup	\N	\N	0	1	102	2016-06-19 06:58:27	2016-06-19 06:58:27	{"meetup.rb":"require 'date'\\nclass Meetup\\n\\n  INDEX = {:first =\\u003e 1, :second =\\u003e 2, :third =\\u003e 3, :fourth =\\u003e 4 }.freeze\\n  DAYS = [\\"sunday\\", \\"monday\\", \\"tuesday\\",\\n    \\"wednesday\\", \\"thursday\\",\\"friday\\", \\"saturday\\"].freeze\\n\\n  def initialize(month, year)\\n    @month = month\\n    @year = year\\n  end\\n\\n  def day(week_day, index)\\n    send(week_day, index)\\n  end\\n\\n  DAYS.each_with_index do |day,position|\\n    define_method(\\"#{day}\\") do |index|\\n    get_date(index,position)\\n    end\\n  end\\n\\n  def get_date(index, position)\\n    if index == :last\\n      get_last_day(position)\\n    elsif index == :teenth\\n      get_teenth_day(position)\\n    else\\n      get_week_day(index, position)\\n    end\\n  end\\n\\n  def get_last_day(position)\\n    @month == 12 ? d = Date.new(@year, @month, 31) : d = Date.new(@year, @month+1, 1).prev_day\\n    until(d.wday == position) do\\n      d = d.prev_day\\n    end\\n    d\\n  end\\n\\n  def get_teenth_day(position)\\n    d = Date.new(@year, @month)\\n    puts position\\n    until(d.wday == position \\u0026\\u0026 d.mday.between?(13,20)) do\\n      d = d.next_day\\n    end\\n    d\\n  end\\n\\n  def get_week_day(index, position)\\n    d = Date.new(@year, @month, 1)\\n    INDEX[index].times do\\n      while(d.wday != position)\\n      d = d.next_day\\n      end\\n      d = d.next_day\\n    end\\n    d.prev_day\\n  end\\n\\nend"}
168	48	c789366e46db88dead7079d4	\N	ruby	binary	\N	\N	0	2	103	2016-02-09 01:32:20	2016-02-09 01:32:20	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @decimal ||= @binary.chars.reduce(0) { |sum, bit| 2*sum + bit.to_i }\\n  end\\nend"}
169	48	ca2c39462060087a28558f72	\N	ruby	binary	\N	\N	0	1	103	2016-03-06 21:06:48	2016-03-06 21:06:48	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @binary.reverse.each_char.with_index.reduce(0) { |t,(c,i)| t+= c.to_i * 2**i }\\n  end\\nend"}
170	48	90fd395b77c8540a432ff77f	done	python	word-count	\N	\N	0	1	104	2016-04-08 10:54:41	2016-04-08 10:54:41	{"wordcount.py":"\\r\\nfrom collections import Counter\\r\\nimport re\\r\\n\\r\\n\\r\\ndef word_count(s):\\r\\n    split = re.split(r' |\\\\n', s)\\r\\n    count = Counter(split)\\r\\n    del count['']\\r\\n    return count\\r\\n\\r\\n\\r"}
171	49	52289bf015e22de15f0c9947	done	javascript	pythagorean-triplet	\N	\N	0	1	105	2016-06-17 00:27:02	2016-06-17 00:27:02	{"\\\\javascript\\\\pythagorean-triplet\\\\pythagorean-triplet.js":"/* Finds pythagorean triplets */\\r\\nvar Triplet = function(a,b,c) { this.a = a, this.b = b, this.c = c }\\r\\n\\r\\n/* Sum of the sides of a triple */\\r\\nTriplet.prototype.sum = function() { return this.a + this.b + this.c };\\r\\n\\r\\n/* Product of the sides of a triple */\\r\\nTriplet.prototype.product = function() { return this.a * this.b * this.c };\\r\\n\\r\\nTriplet.prototype.isPythagorean = function() {\\r\\n\\t/* Tests if the set of number is pythagorean */\\r\\n\\treturn (this.a*this.a) + (this.b*this.b) == (this.c*this.c);\\r\\n};\\r\\n\\r\\nTriplet.where = function(params) {\\r\\n\\t/* Finds triplets with certain characterstics */\\r\\n\\tvar triplets = [];\\r\\n\\tfor(var a = params.minFactor || 1; a \\u003c= params.maxFactor; a++) {\\r\\n\\t\\tfor(var b = a; b \\u003c= params.maxFactor; b++) {\\r\\n\\t\\t\\tfor(var c = b; c \\u003c= params. maxFactor; c++) {\\r\\n\\t\\t\\t\\tvar t = new Triplet(a,b,c);\\r\\n\\t\\t\\t\\tvar checkSums = !params.sum || (params.sum == t.sum());\\r\\n\\t\\t\\t\\tif(t.isPythagorean() \\u0026\\u0026 checkSums )\\r\\n\\t\\t\\t\\t\\ttriplets.push(t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn triplets;\\r\\n};\\r\\n\\r\\nmodule.exports = Triplet;"}
172	49	832ad4ab3ee42f9c0661c436	\N	ecmascript	hello-world	\N	\N	0	1	106	2016-05-06 19:07:04	2016-05-06 19:07:04	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
173	49	e3c3216e34132a786d331764	\N	haskell	clock	\N	\N	0	1	107	2016-05-08 04:27:14	2016-05-08 04:27:14	{"Clock.hs":"module Clock(fromHourMin, toString) where\\nimport Text.Printf (printf)\\n\\ndata Clock = Clock { hour :: Integer\\n                   , minute :: Integer\\n                   } deriving (Eq, Show)\\n                     \\ninstance Num Clock where\\n  fromInteger = fromHourMin 0\\n  (Clock h1 m1) + (Clock h2 m2) = fromHourMin (h1 + h2) (m1 + m2)\\n  negate (Clock h m) = Clock (hoursPerDay - h - 1) (minutesPerHour - m)\\n  (*) = undefined\\n  abs = undefined\\n  signum = undefined\\n\\nfromHourMin :: Integer -\\u003e Integer -\\u003e Clock\\nfromHourMin h m = Clock {minute=m', hour=h'} \\n    where h' = (h + m `div` minutesPerHour) `mod` hoursPerDay\\n          m' = m `mod` minutesPerHour \\n          \\ntoString :: Clock -\\u003e String \\ntoString c = printf \\"%02d:%02d\\" (hour c) (minute c)\\n\\nminutesPerHour :: Integer\\nminutesPerHour = 60\\n\\nhoursPerDay :: Integer\\nhoursPerDay = 24"}
174	49	26d07cf5b0461afbc514441f	done	javascript	word-count	\N	\N	0	3	108	2016-03-24 00:20:55	2016-03-24 00:20:55	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (!phrase || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    count[word] = (count[word] || 0) + 1;\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
175	49	0080159217de2defe8467add	superseded	javascript	word-count	\N	\N	0	1	108	2016-04-17 05:20:27	2016-04-17 05:20:27	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  if (phrase === null || phrase === '' || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return;\\n  }\\n  \\n  var count = {};\\n  phrase.toLowerCase()\\n        .replace(/[^a-zA-Z0-9 ]/g, '')\\n        .replace(/\\\\s+/g, ' ')\\n        .split(' ')\\n        .forEach(\\n  function(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  });\\n  return count;\\n}"}
295	7	c99d7f3abe8d3e60bd7ddc5e	hibernating	ruby	bob	\N	\N	0	1	174	2016-03-18 20:22:23	2016-03-18 20:22:23	{"bob.rb":"class Bob\\n  def hey(message)\\n    if message.nil? || message.empty?\\n      \\"Fine. Be that way!\\"\\n    elsif message =~ /(^[A-Z\\\\d][\\\\dA-Z\\\\s\\\\W]+)/\\n      \\"Woah, chill out!\\"\\n    elsif message.end_with? \\"?\\"\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
176	49	d968120afaca7d0c87d6627a	superseded	javascript	word-count	\N	\N	0	2	108	2016-06-17 23:21:43	2016-06-17 23:21:43	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (phrase === null || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
177	49	0545157f6f19dd9f4f74826d	done	python	crypto-square	\N	\N	0	1	109	2016-05-22 01:19:17	2016-05-22 01:19:17	{"crypto_square.py":"import math\\n\\ndef encode(text):\\n\\ttext=text.lower()\\n\\ttext=[k for k in text if k in '1234567890abcdefghijklmnopqrtsuvwxyz']\\n\\tsize=get_size(text)\\n\\tnew=[]\\n\\tfor i in range(0,size):\\n\\t\\tnewstr=''\\n\\t\\tk=i\\n\\t\\twhile k \\u003c len(text):\\n\\t\\t\\tnewstr+=text[k]\\n\\t\\t\\tk+=size\\n\\t\\tnew.append(newstr)\\n\\treturn ' '.join(new)\\n\\ndef get_size(text):\\n\\treturn int(math.ceil(len(text)**0.5))"}
178	49	3ddcfbbbc07264dac22efadd	hibernating	python	rna-transcription	\N	\N	0	1	110	2016-06-03 21:17:14	2016-06-03 21:17:14	{"dna.py":"def to_rna(dna_string):\\n    rna_string = \\"\\"\\n    for c in dna_string:\\n        if c == 'G':\\n            rna_string += 'C'\\n        elif c == 'C':\\n            rna_string += 'G'\\n        elif c == 'T':\\n            rna_string += 'A'\\n        elif c == 'A':\\n            rna_string += 'U'\\n    return rna_string"}
179	26	b0753b80f825459c058b02b7	hibernating	clojure	bob	\N	\N	0	1	111	2016-02-13 09:28:29	2016-02-13 09:28:29	{"bob.clj":"(ns bob\\n  (:require [clojure.string :as st]))\\n\\n(defn question?[sentence]\\n  (= \\"?\\" (str (last sentence))))\\n\\n(defn yelling? [sentence]\\n  (= sentence (st/upper-case sentence)))\\n\\n(defn response-for [sentence]\\n  (cond\\n   (st/blank? sentence) \\"Fine. Be that way!\\"\\n   (yelling? sentence)  \\"Woah, chill out!\\"\\n   (question? sentence) \\"Sure.\\"\\n   :else                \\"Whatever.\\"))"}
180	26	b837cdb87a265dfb21ecec9f	superseded	ruby	beer-song	\N	\N	0	3	112	2016-02-17 05:02:14	2016-02-17 05:02:14	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
181	26	b9e4b54f4435df8d4aafe165	superseded	ruby	beer-song	\N	\N	0	2	112	2016-03-06 20:53:06	2016-03-06 20:53:06	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
182	26	48dbbfe4a4edee8cfd914f6e	superseded	ruby	beer-song	\N	\N	0	1	112	2016-03-17 04:13:47	2016-03-17 04:13:47	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
233	26	d9052f06dda8040ba442ef2d	pending	python	space-age	\N	\N	0	1	143	2016-06-09 06:58:21	2016-06-09 06:58:21	{"space_age.py":"import types\\n\\nclass SpaceAge:\\n    ORBITAL_PERIODS = (('earth', 31557600), ('mercury', 7600543),\\n        ('venus', 19414149), ('mars', 59354032), ('jupiter', 374355659),\\n        ('saturn', 929292362), ('uranus', 2651370019), ('neptune', 5200418560))\\n\\n    def __init__(self, seconds):\\n        self.seconds = seconds\\n        for planet, period in self.ORBITAL_PERIODS:\\n            years = round(seconds/period, 2)\\n            f = types.MethodType(lambda age, years=years: years, self)\\n            setattr(self, 'on_{}'.format(planet), f)"}
183	26	921cce22d4578df8afe8a244	superseded	ruby	beer-song	\N	\N	0	4	112	2016-04-10 09:43:33	2016-04-10 09:43:33	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
184	26	e039c8caa2b3c20876f37e50	done	ruby	beer-song	\N	\N	0	5	112	2016-05-19 16:01:50	2016-05-19 16:01:50	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
185	26	265f9452d9cb1e9e0bd8506c	hibernating	haskell	word-count	\N	\N	0	2	113	2016-03-04 01:55:54	2016-03-04 01:55:54	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (Map, fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount :: [Char] -\\u003e Map [Char] Int\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
186	26	66dead3add70d2261964bc60	superseded	haskell	word-count	\N	\N	0	1	113	2016-04-08 05:52:24	2016-04-08 05:52:24	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
187	26	07674c3116a000364be1d884	done	clojure	word-count	\N	\N	0	2	114	2016-02-25 18:56:35	2016-02-25 18:56:35	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
188	26	841dc3d810dc2596479ed6e8	superseded	clojure	word-count	\N	\N	0	1	114	2016-03-03 23:31:59	2016-03-03 23:31:59	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
189	26	82e8930a68ec510e872d4b91	\N	python	pangram	\N	\N	0	1	115	2016-03-21 21:03:22	2016-03-21 21:03:22	{"pangram.py":"def is_pangram(s):\\n     return not set('abcdefghijklmnopqrstuvwxyz') - set(s.lower())"}
190	26	d922e22519370bfe0c1da6b5	\N	haskell	space-age	\N	\N	0	1	116	2016-01-24 01:05:07	2016-01-24 01:05:07	{"SpaceAge.hs":"module SpaceAge where\\n\\nimport Data.Maybe (fromJust)\\n\\ndata Planet = Mercury | Venus | Earth | Mars | Jupiter | Saturn | Uranus | Neptune deriving (Show, Eq)\\n\\nageOn :: Planet -\\u003e Integer -\\u003e Double\\nageOn p s = (fromIntegral s) / 31557600.0 / (fromJust $ lookup p planets) where\\n    planets = [(Mercury, 0.2408467), (Venus, 0.61519726), (Earth, 1.0), (Mars, 1.8808158), (Jupiter, 11.862615), (Saturn, 29.447498), (Uranus, 84.016846), (Neptune, 164.79132)]"}
191	26	d5b960e4df11a8389e3f7a9a	pending	javascript	grade-school	\N	\N	0	1	117	2016-07-04 01:17:13	2016-07-04 01:17:13	{"/javascript/grade-school/grade-school.js":"function School(){\\n\\tthis.db = {};\\n}\\n\\nSchool.prototype.add = function(name,num){\\n\\tif(this.db[num]) this.db[num].push(name);\\n\\telse this.db[num] = [name];\\n}\\n\\nSchool.prototype.roster = function(){\\n\\tfor (key in this.db){\\n\\t\\tif (this.db.hasOwnProperty(key)){\\n\\t\\t\\tthis.db[key] = this.db[key].sort();\\n\\t\\t}\\n\\t}\\n\\treturn this.db;\\n};\\n\\nSchool.prototype.grade = function(num){\\n\\tif(this.roster()[num]){\\n\\t\\treturn this.db[num].sort();\\n\\t}\\n\\telse{\\n\\t\\treturn [];\\n\\t}\\n};\\n\\nmodule.exports = School;"}
192	26	76fb277411a10c18e20e8303	done	scala	bob	\N	\N	0	1	118	2016-02-22 08:51:06	2016-02-22 08:51:06	{"src/main/scala/teenager.scala":"/**\\n * Created by j0rik on 25.06.15.\\n */\\nclass Bob {\\n  def hey (str : String) = {\\n    if ((str == null) || (str == \\"\\")) \\"Fine. Be that way!\\"\\n    else\\n    if (str.trim() == \\"\\") \\"Fine. Be that way!\\"\\n    else\\n    if ((str.toUpperCase() == str)\\u0026\\u0026(!str.matches(\\"\\"\\"[0-9, \\\\?]*\\"\\"\\"))) \\"Whoa, chill out!\\"\\n    else\\n    if (str.endsWith(\\"?\\")) \\"Sure.\\" else \\"Whatever.\\"\\n  }\\n}"}
193	26	b0b5e7a6ec5f9a7e8f3d2516	superseded	python	twelve-days	\N	\N	0	1	119	2016-01-23 17:41:57	2016-01-23 17:41:57	{"twelve_days.py":"gifts = [\\n    'a Partridge in a Pear Tree',\\n    'two Turtle Doves',\\n    'three French Hens',\\n    'four Calling Birds',\\n    'five Gold Rings',\\n    'six Geese-a-Laying',\\n    'seven Swans-a-Swimming',\\n    'eight Maids-a-Milking',\\n    'nine Ladies Dancing',\\n    'ten Lords-a-Leaping',\\n    'eleven Pipers Piping',\\n    'twelve Drummers Drumming',\\n]\\n\\ndays = [\\n    'first',\\n    'second',\\n    'third',\\n    'fourth',\\n    'fifth',\\n    'sixth',\\n    'seventh',\\n    'eighth',\\n    'ninth',\\n    'tenth',\\n    'eleventh',\\n    'twelfth',\\n]\\n\\n\\ndef verse(day):\\n    pre = \\"On the {} day of Christmas my true love gave to me, \\".format(days[day-1])\\n\\n    # comma-separated list of gifts from today's down to doves, inclusive\\n    todays_gifts = ', '.join(gifts[day-1:0:-1])\\n\\n    # add conjunction if there are many gifts\\n    if day \\u003e 1:\\n        todays_gifts += ', and '\\n    # a partridge in a pear tree!\\n    todays_gifts += gifts[0]\\n\\n    post = '.\\\\n'\\n    return pre + todays_gifts + post\\n\\ndef verses(start, end):\\n    return \\"\\\\n\\".join([verse(n) for n in range(start, end + 1)]) + \\"\\\\n\\"\\n\\ndef sing():\\n    return verses(1, 12)"}
348	30	8c6adb0bdbe40b26c01ae4e2	done	ruby	word-count	\N	\N	0	2	210	2016-02-28 19:13:34	2016-02-28 19:13:34	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    @phrase = phrase\\n  end\\n\\n  def word_count\\n    @word_count ||= count_words\\n  end\\n\\n  private\\n\\n  def count_words\\n    counts = Hash.new(0)\\n    @phrase.split(/[^'\\\\p{L}\\\\d]+/).each do |word|\\n      counts[word.downcase] += 1\\n    end\\n    counts\\n  end\\n\\nend"}
194	26	522ca8709a23a83f4cdadb69	pending	python	twelve-days	\N	\N	0	2	119	2016-02-23 06:53:14	2016-02-23 06:53:14	{"twelve_days.py":"_gifts = [\\n    'a Partridge in a Pear Tree',\\n    'two Turtle Doves',\\n    'three French Hens',\\n    'four Calling Birds',\\n    'five Gold Rings',\\n    'six Geese-a-Laying',\\n    'seven Swans-a-Swimming',\\n    'eight Maids-a-Milking',\\n    'nine Ladies Dancing',\\n    'ten Lords-a-Leaping',\\n    'eleven Pipers Piping',\\n    'twelve Drummers Drumming',\\n]\\n\\n_days = [\\n    'first',\\n    'second',\\n    'third',\\n    'fourth',\\n    'fifth',\\n    'sixth',\\n    'seventh',\\n    'eighth',\\n    'ninth',\\n    'tenth',\\n    'eleventh',\\n    'twelfth',\\n]\\n\\n\\ndef verse(day):\\n    pre_string = \\"On the {} day of Christmas my true love gave to me, \\"\\n    pre = pre_string.format(_days[day-1])\\n\\n    # comma-separated list of gifts from today's down to doves, inclusive\\n    todays_gifts = ', '.join(_gifts[day-1:0:-1])\\n\\n    # add conjunction if there are many gifts\\n    if day \\u003e 1:\\n        todays_gifts += ', and '\\n    # a partridge in a pear tree!\\n    todays_gifts += _gifts[0]\\n\\n    post = '.\\\\n'\\n    return pre + todays_gifts + post\\n\\n\\ndef verses(start, end):\\n    return \\"\\\\n\\".join(verse(n) for n in range(start, end + 1)) + \\"\\\\n\\"\\n\\n\\ndef sing():\\n    return verses(1, 12)"}
195	26	07d04b520d4141b1e91a3510	done	python	rna-transcription	\N	\N	0	1	120	2016-04-01 10:55:45	2016-04-01 10:55:45	{"dna.py":"class DNA(object):\\n    reemplazar = dict(zip(list('GCTA'), list('CGAU')))\\n    def __init__(self, dna):\\n        self.dna = dna\\n\\n    def to_rna(self):\\n        ret = []\\n        for char in self.dna:\\n            ret.append(self.reemplazar[char])\\n        return ''.join(ret)"}
196	26	7544c4bdf39b763f84d380fb	hibernating	ruby	leap	\N	\N	0	1	121	2016-01-16 22:52:37	2016-01-16 22:52:37	{"year.rb":"module Year\\n  def self.leap?(year)\\n    return false if year.odd?\\n    return true if year % 400 == 0\\n    return false if year % 100 == 0\\n    return true if year % 4 == 0\\n    false\\n  end\\nend"}
197	26	3960c4566d6406bdc7ec61d0	pending	ruby	hello-world	\N	\N	0	1	122	2016-04-25 10:27:37	2016-04-25 10:27:37	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello (name='World')\\r\\n    \\"Hello, \\" + name + \\"!\\"\\r\\n  end\\r\\n\\r\\nend"}
198	26	3ec03fa72f1134b3c402e7ca	hibernating	javascript	hamming	\N	\N	0	1	123	2016-05-09 17:38:30	2016-05-09 17:38:30	{"hamming.js":"'use strict';\\r\\n\\r\\nvar Hamming = {};\\r\\n\\r\\nHamming.compute = function (a, b) {\\r\\n    var pos = 0,\\r\\n        distance = 0;\\r\\n\\r\\n    if (a.length !== b.length) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    while (pos \\u003c a.length) {\\r\\n        if (a[pos] !== b[pos]) {\\r\\n            distance = distance + 1;\\r\\n        }\\r\\n        pos = pos + 1;\\r\\n    }\\r\\n    return distance;\\r\\n};\\r\\n\\r\\nmodule.exports = Hamming;"}
199	26	ad2863f71db4464cf704337b	\N	haskell	nth-prime	\N	\N	0	1	124	2016-02-12 21:58:40	2016-02-12 21:58:40	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
200	26	912aba67087e0d943d8c3f10	\N	go	grains	\N	\N	0	1	125	2016-02-12 02:39:19	2016-02-12 02:39:19	{"grains.go":"package grains\\n\\nimport (\\n\\t\\"errors\\"\\n\\t\\"fmt\\"\\n\\t\\"math\\"\\n)\\n\\nvar SquareArr = [...]uint64{\\n\\t1,\\n\\t2,\\n\\t4,\\n\\t8,\\n\\t16,\\n\\t32,\\n\\t64,\\n\\t128,\\n\\t256,\\n\\t512,\\n\\t1024,\\n\\t2048,\\n\\t4096,\\n\\t8192,\\n\\t16384,\\n\\t32768,\\n\\t65536,\\n\\t131072,\\n\\t262144,\\n\\t524288,\\n\\t1048576,\\n\\t2097152,\\n\\t4194304,\\n\\t8388608,\\n\\t16777216,\\n\\t33554432,\\n\\t67108864,\\n\\t134217728,\\n\\t268435456,\\n\\t536870912,\\n\\t1073741824,\\n\\t2147483648,\\n\\t4294967296,\\n\\t8589934592,\\n\\t17179869184,\\n\\t34359738368,\\n\\t68719476736,\\n\\t137438953472,\\n\\t274877906944,\\n\\t549755813888,\\n\\t1099511627776,\\n\\t2199023255552,\\n\\t4398046511104,\\n\\t8796093022208,\\n\\t17592186044416,\\n\\t35184372088832,\\n\\t70368744177664,\\n\\t140737488355328,\\n\\t281474976710656,\\n\\t562949953421312,\\n\\t1125899906842624,\\n\\t2251799813685248,\\n\\t4503599627370496,\\n\\t9007199254740992,\\n\\t18014398509481984,\\n\\t36028797018963968,\\n\\t72057594037927936,\\n\\t144115188075855872,\\n\\t288230376151711744,\\n\\t576460752303423488,\\n\\t1152921504606846976,\\n\\t2305843009213693952,\\n\\t4611686018427387904,\\n\\t9223372036854775808,\\n}\\n\\nfunc Square(n int) (uint64, error) {\\n\\tif n \\u003c 1 || n \\u003e 64 {\\n\\t\\treturn 0, errors.New(\\"argument out of range\\")\\n\\t}\\n\\t// 508 ops/sec\\n\\t//return MathSquare(n), nil\\n\\t// 312 ops/sec\\n\\t//return LoopSquare(n), nil\\n\\t// 228 ops/sec\\n\\treturn ShiftSquare(n), nil\\n\\t// 229 ops/sec\\n\\t//return CacheSquare(n), nil\\n}\\n\\nfunc MathSquare(n int) uint64 {\\n\\treturn uint64(math.Pow(2, float64(n-1)))\\n}\\n\\nfunc LoopSquare(n int) uint64 {\\n\\tvar ans uint64 = 1\\n\\tfor i := 0; i \\u003c n-1; i++ {\\n\\t\\tans = ans * 2\\n\\t}\\n\\treturn ans\\n}\\n\\nfunc ShiftSquare(n int) uint64 {\\n\\treturn uint64(1) \\u003c\\u003c uint(n-1)\\n}\\n\\nfunc CacheSquare(n int) uint64 {\\n\\treturn SquareArr[n-1]\\n}\\n\\nfunc PrintSquares() {\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tfmt.Printf(\\"%d,\\\\n\\", val)\\n\\t}\\n}\\n\\nfunc Total() uint64 {\\n\\treturn CacheTotal()\\n}\\n\\nfunc CalcTotal() uint64 {\\n\\tvar sum uint64 = 0\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tsum += val\\n\\t}\\n\\treturn sum\\n}\\n\\nfunc CacheTotal() uint64 {\\n\\treturn 18446744073709551615\\n}"}
201	26	217174149efa63f0ffa0b7bc	needs_input	cpp	word-count	\N	\N	0	4	126	2016-03-19 11:36:12	2016-03-19 11:36:12	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
202	26	305e392e6167e13c149f89a2	superseded	cpp	word-count	\N	\N	0	2	126	2016-03-30 18:46:31	2016-03-30 18:46:31	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
349	35	634a3360b09b6432230fbdae	pending	rust	difference-of-squares	\N	\N	0	1	211	2016-01-17 02:51:46	2016-01-17 02:51:46	{"src/lib.rs":"pub fn square_of_sum(n: u64) -\\u003e u64 {\\n    let sum = (0..n + 1).fold(0, |a, b| a + b);\\n    sum * sum\\n}\\n\\npub fn sum_of_squares(n: u64) -\\u003e u64 {\\n    (0..n + 1).fold(0, |a, b| a + b * b)\\n}\\n\\npub fn difference(n: u64) -\\u003e u64 {\\n    square_of_sum(n) - sum_of_squares(n)    \\n}"}
203	26	0ac50808b9d43a91dcdfa271	superseded	cpp	word-count	\N	\N	0	1	126	2016-05-01 20:07:30	2016-05-01 20:07:30	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
204	26	30d75cd460abc2e778347d80	superseded	cpp	word-count	\N	\N	0	3	126	2016-06-30 00:34:19	2016-06-30 00:34:19	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
205	26	0692a390375ae0a7c2bfb7c5	pending	ocaml	bob	\N	\N	0	1	127	2016-04-07 04:41:03	2016-04-07 04:41:03	{"/ocaml/bob/bob.ml":"open Core.Std\\n\\n(* We can't really use String.is_empty because we have to handle strings\\n   that only contain whitespace. *)\\nlet is_empty = String.for_all ~f:Char.is_whitespace\\n\\nlet is_shouting input =\\n  String.exists ~f:Char.is_alpha input \\u0026\\u0026\\n  String.for_all ~f:Char.is_uppercase (String.filter ~f:Char.is_alpha input)\\n\\nlet is_question = String.is_suffix ~suffix:\\"?\\"\\n\\nlet response_for = function\\n  | input when is_empty input    -\\u003e \\"Fine. Be that way!\\"\\n  | input when is_shouting input -\\u003e \\"Whoa, chill out!\\"\\n  | input when is_question input -\\u003e \\"Sure.\\"\\n  | _                            -\\u003e \\"Whatever.\\""}
206	26	e43f881e011c3623c0a51f2a	\N	elixir	acronym	\N	\N	0	3	128	2016-03-31 17:10:31	2016-03-31 17:10:31	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string\\n    |\\u003e String.split(~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    |\\u003e Enum.reduce(\\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
207	26	d7c1242b307104446bd8770a	\N	elixir	acronym	\N	\N	0	2	128	2016-04-04 07:39:12	2016-04-04 07:39:12	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
208	26	00ac5e4413156fbb704839c0	\N	elixir	acronym	\N	\N	0	1	128	2016-06-05 18:26:04	2016-06-05 18:26:04	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/(\\\\s|\\\\W|([a-z](?=[A-Z])))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
209	26	e3dcd1918eaf424e6be435d0	\N	javascript	anagram	\N	\N	0	1	129	2016-01-21 00:28:54	2016-01-21 00:28:54	{"anagram.js":"var Anagram = function(string) {\\n  this.string = string;\\n};\\n\\nAnagram.prototype.createDictionary = function(input) {\\n  var dict = {};\\n  for (var i = 0; i \\u003c input.length; i++) {\\n    var lil = input[i].toLowerCase();\\n    if (dict[lil] !== undefined) { dict[lil] += 1;}\\n    else { dict[lil] = 1;}\\n  }\\n  return dict;\\n};\\n\\nAnagram.prototype.checker = function(dict, check) {\\n  if (Object.keys(dict).length !== Object.keys(check).length) { return false; }\\n  for (var i in dict ) {\\n    if (dict[i] !== check[i]) { return false; }\\n  }\\n  return true;\\n};\\n\\nAnagram.prototype.matches = function(input) {\\n  if (arguments.length \\u003e 1) {\\n    var temp = [];\\n    for (var i = 0; i \\u003c arguments.length; i++) {\\n      temp.push(arguments[i]);\\n    }\\n    input = temp;\\n  }\\n  if (typeof(input) === 'string'){input = [input];}\\n  var matches = [];\\n  var string = this.string.toLowerCase();\\n  if (string === '') { return [];}\\n  var dict = this.createDictionary(string);\\n    for (var i = 0; i \\u003c input.length; i++) {\\n      if (input[i].toLowerCase() === string) { continue; }\\n      var check = this.createDictionary(input[i]);\\n      if (this.checker(dict, check)) { matches.push(input[i]); }\\n    }\\n  return matches;\\n};\\n\\nmodule.exports = Anagram;"}
210	26	f671b478b5fcfd7f123b3841	hibernating	cpp	phone-number	\N	\N	0	2	130	2016-01-20 05:43:22	2016-01-20 05:43:22	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = clean_number(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string clean_number(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (isdigit(c)) tmp_pnum += c;\\n        }\\n\\n        // eliminate numbers that are the wrong length\\n        if (tmp_pnum.size() \\u003c 10 || tmp_pnum.size() \\u003e 11) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11) {\\n            // only 11 digit numbers that have a country code of 1 are valid\\n            if (tmp_pnum[0] == '1') {\\n                tmp_pnum.erase(0, 1);\\n            } else {\\n                // I can't think of a way to not repeat myself without\\n                // having a really confusing conditional\\n                tmp_pnum = \\"0000000000\\";\\n            }\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
211	26	3de22bb04787a8ec631750cc	superseded	cpp	phone-number	\N	\N	0	1	130	2016-04-02 16:06:22	2016-04-02 16:06:22	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = rm_fmt(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string rm_fmt(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (c \\u003e= '0' \\u0026\\u0026 c \\u003c= '9') tmp_pnum += c;\\n        }\\n\\n        if (tmp_pnum.size() \\u003c 10 || (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] != '1')) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] == '1') {\\n            tmp_pnum.erase(0, 1);\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
212	26	ed12a2d75dec5bb8c6dbc892	superseded	javascript	etl	\N	\N	0	1	131	2016-02-08 11:44:03	2016-02-08 11:44:03	{"etl.js":"module.exports = function (old) {\\n    var result = {};\\n\\n    for (var prop in old)\\n        old[prop].forEach(function (ltr) {\\n            result[ltr.toLowerCase()] = parseInt(prop, 10);\\n        });\\n\\n    return result;\\n}"}
213	26	65b0a09fd1acb49e063cb8c5	pending	javascript	etl	\N	\N	0	2	131	2016-03-29 04:09:46	2016-03-29 04:09:46	{"etl.js":"module.exports = function (old) {\\n    return Object.keys(old).reduce(function(result, prop) {\\n        return old[prop].reduce(function(ltrs, ltr) {\\n            ltrs[ltr.toLowerCase()] = parseInt(prop, 10);\\n            return ltrs;\\n        }, result);\\n    }, {});\\n}"}
214	26	29af2ba352bb6ee0d774d234	pending	javascript	food-chain	\N	\N	0	1	132	2016-01-31 03:21:35	2016-01-31 03:21:35	{"food-chain.js":"exports.verses = verses;\\nexports.verse  = verse;\\n\\n\\nfunction verses(first, last) {\\n  var idx = first - 1;\\n  var end = last;\\n  var str = [];\\n\\n  while (++idx \\u003c= end) {\\n    str.push(verse(idx));\\n  }\\n\\n  return str.join(\\"\\\\n\\") + \\"\\\\n\\";\\n};\\n\\n\\n\\nfunction verse(number) {\\n  switch (number) {\\n    case 1: return \\"\\" +\\n      \\"I know an old lady who swallowed a fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 2: return \\"\\" +\\n      \\"I know an old lady who swallowed a spider.\\\\n\\" + \\"It wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 3: return \\"\\" +\\n      \\"I know an old lady who swallowed a bird.\\\\n\\" + \\"How absurd to swallow a bird!\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 4: return \\"\\" +\\n      \\"I know an old lady who swallowed a cat.\\\\n\\" + \\"Imagine that, to swallow a cat!\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 5: return \\"\\" +\\n      \\"I know an old lady who swallowed a dog.\\\\n\\" + \\"What a hog, to swallow a dog!\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n      \\"She swallowed the cat to catch the bird.\\\\n\\" + \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 6: return \\"\\" +\\n      \\"I know an old lady who swallowed a goat.\\\\n\\" + \\"Just opened her throat and swallowed a goat!\\\\n\\" + \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n      \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 7: return \\"\\" +\\n      \\"I know an old lady who swallowed a cow.\\\\n\\" + \\"I don't know how she swallowed a cow!\\\\n\\" + \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n      \\"She swallowed the goat to catch the dog.\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 8: return \\"\\" +\\n      \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n  };\\n};"}
215	26	59f4e88d6ddb5cbc35b8202f	\N	ecmascript	hello-world	\N	\N	0	1	133	2016-05-15 23:12:29	2016-05-15 23:12:29	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
216	26	42e0d86c9e3823258c3435fb	\N	ruby	space-age	\N	\N	0	3	134	2016-01-18 23:34:07	2016-01-18 23:34:07	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method method_name, :on }\\nend"}
217	26	c6cb04e1e99462c7444c4d04	\N	ruby	space-age	\N	\N	0	1	134	2016-02-06 10:22:28	2016-02-06 10:22:28	{"space_age.rb":"class SpaceAge\\n\\tattr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n      :on_earth =\\u003e 1,\\n      :on_mercury =\\u003e 0.2408467,\\n      :on_venus =\\u003e 0.61519726, \\n      :on_mars =\\u003e 1.8808158, \\n      :on_jupiter =\\u003e 11.862615, \\n      :on_saturn =\\u003e 29.447498, \\n      :on_uranus =\\u003e 84.016846,  \\n      :on_neptune =\\u003e 164.79132 }\\n\\n\\tdef initialize seconds_old\\n\\t\\t@seconds = seconds_old\\n\\tend\\n  # Is this overly complicated? Heck yes. But it was fun!\\n\\tdef on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.) \\n\\t\\t@seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n\\tend\\n  # Alias the methods so that they all point to the on method\\n\\tPLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
218	26	f199a17f749a10714f981325	\N	ruby	space-age	\N	\N	0	2	134	2016-05-27 18:06:39	2016-05-27 18:06:39	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
219	26	3b537df3ca6e6c96dc09a211	pending	erlang	sum-of-multiples	\N	\N	0	1	135	2016-03-25 14:43:23	2016-03-25 14:43:23	{"/erlang/sum-of-multiples/sum_of_multiples.erl":"-module(sum_of_multiples).\\n-export([sumOfMultiplesDefault/1, sumOfMultiples/2]).\\n\\n-spec sumOfMultiplesDefault(pos_integer()) -\\u003e non_neg_integer().\\nsumOfMultiplesDefault(UpTo) -\\u003e\\n  sumOfMultiples([3, 5], UpTo).\\n\\n-spec sumOfMultiples([pos_integer()], pos_integer()) -\\u003e non_neg_integer().\\nsumOfMultiples(Multiples, UpTo) -\\u003e\\n  Matches = [I || I \\u003c- lists:seq(1, UpTo - 1), any_multiple(I, Multiples)],\\n  sum(Matches).\\n\\n-spec sum([number()]) -\\u003e number().\\nsum(List) -\\u003e\\n  lists:foldl(fun(X, Y) -\\u003e X + Y end, 0, List).\\n\\n%% Predicate which returns whether I is a multiple of any value in Multiples.\\n-spec any_multiple(integer(), [integer()]) -\\u003e boolean().\\nany_multiple(I, Multiples) -\\u003e\\n  lists:any(fun(M) -\\u003e I rem M =:= 0 end, Multiples)."}
251	7	62243217be5875457cac6dc4	\N	javascript	leap	\N	\N	0	1	153	2016-01-14 10:51:47	2016-01-14 10:51:47	{"leap.js":"var Leap = function(year) {\\n  /*\\n  on every year that is evenly divisible by 4\\n  except every year that is evenly divisible by 100\\n  unless the year is also evenly divisible by 400\\n  */\\n  var mod = year % 4;\\n  \\n  if (mod == 0) {\\n    var mod100 = year % 100;\\n    if (mod100 == 0){\\n      var mod400 = year % 400;\\n      if (mod400 == 0){\\n        return true;\\n      }\\n      else{\\n        return false;\\n      }\\n    }\\n  }\\n  return (mod == 0);\\n};\\n\\n\\n\\nmodule.exports = Leap;"}
220	26	849e181c876641fb2dd04df0	\N	csharp	bob	\N	\N	0	2	136	2016-01-29 00:27:48	2016-01-29 00:27:48	{"Bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tprivate const string YELL_ANSWER = \\"Whoa, chill out!\\";\\r\\n\\t\\tprivate const string QUESTION_ANSWER = \\"Sure.\\";\\r\\n\\t\\tprivate const string SILENCE_ANSWER = \\"Fine. Be that way!\\";\\r\\n\\t\\tprivate const string NORMAL_ANSWER = \\"Whatever.\\";\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn SILENCE_ANSWER;\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn YELL_ANSWER;\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn QUESTION_ANSWER;\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn NORMAL_ANSWER;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
221	26	82797e5b0b3d400ca330d0ef	\N	csharp	bob	\N	\N	0	1	136	2016-02-16 12:53:00	2016-02-16 12:53:00	{"bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Fine. Be that way!\\";\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Whoa, chill out!\\";\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Sure.\\";\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn \\"Whatever.\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
222	26	6c8a6ad0911efc532621db4f	pending	python	kindergarten-garden	\N	\N	0	1	137	2016-01-20 08:47:32	2016-01-20 08:47:32	{"garden.py":"class Garden():\\r\\n    def __init__(self, gardenStr, students=None):\\r\\n        self.gardenStr = gardenStr\\r\\n        if students is None:\\r\\n            self.students = [\\"Alice\\", \\"Bob\\", \\"Charlie\\", \\"David\\", \\"Eve\\", \\"Fred\\", \\"Ginny\\", \\"Harriet\\",\\r\\n                             \\"Ileana\\", \\"Joseph\\", \\"Kincaid\\", \\"Larry\\"]\\r\\n        else:\\r\\n            self.students = students\\r\\n        self.students.sort()\\r\\n        self.plantsDict = {\\"G\\":\\"Grass\\", \\"C\\":\\"Clover\\", \\"V\\":\\"Violets\\", \\"R\\":\\"Radishes\\"}\\r\\n\\r\\n    def plants(self, student):\\r\\n        if student not in self.students:\\r\\n            raise ValueError(\\"Invalid kid name\\")\\r\\n        i = self.students.index(student)\\r\\n        rows = self.gardenStr.split()\\r\\n        plantsStr = rows[0][i * 2:i * 2 + 2] + rows[1][i * 2:i * 2 + 2]\\r\\n        res = [self.plantsDict[p] for p in plantsStr]\\r\\n        return res\\r\\n\\r\\n\\r\\n\\r\\n\\r"}
223	26	2ff5c17d21338340f2006e27	pending	ruby	phone-number	\N	\N	0	1	138	2016-02-04 11:29:03	2016-02-04 11:29:03	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n\\tattr_reader:number\\n\\tdef initialize(n)\\n\\t\\t@number = n.gsub(/[^0-9]/, '')\\n\\t\\t@number.slice!(0) if @number.length == 11 \\u0026\\u0026 @number[0] == '1'\\n\\t\\t@number = '0000000000' if @number.length != 10 || n.length \\u003e 14\\n\\tend\\n\\n\\tdef area_code\\n\\t\\t@number.slice(0..2)\\n\\tend\\n\\n\\tdef to_s\\n\\t\\t\\"(#{area_code()}) #{@number.slice(3..5)}-#{@number.slice(6..9)}\\"\\n\\tend\\nend"}
224	26	ba7eaf0af0c274029d78c9fb	done	haskell	gigasecond	\N	\N	0	2	139	2016-04-23 12:48:08	2016-04-23 12:48:08	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\ngigasecond = 10^9 :: NominalDiffTime\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime gigasecond $ UTCTime d 0"}
225	26	58dc85cb273c10dba7721be9	superseded	haskell	gigasecond	\N	\N	0	1	139	2016-06-30 17:21:39	2016-06-30 17:21:39	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime (10^9) $ UTCTime d 0"}
226	26	d691a5348dd91473ce93dadd	done	python	word-count	\N	\N	0	1	140	2016-02-26 05:48:52	2016-02-26 05:48:52	{"/python/word-count/wordcount.py":"def word_count(s):\\n    if s == '':\\n        return\\n\\n    s = s.replace('\\\\n', ' ')\\n    s = s.replace('\\\\t', ' ')\\n    word_list = s.split(' ')\\n    word_dict = {}\\n\\n    for w in word_list:\\n        if w == '':\\n            continue\\n\\n        if not word_dict.has_key(w):\\n            word_dict[w] = 1\\n        else:\\n            word_dict[w] += 1\\n\\n    return word_dict"}
227	26	df00e15ada1172226817f2ac	superseded	javascript	word-count	\N	\N	0	4	141	2016-02-15 05:41:07	2016-02-15 05:41:07	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word, index, array) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
228	26	cba3aac733b3b62c143d8243	superseded	javascript	word-count	\N	\N	0	3	141	2016-04-13 23:14:21	2016-04-13 23:14:21	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/g).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] += 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
229	26	29b4f44779023cdf3644cb75	superseded	javascript	word-count	\N	\N	0	2	141	2016-04-15 06:57:56	2016-04-15 06:57:56	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/gi).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] = counts[word] + 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
230	26	621f4a2be237efb1c812c9fa	done	javascript	word-count	\N	\N	0	5	141	2016-04-29 22:38:22	2016-04-29 22:38:22	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
231	26	89d03f9444c9747d33e4556f	superseded	javascript	word-count	\N	\N	0	1	141	2016-05-25 04:59:33	2016-05-25 04:59:33	{"word-count.js":"function words(input) {\\n  var individualWords = input.split(' ');\\n  var counts = {};\\n  individualWords.forEach(function(w) {\\n    var cleanWord = w.match(/[a-zA-Z0-9]*/)[0];\\n    if (cleanWord !== null \\u0026\\u0026 cleanWord !== '') {\\n      cleanWord = cleanWord.toLowerCase();\\n      if (counts[cleanWord]) {\\n        counts[cleanWord] = counts[cleanWord] + 1;\\n      } else {\\n        counts[cleanWord] = 1;\\n      }\\n    }\\n  }, this);\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
232	26	1d9a4906f49da237d2d51c00	\N	perl5	bob	\N	\N	0	1	142	2016-05-27 18:04:42	2016-05-27 18:04:42	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
234	26	4849f0ffdbdecc8918228016	\N	php	roman-numerals	\N	\N	0	1	144	2016-01-17 11:02:14	2016-01-17 11:02:14	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number) {\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\tforeach( array_reverse( $numerals ) as $k =\\u003e $v ) {\\n\\t\\twhile($number \\u003e= $v) {\\n\\t\\t\\t$roman_num .= $k;\\n\\t\\t\\t$number -= $v;\\n\\t\\t}\\n\\t}\\n\\treturn $roman_num;\\n}"}
235	26	3d07776081f9ce0c46854ff6	\N	php	roman-numerals	\N	\N	0	2	144	2016-03-08 14:02:50	2016-03-08 14:02:50	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number)\\n{\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\n\\tforeach(array_reverse($numerals) as $k =\\u003e $v) {\\n\\t\\t$roman_num .= str_repeat($k, $number / $v);\\n\\t\\t$number %= $v;\\n\\t}\\n\\treturn $roman_num;\\n}"}
236	26	bfede4763c6fc1b189744a55	pending	ruby	hamming	\N	\N	0	1	145	2016-02-08 23:05:53	2016-02-08 23:05:53	{"hamming.rb":"class Hamming\\n\\tdef self.compute(strand_1, strand_2)\\n\\t\\ta, b = strand_1.split(//), strand_2.split(//)\\n\\t\\ta.each_with_index.map { |e, i| e == b[i]}.select{ |e| e == false}.count\\n\\tend\\nend"}
237	26	256aef40e2b676ae0085b2c5	done	ruby	strain	\N	\N	0	1	146	2016-06-23 02:17:39	2016-06-23 02:17:39	{"array.rb":"class Array\\r\\n  def keep\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if yield(i)}\\r\\n    out\\r\\n  end\\r\\n\\r\\n  def discard\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if not yield(i)}\\r\\n    out\\r\\n  end\\r\\nend\\r"}
238	26	99ca928a96433ea076766cc9	superseded	haskell	sum-of-multiples	\N	\N	0	1	147	2016-02-28 21:10:07	2016-02-28 21:10:07	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: (Ord a, Num a, Enum a) =\\u003e [a] -\\u003e a -\\u003e a \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
239	26	38f31636d2c95697d9c9c290	done	haskell	sum-of-multiples	\N	\N	0	2	147	2016-06-10 07:41:15	2016-06-10 07:41:15	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: [Integer] -\\u003e Integer -\\u003e Integer \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
240	7	71e046dd2d12fc6a56638b87	superseded	rust	anagram	\N	\N	0	1	148	2016-01-31 22:28:34	2016-01-31 22:28:34	{"src/lib.rs":"use std::ascii::AsciiExt;\\n\\n//fn remove_spaces(input: \\u0026str) -\\u003e String {\\n//   let mut buf = String::with_capacity(input.len());\\n//   for c in input.chars() {\\n//     buf.push(c);\\n//   }\\n//   buf\\n//}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn unicode_lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n//    let mut chars: Vec\\u003cchar\\u003e = s.chars().into_iter().collect();\\n    //let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()).collect();\\n//    let mut chars = lower_case_s.chars();\\n    chars.sort();\\n//    let lc: String = chars.map(|c| c.to_lowercase()).collect();\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string: String = lc_sorted_str(s);\\n    let s_string = s.to_string();\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if s_string.ne(anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    return answers;\\n}"}
241	7	70a40cc0476cf1bd6d1b1530	superseded	rust	anagram	\N	\N	0	3	148	2016-04-03 22:53:13	2016-04-03 22:53:13	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = to_lowercase(s, true); // : String\\n    let lowercase_s = to_lowercase(s, false);  // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = to_lowercase(\\u0026anagram, true);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram, false) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\nfn to_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    //! lower case and optionally sort the string\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    // sort if necessary\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
252	7	6c03ddbea79abff79bec265f	hibernating	ruby	gigasecond	\N	\N	0	1	154	2015-12-27 10:18:49	2015-12-27 10:18:49	{"gigasecond.rb":"require 'date'\\nrequire 'time'\\nGS = 1_000_000_000\\n\\nclass Gigasecond\\n  def self.from(t)\\n    if t.is_a? Date\\n      origin_time = t.to_time\\n    else\\n      origin_time = t\\n    end\\n    return (origin_time + GS).to_date\\n  end\\nend"}
253	7	2913dfae239833247b01e6b6	\N	ruby	raindrops	\N	\N	0	6	155	2016-01-02 22:47:57	2016-01-02 22:47:57	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    unless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = \\"\\"\\n    sound \\u003c\\u003c \\"Pling\\" if drop % 3 == 0\\n    sound \\u003c\\u003c \\"Plang\\" if drop % 5 == 0\\n    sound \\u003c\\u003c \\"Plong\\" if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
242	7	516a5a1e4a0e367a4ef8b413	superseded	rust	anagram	\N	\N	0	2	148	2016-05-15 17:51:41	2016-05-15 17:51:41	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = lc_sorted_str(s); // : String\\n    let lowercase_s = to_lowercase(s); // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    // lower case the string and then sort.\\n\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n    let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()\\n                                             .next()\\n                                             .expect(\\"should be char\\")).into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\nfn to_lowercase(instr: \\u0026str) -\\u003e String {\\n    // copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n    instr.chars().map(|c| c.to_lowercase()\\n                      .next()\\n                      .expect(\\"Should be char\\"))\\n        .collect::\\u003cString\\u003e()\\n}"}
243	7	7921bd855c3ae448aa7a57b5	done	rust	anagram	\N	\N	0	4	148	2016-05-28 22:42:20	2016-05-28 22:42:20	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = sorted_lowercase(s); // : String\\n    let lowercase_s = lowercase(s);          // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = sorted_lowercase(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\n/// lower case the unicode string\\nfn lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, false)\\n}\\n\\n/// lower case and sort the unicode string\\nfn sorted_lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, true)\\n}\\n\\n/// lower case and optionally sort the string\\nfn _to_sorted_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
244	7	ee8c39985f0420048db63a9b	superseded	clojure	rna-transcription	\N	\N	0	1	149	2016-03-25 11:17:40	2016-03-25 11:17:40	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
245	7	9ff47c811518ff41beb0bf04	pending	clojure	rna-transcription	\N	\N	0	2	149	2016-05-25 12:29:51	2016-05-25 12:29:51	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
246	7	052be35f5660a9e2bc67dda7	\N	php	roman-numerals	\N	\N	0	1	150	2016-02-15 04:37:58	2016-02-15 04:37:58	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number) {\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\tforeach( array_reverse( $numerals ) as $k =\\u003e $v ) {\\n\\t\\twhile($number \\u003e= $v) {\\n\\t\\t\\t$roman_num .= $k;\\n\\t\\t\\t$number -= $v;\\n\\t\\t}\\n\\t}\\n\\treturn $roman_num;\\n}"}
247	7	fbc6d7f42f03369d3cf84788	\N	php	roman-numerals	\N	\N	0	2	150	2016-04-15 16:46:25	2016-04-15 16:46:25	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number)\\n{\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\n\\tforeach(array_reverse($numerals) as $k =\\u003e $v) {\\n\\t\\t$roman_num .= str_repeat($k, $number / $v);\\n\\t\\t$number %= $v;\\n\\t}\\n\\treturn $roman_num;\\n}"}
248	7	e3ca89192f50213578a9dcf0	hibernating	python	series	\N	\N	0	2	151	2015-12-07 08:40:02	2015-12-07 08:40:02	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:       \\n        #Convert each digit to integer\\n        digit_list = [int(d) for d in digits]\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
249	7	44a44b8881102fbf522fe5ba	superseded	python	series	\N	\N	0	1	151	2016-05-23 10:58:26	2016-05-23 10:58:26	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:\\n        digit_list = []\\n        #Convert each digit to integer\\n        for d in digits:\\n            digit_list.append(int(d))\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
250	7	a591d0c74a2e1924c71b3618	done	python	rna-transcription	\N	\N	0	1	152	2016-01-08 12:40:42	2016-01-08 12:40:42	{"dna.py":"__author__ = 'Adrian Rivera'\\r\\n\\r\\n\\r\\nfrom string import maketrans\\r\\n\\r\\n\\r\\nmapping = maketrans('GCTA', 'CGAU')\\r\\n\\r\\n\\r\\nclass DNA(object):\\r\\n\\r\\n    def __init__(self, strand):\\r\\n        self.strand = strand\\r\\n\\r\\n    def to_rna(self):\\r\\n        return self.strand.translate(mapping)\\r"}
254	7	d9619e711c9e95e0484518d9	\N	ruby	raindrops	\N	\N	0	5	155	2016-01-15 22:41:52	2016-01-15 22:41:52	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    unless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = ''\\n    sound \\u003c\\u003c 'Pling' if drop % 3 == 0\\n    sound \\u003c\\u003c 'Plang' if drop % 5 == 0\\n    sound \\u003c\\u003c 'Plong' if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
255	7	72a7260296bed4147cd99f85	\N	ruby	raindrops	\N	\N	0	4	155	2016-01-20 14:08:30	2016-01-20 14:08:30	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n  \\tunless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = ''\\n    sound \\u003c\\u003c 'Pling' if drop % 3 == 0\\n    sound \\u003c\\u003c 'Plang' if drop % 5 == 0\\n    sound \\u003c\\u003c 'Plong' if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
256	7	914bea5a08461b0ec58aef55	\N	ruby	raindrops	\N	\N	0	2	155	2016-02-15 08:19:13	2016-02-15 08:19:13	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    sound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n  end\\n  end\\nend"}
257	7	6c3b0f6bb23472789cd7eb8c	\N	ruby	raindrops	\N	\N	0	1	155	2016-03-06 23:39:11	2016-03-06 23:39:11	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n  \\tsound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n  end\\n  end\\nend"}
258	7	5560a7a5c964309ae2940f0c	\N	ruby	raindrops	\N	\N	0	3	155	2016-04-18 16:18:23	2016-04-18 16:18:23	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    sound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n  end\\nend"}
259	7	ddeb85e6f063e4ddd114a6cb	done	javascript	hello-world	\N	\N	0	1	156	2015-12-11 03:51:30	2015-12-11 03:51:30	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\nif(!input) {\\n    return \\"Hello, world!\\";\\n}\\nelse return \\"Hello, \\" + input + \\"!\\";\\n};\\n\\nmodule.exports = HelloWorld;"}
260	7	fd47c6564b38dbf3640f7f32	done	haskell	difference-of-squares	\N	\N	0	3	157	2016-01-08 07:15:20	2016-01-08 07:15:20	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n `pow` 3 + 3 * n `pow` 2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n `pow` 4 + 2 * n `pow` 3 + n `pow` 2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n `pow` 4 + 2 * n `pow` 3 - 3 * n `pow` 2 - 2 * n) `div` 12\\n\\npow :: Num a =\\u003e a -\\u003e Int -\\u003e a\\npow = (^)"}
261	7	995110924dd6727f522eb1a6	superseded	haskell	difference-of-squares	\N	\N	0	2	157	2016-02-20 07:42:50	2016-02-20 07:42:50	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n^3 + 3 * n^2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n^4 + 2 * n^3 + n^2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n^4 + 2 * n^3 - 3 * n^2 - 2 * n) `div` 12"}
262	7	b882d2b0363c3aa8d1163f64	superseded	haskell	difference-of-squares	\N	\N	0	1	157	2016-04-27 05:31:27	2016-04-27 05:31:27	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (sum . map square) [1..n]\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (square . sum) [1..n]\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = squareOfSums n - sumOfSquares n\\n\\nsquare :: (Integral a) =\\u003e a -\\u003e a\\nsquare x = x * x"}
263	7	2aa74d4a888e61312a81921d	done	ruby	secret-handshake	\N	\N	0	4	158	2016-02-17 09:09:20	2016-02-17 09:09:20	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c mandate[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def mandate\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
473	18	6dc436fc3ba614938c12031c	pending	haskell	accumulate	\N	\N	0	2	293	2016-07-19 02:57:00	2016-07-19 02:57:00	{"Accumulate.hs":"module Accumulate where\\n\\n\\ntype T a b = (a -\\u003e b)\\n\\n\\ntype AccumulativeTransform c a b = (T a b -\\u003e c a -\\u003e c b)\\n\\n\\nclass Accumulatable c where\\n    accumulate :: AccumulativeTransform c a b\\n\\n\\ninstance Accumulatable [] where\\n    accumulate = accumulateList\\n\\n\\naccumulateList :: AccumulativeTransform [] a b\\naccumulateList _ [] = []\\naccumulateList f (x:xs) = f x : accumulate f xs"}
264	7	db30c03212c4f1cd30668091	superseded	ruby	secret-handshake	\N	\N	0	3	158	2016-04-23 23:13:06	2016-04-23 23:13:06	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c known_commands[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def known_commands\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
265	7	1f62a91296aa7ac67f46b6ea	superseded	ruby	secret-handshake	\N	\N	0	2	158	2016-05-22 13:22:07	2016-05-22 13:22:07	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def reactions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
266	7	9d3d889507c377a72eed0e2f	superseded	ruby	secret-handshake	\N	\N	0	1	158	2016-06-25 06:00:41	2016-06-25 06:00:41	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def actions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
267	7	b086a6678f81e2012cd61f37	superseded	javascript	word-count	\N	\N	0	4	159	2015-12-05 22:49:56	2015-12-05 22:49:56	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word, index, array) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
268	7	288551b4c52c1fc66d03baa6	superseded	javascript	word-count	\N	\N	0	3	159	2016-01-17 00:30:38	2016-01-17 00:30:38	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/g).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] += 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
269	7	a4c964632834ef879e3525ba	superseded	javascript	word-count	\N	\N	0	2	159	2016-02-18 10:47:45	2016-02-18 10:47:45	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/gi).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] = counts[word] + 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
270	7	7fe107e16d6b97e32c687ebe	done	javascript	word-count	\N	\N	0	5	159	2016-06-02 23:03:56	2016-06-02 23:03:56	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
271	7	7abf85199f87b14c47f606b0	superseded	javascript	word-count	\N	\N	0	1	159	2016-06-30 23:11:05	2016-06-30 23:11:05	{"word-count.js":"function words(input) {\\n  var individualWords = input.split(' ');\\n  var counts = {};\\n  individualWords.forEach(function(w) {\\n    var cleanWord = w.match(/[a-zA-Z0-9]*/)[0];\\n    if (cleanWord !== null \\u0026\\u0026 cleanWord !== '') {\\n      cleanWord = cleanWord.toLowerCase();\\n      if (counts[cleanWord]) {\\n        counts[cleanWord] = counts[cleanWord] + 1;\\n      } else {\\n        counts[cleanWord] = 1;\\n      }\\n    }\\n  }, this);\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
272	7	290b9a68a219c26e4e12d92e	hibernating	cpp	phone-number	\N	\N	0	2	160	2016-03-27 14:56:19	2016-03-27 14:56:19	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = clean_number(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string clean_number(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (isdigit(c)) tmp_pnum += c;\\n        }\\n\\n        // eliminate numbers that are the wrong length\\n        if (tmp_pnum.size() \\u003c 10 || tmp_pnum.size() \\u003e 11) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11) {\\n            // only 11 digit numbers that have a country code of 1 are valid\\n            if (tmp_pnum[0] == '1') {\\n                tmp_pnum.erase(0, 1);\\n            } else {\\n                // I can't think of a way to not repeat myself without\\n                // having a really confusing conditional\\n                tmp_pnum = \\"0000000000\\";\\n            }\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
285	7	ca8ce15b673ae0a5b255d75d	hibernating	perl5	bob	\N	\N	0	1	169	2016-01-16 01:46:30	2016-01-16 01:46:30	{"bob.pm":"package Bob;\\n\\nuse 5.16.0;\\nuse strict;\\nuse warnings;\\n\\nsub hey($)\\n{\\n    my $saywhat=shift;\\n    print \\"saywhat=$saywhat\\\\n\\";\\n\\n    for ($saywhat) {\\n        when(/^\\\\s*$/)               { return(\\"Fine. Be that way!\\") }\\n        when(/[[:alpha:]]/ \\u0026\\u0026 uc)   { return(\\"Woah, chill out!\\") }  \\n        when(/\\\\?$/)                 { return(\\"Sure.\\") }\\n        default                     { return(\\"Whatever.\\") }\\n    };\\n}\\n\\n1;"}
474	18	b533559184dd6ceb4e9f5111	pending	haskell	accumulate	\N	\N	0	1	293	2016-07-30 00:06:27	2016-07-30 00:06:27	{"Accumulate.hs":"module Accumulate where\\n\\n\\n\\naccumulate :: (a -\\u003e b) -\\u003e [a] -\\u003e [b]\\naccumulate _ [] = []\\naccumulate f (x:xs) = f x : accumulate f xs"}
273	7	dc59b9642fe070fd8daefa27	superseded	cpp	phone-number	\N	\N	0	1	160	2016-05-16 03:37:11	2016-05-16 03:37:11	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = rm_fmt(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string rm_fmt(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (c \\u003e= '0' \\u0026\\u0026 c \\u003c= '9') tmp_pnum += c;\\n        }\\n\\n        if (tmp_pnum.size() \\u003c 10 || (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] != '1')) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] == '1') {\\n            tmp_pnum.erase(0, 1);\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
274	7	e4caf5839fd8fc763cf8f620	hibernating	javascript	hamming	\N	\N	0	1	161	2016-04-08 15:04:44	2016-04-08 15:04:44	{"hamming.js":"'use strict';\\r\\n\\r\\nvar Hamming = {};\\r\\n\\r\\nHamming.compute = function (a, b) {\\r\\n    var pos = 0,\\r\\n        distance = 0;\\r\\n\\r\\n    if (a.length !== b.length) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    while (pos \\u003c a.length) {\\r\\n        if (a[pos] !== b[pos]) {\\r\\n            distance = distance + 1;\\r\\n        }\\r\\n        pos = pos + 1;\\r\\n    }\\r\\n    return distance;\\r\\n};\\r\\n\\r\\nmodule.exports = Hamming;"}
275	7	6793a25cc8bd3cc06b64a3c9	superseded	python	leap	\N	\N	0	1	162	2016-01-21 10:12:40	2016-01-21 10:12:40	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False\\n\\n\\n# class is_leap_year(object):\\n# \\tdef __init__(self, year):\\n# \\t\\tself.year = year\\n\\n# \\tdef _is_divisible_by(self, num):\\n# \\t\\treturn self.year % num == 0\\n\\n# \\tdef is_leap_year(self):\\n# \\t\\treturn self._is_divisible_by(4) and not self._is_divisible_by(100) or self._is_divisible_by(400)"}
276	7	14ddd28e075f19b1d9028367	hibernating	python	leap	\N	\N	0	2	162	2016-05-21 10:11:42	2016-05-21 10:11:42	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False"}
277	7	7f353a5886407aab944873f7	done	cpp	etl	\N	\N	0	2	163	2016-01-17 14:07:23	2016-01-17 14:07:23	{"etl.h":"#include \\u003cvector\\u003e\\n#include \\u003cmap\\u003e\\n#include \\u003cctype.h\\u003e\\nusing namespace std;\\n\\nnamespace etl\\n{\\n\\n\\tmap\\u003cchar, int\\u003e transform(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e old)\\n\\t{\\n\\t\\tmap\\u003cchar, int\\u003e returnValue;\\n\\t\\tfor(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e::iterator it = old.begin(); it != old.end(); ++it)\\n\\t\\t{\\n\\t\\t\\tfor(int i = 0; i \\u003c it-\\u003esecond.size(); ++i)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif(isalpha(it-\\u003esecond[i]))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturnValue[tolower(it-\\u003esecond[i])] = it-\\u003efirst;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn returnValue;\\n\\n\\t}\\n}"}
278	7	8830d15ff67b1730e4aec86b	superseded	cpp	etl	\N	\N	0	1	163	2016-03-03 10:14:55	2016-03-03 10:14:55	{"etl.h":"#include \\u003cvector\\u003e\\n#include \\u003cmap\\u003e\\n#include \\u003cctype.h\\u003e\\n#include \\u003calgorithm\\u003e\\n\\nusing namespace std;\\n\\nnamespace etl\\n{\\n\\n\\tmap\\u003cchar, int\\u003e transform(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e old)\\n\\t{\\n\\t\\tint i = 0;\\n\\t\\tint k = 0;\\n\\t\\tvector\\u003cint\\u003e v;\\n\\t\\tfor(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e::iterator it = old.begin(); it != old.end(); ++it)\\n\\t\\t{\\n\\t\\t\\tv.push_back(it-\\u003efirst);\\n\\t\\t}\\n\\t\\tmap\\u003cchar, int\\u003e returnValue;\\n\\n\\t\\twhile(true)\\n\\t\\t{\\n\\t\\t\\tk = v[i];\\n\\t\\t\\tif(find(v.begin(), v.end(), k)!=v.end())\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor(int j = 0; j \\u003c old[k].size();j++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturnValue[tolower(old[k][j])] = k;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\treturn returnValue;\\n\\t}\\n}"}
279	7	77512741c2ba7d55cee1a967	pending	javascript	gigasecond	\N	\N	0	1	164	2016-01-02 01:32:56	2016-01-02 01:32:56	{"gigasecond.js":"var Gigasecond = function Gigasecond( birth ){\\n    \\n    this.birth = birth;\\n\\n    this.date = function(){\\n        var Gs_in_ms = Math.pow(10,9)*1000,\\n            unix_birth = this.birth.getTime(),\\n            gs_anniversary = new Date( unix_birth + Gs_in_ms );\\n        \\n        return new Date(gs_anniversary.getFullYear(), gs_anniversary.getMonth(), gs_anniversary.getDate());\\n    };\\n};\\n\\nmodule.exports = Gigasecond;"}
280	7	d5c6206c1576c0bf9f5a012b	hibernating	elixir	word-count	\N	\N	0	1	165	2016-01-26 17:30:10	2016-01-26 17:30:10	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map() \\n  def count(sentence) do\\n    sentence\\n    |\\u003e to_list()\\n    |\\u003e Enum.reduce(%{}, fn x, y -\\u003e Dict.update(y,x,1,\\u0026(\\u00261 + 1)) end)\\n    \\n  end\\n\\n  def to_list(string) do\\n    String.split(String.downcase(string), ~r{\\\\W|(!?-)}, trim: true)\\n  end\\nend"}
281	7	9006e1a0b43c4891f2451649	hibernating	javascript	food-chain	\N	\N	0	1	166	2016-04-04 14:37:02	2016-04-04 14:37:02	{"food-chain.js":"'use strict';\\n\\nvar verseOne = \\"I know an old lady who swallowed a fly.\\\\nI don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseTwo = \\"I know an old lady who swallowed a spider.\\\\nIt wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseThree = \\"I know an old lady who swallowed a bird.\\\\n\\" +\\n               \\"How absurd to swallow a bird!\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseFour = \\"I know an old lady who swallowed a cat.\\\\n\\" +\\n               \\"Imagine that, to swallow a cat!\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseFive = \\"I know an old lady who swallowed a dog.\\\\n\\" +\\n               \\"What a hog, to swallow a dog!\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSix = \\"I know an old lady who swallowed a goat.\\\\n\\" +\\n               \\"Just opened her throat and swallowed a goat!\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSeven = \\"I know an old lady who swallowed a cow.\\\\n\\" +\\n               \\"I don't know how she swallowed a cow!\\\\n\\" +\\n               \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseEight = \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n\\n// Keep all verses centralized\\nvar songVerses = {\\n  '1': verseOne,\\n  '2': verseTwo,\\n  '3': verseThree,\\n  '4': verseFour,\\n  '5': verseFive,\\n  '6': verseSix,\\n  '7': verseSeven,\\n  '8': verseEight\\n};\\n\\n// Exporting object\\nvar song = (function() {\\n  return {\\n    verse: function(verseNumber) {\\n      return songVerses[verseNumber] || 'No such verse';\\n    },\\n    verses: function(verseStart, verseEnd) {\\n\\n      // The song part init\\n      var songPart = '';\\n      var i;\\n\\n      // Construct the song part\\n      for (i = verseStart; i \\u003c= verseEnd; i++) {\\n        songPart += songVerses[i] + '\\\\n' || '';\\n      }\\n\\n      return songPart;\\n    }\\n  };\\n})();\\n\\nmodule.exports = song;"}
282	7	b363aa0c2654db3c71a22f67	hibernating	ruby	hamming	\N	\N	0	2	167	2016-01-01 01:14:33	2016-01-01 01:14:33	{"hamming.rb":"class Hamming\\n  def self.compute(a,b)\\n    a.chars.zip(b.chars).count { |x, y| x != y }\\n  end\\nend"}
283	7	9e106a9d39b6d06f906b6030	superseded	ruby	hamming	\N	\N	0	1	167	2016-01-12 00:49:59	2016-01-12 00:49:59	{"hamming.rb":"class Hamming\\n  def self.compute(a,b)\\n    arr1 = a.split('')\\n    arr2 = b.split('')\\n    count = 0\\n    \\n    arr1.length.times do |i|\\n      if arr1[i] != arr2[i]\\n        count = count + 1\\n      end\\n    end\\n    \\n    return count\\n  end\\nend"}
284	7	49a55c571856d60a2a8afe4b	\N	elixir	hello-world	\N	\N	0	1	168	2016-02-08 22:37:18	2016-02-08 22:37:18	{"hello_world.exs":"defmodule HelloWorld do\\n  def hello(name \\\\\\\\ \\"World\\") do\\n    \\"Hello, #{name}!\\"\\n  end\\nend"}
292	7	67eab2d23b6d2dc60970ae73	pending	python	gigasecond	\N	\N	0	2	172	2016-01-08 21:48:34	2016-01-08 21:48:34	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    return birthday + timedelta(seconds=10**9)"}
286	7	462102a542f99e18e781504c	done	javascript	bob	\N	\N	0	1	170	2016-02-03 19:28:02	2016-02-03 19:28:02	{"bob.js":"var Bob = function() {\\n  this.hey = function(input) {\\n    if (input.match(/[a-zA-z1-9]/) == null) {\\n        return \\"Fine. Be that way!\\"\\n      } else if (input.toUpperCase() === input \\u0026\\u0026 input.match(/[a-zA-z]/) != null){\\n        return \\"Woah, chill out!\\";\\n      } else if (input[input.length - 1] === \\"?\\" ){\\n        return \\"Sure.\\";\\n      } else {\\n        return \\"Whatever.\\";\\n      }\\n  }\\n}\\n\\nexports.Bob = Bob;"}
287	7	2cc2a42962c893175befd5bf	superseded	ruby	beer-song	\N	\N	0	3	171	2016-01-02 02:16:24	2016-01-02 02:16:24	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
288	7	98791945a45685cfb746c173	superseded	ruby	beer-song	\N	\N	0	2	171	2016-03-10 15:03:40	2016-03-10 15:03:40	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
289	7	a68971ba1b823a3948fd6e7d	superseded	ruby	beer-song	\N	\N	0	1	171	2016-03-17 04:33:11	2016-03-17 04:33:11	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
290	7	0ad2e21518f9c020a5a8fe39	superseded	ruby	beer-song	\N	\N	0	4	171	2016-04-12 16:11:48	2016-04-12 16:11:48	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
291	7	0ebfd182ff4a985cfb3dc9a8	done	ruby	beer-song	\N	\N	0	5	171	2016-05-16 04:08:24	2016-05-16 04:08:24	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
296	7	cd89ab1eac2a0fbd96efd3f8	pending	python	nth-prime	\N	\N	0	1	175	2016-02-05 22:48:41	2016-02-05 22:48:41	{"\\\\python\\\\nth-prime\\\\prime.py":"﻿# William Morris\\r\\n# exercism.io\\r\\n# prime.py\\r\\n\\r\\nimport math\\r\\n\\r\\ndef sieve(limit):\\r\\n    \\"\\"\\"\\r\\n    Based on Sieve of Eratosthenes\\r\\n    Creates a list of numbers up to the limit\\r\\n    and multiplies then deletes non-primes from the list as it goes.\\r\\n    The initial list skips even numbers.\\r\\n    \\"\\"\\"\\r\\n    numbers = range(3,limit+1,2)\\r\\n    for prime in numbers:\\r\\n        for number in numbers:\\r\\n            if prime*number \\u003e= limit:\\r\\n                break\\r\\n            else:\\r\\n                x=1\\r\\n                while prime**x*number \\u003c= limit:\\r\\n                    if (prime**x*number) in numbers:\\r\\n                        numbers.remove(prime**x*number)\\r\\n                    x+=1\\r\\n    return [2]+ numbers\\r\\n\\r\\ndef find_nth_limit(n):\\r\\n    \\"\\"\\"\\r\\n    nth prime must be greater than\\r\\n    n*ln(n)+n*(ln(ln(n))−1)\\r\\n    and less than\\r\\n    n*ln(n)+n*ln(ln(n))\\r\\n    returns upper limit\\r\\n    for n\\u003e6\\r\\n    \\"\\"\\"\\r\\n    return int(math.ceil(n*math.log(n)+n*math.log(math.log(n))))\\r\\n    \\r\\n        \\r\\ndef nth_prime(n):\\r\\n    if n\\u003c= 6:\\r\\n        primes = [2,3,5,7,11,13]\\r\\n    else:\\r\\n        limit = find_nth_limit(n)\\r\\n        primes = sieve(limit)\\r\\n    return primes[n-1]"}
297	7	486b39bfdbc3eeb940183f6e	\N	elixir	binary	\N	\N	0	1	176	2015-12-14 17:12:34	2015-12-14 17:12:34	{"binary.exs":"defmodule Binary do\\n  @doc \\"\\"\\"\\n  Convert a string containing a binary number to an integer.\\n\\n  On errors returns 0.\\n  \\"\\"\\"\\n  @spec to_decimal(String.t) :: non_neg_integer\\n  def to_decimal(string) do\\n    digits = string |\\u003e String.codepoints |\\u003e Enum.reverse\\n    if Enum.all?(digits, fn x -\\u003e x == \\"0\\" || x == \\"1\\" end), do: convert(digits, 0, 0), else: 0\\n  end\\n\\n  defp convert([], _power, accum) do\\n    accum\\n  end\\n\\n  defp convert([h | t], power, accum) do\\n    pow = if h == \\"0\\", do: 0, else: square(power)\\n    convert(t, power + 1, accum + pow)\\n  end\\n\\n  defp square(number) when number \\u003c 1  do\\n    1\\n  end\\n\\n  defp square(number) do\\n    2 * square(number - 1)\\n  end\\n\\nend"}
298	7	3e125e605806ae76e3604fc9	\N	csharp	bob	\N	\N	0	2	177	2016-01-17 22:51:46	2016-01-17 22:51:46	{"Bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tprivate const string YELL_ANSWER = \\"Whoa, chill out!\\";\\r\\n\\t\\tprivate const string QUESTION_ANSWER = \\"Sure.\\";\\r\\n\\t\\tprivate const string SILENCE_ANSWER = \\"Fine. Be that way!\\";\\r\\n\\t\\tprivate const string NORMAL_ANSWER = \\"Whatever.\\";\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn SILENCE_ANSWER;\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn YELL_ANSWER;\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn QUESTION_ANSWER;\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn NORMAL_ANSWER;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
299	7	db34e1db53a221c48abc7846	\N	csharp	bob	\N	\N	0	1	177	2016-06-15 11:23:50	2016-06-15 11:23:50	{"bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Fine. Be that way!\\";\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Whoa, chill out!\\";\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Sure.\\";\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn \\"Whatever.\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
300	7	44ac68252469680c5375d50b	pending	csharp	phone-number	\N	\N	0	1	178	2016-02-11 17:52:34	2016-02-11 17:52:34	{"\\\\csharp\\\\phone-number\\\\PhoneNumber.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace Exercism.phonenumber\\r\\n{\\r\\n    public class PhoneNumber\\r\\n    {\\r\\n        public string Number { get; private set; }\\r\\n        private string[] separators = { \\"(\\", \\")\\", \\"-\\", \\" \\", \\".\\" };\\r\\n\\r\\n        public string AreaCode { get; set; }\\r\\n\\r\\n        public PhoneNumber(string number)\\r\\n        {\\r\\n            StringBuilder b = new StringBuilder();\\r\\n\\r\\n            foreach(var element in number.Split(separators, StringSplitOptions.RemoveEmptyEntries))\\r\\n                b.Append(element);\\r\\n\\r\\n            if (b.Length == 11 \\u0026\\u0026 b[0] == '1')\\r\\n                b.Remove(0, 1);\\r\\n            else if(b.Length != 10)\\r\\n            {\\r\\n                b.Clear();\\r\\n                b.Append(\\"0000000000\\");\\r\\n            }\\r\\n\\r\\n            this.Number = b.ToString();\\r\\n            this.AreaCode = b.ToString().Remove(3);\\r\\n        }\\r\\n\\r\\n        public override string ToString()\\r\\n        {\\r\\n            StringBuilder b = new StringBuilder(this.Number);\\r\\n\\r\\n            b.Insert(0, '(');\\r\\n            b.Insert(4, ')');\\r\\n            b.Insert(5, \\" \\");\\r\\n            b.Insert(9, \\"-\\");\\r\\n\\r\\n            return b.ToString();\\r\\n        }\\r\\n    }\\r\\n}"}
301	7	41987f5f5c2a4dca9212a5b1	pending	go	gigasecond	\N	\N	0	2	179	2016-01-27 04:37:35	2016-01-27 04:37:35	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
302	7	70de043beb254d2a078e6e5d	superseded	go	gigasecond	\N	\N	0	1	179	2016-03-27 19:36:00	2016-03-27 19:36:00	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
303	7	53d770221940810dc045d371	pending	ruby	phone-number	\N	\N	0	1	180	2015-12-31 20:09:38	2015-12-31 20:09:38	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n\\tattr_reader:number\\n\\tdef initialize(n)\\n\\t\\t@number = n.gsub(/[^0-9]/, '')\\n\\t\\t@number.slice!(0) if @number.length == 11 \\u0026\\u0026 @number[0] == '1'\\n\\t\\t@number = '0000000000' if @number.length != 10 || n.length \\u003e 14\\n\\tend\\n\\n\\tdef area_code\\n\\t\\t@number.slice(0..2)\\n\\tend\\n\\n\\tdef to_s\\n\\t\\t\\"(#{area_code()}) #{@number.slice(3..5)}-#{@number.slice(6..9)}\\"\\n\\tend\\nend"}
304	7	af17a982079dfadb617ef710	pending	haskell	bob	\N	\N	0	2	181	2016-01-03 20:28:37	2016-01-03 20:28:37	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = all (\\\\z -\\u003e isUpper z || not (isLetter z)) y \\u0026\\u0026 any isLetter y\\n        question y = last y == '?'\\n        empty    y = all isSpace y"}
305	7	e8752de43f1dec67b1d51b65	superseded	haskell	bob	\N	\N	0	1	181	2016-01-16 00:27:25	2016-01-16 00:27:25	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = L.all (\\\\z -\\u003e (isUpper z) || (not $ isLetter z)) y \\u0026\\u0026 L.any isLetter y\\n        question y = (last $ L.dropWhileEnd isUpper y) == '?'\\n        empty    y = L.all isSpace y"}
306	7	517d876ad1471b2aa5debd2b	hibernating	ruby	leap	\N	\N	0	1	182	2015-12-22 16:35:12	2015-12-22 16:35:12	{"year.rb":"module Year\\n  def self.leap?(year)\\n    return false if year.odd?\\n    return true if year % 400 == 0\\n    return false if year % 100 == 0\\n    return true if year % 4 == 0\\n    false\\n  end\\nend"}
307	7	50fd03ea532d198a2e7aa055	\N	python	run-length-encoding	\N	\N	0	2	183	2016-01-02 12:54:20	2016-01-02 12:54:20	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
308	7	3b864844087d33bf959c99f1	\N	python	run-length-encoding	\N	\N	0	1	183	2016-02-21 05:53:47	2016-02-21 05:53:47	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
309	7	a7bd64bacbbc1f348c552cb2	pending	ruby	space-age	\N	\N	0	1	184	2016-03-26 09:23:59	2016-03-26 09:23:59	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  def initialize(sec)\\n  \\t@seconds = sec\\n  end\\n  def on_earth(n=1)\\n  \\t(@seconds/(31557600.0*n)).round(2)\\n  end\\n  def on_mercury\\n  \\tself.on_earth(0.2408467)\\n  end\\n  def on_venus\\n  \\tself.on_earth(0.61519726)\\n  end\\n  def on_mars\\n  \\tself.on_earth(1.8808158)\\n  end\\n  def on_jupiter\\n  \\tself.on_earth(11.862615)\\n  end\\n  def on_saturn\\n  \\tself.on_earth(29.447498)\\n  end\\n  def on_uranus\\n  \\tself.on_earth(84.016846)\\n  end\\n  def on_neptune\\n  \\tself.on_earth(164.79132)\\n  end\\nend"}
310	7	54b24fed7cb35bb585a4189c	pending	javascript	palindrome-products	\N	\N	0	1	185	2016-04-06 16:37:14	2016-04-06 16:37:14	{"/javascript/palindrome-products/palindrome-products.js":"var Palindrome = function(params){\\n  this.maxFactor=params.maxFactor;\\n  this.minFactor=params.minFactor || 1;\\n  this.maxProduct=1;\\n  this.minProduct=Infinity;\\n  this.data=[];\\n};\\n\\nPalindrome.prototype.generate = function(){\\n  for (var ii=this.minFactor;ii\\u003cthis.maxFactor;ii++){\\n    for (var jj=ii;jj\\u003c=this.maxFactor;jj++){\\n      var product=ii*jj;\\n      if (product.toString().split('').reverse().join('')===product.toString()){\\n        this.data[product]=[ii,jj];\\n        this.maxProduct = Math.max(this.maxProduct, product);\\n        this.minProduct = Math.min(this.minProduct, product);\\n      }\\n    }\\n  }\\n};\\n\\nPalindrome.prototype.largest = function(){\\n  this.value=this.maxProduct;\\n  this.factors=[this.data[this.maxProduct]];\\n  return this;\\n};\\n\\nPalindrome.prototype.smallest = function(){\\n  this.value=this.minProduct;\\n  this.factors=[this.data[this.minProduct]];\\n  return this;\\n};\\n\\nmodule.exports = Palindrome;"}
311	7	ce6fc26709b39879e3822094	done	haskell	triangle	\N	\N	0	1	186	2016-03-21 17:02:59	2016-03-21 17:02:59	{"Triangle.hs":"module Triangle\\n  ( TriangleType(..)\\n  , triangleType\\n  ) where\\n\\n\\ndata TriangleType\\n  = Equilateral\\n  | Isosceles\\n  | Scalene\\n  | Illogical\\n  deriving (Eq, Show)\\n\\n\\ntriangleType :: (Eq a, Ord a, Num a) =\\u003e a -\\u003e a -\\u003e a -\\u003e TriangleType\\ntriangleType a b c\\n  | a + b \\u003c= c || a + c \\u003c= b || b + c \\u003c= a = Illogical\\n  | a == b     \\u0026\\u0026 a == c                   = Equilateral\\n  | a == b     || a == c     || b == c     = Isosceles\\n  | otherwise                              = Scalene"}
312	7	edab65961dd106547e43c2f6	pending	python	minesweeper	\N	\N	0	1	187	2016-04-15 08:57:33	2016-04-15 08:57:33	{"minesweeper.py":"import re\\r\\nends = re.compile('\\\\+-*\\\\+')\\r\\nmiddles = re.compile('\\\\|[ *]+\\\\|')\\r\\n\\r\\ndef board(board):\\r\\n\\theight, width = validate_board(board)\\r\\n\\r\\n\\tfor i in range(1, height - 1):\\r\\n\\t\\tfor j in range(1, width - 1):\\r\\n\\t\\t\\tcount = 0\\r\\n\\t\\t\\tfor k in range(i - 1, i + 2):\\r\\n\\t\\t\\t\\tfor z in range(j - 1, j + 2):\\r\\n\\t\\t\\t\\t\\tif board[k][z] == '*':\\r\\n\\t\\t\\t\\t\\t\\tcount += 1\\r\\n\\t\\t\\tif count \\u003e 0 and board[i][j] != '*':\\r\\n\\t\\t\\t\\tboard[i] = board[i][:j] + str(count) + board[i][j+1:]\\r\\n\\r\\n\\treturn board\\r\\n\\r\\n\\r\\ndef validate_board(board):\\r\\n\\tif not board:\\r\\n\\t\\traise ValueError('Board is None or empty.')\\r\\n\\r\\n\\theight = len(board)\\r\\n\\twidth = len(board[0])\\r\\n\\r\\n\\tif not all(len(line) == width for line in board):\\r\\n\\t\\traise ValueError('Lines have different length.')\\r\\n\\r\\n\\tif not ends.fullmatch(board[0]) or not ends.fullmatch(board[-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\tif not all(bool(middles.fullmatch(line)) for line in board[1:-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\r\\n\\treturn height, width"}
313	7	564fd94bd97ed03de7395517	superseded	python	crypto-square	\N	\N	0	1	188	2015-11-30 11:20:21	2015-11-30 11:20:21	{"crypto_square.py":"import re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = ( len(clean) / size, len(clean) % size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
392	16	d1c4860ad818af7db3abf06b	\N	objective-c	word-count	\N	\N	0	1	242	2016-07-23 14:14:46	2016-07-23 14:14:46	{"WordCountTest.m":"#import \\u003cXCTest/XCTest.h\\u003e\\r\\n#import \\"WordCount.h\\"\\r\\n\\r\\n@interface test_suite : XCTestCase\\r\\n\\r\\n@end\\r\\n\\r\\n@implementation test_suite\\r\\n\\r\\n- (void)testCountOneWord {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"word\\"];\\r\\n  NSDictionary *expected = @{ @\\"word\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountOneOfEeach {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one of each\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"of\\" : @1, @\\"each\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountMultipleOccurrences {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one fish two fish red fish blue fish\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"fish\\" : @4, @\\"two\\" : @1, @\\"red\\" : @1, @\\"blue\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIgnorePunctation {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"car : carpet as java : javascript!!\\u0026@$%^\\u0026\\"];\\r\\n  NSDictionary *expected = @{ @\\"car\\" : @1, @\\"carpet\\" : @1, @\\"as\\" : @1, @\\"java\\" : @1, @\\"javascript\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIncludeNumbers {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"testing, 1, 2 testing\\"];\\r\\n  NSDictionary *expected = @{ @\\"testing\\" : @2, @\\"1\\" : @1, @\\"2\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testNormalizeCase {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"go Go GO\\"];\\r\\n  NSDictionary *expected = @{ @\\"go\\" : @3 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n@end"}
314	7	a32f2bdc50f05a9085472bb3	pending	python	crypto-square	\N	\N	0	2	188	2016-01-04 18:08:46	2016-01-04 18:08:46	{"crypto_square.py":"import math\\nimport re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = divmod( len(clean), size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
315	23	a21a27128da1a5d4dd57414a	\N	python	robot-name	\N	\N	0	1	189	2016-05-24 17:10:24	2016-05-24 17:10:24	{"robot.py":"import random\\nimport string\\n\\nclass Robot:\\n    def __init__(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return\\n    \\n    def reset(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return"}
316	17	bb1313c9104785bfb979746a	\N	haskell	rna-transcription	\N	\N	0	1	190	2015-12-19 00:14:03	2015-12-19 00:14:03	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA [] = []\\r\\ntoRNA (s:ss) = toRNA' s:toRNA ss\\r\\n\\r\\ntoRNA' :: Char -\\u003e Char\\r\\ntoRNA' 'C' = 'G'\\r\\ntoRNA' 'G' = 'C'\\r\\ntoRNA' 'A' = 'U'\\r\\ntoRNA' 'T' = 'A'\\r\\ntoRNA' _ = ' '"}
317	17	bc989f38f1a67fb7df7230d4	superseded	javascript	anagram	\N	\N	0	1	191	2016-02-04 17:21:39	2016-02-04 17:21:39	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.toLowerCase().split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
318	17	1e6000719187f1ec3234482a	pending	javascript	anagram	\N	\N	0	2	191	2016-04-11 10:38:58	2016-04-11 10:38:58	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
319	17	82144c659cf14ba3babab5e8	pending	go	gigasecond	\N	\N	0	2	192	2016-03-17 21:07:10	2016-03-17 21:07:10	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
320	17	3769e20abd965f54b26b6316	superseded	go	gigasecond	\N	\N	0	1	192	2016-05-06 01:14:01	2016-05-06 01:14:01	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
321	17	0697ba604132abb93b9a8953	pending	javascript	bob	\N	\N	0	1	193	2016-03-04 21:56:05	2016-03-04 21:56:05	{"bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar Bob = function() {};\\n\\nBob.prototype.hey = function(input) {\\n\\tif(input.match(/^\\\\s*$/)){\\n\\t\\treturn 'Fine. Be that way!';\\n\\t}\\n\\tif(input === input.toUpperCase() \\u0026\\u0026 input !== input.toLowerCase()) {\\n    \\treturn 'Whoa, chill out!';\\n\\t}\\n\\tif (input.indexOf(\\"?\\") !== -1 \\u0026\\u0026 input.indexOf(\\"?\\") === input.length-1){\\n\\t\\treturn 'Sure.';\\n\\t}\\n\\treturn 'Whatever.';\\n};\\n\\nmodule.exports = Bob;"}
322	17	e94481e0dc7d3c1d53c59488	pending	python	atbash-cipher	\N	\N	0	1	194	2016-04-03 17:41:45	2016-04-03 17:41:45	{"atbash_cipher.py":"import re\\n\\nALPHABET = 'abcdefghijklmnopqrstuvwxyz'\\nINVALID_CHARACTERS = re.compile(\\"[^a-z0-9]|\\\\s\\", re.IGNORECASE)\\n\\ndef encode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_encoded_letter(l, i) for i, l in enumerate(str)])\\n\\ndef decode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_reverse_letter(l, True) for l in str])\\n\\ndef _get_encoded_letter(letter, i):\\n  is_next_group = i \\u003e 0 and i % 5 is 0\\n  space = \\" \\" if is_next_group else \\"\\"\\n  encoded_letter = _get_reverse_letter(letter)\\n  return \\"{}{}\\".format(space, encoded_letter)\\n\\ndef _get_reverse_letter(letter, decoding=False):\\n    letter = letter.lower()\\n    if letter in ALPHABET:\\n      index = _get_index(letter, decoding)\\n      reverse_index = (index + 1) * -1\\n      return ALPHABET[reverse_index]\\n    else:\\n      return letter\\n\\ndef _get_valid_characters(str):\\n    return re.sub(INVALID_CHARACTERS, \\"\\", str)\\n\\ndef _get_index(letter, decoding):\\n    index = ALPHABET.index(letter)\\n    return index - len(ALPHABET) if decoding else index"}
323	20	11d4edb2dde509312969cbc6	done	haskell	crypto-square	\N	\N	0	1	195	2015-12-17 21:06:45	2015-12-17 21:06:45	{"/haskell/crypto-square/CryptoSquare.hs":"module CryptoSquare\\n( normalizePlaintext\\n, squareSize\\n, plaintextSegments\\n, ciphertext\\n, normalizeCiphertext\\n) where\\n\\nimport Data.Char\\nimport Data.List\\n\\nnormalizePlaintext :: String -\\u003e String\\nnormalizePlaintext = filter isAlphaNum . map toLower\\n\\nsquareSize :: String -\\u003e Int\\nsquareSize = ceiling . sqrt . fromIntegral . length\\n\\nplaintextSegments :: String -\\u003e [String]\\nplaintextSegments s = squareSplit (squareSize clean) clean\\n    where clean = normalizePlaintext s\\n\\nsquareSplit :: Int -\\u003e String -\\u003e [String]\\nsquareSplit _ [] = [] \\nsquareSplit n xs = first : squareSplit n rest\\n    where (first, rest) = splitAt n xs\\n\\nciphertext :: String -\\u003e String\\nciphertext = concat . transpose . plaintextSegments\\n\\nnormalizeCiphertext :: String -\\u003e String\\nnormalizeCiphertext = unwords . transpose . plaintextSegments"}
393	16	fce8ff973f53c294133bbb53	needs_input	go	octal	\N	\N	0	1	243	2016-07-17 07:23:10	2016-07-17 07:23:10	{"code.go":"package octal\\n\\nimport \\"fmt\\"\\n\\nfunc ParseOctal(s string) (int64, error) {\\n\\tvar reply int64\\n\\tfor _, r := range s {\\n\\t\\tif r \\u003c '0' || r \\u003e '7' {\\n\\t\\t\\treturn 0, fmt.Errorf(\\"bad char %q in %q\\", r, s)\\n\\t\\t}\\n\\t\\treply = reply*8 + int64(r-'0')\\n\\t}\\n\\treturn reply, nil\\n}"}
324	21	716bb21814fabc7ce7c1d746	\N	lisp	sieve	\N	\N	0	1	196	2016-06-08 15:35:43	2016-06-08 15:35:43	{"sieve.lisp":"(defpackage #:sieve\\n  (:use #:cl)\\n  (:export #:primes-to)\\n  (:documentation \\"Generates a list of primes up to a given limit.\\"))\\n\\n(in-package #:sieve)\\n\\n(defun initialize-array (array)\\n  (loop\\n     for x being the elements of array\\n     with counter = 0\\n     do (setf (svref array counter) (1+ counter))\\n     do (incf counter)))\\n\\n(defun strike-multiples (prime sieve)\\n  (loop\\n     for multiple from (+ prime prime) below (length sieve) by prime\\n     do (setf (svref sieve (1- multiple)) 0)))\\n\\n(defun next-prime (current sieve)\\n  (let ((current-index (find current sieve)))\\n    (find-if #'(lambda (x) (/= 0 x)) sieve :start current-index)))\\n\\n(defun primes-to (limit)\\n  (let ((sieve (make-array limit :element-type 'integer))\\n\\t(prime 2))\\n    (initialize-array sieve)\\n    (loop\\n       while (\\u003c prime limit)\\n       while (next-prime prime sieve)\\n       do (strike-multiples prime sieve)\\n       collect prime\\n       do (setf prime (next-prime prime sieve)))))"}
325	21	2345b15c6b45bab9f093deab	\N	javascript	grade-school	\N	\N	0	1	197	2016-04-21 20:09:44	2016-04-21 20:09:44	{"grade-school.js":"module.exports = function school() {\\n\\n  var db = {};\\n\\n  function add(name, level) {\\n\\n    if (db[level] === undefined) {\\n      db[level] = [ name ];\\n    } else {\\n      db[level].push(name);\\n    }\\n\\n  }\\n\\n  function grade(level) {\\n\\n    return (db[level] || []).slice().sort();\\n\\n  }\\n\\n  function roster() {\\n\\n    var dbCopy = {};\\n\\n    Object.keys(db).forEach(function (lvl) {\\n      dbCopy[lvl] = grade(lvl);\\n    });\\n\\n    return dbCopy;\\n\\n  }\\n\\n  return { roster, grade, add };\\n\\n};"}
326	21	189a76f043b922d83c9a310a	pending	javascript	gigasecond	\N	\N	0	1	198	2016-04-20 13:59:10	2016-04-20 13:59:10	{"gigasecond.js":"var Gigasecond = function Gigasecond( birth ){\\n    \\n    this.birth = birth;\\n\\n    this.date = function(){\\n        var Gs_in_ms = Math.pow(10,9)*1000,\\n            unix_birth = this.birth.getTime(),\\n            gs_anniversary = new Date( unix_birth + Gs_in_ms );\\n        \\n        return new Date(gs_anniversary.getFullYear(), gs_anniversary.getMonth(), gs_anniversary.getDate());\\n    };\\n};\\n\\nmodule.exports = Gigasecond;"}
327	36	bea4e5c99ff23ef0d6c81db1	\N	javascript	hamming	\N	\N	0	1	199	2016-02-07 21:07:03	2016-02-07 21:07:03	{"hamming.js":"var Hamming = function() {}\\n\\nHamming.prototype.compute = function compute(strand1, strand2) {\\n  var distance = 0;\\n\\n  if(strand1.length !== strand2.length) throw 'DNA strands must be of equal length.';\\n  if(strand1.length === strand2.length \\u0026\\u0026 strand1 === strand2) return distance;\\n\\n  for(var i = 0; i \\u003c strand1.length; i++) {\\n    if(strand1[i] !== strand2[i]) distance++;\\n  }\\n  return distance;\\n}\\n\\nmodule.exports = Hamming;"}
328	36	17b449eaf2c2ffea73952ac6	hibernating	lisp	gigasecond	\N	\N	0	2	200	2016-05-12 04:14:44	2016-05-12 04:14:44	{"/lisp/gigasecond/gigasecond.lisp":"(in-package #:cl-user)\\n(defpackage #:gigasecond\\n  (:use #:cl)\\n  (:export #:from))\\n(in-package #:gigasecond)\\n\\n(defun from (year month day \\u0026optional hour minute second)\\n  (multiple-value-bind (GSSECOND GSMINUTE GSHOUR GSDAY GSMONTH GSYEAR)\\n      (decode-universal-time (+ (expt 10 9) (encode-universal-time second minute hour day month year)))\\n    (list gsyear gsmonth gsday gshour gsminute (floor gssecond))))"}
329	36	2046c2abb1fda0460b2fe982	superseded	lisp	gigasecond	\N	\N	0	1	200	2016-05-14 23:16:14	2016-05-14 23:16:14	{"/lisp/gigasecond/gigasecond.lisp":"(in-package #:cl-user)\\n(defpackage #:gigasecond\\n  (:use #:cl)\\n  (:export #:from))\\n(in-package #:gigasecond)\\n\\n(defun from (year month day \\u0026optional hour minute second)\\n  (multiple-value-bind (GSSECOND GSMINUTE GSHOUR GSDAY GSMONTH GSYEAR)\\n      (decode-universal-time (+ 1e9 (encode-universal-time second minute hour day month year)))\\n    (list gsyear gsmonth gsday gshour gsminute (floor gssecond))))"}
330	36	6906194e59f156b973822648	pending	ruby	kindergarten-garden	\N	\N	0	1	201	2016-05-23 17:50:24	2016-05-23 17:50:24	{"garden.rb":"class Garden\\n  \\n  STUDENTS = %w(Alice Bob Charlie David Eve Fred Ginny Harriet Ileana Joseph Kincaid Larry)\\n  PLANT_MAP = {V: :violets, R: :radishes, G: :grass, C: :clover}\\n  \\n  def initialize(plants,students=nil)\\n    @plants = plants\\n    @students = (students || STUDENTS).sort\\n    @students.each do |kid|\\n      self.class.send(:define_method,\\"#{kid.downcase}\\") do\\n        codes = []\\n        rows = @plants.split(\\"\\\\n\\")\\n        cols = @students.index kid\\n        row_0_0 = rows[0][cols*2]\\n        row_0_1 = rows[0][cols*2+1]\\n        row_1_0 = rows[1][cols*2]\\n        row_1_1 = rows[1][cols*2+1]\\n        codes = [row_0_0, row_0_1,row_1_0, row_1_1]\\n        codes.map {|c| PLANT_MAP[c.to_sym]}\\n      end\\n    end\\n  end\\n\\nend"}
331	36	443eedac9cbbec0b05ba92cc	hibernating	java	etl	\N	\N	0	1	202	2016-02-13 02:29:06	2016-02-13 02:29:06	{"/java/etl/src/main/java/Etl.java":"import java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Etl {\\n\\n    public Map\\u003cString, Integer\\u003e transform(Map\\u003cInteger, List\\u003cString\\u003e\\u003e old) {\\n        Map\\u003cString, Integer\\u003e result = new HashMap();\\n        \\n        for (Map.Entry\\u003cInteger, List\\u003cString\\u003e\\u003e oldEntry : old.entrySet()) {\\n            for (String letter : oldEntry.getValue()) {\\n                result.put(letter.toLowerCase(), oldEntry.getKey());\\n            }\\n        }\\n        return result;\\n    }\\n\\n}"}
332	36	1ca944a69f266d8829001319	pending	javascript	space-age	\N	\N	0	1	203	2016-04-12 16:27:41	2016-04-12 16:27:41	{"space-age.js":"function SpaceAge(seconds) {\\n\\tif (!(this instanceof SpaceAge)) {\\n\\t\\treturn new SpaceAge(seconds);\\n\\t}\\n\\tthis.seconds = seconds;\\n\\treturn this;\\n}\\n\\nSpaceAge.prototype.base = function() {\\n\\treturn this.seconds / 315576000;\\n};\\n\\nSpaceAge.prototype.getYears = function(time) {\\n\\treturn Math.round(this.seconds / 315576000 / time * 1000) / 100;\\n};\\n\\nSpaceAge.prototype.onEarth = function() {\\n\\treturn this.getYears(1);\\n};\\n\\nSpaceAge.prototype.onMercury = function() {\\n\\treturn this.getYears(0.2408467);\\n};\\n\\nSpaceAge.prototype.onVenus = function() {\\n\\treturn this.getYears(0.61519726);\\n};\\n\\nSpaceAge.prototype.onMars = function() {\\n\\treturn this.getYears(1.8808158);\\n};\\n\\nSpaceAge.prototype.onJupiter = function() {\\n\\treturn this.getYears(11.862615);\\n};\\n\\nSpaceAge.prototype.onSaturn = function() {\\n\\treturn this.getYears(29.447498);\\n};\\n\\nSpaceAge.prototype.onUranus = function() {\\n\\treturn this.getYears(84.016846);\\n};\\n\\nSpaceAge.prototype.onNeptune = function() {\\n\\treturn this.getYears(164.79132);\\n};\\n\\nmodule.exports = SpaceAge;"}
333	36	f6c4c1546562ae75103e22b6	pending	ruby	sum-of-multiples	\N	\N	0	1	204	2016-04-07 17:23:48	2016-04-07 17:23:48	{"/ruby/sum-of-multiples/sum.rb":"class SumOfMultiples\\n  def self.to(lim, nums = [3, 5])\\n    (nums.min...lim).to_a.select { |x| nums.any? { |n| x % n == 0 } }.reduce(:+) || 0\\n  end\\n\\n  def initialize(*nums)\\n    @nums = nums\\n  end\\n\\n  def to(lim)\\n    self.class.to(lim, @nums)\\n  end\\nend"}
439	18	a3a66ae51a6694899e849642	\N	ruby	raindrops	\N	\N	0	1	273	2016-07-23 14:57:40	2016-07-23 14:57:40	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n\\n  def self.convert(num)\\n    string = \\"\\"\\n    string += \\"Pling\\" if num % 3 == 0\\n    string += \\"Plang\\" if num % 5 == 0\\n    string += \\"Plong\\" if num % 7 == 0\\n    string.empty? ? num.to_s : string\\n  end\\nend"}
334	30	d8336ae48a5eedbc77a7130a	\N	haskell	nth-prime	\N	\N	0	1	205	2016-05-11 10:35:34	2016-05-11 10:35:34	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
335	30	dde6849f8ca1e97be9e03968	hibernating	ruby	leap	\N	\N	0	1	206	2016-01-23 01:11:54	2016-01-23 01:11:54	{"year.rb":"module Year\\n  def self.leap?(year)\\n    return false if year.odd?\\n    return true if year % 400 == 0\\n    return false if year % 100 == 0\\n    return true if year % 4 == 0\\n    false\\n  end\\nend"}
336	30	b285017962bb29c687f5abd5	superseded	rust	anagram	\N	\N	0	1	207	2016-01-03 04:02:43	2016-01-03 04:02:43	{"src/lib.rs":"use std::ascii::AsciiExt;\\n\\n//fn remove_spaces(input: \\u0026str) -\\u003e String {\\n//   let mut buf = String::with_capacity(input.len());\\n//   for c in input.chars() {\\n//     buf.push(c);\\n//   }\\n//   buf\\n//}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn unicode_lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n//    let mut chars: Vec\\u003cchar\\u003e = s.chars().into_iter().collect();\\n    //let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()).collect();\\n//    let mut chars = lower_case_s.chars();\\n    chars.sort();\\n//    let lc: String = chars.map(|c| c.to_lowercase()).collect();\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string: String = lc_sorted_str(s);\\n    let s_string = s.to_string();\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if s_string.ne(anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    return answers;\\n}"}
337	30	14da36021ef1261eafea4031	superseded	rust	anagram	\N	\N	0	3	207	2016-02-22 10:22:54	2016-02-22 10:22:54	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = to_lowercase(s, true); // : String\\n    let lowercase_s = to_lowercase(s, false);  // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = to_lowercase(\\u0026anagram, true);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram, false) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\nfn to_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    //! lower case and optionally sort the string\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    // sort if necessary\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
338	30	788e467d3e75de7846eacec1	superseded	rust	anagram	\N	\N	0	2	207	2016-02-24 03:06:20	2016-02-24 03:06:20	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = lc_sorted_str(s); // : String\\n    let lowercase_s = to_lowercase(s); // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    // lower case the string and then sort.\\n\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n    let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()\\n                                             .next()\\n                                             .expect(\\"should be char\\")).into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\nfn to_lowercase(instr: \\u0026str) -\\u003e String {\\n    // copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n    instr.chars().map(|c| c.to_lowercase()\\n                      .next()\\n                      .expect(\\"Should be char\\"))\\n        .collect::\\u003cString\\u003e()\\n}"}
339	30	e4c9371badc732bee2908961	done	rust	anagram	\N	\N	0	4	207	2016-05-31 03:33:55	2016-05-31 03:33:55	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = sorted_lowercase(s); // : String\\n    let lowercase_s = lowercase(s);          // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = sorted_lowercase(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\n/// lower case the unicode string\\nfn lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, false)\\n}\\n\\n/// lower case and sort the unicode string\\nfn sorted_lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, true)\\n}\\n\\n/// lower case and optionally sort the string\\nfn _to_sorted_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
340	30	b3744b1b482850c8c0aa4435	needs_input	cpp	word-count	\N	\N	0	4	208	2016-03-12 11:46:54	2016-03-12 11:46:54	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
341	30	a0b77baf60f8cae5f46ca629	superseded	cpp	word-count	\N	\N	0	2	208	2016-04-26 12:44:35	2016-04-26 12:44:35	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
342	30	9c6ee87b9472f4dd0d513210	superseded	cpp	word-count	\N	\N	0	1	208	2016-05-13 15:11:06	2016-05-13 15:11:06	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
343	30	895657df71d2e3530cff92d0	superseded	cpp	word-count	\N	\N	0	3	208	2016-06-07 07:55:11	2016-06-07 07:55:11	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
344	30	6b17ad4668291a6c8d774738	hibernating	ruby	phone-number	\N	\N	0	3	209	2016-02-09 01:45:21	2016-02-09 01:45:21	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  private\\n\\n  def prefix\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def line_number\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
345	30	13a6fa7f52f357dea179d099	superseded	ruby	phone-number	\N	\N	0	2	209	2016-02-11 20:51:09	2016-02-11 20:51:09	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{first_part}-#{second_part}\\"\\n  end\\n\\n  private\\n\\n  def first_part\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def second_part\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
346	30	ece820f28f23136a88fdde38	superseded	ruby	phone-number	\N	\N	0	1	209	2016-05-04 15:50:32	2016-05-04 15:50:32	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\nend"}
347	30	456ed465eb8ebd2eb70ad3ca	superseded	ruby	word-count	\N	\N	0	1	210	2015-12-27 22:54:32	2015-12-27 22:54:32	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    @phrase = phrase\\n  end\\n\\n  def word_count\\n    @word_count ||= count_words\\n  end\\n\\n  private\\n\\n  def count_words\\n    counts = Hash.new(0)\\n    @phrase.split(/[^'a-zA-Z0-9]+/).each do |word|\\n      counts[word.downcase] += 1\\n    end\\n    counts\\n  end\\n\\nend"}
350	35	9b3eac809aa138eb3acd6aff	\N	scala	leap	\N	\N	0	1	212	2016-01-27 03:43:23	2016-01-27 03:43:23	{"src/main/scala/Year.scala":"/**\\n * Write a program that will take a year and report if it is a leap year.\\n *\\n * The tricky thing here is that a leap year occurs:\\n * \\n * ```plain\\n * on every year that is evenly divisible by 4\\n *  except every year that is evenly divisible by 100\\n *    unless the year is also evenly divisible by 400\\n * ```\\n *\\n * For example, 1997 is not a leap year, but 1996 is.  1900 is not a leap\\n * year, but 2000 is.\\n */\\ncase class Year(y: Int) {\\n  \\n  private[this]\\n  val DivBy100 = (y % 100 == 0)\\n  private[this]\\n  val DivBy400 = (y % 400 == 0)\\n  private[this]\\n  val DivBy4 = (y % 4 == 0)\\n  \\n  /**\\n   * on every year that is evenly divisible by 4\\n   * except every year that is evenly divisible by 100\\n   * unless the year is also evenly divisible by 400\\n   */\\n  lazy val isLeap: Boolean = {\\n    if (DivBy100 \\u0026\\u0026 DivBy400) true\\n    else if (DivBy100) false\\n    else if (DivBy4) true\\n    else false\\n  }\\n   \\n}"}
351	35	4bb67c391c9623b485757f87	\N	scala	leap	\N	\N	0	2	212	2016-06-20 10:12:53	2016-06-20 10:12:53	{"src/main/scala/Year.scala":"/**\\n * Write a program that will take a year and report if it is a leap year.\\n *\\n * The tricky thing here is that a leap year occurs:\\n * \\n * ```plain\\n * on every year that is evenly divisible by 4\\n *  except every year that is evenly divisible by 100\\n *    unless the year is also evenly divisible by 400\\n * ```\\n *\\n * For example, 1997 is not a leap year, but 1996 is.  1900 is not a leap\\n * year, but 2000 is.\\n */\\ncase class Year(y: Int) {\\n  \\n  private[this]\\n  val Div100 = (y % 100 == 0)\\n  private[this]\\n  val Div400 = (y % 400 == 0)\\n  private[this]\\n  val Div4 = (y % 4 == 0)\\n  \\n  /**\\n   * on every year that is evenly divisible by 4\\n   * except every year that is evenly divisible by 100\\n   * unless the year is also evenly divisible by 400\\n   * just playing around this is probably less readable.\\n   */\\n  lazy val isLeap: Boolean = (Div4 \\u0026\\u0026 (Div100 \\u0026\\u0026 Div400)) || (Div4 \\u0026\\u0026 !Div100)\\n   \\n}"}
352	35	e24a2db64111d8ef948db114	pending	csharp	bob	\N	\N	0	1	213	2016-01-09 23:11:41	2016-01-09 23:11:41	{"Bob.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\npublic static class Bob\\r\\n{\\r\\n    private static IResponder _firstResponder;\\r\\n\\r\\n    static Bob()\\r\\n    {\\r\\n        // Yelling supercedes questions in response priority, so it must be first (or at least before QuestionResponder)\\r\\n        _firstResponder = new YellResponder();\\r\\n        _firstResponder\\r\\n            .SetNext(new QuestionResponder())\\r\\n            .SetNext(new SilenceResponder())\\r\\n            .SetNext(new DefaultResponder());\\r\\n    }\\r\\n\\r\\n    public static string Hey(string statement)\\r\\n    {\\r\\n        return _firstResponder.ProcessStatement(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic interface IResponder\\r\\n{\\r\\n    string Response { get; }\\r\\n    string ProcessStatement(string statement);\\r\\n    IResponder SetNext(IResponder next);\\r\\n}\\r\\n\\r\\npublic abstract class ResponderBase : IResponder\\r\\n{\\r\\n    private IResponder _next = null;\\r\\n\\r\\n    public abstract string Response { get; }\\r\\n\\r\\n    public string ProcessStatement(string statement)\\r\\n    {\\r\\n        if (IsValidForStatement(statement))\\r\\n        {\\r\\n            return Response;\\r\\n        }\\r\\n        else if (_next != null)\\r\\n        {\\r\\n            return _next.ProcessStatement(statement);\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    public abstract bool IsValidForStatement(string statement);\\r\\n\\r\\n    public IResponder SetNext(IResponder next)\\r\\n    {\\r\\n        _next = next;\\r\\n\\r\\n        return next;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class YellResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whoa, chill out!\\";\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.IsAllCaps();\\r\\n    }\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get\\r\\n        {\\r\\n            return _response;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class QuestionResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Sure.\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.Trim().EndsWith(\\"?\\");\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class SilenceResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Fine. Be that way!\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return string.IsNullOrWhiteSpace(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class DefaultResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whatever.\\";\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic static class StringExtensions\\r\\n{\\r\\n    public static bool IsAllCaps (this string value) \\r\\n    {\\r\\n        return value.Any(char.IsUpper) \\r\\n            \\u0026\\u0026 value.All(c =\\u003e !char.IsLetter(c) || char.IsUpper(c));\\r\\n    }\\r\\n}"}
353	35	4f74cfd48d2242535b169b8c	\N	javascript	raindrops	\N	\N	0	1	214	2016-05-04 06:15:10	2016-05-04 06:15:10	{"raindrops.js":"function Raindrops() {\\n  'use strict';\\n}\\n\\nRaindrops.prototype.convert = function(num) {\\n  switch (true) {\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlangPlong';\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0:\\n      return 'PlingPlang';\\n    case num % 3 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlong';\\n    case num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlangPlong';\\n    case num % 3 === 0:\\n      return 'Pling';\\n    case num % 5 === 0:\\n      return 'Plang';\\n    case num % 7 === 0:\\n      return 'Plong';\\n    default:\\n      return num.toString();\\n  }\\n};\\n\\nmodule.exports = Raindrops;"}
354	35	3c793450833839594333be78	pending	javascript	space-age	\N	\N	0	1	215	2016-05-08 06:17:05	2016-05-08 06:17:05	{"space-age.js":"function SpaceAge(seconds) {\\n\\tif (!(this instanceof SpaceAge)) {\\n\\t\\treturn new SpaceAge(seconds);\\n\\t}\\n\\tthis.seconds = seconds;\\n\\treturn this;\\n}\\n\\nSpaceAge.prototype.base = function() {\\n\\treturn this.seconds / 315576000;\\n};\\n\\nSpaceAge.prototype.getYears = function(time) {\\n\\treturn Math.round(this.seconds / 315576000 / time * 1000) / 100;\\n};\\n\\nSpaceAge.prototype.onEarth = function() {\\n\\treturn this.getYears(1);\\n};\\n\\nSpaceAge.prototype.onMercury = function() {\\n\\treturn this.getYears(0.2408467);\\n};\\n\\nSpaceAge.prototype.onVenus = function() {\\n\\treturn this.getYears(0.61519726);\\n};\\n\\nSpaceAge.prototype.onMars = function() {\\n\\treturn this.getYears(1.8808158);\\n};\\n\\nSpaceAge.prototype.onJupiter = function() {\\n\\treturn this.getYears(11.862615);\\n};\\n\\nSpaceAge.prototype.onSaturn = function() {\\n\\treturn this.getYears(29.447498);\\n};\\n\\nSpaceAge.prototype.onUranus = function() {\\n\\treturn this.getYears(84.016846);\\n};\\n\\nSpaceAge.prototype.onNeptune = function() {\\n\\treturn this.getYears(164.79132);\\n};\\n\\nmodule.exports = SpaceAge;"}
355	35	d5107a169eecf28dd8a14799	done	javascript	bob	\N	\N	0	1	216	2016-01-02 15:19:37	2016-01-02 15:19:37	{"bob.js":"function isWhiteSpace(code) {\\n    //this only works for ASCII\\n    return code === \\" \\".charCodeAt(0);\\n}\\n\\nfunction isAlpha(code) {\\n    //this only works for ASCII\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else if (code \\u003e 96 \\u0026\\u0026 code \\u003c 123) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isUpperCase(code) {\\n    //this only works for ASCII.\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isQuestionMark(code) {\\n    //this only works for English and other languages\\n    //that use a question mark at the end.\\n    return code  === \\"?\\".charCodeAt(0);;\\n}\\n\\nfunction findAcronyms(str) {\\n    //this is going to be very slow, if the list is big.\\n    //maybe a trie is a better choice here.\\n    acronyms = [\\"OK\\", \\"DMV\\"];\\n    index = {};\\n\\n    for (i=0; i \\u003c acronyms.length; i++) {\\n        acronym = acronyms[i];\\n        pos = str.indexOf(acronym);\\n        if (pos \\u003e -1) {\\n            index[pos] = acronym.length-1;\\n        }\\n        \\n    }\\n\\n    return index;\\n}\\n\\nvar Bob = function() {};\\nBob.prototype.hey = function(msg) {\\n    isShouting = false;\\n    isQuestion = false;\\n    isEmpty = true;\\n\\n    length = msg.length;\\n    acronyms = findAcronyms(msg);\\n    for (var i=0; i\\u003clength; i++) {\\n        code = msg.charCodeAt(i);\\n\\n        if (isWhiteSpace(code)) {\\n            continue;\\n        } else {\\n            isEmpty = false;\\n        }\\n        \\n        acronymLength = acronyms[i];\\n        if (acronymLength !== undefined) {\\n            //skip over acronyms\\n            i = i+acronymLength;\\n            continue;\\n        }\\n\\n        if (isAlpha(code)) {\\n            isShouting = isUpperCase(code);\\n        }\\n        \\n        //if we are at the end check if we have a question mark\\n        if (i == length-1) {\\n            isQuestion = isQuestionMark(code);\\n        }\\n    }\\n\\n    if (isShouting) {\\n        return \\"Woah, chill out!\\";\\n    } else if (isQuestion) {\\n        return \\"Sure.\\";\\n    } else if (isEmpty) {\\n        return \\"Fine. Be that way!\\";\\n    } else {\\n        return \\"Whatever.\\";\\n    }\\n};\\nmodule.exports = Bob;"}
356	35	3871f464486e8969a9fd0a62	\N	php	difference-of-squares	\N	\N	0	1	217	2016-01-10 15:44:15	2016-01-10 15:44:15	{"difference-of-squares.php":"\\u003c?php\\n\\nfunction sumOfSquares(int $to)\\n{\\n  return array_reduce(range(1, $to), function ($c, int $i) {\\n    return $c + pow($i, 2);\\n  });\\n}\\n\\nfunction squareOfSums(int $to)\\n{\\n  return pow(array_sum(range(1, $to)), 2);\\n}\\n\\nfunction difference(int $to)\\n{\\n  return squareOfSums($to) - sumOfSquares($to);\\n}"}
357	14	541c4297dab992f41d1f07b5	superseded	python	hamming	\N	\N	0	1	218	2016-02-21 21:53:20	2016-02-21 21:53:20	{"hamming.py":"def hamming(dna1, dna2):\\n\\thamming_distance = abs(len(dna1) - len(dna2)) \\n\\tmin_len = min(len(dna1), len(dna2))\\n\\tfor n in range(min_len):\\n\\t\\tif dna1[n] != dna2[n]: hamming_distance += 1\\n\\treturn hamming_distance"}
358	14	45ced9e708b9fdc12a7c122e	done	python	hamming	\N	\N	0	2	218	2016-04-05 03:45:56	2016-04-05 03:45:56	{"hamming.py":"def hamming(dna1, dna2):\\n\\thamming_distance = abs(len(dna1) - len(dna2)) \\n\\tfor n1, n2 in zip(dna1, dna2):\\n\\t\\tif n1 != n2: hamming_distance += 1\\n\\treturn hamming_distance"}
440	18	dea9bc34b2ab4e8266458303	\N	javascript	etl	\N	\N	0	2	274	2016-07-18 08:07:07	2016-07-18 08:07:07	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n\\n  function processKeys(key) {\\n    old[key].forEach(function(letter) {\\n      expected[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n\\n  points.forEach(processKeys);\\n  \\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
359	41	c415aa9f706a4e3994d04f66	done	csharp	etl	\N	\N	0	2	219	2016-06-01 15:58:56	2016-06-01 15:58:56	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               if(row.Value != null)\\r\\n               { \\r\\n                   foreach(var letter in row.Value)\\r\\n                   {\\r\\n                       newDictionary[letter.ToLower()] = row.Key;                       \\r\\n                   }\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
360	41	4e1b70729027a79eb73cbd6f	superseded	csharp	etl	\N	\N	0	1	219	2016-06-22 02:44:27	2016-06-22 02:44:27	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               foreach(var letter in row.Value)\\r\\n               {\\r\\n                   newDictionary.Add(letter.ToString().ToLower(), row.Key);\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
361	41	6e6ca7ca8ad7802a50d5d179	\N	php	roman-numerals	\N	\N	0	1	220	2016-04-26 18:32:58	2016-04-26 18:32:58	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number) {\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\tforeach( array_reverse( $numerals ) as $k =\\u003e $v ) {\\n\\t\\twhile($number \\u003e= $v) {\\n\\t\\t\\t$roman_num .= $k;\\n\\t\\t\\t$number -= $v;\\n\\t\\t}\\n\\t}\\n\\treturn $roman_num;\\n}"}
362	41	7151c30ecf7bb743bd1f5142	\N	php	roman-numerals	\N	\N	0	2	220	2016-06-24 09:55:31	2016-06-24 09:55:31	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number)\\n{\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\n\\tforeach(array_reverse($numerals) as $k =\\u003e $v) {\\n\\t\\t$roman_num .= str_repeat($k, $number / $v);\\n\\t\\t$number %= $v;\\n\\t}\\n\\treturn $roman_num;\\n}"}
363	41	845f1bbbc896b0d67d59cb56	pending	javascript	food-chain	\N	\N	0	1	221	2016-06-21 23:10:09	2016-06-21 23:10:09	{"food-chain.js":"exports.verses = verses;\\nexports.verse  = verse;\\n\\n\\nfunction verses(first, last) {\\n  var idx = first - 1;\\n  var end = last;\\n  var str = [];\\n\\n  while (++idx \\u003c= end) {\\n    str.push(verse(idx));\\n  }\\n\\n  return str.join(\\"\\\\n\\") + \\"\\\\n\\";\\n};\\n\\n\\n\\nfunction verse(number) {\\n  switch (number) {\\n    case 1: return \\"\\" +\\n      \\"I know an old lady who swallowed a fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 2: return \\"\\" +\\n      \\"I know an old lady who swallowed a spider.\\\\n\\" + \\"It wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 3: return \\"\\" +\\n      \\"I know an old lady who swallowed a bird.\\\\n\\" + \\"How absurd to swallow a bird!\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 4: return \\"\\" +\\n      \\"I know an old lady who swallowed a cat.\\\\n\\" + \\"Imagine that, to swallow a cat!\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 5: return \\"\\" +\\n      \\"I know an old lady who swallowed a dog.\\\\n\\" + \\"What a hog, to swallow a dog!\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n      \\"She swallowed the cat to catch the bird.\\\\n\\" + \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 6: return \\"\\" +\\n      \\"I know an old lady who swallowed a goat.\\\\n\\" + \\"Just opened her throat and swallowed a goat!\\\\n\\" + \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n      \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 7: return \\"\\" +\\n      \\"I know an old lady who swallowed a cow.\\\\n\\" + \\"I don't know how she swallowed a cow!\\\\n\\" + \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n      \\"She swallowed the goat to catch the dog.\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 8: return \\"\\" +\\n      \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n  };\\n};"}
364	41	c681f1df2ef8690896971a71	pending	ruby	space-age	\N	\N	0	1	222	2016-07-12 09:48:10	2016-07-12 09:48:10	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  def initialize(sec)\\n  \\t@seconds = sec\\n  end\\n  def on_earth(n=1)\\n  \\t(@seconds/(31557600.0*n)).round(2)\\n  end\\n  def on_mercury\\n  \\tself.on_earth(0.2408467)\\n  end\\n  def on_venus\\n  \\tself.on_earth(0.61519726)\\n  end\\n  def on_mars\\n  \\tself.on_earth(1.8808158)\\n  end\\n  def on_jupiter\\n  \\tself.on_earth(11.862615)\\n  end\\n  def on_saturn\\n  \\tself.on_earth(29.447498)\\n  end\\n  def on_uranus\\n  \\tself.on_earth(84.016846)\\n  end\\n  def on_neptune\\n  \\tself.on_earth(164.79132)\\n  end\\nend"}
365	41	7be96105d2693486a8e6dd7d	done	javascript	anagram	\N	\N	0	1	223	2016-04-03 20:49:39	2016-04-03 20:49:39	{"anagram.js":"var Anagram = function(word) {\\n\\tthis.word = word;\\n};\\n\\nAnagram.prototype = {\\n\\tmatch: function (wordsToTest) {\\n\\t\\treturn wordsToTest.filter(this.anagramsOf, this);\\n\\t},\\n\\tanagramsOf: function (word) {\\n\\t\\treturn word != this.word \\u0026\\u0026 this.getLetters(word) == this.getLetters(this.word);\\n\\t},\\n\\tgetLetters: function (word) {\\n\\t\\treturn word.toLowerCase().split('').sort().join(',');\\n\\t}\\n\\n};\\n\\nmodule.exports = Anagram;"}
366	41	db98b155c4667a43febadccb	\N	ecmascript	hello-world	\N	\N	0	1	224	2016-04-06 01:16:45	2016-04-06 01:16:45	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
367	6	1ee4bddb070138ce7a265b48	\N	go	pythagorean-triplet	\N	\N	0	1	225	2016-06-17 01:46:31	2016-06-17 01:46:31	{"pythagorean_triplet.go":"package pythagorean\\n\\ntype Triplet [3]int\\n\\nfunc Range(min, max int) (triplets []Triplet) {\\n\\tfor a := min; a \\u003c= max; a++ {\\n\\t\\tfor b := a; b \\u003c= max; b++ {\\n\\t\\t\\tfor c := b; c \\u003c= max; c++ {\\n\\t\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc Sum(sum int) (triplets []Triplet) {\\n\\tfor a := 1; a \\u003c= sum/3; a++ {\\n\\t\\tfor b := a; b \\u003c= (sum-a)/2; b++ {\\n\\t\\t\\tc := sum - a - b\\n\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc isTriplet(t Triplet) bool {\\n\\treturn t[0]*t[0]+t[1]*t[1] == t[2]*t[2]\\n}"}
368	6	77590ea9e0da557337e335f1	hibernating	javascript	word-count	\N	\N	0	1	226	2016-05-21 15:13:28	2016-05-21 15:13:28	{"word-count.js":"module.exports = function(s){\\n  var obj = {};\\n  s.split(/ |\\\\n/).forEach(function(word){\\n    if (! obj[word]) obj[word] = 0;\\n    obj[word]++;\\n  });\\n  return obj;\\n};"}
369	6	2a4638502778ae90595b9432	\N	ruby	leap	\N	\N	0	1	227	2016-06-07 04:32:34	2016-06-07 04:32:34	{"leap.rb":"module Year\\n  module_function\\n\\n  def leap?(year)\\n    year % 4 == 0 \\u0026\\u0026 (year % 100 != 0 || year % 400 == 0)\\n  end\\nend"}
370	6	2803f6a260c9be4d707c93e1	pending	javascript	bob	\N	\N	0	1	228	2016-05-29 15:42:38	2016-05-29 15:42:38	{"bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar Bob = function() {};\\n\\nBob.prototype.hey = function(input) {\\n\\tif(input.match(/^\\\\s*$/)){\\n\\t\\treturn 'Fine. Be that way!';\\n\\t}\\n\\tif(input === input.toUpperCase() \\u0026\\u0026 input !== input.toLowerCase()) {\\n    \\treturn 'Whoa, chill out!';\\n\\t}\\n\\tif (input.indexOf(\\"?\\") !== -1 \\u0026\\u0026 input.indexOf(\\"?\\") === input.length-1){\\n\\t\\treturn 'Sure.';\\n\\t}\\n\\treturn 'Whatever.';\\n};\\n\\nmodule.exports = Bob;"}
371	34	2097895443e3d87abd7f1783	\N	ruby	phone-number	\N	\N	0	1	229	2016-04-08 13:47:58	2016-04-08 13:47:58	{"phone_number.rb":"class PhoneNumber\\n  def initialize(phone_number)\\n    @phone_number = phone_number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_phone_number\\n  end\\n\\n  def number\\n    @phone_number\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{@phone_number[0..2]}) #{@phone_number[3..5]}-#{@phone_number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_phone_number\\n    @phone_number = '0000000000' unless valid_content?\\n    @phone_number = @phone_number.sub(/\\\\A1/, '') if @phone_number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @phone_number\\n  end\\nend"}
372	34	94e56295848b743acc3a02cf	\N	ruby	phone-number	\N	\N	0	2	229	2016-06-04 20:36:54	2016-06-04 20:36:54	{"phone_number.rb":"class PhoneNumber\\n  @@default_number = '0000000000'\\n  attr_reader :number\\n\\n  def initialize(number)\\n    @number = number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_number\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_number\\n    @number = @@default_number unless valid_content?\\n    @number = @number[1..-1] if @number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @number\\n  end\\nend"}
373	16	14db8b2d71fd8b81d052f7e3	\N	javascript	anagram	\N	\N	0	1	230	2016-07-30 18:50:15	2016-07-30 18:50:15	{"anagram.js":"var Anagram = function(string) {\\n  this.string = string;\\n};\\n\\nAnagram.prototype.createDictionary = function(input) {\\n  var dict = {};\\n  for (var i = 0; i \\u003c input.length; i++) {\\n    var lil = input[i].toLowerCase();\\n    if (dict[lil] !== undefined) { dict[lil] += 1;}\\n    else { dict[lil] = 1;}\\n  }\\n  return dict;\\n};\\n\\nAnagram.prototype.checker = function(dict, check) {\\n  if (Object.keys(dict).length !== Object.keys(check).length) { return false; }\\n  for (var i in dict ) {\\n    if (dict[i] !== check[i]) { return false; }\\n  }\\n  return true;\\n};\\n\\nAnagram.prototype.matches = function(input) {\\n  if (arguments.length \\u003e 1) {\\n    var temp = [];\\n    for (var i = 0; i \\u003c arguments.length; i++) {\\n      temp.push(arguments[i]);\\n    }\\n    input = temp;\\n  }\\n  if (typeof(input) === 'string'){input = [input];}\\n  var matches = [];\\n  var string = this.string.toLowerCase();\\n  if (string === '') { return [];}\\n  var dict = this.createDictionary(string);\\n    for (var i = 0; i \\u003c input.length; i++) {\\n      if (input[i].toLowerCase() === string) { continue; }\\n      var check = this.createDictionary(input[i]);\\n      if (this.checker(dict, check)) { matches.push(input[i]); }\\n    }\\n  return matches;\\n};\\n\\nmodule.exports = Anagram;"}
374	16	1011f508c3f4b49a3d972824	\N	python	run-length-encoding	\N	\N	0	2	231	2016-07-25 06:22:20	2016-07-25 06:22:20	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
375	16	8f4866a09b80ba93da6db4b5	\N	python	run-length-encoding	\N	\N	0	1	231	2016-08-04 03:52:45	2016-08-04 03:52:45	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
376	16	e0b7738f7a95301b89c92b3a	\N	elixir	sublist	\N	\N	0	1	232	2016-07-29 08:41:36	2016-07-29 08:41:36	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b        -\\u003e :equal\\n      sublist?(b, a) -\\u003e :sublist\\n      sublist?(a, b) -\\u003e :superlist\\n      true           -\\u003e :unequal\\n    end\\n  end\\n\\n  defp sublist?(_, []), do: true\\n  defp sublist?([], _), do: false\\n  defp sublist?(haystack, needle) when length(needle) \\u003e length(haystack), do: false\\n  defp sublist?(haystack=[_|haystack_tail], needle) do\\n    starts_with?(haystack, needle) ||  sublist?(haystack_tail, needle)\\n  end\\n\\n  defp starts_with?(_, []), do: true\\n  defp starts_with?([same|haystack_tail], [same|needle_tail]) do\\n    starts_with?(haystack_tail, needle_tail)\\n  end\\n  defp starts_with?(_, _), do: false\\n\\nend"}
377	16	c0dbfa99e3ab60e1d1cbaa27	done	clojure	word-count	\N	\N	0	2	233	2016-07-21 19:02:22	2016-07-21 19:02:22	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
378	16	218cbdd289cfa6f60dcb4d11	superseded	clojure	word-count	\N	\N	0	1	233	2016-07-24 04:23:44	2016-07-24 04:23:44	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
379	16	4c8c76e1b40963103adb77f9	\N	haskell	anagram	\N	\N	0	1	234	2016-08-03 10:37:38	2016-08-03 10:37:38	{"Anagram.hs":"module Anagram\\n       ( anagramsFor\\n       ) where\\n\\nimport           Data.Char (toLower)\\nimport           Data.List (sort)\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor word = filter isAnagram\\n  where\\n    isAnagram candidate = canon candidate == canonWord\\n                       \\u0026\\u0026 lower candidate /= lower word\\n    canonWord = canon word\\n\\n-- Canonicalize words for comparison.\\ncanon :: String -\\u003e String\\ncanon = sort . lower\\n\\nlower :: String -\\u003e String\\nlower = map toLower"}
380	16	d4df8138e43c24bda12c4814	\N	ruby	raindrops	\N	\N	0	1	235	2016-07-25 05:33:17	2016-07-25 05:33:17	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n\\n  def self.convert(num)\\n    string = \\"\\"\\n    string += \\"Pling\\" if num % 3 == 0\\n    string += \\"Plang\\" if num % 5 == 0\\n    string += \\"Plong\\" if num % 7 == 0\\n    string.empty? ? num.to_s : string\\n  end\\nend"}
381	16	ca0524e846586c527ca513fd	hibernating	python	leap	\N	\N	0	1	236	2016-07-29 05:53:22	2016-07-29 05:53:22	{"year.py":"#!/usr/bin/python\\n\\ndef is_leap_year(year):\\n    if year % 400 == 0 or year % 4 == 0 and year % 100 != 0:\\n        return True\\n    else:\\n        return False"}
441	18	6a06032d9cc2b141ba098525	\N	javascript	etl	\N	\N	0	1	274	2016-07-23 17:02:58	2016-07-23 17:02:58	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n  for (var i = 1; i \\u003c= points[points.length - 1]; i++) {\\n    if (old[i]) {\\n      old[i].forEach(function(letter) {\\n        expected[letter.toLowerCase()] = i;\\n      });\\n    }\\n  }\\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
382	16	4eae8fa0cfc05bf07e968eae	needs_input	cpp	word-count	\N	\N	0	4	237	2016-07-22 16:28:09	2016-07-22 16:28:09	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
383	16	60e8b57b9fbe2775c3e8a482	superseded	cpp	word-count	\N	\N	0	2	237	2016-07-30 01:11:07	2016-07-30 01:11:07	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
384	16	c083dd2b89b80a505051527a	superseded	cpp	word-count	\N	\N	0	1	237	2016-08-01 21:42:39	2016-08-01 21:42:39	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
385	16	eb96862b5de95031113eb954	superseded	cpp	word-count	\N	\N	0	3	237	2016-08-05 02:38:27	2016-08-05 02:38:27	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
386	16	1780b79c9670799c91bd9e91	done	ruby	grains	\N	\N	0	2	238	2016-07-22 09:44:52	2016-07-22 09:44:52	{"grains.rb":"class Grains\\n\\n  def initialize\\n    @NUM_SQUARES = 64\\n  end\\n\\n  def square(n)\\n    2 ** (n - 1)\\n  end\\n\\n  def total\\n    2 ** @NUM_SQUARES - 1\\n  end\\n\\nend"}
387	16	2cf5f574f588cfaa93613e89	superseded	ruby	grains	\N	\N	0	1	238	2016-07-23 23:34:07	2016-07-23 23:34:07	{"grains.rb":"class Grains\\n\\n  attr_accessor :squares\\n\\n  def initialize\\n    @squares = [0]\\n    fill_squares\\n  end\\n\\n  def fill_squares\\n    @squares[1] = 1\\n    (2..64).each { |square|\\n      @squares[square] = (2 * @squares[square-1])\\n    }\\n  end\\n\\n  def square(count)\\n    @squares[count]\\n  end\\n\\n  def total\\n    @squares.reduce(:+)\\n  end\\n\\nend"}
388	16	443d8fda8d4284e839653f66	pending	ruby	matrix	\N	\N	0	1	239	2016-08-10 22:01:45	2016-08-10 22:01:45	{"matrix.rb":"# Matrix class\\nclass Matrix\\n  attr_reader :rows\\n\\n  def initialize(s)\\n    @matrix = s.split(\\"\\\\n\\").map { |rs| rs.split(' ').map(\\u0026:to_i) }\\n  end\\n\\n  def rows\\n    @matrix\\n  end\\n\\n  def columns\\n    first, *rest = @matrix\\n    first.zip(*rest)\\n  end\\nend"}
389	16	c9474061725b9fd07de677d9	pending	javascript	beer-song	\N	\N	0	1	240	2016-07-23 11:15:54	2016-07-23 11:15:54	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
390	16	522d775fd3f5ce7613a7df25	superseded	clojure	binary	\N	\N	0	1	241	2016-07-20 00:55:56	2016-07-20 00:55:56	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map vector\\n            (reverse binary)\\n            (iterate #(* % 2) 1))\\n       (filter #(= (first %) \\\\1))\\n       (map last)\\n       (reduce +)))"}
391	16	2b0df18899e36e416e786b8a	pending	clojure	binary	\N	\N	0	2	241	2016-07-28 05:22:57	2016-07-28 05:22:57	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map-indexed vector (reverse binary))\\n       (filter #(= (second %) \\\\1))\\n       (map first)\\n       (map #(bit-shift-left 1 %))\\n       (reduce +)))"}
394	16	6cb6f0abad7b6c24e63917ee	done	csharp	etl	\N	\N	0	2	244	2016-07-19 03:04:28	2016-07-19 03:04:28	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               if(row.Value != null)\\r\\n               { \\r\\n                   foreach(var letter in row.Value)\\r\\n                   {\\r\\n                       newDictionary[letter.ToLower()] = row.Key;                       \\r\\n                   }\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
395	16	3904459e6de0afd63aaa98cb	superseded	csharp	etl	\N	\N	0	1	244	2016-07-22 02:17:25	2016-07-22 02:17:25	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               foreach(var letter in row.Value)\\r\\n               {\\r\\n                   newDictionary.Add(letter.ToString().ToLower(), row.Key);\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
396	16	f35baa8e48182bf21b6edb06	pending	ruby	hello-world	\N	\N	0	1	245	2016-07-25 18:10:44	2016-07-25 18:10:44	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello (name='World')\\r\\n    \\"Hello, \\" + name + \\"!\\"\\r\\n  end\\r\\n\\r\\nend"}
397	16	2a502bfc99f19b9b024507a0	superseded	ruby	gigasecond	\N	\N	0	2	246	2016-07-20 08:24:43	2016-07-20 08:24:43	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_time\\n  end\\nend"}
398	16	add31b4849ce2e31febfe0f0	superseded	ruby	gigasecond	\N	\N	0	1	246	2016-07-27 05:39:36	2016-07-27 05:39:36	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_date\\n  end\\nend"}
399	16	c8e4e641ce9674c03536c55c	done	ruby	gigasecond	\N	\N	0	3	246	2016-07-31 04:17:56	2016-07-31 04:17:56	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    date.to_time + 10**9\\n  end\\nend"}
400	16	ff40f65d5cdc3d30ff3511a5	done	scala	bob	\N	\N	0	1	247	2016-08-04 15:22:03	2016-08-04 15:22:03	{"src/main/scala/teenager.scala":"/**\\n * Created by j0rik on 25.06.15.\\n */\\nclass Bob {\\n  def hey (str : String) = {\\n    if ((str == null) || (str == \\"\\")) \\"Fine. Be that way!\\"\\n    else\\n    if (str.trim() == \\"\\") \\"Fine. Be that way!\\"\\n    else\\n    if ((str.toUpperCase() == str)\\u0026\\u0026(!str.matches(\\"\\"\\"[0-9, \\\\?]*\\"\\"\\"))) \\"Whoa, chill out!\\"\\n    else\\n    if (str.endsWith(\\"?\\")) \\"Sure.\\" else \\"Whatever.\\"\\n  }\\n}"}
401	16	7aed2e2f5b7e3a2aa9f436cc	\N	javascript	etl	\N	\N	0	2	248	2016-07-24 11:37:51	2016-07-24 11:37:51	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n\\n  function processKeys(key) {\\n    old[key].forEach(function(letter) {\\n      expected[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n\\n  points.forEach(processKeys);\\n  \\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
402	16	c6a52bef714c22ce11d8899c	\N	javascript	etl	\N	\N	0	1	248	2016-07-28 06:39:11	2016-07-28 06:39:11	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n  for (var i = 1; i \\u003c= points[points.length - 1]; i++) {\\n    if (old[i]) {\\n      old[i].forEach(function(letter) {\\n        expected[letter.toLowerCase()] = i;\\n      });\\n    }\\n  }\\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
403	16	97ab65c732bd1019b73a2778	done	ruby	leap	\N	\N	0	1	249	2016-08-01 20:09:16	2016-08-01 20:09:16	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
404	16	8feac6d2c3c7b9d41eded76e	done	python	rna-transcription	\N	\N	0	1	250	2016-07-27 19:25:00	2016-07-27 19:25:00	{"dna.py":"class DNA(object):\\n    reemplazar = dict(zip(list('GCTA'), list('CGAU')))\\n    def __init__(self, dna):\\n        self.dna = dna\\n\\n    def to_rna(self):\\n        ret = []\\n        for char in self.dna:\\n            ret.append(self.reemplazar[char])\\n        return ''.join(ret)"}
405	16	989c0d3abff3fdc4c3c4d946	pending	python	allergies	\N	\N	0	1	251	2016-07-30 16:26:15	2016-07-30 16:26:15	{"allergies.py":"allergens = [\\n    'eggs',\\n    'peanuts',\\n    'shellfish',\\n    'strawberries',\\n    'tomatoes',\\n    'chocolate',\\n    'pollen',\\n    'cats',\\n]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self, score):\\n        self.list = []\\n        for i, allergen in enumerate(allergens):\\n            if score \\u0026 1 \\u003c\\u003c i:\\n                self.list.append(allergen)\\n\\n    def is_allergic_to(self, allergen):\\n        return allergen in self.list"}
406	16	561922b078044f4ec7a12244	\N	python	difference-of-squares	\N	\N	0	1	252	2016-07-21 03:15:48	2016-07-21 03:15:48	{"diffsquare.py":"n= int(input(\\"enter n value: \\"))\\ndef sum_of_squares(n):\\n    return sum([i**2 for i in range(1, n+1)])\\n\\ndef square_of_sum(n):\\n    return sum(range(1, n+1)) ** 2\\n\\nprint square_of_sum(n) - sum_of_squares(n)"}
407	16	8d7d1e766568a74976131293	hibernating	cpp	hamming	\N	\N	0	1	253	2016-07-26 10:29:46	2016-07-26 10:29:46	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
408	16	dc3f38ce8066e6ef604a8507	\N	cpp	hamming	\N	\N	0	2	253	2016-08-06 13:16:25	2016-08-06 13:16:25	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
409	16	89cd3a81f15f32ac6b96dd65	\N	perl5	bob	\N	\N	0	1	254	2016-07-19 15:22:52	2016-07-19 15:22:52	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
410	16	c4a1c8ee1578b03b745a9ea7	\N	ruby	binary	\N	\N	0	1	255	2016-07-20 17:30:18	2016-07-20 17:30:18	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
411	16	d1b2d8ccd76e983a9555f8ef	done	haskell	gigasecond	\N	\N	0	2	256	2016-07-29 04:29:34	2016-07-29 04:29:34	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\ngigasecond = 10^9 :: NominalDiffTime\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime gigasecond $ UTCTime d 0"}
412	16	8f84de5413d9cb96c10d7657	superseded	haskell	gigasecond	\N	\N	0	1	256	2016-08-04 05:33:31	2016-08-04 05:33:31	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime (10^9) $ UTCTime d 0"}
413	16	6d049e7c3188e3b3dff27f20	pending	python	hello-world	\N	\N	0	1	257	2016-08-08 22:48:19	2016-08-08 22:48:19	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if name is None:\\n        return 'Hello, World!'\\n    else:\\n        return 'Hello, ' + name + '!'"}
414	16	6bd76248e8fbf6df8c9ba958	pending	coffeescript	word-count	\N	\N	0	1	258	2016-07-23 08:57:43	2016-07-23 08:57:43	{"\\\\coffeescript\\\\word-count\\\\words.coffee":"class Words\\r\\n\\tconstructor: (text) -\\u003e\\r\\n\\t\\t@count = {}\\r\\n\\t\\tfor word in text.match(/\\\\w+/g)\\r\\n\\t\\t\\tword = word.toLowerCase()\\r\\n\\t\\t\\tif word of @count\\r\\n\\t\\t\\t\\t@count[word] += 1\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\t@count[word] = 1\\r\\n\\r\\nmodule.exports = Words"}
415	16	30f748c1e39958f9c64f1b13	superseded	ruby	beer-song	\N	\N	0	3	259	2016-07-19 07:47:32	2016-07-19 07:47:32	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
416	16	c2e78867647dc787ae98f181	superseded	ruby	beer-song	\N	\N	0	2	259	2016-07-22 02:52:29	2016-07-22 02:52:29	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
417	16	2abe0cf77e324cc576c5b0d9	superseded	ruby	beer-song	\N	\N	0	1	259	2016-07-24 09:21:57	2016-07-24 09:21:57	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
418	16	a7da99380294c1cd6fbda790	superseded	ruby	beer-song	\N	\N	0	4	259	2016-07-26 04:27:02	2016-07-26 04:27:02	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
419	16	e6c215d9a370c17d6b7e14e9	done	ruby	beer-song	\N	\N	0	5	259	2016-08-07 10:51:43	2016-08-07 10:51:43	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
420	18	45beff4295b1c90638dc3396	\N	scala	bob	\N	\N	0	2	260	2016-07-09 17:56:51	2016-07-09 17:56:51	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request.trim.isEmpty) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
421	18	854dc9f3e035bab769299490	\N	scala	bob	\N	\N	0	3	260	2016-07-22 01:15:51	2016-07-22 01:15:51	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  import bob._\\n  def hey(request: String): String = { request match {\\n    case silence() =\\u003e \\"Fine. Be that way!\\"\\n    case yelling() =\\u003e \\"Whoa, chill out!\\"\\n    case question() =\\u003e \\"Sure.\\"\\n    case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n}\\n\\nobject bob {\\n  val silence = \\"\\"\\"\\\\s*\\"\\"\\".r\\n  val yelling = \\"\\"\\"[^a-z]*[A-Z][^a-z]\\"\\"\\".r\\n  val question = \\"\\"\\".*[?]\\"\\"\\".r\\n}"}
422	18	576e83e7ac21e9d37a0b479e	\N	scala	bob	\N	\N	0	1	260	2016-08-07 09:10:51	2016-08-07 09:10:51	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    val regexAll = \\"\\"\\"[a-zA-Z0-9]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request == \\"\\" || (request==regexAll.replaceAllIn(request, \\" \\"))) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
423	18	c34b5a91ce793b1f389d5d17	done	ruby	leap	\N	\N	0	1	261	2016-07-06 11:59:27	2016-07-06 11:59:27	{"year.rb":"class Year\\n  def self.leap?(year)\\n    return false unless divisible_by?(year, 4)\\n\\n    is_century_but_not_fourth?(year) ? false : true\\n  end\\n\\n  private\\n  def self.divisible_by?(number, numerator)\\n    number % numerator == 0\\n  end\\n\\n  def self.is_century_but_not_fourth?(year)\\n    divisible_by?(year, 100) \\u0026\\u0026 !divisible_by?(year, 400)\\n  end\\nend"}
424	18	b7474fdb611d56a0b2c8cb7d	pending	haskell	bob	\N	\N	0	2	262	2016-07-08 00:16:54	2016-07-08 00:16:54	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = all (\\\\z -\\u003e isUpper z || not (isLetter z)) y \\u0026\\u0026 any isLetter y\\n        question y = last y == '?'\\n        empty    y = all isSpace y"}
425	18	9cb424650234ced9a04af506	superseded	haskell	bob	\N	\N	0	1	262	2016-07-10 09:46:45	2016-07-10 09:46:45	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = L.all (\\\\z -\\u003e (isUpper z) || (not $ isLetter z)) y \\u0026\\u0026 L.any isLetter y\\n        question y = (last $ L.dropWhileEnd isUpper y) == '?'\\n        empty    y = L.all isSpace y"}
426	18	59d57b57f2fba2bc56eec8de	pending	go	difference-of-squares	\N	\N	0	1	263	2016-07-21 23:29:34	2016-07-21 23:29:34	{"difference_of_squares.go":"package diffsquares\\n\\ntype iter func(int) int\\n\\nfunc SquareOfSums(n int) int {\\n\\tsum := iterate(n, func(n int) int { return n })\\n\\treturn sum * sum\\n}\\n\\nfunc SumOfSquares(n int) int {\\n\\treturn iterate(n, func(n int) int { return n * n })\\n}\\n\\nfunc Difference(n int) int {\\n\\treturn SquareOfSums(n) - SumOfSquares(n)\\n}\\n\\nfunc iterate(n int, fn iter) int {\\n\\tsum := 0\\n\\tfor i := 0; i \\u003c= n; i++ {\\n\\t\\tsum += fn(i)\\n\\t}\\n\\treturn sum\\n}"}
427	18	6af71757ba381c96dcb78f25	done	python	word-count	\N	\N	0	1	264	2016-07-09 22:48:14	2016-07-09 22:48:14	{"wordcount.py":"\\r\\nfrom collections import Counter\\r\\nimport re\\r\\n\\r\\n\\r\\ndef word_count(s):\\r\\n    split = re.split(r' |\\\\n', s)\\r\\n    count = Counter(split)\\r\\n    del count['']\\r\\n    return count\\r\\n\\r\\n\\r"}
428	18	3a84a35b9b8af72fe7c5efd9	pending	haskell	gigasecond	\N	\N	0	2	265	2016-07-09 20:37:35	2016-07-09 20:37:35	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime 1e9"}
429	18	05548df965adb576eb6feb9f	superseded	haskell	gigasecond	\N	\N	0	1	265	2016-07-20 09:52:38	2016-07-20 09:52:38	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime (10 ^ 9)"}
430	18	880a4d65801d6f997aae8481	done	javascript	bob	\N	\N	0	1	266	2016-07-18 03:02:02	2016-07-18 03:02:02	{"bob.js":"function isWhiteSpace(code) {\\n    //this only works for ASCII\\n    return code === \\" \\".charCodeAt(0);\\n}\\n\\nfunction isAlpha(code) {\\n    //this only works for ASCII\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else if (code \\u003e 96 \\u0026\\u0026 code \\u003c 123) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isUpperCase(code) {\\n    //this only works for ASCII.\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isQuestionMark(code) {\\n    //this only works for English and other languages\\n    //that use a question mark at the end.\\n    return code  === \\"?\\".charCodeAt(0);;\\n}\\n\\nfunction findAcronyms(str) {\\n    //this is going to be very slow, if the list is big.\\n    //maybe a trie is a better choice here.\\n    acronyms = [\\"OK\\", \\"DMV\\"];\\n    index = {};\\n\\n    for (i=0; i \\u003c acronyms.length; i++) {\\n        acronym = acronyms[i];\\n        pos = str.indexOf(acronym);\\n        if (pos \\u003e -1) {\\n            index[pos] = acronym.length-1;\\n        }\\n        \\n    }\\n\\n    return index;\\n}\\n\\nvar Bob = function() {};\\nBob.prototype.hey = function(msg) {\\n    isShouting = false;\\n    isQuestion = false;\\n    isEmpty = true;\\n\\n    length = msg.length;\\n    acronyms = findAcronyms(msg);\\n    for (var i=0; i\\u003clength; i++) {\\n        code = msg.charCodeAt(i);\\n\\n        if (isWhiteSpace(code)) {\\n            continue;\\n        } else {\\n            isEmpty = false;\\n        }\\n        \\n        acronymLength = acronyms[i];\\n        if (acronymLength !== undefined) {\\n            //skip over acronyms\\n            i = i+acronymLength;\\n            continue;\\n        }\\n\\n        if (isAlpha(code)) {\\n            isShouting = isUpperCase(code);\\n        }\\n        \\n        //if we are at the end check if we have a question mark\\n        if (i == length-1) {\\n            isQuestion = isQuestionMark(code);\\n        }\\n    }\\n\\n    if (isShouting) {\\n        return \\"Woah, chill out!\\";\\n    } else if (isQuestion) {\\n        return \\"Sure.\\";\\n    } else if (isEmpty) {\\n        return \\"Fine. Be that way!\\";\\n    } else {\\n        return \\"Whatever.\\";\\n    }\\n};\\nmodule.exports = Bob;"}
431	18	7b44d7018328a4422ea83cbf	\N	java	space-age	\N	\N	0	1	267	2016-07-07 06:52:24	2016-07-07 06:52:24	{"src\\\\main\\\\java\\\\SpaceAge.java":"public class SpaceAge {\\r\\n\\r\\n\\tprivate static final long EARTH_YEAR_SECONDS = 31557600;\\r\\n\\r\\n\\tprivate static final double MERCURY_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 000.24084670;\\r\\n\\tprivate static final double VENUS_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 000.61519726;\\r\\n\\tprivate static final double EARTH_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 001.00000000;\\r\\n\\tprivate static final double MARS_SECONDS_IN_YEAR    = EARTH_YEAR_SECONDS * 001.88081580;\\r\\n\\tprivate static final double JUPITER_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 011.86261500;\\r\\n\\tprivate static final double SATURN_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 029.44749800;\\r\\n\\tprivate static final double URANUS_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 084.01684600;\\r\\n\\tprivate static final double NEPTUNE_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 164.79132000;\\r\\n\\r\\n\\tprivate final long seconds;\\r\\n\\r\\n\\tpublic SpaceAge(long seconds) {\\r\\n\\t\\tthis.seconds = seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic long getSeconds() {\\r\\n\\t\\treturn this.seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMercury() {\\r\\n\\t\\treturn seconds / MERCURY_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onVenus() {\\r\\n\\t\\treturn seconds / VENUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onEarth() {\\r\\n\\t\\treturn seconds / EARTH_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMars() {\\r\\n\\t\\treturn seconds / MARS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onJupiter() {\\r\\n\\t\\treturn seconds / JUPITER_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onSaturn() {\\r\\n\\t\\treturn seconds / SATURN_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onUranus() {\\r\\n\\t\\treturn seconds / URANUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onNeptune() {\\r\\n\\t\\treturn seconds / NEPTUNE_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n}"}
432	18	cfea4c33bb028c6eca8cac52	done	javascript	robot-simulator	\N	\N	0	1	268	2016-07-18 00:05:37	2016-07-18 00:05:37	{"robot-simulator.js":"var directions = ['north', 'east', 'south', 'west'],\\r\\n    numDirections = directions.length;\\r\\n\\r\\nvar command = {\\r\\n  L: \\"turnLeft\\",\\r\\n  R: \\"turnRight\\",\\r\\n  A: \\"advance\\"\\r\\n};\\r\\n\\r\\nvar Robot = function() {\\r\\n  var self = this, bearingIndex,\\r\\n      turn = function(quadrants) {\\r\\n        bearingIndex = (bearingIndex + quadrants) % numDirections;\\r\\n        return self.bearing = directions[bearingIndex];\\r\\n      };\\r\\n\\r\\n  this.orient = function(direction) {\\r\\n    bearingIndex = directions.indexOf(direction);\\r\\n    return self.bearing = direction;\\r\\n  };\\r\\n  this.turnRight = function() {\\r\\n    return turn(1);\\r\\n  };\\r\\n  this.turnLeft = function() {\\r\\n    return turn(3);\\r\\n  };\\r\\n\\r\\n  this.at = function(x, y) {\\r\\n    return self.coordinates = [x, y];\\r\\n  };\\r\\n\\r\\n  this.advance = function() {\\r\\n    var axis = (bearingIndex + 1) % 2, // north/south 1, east/west 0\\r\\n        sign = 1 - (bearingIndex \\u003e 1) * 2; // north/east +1, south/west -1\\r\\n    self.coordinates[axis] += sign;\\r\\n    return self.coordinates;\\r\\n  };\\r\\n\\r\\n  this.instructions = function(commands) {\\r\\n    return commands.match(/[ALR]/g).map(function(c) {\\r\\n      return command[c];\\r\\n    });\\r\\n  };\\r\\n\\r\\n  this.place = function(options) {\\r\\n    self.orient(options.direction);\\r\\n    return self.coordinates = [options.x, options.y];\\r\\n  };\\r\\n\\r\\n  this.evaluate = function(commands) {\\r\\n    return self.instructions(commands).map(function(c) {\\r\\n      return self[c]();\\r\\n    });\\r\\n  };\\r\\n};\\r\\n\\r\\nmodule.exports = Robot;\\r"}
433	18	512033d6f768fd4749618b36	superseded	javascript	anagram	\N	\N	0	1	269	2016-07-09 14:14:57	2016-07-09 14:14:57	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.toLowerCase().split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
434	18	69a63b786d2dc3b3d96ee723	pending	javascript	anagram	\N	\N	0	2	269	2016-07-18 04:11:48	2016-07-18 04:11:48	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
435	18	e15825ff15be4f56dfb8dc82	pending	ruby	nth-prime	\N	\N	0	1	270	2016-07-12 00:41:06	2016-07-12 00:41:06	{"prime.rb":"require 'set'\\n\\nmodule Prime\\n\\n  def self.nth(n)\\n    PrimeSieve.new(upper_bound(n)).drop(n-1).first\\n  end\\n\\n  def self.upper_bound(n)\\n    return 20 if n \\u003c= 6\\n    n * (Math.log(n) + Math.log(Math.log(n)))\\n  end\\n\\n  class PrimeSieve\\n    include Enumerable\\n\\n    def initialize(max)\\n      @max = max\\n    end\\n\\n    def each\\n      yield 2\\n\\n      odd_composites = Set.new\\n      (3..@max).step(2) do |n|\\n        if !odd_composites.include?(n)\\n          yield n\\n          (n**2..@max).step(n) do |i|\\n            odd_composites \\u003c\\u003c i\\n          end\\n        end\\n      end\\n    end\\n  end\\nend"}
436	18	c8f599d85bba24f2122951b5	hibernating	haskell	grains	\N	\N	0	1	271	2016-07-12 21:21:04	2016-07-12 21:21:04	{"Grains.hs":"module Grains\\n    ( square\\n    , total\\n    ) where\\n\\nsquare :: Integral a =\\u003e a -\\u003e a\\nsquare = (2^) . subtract 1\\n\\ntotal :: Integral a =\\u003e a\\ntotal = sum $ map (2^) [0..63]"}
437	18	a7a25aa1b259a7dfe1e8a118	\N	ruby	binary	\N	\N	0	1	272	2016-07-21 15:44:28	2016-07-21 15:44:28	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.reverse.chars\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
438	18	5d23bda6ee51dcd59124bc18	\N	ruby	binary	\N	\N	0	2	272	2016-07-30 16:41:22	2016-07-30 16:41:22	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.chars.reverse\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
443	18	4eeb8c678be5850212a5e0fe	hibernating	scala	nucleotide-count	\N	\N	0	1	276	2016-07-28 00:35:57	2016-07-28 00:35:57	{"dna.scala":"class DNA(str: String) {\\n  val DnaNucleotides = Set('A', 'C', 'G', 'T')\\n  val RnaNucleotides = Set('A', 'C', 'G', 'U')\\n\\n  if (!str.toSet.diff(DnaNucleotides).isEmpty)\\n    throw new IllegalArgumentException\\n\\n  def count(marker: Char) = {\\n    if ((DnaNucleotides ++ RnaNucleotides).contains(marker))\\n      str.count(_ == marker)\\n    else\\n      throw new IllegalArgumentException\\n  }\\n\\n  def nucleotideCounts =\\n    DnaNucleotides.map(m =\\u003e (m, count(m))).toMap\\n}"}
444	18	7ec03c26afeb5c09a326e1b2	pending	javascript	hello-world	\N	\N	0	1	277	2016-07-10 15:27:23	2016-07-10 15:27:23	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\tif (input === '')\\n\\t\\treturn 'Hello, world!';\\n\\telse\\n\\t\\treturn 'Hello, '+input+'!';\\n};\\n\\nmodule.exports = HelloWorld;"}
445	18	5ed1b25b2f191d7a87f0af99	\N	ruby	roman-numerals	\N	\N	0	1	278	2016-07-28 12:27:12	2016-07-28 12:27:12	{"roman_numerals.rb":"class Fixnum\\n  VERSION = 1\\n  ROMANS = [['I', 'V'], ['X', 'L'], ['C', 'D'], ['M']]\\n\\n  def to_roman\\n    in_roman = []\\n\\n    self.to_s.chars.reverse_each.with_index do |digit, index|\\n      pair      = ROMANS[index]\\n      next_pair = ROMANS[index + 1]\\n\\n      roman_digit = case digit.to_i\\n                    when 0 then ''\\n                    when 1 then pair.first\\n                    when 2 then pair.first * 2\\n                    when 3 then pair.first * 3\\n                    when 4 then pair.first + pair.last\\n                    when 5 then pair.last\\n                    when 6 then pair.last + pair.first\\n                    when 7 then pair.last + pair.first * 2\\n                    when 8 then pair.last + pair.first * 3\\n                    when 9 then pair.first + next_pair.first\\n                    end\\n\\n      in_roman \\u003c\\u003c roman_digit\\n    end\\n\\n    in_roman.reverse.join\\n  end\\nend"}
446	18	a27fb375cf6c509573e32404	\N	csharp	hamming	\N	\N	0	1	279	2016-08-02 08:03:44	2016-08-02 08:03:44	{"Hamming.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nclass Hamming\\r\\n{\\r\\n    public static int Compute(string left, string right)\\r\\n    {\\r\\n        if (left == right)\\r\\n        {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        int distance = 0;\\r\\n        for (int i = 0; i \\u003c left.Length; i++) {\\r\\n            if (left[i] != right[i]) {\\r\\n                distance++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return distance;\\r\\n    }\\r\\n}"}
447	18	5105ac7e6d8d1010bdc193f8	hibernating	java	etl	\N	\N	0	1	280	2016-07-10 22:51:26	2016-07-10 22:51:26	{"src/main/java/Etl.java":"import java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Etl{\\n\\t\\n\\t\\n\\tpublic Map\\u003cString, Integer\\u003e transform(Map\\u003cInteger, List\\u003cString\\u003e\\u003e old){\\n\\t\\t\\n\\t\\tMap\\u003cString, Integer\\u003e results = new HashMap\\u003cString, Integer\\u003e();\\n\\t\\t\\n\\t\\tfor(int score : old.keySet()){\\t\\t\\t\\n\\t\\t\\tfor(String letter : old.get(score)){\\n\\t\\t\\t\\tresults.put(letter.toLowerCase(), score);\\n\\t\\t\\t}\\n\\t\\t}\\t\\t\\n\\t\\t\\n\\t\\treturn results;\\n\\t}\\n\\t\\n}"}
448	18	91d92ef400543d490f771a01	hibernating	cpp	hamming	\N	\N	0	1	281	2016-07-13 04:36:53	2016-07-13 04:36:53	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
449	18	c00fdc0a54be9903e78c1a1f	\N	cpp	hamming	\N	\N	0	2	281	2016-07-24 06:44:27	2016-07-24 06:44:27	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
450	18	aaf0713f8eea56727d9c0183	needs_input	cpp	word-count	\N	\N	0	4	282	2016-07-10 07:36:42	2016-07-10 07:36:42	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
451	18	0a3d4cc7f72c1a02b4cd2085	superseded	cpp	word-count	\N	\N	0	2	282	2016-07-12 20:51:27	2016-07-12 20:51:27	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
452	18	a745dcd01b738df348cb100e	superseded	cpp	word-count	\N	\N	0	1	282	2016-07-30 13:29:09	2016-07-30 13:29:09	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
453	18	5431df5952c3a45ec64e4bd7	superseded	cpp	word-count	\N	\N	0	3	282	2016-08-02 03:18:56	2016-08-02 03:18:56	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
454	18	86805e205fb7f62aefdd2f43	superseded	haskell	nucleotide-count	\N	\N	0	3	283	2016-07-07 22:41:30	2016-07-07 22:41:30	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ (pairsMap 0 nucleotides) ++ (pairsMap 1 dna)\\r\\n    where pairsMap val ns = ns `zip` (repeat val)\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
455	18	b496b8ef0f878fc00cec3cc9	superseded	haskell	nucleotide-count	\N	\N	0	2	283	2016-07-12 15:06:32	2016-07-12 15:06:32	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
456	18	211cb685abf2cc97deedabc1	superseded	haskell	nucleotide-count	\N	\N	0	1	283	2016-07-13 15:08:38	2016-07-13 15:08:38	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n dna = if n `elem` nucleotides\\r\\n    then length $ filter (== n) dna \\r\\n    else error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
457	18	d5f634958000f329db893997	hibernating	haskell	nucleotide-count	\N	\N	0	5	283	2016-07-14 06:52:48	2016-07-14 06:52:48	{"DNA.hs":"module DNA where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromList)\\r\\nimport Control.Monad (forM_)\\r\\nimport Data.Array.ST (readArray, writeArray, newArray, runSTUArray)\\r\\nimport Data.Array.Unboxed (UArray, assocs)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts = fromList . filter (\\\\(n,_) -\\u003e n `elem` nucleotides) . assocs . countArray\\r\\n\\t\\r\\ncountArray :: DNA -\\u003e UArray Nucleotide Int\\r\\ncountArray dna = runSTUArray $ do\\r\\n\\tcounts \\u003c- newArray ('A','Z') 0\\r\\n\\tforM_ dna $ \\\\n -\\u003e do\\r\\n\\t\\tc \\u003c- readArray counts n\\r\\n\\t\\twriteArray counts n (1+c)\\r\\n\\treturn counts"}
458	18	a31be0bcdf2cfc1c6b19640a	superseded	haskell	nucleotide-count	\N	\N	0	4	283	2016-07-19 20:46:33	2016-07-19 20:46:33	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ pairsMap 0 nucleotides ++ pairsMap 1 dna\\r\\n    where pairsMap val ns = ns `zip` repeat val\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
459	18	355abbcbc0078ee84749ecfb	pending	scala	word-count	\N	\N	0	1	284	2016-07-12 03:50:33	2016-07-12 03:50:33	{"src/main/scala/Phrase.scala":"class Phrase(phrase:String) {\\n    \\n    val wordCount = \\n        phrase.toLowerCase\\n              .split(\\"\\"\\"[^a-zA-Z1-9']+\\"\\"\\")\\n              .filter(!_.isEmpty)\\n              .groupBy(identity)\\n              .mapValues(_.length)\\n}"}
460	18	b8d66e819ffc627065f645e6	\N	scheme	grains	\N	\N	0	1	285	2016-08-02 08:26:55	2016-08-02 08:26:55	{"grains.scm":"(define-module (grains)\\n  #:export (square total)\\n  #:autoload (srfi srfi-1) (iota))\\n\\n(define (square n)\\n  (expt 2 (- n 1)))\\n\\n(define (total)\\n  (let total-partiel ((k 1) (accu 0))\\n    (if (\\u003e k 64)\\n\\taccu\\n\\t(total-partiel (+ 1 k) (+ accu (square k))))))"}
485	42	24024312772c0621e1b28f98	\N	perl5	bob	\N	\N	0	1	303	2016-04-30 01:20:30	2016-04-30 01:20:30	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
461	18	6be8028ffb294a4c09217c2d	pending	javascript	beer-song	\N	\N	0	1	286	2016-07-11 13:51:09	2016-07-11 13:51:09	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
462	18	caace2fed316bd428c6a5614	done	clojure	word-count	\N	\N	0	2	287	2016-07-12 04:25:38	2016-07-12 04:25:38	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
463	18	a16a7aa643896b391fd71f06	superseded	clojure	word-count	\N	\N	0	1	287	2016-07-31 19:02:37	2016-07-31 19:02:37	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
464	18	666c4ace430a4f6b6f47a115	\N	haskell	anagram	\N	\N	0	1	288	2016-07-12 00:02:28	2016-07-12 00:02:28	{"Anagram.hs":"module Anagram\\n       ( anagramsFor\\n       ) where\\n\\nimport           Data.Char (toLower)\\nimport           Data.List (sort)\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor word = filter isAnagram\\n  where\\n    isAnagram candidate = canon candidate == canonWord\\n                       \\u0026\\u0026 lower candidate /= lower word\\n    canonWord = canon word\\n\\n-- Canonicalize words for comparison.\\ncanon :: String -\\u003e String\\ncanon = sort . lower\\n\\nlower :: String -\\u003e String\\nlower = map toLower"}
465	18	d05d78c0cc8a988387f5fb44	superseded	ruby	word-count	\N	\N	0	1	289	2016-07-21 01:13:48	2016-07-21 01:13:48	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
466	18	fcdd162931f22f35b7e5755d	superseded	ruby	word-count	\N	\N	0	3	289	2016-07-29 01:13:39	2016-07-29 01:13:39	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
467	18	f9173f9ce157dc851a6689f9	done	ruby	word-count	\N	\N	0	4	289	2016-07-30 05:17:03	2016-07-30 05:17:03	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
468	18	d54d6c87beafe75b03b79fdb	superseded	ruby	word-count	\N	\N	0	2	289	2016-07-30 19:53:33	2016-07-30 19:53:33	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
469	18	c9e81b2cc2d133932fb11035	hibernating	python	leap	\N	\N	0	1	290	2016-07-07 09:02:00	2016-07-07 09:02:00	{"year.py":"#!/usr/bin/python\\n\\ndef is_leap_year(year):\\n    if year % 400 == 0 or year % 4 == 0 and year % 100 != 0:\\n        return True\\n    else:\\n        return False"}
470	18	5bccf5a40d97e91e5870a5f7	pending	python	allergies	\N	\N	0	2	291	2016-07-13 23:50:14	2016-07-13 23:50:14	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        return [allergen for (allergen, yesNo) in zip(alergies, base_2_num[::-1]) if int(yesNo)]\\n\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
471	18	a167c7ef9f65f23396c44ada	superseded	python	allergies	\N	\N	0	1	291	2016-08-08 09:39:51	2016-08-08 09:39:51	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        ls =[]\\n        p = 0\\n        for x in base_2_num[::-1]:\\n            if x ==\\"1\\" and p \\u003c 8:\\n                ls.append(alergies[p])\\n            p += 1\\n#        print ls\\n        return  ls\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
472	18	e3c1692ba5695d33aa3006d0	\N	ruby	rna-transcription	\N	\N	0	1	292	2016-07-11 18:39:55	2016-07-11 18:39:55	{"rna_transcription.rb":"class Complement\\n  VERSION = 2\\n  CODE = ['GCTA', 'CGAU']\\n  \\n  def self.of_dna(sample)\\n    raise ArgumentError unless sample.match(/^[GCTA]*$/)\\n    sample.tr *CODE \\n  end\\n\\n  def self.of_rna(sample)\\n    raise ArgumentError unless sample.match(/^[CGAU]*$/)\\n    sample.tr *CODE.reverse\\n  end\\nend"}
475	18	ea1760b1fc104d4d3c58eb21	pending	csharp	anagram	\N	\N	0	1	294	2016-07-08 06:16:17	2016-07-08 06:16:17	{"\\\\csharp\\\\anagram\\\\Anagram.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nclass Anagram\\r\\n{\\r\\n\\tprivate string _baseWord;\\r\\n\\tprivate bool _lookupGenerated = false;\\r\\n\\tprivate Dictionary\\u003cchar, int\\u003e _charCounts = new Dictionary\\u003cchar, int\\u003e();\\r\\n\\r\\n\\tpublic Anagram(string baseWord)\\r\\n\\t{\\r\\n\\t\\t_baseWord = baseWord.ToLower();\\r\\n\\t}\\r\\n\\r\\n\\tpublic string[] Match(string[] words)\\r\\n\\t{\\r\\n\\t\\tvar result = new List\\u003cstring\\u003e();\\r\\n\\r\\n\\t\\t//\\tGenerate a one-time table of character counts in the anagram word for faster lookup (deferred from\\r\\n\\t\\t//\\tthe constructor to avoid the cost of generation until necessary)\\r\\n\\t\\tif (!_lookupGenerated)\\r\\n\\t\\t{\\r\\n\\t\\t\\tGenerateCharCountLookup();\\r\\n\\t\\t\\t_lookupGenerated = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tforeach (var word in words)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (IsMatch(word.ToLower()))\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tresult.Add(word);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result.ToArray();\\r\\n\\t}\\r\\n\\r\\n\\tprivate void GenerateCharCountLookup()\\r\\n\\t{\\r\\n\\t\\t//\\tStore a count of each character in the base word for later comparison\\r\\n\\t\\tforeach (var ch in _baseWord.Distinct())\\r\\n\\t\\t{\\r\\n\\t\\t\\t_charCounts.Add(ch, _baseWord.Count(c =\\u003e c == ch));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprivate bool IsMatch(string word)\\r\\n\\t{\\r\\n\\t\\t//\\tIf the words are not the same length they cannot be anagrams - This check is fast and cheap\\r\\n\\t\\tif (word.Length != _baseWord.Length)\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t//\\tIf the word is the same it's not an anagram\\r\\n\\t\\tif (0 == word.CompareTo(_baseWord))\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t//\\tAn anagram should have the same number of occurrances of each letter\\r\\n\\t\\tforeach (var item in _charCounts)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (word.Count(c =\\u003e c == item.Key) != item.Value)\\r\\n\\t\\t\\t\\treturn false;\\r\\n        }\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n}"}
476	18	e9525827e759112c248a37c2	done	haskell	crypto-square	\N	\N	0	1	295	2016-07-16 04:36:20	2016-07-16 04:36:20	{"/haskell/crypto-square/CryptoSquare.hs":"module CryptoSquare\\n( normalizePlaintext\\n, squareSize\\n, plaintextSegments\\n, ciphertext\\n, normalizeCiphertext\\n) where\\n\\nimport Data.Char\\nimport Data.List\\n\\nnormalizePlaintext :: String -\\u003e String\\nnormalizePlaintext = filter isAlphaNum . map toLower\\n\\nsquareSize :: String -\\u003e Int\\nsquareSize = ceiling . sqrt . fromIntegral . length\\n\\nplaintextSegments :: String -\\u003e [String]\\nplaintextSegments s = squareSplit (squareSize clean) clean\\n    where clean = normalizePlaintext s\\n\\nsquareSplit :: Int -\\u003e String -\\u003e [String]\\nsquareSplit _ [] = [] \\nsquareSplit n xs = first : squareSplit n rest\\n    where (first, rest) = splitAt n xs\\n\\nciphertext :: String -\\u003e String\\nciphertext = concat . transpose . plaintextSegments\\n\\nnormalizeCiphertext :: String -\\u003e String\\nnormalizeCiphertext = unwords . transpose . plaintextSegments"}
477	18	86bc28a0d64dad56d6602e2c	pending	clojure	meetup	\N	\N	0	1	296	2016-07-11 05:56:25	2016-07-11 05:56:25	{"/clojure/meetup/meetup.clj":"(ns meetup)\\n\\n(def doy java.util.Calendar/DAY_OF_YEAR)\\n(def dom java.util.Calendar/DAY_OF_MONTH)\\n(def dow java.util.Calendar/DAY_OF_WEEK)\\n\\n(defn days-from [month year]\\n  (let [start-date (java.util.GregorianCalendar. year month 0)\\n        num (.getActualMaximum (java.util.GregorianCalendar. year month 1) dom) ]\\n    (take num (repeatedly\\n      (fn []\\n        (.add start-date doy 1)\\n        (.clone start-date))))))\\n\\n(def day-map { :sunday 1\\n              :monday 2\\n              :tuesday 3\\n              :wednesday 4\\n              :thursday 5\\n              :friday 6\\n              :saturday 7})\\n\\n(defn teenth [days]\\n  (first (filter #(\\u003e (.get % dom) 12) days)))\\n\\n(def finders { :first first \\n               :second second\\n               :third #(nth % 2)\\n               :fourth #(nth % 3)\\n               :last last\\n               :teenth teenth })\\n\\n(defn filter-by-day [day date]\\n  (= (.get date dow) (day day-map)))\\n\\n(defn meetup [month year day to-find]\\n  (let [days (filter (partial filter-by-day day) (days-from (dec month) year))\\n        target ((to-find finders) days)]\\n    [year month (.get target dom)]))"}
478	18	2ea11e6a867d7ea69f81bef1	pending	go	luhn	\N	\N	0	1	297	2016-07-16 10:04:00	2016-07-16 10:04:00	{"/go/luhn/luhn.go":"package luhn\\n\\nimport (\\n\\t\\"log\\"\\n\\t\\"regexp\\"\\n\\t\\"strconv\\"\\n)\\n\\nfunc sum(input string) int {\\n\\t//re := regexp.MustCompile(\\"[^0-9]\\")\\n\\t//input = re.ReplaceAllString(input, \\"\\")\\n\\n\\ttotal := 0\\n\\n\\tfor i := 0; i \\u003c len(input); i++ {\\n\\t\\tnum := int(input[len(input)-1-i] - '0')\\n\\t\\tif i%2 == 0 {\\n\\t\\t\\ttotal += num\\n\\t\\t\\tcontinue\\n\\t\\t}\\n\\t\\toddcase := num * 2\\n\\t\\tif oddcase \\u003e= 10 {\\n\\t\\t\\toddcase -= 9\\n\\t\\t}\\n\\t\\ttotal += oddcase\\n\\t}\\n\\n\\treturn total\\n}\\n\\nfunc Valid(input string) bool {\\n\\tre := regexp.MustCompile(\\"[^0-9]\\")\\n\\tinput = re.ReplaceAllString(input, \\"\\")\\n\\n\\tif len(input) == 0 {\\n\\t\\treturn false\\n\\t}\\n\\n\\ttotal := sum(input)\\n\\n\\tif total%10 == 0 {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}\\n\\nvar _ = log.Println\\n\\nfunc AddCheck(input string) string {\\n\\tfor i := 0; i \\u003c 10; i++ {\\n\\t\\tcheck := strconv.Itoa(i)\\n\\t\\tret := input + check\\n\\t\\tif Valid(ret) {\\n\\t\\t\\treturn ret\\n\\t\\t}\\n\\t}\\n\\treturn \\"\\"\\n}"}
479	18	a737a67cb081f2fb79a281f1	done	elixir	nucleotide-count	\N	\N	0	1	298	2016-07-06 13:13:40	2016-07-06 13:13:40	{"elixir/nucleotide-count/dna.exs":"defmodule DNA do\\n  @nucleotides [?A, ?C, ?G, ?T]\\n\\n  @doc \\"\\"\\"\\n  Counts individual nucleotides in a DNA strand.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.count('AATAA', ?A)\\n  4\\n\\n  iex\\u003e DNA.count('AATAA', ?T)\\n  1\\n  \\"\\"\\"\\n  @spec count([char], char) :: non_neg_integer\\n  def count(strand, nucleotide) do\\n    Enum.count(strand, fn(n) -\\u003e n == nucleotide end)\\n  end\\n\\n\\n  @doc \\"\\"\\"\\n  Returns a summary of counts by nucleotide.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.nucleotide_counts('AATAA')\\n  %{?A =\\u003e 4, ?T =\\u003e 1, ?C =\\u003e 0, ?G =\\u003e 0}\\n  \\"\\"\\"\\n  @spec nucleotide_counts([char]) :: Dict.t\\n  def nucleotide_counts(strand) do\\n    Enum.reduce(@nucleotides, %{}, fn(n, result) -\\u003e Map.put(result, n, DNA.count(strand, n)) end)\\n  end\\nend"}
480	18	cd2575bf45120ad584fb91e1	hibernating	haskell	word-count	\N	\N	0	2	299	2016-07-17 06:07:00	2016-07-17 06:07:00	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (Map, fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount :: [Char] -\\u003e Map [Char] Int\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
481	18	988b8e39c64d6cf6ae3eae67	superseded	haskell	word-count	\N	\N	0	1	299	2016-07-25 07:04:26	2016-07-25 07:04:26	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
482	18	dfeaaadba38f2793cdaad36f	\N	python	gigasecond	\N	\N	0	1	300	2016-07-11 04:24:28	2016-07-11 04:24:28	{"gigasecond.py":"from datetime import timedelta\\n__author__ = 'yury'\\n\\ndef add_gigasecond(date):\\n    return date + timedelta(seconds=10**9)"}
483	18	2bbbdae56104a40fe40818e6	\N	haskell	rna-transcription	\N	\N	0	1	301	2016-08-02 01:17:11	2016-08-02 01:17:11	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA [] = []\\r\\ntoRNA (s:ss) = toRNA' s:toRNA ss\\r\\n\\r\\ntoRNA' :: Char -\\u003e Char\\r\\ntoRNA' 'C' = 'G'\\r\\ntoRNA' 'G' = 'C'\\r\\ntoRNA' 'A' = 'U'\\r\\ntoRNA' 'T' = 'A'\\r\\ntoRNA' _ = ' '"}
484	24	fbbb1e74ec9a7eaa2f9db54b	pending	javascript	word-count	\N	\N	0	1	302	2016-08-01 05:03:13	2016-08-01 05:03:13	{"word-count.js":"var words = function(text){\\n\\tvar answer = { };\\n\\tfor (var k =0; k\\u003ctext.length; k++){\\n\\t\\tif(text.indexOf(\\"\\\\n\\")\\u003e-1){\\n\\t\\t\\ttext_arr = text.split(\\"\\\\n\\");\\n\\t\\t}\\n\\t\\telse{\\n\\t\\t\\ttext_arr = text.split(\\" \\");\\n\\t\\t}\\n\\t}\\n\\tfor(var i =0, len=text_arr.length; i\\u003clen; i++){\\n\\t\\tif(answer[text_arr[i]]){\\n\\t\\t\\tanswer[text_arr[i]]+=1;\\n\\t\\t}else{\\n\\t\\t\\tanswer[text_arr[i]]=1\\n\\t\\t}\\n\\t}\\n\\treturn answer;\\n}"}
486	27	adc191e4ef0d05c7d1ff6c58	done	ruby	secret-handshake	\N	\N	0	4	304	2016-07-10 11:13:52	2016-07-10 11:13:52	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c mandate[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def mandate\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
487	27	f6507907d3d8242393b15add	superseded	ruby	secret-handshake	\N	\N	0	3	304	2016-07-21 01:55:31	2016-07-21 01:55:31	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c known_commands[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def known_commands\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
488	27	b1fbb7c5de3993590913af90	superseded	ruby	secret-handshake	\N	\N	0	2	304	2016-07-24 07:10:08	2016-07-24 07:10:08	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def reactions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
489	27	3832ca94a5bc72e4a5a246ed	superseded	ruby	secret-handshake	\N	\N	0	1	304	2016-08-02 04:43:32	2016-08-02 04:43:32	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def actions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
490	27	c25cbed038b6fdf67a03582b	pending	csharp	triangle	\N	\N	0	1	305	2016-08-07 00:44:35	2016-08-07 00:44:35	{"Triangle.cs":"﻿using System;\\r\\n\\r\\nnamespace Exercism.csharp.triangle\\r\\n{\\r\\n\\tclass Triangle\\r\\n\\t{\\r\\n\\t\\tprivate readonly decimal _lenA;\\r\\n\\t\\tprivate readonly decimal _lenB;\\r\\n\\t\\tprivate readonly decimal _lenC;\\r\\n\\t\\tprivate readonly TriangleKind _kind;\\r\\n\\r\\n\\t\\tpublic Triangle(decimal lenA, decimal lenB, decimal lenC)\\r\\n\\t\\t{\\r\\n\\t\\t\\t_lenA = lenA;\\r\\n\\t\\t\\t_lenB = lenB;\\r\\n\\t\\t\\t_lenC = lenC;\\r\\n\\t\\t\\t_kind = ComputeKind();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpublic TriangleKind Kind()\\r\\n\\t\\t{\\r\\n\\t\\t\\treturn _kind;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprivate TriangleKind ComputeKind()\\r\\n\\t\\t{\\r\\n\\t\\t\\t// Ensure that the given lengths represent a valid triangle. The triangle inequality states that \\r\\n\\t\\t\\t// the sum of the lengths of any two sides of a triangle always exceeds the length of the third side.\\r\\n\\t\\t\\tif (   (_lenA + _lenB \\u003c= _lenC)\\r\\n\\t\\t\\t    || (_lenA + _lenC \\u003c= _lenB)\\r\\n\\t\\t\\t    || (_lenB + _lenC \\u003c= _lenA)\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tthrow new TriangleException();\\r\\n\\t\\t\\t}\\t\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB \\u0026\\u0026 _lenA == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Equilateral;\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB || _lenA == _lenC || _lenB == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Isosceles;\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\treturn TriangleKind.Scalene;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tinternal enum TriangleKind\\r\\n\\t{\\r\\n\\t\\tEquilateral,\\r\\n\\t\\tIsosceles,\\r\\n\\t\\tScalene\\r\\n\\t}\\r\\n\\r\\n\\tinternal class TriangleException : Exception\\r\\n\\t{\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r"}
491	27	ce81bb6c391eb7a360ff2d67	hibernating	python	ocr-numbers	\N	\N	0	2	306	2016-07-17 09:36:15	2016-07-17 09:36:15	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\n## ALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nGRID_CODE = {\\n    \\"0\\" : 0b1101111, \\n    \\"1\\" : 0b0001001, \\n    \\"2\\" : 0b1011110, \\n    \\"3\\" : 0b1011011, \\n    \\"4\\" : 0b0111001, \\n    \\"5\\" : 0b1110011, \\n    \\"6\\" : 0b1110111, \\n    \\"7\\" : 0b1001001, \\n    \\"8\\" : 0b1111111, \\n    \\"9\\" : 0b1111011,\\n}\\n\\ndef _grid(string):\\n    g = [[] for i in range(4)]\\n    for s in string:\\n        code = GRID_CODE.get(s, 0)\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nCHAR_MAP = {}\\nfor k in GRID_CODE:\\n    CHAR_MAP[\\"\\".join(_grid(k))] = k\\n\\ndef grid(num):\\n    num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    return _grid(num)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(CHAR_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
492	27	fdc92b25c21abf4b396b2316	superseded	python	ocr-numbers	\N	\N	0	1	306	2016-07-29 20:13:59	2016-07-29 20:13:59	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\nALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nDIGIT_CODE = (0b1101111, 0b0001001, 0b1011110, 0b1011011, 0b0111001, \\n        0b1110011, 0b1110111, 0b1001001, 0b1111111, 0b1111011)\\n\\ndef grid(num):\\n    if not isinstance(num, basestring):\\n        num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    \\n    digits = map(int, list(num))\\n    g = [[] for i in range(4)]\\n    for d in digits:\\n        code = DIGIT_CODE[d]\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nDIGIT_MAP = {}\\nfor i in range(10):\\n    DIGIT_MAP[\\"\\".join(grid(i))] = str(i)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(DIGIT_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
493	27	0d55c7c4193c1d1c28cfd04a	pending	python	hello-world	\N	\N	0	1	307	2016-06-29 01:07:55	2016-06-29 01:07:55	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if name is None:\\n        return 'Hello, World!'\\n    else:\\n        return 'Hello, ' + name + '!'"}
494	27	8e9c616765d458e40e4f4c48	superseded	ruby	strain	\N	\N	0	1	308	2016-06-27 04:41:27	2016-06-27 04:41:27	{"array.rb":"class Array\\n  def keep\\n    #self.select { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    #self.reject { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element unless yield(element)\\n    end\\n  end\\nend"}
495	27	7fbdf8da0a4529bfd85d2735	done	ruby	strain	\N	\N	0	2	308	2016-07-01 15:51:28	2016-07-01 15:51:28	{"array.rb":"module Strainable\\n  def keep\\n    each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    keep { |item| !yield(item) }\\n  end\\nend\\n\\nclass Array\\n  include Strainable\\nend"}
496	27	b3303e074eb260808beda6df	pending	javascript	hello-world	\N	\N	0	1	309	2016-07-23 00:36:44	2016-07-23 00:36:44	{"/javascript/hello-world/hello_world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n// Make sure to look at test.script.js--that should give you some hints about what is\\n// expected here.\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n  if(input === ''){\\n    return \\"Hello, world!\\"\\n  } else {\\n    return \\"Hello, \\" + input + \\"!\\"\\n  }\\n};\\n\\nmodule.exports = HelloWorld;"}
497	27	0d1afa7f73494cbe92c5eea4	\N	ruby	binary	\N	\N	0	1	310	2016-07-10 19:29:23	2016-07-10 19:29:23	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.reverse.chars\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
498	27	cb1c0dd29bcb96cf17ce18f0	\N	ruby	binary	\N	\N	0	2	310	2016-07-18 03:24:59	2016-07-18 03:24:59	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.chars.reverse\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
499	45	bf61384d8ab79d776cbe9bff	pending	ruby	nth-prime	\N	\N	0	1	311	2016-03-18 07:46:02	2016-03-18 07:46:02	{"prime.rb":"require 'set'\\n\\nmodule Prime\\n\\n  def self.nth(n)\\n    PrimeSieve.new(upper_bound(n)).drop(n-1).first\\n  end\\n\\n  def self.upper_bound(n)\\n    return 20 if n \\u003c= 6\\n    n * (Math.log(n) + Math.log(Math.log(n)))\\n  end\\n\\n  class PrimeSieve\\n    include Enumerable\\n\\n    def initialize(max)\\n      @max = max\\n    end\\n\\n    def each\\n      yield 2\\n\\n      odd_composites = Set.new\\n      (3..@max).step(2) do |n|\\n        if !odd_composites.include?(n)\\n          yield n\\n          (n**2..@max).step(n) do |i|\\n            odd_composites \\u003c\\u003c i\\n          end\\n        end\\n      end\\n    end\\n  end\\nend"}
500	45	97bb6ec4ee517776e020b613	pending	python	space-age	\N	\N	0	1	312	2016-01-11 12:44:57	2016-01-11 12:44:57	{"\\\\python\\\\space-age\\\\space_age.py":"class SpaceAge(object):\\r\\n\\tdef __init__(self, age_in_seconds):\\r\\n\\t\\tself.seconds = age_in_seconds\\r\\n\\t\\tearth_year_in_seconds = 31557600\\r\\n\\t\\tself._orbital_periods = {\\r\\n\\t\\t\\t'Earth': 1.0 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Mercury': 0.2408467 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Venus': 0.61519726 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Mars': 1.8808158 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Jupiter': 11.862615 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Saturn': 29.447498 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Uranus': 84.016846 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Neptune': 164.79132 * earth_year_in_seconds\\r\\n\\t\\t}\\r\\n\\r\\n\\tdef on_earth(self):\\r\\n\\t\\treturn self._on('Earth')\\r\\n\\r\\n\\tdef on_mercury(self):\\r\\n\\t\\treturn self._on('Mercury')\\r\\n\\r\\n\\tdef on_venus(self):\\r\\n\\t\\treturn self._on('Venus')\\r\\n\\r\\n\\tdef on_mars(self):\\r\\n\\t\\treturn self._on('Mars')\\r\\n\\r\\n\\tdef on_jupiter(self):\\r\\n\\t\\treturn self._on('Jupiter')\\r\\n\\r\\n\\tdef on_saturn(self):\\r\\n\\t\\treturn self._on('Saturn')\\r\\n\\r\\n\\tdef on_uranus(self):\\r\\n\\t\\treturn self._on('Uranus')\\r\\n\\r\\n\\tdef on_neptune(self):\\r\\n\\t\\treturn self._on('Neptune')\\r\\n\\r\\n\\tdef _on(self, planet):\\r\\n\\t\\treturn round(self.seconds / self._orbital_periods[planet], 2)"}
501	45	75c8bbf2871c3573922b220d	\N	javascript	hamming	\N	\N	0	1	313	2016-03-03 02:31:53	2016-03-03 02:31:53	{"hamming.js":"var compute = function() {};\\n\\ncompute.prototype.hamming = function(array1, array2) {\\n\\n\\n\\nif(array1.length !== array2.length) {\\n\\tthrow new Error('DNA strands must be of equal length.');\\n}\\nvar counter = 0;\\n\\n\\tfor(var i = 0; i \\u003c array1.length; i++) {\\n\\t\\tif (array1[i] !== array2[i]) {\\n\\t\\t\\tcounter++;\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\n\\n\\t\\treturn counter;\\n\\n};\\n\\n\\n\\n\\nmodule.exports = compute;\\n\\n// var myHam = new hamming();\\n\\n// myHam.hamming(ar1, ar2);\\n\\n\\n\\n// if(array1.length !=== array2.length) {\\n// \\t\\t\\treturn new Error('DNA strands must be of equal length.')\\n//     \\t}"}
502	45	68725f91ee93d35ac9464f6e	hibernating	python	leap	\N	\N	0	1	314	2016-06-06 20:40:06	2016-06-06 20:40:06	{"year.py":"#!/usr/bin/python\\n\\ndef is_leap_year(year):\\n    if year % 400 == 0 or year % 4 == 0 and year % 100 != 0:\\n        return True\\n    else:\\n        return False"}
503	45	82844ce452d5c754f650a228	hibernating	scala	nucleotide-count	\N	\N	0	1	315	2016-06-13 03:45:54	2016-06-13 03:45:54	{"dna.scala":"class DNA(str: String) {\\n  val DnaNucleotides = Set('A', 'C', 'G', 'T')\\n  val RnaNucleotides = Set('A', 'C', 'G', 'U')\\n\\n  if (!str.toSet.diff(DnaNucleotides).isEmpty)\\n    throw new IllegalArgumentException\\n\\n  def count(marker: Char) = {\\n    if ((DnaNucleotides ++ RnaNucleotides).contains(marker))\\n      str.count(_ == marker)\\n    else\\n      throw new IllegalArgumentException\\n  }\\n\\n  def nucleotideCounts =\\n    DnaNucleotides.map(m =\\u003e (m, count(m))).toMap\\n}"}
504	45	d4a99e4454b34cbff9304ed7	done	perl5	etl	\N	\N	0	1	316	2016-06-27 18:32:26	2016-06-27 18:32:26	{"ETL.pm":"package ETL;\\n\\nuse warnings;\\nuse strict;\\n\\nsub transform{\\n\\tmy $new_hash = {};\\n\\tmy $hash_ref = shift;\\n\\t\\n\\twhile( my ($key, $val) = each %{$hash_ref} ){\\n\\t\\tforeach my $value ( @{$val} ){\\n\\t\\t\\t$new_hash-\\u003e{lc $value} = $key if !$new_hash-\\u003e{lc $value};\\n\\t\\t}\\n\\t}\\n\\treturn $new_hash;\\n};\\n#input  { 1 =\\u003e ['A', 'E'], 2 =\\u003e ['D', 'G'] }\\n#output { a =\\u003e 1, e =\\u003e 1, d =\\u003e 2, g =\\u003e 2 }\\n1;"}
505	45	d2d6bd50e28fac83fa88c945	superseded	csharp	leap	\N	\N	0	1	317	2016-01-05 16:45:45	2016-01-05 16:45:45	{"Leap.cs":"﻿using NUnit.Framework;\\r\\n\\r\\nnamespace Exercism.Leap\\r\\n{\\r\\n    [TestFixture]\\r\\n    public class LeapTest\\r\\n    {\\r\\n        [Test]\\r\\n        public void Valid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1996), Is.True);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Invalid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1997), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_20th_century_is_not_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1900), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_25th_century_is_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(2400), Is.True);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public class Year\\r\\n    {\\r\\n        public static bool IsLeap(int year)\\r\\n        {\\r\\n            return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    internal class Leap\\r\\n    {\\r\\n        private static void Main(string[] args)\\r\\n        {\\r\\n        }\\r\\n    }\\r\\n}"}
506	45	fcdb01a8d2d624a6f3b0d6f3	done	csharp	leap	\N	\N	0	2	317	2016-06-15 20:07:28	2016-06-15 20:07:28	{"Leap.cs":"public class Year\\r\\n{\\r\\n    public static bool IsLeap(int year)\\r\\n    {\\r\\n\\t\\t//Leap Year divisible by 4 but not a century year. Or simply divisible by 400.\\r\\n        return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n    }\\r\\n}\\r"}
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 506, true);


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY tags (id, name, created_at, updated_at) FROM stdin;
1	ruby	2016-01-08 03:36:01.279594	2016-01-08 03:36:01.279594
2	elixir	2015-11-30 17:45:51.28147	2015-11-30 17:45:51.28147
3	go	2016-01-16 13:00:16.282006	2016-01-16 13:00:16.282006
4	rust	2016-05-24 19:31:15.282461	2016-05-24 19:31:15.282461
5	haskell	2016-03-07 07:00:01.282933	2016-03-07 07:00:01.282933
6	python	2016-02-27 09:35:05.283764	2016-02-27 09:35:05.283764
7	javascript	2016-04-06 05:08:59.284547	2016-04-06 05:08:59.284547
\.


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('tags_id_seq', 7, true);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	2	1
2	3	1
3	4	1
4	2	2
5	2	3
6	2	4
7	3	4
8	4	5
9	3	6
10	3	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, confirmed, created_at, updated_at, inviter_id) FROM stdin;
1	1	22	t	2014-09-10 14:37:14	2014-09-10 14:37:14	\N
2	1	15	t	2005-11-28 10:33:23	2005-11-28 10:33:23	\N
3	1	18	t	1982-05-08 08:21:32	1982-05-08 08:21:32	\N
4	1	23	t	1979-11-11 01:58:46	1979-11-11 01:58:46	\N
5	1	11	t	1997-05-22 09:25:43	1997-05-22 09:25:43	\N
6	1	8	t	1978-12-07 01:08:57	1978-12-07 01:08:57	\N
7	1	7	t	1986-03-04 21:26:07	1986-03-04 21:26:07	\N
8	1	30	t	1997-10-09 09:08:48	1997-10-09 09:08:48	\N
9	1	31	t	2015-02-27 02:57:37	2015-02-27 02:57:37	\N
10	1	36	t	1994-06-18 11:51:01	1994-06-18 11:51:01	\N
11	1	16	f	1975-11-24 11:10:33	1975-11-24 11:10:33	\N
12	1	17	f	2011-03-07 14:10:33	2011-03-07 14:10:33	\N
13	1	29	f	2009-09-02 19:11:10	2009-09-02 19:11:10	\N
14	1	32	f	1976-06-01 12:29:18	1976-06-01 12:29:18	\N
15	1	38	f	1972-05-10 20:12:11	1972-05-10 20:12:11	\N
16	1	42	f	1981-06-24 17:11:19	1981-06-24 17:11:19	\N
17	1	43	f	1990-03-29 16:40:36	1990-03-29 16:40:36	\N
18	1	47	f	2003-01-14 17:01:36	2003-01-14 17:01:36	\N
19	2	3	t	1993-07-17 07:48:11	1993-07-17 07:48:11	\N
20	2	36	t	2012-12-05 21:45:16	2012-12-05 21:45:16	\N
21	2	31	t	1976-05-28 06:26:17	1976-05-28 06:26:17	\N
22	2	47	t	1997-05-01 17:32:14	1997-05-01 17:32:14	\N
23	2	19	f	2000-04-27 07:09:50	2000-04-27 07:09:50	\N
24	2	38	f	2014-04-27 13:36:43	2014-04-27 13:36:43	\N
25	3	38	f	1996-09-03 22:25:39	1996-09-03 22:25:39	\N
26	3	3	f	1980-08-20 15:13:38	1980-08-20 15:13:38	\N
27	4	3	t	1978-12-06 22:43:56	1978-12-06 22:43:56	\N
28	4	32	t	1977-07-19 09:14:15	1977-07-19 09:14:15	\N
29	4	22	t	1993-02-17 18:57:53	1993-02-17 18:57:53	\N
30	4	27	t	1978-06-15 04:44:20	1978-06-15 04:44:20	\N
31	4	20	t	1997-10-25 09:44:26	1997-10-25 09:44:26	\N
32	4	25	t	1987-01-25 15:45:51	1987-01-25 15:45:51	\N
33	4	19	t	1987-08-21 13:11:07	1987-08-21 13:11:07	\N
34	4	24	t	1977-10-21 00:55:32	1977-10-21 00:55:32	\N
35	4	26	t	1975-01-16 18:30:09	1975-01-16 18:30:09	\N
36	4	21	t	2006-01-17 08:30:11	2006-01-17 08:30:11	\N
37	4	38	f	1971-01-08 01:42:48	1971-01-08 01:42:48	\N
38	4	12	f	2006-01-25 04:34:27	2006-01-25 04:34:27	\N
39	4	14	f	1988-12-09 13:48:01	1988-12-09 13:48:01	\N
40	5	32	t	2011-08-30 18:23:10	2011-08-30 18:23:10	\N
41	5	40	t	1990-06-10 13:47:03	1990-06-10 13:47:03	\N
42	5	35	t	2007-07-31 13:15:15	2007-07-31 13:15:15	\N
43	5	37	t	2007-01-27 12:51:49	2007-01-27 12:51:49	\N
44	5	33	t	1990-09-22 00:12:51	1990-09-22 00:12:51	\N
45	5	36	t	2014-05-20 08:36:20	2014-05-20 08:36:20	\N
46	5	34	t	1997-03-12 15:11:20	1997-03-12 15:11:20	\N
47	5	39	t	1972-07-24 23:34:48	1972-07-24 23:34:48	\N
48	5	41	f	1991-09-20 06:49:13	1991-09-20 06:49:13	\N
49	5	38	f	1993-08-30 15:09:39	1993-08-30 15:09:39	\N
50	5	3	f	1984-05-08 04:16:43	1984-05-08 04:16:43	\N
51	6	6	t	1983-07-25 06:58:37	1983-07-25 06:58:37	\N
52	6	7	t	1995-07-22 10:52:14	1995-07-22 10:52:14	\N
53	6	8	t	2009-01-12 23:46:21	2009-01-12 23:46:21	\N
54	6	9	t	1974-12-11 07:56:05	1974-12-11 07:56:05	\N
55	6	11	t	1979-02-03 10:57:27	1979-02-03 10:57:27	\N
56	6	12	t	1988-12-27 10:07:33	1988-12-27 10:07:33	\N
57	6	13	t	1990-06-27 16:43:38	1990-06-27 16:43:38	\N
58	6	14	t	2005-05-27 00:20:44	2005-05-27 00:20:44	\N
59	6	15	t	2012-07-05 01:55:06	2012-07-05 01:55:06	\N
60	6	16	t	1995-08-27 03:44:32	1995-08-27 03:44:32	\N
61	6	17	t	2014-12-27 03:20:59	2014-12-27 03:20:59	\N
62	6	18	t	1974-06-11 17:17:23	1974-06-11 17:17:23	\N
63	6	23	t	2004-11-17 01:59:44	2004-11-17 01:59:44	\N
64	6	28	t	1973-10-27 23:26:27	1973-10-27 23:26:27	\N
65	6	29	t	2003-06-14 19:13:17	2003-06-14 19:13:17	\N
66	6	30	t	1991-01-06 03:17:40	1991-01-06 03:17:40	\N
67	6	31	t	1976-05-23 14:16:08	1976-05-23 14:16:08	\N
68	6	32	t	2015-02-27 02:02:42	2015-02-27 02:02:42	\N
69	6	38	t	1974-10-08 12:07:25	1974-10-08 12:07:25	\N
70	6	42	t	1993-11-04 16:03:42	1993-11-04 16:03:42	\N
71	6	43	t	1997-05-04 02:50:53	1997-05-04 02:50:53	\N
72	6	44	t	1992-09-16 07:01:46	1992-09-16 07:01:46	\N
73	6	45	t	2001-08-14 12:27:06	2001-08-14 12:27:06	\N
74	6	46	t	1999-11-11 11:54:54	1999-11-11 11:54:54	\N
75	6	47	t	1978-11-26 02:49:01	1978-11-26 02:49:01	\N
76	6	48	t	1983-05-11 23:06:19	1983-05-11 23:06:19	\N
77	6	49	t	2006-02-07 05:32:01	2006-02-07 05:32:01	\N
78	7	3	t	1991-06-09 06:15:52	1991-06-09 06:15:52	\N
79	7	39	t	2000-06-19 03:30:48	2000-06-19 03:30:48	\N
80	7	32	t	1990-05-15 20:14:42	1990-05-15 20:14:42	\N
81	7	38	f	1977-04-02 02:13:08	1977-04-02 02:13:08	\N
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, name, created_at, updated_at, description, public, tags) FROM stdin;
1	baconesia	baconesia	2016-01-25 14:56:08.285231	2016-01-25 14:56:08.285231	\N	t	{1,2}
2	chocolades	chocolades	2016-07-08 22:19:49.321193	2016-07-08 22:19:49.321193	\N	t	{2,3}
3	ghost	ghost	2016-08-08 15:37:23.329751	2016-08-08 15:37:23.329751	\N	t	{3,4}
4	motley	motley	2016-05-20 20:47:02.333889	2016-05-20 20:47:02.333889	\N	t	{4,5}
5	rugrats	rugrats	2016-04-07 00:47:58.355208	2016-04-07 00:47:58.355208	\N	t	{5,6}
6	slate	slate	2016-07-01 12:57:28.384379	2016-07-01 12:57:28.384379	\N	t	{6,7}
7	polkadots	polkadots	2016-07-16 03:04:04.427453	2016-07-16 03:04:04.427453	\N	t	\N
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, key, created_at, updated_at, archived, last_iteration_at, last_activity_at, last_activity, fetched_at, skipped_at, help_requested) FROM stdin;
1	9	python	gigasecond	1	pending	7e69510519df5dba9ae2efad	2016-06-30 01:32:26	2016-06-30 01:32:26	f	2016-08-10 23:44:58	2016-08-10 23:44:58	Submitted an iteration	\N	\N	f
2	9	scala	allergies	3	\N	ab0903c7924a0341f17f4670	2016-05-23 06:51:29	2016-05-23 06:51:29	t	2016-07-05 23:08:08	2016-07-05 23:08:08	@abo64 commented	2015-09-24 16:17:02.279182	\N	f
3	9	python	word-count	1	pending	8ef670a2b339cf9f3aa5bc11	2016-06-14 11:27:17	2016-06-14 11:27:17	t	2016-08-08 22:58:55	2016-08-08 22:58:55	Submitted an iteration	\N	\N	f
4	9	javascript	anagram	1	\N	92c9877e927b5f1f49d3106f	2016-05-21 14:09:36	2016-05-21 14:09:36	f	2016-06-14 12:19:38	2016-06-14 12:19:38	Submitted an iteration	2016-02-07 09:15:19.556284	\N	f
5	9	csharp	bob	2	\N	38307b068e28fcdcbd3e503e	2016-07-04 05:17:53	2016-07-04 05:17:53	f	2016-07-17 20:07:51	2016-07-17 20:07:51	Submitted an iteration	2016-01-18 19:14:24.682736	\N	f
6	11	ruby	word-count	3	needs_input	f0514b37e8707030dc4165c6	2016-07-02 09:38:07	2016-07-02 09:38:07	f	2016-08-09 01:35:11	2016-08-09 01:35:11	Submitted an iteration	\N	\N	f
7	11	ruby	gigasecond	1	pending	3271b4416c41407bdde3bd56	2016-07-21 10:07:12	2016-07-21 10:07:12	t	2016-08-01 15:32:36	2016-08-01 15:32:36	Submitted an iteration	\N	\N	f
8	11	python	minesweeper	1	pending	4629711eb6da87bd43262ee4	2016-07-17 02:06:08	2016-07-17 02:06:08	f	2016-07-24 09:52:52	2016-07-24 09:52:52	Submitted an iteration	\N	\N	f
9	11	scala	leap	1	pending	6b2a4ee0e179d0a08b6cd9cf	2016-07-23 11:40:01	2016-07-23 11:40:01	f	2016-07-26 11:44:10	2016-07-26 11:44:10	Submitted an iteration	\N	\N	f
10	11	clojure	rna-transcription	2	pending	1239a6da4bbe80e9d0221352	2016-07-08 21:29:47	2016-07-08 21:29:47	t	2016-07-22 01:21:27	2016-07-22 01:21:27	Submitted an iteration	\N	\N	f
11	11	haskell	rna-transcription	1	\N	643fdadf9df1eeb1c07052e9	2016-06-30 11:07:24	2016-06-30 11:07:24	t	2016-07-04 09:13:16	2016-07-04 09:13:16	Submitted an iteration	2015-10-08 20:04:40.118352	\N	f
12	11	python	allergies	2	pending	8a157c5d182a242db800ba92	2016-07-05 22:20:51	2016-07-05 22:20:51	t	2016-08-03 16:37:54	2016-08-03 16:37:54	Submitted an iteration	\N	\N	f
13	12	ruby	robot-name	1	\N	36e833714f6c0ca51c0333d7	2016-07-07 18:10:18	2016-07-07 18:10:18	f	2016-07-11 15:37:06	2016-07-11 15:37:06	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N	f
14	12	ruby	series	1	pending	6f54c74da323fb084f4754ca	2016-08-04 22:25:38	2016-08-04 22:25:38	f	2016-08-05 01:52:40	2016-08-05 01:52:40	Submitted an iteration	\N	\N	f
15	12	python	kindergarten-garden	1	pending	d9907d92573aee3a8fd5d384	2016-07-30 16:37:35	2016-07-30 16:37:35	f	2016-08-05 02:51:56	2016-08-05 02:51:56	Submitted an iteration	\N	\N	f
16	15	lua	rna-transcription	3	\N	9fed12f5b6f091dd58de2a7a	2016-07-23 19:20:46	2016-07-23 19:20:46	f	2016-08-05 21:51:25	2016-08-05 21:51:25	@ryanplusplus commented	2016-02-06 01:40:30.062718	\N	f
17	15	javascript	kindergarten-garden	2	pending	db7791a65112a4baf2543504	2016-08-03 21:10:10	2016-08-03 21:10:10	f	2016-08-10 19:39:16	2016-08-10 19:39:16	Submitted an iteration	\N	\N	f
18	15	javascript	gigasecond	1	pending	ec0998eea231c1866b024f61	2016-07-19 11:43:22	2016-07-19 11:43:22	f	2016-08-07 05:08:27	2016-08-07 05:08:27	Submitted an iteration	\N	\N	f
19	15	ruby	difference-of-squares	2	\N	ebad7c5691b92ed4b18c707a	2016-07-25 18:35:34	2016-07-25 18:35:34	f	2016-07-30 14:58:17	2016-07-30 14:58:17	Submitted an iteration	2016-01-08 15:25:41.077759	\N	f
20	15	python	word-count	1	pending	adf3244439a480f50a834d60	2016-07-24 23:59:39	2016-07-24 23:59:39	t	2016-07-27 02:29:11	2016-07-27 02:29:11	Submitted an iteration	\N	\N	f
21	15	python	series	2	hibernating	44f2517d7a716e260178ee57	2016-08-03 13:37:20	2016-08-03 13:37:20	t	2016-08-05 20:44:18	2016-08-05 20:44:18	Submitted an iteration	\N	\N	f
22	22	javascript	anagram	1	\N	a472a3d06895d10ce4bff703	2016-04-19 19:38:57	2016-04-19 19:38:57	f	2016-06-20 03:16:53	2016-06-20 03:16:53	Submitted an iteration	2016-02-07 09:15:19.556284	\N	f
23	22	coffeescript	word-count	1	pending	b9c8a16c543a7ea1add81b2a	2016-02-27 03:35:51	2016-02-27 03:35:51	f	2016-05-01 19:41:37	2016-05-01 19:41:37	Submitted an iteration	\N	\N	f
24	22	elixir	sublist	1	\N	500a66bbd67e3256bf213951	2016-06-06 06:23:52	2016-06-06 06:23:52	f	2016-07-06 21:16:10	2016-07-06 21:16:10	Submitted an iteration	\N	\N	f
25	22	python	difference-of-squares	1	\N	b95840f28c8c1cf1c4acc701	2016-05-01 05:51:53	2016-05-01 05:51:53	f	2016-07-14 20:16:10	2016-07-14 20:16:10	Submitted an iteration	\N	\N	f
26	22	objective-c	word-count	1	\N	efd546264b46370a5e59937f	2016-05-04 04:50:57	2016-05-04 04:50:57	t	2016-05-29 11:57:31	2016-05-29 11:57:31	Submitted an iteration	2015-12-20 12:31:56.013191	\N	f
37	22	cpp	hamming	2	hibernating	1cb10067d6ee1a45d4be2cac	2016-03-18 05:10:20	2016-03-18 05:10:20	t	2016-07-17 22:09:28	2016-07-17 22:09:28	@LegalizeAdulthood commented	\N	\N	f
27	22	ruby	beer-song	5	done	4b93e68089fdf6f8f1acb32f	2016-02-27 15:04:15	2016-02-27 15:04:15	t	2016-07-11 06:41:32	2016-07-11 06:41:32	Submitted an iteration	\N	\N	f
28	22	javascript	raindrops	1	\N	91c9e948809be7546e90d2ee	2016-05-09 19:45:29	2016-05-09 19:45:29	f	2016-07-13 05:40:34	2016-07-13 05:40:34	Submitted an iteration	\N	\N	f
29	22	ruby	gigasecond	1	pending	e441f4d45677650771207981	2016-04-20 04:11:45	2016-04-20 04:11:45	f	2016-05-30 21:18:11	2016-05-30 21:18:11	Submitted an iteration	\N	\N	f
30	22	python	pangram	1	\N	18f829d4b51bdd3b236fd929	2016-04-13 11:26:31	2016-04-13 11:26:31	f	2016-04-20 17:56:42	2016-04-20 17:56:42	Submitted an iteration	2016-02-23 17:52:48.717925	\N	f
31	22	python	hamming	1	\N	6c7035493178d8c4c5a8b981	2016-03-07 15:01:19	2016-03-07 15:01:19	f	2016-03-21 00:44:39	2016-03-21 00:44:39	Submitted an iteration	2016-02-24 15:41:26.173657	\N	f
32	22	ruby	secret-handshake	4	done	30b7256d7627487382f19d1c	2016-04-27 05:52:15	2016-04-27 05:52:15	t	2016-07-18 20:13:54	2016-07-18 20:13:54	Submitted an iteration	\N	\N	f
33	22	scala	bob	1	\N	3b57267fe3d4ca2e4f677dd7	2016-04-24 03:58:00	2016-04-24 03:58:00	f	2016-08-05 07:05:56	2016-08-05 07:05:56	@abo64 commented	2015-11-10 19:40:13.714934	\N	f
34	22	elixir	hello-world	1	\N	9f8ad2dddbd26b979e943cd2	2016-05-17 16:07:13	2016-05-17 16:07:13	f	2016-05-23 19:38:58	2016-05-23 19:38:58	@rikki- commented	\N	\N	f
35	22	ruby	matrix	1	pending	23ae54f6feffbccf4b398d7a	2016-03-26 08:18:23	2016-03-26 08:18:23	f	2016-06-16 15:24:51	2016-06-16 15:24:51	Submitted an iteration	\N	\N	f
36	22	python	hello-world	1	\N	908705ce2e23effc35719558	2016-04-02 05:28:38	2016-04-02 05:28:38	f	2016-04-28 19:51:51	2016-04-28 19:51:51	Submitted an iteration	\N	\N	f
38	22	ruby	strain	1	done	9340f7c6b351ecc9aa9656bc	2016-04-25 08:50:31	2016-04-25 08:50:31	t	2016-05-10 12:34:49	2016-05-10 12:34:49	Submitted an iteration	\N	\N	f
39	22	perl5	etl	1	pending	a172bd9cef53fdb7dce73f84	2016-02-27 10:41:31	2016-02-27 10:41:31	f	2016-04-22 22:14:38	2016-04-22 22:14:38	Submitted an iteration	\N	\N	f
40	22	ruby	simple-cipher	1	\N	9bab2b961b54e078eecffd39	2016-03-02 07:48:28	2016-03-02 07:48:28	t	2016-04-28 14:00:17	2016-04-28 14:00:17	@SevenPoints commented	2016-02-19 11:19:10.104714	\N	f
41	22	clojure	word-count	1	pending	fe4f597c5ac2fe65b7de4c4b	2016-03-05 09:02:58	2016-03-05 09:02:58	f	2016-06-13 21:22:48	2016-06-13 21:22:48	Submitted an iteration	\N	\N	f
42	22	javascript	space-age	1	\N	5349c6f5054393ce67366f96	2016-06-25 10:56:28	2016-06-25 10:56:28	f	2016-08-06 16:46:35	2016-08-06 16:46:35	Submitted an iteration	2015-12-23 13:19:53.058891	\N	f
43	22	ruby	binary	2	\N	b651fa2d70bd950de5edb387	2016-02-27 13:50:54	2016-02-27 13:50:54	f	2016-03-30 18:00:10	2016-03-30 18:00:10	@neurogenesis commented	2016-02-03 00:48:54.35616	\N	f
44	22	ruby	hello-world	1	pending	6b08156a5bae25a5586c4032	2016-03-10 04:53:52	2016-03-10 04:53:52	f	2016-03-31 00:05:50	2016-03-31 00:05:50	Submitted an iteration	\N	\N	f
45	22	csharp	triangle	1	pending	4b6f04e67d5822c064bdadf6	2016-06-08 06:18:43	2016-06-08 06:18:43	f	2016-06-23 22:44:24	2016-06-23 22:44:24	Submitted an iteration	\N	\N	f
46	22	csharp	roman-numerals	1	done	ca2ac093034418910ba934da	2016-03-08 12:58:45	2016-03-08 12:58:45	t	2016-05-20 08:08:33	2016-05-20 08:08:33	Submitted an iteration	\N	\N	f
47	22	ruby	leap	1	done	8524e1c615b3ed311bd8cd83	2016-04-26 21:16:57	2016-04-26 21:16:57	t	2016-05-11 01:45:38	2016-05-11 01:45:38	Submitted an iteration	\N	\N	f
48	28	go	gigasecond	2	pending	f33cc605e6af6ef0ad237c99	2016-06-26 13:13:46	2016-06-26 13:13:46	f	2016-08-09 13:49:18	2016-08-09 13:49:18	Submitted an iteration	\N	\N	f
49	28	ruby	binary	1	\N	e01f9aebe147e45abb6ef3a1	2016-06-25 12:59:47	2016-06-25 12:59:47	f	2016-07-28 23:23:24	2016-07-28 23:23:24	@Calvyn82 commented	\N	\N	f
50	29	perl5	bob	1	\N	b358a7a51c28d80676085d43	2016-07-20 00:34:22	2016-07-20 00:34:22	f	2016-08-02 02:58:38	2016-08-02 02:58:38	@lancew commented	\N	\N	f
51	31	python	hamming	2	done	722effd106e827a1f6fd7087	2015-12-31 00:17:10	2015-12-31 00:17:10	f	2016-05-09 08:44:14	2016-05-09 08:44:14	Submitted an iteration	\N	\N	f
52	31	javascript	hello-world	1	pending	83339afc48fde7df5345d8d2	2016-01-14 04:41:09	2016-01-14 04:41:09	f	2016-04-06 16:28:39	2016-04-06 16:28:39	Submitted an iteration	\N	\N	f
53	33	ruby	word-count	1	done	6f5485fc7fe332fd1288d971	2016-04-29 06:56:04	2016-04-29 06:56:04	t	2016-05-27 11:21:33	2016-05-27 11:21:33	Submitted an iteration	\N	\N	f
54	33	java	etl	1	hibernating	b91b309336372afdec6c9b74	2016-05-01 14:07:56	2016-05-01 14:07:56	f	2016-06-19 04:48:10	2016-06-19 04:48:10	Submitted an iteration	\N	\N	f
55	33	javascript	hamming	2	done	cd8ad61233ed20e00fc62a8e	2016-05-10 08:52:26	2016-05-10 08:52:26	t	2016-07-17 09:27:44	2016-07-17 09:27:44	Submitted an iteration	\N	\N	f
56	33	elixir	hello-world	1	\N	340c439a8909be018bb97c5d	2016-05-03 12:38:16	2016-05-03 12:38:16	f	2016-07-10 00:31:44	2016-07-10 00:31:44	@rikki- commented	\N	\N	f
57	38	clojure	word-count	2	done	8453534bae8c32bb21a58fcf	2016-05-23 22:21:01	2016-05-23 22:21:01	t	2016-06-15 14:48:20	2016-06-15 14:48:20	Submitted an iteration	\N	\N	f
58	38	clojure	beer-song	5	pending	56b1596aa7754e01cfe797b2	2016-03-13 04:56:28	2016-03-13 04:56:28	f	2016-08-09 13:10:10	2016-08-09 13:10:10	Submitted an iteration	\N	\N	f
59	38	haskell	crypto-square	1	done	9969fa0133811ddd90120336	2016-06-26 07:42:09	2016-06-26 07:42:09	t	2016-07-22 04:19:14	2016-07-22 04:19:14	Submitted an iteration	\N	\N	f
60	38	javascript	hello-world	1	pending	18439ce37952a656870a6014	2016-05-24 16:03:08	2016-05-24 16:03:08	t	2016-06-17 22:15:37	2016-06-17 22:15:37	Submitted an iteration	\N	\N	f
61	38	cpp	word-count	4	needs_input	b89b2911c0581475650edc8b	2016-03-28 03:15:43	2016-03-28 03:15:43	f	2016-07-15 00:42:33	2016-07-15 00:42:33	Submitted an iteration	\N	\N	f
62	38	objective-c	word-count	1	\N	69fdb45aec85f31031719ca8	2016-03-18 11:26:06	2016-03-18 11:26:06	t	2016-03-31 10:59:16	2016-03-31 10:59:16	Submitted an iteration	2015-12-20 12:31:56.013191	\N	f
63	38	ruby	raindrops	1	pending	6a644fea59869b02cfb8d968	2016-02-27 09:42:27	2016-02-27 09:42:27	f	2016-04-30 15:17:49	2016-04-30 15:17:49	Submitted an iteration	\N	\N	f
64	40	haskell	gigasecond	2	pending	df1e2d78c2821b78f9a2d3fd	2016-06-18 06:31:29	2016-06-18 06:31:29	f	2016-07-10 19:01:42	2016-07-10 19:01:42	Submitted an iteration	\N	\N	f
65	40	ruby	binary	1	\N	95bb3a453ea8533546842480	2016-03-26 17:13:15	2016-03-26 17:13:15	f	2016-04-07 16:07:30	2016-04-07 16:07:30	@Calvyn82 commented	\N	\N	f
66	40	haskell	scrabble-score	2	hibernating	116af4307111cd4b49565f8d	2016-05-24 23:40:07	2016-05-24 23:40:07	f	2016-06-17 14:34:59	2016-06-17 14:34:59	Submitted an iteration	\N	\N	f
67	40	elixir	sublist	1	\N	d507832a22e5c8d3ac81abf2	2016-03-26 17:07:15	2016-03-26 17:07:15	t	2016-06-30 01:24:12	2016-06-30 01:24:12	Submitted an iteration	\N	\N	f
68	40	ruby	raindrops	1	hibernating	49bf4731875d3d159f4fe532	2016-03-25 06:57:16	2016-03-25 06:57:16	f	2016-07-18 10:05:52	2016-07-18 10:05:52	Submitted an iteration	\N	\N	f
69	40	javascript	kindergarten-garden	2	pending	c7dced926fb451879e044ed2	2016-05-20 04:38:05	2016-05-20 04:38:05	f	2016-08-09 05:55:13	2016-08-09 05:55:13	Submitted an iteration	\N	\N	f
70	40	ruby	word-count	4	done	163dd1a68a952324e31bfd57	2016-05-05 11:36:40	2016-05-05 11:36:40	t	2016-07-29 00:01:13	2016-07-29 00:01:13	Submitted an iteration	\N	\N	f
71	40	python	space-age	1	pending	5543c7538db5b03873030503	2016-05-18 12:12:56	2016-05-18 12:12:56	f	2016-07-17 10:46:06	2016-07-17 10:46:06	Submitted an iteration	\N	\N	f
72	40	clojure	beer-song	5	pending	3d42f5e2c83f352a83abc655	2016-02-22 14:00:09	2016-02-22 14:00:09	f	2016-07-23 10:29:43	2016-07-23 10:29:43	Submitted an iteration	\N	\N	f
73	40	python	word-count	1	pending	489704aca2c8401d31c535ec	2016-05-29 04:38:16	2016-05-29 04:38:16	f	2016-07-20 09:54:58	2016-07-20 09:54:58	Submitted an iteration	\N	\N	f
74	40	javascript	hamming	1	\N	ef099ed10545606a4358884f	2016-03-25 00:55:03	2016-03-25 00:55:03	f	2016-03-27 16:08:38	2016-03-27 16:08:38	Submitted an iteration	2016-03-07 03:50:40.747336	\N	f
75	40	ruby	hamming	1	pending	0954099af359136ea7849083	2016-04-25 07:52:29	2016-04-25 07:52:29	f	2016-08-07 17:57:54	2016-08-07 17:57:54	Submitted an iteration	\N	\N	f
76	40	cpp	word-count	1	done	96f90b3a4402023ef3a0eecf	2016-02-23 17:17:01	2016-02-23 17:17:01	t	2016-05-10 21:03:07	2016-05-10 21:03:07	Submitted an iteration	\N	\N	f
77	40	elixir	word-count	2	pending	bd415a3093e3342ba566764f	2016-04-08 12:09:11	2016-04-08 12:09:11	f	2016-05-29 20:47:35	2016-05-29 20:47:35	Submitted an iteration	\N	\N	f
78	40	javascript	raindrops	1	\N	580ae6a4cc0200f6e89d1b7e	2016-03-23 08:08:05	2016-03-23 08:08:05	f	2016-06-11 23:28:39	2016-06-11 23:28:39	Submitted an iteration	\N	\N	f
79	40	ruby	kindergarten-garden	1	pending	fd557c9aa78f891db21e5b3c	2016-03-31 19:02:51	2016-03-31 19:02:51	f	2016-07-27 09:45:10	2016-07-27 09:45:10	Submitted an iteration	\N	\N	f
80	40	python	bob	3	done	3ea093fdc1f6c2606bae5aaf	2016-03-07 17:44:44	2016-03-07 17:44:44	t	2016-08-06 03:23:12	2016-08-06 03:23:12	Submitted an iteration	\N	\N	f
81	40	haskell	nucleotide-count	5	hibernating	83c6f37c5e163bda9b46e456	2016-05-17 21:34:19	2016-05-17 21:34:19	t	2016-07-14 20:25:21	2016-07-14 20:25:21	Submitted an iteration	\N	\N	f
82	40	python	simple-cipher	1	pending	a1d6cc5945aa2f410feadee1	2016-04-16 09:03:30	2016-04-16 09:03:30	t	2016-07-08 09:01:41	2016-07-08 09:01:41	Submitted an iteration	\N	\N	f
83	40	python	kindergarten-garden	1	pending	4fa5b4201a33d5d8ddc41f9f	2016-05-12 17:58:52	2016-05-12 17:58:52	f	2016-06-02 02:19:22	2016-06-02 02:19:22	Submitted an iteration	\N	\N	f
84	40	objective-c	word-count	1	\N	7361d02dde93b053a5387253	2016-03-07 22:11:14	2016-03-07 22:11:14	t	2016-08-03 23:17:04	2016-08-03 23:17:04	Submitted an iteration	2015-12-20 12:31:56.013191	\N	f
85	40	ruby	space-age	3	\N	c9c4e0e5b592c8a4dbd41df6	2016-04-28 23:02:22	2016-04-28 23:02:22	f	2016-08-03 00:50:46	2016-08-03 00:50:46	@mediafinger commented	2016-01-31 06:45:52.854257	\N	f
86	40	python	hello-world	2	\N	b3a8c2fc18c3d1bb88869b9f	2016-03-08 01:14:59	2016-03-08 01:14:59	f	2016-07-10 20:59:20	2016-07-10 20:59:20	Submitted an iteration	\N	\N	f
87	44	python	leap	2	hibernating	86f2955e986f960466417407	2016-03-01 23:13:09	2016-03-01 23:13:09	f	2016-05-31 05:45:30	2016-05-31 05:45:30	Submitted an iteration	\N	\N	f
88	46	ruby	leap	1	done	779ce10012d8cb07bfe1324b	2016-06-22 02:05:29	2016-06-22 02:05:29	t	2016-08-02 04:40:47	2016-08-02 04:40:47	Submitted an iteration	\N	\N	f
89	46	cpp	phone-number	2	hibernating	2f8bcb4d8db614264a0efdb8	2016-04-08 05:16:59	2016-04-08 05:16:59	f	2016-06-29 10:41:35	2016-06-29 10:41:35	Submitted an iteration	\N	\N	f
90	46	ruby	accumulate	2	hibernating	369a1dd318fc68953e3a79c8	2016-04-27 02:46:05	2016-04-27 02:46:05	f	2016-05-16 22:49:21	2016-05-16 22:49:21	Submitted an iteration	\N	\N	f
91	46	python	run-length-encoding	2	\N	4ff6d03ccccab2018c3d74dc	2016-03-31 13:50:04	2016-03-31 13:50:04	f	2016-05-08 14:46:05	2016-05-08 14:46:05	@joce commented	2016-02-29 19:14:55.785215	\N	f
92	46	ruby	word-count	3	needs_input	bece91b8dcf638c170728044	2016-06-13 05:24:51	2016-06-13 05:24:51	f	2016-08-06 04:43:51	2016-08-06 04:43:51	Submitted an iteration	\N	\N	f
93	46	ruby	bob	3	done	a6dc8c7a2daeb3b47cd0a6b7	2016-04-01 17:50:36	2016-04-01 17:50:36	f	2016-06-23 23:41:49	2016-06-23 23:41:49	@alphaone commented	\N	\N	f
94	46	python	word-count	3	done	257cbde3080a4f4b85d19933	2016-05-03 23:34:25	2016-05-03 23:34:25	t	2016-06-09 03:04:28	2016-06-09 03:04:28	Submitted an iteration	\N	\N	f
95	46	clojure	space-age	1	\N	28ab4a464687bca62add3ac5	2016-06-24 12:31:24	2016-06-24 12:31:24	t	2016-08-08 09:38:49	2016-08-08 09:38:49	Submitted an iteration	2015-10-31 05:36:03.530808	\N	f
96	46	ruby	nth-prime	1	pending	f25ea4ee17be5947aa1f297b	2016-04-02 01:54:19	2016-04-02 01:54:19	t	2016-04-17 10:36:28	2016-04-17 10:36:28	Submitted an iteration	\N	\N	f
97	46	javascript	hello-world	1	done	385da1f9ead0571dd0aab648	2016-04-21 19:46:44	2016-04-21 19:46:44	t	2016-08-06 20:00:13	2016-08-06 20:00:13	Submitted an iteration	\N	\N	f
98	48	elixir	sublist	1	\N	ed790a1b81a6b74d40398a4e	2016-03-16 15:04:56	2016-03-16 15:04:56	f	2016-03-27 01:21:58	2016-03-27 01:21:58	Submitted an iteration	\N	\N	f
99	48	java	nucleotide-count	1	pending	559a78a63fead843bf0a22c7	2016-02-02 22:55:10	2016-02-02 22:55:10	f	2016-05-21 04:41:17	2016-05-21 04:41:17	Submitted an iteration	\N	\N	f
100	48	ruby	word-count	4	done	90b0a74a45de46030368d404	2016-02-09 02:31:36	2016-02-09 02:31:36	t	2016-06-17 04:23:20	2016-06-17 04:23:20	Submitted an iteration	\N	\N	f
101	48	swift	leap	1	pending	1279ac9a478261bea7ae3598	2016-02-03 08:26:20	2016-02-03 08:26:20	f	2016-08-01 13:31:35	2016-08-01 13:31:35	Submitted an iteration	\N	\N	f
102	48	ruby	meetup	1	\N	7dda288bcde1fe7188d43b27	2016-06-19 06:58:27	2016-06-19 06:58:27	f	2016-08-07 13:17:30	2016-08-07 13:17:30	Submitted an iteration	2016-02-26 12:34:05.585255	\N	f
103	48	ruby	binary	2	\N	556a5ffd2a169b76b26c4281	2016-02-09 01:32:20	2016-02-09 01:32:20	f	2016-06-10 13:38:56	2016-06-10 13:38:56	@neurogenesis commented	2016-02-03 00:48:54.35616	\N	f
104	48	python	word-count	1	done	3721f1cdff66217d28aa50d4	2016-04-08 10:54:41	2016-04-08 10:54:41	t	2016-05-14 15:19:37	2016-05-14 15:19:37	Submitted an iteration	\N	\N	f
105	49	javascript	pythagorean-triplet	1	done	f48a12e447b9c2b112e979fb	2016-06-17 00:27:02	2016-06-17 00:27:02	t	2016-07-20 10:42:27	2016-07-20 10:42:27	Submitted an iteration	\N	\N	f
106	49	ecmascript	hello-world	1	\N	04bd1576f813b75cb3ed1951	2016-05-06 19:07:04	2016-05-06 19:07:04	f	2016-07-11 19:50:48	2016-07-11 19:50:48	@rikki- commented	\N	\N	f
107	49	haskell	clock	1	\N	e70073c7d95bb207e06a416b	2016-05-08 04:27:14	2016-05-08 04:27:14	f	2016-06-30 21:55:15	2016-06-30 21:55:15	Submitted an iteration	\N	\N	f
108	49	javascript	word-count	3	done	0fcdcc15a898ef859237ed06	2016-03-24 00:20:55	2016-03-24 00:20:55	t	2016-07-01 12:48:23	2016-07-01 12:48:23	Submitted an iteration	\N	\N	f
109	49	python	crypto-square	1	done	90f85395ce101830b53ccddc	2016-05-22 01:19:17	2016-05-22 01:19:17	t	2016-06-09 07:50:39	2016-06-09 07:50:39	Submitted an iteration	\N	\N	f
110	49	python	rna-transcription	1	hibernating	057ea0e2b36a65fc0709e9a7	2016-06-03 21:17:14	2016-06-03 21:17:14	f	2016-06-27 02:36:03	2016-06-27 02:36:03	Submitted an iteration	\N	\N	f
111	26	clojure	bob	1	hibernating	8819d3acc9ad25db1bcb0864	2016-02-13 09:28:29	2016-02-13 09:28:29	f	2016-06-04 13:00:05	2016-06-04 13:00:05	Submitted an iteration	\N	\N	f
112	26	ruby	beer-song	5	done	f2ad782a0bfe3ece3e8a06c7	2016-02-17 05:02:14	2016-02-17 05:02:14	t	2016-06-13 16:37:48	2016-06-13 16:37:48	Submitted an iteration	\N	\N	f
113	26	haskell	word-count	2	hibernating	9fbfa63ed72b2b5189dcc4a8	2016-03-04 01:55:54	2016-03-04 01:55:54	f	2016-05-28 21:34:31	2016-05-28 21:34:31	Submitted an iteration	\N	\N	f
114	26	clojure	word-count	2	done	d6dbe0923200362c27f09014	2016-02-25 18:56:35	2016-02-25 18:56:35	t	2016-05-15 10:12:19	2016-05-15 10:12:19	Submitted an iteration	\N	\N	f
115	26	python	pangram	1	\N	c29539c4da39df25f4cd68ba	2016-03-21 21:03:22	2016-03-21 21:03:22	f	2016-06-08 13:38:35	2016-06-08 13:38:35	Submitted an iteration	2016-02-23 17:52:48.717925	\N	f
116	26	haskell	space-age	1	\N	9f74b9d82328cdb3801c4418	2016-01-24 01:05:07	2016-01-24 01:05:07	f	2016-07-15 06:48:34	2016-07-15 06:48:34	Submitted an iteration	\N	\N	f
117	26	javascript	grade-school	1	pending	e410381af3447cd8596eccee	2016-07-04 01:17:13	2016-07-04 01:17:13	f	2016-08-05 09:58:35	2016-08-05 09:58:35	Submitted an iteration	\N	\N	f
118	26	scala	bob	1	done	83cee7ca92f2d372f4256706	2016-02-22 08:51:06	2016-02-22 08:51:06	t	2016-07-25 12:39:50	2016-07-25 12:39:50	Submitted an iteration	\N	\N	f
119	26	python	twelve-days	2	pending	a1ef2c1f49aa47e6acf4fc66	2016-01-23 17:41:57	2016-01-23 17:41:57	f	2016-05-27 23:26:59	2016-05-27 23:26:59	Submitted an iteration	\N	\N	f
120	26	python	rna-transcription	1	done	b92c0d9dda458da12eaa9fdb	2016-04-01 10:55:45	2016-04-01 10:55:45	t	2016-04-03 11:28:01	2016-04-03 11:28:01	Submitted an iteration	\N	\N	f
121	26	ruby	leap	1	hibernating	20c02bc6b163e0b41ab82805	2016-01-16 22:52:37	2016-01-16 22:52:37	f	2016-07-08 11:13:56	2016-07-08 11:13:56	Submitted an iteration	\N	\N	f
122	26	ruby	hello-world	1	pending	9eaf4514600b9244be0c2052	2016-04-25 10:27:37	2016-04-25 10:27:37	f	2016-07-19 14:03:15	2016-07-19 14:03:15	Submitted an iteration	\N	\N	f
123	26	javascript	hamming	1	hibernating	94d701dbdf5e8dd84c0e912d	2016-05-09 17:38:30	2016-05-09 17:38:30	f	2016-05-12 18:12:29	2016-05-12 18:12:29	Submitted an iteration	\N	\N	f
124	26	haskell	nth-prime	1	\N	aa2f434b1703179251dc3214	2016-02-12 21:58:40	2016-02-12 21:58:40	f	2016-07-17 22:53:15	2016-07-17 22:53:15	Submitted an iteration	\N	\N	f
125	26	go	grains	1	\N	83fc084431637a4415640a02	2016-02-12 02:39:19	2016-02-12 02:39:19	f	2016-05-04 11:22:48	2016-05-04 11:22:48	@robreiss commented	\N	\N	f
126	26	cpp	word-count	4	needs_input	332a89bcb2fe16c83f1b432f	2016-03-19 11:36:12	2016-03-19 11:36:12	f	2016-07-15 02:08:00	2016-07-15 02:08:00	Submitted an iteration	\N	\N	f
127	26	ocaml	bob	1	pending	25e2321d1b3ef94c8870497b	2016-04-07 04:41:03	2016-04-07 04:41:03	f	2016-04-29 08:44:57	2016-04-29 08:44:57	Submitted an iteration	\N	\N	f
128	26	elixir	acronym	3	\N	e0cbe79e558f645e3b60b6c4	2016-03-31 17:10:31	2016-03-31 17:10:31	f	2016-06-09 11:28:20	2016-06-09 11:28:20	Submitted an iteration	2016-02-18 03:40:58.240719	\N	f
129	26	javascript	anagram	1	\N	33e3941ba206a21871fd6c6b	2016-01-21 00:28:54	2016-01-21 00:28:54	f	2016-07-26 03:54:45	2016-07-26 03:54:45	Submitted an iteration	2016-02-07 09:15:19.556284	\N	f
130	26	cpp	phone-number	2	hibernating	9c174e1ad719f309c0c189aa	2016-01-20 05:43:22	2016-01-20 05:43:22	f	2016-04-04 03:52:35	2016-04-04 03:52:35	Submitted an iteration	\N	\N	f
131	26	javascript	etl	2	pending	c09a36f9bda28d7b6d5b29b7	2016-02-08 11:44:03	2016-02-08 11:44:03	f	2016-05-27 16:37:28	2016-05-27 16:37:28	Submitted an iteration	\N	\N	f
132	26	javascript	food-chain	1	pending	c48b66849cd562baedf761d8	2016-01-31 03:21:35	2016-01-31 03:21:35	f	2016-04-11 02:07:18	2016-04-11 02:07:18	Submitted an iteration	\N	\N	f
133	26	ecmascript	hello-world	1	\N	02736c00caa186a754a6f607	2016-05-15 23:12:29	2016-05-15 23:12:29	f	2016-08-03 10:28:35	2016-08-03 10:28:35	@rikki- commented	\N	\N	f
134	26	ruby	space-age	3	\N	8d800e88f259c00387bc5670	2016-01-18 23:34:07	2016-01-18 23:34:07	f	2016-06-27 19:00:28	2016-06-27 19:00:28	@mediafinger commented	2016-01-31 06:45:52.854257	\N	f
135	26	erlang	sum-of-multiples	1	pending	50f09e4679e8eb16ccf14b55	2016-03-25 14:43:23	2016-03-25 14:43:23	f	2016-04-29 11:56:40	2016-04-29 11:56:40	Submitted an iteration	\N	\N	f
136	26	csharp	bob	2	\N	6bb928a5adc3176c1077780c	2016-01-29 00:27:48	2016-01-29 00:27:48	f	2016-02-29 20:37:48	2016-02-29 20:37:48	Submitted an iteration	2016-01-18 19:14:24.682736	\N	f
137	26	python	kindergarten-garden	1	pending	704a231d76b9f8a6fe123e36	2016-01-20 08:47:32	2016-01-20 08:47:32	f	2016-06-29 20:44:36	2016-06-29 20:44:36	Submitted an iteration	\N	\N	f
138	26	ruby	phone-number	1	pending	e75fcb2ed94202cfbd9023f4	2016-02-04 11:29:03	2016-02-04 11:29:03	f	2016-08-10 13:42:14	2016-08-10 13:42:14	Submitted an iteration	\N	\N	f
139	26	haskell	gigasecond	2	done	48bd99ff10831d32a822c1de	2016-04-23 12:48:08	2016-04-23 12:48:08	t	2016-08-05 08:18:26	2016-08-05 08:18:26	Submitted an iteration	\N	\N	f
140	26	python	word-count	1	done	dc6a0a4027635702abab9c58	2016-02-26 05:48:52	2016-02-26 05:48:52	t	2016-08-04 01:15:45	2016-08-04 01:15:45	Submitted an iteration	\N	\N	f
141	26	javascript	word-count	5	done	04cc19e82e4045af478bdfae	2016-02-15 05:41:07	2016-02-15 05:41:07	t	2016-06-07 08:41:27	2016-06-07 08:41:27	Submitted an iteration	\N	\N	f
142	26	perl5	bob	1	\N	dfe26c38c38005de9ded922a	2016-05-27 18:04:42	2016-05-27 18:04:42	f	2016-06-15 00:05:15	2016-06-15 00:05:15	@lancew commented	\N	\N	f
143	26	python	space-age	1	pending	c4d1a8389f87f47bff24b89d	2016-06-09 06:58:21	2016-06-09 06:58:21	f	2016-07-13 16:55:34	2016-07-13 16:55:34	Submitted an iteration	\N	\N	f
144	26	php	roman-numerals	2	\N	c3baed9d1444cd34bfb26f28	2016-01-17 11:02:14	2016-01-17 11:02:14	f	2016-04-06 20:06:19	2016-04-06 20:06:19	Submitted an iteration	2015-12-22 03:58:59.826369	\N	f
145	26	ruby	hamming	1	pending	7bf753cb1443451476ed3a1a	2016-02-08 23:05:53	2016-02-08 23:05:53	f	2016-04-25 02:43:19	2016-04-25 02:43:19	Submitted an iteration	\N	\N	f
146	26	ruby	strain	1	done	2c327c94e112f8e9ead35225	2016-06-23 02:17:39	2016-06-23 02:17:39	t	2016-07-05 12:41:51	2016-07-05 12:41:51	Submitted an iteration	\N	\N	f
147	26	haskell	sum-of-multiples	2	done	329a04b7720b013a27f590f7	2016-02-28 21:10:07	2016-02-28 21:10:07	t	2016-07-29 07:49:49	2016-07-29 07:49:49	Submitted an iteration	\N	\N	f
148	7	rust	anagram	4	done	f5587c975a360e3f027ed75c	2016-01-31 22:28:34	2016-01-31 22:28:34	t	2016-08-08 08:37:46	2016-08-08 08:37:46	Submitted an iteration	\N	\N	f
149	7	clojure	rna-transcription	2	pending	9a96ff33569239aeb6481beb	2016-03-25 11:17:40	2016-03-25 11:17:40	t	2016-05-29 09:07:20	2016-05-29 09:07:20	Submitted an iteration	\N	\N	f
150	7	php	roman-numerals	2	\N	fa34de87ab613f8d78580e15	2016-02-15 04:37:58	2016-02-15 04:37:58	f	2016-05-19 06:54:28	2016-05-19 06:54:28	Submitted an iteration	2015-12-22 03:58:59.826369	\N	f
151	7	python	series	2	hibernating	f95d54bd2b3b550175218480	2015-12-07 08:40:02	2015-12-07 08:40:02	f	2016-07-03 12:03:59	2016-07-03 12:03:59	Submitted an iteration	\N	\N	f
152	7	python	rna-transcription	1	done	709334adbdfab214e11fe36f	2016-01-08 12:40:42	2016-01-08 12:40:42	t	2016-03-13 06:25:41	2016-03-13 06:25:41	Submitted an iteration	\N	\N	f
153	7	javascript	leap	1	\N	5d000b017da37faef860f2b6	2016-01-14 10:51:47	2016-01-14 10:51:47	f	2016-02-18 21:44:13	2016-02-18 21:44:13	@MityaDSCH commented	\N	\N	f
154	7	ruby	gigasecond	1	hibernating	52fc6642a6faf61979d8cd63	2015-12-27 10:18:49	2015-12-27 10:18:49	f	2016-03-03 11:44:27	2016-03-03 11:44:27	Submitted an iteration	\N	\N	f
155	7	ruby	raindrops	6	\N	d0ee76732558e076e05bda90	2016-01-02 22:47:57	2016-01-02 22:47:57	t	2016-07-31 10:35:03	2016-07-31 10:35:03	@illbzo1 commented	\N	\N	f
156	7	javascript	hello-world	1	done	f255aac74347caa64121c903	2015-12-11 03:51:30	2015-12-11 03:51:30	t	2016-05-09 20:49:57	2016-05-09 20:49:57	Submitted an iteration	\N	\N	f
157	7	haskell	difference-of-squares	3	done	49b95961d84b204e56f3549e	2016-01-08 07:15:20	2016-01-08 07:15:20	t	2016-05-22 14:50:31	2016-05-22 14:50:31	Submitted an iteration	\N	\N	f
158	7	ruby	secret-handshake	4	done	b25b8462a7349fd36e574795	2016-02-17 09:09:20	2016-02-17 09:09:20	t	2016-07-22 12:27:47	2016-07-22 12:27:47	Submitted an iteration	\N	\N	f
159	7	javascript	word-count	5	done	651ff137c9dc7543770e08ff	2015-12-05 22:49:56	2015-12-05 22:49:56	t	2016-07-27 04:49:07	2016-07-27 04:49:07	Submitted an iteration	\N	\N	f
160	7	cpp	phone-number	2	hibernating	5f4ef3e886c56082cf16dc44	2016-03-27 14:56:19	2016-03-27 14:56:19	f	2016-07-04 13:31:24	2016-07-04 13:31:24	Submitted an iteration	\N	\N	f
161	7	javascript	hamming	1	hibernating	4020d2e98b62c4f3ceaecdee	2016-04-08 15:04:44	2016-04-08 15:04:44	f	2016-05-21 11:20:43	2016-05-21 11:20:43	Submitted an iteration	\N	\N	f
162	7	python	leap	2	hibernating	616dcb7c5e59adb12df9f5f6	2016-01-21 10:12:40	2016-01-21 10:12:40	f	2016-06-20 13:45:06	2016-06-20 13:45:06	Submitted an iteration	\N	\N	f
163	7	cpp	etl	2	done	f03ddf41cf3df60dda77f2de	2016-01-17 14:07:23	2016-01-17 14:07:23	t	2016-06-22 17:47:44	2016-06-22 17:47:44	Submitted an iteration	\N	\N	f
164	7	javascript	gigasecond	1	pending	52419f8af7f40b5b424233f5	2016-01-02 01:32:56	2016-01-02 01:32:56	f	2016-04-24 17:28:02	2016-04-24 17:28:02	Submitted an iteration	\N	\N	f
165	7	elixir	word-count	1	hibernating	90c12a041b46354eaa9dd8f9	2016-01-26 17:30:10	2016-01-26 17:30:10	f	2016-07-15 15:47:36	2016-07-15 15:47:36	Submitted an iteration	\N	\N	f
166	7	javascript	food-chain	1	hibernating	407840d2ae45edfa5c6417d4	2016-04-04 14:37:02	2016-04-04 14:37:02	f	2016-06-18 19:06:44	2016-06-18 19:06:44	Submitted an iteration	\N	\N	f
167	7	ruby	hamming	2	hibernating	831d4f080abfcc7f855f4225	2016-01-01 01:14:33	2016-01-01 01:14:33	f	2016-07-22 19:56:33	2016-07-22 19:56:33	Submitted an iteration	\N	\N	f
168	7	elixir	hello-world	1	\N	80ed2d22289ab052def43414	2016-02-08 22:37:18	2016-02-08 22:37:18	f	2016-03-19 16:30:18	2016-03-19 16:30:18	Submitted an iteration	\N	\N	f
169	7	perl5	bob	1	hibernating	14d953f5c1b290a00dcaf118	2016-01-16 01:46:30	2016-01-16 01:46:30	f	2016-05-16 06:12:26	2016-05-16 06:12:26	Submitted an iteration	\N	\N	f
170	7	javascript	bob	1	done	9d732eb34563d14d8195b4a2	2016-02-03 19:28:02	2016-02-03 19:28:02	t	2016-04-13 06:03:32	2016-04-13 06:03:32	Submitted an iteration	\N	\N	f
171	7	ruby	beer-song	5	done	fcbf17b6373620d4847deceb	2016-01-02 02:16:24	2016-01-02 02:16:24	t	2016-07-17 21:05:10	2016-07-17 21:05:10	Submitted an iteration	\N	\N	f
172	7	python	gigasecond	2	pending	7ab7f5c45541c9e416ae2a84	2016-01-08 21:48:34	2016-01-08 21:48:34	f	2016-07-29 20:38:11	2016-07-29 20:38:11	Submitted an iteration	\N	\N	f
173	7	coffeescript	hello-world	1	\N	b796cae2192e4fb5f44ac377	2016-03-10 21:29:51	2016-03-10 21:29:51	f	2016-08-03 02:47:56	2016-08-03 02:47:56	Submitted an iteration	\N	\N	f
174	7	ruby	bob	1	hibernating	b0f8f568429c4d483f0ce3d6	2016-03-18 20:22:23	2016-03-18 20:22:23	f	2016-06-15 07:15:41	2016-06-15 07:15:41	Submitted an iteration	\N	\N	f
175	7	python	nth-prime	1	pending	0cc6fd3b396895540293b21a	2016-02-05 22:48:41	2016-02-05 22:48:41	f	2016-03-13 04:05:13	2016-03-13 04:05:13	Submitted an iteration	\N	\N	f
176	7	elixir	binary	1	\N	752cef0ba43f6ff27e3d9f0a	2015-12-14 17:12:34	2015-12-14 17:12:34	t	2015-12-27 10:41:15	2015-12-27 10:41:15	Submitted an iteration	2015-12-30 00:05:14.345794	\N	f
177	7	csharp	bob	2	\N	fbf130be13e67f303f4b22bb	2016-01-17 22:51:46	2016-01-17 22:51:46	f	2016-06-30 02:31:03	2016-06-30 02:31:03	Submitted an iteration	2016-01-18 19:14:24.682736	\N	f
178	7	csharp	phone-number	1	pending	ad5e955f202a9caa55c51dae	2016-02-11 17:52:34	2016-02-11 17:52:34	f	2016-05-11 02:47:50	2016-05-11 02:47:50	Submitted an iteration	\N	\N	f
179	7	go	gigasecond	2	pending	44e5fa66df8f5015dcfea625	2016-01-27 04:37:35	2016-01-27 04:37:35	f	2016-04-09 19:59:34	2016-04-09 19:59:34	Submitted an iteration	\N	\N	f
180	7	ruby	phone-number	1	pending	a39b25d313124062fb33381a	2015-12-31 20:09:38	2015-12-31 20:09:38	f	2016-07-22 21:39:43	2016-07-22 21:39:43	Submitted an iteration	\N	\N	f
181	7	haskell	bob	2	pending	4f85998b772988fd0421178f	2016-01-03 20:28:37	2016-01-03 20:28:37	f	2016-03-06 16:26:12	2016-03-06 16:26:12	Submitted an iteration	\N	\N	f
182	7	ruby	leap	1	hibernating	a539798f4694c0419dcc0707	2015-12-22 16:35:12	2015-12-22 16:35:12	f	2015-12-28 16:43:48	2015-12-28 16:43:48	Submitted an iteration	\N	\N	f
183	7	python	run-length-encoding	2	\N	827ae05b631a4008d5359389	2016-01-02 12:54:20	2016-01-02 12:54:20	f	2016-06-26 02:12:27	2016-06-26 02:12:27	@joce commented	2016-02-29 19:14:55.785215	\N	f
184	7	ruby	space-age	1	pending	1b919c5990e480acc7fa12c8	2016-03-26 09:23:59	2016-03-26 09:23:59	f	2016-06-30 20:05:13	2016-06-30 20:05:13	Submitted an iteration	\N	\N	f
185	7	javascript	palindrome-products	1	pending	fb5178942258d71dbb0e2e30	2016-04-06 16:37:14	2016-04-06 16:37:14	f	2016-06-29 05:58:22	2016-06-29 05:58:22	Submitted an iteration	\N	\N	f
186	7	haskell	triangle	1	done	45a6b97984f326a47b41804e	2016-03-21 17:02:59	2016-03-21 17:02:59	t	2016-07-27 20:06:44	2016-07-27 20:06:44	Submitted an iteration	\N	\N	f
187	7	python	minesweeper	1	pending	16f5ad9422ea9a1276778138	2016-04-15 08:57:33	2016-04-15 08:57:33	f	2016-04-29 09:34:50	2016-04-29 09:34:50	Submitted an iteration	\N	\N	f
188	7	python	crypto-square	2	pending	7018bfec5d70b727929645b8	2015-11-30 11:20:21	2015-11-30 11:20:21	f	2016-06-19 18:58:32	2016-06-19 18:58:32	Submitted an iteration	\N	\N	f
189	23	python	robot-name	1	\N	dd7b7930b46cb982d66f6f6a	2016-05-24 17:10:24	2016-05-24 17:10:24	f	2016-08-06 18:07:26	2016-08-06 18:07:26	Submitted an iteration	2016-02-16 19:51:30.768402	\N	f
190	17	haskell	rna-transcription	1	\N	7853bb681656b7313a517f36	2015-12-19 00:14:03	2015-12-19 00:14:03	t	2016-03-12 15:26:55	2016-03-12 15:26:55	Submitted an iteration	2015-10-08 20:04:40.118352	\N	f
191	17	javascript	anagram	2	pending	4f973839fc4a144d564204bf	2016-02-04 17:21:39	2016-02-04 17:21:39	f	2016-04-18 23:21:55	2016-04-18 23:21:55	Submitted an iteration	\N	\N	f
192	17	go	gigasecond	2	pending	d37f0797ee6abbd3b9a0ac82	2016-03-17 21:07:10	2016-03-17 21:07:10	f	2016-06-30 17:39:14	2016-06-30 17:39:14	Submitted an iteration	\N	\N	f
193	17	javascript	bob	1	pending	c8087b99d58511e3adfcb41f	2016-03-04 21:56:05	2016-03-04 21:56:05	f	2016-08-10 14:50:50	2016-08-10 14:50:50	Submitted an iteration	\N	\N	f
194	17	python	atbash-cipher	1	\N	7f59fddfed397267bcc3ae1c	2016-04-03 17:41:45	2016-04-03 17:41:45	f	2016-05-12 00:37:57	2016-05-12 00:37:57	Submitted an iteration	\N	\N	f
195	20	haskell	crypto-square	1	done	87dc34cb1eb57426299224cc	2015-12-17 21:06:45	2015-12-17 21:06:45	t	2016-02-20 00:37:50	2016-02-20 00:37:50	Submitted an iteration	\N	\N	f
196	21	lisp	sieve	1	\N	86af98edbe66924f585373c5	2016-06-08 15:35:43	2016-06-08 15:35:43	f	2016-07-12 08:59:16	2016-07-12 08:59:16	Submitted an iteration	2015-10-25 04:07:01.139264	\N	f
197	21	javascript	grade-school	1	\N	8796992c824a78666f4dc301	2016-04-21 20:09:44	2016-04-21 20:09:44	t	2016-06-20 11:19:24	2016-06-20 11:19:24	@oris commented	2015-11-03 21:12:31.830281	\N	f
198	21	javascript	gigasecond	1	pending	ef07c652e35eb2898ef36b21	2016-04-20 13:59:10	2016-04-20 13:59:10	f	2016-04-21 08:50:02	2016-04-21 08:50:02	Submitted an iteration	\N	\N	f
199	36	javascript	hamming	1	\N	62e059da905ff17938e9797e	2016-02-07 21:07:03	2016-02-07 21:07:03	f	2016-03-25 21:58:08	2016-03-25 21:58:08	Submitted an iteration	2016-03-07 03:50:40.747336	\N	f
200	36	lisp	gigasecond	2	hibernating	c27550902a63e6f2a7d166d8	2016-05-12 04:14:44	2016-05-12 04:14:44	f	2016-07-17 17:26:45	2016-07-17 17:26:45	Submitted an iteration	\N	\N	f
201	36	ruby	kindergarten-garden	1	pending	c437b9dd27900dae2e141032	2016-05-23 17:50:24	2016-05-23 17:50:24	f	2016-06-04 04:47:18	2016-06-04 04:47:18	Submitted an iteration	\N	\N	f
202	36	java	etl	1	hibernating	689133ddad93764a64ceb25e	2016-02-13 02:29:06	2016-02-13 02:29:06	f	2016-04-05 03:16:46	2016-04-05 03:16:46	Submitted an iteration	\N	\N	f
203	36	javascript	space-age	1	pending	0844dc8069be8282392d7f3d	2016-04-12 16:27:41	2016-04-12 16:27:41	f	2016-04-24 02:19:47	2016-04-24 02:19:47	Submitted an iteration	\N	\N	f
204	36	ruby	sum-of-multiples	1	pending	5d4f6a8d77ded8f4a1657274	2016-04-07 17:23:48	2016-04-07 17:23:48	t	2016-06-12 22:43:42	2016-06-12 22:43:42	Submitted an iteration	\N	\N	f
205	30	haskell	nth-prime	1	\N	b99b7645fe67f892119bdd1f	2016-05-11 10:35:34	2016-05-11 10:35:34	f	2016-07-19 05:39:04	2016-07-19 05:39:04	Submitted an iteration	\N	\N	f
206	30	ruby	leap	1	hibernating	e85435dc0bec43ba6fad9f58	2016-01-23 01:11:54	2016-01-23 01:11:54	f	2016-04-24 03:16:44	2016-04-24 03:16:44	Submitted an iteration	\N	\N	f
207	30	rust	anagram	4	done	85bb2f8de9967a161c5121e4	2016-01-03 04:02:43	2016-01-03 04:02:43	t	2016-06-25 04:36:10	2016-06-25 04:36:10	Submitted an iteration	\N	\N	f
208	30	cpp	word-count	4	needs_input	5090e457c7b9bbc21b2cb036	2016-03-12 11:46:54	2016-03-12 11:46:54	f	2016-08-03 01:09:53	2016-08-03 01:09:53	Submitted an iteration	\N	\N	f
209	30	ruby	phone-number	3	hibernating	1daab131000aa6fb9581f8cb	2016-02-09 01:45:21	2016-02-09 01:45:21	f	2016-07-28 04:39:54	2016-07-28 04:39:54	Submitted an iteration	\N	\N	f
210	30	ruby	word-count	2	done	555d7551e220e9a1fb6daa6c	2015-12-27 22:54:32	2015-12-27 22:54:32	t	2016-06-06 08:09:27	2016-06-06 08:09:27	Submitted an iteration	\N	\N	f
211	35	rust	difference-of-squares	1	pending	3f6774f7e5f36fb708956442	2016-01-17 02:51:46	2016-01-17 02:51:46	f	2016-06-19 03:56:42	2016-06-19 03:56:42	Submitted an iteration	\N	\N	f
212	35	scala	leap	2	\N	549037200b9389036214a380	2016-01-27 03:43:23	2016-01-27 03:43:23	f	2016-08-05 09:47:28	2016-08-05 09:47:28	@abo64 commented	2015-10-22 16:39:33.244747	\N	f
213	35	csharp	bob	1	pending	95f8af783f58b5b0a165ca74	2016-01-09 23:11:41	2016-01-09 23:11:41	f	2016-08-07 04:16:25	2016-08-07 04:16:25	Submitted an iteration	\N	\N	f
214	35	javascript	raindrops	1	\N	80890ccd892b870f100016b4	2016-05-04 06:15:10	2016-05-04 06:15:10	f	2016-05-14 07:48:06	2016-05-14 07:48:06	Submitted an iteration	\N	\N	f
215	35	javascript	space-age	1	pending	b61524b7748d4718fc815a04	2016-05-08 06:17:05	2016-05-08 06:17:05	t	2016-06-03 03:05:05	2016-06-03 03:05:05	Submitted an iteration	\N	\N	f
216	35	javascript	bob	1	done	2ea058e40bf01c86f29f9396	2016-01-02 15:19:37	2016-01-02 15:19:37	t	2016-01-11 10:17:03	2016-01-11 10:17:03	Submitted an iteration	\N	\N	f
217	35	php	difference-of-squares	1	\N	f1751fcea7c513e62e22d7ad	2016-01-10 15:44:15	2016-01-10 15:44:15	t	2016-06-22 00:03:24	2016-06-22 00:03:24	Submitted an iteration	\N	\N	f
218	14	python	hamming	2	done	c4e8a82ca162fba87f76cbb5	2016-02-21 21:53:20	2016-02-21 21:53:20	t	2016-05-16 11:23:46	2016-05-16 11:23:46	Submitted an iteration	\N	\N	f
219	41	csharp	etl	2	done	930ca2516681c12e399e8a14	2016-06-01 15:58:56	2016-06-01 15:58:56	t	2016-07-17 02:01:53	2016-07-17 02:01:53	Submitted an iteration	\N	\N	f
220	41	php	roman-numerals	2	\N	342f4249d8c588c8c9b677fc	2016-04-26 18:32:58	2016-04-26 18:32:58	f	2016-07-15 16:53:19	2016-07-15 16:53:19	Submitted an iteration	2015-12-22 03:58:59.826369	\N	f
221	41	javascript	food-chain	1	pending	04fc11422e9ef734e729973c	2016-06-21 23:10:09	2016-06-21 23:10:09	f	2016-06-28 07:34:41	2016-06-28 07:34:41	Submitted an iteration	\N	\N	f
222	41	ruby	space-age	1	pending	634da4411b2ab86e0a35304f	2016-07-12 09:48:10	2016-07-12 09:48:10	f	2016-07-19 07:45:41	2016-07-19 07:45:41	Submitted an iteration	\N	\N	f
223	41	javascript	anagram	1	done	350451368e338941a68c206d	2016-04-03 20:49:39	2016-04-03 20:49:39	t	2016-07-27 21:28:26	2016-07-27 21:28:26	Submitted an iteration	\N	\N	f
224	41	ecmascript	hello-world	1	\N	19b34e9ae51be37023fdecd0	2016-04-06 01:16:45	2016-04-06 01:16:45	f	2016-07-31 13:03:39	2016-07-31 13:03:39	@rikki- commented	\N	\N	f
225	6	go	pythagorean-triplet	1	\N	7b856bc41948c627da559332	2016-06-17 01:46:31	2016-06-17 01:46:31	f	2016-07-21 16:09:21	2016-07-21 16:09:21	Submitted an iteration	2016-02-16 14:29:29.667566	\N	f
226	6	javascript	word-count	1	hibernating	4520140fd9c0970fec21fc5d	2016-05-21 15:13:28	2016-05-21 15:13:28	f	2016-05-24 02:42:18	2016-05-24 02:42:18	Submitted an iteration	\N	\N	f
227	6	ruby	leap	1	\N	765307a2d310715dd7737df9	2016-06-07 04:32:34	2016-06-07 04:32:34	f	2016-07-01 00:41:28	2016-07-01 00:41:28	Submitted an iteration	2015-10-08 17:36:43.380406	\N	f
228	6	javascript	bob	1	pending	7c86920a69ce6d3d9b4b6bcb	2016-05-29 15:42:38	2016-05-29 15:42:38	f	2016-08-04 03:34:42	2016-08-04 03:34:42	Submitted an iteration	\N	\N	f
229	34	ruby	phone-number	2	\N	d649687b27d1f66fcaa3bba2	2016-04-08 13:47:58	2016-04-08 13:47:58	f	2016-06-12 01:05:30	2016-06-12 01:05:30	@remcopeereboom commented	2015-10-20 21:28:02.688659	\N	f
230	16	javascript	anagram	1	\N	635918f5e8defb47068ae4a9	2016-07-30 18:50:15	2016-07-30 18:50:15	f	2016-08-09 22:16:29	2016-08-09 22:16:29	Submitted an iteration	2016-02-07 09:15:19.556284	\N	f
231	16	python	run-length-encoding	2	\N	d378576a36fb6e7e005f81bc	2016-07-25 06:22:20	2016-07-25 06:22:20	f	2016-08-04 19:05:21	2016-08-04 19:05:21	@joce commented	2016-02-29 19:14:55.785215	\N	f
232	16	elixir	sublist	1	\N	19c0982366969293ce1498bb	2016-07-29 08:41:36	2016-07-29 08:41:36	f	2016-08-05 09:14:33	2016-08-05 09:14:33	Submitted an iteration	2015-12-27 05:34:01.928724	\N	f
233	16	clojure	word-count	2	done	93a8e10be95ceacee1886797	2016-07-21 19:02:22	2016-07-21 19:02:22	t	2016-08-02 09:19:53	2016-08-02 09:19:53	Submitted an iteration	\N	\N	f
234	16	haskell	anagram	1	\N	4c97870b3a4985fc792b2a0e	2016-08-03 10:37:38	2016-08-03 10:37:38	f	2016-08-06 22:56:47	2016-08-06 22:56:47	Submitted an iteration	2016-02-24 22:38:08.929469	\N	f
235	16	ruby	raindrops	1	\N	a32610beb909cc13984b07c7	2016-07-25 05:33:17	2016-07-25 05:33:17	f	2016-08-01 21:55:27	2016-08-01 21:55:27	Submitted an iteration	2016-01-27 13:38:34.211684	\N	f
236	16	python	leap	1	hibernating	41952af9021c014a7443c69c	2016-07-29 05:53:22	2016-07-29 05:53:22	f	2016-07-29 17:48:29	2016-07-29 17:48:29	Submitted an iteration	\N	\N	f
237	16	cpp	word-count	4	needs_input	d5031896ecb295bb69633017	2016-07-22 16:28:09	2016-07-22 16:28:09	f	2016-08-06 10:54:03	2016-08-06 10:54:03	Submitted an iteration	\N	\N	f
238	16	ruby	grains	2	done	ec086942e4dedbdb6007316a	2016-07-22 09:44:52	2016-07-22 09:44:52	t	2016-08-03 18:39:06	2016-08-03 18:39:06	Submitted an iteration	\N	\N	f
239	16	ruby	matrix	1	pending	75b5d6f7ccd484bd3a0bb0e5	2016-08-10 22:01:45	2016-08-10 22:01:45	f	2016-08-11 01:27:39	2016-08-11 01:27:39	Submitted an iteration	\N	\N	f
240	16	javascript	beer-song	1	pending	a7cf976fb83416092650c38c	2016-07-23 11:15:54	2016-07-23 11:15:54	f	2016-08-03 07:22:34	2016-08-03 07:22:34	Submitted an iteration	\N	\N	f
241	16	clojure	binary	2	pending	c7d7a497fee9f4abbc3a2ebe	2016-07-20 00:55:56	2016-07-20 00:55:56	f	2016-08-07 16:16:42	2016-08-07 16:16:42	Submitted an iteration	\N	\N	f
242	16	objective-c	word-count	1	\N	bb23c6d208d4690af1a395e7	2016-07-23 14:14:46	2016-07-23 14:14:46	t	2016-08-04 23:42:03	2016-08-04 23:42:03	Submitted an iteration	2015-12-20 12:31:56.013191	\N	f
243	16	go	octal	1	needs_input	afbbc1047d302e11132d3d93	2016-07-17 07:23:10	2016-07-17 07:23:10	f	2016-07-29 06:54:15	2016-07-29 06:54:15	Submitted an iteration	\N	\N	f
244	16	csharp	etl	2	done	eff7463101245de8db4581f6	2016-07-19 03:04:28	2016-07-19 03:04:28	t	2016-07-25 13:48:39	2016-07-25 13:48:39	Submitted an iteration	\N	\N	f
245	16	ruby	hello-world	1	pending	dd8cde21cc59a6813c3933ec	2016-07-25 18:10:44	2016-07-25 18:10:44	f	2016-07-29 08:24:28	2016-07-29 08:24:28	Submitted an iteration	\N	\N	f
246	16	ruby	gigasecond	3	done	7f4ad946133dfce47cdd9977	2016-07-20 08:24:43	2016-07-20 08:24:43	t	2016-08-08 11:25:18	2016-08-08 11:25:18	Submitted an iteration	\N	\N	f
247	16	scala	bob	1	done	8c891c26df7a78766572e821	2016-08-04 15:22:03	2016-08-04 15:22:03	t	2016-08-07 00:30:10	2016-08-07 00:30:10	Submitted an iteration	\N	\N	f
248	16	javascript	etl	2	\N	fe49d257d16ddaa1c44e5af9	2016-07-24 11:37:51	2016-07-24 11:37:51	f	2016-08-05 16:37:20	2016-08-05 16:37:20	Submitted an iteration	2016-02-17 19:53:10.34942	\N	f
249	16	ruby	leap	1	done	cf975d5133fd44e5b5fa80fb	2016-08-01 20:09:16	2016-08-01 20:09:16	t	2016-08-03 06:15:57	2016-08-03 06:15:57	Submitted an iteration	\N	\N	f
250	16	python	rna-transcription	1	done	f5b22d5c08ffb04120edcd5a	2016-07-27 19:25:00	2016-07-27 19:25:00	t	2016-08-06 15:59:19	2016-08-06 15:59:19	Submitted an iteration	\N	\N	f
251	16	python	allergies	1	pending	a78ec30a2caf12a1d63894f5	2016-07-30 16:26:15	2016-07-30 16:26:15	f	2016-08-03 18:02:07	2016-08-03 18:02:07	Submitted an iteration	\N	\N	f
252	16	python	difference-of-squares	1	\N	9cbf6b668f901d842fef9521	2016-07-21 03:15:48	2016-07-21 03:15:48	f	2016-08-06 11:12:29	2016-08-06 11:12:29	Submitted an iteration	\N	\N	f
253	16	cpp	hamming	2	hibernating	f4d8ba973867e4572ca2561a	2016-07-26 10:29:46	2016-07-26 10:29:46	f	2016-08-10 00:27:41	2016-08-10 00:27:41	@LegalizeAdulthood commented	\N	\N	f
254	16	perl5	bob	1	\N	890f07c8ba0bd590da756741	2016-07-19 15:22:52	2016-07-19 15:22:52	f	2016-08-03 10:10:11	2016-08-03 10:10:11	@lancew commented	\N	\N	f
255	16	ruby	binary	1	\N	56724d9d3ce5f0d23519c19b	2016-07-20 17:30:18	2016-07-20 17:30:18	f	2016-07-25 10:33:31	2016-07-25 10:33:31	@Calvyn82 commented	\N	\N	f
256	16	haskell	gigasecond	2	done	fc1ace33fde2e6bc0c71abaf	2016-07-29 04:29:34	2016-07-29 04:29:34	t	2016-08-11 03:30:16	2016-08-11 03:30:16	Submitted an iteration	\N	\N	f
257	16	python	hello-world	1	pending	81c5c1ac3a1e9d7e8f112da2	2016-08-08 22:48:19	2016-08-08 22:48:19	f	2016-08-11 08:58:40	2016-08-11 08:58:40	Submitted an iteration	\N	\N	f
258	16	coffeescript	word-count	1	pending	10791721980ac96cf59f3cd1	2016-07-23 08:57:43	2016-07-23 08:57:43	f	2016-08-08 18:08:16	2016-08-08 18:08:16	Submitted an iteration	\N	\N	f
259	16	ruby	beer-song	5	done	e3fb77df3a6048ba8691c67c	2016-07-19 07:47:32	2016-07-19 07:47:32	t	2016-08-10 05:24:35	2016-08-10 05:24:35	Submitted an iteration	\N	\N	f
260	18	scala	bob	3	\N	9355846b3647ac59d610c46e	2016-07-09 17:56:51	2016-07-09 17:56:51	f	2016-08-09 06:34:37	2016-08-09 06:34:37	@abo64 commented	2015-10-30 21:19:32.125119	\N	f
261	18	ruby	leap	1	done	88c3ab5fef2b8e51e3888450	2016-07-06 11:59:27	2016-07-06 11:59:27	t	2016-07-08 13:20:56	2016-07-08 13:20:56	Submitted an iteration	\N	\N	f
262	18	haskell	bob	2	pending	073ef5f1bd8a52c62ebfe15a	2016-07-08 00:16:54	2016-07-08 00:16:54	f	2016-07-30 19:45:25	2016-07-30 19:45:25	Submitted an iteration	\N	\N	f
263	18	go	difference-of-squares	1	pending	ccdf592e9a3473238f243513	2016-07-21 23:29:34	2016-07-21 23:29:34	t	2016-07-24 19:10:21	2016-07-24 19:10:21	Submitted an iteration	\N	\N	f
264	18	python	word-count	1	done	75eecf77180f6460e56dfa47	2016-07-09 22:48:14	2016-07-09 22:48:14	t	2016-07-22 17:13:59	2016-07-22 17:13:59	Submitted an iteration	\N	\N	f
265	18	haskell	gigasecond	2	pending	f1198a80bbaae472b993d63e	2016-07-09 20:37:35	2016-07-09 20:37:35	f	2016-08-09 01:10:41	2016-08-09 01:10:41	Submitted an iteration	\N	\N	f
266	18	javascript	bob	1	done	455868caa21413365ca2d7f0	2016-07-18 03:02:02	2016-07-18 03:02:02	t	2016-08-05 09:57:22	2016-08-05 09:57:22	Submitted an iteration	\N	\N	f
267	18	java	space-age	1	\N	7a1f3fd6f0da3284771a470f	2016-07-07 06:52:24	2016-07-07 06:52:24	f	2016-07-30 03:49:11	2016-07-30 03:49:11	Submitted an iteration	2015-11-15 04:26:52.671156	\N	f
268	18	javascript	robot-simulator	1	done	585e382b11c6732692642d19	2016-07-18 00:05:37	2016-07-18 00:05:37	t	2016-08-06 09:39:10	2016-08-06 09:39:10	Submitted an iteration	\N	\N	f
269	18	javascript	anagram	2	pending	575c77683b632bda2f96ae75	2016-07-09 14:14:57	2016-07-09 14:14:57	f	2016-08-01 06:01:33	2016-08-01 06:01:33	Submitted an iteration	\N	\N	f
270	18	ruby	nth-prime	1	pending	f5424a28113a77ae0768fbdc	2016-07-12 00:41:06	2016-07-12 00:41:06	f	2016-08-05 02:01:30	2016-08-05 02:01:30	Submitted an iteration	\N	\N	f
271	18	haskell	grains	1	hibernating	0e7ec78a06228e47cc81b5da	2016-07-12 21:21:04	2016-07-12 21:21:04	f	2016-07-26 00:28:11	2016-07-26 00:28:11	Submitted an iteration	\N	\N	f
272	18	ruby	binary	2	\N	039d7fe01ee0497f112ac25c	2016-07-21 15:44:28	2016-07-21 15:44:28	f	2016-08-09 10:46:44	2016-08-09 10:46:44	Submitted an iteration	\N	\N	f
273	18	ruby	raindrops	1	\N	c5b9f41439b703de6f527e7d	2016-07-23 14:57:40	2016-07-23 14:57:40	f	2016-07-31 13:05:44	2016-07-31 13:05:44	Submitted an iteration	2016-01-27 13:38:34.211684	\N	f
274	18	javascript	etl	2	\N	838adf9dd7cc056e7aacc9f2	2016-07-18 08:07:07	2016-07-18 08:07:07	f	2016-08-09 22:07:05	2016-08-09 22:07:05	Submitted an iteration	2016-02-17 19:53:10.34942	\N	f
275	18	python	hamming	1	\N	b33fde5f1d642d07e0134fed	2016-07-07 17:26:12	2016-07-07 17:26:12	f	2016-08-01 12:57:33	2016-08-01 12:57:33	Submitted an iteration	2016-02-24 15:41:26.173657	\N	f
276	18	scala	nucleotide-count	1	hibernating	e33b742150ba8c4894d1515b	2016-07-28 00:35:57	2016-07-28 00:35:57	f	2016-08-05 22:36:37	2016-08-05 22:36:37	Submitted an iteration	\N	\N	f
277	18	javascript	hello-world	1	pending	30ae3aaba2deb2963fb72513	2016-07-10 15:27:23	2016-07-10 15:27:23	f	2016-07-19 00:33:25	2016-07-19 00:33:25	Submitted an iteration	\N	\N	f
278	18	ruby	roman-numerals	1	\N	54142cafaac4f67a84314737	2016-07-28 12:27:12	2016-07-28 12:27:12	t	2016-08-02 02:07:21	2016-08-02 02:07:21	Submitted an iteration	2016-01-23 22:36:36.112711	\N	f
279	18	csharp	hamming	1	\N	5ba920fb7742de98b4102615	2016-08-02 08:03:44	2016-08-02 08:03:44	t	2016-08-03 15:32:53	2016-08-03 15:32:53	Submitted an iteration	2016-01-15 23:52:27.93735	\N	f
280	18	java	etl	1	hibernating	9c9c7360c51a4e3c861030d0	2016-07-10 22:51:26	2016-07-10 22:51:26	f	2016-08-07 03:34:49	2016-08-07 03:34:49	Submitted an iteration	\N	\N	f
281	18	cpp	hamming	2	hibernating	79f3e69adb728facec7807aa	2016-07-13 04:36:53	2016-07-13 04:36:53	f	2016-08-03 07:42:37	2016-08-03 07:42:37	@LegalizeAdulthood commented	\N	\N	f
282	18	cpp	word-count	4	needs_input	c893933286d7f18133834ad9	2016-07-10 07:36:42	2016-07-10 07:36:42	f	2016-08-05 23:39:32	2016-08-05 23:39:32	Submitted an iteration	\N	\N	f
283	18	haskell	nucleotide-count	5	hibernating	48c6af3ce0844386a85bc3f7	2016-07-07 22:41:30	2016-07-07 22:41:30	f	2016-08-01 22:26:12	2016-08-01 22:26:12	Submitted an iteration	\N	\N	f
284	18	scala	word-count	1	pending	8713958d814e86687861f6ac	2016-07-12 03:50:33	2016-07-12 03:50:33	f	2016-08-06 18:35:25	2016-08-06 18:35:25	Submitted an iteration	\N	\N	f
285	18	scheme	grains	1	\N	89b2abd8e080ccb06bb29ac7	2016-08-02 08:26:55	2016-08-02 08:26:55	f	2016-08-05 16:23:23	2016-08-05 16:23:23	@nebkor commented	2015-11-11 20:53:15.289957	\N	f
286	18	javascript	beer-song	1	pending	2e513daf65e4e77b844fb76e	2016-07-11 13:51:09	2016-07-11 13:51:09	f	2016-08-02 01:31:24	2016-08-02 01:31:24	Submitted an iteration	\N	\N	f
287	18	clojure	word-count	2	done	668bde4724d95f1423c39a10	2016-07-12 04:25:38	2016-07-12 04:25:38	t	2016-08-04 09:08:50	2016-08-04 09:08:50	Submitted an iteration	\N	\N	f
288	18	haskell	anagram	1	\N	027298318ffc0aa9fa129b2e	2016-07-12 00:02:28	2016-07-12 00:02:28	f	2016-07-14 07:48:47	2016-07-14 07:48:47	Submitted an iteration	2016-02-24 22:38:08.929469	\N	f
289	18	ruby	word-count	4	done	6e86123262e0e5c632d05e39	2016-07-21 01:13:48	2016-07-21 01:13:48	t	2016-08-08 11:43:36	2016-08-08 11:43:36	Submitted an iteration	\N	\N	f
290	18	python	leap	1	hibernating	5bbf5ab0fcdcfc63706fc43c	2016-07-07 09:02:00	2016-07-07 09:02:00	f	2016-08-04 21:31:21	2016-08-04 21:31:21	Submitted an iteration	\N	\N	f
291	18	python	allergies	2	pending	9cd9bf91be8131d6e73b441d	2016-07-13 23:50:14	2016-07-13 23:50:14	t	2016-08-10 04:51:25	2016-08-10 04:51:25	Submitted an iteration	\N	\N	f
292	18	ruby	rna-transcription	1	\N	bc60d92ecf212a6c795504e6	2016-07-11 18:39:55	2016-07-11 18:39:55	f	2016-07-28 08:02:41	2016-07-28 08:02:41	Submitted an iteration	2015-11-12 15:21:09.864227	\N	f
293	18	haskell	accumulate	2	\N	7bfde2c73344a0d6de8741b7	2016-07-19 02:57:00	2016-07-19 02:57:00	f	2016-08-09 13:53:45	2016-08-09 13:53:45	Submitted an iteration	\N	\N	f
294	18	csharp	anagram	1	pending	a0bb050929d3cf56bbade7fe	2016-07-08 06:16:17	2016-07-08 06:16:17	f	2016-07-31 08:57:11	2016-07-31 08:57:11	Submitted an iteration	\N	\N	f
295	18	haskell	crypto-square	1	done	6af48977ef419b507cda4cab	2016-07-16 04:36:20	2016-07-16 04:36:20	t	2016-07-16 10:23:20	2016-07-16 10:23:20	Submitted an iteration	\N	\N	f
296	18	clojure	meetup	1	pending	cf8cb66a32cad2dc1a4705aa	2016-07-11 05:56:25	2016-07-11 05:56:25	f	2016-08-09 15:47:13	2016-08-09 15:47:13	Submitted an iteration	\N	\N	f
297	18	go	luhn	1	pending	4b5ea5cc4b7fc3d6faf82eeb	2016-07-16 10:04:00	2016-07-16 10:04:00	f	2016-07-22 10:21:21	2016-07-22 10:21:21	Submitted an iteration	\N	\N	f
298	18	elixir	nucleotide-count	1	done	7b58120ab77e6fc0e308982a	2016-07-06 13:13:40	2016-07-06 13:13:40	t	2016-07-24 13:04:03	2016-07-24 13:04:03	Submitted an iteration	\N	\N	f
299	18	haskell	word-count	2	hibernating	279c6b739effd66a1c07ae59	2016-07-17 06:07:00	2016-07-17 06:07:00	f	2016-07-30 01:47:54	2016-07-30 01:47:54	Submitted an iteration	\N	\N	f
300	18	python	gigasecond	1	\N	40d5d07a9f5926356656023f	2016-07-11 04:24:28	2016-07-11 04:24:28	t	2016-07-21 23:08:00	2016-07-21 23:08:00	Submitted an iteration	2016-02-02 21:45:08.556564	\N	f
301	18	haskell	rna-transcription	1	\N	836a7eac70d59f608e9faab5	2016-08-02 01:17:11	2016-08-02 01:17:11	t	2016-08-02 03:57:55	2016-08-02 03:57:55	Submitted an iteration	2015-10-08 20:04:40.118352	\N	f
302	24	javascript	word-count	1	pending	5d1e2af099d17414b0ae4df7	2016-08-01 05:03:13	2016-08-01 05:03:13	f	2016-08-05 05:46:38	2016-08-05 05:46:38	Submitted an iteration	\N	\N	f
303	42	perl5	bob	1	\N	23d75daf81f32e0fe7f558b8	2016-04-30 01:20:30	2016-04-30 01:20:30	f	2016-05-20 05:03:10	2016-05-20 05:03:10	@lancew commented	\N	\N	f
304	27	ruby	secret-handshake	4	done	1230db3acc7cc85e87af5b0d	2016-07-10 11:13:52	2016-07-10 11:13:52	t	2016-08-05 20:57:58	2016-08-05 20:57:58	Submitted an iteration	\N	\N	f
305	27	csharp	triangle	1	pending	a1f8fd1c6e7000ad644d4e19	2016-08-07 00:44:35	2016-08-07 00:44:35	f	2016-08-08 10:05:42	2016-08-08 10:05:42	Submitted an iteration	\N	\N	f
306	27	python	ocr-numbers	2	hibernating	e7b0b8ba71fb772d639ede83	2016-07-17 09:36:15	2016-07-17 09:36:15	t	2016-08-01 17:12:22	2016-08-01 17:12:22	Submitted an iteration	\N	\N	f
307	27	python	hello-world	1	pending	54accbd6b8c8994582c47c47	2016-06-29 01:07:55	2016-06-29 01:07:55	f	2016-07-17 00:07:07	2016-07-17 00:07:07	Submitted an iteration	\N	\N	f
308	27	ruby	strain	2	done	9c993f2c9e649fb616bcf006	2016-06-27 04:41:27	2016-06-27 04:41:27	t	2016-08-08 11:26:47	2016-08-08 11:26:47	Submitted an iteration	\N	\N	f
309	27	javascript	hello-world	1	pending	d6ceb8ab49e72e6254c3bfda	2016-07-23 00:36:44	2016-07-23 00:36:44	f	2016-07-29 12:44:15	2016-07-29 12:44:15	Submitted an iteration	\N	\N	f
310	27	ruby	binary	2	\N	457f7bbd8a5443115a9648bd	2016-07-10 19:29:23	2016-07-10 19:29:23	f	2016-07-29 16:33:43	2016-07-29 16:33:43	Submitted an iteration	\N	\N	f
311	45	ruby	nth-prime	1	pending	03a6d2eb3023f5a39e4ba100	2016-03-18 07:46:02	2016-03-18 07:46:02	f	2016-06-29 04:19:37	2016-06-29 04:19:37	Submitted an iteration	\N	\N	f
312	45	python	space-age	1	pending	f1b823057919fe485a443c43	2016-01-11 12:44:57	2016-01-11 12:44:57	f	2016-06-11 19:22:09	2016-06-11 19:22:09	Submitted an iteration	\N	\N	f
313	45	javascript	hamming	1	\N	0d043c7d2549214e008a26fd	2016-03-03 02:31:53	2016-03-03 02:31:53	f	2016-07-17 18:30:12	2016-07-17 18:30:12	Submitted an iteration	2015-10-08 17:05:22.826027	\N	f
314	45	python	leap	1	hibernating	f2073b8c81b58e3def59e9c4	2016-06-06 20:40:06	2016-06-06 20:40:06	f	2016-07-24 00:28:43	2016-07-24 00:28:43	Submitted an iteration	\N	\N	f
315	45	scala	nucleotide-count	1	hibernating	dbd9be48f88ea0126a762f45	2016-06-13 03:45:54	2016-06-13 03:45:54	f	2016-06-16 09:25:12	2016-06-16 09:25:12	Submitted an iteration	\N	\N	f
316	45	perl5	etl	1	done	07d3d87ccdfcca743914b1e6	2016-06-27 18:32:26	2016-06-27 18:32:26	t	2016-07-15 12:19:37	2016-07-15 12:19:37	Submitted an iteration	\N	\N	f
317	45	csharp	leap	2	done	ffefbf952daf10c9dbdd71d2	2016-01-05 16:45:45	2016-01-05 16:45:45	t	2016-07-07 17:03:56	2016-07-07 17:03:56	Submitted an iteration	\N	\N	f
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 317, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, created_at, updated_at, onboarded_at, track_mentor, joined_as, api_secret, api_key, share_key) FROM stdin;
1	rikki-	rikki-@example.com	https://avatars.githubusercontent.com/u/8341419	8341419	svz941	2016-05-10 05:11:24.194147	2016-05-10 05:11:24.194147	\N	--- []\n	\N	\N	\N	\N
6	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg	-67656	jgn812	2016-05-10 14:23:26.222781	2016-05-10 14:23:26.222781	\N	--- []\n	\N	\N	\N	\N
7	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/joshhemsley/128.jpg	-2499	xqn177	2015-11-26 05:01:11.224467	2015-11-26 05:01:11.224467	\N	--- []\n	\N	\N	\N	\N
8	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg	-37469	kzj289	2016-07-14 16:39:38.225417	2016-07-14 16:39:38.225417	\N	--- []\n	\N	\N	\N	\N
10	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/g1sh/128.jpg	-16903	los966	2015-11-22 00:15:47.227111	2015-11-22 00:15:47.227111	\N	--- []\n	\N	\N	\N	\N
13	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg	-83169	skk630	2016-02-04 11:03:47.229856	2016-02-04 11:03:47.229856	\N	--- []\n	\N	\N	\N	\N
14	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg	-86291	sxf412	2015-12-20 01:14:37.230656	2015-12-20 01:14:37.230656	\N	--- []\n	\N	\N	\N	\N
16	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/SULiik/128.jpg	-22174	xds418	2016-07-16 21:02:24.239969	2016-07-16 21:02:24.239969	\N	--- []\n	\N	\N	\N	\N
17	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg	-27346	rzp519	2015-12-18 08:25:42.241492	2015-12-18 08:25:42.241492	\N	--- []\n	\N	\N	\N	\N
18	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg	-18799	qmj820	2016-07-06 01:40:41.242403	2016-07-06 01:40:41.242403	\N	--- []\n	\N	\N	\N	\N
19	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/VinThomas/128.jpg	-92856	mff511	2016-08-05 08:53:22.244066	2016-08-05 08:53:22.244066	\N	--- []\n	\N	\N	\N	\N
20	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/syropian/128.jpg	-63030	qyf297	2015-12-06 03:35:25.244996	2015-12-06 03:35:25.244996	\N	--- []\n	\N	\N	\N	\N
21	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg	-68142	muh292	2016-04-13 04:05:37.245889	2016-04-13 04:05:37.245889	\N	--- []\n	\N	\N	\N	\N
23	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tutsii159/128.jpg	-31791	gdi982	2015-12-16 20:16:31.247628	2015-12-16 20:16:31.247628	\N	--- []\n	\N	\N	\N	\N
24	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg	-23283	cxh138	2016-05-15 01:30:48.248605	2016-05-15 01:30:48.248605	\N	--- []\n	\N	\N	\N	\N
25	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg	-2774	cgu378	2016-05-12 18:06:56.250405	2016-05-12 18:06:56.250405	\N	--- []\n	\N	\N	\N	\N
26	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg	-93587	hyk481	2016-01-14 07:01:20.251921	2016-01-14 07:01:20.251921	\N	--- []\n	\N	\N	\N	\N
27	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nachtmeister/128.jpg	-55465	bld153	2016-06-27 00:57:12.253065	2016-06-27 00:57:12.253065	\N	--- []\n	\N	\N	\N	\N
30	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg	-46951	zcv884	2015-12-20 06:25:32.257055	2015-12-20 06:25:32.257055	\N	--- []\n	\N	\N	\N	\N
32	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dunenkoff/128.jpg	-18951	vge370	2016-04-13 18:53:08.259445	2016-04-13 18:53:08.259445	\N	--- []\n	\N	\N	\N	\N
34	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg	-1712	xpz381	2016-01-11 22:19:14.261244	2016-01-11 22:19:14.261244	\N	--- []\n	\N	\N	\N	\N
35	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg	-37100	gsk563	2015-12-23 16:49:40.261939	2015-12-23 16:49:40.261939	\N	--- []\n	\N	\N	\N	\N
36	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/_victa/128.jpg	-81089	xdj726	2016-01-21 04:19:44.262734	2016-01-21 04:19:44.262734	\N	--- []\n	\N	\N	\N	\N
37	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg	-86455	mgi277	2016-03-26 15:36:49.263462	2016-03-26 15:36:49.263462	\N	--- []\n	\N	\N	\N	\N
39	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg	-73211	uwq945	2016-03-03 21:02:37.266959	2016-03-03 21:02:37.266959	\N	--- []\n	\N	\N	\N	\N
41	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg	-33061	lns552	2016-04-03 02:47:12.269305	2016-04-03 02:47:12.269305	\N	--- []\n	\N	\N	\N	\N
42	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg	-21072	uuc882	2015-12-24 18:33:40.270398	2015-12-24 18:33:40.270398	\N	--- []\n	\N	\N	\N	\N
43	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/GavicoInd/128.jpg	-76131	lco544	2016-04-06 20:14:34.271698	2016-04-06 20:14:34.271698	\N	--- []\n	\N	\N	\N	\N
45	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/isacosta/128.jpg	-17899	gqk776	2015-12-13 04:09:08.274592	2015-12-13 04:09:08.274592	\N	--- []\n	\N	\N	\N	\N
47	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg	-79105	tor101	2015-11-17 14:02:12.277004	2015-11-17 14:02:12.277004	\N	--- []\n	\N	\N	\N	\N
11	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg	-89983	hrk427	2016-06-29 11:01:58.228061	2016-06-29 11:01:58.228061	2016-02-15 11:27:50	--- []\n	\N	\N	\N	\N
4	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg	-94873	xkj237	2015-12-17 05:11:38.220224	2015-12-17 05:11:38.220224	2016-03-22 04:17:10	---\n- javascript\n- erlang\n- elixir\n	\N	\N	\N	\N
15	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg	-20556	ugb941	2016-07-18 23:24:04.23835	2016-07-18 23:24:04.23835	2016-04-02 13:19:28	--- []\n	\N	\N	\N	\N
31	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tereshenkov/128.jpg	-45830	upm134	2015-11-26 06:17:10.258282	2015-11-26 06:17:10.258282	2016-03-03 13:58:25	--- []\n	\N	\N	\N	\N
22	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/id835559/128.jpg	-17849	zwm487	2016-02-22 11:08:56.246659	2016-02-22 11:08:56.246659	2016-02-29 20:51:24	--- []\n	\N	\N	\N	\N
40	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg	-75835	hwj971	2016-02-22 03:14:31.268372	2016-02-22 03:14:31.268372	2016-03-24 01:09:19	--- []\n	\N	\N	\N	\N
12	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ZacharyZorbas/128.jpg	-77757	mvq435	2016-07-05 04:21:04.22894	2016-07-05 04:21:04.22894	2016-03-06 05:42:48	--- []\n	\N	\N	\N	\N
5	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg	-91493	guq448	2016-04-26 20:05:41.221573	2016-04-26 20:05:41.221573	2016-03-06 04:33:06	---\n- python\n	\N	\N	\N	\N
9	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg	-39738	lqi495	2016-05-20 04:02:50.226226	2016-05-20 04:02:50.226226	2016-02-17 04:13:30	--- []\n	\N	\N	\N	\N
44	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/randomlies/128.jpg	-97282	aie589	2016-01-25 11:23:05.273382	2016-01-25 11:23:05.273382	2016-03-22 22:31:04	--- []\n	\N	\N	\N	\N
29	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg	-24544	vot399	2016-07-15 17:40:56.255618	2016-07-15 17:40:56.255618	2016-03-14 06:47:29	--- []\n	\N	\N	\N	\N
46	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg	-92911	njp405	2016-03-23 04:43:43.275854	2016-03-23 04:43:43.275854	2016-02-10 09:34:17	--- []\n	\N	\N	\N	\N
28	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mattdetails/128.jpg	-7926	trp904	2016-06-23 02:57:38.2543	2016-06-23 02:57:38.2543	2016-03-21 14:58:53	--- []\n	\N	\N	\N	\N
3	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg	-88070	aaz662	2016-05-07 17:28:31.218988	2016-05-07 17:28:31.218988	2016-02-02 13:15:36	---\n- ruby\n- haskell\n	\N	\N	\N	\N
49	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg	-60682	zlu395	2016-03-21 04:20:09.278968	2016-03-21 04:20:09.278968	\N	--- []\n	\N	\N	\N	\N
2	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg	-80948	amp262	2016-03-11 01:59:19.211831	2016-03-11 01:59:19.211831	2016-02-13 07:38:59	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	\N	\N	\N	\N
48	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/andrewcohen/128.jpg	-66165	iwb980	2016-02-01 11:45:25.277977	2016-02-01 11:45:25.277977	2016-03-11 21:35:44	--- []\n	\N	\N	\N	\N
33	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg	-375	stx936	2016-04-23 06:36:49.260637	2016-04-23 06:36:49.260637	2016-03-03 00:13:50	--- []\n	\N	\N	\N	\N
38	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/pcridesagain/128.jpg	-9504	qjg700	2016-02-27 07:55:51.266203	2016-02-27 07:55:51.266203	2016-02-08 22:21:50	--- []\n	\N	\N	\N	\N
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 49, true);


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY views (id, user_id, exercise_id, last_viewed_at, created_at, updated_at) FROM stdin;
\.


--
-- Name: views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('views_id_seq', 1, false);


--
-- PostgreSQL database dump complete
--

