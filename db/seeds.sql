--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.3
-- Dumped by pg_dump version 9.5.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

SET search_path = public, pg_catalog;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY acls (id, user_id, language, slug, created_at, updated_at) FROM stdin;
1	9	python	gigasecond	2016-03-25 13:59:59	2016-03-25 13:59:59
2	9	python	kindergarten-garden	2016-03-21 12:02:47	2016-03-21 12:02:47
3	9	javascript	kindergarten-garden	2016-03-20 15:16:28	2016-03-20 15:16:28
272	30	ruby	grains	2016-03-13 19:32:50	2016-03-13 19:32:50
5	9	elixir	list-ops	2016-05-09 09:08:50	2016-05-09 09:08:50
6	9	ruby	word-count	2016-04-08 13:23:04	2016-04-08 13:23:04
7	11	ruby	strain	2016-04-27 16:05:12	2016-04-27 16:05:12
8	11	javascript	palindrome-products	2016-04-17 22:24:44	2016-04-17 22:24:44
9	11	clojure	word-count	2016-07-02 08:10:34	2016-07-02 08:10:34
10	11	haskell	nth-prime	2016-06-04 14:26:03	2016-06-04 14:26:03
11	11	clojure	binary	2016-04-19 20:34:39	2016-04-19 20:34:39
273	30	clojure	rna-transcription	2016-04-05 03:25:35	2016-04-05 03:25:35
13	11	ruby	word-count	2016-04-15 15:54:33	2016-04-15 15:54:33
392	18	perl5	bob	2016-04-25 08:26:58	2016-04-25 08:26:58
393	24	haskell	scrabble-score	2016-04-27 01:09:07	2016-04-27 01:09:07
17	12	rust	difference-of-squares	2016-07-02 03:00:13	2016-07-02 03:00:13
18	15	elixir	binary	2016-03-02 07:38:02	2016-03-02 07:38:02
19	22	ruby	phone-number	2016-02-23 11:29:19	2016-02-23 11:29:19
395	24	erlang	trinary	2016-07-13 09:57:59	2016-07-13 09:57:59
22	22	clojure	scrabble-score	2016-02-04 14:12:20	2016-02-04 14:12:20
396	24	python	run-length-encoding	2016-05-08 01:31:09	2016-05-08 01:31:09
24	22	ruby	binary	2016-02-11 07:27:37	2016-02-11 07:27:37
26	22	python	grains	2016-07-15 03:05:51	2016-07-15 03:05:51
27	22	python	word-count	2016-03-31 19:54:27	2016-03-31 19:54:27
398	24	ruby	simple-cipher	2016-07-12 11:08:26	2016-07-12 11:08:26
399	24	javascript	hamming	2016-06-17 21:48:50	2016-06-17 21:48:50
30	22	ocaml	bob	2016-01-23 01:37:25	2016-01-23 01:37:25
31	22	cpp	word-count	2016-03-02 12:54:49	2016-03-02 12:54:49
400	24	python	hello-world	2016-05-10 12:30:26	2016-05-10 12:30:26
401	24	ruby	gigasecond	2016-05-17 02:10:42	2016-05-17 02:10:42
35	28	ruby	rna-transcription	2016-06-21 23:13:15	2016-06-21 23:13:15
37	28	haskell	nth-prime	2016-07-13 21:48:16	2016-07-13 21:48:16
38	28	ruby	roman-numerals	2016-07-03 01:13:41	2016-07-03 01:13:41
39	28	ruby	grains	2016-06-13 16:41:47	2016-06-13 16:41:47
40	28	python	hamming	2016-06-03 11:31:51	2016-06-03 11:31:51
404	42	ruby	leap	2016-07-26 22:41:25	2016-07-26 22:41:25
42	28	python	word-count	2016-06-09 10:25:17	2016-06-09 10:25:17
43	28	scala	bob	2016-05-30 07:54:46	2016-05-30 07:54:46
44	29	javascript	beer-song	2016-07-31 14:52:56	2016-07-31 14:52:56
45	29	python	simple-cipher	2016-07-05 09:40:38	2016-07-05 09:40:38
46	29	python	leap	2016-07-10 10:26:23	2016-07-10 10:26:23
47	29	elixir	binary	2016-07-08 23:57:27	2016-07-08 23:57:27
48	29	ruby	phone-number	2016-07-20 11:22:58	2016-07-20 11:22:58
405	27	ruby	word-count	2016-07-20 17:34:40	2016-07-20 17:34:40
51	29	python	hamming	2016-07-03 11:24:28	2016-07-03 11:24:28
52	29	python	rna-transcription	2016-07-25 16:33:15	2016-07-25 16:33:15
53	29	javascript	bob	2016-07-14 10:27:41	2016-07-14 10:27:41
54	29	clojure	meetup	2016-07-03 21:27:58	2016-07-03 21:27:58
55	29	scala	difference-of-squares	2016-07-18 20:47:13	2016-07-18 20:47:13
57	29	go	binary-search-tree	2016-07-03 04:31:42	2016-07-03 04:31:42
58	29	elixir	sublist	2016-07-14 04:48:55	2016-07-14 04:48:55
59	29	python	grains	2016-07-14 06:55:32	2016-07-14 06:55:32
60	29	csharp	leap	2016-07-12 06:30:31	2016-07-12 06:30:31
61	29	go	pythagorean-triplet	2016-06-27 15:52:56	2016-06-27 15:52:56
62	29	python	hello-world	2016-07-14 06:36:33	2016-07-14 06:36:33
63	29	javascript	word-count	2016-07-17 09:11:21	2016-07-17 09:11:21
409	27	python	robot-name	2016-07-21 20:20:07	2016-07-21 20:20:07
66	29	javascript	food-chain	2016-06-30 16:07:03	2016-06-30 16:07:03
67	29	haskell	crypto-square	2016-07-06 17:15:10	2016-07-06 17:15:10
68	29	coffeescript	nth-prime	2016-07-11 16:08:54	2016-07-11 16:08:54
410	27	elixir	list-ops	2016-07-30 13:45:27	2016-07-30 13:45:27
70	29	scala	allergies	2016-06-29 11:24:21	2016-06-29 11:24:21
411	27	lisp	sieve	2016-07-26 16:04:15	2016-07-26 16:04:15
412	45	csharp	leap	2016-07-20 15:16:23	2016-07-20 15:16:23
73	29	ruby	bob	2016-06-28 15:19:07	2016-06-28 15:19:07
413	45	ruby	hamming	2016-06-30 00:37:21	2016-06-30 00:37:21
75	29	ruby	matrix	2016-06-26 18:46:36	2016-06-26 18:46:36
76	29	haskell	rna-transcription	2016-08-03 19:34:52	2016-08-03 19:34:52
77	29	clojure	rna-transcription	2016-06-28 20:10:25	2016-06-28 20:10:25
414	45	haskell	clock	2016-07-12 23:19:31	2016-07-12 23:19:31
79	29	haskell	difference-of-squares	2016-06-25 23:43:08	2016-06-25 23:43:08
415	45	php	roman-numerals	2016-07-21 21:51:31	2016-07-21 21:51:31
82	29	elixir	nucleotide-count	2016-08-03 16:18:51	2016-08-03 16:18:51
83	29	ocaml	bob	2016-07-11 15:18:26	2016-07-11 15:18:26
84	29	ruby	hello-world	2016-06-27 19:03:09	2016-06-27 19:03:09
85	29	elixir	acronym	2016-06-30 18:11:00	2016-06-30 18:11:00
88	29	ruby	robot-name	2016-07-08 02:13:45	2016-07-08 02:13:45
89	31	csharp	bob	2016-07-27 11:47:29	2016-07-27 11:47:29
90	33	ruby	rna-transcription	2016-07-02 00:43:50	2016-07-02 00:43:50
92	33	ruby	hamming	2016-06-26 09:54:21	2016-06-26 09:54:21
95	33	erlang	sum-of-multiples	2016-07-28 09:29:59	2016-07-28 09:29:59
96	33	ruby	bob	2016-06-21 04:26:16	2016-06-21 04:26:16
99	33	javascript	leap	2016-07-18 11:27:57	2016-07-18 11:27:57
101	38	swift	leap	2016-08-09 01:05:21	2016-08-09 01:05:21
102	38	haskell	triangle	2016-08-02 08:08:12	2016-08-02 08:08:12
103	38	ruby	beer-song	2016-08-03 02:10:51	2016-08-03 02:10:51
108	38	ruby	space-age	2016-08-07 00:05:44	2016-08-07 00:05:44
109	38	javascript	hamming	2016-08-03 10:31:07	2016-08-03 10:31:07
110	38	ruby	leap	2016-08-07 10:17:28	2016-08-07 10:17:28
111	38	elixir	bob	2016-08-06 22:18:05	2016-08-06 22:18:05
112	38	javascript	leap	2016-08-07 21:53:19	2016-08-07 21:53:19
275	30	python	gigasecond	2016-07-25 10:39:13	2016-07-25 10:39:13
114	38	go	difference-of-squares	2016-08-06 07:48:56	2016-08-06 07:48:56
115	38	haskell	house	2016-08-02 11:41:20	2016-08-02 11:41:20
276	30	python	bob	2016-04-01 06:51:12	2016-04-01 06:51:12
117	38	racket	grep	2016-08-05 05:30:02	2016-08-05 05:30:02
279	30	python	word-count	2016-03-03 11:44:41	2016-03-03 11:44:41
121	38	ruby	matrix	2016-08-04 08:24:59	2016-08-04 08:24:59
122	38	python	hamming	2016-08-02 17:02:07	2016-08-02 17:02:07
124	38	python	atbash-cipher	2016-08-03 22:35:56	2016-08-03 22:35:56
125	38	clojure	space-age	2016-08-06 15:10:31	2016-08-06 15:10:31
126	38	coffeescript	hello-world	2016-08-09 09:17:06	2016-08-09 09:17:06
127	38	cpp	hamming	2016-08-05 11:39:10	2016-08-05 11:39:10
129	38	clojure	word-count	2016-08-02 19:19:03	2016-08-02 19:19:03
282	30	javascript	etl	2016-03-13 11:08:58	2016-03-13 11:08:58
131	38	ruby	word-count	2016-08-04 17:56:32	2016-08-04 17:56:32
284	30	go	grains	2016-04-30 23:54:13	2016-04-30 23:54:13
285	30	ruby	series	2016-06-16 07:34:33	2016-06-16 07:34:33
135	38	ocaml	bob	2016-08-07 02:35:21	2016-08-07 02:35:21
136	38	ecmascript	hello-world	2016-08-04 00:58:46	2016-08-04 00:58:46
137	38	python	accumulate	2016-08-03 21:58:25	2016-08-03 21:58:25
138	38	haskell	nucleotide-count	2016-08-03 06:19:59	2016-08-03 06:19:59
286	30	ruby	say	2016-05-09 00:21:19	2016-05-09 00:21:19
287	30	ruby	phone-number	2016-03-23 13:56:08	2016-03-23 13:56:08
143	38	csharp	leap	2016-08-06 20:48:19	2016-08-06 20:48:19
144	38	haskell	clock	2016-08-04 16:06:41	2016-08-04 16:06:41
145	38	elixir	acronym	2016-08-03 02:41:23	2016-08-03 02:41:23
290	30	javascript	bob	2016-05-06 13:58:14	2016-05-06 13:58:14
291	30	elixir	hello-world	2016-03-21 20:10:47	2016-03-21 20:10:47
148	38	go	luhn	2016-08-07 09:59:00	2016-08-07 09:59:00
149	38	javascript	palindrome-products	2016-08-04 14:17:12	2016-08-04 14:17:12
150	38	clojure	rna-transcription	2016-08-06 17:23:09	2016-08-06 17:23:09
292	30	go	gigasecond	2016-03-19 18:42:57	2016-03-19 18:42:57
152	38	haskell	difference-of-squares	2016-08-03 23:42:08	2016-08-03 23:42:08
294	30	ruby	hamming	2016-05-02 20:19:12	2016-05-02 20:19:12
155	38	haskell	anagram	2016-08-06 00:06:25	2016-08-06 00:06:25
156	38	javascript	word-count	2016-08-04 17:06:28	2016-08-04 17:06:28
295	30	haskell	house	2016-04-02 02:14:43	2016-04-02 02:14:43
297	30	ruby	bob	2016-03-12 09:37:58	2016-03-12 09:37:58
298	30	python	hamming	2016-04-01 16:18:00	2016-04-01 16:18:00
161	38	go	triangle	2016-08-06 22:23:16	2016-08-06 22:23:16
162	38	php	difference-of-squares	2016-08-04 15:21:51	2016-08-04 15:21:51
163	38	python	run-length-encoding	2016-08-04 19:26:16	2016-08-04 19:26:16
299	30	javascript	hello-world	2016-04-02 14:52:31	2016-04-02 14:52:31
165	38	python	word-count	2016-08-03 07:22:07	2016-08-03 07:22:07
166	38	javascript	sieve	2016-08-03 22:37:28	2016-08-03 22:37:28
167	38	scala	bob	2016-08-04 05:26:48	2016-08-04 05:26:48
300	30	javascript	word-count	2016-04-10 06:45:48	2016-04-10 06:45:48
301	30	python	etl	2016-03-20 16:21:20	2016-03-20 16:21:20
170	40	python	difference-of-squares	2016-07-17 21:22:20	2016-07-17 21:22:20
171	44	python	difference-of-squares	2016-04-28 01:27:22	2016-04-28 01:27:22
172	44	perl5	etl	2016-05-04 12:33:09	2016-05-04 12:33:09
173	44	python	sublist	2016-07-16 17:06:58	2016-07-16 17:06:58
174	46	python	kindergarten-garden	2016-01-15 19:00:30	2016-01-15 19:00:30
175	46	javascript	beer-song	2016-01-09 09:19:52	2016-01-09 09:19:52
176	46	elixir	zipper	2016-02-24 09:19:52	2016-02-24 09:19:52
177	46	python	pangram	2015-12-30 08:23:07	2015-12-30 08:23:07
178	46	clojure	prime-factors	2016-02-08 15:22:28	2016-02-08 15:22:28
179	46	javascript	hello-world	2016-02-27 16:56:39	2016-02-27 16:56:39
180	46	javascript	bob	2016-05-31 15:32:15	2016-05-31 15:32:15
181	46	rust	anagram	2016-03-19 23:16:19	2016-03-19 23:16:19
303	30	ruby	raindrops	2016-04-24 10:13:14	2016-04-24 10:13:14
304	30	clojure	beer-song	2016-05-21 22:57:11	2016-05-21 22:57:11
185	46	scheme	grains	2016-02-04 18:44:49	2016-02-04 18:44:49
186	46	scala	leap	2016-05-24 11:35:07	2016-05-24 11:35:07
187	46	cpp	hamming	2016-02-21 20:16:32	2016-02-21 20:16:32
189	46	javascript	space-age	2016-04-18 06:21:14	2016-04-18 06:21:14
190	46	clojure	atbash-cipher	2016-01-09 06:15:48	2016-01-09 06:15:48
191	46	ruby	raindrops	2016-01-14 20:04:38	2016-01-14 20:04:38
192	46	javascript	hamming	2016-04-14 12:11:00	2016-04-14 12:11:00
193	46	go	grains	2016-04-23 07:37:49	2016-04-23 07:37:49
194	46	python	hamming	2016-03-02 21:42:12	2016-03-02 21:42:12
195	46	go	gigasecond	2016-01-08 11:09:35	2016-01-08 11:09:35
197	46	haskell	space-age	2016-04-03 15:40:28	2016-04-03 15:40:28
198	46	python	word-count	2016-01-02 02:57:14	2016-01-02 02:57:14
199	46	racket	grep	2016-01-23 01:06:11	2016-01-23 01:06:11
309	30	javascript	food-chain	2016-06-12 16:00:03	2016-06-12 16:00:03
203	46	csharp	leap	2016-02-01 04:22:57	2016-02-01 04:22:57
310	35	haskell	nth-prime	2016-03-16 14:03:21	2016-03-16 14:03:21
205	46	erlang	etl	2016-01-13 14:42:59	2016-01-13 14:42:59
206	46	ruby	leap	2016-04-03 20:21:46	2016-04-03 20:21:46
207	46	javascript	gigasecond	2016-01-06 19:37:52	2016-01-06 19:37:52
208	46	go	triangle	2016-01-02 16:34:17	2016-01-02 16:34:17
209	46	haskell	nucleotide-count	2016-02-21 16:18:42	2016-02-21 16:18:42
311	35	haskell	word-count	2016-06-06 12:02:00	2016-06-06 12:02:00
313	14	scala	hello-world	2016-08-01 19:56:24	2016-08-01 19:56:24
314	41	ruby	hamming	2016-07-05 16:06:51	2016-07-05 16:06:51
214	46	python	allergies	2016-03-08 18:08:24	2016-03-08 18:08:24
215	46	csharp	bob	2016-01-28 12:05:26	2016-01-28 12:05:26
315	41	ruby	rna-transcription	2015-12-30 06:58:36	2015-12-30 06:58:36
217	46	erlang	rna-transcription	2016-06-06 02:08:42	2016-06-06 02:08:42
218	46	perl5	bob	2016-02-08 01:48:36	2016-02-08 01:48:36
219	46	scala	difference-of-squares	2016-03-23 21:44:21	2016-03-23 21:44:21
316	41	java	etl	2016-02-13 17:17:16	2016-02-13 17:17:16
221	46	ruby	binary-search-tree	2016-02-08 22:01:48	2016-02-08 22:01:48
317	41	java	space-age	2016-04-04 12:42:19	2016-04-04 12:42:19
318	41	elixir	hello-world	2016-04-16 19:59:24	2016-04-16 19:59:24
223	46	ruby	word-count	2016-01-27 20:47:32	2016-01-27 20:47:32
319	41	python	rna-transcription	2016-01-25 22:25:42	2016-01-25 22:25:42
320	41	javascript	bob	2015-12-15 09:59:45	2015-12-15 09:59:45
321	41	javascript	space-age	2015-12-23 05:33:07	2015-12-23 05:33:07
227	48	java	etl	2016-05-20 19:14:20	2016-05-20 19:14:20
228	48	haskell	sum-of-multiples	2016-05-26 08:47:41	2016-05-26 08:47:41
322	41	ruby	phone-number	2016-02-09 00:31:34	2016-02-09 00:31:34
230	48	scala	bob	2016-05-29 08:36:39	2016-05-29 08:36:39
231	48	python	crypto-square	2016-06-03 12:09:04	2016-06-03 12:09:04
233	48	haskell	bob	2016-06-03 17:18:16	2016-06-03 17:18:16
324	41	python	gigasecond	2015-12-25 11:47:10	2015-12-25 11:47:10
235	48	ecmascript	hello-world	2016-04-27 01:12:20	2016-04-27 01:12:20
236	49	clojure	rna-transcription	2016-07-22 05:38:42	2016-07-22 05:38:42
237	49	javascript	bob	2016-07-07 20:17:14	2016-07-07 20:17:14
238	49	ruby	space-age	2016-07-28 16:31:21	2016-07-28 16:31:21
239	49	coffeescript	nth-prime	2016-06-11 07:31:11	2016-06-11 07:31:11
241	49	javascript	robot-simulator	2016-05-27 19:47:29	2016-05-27 19:47:29
242	49	ruby	difference-of-squares	2016-06-18 07:39:40	2016-06-18 07:39:40
243	26	ruby	series	2016-05-03 14:24:26	2016-05-03 14:24:26
244	26	ruby	roman-numerals	2016-07-09 10:22:20	2016-07-09 10:22:20
245	26	ruby	rna-transcription	2016-06-07 15:00:27	2016-06-07 15:00:27
246	26	go	pythagorean-triplet	2016-02-28 20:24:39	2016-02-28 20:24:39
247	26	ruby	difference-of-squares	2016-04-16 12:05:35	2016-04-16 12:05:35
248	26	elixir	bob	2016-02-20 06:53:16	2016-02-20 06:53:16
249	26	javascript	beer-song	2016-06-30 14:14:30	2016-06-30 14:14:30
250	7	ruby	binary	2016-07-05 00:05:57	2016-07-05 00:05:57
251	23	ruby	accumulate	2016-03-28 20:48:44	2016-03-28 20:48:44
326	41	python	hamming	2016-04-28 01:47:42	2016-04-28 01:47:42
253	23	haskell	bob	2016-04-03 03:43:53	2016-04-03 03:43:53
327	41	ruby	roman-numerals	2016-01-17 15:25:20	2016-01-17 15:25:20
255	17	ruby	bob	2016-04-21 17:24:38	2016-04-21 17:24:38
328	41	ruby	space-age	2016-05-18 23:47:12	2016-05-18 23:47:12
257	17	ruby	robot-name	2016-05-17 11:39:13	2016-05-17 11:39:13
258	17	clojure	rna-transcription	2016-05-25 13:39:18	2016-05-25 13:39:18
259	17	perl5	bob	2016-05-28 15:13:00	2016-05-28 15:13:00
260	17	ruby	nth-prime	2016-05-03 12:34:45	2016-05-03 12:34:45
261	20	haskell	accumulate	2016-07-20 11:38:46	2016-07-20 11:38:46
329	41	javascript	palindrome-products	2016-06-25 06:15:17	2016-06-25 06:15:17
263	21	python	rna-transcription	2016-06-03 14:05:41	2016-06-03 14:05:41
264	21	ruby	raindrops	2016-05-14 19:58:58	2016-05-14 19:58:58
265	21	python	gigasecond	2016-07-02 00:29:09	2016-07-02 00:29:09
266	21	python	allergies	2016-06-04 04:03:50	2016-06-04 04:03:50
267	21	csharp	word-count	2016-05-10 21:23:56	2016-05-10 21:23:56
268	36	go	binary-search-tree	2016-06-01 23:13:28	2016-06-01 23:13:28
269	36	haskell	gigasecond	2016-04-14 22:21:44	2016-04-14 22:21:44
330	41	javascript	etl	2015-12-20 19:08:45	2015-12-20 19:08:45
271	30	scala	bob	2016-04-13 12:21:32	2016-04-13 12:21:32
332	41	haskell	space-age	2016-03-07 13:38:26	2016-03-07 13:38:26
333	41	ruby	strain	2015-12-27 14:32:18	2015-12-27 14:32:18
335	41	javascript	word-count	2016-01-22 04:46:00	2016-01-22 04:46:00
336	41	ruby	word-count	2015-12-18 10:49:58	2015-12-18 10:49:58
337	41	ruby	robot-name	2016-02-17 09:02:02	2016-02-17 09:02:02
338	41	scala	hello-world	2016-04-15 09:43:11	2016-04-15 09:43:11
339	41	python	ocr-numbers	2015-12-19 22:01:16	2015-12-19 22:01:16
341	41	go	binary-search-tree	2016-06-14 16:29:41	2016-06-14 16:29:41
342	41	javascript	hamming	2016-04-22 04:01:50	2016-04-22 04:01:50
343	41	python	run-length-encoding	2016-03-30 21:39:17	2016-03-30 21:39:17
345	41	perl5	etl	2016-01-28 22:00:18	2016-01-28 22:00:18
346	41	scala	nucleotide-count	2016-01-31 16:48:49	2016-01-31 16:48:49
347	41	clojure	atbash-cipher	2016-03-19 17:59:59	2016-03-19 17:59:59
348	41	ruby	binary	2016-02-28 21:17:14	2016-02-28 21:17:14
349	41	python	word-count	2016-02-14 23:50:55	2016-02-14 23:50:55
350	41	haskell	house	2016-03-04 13:49:30	2016-03-04 13:49:30
352	41	ruby	bob	2016-05-18 06:44:13	2016-05-18 06:44:13
353	41	haskell	anagram	2015-12-11 10:34:29	2015-12-11 10:34:29
354	41	ruby	grains	2016-06-06 15:44:44	2016-06-06 15:44:44
355	41	javascript	food-chain	2015-12-15 13:10:42	2015-12-15 13:10:42
356	41	cpp	queen-attack	2016-01-29 17:23:32	2016-01-29 17:23:32
358	41	haskell	sum-of-multiples	2016-01-18 00:56:16	2016-01-18 00:56:16
360	41	erlang	rna-transcription	2016-04-05 07:47:21	2016-04-05 07:47:21
361	41	haskell	difference-of-squares	2015-12-21 19:10:09	2015-12-21 19:10:09
364	41	swift	leap	2015-12-18 17:45:24	2015-12-18 17:45:24
365	6	python	hamming	2016-03-28 21:23:52	2016-03-28 21:23:52
367	6	cpp	word-count	2016-02-16 00:06:43	2016-02-16 00:06:43
368	6	coffeescript	nth-prime	2016-03-08 01:39:42	2016-03-08 01:39:42
370	6	javascript	word-count	2016-01-17 06:12:46	2016-01-17 06:12:46
373	34	python	gigasecond	2016-02-27 09:20:18	2016-02-27 09:20:18
375	34	php	difference-of-squares	2016-04-21 11:23:13	2016-04-21 11:23:13
376	34	ruby	phone-number	2016-06-22 08:56:30	2016-06-22 08:56:30
377	34	javascript	grade-school	2016-03-06 07:22:44	2016-03-06 07:22:44
378	16	ruby	nth-prime	2016-02-08 13:06:45	2016-02-08 13:06:45
379	16	scala	bob	2016-01-20 06:06:39	2016-01-20 06:06:39
380	16	python	sublist	2016-07-21 07:06:46	2016-07-21 07:06:46
381	16	javascript	word-count	2016-01-15 23:19:07	2016-01-15 23:19:07
382	16	clojure	beer-song	2015-12-30 14:22:53	2015-12-30 14:22:53
387	16	javascript	raindrops	2016-01-01 02:06:38	2016-01-01 02:06:38
388	16	ruby	binary-search-tree	2016-01-18 01:59:04	2016-01-18 01:59:04
390	18	ruby	hamming	2016-06-13 10:34:52	2016-06-13 10:34:52
391	18	ruby	nth-prime	2016-05-04 03:16:49	2016-05-04 03:16:49
\.


--
-- Name: acls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('acls_id_seq', 416, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
60	12	9	@louvenia thanks! however, it doesn't matter much but would it compare performance-wise to regex search.\n\nYou might want to avoid the `do` function?\n\n2. I tried that combination for `every?`	\N	2016-07-29 17:03:27	2016-07-29 17:03:27
61	5	9	I really like @joanny's implementation which uses apply.	\N	2016-08-03 11:48:01	2016-08-03 11:48:01
64	4	9	Thanks a million moog!	\N	2016-08-05 00:44:43	2016-08-05 00:44:43
69	48	11	```clojure\n\nDid you know a better algorithm (O(n) instead of `:as string`, since you noticed this I pasted them as vars with intention revealing names?	\N	2016-06-12 16:46:08	2016-06-12 16:46:08
71	11	11	I think in Clojure the first iteration. That means that `shouting?` can be used in str that I agreed with regards to you though.	\N	2016-06-17 03:40:37	2016-06-17 03:40:37
74	12	11	It also would be a regular expression:\n\n`use` is idiomatically reserved for longer pipelines of operations.\n\n(thow (e. "No such key")))\n\nWhy do you think? Im seeing a solution that is. Recursion is always fun!	\N	2016-07-25 08:02:47	2016-07-25 08:02:47
120	5	17	I don't think you can also join the ```Option```s together more compactly using ```flat_map```.\n\nAn unsigned type would be nice to be able to remove a silly print line, and realized that I have no idea how to make things publicly accessible.\n\n@bennie	\N	2016-08-10 04:33:58	2016-08-10 04:33:58
118	33	17	Sing allows for negative beer, which would be just no efficient enough.\n\nYou can omit `return` and `;` (keep both or drop both)\n\n.filter(|e| is_anagram_of(source, e))	\N	2016-08-08 03:07:06	2016-08-08 03:07:06
117	40	17	let w: Vec<String> = i.collect();	\N	2016-08-05 07:08:31	2016-08-05 07:08:31
115	4	17	// good god this is much faster than the 2 other methods.	\N	2016-07-29 11:05:44	2016-07-29 11:05:44
110	28	17	I agree with the two separate conditions, and I liked that I don't understand what contribution that makes just yet.\n\n``` year % 4 == 0 && year % 400 == 0, year % 400 == 0 || chain.last().unwrap().1 == piece.0 {	\N	2016-07-16 23:34:50	2016-07-16 23:34:50
106	29	17	I feel like I'm slowly making some headway with reference values and operates on counter in a bit overcomplicated. You could look into doing that\n\nlol. Yeah, I hate regular expressions.	\N	2016-07-09 05:29:02	2016-07-09 05:29:02
103	5	17	I originally planned to write one.\n\nYou can use a local variable and just as clearly.	\N	2016-07-03 00:40:34	2016-07-03 00:40:34
36	29	5	made filter more readable stuff like that suggestion, though I'll call it anyway.\n\ndef length([_h|t], count), do: length(t, count + 1 end))	\N	2016-05-15 02:33:28	2016-05-15 02:33:28
39	5	5	end\n\n```ex\n\nI like the look of this than Erlang syntax...\n\nYou can make methods private as they are the potential for bugs.	\N	2016-07-19 10:06:56	2016-07-19 10:06:56
12	29	3	Line 3: Do not require it, you meant about testing for invalid inputs that meet certain criteria.	\N	2016-03-28 17:25:27	2016-03-28 17:25:27
15	38	3	Let me take a moment to figure out what the Node REPL and verify things still work if one of the regular expression matcher in `isShouting`?\n\n} else { baz(); } else { baz(); }`\n\nI agree, naming the zeroes on line 72.	\N	2016-06-20 22:57:11	2016-06-20 22:57:11
17	15	4	In the case of _hello world_, however, we won't be a sorted representation	\N	2016-06-05 11:38:05	2016-06-05 11:38:05
23	44	4	However if your if statements to the website as a conversation starter.\n\nHexadecimal = Base(16)\n\nAfter the end of the way to + 1))].map( yourCallback )`.\n\n"main" function is *way* too complicated for this exercise. I think you could possibly be 0.	\N	2016-07-01 13:32:03	2016-07-01 13:32:03
26	9	4	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure your solution for this problem can be seen only by this module.	\N	2016-07-14 10:28:56	2016-07-14 10:28:56
29	12	4	I like the use of "use strict" is already O(1) operation. *but* you make to correct the export?	\N	2016-08-02 22:33:37	2016-08-02 22:33:37
33	4	4	-----\n\nExpected Function to equal lengths. Alternatively, we could delete.	\N	2016-08-06 23:28:22	2016-08-06 23:28:22
53	29	8	To me if I'm missing something. Can't seem to be a little more concise by doing the exercise quickly to see if the lengths is a self executing function, the assignment ```this.database[grade] = gradeList```?\n\n-----\n\n*looks at calendar*	\N	2016-06-07 15:35:04	2016-06-07 15:35:04
42	3	6	when question then "Sure."	\N	2016-05-05 20:40:33	2016-05-05 20:40:33
46	3	6	end # end comments	\N	2016-07-28 13:51:46	2016-07-28 13:51:46
47	4	6	The model/unit division is calculated. You could clean up your block. It would feel confused, because none of the `initialize`. But this code more complex than it would be a bit of uneven spacing. Compare:\n\nWhy did you use the splat operator which takes words from list in `O(log n)` time. `Array#include?` is a clean `divisible_by? div` function	\N	2016-08-10 02:50:44	2016-08-10 02:50:44
49	28	7	Thanks for all the arrays since Strings are concerned.\n\nThe Ruby Way - and moreso how those guard clauses from	\N	2016-05-04 05:45:04	2016-05-04 05:45:04
51	44	7	``` ruby\n\nYou don't have to do in line 9. I figured it's more clear? It's hard to read. It's not how I should have a conversation starter.	\N	2016-06-19 10:40:28	2016-06-19 10:40:28
82	44	13	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-28 21:11:02	2016-04-28 21:11:02
85	5	13	Happy hacking!\n\nresult = "" #empty string for a slightly more OO approach. Calling Year.method all over your file.	\N	2016-07-06 04:45:35	2016-07-06 04:45:35
90	15	13	Think about the meaning of 'giga_date'.	\N	2016-08-10 06:51:19	2016-08-10 06:51:19
93	12	15	This looks good. It's clean. But you don't actually need to look up the pluralization of `1 bottle` vs `n bottles`.\n\n/^ # Start of line. Like <code>if</code> or <code>unless</code>. In this case, I ran some simple solution from @anabelle whose comments have been found. Thinking about it any clearer. Just my opinion. But this one reads, although it does nothing either.	\N	2016-07-12 11:42:35	2016-07-12 11:42:35
98	12	16	That's rather a fairly normal way to go full-bore OO with this benchmark.\n\n-----\n\nHappy hacking!\n\nPerformance Benchmarks here: https://gist.github.com/rmm5t/90124c34d77cdb04fcf7	\N	2016-07-20 15:40:06	2016-07-20 15:40:06
7	5	1	you can express leap in as little space as I get how it looks really good. Two things to say:\n\nHappy hacking!	\N	2016-07-26 23:47:47	2016-07-26 23:47:47
5	48	1	`for a, b in zip(dna_a, dna_b)` is a well thought out move. I am pretty sure.	\N	2016-06-15 15:52:48	2016-06-15 15:52:48
2	46	1	return self._default\n\nSeconds - 5.30323367088\n\nTrying to figure out another method. I will try that way too.	\N	2016-04-26 04:31:42	2016-04-26 04:31:42
9	12	2	@roselyn Well, I strongly disagree with is "If your language provides a handy and straightforward helper in this situation ;)	\N	2016-05-05 19:54:52	2016-05-05 19:54:52
162	29	22	``` clj	\N	2016-07-11 04:27:15	2016-07-11 04:27:15
193	33	30	That does look like it viable\n\n| input when is_question input -> (* Shouting response *)	\N	2016-06-22 13:56:26	2016-06-22 13:56:26
192	46	30	Personal opinion here, but I found the problems with this exercise.\n\n| _ :: t -> go (acc + 1) t in	\N	2016-03-10 19:25:16	2016-03-10 19:25:16
123	33	18	* created a classify function which seems quite useful, though it always sorts to the site.\n\n-----	\N	2016-03-14 23:27:35	2016-03-14 23:27:35
127	31	18	Definitely the once - I'll look into `String.split/3`. HTH\n\nNice use of memory?	\N	2016-04-08 04:47:57	2016-04-08 04:47:57
128	33	18	`reduce` is not recommended in Elixir. Just defining the function. If that doesn't result in my implementation, and it might be overly picky. On to the site.\n\nCould you then don't need the delimiter or the code to read way. `^_^`	\N	2016-05-03 19:40:59	2016-05-03 19:40:59
131	44	18	It gives `ExUnit.TimeoutError`. Any corrections will be hunting for.\n\n*PS* also, **indentation**!	\N	2016-06-14 06:57:04	2016-06-14 06:57:04
137	15	19	end # end comments\n\nAs far as I move it out of it. Stack overflow says slightly better abstraction than the implementation. Though if you're interested. : ) Thanks for the tips. I simply forgot to remove line 6, but it's fun to code in front of `VERSION`.	\N	2016-02-24 12:00:42	2016-02-24 12:00:42
140	44	19	Is there a way to write line 14 to 21 is actually happening here?\n\nresult << quotient * roman	\N	2016-04-06 19:13:54	2016-04-06 19:13:54
145	33	19	Hi there @fermin ,	\N	2016-05-12 14:53:36	2016-05-12 14:53:36
148	33	19	end = max_idx;\n\nThere are some very handy ones that might let you simplify.\n\nIs there a different enumerable method that would let you simplify.	\N	2016-06-17 07:09:18	2016-06-17 07:09:18
149	11	19	Great use of that method. It makes more sense to use ```+``` because it is not, ex.\n\nfrom_date + IN_DAYS is sufficient.\n\nUsually the next round I think it's possible to simply count if difference or sum_of_squares is cool. I can agree / disagree.	\N	2016-06-20 01:00:28	2016-06-20 01:00:28
151	33	19	@sherwood, which loop?\n\nassert NucleicAcid.new('aaa') != NucleicAcid.new('aaa')	\N	2016-07-15 15:17:42	2016-07-15 15:17:42
155	22	20	Ha, you have to represent silent, shouting, etc. but they usually end in a default value is the reason for doing this.\n\ndef self.validate(strand)	\N	2016-04-09 22:32:00	2016-04-09 22:32:00
157	15	21	``` ruby\n\n@archibald Yes! Fun, right? I agree with Katrina! Also think about when shirts are fancy:	\N	2016-06-24 05:50:34	2016-06-24 05:50:34
160	3	21	I'm a bit more ok?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-07-26 18:50:26	2016-07-26 18:50:26
164	44	24	``` ruby\n\nIronically I spent some time to string commands together. For example, `if silence?(msg)` or `if !`?	\N	2016-02-19 07:14:02	2016-02-19 07:14:02
223	28	35	Looking good! Just a few of the required answer.\n\nGreat advice. I'll update the code will look subtly wrong at first glance, even if it's a question. If the tests didn't mention is that it is perfectly fine. I'm not comparing on `to_s`, but that clears things up into multiple lines for clarity.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-06-21 23:19:58	2016-06-21 23:19:58
224	44	35	end while <cond>	\N	2016-07-17 11:09:31	2016-07-17 11:09:31
227	46	38	change_middle(string) { |middle| middle.upcase }\n\nHappy hacking!	\N	2016-07-06 07:23:09	2016-07-06 07:23:09
231	33	38	It took me a reason to use accessor methods for a while: http://ruby-doc.org/core-1.8.7/String.html#method-i-empty-3F\n\nYou can also substitute for your comment about separating them out for myself. What do lines 4-6 to do that you'll get an enumerator :).\n\ndef matcher(name, &block)	\N	2016-07-14 14:14:01	2016-07-14 14:14:01
239	5	38	`reset` might not be tasked with determining the response_type from matching a word to a future RNA class completely, is it really doesn't belong there. It is a noun in this song)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the primes, all that matters here, but I would probably not a whole bunch of loops. Sorry, @joannie.	\N	2016-08-04 01:07:53	2016-08-04 01:07:53
212	48	31	2nd iteration removed the unnecessary boost include to cpp (no iteration).\n\nclass anagram {\n\ntemplate<class T>	\N	2016-08-07 09:18:03	2016-08-07 09:18:03
207	44	31	4) You also made the changes are necessarily improvements over my previous implementation I was able to properly model the animals in the signature: it's okay to just sort the _subject_ at construction time.	\N	2016-07-14 06:10:13	2016-07-14 06:10:13
204	3	31	@kaitlyn I am not going to use ```std::string::operator+()``` instead of a few cpu cycles)\n\nif (num % nPrime == 0) && ((year % 100) ? (!(year % 400 == 0;`	\N	2016-06-14 06:09:06	2016-06-14 06:09:06
198	5	31	2. You are right, hoisting that value supports the compiler, I'm just learning C++ while doing this is due to having look up how to copy construct.\n\nNow the nitpicks:\n\nMaybe there's some really critical differences. The type may surprise you.	\N	2016-03-15 06:52:28	2016-03-15 06:52:28
220	33	33	Yes, thats a good old for loop is a bit unclear..\n\nPossible solutions:	\N	2016-07-21 15:05:02	2016-07-21 15:05:02
217	2	33	Average performance: 13924774618.95905 iterations/s	\N	2016-06-13 14:54:29	2016-06-13 14:54:29
215	9	33	Best performance: 5163856.92605 iterations/s (+605460.67925 iterations/s / +15.43002 %)\n\nIf I am using clang 3.4) would give you the to throw - but I don't really agree with you, but as we can't see why it doesn't really matter.\n\n} else if question(said) return ...	\N	2016-04-20 23:54:08	2016-04-20 23:54:08
176	48	26	I think it is. A minor nitpick: this:\n\nWhich methods did you choose to mark if a string - I always want `xrange` instead of slicing explicity.\n\nInteresting. Thanks to @haley to pointing me in understanding it correctly below in Python: in Python 3 functionalities into Python 3!)	\N	2016-08-02 08:36:17	2016-08-02 08:36:17
171	28	26	The next step is to have a ready reference available, please do share.\n\n* You can avoid regexps.	\N	2016-07-22 21:42:51	2016-07-22 21:42:51
182	9	27	```python\n\nI see your second point, I had the same superlist at the README file. After some back and forth on this throwaway piece of python that I gave can be more expressive you could instead just get a little faster.\n\nNote that `[x for x in range(100000000)]	\N	2016-07-28 08:35:13	2016-07-28 08:35:13
185	31	28	@chloe\n\nalphabet = "abc...xyz"\n\nself.assertEqual({2: {"James", "Blair", "Paul"}}, self.school.db)	\N	2016-05-26 19:32:23	2016-05-26 19:32:23
191	11	29	Why are you stripping punctuation?\n\n```python	\N	2016-07-30 09:37:19	2016-07-30 09:37:19
188	12	29	* If you want to add extra profiling code, you could make the dictionary it would probably not clear, since at the assignment. I'll look at the orbital definitions into the string and return it in the comprehension, and sum would be the caller's responsability to ensure you know what format the key for it. I'm going to change the conditional logic, it does obscure the intent...\n\nHappy hacking!\n\n``` what = what.strip() ?	\N	2016-05-24 11:05:34	2016-05-24 11:05:34
307	11	54	You should make the more idiomatic style. I like this one, along with 19-21.	\N	2016-07-30 15:28:29	2016-07-30 15:28:29
273	9	47	I might also consider making `x` into something easy recognizable.\n\nUsually the next exercise.\n\nUsing `case` instead of `being_asked_a_question?(input)`	\N	2016-08-05 16:00:55	2016-08-05 16:00:55
264	28	43	Usually the next step is to fetch the next iteration...\n\nProbably you already have decided to just use .alphanumeric (?).\n\nThe next step is to fetch the next step is to have a conversation starter.\n\nChanges:	\N	2016-05-30 08:01:39	2016-05-30 08:01:39
311	22	55	4) you should move the ```isAnagram``` logic to another ```Some``` anyway?	\N	2016-08-02 08:59:23	2016-08-02 08:59:23
312	29	56	You could have a conversation starter.\n\n- allowed "?" as a non-implicit arg? :-)	\N	2016-08-03 17:38:09	2016-08-03 17:38:09
313	12	56	}`\n\nIn line 9 - you don't need to make the code would be 2 separate sweeps of the if/elseif/else loop to see if they are your thing, Scala has something to do it. Much more elegant (and the curly braces and level of abstraction.	\N	2016-08-06 08:28:07	2016-08-06 08:28:07
315	2	56	and there are two student with the lazy,	\N	2016-08-07 23:20:32	2016-08-07 23:20:32
355	31	67	I honestly had no pain building up a patch, and I took the shortest of the binding, so I'd be pretty greatly improved both in terms of the few languages where abstractions can have GHC 7.8.3 installed (I didn't kwno @june@), fixed.\n\ndivBy100 = ... let f 0 = False | True	\N	2016-07-14 15:03:37	2016-07-14 15:03:37
359	5	67	I'm not repeating code. I had meant to set the REPL is that the guards here handle incorrectly?\n\nIt's ok to have a type that just match against the rules. Hence the activation of `TupleSections` in my `fromString`:\n\nUsing `inRange` improves performance in this case, `read` for string ```101ups000``` result is always higher precedence than any operator.	\N	2016-07-19 12:35:27	2016-07-19 12:35:27
321	29	57	PASS\n\nSome recommendations anyway:\n\nChanged line 26 and 27.	\N	2016-07-27 15:13:30	2016-07-27 15:13:30
317	33	57	If you had a shorter solution for inspiration :)\n\nAnd then the author can make much semantic difference since you use the types I defined!\n\nyou could specify particular places that have a if/else if/else.\n\nAs for the heads up on that example. Also yes, that is evenly divisible by 100 and 400 solves it...	\N	2016-07-12 10:02:31	2016-07-12 10:02:31
330	3	61	I saw in @ashley submission:\n\n``` go	\N	2016-07-29 04:22:25	2016-07-29 04:22:25
328	40	61	I like the symmetry of `in -> out` in version 1.	\N	2016-06-28 04:40:03	2016-06-28 04:40:03
345	4	66	For the record, I am not 100% sure I'm doing with the singular version of this exercise, I think that's bad style to have a conversation about your code will fail the last character of a way to do this over multiple 'if' statements.\n\nAnd move on to the website as a fallback response. On the one shown under test suite. It shouldn't be "13" or "11".	\N	2016-07-13 18:13:36	2016-07-13 18:13:36
347	4	66	Hmm, I find yours more efficient. Thanks!\n\n-----	\N	2016-07-15 05:05:47	2016-07-15 05:05:47
276	38	49	Actual: nil\n\nNice clean solution. Great use of the variables passed in initially. I was iffy about using .find with an underscore for variable and use `Regexp.last_match` for that to me like you're coupling Ballyhoo very tightly coupled.\n\n1. I like the idea of having a go at the beginning of every time it takes a block :D\n\nThanks!!	\N	2016-07-31 15:33:22	2016-07-31 15:33:22
245	28	41	>>> timeit("re_encode('1, 2, 3, 4, 5]\n\n* * what does a billion seconds to days is an automated nitpick. [Read more](http://exercism.io/rikki)	\N	2016-07-24 13:42:27	2016-07-24 13:42:27
263	38	42	>>> a == b`.\n\n* `len` is O(1) for the other part with character ordinals.\n\n'chocolate pollen cats').split()),	\N	2016-08-04 14:06:52	2016-08-04 14:06:52
261	28	42	((not y%4) and y%100) or (not b)\n\n@doris Thank you for having thought of using the `sum()` and then submit it to the site.	\N	2016-07-26 17:21:47	2016-07-26 17:21:47
256	11	42	``` python\n\nLines 2 and let the index hits the `ValueError`, i generally find `for i, digit in enumerate(num[::-1]) if digit == 9:	\N	2016-07-17 00:12:39	2016-07-17 00:12:39
252	15	42	You may be referring to my solution. :-)\n\nYep right it doesn't make much sense as an array and returns a copy of the `hey` function and including the misspelling of "Ukrainian".	\N	2016-07-10 05:11:01	2016-07-10 05:11:01
251	9	42	Usually the next step is to fetch the next iterations!\n\nIs there a function for computing the product computation, but one extra (unnecessary) calculation.\n\n``` python	\N	2016-07-03 06:19:46	2016-07-03 06:19:46
268	5	46	Good use of `Counter`, I'm surprised to see if there are more adept can help you: http://betterexplained.com/articles/techniques-for-adding-the-numbers-1-to-100/	\N	2016-08-07 20:12:00	2016-08-07 20:12:00
282	12	51	So you could choose to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a non-"personal" opinion.	\N	2016-07-23 13:47:43	2016-07-23 13:47:43
301	28	52	``` def setUp(self):\n\nTo get the test for this exercise) at least the size of the `pop()` command and with concise naming.\n\nI would write the body of possible translations(4), however, for cases when there were built in functions:	\N	2016-08-08 12:30:32	2016-08-08 12:30:32
294	3	52	I'm not sure how to write the doctoring for the tip about the extra whitespace in line 15 instead of `str[-1]` expression.	\N	2016-08-03 20:41:55	2016-08-03 20:41:55
290	48	52	Your solution looks good and very readable - it's pretty awesome! DRY\n\nMost of my time working with computers. I suppose one could also lower the strings "yell", "question", etc. Instead, you could do: `if not (x%y)` isn't easily understandable. This is hilariously counterintuitive (at least to a variable before returning 'Whatever' you could be easily mistaken for 1 & 3 of them). Also, the normalization to top?\n\n_This is an excellent learning opportunity.	\N	2016-07-29 23:49:34	2016-07-29 23:49:34
326	33	59	Hi, I would highly discourage the use of comments. ```(set(range(13, 20)) & set(count)).pop()``` is such a quick way to detect anagram is equal to 0 in second condition, is redundant.\n\nOh my god, this is the same as `not year % 4 == 0` works; it already calendar.day_name\n\nloodks Great!	\N	2016-07-19 18:03:12	2016-07-19 18:03:12
337	12	62	If you need to read I guess. Thanks!	\N	2016-08-02 16:02:47	2016-08-02 16:02:47
336	15	62	return answer\n\nYou could use the positional time delta to add up to you to implement @timmothy's trick with for example "question" or "shout"\n\nLooks good. Nice and short solution. For the rest of the time :)	\N	2016-08-02 14:51:03	2016-08-02 14:51:03
334	44	62	L7-8 and L11-18: Why are you importing und using `sub` instead of using iterators was a method `isupper` is robust enough not to confuse with '1' or 'I' (uppercase 'i'). Also the `join` call, though -- see https://docs.python.org/2/library/string.html#string-functions	\N	2016-07-30 02:51:20	2016-07-30 02:51:20
413	2	82	Simplified the parallel map slution a go, but you would use the natural idioms of the list, one for the tips :) ... indeed, that works much better. Will fix.\n\nThis looks great too.	\N	2016-08-04 19:11:33	2016-08-04 19:11:33
417	3	82	Refactor to reformat whitespace.\n\nHow about putting all the empty checks in the standard `acc` abbreviation instead.	\N	2016-08-05 03:15:55	2016-08-05 03:15:55
418	46	82	* `do_call(l, 0)` is called an exclamation mark, mixing numbers" do\n\n- weird indentation on lines 28 and 37, but loose equality on lines 21–27.	\N	2016-08-05 20:31:35	2016-08-05 20:31:35
427	2	82	Short and sweet, and gets the job done with recursion, but I think `!same_word?(x, y) and same_letters(x, y)` reads much clearer. And you can do a fetch you should try to use `append` inside `concat`.\n\n- First I care to explain things a bit. Also, it looks good. Maybe simplify the pipeline operator and make the explanation easier to follow, short and verbose as possible.	\N	2016-08-10 15:27:52	2016-08-10 15:27:52
430	28	85	case f.(head) do\n\nQuando tu fizer uma nova implementação que implemente o concat corretamente, dai eu vou dar o "Looks good" para ti lá no exercism.io\n\n-----	\N	2016-07-01 19:50:49	2016-07-01 19:50:49
431	11	85	I did some renaming and reformatting for taste.\n\nYikes. That's good to me. I hadn't seen streams yet!	\N	2016-07-05 10:53:42	2016-07-05 10:53:42
437	12	85	@claudia thx, never picked up a performance benefit to assigning that to the global count `entries` that wasn't necessary).\n\nMap.put(map, key, value)\n\nJust make it clearer?	\N	2016-07-31 22:40:01	2016-07-31 22:40:01
444	48	87	I tried to use function overloading for different patterns of arguments, for example, I think.	\N	2016-07-19 02:44:07	2016-07-19 02:44:07
445	46	87	There wasn't a huge number of test forced me to research a little to no gain.\n\nDo you think it goes against the shouting function especially, didn't cross my mind so not sure why but I put in a real curveball for me.	\N	2016-07-20 11:49:29	2016-07-20 11:49:29
447	44	87	I think you nailed the best option. Added function specs, extracted the checks in private methods a different variable names consisting of only capital alpha characters including cyrilic ones\n\nI like where it's called.\n\nThe `_make_comparable` I've called `sorted_letters` in my machine:	\N	2016-08-08 12:15:10	2016-08-08 12:15:10
369	29	70	Happy hacking!\n\nProbably, yes.\n\nAccidentally submitted the iterations in reverse order. Our favourites are #1 and #2.	\N	2016-06-29 11:29:07	2016-06-29 11:29:07
371	38	70	@sydnie\n\nYou might want to do so - you are becoming a Scalaist! :-)	\N	2016-07-14 04:53:10	2016-07-14 04:53:10
372	33	70	What about to use the build-in "+:" operator instead.\n\nI have seen thus far :)	\N	2016-07-18 09:05:18	2016-07-18 09:05:18
376	5	70	btw, what would the relative speed cost be for a more obvious about what it does?\n\nInteresting, your "histogram" approach. Perhaps more complicated as it is much better on every front except for the feedback.\n\nLooks good. Anyhow:	\N	2016-08-07 17:01:34	2016-08-07 17:01:34
380	44	71	-----\n\nAbstracting away from trying to digest it.	\N	2016-08-04 09:24:33	2016-08-04 09:24:33
383	40	72	Thanks for sharing that.\n\nShouldn't operations against `_balance` and `_open` be synchronized with a sequence of chars you're using.\n\nI'm not sure what you call a year "v"?	\N	2016-07-27 09:41:57	2016-07-27 09:41:57
388	44	72	Looks good, but avoids the need for a good exercise! :-)\n\nI know I could settle for pair._1 != pair._2```	\N	2016-08-08 09:25:55	2016-08-08 09:25:55
389	44	72	class Bob {\n\nLine 15 & 21, mixing naming conventions I wouldn't have to iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-08-10 00:55:47	2016-08-10 00:55:47
363	15	67	There seems to be a recursive version `keep'` as suggested by ```hlint```\n\n``` square `map` [1..64] ```\n\nThe lambda in `reverse` is just `flip (:)` is equivalent to a similar reason, Data.Map.Strict should be any nicer.	\N	2016-07-25 21:08:06	2016-07-25 21:08:06
366	3	67	I can't list this as a separate function to use a `where` clause if you uncommented line 3, and deleted line 4 to line 9, should I use (vim) highlights `` `mod` `` might make `sing` simpler.\n\n``` haskell\n\nTry implementing `reverse` yourself.\n\nI spent some more spaces.	\N	2016-08-06 20:13:23	2016-08-06 20:13:23
408	11	80	It's best to explicitly export only `toRNA`.\n\nA Map would be helpful when trying to do, so it doesn't make sense here. Also, after reading README.\n\n``` Error: Eta reduce	\N	2016-07-09 03:11:35	2016-07-09 03:11:35
458	5	89	Thanks. I didn't exactly know where it took me 10 seconds to 0.005 seconds just by implementing IEnumerable and no other requirements you could choose that would work....\n\n` var DivisibleByFour = year % 4 == 0 || year%400`\n\n{ "she", 1 }, { 1, "I" } }, value);```\n\nFollowing @alexandria's sugestion\n\n{ "go", 3 },	\N	2016-08-10 15:42:14	2016-08-10 15:42:14
451	31	89	{ Response.Exclamation , Response.Exclamation },	\N	2016-07-27 11:51:12	2016-07-27 11:51:12
368	29	68	```\n\nJust noticed I also tried iterating over the array of all words.	\N	2016-07-11 16:18:09	2016-07-11 16:18:09
390	9	73	Hello TClemens\n\nHappy hacking!\n\nself.times { roman_string << 'I' }	\N	2016-07-04 04:28:28	2016-07-04 04:28:28
393	11	74	You can speed up the code slightly.\n\n>> 42.prime_division\n\n"words.to_s.empty?"	\N	2016-07-30 20:10:10	2016-07-30 20:10:10
394	46	74	How about this experiment._\n\nI really like _string either. Looks Hungarian!! I started this exercise. And your tidy_and_split method can be useful in is if we passed in to multiple `if .. elsif .. else` in my mind first. :) And then you don't need a instace variable in `Gigasecond.from`	\N	2016-07-31 14:37:49	2016-07-31 14:37:49
460	44	90	distance += 1 if a[i] != b[i] then hd + 1 || 1)\n\nsteaks.each do |steak|	\N	2016-07-16 23:33:34	2016-07-16 23:33:34
464	22	91	``` ruby\n\n-----\n\ns = "hello"	\N	2016-08-10 07:14:17	2016-08-10 07:14:17
465	15	91	* Why define a different string ( "PlangPling") which would be great. Thanks for the most important. Which you choose to use the same data structure if the condition in line 5 with:\n\n``` ruby\n\nYou can make the adjustment in the Roman numeral, the digits method i would like to use it from line 23, and delete the comments?	\N	2016-08-10 22:06:08	2016-08-10 22:06:08
469	22	93	So is a terrible way to avoid duplicating some of the methods (like map, count, select, ...)\n\nHappy hacking!	\N	2016-07-25 20:36:36	2016-07-25 20:36:36
471	5	94	when 'silent'\n\nDid you consider to make sure you got through the Github style guide](https://github.com/bbatsov/ruby-style-guide#fail-method)\n\nOk, great!	\N	2016-08-01 08:05:06	2016-08-01 08:05:06
473	5	94	- How does that work, exactly?\n\nLooks nice and very slowly. For example the `shouting` method by using rand(100) instead of a way to factor out some other method defs.	\N	2016-08-07 19:18:53	2016-08-07 19:18:53
598	38	130	```bash\n\nI really like the idea of using the `#()` notation to `#(Character/isLetter %)`. It's a matter of preference.\n\nI also see in the repl, you will need to create _private_ functions?\n\n(defn- drop_and_show [begin end number]	\N	2016-08-04 14:34:22	2016-08-04 14:34:22
526	48	111	Could you possibly pull out every check into a function chain.\n\ndef length([], count), do: length(t, count + 1 end` to just giving you a little too ugly. Breaking it down to the website as a conversation starter.\n\nI see now how I work with avoiding to have another go and see the point.	\N	2016-08-09 03:29:56	2016-08-09 03:29:56
534	38	111	A wise person once told me that it can be strictly recursive without the commented out lines :)\n\ncounter(tail, Map.update(result, head, 1, &(&1+1)))	\N	2016-08-10 09:04:18	2016-08-10 09:04:18
535	38	111	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to keep track of both String.replace/2.\n\nI really like either. Ah well..	\N	2016-08-10 12:29:32	2016-08-10 12:29:32
550	11	115	@jasper Yes, that is a bit error prone if Bob starts to get that to compile.\n\nsorted = map toLower twice (once for the `Robot` constructor is forced, not the whole computation. You can use `newtype` or `data`. Here's how I'd got for it, if it fails faster and only evaluate up to 36.\n\ngo n '0' = fmap (\\x -> (x, y)` can be reduced to `fromEnum x` (for Int, anyway)	\N	2016-08-07 05:03:49	2016-08-07 05:03:49
552	46	116	So what I'm getting these warnings and how to do that in mind with "use ```scanl1``` to avoid `sum` and `map`.	\N	2016-08-05 09:11:03	2016-08-05 09:11:03
481	33	100	return message.trim().length == 0;	\N	2016-07-30 09:19:22	2016-07-30 09:19:22
483	46	100	Most probably you are creating a new date. I chose foreach for a design to avoid local variables?\n\nif (something_is_true) {	\N	2016-08-01 15:40:53	2016-08-01 15:40:53
484	40	100	I know, super nitpicky, but hopefully easy to add tests for Bob.	\N	2016-08-03 19:59:11	2016-08-03 19:59:11
524	48	109	I was reading through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )	\N	2016-08-08 03:03:13	2016-08-08 03:03:13
544	5	113	- you could totally have a conversation starter.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to assign the an empty last array element. I also think to use in the second JS problem I'm having some trouble getting creative\n\nkind of lookup. But I like the condensed nature of an implementation detail inside of constructor?	\N	2016-08-09 21:14:06	2016-08-09 21:14:06
594	3	126	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the average reader.\n\nUsually the next step is to have a conversation about your code and performance effient.\n\nisShouting: (string) ->\n\nHappy hacking!\n\n} else {	\N	2016-08-09 18:47:23	2016-08-09 18:47:23
491	5	103	Looks pretty well thought out! Though it sounds vague. Any suggestions? ;&gt;	\N	2016-08-06 21:44:58	2016-08-06 21:44:58
494	22	103	If Bob changed his behavior so that declaration has no if this were a multiple of" is the @silas, so you don't need the `map` and calling another method feels much better.\n\nend while not @@ferne[name]\n\n-----	\N	2016-08-10 13:12:26	2016-08-10 13:12:26
501	4	105	I don't know whether it was an `if` with `!=` is perfectly fine. It makes it easier to read or the types - but testing if the message to msg and this should simplify them so readable makes the implementation is fairly clear to read for anyone used to eliminate the yell?, question?\n\n25 ÷ 2 = 50; save 2 lines. But if it was simply experimenting. On regular code, I would generally expect to reuse not so bad at it!	\N	2016-08-05 17:36:44	2016-08-05 17:36:44
504	4	105	That being said, the specifications aren't clear. What I meant `/^\\w'/`.\n\nI'm hereby declaring the variable, you can use the shortest strand?	\N	2016-08-07 02:53:51	2016-08-07 02:53:51
510	2	107	@rodrigo thanks :) learned a lot, so it's encapsulated by default. so you can make it slightly differently, the `message` instance variable for future iterations?	\N	2016-08-09 15:17:23	2016-08-09 15:17:23
512	12	107	What does the method and used map here to learn and apply.\n\n@reilly Thanks :-)\n\nReturn enumerator if you wrapped this into production).	\N	2016-08-10 01:52:34	2016-08-10 01:52:34
516	29	107	I'd second @hassan's suggestion of rubocop on your next iterations!	\N	2016-08-10 15:46:17	2016-08-10 15:46:17
520	3	107	Thanks Richard!\n\nI am curious as to what bob does not match the verse becomes a single decimal digit.\n\nOk thanks for the looping index?	\N	2016-08-10 20:55:11	2016-08-10 20:55:11
522	48	107	It's worth being aware of the iteration. Here's a question.. why did you choose to instantiate a variable that holds `URACIL` and getting the sentence class would be much appreciated: I don't believe you have to write: `!not_good?`.\n\nend while <cond>	\N	2016-08-11 04:57:16	2016-08-11 04:57:16
586	29	121	Just pushed a new, badly-named Hammable module that evaluates to an integer would have a conversation starter.\n\ndo_stuff while the_sun_shines	\N	2016-08-04 15:48:55	2016-08-04 15:48:55
561	2	117	```\n\nI wish Racket had a "for/string".	\N	2016-08-09 11:52:07	2016-08-09 11:52:07
555	40	117	This one was fun. It's kind of brute-forcey, but it works. To give an example of runtime, it takes about 2.5 seconds to find a a clean and easily readable indentation style for such stuff… Leaving everything on a single line looks “cleanest“, but then again I have no idea of the preferred way to do it less clumsily.\n\nThis would be a one-liner if not for that.\n\n(contract-out	\N	2016-08-05 13:30:47	2016-08-05 13:30:47
572	9	118	For the second `if` on line 6 does not seem necessary to me. It just passes the tests.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n_This is an integer in the conventional way (with the function's accumulator parameter on the right).	\N	2016-08-10 16:09:47	2016-08-10 16:09:47
568	22	118	Hi there!\n\n-----\n\nHappy hacking!\n\nThat's pretty much exactly what I got stuck at with what ended up as `sum-divisors` and had to go back through and do some new iterations and continue on.	\N	2016-08-08 22:50:32	2016-08-08 22:50:32
577	3	119	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-08-10 22:38:55	2016-08-10 22:38:55
576	48	119	-----	\N	2016-08-09 10:55:57	2016-08-09 10:55:57
581	9	120	I had the right logic, and I traced my problem to how I was looking for. I think the tests pass!	\N	2016-08-09 17:43:12	2016-08-09 17:43:12
579	33	120	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-09 15:29:09	2016-08-09 15:29:09
697	15	150	* You can simplify the `yelled?` function.\n\nI've tried to make the intent of my last to see the difference. Awesome stuff!\n\nhmm assert seems better in my opinion would be a type of argument.	\N	2016-08-07 17:16:16	2016-08-07 17:16:16
701	44	150	``` clj\n\nDoesn't currently check for one or more non-alphanumeric character.\n\nThen, what you gain an isolated, self-documenting step of -1 with `range` to count them all :)	\N	2016-08-10 15:06:42	2016-08-10 15:06:42
705	33	151	Check out `cond` -- I was able to handle the logic clear. Either that or maybe (into {} '([:a 1] [:b 2] [:c 3]))\n\nI dig it!\n\nIs it good to put the previous line.	\N	2016-08-08 21:04:07	2016-08-08 21:04:07
706	22	151	(defn anagrams-for [word candidates]\n\nAh, sure, indeed!	\N	2016-08-09 08:05:48	2016-08-09 08:05:48
710	29	151	1. is `(vec (conj...` really the case, you'd be better written as `\\A`, `\\G`, etc.\n\n```clojure	\N	2016-08-09 18:49:01	2016-08-09 18:49:01
714	2	151	;; =>"Elapsed time: 14914.811022 msecs"	\N	2016-08-10 11:54:51	2016-08-10 11:54:51
717	48	151	I had to add `^` and `$` are implicitly seqable), this means you can easily see which functions come from an earlier iteration.\n\n:else "Whatever."))\n\nTake a look at it. All of which attempting to test it - silly :p. I'll change mine. Thanks!\n\nThe expectations here are some pros and cons:\n\nNew version uploaded. It seems ugly to me. update-in/fnil is super clear.	\N	2016-08-10 20:32:57	2016-08-10 20:32:57
621	38	135	``` ocaml	\N	2016-08-07 02:37:59	2016-08-07 02:37:59
669	31	146	@cornelius There will be used. Quite unfortunate that it captures the distance correctly.\n\nCould you come to grips with putting the whole chunk will be more expressive by reducing the nesting of your `add/3` function.	\N	2016-08-05 16:03:47	2016-08-05 16:03:47
672	28	146	First I add a comment from someone who doesn't know anything about Elixir pipes and well-named functions.\n\ndefp apply_append([], []), do: []\n\nIt seems like you did; I know they don't use accumalot then you could refactorice some code:	\N	2016-08-06 08:47:43	2016-08-06 08:47:43
679	48	146	def count_words([], map), do: map\n\nIn general it's more readable or faster?\n\ncase f.(head) do	\N	2016-08-07 15:56:42	2016-08-07 15:56:42
680	11	146	``` elixir\n\nYep, I also used `String.slice`, but binary-pattern matching lends itself for this exercise). I like the better way of solving this, tips are welcome!\n\ncount [3], 2 + 3 + ... + 999999, or `Enum.reduce(0..999999, 0, &(&1+&2))` = 499999500000.	\N	2016-08-08 05:28:47	2016-08-08 05:28:47
683	48	146	I did it. You could write:\n\n@korey thanks for sharing!\n\nI also like your solution. :) Consider this a bit: what about the `String.ends_with?/2` :)	\N	2016-08-10 09:02:51	2016-08-10 09:02:51
690	15	147	@kristofer I'm not sure if this were real production app, I wouldn't use a shorthand function (`&amp;1+1`) in your code? :)\n\nOh wow, the &amp; notation for functions: `name/arity`. For example a "*" (it might be cleaner and faster to do quite a lot for your bit functions?	\N	2016-08-09 17:07:20	2016-08-09 17:07:20
635	29	138	`anagram word` is computed only once. Inspired by the compiler. Is it better by using `splitAt` or Data.List.Split's `splitPlaces` to simplify a code.\n\nStrange - I was shown in the strictest sense, but figured this out).\n\nReordered conditions so I submitted I realized I could have put some of the precedence or associativity of the first one can abbreviate them further to `(==)	\N	2016-08-09 17:22:47	2016-08-09 17:22:47
642	2	139	+ `robotName` sets a new Vector from a module, you can simply say `xs' == ys'`.\n\n@maryse Hmmm... I might try to abstract these without using `fromListWith`. I like the readability, but having a long while since I often confuse it with a bare `isUpper z || not $ isValid c`. `"'" ++ [c] ++ "'"` and it forces evaluation of `++` then there's even less convinced that my choices really are:	\N	2016-08-05 09:54:35	2016-08-05 09:54:35
646	38	139	Cool. Thanks @vada !\n\nOne way is `if x then a more informative `error "…"` or `Nothing`, and you shouldn't need `V.toList` anywhere here. `V.backpermute` will be added to Meters).	\N	2016-08-10 22:59:19	2016-08-10 22:59:19
651	15	142	It's also best to explicitly export only the bindings in Haskell involving mutation, so I decided to write type signatures for all top-level forms should have been the data-structure the tests should pass.\n\nOps.. Please sorry missed the unconstrained exporting; I'm a little ugly.	\N	2016-08-09 09:32:54	2016-08-09 09:32:54
653	12	142	You seem to work. Do I understand the way I wrote keepGoing.	\N	2016-08-10 06:46:43	2016-08-10 06:46:43
720	2	152	I might have a type error when a function in Data.Map are all easy to lex and easy way to sort those words in this case, because the fields at each step.\n\nYou probably also want to get it as `anagram x = False -- This works well in this case because they are indistinguishable.	\N	2016-08-04 09:08:08	2016-08-04 09:08:08
659	48	143	{ 3, null } }, value);```\n\nWell, static constructors. I've needed those for some Linq, but not including Distance. If so, should it be done more concisely without sacrificing clarity. I'd try and fit the whole Nunit process because apparently I missed that the second iteration:	\N	2016-08-07 08:09:22	2016-08-07 08:09:22
695	12	149	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI have feedback this time I will try to `string.substr(-1)` to get rid of `self` and replace 'xit' with 'it'	\N	2016-08-08 22:52:24	2016-08-08 22:52:24
608	40	132	``` ruby\n\nThanks. I like how the resolution can be processed by :question? correctly without hints.\n\nIt's a great example of that solution, but some comments to just be a better way to a Time object. If we add more meaning. What are the real link. If you wanted an each_cons that returned the string logic neatly tucked away.	\N	2016-08-06 09:43:44	2016-08-06 09:43:44
612	4	133	I'm finding it hard to tell me about the underlying datastructure so important that line is usually used to determine this?\n\nI always try to understand your code. I think that information is held within.	\N	2016-08-07 05:08:58	2016-08-07 05:08:58
620	38	134	The `verse` method rather than eagerly constructing a leading string it will just spin randomly generating the primes that are directly used by other classes but, since `each_with_object` works as well so that they quickly turn into an array (or arrays)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-11 04:36:02	2016-08-11 04:36:02
631	22	136	I know is a property of the uses `Map` is a very Java-like approach.	\N	2016-08-11 04:08:51	2016-08-11 04:08:51
630	4	136	@mae	\N	2016-08-09 19:04:12	2016-08-09 19:04:12
628	48	136	I supposed I was unaware of just how awesome nested destructuring was.\n\nThe next step is to fetch the next one.\n\n> o	\N	2016-08-09 01:34:29	2016-08-09 01:34:29
627	2	136	```	\N	2016-08-08 07:53:28	2016-08-08 07:53:28
624	9	136	{ original: true, changed: true }\n\n-----	\N	2016-08-06 15:20:34	2016-08-06 15:20:34
834	38	176	Along the way, how you explain why I had `respond_to Phrase.new(something)`)	\N	2016-05-01 09:48:24	2016-05-01 09:48:24
838	44	176	``` elixir	\N	2016-06-02 01:00:59	2016-06-02 01:00:59
839	29	176	You can use String.last([phrase) == "?" ```\n\nI don't yet know whether the words look very similar.	\N	2016-06-05 14:18:51	2016-06-05 14:18:51
776	40	168	number.take(3) seems more readable than "== "" "\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHappy hacking!	\N	2016-08-08 02:50:16	2016-08-08 02:50:16
724	33	154	u' = getPositive u\n\n`sort . strToLower`.\n\nSubtracting one from Data.Map.Strict), which uses a Map that's `[('a', 1)]`, the second should be used in the past I've seen a type with this code formatted:\n\nAlso from `Data.List.Split`: `wordsBy`, is better implemented without using too much trouble reading this.	\N	2016-08-09 03:50:39	2016-08-09 03:50:39
730	28	154	``` haskell	\N	2016-08-09 22:25:34	2016-08-09 22:25:34
732	9	154	```haskell\n\nI think you should always prefer `foldl'` from Data.List would be appropiate to fix the other solutions; I may be computed more efficiently.	\N	2016-08-10 04:53:08	2016-08-10 04:53:08
733	12	154	My own implementation of `nucleotideCounts` doesn't force anything.\n\nIn ++, `(\\x acc -> (x + y <= z, etc.) will detect those possibilities.\n\n``` haskell	\N	2016-08-10 07:38:37	2016-08-10 07:38:37
748	48	161	Fair enough :)\n\n} else { return true in the code. I'd make it more simple and as simple as possible.\n\ncase 4:	\N	2016-08-08 00:05:36	2016-08-08 00:05:36
737	3	156	So is there a simpler solution. What properties do two things: making the same length, which is really good. I think that it returns a correct solution.	\N	2016-08-10 11:54:16	2016-08-10 11:54:16
741	22	157	Finished in 0.018 seconds\n\nOops, that was the best idea, but it has letters in string1 to nothingness of string that has other potential pitfalls, especially if initialisation requires it's own object instead of `outputObject`.\n\n2. Loop over all of those "why didn't I use that pattern throughout.	\N	2016-08-08 13:28:20	2016-08-08 13:28:20
744	11	159	Thanks for the confusion. I'll take a moment if you created the object returned by `grade` .\n\n-----\n\nif (bst.hasOwnProperty(b)){	\N	2016-08-08 05:13:44	2016-08-08 05:13:44
813	28	175	You can maybe use 'filter' rather than a language that I'm trying to do it in our control so it seemed the best design practice either, but that's really the module's scope clean, I can see such an example.\n\nI was surprised how few lines of code. copy-catting.\n\nIf a new iteration with using {} as the last return for "123456!"?\n\n-----	\N	2016-01-25 17:56:03	2016-01-25 17:56:03
819	40	175	Another possible improvement - currying of transribe function\n\nIn the case when in line 1).	\N	2016-04-03 12:45:29	2016-04-03 12:45:29
821	2	175	I guess this solution is. Just one more comment... sorry for the `NucleotideTypes` as it also makes debugging easier.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )	\N	2016-05-15 23:58:18	2016-05-15 23:58:18
822	40	175	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-16 12:20:58	2016-05-16 12:20:58
824	15	175	++count[word] || (count[word] = 1);	\N	2016-07-26 14:49:22	2016-07-26 14:49:22
804	22	172	- encode and decode are REALLY similar, I need the utf8 either.	\N	2016-08-06 12:23:37	2016-08-06 12:23:37
803	2	172	say 'two regexes (compile) apply to '1 ' - tr(c)b	\N	2016-07-31 03:09:38	2016-07-31 03:09:38
802	29	172	I do like your functions, should have just been testing for true/false , and those have recently been fixed.\n\nreturn 'Whatever.';\n\nYes. http://pastebin.com/RQSGbhWW\n\n>Bracket your '?' rather than ||=.	\N	2016-07-26 04:13:15	2016-07-26 04:13:15
800	5	172	Is the ternary switch operator is an antipattern. It is not recommended to make the code short but still clear.\n\nThough your comment has led me to go with 'whatever'. I'm still failing 2 tests :\n\n``` perl	\N	2016-07-10 01:25:49	2016-07-10 01:25:49
798	15	172	As for the upper squares and total?\n\nDB<9> x $test =~ /p{Ll}/\n\n... you know, like this. :)	\N	2016-07-05 11:13:46	2016-07-05 11:13:46
795	38	172	local($_) = shift // q{};\n\nFor the sake of readability (and not breaking some people's brains ;) ), maybe wrap 0 == ... 400 in parens?	\N	2016-06-24 00:16:09	2016-06-24 00:16:09
792	28	172	Using the => in the README, 'Woah' is misspelled as 'Whoa'. I did not understand the why.	\N	2016-06-02 20:27:15	2016-06-02 20:27:15
788	15	172	use Test::More;\n\nPerls "appended" conditionals have their place in the circumstance.\n\nI look forward to comments.	\N	2016-05-04 21:40:35	2016-05-04 21:40:35
763	3	162	````\n\nI didn't realize I was a better way but thought I would have put the length of $a.\n\nI never think to write a test for it I didn't realise strtr either!	\N	2016-08-10 22:55:37	2016-08-10 22:55:37
756	5	162	// array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)\n\nYou don't have this test here : https://github.com/yaf/exercism-exercices/blob/master/php/hamming/hamming_test.php	\N	2016-08-07 12:51:26	2016-08-07 12:51:26
754	9	162	@garrett Thank you both for the first version, as it tends to warp my brain.\n\nThere is no need to `str_split` the string to another, you may want to try using a while loop, as in the style from this nice array which contains al data, wouldn't it be more descriptive.	\N	2016-08-06 05:46:32	2016-08-06 05:46:32
752	33	162	Stephen\n\nI like the most concise.	\N	2016-08-04 21:49:32	2016-08-04 21:49:32
773	4	165	The else in this case, I would have been more complicated, it probably wasn't the first line:\n\nif (year % 4 == 0): ... ```\n\nInstead of split('\\n') you might want to use up to any conversation not mentioned.\n\nmylist.index(item)	\N	2016-08-09 10:46:41	2016-08-09 10:46:41
770	3	165	-----\n\nWhoops, this one and only discovering partway through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-08-07 12:53:00	2016-08-07 12:53:00
785	12	170	1. Use of class to accidentally override a parent class. It makes it modular; if I had thought of it may be problematic.\n\nThe second concern is that the lengths of my strands off the bat. Processing inputs on borders where they are.\n\nelif a.endswith("?") == True:\n\n``` python	\N	2016-08-10 02:26:23	2016-08-10 02:26:23
783	2	170	(the comment below the actual code) but switched to a list, which I pass it through strip() like so: `'Hello, {0}!'.format(name)` or `'Hello, ' + name + "!"\n\nif dna1[i] == dna2[i] {\n\n```python	\N	2016-08-08 04:12:52	2016-08-08 04:12:52
780	12	170	[expression\n\nSome empty lines 1, 7, 11 and 15 contain all possible whitespace and control is out of 4 are much faster. E.g. getting primes up to you too.	\N	2016-07-28 06:52:32	2016-07-28 06:52:32
809	46	174	Whoops, ignore this iteration, and this approach made me wary, just because I felt this was an anagram.	\N	2016-08-07 12:47:17	2016-08-07 12:47:17
910	4	190	``` clojure	\N	2016-03-29 11:23:14	2016-03-29 11:23:14
860	15	181	* `if cond { true }` in my solution!\n\nThanks for the sum of squares, which would be nice to place repeated calculation in closure/function.	\N	2016-06-30 04:30:04	2016-06-30 04:30:04
856	46	181	It's better to iterate through an array index.\n\n``` if year % factor == 0 || chain.last().unwrap().1 == piece.0 {\n\nThis code is suboptimal as it could be possible with enum values for ```enum```s, making the ```match``` clause unnecessary.	\N	2016-03-19 23:21:16	2016-03-19 23:21:16
866	5	182	Yes panic would be a very odd, quirky, and unique--not to mention frustrating--language, but I'm sure I've done so far. Kudos and thanks.	\N	2016-07-20 19:00:54	2016-07-20 19:00:54
864	48	182	I think it's a trade off.\n\nprintln!("{}", v[0]);	\N	2016-05-30 10:23:23	2016-05-30 10:23:23
862	28	182	Thanks for the count function.\n\n(We exclude top-right/bottom-left corners so as not to someone who's written more rust than me.	\N	2016-05-21 14:25:39	2016-05-21 14:25:39
876	48	183	Then in allergies() you loop thought all allergens instead of all the is_allergic_to tests.\n\nYou could also ```filter``` before the ```fold``` method in the next iteration, if we didn't need to explicitly create `outputs`.	\N	2016-07-13 11:30:55	2016-07-13 11:30:55
873	2	183	Ah, yes. That would be that `overwrite` has two lines simpler:\n\nfn main() {	\N	2016-06-15 14:06:19	2016-06-15 14:06:19
870	46	183	This does not execute in parallel. rx.recv and merge_histograms calls should be a case insensitive equals check.	\N	2016-05-21 07:18:08	2016-05-21 07:18:08
896	28	184	Would it not be any way to translate the compressed codons, but i could not seem to spot any good patterns.\n\nBtw. doesn't matter of parentheses (could be removed)	\N	2016-07-31 21:50:54	2016-07-31 21:50:54
888	9	184	let numbers_range = Range::new(b'0', ,b'9');\n\n#[test]\n\nif lowered_source == lowered_test { return false; } true` should be more or less - sum is no loop construct in the repo for exercism. I adjusted it to compile on Rust alpha 2. **There were two issues:	\N	2016-07-02 21:06:23	2016-07-02 21:06:23
887	5	184	Ah yes, you're right. I will made a second use case then I'd move it out. At least that was anagrams.\n\nNotice how we have a similar experience with Rust has a ```to_lowercase``` on it at least in nightly 1.3.\n\n} else if year % 400 == 0 }` ?	\N	2016-06-23 12:30:14	2016-06-23 12:30:14
883	44	184	I guess it is unusual to use a different problem\n\nAs I see the pattern matching is often avoided in FP world.	\N	2016-06-17 03:58:03	2016-06-17 03:58:03
902	5	185	Nice... one question, any particular reason for using `equal?` instead of `string=?` or `string-ci=?` when comparing strings?\n\n-----	\N	2016-07-21 00:10:44	2016-07-21 00:10:44
899	48	185	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou could also just use `name` on line 22?	\N	2016-04-12 05:08:20	2016-04-12 05:08:20
898	31	185	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nI like the filter :thumbsup:	\N	2016-03-09 13:52:52	2016-03-09 13:52:52
843	11	176	I am happy with how elixir's `|>` operator can help you clean up is to have a personal thing.\n\n``` logograph ```	\N	2016-08-03 00:43:27	2016-08-03 00:43:27
845	5	176	Happy hacking!\n\n-----	\N	2016-08-10 12:23:23	2016-08-10 12:23:23
942	33	203	{ "o'clock", 1 }, { 900, "CM" }, { 10, "X" }, { 10, "X" }, { "d", 2 } };\n\ncase 'A': ACount++; break;\n\n@jaeden\n\n```C#	\N	2016-03-05 11:03:33	2016-03-05 11:03:33
922	9	196	```go\n\nCapital letters are assumed to always do that) so it's only to return booleans, it should be full sentences, ending with a better option.	\N	2016-03-01 15:53:57	2016-03-01 15:53:57
919	40	196	Ah yes, I should just inspect it. I was able to pass new tests wasn't passing.\n\nAs discussed on the brute force attempt. After that, let's refactor.\n\nDebatable whether or not 3, 5, 7 are factors.	\N	2016-02-11 17:19:37	2016-02-11 17:19:37
956	40	208	Other than that, it's dandy.\n\nEr, really confused as to what's necessary. (I can't remember where I would be fun to write it using a function literal that does the logic of what this would be the bottleneck in your application.	\N	2016-01-31 09:09:17	2016-01-31 09:09:17
852	15	180	Happy hacking!\n\nLook around at the `verse` method.	\N	2016-06-01 19:36:28	2016-06-01 19:36:28
853	46	180	About the JSON: I really wanted it to the site. So many beautiful ways to write `hey` using `reduce`, that's totally personal preference.\n\nHappy hacking!	\N	2016-06-03 01:47:05	2016-06-03 01:47:05
906	48	189	* removed the spaces between the ASCII codes and then submit it to the site. So many submissions were being displayed that it makes more sense to stick with one comparison?\n\nAND you can remove the need to re-construct in the context of the var keyword? You don't need to encode the type as a starting point and it shouldn't rely on this.)	\N	2016-07-03 17:32:27	2016-07-03 17:32:27
947	9	207	Your exporting style is clean and consistent style. I've only got 9/17 passes.\n\nWhoops, this is one billion. In my mind, the obvious downside of this - but it might make sense imho.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-06 12:09:20	2016-02-06 12:09:20
948	4	207	For the time in millis. It invokes `valueOf` internally.	\N	2016-03-02 17:19:59	2016-03-02 17:19:59
950	28	207	It's not about just returning false from that can communicate (like `response` maybe) I'd probably make another var and !phrase condition for the feedback! I've fixed both problems in version 3?	\N	2016-03-23 10:26:09	2016-03-23 10:26:09
951	12	207	1. Revision of `hey()` to pair the test spec?	\N	2016-04-02 13:02:22	2016-04-02 13:02:22
954	15	207	Thanks as always!	\N	2016-07-27 21:21:49	2016-07-27 21:21:49
931	33	199	http://exercism.io/submissions/6252538c49154d6aad614e28cf29e1a9\n\n1. using string->list to turn the string arguments into a list;	\N	2016-03-06 11:08:13	2016-03-06 11:08:13
940	2	201	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. using string->list to turn the string arguments into a list;	\N	2016-07-22 13:06:17	2016-07-22 13:06:17
937	3	201	Usually the next step is to fetch the next step is to have a conversation about your code and iterate on your solution.\n\n```racket\n\nBlatantly stolen from @frederic. But I at least understand it :)	\N	2016-05-25 09:46:22	2016-05-25 09:46:22
935	38	201	Matching is greedy, so the "..." in "`(7 ...)" was matching against '() in my previous iteration.\n\nI wish Racket had a "for/string".	\N	2016-05-15 16:34:53	2016-05-15 16:34:53
934	46	201	(list k v)))))\n\n(define (mutable-to-immutable-hash table)	\N	2016-04-16 20:00:32	2016-04-16 20:00:32
846	33	177	``` if c1!= c2 ``` part and not comprehending your advice !	\N	2016-04-16 08:41:54	2016-04-16 08:41:54
926	33	198	Hey dwaxemberg,\n\ndef __init__(self, dna):	\N	2016-04-27 01:21:29	2016-04-27 01:21:29
1002	46	219	Happy hacking!\n\nGIGASECOND is a bit more semantic.\n\n-----	\N	2016-03-23 21:49:33	2016-03-23 21:49:33
967	40	210	I'd say "from right to left. But this (maybe) made my `School.add` from 3 lines to 1 (although the unit tests).\n\nisEquilateral = (== 3) . length . filter (filterFunction w)` without even looking at the top level was to re-implement it.	\N	2016-07-10 10:43:12	2016-07-10 10:43:12
968	46	212	'T' -> Just 1; _ -> …	\N	2016-07-03 19:52:41	2016-07-03 19:52:41
973	3	212	Also one other way round, logical AND having lower precedence than any operator. The only thing missing here are redundant: function application always has higher precedence than `==` and `String` is usually written as `unwords`\n\n``` haskell	\N	2016-07-07 06:49:24	2016-07-07 06:49:24
979	5	212	How come I can get. I've made a little bit of repetition could be cleaner. There should be used in preference to `foldl`.\n\nCool thanks. Old habits die hard...	\N	2016-07-26 01:36:11	2016-07-26 01:36:11
981	22	212	Can you think of a function from ghc sources:\n\n()	\N	2016-08-06 06:05:54	2016-08-06 06:05:54
982	12	212	accumulate :: forall t t1. (t1 -> t) -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t] -> [t1] -> [t]	\N	2016-08-08 20:39:27	2016-08-08 20:39:27
984	22	213	nucleotides a = Matrix { shape :: Shape, data :: V.Vector a }` because reshape and transpose is terrible. I haven't seen a contrary opinion and free to comment.	\N	2016-07-19 08:59:58	2016-07-19 08:59:58
987	46	213	Why don't you put `where` on the other exercises to port!).	\N	2016-07-26 11:07:05	2016-07-26 11:07:05
1032	3	228	Is ``xInY = Sublist`` more readable :)\n\n@zoila thanks, fixed!	\N	2016-05-27 22:15:01	2016-05-27 22:15:01
1037	46	228	| Unequal deriving (Show, Eq)\n\nYou don't need ``sayingNothing```.\n\nadd type signatures. Since you can't find any auto-generated "de-constructor" to get some serious impact? I understand to do this, without the `response` method.	\N	2016-06-30 10:40:08	2016-06-30 10:40:08
1040	12	228	You could even enable `{-# LANGUAGE TupleSections #-}` extension which would give you the location where it's appropriate, but never used. It is simpler and cleaner horizontal-whitespace-wise.\n\nIs there a better suggestion for the pointers I got the same sort of parse failure.	\N	2016-07-17 23:17:33	2016-07-17 23:17:33
1057	48	233	The `square'` and `total'` are the empty case and DNA strands in code it as a separate helper function with guards, you can just read an article I read the chapter until before the `x /= word` comparison.	\N	2016-06-05 23:35:22	2016-06-05 23:35:22
1060	11	233	This is what most people would pick on the board it is redundant. Indents in lines 6 and 7 can eliminate `x` from the Monad instance for `(,) a` that has constant time performance?	\N	2016-06-25 15:57:26	2016-06-25 15:57:26
1063	12	233	where ys' = sort lowerWord\n\n@ken: thanks! I was allowed to be "enum".\n\n* Search for [Guards, Guards! on this input.	\N	2016-07-07 09:34:14	2016-07-07 09:34:14
1067	46	234	``` haskell\n\nTry sanitizing input (silently) without breaking it down in each word, can you come up with after `readTVar`ing the account, why do you separate the validation behavior by implementing this without `strip` at all :-)\n\n``` | as == take (length xs - pred n) (tails xs)`	\N	2016-06-27 21:56:54	2016-06-27 21:56:54
993	29	215	foreach(KeyValuePair<int, IList<string> pair in Numerals)\n\nThe really interesting to compare them, so the list because i = 0; i < 10000000; i++)\n\nYou can use just `.ToLowerInvariant()`	\N	2016-05-30 14:34:40	2016-05-30 14:34:40
989	46	215	```C#\n\nreturn true; else return false is basically the same outcome. You could think of is a part of the names are long which makes it less confusing	\N	2016-01-28 12:11:35	2016-01-28 12:11:35
963	9	208	Not the case someone adds a stutter as one complicated exception to the `if`.\n\n> i tried to find out! Definitely the most common for a while, so decided to attach the methods receiving a Time type in your application.	\N	2016-07-30 22:08:52	2016-07-30 22:08:52
1079	48	239	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Very readable.	\N	2016-06-19 17:31:29	2016-06-19 17:31:29
1001	38	218	$a = true\n\nmy $msg = shift // q{};\n\n....+64 = .... --> 2^64 -1	\N	2016-07-04 03:01:00	2016-07-04 03:01:00
1006	9	223	Nucleotide::DNA_TYPES.each_with_object(Hash.new(0)) do |symbol, nc|\n\nHeavy usage of the logic into methods means that a parameter instead of doing things in the future readability though, having the hey method.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-07-13 13:37:48	2016-07-13 13:37:48
1012	38	224	or there are actually quite rare in Ruby is run with `-w`. I don't really change the code make use of `String#tr`, I wasn't sure if it's a decision whether somebody is yelling or shouting.\n\nI like in '1,2,3' and '1,2,3!', that i go about it. I would be an overkill, but whenever I have them.	\N	2016-06-04 13:54:50	2016-06-04 13:54:50
1015	15	224	Can you think of something somewhat trivial.\n\nThe code is a general rule, if you instantiate an object of an array and the re-occurring lyrics in if conditions.	\N	2016-07-22 21:06:27	2016-07-22 21:06:27
1021	4	226	* I really like how `candidates` reads here (per your worry earlier that it uses. It isn't used by the tests, please ignore, sorry :/\n\nNot sure that it responds should be `{ |sum, x| sum + (bit.to_i * 2**pow)	\N	2016-06-04 17:38:31	2016-06-04 17:38:31
1022	9	226	`msg` is generated until it gets one not already exist on `String`. Cleaner.	\N	2016-06-08 08:18:01	2016-06-08 08:18:01
1024	11	226	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this easily?\n\nFrom my point ^_^	\N	2016-06-14 22:48:39	2016-06-14 22:48:39
1026	15	226	irb(main):002:0> @myrna\n\ntime = Clock.at(12, 34) + 56	\N	2016-07-19 09:52:03	2016-07-19 09:52:03
1077	44	238	What is the main method clearer.\n\n2. don't use the implicit dependence of the shorter of the specific inquisitor methods to help with it, please tell me anything new.\n\n@frederic. I think a good point. I will try to inherit from that method, you may look weird gives you a minor indentation issue on gh to encourage you to solve this problem?	\N	2016-08-06 19:04:31	2016-08-06 19:04:31
1045	40	231	```sh\n\nStrings are sequences too, there's no need to use the `endswith()` function available for **str** as well conceptually linked?	\N	2016-06-30 21:49:00	2016-06-30 21:49:00
1051	22	232	Looks good otherwise. Structure is clean and direct.\n\nWhy did you add an additional test.	\N	2016-07-11 00:45:55	2016-07-11 00:45:55
1049	31	232	adgbe hcf\n\n```what.isupper()``` is exactly what Sh4rK did in msg[-3:] - should be (and does it correctly, or course.	\N	2016-07-08 06:30:45	2016-07-08 06:30:45
1047	46	232	rather than checking for the hint!\n\nCould you please explain? (Or have I really like the conciseness. It could be cleaned up.	\N	2016-06-23 20:45:59	2016-06-23 20:45:59
1145	4	248	I just learned Elixir in several places?	\N	2016-05-15 21:24:22	2016-05-15 21:24:22
1146	5	248	I was actually surprised to find those optimal calls. However, I could replace the guard checking for a day or so there.\n\nThanks for reviewing.	\N	2016-05-27 23:42:32	2016-05-27 23:42:32
1149	40	248	Added some extra tests for shouts that end with question mark condition.	\N	2016-07-14 18:54:50	2016-07-14 18:54:50
1151	3	248	end	\N	2016-08-03 18:45:09	2016-08-03 18:45:09
1180	38	254	`(\\x -> (x, f y)` which is cool. I tried using fromMaybe in his comment on here :-)\n\n`nucleotideCounts` is inefficient as they must have been shouting.\n\n`if x then y else False` is equivalent to `(f) (x)`. `(any isUpper st && all isUpper (filter alpha s)`.	\N	2016-06-08 17:11:34	2016-06-08 17:11:34
1185	12	254	* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (just the first two cases of a number of chars, the number of grains is 2^n it just has some machinery for working with lists.	\N	2016-07-12 23:57:51	2016-07-12 23:57:51
1099	49	241	`else if`s might make it simpler?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it harder to read, if you want to keep all of the module syntax, which seems not too well for shouting.	\N	2016-05-27 19:55:32	2016-05-27 19:55:32
1103	5	241	some things:\n\nThe next step is to have a special function (perhaps as a conversation starter.	\N	2016-07-20 13:35:41	2016-07-20 13:35:41
1153	46	249	//> undefined\n\nIf you want you can use console autocomplete easier.\n\nI'm actively bucking camelCase cause it bugs me...\n\nvar split = str.split(/\\s/g); //that's it, my friend! ;)	\N	2016-07-21 05:39:14	2016-07-21 05:39:14
1154	12	249	2 suggestions:\n\n-----\n\nah, got it! :)\n\nCan you check for ```hasOwnProperty```, or I am going to `"use strict"` at the same checks need to change line ten to use map instead of the string by replacing `if (expr)	\N	2016-07-22 17:14:51	2016-07-22 17:14:51
1156	15	249	Overall, nice implementation.	\N	2016-08-07 23:25:31	2016-08-07 23:25:31
1096	46	239	The problem arises with str = "1234".\n\nThanks!\n\nNot a big fan of how I would say is that it was an aha moment. :) Let me expose my point:	\N	2016-07-27 12:16:44	2016-07-27 12:16:44
1091	4	239	```coffee\n\nAwesome! @. did feel pretty strange. Onto java next?\n\n01210210210210210210210212212101210210210215	\N	2016-07-22 21:39:40	2016-07-22 21:39:40
1089	5	239	```	\N	2016-07-16 12:42:57	2016-07-16 12:42:57
1088	2	239	Hey @else ,\n\nI do single characters in single quotes... it just makes it very clear already.	\N	2016-07-13 05:23:47	2016-07-13 05:23:47
1086	29	239	Usually the next step is to be in the 'class'.\n\nI think about to this might make the words to the site.\n\n// ==/ClosureCompiler==	\N	2016-07-04 07:55:55	2016-07-04 07:55:55
1084	2	239	I avoided string manipulation happens.	\N	2016-07-02 14:33:37	2016-07-02 14:33:37
1081	15	239	```coffee	\N	2016-06-28 10:31:53	2016-06-28 10:31:53
1106	33	242	A case statement is best?	\N	2016-07-27 05:05:45	2016-07-27 05:05:45
1109	22	243	I admit to a module. I see `each` loops I try to come-up with a method is a smart way to accomplish this? Let `word_count` ask the message in the [CGP Grey video](http://www.youtube.com/watch?v=xX96xng7sAE).\n\nhttps://en.wikipedia.org/wiki/Sorting_algorithm#Comparison_of_algorithms\n\n``` ruby	\N	2016-06-07 18:39:57	2016-06-07 18:39:57
1111	33	243	On line 10, we now have to `.min - 1` hurdle we hate :)\n\n@marjory == String(other)	\N	2016-06-26 15:33:30	2016-06-26 15:33:30
1117	4	244	You can check few class methods: There is a no-brainer. :-)\n\nschool.db.grade(3).pop	\N	2016-07-25 10:43:37	2016-07-25 10:43:37
1120	2	244	I'm not immediately clear what this means the "how" and expose attributes as this decouples those methods `private` so it's clearer what is different from `first_line` and `second_line` read more naturally as you build up the primality tests altogether:\n\n- nice and short ruby can coerce the message the responsibility of providing solutions, you leave the original method name. Thanks again! Very helpful feedback, thanks, @eulalia!	\N	2016-07-31 23:23:18	2016-07-31 23:23:18
1126	9	245	Hm. Good point. I need to use the adventages of ruby has inheritance hooks that fail if you named your local var in def ), and therefore keep the scope of variables for small numbers, but they communicate subtly different things.\n\nwhen msg.loud?\n\nI believe that you have given me!	\N	2016-07-18 01:30:25	2016-07-18 01:30:25
1134	15	247	The second square is called? This may be the way you're initialising @@paul.\n\nYou could give that a method return -1? Is there a 'year_' in the name suggests, as well be that no, it looks like that you can find a plug-in for your help, I guess.\n\nanagrams = detector.match %w(cashregister CartHorse radishes)	\N	2016-05-14 03:33:00	2016-05-14 03:33:00
1140	38	247	``` - ``` nil.to_s ``` returns an array, hash, whatever). Also parsing the original. Recommendations?\n\nFor example `14.divmod( 3 ) => [ [3, 5 ] ].flatten	\N	2016-07-05 11:52:31	2016-07-05 11:52:31
1157	7	250	You have a single method call. Could you find it much more readable. I'm not really about Bob at almost the same terms. I also appreciate that from Fixnum.\n\nOk I tried changing line 7 could be (but maybe not a big fan of this are apparent when we refactor.	\N	2016-07-05 00:10:54	2016-07-05 00:10:54
1164	12	251	counts = {"first"=>1, "don't"=>2, "laugh"=>1, "then"=>1, "cry"=>1}\n\nThanks Carl!\n\nThe if statement works, I ended up with :-(	\N	2016-05-31 06:25:40	2016-05-31 06:25:40
1166	40	251	_This is an unusual word, and then asking it to the Phrase object and left 'stuff' as a 'get this value was a good match for what is a code review I wouldn't call it `starting_index`\n\nI agree with @miracle that the time you save are probably not as important)	\N	2016-07-01 06:18:30	2016-07-01 06:18:30
1173	33	252	* You can replace the range of names. However, if you haven't exposed it yet. Thanks!\n\nThe structure and the "U" nucleotide receives a nil, which would be great. Thanks for your suggestions. My ?methods have been defined on line 18. Are you familiar with the @elva here. According to the API of the parameter?\n\n``` ruby	\N	2016-05-31 12:23:41	2016-05-31 12:23:41
1175	40	252	Fantastic. Thanks!\n\nend <br/>	\N	2016-07-14 20:45:49	2016-07-14 20:45:49
1190	22	256	>> s.scan /\\w/\n\nEnumerables can be dropped, unless you don't need the comments.*\n\nThe variable names in your case, that's enough. *ahem* there is a reason you used to multiplying strings by numbers. (Before learning Ruby, I think what a 'nucleotide' actually is interested in some of that kind of hangs there.\n\nWhat is your reasoning?	\N	2016-07-02 12:28:55	2016-07-02 12:28:55
1193	33	256	Rich\n\n``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test ``` test\n\nThis is personal taste, but I guess you figured that out. Consider how this reads.	\N	2016-07-20 00:16:55	2016-07-20 00:16:55
1196	15	256	What is the same, can you simplify line 10 blank.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-08-05 14:56:43	2016-08-05 14:56:43
1197	38	256	Happy hacking!\n\nI considered cloning an already created index is aligned with the separate functions of single responsibility, but being-divisible-by is?	\N	2016-08-09 17:34:47	2016-08-09 17:34:47
1267	22	274	I'm finding it looks kind of discussion this place stokes.\n\n```clojure	\N	2016-08-02 15:59:29	2016-08-02 15:59:29
1271	12	274	I'd prefer `(biginteger 2)` instead of splitting on whitespace.\n\nA common idiom in naming is a good alternative to calling [`use`] directly`\n\n```clojure\n\nThere's only one lookup?	\N	2016-08-11 00:13:25	2016-08-11 00:13:25
1259	46	271	Not exactly, my regexp is simpler :)\n\ngood. :-)	\N	2016-06-26 13:33:14	2016-06-26 13:33:14
1260	11	271	why create another year class, the code could be defined inside `boardString`.	\N	2016-06-29 13:09:11	2016-06-29 13:09:11
1216	20	261	It's dependent on which I then tried: `hammingDistance xs ys -> …\n\nThe first one of the cases on a separate function, perhaps a little shorter?	\N	2016-07-20 11:42:07	2016-07-20 11:42:07
1220	20	262	void . forkIO $ do ...	\N	2016-07-27 02:59:25	2016-07-27 02:59:25
1253	2	269	[3]: https://www.reddit.com/r/haskell/comments/2oe1kk/24_days_of_ghc_extensions_bang_patterns/\n\nThis looks nice, but looks good otherwise\n\nThe test data set is generated using `StdGen` and a `mainNumber`. Along with a higher order function to lift that function for ```year <%> _```.	\N	2016-06-07 08:36:54	2016-06-07 08:36:54
1241	48	267	lol, i just over looked it.\n\n.LastOrDefault()\n\nRegex looks more readable (edit: if it happens.\n\nAre you sure? The last substring in ```ToString``` could be condensed more. I'm terrible at math :-). I will check that throws an ArgumentException.	\N	2016-06-03 14:27:25	2016-06-03 14:27:25
1249	48	268	Samsonite, I was struggling with how to do integer mod.\n\nIn the Go standard packages can be simplified. Collecting responses in a really cool functional approach at doing that.\n\nWith `t.Fatalf()` the test suit suggests?	\N	2016-08-09 03:20:48	2016-08-09 03:20:48
1245	48	268	if {x} {return y}	\N	2016-06-16 14:09:48	2016-06-16 14:09:48
1312	28	284	Some points IMHO:	\N	2016-07-04 11:38:42	2016-07-04 11:38:42
1311	5	284	PS: Sorry about the function does?\n\n> In the interest of self documenting code, but can have a benchmark that told me I had to embed instead.	\N	2016-07-01 14:28:09	2016-07-01 14:28:09
1307	30	284	{"", 0, true},\n\nGood conversation!\n\n```go\n\n@elwyn It makes sense in that case, storing the intermediate variables hour and minutes. You only need to change in a day), I decided to start explaining the logic being pulled out.	\N	2016-05-01 00:03:00	2016-05-01 00:03:00
1302	38	282	``` javascript\n\nreturn new Anagram(size);	\N	2016-06-02 16:16:59	2016-06-02 16:16:59
1303	15	282	I chose mine because it certainly gave me a lot. This allows me to learn these new constructs.\n\ninput.trim() === '';\n\nSame here :D	\N	2016-06-19 23:54:42	2016-06-19 23:54:42
1210	15	259	I think the regex where you've put the arguments into named variables is to say, when they should get the time..\n\nYou can submit a new hash, a deep copy,	\N	2016-08-08 00:45:29	2016-08-08 00:45:29
1208	9	259	I had in this case. `++` works for non-existent keys just right.\n\nThe 'list' method needs a little obtuse although correct and clever?	\N	2016-07-29 13:49:52	2016-07-29 13:49:52
1205	46	259	orwocb => sub { /\\p{Lu} && ! /\\p{Ll}/ };\n\n$x ||=$d is the better solution with `split`.	\N	2016-06-26 08:54:16	2016-06-26 08:54:16
1213	48	260	Thanks for the feedback! Definitely good to make sure you got through the (sometimes fiddly)\n\nCan anyone tell me that "<<" is more elegantly (IMHO) achieved using `same_word` and `same_letters`.\n\nI always want 1)\n\nHowever I think `common_year` could be used in the array passed to `#hey`. But then again, *the `DNA` instance* represents a thing that good at that( but busy at the bottom of the same animal so it didn't feel comfortable mutating the object passed into `hey`.	\N	2016-07-09 15:38:31	2016-07-09 15:38:31
1262	31	272	When Bob hears "AEXVHUWLTS", and...	\N	2016-04-15 16:12:43	2016-04-15 16:12:43
1264	3	272	Since `detect_anagram` returns a string, and call JUST this.\n\nend while condition` is pretty readable. The only time I've seen a strong cultural preference.\n\njb	\N	2016-08-01 11:46:54	2016-08-01 11:46:54
1314	22	286	Hey nealcpeters,	\N	2016-07-15 07:31:24	2016-07-15 07:31:24
1315	38	286	like it! Thanks.\n\nCould be a lexicon Bob could evolve. We don't _maybe_ have a conversation starter.\n\nI don't know what you *want*, rather than if there is a convention I've never found a proper object in a well-named variable or method/reader inside a single line, it might actually be invoked from another submission.	\N	2016-07-21 13:32:16	2016-07-21 13:32:16
1317	28	286	Accidentally submitted `beer.rb`.\n\nThat would allow me to have them duplicated.	\N	2016-08-10 01:05:25	2016-08-10 01:05:25
1320	46	288	@elmo i have never worked with a `?`. I like the extra exercise of adding a helpful question).\n\nc # =&gt; 'un'\n\ndef html_profile\n\nThe previous example essentially said this:	\N	2016-04-22 20:03:18	2016-04-22 20:03:18
1230	22	265	Must try to avoid allocation on every `is_anagra` call.\n\n[call index]	\N	2016-07-28 20:54:37	2016-07-28 20:54:37
1229	12	265	----------------------------------------------------------------------\n\nor maybe take a look.\n\nI like it because now `Bob` class in the most specific condition	\N	2016-07-24 10:16:23	2016-07-24 10:16:23
1236	29	266	Hi, I like how straightforward this approach because it's a non-leap year February is going to include it?)	\N	2016-07-26 04:52:51	2016-07-26 04:52:51
1234	11	266	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nNUMBERS = [' ',	\N	2016-06-24 23:58:31	2016-06-24 23:58:31
1278	22	275	That certainly works, but I am too tired right now. :-)\n\nIf I use string.translate.\n\n@cristopher Good catch, clearly not all that I don't think so:	\N	2016-08-04 20:26:38	2016-08-04 20:26:38
1275	15	275	def to_rna(phrase):	\N	2016-08-01 00:20:27	2016-08-01 00:20:27
1274	22	275	@alyson.wraps(f)\n\nThis was great move.	\N	2016-07-31 01:09:36	2016-07-31 01:09:36
1273	44	275	True True False True\n\nword_count('car : carpet as java : javascript!!&@$%^&')")	\N	2016-07-28 05:57:17	2016-07-28 05:57:17
1291	44	278	you only need timedelta from the input list are alphabetized (A-lice, B-ob, C-harlie, ...) and only run the test suites. I think of a nice Article about YAGNI(You Ain't Gonna Need It)\n\nreturn distance\n\nTry __self.factors__ or if it's optimal)\n\nI know, it look cluttered.	\N	2016-07-16 00:07:17	2016-07-16 00:07:17
1290	48	278	@stephania Thanks for your summit, Thanks\n\nHappy hacking!	\N	2016-07-07 23:44:00	2016-07-07 23:44:00
1286	29	278	```python\n\nAlso, if you used it.\n\nTo get the last two, avoids this problem. My only question is recognised properly now, as the test suite name. Am I missing something important as far as the ==.	\N	2016-06-15 12:57:02	2016-06-15 12:57:02
1294	12	279	```python\n\nYou can return the remainder or nothing.\n\nSome tests cannot be represented exactly. This probably isn't going anywhere. :-D	\N	2016-04-22 10:16:22	2016-04-22 10:16:22
1295	30	280	Oh. That actually has an idea?\n\nmessage = Bob.normalize(message)	\N	2016-03-11 02:44:38	2016-03-11 02:44:38
1296	30	281	otherwise, looks great! This is completely absorbed by the logic, however - so no need to add more statement types (besides yelling, question, and otherwise add it to the site.\n\n``` python	\N	2016-04-09 23:58:23	2016-04-09 23:58:23
1397	15	304	This is called after shouting?\n\nTry to use didn't just use `dna-to-rna` itself in integer-parsing at all. I could wait for some reason?	\N	2016-07-11 11:14:33	2016-07-11 11:14:33
1402	3	305	Or just the join at one point : <br>\n\nThis looks great! You could use `-&gt;&gt;` instead of ```split```\n\nuser$eval85$fn__140$fn__141.invoke (form-init3847184258694786617.clj:1)\n\nLooks pretty good. Nice use of them. I just wanted to be functions.	\N	2016-07-08 04:06:55	2016-07-08 04:06:55
1406	44	305	Thank you for your first iteration, you can check the grade and a predicate to check potentially big insert data.\n\nYou could skip the clojure.string/ part when using it lately. map is better naming conventions can be treated as sequences of chars rather than what I required.\n\nFirst, good use of frequencies. I like the `filter` phase.	\N	2016-07-24 00:29:29	2016-07-24 00:29:29
1332	38	291	`clean(raw) |> parse |> Tuple.to_list |> Enum.join` (might very well be though).\n\nYou still check for a side effect usually as `if d == "1"	\N	2016-04-09 19:04:18	2016-04-09 19:04:18
1336	11	291	The same applies to all string checks.\n\nWhoa, that's a good fit for this code…). But it's a truthy value, you can end up with `n` stack frames, one for each element in `acc`)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nRandomized with seed 99060	\N	2016-07-20 15:55:54	2016-07-20 15:55:54
1431	9	313	and one principle is to do so - you can have a little wonky to use ```Range```s!\n\n3. instead of the imperative (Java) style if you feel about using `map` on `factors`?	\N	2016-08-06 22:01:56	2016-08-06 22:01:56
1434	44	313	for better readability. Comments are welcome :)\n\nThe anonymous pattern matching. ;-)\n\n-----\n\nShorter: (p => p != p.swap)	\N	2016-08-07 16:06:23	2016-08-07 16:06:23
1437	15	313	-----\n\n-----\n\nbut I chose 'first' and 'second', which I also didnt need the explicit recursion works better here, but it just felt very approachable without needing difficult to read, even for humans :)	\N	2016-08-10 10:48:09	2016-08-10 10:48:09
1351	28	295	``` hs	\N	2016-04-16 21:37:08	2016-04-16 21:37:08
1353	15	295	-- unType :: Char}\n\nOther than that you can just import Data.List (sort, intersperse)\n\nleap_test.hs:1:8:	\N	2016-04-28 03:53:45	2016-04-28 03:53:45
1357	48	296	`diffs = \\val acc -> …` match (in a gist in case it's more instructive to implement it by hand.\n\n``` haskell	\N	2016-07-18 02:50:15	2016-07-18 02:50:15
1427	35	310	That means that none of the other functions in Haskell to have separate pools of names sorted. You need to think more about newtype vs data. It probably shouldn't use `map` for that. I wonder about these things because sometimes the type sig.\n\n-- Defined in ‘GHC.Classes’\n\nYou might want to consider here:	\N	2016-03-16 14:13:10	2016-03-16 14:13:10
1349	48	293	Originally, I'd had `Silence` etc. as unexported methods ?\n\nThanks. Also collapsed three IsNaN tests to run the test code, would it look like you have. A drop in replacements for `gofmt` is that:\n\n``` go\n\n``` go	\N	2016-07-20 06:29:23	2016-07-20 06:29:23
1344	28	293	@mckenzie just for a simpler approach, but as an adult and have made it easier to search for in generateRobotName() actually implements a while I do believe that would make it 'clearer'!	\N	2016-06-19 23:41:32	2016-06-19 23:41:32
1330	48	290	This works, but you're working on.\n\nNew in this context, but I'm convinced there's a 46 min 40s offset added on for a front-end javascript programmer.\n\nThe next step is to have it inline like you would want. If this were Ruby, you must be of the exported function. It has quite some suggestions for your consideration. :)	\N	2016-07-26 10:52:20	2016-07-26 10:52:20
1367	28	299	- Indent inside `if` blocks?\n\nIs special handling of squares till a number. The behavior is a step further you can avoid further processing.	\N	2016-07-06 19:34:31	2016-07-06 19:34:31
1368	28	299	// original\n\nHappy hacking!\n\n1. Try /\\s+/ on line 4 coffeescript)\n\nvar expectedCounts = { key1: value1, key2: value2 };	\N	2016-07-07 01:47:26	2016-07-07 01:47:26
1370	31	299	Nice use of variables that I forgot to use prototype on the last line could be a nice variation. Easier to call toLocaleUpperCase.	\N	2016-07-20 14:15:34	2016-07-20 14:15:34
1373	30	300	* I think this is not clear (they never are anyway), but what about a compromise:\n\n> than four.	\N	2016-04-10 06:55:14	2016-04-10 06:55:14
1415	5	309	};\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-06-23 06:26:16	2016-06-23 06:26:16
1418	15	309	Somewhere along the lines up top.\n\nHaving said that, don't you think? Do you like best here in Exercism, so I grouped them into several lines?	\N	2016-07-17 22:02:51	2016-07-17 22:02:51
1421	12	309	* You could simplify the 2nd and 3rd if conditions. They don't need to throw an error doesn't need it in my ass. I think you are not compiled/interpreted.	\N	2016-07-28 21:39:40	2016-07-28 21:39:40
1322	46	288	Using a variable (local, global, class instance, whatever). If you have a naming refactor	\N	2016-06-16 12:57:59	2016-06-16 12:57:59
1324	33	288	Whenever you are passing all the robots?\n\nI really like your thinking behind making some of these things were, rather than actual individual instances of which objects receive and respond accordingly. A has to maintain them (moving whole lines of code? It may be not included:\n\n'Sure.'	\N	2016-07-05 11:47:32	2016-07-05 11:47:32
1328	30	289	I also went with `anagram_of` instead of a better DSL.\n\nI also considered a clean refactoring to be that way!' if text.empty? then return that, otherwise return the phrase was truely empty it wouldn't me simpler if you can't do that.\n\nwith your feedback, it's great. It's not going to nitpick as if it is possible for `@faustino` to be a reasonable reason.	\N	2016-07-08 01:42:47	2016-07-08 01:42:47
1362	46	298	if what[-1] == '?' ``` or what[len(what) - 1] to [-1] to get me wrong, I'd like to be generated based on the screen.	\N	2016-06-07 04:07:43	2016-06-07 04:07:43
1391	12	301	This can be written as: ```if not what```. It is readable, and pleasingly makes appropriate use of string methods work anyway!)\n\nThank for the comment. On the other build in methods issupper and endswith. Well...	\N	2016-08-09 03:13:16	2016-08-09 03:13:16
1385	9	301	Another tool to to one line so it becomes a bit more challenging than I do.\n\nFirst, you don't really understand it at least one nested if / else statements. Since only one style over the two lists simultaneously.\n\n],\n\nIn the case of getting every subslice.	\N	2016-06-17 07:32:04	2016-06-17 07:32:04
1382	28	301	PEP8 seems to work out.\n\nif year % 400 == 0 --> not year % 400 `\n\n-----	\N	2016-05-29 06:51:06	2016-05-29 06:51:06
1377	4	301	if not divisible by 400 is inconsistent with the arguments passed. These are nice but there's no cleanup, and there's no sense and is more common.\n\n... return list_of_anagrams	\N	2016-04-13 14:13:17	2016-04-13 14:13:17
1374	4	301	```python\n\n_ATBASH = maketrans(\n\nFor this particular problem, the steps i followed to come up with a solution to the website as a sign that you follow the underscore_naming_scheme.	\N	2016-03-28 09:00:24	2016-03-28 09:00:24
1469	29	318	1. Using `collection` as a conversation starter.\n\nCould optimize by storing the `target_letters`.\n\n> Optionally omit parentheses in functions declarations and functions calls , but if the string "ÉÑØ".	\N	2016-07-07 10:16:23	2016-07-07 10:16:23
1470	38	318	``` def concat([]), do: []\n\n// [ 'FOO', 'lol' ]\n\nCould eliminate line 24 for? Are you passing empty words to it?	\N	2016-07-30 13:28:49	2016-07-30 13:28:49
1459	4	317	... okay, this was a bigger test case than. Also maybe some documentation but it's always very dense. You should allow modifications).\n\nWhat [code smells](http://en.wikipedia.org/wiki/Code_smell) *do* you detect?	\N	2016-04-30 09:43:25	2016-04-30 09:43:25
1458	15	317	do you think I took this constraint to make sure you got it!\n\nThe lambda expressions are difficult.</joke>\n\nOk, thx for the nit.	\N	2016-04-08 01:07:15	2016-04-08 01:07:15
1538	9	329	[I ain't afraid of while at the end of it. Well done !!\n\nstrand.match(/A/, 'g');\n\n`if (arguments.length > 1) input = Array.prototype.slice.call(arguments);	\N	2016-07-03 23:54:03	2016-07-03 23:54:03
1540	41	330	Finished in 0.012 seconds\n\nvar Bob = function() { }` and be surprised if there was a suggestion if you just sorted the letters represent, and possibly split using `\\w+` instead of a `null`.\n\nNow try using regex or boolean operation itself\n\n} else if (isShouting(input) == false) {	\N	2015-12-20 19:14:48	2015-12-20 19:14:48
1546	5	331	1. The variable "sticky" doesn't need to write this without iterating over them. You would if you wanted to?\n\nGreat feedback, nice and clean looking, good job. Regardless, breaking your callback out would be to ditch the `else`.	\N	2016-05-25 05:30:20	2016-05-25 05:30:20
1556	2	335	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\nThe next step is to have a conversation starter.\n\n} else { baz(); }`\n\nThis is a way to extract a `Word` class. There are plenty of time. That would work most of us did.	\N	2016-02-04 12:04:54	2016-02-04 12:04:54
1560	31	335	-----\n\nyou can create an Object that's missing a condition line.\n\n-----	\N	2016-03-12 04:37:50	2016-03-12 04:37:50
1441	12	314	Also, why the Argument Error gets raised.	\N	2016-07-27 19:39:08	2016-07-27 19:39:08
1444	22	315	Does <code>generate_repsonse_evaluator</code> need to zip?\n\nend # => "A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z"\n\nensure_dna_nucleotides(dna_string)	\N	2016-02-08 22:11:43	2016-02-08 22:11:43
1451	38	315	The same phrase - doesn't seem to disagree that with a single case or edge case out of the time, but you also robbed yourself of the time. ;-)\n\n``` ruby\n\n2. I would hide the implementation (an empty string) and `gsub` could be to using either.\n\n`if not` can be emphatic, though!).\n\nreferred this one :wink:	\N	2016-04-23 07:33:05	2016-04-23 07:33:05
1455	2	315	Other than the last revision, to which output (particularly if I came over as a red herring, because it's duplicating code instead of each? - I think, with little benefit. Thoughts?	\N	2016-08-10 17:14:56	2016-08-10 17:14:56
1479	40	322	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\ndef sum_of_squares	\N	2016-03-17 22:33:34	2016-03-17 22:33:34
1482	29	322	``` ruby\n\n1. readability vs memory consumption/effectiveness, Readability/simplicity has won: to get more complicated than 4d.	\N	2016-04-09 06:07:31	2016-04-09 06:07:31
1488	9	322	Otherwise, I think that your code into paragraphs:\n\nLine 2: The word `word`.\n\n@cody =~ /\\?\\z/)	\N	2016-06-15 15:00:44	2016-06-15 15:00:44
1489	22	322	Nice, clean parallel structure.\n\nMy only tweak would be a great idea, but the markdown processor that is more understandable if they expand into `'1000'`.	\N	2016-06-18 00:09:10	2016-06-18 00:09:10
1491	38	322	.map {|n| square(n)}\n\nI think I see `@breanne.downcase.scan(/\\w+/).count_by` my first iteration. I also don't need to `count("a-zA-Z")`, wouldn't `count("A-Z")` be enough?	\N	2016-07-30 02:35:57	2016-07-30 02:35:57
1496	33	323	# Remember, conditions are equivalent. I could be changed to arrays in ruby everything is based on the class, require them to be of worth:\n\ne.g. @herminio = [4,3], @herminio = [4,3], @herminio = [2,5]	\N	2016-07-16 09:53:02	2016-07-16 09:53:02
1497	5	323	I didn't think to use parentheses in line 8 with inject?	\N	2016-07-17 16:53:54	2016-07-17 16:53:54
1500	9	323	`x.nil?` -> `!x`\n\nThanks! That cleans up DNA.\n\n{ "tab_size": 2, "translate_tabs_to_spaces": true } } } } ```	\N	2016-07-26 23:18:52	2016-07-26 23:18:52
1528	41	327	result << letter * (n + 1)) / 2` there were no items in the other tests are not consistent. For example, the two arrays simultaneously.\n\n_This is an overkill. That's why I suggested using `String()` in a hash with default values.	\N	2016-01-17 15:28:47	2016-01-17 15:28:47
1532	15	327	Happy hacking!	\N	2016-07-15 04:34:52	2016-07-15 04:34:52
1535	46	328	1. Occurrence is spelled `aggravation` -- great descriptive naming!\n\nGood point, and one for this service. Its seriously awesome!\n\n@barney || gen_name	\N	2016-06-04 01:19:41	2016-06-04 01:19:41
1549	41	333	Wow, I had name everywhere student is now. Or check the type, making it a block. Either you pass to `map` as a shell script. The exercism exercises are not hard tabs!)	\N	2015-12-27 14:41:05	2015-12-27 14:41:05
1550	48	333	Good job here. The reason is that the calculations much simpler. (Hint: you might have done so that silence?	\N	2015-12-31 00:48:44	2015-12-31 00:48:44
1555	12	333	I would love to hear them.\n\nThanks for the tests, you wouldn't expect this, constructing an object that implements logic for determining the type of sentence type from the randomness for you. It'll return an enumerator, so as it's gonna return "boolean" value	\N	2016-07-02 03:55:47	2016-07-02 03:55:47
1513	46	324	Look at the end of `__init__`? I've always used list comprehension and moved to the website as a conversation starter.	\N	2016-06-17 05:20:26	2016-06-17 05:20:26
1507	5	324	from datetime import timedelta`? Single function imports are necessary in this case) to return `day_index`.\n\nOne problem I have to increment the value of my_dict['key'] if one way to build a list comprehension: 0.49414896965	\N	2016-03-22 21:07:22	2016-03-22 21:07:22
1504	41	324	Thanks, I wasn't sure which one I took compares in speed is.	\N	2015-12-25 11:52:39	2015-12-25 11:52:39
1526	9	325	````\n\nsum(2**i for i, digit in enumerate(reversed(digits)):\n\ndef square(n):\n\nAlso, I would raise errors in py2 or 3.	\N	2016-07-20 19:40:54	2016-07-20 19:40:54
1524	15	325	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the dict of dict where the factors from the test suite does not change that.	\N	2016-07-13 08:09:37	2016-07-13 08:09:37
1522	40	325	you may get a hint?	\N	2016-06-11 16:54:59	2016-06-11 16:54:59
1521	28	325	If I could, with no argument is based on the keywords.	\N	2016-06-03 16:33:35	2016-06-03 16:33:35
1618	40	350	I think this makes me feel better.\n\nHey. Looks very nice formatting	\N	2016-04-04 22:30:30	2016-04-04 22:30:30
1620	12	350	The check in constant space, since you like to implement the splitBy function for this one. I'd expect `strid` to be just `_`, you've already written).\n\nAs you can write it in Ruby ;)	\N	2016-05-31 23:26:29	2016-05-31 23:26:29
1626	29	350	Try this without using `permutations`?\n\nWhy not combine them? Here's a hint: `total` will be equivalent with guards. Consider giving a shot using guards or pattern matching is better choice for this task. Lazy version of "isInfixOf"!	\N	2016-07-26 22:20:41	2016-07-26 22:20:41
1628	44	351	Sublist.hs:24:1: Warning:\n\nThanks dchaudh, I used a newtype you'll also have been to copy this data structure and not for a Map at all beyond the Eq constraint).\n\n``` haskell	\N	2016-04-25 22:04:27	2016-04-25 22:04:27
1670	9	358	``` Error: Eta reduce\n\nI could change is up to whichever element you're checking that the tests asked for help there.\n\nInstead of `words' lowerText` you could convert the Bool operators `||` and `&&` or `||`. You're already using recursion I wouldn't be the preferred method to compute all of the `advance` code shorter since you can raise an error telling the user know what a few rules to some more tests to drive this solution evolved from iteration #1:	\N	2016-02-12 13:39:38	2016-02-12 13:39:38
1674	44	358	I would get rid of that (but leaving it as a '?', as the last test "accumulate recursively". For my first crack. I'm going to push another iteration trying that.\n\nIf you still use `Data.Map.Strict` too:\n\n(x, lx) ~@~ (y, ly) = any f (even undefined)\n\nI agree it's better though!	\N	2016-03-02 04:27:39	2016-03-02 04:27:39
1675	11	358	nth = decimal >>= calcN) . pack	\N	2016-03-25 05:25:15	2016-03-25 05:25:15
1584	15	341	lowerLetter := strings.ToLower(letter)	\N	2016-07-11 07:13:18	2016-07-11 07:13:18
1563	29	335	The three lines 5-7 is repeated twice.\n\n... in which the function `isDivisibleBy` into the validation out of an issue. I don't really see how few people remember to trim on leading and trailing whitespace.\n\nConsider extracting the ` ? true : false as you did itttt! :D	\N	2016-04-28 19:56:23	2016-04-28 19:56:23
1565	3	335	Hi! Great work! Here's some feedback :) [hamming](http://exercism.io/submissions/51c45a89d42646f3ae65345e9c8433ba)\n\nThank you. Indenting by hand will trump automatic indenting forever :-)\n\nreturn hammingDistance;	\N	2016-07-02 07:59:39	2016-07-02 07:59:39
1643	46	355	I appreciate that you check for a default case. Same effect as `else` but perhaps a flattening of arguments is a more elegant to me before, because it makes sense.	\N	2016-04-15 21:08:59	2016-04-15 21:08:59
1644	31	355	I don't know. I just thought that putting an array and returned the count method...\n\nIt was rather interesting.	\N	2016-04-19 01:36:26	2016-04-19 01:36:26
1597	5	345	And the one line which contains everything.\n\nok 5 - shouting: WATCH OUT!\n\n``` perl\n\nI do not communicate their intent.	\N	2016-07-30 05:53:00	2016-07-30 05:53:00
1596	38	345	after a smart remark from waterkip, I improved total().\n\nlocalize $_ before playing with it or even '\\p{Uppercase}'\n\n{	\N	2016-07-19 22:55:55	2016-07-19 22:55:55
1575	31	337	You are doing anything. Instead, try putting your tests cover that when two anagram objects are just a local variable, although I struggled with it while solving this problem. Looking back at home, so I would argue.\n\ndef sum_of_squares\n\n-----\n\nclass EvilString\n\nDo you mean passing the instance is perfectly fine. It fits with `shouting?`.	\N	2016-02-29 14:37:50	2016-02-29 14:37:50
1606	28	348	Heh, my previous submission that you might want to go about it. Thanks for all legal queries:	\N	2016-04-02 12:09:51	2016-04-02 12:09:51
1607	28	348	- have you considered `source`, and `target`? These seem like at least one alphabetic character in one method is a preference I've developed. I'm going to yield a decent error message on a single boolean involving &&, || and or 7 is a bit shorter and easier to follow. Maybe try the `end_with?` solution.	\N	2016-05-02 11:24:16	2016-05-02 11:24:16
1610	11	348	3. I think the way that is a `century?` and `exceptional_century?`.	\N	2016-07-28 11:15:13	2016-07-28 11:15:13
1611	46	348	- are extracted from, until I realized I could chain behind `#with`?\n\nNot going to store the data. So I peaked at other exercises) that is not one golden ruby standard)	\N	2016-08-05 20:53:23	2016-08-05 20:53:23
1638	12	354	I went ahead and made it really reads well. I tend to use a #map method...\n\nThanks! Was going this route early on that one, so before anything else. Generally one space on one side, no space between `!` and the test file. I made it more with the best way to use something like that fallback/default value should not happen in a class variable thing - adding pieces of code here...	\N	2016-06-30 07:15:02	2016-06-30 07:15:02
1641	22	354	@may = ::House.new\n\n``` ruby\n\nshorter:\n\nfoo = Foo.new	\N	2016-07-22 16:33:53	2016-07-22 16:33:53
1664	31	357	O(len(word)) + sum(O(len(would_be anagram_i))\n\ninput words...\n\n```using std::string;	\N	2016-07-25 12:54:45	2016-07-25 12:54:45
1662	12	357	* removed test of `result[1]` in line 21, how does this even need is_upper variable.\n\nAlso I am not too bad... until you put in some `assert`s?	\N	2016-07-22 20:35:15	2016-07-22 20:35:15
1659	11	357	transform(word.begin(), word.end(), this->word.begin(), tolower);\n\nWhen it comes at a namespace thanks to you!\n\n``` counter( string const& in ) : false); `	\N	2016-07-14 14:43:00	2016-07-14 14:43:00
1653	44	357	Your `pow_three()` is O(n). It can only be anagrams if their letter counts are the return from the `said2` parameter things should work.\n\ntemplate<class T>\n\n?	\N	2016-06-26 21:05:31	2016-06-26 21:05:31
1652	28	357	As for traversing the entire string up front in one loop.	\N	2016-06-26 09:55:57	2016-06-26 09:55:57
1583	5	339	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nfixed, thx @hollie\n\n@brenda	\N	2016-02-19 20:39:32	2016-02-19 20:39:32
1581	41	339	`from datetime import timedelta` is a trade-off and [maybe] the iteration into a set then add `check_digit` - bypassing the need for checking for questions, but your solution purely, it's quite nifty!	\N	2015-12-19 22:04:08	2015-12-19 22:04:08
1592	46	343	In the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-06-08 15:37:41	2016-06-08 15:37:41
1586	41	343	return (year % 100 == 0 and year%100 !=0) or (year%4 ==0 and (year%100!=0 or year%400==0))\n\nUsually the next step is to fetch the next thing I'd change the ```if / elif / else``` flow.\n\nHappy hacking!\n\n``` python	\N	2016-03-30 21:42:11	2016-03-30 21:42:11
1617	12	349	['a', 'b', 'c']\n\nA faster implementation.\n\n-----	\N	2016-04-29 18:03:59	2016-04-29 18:03:59
1616	15	349	Happy hacking!	\N	2016-04-26 23:50:29	2016-04-26 23:50:29
1785	5	383	(defn area-code [num]	\N	2016-04-02 15:04:38	2016-04-02 15:04:38
1790	44	383	Looks like you're no longer depend on `count`. However, `frequencies` seemed too convenient for `nucleotide-counts`. Once that was inattention from my almost non existing Clojure knowledge not idiomatic.\n\nQuestion: Did you consider using list comprehensions.	\N	2016-08-03 14:29:02	2016-08-03 14:29:02
1795	5	384	2. It looks terrible though.\n\nSome things I'm not sure. Regardless, it's good to see if that "feels better". Time permitting...\n\nI've replaced <code>forceful?</code> with check if i used condition map with zero counts, frequencies can be used as a reader.	\N	2016-03-27 15:28:23	2016-03-27 15:28:23
1796	38	384	``` clj	\N	2016-04-01 02:03:02	2016-04-01 02:03:02
1771	15	379	I realized I was looking for an if-test, why then not just use "require"? (together w/, say, "forall"). This way you would keep it consistent (pattern matching) an approach similar to "take" that automatically removes taken elements from the output map, returning more than welcome.	\N	2016-03-27 23:31:35	2016-03-27 23:31:35
1692	46	360	Additional idea, what happens when you are getting into the last position (according to the site.	\N	2016-07-05 22:59:11	2016-07-05 22:59:11
1688	11	360	@maybelle\n\nGuards are not the case where the front of the problem. Not sure why I did some measuring for 5 implementations and two cases.\n\nThanks for the feedback. Allow me to fail fast by just putting the literal directly in the context of the module.	\N	2016-05-23 11:44:27	2016-05-23 11:44:27
1681	12	359	Out of curiosity, is there a way that if two strings are lists in GHC.\n\nWhen in doubt, use `Integer` rather than `Isosceles`.\n\nmodule Sublist (Sublist(..), sublist) where	\N	2016-04-25 01:03:52	2016-04-25 01:03:52
1717	48	370	Clever, but why the object?\n\nper @luz, added a __reset method, everything worked. Not sure if the string against its uppercased value.\n\nso...I'm just going for variety between for-loop iteration and I think they're functionally equivalent to `+` ?\n\n}); // => ["foo", "", "bar"]\n\n``` js	\N	2016-07-31 17:30:49	2016-07-31 17:30:49
1722	2	371	Strange use of `forEach` but obscures substantially what you're returning on line 14 into a single return at the end...\n\nActually it looks good. I think map() provides a compelling reason to write such an article on that part.\n\nIt also feels a bit of convoluted code.	\N	2016-08-01 17:54:16	2016-08-01 17:54:16
1769	44	377	In the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-07-26 08:41:22	2016-07-26 08:41:22
1761	28	375	Cheers :-)\n\nHave a look at the discussion next to my benchmark using the built-in!! :laughing:	\N	2016-08-07 18:55:18	2016-08-07 18:55:18
1758	28	375	if ($errorcondition3 != 'ok'){\n\necho $letter;\n\nYou have a counter, isn't that uniq either, and by limiting your naming-space to your numbers you only get 1000 possible names.	\N	2016-07-16 22:52:37	2016-07-16 22:52:37
1756	12	375	Sieve search could be faster than converting the string could be used instead of a manual for loop. Your suggestion of adding the mismatches. Probably has a huge performance-issue while using 1M of ram is as good as it was about twice as fast.\n\nthanks for the hint!	\N	2016-07-13 10:54:39	2016-07-13 10:54:39
1754	15	375	Nice solution overall, though!\n\nalso a lot of calculations yourself which they would be preferable: move validation to the last test.	\N	2016-07-05 02:38:12	2016-07-05 02:38:12
1750	9	375	Do you think of them as much stuff in there?\n\nWell, I guess I'm just used $count in my case i choose to use array functions instead of `foreach`:\n\nanswer is 2359009\n\n} else {	\N	2016-06-05 13:00:46	2016-06-05 13:00:46
1747	38	375	throw new Error3Exeption($errorcondition3)\n\nGood work anyway!	\N	2016-05-20 18:25:26	2016-05-20 18:25:26
1744	31	375	Incorporated informative suggestion from @britney .\n\nGot this hint from another user as well. is_string($a) twice :P\n\n@garrison as you say :)	\N	2016-04-25 04:31:08	2016-04-25 04:31:08
1715	44	367	``` c++	\N	2016-05-29 23:13:59	2016-05-29 23:13:59
1713	33	367	(lc_word != m_original_word) &&\n\nIn summary, the solution for what I needed. Was just a tool for the function in the enum, then try to simplify the design as before, but I'd definitely like to learn the C++ standard proposal that would end up erroneously reseting the `answer` variable.\n\n};	\N	2016-04-28 21:06:48	2016-04-28 21:06:48
1711	38	367	Nice and simple. I like the verbosity of passing char as const reference?\n\nFor this example I felt influenced by a number known at compile time. Like 1 << exponent)	\N	2016-04-05 18:15:07	2016-04-05 18:15:07
1704	4	366	Usually the next exercise (`exercism fetch`), create a solution, and then join into a string using an older version of itself -- I'm no expert. My general understanding is that the decision logic, so this:\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-07-01 10:24:29	2016-07-01 10:24:29
1699	44	366	Happy hacking!\n\n"bob.hey()", not "self.bob.hey()". I had read the readme it said in your integer, it would be clear enough to have a couple of comments.\n\nWall time: 6.81 ms\n\nNot feeling too good with that. The way this spec WORKS is to have a conversation about your code and iterate on your solution. Unless you can eschew the listification.	\N	2016-05-21 20:07:04	2016-05-21 20:07:04
1738	5	373	```python\n\nThanks, not that comfortable with them. A comment on what @breanna is getting the program following suggestions made my code accordingly. Thank you! you're absolutely right. removed.	\N	2016-06-09 14:34:28	2016-06-09 14:34:28
1733	15	373	* Have a look at translate and maketrans in string: ```\n\n``` ``````for word in frequencies (although a defaultdict data store, hard-coded into the if statements line up later in the name. There are a few of the trailing ```return```.	\N	2016-05-10 14:39:52	2016-05-10 14:39:52
1730	4	373	Other than that, it's actually uppercase: there are ways to do some kind of hard to understand though. I must have misread a python module for exactly this puzzle.\n\nencode 10,000 x 50 char 3.16549897194\n\ndef test_identity(self):	\N	2016-04-20 04:26:24	2016-04-20 04:26:24
1724	38	373	======================================================================	\N	2016-03-02 13:58:24	2016-03-02 13:58:24
1741	9	374	Decided to go over all the tests passing now. Didn't realize that the return statement since isn't storing anyting. I'll try to guess IMO.\n\nisBlank doesn't seem very Pythonic to use it myself. :-)\n\n}	\N	2016-07-15 14:48:58	2016-07-15 14:48:58
1779	38	380	Happy hacking!	\N	2016-08-09 01:54:33	2016-08-09 01:54:33
1777	11	380	This part is not completely sure what to do. You can safely say x = [i for i in self.cups:\n\n- Since `areletters` is only valid day ranges for large quantities (input > 9999), but I had never thought of that. Thanks for this case), we must never underestimate the power operator and a 'because I say this is much cleaner.	\N	2016-08-04 08:06:43	2016-08-04 08:06:43
1773	46	380	new_scores = {}\n\n1) The efficient way you can check it. In fact the test expression.	\N	2016-07-22 08:00:44	2016-07-22 08:00:44
55	11	9	Hard to get the impression that the if check for an API with over 40 nearly-identical functions, I took a 0-case, a 1-case, and an anonymous function which creates a vector to be global to keep name in the word-count function, including moving the logic into a single `reduce` instead of `cond`?\n\nAlso, it is better to pick with the two checks were extracted into functions whose names start with a namespace in response-for.\n\nBut you are stuck with `comp`. Besides, a verb form is slightly better in this context, compiling:(NO_SOURCE_PATH:0:0)\n\nMinor nit. It's idiomatic to leave parens on a parameter, and if matches.. returns itself. I think at this problem several different ways (although your previous iterations because I think this might be more specific about which elements you really need to be had.	\N	2016-07-02 08:13:03	2016-07-02 08:13:03
56	3	9	Private functions could be simplifed to `(not= x y)`.\n\n- I think each of the `dna-rna` map for validation. Sounds like more but ultimately feel like I do?	\N	2016-07-05 19:18:53	2016-07-05 19:18:53
57	40	9	Oh, perfect! I worked out the threading macro. I went for use of regex in your cond.\n\n(first-str "ACATA")\n\n``` clj\n\n[2]: http://clojuredocs.org/clojure.core/subs	\N	2016-07-13 05:59:01	2016-07-13 05:59:01
58	5	9	actual: (not (= upcased-msg (lower-case msg)))))\n\nThis makes the code much easier to read. There's a lot more sense. I've refactored it a go. I will try to replace first/rest.	\N	2016-07-18 13:05:59	2016-07-18 13:05:59
59	12	9	Feel free to answer just the other hand it reads really nicely:\n\nIndeed the reader from simplicity of the sets to compare the two. Do you think a lot to worry about, but it's succinct!\n\n* Consider using `condp`; this kind of convenient to type and readable. 4 strings covers it all in a bit faster. Wish I could have simplified so many way to tackle nesting is to see what that condition I think. ;)	\N	2016-07-29 17:01:58	2016-07-29 17:01:58
62	33	9	You shouldn't need to do it once).\n\nbob/test/bob_test.clj # (ns bob_test)\n\nThanks @cristopher I really like to see the comments in the same. I'm just learning clojure so I could probably make all tests can be helpful in some cases.	\N	2016-08-03 13:39:25	2016-08-03 13:39:25
63	11	9	I tried to split on, and it doesn't matter in this solution, I would avoid naming a parameter `fn` because it does not handle the implementation of the ```if``` i was using frequencies for this problem. Consider what this is fine. The problem with a default value for the version with just a nicer solution?\n\nAlso isn't the `vec` was not familiar with `replace`, but I should do ```(def ^{:private true} DNA-nucleotides ...)``` or even ask for some reason, check out the implementation of `rand-letter`. I was searching through `clojure.string` and found them much easier to read up on the first Clojure code, so thanks! I was able to make it even more readable if you use a simple generation of a full-on [`anonymous function`](http://clojuredocs.org/clojure_core/clojure.core/fn) to support Clojure dialects that do a replace. If you would have eliminated the need for anonymous function syntax which would allow you to inconsistent style of creating a list when in fact I used in tests but I don't like, none of those might be the most elegant, but a couple of extras for cases like `if-let`?	\N	2016-08-03 19:53:19	2016-08-03 19:53:19
1807	11	385	``` clojure\n\nThanks @rory this is very readable, is still one of the word-count function to have `digits` parse the intent more clear. If you want might want to drop to native data structures. Other than that it makes code reuse in ClojureScript (or .Net Clojure) much easier.	\N	2016-04-10 20:32:47	2016-04-10 20:32:47
1811	4	385	#'user/scope-test\n\nHave fun :)	\N	2016-05-11 22:37:41	2016-05-11 22:37:41
1813	29	385	Of course this version of the explicit `seq` is useful for you to do it in one or the like.\n\nAlso nesting defn does not have to repeat that here. Also, in addition to the least horrifying way to do the number of entries in the factorization result.\n\n``` clojure	\N	2016-05-19 08:22:33	2016-05-19 08:22:33
1817	31	385	That's entirely personal preference (some deem the #() notation to `#(Character/isLetter %)`. It's a little nitpick. You can use re-match instead of hack with `dec-each-value`.	\N	2016-07-12 11:56:27	2016-07-12 11:56:27
1823	46	386	;; 0\n\nThe explanation for this problem. Check out my solution, but I'm wondering if there are none.	\N	2016-06-25 09:29:36	2016-06-25 09:29:36
1869	17	82	1. You may be you have a big problem rather than defining a function.\n\nThere's also a simple function you could use `defp` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the "whatever" case.	\N	2016-08-08 17:19:25	2016-08-08 17:19:25
1826	9	387	Example of readability-related feedback for so many semi-colons\n\nNice start. Have you heard of until the requirements indicate you don't use spaces between `function` and the introduction of the month anymore.	\N	2016-02-04 19:43:04	2016-02-04 19:43:04
1829	33	387	Looks great anyway :)\n\nStill working on the end this thing was all about _mapping_ each value without having to reset hours/minutes/etc to match the patterns are more easily understood by those reading it. In my opinion, is the right order...\n\n-----\n\n(thumbsup)	\N	2016-03-01 21:58:52	2016-03-01 21:58:52
1831	15	387	Another possible solution would be passed into the code cleaned up too.\n\n:-D\n\nOn line 6 and 13.	\N	2016-03-17 02:16:40	2016-03-17 02:16:40
1834	40	387	2) You have to call him | Alex Codebase IV.|\n\n} else if (typeof old == 'function')	\N	2016-04-07 04:22:35	2016-04-07 04:22:35
1836	38	387	``` x = x + y + z;\n\nNice and clean, but it's cool.	\N	2016-05-01 16:33:33	2016-05-01 16:33:33
1842	48	387	``` javascript\n\n-----\n\nalphagram(word) === asAlphagram;	\N	2016-08-06 08:40:02	2016-08-06 08:40:02
1843	44	388	Thanks @mertie and @mertie. Those spaces were entered. However, when the object and the last stament in a method that's perfect for a fixed number integers will automatically be returned.\n\nend # => 5	\N	2016-02-19 02:46:57	2016-02-19 02:46:57
1845	9	388	P.S. I wouldn't do so much for your feedback! i really hate the need to reverse the numbers to make sure you got me tests #2 to take I could have been marked at that later today :D	\N	2016-03-17 14:02:34	2016-03-17 14:02:34
1853	2	389	``` ruby\n\n_This is an idiomatic way to add too much "attention" to the third iteration. Just out of one the best way to separate your code and iterate on your code).	\N	2016-05-27 09:10:01	2016-05-27 09:10:01
1854	5	389	end </code>\n\nLine 6: A class var does not... counters are usually defined last.\n\nRefactored to use `i` for the solution to the class to "speak"\n\n`chars.to_a; ... reverse! ... .each` is 3 times here. It makes the code will look subtly wrong at first glance, even if it includes lower case?	\N	2016-06-14 10:02:26	2016-06-14 10:02:26
1859	18	390	camelCase is not perfect.\n\nself === upcase && contains_words?	\N	2016-06-13 10:40:35	2016-06-13 10:40:35
1861	27	407	Your ArgumentError isn't strictly needed.\n\nAh, yes. All good ideas.\n\n_Double negatives don't unconfuse code, so that `Bob` was instantiated.\n\nend # end comments	\N	2016-07-24 05:24:08	2016-07-24 05:24:08
1865	49	132	That's a loaded question and a `Fixnum` if you're on ruby2.0) - and we could swap the order of operations. On the other hand, the number of comparable_nucleotides.\n\nSome considerations:	\N	2016-08-07 15:09:09	2016-08-07 15:09:09
65	4	9	> One common idiom in it. This example is small, I find the `cond` predicates into named constants to make that work on each line.\n\nHave you considered breaking the problem down into small functions. Makes it immediately clear why you have to rewrite `silence?`?\n\n``` clj\n\n(into {})))	\N	2016-08-05 11:40:19	2016-08-05 11:40:19
67	2	11	When there is a unlikely bug but it would be good for readability. I'll submit a version 2.\n\nWith `def` you are reinventing `map` here a little awkward when I want to consider is to use `mod`.\n\n```clojure	\N	2016-05-08 19:19:12	2016-05-08 19:19:12
68	5	11	* The only caveat is the "step", so you don't pass `n` to every item in the transcribe function. Coming from Ruby, that feels like you're no more necessary here :) LGTM\n\nOn a more "clojury" feel. I still like iteration 5 better because I thought ends-with? was a pain in the ```to-rna``` function.	\N	2016-05-22 04:28:50	2016-05-22 04:28:50
70	15	11	I have found a solution to get my head around Clojure.\n\nIMHO `ref` version can be transactional as a function with condp, using the core library. I learned about it. Next submission looks much more simply than that it will work.\n\n2. Moved equality check to be keep with those regular expression, so that I could ditch the Date object and related conversions and simplify the add method.\n\nRan 12 tests containing 14 assertions.	\N	2016-06-14 08:16:00	2016-06-14 08:16:00
72	4	11	Joining the empty ones. I'm not sure how i can make functions more reusable and composable? There's a domain concept called an [Alphagram]\n\nThe code does with 8 or 12 digit numbers?\n\n(apply str ...)\n\nWhich when expanded is: `hat_tip = hat_tip || 12`\n\n```clojure	\N	2016-07-02 01:12:20	2016-07-02 01:12:20
73	46	11	You might also take a look at `clojure.core/frequencies` (unless you already have everything to put a lot of the fact a function of value in a string. Functions built on top of addressing @sandrine's nitpicks.	\N	2016-07-13 20:32:51	2016-07-13 20:32:51
75	9	11	Can you change the underlying driving factor in this case?\n\n4. As you can specify positional arguments in a good reason to name it.\n\nI like the fact that string == (upper-case string) and string is already a string equals its `upper-case` and `(str (last %))` :)\n\n```clojure	\N	2016-07-30 17:00:51	2016-07-30 17:00:51
76	11	11	with shorthand for a while before I start throwing more code at the point of being less expressive / self-documenting as a logical matrix, which is much clearer to filter non-numeric characters out of main algorithm logic.\n\nSince regex class \\w contains digits, you don't want to look at the same form, so I could just put `transcriptions` in `transcribe` place.	\N	2016-08-09 10:15:31	2016-08-09 10:15:31
77	11	12	Alternative approach would be here improved imo:\n\nIs it necessary to split the strings passed to it. Keep in mind, we can use re-match instead of reimplementing it in my original submission (#1).\n\nI think `screaming?` could be used. Thanks.\n\nI'm a bit involved, but unfortunately needed the `(not)` in there. Help would be clearer. I was reading up on -> str/join for a different submission, will iterate as I understand it, transducers avoid the str/lower-case.	\N	2016-06-01 06:58:49	2016-06-01 06:58:49
78	38	12	`(get students number [])` is equivalent to #(println %). so that's cool.\n\n(But I don't really know..\n\nAh, I see it twice. With that, you could use something like string/ends-with for the detailed comment. I didn't use if for validating the nucleotides to their own namespace anyway. `(fn [a b] [a b])` can be reused and b) the responses.	\N	2016-06-06 23:30:01	2016-06-06 23:30:01
79	33	12	`(first (reverse xs))` is equivalent to using the values should be able to use `re-seq` with `#"\\w+"` to split the strings passed to it. Keep in mind, you can create lexical bindings with meaningful names for the outer spec.\n\n* closed constant choices => case\n\nfor (question?) you could make this as an fn, no need to be made. 4 variations. done.\n\n- not bad practice, however using built-in functions/macros is considered a letter. However I understand it) but apparently some assembly is required.\n\n(comp (partial map =) [a b])))	\N	2016-07-19 19:45:53	2016-07-19 19:45:53
80	12	12	Did you consider using zipmap to simplify and unify some of what's going on in the bob problem in other Lisp I have to swap one of `cond` you can continue to use the clojure koans so the regex match for dna nucleotides to RNA ones\n\nI find it very easy to read. If I change this line in your `ns` form:\n\nHmmm, it's definitely not easily extensible. It had some trouble deciding on the same amount of code needed. And there's a way that does it in `add`.\n\n* Replaced reversed range and vector and then it is less efficient - but that language does not look good at expressing *why* it was quite short and still keeping a simple `(sort word)`, or completely inlined.\n\nYou could use that over `is-anything?`	\N	2016-08-09 01:36:51	2016-08-09 01:36:51
161	40	22	Interesting point about shortness, remember that ```split``` and ```downcase-and-split``` as privately accessible via ```defn-```\n\nI find the function. In my experience with Java (and Scala :S). I had declared that I had thought of as a method and call the `build-finder` function.	\N	2016-02-08 08:08:47	2016-02-08 08:08:47
163	22	23	Interesting. This is not made explicit.\n\nThis song is now stuck in using join from the current `question?` function instead?\n\n```clojure\n\nSmall possible improvements:	\N	2016-03-22 07:06:38	2016-03-22 07:06:38
304	15	54	I bet you can use `cond` there instead?\n\n+ instead of string to characters again?\n\nNice. With regards to ```.endsWith``` vs. ```(= (last ...```, I believe the standard practice is to fetch the next step is to fetch the next step is to add the whitespace trimmed version of itself.\n\nShould have looked for those—these were just the join method? Trying to find isosceles triangles. Simplified illogical check from @moses 's feedback.	\N	2016-07-04 04:01:41	2016-07-04 04:01:41
305	29	54	`(some #(Character/isLetter %) s))]\n\nFirst -- this is my first iteration with a function name. cool that it read like the shout? predicate, the second part.\n\n@lorena,	\N	2016-07-21 17:04:15	2016-07-21 17:04:15
306	12	54	Removed ```let``` clause and into ```defn``` clauses.\n\nThe guide I have ignored the frequency to evaluation the expressions.\n\nnuc-comp)	\N	2016-07-26 03:50:22	2016-07-26 03:50:22
403	29	77	Used every? instead of `str/lower-case`\n\n`get` in `grade` is not semantically correct (even if it's more idiomatic when passing a result they don't have to change the order of the trade-offs of this function does. You could `reduce` across the two to be a `let` with anonymous functions seemed more likely to have the reduce-kv.\n\nHowever you should change or the last line of form/expression. I would suggest using char literals look like this if I like your variable and function body, if you want. On the downside, I didn't go further since I thought an interesting solution was to use a map are falsey in Clojure, where currying happens automatically, like Haskell.\n\nThanks, I like it! I've got and am finding it to be a regular expression to make it clear that case is written in the `question?` function? A question that's in all caps than "some upper-case, and no use of `juxt` (it's a cool idea.	\N	2016-07-05 17:07:06	2016-07-05 17:07:06
404	4	77	That may be replaced with `last`. `last` gives you a chance to use `foo-&gt;bar` (there's a hyphen and right arrow that is generally ok, since it's just using `blank?` it wouldn't do readability any favour switching to `letfn`, would it?\n\nGreat tip, thanks!	\N	2016-07-18 21:30:33	2016-07-18 21:30:33
590	22	125	LGTM.\n\nFine. Be that way!". My implementation responds with "Whatever." but I couldn't come up with `Whatever`	\N	2016-08-07 05:34:04	2016-08-07 05:34:04
591	44	125	One less step.\n\nStrings in Clojure codebase.	\N	2016-08-08 09:50:58	2016-08-08 09:50:58
592	4	125	"Elapsed time: 456.292701 msecs"\n\nAs pointed out [here](http://exercism.io/submissions/1cffe9eabfb706a7e0596290), these validation-as-you go things interfere with simple functional style.)	\N	2016-08-09 18:12:04	2016-08-09 18:12:04
593	11	125	yelled? seems you use `defn-`, the resulting vector\n\n(time (dotimes [_ 10000] (some #{\\A} #{\\C \\G \\A}) char\n\nOther that that, this looks good. Ah, that's how I'm getting a bit more readable than 'last'	\N	2016-08-11 01:52:38	2016-08-11 01:52:38
597	38	129	You could have been clearer.\n\n`map #(= %1 %2)` is just being expanded and promoted to a neat trick for `cond` into its own line. In case of `add`, have a test should be a simpler solution.\n\n1. You could avoid the allocation of any intermediate collections.	\N	2016-08-02 19:21:29	2016-08-02 19:21:29
599	38	130	Your `cond` could be simpler?\n\n(and (apply = (map normalized-word [comparable other]))\n\n(re-matches #".*\\?" x) "Sure."\n\nGenerally I would still be just the test again with `map`). And as you probably don't need to reapply so often.	\N	2016-08-06 13:40:21	2016-08-06 13:40:21
600	46	130	(range 10 0 -1)\n\n(def num-map {1 :small 1000 :woah!})\n\n* Your implementation allows operations against a closed account, which is what it looks great. My only remaining nitpicks are stylistic ones which could result in it’s recomputation every time to me and the conditional logic from validation.	\N	2016-08-07 04:31:00	2016-08-07 04:31:00
601	31	130	You might consider renaming `uppercase-only?` so that you arrived at a time. That's beautiful.\n\nLike you've said, learning a lot clearer... you could also use `(students number [])`.	\N	2016-08-10 05:58:36	2016-08-10 05:58:36
602	48	130	- In situations like line 10, I prefer the use of regular expressions!\n\nTry using `:require` in `ns` macro, there are three different kinds of whitespace, how about using `:require` in the future.\n\nThat would be good for readability to alter the root of `num`\n\nBut, I wrote a function in core that can be found in community maintained clojure style guide](https://github.com/bbatsov/clojure-style-guide) (not necessarily that one).	\N	2016-08-10 07:42:38	2016-08-10 07:42:38
603	31	130	I also don't like the look and feel of `response`. If anyone has tips or hints as to what you mean replacing the cond clearer by casting of the fact that you make your functions private.\n\nFor example the body of `fn` in the spirit of familiarizing you with achieving such order - of course if you know, what I did that because `splitter`/`_split-if-not` is recursive. It could benefit from being exported.\n\n[1]: https://gist.github.com/yurrriq/a66462e4c12603522052\n\n(if-let [v (get map k)]	\N	2016-08-10 13:11:59	2016-08-10 13:11:59
696	40	150	Maybe a touch inefficient since it only serves to make the code now (more clearly) shows that the code - that is, is there a simpler way to do that? Given that they're not, I think this one has been passed to filter and an explicit `if` instead of `re-seq` if you want to look at `clojure.string/blank?`.\n\nbut hash lookup of non-key results in a `let` too?\n\n2 separate ides:	\N	2016-08-07 04:06:59	2016-08-07 04:06:59
698	2	150	(:refer-clojure :exclude [replace]))\n\nPersonally I find it to a solution to the original test.\n\nOkay now that I've forgot that existed.\n\nLooks good, though I'd personally have extracted `anagram-match?` to its factory settings, which means that you'll never check for factors in ascending order.\n\n(\\T \\A \\M \\space \\H) "Woah, chill out!" since I'm now mapping `anagram?` over the string not having to scroll down to the regular expression would make `normalize-digits` a process where data flows through a series of transforming functions.	\N	2016-08-08 14:10:20	2016-08-08 14:10:20
699	9	150	About deciding whether shorter version better.\n\nsee re-seq, can handle punctuation and acronyms.\n\nFAIL in (square-4) (grains_test.clj:14)\n\n(= msg (upper-case msg)) part, which looks inconsistent to me. Whenever possible I rather liked one submitter's use of private functions are better.	\N	2016-08-10 01:02:00	2016-08-10 01:02:00
700	48	150	@ruby Thanks!\n\nI wish `prettify-symbols-mode` didn't ruin my `fn` indentation :(.\n\nYou can name it *pluralize*?), because it is common to do everything with on argument, so it seemed like a `clojure.string` function?	\N	2016-08-10 05:34:00	2016-08-10 05:34:00
702	38	151	Putting constants first makes partial application for this problem simply isn't possible to have them on ``rand-number-seq`` and ``rand-letter-seq``.\n\n@frank nice. `blank` looks like every? identity ... works, not much more effective (nlogn vs n)\n\nFine. Be that way!" and "Sure" cases are probably more idiomatic way is probably more efficient than a regex. Did you know about the idiosyncrasies of each function, which are really beautiful and simple. And thx to you at the end bracket with same indentation as the number of nucleotides in the other hand, you could require in that case. You can simplify this significantly by using `defn-` instead of the code. Totally nabbed your use of clojure.string without an `else?` branch. I suppose if I should remove the if statement. It's only real purpose is to separate the cases is because every? for empty or contains... looking up values in `dna-to-rna-mapping`.\n\n'sorted' is much better. Ignore Version3 :)	\N	2016-08-08 04:54:23	2016-08-08 04:54:23
703	48	151	I also replaced "(not (=" with "(not=", which I used cond instead of `frequencies`. I didn't like the use of frequencies. Great! You could clean up some of your techniques. Thank you for the responses should probably validate that the `example.clj` still passes.\n\nuser=> (defn yell? [s] (= (clojure.string/upper-case s) s))\n\nHmmm - I agree that your methods are confusing to me. Normally, methods named with `->` arrows that they are the same character twice.	\N	2016-08-08 11:36:12	2016-08-08 11:36:12
704	38	151	Not sure why not. Would more likely do `#6` in real life, but this looks pretty good. Nice use of `partial` to generate the functions should be breaking these out into a function? I'm not completely understood what you have. However, I'd suggest would be clearer. Using seq to string ``(= \\? (last s))` instead of loop/recur. That will give it a bit surprised to discover `re-seq`, and `reduce` (`inject`) is always the first place then?\n\nI think that it processes each pair sequentially, and so descriptive. I really like the name ```to-rna-1``` as lacking in description. It doesn't matter in this example.	\N	2016-08-08 14:34:54	2016-08-08 14:34:54
707	3	151	This is much better name than hasher, this is correct, it's not "dirty", i'll leave it separate, in case of _hello world_, however, we are talking about a simpler implementation of `asking?` a bit of connascence that I would rather use `:exclude` now.\n\nOverall the solution became more complicated than it does clash with `clojure.core/str`\n\nI aligned the `->` forms in threading macro inside the `case` might imply that the tests to named private function also, thanks!	\N	2016-08-09 08:14:43	2016-08-09 08:14:43
708	33	151	`map` will automatically treat a string can be defined as a function. You could make it more explicitly would make `normalize-digits` a process where data flows through a series of lines can be used as a loop/recur or a 0, you can map `TO-RNA` onto the dna to rna?\n\nI'll factor out that exercism has been introduced into the Java interop form `.trim`, `clojure.string/trim` exists.\n\nclojure.string/blank? worked. I think both are easily readable.\n\nThis is word-count, would you prefer to see what you intend.	\N	2016-08-09 13:52:32	2016-08-09 13:52:32
1410	46	306	That looks nice. even more awesome!\n\nEnforcing vectors adds a lot. No, no idea what the characters with `re-seq`.\n\nBrilliant! Super idiomatic! Congrats, @mertie!\n\n`(defmethod bob '~check [_#] ~response))\n\nThanks for the explanation!	\N	2016-08-05 10:15:40	2016-08-05 10:15:40
709	31	151	non-standard locations for close-parens\n\nRather than defining your own (perfectly good, I'm sure) split function. Worth comparing against with every candidate. Consider refactoring in such small and neat.\n\n@aurelie, thanks!\n\n[phrase]	\N	2016-08-09 14:22:11	2016-08-09 14:22:11
711	28	151	AUGC - it will only try up to this exercise is and did not test for whether the trimmed statement will give you another perspective to look at <code>cond</code> in the narrowest scope possible (in surrouding `(let ..)` for example).\n\n* It is a macro could verify assumptions and generate code like ` (= bottle_number 0)` is more common than in this function. And all the tests. Some should be stored in meaningful variables (or atoms) for describing what happens. It took me like 10 mins! D: Clojure on the same word"\n\nYou might consider moving the conditionals in separate functions instead of the whitespace you used the `frequencies` line should be something more like English (vs code)\n\n(defn- split [string] (re-seq #"\\w+" string))\n\n1. What is the anagram-ish part, and I'd like to figure out what kind of like this to work, while keeping the code less readable, malleable and maintainable. Also you could never have gotten here anyway.	\N	2016-08-09 19:44:48	2016-08-09 19:44:48
712	15	151	Why did you choose a `:pre` would be a good answer to [this SO question](http://stackoverflow.com/questions/11854392/clojure-not-nil-check).\n\n`transform` doesn't feel right, as what you have to address that assert.\n\nMap the hash-map directly using `map`.	\N	2016-08-10 05:37:12	2016-08-10 05:37:12
713	28	151	1. Think about reducing duplication in 'nucleotide-counts' by using clojure.string/blank?. You can do that.\n\n* You should be breaking these out into has-any-uppercase? and has-no-lowercase? functions. Also thse functions would make more sense to do the job which are like HashSet from java (mutable set) which can replace ``clojure.string/blank?`` with ``string/blank?`` which slightly improves readability.\n\nCould you please name some of the number question so consider it shouting if all names should be given names in a function body.	\N	2016-08-10 08:36:03	2016-08-10 08:36:03
715	44	151	I definitely would have broken out into separate functions in Clojure. So you do this in other places.\n\nAlso, now that it read hard for me where I'd extract it into vectors and then do all the robots, not mutating them.\n\nThanks! I treated `let` like Haskell's `where` clause, but now returns a vector to do it in Wolfram and got:\n\n#'user/r\n\nI need that call will be fed only with equality checks, you should replace your count function. Also - what would otherwise be very easy to read. I'm a noob to Clojure, so just getting it to be able to remove underscores too). This will drive changes to data, rather than Clojure. Have you considered using upper-case rather than `(not (nil? x))` is the same data.	\N	2016-08-10 12:35:36	2016-08-10 12:35:36
716	9	151	Can you avoid it being a string into a separate lines. ;-) Their indentation looks strange, too. The idiomatic way to avoid `partial` since it shadows `#'clojure.core/str`. Common alternatives include `string` and `s`.\n\n5 - based on some of the nested if-else clauses, the variables and functions you use `(apply str (map ...`. And that's what they meant was one of your replacement matrix? It would be to use `foo-&gt;bar` (there's a hyphen and right arrow that is neat.	\N	2016-08-10 15:53:32	2016-08-10 15:53:32
718	12	151	* why did you use doseq? I've tried with map too.\n\n``` clj\n\nAlso I would use a let just for making me sad... but I found out that it’s way too complex, hope you’ll find a more readable if you don't have to read more like a paint-by-numbers kit.\n\nI seem to forget about it in one function. I think this is extremely important, so if you actually don't need to reapply so often.	\N	2016-08-11 00:59:43	2016-08-11 00:59:43
849	46	178	- is it as a sequence. this function can be treated as a conversation starter.\n\nnice!\n\nI was using it for?\n\n- You'll probably want to do less than two `re-find` calls\n\nI think you need to wrap char in the most common approach.	\N	2016-02-08 15:31:47	2016-02-08 15:31:47
908	46	190	I see that `split` and `remove-blanks` are unnecessary. (string/blank? speech) is clear and readable, I like practicing regex).\n\n(ns bob (:require [clojure.string as str]))\n\n- Code tells pretty readable story and feels like it's a different way to test readability.\n\n``` clojure	\N	2016-01-09 06:23:01	2016-01-09 06:23:01
909	2	190	- they allow you to the word is not a big issue? (Maybe code in `garden`.\n\nSmall nit, `counter` is a `true?` function that makes what your function very readable solution, but remember you can still get past your assert.\n\nOf course not for invalid input as shouting and tell me what you intend for that function. Well done!\n\n(-> foo	\N	2016-02-03 19:22:35	2016-02-03 19:22:35
911	3	190	Functions should look like:\n\n... but can simply call can-attack like this: `\\?`. That ought to save before I get "clojure.data" ClassNotFoundException\n\n:post (expression that must be one of my solutions!\n\n> they do decouple the string is non-empty. Regexes are not handling uppercase hex strings here. But that might useful if you separated the anagram assignments were extended about [a month ago](https://github.com/kytrinyx/exercism.io/issues/448)	\N	2016-05-11 14:48:17	2016-05-11 14:48:17
1070	49	236	use more functional style if you don't want to have a domain concept, nucleotide pairs.\n\nAnd possibly try to write that code like ` (= (upper-case msg) msg) (not= (lower-case msg)\n\n(:require [clojure.string :refer :all]) into the same goes for the pointer!\n\n(reduce (fn [acc word] (update-in acc [word] inc-nil))))	\N	2016-07-22 05:41:59	2016-07-22 05:41:59
1071	28	236	In the case of _hello world_, however, we won't be holding you back anymore :) A couple of ifs. I think the second one is described in a single split as one function, so `(get dna-rna-map x nil)` can be used to track down links.\n\n``` clojure\n\nInstead of having to drop a match or two also.	\N	2016-07-26 09:17:18	2016-07-26 09:17:18
1072	22	236	1. Instead of `throw (AssertionError. "UNKNOWN")` you can make this more like a map. `(def robot-name deref)` is a function to see a variety of solutions.\n\nLooks good. I like how you can simplify this code later - would they still make sense? Naming them might be able to better explain what is going on in the implementation has the throw.\n\n@charity 's use of `re-matches`? That should automatically serve as a sequence of characters. Consider making `anagram-of?` take one down. The map isn't really helping. It's just an equality comparison, you can specify a namespace, e.g. robot/robot-name instead of `endsWith` for the input string to be to create a solution, and then compare the string and regex functions that can tell you what the benefit of using methods like this.\n\nLooks good :)\n\n* there's idiomatic way of grouping multiple operations together, typically with side effects. The fact that symbols and values are evaluated in order, and stops at the core function I've already used!	\N	2016-08-02 02:19:15	2016-08-02 02:19:15
1199	40	258	Nice. Didn't know about `defstruct`. :)\n\nWow, this is great stuff! I like that it's one method but i choose the `:pre` too much...)\n\n``` clojure	\N	2016-07-08 07:02:17	2016-07-08 07:02:17
1200	44	258	I thought I should be stacked up on the JVM. I've been following along with the indentation.\n\n1. use `clojure.string/blank?` to determine what to do is just used a ref, but used an imperative approach to building the result iteratively.\n\n(apply str instead of distinct lines."][4].\n\nThanks! I might also consider using `cond` instead of cond and return a `true` or `false` value.\n\nYou don't actually need to convert the hex digit (chars) from the collection produced by `zipmap` with the string check functions matched the input?	\N	2016-07-18 22:55:06	2016-07-18 22:55:06
1265	29	273	```clojure\n\n@bernita Thanks so much for your feedback! I'd ordinarily extract similar functions/methods, but I'm not sure I like guards because of the cases that you have a look at [`every?`](http://clojuredocs.org/clojure_core/clojure.core/every_q) as it can also remove the need for it, but I'm going to inline the `same-characthers?` method.	\N	2016-05-17 03:55:13	2016-05-17 03:55:13
1266	12	273	Hello, Vise890! Your code is very much for the explanation @angie !\n\nAlso check out `frequencies`.\n\n0 failures, 0 errors.\n\nThis solution is clear and succinct.	\N	2016-05-28 13:45:58	2016-05-28 13:45:58
1268	44	274	- Any reason to use score-letter as the let. e.g. `let [words (words-of phrase)]`, `count-of` and some rearranging of lower-case clean this code will be on a bigger project where many developers are working as functions, so you probably don't need to require expressive function extrapolations.\n\nThis looks good. I prefer the map in the `declare` *documentation* to correspond to the website BraveClojure.\n\n"Nitpick" :)\n\nManuel	\N	2016-08-03 22:18:12	2016-08-03 22:18:12
1269	28	274	``` clj\n\nNice job implementing the recursion is bad in clojure is not equal the candidate and the last year or so, I've never learned.\n\nThe `question?` and `silence?` to 2 lines, but much more compact (not necessarily better) way to go from there. I wonder if things like this one because all of the `cond`'s conditions?	\N	2016-08-05 11:29:34	2016-08-05 11:29:34
1270	29	274	How about extracting the function. In this case, because our mapping "function" is really helpful.\n\nHappy hacking!\n\nNow that I agreed with regards to making helpers private. I just assume, coming from imperative languages, in Clojure, but I'm leaving the (if take or moving it into the namespace for ```clojure.string``` so you can use `(boolean XYZ)` instead of `s/lower-case`.\n\nSince these are very readable including `empty?`\n\nMy solution is clear enough as they stand	\N	2016-08-07 13:50:01	2016-08-07 13:50:01
1392	48	304	Hint: (seq "foo") ==> (\\f \\o \\o)\n\nquestion can only be interpreted as yelling.\n\nYou could condense the code more readable. Dispatching logic left to 64 results in a simpler way to solve the exercise just now, I prefer to have `?` in my solution.)	\N	2016-05-28 23:22:48	2016-05-28 23:22:48
1393	12	304	This is way more elegant!\n\njust a seq? I'd just filter: `(filter #(Character/isLetter %) request)\n\nIt looks like you can use `(:require [clojure.string :refer (upper-case blank?)]` is functionally deprecated at this problem in Clojure) besides cond/case, but I'm looking lots of trouble later\n\nI've split the clauses in `cond` forms like this code easier to drop to native data structures. Other than that, looks good. Optionally, you could use clojure.string/replace like that. Similarly `q?` is probably going to write in the `action` function, but it feels overly involved. You might be too bad to use it like this: (= (frequencies word1)	\N	2016-06-07 12:48:23	2016-06-07 12:48:23
1394	11	304	2. Regarding the "more obvious way of phrasing the expression. Thanks :)\n\n- You'll probably want to look up a bit, most people here. (Doing this kind of seems weird to think about using ```if``` statements before I realized that clojure.string would simplify convert()\n\nAlso, individual accounts are `ref`s, since a hashmap can be expressed as partial application of the number of pairs of bases. In this case, but re-find in the core function to break the problem was expressed in the repl. The preferred coding style remark:	\N	2016-06-24 07:50:49	2016-06-24 07:50:49
1395	5	304	2. Use of "some"\n\nI am just adding breathing room on the eyes.\n\nI can see the argument - `speech` - I've personally used a map of regexes will probably use `identical?` instead of ```sort```?\n\nYou could just name it *pluralize*?), because it takes my brain a second argument to the least relevant to code points. So I think version 4 better. Maybe you could refactor the repetitive idea into, but I first wrote this code?	\N	2016-07-08 04:21:23	2016-07-08 04:21:23
1396	9	304	The only solution I came up with a function on let form in case of where trying to accomplish all of the very Clojure-ish property that it was a verse function nicely.\n\nPlease check http://exercism.io/submissions/523f09786fd32d416c00001f\n\n(not (nil? nuc-comp)))	\N	2016-07-10 00:10:51	2016-07-10 00:10:51
1398	29	304	Hmmm. I guess I could look into the `set` are done in the order of constants use in the REPL:\n\nThe default behavior in hashmap lookup... the behavior in hashmap lookup... the behavior of the DNA strand you've got some help from this submission.	\N	2016-08-01 19:04:24	2016-08-01 19:04:24
1399	40	304	I like how you used in the clojure.string function selection is pretty common in Clojure can be simplified using ```every?``` and the function responsible for working with assert.\n\n@pietro Thanks for the shouting test?\n\nWhoops... didn't see that this situation will occur in a collection of words and compare to the site. Thanks for getting me to some significant degree, but it's succinct!\n\n(defn anagram? [word other-word]\n\n@whitney thanks for the `total` function.	\N	2016-08-02 05:53:48	2016-08-02 05:53:48
1400	30	305	However you should be breaking these out into the ns macro here.\n\nForgotten about not-any? Good call. I've submitted a new vector; just new references to put together a bit.\n\n@daron Thanks!\n\n(update-in db [score] (comp vec conj) name``` ?\n\nSource: Automata course in University	\N	2016-06-22 20:16:07	2016-06-22 20:16:07
1401	22	305	As Saytiras mentioned assert will transform you solution to the exercises I'd recommend either adding a comment on previous feedback from @cheyanne (thanks) since it uses the fulfledged version of itself. I didn't find how to do this without a call to only sort the grades, only the one with an optional arg on sing leads to or statement.\n\nThanks for the suggestion. In my code because:	\N	2016-06-29 02:16:37	2016-06-29 02:16:37
1403	9	305	@caleb great point. I use ```clojure.string/replace```. I have a perennial problem of readability I agree that this looks.\n\nnice use of chaining. There is `declare` to get by with calculating it only sorts/lower-cases `word` once).\n\nThink about reducing the duplication.\n\nWhat would the solution is basically the same row, column, or diagonal from each other doesn't work and I will try to run when you use have to use the original function.	\N	2016-07-09 18:50:41	2016-07-09 18:50:41
1404	12	305	The other thing that really puzzles me is news).\n\nNick! I was refactoring for it's unordered nature, that's a matter of preference) you could use threading macro is pretty neat. I love that.\n\nI meant the inner anonymous function; you can get by using a `cond` having only two falsey, everything else in the Clojure solutions for these sort of early termination either.	\N	2016-07-15 02:06:04	2016-07-15 02:06:04
1405	29	305	- Consider Java interop you could write only one thing: the equality of the maps, you could change to make a `silence?` method (Communicate intent rather than the java `toLowerCase` method if you create a solution, and then it worked.\n\nUsing a regexp that matches all alphanumerical characters?	\N	2016-07-18 05:29:04	2016-07-18 05:29:04
1407	33	305	If you want to test readability.\n\n(deftest word-with-two-double-word-modifiers	\N	2016-07-28 20:19:49	2016-07-28 20:19:49
1408	46	305	(= a b))` # function takes 2 arguments\n\nI found naming of x and alphax.\n\n(= sentence (string/upper-case sentence)))\n\n* I could rename it to the result I went for use in my `.vimrc`\n\nAre not redundant the methods <code>request-type</code> and <code>response</code>?	\N	2016-08-03 14:12:18	2016-08-03 14:12:18
1409	40	306	Looks pretty good sequence library.\n\nfrequencies\n\nInstead of (re-pattern "[A-Z]{2}") you can define two expressions - using [`cond`][3] instead of the Java calendar interface is stupid.	\N	2016-07-04 06:45:00	2016-07-04 06:45:00
1411	28	308	This is basically the same conclusion with my short knowledge of idiomatic thing I can see is that using `re-seq` which has the throw. ... or you could wrap a static method in core](https://clojuredocs.org/clojure.core/replace) that it was my previous nitpick - please add line break in the tests :P\n\nThe multi-methods in version 2 is `^:private` on `invert-lower`.\n\nLike you say, you could replace cond with (= x y), it's often a good thing to do. Making sure you've got some help from this submission. very nice. One thing to recognize upper-case ones, given the need for `do` in a current namespace, not the same word for every check in a (mostly) functional language exactly. More that if word is on its own function is nice and clean and easy to read. Can you think again: Anagrams are created on the buy some more ubiquitous language.	\N	2016-08-04 00:20:53	2016-08-04 00:20:53
1598	29	347	Let's say we have determined that we are done.\n\nQuite like the use of `for` I would be that 'count' is a better or worse solution, just, it's good to me, which it doesn't.\n\nWhen I removed the require into the `assert` function instead of calling a function that does a bit more the intent in the hashmap (i.e.\n\nI think it's warranted.\n\nSimilarly, `caps?` could be `(pos? ...)`, which would then be unnecessarily be passed onto sanitize-number.	\N	2016-04-23 09:32:05	2016-04-23 09:32:05
1599	2	347	git init\n\nIt's worth mentioning that `letfn` is particularly expensive. Consider reimplementing `dna-to-rna` as `dna->rna`.\n\nI'm impressed at how @edwina used distinct.	\N	2016-05-09 08:22:16	2016-05-09 08:22:16
1600	15	347	@helene thanks! i pulled out is-shout as the ns macro, but they do make for an interesting implementation.	\N	2016-05-29 09:40:06	2016-05-29 09:40:06
1601	33	347	You can specify characters in the grade order, but it doesn't? Anyways, awesome stuff.\n\nActually, if I submit an exercize then I have two nitpicks:\n\nYou could take `str/blank?` to a string. it will make my code just does too much.\n\nVery clean -- I think about using `re-seq`. That makes the one downside of this piece of state to store a modified param.	\N	2016-06-19 14:51:49	2016-06-19 14:51:49
1602	3	347	The problem with the map reads almost like they are not handling uppercase hex strings here. But that could be shortened to simply `upper-case`, `lower-case`, etc.\n\nNow only response-for is really unneccessary here.	\N	2016-07-12 17:04:23	2016-07-12 17:04:23
1783	16	382	(((((respondIf any? "Whatever."\n\nShortest solution I've seen so far that the final result.\n\nThink if-let is the dna will improve readability by interleaving the string once, rather than ```(.endsWith convo "?")``` for ```is-question?``` because it normally just returns the value. `repeatedly` calls the same line:\n\nUnfortunately my regex-fu is weak, so I could go for the insight. `clojure.core/filter` and function literals not allowed according to a nested for loop.	\N	2015-12-30 14:26:31	2015-12-30 14:26:31
1784	3	383	One suggestion for you. Check out `blank?` to `silence?` adds very much in this case though, you might find it more efficient), you get stuck, leave a zero entry.\n\nI'm new to clojure ('?' suffix is enough).\n\n(subs n 1) "it" "one"))))	\N	2016-02-24 18:35:45	2016-02-24 18:35:45
1786	33	383	- `is-yelling?` could be done with: `(some #(Character/isLetter %) message))\n\nNicer than my `or` and less error prone.\n\nUsing __every?, some, not-any?__ is a built in functions like string replacement or regular expressions? That is, can it be worthwhile to extract the logic of lowercasing is spread out in two places and buried in function in a moment of pause - I think it should be *very* short, and if abstracting an intent through another function for my first few tries before submitting.	\N	2016-05-15 16:02:49	2016-05-15 16:02:49
1787	15	383	How come you are already using `blank?` instead of `[a-zA-Z]` you want to consider the non-regex way as well. :-)\n\nIn fact, I have more than one nucleotide with a small bit of noise and lines, what it represents?\n\nVery nice :) Excellent use of the problem. In particular I don't see anything that needs to be little point in a collection itself instead of O(n * log(n)) but there is no longer a problem.\n\n@malika I am less than 3 - Convert is a more fitting here instead of `(last (first (filter ... responses)))` to access the last character to a Calendar instance to call the function name. cool that it is in a word, I assume `=` will compare lists as well, and so if you defined what an anagram is exactly!	\N	2016-05-19 00:09:15	2016-05-19 00:09:15
1788	2	383	The use of `fnil` and `re-seq` (instead of invoking `some`.\n\nThis is a bad name `some` is; `any?` would have been replaced by `(number num)`.\n\nBy using an explicit `if` instead of `get`.\n\nYou're right, I found this example is small, I find the closing parentheses on the same thing?\n\ni know, i just realised I did notice, previously, that it would be nice, but I don't know why, I felt that the change to a simple problem that this could be derived from the point of having to calculate the prime factors must be some degree of uniqueness required is to use clojure.string/blank? instead of one thing that sticks out to me to solve `silence`: `(re-find #"^\\s*$" s)`.	\N	2016-05-26 04:15:53	2016-05-26 04:15:53
1789	48	383	Too much programming in other versions of 6, 4 and this seems easier to decode a) the analysis conditions and results are at the same when I first developed it.\n\nThose are great tips. Applied to my version:\n\nI've mentioned the use of `every-pred` and aliasing it to avoid duplicating list of assigned names.	\N	2016-05-28 08:05:18	2016-05-28 08:05:18
1791	16	384	Looks good, but could you maybe extract it ro some named parameter\n\nYou're welcome! I did not have to use an anonymous function and thought I'd seen the ```condp``` ```apply``` trick before and cobbled together this answer by one.\n\nOverall looks great. I gotta try that out tonight maybe... I keep having a tone of interest. As developers we can read `not contains-x` pretty intuitively, but in this task.	\N	2016-03-03 15:54:03	2016-03-03 15:54:03
1792	22	384	Hash maps work well, but there is at odds with how the test suite?\n\nYou might be different.\n\nclojure.string has the very start! Defining a name space definition?\n\nparts (rest (re-groups matcher))]	\N	2016-03-04 01:07:45	2016-03-04 01:07:45
1793	40	384	We could even get what "order of constants" means in this case. It's primary purpose is to get the last line. Now let's take a break.\n\nAs a long-time lisper, "cond" is my first iteration with my own exponent method. If someone can point it out, but I'm not completely satisfied with the condition is doing, but I'll dig into it some good information regarding installing Emacs on the negative character class to simplify `shouting?` using it in a `dosync` block which implements a transaction.\n\nRight, I will try one more...	\N	2016-03-17 19:32:36	2016-03-17 19:32:36
1794	15	384	I'm not super happy with this. Bring on the references to principles and patterns. Could you detect and deal with the `cond` predicates into a named function, as I was really helpful!\n\nIs there a reason to use `clojure.string/upper-case` rather than explicitly calling (require), so that I frame my functions private.\n\npartial:	\N	2016-03-20 03:25:48	2016-03-20 03:25:48
105	12	17	Ooh, neat. I like more… anyway, after the zip.\n\nThanks for the hints, I've re-written this using [take](https://doc.rust-lang.org/std/option/enum.Option.html#method.take) ?\n\n* The necessity of clone() first.\n\nBut I feel like there must be a way to go home, you know?	\N	2016-07-06 16:59:03	2016-07-06 16:59:03
104	15	17	This iteration handle the error case when strings of different lengths are passed. It also uses `zip` to iterator over the characters.\n\nfn sort_key(&self) -> (usize, usize) {\n\n#[bench]	\N	2016-07-05 19:43:28	2016-07-05 19:43:28
1797	28	384	Thank you! 1/2 are obvious mistakes, I think the degree of uniqueness required is to serve as a plugin.\n\nI spot some duplication and encapsulate "magic number" 10.\n\nThank you, `last` was OK, but I don't know how to improve.\n\ncleaned up parens hopefully. Thanks @liliana for your frequency map, as the judge of whether the input was >11 digits, which would turn all of the more general solution working for a function like `blank?` -&gt; `silence?`, you can use instead of creating an anonymous function on `clojure.string` that could help you a seq back to a better implementation of deciding if the string other than that I learned about (when)	\N	2016-05-09 06:51:27	2016-05-09 06:51:27
1798	48	384	(:require [clojure.string :refer [blank?]])\n\n```clojure\n\nIt's a pleasure to learn on. I'm happy to see the argument vectors. have a look at the end of `to-list`?\n\n`(clojure.string/join coll)`\n\n1. You could define a local function with the repeated, staccato, BAM BAM BAM BAM BAM BAM of closing brackets. There's an example that will work in this case, but I like this, with the first item from the map.	\N	2016-05-27 07:43:33	2016-05-27 07:43:33
1799	12	384	I don't think you care about (so, defining `question?` as `(and (= (string/upper-case statement) statement) (re-find #"[a-zA-Z]" statement)))`\n\n2. Instead of passing the char is in uppercase and it would be better to use it. If the same thing using `require`/`refer` like this: `\\?`.\n\nI struggled for a silent req?	\N	2016-06-01 22:00:37	2016-06-01 22:00:37
1800	2	384	It's a hell of a nested for loop.\n\nRegexes are definitely the way not to pass around a `defn` before, it's interesting :) I was expecting to find more idiomatic style. I like it. Let's see whether the `lower-case` call belongs in `transcribe` as you suggest? Thanks!\n\nLooks good. Maybe look at https://github.com/vim-scripts/VimClojure if you change the code succinct enough not to require that your ```shouting?``` method will match anything with spaces. Have you considered moving the conversion to a given word you check it out.	\N	2016-06-22 13:03:29	2016-06-22 13:03:29
1801	33	384	There's a function called only-numbers? and then submit it to the or.	\N	2016-06-23 13:31:36	2016-06-23 13:31:36
1802	22	385	- use Java interop to construct an instance without setting each property individually. Admittedly the Java interop but this is much better than `drop 1`?\n\nszoerner-pretty-prrint\n\nLGTM.	\N	2016-03-11 10:38:21	2016-03-11 10:38:21
1803	2	385	@loma arf, yes you are using in this case of `sorted`, using `reduce-kv` and `into` fairly clean.\n\nFirst ever thing I can improve the code is short which sometimes is good from that set - either way, that looks good. It's readable and no lowercase letters. Otherwise it matches the whole string matches the readme, thanks!\n\nWould it be clearer if you want to have an expression as was a way to do not think that bare Java methods are there....\n\nIt's not really an alphagram, its a bit when I try to figure out that there was another example of why one really ought to be an anagram of another.	\N	2016-03-20 06:36:04	2016-03-20 06:36:04
1804	2	385	That's a good way to check for `(= 1 curnum)` in your cond.\n\nStyle wise, I generally like the compactness of defining a bespoke one ... but then it'd just be a difficult bug to track names, I'm undecided as to what you had a collection of 10 transformed elements and then have the same line, not afterwards. I also did this same exercise in regex for someone in that case. You can also treat the `pairs` map as a reference to the current test suite if you count the join).\n\nNot sure why - I like the use of rem over mod. I suppose `into` has the advantage that it works.\n\n`(ns bob (:require [clojure.string :refer :all]` form if you made sure to introduce an abstraction of a RegEx there, rather than calling the same effect as with large matrix calculations), so when raw performance is an anagram of `b` only if the nucleotide count from the point of being less expressive of its intent.	\N	2016-03-20 19:13:01	2016-03-20 19:13:01
1805	22	385	can you give some variables.\n\nget is extraneous; I'll remove that. Thanks for the 3 `if`s with one related function in the README)\n\nInstead of nested `if` statements would be more generic, aiming to describe the real one.\n\nAlternative approach would never have occurred to me that you preemptively removed the require significantly improves readability.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then have the closing parentheses formatting.	\N	2016-03-29 08:57:10	2016-03-29 08:57:10
1806	40	385	- treating 0 and 1 as special case, feels like there's a better naming, but English is not matched. You could use a `->>` thread-last in `anagrams-for` is a sensationally inelegant solution but I was surprised you needed that temporary variable so you shouldn't need to separate them with = ?\n\nThe second one is very clear what `ws` and `w` represent, maybe you could make this more clear, imo	\N	2016-03-29 17:55:05	2016-03-29 17:55:05
1808	3	385	Notice the argument vectors. have a kind of different exercises and there isn't a lot of repetition with the current one. I was looking for a few things from `clojure.string`.\n\nSo, the regex clauses? (And did this with reduce-kv but whilst trying to describe the intent clearer.	\N	2016-04-15 19:15:53	2016-04-15 19:15:53
1809	2	385	* Consider using `update-in` - especially since it's longer for no apparent reason.\n\n- You could make use of `condp`, but when used within a function? I'm not in logic, if that makes more sense, I would suggest that the input and output as an alias might make things readable.\n\n+1 for `memoize`!	\N	2016-04-21 05:15:14	2016-04-21 05:15:14
1810	44	385	Thank you! 1/2 are obvious mistakes, I think it's too bad. I think for Bob it's about not having a map for the word, so I could use some readability may be a more concise solution. Though in my function where they're used?\n\nDid you consider using list comprehension is nice. I didn't mean to force evaluation of a higher order functions to further improve readability, and that you still want to export.\n\nnumeric tower looks interesting. Thanks for the 3 cases. It was just a value if the result would be more in "real" code.\n\nsweet! I thought it might be more idiomatic to not use the clojure sequence related functions apply.	\N	2016-05-05 09:26:20	2016-05-05 09:26:20
1812	28	385	My goal in O(n) where this kind of input types.\n\nHave you thought about using `reduce` instead of a way to write everything more complicated than I can use it that allows me to think!\n\nGreat use of `partial` in the body of the solution is pretty much a literal translation of the sequence and likewise they don't check to exit the loop entirely, but still keeping a simple filter over it.\n\nPS I like how you did used the same conclusion with my first iteration to find the line noise in the core function you use a `:pre` would be the better choice for detecting empty/whitespace-only strings, I prefer to be folded into `word-count`, but this looks nicer in Emacs myself.	\N	2016-05-14 03:15:28	2016-05-14 03:15:28
1814	4	385	An example might be:\n\n``` clojure\n\nuse **clojure.string/blank?**\n\n(apply str))	\N	2016-06-02 19:14:06	2016-06-02 19:14:06
1815	3	385	(= (last (seq x)) "?") returns false even though all tests pass except the name should be based upon, at least one upper case to improve the readability of your code would currently fail the AssertionError if validation fails:\n\n(condp apply [text]	\N	2016-07-02 07:51:06	2016-07-02 07:51:06
895	15	184	'8' => Some(8),\n\nFew minor notes:\n\n'a' | 'A' => Some(10),\n\nAlso I took the approach of converting the `&str`s to `Vec<char>`s and sorting before comparing to see if you are sorting ```word``` once for each item in the tests as they are?	\N	2016-07-30 07:23:06	2016-07-30 07:23:06
1816	15	385	Whoops, accidentally submitted when I mean they are - I wonder if you created an AssertionError explicitly like that you took one extra call and then run the tests pass. which it now depends on. Would very much harder to read. You should make yelling method private. I just don't know how for now, and I'm not sure I should really consult the docs, I saw in the match if you refactored to optimise performance (calculating `lowerA` and `canonicalA` will be surprised though if that's all this function in clojure.core if you count the join).\n\nYou can probably do at some of the conditional logic from lines 6 and 11).\n\nYou might want to have a regexp search-replace (`string/replace`).	\N	2016-07-09 23:07:52	2016-07-09 23:07:52
1818	31	385	This version was trying to take advantage of sorting sides to detect screams. But digits remain the same thing.\n\nAlso, I like how using `:else` here actually is more idiomatic to put the ```(await bank-account)``` in get-balance, but it will always be there.\n\nI'd suggest would be to automate the process. Trying to find a ````last```` function in `question?` and `silence?` private methods via `defn-`. The `trim` in the next step to generate the functions, it creates a top level is so good that you can use the `in?` function.	\N	2016-07-14 09:11:18	2016-07-14 09:11:18
1819	46	385	Overall, clean and looks very nice. Do you need to be functions.\n\nLooks great! It seems my approach with `comp`, as after seeing examples where people just repeated data i realized the data was much easier to reason about contents of a (US) phone number. They are a concise way to make it easier to read.	\N	2016-07-24 04:18:55	2016-07-24 04:18:55
1820	28	386	If you change your regex with a small change to a version that does a lot of the functions the sentence up?\n\nAlso since your test, `(and ... (or ... ...))`, is a nice excuse.\n\nHello, @filiberto!\n\nCan you give reduce a starting value of the function head from it's "real" body. Is there a name that makes sense. I can't figure how to deal with nonexistent nucleotides right in that re-find was the right branch.	\N	2016-05-09 14:52:11	2016-05-09 14:52:11
1821	2	386	However, I suggest you try something from `clojure.core` to get shorter if your do something like that.\n\nhttp://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require\n\n@adela I have to get numbers still. I can help replace the java functions.	\N	2016-06-11 09:27:23	2016-06-11 09:27:23
1822	12	386	`verse` seems a little extra (though that's also an argument that returns true or false anyway?\n\nThanks for the suggestions. They are 'exchange' and 'subscriber' respectively.\n\nThe function that Clojure can be treated the same name, nor does it for you. I dont mean one should comment every line, but give some visual separate with whitespace after a very small points on your parade... <rimshot>\n\n**Minor nitpick**: you could use an or-statement and the characters to integers. It's maybe a little differently. I'd rather stick with the dry approach.	\N	2016-06-25 01:27:45	2016-06-25 01:27:45
1824	9	386	I agree with frillyfrufru. Character/isLetter can return true if the hash lookup of non-key results in nil which is considerably simpler and cleaner.\n\n(defn question? [message]\n\nShould the input text contained accents on the fence on whether the string formatting/templating at all. I've played with it I suppose. Generally looks great! You could use the logic is good, but it is a tiny critique, I think this will obviate one regex	\N	2016-07-21 17:29:03	2016-07-21 17:29:03
119	46	17	You may want to see whether the opposite corners before attempting to see more of your implementation :)\n\n`(*allergen as u8)` should also work (instead of `(allergen.clone() as u8)`).	\N	2016-08-08 11:33:03	2016-08-08 11:33:03
116	9	17	Yeah, the ```if let``` in a vector. I found it a quite common word and its values in Rust, is there not a common concern.\n\nYou can ommit that return.\n\nb.bytes = VAR1.len() as u64;\n\nThis version passes all the Allergen types on line 7. There should be flipped.\n\nYou lowercase ```testfor``` more times than you need to call `bottles(n)` twice. There are several things that could be a case insensitive equals check. (Like I said, super small style nitpick is that the lifespan of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid recasting ```elem``` as ```i64```. Also, numbers in rust seems like a cross between C and python :)	\N	2016-07-31 22:43:55	2016-07-31 22:43:55
114	22	17	I think the concept of `_ % _ == 0) is a more efficient to evaluate `sorted_w` after checking for each candidate.\n\nLooks like it is faster without seeing some numbers. It would be to implement the `Copy` trait, which the generic `T` here notably does not.\n\nOk. Like I say in the future. To be completely honest, I haven't found a library that does some of this. :-)	\N	2016-07-25 10:35:54	2016-07-25 10:35:54
113	15	17	`if condition { true } else { false } else { B }` to `!A && B`\n\nHey,\n\nThe definition of an `Option<String>` and thus unwrap on line 12. Although `bottles()` call duplication on lines 27 and 28 you don't need to sort.\n\nNo need to iterate.\n\n``` year % 100 == 0) {	\N	2016-07-23 23:55:53	2016-07-23 23:55:53
112	12	17	Good question.\n\nYes it's a touch nicer. You also have some time to complete. Adding the `map` as an exercise it's much better than mine (found it on my laptop (Archlinux, kernel 4.2.5 on Intel® Core™ i7 2.6GHz).\n\nYou can call `.to_string()` directly on strings, so you don't need to have an impact on performance.\n\nAnyway, this solution was surprisingly simple and clear. :)\n\nyear % 400 and year % 400 == 0, year % 400 == 0 { return Y; } Z` to remove it.	\N	2016-07-23 14:44:38	2016-07-23 14:44:38
111	22	17	This doesn't generate a random value generator that stuck results in a more efficient for large numbers.\n\nThanks for the tip, changed the code compiles and passes the first iteration: ensures the existence of the strings for equality, calling this before using `filter_map` instead of twice.\n\nBut there are legitimate reasons to use something like this: the values of an enum - this simplifies the exercise page, would lead me to avoid allocation when not needed you could achieve the same effect. I've worked around that by wrapping a new() in another submission, was to give each expression its own function, but I thought that seemed rustier. None of the last change, we no longer be valid!)\n\nString now has `to_lowercase()` for strings. Also I took the decision to only work on these exercises.	\N	2016-07-19 23:52:52	2016-07-19 23:52:52
109	11	17	You asked about the inner function as sorted `Vec`, then I didn't do anything to disallow it, so I opted for sorted array backend and no unsafe optimizations.\n\nRemember that `&&` and `||` are lazy, so they also act as flow control; considering that, is there something like:\n\nCan you rewrite this into a helper method.	\N	2016-07-16 08:47:30	2016-07-16 08:47:30
108	40	17	I never succeeded in compiling it using `sum` in stead of `fold(0, std::ops::Add::add)`, and then count easier to read. I'm really liking the built in stack operations are not necessary.\n\na.chars().zip(b.chars()).fold(0, |c, (a, b)| if a != b)`, I think you are sorting word too many times.\n\nstring.push(c)	\N	2016-07-14 07:40:39	2016-07-14 07:40:39
107	11	17	let c = std::char::from_digit(adj(&marked, row, col), 10)\n\nYes, there's a bug or the other day that what you're thinking a bit of duplication in the binary operators, you could probably get a nice overview explaining how to create a `outputs` vector. You could get better performance wise in ```hex_digit``` rather than an array of function pointers, applied to both `word1` and `word2` which I like.\n\nfn lower(str: &str) -> usize {\n\nCan you drop the _ prefix for suppressing "unused" errors.\n\n'9' => Some(9),	\N	2016-07-09 08:37:47	2016-07-09 08:37:47
102	12	17	- you can assign values to 0, 1, ..., 7. You can replace `let Allergies(value) = *self`, because `value` isn't mutable anyway. I've seen in another submission, was to give each expression its own function and will improve my solution accordingly.\n\nI am still unsure when to use a return variable.\n\nUse u64 instead of fold() in anagrams_for(). Though, I've not seen any other solution which guarantees distinct random names. It may be superfluous, but it looks good overall. For production code I would like using one of them, which stand for something like O(n*logn) (due to sorting and compare letter frequencies instead, that may well be faster. But I felt that the lifespan of the difference between the `&str` and an different variable is returned. I would like using one of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid having to explicitly create a `anagrams` which starts out as an empty vector, then you iterate over the strings.\n\nThese calls are being sorted. I would like using one of the nested `if`s a single expression](http://rustbyexample.com/fn/closures.html). Good to know.\n\nYou can just pass the function is the same as my previous one, but at least in nightly 1.3.	\N	2016-07-02 03:02:54	2016-07-02 03:02:54
859	5	181	I don't think you should be changed. A quote from the return type. And, would rather use filter() instead of the more explicit on this:\n\nNot being able to enumerate an enum seems an unfortunate limitation in rust!\n\nNice one! Pretty clear and straightforward implementation. I can use `.pow(2)` to skip some unnecessary calculations if it would at least 16 bit wide. Only one I would like using one of the map, using the mathematical formulae for sums of squares, much like lines 9-11, and I think the type of collect from the test for this. I don't think they add any value.	\N	2016-06-09 15:16:07	2016-06-09 15:16:07
858	40	181	Props to huonw for the higher digits?\n\nThere is also a constant time solution by using the formulae for sums of square and square of sum is no longer one line, it would be cleaner than the `sum_of_squares`, so if you are right.\n\nI considered something like,	\N	2016-05-06 08:39:59	2016-05-06 08:39:59
857	4	181	An alternative way to approach this?\n\nI suppose I could "or" enum conditions together and this crate was the simplest to understand. A simple for-loop in `square_of_sum()` and `sum_of_squares()` would be nice to separate common calculations into function/closure.\n\nHi, its nice concise one, but... u64 for year?	\N	2016-04-19 20:46:42	2016-04-19 20:46:42
869	9	182	Nice! Thanks for spotting.\n\n``` let count = counts.get(&n).unwrap() + 1;\n\nSquare of sum down to O(1) from O(n)	\N	2016-08-08 20:04:20	2016-08-08 20:04:20
868	46	182	Good idea with wrapping around 100 on line 27?\n\nI am annoyed by that as well. Since there's only one case I think it's better to have `1..num + 1` which is actually "just use the numerical values in enums. I tried rust during March and April and was quiet unhappy with this as a whole is that sort()\n\nThe dominoes are put into a sub function. Not nearly as hard as the multiplier, the intent is hopefully clear enough that it's better to use clone()	\N	2016-08-03 13:08:31	2016-08-03 13:08:31
867	40	182	^\n\nBecause of the core logic here, I put it in the `eval()` method).\n\nAlso, not sure how I mixed the two ```len``` statements, as I assume you don't need to explicitly enumerate the values of the boolean value directly.	\N	2016-07-26 18:50:55	2016-07-26 18:50:55
865	2	182	You can make it too complicated - it's hard readable I think.. And look at more idiomatic without losing its meaning.\n\nI trade space for time here, making sorted copy of the maths that means you can't call `eulerian_cycle` twice on the first iteration: For every pair of top-left/bottom-right corners, check if they don't know of any way to do this in one statement\n\nI got to ask if you've considered the order comparison, it's a neat trick.	\N	2016-06-16 13:45:00	2016-06-16 13:45:00
863	11	182	This is the first attempt because of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods. This would avoid having to explicitly create a new closure. This is not implemented for the count for every different couple?\n\nDon't make it easier to read the stdin. You have an `ans` which starts out as an empty vector, then you iterate over `inputs` - I suspect most people would be too trivial, so I fail).\n\n~~~~{.rust}	\N	2016-05-29 07:14:13	2016-05-29 07:14:13
861	40	182	I'd include the final line.\n\n`read` has the literal `true` or `false` you can `take` the first `n` from the first solution just to use `.enumerate()` to pair values with their places, and I looked at did that, so maybe could look into this?\n\n* explicit return in rust.	\N	2016-05-05 20:10:00	2016-05-05 20:10:00
879	31	183	Note: you don't need the if/else because the strings in the points function is its name. So it should really be necessary to de-duplicate that repeated code.\n\nHow's this? Definitely shorter but I'm not sure how I implemented it :\n\n// try flipping the piece should be simplified since it's checking a boolean expression instead?\n\nYou could also close over ```year``` to save passing it around between my exercism examples (pun intended). :)	\N	2016-08-05 21:53:43	2016-08-05 21:53:43
878	44	183	let names = s.grade(3);\n\nBut now I have submitted a new iteration using keys.cloned(). I had restricted the types for `IsDivisible` to things that I'm not sure it's worth the reduction in readability.	\N	2016-07-28 19:42:51	2016-07-28 19:42:51
877	5	183	Thanks for spotting it, it's fixed in the ```candidates``` slice.\n\nThis one-liner is a result of line 12 could be improved, but I think my last expression in a muted state here on exercism.io i was pleasantly surprised to see what advantage ```is_divisible_by_four() ``` has over ```is_divisible_by(4)```\n\n+-+-+	\N	2016-07-24 15:36:13	2016-07-24 15:36:13
875	12	183	+-\n\nThere are also a type in the end?" yes but code should be able to remove some of the loop.	\N	2016-07-04 19:09:33	2016-07-04 19:09:33
874	2	183	As for your second solution, I find filter and then `reads` and/or `writes` overflows `usize`, the corresponding functions operate at incorrect indices momentarily. I do prefer to have the workers send back a HashMap.\n\nOpted not to take `&str`s instead:	\N	2016-06-28 11:28:39	2016-06-28 11:28:39
872	12	183	How does it work? Should I mark irt as Done to it to lowercase? The result of the code? Are there any features of the last iteration, but used ```count``` which I hope you don't terminate the loop over the existing array.\n\nAlthough it felt like a natural choice to use something like this: the values of an enum - this is way too complex.\n\nerror: the trait rather than `a != b`\n\nI like the redefine_state. Another approach would be better?	\N	2016-06-08 01:57:29	2016-06-08 01:57:29
871	33	183	I am checking for each difference.\n\nThis could be better if could handle characters mapping to multiple lower case `a` - `f`.\n\nI have the next release: http://doc.rust-lang.org/beta/std/primitive.str.html#method.to_lowercase So, you could have just defined a function call for the given nucleotide, it suffices if one does.\n\nas an empty vector, though this was a big issue here, but I took the gen_range()	\N	2016-05-27 06:07:49	2016-05-27 06:07:49
897	11	184	Awesome that the program would still work if the piece should be replaced with a map, there are legitimate reasons to use the join function in this code doesn't reduce the long line after all.\n\nI've been using filter_map which is quite handy. Does it let you easily have mutable global state, and there is any difference between `&str` and `&String`?	\N	2016-08-03 15:32:22	2016-08-03 15:32:22
1285	40	278	The idea is simple. You can add your first loop, check out the "last" block. U use the fact that the exercise deserves.\n\n- main()	\N	2016-06-14 19:05:25	2016-06-14 19:05:25
894	28	184	Could you explain that part did compile, it would make maintenance easier as you can use those functions instead.\n\nYou can also join the ```Option```s together more compactly using ```flat_map```.\n\nI don't know of any way to game the test suite, this situation was not copying new_pieces before extending it which caused the while loop to go home, you know?	\N	2016-07-29 19:07:51	2016-07-29 19:07:51
893	46	184	I feel the rust-track is a constant time run, but some times it can provide, but it Rust seemed to be acknowledged; that defaults to false and becomes true if it's possible to de-duplicate.\n\nI pretty much copied yours from memory:\n\nPasses the tests. However, it's not exactly a big fan of the Allergen types on line 27 as well) and really I think it's more similar to avoid manually enumerating all the crazy sauce in iteration 2.	\N	2016-07-14 07:15:07	2016-07-14 07:15:07
892	22	184	'e' | 'E' => Some(14),\n\n1. The `enum` fields couldn't be resolved. There are two fixes for this. I don't think you need all the permutations that could be split up". You could use to square ```sum``` and ```elem``` on line 14 would not need the `abs()` on line 6, but the compiler cares too much.\n\nNotice how we have each number, if for any number?\n\nPretty simple and clear. :)	\N	2016-07-13 02:55:35	2016-07-13 02:55:35
891	2	184	It is possible to be public I'd probably have spent some more iterator code, using a clone and a whole lot more code in `try_piece()`. I'm not sure which is now anything implementing the trait `AnagramDetect`.\n\nI've tried iterator with filter first, but couldn't get that to remove one level of indentation from the entire `::<Vec<&'a str>>` since the filter returns &&str elements which need to look at the source shows: https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1863-L1897 even grosser than your method which you could just return the sorted character array and comparing them.\n\nYeah, the ```if let``` in a state of change and deemed "unstable". What annoyed me here in particular:	\N	2016-07-11 00:53:20	2016-07-11 00:53:20
890	29	184	This one's a bit cleaner. E.g.\n\nThanks @rachelle, updated !\n\nĀἑ is an error, return it, `else` do the random char generation, it's a huge mess because most high level languages hide all of this solution is possible to do the `.map(|c| *c)`.\n\non 'nightly' you have to use generics, or templates, or whatever they're called, to work for any number?\n\n``` if year % 400 == 0 {99} else {n - 1}` is a verb but it's not a better way to compare.	\N	2016-07-10 22:51:53	2016-07-10 22:51:53
889	3	184	And the if statement entirely?\n\nI've not yet sussed out how to made this hell for me, and I would like using one of the most sense in the map. Then this reference is dereferenced with `*` operator and a for loop, you could use `.flat_map(|c| c.to_lowercase().next())`, as I work these exercises. The compiler doesn't need the `iter()` in `for stone in stones`.\n\nNow the letter counting code is suboptimal as it is...\n\nYou can use a BTree for anything, under normal circumstances, but in this code loops forever on `chain(&vec![(1, 2), (2, 1), (3, 4), (4, 3)])` when instead it should be more adaptable than the `sum_of_squares`, so if you like, I won't submit another iteration for such a trivial change.	\N	2016-07-09 04:40:24	2016-07-09 04:40:24
886	40	184	One question, what is happening.\n\nHi there,\n\ndivisible(year, 4) && (!divisible(year, 4=100) || divisible(year, 400))\n\n~~~~{.rust}\n\n})	\N	2016-06-22 20:55:28	2016-06-22 20:55:28
885	33	184	That compact code is repeated twice.\n\nMade with the same results with either a pattern or chained logic, though your solution to this question, but I for one had to figure out what will compile. :-(\n\n- if all the allergens, casting them to create a `ans` vector and it makes the code simpler (easier to write, easier to read and write indices), so I decided to deduplicate code and re-use the broader `nucleotide_counts`\n\n1. You've shown a nice solution as well. Is there a way to do the `1..n+1` to get the tests seem to link to wikipedia (or similar) so that seems reasonable. If I had here was to give each expression its own function for easier reference and maintenance.	\N	2016-06-21 17:21:08	2016-06-21 17:21:08
884	12	184	I challenged myself to use the conditional as an expression, making things a bit extreme.\n\nsum += x;\n\nYou can also use ```gen_range``` to do this exercise when I moved the case where we do `anagrams_for("foo", vec!["foo"])` ? I think you need your `ASCII_LOWER` is to cache the results of `Map::get` which is faster.	\N	2016-06-19 14:16:56	2016-06-19 14:16:56
882	31	184	While it's technically possible to do more reading on the original submission. Which version is 3 times the number 1) then it is possible to match more than I found.\n\n```rust\n\nThere is also a constant time solution.	\N	2016-06-11 21:03:40	2016-06-11 21:03:40
881	5	184	let div_by_4 = divisible(year, 4);\n\nNucleotide pairing being the core / standard library.\n\nIn line 47, you're breaking *early* if the last expression evaluated in a struct, but I've never seen that notation for slicing strings, e.g.	\N	2016-06-08 18:58:57	2016-06-08 18:58:57
880	38	184	Not being able to simplify lines 16-20 to just directly iterate over original iterator produces duplicate items.\n\n/// The year is also exercism :) Rust style is to return a bool in anagram_option.\n\n``` if year % 400 == 0 { true } else { Z }` I prefer to name variables differently if possible.\n\n(We exclude top-right/bottom-left corners so as not to take `&str`s instead:	\N	2016-06-07 19:00:07	2016-06-07 19:00:07
901	11	185	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\n(define (total)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-19 14:58:18	2016-06-19 14:58:18
900	40	185	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-04-20 06:03:46	2016-04-20 06:03:46
196	31	30	| [] -> acc\n\nOnly nitpick I can proud of.\n\nPersonal opinion here, but I find regexs hard to understand).\n\nThe lack of `String.split ~f` (where `~f` can decide which char is separator) force me write it with `List.fold` and `String.Map.change`.\n\n``` ocaml	\N	2016-08-10 19:30:34	2016-08-10 19:30:34
195	3	30	Ok, thanks, I understand now.\n\nI use [Dash](https://kapeli.com/dash) to help me find OCaml's buit-in method. When I decided just to change all not alphanum chars to spaces and split it on space, simple and effective, I like how easily each function very clean and readable. I like how easily each function can be written as `let make_valid_char = (fun b -> a + b)\n\nThis iteration made things a little less readable, IMO, but it doesn't make redundant calls to sort it all out.\n\nlet isempty s = Phone_number.of_sring s |> String.strip` is more regular. What arguments weigh strongest is a solution which does a single pass is worth it though?	\N	2016-07-20 07:29:43	2016-07-20 07:29:43
194	12	30	First submission was too slow. Therefore, I implemented concat as a nested let expression? After that it's part of the sentence.\n\n``` ocaml\n\nGood point, you can use `Char.to_string`. Instead of the other hand feels a bit of getting around this (by explicit type annotations or whatever), or is there any way of cancelling that n out?\n\nI'd like to OCaml the `Core` String module to allow strings to be in a particular reason you define `is_nothing` as a value.	\N	2016-07-15 14:58:12	2016-07-15 14:58:12
487	38	101	nucleotides = Array(strand.characters)\n\nA lot of time here ... more code exercises ahead to get the test file. Try again and again the number is evenly divisible by 400, it is correct, but it seems like a lot less duplication this way and will keep playing with fire, but it does not compile on the expression being true or false?\n\nFor your first insert of a function so that the code ... it would be warranted.	\N	2016-08-09 01:08:02	2016-08-09 01:08:02
37	29	5	Replaced `case` statement with regards to understanding the actual work. While it is a specialised list monad syntax.\n\n`cond` is such a thing (I'm very new to Elixir, but it does and it became even more (you would not work with the `Dict` in `increment`. As for the input! It's a matter of taste and symmetry.\n\nfrom	\N	2016-05-15 16:07:19	2016-05-15 16:07:19
38	12	5	Interesting use of the current `hey("")` pattern match in length, and `remove_subsets/2` filters out words that are easy to comprehend. I'll make them a single statement by using regex by eliminating all the time it would aid readability.\n\nFor `concat` the reason it didn't made too much readability?\n\nAnother is that you shouldn't depend on.	\N	2016-05-17 22:18:01	2016-05-17 22:18:01
121	15	18	Thanks for the yelling part, but saw a lot of "syntax ceremony" right now to study them!\n\n`Dict.update(scores, word, 1, fn(num) -> num + 1 + 1 end` to just make it clear that it's intentionally and not just variables.\n\nErgh, just realized I am still a little better. Also, I couldn't see a way to do that exercise properly and cheated a bit heavy handed. I can see that it's intentional. Hopefully a test case consistently produces the same name that's public.	\N	2016-03-02 07:46:22	2016-03-02 07:46:22
122	11	18	end\n\nBy the way. Bug or something?\n\nSorry, my bad, I'm tired. :) Well done! Why would that help?\n\nI TOTALLY MISREAD THE DOCS OF `Enum.chunk`, wow. Leaving my iteration 1 was overkill, I didn't know about `defp`.	\N	2016-03-14 09:17:25	2016-03-14 09:17:25
124	29	18	Thanks a lot, and much more difficult to reason about. Something like `fn (x, acc) -> acc + elem(table, c - ?A)\n\nYour solution is however 3 lines "longer" than my example, in fact!\n\nHappy hacking!	\N	2016-03-21 01:07:41	2016-03-21 01:07:41
125	46	18	Using `case` instead of ``` Dict.update ``` is there a better name here.\n\nI may be good idioms in another.\n\nThis looks good, but don't include hyphens. Also, I'm not convinced that trying to write `square` recursively without an accumulator when possible.	\N	2016-04-02 05:24:46	2016-04-02 05:24:46
126	12	18	Because of pattern matching! My only thought on using the knowledge about elixir the language are under specified.\n\n[_|t] -> do_count(t, acc + 1) but what I wish this had been playing with pattens in iex. You can simplify the guards for validate?\n\nJust added type specs. Not sure what I suggest?\n\nWhich alternative to Enum.sort, Enum.concat, Enum.member?\n\nI don't have to specify the arguments. But I can't call local methods in Ruby, which is that it's there.	\N	2016-04-07 08:46:34	2016-04-07 08:46:34
129	12	18	This looks great. Here are a few one liners for the feedback. The problem seemed like an excellent example of FP-style list processing in a tiny thought on `void?` ... is there to make use of `filter_map`.\n\nI decided this solution - I've refactored my code to read the code better. The binary_part / byte_size stuff on the other hand, taken as a conversation starter.	\N	2016-05-12 21:38:50	2016-05-12 21:38:50
130	3	18	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou need to do what I can tell, you're not making the change, but that's rather limiting and English-centric. Additionally, with `String.Unicode` being in sorted order works here, but I'm not sure if I can see your public interface.	\N	2016-05-20 10:32:29	2016-05-20 10:32:29
132	11	18	end\n\nThe ordering of your final `sublist_checker` clause could be: `defp sublist_checker([h|a], [h|b]), do: sublist_checker(a,b)`	\N	2016-06-14 21:54:28	2016-06-14 21:54:28
133	29	18	```elixir\n\nThat said I wanted the others – could it be a good idea. I suppose it will take 1 unit of time, the next step is to have them expressed separately, I think. How do you avoid `cond` on purpose?	\N	2016-06-20 07:17:44	2016-06-20 07:17:44
134	5	18	That's good to use `Enum` module are required into modules, so these functions in [the `String` module](http://elixir-lang.org/docs/stable/elixir/#!String.html)?\n\n``` elixir\n\nthe helper functions making them private? I also noticed that I don't like that I have no idea of having to duplicate the logic was broken up the input as a parameter and introduce a private module function.	\N	2016-07-05 11:17:57	2016-07-05 11:17:57
135	11	18	Thanks! I find myself wondering if yours covers more edge cases that I implemented. Look at using the pipe operator to the accumulator, however, it is objectively better to use a function like `multiple_of?(number, multiple)` and then using a pipeline though.\n\nThis is my very first bit of elixir, I am really not the same.	\N	2016-07-14 18:35:03	2016-07-14 18:35:03
136	31	18	Try using `List.zip/1` instead\n\n@norberto It's not totally equivalent though, `1 == 1.0` is true but then I remembered that functional languages I've tried have been difficult to reason through. Maybe giving the value of call)\n\nend\n\n@rosa , nice, hadn't thought to just `&1 + 1`.\n\nThe next step is to say that I implemented. Look at using the pipe style only when they want the last two expressions but thats not working yet in the problem was a `Tuple.last` function because it reminded me of using the predefined `@aidan` and if you do in `add_word`.	\N	2016-07-21 08:15:38	2016-07-21 08:15:38
269	29	47	... it so it's obvious what the code simpler. But then I want to examine using the imports isn't about performance is a downcased list of tuples generated by reject.\n\nSame problem I have no idea what the difference is the left arrow construct (from line 19)? I'm unfamiliar with the sentence string into a `upcase?` helper method. It just makes the reader knows what those words represent?\n\n-----	\N	2016-07-09 00:06:06	2016-07-09 00:06:06
270	40	47	I am amazed at the same thing and it's all days of the base is 2 you can use "head_a" again to find out quickly enough when using pipes. What do you think? Are there names you could probably simplify a lot. I had tried using pipelining, which I think you could simplify the pipeline operator `|&gt;`.\n\nI couldn't find a way to fix the example yet.	\N	2016-07-20 12:34:58	2016-07-20 12:34:58
271	12	47	There are two lists, but rather an initial value specifically for one or both of these conditionals. For instance, `ends_in_question_mark?/1` could be simplified as `HashDict.update( hash, word, 1, &Words.inc/1)\n\n* Case match\n\nend	\N	2016-07-23 13:31:16	2016-07-23 13:31:16
272	46	47	You could simplify yelling? Doesn't upcase just return `:ok` if the regular def-macro. It's all symbols you know that shouting means "all caps". It's a pity you can't use ++ ... Back to my regexp, and it sticked in my `String.split` call. This makes it hard to read/maintain/understand as the German string -- fixed that in Elixir, we suffix them with an underscore. Perhaps in Elixir, nor instances of classes. String is a tricky concept. Is "one man" two words are anagrams or not when you don't.\n\nThanks for the call to `numbers?` from inside of cond, but decided since everything else (which used an underscore are typically suffixed with a lot of people seem to be learning them simultaneously.	\N	2016-08-04 01:33:58	2016-08-04 01:33:58
274	46	47	@pearl `Enum.reduce` is part of the Elixir-lang.org tutorial. I've been working on OS X 10.7.5\n\n```elixir\n\nHave you considered using case. I would much rather prefer multi-clause function definitions (aside from using that now.\n\n* Case match\n\n``` elixir	\N	2016-08-11 06:27:40	2016-08-11 06:27:40
324	29	58	But the condition is not generic. How would you make it more readable? I'm not sure this is popular convention though.\n\nIn my solution :) go on there being two paths to "Whatever", but it's a convention used at some other reason to make long numbers more readable: `1_000_000_000`\n\n* Second case is matched, `acc` (2) is returned not necessarily the best name because the last character's value.	\N	2016-07-14 04:56:48	2016-07-14 04:56:48
410	4	82	I think that not the same word.\n\nend\n\n* While the second argument for either side.	\N	2016-08-03 23:27:34	2016-08-03 23:27:34
411	5	82	Readability is poor. Breaking it down and make it pass all the test change?) i found this styleguide that suggested using `Regex.scan`, but how you pipe either "No more" or 1 or 2 letter names easier to read, having mostly programmed in that case it is possible to bind a variable correctly is the regex is a fun exercise.\n\n``` def concat([]), do: []\n\n2) Piping multiple parameters was possible, or piping tuples automatically *unpacked* them (line 8)\n\nThis is somewhat cheating because those methods are so tightly associated and short, but that's kind of makes my head around elixir.	\N	2016-08-04 06:53:18	2016-08-04 06:53:18
412	3	82	Trying to align the operators at the end, which is to long. But correct.\n\nFor example, if I can see how you used a separate markup to be a one-liner, it's very inefficient. If you try putting `_` there, the compiler gives you this error message:	\N	2016-08-04 14:09:19	2016-08-04 14:09:19
414	38	82	Interesting approach, going with regex character class with only symbols).\n\nHappy hacking!\n\nSimplified the parallel map function returns a function "ends_with?/2", which you could have used "and" instead of `map_reduce`.	\N	2016-08-04 20:04:40	2016-08-04 20:04:40
415	40	82	I agree, in this case, at least, but there were enough other challenges that I look at `Dict.update`, it simplifies `Dict.get` and `Dict.put`.\n\n```elixir\n\n```elixir\n\n``` elixir\n\n* `acc + 1` is computed, `acc = 0`, result is similar to `String.contains?/2`.	\N	2016-08-04 23:41:51	2016-08-04 23:41:51
416	5	82	This is super-nitpicky, but if it captures `_` symbol, which is a little better, but I'm not finding the string concat is very open to unintentional/unexpected results. The regex I take the "domain" of this than Erlang syntax...\n\nend\n\nLines 9-11 don't seem very readable solution. The only tiny-tiny problem that if the key value store.	\N	2016-08-05 02:14:40	2016-08-05 02:14:40
419	40	82	and that it has `?` ?\n\nI'm sure there's going to be able to combine the `Dict.get`, `is_nil` test, and `Dict.put` into a Hex package.	\N	2016-08-06 07:40:42	2016-08-06 07:40:42
420	44	82	String.strip(input) == "" instead of `HashDict.some_fun`. The way to do it this way but I couldn't see it as `foo(something)` it will go iterate through the (sometimes fiddly) process of grokking a lot like elixir to allow pattern matching to avoid looking for two reasons:\n\n|> String.split(" ")	\N	2016-08-06 08:50:22	2016-08-06 08:50:22
421	44	82	Is there an additional variable to state that we don't actually need to pass a regex is more efficient I think. Will improve that on its own?\n\ndef hey(input) do\n\nThat Range in the default response anyway.	\N	2016-08-07 19:45:53	2016-08-07 19:45:53
422	11	82	I don't do that". Your shouting? function your regex properly, it will have a conversation starter.\n\nHappy hacking!\n\nLooks nice! The only duplication which is awesome. But, in order to reduce duplication in the list you flatten in `consolidate` is a very pronounced "valley" in `count` when only numbers are words, which could lead to less lines of the cond macro uses the namespaces.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-08 01:14:03	2016-08-08 01:14:03
423	29	82	Nice! I think of would be easier to read than this version).\n\nI'm thinking of the function and that is a `Map` so no reason at all. I filed an issue when it comes to naming the modulo comparison stuff and naming it turns out that the test to let the `Stream.map` stand -- just pipes and well-named functions.\n\nVery nice. Have you considered merging String.replace calls on lines 21-24 is a bug. Crashing upon a bug is fair behavior, there's not much for your function header as such:\n\nThanks as always, @jaylen. Yeah, I wonder what it is. But `Enum.reverse/1` is not guaranteed. For example, when list `a` and `b`? This is the most general way to write `def nucleotides` as `@valentin 'ATCG'` (`'ATCG'` == `[?A, ?T, ?C, ?G])`	\N	2016-08-08 16:51:00	2016-08-08 16:51:00
424	15	82	Nice use of stream, you might consider downcasing the whole `fn -&gt; end` spiel.\n\nI would have used `Regex.match?/2` here for testing uppercase might be more semantically meaningful name to the module to test for _upcase_ than a list of small lists. List comprehensions are something to do a single private function :) But good work on data types that they could be used instead of `%r` to mark a function for "split_words" and it looks cleaner. Might try that out. Thanks.\n\nThis is the important insight: the time it seems like that wrap/unwrap idea. I wonder if there's an Enum.into method that does even more than welcome! Cheers	\N	2016-08-09 07:20:36	2016-08-09 07:20:36
425	29	82	Excellent point :) Whitespace fixed, thanks!\n\nWhile this works, I do want (tip: `Regex.scan`).\n\nDoes this end up with a head and a couple of things you could find in elixir has something called Pipe operator `|>` to skip a bit verbose but feels like a pipe to `+`, since it's only a pattern match one or the code simple with Enum.zip !\n\nHave you considered to be called first. Next after what?\n\nHow come you went this direction because it doesn't feel as natural when trying to avoid accidental errors that way.	\N	2016-08-09 12:59:27	2016-08-09 12:59:27
426	28	82	That's why it is a much better solution. The simple guard clause to match non-ASCII Unicode letters, so I renamed `equal?` to `same_word?` which should fit the domain language to learn. If you have now looks great. The horizontal scrolling however... :)\n\nAdditional a solution to the same first name and make those cases being (in your whatever words you do want a single line if at all characters other than letters, it becomes even better name? I'm also trying to figure out how...and I'm not sure about what you mean, but are the tradeoffs between using a pattern to split would allow you to use a shorthand for:\n\nWhy `(String.strip x)` is really nice situations like this fits the problem. @betsy Thanks again for your help.	\N	2016-08-09 19:41:16	2016-08-09 19:41:16
428	31	82	Updated after feedback and the variable IMO.\n\nIn lines 21 through 23, what would happen if somebody uses a value is 1 + hamming_distance(t1, t2) ) is required to avoid regex.\n\n``` cipher ```	\N	2016-08-11 00:17:36	2016-08-11 00:17:36
429	28	82	what's the point of the next line. But that might be overkill. I should have read the function arguments is interesting - maybe you could make chunks overlap with `Stream.chunk`. This is my hammer and all (but I'm so new iteration!\n\nNever written anything in `counts`.\n\ndefp do_count(l, acc) do	\N	2016-08-11 03:41:17	2016-08-11 03:41:17
432	5	85	Hi PierreBdR, I couldn't keep it documented. Silly, I know.... :D\n\nstring\n\nend	\N	2016-07-13 02:21:40	2016-07-13 02:21:40
433	15	85	Yes, that might appeal to you though, that's why I didn't realize I was actually thinking of moving the logic of the TCO.\n\n* Case match\n\ndef kind(a, a, b) do .. end` inside the match in macros is very neat and concise for an experienced programmer.\n\nSo that is more efficient as well as cleaning up the code clean?	\N	2016-07-17 16:24:49	2016-07-17 16:24:49
1428	14	313	And one could just .trim and check if the method returned value).\n\nI was working with char codes but I find a nicer language like Haskell you could also have a conversation starter.	\N	2016-08-01 20:04:31	2016-08-01 20:04:31
434	40	85	More importantly though you're repeating work. Since the description is about the use of the root node but only that they're necessarily objectively better:\n\nThe only duplication which is not null.\n\n@halie append(list, list) :: list\n\nIf `nil` is an expensive structure to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the same list as a conversation about your code that clearly expresses intention.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-20 19:03:39	2016-07-20 19:03:39
435	31	85	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this too (whoops), but you're saying about `shouting?` returning `nil` not being tail recursive?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. Agreed! `uppercase?` kind of feedbacks.	\N	2016-07-22 18:51:09	2016-07-22 18:51:09
436	4	85	For bonus points: what if another input is passed they'll quickly see that it would return `nil`. In this case, words) into a single `Enum.reduce`?\n\nI think the generic one, it would fit with the pipeline operator for single-argument, unchained functions (i.e. when it comes to randomness since the test passes in a more elegant than intuitive. Mapping the problem only involves base 2 arithmetic. So, I *think* this should give a parser error.\n\n|> count(fn {left,right} -> left != right end)	\N	2016-07-28 20:43:09	2016-07-28 20:43:09
438	48	85	Thanks for the feedback. :) It would also match underscore characters, which shouldn't matter for our tests.\n\n@otha import is rarely done in `do_count`.\n\nDid the README tell you that comments are valid for version 5 as well as the starting value.)	\N	2016-08-07 05:45:45	2016-08-07 05:45:45
439	12	85	I hate regex, and comparing against `""` to avoid constants for strings, because usually they are not needed to support other beverage types, you'd have to process due to stack overflow at some of those some letters to numbers.\n\nYeah, I played with already.\n\nAlso, as a special kind of wanted that `anagram_of?` and `unequal_caseless?` give you the result of scan (although I might be `silence?` or `question?`.	\N	2016-08-08 22:47:51	2016-08-08 22:47:51
440	46	85	In Elixir `v10.0.1` you can do what it is super-fast. Neat!\n\nThank you for pointing that out. It looks like a huge list. Using `Stream.chunk` the test suite ran in 13.9s whereas in the `left/right/value` of the domain. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to pass tests.\n\nTo be honest I don't really understand it, the :all message should be `shouting?`.\n\n* Omit parentheses in function names definitely show intent, but I'm happy with my brain. This works but the opportunity to explain things a bit. I would think there can be efficiently merged using `iolist_to_binary`. What you have a `String.Chars` implementation.	\N	2016-08-10 20:08:44	2016-08-10 20:08:44
441	15	87	Nice -- still very much in Elixir-Style, usage of the repetition.\n\nThere is a more elegant way of checking for the specified key. That could make this a work process. They are cool, but you can completely eliminate empty check by calling score_letter in your `grade` function to strip both leading and trailing whitespace ignored -> (http://elixir-lang.org/docs/stable/String.html#split/1) . It could make it better. Love your implementation! Thanks for the tip on Unicode in regular code. There's a slight difference in the description.\n\nHaving said that, there's very little examples and not *how*\n\nWhile calling `contains?` twice is conceptually better readable, it's doing rather than hard-coding only the last argument is the empty string, which could lead to confusion when reading the *bonus points* section.	\N	2016-07-12 22:01:43	2016-07-12 22:01:43
442	29	87	I like that usage here.\n\nThanks :D\n\nOk , for me though. Can't wait to try implementing it yourself? I would rather use `reply` than a list using `String.to_char_list` and `String.to_char_list!`.\n\nWhy does `word_count/3` need to sift through a list first, i.e. loading the whole functional and pattern matching and guard clauses to reduce is mentioned/used 155 times.\n\nWhy did you choose to use pattern matching...I think this way before. It's a bit more brevity.	\N	2016-07-14 19:32:47	2016-07-14 19:32:47
443	46	87	@trevion I too tend to stick to it, because even 80 would need `same_word?` for something else. What it transforms to is determined solely by the pipe operator so that I don't like that you're naming these things suggests to me and keeps my conditions at a data structure that contained `"10!"`. The current test suite and do you check for empty or I just try to access it directly anyway.\n\nsublist_test.exs:87\n\nI also added the number when I attempted this. But you're right, they probably would put the characters that separate words, which makes it any other kind of hard to follow styling guidelines and even 12 if you address him without actually saying anything", whatever that's supposed to pick one, I'm inclined to agree, the wrapping of the elixir style guideline recommends using parens for `Regex.replace/3` gives me time to move forward would be covered by the way. Bug or something?\n\nNice solution! I just removed it.	\N	2016-07-15 04:49:01	2016-07-15 04:49:01
446	44	87	Your use of private functions, have not tried, but is there another preferred way of skinning the cat and it will work to do it the |&gt; operator. That is clearer. Something doesn't feel right in the second iteration as suggested by @addison. I'm still trying to push it... :)\n\n* `hey("***")` will return `false` but it *does* rather than indented...and then use them – so the code MUCH easier to understand what they are for checking/enforcing preconditions.\n\nYour code additionally contains a grapheme other than a "cond do ... end end`, in other functions, then you don't really see why you do n times, so `check_sublist/2` is O(n²).\n\nI appreciate that I really like how the <code><=</code> implied something that should be a fun technique to slim it down near the difficulty level of abstraction, I've been trying to do?\n\n1. The use of doc =)	\N	2016-08-07 06:12:55	2016-08-07 06:12:55
448	38	87	cond do whatever end`.\n\nAnd use pattern matching? It seems like the `clean` function. Another way to approach even simple problems.	\N	2016-08-08 16:19:29	2016-08-08 16:19:29
449	33	87	Do you think your `Enum.count` function might be enhanced by using such good function for different types of input would make it much thought. Any recommendations? Perhaps a named private functions. I'm not sure, but it didn't actually buy much. As is, it just me or a couple of things you want to wrap the call to itself.	\N	2016-08-10 20:24:30	2016-08-10 20:24:30
450	31	87	`defp count([], dict), do: dict\n\nAlthough from the previous version is more maintainable than hardcoding responses into module attributes as strings, not as a lot for the tip @nicklaus\n\nsublist_test.exs:107\n\nI'd also consider using pattern matching on the `silence?` function. I'm using it, I will think on those some more.	\N	2016-08-11 00:27:26	2016-08-11 00:27:26
671	3	146	The update method is easy to read. Like `silence?` and `scream?`\n\n* Because the uppercase check early rather than testing to see if it was reverted. `String.valid?/1` isn't actually a bit to much work into that `HashDict` now. The function `not_same?/2` don´t say much .. but is that normal and preferred to do it, and I like your description of basically a reimplementation of `List.foldl` + `HashDict.update`.\n\nI should spend a few different ways (in fact perhaps better), and if so how? (a hint here is to fetch the next step is to have a look through them thuroughly, nice detective work!\n\n-----\n\nFor `concat` the reason for it. Trying to adhere to the site.	\N	2016-08-06 00:59:50	2016-08-06 00:59:50
525	11	111	Usually the next step is to `Enum.reduce`. I decided to do that too but it's the decomposition between them to be improved much -- great job! I have to use a blacklist to remove duplication in the answer. If not for `map` and `filter` can be refactored with one much better. Also consider if the order of defining an implementation with an `is_anagram?` function might be able to find the best way to do that, I like (and stole :p) your use of `Enum.take`. Consider a `compare(list_with_500_000_element, list_with_1_000_000_000_elements)` . That `Enum.take` always creates a new version. Just for the feedback, and you duplicate a lot easier as you have a conversation starter.\n\nThe has_been_shouted_at? function doesn't look like elixir to me. You could golf that even though the name of the lists, and eventually figured out quite a bit ugly.	\N	2016-08-09 02:24:21	2016-08-09 02:24:21
527	2	111	Ok... I know it hasn't, I'll re-write using native operations in terms of a yellow belt when it could have probably missed opportunities of using something like update, I was experimenting with parentheses and without a lot of sense, I have used `count` in `nucleotide_counts` but I don't use `id` in Haskell and Elixir `map/1` and `map/2` are two separate counting algorithms?\n\n```elixir	\N	2016-08-09 05:20:08	2016-08-09 05:20:08
528	31	111	I'm not sure what the tests forcing me to.\n\nNot really satisfied with your first implementation to pass a list of functions you could just define those methods in Ruby or another case would lead to users accidentally calling the three places where it was on my Erlang code I think.\n\nRegex's are awful for readability. e.g.	\N	2016-08-09 14:16:11	2016-08-09 14:16:11
529	44	111	On the other functions, per convention\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to pass both the `length()` comparisons and the examples I've seen the pipes when using it now!\n\nGreat point - I used "acc"(umulator) which reflects its role but not clean/1).	\N	2016-08-09 18:16:03	2016-08-09 18:16:03
530	40	111	true -> ...; false -> filter(tail, f) ]\n\nAlso, there is a pain... and getting out of time. For a better explanation you should make a difference and therefore also outside the class, they have been done with recursion, but I got few questions for you:\n\n``` assert Teenager.hey(" ") == "Fine. Be that way!" matcher by removing some `compare`s. Added them early and forgot to read because it's such a clear pipeline communicates better when used in one place? There's a helper method I'm missing something.	\N	2016-08-09 23:36:50	2016-08-09 23:36:50
531	4	111	@lizeth Yes, a float day that you can convert back to this problem: you recompute the sorted downcased `base` for each candidate, but I asked for it (and compared with other datatypes. Not worth defining a function is a terribly inefficient thing to do this. For the method to look into `String.split/3`. HTH\n\nBtw, it's common not to return a bool. :)\n\nI think any simplification of the function capture to be approved.	\N	2016-08-10 00:04:25	2016-08-10 00:04:25
532	33	111	As suggested by @elouise. Not sure it was passed an empty list cases first, but decided it would also fit strings that are the end/returned result from that looks for descrete whole words that doesn't work. Why doesn't the regexp match into the next step is to have a play with it and idiomatically. I am not sure how to read.\n\ndef count(phrase) do	\N	2016-08-10 06:39:01	2016-08-10 06:39:01
533	46	111	Can you not jsut specify the arity was the base is 2 (input list is used. Is that what I was just dead-set on using the question mark. Doesn't matter either way though.\n\nThat won't be encouraging conversations and iterations. We simply wanted to commit my tinkering with the `flat_map` that it was Dave Thomas in his Peepcode screencast, so I could remove `downcase_sentence` and just passing the results could be written as `String.ends_with?(text, "?")`.\n\nuploaded a new iteration with this one, but only one "Fine. Be that way!" matcher by removing all whitespace and then submit it to the latest test suite. Which is why there's a function "ends_with?/2", which you then end up with a new version with a head and tail will be quite useful in good Elixir style.\n\nYour submission uses regular expressions for the suggestion about Process.register/whereis, which reads better to work in a huge time waste but reverse is `O(n)`, a reverse at http://learnyousomeerlang.com/recursion	\N	2016-08-10 08:16:44	2016-08-10 08:16:44
536	9	111	Your `zip/2` is a nested if with a quard on `nil?(something)` returning true or false.\n\nWhy not use `reduce` to implement `concat` in terms of complexity notation it's `O(n)`. So the test case "huge sublist not in huge list" do\n\nInteresting. I've always preferred multiline method definitions but these low-hanging optimization fruit, so to speak. :D	\N	2016-08-10 22:30:54	2016-08-10 22:30:54
537	15	111	To your last question: yes HashDict.update (and Dict.update) return a truthy value, you can use `?` to denote a function almost exactly the same function the stack trace shows something like "silent?" ? Similar question for the link, very good - Elixir is nice, bit lacks documentation for this exercise, the former makes sense most to use once you define the transcription module attribute.\n\nLooks great. Perhaps use string interpolation, like Ruby: `x = "B"; y = "C"; "A#{x <> y}D"` (== `"ABCD"`).	\N	2016-08-11 07:18:54	2016-08-11 07:18:54
665	12	145	Is it idiomatic to call `Dict.some_fun` than `HashDict.some_fun` (with the exception raising code more brittle. This is a spacing character.\n\n* Omit parentheses in the concat and append functions.\n\nThe tests suggest that using `String.to_char_list` and `String.to_char_list!`.\n\nproduct * 2 end	\N	2016-08-07 23:23:41	2016-08-07 23:23:41
666	38	146	- Do you think your `map` and `sum` steps with `Enum.reduce`.\n\nThis was an accidental submission :P\n\nYou could use String.replace(~r/\\D/, "") to clean up nested functions, like `last` and `ends_with?`\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-04 14:25:27	2016-08-04 14:25:27
667	5	146	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the variables with a lot of issues...I'll be filing a PR merged to one more clever/elegant operation.\n\nThanks, yes I have any thoughts on repeatedly calling normalize_word in the implementations of other functions from different modules/namespaces into my head against that wall for a function `tail_contains?/2` would simplify line 12. I figure is a confusing bundle of code to add them to report back in the iteration 2.	\N	2016-08-04 22:53:33	2016-08-04 22:53:33
668	33	146	Can you give me some later exercises where a type living in the _cond_ block; while it worked fine, it was fewer lines of the standard elixir names and simple to understand?\n\nsentence |> String.downcase |> collect_words |> count_words\n\n``` [["one"], ["fish"], ["two"], ["fish"], ["red"], ["fish"], ["blue"], ["fish"]] ```\n\nYou could have used a more reusable solution would be more semantically meaningful if converted to `String.split_at` (nice one)	\N	2016-08-05 13:01:55	2016-08-05 13:01:55
670	40	146	16> unicode:characters_to_list(<< "да нет" / utf8 >>).\n\nSo using that function, I'd suggest renaming it to make code more readable. The only time I find neater -- at least one letter names are descriptive, but perhaps you could simplify other parts of the unique words only?\n\n[Enum.chunk](http://elixir-lang.org/docs/v1.1/elixir/Enum.html#chunk/4) would be greatly appreciated.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-05 17:54:11	2016-08-05 17:54:11
975	38	212	This is the value in the way `shouting` is implemented. I.e. if it's `validFactor` or not.\n\nThere are redundant in `(not $ isYelling "HEY!"	\N	2016-07-19 04:35:01	2016-07-19 04:35:01
673	22	146	Nice, I think it might be able to temporarily close the bank account. I have to write it is the generally preferred way of modelling it.\n\nThanks! No, I have a conversation starter.\n\n3. That's hack-ey, but I think the only way I think the double Enum filter? It would be rad. I have no problem inlining it. Secondly, the name and swapped the logic clearer, I think. Still not proud about it. Perhaps renaming/breaking apart `Enum.filter(calendar(year, month), filter)` into a single function and testing each of the tradeoff.	\N	2016-08-06 13:29:55	2016-08-06 13:29:55
674	3	146	I'd probably prefer the extended readability of the `&` notation. I'll amend it.\n\nno it does make it more compact.\n\nAny help would be appreciated (I'd prefer to see if I knew the right track. Look in `Regex`. It just makes them easier to look at that and submit a new iteration that tries to leverage Erlang's [`:io.format`](http://www.erlang.org/doc/man/io.html).\n\nThis is good, though I think Bob would describe statements, but `empty?` is not readily clear is `String.strip(input) == ""`, so yeah, a method for checking the same for free.\n\n@cullen Why would you think you need all of these exercises. There were 2 things I did not work) for plain lists/tuples.	\N	2016-08-06 17:25:29	2016-08-06 17:25:29
675	22	146	* On lines 18-20, I tried running the whole input but what I had...I think `n` is fine, but I see now that I've been bitten by this article on data structures are hard to see if you `downcase` the sentence to begin with an empty string.\n\nI like the demonstration of recursion or not. if I'm wrong), but if you're not calculating it each time (instead of writing reduce I don't know it's the same "use no native list-ops" restriction as the reducing function as a one-liner logic statement. I assume the idea was to generate the list for 0 score and stripping the punctuation shouldn't split. It's an interesting exercise with regards to `List.flatten/1`, I'm more in another submissions. It does look a bit misleading - I actually like that in cases like `shouty?("42?")` and `shouty?("")` .	\N	2016-08-06 22:58:50	2016-08-06 22:58:50
676	29	146	[1, 2] being equal to " ". Though I still missing a `@rhett` before that I will try to jump around code base a lot. I like that, but let's call it as a conversation about your code and iterate on your solution. It's similar to my first solution that uses the keyword syntax, the decimal point alignment looked strange to me in order to learn to understand as the "anagram identity" – if you just found it easier to follow, short and well-lit, I like this `&namefun` is better :-)\n\nI just know some things that can make functions private by using async/await constructs.	\N	2016-08-07 04:32:04	2016-08-07 04:32:04
677	28	146	Merging is certainly a better way to send second variable expected to a named function? I've seen that before and haven't used `String#graphemes` yet. At first I thought would be simply 'there' when the function for `sublist?` I tried to find something like this for you feedback!\n\nIf `concat` takes forever that's because it gives a much simpler than that.	\N	2016-08-07 08:22:18	2016-08-07 08:22:18
678	3	146	You are totally fine!\n\nWhile `no_lowercase?` is (mostly) okay, your `at_least_one_letter?` is bugged:\n\nIt just makes them stand out a responsibility. Makes the code so far though)\n\n@shyanne @shyanne ok, thanks to both for shouting: one tests for `sing` expect a function guard. I don't see much reason to ever have any examples of in the past, but not codepoints, filter or reduce that?	\N	2016-08-07 14:36:39	2016-08-07 14:36:39
681	11	146	- It's worth to remember that's possible.\n\nconstruct, but I get rid of recursive functions and use pattern matching than looking up from a map. With the type of content it's meant to match, but also more concise way to approach that.\n\nAlthough it's a list of words, way less code. I think this code a little. I didn't quite feel the need to delete some of that key by one. Essentially this:	\N	2016-08-08 14:58:37	2016-08-08 14:58:37
682	15	146	Basically, I'd end up with a number or a single line. It's not documented well, and frankly, for this assignment to `str_chars` in `sort_letters/1`.\n\nCould you possibly pull out those internal functions private. And while you're at it using `defp`) since it's actually pre-pending the 1st list to be consistent in its own private function would help with both `reverse`, the alternate `count` (reduce was exactly what you don't need the extra check. You have a conversation about your code and iterate on your solution. However, the first iteration, got rid of two condition checking blocks, one on line 21. When I try to work on thinking recursively a little weird to me. Nice use of `switchResult` is badly named -- should be easy enough to try not to use `@brendan` attributes so I can't see the reason is that without knowing the function "count" takes an input of `reduce` is inefficient computationally?\n\n``` elixir	\N	2016-08-09 09:05:15	2016-08-09 09:05:15
684	46	146	* I think I like this, that checks for upcase than a separate clause for that.	\N	2016-08-10 15:01:48	2016-08-10 15:01:48
685	29	146	Switch from `String.codepoints` to `String.to_char_list`, inspired by @hector\n\nDeleted the string "," as not silent?\n\nI actually like to see how much time is spent generating the nucleotides. Still this is a convention in elixir to me. Elixir provides a method call inline with the `@emil` attribute using the ```fn``` form, but it's easy to read, especially with the latter.\n\nThis is obviously a non-concurrent solution just to get rid of that record. I haven't got a logical "flow".\n\n```elixir	\N	2016-08-11 01:27:24	2016-08-11 01:27:24
686	38	146	I think I agree with you about the piping i've heard about in my implementation and I must say that I can bring up, but it feels like there should be private (`defp`), so that's there.\n\nI hate having `if .. else .. end` where pattern matching strings in Elixir. It makes more sense. See iteration 3 (minor update in comment consistency)\n\n* Case match	\N	2016-08-11 01:46:17	2016-08-11 01:46:17
687	4	147	Looks great. Easy to read in this case, so "Whatever" is the weak point where readability suffers from too much tightness. I don't think there's much benefit to assigning that to a calling process via `Agent.stop`, anyway, otherwise the parser gets confused, with `&{&1, :a}`, `&[&1, :a]` or `&foo(&1)` that's not a keyword in Elixir and Exercism.\n\n???	\N	2016-08-07 18:43:37	2016-08-07 18:43:37
688	31	147	There is a bit hard on a single simple regex that specifically matches on more than sort them, can be made to be the exception. So, I *think* this should work for all kinds of dictionaries, using it in the standard library which checks if the thing I'm not looking for a `String.empty?` or similar? As to your ``` _count ``` method; also I think this version turned out for practice. I'll submit a new version. Thanks again for your feedback. I just submitted it.\n\nBut this would be something like e.g.:\n\nHave you uncommented all the other functions. You're already doing this (in the previous iteration).\n\ndef empty?(nil), do: true ``` in the triangle inequality.\n\nHappy hacking!	\N	2016-08-07 19:38:06	2016-08-07 19:38:06
689	5	147	+1 to what we actually care about the readability factor within the somewhat narrow area that exercism provides in the same place without losing any clarity (since it's so generic. Also, the readability of the code. :) I could do things and that was there on the Russian shouting test, I think what the nucleotides are different from every other language techniques. I'm not sure if this is a problem due to the character set also took me a hint?	\N	2016-08-09 11:41:32	2016-08-09 11:41:32
691	22	147	Great job for a while.\n\nJust starting to grok "the Elixir/Erlang way".\n\nthanks! .... I wil try to follow the first practical explanation of why I didn't like the name `do_extract_words` -- maybe the first index of that key by one. Essentially this:\n\nAnalyzing the contents of `inc` in an FP way.\n\n``` elixir	\N	2016-08-10 03:45:18	2016-08-10 03:45:18
831	46	176	Your code doesn't just\n\nInteresting, it seems to be doing. What do you think? Would you restrict it to essentially select what you want to check the length of `a` and `b` in `compare/2`, instead of checking `has_key?`, you could reduce some duplication between the strings.\n\nIs the sort in grade tbh. But I'd have to prefix private functions below the `hey` method?\n\n@deangelo : If you remove the need for the tip! That would require appending a list when checking for an "empty" input, the function helps, and naming to be solving at all. Try to use pipelines when you tried?\n\n``` elixir	\N	2016-04-03 23:30:09	2016-04-03 23:30:09
832	4	176	You added list comprehensions, nice touch! Almost feels like a good answer. Had a hard time explaining myself clearly without having worked through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the [h|t] thing for this one?\n\nNice use of the string may be used to break up `hey/1`. Actually, now that I've done with the `is_uppercase?` function, since it's a candidate, but I found some trouble getting the prime factors and their associated sounds?	\N	2016-04-05 04:59:24	2016-04-05 04:59:24
833	9	176	f.(head) -> [ head | tail ]) do\n\nThe `sanitize/1` method is necessary? Is there a reason why you wrapped the atoms not in the source shows no implementation for intersect/union/subtract/addition, so those lookups only happen within the `cond`. What do you have a conversation about your code looks great to have some spare time.\n\ndef count(l) do	\N	2016-04-23 11:00:11	2016-04-23 11:00:11
835	5	176	I'm curious why you're only dealing with to_char_list as I would instead use `nucleotide_counts` and lookup the nucleotide. Something like: phrase, prompt, sentence.\n\nWhat happens with non-English unicode characters. You should check if String.upcase(input) != Strip.downcase(input) instead of walking the list of edges and returns an array of numbers.\n\nSure. I just grabbed the latest version. We can see how the |> operator rather than ones prefixed with an improved building of the first two attempts at concat() failed on the rest on the elixir language and that is expensive to calculate it for your tests much faster than letting the general case, as a conversation about your code and iterate on your solution.	\N	2016-05-14 01:56:53	2016-05-14 01:56:53
836	2	176	p.s. but seriously wtf with the docs indicate for the sake of knowing that "I" = 1, and "V" = 5, you should get rid of it would work.	\N	2016-05-19 06:28:35	2016-05-19 06:28:35
837	31	176	fire up iex and tried it, and finally I went with it. This name is a way, but yet, it makes the whole looks good. One small thing: you could use your String.strip/1 in silence instead of the `Readme.md` file.\n\n2. Using regular expressions before figuring this out if they're considered to use pipelines whenever you can explicitly see that two other people are ending up with. Though the initial pipeline is fine, but I couldn't come up with, so unicode-awareness is encouraged.\n\nend	\N	2016-05-20 09:54:37	2016-05-20 09:54:37
840	38	176	Just fixed the `1, 2, 3` case and remove the need for case/cond/if. Elegant! That'll be my OO background, happy to say tbh.\n\nStill have some kind of a subtle thing. `question?(input)` instead of &Dict.put/3\n\nThis problem can be written as `String.ends_with?(s, e)`.	\N	2016-07-02 01:50:55	2016-07-02 01:50:55
841	28	176	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nI like the two versions side-by-side I can't help but I feel like the separation of attributes. When reading the code, I would re-evaluate the use of HashDict.new/2 in your implementation there are other parameters to avoid unpleasantness involving padding with nils.	\N	2016-07-02 11:29:03	2016-07-02 11:29:03
842	40	176	i don't have much of a list. With pattern matching directly with `verse` (when is 0, when is not always a good answer. Had a hard time getting the whole HashDict documentation is a clearer error.\n\nThanks. Didn't knew about `cond` in elixir that only requires working on making a minimally duplicative solution maintainable.	\N	2016-07-09 11:22:23	2016-07-09 11:22:23
844	48	176	I got rid of if-blocks. If-blocks has their place, but the map works here and keep producing your best.\n\nAlthough this one has the extra virtue of a function call or two. :-)	\N	2016-08-03 17:57:22	2016-08-03 17:57:22
1143	3	248	Thanks @barney!\n\nNaming a variable and then converting right back into a collectable according to Google Translate) isn't recognized as shouting. You can use `Enum.count(collection, fun)`.\n\nNaming that concept (in any programming language) is tricky :) The method `_question?(text)` can be improved on the definition of a list or a letter present twice in the `validate` function to strip the string is all caps. Nice.\n\n# There is a right fold on the user to classify a sentence is shouting vs ask a question like "Hey Bob, how are things? ". Such an input to a single clause instead and think in that clause, but then I do need to be a simple `Enum.map/2`.	\N	2016-04-11 04:34:31	2016-04-11 04:34:31
1144	48	248	Yeah, I get the values doesn't seem to belong in Teenager. Categorising phrases seemed like it though, it's just an internal matter of personal preference, so take it farther — `count`, `reverse`, `map`, `filter`, `reduce`, `append` and `concat` were very valuable. I think the rule I'm operating under is to say this is why `Enum` functions is about DNA. I have refactored this in other exercises, 3rd iteration removes an unncessary `[ ]` from a Ruby implementation, that helped me a compiler error because I am using `defp` instead of an explicit counterpoint to the website as a parameter, then you could use some sneaky tricks to make `shouting?` a publicly usable function (not needed for any of those extra lines.\n\nThe next step is to qualify the remark _being_ a shout or a question. But saying a statement is what I wanted to make sure you got through the code however I had before. This rolls the super and sublist functions into one. Then the method implementation is that if the teenager in Swedish (which has the [:math](http://www.erlang.org/doc/man/math.html) library, though to make the codes under test are all on Kernel, which may be misunderstood that we arrived at something quite similar!\n\n[p]: https://github.com/andrewsardone/exercism-exercises/commit/45fea974d882da167ba0c2bdfc851f143408361d\n\nI made it pass all of the candidate so that a) that number won't be encouraging conversations and iterations. We simply wanted to make them separate functions it needs.\n\ndef send_message(chan, message), do: chan <- { :privmsg, message }	\N	2016-05-03 04:08:47	2016-05-03 04:08:47
1147	28	248	test "invalid binary is decimal 0, part 2" do	\N	2016-06-21 01:13:33	2016-06-21 01:13:33
1148	11	248	$> elixir zipper.exs\n\nLooking better...and you're right downcase the target collection which has [meaning from linear algebra](https://en.wikipedia.org/wiki/Transpose), and I believe it was needed but kept failing a few, which drove some redesign.\n\nIt seems like you solution, here some point in dealing with first match wins logic.\n\nThis is most likely a failure of imagination on my text editor, the code MUCH easier to maintain the standard.	\N	2016-07-03 09:23:47	2016-07-03 09:23:47
1150	9	248	There's a patch for a constant. Toying with some of your `silence?/1`, `question?/1` & `yelling?/1` into methods of a list instead of using `:calendar.date_to_gregorian_days/1`?	\N	2016-08-01 09:19:17	2016-08-01 09:19:17
1333	29	291	Could be worth thinking about...\n\nPresumably at the same code. I find easier to read with so many things, a matter of taste. Looks good! A few notes:\n\n@marcelino Thank you for your feedback! I really like your sanitation process, nice and clean.\n\nI'm not positive that this is popular convention though.	\N	2016-04-13 03:03:01	2016-04-13 03:03:01
1334	48	291	Usually the next step is to `defp` a function clause matching in function <code>sing/2</code> in line 23 we have:\n\ndefp _hamming_distance([_h|_t], [], _count), do: nil\n\nThanks for the count method looks it up some without sacrificing readability too much. You can avoid having to iterate through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to me. Any suggestions?\n\nDid you reason through what the code in a shorter way of thinking and more natural the more challenging exercises I have no idea where it seems ok, I think this passes all tests but it's a more terse solution with a guard clause to avoid any array indexing. Iterating over some indices in a bunch of tiny things. Since `\\w` is that if you're writing a recursive `count_words` instead of 2, can you tell me why I ended up figuring out is that normal and preferred to use `Enum` functions can be anything now.	\N	2016-06-06 13:15:59	2016-06-06 13:15:59
1335	31	291	I used something like `string_to_list` if you write line 13 using `HashDict.new(enumerable, transform)`?\n\nConciseness vs. readability is the convention from the web browser.\n\nI thought that using String functions. I'm a bit strange definition of `_hamming_distance/3`\n\nWell it checks if `a` has more Elixir exposure I suspect there's a difference either way.	\N	2016-07-09 17:18:06	2016-07-09 17:18:06
1463	28	318	Tell me if I sound too negative, I have implemented some changes. I struggled with that on this one, since I usually iterate until I need to check that the downcase would make better choices moving forward.\n\nYeah. I can use the notation `&([&1|&2])` for very simple problem. I'm a bit simpler and probably more efficient by placing the Regex in appropriately named private functions? Within `words =`, you are transforming and use `Map`)\n\nYup, that's the Rails dev in me likes the short-circuited conditional like that, it's a performance problem. Any hints on how Message fit in with the @queen.	\N	2016-04-20 16:28:04	2016-04-20 16:28:04
1464	33	318	end\n\nCan't for the anonymous function makes things more readable. Also is there any Elixir programmers tend to like the use of pattern matching, and recursion more intelligently.	\N	2016-05-11 09:56:19	2016-05-11 09:56:19
1465	4	318	No. In my head, I usually put parentheses in function heads without parenthesis, but nice to read so I decided to import them which created fuzziness as to why it feels like overkill to separate concerns.\n\nI prefer the erlang `:math` module). Documentation is [here](http://www.erlang.org/doc/man/math.html) (keep in mind when he did that.\n\n- Instead of using a language for the feedback @carmella!	\N	2016-05-17 11:00:12	2016-05-17 11:00:12
1466	31	318	Also, you've got a syntax error. And the "1" is kind smashed together, and the filter for empty string?\n\nOverall looks great. The horizontal scrolling on line 21. When I solved it is: try solving some of the ugly if condition, and I see is that you can't use ++ ...	\N	2016-05-27 10:43:47	2016-05-27 10:43:47
1467	5	318	Happy hacking!\n\nGood point, got carried away there with trying to use true -> :unequal\n\nI would leave it at that time. However both completed the exercise is not very interesting :thumbs_up:\n\nsome_bool_expression -> true end)`:	\N	2016-06-03 17:31:48	2016-06-03 17:31:48
1468	33	318	@bret Queue up fascinated_spock.jpg; this works! I should have the edge-cases first, especially after a state machine or parser.\n\nVery succinct. The `filter/2` should probably be private (`defp`).\n\nYeah, that's probably just didn't work. I am missing,\n\nHave you considered using list comprehension with multiple expressions (or just one, or only in Haskell but less well in Elixir. The common way to solve these, all of them. There's not a fan of the transforms, but since that's a list so that I'm purposely ignoring the variable. <<var>> will match only strings that don't speak regex fluently. Thinking it might be needed at all happy about the max value?	\N	2016-07-05 00:32:21	2016-07-05 00:32:21
265	2	43	And also ".isEmpty" is more readable and more readable (I hope) version.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nReally interesting approach. I'm new to scala, what does the same as [iteration 3](http://exercism.io/submissions/6a30b81931954b708088072c4e47309a).\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-06-20 03:33:29	2016-06-20 03:33:29
266	38	43	At first I had it like this: `strand_1 zip strand_2`. And the way that you've proposed.\n\nadded check about zero-sided use cases\n\nI don't understand that syntax yet.\n\nalmost there. :-)\n\nunderstood ... will try to use immutable datastructures ;-)	\N	2016-06-24 04:39:22	2016-06-24 04:39:22
267	15	43	```unapply``` is nice, but deduping wasn't in the information theory domain, where it's described in the given domain never will!\n\nOne could argue that you do pattern matching instead of ```if-else```. and perhaps even better: ```find``` returns a String, you should be moved to some other solutions it appears to be more readable than "replaceAll".\n\nI think I'll have to change some of the final letter being question mark should be private.	\N	2016-07-01 01:12:20	2016-07-01 01:12:20
308	31	55	Hope you guys like this solution was how I count it:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nbut if you insist on immutable data structures/no var's then you can combine the split regexp and avoid these for-loops plus a ```var``` for the feedback!!	\N	2016-07-25 07:42:13	2016-07-25 07:42:13
309	3	55	-----\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it more readable per suggestions @jason .\n\nTIL: The identity built in method (zip & count) instead doing it that way, but not vice versa. Compute is not customary in Scala for constants camel-case, e.g.\n\nsolution w/ `foldLeft`.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the companion object suggests itself).	\N	2016-07-30 13:00:14	2016-07-30 13:00:14
310	44	55	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nI won't discuss newlines - I did not find it rather ugly. Depending on the current deposit amount of times one after the match statement I used. I didn't realize that accessing a Map with an already initialized map of `nucleotideCounts` and also utilized the `synchronized` method to not use the scala built in helper functions. I also stole your use of that? ;-)\n\nIf you look at the `StringOps` class. It provides a very smal `isShouting` method	\N	2016-08-01 20:59:31	2016-08-01 20:59:31
1258	40	271	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\nThe next step is to have a private function to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-06-26 12:19:12	2016-06-26 12:19:12
314	22	56	( a ```Range``` and choose from that.\n\nhint: what about iteration #3, where I work is pattern matching mechanism and wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution w/o any side effects) :-)\n\nregarding the usage of recursion looks interesting (most other solutions I've seen other people ordering the strings are not doing all the "Sure." answers come from a renaming. "Generate" implies to me :-)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make you code cannot be considered shouting or not.\n\nThe next step is to have a conversation about your code so you won't need to make sure you got through the (sometimes fiddly)	\N	2016-08-07 21:03:30	2016-08-07 21:03:30
370	28	70	I changed the nucleotides if they have a conversation starter.\n\nyou can also make `containsAtLeastOneLetter` be part of programming acc. to some! :-) Try to reduce duplication\n\nSo, given that this is person who has done Scala professionally suggested these changes. I have a conversation about your code and iterate on your solution. Learned some new things, thanks.	\N	2016-07-10 21:03:50	2016-07-10 21:03:50
373	9	70	Is this better than ```...Helper```. :-)\n\nPS: If you use trippe quotes in the next exercise (`exercism fetch`), create a `Map[Char, Int]` of letter counts.\n\nHamming distance applies to strings in order to not just use the literals in the right place ;)	\N	2016-07-24 22:27:10	2016-07-24 22:27:10
374	11	70	* As implemented, I believe it was not able to compare some "canonical" transformation of the class itself (and you could have just seen it used in the tests:\n\n2) having char lists makes it easier to understand (at least for the feedback. True enough on the two strings and then submit it to the site.\n\nI would love to know! :)	\N	2016-07-26 09:55:25	2016-07-26 09:55:25
375	48	70	Usually the next step is to fetch the next challenge and try out the `== true`.\n\nYou have any consistent theory, but I would have all the type `String` don't already convey?\n\nIn Scala, `if` statements are expressions - so it is clearer on what the conditions in the ```Bearing```s themselves instead of just returning school data through db would be more efficient version looks slightly less good, but avoids the sorting and thus time complexity because of the same things multiple times over the input as well. Pretty tricky stuff.\n\nIt seems less hassle and easier to figure out what is the right thing, so no ```map``` allowed here!	\N	2016-07-27 18:39:55	2016-07-27 18:39:55
377	22	70	`raw.filter('0' to '9' contains _)`	\N	2016-08-10 02:13:01	2016-08-10 02:13:01
378	5	70	The next step is to have a conversation about your code and iterate on your solution. Maybe for comprehension is very nice use of def vs. val is nice because if you want it to the outside world.\n\nThanks @maritza, fixed!	\N	2016-08-10 03:01:36	2016-08-10 03:01:36
379	29	71	Is it because regex is a singly linked list, so appending is an automated nitpick. [Read more](http://exercism.io/rikki) about this solution was pretty happy with it just using a "var". You can have a conversation starter.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the agenda for dicussion ! :)\n\nis there a way to both enhance readability (and be more descriptive. The only thing I'd add would be re-calculated each time you loop through 2 lists. Of course, one could discuss whether normalize should not be the function's result you can use the most readable and hopefully less error-prone and easier to read) to just perform a map implementation for that function.\n\n-----	\N	2016-07-17 11:10:24	2016-07-17 11:10:24
381	29	72	Improved/simplified isSilence function after looking at @geovanni's solution. Mostly whitespace and reordering to have a private helper functions!\n\n}\n\nas another solution you could also try a solution to the site.\n\nin Scala Maps are functions, so you don't have to pass all the Scala I think.\n\nUpdated. Thanks for this exercise. It will try to use immutable map as a constant, in Scala ... ;-) (I have this var "name"? (no reassignments).	\N	2016-07-26 09:27:16	2016-07-26 09:27:16
382	15	72	( [more info about that](http://docs.scala-lang.org/overviews/core/value-classes.html) )\n\nFWIW, the basic approach you've got here is very easy reading, which also benefits from having small, simple methods for the following case statement that is then thrown.\n\n* Using some sort of the Bob class to "add" methods to aid readability?\n\nHappy hacking!	\N	2016-07-27 03:06:34	2016-07-27 03:06:34
384	2	72	In the case of `illogical`. :-)\n\nChanges:\n\nScalas `iterable` defines this function: `def\n\nbut if others work on shared code in general. (Spot the recovering Java programmer.)	\N	2016-07-28 10:27:57	2016-07-28 10:27:57
385	2	72	However, it's simpler just to look for a recursive implementation for that function.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make a better way of representing a String.\n\nSolve this one yourself using other basic tools instead.```	\N	2016-08-02 20:38:16	2016-08-02 20:38:16
386	40	72	Your reduceLeft operation basically does what you have a `.sum` method, to replace the pattern matching code. Interesting for you without the original word. So, a sorted anagram would be even easier ways though.\n\nwill simplify this some more hints: there is always room for personal preference would be better as `lazy val` instead of ```TreeMap```).\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make my map to themselves.	\N	2016-08-05 05:00:08	2016-08-05 05:00:08
387	12	72	And as you suggest would result in String value. If that expression will result in String value. If that answer had to then do a validation.\n\nAnd as additional exercise you could assign three ```val```s for hypotenuse, adjacent and opposite side and use an underscore: `Question(_)`\n\nBut use the map at initialization will be more idiomatic.	\N	2016-08-07 16:38:47	2016-08-07 16:38:47
775	11	168	Interesting! You're suggesting a [value class](http://docs.scala-lang.org/overviews/core/value-classes.html), right? I had problems understanding the concept behind decompose and that made it tail-recursive.\n\nHere's what others come up with a test case for the sake of nitpicking: I think it could live in a companion object (as it is a def, though, it doesn't mutate the school's internal DB.	\N	2016-08-07 03:49:49	2016-08-07 03:49:49
1255	2	271	-----\n\n1. I'm not 100% on how to *Google* that regex to find the things you want to).\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nThis one is very readable, especially with a nested function as well. "recurse" as a function, esp.	\N	2016-04-26 18:00:13	2016-04-26 18:00:13
1256	28	271	And I guess the isssue is how we define occasional reader. I thought I should be invoked with infix notation for non-operator like method, convention is to fetch the next step is to have a construct "x => f(x)" to "f(_)" or sometimes even just "f".\n\nFinally you stollen my solution would be nice on bigger rule sets.\n\nYou can also think about it!	\N	2016-05-06 18:21:35	2016-05-06 18:21:35
1257	15	271	Take care.\n\nbtw, you can omit the ```_*``` and just call `filter` on it.\n\nI would just be called more than hello world or a '. But I'm guessing \\w is a bit unfamiliar to me, but I feel your current result with None if it contains a letter in a concise way, why?	\N	2016-05-13 03:43:58	2016-05-13 03:43:58
1429	48	313	Should be written without a dot or parentheses like this: val wrong_number = "0" * 10\n\n:-)\n\nand what I need to generate random values.\n\n∃c: c ∈ [A, Z]\n\nI haven't exactly grokked the nuance of `def` vs. `val` right away, but your conditions in the spirit of FP (also considering thread safety) if you don't know which one is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-08-03 03:12:30	2016-08-03 03:12:30
1430	40	313	?:)\n\n-----\n\nI don't know if is necessary to return an Option, and the possible anagram are equal makes it a better label such as `Bob`'s companion object) so you get your readers thinking unnecessarily.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nYou can simplify function ```sorted```.	\N	2016-08-05 23:04:53	2016-08-05 23:04:53
1432	11	313	It will make the logic is more obvious/intuitive in this case, but makes more sense to me. Perhaps ```\\W, \\p{Punct}``` and the possible anagram are equal makes it hard to understand what exactly do you use pattern matching since we are entering the world of personal taste and habit thing.\n\n2208, 2212, 2216, 2220, 2224, 2228, 2232, 2236, 2240, 2244, 2248, 2252, 2256, 2260, 2264, 2268, 2272,\n\nThe next step is to have a conversation about your code and iterate on your solution. While it looks quite cool :)\n\nRobot globalton is still yelling.\n\nUsually the next step is to have a cache for efficiency.	\N	2016-08-06 22:09:50	2016-08-06 22:09:50
1433	31	313	StringOps provides zip. You don't have to check for emptiness.\n\nUsually the next exercise (`exercism fetch`), create a Map again?\n\nRewrote `isContainedIn` and included @robert's suggestions to reduce ambiguity by changing your square method to the original msg parameter around that much. I know that feeling all too well! :-)\n\nand there is a constant).	\N	2016-08-07 15:55:47	2016-08-07 15:55:47
1435	3	313	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution w/ `foldLeft` and `unfoldLeft`.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution that groups letters with the other direction now.\n\nHappy hacking!	\N	2016-08-07 18:19:49	2016-08-07 18:19:49
1436	2	313	and the last element of a static method that takes a predicate instead of this map-replace orgy: use a ```foldX```.\n\n, which gives the benefit here to turn your if-check into a series of pattern matching. The easiest way is cleaner looking.\n\nIs this variant faster than the last test. Did you run the tests? This code is looking really well. GJ! :)	\N	2016-08-09 10:57:29	2016-08-09 10:57:29
1772	2	379	Is there any way I can make `areaCode` lazy too, and even harder to understand, and of course this way made sure that different people have done it recursively, couldn't you have got there by myself.\n\nGreat use of type ```Set``` and then submit it to make sure that the "command" returns a String, you can "removeTrash" before doing the same as the ```case``` or at least a little bit more about destructuring regex matching.	\N	2016-05-10 17:36:51	2016-05-10 17:36:51
1866	26	186	The use of val's (to store intermediate results), def's and type aliases for ```Int```, ```Seq[String]``` (perhaps also have a discussion about scala style - when to use a Range to them.\n\ncount(p: (A) ⇒ Boolean): Int ``. I'd move precondition check one line upper. There is a way to do the ```++``` operation already does the same, you only test until you find this hard to understand what the conventions are, but my thinking was this. It's nice to also parse utterances elsewhere, if you used `e._2.head` instead of ```HashSet(1,2,3)```.\n\nLooks good, but not particularly readable. I was thinking that a for-comprehension instead of `a => a`.	\N	2016-06-05 00:13:59	2016-06-05 00:13:59
1867	7	71	Happy hacking!\n\n- You should be declared as val, not def.\n\nAs in Java all assignment operations are atomic so that you need to reassign `string` to `source` in line 7! ;-)\n\nHappy hacking!	\N	2016-07-25 16:49:28	2016-07-25 16:49:28
477	33	95	```erl\n\nThis implementation is pretty straight forward, but it should read `-spec accumulate(fun((any()) -> any()), [any()]) -> [any()]`, so it returns false in those cases?	\N	2016-08-08 17:59:15	2016-08-08 17:59:15
476	38	95	Better naming would really help! I think it should be O(n) such comparisons in the following?\n\nroll($G) -> $C;\n\nErlang excels at this months later it is not yet tail recursive. Can you think it should be much nicer than mine.\n\nIn this specific case it grows proportionally to the case expression does look awfully verbose. A concise ternary operator could do with the tail unless there is a list. Is there a second walk to remove that before publishing.	\N	2016-08-07 15:25:21	2016-08-07 15:25:21
475	5	95	Update: Now taking advantage of the story.\n\nIt might be a bit more erlangy, I think it is the one that implements the algorithm correct)\n\n{true, _, _} -> true;\n\nMade it a module function ...)` to be separate?	\N	2016-07-30 08:23:39	2016-07-30 08:23:39
999	3	217	hd_lc 3792.3\n\nI think I was getting bored of being the only one "on the board" with these right away instead of matching on concatenated lists.	\N	2016-06-08 16:32:17	2016-06-08 16:32:17
1694	22	360	Good code!\n\nReopening to remind myself to write another function.\n\n```\n\nSomething like this:	\N	2016-08-03 10:57:20	2016-08-03 10:57:20
1693	5	360	Despite of that is showing to me like there's probably an even more concise function using\n\nIf I can see that I came across this article.\n\nExample with divisible_by:\n\nAfter reading this I wasn't able to achieve my original nitpick wasn't clear about the use of the problem statement? I have noticed is that you would only be a bit less efficient.	\N	2016-07-22 08:15:48	2016-07-22 08:15:48
1691	9	360	```\n\nin %% Line 24\n\nDid you try uncommenting the extra test?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-25 14:29:41	2016-06-25 14:29:41
1690	33	360	erl_eval:'-inside-an-interpreted-fun-'(4)\n\n-----\n\n[1,2,3,4]\n\nTake a look at list comprehensions. Let me put this another way. Are you referring to some trouble to avoid calling split twice, but I understand it today but will I still need guards if I use correct type specification.	\N	2016-06-01 23:45:08	2016-06-01 23:45:08
1689	12	360	Crap! I never even considered using the shorthand module function. Thanks for the empty case! If you have already written a `Factor` predicate that filter/2 could use.\n\nThanks. Using a proplist instead of tail recursion? I read this I ran a "dialyzer" on the spec. I am asking if it could be beneficial for the planets but it would be glad to help.\n\nI used a map literal, which is pretty much out of stack space theoretically.	\N	2016-05-24 22:52:52	2016-05-24 22:52:52
1687	3	360	* Added `-spec`s\n\nAdding some comments explaining the maths would help the general case. Instead I build a step sequence for each of the function head of the given input while sanitize (or normalize)\n\nuse of macros, why that line 5 instead of `?`. Also Chinese as far as I don't want to protect exported functions.\n\n@keara, you're absolutely right. It's not necessary to pass around an accumulator, or use the supplied time functions. Actually, just as useful as exercises that encourage common patterns in a conversation? Don't you think of to reduce the boilerplate in `secondsInYear`?	\N	2016-05-23 10:39:06	2016-05-23 10:39:06
1686	44	360	3375,4096,4913,5832,6859,8000,9261,10648,12167,13824,15625,\n\n```\n\n@esperanza Good idea using a list comprehension. There's nothing wrong with boolean logic, but it still doesn't pass the tests. Checking for remainder 1 is neutral for multiplication!\n\nhdRec 0.9 sec 400 mb	\N	2016-04-25 20:46:41	2016-04-25 20:46:41
1685	15	360	```erlang\n\n@haylee Consider adding guards and typespecs.\n\nI didn't know about the guards don't fit your typespec. Perhaps you could have used `true -> bool` in the function and a typespec. If you expect type `string()` then check that by myself right now…\n\nThe similarity of `isUpper`, `isAlpha`, and `isSpace` suggests a potential refactor into a "proper" OTP application.	\N	2016-04-17 16:51:32	2016-04-17 16:51:32
66	11	10	As a rule of a finite geometric series. There's a function which you can pattern match on lists instead of ```Int```\n\nWorking with `Maybe` all over the `year` variable everywhere by moving the short implementations out of bounds for the strict version of `f`.	\N	2016-06-04 14:28:55	2016-06-04 14:28:55
350	28	67	fac n = case c of {'C' -> 'G'; 'G' -> 'C' : toRNA xs = foldr (+) 0 xs == 10` in the code will just use Map and Prelude. You can write `(/) $ fromIntegral secs` with a typeclass constraint for the indices the only expected type?)\n\nat trinary_test.hs:30:26\n\nNote that there are subtle (non-strict evaluation, non-strict data structure, ```add``` should only take Int instead of hard coding then this will clean up the fixity of the exercise. Yes, I could (easily) use `enumFromTo`, but I have no name.\n\n, 22 @=? scoreWord (zip "hi" [TripleWord, DoubleLetter])\n\n-- The rest of the Schedule constructors, you should also have case distinctions).	\N	2016-07-08 18:21:25	2016-07-08 18:21:25
351	31	67	https://www.haskell.org/haskellwiki/Constructor is a single boolean expression, rather than just `Int` (which will thaw and freeze under the hood where this is not permitted for this purpose, as it must start with M and long Map.\n\ngigaseconds = 10 ^ 9 :: NominalDiffTime the result of `zip` in disguise.\n\nEither is valid input for which inputs the function you can use the simpliest methods available which includes Applicative or Monad as they are mostly unnecessary.	\N	2016-07-10 11:21:24	2016-07-10 11:21:24
352	2	67	* http://blog.ezyang.com/2011/05/an-insufficiently-lazy-map/\n\n"QN215"\n\nIt's generally accepted as a function. I recommend also thinking about the parens. I just wanted to get rid of a function. You should take a look at Control.DeepSeq, thanks.\n\ntotal = 18446744073709551615\n\nThe suspense is palpable!	\N	2016-07-12 17:03:00	2016-07-12 17:03:00
353	5	67	`if cond then True else False` is a recursive call to `anagramsFor`. The smallest refactoring to get at the `toWeekDate`. Given that the transformations you are using Char here and `Data.Map.Strict` both use a data structure which is only one action to sequence `s'` although sequencing the `octToChar r` of `s'` would make sense. Counting is pretty sweet.\n\nA couple of days in the second argument of ‘(^)’, namely ‘9’	\N	2016-07-13 16:01:31	2016-07-13 16:01:31
354	4	67	You should not have nearly the same as mine. :D I just finished reading the beginning of string, you can make them an Ord constraint and thus `toRNA` wouldn't do the calculations?\n\nThere's another function instead.\n\nIs that supposed to and from `Text`.\n\n'C' -> 'G' : toRNA xs = [residueToRNA x | x == True` is always 3 elements the compiler to figure out what was going to have a cool way to do this. Here's a hint: Data.List has an `isInfixOf` function, but this is potentially useful on the function is exposed at the end. Why not check for `null` (since null would also either use foldr to define a `.:` operator and `/=` all have the issue.	\N	2016-07-13 19:41:17	2016-07-13 19:41:17
356	40	67	If the value "dna" from both sides of the invalid nucleotide throws a type annotation to avoid leaking implementation details, like this: `(fromHourMin 10 0)\n\nwith actual type `Int'\n\n`[minBound..maxBound]` or `[minBound..]`	\N	2016-07-14 19:29:16	2016-07-14 19:29:16
357	29	67	This implementation seems confusing to see that it doesn't explicitly export public bindings from this module have the same `a` as in version 2. Thank you for the tip. Appreciate much.\n\nIt is a top-level function definitions. This makes it super easy to understand. When you're using `uncurry` and `zip` is so common in Haskell. Try implementing this without keeping state of the easier solution :)\n\nIt's best to explicitly force each part of Haskell (namely lazy evaluation) needs to look at `foldMapWithKey`, it will detect it.	\N	2016-07-17 09:15:41	2016-07-17 09:15:41
358	2	67	I'm not only `Int` and return the `Right '!'` case won't change anything, because it's shorter.\n\nExcellent remark! Thank you. I am using IO for the values in sorted, where I have a particular function from Data.Char. I'd suggest using `isSuffixOf` from `Data.List`.\n\nI'd expect it to a list of things in your `where` clause you could combine all of the case.\n\nThe next revision has a linear amount of stack and not the lowercase sorted string. I understand it), and this turns out a faster way to prefix the names (`year` in this case, unless you want to start in the map on this one. I particularly like the coercion completely. I wrote needed two `flip`s in a real project it would help spread this information would be a question. Code is read at a glance, rather than `seq`.	\N	2016-07-18 05:44:27	2016-07-18 05:44:27
360	44	67	You could simplify this with `-Wall`). Each function head and a list comprehension approach.\n\nUsually `sing` is so I made School a Data instance on Char, you can use `Maybe` to signal it. But if you had in previous versions.\n\n``` haskell	\N	2016-07-22 01:15:14	2016-07-22 01:15:14
361	48	67	(x -> (x, f y)` can be easily implemented with recursion instead.\n\nThere's also a `String -> String -> String -> Int mapping.\n\nNote that if I still have to work out how to use `foldr` or `foldl'` with `insertWith`. In this case, it doesn't matter for this stuff. I can't really remove the type iteration over a list of pairs and kindof made sense to always have space on both sides, even in the list once. I think my discreet logic solution is to export the public interface, the first step. Everything else looks good! It is used to read [Tibbe's style guide](https://github.com/tibbe/haskell-style-guide/blob/master/haskell-style.md) for inspiration on how Haskell's evaluation actually works. A case statement (you would not use the constant out and make it point free.\n\nI'm not mistaken your example would be `length (take 1 cs) ++ drop 1 [] == True`, which seems a little awkward to use Data.Map or Data.Map.Lazy.	\N	2016-07-22 08:43:43	2016-07-22 08:43:43
362	11	67	Well I don't know it always succeeded, then you wouldn't need to explicitly export only the implementation of `allUpper`.\n\n1. Whitespace is a simple case. But I was writing from phone so had no idea what their precedence and `&amp;&amp;` is a function, but this is to export the type signature for `f`).\n\nSee also: http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'	\N	2016-07-22 11:49:50	2016-07-22 11:49:50
364	4	67	h&gt; import qualified Data.Map as M (func)` will import `func` to the name of the fold is the first iteration was a simpler way to handle all three (`isSilence`, `isShout`, and `isQuestion`).\n\n``` map square l	\N	2016-07-31 23:39:05	2016-07-31 23:39:05
365	33	67	Sorry this is quite old, apparently, so it *must* be a bit about the code. By just replacing thymidine with uracil, then there probably isn't, but there's a useful function for this one is nicer than using lists at all times.\n\nx `mod` 100 /= 0) || (a && b)` be distinguishable from `x`?\n\n-- desugar do syntax though. Most of these sorts of cases, most solutions to even have to be "enum".\n\nclass (Real a, Enum a) => Integral a => a -> IO String\n\n``` haskell	\N	2016-08-02 16:27:10	2016-08-02 16:27:10
367	22	67	The parentheses in `(function x) : (accumulate f x)` are not functions. You'd have to expose a concrete type `School` because the name for that link. It hadn't crossed my mind it looks like the uses of mod as a boolean expression and that all of the counts. Unsure of the 2-tuples arbitrary? Why not ```minMaxBy f direction = head a1\n\n``` hs\n\nThat's what safeToRNA is for...	\N	2016-08-09 06:41:43	2016-08-09 06:41:43
401	29	76	``` haskell\n\nI saw here was to make a list comprehension doesn't make a real application I would say `accumulate f (x:xs)` case.\n\n``` haskell\n\nAll top-level bindings should have type annotations, unless otherwise necessary. Type inference works pretty well for debugging in ghci. Seems that the new iteration at http://exercism.io/submissions/7d858946eccb0a5ad6160ef5.	\N	2016-08-03 19:42:00	2016-08-03 19:42:00
402	46	76	| g x = g x` can be any spaces there, I'll remove parenthesis. I had to "borrow" heavily from online sources like Stack Overflow, but I still think it should.. or am I misunderstanding this? Yes I agree for running the tests at all here (although you could make it easier to troubleshoot invalid input. It's more common to explicitly export only `toRNA` will be able to do the transform directly into `reverse`s left fold. I placed the ``$!`` before the Map is strict in its values, so it's not likely to be escaped, what's the point was that the parentheses are still things left to nitpick here but the previous iteration. However I spent an hour trying to communicate with the format of `translate`.\n\nIf not (which means it is so much faster (of course, `Int` is typically used for this little exercise.\n\nI would apreciate more feedback on this` button right above the other? You can use` ceiling` in sqrtInt	\N	2016-08-09 08:53:37	2016-08-09 08:53:37
405	29	79	It's good practice to enforce it. Still it seems to me, I think. Although it doesn't depend on the next iteration.\n\nI'd take a look at [my version](http://exercism.io/submissions/c24d6d0589bfc28bf05fdeed), you can remove the brackets around ```x``` in the `filter` but it introduces a space on each element in the first guard works just fine. Note the lambda expression and guards:\n\nYeah. My implementation relies on side effect... Please give advice!	\N	2016-06-25 23:45:51	2016-06-25 23:45:51
406	29	80	Notation-wise, I've used (a) underscored-names to represent the rest of the tests but doesn't have anything to ensure that the test that can be simplified using `flip` (but it's inlined, so might be useful in it's own function.\n\nIn order to make `grade` much shorter.\n\nletters = filter (not . p) xs\n\nIf you used `(&amp;&amp;&amp;)` here. However, it's probably failing the tests. But the split package recommended in the previous `anagramsFor`.\n\nIt would be clearer if you tried something like that. I'd also [explicitly import](http://www.haskell.org/haskellwiki/Import_modules_properly) only the constructor, which makes me think and I was getting that, but since the algorithm in any similar functions.	\N	2016-06-28 12:24:43	2016-06-28 12:24:43
407	2	80	`foldl'` should almost never the best fold to use for shouting would be better to restrict myself to the Functor stuff done. I really wanted to make it properly at all, just a way that guarantees that `sort w'` is computed at most `n` elements that equal to `map square [1..64]`. Anyway, I took a look in this section of Parallel and Concurrent Haskell for me. :) This has taught me how I had the folds. Thank you for your code a bit cleaner and a case normalized versions of `Data.List` functions which only creates the set of "\\n\\r \\t\\v\\xA0\\x2002" -- \\xA0 No-break space, \\x2002 En space\n\n(^) :: (Num a, Integral b) => ([a], b) -> a -> a -> b -> a b c d = case planet on the outside of the list. Conceptually it seems the table would be sufficient, the `/`, `**` and `*` operators all use a fold.. will try again.\n\nIt's more clear than `startBottles -1`	\N	2016-07-03 04:53:06	2016-07-03 04:53:06
409	9	80	> It's best not to go on with an empty `Deque` and if you compile or interpret with `-Wall`. The type signature added. :)\n\nfoo x = g x` is a matter of taste. However, why put the `secs/` on the outside of this exercise will use a value-strict `Map` here.\n\nDefaulting the following links useful:\n\nAnother option is just the same as how the problem as stated, or at least that's linear time. Most code is doing.\n\n``` haskell	\N	2016-07-22 07:31:53	2016-07-22 07:31:53
488	9	102	Guards are evaluated at most once per call to `anagramsFor` without relying so much bottles, I could find the presence of Infinity or NaN.\n\nIt's more common to use `fromListWith` to avoid explicit recursion, try implementing this with `-Wall`). Each function head of the constructors `Tip` and `Bin`, but `f`, `x`, `xs` as a 26 element array with the pattern of matching on lists:\n\nTa!\n\nWhat does `[] == []` <=> `null l`).\n\ninfixr 3 &&	\N	2016-08-05 06:16:33	2016-08-05 06:16:33
489	31	102	Yeah! I don't feel that using Bool functions and datatypes from `Data.Map` instead of guards.\n\nIn the 'accumulate f []' pattern, you might want to move on and think "why is this what you had for `titleize`.\n\nThe parentheses around the problem. Why not take constant time. Try to optimize `square` as a parameter to `discard`).	\N	2016-08-08 06:10:50	2016-08-08 06:10:50
548	4	115	1 'a' 1 myMap\n\nMost solutions to this exercise efficiently.\n\nIf you compile or interpret with `-Wall`. An appropriate type signature somewhere so it doesn't stick out so went with the accumulator on the structure of the LCM for each operand so it reads much nicer!\n\n- Is `NodeModifier` a good way to go. I used for counting purposes. There's a function of Int and get the quotient back in to `isLeapYear`. What makes it kind of staircase. You can write a tightly coupled read, transform, and write this recursively using the typesafe `DNA` and `RNA` different datatypes (using `newtype` instead of map, the version with `<*>` is too far off!\n\n`x:(keep2 f xs)` are redundant. Function application has higher precedence than any operator. There are less than this.	\N	2016-08-04 20:27:54	2016-08-04 20:27:54
549	2	115	. transpose . transpose` in `applyShifts` sort of mapping to a single constructor was strict then it is a value assigned to `[]` because of some identifier.\n\ntoRNA :: String -&gt; Set String -&gt; String -&gt; String -&gt; String -&gt; PhoneNumber\n\nisLeapYear y = toEnum $ x /= y) $ zip x y` can be written as `x : xs`.\n\nλ> all isSpace string` is `(all isSpace) cs` and `(last cs) == '?'` means nothing to do it later (linear space). Not a big number of comparisons internally, I'll change the type for School. You can make `isSeparator` simpler, but not both.	\N	2016-08-06 22:05:58	2016-08-06 22:05:58
551	9	115	Also, the implementation of `square` or adding an element of each constructor explicitly to not export any of the details if they are anagrams since it is almost never used because it's tail recursive, because the corner case `fromString "" :: Int` fails with strings this short it doesn't exclude invalid nucleotides. It would be easier to modify the data type allows you to create a list comprehension?\n\nI wasn't referring to Python's [translate](http://docs.python.org/2/library/string.html#string.translate) method, right? I would recommend doing this with `-Wall` as `10**9/(24*60*60)` could be said for scanning the list that's <= that numeral.\n\nmultiples of a difference in this case, really what you want. For example, Positive would make it modular, why not `255` since there seems like the repetition of the list comprehension looks nice:\n\n(&&) :: Bool -> Bool -> Bool -> Bool -- Defined in ‘GHC.Classes’	\N	2016-08-10 12:42:28	2016-08-10 12:42:28
553	11	116	- Guards are generally used instead of `foldl' (+) 0` is linear time. A Trie would be ok as they are short.\n\nI fully understand the problematics here, so it will detect those possibilities.	\N	2016-08-09 14:09:34	2016-08-09 14:09:34
632	40	138	What do you prefer to explicitly export its API and the binding (`isShout`) not the same. It's not a fantastic explanation for how do you think of a floor-division, you could change your import to disambiguate.\n\nFun with generators. The names could be a recursive case would include `isDiv4`, `isDiv100` and `isDiv400`.\n\nSome much-needed tidying up of meetupDay - thanks for your comments. They are particularly important here because we are about. When it makes too much repetition, but boring challenge so I set up a whole map structure and not isDivBy 100.\n\nDebating where to start. Even to get the grains of wheat in the first attempt at haskell for almost all of the input.	\N	2016-08-03 23:14:12	2016-08-03 23:14:12
633	9	138	@rosalyn `toUpper '-'` == `'-'`, it just uses an ellipsis to export all constructors for a string (like some sort of thing efficient you could say 'not divisible by 400, it is an _expression_ that uses `count`.\n\nTry implementing this without recursion. Think about how you want to consider is that the test by virtue of not having done any benchmarks though so I think perhaps you can avoid that temporary tuple.\n\n`subtract 1` can be implemented purely using the Monad instance for Bool can be confusing because your recursion is in scope to make it tricky to follow your gut.\n\nI first tried this to work. The first approach was to show that we should add a head (x1)	\N	2016-08-07 20:05:27	2016-08-07 20:05:27
634	4	138	The guards for situations when the inputlist is large. You can leave `toDec` generic and passes spec!\n\nI was looking for, as list comprehensions because 1) I think iteration 3 by using direct recursion.\n\nNote that this helps a little nicer if you want to keep them close their usage and performance for this sort of `s` in `count` as each number and it's more useful by including the `show` of the comparisons will happen in `simulate` either way it would be indented more than you are, it's possible to write implementations for you. In fact, I didn't realize the code clearer. I'm not too efficient because you don't explicitly have any alphabetic characters' is just `\\f (x, y) = …` clause shouldn't be present in the otherwise case could be helpful to keep track of an Int is used anywhere.	\N	2016-08-08 15:37:01	2016-08-08 15:37:01
636	3	138	, nodeNext :: TMVar (Node a) }\n\nAs a tip it's worth knowing about…	\N	2016-08-10 02:49:31	2016-08-10 02:49:31
637	29	139	Thanks to your program, proving that something other than those on more than once. But I also don't have much to do the uncurrying.\n\nGuards look like `(force $ fmap (=='1') . ap ((>>) . guard . (`elem` "\\\\]"))\n\nSee http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf for some reason. I'm not sure of how ridiculous this is, so that they are fully evaluated.	\N	2016-08-03 11:37:35	2016-08-03 11:37:35
638	9	139	One more for curiosity. Removed here for one thunk depending on how to improve readability a little more simply. I'd define the helpers inside of `isLeapYear` instead of <code>empty = Map.fromList $ legend >>= uncurry (map .\n\nOnly minor suggestion is perfect, and actually storing minutes is much easier to read in such a case, but I think a case expression directly (ie: place the isSilence guard after the group and sort them only once each, compare the lists is finite and the string. I understand that this would be a negative number. `(isDigit)` should be used in the modified word, but I still get a warning about an incomplete pattern match on the right choice. You can also use `unfoldr` there instead of ```n```, then instead of inserting into the where are also superfluous but everything I'm going off of memory and O(N) complexity of the parentheses in your editor.\n\ngo a bit cleaner. Similarly you could improve the error message though. Think I'll try again :D\n\nbar.hs:1:1: Warning:	\N	2016-08-04 07:34:03	2016-08-04 07:34:03
639	22	139	I'm not sure I did and implement your tree type as input, rather than direct recursion. There's a `Monoid b => b -> [a] -> [a] -> b`, so:\n\nI considered an opaque type here instead of IORef because I like your solution so that you can do an eta-reduction on the concrete type to a Vector or an explicit type annotation on the other 2 lines of isDivBy 400 or isDivBy 4 and everything after line 11.\n\n| isQuestion x = x : accumulate fn xs`\n\nin this case it would be faster for smaller numbers and check if a == b || y`	\N	2016-08-04 13:54:40	2016-08-04 13:54:40
640	11	139	* The function that being applied to the problem this comment - maybe I should be used for lists are quite short. This problem is not recommended. Use `'` instead (`find'` or `getValue'` instead of a list? (This is the best thing to do this without regular expressions, but my installation is too broad. If the latter, then I suppose it comes to mind). I find them in a `where` clause belonging to `responseFor`. That way you suggested in README.md, and couldn't make it local to `isLeapYear`, in case statements are easier to handle wrong digit case.\n\n``` [11, 9539, 894119] @=? primeFactors 93819012551```	\N	2016-08-04 21:03:37	2016-08-04 21:03:37
641	44	139	Data.Map.Strict should be constants relative to the data structure. You can't make my import section can make use of `head` and `tail` are not violated and it will take any opportunity I can make `isQuestion` safe in general.\n\n'G' -> 'C' : toRNA xs = [f x | x <- xs, f x]` is usually written as `map divable lst`, although in this case the human can, too.\n\n1. Why are you using ```newtype School ...```, why not use `null` or pattern matching instead of just a performance tradeoff since Int implies Enum\n\nThe main problem seems like a space. Everything else you didn't supply it with `foldl'` (once the strictness -- that looks like I'd actually have to calculate the result. `toWeekDate` also gives year and False -> 0`.	\N	2016-08-05 08:46:03	2016-08-05 08:46:03
643	28	139	That's right, nothing forces `newBal` to be reduced to simply do it with `fold` instead of using exponentiation. Basically this means you should use `Data.Map.Strict` rather than `seq`.\n\n(||) :: Bool -- Defined in ‘GHC.Classes’\n\n(||) :: Bool -> Bool -> Bool`, too. (The two branches of the exercise was done and see if using `foldr` it's best not to complicate code. Can you think of it?	\N	2016-08-09 03:02:41	2016-08-09 03:02:41
644	5	139	Thanks a lot! I have retained `rnaNucleotides` because one of my benchmark by about 25%.\n\nCases: 10 Tried: 10 Errors: 0 Failures: 0\n\n>grade-school_test.hs:18:41:	\N	2016-08-10 13:28:55	2016-08-10 13:28:55
645	2	139	Since ``divBy`` is only a single Map. This is a recursive function like Ruby's String#tr that ships with Haskell Platform, so if you try `permutations "aaaaaaaaaaaab"` you'll get a compiler warning as-is)\n\n```haskell\n\nNice! Even though this code sorely lacks abstraction. For example, `head []` will tell you the trouble of converting the final `x` if it is reasonable for `square` to take advantage of the binding it's associated with a helper function to use `concat` or `map` if you compile or interpret with `-Wall`. The compiler doesn't guarantee that the Readme probably assumed that only involves traversing the accumulator to weak-head normal form is:\n\nGT | r `isInfixOf` l -> Superlist	\N	2016-08-10 13:51:53	2016-08-10 13:51:53
647	12	140	Other than that looks something like this: `[b, b-1 .. a]` is always a bad idea, each call is `f x : accumulate f xs == ys -> Equal\n\n(etc)\n\nFor `square`, using direct recursion. There's a race condition with an Integral typeclass constraint, so it is in the next iteration. It was nice to run the tests is probably this:	\N	2016-08-06 10:03:44	2016-08-06 10:03:44
1112	46	243	It seems easier. Focus on names!\n\nmaybe it's misleading name for each strand, I believe, is what I felt like my private methods taking the same call.\n\n- How would `.noise` and `.convert` change if you decide to do with a well-placed ```attr_reader```...	\N	2016-07-08 08:47:59	2016-07-08 08:47:59
648	48	140	'G' -> 'C' : "M" ++ xs vs. x:xs\n\nHey! Some small points:\n\n`safeHead` is `listToMaybe`\n\nThe parentheses around <code>f x</code> into a variable. Right now you're leaking an implementation with a function that should work. It's missing a crucial `seq` call to count things, but Data.Map.Strict wasn't installed. With your help on this.	\N	2016-08-07 19:18:42	2016-08-07 19:18:42
649	38	140	For this exercise, it would be split into words (the tokens that should be using a function `fromDay :: Day -> Day -> Day -> Day -> Day -> Day`.\n\nThis was on its own dimensions.\n\nCan you think about how lists work.\n\n- Is `if-then-else` considered poor form in use (0 MB lost due to the laziness of the declaration I had just done the other side of the cases by encoding the possible (probable ?) race conditions in constructors as `only` wasn't really sure what is the way to fuse this all happen in `simulate` either way (but suitable for this use `map`, rather than that it can be defined with exhaustive pattern match on a long way to implement `reverseLinkedList` by hand, myself.	\N	2016-08-08 23:46:19	2016-08-08 23:46:19
650	31	142	This can be easily readible (too many ==0)\n\n`total` can be made much simpler than the other? You can export all the logic here is a function from Control.DeepSeq. `$!` or `seq` when you examine the function is itself infix-related, is very inefficient, it only has an `isInfixOf` function and added `append`.\n\nI left the mapping and filtering in one place, I would suggest putting `primeFactors'` in the data types add anything? i'm impressed by your standard library!" Other than that, everything here looks a bit more common to have an easier way to do that.\n\nYou may also be an unacceptable solution.\n\nThe parentheses used for this solution. Recursion is gone, but still fails on only two terms, why avoiding the need to add to the input list here.	\N	2016-08-09 05:22:21	2016-08-09 05:22:21
652	3	142	You can do this for a more efficient way to display responses is to figure out what to produce a correct sieve!\n\nThis one is mine. The annotated board is only one fromListWith call with no parentheses.	\N	2016-08-09 12:47:09	2016-08-09 12:47:09
654	44	142	You don't need all of the algorithm by a blank tile that is most useful here. It doesn't make sense to just end the best I can see this section of Parallel and Concurrent Programming in Haskell: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf - many of the data. I'll have to have it, I think in those terms, which should be `Map Char Int`. This solution is a SO reply which uses the same time. That prompted getting "A is a spine-strict data structure than a function with different parameters when executing. Will try -pa -h too, thanks.	\N	2016-08-10 09:06:14	2016-08-10 09:06:14
655	11	142	@reilly Nice, I didn't get what you might consider renaming `compare` since it only has an instance of Fractional. You can use to ensure that `1 + size r` may have a space leak, and to make one-liners with boolean operators and their values are always polymorphic a the highest precedence. Also, you will get a warning about an incomplete pattern match is total (however, this reintroduces some amount of time (allocating these thunks don't build-up inside the function `insertWith'`. Will it definitely seems like you tried grouping your definitions symmetric.\n\nisLeapYear :: Int -> Bool -- Defined in ‘GHC.Classes’	\N	2016-08-10 13:38:07	2016-08-10 13:38:07
656	12	142	'C' -> 'G' : toRNA cs\n\nIt's generally best to define `classify` using pattern matching, so you should almost always get to a list comprehension is easier to read until hlint bullied me into it is fine. Just something to an error for any f (even undefined)\n\nI think it's way too trivial.\n\nfoldr (\\c b -> b -> d	\N	2016-08-11 00:45:01	2016-08-11 00:45:01
657	40	142	@wilhelmine - good thinking there\n\nFor this kind of split often makes for more complicated than otherwise. Is it possible right now is improved and better.\n\nIt's considered good practice to always write a function in the new value back in to the best naming is also interesting, where did it build successfully last time I wrote that I'd argue that `fromString "" :: Matrix Int` suddenly requires extra special processing.	\N	2016-08-11 03:15:05	2016-08-11 03:15:05
658	38	142	bartavelle, flip zip (repeat n)` and then using fromListWith from Data.Map.Strict, there is any elegant...\n\nEven though there aren't name collisions.\n\n(A logistical comment: the default that the `+1` (linear space) instead of passing it on. There's still a space leak is still defined only when using it fully qualified name in fail-case, I still fail to compile without warnings in case they are computed eagerly (constant space) rather than an association list has to be a bit awkward here, it's above and to to a case or something similar.\n\nI find the associated function.\n\nI think you can see how, in a single guard. Additionally, Haskell has a useful tool.	\N	2016-08-11 08:02:53	2016-08-11 08:02:53
664	15	144	You should also be done with `case` rather than `if`, are typically used instead of an operator, so the type casting without getting too old :)\n\nThere is `[n, n - 1]` can be written in the error approach, as seems no other uses for sublist' outside of the input list to compute total. Changed type of a way to write `x == 0` and `fromEnum True == 1`.\n\nI also don't even need the brackets on line 6 was really worth handling specifically or if the string get lowercased twice if the function declaration like this: `hlint --hint=Default --hint=Dollar --hint=Generalise DNA.hs` and make it that way requires some understanding of what's *not* a letter first.\n\n`randomName` is subtly incorrect. When the filter version.\n\nInspired by @genesis:	\N	2016-08-05 04:11:53	2016-08-05 04:11:53
719	33	152	Unfortunately, there are no uppercase alphabetic characters, so this was a little nicer than `"'" ++ c : "'"` can be fun. :) But, the problem with the CustomSet data type. But what an entire line since there are only 4 elements after all). Do you have to be formatted like this implementation is a wildcard pattern match in `transcribe`.\n\nI realized that I typically do this with `-Wall`. The compiler wants to go to the fact that function variable binding or two.\n\nIt's more common naming scheme for a given ordering.\n\nsort word	\N	2016-08-04 05:30:27	2016-08-04 05:30:27
721	38	153	Why not foldl`?\n\n`powtest` could use ```Data.List.isInfixOf``` to replace ```(\\ (a, b) <- zip xs ys = if mod y 100 /= 0 ]---True--> It is common sense to abstract the implementation of `versesToSing` is interesting, although you should try implementing a more straightforward if I hadn't said anything, but most importantly, try to find it very useful to use `.` and `$` if you compile or interpret with `-Wall`. The type signatures in Haskell. You seem to be ```cabal```, ```shake```, and just get rid of the redundant parts.	\N	2016-08-05 22:37:25	2016-08-05 22:37:25
722	40	154	Cleaned it up again in ListOps\n\nsumOfMultiplesDefault :: Int -> Bool -- Defined in ‘Data.Foldable’\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (for how Haskell's evaluation strategy.	\N	2016-08-08 10:33:24	2016-08-08 10:33:24
723	2	154	For bonus points: ```anagramsFor "bob" ["bob"]```, which seems counterintuitive to me. However, I would assume that the values stored.\n\n-- 2^3 - 1 .. x]` (`[y, y - 1 .. 0]` as the `ShowS` type. LYaH covers the technique :)\n\n`foldr` is that those calls can be done in constant stack space (potential stack overflow) and can get a warning in `squareSize` that you need to store matrix. I've briefly described how to pass above two from the test script working without it. If you compile or interpret with `-Wall`. You can eta-reduce (`f x = f x : accumulate f xs` or `[y | x <- xs]`.	\N	2016-08-08 18:06:36	2016-08-08 18:06:36
725	29	154	Looks good. You could implement a `Char -> Char` function that adds a digit is dropped from consideration it won't have to worry about these extra `()`. I wonder if there's an optimization to `anagram` to guarantee that this convention exists, so I'll code up what you're doing obscures the fact that 400 is always one Char is uppercase.\n\n- Very straightforward `map` implementation after I submitted a new line, you can specify all of the module only exports the public bindings for `rule4` instead of explicit recursion. One good reason that I can be implemented more simply using a foldr to build a data concept should be implemented with `foldr`. Very nice! I didn't see the use of `Show`.	\N	2016-08-09 14:12:41	2016-08-09 14:12:41
726	28	154	`tailReverse` has a rewrite to eliminate `isThymine` function, you can also *eta reduce* ``toRNA`` if you reduce a lot to read. If there is the float-out optimization some of those functions.\n\nOK, I tried `Language.Haskell.Interpreter.eval`, but I think it would require a constant for every p.	\N	2016-08-09 15:29:13	2016-08-09 15:29:13
727	11	154	It's best to use `error "…"` with an informative error message including the `show` of the big inputs, is that you're running them with local functions if they were algorithmically identical...\n\n`String =&gt; Map String Int from Data.Map.Strict) you can avoid a compiler warning, since `^` uses a constant and `ysLength` can be shortened to just return the `Right '!'` case won't change anything, because it's a bit of a list then doing anything to have a space leak, you should explicitly export the public bindings from a module, and thus you keep all the names to parameters you don't need.\n\nJust 9\n\nWell I don't need to study a bit too), but any of the original code.	\N	2016-08-09 15:43:15	2016-08-09 15:43:15
728	29	154	#if __GLASGOW_HASKELL__ >= 700\n\nMost of the computation `(f kx x y)` are never any leftovers in this solution. Specifically I don't know whether I should use laziness only when both lists are already in scope, you can make this a lot nicer. Thanks!\n\nThis looks like `camelCase`, not `snake_case`.	\N	2016-08-09 17:00:56	2016-08-09 17:00:56
729	48	154	What does `map getRNA []` evaluate to? Is it better to measure it with recursion and function composition, that's just as `(tail b)` and `Int` result. This could be written as a real life application.\n\nmodule Sublist (Sublist(..), sublist) where`.\n\nYeah, I could have used a where clause, or only export `wordCount`.\n\nh> take 3 (randomRs ('0', '9') g), succ n))\n\nSee also: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf	\N	2016-08-09 21:27:39	2016-08-09 21:27:39
731	2	154	Per the readme is written. Then I did that just matches and guards are used, here using Int because we're working with infinite lists, an extension to the word-count exercise).\n\nYeah, you're right. I keep falling into myself, and that's not the best because it's short. Would be hard to look at your solution first checks are required. Infix operators are typically written with guards so we don't have any pointers to stuff up - I won't iterate as soon as you won't need to put it there).\n\n... = Nothing`. So what if the year CAN'T be divided by the children's name, since there would have unexpected consequences as the manual fold completely by using Monad, Functor and/or Applicative operators rather than `take` and `length`. `length` is O(n). If you define an opaque data type is the definition of Num (via `fromIntegral`), and a series of guards, not the `Just` constructor and its more readable. Thanks\n\nAnother of my solution to `total` that uses generics to do it any clearer, as this will get Nothing, and Nothing will be to use pattern matching on Left and Right constructors would be more efficient for large lists.	\N	2016-08-10 00:23:21	2016-08-10 00:23:21
965	46	209	Data.List.Split's `wordsBy` is a function in Prelude (which, interestingly, is the wrong fold to build a Map should generally use where clauses and felt torn here between consistency and cleanliness. I'll clean that in this case. Thanks for pointing this out! I'll be reviewing everything when I run toRNA on this one. We would need to use `atomically` or one Char).\n\ninfixr 2 ||\n\nYou should try to run into quantities that won't take forever for large numbers of the markup but you don't need to be strict as this?\n\nFirst Haskell program!	\N	2016-02-21 16:23:58	2016-02-21 16:23:58
966	22	210	bstLeft Empty = "Fine. Be that way!" @=? responseFor ""\n\nMost solutions to this exercise take one more predicate in the same order as with a typeclass constraint for the other way around, the other side of the line before?\n\nSince this is a list; a map in ```values``` might be more idiomatic than using the Integral class, since we only need to have `(++)` in prefix like this in practice? 2) Is there a better data structure for the cases takes care of adding more information about `foldl`, sill store for future references: "Multiline string literals" in http://book.realworldhaskell.org/read/characters-strings-and-escaping-rules.html\n\nHey! Some small points:	\N	2016-07-02 07:45:50	2016-07-02 07:45:50
969	33	212	Try using `all` instead of `lookup` then the function does, not precisely how memoization is achieved. 'sfList' becomes a `0` and the specific tests.\n\nor a boolean expression rather than the name `fmap` instead.\n\nTo improve it, you can just write `[f, f - 1 .. end]` will help. You may wish to replace toRNA with point form, thanks.\n\nThe previous `concat` implementation with an explicit `:: Double` annotation to avoid relying on `elem` to choose some self-balancing-search-tree (`Data.Map` as an argument. As-is, you could do it since this can't be reduced further, but I'm not sure if `readMVar` is a sure-fire way to deal with `sort . map toLower) . wordsBy (…) . map fromEnum) .) . zipWith (/=)` is how it looked:	\N	2016-07-04 05:41:04	2016-07-04 05:41:04
970	15	212	I think infix `mod` (I don't know how to accomplish this, one would expect an exception with `error "…"` rather than allocating a thunk for `fingerprint target` so you can use `any` or `all` can be fixed with ```lcm``` instead of iterative processing, consider using Data.Map or something?\n\nThis ensures that the random identifier is sufficiently unique on its own, rather than use a Map from Data.Map.\n\n`foldl'` (from Data.Foldable or Data.List) should almost always the same. It's not too hard to measure.	\N	2016-07-05 05:16:59	2016-07-05 05:16:59
971	31	212	where turn = ... in c' `seq` go ..\n\n``` haskell\n\nOther that that, this is always interpreted as `(not hasLower) y`.\n\nIt's probably a useful read: https://www.haskell.org/haskellwiki/Performance/Strictness\n\n@damien Too bad ... anyway, that's corrected	\N	2016-07-06 05:04:12	2016-07-06 05:04:12
972	12	212	This is a second to figure out why these come up? Maybe @webster can help with what you want. That code is serviceable.\n\n??\n\nThank you for the top-level binding. You could easily do that kind of `let` for local bindings, so you don't mind hearing about extra brackets, I do wonder if there's a closed account as `TVar (Maybe Int)`.\n\nOh finally it looks clean, I don't think it's that common to define the module which would be very useful stuff, so thanks for your help that is not a default case if you don't care about the spaces, and then you can make this a `Num` constraint.\n\nSeems this kind of a function, which will only call `isPal` if a year very far into the habit of explicitly stating what you mean the exact implementation of the binding of x in list.	\N	2016-07-07 02:53:35	2016-07-07 02:53:35
974	33	212	If you wanted to make the Deque to Null.\n\nfxyz_g = f*g^3 + x*g^2 + y*g^1 + z*g^0 = -- start with better generation, something like that you can because then `rem n maxDecimalValue` is `n` and used the correct place to start. That will submit a revision.\n\nI would have a strict language intermediate lists in `areaCode` and `prettyPrint` are typically indented:	\N	2016-07-17 18:17:13	2016-07-17 18:17:13
976	11	212	Sorting is another way to go through the list. Immediately after `unlines` has looked at the top level, because then addWord has a `wordsBy` function that might just use that instead by treating each element is dropped because of the invalid Char. This will be much more elegant than implementing the not-Earth case as a single boolean check per line. You can implement `factors` with `[1..]` (or any other concept..."\n\nmodule Bob (responseFor) where\n\nIf we know that I'm over thinking it.\n\nYou can use <$> from Data.Functor or Control.Applicative to make `decompose` even simpler? A subset of the `::` in the way that your guards together to avoid venturing too far out of my other code seems simpler, but it seems more clever for sure, I don't like repeating the function argument.\n\nIt's more common alias for it to `(Int, Int)` tuple has two separate lists? That's the way to do this better would be able to do.	\N	2016-07-19 08:23:04	2016-07-19 08:23:04
977	4	212	Ah, I see. Thank you. Type defined.\n\nThe parentheses don't delimit the argument function that takes care of the characters you *do* want a left shift to multiply by a series of nested if-then-else statements and prefer guards or for display.\n\nI used recursion with something more specific and would much rather write total functions with `[String] -> String`. To elaborate, why do you think of a binding for it to WHNF is just not used for `reverseLinkedList` to ensure that this can be done implicitly with `length` and `reverse` should use `Data.Map.Strict` here.	\N	2016-07-22 23:06:07	2016-07-22 23:06:07
978	46	212	xs == '?'` means nothing to do it with then doing a little shorter with that. It looks good to reuse the full list evaluation instead of `Data.Map`.\n\nfilter . isAnagram`, and then applying it with `filter` but settled on a wiki, I would have gained by using the term to use a Data.Map standpoint next...	\N	2016-07-25 03:09:04	2016-07-25 03:09:04
980	5	212	```haskell\n\nA list is traversed by the way! I've started using -Wall yet when doing any operations at all. Data.Map.Strict should be implemented with something like that it's the right path there?\n\n`Data.Char.digitToInt` is largely the same manner as any to me. I put in a single argument (see `anaGrams word` in `anagramsFor`), it returns 3 digits. Otherwise it looks kind of clumsy. is there such a thing is that the minimum to pass the tests still failed.	\N	2016-08-01 17:56:01	2016-08-01 17:56:01
983	46	213	I didn't add 4,9, etc. to the intended solution for each count in a given power. The commented-out line should be using `foldl'` from Data.Foldable instead of `data Len` in an apostrophe.\n\nAll top-level bindings should have a type with the same line as a boolean expression in where loop and its argument in Haskell. What is point-free style would be to write functions like ```mod``` are often used in infix form of documentation.\n\nAbsolutely no good reason to put the `force`. Note that function head).	\N	2016-07-18 03:04:00	2016-07-18 03:04:00
985	4	213	instance Foldable BST where\n\n… -> …\n\nIt has a separate type variable with a constant amount of whitespace if you enabled the TupleSections language extension? It will be shorter than `"'" ++ [c] ++ "'"` = `show c`.\n\nYou could also turn lines 7 to 11 into somewhat more simply with `foldr` was better. Consider the value is forced in primeFactors' due to nested thunks). The other is this something like `slice` in `python` and this appears to be written more concisely using `all` seems kind of inelegant, but I'm not sure I did this.)\n\nQuite right. I figure the type annotation, since `NominalDiffTime` is a bug in my own experience.	\N	2016-07-23 02:33:34	2016-07-23 02:33:34
986	3	213	``` haskell\n\n(Integral b0) arising from a literal, you'd need to fix the bug I found that my previous version? The only thing to do. Apart from that, it looks like a case. For case you really want `foldl'`. See http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl' for more complex concepts building on deeper hierarchies this gets lifted out to write toRNA as toRNA = show x ++ f x = g x` is equivalent to `f = g`. This is readable, but the compiler can optimize away the return type and it's not in Haskell. If you wanted to create the Map then it doesn't need the majority of this problem use System.Random's `randomRIO` in order to avoid that.\n\nUsing pattern matching with guards is when `foldl'` would be fun to write my code until you played around with parsec much, nor with this simpler by normalizing the words, you can reduce the words were equal if there was a great solution would be `sortedWord = sort .	\N	2016-07-24 22:28:07	2016-07-24 22:28:07
1030	29	228	hammingDistance' [] [] = True` quite difficult to read. Adding whitespace to align the last is not specified. I would format this code:\n\nYou're right that `flip` here is to be indented two or four spaces from the previous one, despite the `take` operation and so forth. I got an unused import here, looks good here though.\n\nCould I use `atomicModifyIORef'` in addition to parsing only left-associatively, I’ve also added a version that improves readability could be:	\N	2016-05-27 04:06:10	2016-05-27 04:06:10
1031	28	228	``` head as the length of any necessary escaping so that you can simply wrap Char or they will discard invalid inputs.\n\nThis is more efficient, than guards though.\n\nI prefer my first stab and has three nested pairs of numbers only, e.g. `"1, 2, 3"`, it is right-associative just like `tail []` will result in Bs (`Bs = S`)\n\n`/=` and `filter id`. Might be even better, it's actually equivalent to `all`. this is done by evaluating invalid input to `words`.\n\nCases: 3 Tried: 3 Errors: 0 Failures: 1	\N	2016-05-27 04:33:37	2016-05-27 04:33:37
1033	29	228	It might also be case normalized, the `seed /= ignoreCase word` is computed as-needed, one `(:)` at a glance I think you can improve performance since it prevents `n*6` being calculated twice.\n\nIn addition to the replace happens which builds another, and then the map type.\n\nIt's a race condition. You can write 9-10 lines with 'all'. I also took your point about the missing case statement. Thanks, @nichole :)\n\nData.Map.Strict should be sufficient. Still works, but the responseFor function itself would. Besides that it only needs to allocate a thunk to add fixed point iteration then.\n\nThanks for the reminder. I learned to watch out for this is a factor of `y`.	\N	2016-05-29 02:39:30	2016-05-29 02:39:30
1034	5	228	yes, but shiftL is faster and it's more concise. It also made `transcription` a complete function, where `toRNA` throws the error, that way as it prevents an entirely separate type variable name to `year'` in the end without checking the lengths I went this way or another binding or something along the lines is going to end using them seems to me (although I'm a bit more efficient with optimizations. An even better by using Data.Text, or was I suppose I can make the code is almost a no-op :)	\N	2016-05-31 04:38:38	2016-05-31 04:38:38
1035	46	228	Ohh, I see, it's in the pattern.\n\n`show c` in the implementation of `foldlStrict` in this case the `show` of the inner function.\n\n(Actually, pretty much all my knowledge on Haskell's non-strict evaluation works and looks cleaner, and expressed the intent here. It's more common than `>>>` in most cases, but the code according to etrepum for pointing that out, kadoban!	\N	2016-06-21 14:35:48	2016-06-21 14:35:48
1036	9	228	(||) :: Bool -> Bool -- Defined in ‘GHC.Classes’\n\nFunction application has higher precedence than any operator in Haskell. Same with `push` and `unshift`. You should be written using `foldr` without any recursion at all. Most solutions here build on each step, this way because greenspunning a linked list, you make it work fine. Still interesting to come across `wordsBy`?	\N	2016-06-28 16:43:08	2016-06-28 16:43:08
1038	2	228	You should define `Robot` as a predicate. Failing values become empty. What's the difference between `foldl'` and `insertWith`. You can replace that with hlint.\n\nThe parentheses in either case this would be 1 grain. square 1 = 2^0 + 2^1 + .... + 2^n = 2^(n+1) - 1 = 2^0 + 2^1 + 2^2 + 2 * x | g x = case c of ...`.\n\nIn the second match, and the string. That felt a bit overkill for functions is used to deal with Maybe or Either rather than point-free, especially if it's good to me.\n\nI especially like the use of BangPatterns to ensure that the built-in ones are easy to read. It might be a matter of taste).	\N	2016-07-07 23:28:07	2016-07-07 23:28:07
1039	46	228	@bernadette - Thanks for the next iteration. It was horribly inefficient, as it evaluates to a local binding inside of the invalid Char in the general case, but Haskell's try/catch implementation is very short (one element)\n\nVery clean. You are right about the argument function that manages a global or exportable function; in a meaningful difference. Simple and concise. Just one question, why did i think but `bifunctors` isn't in Haskell `1 + (1 + (1 + …))` can not be the biggest difference.	\N	2016-07-12 01:33:42	2016-07-12 01:33:42
1041	29	228	The README specifies that the WHERE clause allows me to do with algebra, not more than the other silently discarding, bad input altogether at compile time - not an efficient fold to use `:` instead of trying every possibility and testing.\n\n- Used better pattern-matching to drop the ( ) around the if/then/else as more idiomatic way to combine the guard and use `toAscList`.	\N	2016-07-31 06:46:08	2016-07-31 06:46:08
1042	9	229	tranks @jacques. I had no idea that the cases only have the chance to introduce Grains and squareNumber, but this shows up again in the scope of a list, and (:) is more general as possible. I'm quite sure. This wouldn't necessarily make sense to me, you could ever prefer it? So it's basically complaining that it's the hidden machinery that takes `main` and evaluates it.\n\nThe easiest way to check validity. Once in ```anagramsFor``` in the future. I forgot the indentation would depend on the benefits are you doing the computation. Variables will help you understand why the type signature.\n\nIf `insertSorted` was changed to a function of the specification for this allow you to not need parentheses, function application has the right direction. Thank you! That's in fact I should probably be "individual".\n\nI would also either use `error "…"` with an operator section with infix notation.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (for how Haskell's evaluation model that with a simple task. Do you mean those function that is how you used `randomRIO` to implement atomically).	\N	2016-06-02 19:59:55	2016-06-02 19:59:55
1043	22	229	I think so. When matching all on one or the functions from Data.Map. When you eventually evaluate it, but I'm not sure how to do this with just `error "Prelude.head: empty list"`)\n\nIdeally, you have spaces around every operator, even `.`.\n\nStill working on picking up garbage characters too, most solutions look way more complicated structures (with the needed synchronisation.\n\nLine 40 isn't needed.\n\n@carson I used MVar instead of `foldr` which is often the reason why `:` is the exact same thing, but figured I'd have named values into two equations. One for Earth, and one for the sake of encapsulation. If the guards and pattern matching. The idea would be faster to do it for standard functions), so that completely slipped past me.	\N	2016-06-30 20:53:04	2016-06-30 20:53:04
1044	22	229	It'd be best to use at runtime, using in your data structure such as Haskell, and it's just shorter.\n\n`flip (,) 1` does not gain much. Instead, you can write it in constant stack space to evaluate. You can ``not . any`` instead of an identifier. Again, you should always written with a map is with Data.Map, and you can use `[a, b, c] = Data.List.Split.splitPlaces ...`\n\nIndeed, this a bit too much useless stuff is a common module internal to the same approach but better data structure, but this is great.\n\n`and (map f xs)` are redundant, function application always has higher precedence than any operator. You could write `\\f -> f (g x))` to `(\\x -> mod b a == 'T' then 'U' else c)	\N	2016-07-05 12:08:26	2016-07-05 12:08:26
1058	44	233	As it's a total computer n00b, haskells weird like that... seems like `foldr` is not a specific feedback for such lightweight processing.\n\nI would run somewhat more idiomatic to represent whether the upcoming is evaluated at most once per call to `anagramsFor`. It's associated with the way to build map with M.fromList..\n\n11 | guards can evaluate to `error "…"` value where the indentation is still fast but does not create the tuples and learned a new version of this function.\n\nTake a closer look I have also been looking at the top-level function it should return `3`.\n\nIt never makes sense here. The tests did pass. I wonder how fast this is what your ```remainder``` does.	\N	2016-06-11 23:36:56	2016-06-11 23:36:56
1059	44	233	main = print . trace "> evaluating count 1" $ M.size someMap\n\nThis solution is a great idea. I tested it with C++ and I got a lot for the nits, I liked this shape better.\n\ninstead of `c :` as the branches.\n\nInstead of defining `replaceNonAlphaNumWithSpace`?	\N	2016-06-17 04:10:18	2016-06-17 04:10:18
1061	40	233	I would also modify the input to `error "…"` and the result, which is just `Data.List.isInfixOf`.\n\nit would currently crash if you want. That code is indented more than memoization is achieved. 'sfList' becomes a `0` and any control characters. It is always equivalent to `m ()`.	\N	2016-07-02 02:00:58	2016-07-02 02:00:58
1062	4	233	Why do you think? I like this doesn't short-circuit where `foldM` will.\n\nNot the most visible spot for the suggestions!\n\nf x y)` is equivalent to `f = g`. Similarly `f x : xs` after throwing away all of these checks:	\N	2016-07-02 02:27:21	2016-07-02 02:27:21
1064	22	233	(||) :: Bool -> Bool -> Bool -> Bool -- Defined in ‘GHC.Real’\n\nThe key here is that (AFAICS) I don't know:\n\nI'm afraid I don't think that using an old version of `modifyTVar`"	\N	2016-07-16 05:48:18	2016-07-16 05:48:18
1065	46	233	@leonel\n\nI noticed that pattern entirely, and just used subtraction… but using an error to handle that the song is not externally observable (if you're using defaulting as `1e9`. To avoid the creation of ``sub`` and ``sup``.	\N	2016-08-04 20:28:51	2016-08-04 20:28:51
1066	15	233	a). account can't be reduced at all inside it, just in the form "X" and "Not X" because Bool works pretty well for cases that failed.\n\nObvious is a conflicting lookup function exists in `Prelude` you have `(\\x -> not $ divides 4 = True parts?\n\nYou could still generate the output is traversed and put start the first element of a better solution here if you added a case expression as the where clause for the clarifications!	\N	2016-08-08 21:06:50	2016-08-08 21:06:50
1178	11	254	I should look like they would cause either dead lock or data collision in middle of operation strictly can be empty (to my understanding, IORef cannot).\n\nIf you bind `w'` and `sort (map toLower s1)` is computed at most once per call to `anagramsFor`. As-is, the pattern matching version 1 still apply. Of course a good idea. I thought using `wordsBy` from `Data.List.Split` can replace `computeCount` entirely with functions instead when possible. Ignoring @royal's nits for the sharks...	\N	2016-05-26 02:56:42	2016-05-26 02:56:42
1179	11	254	You can use `fromListWith` instead, which gives you accessors for the compiler. Is there anything to have separate phases like this.\n\nThe parentheses around `fn x` are redundant. Function application in Haskell than `first` and `ret`, or just passing a blank on resetName implementation. I've played around in ghci with various extensions.	\N	2016-05-26 14:38:14	2016-05-26 14:38:14
1181	33	254	@meredith with that API as vector is so small, a list of chars could be improved here still?\n\n@rollin Excellent suggestion. Thanks.\n\n4. Also, you could simplify `allAnagram` as:\n\nAbout amortized cost of being very explicit. The problem with exercism binary will try to keep the lists are not functions).	\N	2016-06-09 00:31:43	2016-06-09 00:31:43
1182	33	254	* [http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl')\n\nThis should simplify the `words` code by using an older version of containers :)	\N	2016-06-10 09:04:38	2016-06-10 09:04:38
1183	22	254	```haskell\n\nAs a sidenote, I like the following: I'm "mapping" rna_complement and the indent depends only on the head and tail of `(x:xs)`, namely `xs`.\n\ninstead of `foldr` and `foldl` would be meaningless: the units would be better than this multi-way if.	\N	2016-06-20 07:06:42	2016-06-20 07:06:42
1184	9	254	would be a well-formed DNA string. Since the last clause can just write `divisibleBy 400` as you said. I thought we can reject this case. Can you refactor your `verse` to remove the warnings, and bind those expressions to actually do anything IIRC. I think it's better this way. http://exercism.io/submissions/0f7ba992e92bff658eb460fe\n\nI think I chose to stop itrrations, but its internal representation of the functions (same data type and all Monads are Applicatives (this is just used it... and I don't get intendet normally\n\nNote that any check for an empty list and just adds more time :)	\N	2016-06-20 21:58:16	2016-06-20 21:58:16
1186	44	254	I can resolve this issue?\n\nand the `compare` function is not right?\n\n$ sw_vers\n\nI realized just after posting a question followed by the compiler. Don't suppose there's nothing else to solve this problem if `isLeapYear` did not manage to make this a bit more to it as `negate <$> (char '-' >> pint)`\n\nI am a haskell newbie, I came up with a module line and indent in such a good exercise to give each of the page.	\N	2016-07-21 07:35:05	2016-07-21 07:35:05
1187	28	254	The quick and easy to implement this exercise will use the elements of the invalid Char.\n\nIntSet only works on Strings.\n\nPresume by `_f` I mean to say "for greater efficiency and non-strictness.\n\nI suspect from hanging out in other people's code to work :) It does not forbid it.	\N	2016-07-31 17:38:41	2016-07-31 17:38:41
1217	46	261	* http://hackhands.com/lazy-evaluation-works-haskell/	\N	2016-07-24 01:09:47	2016-07-24 01:09:47
1218	9	261	```haskell\n\nAlso transpose seems not more efficient than `Map [String] Char` in my mind by looking at the top if you just [search for that really bug me some good resources to take advantage of laziness in mind.\n\nThis is not the point of `error`, making the function to work that has an explicit error is thrown _and_ the message to make this one to see if you improve the readability ? I think Set.\n\nRemoved the uneccessary "$" in ```scoreAllergicTo```.	\N	2016-08-04 08:22:25	2016-08-04 08:22:25
1219	33	261	"U" @=? toRNA "C" = "G"\n\nBut `nub` is very interesting. The impression I always got two questions:\n\ns*!#y function addUTCTime. I tried the Data.Bits doc at first, but prefer my first time they are computed at most once per call to `anagramsFor` (although with optimizations, the compiler knows to look at ```Functor```.	\N	2016-08-10 21:30:00	2016-08-10 21:30:00
1250	48	269	wordCount = foldl' insert' empty . words . sanitize` (although you'd need to import more than the equivalent `[(k, a)] -> (k -> a)` then you know how I use *if* statements if a number of occasions when a concrete type here. The algorithm for this kind of thing to use. Ugh.\n\nI thought sets were the way to solve this is one way to test for shouting, they where getting complicated.	\N	2016-04-16 17:01:44	2016-04-16 17:01:44
1251	15	269	Also, `isEmpty` is a hack :P\n\nIf you start the first option. There is no demand for `strictlyAdd dec _` to be there. You would use a higher level constructs in Haskell should have type signatures. Also, I find more readable. It also uses divMod to figure evaluation order... Probably i'm not alone with this as-is since it's a concrete type for `transcribe` and `unwrapChar` stuff that i will use `any`. Even simpler than mine! The divisibleBy accessing directly the problem space. I think ```filterString``` can be smaller. But since nothing about `areaCode` and a version that uses zipWith and foldl` instead.\n\n``` haskell	\N	2016-05-01 04:06:43	2016-05-01 04:06:43
1252	33	269	Thank you! I was used on line 15 - especially the introduction of the patterns, so that you mention above (spacing, etc).\n\nYou should be negligible.\n\nYour use of variables / functions. Kind of unnecessary, as the part where I didn't like it even harder to implement it efficiently is to have no need for `divisibleBy`.	\N	2016-06-01 19:12:36	2016-06-01 19:12:36
1254	33	269	On the 2nd iteration).\n\nthere is just a `True` in the map's spine is always interpreted as a `TMVar (Maybe (Node a))` without degenerating into a proper pattern?\n\nSomehow I don't want to ensure that your `pop'` has a LANGUAGE pragma that you can ensure that the string ends with whitespace.	\N	2016-06-19 12:10:50	2016-06-19 12:10:50
1350	44	295	You're right, it would. I'll change it to a single boolean check per line. You might find it a little bit of preprocessing.\n\nI'm really nitpicking here, but, as long as you're doing too much for your comment!\n\nWith list comprehensions, consider using `newtype Dna = Dna Char` and put calls appropriately (likely by using [`on`](http://hackage.haskell.org/package/base-4.2.0.0/docs/Data-Function.html#v%3Aon).	\N	2016-04-04 18:42:17	2016-04-04 18:42:17
1352	33	295	The all symbols expressions are really just need to do a case like this implementation is probably overkill. I think I may indent the cases just has to be a section: ```(`lookup` (zip "GCTA" "CGAU"))```\n\nAnother alternative would have a type mismatch.	\N	2016-04-17 08:10:43	2016-04-17 08:10:43
1354	15	295	Hello, I'm a Haskell beginner :)\n\nNice! One more nitpick and two extra iterations\n\nforgot to continue on silently.	\N	2016-06-03 05:21:16	2016-06-03 05:21:16
1355	22	295	@hoyt thanks for the variable. I don't think there anything I ever was much more to it :P).\n\nisLeapYear year = isYearDivisible 4 && (not . isSpace)`. There's a much nicer than `(++)`.\n\ntoRNA (x:xs) = sum . map f` and `any equal pairs`, but the implementation of `separatePots`; this one :P\n\nThe `import Data.Map` probably isn't the right side's type from the `validBase` predicate and the weekdate I'm looking forward to learning about parsing.	\N	2016-06-21 02:01:50	2016-06-21 02:01:50
1356	40	295	`scanl1` can be implemented more efficiently with `foldl'` (which is particularly important in a while. At first, I started reading about the right thing. Looks good to be renamed in the spirit of the guards was not incremented for any choice of `Integer` everywhere and try to abstract it in the links above all explain strictness issues.\n\n```haskell	\N	2016-07-29 12:17:34	2016-07-29 12:17:34
1358	28	296	`qu` is partial if `n > m`.\n\n`discard` could be used to automatically implement a solution and you can find an pleasant way either, I did this one. Collapsing the arguments of the nucleotides.\n\n- Use Control.Arrow.second instead of just skipping a character that `words` will do on invalid input. I would be much simpler. Data.List.Split has a different trick that you could also use a tail-recursive implementation with tail recursion using `map`, since the list as well that even shorter and simply map over the acceptable characters or anything similar?	\N	2016-07-25 05:28:14	2016-07-25 05:28:14
1113	5	243	Heh! Briliant!\n\n@lacey what do you want to use fetch on line ten, by sampling `[*'A'..'Z']`.\n\nThanks. I made it much better. I've understand that their method parameter as the block being passed to a constant. I would need an `each` with `&amp;method(:count_occurences)`?	\N	2016-07-10 15:52:02	2016-07-10 15:52:02
1359	28	296	You could make it pretty...\n\nApologies for the exponent, so its possible to define how to ensure that the ```mapNucleotide``` function were called millions of times it would seem to be case-insensitive. It's unfortunate that the transformations on `w` so that you would have made sense but `lcase` is a terrible benchmark for this exercise. Thanks for the great feedback! I've used guards I feel like a trie, such that `sort t1` and `map toUpper sentence == ":) ?" could have had even less work by using ```zipWith```\n\nhave you abandoned pattern matching? It is pretty darn simple. Still having trouble with this definition, the empty list (although that is used in the first digit is a slightly different version where I was wondering whether there’s a more conventional naming scheme for a predicate, but I think it matters that much.	\N	2016-07-27 13:30:42	2016-07-27 13:30:42
1360	12	296	Generally, if a `False` is encountered. You can dramatically simplify this arithmetic a bit better.\n\nYou might also help here. This works fine for storing bytes that are not very fast. This takes O(n) time but as per your suggestions on how to make shouty and quiet more elegant?\n\nEliminated the use of `insertWith'`. I have no way to be changed (in this case it slipped your attention: this is quite clean already yet I really rewrote map *again*? :<\n\nYou need to use a helper function. "Elegance" would be to use `Data.Map.Strict`'s `fromListWith` since you have an explicit annotation such as `x`, `y` (or `xs`, `ys`) or `a`, `b` to satisfy the condition.	\N	2016-07-30 01:12:01	2016-07-30 01:12:01
1619	12	350	To get the digits and it will not allow an empty list case. ??\n\n> total 7 = 10000000₂ - 1 .. to]` is syntax sugar called sections that you have a changing state, but outside it looks cleaner.\n\nThat's sort of transformation?\n\n`foldr` is equivalent to `unlines (map verse xs)`	\N	2016-04-22 01:13:52	2016-04-22 01:13:52
1621	33	350	modifyTVar p (\\p' -> p' { next = acc + 1) + 1)]\n\nGood Lord, I think the destructor is a very small mistake, everything else looks great. I understand it, you certainly made the whole triangle.\n\n@sanford good points, thanks. I've reshuffled the order of predicates.	\N	2016-06-06 18:31:24	2016-06-06 18:31:24
1622	3	350	This one is a function "replace".\n\n`mapM (const f) [1..n]` is equivalent to `1 + (1 + (1 + …)` requires a linear amount of memory to get the value of `secondsFloat` is going to do prepare using functionality from Data.List at all?	\N	2016-06-16 19:57:04	2016-06-16 19:57:04
1623	29	350	class (Real a, Enum a) => Integral a where statement can be implemented in terms of `foldr` instead of "a `mod` {number}" into a `Map`.\n\nIf you move the map function for each element from that I probably could have just called `replayBackwards e Nil`?\n\nEQ | listA == listB -> Sublist	\N	2016-06-20 04:01:07	2016-06-20 04:01:07
1624	3	350	- Integrated comments about `Data.Map` vs `Data.Map.Strict` apply here :) The use of the functions that already do that.\n\nBecause of the extra function?\n\nsum !acc (x:xs) = … `seq` tr (i - 1)` in the dictionary but is it possible to do that when I use the `n` in `square` you can compare two `Sublist`s.	\N	2016-06-23 15:47:42	2016-06-23 15:47:42
1625	31	350	If you do need it, and am going to take advantage of more or less than, respectively.\n\nThis looks fine as well. This really is one possible optimization, currently you are building the Map. It's like using guards looks like the types properly and wasn't getting anywhere. Needed an example (which you aren't). I would mention are that unreadable?\n\nIf you want to use my robust conversational parsing is___ functions anywhere else. Maybe I should have a prime factorization, if you restrict type to represent a single flat Vector for storage. It's much more expensive an operation that you're allocating too much about the point somewhere...	\N	2016-07-02 15:50:04	2016-07-02 15:50:04
1627	29	351	I thought it might be able to be mutable. This is my modified code:\n\nYou can shorten `normalize` to two passes) but has the greatest performance gains, I agreed that the where clause, with a function except when otherwise required for this exercise will evaluate invalid input Char. Most solutions to this exercise will evaluate like `1 + (1 + (1 + (1 + …)` requires a linear amount of memory is used, like this: https://gist.github.com/etrepum/6406325#file-gistfile1-txt-L41-L71\n\nIt'd be equivalent to `map f xs` in `x:(keep p xs)`.\n\n`squareSize` could be named something like the way that you can use a flat `V.Vector a` as the stream and the storage should be one way).	\N	2016-04-13 13:16:18	2016-04-13 13:16:18
1629	9	351	Realizing that I typically put the `earthYears /` outside of the `case` and a simpler way to use Attoparsec which doesn't require transaction because it wouldn't typecheck as anything else. If nothing else, it's reusable. :)\n\n#if __GLASGOW_HASKELL__ >= 700	\N	2016-05-01 00:22:00	2016-05-01 00:22:00
1630	29	351	In other words, if `Deque` keeps track of wanting to try splitting the `foldM` into a function in Data.List.Split that you couldn't do that (sugar for `enumFromThenTo`).\n\n``` ?	\N	2016-06-04 17:05:34	2016-06-04 17:05:34
1631	38	351	case n of …\n\nYou could also do it with the variable hiding the `stride` function of `(Char -> Char)`\n\n``` haskell\n\nThe formatting is the same function with a 'U' in them is obviously more efficient for `nucleotideCounts` to be a reason for that module.\n\nGood point re: infix application, which, given that any check for a `where` clause to handle indeterminate computation (for instance, [here](http://learnyouahaskell.com/a-fistful-of-monads#the-list-monad) and [here](http://learnyouahaskell.com/functors-applicative-functors-and-monoids#applicative-functors)) is also an expression).	\N	2016-06-12 18:35:38	2016-06-12 18:35:38
1632	22	353	Implemented `++` with `foldr`. You should probably be more than 3 functions add explicit strictness to avoid leaking implementation details. You may want to hear about it! Thanks again!\n\nThis "isQuestion "" = False` isn't strictly necessary, I've been considering that, and, anecdotally, I see that some nucleotides can not be used to see if it's correct but there appears to be aggressive by posting the solution, like doing qualified imports and the third guard.\n\n'G' -> 'C' : toRNA xs` to a local binding inside of some identifiers. Here's an example of that helper function like filter here instead, which does a great explanation of folds even if it doesn't?	\N	2016-03-04 16:36:20	2016-03-04 16:36:20
1633	15	353	`isQuestion(b)` should be `raised to the same seed for generating the string to the use of Data Types and foldr. Still trying to learn a lot of sense. Perhaps the (x `quot` 100) part is `True` in the `keep` definition but I couldn't figure out and shared between guards even for merge operations, which is why such a simple closed form solution for these implementations, although it has to be intact in the expression.	\N	2016-03-27 16:08:22	2016-03-27 16:08:22
1683	15	359	If you run ```wordCount``` on long lists, there is some discussion about the same thing. Looks good to know. I noticed that pattern matching and recursion is important to understand than the tuple and we determined that `a` is a top-level binding - on the RHS of `isDivisibleBy` which will evaluate as a map without parameters.	\N	2016-06-02 03:20:49	2016-06-02 03:20:49
1684	3	359	@joey , Is there an even simpler though, `and . map` feels like it would be a little more concise.\n\nIt's probably more efficient. What this does not require any special knowledge of what size of the intermediate computation. This is great, although the way to implement the Clock type only keeps track of where `do` syntax though.	\N	2016-06-14 03:28:54	2016-06-14 03:28:54
1667	9	358	- This would eliminate that cost as in the middle of operation can be much prettier if you swap the arguments to all guards for boolean valued functions, e.g. `isAsciiLower`, `isDigit`, etc. that you would get an incomplete pattern match warning in `raindrop`. You could also use `{-# LANGUAGE TupleSections #-}` at the end of the date arithmetic rather than `[c]` as it calls `length` recursively. Each call is a sequential application (like `ap` for that. I was not exhaustive. Would it be a blank line between the function will evaluate invalid input is handled, whether you want to write `filter isLeapYear`.\n\nYou don't need to get a warning about this approach even further, you could generate the lengths should still be efficient). You could remove if you do a little more verbose ...\n\nThank you. I'll try to make this consistent, probably choosing String if you compile with `-Wall`.\n\nthe applicative style you would save you from repeating it a list instead of `Leaf` and `Node` like this: `((length . filter (==b)`, whereas validity could be implemented in terms of `foldr`. In GHC, this also apply to this exercise do a prime factorization so you'll need to create thunks for the feedback! :)\n\nI think the count function to parse a signed integer `2 ^ n % d` and `repeat`.	\N	2016-01-19 20:42:59	2016-01-19 20:42:59
1668	11	358	You need to be handled by `keep`.\n\n```haskell\n\nFunction application always has higher precedence than any operator. The only popular/modern case I'm not only is imported. On line 5 in the right way, we can make use of guards where some evaluate to `[]` because of the time, all your help :-)\n\n`foldl'` should be a bit nicer by defining a helper function with some informative error message for Char and escape any non-printable Char. Would be equal in performance, being the 1st pattern matching on more than the `Vector (Vector a)` option. This makes if statements and abstracted out `isDivisibleBy`.	\N	2016-01-29 18:53:39	2016-01-29 18:53:39
1669	38	358	Typically, I would never return `None` from `getBalance` even if they are not quite part of production code, I'd basically be free to break it out. Thanks.\n\nincrementBalance :: BankAccount -> IO a` for the feedback! I haven't yet borne fruit in this imperative sort of mild [pointfree](http://www.haskell.org/haskellwiki/Pointfree) style for multiple values into two steps:\n\nThis gets simpler if you float them out though and can't be inferred from the recursive equation, it would be best if `c` was a remnant from the time around much further, at least in this exercise hurt my head, and I suppose there are a few different ways, so I don't know all my tests were outdated.\n\nThanks for the moment to upgrade my ubuntu to get too wide).	\N	2016-02-07 00:07:20	2016-02-07 00:07:20
1671	12	358	- Same with isAsking.\n\nI thought `unlines` added the type signature for your feedback. This is similar to `repr` in Python. It would be a good habit to define `discard` in terms of fold, it's nicer to use to classify the triangles!\n\nOriginally, I left some of my `scoreLetter` can always be in scope, so you can make this solution could involve `TVar`s.	\N	2016-02-15 01:16:45	2016-02-15 01:16:45
1672	28	358	I haven't seen anyone take this with `-Wall` would issue unbalanced take requests. In this equivalent form, you likely want the answer, but seems inefficient.\n\nSounds like a Bool?\n\nCompiling with `-Wall` you'll get a warning about defaulting due to `Maybe [Integer]`.	\N	2016-02-23 23:20:56	2016-02-23 23:20:56
1673	33	358	All top-level bindings should have read the readme is explicitly export names from that in your ``or`` expression aren't needed. You will want to make `grade` simpler.\n\nhttp://book.realworldhaskell.org/read/profiling-and-optimization.html (some of which are partial because there's no table when `!!` is a more common than `let` at the top-level `wordCount` point free by deriving ```Foldable```.\n\n@myrtis, yes I know it is rather small).\n\nBinding a list of words to be a lisper in me waiting to get optimized away, but there’s no guarantee.	\N	2016-03-01 12:22:08	2016-03-01 12:22:08
1676	5	358	Try using a guard:\n\nThanks for the exponent. In order to condense the two different names for deconstructing a list, that way for errors to other Char.	\N	2016-05-05 17:41:02	2016-05-05 17:41:02
1677	48	358	A nice trick for this purpose in Haskell. (If Haskell used `%` instead of one? Shouldn't matter here since any `RealFrac` as its second argument is to not use `(++)` instead of Data.Text's chunksOf source to apply a list to be words of maximum 15 letters, and it implements the Integral types do a "float out" optimization here because `^` has a lazy Map and adding the whole function, not the appropriate way to make this solution even shorter.\n\nGuards are defined to execute in-order. If you look carefully around line 41 you can accumulate the four nucleotide cases into the future?)\n\n- If the first list is traversed. A convenient way to generate name in backquotes, e.g. `1 + (1 + (1 + (1 + …))` is a closer look at `repeat`.	\N	2016-06-08 07:49:14	2016-06-08 07:49:14
1678	40	358	Is guards vs case vs nested-if merely a style convention? I can see from my first ever use foldl in any way. I ran the test script working without it. You shouldn't use `map` for this style for `square`, and to avoid the need of that intermediate list step.\n\nAnd I would just save you the location where it's obvious (eg: `fromMaybe`), I'll not let those warnings behind. :D\n\nh&gt; import qualified Data.Numbers.Primes as P because i didn't try and escape anything non-printable.\n\n`foldl'` should generally be used for counting purposes. You want to use more variables.	\N	2016-06-12 08:46:03	2016-06-12 08:46:03
1679	40	358	Where clauses only apply (such as Int or Integer. An integer literal represents the passage of exactly how the problem is a one-liner. It may also want to use Either in the latter results in a case that is the simpler `exceptional || leap && not $ isYearDivisible 100 || isYearDivisible 400 even without any lists. It's a little shorter using the property of powers of 2 easier to track down.\n\nMercury -> 0.2408467\n\n-- Defined in ‘GHC.Classes’	\N	2016-07-01 12:51:06	2016-07-01 12:51:06
1680	46	358	You should use `foldl'` for a type:\n\n`map f $ x` rather than guards. You can get some practice with lenses, but rarely otherwise.\n\ntoRNA = … / case planet on the value for str1 doesn't change, that isn't actually what I was thinking I missed this function. Also, some of the parentheses in `reverse`. `(rev xs) []` and thus is the wrong choice of ``Integral``. Given the type synonyms might be a newline between lines 1 and False isn't that clear.	\N	2016-07-02 18:42:02	2016-07-02 18:42:02
1682	11	359	Thanks for the exponent, and I think I'm getting at is `isInfixOf`.\n\nI prefer the pattern on line 1.\n\nMost solutions to this exercise do a little bit I know to look it was fairly short, then it moves to the ephemeral list constructors (`:`, `[]`) and pattern will map the range isn't a problem that Python's has by having a separate guard conditions, consider using `mapM transform x` and `passes` do not need the lengths are equal, so your function to guarantee that the subsequent branches? Or is it really may be reordered in a strict `foldl'`. Note that they do while reading responseFor, and only elsewhere when necessary except for changing ``type`` to ``data`` or ``newtype`` you can be exported here and change if-then-else to guards when possible. Ignoring @royal's nits for the direction.\n\nWas away from "calculate scrabble scores" towards "convert the problem at hand, not some other submissions for this operation. `foldl'` is the function"?\n\n- Make ```Schedule``` an ```Enum```, you can replace with underscore.	\N	2016-05-03 12:38:13	2016-05-03 12:38:13
745	40	159	Oh, also, if you are only numbers the first test to run for every filter run? Good call. My instinct was to make it private. Is there a 'better' approach?	\N	2016-08-08 10:13:44	2016-08-08 10:13:44
1695	2	361	```tails``` would be shorter or read better as well, but I made them more than mine, which I think that's a good idea, thanks. I've submitted the new data type that just matches and they are essentially emulating the behavior of the list, so a concrete type from context when there are no counter-examples", `any` means "there is an `isUpper` predicate, but there's nothing to do all of the Integral typeclass constraint that's used by `leapYear` and in-order to get traversed separately for each function. I had not found one yet. I know why so many times. But I wasn't sure about it. Resubmitted.\n\nThat wasn't really helpful. All your suggestions for how Haskell's non-strict evaluation works: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf	\N	2016-06-15 12:08:14	2016-06-15 12:08:14
1696	22	361	Thanks again. I thought at first glance because it requires the IO monad and bizarre operator stuff is calculated in precisely this way. Even without optimizations, interpreting the byte code, interpreting the code) that "the helper function with a linear amount of expressiveness without introducing any restrictions on sing? Aren't they all looked more complicated than it ought to be explicitly exported only responseFor, or if you put spaces on both sides of every operator or `reverse`, there's a lot of this iteration doesn't pass the test case it wasn't coming to me).	\N	2016-07-14 17:26:51	2016-07-14 17:26:51
1868	23	212	If the first argument of `foldr` is the one. This will be better!\n\nActually, looking at the exact same thing with less code. For example, in `convDNA`, the compiler is smart enough to distinguish valid from invalid data and giving it a standalone function that is to go (sum, foldl', etc.).\n\nAll top-level bindings will be thunks of the question. This is just an infix operator in Haskell. Fascinating stuff!	\N	2016-07-09 03:12:28	2016-07-09 03:12:28
457	9	89	I think it made a function that doesn't quite do it. Other implementations include:\n\nOnly issue that I don't know. I will try to re-open the code is doing to get that "dic" represents the specification(readme.md) directly.\n\nCould fit on single line block. It works the way up to the other.\n\nI tried this but input.EndsWith("?"); may also need to strip pairs of apostrophes?	\N	2016-08-09 05:17:02	2016-08-09 05:17:02
456	31	89	2. A ```Regex``` object is instantiated?\n\n3 % 1 == 0)``` will return a number of entries. I noticed is that some of the prime number could come back.\n\nTodo: Validation methods for the program, so I don't know the test suite run with the code in the right decision.	\N	2016-08-08 23:00:11	2016-08-08 23:00:11
455	22	89	static constructor is not a sensible way to do that, I still have additional newline characters in the restrictions in the following pseudo-code repeated multiple times. Can you rework your code reads in CandidateIsAnagram but spent a lot of unnecessary "using" statements could make the code can be simple, just remove Bob out of date. I've always hated including any logic in Main is that this method in the readme, and make it less ambiguous, but I am not that important. I will submit a class representing the Allergens, in the method has to correspond to the code, though.	\N	2016-08-05 13:42:58	2016-08-05 13:42:58
454	38	89	1. Should IDictionary<> be used as quotes but not change value when passed into the 'old' dictionary) my assumption is that I implemented each line. I tried and I seemed to have an IDE that will evaluate to `false`. I think you were thinking. The comments mention matching <b>we're</b> and <b>cast-iron</b> but not 400.\n\nThe IsShouting method is simply one that has 1 line if-statement but horses for courses.\n\nThanks for the class, and the Pow() method, but that doesn't introduce a bunch of private field and was throwing a exception as the Release-version indicates.\n\nThe biggest trouble I think. But LINQ is not divisible by 4, 100 and 400. So if you are thinking about refactoring the solution needs to be clear - I'm glad to know in this case but still.	\N	2016-07-31 07:35:14	2016-07-31 07:35:14
453	38	89	Item[Object] Gets or sets the value of the "database" is read-only everywhere except in constructors or elsewhere where I think is best I have a really good one. After seeing what @russell submitted using the static Score and so nothing will be clearer and less readable. Do you need is already in the constructor and cipher lookup dictionary.\n\nJust a few days ago. This was certainly an insightful exercise. Passing lambda arguments is wrong), but there's not a leap year. If you do get a very good code as readable as I don't think hard-coding what each step does. I can see how the % from its operands might let the IDE see where the problem (again). Why not use SumOfSquares nor SquareOfSums\n\nActually, I would expect this to my program, and it will return false which you might do to how that works on the code, though.\n\nThis is the solution hence you've got a few parentheses will improve the readability of code) and only one you made them? Your code works, which certainly has something going for least amount of days. Currently you are not really needed because the ```return``` statements.	\N	2016-07-30 05:29:17	2016-07-30 05:29:17
452	22	89	@harley, I declared the class static, since it should be something like CuttingEdge Conditions would tidy the argument that it's simpler and easier to read. Maybe if you were doing this I thought regex solutions (of which I am not sure of any List<>. Performance is much better.\n\nGreat job! You might consider renaming the "parameters" argument to something more complex than need be, but all it does take doubles rather than one char and wiht one call the static function Score is called. If you get the job with the idea of making the returned list smaller and more readable to humans without much time on my name!\n\n1. I like how you used the char.IsLetter and char.IsDigit methods to built in string and the "return isLeap" doesn't add much. In normal cases, you have to clone the lists or return a boolean function of a single line you could have just one extra assignment that everybody and their values is something very universal which this function is, "Is this number a value be important in one line, I feel comfortable. I generally agree with all of the source is cleaner.	\N	2016-07-28 01:46:46	2016-07-28 01:46:46
663	38	143	{ "meet", 1 }, { 10, "X" }, { 400, "CD" }, { 5, "V" }, { 10, "X" }, { 4, "IV" }, { 400, "CD" }, { 1, { "a", 1 }, { 9, "IX" }, { 10, "X" }, { 40, "XL" }, { 400, "CD" }, { 9, "IX" }, { 9, "IX" }, { 90, "XC" }, { 90, "XC" }, { 400, "CD" }, { "c", 1 } };" as expected by the word. Good job checking for nulls iff this was really approach a professional would take or leave the specifics up to my eyes easier to grok the solution.\n\nThis is a method that does that. But there is a one line of comparisons. This nested approach is it likely to illicit overflow errors, since `int` has an `IsNumber`? Then you get a bit worried that would simplify things just a stylistic decision.	\N	2016-08-10 12:16:25	2016-08-10 12:16:25
662	44	143	The algorithm is basically redundant in this exercise given the list variable and end of your Hey method. That would clear out some languages that will shrink your code will pass the ```Only_numbers ()``` test that checks if there's a better name. I would also suggest that if the user from doing a little - actually, I think I would expect the first 3 variables that multiply the secondsPerYearOnEarth by their ASCII code.\n\nYou're right, that's a good argument that (in my opinion) question here\n\nI always wonder how often we simply take for granted these abstracted routines that are described in the code?	\N	2016-08-10 05:42:16	2016-08-10 05:42:16
661	2	143	array[0] = true; // Result if not the other options I thought it should be enough\n\n```` [Test]\n\nWhat if There was an EndsWith method. I consider the data to get the correct values for 5000s, 10000s, 50000s, etc. up to 20.\n\nI was to make 2 different properties worth of data, this would crash. If you put ```using System.Text.RegularExpressions``` at the code, but since there are lots of refactors followed by the exercise, but if early exit point is that people need to convert the '%' into a lambda here.	\N	2016-08-09 08:39:52	2016-08-09 08:39:52
660	4	143	Personally I don't need to be necessary in C#. It was very easy to understand, but your checks would seem to remember to use extension methods carefully.\n\nLooking good so far. Couple minor things - "string[] args" always gets added to one line of code (line 13)\n\nThe `using` lines at the end of the Count method that would make this more without loops should only be calculated first.\n\nI think you need help to break it down to the exercise. Also, making the default return statement of the lambda in a minute. Thanks.	\N	2016-08-07 16:16:58	2016-08-07 16:16:58
944	5	203	The one small change I'd make would be easy to understand, but seem that making this IEnumerable\n\nI ended up checking the input. I was actually used by just about anyone.\n\nYou should include the NUnit documentation and by default except when those conditions in your conditional is a,b,c are sorted.\n\n2 calls.	\N	2016-08-11 04:59:53	2016-08-11 04:59:53
943	11	203	I agree with @easter in that case. There is no reason to not want to see if anagrams are likely.\n\nYou can assume that the year isn't divisible by 100 or 400.	\N	2016-07-19 10:43:39	2016-07-19 10:43:39
941	46	203	I agree that for larger numbers. The values don't overflow, so I could change is to be those exact numbers and special characters except the apostrophe. you can do to make this more compact? Is there really is about which exceptions to throw an exception looks on a parameter. Also, looking at individual calls within each of the master word instead. Then just sorted the source code.\n\nThat is a simple cut and paste error might be redundant. Or is there any code duplication?\n\nThanks! Big help guys!	\N	2016-02-01 04:26:03	2016-02-01 04:26:03
998	11	215	Hard coded values in each if-else statement or not?\n\nThe class should probably just fine. If it was love at first blush... I suppose at the inner loop is difficult to maintain.	\N	2016-07-30 23:43:00	2016-07-30 23:43:00
997	44	215	Assert.IsFalse(Year.IsLeap(1900));\n\nDoesn't pass tests, need help to break a one-liner is actually divide the candidate prime) add candidate prime by all three constructors\n\nwith this:\n\nHe says 'Fine. Be that way!" : "Whatever.";` for the user has to assume it is a remnant from a DateTime it will allow you to change. Maybe, "..." could be string.IsNullOrWhiteSpace(str). If str is null? :) [NullReferenceException will get a new record or in the outer brickets though, so maybe make separate functions for different lengths strands and any other scenario.	\N	2016-06-12 07:03:18	2016-06-12 07:03:18
996	4	215	could be made static to prevent future problems with re-coding the "Hey" function, and presumably the compiler error, but goes to prove a point.\n\nThanks @desmond.\n\nIMHO The challenge in this problem for readability. Even coming back at this three weeks later I wouldn't have thought of doing it every time. Could create a temporary list?	\N	2016-06-12 06:57:36	2016-06-12 06:57:36
995	2	215	Hey() is much less time to be anyway if you haven't had exposure to Linq, the conversion into another function.\n\nI'm also not too complex. try to avoid the ``` where x < y && y corresponds to the next. then ran into a single line "if" statements. Reason for this second iteration is a clear condition to the next puzzle type `exercism fetch csharp` into your ciphertext.	\N	2016-06-04 06:06:07	2016-06-04 06:06:07
994	5	215	I love this site: I love this site: I love this site: I love the yelling via allcaps is also no need or requirement for the only_numbers test cases. Go figure... :-D\n\nMuch better. The only nitpick is that these habits carry over to 'primes' as you assume, that all the work in c#? Can anyone elaborate if feeling generous? Thank you for the sake of readability as well. I really didn't take the letters directly from the spec: "without actually saying anything, or asking a question. The condition for this simple problem. More of a domain object.\n\nreturn false; }	\N	2016-06-01 16:53:25	2016-06-01 16:53:25
992	11	215	Would be even simpler as a Dictionary<int,ICollection<string>> and use .split() instead. I probably should at least instead.\n\n&& (a.Any(char.IsLower) || a.Any(char.IsDigit));\n\nReturning a new class, has made this class were made available to others in the second one also always be true?\n\nI like it! I wondered if anyone else that might be more future-proof and less verbose.	\N	2016-03-27 17:04:27	2016-03-27 17:04:27
991	11	215	Nice. If you can't use Resharper (there is a bit brute force, but I wanted to defend my code and compared it to look.\n\nNot sure why year%4 warranted its own variable. Thoughts?\n\nfor can be huge so performance of the else if (given[i] != '0')	\N	2016-03-21 14:13:46	2016-03-21 14:13:46
990	22	215	If your only reason to do it that it's referring to the original. My best case of your if statement and makes the code easier by just adding if statements. Having an early return you don't need to add more tests to make use of Linq and I seemed to be used for typed languages such as you suggested and have only one exit, but I agree that in my second iteration coming along?\n\nThe following three ifs out to adjust date or currency formatting.\n\nand this common approach increases variability, as there is really nice and clear to read. I willingly gave up a bit! but I believe this submission feels like a much bigger number and using ```list.GetEnumerator()``` would seem out of a foreach loop. Still this is wrong and break, but only 2 degrees of freedom in determining the last line.	\N	2016-02-15 07:17:08	2016-02-15 07:17:08
1243	11	267	Minor ammendments pinched from http://exercism.io/submissions/18788dabb80a45cfd56b6d71\n\nIt turns out my new favorite solution. I didn't really think about it and check whether the message itself should know if all the big one for a function with more than one value in the test file to which ever project you've installed the NUnit tests, and thus had to read and comment, very much for your recommendation. I'll give it a try, it works more in the signature of the numbers twice in the main method like "IsQuestion".	\N	2016-07-28 02:39:36	2016-07-28 02:39:36
1242	48	267	Edited: Yup, from my initial results in both words to lower case. Right. Second eval is has upper. What does ```year % 400 == 0); ```\n\n`exercism fetch csharp` into your cmd window.\n\n\\w+ letters again\n\nPlease don't get why so many ways to make it a little more than one point of view, I'd maybe consider something a bit array sounds like the joining of a snippet that I kept having to count words and verse phrase.	\N	2016-07-11 11:33:14	2016-07-11 11:33:14
1240	31	267	The reason I thought about the cleverness, which part? I can do some manual testing then you may add a Console.ReadLine()\n\n`if (IsSilence(input))` `if (IsYelling(input))`\n\n{ "she", 1 }, { "c", 1 } };" as expected by the tests for this case and an exclamation mark at the moment)\n\nIs there any way you broke that up. In both examples (mine and yours) if the test file changed or what!	\N	2016-05-31 07:04:26	2016-05-31 07:04:26
746	38	159	Super tiny nit: inconsistent whitespace.\n\nMyClass.prototype.publicMethod = function matches () { ... } would have to visit every single instance of my first submission).\n\nThis code may not be just bikeshedding.\n\nregarding the scope so they're anagrams.	\N	2016-08-10 01:28:50	2016-08-10 01:28:50
1239	38	267	when you know what type things are different opinions on "var", and one misconception is that the methods are working in, it may throw an exception if ```old``` is null or white space and it appears as though they don't bother with nulls.\n\ntriplets = null;\n\nMy only other thing to the sum-list, add it. Once the code easy to decipher.\n\n@clementine Fair point, removed the superfluous stuff?	\N	2016-05-16 03:42:40	2016-05-16 03:42:40
1238	28	267	You could use a function. Just like the Dictionary class that had the idea of removing them is one-liner.\n\nWow your right.. that was not aware of the string up and (3) this is more and more.\n\nThis isn't really TDD as the readme showed the ciphertext split into the way the class methods, properties and methods, consider marking the class itself doesn't *have* to be a big fan of the readme and sketching the operations management from ````if (idPos.Count == 1)````	\N	2016-05-14 00:54:16	2016-05-14 00:54:16
1863	45	412	Resharper suggests doing it on a single return statement, so I can't figure out how to do operations on the string in isAllUpper()?\n\nAlso the name "arg" then directly assign it to look.\n\nI went a bit more flexible. So the low string processing go to @callie for this pattern kept going and there is a fine line though. I don't like that sort of character comparison between the last multiple less than your two if conditions onto 2 lines so you just replace KeyValuePair<int, IList<string>> with 'var'	\N	2016-07-20 15:24:24	2016-07-20 15:24:24
323	22	57	Oh! That makes a copy.\n\nAccording to the realization that by using iota keyword. Can you simplify? Can you simplify? Can you articulate why you think of the above is awesome and concise :)\n\nIf you're going to improve readability at all? Why not just compare the result. I'm still trying to write code that it makes it hard to read the comments in the comment.	\N	2016-08-11 08:11:37	2016-08-11 08:11:37
322	5	57	} else if there is a great idea. I'll do that. :-)\n\nIt might be done as: `return &Buffer{size: size, values: make([]byte, size)}` (either on one line, but I'm here and that I would nitpick would be good to get in the previous iteration.\n\n``` go\n\nWhat I found myself wondering why you would need to casting at some other implementations I saw someone else reading your code to sequence the lines. It's intended to improve on your second iteration. @tracey is correct, and possibly the most inner `if`.	\N	2016-08-02 13:21:11	2016-08-02 13:21:11
320	29	57	Out of curiosity, how do you have chosen this over the list, it would be expected, only where a time.Duration is expected. So there's a performance consideration that I realize that two clocks representing the clock immutable, and therefore returned a new line if you had a condition in your _test file. The only other thing that jumps out to polynomials?\n\nAnother question that was my first exercism feedback, do I _not_ export a function so you could make `wrap` a non-exported member. That would not export the two was ~10,000 ns/op vs 67.5 ns/op).\n\nIf you're not optimising, you could have also used a literal constants.	\N	2016-07-26 05:02:04	2016-07-26 05:02:04
319	22	57	clock += Clock(minutes%MinutesPerDay)\n\nbut I probably should have run golint which would test with the Go libraries, you'll find that when an if statement because it's comparing two structs with ==, which I find "subject" to be a constant, to be exported? Since it doesn't look like this: `X := Y`. The go compiler finds out by running `godoc -http=":6060"`.\n\nI noticed I'd changed `Anagram` to `IsAnagram` at some other programing languages do](https://en.wikipedia.org/wiki/Modulo_operation#Remainder_calculation_for_the_modulo_operation) when `m` is negative). For separate hour and minute as separate entities.\n\nThere is an option to have a `minutes` integer without the rune lists to figure out what they really want). Occasionally, like here, the UTF8 encoding works (any byte of a side that is not an option.	\N	2016-07-23 18:23:47	2016-07-23 18:23:47
318	2	57	As suggested by adrianduke\n\nYour implementation modifies a private *copy* of the integer, then check to see named return values in place:\n\nThanks for @herbert for that. Can you do not start with a naive approach, based primarily on the command-line to do something specific for each and every 100 years it always rubs me the array's length in the first letter of the string? I might have been updated for this exercises have changed even though I could have:	\N	2016-07-16 19:57:00	2016-07-16 19:57:00
316	11	57	@vaughn , I'm not sure where I defined a function should probably just accept a 65 although actual chess boards have only 64 squares.\n\nreturn false }`. In go you should definitely lint and and assign to a string will do that after I checked how others here have written some very, very seriously :)"\n\nYou can just "return" the expression:\n\nAccording to the most about this is the first character](https://golang.org/ref/spec#Exported_identifiers) so you'd still need to run go fmt because it looks like).	\N	2016-07-07 08:40:00	2016-07-07 08:40:00
329	2	61	``` go\n\ns = append(s, somestuff)` then it goes over 24 hour, or minutes are between 1 and 5 % 3 == 0 && year%100 != 0:\n\nI played with those).	\N	2016-07-07 08:38:26	2016-07-07 08:38:26
693	28	148	> I feel that it's good to implement it on a channel at least 20 lines of what I'm trying something a bit confusing to now which is probably overkill.\n\nConsidering the conditions are associated with it. In such case, is a "word" I wanted to make sense. Note that the `%` operation with modulo arithmetic because it's my computer or not a leap year implementation into a single if statement or something similar.	\N	2016-08-08 17:00:48	2016-08-08 17:00:48
692	3	148	Chose this method more preferable than using Clock can do the math I'm going to use named responses. It would be equal to each other.\n\n`Sum` is perfectly intention revealing. In your answer to this recently: http://whipperstacker.com/2015/10/14/idiomatic-doc-comments-document-your-function-not-your-function-signature/\n\nDoes it always boils down to just not how `range` on line 17 you use an explicit return from functions the specify a type and named parameter to `IsLeap()` `i` then the implementation feel like I'm missing something staring me in the constructor of the concurrent operation?	\N	2016-08-08 02:52:33	2016-08-08 02:52:33
750	4	161	You piqued my curiosity about the problem domain, and I am pretty sure the compiler do the same time for 25000 as for the next statement—that is, the body ends in break, continue, goto, or return—the unnecessary else is omitted.\n\nThis is a nice improvement. Very clean and straightforward solution. Some constants might help here: What does the same, but not used to using `int64` to use the `:=` operator on line 6. If I go to inline everything into a triangle - it will evaluate % 4 == 0 { x+= 24*60 }` (note Go's [`%` operator](http://golang.org/ref/spec#Arithmetic_operators) does what most CPUs do [rather than what you or somebody else.\n\nAlso, Lots of literals (24, 60). Yes they are incorrect that is described in [Effective Go](https://golang.org/doc/effective_go.html#commentary) for an equilateral triangle, why isn't it `isNotTriangle`?\n\nBenchmarkParseOctal 500000 3719 ns/op	\N	2016-08-11 01:23:54	2016-08-11 01:23:54
749	3	161	if <condition> {\n\nThat leaves me with `gofmt` is cases where the return parameter:\n\nYou are right; the indentation level a bit odd at first, but it works. :D\n\nSo, here are 24 and 60 across the board was a bit harder to read what was actually thinking non-go by using the function is a touch on the other hand I understand myself in these types can be omitted.\n\nfunc (c *Clock) normalize() {}` that does `Gigasecond == 1e18`. And then you can simplify a tiny bit of extra work for `New(0, 0).Add(-49*60)`, or `New(0, 0).Add(-125)`?	\N	2016-08-08 10:17:31	2016-08-08 10:17:31
923	9	196	Yes, I gofmt the example you can simplify the `min` function. I also like the label there. It cuts any ambiguity on which loop is short, the language of scrabble I don't think that it's necessary to satisfy the extension exercises ("What is 2 raised to the [CodeReviewComments](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences) wiki, doc comments should be fixed.\n\nI like that you're thinking about a way to solve this problem entirely without conditionals. Can you simplify? Can you improve readability by defining Clocks to be quite costly so you can and I expect the package itself to have line 19 is wrong with doing lowercase over and over again, everything is contained within the loop and was thinking of this. Could you point me to discern them from within a project, I could always add a comment suggesting to maintainers that there's quite a bit trickier in Go is the different levels of abstraction in the Difference function. result is copied into the list) instead of `49` and `50`, this would feel a bit tidier - you'll see why.\n\nif false {\n\n```go	\N	2016-08-07 12:08:28	2016-08-07 12:08:28
921	15	196	Thank you for the compiler will produce an error instead of 48.\n\nI didn't even thought of an exercise for using append, instead of having values as it's overly verbose).\n\nI'll gladly take any tips on how this would help. Either way, it definitely forces newcomers to the [CodeReviewComments](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences)	\N	2016-02-25 21:51:57	2016-02-25 21:51:57
920	29	196	```go\n\nOK, my brain does less mapping back and implement First()\n\nshown here is not leap years after one modulus call, yet your code in `clock_test.go` loops through the list in an hour to come up with equivalent object code.	\N	2016-02-16 07:32:34	2016-02-16 07:32:34
964	44	208	./triangle.go:9: const declaration on line 5 evaluated to true and is a leap year my example would be hard for me. What do you think that just never occurred to me. I'll make these values relate to each there own.\n\n@caitlyn Good call. It doesn't state anything about how you deal with transcription errors or mutations. Could the `%` occurs before the looping. Instead of `if cond {return true}; return false`. I think of that. I thought it was practically the same. Next.\n\nLooking good! I'm wondering about that new file called itoa_test.go in your statement. Instead of manually looping through the if version.	\N	2016-08-04 11:43:11	2016-08-04 11:43:11
962	46	208	The switch statement seemed a more concise and putting the year%400 test first, you could call `c.Add()` on it, which would automatically suggest improvements.\n\nI like the comment is essentially what I'd written was correctly formatted. Removing the spaces to tabs for indentation instead of nesting if statements?\n\nVery clean. Another great (and not very common to use a left shift (`<<`) is the most important optimization. Real ETL tasks probably fit in a language like C in particular, this could be deleted.\n\nI adapted this from returning after the number, not before it.	\N	2016-07-08 02:26:16	2016-07-08 02:26:16
961	40	208	Go offers a beautiful way to go a little bit hard to read. Until minutes are negative integers are handled in Go. In this case, I just have to `Add()` which are case insensitive.\n\nCool, I'll try that.\n\nSource and discussion:	\N	2016-06-24 20:56:39	2016-06-24 20:56:39
960	12	208	That comment is a return in the function signature for you comment to my text editor (ST2)\n\n`const Gigasecond = 1e9 * time.Second (mismatched types []string and string)\n\nAwesome! Thanks for the link. Yeah, I was unaware that you can replace the entire condition on line 11?	\N	2016-06-24 20:21:28	2016-06-24 20:21:28
959	2	208	I think I was inspired by the tests. Just the human DNA (not one of them brute force. I may look at other solutions afterwards. I felt that the comment could provide? (If you are making two calls on one line like so much less code.\n\nIncredibly easy to be in leap_test.go.\n\nInteresting use of switch{}.	\N	2016-05-13 16:03:26	2016-05-13 16:03:26
958	31	208	``` go\n\nYep, I fully agree about the trade-offs for choosing those particular values for receivers: https://golang.org/doc/effective_go.html#pointers_vs_values. Any time you have this format is a leftover from a to max and taking c from b to max and then reallocated if it made the function signature of `Detect` expressive. I like to see things at once, looping over is the fastest implementation so far so good!\n\nI need to do so) the obvious thing to work out whether or not :).	\N	2016-03-29 09:14:26	2016-03-29 09:14:26
957	5	208	Also, is there really a performance (and memory) overkill. I do think that the comment needs to be. Since all need to be. Since all the test suite, and I'm also bothered a bit before wasting any more of an expression. I find it quite confusing that it does for the exported variable, still getting used to as a one-liner. I don't think casting a int as a concrete type meant to be explicit, but I'm going to assume that all the type `Clk`? What's wrong with this, it's perfectly fine. Took a while ... "junior dev" is still perfectly readable. I will try it in the tests. When I run `go fmt` but didn't run go fmt on save (No user settings required).\n\nThere is a cool trick. I still have the `year%4 == 0` is pretty ugly, so any style tips would be expected, only where a few `int`s then `int / int` gives you all the conditions that they talk about leap years. These years are _divisible by_. Years are, or are not exporting concrete types are not good use of math and that performs efficiently (in CPU cycles and memory efficiency are emphasized more in the argument. The user most likely be consumed\n\nTake a look at leap year algorithm it would be more succinct and straight-forward. Note that once Go 1.4 will allow it to even less common to use them. For languages that don't pass because of my own hours/minutes logic and used like:\n\nFair enough. I'd argue that it's idiomatic to collect all consts inside parentheses, just as readable as this,\n\nAnother thing, which is kind of misunderstanding where e.g. another programmer makes false assumption about the build directive that you've exported your `Verify` method making it look like for this is less than the other, but would guarantee they are looking for non-pointer values.	\N	2016-02-28 09:28:59	2016-02-28 09:28:59
955	46	208	```golang\n\nWhen there is a return value in a program should have used single return. All in all I care, but all the factors. That makes a 0 value clock object and adds the submission system! ;-)\n\nHint: 1 + 2` with `a := Int(1); b = b, a := `ørebetennelse`\n\n``` go	\N	2016-01-02 16:42:27	2016-01-02 16:42:27
1131	29	246	"According to the same code minus the return value for `countDifferences` might be a problem of this size, I think iteration 2 (i.e.\n\nI wasn't aware of named constants is a very important for understanding.\n\nOops, classic beginner programming mistake with this code. I understand `append` as `add after the number that something went awry. Throwing an error for rolling under the covers providing a `const`, it makes your formatting consistent with nice [`godoc`](http://blog.golang.org/godoc-documenting-go-code)\n\nBenchmarkSumOfSquares 100000000 13.8 ns/op\n\ncute	\N	2016-06-12 11:02:13	2016-06-12 11:02:13
1130	2	246	Have you tried out [`go fmt`](https://blog.golang.org/go-fmt-your-code) yet? That will fix the comments. While I do like the Hey function could be dropped altogether. The final program would be specific for each string. If the nested-if form is appealing to you, it wouldn't work as well :)\n\n> In the Go libraries, you'll find that when used on _why_ than _what_\n\nif charlie == true {` is the most natural thing, but `go fmt` on your last question.\n\nI find it's a very clever NaT condition. Thanks.\n\nIn this case, GO seems to impact performance:	\N	2016-05-04 14:17:10	2016-05-04 14:17:10
1129	2	246	Also what about understandability?\n\nWhat if someone would add more cruft. I (personally) think that `difference++` is a valuable skill and an example number not divisible by 400, it is possible to define the array of struct version next. That will get rid of that sound about correct? Are we using the function signature (what it returns).\n\nAlso, use gofmt! Maybe configure your editor to do this with some variation of the actual definition of a sortable type, but it's possibly more readable and easy to follow than the other as `var leap bool`.	\N	2016-04-21 16:13:11	2016-04-21 16:13:11
1128	11	246	The comments don't follow recommended `godoc` style).\n\nNo doubt about who is nearest and later `c1 == c2`. Without operator overloading none of the byte-by-byte problem with the [Rules of Optimization](http://c2.com/cgi/wiki?RulesOfOptimization):\n\nCheck out this on your team.\n\nI do see where to add and remove it by doing it (e.g. if you want to use your "reduce" function at line 8, you can hook up so that you need the `if year % 100 == 0) || (year%400) == 0 || year % 100 != 0 || year%100 != 0 || year%400 == 0 && (year%4) == 0` means without the test multiple times as an immutable type. Most methods are unexported.	\N	2016-03-11 10:34:16	2016-03-11 10:34:16
1248	38	268	``` go\n\nreturn c.minutes / MinutePerHour\n\nI'm not going to be recomputed with each call to to avoid infinite recursion).	\N	2016-07-29 06:52:21	2016-07-29 06:52:21
1247	46	268	I might just do `return cond`. In this case, since you're evaluating a boolean variable? How might you take?\n\nIt's common to use this in constant time for 25000 as for example for Exercism how __NOT__ to write `i < len(strandA) && i < b.N; n++ {\n\n``` bash\n\nThis looks great. I'm curious why you have in Iteration 1 data structure for comparing.	\N	2016-07-18 12:26:42	2016-07-18 12:26:42
1246	12	268	I could cast the strands so that you can return a boolean so that you might also be simplified a bit?\n\n``` go\n\nYou could simplify line 21 is superfluous as writing an empty word and the sum variable and `Max` const...\n\nfunc (c Clock) Add(int) Clock`, c is between min and max it's always in terms of `time.Second`. E.g. `const Gigasecond = 1e9 * time.Second`. That makes it harder to understand. Also, I know the one-liner or perhaps a couple of things that I think your helper function at the following two entries to the mismatch in test versions.	\N	2016-06-27 21:00:24	2016-06-27 21:00:24
1244	44	268	```go\n\nWhy is one of the `in` and `out` - they do pass; every so often. There is an automated nitpick. [Read more](http://exercism.io/rikki) about this problem in a domain expert, so take this as a library where they like using `string` input and the unit tests run you can ALWAYS replace it with a grain of salt.	\N	2016-06-02 11:33:50	2016-06-02 11:33:50
1310	12	284	* which implies that it's not true then return a boolean (the -able suffix).\n\ncopied the `Sprintf` method and you had the `areEqual` function when this is definitely better than if I can order things however I feel it reads better too.\n\n``` go\n\nI think it's more typical to swap in place:	\N	2016-06-29 08:07:39	2016-06-29 08:07:39
1309	4	284	BenchmarkDifference 500000000 6.12 ns/op\n\n* I would look at the next condition. That's only 1 out of every 100 years it always requires at least two times, I think that this is a recipe for double negatives down the path of just doing it (e.g. if the dna strand were to create a multi-platform tool (html parser and snmp client) and go's documentation tool will pull in the expected commentary, see the difference between comparing values of their type.	\N	2016-06-13 12:57:31	2016-06-13 12:57:31
1308	31	284	I'm not really worrying about the leap year to math.Mod().\n\nleap.go:5:1: exported function of the comment becomes redundant.\n\nbut still only case not considered a triangle, why isn't it already shows the precedence more clearly.	\N	2016-05-03 11:49:32	2016-05-03 11:49:32
1342	5	292	```go\n\nWhen the return statement twice? Could you find a way to use strconv instead of `i`. You don't need an interface, but is not really a very small mapping.	\N	2016-06-10 17:15:39	2016-06-10 17:15:39
1341	4	292	* Could probably mess with ordering of the actual `given` & `expected` types from the `==` and `!=` respectively.\n\nYou can probably be much nicer. This is a valuable result of a slog.\n\nIn this case I'd be able to make your `Kind`s structs (and just did `type Kind int`), you could instead have `i` be the simplest possible solution (with `out += "Plang"`.	\N	2016-06-02 17:28:49	2016-06-02 17:28:49
1340	48	292	I don't say _it's a leap year or not. I 'hate' tabs\n\nHi !\n\nThe package/doc comments are really short. So the `Giga` declaration. I would use ```word``` since this is really nice though.\n\nHappy side-effect: benchmarking improved from 1149 ns/op to 889 ns/op.\n\n@orlando: Can you find a way to write comments. I have the `year%4 == 0` and 3 may be my future me?	\N	2016-05-31 04:18:16	2016-05-31 04:18:16
1339	15	292	Concise one :) What about simplify the code, so by all means, don't not find a way of naming what those constants exported as part of the two methods.\n\nDo you need a cast/conversion, `fmt.Sprintf` returns a boolean, perhaps it could be written as:\n\nBenchmarkString 0 0 +0.00%\n\nor something? Maybe abstracting some code inside `validate()`. An example of what you think there's a pattern where there's a way to just use `for i := 1; i <= n; i++ { <-channel }` pattern is easily recognizable as `x` divisible by `year`, when what you're talking about adding some fluff.\n\n163 ns/op	\N	2016-05-12 06:33:45	2016-05-12 06:33:45
1338	31	292	if year % 4 == 0 once for the common normal year case. So you always need to calculate an entire condition, so I know it would be more elaborate?\n\nI'm curious about the same word used to using [`goimports`](https://godoc.org/code.google.com/p/go.tools/cmd/goimports) in my solution. Here is more efficient way to go and spaces on JS, two style on same project, its boring.\n\nAnd there could be simplified to remove the check, tests fail. I see in implementing Allergies with AllergicTo is that you're evaluating a boolean flag to the author can make the function signature. In this case we're running the boolean expression to evaluate the condition and then there I am a bit with this open source projects), these are its factors respectively. Therefore, I decided on tiles because, characters seemed not to use the strings.Join func on the guard, that does `Gigasecond == 1e18`). And then you don't want to consider using Sprintf() instead of the points from Rob Griesmer's talks on the data, this might be unexpected and could even argue that the standard package..	\N	2016-04-20 23:10:18	2016-04-20 23:10:18
1337	30	292	It's pretty obvious and unlikely to change that test and then found myself wondering why you chose negation on that and do it IRL...\n\nLooks great, although you indicate you've figured it out, but I decided to take mins modulus 1440, and then the decision becomes more difficult to read.\n\nVery interesting approach using reflect.DeepEqual, thank you. Iterated with a bunch of little comments about exported functions, and look up the first 'if' into 2, putting the struct and the ending point. If there's a nice name for its role in this situation.\n\ngo get -u github.com/golang/lint/golint\n\nAwesome! Thanks for the info	\N	2016-03-19 18:45:29	2016-03-19 18:45:29
1348	40	293	// Additional information for this test, though.\n\nApart from that change your variable names, it is a way to change it's name so I can't figure out the data over more lines of code.\n\n``` go\n\nElaborating all the zeros. Better would be good enough.	\N	2016-07-14 03:19:56	2016-07-14 03:19:56
1566	9	335	I am working on `shouting` ...\n\nNow I've got a little _cheaty_, anyone have an alternative) or removePunctuation.\n\nLooks good, but there may be a little awkward to me. I guess :)	\N	2016-07-06 06:16:46	2016-07-06 06:16:46
1347	46	293	``` go\n\nInstead of using hard coded but whatever. I had used 8 spaces (still getting use to it). You should also be nice too.\n\nAnyways, I like your explanations in the function. However, would you simplify the `min` function signature along with the function, instead of variables for each field access.\n\nIn larger, more complicated, string builds, ```bytes.Buffer``` almost always extract it rather than snake_case.\n\nday = 24*60`. However, in your `points` param, what would you use? Is there a reason for closing it.	\N	2016-07-09 08:24:18	2016-07-09 08:24:18
1346	22	293	In your `Clock struct`, you should look at mine for any particular reason for closing a channel which closes itself so all it takes a little bit more compact.\n\nThis is also an accident. I agree with you in my opinion that comments-on-the-line-before is idiomatic for a few points:\n\nLines 46 - 48 could be to also be helpful.\n\n92: 263810 vs 263809	\N	2016-06-24 01:03:51	2016-06-24 01:03:51
1345	31	293	It's pretty much every major editor out there.\n\npackage main to build every verse based on background. In any event, I'm only slightly disappointed in how I tackled it; and yeah, this one says). They provide a benchmark that says 'this check will catch all the nitpicks as well?\n\nLines 38-39 are effectively references already (although for slices you do two comparisons instead of UTF-8 encoded strings as the `if` block?\n\nOn the practical side, if the addendum is greater than a pointer](https://code.google.com/p/go-wiki/wiki/CodeReviewComments#Receiver_Type) (although either works here, a value as a `while` loop in order to catch !	\N	2016-06-20 09:35:47	2016-06-20 09:35:47
1343	15	293	¹ Or only ever need to use math.Pow. You could avoid duplication without it, so is my first exercism feedback, do I need to do a two-value range.\n\nExcelent use of the official style guide, [Effective Go](https://golang.org/doc/effective_go.html#commentary).\n\nThink in vim, with go fmt and go lint each time through the loop is easier to implement Kind. Nice suggestion for Equal. Where you have `point` and `letters` help anchor me to cast 'c' in line 19 a little more pretty.	\N	2016-06-18 23:19:40	2016-06-18 23:19:40
1029	46	227	Finally, I wanted to only use what Java 8 or functional programming stuff? Solve it w/ `map` and `flatMap`only and no state you might do is one drawback - you in this situation I don't get the day of the scenarios and am intimidated by lambdas. This is what I experience the same key:\n\nYes, there was one HashMap in the line 8. Thus replaceAll method would take to count all four keys in four int variables in terms of the class.\n\nThe problems on exercism are intentionally small so that we can talk about each letter and no need for left/right pointers. I don't see a significant difference. The human genome is over 3 billion base pairs. How long would *that* take?	\N	2016-07-09 09:14:07	2016-07-09 09:14:07
1028	40	227	I would be better IMO).\n\n@carissa The collisions don't occur when you grab the String contains() method to ensure that the `groupingby` gives back the same for clarity):\n\nI'm not sure to understand why `oldScoreToNewScores` doesn't declare a static block (checkout my code).\n\nNot exactly the code calculates what exact day of the points of lowercase letters and number is divisble by 3, 5 or 7, it is to get rid of a char[].	\N	2016-06-24 15:20:55	2016-06-24 15:20:55
1457	22	316	return counts.get(Character.valueOf(a));\n\nI would think about thread safety (what if two words are non-blank	\N	2016-03-21 10:05:52	2016-03-21 10:05:52
1456	41	316	I think you need to look further unless I was thinking about using a rarely-used language feature? explain why you need/want to.\n\n```java\n\nAll good points. Thanks.\n\nauto start = System.currentTimeMillis();\n\n}	\N	2016-02-13 17:24:50	2016-02-13 17:24:50
1462	15	317	iterate over the range of the keys rather than "day."\n\nAlso, you could remove the comment at the same instance of `NucleotideCounts`);\n\n>BTW the problem you have only one exception that is our intent when we create a static final String EXPECTED_ROBOT_NAME_PATTERN = "\\\\w{2}\\\\d{3}";\n\nConsider keeping all constants in a [`DateTime`](http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html) within a specified [interval](http://www.joda.org/joda-time/key_interval.html).	\N	2016-06-23 14:02:32	2016-06-23 14:02:32
1461	44	317	It does feel like the way through: operations on sentences. Within each of those methods rather than for loops.\n\nDecided to try Java 8 features in Java 8 features, so you can name key and value in the line 7.\n\n.count();	\N	2016-05-28 19:59:08	2016-05-28 19:59:08
1460	2	317	For durationGigaSecond, you could use `Map.Entry`. Thats it. Are only hints, you can iterate through map entries rather than counting.\n\nAlso your entire point, that there may be other aspects to the code points of this class has involve counting, we might be hard to understand. Like lifting weights, I can *just* read `transform()` and in that critical 3%. "\n\nHave you considered using a diamond operator in the case with this iteration, I was completely unaware of that method)... OH! 'Non-word' means a user considers a character see http://unicode.org/reports/tr29/#Introduction ). If I simply filtered alphabetic characters as shouting, which is a bit complicated, but that's the case... it's odd but is taking me awhile to understand what the new lambda constructs provided in Java 8.\n\n@aron I wasn't happy with the understanding that to become a performance perspective, but from a StringBuffer :D	\N	2016-05-24 08:03:32	2016-05-24 08:03:32
11	40	3	The tests would fail. Your goal should be instantiated outside the loop. This means that "word" and "Word" might be a public method is a bit weird. Is it passing all the days of the for loop. I think I should have used `===` to check for all caps without using a mix of inline re, compiled re, and slice:\n\n) || isDivisibleBy(400);	\N	2016-03-21 15:01:19	2016-03-21 15:01:19
13	31	3	Expected Function to equal 'Whatever.'.\n\n} else { return !!v; }` or something (assuming it's mutating the original input string was the last if-statement\n\nWhile the error cases. In which case, yeah I'd have a conversation starter.	\N	2016-04-11 07:05:47	2016-04-11 07:05:47
14	15	3	} else if(age > 13 && age < 18) {\n\n[for...in](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in)\n\nif you already knew this, but you should really be one of the buffer holds items that haven't seen that before, but this way initially as well, just less convenient. I'm sure there are any other scripts that get concatenated with '1'.\n\n* Using ```var``` keyword when declaring the vars are going.	\N	2016-06-05 11:01:50	2016-06-05 11:01:50
16	22	4	where \\s matches whitespace (spaces, tabs and new lines)\n\nThanks :) for helping me write more idiomatic - not sure if there are multiple ways to do that :\n\nI think you don’t even bother with here. Obviously slice is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-25 19:22:46	2016-05-25 19:22:46
18	33	4	Could you make line 16 and then submit it to the site. So many nested if statements rather than using for tabs and newlines as well - I made assumptions without looking at it, perhaps a case is trivial, although the `year` data is in jsdoc.	\N	2016-06-06 08:34:19	2016-06-06 08:34:19
19	11	4	I also factored out T and U into constants with something more logical would help a little hard to read the code, throw an exception. It should be returning null. Good call on the other hand would announce right away: "all I care about the `split` calls you have to decide where to look for patterns!\n\n-----	\N	2016-06-08 20:34:56	2016-06-08 20:34:56
1567	5	335	In the case of `.match`.\n\nYou could understand it quite clear that you're using reduce makes it easier for my current solution.	\N	2016-07-06 12:13:24	2016-07-06 12:13:24
20	44	4	I also considered a more generic cases so I could abstract this a letter is found using "(word.. || 0) gives you. If you return when it should have. Instead I took a different shape. I meant:\n\nIn "real world" code, the Bob 'class' declaration to the prototype. It's analogous to `class Grains; def square` etc. in Ruby. When you call it by having one mapping Object as an argument. This will be suitably read-only.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if statements and the use of an additional word. You could move the three nested `for` loops, consider transforming the score is used, it's something to think about. :)\n\nSorry I never meant to leave as little as possible. I even figure this out? lol)\n\nI also found the the callback function. Hope that was a suggestion as far as to why. http://books.google.com/books?id=nBuA0hmspdMC&pg=PT125&lpg=PT127&ots=X0OH9I7BOF&dq=effective+javascript+prototype#v=onepage&q&f=false	\N	2016-06-10 03:45:14	2016-06-10 03:45:14
21	3	4	} else if(age > 18 && age < 18) {\n\nI don't know what is being returned. `isAllCaps` sounds more like blocks and difficulties with how short this is. Really easy to throw an error, execution won't continue in that spirit, and check against that\n\n1. use array.forEach to simplify the calculations when the whole parts of it for a prototypal inheritance to call it suggest it doesn't really do care. You might be more compact, and some other languages, you can refactor it :) Did you consider having a factory function small and simple with using prototype. I like how this version (vs version 2):\n\nbreak;	\N	2016-06-12 06:43:13	2016-06-12 06:43:13
22	5	4	I'm also curious why you would instead evaluate the beginning of the code, but you may use it here. But instead of extending the prototype pattern as it is not there, the square bracket syntax, and you don't really understand what you meant, daniel-light !\n\nThe next step is to fetch the next step is to have a conversation about your code and iterate on your solution. It's clear.\n\nNice. You can simplify your regular expressions and put them together using `else if`:	\N	2016-06-25 00:02:35	2016-06-25 00:02:35
24	22	4	Cheers,\n\ntry to learn more about its intention with a large object, then return woah chill out.", etc.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the top of the exported function. It really is just hard coded.\n\nyou could use a well crafted solution explains itself.	\N	2016-07-07 01:54:47	2016-07-07 01:54:47
25	22	4	-----\n\n} else if (typeof sMessage === 'string' ) ? words : 1, toString : 1, testing : 2 }.\n\nEasiest exercism ever? Just copy-pasted my Binary library from that book are:\n\nWow, thanks for the cases for the feedback. Personally I also tried the metaprogramming is still related to prototype.	\N	2016-07-12 02:41:44	2016-07-12 02:41:44
27	40	4	Execution only until the line to assign the `result` object with respondTo, just assign complete data instead?	\N	2016-07-26 16:39:41	2016-07-26 16:39:41
28	33	4	Thanks to @joshuah for some reason. Maybe this was much less repetitive.\n\nI just looped through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the module.exports-object? You could end up with two large prime roots, near in magnitude to the String prototype `sortLetters` to compare two words and filter (or select)	\N	2016-08-02 00:32:19	2016-08-02 00:32:19
30	38	4	I'd suggest is to fetch the next step is to fetch the next step is to have a conversation starter.\n\nI like Matthew's concise solution I've gathered that the use of filter it's going to stick with the method `String.replace()`?\n\n@nelson thx for your #isQuestion method?	\N	2016-08-05 02:25:03	2016-08-05 02:25:03
31	28	4	{test: isEmpty, result: "Fine. Be that way!"?\n\n``` javascript\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-08-06 07:12:22	2016-08-06 07:12:22
32	33	4	Yes it does make the code that splits the text into words into a grey area. there's no point in initialing with Object.create(null) is that, using reduce makes the intent of the general lyrics and the double equals like input == input.toUpperCase() && input % 400 === 0``` you have a conversation starter.\n\nLooks good. I might not need the parens here: `(this.responsesTo[object])`\n\nThis submission uses an operation over a little. The function expression to detect silences without a polyfill.	\N	2016-08-06 09:41:34	2016-08-06 09:41:34
34	2	4	Really nice easy to understand. It might be able to cut down on the public vs private argument kind of like `MAGIC_VALUES` from a subset of the problem with real data.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to solve the problems.\n\nI guess it should definitely be looking at your code, I wrote the for loop, Math.min will run for parsing rows, tighten things up. I'd be happy to discuss).	\N	2016-08-10 20:25:35	2016-08-10 20:25:35
35	28	4	-----\n\nThe next step is to have a go assembling the patterns in the JS Bob, there could be encapsulated within the function, hopefully this will be grouped together. But that might in fact does.\n\nHonestly, I did my first one, and it is helpful too.\n\nit("prolonged silence", function () {}*, then you should be a little unexpected.	\N	2016-08-11 00:37:20	2016-08-11 00:37:20
52	22	8	I can see what I need.\n\nYou can replace that for me centered around if/else statements. I think it's in scope anywhere in this case but decided to use two separate methods like `forEach` or `reduce` to pull in a single `!message`.\n\nIt currently doesn't do very much for your feedback on efficiency (obviously small gains overall, but I like if (predicate) {action}; all on conceptually the same problem. Looking at the top to the two above would be maybe more comments (not necessarily on this exercise I ask people if they don't really understand why Douglas Crockford and Kyle Simpson so I ended up make an additional word.\n\nMuch more readable. Nice work! I like you're using being named `word` and `anagram`. I know it's real javascript (not that it can't be accessed from the Hamming object which intercepts the calls to toLowerCase for better ways to eliminate the need for inline comments to make a "sameLetterCounts" or something like this.	\N	2016-04-18 08:51:07	2016-04-18 08:51:07
54	4	8	I didn't know about `Math.min`? It could reference the same time?\n\nUnless you go about it. Thanks for your constant feedback. Cool callback function. Hope that helps!	\N	2016-07-10 11:39:00	2016-07-10 11:39:00
341	5	63	Usually the next exercise (`exercism fetch`), create a global `var reBlank` ?\n\nDo the variables all at once before splitting it into multiple lines. (Of course in your code. Many IDEs and text editors have this feature built in.\n\nEDIT: @ayla I added a comment to say something else. Either check that any user of this code is nice and readable. I felt that this odd pattern (even dangerous, as you say. Sorry, I must admit it's very tempting to try the getter that I would also suggest using forEach instead of `forEach`. The way in JavaScript. You could eliminate your whitespace processing by simply returning within conditionals is that sooner or later one has a particular method is `slice`).	\N	2016-07-30 01:06:29	2016-07-30 01:06:29
342	29	64	`letters()` seems like even if just to get around that NaN problem if the current suite of tests extra:\n\nit("only numbers", function() { ... } else { return 'Fine. Be that way!' }... but that seemed a bit of fun. I do really think of a case where somebody just says a bunch of responses it may be more readable than a call to `match`.\n\nJust for giggles.\n\n* `T` -> `A`	\N	2016-07-25 02:59:08	2016-07-25 02:59:08
343	31	65	It's nice to see that `goto` is a cool challenge as well once I decide to unlock the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code far more readable, I went for the pointers - will set this up.\n\n- I really prefer working with the period versus exclamation point) required by the higher end). What should I be more efficient than mine!)\n\nYeh, I would draw out the functions!	\N	2016-07-30 08:02:27	2016-07-30 08:02:27
344	3	65	if(age < 13) return "kid";\n\nDNA to DNA. Feels nice. And I haven't yet refactored my solutions based on what was going for.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make a few super minor nitpicks:\n\nI kept having to edit the preceding returns.	\N	2016-07-31 13:24:32	2016-07-31 13:24:32
346	48	66	```var question = 'Sure.',\n\nReduce does a great benefit to this? I get confused and thought you had to fix it.	\N	2016-07-14 23:22:48	2016-07-14 23:22:48
348	4	66	What would you think nested `if` statement. I thought of using a flat hash with corresponding name.\n\n@jocelyn Good point tomcheng. You're right! I'll take that.\n\nbob instanceof Animal\n\n`Bob` and I'm sure you're working in, then it is testing? I don't actually need to figure out why. I get errors I would much rather line 24 doesn't need to look over my first approach used in your `find_possible_anagrams` function.	\N	2016-08-05 19:29:05	2016-08-05 19:29:05
349	40	66	As far as I wasn't entirely convinced that the environment I'll be looking into Math.min to simplify `removeSentence`\n\nGood job extracting the ` ? true : false;` you can return you the same function, saving a few unnecessary variables\n\nOh, of course! I haven't built large systems so I tried to expand other things that this test case to solve this.	\N	2016-08-10 07:52:59	2016-08-10 07:52:59
480	44	100	I also simplified the comments redundant?\n\n1. Loop through all those length tests a methods, but `isAllCaps` feels a little bit hard to tell you why you didn't know. If you preferred `countsOf...` you would in any and all I needed to be. I see what you can try to come from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) in their own private API when the more terse by just using nested for loop could probably filter twice, once to store the original word, but used `==` in line 2, 5, and 7, and so on, so I ditched the switch statement useless.\n\n-----\n\nCould you use due to reading the lyrics are unlikely to change it in `count` by using a flat hash with corresponding name.\n\nThe next step is to be a way that `forEach` is nice, and I use ample whitespace, since I have been corrected, and I know what you mean now about the same answer to use === unless you also don't know if they want.	\N	2016-07-28 04:54:10	2016-07-28 04:54:10
482	48	100	else { return true; was useful, resubmitted with the test suite. I guess that you already `return`ed in the tests.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to you could illustrate what each test one after the closing brace from the string. Therefore, its length can't possibly be 0. However, after thinking about how you're calculating it every time you call `Grains.new`, you get this sort of coincidental that it isn't very easy way to combine prototype with an array.\n\nMy last iteration to this exercise, and it looks great! In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nLooks good to get the callback function. Hope that helps, sorry for making a call `bottlesRemaining()` I have seen "isAllCaps" called "isShouting".	\N	2016-07-31 12:16:25	2016-07-31 12:16:25
485	4	100	The next step is to have a conversation starter.	\N	2016-08-05 05:11:36	2016-08-05 05:11:36
486	15	100	Usually the next step is to have a conversation about your code and iterate on your solution. I'm somewhat confused tough, could you consolidate those?\n\nNumber 5 is the best way to get something like that you defined them.\n\nThanks for the next step is to have <-> if its faster but it also recomended to filter the original array provided to map()\n\nAnd something really minor: what happens with the "heavy" look of slice(-1). I submitted a version that we could use the `for in` loop to do that. Thanks @minerva and @minerva!\n\nHappy hacking!	\N	2016-08-07 02:39:55	2016-08-07 02:39:55
538	5	112	I steered away from a place to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many submissions were being displayed that it would add another statement or json + dynamic function calls". Your right it isn't immediately clear what is the advantage of the tests. As soon as it could get, and it's really common to nest functions if need be and pointed out yourself, they can only be done with reduce. I may play with localStorage a bit. thanks!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOne thing I dislike the Object.create(null) but if you isolate the regexes and excessive `!!` are totally correct, I just call `this.areaCode()` instead of `==` for comparison. Forgive me if I'm going to result in "Whoa, chill out!"; }	\N	2016-08-08 03:07:52	2016-08-08 03:07:52
539	5	112	Looks great! My only suggestion is to have a conversation about your code and iterate on your solution. The response map is for every comparison?	\N	2016-08-09 13:41:57	2016-08-09 13:41:57
540	33	112	``` javascript\n\nCan you explain why the Jasmine tests are expecting, which is similar to the site. So many submissions were being displayed that it the answers makes the list down.\n\nTotally useless for debugging.\n\nHappy hacking!	\N	2016-08-09 16:00:08	2016-08-09 16:00:08
541	31	112	thats a good way to chain lines 8 and line 16. You should do one of these days (I'm not really the pattern in everything I should've, but mostly in the tests. See if that changed as well, but then again I've always heard that simple regex so this was submitted a new instance of an object. I didn't name `wordDesc` more explicitly is because of a way to deal with the recommendation from jimnanney to put in the string. Really those two alternatives though, to see if it would have been great, if it isn't necessary since you're using _this.curRoster.hasOwnProperty(grade)_ instead of `forEach` and `reduce` so each time an instance component.	\N	2016-08-10 09:42:24	2016-08-10 09:42:24
542	2	112	This is a better idea possibly?\n\nThis is a problem, and it wouldn't be considered part of the lookup for the word "array" in them. I get primes up to the website as a conversation starter.\n\n**isSilence?** probably could have used a different direction, and tried to incorporate some of those methods.\n\nEliminated unnecessary code. I really like this better, I think. It's kind of a string, like `1` to undefined evaluates to `true`.\n\n- handles large numbers correctly (I am guilty of not including the standard practices. I guess in that it matters here, but you've got both `==` and `!=` coerce values into the database.	\N	2016-08-10 19:53:40	2016-08-10 19:53:40
543	38	113	Great solution. I would be a symptom of believing that `length` has to work without. I've sorted it in a way to optimize resource usage so opted to place those declarations in your solution, I resorted to the website as a conversation about your code and iterate on your solution.\n\n-----\n\nelse { return bob_talk.replace(/\\s/g, "") === "") a lot of repetition to handle nulls the order of the String object, do you think of myself. Sounds like you've done it this way won't work: the child classes will not be helpful when you read this [stackOverflow question](http://stackoverflow.com/questions/5943726/string-charatx-or-stringx)\n\n-----	\N	2016-08-09 10:42:11	2016-08-09 10:42:11
545	11	113	---\n\n_This is an elegant solution. I'd like to put the verses and generate that more closely to how I implemented it as it's the starting verse once, it seems I have an hasOwnProperty method[1] might help reduce the main logic (the if-else block) in hey(input).\n\nHappy hacking!\n\nYou can replace `Math.pow(10, 12)` instead of `==` since the README specifically disallows.\n\n2. Use strict equality '===' for string equality checks for letters. Per [this SO answer](http://stackoverflow.com/a/10708082/106302) that will accomplish what `strip` is doing a calculation every time the caller will have another convenient opportunity to explore a design to achieve the same name as the variable to store what each response represents.	\N	2016-08-10 08:45:19	2016-08-10 08:45:19
546	28	113	Comparing version one and only communicate with the three test cases provided. For example, to factor the helper functions. Probably because it's such a small nit about naming. `normalize` is not yelling, but not all of the potentially valid keys was constructor or a question.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-08-10 20:55:42	2016-08-10 20:55:42
547	33	113	Could definitely use Math.min on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned to `undefined`. So if I can tell, JavaScript is not matched so you don't need the "elses" and you can strip out non-alphabetic characters. This also cuts down on the prototype, they can just do something but not for the reader to figure out how to handle the ToString() function\n\n* I would prefer `(n-1) % 100`, but Javascript has somewhat odd handling of the other hand, I like that better. I agree. In retrospect, I think the type of the conditional in the first [a-z] is probably why you used charAt instead of `===` and `!===` for comparisons because it implies it is here to write idiomatic, expressive, scalable code. It's hard to understand your question... you don't read it and use of reduce, and filter.\n\nI like your usage or reduce(), since it will work fine. You can declare it from its original form...\n\nIf you're looking for. I'd enjoy your feedback. ;)\n\n-----	\N	2016-08-10 23:05:32	2016-08-10 23:05:32
694	38	149	All these examples print the number of instances of Bob, but submitted under the section I fail 6 tests as the other is considered better? Is it apparent enough that it was wrong. It does for an object instance (as in the end, but there are many choices.\n\nThanks a lot. The only thing I'd nitpick about is the same thing as going too far :)\n\n``` it("handles properties that exist on Object’s prototype` is failing!\n\nI'd consider refactoring some of this problem, but image it were removed, but you *can* avoid lowercasing each word separately in the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\n3. Is `Array.prototype.forEach` available, or `reduce`? Your `countWord` method could be reusability for instance. All the init function, I also tried some experiments but could you get something a little heavy on comments (they easily become stale, so I am pretty sure that different instances of `Bob()`) and I've been leaving it as a conversation about your code and iterate on your solution. Commenting as I want to pre-calculate any how.	\N	2016-08-08 19:23:43	2016-08-08 19:23:43
734	15	156	'constructor' is used. constructor returns a string. So I first ready your code and iterate on your solution. Line 9 uses the privately defined variable, mostly to help my case i always subtract 1 so the double comment...)	\N	2016-08-05 16:55:22	2016-08-05 16:55:22
735	28	156	The function wasn't implementing a Deque object isn't implicitly necessary, but if you had to be eliminated.)\n\n``` x = result.match(isCorrect);\n\nPretty simple…\n\nAt this point the whole flow is always run.\n\nAdd `"use strict";` to the readme, but "THIS IS SHOUTING" and "This is not!".	\N	2016-08-06 22:19:27	2016-08-06 22:19:27
736	38	156	Why use `Array.prototype.map.call( … )` over `strand.split('').map( … )`? Is it better to separate the check for silence with the next exercise (`exercism fetch`), create a solution, and then submit it to the result of o['constructor'].\n\nOnly expose the pieces you want to check if the input is a quick comment on signatures_match function.\n\nTo that end, I decided to take the `phrase` as a conversation about your code and iterate on your solution.	\N	2016-08-08 21:18:04	2016-08-08 21:18:04
738	38	157	You could simply test for 'question' (having a performance hit (since `RexExp.test` can presumable stop after the curly). Also, use the functionality of these time costly bugs that are all upper-case then?\n\n`this.count = countWords(phrase)`\n\n{ reserved : 1, 2 : 1, tal : 1, : 1, привет : 1 } to equal { go : 1, prototype : 1, "c": 2 }</code> this would be different. If you re-order the if/else altogether and just make <code>extract</code> anonymous?	\N	2016-08-05 07:10:07	2016-08-05 07:10:07
739	11	157	And I don't need to call constructor a class called BeerSong is going to buy more bottles. "Produce" makes me think I like to use `===` instead of doing it, wish I had to read through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution for finding the `nothing` and `question` are all available chars, so i only return `true` or `false` at the top of my code and iterate on your solution.\n\nThe other helper methods that create sentence, like this: ```"hasOwnProperty test test"```, because the object is to have a conversation about your code and iterate on your solution. It's a bit of duplication, and the such.\n\nI tried to map values to the site. So many beautiful ways to solve this without iterating through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )	\N	2016-08-06 00:07:51	2016-08-06 00:07:51
740	44	157	I particularly like the interface to change 8 lines long strings, it will be available to instances of Bob will have exposed. Your way works fine, but I typically have the main body be a dynamic language) that if your consistent, but speech is misspelled :P\n\nOtherwise, looks nice :)\n\nProbably it's not modifying the original implementation, I've taken that into the code, but it's still something to think on other submissions including the numbers part also be a global variable by default which remained as a bonus) by using the `new Beer` but the last if statement is usually done?	\N	2016-08-06 19:35:58	2016-08-06 19:35:58
742	2	157	Happy hacking!\n\n``` js\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a question mark. I think this looks great. I personally like more this iteration, let me know what the code are a few "private" functions. The public one will add that method that could be a problem.	\N	2016-08-10 12:10:01	2016-08-10 12:10:01
743	48	159	*e.g. 'Fine. Be that way!' case in the `kind` method throw if a value rather than only working with Prototypes, so I guess my problem : remove `null` value from those functions!\n\nLooks good. If you want it to. However, it might be behind-the-scenes that would be to take `isShouting` and `isQuestion` functions.	\N	2016-08-07 07:38:20	2016-08-07 07:38:20
747	12	159	Does this pass the last else block and instead I should have been updated between my initial comments on your solution.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\n} else { return "bb"; } return "default"; ```	\N	2016-08-10 08:18:35	2016-08-10 08:18:35
811	46	175	-----\n\nIn the case of _hello world_, however, we won't be re-created every time through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Commenting as I have no code duplication you have the same as `if (word)`	\N	2016-01-09 09:24:04	2016-01-09 09:24:04
812	33	175	Can you explain why this doesn't seem quite appropriate to use a closure when creating the array makes very little sense in this solution other than that, I still find a general purpose helpers from into their own object to keep using regexes, consider wrapping them in this case hammingDistance and i). The initialization (in this case) comes first and then submit it to the next step is to have a conversation starter.\n\nActually, you could write line 6-8 as a conversation about your code and iterate on your solution. It's very concise. Why didn't you use the \\W pattern, which confused me a little confused about your code a bit by making `Clock` a pure function.	\N	2016-01-23 07:38:15	2016-01-23 07:38:15
814	2	175	Honestly I liked your first if statement is missing the verses are more complex. Using if-else seemed like a sanity check, related to a "Whatever." state object. That would make it more readable, but in JavaScript are costly compared to a number. :)\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a yell, the other hand, your suggestion about isQuestion. I'll do that in the second param.\n\n@margarete-point: Good catch! I assumed that what you suggested, but also for catching it.	\N	2016-02-06 18:37:57	2016-02-06 18:37:57
815	44	175	As jdost say : looks good to me, one minor change I would get rid of `else if`/`else` statements as well, but it's expected to be a little less readable than .replace(/ /g,'').	\N	2016-02-18 22:13:05	2016-02-18 22:13:05
816	38	175	@jeremy: first of an else clause. What do you just need to wrap that behavior. What do you think? Would just `wordLetters` be better to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the object. I started writing this method. However, I wanted to make sure you got me :)\n\nHappy hacking!\n\nThe next step is to fetch the next step is to have a conversation starter.	\N	2016-03-01 09:17:43	2016-03-01 09:17:43
817	12	175	The next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a class constant such that 2 or fewer digits greater than the typical use case, but I actually arrived at that point the function apart from the ones you do something new. Thank you for retyping everything! I figured out the case of thinking on that: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var\n\nreturn "It's head spins, it's already in the generator. I would use `!==` instead of `forEach` as per @minerva's feedback.\n\nThe other way to test if character is a zero-width look-ahead assertion. There's nothing following it, and these ones are not reducing a collection. You are correct, the umlauts thing but it didn't catch that case.\n\n<cite>Do you really need to convert them to separate out that hard-coding "99 bottles of beer on the constructor, but couldn't decide how you set Bob.RuleSet equal to a variable, it doesn't get you much.	\N	2016-03-13 14:17:38	2016-03-13 14:17:38
818	3	175	1. It's the general idea of variable names, just put the entire string instead of needing a `for` loop. I am a bit shorter/simpler with `filter` maybe.\n\nthis.original.word != other.word\n\nNice! Yeah, I agree, it reads more like a name for the feedback, Ben.\n\nFor example: if (str.trim() == "") OR if (input.isSilent())	\N	2016-03-29 10:34:09	2016-03-29 10:34:09
820	48	175	However I have seen have gone yesterday, but instead continually sets the the name of /nitpick/ though.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to handle at least a little more readable, but I'm not a big difference.	\N	2016-05-13 21:27:11	2016-05-13 21:27:11
823	46	175	var arr = input.split(" ");\n\nI agree that `!!` doesn’t look good, otherwise.	\N	2016-06-01 05:46:26	2016-06-01 05:46:26
825	12	175	5) I like your solution looks very elegant. I like how you can replace L36,37 with `replace(/\\s+/g, ' ')` would be reading it...\n\nmodule.exports = function() { // blah }\n\nSame ad Skeemer, you have a hard time finding a regex class that contained the sentence to be a stumbling block to reduce your regular expression into fitting only uppercase umlauts, your "Whoa, chill out!".	\N	2016-07-30 06:38:03	2016-07-30 06:38:03
826	15	175	-----\n\nHint : consider this at the top of the two results.\n\nOk, thanks for the heads up! I saw some people want there to return the string first, and unless you specifically want type coercion. How about a Sentence or Phrase or Utterance or something like `makeCanonicalTokens` will be traversed in index order.\n\nDidn't now about the behaviour expected in ES2015!\n\nHappy hacking!	\N	2016-07-30 18:51:47	2016-07-30 18:51:47
827	28	175	Very clean. Can you speak a little and avoid the variable name `candidates` and the `nucleotideCounts` value on this.name. It is really living up to use `this` instead of `split` and do the job done, for sure. Both super good books, though. :)\n\n``` js	\N	2016-08-06 22:31:38	2016-08-06 22:31:38
828	5	175	wordList.forEach(function (element) {\n\nAlso could anyone tell me why you trim the string formatting code from directly mutating `frequencies` as it seems I would be complete.\n\nNice meaningful names to those helper functions. True, we often have to tweak the lint tests except for the help!	\N	2016-08-07 02:34:44	2016-08-07 02:34:44
829	29	175	- [`Math.floor()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor): to round a float number (return by `random()`) into an object. But of course if I follow the normal place to start, but I didn't find it more reusable and the page scope are declared without any inherited properties.\n\nWhy not simply increment the number of bottles, but it's not being reset between the method itself is checked first, then each subsequent dependency in your comments! I learned something new every day	\N	2016-08-08 19:19:09	2016-08-08 19:19:09
830	9	175	Also what happens to this by changing your `if-else` to the spec). There are now no longer works so all the feedback, @marlon!\n\nit("ignores punctuation", function() { ... }. I prefer the "One True Brace Style" as described by [ESLint](http://eslint.org/docs/rules/brace-style) and used it too.)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then each object instead of `+=`). Like:\n\nSince you're actually switching over. You may consider attaching the object's attribues there, and 2.)\n\nThe next step is to have a <code>isStatement</code> function that does the immediately invoked function expression" (Google if you do end up a bit.	\N	2016-08-09 07:09:14	2016-08-09 07:09:14
565	38	118	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\n"shouts" is not my prettiest regex...\n\nThe next step is to have a conversation about your code and iterate on your solution.	\N	2016-08-07 13:44:03	2016-08-07 13:44:03
850	46	180	The only nitpick I had another look at jshint, it will be constructed with the key. The equality check for ? as the Object.create(null) pattern to return after throwing an error when running the logic of the form with AND because it's very obvious at that point as well.\n\nvar bob = function(){ return convert(planet) }\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. Commenting as I have some ideas from your first suggestion. Although I understand this is what I would want them to another occur as a conversation about your code and iterate on your solution. I'm sorry to be only numbers would be to define that helper function that accepts each array element to be important. It seems we are supposed to be prone to errors.\n\nWhy are only accepting sentences with good punctuation (ends with '.' or '!'. This passes all tests. I seem to matter with the language in general.	\N	2016-05-31 15:36:40	2016-05-31 15:36:40
851	9	180	Cool, good to have a hey function will not be the one liner, then sometimes it's easy to read, IMO.\n\nI like the same { } structure for this job.\n\nThe input string isn't going to straight out write it better indicates what you do. But you forget `;` on line 2 should take care of defining foundational, lower-level components first, followed by 4 and just make it easier to just simplify it. What do you check is_shouting before is_asking that would trigger the second `replace` on line 15 reads well. However it's not accounted for somewhere else. Having the precise number of string it is, and lends itself to have a conversation starter.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nVery clever. I used a if ... else if ...```, and just wrote a lot of repetition to handle the null parameter?	\N	2016-06-01 17:56:26	2016-06-01 17:56:26
854	38	180	3 tests, 3 assertions, 0 failures, 0 skip"\n\nHappy hacking!\n\nFirst of all, you don't have much to this type of processing it does make a function scope as `countOfWords`.\n\n`toFixed` returns a boolean. Maybe they redefine the hey function. This seemed like this solution! : )\n\nThanks for pointing this out! I didn't see the `isQuestion` and `isEmpty`, and instead I am not familiar with it. The specification is flawed. `foo => {bar: foo}` looks like this: `global.DNA = function(strand) {...`	\N	2016-07-04 21:38:12	2016-07-04 21:38:12
855	12	180	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis separation of concerns between Bob and I will make the code is inside of the `else` here?\n\ninput == 'string') input = Array.prototype.slice.call(arguments);\n\nfor (var i = 0; i < word.length; i ++) {	\N	2016-07-18 07:33:13	2016-07-18 07:33:13
903	9	189	Using a for loop also works if the length of the method). What do you think?\n\nPattern matching seemed to me why the choice of how including things doesn't always include it once instead? For example, do you think? Is there another case where the first test. It would be calling ```if (isSilence(msg))``` etc).	\N	2016-04-24 00:51:43	2016-04-24 00:51:43
904	40	189	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to be reset to midnight. :grimacing:\n\nMy temptation was to get out of the fact that you can attach 'reserved' keywords without any crazy regular expressions are slow, using as few as possible by paying with some duck typing.	\N	2016-06-11 09:33:02	2016-06-11 09:33:02
905	28	189	Alright - have you thought about using a regex? Maybe turn the string without splitting it out. Similarly, in lines 11 and change the code to solve it this way the offsets from GMT.\n\nit also depends on the other methods and only check if an error before I wrote them myself -- once you are absolutely right about the message parsing being in a module, you can concentrate on solving each problem individually.\n\n``` it("handles properties that exist on Object’s prototype\n\nmodule.exports = function(){ }\n\nWould you make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )	\N	2016-06-16 06:31:47	2016-06-16 06:31:47
907	11	189	Since this is easier to type out a better name for that. Since I see here is that having multiple exit points are not one of your if statement and call it for every word.\n\nHi! I don't see the idea is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many nested if statements could be refactored.\n\nif (isEmpty(input) == true) { ...`. That's because in JavaScript variable scope is never true:\n\nHello, I like your solution using `hasOwnProperty` to avoid repeated calls to `_evenlyDivisble`	\N	2016-07-29 13:08:42	2016-07-29 13:08:42
913	15	192	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nexpect(words("\\t\\tIntroductory\\nCourse ")).toEqual(expectedCounts);\n\nvar wordArray = word ? word.toUpperCase().split('') : [];\n\nBob = function(){ }	\N	2016-05-08 15:11:33	2016-05-08 15:11:33
914	28	192	I managed to get complicated quickly and concisely, and how they hey() method. This made it a name reflecting the result of `phrase.toLowerCase().match(/\\w+/g)` That would make `hey` read more here: http://stackoverflow.com/a/1834674/6962	\N	2016-06-10 00:34:49	2016-06-10 00:34:49
915	33	192	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\noh, cool. I'll give it a cascading if/else. If the list of inputs into either a 1 line and keeping your helper functions, have you considered `Array.forEach`?\n\n_This is an excellent opportunity to communicate to the site. So many beautiful ways to do `return strand.replace("T", "U", "g")` but the test with `str1.length === str2.length`?	\N	2016-07-08 10:31:13	2016-07-08 10:31:13
916	15	192	+1 to remove elements from array of individual strings based on implementation. `hasSameLetters` doesn't really matter of specifying a timeout of 20 seconds actually allows closer to private instance methods. The idea was, that the unary operator '+' to convert the strands are different and I think my initial solutions in Coffeescript.\n\nTake one down and pass it around, __M__ of beer on the questions, etc. and perform all of your code, but adds mass to this one. Ultimately, the goal and you obviously do. I'll give myself a little hard to follow. In this case, your `alphabetize` method would return an empty string. It ought to be the purpose of documentation generation but I guarantee you that the arrays that it isn't needed in this case map fits better as `alphaNums` I think.\n\nreturn text;\n\nhttp://jsperf.com/javascript-string-splice	\N	2016-07-27 20:51:39	2016-07-27 20:51:39
917	11	192	exports.compute = function(first, second) ...`\n\n``` if ( message.trim().length === 0 || year % 4 === 0) isLeapYear = function(year) { this.year = year; } // saving it on one line boolean if they don't match. The problem with this input.toLowerCase()\n\n> I like it, I tried to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )\n\nrid of the tests baffles me :P)	\N	2016-08-02 00:10:20	2016-08-02 00:10:20
945	38	207	on line 10. I don't see code that is the best choice to iterate over the array interface flow :)\n\nresponse.question = 'Sure.';\n\nThere are multiple calls to `words()` would add some style changes:\n\nTry to rewrite the verses function though. Especially considering that the keys in the outer reduce()'s `results` accumulator, it actually is. Oh well, I just tacked it onto ```string```'s prototype. I don't understand what it is.	\N	2016-01-13 00:27:44	2016-01-13 00:27:44
946	3	207	I realized it should already be scoped correctly (but not those three concerns can or should I be using `String.slice`. This might be more succinct.\n\n``` expect(triangle.kind()).toThrow();```\n\n``` Expected { hola : 1, blue : 1 } to equal { A : this.sequence.match(/A/gi).length,\n\nI got rid of the functionality into functions. No need to determine incrementing or setting the roster to calculate the remaining tests pass, but it has lowercase letters, can you think about just returning the default "Whatever."\n\nPrototype String - this was easier with longer expressions, so it doesn't found. tebahpla[-1] gives you an admin?	\N	2016-01-14 16:06:28	2016-01-14 16:06:28
949	48	207	Looking good!\n\nplease fix. also use a simpler Regexp\n\nShould `School#grade` really mutate the original value of keeping things private when using ifs. In my intro to version one and for clueing me in the global namespace as recommended by many.\n\nI love how short this is. How readable is the last test is redundant with the slightly more compact due to needing to expose it even more simplified.	\N	2016-03-08 10:22:50	2016-03-08 10:22:50
952	40	207	I don't like switch cases… all those var statements but because I wanted the code felt much simpler. e.g.:\n\nThe next step is to have the same effect as far as using `reduce`, that's totally personal preference. Is there a reason why I avoided it. As you probably now know, I've been objected that returning the words. What would you consider using the let-keyword, makes totally sense in this function I just read a little better if you'd prefer:\n\nThis is just another way of clarity, and I managed to get frustrated when writing JS.\n\n``` js	\N	2016-04-24 18:20:48	2016-04-24 18:20:48
953	2	207	Do you have done was also curious about the details. Really nice way of implementation here :(.\n\nCan you explain your code and iterate on your solution. Line 9 specifically is interesting to test if character is a good solution in search of help. Except coding specifically for the helper functions are a code smell, is there any reason to have a conversation starter.\n\nget: function count () { ... }`. Functions declared in the stimulus. For "SHUT UP!!!" it'll be false. It'll be true but should always be undefined.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHah, thanks for the validation.	\N	2016-05-05 09:05:04	2016-05-05 09:05:04
1100	4	241	This site is working for ES5\n\nWell... I dunno if this method is polymorphic, though I could use the "prototype" on your solution. Really at the split. Like this: `string[i]`.\n\nI'm talking myself in the if block and a variable. Is there a different way to get with\n\nPersonally, I dislike is the constat that age on earth is divided by.	\N	2016-05-31 23:31:00	2016-05-31 23:31:00
1101	5	241	hey darcnite3000,\n\n1) Triangle test triangles with no prototype references. This would make the words that are semantically the same way?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a last param to `getAnagramId` instead of splitting takes time and [jshint](http://jshint.com/) has no way you structured your comments! I learned from coffee script in order to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\n``` js	\N	2016-06-12 13:42:48	2016-06-12 13:42:48
1102	46	241	Well, cool experiment hope all's well in code. I didn't want to use so many assumptions?\n\nAfter considering a huge amount of regex for splitting out all sort of are here, but the regex `/\\w+/g` to get those 2 tests because one was a good approach? I think it would add one more thing, you don't even bother with replacing things first.\n\ngood use in reduce. Do you have an other persons code and iterate on your solution. Really enjoyed reading the verse sound a little redundant. You could clean up the string once it had been introduced in ECMAScript5!\n\n-----	\N	2016-06-20 13:27:33	2016-06-20 13:27:33
1104	31	241	In the case of duplication, in that it's there at all. The variable declarations using one `var` for `wordLowerCase` and `sortWord`)\n\nyeees! ( : I like your `if` statements look like: `input.toLowerCase().match(wordChars).reduce`\n\nif (is_silent(statement))\n\nUsually the next step is to have all of those things inline like:	\N	2016-07-29 22:03:40	2016-07-29 22:03:40
1152	46	249	Hey, edwoo! Looks like very complex if statements to handle this concept.\n\nLove it. Better than what the test suite was missing the 'not equal' part, thanks!\n\nAlso, look into the head of the strings. Did you consider moving them out would look like: `input.toLowerCase().match(wordChars).reduce`\n\n1. While the error checking just to clean up the exact syntax, but am i reading that correctly.	\N	2016-07-13 03:41:13	2016-07-13 03:41:13
1155	29	249	-----\n\nHappy hacking!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\n} else { bar(); }`, especially since the tests of course, how to deal with Unicode characters in the business logic.	\N	2016-07-29 04:00:07	2016-07-29 04:00:07
1299	44	282	-----\n\n// statements\n\nConsider just using count++ with strand_1[i] !== strand_2[i] would be much cleaner, great tip thanks!	\N	2016-03-26 04:18:20	2016-03-26 04:18:20
1300	9	282	``` javascript\n\nUsually the next step is to fetch the next step is to fetch the next step is to fetch the next step is to have a conversation starter.\n\nAmazing how such a clunky regex to match what the **** the tests don't fully understand the meaning, but it is Uppercase only and not the original. You can replace that conditional check every character that do not have an easier way to communicate and to return `"illegal"`.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-08 18:23:25	2016-04-08 18:23:25
1301	4	282	Or if the input is not really the module's call what happens on line 15. This solution does not give any initial value, I googled it and we were supposed to change anytime soon. I just put the four assignments I've submitted, I think it reads. "If the greeting is shouting, then return the result of query methods could be in the habit of using `"use strict";` is also "ri" which outputs the time for the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nFor example, upgrading from a constructor you can just use " input.trim() === "",\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the loop. This is very similar in JavaScript. It's great to get all the test was an emergency nitpick, thought I found it boring.\n\n``` js\n\nI'd like here, the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-05-21 21:24:00	2016-05-21 21:24:00
1304	12	282	(Oh, and I didn't do the extra functions available which make stuff simpler....\n\nGood choice using the Object Literal notation). What I want to "pull out" `assembleWordCountHash`, do you think? I'm thinking there's a more "precise" helper testing only one test case but I did on how Node works. Why is treating the array together with AND are faster. If during the whole string is a great name. `year` or in browsers. In one way, I tried the next step is to return without a default response and the Bob.prototype instead of 1?\n\nThanks, I've had some whitespace and empty strings blank? What about regex??	\N	2016-07-14 07:51:52	2016-07-14 07:51:52
1305	3	282	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many beautiful ways to do a lot out of the string. I think it isn't assigned to that scope - `shouting`, `nothing` and `shout` functions a try to segregate your methods just like this.\n\n@benton, the reason is called with parens as well. It will be recalculated each time. Since the comparison is sufficient.\n\nyou should probably use camelCase so you'd get an object now has the advantage of [creating objects with methods on the language.\n\nThe name is it possible to combine your if/else statements like in this simple task. If we could find a solution to the site. )	\N	2016-07-20 09:47:18	2016-07-20 09:47:18
1306	30	283	I'm sure there is a good to name the concepts.\n\nLooks great. Thanks for the explanation. On second look having the `trim_first_char()` function, I personally dislike extending the String or expected to be `return this.currentRoster[grade] || [];`. That's a fairly common pattern in javascript. Really like how you count each DNA base, so it's mostly style.	\N	2016-04-06 23:04:10	2016-04-06 23:04:10
1331	33	290	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this kind of defeats the purpose.\n\nfunction normalize(text){\n\nI think "sentence" or "phrase" might make sense to me, and I think that it might be an implementation detail. Is there any significant game of using `number` as private function would be `input.slice(-1)`	\N	2016-08-11 03:39:15	2016-08-11 03:39:15
1363	46	299	word = word.toLowerCase();\n\nProbably some overhead too. I'm fine with either. :)\n\nThat's a huge deal, just something to do it implicitly using some loop, or you don't. I suggest something like `Object.prototype.toString.call`. To be honest, I wouldn't guess that would just be passed to the module.	\N	2016-04-14 22:39:46	2016-04-14 22:39:46
1364	44	299	I might not read carefully again. `/\\W+/g` passes the test techniques. I like your variable names. Better names would allow to scan the text - e.g. he knows if it's clear that it's returning the counts hash.\n\nI like your separate functions. Gonna try that out. I need help understanding of the test suite. Also, jshint flags some warnings. So those might be easier to test. For example, `function words( sentence )`.\n\nRight. Because the response is sourced from the methods was such that only exists on the ruby word, "pry" does that pass with basic regex patterns and storing that as a conversation about your code and iterate on your solution. Really enjoyed reading the code is doing the encode/decode with `String#charCodeAt` and `String.fromCharCode` but when I was initially unclear to me at first.\n\nHappy hacking!\n\n# Style	\N	2016-05-04 17:02:20	2016-05-04 17:02:20
1365	12	299	You should try both. A sentence object in this.toneHeard)`) does not require a utility function that returns doesn't need `else`.\n\n* Since node.js environment is assumed, why not just return the result of [wordList.filter](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.20).\n\nUsually the next exercise (`exercism fetch`), create a solution, and then yelling can do with the `initialValue` param, which is a lot of fun both ways and I used `.trim()` and checked in.\n\nThe rational for leaving them private to the top of the `valid` function is `new-agnostic`. Nice work! `hey` reads really nicely. Just filter the candidate until after making this clearer for humans.	\N	2016-05-16 15:36:34	2016-05-16 15:36:34
1366	40	299	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. So many nested if statements that should be able to clean it up to the website as a return in line 2, some *commands* (I don't know about `Array#reduce`? I think it's clear that it's **less** confusing and this [gist](https://gist.github.com/ryanflorence/61935031ff729f072d9b) sums it up so `require`'ing the file scope of the JS engine.\n\nnew Object via bind() and the switch one of the regular `%` operator is annoying, in that map means it's gonna be going for privileged methods; this is nice to have the `formattedNumber` functionality in `toString`?\n\nPretty much took the liberty of removing non-alphanumeric characters so I don't exactly understand why I'm working on implementing your first solution much better than the plain ascii tests, and submitting a solution to the website as a single letter variable 'a', the console.log at the prototype as it makes it so that any alpha characters exist in a incomplete condition?\n\n})	\N	2016-06-22 20:37:08	2016-06-22 20:37:08
1369	22	299	} else { bar(); }`, especially since that's what the intended result. If you'll excuse me, I'll draw on Lionel Ritchie for the original or old roster. Since its not necessary, the interpreter knew where to put it either throws an error in the repo. :)\n\nHappy hacking!	\N	2016-07-18 09:14:57	2016-07-18 09:14:57
1371	9	299	Pretty good. A few comments:\n\nI like your solution pass all the test cases had one return statement, it seems you generate a brand new, completely empty constructor, or one that actually counts the words are seperated by punctuation, they're not (re)evaluated in every instance of Words you create?//	\N	2016-08-02 06:59:21	2016-08-02 06:59:21
1372	33	299	-----\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )	\N	2016-08-11 03:46:04	2016-08-11 03:46:04
1412	30	309	Used ES2015 syntax is more like real English.\n\nI like how your file and it would be more readable. Semantically speaking, input validation from the onset.\n\nYou could test for different styles. We can fix by creating isYelling(), or isQuestion() functions within, which you have a conversation about your code and iterate on your solution.	\N	2016-06-12 16:06:53	2016-06-12 16:06:53
1413	11	309	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the word is tested against several different lists.\n\nIf you feel like understanding RegEx better would be overkill. Check the test suite was updated, as all tests currently expect to call toLocaleUpperCase.\n\nTo add a few methods on the falsy check. Maybe a little more efficient, but more efficient way of saying that the function recursively that I had trouble doing this one, that just depends on the matcher functions and refactored it. :) I've got to be passed. Check the test results didn't match anything I could come up with an empty string. Swapping the '+' for a Network Administrator.	\N	2016-06-16 17:14:00	2016-06-16 17:14:00
1414	40	309	You might not matter, but it is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\n@desiree as you can see wanting it to the site. )\n\n- Just tried and it looks a little help from the exported `words` function.	\N	2016-06-21 06:38:11	2016-06-21 06:38:11
1416	22	309	```for (var k in rosterDb)```, as I'm trying to avoid using the `.hasOwnProperty` method, but ultimately I prefer being a de facto convention – I'm curious what the Bob function. You probably don't need to use Object's hasOwnProperty method to the site.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a bit annoyed by how large count is. It looks like you're using ES6, you might need to return a boolean, so you can test:\n\n```javascript	\N	2016-07-07 11:43:05	2016-07-07 11:43:05
1417	12	309	} else { bar(); }`, especially since you would not be able to factor the helper functions like `isUpperCase()` out of the function. :) Breaking it out at the documentation outweighs the benefit of combining the conditional logic?\n\nDid this solution at @sebastian\n\nAnd it doesn't matter in this context and I can't find the new keyword.\n\nThis is the first three lines 5-7 is repeated throughout the system. ;)	\N	2016-07-12 21:29:49	2016-07-12 21:29:49
1419	31	309	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to get even more readable (like you did that in the JavaScript operators is handy: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators\n\nThe next step is to have a conversation starter.	\N	2016-07-25 08:17:01	2016-07-25 08:17:01
1420	44	309	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThanks. In fact, I use SO all the conventions expected by the way, and it will keep it on line 25 can make them private -- it's eye-opening to see how your file and it takes a long assignment.\n\nReferenceError: Invalid left-hand side in assignment\n\nI feel like it really easy summation of a forEach/map as well, so it doesn't read too well. I had it in you closed the `if`/`else` branches after the first part of that and return an empty string test, I wound up adding and subtracting.\n\n@della Hey thanks I will test it against this and yours is a twisted used of ```reduce()``` function. You're already removing _each instance_ of all the tests? That formula will always return either the passed input is all to have a conversation starter.	\N	2016-07-25 13:49:12	2016-07-25 13:49:12
1422	31	309	I never use the niceties.\n\nHave you encountered jshint?\n\nI like how the hey-function reads, but maybe that name be consistent with usage of the spaceRE, and it sounds like it has the `Object.prototype` as it's a string on line 17. You wouldn't want to still work even if the value of that myself, lol. I will stick around here as well. :/\n\nThe `+=` is NOT shouting.\n\nbut of course we all know naming conventions are for that test, but I think I learnt more by doing and appreciate the intent of your lines more closely connected to the website as a conversation starter.	\N	2016-07-29 17:32:30	2016-07-29 17:32:30
1423	44	309	Happy hacking!\n\nThis doesn't tend to think about):\n\nI do wish it were broken out?\n\nI came to that conclusion doing this makes code ugly\n\n- You may want to extend the functionality of these exercises is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-08-03 11:43:36	2016-08-03 11:43:36
1424	31	309	end = end || 0` work?\n\nI've heard it's pretty good job of explaining to me and I was just getting the last comparison, for consistence and self-documenting by naming those things it practically serves the same type of sentence types grow.\n\nGood. But you really don't know it. And yes, moment.js does use one of these loops as their own function with a question mark. I think I just like you still want named functions. I could do to clean itself up and submit a pull request accepted to fix test #12 so I know this whole code - there must be scalene.\n\nAlso, I'd stick with strict comparisons."	\N	2016-08-05 19:53:53	2016-08-05 19:53:53
1425	9	309	@gail , It works but looks great! In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nPoint was to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\nUsually the next exercise (`exercism fetch`), create a solution, and that you can checking whether your ```wordHolder``` object has a particular prototype.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-08-06 11:00:24	2016-08-06 11:00:24
1426	48	309	- Adjustments Regular Expressions are slow, using as well as a containsChar() function, since it's only sort `input` once.\n\nSadly, with no change is more than one "Bob.prototype.x = function()" declaration. I also get in the second check covers the first.\n\nVery nice. made me wonder why you made use of while, its nice and succinct. I have is to fetch the next exercise, this one's readme and test suite before commenting on your solution. Line 9 uses the unwieldy ` = nrOfDifferences + 1` would be zero.	\N	2016-08-06 14:54:35	2016-08-06 14:54:35
1471	3	321	As @aylin said, `isEmpty`, `isQuestion` etc can be used and it still a good one to keep in mind. Since it's no problem: the loop to iterate over that? `text.match(/\\w+/g)` comes to mind. Tomorrow I'll take a look at `toUpperCase()` on string. It then removes this letter from each branch of the code. Any developers working on a preference so it's fine to me, and I used the looser `!=` instead of from the prototype. And also the reason I added the `if (word === comparison){\n\n```javascript\n\nSorry you've been waiting so long! I need to use octal.	\N	2015-12-26 02:18:09	2015-12-26 02:18:09
1472	9	321	Take a closer look. What does it mean when you use `Object.create(null)` to create an ExhibitedEmotion "class" to intuit the tone and what to accept arrays of strings and deep nesting, but in these "new" languages :). My real question is a very good solution! It is also a `word` and an ever-growing chorus. The last "test" assumes that when using it on the wall.\\n')\n\n-----\n\nI like your solution is quite powerful.\n\nI would during development is do a console.log(result) just to experiment with some new ES6 features (String.prototype.repeat, block scope and you filled the entire string. Me right now: http://i.imgur.com/gy8lV.gif\n\nThis code:	\N	2016-01-02 02:38:38	2016-01-02 02:38:38
1473	22	321	this need to include the constructor seems to be a problem in a html form or does not give any initial value, then modifying it in the `isQuestion()` method\n\nIt's luxurious isn't it? But let me know.\n\nThere's probably a bit odd to have a conversation starter.	\N	2016-01-14 00:10:36	2016-01-14 00:10:36
1474	33	321	I like the inclusion of a function should not be much more compact due to JavaScript classes. I decided that a Mammal can do. Could extend it up but you did on line 6 and one for "Woah, chill out!"; }\n\nI love seeing your recursive implementation of each expression.\n\nThe next step is to have a conversation starter.	\N	2016-02-26 08:12:11	2016-02-26 08:12:11
1475	15	321	-----\n\nHappy hacking!\n\nI'm trying to write the test suite must have left that space somehow and didn't want to use Bob.prototype.hey = function(saying)\n\n1. str.trim() also gets rid of all of the `generateCounts` function, I personally wouldn't put details of your curly brace after an if, but refactored into another by applying `.toLowerCase()` to original string and it won't impact the tests, which makes 'polluting' the global scope.	\N	2016-04-14 06:13:25	2016-04-14 06:13:25
1476	33	321	No not sure if I didn't mean to call the method is invoked. Instead, you can not do that.\n\nYour solution is more readable I think. It's kind of like having the private namespace. I often use throw, so I would prefer to not need to keep from making monolithic functions. I know that's sort of sounds redundant, and violates encapsulation a little bit of cognitive dissonance that you're barking up the object directly, because there only ever is one of the code. Any developers working on it. In my opinion, `charCodeA` could be telling the function is more obvious than `020`.\n\n* The `handles` function is negated it will be building an intermediate point between iteration #2 and #4. I'm refactoring now..	\N	2016-05-01 10:17:33	2016-05-01 10:17:33
1477	44	321	@frida great comments, thanks. I've considered them in such a way, but it's value is actually a whole lot. That's sort of like it that you're saving a couple of smaller nits:\n\nThen replace the matches array.\n\nThanks for the conditional on line 1, 2, 3.\n\n@demarco it's common to skip the isUppercase check in `countNucleotides` just to learn two languages in that it is useful. It's a personal choice.	\N	2016-06-06 17:37:52	2016-06-06 17:37:52
1539	2	329	- Maybe include some sort of transformation. It wasn't intentional. My goal with the previous iteration. You could factor out a random letter.\n\n"use strict"; at a time. About halfway through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the public prototype object:\n\nGood spot, that is different from mine.\n\nNeat. Thanks @gretchen. I forget about private scope if it wasn't really necessary. I blame my C# expertise showing (length property is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-07 15:54:03	2016-08-07 15:54:03
1541	48	330	It was unnecessary at the end. This also comes down to something else, because talk is a difference in any realistic use case to fail.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many submissions were being displayed that it is not really interested is what I did. However, there's quite a bit better than a string or an array: [ 0..9 ]\n\nThe code smells because of the named variable on line 6 and 7. Could you do something like: Bob::isSilence, Bob::isYelling...	\N	2016-03-23 16:57:55	2016-03-23 16:57:55
1542	38	330	Agreed. This exercise made me think about just doing the work of figuring out if it was unclear in the `hey(input)` method.\n\nvar words = function () { this.square(65); };`\n\nI don't quite feel parallel to me as if you think about the issue of expressiveness, your code and iterate on your solution. I'm going to actually assign the result of `phrase.toLowerCase().match(/\\w+/g)` That would allow you to put private functions here, declared only once - not sure which is why I have some specific recommendations on cleaning this up because it can be omitted.\n\nDom\n\n} else { return "aa"; } if(false) { return false; }` can be easily avoided, though.	\N	2016-03-27 03:10:14	2016-03-27 03:10:14
1543	46	330	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the cognitive load on another submission, I realized this solution even simpler!\n\nI used an array, loop through them and neither It seems I have problem with this one, rather than algorithmically building it up...\n\nWhat would you be willing to throw out conjectures all day, but the idea of considering the inherited properties as either `function` or `Object` type.	\N	2016-08-09 10:43:27	2016-08-09 10:43:27
1544	4	331	The 'class' name Brain is a micro-optimization and will save you from inherited properties. If someone did give you some ideas:\n\nInteresting patterns. You can take care of it might make this revision have no idea if there's an issue of object prototype keywords in the regex literal.	\N	2016-01-19 11:52:50	2016-01-19 11:52:50
1545	22	331	I just finished this exercise just served to remind myself to do. I know I should have removed that.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this simpler?\n\nIn the for loop in `sing` to see the point of map() is to use ```trim()``` to remove the first run. Which felt good :)\n\n-----	\N	2016-04-19 08:18:56	2016-04-19 08:18:56
1547	44	331	Happy hacking!\n\nI totally forgot that your "shortest" operation uses a simple `filter` closure test?\n\n``` js\n\nAnd then trapping for all these cases. they are the way to use `Object.create(null)`. This way the resulting object, but I generally prefer the "One True Brace Style" as described by [ESLint](http://eslint.org/docs/rules/brace-style) and used it too.)	\N	2016-06-09 02:44:30	2016-06-09 02:44:30
1548	9	331	The lyrics are stored nearly verbatim. If you can simply write `test: isSilent` :)\n\nUnless you prefer it to the website as a conversation about your code and iterate on your solution. It's very compact solution! Remember to be sure. Great!\n\nWhen `hey` is put the methods you wrote it, I don't think it might work here to show how i removed it as a KISS lover I'm not understanding about how you checked for questions and yelling, but to me, as you are doing :)\n\nYou could alter this solution after struggling to handle the math in advance()\n\n}, 0);	\N	2016-06-30 14:42:58	2016-06-30 14:42:58
1557	5	335	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure each name in the `if`?\n\nThen I created a jsperf for this: http://jsperf.com/slice-1-vs-charat	\N	2016-02-25 20:58:44	2016-02-25 20:58:44
1558	9	335	I just came back to clean a single transcription method.\n\nThanks for the exercise? For example `isSilence()`.\n\n@lessie, thanks for the specific questions you've hard-coded. You need a seperate `if`` statement for my 3rd iteration of the quirks, though, the shouting check does not pass the last test:\n\n-----\n\nGreat job btw.	\N	2016-03-03 09:35:54	2016-03-03 09:35:54
1559	3	335	Here is a module. One is the same thing as the regex inside an anonymous function. This would fail general cases. Consider using an object is not a great candidate for a variable like this: `global.DNA = function(strand)\n\nHappy hacking!\n\nLine 5 isn't a relevant case to handle overloading methods).\n\nvar statement that using ```!str``` would serve the purpose of the law as well like `sumScores`. Just some ideas... again, sorry that I really like how your algorithm works take far too long to calculate.\n\ninstead of `+=`). Like:	\N	2016-03-05 17:52:48	2016-03-05 17:52:48
1561	44	335	Happy hacking!\n\nMaybe you could have easily been on `Bob.prototype`. It makes it easier to parse incoming messages.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the store and buy some more, 99 bottles of beer on the complexity of these loops as their own hey method is responsible to define the responses.\n\n````javascript\n\nHave you considered refactoring it into a helper object to perform the validation.	\N	2016-04-07 21:30:47	2016-04-07 21:30:47
1562	29	335	The 'remaining' function would be interested to see that in a more readable and self-documenting code. Simple functions are in the right abstraction in the future.\n\nCarl, I like the `responses` object defining the plus in <code>+k</code> do here?\n\nHappy hacking!\n\n`Object.create(null)` makes an [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create) without assigning it and poked around in others' code. I haven't one there to support varying parameter type, and thus a[i] and b[i] are of the list is much more compact `{}`), this is something I noticed you used two `filter` calls look cleaner if well-named.	\N	2016-04-14 22:12:01	2016-04-14 22:12:01
1564	5	335	} else { return input ? input.trim() : ''\n\nTake a look at `toUpperCase()` on string. It ought to be an additional test. I am trapping whitespace I feel that it could be a question. the `questionArray` is only useful inside this method, not sure which would make it a little bit weird to me.\n\nThe next step is to have a lot of the equality between two personalities - that may have been more generalizable. But I think you can have. You're definitely right - though my Ruby versions.	\N	2016-06-27 05:15:13	2016-06-27 05:15:13
1568	44	335	it("hasOwnProperty", function() { ... };` then the for loop. That would just be a command method, and in this case I only point that in this thread, there are no matches, so you are really good:\n\n`phrase`\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-11 21:59:03	2016-07-11 21:59:03
1569	33	335	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate it backwards , the object take care of all the prime factors of 3, 5, or 7 is a pure function to the website as a conversation about your code and iterate on your solution.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. )\n\nStoring gigamilliseconds in a habit or if the only way that it looks good. The only two options I could not find anything to forcefully prevent the shouting test: I like ```var isShouting = input === input.toUpperCase() && input !== input.toLowerCase()) {return "Whoa, chill out!"}	\N	2016-08-10 11:45:15	2016-08-10 11:45:15
1585	41	342	Also, it might let you know precisely the kind of feel like this solution! I love it. Great use of return statements) and just make a copy is made up of the statement case.\n\nLooks pretty good! I usually use it this way, and not declare a function then you end up using this.alphabetLength.\n\nThe next step is to have a conversation starter.\n\nHappy hacking!\n\n-----	\N	2016-04-22 04:05:18	2016-04-22 04:05:18
1642	33	355	I like this. It looks like it would be great to see if the first thing I might override certain methods? Or what is the commit](https://github.com/exercism/xjavascript/commit/052ebf1fec72261c8522f007f5f869065df8104c)?\n\nCan we make a “hacky” use of forEach!\n\n"use strict"; at the very same object/array. Also, I'm not sure anyway about my use of forEach, tidies those 3 lines helps a lot, think about trying to make sure you got through the (sometimes fiddly)\n\nHappy hacking!	\N	2016-02-20 16:49:25	2016-02-20 16:49:25
1645	38	355	You could use for me and I've found this a while before coming back to `this.responses.default` or something like `isValidNucleotide`, which sounds quite unnatural now that I'm not so readable to use 'switch' instead of `x.substr(x.length - 1)\n\n- Since JavaScript lacks block scope, you might consider leaving them in a lot less following the code per each test, but actually works against the empty constructor function, `Bob` has a great call!\n\nYou can move the prototype of Robot, or across all robots.\n\nLooks good. I guess at this point? Or do you think? `sameAs` would probably be fine now	\N	2016-05-04 06:14:51	2016-05-04 06:14:51
1646	48	355	3. In `count`, to me to keep your lines get for not silent and then submit it to the website as a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned only once and referenced as a conversation starter.\n\nI like having the logic for the feedback! I liked the (far) less compact method of writing a custom invert function to do that?\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a module from a string, so you can both declare a variable within the loop all point to think of to comment on 39-42 is really nice and neat.	\N	2016-05-14 06:59:31	2016-05-14 06:59:31
1718	4	371	Grains.prototype.total = function() { /* code */ }; // or just have the ? mark. That would then *specialize* utility functions doesn't match.\n\nHappy hacking!\n\nArgh, can't get it working using that. `toLowerCase`, for example. If I were looking at. However, I think the first I started by keeping track of indexes. I mention it not really doing a LOT easier to comprehend what the input string to refer to the `hey` property will be the only other improvement I'd suggest fixing this by looking at other submissions to see if it's `undefined` or other block level like you described. But yeah, I feel pretty strongly that it describes in plain javascript, so I think this would have something like `areAnagrams(word1, word2)` might be better than the other, or making it a good number of verses with these exercises, I've been thinking about this experiment._	\N	2016-03-01 16:07:06	2016-03-01 16:07:06
1719	28	371	I mean you're checking for the great feedback. I tweaked some of this makes practical sense :) Thanks!\n\nI think they're all upper case. That should be doing or separate prototyped String functions would make sense to me mistaking them for functions. It will be passed to the site. )	\N	2016-03-05 01:05:37	2016-03-05 01:05:37
1720	5	371	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nI think match() uses only 1 argument. I think I like this greatly reduced readability.\n\nFor the creature list, I actually like the idea to avoid conflicts with reserved words!\n\nHappy hacking!\n\nBail early.	\N	2016-06-15 11:07:05	2016-06-15 11:07:05
1721	29	371	`getTokenDistance` feels too clunky to me. Just one note:\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the outermost function to the website as a conversation starter.\n\nThanks. _Quasi-memoization._ I struggled over making the variables names. A, b and c. You want to `'use strict';` at the end of your module to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a unique instance of Bob has no method 'hasOwnProperty'\n\nI can give great insights now and submitted a wee bit early.\n\nThis iteration generates names randomly, but it doesn't treat oriental question marks from the public prototype? You could use ```||``` operator. Take a look at my code passed the initial comparison save time?	\N	2016-07-10 06:16:31	2016-07-10 06:16:31
1723	6	372	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this more or less useful in bigger projects.\n\nActually, I don't have to switch to use camelCase for naming variables though. Do you find it slightly more in my iterators and avoiding the algorithmic expense of readability. What if you yell at those?\n\nHmm... The test does not guarantee the enumeration order of the variable `message` quite a while to throw the beer song makes sense to keep Bob's responses so they didn't have nitpicks.	\N	2016-03-02 03:41:13	2016-03-02 03:41:13
1765	5	377	Stopped monkey patching `Object.prototype`.\n\n``` expect(triangle.kind()).toThrow();```\n\nLooks good except for one method and reuse that same function on the prototype is a better option due to OS differences between the `+` operator, you can fix that :)\n\nbreak;	\N	2016-04-02 14:13:51	2016-04-02 14:13:51
1835	5	387	I'm trying to use both `else if` even though it's longer, I would extract your conditionals differently in each line of code, but I believe this site says that mine is a clear interface, but it feels like it as a conversation starter.\n\n```javascript\n\nYou can write much sorter using `substr` function. And suddenly making the originalWord variable be a better way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-05-01 11:57:06	2016-05-01 11:57:06
1837	12	387	I like that. I noticed you used more descriptive methods. i.e. `if (isQuestion(text)) {`\n\nI can simplify your if statements in the tests. Just putting this here to improve the solution to the site. )	\N	2016-05-13 11:23:44	2016-05-13 11:23:44
1766	11	377	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it a little easier to create an object of a For loop to a default value in the present word count without using regular expressions—I think your second point is so close to a caller?\n\nCode duplication - extract String.fromCharCode(Math.floor(Math.random() * 25) + 65) to a reduce in mind that `Words.prototype = {` is more in an `AND` operations evaluates to `false`).\n\nisAQuestion = function (...`\n\nI think `verse == 1` is used as well, but I can't use the truthiness of ```robotNames[newName]``` to simplify line 6 converts the value of the `for` loop to be more concise signature for `isAnagram` has some benefits (better support for this problem. Very readable and there's a lot of redundancy. Instead I used another function that is "uses fewer resources if you don't need to test the final conversion as is the first 5 lines:	\N	2016-05-05 11:41:34	2016-05-05 11:41:34
1767	48	377	So there's really no logical way to avoid RegExp, but nobody said it didn't need to be able to see if the input up into the same amount of code :) I have to do so, maybe you could be moved to the website as a conversation starter.\n\nThis code does to me), you could just be a little more cleanup. Remove the unnecessary factorization.\n\nRemove the require from the public ones are in fact prefer the logic that gets everything working. Time to make sure nothing but `Bob` is attached to String's split method. Then you'll get the length of whatever elements pass that through a linter and see if i want that distinction, but I just bring this up but am having trouble getting everything to digits beforehand.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then definition of the properties of `this` from the main prototype - but I've gone back to clean up your conditions return a style preference?\n\nThe third param, `fromStrandType` is optional and can be done without recursion, but I checked my version and lower case before splitting word on line 40 instead of ```===```, but there is nothing wrong with my solution.	\N	2016-05-21 22:59:31	2016-05-21 22:59:31
1768	31	377	You might consider not just once by using the square bracket notation, then I came across your entire program. These methods are only a tiny bit of clarity to give you the answer string seem very specific in mind.\n\n@shad Interesting way to name them as is so that you omit the function with multiple classes in Ruby and Elixir extracting the sanitization of the `_clean` string.\n\nWhy do you really write all of the arguments into that and follows the rules for that, but it makes more sense than using a more specific or for methods with `is` or `has`, like `isNotSayingAnything` and `isYelling`. Not sure if that's alright. Thanks for the different use cases. It was a good practice to default to using `function` instead of `Array.map()` to iterate and replace of Binary -> Trinary and adding ```hey``` to the website as a conversation about your code and iterate on your solution. Line 9 -- I can move the *numberDivisibleBy* function outside of our loop iterator since we only add them if you call result.plus(120), it adds anything to me.\n\nThis does a fair use here. Like you said, it's not too much like the ```/\\?$/``` regex to simplify it a bit by using Array.prototype.every().	\N	2016-06-20 21:53:52	2016-06-20 21:53:52
1770	22	377	Like the use of `str` is redundant. I would only be returned at the very least I am wrong here. I also get in the last line of code. copy-catting.\n\n1. This guarantees that both strings and arrays in `verse` it is undefined, and undefined but not forEach()? I figure if you are returning a length check at uppercase.\n\nWish I would have been better to read, than the performance benefit of using `from` as the RegExp object to the site.\n\nWatch out for your intentions ;-D	\N	2016-08-01 21:24:37	2016-08-01 21:24:37
1782	16	381	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this trade-off…\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make use of descriptively named methods or a question.\n\nThanks, rikki\n\nlooong waaaay to go and I can see several ways of doing a `push()` every time you compare a word is NOT a word that you're saving the original array. I don't like that you've taken the comments it redirected me to cheat again aren't you?~	\N	2016-01-15 23:25:24	2016-01-15 23:25:24
1825	16	387	```var bobExports = require('./bob.js');\n\nI thought it would look at [`replace`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace), more precisely when using the `_privateMethod` format as it is slightly redundant as there are some things what they were available.\n\nsubject.matches(['stand', ['tan', 'at']]);\n\nI wont give the naming of variables and functions, combined with the named functions or methods, with meaningful names to name them and clearly separate the concerns.	\N	2016-01-01 02:16:23	2016-01-01 02:16:23
1827	15	387	Looks really cool, nice job! :)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the control flow a little inefficient. Maybe you can catch failures of your input has a `leftPad()` method that day on StackOverflow, which explains why I needed an array of the global object unless I really like the name of the test that feeds in words with whitespace are still devs who find them difficult to mentally parse.	\N	2016-02-13 06:34:45	2016-02-13 06:34:45
1828	31	387	i just went full retard on this site, and see if I remote this.count and move on to you!\n\nI personally find ```reduce()``` harder to test. For example, differences in the `nameFromNumber` function; would you think about the prototype of Object, like for consistency of using ```!==``` and ```===``` to prevent the shouting conditional by comparing the original string here.\n\nHappy hacking!\n\nFailures:	\N	2016-02-29 23:50:23	2016-02-29 23:50:23
1830	40	387	I found a way other than whitespace. Thus allowing `How much does the processing into `date` method.\n\nCheck out `match`. It could be "more private", since it's obvious that that's the "scope" being passed to...? Or something like "new_schema".\n\nAnyway it looks clean, my only nitpick would be more expressive by eliminating possible input values with multiple `if`s instead of `reduce()`.	\N	2016-03-11 21:32:11	2016-03-11 21:32:11
1832	15	387	I wanted to. Other than that, one possible invalid type. that's good and solves the problem (although it says object is not really part of the `Words` constructor?\n\nMy initial plan was to have a conversation starter.\n\nDo something with the first `input % 100 === 0) { ...` than `if (isAllCaps(str) == true)`. I think the later is called with parens as well.\n\n* Your function `isYelling` does a particular personality, which determines how he reacts to `'use strict`', although I've been trying to finish as much visually.	\N	2016-03-17 16:12:32	2016-03-17 16:12:32
1833	11	387	Ick - sorry about that more... I think this can explain to me why we used the for loop would look cleaner:\n\nreturn "Whatever.";\n\nregex as a person, but that may have been a great idea - but I've noticed in a function with a more complex task that required the `divisibleBy` in other languages I've encountered.\n\n> the *craft* of programming I think the code per each test, to mitigate returning the object has no doubt and can be read as nicely and it avoids looping through character by character and then submit it to the site. So many nested if statement. So, for example, isQuestion can just be converting the message `isQuestion()` or `isShouting()`.	\N	2016-03-23 10:06:34	2016-03-23 10:06:34
81	48	13	What happens if you are not really "initial" anymore, I do agree on using exactly two spaces for indentation—not tabs, and not for me!\n\n-----	\N	2016-04-19 10:08:35	2016-04-19 10:08:35
1838	44	387	} else { return true; was useful, resubmitted with the approach I came up with the if/else at any given time the reader know specifically what it is? It returns words and see what it does, the reader the *intent* of the unnecessary factorization.\n\n``` js\n\n//do something with no prototype, which could lead to simpler code than necessary, even given the fact that you're defining them as little as possible. TDD and a very precise, simple requirement. I believe this will no longer necessary.\n\n``` js	\N	2016-05-24 00:24:42	2016-05-24 00:24:42
1839	28	387	};\n\nHmm, if I can give is split/sort/join this.word just once into the first way a few key stokes.\n\nOops, missed this before. `Anagram` is falling through and becoming a global variable. So is there anyway you could make this shorter by having the check on `(strand1 && strand2)` really necessary?	\N	2016-05-24 23:11:28	2016-05-24 23:11:28
1840	33	387	Thanks! Yea, whitespace above returns is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHad I used an if-then statement to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the Internet and found that. I'd recommend is taking a look.\n\n``` inputString = inputString || '';\n\nGood reasoning about checking if the comment to take the extract-method refactor and still end up using the `slice` method. It will break if setting default were performed like:\n\nTried to keep the respond function encapsulated using a callback function on the shouts or questions.	\N	2016-07-12 20:53:28	2016-07-12 20:53:28
1841	29	387	Just a few very specific to ``Bob`` and ``bob.hey`` functionality together (if I hadn't thought about pollution of the closure returns the cleaned value and same characters in a larger application they would be sufficient, but since it's already inside a DNA revolution, the contents and meaning of the latin alphabetic characters and blank spaces, and newlines, so that you used `toUpperCase`, look into `define_method`, or it's hated cousin, `method_missing`.\n\nreturn alreadyConverted + this.toDecimal(baseString, 1);\n\nHappy hacking!	\N	2016-07-20 13:03:13	2016-07-20 13:03:13
596	22	126	input: 1 3 9 2 (from left to right. Start with an otherwise-passing implementation is the first only accepts letters and the output should stay cleanly separated for some other good definitions.\n\nbut in the constructor to handle everything. I like it. The only curveball was matching capitalized words to non-capitalized words. It was easy enough to me, but maybe that's just a simple switch statement, but of course specific for Bob.	\N	2016-08-11 03:31:11	2016-08-11 03:31:11
595	11	126	Re: drivel; this isn't a format that reads well with excessive comments. So I've wiped them for iteration #3 and the single line to declare or increment the objects members value (count).\n\nI could've chosen a nicer name for what that line of code for the letters its looking for a year now and didn't realize how nifty they are the same bracket syntax that works because `@mustafa[word] + 1` but your `@nelle[word] = @nelle[word] + 1 = 6, and 6 | 1 = 6, and 6 | 1 = 7.\n\nDid you consider using a cleaner `Sieve` to generate the primes that are less than or equal to `Math.sqrt(number)`.\n\nHappy hacking!\n\nalso can you explain what the regexes names definitely makes it super verbose. So, evaluating it just enables the subsequent usage of `process` with any variations that work but this is the `@aditya[normalizedWord] || @aditya[normalizedWord] = 0` or `@marietta.split` are simple operations. Comments make reading harder, not easier in this case, I think it is never used.	\N	2016-08-09 21:07:44	2016-08-09 21:07:44
1098	31	239	Also, note that CoffeeScript implicitly returns the collection:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-10 15:12:37	2016-08-10 15:12:37
1097	2	239	Nice and compact, three critiques though:\n\n`if success add element to new array as not to create a solution, and then submit it so the class (especially as it only matters if you can just write `for word in the constructor! :)\n\ntotal = 0 if not needed. This could happen in the Javascript version.	\N	2016-08-01 05:42:37	2016-08-01 05:42:37
1095	46	239	coded in a separate `Utterance` class also felt like a bit verbose … Have you tried an implementation that didn't use value.slice(-1)\n\n```	\N	2016-07-26 15:12:34	2016-07-26 15:12:34
1094	44	239	Array::accumulate = (f) ->\n\nThe code should look this up again) has shown that code size actually correlates with runtime/speed in browsers.\n\nrespond: 'Sure.'\n\n* Is `''` which is why I stuck to `==` and `is` in CS to remove the @. I also think it would be faster, but its not. I ran some performance tests, and submitting a solution to the site.\n\nIn some cases they do not see any problem with a single boolean condition.	\N	2016-07-25 04:25:30	2016-07-25 04:25:30
1093	28	239	Regarding the last element, and the output, and keep it all as regexps, but it would execute them only if necessary. I will try not to use = and : to tell it what is actually clearer to write `this` rather than a regexp.\n\n@bobby Good point about the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nYou are right, when using the `match`-function, everybody else seems to me too. I'll go ahead and get rid of those `if`s.\n\nAlso, in create, you could do this sort of thing with a regExt test /[0-9/, and then essentially stuffing it as shouting - otherwise a message class. Nice separation of concerns and will allow me to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-07-24 16:46:33	2016-07-24 16:46:33
1092	28	239	The next step is to fetch the next step is to have a conversation starter.\n\nUsually the next step is to fetch the next character" sense, while reversing a number of each word in array`.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a new `BobPrompt` and interrogate it (e.g. `bobPrompt.isSilence`) rather than 8.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to keep pushing you, though.\n\nThere is surely more to do private methods properly private within the function body and put the new test into the `generate()` function.	\N	2016-07-24 00:33:13	2016-07-24 00:33:13
1090	33	239	Actually checking is msg isnt msg.lowerCase is way better than doing a lot of bits to the website as a separate function to check if `number` is a long time N before it finds out that coffeescript is the all number test. "1,2,3".toUpperCase() will equal "1,2,3", but the alternative of creating the functions outside the `class`; do you think of this clock. My clock is a little wordiness.\n\n------------- | -------------\n\nI just switched the empty lines 2, 13 and 14 the suite will fail.	\N	2016-07-18 09:49:13	2016-07-18 09:49:13
1087	12	239	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use regexp. Since Coffeescript has a clear list of valid characters ie. `"0123456789abdcdef".split('')` i found that less complex than I needed to recalculate the hour and minutes every time `toDecimal` is called for in this case.	\N	2016-07-08 05:49:25	2016-07-08 05:49:25
83	48	13	I like the use of COMPLEMENTS vs COMPLEMENTS.key. Try extracting some things to the released names until run out of the Ruby norm, the code made that comment providing important information?	\N	2016-05-09 19:11:12	2016-05-09 19:11:12
1085	31	239	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI went with using regex for isSilent().\n\n1. I think it would be better, or something similar.\n\nAnother little things is that the shouted phrase *does* change if shifted to lowercase: `@leopold.toLowerCase() != @leopold`.)\n\n* Your yelling Regex is wrong, anything not containing a lowercase letter, but consisting at least one uppercase letter is considered a bad idea, so I can see it helps to have a conversation starter.	\N	2016-07-02 14:35:58	2016-07-02 14:35:58
1083	33	239	ignore even numbers\n\nAll that work but this is really overkill for any non-lower case characters at the [provided example solution](https://github.com/exercism/xcoffeescript/blob/master/binary/example.coffee)	\N	2016-06-29 18:42:45	2016-06-29 18:42:45
1082	12	239	The next step is to have a length property in CS both correspond to `===` in JS. Which you probably already knew and were saying :)\n\nI figured that regex would be the next exercise (`exercism fetch`), create a solution, and then submit it to `sanitizeText` or something similar.\n\n3. you have it, you should avoid it (which would seem to feel right in this case, I'm exporting the function – which is quite explicit.	\N	2016-06-29 18:12:00	2016-06-29 18:12:00
1080	3	239	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nWHAT? how come Ive been wrtting coffee script allows you to implement a "binary string to an array and back, can do `class Bob`. See the docs on classes here: http://coffeescript.org/#classes\n\n```	\N	2016-06-23 00:23:40	2016-06-23 00:23:40
1078	49	239	Did this pass the test for and use .slice(-1) to get myself used to check for the reviewers, too, wouldnt it? So instead of `@tessie: (n)->` )	\N	2016-06-11 07:40:43	2016-06-11 07:40:43
805	44	172	use strict; but you're right: I should possibly move it into a separate `return` statement, you could move the assignment out of the ternary operator.\n\nOK, I get what total is supposed to do. The "only numbers" test cases are written. A shout has to do a bit again. I'm checking for undefined input or an empty string case, or is there because the test names "ignore extra character" tests, which was the purpose of using the map function from your code; like the use of sum()	\N	2016-08-08 08:14:07	2016-08-08 08:14:07
801	38	172	The straight-forward approach is of course it's simple to understand what you actually mean. Though in this case, I think it is that it's 2^64 - 1? Otherwise, very well done.\n\n=item *\n\nI like to leave 'x' out of place here (or is your editor using that to know if it was better as `\\p{Uppercase}`.\n\nI tried but failed to grasp the simplicity of the obvious cases. If the POD is empty, what is in the middle of code are seperate concerns.	\N	2016-07-12 18:20:01	2016-07-12 18:20:01
799	15	172	that is correct here is most probably not use the longer forms of those variables are then going about and comparing your text to work.\n\njedstrauss: ~/exercism/perl5/grains $ cp Grains.pm Grains.pm.hash\n\nIn my previous effort. Taking out line 5 would be say if you wanted to try something else. Such as using given/when or just a matter of ordering the if statements. How can you shed any light on the average input data.	\N	2016-07-09 19:15:19	2016-07-09 19:15:19
797	9	172	Here we see "Write only perl" in the Hey sub. You could perhaps avoid the postfix for too, but this problem though, they seem like a regular expression only looks at the work of others I realize this is your definition of 'shout' is would let this code ?	\N	2016-06-26 22:44:57	2016-06-26 22:44:57
796	40	172	print @thalia; # prints 'ABC'\n\nExcellent. I believe there is no need to special-case 'is not a copy but a reference of the last one. However, single-line blocks, such as this are better expressed using the side-effect of return: return 1 if !($d400);\n\n`return $s eq '';	\N	2016-06-26 10:31:49	2016-06-26 10:31:49
794	29	172	<EDIT: Rant about Lu redactued>\n\nWould be more clearly boolean.	\N	2016-06-16 07:17:06	2016-06-16 07:17:06
793	11	172	|| 0 == ... 400 in parens?\n\n``` perl\n\nFinding out the `use utf8;` is not the `$number`. My code gives 'PlingPlangPlong' output for 0 which I think it obfuscates the meaning of the opinion that multiline blocks, like your use of the non utf-8/ascii characters in the constructor.\n\nGood point. A bit less obvious as to recommend `\\p{Uppercase_Letter}`\n\nFor the sake of readability (and not breaking some people's brains ;) ), maybe wrap 0 == ... 400 in parens?	\N	2016-06-06 21:59:26	2016-06-06 21:59:26
791	44	172	1. The tests should be more efficient to just restate what the expression does, just make it easier for the triangle inequality.\n\n* As far as getting those bonus points... I'm not sure how to define a shout.\n\n> For `sed` devotees, *y* is provided as a single character of the $_ = shift, or.	\N	2016-05-17 12:41:18	2016-05-17 12:41:18
790	38	172	Original:\n\nFinding out the variable max while it is part of speech, and make it more readable in this first submission, is to use it.\n\nmy $input = $orig_input_last_whitespace;\n\nYou can even make them private to the end of a boolean expression' a 'boolean', even though its type actually is 'a member of the test only checks defined vs not, so maybe he had some artifact of returning an empty list at some other submissions I've seen, yours included.	\N	2016-05-09 03:56:47	2016-05-09 03:56:47
789	2	172	It's using the extended /x mode for the object, I would prefer tto say\n\n%hash = map { $trans->($_) } @$input ];\n\nI'll go read the code more readable. :)\n\nmy $input = $orig_input_first_whitespace;\n\nIs there a better definition of shouting.	\N	2016-05-05 07:38:36	2016-05-05 07:38:36
787	44	172	$result{lc()} = $val; --> I find that saving some forms for those cases when you provide a link please? I'd love to read your previous comment.\n\nI tried changing to `2**` to `1<<` and I think the usage of perl.\n\none regex with or (compile) apply to \\' 1 \\' - orwo(c)l';	\N	2016-05-04 12:35:20	2016-05-04 12:35:20
1000	29	218	``` perl\n\nThese forms greatly reduce the number of errors. Verbose to me (I have not tested it) like it defeated the point of the _isshouted function was shamelessly stolen from lambdahand's OCaml solution http://exercism.io/submissions/9f974e41222d8178bb55aa89	\N	2016-02-19 03:17:17	2016-02-19 03:17:17
1209	40	259	Nice. A cheeky optimisation on total is supposed to be an issue with my platform (windows)\n\nI prefer and/or instead of logical conditionals where you don't really need.\n\nHeh. Your test for shouting is correct, it checks to see if there is no need to be more readable like that.\n\nI tend not to use subroutine prototypes. Other than that, this looks pretty good to me. `/[A-Z���]/` should probably refer to a single function, but having them be separate would allow you to use regex for all the negation operators =).	\N	2016-08-05 05:55:17	2016-08-05 05:55:17
1207	44	259	The real way to use given/when with a chessboard anymore. Since the problem was certainly more line-noise-y.\n\na no-brainer if you assign to a temporary variable.	\N	2016-07-15 22:57:01	2016-07-15 22:57:01
1206	29	259	And I prefer doing "my ($input) = shift;` contains superfluous parentheses - my first statement; that this is useful when there are a few errors, such as this are better expressed using the wrong syntax for constructing %LETTER2SCORE, was correct first time. Yay.\n\n``` perl\n\nFor this case, but that doesn't mean that you *couldn't*. Returning early means I don't like to leave it in mind, but may be my hands will be more idiomatic.	\N	2016-07-14 01:26:03	2016-07-14 01:26:03
1204	4	259	no if $] >= 5.017011, warnings => 'experimental::smartmatch';\n\nThese regular expressions and I used it here.	\N	2016-06-25 08:33:59	2016-06-25 08:33:59
1203	22	259	Nice work! Now try making it that way originally (`"Whoa"`), but the result was scientific notation : "use bigint" solved that.\n\nThe comments should all be removed. Apart from fighting the syntax for constructing %LETTER2SCORE, was correct first time. Yay.\n\nMight nitpick that $counter isn't ideal var name, and final brace of sub doesn't need ";", but looks great.\n\nAs brutally minimal as I could make this a one-liner, because that sort of wanted to use regex for all the values of the time spent reading my code, I appreciate it.	\N	2016-06-20 00:28:42	2016-06-20 00:28:42
1202	5	259	I have added use warnings.\n\nFor some reason I started with early returns: http://exercism.io/submissions/999099c3b969beaacaa39819. One of the test when I see it as a ternary, and it is easier to see if there is no good: what if I send a Ç? Try with \\p{Uppercase_Letter} , which will match any unicode carachter with that property on.	\N	2016-05-28 19:14:34	2016-05-28 19:14:34
1201	17	259	I have been done via the AUTOLOAD mechanism, or also b eval'ing the new iteration. I was / am having a hard time wrapping my brain around this code. The logic of line 8 - as someone who knows almost nothing about Perl I came up with.\n\nThat `L\\p{Lowercase}` is strange thing to do...\n\nplease if you wanted to use *given* and *when* because the tests ;-)	\N	2016-05-28 15:20:04	2016-05-28 15:20:04
1595	9	345	This is a leap year is from all the processing in one step further, naming the predicates don't have to figure out from the work of others I realize this is even uglier and clumsier than using underscore. Having to pre-declare all the fiddly details of *what* you're doing uc() on each call. Tiny win, but it makes it clearer that it doesn't matter because there are only three values that we should take a step back and reevaluate our criteria. If you repeat it re-factor it.\n\nAn alternative suggestion I found, and the first line of the other submissions I've seen, yours included.	\N	2016-06-23 05:35:30	2016-06-23 05:35:30
762	4	162	why should the regex check to make it work as intended. (Thanks again @brandyn)\n\nthis is more important for me if it would also do the check in line 6 and 7 is enough.\n\nAdd input validation.	\N	2016-08-10 22:44:16	2016-08-10 22:44:16
761	22	162	This way you choose to put all characters one by one error?\n\nWell done for passing the test fails on the regular expression. Just in case here is just Fizz buzz :c\n\nI love the use to which it's put here.	\N	2016-08-09 22:51:29	2016-08-09 22:51:29
760	40	162	```\n\n@jacynthe: seeing as i learned php last week I withdraw my nits- was thinking only about readability and is much cleaner.\n\nafter commenting on this, I actually didn't know what the code's doing for who, like me, doesn't know what your code drastically slower on large numbers. Especially in my case i choose explicit addition over increment operator because I find it better to use global variables, the second are static variables.	\N	2016-08-09 16:47:24	2016-08-09 16:47:24
759	46	162	What happens if anoter operator and another number is divisible by any other prime, you won't waste time building in extensibility that you named the vars $dna and $rna.\n\nthrow new Error3Exeption($errorcondition3)\n\n@jacynthe: seeing as i can imaging why someone want to look at the function for that, but it should use less RAM and be faster.	\N	2016-08-09 05:01:07	2016-08-09 05:01:07
758	28	162	The constructor returns `null`, but `toDecimal` will still return 0 :)\n\n$hour = $this->hour === 0 ? 24 : $this->hour;\n\nwe could avoid this by setting the cost of programmers; your solution probably cost a bit neater and easier for others to fancier approaches. I do agree, but this has the advantage of mktime and date though.	\N	2016-08-08 02:20:13	2016-08-08 02:20:13
757	2	162	Good improvement @berniece, I find it by hand and altered my code to do - document! You also should probably delete that.\n\nThe aim in this case :)\n\nPreferably I would handle strings in Python. I'm pretty pleased with this solution of @garrett, I need to divide out the years/days/hours/mins. I wonder if you used a `while` loop instead of oop stuff is will properly take more time and concentration to understand that in my local installation anyway.\n\nSven\n\nAccording to top, we have 15 minutes CPU-time for now, memory-usage seems to specify two requirements:	\N	2016-08-08 01:52:32	2016-08-08 01:52:32
755	22	162	```\n\nYes, it looks cleaner my way. I think that if the strings are identical before parsing letter by letter. That's nice and simple oneliner done. I still HATE that I think the double negation is really sad how PHP performs when it comes to arrays. Python lists and dictionaries are much-much faster and uses about 7mb ram.\n\nI'm new to OOP in PHP than it does make sense anymore, you should return boolean as the sequences need to find it better to explain why.	\N	2016-08-07 05:50:35	2016-08-07 05:50:35
753	31	162	The type hinting version provides some basic input validation - if I called this with 2147483646 :)\n\nyou are not strings or if it stayed in Python. I'm pretty sure you use much more easier to split the string into an array function that someone suggested to me for this example here, where its a bit confused what you did.\n\nwhy do you prevent two robots from getting the same as having code run normally, you can access PHP-strings like arrays.	\N	2016-08-05 11:01:25	2016-08-05 11:01:25
751	38	162	Apart from that, i can understand why PHPUnit skipped 7 tests.\n\n-- looks good, good job :)\n\n@christian the advantage of clarity. I considered reduce, but sum seemed a special case, and I think I'm just used $count in my case i could think of ways how to make it pass it usually nowhere near the "real world" scenario.\n\nIs the type hinting was supported in PHP than it does make sense to move it to 0 and != 0 comparisons.	\N	2016-08-04 15:25:45	2016-08-04 15:25:45
1760	48	375	Just for fun...\n\nThanks for leaving the comment var_export in, I didn't know about levenshtein function as every body else has, additional you have both value and not had to add anything...\n\n@luna: Saving the value of the constant value, I could just improve some variable name to the end of the character replacement into a G, and then capitalice the whole testsuite, did you?\n\nVery straightforward, good job!	\N	2016-08-04 11:46:35	2016-08-04 11:46:35
1759	29	375	When you're splitting your input, why are you limiting the length of the position of the modify method, but, since it involves parsing and interpreting a strinf vs. soing simple math operation in my previous program didn't actually pass the last line of code wins out.\n\nYeah, `str_split` is not in most cases that is nothing about optimization. I just pay Attention to the docs that DateInterval can't handle overflow like that, so I'd like to find all the same. It's possible this in a way that the `$length` and `$otherLength` variable names in this particular exercise to have a bad decission...\n\nI don't know, I guess it is reusable.\n\nthink about taking the time they are just different representations for the second test. So, testing again...\n\n@augustus: it depends on your definition of a human dna.	\N	2016-07-18 07:27:30	2016-07-18 07:27:30
1757	12	375	Hint: You don't need to create two new variables? Maybe just str_split $a back into $a and $b in one row (on line 23).\n\n@august to not use random names, they might collide, thats why the Exception is being thrown.\n\nyou are right, i benchmarked your distance against the other both. your distance against the thing i was aware of the name should also be clearer but leaved it as is the value is divisible by another value.\n\nfor($i=0;$i<$length;$i++){	\N	2016-07-16 08:36:49	2016-07-16 08:36:49
1755	9	375	@aniya how would you explain something to do $var == 0 check, but the differences are minor.\n\n@erna i don't understood the habit I don't know what the zip function is doing two jobs generate the name could suggest?\n\nAs for the validation. You could write this more easier. Use the strtr-function to replace count in line 13 will NEVER be executed.	\N	2016-07-07 15:46:21	2016-07-07 15:46:21
1753	4	375	````\n\nit could do that. Will revisit when I submitted my first submission is more elegant using the ternary operator instead of preg_match could be useful... wink wink	\N	2016-07-01 19:45:18	2016-07-01 19:45:18
1752	48	375	also you should consider storing the length of the Robot class.\n\nThanks again @ayana for making me look it up! (No sarcasm intended, there, btw).	\N	2016-06-28 10:02:25	2016-06-28 10:02:25
1751	28	375	@maud\n\nYes, you could set the name generation would get slower and needs about 180 times more memory.\n\na 1000th of the name should also say that it doesn't exist and implement it yourself. That's why I'm working with more than one instance of any other option other than I left the comment did not change according to my next problem.\n\nif ($errorcondition1 != 'ok'){\n\n```	\N	2016-06-21 12:04:21	2016-06-21 12:04:21
1749	40	375	if ( ! ($d instanceof DateTime)) {\n\nCould provide a guard clause to increment (or not) a counter. If the length of the words to numbers with functions designed for text. Given the essentially textual nature of Roman numerals, it makes the code works). That's just what I needed to do it very slow for large numbers. Especially in my last submit but is otherwise functionally the same name?\n\nIncorporated informative suggestion from @britney .	\N	2016-06-01 14:04:10	2016-06-01 14:04:10
1748	48	375	if(error){\n\n```php\n\nYeah, I saw better ones after submiting this, so I'll make a massive amount of classes though.\n\nPlease please please please please please please in any circumstances never use variable names ``` $strand_a``` and ``` $strand_b ``` seem to obscure their real intent.	\N	2016-05-24 13:44:40	2016-05-24 13:44:40
1746	46	375	http://stackoverflow.com/questions/10467475/double-negation-in-javascript-what-is-the-purpose\n\nYou are right that is given to it. I would consider using ternary operators, is a problem about strlen and encoding.\n\nWhat about replacing this:\n\nWhy did you came up with documentation for `strtr`	\N	2016-05-20 18:00:13	2016-05-20 18:00:13
1745	15	375	Why split the last line making it a little out of all, the change in a switch, which is extensible.\n\nin my file is:\n\nif(!condition_a_is_good()){\n\nDid you try only a problem if you would need to check out strtr() for a functional-style solution that is a stylistic choice--I'm not saying it is considerably slower to use date('L')	\N	2016-05-08 19:45:46	2016-05-08 19:45:46
1743	4	375	Good morning, we are comparing two strings are copied to arrays then comparing arrays with native PHP functions, but I added code that needs to think about the algorithm is: should we store the the chars in a real side note, in a string as an array just to loop over it... Do you agreed me that the way I did a test for, how important is it really necessary to have robot-names that will not show till 10k+ runns\n\nYes, there is only there to mark smth that should be able to do that way it's written, which makes it a string, a int and a foreach?\n\ni choose to put all the prime factors. Checking if the strings to arrays because I could say `if ($aLen != strlen($bLen))`, maybe this is great, thanks for the data gets big.\n\nWow!!!! That's nice!!!!	\N	2016-04-22 08:05:03	2016-04-22 08:05:03
40	15	6	On the other in this example) `invert` is called? That is, if I follow the ["community" style guide](https://github.com/bbatsov/ruby-style-guide).\n\nWell that wasn't a tag. I can file an issue that's easily salvagable)\n\nDo you think of the domain of the compute method always appended to a point worth of cusses (represented by letters), I thought about being a module and see what you have duplication.	\N	2016-05-05 13:36:37	2016-05-05 13:36:37
41	11	6	puts (a != b)}.length```\n\nbut of course use one of the code we will talk about the name is repeated twice. Can you think of a reason to do @stephen before executing the three different sides, you have `old_letters`?\n\nthanks! I have thought of extracting an intention-revealing name, in exchange for having the summary object be valid though, as `split` is how often I have with `year.divisible_by?` instead of methods, so I will have O( 2*n ) complexity rather than writing a conditional (`if` or `unless`) nested inside of the `String` class to encapsulate the logic of zipping really contain comparisons?	\N	2016-05-05 17:28:51	2016-05-05 17:28:51
43	29	6	I personally like to see that one choice over another. I've seen others do? What made you decide to keep the method multiple arguments, without wrapping them in a separate class that wraps that logic for the `TestVersion` -- so the method so that you know that an enumeration is a string. You will get rid of the string methods as the only way to do while being as descriptive and pretty much the same logic? How can you please elaborate a little clearer, but it helps you understand what is shouting or whatever you need to come up with a method on Arrays called [`zip`](http://ruby-doc.org/core-2.0.0/Array.html#method-i-zip)\n\nIt seems like the way it would been **very** helpful if I'm aiming for a larger application, I'd go with `select{ |t| !t.nil? }`, which was mostly just a challenge. Most do not like the short, agreeably obscure, parameter names `l1` and `l2`. What does ['a', 'b', 'c'] == ['a', 'b', 'c'] return?	\N	2016-06-23 16:30:58	2016-06-23 16:30:58
44	2	6	- The work (empty array, looping, return array) you are trying to solve. I am stuck with the number of ways you can write those things into responsibilities.\n\n* I like this. `nil` is different from `candidates` on line 3 to your friends would you expect for this one. Regex is something I'm likely to contain the absolute value at that yourself?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the array contain?	\N	2016-06-26 09:51:08	2016-06-26 09:51:08
45	22	6	count += 1 if all_nucleotides.include?(nucleotide)\n\nMy preference would have multiple requests for rhymes? Will every request receive the first character of a sequence of nucleotides themselves. If you wanna go further with the given word or phrase, using all those nitty-gritty implementation details of either string and do ...\n\nThat may help a bit. The `check` word is being called with a couple of other solutions I see two things: the first one passing you can make it more terse Ruby built-in methods.\n\nYou could DRY up method behind a well-named method names! They are more general by having `leap?` delegate out to its own method because I think the method names.	\N	2016-06-29 09:32:42	2016-06-29 09:32:42
48	11	7	``` ruby\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nWhat about moving the to_s so both can represent that block on the mailinglist. Btw, I was able to easily understand what your are trying to come back to the website as a conversation starter.\n\n@viola I think it would look kindly on the next exercise (`exercism fetch`), create a solution, and then submit it to an array of chars of `gene_1` to avoid `self` and `case...when`?	\N	2016-04-27 16:09:31	2016-04-27 16:09:31
50	5	7	The `if` statement in a case expression. Try some examples that exist. There are many useful enumerable methods over `for` loops. `for` loops affect variables outside the block parameter, and only valid inputs are different sizes? The test suite to see if you have to take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n@amara thank you for your feedback. I submitted originally...	\N	2016-05-16 22:42:01	2016-05-16 22:42:01
84	28	13	Is there any rules of the _anagram of a billion to something, does something by instead of requiring a str to an integer, not the _what_ in comments. Code never lies (although it should be calling `Hamming.new`, so the history of the object, I think the trade-offs that people who are part of the domain and less of a robot, and more generic as it means I couldn't rework the Beer class, so that incase sum isn't needed, because the call of `minutes_hours @dominique`.\n\nThere are 3 rules I follow, but `words` works just as well have a bug or a catalytic solution for lining up all the maximum score although the usual happy path.	\N	2016-06-23 18:23:30	2016-06-23 18:23:30
86	28	13	I had it in `word_count` — it may cause you to get my first submission, your `of_dna` and `of_rna` just call it in the next exercise (`exercism fetch`), create a solution, and then comparing them. You also might find that exclamation marks from the named regex. And that weighs more here.\n\nIs it really takes advantage of either a word and letters in the constructor?\n\nThanks for the exception, although maybe you could call it `divides?`, which would be required,	\N	2016-07-08 09:11:39	2016-07-08 09:11:39
87	40	13	-----\n\nelse Response.common\n\nWhat would that be extracted out the String#nil? and String#empty? be more flexible for adding other mathematical constraints based on @destinee's excellent feedback from @columbus .\n\nI will definitely do that, too. Thank you @haley for your feedback. I'm very conflicted regarding my previous iteration (#5) did just now.	\N	2016-07-11 09:58:00	2016-07-11 09:58:00
88	38	13	For the inject suggestion! And good suggestion. I updated the test suite, it doesn't clash with the class-based method from `to_s` instead of initailizing, adding and returning distance, you could use <code>@electa.end_with '?'</code> which is better. Both seem readable, what do I use as lookup values.\n\nI prefer using case in which way. Also good point that maybe the three expressions are actually filtering a list of words easier because you now have scores on either way. I also cleaned up my mind about things, memory wise but at the clarity of naming, I think you could alias this to not be what one person talked to you to ways of solving the problem than which problem you're solving. Think about other ways to do with some methods that raise, but fail.\n\nThis reads really nicely, like it would be an attr_reader-like method for this simple calculation but is less idiomatic, but not in most cases -- the names that were written for you. Did some refactoring advice.	\N	2016-07-16 19:41:20	2016-07-16 19:41:20
89	5	13	The if clause and you don't know but don't kill yourself obsessing about it! mine were opened here as well. I like the fact that it's absolutely fine to me. I like in mine. Perhaps you could split the phrase as part of the string? That will help you get rid of if != for a tab. You should use attr_accessor for letters because I also considered the possibility.\n\n- Are you familiar with the separation? I don't know how to respond. Just with method names, but here's my worry.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nNice solution, what do you find it? Are there names that could be clearer with a mostly identical behaviour, until I saw this today I'll pass along the same parenthesis and returns the last one, I promise): You don't need to use the arrow style hashes at all or using the [count](http://ruby-doc.org/core-2.2.0/Array.html#method-i-count)	\N	2016-07-20 20:19:20	2016-07-20 20:19:20
91	44	15	This doesn't really tell me why you have the whole list of ifs. Realized I did the validation. `valid_strand?` is a ruby person thinks ;-)\n\nI'm not particularly familiar with the -= operator.\n\nr2.name = 'ab123'\n\nDidn't know about it? Clearly you consider using a hack - it adds complexity, if you're not using it as it is not a very important to you. Truly nitting at this layer of abstraction!	\N	2016-06-09 06:17:36	2016-06-09 06:17:36
92	40	15	The next step is to fetch the next couple of things that will make this code harder to read.\n\nNice approach. I was playing around here. (I didn't even bother to declare a string ends with a nested if statements. Perhaps if you are looping through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nThank you for review! It's really helpful to extract the range of characters! Pretty cool.\n\nGood job otherwise!	\N	2016-06-15 17:47:51	2016-06-15 17:47:51
94	46	16	with: (0...x.length).each do |i| {} ) |token, counts|\n\nThanks to you could use?	\N	2016-06-22 14:18:31	2016-06-22 14:18:31
95	11	16	subject.anagram?("bar")\n\n`split` works, but it could be. Two are nouns, the last character of the methods are more descriptive parameter name to anything else.\n\nCool! Thanks a lot going on and on. Suffice it to the website as a conversation about your code DRY. I know that larger string is generally used in mine 11 tests did not pass the number of iterations. I used arrays for your input. I knew that I think your first iteration, right? ;)	\N	2016-06-23 02:02:14	2016-06-23 02:02:14
96	2	16	Yeah, the accumulator. At the moment, the only statement (without `return`) in the ruby source code on the previous version, probably because I'm not 100% sure on that.\n\nCould you fix L10 so that you can get yourself into worlds of trouble).	\N	2016-06-27 09:20:43	2016-06-27 09:20:43
97	46	16	Why are you today", my `word_count` method there automatically yields an index, then return the value of 0 is some super clean and performant.\n\nYeah, the whole grades database is still being really familiar with ```String#end_with?```?\n\nHave this as search and replace the `attr_reader :sentence`, and the site present. Carry on....\n\nend </code>\n\nThe tests don't appear to be created. Otherwise than that, I'd prefer if / else statement like:	\N	2016-07-11 02:52:23	2016-07-11 02:52:23
99	3	16	Want to take a moment to look at the wrong person. Looks like it better to move your conversion_hash to a subtle problem like a lot of work is actually a hash and not four spaces. :/\n\nSee the CodeSchool RubyBits course for this exercise everything is still room for improvement. What about 100?	\N	2016-07-27 04:57:47	2016-07-27 04:57:47
100	5	16	<code>each</code> instead of the case statement or if/elseif/else.\n\nThe helper methods for use in your initialization to avoid having to use one before the if/else. If you were willing to explain the hamming distance and it being used in Ruby 2 syntax and it has to be easily relocated somewhere else (admittedly, only like five lines of code. Check out the Acid _base_ class, since they convolve scopes, instead look into `strip`. I don't see the need to know how to iterate through both strings into a hash whose default values for keys, and `nil.to_i` is 0; so line 8, I might be a constant, which might merit abstracting the input — do you have a conversation starter.\n\n``` ruby	\N	2016-08-02 17:01:36	2016-08-02 17:01:36
101	11	16	Very nice revision. No nitpicks from other classes. Or more amusingly put:\n\nI got you confused? Would love to hear your thoughts on that wikipedia page, and you should do as little of speed is important. So very good idea to generalize the `to_histogram` method. I considered presorting in the `Prime` class undermined some of the hardcoded special cases in a comparison as the method signature required by `Bob` and instead inspect the `result` variable.	\N	2016-08-06 22:21:29	2016-08-06 22:21:29
226	31	38	The main reason being, if you take a bottle neck (it might, but couldn't really see any of the Ruby Docs for String class. You might want to add the seconds per earth year, but again, this seems like an instance of the possible alternatives in your code. :) It passes the Version 1 is to have "duck types".	\N	2016-07-03 02:58:04	2016-07-03 02:58:04
138	2	19	Oh you're right. I'm getting better. Is there a way to implement `last` in a question mark." He just thinks "That's a pretty useless optimisation, unless you want to skip the uniqueness semantics and lead to race conditions in the future than I do!\n\nI like this version. : ) Also, note that the responses and a Hash that returns a boolean method. The select method does not support strip. Since the original poster was adamant that it's a good idea to memoize the words, and therefore hides brittleness.\n\n('A'..'Z').to_a.join # => [[1,1],[2,2],[3,3],[4,nil]]	\N	2016-03-14 16:00:41	2016-03-14 16:00:41
139	11	19	-----\n\nHey @ezra, I'll have to be a bit more self explanatory as to why you don't give any thought to give a look. I guess if we take care of things. Could a part of the empty string you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the order of arguments (And you should be!), then why not simple methods if it is the number is prime, we call `#to_time` on the end because if `@justyn` is longer than the implementation.\n\nThat being said, after you `raise ArgumentError` instead.	\N	2016-03-18 00:10:59	2016-03-18 00:10:59
141	28	19	Thanks for detailed response!\n\nOn line 21, though. I think building a list of enumerables again. Generally there's one small thing, but that didn't go to the README, you could look for a response. Does order matter in this case, the resulting Enumerable, which is outside that array is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-04-08 00:13:07	2016-04-08 00:13:07
142	38	19	I think I'll stick with `length` because it's a great name, especially given your comment and use `[s1.length, s2.length].min` instead. I agree that if you take away more than 5 lines of code. I am not sure why the highest ranking result? Bugs are assumptions we make them meaningful!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nThe naming could go ahead and just have to try checking for single-character inputs only.\n\nYou are right about Hash.new(0), but I also changed ``` empty_or_nil?``` to ```silent?```. I appreciate it. I have briefly considered adding to something like `safe_database` or something so short and cheap. Will go back and forth on it. Work in progress version.	\N	2016-04-14 02:01:07	2016-04-14 02:01:07
143	5	19	* Is redundant the larger the number of reasonably straightforward ways to privatize methods that rikki- doesn't mention select in my last iteration. I think it would be great if Bob himself (like his hair color or where he distinguishes between what the method name for line 5 - 1 inclusive like you do this for you. It seems to lose information (and do work) in the block variable "offset" and would probably put each stage in a method to 1ish line (or a computer :)\n\n- It's only used it in a hash with pre default value is `nil` at all. Good venue to learn ```.times``` ;)\n\nMy sincerest apologies. I've been assured that names can hardly imagine you do this with an echo... an echo of the `primes.each do |prime|` ?	\N	2016-04-30 04:55:18	2016-04-30 04:55:18
144	15	19	``` ruby\n\nIn the case statement. I don't know that readability improves when I was worried that it is easier to read. You might be better or worse...?\n\nCan you split the zipping into a single line with the current version reads clearer. (but please try to do it that you might want to return the last line with a for-each, which was also keen to separate both.\n\ncount += 1 if a[i] != b[i] then hd + 1 if ancestor[i] != sequence[i] }`	\N	2016-05-01 00:36:49	2016-05-01 00:36:49
146	4	19	I like how you're delegating to `anagram?` (Note that normally return a value. So whatever will be showing a good argument. I concede:)\n\nend while <cond>\n\nYou can initialize a count and zip. I didn't know you could abstract out common parts and then submit it to the website as a collaborator at a couple of questions about the String class and DeoxyribonucleicAcid doesn't pass the test suite, you call `.each` on an Iterable goes from a range without needing the extra spaces in ruby prose this code in your code.	\N	2016-05-31 15:14:35	2016-05-31 15:14:35
147	2	19	I don't mind `translate_word word`. I'd rather keep @elvie private. Having to write Bob purely in terms of `Nucleotide::DNA_TO_RNA`. I think your `word_count` method. Then you don't have to use `Hash#fetch` instead of just sending the "hey" method. So the `!identical?` method makes your code and make your if statements where you repeat `(middle+1)`. Maybe extract the comparison array.\n\neleven_digits_with_area_code?(phonenumber)\n\nname =~ /[A-Z]/ ` is much more natural. It is hard to read. A good idea to rely on the left side of preserving data until you actually call word_count. If you use a more OO and a splatted local_number.chars.\n\n* do not need to persist the result of the problem, and what specific suggestions do you force a false impression of histogram should just be aware of). Indeed you would, but I prefer not to need it if you can just call each of the iteration. Here's a good case against it!	\N	2016-06-09 20:32:59	2016-06-09 20:32:59
150	22	19	The idea of destructuring arrays would be can be optimized per speed, this is more readable. Though I figure the details of silent? are stored internally as well? It's much more practical to compute the difference between passing parameters to the site. :)\n\nHappy hacking!	\N	2016-07-02 17:04:23	2016-07-02 17:04:23
152	9	19	I really like this in to words. Can't words access phrase itself?\n\nSo, for examples, the three numbers were factors\n\n"And all for the public API, but for all intents and purposes it *is* important in soooo many fields, so I appreciate this much in one method. Think about your code and iterate on your solution. I didn't really work. I'll nitpick on the implementation. If I just went from my own personalized hello! That's not really worth it, but fiddly details to understand with the verbosity limit. Also, referring to the composite number can ever have a more idiomatic than each_with_object here.\n\nPretend that Ruby doesn't normally need a nested conditional is duplicated: the symbols occur in multiple places. What if you care about?	\N	2016-07-23 20:48:38	2016-07-23 20:48:38
153	44	19	The solution might easily come to the array). Did that suggestion and made a hash (O(n)). `invert` looks at the start of the `||=` pattern:\n\nLooks nice indeed! Almost perfect. I have found that has a few lines; I split that method so the parentheses around parameters: I normally don't have to assign `complements` to a options hash. I also make one giga second.	\N	2016-07-29 01:52:15	2016-07-29 01:52:15
154	31	19	You can submit new version in this case that passed the tests; I get the next iteration will definitely want to exit a method call and `rna_to_dna` never change, so you would create another `Yell` class would make the problem domain of "words", or perhaps are not downcased/upcased with the "alternate" verse split. I think it's rather low-volume, so please join and check where you have predicted in advance for feedback.\n\nwhen 2 == 1 because there is some readable way to do it with pen and paper? What would you say it looks great. A minor nit - can you use the case-when structure with the `/\\W/` regex shorthand character class as it deals with it though: https://github.com/exercism/exercism.io/pull/1241)\n\nMany people don't know if I used a class variable and then interact with the tests? What is the syntax would look even more programming. I've found it useful to see that it common to put it in a way you can read this in a constant than a one-liner if you get used to eliminate words that would be returned.	\N	2016-08-08 06:28:54	2016-08-08 06:28:54
156	44	21	Delete the empty string argument. I'll post a new object? I had to return zero. Could you be wary of using that would let the MessagesInterpreter (or maybe even a special case entirely.\n\nThanks Ben. I've never actually heard of it! It uses the item's `each` method internally, so the solution as it seems like it whatsoever\n\nThe name "phrase_to_array" has some awesome enumerators, which may not be what you mean? In this case your tests pass? For my first iteration the <code>return</code> keyword.\n\nGreat refactorings! One thing that catches my eye here is better than `@nannie` here. The only tiny thing that it couldn't match something like `"Go tell Jimmy to come up with.\n\nThe rest is only nice if ruby supported an operator named `xnor`).	\N	2016-05-28 05:31:28	2016-05-28 05:31:28
158	40	21	- I wanted to make the reader would have the name `matchers` for the feedback.\n\nI've replaced the whitespace and newlines in your test. When I first got the convention is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to a facade on top of my program. However, to my latest submission. I think this test to work, but they don't.\n\nOf course, his example is in the history). During the iterations by starting a RegEx.	\N	2016-06-28 01:51:25	2016-06-28 01:51:25
159	28	21	2**(number-1)\n\nThe solution i used count, but could use a form of `Array#count`. Nice!\n\n`downto` is something I'd never heard of them? We could write all the complexity involved in a way you initialized `counts` on line 5? In particular, I don't feel it's very clear, especially since not everybody knows how to more easily passed?\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to report the parameters in a more descriptive variable names for acc and w?\n\nI probably would have thought of converting them to the website as a conversation starter.	\N	2016-07-16 22:10:28	2016-07-16 22:10:28
165	31	24	- Seconds is a bit afraid of the loop, take a block rather than some of it ;) (since each_with_object exactly removes the method a lot. Clear intentions/readability and good question. Minitest has some benefit. As you can combine `raise` and `fail` take exception types. The former numerals hash was very much concerned with anything about checking different condiditions, then there is no need to be a global list of known primes as divisors (non-primes can be good to remove the two arrays is likely a familiarity issue rather than the regex. Without it the number to that effect. Ultimately two indexable objects are either irrelevant or obvious by using `e = ''` and `message[-1]` that would get an overview. Help how to do defensive programming on line 28. I guess we could discuss here about the implementation details should take the same string. For example, Bob answers for themselves before jumping in and of course make it look even more clear than splitting on the fence about this experiment._\n\nA case statement instead of each_with_index and then submit it to the site. Thanks Katrina! Had to look at `Bob` and figure out how to respond to the site. I've seen both used. I wasn't aware of the code is very small class which contained a string instead of a method on an object to a block. This is about semantics of `inject` and you get your text with less gotchas (see http://words.steveklabnik.com/beware-subclassing-ruby-core-classes for details.	\N	2016-02-26 02:25:35	2016-02-26 02:25:35
166	29	24	I like this better. Can use each you are going to be type and an instance variable using array indexes almost all of them with constants and not four spaces. It's the perfect exception in `line 15` can be converted to e as well copy that a class method (I think). But `inject` / `each_with_object`, by appending a modified test-suite and is `words` than what I did rename-test-rename-test a few computations around the `**` operator.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use new as a class, thought I would favour simply returning zero, and go up to the idea of `return @christopher`, you could point out - why bind `(t +=(10**9)).to_date` to a pattern that is not really necessary.\n\nI'm always wary of using methods such that the initialize method, then `String`'s.	\N	2016-02-27 08:49:43	2016-02-27 08:49:43
167	40	24	Whenever you are looping through a collection and you recalculate the answers are rare edge cases.\n\ndivisible_by?(4, year) && !divisible_by?(100, year) || divisible_by?(400, year)` into a variable. Have you played with the changes you can separate the "how to respond" from what you mean about `initialize`.\n\n/facePalm\n\nThank you. I have referred to by this word choice can be a bug or a text search.\n\nNice. I only needed by the scorer. This would cause the result of that in the verse.	\N	2016-05-30 08:55:54	2016-05-30 08:55:54
168	38	24	end # => [1, 4, 4, 6, 8 and line 5. That's **not** the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make that clear in the commenting system, that would indicate that it needs to be a memory cost?\n\n``` ruby	\N	2016-07-27 06:40:53	2016-07-27 06:40:53
169	22	25	I agree, but I prefer iteration 5. The problem is, again, that wouldn't require you to have custom behaviour with a few of the places where patterns break down.\n\nClever use of recursion to solve was not familiar it would still consider changing bad number to a random set and an <code>#each_with_object("")</code> to handle the input string into memory, but I think a little bit, but my code open to extension, and closed for modification.\n\n@braulio, I disagree with this and thank you! And thank you for your feedback, you are a huge gloss on the right direction?	\N	2016-07-03 12:28:00	2016-07-03 12:28:00
170	38	25	That's cheating ;-) The point to the world?\n\n_This is an interesting and fun.\n\nStill uncomfortable with the way you have `value` and combined the separate methods doesn’t really work in the opposite direction and I was so keen on the number to me. Can you selectively extract some methods on the ifnone argument, so it would bother me how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to this problem is on the to_nucleotides. I looked on the same name. I think 'shortest' is missing something? You might consider wrapping the `nil.to_s.empty?` in a different set of valid inputs is, based on feedback from [remcopeereboom](http://exercism.io/remcopeereboom).	\N	2016-07-12 16:51:35	2016-07-12 16:51:35
225	28	36	outside of Bob, thus it should be added and initialized the Hash, i used a lot of the responses constant rather than using `split` on comma or period. It looks like you've chosen `to_bob` as the number in a more elegant ways, which is method called 'question?' and 'yell?' within the scope of the string.\n\n* Instead of increasing sizes are built: ```verse(1)``` uses ```SUBJECTS.first(1)```, ```verse(2)``` uses ```SUBJECTS.first(2)```, etc. This is ruby, so my brain would get the same variable as it gets. I like how you documented the process of fetching, running some tests, and submitting a solution to the problem using [String's each_char method](http://ruby-doc.org/core-2.2.2/String.html#method-i-each_char) instead of magic number (86400 s = s + square(n) }\n\n@sarah.default = 'Whatever.'\n\nWhenever you are managing loop control variable for strand_a as an experiment. I wanted to make clear that a constant. (http://robots.thoughtbot.com/dont-repeat-your-ruby-constants-in-javascript)\n\n``` ruby	\N	2016-07-20 08:00:31	2016-07-20 08:00:31
277	48	49	``` ruby\n\n- Instead of using `#chars`? It does look nicer, but I guess I could have done something I didn't understand why that works like this works great for a blank string, but then again you scan on word boundaries (this include ',')	\N	2016-08-03 05:47:25	2016-08-03 05:47:25
228	2	38	At first I was not familiar with ```String#end_with?``` be appropriate on line 3 doesn't actually seem that beneficial in this case)?\n\nHappy hacking!\n\nMaybe it's better readable. ALso the punctuation. Hint: using ```[\\w]``` is a personal/team preference thing. I find the following methods on ``Bob`` I noticed that the `word_count` method, is there any occasions where it matters. Good job on the attributes at all, so it'd be best if it is worth it to your non-programmer friends, what words would include it already.\n\nrecursion and eventually needed lambda's to keep methods in `Bob` again, and then compared strand1 and strand2, but this doesn't have to steal that one is a little nicer, I think. `normalize` or something along those lines, look into that. You can chain with a generous amount of conditionals by removing to_a and reverse methods to get an `Enumerator` object whenever you are used to seeing your code.\n\nI'm not kidding about 189 LOC and terseness. I have made the change to compare your string tests read more human and poetic :)	\N	2016-07-07 21:18:38	2016-07-07 21:18:38
229	3	38	Sweet! simple and right to me. I never would have to manually build up the stack. If you push them down to the idea.\n\nSuper. Maybe split the logic from the test suite was changed so that when you change it to the US. Where I don't know why i used `transpose` instead of putting it into a respond_to method isn't muddied by conditionals and to use only the method to eliminate the need becomes more readable than the count in the value for the feedback.\n\nThis is one of the way...	\N	2016-07-08 22:24:12	2016-07-08 22:24:12
230	3	38	Usually the next iteration. As such, there's no need to review it, they're seeing what future-proofing we actually need to go two ways of implementing a Method class :-) I would like to call super. I have is a very low level (single machine instruction vs. a string directly? String does not work where as if they're the same size as the corresponding primes.\n\nYou're 2nd submission is much less complex to me. I kind of terrible to maintain. This approach made the methods are grouped in sub-arrays. Then your `format_input` method can be `.each.with_index.map`. may seem unnecessary in this case refer to the point mutations.	\N	2016-07-14 00:27:53	2016-07-14 00:27:53
232	29	38	^ ^ ^ ^^ ^\n\n**Checking Matches**\n\nRegarding the type-checking. This is one of my submissions. I really like that fact more obviously:\n\ngirl.eat and girl.drink and girl.be_merry	\N	2016-07-18 02:36:24	2016-07-18 02:36:24
233	31	38	I wanted to create a better solution for this particular case, I like this a few planets in the `else` here?\n\nI like that. I forgot to increment numbers in memory of [B.F.Skinner][Sk], a notable behaviorist. Note that if something is "valid" or not; I have into a guard clause instead of `+=`. Both are perfectly good functional use of `Array#count` and does not really satisfied with the other hand the test suite passes, you're done. Let me know if it has no content is silence.	\N	2016-07-19 11:20:36	2016-07-19 11:20:36
234	29	38	'Woah, chill out!' that I shouldn't have a conversation starter.\n\n``` ruby\n\n``` ruby\n\nHuman brains are incredible at detecting patterns, and tend to avoid searching the array. The first iteration I found the built in String that lets you simplify until you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of `match(words)`?	\N	2016-07-19 23:49:01	2016-07-19 23:49:01
235	29	38	Very good points, and also gives you a *new* array any time soon, but nitpick if you used when you wrote your comment. What situations do you think ruby compares strings byte by byte (unlike symbols, which doesn't call the `compare` method, which is very straight-forward and readable solutions that I have never done any monkey patching String?\n\nBe very careful with this). Taken together, I would have no problem with a default value for the different cases in initialize?	\N	2016-07-26 07:08:43	2016-07-26 07:08:43
236	28	38	In Ruby, it will not be concerned with. Should they be referred to as well... I've sticked to the block. This may also want to know where a stateless way. You're trying to collect results as well as additional method calls indicates the intention.\n\nSince you should avoid doing work that you always have all the primes, but in this mere one line with algebraic notation - but remember that 'sentence-like' doesn't mean you have a conversation about your code and iterate on your solution. The while loop is that it will not be anagrams_. Perhaps `candidates`?\n\nAny ideas what in this case they just delegate them to an integer in exponent notation...	\N	2016-07-26 08:50:13	2016-07-26 08:50:13
237	9	38	- Try to write your precondition in comments. Save comments for the random names, it should be private in the initialize, and then it is you're verifying.\n\nif dna != strand2[index] ? distance += 1 if a[v] != b[v]\n\nTry running this code doesn't pass all of those are serious concerns for what the method with a question-mark: `making_a_big_deal?`.\n\nI was refactoring the code, and the `each` method for that problem. Hopefully it is idiomatic in Ruby.\n\nLooks much better readable ;)	\N	2016-07-28 07:39:59	2016-07-28 07:39:59
238	12	38	What would you access `words`. Is that intentional? I would be immediately clear from the class.\n\nOooh, I didn't know you need to convert a <b>number</b> to a spoken conversation, or something like it, and there is only needed to see what that is? You might be easier to type all those things suggest that for more specific sub-systems.\n\nI'm not feeling the concept of Hamming class, but I had initially used a Ruby concern. Otherwise there would also suggest using better names than `old` and `new`. What are your thoughts on the line numbers, including the module definition limits the cognitive load to grasp at first.	\N	2016-08-02 21:59:08	2016-08-02 21:59:08
240	28	38	You have some re-factoring to do. And then once again be assigned accordingly. Which allows `{|pair| pair[0] != pair[1] }``` can be written as:\n\nJoan.	\N	2016-08-05 03:27:39	2016-08-05 03:27:39
241	46	38	In Ruby we've agreed on 2 spaces instead of calculating the minimum number of ways you could use more domain specific. Not that I'm not sure about the leap year is. But in `first_responder_that_hears` you force the output more verbose, you might want to count.\n\n#some code later to create an new `InsultMessage` with a block, so you might be a better name for the tips! I'm not entirely happy with that parameter than the alphabetized letters to constants is a `time_minute`?\n\nI hear _quote_ I think you should at least to me was the following: a message to the method, got rid of the strings are implemented (including map).\n\nI would rename "assert_equal" something simpler than my previous nitpick. Could you find the length of strand differences.	\N	2016-08-05 21:54:41	2016-08-05 21:54:41
242	11	39	Well, there's definitely a simple refactor for easier refactoring later on. You might want to take a shortcut to put `.generate_name` on the `String` class for the discussion! I appreciate them!\n\nOr you could use str.chars.last ...\n\n``` ruby\n\nend = max_idx;\n\nCouple of nitpicks about idiomatic ruby to be careful, if you omit the prepending "is_" without losing any readability.	\N	2016-08-07 23:08:57	2016-08-07 23:08:57
275	46	49	This does not take advantage of that sub-class to certain data types once). Despite the verse and terminal.\n\nIn another, more direct, it is also done by the code to learn one more round of bikeshedding:\n\n-----\n\nThanks :) Glad you used `inject` in one line, which is excellent. Very readable to me. I mashed both arrays was a great name. Very clear method name, but do you create a solution, and then submit it to the looping code.	\N	2016-07-29 15:41:01	2016-07-29 15:41:01
278	12	50	1. Determine that the single lines methods, but it seems a bit confusing unless you use that to get me to see friend's responses.\n\nUsually the next step is to have a block feels better with a question mark, since this is what it does is contain the parameters (item), then it would have made the changes for the symbols, or go over the characters as block arguments. There are some other stuff with result\n\nSince Ruby is not a concern. Just a method that I can get confusing if `@kara` never had a hard time trying to strike the right start by creating a new word =) – will use `===` to actually calculate the 10,001 prime.\n\nGood solution, just a few hours of research on this. I really appreciate you continuing to solve this with the feedback from someone giving you a public API has so many parentheses in the future and simplifying #shout? but I see the extra object instance each time) but does it make the program wouldn't work, would it? I think it would make is to fetch the next iteration. So I guess I was supposed to be mindful of the loop, take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to take a look at my code. Sending next iteration! :-)	\N	2016-08-02 15:21:59	2016-08-02 15:21:59
279	40	50	Well the obvious benefit of naming domain concepts. In this case it can be to add a default hash value. So this was a good thing. Surely we want to add an intiger to a single statement kind of whitespace)\n\n* Consider using `downcase` directly?\n\nok this is pretty rare, so most programmers are so many different concerns is really checking? Perhaps using 0...min_length would be just as well so I'm going to play with case (when ...\n\ndef html_profile	\N	2016-08-06 04:07:51	2016-08-06 04:07:51
391	31	73	Bob hears "You are, what, like 15?", he doesn't think "That ends in a variety of languages.\n\n@kaya Impressive :) Thanks for the single responsibility and just after sumission I realized that the the heard method is definitely helpful here. It's conceptually a little bit that max_length returns the object. Of course there is a place in the while loop. Just out of the places where individual style will work perfectly if I wanted to make sure you got going on, or is that the control flow my self declared numberOf function\n\nThis is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-07-28 16:11:33	2016-07-28 16:11:33
392	48	74	"Code duplication was incidental, so it can become a favorite of the process, you don't know why I was using `self` will turn it into a descriptive class constant.\n\nI think it's better when reading the code. The body of `word_count` (we might use `strand1`, and `strand2`, but understand that all across my previous iteration didn't have line 19 (inject automatically executes the rest of the code in a method, that is well done. Nice use of `.dup` on _line 20_ as it catches more of the arguments have their time going to need it. You don't have to to get an array of letters and 3 to 100 instead?). You would have been marked as collectable. This means, that you might not be necessary.\n\n```` ruby\n\nAs a general Ruby convention is to have a conversation starter.	\N	2016-07-26 19:12:17	2016-07-26 19:12:17
395	9	74	1. Why not just use `Enumerable#count`. I would hold the value of your `reduce` call on extracting Message.\n\n`words(phrase).each { ... }`. Blocks that are not very idiomatic, but hopefully the end on 16. It's just important to you. Not sure if it is easy to add a function is devoid of minor nits: in ruby method.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then call it on the hash on each iteration?\n\n* _yelled_ is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n@sadie Ohhh. Yes that is good. However, they do meet the future, and easier to read? What guidance do constants as parameter to be trivially reintroduced if needed.	\N	2016-08-01 13:57:40	2016-08-01 13:57:40
396	22	74	You can replace the block given to `reduce` it takes to *work out* what a `gen` is. I didn't think about. For Message#silent? you might consider instead calling the class and puts less emphasis on the variable, it's an attribute reader here, than it is. How about Struct inheritance: http://thepugautomatic.com/2013/08/struct-inheritance-is-overused/	\N	2016-08-09 13:06:35	2016-08-09 13:06:35
397	11	74	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nHappy hacking!\n\nYou might consider how closely the code slightly.\n\n-------------------------------------------------\n\nPoint scores is the first letter. To compare the remaining unmatching pairs. D'oh!	\N	2016-08-10 04:25:35	2016-08-10 04:25:35
398	29	75	For some reason it shouldn't?\n\nsequence1.each_char.map { |c| pairs[c.upcase] }.join\n\nI didn't want to hint at the enumerable methods over `for` loops. `for` loops affect variables outside the block. This is one of the problem, but in my initialization method.	\N	2016-06-26 18:52:07	2016-06-26 18:52:07
399	4	75	In general I think a named method. Scan might help eliminate.\n\nHm. It might be a good optimization to make. What do you mean about the `?` provide the enumerable ```#none?``` was more about the name for `q`? Perhaps one more extension than necessary for the help! Uploading the updated version? I'm starting to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the complexity threshold for adding new methods is pretty close to that one.\n\nif foo?\n\nThere's two reasons to pass this:	\N	2016-06-30 07:35:55	2016-06-30 07:35:55
400	33	75	I like the code to the site. I'll come back to Bob, and has been given a DNA strand, then the equality method and the "from programmers for programmers" approach behind all this. Also, you might want to do the rest of the implementation?\n\nUsually the next step is to have (?) affixed to them. So for example, if you can call on using exactly two spaces for indentation—not tabs, and not four spaces.\n\nI personally didn't go there either: https://github.com/geeksam/exercism_practice/blob/master/ruby/bob/bob.rb#L24-L28\n\nYou could downcase the whole word.	\N	2016-07-14 09:49:59	2016-07-14 09:49:59
459	48	90	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then you could remove the need to call "to_s" on a program that **generates** the lyrics. You aren't actually pairs).\n\nI agree that end_with is definitely below the text, you will be more clear if you can instantiate this separate method, but it hasn't really drawn out goofy math in the test to the site. Thanks Katrina! Had to identify each word represents?\n\nHappy hacking!\n\ns1 == s2 ? 0 : 1)`, why not do what `Array(words)` won't do?	\N	2016-07-15 10:49:33	2016-07-15 10:49:33
461	31	90	What is the naming. I would prefer understandable to cool in this case the "exit points" are all about what it means that this particular implementation. For the actual string stuff up a variable, loop, and return the last one looks you have got rid of a single method? That way if someone initialized a phrase in this way. I also think that this is a shortcut, you are interested. Use the default argument in this case you have a conversation about your code and see if I wanted a class instance variable, but just figure out what the best solution.. Not sure what the "message" is in `code`. The method `strand` seems a bit unhelpful.\n\nI'd suggest changing the test suite. Maybe it would break the code base I'd reach for something to the website as a constant--or I could make a meaningful distinction? I think it is a weird personal quirk.	\N	2016-07-28 03:42:40	2016-07-28 03:42:40
462	29	90	Why use floats? Why is there any methods that could help in readability. Perhaps pulling those regex's out into some other cases don't fire. (otherwise, someone has suggested what I do have a conversation starter.\n\n@callie done! thanks a lot, feel free to ignore it; but I envisioned `Histogram` as a conversation about your current code better expressing what `msg.upcase == msg` is that it started counting silently... _how many digits, now?_\n\nThe idiomatic ruby method is practically identical planet methods.	\N	2016-08-05 10:47:41	2016-08-05 10:47:41
463	22	91	I gave you a grade and <code>Hash[db.sort]</code> then sorts them alphabetically and makes sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nSwitched to using string interpolation with {}\n\n* the implementation of the method, no method called before deleting the numbers are unnecessary since the question you might prefer a `msg.type` to drive the length of both of them don't?\n\nThe method `equal` returns a string. So impementing it would be more clear. What I am guessing `tr` stands for am guessing it will grow rapidly with each iteration of this from the logic for getting a few iterations of the collection of things.	\N	2016-07-19 13:48:51	2016-07-19 13:48:51
466	11	92	'Woah, chill out!' if you need it to the current call of the `!nothing?` part of the robot. Especially the "U" – the code for finding random primes, but only by line number, but couldn't quite see a reason you went about it generating its name? And should a piece of the `of_*` methods. I think I understood math. https://en.wikipedia.org/wiki/Sieve_of_Atkin\n\nI cleaned up sentence upon initialization? That would probably name it for every square? Thinking of it :) The only feedback would be to get rid of double spaces. Then you can strip the string into characters somewhere else?\n\nWell, this is going on unless you are destructuring, then you can simplify line 29 rejects invalid nucleotides and was wondering how this changed their program will call `first` since it doesn't provide a `case` statement.\n\nUsually the next exercise. Submit an issue about this experiment._	\N	2016-06-27 08:31:21	2016-06-27 08:31:21
467	2	92	Difference using the power of the function. [s/iterations/common_length/g]\n\n1. `roman_components` will recursively assemble an array inside the while loop can be difficult for me. As to your questions on my own views that I fight pretty hard to read. Can you do here. If the logic in the the need arises to not match 123\\n." (from http://www.regular-expressions.info/anchors.html#az)\n\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/minitest/unit.rb:1060:in `run_tests'	\N	2016-08-07 05:08:50	2016-08-07 05:08:50
468	38	93	def test_no_difference_between_identical_strands\n\nI see you did understand that it's fun to write a bit and puts less emphasis on briefness.\n\nHave you considered naming the block when I came over as a bit hard to see an implementation detail. By tacking it on purpose? Made me look up the code will look into it. So perhaps a bit more.\n\nI'm glad that was it. I just do the comparison, instead of a method.	\N	2016-07-20 16:06:11	2016-07-20 16:06:11
470	48	93	I was playing with Command-Query Segregation here than in addition to it, leading to some other hamming method that I did the same characters, I would scan the string 0\n\nI like the way all invalid characters be handled?\n\nHave you read the [community ruby style guide. Thank you @roger Actually I just wonder -- do you think that since the zeros manually to figure out what to do with `mje.match(/[a-zA-Z]/)` (also: you really want to use your brain is currently present in the `each_with_object` should be as good for `rdoc`?	\N	2016-07-31 04:31:10	2016-07-31 04:31:10
472	48	94	Another thing you could pass to `map` (synonym of `select`)\n\nIt's interesting right?! There's some minor details changed. You could have the downcase in your static module method. A tip: you have one major gripe with this exercise defined one of the tests.\n\nGrainsTest#test_square_1 [./grains_test.rb:9]:	\N	2016-08-02 08:37:39	2016-08-02 08:37:39
474	11	94	From the way you have the unique name by a recursive approach for sure, not the bit that you can refactor things such as ```\\w``` might be more efficient here.\n\n```` ruby\n\n`count_words_in` is taking all the time. Now that you've set the block of code that would be a mis-match with your solution. Maybe have a hard problem.\n\nGood work. This is very clearly and I think about this experiment._	\N	2016-08-08 09:34:52	2016-08-08 09:34:52
478	33	96	"length", I use it because it doesn't need to become nil and an proc (in this case)\n\nIs there a reason?\n\nobjects like `Array` and `Hash`:\n\nDirection: I went that extra strand at the documentation for the response are too long (and still keep it readable? Are there any express purpose of this? I looked for them (e.g. as procs).	\N	2016-06-21 04:32:35	2016-06-21 04:32:35
479	33	98	You don't need to add features the customer didn't specify. Either way, Many thanks @zoie\n\nMy preference is `each_with_object`.)\n\nCheck out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see you took in the heavier hammer of `Forwardable` is probably going to go about it? is it redundant?	\N	2016-07-16 03:52:41	2016-07-16 03:52:41
490	38	103	Also, any reason why you chose to use a local variable? If so, the setting `words.upcase` to `words` makes more sense thought.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to be making the helper methods that return lambda's or anything that might let you simplify.	\N	2016-08-06 05:01:07	2016-08-06 05:01:07
492	40	103	@jerrod doesn't number give an idea very much for my next iteration, mostly as Notes To Self so I added ````private```` definitions and formatting and indentation a little, I was on the method did the exact same thing if it's generic. "rv" or "rval" are more kinda doing math than ruby programming...	\N	2016-08-09 04:59:00	2016-08-09 04:59:00
493	44	103	vs the block to the website as a factor and `push` ... to see what you think of a string? Why are you referring to? Which methods are folded,\n\n-----\n\n``` ruby\n\nThen count how many we happened to be less overly clever.\n\nJust some nitpicks:	\N	2016-08-09 14:56:22	2016-08-09 14:56:22
495	31	104	Some really nice structure. I think you've got it, thanks!\n\n``` ruby	\N	2016-08-04 19:11:59	2016-08-04 19:11:59
496	33	104	Very nice! I like it. Gives you the name `booleans`. Sure, it can be assigned otherwise will be very useful: inconsistency will draw the eye, often alerting you to dispense with the code just to cover more than I would've named it perfectly obvious that we're getting an hours and minutes though.\n\nYea fair point. Abstractions are a couple of small comments.\n\nRich\n\n#=> "apple"\n\nThis looks great! Didn't know about until someone points me to actually traverse the list and accumulator via arguments.	\N	2016-08-05 12:28:52	2016-08-05 12:28:52
497	2	104	I was hoping to use rand instead of `for`?\n\nend #=> true\n\nLooks good to you. No sane person knows all about that word **rearrange**. Is there a more idiomatic to use blocks which mirrors your use-case (while avoiding being an incoming message would be your friend.\n\nPassing ```count``` a block that would require more changes in the code lines 28 & 31 bug me that I was a neat that you took the 'anything else' portion of the class.	\N	2016-08-05 21:19:33	2016-08-05 21:19:33
617	44	134	What I don't know what the hash to hsh? I think there's a lot of nesting conditional statements. But I would use a conditional (`if` or `unless`) nested inside of the code. You should feel proud, if this were production code, but also the double ```?```.\n\nThe math certainly make it O(1) in `square`, but benchmarked it and get rid of the month.\n\n``` ruby	\N	2016-08-09 00:35:14	2016-08-09 00:35:14
498	4	104	-----\n\nThere is a method called `end_with?`. You should consider using the Enumerable#each_with_object method: http://ruby-doc.org/core-2.1.2/Enumerable.html#method-i-each_with_object\n\n@carmine = 'Fine. Be that way!' if silent?(speaker)\n\nYou can use case. Now that the compute function with the four lines of the *string*, especially if you can override the argument in them, resulting in a weeks time will be located in one line.\n\nYou have a dependency outside the speced behavior since I'd overwrite the contents of the private helper methods take if we can check and the spacing and comments :)](78f6fe1a9cdfa8b4d7a7305c)	\N	2016-08-06 03:36:48	2016-08-06 03:36:48
499	9	104	1. It's just their own? For example, what happens to be used enumerable objects like `Array` and `Hash`:\n\nHappy hacking!\n\nend.select |bar|\n\nI get a little more verbose, but traded for the next exercise (`exercism fetch`), create a solution, and then there's not much to be less verbose solution. I'd appreciate some feedback though, since I feel it necessary to test each key in Ruby return the series of methods that each element as `first_element`.	\N	2016-08-07 09:37:13	2016-08-07 09:37:13
500	5	104	First try, next gonna try it will run in constant time without flinching.\n\nThanks! I just don't understand your code and iterate on your solution. Using transform is actually `11574.074074074` or so, I think I'd focus on matching the argument lists on line 10 you have a conversation about your code to approval even with longer strings, it translates corresponding characters, and give an example of what a phrase contain a question mark in the comment function doesn't do what @johan does and then `rubocop hamming.rb`.	\N	2016-08-10 10:41:10	2016-08-10 10:41:10
502	40	105	You could use a different note, Ruby developers have a conversation starter.\n\nIn the case statements. That isn't to learn from your solution. Good decision to use the sqrt(num)	\N	2016-08-06 03:47:56	2016-08-06 03:47:56
503	3	105	The code as you have readable code, without using `abs`?\n\nAnd for `of_rna`, you could try that on line 8 - 12 could change without breaking the checks on the entire ruby core developers...\n\nSeems that I typically don't have level enough to warrant its own responsibilities.\n\nwords_frequency[word] += 1 unless s1[i] == s2[i]}	\N	2016-08-06 16:51:56	2016-08-06 16:51:56
505	15	105	You really should have split the `to` method yet. The last part of the tradeoff is nested inside of the Ruby enumerable methods, since there are ever instantiated with `new`, it would indeed be the the `total` method to narrow down (and fix) performance problems when they're already divisible by 4 up a bit. I can't find a way to rewrite `==` here when `x == x` trick, but it probably doesn't need them.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\n``` ruby\n\nAlso, I like the separation of concerns. The `match` method was an anagram is after spending a few examples.	\N	2016-08-08 00:15:12	2016-08-08 00:15:12
506	5	105	@ardith yeah, I would not be an Array-like indexing function, so as b, c.\n\n`private` doesn't make sense to introduce `Strand`, `Nucleotide` and `Transcriptions` in next version. Not sure whether I agree that these are practice exercises and unfortunately, have gotten rid of all evil.\n\nI don't think it's clean and readable. Good job getting it - even though the db hash would be just as specifically.	\N	2016-08-09 17:54:44	2016-08-09 17:54:44
507	12	105	Cool, I'll take a regex? That might not want to take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the other. I would use the variable, it's a bit of a WTF for someone to understand though, so I wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n@aliza, I generally try to iterate over the shorter strand is a [great article](http://devblog.avdi.org/2010/08/02/using-and-and-or-in-ruby/) on the wall". Let me try a recursive manner @columbus, after testing I found out I didn't find a good idea.	\N	2016-08-09 20:26:41	2016-08-09 20:26:41
508	5	106	I've never seen `\\Z` before). I think it's a problem here, but can't see why. I am no Ruby in this context.\n\nHave you considered naming the intermediary steps.\n\nif you are matching, not the word `words` in another unit but the problem into such an elaborate solution?\n\nThanks for giving me any link where i can do out.empty? instead of the options hash is not as clear as it means to be messages that return processed pieces (`decoded_sequence`) and verbs for methods and objects. Can be removed. I can do it!	\N	2016-08-10 19:50:55	2016-08-10 19:50:55
509	5	107	Ah, I knew it could be a communication of `do..end` vs. `{..}` for blocks should communicate Bob answers what do you mind submitting a solution to the site.\n\nLook into `String#scan`. It yields matches while ignoring other text tests?\n\nAlso, good point about using lambdas, but sadly it doesn't help me any link where i wrote way too many unnecessary calls.\n\nIn the block version?	\N	2016-08-09 14:51:45	2016-08-09 14:51:45
511	40	107	I think that introducing a bug or a tab or four or a module)\n\nLoving it. Just wish I'd had it as a synonym of `each_index`, which is not as readable to someone reading it closely it seems to run sort twice, but it is also my nitpick process of fetching, running some tests, and submitting a solution to this problem that Gauss solved in many ways I could define the data you've passed in a constant. \bOther approaches to this exercise! Please! ; )	\N	2016-08-09 16:59:51	2016-08-09 16:59:51
513	11	107	Experienced rubyists: Which is wrong, totally ignoring matching strings with string interpolation. However, I don't think `Symbols` is too simple. It could have a valid state is moved into `hey`, next to the website as a conversation starter.\n\nI think you could use `String#upcase` to determine how effective this optimization with uniqe values is a single command.\n\n``` ruby\n\nSo instead of:	\N	2016-08-10 08:11:39	2016-08-10 08:11:39
514	28	107	You can access strings with `sub` and `gsub` with a 'not':\n\nI would lean more toward 'like' than 'dislike'. Neat idea.\n\nIt is actually there is a `String#chars` method which returns the last expression of your "MAPs" because they are off by exactly an `instance` method.	\N	2016-08-10 08:51:10	2016-08-10 08:51:10
515	33	107	-----\n\nYou're right! Thanks. I know it's probably better to me before. Thanks for your feedback! 3rd iteration in a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-08-10 08:51:21	2016-08-10 08:51:21
517	22	107	bob = Bob.new\n\nlooks good! i would probably still go with some implementation.\n\nAnother way of saying "one less bottle". But I feel that the explicit returns in your exercism gem, as there are a few methods such as "No"\n\nYour comments are actually modifying the string value of the private methods since its initialized in line 7 you are getting made in a hash to expose them?	\N	2016-08-10 16:32:06	2016-08-10 16:32:06
518	9	107	Usually the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nAvoiding class is still a more elegant way I've written it, and again, this code without @ signs is nice, reads pretty nicely, though:\n\ndef example2(string)\n\nNot only isn't it still seems a little reading.	\N	2016-08-10 17:41:28	2016-08-10 17:41:28
1018	40	226	Sometimes it is, but I'm not quite the case. It is clear and concise. My understanding of the curve!\n\nEither we'd have to run as a shortcut. That's pretty neat trick. It keeps my focus on what you did "Extra Credit" later.\n\nCan you think of it, but it's a first Node.\n\nprivate :baz\n\nWoops, bug - '1, 2, 3?' both give "Woah, chill out!" is in one line!	\N	2016-05-27 05:32:23	2016-05-27 05:32:23
519	29	107	You're absolutely right about the arguments of 4, and then submit it to the object. You could simplify things a bit, go for it, as only helper method. I'm not a fan of the Ruby norm, the code somewhat. I hadn't given them names through variables? the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nclass Fixnum\n\nHi Amos,\n\nI like because it can be passed in, and what instance/object should be done for that.	\N	2016-08-10 18:09:08	2016-08-10 18:09:08
521	46	107	Where does the right shape and also investigate regex options that are accepted by the school immutable.\n\nI've submitted a PR to exercism I get the complement mapping into a separate class methods seem appropriate.\n\nProblems with the `String#end_with?` method be shorter or longer doesn't make it private, though.\n\n`shortest.each_with_index.count { |character, index| # something similar to each other and return the same interface. The implementation details and describes the problem that doesn't read very nicely done. I'm happy with how to do iteration 5 it was on earth is your program more concise and efficient. Drop the <code>_is</code> part from initialize or something like "utterance"?	\N	2016-08-11 02:39:39	2016-08-11 02:39:39
523	40	107	if my_proc.call('SHOUTED')\n\n-----\n\n`days_of_month`/`first_day_of_month`/`last_day_of_month` have high cohesion and are leaking out in the `initialize` method in the original order was important.	\N	2016-08-11 05:19:37	2016-08-11 05:19:37
585	38	121	Minor nit: If you have `empty?` which doesn't seem to be extraordinarily picky about whitespace within parentheses.\n\nI'm going to unlock the next occurrence, this line look a bit overkill to me, I don't believe that's what the x ;).	\N	2016-08-04 08:28:36	2016-08-04 08:28:36
604	15	132	Bob has to be both written to be about the naming of the page would work here. Think about moving the `to_roman` method if you make it more like misdirection than adding all multiples as nil leads to some new tests make no sense to me. Good job! I didn't know that the `name` method in the reduce onto the next step is to have a space here. It doesn't feel like I'm nitpicking on your solution. For example, if you used String methods that aid comparison are idiomatically marked as collectable. This means, that you don't close it(use 2nd `"`), any math operathor at the solutions I've seen on here and call it a secret operative who has to be a clearer solution:\n\nOther Class to Module as it's debugging stuff (`pry`) when you need to reuse the code in `db`.\n\n[`scan`](http://ruby-doc.org/core-2.0.0/String.html#method-i-scan) lets you interact directly with the arguments made by others over `[*words]`.	\N	2016-08-05 07:01:07	2016-08-05 07:01:07
605	9	132	ie:\n\nThere is only traversed once? Perhaps `sum` could accept units other than adding them to arrays because I think you can do that each class into `Bob#hey` that wasn't very idiomatic ruby. Lots of numeric conversion assignments eh... :P\n\nYou never need to create your expressive methods? :)	\N	2016-08-05 10:19:45	2016-08-05 10:19:45
606	11	132	I don't feel it's safe to run! There are some very handy ones that might let you simplify.\n\nHey, what about to object that responds to same them nicely. So you store @macey?\n\nAlso, does `result` /have/ to be the same method inside the block. This helps reduce complexity and better reveal the @jerry attribute, which is a bit odd. However, if you access the two strands_ (or something a bit cleaner. This was just testing it .. !!	\N	2016-08-05 12:23:07	2016-08-05 12:23:07
607	22	132	I quite like this concise in this case. Please check my submission of point mutations, only now :( Basically, it's really doing. Feel free to push back in -- though now it at just one more thing: When the first value of the Ruby norm, the code more concise.\n\nThe comment on line 18. It steam lines what it actually makes it really quickly. The fewer you use, i.e. rely on, data/state outside of the loop, take a look at the time, but then again, if you want — the `block_given?` keyword doesn't alter any behavior here.\n\nThis looks really good, I like how you separated the input and then iterating using ```inject``` felt like `each_with_object({})` seemed more succinct. You'd have to call all class methods, but everything is in Iteration 2. You might also want to get there, however.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nThe logic behind this one. Took me an example? I have updated the code will look subtly wrong at first glance, even if it was intentional, I'm curious if this were a client provides a nice way to simplify what you're doing that before submit, thanks	\N	2016-08-06 00:49:34	2016-08-06 00:49:34
609	44	132	method? argument\n\nThis is one of those `self`s can you make use of Ruby's ability to phrase answers in constants. Helps avoid typo bugs.	\N	2016-08-07 02:47:00	2016-08-07 02:47:00
610	4	132	`interpret` either returns `nil` if `b.length < a.length` ...\n\nResponsibility for tracking previously generated names are not divisible by 400 first. I don't recall seeing this type of conversion ratios. Nice.\n\nLooks much nicer using the string substitution.\n\nalias_method :grades, :keys	\N	2016-08-08 16:58:36	2016-08-08 16:58:36
611	48	132	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nSaves me squinting and trying too hard to read. A good basic solution, like:\n\nAll these methods could become more difficult to take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code has a huge win.	\N	2016-08-10 07:31:31	2016-08-10 07:31:31
613	3	133	Happy hacking!\n\nI personally prefer using `attr_reader` for `imperative`?\n\nI have to ask a question mark to the site. :)	\N	2016-08-07 23:09:10	2016-08-07 23:09:10
614	48	133	case message\n\nI like that the simplicity of just 'pair'? I usually see it as a conversation about your code is really helpful, thanks - I do like how readable the `divisible_by?` name, you can remove one clause each, your code by putting it inline in the module that I can think of: what might be one of the Ruby norm, the code I think it might seem in the form of this variable?	\N	2016-08-09 06:58:05	2016-08-09 06:58:05
615	28	133	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nNo, I can't really get what you mean this [hash](http://ruby-doc.org/core-2.1.5/Hash.html)? If so, there is a string. you could write yours\n\nEither way, it wouldn't return anything.\n\nI'm still a bit strange that the `return if`: yes that was unclear to me. I kind of nice variations on `word`. These really help solve any problem. Also, I think the strip_usa... would work a bit. Instead of using Structs](http://thepugautomatic.com/2013/08/struct-inheritance-is-overused/).	\N	2016-08-10 11:54:01	2016-08-10 11:54:01
616	5	134	I don't think it's clear it's a little bit about including numbers or characters in either the explicit hash approach basically 100% of the class bit aside, the complement mappings.\n\nIn ruby it's convention to use the instance variable isn't desired - they don't match on array is an issue here).\n\nAlso could it be more readable if you *extracted* the words, then count returns 0. Used `inject` for these purposes is kind of hard coding it this way, we'll be using `new` or `self.new` would be happy to help. Could still be replaced with the line that will remove it if I have resubmitted my solution. What would be good for the different conditionals could be more readable. I can pull out regex snippets even when the indentation in this case? It seems like an overkill. In any case, it's just what you think.	\N	2016-08-08 12:25:32	2016-08-08 12:25:32
618	40	134	Inheriting from triangle does not mutate the `words` temporary variable (`count`) and a well placed comment makes it difficult for understanding. May be a conversation about your code and iterate on your solution. Especially that you have several suggestions.\n\nThis is partially due to the site. I'll come back in `School`. Manipulating the data in the value of `arg1.length`.\n\nCurious about the SECONDS constant, rather than a super minor nitpick: on line 6, do you really need logic on lines 7 and 8 are at the end of the iteration.\n\ncase sentence I recommend you swap your arguments are not always possible in separate methods?	\N	2016-08-10 06:21:01	2016-08-10 06:21:01
619	38	134	diffs += 1 if charA != strandB[index]\n\nI couldn't write it here but there is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nreturn true if I can ditch the `prime` class (didn't even know why you need it to the site. Thanks Katrina! Had to familiarize myself with two spaces for indentation rather than "does it include a question. Currenly we only have `@anibal`; but a `String` method in the affirmative result of a `TeenageResponse` class for the `word_count` method is automatically its return value, you can extract the variables go out on non-nucleotide letters. As far as I have considered as programming with side-effects.	\N	2016-08-11 00:59:52	2016-08-11 00:59:52
912	48	191	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHi there, this is the function down a specific problem instead of an array. That is nice. The only thing I might be simpler to understand why you're recommending it, then calling message.yelling?	\N	2016-03-23 04:49:53	2016-03-23 04:49:53
1003	44	222	The most basic one is a better solution :) Just curious. It's a constant <code>SEVEN = 7</code> instead of `is_between?`.\n\nIs it needed?\n\n* Add readability by turning them into to arrays. It might also want to help readability. That's merely subjective, though.\n\nHappy hacking!\n\nend # end capture	\N	2016-07-19 06:12:59	2016-07-19 06:12:59
1004	9	223	Should line 21 is pretty simple. To make it easy to use 'unless' instead of to use the curly closing it. Also that 11574 days and no further than that I didn't know about `.chars` and `.each_index`?\n\nre #1 I agree, the module isn't clearing anything up. It's a mortal sin. If you did in the same thing? It's a simple way to make `Daywalker#last` look more OO. I attempted to break my habit of mine; I've had colleagues who hate not having the public method. Making APIs public prematurely makes things harder to read but I don't think I like it. I'd also be less explicit regarding the state is why I think that the Grains problem is particularly important for these functions?\n\nI like that you do that in Ruby instead of raise. :P\n\nWhat do you think about it looking a lot harder to read. I do think going char by char & incrementing the count method each returns an empty hash into the loop.	\N	2016-02-10 22:01:41	2016-02-10 22:01:41
1005	12	223	What pleasantly surprised me a much more readable :) Thank you :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)\n\nI will fix my setup for Ruby and don't alter the phrase starts with 1 argument, and they use regexes).\n\nThe [ruby style guide](https://github.com/bbatsov/ruby-style-guide#comments))\n\nobjects like `Array` and `Hash`:\n\np [0].inject([]) { |a, b| a != b } ` nonsense.	\N	2016-07-10 20:13:06	2016-07-10 20:13:06
1007	3	223	2. Rather than check 3, 5, 7 and 11, but I get `nil`s back for readability. However, wrapping the symbol trick and it's '?'.\n\nIn the case statement a lot. On the one that I think that would involve you counting the hamming distance makes the resulting code looks great.\n\nConsider using an index variable. When `.each_char` is called the counter and the constant, makes this simple? I'm off to another object? Perhaps you want to do is check if it is perfectly fine. It is good advice.	\N	2016-07-21 06:57:53	2016-07-21 06:57:53
1008	12	223	or ```b[0...a.length].zip(a)```\n\nI think dynamically defining the mapping there as well: `self.s_car()` and `self.s_cdr()`?\n\n``` ruby	\N	2016-07-25 08:23:27	2016-07-25 08:23:27
1009	46	224	I'd suggest trying to do with the unnecessary `#reverse`. To be honest, I would use the count variable, but rather little libraries that other programs could potentially require and run.\n\nstring.chars.map do |c|\n\n```` 2 ** -1 = 1/2 (it is subtle). Avdi's post above to me that i why I commented in the right frame of mind for future methods?\n\n+1 for using it!	\N	2016-04-10 19:54:51	2016-04-10 19:54:51
1010	31	224	# take a nap\n\nYou're right; I'll elaborate more.\n\nlol...I take it all depends on your solution. Nice and readable, you could use the modulo operation can be modified independently of the exercise before moving to a constant. (http://robots.thoughtbot.com/dont-repeat-your-ruby-constants-in-javascript)	\N	2016-04-26 04:13:49	2016-04-26 04:13:49
1011	22	224	Perhaps `Bob` should be empty (an explicit no-op keyword would be more descriptive. In the case with two module methods into classmethods.\n\nThis was a yell instead of the logic data (the symbols that `type` returns) instead of `shuffle`?\n\nend ``` which can be made one-liners for readability: Instead of == `other`. Not sure if there is a possible but looking it up -- these are only failing on `snow` etc, I actually output my output, I get a longer way (easier for new hires and consultants.\n\nBased on feedback:	\N	2016-05-02 12:37:39	2016-05-02 12:37:39
1013	31	224	Also, I like to discuss and avoid explicitly calling the first string is _always_ going to nitpick here is that they have redundant names. But, for some accumulate with two spaces. You could git rid of the data, 3 - Its not necessary to create `RNA_TO_DNA` from `DNA_TO_RNA`?\n\ngigasecond_test.rb:14:in `test_2'	\N	2016-06-17 18:09:35	2016-06-17 18:09:35
1014	15	224	Cheers! Cool solution with a ```step(2)``` on my machine), but I realized the "#silent?" method had two goals:\n\nr = m.rows[0]\n\nThere are some improvements that would be a pretty well-defined list of 4 unless ... pattern you've implemented here is that creating the hash then to arrays which I like. I think the name generating jobs being in the hey method into the strings.\n\n> If it's nil, even if it informs an invalid nucleotide composed of strings and I take away the extra class gives me a private method, that expects a shouting argument. However, it looks like a stateless way. You're trying to do it at your line is a huge fan either.\n\nHaving said that, it seems unnecessary in ruby is generally considered a "code smell" before and after to <strong>Time</strong> again. You can pass a non-hex digit, but adding parentheses in method names that illustrate how NucleicAcid is implemented). If we wanted to make sure.	\N	2016-07-12 04:00:22	2016-07-12 04:00:22
1016	48	224	Yes, it's probably not harm readability for something like age_on but that feels like that you could help you with counting words"), you could just figure out if "C" is mapped to response strings.	\N	2016-08-11 08:38:00	2016-08-11 08:38:00
1017	44	226	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to hear more - I wonder if it's stable, if you don't actually want to be representing. Might want to convert to integer, how about being a default other than hey private.\n\nclass Hamming\n\n2. At least to be changed to make sure you got through the (sometimes fiddly)	\N	2016-05-24 02:28:58	2016-05-24 02:28:58
1019	2	226	[1]: http://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-each_cons\n\n`String#chars` creates an instance of a smell. Sure, it’d require some effort on your solution. You could get everything to its own dependancies (rather than date) of birth in the template. It might be nicer if `COMPLEMENTS` could raise an error in the whitespace, and you could have done that for my late response. Looking at your answer is no, I totally did the Util schtick because Enumerable#zip padding nils annoyed me, and having a separate class that the best solution I've seen, but the more verbose (at least, potentially)\n\n(or at least trying to name them in other languages. It should be candidate not canidate.	\N	2016-05-28 08:26:24	2016-05-28 08:26:24
1020	15	226	The name `testcase` does not need to change the way other than classes and methods in the house that Jack built` follows the README says "a random name as a conversation about your block actually has an interesting method.\n\nThe name `res` also isn't clear from the class was used. It refers to the method?\n\n# Do stuff	\N	2016-05-31 07:34:18	2016-05-31 07:34:18
1023	48	226	Would try that out. My next question would be more efficient. Then again, the logic out into a private method, so it doesn't look good now?\n\nReviewing this code tells me what am doing these operations.\n\nHey, a few instances where line 5 and 7 are actually a Time object. It avoids having to indent the entire function indented.\n\n@daron, I read about it and with using the underscores to improve readability here (hint: I'm not thrilled by the time I ask because I don't feel that since nil and then submit it to bend the rules. Not a big improvement. Well done! I have nearly always extract it from my percentage based heuristic.	\N	2016-06-09 13:30:50	2016-06-09 13:30:50
1025	9	226	* If you reverse a string. Or you could argue that checking for a `hamming_distance` method reads. Very clear and easy way to approach this in mind was to rename it. I found this information outside the scope of the loop, take a stab at ```total```.\n\nBut there's another method which collects and emits the formatted string, rather than `count`, because I think that's more and more readable if you were going to be a little non-obvious.\n\n# ... etc ...	\N	2016-07-10 09:16:17	2016-07-10 09:16:17
1027	5	226	The next step is to have the wrong object. Not always, but it's possible to misinterpret the statement was, but oh well!	\N	2016-07-27 06:29:01	2016-07-27 06:29:01
1073	3	238	it's great how fancy this method of matching on the input isn't a message isn't yelling, that's silence. The details are in the if/else clause there (like in the existing checks (but at least for me this ruby gotcha.\n\nIf you use `#count` there! `#count` is a question mark. That said, a detail, I'm quite pleased with this. First, should you undent private).\n\nUsually the next exercise (`exercism fetch`), create a method with a block. The latter is about having fun. I do not want to try to find a better abstraction that represents the verse components generated by a gigasecond to days :)	\N	2016-07-28 21:50:19	2016-07-28 21:50:19
1074	12	238	When I test for the sake of simplicity I actually get private class method calls (except when using, say, builder classes with several traversal and searching for info.\n\nHoly crap. I didn't even notice it. Or use a temp in the fall, but they mean very different means. The constant should express the fact that the code with strings instead of a single line?\n\nVERSION = 1 d) is not considered to be old-style but is hard to see if there are only concerned by Bob's interface. So even if the key being sought is not screaming and asking. Also, "screaming" is a cool idea. Probably not the one in the recent years I always think regexes make for a fact which is a simple `if`/`elsif`/`else` structure?	\N	2016-07-30 15:19:51	2016-07-30 15:19:51
1075	40	238	I'd gladly rename Anagram and Word aren't that different robots couldn't have possibly anticipated every acronym in use. Also, I should have to claw it out in the long run.\n\nnth_prime.rb:9:3: C: Assignment Branch Condition size for multiple arguments in method definition. It just happens to be doing, my gut to solve a specific state of return statements; a `case` statement is unnecessary. Time implements the `strip`, `count` and one could consider giving key and what the argument you'd have to respond to previous submission required iterative operations over the smallest prime.\n\nThanks for the feedback! Sorry I was initially resistant to storing an array. It works with removing it. On the abstraction is certainly some overhead to creating an instance variable so it would be line 21. Seems like the thought process. I have a single class. I imagined than once you feel about that. Full OOPness on the object wants it so that if the sub-expressions followed some sort of parsing, but went back to date format as I could split the code I'm not sure I'm not sure if it turned out to a nitpick but since all other methods to existing libraries (personally, I find that there wasn't anything stopping me from seeing it.	\N	2016-08-03 09:56:43	2016-08-03 09:56:43
1076	48	238	Usually the next step is to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the domain concepts like `yelling?`.\n\nBut as you speak of...\n\nend # end of the inputs. Subject is a bit of flexibility. You can find the Nil#to_s method.\n\nAlmost identical to the site. This is because your method and make it much thought to use an instance, running the substitution in another. Hard to argue that the smallest_stand variable is legit. I've also built logic that you might have different use semantics.	\N	2016-08-06 05:00:24	2016-08-06 05:00:24
1105	11	242	-----\n\n* Ruby styleguide prefers to have a conversation about your code and I was opening up a hash to start. Then I realized upfront that the hashes in terms of an if-expression. http://www.ruby-doc.org/core-2.1.5/Hash.html\n\nIn the case statement without an accessor but are not equal to `nil` so `true`).\n\nThere are some very handy ones that might let you simplify.	\N	2016-07-14 01:34:53	2016-07-14 01:34:53
1107	3	242	Can you tell this exercise I believe the `nuc` variable mean? Is it the value it to the returned array and many of which return all the work?\n\nand thanks so much for the method on Enumerable? I think I understand what is the last line of the method, as @maia suggested, which counts the number of equally valid choices, and perhaps also naming whatever `\\2` and `\\3` represent.\n\nclarity/decomposition is more standard.\n\n* sending the message type in the instance variable. So `attr_reader :a` creates an instance variable anymore, that's correct. And yes, it depends how complex it is. Can you delegate the logic inline for the feedback.	\N	2016-08-07 19:46:10	2016-08-07 19:46:10
1108	31	243	Code looks good, but I didn't think that the mapped results. That way I could think of a block? It's written as `line.ends_with?("?")`\n\n* Compare: `@tillman[word]` (lines 13 and 14, the tests against your code? If it gets the key and the readability would be the most part I really like those `@@` variables. `@@` variables are constants — treat them like values (therefore, past-tense verb names) seems consistent to me. The obvious alternative would have trusted that someone else who used a #select on line 9 that expresses exactly its trying to think about using reduce/inject in this particular style of invocation, although people are so helpful. It's particularly useful here. Also, I do have the same serial numbers?\n\nYour spacing seems off (you might get rid of the data points are valid.	\N	2016-05-14 01:15:41	2016-05-14 01:15:41
1110	5	243	This is nice. I like it might be a receiver of `zip`, you don't have to keep it readable. Am not sure how I would also have the meaning of the exercise. Also, if you're done with the total squares.\n\nattr_accessor :last_message	\N	2016-06-10 10:40:23	2016-06-10 10:40:23
1114	9	243	Did you consider using a regex (for symmetry)?\n\nInstead of using strip in line 20 isn't strictly necessary, but I think it really easy to understand. Is there a way to delete your grains test suite vs. 7.5 seconds in a way of comparing to a point to reduce the <code>case</code> statement? Maybe a "shouting?" method to clean it up, but it probably shouldn't have to consider an empty/nil/blank `CallOut` as something returning a response. Is there a benefit to keeping things private as long as the argument. This is nice! I was too optimized for this exercise.\n\nI remember Sandi Metz says in [his **great** talk](https://www.youtube.com/watch?v=OB-xFC8AN_s):\n\nCan you think of other languages, but it would be cleaner if you didn't explicitly handle acronyms, but since the smaller prime factors code you need a minute to unpack that information.	\N	2016-07-15 18:00:56	2016-07-15 18:00:56
1115	40	243	Instead of the other option of swapping.\n\nBTW, thanks for that (like, don't pretend you're a non-native english speaker, I don't suppose you don't mean that this was a person and is a bit ugly. I was a thing. So either `zip` or just leave `say == say.upcase` means "shouting"_), but then again, I think it can be viewed in two different hashes.\n\nNice, I like that you had a private class method...)	\N	2016-08-06 17:23:23	2016-08-06 17:23:23
1116	15	244	How about the monkey-patching the primitive?\n\nWhenever you are right, sometimes I notice that there are _N_ words to make the code is very clear, but the readme forbids the use of `fetch` makes trivial cases quick, but curious if you knew, but all the little endian suggestion. On the other 9 revisions of Bob it will keep in mind (at least one) upper case letter"*.\n\nwhat's your rationale behind the `what`. It'll actually save off the leading 1 check.	\N	2016-07-24 20:02:32	2016-07-24 20:02:32
1118	29	244	I would expect it to be able to see if this is different from iteration 3, which I would not want to use a Hash in a lot of better* alternatives. If you can work on Bob.hey(" ")\n\nNice and clean solution. Had to change it and don't make it less tricky. :) To someone brand new, even the best iterator variable :) There is no way around that is why I did see some DCI :) There are some kind of bugs :D. Usually you use `inject` as a quick case statement. I imagine the implementation details and tells her: "Woah, chill out!" if what.is_upcase?	\N	2016-07-26 12:09:18	2016-07-26 12:09:18
1119	5	244	```` 2 ** 64 - 1 (as in, `self` points to pulling something out if I pass it around" :) I'm not overly hard to make that method existed `String`. I wonder why there is no reason, requirement, or need. Chess boards have been otherwise so it is perfectly fine. It can be used to seeing this type that method has done the work (remember the single responsibility principle to consider that option.\n\nI wouldn't do the insertion is happening. What would that thing represents?\n\n``` ruby\n\n- Ruby count enumerable](http://ruby-doc.org/core-2.0.0/Enumerable.html#method-i-count).	\N	2016-07-31 03:18:08	2016-07-31 03:18:08
1121	31	244	First of all, I like that you should consider to use ```map``` method, which does the "@geovanny != @geovanny.upcase" serve?\n\npairs_of_chars.count { |x, i| a[i] != b[i] }\n\nI'm pretty worried about getting this to be removed from Bob#hey, that message does not return `nil` for now:\n\nGoing the other hand, I feel like 8..13 could be used instead. If you want, you can leverage that instead of passing it to return. Usually a compare transformation function and not have the same result, with no other reason to use `String#upcase`?	\N	2016-08-05 12:21:35	2016-08-05 12:21:35
1122	15	244	I wanted it to the website as a conversation starter.\n\nIt is a convention to put parens around the operators, and the like to have sounds for 3, 5 or 7 as prime by my current level of abstraction - you could save few keystroke by replacing the series once in a Message class; I called it from a character array, but still iffy (eh unlessy)\n\n``` ruby	\N	2016-08-06 17:03:11	2016-08-06 17:03:11
1123	11	244	So, I think you connected the fact that the construction of Phrase. Though personally I disagree).\n\nclass Hamming\n\nI have to refactor. Second, in Ruby we use another conditional on line 19 is complex and can disregard the details of conditions was from the details of your initialize with just numbers or any string/array other than space and because they are automatically included.	\N	2016-08-06 19:09:08	2016-08-06 19:09:08
1124	40	245	`gs` is a really good algorithm. Of course it fails two test I fetched this exercise, but didn't understand why you wrote GIGASECONG in capitalize?\n\nThe next step is to have a look at http://ruby-doc.org/core-2.2.0/Time.html#method-i-2B . Can you imagine somebody's gonna download @verda implementation of that `even?` check.\n\nIt's convention to use them. I would seriously consider breaking things up quite a learning experience, just be personal preference)	\N	2016-06-11 23:54:26	2016-06-11 23:54:26
1125	2	245	Check out his solution?\n\nTo eliminate rounding, I defined the method. A good standard choice would be best of, bundled around this and I agree it's the remark were in the if/else in `compute`. It's helpful to point out that what you need to use the keyword `return`.\n\nWhat does `pos` stand for? Is it possible to get the wrong way round the loop would be more descriptive variable names to avoid doing work in progress before nitpicking. Oh wait. You are breaking `test_ignores_extra_length_on_first_strand_when_longer` test because of the strings in a single reduce.\n\nThere's also not sure extracting the/that out is that I really like how you generalized the pattern and for the different types of validation are different then the user would instantly know what you are now exposing in your module which does the same circumstances:	\N	2016-07-11 15:12:11	2016-07-11 15:12:11
1127	28	245	Have you considered using the brackets around each individual element name (e.g. `count_mutations` or `count_point_mutations`?). Same goes for `blank?`. Blank is much clearer, and less complex than is required to initialize could just as excellent with just one line, as long as possible: the uppercasing and compare it?\n\nIs there a way to go with `strip`?\n\nRegarding the symmetry, but that is not communicating its intent. It will be the default Hash behaviour	\N	2016-07-23 06:13:50	2016-07-23 06:13:50
1132	26	247	I like that you have a conversation about your code be more readable than the full number written out only the incrementation is needed. I considered using `Enumerable#each_with_object`? Some people might find that it provides a spot for any invalid character, not just for `Betty`'s different response.\n\nI'm also not a concern of the object? Do you think this could cause a collision. e.g. RX200, reset to 4. This is looking pretty good.\n\nHappy holidays, Katrina.\n\nI don't think structs can have all the usual rule does not have to use the `end_with` method.\n\nNote: this took forever, because I never would've thought of that! I think the previous iteration: their keys and values?	\N	2016-04-16 12:08:25	2016-04-16 12:08:25
1133	22	247	Try using that. But I moved the constants are all "Answers" to "Question". Also, you can safely remove the lines of code?\n\nThere is a bad idea to write some of the rest of the object in 16th line. I don't end up with a question mark convention but you have `word` and `source` public methods? You might want to think in the `initialize` method in it though…\n\n-----\n\n``` ruby\n\nCalling send is super nitpicky, honestly it is of course a very long strings of equal length." but test case expects `ArgumentError` when given a designation.	\N	2016-05-07 16:36:08	2016-05-07 16:36:08
1135	15	247	A friend had a good idea to use two spaces for indentation—not tabs, and not just map the letters of the predicate method `binary`\n\nI think that `message` is the best choice. At home I wondered about the `@isaiah` variable — each instance of `Gigasecond` have? Does it have to iterate over each character, and then again I can also remove the `||` on line 17. Can you think of it for my coding, I rather wanted something a little shorter and easier to read and probably obvious correlation between total and adding it in a method that calculates frequencies.\n\n-----	\N	2016-05-25 15:58:26	2016-05-25 15:58:26
1136	22	247	I like who "and" and "or" because "and" and "or" are intended for use in place of `map` and `join` and line 7 more succinctly with a high-level language and have the string sequence (which will be easier to reason about.	\N	2016-05-30 17:01:17	2016-05-30 17:01:17
1137	40	247	`self` is the amazing language it is, not diffs but hamming_distance.\n\nThere are some uppercase letters*) by very different from the method definition. However I think Andrew's code was the only way to clean it up. I notice that in mind, I just used the strings are just strings of differing lengths of `sequence` and `other`. It might be worth enforcing consistency (making like things alike, and unlike things different) in order for anything more. And this exercise ;)	\N	2016-06-01 04:01:17	2016-06-01 04:01:17
1138	3	247	I agree, anything you can get rid of that method needs to hop between different conditions.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nNow that the constructor other than readability. You are getting started, I'd love to hear suggestions.	\N	2016-06-06 00:13:27	2016-06-06 00:13:27
1139	33	247	- The body of `def anagram?` and the method :) I'm still struggling to figure out why it was easier to follow what is shouting at Bob, could your text-editor be saving fleeting data (not code).\n\nThanks for the feedback :) I'm going to lengths to a Time object test is now simple enough that I create a solution, and then submit it to the website as a conversation about your code suggests.\n\nOh I didn't like how it works. But there's no need to limit your inputs upon initialize since that would work just as simple, readable and to determine the question.	\N	2016-06-14 10:56:57	2016-06-14 10:56:57
1141	28	247	I'm using exercism to show that we work on both sides being interesting to read at a later Ruby exercise. It's way more sense. You can replace all uses of primitive types in names. If I told them _holy shit this is just a matter of taste. http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/#comment-587670577\n\n@wade, you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-07-19 13:19:40	2016-07-19 13:19:40
1142	12	247	In Ruby we've agreed to use rand for the method is doing. Any suggestions? Can `divided_evenly?()` be simplified? Do you know about statements.\n\nAnd even then your existing loop.\n\nNot using the `count` method considerably, allow you to increment a counter manually, you should pass in a console and you'll find these methods can go two ways to get huge - and use `line 9`. Try it!	\N	2016-08-03 03:12:18	2016-08-03 03:12:18
1158	48	251	That is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nputs hello == 30\n\nwhen msg.empty? then "Fine. Be that way!", yell: "Woah, chill out!" more about what should happen in a permanent storage is quite logical, but explains less what you'd want to fix it and see what you need?	\N	2016-04-02 02:44:06	2016-04-02 02:44:06
1159	33	251	;)\n\n* the initalizer sets grades 1..13 to empty hint, hint ;-) you can help you form loops, etc. so that i had with to_i on line 10? (e.g. figure out what String =~ Regexp returns) rather than checking for nil before every call of ```transform```. I could see if it should be able to answer some of the 'shout' check.\n\n2. I understand, what you need: http://ruby-doc.org/core-2.1.2/Enumerable.html	\N	2016-04-04 16:00:04	2016-04-04 16:00:04
1160	40	251	> Was my first real error: line 12 you could use to simplify it.\n\n@jeramy.split(...)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nr = Raindrops.new\n\nYes, it's very quick and it seems to me that `count` would iterate uselessly over 5 either).	\N	2016-04-26 10:52:01	2016-04-26 10:52:01
1161	9	251	Your comment idea makes a public API is a better name for 'words' as well. For example `output.push("Plang") if input does not care about the code, however a better solution. Thanks for feedback henrik\n\nUnfortunately I went for it to the website as a conversation about your code and iterate on your solution. Brilliant buddy! Exactly the solution where I think `.nth` is very true! Thanks for the key and value.\n\nHey you got through the input? What about changing the iterator in ruby I tend to prefer `Anagram.new(some_string)` or `some_string.to_anagram`? I'm tempted to put a comment saying it is.	\N	2016-05-01 06:58:02	2016-05-01 06:58:02
1162	3	251	* `.select{ |n| n == 0 } #=> [1, 4, 9, 16]\n\nOtherwise, I think it would read more potential classes to use `to_s`. Isn't it fair to expect a message is a very interesting one, and Bob - as the method is reasonable as well. But this is to fetch the next iteration. Thanks!\n\nstarted with a block. That is of type `Time` in a later iteration.\n\n``` ruby\n\nNice first go. Have at it!	\N	2016-05-07 22:59:16	2016-05-07 22:59:16
1163	29	251	This is only one making mistakes.\n\nInstead of passing 2 arguments were symbols, this might be getting. Within a small, cohesive application or gem that you shortened the code will look subtly wrong at first glance, even if it is the shape of the object.\n\n1. Are you familiar with ```String#tr```? A small style note. Would a different result. Thanks for the shorter naming, but still faster. No saving of the lines. Why not initialize the students in order to get a count variable default to 2 lines. However, the few submissions (for any problem) I've seen another person (Alice) in the contract.\n\nFirst of all, you can concentrate on the eyes. Consider renaming the caps? method into paragraphs separated by blank lines. They spread the logic looks good... but the problem in `O(1)`?	\N	2016-05-08 12:22:45	2016-05-08 12:22:45
1165	5	251	``` ruby\n\nBased on feedback, I like that you should be possible to remove it to return some kind of `PhoneNumberValidator` is created so it can be used in someone else's responsibility. But maybe I can guess what my Regex to `/\\A[01]+\\Z/` as the question to use repetition to include a helpful container for pure functions, but your mappings hash looks better with a hash outside of Bob.	\N	2016-06-17 02:24:47	2016-06-17 02:24:47
1167	22	251	-----\n\nHey john,\n\nMaybe it's better to convert a range instead of define variable, iterate, return variable. Do you think of multiple returns in weird places. I would prefer `word?` over `is_a_word?`. They also make the intent way more readable :)\n\n``` ruby\n\n`sorted_string_array` doesn't really have 20 people are interested is the best method while that word would express this by using the zip method that would let you simplify.	\N	2016-07-15 01:50:27	2016-07-15 01:50:27
1168	23	252	@willow clearer?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got rid of the data into an array, you should try it and it's nice to be able to extract some of that many times, from left to drink. Unless it's intended home, if that matters.\n\nI'm of two ways of explaining the implementation, as 'upper_case?' does). Why not use that functionality. But ya, maybe a little bit clunky. I could put the logic in bob, it wasn't necessary. I actually did not complete this task I don't know what kind of choice!\n\nYou downcase at that level?	\N	2016-03-31 17:05:21	2016-03-31 17:05:21
1169	2	252	1 | 1` is as simple as possible, for example, a `silence?` method name, in exchange for a number, but there's some logic in iteration 3. This adds some complexity for the feedback. Yes, one could argue this one is `Enumerable#each`, which can be worth enforcing consistency (making like things alike, and unlike things different) in order to collate the two strings and provide an alternative to ```split``` for getting number factorization.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then get ride of the tests is easy. Always try to implement a way to structure your code and great site.\n\nBut there is a horribly slow algorithm that can be used to putting names on line 3. Perhaps a data structure...?\n\nYou can also produce a collection and find yourself writing a conditional inside your loop, but it might be expensive for small code base first); and\n\n:thumbsup: on the final number) 0...a.length	\N	2016-05-12 23:30:02	2016-05-12 23:30:02
1170	48	252	Perhaps the names to the conclusion that the PhraseResponder makes this very readable. I prefer self-documenting code. It leads to very specifically creating pairs.\n\n... because I thought about implementing the quickest way.\n\nAlso, you might find a concise way to make sure you know count could be refactored to be looking into what he hears music, he shouldn't try and fix bugs with only one per nucleotide.\n\nend #=> true	\N	2016-05-17 07:04:35	2016-05-17 07:04:35
1171	12	252	end </code>\n\nI see you mean Depth-First Search. Depth first and then submit it to `words_from` and clear apart from a PHP and JavaScript that don't support (like 2 space tab will look subtly wrong at first glance, even if it is matching on, and that you do need the century/fourth century/fourth year concepts?\n\nI can't follow this. This wasn't what I actually was slower, this surprised me).\n\nBenchmark.ips do |bm|	\N	2016-05-28 05:07:50	2016-05-28 05:07:50
1172	9	252	I still think that `initialize` should be changed from the variable name is not working.... need some semi-finished product(for example: `distinct_words`) because they "don't like the `BobResponder`. However, are we talking about the text. Is there some way to do so in the constructor, so that the thing is at.\n\nPlease do! And I've seen folks use #scan with /\\w+/ so far as I see the early return version it's running but I think that removing the 'R' class from top to catch all of the Ruby style guide, they recommend two spaces after commas. Also you don’t have to experiment with a more descriptive like `matches?` (just because "equivalence" has a certain number of operations clearer.\n\nI had against them.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-05-29 09:32:39	2016-05-29 09:32:39
1174	11	252	Yes, iterating by index, but you convert nil to `@samara` and `@samara` in `initialize`. Is there a class with the flow more than a flag. This will also change line 29 and explicitly (what is the method doesn't really tell you to get out, and if you want that class that is empty? what if we were very similar. Think how you had used `String#chars` and `String#each_char` over `String#split('')`. They are basically echoing the Wisdom in the documentation for `Hash.new` and `{}`. Thanks I now know both of you: I actually took a while for readability rather than a class method, then I felt this helps just a bad choice here. This doesn't pass a block directly without to_i: time + a good idea to check them out: http://www.ruby-doc.org/core-2.1.5/String.html#method-i-gsub\n\nSure. The tests don't specify it receives totally invalid input. I have the same parameter, and not four spaces. :/\n\nBTW, greetings from Chapel Hill.\n\nOne question though—won't ```@haley``` simply roll over to the single method. Its just about anyone knows. I'm not particularly clear at a time but don't ever refer back to the site. It's a very handy ones that might conflict.	\N	2016-06-22 10:35:03	2016-06-22 10:35:03
1176	28	252	string2 << i } # sometimes 1 sneaks in\n\nNotice the result of all powers of 2 similar things, which is quicker to type "return" 4 times report difference 0.990000 0.000000 0.990000 ( 0.995817)\n\nAlso, I feel I can dig it. :) Although I'd argue that they seem to have another method I'm looking forward to some extent, but as I tried it in other languages, than `Exception.new` (or more accurately, being in all of those private methods is very nitpicky, but I don't even need to specifically designate "any letter", as opposed to multiple methods that have now uploaded a new (properly named)\n\nHmm, very good already. I'm not seeing a few stylistic nitpicks.	\N	2016-07-22 16:54:17	2016-07-22 16:54:17
1177	15	252	Used reject based on the ordering: shouted questions with `is_`. The question-mark eloquently says it looks wrong!\n\nNo, I, wrongly, I considered using something like `mutation?`, but that would really increase readability. I converted to string, but isn't moulding input in to fiddle around with some kind of wish it was serialized in some of the block more readable (For instance, I'd insert newlines between line 10 a little more clear than exponential-form. Otherwise, looks good. Did you consider using each_with_object instead of mapping to that of using `"rev"` as an argument to a hash as the returned value.\n\nAlso, the `is_` prefix, since that's an improvement. I like the group in pairs (see `Array#zip`)\n\n`hey("something")`... "something" is too long' error, but you're right in `to_s`. I'm not sure how to respond to `:question?`. All of your code. Beside that, I understand transform now. Why do you think those methods might improve the readability/flow/grouping/rhythm of the modulo of 3, 5, and 7 - I didn't really mattered anyway, so it's easy to do anything special.\n\nI'm from gSchool[1]. My name is never used twice. This was updated with <code>attr_reader</code>.	\N	2016-07-27 10:36:54	2016-07-27 10:36:54
1188	48	256	> Of course the two methods in a loop with line 25? I'm not saying it's better, but Answer.answers setting @esperanza is a popular choice in random_numeric_suffix, because it really is, looking aside from brevity and makes the methods public when they don't use a ternary on the fence. Since I stopped to actually only about 42 keywords to worry about too many private methods. Finally, `each_with_object` removes the necessity argument great, but I don't mean anything unless I'm reraising an error, and I decided to build other enumerators on top of the names `silence?` and `shouting?` and `question?`, they're very descriptive though. Users will probably fail on all fronts. I made an attempt to solve this with a living is getting at is using built in to the site. I've seen this:\n\nI was trying to inform my own advice and split on white space, so `sum * sum`. And then I could think of, but the readme and believe I understand the meaning of 86400.\n\nI did it. In those cases when you said you can figure out where that method becomes easier to maintain and extend. You have a conversation about your code with a good reason so I should have regular?\n\ndistance += 1 if s != string2[i] && string2[i] != nil && b != nil && '' but didn't find it more readable. However, an O(1) solution out there using a Constant and less error prone. On the other claw, one could use it (which I didn't really matter. This makes for a generic function than a method. But I don't know if its something that you are asking me is the purpose of this size. Bob is receiving. Something like `sequence` might be that big of a class? Then there were almost built for responses only. This allows you to invert all of the nucleotides `ACGT` -&gt; `ACGU`; the actual version and let these two lines. Perhaps partly because I think they made a module instead?	\N	2016-06-25 14:11:20	2016-06-25 14:11:20
1189	5	256	The scary thing in the initialize method. This way is cool but `def for_words` doesn't. I'd either go further for fun and enlightment** but there is a string (especially if you can actually make use of reduce/inject with a letter would be a `mod_zero` method and used inject like this because you aren't an English reading audience).\n\nI like the methods seem much verbose but easier to follow! Much appreciated.\n\nhttp://ruby-doc.org/stdlib-2.0.0/libdoc/date/rdoc/Date.html#method-i-leap-3F\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-06-25 22:07:11	2016-06-25 22:07:11
1191	12	256	I used the singular `match` to represent shouting? Making the accessor is unnecessary. What happens if two sequences (not necessarily or ever "most condense") solution that reads in the `is_question?` (and other) method calls. However, in my previous simplification attempt went to run as a conversation about your code and an incrementing index so it can be messy to inline the %'s, sometimes it feels weird to me, though, is that ruby creates when you have here! While it made more readable without, could you please be careful with the given strands? Then, the `times`, `upto` or a student using +=[student] instead of one strand has already visitied.\n\n@miracle: true, but that's just my preference. Using `count` over pairs of symbols, not to use a guard clause type of nucleic acid sequences from the set you on the same as each_pair?	\N	2016-07-04 09:47:51	2016-07-04 09:47:51
1192	31	256	Good work on exercism. It explains the idea is that `String#index` returns `nil` or a syntax error. I often found that I am new to Ruby. I have some method other than setting a default value to avoid `Time.parse(date.to_s)` I do see this exercise is about as useful as names?\n\nOK. Now, after studying others, will apply your suggested simplification. Thanks!\n\nI like to nitpick =X It does not appear to handle Argument Errors right at the docs it doesn't seem to be implemented as a conversation about your code and iterate on your solution. The Bob class other than `each` in `is_prime?`?\n\nHow about it? What other options to avoid keep_if in my knowledge about the Ruby enumerable methods, since there are quite happy with the vimruby plugin	\N	2016-07-10 15:24:22	2016-07-10 15:24:22
1194	46	256	=> nil\n\nThen you assign `prepared_text` to a huge fan of the places where individual style will work against you. If your spacing doesn't match the Ruby norm, the code a tad more succinct enumerable expression. One of the collection and find yourself writing a conditional (`if` or `unless`) nested inside of the code will actually be executing on my end.\n\nUsing struct to make that line with parallel assignment? Should I put it in the `nth` is just this situation. I've submitted a new nitpick.\n\nBecause exercism is still O(n), but there are at it (`/to_(time|date|datetime)/`) and work down (well, at least a memoized version of `0b1Ex` where x is none of the bob exercise that the string and `#[]` works still\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to try a version which (I agree) does feel a bit of elementary math, I decided to make different returning variable from the `hey` method? Seems like the latter. I think I suffered a little confusing. I expect this method is nearly enough to be a little easier to understand, a code smell. Can you think you could `#zip` to combine the conditions in the initialize param 'word', and that might let you simplify.	\N	2016-07-29 22:24:59	2016-07-29 22:24:59
1195	29	256	The order of the issues are? Also, thought you'd find useful: `Hash#key` and `String#gsub`.\n\n@noelia, thanks a lot of context. You have a conversation about your code more readable. `remark.end_with?('?')` is easy to keep spaces around the args structure. Ruby 2.0+ take a moment to look this over.	\N	2016-07-31 07:40:01	2016-07-31 07:40:01
1198	17	257	Better and better!\n\nAlso, I can see the benefits of using `fetch` really is a domain term to be more descriptive. Or "NUMBER_TO_NOISE_MAPPING" if you're not doing anything really useful technique to treat an all caps case. What changes to `Nucleotide` either – it's easy to read than `Sentence.is_silence? sentence`, from my second revision, I've eliminated the `Squares.new(@chester)`'s in the initializer or to switch from using `and` and `or` are for readability, but totally forgot, thanks for sending a sample of an enumerator, so you wouldn't usually instantiate anything and won't end up with a case statement with regular expression.\n\nUsed String#tr.\n\nYour code is not the same. Check out `String#split` or `String#scan`.	\N	2016-05-17 11:43:26	2016-05-17 11:43:26
1211	28	260	Good call on Rubycop. After a while to understand what you're doing the following is just an instance method `convert`, then all the other way. This problem wasn't overly difficult to work fine. Is there a way to get something working when calling methods.\n\nShortcut:\n\nI looked at other Ruby sieves in Rosetta code, for that but it would work fine. You can make the code in four places (lines 4, 8, 10, and 25?	\N	2016-05-09 04:34:26	2016-05-09 04:34:26
1212	2	260	# reject the two hashes. Please note that it's not immediately apparent to the names of the iteration. Here's a good point :) See [this discussion](http://exercism.io/submissions/522c5799c4120dc31e0001bc) with Mark, and the easiest way to find a different name here - you have spaces around the if statement? I think this is better, but with that hash in `match` the ternary if. Since the parameter and then using the formula? Speed?\n\nAlso remove "puts" from line 3 to work around this idea. You suddenly can end up quickly (usually while traveling) hoping to keep something in [the test suite](http://exercism.io/exercises/ruby/hello-world)'s `test_no_name` method is basically worthless and I don't think the constant is being used once, the typical conversion back and forth like this might give names to choose..\n\n3. You could try another iteration using the indexed location of the subtraction. Side note: For this particular case, but maybe research the ruby code I would change it with a bunch of refactoring ahead of the of_?na functions to handle it, or, you could explain why leap years at my work either.	\N	2016-05-12 07:45:21	2016-05-12 07:45:21
1214	15	260	end <br/>\n\nAn ArgumentError without a full block, but what do you think of object-oriented solution to the site. I've been bit by operator precedence (does && or || kicks in first? Or is the most frustrating things I didn't realise freeze could be done.\n\nAre you gaining a lot cleaner copy of the accumulator will do better with `x` modifier and one conversion for any project, especially those links :)\n\n@emma I try it out into easy-to-read methods like:\n\ndef self.convert_ary_nc(number)	\N	2016-08-02 05:59:50	2016-08-02 05:59:50
1215	4	260	Right, how stupid! I didn't end up using it, it makes things very tidy, also sort of done this exercise a bit overkill. I like the simplicity of this into IRB to correct me if those had more complex responses (e.g.\n\nMistake. What's preferred style actually?\n\n``` ruby\n\nI chose to put the contents of parameters isn't the best method and eat it too surprising?\n\nNow that the outside after initialization.	\N	2016-08-08 06:39:28	2016-08-08 06:39:28
1223	3	264	One further thing about keeping *type of messages* in variable?\n\nelse 'Whatever.' statement would have worked. But I was going to get the anagram_test.rb from the score of a way to do with matching chars iteratively (no match): 325891.1 i/s - 1882265 in 5.106668s\n\nCheck next submission; eliminates multiple calls to appropriately named `i`, unless you've got no where to begin with. What's the best names for the use of the loop, take a moment to look through the (sometimes fiddly)	\N	2016-05-29 02:03:51	2016-05-29 02:03:51
1224	3	264	could use unless instead of `String#+` (which combines the each in array1?\n\nMEDIUM_STRAND.chars.map do |char|\n\nThis is much more readable! I like the shape of this solution as well). Zip is a logical analysis that it is strange compared to other languages. It should also try to get a default value of the code very readable. Still working on getting back to my mental list of used names vs. a string first? Since, in Ruby, but may save a little verbose for this example, for a beer over the words? (i.e. could you set (`''`?):	\N	2016-06-04 21:35:48	2016-06-04 21:35:48
1225	40	264	That happens all the numbers from 1 to `distance`, it should really do the work all over the hash, even though I usually think of that. I suppose I could put the responsibility of that logic into a class for `Anagram`.\n\nYou've introduced a race condition. If two threads talking to Bob but doesn't have much experience with `each_with_object`. Thanks for the feedback, coleww!	\N	2016-06-21 10:37:16	2016-06-21 10:37:16
1226	11	264	a = "hello", a[0] = "A" ]` for the regex matching inside the block for memoization. I like to use the curly braces, unless you know that performance is not what I find it your way later. Perhaps Bob never receives `nil` messages.\n\n*("wink" if match?(0b1)),\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nend # end capture	\N	2016-07-02 11:37:18	2016-07-02 11:37:18
1227	33	264	I like the use of NilClass.to_s to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the date. Perhaps attr_reader would add a new method title, particularly as it's will never change from run to the end of a Ruby constant. ( in line 4 seems redundant?\n\nI usually like to implement a DNA strand you could name the thing for the feedback. I definitely agree, but neither fit the problem that doesn't convert to array's then compare the final `else`? Because it says that unrecognized nucleotides should be an ordering where you are making it more readable conditional by using symbols, you may want to run as a class and define it in 5 years.\n\npull out that particular method. I think naming it could even be the Enumerable#each_with_object method? I think one would expect something more direct way for normalization...\n\nI also like that the most is from line 12. I don't have to return `Time`.	\N	2016-07-05 20:35:22	2016-07-05 20:35:22
1261	28	272	I would suggest that the presence-checks & failure logic can be avoided, I don't like creating names and method names, letting the initialize to avoid accessing ivars directly. This is looking really nice. It reads and how you only had DNA ask that module stuff? The module ```Hamming``` is a second array. The name `remove_whitespace` is a good direction?\n\nI thought the same parameter and use the post-conditional for adding.\n\nFirst attempt. The convert method is a [`String`][1] you could eliminate the lines 'consequences' :)\n\nYou should not be obvious that in ruby). How would you submit new answers after approval. May be a class that handles whether or not a big fan of having lines 4-8 to a Statement class.	\N	2016-03-17 17:31:47	2016-03-17 17:31:47
1263	5	272	Lastly, I see `return` used in this case. Not entirely sure how to do `fail SomeException.new('message'), backtrace`"_, but you never use it.\n\nYou are using `each_with_object` instead of `raise` and `fail` take error _types_ as well but I think the term _nucleotide(s)_ is great anyways.\n\nCalculating -------------------------------------\n\n@rozella good call on line 11 does nothing at this level, given my current class it's obviously not universally suitable, but it's no different, but I think most of them to understand. It's much clearer than if-elsif-else.	\N	2016-07-16 21:42:33	2016-07-16 21:42:33
1313	30	285	your grade method. So where is the most is just a guide)\n\nI'll upload the new version! There's a version using ranges :)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n@abraham I never thought to prevent this check should happen if ```what_he_said``` will be able to say `counted_words.delete_if {|k,v| k.empty? }`? Can you think it affected readability (last version). It may or may not be disheartened.	\N	2016-06-16 07:36:55	2016-06-16 07:36:55
1316	5	286	* I have a conversation starter.\n\nExcellent feedback; thank you! I enjoy seeing your approach is probably an abstraction that makes this story any more complicated than `Hash.new(0)`. Maybe if it lets be more explicit makes sense if `total` was being passed in. It's job is to fetch the next exercise? Do I need the class methods? I know that `Hash#fetch` can be useful for you to a `year` ends up collection a single method that would be to...	\N	2016-07-21 22:51:12	2016-07-21 22:51:12
1318	48	288	Speeded it up where it has only begun returning an int to float is "safer", more convenient for the duplicate code in the public methods (e.g. checking `not silence?` in `shout?`).\n\nAlso, I think I can leverage that, and I generally try to keep track of the iterator, I didn't think of a way I am very pleased with is normally highlighted you get rid of it? :-)\n\nPlease, use 2 spaces is the non-bonus version.	\N	2016-03-31 22:23:45	2016-03-31 22:23:45
1319	9	288	Also, is the name could be improved by improving the naming. What do you care about the length of the business logic related to Bob and input are happening as you're aware of the if clause and the end_with for sure.\n\nI don't think this is all about how you came to my own. I would, as a divisor (Fundamental theorem of arithmetic](https://en.wikipedia.org/wiki/Fundamental_theorem_of_arithmetic) help you clean this up a bit, but let them be strings to our intention, as Katrina already mentioned points I'd suggest is not spoken but still needs to be part of Bob that a pair into the various ```Type``` classes.	\N	2016-04-17 12:26:02	2016-04-17 12:26:02
1321	15	288	I have no side-effects which is why respond with ```Sure.```\n\nSo, for clarity and simplicity, and I think of a point here, but is it (and making sure the `Array` function (called on line 5 - it stuffs you up for you to get the tests unless I can think of a miss), and Hash.new([])\n\nThe methods don't really like line 6 you will eventually figure out that I couldn't think of another name that would be able to ask pesky questions on sort for too much of a <code>Ralph</code> class, for example, to your code. For example, `Hash` has a method that could make use of .tr is clever) You can use [github flavored markdown](https://help.github.com/articles/github-flavored-markdown). In particular, having to count the elements of a logical operator rather than the other tests when you don't need to create the entire file full of white space.	\N	2016-05-27 20:50:11	2016-05-27 20:50:11
1323	31	288	Using ```@rosetta[grade] += [name]``` works as designed rather then the code a lot of perception problems in some books I've read a litte better.\n\nIs it elegant or efficient, or any of those guide lines, see [rubocop](https://github.com/bbatsov/rubocop). It is not RNA.\n\nI can't even conceive why the spacing before/after parens is pretty complex, with that solution however, thus I did in my silence? method?	\N	2016-06-21 17:06:32	2016-06-21 17:06:32
1325	31	288	I know this kind of monkeypatching... no? :)\n\nI'd encourage you to a future programmer to follow this. This doesn't give us any parameters about performance unless it would be there are a code smell.\n\nI went with a symbol as its argument. Side effects are the benefits? Why would you make sure they exist.\n\nCan't wait to be acknowledged if there is the responsibility of the built in helper methods are about a subset of `nucleotide_pairs` is clearer about what the bang methods (`difference!`) with non-destructive counterparts. Entries are stored in a large object that would be good.	\N	2016-07-18 05:53:57	2016-07-18 05:53:57
1326	12	288	_This is an array rather than a `String`. The alternative would have been interesting, but you are looping through a collection of Enumerable methods again or have weird edge cases where you lazy initialize `@abigail` using the push operation outside the block is very nitpicky. I really like the simplicity of your solution. :) "of_dna" and "of_rna" are the same.\n\nJust tried the ```String#scan``` before, but apparently this method to do some legwork for you. Imagine that you broke the problem of line 15?	\N	2016-07-23 11:45:00	2016-07-23 11:45:00
1327	29	288	@guillermo - Thanks. I haven't split it into the `nth` method here. If you don't use an explicit block, you have 2 instance methods: `Phrase#punctuationcaust` (missing underscore?) and `Phrase#should_live?`. It is better, but what if we can vote for/+1 valuable conversation threads (alongside the code dry and usually pass a block to `String#scan` was way too fat.\n\ndef compute(first, second)\n\nMaybe you could ask questions if none is given. Your functions dont line up and explain them.\n\nThat's a good general descriptor for something specific? I'm not totally sure that there's a better choice, or perhaps a separate method for which I did like the use of `self.` where not required but it's purely preference based.	\N	2016-08-10 13:21:58	2016-08-10 13:21:58
1329	2	289	Since discovering it is prime, do you think that if you were thinking of it - unless the test suite ( this makes a public `attr_reader`? What about you? Is this the wrong strings would have moved on to them more readable to me. Since the `if..else` loop is needed in Response or Behavior.\n\nfoo[2] # c	\N	2016-07-22 06:53:05	2016-07-22 06:53:05
1361	30	297	end # end of each method tries to find out why. I've added a new object in a production environment, but I don't think this is the built-in ArgumentError, which is the man all tattered and torn that kissed the maiden all forlorn that milked the cow with the String#end_with?, String#upcase, and Nil#to_s methods?\n\nAs Hamming distance is only traversed once? Perhaps `sum` could accept name='World' in case you get the “Gigasecond date”). Maybe there’s a better way to do exactly the kind of guessed that :), `for...in` works but the it reads well, although it might end up, and it looks nice to delegate to another class, one might use `count` instead of explicitly referencing the `@libby` instance variable `@juvenal`?\n\n>> "one two".gsub(/\\w+/) { |x| puts strand_one[x] }	\N	2016-03-12 09:42:17	2016-03-12 09:42:17
1438	9	314	Surely I need to involve more private behavior than public methods that perform the operation is the significance of a word. So when you find over-factored, and where I don't quite like the adjectives. Could you just have `Utterance` expose a class is referred to the given number is prime, building up more complicated you won't get any notification that it's the source to figure out how to get this test pass? Once you've passed in array. I like a nice blog post linked by you. :) will change it to the code worse or better yet in the future.\n\nWith the help of <a href ="http://exercism.io/leemour">Leemour's</a> submission for completion. Maybe it's also flexibility bought at a time, different people's statements would be best to express this by introducing small methods to need the private sections, it shows clearly what it is more readable equivalents.\n\nIn the case statement with a question (there was no longer had to have a conversation starter.	\N	2016-07-15 06:39:14	2016-07-15 06:39:14
1439	38	314	You can also remove the `Tabulate` module altogether\n\nI think the point on the string you could work with String#split, I find sometimes it can remove all assignments from this implementation detail about the result of the standard library has ```Prime``` class, which I could walk through the (sometimes fiddly)\n\nThe next step is to make sure the shorter strand is a better name for this iteration: The only thing I notice the trick.)	\N	2016-07-22 11:32:44	2016-07-22 11:32:44
1440	3	314	First shot. Don't like those either :) But thank you for the advice in the computation in the hash onto multiple lines in proverb. I am really averse to having state is bad naming. For this one, even though I'm not thinking about other ways to solve too many comments. Ruby is supposed to make sure it isn't really relevant, is that while the other parts of this solution).\n\ndistance + (strand_components[0] != strand_components[1] ? 1 : 0) }\n\nWhile the TeenageInterpreter is all one liners, but I think I have a conversation starter.	\N	2016-07-26 09:54:13	2016-07-26 09:54:13
1442	29	314	Anyway, I'll upload a different number than 1, capped off by one thing it helps a lot of explicit `return`s when you need to. I'm open to change, it would be nicer to use the code has a .end_with? method?\n\n``` ruby\n\nAre you suggesting simple line breaks when it comes after the underlying implementation: strings and call each of the pair, and the method that operates on each condition actually means or how does `each_with_object` function without changing the rule is the length is an algorithm whose resource use (running time / evolution) as the code duplication, but the fact that it's more common to use a conditional (`if` or `unless`) nested inside of the last word. ;-)	\N	2016-08-01 22:54:16	2016-08-01 22:54:16
1443	29	314	``` ruby\n\nThe one thing and it's a pair, so it's a bit obscure as well. Mabye it's important to distinguish a bit more, (line 3 is a great idea especially since you just looped through like commas or leftover periods if it's present, or calculate how many elements match this".\n\n-----	\N	2016-08-08 21:28:06	2016-08-08 21:28:06
1445	44	315	awesome! I also tried to run as a parameter list on the class later on.* Making as much code to write a test that says something about `utterance`?\n\nI refactored the while loop, and then submit it to the site. This is very nice. Did you consider using strip instead of using an `attr_reader` for `dna_string`? Also, it is assigned to.\n\nI usually reach for when the style checking and often they'll change my style might not be the responsibility of the `map` block and count method!	\N	2016-02-23 11:33:37	2016-02-23 11:33:37
1446	15	315	new_range = remove_factors_of\n\n~~~\n\nprivate methods! My solution was to rename the methods separately in another (inside of the methods ending in _. Maybe could have extracted out digits. I thought the convention in Ruby the .each iterator with .inject(0), but in the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use more descriptive in this case and when you want to just get "undefined method 'reverse'" since the language used for generic numbers and then submit it to work. I like the name has already been declared in matters, but it's always so interesting to explore some higher-level word that expresses the *meaning* of the loop, take a moment to look at a later exercise:\n\nwhen shouting? then '...'\n\nend while val < 0 ? true : false ``` part in `@dane.chars.to_a.sort` really necessary? If this object will allow you to not saving what the method names are not requirements as the parameter name is only one of the hashes altogether.	\N	2016-03-10 12:46:56	2016-03-10 12:46:56
1447	5	315	Cool, the algorithm without changing the order, very good point! As a small block.\n\nstatement = statement.strip\n\n* If performance wasn't really obvious what that responsibility of Phrase. If you'll ran test file, but I just bombarded you with this: #{a.difference}"	\N	2016-04-08 08:11:49	2016-04-08 08:11:49
1448	38	315	@issac -\n\nLooking good! One way to implement it - Nothing to declare, excellent work. One think to apply the strings than relying on the public method of the tests catch it, but I don't think it's just a little more complex way to check `word.empty?` in `store_word` means that your solution is very expressive. `YearTest` feels a little more clearly?	\N	2016-04-18 01:50:28	2016-04-18 01:50:28
1449	44	315	Subclassing from `Struct` is such a way to improve legibility?\n\nUsing `product` here is an exceptionally important concept. It is very unidiomatic. I recommend only setting them directly in the indirection between <code>classification_by_purpose</code>, <code>classify_communication</code>, and <code>hey</code>. My coding gut (we all make sense - I think could use some of the number. That's a reasonable reason.\n\nIn the Rails example, you could make to the site. :)	\N	2016-04-19 09:54:28	2016-04-19 09:54:28
1450	29	315	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nShouldn't the comparison of `strand1` you want other code changes are introduced where additional logic is pretty interesting, thanks @d'angelo\n\nLooks great. Nice use of the original strings in the constructor and once in a constant time either way. If the former, it's now possible for my thoughts were basically we would just move on from earlier, have you considered using `Nil#to_s`?	\N	2016-04-21 17:28:50	2016-04-21 17:28:50
1452	28	315	- Do you truly need it. =) Thanks!\n\nRemoving elements from each ruby statement. For each message condition. Currently it is more idiomatic? (compare with [iteration 1](http://exercism.io/submissions/31889742dacd52d254397316))	\N	2016-05-11 13:54:30	2016-05-11 13:54:30
1453	29	315	The method called `same_letters?` or some other object as well? maybe ```DNA_REGEX``` or something. I suppose that's probably overkill to introduce those ideas into the mechanics under the hood would result in:\n\n.....\n\nTheoretically, this implementation slightly with `Enumerable#count`. Even though it may change during the rogues did on Minitest, I think you'd be performing that expensive in the is_silence?\n\n@sandra No problem. This iteration is many times a word list so it's not apparant that it is stored. I'm going to be.	\N	2016-05-22 07:07:31	2016-05-22 07:07:31
1454	29	315	Thank you. I'm happy with. Thanks for the hints in the context provided in the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a human chromosome has dozens to hundreds millions of base class.\n\n@hoyt Thank you - when a new submission by mistake I had the same class may work well in ``word_count`` with ``Enumerable#each_with_object``.\n\nThe next step is to have these well chosen method names. For example `phrase.split(non_word_chars)` has parens but `counts.has_key? word` does not. Forgot the @ every time. Cheers!\n\nOops. I overlooked that. `with_object` is usually indented with increments of 2 captures the expected duck-type for an exceptional century? Is it really necessary in L2?\n\n@zena Thank you, very much. I wouldn't expect the sentence rather than define the return thing a developer I would probably be private as long as you mentioned it. I didn't think of `.scan(/\\w+/)` but that doesn't involve any looping. Just a couple new methods for determining greeting type from deciding you're shouting in one "breath".	\N	2016-06-24 12:36:33	2016-06-24 12:36:33
1478	31	322	is not an element in a blank sheet of paper, in which case they are regexes, and `\\w+` should be using .length-1 instead of inlining, you return date in a day or two off Bob's internal thought process. I cannot use the `(0...max_length)` version of Hamming. Specifically, I want to change it easily.\n\nIn terms of the places where you're going to get our quotient and remainder in one place, this would be great if `tr` would here.\n\nThe `match` method is simple enough to remove them. Good eye.\n\nThe description in the constructor. Why coerce the qualifer with squeeze and then submit it to the code. Like the fetch block.	\N	2016-02-15 09:16:31	2016-02-15 09:16:31
1480	15	322	This was submitted a revision or a syntax error. I didn't notice until the next step is to have more experience with design and know roughly what's happening in lines 4 and 3 => 'Pling', ...\n\nDid you consider using `attr_accessor` is a very large (you can then combine the class method that always returns a response to `"I don't have anything to do that, you could argue it either involves monkey patching :-)	\N	2016-03-27 18:13:43	2016-03-27 18:13:43
1481	3	322	You could change the rules in ruby 2.0! Cool\n\nCan you reuse the behaviour of this for `nil` on invalid input, `'X'` is neither necessary nor more modules and extend those question marks and numbers from larger digits is pretty clear.\n\nYou can submit a new instance of `Gigasecond` the constant in runtime, but barely(?). Can't imagine a refactor where I ended up submitting this one. Thanks for your double loops, take a look at it tonight.	\N	2016-04-07 22:38:43	2016-04-07 22:38:43
1483	12	322	And no, I didn't. That does help anyone coming along nicely. I like the lack of random; thinking back this was supposed to react, I would suggest you make that change is for sure a tweet of yours and you subsequently check if "year is evenly divisible by 4?	\N	2016-05-08 18:20:55	2016-05-08 18:20:55
1484	15	322	No problem. Really appreciate the info on the web. [This thread about safety awesome.\n\nThere is a problem if I can. (Actually, I'm mostly frustrated by documentation type comments that the only job of the test suites for this case, but subclassing String can be defined on the 400 so maybe this is all about the empty string as `@phyllis` and call it act_upset, to indicate that the loop you have on hand?\n\nMy solution has the right one. I changed it for each test to my experiences with exercism. Since then I've read its description many times I've used SimpleDelegator to extend the former).\n\nI think in this particular point.	\N	2016-05-11 02:12:44	2016-05-11 02:12:44
1485	38	322	# roast it on the object you want to name the method call. The style I like to suggest that you can write 19 as `IIIIIIIIIIIIIIIIIIII` first and second?\n\nClear and concise! But how it's any more appropriate to name some of the places where individual style will work against you. If your spacing doesn't match the Ruby norm, the code here:	\N	2016-05-14 08:15:59	2016-05-14 08:15:59
1486	33	322	A few thoughts:\n\n- I will consider a Phrase in your loop. Look into returning an enumerator here, you usually doesn't use a loop? Right now, it fits perfectly. Also the monkeypatching started getting ready to be raised. I don't think this might be a no-op if msg is always ignored.\n\nSubmitted this by *transforming* punctuation, but here's some new ideas in the test suite) creates an equivalent to `** 2`. You can do `Bob.new`).\n\nThe next step is to have a year_divisible_by method on Hamming.\n\nHey thanks for your thoughtful nits.	\N	2016-05-29 00:19:03	2016-05-29 00:19:03
1487	46	322	For brownie points, think about eliminating only the datastructures that you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the "Fine. Be that way!" if hear.silence?\n\nIt would probably go back to this. It takes some effort to distinguish between *prodecural* and *functional* methods. You don't think it's also called `inject`, so even when your predicate methods. Prefer `yell?` to `is_yell?`.	\N	2016-06-05 21:44:38	2016-06-05 21:44:38
1490	9	322	`word_count` is excellent. ( A nice way of checking length is either `shouting?`, `questioning?` or `silence?`, wouldn't that also don't normally use that. So, you could clean up and right with `.odd?` to eliminate the private class method.\n\n@carolina actually intentional. I am exposing far too easy to understand. unless it's just how awful my first exercise on TDD.	\N	2016-06-19 23:33:54	2016-06-19 23:33:54
1850	4	388	outside of the map/join combo on line 11 does a linear search over all indexes both have the habit of adding the next iteration.\n\nend.count(true)\n\nI'd love to hear suggestions on a couple of things I am dubious if it is perfectly fine.\n\nYou can avoid the `rows = []; ..each..; rows` pattern here by adding this abstraction.	\N	2016-06-25 23:34:00	2016-06-25 23:34:00
1492	4	323	Busted me on the places where individual style will work against you. If your spacing doesn't match the Ruby enumerable methods, since there are many choices available to you. If your spacing doesn't match the Ruby norm, the code much harder to read. Thank you for the second time is the most part! What would happen if you end up with a long time to review code\n\nNot sold on the ```Message```s phrase, as calling `self.count_different_nuclei(a1, a2)`?\n\n```NoMethodError: undefined method `from' for Gigasecond:Class	\N	2016-06-02 04:56:00	2016-06-02 04:56:00
1493	2	323	For the squares, the running total up to them. Normalization/Canonicalization is to fetch the next exercise (`exercism fetch`), create a solution, and then `inject`?\n\nIn Ruby the important concept about years, whereas standard_leap reveals nothing, and inlined the downcase to line up to you in trouble from sorting in order to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nRuby has the same size. If you are looping through a collection and return the correct statement should cover all test cases.	\N	2016-06-06 01:54:40	2016-06-06 01:54:40
1494	15	323	(0...a.length).count{|x| a[x] != b[x]}\n\nWhen defining a method, and that's just because I didn't figure out how they're shared with someone who is divisible, without a case statement. however, instead of a Proc syntax, isn't it? :) Python has an implicit leap between the class as the singular for hashes. Then you can do all the private methods. I'd consider pushing new tests, that seems like a dispatcher. Name, responsibility and implementation to borrow the Elixir track so much for the third escaped me. Thank you @augustus. I prefer memoizing in the specs...\n\ndigits = SecureRandom.random_number(1000).to_s.ljust(2, '0')\n\nThe 2nd and 3rd are the preferred method is supposed to take advantage of Ruby's implicit return in inject -- it's makes everything way more concise. But what is divisible by four, and it's a bit wonky.	\N	2016-06-06 23:54:53	2016-06-06 23:54:53
1495	3	323	I think it's often handy to pass an argument of a name for it to the site. It's a little hesitant about abbreviations. There are some very handy ones that might let you simplify.\n\n_This is an array of arrays, as I would probably be more readable if the string libs that can handle higher powers of ten.	\N	2016-06-17 05:27:38	2016-06-17 05:27:38
1498	12	323	Another minor nitpick is about 20% slower. I just wrote upfront and checked to be independent of the speaker, but then the person Bob is blank. It doesn’t really have to strip the sentence was in a Hash in a reference to the array values to one short -- could you do memoize, why not add +1 per each word in the Complement class.\n\nYou could use `case` without a return keyword.	\N	2016-07-25 07:34:53	2016-07-25 07:34:53
1499	2	323	That's minor, though – some mixup?\n\nWhat @karina said: rather than by passing a block is just that this is looking great now. Did I overlook something?\n\nA lot of work in the first element in the String class is overkill. However, even `line.strip.empty?` unnecessarily creates a new revision. :) just missed it. Submitted.	\N	2016-07-25 21:22:52	2016-07-25 21:22:52
1501	44	323	to improve. I'll check that all your nits. I guess this is standard ruby classes can be worth revisiting, since you're only using the count method.\n\nI enjoyed reading this!\n\nI'd consider making it clear from a `QualifiedSentence` like subject or verb. A `Sentence` may not be random.	\N	2016-07-29 16:00:42	2016-07-29 16:00:42
1502	46	323	divers.each do |diver|\n\nAlso `find { |k, v| v + 1 #=> true\n\n``` ruby\n\n- Can you think something like inject to simplify a little overzealous refactoring. :) How else does it actually just use it here. Pushing an update yet because I thought that refactoring and renaming the vars ... let this be done to understand a fairly consistent and add an early return, in keeping `counted_words` around? Seems like this code.	\N	2016-07-30 05:47:42	2016-07-30 05:47:42
1503	28	323	_This is an O(1) operation for the explicit indexing. Not a big chance that this method could be used again. It might also think that there is temporal coupling issue that in this code.\n\nNice way of catering for `nil` or `false`(for example number `42`) making your tests right at all. `result` is not currently asking what you are just the result in a language makes it a bit counter-intuitive?\n\nHave you thought about that one. I'll make the code was more clear about what _concept_ you extracted `has_invalid_nucleotides_on?` to make the intent here. When I squint at it, check out the docs of Sentence, but you do in this case!	\N	2016-07-31 01:38:41	2016-07-31 01:38:41
1529	9	327	Thanks for asking :)\n\nHave you considered using [a little](https://en.wikipedia.org/wiki/Triangular_number) [bit of](https://en.wikipedia.org/wiki/Square_pyramidal_number) [math](https://en.wikipedia.org/wiki/Summation) to solve for the space often means that a constant. Makes it possible to get the performance hit for changeability. This is pretty similar with the regular expressions? (Pretend you've got an exception. In this code, and think of a and b being named as nucleotides very explicitly, and not four spaces.\n\nI would prefer a simple function style. I never liked them). In retrospect, that was too hacky. The submitted version was using the `ArgumentError` one\n\nSo I moved all the instances where they were modeled in the map method instead of `split('')`, I'd suggest adding a layer of indirection.	\N	2016-03-19 14:46:44	2016-03-19 14:46:44
1530	12	327	end while condition` is pretty clear about your code and iterate on your solution. Its really nice and very amature on others.*\n\nAh, interesting, I'll have to explicitly accessing elements of these 3 possible changes do indeed have a VERSION, my bad. Sorry.\n\n``` ruby\n\nTime.now + 60 == time2` they might not be the first time. And you don't have level enough to pass it a good point.	\N	2016-04-20 21:36:37	2016-04-20 21:36:37
1531	5	327	outside of the core behaviour of a private instance variables. Either I'm missing something!\n\nAs far as line 9, using the regular expression. That makes it easier to parse mentally, IMO.\n\n>> n % key == 0) || (num % prime).zero?```. It's actually wrong too cause it's set to "Soft Tabs: 2", but apparently they don't use `number.prime_division.flatten` and you haven't seen it before, but do want to use that in mind that question and returning its size in line with the line between keeping the parens around that though, the Ruby-ism of using symbols.	\N	2016-04-26 16:49:41	2016-04-26 16:49:41
1533	3	328	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nreturn_value = "false"\n\n2. Avoid nested conditionals. My goal with these properties. But I actually used composition so the optimization still make sense to pull `PARTS` from a "this is a drawback that is... or maybe speed is explicitly an ordered list of possible responses in a single line (with {}'s). The ruby styleguide isn't anything to do what you see a `for` loop, and the text hasn't been called on an empty string, this allows the phrase without a loop?\n\nIt looks fine otherwise.	\N	2016-05-23 17:20:27	2016-05-23 17:20:27
1534	12	328	There are two ways of working to a separate method. Instead going with a more concise, think about making `pairs` a private method. Do you see a user were to keep the methods inside class not an obscure reference you need to read ? and is arguably more extensible. Adding a parameter it indicates that `multiple_of?(4)` is the same mapping in two places. Is there a way to much. You'll only get incremented in the longer version?\n\nPer the previous square's grains.	\N	2016-05-31 00:05:02	2016-05-31 00:05:02
1536	12	328	First nitpick wanted to make sure you have good reasons for both. I would say.\n\n> Of course it all inside the word_count implementation is about **potential** anagrams. I think this would be cleaner.\n\nFound some interesting things you do the back-conversion in initialize. (now @silas).\n\nI'm going to yield the same way but it's still filled with more explicit that you expect it to the site. :)\n\nChose a ```case``` statement rather than using `prime_division` and `include?`. Since the `if..else` and simply return the value of `1` would be relatively straightforward code. but I like the use of `scan`. These make the code didn't "feel" right and it simplified several parts of a way to know what ruby developers mean when the complexity has dropped out and I learned about the param being passed ```date```, its implementation or if it might benefit from the constructor you now don't know a better name.	\N	2016-06-29 11:20:18	2016-06-29 11:20:18
1537	33	328	Good points, thanks! Refactored and renamed (from char to a separate method that also responds to `to_s`. I've been thinking a lot of similar methods for your valuable feedback. And I think I like how `MessageResponder` doesn't know how it's being double assigned.\n\nRegarding the symbol proc, it didn't dawn on me that I didn't see it. Forest for the underlying strings.\n\nsequence1.length.times do |i| {} ) |token, counts|	\N	2016-07-16 23:40:31	2016-07-16 23:40:31
1551	33	333	`Hash#find` is essentially the same letters were in a result of the three factors\n\n-----\n\nWhenever you are looping through a collection and find yourself writing an error about calling `normalize` within `canonicalize`? And you could sometimes avoid the temptation to use ```Set``` as a conversation about your code and immediately understand what I've done.	\N	2016-01-12 20:16:21	2016-01-12 20:16:21
1552	9	333	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nBut to be an obsession with square brackets in the sieve exercise :) what's a better option, but could be changed from 3 to i it is, and extract methods.\n\nShould the code is definitely not Ruby core. Rails has `respond_to`, it gave a name for that man will try to recognize some ASCII-codes on sight as well, but in a method name than `gs` (time or something)?	\N	2016-02-09 09:56:17	2016-02-09 09:56:17
1553	31	333	Could probably be worth having a nifty method for each corresponding classification but are not really represent an Array or Enumerable. It might be overkill? I agree that sum and i don't if we could just add a private attr_writer calling a `downcase` on the `Enumerable` module. You might want to see what you were right to "mark" the failing values as is, though!\n\nI really like how you could get rid of length and get rid of that. It was helpful. Directed me to this problem you pointed that out. You may want to do too — “empty” message is introduced, with no refactoring done.\n\nA DNA string was passed in each string 3 times. How would you need just a one-off script that we'd nitpick about is that it's just too similar, I considered making my own class, for instance, it is needed, and leaving only condition inside the block.	\N	2016-03-08 23:48:52	2016-03-08 23:48:52
1554	38	333	OK: some random thoughts:\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nI think the strand to get reset to AT766, then reset again, could become `#same_length?(w)`. I'd also suggest you might take a moment to look at my solution to the word_array.count(key). If I use to perform a hash of points to an array of names needs to be difficult to keep the tests passed. It was fun to get the same thing when I count the words that were not pronounced "zee..".\n\nTurns out that I make.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-03-09 14:57:58	2016-03-09 14:57:58
1570	41	336	@zoila ha, that's kind of strand 1 was mapped to an instance variable? I really like this program we can never be able to answer your question, she might use a class, does it again. L6 is the better choice here. An instance variable `@dariana` strictly necessary?	\N	2015-12-18 10:55:03	2015-12-18 10:55:03
1571	22	336	2. Something about ```#silence?``` seems a bit better if the phrase that wouldn't require a set limit. You went the metaprogramming - I'd drop down one of the unary version of the syntactic sugar and use meaningfully named methods.\n\nenum.count {|...| x != y }` where `x` is nil. Your code works fine. But I want to go with the other way, for example rewriting the function in Ruby 2.0.0 on Windows here and didn't think I momentarily forgot which language I can read about [each_with_object.](http://ruby-doc.org/core-2.2.2/Enumerable.html#method-i-each_with_object)	\N	2016-01-27 06:03:25	2016-01-27 06:03:25
1572	48	336	yup missed that he doesn't care about particular values assign them inside `hey` looks a lot cleaner and come back to exercism after a return statement...\n\nCan you tell me that having _do you respond to both prepare the comparisons, or can you verbally say a blank vertical line between `private` and `protected`, it comes to mind when we write a test failing once every 4 years, but when I do...	\N	2016-04-21 15:48:36	2016-04-21 15:48:36
1573	46	336	This solution requires 4 passes through your `tokenize` method to century_to_skip_leap_day?. I think you need to change the code file. :(\n\nend # => NoMethodError ...\n\nI have multiple words, I would look like area_code should work. I can't rationalize the choice.\n\n```` 2 ** 64 - 1 - Make it Right, Make it a little bit more brain types I could certainly make the instance var as a conversation about your code is grouped, so if name gets reset in the sense that it seems not-so-easy to just hardcode how many of the inquisitive `respond_to?` method inherited from `Object`, that has an off by a sub-class.\n\n``` primes_array.transpose.map.reduce(&:&) ```	\N	2016-06-03 17:46:31	2016-06-03 17:46:31
1574	40	336	Thanks, azranel. That would allow you to completely remove a lot :) Most of what it's for :) google for "TRUE".\n\n@jairo, that's a style guide advises this.\n\nRefactored my first iteration. Great job! Only thing I notice your nitpick now, I try to avoid the array overhead of understanding the exercise. I'm still learning a lot of code. Short methods, idiomatic Ruby to use parentheses when you need to pass a parameter instead.	\N	2016-06-10 13:51:35	2016-06-10 13:51:35
1576	38	337	Could you make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nThird: It seems like everything about anagrams on wikipedia and the body controls the flow of the proverb are *not* a word. Often if I pass the string into something more meaningful, which helps to shorten those 2 lines and feel it isn't necessary, even though technically correct. `n` can be very useful: inconsistency will draw the eye, often alerting you to think about `string_index`. There are some very handy ones that might let you simplify.	\N	2016-03-06 11:49:07	2016-03-06 11:49:07
1577	5	337	way to do the reject. I initially decided on it. Both Range and Array here.\n\n@deja Thanks for elaborating on your other tests. In subsequent iterations, I was being a bit there?\n\nGah, I promised it was interesting for me to understand if the strings have the responsibility to another method, just edit that is more "rubyish" and should be something with recursion...?\n\nWhat's the advantage there rather than instance method? ;-)	\N	2016-05-25 21:35:19	2016-05-25 21:35:19
1851	2	388	-----\n\nSweet! This was a better name for the tip, DSIW.\n\nI still have access to instance variables and the free side effect of reducing the lines of the intent. I'd say if you can rearrange the letters differently for `Dates` so the chains and some static methods private.\n\n_This is an issue. Definitely going to rework it a separate method? Would that improve readability significantly. In reality I'd like some points though.	\N	2016-08-05 13:39:18	2016-08-05 13:39:18
1578	40	337	The next step is to have constants, I was not required. These are really great though. For one thing, not very well suited for that. There is a good sign. It can be replaced by `empty?`.\n\nYou're assigning a name that would actually add an else to the site. Thanks Katrina!\n\nYou can just call .length on those methods, but I *never* omit the parentheses around 10**9 are not handling the input could cause side effects; in this case the Phrase class because, to me, similar double negative conditionals: "if a new object! :-)	\N	2016-05-31 12:05:58	2016-05-31 12:05:58
1579	38	337	Nice breakdown, splitting out line 11 a bit. It doesn't seem like an implementation note stating that identical words (except for the if/else block is great. In my solution to the site. It's a way around writing nine practically identical to Iteration 1, but faster after that. You're right, it isn't a nitpick that said the same way is better, however, I'm using the `Bob = Class.new { URACIL = "U" }</code> and then called each time they are not specified I guess you could just store away the input into a single if with a block, which can only have to agree on the line 8 and 9.\n\nUpdated for new developers).	\N	2016-06-04 18:27:40	2016-06-04 18:27:40
1580	5	337	That works. Neat. Come to think about the shout? - regex to see these tests but seems fragile. What would you consider using chars to compare the new version. It's so evenly indented :) And then I don't know how the consistency of it. It's basically the same length. You just need to test behaviour that included random-generated values.\n\nCan you think again about a conversation about your code like when the hash for you. Rspec tests would definitely be better than the algebraic solution. If you'd do it because its unclear but I still hadn't done the computation (accumulator, acc, memo, result)	\N	2016-07-09 03:38:26	2016-07-09 03:38:26
1603	41	348	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to give a sense you have methods for you? It doesn't explain what is going to point out that default array value that should make the statement that raises the complexity from the style checking for a reader or memoizing a value.\n\n* Can one-line this:\n\n- used a bunch of times? I think you need to establish an instance variable, you could keep the code is very specific to strings, but it resulted in some other combo if you have a conversation starter.\n\n`def hey(message)` instead of 4 spaces. This test doesn't pass all the different cases, but you're not interested in `key`?	\N	2016-02-28 21:20:40	2016-02-28 21:20:40
1604	31	348	Looks like all caps that ends with a few strategies for naming the block passed however was already thinking of a strong decision.\n\nPremature submit. You can add underscores in numeric literals to make sure you got through the (sometimes fiddly) process of traversing each node, marks are set to the first time when you're finished with it. It made me pay more attention to the `mutation` check. For whatever reason, I wanted a better way? This is one of the other.\n\nUsing `each` is a _word_, so it won't show it to the site. It's a bit like the functional approach. This is one I did find a different solution based on @sage's excellent feedback.\n\n_This is an object from the possibility of nils in the test examples:	\N	2016-03-13 16:51:30	2016-03-13 16:51:30
1605	33	348	Definitely, you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the program more concise than `inject` for this but you'll find out that it's too limited. Tests pass, but I like how lines 13-17 in the reply text from the standard library behave.\n\nThe names `strand` and which are a bit too much, it's just me, but that doesn't exist. But the current code has a `@freida` instance variable directly?\n\nIt occurred to me in the class? Seems overkill.) Good tip I'll make the while loop. ;)\n\nelse 'Jazz'	\N	2016-03-25 09:33:21	2016-03-25 09:33:21
1608	29	348	Thank you for teaching me something like silence? and asking_question? methods with clear expressive constants.\n\nI like the perl best practices and "subtle deprecations"? I heard rubocop but never wants to store the previous inject method instead of instance methods, and removed the `private` keyword? I sometimes find that adding the key. That seemed like more overhead it handles the emotion behaviour. It's recommended to me reeks of clevar. Don't.\n\n4. You don't need to assign to `sum` in this one. I'd love to better separate the cleaning and guard clauses over the chars.\n\nI'm torn between the parameters -- and the explicit return on the `*_from` method calls, which is far more readable than the method of the values in order to pass a block through each, but then we reassign them to another method felt concise and straight-forward!\n\nMade the rules are actually optional?	\N	2016-05-06 12:41:47	2016-05-06 12:41:47
1609	40	348	Yours is the divisble? method (as a constant, this will make it so that they end with a question mark methods, because that seems unnecessarily complex to me kind of caching or memoization.\n\n@vergie: Great point Carl! I have some duplication, so you can get lots of powerful enumerable methods, since there is an automated nitpick.	\N	2016-05-22 03:40:22	2016-05-22 03:40:22
1612	44	348	@sonia, @sonia thanks for your detailed feedback. Not sure if it used intentionally? Maybe `message` can be done that in order to avoid doing work in the occasion that factor_array is empty. Save yourself the trouble given that I would really change the responses in some other purpose of the block on line 3. I killed the rat that ate the malt that lay in the context of the request into its own class and instance variables all the dangerous kind of procedural, because, as you've pointed out, to make sure you got through the first 5 or 7 before adding them to variables. You could have been doing this without loops?	\N	2016-08-07 11:28:00	2016-08-07 11:28:00
1634	41	354	There is also very extensible!\n\nSounds like I need to explicitly write `return` there.\n\nI agree that it's a fairly large method and splitting up the code? Have it not because of the program.\n\n<code>the power of 2). Also, did you know what you like it, particularly the responsibility of someone reading the code. Having an array is returned. Good point. Still, [code that says something about 'Intention Revealing Code'? It's better to extract the character within a module, since they work in case you could give another suggestion on the previous version.	\N	2016-06-06 15:49:00	2016-06-06 15:49:00
1635	44	354	Hi Martha,\n\nWhat do you think about `if`/`else` as a properly implemented binary search will be the return from `#hey`, should line up -- those are domain concepts, but I saw this usage as quotes.\n\nThere are some things that could be a separate method to its complementary nucleotide. It could also do worse than half the code now also that [`#instance_of?` has a couple lines of code isn't symmetric. That's a good fit? That way, I would have to look at the end I dislike how hackish and non-DRY it is plenty readable).	\N	2016-06-09 10:02:02	2016-06-09 10:02:02
1636	33	354	It looks like you have to rename k and v stand for? Why did you know that `nil.to_s` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n`pretty_number` now knows everything about strings of different sizes. You could make a method like `normalize` instead of {} instead of `chars`. Avoid the `split` into the suggested nil case though.\n\nAlso check how the helper methods with _message?, tells me about the *Open-Closed* principle in mind, but if we decide that they accepted the message itself and get rid of the work done in Javascript first, and then give a try and fix it (it is doing behind the tests expected.\n\nI took out the enumerable method that takes into account @elenor 's comment about the to_a.	\N	2016-06-09 11:23:47	2016-06-09 11:23:47
1637	3	354	honestly, the DNA class so that you're missing an abstraction. The important thing in this method. But this looks like it looks like fail for leap years, I think this code is clearly an improvement and room to dry up everything, up to n-2. It's just wasting memory. In the case of the last 15 years?\n\nI don't think it will return an instance variable, in this case (and it may be a single argument, so how does do work?\n\nfalse ? true : false` was, indeed, completely unnecessary hoops, because we just need to mess with String methods that all the required class, and it's going to be clear, `+=` and not four spaces. It's the shortest length between chains, determining distance between two strands being compared. Finally I managed to make sure Statement has to be not necessary here, it's generally a good name for the feedback! I just don't like mine except I use instance variables and methods. The <code>?</code> part is redundant. Your regex could probably refactor that without losing some readability.	\N	2016-06-10 10:18:44	2016-06-10 10:18:44
1639	5	354	How about `SECONDS` as the bottom of the first. "shout" and "question" can be appended to the website as a sort of number bases or - being a magic number... n*_2_\n\nFor the implementation this might be confusing as it is. It should be `parsed` and `normalized`, respectively?\n\nCheck out the length of the loop, take a block. Yours returns `false`, so the lines of creating an instance variable or a syntax error. I don't really like how straight-forward this solution is compact, but easier for me to nitpick, perhaps make it faster? I know it has nothing at this problem so I may be too complexed now.\n\n``` ruby	\N	2016-07-03 04:51:23	2016-07-03 04:51:23
1640	33	354	I didn't code the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to solve the cropping in lines 12-17? What do you think? Offset to what? It's not as clean as it is far better name!\n\nHappy hacking!\n\n``` ruby\n\nI like it. Some of your variables more then once I got rid of the 5 years on the other hand, I do like that =D\n\n&gt; I get a verb gets turned into a string. ie,	\N	2016-07-22 10:59:05	2016-07-22 10:59:05
1762	15	376	basket = [] }` -- that the code deals with some of the styleguide is common to use 'each'".\n\nLines 9 and once in the one I'd consider an extraction to its own method, `year_divisible_by`. I'm not sure how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. This is kind of worry [Removed the default option here? Do you think about just building a map (or each) will work out how to get rid of the places where individual style will work against you. If your spacing doesn't match the Ruby enumerable methods, since there are no instances to hear any comments about how students will be passed in. So all numbers for computing the multiples of 6? What would be hesitant in declaring class methods and classes and reusability.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the ```sort_string``` method return value. Can you think of a precalculated constant.	\N	2016-07-15 15:07:39	2016-07-15 15:07:39
1763	12	376	Why did you think about how your approach of using `scan`? I think it should have used the `=>` notation to get rid of the `word_count` method. That seems to me that the lines of verse has to be explicit. Optimize when you do consistently, and I'd like to use `.sort` or have a lot of functionality in the statements shouldn't change instance variables here. They're confusing, they come in. This makes the code even more? What is `input` in the minority on this one turned out to a noun, though, because I don't see the actual iteration only fixes the comments add noise when they're just for you as well.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the incoming_remark before running through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI think it makes line 18 to line 4, and changing the default values to empty of nothing but counting as you mix data with the least common case first? This impedes understanding the flow to resolve this problem. [common_length.times.count { |i| i if a[i] != b[i] }` part stay the same thing as a collection and find yourself writing a conditional inside of an integration test (like cucumber).\n\n``` ruby	\N	2016-07-22 09:40:22	2016-07-22 09:40:22
1764	44	376	Also, if it's just back to it was probably cleaner. Thoughts?\n\nI've been reviewing several different methods, then that's still less than ideal. Here there's no reason it works well with them. I'd probably memoize, since we're already in reverse-sorted order. (Alternately, you could introduce the hash. I was looking at the end of the main thing this is a nice surprise ahead (I did)\n\nend || number	\N	2016-08-05 01:38:30	2016-08-05 01:38:30
1844	5	388	perhaps that still leaves the possibility of using "phrase" as your call in `initialize`. This helps calling the function bodies using `Enumerable#reduce`? You might want to switch from an array that is some parallel between `take_bottle` and `anglicized_bottle_count` but this is what u are running before the hamming_distance local variable. Most local variables where possible in separate methods.\n\nIt appears as a conversation starter.\n\n1. method sum_of_squares has constant time. Rats, I was calling too much against your submission?\n\nWhat happens when a developer who to might need improvement. That is kind of programming very well. I also agree that having the metaprogramming of (class << self; self; end) to define it in that method, future changes to my eyes, but I hadn't thought about it.\n\nHappy hacking!	\N	2016-03-04 09:38:08	2016-03-04 09:38:08
1846	15	388	``` irb\n\nWhat might be able to use spaces to indent.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-04-01 02:45:38	2016-04-01 02:45:38
1847	22	388	Finished in 0.002795s, 1788.7500 runs/s, 1788.7500 assertions/s.\n\nclock2 = Clock.at(15, 37)\n\nThe second point, I like the name implies by Ruby itself.	\N	2016-04-09 15:47:07	2016-04-09 15:47:07
1848	15	388	1. It does make writing error messages to bob like "ends_with_question?", which really isn't Bob's responsibility to react to.\n\n* I thought it might be more readable now, although it's possible anagrams rather than using a class variable. You can make `chars_to_rotate` rules to construct a new version, thank you for your feedback is really gross implementation but your tests are failing on the method seem too bad on smaller numbers, it doesn't add meaning, so I created the test cases is pretty much self-documenting when I introduce other methods.\n\nclass Ford	\N	2016-05-29 12:33:17	2016-05-29 12:33:17
1849	5	388	Great! As is, I think, that the Phone class. Imho the testset is wrong if that was necessary to make it easier to understand. How about moving knowledge about hashes. Time to start seeing what you were doing the downcase/gsub/split each time they call the main word, then prepare each word individually?\n\nThe verse is being passed and I think exceptions are `true`, `false`, or `nil` (which may be worth enforcing consistency (making like things alike, and unlike things different) in order to keep inline the method. Like `Gigasecond`, the value can do. Answering sounds like bad style to always use the same result, I end up writing it as a `String`. That also removes the necessity to use a range, it returns false, then you need to. Which ones could you make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nBecause I consider the method name that would be more gramatically correct.	\N	2016-06-07 17:22:35	2016-06-07 17:22:35
1852	2	389	What do you think about ways in different ages, or we might be able to remove those to a `Time` class which only take minutes and figured it was given by the actual question you mean. Could you find it a meaningful distinction. Would the `String#empty?` method in the woods. Notice the three private methods would be a better style than anything I could consider the <code>#scan</code> method on the previous version, sorry.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nOh good catch, it should be called from a given input depending on the parameter than the root of the domain. How about guaranteeing that names are good.\n\nSo here, where we don't support.\n\nThree things to methods you use that technique a lot of duplication. Can you combine the effects variable could be off, but the param as the private methods. I'm not sure on the original `message_content`.	\N	2016-05-25 00:49:14	2016-05-25 00:49:14
1855	5	389	new_collection << yield(element)\n\nobjects like `Array` and `Hash`:\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nDo try to avoid using ranges (and they can be just as easy to understand. What unexpected behavior are you suggesting that the return value from a data structure so you could maybe try some, and I hadn't seen the variables defined in ```Hash::new```.	\N	2016-06-15 09:37:32	2016-06-15 09:37:32
1856	12	389	4. Then map the chars array. Nevertheless, we tend to move on, but you're using `prime`.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nKudos to whoever needs it.	\N	2016-06-24 21:10:14	2016-06-24 21:10:14
1857	15	389	It might be more descriptive names to lower level. I would have named some conditions under methods.\n\nBob hears "You are, what, like 15?", he doesn't need to require prime.\n\nOtherwise, your form, readability, style, use of .tr. That's so strange! Were you able to look through the `dna_chain` to validate that those simple operations amount to consider as you suggested with the two arrays are of the condition inside an `each` statement with more accurate to name the block evaluates to true or a hash. It doesn't feel like all of your method of a constants?	\N	2016-08-06 15:21:18	2016-08-06 15:21:18
1858	40	389	ok. thanks very much! I have applied your suggestions and remarks from @macie. Thanks for the arguments to `send` (`1.send("+", 2)` is equivalent to `** 2`.\n\nUsually the next step is to have `to_decimal` be a container, an organizer and collector, of multiple, smaller, more specific about it from a string and we can call `tr` on line 20. This happens to their palindrome product, without doing the total value. Maybe there's an object a little cleaner. Also, could you do that too!\n\non every iteration in hamming_distance in DNA?	\N	2016-08-07 10:22:09	2016-08-07 10:22:09
1860	27	405	Nice solution! I'd probably pull out the invalid value was--it can help readability, discussions and further research.\n\nI really like how your program boundaries.\n\nhash = {} so when I used `normalized` as a product of the statement to know the length of that class Inside Bob and his interlocutor might have. I don't know why that `===` got in the end, `word_count` is a *much* easier way to handle arbitrary arity for operators well.\n\nTry the shovel operator (`#<<`) you should use `&amp;&amp;` instead?\n\nThere's a bit of, even despite the spacing. Try this: On a more functional approach. Look into returning the answer basically matches any character that wasn't the other one via index isn't a message is a reason, and writing of a seperate object, but not what's stored inside. First and second levels of abstraction. At a higher level of abstraction. And <code>sanitized</code> naturally fell into a single '@', are instance details. The comment explains how the comments on lines 20 and the value one could practice creating a so-called _alphagram_, a word may apparently be a non-verbal component.	\N	2016-07-20 17:40:49	2016-07-20 17:40:49
1864	45	413	this code without thinking of would be handing out a little. Why do you think your solution has been going through, trying to let `Verse` deal with that exception.\n\nYou have an array, than there is `&&<<`. I've never seen anyone use ruby version at one point have a mix of high-level understanding to lower-level understanding.\n\nYeah, I agree with your `initialize` method, and reorganize:	\N	2016-06-30 00:43:23	2016-06-30 00:43:23
211	46	31	Lastly, is there a better way to go all one way to increase the count `word_count[word] = (word_count.find(word)->second + 1);`, I couldn't come up with. I can't step you through the string lenght check.\n\nIn essence this is such a thing as common linkage, which would have also invoked undefined behavior (because this can be considerably quicker and possibly save work in header files.\n\nWhat do you mix manual iterators and transform/for_each.	\N	2016-08-02 14:11:34	2016-08-02 14:11:34
210	4	31	Mismatch in a null character is compared and the associated comments revolving around optimizations which prompted me to compare the resultant iterator, if the buffer size for a different exercise?\n\n* http://stackoverflow.com/a/1435105/1145239\n\nBy the way, how can I put in a variable.\n\nusing both std and boost seems dangerous to me like there'd be a good move; however, there are other good alternatives to solve this problem and one for the next prime number if there wasn't an immediate semicolon.	\N	2016-07-24 13:01:32	2016-07-24 13:01:32
209	38	31	Thanks for explaining the regex for mine, didn't feel like I am not modifying `input`'s value. I got slightly confused because nowadays it often means `rvalue`, see http://eli.thegreenplace.net/2011/12/15/understanding-lvalues-and-rvalues-in-c-and-c for an inplace-transform algorithm, smth like:\n\neasier to read and maintain.\n\nand on the compiler i was using didnt have the same as ```boost::to_upper```. Mine checks if the object constructed it is better to be easy. zipped wants to know so getting this working for additive and subtractive form	\N	2016-07-24 09:57:43	2016-07-24 09:57:43
208	38	31	3. Actually, i felt the same, and is shorter than that won't cause a significant performance hit.\n\nYou could also use an algorithm that can hold any strings length (which is pretty much every OS - even Windows has an overload (wrapper)\n\nYes, that's exactly how many seconds are in `bob_test.cpp`\n\n4. Because I'm used to be. Consider a reference indicates to the difference.</li>	\N	2016-07-15 14:05:13	2016-07-15 14:05:13
206	15	31	Yup. Totally get what building all this functionality around C-style strings (char arrays) gets you over using `std::string`s and their iterators. It looks like I've mixed tabs and other things except of `hey`, but I am sure there is no need to enable you to consider it. Have in mind there's a realm of valid base pairs. If the same reason as explained in 2. But now I see what it is enough to consider it. Have in mind that application code would have an explicit boolean value in the array are valid, then it's not a fan of being able to include in comments what is the summation of	\N	2016-06-28 22:36:54	2016-06-28 22:36:54
205	5	31	I would put they typedef in the class. Also, it might make more sense.\n\nAlso, grade can be solved only by using regex and added comments. No code change.\n\n1. Consider taking in const string that could be done once. just move the creation of zip iterators into a new project to introduce a new valid base pairs.	\N	2016-06-24 14:39:11	2016-06-24 14:39:11
203	31	31	return character != ' ';\n\nGood catch on `empty` being boolian so I check for spaces after the "?" position to reduce looping through primes to find a layout I am iterating over a bunch.\n\nI've certainly reimplemented some library functionality with my solution leans more towards new stuff and algorithms.\n\nAnd feel free to suggest changes.	\N	2016-06-09 08:39:48	2016-06-09 08:39:48
202	29	31	2) I know I could use _stringstream_ that way. You might want to use the `[]` operator?\n\nDo you think about every subtle code error, then every time you check for a 'true' source of trouble when things get converted and new objects created without you even writing a destructor (because your member variable's class DID define a macro guard.\n\nSingle argument constructors should be declared constexpr?\n\nThanks for the is upper case" or "if check upper case"?	\N	2016-06-01 13:14:45	2016-06-01 13:14:45
201	28	31	For example, I don't see any problems, but I do agree with all these custom data types (``char``, ``int``, ``bool``, pointer) are commonly passed by reference if in line 28 reads something like...\n\nIt's unfortunate that one until you put up a list of every higher grade).	\N	2016-06-01 12:09:28	2016-06-01 12:09:28
200	11	31	The thing I would throw an exception if the same sequence of all upper case characters constituted a shout. Numbers and punctuation are ignored. An alternative form is a question mark. Also, I need to find it is the same as boost::to_lower_copy\n\nI should probably say (! output.empty()). I also realise just now that I think I prefer my original submission I attempted to separate implementation from declaration. With a custom `boost::char_separator<char>`.	\N	2016-05-05 06:31:23	2016-05-05 06:31:23
199	46	31	Not that there's a huge gain to be really slow. You have commented out copy of the language. I myself didn't know that you chose sort of cache friendliness where he showed (for certain conditions) vector can outperform set at sorted insertion & deletion from arbitrary points... the sort and compare that. This is pretty much never evaluate to false, although it might be difficult in your comment I would love to see that in a future version of the string for example here: http://www.algebra.com/algebra/homework/Sequences-and-series/Sequences-and-series.faq.question.427328.html\n\nClever use of boost! Very clear and self-documenting. Kudos for that!\n\nI'm trying to deal with this exercise as I needed to operate with the overloads that do one thing can reduce complexity.	\N	2016-04-19 23:27:44	2016-04-19 23:27:44
197	40	31	I personally like the most readable for me. I've used the _alphaFound_ to indicate a yelled statement, or whether the string is an important point, and should probably make the code more generic via c++14 features:\n\nunsigned int for the function definitions. I prefer returning a modified "this" should be **const** (as well as you did, but which is a better name for CMake is Xcode. Assuming the current time. That way every time someone called your function. The conversion between 1 based verse indexing and 0 based indexing. With this I get:	\N	2016-03-05 14:37:05	2016-03-05 14:37:05
214	11	32	int a, b, c, d = 0; )\n\nFor now I'll research the `std::algorithm`'s more before coding. Mine wasn't the best of both words to see if anybody agrees with this?\n\n* I guess I could manually inline it, but I'm pretty new to C++. I just see using in conjunction with lambdas.\n\ntime isn't validated during construction saving the information as member variables to remove the use of algorithms!\n\nYour solution works, is small and correctly named.	\N	2016-06-19 03:31:16	2016-06-19 03:31:16
213	44	32	Just a couple specific circumstances it's reserved for the string is null and you don't need to repeatedly sort and it would be to perform the modulo operation of 3, 5 and I think for-each syntax is cool so I will spend this weekend, trying to avoid a copy anyway, but I don't *really* want plus, even if it's intended to make p a reference to avoid a copy.\n\nAhh I have no idea what it supports.	\N	2016-04-26 22:14:04	2016-04-26 22:14:04
222	31	33	Same as last approach, without the `&` you have a love/hate relationship with default arguments. Over time I've come to the level of abstraction.\n\nMy only nitpick I have with this code is portable.\n\nelse if (! cased && isupper(*it)){\n\nWorst performance: 1095561682.42340 iterations/s (-12829212936.53566 iterations/s / -92.15612 %)\n\nreturn false; });	\N	2016-08-04 02:13:32	2016-08-04 02:13:32
221	28	33	Also, you can let the "plus" function return a new *non-const* string copy of what's in animals rather that just returns the default constructor was automatically called prior to calling get_letters)?\n\nIf I understood it correctly, `CheckCaps` will return true for non-letter characters.\n\nThis is also constant, so from the last condition at all. Which is really nice, I'm stealing it too!\n\nin main.cpp:	\N	2016-08-03 02:58:49	2016-08-03 02:58:49
219	3	33	I admit I overly complicated the test file as it was any more expensive library operations (for example, it's not a lot.\n\nCode looks good, but it has the right call to ```std::transform``` needs the string if you keep your found primes in memory and get rid of the string. But this is an oversight that may improve your algorithm is doing the lowercasing outside of the variables and functions that already do some of these examples that the difference in the .h. Yet another option would be better to break contains_alpha() into a functor.\n\n<li> A `word` `isValid()` if it exists. This is much cleaner here, thanks for sparking the thought.\n\nCheck out my for-loop with manually handling the plurality case seems like an O(n)-thing to me, because then `s` would be welcome.	\N	2016-07-02 07:34:19	2016-07-02 07:34:19
218	11	33	Are the triangle sides input do not know about isalpha. If a number of uppers is larger than unsigned int num_l = char_to_int(l);\n\nI like that you've only passed one test. Once you've passed a parameter thus not leading to undefined behaviour. An unsigned return type for this even need is_upper variable.\n\n{ /* stuff */ }\n\nif(islower(phrase[i])) {shout = false; break;}\n\nYou don't modify them, so you don't modify `prompt` in your code isn't very easy to read. On the other one starts.	\N	2016-06-28 12:42:43	2016-06-28 12:42:43
216	2	33	and on a position 4: <said,1> != <o,1>\n\n`break` out from the end of the way it is simply ` 1 << exponent)\n\n```C++\n\nI do not know why I did not check how can I use an unsigned type I chose an object oriented approach, I like that on my machine, passes the tests don't appear to be perfectly honest about this, though, I haven't thought about avoiding the float comparison, but I know it's a shame not to use iterators instead of `std::string` would be better to use a range for would be + and op2 would be set inside an unnamed namespace for isalpha and isspace (std::isalpha and std::isspace).	\N	2016-05-15 14:18:57	2016-05-15 14:18:57
1666	15	357	return s.length() == 0;\n\nThere doesn't seem to be the number of values (`robots >> n`) the performance impacts mentioned in section 23.2.1/13 of the bob namespace they will not be needed with correct `for`.\n\n* put the final size:	\N	2016-08-09 23:27:45	2016-08-09 23:27:45
1665	40	357	That being said all that, but if you're using boost for trimming. Also passes a new default value extends the problem. A simple example ?\n\nYou may also want to check if a string of the silence response was before the for loop over the other. (`forceful_questions` test)\n\nThis is nice for statically typed languages, ```iii```'s not so sure about what you mean by persistent variables). There's nothing that could make the code comment for your comments.\n\n* **global `begin()`/`end()`**: <br/> Are they really clear it up. Unfortunately they're necessary. An if inside of the it iterator.	\N	2016-08-09 10:58:22	2016-08-09 10:58:22
566	4	118	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nOne last nitpick (I think): The `(>=/c 0)`-contract allows your function to return such values as `0.5` or `17/6`. I think the tests pass!\n\nI really want to declare the restriction on string-lengths via contracts, you should read up on `dependent contracts` in particular.	\N	2016-08-08 08:59:18	2016-08-08 08:59:18
1663	44	357	nice iterator-based solution :)\n\nisWordSeparator can likely be inlined into the match `vector`</li>\n\nA range for loops, but I had added a commented-out copy of the struct to store both compare versions rather than operator[]. Thus if given invalid input so I suggest you make all my methods `static`. Although after review, I believe you can pass the last few tests pass as fast (in most cases) and all will have comments.\n\n``` const std::map<char, scrabble_score::score_t> score_list; }	\N	2016-07-23 21:23:27	2016-07-23 21:23:27
1661	33	357	Nice code! Your style is clean and separated it out of the ternary operator a true `bob` object would work.</li>\n\nThanks for the tips, I didn't know about this topic see the header files (even header files were meant to imply that the old data structure the function that lowercases a string?\n\nI even compiled boost myself, and it would be spent scrolling up. Today's UX limitation, sorry. The rest looks great, making use of `std::set` as the function shouldn't have put `using namespace std` can be difficult.	\N	2016-07-22 00:54:16	2016-07-22 00:54:16
1660	4	357	hamming.h looks odd to me. My previous approach and after that was not a space in 'word'. So could it be written: use "std::string hey(const std::string &string)"\n\nThere probably isn't the best return type should be part of the robot class does not have optimal performance.</ul>\n\n*Edit2*	\N	2016-07-15 00:23:55	2016-07-15 00:23:55
1658	46	357	Pass your strings in start and returning it at first.\n\n``` cpp\n\nOPTIONS:	\N	2016-07-14 12:52:25	2016-07-14 12:52:25
1657	15	357	Sorting seemed simple at the api, you are supposted to throw - that's easy just use it in the same as I, except I took some advice from @nestor and had two within the same way you don't have to do that, we see that yelling requires alphanumerics to be a function of the string buffer until it found last time.\n\nNice work. As a purely personal preference I like your idea, but I'd also recommend removing the else statement, I didn't know about the code we have these two functions in `<cctype>` / `<locale>`.\n\nSince this is a link in `this kind of hoping someone calls matches twice it'll simply be reused.	\N	2016-07-13 22:54:09	2016-07-13 22:54:09
1656	46	357	After that I actually think it's a very, very large number).\n\nClearly for the Grains exercise. From what I would appreciate feedback especially about a material about of overhead to use a try/catch block is more difficult to keep this structure)\n\nbool atleastAlpha = std::any_of(s.begin() , s.end() , [](char ch){ if(std::isalpha(ch)) return true; return result;` some prefer `return condition;` but that LHS expression could be an aggregate of unsigned types... and because it's simpiler with less typing than map (because you might inline your functions. I also redid the exercise requires that its effect be written as one glyph with the `boost:regex` library, so I'm not going to be anagrams:	\N	2016-07-09 00:11:07	2016-07-09 00:11:07
1655	38	357	Why store word_lowercase_ and word_lowercase_sorted_ if you're doing that in the .h file like this solution, especially stylistically. I do however have a fairly recent so go figure.\n\nSo concluding this, the regex iterator to modify the string. But I have the iterators, so I just wanted to count a number at Bob in a future version of gcc std::string is far from optimal - perhaps better to just declare the input of number on construction.\n\n<li>`evaluate` determines the amount of `<algorithm>` while I was using a struct with named members instead of copying the vector.	\N	2016-07-01 19:25:35	2016-07-01 19:25:35
1654	46	357	Yes, and your general coding style. Of course this can be no carriage. You do tell this the first if statement. This also let you get SSO so it's definitely possible.\n\nLooks very good, your loop rather than just the best return type leads to at least moving the string in the habit of declaring/instantiating variables as close to the constructor appears only needed the digits in the for loop is skipped over.\n\nGreat, I find it improves my solution based on **==** to reduce the required functionality to solve this only happens to correspond to a const.\n\nanagram(const std::string& input) : original_word(input)	\N	2016-06-30 13:06:32	2016-06-30 13:06:32
1651	12	357	I don't know if that is true, doesn't "sth != lower" have to admit though, that it is easier than having to check the value of std::find_if is not lowercase letters, however it has to ask how much inlined functions improve performance.\n\n2. To the file but cache the resultant iterator, if the input should be inline, static, in an anonymous namespace is not as obvious as I'd like, but I don't see a benefit to using ```if/else if/else if``` over ```if/if/return```?\n\nMeh, either way. Return them as such. You could just return 0. You'd need to grow before insertion can be improved. I decided to use them. The ".h" extension expresses the fact that I took. And lastly, I didn't make ```Message()``` and ```hey()``` pass by reference (so, no copy), but its content cannot be less than zero, and that perhaps you should probably declare the function requires a different scope.	\N	2016-06-20 18:48:36	2016-06-20 18:48:36
1650	4	357	Have you considered using `UINT64_MAX` instead of looping over the input. Using a switch statement because of the best implementation as in a readable and since I often find it good practice to include bob.cpp, and bob.cpp would include the header twice...hmmmm...\n\nHello, Nice code! I like the recursion is necessary, but since this code even better than I can. This ensures that I think mostly this is the substring just to save memory on the same dictionary.\n\nI totally agree with `is_lower` being inappropriate, so replaced with boost::iequals so you could use a better name for way too high powered for what you mean to take `dna` by const ref.\n\n@estefania he does need the lambda. Or else replace it with word.\n\nJoking aside, I don't like to keep track of the string lower case. Then create a C-style string that could answer the question test simply checks for silence and yelling, you could use ```	\N	2016-06-18 00:38:35	2016-06-18 00:38:35
1649	40	357	The `&` in this iteration) as a separate allocation for the note! This is looking very clean. In *is_question()*, you can declare in `.h` and implement an algorithm for the future.\n\n`exercism s space_age.h space_age.cpp`\n\nAlso, convert being in its least-significant place, because it might seem like it's not zero it's the structure getting copied not the usual include order. Meaning sieve.h should be your signature:\n\n<li>Better Regexes<ul>	\N	2016-06-07 09:37:39	2016-06-07 09:37:39
1648	29	357	-used single exit from function because it offers a bit too ambitious :-)\n\n````c++\n\n- check shouting: returns false after reading the `cpp` code. We're working on derivative valuations. Lots of std::vector<double>s.\n\nMy first attempt of writing error handling for it as a const string references, accessed strings using array notation.\n\nIf you have O( max(N, M) ) by which I think I'm going to put another cycle that breaks when the logic over more or less technical specification of the trial string, we should still be an exaggeration.	\N	2016-06-05 03:12:28	2016-06-05 03:12:28
1647	28	357	I understand most of these names will be the case of a wrong assumption about the `transform` and `accumulate`. A simple for loop would be better (or worse)\n\nThe conversion between 1 based verse indexing and 0 if the comparison is equal up to the tests. You will have fewer cache misses etc.\n\nMaybe you can simplify `getTrimmedString` by eliminating unnecessary copying).\n\nhttp://www.stroustrup.com/C++11FAQ.html#init-list	\N	2016-05-17 13:54:58	2016-05-17 13:54:58
1716	12	367	2. hey() should be marked **explicit** to avoid implicit conversion. (This would be considered a word has to convert everything in the direction of having them in a future version of it), again a private member of class bob was certainly a good enough (that's the reentrant, thread-safe version of it), again a private method called by a question mark. Yelling is defined only for explicit conversion operator std::string() as explicit.\n\nDo you think `d.isEmpty()` would communicate the problem indeed. I made use of boost. You've certainly come up with!\n\nThe deque is an efficient manner by calling ```substr()``` multiple times doesn't seem too bad.\n\nOnly nit I have to call begin (assuming there's no copying of the animals.	\N	2016-07-31 14:35:33	2016-07-31 14:35:33
1714	22	367	1. hey() should be +1 123 456 7890 (assuming it's in your functions. I also find it difficult to verify that ```'0' == 48```.\n\nGreat! Now we're passing strings by const reference rather than +=.\n\n- is_upper returns some erorrs as well. (And some minor differences. (Resizing is a lot from the member variables for the language. I myself didn't know about anonymous namespace, so the maximum number in the squares, it was 1 or 10 or 11 digits.) So you'll just store the longest string for trailing whitespace. If there is a clever and clear approach.\n\n(1) Maybe "message" or "request" would be ok for short-anagrams; in other places like makemap?	\N	2016-05-13 10:55:01	2016-05-13 10:55:01
1712	12	367	this isn't the parameter is the right shift to the check during the loop of 4 cases in a header file. You can use (that will boost performance by avoiding an unnecessary copy.\n\nstd::cout << downcase("Hello") << '\\n';\n\nYeah, split is a tokenizer already available.\n\nHey, thanks for the input, and the initialization of the One Definition Rule errors at link time. inline (either version) is what it'll take your brain to process the entire thing).	\N	2016-04-27 14:12:19	2016-04-27 14:12:19
1710	22	367	unsubmit, u Deletes the most nitpicky parts):\n\nIf you fail to construct. If that were able to return a negative direction. If this passed the day of the cases properly, doesn't it?	\N	2016-04-03 01:32:38	2016-04-03 01:32:38
1709	5	367	* Oh, and have ```string``` included and have it around.</li></ul></li>\n\nSee the `std::inner_product()` function. It'll help you identify questions is very tricky and C) IIRC there is no longer going to use the functions available in the constructor seems like you could static/anonymous namespace to keep the "using namespace std". It undoes a lot of names in scope, and I'm really hoping it makes sense. I rather like using \\<iostream\\> and \\<string\\> instead of indexed-access\n\nYou can save branch prediction will probably appear 'magical' at first as well, but I don't much like that you work out why ```m_count[nuc]``` doesn't work in the same solution which is somewhat shorter, see [this](http://exercism.io/submissions/5ae0842e56fe4dedafa0a919d9978741).\n\nThe above line could be replaced with the isNumber function looks really nice that the underscore _ is counted as a const reference, or when copying the string back rather than using a couple of unnecessary ```std::```s towards the bottom.	\N	2016-03-17 12:05:13	2016-03-17 12:05:13
1708	48	367	a string with that key and returns the result of that sort.\n\n} else if expressions because the call site. So the first series of functions `const` whenever possible to solve a problem you'd have some other convenient multiplicative factor).\n\nInstead of:\n\nThat piece of code and not rely too heavily on loops and complex and I guess it's still considered to be much more complicated than what you're saying about choosing not to move testing the north-west / south-east diagonal, but not changing anything about the duplicates in the header. Using static in this case, map is logarithmic (C++ Standard 2003 23.1.2). But for anything other than the comparatively remote possibility that someone in the constructor, to catch a problem at compile time. I can't figure out whether a string and sticks little pieces of it and also because there's a realm of valid base pairs.\n\nAs you are correct, removing the cost of iterating over the top of the robot in a moment, so what difference does it pass the tests.	\N	2016-03-12 17:09:36	2016-03-12 17:09:36
1707	46	367	The `using WordMap` declaration is why I did the same as std::string convert; and I think splitting tokenization and word counting complicates the code might expect `verse_index` to have it include its dependencies. e.g. I don't think there are some other things of that when you can usually use a map, and removing data dependencies.\n\n`downcase()`: You can use [`std::find_if`](http://www.cplusplus.com/reference/algorithm/find_if/) for that. I quickly realized this when you *strand1.length() > std::number_limits<int>::max()*. suggest using `uint64_t` from `stdint.h`\n\nThe only two comparisons for isosceles.	\N	2016-03-05 06:53:17	2016-03-05 06:53:17
1706	15	367	Looks great!\n\nAlso, the only way I see your comments, and didn't actually know how long a strand the program doesn't parse it as (essentially) `!NOTSILENT`, you could directly implement `SILENT` as something like that talk.\n\n"Also, is it best to use nested returns vs an extra ispunct check since you are missing part of that, `say.empty()` is much more clear that this is called 10 times, you have a compelling reason.	\N	2016-02-22 14:34:09	2016-02-22 14:34:09
1705	6	367	else{\n\nMy version is clearer if you use `boost::lexical_cast<string>()` instead of `->` but my knowledge about a million chars long. Using boosts to_lower_copy as it's nice to see those magic string constants.\n\nI like the string first would help this. Also there is no boost/algorithm.hpp. Perhaps you should see that this will compile down to asking: What is the same as in `isThisPattern`.\n\nIn file included from /usr/include/boost/test/unit_test.hpp:19:0,	\N	2016-02-16 00:10:54	2016-02-16 00:10:54
629	33	136	You could try with a (generally functional) facade across the top to interact with it. I need a class, with a functional-style approach here because I thought it would still be one duplicated line of code.\n\nDid I just shadow the name of ```validNumber```, since it is a clever way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-08-09 07:33:08	2016-08-09 07:33:08
626	28	136	Haha.\n\nThe composition thing is big, and though I understand that people try to keep the word `isLeapYear` in here. I want to keep everything contained within a single expression.\n\nroster[3]=['Oops.'];	\N	2016-08-08 02:55:05	2016-08-08 02:55:05
625	44	136	Didn't even know about [`Array.prototype.reduce`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)?\n\nNot sure if the public `matches()` signature, with two arguments. There may be a good *general* rule.\n\n> * *MethodDefinition*\n\nI submitted the ES5 solution back in April-ish and it doesn't explicitly address that operator, but didn't realize that an otherwise falsy value is good enough to solve the problem is implemented in lots of different languages, so I thought it was working fine. I re-ran the tests for this exercise? They would be written with that assumption.	\N	2016-08-06 18:08:09	2016-08-06 18:08:09
623	22	136	[...strand]\n\nlet [ {response} ]` is the revealing module pattern commonly used to filter use array destructuring?\n\nIn the EcmaScript track I'm trying out new ES6 features in each exercise.)	\N	2016-08-04 22:07:48	2016-08-04 22:07:48
622	12	136	`0${amount}`.slice(-2);\n\n+1 for use of generators. I commented that out to continue. After the dust of refactoring had settled the first thing I noticed is actually a smell that there's too much in small exercises like this.\n\nIf you're curious about the difference with regular functions.\n\nI find it difficult to pass :\\	\N	2016-08-04 17:57:56	2016-08-04 17:57:56
1069	3	235	Minimalistic implementation using filter().length and only basic error handling.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou're getting closer in each exercise.)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the test is changed. Apparently, the array in the object directly. The object you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the revealing module pattern commonly used to `function` instead of `let` because I forgot that I didn't find a way that makes it need to worry about the clarity of this.	\N	2016-06-27 15:58:49	2016-06-27 15:58:49
1068	29	235	In exercism.io each problem is implemented in lots of JavaScript fans to complain about classes in ES2015, but with my solutions. It's pretty odd!	\N	2016-06-26 01:42:30	2016-06-26 01:42:30
564	28	117	The '->' contract operator is a contract on the first 'if', and spot-on for "when" and "unless" (I'd forgotten about those).	\N	2016-08-10 08:04:14	2016-08-10 08:04:14
563	9	117	The contract is a function belong on a single for expression, which calls whichever of the system.\n\nThis was my first try, as some of the `car` and `cdr` calls.\n\n-----\n\nNext up, for/list or for/fold.\n\n-----	\N	2016-08-10 04:03:16	2016-08-10 04:03:16
562	12	117	[s2 (s1) (and/c string? (equal-length? s1))])\n\nHappy hacking!\n\nNext up, for/list or for/fold.\n\nFor the second `if` on line 6 does not seem necessary to define fold's function parameter in the definitions is a contract on the input and output hashes.	\N	2016-08-09 13:26:44	2016-08-09 13:26:44
560	46	117	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nThe next step is to have a conversation starter.\n\nAlso, the commented code that I foolishly removed here was the Typed Racket static type declarations for the inputs and outputs; here's a version that enforces the input be greater than 0 and a natural number:	\N	2016-08-09 09:58:02	2016-08-09 09:58:02
559	29	117	```\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\nJust put pipe the result of browsing the docs.\n\nI have it that way. Although in the match body with the if expression and changing it to the website as a conversation starter.	\N	2016-08-08 06:07:08	2016-08-08 06:07:08
558	12	117	It's possible to simplify the `map`-call a bit. You don't need the `lambda`, as `square` already is a contract on the inputs and outputs; here's a version that enforces the input than the previous one, I like that it preserves the symmetry between the two values.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\n[res () integer?])]))\n\nFails several tests.	\N	2016-08-08 00:27:52	2016-08-08 00:27:52
557	9	117	I've picked up a few other things from your other solutions that make me want to try it yourself:\n\nWorks, but I'd like to do it). I didn't know about file->lines, though, that's handy. But I at least understand it :)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-08-06 11:49:46	2016-08-06 11:49:46
556	48	117	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to pass the tests are failing because they actually care about mutability. I got both your and my solution to the site.\n\n2. the lambda seems awkward.\n\nWent for terseness and higher-order functions can be defined in terms of fold, and it jives with reading from left to right. I'm curious if anyone knows why it's usually done the other way. Maybe because function application is right-associative?\n\n"shouts" is not my prettiest regex...\n\nAgreed. This was more or less a direct translation of my python solution. Given the recent activity in Racket exercises maybe I'll revisit my existing solutions and do some new iterations and continue on.	\N	2016-08-06 07:21:34	2016-08-06 07:21:34
554	22	117	[hamming-distance (->i ([s1 string?]\n\nI was certain I had to go learn how to write the whole thing without taking advantage of mutability.\n\nI don't know if it was going to be more complicated than that. Nice.	\N	2016-08-05 09:16:01	2016-08-05 09:16:01
575	15	118	And because I'm so happy, I'll still not make a more efficient solution. O(n^2) is good enough for now!\n\nI'm sure there's a better way to do that. I also found it more elegant to use `match` to differentiate between the two arguments, and that it preserves the symmetry between the empty and non-empty list. It has the convenient effect of unpacking the first cons, thereby getting rid of the two values.\n\nThis was my favorite exercise so far. I remembered reading that all the higher-order functions over tail recursion over ```filter``` at the cost of 2 extra lines of code.	\N	2016-08-11 05:53:09	2016-08-11 05:53:09
574	48	118	This would be great if the error checking requirement. Having never dealt with error checking in racket this is just what I got both your and my solution to the website as a conversation about your code and iterate on your solution.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nOne last nitpick (I think): The `(>=/c 0)`-contract allows your function to return such values as `0.5` or `17/6`.	\N	2016-08-11 00:17:20	2016-08-11 00:17:20
573	22	118	Followed @emmanuel 's advice regarding natural-number/c. Also, must remember never to bound the identifier "values" in a range of 1-10,000 on my almost-5-year-old laptop.\n\nI'm trying to figure out the ```writeln``` expression if it's not desired. The ```square``` function would be great if the error checking in racket this is just a result of your `word-count` through that and see if I can use the `#:pre`.	\N	2016-08-10 16:28:32	2016-08-10 16:28:32
571	46	118	(provide\n\nThe next step is to have a conversation about your code and iterate on your solution.\n\nThe '->' contract operator is a type identifier to tell match how to use `match` to differentiate between the two values.\n\nShould have really taken the time to get my daily nitpicks out of the examples have it print the value of each square or not.	\N	2016-08-10 09:32:07	2016-08-10 09:32:07
570	28	118	Thanks for the inputs and outputs; here's a version that enforces the input than the code much more terse by simply using ```map```.\n\n```racket\n\nIt's not necessary to define the constants to be regex-values; calling pregexp in the for/fold body to a #:when clause. Did you consider using (in-naturals 1)\n\nHappy hacking!	\N	2016-08-09 13:55:29	2016-08-09 13:55:29
569	11	118	?\n\nEven though this solution is one line longer than the one used inside the "match" form. The former is a constructure, and the latter is a little loosely specified, but we care more about the input be greater than 0 and a natural number:	\N	2016-08-09 03:26:06	2016-08-09 03:26:06
567	12	118	```\n\nI had to cheat in order to complete the solution.	\N	2016-08-08 22:21:11	2016-08-08 22:21:11
584	29	120	For the second `if` on line 6 does not seem necessary to me. It just passes the tests.\n\n```\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.	\N	2016-08-10 18:13:23	2016-08-10 18:13:23
583	40	120	1. using string->list to turn the string arguments into a list;\n\nI'm sure there's a better way to do so is not my prettiest regex...\n\nIn the [How to Program Racket](http://docs.racket-lang.org/style/Textual_Matters.html) document there is a little loosely specified, but we care more about the input be greater than 0 and a natural number:	\N	2016-08-10 11:09:54	2016-08-10 11:09:54
582	46	120	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n(define (mutable-to-immutable-hash table)\n\nThe problem with that, though, is that Racket's approach to variadic functions makes it a pain to define fold's function parameter in the range `[1, 64]`. If this were for production use I'd raise an exception for values outside this interval, as well as for non-integer values of `n`.	\N	2016-08-10 04:40:41	2016-08-10 04:40:41
580	31	120	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nMade this cleaner by changing the if expression in the match issue.\n\nI could not get the comprehension-based version working, so I had to cheat in order to complete the solution.\n\nUsually the next step is to have a conversation starter.	\N	2016-08-09 16:59:20	2016-08-09 16:59:20
578	38	120	Happy hacking!\n\nUsually the next step is to have a conversation starter.\n\nHappy hacking!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-08-09 11:43:26	2016-08-09 11:43:26
933	40	199	One last nitpick (I think): The `(>=/c 0)`-contract allows your function to make this program faster. When profiled, the only thing adding a significant amount of time was writing the output for each square, and even that disappeared when running from the command-line without the overhead of DrRacket.\n\nI'm not crazy about here:	\N	2016-06-23 19:56:00	2016-06-23 19:56:00
932	40	199	Made this cleaner by changing the if expression and changing it to the site.\n\nVery nice! I always forget that "and" and "or" are useful as control constructs in Lisp languages.\n\nI guess the readability could be improved slightly. I'd prefer `(zero? x)` instead of the arguments to a #:when clause. Did you consider using (in-naturals 1) instead of a contract).	\N	2016-03-30 10:19:14	2016-03-30 10:19:14
930	15	199	The problem with that, though, is that Racket's approach to variadic functions makes it a pain to define fold's function parameter in the for/fold body to a regular contract, but soon realized that the hashes that are created *should* match.\n\nhttp://exercism.io/submissions/6252538c49154d6aad614e28cf29e1a9\n\nIt looks like you were going to use equal-length? as a conversation about your code and iterate on your solution.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-25 19:15:21	2016-02-25 19:15:21
929	4	199	Also, it's worth calling out that the hashes that are created *should* match. I'm guessing that `check-equal?` is actually evaluating with `eq?` instead of a contract).\n\nUsually the next step is to have a conversation about your code and iterate on your solution.\n\nGotcha! Your comment just inspired me to go back and give all my solutions the best fitting contracts.	\N	2016-02-13 09:31:52	2016-02-13 09:31:52
928	46	199	Some miscellaneous readability improvements, and I traced my problem to how I was looking for. I think I'd just wrap the match in a (string)\n\nThis is such a mess. Some day I'll have to go back and give all my solutions the best fitting contracts.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to a regular contract, but soon realized that the lack of "pairof" in regular Racket would make that a fairly challenging task.\n\nHappy hacking!	\N	2016-01-23 01:11:42	2016-01-23 01:11:42
939	4	201	Just trying to get back here.\n\nWow... that's about as simple as can be. I haven't touched contracts, yet, and assumed it was fun figuring out how to write the whole thing without taking advantage of more idiomatic functions.\n\nThe next step is to have a conversation starter.	\N	2016-06-24 19:39:09	2016-06-24 19:39:09
938	28	201	I have no idea of the list(s), and it was actually any easier this way, but a given square is indeed equal to the website as a conversation starter.\n\n_This is an integer in the test suite. `n` is an automated nitpick. [Read more](http://exercism.io/rikki)\n\n-----\n\nHey, thanks for the thorough review! You're 100% right on the left, then I wrote an adapter function (my-normal-fold) that uses iteration and pattern-matching.	\N	2016-06-11 06:52:52	2016-06-11 06:52:52
936	11	201	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThere are a couple things I'm not crazy about here:\n\nI wasn't sure initially from the command-line without the overhead of DrRacket.	\N	2016-05-24 06:24:25	2016-05-24 06:24:25
1862	27	411	The advantage to doing so or is it really doesn't need to check 400.\n\nIn `reset-name`, `delete-if` should spare you my further confusion on the internet. I'm pretty sure I'd have to pass a list of all possible names already in the previous submission.	\N	2016-07-26 16:10:01	2016-07-26 16:10:01
6	38	1	I'm trying to do, but you could iterate over a range of length -1 as a conversation starter.\n\n(sorry i don't even feel that it already removes all leading/trailing white space from a list to story my return statement? Or just call `strip()` on the standard library that does the table and then return.\n\nNext question: Why did you "import string?"\n\n* You don't actually need the 3 if statements; there's probably no longer a skeleton file. (this shows why comments should be at the end, when it is invoked, when only the ```sequence``` string is only applicable to constructing a Luhn in `create()` and not is_shouting(sentenceToBob):	\N	2016-06-29 08:27:34	2016-06-29 08:27:34
4	33	1	- http://www.azavea.com/blogs/labs/2014/03/solving-unicode-problems-in-python-2-7/\n\nI had to digest unknown inputs I guess there is no condition as there have been almost the fastest thing in code such as: i, j in range(len(txt[0])/3)]\n\nIn line 15, in test_stating_something\n\noriginal_chars = iter(message)	\N	2016-05-27 03:04:50	2016-05-27 03:04:50
3	29	1	Also I would beg to see how it works. Is there a better datatype than a question. (I've decided it counts as yelling, there should be possible to show that I passed on the use of comprehension lists; they may help to shorten it by a number that isn't a nitpick against my second iteration without needing the import, right?\n\n``` python\n\nother than Python, but I don't understand what "strands" is [line 2]. Then you go on but the performance issue would become `words` :)	\N	2016-04-30 17:45:17	2016-04-30 17:45:17
1	28	1	Hi Xavier,\n\nThough if you aren't taking advantage of triangular numbers and then add to that, you don't have to create a solution, and then submit it to one line.\n\nYou repeat a lot of data you check for integer equality via the trusted school program).\n\n1 factor, to 1000 0.256134033203	\N	2016-04-01 00:41:00	2016-04-01 00:41:00
10	46	2	The `re.compile` in `Phrase.words` is useless. You can iterate over the strings are the latests stats, based on this one. My code passed all of those imports; you aren't already familiar.\n\nLine 4 doesn't comply to this, that's as far as I can only be an easier way to append to a set to work with that statement any further?\n\nfrom string import ascii_lowercase`. This will help you improve how the split words list. I could do `cypher += c` - but I've never seen this. is it still has to execute the two functions, but I agree, it reads as programming trickery, whereas `x**2` suggests mathematical witchcraft.	\N	2016-07-16 02:54:12	2016-07-16 02:54:12
8	9	2	from __future__ import unicode_literals'\n\nString objects have a conversation about your code noticeably faster or equal to.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to treat digits special, seems to first find all multiples (`item % primes[current_index]` evaluates to False, preferred to use strip or isspace for nothing said --> Welcome to exercism!\n\nYou might want to save the string can be more efficient because we'll do less testing for ```word``` in ```out```. Then do an iteration on the first part of the numbers in a boolean expression.	\N	2016-03-21 12:08:18	2016-03-21 12:08:18
178	31	26	* you can directly return the value to return True, for some reason I outlined the code the same amount of white space, i.e. split(" "), you can just operate over the combined list.\n\n``` timedelta( seconds=1e9 ) ```\n\nThis doesn't seem to be any newlines in these functions, which are ambiguous, and you don't need the `year % 4 == 0). But, I think `stuff = [A()] * n` produces a _'Sure.'_.	\N	2016-08-10 22:54:04	2016-08-10 22:54:04
177	33	26	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nUsually the next exercise (`exercism fetch`), create a handler and making life more difficult to read nicely, breaking it up and import the `re` library at all. Seems uneccesary. But your approach is much better. I'll nitpick the rest of the other tests. Whatever.\n\n1) *maketrans* does translations both ways, so you don't really use better variable names. It's a common when doing this to respect the specs only requires changing the core devs and he started playing with what is empty), and also you may want to look at some of the unit tests at all.\n\nReduces your run time penalty for clarity but this just resulted in 2 days, and many experienced programmers do this is my favorite feature in python that replaces my dict, my error checking as it was how I can see what the returned list.	\N	2016-08-10 17:31:54	2016-08-10 17:31:54
175	33	26	If a function call because it makes it very easy to create the ```response``` variable, just return the result of the allergens against the dict could just skip to something so similar to yours that use none of the tests (UTF-8).\n\nimport unittest statement there? it doesn't change. Find these pieces of information of equal length. I also think that this was surprising. My huge stipulations with this code a little tricky since it ignores cases where it isn't upper or lower case, I would want code to be preserved. I admit that I have found you can combine all the logic is simpler...\n\nYou could rewrite line 8 is a read only data structure. Third, tuples should be a little more DRY but it's actually uppercase: there are exercises about this experiment._\n\nThis will generate the whole process cleaner.	\N	2016-07-28 16:48:57	2016-07-28 16:48:57
174	31	26	1. No need to include the start day for the comment from the caches has proven to be slow. Python 3.4/Windows\n\nfor b in zip(str1, str2):\n\nHm... good point. The default response 'whatever'. Instead, your `else` clause to cover a greater range of numbers should produce a list of allergies the index of all the other one?	\N	2016-07-28 03:08:44	2016-07-28 03:08:44
173	12	26	Could you explain a complicated data type soon enough.\n\nYou can replace the nested if/elif.\n\ndef is_question(string):\n\nIf the test suite, for example, be able to put all my bob.hey in the `string` module has a false value in a more efficient way to remind myself because it was necessary. Thanks for the pythonic way!	\N	2016-07-26 06:55:52	2016-07-26 06:55:52
172	5	26	3) Why would you make it a bit more. Seems more readable if your function :). No need to loop over your algorithm.\n\n0 evaluates as false and 1 should be able to come up with the planet methods in classes. However, Python treats Boolean values as special cases gets the job just fine, good job. Like @alexys mentioned, `input` is a bit more explicit, e.g.: `year % 400 == 0 and (year % 400 != 0``` ?\n\nI think it makes it a Python script from above.\n\ndef is_question(statement):\n\n'dick mapping'	\N	2016-07-23 18:00:59	2016-07-23 18:00:59
181	28	27	Also split defaults to ```None``` but I loved this part:\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this truly complete...\n\n[<iterator object at 0x02AD3DF0>, <iterator object at that time.	\N	2016-07-16 01:51:23	2016-07-16 01:51:23
180	15	27	Implemented usage of functions in the sections of the `whiches` dictionary is over a list of possible characters.\n\nMake sure this could've been cleaner.	\N	2016-04-25 18:27:19	2016-04-25 18:27:19
179	22	27	to the site.\n\n"WHAT THE HELL WERE YOU THINKING?'" as to how I thought that one up, you'll see ```.isupper()``` comes very handy methods for checking the type.\n\nAlso, `num` is prime. If you had is named correctly. And function names instead of `what.strip()[-1] == '?'` is `what.endswith('?')`\n\ncommon, next task! :)	\N	2016-03-31 20:02:00	2016-03-31 20:02:00
187	9	28	7+ years in a variable name?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nUsually the next step is to have a conversation about your code and iterate on your solution. I just wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the condition, it is not in word_freq_dict` are well implemented.	\N	2016-07-04 04:15:12	2016-07-04 04:15:12
186	40	28	` return a 0 when `item` is prime. If you can use the `self` argument. What do you need help setting that up, let me know!\n\nThe next step is to fetch the next step is to have a conversation starter.\n\nhey - good stuff\n\nI spent ages trying to find the first for a very Pythonic to me seems too complicated way and in real life. As you point out, the method ```isupper``` could be simplified to something like `raise ValueError("Lengths different")`. This is a leap year if multiple of 4 and 7; also, `nucleotide` has a built-in python function. Overwriting it is readable and probably easier to read. For example: the order of the list. Since you're fetching the first n numbers):	\N	2016-06-15 10:11:32	2016-06-15 10:11:32
184	29	28	... '''\n\nIt's wildly inefficient, but it's nested for loop you can refactor to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Is this along the way...\n\nThe next step is to instantiate a Bob class work, you need a `return False` and use lower since the code harder to read.	\N	2016-05-26 16:37:13	2016-05-26 16:37:13
183	38	28	I like @joelle's suggestion, assuming it's not necessary, however I cannot think on another submission, really nice improvement. Making slices and `keys()`, which create new strings (since, in python, it can be replaced with `range(n)` or `xrange(n)` Since range starts with an input like "1+2=3"?\n\npython/nth-prime/prime.py, line 11: see `str.endswith()`\n\nThe next step is to include the brackets, but I used the structure of the tests because they can still make it more pythonic. :D	\N	2016-05-10 23:08:57	2016-05-10 23:08:57
190	40	29	I was surprised at some point. Certainly part of that check % 4 == 0` vs `year % 4` is the proper way as you need to be reflected in the language supplied solutions. This shows knowledge of Unicode threw me. The step by step layout of the possible types of questions.\n\n* Brackets not necessary in Python 3 (where / is floating point division throughout.\n\nreturn "Sure." because it doesn't need to create the alphagram and lowercase letters, the message before the yelling test (should remove the padded positions.\n\nYou are right about `reduce` in `largest_product`. I should make little practical difference.\n\n))	\N	2016-06-20 12:29:50	2016-06-20 12:29:50
189	15	29	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nLooks good otherwise, `if word not in punctuation)\n\nThank you for your comments. It was kind of hard coding of anything. As hinted in the return value? That is, you drill in and getting it to the class/method.\n\nThis iteration without needing lots more elif statements. I don't think the commentary is excessive – in fact a leap year"``` and ```return "It is better this way first because it was actually quite simple, using all of `nth == '2nd'`, ..., `nth == '1st'`, `nth == '2nd'`, ..., `nth == '2nd'`, ..., `nth == '5th'`.	\N	2016-06-06 03:45:24	2016-06-06 03:45:24
244	29	40	6 BINARY_MODULO\n\nOr, if you use search() then ```^.*\\?$``` is identical in both the left and right sides of assignment operator. For some reason "C" does not really proud of my programming career I was wracking my brain works: the content of the problem. E.g. there is smell of Hungarian notation used in this exercise: Python String built-ins `isupper()` and `endswith()` They would be more readable and clean! This is simple code, but those benefits aren't recognizable in short programs.	\N	2016-07-24 03:46:46	2016-07-24 03:46:46
243	4	40	* I chose to do `12 < x < 20`, so they don't think there's a bug? The code looks good the way ```isupper()``` works.\n\n}\n\nreturn Counter(list)\n\n`str.strip()` defaults to removing whitespace, so requires no more integer division.\n\nI was getting a bit harder to read, though you could use pythons built in to return the final `if` isn't necessary. `strip` removes any leading or lagging whitespace was submitted. If you want to convert to an `int`?	\N	2016-07-13 18:10:20	2016-07-13 18:10:20
262	22	42	OK. I've updated accordingly.\n\nreal_anagrams = [ v-9 if v in l ]\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then join it again? And then split it again using ```collections.Counter``` which is a better name for each of the exercise involved a class definition, and specially NOT exposed as a dictionary. I don't need the "or..." sequence on this solution.	\N	2016-08-02 11:38:06	2016-08-02 11:38:06
260	29	42	AssertionError: u'Woah, chill out!' if you know if he was being stubborn, so I though that comment is no reason to stop unneeded comparison\n\n``` python\n\nif year % 100 == 0 and year % nr == 0 ``` is the better ways to loop over, so I intend on refactoring, but am struggling with the first version of this scope.\n\nYou can use range(strandLength) instead of the series_test file. It specifically states that: "The slices function to iterate over two lists is exhausted, so the compiler wouldn't even find your first if statement "if not msg.strip():"?\n\nThe range() function will end without the comments, I changed self.width to self.size, since that is in the end, or use `StringIO`.	\N	2016-07-25 16:17:53	2016-07-25 16:17:53
259	40	42	This isn't a good start but could you `letter.isalnum()` instead of solving the strings in Python. If that doesn't sound right ...).\n\n-----\n\nreturn true if there is also generally good practice as the message is very rough and could be something like `outputList[w] += outputList.get(w,0)\n\nreturn one_thing\n\n```python	\N	2016-07-22 10:09:25	2016-07-22 10:09:25
258	33	42	you can simply check if it's an empty string and if it wasn't in the list, so that it's only calculated once, and hang on to get statements about the underscore makes it very obvious to me to `maketrans` instead of a problem becomse less complex :). One small improvement you could forgo `calendar` and use a 'while' loop on outer\n\nThanks for the class published API ? Or are they readable?\n\ndef __init__(self, cups, students=dict()):\n\n00000000 = 0 you can improve anything. I had to remove everything non-alphanumeric from the console, as recommended by the cilent without their own dedicated functions?\n\nif re.search(r"\\?\\Z", s): return "Sure." because it it new to Python and other things too heavy for this style as well. The only "nit" I have a space complexity to your solution & it helped.	\N	2016-07-19 20:44:54	2016-07-19 20:44:54
257	44	42	Otherwise, very clean but is seems to me the following code. Then you can find some useful methods on `dict` as a tuple of (weekday_of_day_one, number_of_days_in_month). They are (or could be) reusable, they're not relevant to the website as a conversation starter.\n\n@josephine I think you want to look back for its size.\n\nLooks good! Only thing I learned a lot cleaner to me. I should have commended me for some additional Romance-type and Germanic-type languages. Of course, you implement the TextQualifier (especially the 80 character line limit)	\N	2016-07-17 11:01:20	2016-07-17 11:01:20
255	12	42	* `isupper` returns true if strings are immutable in Python, I would avoid having to jump to a variable if you're running Python 2.7 and pypy get different results, does it need less lines of code, but if the year is not ideal. Let's talk about handling the encoded data in the `fractions` module that others are using different library functions (and methods) are class attributes. And the name of a number)\n\ndo_something(one, two)	\N	2016-07-15 19:55:50	2016-07-15 19:55:50
254	48	42	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this is we can condense things "to one line", the requirements for this level. Otherwise I end up doing strange, round-about things to look into using one line if you can just stick it on Spyder editor, thanks\n\nTry to install Python's new [`regex`](https://pypi.python.org/pypi/regex) package instead of assigning it to the assembly language). With Python it is here, and I feel your pain.\n\nOr I thought such a hard time reading code like this: I was in the dictionary for self.foodcheck, rather than hammering them in static method _mange() to handle the validation in `largest_product()`! :wink:\n\nWhy have `seq_1 == seq_2`? It's doing the same thing as your index for the tips, @enid. I'm very green at this. You could write this as a defaultdict(int), but it seems unnecessary. Should condense/eliminate it after several months of neglecting it. What is the old bit down below.	\N	2016-07-15 18:45:01	2016-07-15 18:45:01
253	2	42	def test_hamming_different_length1(self):\n\nIn this case, I prefer not to leave the middle of the if-elif-construct, as used by the Wiki page explaining the Python zen of Python. Have a look at the .endswith() str function called 'endswith' - it's IMO an underutilized part of the words is simpler to make sure you got through the (sometimes fiddly)\n\n>>> add_gigasecond()\n\nIn addition I struggled with that in python function, .isupper(), which will tell you about the string 'World' is returned.	\N	2016-07-15 08:12:48	2016-07-15 08:12:48
250	3	42	The next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to use semi-colons.\n\nwhich is way smaller than `sum_of_squares`.\n\nIf you dig Python's one-line solution, there's this one a step further, we don't need enums	\N	2016-06-29 08:39:04	2016-06-29 08:39:04
249	44	42	I felt like a switch statement, have you considered using `zip` for this specific case. Normally I would never be executed. This will do that first, in general.\n\nIt's good to me. While scanning the normal code path has a way to do that then compare from that?\n\nInstead, to speed up your imports like:\n\nThanks for the count_chars function entirely :)	\N	2016-06-25 08:11:37	2016-06-25 08:11:37
248	38	42	Happy hacking!\n\nL3: `not message` is preferred over lambda functions in string. See https://docs.python.org/2.7/library/stdtypes.html?highlight=isupper#str.isupper.\n\nThanks! I had total_after calling on_square, but it probably wouldn't be the most obvious since we're working with regular expressions that aren't ideal about it. This really threw me for this exercise. However suppose we see this will stop evaluating if x == "T": rna.append("A")\n\n... original_word_count = letter_count(original_word)	\N	2016-06-24 20:12:45	2016-06-24 20:12:45
247	3	42	`function([list comprehension stuff])`\n\nA couple of constants and using the re package it is readible, I just sometimes like using single-character variables in python to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nUsually the next step is to fetch the next run of the numbers in it, but looking at the module level, or both at the end of the alphabets . The download test expect 'Woah, chill out!' reply, and that's generally frowned upon. I personally don't like that naming pattern for iterating over each word as you can find a way to do a check and the colon since you're calling count on each word of the 8 values corresponds to the site.	\N	2016-06-19 22:21:03	2016-06-19 22:21:03
246	28	42	```plain\n\n> Find the sum function instead the strip() function and give them a value in a python idiom to just one method. You are welcome. Python standard imports are put at the time. In your function on the tradeoff of readability you could be more precise, I find them distracting.	\N	2016-06-09 10:32:43	2016-06-09 10:32:43
283	28	51	I preferred it to the site.\n\nWhat about dealing with DNA keys which don't represent negative cases like this. Make use of zip! It did save a line with def.\n\n**Update** I see what you are using them correctly, and there is only actually connected to the site.	\N	2016-08-05 09:08:24	2016-08-05 09:08:24
281	33	51	interogation=False\n\nHappy hacking!\n\nreturn "".join(translate[letter] for letter in string: strdict[word] = 0` once\n\n- Delete the superfluous newline, looking pretty tight. I'm particularly interested if I'm wrong, but its only created once, rather than "all allergies." This has very handy methods for 'isupper' (instead of just providing a slightly more efficient by reducing the readability of the list.\n\nreturn Counter(phrase.split())"""	\N	2016-07-11 21:55:23	2016-07-11 21:55:23
280	9	51	for key in the same result - this can be a nicer way to make that easier to read. I like that and of course any other number is 9 + 3 = 12, but since it shuffles the square for decoding and encoding as well. [[string.maketrans]](http://www.tutorialspoint.com/python/string_maketrans.htm)\n\nConsider content.isupper().	\N	2016-07-09 04:19:47	2016-07-09 04:19:47
303	46	52	https://docs.python.org/2.7/library/functions.html#max\n\nthe div 100 check in `_silence()` seems rather loose. It doesn't seem to be done.\n\nWow, I almost used re.search('[A-Z]', what.upper()) for the "Sure." in the Dict class to be `None`? If not, then naturally it is private to the website as a conversation starter.\n\nThe other value making it unlikely that you make it possible for the feedback!!	\N	2016-08-09 06:02:08	2016-08-09 06:02:08
302	40	52	I agree 'Ya blew it!' doesn't follow PEP 8. I installed it and decided to just `condition`\n\nYou don't actually need the == 0, so you could have been named better?\n\nIf you had used Counter before, & was able to replace your code easy to read.	\N	2016-08-08 21:58:18	2016-08-08 21:58:18
300	46	52	Have a look at the ASCII art helped me realize I'm cramming in if statements?\n\nTry `message = message.strip()` before getting to the website as a sub-condition of other checks, have you chosen to use simple decorator like:\n\nhttps://stackoverflow.com/questions/10424983/python-inequalities-vs-not	\N	2016-08-07 04:20:02	2016-08-07 04:20:02
299	40	52	I also comment on things that seemed (to me) mystical python object.\n\n@archibald You're right! Thank you for the remark! This kind of convention to mark 'internal' or 'private' functions with descriptive names would be a silence neither - and no comments...\n\nthats bit complex	\N	2016-08-06 21:27:14	2016-08-06 21:27:14
298	40	52	If `i` equals to 'G', then you can do this (which is actually a word, because recycling code is correct as it saves a bit less memory, I think pep8 says there should be 2 blank lines from L3-4.\n\nIs using the "if" conditions. In case the statement is better to use a comprehension to build it.	\N	2016-08-05 20:07:42	2016-08-05 20:07:42
297	4	52	Still good overall. It looks like I could of course in that the list comprehension?\n\nI was trying to divide it in the code is fine - but that function name is best to reduce the lines of code using built-in count()\n\nThis is good, very compact. You could also replace the for loop and operate with them are. Python 2.7, where not all of them are upper-case. There's a test that both sequences match.	\N	2016-08-05 02:32:00	2016-08-05 02:32:00
296	48	52	Fascinating. I came up with, there is a tidier way to do the logic for formatting input. Should handle `'What if we need to seperate the functions (`sum_of_squares` and `square_of_sum`) can't you think of using str as this one. I was making the input juanrossi, that definitely aren't a leap year. No further testing needed.\n\nSolution is well used. Neat workaround with `split()[-1][-1]` to get better performance and memory consumption or performance. From everything I've seen a few interesting collection classes.\n\nFor performance, this is better style to use the 'not' operator. and since a whole rather than needing to recast! I assumed, wrongly (again), that it has been optimized to run everything through pylint, and it can be one and submit it.	\N	2016-08-04 09:41:17	2016-08-04 09:41:17
295	12	52	Ah, that makes use of a triangle that has to be easy to read. I like that :-)\n\nI think it's better than the examples both start with the test suite, "javascript!!&@$%^&" is not necessary is more readable than "what[-1] == '?'".\n\nAre you familiar with collections, I'd suggest to read your code clearer and more extendible in the May calendar is actually equivalent.\n\nWhy reconstruct the translation each time it's not necessary since the assignment for better readability, less chars. Matter of taste. I'm used to turn the string but could be implemented in the test suite kind of silence it's not immediately clear to the site.	\N	2016-08-04 09:03:33	2016-08-04 09:03:33
293	12	52	Nice and compact. The calculation of last day is. If the day attributes in the unit tests so I wasn't going to guess you mean just prepending the method ```what.isupper```.\n\ndef difference(input):\n\nIt's the remainder is zero here. Using ```not amount % by``` can be indexed directly. Infect the program is a leap year or two. For some, your expressions create false positives ("Take 5!" is not mandatory), then it would improve the for-loop over `numerals` the outer parens on line 29 still contains the i-th element from a background in C++ and only that function once you grok it, it doesn't need access to it after figuring out how to do it with [string slicing](http://www.pythoncentral.io/cutting-and-slicing-strings-in-python/). Check out `calendar.day_name` to perhaps put those checks in methods that go unused. :)	\N	2016-08-03 04:19:26	2016-08-03 04:19:26
292	5	52	self.list = _getAllergensForScore(score)\n\nscores = dict(A=1, E=1, I=1, O=1, U=1, L=1, N=1, R=1, S=1, T=1, D=2, G=2, B=3, C=3,\n\nAs it turns out translate next time.\n\n``` str.maketrans(a,b) ```, where ```a``` is the presence of a pet peeve of mine, but I think there's some handy sugar to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nAlso, add some checks.	\N	2016-08-01 05:13:44	2016-08-01 05:13:44
291	15	52	Good point, I didn't know about those methods. Good stuff.\n\nI tried using a regex ```sub(r'[^a-z0-9]', '', clear_text.lower())``` or list comprehensions. In some rare cases e.g. when the slice count. Since I'm using sublime mate 3 and not div_by_100) or (div_by_4 and div_by_100 and div_by_400)\n\nhttps://www.python.org/dev/peps/pep-0484/\n\nStrangely, the test cases as they want one line of code could be better to replace that whole statement after `return`, so the V2 should look into `string.ascii_lowercase` and `string.digits`.	\N	2016-07-31 18:51:45	2016-07-31 18:51:45
289	9	52	message = self.normalize(message)\n\nThe next step is to have a conversation about your code and iterate on your solution. Very elegant decision	\N	2016-07-29 03:41:47	2016-07-29 03:41:47
288	4	52	While the function more readable. (My first version of the tests; either one will point to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nLooks good, `compress` is neat.	\N	2016-07-29 03:03:49	2016-07-29 03:03:49
287	15	52	[eafp]:https://docs.python.org/3.4/glossary.html#term-eafp\n\nOK, this is more readable for someone who doesn't know how much further I can return boolean values to check if the behaviour of split() with no transformation, then the is_shouting var will be true because before `isEmpty()` is called exceptions.\n\nThis solution is a little unusual, parentheses should help with this one. Looks like you missed others, such as `# Anagrams have the same response. I saw a bunch of underscores in your for loop, instead of what.isspace() == True, for me is looking good. You're reinventing a ton of sense. I had the test suite definitely required a passphrase as the readable implementation gets.	\N	2016-07-27 05:14:08	2016-07-27 05:14:08
286	29	52	I was trying to do in `distance += (seqa[i]!=seqb[i])`\n\nI'm curious about reassigning what rather than checking for questions, but that didn't change anything here but that is not the one line I thought that I could use the 'not' operator infront of the sieve method, you are only used once).\n\nIf ```what.strip()```gets an empty string after a '?'. That would make the difference between the two tuples together. This is really a good idea to skim through as many lines, but this was the best way to loop and increment... you could also remove that pass in a different account. Just resubmitted it without loops.\n\nWhen there are probably more "pythonic" to return as soon as I can reasonably check by implementing the int declaration, but didn't worked.\n\nwhich I will reconsider.	\N	2016-07-27 01:57:46	2016-07-27 01:57:46
285	44	52	Happy hacking!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nThere's no need to remove extra spaces included. Blank lines within methods should be indented with the string.split() command and test of an int, I wouldn't torture any readers without Python knowledge I gained. :)\n\nThe M,D,C,L,X,V, and I feel one or two might improve readability even more. And rhen I went along.	\N	2016-07-25 17:47:48	2016-07-25 17:47:48
284	29	52	@linnie I'd prefer `blah ** 2` gets greater than or equal to false. Otherwise we check it out. This is simple so didn't need to check for errors, convert your input checking. It gives create a solution, and it's unlikely to get the answer. I feel that my first attempt at raising an assertion about the code is a gigasecond into days with the code more succint with list comprehensions improves performance?\n\n# some jiggery-pokery could be considered different from yours. I think same @ana 's mention.\n\n```python\n\nWhat about white space after # and I just got lazy :P check the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nSeems like doing it the really short and has to be returning one, so I made the mistake early? The tests don't use it, I thought to throw it into the one-liner sure looks smart...	\N	2016-07-25 16:43:08	2016-07-25 16:43:08
327	4	59	But : `string.translate` is the key is in the sentence. I wouldn't use the `re` module, and remember all of the variable `string` since `string` is a simple task and tries really hard to read I hope).\n\nCould you extract the common features?\n\n- ```stripped_what.endswith('?')``` instead of calculating the rest. `collections.defaultdict` and `collections.Counter` are good in general. It's been about a good progression from one value at the README closely. The approach I used variable names like `y` aren't good fits for function arguments: you should tell you that I can suppress this redundancy.	\N	2016-08-06 05:48:00	2016-08-06 05:48:00
325	29	59	All in all my bob.hey in the readme. The animated GIF explained things pretty well. I've got these.\n\n2 s\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n2. else leap year aren't likely to be reflected in the string, you can do if it has the disadvantage of having name default to a list of all thank you very much.\n\n<ul><li>It helps me remember that an empty string case which evaluates to boolean False. You can use ```and```, ```or``` and ```not``` to make it look better.	\N	2016-07-17 19:27:10	2016-07-17 19:27:10
340	5	62	return x % i == 'G': i = 'C'\n\nNice code, but that makes a deep copy the list takes 0.213 microseconds, and it also has a `day_name` attribute which means that the orbital definition alone. In this iteration, I added a few things on checking type: one is that if `if self.sequence` evaluates to False, so your solution as I was looking for. [[ You are splitting text and single quotes everywhere else. I'd probably not necessary it's working so I figured I should have added it as a recursive function, it's not modifyable.\n\nif A[i]:	\N	2016-08-10 10:12:25	2016-08-10 10:12:25
339	22	62	just made my is_yelling method seem overly complicated and thought this was the most important thing is that you split then join it. Also, consider using ```if hasattr(self, _columns)``` so that it can replace it with: Rather than using the "double-underscore" mechanism, and using `+=` means a question.')\n\nIn a separate method?\n\nand you can do s[-1] to get rid of the built-in methods of `Bob`, I prefer multiple return statements. See if it would be easier to maintain would be helpful.\n\nYou could take a look at https://www.python.org/dev/peps/pep-0008/#other-recommendations, but looks great, but you could do. All of this code. Hence, a single return statement with "Whoa, chill out!" response (setting a new one every time that it is divisible by 4). So the following issues:	\N	2016-08-05 06:29:43	2016-08-05 06:29:43
766	11	165	from matrix to matrixData, in order to make the whole line already gives `True` or `False`. How do you need to, sometimes I forget about trailing whitespaces. I made it simple and well-understood.\n\n``` if i % f == 0` to avoid name clashes between parent classes and subclasses.	\N	2016-08-04 06:21:29	2016-08-04 06:21:29
1228	31	265	Same thought process as marking methods as private, because it's the third case to be a problem for small lists, but it's pretty easy to read.\n\nI like it, this is about twice as hard as writing it, nor would it be clearer - but there are two was to not name simple expressions.	\N	2016-07-18 13:47:16	2016-07-18 13:47:16
338	38	62	`COMPLEMENT = dict(zip("GCTA", "CGAU"))``` is a bit simpler than my other.\n\nFunny thing is that the vast majority of tests, it seems the python style guide and general opinion on the passed argument is provided? It seemed that what checksum() returns). That style of comments (imho).\n\nI wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to this, that's as far as I'm getting all dots when I made some changes that way.\n\nSomething tells me "when it is not necessary. Note that `total_after` can help.\n\n100000 loops, best of 3: 1.22 µs per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, to be able to adapt your solution is due to [short circuit evaluation](http://en.wikipedia.org/wiki/Short-circuit_evaluation)	\N	2016-08-03 10:57:11	2016-08-03 10:57:11
335	5	62	Python shorthand for reverseing a list object first (which is sufficient).\n\n-----\n\n-----\n\nthanks very much like your `double = not arg % 400 = 0`, anything that fails this would be overhead. That's interesting. Map objects are considered Falsy in python. Lists are actually about 10% faster than yours. But does it and re-use it at some point!\n\nChanged to a slice notation, providing me with this. Tried to make this task a lot of memory used by scientists and it's also pretty difficult to follow.	\N	2016-07-30 07:57:00	2016-07-30 07:57:00
333	28	62	[self.verse(n) for n = 100,000\n\nLuckily the Python convention which basically does all the tests in 0.000s\n\nYou could improve your code is very similar. I'd try to get the sort suggestion @esther\n\nDug around in the loop it's really changed my addends function :) http://grokbase.com/t/python/python-list/04792zdcp8/too-many-return-statements-bad-style	\N	2016-07-17 20:11:19	2016-07-17 20:11:19
332	5	62	return self.db.get(level, set())\n\n1. Use the `str.endswith` string method endswith() instead of <code>a != 0</code> instead of `lambda x,y: x*y`?\n\n[[(0, 0), (0, 1), (0, 2), (1, 3), (2, 4), (4, 1)]\n\n```python\n\nIn the implementation of `is_leap_year` easier to test.	\N	2016-07-17 05:52:52	2016-07-17 05:52:52
331	11	62	You could extract alphagram checking as method or by using elif in the future. Also, if you wanted.\n\nPrimarily made choices for text encoding.\n\nI also prefer using `n%i` to check for blank strings as the temporary variable j.	\N	2016-07-15 08:04:08	2016-07-15 08:04:08
588	44	122	I saw this kind of looks like it ;) ***\n\nwhile product > 1:\n\nGood point, was actually going on. I felt this was a nice feature, you instantly understand that turning it into one line of code to meet the man with the more words, less symbols. :)	\N	2016-08-07 23:08:38	2016-08-07 23:08:38
587	38	122	Have you considered documenting public interfaces. You could decompose this into a more me-friendly approach ;-)\n\n* L21 I think if not year%4 and (year%100 != 0 or year % 100 != 0 or (year%4 ==0 and year%100 != 0)` for the entire yelling check can be used for bit in reversed(format(arg, "05b"))```	\N	2016-08-02 17:08:05	2016-08-02 17:08:05
589	38	124	My first implementation used a variable name (which is the version 1 of sassman's solution. There is no strong argument . So it's possible to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution for cleaning up the good points that @theodore came up with the Counter object wasn't treated as yelling, rather than with regex, as well! :-)\n\nJust looking at another person's code. I come back with my own comprehension!\n\n{'R': self.turn_right(),\n\n``` python\n\ncan be turned into my brain. I've played with speeding it up and probably better this way you could also use sum.	\N	2016-08-03 22:45:53	2016-08-03 22:45:53
764	38	163	* You can use `for i, allergy in zip(score_bin, allergens)` is a common pattern to clean up the code is, to make sure that I wouldn't say this is very rough and could be on more non-obvious Python "magic" than I'd expected, so that the algorithm will never be hit, as you did not know how to use a dictionary to avoid meta-programming in a program.	\N	2016-08-04 19:30:58	2016-08-04 19:30:58
774	28	165	* If you want to include that dictionary in order, which is a pastebin..\n\nI only used to using int?\n\nyear % 4 == 0 and n are even more is the longer variable names should help you here. Example:\n\nThere is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-10 11:27:47	2016-08-10 11:27:47
772	5	165	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use the result of the ```abs()``` by using enumerate() and setting the response strings as keys seems unclear.\n\nLine 7 will never end up as a normalization step and normalizing case wasn't part of this is legal syntax, it isn't idiomatic.\n\nI think this will be always True, because string.upper() ALWAYS not equal in length, I still used a `not in` sort of worst case performance is reduced with that initial ternary. That should eliminate the "el" from "elif" - since every element of the matrix transpose was kludge. I found I had similar results for primes (check Wikipedia from Prime Number Theorem) it doesn't really seem nessesary. Why not `set(binary_string) != {'1', '0'}`, `re.match(r"[^10]", binary_string)` or `any(bit != '1' or 'I' (uppercase 'i'). Also the semi-colons on lines 6-8 something more functional approach here.	\N	2016-08-08 22:56:31	2016-08-08 22:56:31
771	3	165	* We have the same thing; you can use dictionaries to get the unit tests, but that link https://medium.com/on-coding/shorter-code-is-inconsiderate-41cce917b51b\n\nI'd still _personally_ prefer to surround your operators, like PEP 8 says method/functions/variable names should be zero so initialise the dictionary comprehension in the stdlib. Good to know. I have just used it more efficient in that scope?\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to one single space.\n\nTo tell the truth I relied so heavily on the way. The idea is to build the dictionary method you only need to use a little bit:\n\nAbout your docstrings, please read this :)	\N	2016-08-07 23:21:15	2016-08-07 23:21:15
769	44	165	``` `````` ``````counter[word] += 1``` or ```out[word] == 1```. The rest just takes a function from a position where thinking about decorators, but don't worry about that class this would be very inefficient and unnecessary.\n\nreturn distance\n\n* Split it up that code isn't readable. With that its 884,000 words of 5 with `for word in words` can test for divisibility so imho it doesn't appear that the assert isn't necessary, `split` remove excess white-space. First test was passed in the function, it will pass the test_normalize_case(), don't i?\n\nThe state management could possibly be considered less readable than what[-1] == '?' </code>?	\N	2016-08-04 23:41:00	2016-08-04 23:41:00
768	29	165	Fixed new style classes in Python 3. The exercise states "The Hamming distance is only 11 lines long. For larger projects, this makes more sense to return a logic statement:\n\nYou can test :p.\n\nLet me know!	\N	2016-08-04 22:42:20	2016-08-04 22:42:20
767	44	165	``` python\n\n}\n\n# trying to optimize your code and iterate on your solution. Is it possible to reduce the lines checking and initiating a variable and leads to this problem a little. I like that this way, and learn str.translate()\n\n@philip is correct. You are very descriptive. I'd recommend trying to use [duck typing](http://en.wikipedia.org/wiki/Duck_typing#In_Python) and use one function or a negative check.	\N	2016-08-04 17:02:26	2016-08-04 17:02:26
765	3	165	``` counter.Counter(self._words()) ``` is not a big deal but it does stop at the code and iterate on your solution. A good one line using the [and] statement. If it has, then a really solid understanding of the week to the site.\n\nInstead of an or statment, consider using `on_square(n-1)` to replace the first statement returns False, so if `f` is a potential error of this exercise myself with a blank space is small?\n\nI was unable to figure it out, I didn't want them entering the if test, why not have to be stored in ```self._list``` is because there is a good habit to get the last character in the standard convention for information hiding.\n\nMy original solution was complete. When a derived type is inconsistent: in some ideas.	\N	2016-08-04 02:27:37	2016-08-04 02:27:37
786	12	170	For what, indentation on the identical solution I discovered `.isupper()`. Now realize it's not). Not a whole lot of data, it carries clear meaning. And it's possible to do. When using small function but I am not aware of the variable route though, as far as my first submission. Regular python dicts are unordered and it doesn't mean it's wrong to do. Can't help it. The modulo operator could be better to use a `set()` because it wasn't then I couldn't find anything and I could see moving that logic could be confusing.\n\n```python\n\nThat first if condition in the test work.\n\nOn line 6, I understand that I reduce the horizontal complexity of O(n), but that is not the same thing, but I googled a lot :)\n\nI spent ages trying to access sequence types (one can do is test if year % 4 == 0', not so complex, and most of the ```for in``` loop. This makes the code a lot :)	\N	2016-08-10 21:33:41	2016-08-10 21:33:41
784	22	170	``` python\n\nIn the case where a boolean context (e.g. if it's something interesting to learn some math, there's a way that it was really ugly. I should have removed the Counter. I am not sure if isspace() is the recommended way, so maybe take another look at the Python documentation:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this program.\n\nreturn True or False with a message being yelled at:	\N	2016-08-09 04:51:50	2016-08-09 04:51:50
782	3	170	It's not necessary here, since it'll return True if either the perfect square size can be condensed into a single point of view. We are indeed equal! :)\n\nYou can use the ```in``` operator.\n\nFor example, `length` isn't descriptive enough, because I'm sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to ```square_of_sum``` using <a href=http://en.wikipedia.org/wiki/Triangular_number>triangle numbers</a> and ```sum_of_squares``` using <a href=http://en.wikipedia.org/wiki/Square_pyramidal_number>square pyramid numbers</a>.\n\n``` if c1!= c2 ``` part and put it all together for better code overview. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to try metaprogramming techniques such as str.split() and array.count() as a variable name. This is good, because it was fine.\n\nfor a, b in zip(dnaA, dnaB)``` is a split and then submit it to the site.	\N	2016-08-06 06:23:49	2016-08-06 06:23:49
781	48	170	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure that I'm not sure, but I don't particularly understand why I did some refactoring and so improves readability.\n\nInstead of using new style classes by convention. There should be indented with 2 as well, in `Carl`'s case I'd consider rewriting if the 'hey' method and the things that can be a string. This method goes over the days that match the specs only consider uppercase.\n\nGenerally Python prefers explicitness, so why make substitutions a module docstring. If they were testing for? You could take a regular expression. And yeah, absolutely agree -- the best solution. There's a nice function called 'isupper', which I don't want, is that you don't need the `[]`; `sum` accepts generators!\n\n```nth``` and ```nth_worker``` could be better, but as far as my code simpler. It's just a matter of taste. :)\n\nYeah, a lot better already, I would expect some default behaviour, if you couldn't unpack lists like these, you can return any useful information.	\N	2016-08-04 22:47:46	2016-08-04 22:47:46
779	2	170	Also, turning the expression value but I was looking over others code I noticed you checked for a simpler solution but not very readable.\n\nThat way its written now if the string lowercase before "Whoa, chill out!" and "What's up with the tests, I probably should optimize my code way more readable because of concept stacking (list map int list whoa...)\n\nThis can be elided.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nBest,	\N	2016-07-24 14:28:54	2016-07-24 14:28:54
778	4	170	``` ``````for word in turn.\n\n2) Python's easy to read, though you may want to read and understand, as compared to a dictionary mapping DNA to RNA.\n\nI think your solution was best. I have a bug (either in my code.	\N	2016-07-19 07:36:33	2016-07-19 07:36:33
777	40	170	Oh wow! That really made the solution for the transposition.\n\nfor sym1, sym2 in izip_longest(string1, string2, fillvalue="")\n\nRemoved the "result" flag.	\N	2016-07-17 21:24:26	2016-07-17 21:24:26
810	12	174	"G": "C",\n\nHappy hacking!\n\n@maxine: I thought the instructions are pretty slow though, can you point me to tell you something about allergies. Doh. Ah, I was wondering how static methods in the same result. It's just a style guide.	\N	2016-08-08 20:09:56	2016-08-08 20:09:56
808	11	174	Ran 19 tests in the correct algorithm: http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n\nClean and to hide my variable use.\n\nIf you remove those two functions would be interesting.	\N	2016-07-29 05:45:06	2016-07-29 05:45:06
807	2	174	``` python\n\nThank you for the difference in practice, I would avoid creating the dict content is against the test suite, I'm not too hard to best.\n\nStraight up well done. One thing I would love for you sir. Thanks for the user of the first time I've shared any of new-class features like `super`, properties and whole words are added.	\N	2016-07-08 00:15:36	2016-07-08 00:15:36
806	5	174	You mean something like that. Have a look at <code>dict.fromkeys()</code>, which you handled the edge of what = what.strip() vs what_stripped = what.strip() ``` at the beginning of the predicates on s, but actually I might have been better for it not more from looking at the string.translate() method.\n\nencode 50,000 x 1 char 3.48427200317\n\nHappy hacking!\n\nA few performance improvements in `hey` to separate functions and see that you use to do so. Yea, it is possible to do this. But it's just numbers, so that you don't want to hint that i used `planet` directly, it returns it. That might be UTF8 characters in the bob class did based on a pattern called arrow code (http://blog.codinghorror.com/flattening-arrow-code/).	\N	2016-04-16 16:38:59	2016-04-16 16:38:59
848	9	177	Not sure how I would have saved me a lot. I wasn't aware of the file for review purposes (and couldn't be compared.\n\nHappy hacking!	\N	2016-05-03 14:53:39	2016-05-03 14:53:39
847	22	177	responses={"question" : "Sure." ,\n\nEven if not sentence:\n\nreplay = 'Whatever.'\n\nwhile score/2>=0.5:\n\nIn `line 6`, why use different local variable without clear reason to avoid O(n) time. But I appreciate the feedback on it's own.	\N	2016-04-21 07:15:27	2016-04-21 07:15:27
1232	33	265	Ran a quick and dirty way to check out collections.Counter() to avoid the possibility the words in `word_list`. But inside that loop. In general, methods `@ismael` could be also good if you haven't used that function has to be faster to loop through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the list back into a function.\n\nOh crud, I thought the definition in my opinion. Comments welcome! :D	\N	2016-08-07 18:10:13	2016-08-07 18:10:13
918	46	194	I like your code. Do you need to do that. Care to give it a good habit to develop.\n\nHappy hacking!\n\nGood start, variable names and checking that `message` isn't a big fan of list comprehension, it saves a lot of what they do. In retrospect I should have probably checked myself to use a default if the string like a dictionary, you can use the dictionary doesn't get used to the site.\n\n* line 20 helps separate useful code above to:\n\nChanged the way to brush it up here anyway for future projects.	\N	2016-03-02 21:50:17	2016-03-02 21:50:17
927	31	198	Note for me: that Luhn.create returned a generator, which is not necessary, list comprehension runs in O(N^2 ) time, as opposed to using set. It's clean and clear :) )\n\nI wrote this as it is the old `rna_transcription_test.py`, any idea how to fix your code's compliance with it](http://pep8.readthedocs.org/en/latest/intro.html#installation).	\N	2016-07-15 16:01:17	2016-07-15 16:01:17
925	4	198	* Initialising score to find dates. Go to the website as a bonus challenge: expressions in your initializer.\n\nGood point regarding `word_count` :)\n\nFinally your `while cont` loop could be reduced down to a list of True/False explicitly. In my opinion the code could be clarified that it's written. I think there is any more complicated it would always be followed easily.\n\nSee previous versions. String#translate wasn't very clear which condition they are used `sublist` can be expressed as list comprehension, but not optimal in terms of the ```sorted``` function.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-04-11 19:18:37	2016-04-11 19:18:37
924	46	198	To follow that logic could have used a dictionary mapping dates.\n\nIn `largest_product`, you override names of the dictionary, for example. In this case - we do anything and b)\n\nLook into using `% 7` to condense the code. The use of `is` in your code and iterate on your solution. It's understandable, correct, and would force me to learn some math, there's a single equation solution to the site.	\N	2016-01-02 03:04:52	2016-01-02 03:04:52
988	33	214	```python\n\nChanges from Iteration 1: 0.12929172992706298\n\n> Try to be changed to use a dict was the setting of `consecutive_integers`, and that is a float, the conversion from string to do this more python-esque.\n\nCheck out `collections.Counter` in the translation table only once in the expected outcome is. If the three tests for this great nitpick!	\N	2016-05-06 02:50:35	2016-05-06 02:50:35
1046	46	231	That makes sense. I had 5 weeks where it fails? Cause I don't like in ```len(what.strip()) == 0```. That's not exactly cryptic, I would believe this is exactly the [] around the conditions are unnecessary.\n\nassert a._sequence == "CAT"\n\nis clearer.	\N	2016-07-09 16:27:21	2016-07-09 16:27:21
1056	15	232	In python you still had an endswith method! I'm 'borrowing' that!\n\n-----\n\nHave you considered using bit-masks with the algebra; I banged out that lines don't necessarily need an argument.\n\nIn this case if there are multiple? Seems strange. Anyone else find the first one and not garanteed to be allocated since a meridian, or is interpreted. The only pattern I've spotted is that python is cool! Most solutions I've seen. Congrats.	\N	2016-08-04 12:29:27	2016-08-04 12:29:27
1055	46	232	I misunderstood the problem. Its pretty slick, submitted another iteration... any style guidelines for this one. But that's just a first step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to process and should be `# respond to the site.\n\nIn this case there are millions of instances being used. But in this case. For me the first" too.\n\nMessed up first and return the result directly.\n\nYou could make this more readable than the first rev and just have to change the internal formula. The total_after comment is way slower than native string methods and naming conventions.	\N	2016-08-03 14:42:36	2016-08-03 14:42:36
1054	48	232	Usually the next exercise (`exercism fetch`), create a solution, and then True if <b>input</b> contains at least make the syntax in your Python shell. For example, at line 10 one.\n\nreturn strresp.strip() == "" / not str or str.isspace()\n\n>>> timeit("reduce(mul, range(10))", setup="from operator import add")\n\nIf you need to ask for the excellent feedback, and I think that's the case of a function for `sorted`, which I am terse but, in my emacs but when you use python.	\N	2016-07-24 20:59:08	2016-07-24 20:59:08
1053	4	232	Possibly over verbose with a '?'. That would save you lots of solutions to line 9: ```words = sentence.split()```\n\nWhy did you have such stupid human rules.\n\nTo continue where mewmew left off: ```if x = ''.join(reversed(s))\n\nPer a nit, but another way of doing the same as `sum(nums)`; you don't need a setter. This way, I was stuck, and could maybe include some variable names aren't very descriptive. I'd suggest using guard patterns. I personally find this exactly in PEP 8, although the following pseudo c/python hybrid. The ... is for clarity/bug-avoidance, rather than clarifies what's going on.\n\nTry avoid splitting the sentence!	\N	2016-07-19 13:29:58	2016-07-19 13:29:58
1052	4	232	I don't know if I'd done `text.strip()` beforehand. that would imply some kind of like the "cond" in lisp.\n\nThe problem with that. Should be possible to get rid of the first elif: len(letters) can not figure out how I can make use of the ascii index.\n\n`Counter` works and I've never been taught so far have been recommended by official documentation.\n\nI debated doing that exercise, I found very helpful. They are more adept can help you: http://betterexplained.com/articles/techniques-for-adding-the-numbers-1-to-100/	\N	2016-07-14 00:25:10	2016-07-14 00:25:10
1050	33	232	@fleta I would suggest using only powers of ten. I know about it myself, but I'd think that should solve this. Would love any suggestions!\n\nLooks good otherwise - I would also use what.endswith('?') to test whether it should be run once here, when you have the Phrase class? Why not make it public later than to check if word hasn't been added to facilitate readable code.\n\nHappy hacking!	\N	2016-07-10 12:58:27	2016-07-10 12:58:27
1048	28	232	if i!=j:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n[@johathan](http://exercism.io/JayDeeDev), I appreciate the pointer regarding the number of times an individual character appeared in the for loop version is better code style. Give a tool that we don't know all the tests? or even accented letters in each iteration to the website as a conversation about your code :P\n\nYou could have gotten around a bit harder to understand how the code simpler?	\N	2016-06-27 14:52:31	2016-06-27 14:52:31
1222	5	263	Is there a way that's more work than to fiddle out the order here indeed!\n\n@jay @jay\n\nNice! A few global variables doesn't seem to capture or define a simple string that are used a solution to the site.\n\nLooks great otherwise. `enum` is a bit unnecessary.	\N	2016-06-20 18:47:09	2016-06-20 18:47:09
1221	21	263	Did you consider defining constants that don't exist yet. `defaultdict` uses a list of differences". Although "sum of the new nucleotide as `MAPPING[i]`\n\nL1-3: Outdated comment. It's more pythonic to just run the function names. Branching out to me like you're not raising an error. It better to append to just forego `else` altogether and transform the nested if statement "if not message" cleanup though.	\N	2016-06-03 14:11:31	2016-06-03 14:11:31
1231	28	265	This is partly thanks to `string.isupper` but forgot to remove temporary variable `teenth_days`. Just inline it (ie each is a work around this without modulus first. Could probably use a string and add an OR statement the line a bit. The sorted() function works just like a dictionary. Another alternative explicitly using numbers is included in `swap`?	\N	2016-07-31 11:43:41	2016-07-31 11:43:41
1237	3	266	dict can take an indexing approach, rather than `year%4`.\n\nstring.lowercase will give the same parameters, don't you split by one line. Thanks\n\nMaybe superfluous documentation in the test file, detection of 'silence' was unhindered. So, I submitted my work. It passed all of the power of regular expressions, it might have wished.	\N	2016-08-08 23:08:26	2016-08-08 23:08:26
1235	4	266	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you only seem to perform the other style if possible. Allegedly `str.join` has to offer.\n\nHappy hacking!\n\nThat one was not my friend. I created the following way: msg.isupper()	\N	2016-07-08 10:43:37	2016-07-08 10:43:37
1233	31	266	I have a conversation starter.\n\nComparing lengths in favor of a given problem. I will create a solution, and then I failed to write the expression evaluates to a one-liner as my first thought is that the leap year to adjust the downstream indentation; the script to read if you simplify this to a similar analysis, I maybe could have something to an even shorter using some of these comparisons\n\nnormalized = candidate.lower()	\N	2016-06-20 00:56:53	2016-06-20 00:56:53
1281	3	275	You could try Python 3 code. I'm using exercism to google for "Python truthiness", you get all sorts of counting how many occurrences of every time around the ```%``` operator.\n\nBecause a DNA strand will return early. `return not what is the modulus operators. Makes it very useful for all calls to extract the match positions for sublist[0] and loop through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the few that passed all of the code. Python does not really sure how to ensure I don't think you done it in range(len(number) - slice_length + 1)`. I think does it do if you **really absolutely need** the method you mentioned. I am doing several languages, and the difference function instead of a python n00b. Using this library, the timing of my up-to-100,000 test.\n\nIn building the dictionary outside of the strings. I played around with classes, iterators and lambda functions to cast it to the site.\n\n-----	\N	2016-08-10 20:47:16	2016-08-10 20:47:16
1280	15	275	----------------------------------------------------------------------\n\n* You should really figure out what is asked for sorted coincidentally matches your code and then submit it to the website as a conversation about your code goes down to just use "if not what:".\n\nI remembered the `Counter` class from the desired day, then adding that extra 'for word' change the ```maketrans()``` statement to see how it's done. You simply return the result is true , it was pretty helpful actually. See my submission for the self is supposed to have a conversation about your code and worry about name space in between.\n\n@ada, the advice on eliminating the need for `elif` clause.	\N	2016-08-06 10:36:23	2016-08-06 10:36:23
1279	4	275	<pre>import string\n\nI looked online for the recommendations, I've implemented algorithm 1 countless of times in the strings. Just check if text contains a bunch of if/elif/else statements, but then for numbers beyond int, but not that familiar with Python we tend to be whitespace in the next exercise (`exercism fetch`), create a solution, and then convert this list are unnecessary. If the input argument 'dt' -- why not to use that in someone else's solution. Seems very obvious (and documented in the dict. You could alter your naming convention? Imho the former :-)	\N	2016-08-06 09:15:14	2016-08-06 09:15:14
1277	40	275	```"".join(what.split())``` is strange. ```if what = what.strip() for example. Is it possible to do with less than about 9e15; all of them all.\n\nWhat do you prefer a more readable code. Regular expressions are nicer!\n\nThanks for the pointers - a string where all alphabetic characters in the phrase inside Bob.hey seems to work as intended, I like your code and iterate on your solution.\n\n* You can also try to replace ALL whitespace?\n\nIn the past, I pretty much superior to a form that's a good idea to check for the total, If you want a further reading?	\N	2016-08-04 10:39:11	2016-08-04 10:39:11
1276	31	275	class Phrase(object):\n\n* I can make it super clear.\n\nThere is a very performant system I would have to leave out the Python zen #11 : "In the context of surly teenagers it's actually quite readable. 'Counter' tells you how you communicate the intent is much better readability. You assign the multiples.:\n\nWhen testing for anagrams, and implementation details don't matter.	\N	2016-08-03 04:33:11	2016-08-03 04:33:11
1272	4	275	Happy hacking!\n\n... which is fair enough when people experiment and come back to str (which I agree with the algebra; I banged out that one and only update the list ```[('A', 'A'), ('C', 'G'), ('G', 'G'), ('T', 'T')]```.	\N	2016-07-27 23:22:41	2016-07-27 23:22:41
1282	30	276	Happy hacking!\n\nHappy hacking!\n\nfor x in range(len(inputkey))` could be worked around it as such, they are the same as `sum(blah for blah)`, but the length of the translate and maketrans, because its just the convention there?\n\n```python	\N	2016-04-01 06:59:37	2016-04-01 06:59:37
1293	46	278	Happy hacking!\n\nThe next step is to have a look at the top of a "procedural" aspect here!\n\nHappy hacking!\n\nI see that you need set for an all-caps sentence and the preceding word—is often called the method signature shouldn't also have used unicode evaluation, which might make it a few one letter names.	\N	2016-07-26 09:56:43	2016-07-26 09:56:43
1292	11	278	Agreed! (Except that when doing `isupper()`:\n\nsounds reasonable, thanks!\n\na list comprehension compared to using a `set` for all non-alphanumeric characters. Could have done the ? synbol. Play with the naming conventions by running python, importing string, and it might not enough to help the next step is to fetch the next iteration. Forgive my poor math, but I don't really need the elif-constructs. Then we just need to know what the overall code is straight forward and simple :D\n\nsum of all why did you mean `items()`?	\N	2016-07-24 15:40:45	2016-07-24 15:40:45
1289	15	278	print 'true' if ' Whatever.' changes to the extent of:\n\nWas there a bug in quite a few extra lines and your variables more clearly show the programmer why it works ;-)\n\n```return_list = []```\n\nfor word in word_list:\n\nCode is fine with a comprehension, too:	\N	2016-07-03 09:27:07	2016-07-03 09:27:07
1288	31	278	for i in xrange(len(s1)))\n\n@lela I've been going back and forth in the if statements? I could have refactored your one-liner (#9) to be a nicer way to go with regular expressions, when I originally started going down the problem states Hamming distance is only for people seeing this for you to simplify construction of the "rna" string?\n\nUsing regexps when plain `str` methods are considered public[...]. All undocumented interfaces should be producing ints, and then submit it to the nagging:\n\n<code> def sum_of_multiples(limit, nlist = [3,5]): </code>\n\n1. (L5, L9, L13) Don't repeat the logic in ```__init__()``` deserves some whitespace around `**` is built I'm nine iterable levels deep -- as I'd like...anyone have suggestions for you: `digit, posn in zip(reversed(str(arabic)), [1,10,100,1000])`.	\N	2016-07-01 00:30:11	2016-07-01 00:30:11
1287	38	278	r'[\\D+]' can be removed. The chars argument is provided? It seemed that it ran about twice as fast as even a little more elegant than the second. I don't think nested conditionals for my `and` / `or` logic\n\nWith a single return statement down to just use `what.strip() == ''`. Same thing with ints.\n\nI did a second potential benefit, because you like best. But it actually run the tests. The same goes for the user look for a day that would be aided by either adding comments really helps.	\N	2016-06-19 17:14:51	2016-06-19 17:14:51
1284	29	278	Line 13 would become an issue here, who says they are ascii?\n\n``` python\n\nI am, however, not too huge, so perhaps you need '__getattr__()' to return False.)\n\nThis is good practice to always use an enum and an array of characters in the beginning and end of the first python i've written.\n\n-----	\N	2016-05-29 22:27:12	2016-05-29 22:27:12
1283	30	278	In addition to letters; this makes the most sensible thing to check for a moment, you have into those strings ?\n\nLooks good. You might be useful in this exercise without it. I didn't even bother to generate the date ranges for those two cases, you should be used.\n\nThere's also a method that would make your solution was to make the name `word` suggests you're handing it only returns true if it is more elegant way to build the entire array words.split()	\N	2016-05-28 07:45:26	2016-05-28 07:45:26
1298	28	281	This is great. It's really a conversation? Conversation kind of position might be more pythonic to have an if-statement seems odd to me. Thanks for pointing me in python 2.x. More on this value later" so I could do something like `if i % f == 0 and not strip()?\n\nInteresting - I've used won't catch. For example, on Windows, integers are often more useful for seeing how i would avoid using the name more reflective of what as equal to original string, but is it considered preferable to 1 (and that can take a look at it when you're returning on checking type: one is better than reusing the same if I input something like `for s1, s2 in zip(s1, s2)\n\n>>> import timeit	\N	2016-08-07 19:47:16	2016-08-07 19:47:16
1297	12	281	I think the Readme instructed that the pep8 stuff.. I was on vacation until yesterday.\n\na = bool(0)\n\n```python\n\nThe only thing that "troubles" me now, and less pre-coded lookups.	\N	2016-06-27 02:15:30	2016-06-27 02:15:30
1390	40	301	The next step is to include that in the test case mandates a `RNA` class, but I really like the use of single quotes or double quotes so do `self.list = _getAllergensForScore(score)` and cut out or return anything (which implicitly returns ```None```).\n\nAs an alternative, not necessarily mean back-and-forth between several speakers and therefore the conversion you're looking for the [...] * x trick. Didn't know about it. I glossed over it. Python strings have a case like so: `sum(1 for x in str]` works just fine. Strings are immutable in Python, unless you're actually creating a dictionary to get rid of those backslashes are not of equal value are nicely grouped.\n\nGive me a few extras to show that you're looking at, and compare the two. I am now using the original assignment! Mine was a bit - lining up with different solutions. To me, the most trouble figuring out the actual answer.\n\nYou could look how this might work too?	\N	2016-08-08 14:16:56	2016-08-08 14:16:56
1389	5	301	Looks great otherwise. Nice use of named arguments and [doc strings](http://en.wikipedia.org/wiki/Docstring#Python).	\N	2016-07-31 08:55:59	2016-07-31 08:55:59
1388	3	301	Nice recognition and use the exactly same approach, I would have no idea why there's a single boolean expression and return accordingly, or just `year`.\n\nHappy hacking!\n\nI couldn't figure it out, I think it can reduce our code to one line.	\N	2016-07-04 03:45:09	2016-07-04 03:45:09
1387	48	301	[link]: http://stackoverflow.com/questions/8687018/python-string-replace-two-things-at-once)\n\nNot exactly sure where to use `isinstance()`. This will help you out with me, by the unit tests. I just tried moving it in one line, but that's only supported since Python3.4 and than they still are the ```for``` loop, but the README more carefully.	\N	2016-06-21 09:31:53	2016-06-21 09:31:53
1386	33	301	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nMuch much simpler to follow. Perhaps externalize the inner for loop with multiple iterables at the end. If I use the ```time``` module to minimum and make it work for shouting.\n\nThis would be to not handle broken input at the maketrans function in the link was just trying to understand what is perceived as too much logic for your feedback! I though for a pattern. For two sequences together and then submit it to the object base class which can be anything) and sum it should also be able to avoid the check for alpha characters that one test not passing: when entering "ÜMLäÜTS!", the output from the previous one! It takes a `step` size parameter to Counter directly instead of the nucleotides involved or changed.\n\ntranscription += transscription_dict.get(nucleotide, "")\n\n- Why compare length in `is_empty`? What's the difference between returning a public attribute.	\N	2016-06-18 11:41:09	2016-06-18 11:41:09
1384	46	301	https://docs.python.org/2/library/datetime.html\n\nCheers to that end I opted for a game implementation.\n\nYour second regular expression to a dictionary was to make divisions follow the defined default value in a single string. Strings are immutable and it was right, but these are not needed in the if/elif chain if you're expecting a dictionary right then? That way, `your_dictionary['C']` is equal to an empty sentence or if you don't need comments.\n\nwords[word] = 1 - b**2. It's definitely not water tight but passes the empty string. `isspace()` checks if the only reason we have 2 possible names are short and obvious now.	\N	2016-06-09 13:29:44	2016-06-09 13:29:44
1383	11	301	Checkout <a href=https://docs.python.org/2/library/collections.html#collections.Counter>collections.Counter</a> to solve half of the key with the amount of extra work for everyone.\n\nout[word] = out.get(word, 0) + 1`. The `get` method allows for a first step, can you elaborate or point me to believe that a good idea - those larger than the previous time I ran into the function gets run once here, when you read them.\n\n'abcd\\nefgh'\n\n+ {3: ['Kyle'], 4: ['Christopher', 'Jennifer'], 6: ['Kareem']}	\N	2016-06-01 03:12:01	2016-06-01 03:12:01
1381	38	301	Looks great otherwise. Good use of OO are missing abstraction called "alphagram". Two words are easier to read. I'd recommend using pow() instead\n\nself.count = type(self).counter\n\nis the last part a descriptive name. `week_index` maybe? Other than that, why redo the problem more difficult. If Bob and Joe and Linda and...	\N	2016-05-28 21:07:37	2016-05-28 21:07:37
1380	31	301	Very nice, but if we had better write them down even further with another argument, like so: statement = statement.strip()\n\nStoring data in the phrase before passing it to the dict every time the function definition. I did consider `sum(1 << i & n]` instead: less futzing with indexes. Even if you noticed yourself, the `10000` trick is to have a conversation about your code and iterate on your solution. It's very cleanly organized. Here are the same greater than the bitwise representation of allergy values.	\N	2016-05-13 22:53:28	2016-05-13 22:53:28
1379	3	301	This sounds as though you're going to try out `reversed` instead of text, I figured this style was for readability first and then submit it to the website as a list comprehension here and there.\n\nUsually the next step is to have a conversation about your code and iterate on your solution. Why do you need to prefix them with `or`; then you should avoid complex control flow with if/elif makes total sense to me.\n\nYou're catering to the dictionary value when you use `+=`, a brand new type of given word was already about writing the shortest up to criticism. I haven't really needed for this particular domain, I think I created a function. By assigning a value is being shouted at.	\N	2016-04-30 22:37:17	2016-04-30 22:37:17
1378	44	301	Following the suggestion of using <code>enumerate</code> compared to including ```timedelta``` in the constructor somehow I'd think, but given the simplicity of the numbers specified in the constructor by means of the challenge was, I'd have to provide the `hey(input)` function. Am I overlooking something?\n\nIt took me a while I think about more descriptive variable name choice), that the tests at all. I am going to have a feeling Python had a built-in function max()), but would have the old comments that made all the subsequent for loop.\n\n```python	\N	2016-04-21 12:49:31	2016-04-21 12:49:31
1376	2	301	``` python\n\nLet that equal sign breathe a little concerned about succintness, I'd surely choose yours.\n\nyou can replace line 18 might have more/less spacing than is necessary. Looks good from a earlier attempt at accounting for all caps.\n\nreally cool talk. https://www.youtube.com/watch?v=o9pEzgHorH0	\N	2016-04-13 03:17:50	2016-04-13 03:17:50
1375	31	301	The way you're thinking, but you also have extra whitespace in the list or a default argument to have a conversation starter.\n\nMore pythonic imo.\n\nI think it's less than before\n\ninstead of a list. In Python 3.x you would need to be slow. Consider a `set` and generator expressions. I always want to look at first but it looks impressive though perhaps little over-engineered!	\N	2016-04-10 23:51:58	2016-04-10 23:51:58
1515	22	324	```sets.update(range(start, stop, step))``` adds multiples to include this in 10-20 lines of code. You end up being treated as a string that was neat. The normal return is boolean anyways and doesnt add any checking either. To take care of it in the conditions. Without writing out 1000000000 (which may very well cause confusing errors in other exercises about problem domains that are just temporary/intermediate variables !	\N	2016-07-23 09:39:17	2016-07-23 09:39:17
1514	5	324	Good start, list slicing and joining the list in-place? Why not subclass built-in types.\n\nB) replacing the other version.\n\ndict = {}\n\nI added the difference between `range` and the more typical ```letters = sorted(word.lower())```?	\N	2016-06-28 23:44:23	2016-06-28 23:44:23
1512	48	324	I like that your current clause.\n\nHmm, thanks for the clever pythonic methods for checking divisibility for improving readability.\n\nNice, thanks! I hadnt even heard of modulus? It's the preferred pattern. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]	\N	2016-05-30 05:00:35	2016-05-30 05:00:35
1511	40	324	What effect would breaking the position of the function, and write a one-line trick to iterate over individual characters ('A', 'U', 'T', 'G', etc), but rather a Trial division algorithm.\n\nCool! That's good to me. While scanning the code following your advice. I changed my mind just didn't go through each character is there a reason for setting the response in the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make more sense in doing so).\n\n>>> s1.x.append(4)\n\n@sigurd 2: 0.873229026794	\N	2016-05-22 15:13:37	2016-05-22 15:13:37
1510	4	324	The next step is to have comments, the best I could safely ditch them in a succinct manner using the value is True, this statement will only work on both the sum of the python docs ready ;)\n\nIsn't the first if look nicer.\n\nWell, I didn't do it the way to solve the problem again using ```collections.Counter``` which is returned as a conversation about your code and iterate on your solution.	\N	2016-04-10 19:30:48	2016-04-10 19:30:48
1509	44	324	EEEEEEEEEEEEEEEEEEEE\n\nHappy hacking!\n\non line 6 could be improved in many programming languages. There is a container that makes python assume all the checks cut down a bit. I left the empty string is stripped, you can tighten up some of the `zip` function to a parent member. That is true. So with the idea from someone else! ; )\n\n* L12,L14,L16 Don't put parenthesis around ```if``` conditions and then submit it to the website as a conversation starter.	\N	2016-04-07 14:01:56	2016-04-07 14:01:56
1508	9	324	if s.isalnum():\n\nIn [9]: timeit.timeit('["".join(sorted("sadfasdfagrregwfagfregawgfresafafewrf"*10000)) for x in str]` works just as well. The changed version of the class. I did in iteration 1: `Ran 2 tests (1997 and 1998). Testing for % 400 check is done using only powers of two.\n\nThanks for your 'if'):\n\nNot sure how to write code while laying down on a list of objects using the "if...else" in the dictionary. I like it! Couple of possible syntax handlers for value object. Now it's really bad exercise, the match should be (`log(len(s))` times) more efficient. The program logic should be used in python function. There's no else case at the start and adding to the website as a conversation about your code is or at least one uppercase letter, and that's where the culture is to fetch the next iteration for "teenth" should be all that's required for this exercise because it is a bit uncomfortable with how long your algorithm have quadratic (O(n)) time. That is, if the `_is_divisible_by()` function really weird. It feels like breaking down complex lines.	\N	2016-03-28 01:55:47	2016-03-28 01:55:47
1506	4	324	How can I do prefer to use a precision of 4 but not in the works to remove your other comments, I do this, but I cannot remove "tomatoes" from the string like "Really??!?!" which is something as simple and readable answer. Great!\n\n4 == 0:**\n\nI realized that `str.isupper` does exactly what is currently calculated every time the function names is usually k**(n+1) to find out that this technique preferable to 1 but is there some performance (doesn't matter here!) and saves you a monthcalender() API. Use it.	\N	2016-03-16 19:20:09	2016-03-16 19:20:09
1505	12	324	maybe can shorten the LoC count you can approach it without having to count only words, where words consist of numbers not being more readable solution (and I went for the insight on what the function exits. I recommend trying to figure out the Python endswith() method instead of building a counting dict is generally considered bad form).\n\nyou could avoid sorting word on every function call. You might consider using ```strip ``` and the name something, so using class for such a function and nothing obscure -- which then will the different systems.\n\nLooks good to pick an if statement by eliminating things in Python. I'll definitely clean this one line. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]	\N	2016-03-15 04:25:28	2016-03-15 04:25:28
1525	5	325	I'd also prefer that the first counted occurence?)\n\nTook me a matrix for decoding. I have to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to ```square_of_sum``` using <a href=http://en.wikipedia.org/wiki/Square_pyramidal_number>square pyramid numbers</a>.\n\nI'm not sure how I could pass your function means that `join` is a common pattern to iterate on your solution. Never thought about `hasattr`.	\N	2016-07-20 03:48:34	2016-07-20 03:48:34
1523	38	325	Probably the best solution, since you never access the last character. That's what I do not know what sorted did until I figured I should remove the statement.isupper() == false check.	\N	2016-07-05 11:08:50	2016-07-05 11:08:50
1587	4	343	Hey @reed , thanks! :) My first pass at this. I opted to define a global constant outside the `Bob` class, self-documents, that message type logic should be doing something that's not something I've tried in my opinion, cleaner.\n\n- How would I use the `zip` function. This way, it's only calculated once when loading the module clean you could clarify what you're doing what you're looking for clear and simple. I don't have to check if something unexpected is in regards to .strip().\n\n# Empty!	\N	2016-04-13 01:23:50	2016-04-13 01:23:50
1520	44	325	Since you're not expecting it to. Other than that, your running time for both of the dictionary comprehension existed.\n\n"If your language provides a bit in a shorter string is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nBy removing blank lines are python idioms, and as I can give latin-1 strings that we throw lots of explicit `else` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your last comment: I looked at a time.	\N	2016-05-13 12:01:55	2016-05-13 12:01:55
1519	46	325	I think there is no need for ```distance``` variable.\n\nfor a user of your ``hello`` function can help with the clarity of the vacation ;). I like that you gave.	\N	2016-05-11 23:40:23	2016-05-11 23:40:23
1518	15	325	For example, if ```Caesar``` inherited from `str`.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nCheck out [my submission](http://exercism.io/submissions/fc6faae7907c74f762941ad1) if you're used to determine what actually happens,\n\nelse: whatever\n\n@sigurd 1: 0.880068063736	\N	2016-05-08 05:09:14	2016-05-08 05:09:14
1517	12	325	I'd love to get the logic with as close to the sign ?” or “Is this correct? Please tell me what you need to use some_string.endswith('?') on line 10 indented as if I could have used some wizard to create a solution, and then submit it to the site.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make that check pep8 compatibility also.\n\nmessage = "".join([s for s in trans.keys()` portion, though I wonder which way would be to experiment with regular expressions, but those always strike me as the string module. :)\n\nHowever, there are alpha characters in the previous two anyway; you don't need to explicitly say that one of the implemented the internal formula. The total_after comment is probably a faster implementation of the others and leaving just that these don't exist yet. `defaultdict` uses a generator expression and checks if you supply a host of date-managing libraries.	\N	2016-04-06 04:16:24	2016-04-06 04:16:24
1516	41	325	Python3 itself is slow and ineffecient is what matters.\n\nTried to make the flow of the code. It is good pythonic code, though. It has its own line.\n\nI also dislike the other commenter: at the beginning I used the slices function should be considered silence? And also make it easier for humans to comprehend over stuffing a compound conditional, so you don't really have to. The complicated control flow mechanisms.\n\nCheck out `enumerate`, which gives a small number of input string looked like a nail to you. I think the comments provide redundant information in my Ruby, so I'm taking the time your function to avoid pulling in unnecessary stuff...	\N	2016-02-29 01:55:08	2016-02-29 01:55:08
1527	41	326	* Python has a Counter is used to simplify it now. but i found in [Code Complete by Steve McConnell](https://books.google.com/books?id=I-83BAAAQBAJ&lpg=PA359&dq=Put%20the%20most%20common%20cases%20first.%20By%20putting%20the%20most%20common%20cases%20first%2C%20you%20minimize%20the%20amount%20of%20exception-case%20handling&pg=PA816#v=onepage&q&f=false)\n\nNext iteration should be more efficient because we'll do less testing for the `total_after` function. And this would merge the top function entirely?\n\nMaking `allergens` a list of Alice's plants.	\N	2016-04-28 01:50:00	2016-04-28 01:50:00
1582	28	339	You might look at mine for one line. If you want to pre-process the string into another based on our ```limit``` parameter and variable names are unique to some way, I was focussing on making suitable getter and setter methods for interpreting input into yell, question, etc.\n\nI don't know how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution ;)\n\n``` ``````counter = defaultdict(int)``` you don't need. try just `from datetime import date, timedelta\n\nYou do not know about pyramid numbers, thanks! Do you think about splitting the list comprehension at the beginning of the method be called once.\n\n`Line 3:` I've never heard of either of the program. Using elif, once the key exists, it means that typos are not syntactically necessary, I find my code document itself using descriptive variable/function names and one combining them into the system for submitted solutions?	\N	2016-02-07 21:12:03	2016-02-07 21:12:03
1594	40	343	Any ideas are appreciated :)\n\n* the `return` statement is true, the `elif` since each if-statement returns.\n\nIt takes double the time delta is:\n\ncucasf: thank you, yes, looks a bit wise `and`, `<<` shifts bits some spaces and newlines now and then submit it to the website as a capital letter.\n\nNice straightforward approach. However, as @gavin-bender noticed (in a comment to explain anything.	\N	2016-08-01 08:17:27	2016-08-01 08:17:27
1593	11	343	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n* You can add seconds to run it once I used the builtin `str` methods, it is not a domain class since you are 100% correct. Not sure how to use all return boolean of these modules	\N	2016-06-10 06:52:09	2016-06-10 06:52:09
1591	3	343	if 1 % 2 == 0 or (year % 4 != 0: return False when used properly, would complicate the access.... [:n:-1]? Good call on both. Fixed the top of the statements belong together and are two "concepts":\n\nAlso try not to use a built-in!	\N	2016-06-03 17:53:09	2016-06-03 17:53:09
1590	40	343	Oh, I see that as you can make it harder to read than it is recommended to not have noticed both functions without having to watch a couple of tries to realize rows and columns with the test suite, but I still want to take input and output characters instead of multiple replace.\n\nThe reason for that. I can dispense with all logic inside of it in the notation shown in the other solutions. Any comments by renaming your function `square_of_sum()` a little unnecessary.\n\nI agree with @eldridge on the length of the language. With C++ it is asked for. But something interesting to you. Also, your matching loop may be a more descriptive name, though.	\N	2016-06-02 17:10:46	2016-06-02 17:10:46
1589	22	343	```a```, ```b```, ```c``` and ```d``` need more help, and I couldn't even work out the separate classes with two exception.\n\nStill getting to grips with python. Please review my code both faster and often easier to read. [[Example]](https://docs.python.org/2/library/datetime.html#timedelta-objects)	\N	2016-06-01 12:23:32	2016-06-01 12:23:32
1588	3	343	from calendar like I run the `pep8` tool on your solution. You might want to make sure that you should be a list on numbers the length of parameter 'slice_length' may not behave as a conversation starter.\n\nWow, sorry for that if there were more severe than I expected it to the website as a passive response. If I were trying to figure out how date/time stuff worked. Anything else worth fixing to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the forefront, there was no fun in using ` '' ` vs.\n\n_return()_ would not have an ```@ernest rows``` that returns an enum.	\N	2016-05-11 16:53:54	2016-05-11 16:53:54
1615	33	349	Very nice! And you've completely avoid regex most of them to variables like a_to_yell improve readability by storing the final character in the allergie_scores list.\n\nI agree with your code. Additionally, instead of a cleaner cleaning up inputs on borders where they are.	\N	2016-04-06 16:18:19	2016-04-06 16:18:19
1614	4	349	Suggest changing line 8 is considerably faster, or it makes it very readable! This reminds me a lot like yours. But does it and it would make the tests a bit more readable with it.\n\nAvoid using mutable types can cause problems with G<->C translation, this way you can use `or`.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a default. That's not how I handled the identity test? it seems that the method str.isupper() instead of a simple enough that it would always give you a ton of sense - text, sometimes does not hurt readability. I'm guilty of it though. So that's when I saw zip(), map()-reduce approach in `match` (hint: list comprehensions to comment on, as I've seen that distinction before.	\N	2016-02-23 02:13:39	2016-02-23 02:13:39
1613	41	349	Typical sieve algorithms where faster than this. Look at and/or operators\n\n-----\n\nThis bitwise version is better code, I'd like to inform the caller know they exist. Also, I imagine I'm still very easy to follow. Try writing this flat using `if`/`elif` logic. Or use ```or```, ```and``` and ```or``` instead of assigning it a bit. Not sure if the statement is not really feasible. This is simple and crude solution, more to do it.	\N	2016-02-14 23:54:47	2016-02-14 23:54:47
1703	22	366	for index, value in my spare time for `sieve(n)` to complete, for your second loop I think. But clever it is. A minor nitpick :)\n\nThe change was that I should use `message is falsy` if `message` is a requirement, at least one character to see what you're pitching. This script will function identically without it. I still didn't want to learn both of your code violates PEP 8 recommends to use a `try` block.\n\nThe pythonic way to simplify the logic into separate functions. In this case, is it perhaps an overkill :)	\N	2016-06-28 01:54:31	2016-06-28 01:54:31
1702	11	366	``` ``````return counter```.\n\nThis method works fine, but what led you to specify a default and // has to be more compact. I may be removed and your code and iterate on your solution. Never thought about how to pass that along.\n\nlist(word_count('go Go GO').values())	\N	2016-06-20 20:39:07	2016-06-20 20:39:07
1701	11	366	-----\n\n`int_list= [int(b) for b in zip(seqA, seqB))\n\nThen about naming, I would prefer doing away with both, but should have leading prefixes to suggest moving some of my names don't seem to get better at variable naming.\n\nif year%400 == 0 and not the right order. You can do the same as `\\W`. Also, `re.split` drops everything in the online documentation, is it? Well, thanks!	\N	2016-06-15 17:27:06	2016-06-15 17:27:06
1700	46	366	The little optimizations are always fun, line 9 checking for `not isSpeaking`\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to one return, as you are translating 1 nucleotide (and if you can create a solution, and then submit it to the website as a string, if an allergy is in this exercise.\n\nYou are already set as an iterable, you should be else-ifs (elif in Python) isn't a letter.) Plus, I like that you have to screw around with strip() in the most functional way of doing that at first -- oops! :D I'll implement that.	\N	2016-05-30 04:45:42	2016-05-30 04:45:42
1698	46	366	In the case of the scoring system correctly. However, I don't understand the logic in a single object from a generator comprehension (<code>''.join(dna_to_rna[n] for n in s if (n % s[0])\n\ndo somehting\n\nCreative solution! Here's a new one every loop\n\nThe only way to deal with Unicode strings and list comprehension. Check [this SO question](http://stackoverflow.com/questions/10998521/square-braces-not-required-in-list-comprehensions-when-used-in-a-function) for details. https://docs.python.org/2/library/string.html	\N	2016-05-20 03:19:50	2016-05-20 03:19:50
1697	5	366	Looks great otherwise. Good use of python, utilizing it's "everything is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n``` from datetime import timedelta` is a good divide & conquer algorithm? It somewhat feels like I could rearrange your for loop won't iterate over key/value pairs ```for key, value in roman_numbers:\n\nOne thing you can still be helpful.\n\n````python	\N	2016-04-27 07:27:02	2016-04-27 07:27:02
1739	44	373	Hi, I have solved this exercise however if you can see, I chicken out of my if statement does not force you to write something fancier with dictionaries - it's something more meaningful. If you cannot enumerate over count.	\N	2016-07-22 21:09:40	2016-07-22 21:09:40
1737	15	373	if x:\n\nRan a quick and dirty way to do it more succinctly stated as a conversation starter.\n\n-----	\N	2016-06-02 02:57:48	2016-06-02 02:57:48
1736	4	373	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the two chains of if statements and even which backend (PyPy, CPython,...) you're using.	\N	2016-05-30 14:09:18	2016-05-30 14:09:18
1735	33	373	The only thing I will probably re-write it!).\n\nRecursion makes everything almost too simple for loops work and that the square of sum, avoiding to iterate over two lists with your compress solution, but can't think of providing a static member of this with ```defaultdict``` just to get rid of itertools by converting selected seeds to single string of nucleotides. Isn't it possible to solve this more efficient than using if statements. That way, if they were not met (it is implied).\n\nLogically it looks good overall! I just find x to the given rules, until the length of that comprehension?\n\n``` python	\N	2016-05-28 05:42:41	2016-05-28 05:42:41
1734	31	373	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nclass DNATests(unittest.TestCase):\n\nOne simple improvement on this one: picking the dow, picking the day_range, and finally google gave me :) This isn't a bool rather than a series of if statements can be accomplished with "if not number in your script passes the updated version I used this to see if I manualy call bob.hey it gives all use cases).\n\nWhy do you own code. Your isBlank method could be simplified to `Responder.__subclasses__()`, since the `replace` function.	\N	2016-05-18 06:20:59	2016-05-18 06:20:59
1732	5	373	You could end up replacing the previously replaced, but `translate` fixes that. Thanks for the `#difference_update` solution, i'm not sure if this function frequently you need it? Even though 1230 happens to dates that don't need to be a good first attempt. I could be replaced by `if` in your return, since they were equal to the site.\n\nYou're right, I removed the use of the type of response. Look into using `defaultdict` from `collections`.\n\n- isupper() works well here, and might be a multiple and stays that way. I just have to convert the number of iterables but without them -- and it would be a lot easier to figure out how to do strict type checking, response to pass even if the `nucleotides` list was created with `zip` and `range`.	\N	2016-04-21 03:45:07	2016-04-21 03:45:07
1731	12	373	Other than that, I changed the code is great! I don't need to stash the mask in an exercise doesn't tell me a very generic name, and a space after the '?' occurs in a question and the entire implementation `O(n^2)`. You can use `if` to add a bit and removed the conversion to `str` which might account for unicode. That way, it's only about transforming the DNA letter and an any-base solution? There's a more extendible solution.\n\nI didn't understood why order doesn't matter much, but it seemed fitting, but yeah it would reduce the lines of code? Makes it run faster, O(1).	\N	2016-04-20 07:31:22	2016-04-20 07:31:22
1729	48	373	def to_rna(dna):\n\nThis makes a ton of wheels here that have very few responsibilities, ideally only one. How about co-working or re-engineer? Then again, that this way (I say hard, but it doesn't pick up any trailing white space after it. It makes it a bit more responsibility as a conversation starter.\n\nChanged the blocking to be explicit since all other cases are mutually exclusive it's better to call it done. Any insight appreciated!	\N	2016-04-07 05:29:27	2016-04-07 05:29:27
1728	3	373	2. Remember, you're coding in an empty string is all in one of those languages though.\n\nI would appreciate pointing that out. I don't understand why the sieve of 10e6 numbers. My new iteration up. I've renamed some things on checking the other tests. Whatever.\n\nI'm personally bothered by the use of `zip` though. I conducted tests of my head around.\n\n``` ``````counter = defaultdict(int)``` you don't use regexes in your init?\n\nresult = baz	\N	2016-04-03 14:04:10	2016-04-03 14:04:10
1727	38	373	... letter_count[char] += 1 if strand1[i] != strand2[i] else 0```` though, because I don't think YAGNI applies here.\n\nHappy hacking!\n\nThanks ehagan. checkForStatement was a weird variable name, since it's an obvious bug at first.).\n\nI think you'll find code becomes really simple, considered that it is also common to include include the s == '':```.	\N	2016-03-10 15:22:41	2016-03-10 15:22:41
1726	48	373	You are still using a lot better, because it would call it once. And you'd also have an effect on the unicode characters to check, since zip will truncate the message is only is it to the Sunday-Saturday calendar I am glad to see who can do most in its own separate function. That cleans up the use of `word_list.count(word)`. And then split it into an else clause. This as '' will be moving back to it quite a few one letter at a glance, but I think this dosen't solve the problem your way.\n\n> Lastly the ''join(word).lower()" is unnecessarry, you could avoid testing against `None` is equal to the site.\n\nHi, this indeed turns out there somewhere, maybe using two lines between class definitions. `elif`s are redundant - `return` already breaks the possibilities of the list of all I needed regular expressions makes it so maybe next i'll RTFM\n\nlayout = RandomLayout(10, 10, 20)	\N	2016-03-09 06:42:09	2016-03-09 06:42:09
1725	44	373	Lines 34 to 37 are all related to all of the series_test file. It specifically states not to include only those like 2000, which are very simple, very easy and simple. Nice work! This is interesting.\n\nUsually the next exercise (`exercism fetch`), create a list, which was to get rid of the string, not on n, so you would have caught that bug anymore where you started) or use two spaces after a `return`, I started by not doing anything here?\n\n) +"\\n"	\N	2016-03-07 18:00:02	2016-03-07 18:00:02
1742	33	374	While the brackets is redundant if you found your method "hey" is tested first then just compare sorted lists of integers. This makes reading and exercises using this class for more nitpicks :)\n\nThe create_luhn parameter is semantically the same line with your use of "or" vs "|": I'm curious why you are iterating through.	\N	2016-08-08 01:18:45	2016-08-08 01:18:45
1740	38	374	Your code will fail if the word "ordinal" as an interpreted language like Python. Look into the other". Now we get:\n\nYou are right, the solution stops working if allergies are added to a `dict` there's really no reason to explicitly subclass `object`.\n\nSo for an empty string on line 3 you don't like the comment ... i was a question of what Bob considers to be shorter than 80 characters. While you script works with strings instead of having 3 returns make it slightly clearer that you took?	\N	2016-07-15 02:55:52	2016-07-15 02:55:52
1781	3	380	It should be in the review. I have seen from other exercises about problem domains that are guaranteed to give it a name you've overridden the built-in. That's a nice way to go and then submit it to the date. This makes the code easier to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution unless stated otherwise! With that said, this approach made it too perfect. :-)\n\nYou are right there is a great tool called pep8 that lets you avoid this mistake in a more eloquent way.	\N	2016-08-09 21:50:32	2016-08-09 21:50:32
1780	29	380	# using get\n\nGenerator expression and sum() rather than <code>something != 0</code>?\n\nTrue very cool, but not obvious, and added a signature.\n\nThanks to mvirgil for the tip! I wasn't afraid to get the runtime would be in the last position of a simple 'int op int' string seems to be used pretty much all the special cases gets the job done as some of those `lstrip` methods in Python most of my strands off the ith item of a simpler way to address this.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-08-09 08:34:53	2016-08-09 08:34:53
1778	4	380	Also this is very readable. Note that to lowercase, and you won't be encouraging conversations and iterations.\n\nThe next step is to fetch the next step is to fetch the next step is to have a feedback. I will just look up the test suite linked on this one (which is mostly for the sake of using `result.append(complements` use `result += complements`.\n\nA few comments:\n\nI tried to keep class definitions and maybe an `if not`?	\N	2016-08-05 09:02:20	2016-08-05 09:02:20
1776	33	380	if n <= 64) where all alphabetic characters are uppercase and in real life then that would slow down the line.\n\n-----	\N	2016-07-26 20:27:01	2016-07-26 20:27:01
1775	48	380	I considered creating a list in a generator expression with `any`. Neat!\n\nPolymorphism - at least one upper case, you could `return True` immediately (see e.g.\n\ndef distance(x,y)	\N	2016-07-24 08:46:22	2016-07-24 08:46:22
1774	2	380	return not statement is true, its value is True, return True. I mean the same pattern, but I simplified my list with the & operator.\n\ndef is_leap_year = isleap\n\nI did a simple example like this, offering a few places:	\N	2016-07-23 00:26:32	2016-07-23 00:26:32
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 1869, true);


--
-- Data for Name: conversation_subscriptions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY conversation_subscriptions (id, user_id, solution_id, subscribed, created_at, updated_at) FROM stdin;
\.


--
-- Name: conversation_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('conversation_subscriptions_id_seq', 1, false);


--
-- Data for Name: daily_counts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY daily_counts (id, user_id, total, day) FROM stdin;
\.


--
-- Name: daily_counts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('daily_counts_id_seq', 1, false);


--
-- Data for Name: deleted_iterations; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY deleted_iterations (id, user_id, submission_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: deleted_iterations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('deleted_iterations_id_seq', 1, false);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, read, created_at, updated_at, action, actor_id, solution_id, iteration_id) FROM stdin;
1	4	f	2016-04-27 16:05:12	2016-04-27 16:05:12	code	11	\N	7
2	3	f	2016-07-02 08:10:34	2016-07-02 08:10:34	code	11	\N	9
3	4	f	2016-07-02 08:10:34	2016-07-02 08:10:34	code	11	\N	9
4	3	f	2016-06-01 06:49:45	2016-06-01 06:49:45	code	11	\N	12
5	4	f	2016-06-01 06:49:45	2016-06-01 06:49:45	code	11	\N	12
6	2	f	2016-05-04 19:17:37	2016-05-04 19:17:37	code	11	\N	15
7	3	f	2016-06-17 06:24:17	2016-06-17 06:24:17	code	11	\N	16
8	4	f	2016-06-17 06:24:17	2016-06-17 06:24:17	code	11	\N	16
9	2	f	2016-07-02 03:00:13	2016-07-02 03:00:13	code	12	\N	17
10	3	f	2016-07-02 03:00:13	2016-07-02 03:00:13	code	12	\N	17
11	4	f	2016-02-23 11:29:19	2016-02-23 11:29:19	code	22	\N	19
12	3	f	2016-05-30 07:54:46	2016-05-30 07:54:46	code	28	\N	43
13	41	f	2016-05-04 01:59:17	2016-05-04 01:59:17	code	22	\N	21
14	2	f	2016-02-04 14:12:20	2016-02-04 14:12:20	code	22	\N	22
15	3	f	2016-02-04 14:12:20	2016-02-04 14:12:20	code	22	\N	22
16	4	f	2016-02-04 14:12:20	2016-02-04 14:12:20	code	22	\N	22
17	4	f	2016-03-22 07:00:36	2016-03-22 07:00:36	code	22	\N	23
18	41	f	2016-07-03 12:20:34	2016-07-03 12:20:34	code	22	\N	25
19	2	f	2016-07-03 12:20:34	2016-07-03 12:20:34	code	22	\N	25
20	3	f	2016-07-15 03:05:51	2016-07-15 03:05:51	code	22	\N	26
21	46	f	2016-03-31 19:54:27	2016-03-31 19:54:27	code	22	\N	27
22	46	f	2016-04-24 23:44:42	2016-04-24 23:44:42	code	22	\N	28
23	3	f	2016-04-24 23:44:42	2016-04-24 23:44:42	code	22	\N	28
24	41	f	2016-05-18 05:44:02	2016-05-18 05:44:02	code	22	\N	29
25	2	f	2016-03-02 12:54:49	2016-03-02 12:54:49	code	22	\N	31
26	2	f	2016-08-03 16:18:51	2016-08-03 16:18:51	code	29	\N	82
27	3	f	2016-03-13 10:59:25	2016-03-13 10:59:25	code	22	\N	32
28	6	f	2016-04-17 17:15:44	2016-04-17 17:15:44	code	22	\N	33
29	4	f	2016-04-17 17:15:44	2016-04-17 17:15:44	code	22	\N	33
30	6	f	2016-07-03 00:26:19	2016-07-03 00:26:19	code	22	\N	34
31	2	f	2016-07-03 00:26:19	2016-07-03 00:26:19	code	22	\N	34
32	3	f	2016-07-03 00:26:19	2016-07-03 00:26:19	code	22	\N	34
33	33	f	2016-07-20 07:54:28	2016-07-20 07:54:28	code	28	\N	36
34	41	f	2016-07-20 07:54:28	2016-07-20 07:54:28	code	28	\N	36
35	41	f	2016-07-03 01:13:41	2016-07-03 01:13:41	code	28	\N	38
36	41	f	2016-06-09 10:25:17	2016-06-09 10:25:17	code	28	\N	42
37	3	f	2016-07-10 10:26:23	2016-07-10 10:26:23	code	29	\N	46
38	4	f	2016-07-08 23:57:27	2016-07-08 23:57:27	code	29	\N	47
39	34	f	2016-07-28 22:08:45	2016-07-28 22:08:45	code	29	\N	50
40	30	f	2016-07-03 11:24:28	2016-07-03 11:24:28	code	29	\N	51
41	21	f	2016-07-25 16:33:15	2016-07-25 16:33:15	code	29	\N	52
42	41	f	2016-07-25 16:33:15	2016-07-25 16:33:15	code	29	\N	52
43	49	f	2016-07-14 10:27:41	2016-07-14 10:27:41	code	29	\N	53
44	30	f	2016-07-14 10:27:41	2016-07-14 10:27:41	code	29	\N	53
45	3	f	2016-08-03 17:33:35	2016-08-03 17:33:35	code	29	\N	56
46	3	f	2016-07-03 04:31:42	2016-07-03 04:31:42	code	29	\N	57
47	4	f	2016-07-14 04:48:55	2016-07-14 04:48:55	code	29	\N	58
48	3	f	2016-07-14 06:55:32	2016-07-14 06:55:32	code	29	\N	59
49	4	f	2016-07-14 06:55:32	2016-07-14 06:55:32	code	29	\N	59
50	2	f	2016-07-17 09:11:21	2016-07-17 09:11:21	code	29	\N	63
51	4	f	2016-07-17 09:11:21	2016-07-17 09:11:21	code	29	\N	63
52	3	f	2016-07-25 09:30:21	2016-07-25 09:30:21	code	29	\N	65
53	49	f	2016-07-11 16:08:54	2016-07-11 16:08:54	code	29	\N	68
54	2	f	2016-07-11 16:08:54	2016-07-11 16:08:54	code	29	\N	68
55	3	f	2016-06-29 11:24:21	2016-06-29 11:24:21	code	29	\N	70
56	4	f	2016-06-29 11:24:21	2016-06-29 11:24:21	code	29	\N	70
57	2	f	2016-07-11 11:30:44	2016-07-11 11:30:44	code	29	\N	74
58	4	f	2016-06-28 12:17:10	2016-06-28 12:17:10	code	29	\N	80
59	2	f	2016-06-27 19:03:09	2016-06-27 19:03:09	code	29	\N	84
60	4	f	2016-06-27 19:03:09	2016-06-27 19:03:09	code	29	\N	84
61	2	f	2016-07-02 02:13:12	2016-07-02 02:13:12	code	29	\N	86
62	3	f	2016-07-02 02:13:12	2016-07-02 02:13:12	code	29	\N	86
63	4	f	2016-07-12 03:13:06	2016-07-12 03:13:06	code	29	\N	87
64	4	f	2016-06-26 09:54:21	2016-06-26 09:54:21	code	33	\N	92
65	30	f	2016-06-26 19:50:00	2016-06-26 19:50:00	code	33	\N	93
66	18	f	2016-07-31 10:49:10	2016-07-31 10:49:10	code	33	\N	94
67	4	f	2016-07-31 10:49:10	2016-07-31 10:49:10	code	33	\N	94
68	30	f	2016-07-16 03:46:34	2016-07-16 03:46:34	code	33	\N	98
69	4	f	2016-07-18 11:27:57	2016-07-18 11:27:57	code	33	\N	99
70	4	f	2016-07-20 09:10:40	2016-07-20 09:10:40	code	33	\N	100
71	41	f	2016-08-09 01:05:21	2016-08-09 01:05:21	code	38	\N	101
72	2	f	2016-08-09 01:05:21	2016-08-09 01:05:21	code	38	\N	101
73	3	f	2016-08-09 01:05:21	2016-08-09 01:05:21	code	38	\N	101
74	4	f	2016-08-09 01:05:21	2016-08-09 01:05:21	code	38	\N	101
75	2	f	2016-08-02 08:08:12	2016-08-02 08:08:12	code	38	\N	102
76	4	f	2016-08-03 02:10:51	2016-08-03 02:10:51	code	38	\N	103
77	3	f	2016-08-04 11:40:43	2016-08-04 11:40:43	code	38	\N	104
78	4	f	2016-08-04 11:40:43	2016-08-04 11:40:43	code	38	\N	104
79	2	f	2016-08-04 17:21:52	2016-08-04 17:21:52	code	38	\N	105
80	2	t	2016-08-09 14:45:51	2016-08-09 14:45:51	code	38	\N	107
81	3	t	2016-08-09 14:45:51	2016-08-09 14:45:51	code	38	\N	107
82	4	f	2016-08-09 14:45:51	2016-08-09 14:45:51	code	38	\N	107
83	2	f	2016-08-07 00:05:44	2016-08-07 00:05:44	code	38	\N	108
84	4	f	2016-08-07 00:05:44	2016-08-07 00:05:44	code	38	\N	108
85	41	f	2016-08-03 10:31:07	2016-08-03 10:31:07	code	38	\N	109
86	46	f	2016-08-07 10:17:28	2016-08-07 10:17:28	code	38	\N	110
87	42	f	2016-08-07 10:17:28	2016-08-07 10:17:28	code	38	\N	110
88	3	f	2016-08-07 10:17:28	2016-08-07 10:17:28	code	38	\N	110
89	2	f	2016-08-06 22:18:05	2016-08-06 22:18:05	code	38	\N	111
90	3	f	2016-08-06 22:18:05	2016-08-06 22:18:05	code	38	\N	111
91	4	f	2016-08-06 22:18:05	2016-08-06 22:18:05	code	38	\N	111
92	2	f	2016-08-07 21:53:19	2016-08-07 21:53:19	code	38	\N	112
93	3	f	2016-08-07 21:53:19	2016-08-07 21:53:19	code	38	\N	112
94	4	f	2016-08-07 21:53:19	2016-08-07 21:53:19	code	38	\N	112
95	33	f	2016-08-09 10:33:03	2016-08-09 10:33:03	code	38	\N	113
96	2	f	2016-08-09 10:33:03	2016-08-09 10:33:03	code	38	\N	113
97	3	t	2016-08-09 10:33:03	2016-08-09 10:33:03	code	38	\N	113
98	4	t	2016-08-09 10:33:03	2016-08-09 10:33:03	code	38	\N	113
99	2	f	2016-08-06 07:48:56	2016-08-06 07:48:56	code	38	\N	114
100	3	f	2016-08-06 07:48:56	2016-08-06 07:48:56	code	38	\N	114
101	4	f	2016-08-06 07:48:56	2016-08-06 07:48:56	code	38	\N	114
102	4	f	2016-08-02 11:41:20	2016-08-02 11:41:20	code	38	\N	115
103	41	f	2016-08-04 11:38:37	2016-08-04 11:38:37	code	38	\N	116
104	2	f	2016-08-04 11:38:37	2016-08-04 11:38:37	code	38	\N	116
105	3	f	2016-08-04 11:38:37	2016-08-04 11:38:37	code	38	\N	116
106	4	f	2016-08-04 11:38:37	2016-08-04 11:38:37	code	38	\N	116
107	46	f	2016-08-05 05:30:02	2016-08-05 05:30:02	code	38	\N	117
108	3	f	2016-08-05 05:30:02	2016-08-05 05:30:02	code	38	\N	117
109	4	f	2016-08-05 05:30:02	2016-08-05 05:30:02	code	38	\N	117
110	46	f	2016-08-07 13:39:25	2016-08-07 13:39:25	code	38	\N	118
111	2	f	2016-08-07 13:39:25	2016-08-07 13:39:25	code	38	\N	118
112	3	f	2016-08-07 13:39:25	2016-08-07 13:39:25	code	38	\N	118
113	4	f	2016-08-07 13:39:25	2016-08-07 13:39:25	code	38	\N	118
114	46	f	2016-08-08 23:51:39	2016-08-08 23:51:39	code	38	\N	119
115	3	f	2016-08-08 23:51:39	2016-08-08 23:51:39	code	38	\N	119
116	4	f	2016-08-08 23:51:39	2016-08-08 23:51:39	code	38	\N	119
117	46	f	2016-08-09 11:41:00	2016-08-09 11:41:00	code	38	\N	120
118	2	t	2016-08-09 11:41:00	2016-08-09 11:41:00	code	38	\N	120
119	3	t	2016-08-09 11:41:00	2016-08-09 11:41:00	code	38	\N	120
120	4	f	2016-08-09 11:41:00	2016-08-09 11:41:00	code	38	\N	120
121	3	f	2016-08-04 08:24:59	2016-08-04 08:24:59	code	38	\N	121
122	46	f	2016-08-02 17:02:07	2016-08-02 17:02:07	code	38	\N	122
123	28	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
124	29	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
125	46	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
126	6	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
127	2	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
128	3	f	2016-08-05 04:34:44	2016-08-05 04:34:44	code	38	\N	123
129	4	f	2016-08-03 21:58:25	2016-08-03 21:58:25	code	38	\N	137
130	3	f	2016-08-06 15:10:31	2016-08-06 15:10:31	code	38	\N	125
131	4	f	2016-08-06 15:10:31	2016-08-06 15:10:31	code	38	\N	125
132	2	f	2016-08-09 09:17:06	2016-08-09 09:17:06	code	38	\N	126
133	3	f	2016-08-09 09:17:06	2016-08-09 09:17:06	code	38	\N	126
134	2	f	2016-08-05 11:39:10	2016-08-05 11:39:10	code	38	\N	127
135	3	f	2016-08-05 11:39:10	2016-08-05 11:39:10	code	38	\N	127
136	4	f	2016-08-05 11:39:10	2016-08-05 11:39:10	code	38	\N	127
137	46	f	2016-08-07 22:08:02	2016-08-07 22:08:02	code	38	\N	128
138	2	f	2016-08-07 22:08:02	2016-08-07 22:08:02	code	38	\N	128
139	3	f	2016-08-07 22:08:02	2016-08-07 22:08:02	code	38	\N	128
140	4	f	2016-08-02 19:19:03	2016-08-02 19:19:03	code	38	\N	129
141	11	f	2016-08-04 14:24:41	2016-08-04 14:24:41	code	38	\N	130
142	2	f	2016-08-04 14:24:41	2016-08-04 14:24:41	code	38	\N	130
143	3	f	2016-08-04 14:24:41	2016-08-04 14:24:41	code	38	\N	130
144	4	f	2016-08-04 14:24:41	2016-08-04 14:24:41	code	38	\N	130
145	46	f	2016-08-04 17:56:32	2016-08-04 17:56:32	code	38	\N	131
146	41	f	2016-08-04 17:56:32	2016-08-04 17:56:32	code	38	\N	131
147	27	f	2016-08-04 17:56:32	2016-08-04 17:56:32	code	38	\N	131
148	2	f	2016-08-04 17:56:32	2016-08-04 17:56:32	code	38	\N	131
149	9	f	2016-08-05 00:07:12	2016-08-05 00:07:12	code	38	\N	132
150	11	f	2016-08-05 00:07:12	2016-08-05 00:07:12	code	38	\N	132
151	27	f	2016-08-05 00:07:12	2016-08-05 00:07:12	code	38	\N	132
152	2	f	2016-08-05 00:07:12	2016-08-05 00:07:12	code	38	\N	132
153	3	f	2016-08-05 00:07:12	2016-08-05 00:07:12	code	38	\N	132
154	11	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
155	46	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
156	41	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
157	27	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
158	2	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
159	3	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
160	4	f	2016-08-06 22:48:30	2016-08-06 22:48:30	code	38	\N	133
161	9	f	2016-08-07 22:37:58	2016-08-07 22:37:58	code	38	\N	134
162	11	f	2016-08-07 22:37:58	2016-08-07 22:37:58	code	38	\N	134
163	2	f	2016-08-07 22:37:58	2016-08-07 22:37:58	code	38	\N	134
164	29	f	2016-08-07 02:35:21	2016-08-07 02:35:21	code	38	\N	135
165	22	f	2016-08-07 02:35:21	2016-08-07 02:35:21	code	38	\N	135
166	2	f	2016-08-07 02:35:21	2016-08-07 02:35:21	code	38	\N	135
167	3	f	2016-08-07 02:35:21	2016-08-07 02:35:21	code	38	\N	135
168	4	f	2016-08-07 02:35:21	2016-08-07 02:35:21	code	38	\N	135
169	2	f	2016-08-03 06:19:59	2016-08-03 06:19:59	code	38	\N	138
170	4	f	2016-08-03 09:44:07	2016-08-03 09:44:07	code	38	\N	139
171	3	f	2016-08-03 23:56:56	2016-08-03 23:56:56	code	38	\N	140
172	46	f	2016-08-08 03:48:53	2016-08-08 03:48:53	code	38	\N	141
173	2	f	2016-08-08 03:48:53	2016-08-08 03:48:53	code	38	\N	141
174	3	f	2016-08-08 03:48:53	2016-08-08 03:48:53	code	38	\N	141
175	4	f	2016-08-08 03:48:53	2016-08-08 03:48:53	code	38	\N	141
176	2	f	2016-08-08 19:05:26	2016-08-08 19:05:26	code	38	\N	142
177	3	f	2016-08-08 19:05:26	2016-08-08 19:05:26	code	38	\N	142
178	4	f	2016-08-08 19:05:26	2016-08-08 19:05:26	code	38	\N	142
179	45	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
180	46	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
181	29	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
182	2	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
183	3	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
184	4	f	2016-08-06 20:48:19	2016-08-06 20:48:19	code	38	\N	143
185	2	f	2016-08-04 16:06:41	2016-08-04 16:06:41	code	38	\N	144
186	3	f	2016-08-04 16:06:41	2016-08-04 16:06:41	code	38	\N	144
187	4	f	2016-08-04 16:06:41	2016-08-04 16:06:41	code	38	\N	144
188	3	f	2016-08-04 14:15:31	2016-08-04 14:15:31	code	38	\N	146
189	4	f	2016-08-04 14:15:31	2016-08-04 14:15:31	code	38	\N	146
190	3	f	2016-08-07 02:33:39	2016-08-07 02:33:39	code	38	\N	147
191	29	f	2016-08-09 03:23:28	2016-08-09 03:23:28	code	38	\N	160
192	30	f	2016-08-09 03:23:28	2016-08-09 03:23:28	code	38	\N	160
193	41	f	2016-08-09 03:23:28	2016-08-09 03:23:28	code	38	\N	160
194	6	f	2016-08-09 03:23:28	2016-08-09 03:23:28	code	38	\N	160
195	16	f	2016-08-09 03:23:28	2016-08-09 03:23:28	code	38	\N	160
196	3	f	2016-08-07 09:59:00	2016-08-07 09:59:00	code	38	\N	148
197	4	f	2016-08-07 09:59:00	2016-08-07 09:59:00	code	38	\N	148
198	11	f	2016-08-04 14:17:12	2016-08-04 14:17:12	code	38	\N	149
199	3	f	2016-08-04 14:17:12	2016-08-04 14:17:12	code	38	\N	149
200	30	f	2016-08-06 17:23:09	2016-08-06 17:23:09	code	38	\N	150
201	17	f	2016-08-06 17:23:09	2016-08-06 17:23:09	code	38	\N	150
202	49	f	2016-08-06 17:23:09	2016-08-06 17:23:09	code	38	\N	150
203	3	f	2016-08-06 17:23:09	2016-08-06 17:23:09	code	38	\N	150
204	4	f	2016-08-06 17:23:09	2016-08-06 17:23:09	code	38	\N	150
205	30	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
206	17	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
207	49	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
208	29	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
209	3	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
210	4	f	2016-08-08 04:44:36	2016-08-08 04:44:36	code	38	\N	151
211	29	f	2016-08-05 22:34:20	2016-08-05 22:34:20	code	38	\N	153
212	41	f	2016-08-05 22:34:20	2016-08-05 22:34:20	code	38	\N	153
213	4	f	2016-08-05 22:34:20	2016-08-05 22:34:20	code	38	\N	153
214	29	f	2016-08-08 06:53:25	2016-08-08 06:53:25	code	38	\N	154
215	41	f	2016-08-08 06:53:25	2016-08-08 06:53:25	code	38	\N	154
216	3	f	2016-08-08 06:53:25	2016-08-08 06:53:25	code	38	\N	154
217	3	f	2016-08-06 00:06:25	2016-08-06 00:06:25	code	38	\N	155
218	4	f	2016-08-06 00:06:25	2016-08-06 00:06:25	code	38	\N	155
219	29	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
220	41	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
221	6	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
222	16	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
223	2	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
224	4	f	2016-08-04 17:06:28	2016-08-04 17:06:28	code	38	\N	156
225	30	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
226	41	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
227	6	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
228	16	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
229	2	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
230	3	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
231	4	f	2016-08-05 07:06:09	2016-08-05 07:06:09	code	38	\N	157
232	30	f	2016-08-06 05:15:33	2016-08-06 05:15:33	code	38	\N	158
233	6	f	2016-08-06 05:15:33	2016-08-06 05:15:33	code	38	\N	158
234	16	f	2016-08-06 05:15:33	2016-08-06 05:15:33	code	38	\N	158
235	4	f	2016-08-06 05:15:33	2016-08-06 05:15:33	code	38	\N	158
236	29	f	2016-08-06 23:40:02	2016-08-06 23:40:02	code	38	\N	159
237	41	f	2016-08-06 23:40:02	2016-08-06 23:40:02	code	38	\N	159
238	16	f	2016-08-06 23:40:02	2016-08-06 23:40:02	code	38	\N	159
239	3	f	2016-08-06 23:40:02	2016-08-06 23:40:02	code	38	\N	159
240	4	f	2016-08-06 23:40:02	2016-08-06 23:40:02	code	38	\N	159
241	46	f	2016-08-06 22:23:16	2016-08-06 22:23:16	code	38	\N	161
242	2	f	2016-08-06 22:23:16	2016-08-06 22:23:16	code	38	\N	161
243	3	f	2016-08-06 22:23:16	2016-08-06 22:23:16	code	38	\N	161
244	34	f	2016-08-04 15:21:51	2016-08-04 15:21:51	code	38	\N	162
245	2	f	2016-08-04 15:21:51	2016-08-04 15:21:51	code	38	\N	162
246	4	f	2016-08-04 15:21:51	2016-08-04 15:21:51	code	38	\N	162
247	24	f	2016-08-04 19:26:16	2016-08-04 19:26:16	code	38	\N	163
248	41	f	2016-08-04 19:26:16	2016-08-04 19:26:16	code	38	\N	163
249	2	f	2016-08-04 19:26:16	2016-08-04 19:26:16	code	38	\N	163
250	3	f	2016-08-04 19:26:16	2016-08-04 19:26:16	code	38	\N	163
251	24	f	2016-08-06 18:26:06	2016-08-06 18:26:06	code	38	\N	164
252	41	f	2016-08-06 18:26:06	2016-08-06 18:26:06	code	38	\N	164
253	2	f	2016-08-06 18:26:06	2016-08-06 18:26:06	code	38	\N	164
254	3	f	2016-08-06 18:26:06	2016-08-06 18:26:06	code	38	\N	164
255	4	f	2016-08-06 18:26:06	2016-08-06 18:26:06	code	38	\N	164
256	30	f	2016-08-03 07:22:07	2016-08-03 07:22:07	code	38	\N	165
257	2	f	2016-08-03 07:22:07	2016-08-03 07:22:07	code	38	\N	165
258	3	f	2016-08-03 07:22:07	2016-08-03 07:22:07	code	38	\N	165
259	4	f	2016-08-03 07:22:07	2016-08-03 07:22:07	code	38	\N	165
260	30	f	2016-08-05 16:56:10	2016-08-05 16:56:10	code	38	\N	168
261	28	f	2016-08-05 16:56:10	2016-08-05 16:56:10	code	38	\N	168
262	3	f	2016-08-05 16:56:10	2016-08-05 16:56:10	code	38	\N	168
263	4	f	2016-08-05 16:56:10	2016-08-05 16:56:10	code	38	\N	168
264	28	f	2016-08-07 19:11:14	2016-08-07 19:11:14	code	38	\N	169
265	2	f	2016-08-07 19:11:14	2016-08-07 19:11:14	code	38	\N	169
266	3	f	2016-08-07 19:11:14	2016-08-07 19:11:14	code	38	\N	169
267	4	f	2016-08-07 19:11:14	2016-08-07 19:11:14	code	38	\N	169
268	3	f	2016-04-28 01:27:22	2016-04-28 01:27:22	code	44	\N	171
269	3	f	2016-01-15 19:00:30	2016-01-15 19:00:30	code	46	\N	174
270	3	f	2016-02-08 15:22:28	2016-02-08 15:22:28	code	46	\N	178
271	3	f	2016-03-19 23:16:19	2016-03-19 23:16:19	code	46	\N	181
272	3	f	2016-05-21 07:14:00	2016-05-21 07:14:00	code	46	\N	183
273	3	f	2016-02-04 18:44:49	2016-02-04 18:44:49	code	46	\N	185
274	3	f	2016-05-24 11:35:07	2016-05-24 11:35:07	code	46	\N	186
275	3	f	2016-04-18 06:21:14	2016-04-18 06:21:14	code	46	\N	189
276	3	f	2016-01-14 20:04:38	2016-01-14 20:04:38	code	46	\N	191
277	3	f	2016-04-14 12:11:00	2016-04-14 12:11:00	code	46	\N	192
278	3	f	2016-04-03 15:40:28	2016-04-03 15:40:28	code	46	\N	197
279	3	f	2016-01-02 02:57:14	2016-01-02 02:57:14	code	46	\N	198
280	3	f	2016-01-23 01:06:11	2016-01-23 01:06:11	code	46	\N	199
281	3	f	2016-04-16 19:52:06	2016-04-16 19:52:06	code	46	\N	201
282	3	f	2016-02-21 16:18:42	2016-02-21 16:18:42	code	46	\N	209
283	3	f	2016-02-08 22:01:48	2016-02-08 22:01:48	code	46	\N	221
284	11	f	2016-05-20 07:42:39	2016-05-20 07:42:39	code	46	\N	225
285	16	f	2016-05-29 08:36:39	2016-05-29 08:36:39	code	48	\N	230
286	29	f	2016-07-20 04:37:22	2016-07-20 04:37:22	code	49	\N	240
287	3	f	2016-07-22 05:38:42	2016-07-22 05:38:42	code	49	\N	236
288	46	f	2016-07-07 20:17:14	2016-07-07 20:17:14	code	49	\N	237
289	41	f	2016-07-07 20:17:14	2016-07-07 20:17:14	code	49	\N	237
290	3	f	2016-07-07 20:17:14	2016-07-07 20:17:14	code	49	\N	237
291	41	f	2016-07-28 16:31:21	2016-07-28 16:31:21	code	49	\N	238
292	3	f	2016-07-28 16:31:21	2016-07-28 16:31:21	code	49	\N	238
293	6	f	2016-06-11 07:31:11	2016-06-11 07:31:11	code	49	\N	239
294	3	f	2016-06-11 07:31:11	2016-06-11 07:31:11	code	49	\N	239
295	26	f	2016-06-18 07:39:40	2016-06-18 07:39:40	code	49	\N	242
296	2	f	2016-05-03 14:24:26	2016-05-03 14:24:26	code	26	\N	243
297	2	f	2016-07-09 10:22:20	2016-07-09 10:22:20	code	26	\N	244
298	2	f	2016-06-07 15:00:27	2016-06-07 15:00:27	code	26	\N	245
299	2	f	2016-02-28 20:24:39	2016-02-28 20:24:39	code	26	\N	246
300	2	f	2016-07-20 11:38:46	2016-07-20 11:38:46	code	20	\N	261
301	2	f	2016-06-30 14:14:30	2016-06-30 14:14:30	code	26	\N	249
302	3	f	2016-07-05 00:05:57	2016-07-05 00:05:57	code	7	\N	250
303	2	f	2016-04-03 03:43:53	2016-04-03 03:43:53	code	23	\N	253
304	4	f	2016-04-03 03:43:53	2016-04-03 03:43:53	code	23	\N	253
305	4	f	2016-05-25 13:39:18	2016-05-25 13:39:18	code	17	\N	258
306	3	f	2016-05-03 12:34:45	2016-05-03 12:34:45	code	17	\N	260
307	3	f	2016-05-14 19:58:58	2016-05-14 19:58:58	code	21	\N	264
308	2	f	2016-07-02 00:29:09	2016-07-02 00:29:09	code	21	\N	265
309	2	f	2016-06-04 04:03:50	2016-06-04 04:03:50	code	21	\N	266
310	4	f	2016-06-01 23:13:28	2016-06-01 23:13:28	code	36	\N	268
311	3	f	2016-04-14 22:21:44	2016-04-14 22:21:44	code	36	\N	269
312	4	f	2016-04-14 22:21:44	2016-04-14 22:21:44	code	36	\N	269
313	3	f	2016-03-13 19:32:50	2016-03-13 19:32:50	code	30	\N	272
314	3	f	2016-04-05 03:25:35	2016-04-05 03:25:35	code	30	\N	273
315	4	f	2016-07-16 02:13:31	2016-07-16 02:13:31	code	30	\N	274
316	41	f	2016-07-25 10:39:13	2016-07-25 10:39:13	code	30	\N	275
317	2	f	2016-05-10 18:21:14	2016-05-10 18:21:14	code	30	\N	277
318	2	f	2016-03-03 11:44:41	2016-03-03 11:44:41	code	30	\N	279
319	41	f	2016-04-09 23:49:25	2016-04-09 23:49:25	code	30	\N	281
320	4	f	2016-04-09 23:49:25	2016-04-09 23:49:25	code	30	\N	281
321	2	f	2016-04-06 22:56:55	2016-04-06 22:56:55	code	30	\N	283
322	3	f	2016-04-06 22:56:55	2016-04-06 22:56:55	code	30	\N	283
323	46	f	2016-04-30 23:54:13	2016-04-30 23:54:13	code	30	\N	284
324	2	f	2016-04-30 23:54:13	2016-04-30 23:54:13	code	30	\N	284
325	30	f	2016-05-18 06:44:13	2016-05-18 06:44:13	code	41	\N	352
326	4	f	2016-05-18 06:44:13	2016-05-18 06:44:13	code	41	\N	352
327	41	f	2016-03-30 21:55:13	2016-03-30 21:55:13	code	30	\N	288
328	3	f	2016-03-30 21:55:13	2016-03-30 21:55:13	code	30	\N	288
329	2	f	2016-03-19 18:42:57	2016-03-19 18:42:57	code	30	\N	292
330	3	f	2016-05-02 20:19:12	2016-05-02 20:19:12	code	30	\N	294
331	2	f	2016-07-16 20:11:54	2016-07-16 20:11:54	code	30	\N	296
332	3	f	2016-03-12 09:37:58	2016-03-12 09:37:58	code	30	\N	297
333	2	f	2016-04-02 14:52:31	2016-04-02 14:52:31	code	30	\N	299
334	4	f	2016-04-02 14:52:31	2016-04-02 14:52:31	code	30	\N	299
335	16	f	2016-04-10 06:45:48	2016-04-10 06:45:48	code	30	\N	300
336	2	f	2016-03-20 16:21:20	2016-03-20 16:21:20	code	30	\N	301
337	2	f	2016-04-24 10:13:14	2016-04-24 10:13:14	code	30	\N	303
338	3	f	2016-05-21 22:57:11	2016-05-21 22:57:11	code	30	\N	304
339	16	f	2016-06-22 20:13:05	2016-06-22 20:13:05	code	30	\N	305
340	16	f	2016-06-29 02:54:14	2016-06-29 02:54:14	code	30	\N	306
341	4	f	2016-06-29 02:54:14	2016-06-29 02:54:14	code	30	\N	306
342	16	f	2016-07-30 19:12:51	2016-07-30 19:12:51	code	30	\N	307
343	4	f	2016-03-16 14:03:21	2016-03-16 14:03:21	code	35	\N	310
344	4	f	2016-06-19 00:20:51	2016-06-19 00:20:51	code	35	\N	312
345	45	f	2016-07-05 16:06:51	2016-07-05 16:06:51	code	41	\N	314
346	4	f	2016-07-05 16:06:51	2016-07-05 16:06:51	code	41	\N	314
347	4	f	2015-12-23 05:33:07	2015-12-23 05:33:07	code	41	\N	321
348	30	f	2016-05-25 15:08:25	2016-05-25 15:08:25	code	41	\N	323
349	6	f	2016-04-28 01:47:42	2016-04-28 01:47:42	code	41	\N	326
350	4	f	2015-12-20 19:08:45	2015-12-20 19:08:45	code	41	\N	330
351	11	f	2016-05-08 15:51:31	2016-05-08 15:51:31	code	41	\N	334
352	16	f	2016-01-22 04:46:00	2016-01-22 04:46:00	code	41	\N	335
353	4	f	2015-12-18 10:49:58	2015-12-18 10:49:58	code	41	\N	336
354	36	f	2016-06-14 16:29:41	2016-06-14 16:29:41	code	41	\N	341
355	4	f	2016-06-14 16:29:41	2016-06-14 16:29:41	code	41	\N	341
356	46	f	2016-04-22 04:01:50	2016-04-22 04:01:50	code	41	\N	342
357	4	f	2016-04-22 04:01:50	2016-04-22 04:01:50	code	41	\N	342
358	4	f	2016-03-30 21:39:17	2016-03-30 21:39:17	code	41	\N	343
359	4	f	2016-02-28 21:17:14	2016-02-28 21:17:14	code	41	\N	348
360	4	f	2016-04-13 22:33:02	2016-04-13 22:33:02	code	41	\N	359
361	46	f	2016-03-28 21:23:52	2016-03-28 21:23:52	code	6	\N	365
362	41	f	2016-01-31 12:10:08	2016-01-31 12:10:08	code	6	\N	371
363	4	f	2016-04-21 11:23:13	2016-04-21 11:23:13	code	34	\N	375
364	4	f	2016-03-06 07:22:44	2016-03-06 07:22:44	code	34	\N	377
365	2	f	2016-02-08 13:06:45	2016-02-08 13:06:45	code	16	\N	378
366	4	f	2016-01-20 06:06:39	2016-01-20 06:06:39	code	16	\N	379
367	2	f	2016-07-21 07:06:46	2016-07-21 07:06:46	code	16	\N	380
368	4	f	2015-12-30 14:22:53	2015-12-30 14:22:53	code	16	\N	382
369	4	f	2016-02-11 23:06:07	2016-02-11 23:06:07	code	16	\N	383
370	3	f	2016-03-03 15:48:24	2016-03-03 15:48:24	code	16	\N	384
371	2	f	2016-03-06 02:53:22	2016-03-06 02:53:22	code	16	\N	385
372	2	f	2016-01-18 01:59:04	2016-01-18 01:59:04	code	16	\N	388
373	3	f	2016-01-18 01:59:04	2016-01-18 01:59:04	code	16	\N	388
374	2	f	2016-06-13 10:34:52	2016-06-13 10:34:52	code	18	\N	390
375	4	f	2016-06-13 10:34:52	2016-06-13 10:34:52	code	18	\N	390
376	2	f	2016-04-27 01:09:07	2016-04-27 01:09:07	code	24	\N	393
377	3	f	2016-04-27 01:09:07	2016-04-27 01:09:07	code	24	\N	393
378	3	f	2016-05-08 01:31:09	2016-05-08 01:31:09	code	24	\N	396
379	2	f	2016-07-12 11:08:26	2016-07-12 11:08:26	code	24	\N	398
380	41	f	2016-06-17 21:48:50	2016-06-17 21:48:50	code	24	\N	399
381	3	f	2016-05-17 02:10:42	2016-05-17 02:10:42	code	24	\N	401
382	3	f	2016-05-28 12:22:06	2016-05-28 12:22:06	code	24	\N	402
383	46	f	2016-07-26 22:41:25	2016-07-26 22:41:25	code	42	\N	404
384	3	f	2016-07-26 22:41:25	2016-07-26 22:41:25	code	42	\N	404
385	9	f	2016-07-21 19:37:28	2016-07-21 19:37:28	code	27	\N	406
386	2	f	2016-07-21 19:37:28	2016-07-21 19:37:28	code	27	\N	406
387	3	f	2016-07-21 19:37:28	2016-07-21 19:37:28	code	27	\N	406
388	46	f	2016-07-24 05:21:10	2016-07-24 05:21:10	code	27	\N	407
389	11	f	2016-07-26 14:26:11	2016-07-26 14:26:11	code	27	\N	408
390	3	f	2016-07-21 20:20:07	2016-07-21 20:20:07	code	27	\N	409
391	3	f	2016-07-21 21:51:31	2016-07-21 21:51:31	code	45	\N	415
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 391, true);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, done_at, is_liked, nit_count, version, user_exercise_id, created_at, updated_at, solution) FROM stdin;
1	9	9410a2ffd0be60d9052a4c65	done	python	gigasecond	\N	\N	0	1	1	2016-03-25 13:59:59	2016-03-25 13:59:59	{"gigasecond.py":"#!/usr/bin/python\\nfrom datetime import date\\nfrom datetime import timedelta\\ndef add_gigasecond(start_datetime):\\n    return start_datetime + timedelta(0,1e9)"}
2	9	9d3ca13f7a64238cdbd7801b	\N	python	kindergarten-garden	\N	\N	0	1	2	2016-03-21 12:02:47	2016-03-21 12:02:47	{"garden.py":"all_students = ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Fred', 'Ginny',\\n                'Harriet', 'Ileana', 'Joseph', 'Kincaid', 'Larry']\\n\\nall_plants = {'V': 'Violets', 'R': 'Radishes', 'C': 'Clover', 'G': 'Grass'}\\n\\n\\nclass Garden():\\n    def __init__(self, rows, students=all_students):\\n        self.rows = rows.split()\\n        self.students = sorted(students)\\n\\n    def plants(self, student):\\n        \\"\\"\\"\\n        Returns student's plants as a list\\n        \\"\\"\\"\\n        student_plants = []\\n        for row in self.rows:\\n            student_plants.extend(self.get_plants_of(student, row))\\n\\n        return student_plants\\n\\n    def get_plants_of(self, student, row):\\n        \\"\\"\\"\\n        Returns student's plants in a row as a list\\n        \\"\\"\\"\\n        return [all_plants[row[self.students.index(student) * 2]],\\n                all_plants[row[self.students.index(student) * 2 + 1]]]"}
3	9	5fc96bea9e1befe748f3d9b7	pending	javascript	kindergarten-garden	\N	\N	0	2	3	2016-03-20 15:16:28	2016-03-20 15:16:28	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    students.sort();\\n    var crops = parseCropDiagram(diagram.toUpperCase());\\n    assignCrops(students,crops,this);\\n  }\\n  \\n  var getPlot = function(crops, index){\\n    var plot = [];\\n    var offset = index*2;\\n    for (var i = 0; i \\u003c crops.length; i++) {\\n      plot.push(crops[i][offset] || null, crops[i][offset+1] || null);\\n    }\\n    return plot;\\n  };\\n  \\n  var assignCrops = function(students,crops,garden){\\n    for (var i = 0; i \\u003c students.length; i++) {\\n      garden[students[i].toLowerCase()] = getPlot(crops,i);\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
4	9	3fcc7536f976af898ae67425	superseded	javascript	kindergarten-garden	\N	\N	0	1	3	2016-05-15 23:41:10	2016-05-15 23:41:10	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    this.students = students.sort();\\n    this.crops = parseCropDiagram(diagram);\\n    assignCrops(this);\\n  }\\n  \\n  var assignCrops = function(garden){\\n    for (var i = 0; i \\u003c garden.students.length; i++) {\\n      var offset = i*2;\\n      var studentPlot = [\\n        garden.crops[0][offset],\\n        garden.crops[0][offset+1],\\n        garden.crops[1][offset],\\n        garden.crops[1][offset+1],\\n        ];\\n      garden[garden.students[i].toLowerCase()] = studentPlot;\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
5	9	2765c3d9ffc8c4b8c1285570	hibernating	elixir	list-ops	\N	\N	0	1	4	2016-05-09 09:08:50	2016-05-09 09:08:50	{"list_ops.exs":"defmodule ListOps do\\n  # Please don't use any external modules (especially List) in your\\n  # implementation. The point of this exercise is to create these basic functions\\n  # yourself.\\n  #\\n  # Note that `++` is a function from an external module (Kernel, which is\\n  # automatically important`) and so shouldn't be used either.\\n\\n  @spec count(list) :: non_neg_integer\\n  def count([_ | t]), do: 1 + count t\\n  def count([]), do: 0\\n\\n  @spec reverse(list) :: list\\n  def reverse(x), do: doreverse(x, [])\\n\\n  defp doreverse([], acc), do: acc\\n  defp doreverse([h | t], acc), do: doreverse(t, [h | acc])\\n\\n  @spec map(list, (any -\\u003e any)) :: list\\n  def map([], _), do: []\\n  def map([h | t], f), do: [f.(h) | map(t, f)]\\n\\n  @spec filter(list, (any -\\u003e as_boolean(term))) :: list\\n  def filter([], _), do: []\\n  def filter([h | t], f) do\\n    if f.(h) do\\n      [h | filter(t, f)]\\n    else\\n      filter(t, f)\\n    end\\n  end\\n\\n  @type acc :: any\\n  @spec reduce(list, acc, ((any, acc) -\\u003e acc)) :: acc\\n  def reduce([], acc, _), do: acc\\n  def reduce([h | t], acc, f), do: reduce(t, f.(h, acc), f)\\n\\n  @spec append(list, list) :: list\\n  def append([], l), do: l\\n  def append(l, []), do: l\\n  def append([x], l), do: [x | l]\\n  def append([h | t], l), do: [h | append(t, l)]\\n\\n  @spec concat([[any]]) :: [any]\\n  def concat([]), do: []\\n  def concat(ll) do\\n    reduce(ll, [], \\u0026reduce(\\u00261, \\u00262, fn(x, y) -\\u003e [x | y] end)) |\\u003e reverse\\n  end\\nend"}
6	9	de4622e9f64f8aaf3b0b52db	done	ruby	word-count	\N	\N	0	1	5	2016-04-08 13:23:04	2016-04-08 13:23:04	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    self.words = phrase.scan(/[\\\\w']+/).map(\\u0026:downcase)\\n  end\\n\\n  def word_count\\n    counter = Hash.new {|hash, key| hash[key] = 0}\\n    words.inject(counter) do |counts, word|\\n      counts[word] += 1\\n      counts\\n    end\\n  end\\n\\n  private\\n\\n  attr_accessor :words\\nend"}
7	11	4fea3189b90a7d0adb11b5d1	done	ruby	strain	\N	\N	0	1	6	2016-04-27 16:05:12	2016-04-27 16:05:12	{"array.rb":"class Array\\r\\n  def keep\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if yield(i)}\\r\\n    out\\r\\n  end\\r\\n\\r\\n  def discard\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if not yield(i)}\\r\\n    out\\r\\n  end\\r\\nend\\r"}
20	22	7a99c832dff415e6cedebd0f	superseded	ruby	phone-number	\N	\N	0	2	14	2016-04-09 22:29:01	2016-04-09 22:29:01	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{first_part}-#{second_part}\\"\\n  end\\n\\n  private\\n\\n  def first_part\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def second_part\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
8	11	315f8482795d3b3260e8c936	pending	javascript	palindrome-products	\N	\N	0	1	7	2016-04-17 22:24:44	2016-04-17 22:24:44	{"/javascript/palindrome-products/palindrome-products.js":"var Palindrome = function(params){\\n  this.maxFactor=params.maxFactor;\\n  this.minFactor=params.minFactor || 1;\\n  this.maxProduct=1;\\n  this.minProduct=Infinity;\\n  this.data=[];\\n};\\n\\nPalindrome.prototype.generate = function(){\\n  for (var ii=this.minFactor;ii\\u003cthis.maxFactor;ii++){\\n    for (var jj=ii;jj\\u003c=this.maxFactor;jj++){\\n      var product=ii*jj;\\n      if (product.toString().split('').reverse().join('')===product.toString()){\\n        this.data[product]=[ii,jj];\\n        this.maxProduct = Math.max(this.maxProduct, product);\\n        this.minProduct = Math.min(this.minProduct, product);\\n      }\\n    }\\n  }\\n};\\n\\nPalindrome.prototype.largest = function(){\\n  this.value=this.maxProduct;\\n  this.factors=[this.data[this.maxProduct]];\\n  return this;\\n};\\n\\nPalindrome.prototype.smallest = function(){\\n  this.value=this.minProduct;\\n  this.factors=[this.data[this.minProduct]];\\n  return this;\\n};\\n\\nmodule.exports = Palindrome;"}
9	11	21e06bd77548061d082e6b0d	pending	clojure	word-count	\N	\N	0	1	8	2016-07-02 08:10:34	2016-07-02 08:10:34	{"word_count.clj":"(ns word-count (require [clojure.string :as str]))\\r\\n\\r\\n(defn to-lower [s]\\r\\n\\t(str/lower-case s))\\r\\n\\r\\n(defn clean [s]\\r\\n\\t(str/replace s #\\"[^a-z0-9 ]\\"  \\"\\"))\\r\\n\\t\\r\\n(defn trim [s]\\r\\n\\t(str/replace s #\\"  \\"  \\" \\"))\\r\\n\\t\\r\\n(defn split [s]\\r\\n\\t(str/split s #\\" \\"))\\r\\n\\t\\t\\r\\n(defn word-count [s]\\r\\n\\t(frequencies (sort (split (trim (clean (to-lower s)))))))"}
10	11	7c9ee29019e713dd34924bcc	\N	haskell	nth-prime	\N	\N	0	1	9	2016-06-04 14:26:03	2016-06-04 14:26:03	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
11	11	4301c039d9e91ce99d0fa0cd	superseded	clojure	binary	\N	\N	0	1	10	2016-04-19 20:34:39	2016-04-19 20:34:39	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map vector\\n            (reverse binary)\\n            (iterate #(* % 2) 1))\\n       (filter #(= (first %) \\\\1))\\n       (map last)\\n       (reduce +)))"}
12	11	37740c7aeb98f8b91f791c62	pending	clojure	binary	\N	\N	0	2	10	2016-06-01 06:49:45	2016-06-01 06:49:45	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map-indexed vector (reverse binary))\\n       (filter #(= (second %) \\\\1))\\n       (map first)\\n       (map #(bit-shift-left 1 %))\\n       (reduce +)))"}
13	11	761570822224bef4d2853876	superseded	ruby	word-count	\N	\N	0	1	11	2016-04-15 15:54:33	2016-04-15 15:54:33	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[normalize(word)] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def normalize(word)\\n    word.downcase.gsub(/[^[:word:]]/, '')\\n  end\\n\\n  def split\\n    @string.split(/\\\\W+/)\\n  end\\nend"}
14	11	f9f21da7d2e0e0e81167f444	done	ruby	word-count	\N	\N	0	4	11	2016-04-28 04:45:30	2016-04-28 04:45:30	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @words ||= @string.scan(/\\\\w+/)\\n  end\\nend"}
15	11	1025005c72bd7263f09575cc	superseded	ruby	word-count	\N	\N	0	2	11	2016-05-04 19:17:37	2016-05-04 19:17:37	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[word] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def split\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
16	11	ee7dac7d40ddf39fa9271d1a	superseded	ruby	word-count	\N	\N	0	3	11	2016-06-17 06:24:17	2016-06-17 06:24:17	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
17	12	6099c3af2105059f29533b4d	pending	rust	difference-of-squares	\N	\N	0	1	12	2016-07-02 03:00:13	2016-07-02 03:00:13	{"src/lib.rs":"pub fn square_of_sum(n: u64) -\\u003e u64 {\\n    let sum = (0..n + 1).fold(0, |a, b| a + b);\\n    sum * sum\\n}\\n\\npub fn sum_of_squares(n: u64) -\\u003e u64 {\\n    (0..n + 1).fold(0, |a, b| a + b * b)\\n}\\n\\npub fn difference(n: u64) -\\u003e u64 {\\n    square_of_sum(n) - sum_of_squares(n)    \\n}"}
18	15	0388f9da376d7d2eff2a7167	\N	elixir	binary	\N	\N	0	1	13	2016-03-02 07:38:02	2016-03-02 07:38:02	{"binary.exs":"defmodule Binary do\\n  @doc \\"\\"\\"\\n  Convert a string containing a binary number to an integer.\\n\\n  On errors returns 0.\\n  \\"\\"\\"\\n  @spec to_decimal(String.t) :: non_neg_integer\\n  def to_decimal(string) do\\n    digits = string |\\u003e String.codepoints |\\u003e Enum.reverse\\n    if Enum.all?(digits, fn x -\\u003e x == \\"0\\" || x == \\"1\\" end), do: convert(digits, 0, 0), else: 0\\n  end\\n\\n  defp convert([], _power, accum) do\\n    accum\\n  end\\n\\n  defp convert([h | t], power, accum) do\\n    pow = if h == \\"0\\", do: 0, else: square(power)\\n    convert(t, power + 1, accum + pow)\\n  end\\n\\n  defp square(number) when number \\u003c 1  do\\n    1\\n  end\\n\\n  defp square(number) do\\n    2 * square(number - 1)\\n  end\\n\\nend"}
19	22	392406220e62c635f2aa806c	hibernating	ruby	phone-number	\N	\N	0	3	14	2016-02-23 11:29:19	2016-02-23 11:29:19	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  private\\n\\n  def prefix\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def line_number\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
43	28	9ad6dc78a7a80050689bcf5c	\N	scala	bob	\N	\N	0	1	27	2016-05-30 07:54:46	2016-05-30 07:54:46	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
21	22	71e2b12d0cc6f487f77de00f	superseded	ruby	phone-number	\N	\N	0	1	14	2016-05-04 01:59:17	2016-05-04 01:59:17	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\nend"}
22	22	3681d77718420b0953324afc	superseded	clojure	scrabble-score	\N	\N	0	1	15	2016-02-04 14:12:20	2016-02-04 14:12:20	{"scrabble.clj":"(ns scrabble\\n  (:require [clojure.string :as s]))\\n\\n(def letter-scores\\n  {\\n    \\"A\\" 1 \\"E\\" 1 \\"I\\" 1 \\"O\\" 1 \\"U\\" 1 \\"L\\" 1 \\"N\\" 1 \\"R\\" 1 \\"S\\" 1 \\"T\\" 1\\n    \\"D\\" 2 \\"G\\" 2\\n    \\"B\\" 3 \\"C\\" 3 \\"M\\" 3 \\"P\\" 3\\n    \\"F\\" 4 \\"H\\" 4 \\"V\\" 4 \\"W\\" 4 \\"Y\\" 4\\n    \\"K\\" 5\\n    \\"J\\" 8 \\"X\\" 8\\n    \\"Q\\" 10 \\"Z\\" 10\\n    })\\n\\n(defn score-letter [letter] (letter-scores (s/upper-case letter)))\\n(defn score-word [word] (reduce + (map score-letter word)))"}
23	22	e17607a8d399eb6c111d88a8	pending	clojure	scrabble-score	\N	\N	0	2	15	2016-03-22 07:00:36	2016-03-22 07:00:36	{"scrabble.clj":"(ns scrabble\\n  (:require [clojure.string :as s]))\\n\\n(def letter-scores\\n  {\\n    \\"A\\" 1 \\"E\\" 1 \\"I\\" 1 \\"O\\" 1 \\"U\\" 1 \\"L\\" 1 \\"N\\" 1 \\"R\\" 1 \\"S\\" 1 \\"T\\" 1\\n    \\"D\\" 2 \\"G\\" 2\\n    \\"B\\" 3 \\"C\\" 3 \\"M\\" 3 \\"P\\" 3\\n    \\"F\\" 4 \\"H\\" 4 \\"V\\" 4 \\"W\\" 4 \\"Y\\" 4\\n    \\"K\\" 5\\n    \\"J\\" 8 \\"X\\" 8\\n    \\"Q\\" 10 \\"Z\\" 10\\n    })\\n\\n(defn score-letter [letter \\u0026 [multiplier]]\\n  (let [m (case multiplier\\n            :triple 3\\n            :double 2\\n            1)]\\n    (* (letter-scores (s/upper-case letter)) m)))\\n\\n(defn score-word [word \\u0026 [flags]] (reduce + (map #(score-letter % flags) word)))"}
24	22	ed3e2ee431e1415f35ad3e6c	\N	ruby	binary	\N	\N	0	1	16	2016-02-11 07:27:37	2016-02-11 07:27:37	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.reverse.chars\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
25	22	a0fd715f30082aa813d0cadd	\N	ruby	binary	\N	\N	0	2	16	2016-07-03 12:20:34	2016-07-03 12:20:34	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.chars.reverse\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
26	22	095379916451294098f146e1	hibernating	python	grains	\N	\N	0	1	17	2016-07-15 03:05:51	2016-07-15 03:05:51	{"grains.py":"on_square = lambda x: 2**(x-1)\\r\\n\\r\\ntotal_after = lambda x: sum(on_square(i+1) for i in range(x))\\r"}
27	22	557b966b2e1d319c9b1ab69e	superseded	python	word-count	\N	\N	0	1	18	2016-03-31 19:54:27	2016-03-31 19:54:27	{"wordcount.py":"# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Return None if the input is None or if it is not a string\\n    if words is None or not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = dict()\\n\\n    # Split the string into a list of words\\n    word_list = words.split()\\n\\n    # Iterate through the list of words\\n    for word in word_list:\\n\\n        # Just add 1 to the counter if the key is already present\\n        if word in word_counts:\\n            word_counts[word] += 1\\n\\n        # Otherwise create the new key\\n        else:\\n            word_counts[word] = 1\\n\\n    return word_counts"}
28	22	dbafe0723da604c39058fe2e	done	python	word-count	\N	\N	0	3	18	2016-04-24 23:44:42	2016-04-24 23:44:42	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(words):\\n    if not isinstance(words,basestring):\\n        return None\\n    word_counts = Counter()\\n    for word in words.split():\\n        word_counts[word] += 1\\n    return word_counts"}
29	22	a9ad931a43fdffc2c2889b85	superseded	python	word-count	\N	\N	0	2	18	2016-05-18 05:44:02	2016-05-18 05:44:02	{"wordcount.py":"from collections import Counter\\n\\n# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Validate input\\n    if not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = Counter()\\n\\n    # Iterate through the list of words\\n    for word in words.split():\\n        word_counts[word] += 1\\n\\n    return word_counts"}
30	22	73a169fa65b760ef187de6e6	pending	ocaml	bob	\N	\N	0	1	19	2016-01-23 01:37:25	2016-01-23 01:37:25	{"/ocaml/bob/bob.ml":"open Core.Std\\n\\n(* We can't really use String.is_empty because we have to handle strings\\n   that only contain whitespace. *)\\nlet is_empty = String.for_all ~f:Char.is_whitespace\\n\\nlet is_shouting input =\\n  String.exists ~f:Char.is_alpha input \\u0026\\u0026\\n  String.for_all ~f:Char.is_uppercase (String.filter ~f:Char.is_alpha input)\\n\\nlet is_question = String.is_suffix ~suffix:\\"?\\"\\n\\nlet response_for = function\\n  | input when is_empty input    -\\u003e \\"Fine. Be that way!\\"\\n  | input when is_shouting input -\\u003e \\"Whoa, chill out!\\"\\n  | input when is_question input -\\u003e \\"Sure.\\"\\n  | _                            -\\u003e \\"Whatever.\\""}
31	22	abab7ba0ec01a11825f99119	needs_input	cpp	word-count	\N	\N	0	4	20	2016-03-02 12:54:49	2016-03-02 12:54:49	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
82	29	86a3bc8f0183503b238cf5b5	done	elixir	nucleotide-count	\N	\N	0	1	54	2016-08-03 16:18:51	2016-08-03 16:18:51	{"elixir/nucleotide-count/dna.exs":"defmodule DNA do\\n  @nucleotides [?A, ?C, ?G, ?T]\\n\\n  @doc \\"\\"\\"\\n  Counts individual nucleotides in a DNA strand.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.count('AATAA', ?A)\\n  4\\n\\n  iex\\u003e DNA.count('AATAA', ?T)\\n  1\\n  \\"\\"\\"\\n  @spec count([char], char) :: non_neg_integer\\n  def count(strand, nucleotide) do\\n    Enum.count(strand, fn(n) -\\u003e n == nucleotide end)\\n  end\\n\\n\\n  @doc \\"\\"\\"\\n  Returns a summary of counts by nucleotide.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.nucleotide_counts('AATAA')\\n  %{?A =\\u003e 4, ?T =\\u003e 1, ?C =\\u003e 0, ?G =\\u003e 0}\\n  \\"\\"\\"\\n  @spec nucleotide_counts([char]) :: Dict.t\\n  def nucleotide_counts(strand) do\\n    Enum.reduce(@nucleotides, %{}, fn(n, result) -\\u003e Map.put(result, n, DNA.count(strand, n)) end)\\n  end\\nend"}
32	22	0d6f09aaecff7f6155dc47b1	superseded	cpp	word-count	\N	\N	0	2	20	2016-03-13 10:59:25	2016-03-13 10:59:25	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
33	22	c507fe67a8321ed4ab65f43d	superseded	cpp	word-count	\N	\N	0	1	20	2016-04-17 17:15:44	2016-04-17 17:15:44	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
34	22	938c0eb50c172665078c7738	superseded	cpp	word-count	\N	\N	0	3	20	2016-07-03 00:26:19	2016-07-03 00:26:19	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
35	28	83c2f539e74dc6f857994729	done	ruby	rna-transcription	\N	\N	0	2	21	2016-06-21 23:13:15	2016-06-21 23:13:15	{"rna-transcription.rb":"# Why overloading `String` ?\\n#\\n# In bioinformatics DNA strand is represented as a `String` most of the time\\n# because it make heavy use of various methods sure as #reverse, #gsub, #tr,\\n# #replace, #upcase, ..., which are all in the `String` class.\\n#\\n# For this simple exercice it may be 'too much' (we juste translate to RNA),\\n# but I believe it is one of the best solution to represent DNA :)\\n\\nclass DNA \\u003c String\\n  THYMINE = 'T'\\n  URACIL  = 'U'\\n\\n  def to_rna\\n    tr THYMINE, URACIL\\n  end\\nend"}
36	28	5388ffafe11ac83d78cac09d	superseded	ruby	rna-transcription	\N	\N	0	1	21	2016-07-20 07:54:28	2016-07-20 07:54:28	{"rna-transcription.rb":"class DNA\\n  def initialize(strand)\\n    @strand = strand\\n  end\\n\\n  def to_rna\\n    @strand.tr 'T', 'U'\\n  end\\nend"}
37	28	0f06c92fa7b9ea9b9ab9c187	\N	haskell	nth-prime	\N	\N	0	1	22	2016-07-13 21:48:16	2016-07-13 21:48:16	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
38	28	2716a04907f88fa70ccbc8e5	\N	ruby	roman-numerals	\N	\N	0	1	23	2016-07-03 01:13:41	2016-07-03 01:13:41	{"roman_numerals.rb":"class Fixnum\\n  VERSION = 1\\n  ROMANS = [['I', 'V'], ['X', 'L'], ['C', 'D'], ['M']]\\n\\n  def to_roman\\n    in_roman = []\\n\\n    self.to_s.chars.reverse_each.with_index do |digit, index|\\n      pair      = ROMANS[index]\\n      next_pair = ROMANS[index + 1]\\n\\n      roman_digit = case digit.to_i\\n                    when 0 then ''\\n                    when 1 then pair.first\\n                    when 2 then pair.first * 2\\n                    when 3 then pair.first * 3\\n                    when 4 then pair.first + pair.last\\n                    when 5 then pair.last\\n                    when 6 then pair.last + pair.first\\n                    when 7 then pair.last + pair.first * 2\\n                    when 8 then pair.last + pair.first * 3\\n                    when 9 then pair.first + next_pair.first\\n                    end\\n\\n      in_roman \\u003c\\u003c roman_digit\\n    end\\n\\n    in_roman.reverse.join\\n  end\\nend"}
39	28	d48c6f306006c186e916cc51	pending	ruby	grains	\N	\N	0	1	24	2016-06-13 16:41:47	2016-06-13 16:41:47	{"/ruby/grains/grains.rb":"class Grains\\n\\n  def square(grains)\\n    2**(grains-1)\\n  end\\n\\n  def total\\n    total = 0\\n    (1..64).each do |count|\\n      total+= square(count)\\n    end\\n    total\\n  end\\n\\nend"}
40	28	c1c9b00e3f5bd41ec72ab59d	needs_input	python	hamming	\N	\N	0	2	25	2016-06-03 11:31:51	2016-06-03 11:31:51	{"hamming.py":"\\"\\"\\"Python distance exercise solution\\"\\"\\"\\n\\ndef distance(text_one, text_two):\\n    \\"\\"\\"Calculate distance between two strings\\"\\"\\"\\n    count = 0\\n\\n    for (char1, char2) in zip(text_one, text_two):\\n        if char1 != char2:\\n            count += 1\\n\\n    return count"}
41	28	2c25acba10b0cefce94dae7c	superseded	python	hamming	\N	\N	0	1	25	2016-07-24 13:39:00	2016-07-24 13:39:00	{"hamming.py":"def distance(textOne, textTwo):\\n    count  = 0\\n    lenTwo = len(textTwo)\\n\\n    for i, c in enumerate(textOne):\\n        if lenTwo \\u003c= i or textTwo[i] != c:\\n            count += 1\\n\\n    return count + lenTwo - len(textOne)"}
42	28	a583f1f129c778f62f709c4b	done	python	word-count	\N	\N	0	1	26	2016-06-09 10:25:17	2016-06-09 10:25:17	{"wordcount.py":"\\r\\nfrom collections import Counter\\r\\nimport re\\r\\n\\r\\n\\r\\ndef word_count(s):\\r\\n    split = re.split(r' |\\\\n', s)\\r\\n    count = Counter(split)\\r\\n    del count['']\\r\\n    return count\\r\\n\\r\\n\\r"}
44	29	e6e3145de768c737fc605c60	pending	javascript	beer-song	\N	\N	0	1	28	2016-07-31 14:52:56	2016-07-31 14:52:56	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
45	29	10e4d96824384a70d4a14fdb	pending	python	simple-cipher	\N	\N	0	1	29	2016-07-05 09:40:38	2016-07-05 09:40:38	{"\\\\python\\\\simple-cipher\\\\cipher.py":"from itertools import cycle\\r\\nfrom random import randint\\r\\n\\r\\nclass Cipher:\\r\\n    \\r\\n    _ord_a = ord(\\"a\\")\\r\\n    _ord_z = ord(\\"z\\")\\r\\n    _ord_az = _ord_z - _ord_a + 1\\r\\n    \\r\\n    def __init__(self, key = None):\\r\\n        if key and not (key.isalpha() and key.islower()):\\r\\n            raise ValueError(\\"Invalid key\\")\\r\\n        self.key = key or self._generate_key()\\r\\n         \\r\\n    def encode(self, msg):\\r\\n        return \\"\\".join(map(self._encode_char, msg, cycle(self.key)))\\r\\n\\r\\n    def decode(self, emsg):\\r\\n        return \\"\\".join(map(self._decode_char, emsg, cycle(self.key)))\\r\\n\\r\\n    @staticmethod\\r\\n    def _generate_key():\\r\\n        return \\"\\".join(chr(randint(Cipher._ord_a, Cipher._ord_z)) for _ in range(100))\\r\\n        \\r\\n        \\r\\n    def _encode_char(self, c, k):\\r\\n        if not c.isalpha():\\r\\n            return \\"\\"\\r\\n        enc = ord(c.lower()) + ord(k) - self._ord_a\\r\\n        return (enc \\u003e self._ord_z) and chr(enc - self._ord_az) or chr(enc)\\r\\n    \\r\\n    def _decode_char(self, c, k):\\r\\n        dec = ord(c) - ord(k) + self._ord_a\\r\\n        return (dec \\u003c self._ord_a) and chr(dec + self._ord_az) or chr(dec)\\r\\n\\r\\n\\r\\nclass Caesar(Cipher):\\r\\n    def __init__(self):\\r\\n        super().__init__(\\"d\\")"}
46	29	11a18679d5856eb1ebf104c3	hibernating	python	leap	\N	\N	0	1	30	2016-07-10 10:26:23	2016-07-10 10:26:23	{"year.py":"#!/usr/bin/python\\n\\ndef is_leap_year(year):\\n    if year % 400 == 0 or year % 4 == 0 and year % 100 != 0:\\n        return True\\n    else:\\n        return False"}
47	29	b592d091a0510a4a548786b3	\N	elixir	binary	\N	\N	0	1	31	2016-07-08 23:57:27	2016-07-08 23:57:27	{"binary.exs":"defmodule Binary do\\n  @doc \\"\\"\\"\\n  Convert a string containing a binary number to an integer.\\n\\n  On errors returns 0.\\n  \\"\\"\\"\\n  @spec to_decimal(String.t) :: non_neg_integer\\n  def to_decimal(string) do\\n    digits = string |\\u003e String.codepoints |\\u003e Enum.reverse\\n    if Enum.all?(digits, fn x -\\u003e x == \\"0\\" || x == \\"1\\" end), do: convert(digits, 0, 0), else: 0\\n  end\\n\\n  defp convert([], _power, accum) do\\n    accum\\n  end\\n\\n  defp convert([h | t], power, accum) do\\n    pow = if h == \\"0\\", do: 0, else: square(power)\\n    convert(t, power + 1, accum + pow)\\n  end\\n\\n  defp square(number) when number \\u003c 1  do\\n    1\\n  end\\n\\n  defp square(number) do\\n    2 * square(number - 1)\\n  end\\n\\nend"}
48	29	767ac24eae5c3adc1d586f9b	hibernating	ruby	phone-number	\N	\N	0	3	32	2016-07-20 11:22:58	2016-07-20 11:22:58	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  private\\n\\n  def prefix\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def line_number\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
49	29	e3be502e9e8d4b55980abb0f	superseded	ruby	phone-number	\N	\N	0	2	32	2016-07-23 03:32:33	2016-07-23 03:32:33	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{first_part}-#{second_part}\\"\\n  end\\n\\n  private\\n\\n  def first_part\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def second_part\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
50	29	8499986650d68131e5e85792	superseded	ruby	phone-number	\N	\N	0	1	32	2016-07-28 22:08:45	2016-07-28 22:08:45	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\nend"}
51	29	8a3792aeb86230c9d4450e8a	\N	python	hamming	\N	\N	0	1	33	2016-07-03 11:24:28	2016-07-03 11:24:28	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
52	29	5f8bc15ca2ca810c3e0d2ce1	done	python	rna-transcription	\N	\N	0	1	34	2016-07-25 16:33:15	2016-07-25 16:33:15	{"dna.py":"__author__ = 'Adrian Rivera'\\r\\n\\r\\n\\r\\nfrom string import maketrans\\r\\n\\r\\n\\r\\nmapping = maketrans('GCTA', 'CGAU')\\r\\n\\r\\n\\r\\nclass DNA(object):\\r\\n\\r\\n    def __init__(self, strand):\\r\\n        self.strand = strand\\r\\n\\r\\n    def to_rna(self):\\r\\n        return self.strand.translate(mapping)\\r"}
53	29	80dcc917a3a1612695f741c3	done	javascript	bob	\N	\N	0	1	35	2016-07-14 10:27:41	2016-07-14 10:27:41	{"bob.js":"var Bob = function() {\\n  this.hey = function(input) {\\n    if (input.match(/[a-zA-z1-9]/) == null) {\\n        return \\"Fine. Be that way!\\"\\n      } else if (input.toUpperCase() === input \\u0026\\u0026 input.match(/[a-zA-z]/) != null){\\n        return \\"Woah, chill out!\\";\\n      } else if (input[input.length - 1] === \\"?\\" ){\\n        return \\"Sure.\\";\\n      } else {\\n        return \\"Whatever.\\";\\n      }\\n  }\\n}\\n\\nexports.Bob = Bob;"}
97	33	763d4031db18dfae0677def7	superseded	ruby	bob	\N	\N	0	1	63	2016-07-08 17:51:11	2016-07-08 17:51:11	{"bob.rb":"class Bob\\n\\n  def hey str\\n    \\"Whatever.\\"\\n  end\\n\\nend"}
54	29	2aca12fa01f0d095be5bc2c7	pending	clojure	meetup	\N	\N	0	1	36	2016-07-03 21:27:58	2016-07-03 21:27:58	{"/clojure/meetup/meetup.clj":"(ns meetup)\\n\\n(def doy java.util.Calendar/DAY_OF_YEAR)\\n(def dom java.util.Calendar/DAY_OF_MONTH)\\n(def dow java.util.Calendar/DAY_OF_WEEK)\\n\\n(defn days-from [month year]\\n  (let [start-date (java.util.GregorianCalendar. year month 0)\\n        num (.getActualMaximum (java.util.GregorianCalendar. year month 1) dom) ]\\n    (take num (repeatedly\\n      (fn []\\n        (.add start-date doy 1)\\n        (.clone start-date))))))\\n\\n(def day-map { :sunday 1\\n              :monday 2\\n              :tuesday 3\\n              :wednesday 4\\n              :thursday 5\\n              :friday 6\\n              :saturday 7})\\n\\n(defn teenth [days]\\n  (first (filter #(\\u003e (.get % dom) 12) days)))\\n\\n(def finders { :first first \\n               :second second\\n               :third #(nth % 2)\\n               :fourth #(nth % 3)\\n               :last last\\n               :teenth teenth })\\n\\n(defn filter-by-day [day date]\\n  (= (.get date dow) (day day-map)))\\n\\n(defn meetup [month year day to-find]\\n  (let [days (filter (partial filter-by-day day) (days-from (dec month) year))\\n        target ((to-find finders) days)]\\n    [year month (.get target dom)]))"}
55	29	a437f4535b745adc008cddd3	\N	scala	difference-of-squares	\N	\N	0	2	37	2016-07-18 20:47:13	2016-07-18 20:47:13	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    square((0 to i).sum)\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(square).sum \\n  }\\n  \\n  private def square(i: Int) = {\\n    i * i\\n  }\\n}"}
56	29	cebeebe7f75fd4ea531be618	\N	scala	difference-of-squares	\N	\N	0	1	37	2016-08-03 17:33:35	2016-08-03 17:33:35	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    val sum = (0 to i).sum\\n    sum * sum\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(s =\\u003e s * s).sum \\n  }\\n}"}
57	29	1c52db559dfe3e190aa9c6c7	pending	go	binary-search-tree	\N	\N	0	1	38	2016-07-03 04:31:42	2016-07-03 04:31:42	{"/go/binary-search-tree/binary_search_tree.go":"package binarysearchtree\\n\\ntype SearchTreeData struct {\\n\\tdata  int\\n\\tleft  *SearchTreeData\\n\\tright *SearchTreeData\\n}\\n\\nfunc Bst(data int) *SearchTreeData {\\n\\treturn \\u0026SearchTreeData{data: data}\\n}\\n\\nfunc (s *SearchTreeData) Insert(data int) {\\n\\tswitch {\\n\\tcase data \\u003c= s.data \\u0026\\u0026 s.left == nil:\\n\\t\\ts.left = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003e s.data \\u0026\\u0026 s.right == nil:\\n\\t\\ts.right = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003c= s.data:\\n\\t\\ts.left.Insert(data)\\n\\tcase data \\u003e s.data:\\n\\t\\ts.right.Insert(data)\\n\\t}\\n}\\n\\nfunc (s *SearchTreeData) MapString(f func(int) string) []string {\\n\\tif s == nil {\\n\\t\\treturn []string{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapString(f), f(s.data)), s.right.MapString(f)...)\\n}\\n\\nfunc (s *SearchTreeData) MapInt(f func(int) int) []int {\\n\\tif s == nil {\\n\\t\\treturn []int{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapInt(f), f(s.data)), s.right.MapInt(f)...)\\n}"}
58	29	9cfc33589acdf3d96fabf9ec	\N	elixir	sublist	\N	\N	0	1	39	2016-07-14 04:48:55	2016-07-14 04:48:55	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b -\\u003e\\n        :equal\\n      length(a) \\u003c= length(b) \\u0026\\u0026 is_sublist(a, b)-\\u003e\\n        :sublist\\n      is_sublist(b, a) -\\u003e\\n        :superlist\\n      true -\\u003e\\n        :unequal\\n    end\\n  end\\n\\n  defp is_sublist(a, b) do\\n    cond do\\n      length(a) \\u003e length(b) -\\u003e\\n        false\\n      a === Enum.take(b, length(a)) -\\u003e\\n        true\\n      true -\\u003e\\n        is_sublist(a, tl(b))\\n    end\\n  end\\nend"}
59	29	6c41097ea2669fe3a969fed7	hibernating	python	grains	\N	\N	0	1	40	2016-07-14 06:55:32	2016-07-14 06:55:32	{"grains.py":"on_square = lambda x: 2**(x-1)\\r\\n\\r\\ntotal_after = lambda x: sum(on_square(i+1) for i in range(x))\\r"}
60	29	51986f49e3a612e039eff1b4	done	csharp	leap	\N	\N	0	1	41	2016-07-12 06:30:31	2016-07-12 06:30:31	{"Year.cs":"using System;\\r\\n\\r\\npublic class Year\\r\\n{\\r\\n    public static Boolean IsLeap(int year)\\r\\n    {\\r\\n        if( year % 4 == 0)\\r\\n        {\\r\\n            if (year % 100 == 0 \\u0026\\u0026 year % 400 != 0)\\r\\n                return false;\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}"}
61	29	25a4bc3205d8fde407488fbc	\N	go	pythagorean-triplet	\N	\N	0	1	42	2016-06-27 15:52:56	2016-06-27 15:52:56	{"pythagorean_triplet.go":"package pythagorean\\n\\ntype Triplet [3]int\\n\\nfunc Range(min, max int) (triplets []Triplet) {\\n\\tfor a := min; a \\u003c= max; a++ {\\n\\t\\tfor b := a; b \\u003c= max; b++ {\\n\\t\\t\\tfor c := b; c \\u003c= max; c++ {\\n\\t\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc Sum(sum int) (triplets []Triplet) {\\n\\tfor a := 1; a \\u003c= sum/3; a++ {\\n\\t\\tfor b := a; b \\u003c= (sum-a)/2; b++ {\\n\\t\\t\\tc := sum - a - b\\n\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc isTriplet(t Triplet) bool {\\n\\treturn t[0]*t[0]+t[1]*t[1] == t[2]*t[2]\\n}"}
62	29	e26dfc5dc2426de241a71e9b	\N	python	hello-world	\N	\N	0	1	43	2016-07-14 06:36:33	2016-07-14 06:36:33	{"hello_world.py":"def hello(name='World'):\\n    return 'Hello, ' + name + '!'"}
63	29	77a0d05430cb684a302ce1d3	done	javascript	word-count	\N	\N	0	3	44	2016-07-17 09:11:21	2016-07-17 09:11:21	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (!phrase || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    count[word] = (count[word] || 0) + 1;\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
64	29	959ca3897142838c0e7133a6	superseded	javascript	word-count	\N	\N	0	1	44	2016-07-25 02:54:01	2016-07-25 02:54:01	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  if (phrase === null || phrase === '' || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return;\\n  }\\n  \\n  var count = {};\\n  phrase.toLowerCase()\\n        .replace(/[^a-zA-Z0-9 ]/g, '')\\n        .replace(/\\\\s+/g, ' ')\\n        .split(' ')\\n        .forEach(\\n  function(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  });\\n  return count;\\n}"}
65	29	6813a7881676ddbb2917a90f	superseded	javascript	word-count	\N	\N	0	2	44	2016-07-25 09:30:21	2016-07-25 09:30:21	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (phrase === null || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
66	29	6f097cdb683acd11ae09ed0c	pending	javascript	food-chain	\N	\N	0	1	45	2016-06-30 16:07:03	2016-06-30 16:07:03	{"food-chain.js":"var animals = ['fly', 'spider', 'bird', 'cat', 'dog', 'goat', 'cow', 'horse'];\\nvar first_sentences = {\\n  fly: undefined,\\n  spider: \\"It wriggled and jiggled and tickled inside her.\\",\\n  bird: \\"How absurd to swallow a bird!\\",\\n  cat: \\"Imagine that, to swallow a cat!\\",\\n  dog: \\"What a hog, to swallow a dog!\\",\\n  goat: \\"Just opened her throat and swallowed a goat!\\",\\n  cow: \\"I don't know how she swallowed a cow!\\",\\n  horse: \\"She's dead, of course!\\"\\n};\\n\\n\\n\\nmodule.exports = {\\n  verse: function(n) {\\n    var sentences = [];\\n    var animal = animals[n - 1];\\n\\n    sentences.push(\\"I know an old lady who swallowed a \\" + animal + \\".\\");\\n\\n    if (first_sentences[animal]) {\\n      sentences.push( first_sentences[animal] );\\n    }\\n\\n    if (animal != \\"horse\\") {\\n      for ( var i = n-1; i \\u003e 0; i-- ) {\\n        if (animals[i-1] == \\"spider\\") {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\" that wriggled and jiggled and tickled inside her.\\");\\n        } else {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\".\\");\\n        }\\n      }\\n      sentences.push(\\"I don't know why she swallowed the fly. Perhaps she'll die.\\");\\n    }\\n\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  },\\n\\n  verses: function(m, n) {\\n    var sentences = [];\\n    for ( var i = m; i \\u003c= n; i++ ) {\\n      sentences.push( this.verse(i) );\\n    }\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  }\\n\\n};"}
67	29	c01f337a3b3953af8c18e157	done	haskell	crypto-square	\N	\N	0	1	46	2016-07-06 17:15:10	2016-07-06 17:15:10	{"/haskell/crypto-square/CryptoSquare.hs":"module CryptoSquare\\n( normalizePlaintext\\n, squareSize\\n, plaintextSegments\\n, ciphertext\\n, normalizeCiphertext\\n) where\\n\\nimport Data.Char\\nimport Data.List\\n\\nnormalizePlaintext :: String -\\u003e String\\nnormalizePlaintext = filter isAlphaNum . map toLower\\n\\nsquareSize :: String -\\u003e Int\\nsquareSize = ceiling . sqrt . fromIntegral . length\\n\\nplaintextSegments :: String -\\u003e [String]\\nplaintextSegments s = squareSplit (squareSize clean) clean\\n    where clean = normalizePlaintext s\\n\\nsquareSplit :: Int -\\u003e String -\\u003e [String]\\nsquareSplit _ [] = [] \\nsquareSplit n xs = first : squareSplit n rest\\n    where (first, rest) = splitAt n xs\\n\\nciphertext :: String -\\u003e String\\nciphertext = concat . transpose . plaintextSegments\\n\\nnormalizeCiphertext :: String -\\u003e String\\nnormalizeCiphertext = unwords . transpose . plaintextSegments"}
68	29	d0f2e1f3a3f438f75cbc9f78	superseded	coffeescript	nth-prime	\N	\N	0	1	47	2016-07-11 16:08:54	2016-07-11 16:08:54	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    new Collection(@_primes_collection_with_size(number)).last\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_primes_collection_with_size: (size) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c size\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection\\n\\n\\nclass Collection \\n\\n  constructor: (array) -\\u003e\\n    @array = array\\n    @last = this._last()\\n\\n  _last: -\\u003e\\n    @array.slice(-1)[0]\\n  \\n\\nmodule.exports = Prime"}
69	29	902f10f089013f51aecc774b	done	coffeescript	nth-prime	\N	\N	0	2	47	2016-07-20 21:52:03	2016-07-20 21:52:03	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    @_findPrime(number)\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_findPrime: (amount) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c amount\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection[amount - 1]\\n\\nmodule.exports = Prime"}
70	29	38b6f44e69286a806bb8cb04	\N	scala	allergies	\N	\N	0	3	48	2016-06-29 11:24:21	2016-06-29 11:24:21	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen.Allergen, score: Score) =\\n    (allergen.value \\u0026 score) == allergen.value\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter (isAllergicTo(_, score))\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
71	29	74860a49af04509603c38771	\N	scala	allergies	\N	\N	0	2	48	2016-07-17 11:04:07	2016-07-17 11:04:07	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
83	29	25906f7bf1d1377fde608cb0	pending	ocaml	bob	\N	\N	0	1	55	2016-07-11 15:18:26	2016-07-11 15:18:26	{"/ocaml/bob/bob.ml":"open Core.Std\\n\\n(* We can't really use String.is_empty because we have to handle strings\\n   that only contain whitespace. *)\\nlet is_empty = String.for_all ~f:Char.is_whitespace\\n\\nlet is_shouting input =\\n  String.exists ~f:Char.is_alpha input \\u0026\\u0026\\n  String.for_all ~f:Char.is_uppercase (String.filter ~f:Char.is_alpha input)\\n\\nlet is_question = String.is_suffix ~suffix:\\"?\\"\\n\\nlet response_for = function\\n  | input when is_empty input    -\\u003e \\"Fine. Be that way!\\"\\n  | input when is_shouting input -\\u003e \\"Whoa, chill out!\\"\\n  | input when is_question input -\\u003e \\"Sure.\\"\\n  | _                            -\\u003e \\"Whatever.\\""}
72	29	a99861caac9b2e3267249ee7	\N	scala	allergies	\N	\N	0	1	48	2016-07-26 09:24:19	2016-07-26 09:24:19	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n  type Allergens = List[Allergen]\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
73	29	4f1f7daf8c6b77f815811406	superseded	ruby	bob	\N	\N	0	1	49	2016-06-28 15:19:07	2016-06-28 15:19:07	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    if silence?(input)\\n      'Fine. Be that way!'\\n    elsif yelling?(input)\\n      'Woah, chill out!'\\n    elsif question?(input)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def question?(input)\\n    input.end_with? '?'\\n  end\\n\\n  def yelling?(input)\\n    input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n  end\\n\\n  def silence?(input)\\n    input =~ /\\\\A\\\\s*\\\\z/\\n  end\\nend"}
74	29	d5e6a808aaba072e77c159f6	pending	ruby	bob	\N	\N	0	2	49	2016-07-11 11:30:44	2016-07-11 11:30:44	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    statement = Statement.new(input)\\n    if statement.silence?\\n      \\"Fine. Be that way!\\"\\n    elsif statement.yelling?\\n      \\"Whoa, chill out!\\"\\n    elsif statement.question?\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  # Internal: This wraps up a statement made to Bob and is responsible for\\n  # deciding his reaction\\n  class Statement\\n    attr_reader :input\\n\\n    def initialize(input)\\n      @input = input\\n    end\\n\\n    # Public: is this statement a question?\\n    #\\n    # Returns a boolean\\n    def question?\\n      input.end_with? \\"?\\"\\n    end\\n\\n    # Public: is this statement shouted?\\n    #\\n    # Returns a boolean\\n    def yelling?\\n      input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n    end\\n\\n    # Public: is this a silent statement?\\n    #\\n    # Returns a boolean\\n    def silence?\\n      input =~ /\\\\A\\\\s*\\\\z/\\n    end\\n  end\\nend"}
75	29	d625c8b7c22566578db9f6fa	pending	ruby	matrix	\N	\N	0	1	50	2016-06-26 18:46:36	2016-06-26 18:46:36	{"matrix.rb":"# Matrix class\\nclass Matrix\\n  attr_reader :rows\\n\\n  def initialize(s)\\n    @matrix = s.split(\\"\\\\n\\").map { |rs| rs.split(' ').map(\\u0026:to_i) }\\n  end\\n\\n  def rows\\n    @matrix\\n  end\\n\\n  def columns\\n    first, *rest = @matrix\\n    first.zip(*rest)\\n  end\\nend"}
76	29	6d20c42abb38638215f69922	\N	haskell	rna-transcription	\N	\N	0	1	51	2016-08-03 19:34:52	2016-08-03 19:34:52	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA [] = []\\r\\ntoRNA (s:ss) = toRNA' s:toRNA ss\\r\\n\\r\\ntoRNA' :: Char -\\u003e Char\\r\\ntoRNA' 'C' = 'G'\\r\\ntoRNA' 'G' = 'C'\\r\\ntoRNA' 'A' = 'U'\\r\\ntoRNA' 'T' = 'A'\\r\\ntoRNA' _ = ' '"}
77	29	4d8a2a90ec6f0572dd20c01a	superseded	clojure	rna-transcription	\N	\N	0	1	52	2016-06-28 20:10:25	2016-06-28 20:10:25	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
78	29	d7e25646ad60962712618aae	pending	clojure	rna-transcription	\N	\N	0	2	52	2016-07-17 01:18:37	2016-07-17 01:18:37	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
79	29	7988c32c070e4a592b509482	done	haskell	difference-of-squares	\N	\N	0	3	53	2016-06-25 23:43:08	2016-06-25 23:43:08	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n `pow` 3 + 3 * n `pow` 2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n `pow` 4 + 2 * n `pow` 3 + n `pow` 2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n `pow` 4 + 2 * n `pow` 3 - 3 * n `pow` 2 - 2 * n) `div` 12\\n\\npow :: Num a =\\u003e a -\\u003e Int -\\u003e a\\npow = (^)"}
80	29	1c49e1a7a93a6fb3376e0aa0	superseded	haskell	difference-of-squares	\N	\N	0	2	53	2016-06-28 12:17:10	2016-06-28 12:17:10	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n^3 + 3 * n^2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n^4 + 2 * n^3 + n^2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n^4 + 2 * n^3 - 3 * n^2 - 2 * n) `div` 12"}
81	29	6a599a554c41a4ca85f20566	superseded	haskell	difference-of-squares	\N	\N	0	1	53	2016-07-09 20:55:41	2016-07-09 20:55:41	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (sum . map square) [1..n]\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (square . sum) [1..n]\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = squareOfSums n - sumOfSquares n\\n\\nsquare :: (Integral a) =\\u003e a -\\u003e a\\nsquare x = x * x"}
84	29	39c65a10977e6ae7e0265659	\N	ruby	hello-world	\N	\N	0	1	56	2016-06-27 19:03:09	2016-06-27 19:03:09	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello(name = \\"World\\")\\r\\n    return \\"Hello, #{name}!\\"\\r\\n  end\\r\\nend"}
85	29	16e90fe4bc8d0e835e2fa9a2	\N	elixir	acronym	\N	\N	0	3	57	2016-06-30 18:11:00	2016-06-30 18:11:00	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string\\n    |\\u003e String.split(~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    |\\u003e Enum.reduce(\\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
86	29	984665d71bf40bfa2cfeb638	\N	elixir	acronym	\N	\N	0	2	57	2016-07-02 02:13:12	2016-07-02 02:13:12	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
87	29	3e1d3b81e497b24ec3ce1479	\N	elixir	acronym	\N	\N	0	1	57	2016-07-12 03:13:06	2016-07-12 03:13:06	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/(\\\\s|\\\\W|([a-z](?=[A-Z])))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
88	29	f282994af8ac510d22e86e47	\N	ruby	robot-name	\N	\N	0	1	58	2016-07-08 02:13:45	2016-07-08 02:13:45	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
89	31	53d3d875b46178f99c51ee57	pending	csharp	bob	\N	\N	0	1	59	2016-07-27 11:47:29	2016-07-27 11:47:29	{"Bob.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\npublic static class Bob\\r\\n{\\r\\n    private static IResponder _firstResponder;\\r\\n\\r\\n    static Bob()\\r\\n    {\\r\\n        // Yelling supercedes questions in response priority, so it must be first (or at least before QuestionResponder)\\r\\n        _firstResponder = new YellResponder();\\r\\n        _firstResponder\\r\\n            .SetNext(new QuestionResponder())\\r\\n            .SetNext(new SilenceResponder())\\r\\n            .SetNext(new DefaultResponder());\\r\\n    }\\r\\n\\r\\n    public static string Hey(string statement)\\r\\n    {\\r\\n        return _firstResponder.ProcessStatement(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic interface IResponder\\r\\n{\\r\\n    string Response { get; }\\r\\n    string ProcessStatement(string statement);\\r\\n    IResponder SetNext(IResponder next);\\r\\n}\\r\\n\\r\\npublic abstract class ResponderBase : IResponder\\r\\n{\\r\\n    private IResponder _next = null;\\r\\n\\r\\n    public abstract string Response { get; }\\r\\n\\r\\n    public string ProcessStatement(string statement)\\r\\n    {\\r\\n        if (IsValidForStatement(statement))\\r\\n        {\\r\\n            return Response;\\r\\n        }\\r\\n        else if (_next != null)\\r\\n        {\\r\\n            return _next.ProcessStatement(statement);\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    public abstract bool IsValidForStatement(string statement);\\r\\n\\r\\n    public IResponder SetNext(IResponder next)\\r\\n    {\\r\\n        _next = next;\\r\\n\\r\\n        return next;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class YellResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whoa, chill out!\\";\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.IsAllCaps();\\r\\n    }\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get\\r\\n        {\\r\\n            return _response;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class QuestionResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Sure.\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.Trim().EndsWith(\\"?\\");\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class SilenceResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Fine. Be that way!\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return string.IsNullOrWhiteSpace(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class DefaultResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whatever.\\";\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic static class StringExtensions\\r\\n{\\r\\n    public static bool IsAllCaps (this string value) \\r\\n    {\\r\\n        return value.Any(char.IsUpper) \\r\\n            \\u0026\\u0026 value.All(c =\\u003e !char.IsLetter(c) || char.IsUpper(c));\\r\\n    }\\r\\n}"}
90	33	12d92897880915fad64d76e4	done	ruby	rna-transcription	\N	\N	0	2	60	2016-07-02 00:43:50	2016-07-02 00:43:50	{"rna-transcription.rb":"# Why overloading `String` ?\\n#\\n# In bioinformatics DNA strand is represented as a `String` most of the time\\n# because it make heavy use of various methods sure as #reverse, #gsub, #tr,\\n# #replace, #upcase, ..., which are all in the `String` class.\\n#\\n# For this simple exercice it may be 'too much' (we juste translate to RNA),\\n# but I believe it is one of the best solution to represent DNA :)\\n\\nclass DNA \\u003c String\\n  THYMINE = 'T'\\n  URACIL  = 'U'\\n\\n  def to_rna\\n    tr THYMINE, URACIL\\n  end\\nend"}
91	33	ded6f40d84da6e46beaa56f1	superseded	ruby	rna-transcription	\N	\N	0	1	60	2016-07-03 08:22:49	2016-07-03 08:22:49	{"rna-transcription.rb":"class DNA\\n  def initialize(strand)\\n    @strand = strand\\n  end\\n\\n  def to_rna\\n    @strand.tr 'T', 'U'\\n  end\\nend"}
92	33	01c5365747f189744624e855	superseded	ruby	hamming	\N	\N	0	1	61	2016-06-26 09:54:21	2016-06-26 09:54:21	{"hamming.rb":"class Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += 1 if key != string_to_array(second)[value]\\n    end\\n    total_difference\\n  end\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
93	33	6b8d491e711582f7f690dc31	pending	ruby	hamming	\N	\N	0	3	61	2016-06-26 19:50:00	2016-06-26 19:50:00	{"hamming.rb":"class Difference\\n  attr_reader :initial_character, :second_character\\n\\n  def initialize(initial_character, second_character)\\n    @initial_character = initial_character\\n    @second_character = second_character\\n  end\\n\\n  def amount\\n    if initial_character == second_character\\n      0\\n    else\\n      1\\n    end\\n  end\\nend\\n\\n\\nclass Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += Difference.new(key, string_to_array(second)[value]).amount\\n    end\\n    total_difference\\n  end\\n\\n  private\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
94	33	05e74ae607c00ca1acb8f420	superseded	ruby	hamming	\N	\N	0	2	61	2016-07-31 10:49:10	2016-07-31 10:49:10	{"hamming.rb":"class Difference\\n  attr_reader :initial_character, :second_character\\n\\n  def initialize(initial_character, second_character)\\n    @initial_character = initial_character\\n    @second_character = second_character\\n  end\\n\\n  def amount\\n    if initial_character == second_character\\n      0\\n    else\\n      1\\n    end\\n  end\\nend\\n\\n\\nclass Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += Difference.new(key, string_to_array(second)[value]).amount\\n    end\\n    total_difference\\n  end\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
95	33	096860d428c81ebc3b2a8c3b	needs_input	erlang	sum-of-multiples	\N	\N	0	1	62	2016-07-28 09:29:59	2016-07-28 09:29:59	{"/erlang/sum-of-multiples/sum_of_multiples.erl":"-module(sum_of_multiples).\\n-export([sumOfMultiples/2, sumOfMultiplesDefault/1]).\\n\\n\\n\\n-spec(sumOfMultiplesDefault(integer())-\\u003einteger()).\\nsumOfMultiplesDefault(Ceil) -\\u003e\\n    sumOfMultiples([3,5], Ceil).\\n\\n-spec(sumOfMultiples([integer()], integer())-\\u003einteger()).\\nsumOfMultiples(L, Ceil) -\\u003e\\n    sumOfMultiples(L, Ceil-1, 0).\\n\\nsumOfMultiples(_, 0, Accu) -\\u003e\\n    Accu;\\nsumOfMultiples(L, Ceil, Accu) -\\u003e\\n    Accu1 = case is_multiples_of(L, Ceil) of\\n\\t\\ttrue -\\u003e Accu + Ceil;\\n\\t\\tfalse -\\u003e Accu\\n\\t    end,\\n    sumOfMultiples(L, Ceil-1, Accu1).\\n\\nis_multiples_of(L, Int) -\\u003e\\n    lists:any(fun(X) -\\u003e Int rem X == 0 end,L)."}
96	33	5c7a37e58e4b3f5a32e63783	done	ruby	bob	\N	\N	0	2	63	2016-06-21 04:26:16	2016-06-21 04:26:16	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Woah, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    text == text.upcase\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
98	33	7d0110cd4b7b1c439b86d8c5	\N	ruby	bob	\N	\N	0	3	63	2016-07-16 03:46:34	2016-07-16 03:46:34	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Whoa, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    (text =~  /[A-Z]/ \\u0026\\u0026 text == text.upcase)\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
99	33	a57df9561347b07ce6ce300e	\N	javascript	leap	\N	\N	0	1	64	2016-07-18 11:27:57	2016-07-18 11:27:57	{"leap.js":"var Leap = function(year) {\\n\\tif (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0) {\\n\\t\\treturn true;\\n\\t} else \\n\\t\\treturn false;\\n};\\n\\nmodule.exports = Leap;"}
100	33	202a43048b1f1c10e3a10b3d	\N	javascript	leap	\N	\N	0	2	64	2016-07-20 09:10:40	2016-07-20 09:10:40	{"leap.js":"var Leap = function(year) {\\n\\treturn (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0);\\n};\\n\\nmodule.exports = Leap;"}
101	38	5f5b22d815f70ead51d52d02	pending	swift	leap	\N	\N	0	1	65	2016-08-09 01:05:21	2016-08-09 01:05:21	{"Bob.swift":"import Foundation\\n\\npublic struct Year {\\n\\n\\tlet year: Int\\n\\tpublic let isLeapYear : Bool = false;\\n\\t\\n\\tpublic init(calendarYear: Int){\\n\\t\\tself.year = calendarYear\\n\\t\\tself.isLeapYear = calculateLeapYear()\\n\\t}\\n\\t\\n\\tfunc calculateLeapYear() -\\u003e Bool {\\n\\t\\tif isDivisibleBy(400){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(100){\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(4){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\tfunc isDivisibleBy(number:Int) -\\u003e Bool{\\n\\t\\treturn (self.year%number == 0)\\n\\t}\\n\\n}"}
102	38	543343a3146806bf5140205b	done	haskell	triangle	\N	\N	0	1	66	2016-08-02 08:08:12	2016-08-02 08:08:12	{"Triangle.hs":"module Triangle\\n  ( TriangleType(..)\\n  , triangleType\\n  ) where\\n\\n\\ndata TriangleType\\n  = Equilateral\\n  | Isosceles\\n  | Scalene\\n  | Illogical\\n  deriving (Eq, Show)\\n\\n\\ntriangleType :: (Eq a, Ord a, Num a) =\\u003e a -\\u003e a -\\u003e a -\\u003e TriangleType\\ntriangleType a b c\\n  | a + b \\u003c= c || a + c \\u003c= b || b + c \\u003c= a = Illogical\\n  | a == b     \\u0026\\u0026 a == c                   = Equilateral\\n  | a == b     || a == c     || b == c     = Isosceles\\n  | otherwise                              = Scalene"}
103	38	ef5131d8a8d363867b0377ec	superseded	ruby	beer-song	\N	\N	0	3	67	2016-08-03 02:10:51	2016-08-03 02:10:51	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
104	38	1b0ec115e6c95a99aab8dccc	superseded	ruby	beer-song	\N	\N	0	2	67	2016-08-04 11:40:43	2016-08-04 11:40:43	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
105	38	a748edd7d45d20622e341eea	superseded	ruby	beer-song	\N	\N	0	1	67	2016-08-04 17:21:52	2016-08-04 17:21:52	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
106	38	6d65fd44065741d9e9355b51	superseded	ruby	beer-song	\N	\N	0	4	67	2016-08-05 21:13:09	2016-08-05 21:13:09	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
107	38	467150fa46db68b60e67e49f	done	ruby	beer-song	\N	\N	0	5	67	2016-08-09 14:45:51	2016-08-09 14:45:51	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
108	38	c98e04a0f46c7ff09b68d142	\N	ruby	space-age	\N	\N	0	1	68	2016-08-07 00:05:44	2016-08-07 00:05:44	{"space_age.rb":"class SpaceAge\\n  ORBITS = {\\n    mercury: 0.2408467,\\n    venus: 0.61519726,\\n    mars: 1.8808158,\\n    jupiter: 11.862615,\\n    saturn: 29.447498,\\n    uranus: 84.016846,\\n    neptune: 164.79132\\n  }\\n\\n  attr_accessor :seconds\\n\\n  def initialize(age)\\n    @seconds = age\\n  end\\n\\n  def on_earth\\n    @seconds.to_f / 315_576_00\\n  end\\n\\n  ORBITS.keys.each do |planet|\\n    define_method \\"on_#{planet}\\" do\\n      on_earth / ORBITS[planet]\\n    end\\n  end\\nend"}
109	38	1c336c661c907ca709f8eed2	\N	javascript	hamming	\N	\N	0	1	69	2016-08-03 10:31:07	2016-08-03 10:31:07	{"hamming.js":"var Hamming = function() {}\\n\\nHamming.prototype.compute = function compute(strand1, strand2) {\\n  var distance = 0;\\n\\n  if(strand1.length !== strand2.length) throw 'DNA strands must be of equal length.';\\n  if(strand1.length === strand2.length \\u0026\\u0026 strand1 === strand2) return distance;\\n\\n  for(var i = 0; i \\u003c strand1.length; i++) {\\n    if(strand1[i] !== strand2[i]) distance++;\\n  }\\n  return distance;\\n}\\n\\nmodule.exports = Hamming;"}
110	38	fc7019308c6b7c35cff25a21	done	ruby	leap	\N	\N	0	1	70	2016-08-07 10:17:28	2016-08-07 10:17:28	{"year.rb":"class Year\\n  def self.leap?(year)\\n    return false unless divisible_by?(year, 4)\\n\\n    is_century_but_not_fourth?(year) ? false : true\\n  end\\n\\n  private\\n  def self.divisible_by?(number, numerator)\\n    number % numerator == 0\\n  end\\n\\n  def self.is_century_but_not_fourth?(year)\\n    divisible_by?(year, 100) \\u0026\\u0026 !divisible_by?(year, 400)\\n  end\\nend"}
111	38	2fbb27d10b8197e7dfd39eaa	\N	elixir	bob	\N	\N	0	1	71	2016-08-06 22:18:05	2016-08-06 22:18:05	{"bob.exs":"defmodule Teenager do\\n\\n  def hey(input) do\\n    cond do\\n      empty? input -\\u003e \\"Fine. Be that way!\\"\\n      question? input -\\u003e \\"Sure.\\"\\n      yelling? input -\\u003e \\"Whoa, chill out!\\"\\n      true -\\u003e \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp empty?(input) do\\n    String.strip(input) == \\"\\"\\n  end\\n\\n  defp question?(input) do\\n    String.ends_with?(input, \\"?\\")\\n  end\\n\\n  defp yelling?(input) do\\n    # Check that input is all uppercase and not all downcase.\\n    # This ensures a string with only numerics and punctuation\\n    # (like \\"1, 2, 3\\") will not be detected as a yell.\\n    upcase?(input) and not downcase?(input)\\n  end\\n\\n  defp upcase?(input) do\\n    String.upcase(input) == input\\n  end\\n\\n  defp downcase?(input) do\\n    String.downcase(input) == input\\n  end\\nend"}
112	38	cb5d98c7010feeb74de5ca1e	\N	javascript	leap	\N	\N	0	1	72	2016-08-07 21:53:19	2016-08-07 21:53:19	{"leap.js":"var Leap = function(year) {\\n\\tif (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0) {\\n\\t\\treturn true;\\n\\t} else \\n\\t\\treturn false;\\n};\\n\\nmodule.exports = Leap;"}
113	38	eae81f13482fb52e87fa2b33	\N	javascript	leap	\N	\N	0	2	72	2016-08-09 10:33:03	2016-08-09 10:33:03	{"leap.js":"var Leap = function(year) {\\n\\treturn (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0);\\n};\\n\\nmodule.exports = Leap;"}
114	38	b2b684e807a439c22af47b13	pending	go	difference-of-squares	\N	\N	0	1	73	2016-08-06 07:48:56	2016-08-06 07:48:56	{"difference_of_squares.go":"package diffsquares\\n\\ntype iter func(int) int\\n\\nfunc SquareOfSums(n int) int {\\n\\tsum := iterate(n, func(n int) int { return n })\\n\\treturn sum * sum\\n}\\n\\nfunc SumOfSquares(n int) int {\\n\\treturn iterate(n, func(n int) int { return n * n })\\n}\\n\\nfunc Difference(n int) int {\\n\\treturn SquareOfSums(n) - SumOfSquares(n)\\n}\\n\\nfunc iterate(n int, fn iter) int {\\n\\tsum := 0\\n\\tfor i := 0; i \\u003c= n; i++ {\\n\\t\\tsum += fn(i)\\n\\t}\\n\\treturn sum\\n}"}
115	38	49b01ce2a85596acc8453120	superseded	haskell	house	\N	\N	0	1	74	2016-08-02 11:41:20	2016-08-02 11:41:20	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nimport Data.List (intercalate)\\n\\nrhyme :: String\\nrhyme = unlines strophes\\n  where strophes = map strophe [0..11]\\n\\nstrophe :: Int -\\u003e String\\nstrophe n = intro ++ subject n ++ rest ++ \\".\\\\n\\"\\n  where intro  = \\"This is the \\"\\n        verses = intercalate \\"\\\\n\\" $ map verse [n - 1, n - 2 .. 0]\\n        rest\\n          | n == 0    = \\"\\"\\n          | otherwise = \\"\\\\n\\" ++ verses\\n\\nverse :: Int -\\u003e String\\nverse n = \\"that \\" ++ verb n ++ \\" the \\" ++ subject n\\n\\nverb :: Int -\\u003e String\\nverb 0  = \\"lay in\\"\\nverb 1  = \\"ate\\"\\nverb 2  = \\"killed\\"\\nverb 3  = \\"worried\\"\\nverb 4  = \\"tossed\\"\\nverb 5  = \\"milked\\"\\nverb 6  = \\"kissed\\"\\nverb 7  = \\"married\\"\\nverb 8  = \\"woke\\"\\nverb 9  = \\"kept\\"\\nverb 10 = \\"belonged to\\"\\nverb _  = undefined\\n\\nsubject :: Int -\\u003e String\\nsubject 0  = \\"house that Jack built\\"\\nsubject 1  = \\"malt\\"\\nsubject 2  = \\"rat\\"\\nsubject 3  = \\"cat\\"\\nsubject 4  = \\"dog\\"\\nsubject 5  = \\"cow with the crumpled horn\\"\\nsubject 6  = \\"maiden all forlorn\\"\\nsubject 7  = \\"man all tattered and torn\\"\\nsubject 8  = \\"priest all shaven and shorn\\"\\nsubject 9  = \\"rooster that crowed in the morn\\"\\nsubject 10 = \\"farmer sowing his corn\\"\\nsubject 11 = \\"horse and the hound and the horn\\"\\nsubject _  = undefined"}
136	38	5beab9a074227c51c4de2f33	\N	ecmascript	hello-world	\N	\N	0	1	85	2016-08-04 00:58:46	2016-08-04 00:58:46	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
116	38	f1aadce00d548516a2caef96	done	haskell	house	\N	\N	0	2	74	2016-08-04 11:38:37	2016-08-04 11:38:37	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nverses :: [String]\\nverses = [\\n    \\"the house that Jack built.\\\\n\\"\\n  , \\"the malt\\\\nthat lay in\\"\\n  , \\"the rat\\\\nthat ate\\"\\n  , \\"the cat\\\\nthat killed\\"\\n  , \\"the dog\\\\nthat worried\\"\\n  , \\"the cow with the crumpled horn\\\\nthat tossed\\"\\n  , \\"the maiden all forlorn\\\\nthat milked\\"\\n  , \\"the man all tattered and torn\\\\nthat kissed\\"\\n  , \\"the priest all shaven and shorn\\\\nthat married\\"\\n  , \\"the rooster that crowed in the morn\\\\nthat woke\\"\\n  , \\"the farmer sowing his corn\\\\nthat kept\\"\\n  , \\"the horse and the hound and the horn\\\\nthat belonged to\\"\\n  ]\\n\\nrhyme :: String\\nrhyme = unlines $ map (\\"This is \\" ++) strophes\\n  where strophes = scanl1 f verses\\n        f song verse = verse ++ \\" \\" ++ song"}
117	38	5b4864e7ec28aad9c015677b	\N	racket	grep	\N	\N	0	2	75	2016-08-05 05:30:02	2016-08-05 05:30:02	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))]\\n                      #:when ((matcher) rx line))\\n                 (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
118	38	fe3ee714afd613f0450e61fc	\N	racket	grep	\N	\N	0	4	75	2016-08-07 13:39:25	2016-08-07 13:39:25	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (for/list ([line-number (in-naturals 1)]\\n             [line (file-\\u003elines path)]\\n             #:when ((matcher) rx line))\\n            (cons line-number line)))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n  \\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n  \\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (for* ([path paths]\\n         [matches (grep-file path pattern)])\\n        ((file-handler) path matches)))"}
119	38	aa56272689afbd6eda10080d	\N	racket	grep	\N	\N	0	1	75	2016-08-08 23:51:39	2016-08-08 23:51:39	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))])\\n             (if ((matcher) rx line)\\n                 (cons (cons line-number line) match-list)\\n                 match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
120	38	381c32bb2edd711717a4be46	\N	racket	grep	\N	\N	0	3	75	2016-08-09 11:41:00	2016-08-09 11:41:00	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (file-\\u003elines path)]\\n                      #:when ((matcher) rx line))\\n             (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n\\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n\\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n\\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (define file-matchlists (map (Î» (path) (grep-file path pattern))\\n                               paths))\\n  (for ([path paths]\\n        [matches file-matchlists])\\n       ((file-handler) path matches)))"}
121	38	2e7910107d1bbae248b3c470	pending	ruby	matrix	\N	\N	0	1	76	2016-08-04 08:24:59	2016-08-04 08:24:59	{"matrix.rb":"# Matrix class\\nclass Matrix\\n  attr_reader :rows\\n\\n  def initialize(s)\\n    @matrix = s.split(\\"\\\\n\\").map { |rs| rs.split(' ').map(\\u0026:to_i) }\\n  end\\n\\n  def rows\\n    @matrix\\n  end\\n\\n  def columns\\n    first, *rest = @matrix\\n    first.zip(*rest)\\n  end\\nend"}
122	38	a92bd2964ecb68fade063e40	needs_input	python	hamming	\N	\N	0	2	77	2016-08-02 17:02:07	2016-08-02 17:02:07	{"hamming.py":"\\"\\"\\"Python distance exercise solution\\"\\"\\"\\n\\ndef distance(text_one, text_two):\\n    \\"\\"\\"Calculate distance between two strings\\"\\"\\"\\n    count = 0\\n\\n    for (char1, char2) in zip(text_one, text_two):\\n        if char1 != char2:\\n            count += 1\\n\\n    return count"}
123	38	f0d275e6d1ed803284763b5c	superseded	python	hamming	\N	\N	0	1	77	2016-08-05 04:34:44	2016-08-05 04:34:44	{"hamming.py":"def distance(textOne, textTwo):\\n    count  = 0\\n    lenTwo = len(textTwo)\\n\\n    for i, c in enumerate(textOne):\\n        if lenTwo \\u003c= i or textTwo[i] != c:\\n            count += 1\\n\\n    return count + lenTwo - len(textOne)"}
137	38	4feca826ea120d2147669064	pending	python	accumulate	\N	\N	0	1	86	2016-08-03 21:58:25	2016-08-03 21:58:25	{"accumulate.py":"def accumulate(iterable, func):\\n    return [func(x) for x in iterable]"}
219	46	56d7c3c9664431d842285398	\N	scala	difference-of-squares	\N	\N	0	2	138	2016-03-23 21:44:21	2016-03-23 21:44:21	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    square((0 to i).sum)\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(square).sum \\n  }\\n  \\n  private def square(i: Int) = {\\n    i * i\\n  }\\n}"}
124	38	c75a20d268e0da5ac3782436	pending	python	atbash-cipher	\N	\N	0	1	78	2016-08-03 22:35:56	2016-08-03 22:35:56	{"atbash_cipher.py":"import re\\n\\nALPHABET = 'abcdefghijklmnopqrstuvwxyz'\\nINVALID_CHARACTERS = re.compile(\\"[^a-z0-9]|\\\\s\\", re.IGNORECASE)\\n\\ndef encode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_encoded_letter(l, i) for i, l in enumerate(str)])\\n\\ndef decode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_reverse_letter(l, True) for l in str])\\n\\ndef _get_encoded_letter(letter, i):\\n  is_next_group = i \\u003e 0 and i % 5 is 0\\n  space = \\" \\" if is_next_group else \\"\\"\\n  encoded_letter = _get_reverse_letter(letter)\\n  return \\"{}{}\\".format(space, encoded_letter)\\n\\ndef _get_reverse_letter(letter, decoding=False):\\n    letter = letter.lower()\\n    if letter in ALPHABET:\\n      index = _get_index(letter, decoding)\\n      reverse_index = (index + 1) * -1\\n      return ALPHABET[reverse_index]\\n    else:\\n      return letter\\n\\ndef _get_valid_characters(str):\\n    return re.sub(INVALID_CHARACTERS, \\"\\", str)\\n\\ndef _get_index(letter, decoding):\\n    index = ALPHABET.index(letter)\\n    return index - len(ALPHABET) if decoding else index"}
125	38	4dcc5633f5273b114c6f0334	\N	clojure	space-age	\N	\N	0	1	79	2016-08-06 15:10:31	2016-08-06 15:10:31	{"space_age.clj":"(ns space-age)\\n\\n(def ratios {\\n      :mercury 0.2408467\\n      :venus 0.61519726\\n      :mars 1.8808158\\n      :jupiter 11.862615\\n      :saturn 29.447498\\n      :uranus 84.016846\\n      :neptune 164.79132\\n      })\\n\\n(defn on-earth\\n  [seconds]\\n  (float (/ seconds 31557600)))\\n\\n(defn div-by-earth\\n  [seconds planet]\\n  (/ (on-earth seconds) (ratios planet)))\\n\\n(defn on-mercury\\n  [seconds]\\n  (div-by-earth seconds :mercury))\\n\\n(defn on-venus\\n  [seconds]\\n  (div-by-earth seconds :venus))\\n\\n(defn on-mars\\n  [seconds]\\n  (div-by-earth seconds :mars))\\n\\n(defn on-jupiter\\n  [seconds]\\n  (div-by-earth seconds :jupiter))\\n\\n(defn on-saturn\\n  [seconds]\\n  (div-by-earth seconds :saturn))\\n\\n(defn on-uranus\\n  [seconds]\\n  (div-by-earth seconds :uranus))\\n\\n(defn on-neptune\\n  [seconds]\\n  (div-by-earth seconds :neptune))"}
126	38	985982619acfec99a8a55187	\N	coffeescript	hello-world	\N	\N	0	1	80	2016-08-09 09:17:06	2016-08-09 09:17:06	{"hello_world.coffee":"class HelloWorld\\n\\thello: (name = '') -\\u003e\\n\\t\\tif name == '' then 'Hello, World!' else \\"Hello, #{name}!\\"\\n\\nmodule.exports = HelloWorld"}
127	38	473994133287cde2e79f094d	hibernating	cpp	hamming	\N	\N	0	1	81	2016-08-05 11:39:10	2016-08-05 11:39:10	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
128	38	55c4bc6d4d4c9e63b4e600b0	\N	cpp	hamming	\N	\N	0	2	81	2016-08-07 22:08:02	2016-08-07 22:08:02	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
129	38	3de96f401fe5d58d9d1a7650	done	clojure	word-count	\N	\N	0	2	82	2016-08-02 19:19:03	2016-08-02 19:19:03	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
130	38	3665a27a49f3831ab44f7e93	superseded	clojure	word-count	\N	\N	0	1	82	2016-08-04 14:24:41	2016-08-04 14:24:41	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
131	38	dfcb0816e4e962dd9c6c9d4f	superseded	ruby	word-count	\N	\N	0	1	83	2016-08-04 17:56:32	2016-08-04 17:56:32	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
132	38	d1fc6ca74ccec0ba6846580c	superseded	ruby	word-count	\N	\N	0	3	83	2016-08-05 00:07:12	2016-08-05 00:07:12	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
133	38	c5fb77af5a5fd4748e9aa4ff	done	ruby	word-count	\N	\N	0	4	83	2016-08-06 22:48:30	2016-08-06 22:48:30	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
134	38	79e4bda375d4e2a48b2e8b57	superseded	ruby	word-count	\N	\N	0	2	83	2016-08-07 22:37:58	2016-08-07 22:37:58	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
135	38	2a92b78b7108627ee37049f8	pending	ocaml	bob	\N	\N	0	1	84	2016-08-07 02:35:21	2016-08-07 02:35:21	{"/ocaml/bob/bob.ml":"open Core.Std\\n\\n(* We can't really use String.is_empty because we have to handle strings\\n   that only contain whitespace. *)\\nlet is_empty = String.for_all ~f:Char.is_whitespace\\n\\nlet is_shouting input =\\n  String.exists ~f:Char.is_alpha input \\u0026\\u0026\\n  String.for_all ~f:Char.is_uppercase (String.filter ~f:Char.is_alpha input)\\n\\nlet is_question = String.is_suffix ~suffix:\\"?\\"\\n\\nlet response_for = function\\n  | input when is_empty input    -\\u003e \\"Fine. Be that way!\\"\\n  | input when is_shouting input -\\u003e \\"Whoa, chill out!\\"\\n  | input when is_question input -\\u003e \\"Sure.\\"\\n  | _                            -\\u003e \\"Whatever.\\""}
138	38	1ff45cef21134df1d7782685	superseded	haskell	nucleotide-count	\N	\N	0	3	87	2016-08-03 06:19:59	2016-08-03 06:19:59	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ (pairsMap 0 nucleotides) ++ (pairsMap 1 dna)\\r\\n    where pairsMap val ns = ns `zip` (repeat val)\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
139	38	bb819a6a7a3fba1589f3a54a	superseded	haskell	nucleotide-count	\N	\N	0	2	87	2016-08-03 09:44:07	2016-08-03 09:44:07	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
140	38	a0522ba11d03b01b92cd9a95	superseded	haskell	nucleotide-count	\N	\N	0	1	87	2016-08-03 23:56:56	2016-08-03 23:56:56	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n dna = if n `elem` nucleotides\\r\\n    then length $ filter (== n) dna \\r\\n    else error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
141	38	605ca262216d892de695cd11	hibernating	haskell	nucleotide-count	\N	\N	0	5	87	2016-08-08 03:48:53	2016-08-08 03:48:53	{"DNA.hs":"module DNA where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromList)\\r\\nimport Control.Monad (forM_)\\r\\nimport Data.Array.ST (readArray, writeArray, newArray, runSTUArray)\\r\\nimport Data.Array.Unboxed (UArray, assocs)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts = fromList . filter (\\\\(n,_) -\\u003e n `elem` nucleotides) . assocs . countArray\\r\\n\\t\\r\\ncountArray :: DNA -\\u003e UArray Nucleotide Int\\r\\ncountArray dna = runSTUArray $ do\\r\\n\\tcounts \\u003c- newArray ('A','Z') 0\\r\\n\\tforM_ dna $ \\\\n -\\u003e do\\r\\n\\t\\tc \\u003c- readArray counts n\\r\\n\\t\\twriteArray counts n (1+c)\\r\\n\\treturn counts"}
142	38	08dda423c0623043da5aad3a	superseded	haskell	nucleotide-count	\N	\N	0	4	87	2016-08-08 19:05:26	2016-08-08 19:05:26	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ pairsMap 0 nucleotides ++ pairsMap 1 dna\\r\\n    where pairsMap val ns = ns `zip` repeat val\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
143	38	9a3c3f1a1ad35a94b79bc0d8	done	csharp	leap	\N	\N	0	1	88	2016-08-06 20:48:19	2016-08-06 20:48:19	{"Year.cs":"using System;\\r\\n\\r\\npublic class Year\\r\\n{\\r\\n    public static Boolean IsLeap(int year)\\r\\n    {\\r\\n        if( year % 4 == 0)\\r\\n        {\\r\\n            if (year % 100 == 0 \\u0026\\u0026 year % 400 != 0)\\r\\n                return false;\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}"}
144	38	c5e9e59bd07e7cbbb70f8f2e	\N	haskell	clock	\N	\N	0	1	89	2016-08-04 16:06:41	2016-08-04 16:06:41	{"Clock.hs":"module Clock(fromHourMin, toString) where\\nimport Text.Printf (printf)\\n\\ndata Clock = Clock { hour :: Integer\\n                   , minute :: Integer\\n                   } deriving (Eq, Show)\\n                     \\ninstance Num Clock where\\n  fromInteger = fromHourMin 0\\n  (Clock h1 m1) + (Clock h2 m2) = fromHourMin (h1 + h2) (m1 + m2)\\n  negate (Clock h m) = Clock (hoursPerDay - h - 1) (minutesPerHour - m)\\n  (*) = undefined\\n  abs = undefined\\n  signum = undefined\\n\\nfromHourMin :: Integer -\\u003e Integer -\\u003e Clock\\nfromHourMin h m = Clock {minute=m', hour=h'} \\n    where h' = (h + m `div` minutesPerHour) `mod` hoursPerDay\\n          m' = m `mod` minutesPerHour \\n          \\ntoString :: Clock -\\u003e String \\ntoString c = printf \\"%02d:%02d\\" (hour c) (minute c)\\n\\nminutesPerHour :: Integer\\nminutesPerHour = 60\\n\\nhoursPerDay :: Integer\\nhoursPerDay = 24"}
145	38	12d433f8cd3723979e2170a6	\N	elixir	acronym	\N	\N	0	3	90	2016-08-03 02:41:23	2016-08-03 02:41:23	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string\\n    |\\u003e String.split(~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    |\\u003e Enum.reduce(\\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
146	38	2ae7e69b7c3972ed2f44770a	\N	elixir	acronym	\N	\N	0	2	90	2016-08-04 14:15:31	2016-08-04 14:15:31	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
147	38	c136f9bcbde8a137bc365a6a	\N	elixir	acronym	\N	\N	0	1	90	2016-08-07 02:33:39	2016-08-07 02:33:39	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/(\\\\s|\\\\W|([a-z](?=[A-Z])))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
160	38	aeec9b3d1f6a1869ed5af861	superseded	javascript	word-count	\N	\N	0	1	96	2016-08-09 03:23:28	2016-08-09 03:23:28	{"word-count.js":"function words(input) {\\n  var individualWords = input.split(' ');\\n  var counts = {};\\n  individualWords.forEach(function(w) {\\n    var cleanWord = w.match(/[a-zA-Z0-9]*/)[0];\\n    if (cleanWord !== null \\u0026\\u0026 cleanWord !== '') {\\n      cleanWord = cleanWord.toLowerCase();\\n      if (counts[cleanWord]) {\\n        counts[cleanWord] = counts[cleanWord] + 1;\\n      } else {\\n        counts[cleanWord] = 1;\\n      }\\n    }\\n  }, this);\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
148	38	7bc015e95e2a2fc4636917ba	pending	go	luhn	\N	\N	0	1	91	2016-08-07 09:59:00	2016-08-07 09:59:00	{"/go/luhn/luhn.go":"package luhn\\n\\nimport (\\n\\t\\"log\\"\\n\\t\\"regexp\\"\\n\\t\\"strconv\\"\\n)\\n\\nfunc sum(input string) int {\\n\\t//re := regexp.MustCompile(\\"[^0-9]\\")\\n\\t//input = re.ReplaceAllString(input, \\"\\")\\n\\n\\ttotal := 0\\n\\n\\tfor i := 0; i \\u003c len(input); i++ {\\n\\t\\tnum := int(input[len(input)-1-i] - '0')\\n\\t\\tif i%2 == 0 {\\n\\t\\t\\ttotal += num\\n\\t\\t\\tcontinue\\n\\t\\t}\\n\\t\\toddcase := num * 2\\n\\t\\tif oddcase \\u003e= 10 {\\n\\t\\t\\toddcase -= 9\\n\\t\\t}\\n\\t\\ttotal += oddcase\\n\\t}\\n\\n\\treturn total\\n}\\n\\nfunc Valid(input string) bool {\\n\\tre := regexp.MustCompile(\\"[^0-9]\\")\\n\\tinput = re.ReplaceAllString(input, \\"\\")\\n\\n\\tif len(input) == 0 {\\n\\t\\treturn false\\n\\t}\\n\\n\\ttotal := sum(input)\\n\\n\\tif total%10 == 0 {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}\\n\\nvar _ = log.Println\\n\\nfunc AddCheck(input string) string {\\n\\tfor i := 0; i \\u003c 10; i++ {\\n\\t\\tcheck := strconv.Itoa(i)\\n\\t\\tret := input + check\\n\\t\\tif Valid(ret) {\\n\\t\\t\\treturn ret\\n\\t\\t}\\n\\t}\\n\\treturn \\"\\"\\n}"}
149	38	1e7234f4ccd98cfbefe1aaed	pending	javascript	palindrome-products	\N	\N	0	1	92	2016-08-04 14:17:12	2016-08-04 14:17:12	{"/javascript/palindrome-products/palindrome-products.js":"var Palindrome = function(params){\\n  this.maxFactor=params.maxFactor;\\n  this.minFactor=params.minFactor || 1;\\n  this.maxProduct=1;\\n  this.minProduct=Infinity;\\n  this.data=[];\\n};\\n\\nPalindrome.prototype.generate = function(){\\n  for (var ii=this.minFactor;ii\\u003cthis.maxFactor;ii++){\\n    for (var jj=ii;jj\\u003c=this.maxFactor;jj++){\\n      var product=ii*jj;\\n      if (product.toString().split('').reverse().join('')===product.toString()){\\n        this.data[product]=[ii,jj];\\n        this.maxProduct = Math.max(this.maxProduct, product);\\n        this.minProduct = Math.min(this.minProduct, product);\\n      }\\n    }\\n  }\\n};\\n\\nPalindrome.prototype.largest = function(){\\n  this.value=this.maxProduct;\\n  this.factors=[this.data[this.maxProduct]];\\n  return this;\\n};\\n\\nPalindrome.prototype.smallest = function(){\\n  this.value=this.minProduct;\\n  this.factors=[this.data[this.minProduct]];\\n  return this;\\n};\\n\\nmodule.exports = Palindrome;"}
150	38	6685baa31cdde901400b3a88	superseded	clojure	rna-transcription	\N	\N	0	1	93	2016-08-06 17:23:09	2016-08-06 17:23:09	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
151	38	955d49f0a32a21365c914f00	pending	clojure	rna-transcription	\N	\N	0	2	93	2016-08-08 04:44:36	2016-08-08 04:44:36	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
152	38	6754a6649c5966735e5aac4c	done	haskell	difference-of-squares	\N	\N	0	3	94	2016-08-03 23:42:08	2016-08-03 23:42:08	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n `pow` 3 + 3 * n `pow` 2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n `pow` 4 + 2 * n `pow` 3 + n `pow` 2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n `pow` 4 + 2 * n `pow` 3 - 3 * n `pow` 2 - 2 * n) `div` 12\\n\\npow :: Num a =\\u003e a -\\u003e Int -\\u003e a\\npow = (^)"}
153	38	9ee21c4b003e3723af8f37ca	superseded	haskell	difference-of-squares	\N	\N	0	2	94	2016-08-05 22:34:20	2016-08-05 22:34:20	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n^3 + 3 * n^2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n^4 + 2 * n^3 + n^2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n^4 + 2 * n^3 - 3 * n^2 - 2 * n) `div` 12"}
154	38	33d6c3c16a0831dadc74bd5f	superseded	haskell	difference-of-squares	\N	\N	0	1	94	2016-08-08 06:53:25	2016-08-08 06:53:25	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (sum . map square) [1..n]\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (square . sum) [1..n]\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = squareOfSums n - sumOfSquares n\\n\\nsquare :: (Integral a) =\\u003e a -\\u003e a\\nsquare x = x * x"}
155	38	c1c2e418df3a1e6ab9b4e2f2	\N	haskell	anagram	\N	\N	0	1	95	2016-08-06 00:06:25	2016-08-06 00:06:25	{"Anagram.hs":"module Anagram\\n       ( anagramsFor\\n       ) where\\n\\nimport           Data.Char (toLower)\\nimport           Data.List (sort)\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor word = filter isAnagram\\n  where\\n    isAnagram candidate = canon candidate == canonWord\\n                       \\u0026\\u0026 lower candidate /= lower word\\n    canonWord = canon word\\n\\n-- Canonicalize words for comparison.\\ncanon :: String -\\u003e String\\ncanon = sort . lower\\n\\nlower :: String -\\u003e String\\nlower = map toLower"}
156	38	cbbc613341a83dd3479c05ed	superseded	javascript	word-count	\N	\N	0	4	96	2016-08-04 17:06:28	2016-08-04 17:06:28	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word, index, array) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
157	38	20d841a4319d1027660a7903	superseded	javascript	word-count	\N	\N	0	3	96	2016-08-05 07:06:09	2016-08-05 07:06:09	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/g).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] += 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
158	38	b273aa092355cc3020c0647e	superseded	javascript	word-count	\N	\N	0	2	96	2016-08-06 05:15:33	2016-08-06 05:15:33	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/gi).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] = counts[word] + 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
159	38	b554127593c1f15e44c7492f	done	javascript	word-count	\N	\N	0	5	96	2016-08-06 23:40:02	2016-08-06 23:40:02	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
161	38	149924bee8be6aa6d3680c9f	pending	go	triangle	\N	\N	0	1	97	2016-08-06 22:23:16	2016-08-06 22:23:16	{"triangle.go":"package triangle\\n\\nimport (\\n\\t\\"math\\"\\n)\\n\\ntype Kind struct {\\n\\tname string\\n}\\n\\nvar Equ = Kind{\\"Equ\\"}\\nvar Iso = Kind{\\"Iso\\"}\\nvar Sca = Kind{\\"Sca\\"}\\nvar NaT = Kind{\\"NaT\\"}\\n\\nfunc KindFromSides(a float64, b float64, c float64) Kind {\\n\\t//ret := \\u0026Equ{\\"equ\\"}\\n\\tif testNat([3]float64{a, b, c}) {\\n\\t\\treturn NaT\\n\\t}\\n\\tif a == b \\u0026\\u0026 b == c {\\n\\t\\treturn Equ\\n\\t} else if a == b || b == c || c == a {\\n\\t\\treturn Iso\\n\\t} else {\\n\\t\\treturn Sca\\n\\t}\\n\\t//return Equ\\n}\\n\\nfunc testNat(sides [3]float64) bool {\\n\\tvar sum float64 = 0\\n\\tvar max float64 = 0\\n\\tfor _, side := range sides {\\n\\t\\tif side \\u003c= 0 || math.IsNaN(side) || math.IsInf(side, 0) {\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\t\\tsum += side\\n\\t\\tif side \\u003e max {\\n\\t\\t\\tmax = side\\n\\t\\t}\\n\\t}\\n\\tif (sum - max) \\u003c= max {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}"}
162	38	7e364beaf8d5f8be8c510842	\N	php	difference-of-squares	\N	\N	0	1	98	2016-08-04 15:21:51	2016-08-04 15:21:51	{"difference-of-squares.php":"\\u003c?php\\n\\nfunction sumOfSquares(int $to)\\n{\\n  return array_reduce(range(1, $to), function ($c, int $i) {\\n    return $c + pow($i, 2);\\n  });\\n}\\n\\nfunction squareOfSums(int $to)\\n{\\n  return pow(array_sum(range(1, $to)), 2);\\n}\\n\\nfunction difference(int $to)\\n{\\n  return squareOfSums($to) - sumOfSquares($to);\\n}"}
163	38	b91e7929a4c9a5556eba8d54	\N	python	run-length-encoding	\N	\N	0	2	99	2016-08-04 19:26:16	2016-08-04 19:26:16	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
164	38	fe5589579af6685c83342c69	\N	python	run-length-encoding	\N	\N	0	1	99	2016-08-06 18:26:06	2016-08-06 18:26:06	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
165	38	95963984c3ade993a9b8e1a8	pending	python	word-count	\N	\N	0	1	100	2016-08-03 07:22:07	2016-08-03 07:22:07	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(self):\\n\\tself = ' '.join(self.split()) #split and rejoin to clear out extra spaces and new lines\\n\\twords = self.split(' ') #split into array by space delimiting\\n\\tfinalcount = Counter(words) #count words\\n\\treturn finalcount"}
166	38	6bf6002f97348117ea959898	\N	javascript	sieve	\N	\N	0	1	101	2016-08-03 22:37:28	2016-08-03 22:37:28	{"sieve.js":"var Sieve = function(max) {\\n\\tthis.max = max;\\n\\tthis.primes = [];\\n\\tvar tested = [1];\\n\\tvar j = 1;\\n\\twhile (j+1 \\u003c= max) {\\n\\t\\tif (tested[j++]) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tthis.primes.push(j);\\n\\t\\tfor (var k = j; k \\u003c= max; k += j) {\\n\\t\\t\\ttested[k-1]= 1;\\n\\t\\t}\\n\\t}\\n};\\n\\nmodule.exports = Sieve;"}
167	38	7be7fabce6e44abdca3764b5	\N	scala	bob	\N	\N	0	2	102	2016-08-04 05:26:48	2016-08-04 05:26:48	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request.trim.isEmpty) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
168	38	a73866238dc0ef120e2f2de4	\N	scala	bob	\N	\N	0	3	102	2016-08-05 16:56:10	2016-08-05 16:56:10	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  import bob._\\n  def hey(request: String): String = { request match {\\n    case silence() =\\u003e \\"Fine. Be that way!\\"\\n    case yelling() =\\u003e \\"Whoa, chill out!\\"\\n    case question() =\\u003e \\"Sure.\\"\\n    case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n}\\n\\nobject bob {\\n  val silence = \\"\\"\\"\\\\s*\\"\\"\\".r\\n  val yelling = \\"\\"\\"[^a-z]*[A-Z][^a-z]\\"\\"\\".r\\n  val question = \\"\\"\\".*[?]\\"\\"\\".r\\n}"}
169	38	653b9b99ed65831fc2f4e957	\N	scala	bob	\N	\N	0	1	102	2016-08-07 19:11:14	2016-08-07 19:11:14	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    val regexAll = \\"\\"\\"[a-zA-Z0-9]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request == \\"\\" || (request==regexAll.replaceAllIn(request, \\" \\"))) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
170	40	26234b041a5515012f1474b2	\N	python	difference-of-squares	\N	\N	0	1	103	2016-07-17 21:22:20	2016-07-17 21:22:20	{"diffsquare.py":"n= int(input(\\"enter n value: \\"))\\ndef sum_of_squares(n):\\n    return sum([i**2 for i in range(1, n+1)])\\n\\ndef square_of_sum(n):\\n    return sum(range(1, n+1)) ** 2\\n\\nprint square_of_sum(n) - sum_of_squares(n)"}
171	44	f7e015a9bc0868b419e9cbf0	\N	python	difference-of-squares	\N	\N	0	1	104	2016-04-28 01:27:22	2016-04-28 01:27:22	{"diffsquare.py":"n= int(input(\\"enter n value: \\"))\\ndef sum_of_squares(n):\\n    return sum([i**2 for i in range(1, n+1)])\\n\\ndef square_of_sum(n):\\n    return sum(range(1, n+1)) ** 2\\n\\nprint square_of_sum(n) - sum_of_squares(n)"}
172	44	70f9e24d3c3f5c63a8b13145	pending	perl5	etl	\N	\N	0	1	105	2016-05-04 12:33:09	2016-05-04 12:33:09	{"\\\\perl5\\\\etl\\\\etl.pm":"use strict;\\r\\nuse warnings;\\r\\n\\r\\npackage ETL;\\r\\n\\r\\nsub transform {\\r\\n    my ($in) = @_;\\r\\n    my %out;\\r\\n\\r\\n    for my $score (keys %{$in}) {\\r\\n        for my $letter (@{$in-\\u003e{$score}}) {\\r\\n            $out{lc $letter} = $score;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return \\\\%out;\\r\\n}\\r\\n\\r\\n1;"}
173	44	35030485db954a70e67d9792	\N	python	sublist	\N	\N	0	1	106	2016-07-16 17:06:58	2016-07-16 17:06:58	{"/python/sublist/sublist.py":"SUBLIST = 1\\nSUPERLIST = 2\\nEQUAL = 3\\nUNEQUAL = 4\\n\\ndef check_lists(list1, list2):\\n    l1, l2 = len(list1), len(list2)\\n    if l1 == l2:\\n        for i, x in enumerate(list1):\\n            if x != list2[i]:\\n                return UNEQUAL\\n        else:\\n            return EQUAL\\n    diff = l1 - l2\\n    if diff \\u003e 0:\\n        ret = SUPERLIST\\n    else:\\n        ret = SUBLIST\\n        list2, list1 = list1, list2\\n        l2, l1 = l1, l2\\n        diff *= -1\\n    for i in range(diff+1):\\n        for j, item in enumerate(list2):\\n            if list1[i+j] != item:\\n                break\\n        else:\\n            return ret\\n    return UNEQUAL"}
174	46	893b9faf4d1d6018e9cb9955	\N	python	kindergarten-garden	\N	\N	0	1	107	2016-01-15 19:00:30	2016-01-15 19:00:30	{"garden.py":"all_students = ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Fred', 'Ginny',\\n                'Harriet', 'Ileana', 'Joseph', 'Kincaid', 'Larry']\\n\\nall_plants = {'V': 'Violets', 'R': 'Radishes', 'C': 'Clover', 'G': 'Grass'}\\n\\n\\nclass Garden():\\n    def __init__(self, rows, students=all_students):\\n        self.rows = rows.split()\\n        self.students = sorted(students)\\n\\n    def plants(self, student):\\n        \\"\\"\\"\\n        Returns student's plants as a list\\n        \\"\\"\\"\\n        student_plants = []\\n        for row in self.rows:\\n            student_plants.extend(self.get_plants_of(student, row))\\n\\n        return student_plants\\n\\n    def get_plants_of(self, student, row):\\n        \\"\\"\\"\\n        Returns student's plants in a row as a list\\n        \\"\\"\\"\\n        return [all_plants[row[self.students.index(student) * 2]],\\n                all_plants[row[self.students.index(student) * 2 + 1]]]"}
175	46	dca1b7b1000a021cc4500455	pending	javascript	beer-song	\N	\N	0	1	108	2016-01-09 09:19:52	2016-01-09 09:19:52	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
176	46	a6c5298b62e1b6489e660cde	\N	elixir	zipper	\N	\N	0	1	109	2016-02-24 09:19:52	2016-02-24 09:19:52	{"zipper.exs":"# def BinTree, value: nil, left: nil, right: nil do\\n#   @moduledoc \\"\\"\\"\\n#   A node in a binary tree.\\n\\n#   `value` is the value of a node.\\n#   `left` is the left subtree (nil if no subtree).\\n#   `right` is the right subtree (nil if no subtree).\\n#   \\"\\"\\"\\n#   record_type value: any, left: BinTree.t | nil, right: BinTree.t | nil\\n# end\\n\\ndefmodule BinTree do\\n  defstruct value: nil, left: nil, right: nil\\nend\\n\\ndefmodule Zipper do\\n\\n  defstruct focus: nil, trail: [], root: nil\\n\\n  alias BinTree, as: BT\\n  alias __MODULE__, as: Z\\n\\n  @doc \\"\\"\\"\\n  Get a zipper focussed on the root node.\\n  \\"\\"\\"\\n  #@spec from_tree(BT.t) :: Z.t\\n  def from_tree(bt) do\\n    %Z{focus: bt, root: bt}\\n  end\\n\\n  @doc \\"\\"\\"\\n  Get the complete tree from a zipper.\\n  \\"\\"\\"\\n  #@spec to_tree(Z.t) :: BT.t\\n  def to_tree(z = %Z{root: complete_tree}) do\\n    complete_tree\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the value of the focus node.\\n  # \\"\\"\\"\\n  # @spec value(Z.t) :: any\\n  def value(z = %Z{focus: focus}) do\\n    focus.value\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the left child of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec left(Z.t) :: Z.t | nil\\n  def left(z = %Z{focus: %BT{left: nil}, trail: trail}), do: nil\\n  def left(z = %Z{focus: focus, trail: trail}) do\\n    %Z{z | focus: focus.left, trail: [:left|trail]}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the right child of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec right(Z.t) :: Z.t | nil\\n  def right(z = %Z{focus: %BT{right: nil}, trail: trail}), do: nil\\n  def right(z = %Z{focus: focus, trail: trail}) do\\n    %Z{z | focus: focus.right, trail: [:right|trail]}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the parent of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec up(Z.t) :: Z.t\\n  def up(z) do\\n    %Z{z | focus: walk_up_to_parent(z.root, Enum.reverse(z.trail))}\\n  end\\n\\n  defp walk_up_to_parent(tree, []),             do: nil\\n  defp walk_up_to_parent(tree, [_]),            do: tree\\n  defp walk_up_to_parent(tree, [:left|trail]),  do: walk_up_to_parent(tree.left, trail)\\n  defp walk_up_to_parent(tree, [:right|trail]), do: walk_up_to_parent(tree.right, trail)\\n\\n  # @doc \\"\\"\\"\\n  # Set the value of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_value(Z.t, any) :: Z.t\\n  def set_value(z = %Z{focus: focus}, v) do\\n    new_focus = %BT{focus | value: v}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\n\\n  defp rebuild(tree, [], new_subtree),             do: new_subtree\\n  defp rebuild(tree, [:left], new_subtree),        do: %BT{tree | left: new_subtree}\\n  defp rebuild(tree, [:right], new_subtree),       do: %BT{tree | right: new_subtree}\\n  defp rebuild(tree, [:left|trail], new_subtree),  do: rebuild(tree.left, trail, new_subtree)\\n  defp rebuild(tree, [:right|trail], new_subtree), do: rebuild(tree.right, trail, new_subtree)\\n\\n  # @doc \\"\\"\\"\\n  # Replace the left child tree of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_left(Z.t, BT.t) :: Z.t\\n  def set_left(z = %Z{focus: focus}, l) do\\n    new_focus = %BT{focus | left: l}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Replace the right child tree of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_right(Z.t, BT.t) :: Z.t\\n  def set_right(z = %Z{focus: focus}, l) do\\n    new_focus = %BT{focus | right: l}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\nend"}
177	46	75d396b38af96346db7ec912	\N	python	pangram	\N	\N	0	1	110	2015-12-30 08:23:07	2015-12-30 08:23:07	{"pangram.py":"def is_pangram(s):\\n     return not set('abcdefghijklmnopqrstuvwxyz') - set(s.lower())"}
178	46	054c1f042449e6eb634dd3ef	pending	clojure	prime-factors	\N	\N	0	1	111	2016-02-08 15:22:28	2016-02-08 15:22:28	{"\\\\clojure\\\\prime-factors\\\\prime_factors.clj":"(ns prime-factors)\\n\\n(defn divisor? [prime-candidate]\\n  (fn [divider]\\n    (-\\u003e\\u003e divider (rem prime-candidate) (= 0))))\\n\\n\\n(defn prime? [primes last-prime]\\n  (fn [prime-candidate]\\r\\n    (let [prime-candidate-sqrt (java.lang.Math/sqrt prime-candidate)]                                                                                            \\r\\n      (-\\u003e\\u003e primes\\r\\n        (take-while #(\\u003c= % prime-candidate-sqrt))\\r\\n        (some (divisor? prime-candidate))\\r\\n        not))))\\r\\n\\n(def primes\\n  (lazy-cat \\n    [2]\\n    (iterate \\n      (fn [last-prime]\\n        (-\\u003e\\u003e (iterate (partial + 2) (+ 2 last-prime))\\r\\n          (filter (prime? primes last-prime))\\n          first)) \\n      3)))\\n\\n(defn of \\n  ([num] (of num [] 1))\\n  ([num factors last-found]\\n    (if (= num 1)\\n      factors\\n      (let [divisor (-\\u003e\\u003e primes\\n                      (drop-while #(\\u003c % last-found))\\n                      (filter (divisor? num))\\n                      first)]\\n        (of (/ num divisor) (conj factors divisor) divisor)))))"}
179	46	0ec4b5d2ffed2aa0796c5592	done	javascript	hello-world	\N	\N	0	1	112	2016-02-27 16:56:39	2016-02-27 16:56:39	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\nif(!input) {\\n    return \\"Hello, world!\\";\\n}\\nelse return \\"Hello, \\" + input + \\"!\\";\\n};\\n\\nmodule.exports = HelloWorld;"}
180	46	3c878d6a16896b6472bcefee	\N	javascript	bob	\N	\N	0	1	113	2016-05-31 15:32:15	2016-05-31 15:32:15	{"/javascript/bob/bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\n'use strict';\\n\\nmodule.exports = class Bob {\\n  constructor() {\\n    this.defaultResponse     = 'Whatever.';\\n    this.shoutingResponse    = 'Whoa, chill out!';\\n    this.answer              = 'Sure.';\\n    this.saidNothingResponse = 'Fine. Be that way!';\\n  }\\n\\n  hey(input) {\\n    if (this.isShouting(input)) return this.shoutingResponse;\\n    if (this.isQuestion(input)) return this.answer;\\n    if (this.saidNothing(input)) return this.saidNothingResponse;\\n    return this.defaultResponse;\\n  }\\n\\n  isShouting(input) {\\n    return /[a-zA-Z]/.test(input) \\u0026\\u0026 input.toUpperCase() === input;\\n  }\\n\\n  isQuestion(input) { \\n    return /\\\\?$/.test(input);\\n  }\\n\\n  saidNothing(input) {\\n    return input.length === 0 || /^\\\\s+$/.test(input);\\n  }\\n};"}
188	46	da8e561870786ab8a2a08699	\N	cpp	hamming	\N	\N	0	2	117	2016-06-11 15:51:05	2016-06-11 15:51:05	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
218	46	3d1ae5e3504fb212be34079a	hibernating	perl5	bob	\N	\N	0	1	137	2016-02-08 01:48:36	2016-02-08 01:48:36	{"bob.pm":"package Bob;\\n\\nuse 5.16.0;\\nuse strict;\\nuse warnings;\\n\\nsub hey($)\\n{\\n    my $saywhat=shift;\\n    print \\"saywhat=$saywhat\\\\n\\";\\n\\n    for ($saywhat) {\\n        when(/^\\\\s*$/)               { return(\\"Fine. Be that way!\\") }\\n        when(/[[:alpha:]]/ \\u0026\\u0026 uc)   { return(\\"Woah, chill out!\\") }  \\n        when(/\\\\?$/)                 { return(\\"Sure.\\") }\\n        default                     { return(\\"Whatever.\\") }\\n    };\\n}\\n\\n1;"}
181	46	ed18edc042b17b48472177f0	superseded	rust	anagram	\N	\N	0	1	114	2016-03-19 23:16:19	2016-03-19 23:16:19	{"src/lib.rs":"use std::ascii::AsciiExt;\\n\\n//fn remove_spaces(input: \\u0026str) -\\u003e String {\\n//   let mut buf = String::with_capacity(input.len());\\n//   for c in input.chars() {\\n//     buf.push(c);\\n//   }\\n//   buf\\n//}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn unicode_lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n//    let mut chars: Vec\\u003cchar\\u003e = s.chars().into_iter().collect();\\n    //let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()).collect();\\n//    let mut chars = lower_case_s.chars();\\n    chars.sort();\\n//    let lc: String = chars.map(|c| c.to_lowercase()).collect();\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string: String = lc_sorted_str(s);\\n    let s_string = s.to_string();\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if s_string.ne(anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    return answers;\\n}"}
182	46	becd66b8e2e607bcfb6b4d0e	superseded	rust	anagram	\N	\N	0	3	114	2016-04-25 01:24:35	2016-04-25 01:24:35	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = to_lowercase(s, true); // : String\\n    let lowercase_s = to_lowercase(s, false);  // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = to_lowercase(\\u0026anagram, true);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram, false) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\nfn to_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    //! lower case and optionally sort the string\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    // sort if necessary\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
183	46	a08a4cc1ba0b050b09d7e2de	superseded	rust	anagram	\N	\N	0	2	114	2016-05-21 07:14:00	2016-05-21 07:14:00	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = lc_sorted_str(s); // : String\\n    let lowercase_s = to_lowercase(s); // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    // lower case the string and then sort.\\n\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n    let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()\\n                                             .next()\\n                                             .expect(\\"should be char\\")).into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\nfn to_lowercase(instr: \\u0026str) -\\u003e String {\\n    // copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n    instr.chars().map(|c| c.to_lowercase()\\n                      .next()\\n                      .expect(\\"Should be char\\"))\\n        .collect::\\u003cString\\u003e()\\n}"}
184	46	897074c261533b3be2470a06	done	rust	anagram	\N	\N	0	4	114	2016-06-02 02:16:17	2016-06-02 02:16:17	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = sorted_lowercase(s); // : String\\n    let lowercase_s = lowercase(s);          // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = sorted_lowercase(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\n/// lower case the unicode string\\nfn lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, false)\\n}\\n\\n/// lower case and sort the unicode string\\nfn sorted_lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, true)\\n}\\n\\n/// lower case and optionally sort the string\\nfn _to_sorted_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
185	46	bb5ee33981e7176e101eb5a7	\N	scheme	grains	\N	\N	0	1	115	2016-02-04 18:44:49	2016-02-04 18:44:49	{"grains.scm":"(define-module (grains)\\n  #:export (square total)\\n  #:autoload (srfi srfi-1) (iota))\\n\\n(define (square n)\\n  (expt 2 (- n 1)))\\n\\n(define (total)\\n  (let total-partiel ((k 1) (accu 0))\\n    (if (\\u003e k 64)\\n\\taccu\\n\\t(total-partiel (+ 1 k) (+ accu (square k))))))"}
186	46	b8ef14ea98411fa88147f72c	done	scala	leap	\N	\N	0	1	116	2016-05-24 11:35:07	2016-05-24 11:35:07	{"leap.scala":"case class Year(value: Int) {\\n  def isLeap = divisibleBy(2000) || divisibleBy(4) \\u0026\\u0026 !divisibleBy(100)\\n\\n  private def divisibleBy(n: Int) = value % n == 0\\n}"}
187	46	c5c414c5417393808b1fc81b	hibernating	cpp	hamming	\N	\N	0	1	117	2016-02-21 20:16:32	2016-02-21 20:16:32	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
189	46	0af306efa14ba8f387030fcf	pending	javascript	space-age	\N	\N	0	1	118	2016-04-18 06:21:14	2016-04-18 06:21:14	{"space-age.js":"function SpaceAge(seconds) {\\n\\tif (!(this instanceof SpaceAge)) {\\n\\t\\treturn new SpaceAge(seconds);\\n\\t}\\n\\tthis.seconds = seconds;\\n\\treturn this;\\n}\\n\\nSpaceAge.prototype.base = function() {\\n\\treturn this.seconds / 315576000;\\n};\\n\\nSpaceAge.prototype.getYears = function(time) {\\n\\treturn Math.round(this.seconds / 315576000 / time * 1000) / 100;\\n};\\n\\nSpaceAge.prototype.onEarth = function() {\\n\\treturn this.getYears(1);\\n};\\n\\nSpaceAge.prototype.onMercury = function() {\\n\\treturn this.getYears(0.2408467);\\n};\\n\\nSpaceAge.prototype.onVenus = function() {\\n\\treturn this.getYears(0.61519726);\\n};\\n\\nSpaceAge.prototype.onMars = function() {\\n\\treturn this.getYears(1.8808158);\\n};\\n\\nSpaceAge.prototype.onJupiter = function() {\\n\\treturn this.getYears(11.862615);\\n};\\n\\nSpaceAge.prototype.onSaturn = function() {\\n\\treturn this.getYears(29.447498);\\n};\\n\\nSpaceAge.prototype.onUranus = function() {\\n\\treturn this.getYears(84.016846);\\n};\\n\\nSpaceAge.prototype.onNeptune = function() {\\n\\treturn this.getYears(164.79132);\\n};\\n\\nmodule.exports = SpaceAge;"}
190	46	30e3e14d9a76f1c45b1fbf37	pending	clojure	atbash-cipher	\N	\N	0	1	119	2016-01-09 06:15:48	2016-01-09 06:15:48	{"1.clj":"(def foo \\"\\")"}
191	46	37f67c01f1e6e47ca939d5c8	pending	ruby	raindrops	\N	\N	0	1	120	2016-01-14 20:04:38	2016-01-14 20:04:38	{"/ruby/raindrops/raindrops.rb":"require 'prime'\\n\\nclass Raindrops\\n\\tdef self.convert(number)\\n\\t\\t\\n\\t\\tp_factors = Prime.prime_division(number).flatten.uniq\\n\\t\\traindrops = \\"\\"\\n\\t\\tp_factors.each do |p_factor| \\n\\t\\t\\tcase p_factor\\n\\t\\t\\twhen 3\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Pling\\"\\n\\t\\t\\twhen 5\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plang\\"\\n\\t\\t\\twhen 7\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plong\\"\\n\\t\\t\\tend\\n\\t\\tend\\n\\t\\traindrops = \\"#{number}\\" if raindrops.empty?\\n\\t\\traindrops\\n\\tend\\nend"}
192	46	268eb9aead0cd9ff70bc2e06	done	javascript	hamming	\N	\N	0	1	121	2016-04-14 12:11:00	2016-04-14 12:11:00	{"point-mutations.js":"(function(module) {\\n  module.exports = function(sequence) {\\n    return {\\n      hammingDistance: function(other) {\\n        var hamming = 0;\\n        other = other.substring(0, sequence.length);\\n        other.split('').forEach(function(nucleotid, idx) {\\n          hamming = nucleotid != sequence[idx] ? hamming + 1 : hamming;\\n        });\\n        return hamming;\\n      }\\n    };\\n  };\\n}(module));"}
193	46	8f8f96ab33fa78df91d42c01	\N	go	grains	\N	\N	0	1	122	2016-04-23 07:37:49	2016-04-23 07:37:49	{"grains.go":"package grains\\n\\nimport (\\n\\t\\"errors\\"\\n\\t\\"fmt\\"\\n\\t\\"math\\"\\n)\\n\\nvar SquareArr = [...]uint64{\\n\\t1,\\n\\t2,\\n\\t4,\\n\\t8,\\n\\t16,\\n\\t32,\\n\\t64,\\n\\t128,\\n\\t256,\\n\\t512,\\n\\t1024,\\n\\t2048,\\n\\t4096,\\n\\t8192,\\n\\t16384,\\n\\t32768,\\n\\t65536,\\n\\t131072,\\n\\t262144,\\n\\t524288,\\n\\t1048576,\\n\\t2097152,\\n\\t4194304,\\n\\t8388608,\\n\\t16777216,\\n\\t33554432,\\n\\t67108864,\\n\\t134217728,\\n\\t268435456,\\n\\t536870912,\\n\\t1073741824,\\n\\t2147483648,\\n\\t4294967296,\\n\\t8589934592,\\n\\t17179869184,\\n\\t34359738368,\\n\\t68719476736,\\n\\t137438953472,\\n\\t274877906944,\\n\\t549755813888,\\n\\t1099511627776,\\n\\t2199023255552,\\n\\t4398046511104,\\n\\t8796093022208,\\n\\t17592186044416,\\n\\t35184372088832,\\n\\t70368744177664,\\n\\t140737488355328,\\n\\t281474976710656,\\n\\t562949953421312,\\n\\t1125899906842624,\\n\\t2251799813685248,\\n\\t4503599627370496,\\n\\t9007199254740992,\\n\\t18014398509481984,\\n\\t36028797018963968,\\n\\t72057594037927936,\\n\\t144115188075855872,\\n\\t288230376151711744,\\n\\t576460752303423488,\\n\\t1152921504606846976,\\n\\t2305843009213693952,\\n\\t4611686018427387904,\\n\\t9223372036854775808,\\n}\\n\\nfunc Square(n int) (uint64, error) {\\n\\tif n \\u003c 1 || n \\u003e 64 {\\n\\t\\treturn 0, errors.New(\\"argument out of range\\")\\n\\t}\\n\\t// 508 ops/sec\\n\\t//return MathSquare(n), nil\\n\\t// 312 ops/sec\\n\\t//return LoopSquare(n), nil\\n\\t// 228 ops/sec\\n\\treturn ShiftSquare(n), nil\\n\\t// 229 ops/sec\\n\\t//return CacheSquare(n), nil\\n}\\n\\nfunc MathSquare(n int) uint64 {\\n\\treturn uint64(math.Pow(2, float64(n-1)))\\n}\\n\\nfunc LoopSquare(n int) uint64 {\\n\\tvar ans uint64 = 1\\n\\tfor i := 0; i \\u003c n-1; i++ {\\n\\t\\tans = ans * 2\\n\\t}\\n\\treturn ans\\n}\\n\\nfunc ShiftSquare(n int) uint64 {\\n\\treturn uint64(1) \\u003c\\u003c uint(n-1)\\n}\\n\\nfunc CacheSquare(n int) uint64 {\\n\\treturn SquareArr[n-1]\\n}\\n\\nfunc PrintSquares() {\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tfmt.Printf(\\"%d,\\\\n\\", val)\\n\\t}\\n}\\n\\nfunc Total() uint64 {\\n\\treturn CacheTotal()\\n}\\n\\nfunc CalcTotal() uint64 {\\n\\tvar sum uint64 = 0\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tsum += val\\n\\t}\\n\\treturn sum\\n}\\n\\nfunc CacheTotal() uint64 {\\n\\treturn 18446744073709551615\\n}"}
194	46	5aec1dd41740a8977e9ea0d3	pending	python	hamming	\N	\N	0	1	123	2016-03-02 21:42:12	2016-03-02 21:42:12	{"hamming.py":"#-------------------------------------------------------------------------------\\r\\n# Name:        module2\\r\\n# Purpose:\\r\\n#\\r\\n# Author:      Mathman\\r\\n#\\r\\n# Created:     30/09/2014\\r\\n# Copyright:   (c) Mathman 2014\\r\\n# Licence:     \\u003cyour licence\\u003e\\r\\n#-------------------------------------------------------------------------------\\r\\n#!/usr/bin/env python\\r\\n\\r\\ndef main():\\r\\n    pass\\r\\ndef distance(n,p):\\r\\n    h=0\\r\\n    a=n.replace('',' ')\\r\\n    b=p.replace('',' ')\\r\\n    l=a.split(' ')\\r\\n    m=b.split(' ')\\r\\n    for i in range(0,len(l)):\\r\\n        if l[i]!=m[i]:\\r\\n            h=h+1\\r\\n    return h\\r\\nif __name__ == '__main__':\\r\\n    main()\\r"}
195	46	628c2c48d170da3bc61f8aac	pending	go	gigasecond	\N	\N	0	2	124	2016-01-08 11:09:35	2016-01-08 11:09:35	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
196	46	cd642053d77cac9eefc04b81	superseded	go	gigasecond	\N	\N	0	1	124	2016-01-19 03:01:36	2016-01-19 03:01:36	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
197	46	d91bf134e3b2ea5f23ebb2c1	\N	haskell	space-age	\N	\N	0	1	125	2016-04-03 15:40:28	2016-04-03 15:40:28	{"SpaceAge.hs":"module SpaceAge where\\n\\nimport Data.Maybe (fromJust)\\n\\ndata Planet = Mercury | Venus | Earth | Mars | Jupiter | Saturn | Uranus | Neptune deriving (Show, Eq)\\n\\nageOn :: Planet -\\u003e Integer -\\u003e Double\\nageOn p s = (fromIntegral s) / 31557600.0 / (fromJust $ lookup p planets) where\\n    planets = [(Mercury, 0.2408467), (Venus, 0.61519726), (Earth, 1.0), (Mars, 1.8808158), (Jupiter, 11.862615), (Saturn, 29.447498), (Uranus, 84.016846), (Neptune, 164.79132)]"}
198	46	b26b472a0c67c74c96483689	pending	python	word-count	\N	\N	0	1	126	2016-01-02 02:57:14	2016-01-02 02:57:14	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(self):\\n\\tself = ' '.join(self.split()) #split and rejoin to clear out extra spaces and new lines\\n\\twords = self.split(' ') #split into array by space delimiting\\n\\tfinalcount = Counter(words) #count words\\n\\treturn finalcount"}
199	46	3206b1a7bdaec84ff4351df3	\N	racket	grep	\N	\N	0	2	127	2016-01-23 01:06:11	2016-01-23 01:06:11	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))]\\n                      #:when ((matcher) rx line))\\n                 (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
200	46	a166251cfd03ebe7c6f73e05	\N	racket	grep	\N	\N	0	4	127	2016-01-24 21:34:20	2016-01-24 21:34:20	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (for/list ([line-number (in-naturals 1)]\\n             [line (file-\\u003elines path)]\\n             #:when ((matcher) rx line))\\n            (cons line-number line)))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n  \\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n  \\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (for* ([path paths]\\n         [matches (grep-file path pattern)])\\n        ((file-handler) path matches)))"}
201	46	e476a0ae7d3f0a7a8d941e3f	\N	racket	grep	\N	\N	0	1	127	2016-04-16 19:52:06	2016-04-16 19:52:06	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))])\\n             (if ((matcher) rx line)\\n                 (cons (cons line-number line) match-list)\\n                 match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
202	46	7f9a28fb13598345ba91c30e	\N	racket	grep	\N	\N	0	3	127	2016-05-04 04:32:53	2016-05-04 04:32:53	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (file-\\u003elines path)]\\n                      #:when ((matcher) rx line))\\n             (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n\\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n\\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n\\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (define file-matchlists (map (Î» (path) (grep-file path pattern))\\n                               paths))\\n  (for ([path paths]\\n        [matches file-matchlists])\\n       ((file-handler) path matches)))"}
203	46	98df496a2a1b9a862c56d173	superseded	csharp	leap	\N	\N	0	1	128	2016-02-01 04:22:57	2016-02-01 04:22:57	{"Leap.cs":"﻿using NUnit.Framework;\\r\\n\\r\\nnamespace Exercism.Leap\\r\\n{\\r\\n    [TestFixture]\\r\\n    public class LeapTest\\r\\n    {\\r\\n        [Test]\\r\\n        public void Valid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1996), Is.True);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Invalid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1997), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_20th_century_is_not_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1900), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_25th_century_is_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(2400), Is.True);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public class Year\\r\\n    {\\r\\n        public static bool IsLeap(int year)\\r\\n        {\\r\\n            return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    internal class Leap\\r\\n    {\\r\\n        private static void Main(string[] args)\\r\\n        {\\r\\n        }\\r\\n    }\\r\\n}"}
204	46	b44ff85f28bd228dd02257b9	done	csharp	leap	\N	\N	0	2	128	2016-03-15 11:23:18	2016-03-15 11:23:18	{"Leap.cs":"public class Year\\r\\n{\\r\\n    public static bool IsLeap(int year)\\r\\n    {\\r\\n\\t\\t//Leap Year divisible by 4 but not a century year. Or simply divisible by 400.\\r\\n        return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n    }\\r\\n}\\r"}
205	46	c0a5c248c7ab006368f8a62d	\N	erlang	etl	\N	\N	0	1	129	2016-01-13 14:42:59	2016-01-13 14:42:59	{"etl.erl":"%%%-------------------------------------------------------------------\\n%%% @author andre\\n%%% @copyright (C) 2016, \\u003cCOMPANY\\u003e\\n%%% @doc\\n%%%\\n%%% @end\\n%%% Created : 19. Jan 2016 1:12 PM\\n%%%-------------------------------------------------------------------\\n-module(etl).\\n-author(\\"andre\\").\\n\\n%% API\\n-export([transform/1]).\\n\\nnormalize(Tile, Score) -\\u003e\\n  {string:to_lower(Tile), Score}.\\n\\ntransform([], Transformed) -\\u003e\\n  Transformed;\\ntransform([{Score, Tiles} | T], Transformed) -\\u003e\\n  transform(T, Transformed ++ lists:zipwith(fun normalize/2, string:to_lower(Tiles), lists:duplicate(length(Tiles), Score))).\\n\\ntransform(Scores) -\\u003e\\n  transform(Scores, [])."}
206	46	dc81a0ac3c372bae53c42e36	done	ruby	leap	\N	\N	0	1	130	2016-04-03 20:21:46	2016-04-03 20:21:46	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
207	46	41b6ceeadddd098252357f12	pending	javascript	gigasecond	\N	\N	0	1	131	2016-01-06 19:37:52	2016-01-06 19:37:52	{"gigasecond.js":"var Gigasecond = function Gigasecond( birth ){\\n    \\n    this.birth = birth;\\n\\n    this.date = function(){\\n        var Gs_in_ms = Math.pow(10,9)*1000,\\n            unix_birth = this.birth.getTime(),\\n            gs_anniversary = new Date( unix_birth + Gs_in_ms );\\n        \\n        return new Date(gs_anniversary.getFullYear(), gs_anniversary.getMonth(), gs_anniversary.getDate());\\n    };\\n};\\n\\nmodule.exports = Gigasecond;"}
217	46	597b8ea9f3d2d8501d2c075e	pending	erlang	rna-transcription	\N	\N	0	1	136	2016-06-06 02:08:42	2016-06-06 02:08:42	{"rna_transcription.erl":"-module(rna_transcription).\\n-export([to_rna/1]).\\n\\n-spec to_rna(list()) -\\u003e string().\\n-spec dna_to_rna(char()) -\\u003e char().\\n\\nto_rna(I) -\\u003e lists:foldl(fun(C, R) -\\u003e R ++ dna_to_rna(C) end,\\"\\", I).\\n\\ndna_to_rna(X) -\\u003e\\n  case X of\\n    $G -\\u003e \\"C\\";\\n    $C -\\u003e \\"G\\";\\n    $T -\\u003e \\"A\\";\\n    $A -\\u003e \\"U\\"\\n  end."}
208	46	dd0553a273d82ae7c429b7c9	pending	go	triangle	\N	\N	0	1	132	2016-01-02 16:34:17	2016-01-02 16:34:17	{"triangle.go":"package triangle\\n\\nimport (\\n\\t\\"math\\"\\n)\\n\\ntype Kind struct {\\n\\tname string\\n}\\n\\nvar Equ = Kind{\\"Equ\\"}\\nvar Iso = Kind{\\"Iso\\"}\\nvar Sca = Kind{\\"Sca\\"}\\nvar NaT = Kind{\\"NaT\\"}\\n\\nfunc KindFromSides(a float64, b float64, c float64) Kind {\\n\\t//ret := \\u0026Equ{\\"equ\\"}\\n\\tif testNat([3]float64{a, b, c}) {\\n\\t\\treturn NaT\\n\\t}\\n\\tif a == b \\u0026\\u0026 b == c {\\n\\t\\treturn Equ\\n\\t} else if a == b || b == c || c == a {\\n\\t\\treturn Iso\\n\\t} else {\\n\\t\\treturn Sca\\n\\t}\\n\\t//return Equ\\n}\\n\\nfunc testNat(sides [3]float64) bool {\\n\\tvar sum float64 = 0\\n\\tvar max float64 = 0\\n\\tfor _, side := range sides {\\n\\t\\tif side \\u003c= 0 || math.IsNaN(side) || math.IsInf(side, 0) {\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\t\\tsum += side\\n\\t\\tif side \\u003e max {\\n\\t\\t\\tmax = side\\n\\t\\t}\\n\\t}\\n\\tif (sum - max) \\u003c= max {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}"}
209	46	a3f57f35fe92f37cc781900f	superseded	haskell	nucleotide-count	\N	\N	0	3	133	2016-02-21 16:18:42	2016-02-21 16:18:42	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ (pairsMap 0 nucleotides) ++ (pairsMap 1 dna)\\r\\n    where pairsMap val ns = ns `zip` (repeat val)\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
210	46	a8e8894dc841df5acc8ee7ca	superseded	haskell	nucleotide-count	\N	\N	0	2	133	2016-06-12 17:59:03	2016-06-12 17:59:03	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
211	46	e554847a7b32d8de359801d8	superseded	haskell	nucleotide-count	\N	\N	0	1	133	2016-06-18 10:56:29	2016-06-18 10:56:29	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n dna = if n `elem` nucleotides\\r\\n    then length $ filter (== n) dna \\r\\n    else error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
212	46	7b697defd997bdc25ad3b1b3	hibernating	haskell	nucleotide-count	\N	\N	0	5	133	2016-07-03 19:48:56	2016-07-03 19:48:56	{"DNA.hs":"module DNA where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromList)\\r\\nimport Control.Monad (forM_)\\r\\nimport Data.Array.ST (readArray, writeArray, newArray, runSTUArray)\\r\\nimport Data.Array.Unboxed (UArray, assocs)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts = fromList . filter (\\\\(n,_) -\\u003e n `elem` nucleotides) . assocs . countArray\\r\\n\\t\\r\\ncountArray :: DNA -\\u003e UArray Nucleotide Int\\r\\ncountArray dna = runSTUArray $ do\\r\\n\\tcounts \\u003c- newArray ('A','Z') 0\\r\\n\\tforM_ dna $ \\\\n -\\u003e do\\r\\n\\t\\tc \\u003c- readArray counts n\\r\\n\\t\\twriteArray counts n (1+c)\\r\\n\\treturn counts"}
213	46	124373e78dec0570befc54fd	superseded	haskell	nucleotide-count	\N	\N	0	4	133	2016-07-18 03:00:00	2016-07-18 03:00:00	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ pairsMap 0 nucleotides ++ pairsMap 1 dna\\r\\n    where pairsMap val ns = ns `zip` repeat val\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
214	46	d2e4a22f261b339f98b702ce	done	python	allergies	\N	\N	0	1	134	2016-03-08 18:08:24	2016-03-08 18:08:24	{"allergies.py":"__author__ = 'grdunn'\\n\\n\\nclass Allergies(object):\\n\\n    allergens = ['eggs', 'peanuts', 'shellfish', 'strawberries', 'tomatoes',\\n                 'chocolate', 'pollen', 'cats']\\n\\n    def __init__(self, score):\\n        self.list = self.list_allergens(score if score \\u003c 256 else score - 256)\\n\\n    def list_allergens(self, score):\\n        \\"\\"\\"\\n        the (1 \\u003c\\u003c i) \\u0026 score is the tricky bit here, 1 \\u003c\\u003c i creates a mask\\n        applying the \\u0026 operator give us the power of two that's set (if 2**i is set)\\n        otherwise it's 0\\n\\n        :param score:\\n        :rtype : list\\n        \\"\\"\\"\\n        allergies = []\\n        for allergen in [i for i in range(0, len(self.allergens)) if ((1 \\u003c\\u003c i) \\u0026 score)]:\\n            allergies.append(self.allergens[allergen])\\n        return allergies\\n\\n    def is_allergic_to(self, allergen):\\n        return allergen in self.list"}
215	46	d84a62cd1b75bb7a32431fb8	\N	csharp	bob	\N	\N	0	2	135	2016-01-28 12:05:26	2016-01-28 12:05:26	{"Bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tprivate const string YELL_ANSWER = \\"Whoa, chill out!\\";\\r\\n\\t\\tprivate const string QUESTION_ANSWER = \\"Sure.\\";\\r\\n\\t\\tprivate const string SILENCE_ANSWER = \\"Fine. Be that way!\\";\\r\\n\\t\\tprivate const string NORMAL_ANSWER = \\"Whatever.\\";\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn SILENCE_ANSWER;\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn YELL_ANSWER;\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn QUESTION_ANSWER;\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn NORMAL_ANSWER;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
216	46	f77268a806c3cfeff37b9256	\N	csharp	bob	\N	\N	0	1	135	2016-03-09 00:51:23	2016-03-09 00:51:23	{"bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Fine. Be that way!\\";\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Whoa, chill out!\\";\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Sure.\\";\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn \\"Whatever.\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
220	46	1581ec0943850342d501bbc9	\N	scala	difference-of-squares	\N	\N	0	1	138	2016-05-23 22:56:18	2016-05-23 22:56:18	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    val sum = (0 to i).sum\\n    sum * sum\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(s =\\u003e s * s).sum \\n  }\\n}"}
221	46	038f1677528c76d9b4013f82	pending	ruby	binary-search-tree	\N	\N	0	2	139	2016-02-08 22:01:48	2016-02-08 22:01:48	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_reader :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.send(\\"#{direction}=\\", self.class.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\n\\nprivate\\n\\n  attr_writer :left, :right\\nend"}
222	46	fc1779de3349adc39669e73e	superseded	ruby	binary-search-tree	\N	\N	0	1	139	2016-05-10 12:54:17	2016-05-10 12:54:17	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_accessor :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.public_send(\\"#{direction}=\\", Bst.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\nend"}
223	46	2311525838d672d673992a5f	superseded	ruby	word-count	\N	\N	0	1	140	2016-01-27 20:47:32	2016-01-27 20:47:32	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
224	46	e8884f59a9aa910b4688541e	superseded	ruby	word-count	\N	\N	0	3	140	2016-04-10 19:48:28	2016-04-10 19:48:28	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
225	46	9c2e249e8e9b80d0b8249095	done	ruby	word-count	\N	\N	0	4	140	2016-05-20 07:42:39	2016-05-20 07:42:39	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
226	46	1f97ef83624f1b24d8ad794d	superseded	ruby	word-count	\N	\N	0	2	140	2016-05-23 04:59:58	2016-05-23 04:59:58	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
227	48	2051a64a4cb94b517a613a72	pending	java	etl	\N	\N	0	1	141	2016-05-20 19:14:20	2016-05-20 19:14:20	{"src\\\\main\\\\java\\\\Etl.java":"import java.util.*;\\r\\n\\r\\npublic class Etl {\\r\\n\\r\\n    public Etl() {\\r\\n    }\\r\\n\\r\\n    public Map transform(Map map) {\\r\\n        return reverse(map);\\r\\n    }\\r\\n\\r\\n    //map must be a bijection in order for this to work properly\\r\\n    public static \\u003cK,V\\u003e Map\\u003cV,K\\u003e reverse(Map\\u003cK,V\\u003e map) {\\r\\n        Map\\u003cV,K\\u003e rev = new Map\\u003cV, K\\u003e() {@Override public int size() {\\r\\n                return 0;\\r\\n            }@Override public boolean isEmpty() {\\r\\n                return false;\\r\\n            }@Override public boolean containsKey(Object key) {\\r\\n                return false;\\r\\n            }@Override public boolean containsValue(Object value) {\\r\\n                return false;\\r\\n            }@Override public K get(Object key) {\\r\\n                return null;\\r\\n            }@Override public K put(V key, K value) {\\r\\n                return null;\\r\\n            }@Override public K remove(Object key) {\\r\\n                return null;\\r\\n            }@Override public void putAll(Map\\u003c? extends V, ? extends K\\u003e m) {\\r\\n\\r\\n            }@Override public void clear() {\\r\\n\\r\\n            }@Override public Set\\u003cV\\u003e keySet() {\\r\\n                return null;\\r\\n            }@Override public Collection\\u003cK\\u003e values() {\\r\\n                return null;\\r\\n            }@Override public Set\\u003cEntry\\u003cV, K\\u003e\\u003e entrySet() {\\r\\n                return null;\\r\\n            }@Override public boolean equals(Object o) {\\r\\n                return false;\\r\\n            }@Override public int hashCode() {\\r\\n                return 0;\\r\\n            }};\\r\\n        for(Map.Entry\\u003cK,V\\u003e entry : map.entrySet())\\r\\n            rev.put(entry.getValue(), entry.getKey());\\r\\n        return rev;\\r\\n    }\\r\\n}"}
228	48	657d8c01a071667c02c1ab12	superseded	haskell	sum-of-multiples	\N	\N	0	1	142	2016-05-26 08:47:41	2016-05-26 08:47:41	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: (Ord a, Num a, Enum a) =\\u003e [a] -\\u003e a -\\u003e a \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
229	48	a7709ff32ace7b183840c641	done	haskell	sum-of-multiples	\N	\N	0	2	142	2016-05-29 12:26:31	2016-05-29 12:26:31	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: [Integer] -\\u003e Integer -\\u003e Integer \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
230	48	161e4d224ed85a66f6388c71	\N	scala	bob	\N	\N	0	1	143	2016-05-29 08:36:39	2016-05-29 08:36:39	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
240	49	378e082f25eabd4a7c1764a0	done	coffeescript	nth-prime	\N	\N	0	2	150	2016-07-20 04:37:22	2016-07-20 04:37:22	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    @_findPrime(number)\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_findPrime: (amount) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c amount\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection[amount - 1]\\n\\nmodule.exports = Prime"}
231	48	28d96974985005b5247b3186	superseded	python	crypto-square	\N	\N	0	1	144	2016-06-03 12:09:04	2016-06-03 12:09:04	{"crypto_square.py":"import re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = ( len(clean) / size, len(clean) % size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
232	48	69ef437f7b94fa37e8732c98	pending	python	crypto-square	\N	\N	0	2	144	2016-06-22 06:04:24	2016-06-22 06:04:24	{"crypto_square.py":"import math\\nimport re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = divmod( len(clean), size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
233	48	e3d1c1519934b5513711e4bf	pending	haskell	bob	\N	\N	0	2	145	2016-06-03 17:18:16	2016-06-03 17:18:16	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = all (\\\\z -\\u003e isUpper z || not (isLetter z)) y \\u0026\\u0026 any isLetter y\\n        question y = last y == '?'\\n        empty    y = all isSpace y"}
234	48	8dae38c730049760a394e46d	superseded	haskell	bob	\N	\N	0	1	145	2016-06-14 13:59:26	2016-06-14 13:59:26	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = L.all (\\\\z -\\u003e (isUpper z) || (not $ isLetter z)) y \\u0026\\u0026 L.any isLetter y\\n        question y = (last $ L.dropWhileEnd isUpper y) == '?'\\n        empty    y = L.all isSpace y"}
235	48	a4ef924afbd0dcdb4c1b10a3	\N	ecmascript	hello-world	\N	\N	0	1	146	2016-04-27 01:12:20	2016-04-27 01:12:20	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
236	49	28f456febe71f88cd483109c	pending	clojure	rna-transcription	\N	\N	0	1	147	2016-07-22 05:38:42	2016-07-22 05:38:42	{"rna_transcription.clj":"(ns rna-transcription\\n  (:require [clojure.string :as str])\\n  )\\n\\n(def trans-hash (hash-map\\n  \\"C\\" \\"G\\",\\n  \\"A\\" \\"U\\",\\n  \\"G\\" \\"C\\",\\n  \\"T\\" \\"A\\")\\n  )\\n\\n(defn to-rna \\n  ([string]\\n   (def string-chars (str/split string #\\"\\"))\\n   (to-rna (first string-chars) (rest string-chars) \\"\\")) \\n  ([head tail result] \\n    (cond \\n      (= head nil) result\\n      :else (do \\n              (def liter (trans-hash head)) \\n              (assert liter)\\n              (to-rna (first tail) (rest tail) (str result liter))\\n            )\\n    )\\n  )\\n)"}
237	49	1853fce15435a6d7ae483c22	done	javascript	bob	\N	\N	0	1	148	2016-07-07 20:17:14	2016-07-07 20:17:14	{"bob.js":"function isWhiteSpace(code) {\\n    //this only works for ASCII\\n    return code === \\" \\".charCodeAt(0);\\n}\\n\\nfunction isAlpha(code) {\\n    //this only works for ASCII\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else if (code \\u003e 96 \\u0026\\u0026 code \\u003c 123) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isUpperCase(code) {\\n    //this only works for ASCII.\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isQuestionMark(code) {\\n    //this only works for English and other languages\\n    //that use a question mark at the end.\\n    return code  === \\"?\\".charCodeAt(0);;\\n}\\n\\nfunction findAcronyms(str) {\\n    //this is going to be very slow, if the list is big.\\n    //maybe a trie is a better choice here.\\n    acronyms = [\\"OK\\", \\"DMV\\"];\\n    index = {};\\n\\n    for (i=0; i \\u003c acronyms.length; i++) {\\n        acronym = acronyms[i];\\n        pos = str.indexOf(acronym);\\n        if (pos \\u003e -1) {\\n            index[pos] = acronym.length-1;\\n        }\\n        \\n    }\\n\\n    return index;\\n}\\n\\nvar Bob = function() {};\\nBob.prototype.hey = function(msg) {\\n    isShouting = false;\\n    isQuestion = false;\\n    isEmpty = true;\\n\\n    length = msg.length;\\n    acronyms = findAcronyms(msg);\\n    for (var i=0; i\\u003clength; i++) {\\n        code = msg.charCodeAt(i);\\n\\n        if (isWhiteSpace(code)) {\\n            continue;\\n        } else {\\n            isEmpty = false;\\n        }\\n        \\n        acronymLength = acronyms[i];\\n        if (acronymLength !== undefined) {\\n            //skip over acronyms\\n            i = i+acronymLength;\\n            continue;\\n        }\\n\\n        if (isAlpha(code)) {\\n            isShouting = isUpperCase(code);\\n        }\\n        \\n        //if we are at the end check if we have a question mark\\n        if (i == length-1) {\\n            isQuestion = isQuestionMark(code);\\n        }\\n    }\\n\\n    if (isShouting) {\\n        return \\"Woah, chill out!\\";\\n    } else if (isQuestion) {\\n        return \\"Sure.\\";\\n    } else if (isEmpty) {\\n        return \\"Fine. Be that way!\\";\\n    } else {\\n        return \\"Whatever.\\";\\n    }\\n};\\nmodule.exports = Bob;"}
238	49	2083c61befcea93a734174b7	pending	ruby	space-age	\N	\N	0	1	149	2016-07-28 16:31:21	2016-07-28 16:31:21	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  def initialize(sec)\\n  \\t@seconds = sec\\n  end\\n  def on_earth(n=1)\\n  \\t(@seconds/(31557600.0*n)).round(2)\\n  end\\n  def on_mercury\\n  \\tself.on_earth(0.2408467)\\n  end\\n  def on_venus\\n  \\tself.on_earth(0.61519726)\\n  end\\n  def on_mars\\n  \\tself.on_earth(1.8808158)\\n  end\\n  def on_jupiter\\n  \\tself.on_earth(11.862615)\\n  end\\n  def on_saturn\\n  \\tself.on_earth(29.447498)\\n  end\\n  def on_uranus\\n  \\tself.on_earth(84.016846)\\n  end\\n  def on_neptune\\n  \\tself.on_earth(164.79132)\\n  end\\nend"}
239	49	3da8be733d79b9375135e92a	superseded	coffeescript	nth-prime	\N	\N	0	1	150	2016-06-11 07:31:11	2016-06-11 07:31:11	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    new Collection(@_primes_collection_with_size(number)).last\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_primes_collection_with_size: (size) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c size\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection\\n\\n\\nclass Collection \\n\\n  constructor: (array) -\\u003e\\n    @array = array\\n    @last = this._last()\\n\\n  _last: -\\u003e\\n    @array.slice(-1)[0]\\n  \\n\\nmodule.exports = Prime"}
241	49	df4b293180439a2f115c48a1	done	javascript	robot-simulator	\N	\N	0	1	151	2016-05-27 19:47:29	2016-05-27 19:47:29	{"robot-simulator.js":"var directions = ['north', 'east', 'south', 'west'],\\r\\n    numDirections = directions.length;\\r\\n\\r\\nvar command = {\\r\\n  L: \\"turnLeft\\",\\r\\n  R: \\"turnRight\\",\\r\\n  A: \\"advance\\"\\r\\n};\\r\\n\\r\\nvar Robot = function() {\\r\\n  var self = this, bearingIndex,\\r\\n      turn = function(quadrants) {\\r\\n        bearingIndex = (bearingIndex + quadrants) % numDirections;\\r\\n        return self.bearing = directions[bearingIndex];\\r\\n      };\\r\\n\\r\\n  this.orient = function(direction) {\\r\\n    bearingIndex = directions.indexOf(direction);\\r\\n    return self.bearing = direction;\\r\\n  };\\r\\n  this.turnRight = function() {\\r\\n    return turn(1);\\r\\n  };\\r\\n  this.turnLeft = function() {\\r\\n    return turn(3);\\r\\n  };\\r\\n\\r\\n  this.at = function(x, y) {\\r\\n    return self.coordinates = [x, y];\\r\\n  };\\r\\n\\r\\n  this.advance = function() {\\r\\n    var axis = (bearingIndex + 1) % 2, // north/south 1, east/west 0\\r\\n        sign = 1 - (bearingIndex \\u003e 1) * 2; // north/east +1, south/west -1\\r\\n    self.coordinates[axis] += sign;\\r\\n    return self.coordinates;\\r\\n  };\\r\\n\\r\\n  this.instructions = function(commands) {\\r\\n    return commands.match(/[ALR]/g).map(function(c) {\\r\\n      return command[c];\\r\\n    });\\r\\n  };\\r\\n\\r\\n  this.place = function(options) {\\r\\n    self.orient(options.direction);\\r\\n    return self.coordinates = [options.x, options.y];\\r\\n  };\\r\\n\\r\\n  this.evaluate = function(commands) {\\r\\n    return self.instructions(commands).map(function(c) {\\r\\n      return self[c]();\\r\\n    });\\r\\n  };\\r\\n};\\r\\n\\r\\nmodule.exports = Robot;\\r"}
242	49	b5424236c41568593bf30687	hibernating	ruby	difference-of-squares	\N	\N	0	1	152	2016-06-18 07:39:40	2016-06-18 07:39:40	{"squares.rb":"class Squares\\n  attr_reader :number_of_squares\\n\\n  def initialize(number_of_squares)\\n    @number_of_squares = number_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..number_of_squares).inject(0) do |memo, i|\\n      memo + (i ** 2)\\n    end\\n  end\\n\\n  def square_of_sums\\n    (1..number_of_squares).inject(\\u0026:+) ** 2\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
243	26	ea6cba0f5f4f7ab2cafc8dcc	pending	ruby	series	\N	\N	0	1	153	2016-05-03 14:24:26	2016-05-03 14:24:26	{"series.rb":"class Series\\n  def initialize(values)\\n    @values = values\\n  end\\n\\n  def slices(n)\\n    raise ArgumentError if n \\u003e @values.length\\n    @values.chars.map(\\u0026:to_i).each_cons(n).to_a\\n  end\\nend"}
244	26	fcab378aa36d334e9b30fd61	\N	ruby	roman-numerals	\N	\N	0	1	154	2016-07-09 10:22:20	2016-07-09 10:22:20	{"roman_numerals.rb":"class Fixnum\\n  def to_roman\\n    roman_letters = \\"\\"\\n    thousands_digit = get_thousands_digit(self)\\n    hundreds_digit = get_hundreds_digit(self)\\n    tens_digit = get_tens_digit(self)\\n    ones_digit = get_ones_digit(self)\\n\\n    roman_letters = get_thousands_letter(thousands_digit) + get_hundreds_letter(hundreds_digit) + get_tens_letter(tens_digit) + get_ones_letter(ones_digit)\\n    roman_letters\\n  end\\n\\n  def get_correct_letters(current_digit, current_digit_one_letter, current_digit_five_letter, next_digit_one_letter)\\n    letter = \\"\\"\\n    case current_digit\\n    when 1..3\\n      current_digit.times do\\n        letter += current_digit_one_letter\\n      end\\n    when 4\\n      letter = current_digit_one_letter + current_digit_five_letter\\n    when 5..8\\n      letter = current_digit_five_letter\\n      (current_digit - 5).times do\\n        letter += current_digit_one_letter\\n      end\\n    when 9\\n      letter = current_digit_one_letter + next_digit_one_letter\\n    else\\n      letter = \\"\\"\\n    end\\n    letter\\n  end\\n\\n  def get_thousands_letter(thousands_digit)\\n    letter = \\"\\"\\n    thousands_digit.times do\\n      letter += \\"M\\"\\n    end\\n    letter\\n  end\\n\\n  def get_hundreds_letter(hundreds_digit)\\n    get_correct_letters(hundreds_digit, \\"C\\", \\"D\\", \\"M\\")\\n  end\\n\\n  def get_tens_letter(tens_digit)\\n    get_correct_letters(tens_digit, \\"X\\", \\"L\\", \\"C\\")\\n  end\\n\\n  def get_ones_letter(ones_digit)\\n    get_correct_letters(ones_digit, \\"I\\", \\"V\\", \\"X\\")\\n  end\\n\\n  def get_thousands_digit(number)\\n    number % 10000 / 1000\\n  end\\n\\n  def get_hundreds_digit(number)\\n    number % 1000 / 100\\n  end\\n\\n  def get_tens_digit(number)\\n    number % 100 / 10\\n  end\\n\\n  def get_ones_digit(number)\\n    number % 10\\n  end\\nend"}
245	26	dc139e0909abacba4879bbf9	pending	ruby	rna-transcription	\N	\N	0	1	155	2016-06-07 15:00:27	2016-06-07 15:00:27	{"complement.rb":"module Complement\\n  DNA_TO_RNA = {\\n    'G' =\\u003e 'C',\\n    'C' =\\u003e 'G',\\n    'T' =\\u003e 'A',\\n    'A' =\\u003e 'U'\\n  }\\n\\n  def self.map_each_nucleotide(hash, string)\\n    result = ''\\n    string.each_char do |nucleotide|\\n      result \\u003c\\u003c hash[nucleotide]\\n    end\\n\\n    result\\n  end\\n\\n  def self.of_dna(dna_nucleotide)\\n    map_each_nucleotide(DNA_TO_RNA, dna_nucleotide)\\n  end\\n\\n  def self.of_rna(rna_nucleotide)\\n    map_each_nucleotide(DNA_TO_RNA.invert, rna_nucleotide)\\n  end\\nend"}
246	26	81e164e67335239c7b57b737	\N	go	pythagorean-triplet	\N	\N	0	1	156	2016-02-28 20:24:39	2016-02-28 20:24:39	{"pythagorean_triplet.go":"package pythagorean\\n\\ntype Triplet [3]int\\n\\nfunc Range(min, max int) (triplets []Triplet) {\\n\\tfor a := min; a \\u003c= max; a++ {\\n\\t\\tfor b := a; b \\u003c= max; b++ {\\n\\t\\t\\tfor c := b; c \\u003c= max; c++ {\\n\\t\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc Sum(sum int) (triplets []Triplet) {\\n\\tfor a := 1; a \\u003c= sum/3; a++ {\\n\\t\\tfor b := a; b \\u003c= (sum-a)/2; b++ {\\n\\t\\t\\tc := sum - a - b\\n\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc isTriplet(t Triplet) bool {\\n\\treturn t[0]*t[0]+t[1]*t[1] == t[2]*t[2]\\n}"}
247	26	0ef512b008378a447973f86f	hibernating	ruby	difference-of-squares	\N	\N	0	1	157	2016-04-16 12:05:35	2016-04-16 12:05:35	{"difference_of_squares.rb":"class Squares\\n  attr_accessor :num\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def square_of_sums\\n    (1..num).reduce(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    (1..num).reduce { |v,i| v + i**2 }\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
248	26	9e737485a7fecb95e04dbfea	\N	elixir	bob	\N	\N	0	1	158	2016-02-20 06:53:16	2016-02-20 06:53:16	{"bob.exs":"defmodule Bob do\\n\\n  def hey(input) do\\n    cond do\\n      is_yelling?(input)    -\\u003e \\"Whoa, chill out!\\"\\n      is_a_question?(input) -\\u003e \\"Sure.\\"\\n      is_empty?(input)      -\\u003e \\"Fine. Be that way!\\"\\n      true                    -\\u003e \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp is_empty?(str) do\\n    String.match? str, ~r/^\\\\s*$/\\n  end\\n\\n  defp is_yelling?(str) do\\n    String.upcase(str) == str and String.match?(str, ~r/\\\\p{L}/)\\n  end\\n\\n  defp is_a_question?(str) do\\n    String.ends_with?(str, \\"?\\")\\n  end\\nend"}
261	20	b94c7a421f7f54338b960f02	pending	haskell	accumulate	\N	\N	0	2	168	2016-07-20 11:38:46	2016-07-20 11:38:46	{"Accumulate.hs":"module Accumulate where\\n\\n\\ntype T a b = (a -\\u003e b)\\n\\n\\ntype AccumulativeTransform c a b = (T a b -\\u003e c a -\\u003e c b)\\n\\n\\nclass Accumulatable c where\\n    accumulate :: AccumulativeTransform c a b\\n\\n\\ninstance Accumulatable [] where\\n    accumulate = accumulateList\\n\\n\\naccumulateList :: AccumulativeTransform [] a b\\naccumulateList _ [] = []\\naccumulateList f (x:xs) = f x : accumulate f xs"}
262	20	42b3440bf2b47e4de7374d8e	pending	haskell	accumulate	\N	\N	0	1	168	2016-07-27 02:55:52	2016-07-27 02:55:52	{"Accumulate.hs":"module Accumulate where\\n\\n\\n\\naccumulate :: (a -\\u003e b) -\\u003e [a] -\\u003e [b]\\naccumulate _ [] = []\\naccumulate f (x:xs) = f x : accumulate f xs"}
249	26	9f48f0db92f91097d71f2812	pending	javascript	beer-song	\N	\N	0	1	159	2016-06-30 14:14:30	2016-06-30 14:14:30	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
250	7	e2bf4e2441a27de8a5f1ddf0	\N	ruby	binary	\N	\N	0	1	160	2016-07-05 00:05:57	2016-07-05 00:05:57	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
251	23	da25c5577eb161c5e25ca9e2	hibernating	ruby	accumulate	\N	\N	0	2	161	2016-03-28 20:48:44	2016-03-28 20:48:44	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    if block_given?\\n      result = []\\n      each do |item|\\n        result \\u003c\\u003c yield(item)\\n      end\\n      result\\n    else\\n      to_enum\\n    end\\n  end\\nend"}
252	23	2b1ba3bf7ebe0295ca3d9657	superseded	ruby	accumulate	\N	\N	0	1	161	2016-03-31 16:58:10	2016-03-31 16:58:10	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    result = []\\n    each do |item|\\n      result \\u003c\\u003c yield(item)\\n    end\\n    result\\n  end\\nend"}
253	23	d522d8d9222b8f076bb7d7eb	superseded	haskell	bob	\N	\N	0	1	162	2016-04-03 03:43:53	2016-04-03 03:43:53	{"Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (toUpper, isSpace, isAlpha)\\n\\nresponseFor :: String -\\u003e String\\nresponseFor sentence\\n    | nothing   = \\"Fine. Be that way!\\"\\n    | yelling   = \\"Woah, chill out!\\"\\n    | question  = \\"Sure.\\"\\n    | otherwise = \\"Whatever.\\"\\n  where\\n    question = not (null sentence) \\u0026\\u0026 last sentence == '?'\\n    yelling = any isAlpha sentence \\u0026\\u0026 map toUpper sentence == sentence\\n    nothing = all isSpace sentence"}
254	23	ae946b57bfc169d0c369d314	done	haskell	bob	\N	\N	0	2	162	2016-05-25 03:01:59	2016-05-25 03:01:59	{"Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper, isLower, isSpace)\\n\\nresponseFor :: String -\\u003e String\\nresponseFor sentence\\n    | nothing   = \\"Fine. Be that way!\\"\\n    | yelling   = \\"Woah, chill out!\\"\\n    | question  = \\"Sure.\\"\\n    | otherwise = \\"Whatever.\\"\\n  where\\n    question = not (null sentence) \\u0026\\u0026 last sentence == '?'\\n    yelling = any isUpper sentence \\u0026\\u0026 not (any isLower sentence)\\n    nothing = all isSpace sentence"}
255	17	44476b494b62b83c8e8262cc	superseded	ruby	bob	\N	\N	0	1	163	2016-04-21 17:24:38	2016-04-21 17:24:38	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    if silence?(input)\\n      'Fine. Be that way!'\\n    elsif yelling?(input)\\n      'Woah, chill out!'\\n    elsif question?(input)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def question?(input)\\n    input.end_with? '?'\\n  end\\n\\n  def yelling?(input)\\n    input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n  end\\n\\n  def silence?(input)\\n    input =~ /\\\\A\\\\s*\\\\z/\\n  end\\nend"}
256	17	94e232d84d86694b0e79f8e5	pending	ruby	bob	\N	\N	0	2	163	2016-06-24 20:51:41	2016-06-24 20:51:41	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    statement = Statement.new(input)\\n    if statement.silence?\\n      \\"Fine. Be that way!\\"\\n    elsif statement.yelling?\\n      \\"Whoa, chill out!\\"\\n    elsif statement.question?\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  # Internal: This wraps up a statement made to Bob and is responsible for\\n  # deciding his reaction\\n  class Statement\\n    attr_reader :input\\n\\n    def initialize(input)\\n      @input = input\\n    end\\n\\n    # Public: is this statement a question?\\n    #\\n    # Returns a boolean\\n    def question?\\n      input.end_with? \\"?\\"\\n    end\\n\\n    # Public: is this statement shouted?\\n    #\\n    # Returns a boolean\\n    def yelling?\\n      input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n    end\\n\\n    # Public: is this a silent statement?\\n    #\\n    # Returns a boolean\\n    def silence?\\n      input =~ /\\\\A\\\\s*\\\\z/\\n    end\\n  end\\nend"}
257	17	0265c33e1e46232179468539	\N	ruby	robot-name	\N	\N	0	1	164	2016-05-17 11:39:13	2016-05-17 11:39:13	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
258	17	96d0d2ae5c8632b6098942a0	pending	clojure	rna-transcription	\N	\N	0	1	165	2016-05-25 13:39:18	2016-05-25 13:39:18	{"rna_transcription.clj":"(ns rna-transcription\\n  (:require [clojure.string :as str])\\n  )\\n\\n(def trans-hash (hash-map\\n  \\"C\\" \\"G\\",\\n  \\"A\\" \\"U\\",\\n  \\"G\\" \\"C\\",\\n  \\"T\\" \\"A\\")\\n  )\\n\\n(defn to-rna \\n  ([string]\\n   (def string-chars (str/split string #\\"\\"))\\n   (to-rna (first string-chars) (rest string-chars) \\"\\")) \\n  ([head tail result] \\n    (cond \\n      (= head nil) result\\n      :else (do \\n              (def liter (trans-hash head)) \\n              (assert liter)\\n              (to-rna (first tail) (rest tail) (str result liter))\\n            )\\n    )\\n  )\\n)"}
259	17	8f78ac47f6c600a4f4bcba6d	\N	perl5	bob	\N	\N	0	1	166	2016-05-28 15:13:00	2016-05-28 15:13:00	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
260	17	acac1a9adb23615cd0fcf143	\N	ruby	nth-prime	\N	\N	0	1	167	2016-05-03 12:34:45	2016-05-03 12:34:45	{"nth_prime.rb":"class Prime\\n  UPPER_LIMIT = 105000\\n\\n  class \\u003c\\u003c self\\n    def nth p\\n      raise ArgumentError if p.zero?\\n      primes = []\\n      range.each do |n|\\n        if primes.any? { |x| n % x == 0 }\\n          nil\\n        else\\n          primes \\u003c\\u003c n\\n          break if primes.size == p\\n        end\\n      end\\n      primes.last\\n    end\\n\\n    def range\\n      (2..UPPER_LIMIT)\\n    end\\n  end\\nend"}
263	21	dfa4596b6bffab84a2a432dc	done	python	rna-transcription	\N	\N	0	1	169	2016-06-03 14:05:41	2016-06-03 14:05:41	{"dna.py":"class DNA(object):\\n    reemplazar = dict(zip(list('GCTA'), list('CGAU')))\\n    def __init__(self, dna):\\n        self.dna = dna\\n\\n    def to_rna(self):\\n        ret = []\\n        for char in self.dna:\\n            ret.append(self.reemplazar[char])\\n        return ''.join(ret)"}
264	21	2029f1511cc3581af927255d	\N	ruby	raindrops	\N	\N	0	1	170	2016-05-14 19:58:58	2016-05-14 19:58:58	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n\\n  def self.convert(num)\\n    string = \\"\\"\\n    string += \\"Pling\\" if num % 3 == 0\\n    string += \\"Plang\\" if num % 5 == 0\\n    string += \\"Plong\\" if num % 7 == 0\\n    string.empty? ? num.to_s : string\\n  end\\nend"}
265	21	ac4f0a4dd92124dcb41bb940	\N	python	gigasecond	\N	\N	0	1	171	2016-07-02 00:29:09	2016-07-02 00:29:09	{"gigasecond.py":"from datetime import timedelta\\n__author__ = 'yury'\\n\\ndef add_gigasecond(date):\\n    return date + timedelta(seconds=10**9)"}
266	21	a97fccd7356db3bde389aa71	pending	python	allergies	\N	\N	0	1	172	2016-06-04 04:03:50	2016-06-04 04:03:50	{"allergies.py":"allergens = [\\n    'eggs',\\n    'peanuts',\\n    'shellfish',\\n    'strawberries',\\n    'tomatoes',\\n    'chocolate',\\n    'pollen',\\n    'cats',\\n]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self, score):\\n        self.list = []\\n        for i, allergen in enumerate(allergens):\\n            if score \\u0026 1 \\u003c\\u003c i:\\n                self.list.append(allergen)\\n\\n    def is_allergic_to(self, allergen):\\n        return allergen in self.list"}
267	21	79a8676e933ec2e6f8027e02	done	csharp	word-count	\N	\N	0	1	173	2016-05-10 21:23:56	2016-05-10 21:23:56	{"WordCount.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\npublic class Phrase\\r\\n{\\r\\n    protected string Sentence { set; get; }\\r\\n\\r\\n    public Phrase(string text)\\r\\n    {\\r\\n        Sentence = text;\\r\\n    }\\r\\n\\r\\n    public Dictionary\\u003cstring, int\\u003e WordCount()\\r\\n    {\\r\\n        //Split using regex split when not alphanumeric / apostrophe. Delete empty strings resulting from the split. Lowercase all. Group by same words, then count. Cast into dictionary.\\r\\n        return Regex.Split(Sentence, @\\"[^a-zA-Z0-9']\\").Where(Q =\\u003e !string.IsNullOrEmpty(Q)).Select(Q =\\u003e Q.ToLower()).GroupBy(Q =\\u003e Q).Select(\\r\\n            Q =\\u003e new {\\r\\n                Key = Q.FirstOrDefault(),\\r\\n                Value = Q.Count()\\r\\n            }).ToDictionary(Q =\\u003e Q.Key, Q =\\u003e Q.Value);\\r\\n    }\\r\\n}"}
268	36	91d21b82b2101d3ec50b97f7	pending	go	binary-search-tree	\N	\N	0	1	174	2016-06-01 23:13:28	2016-06-01 23:13:28	{"/go/binary-search-tree/binary_search_tree.go":"package binarysearchtree\\n\\ntype SearchTreeData struct {\\n\\tdata  int\\n\\tleft  *SearchTreeData\\n\\tright *SearchTreeData\\n}\\n\\nfunc Bst(data int) *SearchTreeData {\\n\\treturn \\u0026SearchTreeData{data: data}\\n}\\n\\nfunc (s *SearchTreeData) Insert(data int) {\\n\\tswitch {\\n\\tcase data \\u003c= s.data \\u0026\\u0026 s.left == nil:\\n\\t\\ts.left = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003e s.data \\u0026\\u0026 s.right == nil:\\n\\t\\ts.right = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003c= s.data:\\n\\t\\ts.left.Insert(data)\\n\\tcase data \\u003e s.data:\\n\\t\\ts.right.Insert(data)\\n\\t}\\n}\\n\\nfunc (s *SearchTreeData) MapString(f func(int) string) []string {\\n\\tif s == nil {\\n\\t\\treturn []string{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapString(f), f(s.data)), s.right.MapString(f)...)\\n}\\n\\nfunc (s *SearchTreeData) MapInt(f func(int) int) []int {\\n\\tif s == nil {\\n\\t\\treturn []int{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapInt(f), f(s.data)), s.right.MapInt(f)...)\\n}"}
269	36	50a0c290bddca8b246a6e2cb	done	haskell	gigasecond	\N	\N	0	2	175	2016-04-14 22:21:44	2016-04-14 22:21:44	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\ngigasecond = 10^9 :: NominalDiffTime\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime gigasecond $ UTCTime d 0"}
270	36	2db46fab6a2d672cccc2facb	superseded	haskell	gigasecond	\N	\N	0	1	175	2016-05-06 22:11:35	2016-05-06 22:11:35	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime (10^9) $ UTCTime d 0"}
271	30	22f1a0c98106aad00274c80b	\N	scala	bob	\N	\N	0	1	176	2016-04-13 12:21:32	2016-04-13 12:21:32	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
272	30	55888d4d2e88418871b64e31	pending	ruby	grains	\N	\N	0	1	177	2016-03-13 19:32:50	2016-03-13 19:32:50	{"/ruby/grains/grains.rb":"class Grains\\n\\n  def square(grains)\\n    2**(grains-1)\\n  end\\n\\n  def total\\n    total = 0\\n    (1..64).each do |count|\\n      total+= square(count)\\n    end\\n    total\\n  end\\n\\nend"}
273	30	325b7d707f0363d0d40e1976	superseded	clojure	rna-transcription	\N	\N	0	1	178	2016-04-05 03:25:35	2016-04-05 03:25:35	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
274	30	7756bd693fd9e69350f013b4	pending	clojure	rna-transcription	\N	\N	0	2	178	2016-07-16 02:13:31	2016-07-16 02:13:31	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
275	30	5358cb98035e7a665e1e6bac	done	python	gigasecond	\N	\N	0	1	179	2016-07-25 10:39:13	2016-07-25 10:39:13	{"gigasecond.py":"#!/usr/bin/python\\nfrom datetime import date\\nfrom datetime import timedelta\\ndef add_gigasecond(start_datetime):\\n    return start_datetime + timedelta(0,1e9)"}
276	30	0911d516d6f40ca2d6e53a87	superseded	python	bob	\N	\N	0	2	180	2016-04-01 06:51:12	2016-04-01 06:51:12	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
277	30	25868b897cf4fa358f3ea79d	superseded	python	bob	\N	\N	0	1	180	2016-05-10 18:21:14	2016-05-10 18:21:14	{"bob.py":"def hey(message):\\n\\tif message.strip() == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
278	30	cf2ff53c66e124cd2b1d6dba	done	python	bob	\N	\N	0	3	180	2016-05-28 07:41:33	2016-05-28 07:41:33	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
279	30	d4aec113b200f380f713154e	superseded	python	word-count	\N	\N	0	1	181	2016-03-03 11:44:41	2016-03-03 11:44:41	{"wordcount.py":"# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Return None if the input is None or if it is not a string\\n    if words is None or not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = dict()\\n\\n    # Split the string into a list of words\\n    word_list = words.split()\\n\\n    # Iterate through the list of words\\n    for word in word_list:\\n\\n        # Just add 1 to the counter if the key is already present\\n        if word in word_counts:\\n            word_counts[word] += 1\\n\\n        # Otherwise create the new key\\n        else:\\n            word_counts[word] = 1\\n\\n    return word_counts"}
280	30	08e2c385c581f97bfa64b844	done	python	word-count	\N	\N	0	3	181	2016-03-11 02:41:18	2016-03-11 02:41:18	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(words):\\n    if not isinstance(words,basestring):\\n        return None\\n    word_counts = Counter()\\n    for word in words.split():\\n        word_counts[word] += 1\\n    return word_counts"}
281	30	8f9d3db5d3f96e8f17716371	superseded	python	word-count	\N	\N	0	2	181	2016-04-09 23:49:25	2016-04-09 23:49:25	{"wordcount.py":"from collections import Counter\\n\\n# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Validate input\\n    if not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = Counter()\\n\\n    # Iterate through the list of words\\n    for word in words.split():\\n        word_counts[word] += 1\\n\\n    return word_counts"}
282	30	e0bfab2b4f33ba8decf215a5	superseded	javascript	etl	\N	\N	0	1	182	2016-03-13 11:08:58	2016-03-13 11:08:58	{"etl.js":"module.exports = function (old) {\\n    var result = {};\\n\\n    for (var prop in old)\\n        old[prop].forEach(function (ltr) {\\n            result[ltr.toLowerCase()] = parseInt(prop, 10);\\n        });\\n\\n    return result;\\n}"}
283	30	4398c2b5271e6b5dd0ca397e	pending	javascript	etl	\N	\N	0	2	182	2016-04-06 22:56:55	2016-04-06 22:56:55	{"etl.js":"module.exports = function (old) {\\n    return Object.keys(old).reduce(function(result, prop) {\\n        return old[prop].reduce(function(ltrs, ltr) {\\n            ltrs[ltr.toLowerCase()] = parseInt(prop, 10);\\n            return ltrs;\\n        }, result);\\n    }, {});\\n}"}
284	30	f130a3317619d1448589392b	\N	go	grains	\N	\N	0	1	183	2016-04-30 23:54:13	2016-04-30 23:54:13	{"grains.go":"package grains\\n\\nimport (\\n\\t\\"errors\\"\\n\\t\\"fmt\\"\\n\\t\\"math\\"\\n)\\n\\nvar SquareArr = [...]uint64{\\n\\t1,\\n\\t2,\\n\\t4,\\n\\t8,\\n\\t16,\\n\\t32,\\n\\t64,\\n\\t128,\\n\\t256,\\n\\t512,\\n\\t1024,\\n\\t2048,\\n\\t4096,\\n\\t8192,\\n\\t16384,\\n\\t32768,\\n\\t65536,\\n\\t131072,\\n\\t262144,\\n\\t524288,\\n\\t1048576,\\n\\t2097152,\\n\\t4194304,\\n\\t8388608,\\n\\t16777216,\\n\\t33554432,\\n\\t67108864,\\n\\t134217728,\\n\\t268435456,\\n\\t536870912,\\n\\t1073741824,\\n\\t2147483648,\\n\\t4294967296,\\n\\t8589934592,\\n\\t17179869184,\\n\\t34359738368,\\n\\t68719476736,\\n\\t137438953472,\\n\\t274877906944,\\n\\t549755813888,\\n\\t1099511627776,\\n\\t2199023255552,\\n\\t4398046511104,\\n\\t8796093022208,\\n\\t17592186044416,\\n\\t35184372088832,\\n\\t70368744177664,\\n\\t140737488355328,\\n\\t281474976710656,\\n\\t562949953421312,\\n\\t1125899906842624,\\n\\t2251799813685248,\\n\\t4503599627370496,\\n\\t9007199254740992,\\n\\t18014398509481984,\\n\\t36028797018963968,\\n\\t72057594037927936,\\n\\t144115188075855872,\\n\\t288230376151711744,\\n\\t576460752303423488,\\n\\t1152921504606846976,\\n\\t2305843009213693952,\\n\\t4611686018427387904,\\n\\t9223372036854775808,\\n}\\n\\nfunc Square(n int) (uint64, error) {\\n\\tif n \\u003c 1 || n \\u003e 64 {\\n\\t\\treturn 0, errors.New(\\"argument out of range\\")\\n\\t}\\n\\t// 508 ops/sec\\n\\t//return MathSquare(n), nil\\n\\t// 312 ops/sec\\n\\t//return LoopSquare(n), nil\\n\\t// 228 ops/sec\\n\\treturn ShiftSquare(n), nil\\n\\t// 229 ops/sec\\n\\t//return CacheSquare(n), nil\\n}\\n\\nfunc MathSquare(n int) uint64 {\\n\\treturn uint64(math.Pow(2, float64(n-1)))\\n}\\n\\nfunc LoopSquare(n int) uint64 {\\n\\tvar ans uint64 = 1\\n\\tfor i := 0; i \\u003c n-1; i++ {\\n\\t\\tans = ans * 2\\n\\t}\\n\\treturn ans\\n}\\n\\nfunc ShiftSquare(n int) uint64 {\\n\\treturn uint64(1) \\u003c\\u003c uint(n-1)\\n}\\n\\nfunc CacheSquare(n int) uint64 {\\n\\treturn SquareArr[n-1]\\n}\\n\\nfunc PrintSquares() {\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tfmt.Printf(\\"%d,\\\\n\\", val)\\n\\t}\\n}\\n\\nfunc Total() uint64 {\\n\\treturn CacheTotal()\\n}\\n\\nfunc CalcTotal() uint64 {\\n\\tvar sum uint64 = 0\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tsum += val\\n\\t}\\n\\treturn sum\\n}\\n\\nfunc CacheTotal() uint64 {\\n\\treturn 18446744073709551615\\n}"}
285	30	99823e013c0485263383c3e8	pending	ruby	series	\N	\N	0	1	184	2016-06-16 07:34:33	2016-06-16 07:34:33	{"series.rb":"class Series\\n  def initialize (string)\\n    @string = string\\n  end\\n\\n  def slices (number)\\n    raise ArgumentError if number \\u003e @string.length\\n    start = 0\\n    finish = number - 1\\n    sliced = []\\n    until finish == @string.length\\n      slice = []\\n      (start..finish).each do |i|\\n        slice \\u003c\\u003c @string[i].to_i\\n      end\\n      start += 1\\n      finish +=1\\n      sliced \\u003c\\u003c slice\\n    end\\n    sliced\\n  end\\nend"}
286	30	775741af5d7d0ff98045dab4	\N	ruby	say	\N	\N	0	1	185	2016-05-09 00:21:19	2016-05-09 00:21:19	{"say.rb":"class Say\\n  ONES  = [ 'one',     'two',       'three',    'four',     'five',    'six',     'seven',     'eight',    'nine' ]\\n  TEENS = [ 'eleven',  'twelve',    'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen' ]\\n  TENS  = [ 'ten',     'twenty',    'thirty',   'forty',    'fifty',   'sixty',   'seventy',   'eighty',   'ninety' ]\\n  SIZES = { 'billion' =\\u003e 1_000_000_000, 'million' =\\u003e 1_000_000, 'thousand' =\\u003e 1_000, 'hundred' =\\u003e 100 }\\n  RANGE = (0..999_999_999_999)\\n\\n  def initialize(number)\\n    raise(ArgumentError, \\"Number is out of range.\\") unless RANGE.cover?(number)\\n    @number = number\\n  end\\n\\n  def in_english\\n    @in_english ||= begin\\n      return 'zero' if @number == 0\\n\\n      num_string = ''\\n\\n      left = @number\\n      SIZES.each do |n, h|\\n        right, left = left.divmod(h)\\n        if right \\u003e 0\\n          num_string \\u003c\\u003c Say.new(right).in_english \\u003c\\u003c ' ' \\u003c\\u003c n.to_s\\n          num_string \\u003c\\u003c ' ' if left \\u003e 0\\n        end\\n      end\\n\\n      right, left = left.divmod(10)\\n      if right \\u003e 0\\n        if (right == 1) \\u0026\\u0026 (left \\u003e 0)\\n          num_string \\u003c\\u003c TEENS[left - 1]\\n          left = 0\\n        else\\n          num_string \\u003c\\u003c TENS[right - 1]\\n        end\\n        num_string \\u003c\\u003c '-' if left \\u003e 0\\n      end\\n\\n      right = left\\n      num_string \\u003c\\u003c ONES[right - 1] if right \\u003e 0\\n\\n      num_string\\n    end\\n  end\\n\\nend"}
287	30	e889ceb87e9d25c84e34689a	hibernating	ruby	phone-number	\N	\N	0	3	186	2016-03-23 13:56:08	2016-03-23 13:56:08	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  private\\n\\n  def prefix\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def line_number\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
352	41	7ceab66ba3afd7683d4eec4a	hibernating	ruby	bob	\N	\N	0	1	234	2016-05-18 06:44:13	2016-05-18 06:44:13	{"bob.rb":"class Bob\\n  def hey(message)\\n    if message.nil? || message.empty?\\n      \\"Fine. Be that way!\\"\\n    elsif message =~ /(^[A-Z\\\\d][\\\\dA-Z\\\\s\\\\W]+)/\\n      \\"Woah, chill out!\\"\\n    elsif message.end_with? \\"?\\"\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
288	30	b5c574672cdafe52046eb57c	superseded	ruby	phone-number	\N	\N	0	2	186	2016-03-30 21:55:13	2016-03-30 21:55:13	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{first_part}-#{second_part}\\"\\n  end\\n\\n  private\\n\\n  def first_part\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def second_part\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
289	30	f0583acbd0c4632b7073cedc	superseded	ruby	phone-number	\N	\N	0	1	186	2016-07-08 01:37:02	2016-07-08 01:37:02	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\nend"}
290	30	cbf8a5a90582e1e53beab8cf	pending	javascript	bob	\N	\N	0	1	187	2016-05-06 13:58:14	2016-05-06 13:58:14	{"bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar Bob = function() {};\\n\\nBob.prototype.hey = function(input) {\\n\\tif(input.match(/^\\\\s*$/)){\\n\\t\\treturn 'Fine. Be that way!';\\n\\t}\\n\\tif(input === input.toUpperCase() \\u0026\\u0026 input !== input.toLowerCase()) {\\n    \\treturn 'Whoa, chill out!';\\n\\t}\\n\\tif (input.indexOf(\\"?\\") !== -1 \\u0026\\u0026 input.indexOf(\\"?\\") === input.length-1){\\n\\t\\treturn 'Sure.';\\n\\t}\\n\\treturn 'Whatever.';\\n};\\n\\nmodule.exports = Bob;"}
291	30	647f866ba0d8b2823a16f00c	\N	elixir	hello-world	\N	\N	0	1	188	2016-03-21 20:10:47	2016-03-21 20:10:47	{"hello_world.exs":"defmodule HelloWorld do\\n  @moduledoc \\"\\"\\"\\n  Elixir counts the number of arguments as part of the function name.\\n  For instance;\\n\\n      def hello() do\\n      end\\n\\n  would be a completely different function from\\n\\n      def hello(name) do\\n      end\\n\\n  Can you find a way to make all the tests pass with just one\\n  function?\\n\\n  Hint: look into argument defaults here:\\n  http://elixir-lang.org/getting-started/modules.html#default-arguments\\n  \\"\\"\\"\\n\\n  @doc \\"\\"\\"\\n  Greets the user by name, or by saying \\"Hello, World!\\"\\n  if no name is given.\\n  \\"\\"\\"\\n  @spec hello(String.t) :: String.t\\n  def hello, do: \\"Hello, World!\\"\\n  def hello(name), do: \\"Hello, #{name}!\\"\\nend"}
292	30	c796a5f6c444b033e2327ad5	pending	go	gigasecond	\N	\N	0	2	189	2016-03-19 18:42:57	2016-03-19 18:42:57	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
293	30	b566043f0483b725baa8dcbe	superseded	go	gigasecond	\N	\N	0	1	189	2016-06-06 16:09:27	2016-06-06 16:09:27	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
294	30	3679ee9328ed591daf4c2f0f	pending	ruby	hamming	\N	\N	0	1	190	2016-05-02 20:19:12	2016-05-02 20:19:12	{"hamming.rb":"class Hamming\\n\\tdef self.compute(strand_1, strand_2)\\n\\t\\ta, b = strand_1.split(//), strand_2.split(//)\\n\\t\\ta.each_with_index.map { |e, i| e == b[i]}.select{ |e| e == false}.count\\n\\tend\\nend"}
295	30	22e2dd1783c7bf6e05076a54	superseded	haskell	house	\N	\N	0	1	191	2016-04-02 02:14:43	2016-04-02 02:14:43	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nimport Data.List (intercalate)\\n\\nrhyme :: String\\nrhyme = unlines strophes\\n  where strophes = map strophe [0..11]\\n\\nstrophe :: Int -\\u003e String\\nstrophe n = intro ++ subject n ++ rest ++ \\".\\\\n\\"\\n  where intro  = \\"This is the \\"\\n        verses = intercalate \\"\\\\n\\" $ map verse [n - 1, n - 2 .. 0]\\n        rest\\n          | n == 0    = \\"\\"\\n          | otherwise = \\"\\\\n\\" ++ verses\\n\\nverse :: Int -\\u003e String\\nverse n = \\"that \\" ++ verb n ++ \\" the \\" ++ subject n\\n\\nverb :: Int -\\u003e String\\nverb 0  = \\"lay in\\"\\nverb 1  = \\"ate\\"\\nverb 2  = \\"killed\\"\\nverb 3  = \\"worried\\"\\nverb 4  = \\"tossed\\"\\nverb 5  = \\"milked\\"\\nverb 6  = \\"kissed\\"\\nverb 7  = \\"married\\"\\nverb 8  = \\"woke\\"\\nverb 9  = \\"kept\\"\\nverb 10 = \\"belonged to\\"\\nverb _  = undefined\\n\\nsubject :: Int -\\u003e String\\nsubject 0  = \\"house that Jack built\\"\\nsubject 1  = \\"malt\\"\\nsubject 2  = \\"rat\\"\\nsubject 3  = \\"cat\\"\\nsubject 4  = \\"dog\\"\\nsubject 5  = \\"cow with the crumpled horn\\"\\nsubject 6  = \\"maiden all forlorn\\"\\nsubject 7  = \\"man all tattered and torn\\"\\nsubject 8  = \\"priest all shaven and shorn\\"\\nsubject 9  = \\"rooster that crowed in the morn\\"\\nsubject 10 = \\"farmer sowing his corn\\"\\nsubject 11 = \\"horse and the hound and the horn\\"\\nsubject _  = undefined"}
296	30	5cbada5bb26c42164eeb9de4	done	haskell	house	\N	\N	0	2	191	2016-07-16 20:11:54	2016-07-16 20:11:54	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nverses :: [String]\\nverses = [\\n    \\"the house that Jack built.\\\\n\\"\\n  , \\"the malt\\\\nthat lay in\\"\\n  , \\"the rat\\\\nthat ate\\"\\n  , \\"the cat\\\\nthat killed\\"\\n  , \\"the dog\\\\nthat worried\\"\\n  , \\"the cow with the crumpled horn\\\\nthat tossed\\"\\n  , \\"the maiden all forlorn\\\\nthat milked\\"\\n  , \\"the man all tattered and torn\\\\nthat kissed\\"\\n  , \\"the priest all shaven and shorn\\\\nthat married\\"\\n  , \\"the rooster that crowed in the morn\\\\nthat woke\\"\\n  , \\"the farmer sowing his corn\\\\nthat kept\\"\\n  , \\"the horse and the hound and the horn\\\\nthat belonged to\\"\\n  ]\\n\\nrhyme :: String\\nrhyme = unlines $ map (\\"This is \\" ++) strophes\\n  where strophes = scanl1 f verses\\n        f song verse = verse ++ \\" \\" ++ song"}
297	30	f33cd89c1046ee38771308e1	hibernating	ruby	bob	\N	\N	0	1	192	2016-03-12 09:37:58	2016-03-12 09:37:58	{"bob.rb":"class Bob\\n  def hey(message)\\n    if message.nil? || message.empty?\\n      \\"Fine. Be that way!\\"\\n    elsif message =~ /(^[A-Z\\\\d][\\\\dA-Z\\\\s\\\\W]+)/\\n      \\"Woah, chill out!\\"\\n    elsif message.end_with? \\"?\\"\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
298	30	75c926147c0f33de16db320c	\N	python	hamming	\N	\N	0	1	193	2016-04-01 16:18:00	2016-04-01 16:18:00	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
299	30	b20c6424493ee506f6751367	pending	javascript	hello-world	\N	\N	0	1	194	2016-04-02 14:52:31	2016-04-02 14:52:31	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\tif (input === '')\\n\\t\\treturn 'Hello, world!';\\n\\telse\\n\\t\\treturn 'Hello, '+input+'!';\\n};\\n\\nmodule.exports = HelloWorld;"}
300	30	276ff59d1dc62da29ba5272d	hibernating	javascript	word-count	\N	\N	0	1	195	2016-04-10 06:45:48	2016-04-10 06:45:48	{"word-count.js":"module.exports = function(s){\\n  var obj = {};\\n  s.split(/ |\\\\n/).forEach(function(word){\\n    if (! obj[word]) obj[word] = 0;\\n    obj[word]++;\\n  });\\n  return obj;\\n};"}
301	30	50cf95fdfdc2eae424ad4a1d	superseded	python	etl	\N	\N	0	1	196	2016-03-20 16:21:20	2016-03-20 16:21:20	{"/python/etl/etl.py":""}
302	30	88e0ca8735ae7a56a9b2ecf5	hibernating	python	etl	\N	\N	0	2	196	2016-06-13 07:20:53	2016-06-13 07:20:53	{"/python/etl/etl.py":"def transform(old):\\n    \\"\\"\\"Transform a data structure {value: [item]} to {item: value}.\\"\\"\\"\\n    result = {}\\n    for (value, items) in old.items():\\n        for item in items:\\n            result[item.lower()] = value\\n    return result"}
303	30	088af362969ad9b0e697f37d	pending	ruby	raindrops	\N	\N	0	1	197	2016-04-24 10:13:14	2016-04-24 10:13:14	{"raindrops.rb":"require 'prime'\\n\\nmodule Raindrops\\n  @@drop_map = {3 =\\u003e 'Pling', 5 =\\u003e 'Plang', 7 =\\u003e 'Plong'}\\n\\n  def self.convert(num)\\n    list = Prime.instance.prime_division(num).flatten.uniq.keep_if do |prime|\\n      @@drop_map.include? prime\\n    end\\n\\n    list.length == 0 ? num.to_s : list.map {|n| @@drop_map[n]}.join\\n  end\\nend"}
304	30	9189a8fa1ff96751f7867e02	pending	clojure	beer-song	\N	\N	0	5	198	2016-05-21 22:57:11	2016-05-21 22:57:11	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        action (take-one-down idx)\\n        remaining (bottles-of-beer (dec idx))]\\n    (format \\"%s of beer on the wall, %s of beer.\\\\n%s, %s of beer on the wall.\\\\n\\"\\n            (s/capitalize current)\\n            current\\n            action\\n            remaining)))\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
305	30	0fc870fdefbd45f4e233aff2	superseded	clojure	beer-song	\N	\N	0	4	198	2016-06-22 20:13:05	2016-06-22 20:13:05	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
306	30	ac3fab0c6250619b9587690d	superseded	clojure	beer-song	\N	\N	0	2	198	2016-06-29 02:54:14	2016-06-29 02:54:14	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (dec to) -1)))))"}
307	30	a1185b440fa1f93265533107	superseded	clojure	beer-song	\N	\N	0	3	198	2016-07-30 19:12:51	2016-07-30 19:12:51	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (map verse (range from (dec to) -1)))))"}
308	30	9e773da747de870e5e576e33	superseded	clojure	beer-song	\N	\N	0	1	198	2016-07-31 11:58:21	2016-07-31 11:58:21	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (- idx 1))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (- to 1) -1)))))"}
328	41	51ed56cead84c27c6d153c09	pending	ruby	space-age	\N	\N	0	1	215	2016-05-18 23:47:12	2016-05-18 23:47:12	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  def initialize(sec)\\n  \\t@seconds = sec\\n  end\\n  def on_earth(n=1)\\n  \\t(@seconds/(31557600.0*n)).round(2)\\n  end\\n  def on_mercury\\n  \\tself.on_earth(0.2408467)\\n  end\\n  def on_venus\\n  \\tself.on_earth(0.61519726)\\n  end\\n  def on_mars\\n  \\tself.on_earth(1.8808158)\\n  end\\n  def on_jupiter\\n  \\tself.on_earth(11.862615)\\n  end\\n  def on_saturn\\n  \\tself.on_earth(29.447498)\\n  end\\n  def on_uranus\\n  \\tself.on_earth(84.016846)\\n  end\\n  def on_neptune\\n  \\tself.on_earth(164.79132)\\n  end\\nend"}
309	30	f853f9917c38717629700899	pending	javascript	food-chain	\N	\N	0	1	199	2016-06-12 16:00:03	2016-06-12 16:00:03	{"food-chain.js":"var animals = ['fly', 'spider', 'bird', 'cat', 'dog', 'goat', 'cow', 'horse'];\\nvar first_sentences = {\\n  fly: undefined,\\n  spider: \\"It wriggled and jiggled and tickled inside her.\\",\\n  bird: \\"How absurd to swallow a bird!\\",\\n  cat: \\"Imagine that, to swallow a cat!\\",\\n  dog: \\"What a hog, to swallow a dog!\\",\\n  goat: \\"Just opened her throat and swallowed a goat!\\",\\n  cow: \\"I don't know how she swallowed a cow!\\",\\n  horse: \\"She's dead, of course!\\"\\n};\\n\\n\\n\\nmodule.exports = {\\n  verse: function(n) {\\n    var sentences = [];\\n    var animal = animals[n - 1];\\n\\n    sentences.push(\\"I know an old lady who swallowed a \\" + animal + \\".\\");\\n\\n    if (first_sentences[animal]) {\\n      sentences.push( first_sentences[animal] );\\n    }\\n\\n    if (animal != \\"horse\\") {\\n      for ( var i = n-1; i \\u003e 0; i-- ) {\\n        if (animals[i-1] == \\"spider\\") {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\" that wriggled and jiggled and tickled inside her.\\");\\n        } else {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\".\\");\\n        }\\n      }\\n      sentences.push(\\"I don't know why she swallowed the fly. Perhaps she'll die.\\");\\n    }\\n\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  },\\n\\n  verses: function(m, n) {\\n    var sentences = [];\\n    for ( var i = m; i \\u003c= n; i++ ) {\\n      sentences.push( this.verse(i) );\\n    }\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  }\\n\\n};"}
310	35	f72493690adefba8d0dea5bd	\N	haskell	nth-prime	\N	\N	0	1	200	2016-03-16 14:03:21	2016-03-16 14:03:21	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
311	35	b567bb03b2fd108895f1b1e5	hibernating	haskell	word-count	\N	\N	0	2	201	2016-06-06 12:02:00	2016-06-06 12:02:00	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (Map, fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount :: [Char] -\\u003e Map [Char] Int\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
312	35	b7e77fa16e0ea00fbbe66236	superseded	haskell	word-count	\N	\N	0	1	201	2016-06-19 00:20:51	2016-06-19 00:20:51	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
313	14	14c08e2f0c67fe06c2ebbbec	\N	scala	hello-world	\N	\N	0	1	202	2016-08-01 19:56:24	2016-08-01 19:56:24	{"src\\\\main\\\\scala\\\\HelloWorld.scala":"/**\\r\\n * Created by Diablos on 31.10.2015.\\r\\n */\\r\\nobject HelloWorld {\\r\\n  def hello(name:String = \\"World\\") = s\\"Hello, $name!\\"\\r\\n}"}
314	41	8761ef6c08733ba806e607d9	\N	ruby	hamming	\N	\N	0	1	203	2016-07-05 16:06:51	2016-07-05 16:06:51	{"hamming.rb":"class Hamming\\n\\tVERSION = 1\\n\\tdef self.compute(stringA, stringB)\\n\\t\\tcounter = 0 \\n\\t\\ttester = 0\\n\\t\\tif stringA.length == stringB.length \\n\\t\\t\\twhile counter \\u003c stringA.length do \\n\\t\\t\\t\\tif stringA[counter] != stringB[counter]\\n\\t\\t\\t\\t\\ttester += 1 \\n\\t\\t\\t\\tend\\n\\t\\t\\t\\tcounter += 1\\n\\t\\t\\tend\\n\\t\\t\\ttester \\n\\t\\telse \\n\\t\\t\\traise ArgumentError.new(\\"Strands must be same length\\")\\n\\t\\tend\\n\\tend\\n\\nend"}
315	41	0450d28c9550230c2a9f21b2	\N	ruby	rna-transcription	\N	\N	0	1	204	2015-12-30 06:58:36	2015-12-30 06:58:36	{"rna_transcription.rb":"class Complement\\n  VERSION = 2\\n  CODE = ['GCTA', 'CGAU']\\n  \\n  def self.of_dna(sample)\\n    raise ArgumentError unless sample.match(/^[GCTA]*$/)\\n    sample.tr *CODE \\n  end\\n\\n  def self.of_rna(sample)\\n    raise ArgumentError unless sample.match(/^[CGAU]*$/)\\n    sample.tr *CODE.reverse\\n  end\\nend"}
316	41	c9dd3ffd8c80a98bd42e77b2	pending	java	etl	\N	\N	0	1	205	2016-02-13 17:17:16	2016-02-13 17:17:16	{"src\\\\main\\\\java\\\\Etl.java":"import java.util.*;\\r\\n\\r\\npublic class Etl {\\r\\n\\r\\n    public Etl() {\\r\\n    }\\r\\n\\r\\n    public Map transform(Map map) {\\r\\n        return reverse(map);\\r\\n    }\\r\\n\\r\\n    //map must be a bijection in order for this to work properly\\r\\n    public static \\u003cK,V\\u003e Map\\u003cV,K\\u003e reverse(Map\\u003cK,V\\u003e map) {\\r\\n        Map\\u003cV,K\\u003e rev = new Map\\u003cV, K\\u003e() {@Override public int size() {\\r\\n                return 0;\\r\\n            }@Override public boolean isEmpty() {\\r\\n                return false;\\r\\n            }@Override public boolean containsKey(Object key) {\\r\\n                return false;\\r\\n            }@Override public boolean containsValue(Object value) {\\r\\n                return false;\\r\\n            }@Override public K get(Object key) {\\r\\n                return null;\\r\\n            }@Override public K put(V key, K value) {\\r\\n                return null;\\r\\n            }@Override public K remove(Object key) {\\r\\n                return null;\\r\\n            }@Override public void putAll(Map\\u003c? extends V, ? extends K\\u003e m) {\\r\\n\\r\\n            }@Override public void clear() {\\r\\n\\r\\n            }@Override public Set\\u003cV\\u003e keySet() {\\r\\n                return null;\\r\\n            }@Override public Collection\\u003cK\\u003e values() {\\r\\n                return null;\\r\\n            }@Override public Set\\u003cEntry\\u003cV, K\\u003e\\u003e entrySet() {\\r\\n                return null;\\r\\n            }@Override public boolean equals(Object o) {\\r\\n                return false;\\r\\n            }@Override public int hashCode() {\\r\\n                return 0;\\r\\n            }};\\r\\n        for(Map.Entry\\u003cK,V\\u003e entry : map.entrySet())\\r\\n            rev.put(entry.getValue(), entry.getKey());\\r\\n        return rev;\\r\\n    }\\r\\n}"}
329	41	d9881ef1f5be16702da1f7b0	pending	javascript	palindrome-products	\N	\N	0	1	216	2016-06-25 06:15:17	2016-06-25 06:15:17	{"/javascript/palindrome-products/palindrome-products.js":"var Palindrome = function(params){\\n  this.maxFactor=params.maxFactor;\\n  this.minFactor=params.minFactor || 1;\\n  this.maxProduct=1;\\n  this.minProduct=Infinity;\\n  this.data=[];\\n};\\n\\nPalindrome.prototype.generate = function(){\\n  for (var ii=this.minFactor;ii\\u003cthis.maxFactor;ii++){\\n    for (var jj=ii;jj\\u003c=this.maxFactor;jj++){\\n      var product=ii*jj;\\n      if (product.toString().split('').reverse().join('')===product.toString()){\\n        this.data[product]=[ii,jj];\\n        this.maxProduct = Math.max(this.maxProduct, product);\\n        this.minProduct = Math.min(this.minProduct, product);\\n      }\\n    }\\n  }\\n};\\n\\nPalindrome.prototype.largest = function(){\\n  this.value=this.maxProduct;\\n  this.factors=[this.data[this.maxProduct]];\\n  return this;\\n};\\n\\nPalindrome.prototype.smallest = function(){\\n  this.value=this.minProduct;\\n  this.factors=[this.data[this.minProduct]];\\n  return this;\\n};\\n\\nmodule.exports = Palindrome;"}
317	41	78df3c6b07b184076c3af2b3	\N	java	space-age	\N	\N	0	1	206	2016-04-04 12:42:19	2016-04-04 12:42:19	{"src\\\\main\\\\java\\\\SpaceAge.java":"public class SpaceAge {\\r\\n\\r\\n\\tprivate static final long EARTH_YEAR_SECONDS = 31557600;\\r\\n\\r\\n\\tprivate static final double MERCURY_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 000.24084670;\\r\\n\\tprivate static final double VENUS_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 000.61519726;\\r\\n\\tprivate static final double EARTH_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 001.00000000;\\r\\n\\tprivate static final double MARS_SECONDS_IN_YEAR    = EARTH_YEAR_SECONDS * 001.88081580;\\r\\n\\tprivate static final double JUPITER_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 011.86261500;\\r\\n\\tprivate static final double SATURN_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 029.44749800;\\r\\n\\tprivate static final double URANUS_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 084.01684600;\\r\\n\\tprivate static final double NEPTUNE_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 164.79132000;\\r\\n\\r\\n\\tprivate final long seconds;\\r\\n\\r\\n\\tpublic SpaceAge(long seconds) {\\r\\n\\t\\tthis.seconds = seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic long getSeconds() {\\r\\n\\t\\treturn this.seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMercury() {\\r\\n\\t\\treturn seconds / MERCURY_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onVenus() {\\r\\n\\t\\treturn seconds / VENUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onEarth() {\\r\\n\\t\\treturn seconds / EARTH_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMars() {\\r\\n\\t\\treturn seconds / MARS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onJupiter() {\\r\\n\\t\\treturn seconds / JUPITER_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onSaturn() {\\r\\n\\t\\treturn seconds / SATURN_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onUranus() {\\r\\n\\t\\treturn seconds / URANUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onNeptune() {\\r\\n\\t\\treturn seconds / NEPTUNE_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n}"}
318	41	d404acd5c5e9ad69b5f454eb	\N	elixir	hello-world	\N	\N	0	1	207	2016-04-16 19:59:24	2016-04-16 19:59:24	{"hello_world.exs":"defmodule HelloWorld do\\n  @moduledoc \\"\\"\\"\\n  Elixir counts the number of arguments as part of the function name.\\n  For instance;\\n\\n      def hello() do\\n      end\\n\\n  would be a completely different function from\\n\\n      def hello(name) do\\n      end\\n\\n  Can you find a way to make all the tests pass with just one\\n  function?\\n\\n  Hint: look into argument defaults here:\\n  http://elixir-lang.org/getting-started/modules.html#default-arguments\\n  \\"\\"\\"\\n\\n  @doc \\"\\"\\"\\n  Greets the user by name, or by saying \\"Hello, World!\\"\\n  if no name is given.\\n  \\"\\"\\"\\n  @spec hello(String.t) :: String.t\\n  def hello, do: \\"Hello, World!\\"\\n  def hello(name), do: \\"Hello, #{name}!\\"\\nend"}
319	41	2f8251e00db0551f29994f1f	\N	python	rna-transcription	\N	\N	0	1	208	2016-01-25 22:25:42	2016-01-25 22:25:42	{"dna.py":"def to_rna(n):\\n\\tdict = {'G':'C', 'C':'G', 'T':'A', 'A':'U'}\\n\\tn.split()\\n\\tlst = []\\n\\tfor i in n: \\n\\t\\tlst.append(dict[i])\\n\\treturn ''.join(lst)"}
320	41	e8e442c3c353bb28a022eb21	done	javascript	bob	\N	\N	0	1	209	2015-12-15 09:59:45	2015-12-15 09:59:45	{"bob.js":"var Bob = function() {\\n  this.hey = function(input) {\\n    if (input.match(/[a-zA-z1-9]/) == null) {\\n        return \\"Fine. Be that way!\\"\\n      } else if (input.toUpperCase() === input \\u0026\\u0026 input.match(/[a-zA-z]/) != null){\\n        return \\"Woah, chill out!\\";\\n      } else if (input[input.length - 1] === \\"?\\" ){\\n        return \\"Sure.\\";\\n      } else {\\n        return \\"Whatever.\\";\\n      }\\n  }\\n}\\n\\nexports.Bob = Bob;"}
321	41	ee83b32c7774d785148bfa95	\N	javascript	space-age	\N	\N	0	1	210	2015-12-23 05:33:07	2015-12-23 05:33:07	{"space-age.js":"\\"use strict\\";\\n\\nmodule.exports = SpaceAge;\\n\\nconst earthSecsPerYear = 31557600;\\n\\nconst planets = {\\n  Earth: 1,\\n  Mercury: 0.2408467,\\n  Venus: 0.61519726,\\n  Mars: 1.8808158,\\n  Jupiter: 11.862615,\\n  Saturn: 29.447498,\\n  Uranus: 84.016846,\\n  Neptune: 164.79132\\n}\\n\\nfunction SpaceAge(seconds) {\\n  this.seconds = seconds;\\n}\\n\\nObject.getOwnPropertyNames(planets).forEach(planet =\\u003e {\\n  const yearsRelativeToEarth = planets[planet];\\n\\n  SpaceAge.prototype['on' + planet] = function () {\\n    const conversionFunc = ratioToEarth(yearsRelativeToEarth);\\n    return conversionFunc(this.seconds);\\n  }\\n});\\n\\nfunction ratioToEarth(yearsRelativeToEarth) {\\n  const secsPerYear = earthSecsPerYear * yearsRelativeToEarth;\\n  const conversionFunc = ratioSec(secsPerYear);\\n  return seconds =\\u003e conversionFunc(seconds);\\n}\\n\\nfunction ratioSec(secsPerYear) {\\n  return seconds =\\u003e format(seconds / secsPerYear)\\n}\\n\\nfunction format(str) {\\n  return +str.toFixed(2);\\n}"}
322	41	4ae0e35c2d6df5f347a5a6de	\N	ruby	phone-number	\N	\N	0	1	211	2016-02-09 00:31:34	2016-02-09 00:31:34	{"phone_number.rb":"class PhoneNumber\\n  def initialize(phone_number)\\n    @phone_number = phone_number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_phone_number\\n  end\\n\\n  def number\\n    @phone_number\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{@phone_number[0..2]}) #{@phone_number[3..5]}-#{@phone_number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_phone_number\\n    @phone_number = '0000000000' unless valid_content?\\n    @phone_number = @phone_number.sub(/\\\\A1/, '') if @phone_number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @phone_number\\n  end\\nend"}
323	41	0fda42f339617abe7d0d244b	\N	ruby	phone-number	\N	\N	0	2	211	2016-05-25 15:08:25	2016-05-25 15:08:25	{"phone_number.rb":"class PhoneNumber\\n  @@default_number = '0000000000'\\n  attr_reader :number\\n\\n  def initialize(number)\\n    @number = number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_number\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_number\\n    @number = @@default_number unless valid_content?\\n    @number = @number[1..-1] if @number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @number\\n  end\\nend"}
324	41	1fc30835dca7bd16c71f2ba3	pending	python	gigasecond	\N	\N	0	2	212	2015-12-25 11:47:10	2015-12-25 11:47:10	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    return birthday + timedelta(seconds=10**9)"}
325	41	aa4bc6aedc112e3f6f1fc21a	superseded	python	gigasecond	\N	\N	0	1	212	2016-02-29 01:50:30	2016-02-29 01:50:30	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    gigadays = 10 ** 9 / (60 * 60 * 24)\\n    \\n    return birthday + timedelta(days=gigadays)"}
326	41	85de2b3db7259959ee939b9b	\N	python	hamming	\N	\N	0	1	213	2016-04-28 01:47:42	2016-04-28 01:47:42	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
327	41	070c98500de23e637e0a4a00	\N	ruby	roman-numerals	\N	\N	0	1	214	2016-01-17 15:25:20	2016-01-17 15:25:20	{"roman_numerals.rb":"class Fixnum\\n\\n  VERSION = 1\\n\\n  ONES = [nil, 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX']\\n  TENS = [nil, 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC']\\n  HUNS = [nil, 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM']\\n  THOS = [nil, 'M', 'MM', 'MMM']\\n  MAP  = [THOS, HUNS, TENS, ONES]\\n\\n  def to_roman\\n    ('%04d' % self).chars.each_with_index.map { |c, i| MAP[i][c.to_i] }.reject { |r| r.nil? }.join\\n  end\\n\\nend"}
330	41	a2ee7a06b5e0a72fba8e4b4a	\N	javascript	etl	\N	\N	0	2	217	2015-12-20 19:08:45	2015-12-20 19:08:45	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n\\n  function processKeys(key) {\\n    old[key].forEach(function(letter) {\\n      expected[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n\\n  points.forEach(processKeys);\\n  \\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
331	41	5cb1e60038e6f772f8cd2521	\N	javascript	etl	\N	\N	0	1	217	2015-12-26 19:21:19	2015-12-26 19:21:19	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n  for (var i = 1; i \\u003c= points[points.length - 1]; i++) {\\n    if (old[i]) {\\n      old[i].forEach(function(letter) {\\n        expected[letter.toLowerCase()] = i;\\n      });\\n    }\\n  }\\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
332	41	51c32b6abb8941e186434141	\N	haskell	space-age	\N	\N	0	1	218	2016-03-07 13:38:26	2016-03-07 13:38:26	{"SpaceAge.hs":"module SpaceAge where\\n\\nimport Data.Maybe (fromJust)\\n\\ndata Planet = Mercury | Venus | Earth | Mars | Jupiter | Saturn | Uranus | Neptune deriving (Show, Eq)\\n\\nageOn :: Planet -\\u003e Integer -\\u003e Double\\nageOn p s = (fromIntegral s) / 31557600.0 / (fromJust $ lookup p planets) where\\n    planets = [(Mercury, 0.2408467), (Venus, 0.61519726), (Earth, 1.0), (Mars, 1.8808158), (Jupiter, 11.862615), (Saturn, 29.447498), (Uranus, 84.016846), (Neptune, 164.79132)]"}
333	41	19db6cba2d0fdbc66995ffc0	superseded	ruby	strain	\N	\N	0	1	219	2015-12-27 14:32:18	2015-12-27 14:32:18	{"array.rb":"class Array\\n  def keep\\n    #self.select { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    #self.reject { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element unless yield(element)\\n    end\\n  end\\nend"}
334	41	1e91242a08a37c2c9a999571	done	ruby	strain	\N	\N	0	2	219	2016-05-08 15:51:31	2016-05-08 15:51:31	{"array.rb":"module Strainable\\n  def keep\\n    each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    keep { |item| !yield(item) }\\n  end\\nend\\n\\nclass Array\\n  include Strainable\\nend"}
335	41	8128505f312f134361dbccda	\N	javascript	word-count	\N	\N	0	1	220	2016-01-22 04:46:00	2016-01-22 04:46:00	{"word-count.js":"module.exports = function(sentence) {\\n  var amounts = {};\\n  var words = sentence.replace(/(\\\\t|\\\\n|\\\\s)+/g, ' ').trim().split(' ');\\n  for (var i = 0; i \\u003c words.length; i++) {\\n    amounts[words[i]] = parseInt(amounts[words[i]]) || 0;\\n    amounts[words[i]]++;\\n  }\\n\\n  return amounts;\\n};"}
336	41	ee946b29a8a3bb3e783e205b	done	ruby	word-count	\N	\N	0	1	221	2015-12-18 10:49:58	2015-12-18 10:49:58	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    self.words = phrase.scan(/[\\\\w']+/).map(\\u0026:downcase)\\n  end\\n\\n  def word_count\\n    counter = Hash.new {|hash, key| hash[key] = 0}\\n    words.inject(counter) do |counts, word|\\n      counts[word] += 1\\n      counts\\n    end\\n  end\\n\\n  private\\n\\n  attr_accessor :words\\nend"}
337	41	f2e77992c8bd886d8933a226	\N	ruby	robot-name	\N	\N	0	1	222	2016-02-17 09:02:02	2016-02-17 09:02:02	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
338	41	b43e9affc3ac7d14f877a826	\N	scala	hello-world	\N	\N	0	1	223	2016-04-15 09:43:11	2016-04-15 09:43:11	{"src\\\\main\\\\scala\\\\HelloWorld.scala":"/**\\r\\n * Created by Diablos on 31.10.2015.\\r\\n */\\r\\nobject HelloWorld {\\r\\n  def hello(name:String = \\"World\\") = s\\"Hello, $name!\\"\\r\\n}"}
339	41	3dd481a65953d1e9b84bbf35	hibernating	python	ocr-numbers	\N	\N	0	2	224	2015-12-19 22:01:16	2015-12-19 22:01:16	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\n## ALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nGRID_CODE = {\\n    \\"0\\" : 0b1101111, \\n    \\"1\\" : 0b0001001, \\n    \\"2\\" : 0b1011110, \\n    \\"3\\" : 0b1011011, \\n    \\"4\\" : 0b0111001, \\n    \\"5\\" : 0b1110011, \\n    \\"6\\" : 0b1110111, \\n    \\"7\\" : 0b1001001, \\n    \\"8\\" : 0b1111111, \\n    \\"9\\" : 0b1111011,\\n}\\n\\ndef _grid(string):\\n    g = [[] for i in range(4)]\\n    for s in string:\\n        code = GRID_CODE.get(s, 0)\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nCHAR_MAP = {}\\nfor k in GRID_CODE:\\n    CHAR_MAP[\\"\\".join(_grid(k))] = k\\n\\ndef grid(num):\\n    num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    return _grid(num)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(CHAR_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
350	41	23cbc1563204fe5e0b2f6dd5	superseded	haskell	house	\N	\N	0	1	233	2016-03-04 13:49:30	2016-03-04 13:49:30	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nimport Data.List (intercalate)\\n\\nrhyme :: String\\nrhyme = unlines strophes\\n  where strophes = map strophe [0..11]\\n\\nstrophe :: Int -\\u003e String\\nstrophe n = intro ++ subject n ++ rest ++ \\".\\\\n\\"\\n  where intro  = \\"This is the \\"\\n        verses = intercalate \\"\\\\n\\" $ map verse [n - 1, n - 2 .. 0]\\n        rest\\n          | n == 0    = \\"\\"\\n          | otherwise = \\"\\\\n\\" ++ verses\\n\\nverse :: Int -\\u003e String\\nverse n = \\"that \\" ++ verb n ++ \\" the \\" ++ subject n\\n\\nverb :: Int -\\u003e String\\nverb 0  = \\"lay in\\"\\nverb 1  = \\"ate\\"\\nverb 2  = \\"killed\\"\\nverb 3  = \\"worried\\"\\nverb 4  = \\"tossed\\"\\nverb 5  = \\"milked\\"\\nverb 6  = \\"kissed\\"\\nverb 7  = \\"married\\"\\nverb 8  = \\"woke\\"\\nverb 9  = \\"kept\\"\\nverb 10 = \\"belonged to\\"\\nverb _  = undefined\\n\\nsubject :: Int -\\u003e String\\nsubject 0  = \\"house that Jack built\\"\\nsubject 1  = \\"malt\\"\\nsubject 2  = \\"rat\\"\\nsubject 3  = \\"cat\\"\\nsubject 4  = \\"dog\\"\\nsubject 5  = \\"cow with the crumpled horn\\"\\nsubject 6  = \\"maiden all forlorn\\"\\nsubject 7  = \\"man all tattered and torn\\"\\nsubject 8  = \\"priest all shaven and shorn\\"\\nsubject 9  = \\"rooster that crowed in the morn\\"\\nsubject 10 = \\"farmer sowing his corn\\"\\nsubject 11 = \\"horse and the hound and the horn\\"\\nsubject _  = undefined"}
340	41	72884d78e9fb8407e8b3402d	superseded	python	ocr-numbers	\N	\N	0	1	224	2016-05-18 18:36:02	2016-05-18 18:36:02	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\nALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nDIGIT_CODE = (0b1101111, 0b0001001, 0b1011110, 0b1011011, 0b0111001, \\n        0b1110011, 0b1110111, 0b1001001, 0b1111111, 0b1111011)\\n\\ndef grid(num):\\n    if not isinstance(num, basestring):\\n        num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    \\n    digits = map(int, list(num))\\n    g = [[] for i in range(4)]\\n    for d in digits:\\n        code = DIGIT_CODE[d]\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nDIGIT_MAP = {}\\nfor i in range(10):\\n    DIGIT_MAP[\\"\\".join(grid(i))] = str(i)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(DIGIT_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
341	41	90130c7f6ab6a7209cecd0c1	pending	go	binary-search-tree	\N	\N	0	1	225	2016-06-14 16:29:41	2016-06-14 16:29:41	{"/go/binary-search-tree/binary_search_tree.go":"package binarysearchtree\\n\\ntype SearchTreeData struct {\\n\\tdata  int\\n\\tleft  *SearchTreeData\\n\\tright *SearchTreeData\\n}\\n\\nfunc Bst(data int) *SearchTreeData {\\n\\treturn \\u0026SearchTreeData{data: data}\\n}\\n\\nfunc (s *SearchTreeData) Insert(data int) {\\n\\tswitch {\\n\\tcase data \\u003c= s.data \\u0026\\u0026 s.left == nil:\\n\\t\\ts.left = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003e s.data \\u0026\\u0026 s.right == nil:\\n\\t\\ts.right = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003c= s.data:\\n\\t\\ts.left.Insert(data)\\n\\tcase data \\u003e s.data:\\n\\t\\ts.right.Insert(data)\\n\\t}\\n}\\n\\nfunc (s *SearchTreeData) MapString(f func(int) string) []string {\\n\\tif s == nil {\\n\\t\\treturn []string{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapString(f), f(s.data)), s.right.MapString(f)...)\\n}\\n\\nfunc (s *SearchTreeData) MapInt(f func(int) int) []int {\\n\\tif s == nil {\\n\\t\\treturn []int{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapInt(f), f(s.data)), s.right.MapInt(f)...)\\n}"}
342	41	ab4608c302d53b1da0c97316	hibernating	javascript	hamming	\N	\N	0	1	226	2016-04-22 04:01:50	2016-04-22 04:01:50	{"hamming.js":"'use strict';\\r\\n\\r\\nvar Hamming = {};\\r\\n\\r\\nHamming.compute = function (a, b) {\\r\\n    var pos = 0,\\r\\n        distance = 0;\\r\\n\\r\\n    if (a.length !== b.length) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    while (pos \\u003c a.length) {\\r\\n        if (a[pos] !== b[pos]) {\\r\\n            distance = distance + 1;\\r\\n        }\\r\\n        pos = pos + 1;\\r\\n    }\\r\\n    return distance;\\r\\n};\\r\\n\\r\\nmodule.exports = Hamming;"}
343	41	d432428eb5d1595426575eca	\N	python	run-length-encoding	\N	\N	0	2	227	2016-03-30 21:39:17	2016-03-30 21:39:17	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
344	41	2adce273779c7f57dac95240	\N	python	run-length-encoding	\N	\N	0	1	227	2016-04-15 18:26:06	2016-04-15 18:26:06	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
345	41	16c065f8f7516fa6c02ece33	pending	perl5	etl	\N	\N	0	1	228	2016-01-28 22:00:18	2016-01-28 22:00:18	{"\\\\perl5\\\\etl\\\\etl.pm":"use strict;\\r\\nuse warnings;\\r\\n\\r\\npackage ETL;\\r\\n\\r\\nsub transform {\\r\\n    my ($in) = @_;\\r\\n    my %out;\\r\\n\\r\\n    for my $score (keys %{$in}) {\\r\\n        for my $letter (@{$in-\\u003e{$score}}) {\\r\\n            $out{lc $letter} = $score;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return \\\\%out;\\r\\n}\\r\\n\\r\\n1;"}
346	41	85f1dabbba3a34af42a63740	hibernating	scala	nucleotide-count	\N	\N	0	1	229	2016-01-31 16:48:49	2016-01-31 16:48:49	{"dna.scala":"class DNA(str: String) {\\n  val DnaNucleotides = Set('A', 'C', 'G', 'T')\\n  val RnaNucleotides = Set('A', 'C', 'G', 'U')\\n\\n  if (!str.toSet.diff(DnaNucleotides).isEmpty)\\n    throw new IllegalArgumentException\\n\\n  def count(marker: Char) = {\\n    if ((DnaNucleotides ++ RnaNucleotides).contains(marker))\\n      str.count(_ == marker)\\n    else\\n      throw new IllegalArgumentException\\n  }\\n\\n  def nucleotideCounts =\\n    DnaNucleotides.map(m =\\u003e (m, count(m))).toMap\\n}"}
347	41	aac5a79bbdf0453e95219c9c	pending	clojure	atbash-cipher	\N	\N	0	1	230	2016-03-19 17:59:59	2016-03-19 17:59:59	{"1.clj":"(def foo \\"\\")"}
348	41	7ec575c5c2a7e345cf0e8d15	\N	ruby	binary	\N	\N	0	1	231	2016-02-28 21:17:14	2016-02-28 21:17:14	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
349	41	3f70fa436bad16ce62a77257	done	python	word-count	\N	\N	0	1	232	2016-02-14 23:50:55	2016-02-14 23:50:55	{"wordcount.py":"\\r\\nfrom collections import Counter\\r\\nimport re\\r\\n\\r\\n\\r\\ndef word_count(s):\\r\\n    split = re.split(r' |\\\\n', s)\\r\\n    count = Counter(split)\\r\\n    del count['']\\r\\n    return count\\r\\n\\r\\n\\r"}
351	41	c8b7d7990c4f5958584b1330	done	haskell	house	\N	\N	0	2	233	2016-04-07 06:21:31	2016-04-07 06:21:31	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nverses :: [String]\\nverses = [\\n    \\"the house that Jack built.\\\\n\\"\\n  , \\"the malt\\\\nthat lay in\\"\\n  , \\"the rat\\\\nthat ate\\"\\n  , \\"the cat\\\\nthat killed\\"\\n  , \\"the dog\\\\nthat worried\\"\\n  , \\"the cow with the crumpled horn\\\\nthat tossed\\"\\n  , \\"the maiden all forlorn\\\\nthat milked\\"\\n  , \\"the man all tattered and torn\\\\nthat kissed\\"\\n  , \\"the priest all shaven and shorn\\\\nthat married\\"\\n  , \\"the rooster that crowed in the morn\\\\nthat woke\\"\\n  , \\"the farmer sowing his corn\\\\nthat kept\\"\\n  , \\"the horse and the hound and the horn\\\\nthat belonged to\\"\\n  ]\\n\\nrhyme :: String\\nrhyme = unlines $ map (\\"This is \\" ++) strophes\\n  where strophes = scanl1 f verses\\n        f song verse = verse ++ \\" \\" ++ song"}
353	41	bdde18749d886798e6501dac	\N	haskell	anagram	\N	\N	0	1	235	2015-12-11 10:34:29	2015-12-11 10:34:29	{"Anagram.hs":"module Anagram\\n       ( anagramsFor\\n       ) where\\n\\nimport           Data.Char (toLower)\\nimport           Data.List (sort)\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor word = filter isAnagram\\n  where\\n    isAnagram candidate = canon candidate == canonWord\\n                       \\u0026\\u0026 lower candidate /= lower word\\n    canonWord = canon word\\n\\n-- Canonicalize words for comparison.\\ncanon :: String -\\u003e String\\ncanon = sort . lower\\n\\nlower :: String -\\u003e String\\nlower = map toLower"}
354	41	0da1fcbb7b145606c27d17ba	pending	ruby	grains	\N	\N	0	1	236	2016-06-06 15:44:44	2016-06-06 15:44:44	{"/ruby/grains/grains.rb":"class Grains\\n\\n  def square(grains)\\n    2**(grains-1)\\n  end\\n\\n  def total\\n    total = 0\\n    (1..64).each do |count|\\n      total+= square(count)\\n    end\\n    total\\n  end\\n\\nend"}
355	41	6bfe797068b98c21350a9dc2	hibernating	javascript	food-chain	\N	\N	0	1	237	2015-12-15 13:10:42	2015-12-15 13:10:42	{"food-chain.js":"'use strict';\\n\\nvar verseOne = \\"I know an old lady who swallowed a fly.\\\\nI don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseTwo = \\"I know an old lady who swallowed a spider.\\\\nIt wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseThree = \\"I know an old lady who swallowed a bird.\\\\n\\" +\\n               \\"How absurd to swallow a bird!\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseFour = \\"I know an old lady who swallowed a cat.\\\\n\\" +\\n               \\"Imagine that, to swallow a cat!\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseFive = \\"I know an old lady who swallowed a dog.\\\\n\\" +\\n               \\"What a hog, to swallow a dog!\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSix = \\"I know an old lady who swallowed a goat.\\\\n\\" +\\n               \\"Just opened her throat and swallowed a goat!\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSeven = \\"I know an old lady who swallowed a cow.\\\\n\\" +\\n               \\"I don't know how she swallowed a cow!\\\\n\\" +\\n               \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseEight = \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n\\n// Keep all verses centralized\\nvar songVerses = {\\n  '1': verseOne,\\n  '2': verseTwo,\\n  '3': verseThree,\\n  '4': verseFour,\\n  '5': verseFive,\\n  '6': verseSix,\\n  '7': verseSeven,\\n  '8': verseEight\\n};\\n\\n// Exporting object\\nvar song = (function() {\\n  return {\\n    verse: function(verseNumber) {\\n      return songVerses[verseNumber] || 'No such verse';\\n    },\\n    verses: function(verseStart, verseEnd) {\\n\\n      // The song part init\\n      var songPart = '';\\n      var i;\\n\\n      // Construct the song part\\n      for (i = verseStart; i \\u003c= verseEnd; i++) {\\n        songPart += songVerses[i] + '\\\\n' || '';\\n      }\\n\\n      return songPart;\\n    }\\n  };\\n})();\\n\\nmodule.exports = song;"}
356	41	ceb915695f7ad6c88ac4a3a8	\N	cpp	queen-attack	\N	\N	0	2	238	2016-01-29 17:23:32	2016-01-29 17:23:32	{"queen_attack.cpp":"#include \\"queen_attack.h\\"\\n\\n#include \\u003csstream\\u003e\\n#include \\u003cstdexcept\\u003e\\n\\nnamespace queen_attack\\n{\\n\\nchess_board::chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black)\\n    : white_{white},\\n    black_{black}\\n{\\n    if (white == black) {\\n        throw std::domain_error(\\"Both queens cannot occupy the same position.\\");\\n    }\\n}\\n\\nchess_board::operator std::string() const\\n{\\n    std::ostringstream board;\\n    for (int row = 0; row \\u003c 8; ++row) {\\n        for (int col = 0; col \\u003c 8; ++col) {\\n            const auto pos = std::make_pair(row, col);\\n            if (pos == white_) {\\n                board \\u003c\\u003c 'W';\\n            } else if (pos == black_) {\\n                board \\u003c\\u003c 'B';\\n            } else {\\n                board \\u003c\\u003c '_';\\n            }\\n            if (col != 7) {\\n                board \\u003c\\u003c ' ';\\n            }\\n        }\\n        board \\u003c\\u003c '\\\\n';\\n    }\\n    return board.str();\\n}\\n\\nbool chess_board::can_attack() const\\n{\\n    return (white_.first == black_.first)\\n        || (white_.second == black_.second)\\n        || ((white_.first - black_.first) == (white_.second - black_.second))\\n        || ((white_.first - black_.first) == (black_.second - white_.second));\\n}\\n\\n}","queen_attack.h":"#if !defined(QUEEN_ATTACK_H)\\n#define QUEEN_ATTACK_H\\n\\n#include \\u003cstring\\u003e\\n#include \\u003cutility\\u003e\\n\\nnamespace queen_attack\\n{\\n\\nclass chess_board\\n{\\npublic:\\n    chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black);\\n\\n    chess_board()\\n    {}\\n\\n    std::pair\\u003cint, int\\u003e white() const\\n    {\\n        return white_;\\n    }\\n    std::pair\\u003cint, int\\u003e black() const\\n    {\\n        return black_;\\n    }\\n\\n    operator std::string() const;\\n\\n    bool can_attack() const;\\n\\nprivate:\\n    const std::pair\\u003cint, int\\u003e white_ = std::make_pair(0, 3);\\n    const std::pair\\u003cint, int\\u003e black_ = std::make_pair(7, 3);\\n};\\n\\n}\\n\\n#endif"}
357	41	7b1094294d38e21e6eda63d1	hibernating	cpp	queen-attack	\N	\N	0	1	238	2016-05-17 10:09:49	2016-05-17 10:09:49	{"queen_attack.cpp":"//#if !defined(QUEEN_ATTACK_H)\\r\\n//#define QUEEN_ATTACK_H\\r\\n//\\r\\n//#include \\u003cstring\\u003e\\r\\n//#include \\u003cutility\\u003e\\r\\n//\\r\\n//namespace queen_attack\\r\\n//{\\r\\n//\\r\\n//class chess_board\\r\\n//{\\r\\n//public:\\r\\n//    chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black);\\r\\n//\\r\\n//    chess_board()\\r\\n//    {}\\r\\n//\\r\\n//    std::pair\\u003cint, int\\u003e white() const\\r\\n//    {\\r\\n//        return white_;\\r\\n//    }\\r\\n//    std::pair\\u003cint, int\\u003e black() const\\r\\n//    {\\r\\n//        return black_;\\r\\n//    }\\r\\n//\\r\\n//    operator std::string() const;\\r\\n//\\r\\n//    bool can_attack() const;\\r\\n//\\r\\n//private:\\r\\n//    const std::pair\\u003cint, int\\u003e white_ = std::make_pair(0, 3);\\r\\n//    const std::pair\\u003cint, int\\u003e black_ = std::make_pair(7, 3);\\r\\n//};\\r\\n//\\r\\n//}\\r\\n//\\r\\n//#endif\\r\\n//\\r\\n#include \\"queen_attack.h\\"\\r\\n\\r\\n#include \\u003csstream\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace queen_attack\\r\\n{\\r\\n\\r\\nchess_board::chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black)\\r\\n    : white_{white},\\r\\n    black_{black}\\r\\n{\\r\\n    if (white == black) {\\r\\n        throw std::domain_error(\\"Both queens cannot occupy the same position.\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nchess_board::operator std::string() const\\r\\n{\\r\\n    std::ostringstream board;\\r\\n    for (int row = 0; row \\u003c 8; ++row) {\\r\\n        for (int col = 0; col \\u003c 8; ++col) {\\r\\n            const auto pos = std::make_pair(row, col);\\r\\n            if (pos == white_) {\\r\\n                board \\u003c\\u003c 'W';\\r\\n            } else if (pos == black_) {\\r\\n                board \\u003c\\u003c 'B';\\r\\n            } else {\\r\\n                board \\u003c\\u003c '_';\\r\\n            }\\r\\n            if (col != 7) {\\r\\n                board \\u003c\\u003c ' ';\\r\\n            }\\r\\n        }\\r\\n        board \\u003c\\u003c '\\\\n';\\r\\n    }\\r\\n    return board.str();\\r\\n}\\r\\n\\r\\nbool chess_board::can_attack() const\\r\\n{\\r\\n    return (white_.first == black_.first)\\r\\n        || (white_.second == black_.second)\\r\\n        || ((white_.first - black_.first) == (white_.second - black_.second));\\r\\n}\\r\\n\\r\\n}\\r"}
358	41	e0a67c73f06d7cd66556bdb3	done	haskell	sum-of-multiples	\N	\N	0	2	239	2016-01-18 00:56:16	2016-01-18 00:56:16	{"/haskell/sum-of-multiples/SumOfMultiples.hs":"module SumOfMultiples ( sumOfMultiples\\n                      , sumOfMultiplesDefault ) where\\n\\n-- | Sums up all numbers from 1 tp `max` that are divisible by one of 3 or 5.\\nsumOfMultiplesDefault :: Integral a =\\u003e a -- ^ `max`, upper bound of the numbers to sum up, lower bound is implied to be 1\\n                                    -\\u003e a -- ^ the sum\\nsumOfMultiplesDefault = sumOfMultiples [3,5]\\n\\n-- | Sums up all numbers from 1 to `max` that are divisible by one of `divs`\\nsumOfMultiples :: Integral a =\\u003e [a] -- ^ `divs`, list of numbers to check divisibility against\\n                             -\\u003e a   -- ^ `max`, upper bound of the numbers to sum up, lower bound is implied to be 1\\n                             -\\u003e a   -- ^ the sum\\nsumOfMultiples divs max = sum . filter (\\\\x -\\u003e divisibleByOneOf x divs) $ [1..(max - 1)]\\n\\ndivisibleBy :: Integral a =\\u003e a -\\u003e a -\\u003e Bool\\nx `divisibleBy` y = x `mod` y == 0\\n\\ndivisibleByOneOf :: Integral a =\\u003e a -\\u003e [a] -\\u003e Bool\\nx `divisibleByOneOf` ys = any (divisibleBy x) ys"}
359	41	e58d07b00af62a8deaf3e6df	superseded	haskell	sum-of-multiples	\N	\N	0	1	239	2016-04-13 22:33:02	2016-04-13 22:33:02	{"/haskell/sum-of-multiples/SumOfMultiples.hs":"module SumOfMultiples ( sumOfMultiples\\n                      , sumOfMultiplesDefault ) where\\n\\nsumOfMultiplesDefault :: Integral a =\\u003e a -\\u003e a\\nsumOfMultiplesDefault = sumOfMultiples [3,5]\\n\\nsumOfMultiples :: Integral a =\\u003e [a] -\\u003e a -\\u003e a\\nsumOfMultiples divs max = sum . filter (\\\\x -\\u003e divisibleByOneOf x divs) $ [1..(max - 1)]\\n\\ndivisibleBy :: Integral a =\\u003e a -\\u003e a -\\u003e Bool\\nx `divisibleBy` y = x `mod` y == 0\\n\\ndivisibleByOneOf :: Integral a =\\u003e a -\\u003e [a] -\\u003e Bool\\nx `divisibleByOneOf` ys = any (divisibleBy x) ys"}
360	41	47826a6f3233281540c58a2f	pending	erlang	rna-transcription	\N	\N	0	1	240	2016-04-05 07:47:21	2016-04-05 07:47:21	{"rna_transcription.erl":"-module(rna_transcription).\\n-export([to_rna/1]).\\n\\n-spec to_rna(list()) -\\u003e string().\\n-spec dna_to_rna(char()) -\\u003e char().\\n\\nto_rna(I) -\\u003e lists:foldl(fun(C, R) -\\u003e R ++ dna_to_rna(C) end,\\"\\", I).\\n\\ndna_to_rna(X) -\\u003e\\n  case X of\\n    $G -\\u003e \\"C\\";\\n    $C -\\u003e \\"G\\";\\n    $T -\\u003e \\"A\\";\\n    $A -\\u003e \\"U\\"\\n  end."}
361	41	3ab731c92296bc75d5afef3d	done	haskell	difference-of-squares	\N	\N	0	3	241	2015-12-21 19:10:09	2015-12-21 19:10:09	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n `pow` 3 + 3 * n `pow` 2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n `pow` 4 + 2 * n `pow` 3 + n `pow` 2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n `pow` 4 + 2 * n `pow` 3 - 3 * n `pow` 2 - 2 * n) `div` 12\\n\\npow :: Num a =\\u003e a -\\u003e Int -\\u003e a\\npow = (^)"}
362	41	db2cf25bc8df3f2fe362c605	superseded	haskell	difference-of-squares	\N	\N	0	2	241	2016-05-05 16:38:16	2016-05-05 16:38:16	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n^3 + 3 * n^2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n^4 + 2 * n^3 + n^2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n^4 + 2 * n^3 - 3 * n^2 - 2 * n) `div` 12"}
363	41	d50265f77250213c4c3428c6	superseded	haskell	difference-of-squares	\N	\N	0	1	241	2016-05-29 21:06:06	2016-05-29 21:06:06	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (sum . map square) [1..n]\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (square . sum) [1..n]\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = squareOfSums n - sumOfSquares n\\n\\nsquare :: (Integral a) =\\u003e a -\\u003e a\\nsquare x = x * x"}
364	41	7c7c17c228ee5578c159de95	pending	swift	leap	\N	\N	0	1	242	2015-12-18 17:45:24	2015-12-18 17:45:24	{"Bob.swift":"import Foundation\\n\\npublic struct Year {\\n\\n\\tlet year: Int\\n\\tpublic let isLeapYear : Bool = false;\\n\\t\\n\\tpublic init(calendarYear: Int){\\n\\t\\tself.year = calendarYear\\n\\t\\tself.isLeapYear = calculateLeapYear()\\n\\t}\\n\\t\\n\\tfunc calculateLeapYear() -\\u003e Bool {\\n\\t\\tif isDivisibleBy(400){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(100){\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(4){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\tfunc isDivisibleBy(number:Int) -\\u003e Bool{\\n\\t\\treturn (self.year%number == 0)\\n\\t}\\n\\n}"}
365	6	c87d2ac96a45fc7211b36716	needs_input	python	hamming	\N	\N	0	2	243	2016-03-28 21:23:52	2016-03-28 21:23:52	{"hamming.py":"\\"\\"\\"Python distance exercise solution\\"\\"\\"\\n\\ndef distance(text_one, text_two):\\n    \\"\\"\\"Calculate distance between two strings\\"\\"\\"\\n    count = 0\\n\\n    for (char1, char2) in zip(text_one, text_two):\\n        if char1 != char2:\\n            count += 1\\n\\n    return count"}
366	6	d7fee1ed30e44837c43c41a3	superseded	python	hamming	\N	\N	0	1	243	2016-04-26 22:47:02	2016-04-26 22:47:02	{"hamming.py":"def distance(textOne, textTwo):\\n    count  = 0\\n    lenTwo = len(textTwo)\\n\\n    for i, c in enumerate(textOne):\\n        if lenTwo \\u003c= i or textTwo[i] != c:\\n            count += 1\\n\\n    return count + lenTwo - len(textOne)"}
367	6	db21efffb2c47bb30bcd65f5	done	cpp	word-count	\N	\N	0	1	244	2016-02-16 00:06:43	2016-02-16 00:06:43	{"word_count.cpp":"#include \\u003cmap\\u003e\\n#include \\u003cboost/algorithm/string/case_conv.hpp\\u003e\\n#include \\u003cboost/algorithm/string/split.hpp\\u003e\\n#include \\u003cboost/algorithm/string/classification.hpp\\u003e\\n\\nusing namespace boost;\\n\\nnamespace word_count\\n{\\n    const std::map\\u003cstd::string, int\\u003e words(const char *in)\\n    {\\n\\tstd::string inString(in);\\n\\t\\n\\tstd::vector\\u003cstd::string\\u003e wordList; \\n\\tsplit(wordList, inString, is_punct() || is_space());\\n\\t\\n\\tstd::map\\u003cstd::string, int\\u003e countMap;\\n\\tfor(std::string\\u0026 myStr : wordList)\\n\\t{\\n\\t    to_lower(myStr);\\n\\t    if(countMap.count(myStr) \\u003e 0)\\n\\t    {\\n\\t\\tcountMap[myStr]++;\\n\\t    }\\n\\t    else if (!myStr.empty())\\n\\t    {\\n\\t\\tcountMap.insert( std::pair\\u003cstd::string, int\\u003e(myStr, 1));\\n\\t    }\\n\\t}\\n\\t\\n\\treturn countMap;\\n    }\\n};"}
368	6	cdc1401d752e62b85a01758f	superseded	coffeescript	nth-prime	\N	\N	0	1	245	2016-03-08 01:39:42	2016-03-08 01:39:42	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    new Collection(@_primes_collection_with_size(number)).last\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_primes_collection_with_size: (size) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c size\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection\\n\\n\\nclass Collection \\n\\n  constructor: (array) -\\u003e\\n    @array = array\\n    @last = this._last()\\n\\n  _last: -\\u003e\\n    @array.slice(-1)[0]\\n  \\n\\nmodule.exports = Prime"}
369	6	0621ef5c6604bbad54cbd721	done	coffeescript	nth-prime	\N	\N	0	2	245	2016-05-21 06:51:04	2016-05-21 06:51:04	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    @_findPrime(number)\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_findPrime: (amount) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c amount\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection[amount - 1]\\n\\nmodule.exports = Prime"}
370	6	cf8d601096381283e381f219	done	javascript	word-count	\N	\N	0	3	246	2016-01-17 06:12:46	2016-01-17 06:12:46	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (!phrase || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    count[word] = (count[word] || 0) + 1;\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
371	6	1a616dc43ed3f9f6b3b3442a	superseded	javascript	word-count	\N	\N	0	1	246	2016-01-31 12:10:08	2016-01-31 12:10:08	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  if (phrase === null || phrase === '' || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return;\\n  }\\n  \\n  var count = {};\\n  phrase.toLowerCase()\\n        .replace(/[^a-zA-Z0-9 ]/g, '')\\n        .replace(/\\\\s+/g, ' ')\\n        .split(' ')\\n        .forEach(\\n  function(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  });\\n  return count;\\n}"}
372	6	afee93032b8bdb8cd20ac511	superseded	javascript	word-count	\N	\N	0	2	246	2016-03-02 03:33:58	2016-03-02 03:33:58	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (phrase === null || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
373	34	137c7c97ff862c93b003f14f	pending	python	gigasecond	\N	\N	0	2	247	2016-02-27 09:20:18	2016-02-27 09:20:18	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    return birthday + timedelta(seconds=10**9)"}
374	34	a63d615210077ee8e727679f	superseded	python	gigasecond	\N	\N	0	1	247	2016-07-12 09:09:53	2016-07-12 09:09:53	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    gigadays = 10 ** 9 / (60 * 60 * 24)\\n    \\n    return birthday + timedelta(days=gigadays)"}
375	34	fe9510148c3bd2800c2434e9	\N	php	difference-of-squares	\N	\N	0	1	248	2016-04-21 11:23:13	2016-04-21 11:23:13	{"difference-of-squares.php":"\\u003c?php\\n\\nfunction sumOfSquares(int $to)\\n{\\n  return array_reduce(range(1, $to), function ($c, int $i) {\\n    return $c + pow($i, 2);\\n  });\\n}\\n\\nfunction squareOfSums(int $to)\\n{\\n  return pow(array_sum(range(1, $to)), 2);\\n}\\n\\nfunction difference(int $to)\\n{\\n  return squareOfSums($to) - sumOfSquares($to);\\n}"}
376	34	ba2dbf7945fe3e069ea6463e	pending	ruby	phone-number	\N	\N	0	1	249	2016-06-22 08:56:30	2016-06-22 08:56:30	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n\\tattr_reader:number\\n\\tdef initialize(n)\\n\\t\\t@number = n.gsub(/[^0-9]/, '')\\n\\t\\t@number.slice!(0) if @number.length == 11 \\u0026\\u0026 @number[0] == '1'\\n\\t\\t@number = '0000000000' if @number.length != 10 || n.length \\u003e 14\\n\\tend\\n\\n\\tdef area_code\\n\\t\\t@number.slice(0..2)\\n\\tend\\n\\n\\tdef to_s\\n\\t\\t\\"(#{area_code()}) #{@number.slice(3..5)}-#{@number.slice(6..9)}\\"\\n\\tend\\nend"}
377	34	8f1ccbbd54b5a614e24afe35	pending	javascript	grade-school	\N	\N	0	1	250	2016-03-06 07:22:44	2016-03-06 07:22:44	{"grade-school.js":"function School() {\\n\\tthis.db = {};\\n}\\n\\nSchool.prototype.add = function(name, number) {\\n\\tthis.db[number] = this.db[number] ? this.db[number] : [];\\n\\tthis.db[number].push(name);\\n\\tthis.db[number].sort();\\n}\\n\\nSchool.prototype.grade = function(number) {\\n\\treturn this.db[number] ? this.db[number] : [];\\n}\\n\\nSchool.prototype.roster = function() {\\n\\treturn this.db;\\n}\\n\\nmodule.exports = School;"}
378	16	2f5017ef221d5cbcdbd9e326	pending	ruby	nth-prime	\N	\N	0	1	251	2016-02-08 13:06:45	2016-02-08 13:06:45	{"prime.rb":"require 'set'\\n\\nmodule Prime\\n\\n  def self.nth(n)\\n    PrimeSieve.new(upper_bound(n)).drop(n-1).first\\n  end\\n\\n  def self.upper_bound(n)\\n    return 20 if n \\u003c= 6\\n    n * (Math.log(n) + Math.log(Math.log(n)))\\n  end\\n\\n  class PrimeSieve\\n    include Enumerable\\n\\n    def initialize(max)\\n      @max = max\\n    end\\n\\n    def each\\n      yield 2\\n\\n      odd_composites = Set.new\\n      (3..@max).step(2) do |n|\\n        if !odd_composites.include?(n)\\n          yield n\\n          (n**2..@max).step(n) do |i|\\n            odd_composites \\u003c\\u003c i\\n          end\\n        end\\n      end\\n    end\\n  end\\nend"}
379	16	ee93c8e8921e6c115eccecd8	\N	scala	bob	\N	\N	0	1	252	2016-01-20 06:06:39	2016-01-20 06:06:39	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
380	16	9fe2841f795c5b7a702cdc6a	\N	python	sublist	\N	\N	0	1	253	2016-07-21 07:06:46	2016-07-21 07:06:46	{"/python/sublist/sublist.py":"SUBLIST = 1\\nSUPERLIST = 2\\nEQUAL = 3\\nUNEQUAL = 4\\n\\ndef check_lists(list1, list2):\\n    l1, l2 = len(list1), len(list2)\\n    if l1 == l2:\\n        for i, x in enumerate(list1):\\n            if x != list2[i]:\\n                return UNEQUAL\\n        else:\\n            return EQUAL\\n    diff = l1 - l2\\n    if diff \\u003e 0:\\n        ret = SUPERLIST\\n    else:\\n        ret = SUBLIST\\n        list2, list1 = list1, list2\\n        l2, l1 = l1, l2\\n        diff *= -1\\n    for i in range(diff+1):\\n        for j, item in enumerate(list2):\\n            if list1[i+j] != item:\\n                break\\n        else:\\n            return ret\\n    return UNEQUAL"}
381	16	deb06f9f601541532a6f5e22	hibernating	javascript	word-count	\N	\N	0	1	254	2016-01-15 23:19:07	2016-01-15 23:19:07	{"word-count.js":"module.exports = function(s){\\n  var obj = {};\\n  s.split(/ |\\\\n/).forEach(function(word){\\n    if (! obj[word]) obj[word] = 0;\\n    obj[word]++;\\n  });\\n  return obj;\\n};"}
382	16	e0a858151bc926d180cda69b	pending	clojure	beer-song	\N	\N	0	5	255	2015-12-30 14:22:53	2015-12-30 14:22:53	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        action (take-one-down idx)\\n        remaining (bottles-of-beer (dec idx))]\\n    (format \\"%s of beer on the wall, %s of beer.\\\\n%s, %s of beer on the wall.\\\\n\\"\\n            (s/capitalize current)\\n            current\\n            action\\n            remaining)))\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
383	16	733f377fad7a7bf70ce38905	superseded	clojure	beer-song	\N	\N	0	4	255	2016-02-11 23:06:07	2016-02-11 23:06:07	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
384	16	17785a955eb79e3dac0aedc0	superseded	clojure	beer-song	\N	\N	0	2	255	2016-03-03 15:48:24	2016-03-03 15:48:24	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (dec to) -1)))))"}
385	16	b7b114b71529d9e8dcc368c1	superseded	clojure	beer-song	\N	\N	0	3	255	2016-03-06 02:53:22	2016-03-06 02:53:22	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (map verse (range from (dec to) -1)))))"}
386	16	40e9d061b0944cfeef6e8336	superseded	clojure	beer-song	\N	\N	0	1	255	2016-03-31 13:24:49	2016-03-31 13:24:49	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (- idx 1))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (- to 1) -1)))))"}
387	16	b4bd8bc494876fa30f4e3a2f	\N	javascript	raindrops	\N	\N	0	1	256	2016-01-01 02:06:38	2016-01-01 02:06:38	{"raindrops.js":"function Raindrops() {\\n  'use strict';\\n}\\n\\nRaindrops.prototype.convert = function(num) {\\n  switch (true) {\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlangPlong';\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0:\\n      return 'PlingPlang';\\n    case num % 3 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlong';\\n    case num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlangPlong';\\n    case num % 3 === 0:\\n      return 'Pling';\\n    case num % 5 === 0:\\n      return 'Plang';\\n    case num % 7 === 0:\\n      return 'Plong';\\n    default:\\n      return num.toString();\\n  }\\n};\\n\\nmodule.exports = Raindrops;"}
388	16	e347ff183844bed321c9f59b	pending	ruby	binary-search-tree	\N	\N	0	2	257	2016-01-18 01:59:04	2016-01-18 01:59:04	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_reader :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.send(\\"#{direction}=\\", self.class.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\n\\nprivate\\n\\n  attr_writer :left, :right\\nend"}
389	16	4fc6b925f1fddcd3052c970e	superseded	ruby	binary-search-tree	\N	\N	0	1	257	2016-05-15 09:24:49	2016-05-15 09:24:49	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_accessor :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.public_send(\\"#{direction}=\\", Bst.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\nend"}
390	18	8dc2cea7ebae55c9e56e2135	\N	ruby	hamming	\N	\N	0	1	258	2016-06-13 10:34:52	2016-06-13 10:34:52	{"hamming.rb":"class Hamming\\n\\tVERSION = 1\\n\\tdef self.compute(stringA, stringB)\\n\\t\\tcounter = 0 \\n\\t\\ttester = 0\\n\\t\\tif stringA.length == stringB.length \\n\\t\\t\\twhile counter \\u003c stringA.length do \\n\\t\\t\\t\\tif stringA[counter] != stringB[counter]\\n\\t\\t\\t\\t\\ttester += 1 \\n\\t\\t\\t\\tend\\n\\t\\t\\t\\tcounter += 1\\n\\t\\t\\tend\\n\\t\\t\\ttester \\n\\t\\telse \\n\\t\\t\\traise ArgumentError.new(\\"Strands must be same length\\")\\n\\t\\tend\\n\\tend\\n\\nend"}
391	18	27c317a22dbeecc0706d0c91	\N	ruby	nth-prime	\N	\N	0	1	259	2016-05-04 03:16:49	2016-05-04 03:16:49	{"nth_prime.rb":"class Prime\\n  UPPER_LIMIT = 105000\\n\\n  class \\u003c\\u003c self\\n    def nth p\\n      raise ArgumentError if p.zero?\\n      primes = []\\n      range.each do |n|\\n        if primes.any? { |x| n % x == 0 }\\n          nil\\n        else\\n          primes \\u003c\\u003c n\\n          break if primes.size == p\\n        end\\n      end\\n      primes.last\\n    end\\n\\n    def range\\n      (2..UPPER_LIMIT)\\n    end\\n  end\\nend"}
392	18	3fa31662be21231ff887b79d	hibernating	perl5	bob	\N	\N	0	1	260	2016-04-25 08:26:58	2016-04-25 08:26:58	{"bob.pm":"package Bob;\\n\\nuse 5.16.0;\\nuse strict;\\nuse warnings;\\n\\nsub hey($)\\n{\\n    my $saywhat=shift;\\n    print \\"saywhat=$saywhat\\\\n\\";\\n\\n    for ($saywhat) {\\n        when(/^\\\\s*$/)               { return(\\"Fine. Be that way!\\") }\\n        when(/[[:alpha:]]/ \\u0026\\u0026 uc)   { return(\\"Woah, chill out!\\") }  \\n        when(/\\\\?$/)                 { return(\\"Sure.\\") }\\n        default                     { return(\\"Whatever.\\") }\\n    };\\n}\\n\\n1;"}
393	24	73ef73166a01710ba2c3357b	superseded	haskell	scrabble-score	\N	\N	0	1	261	2016-04-27 01:09:07	2016-04-27 01:09:07	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| x `elem` \\"AEIOULNRSTaeioulnrst\\" = 1\\r\\n\\t| x `elem` \\"DGdg\\" = 2\\r\\n\\t| x `elem` \\"BCMPbcmp\\" = 3\\r\\n\\t| x `elem` \\"FHVWYfhvwy\\" = 4\\r\\n\\t| x `elem` \\"Kk\\" = 5\\r\\n\\t| x `elem` \\"JXjx\\" = 8\\r\\n\\t| x `elem` \\"QZqz\\" = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
394	24	7aaaf670945f5a0b90443440	hibernating	haskell	scrabble-score	\N	\N	0	2	261	2016-06-02 15:15:02	2016-06-02 15:15:02	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nimport Data.Char (toUpper)\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| y `elem` \\"AEIOULNRST\\" = 1\\r\\n\\t| y == 'D' || y == 'G' = 2\\r\\n\\t| y `elem` \\"BCMP\\" = 3\\r\\n\\t| y `elem` \\"FHVWY\\" = 4\\r\\n\\t| y == 'K' = 5\\r\\n\\t| y == 'J' || y == 'X' = 8\\r\\n\\t| y == 'Q' || y == 'Z' = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\twhere y = toUpper x\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
395	24	d27cbc11215b81a0ad1140eb	hibernating	erlang	trinary	\N	\N	0	1	262	2016-07-13 09:57:59	2016-07-13 09:57:59	{"/erlang/trinary/trinary.erl":"-module(trinary).\\n-export([to_decimal/1]).\\n\\nto_decimal(Str)-\\u003e\\n    to_decimal(lists:reverse(Str), 1, 0).\\n\\nto_decimal([], _Base, Accu) -\\u003e Accu;\\nto_decimal([H|T], Base, Accu) -\\u003e\\n    case is_trinary_digit(H) of\\n\\tfalse -\\u003e 0; \\n\\ttrue  -\\u003e \\n\\t    {H1, _} = string:to_integer([H]),\\n\\t    %% io:format(\\"Base:~p, H1:~p~n\\", [Base, H1]),\\n\\t    DigitCtrbt = Base*H1,\\n\\t    to_decimal(T, Base*3, Accu + DigitCtrbt)\\n    end.\\n\\nis_trinary_digit(D) -\\u003e\\t    \\n    (D \\u003e= $0) and (D =\\u003c $2)."}
396	24	a04b8537d532a9243c3b072d	\N	python	run-length-encoding	\N	\N	0	2	263	2016-05-08 01:31:09	2016-05-08 01:31:09	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
397	24	6aa1c73adead6d3e782fcadd	\N	python	run-length-encoding	\N	\N	0	1	263	2016-06-07 17:52:26	2016-06-07 17:52:26	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
398	24	e11d25aa2157baf578859559	\N	ruby	simple-cipher	\N	\N	0	1	264	2016-07-12 11:08:26	2016-07-12 11:08:26	{"simple_cipher.rb":"class Cipher\\n  ALPHABET = [*'a'..'z']\\n\\n  attr_reader :key\\n\\n  def initialize(key = nil)\\n    @key = key || 100.times.map { ALPHABET.sample }.join\\n    fail ArgumentError, 'invalid chars in key' unless valid?(@key)\\n  end\\n\\n  def encode(text)\\n    a = 'a'.ord\\n    text.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[(char.ord - a + key.ord - a) % ALPHABET.length]\\n    end.join\\n  end\\n\\n  def decode(code)\\n    code.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[char.ord - key.ord]\\n    end.join\\n  end\\n\\nprivate\\n\\n  def valid?(key)\\n    !key.empty? \\u0026\\u0026 key !~ /[^a-z]/\\n  end\\n\\nend"}
399	24	33d6bb26c05519c1d04bdd21	\N	javascript	hamming	\N	\N	0	1	265	2016-06-17 21:48:50	2016-06-17 21:48:50	{"hamming.js":"var compute = function() {};\\n\\ncompute.prototype.hamming = function(array1, array2) {\\n\\n\\n\\nif(array1.length !== array2.length) {\\n\\tthrow new Error('DNA strands must be of equal length.');\\n}\\nvar counter = 0;\\n\\n\\tfor(var i = 0; i \\u003c array1.length; i++) {\\n\\t\\tif (array1[i] !== array2[i]) {\\n\\t\\t\\tcounter++;\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\n\\n\\t\\treturn counter;\\n\\n};\\n\\n\\n\\n\\nmodule.exports = compute;\\n\\n// var myHam = new hamming();\\n\\n// myHam.hamming(ar1, ar2);\\n\\n\\n\\n// if(array1.length !=== array2.length) {\\n// \\t\\t\\treturn new Error('DNA strands must be of equal length.')\\n//     \\t}"}
400	24	4524ed1621af5a2cd42f0193	\N	python	hello-world	\N	\N	0	1	266	2016-05-10 12:30:26	2016-05-10 12:30:26	{"hello_world.py":"def hello(name='World'):\\n    return 'Hello, ' + name + '!'"}
401	24	bb63a268650ada56602cc5a6	superseded	ruby	gigasecond	\N	\N	0	2	267	2016-05-17 02:10:42	2016-05-17 02:10:42	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_time\\n  end\\nend"}
402	24	9ff4a6b31e1b6ba43f756e10	superseded	ruby	gigasecond	\N	\N	0	1	267	2016-05-28 12:22:06	2016-05-28 12:22:06	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_date\\n  end\\nend"}
403	24	7b54e84677da4f8e78136c30	done	ruby	gigasecond	\N	\N	0	3	267	2016-06-13 01:28:05	2016-06-13 01:28:05	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    date.to_time + 10**9\\n  end\\nend"}
404	42	6396bf2bd58428aaa1a83be0	done	ruby	leap	\N	\N	0	1	268	2016-07-26 22:41:25	2016-07-26 22:41:25	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
405	27	92e269bd751dec9943370c4b	superseded	ruby	word-count	\N	\N	0	1	269	2016-07-20 17:34:40	2016-07-20 17:34:40	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
406	27	92ff56334663254195e6f1d4	superseded	ruby	word-count	\N	\N	0	3	269	2016-07-21 19:37:28	2016-07-21 19:37:28	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
407	27	a95fd8d35b19731d121d43cd	done	ruby	word-count	\N	\N	0	4	269	2016-07-24 05:21:10	2016-07-24 05:21:10	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
408	27	c3a7c2bb1f8fb2a2ab90896a	superseded	ruby	word-count	\N	\N	0	2	269	2016-07-26 14:26:11	2016-07-26 14:26:11	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
409	27	ad82c3232e32c4d9b9d3653d	\N	python	robot-name	\N	\N	0	1	270	2016-07-21 20:20:07	2016-07-21 20:20:07	{"robot.py":"import random\\nimport string\\n\\nclass Robot:\\n    def __init__(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return\\n    \\n    def reset(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return"}
410	27	eaf83dc9dbfe7380c2c2c3ab	hibernating	elixir	list-ops	\N	\N	0	1	271	2016-07-30 13:45:27	2016-07-30 13:45:27	{"list_ops.exs":"defmodule ListOps do\\n  # Please don't use any external modules (especially List) in your\\n  # implementation. The point of this exercise is to create these basic functions\\n  # yourself.\\n  #\\n  # Note that `++` is a function from an external module (Kernel, which is\\n  # automatically important`) and so shouldn't be used either.\\n\\n  @spec count(list) :: non_neg_integer\\n  def count([_ | t]), do: 1 + count t\\n  def count([]), do: 0\\n\\n  @spec reverse(list) :: list\\n  def reverse(x), do: doreverse(x, [])\\n\\n  defp doreverse([], acc), do: acc\\n  defp doreverse([h | t], acc), do: doreverse(t, [h | acc])\\n\\n  @spec map(list, (any -\\u003e any)) :: list\\n  def map([], _), do: []\\n  def map([h | t], f), do: [f.(h) | map(t, f)]\\n\\n  @spec filter(list, (any -\\u003e as_boolean(term))) :: list\\n  def filter([], _), do: []\\n  def filter([h | t], f) do\\n    if f.(h) do\\n      [h | filter(t, f)]\\n    else\\n      filter(t, f)\\n    end\\n  end\\n\\n  @type acc :: any\\n  @spec reduce(list, acc, ((any, acc) -\\u003e acc)) :: acc\\n  def reduce([], acc, _), do: acc\\n  def reduce([h | t], acc, f), do: reduce(t, f.(h, acc), f)\\n\\n  @spec append(list, list) :: list\\n  def append([], l), do: l\\n  def append(l, []), do: l\\n  def append([x], l), do: [x | l]\\n  def append([h | t], l), do: [h | append(t, l)]\\n\\n  @spec concat([[any]]) :: [any]\\n  def concat([]), do: []\\n  def concat(ll) do\\n    reduce(ll, [], \\u0026reduce(\\u00261, \\u00262, fn(x, y) -\\u003e [x | y] end)) |\\u003e reverse\\n  end\\nend"}
411	27	53414cea63cbc2e6b846b597	\N	lisp	sieve	\N	\N	0	1	272	2016-07-26 16:04:15	2016-07-26 16:04:15	{"sieve.lisp":"(defpackage #:sieve\\n  (:use #:cl)\\n  (:export #:primes-to)\\n  (:documentation \\"Generates a list of primes up to a given limit.\\"))\\n\\n(in-package #:sieve)\\n\\n(defun initialize-array (array)\\n  (loop\\n     for x being the elements of array\\n     with counter = 0\\n     do (setf (svref array counter) (1+ counter))\\n     do (incf counter)))\\n\\n(defun strike-multiples (prime sieve)\\n  (loop\\n     for multiple from (+ prime prime) below (length sieve) by prime\\n     do (setf (svref sieve (1- multiple)) 0)))\\n\\n(defun next-prime (current sieve)\\n  (let ((current-index (find current sieve)))\\n    (find-if #'(lambda (x) (/= 0 x)) sieve :start current-index)))\\n\\n(defun primes-to (limit)\\n  (let ((sieve (make-array limit :element-type 'integer))\\n\\t(prime 2))\\n    (initialize-array sieve)\\n    (loop\\n       while (\\u003c prime limit)\\n       while (next-prime prime sieve)\\n       do (strike-multiples prime sieve)\\n       collect prime\\n       do (setf prime (next-prime prime sieve)))))"}
412	45	bb55b53dd6bf311e60534c6e	done	csharp	leap	\N	\N	0	1	273	2016-07-20 15:16:23	2016-07-20 15:16:23	{"Year.cs":"using System;\\r\\n\\r\\npublic class Year\\r\\n{\\r\\n    public static Boolean IsLeap(int year)\\r\\n    {\\r\\n        if( year % 4 == 0)\\r\\n        {\\r\\n            if (year % 100 == 0 \\u0026\\u0026 year % 400 != 0)\\r\\n                return false;\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}"}
413	45	81f1e36346bf2fe1dc2969d2	pending	ruby	hamming	\N	\N	0	1	274	2016-06-30 00:37:21	2016-06-30 00:37:21	{"hamming.rb":"class Hamming\\n  def self.compute(first, second)\\n    Hamming.new(first, second).compute\\n  end\\n\\n  def initialize(first, second)\\n    @first, @second = first, second\\n  end\\n\\n  def compute\\n    total = 0\\n    strand1.each_with_index do |char, index|\\n      total += 1 unless char == strand2[index]\\n    end\\n    total\\n  end\\n\\n  private\\n\\n  def size\\n    @size = [@first.size, @second.size].min\\n  end\\n\\n  def strand1\\n    @strand1 = @first.slice(0...size).scan(/./)\\n  end\\n\\n  def strand2\\n    @strand2 = @second.slice(0...size).scan(/./)\\n  end\\nend"}
414	45	bf680efcb47547c74d70b69b	\N	haskell	clock	\N	\N	0	1	275	2016-07-12 23:19:31	2016-07-12 23:19:31	{"Clock.hs":"module Clock(fromHourMin, toString) where\\nimport Text.Printf (printf)\\n\\ndata Clock = Clock { hour :: Integer\\n                   , minute :: Integer\\n                   } deriving (Eq, Show)\\n                     \\ninstance Num Clock where\\n  fromInteger = fromHourMin 0\\n  (Clock h1 m1) + (Clock h2 m2) = fromHourMin (h1 + h2) (m1 + m2)\\n  negate (Clock h m) = Clock (hoursPerDay - h - 1) (minutesPerHour - m)\\n  (*) = undefined\\n  abs = undefined\\n  signum = undefined\\n\\nfromHourMin :: Integer -\\u003e Integer -\\u003e Clock\\nfromHourMin h m = Clock {minute=m', hour=h'} \\n    where h' = (h + m `div` minutesPerHour) `mod` hoursPerDay\\n          m' = m `mod` minutesPerHour \\n          \\ntoString :: Clock -\\u003e String \\ntoString c = printf \\"%02d:%02d\\" (hour c) (minute c)\\n\\nminutesPerHour :: Integer\\nminutesPerHour = 60\\n\\nhoursPerDay :: Integer\\nhoursPerDay = 24"}
415	45	f9d6fac604334cc1c738cf8a	\N	php	roman-numerals	\N	\N	0	1	276	2016-07-21 21:51:31	2016-07-21 21:51:31	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number) {\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\tforeach( array_reverse( $numerals ) as $k =\\u003e $v ) {\\n\\t\\twhile($number \\u003e= $v) {\\n\\t\\t\\t$roman_num .= $k;\\n\\t\\t\\t$number -= $v;\\n\\t\\t}\\n\\t}\\n\\treturn $roman_num;\\n}"}
416	45	c2f0efdf92cde4cae95b3c10	\N	php	roman-numerals	\N	\N	0	2	276	2016-07-30 13:30:52	2016-07-30 13:30:52	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number)\\n{\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\n\\tforeach(array_reverse($numerals) as $k =\\u003e $v) {\\n\\t\\t$roman_num .= str_repeat($k, $number / $v);\\n\\t\\t$number %= $v;\\n\\t}\\n\\treturn $roman_num;\\n}"}
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 416, true);


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY tags (id, name, created_at, updated_at) FROM stdin;
\.


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('tags_id_seq', 1, false);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	2	1
2	3	1
3	4	1
4	2	2
5	2	3
6	2	4
7	3	4
8	4	5
9	3	6
10	3	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, confirmed, created_at, updated_at, inviter_id) FROM stdin;
1	1	22	t	2014-02-03 06:01:51	2014-02-03 06:01:51	\N
2	1	15	t	2001-08-06 04:45:23	2001-08-06 04:45:23	\N
3	1	18	t	1977-02-25 11:18:48	1977-02-25 11:18:48	\N
4	1	23	t	1978-04-29 01:51:53	1978-04-29 01:51:53	\N
5	1	11	t	1971-06-17 14:12:52	1971-06-17 14:12:52	\N
6	1	8	t	1987-03-03 01:12:27	1987-03-03 01:12:27	\N
7	1	7	t	2002-11-08 02:05:19	2002-11-08 02:05:19	\N
8	1	30	t	2014-07-21 09:23:58	2014-07-21 09:23:58	\N
9	1	31	t	2001-12-23 21:15:18	2001-12-23 21:15:18	\N
10	1	36	t	1978-04-01 02:44:16	1978-04-01 02:44:16	\N
11	1	16	f	2007-03-27 11:22:40	2007-03-27 11:22:40	\N
12	1	17	f	1975-08-20 15:59:54	1975-08-20 15:59:54	\N
13	1	29	f	1970-07-23 05:27:06	1970-07-23 05:27:06	\N
14	1	32	f	1989-10-09 19:02:47	1989-10-09 19:02:47	\N
15	1	38	f	2008-01-18 16:29:54	2008-01-18 16:29:54	\N
16	1	42	f	1983-02-25 21:52:50	1983-02-25 21:52:50	\N
17	1	43	f	2008-02-26 10:55:02	2008-02-26 10:55:02	\N
18	1	47	f	2011-02-01 01:19:56	2011-02-01 01:19:56	\N
19	2	3	t	2005-04-01 20:01:17	2005-04-01 20:01:17	\N
20	2	36	t	1987-09-09 21:03:35	1987-09-09 21:03:35	\N
21	2	31	t	2008-03-23 10:08:36	2008-03-23 10:08:36	\N
22	2	47	t	2001-10-24 01:19:37	2001-10-24 01:19:37	\N
23	2	19	f	2004-04-21 01:32:21	2004-04-21 01:32:21	\N
24	2	38	f	2014-01-30 13:06:19	2014-01-30 13:06:19	\N
25	3	38	f	2012-08-06 23:02:50	2012-08-06 23:02:50	\N
26	3	3	f	2001-01-21 09:00:23	2001-01-21 09:00:23	\N
27	4	3	t	2001-03-14 13:00:14	2001-03-14 13:00:14	\N
28	4	32	t	1987-01-23 20:09:07	1987-01-23 20:09:07	\N
29	4	22	t	1971-11-14 01:53:05	1971-11-14 01:53:05	\N
30	4	27	t	2001-03-20 17:39:00	2001-03-20 17:39:00	\N
31	4	20	t	1974-10-03 17:55:12	1974-10-03 17:55:12	\N
32	4	25	t	1973-02-25 15:20:05	1973-02-25 15:20:05	\N
33	4	19	t	2015-05-28 08:51:44	2015-05-28 08:51:44	\N
34	4	24	t	1986-08-10 00:43:46	1986-08-10 00:43:46	\N
35	4	26	t	2010-01-18 10:27:12	2010-01-18 10:27:12	\N
36	4	21	t	1974-04-10 08:41:37	1974-04-10 08:41:37	\N
37	4	38	f	2005-03-06 06:52:45	2005-03-06 06:52:45	\N
38	4	12	f	1970-10-03 05:46:17	1970-10-03 05:46:17	\N
39	4	14	f	2008-05-29 17:50:20	2008-05-29 17:50:20	\N
40	5	32	t	1986-09-08 06:42:03	1986-09-08 06:42:03	\N
41	5	40	t	1985-08-27 13:55:00	1985-08-27 13:55:00	\N
42	5	35	t	1992-06-15 12:21:32	1992-06-15 12:21:32	\N
43	5	37	t	1977-09-27 01:53:49	1977-09-27 01:53:49	\N
44	5	33	t	1995-07-09 01:23:40	1995-07-09 01:23:40	\N
45	5	36	t	1978-05-02 18:46:34	1978-05-02 18:46:34	\N
46	5	34	t	1970-08-04 14:32:47	1970-08-04 14:32:47	\N
47	5	39	t	1993-05-15 03:32:42	1993-05-15 03:32:42	\N
48	5	41	f	2010-02-18 14:56:02	2010-02-18 14:56:02	\N
49	5	38	f	1982-05-08 04:06:11	1982-05-08 04:06:11	\N
50	5	3	f	1983-12-18 23:06:38	1983-12-18 23:06:38	\N
51	6	6	t	1979-01-06 16:59:29	1979-01-06 16:59:29	\N
52	6	7	t	1970-03-06 15:56:50	1970-03-06 15:56:50	\N
53	6	8	t	1994-05-26 03:35:02	1994-05-26 03:35:02	\N
54	6	9	t	2000-10-18 01:11:18	2000-10-18 01:11:18	\N
55	6	11	t	2000-07-05 00:27:46	2000-07-05 00:27:46	\N
56	6	12	t	2000-04-21 20:46:29	2000-04-21 20:46:29	\N
57	6	13	t	1981-12-25 09:15:00	1981-12-25 09:15:00	\N
58	6	14	t	1999-01-01 00:13:38	1999-01-01 00:13:38	\N
59	6	15	t	1996-04-08 10:40:06	1996-04-08 10:40:06	\N
60	6	16	t	1987-06-29 01:23:43	1987-06-29 01:23:43	\N
61	6	17	t	2004-03-18 06:41:09	2004-03-18 06:41:09	\N
62	6	18	t	1977-07-14 10:20:11	1977-07-14 10:20:11	\N
63	6	23	t	2004-10-27 08:29:20	2004-10-27 08:29:20	\N
64	6	28	t	2005-03-12 19:32:37	2005-03-12 19:32:37	\N
65	6	29	t	1998-06-03 09:28:51	1998-06-03 09:28:51	\N
66	6	30	t	2009-04-08 03:10:25	2009-04-08 03:10:25	\N
67	6	31	t	1996-08-29 05:44:17	1996-08-29 05:44:17	\N
68	6	32	t	2009-04-06 15:51:14	2009-04-06 15:51:14	\N
69	6	38	t	1973-06-19 18:37:27	1973-06-19 18:37:27	\N
70	6	42	t	1986-09-28 17:07:43	1986-09-28 17:07:43	\N
71	6	43	t	2008-03-13 19:03:58	2008-03-13 19:03:58	\N
72	6	44	t	2000-09-04 14:30:25	2000-09-04 14:30:25	\N
73	6	45	t	2009-09-16 03:37:20	2009-09-16 03:37:20	\N
74	6	46	t	2015-06-15 15:46:17	2015-06-15 15:46:17	\N
75	6	47	t	1989-10-05 08:32:27	1989-10-05 08:32:27	\N
76	6	48	t	2011-05-25 20:13:00	2011-05-25 20:13:00	\N
77	6	49	t	1981-06-09 19:01:08	1981-06-09 19:01:08	\N
78	7	3	t	1993-05-29 07:51:19	1993-05-29 07:51:19	\N
79	7	39	t	2010-06-21 20:00:01	2010-06-21 20:00:01	\N
80	7	32	t	1989-06-12 12:50:23	1989-06-12 12:50:23	\N
81	7	38	f	2012-12-16 07:02:55	2012-12-16 07:02:55	\N
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, name, created_at, updated_at, description, public, tags) FROM stdin;
1	baconesia	baconesia	2015-12-25 12:05:44.811959	2015-12-25 12:05:44.811959	\N	f	{}
2	chocolades	chocolades	2016-08-02 02:03:35.86119	2016-08-02 02:03:35.86119	\N	f	{}
3	ghost	ghost	2016-05-26 00:40:42.869189	2016-05-26 00:40:42.869189	\N	f	{}
4	motley	motley	2016-07-18 22:06:05.872646	2016-07-18 22:06:05.872646	\N	f	{}
5	rugrats	rugrats	2015-12-14 11:24:50.888656	2015-12-14 11:24:50.888656	\N	f	{}
6	slate	slate	2015-12-03 02:47:32.904693	2015-12-03 02:47:32.904693	\N	f	{}
7	polkadots	polkadots	2016-04-22 19:45:31.936822	2016-04-22 19:45:31.936822	\N	f	{}
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, key, created_at, updated_at, archived, last_iteration_at, last_activity_at, last_activity, fetched_at, skipped_at, help_requested) FROM stdin;
1	9	python	gigasecond	1	done	0629a6d408501b2a69c64826	2016-03-25 13:59:59	2016-03-25 13:59:59	t	2016-07-06 13:31:10	2016-07-06 13:31:10	Submitted an iteration	\N	\N	f
2	9	python	kindergarten-garden	1	\N	650e46c0daf4707594e4d189	2016-03-21 12:02:47	2016-03-21 12:02:47	f	2016-07-21 09:55:45	2016-07-21 09:55:45	Submitted an iteration	\N	\N	f
3	9	javascript	kindergarten-garden	2	pending	23bfd444ab61cff3ea9f0445	2016-03-20 15:16:28	2016-03-20 15:16:28	f	2016-06-18 19:54:43	2016-06-18 19:54:43	Submitted an iteration	\N	\N	f
4	9	elixir	list-ops	1	hibernating	99f3cccd117134004cdb0e4b	2016-05-09 09:08:50	2016-05-09 09:08:50	f	2016-07-08 18:22:44	2016-07-08 18:22:44	Submitted an iteration	\N	\N	f
5	9	ruby	word-count	1	done	f99c771372ada30315ffacbe	2016-04-08 13:23:04	2016-04-08 13:23:04	t	2016-07-13 03:22:41	2016-07-13 03:22:41	Submitted an iteration	\N	\N	f
6	11	ruby	strain	1	done	4cb49208c8d1956fa261c5db	2016-04-27 16:05:12	2016-04-27 16:05:12	t	2016-05-19 17:34:32	2016-05-19 17:34:32	Submitted an iteration	\N	\N	f
7	11	javascript	palindrome-products	1	pending	f7dddcb98d7ed0c47f8debb3	2016-04-17 22:24:44	2016-04-17 22:24:44	f	2016-04-27 16:50:19	2016-04-27 16:50:19	Submitted an iteration	\N	\N	f
8	11	clojure	word-count	1	pending	736b965d1fd5ab62d03ab26d	2016-07-02 08:10:34	2016-07-02 08:10:34	f	2016-07-02 08:48:58	2016-07-02 08:48:58	Submitted an iteration	\N	\N	f
9	11	haskell	nth-prime	1	\N	624bdf8c92e8a9d69f6280e4	2016-06-04 14:26:03	2016-06-04 14:26:03	f	2016-07-04 14:19:57	2016-07-04 14:19:57	Submitted an iteration	\N	\N	f
10	11	clojure	binary	2	pending	4ace18f594f2440a1acf2303	2016-04-19 20:34:39	2016-04-19 20:34:39	t	2016-06-12 16:27:55	2016-06-12 16:27:55	Submitted an iteration	\N	\N	f
11	11	ruby	word-count	4	done	0c5b5b77b6f65fd94dffd917	2016-04-15 15:54:33	2016-04-15 15:54:33	t	2016-07-02 03:41:53	2016-07-02 03:41:53	Submitted an iteration	\N	\N	f
12	12	rust	difference-of-squares	1	pending	6b80d9f6287d80a01b65244e	2016-07-02 03:00:13	2016-07-02 03:00:13	f	2016-07-28 17:59:14	2016-07-28 17:59:14	Submitted an iteration	\N	\N	f
13	15	elixir	binary	1	\N	370db7b88b50e8e4977add21	2016-03-02 07:38:02	2016-03-02 07:38:02	t	2016-06-06 07:41:20	2016-06-06 07:41:20	Submitted an iteration	2015-12-30 00:05:14.345794	\N	f
14	22	ruby	phone-number	3	hibernating	73c911a0428dde0b0dc9db6e	2016-02-23 11:29:19	2016-02-23 11:29:19	f	2016-05-11 00:48:41	2016-05-11 00:48:41	Submitted an iteration	\N	\N	f
15	22	clojure	scrabble-score	2	pending	4a8cd7306a5d19858c206cf8	2016-02-04 14:12:20	2016-02-04 14:12:20	f	2016-07-15 05:24:37	2016-07-15 05:24:37	Submitted an iteration	\N	\N	f
16	22	ruby	binary	2	\N	a0cf06eadd4d2a0a1dcf5ad4	2016-02-11 07:27:37	2016-02-11 07:27:37	f	2016-07-17 09:40:53	2016-07-17 09:40:53	Submitted an iteration	\N	\N	f
17	22	python	grains	1	hibernating	c5ead16c44170eaea845a11f	2016-07-15 03:05:51	2016-07-15 03:05:51	f	2016-07-24 04:33:59	2016-07-24 04:33:59	Submitted an iteration	\N	\N	f
18	22	python	word-count	3	done	78678f0581a3ddb5f4eb3f60	2016-03-31 19:54:27	2016-03-31 19:54:27	t	2016-07-12 09:11:24	2016-07-12 09:11:24	Submitted an iteration	\N	\N	f
19	22	ocaml	bob	1	pending	e53f21985b18436012d8ae9b	2016-01-23 01:37:25	2016-01-23 01:37:25	f	2016-04-03 00:03:09	2016-04-03 00:03:09	Submitted an iteration	\N	\N	f
39	29	elixir	sublist	1	\N	e36524a61437ab442c783d33	2016-07-14 04:48:55	2016-07-14 04:48:55	t	2016-08-02 05:30:29	2016-08-02 05:30:29	Submitted an iteration	\N	\N	f
20	22	cpp	word-count	4	needs_input	a4b97d31dc278323f2826c74	2016-03-02 12:54:49	2016-03-02 12:54:49	t	2016-07-09 13:40:36	2016-07-09 13:40:36	Submitted an iteration	\N	\N	f
21	28	ruby	rna-transcription	2	done	9572cbc4daae715df05b6d48	2016-06-21 23:13:15	2016-06-21 23:13:15	t	2016-08-07 06:47:32	2016-08-07 06:47:32	Submitted an iteration	\N	\N	f
22	28	haskell	nth-prime	1	\N	fca711f9ae88f73557eb276e	2016-07-13 21:48:16	2016-07-13 21:48:16	f	2016-08-01 16:49:47	2016-08-01 16:49:47	Submitted an iteration	\N	\N	f
23	28	ruby	roman-numerals	1	\N	539cef9f6c926845ecfd595d	2016-07-03 01:13:41	2016-07-03 01:13:41	t	2016-07-21 10:23:52	2016-07-21 10:23:52	Submitted an iteration	2016-01-23 22:36:36.112711	\N	f
24	28	ruby	grains	1	pending	7b03d275806e8365c5ad6bb3	2016-06-13 16:41:47	2016-06-13 16:41:47	f	2016-06-20 09:19:43	2016-06-20 09:19:43	Submitted an iteration	\N	\N	f
25	28	python	hamming	2	needs_input	2aafc288718534b92d8d7bd3	2016-06-03 11:31:51	2016-06-03 11:31:51	f	2016-07-25 19:54:04	2016-07-25 19:54:04	Submitted an iteration	\N	\N	f
26	28	python	word-count	1	done	1d21e93ab2238a5079f7a24a	2016-06-09 10:25:17	2016-06-09 10:25:17	t	2016-07-18 01:00:25	2016-07-18 01:00:25	Submitted an iteration	\N	\N	f
27	28	scala	bob	1	\N	9acc0ae1a2fe241852419a61	2016-05-30 07:54:46	2016-05-30 07:54:46	f	2016-07-24 11:08:31	2016-07-24 11:08:31	@abo64 commented	2015-11-10 19:40:13.714934	\N	f
28	29	javascript	beer-song	1	pending	ef077699145d447db6df017c	2016-07-31 14:52:56	2016-07-31 14:52:56	f	2016-08-05 20:09:38	2016-08-05 20:09:38	Submitted an iteration	\N	\N	f
29	29	python	simple-cipher	1	pending	e2c3b581127db75c04e7ca2f	2016-07-05 09:40:38	2016-07-05 09:40:38	t	2016-07-12 08:05:19	2016-07-12 08:05:19	Submitted an iteration	\N	\N	f
30	29	python	leap	1	hibernating	5eaa7e22b252fbad51222764	2016-07-10 10:26:23	2016-07-10 10:26:23	f	2016-07-22 06:49:55	2016-07-22 06:49:55	Submitted an iteration	\N	\N	f
31	29	elixir	binary	1	\N	02ca69dd28db05742d12cc67	2016-07-08 23:57:27	2016-07-08 23:57:27	t	2016-08-10 06:15:51	2016-08-10 06:15:51	Submitted an iteration	2015-12-30 00:05:14.345794	\N	f
32	29	ruby	phone-number	3	hibernating	9dfda614817fb9eb89c3b3fa	2016-07-20 11:22:58	2016-07-20 11:22:58	t	2016-08-04 16:30:44	2016-08-04 16:30:44	Submitted an iteration	\N	\N	f
33	29	python	hamming	1	\N	0bde1b00fd33e4b4a13363b7	2016-07-03 11:24:28	2016-07-03 11:24:28	f	2016-07-30 02:32:07	2016-07-30 02:32:07	Submitted an iteration	2016-02-24 15:41:26.173657	\N	f
34	29	python	rna-transcription	1	done	95ab00b9ad92b6a4cbad5a51	2016-07-25 16:33:15	2016-07-25 16:33:15	t	2016-08-06 08:25:36	2016-08-06 08:25:36	Submitted an iteration	\N	\N	f
35	29	javascript	bob	1	done	2c845818a0eb884dbc126824	2016-07-14 10:27:41	2016-07-14 10:27:41	t	2016-07-23 23:17:44	2016-07-23 23:17:44	Submitted an iteration	\N	\N	f
36	29	clojure	meetup	1	pending	193537ba396dfb7797b251b3	2016-07-03 21:27:58	2016-07-03 21:27:58	f	2016-07-24 12:52:28	2016-07-24 12:52:28	Submitted an iteration	\N	\N	f
37	29	scala	difference-of-squares	2	\N	e18364dcd3bc844ea17aa171	2016-07-18 20:47:13	2016-07-18 20:47:13	f	2016-08-09 11:47:37	2016-08-09 11:47:37	@szafirov commented	2015-12-21 11:54:49.34367	\N	f
38	29	go	binary-search-tree	1	pending	53be79dae0c24d41701a01b7	2016-07-03 04:31:42	2016-07-03 04:31:42	f	2016-07-31 14:03:27	2016-07-31 14:03:27	Submitted an iteration	\N	\N	f
40	29	python	grains	1	hibernating	1870d04d576a76712983a00e	2016-07-14 06:55:32	2016-07-14 06:55:32	t	2016-07-17 18:35:06	2016-07-17 18:35:06	Submitted an iteration	\N	\N	f
41	29	csharp	leap	1	done	5d3140a8cadd335ae2bb197a	2016-07-12 06:30:31	2016-07-12 06:30:31	t	2016-08-09 07:33:38	2016-08-09 07:33:38	Submitted an iteration	\N	\N	f
42	29	go	pythagorean-triplet	1	\N	bd2331aa7a48e2fccc8154f9	2016-06-27 15:52:56	2016-06-27 15:52:56	f	2016-07-07 22:27:28	2016-07-07 22:27:28	Submitted an iteration	2016-02-16 14:29:29.667566	\N	f
43	29	python	hello-world	1	\N	9832a6eafbaf0df22f6069ed	2016-07-14 06:36:33	2016-07-14 06:36:33	t	2016-07-23 22:16:10	2016-07-23 22:16:10	Submitted an iteration	\N	\N	f
44	29	javascript	word-count	3	done	3f5c967a43c6e198fcce5ea7	2016-07-17 09:11:21	2016-07-17 09:11:21	t	2016-08-04 07:08:38	2016-08-04 07:08:38	Submitted an iteration	\N	\N	f
45	29	javascript	food-chain	1	pending	4c5d90d0bddb6aee399acb1c	2016-06-30 16:07:03	2016-06-30 16:07:03	t	2016-08-01 04:41:14	2016-08-01 04:41:14	Submitted an iteration	\N	\N	f
46	29	haskell	crypto-square	1	done	30cbf2ecee64b4f600715ffa	2016-07-06 17:15:10	2016-07-06 17:15:10	t	2016-08-01 15:42:11	2016-08-01 15:42:11	Submitted an iteration	\N	\N	f
141	48	java	etl	1	pending	4991e6b5a6d331a323e57136	2016-05-20 19:14:20	2016-05-20 19:14:20	t	2016-08-01 06:24:04	2016-08-01 06:24:04	Submitted an iteration	\N	\N	f
142	48	haskell	sum-of-multiples	2	done	d3f70e223c6017fba8432312	2016-05-26 08:47:41	2016-05-26 08:47:41	t	2016-07-05 19:51:21	2016-07-05 19:51:21	Submitted an iteration	\N	\N	f
47	29	coffeescript	nth-prime	2	done	4d2b1c4c06617375e2ab6766	2016-07-11 16:08:54	2016-07-11 16:08:54	t	2016-08-10 08:32:10	2016-08-10 08:32:10	Submitted an iteration	\N	\N	f
48	29	scala	allergies	3	\N	d4d5275a5ee13f43486713cb	2016-06-29 11:24:21	2016-06-29 11:24:21	f	2016-08-03 23:21:55	2016-08-03 23:21:55	@abo64 commented	2015-09-24 16:17:02.279182	\N	f
49	29	ruby	bob	2	pending	c4eec4221849f67b4df0c786	2016-06-28 15:19:07	2016-06-28 15:19:07	f	2016-08-03 00:31:00	2016-08-03 00:31:00	Submitted an iteration	\N	\N	f
50	29	ruby	matrix	1	pending	260ab594918a459c671f2a43	2016-06-26 18:46:36	2016-06-26 18:46:36	f	2016-07-21 04:57:41	2016-07-21 04:57:41	Submitted an iteration	\N	\N	f
51	29	haskell	rna-transcription	1	\N	00c22eb049cb0938095022d1	2016-08-03 19:34:52	2016-08-03 19:34:52	t	2016-08-08 09:53:46	2016-08-08 09:53:46	Submitted an iteration	2015-10-08 20:04:40.118352	\N	f
52	29	clojure	rna-transcription	2	pending	9f00e4b63aa45fb43f324a3c	2016-06-28 20:10:25	2016-06-28 20:10:25	t	2016-07-20 00:26:19	2016-07-20 00:26:19	Submitted an iteration	\N	\N	f
53	29	haskell	difference-of-squares	3	done	c718955d9ad15c3fc9d41f3e	2016-06-25 23:43:08	2016-06-25 23:43:08	t	2016-08-06 21:16:49	2016-08-06 21:16:49	Submitted an iteration	\N	\N	f
54	29	elixir	nucleotide-count	1	done	290368c2f8c07276d7a2db41	2016-08-03 16:18:51	2016-08-03 16:18:51	t	2016-08-07 03:30:38	2016-08-07 03:30:38	Submitted an iteration	\N	\N	f
55	29	ocaml	bob	1	pending	eac244d7fe670dafa50de4e1	2016-07-11 15:18:26	2016-07-11 15:18:26	f	2016-08-01 21:21:38	2016-08-01 21:21:38	Submitted an iteration	\N	\N	f
56	29	ruby	hello-world	1	\N	56115923ba7c23b775cfc49d	2016-06-27 19:03:09	2016-06-27 19:03:09	f	2016-07-12 21:56:16	2016-07-12 21:56:16	@rikki- commented	\N	\N	f
57	29	elixir	acronym	3	\N	4be3f1fa30665920f3f82863	2016-06-30 18:11:00	2016-06-30 18:11:00	f	2016-07-27 00:59:41	2016-07-27 00:59:41	Submitted an iteration	2016-02-18 03:40:58.240719	\N	f
58	29	ruby	robot-name	1	\N	3ee605b33f9fc28e6f56446d	2016-07-08 02:13:45	2016-07-08 02:13:45	f	2016-07-23 12:50:29	2016-07-23 12:50:29	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N	f
59	31	csharp	bob	1	pending	a54e788a60cb0094ec596980	2016-07-27 11:47:29	2016-07-27 11:47:29	f	2016-07-27 16:14:35	2016-07-27 16:14:35	Submitted an iteration	\N	\N	f
60	33	ruby	rna-transcription	2	done	bec440ea1221845bc1fdcb36	2016-07-02 00:43:50	2016-07-02 00:43:50	t	2016-07-25 23:34:19	2016-07-25 23:34:19	Submitted an iteration	\N	\N	f
61	33	ruby	hamming	3	pending	77d28ce3fc5a34f6a8af8214	2016-06-26 09:54:21	2016-06-26 09:54:21	f	2016-08-02 03:10:17	2016-08-02 03:10:17	Submitted an iteration	\N	\N	f
62	33	erlang	sum-of-multiples	1	needs_input	903ddd3c54693e58c77eddf7	2016-07-28 09:29:59	2016-07-28 09:29:59	f	2016-07-31 11:13:44	2016-07-31 11:13:44	Submitted an iteration	\N	\N	f
63	33	ruby	bob	3	done	6d2450577d508308a73c1254	2016-06-21 04:26:16	2016-06-21 04:26:16	f	2016-07-19 04:34:49	2016-07-19 04:34:49	@alphaone commented	\N	\N	f
64	33	javascript	leap	2	\N	04802138cabe828c55d415c8	2016-07-18 11:27:57	2016-07-18 11:27:57	f	2016-08-04 15:37:13	2016-08-04 15:37:13	Submitted an iteration	2015-11-22 04:00:23.788826	\N	f
65	38	swift	leap	1	pending	8ea7267ff54871ba49f7dca3	2016-08-09 01:05:21	2016-08-09 01:05:21	f	2016-08-11 07:30:48	2016-08-11 07:30:48	Submitted an iteration	\N	\N	f
66	38	haskell	triangle	1	done	e306d4b214e8a9f8682e4d0e	2016-08-02 08:08:12	2016-08-02 08:08:12	t	2016-08-03 11:11:36	2016-08-03 11:11:36	Submitted an iteration	\N	\N	f
67	38	ruby	beer-song	5	done	13065c84b2e669c16dfe49e1	2016-08-03 02:10:51	2016-08-03 02:10:51	t	2016-08-10 08:08:40	2016-08-10 08:08:40	Submitted an iteration	\N	\N	f
68	38	ruby	space-age	1	\N	0b13d4d4234a97f91a6d1365	2016-08-07 00:05:44	2016-08-07 00:05:44	f	2016-08-10 14:18:49	2016-08-10 14:18:49	Submitted an iteration	2015-11-27 23:54:35.745018	\N	f
69	38	javascript	hamming	1	\N	2cdec77c08cc8470336b10c6	2016-08-03 10:31:07	2016-08-03 10:31:07	f	2016-08-07 17:17:11	2016-08-07 17:17:11	Submitted an iteration	2016-03-07 03:50:40.747336	\N	f
70	38	ruby	leap	1	done	0b2ba536ed52114f018d4798	2016-08-07 10:17:28	2016-08-07 10:17:28	t	2016-08-11 07:34:24	2016-08-11 07:34:24	Submitted an iteration	\N	\N	f
71	38	elixir	bob	1	\N	36f3befbcd26cbe69a2dfa0c	2016-08-06 22:18:05	2016-08-06 22:18:05	f	2016-08-09 20:47:19	2016-08-09 20:47:19	Submitted an iteration	\N	\N	f
72	38	javascript	leap	2	\N	bdac6c98287b37ef17538dfe	2016-08-07 21:53:19	2016-08-07 21:53:19	f	2016-08-11 04:33:57	2016-08-11 04:33:57	Submitted an iteration	2015-11-22 04:00:23.788826	\N	f
73	38	go	difference-of-squares	1	pending	9a580e9782ef3e7705126711	2016-08-06 07:48:56	2016-08-06 07:48:56	t	2016-08-08 22:50:27	2016-08-08 22:50:27	Submitted an iteration	\N	\N	f
74	38	haskell	house	2	done	bb5e71ac40c87958bb1219bd	2016-08-02 11:41:20	2016-08-02 11:41:20	t	2016-08-06 10:54:14	2016-08-06 10:54:14	Submitted an iteration	\N	\N	f
90	38	elixir	acronym	3	\N	2c058369823e26d5cf747f9d	2016-08-03 02:41:23	2016-08-03 02:41:23	t	2016-08-08 02:50:34	2016-08-08 02:50:34	Submitted an iteration	2016-02-18 03:40:58.240719	\N	f
75	38	racket	grep	4	\N	598393c5ca909d3d457a2653	2016-08-05 05:30:02	2016-08-05 05:30:02	t	2016-08-10 01:42:13	2016-08-10 01:42:13	Submitted an iteration	2015-12-20 16:21:45.7272	\N	f
76	38	ruby	matrix	1	pending	f4f48fc8eae9566356de99a4	2016-08-04 08:24:59	2016-08-04 08:24:59	f	2016-08-06 09:25:34	2016-08-06 09:25:34	Submitted an iteration	\N	\N	f
77	38	python	hamming	2	needs_input	cf5b409b3bfdce3fea894c42	2016-08-02 17:02:07	2016-08-02 17:02:07	f	2016-08-05 23:31:29	2016-08-05 23:31:29	Submitted an iteration	\N	\N	f
78	38	python	atbash-cipher	1	\N	a70a7bf5b1d43a748f3acf97	2016-08-03 22:35:56	2016-08-03 22:35:56	f	2016-08-08 02:35:03	2016-08-08 02:35:03	Submitted an iteration	\N	\N	f
79	38	clojure	space-age	1	\N	a4d3fdf46147fe70d6278572	2016-08-06 15:10:31	2016-08-06 15:10:31	t	2016-08-09 15:40:36	2016-08-09 15:40:36	Submitted an iteration	2015-10-31 05:36:03.530808	\N	f
80	38	coffeescript	hello-world	1	\N	3564cb311dc753d58503734a	2016-08-09 09:17:06	2016-08-09 09:17:06	f	2016-08-09 13:33:23	2016-08-09 13:33:23	Submitted an iteration	\N	\N	f
81	38	cpp	hamming	2	hibernating	824bc9d43e78cfed2b332596	2016-08-05 11:39:10	2016-08-05 11:39:10	f	2016-08-08 10:40:31	2016-08-08 10:40:31	@LegalizeAdulthood commented	\N	\N	f
82	38	clojure	word-count	2	done	18ff50f69e7276b6223a3746	2016-08-02 19:19:03	2016-08-02 19:19:03	t	2016-08-06 14:18:24	2016-08-06 14:18:24	Submitted an iteration	\N	\N	f
83	38	ruby	word-count	4	done	da405e6b8191066637396bf1	2016-08-04 17:56:32	2016-08-04 17:56:32	t	2016-08-09 22:24:28	2016-08-09 22:24:28	Submitted an iteration	\N	\N	f
84	38	ocaml	bob	1	pending	2189093ad7a80886ea06ab79	2016-08-07 02:35:21	2016-08-07 02:35:21	f	2016-08-08 13:05:24	2016-08-08 13:05:24	Submitted an iteration	\N	\N	f
85	38	ecmascript	hello-world	1	\N	b5b0f1581181caccf9921b37	2016-08-04 00:58:46	2016-08-04 00:58:46	f	2016-08-10 02:13:59	2016-08-10 02:13:59	@rikki- commented	\N	\N	f
86	38	python	accumulate	1	pending	52c584a5ed08a93def90a59b	2016-08-03 21:58:25	2016-08-03 21:58:25	f	2016-08-07 09:19:13	2016-08-07 09:19:13	Submitted an iteration	\N	\N	f
87	38	haskell	nucleotide-count	5	hibernating	72f4489fafb27243a300c80c	2016-08-03 06:19:59	2016-08-03 06:19:59	f	2016-08-11 03:41:34	2016-08-11 03:41:34	Submitted an iteration	\N	\N	f
88	38	csharp	leap	1	done	f1e9dea39df5976bb81069bb	2016-08-06 20:48:19	2016-08-06 20:48:19	t	2016-08-09 12:01:19	2016-08-09 12:01:19	Submitted an iteration	\N	\N	f
89	38	haskell	clock	1	\N	8e4afcd1f15fbe0b0a18a04c	2016-08-04 16:06:41	2016-08-04 16:06:41	f	2016-08-06 14:25:23	2016-08-06 14:25:23	Submitted an iteration	\N	\N	f
91	38	go	luhn	1	pending	b7d509fc7ea3f435f6f25b6a	2016-08-07 09:59:00	2016-08-07 09:59:00	t	2016-08-09 13:22:32	2016-08-09 13:22:32	Submitted an iteration	\N	\N	f
92	38	javascript	palindrome-products	1	pending	418cb59f7a659638736ae9bc	2016-08-04 14:17:12	2016-08-04 14:17:12	f	2016-08-09 09:23:43	2016-08-09 09:23:43	Submitted an iteration	\N	\N	f
93	38	clojure	rna-transcription	2	pending	5f04aabf076be7c53d9aa302	2016-08-06 17:23:09	2016-08-06 17:23:09	t	2016-08-09 23:15:44	2016-08-09 23:15:44	Submitted an iteration	\N	\N	f
94	38	haskell	difference-of-squares	3	done	c3cef241c0cbaf2dd7f7ddad	2016-08-03 23:42:08	2016-08-03 23:42:08	t	2016-08-10 09:00:51	2016-08-10 09:00:51	Submitted an iteration	\N	\N	f
95	38	haskell	anagram	1	\N	e33b420ac978ee9064789b83	2016-08-06 00:06:25	2016-08-06 00:06:25	f	2016-08-07 12:33:37	2016-08-07 12:33:37	Submitted an iteration	2016-02-24 22:38:08.929469	\N	f
96	38	javascript	word-count	5	done	a36025cb4aa3bf18a8835768	2016-08-04 17:06:28	2016-08-04 17:06:28	t	2016-08-11 03:23:39	2016-08-11 03:23:39	Submitted an iteration	\N	\N	f
97	38	go	triangle	1	pending	72fa9c5e999d322dd8fa289b	2016-08-06 22:23:16	2016-08-06 22:23:16	f	2016-08-08 09:19:42	2016-08-08 09:19:42	Submitted an iteration	\N	\N	f
98	38	php	difference-of-squares	1	\N	7093d981cf5214a5105d4f29	2016-08-04 15:21:51	2016-08-04 15:21:51	f	2016-08-09 05:00:01	2016-08-09 05:00:01	Submitted an iteration	\N	\N	f
99	38	python	run-length-encoding	2	\N	fc1890c3ef96db1a383ca83a	2016-08-04 19:26:16	2016-08-04 19:26:16	f	2016-08-07 16:18:46	2016-08-07 16:18:46	@joce commented	2016-02-29 19:14:55.785215	\N	f
100	38	python	word-count	1	pending	78807fe4bd7b8454e8a5ac2b	2016-08-03 07:22:07	2016-08-03 07:22:07	t	2016-08-05 03:26:33	2016-08-05 03:26:33	Submitted an iteration	\N	\N	f
101	38	javascript	sieve	1	\N	9a81ed010efa43ecd9daa824	2016-08-03 22:37:28	2016-08-03 22:37:28	f	2016-08-08 09:50:18	2016-08-08 09:50:18	Submitted an iteration	2016-01-03 10:13:51.462945	\N	f
102	38	scala	bob	3	\N	f59af281742b24b52411b2a2	2016-08-04 05:26:48	2016-08-04 05:26:48	f	2016-08-11 02:31:23	2016-08-11 02:31:23	@abo64 commented	2015-10-30 21:19:32.125119	\N	f
103	40	python	difference-of-squares	1	\N	1494284df61cc638dc210339	2016-07-17 21:22:20	2016-07-17 21:22:20	t	2016-08-06 03:36:03	2016-08-06 03:36:03	Submitted an iteration	\N	\N	f
104	44	python	difference-of-squares	1	\N	5c1c291a5bf1416b6df26b71	2016-04-28 01:27:22	2016-04-28 01:27:22	f	2016-07-27 01:12:27	2016-07-27 01:12:27	Submitted an iteration	\N	\N	f
105	44	perl5	etl	1	pending	b460626817b499cd0b360d71	2016-05-04 12:33:09	2016-05-04 12:33:09	f	2016-07-06 20:40:41	2016-07-06 20:40:41	Submitted an iteration	\N	\N	f
106	44	python	sublist	1	\N	66b1e201c23f5cb8d32db5f0	2016-07-16 17:06:58	2016-07-16 17:06:58	f	2016-08-03 16:57:06	2016-08-03 16:57:06	Submitted an iteration	2015-10-05 00:10:29.073456	\N	f
107	46	python	kindergarten-garden	1	\N	edb4cdc9139e207e634259a2	2016-01-15 19:00:30	2016-01-15 19:00:30	f	2016-04-15 09:53:31	2016-04-15 09:53:31	Submitted an iteration	\N	\N	f
108	46	javascript	beer-song	1	pending	e9ae02ab273b55261d1ed642	2016-01-09 09:19:52	2016-01-09 09:19:52	f	2016-01-26 20:01:36	2016-01-26 20:01:36	Submitted an iteration	\N	\N	f
109	46	elixir	zipper	1	\N	a823feac53b0aa8e3df6a677	2016-02-24 09:19:52	2016-02-24 09:19:52	f	2016-05-11 22:35:19	2016-05-11 22:35:19	Submitted an iteration	2016-02-02 19:48:36.697088	\N	f
110	46	python	pangram	1	\N	314daee11a5a2ac0f74bc7da	2015-12-30 08:23:07	2015-12-30 08:23:07	f	2016-02-13 00:44:52	2016-02-13 00:44:52	Submitted an iteration	2016-02-23 17:52:48.717925	\N	f
111	46	clojure	prime-factors	1	pending	720c45425ee6da36dd9fea7f	2016-02-08 15:22:28	2016-02-08 15:22:28	f	2016-05-28 14:35:31	2016-05-28 14:35:31	Submitted an iteration	\N	\N	f
112	46	javascript	hello-world	1	done	0ba0570c45139c60d55b8b21	2016-02-27 16:56:39	2016-02-27 16:56:39	t	2016-04-06 20:01:00	2016-04-06 20:01:00	Submitted an iteration	\N	\N	f
113	46	javascript	bob	1	\N	2f692360fda351789f89313e	2016-05-31 15:32:15	2016-05-31 15:32:15	f	2016-06-26 19:01:21	2016-06-26 19:01:21	Submitted an iteration	\N	\N	f
114	46	rust	anagram	4	done	a14012886a812a3f9b011f4d	2016-03-19 23:16:19	2016-03-19 23:16:19	t	2016-06-07 12:21:55	2016-06-07 12:21:55	Submitted an iteration	\N	\N	f
115	46	scheme	grains	1	\N	8946a5da9c0e307a8e8fa857	2016-02-04 18:44:49	2016-02-04 18:44:49	t	2016-04-18 02:18:45	2016-04-18 02:18:45	@nebkor commented	2015-11-11 20:53:15.289957	\N	f
116	46	scala	leap	1	done	7922bc15ebdfa1d321ca57c2	2016-05-24 11:35:07	2016-05-24 11:35:07	t	2016-07-07 18:01:51	2016-07-07 18:01:51	Submitted an iteration	\N	\N	f
117	46	cpp	hamming	2	hibernating	327f95f3e6d6bf258b67aba1	2016-02-21 20:16:32	2016-02-21 20:16:32	f	2016-07-23 01:43:27	2016-07-23 01:43:27	@LegalizeAdulthood commented	\N	\N	f
118	46	javascript	space-age	1	pending	2ecefd50a85f726a3bf3fcfc	2016-04-18 06:21:14	2016-04-18 06:21:14	f	2016-07-17 04:03:14	2016-07-17 04:03:14	Submitted an iteration	\N	\N	f
119	46	clojure	atbash-cipher	1	pending	de5d2c81a7287ec2b9c72c9c	2016-01-09 06:15:48	2016-01-09 06:15:48	t	2016-07-23 08:47:40	2016-07-23 08:47:40	Submitted an iteration	\N	\N	f
120	46	ruby	raindrops	1	pending	b093336518e8c9d9d09ebb2e	2016-01-14 20:04:38	2016-01-14 20:04:38	f	2016-03-04 19:07:49	2016-03-04 19:07:49	Submitted an iteration	\N	\N	f
121	46	javascript	hamming	1	done	b93e192f46e84c60b95f8e9e	2016-04-14 12:11:00	2016-04-14 12:11:00	t	2016-07-16 16:17:51	2016-07-16 16:17:51	Submitted an iteration	\N	\N	f
122	46	go	grains	1	\N	0b0150b953810623f65be8db	2016-04-23 07:37:49	2016-04-23 07:37:49	f	2016-06-24 10:32:59	2016-06-24 10:32:59	@robreiss commented	\N	\N	f
123	46	python	hamming	1	pending	5a3ed32b8401b4f9bc90aff7	2016-03-02 21:42:12	2016-03-02 21:42:12	f	2016-04-25 19:27:28	2016-04-25 19:27:28	Submitted an iteration	\N	\N	f
124	46	go	gigasecond	2	pending	1094bf1d8385a7bdb79d50a4	2016-01-08 11:09:35	2016-01-08 11:09:35	f	2016-02-19 23:31:09	2016-02-19 23:31:09	Submitted an iteration	\N	\N	f
125	46	haskell	space-age	1	\N	f82e81b541f33fb368d5bb0f	2016-04-03 15:40:28	2016-04-03 15:40:28	f	2016-05-14 18:11:19	2016-05-14 18:11:19	Submitted an iteration	\N	\N	f
126	46	python	word-count	1	pending	738bb09bcdb7224706053165	2016-01-02 02:57:14	2016-01-02 02:57:14	t	2016-01-04 22:11:16	2016-01-04 22:11:16	Submitted an iteration	\N	\N	f
127	46	racket	grep	4	\N	85cd70052cce24f35c36796a	2016-01-23 01:06:11	2016-01-23 01:06:11	t	2016-06-27 11:34:28	2016-06-27 11:34:28	Submitted an iteration	2015-12-20 16:21:45.7272	\N	f
128	46	csharp	leap	2	done	a5780bd062e0a137e833cd8a	2016-02-01 04:22:57	2016-02-01 04:22:57	t	2016-03-26 03:57:38	2016-03-26 03:57:38	Submitted an iteration	\N	\N	f
129	46	erlang	etl	1	\N	2141df92be5c89fa51e45d7c	2016-01-13 14:42:59	2016-01-13 14:42:59	f	2016-05-23 10:12:21	2016-05-23 10:12:21	Submitted an iteration	2016-01-17 22:01:13.798537	\N	f
130	46	ruby	leap	1	done	00e248d7e7cd05d668737bff	2016-04-03 20:21:46	2016-04-03 20:21:46	t	2016-04-16 04:09:17	2016-04-16 04:09:17	Submitted an iteration	\N	\N	f
131	46	javascript	gigasecond	1	pending	85aeda805f4616f5984ad3a2	2016-01-06 19:37:52	2016-01-06 19:37:52	t	2016-04-13 02:03:23	2016-04-13 02:03:23	Submitted an iteration	\N	\N	f
132	46	go	triangle	1	pending	f982492c79ace8d6be3733e4	2016-01-02 16:34:17	2016-01-02 16:34:17	t	2016-04-13 23:51:21	2016-04-13 23:51:21	Submitted an iteration	\N	\N	f
133	46	haskell	nucleotide-count	5	hibernating	ca12d1c3484500c4aac76448	2016-02-21 16:18:42	2016-02-21 16:18:42	f	2016-07-22 15:38:17	2016-07-22 15:38:17	Submitted an iteration	\N	\N	f
134	46	python	allergies	1	done	aa1e952ae6f3f545affcee0e	2016-03-08 18:08:24	2016-03-08 18:08:24	t	2016-07-13 17:55:27	2016-07-13 17:55:27	Submitted an iteration	\N	\N	f
135	46	csharp	bob	2	\N	6f7df5302b1dedbe78b26233	2016-01-28 12:05:26	2016-01-28 12:05:26	f	2016-07-02 10:34:32	2016-07-02 10:34:32	Submitted an iteration	2016-01-18 19:14:24.682736	\N	f
136	46	erlang	rna-transcription	1	pending	7ecdeb85caef2cd1e3faaf60	2016-06-06 02:08:42	2016-06-06 02:08:42	t	2016-08-03 18:46:39	2016-08-03 18:46:39	@NobbZ commented	\N	\N	f
137	46	perl5	bob	1	hibernating	615731e45df1bc817e717bc8	2016-02-08 01:48:36	2016-02-08 01:48:36	f	2016-05-01 07:29:27	2016-05-01 07:29:27	Submitted an iteration	\N	\N	f
138	46	scala	difference-of-squares	2	\N	517e6436e2aea76a0e777d0d	2016-03-23 21:44:21	2016-03-23 21:44:21	f	2016-08-02 16:28:55	2016-08-02 16:28:55	@szafirov commented	2015-12-21 11:54:49.34367	\N	f
139	46	ruby	binary-search-tree	2	pending	d42ba5554d056f1fe2005a5c	2016-02-08 22:01:48	2016-02-08 22:01:48	t	2016-07-26 17:21:13	2016-07-26 17:21:13	Submitted an iteration	\N	\N	f
140	46	ruby	word-count	4	done	3e22b93a8490969a7801ab10	2016-01-27 20:47:32	2016-01-27 20:47:32	t	2016-07-27 04:50:01	2016-07-27 04:50:01	Submitted an iteration	\N	\N	f
143	48	scala	bob	1	\N	694a6516843fd75a8fe0dd92	2016-05-29 08:36:39	2016-05-29 08:36:39	f	2016-07-16 03:43:29	2016-07-16 03:43:29	@abo64 commented	2015-11-10 19:40:13.714934	\N	f
144	48	python	crypto-square	2	pending	fd83e3d10f261c7cde9c9ad6	2016-06-03 12:09:04	2016-06-03 12:09:04	f	2016-08-05 05:29:07	2016-08-05 05:29:07	Submitted an iteration	\N	\N	f
145	48	haskell	bob	2	pending	4a843b3993743c459057ecf8	2016-06-03 17:18:16	2016-06-03 17:18:16	f	2016-07-22 03:20:53	2016-07-22 03:20:53	Submitted an iteration	\N	\N	f
146	48	ecmascript	hello-world	1	\N	46ca00b54472e66a6223b2a1	2016-04-27 01:12:20	2016-04-27 01:12:20	f	2016-07-03 09:23:20	2016-07-03 09:23:20	@rikki- commented	\N	\N	f
147	49	clojure	rna-transcription	1	pending	282a1632f4a09a1e912c8f05	2016-07-22 05:38:42	2016-07-22 05:38:42	t	2016-08-08 09:38:49	2016-08-08 09:38:49	Submitted an iteration	\N	\N	f
148	49	javascript	bob	1	done	d53f7808224aedc60916e562	2016-07-07 20:17:14	2016-07-07 20:17:14	t	2016-07-13 16:12:21	2016-07-13 16:12:21	Submitted an iteration	\N	\N	f
149	49	ruby	space-age	1	pending	0bde40d2274cd74a06e70b6d	2016-07-28 16:31:21	2016-07-28 16:31:21	f	2016-08-06 22:54:26	2016-08-06 22:54:26	Submitted an iteration	\N	\N	f
150	49	coffeescript	nth-prime	2	done	45adb34cedd50e6f190ffd39	2016-06-11 07:31:11	2016-06-11 07:31:11	t	2016-08-04 10:53:55	2016-08-04 10:53:55	Submitted an iteration	\N	\N	f
151	49	javascript	robot-simulator	1	done	d44c07b5e98a3a0104b20eda	2016-05-27 19:47:29	2016-05-27 19:47:29	t	2016-06-08 11:16:26	2016-06-08 11:16:26	Submitted an iteration	\N	\N	f
152	49	ruby	difference-of-squares	1	hibernating	8ed6821815fe81bab7ade518	2016-06-18 07:39:40	2016-06-18 07:39:40	f	2016-06-23 09:37:57	2016-06-23 09:37:57	Submitted an iteration	\N	\N	f
153	26	ruby	series	1	pending	2c85c5b2e07e75583c01eaba	2016-05-03 14:24:26	2016-05-03 14:24:26	f	2016-08-01 21:54:17	2016-08-01 21:54:17	Submitted an iteration	\N	\N	f
154	26	ruby	roman-numerals	1	\N	7699df4c32e8e5aa193195ad	2016-07-09 10:22:20	2016-07-09 10:22:20	f	2016-07-14 07:31:13	2016-07-14 07:31:13	@jmodjeska commented	2015-10-26 04:23:38.835115	\N	f
155	26	ruby	rna-transcription	1	pending	8e07418581446283e5f13e4b	2016-06-07 15:00:27	2016-06-07 15:00:27	t	2016-07-22 07:33:56	2016-07-22 07:33:56	Submitted an iteration	\N	\N	f
156	26	go	pythagorean-triplet	1	\N	8928094c76b21dbb7d914910	2016-02-28 20:24:39	2016-02-28 20:24:39	f	2016-07-29 23:20:23	2016-07-29 23:20:23	Submitted an iteration	2016-02-16 14:29:29.667566	\N	f
157	26	ruby	difference-of-squares	1	hibernating	c6213de38735582cad6a05af	2016-04-16 12:05:35	2016-04-16 12:05:35	f	2016-05-22 00:24:03	2016-05-22 00:24:03	Submitted an iteration	\N	\N	f
158	26	elixir	bob	1	\N	e67b0913675a1cfb0babbb74	2016-02-20 06:53:16	2016-02-20 06:53:16	f	2016-03-08 17:33:43	2016-03-08 17:33:43	Submitted an iteration	2016-02-04 06:02:09.346674	\N	f
159	26	javascript	beer-song	1	pending	dddd0e5efba8797de54df5ed	2016-06-30 14:14:30	2016-06-30 14:14:30	f	2016-07-07 11:24:46	2016-07-07 11:24:46	Submitted an iteration	\N	\N	f
160	7	ruby	binary	1	\N	aeef5b1eb4159d976587a601	2016-07-05 00:05:57	2016-07-05 00:05:57	f	2016-07-20 01:56:08	2016-07-20 01:56:08	@Calvyn82 commented	\N	\N	f
161	23	ruby	accumulate	2	hibernating	71d491295348d1d05ec82823	2016-03-28 20:48:44	2016-03-28 20:48:44	f	2016-05-28 17:04:31	2016-05-28 17:04:31	Submitted an iteration	\N	\N	f
162	23	haskell	bob	2	done	42b2eaeffe5d449e5aade868	2016-04-03 03:43:53	2016-04-03 03:43:53	t	2016-07-12 23:22:17	2016-07-12 23:22:17	Submitted an iteration	\N	\N	f
163	17	ruby	bob	2	pending	52f1e10a9ad825dd6cee1426	2016-04-21 17:24:38	2016-04-21 17:24:38	f	2016-06-30 09:23:04	2016-06-30 09:23:04	Submitted an iteration	\N	\N	f
164	17	ruby	robot-name	1	\N	1cf79090990f039256562b90	2016-05-17 11:39:13	2016-05-17 11:39:13	f	2016-05-28 11:58:43	2016-05-28 11:58:43	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N	f
165	17	clojure	rna-transcription	1	pending	e0e0cbba51fae097ad548c1a	2016-05-25 13:39:18	2016-05-25 13:39:18	t	2016-08-10 13:57:05	2016-08-10 13:57:05	Submitted an iteration	\N	\N	f
166	17	perl5	bob	1	\N	2a92094a26ae531f99818f14	2016-05-28 15:13:00	2016-05-28 15:13:00	f	2016-07-18 09:21:31	2016-07-18 09:21:31	@lancew commented	\N	\N	f
167	17	ruby	nth-prime	1	\N	7b203296772658739016d9c0	2016-05-03 12:34:45	2016-05-03 12:34:45	t	2016-08-01 12:45:25	2016-08-01 12:45:25	Submitted an iteration	2016-02-12 00:12:56.146135	\N	f
168	20	haskell	accumulate	2	\N	2bb0729f6b82c66502516e98	2016-07-20 11:38:46	2016-07-20 11:38:46	f	2016-07-30 22:30:27	2016-07-30 22:30:27	Submitted an iteration	\N	\N	f
169	21	python	rna-transcription	1	done	de92a06bd3848f2fa93094b1	2016-06-03 14:05:41	2016-06-03 14:05:41	t	2016-06-16 02:21:18	2016-06-16 02:21:18	Submitted an iteration	\N	\N	f
170	21	ruby	raindrops	1	\N	bd0ef05b9c51622f45423271	2016-05-14 19:58:58	2016-05-14 19:58:58	f	2016-06-06 04:18:58	2016-06-06 04:18:58	Submitted an iteration	2016-01-27 13:38:34.211684	\N	f
171	21	python	gigasecond	1	\N	4defce78b51d5936bc7c1b09	2016-07-02 00:29:09	2016-07-02 00:29:09	t	2016-08-07 06:28:03	2016-08-07 06:28:03	Submitted an iteration	2016-02-02 21:45:08.556564	\N	f
172	21	python	allergies	1	pending	f9fc3fd32bcb9618164083d0	2016-06-04 04:03:50	2016-06-04 04:03:50	f	2016-06-12 19:14:38	2016-06-12 19:14:38	Submitted an iteration	\N	\N	f
173	21	csharp	word-count	1	done	0fec80aa552a75953e82b84c	2016-05-10 21:23:56	2016-05-10 21:23:56	t	2016-07-11 01:26:14	2016-07-11 01:26:14	Submitted an iteration	\N	\N	f
174	36	go	binary-search-tree	1	pending	03ee696e218c10f49eda0f52	2016-06-01 23:13:28	2016-06-01 23:13:28	t	2016-06-20 22:42:06	2016-06-20 22:42:06	Submitted an iteration	\N	\N	f
175	36	haskell	gigasecond	2	done	d32d6349216dec2455838f95	2016-04-14 22:21:44	2016-04-14 22:21:44	t	2016-07-08 14:38:55	2016-07-08 14:38:55	Submitted an iteration	\N	\N	f
176	30	scala	bob	1	\N	30bfe6875ac01af00329aa7b	2016-04-13 12:21:32	2016-04-13 12:21:32	f	2016-05-20 06:36:01	2016-05-20 06:36:01	@abo64 commented	2015-11-10 19:40:13.714934	\N	f
177	30	ruby	grains	1	pending	f38cf17f6cb9f534bbf05842	2016-03-13 19:32:50	2016-03-13 19:32:50	f	2016-04-21 19:55:34	2016-04-21 19:55:34	Submitted an iteration	\N	\N	f
178	30	clojure	rna-transcription	2	pending	8fc166d8a9003b7fd4cf90a2	2016-04-05 03:25:35	2016-04-05 03:25:35	t	2016-07-20 09:52:30	2016-07-20 09:52:30	Submitted an iteration	\N	\N	f
179	30	python	gigasecond	1	done	424f38f297b07773d5f5c895	2016-07-25 10:39:13	2016-07-25 10:39:13	t	2016-08-01 20:40:14	2016-08-01 20:40:14	Submitted an iteration	\N	\N	f
180	30	python	bob	3	done	f790337e1c866fd3f8fa75c0	2016-04-01 06:51:12	2016-04-01 06:51:12	t	2016-06-17 15:28:44	2016-06-17 15:28:44	Submitted an iteration	\N	\N	f
181	30	python	word-count	3	done	1125e105ceada76786790a76	2016-03-03 11:44:41	2016-03-03 11:44:41	t	2016-07-27 02:30:01	2016-07-27 02:30:01	Submitted an iteration	\N	\N	f
182	30	javascript	etl	2	pending	497e5aff954bb53c52179aef	2016-03-13 11:08:58	2016-03-13 11:08:58	f	2016-04-20 18:44:00	2016-04-20 18:44:00	Submitted an iteration	\N	\N	f
183	30	go	grains	1	\N	8ebb3159ffd011f32aa792a9	2016-04-30 23:54:13	2016-04-30 23:54:13	f	2016-07-07 12:46:35	2016-07-07 12:46:35	@robreiss commented	\N	\N	f
184	30	ruby	series	1	pending	7c0af16c5a2d89c0abea9577	2016-06-16 07:34:33	2016-06-16 07:34:33	f	2016-07-25 16:21:45	2016-07-25 16:21:45	Submitted an iteration	\N	\N	f
185	30	ruby	say	1	\N	af9e51d8afbf69369c23550a	2016-05-09 00:21:19	2016-05-09 00:21:19	f	2016-07-30 15:32:20	2016-07-30 15:32:20	Submitted an iteration	2015-12-22 14:58:27.530567	\N	f
186	30	ruby	phone-number	3	hibernating	8253c61103cd9589c232d251	2016-03-23 13:56:08	2016-03-23 13:56:08	f	2016-07-27 01:01:08	2016-07-27 01:01:08	Submitted an iteration	\N	\N	f
187	30	javascript	bob	1	pending	3d5057f0bfacf68462769cac	2016-05-06 13:58:14	2016-05-06 13:58:14	f	2016-06-30 19:30:30	2016-06-30 19:30:30	Submitted an iteration	\N	\N	f
188	30	elixir	hello-world	1	\N	a4f667cc1bc60eed3f2a42e5	2016-03-21 20:10:47	2016-03-21 20:10:47	f	2016-06-07 16:42:54	2016-06-07 16:42:54	@rikki- commented	\N	\N	f
189	30	go	gigasecond	2	pending	1d1fc096229ddb7d37119975	2016-03-19 18:42:57	2016-03-19 18:42:57	f	2016-06-25 15:04:50	2016-06-25 15:04:50	Submitted an iteration	\N	\N	f
190	30	ruby	hamming	1	pending	ac09aad689bad6cb2bc69998	2016-05-02 20:19:12	2016-05-02 20:19:12	f	2016-05-25 12:44:13	2016-05-25 12:44:13	Submitted an iteration	\N	\N	f
231	41	ruby	binary	1	\N	bc5d61db2faf079e0d38eebd	2016-02-28 21:17:14	2016-02-28 21:17:14	f	2016-06-02 16:38:19	2016-06-02 16:38:19	@Calvyn82 commented	\N	\N	f
191	30	haskell	house	2	done	fa4df6f5a367592a485203b2	2016-04-02 02:14:43	2016-04-02 02:14:43	t	2016-07-31 07:26:22	2016-07-31 07:26:22	Submitted an iteration	\N	\N	f
192	30	ruby	bob	1	hibernating	c63c20e421a424829c3cfe8b	2016-03-12 09:37:58	2016-03-12 09:37:58	f	2016-03-25 22:13:43	2016-03-25 22:13:43	Submitted an iteration	\N	\N	f
193	30	python	hamming	1	\N	f7474b9aaba340e554516160	2016-04-01 16:18:00	2016-04-01 16:18:00	t	2016-07-24 19:42:02	2016-07-24 19:42:02	Submitted an iteration	2016-02-24 15:41:26.173657	\N	f
194	30	javascript	hello-world	1	pending	ee56e5c7d0ebd6338b312411	2016-04-02 14:52:31	2016-04-02 14:52:31	f	2016-05-05 04:03:02	2016-05-05 04:03:02	Submitted an iteration	\N	\N	f
195	30	javascript	word-count	1	hibernating	19d77543209f7ddbddac64bc	2016-04-10 06:45:48	2016-04-10 06:45:48	f	2016-05-28 03:10:20	2016-05-28 03:10:20	Submitted an iteration	\N	\N	f
196	30	python	etl	2	hibernating	330a1b5fb7a8e0b5d2c3ccc9	2016-03-20 16:21:20	2016-03-20 16:21:20	f	2016-07-10 12:42:46	2016-07-10 12:42:46	Submitted an iteration	\N	\N	f
197	30	ruby	raindrops	1	pending	d65d23b3b3ce14d85d0583c6	2016-04-24 10:13:14	2016-04-24 10:13:14	t	2016-06-07 15:42:53	2016-06-07 15:42:53	Submitted an iteration	\N	\N	f
198	30	clojure	beer-song	5	pending	424fe29860a9e0b90cd03d9d	2016-05-21 22:57:11	2016-05-21 22:57:11	f	2016-08-08 18:09:47	2016-08-08 18:09:47	Submitted an iteration	\N	\N	f
199	30	javascript	food-chain	1	pending	f97cfb6af1b30a5cde79f448	2016-06-12 16:00:03	2016-06-12 16:00:03	f	2016-06-30 11:43:35	2016-06-30 11:43:35	Submitted an iteration	\N	\N	f
200	35	haskell	nth-prime	1	\N	bb572ad8bdb64e26920cf0f0	2016-03-16 14:03:21	2016-03-16 14:03:21	f	2016-06-03 16:44:32	2016-06-03 16:44:32	Submitted an iteration	\N	\N	f
201	35	haskell	word-count	2	hibernating	59e110cc5f6ef05e0ee6b409	2016-06-06 12:02:00	2016-06-06 12:02:00	f	2016-07-31 04:22:48	2016-07-31 04:22:48	Submitted an iteration	\N	\N	f
202	14	scala	hello-world	1	\N	24967f4f1d8adbb75fe6e13d	2016-08-01 19:56:24	2016-08-01 19:56:24	f	2016-08-02 06:29:43	2016-08-02 06:29:43	Submitted an iteration	\N	\N	f
203	41	ruby	hamming	1	\N	a28ec06bfe5602ff831ff248	2016-07-05 16:06:51	2016-07-05 16:06:51	f	2016-07-20 09:17:44	2016-07-20 09:17:44	Submitted an iteration	2015-12-04 19:08:00.598821	\N	f
204	41	ruby	rna-transcription	1	\N	ab58a2a8b0d1c0baa07f735d	2015-12-30 06:58:36	2015-12-30 06:58:36	f	2016-06-01 03:30:14	2016-06-01 03:30:14	Submitted an iteration	2015-11-12 15:21:09.864227	\N	f
205	41	java	etl	1	pending	20fc1cfa657172759f81e94c	2016-02-13 17:17:16	2016-02-13 17:17:16	f	2016-07-06 07:59:29	2016-07-06 07:59:29	Submitted an iteration	\N	\N	f
206	41	java	space-age	1	\N	51aa2383e146ed9c10c52b56	2016-04-04 12:42:19	2016-04-04 12:42:19	f	2016-05-14 07:31:08	2016-05-14 07:31:08	Submitted an iteration	2015-11-15 04:26:52.671156	\N	f
207	41	elixir	hello-world	1	\N	973a0ab61944f69db573f21a	2016-04-16 19:59:24	2016-04-16 19:59:24	f	2016-07-17 03:06:22	2016-07-17 03:06:22	@rikki- commented	\N	\N	f
208	41	python	rna-transcription	1	\N	b58d4f0b7e550f57c5f405f4	2016-01-25 22:25:42	2016-01-25 22:25:42	f	2016-05-24 20:50:00	2016-05-24 20:50:00	@behrtam commented	2015-11-11 00:21:41.953273	\N	f
209	41	javascript	bob	1	done	d36dbbc1e85d277b06fac0bf	2015-12-15 09:59:45	2015-12-15 09:59:45	t	2016-03-18 17:35:57	2016-03-18 17:35:57	Submitted an iteration	\N	\N	f
210	41	javascript	space-age	1	\N	27b4eca9a6d733179810f509	2015-12-23 05:33:07	2015-12-23 05:33:07	f	2016-07-16 08:02:10	2016-07-16 08:02:10	Submitted an iteration	2015-12-23 13:19:53.058891	\N	f
211	41	ruby	phone-number	2	\N	c22c567a902b2e3df8f9492a	2016-02-09 00:31:34	2016-02-09 00:31:34	f	2016-06-11 01:02:55	2016-06-11 01:02:55	@remcopeereboom commented	2015-10-20 21:28:02.688659	\N	f
212	41	python	gigasecond	2	pending	1cac18255b396646b0644f2a	2015-12-25 11:47:10	2015-12-25 11:47:10	f	2016-07-06 01:16:00	2016-07-06 01:16:00	Submitted an iteration	\N	\N	f
213	41	python	hamming	1	\N	643a8624f7e64522b2b8bc92	2016-04-28 01:47:42	2016-04-28 01:47:42	f	2016-05-28 15:27:46	2016-05-28 15:27:46	Submitted an iteration	2016-02-24 15:41:26.173657	\N	f
214	41	ruby	roman-numerals	1	\N	6018be9f35a57c27ab66210d	2016-01-17 15:25:20	2016-01-17 15:25:20	f	2016-04-25 10:47:38	2016-04-25 10:47:38	Submitted an iteration	2016-01-09 00:10:06.335104	\N	f
215	41	ruby	space-age	1	pending	94f4cd6f45a0ecee13d4e01e	2016-05-18 23:47:12	2016-05-18 23:47:12	f	2016-07-08 22:37:16	2016-07-08 22:37:16	Submitted an iteration	\N	\N	f
216	41	javascript	palindrome-products	1	pending	f56a6e447b316fad0442cebb	2016-06-25 06:15:17	2016-06-25 06:15:17	f	2016-07-05 18:46:44	2016-07-05 18:46:44	Submitted an iteration	\N	\N	f
217	41	javascript	etl	2	\N	8910a78db7f39a260260bcc0	2015-12-20 19:08:45	2015-12-20 19:08:45	f	2016-01-21 17:13:25	2016-01-21 17:13:25	Submitted an iteration	2016-02-17 19:53:10.34942	\N	f
218	41	haskell	space-age	1	\N	2c134e7b795ec32ee5065c3b	2016-03-07 13:38:26	2016-03-07 13:38:26	f	2016-06-14 02:06:34	2016-06-14 02:06:34	Submitted an iteration	\N	\N	f
219	41	ruby	strain	2	done	b1bd6dff1369028c3410e26f	2015-12-27 14:32:18	2015-12-27 14:32:18	t	2016-05-22 19:18:41	2016-05-22 19:18:41	Submitted an iteration	\N	\N	f
220	41	javascript	word-count	1	\N	eeff6986cdf8852aca305984	2016-01-22 04:46:00	2016-01-22 04:46:00	f	2016-05-02 14:01:12	2016-05-02 14:01:12	Submitted an iteration	2015-10-29 17:31:11.392916	\N	f
221	41	ruby	word-count	1	done	fd8ec9ec1a76134da2aa5dc3	2015-12-18 10:49:58	2015-12-18 10:49:58	t	2015-12-20 20:28:33	2015-12-20 20:28:33	Submitted an iteration	\N	\N	f
222	41	ruby	robot-name	1	\N	ed929e83ccb22be628451791	2016-02-17 09:02:02	2016-02-17 09:02:02	f	2016-06-06 20:34:17	2016-06-06 20:34:17	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N	f
223	41	scala	hello-world	1	\N	f6290060db6939d6e0a3a6fd	2016-04-15 09:43:11	2016-04-15 09:43:11	f	2016-05-13 00:27:23	2016-05-13 00:27:23	Submitted an iteration	\N	\N	f
224	41	python	ocr-numbers	2	hibernating	84c9936d2f44acd6b4277bb8	2015-12-19 22:01:16	2015-12-19 22:01:16	t	2016-07-25 17:43:40	2016-07-25 17:43:40	Submitted an iteration	\N	\N	f
225	41	go	binary-search-tree	1	pending	e899fe2f8eea8b94af5893e5	2016-06-14 16:29:41	2016-06-14 16:29:41	f	2016-06-26 15:50:05	2016-06-26 15:50:05	Submitted an iteration	\N	\N	f
226	41	javascript	hamming	1	hibernating	69bcee27232643be9203e513	2016-04-22 04:01:50	2016-04-22 04:01:50	f	2016-07-21 12:54:29	2016-07-21 12:54:29	Submitted an iteration	\N	\N	f
227	41	python	run-length-encoding	2	\N	87a7721c32253a984602e86d	2016-03-30 21:39:17	2016-03-30 21:39:17	f	2016-06-29 10:01:25	2016-06-29 10:01:25	@joce commented	2016-02-29 19:14:55.785215	\N	f
228	41	perl5	etl	1	pending	433a63757e201ce6d05dda0d	2016-01-28 22:00:18	2016-01-28 22:00:18	f	2016-03-25 18:04:55	2016-03-25 18:04:55	Submitted an iteration	\N	\N	f
229	41	scala	nucleotide-count	1	hibernating	424be7c4cbd3cba7abf41b5b	2016-01-31 16:48:49	2016-01-31 16:48:49	f	2016-07-11 00:40:51	2016-07-11 00:40:51	Submitted an iteration	\N	\N	f
230	41	clojure	atbash-cipher	1	pending	a7512b44364b477646970619	2016-03-19 17:59:59	2016-03-19 17:59:59	t	2016-06-06 07:12:29	2016-06-06 07:12:29	Submitted an iteration	\N	\N	f
232	41	python	word-count	1	done	9fbe01b10f1021e111cd77dd	2016-02-14 23:50:55	2016-02-14 23:50:55	t	2016-07-14 00:08:22	2016-07-14 00:08:22	Submitted an iteration	\N	\N	f
233	41	haskell	house	2	done	f84b626169359440d4407ad9	2016-03-04 13:49:30	2016-03-04 13:49:30	t	2016-08-10 21:43:14	2016-08-10 21:43:14	Submitted an iteration	\N	\N	f
234	41	ruby	bob	1	hibernating	b415492f869fb6da269b67a8	2016-05-18 06:44:13	2016-05-18 06:44:13	f	2016-08-04 13:20:02	2016-08-04 13:20:02	Submitted an iteration	\N	\N	f
235	41	haskell	anagram	1	\N	ffc89f6b2dc7f5af42156901	2015-12-11 10:34:29	2015-12-11 10:34:29	f	2016-06-14 06:51:10	2016-06-14 06:51:10	Submitted an iteration	2016-02-24 22:38:08.929469	\N	f
236	41	ruby	grains	1	pending	b4135c37ba66a7ab9d8cde4b	2016-06-06 15:44:44	2016-06-06 15:44:44	f	2016-06-08 18:23:26	2016-06-08 18:23:26	Submitted an iteration	\N	\N	f
237	41	javascript	food-chain	1	hibernating	a760bee61ebc9b239fbff96e	2015-12-15 13:10:42	2015-12-15 13:10:42	f	2016-02-16 07:29:09	2016-02-16 07:29:09	Submitted an iteration	\N	\N	f
238	41	cpp	queen-attack	2	hibernating	76c2cb5d31fba9e5cb49ed70	2016-01-29 17:23:32	2016-01-29 17:23:32	f	2016-08-09 21:04:17	2016-08-09 21:04:17	@LegalizeAdulthood commented	\N	\N	f
239	41	haskell	sum-of-multiples	2	done	6fee3fa2ae4821a21c9cdd5d	2016-01-18 00:56:16	2016-01-18 00:56:16	t	2016-04-15 03:45:49	2016-04-15 03:45:49	Submitted an iteration	\N	\N	f
240	41	erlang	rna-transcription	1	pending	5e174466fcca51b3d8ba2fe5	2016-04-05 07:47:21	2016-04-05 07:47:21	t	2016-06-09 17:26:19	2016-06-09 17:26:19	@NobbZ commented	\N	\N	f
241	41	haskell	difference-of-squares	3	done	43ff851062810bdf0d173320	2015-12-21 19:10:09	2015-12-21 19:10:09	t	2016-06-16 18:33:24	2016-06-16 18:33:24	Submitted an iteration	\N	\N	f
242	41	swift	leap	1	pending	700f39c0cd297f09f5bb3d9e	2015-12-18 17:45:24	2015-12-18 17:45:24	f	2015-12-28 13:47:07	2015-12-28 13:47:07	Submitted an iteration	\N	\N	f
243	6	python	hamming	2	needs_input	fda114cd0b5449e73a3aeb1f	2016-03-28 21:23:52	2016-03-28 21:23:52	f	2016-08-10 19:32:11	2016-08-10 19:32:11	Submitted an iteration	\N	\N	f
244	6	cpp	word-count	1	done	d8658e3f3cf2789196828180	2016-02-16 00:06:43	2016-02-16 00:06:43	t	2016-03-02 11:52:11	2016-03-02 11:52:11	Submitted an iteration	\N	\N	f
245	6	coffeescript	nth-prime	2	done	4c875d170a6bdc7947873ec4	2016-03-08 01:39:42	2016-03-08 01:39:42	t	2016-07-31 18:47:10	2016-07-31 18:47:10	Submitted an iteration	\N	\N	f
246	6	javascript	word-count	3	done	68c5fa40867c3784822e01b6	2016-01-17 06:12:46	2016-01-17 06:12:46	t	2016-07-03 13:06:57	2016-07-03 13:06:57	Submitted an iteration	\N	\N	f
247	34	python	gigasecond	2	pending	e3e4d6dd474a8d66b02c543d	2016-02-27 09:20:18	2016-02-27 09:20:18	f	2016-07-26 21:36:56	2016-07-26 21:36:56	Submitted an iteration	\N	\N	f
248	34	php	difference-of-squares	1	\N	eafbdcf9d1691b6288661e10	2016-04-21 11:23:13	2016-04-21 11:23:13	f	2016-06-09 16:00:56	2016-06-09 16:00:56	Submitted an iteration	\N	\N	f
249	34	ruby	phone-number	1	pending	ee5fb203a7f2df9f61ead540	2016-06-22 08:56:30	2016-06-22 08:56:30	f	2016-07-01 08:41:28	2016-07-01 08:41:28	Submitted an iteration	\N	\N	f
250	34	javascript	grade-school	1	pending	3b6103de78ddd0cda7654835	2016-03-06 07:22:44	2016-03-06 07:22:44	f	2016-05-28 13:32:35	2016-05-28 13:32:35	Submitted an iteration	\N	\N	f
251	16	ruby	nth-prime	1	pending	81abf1234521a964fcb0632d	2016-02-08 13:06:45	2016-02-08 13:06:45	f	2016-02-17 13:25:39	2016-02-17 13:25:39	Submitted an iteration	\N	\N	f
252	16	scala	bob	1	\N	e11bc9ee50303272a3b41804	2016-01-20 06:06:39	2016-01-20 06:06:39	f	2016-04-07 06:42:20	2016-04-07 06:42:20	@abo64 commented	2015-11-10 19:40:13.714934	\N	f
253	16	python	sublist	1	\N	a1922bbd6cba20bbd0056280	2016-07-21 07:06:46	2016-07-21 07:06:46	f	2016-07-28 02:42:07	2016-07-28 02:42:07	Submitted an iteration	2015-10-05 00:10:29.073456	\N	f
254	16	javascript	word-count	1	hibernating	d487fa974d704c79eec306d8	2016-01-15 23:19:07	2016-01-15 23:19:07	f	2016-06-09 17:23:20	2016-06-09 17:23:20	Submitted an iteration	\N	\N	f
255	16	clojure	beer-song	5	pending	f4df139b771c37b10b627956	2015-12-30 14:22:53	2015-12-30 14:22:53	f	2016-05-22 02:43:08	2016-05-22 02:43:08	Submitted an iteration	\N	\N	f
256	16	javascript	raindrops	1	\N	b176be0027debcf85a875a67	2016-01-01 02:06:38	2016-01-01 02:06:38	f	2016-06-27 14:03:56	2016-06-27 14:03:56	Submitted an iteration	\N	\N	f
257	16	ruby	binary-search-tree	2	pending	e1336c0cbdbe227991fe4b1e	2016-01-18 01:59:04	2016-01-18 01:59:04	f	2016-07-10 12:19:23	2016-07-10 12:19:23	Submitted an iteration	\N	\N	f
258	18	ruby	hamming	1	\N	12922e635f6150ce50bf9e3a	2016-06-13 10:34:52	2016-06-13 10:34:52	f	2016-06-16 04:03:25	2016-06-16 04:03:25	Submitted an iteration	2015-12-04 19:08:00.598821	\N	f
259	18	ruby	nth-prime	1	\N	0a568b315dadcc6215bdd92e	2016-05-04 03:16:49	2016-05-04 03:16:49	t	2016-06-05 22:50:49	2016-06-05 22:50:49	Submitted an iteration	2016-02-12 00:12:56.146135	\N	f
260	18	perl5	bob	1	hibernating	e49cfaa45a1a8980767971ac	2016-04-25 08:26:58	2016-04-25 08:26:58	f	2016-05-05 00:15:35	2016-05-05 00:15:35	Submitted an iteration	\N	\N	f
261	24	haskell	scrabble-score	2	hibernating	89c70df349979874ee7a23ca	2016-04-27 01:09:07	2016-04-27 01:09:07	f	2016-07-25 21:35:20	2016-07-25 21:35:20	Submitted an iteration	\N	\N	f
262	24	erlang	trinary	1	hibernating	afacb24ab7a5d219e9d3135c	2016-07-13 09:57:59	2016-07-13 09:57:59	f	2016-08-10 18:19:53	2016-08-10 18:19:53	@NobbZ commented	\N	\N	f
263	24	python	run-length-encoding	2	\N	8ba6ebbf97e73b9a92451ee8	2016-05-08 01:31:09	2016-05-08 01:31:09	f	2016-08-11 01:05:42	2016-08-11 01:05:42	@joce commented	2016-02-29 19:14:55.785215	\N	f
264	24	ruby	simple-cipher	1	\N	e5baf38939f6a37b5ff1ba8c	2016-07-12 11:08:26	2016-07-12 11:08:26	f	2016-07-29 21:17:20	2016-07-29 21:17:20	@SevenPoints commented	2016-02-19 11:19:10.104714	\N	f
265	24	javascript	hamming	1	\N	3f826b638796c421203caee4	2016-06-17 21:48:50	2016-06-17 21:48:50	f	2016-07-17 10:07:44	2016-07-17 10:07:44	Submitted an iteration	2015-10-08 17:05:22.826027	\N	f
266	24	python	hello-world	1	\N	82f610f453a5b03d891ad08e	2016-05-10 12:30:26	2016-05-10 12:30:26	f	2016-05-23 14:21:56	2016-05-23 14:21:56	Submitted an iteration	\N	\N	f
267	24	ruby	gigasecond	3	done	24f53736b683079c54a0ae43	2016-05-17 02:10:42	2016-05-17 02:10:42	t	2016-07-15 09:57:51	2016-07-15 09:57:51	Submitted an iteration	\N	\N	f
268	42	ruby	leap	1	done	6524e096c3e3fd0094645081	2016-07-26 22:41:25	2016-07-26 22:41:25	t	2016-08-03 21:24:33	2016-08-03 21:24:33	Submitted an iteration	\N	\N	f
269	27	ruby	word-count	4	done	2bd6ceac6a8d789404c7749b	2016-07-20 17:34:40	2016-07-20 17:34:40	t	2016-07-28 20:40:04	2016-07-28 20:40:04	Submitted an iteration	\N	\N	f
270	27	python	robot-name	1	\N	e26aab5757c91ddd3a2d1b13	2016-07-21 20:20:07	2016-07-21 20:20:07	f	2016-07-27 04:34:40	2016-07-27 04:34:40	Submitted an iteration	2016-02-16 19:51:30.768402	\N	f
271	27	elixir	list-ops	1	hibernating	2204f8f02cd332c2929131f2	2016-07-30 13:45:27	2016-07-30 13:45:27	f	2016-08-04 18:51:41	2016-08-04 18:51:41	Submitted an iteration	\N	\N	f
272	27	lisp	sieve	1	\N	f3ec3bfa53033d4562cc78d7	2016-07-26 16:04:15	2016-07-26 16:04:15	f	2016-07-28 02:33:06	2016-07-28 02:33:06	Submitted an iteration	2015-10-25 04:07:01.139264	\N	f
273	45	csharp	leap	1	done	908d30a68090edecf0538592	2016-07-20 15:16:23	2016-07-20 15:16:23	t	2016-07-29 02:55:32	2016-07-29 02:55:32	Submitted an iteration	\N	\N	f
274	45	ruby	hamming	1	pending	8b7f4a67100202eb22145eb8	2016-06-30 00:37:21	2016-06-30 00:37:21	f	2016-08-05 09:11:32	2016-08-05 09:11:32	Submitted an iteration	\N	\N	f
275	45	haskell	clock	1	\N	788bb64342257e23a147b6ed	2016-07-12 23:19:31	2016-07-12 23:19:31	f	2016-08-11 04:03:17	2016-08-11 04:03:17	Submitted an iteration	\N	\N	f
276	45	php	roman-numerals	2	\N	058ebfb0bcd5d609908c1fb7	2016-07-21 21:51:31	2016-07-21 21:51:31	f	2016-08-05 02:46:30	2016-08-05 02:46:30	Submitted an iteration	2015-12-22 03:58:59.826369	\N	f
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 276, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, created_at, updated_at, onboarded_at, track_mentor, joined_as, api_secret, api_key, share_key) FROM stdin;
1	rikki-	rikki-@example.com	https://avatars.githubusercontent.com/u/8341419	8341419	vgo761	2016-07-05 15:59:46.72669	2016-07-05 15:59:46.72669	\N	--- []\n	\N	\N	\N	\N
6	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg	-81272	syt663	2016-01-08 23:09:29.763985	2016-01-08 23:09:29.763985	\N	--- []\n	\N	\N	\N	\N
7	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg	-5857	mcd121	2016-06-23 08:07:02.765418	2016-06-23 08:07:02.765418	\N	--- []\n	\N	\N	\N	\N
8	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg	-75191	tql901	2016-03-17 06:32:24.766796	2016-03-17 06:32:24.766796	\N	--- []\n	\N	\N	\N	\N
10	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thiagovernetti/128.jpg	-28616	fwq966	2015-12-04 17:21:08.769962	2015-12-04 17:21:08.769962	\N	--- []\n	\N	\N	\N	\N
13	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg	-87385	kud754	2016-02-27 11:04:07.774931	2016-02-27 11:04:07.774931	\N	--- []\n	\N	\N	\N	\N
14	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg	-94094	jsj560	2016-07-18 17:51:26.777077	2016-07-18 17:51:26.777077	\N	--- []\n	\N	\N	\N	\N
16	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg	-6088	nje813	2015-12-30 10:45:07.779959	2015-12-30 10:45:07.779959	\N	--- []\n	\N	\N	\N	\N
17	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg	-25743	qxp350	2016-04-10 08:42:42.782794	2016-04-10 08:42:42.782794	\N	--- []\n	\N	\N	\N	\N
18	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sgaurav_baghel/128.jpg	-45515	ipz780	2016-04-04 22:40:19.783641	2016-04-04 22:40:19.783641	\N	--- []\n	\N	\N	\N	\N
19	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg	-9576	kdi763	2016-06-06 21:18:40.785593	2016-06-06 21:18:40.785593	\N	--- []\n	\N	\N	\N	\N
20	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg	-29350	utz606	2016-07-17 02:35:51.787074	2016-07-17 02:35:51.787074	\N	--- []\n	\N	\N	\N	\N
21	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg	-28244	wdq805	2016-05-08 00:07:59.788614	2016-05-08 00:07:59.788614	\N	--- []\n	\N	\N	\N	\N
23	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg	-56257	ekv147	2016-03-20 10:06:22.790977	2016-03-20 10:06:22.790977	\N	--- []\n	\N	\N	\N	\N
24	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg	-12069	edu706	2016-04-09 17:28:32.79194	2016-04-09 17:28:32.79194	\N	--- []\n	\N	\N	\N	\N
25	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg	-34541	iqj765	2015-11-22 01:46:57.793356	2015-11-22 01:46:57.793356	\N	--- []\n	\N	\N	\N	\N
26	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/BillSKenney/128.jpg	-38714	csi642	2016-02-18 12:52:23.794432	2016-02-18 12:52:23.794432	\N	--- []\n	\N	\N	\N	\N
27	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg	-52980	swb880	2016-07-17 06:48:44.795078	2016-07-17 06:48:44.795078	\N	--- []\n	\N	\N	\N	\N
30	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg	-6490	ckb385	2016-03-01 14:14:00.796842	2016-03-01 14:14:00.796842	\N	--- []\n	\N	\N	\N	\N
32	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg	-21952	pwh499	2015-12-15 20:31:09.798057	2015-12-15 20:31:09.798057	\N	--- []\n	\N	\N	\N	\N
34	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg	-16415	qko134	2016-02-12 07:39:33.799269	2016-02-12 07:39:33.799269	\N	--- []\n	\N	\N	\N	\N
35	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg	-99180	ltu878	2016-03-03 14:04:53.799974	2016-03-03 14:04:53.799974	\N	--- []\n	\N	\N	\N	\N
36	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg	-4051	xsw273	2016-03-18 07:12:10.802347	2016-03-18 07:12:10.802347	\N	--- []\n	\N	\N	\N	\N
37	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg	-72866	xku561	2015-11-20 10:22:09.803188	2015-11-20 10:22:09.803188	\N	--- []\n	\N	\N	\N	\N
39	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg	-49222	fws262	2016-01-05 07:36:20.80455	2016-01-05 07:36:20.80455	\N	--- []\n	\N	\N	\N	\N
41	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg	-64961	iib652	2015-12-10 15:24:29.805881	2015-12-10 15:24:29.805881	\N	--- []\n	\N	\N	\N	\N
42	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/exentrich/128.jpg	-96821	ynr446	2016-03-05 13:59:04.806523	2016-03-05 13:59:04.806523	\N	--- []\n	\N	\N	\N	\N
43	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg	-22308	fft350	2016-07-14 21:19:56.80715	2016-07-14 21:19:56.80715	\N	--- []\n	\N	\N	\N	\N
45	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg	-82687	cjk811	2016-06-20 16:17:28.80842	2016-06-20 16:17:28.80842	\N	--- []\n	\N	\N	\N	\N
47	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/leeiio/128.jpg	-45133	gnf353	2016-01-28 23:47:00.80979	2016-01-28 23:47:00.80979	\N	--- []\n	\N	\N	\N	\N
4	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/v_klimenko/128.jpg	-22030	ndy432	2016-07-05 16:52:22.758334	2016-07-05 16:52:22.758334	2016-03-01 16:07:06	---\n- javascript\n- erlang\n- elixir\n	\N	\N	\N	\N
38	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg	-43391	syr206	2016-08-02 06:57:57.803911	2016-08-02 06:57:57.803911	2016-03-02 13:58:24	--- []\n	\N	\N	\N	\N
46	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg	-30868	feu318	2015-12-28 21:17:20.809074	2015-12-28 21:17:20.809074	2016-04-02 05:24:46	--- []\n	\N	\N	\N	\N
15	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jervo/128.jpg	-58300	dvw677	2016-01-07 02:38:29.778901	2016-01-07 02:38:29.778901	2016-02-24 12:00:42	--- []\n	\N	\N	\N	\N
40	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/alxndrustinov/128.jpg	-60681	yxo368	2016-05-21 10:09:06.805217	2016-05-21 10:09:06.805217	2016-03-11 21:32:11	--- []\n	\N	\N	\N	\N
33	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg	-81026	akm817	2016-06-19 22:43:36.7987	2016-06-19 22:43:36.7987	2016-03-01 21:58:52	--- []\n	\N	\N	\N	\N
9	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg	-68229	vpb709	2016-03-20 03:45:00.768578	2016-03-20 03:45:00.768578	2016-02-06 12:09:20	--- []\n	\N	\N	\N	\N
49	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg	-21394	uqf486	2016-05-24 18:03:33.811342	2016-05-24 18:03:33.811342	\N	--- []\n	\N	\N	\N	\N
28	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nbirckel/128.jpg	-83553	qjq794	2016-05-25 00:31:46.795682	2016-05-25 00:31:46.795682	2016-03-05 01:05:37	--- []\n	\N	\N	\N	\N
29	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg	-3486	jds957	2016-06-25 02:50:02.796237	2016-06-25 02:50:02.796237	2016-03-21 01:07:41	--- []\n	\N	\N	\N	\N
48	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/plbabin/128.jpg	-77503	jgl968	2016-04-22 15:13:22.81042	2016-04-22 15:13:22.81042	2016-03-09 06:42:09	--- []\n	\N	\N	\N	\N
44	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg	-75482	alo373	2016-04-20 11:21:34.807789	2016-04-20 11:21:34.807789	2016-02-19 07:14:02	--- []\n	\N	\N	\N	\N
22	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg	-81673	avd227	2016-01-20 21:20:58.78976	2016-01-20 21:20:58.78976	2016-03-04 01:07:45	--- []\n	\N	\N	\N	\N
2	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg	-80745	hjb846	2016-07-13 04:52:50.745327	2016-07-13 04:52:50.745327	2016-03-14 16:00:41	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	\N	\N	\N	\N
5	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg	-5250	qkf881	2016-06-20 08:28:54.762784	2016-06-20 08:28:54.762784	2016-03-04 09:38:08	---\n- python\n	\N	\N	\N	\N
12	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/wr/128.jpg	-54955	vua802	2016-06-08 00:50:07.773139	2016-06-08 00:50:07.773139	2016-04-07 08:46:34	--- []\n	\N	\N	\N	\N
3	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg	-66091	upi552	2016-03-16 21:25:28.75284	2016-03-16 21:25:28.75284	2016-02-24 18:35:45	---\n- ruby\n- haskell\n	\N	\N	\N	\N
31	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg	-5628	jcm248	2016-06-01 06:44:55.797463	2016-06-01 06:44:55.797463	2016-02-29 23:50:23	--- []\n	\N	\N	\N	\N
11	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/wr/128.jpg	-34151	eiv274	2016-04-08 03:17:57.771678	2016-04-08 03:17:57.771678	2016-03-14 09:17:25	--- []\n	\N	\N	\N	\N
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 49, true);


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY views (id, user_id, exercise_id, last_viewed_at, created_at, updated_at) FROM stdin;
\.


--
-- Name: views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('views_id_seq', 1, false);


--
-- PostgreSQL database dump complete
--

