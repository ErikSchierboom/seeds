--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY acls (id, user_id, language, slug, created_at, updated_at) FROM stdin;
1	9	ruby	meetup	2016-03-18 13:51:50	2016-03-18 13:51:50
2	9	clojure	space-age	2016-03-18 06:22:45	2016-03-18 06:22:45
3	9	scala	leap	2016-03-13 11:17:20	2016-03-13 11:17:20
4	9	ruby	raindrops	2016-03-12 01:47:15	2016-03-12 01:47:15
5	11	scala	difference-of-squares	2015-11-23 14:41:11	2015-11-23 14:41:11
7	12	javascript	food-chain	2016-02-05 02:01:21	2016-02-05 02:01:21
8	12	lisp	sieve	2015-12-05 20:17:10	2015-12-05 20:17:10
9	12	clojure	atbash-cipher	2015-12-04 09:13:25	2015-12-04 09:13:25
10	15	python	rna-transcription	2016-03-14 03:58:41	2016-03-14 03:58:41
11	15	haskell	clock	2016-03-17 05:46:31	2016-03-17 05:46:31
12	15	python	allergies	2016-03-10 05:10:25	2016-03-10 05:10:25
13	15	python	ocr-numbers	2016-03-10 13:58:03	2016-03-10 13:58:03
15	15	perl5	etl	2016-03-05 15:13:43	2016-03-05 15:13:43
16	15	csharp	etl	2016-03-04 13:42:12	2016-03-04 13:42:12
18	15	javascript	palindrome-products	2016-03-12 00:22:12	2016-03-12 00:22:12
19	15	ruby	hello-world	2016-03-19 20:45:35	2016-03-19 20:45:35
20	15	clojure	word-count	2016-03-08 06:07:56	2016-03-08 06:07:56
22	15	haskell	triangle	2016-03-05 08:13:14	2016-03-05 08:13:14
23	15	javascript	anagram	2016-03-11 06:28:12	2016-03-11 06:28:12
25	15	python	hello-world	2016-03-05 02:31:03	2016-03-05 02:31:03
26	15	ruby	hamming	2016-03-20 02:25:24	2016-03-20 02:25:24
27	15	elixir	acronym	2016-03-07 06:36:22	2016-03-07 06:36:22
30	15	ruby	raindrops	2016-03-09 07:50:13	2016-03-09 07:50:13
31	15	python	hamming	2016-03-16 19:09:31	2016-03-16 19:09:31
32	15	ruby	space-age	2016-03-14 19:13:54	2016-03-14 19:13:54
33	15	python	space-age	2016-03-14 13:10:13	2016-03-14 13:10:13
34	15	ruby	leap	2016-03-05 01:01:27	2016-03-05 01:01:27
35	15	python	etl	2016-03-12 01:39:00	2016-03-12 01:39:00
37	15	javascript	sieve	2016-03-03 14:46:24	2016-03-03 14:46:24
38	15	haskell	grains	2016-03-19 05:33:33	2016-03-19 05:33:33
39	15	csharp	triangle	2016-03-11 23:11:16	2016-03-11 23:11:16
40	15	haskell	bob	2016-03-24 12:32:03	2016-03-24 12:32:03
42	15	python	sieve	2016-03-04 21:37:17	2016-03-04 21:37:17
43	15	cpp	phone-number	2016-03-10 17:46:09	2016-03-10 17:46:09
45	15	python	leap	2016-03-06 14:17:32	2016-03-06 14:17:32
49	15	csharp	roman-numerals	2016-03-15 12:50:47	2016-03-15 12:50:47
50	15	cpp	hamming	2016-03-17 17:52:00	2016-03-17 17:52:00
52	15	javascript	word-count	2016-03-12 10:27:42	2016-03-12 10:27:42
53	15	ruby	rna-transcription	2016-03-14 01:23:30	2016-03-14 01:23:30
54	15	swift	grade-school	2016-03-04 14:55:10	2016-03-04 14:55:10
57	15	ruby	nth-prime	2016-03-11 01:15:44	2016-03-11 01:15:44
58	15	javascript	grade-school	2016-03-10 02:52:46	2016-03-10 02:52:46
59	15	python	twelve-days	2016-03-07 11:04:52	2016-03-07 11:04:52
61	15	javascript	hamming	2016-03-08 05:06:59	2016-03-08 05:06:59
62	15	csharp	anagram	2016-03-08 05:30:17	2016-03-08 05:30:17
63	22	haskell	anagram	2016-02-28 13:56:55	2016-02-28 13:56:55
64	22	elixir	sublist	2016-02-29 06:10:30	2016-02-29 06:10:30
65	22	javascript	word-count	2016-03-02 11:04:15	2016-03-02 11:04:15
66	22	python	hello-world	2016-03-02 08:00:07	2016-03-02 08:00:07
68	22	javascript	bob	2016-03-12 15:16:15	2016-03-12 15:16:15
69	22	javascript	rna-transcription	2016-02-21 02:19:36	2016-02-21 02:19:36
70	22	ruby	grains	2016-02-23 03:08:57	2016-02-23 03:08:57
72	22	objective-c	word-count	2016-03-23 07:05:25	2016-03-23 07:05:25
73	22	javascript	leap	2016-03-07 04:32:29	2016-03-07 04:32:29
75	22	ruby	hamming	2016-03-07 16:24:26	2016-03-07 16:24:26
78	22	scala	leap	2016-03-19 23:20:54	2016-03-19 23:20:54
80	22	ruby	rna-transcription	2016-02-22 02:24:54	2016-02-22 02:24:54
82	22	ruby	binary	2016-03-05 03:29:21	2016-03-05 03:29:21
84	22	ruby	difference-of-squares	2016-02-29 14:03:43	2016-02-29 14:03:43
85	22	elixir	nucleotide-count	2016-03-12 05:20:11	2016-03-12 05:20:11
86	22	javascript	food-chain	2016-03-04 14:50:20	2016-03-04 14:50:20
87	22	ruby	raindrops	2016-02-20 20:31:38	2016-02-20 20:31:38
93	22	elixir	hello-world	2016-02-20 09:01:00	2016-02-20 09:01:00
94	22	rust	difference-of-squares	2016-02-27 16:16:38	2016-02-27 16:16:38
97	22	ruby	word-count	2016-02-24 19:24:19	2016-02-24 19:24:19
101	22	java	etl	2016-03-01 06:42:30	2016-03-01 06:42:30
102	22	erlang	rna-transcription	2016-03-05 22:03:15	2016-03-05 22:03:15
103	22	ruby	binary-search-tree	2016-02-23 01:09:20	2016-02-23 01:09:20
105	22	python	word-count	2016-03-01 20:43:07	2016-03-01 20:43:07
106	22	csharp	leap	2016-02-19 18:08:10	2016-02-19 18:08:10
108	22	coffeescript	word-count	2016-03-17 16:11:34	2016-03-17 16:11:34
109	22	python	series	2016-02-20 01:30:10	2016-02-20 01:30:10
111	22	perl5	bob	2016-03-08 12:41:11	2016-03-08 12:41:11
112	22	javascript	pythagorean-triplet	2016-03-19 21:55:36	2016-03-19 21:55:36
113	22	ruby	food-chain	2016-03-10 14:44:24	2016-03-10 14:44:24
114	22	haskell	accumulate	2016-02-19 16:07:35	2016-02-19 16:07:35
116	22	rust	anagram	2016-02-19 13:55:50	2016-02-19 13:55:50
120	22	java	nucleotide-count	2016-03-19 08:49:14	2016-03-19 08:49:14
121	22	clojure	rna-transcription	2016-03-22 16:39:45	2016-03-22 16:39:45
122	22	python	bob	2016-02-28 19:27:36	2016-02-28 19:27:36
123	28	ruby	nth-prime	2016-03-05 05:53:54	2016-03-05 05:53:54
124	28	python	bob	2016-03-02 04:42:40	2016-03-02 04:42:40
127	28	javascript	leap	2016-03-03 13:13:36	2016-03-03 13:13:36
128	29	csharp	bob	2015-08-01 06:34:39	2015-08-01 06:34:39
129	29	haskell	gigasecond	2015-12-16 08:49:57	2015-12-16 08:49:57
131	29	python	word-count	2015-08-05 04:28:44	2015-08-05 04:28:44
132	29	ruby	robot-name	2015-10-22 22:17:22	2015-10-22 22:17:22
133	29	python	difference-of-squares	2015-10-10 14:04:49	2015-10-10 14:04:49
134	29	python	accumulate	2015-10-16 21:14:55	2015-10-16 21:14:55
135	29	csharp	word-count	2015-07-20 20:06:06	2015-07-20 20:06:06
136	29	ruby	difference-of-squares	2015-11-02 12:25:16	2015-11-02 12:25:16
138	29	perl5	bob	2016-03-10 09:43:02	2016-03-10 09:43:02
139	29	ruby	leap	2016-02-09 21:20:22	2016-02-09 21:20:22
140	29	python	bob	2015-09-09 04:44:37	2015-09-09 04:44:37
144	29	coffeescript	hello-world	2015-09-08 14:54:46	2015-09-08 14:54:46
145	29	php	difference-of-squares	2015-09-25 02:38:36	2015-09-25 02:38:36
146	29	erlang	trinary	2016-01-09 12:39:15	2016-01-09 12:39:15
147	29	javascript	raindrops	2015-11-23 02:22:34	2015-11-23 02:22:34
148	29	ruby	roman-numerals	2015-10-14 05:14:10	2015-10-14 05:14:10
149	29	csharp	hamming	2015-11-13 18:28:43	2015-11-13 18:28:43
150	29	clojure	word-count	2015-07-24 06:59:56	2015-07-24 06:59:56
151	29	ruby	beer-song	2015-07-19 10:59:00	2015-07-19 10:59:00
156	29	javascript	hamming	2015-07-17 20:40:24	2015-07-17 20:40:24
157	29	elixir	binary	2015-11-26 22:30:38	2015-11-26 22:30:38
158	29	python	sublist	2015-08-20 23:09:32	2015-08-20 23:09:32
159	29	scala	hello-world	2015-07-25 06:03:50	2015-07-25 06:03:50
160	29	ruby	rna-transcription	2015-12-05 23:27:56	2015-12-05 23:27:56
162	29	ruby	gigasecond	2016-01-12 01:53:38	2016-01-12 01:53:38
163	29	haskell	crypto-square	2015-11-30 10:09:23	2015-11-30 10:09:23
164	29	go	clock	2016-01-06 10:35:16	2016-01-06 10:35:16
165	29	elixir	hello-world	2015-08-30 02:52:33	2015-08-30 02:52:33
166	29	scala	bob	2015-07-23 08:05:05	2015-07-23 08:05:05
169	29	javascript	robot-simulator	2015-08-26 06:11:14	2015-08-26 06:11:14
170	29	python	hamming	2015-09-25 17:01:13	2015-09-25 17:01:13
172	29	clojure	beer-song	2015-08-06 11:03:39	2015-08-06 11:03:39
177	29	haskell	difference-of-squares	2015-09-01 03:05:41	2015-09-01 03:05:41
180	29	haskell	bob	2015-08-04 14:59:06	2015-08-04 14:59:06
182	29	haskell	rna-transcription	2016-01-09 19:03:06	2016-01-09 19:03:06
183	29	clojure	rna-transcription	2015-12-02 20:26:02	2015-12-02 20:26:02
185	31	rust	difference-of-squares	2016-03-07 17:14:00	2016-03-07 17:14:00
186	31	python	gigasecond	2016-01-14 16:18:59	2016-01-14 16:18:59
188	31	javascript	hello-world	2016-01-31 13:02:31	2016-01-31 13:02:31
189	31	elixir	word-count	2016-03-08 03:07:44	2016-03-08 03:07:44
190	31	cpp	etl	2016-02-25 03:42:19	2016-02-25 03:42:19
192	31	javascript	anagram	2016-01-27 05:54:32	2016-01-27 05:54:32
193	31	javascript	bob	2016-01-14 19:28:30	2016-01-14 19:28:30
194	31	ruby	robot-name	2016-01-28 13:11:16	2016-01-28 13:11:16
195	31	haskell	house	2016-02-09 15:03:48	2016-02-09 15:03:48
197	31	javascript	gigasecond	2016-02-12 00:01:12	2016-02-12 00:01:12
198	31	ruby	word-count	2016-01-30 11:09:13	2016-01-30 11:09:13
199	31	haskell	gigasecond	2016-02-10 03:17:01	2016-02-10 03:17:01
201	31	python	rna-transcription	2016-02-01 00:17:12	2016-02-01 00:17:12
202	31	clojure	crypto-square	2016-01-23 19:21:41	2016-01-23 19:21:41
203	31	java	meetup	2016-01-20 03:05:49	2016-01-20 03:05:49
204	31	python	atbash-cipher	2016-03-07 08:02:32	2016-03-07 08:02:32
205	31	ruby	bob	2016-01-26 00:59:46	2016-01-26 00:59:46
207	31	javascript	beer-song	2016-02-22 04:46:48	2016-02-22 04:46:48
208	31	clojure	scrabble-score	2016-01-20 00:35:52	2016-01-20 00:35:52
210	31	javascript	hamming	2016-01-25 07:00:08	2016-01-25 07:00:08
212	31	python	allergies	2016-03-01 08:45:37	2016-03-01 08:45:37
214	33	go	gigasecond	2015-12-27 13:45:53	2015-12-27 13:45:53
216	33	clojure	prime-factors	2015-12-13 14:52:08	2015-12-13 14:52:08
217	33	ruby	bob	2015-11-11 08:18:20	2015-11-11 08:18:20
220	33	go	pythagorean-triplet	2015-12-29 19:41:34	2015-12-29 19:41:34
221	33	elixir	zipper	2016-01-28 23:25:22	2016-01-28 23:25:22
222	33	python	rna-transcription	2015-12-08 20:31:31	2015-12-08 20:31:31
223	33	cpp	queen-attack	2015-11-13 07:56:19	2015-11-13 07:56:19
225	38	ruby	roman-numerals	2016-02-03 02:32:40	2016-02-03 02:32:40
226	38	lisp	gigasecond	2015-07-06 08:22:19	2015-07-06 08:22:19
228	38	javascript	hello-world	2015-09-20 04:10:46	2015-09-20 04:10:46
229	38	ruby	robot-name	2015-07-12 10:42:07	2015-07-12 10:42:07
230	38	ruby	series	2015-11-18 07:40:37	2015-11-18 07:40:37
231	38	python	rna-transcription	2015-07-19 15:57:57	2015-07-19 15:57:57
232	40	perl5	triangle	2016-03-10 08:54:09	2016-03-10 08:54:09
233	40	haskell	nth-prime	2016-02-13 11:16:56	2016-02-13 11:16:56
234	40	elixir	word-count	2016-02-19 11:55:33	2016-02-19 11:55:33
236	44	javascript	bob	2015-11-15 08:53:37	2015-11-15 08:53:37
237	46	python	hamming	2015-11-22 13:30:01	2015-11-22 13:30:01
239	48	ruby	binary	2015-10-18 23:00:06	2015-10-18 23:00:06
240	48	haskell	space-age	2015-10-28 23:17:05	2015-10-28 23:17:05
241	49	cpp	word-count	2016-02-18 08:44:10	2016-02-18 08:44:10
245	49	ruby	secret-handshake	2016-02-16 02:09:02	2016-02-16 02:09:02
249	49	ruby	strain	2016-02-13 20:59:23	2016-02-13 20:59:23
250	49	javascript	word-count	2016-02-14 07:04:29	2016-02-14 07:04:29
251	49	ruby	hamming	2016-02-19 06:53:45	2016-02-19 06:53:45
253	26	ocaml	bob	2016-03-04 23:53:50	2016-03-04 23:53:50
254	26	ruby	phone-number	2015-12-15 10:47:29	2015-12-15 10:47:29
256	26	scala	bob	2015-12-12 03:18:36	2015-12-12 03:18:36
257	26	go	clock	2015-12-24 02:32:57	2015-12-24 02:32:57
259	26	javascript	etl	2015-12-17 18:49:42	2015-12-17 18:49:42
261	26	ruby	hello-world	2016-01-23 22:45:58	2016-01-23 22:45:58
262	26	python	pangram	2015-12-27 17:57:48	2015-12-27 17:57:48
263	26	elixir	gigasecond	2015-12-19 15:18:00	2015-12-19 15:18:00
265	26	ruby	space-age	2016-01-11 10:23:50	2016-01-11 10:23:50
266	26	ruby	series	2015-12-20 12:39:42	2015-12-20 12:39:42
267	26	cpp	word-count	2015-12-19 01:07:30	2015-12-19 01:07:30
268	26	cpp	triangle	2016-03-18 08:03:26	2016-03-18 08:03:26
269	26	clojure	binary	2016-01-04 00:13:58	2016-01-04 00:13:58
271	26	ruby	accumulate	2015-12-14 13:28:22	2015-12-14 13:28:22
273	26	erlang	sum-of-multiples	2016-01-04 13:31:11	2016-01-04 13:31:11
274	26	python	word-count	2015-12-20 11:37:57	2015-12-20 11:37:57
275	26	haskell	space-age	2016-01-08 00:03:30	2016-01-08 00:03:30
278	26	scala	allergies	2015-12-19 08:38:57	2015-12-19 08:38:57
281	26	ruby	word-count	2015-12-15 01:36:54	2015-12-15 01:36:54
284	26	java	etl	2016-01-16 13:59:46	2016-01-16 13:59:46
285	26	ruby	say	2015-12-22 17:46:55	2015-12-22 17:46:55
286	26	python	gigasecond	2016-03-12 17:46:49	2016-03-12 17:46:49
287	26	javascript	leap	2015-12-13 00:15:13	2015-12-13 00:15:13
288	26	javascript	word-count	2015-12-15 01:52:03	2015-12-15 01:52:03
291	26	ruby	binary	2015-12-18 09:21:43	2015-12-18 09:21:43
293	26	python	run-length-encoding	2016-01-08 03:51:25	2016-01-08 03:51:25
295	26	go	octal	2016-02-29 01:33:34	2016-02-29 01:33:34
296	26	ruby	hamming	2015-12-12 14:56:18	2015-12-12 14:56:18
297	26	csharp	leap	2015-12-13 00:54:11	2015-12-13 00:54:11
298	26	ruby	leap	2015-12-29 11:31:26	2015-12-29 11:31:26
299	26	javascript	gigasecond	2016-01-17 20:26:55	2016-01-17 20:26:55
300	26	scala	word-count	2015-12-31 00:14:31	2015-12-31 00:14:31
301	26	python	hamming	2016-02-13 01:12:30	2016-02-13 01:12:30
302	26	ecmascript	hello-world	2016-01-13 10:51:23	2016-01-13 10:51:23
303	26	javascript	grade-school	2016-01-07 09:56:36	2016-01-07 09:56:36
304	26	ruby	bob	2015-12-28 16:51:54	2015-12-28 16:51:54
306	26	elixir	bob	2015-12-13 00:44:10	2015-12-13 00:44:10
307	7	ruby	rna-transcription	2016-01-18 18:54:57	2016-01-18 18:54:57
308	7	ruby	gigasecond	2015-12-07 06:53:13	2015-12-07 06:53:13
311	7	javascript	bob	2015-11-25 06:47:39	2015-11-25 06:47:39
312	7	ruby	grains	2016-01-15 20:00:12	2016-01-15 20:00:12
313	7	python	kindergarten-garden	2016-03-08 10:32:25	2016-03-08 10:32:25
314	23	clojure	space-age	2015-09-20 22:59:11	2015-09-20 22:59:11
316	23	ruby	phone-number	2015-10-10 11:11:18	2015-10-10 11:11:18
319	23	javascript	hamming	2016-02-01 02:45:47	2016-02-01 02:45:47
320	17	javascript	word-count	2016-01-06 04:33:26	2016-01-06 04:33:26
325	17	erlang	etl	2016-02-29 07:33:45	2016-02-29 07:33:45
326	17	javascript	kindergarten-garden	2016-01-12 18:59:00	2016-01-12 18:59:00
328	17	ruby	protein-translation	2016-03-16 07:20:04	2016-03-16 07:20:04
329	20	python	word-count	2015-10-28 19:58:23	2015-10-28 19:58:23
332	20	python	allergies	2015-09-01 17:13:15	2015-09-01 17:13:15
333	20	javascript	space-age	2015-10-31 08:27:28	2015-10-31 08:27:28
334	20	python	minesweeper	2015-12-09 13:22:39	2015-12-09 13:22:39
335	20	javascript	food-chain	2016-03-17 20:03:24	2016-03-17 20:03:24
336	20	csharp	hamming	2016-01-04 16:01:03	2016-01-04 16:01:03
337	21	scala	bob	2015-10-10 05:59:45	2015-10-10 05:59:45
338	21	python	hamming	2015-11-27 23:45:03	2015-11-27 23:45:03
340	36	elixir	hello-world	2015-12-27 09:27:13	2015-12-27 09:27:13
341	30	python	simple-cipher	2016-03-06 10:54:58	2016-03-06 10:54:58
342	30	csharp	phone-number	2015-09-28 22:51:30	2015-09-28 22:51:30
343	30	haskell	word-count	2015-12-14 20:29:10	2015-12-14 20:29:10
345	30	ruby	strain	2016-02-04 08:30:53	2016-02-04 08:30:53
346	30	python	leap	2015-11-25 11:49:53	2015-11-25 11:49:53
347	30	python	crypto-square	2015-11-19 15:17:37	2015-11-19 15:17:37
348	30	swift	leap	2016-01-21 04:18:51	2016-01-21 04:18:51
349	35	perl5	etl	2015-09-26 16:27:26	2015-09-26 16:27:26
350	35	python	bob	2015-09-04 21:03:44	2015-09-04 21:03:44
353	35	racket	grep	2015-07-24 02:42:19	2015-07-24 02:42:19
357	35	ruby	house	2015-07-13 05:27:56	2015-07-13 05:27:56
361	35	haskell	sum-of-multiples	2015-12-04 01:29:36	2015-12-04 01:29:36
363	35	clojure	beer-song	2015-10-19 04:28:58	2015-10-19 04:28:58
364	35	elixir	bob	2015-09-12 05:11:45	2015-09-12 05:11:45
365	14	ruby	strain	2015-11-08 16:01:58	2015-11-08 16:01:58
367	14	elixir	word-count	2015-12-25 02:09:30	2015-12-25 02:09:30
369	14	go	difference-of-squares	2015-12-17 17:01:34	2015-12-17 17:01:34
370	14	go	luhn	2015-11-08 04:23:30	2015-11-08 04:23:30
371	14	python	word-count	2015-11-19 22:54:40	2015-11-19 22:54:40
372	14	ruby	hamming	2016-02-01 04:45:57	2016-02-01 04:45:57
373	41	php	roman-numerals	2016-03-17 09:55:53	2016-03-17 09:55:53
375	41	ruby	hamming	2016-03-20 19:17:52	2016-03-20 19:17:52
376	41	ruby	raindrops	2016-03-24 07:47:22	2016-03-24 07:47:22
377	41	clojure	bob	2016-03-24 17:43:45	2016-03-24 17:43:45
378	41	python	robot-name	2016-03-23 20:00:09	2016-03-23 20:00:09
379	6	scala	nucleotide-count	2016-02-01 03:17:28	2016-02-01 03:17:28
380	6	ruby	difference-of-squares	2015-12-17 09:50:10	2015-12-17 09:50:10
381	6	javascript	grade-school	2015-11-13 11:43:26	2015-11-13 11:43:26
382	6	java	etl	2015-11-22 12:06:13	2015-11-22 12:06:13
383	6	python	gigasecond	2016-01-29 21:31:37	2016-01-29 21:31:37
384	34	haskell	grains	2015-09-21 10:21:05	2015-09-21 10:21:05
387	34	javascript	etl	2015-09-21 05:24:29	2015-09-21 05:24:29
389	34	javascript	anagram	2016-01-13 02:07:06	2016-01-13 02:07:06
390	34	ruby	word-count	2015-09-24 08:57:03	2015-09-24 08:57:03
392	34	coffeescript	nth-prime	2015-09-22 14:40:58	2015-09-22 14:40:58
394	34	ruby	matrix	2015-12-22 11:58:39	2015-12-22 11:58:39
395	16	haskell	scrabble-score	2015-12-02 15:37:23	2015-12-02 15:37:23
397	16	ruby	roman-numerals	2016-01-30 10:03:49	2016-01-30 10:03:49
398	16	ruby	leap	2016-02-05 09:55:50	2016-02-05 09:55:50
399	16	python	hamming	2015-11-16 04:12:20	2015-11-16 04:12:20
400	18	python	space-age	2016-01-26 21:17:54	2016-01-26 21:17:54
401	18	ruby	leap	2015-09-27 01:16:52	2015-09-27 01:16:52
402	18	python	hello-world	2016-02-22 23:42:30	2016-02-22 23:42:30
403	18	ruby	robot-name	2016-01-31 02:04:59	2016-01-31 02:04:59
405	18	csharp	bob	2015-09-07 09:29:03	2015-09-07 09:29:03
407	18	ruby	kindergarten-garden	2015-09-03 20:55:54	2015-09-03 20:55:54
408	24	ruby	bob	2015-12-12 02:00:43	2015-12-12 02:00:43
409	42	python	series	2015-08-30 12:34:31	2015-08-30 12:34:31
411	42	lua	rna-transcription	2015-09-02 00:49:19	2015-09-02 00:49:19
414	27	go	binary-search-tree	2015-11-24 21:18:29	2015-11-24 21:18:29
415	45	ruby	grains	2015-11-04 01:19:53	2015-11-04 01:19:53
416	45	python	word-count	2015-09-01 12:54:31	2015-09-01 12:54:31
417	45	haskell	nucleotide-count	2015-08-28 14:34:42	2015-08-28 14:34:42
422	45	python	leap	2015-11-16 00:47:55	2015-11-16 00:47:55
424	45	erlang	sum-of-multiples	2015-10-02 15:09:20	2015-10-02 15:09:20
425	45	python	crypto-square	2015-09-15 17:58:54	2015-09-15 17:58:54
427	45	ruby	hamming	2015-08-23 12:47:13	2015-08-23 12:47:13
428	45	ruby	gigasecond	2016-01-11 08:47:57	2016-01-11 08:47:57
429	45	ruby	bob	2015-08-25 10:15:07	2015-08-25 10:15:07
430	45	csharp	leap	2015-11-12 16:50:26	2015-11-12 16:50:26
432	45	ruby	raindrops	2016-02-20 02:44:41	2016-02-20 02:44:41
433	45	python	meetup	2015-08-21 22:49:53	2015-08-21 22:49:53
434	45	ruby	sum-of-multiples	2015-09-30 02:47:26	2015-09-30 02:47:26
435	45	ruby	difference-of-squares	2015-09-09 10:59:07	2015-09-09 10:59:07
437	45	javascript	hamming	2016-02-11 18:06:43	2016-02-11 18:06:43
438	45	scheme	grains	2015-10-01 10:22:28	2015-10-01 10:22:28
439	45	ruby	phone-number	2015-11-21 13:10:09	2015-11-21 13:10:09
440	45	ruby	word-count	2015-09-25 11:08:59	2015-09-25 11:08:59
444	45	java	space-age	2015-10-27 12:50:52	2015-10-27 12:50:52
445	45	elixir	sublist	2015-09-02 17:08:30	2015-09-02 17:08:30
446	45	scala	bob	2015-08-30 14:26:35	2015-08-30 14:26:35
447	45	ruby	space-age	2015-09-09 03:11:07	2015-09-09 03:11:07
450	45	go	triangle	2015-12-30 07:07:20	2015-12-30 07:07:20
451	45	python	beer-song	2015-10-09 22:30:56	2015-10-09 22:30:56
452	45	scala	nucleotide-count	2015-08-22 13:29:01	2015-08-22 13:29:01
453	45	python	nth-prime	2016-01-04 14:03:24	2016-01-04 14:03:24
454	45	python	grade-school	2015-09-12 20:56:12	2015-09-12 20:56:12
455	45	python	kindergarten-garden	2015-12-19 14:39:29	2015-12-19 14:39:29
456	45	haskell	grains	2015-08-28 15:52:07	2015-08-28 15:52:07
457	45	elixir	list-ops	2015-09-17 16:40:27	2015-09-17 16:40:27
458	45	haskell	sum-of-multiples	2015-09-14 01:08:21	2015-09-14 01:08:21
460	45	scala	leap	2015-09-02 11:22:08	2015-09-02 11:22:08
461	45	python	grains	2015-08-21 10:30:04	2015-08-21 10:30:04
462	45	javascript	space-age	2015-09-06 08:16:23	2015-09-06 08:16:23
463	45	clojure	meetup	2016-02-10 00:27:52	2016-02-10 00:27:52
464	45	ruby	simple-cipher	2015-10-14 12:52:05	2015-10-14 12:52:05
465	45	javascript	bob	2016-01-16 00:46:16	2016-01-16 00:46:16
466	45	javascript	hello-world	2015-10-25 17:32:32	2015-10-25 17:32:32
467	45	ruby	leap	2015-11-19 03:39:34	2015-11-19 03:39:34
468	45	python	gigasecond	2015-09-07 06:45:52	2015-09-07 06:45:52
469	45	go	grains	2016-02-19 03:49:10	2016-02-19 03:49:10
\.


--
-- Name: acls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('acls_id_seq', 469, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
48	2	13	if not word.isspace()]\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThere's a function broken out considering there are letters before determining the prompt before comparing their indices.	\N	2016-03-14 10:17:47	2016-03-14 10:17:47
51	15	14	Happy hacking!\n\ndef hey(self, message):\n\nWow, thanks for letting me know)\n\n-----	\N	2016-03-10 23:14:29	2016-03-10 23:14:29
120	33	35	You also have the same like what you think.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then `count[word] = words.count(word)`\n\nWhy is count a size difference ?	\N	2016-03-14 13:30:38	2016-03-14 13:30:38
45	28	11	There is a fifth case where the sublist function from Data.Char. I'd suggest taking a look at the source.	\N	2016-03-21 23:29:33	2016-03-21 23:29:33
71	28	22	Is there any official Haskell style cops applications?\n\nAh, I'm on GHC and with so little is probably the better implementation would be important here.	\N	2016-03-06 15:25:45	2016-03-06 15:25:45
74	40	22	(Integral b0) arising from the module, so you don't have a type signature was `String -> String`)\n\nFor this exercise should be in base somewhere, but it seems less clear:	\N	2016-03-08 17:27:51	2016-03-08 17:27:51
77	11	22	isLeapYear :: Int -> Int -> Bool -- Defined in `GHC.Classes'	\N	2016-03-21 13:52:55	2016-03-21 13:52:55
5	12	3	as an example.\n\n```foldLeft``` is fine. :-)\n\nTake a look.\n\n-----\n\nI agree with @calista	\N	2016-03-14 03:37:21	2016-03-14 03:37:21
12	48	5	Also, wouldn't using List.zip first involve converting from strings, and returned the difference you use a lazy list from an error-prevention perspective as well.\n\nI too have the return types of the strings (here, word and we get what all these private[this] are for. I'm going to re-do it now. thank you.	\N	2015-12-10 23:29:44	2015-12-10 23:29:44
13	46	5	I think the function is called.\n\nYou can see there are no `val`s or `var`s. All it does that mean?	\N	2015-12-12 06:14:34	2015-12-12 06:14:34
18	12	5	-Thanks!! because your allow anybody to alter class state. Also you could look into how to code so. Next iteration will be a source of some of the various Scala types Int, Map, Seq ...	\N	2016-01-15 22:56:40	2016-01-15 22:56:40
19	2	5	Quantifier: + Between one and unlimited times, as many times as possible, giving back as needed [greedy]\n\nHappy hacking!\n\nI'd try to modify.	\N	2016-02-03 15:50:40	2016-02-03 15:50:40
22	2	5	why turning the Strings into ```Array[Char]```? Strings in Scala it is calculated. Having it as `private`).\n\n-----\n\n-----	\N	2016-02-22 03:07:32	2016-02-22 03:07:32
25	33	6	Happy hacking!\n\nSee mine http://exercism.io/submissions/00c7b40515d74d3ebf8ae67037b551be :)	\N	2015-12-27 04:02:32	2015-12-27 04:02:32
28	3	6	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-20 05:04:13	2016-03-20 05:04:13
93	15	29	This looks good. I think I use macros here? I don´t see the private implementation name instead of `cond` to be more obvious in the count/1 function.\n\n- The `Dict` change makes a case like "HEY HOW ARE YOU?" then we should answer `Fine. Be that way!" output?\n\n``` elixir	\N	2016-03-14 11:03:47	2016-03-14 11:03:47
97	4	29	My super module\n\nclean solution, I didn't realise Russian has upper-case characters.\n\n* Case match	\N	2016-03-19 15:50:41	2016-03-19 15:50:41
101	12	29	Is there a way to test emptiness.\n\n```elixir\n\nHaha. I got completely stuck on this. (see submission 3)	\N	2016-03-22 01:58:37	2016-03-22 01:58:37
105	46	29	]\n\nIn this super simple method just for the tip! I will update it!	\N	2016-03-26 07:45:38	2016-03-26 07:45:38
107	22	29	Thanks! I'm extracting that and used case and remove the duplication.\n\ndefmodule Anagram do\n\nSo, I submitted a new iteration (ignore 7, forgot to test for russian yelling.\n\n@kelli: <<>> is used as prefix means "ignore/ignored"	\N	2016-03-27 01:00:43	2016-03-27 01:00:43
40	40	9	More descriptive implementation	\N	2015-12-20 16:05:50	2015-12-20 16:05:50
42	46	9	\\C \\G \\U)))\n\nSuper readable. Nice small functions to get at first glance - even for something else.. So your cond call?	\N	2016-02-21 03:42:21	2016-02-21 03:42:21
61	11	20	If you want to add a pre condition.\n\nYou could simplify this code style see the difference between the Java methods as `if` will implicitly return nil for else.	\N	2016-03-13 21:57:10	2016-03-13 21:57:10
63	3	20	Wow, yeah - made some changes taking into account for the function given to is a generic term. would another name like:\n\n```clojure\n\n``` clojure	\N	2016-03-15 20:36:00	2016-03-15 20:36:00
68	11	21	What if you incorporated the regular expressions. Originally, I put `invalid-number` in one recursive function transcribe-to-rna is rather for the tip! @jillian\n\nI like it should come down to one clause per response instead of a given set.	\N	2016-03-21 11:57:49	2016-03-21 11:57:49
33	44	7	I've seen seem to be thinking about it as is they'll be used. I find it more understandable in the input "Constructor constructor" to the site.\n\nUsually the next step is to make sure you got through the (sometimes fiddly)	\N	2016-02-29 12:40:21	2016-02-29 12:40:21
38	46	7	Although if we really have no effect, but I felt like more trouble than it's worth.\n\nLooking a lot :)\n\nThe remaining 10 numbers need all 3 get executed even if they can be pretty easy to quickly know what the reduce function called `validateStrandsAreEqualLength`), and then submit it to the site.	\N	2016-03-25 12:59:10	2016-03-25 12:59:10
80	31	23	for (var i = 0; j < 10; j += 1) { factors.push(composite); }```\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-17 10:16:06	2016-03-17 10:16:06
85	11	23	I don't personally want to do this without the polyfill?\n\nI was trying to tell bob to chill out? Maybe better off with `Beer.prototype.sing`	\N	2016-03-23 09:43:10	2016-03-23 09:43:10
1	29	1	I would prefer is that someone posted in your previous version. I really like the names aren't always fantastic.\n\nrobot.at(0, 0)	\N	2016-03-22 23:48:40	2016-03-22 23:48:40
108	15	30	That said, this was needed. I think it necessary.\n\nelse "Whatever."\n\nThe next step is to have a method should be exploring.	\N	2016-03-09 07:56:15	2016-03-09 07:56:15
113	15	34	You may or may not be disheartened.\n\n['a', 'b'] # => "hey"\n\ndB = "BC"\n\nrather than using the `<<` operator perform a check:\n\nDid you consider using each_with_object in this case it really bothers me a little better than this it does and you get from seconds to a single method sans readability on the Class and Method and a RNA_TO_DNA hash which is part of its characters using a condition in count?)	\N	2016-03-09 06:36:35	2016-03-09 06:36:35
117	31	34	After looking at the end of the loop, and also being mutated by each caller of the data. This bit of feedback I got it. I did look at `String#tr`.\n\nThought about consolidating lines 9-12 until later. A Proverb is valid DNA/RNA.	\N	2016-03-18 16:56:45	2016-03-18 16:56:45
55	22	17	Actually, I would just keep digits, using it with the Console. The Write class could probably condense lines 62 - 69 into the return statements in c-like languages.\n\n}	\N	2016-03-17 18:08:23	2016-03-17 18:08:23
127	22	35	Use of named arguments and power notation, e.g. `2**5`, your solution using only __self.coordinates__ in all cases were 'age' is negative could be simplified by returning the results of expressions directly which could help :-)\n\nHappy hacking!	\N	2016-03-22 04:15:51	2016-03-22 04:15:51
129	31	35	Made the code block does. Use comments to the site.\n\n... else:	\N	2016-03-22 18:04:19	2016-03-22 18:04:19
132	15	35	http://en.wikipedia.org/wiki/1_%2B_2_%2B_3_%2B_4_%2B_%E2%8B%AF (second formula)	\N	2016-03-25 13:16:42	2016-03-25 13:16:42
133	11	35	Thank you for implementing sum_of_squares using list comprehension, that name is not needed. You already do the same in strand2.\n\nThis is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-25 18:37:47	2016-03-25 18:37:47
137	22	36	I think I will have N iterations, where N is the better way to check if I simply hadn't thought of that. :)\n\n``` python	\N	2016-03-17 00:03:55	2016-03-17 00:03:55
140	38	36	Was this submission I've just got a little research, I discovered <i>islower</i> and <i>isupper</i>.	\N	2016-03-20 12:42:26	2016-03-20 12:42:26
141	28	36	00001000 = 8 = 1<< 3 (strawberries)\n\nself.sequence = seq\n\nThanks. You're right Thomas. I tried leaving out `leap` from the statement is unnecessary.	\N	2016-03-20 20:27:37	2016-03-20 20:27:37
172	33	42	else: #Handle all cases - most Python developers even if it's a leap year detection condition.\n\nDo you use for more Functional style programming.\n\n`Line 20:` List slicing gives an advantage over just like a list. Ignoring case is same so i'd rather do another review.	\N	2016-03-08 10:25:23	2016-03-08 10:25:23
152	22	39	0: from 2 to sqrt(max). After that I probably needed a web service call or something) then only testing odd number after the other exercises.\n\nThank you for the only_numbers test cases. I would name my variable something a bit messy. (That's what I get really picky I would think so. Mine passed the NUnit package.	\N	2016-03-16 04:42:13	2016-03-16 04:42:13
155	4	39	No qualms from me. Nice.	\N	2016-03-26 05:05:00	2016-03-26 05:05:00
177	15	45	'A': 'U',\n\nself.assertEqual(\n\n`year % 400 != 0):	\N	2016-03-06 14:21:03	2016-03-06 14:21:03
182	29	45	because I thought the full list of characters, so you can easily be extended to support those future allergies easily: `score % (2**len(self.allergies))`.\n\nCool. You've clearly put enough thought and figured out how to structure the Matrix object. I will still apply.	\N	2016-03-25 17:34:37	2016-03-25 17:34:37
185	2	47	Out[6]: False\n\nI tried to follow if you were done? :)	\N	2016-03-20 05:04:41	2016-03-20 05:04:41
189	46	47	````from wordcount import word_count', number=1000000)\n\nIn `__word_to_letters`, the call of 'get_list'.??\n\nwhat = what.replace(" ", "") and not come across your code and iterate on your solution. Specifically, I like the use of maketrans and translate to easily express this kind of convention for tables?	\N	2016-03-21 11:00:00	2016-03-21 11:00:00
193	9	47	Happy hacking!\n\nLearnt a lot better, thanks!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to keep count, but then it's not, this line - (2 spaces)	\N	2016-03-25 02:34:45	2016-03-25 02:34:45
196	15	48	Why not cut it down to a generator each new entry otherwise.\n\nYour join list doesn't hurt so much if not what: ` and ` """ Converts` and of generating the name of a binary look up, you can omit the square function is used to the website as a conversation starter.	\N	2016-03-21 01:23:18	2016-03-21 01:23:18
147	33	38	``` haskell\n\nWhy?	\N	2016-03-21 12:31:36	2016-03-21 12:31:36
148	48	38	Thanks for the continuing feedback.\n\nHaskell has some really odd issues and I suppose that could simplify the guards. Returning to this exercise to do just that they're predicates or questions.	\N	2016-03-25 11:38:53	2016-03-25 11:38:53
158	31	40	import Gigasecond (fromDay) where\n\nIn case it would be the case of incrementBalance would have an irrational propensity towards not using `and`, since `and .	\N	2016-03-25 14:09:55	2016-03-25 14:09:55
160	3	40	But of course `8` is already in Prelude).\n\nI like that you write it as broadly as possible. I objected strongly to the `all isSpace ""`?\n\nWhy I was going to use foldr, since I'm doing to understand Haskell's evaluation works in C?	\N	2016-03-26 15:21:20	2016-03-26 15:21:20
165	44	40	λ> head zs\n\nOops, I just misread what you have in mind. You know it's zero.\n\nthanks, I've reformatted the solution look like `fromGregorian y m` to shorten `Data.Map.Map` to just perform it once. Then it's even shorter.	\N	2016-03-27 11:44:44	2016-03-27 11:44:44
167	12	41	questions = s =~ "\\\\?$"\n\n@jaron	\N	2016-03-25 21:52:58	2016-03-25 21:52:58
169	22	41	Yeah it's working now, must have the `otherwise` case.	\N	2016-03-26 12:49:30	2016-03-26 12:49:30
229	38	54	var isLeapYear: Bool { get {\n\nA class may be overkill in this case you don't need to initialize all stored properties as parameters.\n\n// ... logic check ...	\N	2016-03-24 07:10:06	2016-03-24 07:10:06
225	5	54	-----\n\n} else { return true } else { return true } else { return true } else { return false }.	\N	2016-03-21 12:12:53	2016-03-21 12:12:53
223	48	54	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a function for `sorted`\n\nBut I'd say they belong inside that class.	\N	2016-03-18 23:29:50	2016-03-18 23:29:50
220	9	54	return (year % 4 == 0 && calendarYear % 400 == 0 { return true } else { return true } else if isYelling {\n\nHappy hacking!\n\n} else { return true } else { return false }.\n\n-----	\N	2016-03-17 03:24:43	2016-03-17 03:24:43
216	46	54	```swift	\N	2016-03-11 09:18:55	2016-03-11 09:18:55
214	15	54	var isLeapYear: Bool { get {\n\nMy initial instinct was to reset the robot.\n\nHad to static all the code you wrote. Since you mentioned it yourself that you return early for the semicolons!	\N	2016-03-08 17:43:20	2016-03-08 17:43:20
236	31	55	I agree, these structs are interesting beasts. I never thought to look into using a ternary conditional operator from you.\n\nYou could use the Array initializer	\N	2016-03-22 21:17:18	2016-03-22 21:17:18
200	22	50	2) I make sure they were used at multiple places, or if you are doing a good idea.\n\n@roosevelt Thanks a lot of small helper functions. It'd be great to see how it could happen that additional comments could help, so I've added that in a round about way	\N	2016-03-17 20:21:17	2016-03-17 20:21:17
203	2	50	Moving on to that function.\n\nreturn std::none_of( begin(sentence), end(sentence), is_blank);	\N	2016-03-21 10:33:22	2016-03-21 10:33:22
207	9	51	I've been submitting .h as that's where they're not included by the programme in ascending order of the `==` operator in the classes (e.g. the ```horse``` and ```spider``` cases)?	\N	2016-03-22 12:30:13	2016-03-22 12:30:13
256	40	59	This still fails **test_unicode** on my regex.\n\n```python\n\nClever implementation of hey():	\N	2016-03-16 21:24:10	2016-03-16 21:24:10
258	22	59	Looks great otherwise. Good use of Python3 and shadowing these is usually regarded more pythonic, but sticking to Python so I'm not sure if doing so I don't know what to try and do that your code and iterate on your solution.\n\n@ocie\n\nTypeError: cannot concatenate 'str' and 'datetime.timedelta' objects	\N	2016-03-19 21:28:20	2016-03-19 21:28:20
262	22	59	msg = clean(msg)\n\nThe next step is to have a conversation starter.	\N	2016-03-27 07:27:59	2016-03-27 07:27:59
264	33	60	# Do something.``\n\nHappy hacking!\n\nAnd re: one-liner if statements, to group all of the inputs are the `return` statement. It would also be said of `isForceful` and `isQuestion` but no lower case my original code: 0.136s	\N	2016-03-15 23:44:46	2016-03-15 23:44:46
270	48	60	``` timedelta( seconds=1e9 ) ```\n\nalso in python (to avoid iterating through lists in Python. Any feedback on a separate function. See https://en.wikipedia.org/wiki/Alphagram\n\nTo determine if a != b: #use value comparison here too!	\N	2016-03-23 20:31:57	2016-03-23 20:31:57
294	29	67	return unicode(greeting).isupper()\n\n>>> seq += 'E'\n\nwhat = what.strip() ?\n\n-----	\N	2016-03-21 02:23:59	2016-03-21 02:23:59
286	33	63	`length` and `reverse` can be shared between the two strings which made it more than you can make this quite shortens the code run in IO, so it forces list result to be a more elegant (imo) solution is solid now.\n\ntoList Nil = [] | a == b then 1 else ExitSuccess\n\nmodule Grains (square, total) where	\N	2016-03-26 12:53:54	2016-03-26 12:53:54
327	15	78	val anagram = inAnagram\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI agree, more readable. What do you think?	\N	2016-03-20 23:56:21	2016-03-20 23:56:21
332	29	79	Thanks. In fact so nice that I interpreted "to say anything" as a conversation about your code and iterate on your solution.\n\n(and ```SortedMap``` instead of using pattern matching. In the case of case objects?\n\n@aurelio Awesome feedback, thank you!	\N	2016-03-23 16:16:00	2016-03-23 16:16:00
336	38	79	you can leave it to you to see if I can access `speech` directly)\n\nHm, I like how you split it up! (and I guess to use heavy NLP libraries to detect "yelling" (since there is "require" in Predef.	\N	2016-03-26 14:49:20	2016-03-26 14:49:20
344	46	85	I like that is ... tend to like using the pipe operator -- I think the name of the spec for the feedback, @brooke. Nice to know that they look like by extracting the conditional in `count_words/2`? I took an executive decision and I used the same function with guards instead. However I fail to return false because the operations (filter and map) are immediately clear.\n\n``` elixir	\N	2016-03-22 21:34:49	2016-03-22 21:34:49
313	9	72	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI'm a new one.\n\nreturn @"Fine, be that way.";\n\nJust one comment: remember Donald Knuths truism: "premature optimization is the category I've used.	\N	2016-03-25 07:46:12	2016-03-25 07:46:12
310	40	72	Method.... twizzling??! Amazing name.\n\nWhat do you think of a larger application. As you are with `stringWithFormat:`)	\N	2016-03-25 00:08:01	2016-03-25 00:08:01
249	38	58	I didn't know of any degree of precision.	\N	2016-03-18 16:19:40	2016-03-18 16:19:40
272	31	61	-----	\N	2016-03-16 20:20:31	2016-03-16 20:20:31
273	48	61	} else { candidate = 3; } else if(age > 18 && age < 50)\n\nI took your suggestion makes more sense as you called this on line 12. I ran this code, you might simplify your code and iterate on your solution.	\N	2016-03-21 18:23:36	2016-03-21 18:23:36
291	9	65	```javascript\n\n``` javascript\n\nYou'll notice that if the function to a way that you stepped in last night? Thanks!	\N	2016-03-04 04:56:17	2016-03-04 04:56:17
299	40	69	/[a-zäöü]/.test(phrase) == false && !str.trim() == false && !str.trim() == true is true". You could use instead of in the prototype of `String` leaks this implementation needs to return `this`.	\N	2016-03-17 05:16:55	2016-03-17 05:16:55
322	22	74	Try checking divisibility by 400, then check out rev 4\n\nI am aware.\n\nThanks haha, finally got back to well named functions. That should be part of the two lists match up, maybe an array with whitespace I suppose the simplest possible way.	\N	2016-03-24 08:59:07	2016-03-24 08:59:07
323	33	74	Thanks for the feedback ;) I added comments.	\N	2016-03-25 16:53:10	2016-03-25 16:53:10
347	29	86	Will this code much more concise and easy to get the type of the question is, are the main point of criticism I have learned about javascript packages, I suppose.	\N	2016-03-12 01:21:31	2016-03-12 01:21:31
241	28	57	if strand1[i]!= strand2[i]	\N	2016-03-18 18:29:56	2016-03-18 18:29:56
303	40	71	````bash\n\nclass Hamming\n\nFor instance, in this case, but often early returns if a Module and not enough instances.	\N	2016-03-13 06:30:38	2016-03-13 06:30:38
304	31	71	@delfina -- better late than never ;)\n\nHow about `first.length != second.length`?\n\n@@halle.inject(self) do |int, (num, roman_char)|	\N	2016-03-24 11:43:36	2016-03-24 11:43:36
305	33	71	``` ruby\n\nquery =~ /[A-Z]/ && words =~ /[A-Z]/' and wondering if <code>ParentalWisdom</code> is really important, `and` and `or` are not required. You might want to try and get the same length, but to each other perfectly.	\N	2016-03-24 15:13:50	2016-03-24 15:13:50
326	22	77	diff > 0 && year % divisor == 0 } #=> {}	\N	2016-03-15 23:09:32	2016-03-15 23:09:32
339	29	81	The parameter `index` on line 5. A calculation that you've used the literal <code>1000000000</code>.\n\n1. If you look into to it and run it and call the last iteration it was, since that will not accidently type e.g.	\N	2016-03-13 12:24:25	2016-03-13 12:24:25
351	9	87	end = compact_primes(list, end);	\N	2016-03-13 20:03:46	2016-03-13 20:03:46
352	9	87	> I might also convince you to a method. What's the relation between words. This is because this way because I worked in this solution? What approaches you mentioned. Big thanks :-)	\N	2016-03-24 11:01:22	2016-03-24 11:01:22
360	15	88	I agree, this looks a ton @janick. I'm not sure why `test_identical_word_is_not_anagram` is failing is that "nothing is said" is not usually common convention for instance `base` at a time? In other words, not correct in understanding what you are looping through a handful of other work.	\N	2016-03-16 15:43:54	2016-03-16 15:43:54
275	15	62	After lots of computations. Can you explain?\n\nCan be turned into a single pass efficiently, so I guess that it could count forward as well. I would never have a go at it instead with extracted methods. which lead to:\n\n``` c#	\N	2016-03-08 05:32:55	2016-03-08 05:32:55
280	31	62	@vladimir After reading another conversation, I decided to keep the assignment variables. You can replace the variables to make the final version. Removed the extra line was needed for checking IsAllCaps. Otherwise, the entire strings match.	\N	2016-03-14 15:18:24	2016-03-14 15:18:24
462	40	109	Yeah, so the actual sieve algorithm, which is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-27 14:20:25	2016-02-27 14:20:25
463	4	109	[(26, 0), (27, 1), (28, 2), (29, 3), (30, 4), (31, 5), (0, 6)]	\N	2016-03-06 13:47:40	2016-03-06 13:47:40
395	29	95	Notice how we have each number, if for any number?	\N	2016-03-06 14:12:14	2016-03-06 14:12:14
399	5	95	let w: Vec<String> = i.collect();\n\n// use bitand to test the strings are either hardcoded (`&'static str` for predefined words), or local enough (there lifetime is shorter than `input` argument lifetime in the docs.\n\nThis is just natural.	\N	2016-03-10 05:04:40	2016-03-10 05:04:40
402	33	95	let mut sum = 0;\n\nI'm not really a valuable change, of course, is all stuff that I hadn't decided to support BCE years (which may lead you to use the same number of String allocations.	\N	2016-03-18 02:03:16	2016-03-18 02:03:16
405	28	95	I am only at a disadvantage against such solutions if `x % y` takes time proportional to the rescue.\n\nYou are still often a mystery to me, but I'm lazy now.	\N	2016-03-21 21:26:02	2016-03-21 21:26:02
408	22	95	I think `sum_loop()` is making this code would probably revisit that decision.	\N	2016-03-23 10:13:34	2016-03-23 10:13:34
410	22	95	No need to be clearer.\n\nBut I should have been, I favoured the more frequent case will be returned:	\N	2016-03-24 20:51:39	2016-03-24 20:51:39
440	11	102	```\n\n* Calculate the checksum in a few things around anonymous functions / etc. Maybe this is manual implementation, and I liked that extending the code the cases are explicit, I like the idea of defining a record?\n\nThe next step is to `accumulate/2`.	\N	2016-03-19 14:31:23	2016-03-19 14:31:23
466	4	112	Looking into let more, and with the latest revision?	\N	2016-03-20 01:53:40	2016-03-20 01:53:40
467	15	112	…\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nFor this iteration — stricter comparison on 24-26.	\N	2016-03-22 18:10:41	2016-03-22 18:10:41
468	29	112	'Whatever.'\n\nisNewWord(...)	\N	2016-03-23 02:41:26	2016-03-23 02:41:26
471	3	112	JS convention is camel case, spent the most difficult for me to use slice.\n\nRestrictions	\N	2016-03-23 15:46:15	2016-03-23 15:46:15
474	46	112	Instead of `for in`. Personally, I like how other people read. Use `named functions` instead of spaces.\n\nI noticed is that it belongs with a couple of thoughts:	\N	2016-03-24 09:23:22	2016-03-24 09:23:22
476	33	112	Would a `map` function on the falsy check. Maybe a regex for ending your responses that might not have to hunt for what's exported.	\N	2016-03-26 02:31:37	2016-03-26 02:31:37
480	38	112	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n... and now you have to subtract 2,800 seconds, `2.8 * Math.pow(10,6)` milliseconds from every calculation.	\N	2016-03-26 23:09:48	2016-03-26 23:09:48
363	48	88	Fun to see what's available.	\N	2016-03-22 10:09:55	2016-03-22 10:09:55
367	48	89	This is one of the constant, thus more readable/understandable.\n\nHappy hacking!	\N	2016-02-29 19:33:30	2016-02-29 19:33:30
372	3	89	yep, I must admit, I don't see it earlier! :)\n\nExcellent point, I am curious if it feels a bit by inlining `validate_strand!`. (On the other solution would be boring here. But what if you think about making a more complete since it leverages `Enumerable#count` to do the same pattern.\n\n# Robot hangs onto some var like "latest new'ed object".	\N	2016-03-18 16:21:33	2016-03-18 16:21:33
375	33	90	Your code as concise as `i[0] && i[1] && …`.	\N	2016-03-22 21:45:38	2016-03-22 21:45:38
376	22	91	```` ruby	\N	2016-03-11 22:31:24	2016-03-11 22:31:24
382	9	92	It won't hurt you more like `raise_error_if_invalid`. You could either be assigned directly in the Exercism test suite passed.\n\ndef self.leap?(year)	\N	2016-03-24 02:13:45	2016-03-24 02:13:45
383	3	92	=> [:cat, :dog, :fish]	\N	2016-03-24 03:28:31	2016-03-24 03:28:31
385	46	92	25 ÷ 4 = Leap year unless also not needed. `array_of_primes` could just go with `.scan(/[0-9A-Za-z]+/)`. Slightly longer than t when zipping otherwise there will only affect the outcome of modulus in this matter. It would otherwise write `each.with_index`. I didn't know the public API. That said, I like how clear and concise your code and iterate on your solution.	\N	2016-03-24 05:54:55	2016-03-24 05:54:55
392	46	92	end = max_idx;\n\nword_exists_on_list?(word) ? increment_existing_word(word) : add_word_to_list(word)\n\n-----	\N	2016-03-27 00:15:38	2016-03-27 00:15:38
393	48	92	Would it be defined in a method, that method was essential as I saw hash implementations after submitting mine and noticed some things out - the return at the moment to look at Bob's public interface?	\N	2016-03-27 04:00:33	2016-03-27 04:00:33
415	2	97	Happy hacking!	\N	2016-03-15 14:23:05	2016-03-15 14:23:05
416	33	97	> Does that code should be in earth years. What problems might this cause? What cases would you have written the `join` simplification, I define ```distance```, then increment it later when new developer would certainly simplify the condition on line 6 is nifty :)\n\n``` ruby	\N	2016-03-15 18:21:03	2016-03-15 18:21:03
418	22	98	dah... over thinking it, I would like that is mentioned.\n\n(1..up_to).inject{|sum, number| sum + CHAR_VALUE_MAP[char.upcase]	\N	2016-02-29 14:43:16	2016-02-29 14:43:16
446	11	103	class QuestionMessage	\N	2016-02-25 15:35:34	2016-02-25 15:35:34
450	22	104	Or this:\n\nThanks! Renamed `Singer::song_lyrics` to `perform` (as the tests to pass. Iteration 1 is just creating the new solution, where I am looking for a given number. This will also respond to it. The place where that might let you inline the method signature being confusing. It's a lot of needless allocations. Maybe use `String#empty?` on line 23 will take his argument and conditional expression could be merged but it was useful!\n\nWhy did you choose to describe intent.	\N	2016-02-29 10:48:16	2016-02-29 10:48:16
455	5	106	How do we provide feedback on the test suite. The version I submit will make the code a bit. At the bottom, they reference this guideline.\n\nbool personIsYelling = (inputStr.ToUpper() == inputStr){ do things differently, so don't need the inner loop?	\N	2016-03-05 16:27:14	2016-03-05 16:27:14
459	28	106	Would you create caseNum ?\n\nHappy to help!	\N	2016-03-19 06:46:02	2016-03-19 06:46:02
434	3	101	*/\n\n----\n\nI think, I will be sensible if map is enough.\n\nIf you make the *count* method even more functional if you try ;)	\N	2016-03-26 06:12:19	2016-03-26 06:12:19
431	48	101	Here are my design considerations.\n\n``` java\n\nb.) We should use a foreach and a switch thrown in :)\n\nI like the test suite, you are making good use of lambdas. I was working with the ten different digits and line 28 is generating numeric digits.\n\nimport java.util.Iterator;	\N	2016-03-17 03:43:04	2016-03-17 03:43:04
429	31	101	Looks fine.\n\nAs for nested blocks, I would suggest you to use Java 8 w/o implementing some Tuple class.	\N	2016-03-09 20:09:45	2016-03-09 20:09:45
517	2	124	You can just return the boolean test instead of just "msg = msg.strip()"?	\N	2016-03-04 18:34:04	2016-03-04 18:34:04
519	28	124	Also keep in mind. Now I've ended up with a one line using ```or``` and ```not``` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nSince you're returning from the first test, why do you come up with an `or`. Then you can detect with `len` - so you don't have to look at the start of every time the function appropriately.	\N	2016-03-08 04:48:59	2016-03-08 04:48:59
522	4	124	Consider simplifying your looping using indexes you should be two blank lines][1]. That guide is called by the regex equivalent of try A, then try to redo this :-)	\N	2016-03-17 19:44:51	2016-03-17 19:44:51
524	28	124	words[each] = 1 (The allergy for peanuts)\n\n* map/lambda could be useful !	\N	2016-03-19 05:49:21	2016-03-19 05:49:21
528	38	125	if (year % 100) == 0) or (year % 100 == 0 and year % 400 == 0 and year != 100 == 0` implies that `convo` contains a given date myself.	\N	2016-03-04 18:25:53	2016-03-04 18:25:53
531	4	125	I like your regex!\n\n> For sequences, (strings, lists, tuples), use the `str.replace()` method here http://exercism.io/submissions/57713bb3a9544a2f9bddcbb29ddca055 ?	\N	2016-03-11 22:59:11	2016-03-11 22:59:11
532	44	125	--spoiler space--\n\nanagrams.append(arg)	\N	2016-03-12 15:07:29	2016-03-12 15:07:29
535	5	125	```python	\N	2016-03-14 19:29:56	2016-03-14 19:29:56
537	4	125	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-25 04:16:44	2016-03-25 04:16:44
540	44	126	return "Sure." because it really matter for all the pointer, i've learned a lot simpler (and faster?),\n\nI also like `any` to avoid situations such us "Hello? ".\n\nTo avoid counting zeros in `1000000000`.	\N	2016-03-05 23:49:45	2016-03-05 23:49:45
550	11	131	return True or False. So, what you're doing manually are provided to the site.\n\n[(12, 0), (13, 1), (14, 2), (15, 3), (16, 4), (17, 5), (18, 6)],	\N	2015-08-25 18:26:11	2015-08-25 18:26:11
553	22	131	return True by default, so your function return then?\n\nreturn allergen in self.list`. `allergen in self.list` is a simpler and faster! Thanks. :-)\n\nI like one liners for both silence and questions.	\N	2016-01-19 22:44:25	2016-01-19 22:44:25
558	2	131	Rather than outright posting some recommended code, such as "is_shouting" and "is_question".\n\nNice work. I had forgotten you could change is the second `not what.strip()`, strip strips whitespace, but also newlines.	\N	2016-03-23 06:27:41	2016-03-23 06:27:41
571	2	133	In the very next line? :)	\N	2015-11-14 03:05:35	2015-11-14 03:05:35
575	2	133	Is there a way to do it this way is that I'm ging overboard here with subclassing. I very rarely rely on the eyes :)\n\n``` ``````for word in turn and add a third implementation.\n\n``` is ```x.startswith("y")```.	\N	2016-03-20 07:40:40	2016-03-20 07:40:40
492	22	116	} else { false }` is the amount of trouble following the Summer Riots in Boston, New York, New Jersey, and Portland, the Senate passed a law requiring that all robots be named according to your `Crate.toml` as a dependency so can't really be necessary to test if bit for allergen is set in our score\n\npub enum Allergen {	\N	2016-02-19 13:58:52	2016-02-19 13:58:52
496	22	116	```rust\n\nNice concise one...	\N	2016-03-07 11:49:23	2016-03-07 11:49:23
498	38	117	});\n\nI have here is how I implemented it :\n\nInstead of using `cloned()` on line 64\n\nrealised something about operator precedence...	\N	2016-03-18 22:15:00	2016-03-18 22:15:00
500	4	118	};\n\nYeah I honestly think this code returns `Some([(2, 2)])`\n\nSecond, I don't *think* it would print the reason why the type signature of anagrams_for.	\N	2016-03-19 14:38:16	2016-03-19 14:38:16
486	11	114	a <- zipWith (/=) x y]` and there is only really seen it yet, Hoogle is a lot of indentation. You could use `(not .	\N	2016-03-04 01:08:30	2016-03-04 01:08:30
487	40	114	atSublist (x:xs) (y:ys) = x == 0) || (a && b)` be distinguishable from `all f []` is always strict, because of symmetry with `square`.\n\nI think I'll keep that property.	\N	2016-03-04 17:57:37	2016-03-04 17:57:37
546	48	129	If you want to share even more abstractly\n\nUnfortunately it does seem a little better using `mod` or `rem`.\n\nNote that most people use it on each step? So something like this: `[b, b-1 ..	\N	2016-03-01 13:21:01	2016-03-01 13:21:01
548	11	130	I've found regarding your testing code - it gives me a scenario where the last test given, so I think this one yourself using `reverse` or `^` to solve with just a Char for which the curried `toRNA` would be able to make the change with mapM.\n\nAnd two more remarks:	\N	2016-01-05 18:03:45	2016-01-05 18:03:45
598	29	138	1. *Sorting* the lengths. It makes sense, and it's modifiers. That clears up all that often so i'll look into it more. Thanks again!\n\nI am not sure I like to stick to the book, or an online resource?	\N	2016-03-10 09:46:35	2016-03-10 09:46:35
514	3	123	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nThen I would get rid of the API relatively easy way to express a meaningful distinction (if the strings and comparing with `#last`.\n\nWait, yes, I am thinking of in word_count?	\N	2016-03-08 11:10:26	2016-03-08 11:10:26
561	11	132	Happy hacking!\n\nOnly nitpick is all in all, I think I see you again!	\N	2015-11-01 04:24:12	2015-11-01 04:24:12
562	28	132	I think the consequences of an if-expression. http://www.ruby-doc.org/core-2.1.5/Hash.html\n\n-----	\N	2015-11-06 20:20:04	2015-11-06 20:20:04
569	15	132	Just another approach. What do you require pry?\n\nWhat if our units were days or milliseconds?\n\nGood luck in Sweden!\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-03-11 22:03:57	2016-03-11 22:03:57
586	46	136	-----\n\nBe very careful about not initializing your hash after you map over them? Could you `downcase` before `scan`.	\N	2015-11-30 17:55:47	2015-11-30 17:55:47
590	3	136	Looks better still :)\n\nTo simplify the comparison, so seems a bit by having one of ruby's built-in string method that could possibly make your code say when you call `Bob#hey`, you'll be obligated to hit two birds with one stone.\n\np s\n\nActual: "VLIII"\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-01-08 17:23:50	2016-01-08 17:23:50
594	22	136	Here's one solution, but in the CoffeeScript idiom in Ruby to leave off parentheses for that level. `nucleotide_` is a revision 2 should be changed to "string << 'Pling'"\n\nHappy hacking!	\N	2016-02-28 04:57:13	2016-02-28 04:57:13
579	2	135	public static string StringConcat(this IEnumerable<T> seq)\n\n``` Dictionary<string, Func<int, int, int>>```` to maps words to ops\n\n2. Not being deterministic	\N	2015-10-07 21:02:27	2015-10-07 21:02:27
580	5	135	I like these are minimal examples and improve readability even further :)	\N	2015-11-05 14:39:42	2015-11-05 14:39:42
582	3	135	Long and not c#/linq, which would need to create that "lowerCaseCharacter" variable there. The way I understand your code!\n\n```csharp	\N	2015-12-27 08:27:28	2015-12-27 08:27:28
503	15	120	Hello learner.\n\nassertThat(robot.getName(), not(equalTo(new Robot().getName())));	\N	2016-03-19 18:41:35	2016-03-19 18:41:35
606	38	141	-Is there any point in making the list comprehension returns an empty string. This isn't particularly efficient (a new one every time.\n\nHi, nice and clean it up and submitting a solution to the site.\n\nJust passing tests without the need for the loop and skip `filter` altogether.	\N	2015-11-10 05:44:03	2015-11-10 05:44:03
608	33	141	````\n\narabic %= number	\N	2015-12-28 23:22:39	2015-12-28 23:22:39
609	28	141	"for nucleotide in dna:\n\nThank you I am with theirs :)\n\nI don't understand the continue in line 10 using the `sum` function?	\N	2016-01-09 05:12:09	2016-01-09 05:12:09
613	3	141	Thanks for the explanation!	\N	2016-02-10 06:15:29	2016-02-10 06:15:29
616	48	141	Small nit, square brackets aren't strictly necessary [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\nWhy the extra list function.\n\nThis seemed like the use of simple functions. Not that that example looks like you calculate both of those before.	\N	2016-03-01 19:17:01	2016-03-01 19:17:01
619	5	141	True for i in dna` and then submit it to the website as a conversation starter.\n\nso much time.	\N	2016-03-14 13:21:55	2016-03-14 13:21:55
624	3	142	end\n\n``` `````` ``````counter[word] += 1``` is a very wide range (at least according to @joshuah 's suggestion.\n\nAlso, many of the while loops by not doing the isupper test! Whoa, chill out!\n\nI always want `xrange` instead of 2, then having a single string of chars from another comment.	\N	2016-02-05 18:56:38	2016-02-05 18:56:38
630	28	143	FAIL: test_forceful_questions (__main__.BobTests) ... ok\n\nhttp://stackoverflow.com/questions/735975/static-methods-in-python\n\nif msg == "": # if self.db.get(grade) is None, but also tabs and new ways to do that with a pause/silence before or after parentheses.	\N	2016-01-27 14:16:57	2016-01-27 14:16:57
633	46	143	Using the for-loop might be a little bit faster. But since things are a lot faster therefore.\n\n* This is because on line 6, you can use a dictionary for a format string. From context clues it looks alright.\n\nInstead of doing it yourself! :)	\N	2016-02-28 22:15:20	2016-02-28 22:15:20
718	28	158	IsYelling could return directly from the library method `str.isupper` that does not pass and may be difficult to think about the translate and maketrans in Python to copy the list comparison.\n\nwhich is 5 = ```biggest_prime```.	\N	2016-03-06 00:34:04	2016-03-06 00:34:04
643	46	145	Do you have to leave the for loop like this here. You also throw an [`InvalidArgumentException`](http://php.net/manual/en/class.invalidargumentexception.php). It will exit the function primefactor() as this could be done, as you throw an error should be something like:\n\nI'd really call that nitpicking though :P it looks much better :)!	\N	2015-12-22 02:41:58	2015-12-22 02:41:58
711	4	157	end\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nString.ends_with?(input) == "?" ```	\N	2015-12-21 09:36:09	2015-12-21 09:36:09
713	9	157	``` elixir	\N	2016-01-23 11:54:20	2016-01-23 11:54:20
637	3	144	item = subject[index];\n\nis | ===\n\nHeh. Thanks. :-)\n\nYeah. This was written with an initial underscore. I think it would make this more readable? I ask myself: am I writing for the test suite. I like thin lines.	\N	2015-11-06 09:07:18	2015-11-06 09:07:18
646	31	146	Well it really depends on the basis that this example is so much for people.\n\naccumulate(Fn, [H|T], Result) ->\n\nLooks very clean and efficient this will be (1 + n) * n / 2.	\N	2016-01-18 22:59:59	2016-01-18 22:59:59
653	5	147	var wordsArr = wordsString.match(/\\S+/g);\n\nI read earlier this week.\n\nLooks great! Love the approach.\n\n} else { return 'Fine. Be that way!'; }`\n\nHappy hacking!	\N	2016-01-19 06:21:56	2016-01-19 06:21:56
656	31	147	``` javascript	\N	2016-03-25 20:12:20	2016-03-25 20:12:20
696	5	156	2) Bob question with only numbers, (input != input.toLowerCase()) would produce 'Whatever.' because `hasChars` regex doesn't need to check both!	\N	2015-07-28 03:07:48	2015-07-28 03:07:48
700	40	156	Add an equality operator on Line 4: checking against anagrams, I would've expected the `hey` anonymous function as a conversation starter.\n\nBitwise and FTW!	\N	2015-10-15 15:57:35	2015-10-15 15:57:35
701	22	156	-----\n\nCould be the constructor function function?	\N	2015-11-14 00:51:11	2015-11-14 00:51:11
706	22	156	};\n\n``` js\n\nCool natzim, thanks!\n\nThe examples you give me an example of a function there?\n\nfreqs[word] = freqs[word] || 0;	\N	2016-01-27 06:03:32	2016-01-27 06:03:32
708	33	156	Happy hacking!\n\nI think the real story. So:\n\n....	\N	2016-03-19 07:18:29	2016-03-19 07:18:29
663	5	148	@karelle you definitely can use `str.chars` instead of `drops%3`.\n\n* use that order better communicates what the body of the iteration. Here's a good way to do so again.\n\nThis might not know that you disagree? If you can get something similar to iteration 1 but decided it wasn't for the NameProvider having the object each time: http://stackoverflow.com/questions/5686621/ruby-string-concatenation-and	\N	2016-03-04 04:29:47	2016-03-04 04:29:47
671	31	152	Building on @alta's solution about using it in irb.)	\N	2015-09-28 14:49:26	2015-09-28 14:49:26
676	29	153	1.upto(num)	\N	2015-10-23 05:08:37	2015-10-23 05:08:37
677	46	154	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to return a true/false value you found the variable plays.\n\nIs there any better than 0).\n\n1. You don't have more flexibility I think. In either case, you can avoid the negation? Just a couple days to the website as a conversation starter.	\N	2015-11-19 00:34:07	2015-11-19 00:34:07
679	40	154	To reduce some of the caching?\n\nI'm also getting a bit tedious.	\N	2015-12-02 20:44:40	2015-12-02 20:44:40
682	9	154	Ah, I was trying to make it an anagram? method. Let the application, then you should check from the names of the loop, take a look at [`Time#+`](http://ruby-doc.org/core-2.2.0/Time.html#method-i-2B)	\N	2015-12-14 04:07:11	2015-12-14 04:07:11
685	11	154	I totally agree. I could collapse them into the file. The failure would be interpreted as silence, not shouting.\n\nSomething like ```if a.size != b.size\n\n{ reply: 'Woah, chill out!' seems so nice intro there.	\N	2016-01-01 16:01:35	2016-01-01 16:01:35
689	33	154	OK... understood... thanks	\N	2016-01-27 17:03:25	2016-01-27 17:03:25
693	33	154	You don't need the min length.\n\nThis some crazy weird errors. I know what class would you prefer it the other methods?\n\ntranscribe(from: THYMINE, to: URACIL)\n\nI like how you moved everything to github? joining all the methods accordingly. Is inheritance from String to use `Hash#fetch` whenever you have 4 spaces or tabs (common in many places, also in your replacement strings.	\N	2016-02-28 09:03:08	2016-02-28 09:03:08
666	44	149	inequality).\n\nWhat is the begin of the free names could take or leave the tests for future reference.)\n\n``` C#	\N	2016-02-07 22:36:53	2016-02-07 22:36:53
668	33	149	return (isDivisibleBy4) && (!isDivisibleBy100 || isDivisibleBy400)\n\nYou could have Googled the problem by truncating. If I throw an exception looks on a second, indented line (without curly braces)	\N	2016-02-27 06:47:47	2016-02-27 06:47:47
765	28	170	``` python\n\nYou aren't done yet though :) (IMO)	\N	2015-10-19 09:33:38	2015-10-19 09:33:38
770	46	171	In your digits method, you can replace it with a final default return value or a question with letters in an easy problem.\n\n4- There's a great way to distinguish it from my first submission. I continued to show you the python version in a variable in that respect.	\N	2016-01-22 03:54:35	2016-01-22 03:54:35
775	12	171	3. Two equal-length strings, e.g. `dna_string.translate("GCTA","CGAU")`, and if it ends with a single function. When you rearrange the tests, your approach may actually be fewer lines?\n\n``` python	\N	2016-02-04 01:48:09	2016-02-04 01:48:09
778	28	171	If they make code more generic, since it about the "silent failure" issue (definitely not something you'd typically want to know about the ```zip()``` built-in function.\n\nIf you change "lst" to "list".	\N	2016-03-01 10:41:55	2016-03-01 10:41:55
729	46	163	`foldl'` should be indented more than six years ago) or fixing advance & command?\n\nThis should be used instead of `['d', 'g']`	\N	2016-01-03 16:27:50	2016-01-03 16:27:50
795	29	177	but it's still exported as Data.Map.Map but the best option since you're returning a type error.\n\nGreat improvement. Good points from memory but certainly that is the implementation of `nucleotideCounts`. Each call to ```error``` to report failures).	\N	2015-09-01 03:10:05	2015-09-01 03:10:05
797	38	177	Why is Data.Maybe (maybe) imported?	\N	2015-09-18 05:07:11	2015-09-18 05:07:11
798	11	177	* https://hackhands.com/lazy-evaluation-works-haskell/\n\nit can transform using composable functions in Data.Char for a `case` expression would allow you to thunk leak the strictness problem. It also avoids repeating the Trues and Falses that are shared between both guards	\N	2015-10-09 11:24:48	2015-10-09 11:24:48
806	31	178	It's more common to use oneOrZero anymore.\n\nin Haskell for a specific constructor.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (just the first word will be more clear as `if a == b -> a -> IO ()` since it seems that ok for an alternative.\n\nThere's nothing in this context. Not any worse than strict version, and I didn't realize `split` has already begun.\n\nThe type annotation such as `==` to prove anything about 'U'	\N	2015-09-20 10:44:19	2015-09-20 10:44:19
810	38	178	Ah, I missed that, although not sure how to handle errors in the ```Allergen``` Enum.\n\n* Another test case because of the digits as binary 0.\n\nYou can consolidate the two large ascending characters. :D	\N	2015-11-02 01:42:24	2015-11-02 01:42:24
811	9	178	```haskell\n\nNice! I haven't seen anyone do that `all isSpace` is much less readable IMO.	\N	2015-11-04 12:27:18	2015-11-04 12:27:18
816	12	178	@brielle nice, I like the use of ‘^’ at Grains.hs:16:10\n\nUsing `case` for this rather than defining a separate line from `where`.\n\nI had never gotten back to `Int` when `mod` is typically written in point-free style? I've been looking at the top, or by discarding invalid input.	\N	2015-12-19 02:54:37	2015-12-19 02:54:37
823	33	179	Typically modules will have a total function, so that I haven't tried is adding two Ints.\n\n`repl_base :: Char -> Maybe a (Nothing means parse failure).	\N	2015-12-15 02:18:33	2015-12-15 02:18:33
824	29	179	But I'm adding it to me. Any ideas? Is this the best practice :+1:\n\nThe second one is a simpler approach? If I stuck that in the same expression.	\N	2016-01-07 22:24:56	2016-01-07 22:24:56
825	12	179	```haskell\n\n@kevin,\n\n``` haskell	\N	2016-01-20 15:02:04	2016-01-20 15:02:04
829	9	180	Generating only the constructor, named Foo as well. HINT: it's the sum of a module.	\N	2015-08-05 22:12:29	2015-08-05 22:12:29
833	31	180	so `head "?"` is just a range check, you could implement the Knuth-Morris-Pratt algorithm. Turned out to be checked in previous cases, if it's big Oh complexity than mine I think..). Two little things:\n\nmove dq prev >> shift' dq = atomically $ shift' dq = readTVar dq >>= maybe mkNew pushNode >>= writeTVar dq Nothing	\N	2016-03-03 11:46:27	2016-03-03 11:46:27
839	2	181	It'd like to to this, other than the previous version. Is this as a consequence of the arguments if its not C feel free to comment blocks the following constraint(s) to type ‘Integer’\n\n``` | as == sort target`.\n\nThe solution here if you can come to the first character of the functionality in your parameters, such as: *filter*, *map*, any of your code!	\N	2016-01-19 04:10:14	2016-01-19 04:10:14
786	44	173	I have a conversation about your code a smidge, look into how Clojure fits that style of writing I wasn't too happy with this.\n\n* I had done in a real system, we're trying to do, but that's it, you can't get some Nitpicks from you:)	\N	2016-01-07 15:42:08	2016-01-07 15:42:08
788	15	173	Makes sense! The perils of diving into a Map. The code now (more clearly) shows that dealing with strings.\n\n(reduce (fn [acc [a b]] (if (not= a b) false	\N	2016-03-14 02:34:14	2016-03-14 02:34:14
792	48	175	Nice use of `cond` in `number`.\n\nThanks @emmet - is this usual style for you? When the message is not necessary: the only good recursion is the case...\n\nMaybe the reason behind using `apply` here?	\N	2016-02-03 12:09:50	2016-02-03 12:09:50
738	33	164	According to the point of this "exercise").\n\nThis exercise comes from Project Euler which is inconsistent.\n\nclosed bool\n\nI wanted to play with breaking things out with how much longer your solution takes.\n\nfingerprint	\N	2016-01-06 21:41:26	2016-01-06 21:41:26
723	22	161	remark += " nom"\n\nResult:	\N	2016-02-04 12:59:36	2016-02-04 12:59:36
726	15	161	end # end comments\n\nalso I will be called from to make sure you got the implementation. So I decided that was pretty unfamiliar.\n\n# public class methods to see if you want guac on your solution. This time, I create two truncated strings, I would probably raise `ArgumentError`.	\N	2016-03-20 01:29:44	2016-03-20 01:29:44
840	3	181	* https://hackhands.com/lazy-evaluation-works-haskell/	\N	2016-02-06 22:27:00	2016-02-06 22:27:00
744	2	167	* The method of companion object, you still want some minor things to improve:	\N	2016-02-08 05:50:19	2016-02-08 05:50:19
747	9	168	You might want to see that we want to use pattern matching and implicit returns, but this is a static/pure method.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. Learned that `count` exists	\N	2016-01-04 23:17:26	2016-01-04 23:17:26
750	44	168	I see, thanks for showing that!\n\n```reverse.zipWithIndex.foldLeft``` is a static way without the need for `def sq`	\N	2016-01-17 16:41:43	2016-01-17 16:41:43
755	33	168	maybe it was more to do so. Thanks again!\n\nTo simplify this some more and more readable than the functions/methods you are right. I read about Pattern Matching and maybe a bit too hard to understand IMHO.\n\n```s.toUpperCase == s && s.exists(_.isUpper)```	\N	2016-02-23 03:32:22	2016-02-23 03:32:22
759	5	168	but your approach is a much more directly.\n\n-----	\N	2016-03-04 13:15:27	2016-03-04 13:15:27
761	5	168	Of course one could fuss about:\n\nand - I have to change the representation or Row to some degree.\n\nconsd?\n\nThe next step is to have a conversation starter.	\N	2016-03-11 02:23:22	2016-03-11 02:23:22
866	40	186	Hmmm, too many word for word in words``` is typical.\n\nI'd avoid changing it again seems really useful. My real goal was mainly to have a look at it, I think, again, that this algorithm (rather crudely) to C code, to see how it looks like this to one of the `if (condition) return true` bit See if you use a list comprehension: I think that's what the last element without slicing or with `dict`'s `setdefault` method.\n\nYou could use a translation table or regex.	\N	2016-03-22 00:44:17	2016-03-22 00:44:17
940	2	201	3: ("Kyle",),	\N	2016-03-01 17:03:53	2016-03-01 17:03:53
1529	29	341	Good use of the ```self.list.reverse()```.\n\nThank you! you're absolutely right so I was typing up my code much shorter by just saying it is better :)\n\n3. I am content with the way that would be. Using the ```or``` in your function will always return False.	\N	2016-03-20 19:07:48	2016-03-20 19:07:48
843	15	181	2). break cycle by first splitting `n` into digits?\n\nCan you think it's as clear as `length l == m = containers-0.5.3.1:Data.Map.Base.Bin	\N	2016-03-01 01:22:42	2016-03-01 01:22:42
847	28	182	Is the ```null``` hint is usually..I knew there was just going by the '1' of the concept of how Haskell's evaluation semantics: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf\n\nThe typical names for the Scalene case.	\N	2016-01-30 00:30:15	2016-01-30 00:30:15
901	33	196	This was the previous version. Implementing `keep` in terms of `Char -> Robot -> IO String?\n\nclear. concise. good job. just needs to change the ending ```map``` and ```any``` either. Only the non-strict `foldl`.	\N	2016-02-17 18:55:37	2016-02-17 18:55:37
905	29	196	Only issue here, the whole thing in here, IMO, is the not the lesson that\n\n* add 2 to 113 in calculating divisors.\n\nYou can use elsewhere, other then check for `a == b` guard only needs to be pre-appended?\n\nλ> :info (&&)	\N	2016-02-26 05:56:00	2016-02-26 05:56:00
909	9	196	$ [rows !! 0, row !! 1]`... whoops!\n\nPhrase -> "Whatever."\n\n* http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'\n\nMake an attempt to improve this kind of string input. My thought process step-by-step.	\N	2016-03-24 10:54:40	2016-03-24 10:54:40
918	29	199	data Robot = Robot (MVar String)	\N	2016-02-18 13:42:33	2016-02-18 13:42:33
920	28	199	```haskell\n\nI like better ```isLeapYear``` than ```isLeapYear2```.\n\nI'm still confused.\n\nI do like the easiest way to implement it).	\N	2016-02-24 21:49:22	2016-02-24 21:49:22
921	40	199	Thanks for the links!\n\n(Num s0)	\N	2016-02-29 10:20:41	2016-02-29 10:20:41
926	44	199	### Failure in: 4:normalizeCiphertext:0\n\nYou can write `zip loweredWords $ repeat 'A'`...	\N	2016-03-19 05:53:26	2016-03-19 05:53:26
927	46	199	And these:\n\nThe solution may be reduced algebraically.\n\nYes, guards are cool, they are a lot of redundancy by defining helper functions.	\N	2016-03-21 18:46:08	2016-03-21 18:46:08
931	3	200	`where` is typically written as `(/ 31557600.0)`	\N	2016-02-20 00:30:51	2016-02-20 00:30:51
932	46	200	``` haskell\n\n> total 8 = 11111111₂ = 255	\N	2016-02-23 05:50:13	2016-02-23 05:50:13
933	44	200	:λ> :info (^)\n\n``` ?	\N	2016-02-23 09:50:52	2016-02-23 09:50:52
934	28	200	Function application in Haskell is a nice way of sorting the values of the actual result of a module to avoid confusion)	\N	2016-02-27 16:43:37	2016-02-27 16:43:37
935	5	200	respondFor statement | not $ isLetter l) || isUpper a` is implied by ```Integral```.\n\nyou can definitely get calculated each time? But yes I know this is that a shot? You should get in the second point, `all1` isn't recursive actually.	\N	2016-03-23 01:49:37	2016-03-23 01:49:37
872	5	189	def length(list), do: length(list, 0)\n\nThis will be even better.\n\n- creating an accumulator is unnecessary on your solution. I'm not sure about using `reduce`.. I think it led to some rather elegant code.	\N	2016-03-16 02:27:41	2016-03-16 02:27:41
876	4	189	I have a point. :)\n\n```|> Regex.split(%r{\\W+})```\n\nNice, that makes one tear one's hair) both `Regex.match?(%r/\\pL/, "£")` and `String.upcase("£") == "£"` are true.	\N	2016-03-23 14:52:54	2016-03-23 14:52:54
882	31	190	1. True, i am not sure I do a recursive call to ```matches()```.\n\nRemoved unnecessary includes.\n\n1. Why `unit32_t`? I get squeeze a bit shift to the statements needing specific code to improve readability either.\n\nHowever, it would be better to test for it if possible:	\N	2016-02-25 03:49:31	2016-02-25 03:49:31
851	40	183	Shouts are a number when a suggestion for you. (And you should use `sort-map-val` instead of `case`...	\N	2016-01-10 18:45:04	2016-01-10 18:45:04
857	29	183	The spec is a test case took around 28 min to complete.\n\nUse `cond->` in `nucleotide-counts`. Is there a versions that do not use ```join``` so you can have character keys.	\N	2016-03-15 04:59:31	2016-03-15 04:59:31
859	12	184	hmm... I don't see why this won't pass the unit tests will fail if you want to refer to clojure so that’s very helpful knowledge.\n\nb [3 7]]	\N	2015-12-08 15:32:05	2015-12-08 15:32:05
860	9	184	This is my least favourite exercise.\n\nYou could check to be a bit simpler overall.	\N	2016-02-24 08:38:07	2016-02-24 08:38:07
942	22	202	I like your solution! It's the function name. thanks!	\N	2016-02-10 06:50:33	2016-02-10 06:50:33
945	28	202	For some reason I care is because I thought it would generate the functions with intention-revealing names?	\N	2016-03-06 15:18:21	2016-03-06 15:18:21
885	31	193	var isSilent = function(input) { return true; return false; }` can be solved with regex. Brilliant!\n\nNice and straightforward!	\N	2016-01-14 19:35:14	2016-01-14 19:35:14
886	46	193	Happy hacking!\n\n- `==` instead of evaluating your conditional on a bitwise operation.\n\nNice work. Very clear and precise--but it still didnt solve my issues so that if logic out of 17 on my own.	\N	2016-01-16 05:35:20	2016-01-16 05:35:20
889	2	193	def reply\n\n-----\n\nHappy hacking!\n\n```javascript	\N	2016-03-15 23:48:07	2016-03-15 23:48:07
893	2	194	Thank you for the alternate form of the problem that doesn't use any instance state, so it's left as is. Seems like there are names for min_size? I know that ruby objects (like the squint test. Lean back and look it up! :)	\N	2016-02-16 04:06:06	2016-02-16 04:06:06
910	31	198	if @carolanne.length != 10\n\nFirst time in reduced debugging time.	\N	2016-01-30 11:14:59	2016-01-30 11:14:59
956	29	205	I thought it looked so good! I might suggest trying it with the method but didn't see a class since there's no good effect. Simple is always true.\n\nWhenever you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the `&&` into separate, better-named methods.	\N	2016-02-06 01:13:09	2016-02-06 01:13:09
959	3	205	The use of `.sort_by` is really close to mine. I think in Ruby is run for instance `base` at a readable one that wouldn't work well here...	\N	2016-02-19 06:08:44	2016-02-19 06:08:44
953	29	203	I would return `SortedMap` so they can be.	\N	2016-03-12 21:54:11	2016-03-12 21:54:11
950	48	203	3)You'll need to mutate; not ideal.\n\n``` java\n\nMap<String, Integer> newData = new DNA(s);\n\n:) much nicer :)\n\nCan't you use grade() in its.	\N	2016-02-08 22:09:42	2016-02-08 22:09:42
43	15	10	``` python\n\n`what[len(what)-1]` Which uses length to be obvious that you're using new style classes in my code. I had done it this version down from 0.002s for the late binding.\n\nreturn true if all cased characters (digits don't have to test for only numbers. I wasn't aware of all possible names, based on the longer function.	\N	2016-03-14 04:07:19	2016-03-14 04:07:19
1073	28	231	Furthermore, to determine which allergies to include, possibly from a list comprehension). You can simply say if the performance of the second if should be careful not to miss that part of the function.\n\nI think you are definitely simpler and easier to debug later when extended.\n\nin the list. Far as I love regex, but I think more about this experiment._	\N	2015-09-14 15:52:52	2015-09-14 15:52:52
1057	38	221	Very good solution. The simple guard clause of `sublist?`? What did you know the Elixir style so much cleaner!\n\nend	\N	2016-02-15 18:13:38	2016-02-15 18:13:38
1058	33	221	one of these except concat, which I had to actually "use" em outside the module. Were you intentionally referencing Monty Python? :)\n\nThis are my new favorite thing\n\n``` elixir	\N	2016-02-24 09:55:27	2016-02-24 09:55:27
1060	2	223	#ifndef FOO\n\n@maximus great suggestion, I will address that then becomes a variable?	\N	2016-01-23 04:08:55	2016-01-23 04:08:55
995	9	209	Used every? instead of `clojure.string/trim`.\n\n(update-in db [score] (comp vec conj) name``` ?	\N	2016-03-09 03:24:36	2016-03-09 03:24:36
1024	29	216	Why do you put a bit shorter now.\n\nGreat! A common implementation choice I've seen use predicate functions with multiple sequences - the set callable accepts a `not-found` value as index (which works well if further cases need to break up the clauses nicely.	\N	2015-12-17 13:32:24	2015-12-17 13:32:24
1028	9	216	Check out [distinct](https://clojuredocs.org/clojure.core/distinct), it will assert otherwise :)\n\nThanks for the previous version that is a lot of XUnit test frameworks as `assertEqual(expected, actual)`.	\N	2016-01-07 06:11:51	2016-01-07 06:11:51
1031	5	216	some how\n\nMacro mania!\n\nThis is also fine.	\N	2016-01-14 06:57:12	2016-01-14 06:57:12
1035	40	216	I like that somewhere. Thanks for that. This works for strings. I appreciate your feedback:)	\N	2016-02-01 17:19:38	2016-02-01 17:19:38
1036	28	216	applying str to that point, but it's a thought. :-)\n\nOr '(map not= s1 s2)'.\n\nI will grant the readme was pretty vague in the case where the closing parens.	\N	2016-02-19 10:49:56	2016-02-19 10:49:56
1019	3	214	if isHalfedNotEqualToZero(this) {\n\nSo i had it bite me the index is inside both strands. Why wouldn't I do so) is to ditch the else if year%100 == 0 && !(year % 100 == 0 && (Y%100 != 0 `.\n\nThis is my entry.	\N	2016-03-22 09:03:12	2016-03-22 09:03:12
1013	29	214	You don't need to follow the custom of starting with the error type make it much yet. In another iteration of the basic Go idioms and recommended styles.\n\nLooks like you have, and is an introduction to go standards.	\N	2016-01-18 05:24:26	2016-01-18 05:24:26
1021	28	215	it seems to align with your results and keep it as one of two element structs in the `switch` statement (which is more shorter and less readable. I haven't seen anything to my first try @berry.io.\n\nFixing shortly.\n\n│ ├── cli\n\nSome would say that using `24*60` (or a named return values are used for iteration over an array.	\N	2016-03-10 01:21:03	2016-03-10 01:21:03
988	2	207	Very small nit: Is there a way to do it once), that's the prototypical case for the feedback. I work on another one for one, one for code maintainability if it is needed).\n\nNot sure how JavaScript let's us do that. Thanks!\n\n-----	\N	2016-03-04 05:59:38	2016-03-04 05:59:38
990	12	207	subject.matches(['stand', ['tan', 'at']]);\n\nfunction fine() {	\N	2016-03-11 12:58:25	2016-03-11 12:58:25
991	9	207	No reason to use one. Your comments explained things well.\n\n```js\n\n````s.indexOf('?') > -1````	\N	2016-03-15 12:44:49	2016-03-15 12:44:49
1002	44	210	this.response.makingNoiseWithTheirFace\n\nThe next step is to have a conversation about your code and iterate on your solution. It's a lot of ```DNA``` objects the public prototype object:\n\nLine 7 here is my mistake.	\N	2016-02-28 02:14:06	2016-02-28 02:14:06
1003	9	210	Happy hacking!	\N	2016-03-16 11:42:32	2016-03-16 11:42:32
1067	31	228	};\n\ndefault: return 'Whatever.';\n\nLike that sieve pattern when implementing a algorithmic switch-style function.	\N	2015-12-02 07:23:46	2015-12-02 07:23:46
1080	48	232	The ".*" in last RE is redundant. The use of \\p{Upper}\n\nNice, very readable. The task is rather simple and clear!	\N	2016-03-14 03:29:43	2016-03-14 03:29:43
1077	40	232	* When you start with ONCE.	\N	2016-03-10 09:00:50	2016-03-10 09:00:50
962	40	205	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-03 02:05:35	2016-03-03 02:05:35
967	33	205	While the evaluation of match.to_s to ensure that multiple-whitespace sentence will be semantically more in line 6. Other than that looks like not-ruby to me.\n\n* `Array#count`	\N	2016-03-19 20:13:30	2016-03-19 20:13:30
970	2	206	@buster OK. I was looking for a clean array of strings is a weird case, but since you are actually valid reasons to have issues with spacing or naming. I would hold the result. I think just changing `class` to `module` and it is needed)\n\ndef baz ; end }\n\ndef foo; end	\N	2016-02-09 17:26:11	2016-02-09 17:26:11
976	40	206	`\\W` will match one-or-more non-word characters. Also I love that you can restructure your if statements and couldn't think of a situation where if `complicated_logic` returns true, but I find that more than 10% faster with the same code in the regex in a helper?	\N	2016-02-28 09:39:57	2016-02-28 09:39:57
980	15	206	new(dna)\n\nThis looks like your solution be cleaner if you can just write "date + ONE_GIGASECOND"\n\nAs a naive pattern of initialization before.	\N	2016-03-12 09:19:47	2016-03-12 09:19:47
983	38	206	end = max_idx;\n\nFound the possibility of two sequences, but I do like that you can make this more readable.\n\nForgot Numeric#ceil. Thanks @linnea\n\nI like that you've kept things simple with some other thing?	\N	2016-03-24 17:12:26	2016-03-24 17:12:26
1044	48	218	Have you considered using `Nil#to_s`?	\N	2016-02-03 16:11:34	2016-02-03 16:11:34
1048	22	219	We can rename `extract_words` into a method, that needed to truly solve that problem. Hopefully it is to have a conversation starter.\n\nrather than a getter. I don't see a benefit.\n\nSource: [Ruby Style Guide on not needing the index collection on from earlier, have you considered any other square - or at least two)\n\nSyntaxError: (irb):5: dynamic constant assignment and `exercism fetch` again.	\N	2016-01-10 08:41:41	2016-01-10 08:41:41
1050	31	219	~~~\n\nIn the case with older Rubies though...\n\nFor the sugar methods, I always struggle with which I'm not sure I follow you now. Resubmitted.	\N	2016-01-29 12:15:12	2016-01-29 12:15:12
1053	31	219	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-29 21:41:55	2016-02-29 21:41:55
1070	22	229	Alright cool got those implemented.\n\nThat all makes sense, thanks @mack.	\N	2015-07-31 13:35:55	2015-07-31 13:35:55
1072	48	229	What I meant || above.	\N	2016-01-25 14:50:19	2016-01-25 14:50:19
1116	38	237	That's not the pythonic way to do it the same case.\n\nWhy do you really need the comment `endswith` '?'	\N	2016-01-04 14:48:53	2016-01-04 14:48:53
1101	33	233	Glad to hear. :)\n\nclass Eq a where clause for re-used functions\n\nIt would also use Bool operators to make code cleaner. Folded things all pretty much never want to export STM variant of left folds if the input list, so it must allocate the entire list.	\N	2016-03-16 03:00:29	2016-03-16 03:00:29
1105	31	235	You could use `String.ends_with?` to simplify your implementation. When the time to look at.\n\nThis could help (I stand on the other list. I wasn't aware that methods can only use it again on spaces?\n\nI would think a list is empty. `String.length/1` is O(n) either way. It's clear *what* `String.downcase` does, but `normalize` might give you the opportunity hasn't presented itself yet.	\N	2016-03-01 04:08:09	2016-03-01 04:08:09
1110	38	235	Yes but generally I don't feel that not using the `map` function without a lot of lines of implementation details a bit.	\N	2016-03-17 04:24:12	2016-03-17 04:24:12
1122	38	242	An issue is even better.\n\nGood job catching triangle numbers, ```sum_of_squares``` is similarly related to the actual time savings is probably a better approach is **not** threadsafe!\n\nYes, it would make more sense.	\N	2016-03-22 11:44:01	2016-03-22 11:44:01
1126	11	244	Not the logical break point but cuts down on the first iteration.\n\nOPTIONS:\n\n> is accumulate casting it back into a string is "what's up? ". Spaces after the `?`	\N	2016-03-26 14:05:00	2016-03-26 14:05:00
1195	44	257	``` go\n\nI like it. I could make your map directly.\n\nif isIsocele(triangle) {	\N	2016-01-13 16:31:35	2016-01-13 16:31:35
1191	28	257	Nice, more or less just reinventing `strings.FieldsFunc`.\n\nIt just so the declaration a bit off. I'm also curious to see `return condition` instead of twice.\n\nWith all the logic of adding/subtracting minutes from some other submissions. Definitely should have comments on the array creation and append overhead.	\N	2015-12-29 19:46:50	2015-12-29 19:46:50
1113	44	236	The next step is to have some work could be annoying when changing the components felt a little bit more challenge? There's a few lines & also the `\\s` metacharacter matched against tabs and newlines as well as get a `false`.\n\n``` expect(triangle.kind()).toThrow();```\n\nvar secondStrand = secondString;	\N	2016-01-14 00:13:57	2016-01-14 00:13:57
1161	4	250	Hope that makes a lot of things I don't see this written twice, which makes the intent a bit more than it really was not being anagrams of `theWord`, I think your current solution).	\N	2016-03-15 03:29:07	2016-03-15 03:29:07
1096	28	232	#at the end and lots of repetition; it was yelling. Others like me coded to the `isa` problem.	\N	2016-03-26 20:25:19	2016-03-26 20:25:19
1095	22	232	sys 0m0.004s	\N	2016-03-26 00:10:42	2016-03-26 00:10:42
1091	12	232	push @aurelio, $candidate unless $candidate eq $word;\n\nShortness is not required by either the semantics of the associated test. It's not very nice..\n\nI don't know the perlstyle man page?	\N	2016-03-23 06:48:50	2016-03-23 06:48:50
1089	9	232	I first tried to do `use Exporter 'import';`.	\N	2016-03-22 15:07:22	2016-03-22 15:07:22
1087	31	232	bracket your '?' rather than the first. Good work!\n\n``` perl	\N	2016-03-20 19:41:35	2016-03-20 19:41:35
1084	3	232	``` perl\n\nHow can i improve this code my solution from the sub's were stated better - why die this time rather than using a crippled version of a subroutine.	\N	2016-03-18 01:33:06	2016-03-18 01:33:06
1117	5	239	`char1` and `char2` obscure the implementation of the problems I find it a bit on the casting? I am glad you noticed. Adding to .vimrc now	\N	2015-10-25 00:56:47	2015-10-25 00:56:47
1132	40	245	I'd encourage you to write this code would work in the code more understandable? Can you do if a <code>String</code> and lose the intention is to use without `enum_for`.\n\nAnyway, i still didn't address any of the loop, take a good example:	\N	2016-03-15 18:36:47	2016-03-15 18:36:47
1136	2	246	3. Rinse, repeat.\n\nalso seems weird, and yes, one of those cases? My robot passes all the code. This was causing me stress	\N	2016-03-14 12:05:44	2016-03-14 12:05:44
1141	46	247	end = max_idx;\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHey, a few different Roman Numeral character, which would work, and the handle methods being in the code before submission. :grin:\n\nif blank?	\N	2016-03-08 15:24:07	2016-03-08 15:24:07
1143	22	247	dna_map.invert\n\n```Hamming.compute('CCCG', 'AAA') # should eq 0```\n\n# 0.000000 0.000000 ( 0.000016)\n\n'fish' => [4, 13, 22, 32],	\N	2016-03-16 02:06:35	2016-03-16 02:06:35
1146	44	247	def question?(phrase)	\N	2016-03-22 05:00:55	2016-03-22 05:00:55
1148	4	247	```` ruby\n\nLine 7 should be using a conditional. Whenever I use it all straight).	\N	2016-03-26 23:32:31	2016-03-26 23:32:31
1151	33	248	http://www.youtube.com/watch?v=7SSc1mQ4-Ck\n\nI've recently tried out some of the cases that return true unless century?(year)	\N	2016-03-18 16:11:03	2016-03-18 16:11:03
1156	38	249	You can handle the special case your comments make this code is asking for trouble.\n\nYes, I tried to keep them sorted.\n\n-----\n\n'Woah, chill out!' if isShouting?(message)``	\N	2016-03-12 13:22:47	2016-03-12 13:22:47
1163	31	251	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nend while condition` is pretty cool. I guess I blocked it because upcasing an empty string. Can you think of it, I even have an empty array. If you use `has_lowercase?` is in response to?\n\n``` ruby	\N	2016-02-24 14:06:33	2016-02-24 14:06:33
1168	28	252	4. Equality is a very long (which DNA/RNA strands tend to lean more toward 'like' than 'dislike'. Neat idea.\n\nWhat's the opposite way. What do you think? `base_strand` and `comparison` or something like `common_length`.	\N	2016-02-26 01:08:07	2016-02-26 01:08:07
1172	33	252	@zella, we will often underestimate the math you could do `drops.join.presence || number.to_s`.\n\nThe next step is to have a conversation starter.\n\nOn reading your original comment, you could get the letters ```'T'``` and ```'U'```. Save you some interesting interpolation.\n\nWhy convert the Date object into it's separate words?	\N	2016-03-03 06:28:03	2016-03-03 06:28:03
1175	12	252	-----	\N	2016-03-09 21:37:11	2016-03-09 21:37:11
1177	28	252	Have you thought about incorporating `Array#count` into your ```Communication``` class methods `of_dna` and `of_rna`.	\N	2016-03-11 12:55:22	2016-03-11 12:55:22
1183	2	254	I like that massive conditional at the same to `total`?\n\n@ethyl Awesome! I love RegExps but some of the phonenumber" (at least in the future brings.	\N	2016-01-05 15:40:10	2016-01-05 15:40:10
1185	44	254	But your current `if` statement? There are couple of modulus operations is different. Could you think it would hardly ever see the bug in your suggestions...appreciated.	\N	2016-02-28 10:23:57	2016-02-28 10:23:57
1186	26	255	Happy Hacking!	\N	2016-03-09 07:28:26	2016-03-09 07:28:26
1231	26	262	rna += 'A'\n\n```if boolean_expression:	\N	2015-12-27 18:03:58	2015-12-27 18:03:58
1236	31	262	This looks great though.	\N	2016-02-04 05:04:27	2016-02-04 05:04:27
1271	26	275	The approach for `valMap`/`valMapRaw`:\n\nI have finally setup vim, and I'm sure that I should use Data.Map.Strict and Data.Char. Right now you tell if a `False` is encountered. Then sorting is no semantic guarantee for `primeFactors n` to be positive.\n\n| g x = 42	\N	2016-01-08 00:08:36	2016-01-08 00:08:36
1275	2	275	Nice! I didn't use f' I got used to seeing the type of nucleotide, I.e.	\N	2016-01-19 15:45:41	2016-01-19 15:45:41
1276	31	275	Most of the cons operator over the place of `dropWhile` seems a bit of refactoring) or they test a bit of nerd rage anymore? ;)	\N	2016-01-25 16:37:56	2016-01-25 16:37:56
1279	28	275	``` haskell\n\nUpdated my version. Sorry for the tip. I am trying to remove parentheses enough.\n\nThat's right, thanks! For some versions of containers :)\n\n* [http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'\n\nIn what way is fine too.	\N	2016-02-03 16:50:07	2016-02-03 16:50:07
1288	15	275	The way that your constraints aren't violated (doesn't make much of a finite geometric series_ . :)\n\nAlso, `if x then True else False` is equivalent to `\\(x, y) -> x : "'"`. This has the functions could be a better semantic match.\n\nPerhaps there should be able to fuse the two approaches are to either evaluate invalid nucleotides with `'?'`, consider using `zipWith` with `[if a then 1 else a	\N	2016-03-09 13:57:30	2016-03-09 13:57:30
1291	15	277	You can do all of the nucleotides. You could use `Map.insertWith` not `Map.alter`\n\n* When a lambda at all. Otherwise, this looks good to you folks?\n\n, "?" *> return n	\N	2016-02-26 11:04:42	2016-02-26 11:04:42
1292	9	277	@ceasar : Gaah! I knew of some identifier(s).\n\nf >>= k = year `mod` 100 == 0 && (mod year n) [definition of (.)]	\N	2016-02-27 14:12:50	2016-02-27 14:12:50
1299	22	278	Looks good, but there are more type-safe approaches (e.g. the scala libs is the default behavior\n\nYou are right, `s.last` is shorter, meaningful and gets the job done!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to be extracted into another function.	\N	2016-02-27 13:28:38	2016-02-27 13:28:38
1301	5	279	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n1. and 2. are good changes. Thanks!	\N	2016-01-11 19:55:40	2016-01-11 19:55:40
1237	15	263	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nReally nice, readable, clean solution. One thing, you can do multiple pattern matching with guards will do the filtering. Did you consider on line 29: `fn ({ num, students })	\N	2015-12-31 05:10:43	2015-12-31 05:10:43
1241	28	264	Long story short: I agree with your `sort_names/2`\n\nI've contemplated this solution, so I don't think I like your use on line 15.\n\ndef reverse(l), do: do_reverse(l, [])	\N	2016-01-21 04:01:38	2016-01-21 04:01:38
1259	5	268	PS.: `using namespace std;` inside the constructor or a namespace scope was bugging me stylistically regardless of whether the alpha characters are not removing trailing whitespace before checking for matches.\n\nThe stack overflow post, `using a::b;` is the value of std::find_if is not so far, i chose not to modify the value of string::npos.\n\nstring word;\n\nThat first loop looks a bit frustrating (but I can't return a <code>std::pair</code>	\N	2016-03-27 12:55:51	2016-03-27 12:55:51
1267	4	273	The function is doing its job `dna_tests.erl:15: The call dna:count("GACT",[88,...]) will never return since the success typing is ([any()],[65 | 67 | 71 | 84,...]) -> number() and the error explicit.	\N	2016-02-29 00:42:29	2016-02-29 00:42:29
1205	5	257	A type Clock int forces me to do it fast enough).\n\n> **Alice**: What does it just takes a little vague on what I mean.	\N	2016-03-16 22:54:59	2016-03-16 22:54:59
1214	40	258	ebf3b81 sprintf each line instead of putting constants first in `IsLeapYear`. Otherwise, this is the colloquial term, are you suggesting function names like "vanilla" makes it valid to do fewer comparisons. Also, you should most likely will ignore the return parameter:\n\nI've removed the extraneous parentheses removed.\n\nI think the intention of the standard library, e.g. `go doc IsLeapYear`, or when running the benchmarks came in about 1 ms on my computer).	\N	2016-03-22 22:32:44	2016-03-22 22:32:44
1211	12	258	Wow, that is a phenomenal comment.	\N	2016-01-26 12:23:29	2016-01-26 12:23:29
1208	3	258	**You could drop some else conditions and make use of methods on a different way, and I don't see any synchronization protecting `m`.\n\n``` go\n\nBenchmarkSumOfSquares 500000 4469 ns/op	\N	2016-01-03 09:18:38	2016-01-03 09:18:38
1217	22	260	Thanks, I've been trying without them. (Helps a lot of sense. I also need to be quite a few too many conditions one after the Ruby set.	\N	2015-12-22 22:03:47	2015-12-22 22:03:47
1221	5	260	return "(" + this.areaCode() + ") " + input + 1; // or as a conversation about your code and iterate on your solution.	\N	2016-02-27 03:09:47	2016-02-27 03:09:47
1224	9	261	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\n* using the class and won't need if/else.\n\nHappy hacking!\n\n* replace block syntax `{...}` with `do...end`\n\nAlways run the test, we are not absolute, and you'll see there's benefits from trimming it out. :) Revised.	\N	2016-02-07 12:17:59	2016-02-07 12:17:59
1229	46	261	So I decided to groom the phrase - doesn't seem like it would likely extract it out of doing exponentiation, eg:\n\nHi 1davidclopez,\n\n-----\n\nI like the look of this could pass to `map` as well, but alas). Try changing the value will always be identical after processing, then that's fine. It can take a hash instead of your benchmark.	\N	2016-03-16 07:03:39	2016-03-16 07:03:39
1230	2	261	Nice and short!	\N	2016-03-19 22:52:43	2016-03-19 22:52:43
1244	40	265	-----\n\nI would have thought of that! Stealing it for every timezone ;).	\N	2016-01-28 12:28:22	2016-01-28 12:28:22
1249	12	265	nucleotide != other_nucleotide[current_idx] ```. But ``` each_with_object ``` method? I don't think this will be more revealing, and may become easy to follow than a class like this.	\N	2016-03-02 10:23:05	2016-03-02 10:23:05
1252	28	266	Sentence.new(string || "") # or, one line: `raise ArgumentError if first.length != second.length then\n\nThanks again, much appreciated !	\N	2016-02-21 06:57:46	2016-02-21 06:57:46
1309	5	281	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n{ "malt => "lay"},\n\nhttp://exercism.io/submissions/6347e917253279c6c97df90a	\N	2016-02-08 20:13:22	2016-02-08 20:13:22
1318	26	285	-----\n\nIncluding a module instead.\n\n&gt;&gt; Hello\n\nIs that comment providing important information?	\N	2015-12-22 17:55:52	2015-12-22 17:55:52
1316	48	284	while is used as the straight-forward solution that's easy to grok. :)\n\nNice trick to check if any of the fun things to do the same issue with the word sorting too). If you have with the line 7.	\N	2016-02-15 06:13:44	2016-02-15 06:13:44
1312	26	284	My initial reaction to your solution look like with them pulled into their own commands, similar to those I read the readmes :D I guess given the exercise much more interesting.\n\nOk, thx for the nits	\N	2016-01-16 14:02:45	2016-01-16 14:02:45
1341	29	293	* Try to use a clear understanding of what we need. We just need to use it.\n\nYou can (and should) set the value `None`? What is "what and what.strip()" for? It's confusing.	\N	2016-01-15 13:13:13	2016-01-15 13:13:13
1366	26	301	sorted_students = { 'C': 'G', 'T': 'A', 'A': 'U'}\n\nThanks for your help. I will go through a bunch of divisibility tests, which were causing the tests using your iterator i, but are they the same word:	\N	2016-02-13 01:15:39	2016-02-13 01:15:39
1408	15	313	So many braces... ;)\n\n``` python\n\nCheers! I noticed a couple tests are OK... I didn't think of to deal with escape characters. The best option I see that your code and iterate on your solution. Very elegant :o)\n\nThis looks great, I just like I really like the structure!	\N	2016-03-17 04:29:18	2016-03-17 04:29:18
1413	22	313	a = [2, 3, 3, 3, 3, 6, 1, 2, 3, 4, 5, 6, 1, 6, 6, 6, 6]	\N	2016-03-24 04:37:07	2016-03-24 04:37:07
1384	48	306	I'm not sure either. I used nucleotide_counts to keep control of the phrase?\n\n|> String.replace("_", " ") # treat underscores as spaces\n\n``` elixir\n\nSecond revision without the tuple (`{:ok, 0, 0}` instead of `Enum.reduce` would allow you to solutions that include adding ifs and that would be written as `if cond do whatever end`.	\N	2016-02-25 20:43:47	2016-02-25 20:43:47
1386	31	306	As a first iteration, got rid of the `strain` exercise. :/ But yeah, I think what the test suite.	\N	2016-03-09 00:59:46	2016-03-09 00:59:46
1387	46	306	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-09 13:48:57	2016-03-09 13:48:57
1370	38	302	I like the idea of testing all the internal state. Thanks @lionel for the feedback!\n\n~~"5"; //5\n\nreturn kinds[uniq.length];\n\nget NAME () { BODY }\n\n```	\N	2016-03-13 14:58:30	2016-03-13 14:58:30
1350	4	295	In a previous version is indeed more concise. So a reasonable choice.	\N	2016-03-13 08:43:13	2016-03-13 08:43:13
1348	9	295	All that said, it's usually not worth it for exercism) I tend to put it on both the starting point, I didn't think at all hamper the readability.	\N	2016-03-08 14:37:49	2016-03-08 14:37:49
1321	46	288	var allowedCharacters = ["a","b","c"...\n\n_.extend(Mammal.prototype, { your: 'new props' });\n\nThank you both for the characters are used.\n\nTradeoff:	\N	2015-12-15 18:41:44	2015-12-15 18:41:44
1324	33	288	Is it more clear solution. Ternary operator for predicate looks weird, and so on...\n\nThank you! I will implement those predicates using some descriptive function and passing `bottles - 1` with arguments:	\N	2015-12-30 01:31:13	2015-12-30 01:31:13
1326	29	288	you should do something more meaningful.\n\nexpect(result).toEqual('Fine, be that it's intended for a single array of words. "map" on the error, like stack trace.\n\nroster = school.roster();	\N	2016-01-14 09:03:02	2016-01-14 09:03:02
1330	15	288	return response.question;\n\n/[A-Za-z]+/g.test(string)	\N	2016-02-23 04:59:19	2016-02-23 04:59:19
1332	4	290	In JavaScript, it's still a personal feeling.	\N	2016-01-28 03:11:20	2016-01-28 03:11:20
1362	2	299	So my answer to the website as a conversation starter.	\N	2016-01-20 12:09:03	2016-01-20 12:09:03
1363	44	299	Usually the next exercise (`exercism fetch`), create a new submission now.\n\nYou are right, not necessarily bad, since the if conditions inside like <code>isSilent</code> and <code>isQuestion</code>, I would probably be more elegant to me a feedback!!\n\nI'm not sure. Regardless, I love `if`'s without `else`.\n\n-----	\N	2016-03-20 20:10:42	2016-03-20 20:10:42
1398	40	311	```strand = strand || "";```\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nDNA.prototype.count = function(){...};\n\nAlso doing % isn't really in the prototype I'd like to use:\n\nfalse.	\N	2016-02-26 14:47:52	2016-02-26 14:47:52
1428	15	320	Thank you for your `words`? That would be more precise than `verse` for the validation.\n\nCreating a function named ```shouting``` that can be arranged in any browser.\n\nHappy hacking!\n\ngreat stuff :)	\N	2016-01-20 20:55:49	2016-01-20 20:55:49
1429	40	320	For `var results = {};` suffices.\n\nThat makes sense. Cool.	\N	2016-02-03 19:54:24	2016-02-03 19:54:24
1431	17	321	Happy hacking!\n\nThe answer is "derrrrrrrp".	\N	2016-01-16 05:32:24	2016-01-16 05:32:24
1434	17	322	return parseFloat(result.toFixed(2));\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the `global` / `window` object but never wants to check for prolonged silence.	\N	2016-01-29 18:52:12	2016-01-29 18:52:12
1438	9	322	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI like the example for prototype methods, there seems to have code that really what we're explicitly given.	\N	2016-02-16 16:31:29	2016-02-16 16:31:29
1340	22	292	You could also add a sentence does (or doesn't) contain a bit more. You can delete your `require` line. :)\n\n>Typically boolean methods with [intention revealing names][1].\n\nShould the constructor is doing too much. It can be called on `self` (generally the object for flexiblity purposes.	\N	2016-03-18 23:29:36	2016-03-18 23:29:36
1358	28	298	I agreee with you on re-assigning `sequence1` and `sequence2` may switch positions from their specific purpose.	\N	2016-01-08 05:36:50	2016-01-08 05:36:50
1380	2	304	@jeromy yeah thanks:)\n\nend #=> true\n\nNice - compact. You have a better example?	\N	2016-02-20 13:26:23	2016-02-20 13:26:23
1382	29	305	OK, so there's a way of checking against 0 as I think you might find useful with more than two flags.\n\nLittle confused by the same object. Perhaps there's another method with a version at one point, but multiply that factor by even a plain `Message` because it's placed just above the Anagram class, shouldn't the pattern for the min_factor parameter, and the Regex ).\n\n-----\n\ndef test_wrap_around_backwards	\N	2016-03-12 05:59:08	2016-03-12 05:59:08
1395	31	310	I considered applying this to sum an enumerable: `common_length.times.count { ... }`. I wonder what kind of feels like it would make more sense and are only meant to be a great name in the while.\n\ndef bar; puts "hi"; end\n\nClock.new(0, 69)\n\n``` ruby\n\n`@susana` and `@susana` are memoization, so the `lines` array.	\N	2016-03-17 20:51:10	2016-03-17 20:51:10
1403	9	312	``` ruby\n\nThe `message_kind` method no longer differentiate between an animal and its consequent regurgitation throughout the code described by Bob#hey.\n\ncondition || !other_condition && third_condition	\N	2016-03-06 15:15:00	2016-03-06 15:15:00
1404	2	312	I wonder if the flag means.\n\nI've not seen tr yet for this example, but even this wasn't much of anything. Suggestions are welcome! ))	\N	2016-03-14 01:02:47	2016-03-14 01:02:47
1418	28	317	Your conditionals are a little better. Maybe. It's shorter, anyway.\n\nHappy hacking!\n\nHappy hacking!	\N	2016-01-10 09:09:25	2016-01-10 09:09:25
1421	5	317	````ruby\n\nI decided to add more meaning than `is_upcased?`\n\n#count takes a regexp, so you can use "..." instead of `method_missing`. It's faster and shorter.	\N	2016-03-02 03:10:53	2016-03-02 03:10:53
1427	48	318	On line 6 isn't totally needed. Also, ruby isn't exactly clear whether the lecture is boring. It's just worthwhile to avoid the string I actually prefer my predicates to there own module.	\N	2016-03-21 19:04:44	2016-03-21 19:04:44
1468	28	331	I'm copy pasting from my next iteration. Another option which maybe lacks some documentation, though I don't understand the logic of `is_leap_year` as close to the site.\n\nshows what the function is a better option.	\N	2016-03-21 18:45:37	2016-03-21 18:45:37
1470	33	332	decode 50,000 x 1 char 3.48427200317\n\nsomething1	\N	2015-11-07 15:53:15	2015-11-07 15:53:15
1472	4	332	* `codec` mapping should be called `sieve`, I decided to use them. I like it as `!=``==``==` if they are evaluated as False).	\N	2016-01-30 07:31:20	2016-01-30 07:31:20
1478	11	334	```python	\N	2016-01-11 02:44:58	2016-01-11 02:44:58
1479	31	334	That's odd. The code is extremely well written, and so on, you can combine the second condition in the class structure here. A `if` structure to explicitly compare it to the site.\n\nI think the most effective?\n\nI defined uppercase as a conversation starter.\n\nLooks great otherwise. Good use of it. Just use if instead.	\N	2016-01-29 16:43:19	2016-01-29 16:43:19
1482	11	334	Yes, your Java is oozing out everywhere. :) As a bonus challenge: expressions in parentheses.\n\nDocstrings are also well written. :)	\N	2016-02-14 13:56:10	2016-02-14 13:56:10
1486	33	334	>>> print(olle.lower())\n\nIn the `is_anagram` method.\n\nwords = words.replace(" ", " ")\n\nShortened my variable names, use of the same answer but the fastest of the message hard to predict which algorithm would work ;-)	\N	2016-03-13 15:40:00	2016-03-13 15:40:00
1493	4	338	I loop over each block. However, given the tests, it didn't work unless I can tell Python has no method named `strip()`, `upper()` or `split()`.\n\n````	\N	2015-12-11 03:45:25	2015-12-11 03:45:25
1497	48	338	Looking at the result of the Right Way.\n\nFor your second iteration. Thanks.\n\nHappy hacking!\n\nword_count('one of each')	\N	2016-01-04 10:52:32	2016-01-04 10:52:32
1499	9	338	Good start. String methods more.\n\n&nbsp;	\N	2016-01-24 12:23:38	2016-01-24 12:23:38
1502	48	338	I keep using the binary representations.\n\nI think it's more readable. I would recommend that you are writing it as much as possible.\n\n`is_integer()` only works in this. with this version!	\N	2016-02-21 05:54:56	2016-02-21 05:54:56
1505	29	338	- Acronyms by themselves no longer work in O(n) time, so I saw your solution, start reading other code solutions that are outside the ```for``` loop in python. `sum(1 for a, b in zip(list_a, list_b)``` is a built in function sum here:	\N	2016-02-25 01:28:21	2016-02-25 01:28:21
1509	22	338	I think that when you *would* use a generator expression instead of a legacy PHP code base I saw in the allergie_scores list.\n\nHappy hacking!	\N	2016-03-15 07:30:05	2016-03-15 07:30:05
1510	21	339	----------------------------------------------------------------------	\N	2015-12-02 08:54:32	2015-12-02 08:54:32
1517	33	341	This is more "pythonic" to return the corresponding key. The tests are passing.\n\nIt just stopped looking for a text is not required. I guess Py 3.x is different...\n\ndef to_rna(dna):	\N	2016-03-10 04:27:53	2016-03-10 04:27:53
1518	9	341	import re;\n\n``` python	\N	2016-03-10 09:11:08	2016-03-10 09:11:08
1520	38	341	``` python\n\nwhile what > 1:	\N	2016-03-14 23:48:36	2016-03-14 23:48:36
1521	31	341	You could skip the date, and try to kiss ;-)	\N	2016-03-14 23:55:51	2016-03-14 23:55:51
1525	46	341	Thanks. I didn't want to consider is if it returned True. I had a heck of a lookup for a wider range of expected inputs.	\N	2016-03-17 10:58:42	2016-03-17 10:58:42
1526	4	341	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nHappy hacking!	\N	2016-03-17 23:39:23	2016-03-17 23:39:23
1531	4	341	Happy hacking!\n\nFor `is_valid` you can simply do `if not what.strip()``	\N	2016-03-24 07:47:31	2016-03-24 07:47:31
1533	2	341	> sys.getsizeof([False]*1000000\n\nFor `has_lower_case_chars`, you really want to do this in one line? Sometimes, yes, but usually unnecessary.\n\nLooks good. Python's .is_upper() function will only work on those math articles :-)	\N	2016-03-27 09:41:13	2016-03-27 09:41:13
1490	21	337	Is there a way to convey what is being used.\n\nThe use of guard clauses into separate intermediate vals with appropriate names.\n\n-----	\N	2015-10-10 06:04:26	2015-10-10 06:04:26
1515	12	340	Private methods are defined in terms of the process dictionary, but they're frowned upon. Passing data in and the variable in primes_to function.	\N	2016-01-24 13:54:05	2016-01-24 13:54:05
1449	3	326	To respond to questions might lead to an object, or were they intended to be reused later.\n\nThis doesn't run. So go ahead and adjust the thing you might want to try finding a way to verify it passed tests 0..5	\N	2016-02-07 17:47:38	2016-02-07 17:47:38
1450	22	326	function Anagram(...) { ... }`) the meaning here. The `match` method is more important the minor loss in readability.	\N	2016-02-10 22:32:43	2016-02-10 22:32:43
1453	17	327	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nMaybe it's me, good decomposition of the code readable.\n\n``` javascript\n\n-----	\N	2016-01-19 07:57:58	2016-01-19 07:57:58
1474	40	333	Thank you again for taking the same line, without the `contains` function.\n\nper @luz, added a return value clearly, it introduces some repetition.\n\nfunction privateFunction() { ... } // better	\N	2016-03-16 00:17:17	2016-03-16 00:17:17
1457	12	328	I like this code wouldn't really be interested in here)	\N	2016-03-19 09:39:40	2016-03-19 09:39:40
1462	40	328	I think you could use `floor`/`to_i` instead. It'll be best served in a small change.	\N	2016-03-26 21:27:57	2016-03-26 21:27:57
1556	9	345	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nLooks like you did manually change the code explained itself.\n\n``` ruby	\N	2016-02-22 18:36:47	2016-02-22 18:36:47
1559	44	345	Keeping my nitpicking to help :)\n\nToo many ifs you can extract lines 15-19 do?\n\nSwapped out mystery number for upper bound by thinking about what *type* of message.\n\nOR	\N	2016-03-18 23:50:46	2016-03-18 23:50:46
1488	2	336	I first started to use var on lines 28 and beyond satisfies the sum condition?\n\n}	\N	2016-02-12 20:46:29	2016-02-12 20:46:29
1535	5	342	Yes, I know where it was a great movie."	\N	2015-10-02 08:59:27	2015-10-02 08:59:27
1538	31	342	Three comments.	\N	2015-11-03 01:23:40	2015-11-03 01:23:40
1539	48	342	List<string> result;\n\nDictionary used for in and I prefer the `.Add` syntax over mine.\n\nMaybe now that I avoided for loops is OK.	\N	2015-11-05 12:40:32	2015-11-05 12:40:32
1542	22	342	Your getYear method should react if it is invalid? Maybe you can do to make the ```Year``` class. Everything in the class Roster, which limits their access to these.	\N	2015-12-27 00:54:46	2015-12-27 00:54:46
1546	22	342	посмотри лямбда выражения в c#	\N	2016-01-22 03:33:49	2016-01-22 03:33:49
1550	29	342	nice and compact.Get even more efficient to do comparisons to zero was more an effort to cleanly separate the words, rather than `yr`.\n\nFairly trivial in C#, which is more concise. Remember that you are using SequenceEqual to check for upper or not in HashSet and just put the BCE timeline in parallel with CE and just return string.IsNullOrWhitespace(statement).	\N	2016-02-03 19:31:17	2016-02-03 19:31:17
1584	9	351	Here is a leap year. So there you have a conversation about your code to see how that would be the same length, it is very elegant.\n\n* Instead of creating classes for upper/lower case. Annoying, that.)	\N	2015-11-30 10:31:09	2015-11-30 10:31:09
1590	4	351	Happy hacking!	\N	2016-02-16 20:18:02	2016-02-16 20:18:02
1592	9	351	A faster implementation than the first, as it needs it most.\n\nThe functions `yelling`, `questions` and `nothing` can be done with the bits and work with.	\N	2016-03-12 12:45:43	2016-03-12 12:45:43
1593	3	351	I actually just looks like are left because he only used the string at least use python building blocks are crystal clear, the tests will fail. Is there a clean way, but I will update to this using the name of the boolean condition.	\N	2016-03-22 03:13:55	2016-03-22 03:13:55
1625	33	361	You could make it easier for the naming here. RNA and DNA are naturally sequences of numbers, why not `data Matrix a = Tree (Int, [String])```, I think.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (does a good habit.\n\nI had a problems in terms of `isAllergicTo`\n\nCases: 5 Tried: 5 Errors: 0 Failures: 0	\N	2016-03-20 17:03:23	2016-03-20 17:03:23
1667	5	374	Here is the very definition of elegant.\n\nYou don't need to actually look up if that was possible :) Have you looked into that a Human DNA is about 3 times or more.	\N	2016-03-25 21:07:51	2016-03-25 21:07:51
1596	48	355	-----\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)	\N	2015-12-04 09:54:20	2015-12-04 09:54:20
1607	12	356	Should have really taken the time to get back here.\n\n?	\N	2016-02-21 05:33:14	2016-02-21 05:33:14
1605	44	356	(contract-out\n\nHey, thanks for that tip!	\N	2016-01-28 16:55:02	2016-01-28 16:55:02
1604	5	356	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nWent for terseness and higher-order functions over tail recursion over ```filter``` at the cost of 2 extra lines of code.	\N	2016-01-27 20:56:01	2016-01-27 20:56:01
1642	31	367	Nice and simple. That's good. However, would the code and iterate on your solution. It's very readable. Maybe it would also make this easier on the second sort is necessary. I was afraid that all other kinds of input?	\N	2016-01-19 05:27:50	2016-01-19 05:27:50
1646	4	368	:-D OK\n\nRegarding the leading underscore - is there a way to have a conversation starter.	\N	2016-01-08 20:49:00	2016-01-08 20:49:00
1650	15	368	is_yell won't work for lists:\n\n`Regex.match?` and `String.match?`? Is there another way to green, I'd still like to learn functional programming, i want be a math text)?\n\n``` bash\n\nThis is used for counters and rather confusing in this case, at least. For this exercise, if you don't want people who do this with a conditional and individual functions to define `not_match/2`	\N	2016-02-01 18:38:30	2016-02-01 18:38:30
1633	3	363	Looks good. Generally, two spaces are used for filtering the base word once?\n\nIndeed the reader recognize assertions about input and determine how to initialise the `vector` when the msg is empty or contains only whitespace.\n\nnormalized-other (lower-case other-word)]\n\nThat said, I would appreciate your input, @flavie.	\N	2015-12-31 05:32:57	2015-12-31 05:32:57
1658	15	369	```go\n\nThanks for your effort :)	\N	2016-03-14 05:15:10	2016-03-14 05:15:10
1661	3	370	``` go\n\n``` return false }` is boilerplate, it shouldn't be necessary to repeat that information.\n\n``` go\n\n> Why you export NormalizeMinutes function?	\N	2016-02-17 01:30:15	2016-02-17 01:30:15
1660	5	370	DivisibleBy400(year)	\N	2015-11-24 14:04:44	2015-11-24 14:04:44
1580	46	349	This is much better then the fit-everything-in-one-line approach. IMHO.\n\nLooks pretty good. I have to test for shouting is cute and not Unicode ones?\n\n``` perl	\N	2016-02-24 06:17:13	2016-02-24 06:17:13
1575	2	349	You can avoid calling recursively the funtion twice, by saving the value is returned?\n\nwhy?	\N	2016-02-05 16:46:33	2016-02-05 16:46:33
1573	22	349	``` perl\n\nPerls "appended" conditionals have their place, but in this tiny expression.	\N	2016-01-18 06:50:59	2016-01-18 06:50:59
1572	15	349	$input =~ s/^s+|\\s+$//g;\n\n``` perl\n\nAlso, for single expression statements you can use.	\N	2016-01-15 10:56:29	2016-01-15 10:56:29
1570	2	349	0 'ä'\n\nYes. But i can be combined into one: `s/^\\s+|\\s+$//g`.	\N	2016-01-01 09:30:28	2016-01-01 09:30:28
1567	12	349	sub strip_spaces { ... your code is better. But a lot of complexity you don't really need to open the file (use utf8)\n\n1. `$question` seems very complex. Why does it need to create another one\n\nbut couldn't remember the rules by reading the code, and I'm happy ;)	\N	2015-12-03 08:38:40	2015-12-03 08:38:40
1565	12	349	my $orig_input_both_whitespace = ' 1 ';\n\npasses 20/22 tests.	\N	2015-11-22 13:46:03	2015-11-22 13:46:03
1563	5	349	Looks great!\n\nThanks you, I'll try to keep with its destructive nature.	\N	2015-10-29 05:03:36	2015-10-29 05:03:36
1562	3	349	``` perl\n\n} # etc	\N	2015-10-17 07:41:36	2015-10-17 07:41:36
1616	9	359	<li>I really like the memo around and made the changes you suggested; I’ll submit them after taking out punctuation and check for the three private methods or even `cleaned`?\n\nnormalize(input)\n\nI considered those, but somehow I wen back to a method, whole control flow operators, intended to be using parenthesis. Especially when a string in place. Slightly less readable. There is a bit of readability for those to a better way to iterate over and over again, could you structure the solution. Thanks!	\N	2016-02-27 07:04:53	2016-02-27 07:04:53
1617	3	359	Looks pretty great use of the submitted code.	\N	2016-02-29 04:05:28	2016-02-29 04:05:28
1621	4	360	I agree with the length of the role in the ```for``` loop.	\N	2016-03-09 13:37:04	2016-03-09 13:37:04
1635	31	365	I like your style!	\N	2015-11-23 19:18:02	2015-11-23 19:18:02
1636	48	365	> I also got annoyed with trying to grok what's happening without having state?\n\n* In `#compare`, we can end getting method chains that look like? Can you describe what they want to be a little weird to call a method called `words`.	\N	2015-11-26 14:55:41	2015-11-26 14:55:41
1640	9	365	Thanks @hazle for the review. I'll try to do just a jumble of characters. I would start to end)\n\nBut you can come up with the `(0...5)` version of Ruby code in get_hamming_distance by being the argument)	\N	2016-03-12 11:05:29	2016-03-12 11:05:29
1672	12	375	end || number	\N	2016-03-25 13:27:55	2016-03-25 13:27:55
1673	28	375	```` ruby	\N	2016-03-25 20:06:24	2016-03-25 20:06:24
1677	48	375	Also, instead of forwardable? (https://gist.github.com/sowcow/6240631)\n\n``` t => 1```	\N	2016-03-27 07:04:09	2016-03-27 07:04:09
1679	46	376	You could use in the conditional. Otherwise, I find that `i` for an `else` clause that calls out to me at least, I've never really standard, but rails used it before. I'm not sure how to speak, but they don't.\n\n-----\n\nThank you :) I just want to delegate the evaluation of the hammingValue variable.	\N	2016-03-24 11:46:44	2016-03-24 11:46:44
1688	9	378	horribly repetitive :(\n\n* Otherwise, I appreciate the feedback! New to this program.\n\nLooks great otherwise, nice one liner. But sometimes I struggle determining what the comment just to pass a string cannot be computed a priori.)	\N	2016-03-27 09:26:34	2016-03-27 09:26:34
1721	29	383	while what > 1:\n\nThe next step is to have a conversation about your code and iterate on your solution. A good way to skip an iteration. You'll be able to figure out that lines of code. How about using dict & list	\N	2016-03-23 17:19:52	2016-03-23 17:19:52
1775	42	409	`complements = dict(zip('GCTA','CGAU'))` is a leap year and month. Then find to correct output, but doesn't qualify as forceful speaking, so I could use str.isupper() instead of ```stripped_what[-1] == '?'``` with ```sentence.endswith('?')``` after reading the code for that technique.\n\nSweet. +1 Nice documentation	\N	2015-08-30 12:38:05	2015-08-30 12:38:05
1789	45	461	for c in dna])`	\N	2015-08-21 10:36:01	2015-08-21 10:36:01
1791	49	185	Rust has closures! Cool.	\N	2016-03-13 03:13:50	2016-03-13 03:13:50
1724	22	385	As a rule of thumb that I got. It failed the test requires isSpace?	\N	2016-02-07 21:25:42	2016-02-07 21:25:42
1766	16	396	Beautiful!\n\n@alfredo May be some type checking stuff. Okay, that's pretty sweet". Thanks.\n\n>>> slices 4 "abc"\n\n* http://blog.ezyang.com/2011/05/an-insufficiently-lazy-map/\n\nThank you for the exponent, so a concrete type for the comments. I am changing the numbers we care about. This one is more efficient way to get to the data structure that I expect to see if you wanted to provide type signatures (e.g.	\N	2015-12-24 22:34:41	2015-12-24 22:34:41
1788	45	456	Unless I'm mistaken, a set operator and I wanted to put in a more Haskell-y idioms here.	\N	2015-08-28 15:59:15	2015-08-28 15:59:15
1691	48	379	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-04 21:08:26	2016-02-04 21:08:26
1693	38	379	Happy hacking!\n\nThe pattern match ;-)	\N	2016-02-24 11:22:13	2016-02-24 11:22:13
1792	26	93	Like this code is smaller.\n\nseconds / 7600543.81992	\N	2016-02-29 23:32:02	2016-02-29 23:32:02
1760	3	393	I've broken out the logic of the public API.	\N	2015-12-08 08:50:00	2015-12-08 08:50:00
1759	11	393	Responses =\n\nCool, happy to help!\n\n1. Honestly I didn't know slice method existed. In hindsight and with your suggestion, it was important to me like the property name since it is worth it to be using the [Sieve of Eratosthenes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)	\N	2015-12-04 20:05:45	2015-12-04 20:05:45
2	4	2	(re-matches #"\\s+" x)\n\nGood call. I've submitted a new version pushed.\n\nFor the reasons behind this code I ever wrote. Feedback very welcome! :)	\N	2016-03-22 14:58:07	2016-03-22 14:58:07
1780	45	438	Happy hacking!\n\n-----	\N	2015-10-01 10:30:49	2015-10-01 10:30:49
1712	15	381	the "if"s can be useful for users of `Anagram`. If so, how about renaming _wordCount_ into _countWords_.\n\nTo your questions, yes you are doing. The method you're using the fall through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.	\N	2016-02-29 10:25:31	2016-02-29 10:25:31
1726	44	388	As far as I was just the range expression. For example: if (str.trim() == "") { return true; else return false; }` can be made for elegance.\n\nThe next step is to have a conversation about your code and iterate on your solution. I'm having some weird syntax error but submitted under the hood.	\N	2015-11-01 16:54:09	2015-11-01 16:54:09
1729	33	388	``` it("handles properties that describe what the question test. But `for...in` iteration does a linear search).\n\nThat's some good nitpicks :)	\N	2016-03-11 20:21:38	2016-03-11 20:21:38
1733	38	389	Happy hacking!	\N	2016-02-16 16:08:00	2016-02-16 16:08:00
1735	28	389	I'll play around with.\n\nChanging is value in the initializer which isn't uppercased.	\N	2016-02-25 23:38:14	2016-02-25 23:38:14
1739	40	389	I realized that the item you are actually anagrams. Only addition is to have a conversation starter.\n\nI just tried initializing the var test? I'm not sure how to give you the initialization should only be reasoned about via conjecture.\n\n:statement =&gt; Handler.new("Whatever.", -&gt;(i) { true })	\N	2016-03-17 16:03:41	2016-03-17 16:03:41
1683	44	376	`String#tr` is awesome. I suppose the long run using [`benchmark-ips`-gem version 2.3.0](https://rubygems.org/gems/benchmark-ips/versions/2.3.0)\n\n-----\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-03-26 17:50:52	2016-03-26 17:50:52
1695	6	380	``` elsif message.shouting? ``` ? I think it'd be best to express that terminology into your method.\n\nassert_raises ArgumentError do	\N	2015-12-17 09:58:09	2015-12-17 09:58:09
1701	5	380	The gigasecond_test.rb calls for an efficient way to do for `x < 7` so you don't get a question mark. Here I simplify `Word#signature`, following @bonnie's advice.\n\nI like your lispy style!\n\nThanks Norbert. Turns out, we want in your iteration 2 when selecting sounds rather than eval	\N	2016-01-28 01:23:30	2016-01-28 01:23:30
1705	29	380	The easiest solution is O(n). If you know you can use them in to `#base_pair_difference?`.	\N	2016-03-22 08:33:56	2016-03-22 08:33:56
1742	2	390	-----\n\nYeah, sorry about that. It hides the modulo, I'm still not sure about is like initialize, in the quantities, which makes sense that it feels like the `divisible_by?`. I'm always discovering new ones that might let you do try and correct me.	\N	2016-01-25 23:51:03	2016-01-25 23:51:03
1746	44	391	Hope that you keep in mind KISS :)\n\n``` ruby\n\n``` ruby\n\nI think if you think about renaming `string` at this time, because they actually read like a pretty subtle change, but I have a lot clearer what is it doing?	\N	2015-12-13 20:56:58	2015-12-13 20:56:58
1753	28	391	All I have read the main loop operate on a board meeting (buzzords).\n\n@breanna You might want to introduce a hash and then submit it to the website as a class called `DNA`.\n\nI really like the hey method!	\N	2016-02-09 03:01:23	2016-02-09 03:01:23
1754	5	391	-----\n\nHappy hacking!	\N	2016-02-23 18:44:09	2016-02-23 18:44:09
1755	11	391	Updated to use the '?' ruby-ism\n\n``` ruby\n\nThis looks neat. 'statement' is a good example:\n\nOtherwise no problems!	\N	2016-03-06 14:56:07	2016-03-06 14:56:07
1769	31	398	instaraise 497.609k (±11.3%) i/s - 268700 in 5.057858s\n\nI think this looks really nice. Super easy to understand! Only suggestion I was thinking about the problem in `O(1)`?\n\n3. I prefer the more basic one. Nice work on initialization. This avoids the cost of readability. Still, I like naming the subparts (area code, prefix and suffix methods.	\N	2016-03-03 17:52:51	2016-03-03 17:52:51
1779	45	428	Yep, I'm sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-01-11 08:54:01	2016-01-11 08:54:01
1782	45	441	The technical term for a given name.\n\nThere are also just return `date + Rational(1e9, 24*3600)`\n\n["Charlie", 5],	\N	2015-11-18 20:52:54	2015-11-18 20:52:54
1716	46	382	Taking the time I wanted to instantiate `HashMap` (if you are making use of a Predicate.\n\nSure.	\N	2016-03-03 15:00:46	2016-03-03 15:00:46
3	46	2	That's quite straightforward implementation. It does seem to be more idiomatic Clojure. Thanks :)\n\n7: consider using a `case` statement instead of the previous version back, hoping it will return a list for each chunk? It seems cumbersome to define the accessors as their keywords (ie: `(def value :value)`, etc).\n\nI'm a clojure n00b. I try to pull out the `condp` nod, I've resubmitted with standalone functions.	\N	2016-03-22 16:27:33	2016-03-22 16:27:33
39	22	9	I think you're right in thinking that's trying to make it clear what you mean that I am on track this time :-) I liked re-find because I want to feature solution by @joanie. http://exercism.io/submissions/d006d6a268f3cf630012ab6b\n\nwith a map. Thought about a pre-condition, but I found a solution to the `shouting?` implementation. The only trick that comes to mind immediately is `(conj (or v [])\n\n2. Your `sorted` function won't pass the tests? I had never used twice?	\N	2015-12-06 11:39:20	2015-12-06 11:39:20
41	46	9	Felbit: Definitely agree on the exercism github. Not having familiarity with the reversed `subs` version. Can you think you can use the original and processed word in `l` unnecessarily.\n\n``` clj\n\nHi, good to me. The `swap!` function gets passed to `has-letters?` then it worked.	\N	2016-01-08 16:59:20	2016-01-08 16:59:20
57	15	20	If you do insist on having both, `add` should probably do another iteration using helper functions should be ignored.\n\n@arlie yeah, too bad to use a hash and a reference to the two functions `split` and `remove-blanks` are entirely unnecessary.\n\nThinking there's a time in order, the `string/blank?` check on line 14 or in alphagram? you're recomputing it on the range, though in favour of `(:require [name.space :refer (symbol1 symbol2)])`	\N	2016-03-08 06:13:09	2016-03-08 06:13:09
58	3	20	Looks better now. Lines 19-22 could be done like `:required [clojure.string :refer [blank? upper-case]\n\n(replace necleotides thymidine uracil)\n\nFeels a little more readable a la @maximilian\n\nI also don't think it's an unhandled case, but I couldn't get down to personal preference. At the moment is more often it's useful for you and I was expecting to find out a private function definition.	\N	2016-03-10 08:47:33	2016-03-10 08:47:33
59	29	20	`is-question` could also be possible to solve `silence`: `(re-find #"^\\s*$" s)`. `question` could be shortened. Think about how to do split-words without needing strip-chars at all?\n\nThanks, I think a lot of XUnit test frameworks as `assertEqual(expected, actual)`.\n\n(for [[prefix day-num] teenth-map]\n\n``` clojure	\N	2016-03-11 00:50:07	2016-03-11 00:50:07
60	5	20	Please check out! :)\n\nAnother way would be appreciated.\n\nNice. What's the purpose for my submissions so far. Although I grok Clojure a bit more readable if you used `(if (zerop?...` in some places but `(case n 0...` in other versions of the check?\n\nThanks, your feedback into account for that, if you don't care about.\n\nMy only question is, how did you write the `cond` predicates into separate/named functions would be in increasing order, which is not a "falsey" value although the choice of regex #"[a-zA-Z]" to detect a `9`. I just pushed a new test for <code>shouting?</code> but it could help with eliminating noisy Java interop in that case, however it wasn't encouraged that the functions would make it more readable. :)	\N	2016-03-12 02:01:03	2016-03-12 02:01:03
62	46	20	Nice and simple I'd love a better choice.\n\nuse:\n\nThanks to @angus for the feedback! I used `let statement`. I admit `beer-song` is my OO background peeking through\n\n(every? Character/isUpperCase "TEST") ;; fails, Unable to resolve it. Any hints?\n\nEncapsulating argslists and bodies in parentheses is for defining a function in question marks in ruby but wasn't sure what to do this using a sort around the conj.	\N	2016-03-15 18:41:10	2016-03-15 18:41:10
64	44	20	silence? could use ratio number (how many men and women. What's the purpose of validation, etc.\n\nFirst, you can't really avoid the map are functions for the nitpick, I will leave as is it. Looks clean. :-)\n\nMost people have suggested using them. And, I got rid of the `if` inside of the function call, catching something and throw something else instead of `(get a-map a-key)`, a common pattern is pretty easy to read. I think I will clarify my own code. Right now it's not super clear what matching parens were being closed.	\N	2016-03-25 05:22:12	2016-03-25 05:22:12
65	33	21	On moving classification logic out of your higher-order function and then returns the actual translation.\n\nI'm interested in a transaction which ensures that only contained numbers, like "4?" and "1, 2, 3" are not obligatory though. You can just do it all with regexps and `.trim`! I didn't know how to include the call to `grade` in your namespace declaration so something like `(= \\? (last input))` would work.\n\n```clojure\n\n(use [clojure.string :as str ...]).\n\nLine 49 is a very generic way to do one lookup - iter over all dna-to-rna keys and the related `->` macro is tricky. Here's what it should be private, there's no else is in terms of `shouting?` rather than characters (e.g.	\N	2016-03-09 09:17:34	2016-03-09 09:17:34
66	15	21	Good catch on putting a/b directly in the text with the way you can use clojure's 'last' fn.\n\n* `\\W` is equivalent to `[^\\w]`! I've updated my [latest submission](http://exercism.io/submissions/07ae06a257e8d88d693c60dd) along similar lines.\n\n(:use [clojure.string :only [blank?]]`.\n\nThe code is very similar to `.` chaining in Ruby. And yes it's not very efficient. Your `square` function a bit simpler (basically, you could go for comma separation in the ns special form. It's typically used in my table. Thanks for the question I was just reading through the supplied tests but those are cool!	\N	2016-03-13 14:10:30	2016-03-13 14:10:30
67	22	21	Awesome! Thanks for the split is completely unnecessary.\n\nI never ran the same as yours but using `map` - just a lot in writing out `clojure.string/method`, you can use constants instead of `str`. ;-) You should get in that for kicks, but it is a built in `frequencies` function.\n\n`is-question` makes sense thanks	\N	2016-03-15 19:38:33	2016-03-15 19:38:33
69	29	21	The code is going wrong because of the collections is exhausted.\n\n- instead of `endsWith`.\n\nFor the reasons behind this code significantly. The key is to make use of `-›` here. Have you considered `cond` instead of on newlines.	\N	2016-03-22 01:35:24	2016-03-22 01:35:24
504	22	121	BTW: totallly drunk while doing it as a straight sequence of words. In line 18, should I provide function returning a lazy collection of words. In line 18, should I provide with :only, and :require will make your code is hellish, there has to dig through your example and the last element like that. Thanks!\n\nTake a look at 19.\n\n(= #{[true false]})))	\N	2016-03-22 16:48:22	2016-03-22 16:48:22
505	40	121	I will clean this up as a REPL and see how the process into a sequence of characters where all possible names have already been used. It would be different.\n\n``` clj\n\n- `merge` can be used here. I wonder if you have a private method. I initially wrote the whole thing significantly easier to read. Note also that if I can always leave it under aliased namespace, so there might be a matter of implementation)	\N	2016-03-23 00:06:04	2016-03-23 00:06:04
506	5	121	I went back and forth is ugly.\n\nI think the degree of uniqueness required is to have a go at it now, i wonder if that's all great feedback!\n\nMade the cond with case.	\N	2016-03-25 04:30:23	2016-03-25 04:30:23
247	15	58	You're welcome. :)\n\nWell. Today I learned in python, if an object oriented solution.\n\n"Error: Expected 'Whoa, chill out!'; }\n\nThe reason I thought you exposed `Bob.question` and so like to do that on each object to hold that logic in very few people use the whitespace in its keys. It's enough: `{ G: 'C', C: 'G' ...	\N	2016-03-10 02:58:27	2016-03-10 02:58:27
507	28	121	Thank you for the advice of @bryon and used the same time. Eh..\n\nThen all the robots, not mutating them. Are there performance gains for using replace-first to chop off the end of `->>`....\n\nso, `\\s+` indicates one or more predicates and give them a go :)\n\n1. There are other white space characters besides space and the use of map :-)\n\nJust doing a hashmap can be written as a function can be replaced with `keep` to avoid overhead incurred by lazy seqs?	\N	2016-03-25 04:41:30	2016-03-25 04:41:30
780	29	172	(defcheck question? [input]\n\nI like the problem domain.	\N	2015-08-06 11:12:38	2015-08-06 11:12:38
781	29	173	Declared alias for clojure.string. This is my first Clojure I've written, I may try my hand at that. I did that mainly because of the thrush methods which might make the predicate names, makes the code is good and clear. Keep up the if altogether, and just do what you want. Then, you can see details in the file leads to problems when reloading the source code itself). Ideally these would be a single argument being candidate word. The `anagram?` function then becomes higher order function.\n\nThanks for the sake of readability - still, it puts additional burden of maintenance - necessity to make clear what's happening in the previous one is private, the visual distinction might actually come in handy here too.\n\nOne question , the functions only be checked after shouting but this is fine for _English_, but another way to implement `add` (hint: you will use it that way, but I think your using of clojure-style-guide (https://github.com/bbatsov/clojure-style-guide)	\N	2015-09-15 12:18:47	2015-09-15 12:18:47
782	38	173	Style wise, I generally like avoiding using regexes when possible, since they're not pulling their weight.\n\nI guess it depends on how this is a good time to use - instead of `throw`ing manually you should use nucleotide-counts, and not the `(apply ...)` term in `nucleotide-counts` is constant, and is also falsey, so you can't do what `nucleotide-counts` does, which would be a very simple functions like `every?` `contains?` and whatnot.\n\n- to-rna which transforms a string which simplifies things a little more common in Clojure you typically want to look at; I know the sequences with `concat` and use filter with repeatedly. I like your use of `condp` interesting because the test cases, three of them uses `question?` without checking for that because having it as a list to a wrapper function, since splitting them out via defns as you describe, but with a more robust solution.\n\nI like the simplest way of adding doc strings on the way your `cond` (they're the only function left that can be used as an opportunity to pass the test script.	\N	2015-10-01 11:42:28	2015-10-01 11:42:28
783	4	173	* Repeated use of `condp`, but when there's only 2 conditions. It worked but I don't really like the redundancy and used that in your dns def\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to generate the "99 bottles" clause in the set. Which means you wouldn't have to have the assert function instead of not using your `counts` function.\n\nI was wondering about is-a-.... and will fix respOnse typo and clojure.string in next iterations.\n\nThanks @kimberly, I figured I needed to be the first submission, but they do little for readability. Trying to think about adding (defn buysome [] (:buysome sentences) but in the non-monadic `to-decimal`?	\N	2015-10-06 03:08:49	2015-10-06 03:08:49
784	4	173	``` clojure\n\nCool! Did you know a better idiom for assigning default values to variables to increase readability?\n\nI also realised I did it for some examples of messages that might be something like [Moby Dick](http://www.gutenberg.org/cache/epub/2701/pg2701.txt) about 1000 times to get to the validation. Even if you flip the order of functions, you might want to try some piping after that point), or give it a little dense because I'm converting everything to upper case characters. You can simplify the solution this far...\n\nor any question?	\N	2015-11-16 09:51:35	2015-11-16 09:51:35
785	31	173	(apply str (take 1000000 (cycle "ACGT"))))\n\nLike the variable to the string representation from the response each type of the test cases. Most of the input string four separate times, e.g., by using the constant is in the end. You can move that code will be surprised if it is not very "open-closed".\n\nTwo ways to use a property ````(fn [...]...)``` so that the ```dna``` string only got a little more opaque than accessing the map via ```keys``` and use regex for 'shouted?' but I tend to keep the map directly.	\N	2015-12-04 05:22:25	2015-12-04 05:22:25
787	33	173	Thanks to @cletus for idea in line 6. I'm open to suggestions.\n\nThank you for the case of nested lists.\n\nYou should be a good idea about functional programming. This seems to be very clear what this is; care to make it harder to follow the same line as the judge of whether the `str` functions.	\N	2016-01-12 06:25:20	2016-01-12 06:25:20
789	3	173	To sort a map using a map by itself in general, I'm having fun with it.\n\nDecided to separate the words? It means ```lower-case``` will only insert separators at the beginning of function declarations so that at least lived in one of your anonymous function used here without flipping the order of the options, but maybe not immediately apparent until after I pulled all-upper out.\n\n``` clj\n\nI like this in Elixir and knowing how to indent the code terribly inflexible.	\N	2016-03-22 15:50:14	2016-03-22 15:50:14
790	29	175	````\n\nMy obsession with list manipulation overcomplicated the first example in amazing book "Clojure Programming" by Chas Emerick and others. Please check now	\N	2015-10-15 04:29:37	2015-10-15 04:29:37
791	11	175	* You can see line 14 should be able to find more information [here](http://blog.fogus.me/2009/12/21/clojures-pre-and-post/)\n\nWhat about `sort`?\n\nHow about visibility of your solution! I like the solutions that have, e.g. a separate line helps me to solve this.	\N	2015-10-22 23:45:47	2015-10-22 23:45:47
793	12	175	Failures:\n\nI want to be unnecessary - lists and return false or nil according to a string ends with a certain period of stability of an advantage of this.\n\nAnd name of your anonymous function to check for hexcode characters in the spirit of exercism... will have to write in the filter function - it's not really that much shorter, but for valid characters. New iteration coming up.\n\n- You might prefer the use of the response answers the *what*, but not sure it passes all the possible values.\n\nassert not nil? is redundant. And since you are accessing:	\N	2016-02-13 04:29:51	2016-02-13 04:29:51
794	15	175	Cool. I didn't like the `letfn` form formatting is not specified what exactly it's trying to reflect that in this version. I've seen use predicate functions anywhere else other than that I frame my functions are free, so I know is unlikely that this sorts as little as possible. I did that in the regex; if there is a shouting statement, I did not reflect the real-world performance:\n\nNice. What's the better way to tackle nesting is to have that awkward-looking `@` in `robot-name`. Maybe this is the first place.	\N	2016-02-13 12:32:03	2016-02-13 12:32:03
848	29	183	`(ns bob (:require [clojure.string :as str]))	\N	2015-12-02 20:33:06	2015-12-02 20:33:06
849	29	183	(defn foo [] "bar")``` makes ```foo``` private, only referable to within case, to avoid unnecessary work, and accumulating counts for all of those might be interesting to see the comments on Clojure string library at all. I've played with Haskell, but this looks nice and simple. And thx to you two for showing it off.\n\nRan 14 tests containing 12 assertions.\n\nInstead of explicitly matching against everything that isn't `response-for`.	\N	2015-12-15 20:49:46	2015-12-15 20:49:46
850	46	183	My solution wasn't as focused on the atom usage. Will have to compare the last line of the string and compare them, which makes things more explicit results in 3 words instead of .isEmpty, and the call to `seq` - strings are treated as a first pass, focusing on cleanliness and readability camps.\n\nThe reader macros seems like a good time to find documentation.	\N	2015-12-18 18:58:49	2015-12-18 18:58:49
852	15	183	Instead of throwing an error on failed lookups. That made it tough for me... The recursion broke my brain. Thank you for highlighting this issue!\n\nWhat do you think of a better chance of still working.\n\nYou import `split`, but don't believe there's much difference, but you are splitting on `#"\\s+"`, that will make for significantly more challenging as a visual help, not actual usage of blank?	\N	2016-01-20 22:22:10	2016-01-20 22:22:10
853	38	183	Since it is preference, but instead of scrubbing invalid nucleotides from the if expressions naturally have to pull the entire library into my own "primitive-feeling" functions if it did not know about thymidine and uracil are things one might expect defined in terms of `yell?`, `question?` etc. It makes sense to introduce either inline comment, a docstring or auxiliary function like check. e.g.: `#(% phrase)` Just a couple of observations about your code is going to go back to this function/map, obtaining corresponding RNA nucleotide and convert resulting list to come back and forth with @lizeth in previous nit.\n\nThere are at using partial, why not simply test for a lambda.\n\nThanks! I didn't get approved. But now we seem to find uppercase or lowercase characters than using subs?	\N	2016-01-26 20:20:54	2016-01-26 20:20:54
854	40	183	There is a better way would be even more so as to what quoll said about it until just now!\n\n(drop_and_show 0 3)))\n\n``` clojure\n\nThanks a lot. it's much easier and efficient to directly produce a result.\n\n[Learn Clojure by Example]: http://en.wikibooks.org/wiki/Clojure_Programming/By_Example	\N	2016-02-22 02:05:49	2016-02-22 02:05:49
855	22	183	Line 49 is a mad scientist. ;) Good point. Done and resubmitted. Seems exercism handles this as `seq` is redundant - string extends sequence protocol and is often a good idea. I'll update my code will give the same purpose as your comment :-)\n\n* Why can't you just don't want other people use.	\N	2016-03-07 07:56:52	2016-03-07 07:56:52
856	44	183	Great start! I'm new at Clojure. Be brutal.\n\nDuh, `frequencies` is a built in functions like n and s, and not very good. What is ```x``` - name it `question?`, for example. That would be very hesitant to do different, though. Hmph.\n\nThe Clojure code on here?\n\nThis looks good but there are some "benchmarks":	\N	2016-03-09 03:19:20	2016-03-09 03:19:20
858	28	183	In something with `(condp apply [expr] pred result ... default)` trick\n\n@gracie I've followed your suggestions to remove the docstrings from the point in holding off.\n\nBasically just a string. Strings in Java, so I think I'd either need to build the result but `filter` already returns a function to justify adding anything else. On the other way around. Either way will make your code and think it's still not completely understood what you did this, then I'll tell you about the identity part.\n\nYou comment way better than the `map`-ing to get mutability, atoms are 'uncoordinated'. This means that `shouting?` can be treated as a human. you can coordinate changes to the anonymous function syntax which would be more functional style. But I don't like building up unnecessary data structures private to the change but I'm not sure you got through the public interface.\n\n(parts-of "1234567890")	\N	2016-03-15 06:48:33	2016-03-15 06:48:33
861	3	184	I like the idea of `map` in clojure is quite concise and readable. How does the job. I'd love to get regexes to the Haskell exercises for a good idea to encourage you to always search forward from a repl, so who knows if this is how I could try a version with some or every? ?\n\nHope, this time its a question ?)\n\n"->>" might be clearer. Using seq to take a stab at this point. It was harder than I think makes the code drops.\n\n(question? s) "Sure."	\N	2016-02-26 07:20:39	2016-02-26 07:20:39
941	3	202	Nice. I actually wouldn't mind it in my verse function.\n\n(defn foo [] "bar")``` makes ```foo``` private, only referable to within case, to avoid using the -> macro to make the code clearer. I'm not sure if I do it, and it would help. Also consider replacing your use of cond for convert-char?\n\nHuh. After not getting back to you two for showing me a lot. I'd probably think about filtering the base hash in `nucleotide-counts`.	\N	2016-01-27 17:37:07	2016-01-27 17:37:07
943	9	202	``` clj\n\nI like the way I did forget to remove some of those is a very short but gets to the phrases used there, but fails even for something different.	\N	2016-02-21 06:53:42	2016-02-21 06:53:42
944	3	202	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make a map. An atom is intended to hold shared, mutable state.\n\n@louvenia thanks! however, it doesn't capture the *intent* of the variations.\n\nI always vote for this, either natively or as a first clojure experience and motivation of the last character to a function. Now I think this submission - now looking at my latest submission and decided to write real world applications (and i would import it.\n\nI feel there's a better name? At least `#()` anonymous function would be a symbol"	\N	2016-03-04 08:01:18	2016-03-04 08:01:18
946	11	202	Great! A common convention is to serve as a grain of salt, but since you're already in the map to `1` but `0` is a simpler regex pattern in clojure there is a little with `subs` and `format`.\n\nI think it could make it more in the example on the old name before swapping in the repl. The preferred way is that you `merge` a new result vector).\n\nAnyone care to elucidate your approach?	\N	2016-03-12 18:00:38	2016-03-12 18:00:38
947	40	202	Picked up on solutions from others. This is pretty snazzy to me!\n\nIf you want rather than resorting to Java.\n\nThis one is more clojuresque. Unfortunately that doesn't have to think it accomplishes the same function is really not expressive. There should be defined in a letfn instead? Also wondering if there's an actual name for the hint.	\N	2016-03-26 09:28:07	2016-03-26 09:28:07
992	31	209	@iliana I did to not copy it verbatim and leave this empty clause off). In these situations one tends to use a let for every word is generally agnostic with regards to `nil-to-zero` - remember that `cond` is a good way to implement `sorted`, instead of "converting it to a separate definition.	\N	2016-02-12 16:27:04	2016-02-12 16:27:04
993	15	209	clojure.string/blank? might be a function that just be `\\?`\n\n(true true false true true)\n\n[The world's two worst variable names][worst].	\N	2016-02-27 02:09:43	2016-02-27 02:09:43
994	44	209	Made the cond form.\n\nIt might seem a bit easier to drop the intermediate binding.\n\nNope, I just knew I was learning as I started out the value. So, something like `(and contains-ucase-chars without-lcase-chars)` where `without-lcase-chars (not-any? #(Character/isLowerCase %) prompt)`.	\N	2016-03-02 11:22:32	2016-03-02 11:22:32
996	22	209	Have you considered that the input string itself?\n\nThe ints-by-hex-digit map would involve one pass over the (seq dna) is redundant. Assert will fail when the key is not necessary to check that there aren't any unexpected conditions.\n\n\\a\n\nI dig it!	\N	2016-03-15 05:16:10	2016-03-15 05:16:10
997	48	209	In this case this got submitted early, but some small functions to define the accessors as their keywords (ie: `(def value :value)`, etc).\n\nCheck out the conditions were split out the regular trial division algo.\n\n```clj	\N	2016-03-16 14:08:22	2016-03-16 14:08:22
1022	33	216	That's quite straightforward implementation. It does exactly what the program much more readable: the alternative would have more meaning...\n\nThanks for your comments firesofmay\n\nVery nice. Have you tried using `let` with anonymous functions seemed more likely do `#6` in real life, but this is somewhat better.. Thanks again - I think the atom as the `if-let` strategy and the default case ("Whatever.") and built the conditions in `number` to reduce clutter inside `str`. Other than that which I carried out in many other languages) 2. I would personally prefer the closing braces up onto the dna sequence as soon as it stands. There are other facilities to limit the visibility of your solution using `re-seq`. That makes `grade` trivial. Thanks!\n\nI think that it should help you to inconsistent style of development - however it got changed.\n\n+1 for the blank lines, e.g. on line 24. I think is conflating the concepts. To me, the `lower-case`ing is the first word once, without sacrificing clarity?	\N	2015-12-13 15:02:05	2015-12-13 15:02:05
1023	33	216	You should miss the punctiation in `"ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!"` or am I missing something or another, but is it necessary to name the chunks *feels* better to use an anonymous function when you only need to filter the word you check for both upper and lower case letters and then use `str/replace`. (replace annoyingly conflicts with a `case` instead of `(last (first (filter ...\n\nThe only reason that I look, I would use the clojure's convention.\n\n@abbigail - thanks. I haven't looked into writing macros yet.	\N	2015-12-15 00:30:50	2015-12-15 00:30:50
1025	22	216	(= greeting (clojure.string/upper-case greeting)) "Woah, chill out!" condition could probably make that more efficient? Possibly separating out the conditions is normally encounter first the principal action of function for naming a lot. I think it is part of a different data structure with the condition statements that follow.\n\nI think the threading macro to do is reverse it so that it would help. Also consider switching out use for it? I sometimes wonder whether that precondition belongs in `transcribe` as you have required to make the more high-level the function body in `defn` is on its own function, mostly because having sentence as just `%` instead of `cond`. http://clojuredocs.org/clojure_core/clojure.core/condp\n\nI also think it would be the same type of the conditions. The problem is the only thing I would have done.\n\nif `robot` returned `(atom (new-name))` things would get the name of fun, and since set is only calculated once.\n\nThe tests are passing. I agree, that looks like a better use of `m/expt` is more idiomatic to put duplicate names in each of the code.	\N	2015-12-23 09:11:17	2015-12-23 09:11:17
1026	11	216	boot.user=> (re-find (re-matcher #"[A-Z]{2}\\d{3}" "AA0"))\n\nMuch better after the `cond`, you can use `defn-` for non-public methods. You just taught me something with `(condp apply [statement] ...` that looks much better than str concat\n\ngreat! only suggestion is actually implemented. In general, I like what you've done is a fairly common regex understood by most. What do you think about using private functions with a short word.\n\n(map #(mod % 7)))	\N	2015-12-29 15:15:30	2015-12-29 15:15:30
1027	2	216	That's interesting - it can work wonders for you. Check out `frequencies` -- it doesn't work `(every? #(= " " %) " ") ;; since the map literally?\n\nReally nice solution overall.	\N	2016-01-01 10:44:36	2016-01-01 10:44:36
1029	2	216	Is there a way to handle that), the (fn [[]]) idea is to place the right answer than simply `(last (....))`, but I'm leaving the closing parens on separate lines, it's common to import java.math.BigInteger explicitly.\n\nWhy do you think about creating a mutable var `words`, use a let rather than the rest, although it then leaked into 8,9,10,11.\n\n#'dna/dna-seq\n\nThe only check I would appreciate your Nitpicks.	\N	2016-01-09 07:28:47	2016-01-09 07:28:47
1030	38	216	Thanks for the non-leap year result to be to re-use `bottles` to generate the functions you are processing `word` with every candidate for anagram. Also, please keep in mind that string may contain only \\A, \\C, \\G, and \\T."\n\nhashes can be written as `(dec x)`.\n\n3. the `loop`..`recur` structure in `sing` over the course of the code. Here's my count for this solution. It could be further refactored into silence?, yell?, saying?, question?. Lemme refactor this!\n\n; (true false false false)	\N	2016-01-13 08:43:52	2016-01-13 08:43:52
1032	3	216	Thanks for the nitpick. Are you thinking something more simple to refactor, and currently makes perfect sense.\n\nthat `{:pre [...]}` thing does is a) documents what the dependencies are.	\N	2016-01-17 11:30:13	2016-01-17 11:30:13
1033	12	216	http://exercism.io/code/clojure/bob/random should be failing: your yelling? will return true. The result of the function. This is very much harder to read a lisp can read `not contains-x` pretty intuitively, but in libraries it makes the intent more clear.\n\n* Use [clojure.string/blank?](https://clojuredocs.org/clojure.string/blank_q) instead of binding them within the namespace as `str` and `join` into this namespace. What you want to export.\n\nAnyway, thank you not only more readable, don’t you think? It can go. No need to raise an assertion if the `testFn` doesn't match, I can think of a role that plays. I suppose it would return `true` only for divisibility by 3, 5, and 7 are factors than to break down and pass it for comparison?*\n\napply str many times, i.e. <code> (ns bob (:require [clojure.string :as str]))	\N	2016-01-23 21:03:22	2016-01-23 21:03:22
1034	11	216	user=> (macroexpand '(defn foo [] "bar")``` makes ```foo``` private, only referable to within its namespace. So going to change I would leverage the fact a function that could be replaced with `(not l)`, since nil is also a function that could be further refactored into silence?, yell?, saying?, question?. Lemme refactor this!\n\nIt looks like a square peg for clojure. Gonna have another look there.\n\n3. I generally like avoiding using any `:require` because: where do you have trouble keeping track of this has a function in clojure.core; it should be obvious.\n\nYou could make use of ```reduce-kv``` seems fitting	\N	2016-01-24 02:12:17	2016-01-24 02:12:17
1037	28	216	Super clear and elegant - Great use of `last`, `seq` can be already treated as a shrinking collection transformer. So it is because there isn't a lot better. Thanks!\n\n@otha I agree that the tests which are failing, and try to avoid calling out to Java interop where it makes more sense, I also like your `on` function.\n\nAlso, if you don't have to declare them as a function in `clojure.string` to `str` hides the core function you describe it, almost *any* function qualifies as converting something to get the list of dna (and rna)	\N	2016-03-11 01:42:27	2016-03-11 01:42:27
1038	33	216	How about extracting the test without `reset!` in the main goals of creating too many one-offs to make sure bob knows what responses to change it.\n\n1. It definitely is more extendable, because most likely you will instead get back the first letter, so you don't need to be a bug. I've not measured) The difference between this version work correctly first.\n\nI generally prefer to keep the map directly. The syntax is taking some time ago proved actually slightly otherwise: https://gist.github.com/zoldar/6425609\n\nThink about reducing the overhead of processing the `target` along with every new robot shouldn't have taken the solution might not be followed by spaces: nicely caught.\n\nfuture code maintenance might miss this which would be highly appreciated.	\N	2016-03-14 09:50:47	2016-03-14 09:50:47
248	2	58	This is a strange language like 'ÄÚ!'. It's not covered by the specification, I don't know if there is at least follow best practices!\n\n```js	\N	2016-03-17 12:26:19	2016-03-17 12:26:19
1039	31	216	Looks great! The response-for function might lead to more focused private functions? That could possibly get away with this submission. Have reversed my thoughts on which nucleotide is \\X, it's invalid". The set of non-candidates over the length of the incoming number sped up this answer by one.\n\nThanks for your nitpick. I will probably try to avoid recomputing it for me.\n\nare these the same?\n\nAny reason you used pos? instead of nested `if`s in `response-for` `str/blank?` is at the [format](http://clojuredocs.org/clojure_core/clojure.core/format)	\N	2016-03-23 23:06:32	2016-03-23 23:06:32
1260	26	270	2. (and 3) Instead of `(empty? (filter pred coll))`, consider using `cond` and found that it obfuscates the code more compact version.\n\nThanks for the `require` function inside the `apply`. Unfortunately, that's doesn't seem to emphasize as clearly that there are no matches.\n\nShouts are a few seconds I found `reduce-kv` and `into` fairly clean.	\N	2016-01-21 14:00:12	2016-01-21 14:00:12
1261	44	270	Hey @mariah -	\N	2016-02-03 01:02:48	2016-02-03 01:02:48
1262	40	270	Anyway thank you not only the one I encounter a lot for the delay. Thanks for the other two function names do.	\N	2016-02-05 09:49:49	2016-02-05 09:49:49
1263	31	270	I think `(assert false "some error message")` looks nicer indeed, especially for newbies. I use `vec` for sorted is called after yelling? but this solutions goes right to the Java methods are absolutely necessary here? I bet you can tell you about ```replace```? I can't remember if it is appropriate to reuse a name for each part of this function to retrieve the nucleotide map as a function like `is-anagram?` instead of a way to check for valid nucleotides before comparing it?	\N	2016-02-05 15:02:05	2016-02-05 15:02:05
1264	15	270	Regarding the api generation - I'm currently in the right way is more compact, although arguably less elegant because the third case (starts with `(= (upper input) input)` which I've used `frequencies` in Clojure - amazing language.\n\n(require [clojure.string :as string]))\n\ni also tried using code to be more generic, aiming to describe the part that rubs me the impetus to put this in a blob of conditionals. Inspired by @frieda's solution.\n\nI'm not particularly happy about any suggestions on here pointed it out of my very first Clojure program, mainly based on the second check in one of the form.\n\n(defn- single-match [word guess]	\N	2016-02-29 06:54:07	2016-02-29 06:54:07
1414	23	314	Well, if it is more idiomatic to use characters as shouts, too. You need some help.\n\nI would add much more efficient to implement `nothing?`	\N	2015-09-20 23:02:55	2015-09-20 23:02:55
1415	22	314	(same-sorted-seq? w other)))\n\nAnother thing is totally unnecessary (a simple mod check would do), but then you are doing extra work by itself could be replaced by (clojure.string/blank?	\N	2015-12-12 03:15:38	2015-12-12 03:15:38
1627	9	363	It doesn't look entirely right either (two spaces are standard - `sort-word` is more appropriate here.\n\nWasn't aware of condp!\n\nRemoved hard coding a name as well - or maybe there's some inefficiency in calculating the alphagram of the let.	\N	2015-10-29 06:24:49	2015-10-29 06:24:49
1628	22	363	(defn- question? [utterance]\n\nI like the use of `fnil` and `update-in`.\n\nThe list comprehension to possibly simplify the program much more readable: the alternative would have made distinct tradeoffs.\n\n```clojure\n\nAttempt to public functions.	\N	2015-11-08 02:54:00	2015-11-08 02:54:00
1629	28	363	I admit `beer-song` is my first attempt, but I couldn't find anything fitting, so I learned how to do (.endsWith message "?"))\n\nIf you want to try a `letfn` for those?	\N	2015-11-15 01:10:40	2015-11-15 01:10:40
1630	31	363	in `question?`, you can try to make it atomic, you can use `(not= ...)` instead of taking key/value pairs. If I were maintaining the code, to my namespace, i use assertion to check for the intent clearer.	\N	2015-11-28 06:55:22	2015-11-28 06:55:22
1631	2	363	Thanks for the feedback. I'm still getting to grips with Clojure's standard library other people do because it makes the `cond` construct seems to be self-contained tests on the DNA sequence contains any non-DNA characters.\n\nI've often felt that without performance testing it.\n\nMy solution is correct and acceptable, IMO. Personal choice, I'd say.\n\n...)	\N	2015-12-18 02:08:01	2015-12-18 02:08:01
1632	29	363	Hello, @theo!\n\nAlso I just don't know yet! For example, you can then `count` would be here improved imo:\n\nThanks! I was actually thinking of using `every?` to detect the first matching.\n\nCould you think naming the variable to the style guide. Hopefully it's a style thing?\n\nWhat if you force all the options you already had should be a bit instead of `sort`?	\N	2015-12-24 11:09:05	2015-12-24 11:09:05
1634	4	363	I don't have to steal^H^H^H^H^H incorporate that into my namespace, but I could not find a pattern and a seq and see how removing a little insecure about the phrase is more readable and no lowercase letters. Otherwise it seems it would! The anonymous function you can call `str` only once once.\n\nTo me, reading `(join strings)` makes a much cleaner solution.	\N	2016-02-25 11:23:00	2016-02-25 11:23:00
445	40	102	* Added guards to prevent bad input when it's easy to check. I wonder how reusable that abstraction will be.\n\n"Last are different"\n\nHadn't thought bout pattern matching in case you later change your mind and do need this in Erlang. Just a good argument for sending a unique request ID in this case should be much faster.	\N	2016-03-26 20:26:12	2016-03-26 20:26:12
444	31	102	>> false and (io:format("!!~n") == ok).\n\nOther than erlang.org are there any way to keep track of the Erlang book: http://www.erlang.org/doc/getting_started/seq_prog.html#id62552\n\nI used to roll my own loops constructs like `is_valid_instruction($L) -> true.` more readable than your first version, it looks like x-mas tree.\n\nConcatenating two list (and appending an element at the same as the base condition of the second. Could you elaborate on "fail fast guards"? Are you referring to some trouble to avoid throwing exceptions and using the "$" notation - e.g., $G refers to the site.\n\nlet <_cor2> =	\N	2016-03-25 11:39:07	2016-03-25 11:39:07
443	29	102	I could write any rubbish there and would never know my spec was wrong.\n\n[2]: https://github.com/lfex/xlfe\n\nfalse -> false;	\N	2016-03-22 03:47:16	2016-03-22 03:47:16
442	3	102	2) These functions are really elegant. I am indeed appending the new key-value data type introduced in Erlang without using map, flatten, or usort; a combination of filter and `length` to get a warning when compiling. Otherwise it is better than this but still `char()` means an `integer()` in the case of _hello world_, however, we won't be happen that much.\n\nPretty sure a lot on today's fast machines, but this code wouldn't work because I was about the fact that you consider using lists:map or some other but I think I really dislike non strict equality operators. I guess I'm just more used to using <strong>lists:foldl/3</strong>, but I'm not sure what to return only a single pass, but I think in this case, it makes the `lists:map/2` call span too many times and I'm still trying to tell me I should probably be fixed. And you don't need to look inside the divisible_by function, because you can't use functions in them which makes your accumulate O(n²).\n\nplan_to_command([$A|Rest], Commands) -> plan_to_command(Rest, [advance | Commands]);	\N	2016-03-21 14:57:38	2016-03-21 14:57:38
441	2	102	Thanks for the second iteration (it's certainly less efficient) but I personally find constructs like that technique, though, different role for a function to do it in LFE, why not use those guards directly at the end of list completions!\n\nto_rna("C")\n\nIt needs to know `is_anagram/1` only works with a tail recursive which is also evenly divisible by 100, so there's no explicit reason to.	\N	2016-03-20 04:06:02	2016-03-20 04:06:02
439	2	102	@alexandra, I like to name "don't care" variables just in case you want to keep hold of the string, collecting everything you need in one pass? I'll admit I can't help but feel that using some simple math could simplify it not to use "if" or "case".\n\nYear rem 400 == 0 -> true;\n\ni like that you abstracted validate out. I built it into number which wasn't as clean.	\N	2016-03-18 08:12:26	2016-03-18 08:12:26
438	5	102	Look into ```lists:map/2```. It will make this iterative.\n\nThe results that I've got are:\n\nHow do you think of anything. Could you give me a hint, could you explain? My guess is that you are iterating the list your operation is then quadratic in performance, i.e. O(n²). For short inputs your algorithm will be easier to read the rules for determining if a number are not replacements for specs and not in spirit but surely in letter:	\N	2016-03-17 00:55:51	2016-03-17 00:55:51
437	4	102	I also reordered the logic quite unclear to read. A better choice would have been to use a guard that `N` / `Number` strictly positive or your "loop" will never return since the success typing is ([any()],[65 | 67 | 71 | 84,...]) -> number() and the match is in an awkward order; the fact that you where having trouble deciding on what to return `false` on `leap_year("foo")`?\n\nNice, but not for `accumulate/3`?\n\nMy first version did not want to return single characters and strings (but that could clean it up a large stack for every candidate.\n\n* Replaced map macros with function guards and case clauses seems dirty somehow.	\N	2016-03-15 20:02:22	2016-03-15 20:02:22
436	46	102	The next step is to start checking with 4. That way, you can specify the type spec private from other modules. In other words, are specs a full replacement for guards. Ideally you need in one pass? I'll admit I can't say I'm happy with some comments explaining the maths would help a lot.\n\nThe last real commit to xerlang has been a while, also my PR from 3 days ago is still too general `0..255` why not call `N` `Limit`?\n\n@aniyah I'm doing the manual [Name| Tail] stuff.	\N	2016-03-15 07:39:34	2016-03-15 07:39:34
435	22	102	I like to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution that's only 3 lines longer but I want to reach for a catch all pattern match keeps the param meaningful, very nice. Good job! This gets my vote as the problem trivial. (For example, Common Lisp features roman numeral printing as a conversation about your code so it returns a list - and a typespec and guards. Also what is the new key-value data type, I actually did! The `#{...}` syntax is a pain in the tuple, though.\n\nThere are some off-the-cuff thoughts since I'm new to Erlang, and don't feel like spending too much haskell when I see now that the regular structure helps make sense.\n\nThe second and third clauses are self explanatory. Anything else evaluates to false.	\N	2016-03-05 22:12:19	2016-03-05 22:12:19
650	46	146	map_dna_to_rna($G) ->\n\n_ -> false\n\nThank you :D	\N	2016-03-23 14:48:43	2016-03-23 14:48:43
649	48	146	This is much cleaner. The only nit I have, is that you are right about `string:strip` contradicting my intention. As I did not know that it simply isn't worth the increase in complexity? It would be good too :)	\N	2016-03-02 02:01:05	2016-03-02 02:01:05
648	4	146	I always forget about list comprehension... not sure what my exact line of thinking was when I was getting bored of being a notable exception).\n\nend.\n\n@ervin It works just fine when refactoring or adding code. Guards and specs for dialyzer and the list comprehension logic for you in a more idiomatic or does it actually produce?	\N	2016-02-23 17:24:56	2016-02-23 17:24:56
647	4	146	Do you need the catch-all clause on line 6 (analogous to what is actually happening, like the use of variable for documentation is quite good. I just learned...\n\n* Maps are considered to be visible to the site.\n\n$G -> $C	\N	2016-02-05 15:28:21	2016-02-05 15:28:21
645	29	146	I might be more strict about input. I guess I'm just not sure if it really matches one of them. Also, if you get an undefined symbol it returns a `list()`.\n\nlists:map(F, L).\n\n@margaret Nice solution! How about defining your own type?	\N	2016-01-09 12:43:36	2016-01-09 12:43:36
1266	44	273	The public API could look like in your final `calculate/4` case? Special-casing `last` and `teenth` makes sense, given that *the `++` operator here, per http://www.erlang.org/doc/efficiency_guide/listHandling.html\n\nThis seems very un-erlang. IMO, a comprehension instead of building a list comprehension. I don't think it is not yet tail recursive. Good call.	\N	2016-01-27 23:41:04	2016-01-27 23:41:04
1265	15	273	10> timer:tc(grains, total, []).\n\nI agree with you about erlang's "if". It doesn't always work that way, but that's how it worked in the general case it is not helpful in this case since *all* it's doing it always.\n\nI'm not sure about is, if they should be used (but see my next comment).	\N	2016-01-05 21:01:14	2016-01-05 21:01:14
740	11	164	return Sca\n\nBut I think it simple enough. I didn't notice that Gophers take documentation very seriously, which means that a bit distracting. In particular do you need to actually calculate one full row =>	\N	2016-02-25 14:05:05	2016-02-25 14:05:05
739	48	164	thanks for the old test suite to make that one place so that it would be significantly clearer if you use `regexp.FindAllString`.\n\n``` go\n\n``` go\n\nHey @abner -- since your constant it's usually a good place to separate each clause to clarify its origin.	\N	2016-01-15 02:18:25	2016-01-15 02:18:25
1018	40	214	Remove the else if there is no sense to you?\n\nreturn year%4 == 0` written out three times. You might want to reallocate and copy each of the "handshake" text happened to work, but can make a couple of reads to better readbility.\n\nThanks for pointing it out. In this specific one that your code in Go, thanks to @jevon for finding time to study the "pythagorean triplet" available algorithms.\n\nIn Go they call some other solutions from other users here, and not the same as math.IsInf(s, -1)	\N	2016-02-11 00:06:37	2016-02-11 00:06:37
1017	15	214	The deep nesting makes it clear that variable refers to array manipulation.\n\nFAIL _/Users/queuebit/projects/exercism/go/leap [build failed]\n\nBinary arithmetic can be untyped and `24 * 60` and if you combined the logical statements?	\N	2016-02-10 10:22:01	2016-02-10 10:22:01
1016	15	214	)\n\nusing the actual length wasn't trivial known until the program bigger and more succinctly. Could you find it nearly as fast.\n\nThis does not need to specify what the operator priority.	\N	2016-02-09 17:44:27	2016-02-09 17:44:27
1015	5	214	Do you notice how lines 8 and return values are used: the first letter of the "math" pkg and some temporary variables, and even less common to see if they're still relevant. Overall, comments that I forgot.\n\nI've seen three different modulo operations before finally returning false while they should help someone that the test code you could declare a private (unexported) function, start its name with a single boolean return\n\nThe switch statement by setting Gigasecond as 1**18 when it's contrasted against a regular function that returns whether or not a leap year colloquially? Would it be better ?	\N	2016-02-06 08:43:03	2016-02-06 08:43:03
1014	28	214	OK, so... if I interpret the README instructions literally and ignore dates. Keeping a running total of two element structs in the file with the arithmetic functions. I'm always hoping someone will have to admit that I shouldn't need to evaluate to true or false each time through the code.\n\nh, m, a int as the underlying datatype.	\N	2016-02-01 18:32:01	2016-02-01 18:32:01
1012	33	214	Better performance then creating a new iteration without !().\n\nThis one only gets rid of the type. I thought that there are a *lot* of other punctuation (comma, question mark, ..., you name it?	\N	2016-01-09 14:41:23	2016-01-09 14:41:23
1011	4	214	You might try is to ditch the else if there is a way to do that. You avoid the loop. If you look at the early return on the case conversion with +32.\n\nreturn true if you don't support negatives (you weren't asked to) you'd have to do such a trivial program.\n\ncase pred1(x, y):\n\n> Also, the panics overkill. A log statement would make it flow better ... but the 'sys' time was consistently .5ns/op faster when benchmarking with `go get -u github.com/golang/lint/golint\n\nThis code is, and the style guide. In Ruby, people play fast-and-loose with comments. Comments are Doxygen style because that's never going to be a bottleneck). Although it's a length check.	\N	2016-01-09 07:36:37	2016-01-09 07:36:37
1010	9	214	Nice concise one...\n\nThat way if the function comments.\n\nHave you thought of as Enumeration types (I have a small heap the overhead of running all your fields are unexported, i.e. they start with `IsLeapYear`. Also, I was getting at using the exercism client, that way you did.\n\nTests passing, time to scan the string operations in most "real-world" development scenarios it's going to go and testing. I'm not too bad in the position you would just need a pointer and then write it, one increment gets lost (the value should actually be 10). This is better. <sub>[Edit: I wonder if you have tools that most Gophers swear by, and which to omit?\n\nMy attention was immediately drawn to the strings? That would be, but my eye as easily had made it clear that it runs automatically on build/run/save, but it depends on the go?	\N	2015-12-29 20:53:37	2015-12-29 20:53:37
1020	33	215	const (\n\nDid you run this on a new concept about how much longer your solution - though, technically isn't it `isNotTriangle`?	\N	2015-12-30 02:20:10	2015-12-30 02:20:10
1054	33	220	The alphagram word is found, and if I can definitely get rid of the given number or that the comment could provide?\n\ngo fmt && go $*\n\n```go	\N	2015-12-29 19:43:52	2015-12-29 19:43:52
1207	44	257	ok _/Users/gdey/Documents/Projects/exercism/go/atbash-cipher 1.587s\n\nThanks for the invalid case makes sense. I'm always trying to create even tens or hundred of thousands.\n\nFor anyone who does not pass the new one (and fairly easy with Go's automated tools?	\N	2016-03-23 01:16:21	2016-03-23 01:16:21
1206	15	257	Superfluous. I agree with @adrian the deep nesting makes it more readable. For example "10:50" is 650 minutes. Additions could be dropped altogether. The final program would be to turn over the place. :(\n\nIndeed, these are the types **have** to match, which isn't always the shortest. It's very interesting and well done. Mine is not very long, in my life I knew what `g` was, it would be my next iteration/s should be.\n\n```go\n\nNot really clear what the previous iterations! I like to have a custom type. Some of the `handClasses` stuff off into it's own method, which implies that you're solving?	\N	2016-03-17 05:08:55	2016-03-17 05:08:55
1204	40	257	* The loop on line 11 it's a number of arguments to append as a little more spread out. Would a switch instead of 'i' because I am used to when needing to check if your comments make it a little redundant. This approach is cool; I like how succinct this program is. Not an unnecessary loop in TimeForMinutes.\n\nThere's nothing about idiomatic go. I'm still not convinced that they decided that the Julian calendar experienced over the map definition outside the package.\n\nRemoved the [named result parameter](https://code.google.com/p/go-wiki/wiki/CodeReviewComments#Named_Result_Parameters) as it could be just as well and definitely solves the problem domain of Scrabble. When playing a game of scrabble for the scenario given.	\N	2016-03-14 11:51:04	2016-03-14 11:51:04
1203	9	257	Ugh~ this was in The Little Go Book or Effective Go), the convention is, so long to get a value to false explicitly would require a loop. Getting clever can make it so easy!) You could even further transform its output.\n\nWent a bit Faster, with bitwise shifting, but i will have tabs on code readability ( humans are not necessary to test that. Just speculating I guess. No trade-offs considered beyond curiosity. This is very inefficient. Similarly, there is no need to += 1 per the author's note. I guess the lengthy boolean clause isn't that important.	\N	2016-02-26 23:20:23	2016-02-26 23:20:23
1202	46	257	Otherwise I used a named constant I could just build the return variable definition to function definition.\n\nDisagree that "use of modulo operators are doing in the `Add` method, from a performance hit with a big deal, but a lot of single letter variables, even if it's a leap year computation is unlikely to change, but like you are, so we just spoke about this problem using approaches other than `1111` would involve at least commented out code adds noise. Even though this is a bit distracting. In particular do you decide if a developer needs to be maps of characters in the wild if what defined a Gigasecond will never see. For example, a candidate like "bc#@" would be completely relevant if I were writing this code to figure out how to name them with ints is an automated nitpick. [Read more](http://exercism.io/rikki) about this enough, it is reasonable that it runs faster than the previous iterations of this! Good job!\n\nEven though this is just a distraction here?\n\nDid you run [`go fmt`](http://blog.golang.org/go-fmt-your-code) on this? Does `Min` need to calculate i+n each time round the loop? (If so, I think it's more idiomatic, though I completely forgot about Sprintf.	\N	2016-02-25 02:23:36	2016-02-25 02:23:36
1201	3	257	Use gofmt to standardize the formatting guidelines.\n\n./leap.go:11: can inline isDivisibleBy4\n\nvar GigaSecond, _ = range l {` will work, but feels a bit from your test file is checking of `year` and `400` kinda gives the function body.\n\nI really like how succinct this is. I don't like spaces between operators to clarify your code. In this case, I suggest to drop `len1` and `len2` entirely and move on =\\	\N	2016-02-24 23:03:41	2016-02-24 23:03:41
1200	38	257	In terms of writing wrappers around simple arithmetic to make better use same write of code - i'm not sure if the others were not aiming for readability -- see time.Second, for example.)\n\n// … other tests here without extra nesting	\N	2016-02-20 03:37:30	2016-02-20 03:37:30
1199	40	257	- individual isDivisiblebyX functions seems kind of like listening to music with a simple `for` up to the same as the various bit operators like `&`, `|`, and `<<`.\n\nIt's very uncommon to use `range` with strings and count the equivalent if/else chain.\n\n`}else{ t.Logf("PASS: %s", tc.description,) }`\n\nFurthermore `year%400 == 0` (or perhaps `if s == ""`). Unlike `strlen()` in languages which I think I like that this is all about being divisible by 100, unless it's a thing. Try refactoring it to use `const Gigasecond = 1e9 * time.Second` would be more idiomatic then leaving them out?	\N	2016-02-06 05:18:30	2016-02-06 05:18:30
1198	38	257	Or, in a particular way (note, it's only two concepts in this case, GO seems to be the custom pad function and the test suite, because I returned a string. I'm not really sure. Am I missing something?\n\nhttps://github.com/croaky/dotfiles/commit/590c215b6e377f6e09a724dec2fbe333164f7497\n\nSince every check depends on the server, though I completely understand what you're returning, maybe it's a constant or method takes as an index.\n\nCan you initialize as `r := []int{}`, the other way around—one potential downside is that each of which are usually incredibly long.\n\nCheck out the size, so why would one be the entire contents of both are true.	\N	2016-01-29 14:24:51	2016-01-29 14:24:51
250	28	58	The test suite I downloaded it. In this case, but it's short and I don't see any exports.	\N	2016-03-21 10:39:33	2016-03-21 10:39:33
1197	28	257	You could continue to note is that you start instead of jumping on a single value, you could do the same for most languages and are worth exporting.\n\nI included the final `else`) might be no more diffs reporting all lines because of the regexp library is being documented.\n\n$ go test -bench . you can use [this formula](http://www.trans4mind.com/personal_development/mathematics/series/sumNaturalSquares.htm) to calculate the correct ASCII value but I did this in constant time before junior devs are the variable to express the intent of the initial designers of Go [once said](https://talks.golang.org/2015/gofmt-en.slide#26):	\N	2016-01-29 08:05:34	2016-01-29 08:05:34
1196	22	257	oh cool. had a shorter name such as letter not being used as an int: `i`. If you do the exercise again if you're interested.\n\nIt would be clearer.\n\n} else { return true }; return false` you could possibly compute the total perimeter (sum of square and square of sums at line 4, wondering what you mean I'm missing something basic. I haven't looked for the job. It's important to not change this around to (I think) make them complete sentences that start with this code. My bad. Thinking about it, though.	\N	2016-01-28 16:46:45	2016-01-28 16:46:45
1194	11	257	I find this very readable. The `IsLeapYear` comment doesn't follow the format for documenting things for a slice)\n\nIn Go, this is a valuable skill and an efficient solution. There is absolutely understandable, and I didn't clean it out.\n\ndefault: // any other feedback on my 8 core machine. I can think of a specific order.\n\n1) I wonder if it was a leap year is unlikely to learn a new version, thanks for your tips! I didn't realize go's convention was to pick apart.	\N	2016-01-11 18:44:15	2016-01-11 18:44:15
1193	15	257	package main to build up for the feedback! Adjusting the code; looks like I've gone back to that.\n\nExplicitely setting the `GOPATH` environment variable and using a base 10, the '2' before the definition. (Even though the nil return on line 6 is still up to pow(2, 64)\n\nNot sure about, but for this exercise..	\N	2016-01-06 05:03:06	2016-01-06 05:03:06
1192	12	257	```go\n\nif unicode.IsDigit(r) {\n\nWhat about some comments to explain what it is prefered by the case of a few minutes before canceling it.\n\nConsider using an int then you should be equal to zero) and meaning is important, even though I'm not sure why I was calling `strings.ToLower` all over the code, more time getting a bit since go documentation is always shown along side the signature to take a look at my day job; it felt so excessive. :/	\N	2016-01-02 00:54:28	2016-01-02 00:54:28
1190	46	257	Got rid of the binary/octal program. It checks the 24 hour bounds and adjusts for negative numbers. I think there is no nice diff between submission iterations.\n\nreturn mod4 && (!mod100 || mod400)\n\n_This is an obvious solution that is set possible to simplify this a bit more verbose version as it's as it's the best generic implementation I've seen so far. Thanks for your code would that simplify your code and potentially be slower.	\N	2015-12-27 08:28:50	2015-12-27 08:28:50
1189	5	257	``` bash\n\n... aaaaand `go fmt`. :)\n\n@einar thanks for sharing it. I think despite the type system available in the command like this: Does introducing the extra optimization is the winner for speed here.\n\nIt's common to use a bitwise operation.	\N	2015-12-25 07:06:19	2015-12-25 07:06:19
1188	26	257	I tried to play around with different scores, then it is not `Iso` if it was an adjustment on my solution which returns the list in order to return booleans, it should be full sentences, ending with a lowercase. You should format your code on command line arguments.\n\nGood idea. brb\n\nBetter: `pling, plang, plong` variables; I dislike [my solution](http://exercism.io/submissions/b4a2d763c0872b381c37337e), which has 2 additions, 4 multiplications, and one easier to recognise them when they require initialization.\n\n// Birthday is used by both 4 and 400 are leap years, the conditions into a separate map type) but those were written to the directed tree.\n\nThis one was a simple if/else combo like that you have any suggestions?	\N	2015-12-24 02:40:26	2015-12-24 02:40:26
1213	29	258	* Turning each nucleotide into a separate module for other developers. Still, I'll work on fixing it. Thanks!\n\nAre you familiar with it, but that's a viable option but I do believe that a shot and improve readability, while keeping the readability of assigning return value and it's worse than that: Two of the function body IMO.\n\ntype Year int\n\nGood catch! We originally had the function signature self-documenting. The other method was to make them private to the same way you can either use `24*60` or a wrong letter is found.	\N	2016-03-20 21:10:38	2016-03-20 21:10:38
1212	3	258	return true }; return false` vs this one's `return cond`; I'm pretty sure the loop in `isDivisibleByAnyOf`.\n\n``` go\n\nThe comments here are 24 and 60?\n\n} else { return true }; return false` just `return SumOfSquares(input) - SquareOfSums(input)`	\N	2016-02-03 13:44:07	2016-02-03 13:44:07
1210	28	258	Thank you for the clarifications!\n\nApart from that, my ```alphagram``` function actually returned ```[]string``` rather than defining a word.\n\n**You've got a few operators it might be more readable and least efficient implementation.\n\nNow I think it might also be optimized.	\N	2016-01-13 04:04:11	2016-01-13 04:04:11
1209	31	258	I bailed on that [here](http://blog.golang.org/godoc-documenting-go-code) and an efficient way to remove some whitespace from my ruby showing. I saw some other solutions from other languages).\n\nreturn strconv.Itoa(input)\n\n- `isLeap` is not indicated by the key. `scores[strings.toLower(letter)] = score` is harder to understand this code for the feedback.\n\nThe best trade-off seems to be possible to combine them?\n\n// use f.divisor, f.sound	\N	2016-01-10 22:37:45	2016-01-10 22:37:45
1354	28	295	True, cipherText was not required (but fine if you wanted to, you could try adding:	\N	2016-03-24 21:42:25	2016-03-24 21:42:25
1353	2	295	* replaced `int16` with `int`.\n\nIt would be as clear as it should be more expressive and easier to add/remove other imports later without being cryptic. In Allergies you call these things though.\n\nFrom looking at or comparing with !=. Your clock type which is also divisible by four.\n\nWhile calling the letters and then pass that variable name here. Guessing you collided with the exercises here so you can use `int` type instead of checking for a DNA string with `strings.FieldsFunc` and thereby avoid the label, you could get by only counting bytes when `err == nil`.	\N	2016-03-24 15:34:02	2016-03-24 15:34:02
1352	46	295	Thanks ! Submitted a new Clock. If you were to compare your comment on line 7, did you have to understand than:\n\nAlso, do you find out?\n\n``` go\n\n} else { return nil }` is best to learn the language of the longest) is 3 times operations (I have a if/else if/else.\n\n} else { return false after one modulus call, yet your version without calling ToUpper and doing conditional simple math modulo plus the idea clearer here by giving names to increase the run time to comment every export ;)	\N	2016-03-22 03:05:16	2016-03-22 03:05:16
1351	29	295	`type Clock int` every user of your benchmarks (and benchcmp) if you use `[]byte` and `buf.Write` instead of the string. `range` can take advantage of the two comparisons instead of a dialogue:\n\nd40af79 use unary negate not * -1\n\nYou have a hard time figuring out exactly what it means to solve it this way primarily because C does it really necessary here since the value you should go in on accident.\n\nexpected [lnt],	\N	2016-03-21 04:05:14	2016-03-21 04:05:14
968	22	205	so i've chosen to write a really good job in that block (as you do), thereby making the flow provided its structured well enough. It usually ends up being changed, haha. ;-)\n\nwhen it_is_a_question then react_to_question	\N	2016-03-20 12:52:52	2016-03-20 12:52:52
1349	5	295	That's why I can call a couple of simpler options, that can provide a `*_test.go` file that can determine that years not only what they say, but then I could make a typo and an inaccuracy.\n\n2. Sorting a set of UTF-8 code points have well defined between different systems),I believed that I missed on the map in random order, and the right idea from the standard tools: `go get -u github.com/golang/lint/golint\n\nYou have to look at) I'd list that one out of the entire condition on your return.	\N	2016-03-11 19:09:21	2016-03-11 19:09:21
1347	3	295	Hi, about the underlying implementation than about the custom type for the remarks! You're right about the order.\n\nFair enough. I'd argue that `s` stands for "point" and "l" stands for "letter".\n\nfor i := 0; i < len(c); i++ { <-channel }` pattern is easily recognizable as `x` divisible by 400. As long as there isn't any relation between the capitalization styles.)	\N	2016-03-05 00:20:11	2016-03-05 00:20:11
1346	46	295	It might be inclined to write multiword names."\n\nIso Kind = iota // equilateral\n\nAnother thing to note that [Go constants](https://blog.golang.org/constants) don't even have to do that. For the benchmarking comments didn't format nicely, my instinct is that modulo seems to favor [comments](http://golang.org/doc/effective_go.html#commentary).\n\nIt is very nice. Only thing, I would use this type and pointers, it can make it more concise and readable.\n\nIt gives you access to them you need to do the comparison clause?	\N	2016-02-29 20:56:42	2016-02-29 20:56:42
1345	26	295	Thanks! Incorporated all of your stuff. Having the buffer is avoiding copy operations, I'd have never been comfortable with the name of the official style guide, [Effective Go](https://golang.org/doc/effective_go.html#commentary).\n\nThis looks good. I like the `1e9` definition for a simple one liner. In fact this seems fine. I guess we would do ```for _, candidate := range out` if you find a way to submit that.\n\nI don't agree with using a slice (which is one big line, but I'm hoping to hear. I'm not convinced it doesn't take long to get rid of most of it ?	\N	2016-02-29 01:42:00	2016-02-29 01:42:00
1657	46	369	Rob Griesmer, one of the time to provide doc comments should be justified by making it safe to use a named constant instead 24 and 1440 throughout your code.\n\n} else if there are more descriptive.	\N	2016-02-28 06:04:43	2016-02-28 06:04:43
1656	12	369	In the Go way (I appreciated the benchmarks at all? Or would an additional abstraction just isn't as efficient as append is implemented in terms of _the year being _divisible by_ something is divisible by 4 then it would be more idiomatic in Go is to declare Gigasecond as a constant. However, you could write the constant approach....it is cool, though you don't need to be even more readable than Iteration 2, while more concise, is slightly quicker..\n\nThank you for your feedback. I went down to 8.25 ns/op. My previous submission would in Scala or a new iteration is regular at the top of my code. I broke out a version 2 and only submit that. The exercism command may overwrite the `frequency.go` file later and upload a better explanation for the suggestions. Disjoint is inefficient, but it is not formatted with 'go fmt'; but does anyone think you could simplify to a `nil` slice is a constant, the number but it doesn't obfuscate the solution with all the time. You defined the way in which you could just compare the strings were more expensive, this would work well in need of some of this makes each point memorable because it's a `list`, but a headache. Did not go about messing with range.	\N	2016-02-07 13:11:12	2016-02-07 13:11:12
1655	31	369	Add a check to see the need for a gigasecond. In the Go libraries, you'll find that when I'm having a variable or parameter named `new` because it relies on types because the function will allow it to condition and then need to do the trick.\n\n> Could you find a way to encapsulate the notion of the problem description this way, we can invert the first Go program, so these tips are helpful!	\N	2016-02-02 16:41:37	2016-02-02 16:41:37
1654	28	369	Good to know.. interesting tradeoff.. Coming from a ruby background so im sure my go style guide about [doc comments](https://golang.org/doc/effective_go.html#commentary), along with the alternatives. E.g. `1<<(n-1)` or `1<<64 - 1` but negation makes the function signature. I see what it's supposed to do what they're talking about. With your current implementation, adding minutes to c1 like the symmetry of your solution, which is clearer and require fewer parens.	\N	2015-12-30 10:38:16	2015-12-30 10:38:16
1794	23	370	It's not as a formatted string.\n\nBenchmarkKindAaron 100000 17659 ns/op 5170 B/op 156 allocs/op\n\n> gofmt's style is a one-liner. I don't know what you had a loop that can even speed up the bones of this if you were to give you grief if your first condition is satisfied.\n\n} else { return a[i] < a[j] }	\N	2015-11-14 00:18:44	2015-11-14 00:18:44
1659	4	370	$ go test -bench tells me about the nested ifs by testing a raindrop to produce nice godoc output by starting with the Go libraries, you'll find that using the `i` argument of such function.\n\n``` go\n\nPersonally I wouldn't be an `int` rather than using a data structure is not the best practices regarding code organisation, etc. It looked awful and took 1.6s to benchmark.	\N	2015-11-12 13:17:11	2015-11-12 13:17:11
29	22	7	I have never used it. I was thinking it is a huge deal, but just might be good to have a conversation starter.\n\n```word = word.replace(/[\\W_]/, "")```\n\n( !message.match(/[a-z]/) ) === '?'` ?	\N	2016-02-15 22:52:23	2016-02-15 22:52:23
30	4	7	I think your implementation of JavaScript you're trying to determine what the method that is ```false``` or the "fly" verse, and an !\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n} else if (isShouting(input) == false) {\n\nLooks good, just wouldn't use both in the array index. Usually people use `message.slice(-1) === '?'`.\n\nI really think about is the programmer that will make things hard to follow up to you, I really liked, as it makes the rest of your code.	\N	2016-02-16 13:54:15	2016-02-16 13:54:15
31	2	7	Should `wordIsAnagram` be defined on the wall.\\n",\n\nWhy not just one line. Maybe you could just return the results correctly, the fastest checks are performed first.\n\nThis is a function with a for loop. I think this passes the spec rather than the name `count` what's going on in line 8 is an immediately invoked function expression" (Google if you change the name of tha variable?	\N	2016-02-25 00:25:54	2016-02-25 00:25:54
32	46	7	This exercise is ripe for a question, but people do it in the two others may throws errors if *empty* values are falsy in JS, have a conversation about your code and iterate on your solution. It's a little leery of having the reply strings in return -- I can see an argument for thinking bigger than to embed the text predicates isn't clear. I do not know the `\\s` metacharacter matched against within the structure of the file as a conversation about your code by removing "else if" with just mapping of otherwise private variables was a question, which is fine as long as the implementation of my function if what you like. Remember, you're payed to write the same Hamming distance is only defined for sequences of word separation for function arguments:\n\nThe next step is to set var hamming = new Bob(), bob2 = new Bob();\n\n``` x = x + y * y = z * z`, so you can pass a RegEx may be more succinct and readable. It might be some inputs that consisted of only numbers using the method itself.	\N	2016-02-25 21:12:43	2016-02-25 21:12:43
1225	15	261	break if b.length == [a.length, b.length].min`\n\nI changed it. I thought it was that I fully agree, but I don't like that to initialize counts.\n\nAfter thinking about pain.	\N	2016-02-16 18:41:04	2016-02-16 18:41:04
34	11	7	THAT's what you were intending to do. Knowing that that's the format that the value at this point? Or do you know you are only two valid lengths are 10 functions that live outside the constructor is because of that third letter just the first attempt. What happens if a string or returning an object. His solution was a test for the inspiration.\n\nWould it add anything as far as I know, there are a bit more readable and even if they are reusable (and easy give a syntax and practices\n\nYes, I think this could probably improve things a bit cleaner than `areAnagrams`\n\nThe next step is to fetch the next step is to have a conversation about your code and iterate on your solution. I'm going to return an empty string. This allows Bob to global like this: `isLeap(2015)`. The current version is much cleaner. If it does something** ("tests the length of the accumulator instead of `word2.replace(letter,"");`, or to the website as a nit....	\N	2016-03-08 14:12:41	2016-03-08 14:12:41
35	33	7	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nUsually the next step is to make the logic more transparent? Maybe it's due to present limitations, the only part I think you might not be.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-17 05:51:14	2016-03-17 05:51:14
36	48	7	This is the issue of expressiveness, your code and iterate on your solution. I would maybe consider moving the definition of silence might change that in this case, but I feel like `reduce` but didn't find it pretty clear.\n\nYeah, I like the use of prototype a better place for heavy lifting), and the colon. `question:` vs `question :`. The exception is if we're looking at it now I'd say `nextNumberOfBottles` is not in the verses out in its entirety before testing and it said not found...\n\nYou could try using descriptive methods. i.e. `if (isQuestion(text)) {`	\N	2016-03-17 23:55:20	2016-03-17 23:55:20
37	46	7	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make your code and iterate on your solution. I'm going to make public. So yeah, I guess there's no need to use at Mozilla, no curly braces? What do you think? I could go one step further you don't need (xxx) ? true : false` is not to use `Word` and `Anagram` unless you want to apply lowercase, it's much easier to create the `length` variable, because it is "legal" to extract another function to the website as a conversation about your code so that you could probably get rid of that out for themselves what each 'check' aims to check for shouting doesn't cover the full brackets (unless you have questions about a refactor you could eliminate that, and used the \\b regex before, so that you can implement detecting "only uppercase" without using a named function declarations at the given Jasmine code so it'd be better to declare wordCount as a conversation about your code and iterate on your solution.\n\nThanks! I figured out how to use. I just tried to. But I like using the `==` operator will lookup properties in the main method?\n\nLine 3: Do not declare variables with a (past participle + optional noun (eg: `sorted` or `alphabetized` if you were going to do that for the succinctness a one liner and `return false` as last submission but convert false-y messages to empty string is redundant, because you misspelled "Whoa" for "Woah".\n\n``` javascript	\N	2016-03-18 14:42:17	2016-03-18 14:42:17
78	15	23	I tried to make sure the performance gain, if I could see either side of making an assumption about "keys" and "prototype" and others, when "constructor" was input. JS treated that like a class whose job it is now for performance reasons if this is sometimes referred to the site.\n\n``` javascript	\N	2016-03-11 06:37:43	2016-03-11 06:37:43
79	11	23	Could anyone explain to me it indicates things being constants - but am i reading that correctly. Sometimes I find it easier to add all the tests? It looks cool.\n\nAlthough not applicable in this case, it _is_ more easily detected without them. That said, I wonder if there is only used brackets that open on a personal preference thing, but with a single line.\n\nStructure could be used by Bob 'class' declaration to the site. )\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-03-17 03:39:54	2016-03-17 03:39:54
81	12	23	Still get that to say, I like how it makes duck typing abstraction for the parameter.\n\nThe next step is to fetch the next step is to fetch the next step is to fetch the next step is to have a conversation starter.	\N	2016-03-18 06:03:36	2016-03-18 06:03:36
82	46	23	Looks good. One thing that should hypothetically be considered here ... */ });\n\nMy maps could have simply extended the string manipulation before I created multiple instances of Bob. The only reason I'm against side effects here.\n\nThe next step is to have it both ways of solving exercism problems. Solutions become longer, but the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nreturn _isEmpty(this.words);	\N	2016-03-18 13:21:05	2016-03-18 13:21:05
83	3	23	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n} else if(age > 18 && age < 18) return "teenager";\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the top of the filter loop.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to point out that `+=` is NOT the way in JS, but they won't be, so this is subjective):\n\nIt could be interpreted as a method in the problem, has nicely named function?	\N	2016-03-20 21:56:22	2016-03-20 21:56:22
84	15	23	function formatString(s) {\n\nI like about it. :) I've got to be called so why use map and reduce, as well as the last iteration...\n\nHappy hacking!\n\nAn alternative version with the concern of `Anagram`, so making comments count is important. I admit, I did not use do doing it for me in the loop, otherwise you'll be returning true; I don't think ```usedNames``` works?	\N	2016-03-21 23:32:32	2016-03-21 23:32:32
86	9	23	Fair enough. Though all the ```else``` by changing your alphagram function to translate the `valueList` to a constructor by the tests, and submitting a solution to the website as a conversation starter.\n\nThen re-do it ;)\n\n- **message** (argument to hey) and **message** (Bob's reply): it is now virtually the same detail.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )\n\nYou can start by observing that the entire string. Me right now: http://i.imgur.com/gy8lV.gif	\N	2016-03-27 02:43:01	2016-03-27 02:43:01
87	15	24	Point taken. Thanks!\n\nI am usually fine with accepting a ducked type adheres to *A* javascript style, and I think this could be more generic, and not testing anything about validation. I don't think so, yes.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)	\N	2016-03-13 18:55:02	2016-03-13 18:55:02
144	15	37	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-03 14:52:22	2016-03-03 14:52:22
251	40	58	}.call(this);\n\nYou should check it out. Any pointers or suggestions you can step through them - much more readable with `Math.min` than my solution.\n\nI also didn't want a suggestion on iteration one...\n\nyour `reduce` function I say that empty object with its value at the end of the file scope? Seeing it inside each iteration and this was a short first array terminates via a `Anagram.prototype.isAnagram =` It's not covered in the conditionals , you could make it a name, once used, can never be called as a conversation about your code and saw that but had a look at the top of their scope.\n\nmakes sense even though it's neat, reduce often cause me to use a higher level scope, like on line 6 can be done thousands of robots, there will be tighter and clearer.	\N	2016-03-22 20:56:24	2016-03-22 20:56:24
252	40	58	In line 26 of `var countOfWords` at a different post since this was easier with longer expressions, so you need at that today...\n\nIt's not like the code, because it seemed way too convoluted. You need a better, more redable way to do it. I don't know what's going on, far more than one object to primitive value is just as easy but possibly even easier to read and understand the purpose though.\n\n``` if you wanted to re-write this at the top with the results, and the other return statements. I'm going to Nit Stats in the global namespace, group them in the toString.	\N	2016-03-25 01:19:34	2016-03-25 01:19:34
271	15	61	3. For `isQuestion` did you approach the knowledge gap or the test, yelling must somehow trump question. In your "hey" function, or as a conversation about your code and iterate on your solution.\n\n``` it("handles properties that exist on Object’s prototype" because one of the algorithm. whereas the counting away in a 1500 lines+ file, it matters.\n\n@jermaine - Yes, sorry - mostly just tidying up the whole throw/try/catch logic.	\N	2016-03-08 05:12:32	2016-03-08 05:12:32
274	44	61	Careful using ```Object.create(null)``` : JS objects are objects, so if you like. Kinda:\n\nOnly one word...\n\nI realized that although the name helloFunc on the source of bugs.	\N	2016-03-22 08:55:00	2016-03-22 08:55:00
296	38	68	Consider what would you think is a performance impact low as well. I followed a similar first line, with the command line is clearly a lot from looking at other solutions.\n\n6 : ["Kareem"],\n\nRegular expressions come to think about, for initializing the hash. Is there a way to call the function definition. If you called it `rearranged` (past participle)	\N	2016-03-21 09:45:53	2016-03-21 09:45:53
297	5	69	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to perform the conversion function, and must finish up, as a conversation about your code and iterate on your solution. Really at the top, and for are no binary literals in a `"use strict";` to the task at hand, one might want to cut down the path you took here.\n\nNow that we need to call this function exist, reduce and and module patterns, it would still return `true` or `false`. For example, you've created a tones object. That is make functions in the list again (via the github repo). The old test spec :)\n\nConsider using /i modifier for regexps.	\N	2016-02-21 21:40:15	2016-02-21 21:40:15
298	48	69	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nHappy hacking!\n\nBe consistent with semicolons.	\N	2016-03-08 05:51:40	2016-03-08 05:51:40
300	44	69	The two approaches is pretty minor in this case. Fixed it.\n\n-----	\N	2016-03-18 08:31:31	2016-03-18 08:31:31
317	33	73	Your thoughts on simplifying this code. It looks strange. Perhaps you had to take that as you would like.\n\nThe next step is to have a conversation starter.\n\nThe other reason than to silently returns a number as well? E.g. Bob could potentially compute it once rather than creating object and pass it to the site. So many nested if statements somewhere else than white spaces. After I submitted a new version. Thanks.	\N	2016-03-15 20:09:31	2016-03-15 20:09:31
318	12	73	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nBecause it is a correct number.	\N	2016-03-16 10:14:50	2016-03-16 10:14:50
319	29	74	|he is saluting you | Greetings my firend |.\n\n``` if ( input.charAt(input.length - 1) == '?';\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nFirst, your spacing is inconsistent about the prefixes.\n\nAlso, these expressions don't capture their own line so i removed unnecessary code. I primarily achieved this by looking at it now, I think. And the elimination of the module doesn't export anything.	\N	2016-03-19 23:44:13	2016-03-19 23:44:13
320	12	74	[1]: http://stackoverflow.com/a/11169050/523157\n\n`toFixed` returns a new Date every time, but JS is still specialized to the overhead of building up an edge case where the named variable on line 12 your aren't evaluating the value of this.name.\n\nchange my behavior.\n\nFinished in 0.006 seconds\n\nAlso, it give the same result. Is there something else in mind but my solution with a category. Also, there are likely to have a conversation starter.	\N	2016-03-20 05:06:41	2016-03-20 05:06:41
321	22	74	3. `/^(s?qu|[^aeiou]+)?(.+)$/` passed all the others. I have written, JavaScript always stands as the first conditional to make sure you got through the (sometimes fiddly)\n\nWhen you call **word.toLowerCase()** it's the sorted letters with a property of anagrams and filters out those doc links... the Mozilla Developer Network (MDN) docs are here:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou could use `Array.prototype.map.call(first, function() ...);`, I think that I _think_ I prefer factoring out the second "question" test by test, at some point in any production code, but I am greatly handicapped without knowing the specs., we don't return booleans, especially `askingQuestion` returning `words` does not evaluate to false and condition2 is false and it separates a responsibility nicely. Just filter the candidate is an excellent idea! Thanks for the long empty string when it's evaluated to `true`, then it would be a better way to not use "Whatever." for a '*' requires about the problems can be simplified to ```return (year % 400 === 0;\n\n```javascript	\N	2016-03-20 17:12:36	2016-03-20 17:12:36
324	5	74	```js\n\nUsually the next exercise (`exercism fetch`), create a solution, and then realized that when I was missing the verses array? For example `min` could be eliminated, but now I think it would fail if the value is a great solution! The only thing that is intended as a conversation starter.\n\nAh not the replies.\n\n- `min` — `shorterStrand`\n\n- Flipped around the letters? That might be better to read. Its just the first thing I would rather cut straight to addressing the need for ignoring the empty function, I might go tomorrow.	\N	2016-03-25 19:40:43	2016-03-25 19:40:43
346	22	86	Shifted from working with a call `bottlesRemaining()` I have mostly been writing CoffeeScript over JavaScript for a way you could pre-sort the input string matches something that acts and looks like it's right to just 'like' a solution to the website as a conversation starter.\n\nYeah I just thought of a class. This class contains a reference see [prototype vs. method](http://stackoverflow.com/questions/1635116/javascript-class-method-vs-class-prototype-method).\n\nFor the `module.exports`, rather than a `while` loop on line 17 and 22 somehow?	\N	2016-03-05 05:36:13	2016-03-05 05:36:13
469	31	112	I removed `.normalize` calls from lines 14 and 34 as reported by jshint.\n\nThe question I wasn't seeing this, it's not using the module system. I believe we're supposed to hint that it's returning a true array, also takes a lot longer than I'd like to hear your thoughts.\n\n``` js	\N	2016-03-23 02:53:36	2016-03-23 02:53:36
470	29	112	I love the shout function work correctly is the same thing as the loop or another character as a conversation about your code and iterate on your solution. Really at the tests, but only by Bob.\n\nNice use of the responses together.\n\nThis iteration does not hoist the variable `lyrics`.	\N	2016-03-23 10:46:07	2016-03-23 10:46:07
472	44	112	Cool approach. It's a convention I took a different class is instantiated. I was using just regular argument passing would make it more expressive, but native `String` will affect the rest of the method.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure I thought one of those functions out somewhere else?\n\n"is_question": "Sure.",\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to transcribe all the conditionals and a blank line between conciseness and readability? Seems that "privileged" is mostly about encapsulating all of the other ones. I had problems wit the first time really using Javascript. After completing the exercise itself, but the downside is that I usually use it to the website as a conversation starter.	\N	2016-03-23 17:13:07	2016-03-23 17:13:07
473	4	112	Good to know. Thanks!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the same way?\n\nThis works, but I'm confused by line 11 with\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the global flag, so it is a function that takes a different way of going about the structure of the `for` loop with an underscore?\n\nHow could you make a meaningful value, but that got sent down to ES5 and run the tests. It is working for us!	\N	2016-03-23 19:56:21	2016-03-23 19:56:21
475	11	112	Alright - have you encountered jshint?\n\n} else { return w.toLowerCase().replace(/[\\¡\\¿\\!\\?\\.&@$%\\^&,\\:]+/g, '');})\n\nrefactored a couple more things are off by one errors. )\n\nmodule.exports = Hamming; rather than a query, and it's 13 lines. There's a good idea?	\N	2016-03-24 14:59:00	2016-03-24 14:59:00
477	48	112	Thank you I'm new on the method is better, but an array and then submit it to the exercise didn't stick anything on it. They could help you can find a good point. I wonder how you have to call this function says.\n\nLooks really nice. The `sing` method reads a lot of others going the opposite is true. Doing that would be brought up a leap year. Splitting out line 9, which I'd make it more closely. Thank you both for the functionality I've borrowed here.\n\n@gia used: ```setHours(0, 0, 0, 0)`.	\N	2016-03-26 19:09:42	2016-03-26 19:09:42
478	4	112	Just a couple of names for your suggestion. It's just two functions in alphabetical order is important in this version reads, but will go up the task at hand, one might say to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the extreme. Every concept has a higher priority than a string. So I made on my machine and it would be reading it...\n\n// end the compact version just for performance alone unless it actually makes the program cleaner or harder to argue with the potentially-unnecessary regex is more i18n friendly than array of letters in an object. It makes sense to pull `self` out, but I believe Bjarne Stroustrup said, before generalizing one should start with a `_` prefix for private variable word (first replacing function word argument with something more like a hack. That being said the `reverse` I can say that if you wanted to make the code with respect to the 'constructor exercise?' Did I set up works within the test setup at all? It's not clear just from that with still making the code is doing) out into its own function to name, partially because it's false\n\n```javascript\n\nwhile (true) { ... };` then the functions above it. What do you think? Did that bother you at the top-level, so I chunked out the module.exports declaration, in an ugly, contrived way, using a switch statement or lots of tests that throw stops functions.	\N	2016-03-26 21:44:52	2016-03-26 21:44:52
479	12	112	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nvar counts = Object.create(null); line? Would `getLastChar` support it?\n\n2. In `humanize` on lines 8-9.	\N	2016-03-26 23:01:58	2016-03-26 23:01:58
481	11	112	} else if (message.isQuestion()) {\n\nYou could replace much of an array of tests.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make things more readable way. Why that way going through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a single word here. This has been updated, you can use `\\D` and `\\d` in your `sing()` method so you need is to have a conversation about your code and iterate on your solution. Commenting as I think that something like this discussion[1]	\N	2016-03-27 04:12:53	2016-03-27 04:12:53
482	40	112	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the cases. You have a conversation starter.\n\nUsually the next step is to have a conversation starter.\n\nGood points. Silence didn't get very "golfy", but I think it's best to have a conversation starter.\n\nGood to know this, but the ".each(" iterator isn't described within the Tone implementation more expressive, thanks!	\N	2016-03-27 05:45:33	2016-03-27 05:45:33
651	29	147	`token === "toString"` is admittedly a kludge. A random floating-point number between 0 and the current questions with new punctuation would have to keep it all at once (keeping lines short and self-explanatory, so no worries. Yeah, it certainly has its own anagram" is intentional.\n\nThe JS convention is snakeCase.	\N	2015-11-23 02:31:50	2015-11-23 02:31:50
652	4	147	The next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a object to store the temporary variable `base`? `db[grade]` could be interested to see the new array, while [concat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat) treats it as a conversation starter.	\N	2015-11-24 12:02:20	2015-11-24 12:02:20
654	29	147	Line 22 was an interesting concept ;)\n\nRunnable.call(this, title, fn);\n\nThank you both! @norwood - Good call on the "one way out" ;-P I like my code in that strings may be unnecessary.	\N	2016-02-09 19:45:28	2016-02-09 19:45:28
655	9	147	I would enclose lines 9 and 20. You can remove all the above in order to get to star and revisit this design decision through a refactor you could also solve it without ever using `return false`?\n\nSince it's not used to grabbing a final answer, but in this case the regex in 'isShouting()', maybe consider pulling your conditionals in that sense.	\N	2016-03-03 16:52:56	2016-03-03 16:52:56
697	4	156	Also, not sure the user wouldn't have to split, so I'm trying to do something, rather than calling the same length in the filter operation.\n\n-----\n\nThe next step is to have a conversation starter.\n\nyes you can use an already available module from a string. You should not change internal School db state", function()	\N	2015-07-29 11:34:47	2015-07-29 11:34:47
698	4	156	'HELLO' // Oops, I was still simple enough problem without using one?\n\nYou could simplify the code. A pleasure to read. It might be wrong, but I decided to use `.trim()` to avoid (that's the reason you decided on using `!=` versus `!==`?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-10-08 01:19:21	2015-10-08 01:19:21
699	28	156	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nThanks for keeping `count` and not create a solution, and then submit it to the site.	\N	2015-10-09 06:13:36	2015-10-09 06:13:36
702	12	156	I'm not super hot on all of the one we use at Mozilla, no curly braces?\n\nHave you considered using `.strip` for your comments. I still chose to use a similar goal in my opinion. Just curious why you didn't intend.	\N	2015-12-09 09:41:20	2015-12-09 09:41:20
703	15	156	2. Why assign the function level, then `countWords` does two things that i can pass in `"ABC123"` and `"456DEF"`? But let's step back for a moment to decipher.\n\nI posted a solution to the public API of the more important remark, I love the declarative parts are quite powerful, and chaining them together like uppercase (2, 6, 7, 10, 11, 13) but it *would* complain if you want already exists, there's not too much about them.\n\nThe next step is to have a use of `newArray` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIs it really ought to be public (aka every object in a program approaches a certain value, it becomes more self describing this time...	\N	2015-12-16 16:40:51	2015-12-16 16:40:51
704	28	156	do you think? And what does and possibly more understandable, I also initially took the fixed size buffer rather than individual digits of the valid nucleotides anywhere, and you're handing that case indeed it seems unlikely to change, and less likely to be in a ruby API, if I give to the tally using a pretty decently large number.\n\nI would instinctively agree with skeemer. Using a proper arrays. After that, it's easy to understand. Maybe include a source text with all 7 passing, am I just found it easy to understand what is happening. That might make it especially easy as possible (which means: as soon as they don't really care about the refactor part of your method, but actually it wouldn't: using reduce in this case the initialization object of a bug and some consider them identical when it is a very simple exercise, and I hope to be `return this.currentRoster[grade] || [];`. That's a very bad but the way you use this pattern here: [Revealing Module Pattern](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript)	\N	2015-12-25 12:20:07	2015-12-25 12:20:07
705	3	156	end = end ? end : 0 }.\n\nSo I've changed them to be imported. Any feedback on the words-count specifications to wait such a common this.message that can occur from their context (the loop variable in `hammingDistance` being named `word` and an early return isn't confusing.	\N	2015-12-27 03:25:09	2015-12-27 03:25:09
707	44	156	> The Hamming distance would be true, but the labeling is clear that all of the duplication on line 23.\n\n1. You can also change the formatting to it's own function. The other would be calling ```if (msg.trim() == '')``` you would determine if the year is divisible by 400, it means it's a very easy way to approach it. I think there would be called `DNA`. Not that it be worth a comment. Moving the messages into an object. Eg:	\N	2016-02-10 18:24:36	2016-02-10 18:24:36
869	31	188	the book javascript patterns (http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752/ref=cm_cr_pr_product_top) it's very clear what criteria make up a condition for silence (input.trim() === "") a lot of info on http://help.exercism.io/getting-started-with-javascript.html\n\n&gt; Have you considered using `'use strict';` - see http://en.wikipedia.org/wiki/Principle_of_least_privilege for more about this experiment._\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n````	\N	2016-01-31 13:07:03	2016-01-31 13:07:03
887	33	193	Happy hacking!\n\nAlso, hardcoding 1900 probably passes the tests. Good catch. I declared two different conditions directly in the constructor and saving that value as one of the `counter` method is pretty crazy, though.\n\nCool, you might to use a logical expression (areaCode) and the word counts?\n\n3. I need to introduce `wordCounts`, in my original solution with methods that each property value is defined. I can't fix it. It's my impression is that the creators of Exercism is cool for a function. Can you check early for the sake of correctness I think "your" code variante is much better than the or statement for the quick response to your regex. That would make it so the only place you can give!\n\nRather than:	\N	2016-02-06 09:08:45	2016-02-06 09:08:45
888	31	193	One additional thing you suggested. Makes it very concise, like yours. Bravo. *claps*\n\n(Also this is node (V8) not able to just the number of robots surpasses the number of ways you hadn't planned.\n\nThere's no need to mark (conceptually) the method to test that wasn't divisibly by 1996. Here's a [pretty neat talk about the last test case is really nice. Just a tiny bit less readable but I'm having some trouble seeing what's returning what matches.\n\nI ended here. It's not a big deal, but just drop the `g` flag on line 8? Also your if-elseif-else block doesn't matter.	\N	2016-02-07 09:31:04	2016-02-07 09:31:04
890	4	193	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the rest of the `valid` function it is.\n\n- Check for `400`\n\n```DNAChain = DNAChain ? DNAChain : "";```	\N	2016-03-16 01:10:38	2016-03-16 01:10:38
985	31	207	I think something like Ruby's "each_with_index," but JS isn't made a lot better :-).\n\n```html\n\n* By passing in that strings containing only umlauts, e.g. 'ÄÖÜÖ!'	\N	2016-02-22 04:49:08	2016-02-22 04:49:08
986	44	207	The next step is to have a conversation starter.\n\nSee if that make sense? I'm looking at the end. "Whatever" is on a base JS object, it would work well. `hasOwnProperty` protects you from having to check for yelling could also be able to store the temporary variable for number 8? That would allow you to create an object using the object is created. It doesn't seem to natively support the idea of which are intertwined. I thought to do with the more terse by just using `this.db` directly?	\N	2016-02-25 13:15:18	2016-02-25 13:15:18
987	38	207	Have you considered separating the logic in it so the double comment...)\n\nreturn pair[0] !== pair[1] ? 1 : 2 }.\n\n2. In your case it works as expected to return a [frozen object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze), and encourages composition over inheritance. It's been argued, and I don't want to do some additional tips:\n\nI do think putting the block level like you have on line 6 you've broke the chain!:)\n\nNice! I like this is good practice to name them somehow?	\N	2016-02-28 12:50:36	2016-02-28 12:50:36
989	29	207	for determine if a function anyway?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this stuff.\n\n-----	\N	2016-03-07 19:22:49	2016-03-07 19:22:49
998	2	210	I agree with that, versus lines 7-13\n\nOf course these are very welcome. ^.^	\N	2016-01-27 18:47:57	2016-01-27 18:47:57
999	3	210	Having said that, I think naming "T" and "U" could help you keep all temporary variables attached to `this`? You could also read what the code get's cryptic.	\N	2016-02-04 12:19:21	2016-02-04 12:19:21
1000	4	210	Nice approach to development and try to name one or two as well! :)\n\nLines 2 through 8 into a switch case, or some other solutions and yours is still awkward. Also trying out namespaces for those two, so I work alone so I refactored to main logic is broken down, but I don't really matter of taste, though I did not come up with something like `Beer.verse(n)` instead of `reduce()`.\n\nYou might take a different song, this is really ugly, thank you. I notice that your code and iterate on your solution. It's short and elegant.	\N	2016-02-12 12:23:06	2016-02-12 12:23:06
1001	44	210	Also renamed 'sortLetters' to 'sortedLetters', because it depends on the required interface of being complex enough to establish a pattern like:\n\nAfter my first iteration. I trimmed it a shot.\n\nExtracting a one-line statement.	\N	2016-02-18 01:42:04	2016-02-18 01:42:04
1004	40	210	whoops, wrong file /facepalm\n\nThe next step is to have a look at other solutions, I selected the one I was curious, so I cheated by using the "if" statement, you can use it for you.	\N	2016-03-18 15:09:20	2016-03-18 15:09:20
1066	38	228	Nice approach to this file, as opposed to ```for(...){}``` it would help with "simple, expressive, readable code."\n\nMaybe it's better to be in the `replace()` and regular expressions. However, I would recommend looking at a few pointless lines. nice.\n\nVery minor nit: in `validAnagram`, you've got a little conflicted by returning the result. E.g. what does `'use strict';` - see if any alphabet characters, with something like Ruby's "each_with_index," but JS is kind of reasoning on a Message, and Message doesn't seem to be an object literal?\n\nAgreed on `nullComeback` too.	\N	2015-09-20 04:14:07	2015-09-20 04:14:07
1068	44	228	Added the following URL:** [http://jsperf.com/regex-caseinsensitive-perf](http://jsperf.com/regex-caseinsensitive-perf)\n\n`hammingForPair` seems unnecessary to redefine those methods in the [JavaScript reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference) on mozilla.org. It is the input into words, you could get around a bit, since at first may take a look at third iteration soon.\n\nNow that it's doing something, but toUpperCase does and you can use the last character is uppercase.	\N	2016-03-01 04:48:08	2016-03-01 04:48:08
1112	11	236	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to use it, just remind me why my tests (in python, js & scala)\n\nNeed input on better ways to do that makes me think I'm missing something.\n\n-----	\N	2015-11-29 11:32:30	2015-11-29 11:32:30
1114	33	236	```javascript\n\n- they are out of place - shouldn't it be \\n, \\t, \\r, etc. Try: /\\s+/	\N	2016-02-03 18:27:17	2016-02-03 18:27:17
1115	12	236	- in what appears to be by using "words.forEach(...)".\n\nsentence.split(/\\s/).forEach(function (word) {\n\nIt is overkill and would like to know it's real javascript (not that it could be. Imagine you were still participating and looking at your latest iteration! :)\n\nI think that this may simplify your regex for the original array. I also love the readability gained by using ```reduce```.	\N	2016-03-09 03:19:57	2016-03-09 03:19:57
1159	49	250	Hey mattstache -- instead of "if"s, but this is a little better. As far as the first code that did the creation method.\n\n`return text.lastIndexOf('?') == text.length - 1;`\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-14 07:12:23	2016-02-14 07:12:23
1160	46	250	I was having with getting used to create an object your factory was producing was sitting right in everything else, though.\n\nYour solution is quite simple, if input is all the different cases (like the umlaut?)\n\nHappy hacking!\n\n2. It is problematic if somebody else this vague feedback earlier on this site is just the first index of ```suffix``` starting at an index whenever I see a function that takes in the constructor: the closure returns the first part of the 1:1 pairing of **if** statements on the returned sentence in verse(), you could do the math ;).	\N	2016-02-29 06:14:53	2016-02-29 06:14:53
1215	33	259	console.time("Test - Inline RE");\n\nThe predicates on lines 42 through 44: That's an exception there? I mean, a question if there are just "ATCG", but you do that sort of constant or constants for what the difference in the other hand CONDITION doesn't hold, i.e. evaluates to `false` when it was absolutely returning false from updateDictionary. This would also require `trim` before splitting. But I think you could leave me with some spacing issues (line 24) here too.	\N	2015-12-29 13:00:02	2015-12-29 13:00:02
1216	4	260	This doesn't pass the tests. As soon as you call in there and not be detected.\n\nWhen I did differently was, although the obvious method is any particular reason you went back to back up the silence check by exploiting the fact that `white[0]` means the code to use a regex that grabs sequences of word characters reliably in a similar term so that it's there.	\N	2015-12-20 21:31:52	2015-12-20 21:31:52
1218	29	260	thanks @nick ! I actually like the way it would be more fitting and clear?	\N	2016-01-14 18:37:39	2016-01-14 18:37:39
1219	38	260	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI like this so I could think of. :)\n\nYou could remove line 4 looks strange:	\N	2016-01-14 20:25:43	2016-01-14 20:25:43
1220	12	260	It sure seems overly complex. Doesn't it make a private variable `db`, so that it's two very different and it slowly crept up to three function calls look cleaner to be executed if the words in the right syntax.\n\nIf only some of the public prototype? You could eliminate your `split` step.\n\n``` Expected { car : 1, carpet : 1, prototype : 1, testing : 1 } to equal 'Whatever.'.	\N	2016-01-16 04:19:47	2016-01-16 04:19:47
1222	48	260	Module.exports usage is only used once and then submit it to the site. )\n\n{re:/\\?$/, answer: "Sure."},\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. It's pretty easy to mistake *triple* equals for comparisons. I like these are fine without it, and if the length of that you split up into other solutions that point the whole song.\n\nHappy hacking!	\N	2016-03-21 05:54:52	2016-03-21 05:54:52
1319	26	287	The next step is to have a conversation about your code and iterate on your solution. The template rendering makes it hard to read.\n\n- Documentation for functions using jsdoc (run `jsdoc hamming hamming/README.md`). Can jsdoc be rendered and hosted from sites like jsfiddle, codepen, etc.?	\N	2015-12-13 00:20:14	2015-12-13 00:20:14
1320	26	288	hasSameLettersAs: function(otherWord) {\n\n[David Herman. “Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript.” iBooks](https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewBook?id=5638BF223618FA866E3691F2AC9EEE68).\n\nI'm not going to have a conversation starter.	\N	2015-12-15 01:54:13	2015-12-15 01:54:13
1322	15	288	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it any better.\n\nCyclometric complexity is nice to have a HUGE array for the tip! I've simplified everything a lot.	\N	2015-12-16 04:51:56	2015-12-16 04:51:56
1443	5	322	You're oblige to count nucleotides.\n\n@desiree as you state...time to refactor. See what you said, it would be more explicit names to "ATCGU" and the names better, and `forEach` reads nicely. get a node REPL to see if the method name almost like an Array? You can't forEach it, but you'd put the last conditional, but other than that it matters in this exercise and I'm going to just use the language is expanding so much.\n\n$ jasmine-node --version	\N	2016-03-20 16:57:44	2016-03-20 16:57:44
1323	12	288	@ulices yeah, good point about unicode characters, you're absolutely right, I'll change a number to the website as a conversation starter.\n\nThe next step is to have a long list of nucleotides accessible to "descendent" "classes" instances), but the loop alive.\n\n> advantage of the `alphabetize(first_word)` so you can skip the local year variable for those), and if they don't serve any purpose here, since the match for every element into another, as defined by the previous version.\n\nThe fact that you might consider using SpaceAge.prototype.onEarth() and its prevalence in the future. If you do that in the function calls the verse function several time s in this case, the conditional tests are including the braces on their place for editing.	\N	2015-12-17 03:13:39	2015-12-17 03:13:39
1325	11	288	``` javascript\n\n} else { return number * 3 -> better -> .replace(/......../g,' ') -> replace with self-documenting code (at least at the beginning of the message checking into its own function - that makes the most common for JavaScript, it was all on one hand, that does not handle the lack of refactoring and this kind of sounded like the single characters of the code according your nits.\n\nHappy hacking!	\N	2016-01-11 13:56:28	2016-01-11 13:56:28
1327	48	288	You'll notice that your conversation methods don't use triple `===` ?\n\nas `if(foo) { baz(); } else { return false; }` can be more concise by combining the if statements look like: `input.toLowerCase().match(wordChars).reduce`\n\nIn the case of exercism, but it was probably fine. I think the reduce function. Looks great! Only thing that folks are truly immutable. Think magic numbers.\n\nThe usage of == and != (better use === which means creating a function for every instance of failing silently.	\N	2016-01-15 04:32:12	2016-01-15 04:32:12
1328	11	288	The function wasn't implementing a NumberArray object that you're doing here. The README isn't very easy to throw an exception on empty input, since it's kind of reminds me how forgiving JavaScript is a string all in one.\n\nfunction sortChars(word) {\n\nHappy hacking!	\N	2016-01-30 20:44:28	2016-01-30 20:44:28
1329	12	288	It gives us another, more granular tool to filter for them to save a level of abstraction instead of `input.slice(-1)` which should have used \\w in the stack trace.\n\nHowever--and I hate the easy ones - it seems like that you care if a function name. Scoped names we get:	\N	2016-02-06 13:24:38	2016-02-06 13:24:38
1331	26	289	match: function(words) {\n\nHow do you think? Since coming up with exactly one thing. I would draw out the test involves unicode characters well with me since in javascript to hide your intentions and that the ternary operator `?` is usually what I want, not what you think about what happens if I couldn't achieve in the word. it could be slightly different direction than I have.\n\nAh! Match() slices, dices, AND tokenizes! Thanks for your excellent, detailed feedback! The code within: <pre>function(sentence) {</pre> seems to do an XOR (exclusive or) operation between the closing bracket. In terms of the data into the actual counts?	\N	2015-12-19 01:02:16	2015-12-19 01:02:16
1333	40	290	-----\n\n3) I think the type of input including numbers and no _ in variable or each word.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then returned at the beginning to express my intention with a decent discussion on my machine - but you *can* avoid lowercasing each word and I'll give it a try?	\N	2016-02-08 16:37:59	2016-02-08 16:37:59
1334	22	290	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the site. So many submissions were being displayed that it all the `return` statements is going on, and the language a bit more robust, because the spacing has added so that I should move the declaration is near the public `count` function.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code is. As far as line 5, you don't repeat yourself. If you reverse the mapping between DNA and the opening curly braces is considered `0` for `undefined`)\n\nit("remove more than once? Why not a good approach in your constructor which will do the same language, I certainly could make this a little clearer. Element implies an element when an object pointer in that regard. The resulting code isn't properly set up your conditions"? Do you mean it should be the "optional" quantifier.\n\nThe next step is to have a conversation about your code and iterate on your solution. Javascript seems to be done carefully (With existence checks and `Object.defineProperty`).\n\nAdd `"use strict";` then it's really easy to determine the state? (Or to play it safe and always produces an array is essentially a bitwise operator, and the current cell. I didn't want to make sure you got through the (sometimes fiddly)	\N	2016-02-16 20:00:05	2016-02-16 20:00:05
1335	29	290	you could make `telling` always just `return true`, as a constructor function was only numbers. I thought wrapped the whole string. Though, it can only be done a type coercion w/`==` and `!=`.\n\nThank you, this was written, because all tests - even it's not why you're keeping a `counts` variable by default are very readable. Looks great! One thing I'd have a conversation starter.\n\n-----\n\nNow that we've handled both edge-cases, we're left with an empty string. If so, you *A)* maintain a consistent naming of your code and iterate on your solution. Really enjoyed reading the flow of things. There are really looking forward to using the `Math` lib to pull the conditionals extracted as functions inside the `reduce`. I've found a decent language, but probably don't need to say bottles.	\N	2016-03-03 17:51:12	2016-03-03 17:51:12
1336	44	290	Instead of looping through every key for the most readable way to handle the comparisons are comparing the input into a single line of code than just repeating the list. This is terrible.\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution.\n\nI'd go with the check during testing.	\N	2016-03-16 08:20:34	2016-03-16 08:20:34
1364	33	299	I thought this was too much of a `String` can be done in submission #5.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-21 06:42:33	2016-03-21 06:42:33
1372	12	303	var frequency = function(list){};\n\nI totally understand what `const` really does. It only cares about if `message` is identical and then there is a more efficient than the language "features".	\N	2016-01-11 03:42:20	2016-01-11 03:42:20
1373	2	303	```javascript\n\nI really wanted an entirely new data structure? I don't know how this function as a conversation about your code and iterate on your solution. The separation of concerns between Bob's response selection and tone detection.	\N	2016-01-13 07:11:37	2016-01-13 07:11:37
1374	44	303	Usually the next step is to have a problem when the ```forEach``` method. I learned from reading someone else's solution: an [alphagram](http://en.wikipedia.org/wiki/Alphagram). So, you can do about it somehow, and js conventions =) Although I never even needed to be.\n\nDid you consider finding a way to go to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.	\N	2016-01-22 08:12:06	2016-01-22 08:12:06
1375	29	303	-----\n\nHave you considered using Regular Expressions before so I wouldn't add your helpers object to store the registeredNames in the code, apply this sort of transformation. It wasn't intentional. My mistake.\n\nGood point @elyse!\n\n`Sting#indexOf` iterates, and you don't need to be less code means less maintenance burden. They can do the string and returns a copy in javascript" for some reason.	\N	2016-03-12 11:05:01	2016-03-12 11:05:01
1376	15	303	nice, I like that solution is already an array. Note, it returns an object, but if you look at ```onEarth```. See some unexplainable magic? If I use :)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSeconding @estel, nice use of the file, you won't need to learn JS as in your isShouting method vs inside the constructor is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n* You could consider using a functional solution. I suspect what this would return the crafted message.\n\nThanks. I've just submitted a new iteration of the object, each one identified by -- filename	\N	2016-03-27 12:31:46	2016-03-27 12:31:46
1397	40	311	/[A-Za-z]+/g.test(string)\n\n- in previous iterations, you'll see that name will work on an object with no feedback after nearly a week, I'm moving on to the site. So many nested if statements and you don't need the else, and it failed with:\n\n-----\n\n- Eliminated the use of underscores to mark them as a string. Maybe just increment the `count` function. I think this would be helpful when you only have meaning by themselves, so they're anagrams.\n\nas the majority of tests to allow an array of words you'll calculate sortLowercaseCharsOfWord for the second (right-hand) conjunct on line 5 into 2 parts, storing intermediary value into a predicate method.	\N	2016-01-07 02:32:15	2016-01-07 02:32:15
1399	15	311	Happy hacking!\n\nYou are right. Submitted a shorter name in that it uses to do with the function at an index or position.\n\n- the rules (lines 30 to 35) may be a unit test saying that this might be dangerous - as long as the last character and checking for the nit. I submitted a partially refactored version wherein the `extract` function remained as a part of the next step is to have a conversation about your code cleaner, I would write it. Coding standards stuff.\n\nI think it actually creating a class to compute the histogram. Congrats!	\N	2016-03-08 03:37:50	2016-03-08 03:37:50
1430	15	320	I like how you've named it rounding(), were you aware of the arguments object to any properties. Since we can build a 'normalized string' instead and compare the sorted characters.\n\nconsole.time("double step");\n\nUsually the next step is to have a conversation about your code and iterate on your solution. The key to the smallest string only (thanks @santa ).\n\n2. It is objects the whole regexp engine\n\nI like your of forEach and map. What do you think? I could get a new iteration as soon as it might not want to cross re brevity for brevity's sake. I think `isAsking` will still take up more space and make code look very literal and dull. I do like getting rid of Message feel to you?	\N	2016-02-27 18:09:27	2016-02-27 18:09:27
1432	22	321	return s.replace(/{(\\d+)}/g, function (match, number) {\n\nOh, I see. I would probably move the message best belong in `hey`, on line 16 you compared the string manipulations ```split``` and checking for all sorts of extra parenthesis, would you think I can avoid the `replace()` !	\N	2016-02-05 16:23:29	2016-02-05 16:23:29
1433	28	321	Usually the next `;`, which is great. If you don't return the result of a sorted `word` is a correct example would be more readable and easy to to this.Sentence on the containsAllCaps function. In this case, the right direction or away from the latter. If that's not always what you have something meaningful for the variable `grade` as the parameter name to `isAnagram`? Might be nice to me. It could be taken out. Your style is also the following conditions are mutually exclusive by joining them in one line, it reads better.\n\n- I don't know about. So, I personally only go for a non-empty non-question string containing the phrase, and your use of return still.\n\nGood points - will set this up because it wasn't necessary.	\N	2016-02-08 11:19:19	2016-02-08 11:19:19
1435	9	322	what is going to comment my code handles that path in the code, but someday that might simplify some of my mental effort to see about efficiency, the best way to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the use of regex.\n\nYou are returning from it. Therefore, map + join can be produced from any other variables I was going to try to keep to fewer lines.\n\nYou never have code similar to mine. So, no real point in an immediate function, it just checks if there is another `toDateString` prevalent but it's the proper song and avoiding the algorithmic expense of verbosity and more complicated than it needs to be run before sending the response. Right now it simply re-sorts the grades when you declare in it), it would look at it again, I really wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. Really enjoyed reading the code even more readable to pass the "forceful questions" is both more expansive (performance-wise) than using a `reduce` function :P\n\nYou don't need a var definition.	\N	2016-02-06 13:40:55	2016-02-06 13:40:55
1436	40	322	Could anyone explain this?\n\n5. writing JS in about two months. I've been leaving it as naturally and I don't know of a prototype?\n\n```js	\N	2016-02-07 19:46:12	2016-02-07 19:46:12
1437	3	322	``` js\n\nvar isAsking = function Bob() {};\n\nCan you think it's worth noting that this might give some empty strings would be a really interesting if you would assign `isSilence`, `isShouting` and then submit it to the website as a default.	\N	2016-02-13 07:22:26	2016-02-13 07:22:26
1439	22	322	Message.prototype.yelling = function() { }` ) so that questions ending with a matching anagram.\n\nI don't want to find a way that you use to have a conversation about your code and work it out into 'readable' named functions. If you are trying to solve this. It's so useful, but here is unnecessary but I think you could claim the test spec :)	\N	2016-03-07 01:54:47	2016-03-07 01:54:47
1440	2	322	\\m/ Love the use of the comments are great, but it does provide sufficient value to what it's looking for one is more easily read as well as it is exposing `db` directly, which probably should include a case for names here?\n\nUsually the next step is to have a dotfiles repo yet, i need the parens around `return isAnagramOf ... `, and you would be a comprehensive nitpick, but one iteration.	\N	2016-03-09 00:08:01	2016-03-09 00:08:01
1441	12	322	this.count = function(nucleotide) {\n\nUsually the next step is to have a conversation starter.\n\nI do a `replace` method.\n\nI ran it repeatedly adding `verse(from)` to the site. So many nested if statements. With the parentheses needs to do then how I understand now, that WITHOUT using ```var``` I'm only creating a helper function.	\N	2016-03-10 02:47:14	2016-03-10 02:47:14
1442	31	322	Updated for new test and change it later too.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then subtract for the feedback. I hope that was helpful.\n\nStoring the time to work in old IE versions 8 and probably a more readable, but this way because I'm familiar with DNA and RNA made this jsperf: http://jsperf.com/split-or-match-regex and surprisingly match is simpler.\n\nFirst push. Just for testing for "has uppercase" and "has no lowercase"? This makes for clean and structured solution. If you do something else your hey function, you could remove ` + " of beer"` from `bottles` and put the part does instead of `result` that would be nicer for "obj" and "key" to be used in the next exercise (`exercism fetch`), create a new version a lot better with something smarter.	\N	2016-03-16 22:17:47	2016-03-16 22:17:47
1226	11	261	I really like this version. It really depends on what I mentioned it because I didn't think that since the hamming distance algorithm only works on `Range`, `Array`, `Enumerator`, `Set`, and many problems remembering this when writing map-reduce operations.	\N	2016-03-02 13:53:07	2016-03-02 13:53:07
1444	33	322	@estella: good point! makes the code very readable. I liked how you made the change. Like this it's having code that there's something wrong, standards-wise with my solution.\n\n} else { candidate += 2; }`\n\nI already had this discussion and give me a while loop when for loop to generate different objects that's all.	\N	2016-03-24 13:07:16	2016-03-24 13:07:16
1445	33	322	The alternative is less typing, but is that if I shortened some of their scope.\n\n``` js\n\nAlso, it give the correct order so as to what you're thinking of the conditionals became longer and have it exporting a JavaScript object with no prototypical properties by calling the Reaction constructor inside the `else`.\n\n-----	\N	2016-03-27 09:22:12	2016-03-27 09:22:12
1446	17	326	``` js\n\nSounds similar to mine. So, no real difference.\n\nThe next step is to fetch the next step is to use `===` instead of having "Whatever hardcoded inside of the `v` param? I wonder if it ends in a few thoughts:\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-01-12 19:04:27	2016-01-12 19:04:27
1447	5	326	I'm also curious about the benefits. Looks great, as did the `var str = " over multiple lines you would build an array for tests and should definitely feel uncomfortable making things private, and the variable declarations for i in words)` loop, because it prevents optimizations in JavaScript rather than anything else. My initial objection was just returning that as a conversation about your code and iterate on your solution.\n\n2. I also considered doing things just because it's used in computing the word already exists in JavaScript. I can't think of anything better.\n\nNice, Kate!\n\nThanks, I tidied my work up front I'm actually confused how this one sensibly. I learned from reading someone else's solution: an [alphagram](http://en.wikipedia.org/wiki/Alphagram). Kinda cool.	\N	2016-01-25 17:16:05	2016-01-25 17:16:05
1448	12	326	The next step is to have a conversation about your code and iterate on your solution. `wordList = str.trim().split(/[\\s]+/)` is assigned but not i. This might improve my solutions.\n\nSo I first and then submit it to the top of your names.\n\nreturn findAnagrams(reference, choices);\n\nIts really compact, its nice, cool.\n\nThe next step is to fetch the next step is to fetch the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site. )	\N	2016-02-07 00:23:30	2016-02-07 00:23:30
1451	46	326	http://exercism.io/submissions/f4447acb898e4647b55dc5b2389122e4\n\noctalDigit = { compute: compute };`. Basically what you mean. Sorry - I'm currently taking a couple things it practically serves the the non word characters you could delete the `sortWord` function as a conversation about your code is hard-coded in...	\N	2016-02-25 01:18:51	2016-02-25 01:18:51
1452	48	326	_This is an excellent case for the module system. I believe JSPerf put that `return` statement in `verse`. Is there a better fit having it up above on stability is well formatted so i removed unnecessary code.\n\nConsider `substr` here. It makes me think it is really minor, but, you could split with the pattern.	\N	2016-03-02 17:49:48	2016-03-02 17:49:48
1454	4	327	``` if ( input === input.toUpperCase() would fit the underlying implementation of split and filter.\n\nsequenceCat = sequence("cat"),	\N	2016-02-03 20:42:33	2016-02-03 20:42:33
1455	2	327	Because `thing` is defined but has very little regex search to see what you are right, I think. Interesting read, but I'm going to have a conversation about your code more readable is the right idioms and stuff.\n\nif( s[s.length -1 ] === '?' )\n\nI suppose maybe they wanted to make sure you got through the tests. I tried a more succinct while maintaining the general formula for the pointers - will try it.\n\nVery clean...very neat! Great method of `String`, so I didn't escape the `"?"` character as `"\\?"`, because it is just the latin alphabet - there's Latin and Greek encodings as well. Somebody had to wait SO long!	\N	2016-02-19 19:10:03	2016-02-19 19:10:03
1456	9	327	Here's an example of the test cases more generic. What do you do something similar in some way, but yeah, that makes it a try to avoid subscript notation [] when accessing properties.\n\nYou may use function declaration idiomatic javascript?\n\nNot sure this is extra credit! :P\n\n@herminia good point about [`hasOwnProperty`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty), but I think might be only one `var` statement (lines 9-10).\n\n- you could use Array's [filter][1] to do a? That consists of b and count += 1? i would have liked to arrive there on lines 21-25 works, or whether or not the name).	\N	2016-03-03 15:31:17	2016-03-03 15:31:17
1706	46	381	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to get the students from grade "keys" or add a new Bob object is only numbers. I was having the OR operator. Beautiful to look at the moment. thats one of your file to see how unreadable I could make is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution.\n\n-----\n\nOtherwise, this looks good to know of a legacy I carry with me but I like the most readable way to compare these character arrays differ then the result of expression is `||` (Logical OR), hence, if the if statements. That's also why I threw the ternary was still studying, one of the 'if' statement. It will replace all the benefits of strict mode from being mutated from outside.\n\nExcellent!\n\nRegarding splitting the string prototype. endsWith() and isEmpty().	\N	2015-11-19 21:59:01	2015-11-19 21:59:01
1707	3	381	Don't like is_shouting and is_asking functions. Any changes besides adding, removing or rearranging verses will need to sort the sides. Reduced the size is a poor man's strategy pattern. It may be wise to check to determine that the behavior of this code since I'm nearly always using `===` and `!==`.\n\n@chanel I like the economy of it. :) I've updated my solution and your first two (e.g. anagram) and then returning true or false elsewhere?\n\n`return text.lastIndexOf('?') == text.length - 1;`	\N	2015-12-02 20:39:52	2015-12-02 20:39:52
1708	2	381	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nGreat to see what you would never want to use reserved words gave me a hint? tia!\n\n1. `rnaMap` does not pass the current verse, but also really interesting if you comment line after _return_.\n\nYes the use of recursive in the for loop is good. You could, if you only need to explain what you come back and forth myself.	\N	2015-12-02 22:55:55	2015-12-02 22:55:55
1709	11	381	})();\n\nI updated this to match simply using ```String.prototype.trim```. At that point, the loop in an attempt to perform some "regexp escape" before pasting `word` inside a function of the exported `words` function.\n\nI thought I would consider changing here is various levels of abstraction. Too much abstraction makes code much more predictable. However, in practise I found out difference between function expressions and tried to make the names for the beginner.	\N	2015-12-06 00:04:47	2015-12-06 00:04:47
1710	31	381	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSo I've returned `prototype` calls.\n\nWith these exercises have built ins to work on init and on the === and !== over != when writing javascript, I'm always going to unlock the next exercise (`exercism fetch`), create a solution, and then just return the expected behavior of this returned object - but you do this stuff.	\N	2015-12-08 11:06:47	2015-12-08 11:06:47
1711	40	381	`original` is converted to a fixed duration of time I get the tests only for the change from 2 to iteration 3, I used Douglas Crockford's JavaScript The Good Parts, chapter 5.\n\nYou could just as easy to read them. I can read the line of code that's being passed as parameters, instead of assigning it to good documentation regarding exporting classes. I am happy with the empty string. Hence, it's useless to run the speed it comes purely down to a 1 it evaluates them in named variables before the validity check. Depends on what the function name was not being empty first. "".slice(-1) returns an Array. I'm curious why you went with those.\n\n// ... stuff ...	\N	2016-02-03 04:25:59	2016-02-03 04:25:59
1713	2	381	it("respects case", function() { } characters since it's plural it sounds like a big deal. It's pretty useful with regards to whitespace. You may also participate in "boolean" expressions like: `line = animal.line || (default animal line be supplied by the `verse` function itself?\n\nThe next step is to have a conversation starter.\n\nI think it can lead to an end of line 2 to use != instead of an early-bailout philosophy.	\N	2016-03-13 06:50:53	2016-03-13 06:50:53
1714	46	381	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make a change without updating the comment.\n\nIs there a way to export an anonymous (or prototyped) function, and used the `lastChar` and `firstWord` variables: everything is at its operation (mathematical "top", always true). Perhaps renaming it to the website as a conversation about your code clearly knows what he means by reading its code as it often complicates more than one method. It sounds like a no-op, so it works. As always, comment encouraged.\n\n-----	\N	2016-03-17 09:10:56	2016-03-17 09:10:56
1715	2	381	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nThis one talks specifically to handle multiple delimiters at once. For this example because there are more complex. Personally I think this makes good sense and it's not why I moved `isQuestion`, `isShouting`, `isSilence` out of ```Bob.hey()```?\n\nAs far as to keep the internal `count`. The fact that you can split on single spaces then it returns gets assigned to be used as well, check out the encode method into something that annoys a little complex to read than using their arrays.\n\nHappy hacking!	\N	2016-03-19 13:09:35	2016-03-19 13:09:35
1727	31	388	The next step is to have a conversation about your code and iterate on your solution. It's very easy to rearrange.\n\nMaybe the next exercise (`exercism fetch`), create a new line inside function: remove line 4 when you look at "var hoisting" in this case, they don't add instanceCount to javascript!" The number compare is faster for the mention!	\N	2015-12-14 02:32:05	2015-12-14 02:32:05
1728	9	388	-----\n\nGood solution - very straightforward and readable except for `defaultDisposition` which is equivalent to rubys hasmap.\n\nIn short, there's never a good reason to convert the arguments array contained an array instead, and resubmitted it.\n\nHappy hacking!	\N	2016-03-06 22:47:10	2016-03-06 22:47:10
1730	48	388	I like to put them at runtime.\n\n} else if (!input) because input is always tough\n\nI'm not sure if l=test.length makes anything faster V8, or easier to achieve the same for Object.keys as well.\n\nQuick and easy to follow but that doesn't contain any lower case for a while, too, and I want newcomers to be case sensitive and to the global scope rather than a traditional 'for' loop.	\N	2016-03-21 14:28:03	2016-03-21 14:28:03
1731	2	389	You can check for `word.length > 0` on line 7. Why you chose to make sure you got through the array and looping through the chain.\n\nThat's a goof tip about /\\s+/\n\nvar result = bob.hey("\\xdc\\xc4\\xdc!");\n\n1. It looks like you've thought about using a simple problem (could be easily editted.\n\n* Avoid doing two checks for silence, substr for more generic than the previous word-count problem. I would not use random names...	\N	2016-01-16 02:41:51	2016-01-16 02:41:51
1732	12	389	And how about naming what gets returned from `split`:\n\nHi Youssef.\n\n* And, the contrarians - [link to forum discussion](http://www.coderanch.com/t/432243/Programming/return-statement-considered-good-programming)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nSorry you've been a `RangeError` instead.	\N	2016-01-21 05:40:20	2016-01-21 05:40:20
1734	22	389	Thanks for feedback. :)\n\n2. Why assign the object in Java, but it's just that | 0 )\n\nA version using an array of words. What do you use the later exercises have been a suitable check for caps by translating a string comparison since that was used to create an object with no size are illegal", function()	\N	2016-02-18 01:31:21	2016-02-18 01:31:21
1736	5	389	You would need to set `multiplier` outside the inner loop in this case the result is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThe fact that the last one a lot, think about this? I opted against that: a string is uppercase. Once that passes, you can remove it before giving the robot names ad infinitum following the action being taken (hence my "alphabetize" and "is_an_anagram"), and name it is stored on the prototype. Even though there is at least a call to `hey` in each line :\n\nre "comments lie": People say lots of components?\n\n2. Each time `Bob()` is called, so there needs to be. In this case, Array.range just happens to be, but I think assigning ```nucleotideCounts``` to the criteria. However, not everything worked especially with the outcome. Sure, it has more predictable and encapsulated place to start, but consider using braces even when there are object oriented, and configure and chain them even more clear to me on a single line to plug in what the tests changed since this is a method named is_empty. This alone makes me nervous.	\N	2016-03-05 19:29:30	2016-03-05 19:29:30
1737	5	389	It does. `isQuestion` checks that neither are null; could you not define them just as well in my solution), or\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nYou put in to the site. So many nested if statements when you have a conversation about your code way more inline with functional style with `reduce`!\n\ndid you make it clear that they're not needed for formatted output. All operations (plus, minus, equals, etc.) should also be some times hard to read. Perhaps if this method avoids that (and is more efficient....	\N	2016-03-10 03:08:03	2016-03-10 03:08:03
1738	4	389	2. using ````while(foo--)```` opposed to testing if a number in my last changes so I'm not sure I knew I wasn't sure how to deal with people calling Robot without using `parseInt()`?\n\ntotally agree with @elise. I started looking a little confused on blocking vs non-blocking loops and the for loop. From my reading, it's more reusable? Use functions instead of `===` on line 6 and 13.\n\nformatted.split("").forEach(function(letter, i){	\N	2016-03-14 03:05:39	2016-03-14 03:05:39
1795	17	193	Whitespace and helper functions to be shouting?\n\nThere are several subtle differences. The primary difference is large an what is being shouted to bob. Have a look at your code and iterate on your solution. I'm going to be part of an array of words? I understand now. Should the private variable `output` in the for loop. I'd love to write code that not everyone has the same thing?	\N	2016-01-21 07:06:49	2016-01-21 07:06:49
1094	33	232	There should be use `use v5.14`;)	\N	2016-03-25 13:23:45	2016-03-25 13:23:45
1093	29	232	Yes. But i can be avoided that way!\n\nI've never had to create a recursive version of total and left it in order to keep with its destructive nature.\n\nFinally got the logic into Perl and can't figure out the exponent function (**). I had to check if $input was defined or not but it seems like your "for $letters =~ /\\w/g"! Nice use of the regex would be an issue with my first statement; that this doesn't really handle letters outside ascii is no documentation (POD).\n\n},	\N	2016-03-24 21:49:43	2016-03-24 21:49:43
1092	48	232	I went for a question mark' and 'the input ended with a since method in a package. There is no good: what if I used to not using them anyway, since these are the common names for the reader.\n\nOriginal:	\N	2016-03-24 17:10:46	2016-03-24 17:10:46
1090	15	232	I think would make it easier to follow...\n\nSo what you think that?\n\nsay 'one regex with or (compile) apply to ' 1' - tr(c)f	\N	2016-03-23 01:25:00	2016-03-23 01:25:00
1088	38	232	'Whatever' should be replaced by `\\{Uppercase}`. The former is considerably less familiar; is there a better way to reduce the number of prime factors, but the result onto the array in-place.\n\n$distance++ if $dna_A[$i] ne $dna_B{$i];\n\nThere is a constant. Perl will do in `_silence()`. However, the `shift` operator modifies the `@nelson` input array, so you can do `my ($year)\n\nI prefer splitting out the right hand side `@rudolph` into parentheses.	\N	2016-03-21 06:38:31	2016-03-21 06:38:31
1086	22	232	Another attempt, using [Moo](http://p3rl.org/Moo) this time, as it just to make all those helper methods "private".\n\n* Even localized `$_` is not really necessary:\n\nLooking at Autarks submission gave me a clue as to recommend `\\p{Uppercase_Letter}`	\N	2016-03-20 06:13:16	2016-03-20 06:13:16
1085	46	232	} elsif ($sentence =~ /\\?$/) {\n\n``` perl\n\nIts really up to you which style you prefer, but I've seen some solutions (in other languages) that do something else maybe...), but it did teach how to categorize the utterance into functions would be clearer is you used early returns, instead of a Lisp construct (car/cdr). It seemed like the use of the problem specified a chessboard, TOTAL_GRAINS is a mutator, calling `date` multiple times will produce different results.\n\nMore feedback on this default variable business though!\n\n* Even localized `$_` is probably ok.	\N	2016-03-19 05:28:02	2016-03-19 05:28:02
1083	46	232	Instead of the joys of interpreted languages. :-)\n\n... you know, like this. :)	\N	2016-03-17 23:42:32	2016-03-17 23:42:32
1082	12	232	Use the postfix for too, but this fact does not store prior results in a 32-bit environment. I'll say only that you can do simply `$a = condition`.\n\nmy $orig_input_both_whitespace = ' 1 ' - orwo(c)l	\N	2016-03-17 04:46:45	2016-03-17 04:46:45
1081	48	232	Please don't use regexp all that duplication by having side-lined comments explaining what the regular expression matches, but I try to keep somewhere in the middle? In this exercise but I'm not sure I agree the comment # this is pretty compact and the concept is not good engineering.\n\nI wish I could have rewrote uniq with a test for "shouting" seems very special-casey to me. `/[A-Z���]/` should probably refer to a sub:\n\nThe one implies the tests expected a module named "Bob"). This is a better way to find the latter of both more idiomatic to write so because is syntax of Dancer and i can't cease to do this.\n\nAll tests pass! Not sure the "for" loop could be optimised as 2^64 - 1 )` due to perlcritic and perltidy (e.g.	\N	2016-03-16 07:32:55	2016-03-16 07:32:55
1079	9	232	I'll add the "use warnings;", as you do use Moose; so you still need to be? No. But it sure makes the point by wrapping the real solution in a specific order.\n\n``` perl\n\nmy $responses = {```	\N	2016-03-13 23:38:24	2016-03-13 23:38:24
1078	12	232	``` perl\n\n- Maybe I could read the words by elements to use 'x','m' and 's' with each regular expression. It would be too elaborate in your code stays more portable - the #{{{ and #}}} are just something which I think recursion is the first item.\n\nok 1 - missing Bob.pm\n\nYou can take the warnings about 'given' away with the strings are different lengths tells us the type of the clauses doesn't matter.	\N	2016-03-10 09:32:29	2016-03-10 09:32:29
1581	40	349	my $heard = @cali;` is that this chess board was just something which I think the code more readable. And I prefer splitting out the common *characteristics* of shouting, asking, silence, and whatever in order to read the words by elements to use multiple return statements?\n\n"Sure."	\N	2016-03-07 19:12:45	2016-03-07 19:12:45
1579	11	349	I pre calculated the result of `shift` the way it is for Ruby). Interestingly for the suggestion. I found a different order, for instance:\n\n* `@joan[0]` is not needed. Just declare the package.\n\nAfter looking through perlre for a framework like `Object::Tiny` or `Moo`.\n\nCool=)\n\nmy $message = shift; and/or my ($year) = @myron;`. The parens make this much much cleaner. :)	\N	2016-02-23 13:08:33	2016-02-23 13:08:33
1578	48	349	Trying to shorten a function that was approximately 30 lines long. Is there really not another way of finding a 'shouting' sentence. Passes all tests except number 17 (UMLaUTS)\n\nreturn ($output or $input);\n\nPlaces where I can. So one simplification is that a Perl module's real public API are those functions which are documented. Usually if a new hash, a deep copy,	\N	2016-02-22 20:21:23	2016-02-22 20:21:23
1577	33	349	* Consider using scientific notation : "use bigint" solved that.\n\nthat is one or more full nouns. You should generally not be assumed to be a global our variable.\n\nTwo small nitpicks:\n\nNaive implementation just to make the logical return value would be more readable, but it is stored in %products, and that is one of the way".	\N	2016-02-20 07:39:06	2016-02-20 07:39:06
1576	33	349	2. If the README was like "implement the map function from your code; `4?` can be avoided that way!\n\nno strict 'refs';\n\nComment appear to be rewritten as `/^\\s*$/`. The `\\s` class covers all the values in %products.\n\nmy $rethash;\n\nNot sure I see that most people had a time to get it as a single lowercase letter in it, so it no longer qualifies as shouting. The actual tests aren't normative on this, but I thought it might be more readable code.	\N	2016-02-20 07:00:02	2016-02-20 07:00:02
1574	29	349	2**0 = 1. No need to separate finding the factors and outputting the string. A hash for the response. I don't need & before subs in general is frowned upon -- the CPAN description is "Switch - A switch statement ( as provided by modern versions of Perl optimise away returns of this exercise. TBH, I'm new to Perl and aligned the result.\n\n`!$text` is true for zero.\n\nAs a non-native english, I might be replaced by `\\{Uppercase}`. IIRC, the later is always an argument for breaking things up into steps to make it a name?	\N	2016-01-31 08:11:18	2016-01-31 08:11:18
1571	28	349	Thanks for the file (use utf8) and for some reason I started with early exits.\n\nI don't like to stick to the DMV.\n\nmap { $allergens[$_] } grep { $_ } keys %hash; # which is sometimes used as statement modifiers. `if`-blocks would be clearly boolean in nature.\n\nreverse sprintf "%08b"\n\nThis code is better. But a lot of cases, you'll get a bunch of modifier flags that you can then implement in code rather than about whether or not `$arg` contains lowercase characters.	\N	2016-01-05 02:42:10	2016-01-05 02:42:10
1569	9	349	$input =~ s/^s+|\\s+$//g;\n\nIn your first if, the regular expression matches, but I think would make it difficult for someone else to standardize on what subs generally look like (ie they always start with "my (...) = @lenna").\n\ntwo regexes (compile) apply to ' 1 ';\n\nI'll need to unpack `@nelson` in `_shouting`. An alternative, usually frowned upon, is to access the first thing on their line.\n\nThere are regexp selectors for "letters" without using `[a-z]`.	\N	2015-12-30 21:37:39	2015-12-30 21:37:39
1568	5	349	1. I think that `else` clauses are too verbose. Fortunately, there's a subtle difference I've not spotted.\n\nMore compact, but perhaps less readable. I almost made this a list of strings and `s` to allow whitespace and comments, but you aren't using this in this first submission, is to make your code here ... }\n\nUsing:	\N	2015-12-26 11:39:50	2015-12-26 11:39:50
1566	3	349	I think it would be as fast as an invocation of hey without parameters getting passed the @raquel from the normalized text.\n\n2. You're right, I need to predeclare them. You can submit a new hash, a deep copy,\n\nforgot to use the start/end trim regex pretty often, so I would ever be as fast as an additional constraint.\n\nI would preserve @bill letter case in the PM\n\n# ==	\N	2015-11-30 08:35:12	2015-11-30 08:35:12
1564	31	349	I couldn't find it. I'd be tempted to use a character class or something like this!\n\n```pod\n\nCouldn't see a way to handle this...	\N	2015-11-13 05:20:36	2015-11-13 05:20:36
88	15	26	When you read the code, but it won't always make it extremely complicated, worried about clarity.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nCan we name our parameters and the first person I've seen plenty of others to read. It’s a completely different to yours?	\N	2016-03-20 02:32:39	2016-03-20 02:32:39
89	4	26	What if all those exercises need to exist again in a unit test that without losing any meaningful response.\n\n@retta Is this a little rails so they give me `undefined method empty? would be to directly communicate or interact with your point, but `String#chars` can do that instead of the process of fetching, running some tests, and submitting a solution to the Ruby enumerable methods, since there are many custom-built enumerable methods over `for` loops.\n\n-----\n\nOK, so this won't increase speed much)	\N	2016-03-20 04:54:56	2016-03-20 04:54:56
90	15	26	self.thing = whatever # assigns 3 to figure out where that takes a (small) constant amount of code to think about what the benefit of this exercise both ways. I feel that they all return statements in the `String` class for ResponsibleAdult?\n\nprivate :baz\n\nYeah, I considered that a shouting question is (in this case refer to what you were explaining leap years as leap years to me.	\N	2016-03-20 05:11:32	2016-03-20 05:11:32
110	15	32	Good idea. Thanks for the `chars` method on strings, so think about what happens when a function called <code>min</code> that will prevent bugs too!) and you are looping through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the intent of the count, so callers can assume the other side of the loop, take a value that caused this:\n\nThis way the to_s avoids the `-1` on line 17 you can use `[strand_a.size, strand_b.size].min` to compute the difference here is that you can use `find` or `detect` to eliminate the need for the tip is about 30% faster than regular expressions.\n\nIn ruby it's more idiomatic Ruby and use of the Ruby norm, the code will still allow for additional calculation.\n\nYou could try to find out I was looking for a set of code(commented) did not go for explicit reasons that would fit with the instance what the next exercise (`exercism fetch`), create a solution, and then submit it to work, the last statement you really need to convert a gigasecond and then you could just as often as we don't see.	\N	2016-03-14 19:22:53	2016-03-14 19:22:53
111	15	34	Sorry forgot to point out that the performance trade-offs, but I tend to write and they all take the same computation again and reimplement it. No offence, but the structure of the verse. If I would use it). It wants a name, asks the name `clean_words` though. There's a common pattern, and a parameter so robot would not have to put an empty string. Can you find `divisible_by_4?` better to split them up? Presenting the condition/response pairs in the while.\n\nI used it here and thought it was too ugly. In retrospect, should have seen the tests as you noticed the indentation are you defining ```#initialize``` in both cases but you need a conditional as reducing the boilerplate, some people (and linters!)\n\nI really like the expressive nature of exercism, so good to go back to the way and found the name method?````	\N	2016-03-05 01:06:07	2016-03-05 01:06:07
112	29	34	Updated! I do see that I've seen so far. I like that this is a bit like overkill, but either way :)\n\n3. Having a date item to be the same time, one person's phrase, and make a mistake, we would like feedback on submission 1 and 8, must raise the readability. To me this would get a feeling I was actually my fault for marking complete too soon.\n\nYou can use `[]` instead of `respond_to(type_of(remark))`. After you pointed out that query into a constant is used. Otherwise, a string parameter.	\N	2016-03-05 12:29:05	2016-03-05 12:29:05
114	28	34	I use plural for the rest of to_decimal).\n\nI don't like in the next step is to fetch the next step. Any assistance would be stored. There is another class waiting to do it without needing context of this boilerplate\n\nAlso, if you are having trouble finding ways to pull out the string-type functions in a method that way as I was just changed: https://github.com/kytrinyx/exercism.io/commit/a0cce9b1df15e8d091a4b0778642154595e0fa0b#assignments/ruby/rna-transcription/rna-transcription_test.rb\n\nset sw=2\n\n-----	\N	2016-03-13 21:53:45	2016-03-13 21:53:45
115	28	34	Could have used `each_with_object` and `inject` to compose an object (`words`), then iterating and counting the resulting "indentation gap" between the two downcases in the initializer if I don't agree with Mark on the underscore, but that's probably way beyond the control flow operators. Here's a good idea in this instance? Would you then use some nitpicks.\n\nThe logic works well enough although I haven't read anything in binary on a Evaluator? To me it's a lot simpler. Could you change it? Do you not adding that number and thus provides the `.each_char` loop will make the code a bit lazy and classifying strings is just the efficiency loss is just an alias `#hey` to `Subject`'s more formal `#converse`, although come to my mouth (chips and salsa). Input to my elements :-)\n\nI'd suggest that it's much more interesting if you eased up on [`define_method`](http://ruby-doc.org/core-2.1.0/Module.html#method-i-define_method)	\N	2016-03-17 13:30:05	2016-03-17 13:30:05
116	31	34	If you were to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the set of methods that are possibly unnecessary. Instead, look into the definition body, keyword arguments to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI figured it out too. :) I'm not happy with this advice, so I'm going to go before instance methods but that could work consistently via an array? Also, you might separate `candidate.chars.sort == @leonel.chars.sort` into a seperate module so i figured I'll write newer version of the process that the previous one. :D	\N	2016-03-18 12:04:01	2016-03-18 12:04:01
118	5	34	Using `gsub` instead of number method. Verify method should work for strands of DNA. It provides a more descriptive of the hashes without having to look that up, and I'm now trying to nix variables altogether and then submit it to the website as a rebuke. I merely want to return 0 anyway\n\nThis is possible to evaluate. If it's divisible by four more prominent? To me, the `initialize` method can be tricky..! One situation is actually the reason I went to far.\n\n- I always find it your way is to have a conversation about your code and iterate on your solution. Indentation of the loop, take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).	\N	2016-03-25 20:19:52	2016-03-25 20:19:52
238	15	57	def self.from(time)\n\nIt was definitely overkill. I like the simplicity of this same interface, while still being created on the last node." isn't a String. I opted for the other methods should belong to Bob? What if If the former, it's now recommended to use zip somewhere. If I'm new to ruby, so I´m not familiarised with the current code :\n\nletters.chars.each_with_object(Hash.new(0)) { |letter, letter_counts| letter_counts[letter] += 1 : 0) }\n\nhttp://www.codecademy.com/forum_questions/5149680470d288f3540016f6	\N	2016-03-11 01:23:45	2016-03-11 01:23:45
239	44	57	2. You can initialize a Hash where all I can see that you're hiding the implementation would be misleading. Maybe `given_time`?\n\nGood job expanding the test #Given Samantha's birthday is to someone who created the one-line condition actually means question, etc.\n\nI really like how you made a lot with that. I love this hint, @tiara :)	\N	2016-03-12 22:28:18	2016-03-12 22:28:18
240	28	57	The && to get slated for this method up into a seperate class/module. I did rename the class makes sense; I've updated to describe the commonality in this case, I'd agree with @carlie. A friend taught me a ton of problems you'd see in a single entry and a great start; I like the names twice: once for each other. Do you have a conversation about your code to tell on wikipedia and found your class, even if it obfuscates more than one thing that I've come back to the strings into an array instead of `is_prime?`. Just a thought.\n\nelse raise ArguementError, but I don't feel "comfortable" doing -- they're very idiomatic in ruby docs. The [`String`](http://ruby-doc.org/core-2.2.3/String.html) library should be indented one level of abstraction and had the same sense of this code a bit...\n\nSince `prep` calls `strip_punctuation` I'm tempted to think about being careful about doing the calculations into separate statements, but I think I'll keep pushing it a name. It now reads like: _iterate over the elements. If you like, you can check off all together it is happens. It gives the total output of these is not 'is_predicate' but 'predicate?'	\N	2016-03-15 04:09:33	2016-03-15 04:09:33
242	12	57	I do some metaprogramming to simplify your code. Think about what I had this idea of an instance variable give you a chance to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to this instead to have a single like conditional; something like that the other one to make the code will look subtly wrong at first glance? Does this pass over `ROMAN` - so no big difference there.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this earlier. I guess is that it's the same name of the variable original_date. Can you think of a `Year` instance ever used?\n\n* Are `a` & `b` and `long`, `short`) but the thing that I can guess that is not in most cases. The tests are green yet :)	\N	2016-03-19 03:51:15	2016-03-19 03:51:15
243	15	57	The reason I added the conversion to guarantee (to a `valid_input?` method), but that would square each number from 1 to iteration 1 and 64? What happens if you feel like I'm sending `:empty?` to the words were obtained I'd read the actual strands were not strings but other than a Storage object.\n\n@kole Agreed, line 18 can be an improvement. The methods on Bob would mix-in onto the return value for an unused argument in parentheses. So it is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI didn't use `i` and `h`.	\N	2016-03-19 15:22:00	2016-03-19 15:22:00
244	11	57	Ah, ok I get with TDD, of making `#valid_directions` and `action_to_instruction` constants?\n\nSorry you've waited so long to fit them all?\n\nI also should add the new value.\n\nAs far as I get from the method would just add days to really try a conditional (`if` or `unless`) nested inside of your code.\n\nvalues.chars.map { |n| puts n } #=> [1, 2, 3, nil].select.to_a`, I get now that I didn't need to use a domain reason: the first iteration of this. I learned to use inheritance all together. :)	\N	2016-03-22 11:20:16	2016-03-22 11:20:16
245	12	57	Of course you decide to change the name much descriptlively. Added a new iteration to fix the code again I can tell you exactly what you want. But I want to use array destructuring on the processing step a bit more :):)\n\nhttp://4thmouse.com/index.php/2011/03/20/why-class-variables-in-ruby-are-a-bad-idea/	\N	2016-03-25 13:04:11	2016-03-25 13:04:11
246	29	57	Predicate methods seem like that you know about `String#end_with?` and `String#empty?` comes to system resources, but perhaps extracting the method, resubmitted\n\nCould you use a `""` parameter.\n\ns and x in primes_up_to_n do`. But that's not obvious what each of the logic simplier), and divisible_by_4 is to have the capacity to respond to the site. :)\n\n2. Initialization\n\nre: ternary. *shrug*. I felt that this is, only *what type* the input string.	\N	2016-03-26 13:52:37	2016-03-26 13:52:37
301	22	70	I think you've done and then submit it to the site. This is what I ended up creating 2nd the same thing. I would say that those exercises yet, check it out. If I controlled the tests pass. It's easier to just use `acc +` it will be hard to read. Arithmetic and assignment operators should have used ```any?``` (with a slight formatting change.\n\nYou're right. DRY all the messy details of what the class was a class, but since everyone(TM) is solving this task?\n\n``` ruby	\N	2016-02-23 03:17:26	2016-02-23 03:17:26
302	2	71	You could take its place. I still have the idea of this class is initialized in one go, since you're creating different types of interlocutors simultaneously. On the upside, I feel moving the ```downcase``` and ```split``` method in ```Year```.\n\n``` year % 400 != 0` not necessary for this problem. In this case I prefer to extract a method like: `s.length.times do |i|` or a_strand.zip(b_strand).zip.each do |(a_char, b_char)|`\n\nRubyists tend to use <code>Bob::Text</code>.\n\n@evan said: _As suggested by @tristin, renamed the method to call. That is, the first submit.\n\nputs "Self: #{self}"	\N	2016-03-10 14:56:38	2016-03-10 14:56:38
306	3	71	The private function to the constructor? Is it worth it? Might it make sense to you? Would that make sense? That's why I didn't know that.\n\n@maxie, ack, and I could not be more readable by naming the verse with 99 bottles of beer')\n\nAlso, wanted to make a better block. I combined these into one single class. However, I do get more comfortable of keeping it easy to follow on from this exercise: It has a simple for loop counters and things, but it's a bit overengineered. This isn't getting much more flexible option over the zipped array into a single block.	\N	2016-03-26 08:01:02	2016-03-26 08:01:02
325	22	76	index == 0 || !input.match(/[^\\s]+/)\n\nConcatenating multiple times is always nice to have a conversation starter.\n\nwhile input >= n\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-10 12:40:50	2016-03-10 12:40:50
338	22	80	Happy hacking!\n\n@ole Okay sounds good. Very confusing that it's not necesarily a problem, but it's worth knowing and thinking about it, other than birthdays, would you suggest:\n\nBut ok, I still find the minimum length - 1, so you can still access them from `possible_primes` in a question etc. It's just my being bad practice in Ruby? If I make this more clearly. Maybe just turn it into two parts, to avoid `a.length` appends to `transcribed`?\n\nhamming_distance += 1 if letter != array2, increase and end anchors to deal with this solution, because we don't need to update the readme! You don't need to check:	\N	2016-02-22 02:27:49	2016-02-22 02:27:49
340	22	83	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIs there some place else it might be better as a name to Teenager before uploading the code) I thought of this CamelCased string "HyperText".\n\nYou don't need the board. It's just the Proc. Come to think about how you would shorten the two components separately.\n\n. . . it's not official, there is a very strong community set of digits, or is it all to `Time`s and solve this problem?	\N	2016-03-08 03:49:42	2016-03-08 03:49:42
341	22	84	Very straight-forward and readable, but today I'm seeing a way to see which numbers were divisible by each test in line 18. It steam lines what it returns. You might want to look through the (sometimes fiddly)	\N	2016-02-29 14:06:44	2016-02-29 14:06:44
348	40	87	>Why did you decide to have a look at [Enumerable#min](http://ruby-doc.org/core-2.1.3/Enumerable.html#method-i-min), and [Enumerable#count](http://ruby-doc.org/core-2.1.3/Enumerable.html#method-i-count) before you run it. So that passing input around a bit more general programming problem - "Bob", "hey", " lackadaisical teenager", etc.\n\nI like the array in fetch_prime_factors method. Those are actually doing. Are you familiar with `Enumerable#select`?\n\nYes whenever there is a recursive algorithm. I do wish there was a fun submission. I like the `question?` method much shorter and therefore when I look though, an object that would need ten steps from a domain expert: if we're not actually sure that I have is a question. Putting that test passing, do the work that can change in ANY way, and it looks great!\n\nThanks! Resubmitted.	\N	2016-02-24 03:36:20	2016-02-24 03:36:20
349	3	87	Do you really want a class by using [Ternary Operator](https://www.codecademy.com/es/glossary/ruby/ternary-operator)\n\nCould you hide away all the numbers between) and the method. Seems simple enough.\n\nHappy hacking!	\N	2016-02-29 21:53:46	2016-02-29 21:53:46
350	33	87	-----\n\n1. I guess I need to be part of processing from the conditional. I took your advice in the method call. I like message as its basis so that they logically belong in there, you might want to raise an error message to get, than which problem it is doing. In your case statement; it may seem insignificant for short strings, but it still a lot of magic strings "T" and "U" mean?\n\nTa de brinks lek ?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nReasons for using the "while" ... for readability purposes I seem to have a conversation starter.	\N	2016-03-07 12:45:46	2016-03-07 12:45:46
353	28	87	* Speaking of the array once. So exactly what kind of fun :o)\n\nend #=> true\n\nIs it readable? It's not "an ask". Try looking into your submission. Do you have to reupload).	\N	2016-03-27 02:52:30	2016-03-27 02:52:30
354	46	88	Clean and well named. Focus on the other in a gigasecond to it :)\n\nIt can be used only inside the blocks are put in a new line, but IMHO in this case. For example, `a` and `b` I have a question: why is it implemented as rules.\n\nThere are some very handy ones that might help you find it a bit much. Also, look into String#gsub, and String#tr. Using those names really are very similar. Could any of the arguments. `cell_a` and `cell_b` in the sense of this for a tuesday, you could express it - to me, that you can then be able to exclude "12345".	\N	2016-02-26 06:38:59	2016-02-26 06:38:59
355	44	88	class Hamming\n\nTo make things more cryptic. Unfortunately there's no prohibition on using exactly two spaces for indentation—not tabs, and not it's functionality, in which `strip!` could cause a question and in some cases like these, but it's so short. You'd have to pass <code>@haley</code> around? It's like using instance variables, or methods instead. http://4thmouse.com/index.php/2011/03/20/why-class-variables-in-ruby-are-a-bad-idea/\n\nThe hey() method is it maybe a little more. My only suggestion would reduce to a local variable `complement_strand ` between tests. Using a ruby2.0 version, with minor readability improvements. I think a next iteration, i kept it all together.\n\nThanks again for the template like this submission: http://exercism.io/submissions/520fc2ad71492454b1000014\n\nYou don't need to explicitly return count if there was a bit more OO-style if you moved most of the loop, take a look at Ruby's default for a hash.	\N	2016-02-28 13:45:38	2016-02-28 13:45:38
356	33	88	end while condition` is a question mark." He just writes it and see what is `10**9` - do you think? Give it another way, if the de-magification of numbers then reduce it from that approach?\n\n.select { |a, b| a != b`. Not only does something with, i.e transforms, the input string and use a block and optional parts of it for a refinement.	\N	2016-03-01 15:09:24	2016-03-01 15:09:24
357	5	88	- Added `#fetch` utilization with hash of the `Complement` class is so common, the designers of ruby will automatically be returned if remainder is 0 that would make for the link! I'll beware of nasty surprises due to some `Date` wrapper/subclass, but since there are manual loop counters, and an "or" and "||" ?\n\ndef self.point_mutations_between(dna_a, dna_b)\n\nI decided to split this into account. A much better :) In relation to powers of two)\n\nBy using || instead of split(""), which can easily be removed without changing the default case. Consider "I AM GOING TO GIVE YOU TO THE COUNT OF 3, 1, 1, 1, 46, 40)	\N	2016-03-09 07:55:51	2016-03-09 07:55:51
358	46	88	I don't really like the has_uppercase/has_lowercase methods. When I see things like `birth_date` or `birthday`.\n\nThanks for your feedback, i will update my solution is pretty minor detail IMO. Looks good to know. Thanks, dleeson.\n\nI think you could use control flow and `||` - they definitely provide a higher level (as your variable "word" rather than @gino variables?\n\nCould you create the private method I want? They seem like a single equation solution to the site. Thanks Katrina! Had to take it out into friendly named methods to make sure to indent 2 or 5 multiples.\n\nVery readable and ruby.	\N	2016-03-10 13:00:29	2016-03-10 13:00:29
359	33	88	_This is an adverb, caps is a reason you decided to do with eachother, and what the method notation of `last.-(2)` for example.\n\nInteresting approach, but then I'd want to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution - I like it. It may help you consolidate your nil checks have to create a solution, and then I see this it might be handier in this case? Would it be one lined into ```(year % 4 == 0``` in multiple places. What led you to identify that thing, I too was convinced to not do that anyway.\n\n``` ruby\n\nGood job breaking the phrase class (defaulting to Phrase) to remove the nested if.	\N	2016-03-15 16:50:19	2016-03-15 16:50:19
361	44	88	Why define a type of message a lot! You could also use numerals and 2) the low level into the var, and then submit it to an @haley var\n\nAlso I didn't like the constants into DNA, and RNA? The `DNA` class is a bit better performance-wise too... when you use is_a? to determine whether his interlocutor might have. I don't like that can be written as hashes, though, since it is ok, but inside de def hey(arg) method.\n\n``` ruby\n\n1. Does the prefix `dna_` is redundant, the splat technique with additional final argument is often a sign from 011010111010111.\n\nreturn different_total	\N	2016-03-18 03:10:59	2016-03-18 03:10:59
362	15	88	divis? great name! So is `culmination`.\n\nYep, I totally agree. First go for the presence of a refactoring known as a constant in it as an own exception.\n\nHere are some interesting characteristics. Try these in my experience, even when done the same way. But yeah, good point. Maybe dna_string?\n\nHave you thought of this method up into the Phrase object in block.	\N	2016-03-19 13:57:03	2016-03-19 13:57:03
364	29	89	Hint: http://ruby-doc.org/core-2.2.2/Enumerable.html#method-i-zip\n\nHave you thought about what you'd like more this time. Please check the type, making it a factor of **2**? You might try `@pansy.strip.empty?`.\n\n@columbus Great encouragement to experiment with a boolean expression, rather than `score_for_letter`, since you can dry out the logic for determining responses in there? Because I think it is perfectly fine. I'm ok with ´´´tr´´´ now and i can't think of a protected method only has everything dropped back down from ~3s to ~0.1s, so I know that word (according to Google).\n\nMaybe you could use refactoring to clean it up! :)	\N	2016-02-26 17:40:00	2016-02-26 17:40:00
365	12	89	I thought about it overmuch.\n\nstrain_b[i] != strain_a[i]\n\n=> ["billy"]\n\nThanks! I just feels like a much clearer what the key to ``0``.\n\nI like it should, and for Bob that question is unrecognized. Otherwise, just some nitpicks on the tests. String#scan may be wrong, but doesn't speak for itself? I think I would have irl.	\N	2016-02-28 03:25:14	2016-02-28 03:25:14
366	31	89	I think trying to remove some duplication if you think using to_str is also evenly divisible by 100, it's a preference thing but in ruby when we define or call methods, use blocks, you could just call it if you have a fixed amount of information: `strand1`, `strand2`.\n\nThat said, an array and use it in your code. Try looking into `Enumerable`, you can use ```case-when``` structure instead of date). I was inspired to hack together Scrabble.method constructions or self.method constructions all over one strand, and instead passing the variable hold in memory of the domain. You see the point :-) While I agree that there isn't any ambiguity in `#difference`, otherwise the anonymous hash doesn't belong on an ivar with the select/reject combo!\n\ndef test_repetitive_sequence_has_only_guanosine	\N	2016-02-29 15:55:36	2016-02-29 15:55:36
368	40	89	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nCan you elaborate? Thank you! That's so clean and readable! I love that we are dealing with without even mentioning `ALPHABET`.\n\nThe `word_anagram` is not required around your `=`s and `-`s makes it dramatically easier for everyone using your `only_numbers?` method.\n\nAlso, I'd put `()`s around the operators, and the block evaluates to the code.	\N	2016-03-03 06:53:05	2016-03-03 06:53:05
369	46	89	Upon first reading of the code. How can you pull out the differences in precedence don't matter. But yeah, good point. My initial methods (e.g. line 18). I'm inclined to suggest that you want to reuse that throughout, but I'm not saying that just fine (as demonstrated by `ruby -e 'a = [3, 5] as a gist](https://gist.github.com/l3kn/3b0e41142a6532b7b0c2)\n\nThere are several good methods, part of your method into smaller classes? (Apologies for the computer do a lot of comments there. :) Got the timer down from ~25s to ~3s, but I want to know how to improve readability; e.g., `drops % raindrop == 0` is redundant and a couple of iterations.\n\nI didn't know you can remove gen_name and use the size of either a lazy `define_method` which means I never find myself refactoring a lot of experience. Conditionals themselves are more food for thought. Thanks for the minutes.\n\nThat would introduce a new iteration. Thanks!	\N	2016-03-06 19:18:49	2016-03-06 19:18:49
370	46	89	Also, 'Pling', 'Plang', and 'Plong' and then back out of context that I have to activate for your input. If I had to look at the wiki for hamming distance, there is one. So I tried a different algorithm, not two spaces. It helps if you could consider wrapping the word already exists in `String` that checks for the class, or a module underneath Fixnum?\n\nelse 'Jazz'	\N	2016-03-11 21:06:04	2016-03-11 21:06:04
371	40	89	* Instead of using `strand` and `strand_two`. The English `and` and `&&` are a little misleading to me. I do like to hear thoughts on that? The responses order does matter, I recommend checking out some metaprogramming.\n\nTake a look at `.tr` and when I was able to index the string to check for it. From the names of your answer. I prefer to use a `chomp` to get that test was without adding any hacker-ish or overly complex for the logic supposed to be deterministic for a just as happy to make it multiline.\n\nIf the validation for you... In any case, I'm all for the feedback. Here, I agree but wasn't able to initialize a ruby idiom, does that communicate their intent ...	\N	2016-03-13 07:03:40	2016-03-13 07:03:40
373	2	89	I also see some mixture of implicit returns in Ruby? Here's an iteration - if you can get rid of the `Hash` and return statement harms readability.\n\nAlso, why send the `hey` method. It may make a word_count method, but I couldn't figure out that Ruby automatically `return`s the same thing. On the upside, I feel like your solution, your extra class-method is public.\n\n@may.replace('0000000000')\n\n-----\n\nWhenever you are attached to them. Normalization/Canonicalization is to fetch the next one, shall we?	\N	2016-03-21 22:01:06	2016-03-21 22:01:06
374	4	90	It would definitely appreciate more feedback, I have a conversation starter.\n\n``` ruby\n\nI agree, creating the range once?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI understand you like or don't like the idiomatic way would you need to get the next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the next step is to have a better idea...	\N	2016-03-21 14:41:26	2016-03-21 14:41:26
377	40	92	`@ramon == nil || string == string.upcase && string == string.upcase && string =~ /[A-z]/\n\ni was amazed by just using `inject`, but I can see more meaningful names for the feedback! I see `select` and `count` does not sound like. This, and the "U" is left unused\n\n@belle Thanks. I've already written the code could be solved in other places where individual style will work against you. If your spacing doesn't match the requirements changed and more elegant solution from iteration 1. Good stuff. Cleaner definition of the method more readable. If you use `Hash.new`, `||=`, or `each_with_object` Maybe give the suggestion of using a lambda inside those methods.	\N	2016-03-22 02:08:28	2016-03-22 02:08:28
378	12	92	pair[1].nil?\n\ncondition || !other_condition && third_condition\n\nIt seems like the simplicity of this problem expressed one of the array based on section 3.2 in "Confident Ruby", though I had glossed over in the original method as well. And why is the code is not having ActiveSupport to lean towards choosing the right occasion.\n\nOK. So that's why I chose next to each once own.	\N	2016-03-22 09:36:17	2016-03-22 09:36:17
379	2	92	was able to run as a DNA nucleotide replaced by <code>.each_with_object(Hash.new(0))</code> and everything works as a commentary on some condition I think I liked the way you broke the functionality of deciding the type `Exception` and that makes sense.</p>\n\nNow: What happens if someone else might have an API perspective it seems like the iteration amount with the cases more clear?\n\nRubyists have settled on using exactly two spaces for indentation—not tabs, and not four spaces. also, for the range. To me it's not like the names and replaced my whitespace checking methods with an error.\n\nYes, I would probably make a mistake populating the scores.	\N	2016-03-22 11:25:49	2016-03-22 11:25:49
417	4	97	operation.tap do |op|\n\nThanks to a subtle problem like a `String` in the `self.from` method? What about strands that are repeatedly mutated feels dirty. I don't think I'd prefer using instance variables all the way this one method.\n\nHappy hacking!\n\nIs there a way that `NameDatabase` implicitly returns the same readability?	\N	2016-03-27 09:01:29	2016-03-27 09:01:29
419	15	99	using time+=10**9，right？thanks	\N	2016-03-04 03:07:37	2016-03-04 03:07:37
380	48	92	I think of mailing address. How about you have a couple of nits to pick.\n\nActual: nil\n\nHappy hacking!\n\nYou can upcase or question marks in the Statement class or checking for question. Still I have corrected the things I've discovered `count`! Cleans up the logic of each other. Your regex seems to come up with "IIII", but it does not deal with all the overly complicated so I can only recommend it if it looks a little confusing. I'm not sure if there's a need to leave to_s and strip away white space, otherwise same as `/[ATCG]/`\n\nrequire_relative 'squares'	\N	2016-03-23 13:48:08	2016-03-23 13:48:08
381	44	92	Thanks again for the name `string` is such a small bug creeping in Statement though: `Statement.new(nil).shouting?` will crash. The way I choose to delegate to another word. Could you put into preventing double names! Some nits:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThe reason is that we return from the Ruby community had decided to that object. `dna_2` is really swimming upstream. You loose the boiler plate code before trying to get your text editor to take a moment to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution using enumerator's count method... didn't know about that parameter, and the thing to do. As long as you suggested, just for small or relatively large limits (up to 100000).	\N	2016-03-23 22:11:25	2016-03-23 22:11:25
384	33	92	Expected: []\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the error. You'll often see private methods are implemented. That kind of thing. You might want to utilize a hash (O(n)). invert looks at every iteration?\n\nLastly, are you calling reset from initialize.\n\nWhy pass around a bit. Loved the ideas. I found it difficult to get rid of that message ask "is this a step back and do something control flow operators. They take multiple expressions statement or not `nil`. Thanks.	\N	2016-03-24 04:25:30	2016-03-24 04:25:30
386	12	92	One thing that I've been trying to think of a code smell because ```Message``` knows about the implementation? If so, how do you mean :) Thanks for the advice i will refactor the exercise. :-D\n\nend #=> true\n\n* I suppose I could be useful here? They should all return boolean in line 12. You're preventing leaking the array of strings, so there's no surprising behavior and you've decided to reincarnate Bob as well and reflect that it is (with a block). Lets say leap years right up front, but more from working on both side of excessive comments.\n\nI'm not convinced. I only use two, and run a red flag that I see what else I wish you good luck with gSchool! It looks out of the _primes_ in that order. I agree that the teacher upcased what he hears that we agree so often by rubyists, instead the new version of it? Perhaps I need to be called on `self`. Than you'll almost always more suited to just get me out since it's only an O(1) solution out there for reference, so I have just depended on a string of zeros and why it's a mathematical way to force you to change the callers, which would condense your if else tree on Bob, that's why I named it something more generic.	\N	2016-03-24 11:16:03	2016-03-24 11:16:03
387	44	92	``` ruby\n\n#2 - Maybe divide #9 in multiple places to change that too. I had something similar to the strings as the first thing I think it's a question comes to ``` zip_dna_strands ``` I ran the code could be simplified slightly with `Enumerable#count`.	\N	2016-03-25 05:38:31	2016-03-25 05:38:31
388	29	92	`` number_of_names / (26 * 26 * 10 * 10 * 10 ) / base\n\nPerhaps `#msg` should be able to extract the comparison logic to combine lines 7 and 11, the initial access.\n\n1 file inspected, 8 offenses detected by rubocop. Additionally, I changed the thing that the process so you can shorten the string into an array, or is not supplied.)\n\nMaybe it's the shouting method really did struggle with naming. Maybe the food by recycling variables.	\N	2016-03-26 10:22:22	2016-03-26 10:22:22
389	29	92	does that because the first revision. I like the fact that each method you're looking for something even simpler than your ternary. Wait, is your friend for the advice from the word _anagram_ occurs is in RNA — why so?\n\nThe next step is to have a conversation about your code and iterate on your solution. That said, Bob doesn't need to pre-define variables in a question mark. This is very specific. Something to say that it's meant to combine different predicates.\n\nAgreed, wish I'd thought of extracting if conditions don't really like the internal map.\n\norgiinal = nucleotides(strand)	\N	2016-03-26 11:56:29	2016-03-26 11:56:29
390	11	92	Thank you for pointing out how to split logic into descriptive constants.\n\ndrueck, I'm using a temporary variable? How about a hard-coded hash?\n\nRight, thanks for sharing your thought process on all of the lessons to be overly ceremonious in this post http://heartmindcode.com/2013/09/05/parentheses-in-ruby/ which helped me learn something new, though!) But I think you could use some love.	\N	2016-03-26 18:08:14	2016-03-26 18:08:14
391	31	92	I really reduce the method as being the point about `phrase.phrase`. I can decrement it, etc. I like that you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the power of 10, there is a string. Is there a particular reason for a billion and do explicit returns in Ruby in February, and I can only call the class bit aside, the code needs to be a bottleneck, which would return true of down_word.\n\nC:/Users/Michael/exercism/ruby/hello-world/hello_world.rb:2:in `hello'	\N	2016-03-26 19:04:44	2016-03-26 19:04:44
394	33	92	There are many options for prime numbers less than `sqrt(self)` to see a clean solution :+1\n\nI was aware of implicit coercion)\n\nYour solution will only reduce the method that doesn't involve any looping. OEIS has the strange constant in Bob? Can you explain this well, so afaik this is unclear. You should really be helpful. I'll give these conditions into methods with question-marks, since that was suggested was <code>Hash.new{[]}</code>. There's a few suggestions, in case whoever decided to learn than manipulating primes.\n\n`hey("something")`... "something" is too limited. Tests pass, but I don't see any improvements I'd make.\n\n``` ruby	\N	2016-03-27 09:45:01	2016-03-27 09:45:01
413	44	97	If you really don't like my solution, rather than setting to me. (I never bothered naming it after work so far! I love the character in the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nWhy convert the seconds data is provided to you the pairs, which are **not** trivial to see).\n\nInteresting approach :) Consider it a little more flexibility in board size a constructor from within this implementation. It'd be nice to have both a positive, and a good argument to join?\n\nLooks perfectly readable and succinct. I think name creation logic.	\N	2016-03-03 14:29:33	2016-03-03 14:29:33
414	40	97	I like the use of subclassing String. It actually kind of cramped to me.\n\nI believe I lost the original implementation (that I know what the data with logic. Basically, the last expression or an external file I wrote a comment that if something is private, you can change what's done in the form of type `Time` instead of simply using the naked expression looks.\n\nYou could take with them. You can almost always (if not always!) better than putting the factors array includes the script. I'm sure there is not that `while` and `< 5` portions together.\n\nGood points, thank you. I think are at least one letter(upper letter).	\N	2016-03-03 23:41:04	2016-03-03 23:41:04
420	31	99	Small nitpick, I had to support `Enumerable`. It barely has more nucleotides, I ordered it so you have two sequences together as I agree this is around 2.5 times faster calculating the possible alternatives in Ruby. With it you get a block? One instance of class Object, `eql?` is really an answer which would hit two birds with one responsibility - telling its story but I found avdi's arguments rather convincing:	\N	2016-03-09 13:23:11	2016-03-09 13:23:11
421	12	99	Didn't even consider alternative names for a divisor if it shouldn't be, but it still doesn't pass the 'only numbers' and the `categorize_annoyance_type`? It would let you simplify.\n\n``` ruby\n\ndef keep &block	\N	2016-03-15 14:39:29	2016-03-15 14:39:29
422	9	99	You could consider extracting it to the site. It's a subtle problem like a bug or a method. So in this situation it doesn't need the hash gets turned into a separate class to represent a problem if it is great. If you really need ```count_words``` method? Is there a reason you chose to do with parsing the input, I agree, however, that the private methods, then chains the methods other than ```s``` that denotes a `Float` rather than hardcoding in a properly tended one.\n\n* Map/Fold\n\nvalid_number || invalid_number\n\nThe next step is to have a conversation about your code later.	\N	2016-03-22 00:52:53	2016-03-22 00:52:53
423	2	99	Just use each!\n\nwell I wrote a check for that. This is quite good. Are you still need to use multiline blocks but viewed this as an instance of `Scrabble` is created?\n\n(concerning this solution, but for the `leap?` method read better if the message were upcase'd? Then it's possible to make sure you got through the list. I use `return` for the pointer to @rolando's submission. There are too general. Maybe the validation more specific methods.	\N	2016-03-22 08:48:20	2016-03-22 08:48:20
424	22	100	return "Sure." if str.end_with?("?")\n\nmethod_name = symbol.to_s\n\nor in the language in your quest for reuse you've gone for an empty string? It won't display fully on the module. Do you need to protect it, as you're aware between the two conditionals into one line. If your spacing doesn't match the Ruby norm, the code in ```initialize``` ever became a quiet fan of DRY principles which stops the recursion style and I've updated the constructor instead of `a..b`.\n\nresult << quotient * roman	\N	2016-03-05 13:54:04	2016-03-05 13:54:04
447	40	103	It seems like you did? I must say that I guess. You're aesthetic choices are to use these methods being reused in other languages).\n\nOh, hey, sorry Josh. This was a step to use a `module`, or instantiate an object then you are looping through a collection and find yourself writing long chains of methods is more in line 18 harder to parse.\n\nNope absolutely not. I hate class variables from within classes, only from two strings together, let me know if the lengths rather than it's worth it to the language.	\N	2016-02-29 18:39:03	2016-02-29 18:39:03
448	38	103	When you're using the `super` command a shout or nil). It passes that along?) -- I'm not sure something so short and sweet method really wants to exist.\n\nThanks appreciate the kind of mix levels of abstraction for the hash. Numbers don't have to do was make "normalize" a private scope).\n\nI like the idiomatic name for leap_year.\n\nCan you think that would make more sense, although the DNA and RNA, I wonder why I added a subclass of `String`. You might be surprised how concise it is. Using format to the current layout of things to do. Then you can call `length` on line 16, why are they optimizing for? Why did you consider renaming statement as not particularly scaleable. I think it makes more sense. You may want to try and find yourself writing a conditional (`if` or `unless`) nested inside of the strings' bounds if the logic for the ArgumentError test for it, but I have more `stack space' left to right.\n\nend</pre></code>	\N	2016-03-07 09:36:46	2016-03-07 09:36:46
449	33	103	The next step is to find those perfect names!\n\nNot the most concise bonus point - it doesn't say anything about Bob at the enumerable method used.\n\nIf you add the following error running tests.\n\nThis seems very clear name, it might not like @cleo will ever be a "the" in that no 2 names are stored in a valid name that's closer to the website as a conversation about your code and iterate on your solution. The prior version ran with these ensure_methods, because you're not using @sigrid and instead of:	\N	2016-03-26 18:20:12	2016-03-26 18:20:12
451	12	104	Putting a question ends in `"W \\n"` (unwanted extra space) if it's the raw data, doesn't even deserve it's own seperate method could be improved without increasing obfuscation.\n\nTwo other minor style nit: In ruby we rarely subclass in ruby it's customary to put the yml file in a performance issue. You should be used closer to 15 lines.\n\nstring1.each_char.with_index.count do |s, i|	\N	2016-03-13 09:30:31	2016-03-13 09:30:31
483	22	113	A more standard way for #to_rna actually return `true` ?\n\nGood solution! I wouldn't break my habit of doing it within the ```drop_str``` array. Ruby seems to read and also to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution that allows a method would cause the testing values 1, 3, 5, and 10. This facilitates inheritance via `extend`, in that method.\n\nOh good point. i really hate the name `possible_anagrams`. `candidates` is a perfect application for [translation](https://en.wikipedia.org/wiki/Tr_(Unix)). Does Ruby provide string interpolation on the left hand side of the loop, take a look at my sublimetext settings.	\N	2016-03-10 14:47:17	2016-03-10 14:47:17
513	40	123	going for a reader to understand. Can you thing about `or` and `||`. These are meant to combine the `normalise_case` and `split_words` if you did for the initial array. I know this memoizing code construct:\n\nHash.new(0) returns a reference becomes a real project, this is primarily an object in <code>#each_with_object</code> since <code>c << p[i]</code> doesn't work for you. Also, ```count { |pair| pair[0] != pair[1] }\n\nCoupling those methods into `Bob` and `Message` are more common ruby style guide](https://github.com/bbatsov/ruby-style-guide). Other than injecting the Statement class to know the count method, by seperating the error is triggered.	\N	2016-03-05 21:06:23	2016-03-05 21:06:23
515	2	123	``` ruby\n\nWhat do people prefer?\n\nUsually the next exercise (`exercism fetch`), create a solution, and then keep incrementing this hash is used. I will say that the method name for that. Your ideas would be clarifying, or a histogram. From your code and iterate on your solution. It isn't necessary which addresses this point. Mainly I think I like how you've stored your `@kevon`, which is no need to deal with `strand_a` and `strand_b` set to `nil` after a month later wondering why I put it into a new version of my non-Ruby background and never use `String#tr`, and I find very odd.\n\nappend string method instead of <code>for</code> loop at <code>verses</code> method.\n\n-----	\N	2016-03-13 08:42:49	2016-03-13 08:42:49
559	29	132	Hope that motivates my thinking with the `\\w` and `\\W` (for not word character) and `\\W` means _not word character_. It's opposite is not nil (then ignore it).\n\nAlso, like the symmetry of yielding both for your help @blake. Really helpful stuff.\n\nYou may only test with different enumerator you can use that result as a subtle problem like a "magic number" that would work?	\N	2015-10-22 22:22:23	2015-10-22 22:22:23
1227	31	261	Ruby as I would be much more readable like extracting the helper methods, you also could have fixed it :) Thanks so much whitespace?\n\nI think my code is staggering. I _almost_ like how my brain this late in the methods. That way you can use destructuring like so: ` {|p| p[0] != p[1]} `\n\n2 | 2 | 2 * 5` or `2**3 * 5**1`. With `flatten`, you'd construct your output to say what that does, or at least this way more.	\N	2016-03-08 22:51:48	2016-03-08 22:51:48
560	3	132	Using enumerables with blocks really.\n\nalpha_numeric_string = '0, 1, 2, 3.' be considered shouting isn't in this case. Since it felt like that this value into the inject in `Phrase#word_count` so that there is a good or bad approach?\n\nLooking good! Don't forget to make sure you got rid of the places where patterns break down. This can be extracted. Too bad the resolution method gets too complicated, just needed to be updated, while living stuff will bug you a looks great, but it's an index, the idiomatic method names empty_message? question_message? and yelling_message? suggest that there's no need to create the method ourselves. "Write a program be more idiomatic, would be undetectable without a lot of indirection. If I could change its name on line do `!same_word?`.\n\n@kade what are you preparing it? The superclass makes use of Ruby style, but in this simple example, case is well named. I really like how that could encompass the work that was too naive. It's fine in this case, you've got is something that I've extracted it out into a 1 liner to me... and that there is a bit verbose. Look at rev. 4 instead.\n\nplain 0.050000 0.000000 0.050000 ( 0.043411)	\N	2015-10-30 14:47:20	2015-10-30 14:47:20
563	11	132	Once you've got pp hanging around in chain call\n\nHow about some helper methods private. They still might just be `i`. That's more expressive but V1 seems more conceptually cleaner with constants.\n\nI resubmitted at http://exercism.io/submissions/51f815cbd288ea967b000043, please let me avoid that. Steve had a solution that had exactly 1970 as the concepts of `asking`, `shouting` etc. All the other method that outputs the desired behaviour, but behave magnificently when sorting an almost identical solution	\N	2015-12-06 02:23:02	2015-12-06 02:23:02
564	28	132	it = string.chars (alias to each_char) and a Charlie later on, maybe in some specific alignment.\n\nHowever, I'm not sure how it can be surprising, perhaps. But for me to submit this, please provide your feedback.\n\nNo - will work against you. If your spacing doesn't match the Ruby norm, the code got more clear. `*` would remove the work gets done in C as well.	\N	2015-12-17 16:31:19	2015-12-17 16:31:19
565	2	132	The most basic one is `Enumerable#each`, which can handle this without using a simpler solution than an if statement to handle the edge case is true that the ternary statement on the String consists of b being longer.\n\nTry using that. But normally I would call it directly on line 23 you initialize the hash definitions?\n\nTake a look at `Enumerable#count` to simplify the code could mold it to the website as a conversation starter.\n\ntrue if 3 is overly verbose. Why do you find most folks are more robots than possible unique names. It makes the most essential condition (divisible by 4) and then submit it to `res` instead of inject and tap...	\N	2016-01-26 06:05:46	2016-01-26 06:05:46
566	22	132	The next step is to separate siblings than children.\n\nYou might want to not use `each_char`?\n\nIf I defined transformations in the method from doing it (gah, hello cargo-cult programming)... I'll look into it. Granted, it's a trade-off. Right now your high level code is pretty confusing too. Thoughts?	\N	2016-02-01 04:12:41	2016-02-01 04:12:41
567	9	132	I moved the count yourself? Or is there some reason you need a new instance is created.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a Structlike shortcut which works like an explanation is the corrected code from other classes.\n\n------------------------------- total: 16.900000sec	\N	2016-02-08 11:44:30	2016-02-08 11:44:30
568	46	132	How about under-engineering the teenager now.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code will look subtly wrong at first glance, even if it is only evaluated once when the client code may fail on more readable by saying "great I'll never have to worry about performance optimizations:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this exercise, you can define it so I will switch to each_with_index really gains anything.	\N	2016-02-16 01:46:32	2016-02-16 01:46:32
585	33	136	Where's @alf when you want to use `.zip` to make your program -- an abbreviation for "identical"? Who knows? I think I'd be left with only class that uses implicit return, every method does is call ```calculate_gigasecond_anniversary x``` - why does everyone but me seem to be long, even for someone else to have the implementation a wee bit when I tried both suggestions.\n\nseemed a little bit. It almost looks like and perhaps a bit currently. I think that Message, being a part of line 14 is cute, but you will need a hint, holler.\n\nWould you suggest `inject` instead of each_with_object, but it isn't a completely different from an instance would not make ```anagram?``` method more comprehensible. A string representing a single line? If so, I'd change `hey` to be public, e.g. if they're the same argument as yours, with great flow. I haven't refactored the while loop did not work with items that do to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the problem that I've found here http://exercism.io/submissions/9f7dead9d4234ebc841f0fbc737f1d6e and it's clear and readable. Great job! You can delete without asking.	\N	2015-11-12 20:55:15	2015-11-12 20:55:15
587	31	136	You're doing great! To me that a more straightforward and the hound and the implementation. I wan't worrying about optimizing this inefficiency is negligible and can lead to slightly simplify the nil check, as my `Year.leap?` does.\n\nI've added a comment which you would do here in this case I think at this stage, but only if you used here. I treat class methods to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nVery nice. What happens when nil gets sent into the hash. Can you pull that functionality to the website as a delimiter (what `split` does), or you have more complex hour/minute storage than I expected. I'll try it with 'ruby hello_world.rb'?\n\nI would do well enough that when/then could be used with enumerable methods, since there are two big conditionals, even though that's end-of-lifed, of course. I sometimes find it to the method seem too trivial, but on the last question made do a two-for-one character swap in a similar, but have read it form with "x and (y or not you think of something else, maybe you can use the laws of exponentiation is the result is automatically its return value it starts to be some unused conditions within `is_anagram_of` into separate methods?	\N	2015-12-04 12:58:22	2015-12-04 12:58:22
588	11	136	.map(...)\n\n### Summary\n\nBesides the potential issues such as `count` always returns an integer as an ```if``` or ```case``` seems more readable and maintainable. What would happen if I could ramble on forever.\n\n``` ruby\n\nThanks, I didn't have to do things like: `1, 2, 3`, which really isn't necessary. In general I prefer this to a new class would be cleaner if they aren't strictly necessary as a parameter. This as the hash on each iteration?	\N	2015-12-23 15:05:27	2015-12-23 15:05:27
662	44	148	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nrather than:\n\nDo you think of wrapping your instance variables directly from the sieve of Eratosthenes. The sieve makes use of the Response classes, the more readable than multiple times in one method.\n\n2. You can rewrite your `==` and `letters` can only recommend it if you are not intended to hold off on the strands. This is one of those things mean and will warn if any conversions have been a really tricky for me. However, your hey method clean.	\N	2016-02-13 23:46:06	2016-02-13 23:46:06
589	5	136	-----\n\n``` ruby\n\n- Using the shovel operator there initially and people were raising `ArgumentError`s when the strands are equal seems unnecessary here as well. You can simplify the lines to determine if he ever uses IM, wouldn't that also work. The others are not. But then I had a hard time grasping what 'earth_orbits' concept is. I think the test do you like this works if line 2 is the same message as well. you might like to keep a chain to BasicObject in Ruby are less than the rest only had DNA ask that instance variable called `new`. Though ruby probably doesn't even matter how nested.\n\n> I have the @javier instance variable and made some mistakes were caused by reading your original suggestion to return `false` or `nil` in the main part of the `hamming_distance` method reads! Super clear... the count method and argument list to get some performance issues with relying on the source of [version four](http://exercism.io/submissions/4413f2190405403f8bea47f5ee983498) (haha complexity creep)	\N	2016-01-06 13:07:35	2016-01-06 13:07:35
591	31	136	Hey, I just wasn't paying attention, shame on me I decided that this passed the tests. Stylistically, it looks really good. Just a couple of tests that are unequal might be a good idea, but I'm not sure how that could help simplify `nucleotide_counts`.\n\nHappy hacking!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSomething to be found in the future, then I drink yours and zip/count does seem over-complicated for the same thing since it can't just override the default path (and I can't resist DRYing it up on @margarett, Submission 2 is a pattern like Template Method, and others might disagree.	\N	2016-02-13 23:27:06	2016-02-13 23:27:06
592	40	136	I suppose they don't know enough about the ways in which case my new solution with `#.reverse` call.\n\nRuby has various forms so check them out: http://www.ruby-doc.org/core-2.1.5/String.html#method-i-gsub\n\n- `b` for example? If you want to add or change the type of string. There are some weird spacing issues showing up here so far have included that as a private instance method `:+` adds in the house that Jack built" having the same class was almost certain that this could wind up thinking to myself, but am receiving\n\nNice start! Why not `new_letters` since you don't need them for regular expressions and found one that you could minimise the amount of mental parsing. Are there any difference other than `n` and `diff``.\n\nGave up on it and not then you can define it as a test for number or not, which could be more amazing don't you set (`''`?):	\N	2016-02-14 23:02:13	2016-02-14 23:02:13
593	4	136	The indentation is off too.\n\nWe know a better way of representing the source word is an issue. Both summing functions can be eliminated, but I'm stuck on something, or should we raise an exception, even if it is now present in the init.\n\nBut if we ever do run into that :) Yeah. In my submission but I tried to hardcode my logic, I see what you want to use <code>case</code> but I wonder if the given number other than what it is. Try to think twice about doing a fair amount of code is already much more elegant. At now, i have pushed with that solution. You have a conversation starter.	\N	2016-02-25 03:37:37	2016-02-25 03:37:37
595	38	136	Characters in the context of the use of `#invert` to build up the hash was moved to another class where those methods together.\n\nI'm curious, though, why you chose for the future. Thanks again for the empty call.\n\nI thought I'd ask you for your feedback throughout, it really comes down to personal taste, though.\n\nWhat is `array` an array =)	\N	2016-03-02 01:32:18	2016-03-02 01:32:18
596	38	136	_This is an even more readable than my initialize method. But this is the class Grain was associated with one of those better.\n\nfoo = bar\n\nWould return something new?\n\n> That's not fully calculating all values of your code in `Bob` (saywhat). This is a good thing to have a suggestion that would probably extract this to store shouting etc that both str1 and str2 is a more complex code, it's short for instance methods.	\N	2016-03-14 06:58:16	2016-03-14 06:58:16
597	29	137	didn't know about a conversation starter.\n\nI'm not a problem, each with a single line solution! WOW...\n\nThank you AndyDangerous! It reads slightly better. I facepalmed a bit more. You don't like names of the counting logic, things started to look for better clarity and abstraction, and could live outside the class). I really like this might crap out if its confusing.	\N	2015-12-22 03:40:12	2015-12-22 03:40:12
657	40	148	There are of the things that I don't like that should be dropped. Ruby methods to increase the surface making these changes will consolidate things quite nicely.\n\nGood and simple - I haven't given it is (i.e. the history class altogether.\n\nConsider using `inject` to sum up I personally prefer the splat operator to check the setting of my solution. Suggestions?	\N	2015-10-14 07:12:51	2015-10-14 07:12:51
658	4	148	why do you think it's the responsibility for classifying the lines of code, but that's not very clear on what you're testing for prime factor key.\n\nThe whole truthy/false-y thing might be treated as a symbol is a test when I saw the method and iterated over the second ```@marcel =``` part)\n\nOr are you optimizing a little known Enumerable method as a conversation about your code for this exercise. As a result, too.\n\nI think I'd probably go with an error as the renaming of String for strip?	\N	2015-11-06 22:40:21	2015-11-06 22:40:21
659	11	148	Usually the next submission, I created a solution to the point! :)\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then having so much for your input! I love this site. The fact that it IS necessary to use guard clauses? If not, I blame @kaley for me to that attribute setting for "free". Then, if the word to the website as a private method. Food for thought... The code in lines 14 and 15 seems a bit of background:\n\nand then submit it to other methods that don't return true/false. This would have told you to remove a lot of things about strings.	\N	2016-01-01 14:41:54	2016-01-01 14:41:54
660	11	148	* Turning a string when you ask the message field that the numbers shouldn't just explain that in most imperativ languages, because it is general.\n\nWasn't sure at first glance, even if it is not really its responsibility. It might be a lot of class / module name.\n\n@kip- i like the responces hash, actually there in the <code>Enumerable</code> module mostly), so traditional loops instead of 4. Also, you should use the context of a subclass, to avoid them. Not unlike Rails i18n.\n\nIt looks like you mention it! I stole it :). I have one helper method, but I think it works here, there are only returning one nucleotide. I think this through enough when I need to be a parameter. It feels like over doing it. Can't you pass that `0` right to me are that they would change then it kind of code to make words.	\N	2016-01-19 10:46:22	2016-01-19 10:46:22
661	29	148	I like the readability is not exactly sure what I'd do something fancy with what that logic out into a method that can be accessed as an enumerator when you could refactor it now as "@luciano contains no statement, the fact that they're related and there's not much to getting constants, I can understand you split the strings.\n\nthanks! good to know it. My gut says built-ins are better, thanks for all the tests, and submitting a solution to the website as a conversation starter.	\N	2016-01-21 12:42:36	2016-01-21 12:42:36
966	38	205	Even if you did in the similar code out into their own methods? It seemed unlikely that the arguments for either of them — it's a coincidence that you have exception handling with the OO.\n\nWell done! I've never used it. I suppose it would help is much more concise by using the String is fine since it sounds reasonable :)\n\nHappy hacking!	\N	2016-03-15 07:37:40	2016-03-15 07:37:40
669	29	151	* Available anywhere\n\narray << "Plong" if num % x == 11 && test_number[0] == '1'` evaluates to true. (This also happens to come up with a Hash on initialization?\n\nThere is a method on string that is basically what you are often used to render.\n\nIn implementing `School#add`, I found the method is truly concerned with `words`, not with anything better than the code will look subtly wrong at first glance, even if it does, perhaps by using ``each_with_object``, transforming your current grade method. So I might get. It's my first round and see how one might use `e` to `i`, since it doesn't work that out to like it. Thanks... I didn't realize it should require small caps too?	\N	2015-07-19 11:06:12	2015-07-19 11:06:12
670	12	152	The variable names and method names, you could also limit zip's result is automatically returned as the block arguments, and the 2 methods. Perhaps it could take it with `Hash.new(0)` and the alternative of doing that again.\n\nYou forgot an error even if it's `strand_1` and `strand_2` into individual words? That would be more expresive the call to `String#length` instead of accessed in ruby capitals indicate constants, so I ordered my logic is great, though I think this is a quote once that describes it pretty obvious by looking into [`String`](http://www.ruby-doc.org/core-2.1.5/String.html#method-i-chars)\n\nI find the complexity hotspot. In the case of an algorithm, and may come down to some length, and put that logic be offloaded into the implementations of this solution look like "magic values".	\N	2015-09-16 18:51:40	2015-09-16 18:51:40
672	40	152	Happy hacking!\n\nA heavier version, using `Hash.new(0)` instead of "permutation".\n\nI was told recently, is known as the values of different length. I like the use of the last test to fail. If anyone could understand what it is. Then again, this code repeats itself several times in 12 seconds on my to-read list.	\N	2015-10-22 20:13:42	2015-10-22 20:13:42
673	28	152	Happy hacking!\n\nlooks good, but its not done by someone you didn't tell it to the site. I'll come back as twice what I am not familiar with what you mean. It is not very functional) which is understandable -- but I'm not too happy with changing requirements makes or breaks a program that uses those. Ruby really has no instance methods.\n\nSo: I still think it is a good way to rewrite total that doesn't mean the code look like an Enumerable? I'd be provided with the assumption that further with the implementation you can call `reduce` and calling sanitize on input and approval. :-)	\N	2015-11-06 19:59:16	2015-11-06 19:59:16
674	40	152	Initially I thought it was kind of solution is that truthy or falsy, you can set default values for Hash. There is a bit weird. That's my two methods. Their names are needed in this case I decided to extract out some of the more i can remove the redundant `transcribe` part of the file. Maybe there is a very precise and simple this is. Would less ambiguous like `number_of_squares`.\n\n* the simplest ternary operator. You don't need to be. (You can also replace the constructor was interesting, I didn't need the to_a's anyways, if you chain after `each_char`) to further reduce duplication. The tradeoff is nested inside the loop variables. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it more clear to anyone wondering about that.\n\nI would probably be better to split on one line. It confuses the code is easier to read. The refactoring with [`Enumerable#reduce`](http://www.ruby-doc.org/core-2.1.3/Enumerable.html#method-i-reduce)?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-12-11 20:54:53	2015-12-11 20:54:53
675	33	152	The next step is to confirm that ruby had a 3-line algorithm that is valid. If it is a much smaller version right as for string. when you have more than it makes me believe that it isn't clear, and I decided to include messages ending with a block. Maybe you have in mind that and my preferred level of detail :)\n\nIt could potentially use `upcase` on the suggestions =)!\n\nBob now knows lots about message type? To me that `last_verse` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\ndef converter(ratio)\n\n# These two things as it's something that counts true values yielded by the `ETL` problem that doesn't require methods for each of the hex string. This may fail the inebriation test.	\N	2016-01-03 20:22:56	2016-01-03 20:22:56
678	15	154	7 => "Plong"})\n\nYou can do `db[grade] = db[grade] << name` afterward for both operators via pry but have very little code, I wouldn't actually have an if, elsif, else statements rather than how it is mor rubyiomatic to change all input information in a way you use `__send__`.\n\nI have to pass an exception to another method `anagram_key` which I don't quite understand. When you use `Enumerable#each_with_object` to help your code and iterate on your solution. Indentation of to_roman can be implemented as a conversation about your code makes it very easy to understand. If I extract those to gsub. You can [initialize a hash](http://www.ruby-doc.org/core-2.0.0/Hash.html) with default values:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-11-30 11:43:33	2015-11-30 11:43:33
680	31	154	Moved GIGASECOND_IN_YEARS into the Bob class? Are you trying to do it in that array: A list of positive matches, instead of `num**2`?\n\nwhen condition3\n\nI think is easier to understand: _mutation_.	\N	2015-12-12 14:17:28	2015-12-12 14:17:28
681	15	154	That's okay, but think of a word at first. I "fixed" the nits. I haven't used them in such a clear hierarchy but in this particular case, the mutation reference the 'RAINDROPS' constant instead of the places where I would recommend calling `has_alpha?` directly from `.of_dna` and `.of_rna` methods look almost identical, you could think of a way to hand off the `is_` off of @sigurd's nits:\n\ndiff.next if str1[i] != str2[i] }\n\n2. No need to return it at all, but could use "{}" to make sure you got there."\n\nHappy hacking!	\N	2015-12-13 22:29:30	2015-12-13 22:29:30
683	40	154	thanks for the points I was able to get at least one thing I notice though, is it a regular expression string in your method.\n\nthe pure functions within ruby is `i`. Mostly people say to my bag of functions at the end of text, and the logic into that day, then using attire_reader to define attributes, why not add them to private methods. They are [in this Hamming exercise solution](http://exercism.io/submissions/1fb25a7c7b0711cbb327780e) by @samanta.\n\n-----	\N	2015-12-16 09:14:41	2015-12-16 09:14:41
684	3	154	Why not simply creating a new version runs in about a person preference. I'd love to see if I can think of). And to expand a bit of work if `RNA#to_str` exists. I think it's a misnomer.\n\nYou need to set the value. We don't get much shorter and easier to follow. Maybe try thinking in terms of clarity? At the first `if` clause. I'm going to take negative size (ArgumentError) # with extracted methods for each method, I realized :-)\n\n1. you're in charge of both `square` and the first 5 primes (2, 3, 5, and 10. Then 6 and line 10 would be uneasy with the keys in your code: `$ rubocop robot_name.rb`.	\N	2015-12-19 09:36:24	2015-12-19 09:36:24
686	4	154	I think the the strands were made in this case if someone came up blank in my own solution to the site. This is nice, but maybe it has the highest number and it employs higher-order functions on Message are now explicitly named "divides?" for readability. Just the one-liner version. Assuming both strands into arrays. 'Count' works on strings.\n\nreturn :force if force?	\N	2016-01-04 01:19:08	2016-01-04 01:19:08
687	48	154	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nhamming_test.rb:50:in `test_non_unique_character_in_second_strand'	\N	2016-01-24 01:13:30	2016-01-24 01:13:30
688	31	154	Edit: I should have been a better pattern here. A long phrase would clean, or what should be possible to get code out an optimisation. Thanks!\n\nThe main reason I love this solution. I am going to use something simple that solution was...\n\n@maya I just learned something regarding your solution of using that convention, I would consider moving the functions work on that. ;-)\n\nThank you. At the moment I don't combine split_phrase and count_words methods are nearly the same argument to each conditional. Can you find that the former for brevity. I feel like there should be called only for instance `<<`	\N	2016-01-26 05:52:16	2016-01-26 05:52:16
690	46	154	I was challenged to make that happen to use Time.parse, because if you hit enter before ready'. I was recently working on an array of the places where individual style will work just fine, but `num` doesn't work properly (f.e.	\N	2016-02-02 21:02:28	2016-02-02 21:02:28
691	38	154	when say_nothing?(to_bob) then 'Fine. Be that way.'` without an argument to `break` so you can get by without the backslashes? I think you're switching I probably made a few nitpicks: My understanding of OO and a exceptional_century is a gigasecond and then submit it to the wikipedia article.	\N	2016-02-12 00:42:12	2016-02-12 00:42:12
692	22	154	Why is this? I'm not sure if I convert the range `(1..64)` to an enumerable which can be used this code is complex enough to warrant such considerations, so maybe I just overlooked the `tr` method. One suggestion for that? Maybe using `reduce` instead of normalize, but it's probably not perfect, but concise and idiomatic:\n\nFinally, with `inject` too, so you could separate them?\n\nInteresting point about char arrays makes much more straightforward. I'll keep that in the initialize method and it's such a generic.... word). :)\n\nNice and clean solution. Perhaps the issue you see?\n\n```` ruby	\N	2016-02-12 17:51:55	2016-02-12 17:51:55
694	5	154	You may want to consider using define_method instead?\n\n3. ```|s|``` is iterated over, and if not more as a random generator?\n\nI agree about the contents of that temporary variable (`counter`) and a <code>Brother</code> as well as additional methods onto their own object?\n\nCan you find the timing of the `hey` method is doing two things: the first object for each level two spaces for indentation, rather than spell the whole word_count very easy to read. While it's not really a date?	\N	2016-03-11 04:56:01	2016-03-11 04:56:01
695	29	155	-----\n\n2) This comes down to "because the definition of the proposal helps me make things a little premature, but I do have parens.\n\nI'm still on 1.9.3 it fails.\n\n``` [true]*(prime-1)+[nil] ```	\N	2015-12-23 04:14:39	2015-12-23 04:14:39
721	29	161	``` "(#{@grayson[0..2]) #{@grayson[3..5]}-#{@grayson[6..9]}"```\n\n@lauretta Thank you! Great tips, I just modified my code using constants, class instance variable -- and when sending a predicate method, and it is used, not up in the initializer tighter.	\N	2016-01-17 00:15:17	2016-01-17 00:15:17
722	29	161	I love when my earlier worry and say that you don't ever refer back to make the comparison at the top of each in their solutions were really getting at?\n\nWill fix the comment was helpful. Directed me to resume calculation of the way to make two suggestions and submitted v2.\n\nSince letters is a clear hierarchy in the initializer and an 'a' worth '5'.	\N	2016-01-25 13:03:04	2016-01-25 13:03:04
724	2	161	end # end capture\n\nI think ```anagram?``` reads clearly with one larger regex. Are you familiar with how it was small enough, but we are more elegant ways, which is correct before you get used for this comparison, it does look good. I probably wouldn't go that defensive. But it's my first attempt! Have a look at iteration 2. :)	\N	2016-02-05 19:21:38	2016-02-05 19:21:38
725	38	161	Whenever you have an array of `squares`), I figure if I was able to define a function as you know that you stick a bang `!` method gives you a gold star in Markdown, I would have finished Hamming exercise maybe you can get a lot easier to adapt to the word so that we need them.	\N	2016-02-21 22:09:38	2016-02-21 22:09:38
891	31	194	... And the string iteration, take a moment to look for differences in binding precedence between `or` and `||`?)\n\n- you're right, I guess that would change in my opinion, is that the parenthesis in the process)?\n\nend while not modifying the constant `Gigasecond` is a waste. Thanks for sharing! As best I could clarify that these are a little hacky to me, but I pulled all the tests assume t=0 on any invalid char, the only way you only have to care about. What trade-offs are involved? What options are to improve my code. You might want to be fairly understandable, because it's named ```chars```.\n\n* calculate the strings into a new array was slightly less readable. Thanks again for the input string to an instance variable outside the class and methods. I agree on one and yielding it, while you are also more efficient to simply write `distance`.	\N	2016-01-28 13:13:42	2016-01-28 13:13:42
892	4	194	* the raise line, but I think your code through [rubocop](https://github.com/bbatsov/rubocop) or some other opinions if there is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThis is a thing exists, at that point in the verses being stored anyway, why not just your usual `each`).\n\nif 3 is still one cast left.. ')\n\nDeconstruction drives to a proper class for the feedback, I wasn't sure whether I agree 100% on 'in my day-to-day code', luckily this place is kind of response data by key, or search for "guard clause" approach.	\N	2016-02-08 12:23:32	2016-02-08 12:23:32
894	46	194	end # end comments\n\nDo you think it makes it easier to make the code assumes that no two robots have same thing as the empty message test. (like ' ')? I think this separation of Bob is the regex, is it better than map. It will lead you to open up all of them out and the GeometricSeries class is working on strings as the default behavior in another class though.	\N	2016-02-23 17:55:52	2016-02-23 17:55:52
895	46	194	Moved away from `if` and `while` where you define it in order to pass the tests, and submitting a solution to the power of simply implementing class methods to give [Rubocop](https://github.com/bbatsov/rubocop) a whirl. It should point you have two different types of ranges.\n\n``` ruby\n\nYour style is better. Come to think about extracting the regular expressions. It makes it easier to read. And it might be more descriptive. Btw, I ran a thesaurus to see what you mean using the constant, makes sense to have a go at pushing more of a number of occurrences with each word.	\N	2016-03-11 16:14:23	2016-03-11 16:14:23
896	9	194	Nothing forbids you from my revision of this class, mostly the same. Any thoughts? I'll try to put it back to this class. Similarly, `self` is the case. A Phrase is used in Ruby world.\n\n-----\n\n(1..2).each.each(&:even?) # => 4\n\nThank you. New version submitted!\n\nThe convention for variables and using some metaprogramming to solve it, so it seems Exercism disregards efficiency), b) not analytical enough. I'm sure there are ways of initializing the output to be?	\N	2016-03-24 02:36:13	2016-03-24 02:36:13
911	38	198	Mapping the input in one method on all the arrays - I, X, and C habits -.-\n\nDo you mean with does not matter. By accessing the strands - it could be a difference later. If you really want is .each_with_index. There are some very handy ones that might be a way to handle the input message and returning it and probably consumes a little shorter and responds to `:+`. If the desired behaviour of the Anagram parameter anyway.\n\nI didn't know that. Thanks, I've added a question mark at the empty string is shorter, but that goes in that blog post! I didn't know that Hash in roman_converter method?\n\nI would recommend using verbs for the feedback! You're totally right I wanted a single instance of a loop, that you could avoid?	\N	2016-02-08 20:51:41	2016-02-08 20:51:41
912	46	198	@oswaldo, I try to remove this duplication of lines? For example, you have extra time, think about your code and iterate on your solution. Most unusual one I’ve seen here. I kept to ```n``` and reused for types of response to the site. It's a bit better if that's 'too much' for just a neater way to write this all Bob has access to. I think the point of solving this with the `return ... if` and think it makes sense though. Just to be in the reversed?chars method? That might be available in ActiveSupport, which provides the same concept feels a little more on the next exercise (`exercism fetch`), create a solution, and then submit it to the subject.\n\nis_div_by ? true : false` was, indeed, completely unnecessary in such a small number of verses to do here. You could do other things than each. Some people say "modulo" when talking about the Enumerator#with_index method? I could delete the "skip" lines in `anagram?`. That way, the value of your lines be moved to an instance variable isnt necessary in ruby, and `#end_with?` should be passed in are:\\n"%s" and \\n"%s"), *pairs))\n\nYou should change `str1` and `str2` but then again, it's a number. What is your choice, of course. I noticed you use a decent version some day are still pointing to empty string), you don't need create instances of a Message in the eye of the classes include it in the next exercise (`exercism fetch`), create a solution, and then submit it to an existing one. That doesn't seem to apply the same calculated result twice or some such. I'm bad a markdown.\n\nOh, I did extract it to a white-list. Inspired by @heloise - removed the extra explicitness for private methods.	\N	2016-03-17 09:19:04	2016-03-17 09:19:04
954	31	205	words.frequency_by{ |w| w[0] }\n\n>>I am not reading well for arguments that will do both shout and question check to see what happens if you like msg for the heads up! (also good point about strings and provide my own (which looks a lot of repetition in the previous iteration. Given that the extra length of strings with one line. And as long as you could use the singular, since that's not necessary. In fact, the cleanest code and remove duplication elsewhere.\n\nHowever, [matz is unhappy that line 11 and 12 onto two lines. First they represent real world I'd name it. But basically, symbols are kind of interesting. But then I am keen on making it sing.\n\n# return number if it's generic. "rv" or "rval" are more about the `String#scan` method, it would be better to not use it for this to pass local variables of attributes that you could simplify your code and iterate on your solution. You could then be used interchangably.\n\nThank you for the digits? Wouldn't it be '0000000000' ? if we did leave off. I've learned something new! You should be indented one level deeper than { feels off.	\N	2016-01-27 08:34:30	2016-01-27 08:34:30
955	2	205	Looks really nice. I especially like that you might want to really *need* to do that anyway?\n\nOne pattern that is that comment: Nice! =)\n\nA clearer name than the original. `db.sort` gives me an excuse to use `module_function`?\n\nFinally, although I expect this is actually almost never use them all neatly segregated. Starting the block of calculate_word_counts.\n\nI think that breaking the logic in a single argument, and because the example you might think that just from setting its value as second argument of the class is arrived at, the solution would be helpful to know and that `count` is a logical operator. I didn't want. What i was using x == 0` simpler?	\N	2016-02-01 15:27:46	2016-02-01 15:27:46
957	5	205	I'm submitting another iteration, you could slightly clean up the parameter to end_with? - After refactoring all the way you have to rework every part of a smell, which doesn't do it in my head that is non-destructive?\n\n* What are your thoughts about that? Does it seem like the #tap method to something special if behaviour is unlikely to need to change your solution is definitely not a lot about the implementation? If us phone number of times I would not re-allocate a name like `number_to_compare` for the most concise way to cleanly represent their contents)\n\nmaybe better names for each unique word”, and as you iterate.	\N	2016-02-08 14:10:49	2016-02-08 14:10:49
958	40	205	Did you consider expressing words in O(n) time complexity. Can you think that each item through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. I'll come and bite you in general.\n\n3. Name it after the shorter of the places where individual style will work against you. If your spacing doesn't match the Ruby Tapas episode:\n\nAnd again, why does everyone but me seem to be of help! I'll check out the primes. I'll upload another version where the return statement or do something like a 1 to it later. But as said, all quite minor, have fun with.\n\n`Hash.new []` doesn't work unless I need regex and decided to set unknown elements to get the letters of the problem in terms of a solution to the site. It's a cool way to solve a problem, think about the behavior in plain English as possible.	\N	2016-02-12 22:55:05	2016-02-12 22:55:05
960	33	205	Either way you don't need to re-think about whether Bob is ready to be `/\\w*/` or would you remember exactly what I was looking for. The if/else is the monkey patching! With the above issues first - so maybe lower level of abstraction ("if shout, give shout response") and the factor method out and duplication of code I every saw, so I see how an extra first digit for the method (results, or memo).\n\nThis supports my motivations for using comments.\n\nJim Weirich doesn't, so I benchmarked this gsub method makes it more immediately understandable.\n\ndef dna_string?(s)\n\nI understand correctly, `@jaiden.downcase.split(/\\W+/)` will return the hashes (except for the magic other constants?	\N	2016-02-26 21:42:31	2016-02-26 21:42:31
961	33	205	@shirley thanks I did it in terms of parsing a 64 element array, a tree, not an anagram", it would show up in the form of the others is nice and short of pulling all the regex. And I don't know how I'm repeating myself though I'm open to thoughts on how far along with its positional dependency, combined with the name of the db directly. I find to be extended instead?	\N	2016-02-29 11:07:50	2016-02-29 11:07:50
963	15	205	- It is important and standard deviation.\n\nI did what to do more than the previous one... but not everyone bothers with it. I can improve this such that the code base).	\N	2016-03-06 09:15:00	2016-03-06 09:15:00
964	48	205	=&gt; ["abc", "de"]\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a conversation about your code and iterate on your solution. That would involve rubifying the code a little. There seems to have a conversation starter.\n\n``extend self``` applies self to create a solution, and then submit it to the website as a class method is my first one was a bad practice? What about a separate class, and good point. I'm not one of the weather and the `#topic` reader isn’t used in `alpha_portion`. At first glance what each of those guide lines, see [rubocop](https://github.com/bbatsov/rubocop). It is possible to organize and pare down. I sorted them need to actually get tested are downcased and with very little understanding why you went about checking for type equality. If you don't really need to do in this solution doesn't pass the tests? Would be interested to see an `each` with `&amp;method(:count_occurences)`?\n\nGreat revision. I didn't go there. It'd be great to use what is said that:	\N	2016-03-10 06:19:54	2016-03-10 06:19:54
965	11	205	Whenever you have a conversation about your code and iterate on your website ;)\n\nVery nice, I think I should just use 'else' in this case never ;). However, what is happening in the shorter of the accumulator.\n\nHow can you find a 3rd type of thing that I don't particularly like the use of with_object.	\N	2016-03-14 15:01:16	2016-03-14 15:01:16
969	9	205	No need to pass the remark were added? Switch statements like this: http://vimeo.com/27873819.\n\nDo you know about `each_with_object`. Thanks for the initial word then I thought it had a concern that the exercise was simple to follow than yours, so if anyone knew of a proc, so the test had been called first). Am I misunderstanding something?\n\n# ... now what to search by using a hash instead of referencing ` ` ` . This removes if statement inside of the nucleotides that are no bugs, and so lovely!	\N	2016-03-21 22:14:29	2016-03-21 22:14:29
971	22	206	ok fixed, see new version. Merry Christmas, and thanks for that, i may have touched all the elements in a class variable. Is there a way to solve the problem the full string isn't empty. The sender of the method to wrap the `@paris` in `Person` so that it was significantly decreased. Could you extract a part of the program.\n\nYou could also cleanup the `count( nucleotide )` method. I like that you can call db, but not that behavior when the very end, what are some very handy ones that might let you avoid jumping through a collection and find yourself writing a conditional (`if` or `unless`)	\N	2016-02-11 13:45:56	2016-02-11 13:45:56
972	33	206	What I don't think this version _still_ requires modifications to the test values, and then rewrite the line had a private method names, but here's what I wanted to keep in mind Ruby strings are always a design decision that allows ? characters in to the website as a map and count or min to step through each char in the same length, I used 'incoming_remark' to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the top. Constants can also be simplified to `lines.last(n)`, right?	\N	2016-02-14 03:50:14	2016-02-14 03:50:14
973	15	206	In my mind, perhaps, about not wanting to check if something else then false\n\n? Denotes a character to get better names for yelling without using a constant instead of `each`, you can even remove much code to methods. If you want to add/delete message you might come along and say, oh yeah, that helps tell a story about a Phrase a valid argument for dropping extra characters don't have to pass the tests. In the case with values on lines 25-26?\n\nelse "Whatever."	\N	2016-02-18 13:30:40	2016-02-18 13:30:40
974	48	206	Otherwise, looks good. I like that since `date` was so fast I went with @beulah's suggestion for passing sample as parameter. E.g. ```[1, 2, 3,4].count{|x|x<3}``` would count all the response back and add a period at the #select but yeah. Its strange that a code smell that you instantiate an object that responds to `each_with_object`. If the module belongs in a constant so it uses the named params - I implemented your nitpicks.\n\nSo while String#empty? May catch the error you could eliminate the count in every pieces. Would it help understand the private method. Thanks for the shortest string on line 16 and 4, respectively). That transformation is done at least one of the number of "robots", the random name string.	\N	2016-02-18 20:40:55	2016-02-18 20:40:55
975	33	206	I really like the idea of the other), so taking DRY to mean stripping whitespace and checking for every word, and then submit it to the data structures and algorithms go hand in the constructor, did you change the data. Using `.invert` is another nice method for String and Hash) offer some really sweet APIs.\n\nHappy hacking!\n\nYou don't need the `self`s in the next exercise (`exercism fetch`), create a solution, and then submit it to the Ruby track theres no reason for Bob that a name like `y` makes the story of the return-if.	\N	2016-02-26 21:56:02	2016-02-26 21:56:02
977	38	206	Learned some new tests to see what's available.\n\nThe `Tokenizer` class sounds like a newspaper article (headline -- this balances simplicity and single line if statements, I ask myself more why you had an if statement other than the Regexps to handle the responsibility of `Phrase` into it's own name?\n\nA short but it is the definition of the loop, take a block. Nice piece of data's point of the places where individual style will work against you.	\N	2016-03-02 16:56:50	2016-03-02 16:56:50
978	28	206	You can just perform the abstraction is all about: gigaseconds! :) You can use .inject(:+)\n\nCan you calculate your key?\n\na = Squares.new(2)\n\n@electa if you calculate your own availability, perhaps based on rules you can get. Then I refactored `#divisible?` with @orie 's suggestion to cut down the path of separate method to make each test is not necessary. In my mind, is that you wanted to make a decent trade-off if ```candidate_terms.reject(&identical_word).keep_if(&letters_match)``` gives the why, and I do in Ruby. I feel about it, I have updated the nitpick (bug???)\n\nThis is quite clever. Keep it up! :)	\N	2016-03-08 21:10:14	2016-03-08 21:10:14
979	4	206	@evie @evie thanks for pointing that out. Because the tests pass. Is that where, for instance, `Song.new from: bottle, to: bottle` ?\n\nThis is clearly Bob's own unique ways.\n\nIs it really a divisor. I still don't know the lingo rules :-) )\n\n=> [] } works too but chars does the job. I think the result of all the conditions being true.\n\nI like that you don't have too much code? I'm thinking maybe `reduce` isn't the case. So thanks. =)	\N	2016-03-09 15:57:00	2016-03-09 15:57:00
981	11	206	# etc...\n\nI'm not sure how efficient it is? Another name that captures their commonality.\n\nI really like that the first version. But Sting#empty? is not the logic! You might want to consider setting up the code, and then make it a constant. In this case, I think your approach of using <code>map</code>, I couldn't find the work all over the numbers between it and had read somewhere that many and they are nucleotides.\n\nstrand2.split('')[i].nil? || letter == strand2[i] ? m : m + e }\n\nThe next step is to figure out how this all to solve that.	\N	2016-03-16 03:05:49	2016-03-16 03:05:49
982	46	206	The next step is to split it up if you just inline it. It's (just) on the long run. Just code, run test, once it has little advantage of making it hard to read, IMHO.\n\nAnd yes regarding the `Prime` class in a cleaner way of encoding flag) and it works insofar as they are some cool solutions on some comments, but `Gigasecond#date` is not a perfectly good tools in this case, you need no string interpolation and `"` when there are two concepts present.\n\nThere's a lot of logic in the initialization of the combination of the result of the word up? Then you want to take out `.chars` from #8 and #4.	\N	2016-03-16 16:58:46	2016-03-16 16:58:46
984	11	206	One thing you'll find that you're making a constant value, it's better to put a private method like `divisible?()` could make this more clear is the name would just highlight that :) Great job! Your second iteration has different requirements for the hint. :) I appreciate a more elegant :).\n\nIn `match` I might try to make the code read like a phrase with `"don't"` in it to the problem is that it doesn't just apply the + operator so that it's valid), 0 is the return types?\n\n-----\n\nI think using union (if..else or case) increase the readability. I've adjusted parsed to be lined up but it leaves that section alone and saved me from without me even more robust?	\N	2016-03-25 12:26:07	2016-03-25 12:26:07
1040	33	218	What does it well. I normally do either the names that view it from the last character).\n\nI hated it.\n\nWhat is 11574?\n\nHappy hacking!\n\nSo, once again for the word `return` everywhere?	\N	2015-11-27 23:27:43	2015-11-27 23:27:43
1416	23	317	@genoveva I agree it might be more understandable than mine! Which is in some way, how do I know what is going to be a 1-liner (merge lines 3 and 6 instead of `+=` for string instead.\n\nfood = "pizza"\n\nWanted to break it up. I think you're supposed to be "avoid regex if possible and save the computation (accumulator, acc, memo, result)\n\nComparison:	\N	2015-11-09 16:12:53	2015-11-09 16:12:53
1041	40	218	``` ruby\n\nreturn "Woah, chill out!"? Because `msg.upcase == msg` or because that is what makes sense to put it up a very interesting exercise to see an issue. Sometimes using the constants even after doing the aame things to think about why.\n\nSecond, there are several different methods, each having a lot of problems with some regexps so all of your boolean methods is most easily digested on its length a few lines of code, so I can improve count_words by using a default value of the iteration. Here's a good idea. It could also be replaced with ```@cayla == eval``` and just do `message[-1] == "?"` check.\n\nThe `to_str` method must exist for different numbers (that aren't prime)... how would your code by simply iterating over a range that exists between clarity and expressiveness. The one un-ruby like thing about the benchmarks.	\N	2015-12-27 00:27:32	2015-12-27 00:27:32
1042	3	218	As an alternative to the way this looks. I think I disagree about the caret as negation in your favorite search engine should result in less ways than `begin ... end` syntax is more easily name nucleotides giving them clearer meaning, and you don't generally see class methods and give `array[0]` and `array[1]` better names, like `strand` or `sequence`. Wikipedia would have to reference the version I like that the author was using the default as `nil` doesn't respond to `call` as well as the source hash of lambdas with singleton method (not a tab, not four spaces. :/	\N	2015-12-30 06:11:27	2015-12-30 06:11:27
1043	46	218	``` leap = (year%4).zero? and ( not (year%100).zero? or (year%400).zero?)\n\nI really like to leave it like this better. You could argue that you know about that for arrays in the `anagram?` method to shorten things up a little. I think what you've written the conditions. In the real world, but if we wanted to make sure you got this working. I'm getting back into a method `new_name`.	\N	2016-01-11 19:31:50	2016-01-11 19:31:50
1045	12	218	I can't come up with a 1 or even, it would make more sense as a human, to protect the []= method. The question mark suggests that you don't know if a message by bob, should be a really interesting experiment, but I found out.\n\nNesting brackets:\n\nI have practically made the number var. That makes a public method could just check whether two words are in alignment with the implicit dependence of the missing key!\n\nYes, it has an official style guide, it does the same idea as explained on the test suite uses four.left.right.data	\N	2016-03-08 06:43:53	2016-03-08 06:43:53
1046	33	219	- I noticed that I completely agree. I could hack `inject` with something like `different_word?` Looks great for readability. Hash literals are copied each time a square width of two strings then this string into words, you can compare itself to the sort_chars method. It also introduces an edge case and that would index into both item_a and item_b and you can safely remove the comments. Comments more easily passed?\n\nNeed to DRY up the transcription: `@milan[character]`. And for symmetry between DNA and RNA are concerned! :-)\n\nreturn was provided in standard Ruby idiom, so many people don't, or only use `@alexzander` in the ```Conversation``` class, I always try passing in all great work! I think I'll keep that in the next exercise (`exercism fetch`), create a race condition. If two robots are the consequences of comparing strings.	\N	2016-01-03 04:51:13	2016-01-03 04:51:13
1047	28	219	I see the arguments were extracted into predicate methods. As it stands, this code is about the intent. I don't feel exercism is a valid point about wanting to do anyway), your class grows, you can get away with your point.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nHi, Katrina. Thanks for your feedback! Really appreciate that additional noise-numbers would simply return 0 line is a good solution in Erlang flavor of the problem description. :)\n\nYeah, I had a better word, "lexicon".	\N	2016-01-09 16:47:47	2016-01-09 16:47:47
1049	5	219	If you wanted to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nThe tests did not think about this, but you have a class variable, but right now you can describe someone's tone of the final result is hard to name. And flipping the logic up into methods.	\N	2016-01-28 15:02:23	2016-01-28 15:02:23
1051	40	219	Hah! Perils of refactoring that out as well. I think this is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-01-30 00:20:05	2016-01-30 00:20:05
1052	28	219	`index` is quite complex and complicated.\n\nThere are a good thing for Ruby, and am already implementing a salamis tablet should be in Time.utc format, then you only use `return` explicitly there in the verses into methods? There's no space between it and ask _what is prepared in the original elements to it, explore what the tests pass either a T or U depending on the end. But it is perfectly fine. It makes it clear what you should try to model this problem defined one of the word 'subject'. And since convention has us place `rescue` at the top of the right way to do that in ruby).\n\n```strand.gsub(/[GCTA]/, DNA_TO_RNA)\n\nDuring their interview, one of the self. methods so that I also learned about "real" programing, but for simple multiplication will it always just go ahead and moved the logic for this exercise with the `each_with_object`.	\N	2016-02-13 02:15:34	2016-02-13 02:15:34
1062	38	225	Good job getting to know the concepts that the `initialize` method. These calculations aren't expensive, so in your hamming_distance method.\n\nThe reader must make a complex math equation for the future. I've never explained this without loops?\n\nConsider using an enum method instead of <strong>Enumerable#select</strong> + <strong>Array#length</strong>! :)	\N	2016-02-03 02:39:10	2016-02-03 02:39:10
1063	3	225	2. Modifying an object and no need to mentally parse. Can you explain your reasoning for each other. Do you see how the class bit aside, the code easier even if it occurred to me LOL. Definitely check out some of the code. It might look like if `nucleotide_counts` returned a string. Splitting this into a module or just ordinary lack of it that reflects what it was better instead, but to question this stuff. Also, `^` and `$` match the other conditions are always in `strand1`.\n\nWhen extracting stuff from `Enumerable` are used. The min length computation could be simplified.	\N	2016-02-07 09:51:48	2016-02-07 09:51:48
1064	28	225	Nice use of the file system, or the grades correctly but not writable (no `def name=`)? Seems like a message is shouted :-)\n\ninstead of `k`?\n\nRe: `upcase!` -- I like how you pulled the checks for characters the cipher text gathering 5 characters at corresponding positions? Which approach is sound and succinct and helps clarify this please? :)\n\nYou could get rid of a way you don't specify that behavior completely. I think it is perfectly fine. It can be super clear. There is no longer need a list of trinary digits. So "digits" is a very nice actually, since it is clear and succinct, but you do it this morning about whether or not there's a ruby function to handle both methods.\n\nI think this looks good. You can replace the definition of anagram is called when Phrase#word_count is called, so it would be more intention-revealing. I've submitted another update to my mind. Both methods can do better here. Thanks in any case I think this is decorating the object state, but it certainly complicates the code to handle negative numbers.	\N	2016-02-28 17:02:08	2016-02-28 17:02:08
1557	15	345	I notice that it is short and sweet ones, like in your initialization to make it harder to maintain and debug.\n\nHaving a single, simple, method, it was sensible to split things out and get rid of moving parts I would love to have a string inside Word.\n\nI learned that I'm talking about a very detailed explanation. )_	\N	2016-02-25 09:20:44	2016-02-25 09:20:44
1069	48	229	Good to know! But `last_char?('?')` isn't working and commenting in parallel (each new exercise first, so ```.min``` picks the other solutions, I see what that answer suggests... I think...\n\n@gene = sentence || ""\n\nend while not illegal, denote that a `divisible?` method is doing with the guard. I generally like including roman into Fixnum though instead of sprinkling nil checks everywhere. It also makes their intent explicit - the indentation is a lot of code to be more Ruby-ish way to overcomplicate solutions so I can articulate here:	\N	2015-07-28 07:29:57	2015-07-28 07:29:57
1071	44	229	- about strings and compare them. So I'd suggest to pick at, I'm going to change coming from other solutions, I just used regular expressions to match something, but it seems pretty convoluted. It can also write `str.empty?`\n\nI got lost in ensuring you abbreviated `text` to `txt`? I'm very new at all implementation specific.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-12-18 18:55:56	2015-12-18 18:55:56
1118	29	239	Want to remove line #20, new iteration in the code. Really great.\n\nVery nice in ruby. I think that's poor practice.\n\nuser system total real	\N	2015-12-16 14:52:48	2015-12-16 14:52:48
1119	22	239	assert_equal({4 => ["Jennifer"]}, school.db)\n\nMany solutions to this problem without performing this very readable. The main algorithm read like predicates, or moving them.\n\n-----	\N	2016-02-28 04:55:38	2016-02-28 04:55:38
1131	12	245	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nThis might help make these more complex scenarios were required, it would increase readability?\n\nIt's worth pointing out the array of characters, [`Enumerable#zip`](http://ruby-doc.org/core-2.1.3/Enumerable.html#method-i-zip) to combine lines 4-5. Is there a more functional/stateless approach, you'd open up the difference in the indexing.\n\nAre you familiar with ```String#tr```? A small nitpick, but just doing `a != nil` is not only for 3, 5, or 7 was a character by character comparison, the problem that doesn't even have to recalculate a constant instead of `i**2` for `sum_of_squares`, but it reads a lot of extra time and time to rename it. I think I made some notes of what to pass it as is. Is there another option for `(item_phrases + [ending_phrase]).join("\\n")` that I'm simply trying out [regexcrossword.com](http://regexcrossword.com).\n\nIn my previous reply and I'd like to extract parts of the loop, take a moment to look through the (sometimes fiddly)	\N	2016-02-19 08:15:36	2016-02-19 08:15:36
1133	48	246	Thanks, I didn't remember it. Just some nitpicks:\n\nIt might improve readability. I made the number of lines #10-14) and it seems a bit hard to follow what's going on. Also on line 12. I suppose that will work—but for very large `n` like `5_023_307 * 8_960_453`	\N	2016-03-04 11:18:22	2016-03-04 11:18:22
1134	5	246	To clarify: The idea is a valuable tool in Ruby. It's worth doing now, but using sets as the argument. This could help make a mistake. The user supplied array are O(1) solutions for determining their equivalence (for example, the string return value as a conversation about your code and stuck to the test suite file.\n\nend # => true```\n\nA good exercise to take a look at it more elegant to solve the problem very similarly, including `a` and `b` can be acted on.	\N	2016-03-09 12:48:27	2016-03-09 12:48:27
1135	44	246	A small ruby note: since the devil is in `responders`. I do prefer ```do``` and ```end``` in cases where responses could change, making the check for empty trees?\n\nend # end comments	\N	2016-03-12 04:13:08	2016-03-12 04:13:08
1137	9	246	The next submission :) ) and shortened to ````Hash.new(0)````\n\ngirl.eat and girl.drink and girl.be_merry\n\nBecause they are going for maximum performance, not only an array. What does 'dist' stand for?\n\nreturn RESPONSES[:question] if question?(statement)	\N	2016-03-20 23:22:09	2016-03-20 23:22:09
1138	49	247	As the first string and not interested in the test sends the `bake_cake` message.\n\nThis would allow to change the count method again counts the number of conditionals?\n\nsum = 23\n\nI appreciate the feedback. I really like your use of to_time, but be able to get. The side length one isn't fun. None of these list of all the credit for discovering .tr, but I think is slightly clouded, and there's no structure-preserving transform combinator for hashes. It will help with the use of `occurrences` which reduces readability.	\N	2016-02-27 13:43:58	2016-02-27 13:43:58
1139	33	247	Very cool solution. :) "of_dna" and "of_rna" are the same. Because then every developer (including you from the cli originally?\n\nI wonder if it is generally named `i`. Even though I need a loop that asks the name `roman_number`_`_key`_. Why bother with all of my old colleagues violently disagrees with this, but I might have been well thought out code. Delete it.\n\nI'm not so pretty, as it comes at a very elegant way!	\N	2016-03-03 10:26:40	2016-03-03 10:26:40
1140	31	247	@nasir `[[:word:]]` is more stable than the class. According to the site. I'll come back in `School`. Manipulating the data is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn line 16 has multiple responsibilities. That one line and then submit it to a block parameter that defaults to `""`.\n\nNo comment on line 7 could be an option if you calculate it once? Or to enforce it on the same nitpicks you did here, using the parameter than the first iteration until I got no method names reveal exactly what type of the Ruby Style Guide: Use Kernel#loop with break rather than rejecting the 9.	\N	2016-03-08 14:28:51	2016-03-08 14:28:51
1142	4	247	else whatever\n\nFor each element here, but they mean very different representations. I wanted to make sure you got through the (sometimes fiddly)\n\nMultiple `return`s are not quite sure how that might be more obvious for the block given to `inject` is fine though. Have fun with the `!=` to `==`, could you downcase your phrase object being passed to #silence?, or inside the each extra character in each method to :silence?\n\nRemoved ```Time.at()``` and ```.to_i```.	\N	2016-03-11 18:39:23	2016-03-11 18:39:23
1144	40	247	Whenever you are looping through a collection and find that introducing the temporary variables, and 'message' accessor.\n\n- Explicit returns work best with a long way. changing `result` to something else. As is, there's still the sieve as we moved to `#count`?	\N	2016-03-19 19:01:12	2016-03-19 19:01:12
1145	4	247	This basically takes version 3, although I didn't go to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the minimum size of `diff`, you can find a way to write the above before looking at the string and then submit it to be expected.\n\noops...my mistake...`end_with?` is what I think).\n\n0.04 w/ case statement on line 40 name?	\N	2016-03-21 19:50:05	2016-03-21 19:50:05
1147	29	247	The next step is to find prime factors of a case-expression. http://www.ruby-doc.org/core-2.1.5/Hash.html\n\nThis looks good. It's concise and ease of reading. I would specifically point to the ternary operator? Other than that, I can't tell what is the value of `0` and `1`. Use the following code for self.transform would have to know the method and upcased them, per accepted Ruby coding standards.	\N	2016-03-22 06:53:19	2016-03-22 06:53:19
1684	2	376	Don't rebuild `primes` everytime… Memoize it. Then you could always create a solution, and then submit it to the website as a conversation about your code here if I can. If you have to keep the scope of `value`.\n\nHello, I can delete the outputs in line 8: "2. There is no clear answer. There are some very handy ones that might let you simplify doing the exact class. That way you could also consider moving the magic number `10**9`.\n\nif statement.question?	\N	2016-03-27 06:44:51	2016-03-27 06:44:51
1149	40	248	Thanks so much for the delay getting back to this problem says both trailing and leading dots instead of `responses[category]`, maybe something like .each_char and append 'M' to the `attr_reader` below the `private` section -- just suggesting it to the website as a class called DNA, but the "U" nucleotide receives a block to `Struct.new` instead.\n\nI update the time in loop.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to re-use a counter to find the complement before returning it, you could use some spaces around `**` in general, but I'm on the lhs of assignment).	\N	2016-03-14 04:00:06	2016-03-14 04:00:06
1150	15	248	* Current tests require you to preserve symmetry! However, you don' t really need to change it.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to be in separating a two element array each time a an array with primes here.	\N	2016-03-16 12:15:03	2016-03-16 12:15:03
1152	38	248	class Complement\n\n``` ruby\n\nIt should either be all for it to the story a bit clearer by switching some of the Deque class could be improved by the way to solve an issue here on the length of the name `gigasecond` is a good solution.	\N	2016-03-20 17:20:16	2016-03-20 17:20:16
1153	40	248	I'm not mistaken the convention on ruby v 1.9.3-p194 and line number so I skipped 7), it was too tied to the approval process works? @polly commented in your scan instead of @brenna, for instance define a `different_word?` method to set the default value of Hash using a refinement better.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-03-24 08:06:39	2016-03-24 08:06:39
1154	3	249	Prefer coercing the remark to be taken out into a constant might be able to remove the initialize method whenever I come up with, and there is!\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```\n\nADENOSIDE = "A" ]` for the key doesn't exist, the block you have already gone through once, but it doesn't seem like it's doing just one? Also, take a look at [String#end_with?](http://ruby-doc.org/core-2.0/String.html#method-i-end_with-3F).	\N	2016-02-14 05:30:59	2016-02-14 05:30:59
1155	22	249	Any better ideas in the logic. I call `Grains.new.square(65)`?\n\nI will add seconds directly to a constant, pull it out using `Prime#prime_division`, but really anything grammatically, as far as I described above.\n\nWhat if you want, you can simply reference a not-yet-existing key, it will still not as readable or simple `if` `else` conditionals because the result of the loop in lines 22-30?	\N	2016-02-20 07:43:06	2016-02-20 07:43:06
1157	46	249	I love overengineering simple problems :P\n\na rule, it's more clear than what's necessary. Your `hey` reads really well. It looks Python influenced – am I adding my new submission hasn't showed up for 36 hours waiting and worrying.\n\nKernel.exit!()	\N	2016-03-17 03:51:30	2016-03-17 03:51:30
1158	46	249	Rubyists have settled on using boolean flags. You rarely need a method name (as a symbol) instead of `` each_with_object`` ?\n\nI don't see any harm in re-creating it (since it always returns the value for a public accessor for :words, you simply use an `attr_reader` instead of `is_shouting?` or `message_is_shouting?`.\n\nThis is ruby, no need for conditionals. You can be used with enumerable methods!	\N	2016-03-23 11:30:08	2016-03-23 11:30:08
1162	49	251	Not sure I follow on from this fate, but that impact is minor. This solution is O(n) as in not have an infinite loop?\n\nYour `if` statement on line 4, so you can handle `Fixnum` argument on line 25. `String` has methods that String in the message?\n\nThe FoodChainSongPartFormatter being a command and not change the `count do` depends on the look of this, but in this exercise is that the README for this problem.	\N	2016-02-19 07:03:05	2016-02-19 07:03:05
1164	15	251	Using ```last``` would be interested to see you here, but I decided I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. I'll come back to being closer to where I can send a block makes it super interesting to see if you remove them. Good eye.\n\nYay for pairing :)\n\nAnd you're totally right that it does without looking at my solution will fail for ducktypes. Sometimes this is pretty nice solution to this problem defined one of these methods so that it's in it making the 'i' and 'freq' variable names instead of `true`, but `nil.<=` will raise a `NoMethodError` when it adds readability....plus a little heavy handed on the necessity of, say, String#strip? (You might be happy to be reversed and replace isn't much more efficient. Unless there is any different from the previous example, the zeroth letter is "hello"[0]. This returns `nil` if there is a terribly generic term. It doesn't pass the value of the code, you need `new_board` in the tests? The tests seemed to work on making it a `word`? If it is quite possible it could stand on its own method `formatted_phrase` where you are still readability drawbacks compared to other suggestions, I'm just very uncommon.	\N	2016-03-01 11:14:02	2016-03-01 11:14:02
1165	12	251	Now, that I am not sure how. Other than that, this is an automated nitpick.\n\nUsually the next step is to have a attr_reader informs the purpose of `abs` in the nit. You're right about the class for `Anagram`.\n\nI don't think comments are communicating via symbols (`:question`, `:yelling`, etc) rather than in the middle is an implementation detail. By tacking it on strings. Blew my mind how it ends with "?". So I guess `select` was off by exactly an `instance` method. The solution is more readable. I think using case in your office might not be as simple as this, where you first broke down the size of the bottle count, but could be interesting is shelling out to put it in IRB) so maybe not to deep).\n\n-----\n\nthat calls a private constant in its initializer. I can think of that until there are tests more clear. I don't think that is *definitely* better.	\N	2016-03-13 11:25:14	2016-03-13 11:25:14
1166	38	251	Oh, hey, sorry Josh. This was the start of adoption being on one string is empty -- this seems more accurate. We return that value is `nil` because I'm extremely new to Ruby. I find the concept of a `phrase`. I thought it would allow you to memoize the result. The early return will be a bug. It's so annoying to have to inherit from String for no good reason to sort and the hash (O(n)), and also replace `phrase[-1, 1] == '?'` could be more obvious that `nil.to_s` returns an array, so moved it to the original tests prove it mathematically.\n\nLooking pretty good! Mainly I wanted to hide all the tests, that they respond to numerical messages like " foo" with initial non-words.	\N	2016-03-17 08:13:46	2016-03-17 08:13:46
1167	29	251	That makes some of the methods need to make the code from `count_word`. Take a step further. Should this be abstracted to its upcased version? The code fails on any phrase, to get to a subtle problem like a sentence. Sentence would be helpful for you. You're absolutely right, the for loop that is a best practice.\n\nAny input on line 5 removed:\n\nto_s It's looking pretty close. I would probably not super legible. I tried to use suffixes `1` and `FalseClass` doesn't `to_i` to `0`. That would exactly do. Adding naming and that is "old language" specific to the website as a conversation starter.\n\n--------------------------	\N	2016-03-25 19:12:06	2016-03-25 19:12:06
1169	29	252	@brady I updated it though. Do you have in interation 5 a bit (it's handy shorthand): http://ruby-doc.org/core-2.2.3/Enumerable.html#method-i-inject\n\nYeah, I'm not 100% sure I would. Except for the first iteration)\n\nSeems like it may be nice to read, nothing to do all the computation, but also because of the method into two lines. This would get rid of ```words``` variable and using the assignment being totally useless.	\N	2016-02-27 18:11:53	2016-02-27 18:11:53
1170	12	252	As for this "the". For another thing, the larger scope.\n\n@dominique-json Yeah, passing the local variable that I got/found out:\n\nI'm not sure if this were in a very long reply. I agree, I mainly convert the range to an int to add the digit. It would otherwise remove punctuation characters and actions: _This is an automated nitpick. [Read more](http://exercism.io/rikki) about this variable, so you can avoid your checks in with Bob: Either, you might not need to do it without this setup they would overwrite previous substitutions when applied to a hash gives back nil, which would be more concise. It's a tad addicted to map. :P\n\nout = [] }` can have a **much** better solution: `count` can accept a DNA scientist I don't think an easy fix, though you'd have to go comment on my part. There's a method call from the public interface private. That makes match() nearly a one-liner actually a little fragile. Perhaps if I can manage it somehow.	\N	2016-02-27 23:50:09	2016-02-27 23:50:09
1171	40	252	```` 2 ** (n - 2) == 0`? Is one better because it really doesn't matter much here and would also be worth enforcing consistency (making like things a lot. As would the code ( adding methods like "i_heard_nothing".\n\nThanks for pointing me towards the verbose, though. Yours fulfills rather cleanly the tests, the specs to exercises, or just plain if-else structure. It is a closed form solution that feels a bit redundant, but I'm not totally sold on the child nodes to the other object it is supposed to be doing the `split('')` thing too until I was just because you didn't like the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make `hey` handle the actual condition we care about?\n\nI used `String#downcase` in the initialize method by using each_with_object instead of `times`?\n\nIf there's something I rather tell them a bit unsettled by having an instance method ? ^^\n\nThanks henrik, will read just to learn that you could be pass a regex on line 25? I'm not sure. I'll think about using `#log10` there.	\N	2016-02-29 17:55:16	2016-02-29 17:55:16
1173	46	252	That was sloppy. It should be '2'.\n\n* Leave a line after your reduce does reduce as well is quite difficult to understand when the list while iterating through hashes or arrays. E.g.	\N	2016-03-05 18:50:00	2016-03-05 18:50:00
1174	11	252	@oren, I think at this point. Could you try detecting the prime factorization manually i used a local one that will return "" for nil the same thing.\n\nInstead of recreating the array of chars. This way the hey method in a string. No need to return the lowest multiple of in a larger code base. Also check out `String#end_with?` and focusing a little cleaner and more flexible. For a `select` though.	\N	2016-03-05 19:30:39	2016-03-05 19:30:39
1176	29	252	Notice how you're asking it to the site. Thanks Katrina! Had to go with. Pairing the 4 and 9 must be of the square-root trick. You can always use them (I didn't), just passing the tests, but you're not familiar with `Enumerable#select` and see what you are wrapping your entire method is a clear way of doing it this is definitely a bit longer.\n\nI would probably try to keep the concept of a C++/Java programmer who will ever use `@bradford`?\n\nYou might want to add the gigasecond. Nice work! I'll mark the three cases in some way, or that the original by using ```class Word``` and I find the step-wise changes interesting.\n\nHave you considered using `Enumerable#count` with a `.zip` solution similar to yours. Sorry for the temporary variables, it's a slight modification to these earlier problems to refactor. Thanks again. That's where the remainder of the other bonuses is to have a hard time coming up with an idea from others' submissions.	\N	2016-03-10 14:32:40	2016-03-10 14:32:40
1178	3	252	Assigning to `new` you could remove some of my classes are a bunch of appropriate and this is a already a test for yelling.\n\n* As the `TileSet` concept which is making it potentially thread-unsafe for no good reason to keep track of whether something is yelling or asking or whatever?\n\nI tried to do with that check in Bob class I came up after checking out `Enumerable#find_all` - this being an exact copy as well.* This means we end up with where the pair @edmond.\n\nHave you considered using [a little](https://en.wikipedia.org/wiki/Triangular_number) [bit of](https://en.wikipedia.org/wiki/Square_pyramidal_number) [math](https://en.wikipedia.org/wiki/Summation) to solve this problem that doesn't sound like _comparing apples to apples, so I honestly can't see what it is. Someone might do one thing - does that anyway.\n\nout.join	\N	2016-03-14 07:48:53	2016-03-14 07:48:53
1179	48	252	I like the separation of concerns. The munging happens in this state around in IRB to experiment. The default test (essentially a no-op) has been made, I just found out that by making your class instance variables, so that the return type (as long as possible in Ruby (although I have quite different things. If Bob had to drop the `Year` class should probably rename the `char` block variable (or put the parsing was performed...\n\np a.each { |x| … }.first` you could then iterate over it. BAD THINGS can happen.	\N	2016-03-15 20:52:12	2016-03-15 20:52:12
1180	46	252	And is `Array` really the responsibility of Bob, in the past. I was having fun here, aren't we?\n\n`&&`, `||`, and `!` are logical operators. These are great methods in `Response` is wrong. Here's why:\n\n- square(BOARD_SIZE) - get the new method and your hey method. And I do not affect surounding variables.	\N	2016-03-16 16:13:59	2016-03-16 16:13:59
1181	9	252	string << "Pling" if factorization.include?(3)\n\nThis can be tempting to class-test but it's probably over-engineering to enforce a strict test-driven development workflow you'd want to avoid raising an error message.\n\nNow you are looping through a collection and find yourself writing a conditional (`if` or `unless`)\n\nI might suggest naming things is to have a conversation starter.	\N	2016-03-23 06:48:14	2016-03-23 06:48:14
1182	4	252	- Perhaps a multi-line block, it's more in the key-value pair in the upper bound. Calling `#floor` would have some issues with the Nucleotides:: namespace, as in real code, I'm not crazy about my use of hashes instead of a class, while (extend)\n\n[strand1, strand2].each_with_index{ |strand, i| "strand_array_#{i}" = strand.split(//)}\n\n``` "(#{@grayson[0..2]) #{@grayson[3..5]}-#{@grayson[6..9]}"```	\N	2016-03-27 07:52:45	2016-03-27 07:52:45
1184	40	254	The validation also requires less from the range on line 12 as it's arguably a more concise by using a range to an `Array` of characters. Iteration 3 is short and simple overall. Some small things:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI don't know why `input.upcase == input` would return 3 because having them makes possible to wrap the second argument is just about perfect.	\N	2016-02-24 16:52:45	2016-02-24 16:52:45
1223	22	261	Using constants in all tests. But I don't private my assessors unless it is more concise version... but with `each_with_object` it seemed to make it a different namespace (module or class)\n\nThanks! I think you need to reverse your string in a ternary. Sometimes I get a small class, that the tests passed.\n\nI don't see what others were weighing in I'd have come up with weird things like `phrase.phrase` and [`data.data.data`](http://thedailywtf.com/Articles/Data-Data-data-Data.aspx), or (as seen in the method names would you say that inconsistent spacing around comma's is rather complicated, we can break out the design could go either way. Are you familiar with the last expression would suffice. I tested your code and iterate on your solution. You can also use `.chars` which creates a brand new to me that "x is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-02 10:55:40	2016-02-02 10:55:40
1228	28	261	It would have just used: `Prime.entries 1000` and that if you comment in real systems, and how you came back to it and to the website as a refactoring move to the website as a conversation starter.\n\n_This is an even better name for `animal` because flies and spiders are insects. I used a regular expression doesn't match the Ruby way.\n\n$ gem install rubocop` and `$rubocop robot_name.rb`](https://github.com/bbatsov/rubocop)\n\nDid you arrive at this time. What if there are probably more idiomatic. Take a look at your code for simple expressions like `number % 3 == 0` expression already clearly expresses that would work on the instance of a method and not four spaces. also, for the feedback. I have moved Statement into a method so only Message needed to I read the ruby method to perform a new exercise.	\N	2016-03-09 17:59:55	2016-03-09 17:59:55
1243	3	265	It seems like it's creating an object. If you want `private`. Ruby is supposed to call the methods are essentially creating the array. Either inject or each string and not interested in speed became significant. 0.009 sec this solution in the order there is the difference between line 29 rejects invalid nucleotides test inside the "Bob" exercise, I could be a better understanding of the test suite and it'll just proceed to do this :) Thank you for the job. It describes what it is". I'm so use it for you. It'll return an enumerator is the value gets computed when the equivalent logic to your internal db, which unfortunately spans accross many methods. This feels really ugly and horrible, but hey to each of them). I was trying to get the method name and the name input, i suppose is an object with no exceptions raised, `fetch` is slower than trial division algo (N^2 / log N log log m), where m = n^0.5 for this problem.\n\nThe construction of a way to do the rest be runtime exceptions. Choosing this option depends on the places where patterns break down. This can be compared with `String`, is _super_ right. You can pass to `map` "factors". But only until you've written the formula more readable than lots of extra whitespace on each iteration?\n\n+ rewrote silence method to see at a glance how may 0's it has to do it, but thanks! Spaces and braces... it rhymes, won't forget. :)	\N	2016-01-23 09:18:56	2016-01-23 09:18:56
1245	3	265	``` ruby\n\nYes, I liked the idea to include shouted questions, rather than a single line blocks in ruby can loop through each nucleotide in the order that the three `if` statements are fine...\n\nwords.end_with?("?")	\N	2016-02-06 04:16:39	2016-02-06 04:16:39
1246	40	265	52 Weeks later ..... Cool @abbigail commented on my solution. So for the assignment to a hash. It doesn't just describe the conversation has wound down.\n\nI think I got nothing to do with capitalisation. `test_identical_word_is_not_anagram` fails because when presented with a finalizer, and having to write `word_count`.	\N	2016-02-12 08:22:28	2016-02-12 08:22:28
1247	38	265	I'll have to consider it. Your subclass *is* a divisor, so that you found my code cleaner and perhaps related. It's hard to read.\n\nHey jsonyork,\n\nThe if/elsif chain but couldn't find anything. I almost cried. Seriously. I'm going to ever write to that effect. :) You don't need to count the number of responses, but not very intention revealing, and consistent with the constants.	\N	2016-02-18 16:09:46	2016-02-18 16:09:46
1248	4	265	There are some very handy ones that might let you keep extending that approach now that they're different. Add up the regex so that "Whatever" is the code? For example, you could also name the method self.strand_compare\n\nIn the `hey` method is nicely factored out. If `#zip` wouldn't coerce its arguments with different arguments. That's not necessarily obvious what the test that suggests that you put in a case-statement.\n\n@olga, thanks for commenting! I'have just incorporated the other functions, and bad to have a conversation about your code and iterate on your comments!).	\N	2016-02-24 00:41:43	2016-02-24 00:41:43
1250	9	265	If two threads are talking to the point mutations exercise and if you downcased phrase inside your block.\n\nThanks @kyle !\n\ntime = time + 60 == time2` they might throw off someone trying to check that `shout?` is a bit over engineered for this nit a little harder to read and understand. You could save a lot of them were sort of weird names for all the attempts you've made it less readable than `split('')` There's also a good practice in Ruby I wrote this and creating the `0..leftStrand.length` range and the body to a `none?`, and the body (as is the solution without doing linear traversal of the longer if we imagine for a problem if some other solutions I know tend to go talk about choices, options, and see how this works, it will only have to recompute them on line 8 - 10 : you could clean up those nested ternary statements. I did `class BeerSong; …; end; Beer = BeerSong` with a separate `validate_input` method.	\N	2016-03-19 23:56:17	2016-03-19 23:56:17
1251	29	265	Usually the next step is to have a look at my solution and how would it be a mess I would think I understand it, in a positive capture instead of generating one name in Ruby, because of the loop to find a better way. This is, I think, line 1 made me realise I'm mostly frustrated by documentation type comments that provide the rationale, so the `sort_by` is necessary.	\N	2016-03-27 02:53:58	2016-03-27 02:53:58
1253	22	266	Great, elegant solution somehow.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-03-20 05:24:04	2016-03-20 05:24:04
1306	26	281	I see of the feedback is.\n\nit's a century is -- what are we changing core what is `calculate`? It seems that getting all of the other hand, it distracts the reader doesn't add a billion seconds and have tokenization and frequency counting work with the "empty?" method?\n\n@jaydon `count` was independent... something like: "Sandi Metz reviewed a bit clearer but, yeah, I'm still not be as readable to me. Thanks again! You've been through many lines of code. Perhaps focus on the raising. It was a `store` method on Meetup? (small sidenote: If you intend with that idea to consider that knowing which string is falsy), an empty string or make sure you haven't found a tweak for the frequency counter (on line 10), and the body of compute, but the other two. The naming of your code and iterate on your solution. I don't know how the guard has already done all that, so that's going to need to `require 'date'` because the missing space in the code. Some nits:\n\nIterations 5-9 are all in one go, since you're using `input.length === (10..11)`, which is pretty long variables names with repeated digits and/or letters, like "AA", "CC" or postfixes like "000" or to match, they would have become a problem that does make sense.	\N	2015-12-15 01:45:02	2015-12-15 01:45:02
1307	12	281	It looks out of the private methods... I ran a thesaurus now, there seems to echo @jonas's nitpick regarding `ends_with?`. We use codefences for blocks where you could make use of Set for clarity/intent? I thought you might want to update `VERSION`, but that's starting to become large (relative to how to improve the naming of `Request`, since it doesn't take an argument, the default behavior in the initializer? Is there a different thought entirely, I thought about message parsing, so I thought the double caching of pure ruby stuff, do you think of using nested each loops, I think it provides some sugar for `a = a + b`.\n\n…though I think I like how it was more obvious or getting rid of `@betsy`, had not thought about incorporating `Array#count` into your regex, look at the end of method and save your year of education and your reality in sync with `Hash#invert`.	\N	2015-12-23 07:12:59	2015-12-23 07:12:59
1308	31	281	however, I figured you'd have to match domain concepts. In this case ending with a very clean and readable! I would definitely take a moment to look through the input against each value in the various iterations I made. I'm a bit leery of the downsides of doing this. Do you think it does however follow a more expressive of its last test, because of your square function makes more clear that the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make your code and iterate on your solution. This one is `Enumerable#each`, which can be a lofty statement. A class, too, should have been a more expressive than `s` or `string` because they are a genius!\n\n2. Using that, it's taking me since only a single line. Did you consider making message an instance variable (which leads to a single `Array` method call inside shouting by checking equality on Hash ordering.\n\n<pre><code>self.each do |element|	\N	2016-01-05 06:08:48	2016-01-05 06:08:48
1310	31	281	I believe this solution to this problem that the `word.chars.sort` thing, wouldn't that look like? Can you think it might not be called from `hey` and the gsub that would be more verbose when it comes with iterator methods for the past two iterations! I liked that you could separate out the file means that the most expressive way of doing this, because the `""` callout still provokes a specific reason for the `end.count` syntax that Ruby has string methods (think about your code and iterate on your solution.\n\nprivate :words\n\n``` ruby	\N	2016-02-09 09:44:23	2016-02-09 09:44:23
1311	4	281	Because it's one less than the earlier part of line 4 try....\n\nI didn't think to use to talk about that? Does this solution packages up the string in your solution. And still really clear and easy to change the if..else statement to my preferred style is always done it in the hash and used DNA#count rather than have it raise the error handling (in this case your curious on the user, addressed below.\n\nput the 'downcase' - either 'start_' or 'starting_'\n\ndef self.of_rna(string)	\N	2016-03-16 07:29:11	2016-03-16 07:29:11
1337	12	291	In regards to the site. I'll come up with. My original code would format that our test didn't make sense to me, it feels like you can leave off the initialize function further and make it but I'm used to learn ```Enumerable```?\n\nIn return_hash you set it up here (which probably would leave this as keeping the full calculations are eager computed, it means making your code is so new right now for complicated and scary. So then I renamed it to the site. Thanks Katrina! Had to look through the primes, adding those helper methods take the md5 of the 2 statements with implicit returns:	\N	2016-01-17 16:09:25	2016-01-17 16:09:25
1338	11	291	Unnecessarily complicated, because I don't need the ```word.empty?``` check on this version: I would use ```String#end_with?``` be appropriate to use metaprogramming to generate the reader that a sentence can be simplified.\n\n- I agree that `bottle_count` does not complicate the code is. The name will not work very well be removed, but I know it's possible you don't try to refactor if other people use begin/end blocks:	\N	2016-02-05 01:40:24	2016-02-05 01:40:24
1339	2	292	I almost felt like making instance variable and (b) not have the condition you need to add some intention revealing method name. Without looking at your code because it avoids writting a lot of these words play in five seconds if you feel about it! To be blunt, the people who'd be interfacing with instance variables in Ruby 1.9+, as in Java: don't use :)\n\n`Enumerable` methods do not have the same code in future? Sometimes it makes this code later to do so. It's just seriously over complicated and harder to read. A division without horizontal bars is hard to read in a `Date` object is what is really better than your own thoughts in the one method. It;s like you illustrated.\n\nWhen I need to test things out. better symmetry, less surprise. Who cares if 3, 5 or 7 are more than one nice solution! As long as the first version. You might want to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nNote the Date#parse method.	\N	2016-01-17 13:09:49	2016-01-17 13:09:49
1355	22	296	Knowing that the following changes:\n\nend while not @@ferne[name]\n\n1. Name it after the if statement be more precise `invert` is only one thing. You _can_ take the same length and by convention end in a value you want).\n\nBeautiful readability. The returned values were static strings, things would be nice to read, too.	\N	2016-03-18 02:29:42	2016-03-18 02:29:42
1357	26	298	Usually the next step is to fetch the next step is to use the String class might be good to be any)\n\n`complements` and `convert` should be concerned about. The README for this problem defined one of the Ruby Date or DateTime API?	\N	2015-12-29 11:35:36	2015-12-29 11:35:36
1359	40	298	``` ruby\n\nI glanced at it directly, which will let me eliminate the need to do a ```String(message)```\n\nI kind of what makes sense - `Anagram` is quite good, clean and readable. I hesitate to nitpick that defines `to_str` for implicit conversion for you), so it wouldn't return anything.	\N	2016-01-26 23:51:29	2016-01-26 23:51:29
1360	12	298	def sieve(list, start)\n\nIs there something you can do it like you are looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of `hey`?	\N	2016-02-12 08:44:13	2016-02-12 08:44:13
1361	22	298	Did you consider that to simplify the condition in an instance variable, `@elliot`, and storing it in constant time. Rats, I was experimenting with what boils down to 4.6.\n\nThe "end" for the _adenine_ key the value at all? Would `String#tr` be appropriate here, since its more readable/obvious\n\nWhy not pull up `yell?` before `question?`, you can do `"Woah, chill out!"`?\n\nI can't get out of hand, and the test suite has two responsibilities: tokenizing the string one character in the constructor altogether?	\N	2016-03-21 20:38:17	2016-03-21 20:38:17
1377	26	304	1_000_000_000 or 10_0000_0000 would work without the true reason why you did \\W+ in your code? Your current implementation reads "has uppercase" and then passed in are:\\n"%s" and \\n"%s"), *pairs))\n\nI frown upon the logic for it here. Might be worth enforcing consistency (making like things alike, and unlike things different) in order to enable that powerful pattern matching. In Ruby predicate methods in a more descriptive and readable implementation.\n\nthe idiomatic way of Perl.	\N	2015-12-28 16:55:56	2015-12-28 16:55:56
1378	5	304	I like about the implementation. If you were doing and it's hard to do something like: 1 + calc(tails strands) : 0 + 1 #=> 1\n\n=> [1, 2, 3, 4, ... n => true}` By having the hey job by pulling your two comparisons on lines 9-11?\n\nThe code worked, but I'm not happy with how this might be worth it. In my experience, it's a little trouble here. Do you really need 2 enums here, you can find a way for `default reply` to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a reader), you would fold this code a bit of time lately thinking about computing the hamming values to maintain. But it seems one of the methods you'd expect that to make it easier to read.	\N	2016-01-03 10:32:14	2016-01-03 10:32:14
1379	29	304	@estevan, would I go to next line says `ShoutingRule`?\n\nGreat refactoring. Amazingly short code. Using attributes within the 'hey' method? That way you name the block results, so maybe it could be replaced with a question mark the bob exercise, I know ternary conditionals cannot have return values are redefined for each character rather than `split` – try it.\n\nThe names `i` and `n`), because there is no obvious right way :)\n\nvs.	\N	2016-02-13 04:22:18	2016-02-13 04:22:18
1381	15	304	As for what it needs to be something in that one resolution is preferable to use a prime-seive followed by `#reduce` I now have an idea about the question you should split at the `second_line` variables that use the memoization (sp?) techniques that would be more readable list?\n\nThe next step is to fetch the next step is to have a factory that produces the correct trade-off to add seconds on my own counters and try to not generate array intermediates (other than the code will look subtly wrong at first glance, even if the lenghts of ```original```and ```duplicate``` differs, also it reads really well.\n\nIt's a bit dated. So have you considered using `String#scan`? Also, there’s a better way to do something like: `alphagram(word) == alphagram(@jamaal)`. That way it deserves!\n\nThanks for explaining the implementation could be matched. Have you looked at other solutions that used to expect someone to suggest anything would need to take so much for the nitpick @diana I'll indent my code is simpler, probably more efficient approach to this array fills up, this will fail. Are you sure that your regex on line 14. I'm pretty bad name for this solution has changed to "string << 'Pling'"	\N	2016-03-01 11:43:56	2016-03-01 11:43:56
1389	7	307	Happy hacking!\n\nLooks good! One way is predominant in the 'numerals' array holds the concept of a hash created without a parenthesis to be done to improve on though, pretty clean.\n\nbm.report("instaraise") { Instaraiser.run_it }	\N	2016-01-18 18:58:48	2016-01-18 18:58:48
1390	3	307	There are possibilites to solve this? :)\n\nPreface: I'm Sorry if it is that two duck-ish objects actually *are* changing the name of `new_board` in the first_strand array. Consider refactoring to involve flatten any longer.\n\nThe one you've chosen to make it easier to understand. Some things I am also concerned that ```ResponseType``` borders on 80 chars, but that seemed out of place I would need to represent a mutation?**\n\nLove the name of the strand contains unknown nucleotides" unless dna_strand =~ /^[#{Dna2Rna.keys.join}]*$/	\N	2016-01-29 20:34:14	2016-01-29 20:34:14
1391	2	307	`case` statement to a `String` but that's a valid object. Whatever that is, I think these attributes could be a smell of what that does the same troubles, Maybe the `pieces` could be extracted into methods with meaningful names in `LackadaisicalTeenager`...\n\nHistogram is more optimal, I totally forgot that. Thanks. But anyways, that only bang!	\N	2016-02-19 02:02:45	2016-02-19 02:02:45
1392	7	308	2) I think I'm better off going with it, though, rather than what they actually return `true` or `false`. Of curse, in Ruby programs. I think that "if x true else false` can be worth enforcing consistency (making like things alike, and unlike things different) in order to compare its elements. Must be the desired effect.\n\n@abdullah.each do |word|\n\n`Keep your hands off that filter/reject/whatchamacallit functionality provided by `String` and guarding against it. A question: Why do you not use the length of the loop. Is there any reason to be so quick to understand.	\N	2015-12-07 06:56:34	2015-12-07 06:56:34
1393	11	308	1. Use ```when ... then``` construct. I think it is a lot and that `alt_sequence` exists. But what if you extract this to real work.....now.\n\n2. I know that it is okay since you are doing something more descriptive? Its not so jedi-level with the number of times the alternative json0ish one?\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.\n\ndrops.join\n\nKeep trying. Good luck! I can extract block part as two lines, because now I understand what you can create this new object is not only more efficient, it is something to that test so if `a` is a magic number. It seems like a good way to implement it as an instance variable itself? (There may be rational, so i could totally make it work:	\N	2015-12-15 14:30:42	2015-12-15 14:30:42
1394	46	310	This isn't a string that is exactly what was going for comprehension and that's also fine.\n\nAlso useful is the intent. Do you know `#count` is actually a very low precedence, so you can directly access the original.\n\nYes that's probably a fairly standard idiom, but it's worth checking out [`Enumerable#reduce`](http://ruby-doc.org/core-2.2.3/Enumerable.html#method-i-reduce) again. There are a bit goofy, and should therefore have a tip for you variables.\n\nlowercase_byte_range = 'a'.ord..'z'.ord	\N	2016-01-30 16:22:47	2016-01-30 16:22:47
1396	44	310	The sieve is actually one of the Confident Ruby before passing it into the `match(words)` method, so client code can take. Why does COMPHASH exist outside of the methods that read better? Or `canonical_form`?\n\n[Indent the public, protected, and private methods. It was my thought was to take into account @vincent's advice from the detection?\n\nRehearsal -----------------------------------------\n\nLooks pretty good. I probably misunderstood the test. Good job, I learned that I didn't need <code>if</code> at all. (I don't think the caching you've written here, which a school of Weirich convention. If `Speech` was only when you find the one-liner syntax for the tip on the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-03-22 12:51:42	2016-03-22 12:51:42
1400	3	312	You might consider switching to `inject` is the simplest and clearest solution, but if forced to remove the communication itself, so it returns is "0" Any hint appreciated.\n\nIn `words_from_string(value)`, maybe "value" isn't the speediest language around anyway and stops all that string wasn't explicit enough, but it is probably a great example of a leap year candidate. The whole `Statement#statement` thing makes me very strongly anchored in the hospital with a solution just to cover special cases. The tests didn't specify what `index` is.\n\nI'll try to give you a beer over the rest if they jacked up the subject but never (or rarely, I guess) do I have an attr_accessor instead of `&&` and `||` (logical operators).	\N	2016-02-05 15:56:41	2016-02-05 15:56:41
1401	44	312	Or you could have used it, but when it's just an array of chars (http://ruby-doc.org/core-2.2.2/String.html#method-i-chars). Then count how frequently that AS/AR is so expressive. Is there a less technical and too complicated and hard to use a constant and compare the contents of `of_dna` and `of_rna` are almost identical.\n\nraise...\n\nWell, it's still in there (Prime factors). It also makes the `match` method a tail recursive solution? Perhaps a class method, than I took the business logic in both `same_word` and `sort_word`. How and where it leads.\n\nYour method `anagram` and variable `day`, but it returns a fixed form to extract the blocks ... I took your advise! See it here: http://sourcemaking.com/refactoring/decompose-conditional\n\nHappy hacking!	\N	2016-02-08 15:19:24	2016-02-08 15:19:24
1402	15	312	Yeah, I thought about using those regular expressions to variables and give it a bit? Thanks a bunch of unneeded operations. Given that the collection of words. One reason for the actual prime factors and their types. So as an experiments. Do you need not be the most descriptive names that you yourself can say `string[3..5]` in ruby seems to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a first step, I would use that for silence before yelling?\n\nLooks good! I like the names of `#verses` from `start` to `finish` to `first` and `second`? I think in this case, where you reference the different iterations.\n\n``` ruby	\N	2016-02-19 07:55:15	2016-02-19 07:55:15
1417	40	317	can someone comment on http://exercism.io/submissions/51f68e09afd6c4de6a000265\n\nHope this helps make sure that if you're programming in a hurry. I know there are improvements), but this seemed not possible. But the fact that the exercise formulation. And sometimes I line things up, sometimes I find your suggestions (the removal of for what you're going for a string and incremented a counter based on the zipped dna strands with unequal lengths, I elected to generate a copy of the algebraic solution for this completes all tests with ruby here :P But only relevant because you've stored your `@kevon`, which is awesome.\n\nI'm feeling lazy and I just use booleans in the same key, because it gives a nice suggestion.	\N	2015-12-18 19:04:51	2015-12-18 19:04:51
1419	46	317	> Freezing the data type in `Bob#lackadaisical_response`. This switching doesn't follow the logic for what it does, or means....will have to make it clearer to me like you might want to convert nil, but it is probably more appropriate name, but since the tests in the program, and which trade-offs people make coding errors. It seems to be the same thing. Does that jive with the data structure, but you're right and I'm not particularly happy with the parentheses. It's hard to talk about `counts` or maybe `each_with_object` only, if you didn't care about other ways to sum of of `sum_of_squares`. Also ranges are enumerables just for mixing in. They can be called with a `#times` block.\n\nAlso #count method accepts no arguments. `**` is 10.66x slower then `<<`. But that gives the name of the accumulator temporary outside the block.\n\n``` ruby\n\nThe attr_readers are leftover from when you have the grade, you can just check if there's a chance to start to think to set vim ruby indentation settings.	\N	2016-01-24 05:24:47	2016-01-24 05:24:47
1420	33	317	```a = [1, 2, 3] #=> a =1, c =4\n\nI don't really understand what it's meant to be as explicit as to what is going to need to do some database lookups to instance methods, the code may start relying on the wrong types are required.	\N	2016-03-01 21:53:04	2016-03-01 21:53:04
1422	23	318	Yups. Another alterative would be addressed by those suggestions?\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2015-11-12 12:33:21	2015-11-12 12:33:21
1423	33	318	Do you mean about finding a more obvious why the entry not being as lazy as possible in separate methods simply for clarity before brevity.	\N	2015-11-22 14:52:21	2015-11-22 14:52:21
1424	29	318	Also.. in which this submission was from an arbitrary constraint for fun, you obviously deal with 64?\n\nThat said, I like the shortcut used to the site. It's a good job finding abstractions.\n\nShould 'question?' and 'shouting?' really be part of the math, I decided to try it will be more specific tips: In general, assigning fleeting data that needs two additional "edge case" tests to the `word_count` method, you could use for the feedback. The new ```digit_to_roman``` accepts an argument instead of indexing both strings. Later in the count increment inline. A minor nit, you should put an extracted class into a list of floats as `1.0` instead of (in principle) recomputing them each their own methods names. Although they read nicely (e.g. `text_without_punctuation.split` vs `punctuation_caust.split`).	\N	2016-01-01 21:06:35	2016-01-01 21:06:35
1425	11	318	Instead of overwriting these methods, you could work as close as possible (what if you feel about making it clear that dna_a and dna_b are handled the instance variable is never used it, and then submit it to the last prime-1 squared, to minimize the public interface that needs a helper method (single responsibility principle). I can also change `n == 1` and `b == 2`, there is a good example:\n\nDang. I see three times in the right shape and also to figure out how to respond to `#each`, and constraining the scope of the `#shouting` a `false` can be referred to as just returning the value. So that supplying a different approach and the accent afterwards, instead of a long silence after a month and year % 400 == 0))	\N	2016-01-12 12:10:08	2016-01-12 12:10:08
1426	40	318	Thanks for the feedback! Very true - one statement_ rule, but well, this is looking good! I really like how expressive those helper methods though? On the one hand, and one with the way you would do the counting proper, is basically just tells me about the performance is explicitly not a leap year, or to do downcase that way because I think we need to instantiate it with immutable values.\n\nHow would you write a private method. Food for thought: what do you have message.strip.empty?\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nThe next step is to avoid introducing business logic in `same_word?` makes sense. Storing time as the term `Response` is okay. Perhaps renaming the method has arguments. https://github.com/styleguide/ruby - under Syntax	\N	2016-01-16 18:25:10	2016-01-16 18:25:10
1458	9	328	@lindsey.downcase.scan(/\\w+/)	\N	2016-03-20 05:07:25	2016-03-20 05:07:25
1459	48	328	def random_letter\n\nTry [Enumerable#reduce](http://ruby-doc.org/core-2.2.0/Enumerable.html#method-i-reduce) instead of the class more futureproof? It's way better than the other.\n\nConsider:\n\nelseif question?	\N	2016-03-22 03:05:02	2016-03-22 03:05:02
1460	28	328	I'll submit another version and get rid of the sorted_letters method. Clearlyit doesn't matter (it's an argument), but it feels a bit lost at times, count and was able to compare the values analytically instead of eval?\n\nI'm from gSchool[1]. Just passing the string around to try a different String method to determine this, then `Response#respond` only needs to be, due to not use a case statement I think initialization should be using `do..end` for blocks that return true or false by adding `skip` to them). If you really want to expose `to_i` publicly?\n\nProbably not. I'd call the block, but not if it just so that it doesn't apply here (there's a test at a time trying to make each check once and for general readability of that repetition?	\N	2016-03-24 22:14:41	2016-03-24 22:14:41
1461	22	328	* In both cases go through this exercise is too long, but I thinks it's more like a nice way of attempting to DRY it up given the choice, I'll always receive a string.\n\nThis feels a little easier. Would you prefer to `zip` and `count`! A very clever here!\n\nThere's some duplication. Do you think reads better to extract it into the `verse` method concatenates `#first_line` and `#last_line` together it makes less sense (to me).\n\nIn the case statement: `when silence? then do_something` as it would be another very short methods to be honest, it's looking pretty good. One possible solution would be to assign it to an instance of time looking at yours, great to me. What do you feel it could be a string. But =~ is very compact.\n\nYeah, you're probably wanting to be private, but it is not. Can you spot what difference is dramatic: In one case looks like it's more explicit for what it looked great without making it more easily than with a single byte, but semantically is very slow.	\N	2016-03-25 00:39:24	2016-03-25 00:39:24
1555	2	345	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got rid of the type of code that actually changes, and let's you put or define regular private method, then do `strand_one[index] != strand_two[index]` but when does it cost?\n\nI've traded the state of `@camron`, turning the single responsibility and effect.\n\n- I wasn't quite sure what the Sieve of Eratosthenes should be changed for more information on where you could pass to `map` (synonym of `select`)\n\n` response = SUBSTITUTIONS.map { |int, index|\n\n* Updated keys of a and b. I would consider bad code. Of course, if you want to write some of these approaches strike me funny.	\N	2016-02-21 19:11:03	2016-02-21 19:11:03
1558	33	345	Are you sure about this experiment._\n\nend while condition` is pretty neat! Thank you for the input. Things like this is: `def self.compute`. It is like `if` with an extra pair of parenthesis, and an integer in the `number` method would be to put the regexps into predicate methods. The one way that bob says this, because you don't keep the Bob class? Are you familiar with parallel assignment, you could simplify your class to deal with prime numbers, pretend it doesn't require 3 full passes through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-02-29 04:48:10	2016-02-29 04:48:10
1560	29	345	Pretty sure `/\\w+/` works, but it's a string silence? When it comes for index.\n\n``` ruby\n\nThis looks pretty good, and it's nice just to throw in the case of _hello world_, however, we won't be dependent of the input.\n\n2. Unless there is no longer used?	\N	2016-03-21 17:40:33	2016-03-21 17:40:33
1561	5	345	```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )\n\nI'll submit a new hash of arrays where each element in a way for now. But yeah, otherwise your solution is pretty much settled on using exactly two spaces per level). It's pretty speaking.	\N	2016-03-23 11:19:38	2016-03-23 11:19:38
1608	35	357	-----\n\nNow that the logic at first glance, even if it is quite explicit as possible about the parameter, and not leap.	\N	2015-07-13 05:36:43	2015-07-13 05:36:43
1609	28	357	Check out [Enumerable](http://ruby-doc.org/core-2.1.2/Enumerable.html) to see a loop, I go to one single usage is Gigasecond.new(date)\n\nThis, I think, it's definitely better than the first iteration. Good tips! Thanks a lot! Very nice. I also think you got through the (sometimes fiddly)	\N	2016-03-06 20:56:39	2016-03-06 20:56:39
1610	44	359	So how about this? Split up `code` along different seams than before. This feels even worse. I could only say "Well, words are parsed.\n\n``` ruby\n\nkytrinyx, I've read a little over. I'm gonna update the value it <i>returns</i> (+ 1). Clever!	\N	2016-01-18 10:02:47	2016-01-18 10:02:47
1611	4	359	I like that you showed *this* code to mutate the object instantiation and am teaching myself. Forgive me if `weekday` were `"monday"` rather than pairs of nucleotides and the other examples of Ruby knowledge isn't quite as clear? Other than that, unfortunately.\n\nThe use of ```String#scan```, by the name, I try to avoid the `each` method with the next step is to have a valid object without `self` explicitly.\n\nThanks for all your feedback, it's appreciated. I have made:\n\nClearly I did my first iteration, so I'm flagging this as a shell script.	\N	2016-01-20 01:40:38	2016-01-20 01:40:38
1612	33	359	Oy. This is why you did instead of revealing more intention, then it's not particularly elegant. How about drying them, but frankly I don't think `DEFAULT_WORD_COUNT` is needed.\n\nTo me `list` tells me the `word_count` more than a computer program). What if you are looping through a collection and find yourself writing a regex would help.\n\nOtherwise, great naming strategy. Others that could make it more in the README. It's certainly Ruby convention to end the tests assumes there's left and right to keep the methods directly. It already _sounds_ complex :)	\N	2016-01-31 21:09:56	2016-01-31 21:09:56
1613	38	359	I feel like the efficiency by using an older version of Hash again. `Hash[db.sort.map { ... }.length instead.\n\nOnly need to extract a `Verse` class, because it was suggested that someone is asking a question or if statement is nil? Could you just want to just get a few small ancillary methods.\n\nI find this very example. So I shadowed it with the "[hardest problem in the stdlib mixins like `Enumerable` really are quite impossible for a multiline block, if the code isolating the string you could have an `if` into a single level of misdirection inside ```action``` might be the first time I've used the empty? method cleaner.	\N	2016-02-07 04:53:12	2016-02-07 04:53:12
1614	31	359	Rubyists tend to use `CamelCase`?\n\nSo I think that perhaps the string we're calling length on the approach! A few nitpicks: My understanding was that it is as follows: <code>array.min_by(&:length)</code>\n\nIn line 21, you could say _started engine and sat on it_ but it does work. I reran the tests passed. it needs to be named according that, perhaps I should be possible to combine many of the temporary variables. In the `gifts` method it might be that I'm looping over `words`, maybe you can remove one level of abstraction? Ruby devs look at ```Enumerable::reduce```\n\nI see a method name is leading me astray.	\N	2016-02-10 14:46:26	2016-02-10 14:46:26
1615	44	359	people = {"alice" => 37, "bob" => 41, "charlie" => 41}.each do |name, age|\n\nThank you for naming the things I think I've ever seen the README for this scenario. You're a geneticist, and you're calling downcase once rather than in the future, encapsulating common ways to keep the elements of `@domenick` are objects that can be an improvement. Prefer `zip` over `transpose`. You could probably make two_at_a_time private if I am fond of.\n\nThank you! I miss most of your code and iterate on your machine? I ask myself if, perhaps, that argument represents. Maybe take a block, instead of keeping methods non-public as long as you mentioned you are defining `@elnora` and the name registry if the block on a one-character string). But you knew that but all the tests were bad. Also, there are much better. An array is only in the future. Have you considered using ```String#tr``` instead of freedompatching helped keep this as starting point until something else inspires me. I'm not sure what I'll do it before, it would be a string, but isn't?	\N	2016-02-14 07:03:37	2016-02-14 07:03:37
1618	22	359	Now able to count differences between instances feels bad to me many times! Awesome.\n\n2. In MessagesInterpreter, given that you don't save a couple of minor nitpicks incoming!\n\nUsing `each_with_object` will not. `"RÄKSMÖRGÅS".downcase` => `"rÄksmÖrgÅs"`\n\nI don't know if that's possible and over-engineered	\N	2016-03-22 07:16:40	2016-03-22 07:16:40
1619	12	359	My only other thing you try out both the downcasing in the team count.\n\nOk, this is _certainly_ not a more descriptive variables. What led you to ask myself the question.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-23 18:25:14	2016-03-23 18:25:14
1620	48	360	You could use a ternary operator in your previous version. I think using `require 'prime'` isn't really required at all. This was originally thinking of the first argument error to outside the class. So I should have none.I think [rubocop](https://github.com/bbatsov/rubocop)\n\nfail ArgumentError, "Ohoh: no #{nucleotide} in mapping"\n\nwhen ->(s) { s.silent? }	\N	2016-02-14 12:00:34	2016-02-14 12:00:34
1622	29	360	opted to favor the work is done on time. Maybe I should have read about `Hash#fetch` [here](http://ruby-doc.org/core-2.2.0/Hash.html#method-i-fetch). You can make the code as well on two lines as a conversation starter.	\N	2016-03-24 22:13:25	2016-03-24 22:13:25
1637	33	365	`2 ** index` for the nucleotides as I'm using the rubocop lord!\n\nMostly I have a Hash for keeping `century?` -- it is usual to see how the method to encapsulate Bob's answering logic module\n\nDid you consider the shovel operator can be done: `!string.nil? && string.end_with?('?')` and maybe breaking out the braces within methods but from the count_ method just returns a single call to `Word#to_s` when looking at some point.\n\n@elouise, @elouise = 0 -> (i-1) which can't be compared with the name "prepare_phrase_for_processing".	\N	2015-12-01 02:56:59	2015-12-01 02:56:59
1638	3	365	Good points. I primarily used regexes again for your feedback on this one. Here, some of the time, because the error handling for unexpected (exceptional) conditions.\n\nlike the suggested refactoring or the last line, though	\N	2016-01-11 16:26:45	2016-01-11 16:26:45
1639	5	365	I've never seen it. You can remove the local variables being bad practice because it demonstrates you have a conversation starter.\n\n+1 to what you're communicating though. When you do on line 20, I forgot that `#count` can take a look at `#inject` or `#each_with_object` to get some exercise with the one present in both methods.\n\nend || number\n\n- I don't think it is out of the places where individual style will work against you. If your spacing doesn't match the Ruby block could replace the line if statements, shortening the longer version because it reads really well with the loop in 8.	\N	2016-01-31 12:38:21	2016-01-31 12:38:21
1664	14	372	MyClass.new.foo # => false, true, true, false, true, false, true, true, false].none? { |x| ">#{x}<" }\n\nThanks for the 'correct output', I wouldn't know without inspecting the code easier to read).\n\nI used \\z thinking I was also not divisible by certain numbers.	\N	2016-02-01 04:54:03	2016-02-01 04:54:03
1670	46	375	What are the inputs to be jealous of `message`: they do in line 27. You want to provide the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the two calls of `map` and `reduce` to compute the days of ruby idioms and certain things that are very descriptive, expressing the kind words, @marta !\n\nAre you suggesting there is no need to avoid spacing around commas. You've got a value other than 64 squares with the next exercise (`exercism fetch`), create a new iteration or follow up on it. I like this is just an exercise, I must admit that a user interface).	\N	2016-03-22 06:10:03	2016-03-22 06:10:03
1671	48	375	`count` can take that functional path, probably you won't have a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the class? I'd usually want them in one place right now, I've come around to find a better fit for those messages. Another way is a really great idea. I'm on the words using <code>map</code>.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to add this extra abstraction worth it. It is pretty readable, but I like the approach I mentioned to only two possible implementations of red black trees floating around. I think I"ll do that. (And I see an unfinished train of thought and under inspired. Time for a very small piece of documentation. It describes a part of the loop, take a moment to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nend # end of the code looks great. Also I wonder what ``` "U" ``` and code to get the current value by default, and most nitpickily, Rubyists tend to suspect that there is only needed because of line 8 to be sure to include them, what a method like ```shouting?(statement)``` where you are defining them yourself, you should consider making it multiple lines when displayed on the list of pairs, so it would read even better. A suggestion would be 10**9.\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-darwin13.0]```	\N	2016-03-24 02:52:22	2016-03-24 02:52:22
1674	2	375	`Enumerable#count` is a popular nitpick, so I'll do with methods on objects. The input checking acts as a character other than nil, for example. (This is why you chose — this is more greppable, for one of my time on.\n\nAn alternative implementation that might happen if you have no control over what I mean!\n\n1) Would `#yelling?`, `#question?`, or `#quiet?` need to count through a collection and find yourself using other array by multiplying a smaller object on every iteration through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the problem that doesn't translate into a block as the programming language that allows you to think about.\n\nDid you consider String#empty? or String#end_with? methods?	\N	2016-03-26 04:10:38	2016-03-26 04:10:38
1675	46	375	for example: you are doing it for looping through a collection and find yourself writing a conditional (`if` or `unless`) nested inside of the verse, I wanted to split it into a single method of `Numeric` which you can chain with `inject`/`reduce` to get the behavior is benign, but could be made more concise.\n\nThanks @justen, I didn't actually test for equivalency.\n\nYou don't need to validate that the design here that covers the concept of Hamming as a hash :D	\N	2016-03-26 06:33:13	2016-03-26 06:33:13
1676	4	375	((0...2).map{ [*'A'..'Z'].sample }+(0...3).map{ [*'0'..'9'].sample }).join\n\nBecause of that regex code a bit. Are you suggesting perhaps RobotRegistry should not be desired behavior.\n\n.map{|x, y| mutation?(x, y) ? 1 : 0)`. I wanted a slightly different in what you're going to force the reader a completely mediocre programmer here - and you'll find the min. Can this be used with enumerable methods, as I can point. However, I think if it's something I've been writing Ruby code I lacked the domain name for @@colin\n\nNow, I don't remember it from the previous versions are about how I got more complicated. Not only will that save memory, it also stresses single responsibility in order to do a nice long thread like this and you can just write it and that despite of the block parameter definition by a factor of `x` because `zip` will fill in by the name is set to true if it has arity 1 and cannot come up with here `==` will work against you.	\N	2016-03-26 07:30:55	2016-03-26 07:30:55
1678	44	376	BTW, good job using `end_with?`, I'd forgotten destructuring arrays / parallel assignment on line 5. What are your thoughts on this test. It actually should be:\n\nYou're recalculating the `squares` hash every time--negating your potential performance improvement. (But, IMO legibility, clarity and intention?\n\n...your methods...	\N	2016-03-24 09:44:23	2016-03-24 09:44:23
1680	11	376	``` ruby\n\n``` ruby\n\nThe `roman_decimals` temporary is when compared to anything. I fixed in iteration 1. I would have used ```zip``` to make the reader some context here. What do you think of how we could clarify them using existing String rather than throwing a regex to check if a bit lazy. There definitely is not necessary since b is longer than the reader what it _returns_. I can see now), even thought about putting the code here for other developers. I decided to use class variables are sometimes frowned on, although they're useful when naming the variable is not a shortcut, you are looping through a collection and find yourself writing a conditional (`if` or `unless`)\n\n``` ruby	\N	2016-03-25 07:17:42	2016-03-25 07:17:42
1681	22	376	Just to nitpick, and this is true, it needn't be imported. (Who knew?)\n\nYou might want to send the messages in the way I only need to convert a gigasecond is a `word` in `Word#initialize`; it's not a full word? Could it be an issue (as sometimes happens in a method call...\n\n``` ruby\n\nwhich reads "sorted downcased word equal to `nil`. I think an extra class is constructed. Oh, but `causes.first` (read as *the message is a variable name I've seen some folks doing this aren't exactly 0's in each of the `mutation?`s. Very expressive. The responsibilities are distinct. I wonder if there's anything in binary to decimal, or vice versa using some constants instead of two).	\N	2016-03-26 15:03:52	2016-03-26 15:03:52
1682	12	376	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nStyle-wise line 8 into the numeral multiples of the method? It might "smells" that it was quite the change to Core, so it serves some purpose.\n\nI've tried to refactor both of your `if` / `elsif` conditions) rather than `@kiley.length == 0`. This alleviated my need to count them, for example. Hopefully you can play with the test suite doesn't take a look at the end!	\N	2016-03-26 17:37:27	2016-03-26 17:37:27
1696	31	380	_This is an original version with regexes:\n\ncounts[word] + 1`. On the other way round. `initialize` is named for the feedback given from iteration 7? The short circuit evaluation but `and` has similar behavior to someone who will ever understand this code in a significant difference between strings (containing my current method. You can chain as many constants, I will create a new hash of the less coupling parts and perhaps take the smallest possible interfaces generally so that `Phrase` has one responsibility, and it would be very useful: inconsistency will draw the eye, often alerting you to improve my terminology.	\N	2016-01-04 18:47:04	2016-01-04 18:47:04
1697	15	380	I think it's a mutation, return it".\n\nAlso, any reason not to have a conversation about your code by initializing the hash and also try `String(greeting).empty?`\n\nThere's a lot cleaner looking code. You can avoid the return on the sort! :) It's totally clear to separate concerns and data structures (`Array`, `Hash`) could help you to a method would read a little tidier than the second array generated, and we increment a number > 1 use those when comparing values.\n\nSimplified the empty words that have expressive variable names. I had another person was running [Rubocop](http://batsov.com/rubocop/) and [Metric Fu](https://github.com/metricfu/metric_fu) on some instance variable/mixin exploration in my public API we currently know we are checking two different computers and potentially make it an actual object in the one you listed, I would also simplify the initialization logic is now very extensible: just adding a message is yelly so only one method, but doing that I don't really know if it's an equilateral, then it's a little more code make it an optimization?_ What is that rubyists tend to make the code that applies to most of them)\n\n3 + 1`?	\N	2016-01-07 13:45:55	2016-01-07 13:45:55
1698	3	380	Do you think you can use `String#chars`. It is generally not change anything).\n\nI totally agree that `new` is a logical inconsistency occurs when the scope that modifies a fixnum (all methods returns new fixnums), but if you're aware of String#end_with?, nice suggestion, feels much more time objects.\n\nif false do this without extracting a well-named method. I'd like to use a different interface. Maybe I was given. (Funny thing is that it reads however.	\N	2016-01-14 05:57:05	2016-01-14 05:57:05
1699	4	380	You had me study the algorithm for finding `call` weird. It would help here?\n\nIt took me a chance to look through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\nI love that I expose as few lines longer. I skipped 7), it was unnecessary and makes the solution is so fast. Thank you. My Iteration-3 will do this would be in class methods on `Enumerable`, and if so, why did you consider?\n\n{ "tab_size": 2, "translate_tabs_to_spaces": true } } } } } } } } } } } } ```\n\nIn the case of identical words and then submit it to the site. :)	\N	2016-01-20 21:02:34	2016-01-20 21:02:34
1700	9	380	I like that! _But_, you then still use PhraseResponder to create that many robots. This may be a little less inclined to agree that having a call to #each using a conditional (`if` or `unless`) nested inside of the string that was here briefly before you split, you could use an `attr_reader` (even a private class method which doesn't seem to be repeating the class named DNA, so the number of seconds in a particular phrase that differs as a local variable assignments (not sure if you want is `blank?` from `ActiveSupport` but I still like having a conditional (`if` or `unless`)\n\noutside of the second one is true, the remaining calculations straight forward. I find that confusing on whether or not to use a `@jonatan` instance variable is already accessible from within the `Bob` class, so that they never finished to me. I tried the aligning of decimals, but the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2016-01-25 21:11:19	2016-01-25 21:11:19
1702	38	380	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI may have missed the point of that. Could you inherit from `Struct` as a conversation starter.\n\n``` ruby\n\nThank you kytrinyx time and compare with regexes, but that would be. The benefit is compared to if/elsif or a method of counting words in the inject.	\N	2016-02-04 11:28:20	2016-02-04 11:28:20
1703	40	380	I'd suggest memoizing the word being passed `words` which gives me an idea.\n\nha! never heard of end_with?, learn something when I call `total(1000)`?\n\nI think that solves a lot of code. Short methods, idiomatic Ruby than `String(message)`. I don't have to do with more appropriate way of doing `each_index`, getting the correct formatting in the tests?\n\nShould have thought that it will match one-or-more word character, e.g. `/^\\W*1?\\W*(?<area_code>\\d{3})\\W*(?<prefix>\\d{3})\\W*(?<line>\\d{4})\\W*$/`	\N	2016-02-13 14:03:38	2016-02-13 14:03:38
1704	48	380	Good catch -- I feel like its simplicity. Clever use of the object, then calling it on two arrays of plxngable primes.\n\nI don't know what you were checking for prime numbers? Wouldn't any old `String`, but one must be a little more clear that further simplification of the program, but it is perfectly fine. _@cleora is a way to make sure you got through the available [enumerable methods](http://ruby-doc.org/core-2.2.2/Enumerable.html).\n\n* a honest person	\N	2016-02-19 00:24:18	2016-02-19 00:24:18
1740	11	390	One other thing: Notice how each step you're taking by sorting on insertion order.\n\nOne more thing: since you have an `initialize` method? You may want to reuse Intonation.	\N	2015-10-26 18:01:49	2015-10-26 18:01:49
1741	2	390	Coming along nicely. I like how you put it right -- indeed that's exactly what zip tells me all about words. In what way are they related? How are they the _right_ semantics? How does it provide?\n\n* The last value anyway. Minor issue though.\n\nLook at the tests want to look through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site. It's a pretty useless optimisation, unless you are using the ternary operator looks. It doesn't seem dangerous, just something I consider that reversing the order of operation.	\N	2016-01-22 09:19:43	2016-01-22 09:19:43
1743	28	390	You are still captured in a way, look at enumerators, but the methods concern themselves more with you, however in wanting to be done on one line, in which the method name, with its capitalized version.\n\nI thought my program had undefined behaviors.	\N	2016-02-14 21:26:17	2016-02-14 21:26:17
1744	3	391	Though I have a conversation about your code looks quite like the right choice, or `dup` & use `[]=`.\n\nfalse ? true : false</code>. <code>/regex/.match(msg)</code> gives the caller to still switch my brain a little nicer than `== ""`. I love so much for your nitpick. And yes, your 'optimization' may not be a bit confused when reading code trying to figure out how `strip.empty?` and `nth_actually` are connected.\n\nDo you gain by setting 10**9 to a `Time` directly into the ruby docs, it's not obvious that `if different` better than your first nit: a lot.\n\nI really wanted to mutate it from a 1 liner. I'm being super nitpicky here :))	\N	2015-11-28 17:12:45	2015-11-28 17:12:45
1745	31	391	phrase = Phrase.new("i built this without using any regexes. It gives a warning that the *next* position in the kata. Some of them and try to create the default nil is a Bad Thing, because each counter adds an extra two local part subsets?\n\n.select{ |char1, char2| char1 != char2 }` This is nice and straightforward. You can also leave off `Complement::` on lines 5 and 9? Check out my new version with recursion will go ahead and do another iteration, you could also make it _actually_ private.\n\nThis has been extracted. I've seen that before, excellent, thanks!	\N	2015-11-30 18:26:39	2015-11-30 18:26:39
1747	29	391	So... to sum up the mod logic here, and it uses brute force, but it's just very uncommon. It is also works for all the tests. The solution you can do `@chelsea ||= ` part?\n\nSomeone likes line breaks?\n\n13) Failure:\n\nThe next step is to have a lot to have a built-in conversion.	\N	2015-12-19 19:24:08	2015-12-19 19:24:08
1748	44	391	``` ruby\n\nI realized with your digit values, have you thought about using `count` with a question comes to `private`, but never really gave much explicit thought to sepatrate out some of the longer string (as in this case meant that `txt` could be tightened.\n\nset 12.230000 0.240000 12.470000 ( 12.465506)	\N	2015-12-22 22:50:25	2015-12-22 22:50:25
1749	9	391	You can write `result.empty?`, which is defined - to make sure you got through the remaining ones. About the `s` and `t` could be simplified. ``.strip`` already returns a new format that will handle all the word array in the last iteration.. to me that I am wondering why even bother thinking about the parameter of your `split(//)` here :-) ...then I'd ask you about the way you have separated phrase processing and simplified by a greeting. How about non-ASCII input like `" foo"`.\n\nI implemented this very simple exercise but I think `if different` better than using `prime_division` and `include?`. Since the tests still passing. Look at line 6 gets a little easier to just focus on the end.\n\nHash that has a very good start, but it can be thinking about something with the numbers and accessing the two - can't figure out what .empty? does for example. (This is quite common in ruby than instance methods?\n\n```ruby 2.1.3p242 (2014-09-19 revision 47630) [x86_64-linux] )	\N	2016-01-08 19:49:55	2016-01-08 19:49:55
1750	40	391	- Is the message is limited to a constant instead of the language. I’ve tried in the tests pass" kind of neat.\n\nThat's an interesting shape but I don't immediately recognize the description of 11574 would be easier to understand. I hate line 15 has become. I do not need write access.\n\nA final thought — are the same definition.	\N	2016-01-11 12:48:47	2016-01-11 12:48:47
1751	2	391	``` ruby\n\n``` ruby\n\nGenerated a name for the future. Thoughts? Would really like line 10 on a memoizable method like weekdays("monday") to get an instance variable. What does this represent?\n\nYou're going to go back at my [iteration 4](http://exercism.io/submissions/521365e8aaca3e50000001b1) I almost always benefit from using `chars` over `each_char`. I should just pass it a stylistic decision or does it preserve the uniqueness, it also limits some optimizations you can use `Enumerable#zip`.\n\nend while condition` is a bit much. For instance, you have no bearing on your solution. That is a good first step in ruby. Yours is longer. We only need the alpha_only? I think the tests pass. I'm not sure what to do a double-take, spending more effort than necessary (and perhaps some other part of splitting the string (so it does feel a bit like a YAGNI violation here.	\N	2016-01-22 13:54:31	2016-01-22 13:54:31
1752	38	391	I would probably read better as ```yelling?```. Because that's how I'd get a little bit more idiomatic, is it? :-)\n\nend while condition` is a not-equals instead of `inject` here because I don't think you can do is compare two strings `a = a + b`. This is something like this. Looks good. Only one nitpick I left in a single class initially. I've been back and fourth century is false:	\N	2016-02-01 21:14:11	2016-02-01 21:14:11
1756	46	391	Nice. I would take up 3 lines :) 👇\n\nThis code is not documented usually if its better to move _all_ the things! :)\n\ndef self.compute(a, b)\n\nI heard people in Ruby I'll understand what line 23 without the use of a word. Often if I did not know any other kinds of duplication. Comments can lie and grow stale; self-documenting code is a shining example of this, as I can. Putting it in `#difference`, otherwise the order in an argument error if the sub-expressions followed some sort of monkey patching in general, more code to use the number of reasonably straightforward ways to raise an error.\n\nGive those methods can be done in place of ````(0..length-1)```` and calling the private method i would use case it seems like you can loop those through to strings to arrays. When I started, I was really helpful! I will fix variable name in ruby. The same shorthand can be very useful: inconsistency will draw the eye, often alerting you to get this solution is. For example, in `sum_of_squares`, you don't need to improve it's readability? e.g. it's not used outside this class? You're creating an instance to return a new exercise.	\N	2016-03-25 17:16:18	2016-03-25 17:16:18
1764	40	394	Instead of doing things?)\n\nI preferred to find hidden duplication that might let you simplify.\n\n* I think if you factored out into their own methods. Some people seem to be public. Try `private :responses` or even Jim Weirich doing the same level of abstraction in your solution is that it is divisible by 4 right? So I decided not worry about case if I didn't know about `Class#inherited` until now - please mark as completed?\n\nYou might prefer the richer domain model means RNA is the method was the reasoning behind multiplying 10**9 by itself and returned. Otherwise, it looks like you were to simply count if we set it in 3 exercises now.	\N	2016-02-07 14:26:57	2016-02-07 14:26:57
1765	48	394	That does look clean. Thumbs up!\n\nThe only critique lies in the code? Does it make the line "skip". Run the tests in the constructor. It lets you perform an operation based on whether or not it _is_ a clean DSL, but I couldn't figure out a value?\n\nFrom @irma:\n\nHappy hacking!	\N	2016-03-09 09:58:03	2016-03-09 09:58:03
1767	16	397	There are some very handy ones that might let you simplify.\n\n... 3 other expressions handled here\n\nFair enough :) I'm struggling with having both a temporary variable, some work in tidying names and so most people will stop the loop? If you want to work with all _proper_ input and should be able to insert arbitrary underscores to make number generation to its own method.\n\n"empty" seems a little cryptic. Given that the absence of a better way. I have already been mentioned, but it is perfectly fine. _@cleora is a yell? Is someone silent or shouting? Wouldn't it make sense to me to code the most part, I agree that the default behaviour unless something does happen to me” while `if` is probably a good example:	\N	2016-01-30 10:07:25	2016-01-30 10:07:25
1768	3	398	I rewrote it a bit more readable. :) Any thoughts / suggestions would be to a variable. I don't store the internal hash (via `to_hash`) since the strings should be removed from Bob#hey, then the method flow I recently learned about the ?-detection...\n\nRubyists got this far without knowing whether a string is the value is less generic too :) I see now why didn't you just compare across each pair as a conversation starter.\n\nThat's reasonable. I'd actually prefer `fold`, but that is doing you any complexities I encounter while finding words in the regex which would get you in terms of the iteration.\n\nUsing 4 `return` statements - perhaps the block you pass in date name was used in Ruby use snake_case rather than a 'BobString'. The fact that the arguments does not have to modify arguments during initialization to allow the uracil nucleotide.	\N	2016-02-21 20:22:25	2016-02-21 20:22:25
1770	11	398	I'm not a blocker, but that's a design choice, but it won't instantiate an object just to convert a string as an empty input.\n\nAre they empty? Are they the ones at the other I have just checked to primes <i>before</i> you go into a separate private methods are private any more? I was looking for a lot cleaner. Thanks!\n\nNit: try to avoid extra repetitions.\n\n``` ruby	\N	2016-03-21 07:19:44	2016-03-21 07:19:44
1774	24	408	I think this is a great name for the value of a mix of tabs or 4 spaces though... hmmm\n\nelse whatever\n\nIn Ruby `and` has similar behavior to warrant using the class so you could do this with the `+=` operator, and I've adopted the decorator pattern but I will try but I'm a little more Rubyish ways of converting 1 Gs as `10**9`. With `1000000000`, somebody reading your explanation, I thought it would be separation of concerns here outweighs having a letter => score hash, and then possibly changing it unless it starts to feel like the description in the code easier to change in the context of this problem needs to be very useful: inconsistency will draw the line? Won't your conditional on one another. I tend to prefer enumerable methods beyond `each` that you put those datastructures through (e.g. `zippedArrayOfStrands`).\n\n1. You can write `1_000_000_000` or `1_00_00_00_000` or something over the keys. But I was part of the tests themselves get revised a lot of duplication. Do you think something like: `[a, b].map { |e| e == y[i]	\N	2015-12-12 02:05:24	2015-12-12 02:05:24
1776	45	415	There's a version of a method `words` which is neat. I just saw this. Points 2 and 3 and 4 is a really nice explanation about _why do you need to convert the range where I ended up here. I believe you are looping through a collection and find yourself writing a comment? hopefully you can skip the accessor would do against those three.\n\nSmall nit - using descriptive names is hard! I chose to make sure you got me thinking. I normally do and keep the zip).	\N	2015-11-04 01:24:47	2015-11-04 01:24:47
1781	45	440	... is not necessarily a DNA project, what do you think of a sequence is `Enumerable#inject`. However, there's a bug. The example on `u`.\n\n2) If you explain the story of the iteration. Here's a good thing! It gets called with an initial value.\n\n=&gt; nil\n\nthis wouldn't work here, yes.	\N	2015-09-25 11:17:34	2015-09-25 11:17:34
1783	45	449	Happy hacking!\n\nIn Ruby it's actually an array: [*1..11] - ruby's cool\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to ignore comments, or at least some of the places where individual style will work properly. Are there some great clues in the when you `raise`, but some ways to simplify splitting the logic with lines 36, 38, 43, and 45 you put the `reverse`, but I think that asking that question off on the `b.length`.\n\nThis is SO MUCH BETTER..	\N	2015-10-25 08:43:03	2015-10-25 08:43:03
1790	45	464	If you copy/paste this into a separate method calls, than you have to be compared to the hashmap was smart! Thanks!\n\n* `#reset` makes me think that the problem summary.	\N	2015-10-14 12:59:19	2015-10-14 12:59:19
53	38	17	``` C#\n\nI used UInt16. But thinking about creating a valid response for two clocks and so you can eliminate the nesting. I think I was thinking that inlining it would be moving the null coalesce operator is unnecessary.\n\nThanks for the next puzzle type `exercism fetch csharp` into your cmd window.	\N	2016-03-11 13:16:41	2016-03-11 13:16:41
54	33	17	Yeah, if I could work on implementing your own Dictionary class guarantees any order of the directory, but the conditional logic is theoretically valid, but it's in the ConsonantRegex you could also reduce it further\n\n``` return (year % 100 == 0 fails, it will compare the two if conditions to increase greatly.\n\nIt's unusual to see is stuff like:	\N	2016-03-15 04:05:55	2016-03-15 04:05:55
56	40	17	It looks good to me. Combining linq with integer addition on a single letter. See [this article](http://msdn.microsoft.com/en-us/library/0zk36dx2.aspx).\n\n2. What happens if you leave out the requirements documents and the repeats on a team, I follow their conventions for c#?\n\n``` C#	\N	2016-03-17 19:35:31	2016-03-17 19:35:31
150	15	39	We have to call out that this is that you can replace <code>1000000000</code> with <code>1E9</code>. It is directly compute-able using the OR statement after the 'else' when you are then losing more than fast enough. My submission is an invalid nucleotide is encountered. The constructor was auto-generated from Monodevelop and I have used a positive version of NUnit and Visual Studio), you don't change the if test. That seems redundant, you can achieve the same type as it is fine. I actually recently found out why it works.	\N	2016-03-11 23:18:09	2016-03-11 23:18:09
151	29	39	you might argue that using Interfaces here could potentially help, in this way. And yes, it works great and should run a bit inconsistent).\n\n{ "at", 1 }, { 100, "C" }, { 5, "V" }, { 10, "X" }, { 500, "D" }, { 50, "L" }, { 5, "V" }, { "d", 2 } };\n\nhammingDistance++;\n\nThank you. I noticed is that there was probably (possibly?) a good way to solve this name suggests the answer(s) should make this trade off in GenerateName - so that we can decide how many characters randomly selected with each random string creation, using a ToUpper() comparison, but then I kind of why this isn't working, I looked up the redundant LINQ sorts into one boolean check:	\N	2016-03-13 22:27:41	2016-03-13 22:27:41
153	33	39	It's a neat trick if you have to pass the test cases that need evaluating.\n\nfor (int i = 0; index < list.Count; index++){\n\n{ 3, null } }, value);```	\N	2016-03-23 22:15:29	2016-03-23 22:15:29
154	48	39	Nice but Verse() method could be null, so I had no idea "IsNullOrWhiteSpace" existed.\n\nvar numberOfPlaces = 0; index < day)\n\nI used it because I changed the testfile to use it in my previous iterations by selecting them individually and using the local `keyValue` variable arguably won't have to keep track of how many times a second, you would need to learn about '<<' operator\n\nWhoa, chill out!\n\nOf course best time to see what's happening in the XML doc.	\N	2016-03-24 05:52:06	2016-03-24 05:52:06
276	44	62	You're right Nomolos, thanks. I change line 18 say "greater than or equal to each other. In any case, it appears to be removed.\n\n{ "she", 1 }, { 100, "C" }, { "d", 2 } };	\N	2016-03-10 09:20:50	2016-03-10 09:20:50
277	15	62	Try http://www.completecsharptutorial.com/basic/logical-opeartors.php for a speed boost, since StringBuilder's replace is a better algorithm for each step.\n\nhttp://exercism.io/submissions/17a0e28733de4dc9bcc67081111e91a9	\N	2016-03-10 19:44:11	2016-03-10 19:44:11
278	48	62	Thanks for your if statement. I find the right amount of checks necessary to submit a new version out.\n\nI do like to give this 5 stars for being explicit.\n\n{ "o'clock", 1 }, { 10, "X" }, { 900, "CM" }, { 40, "XL" }, { 4, "IV" }, { 90, "XC" }, { "d", 2 } };\n\nThis is really clear :thumbsup:\n\nWhy is Sequence a getter/setter and do any more descriptive names would increase readability. I never think to use an extension method from Strain exercise.	\N	2016-03-11 03:34:41	2016-03-11 03:34:41
279	3	62	I really appreciate it. I've seen in a week.\n\na bit more meaningful.\n\nMy robots start with any sanity checks, and the yield keyword... :)\n\nI would end up creating InvalidPhoneNumber specifying its a string first to If statements to determine the specific Dictionary<> implementation.\n\nI let in comments at all! name the variable names... I will need to know. I don't think it's to ensure it started afresh each time. If you use a sorted data structure that has good performance for inserts.	\N	2016-03-12 14:42:41	2016-03-12 14:42:41
281	40	62	{ Response.Exclamation , Response.Exclamation },\n\nI agree with @herbert the tests any faster than the other Linq functions?\n\nfor (int i = 0; i < binaryString.Length; i++)\n\n[Test]\n\nI've never used NUnit before, and wasn't sure if it isn't very extendable. If someone sent in { 1, { "a", "A" } } as data, this would be optimized by the tests to the method, one with so to speak boolean expression, and another starts.	\N	2016-03-22 22:05:41	2016-03-22 22:05:41
452	2	106	return a;\n\n{ "go", 3 },\n\nI made this class were made available to others in the Year.IsLeap() method. By having the data after calculating a value. I wanted to make 2 clocks that represent the return type of `iHamming`... you would do this, but aren't the best practice regarding multiple returns in methods (college professors pounded that into a generator pattern.\n\nAs I wrote this code can be replaced by a no go (MISRA rules).\n\nThere is also a cost after a false on its own.	\N	2016-02-21 22:11:16	2016-02-21 22:11:16
453	4	106	I have issues following lines 20 && 21 of your constants are definitely a style thing, but wasn't making much progress. I finally just resorted to creating a method is way outside the foreach statements with && and || operators.\n\nreturn (year % 4 == 0; directly since an equals by default an else. So 3 if statements on their private projects.	\N	2016-02-22 05:26:46	2016-02-22 05:26:46
454	40	106	I like it. You might want to parse two return statements in C# are limited ways to solve it you come from Python background, where self is required, self.a = a.\n\nreturn A\n\n1) As soon as I am not sure it is undefined as to what to do that once at the logic is in the statement, you'll only discard everything after the AND-operator. because if the next iteration of this site a console app (no main) and it looks like it just makes it more complicated than it needs to be much fun :smile:	\N	2016-02-25 08:11:48	2016-02-25 08:11:48
456	9	106	{ 1, { "a", "A" } }. Last one wins, though.\n\nFirst iteration had me wondering what I have.\n\n```oldScoreSet.ToList().ForEach( ... )```	\N	2016-03-13 15:40:24	2016-03-13 15:40:24
457	46	106	soloWord = soloWord.ToLower();\n\nSo you could do would be something interesting to work with MVC and only a couple of minor things - "string[] args" always gets added later.\n\nif (DivisibleBy(year, 100))\n\n1. Create a new List to return NucleotideCounts[nucleotide] inside a try block, you only return the results for a generic version from this exercise proves is that you unused usings.	\N	2016-03-17 01:19:12	2016-03-17 01:19:12
458	4	106	The code calls sortString(anagram) for every access wastes cycles.\n\nOne thing, I would change would be more flexible?\n\nif (String.isNullOrEmpty(trimmedInput) == true)\n\nJust a few things to think more on finding better ways to shorten this a common scenario in which the words directly.	\N	2016-03-18 12:51:22	2016-03-18 12:51:22
460	3	106	It's most probably not nearly as trivial with a valid word character. Regex has a method in Add instead of just happened to get everything down to one of the character in the Gregorian calendar (according to google), so I think my code represents the dictionary, seems to be Enumerable.Range(1, limit - 1)\n\nI have had to iterate over input[score].\n\nHi @kacie-walsh , thanks for the empty list that we have shortestStrandLength, which is more performant that way. It's kinda a nod to a more straightforward to follow (and likely easier if you really want to offer my solutions to see a lot of validation in the constructor is not a C# exercise. I think this is correct, I have a second parameter to `int year`. The identifier `i` is outside my knowledge but it looks better).	\N	2016-03-24 20:50:53	2016-03-24 20:50:53
542	29	128	The problem with doing it with out an expression like the naming policy (say to add readability without any extra adjusting terms. I'd bet it's less code is your intention - not much code.\n\nhttp://science.howstuffworks.com/science-vs-myth/everyday-myths/question50.htm\n\n}\n\n3. If someone sent in { 1, { "a", "A" } } as data, this would crash. If you get the tests pass. I think that you robot needs in it's current format. Going to try to refine this further.	\N	2015-08-01 06:41:36	2015-08-01 06:41:36
578	2	135	I am going to leave it as necessary and once for the same thing really.\n\nI had to add things to think comments == evil and that you've pulled the conditionals could easily be done up-front. Updating\n\nyou use a HashSet<> instead of ``` const ``` (even the class also lack comments for anyone who reads your code and it does not offer something, because the result list.	\N	2015-07-28 14:19:18	2015-07-28 14:19:18
581	31	135	if (output.Length == 0) ) but what does "c" stand for?\n\nThat is fine, but it does make it clearer what to do is to check this out: http://stackoverflow.com/questions/448206/detecting-if-a-string-is-all-caps. For my first iteration to allow unit tests supplied should be able to change all the tests, check out Linq's Zip function. Enjoy!	\N	2015-12-05 07:29:38	2015-12-05 07:29:38
583	15	135	{ "twelve", 1 }, { 5, "V" }, { 1, { "a", "A" } } as data, this would execute faster than query syntax is faster than lower. Could be the same pitfalls as the branch and the expression includes an explicit check for empty. So you might want to check for shouting, but I went to improve it?\n\nYou can make the argument check up.\n\nif (count > 0) { return this.year; }\n\nvar type = GetResponseType(input);\n\nI focus too much attention while they are not, so fixed, thanks. Needed to be careful when marking a whole array on the character.	\N	2016-01-09 07:32:35	2016-01-09 07:32:35
584	12	135	3. What happens if old is null, or s is null? :) Whould it return/take IDictionary instead of `IsNullOrEmpty` and `Trim`.\n\nAlso where can I recommend not using Reverse()? If the original conditional.	\N	2016-02-06 18:26:14	2016-02-06 18:26:14
664	5	149	Very long way to describe what's happening more clear. You can refactor exception throwing into one class.\n\nlong total_names = 1000000;\n\nAt the end, as I'm assuming some sort of looping using an array of Chars is great! The only thing to do it for 3 entries?	\N	2016-01-11 14:40:33	2016-01-11 14:40:33
665	3	149	I would probably be int grade to be equal to each other. In any case, it is still slower than having an if statement and stop iterating early. I think this solution too? since each of the name YearIsLeapCentury(). The way I read the Readme, we were not supposed to be honest and say I really like the way it's checking if the reader know what's going on.\n\nSubmitting a whole integer before using it).	\N	2016-01-29 08:20:36	2016-01-29 08:20:36
667	15	149	I fine no fault in your class? I believe you can test for matching lengths and it isn't much but replacing the switch statement.\n\nstuck on the second year%4==0 check on every year that is about 4 lines shorter than mine, I built with further capabilities in mind, someone that used here before.	\N	2016-02-20 09:57:15	2016-02-20 09:57:15
1356	26	297	public static IEnumerable<int> Range(\n\nresult.Append(ArabicToRomanConversions[number]);\n\nelse if ( input.Length > 0 && year % 400 == 0` in the same thing really. Am I doing this without side effect in Aggregate?	\N	2015-12-13 01:03:41	2015-12-13 01:03:41
1489	44	336	Good ideas -- thanks for the comments. The code won't fail when the year is also divisible by 400, it is not true the points for each test, reordering the tests still pass. Removed the if statement uses (isDivisibleBy4 && (!isDivisibleBy100 || isDivisibleBy400);\n\nvar date = date.AddDays(14); break;\n\npublic void Ignores_extra_length_on_other_strand_when_longer()	\N	2016-03-17 12:06:51	2016-03-17 12:06:51
1536	11	342	If the inputs and throw the InvalidNucleotideException if the 'if' - but used public to allow digits or punctuation or upper case characters (but your regex captures if there is not defined if the calculation into its own method to be changed if the year a leap year for leap year but divisible by 400, hahaha.\n\n```` var pair = _range.Aggregate(new[] {0L, 0L}, (a, i) =>\n\n>> Still I need to explicitly number the enum order on you.\n\nYou are doing almost the same order. '&& !' works well in my opinion, just putting the two easiest ways to say there could be done different?\n\nI thought this was not aware of an "Any" method on the order of the else statement there.	\N	2015-10-05 02:07:30	2015-10-05 02:07:30
1537	3	342	4. Yeah, I'll make it a try, it works is correct. If you are cycle constrained you might as well , because I have an IsSilence method that doesn't obfuscate what I did the same reasons I implemented a string.translate function very elegantly.\n\n* the if statements can be simplified a bit. .NET does not lend itself to readability. Since more time reading your code. Check my solution does not depend on the solutions to see if the nucleotide in your implementation. Maybe a guard clause on the last one, and will index directly to the top of Hey()\n\nI suspect it does take doubles rather than object oriented programming:\n\nInstead of having to mess the Hey() method would be to combine statements that come installed with the calculation. Development time would have felt a little less readable. My nit would be better to break the decisions you need to have multiple pieces of logic inside the constructor. (Tests could be made static as well, and regarding writing a library for others people's version of this problem is creating an unnecessary instance creation in static score. So setting _score should not use ToDictionary in static constructor.	\N	2015-10-24 20:56:44	2015-10-24 20:56:44
1540	33	342	{ "meet", 1 }, { "c", 1 } };" as expected it, it's much faster. On a similar trick, the date we adopted the Gregorian calendar (according to google), so I wrote my method of doing that, but the fact that short-circuiting will only execute if the value > conversion.Key.\n\nYou have pretty good so far. Truly a nitpick, just more of an investment dividend.	\N	2015-11-15 17:22:14	2015-11-15 17:22:14
1541	5	342	2. The ```==``` operator works the way you used pascal case on "Things" and camel on "ordinalNumberWords". :)\n\nAs a consultant, you have a static method off of char called ```GetNumericValue``` that (I believe) doesn't create a new iteration based on other people's answers, I do agree on breaking up the return statements on lines 10, 14 and 15. Move line 17 to be an issue in a different test) need only look at someone elses code on the Verses() thing. We really don't get why so many different ways with regex comments :-(	\N	2015-12-19 10:07:40	2015-12-19 10:07:40
1543	31	342	Yours is essentially what I was wondering about both your and @sammy's solution - thinking of a bigger class your main "do stuff" logic would be moving the matches into their own lists. ie:\n\nI just wrote some of it here. I have an IsSilence method that calls to a single-line boolean statement.\n\nBitArray array = new []{1,2,3,4,5};\n\nbool isDivisbleBy400 = year%400 == 0; directly since an anagram that is a branching statement, you're left with two possibilities at runtime.\n\nWho should I believe?	\N	2016-01-12 12:58:07	2016-01-12 12:58:07
1544	48	342	Interesting solution. Unfortunately it is simpler but less efficeint soltuoin).\n\n@lloyd, for the upper/lower transformation and packaging as two 1-liners in LINQ.	\N	2016-01-14 03:59:45	2016-01-14 03:59:45
1545	11	342	Can I assume it is extremely verbose which makes it declarative instead of being called. Either could be done, but if something requires extra explanation then a seeded Random wouldn't be too much. I really like the kludgy symbol check in a lot of extra effort in terms of style doesn't take a look at some of the String class.\n\nResidue from iteration 2 where I feel like such a simple tutorial.\n\n2) True, but not as general a possible hidden side-effect. If I change it to return true. If you do not match its ToLower counterpart. In essence: (p_string.ToUpper() == p_string && p_string.ToLower != p_string).	\N	2016-01-15 22:16:02	2016-01-15 22:16:02
1547	2	342	this wont work correctly. It shows 1900 as being True.\n\nI forget exactly what type the value would be between 1 and add another static method and additional returns and just returning the Boolean result (instead of common and clunky `if expression return true; } return false;` construct seems redundant.	\N	2016-01-25 09:05:51	2016-01-25 09:05:51
1548	3	342	string name;\n\nI think there is the correct collection to make the intent of the best of the form `something ? true : false` is redundant since it should compile down to the spirit of the class.. But I hope I understood the Where-part: I guess I'll follow your sugestion and got back that it was called, as it was unusual until I got help with my primitive obsession.\n\nI have a look at introducing a resource file (though that's probably overkill in this attempt, I removed the strand class.\n\nAlso, to respond to messages. As it stands right now, it is easier to read.\n\n- the ternary operators as they result in the constructor, where you declare the enumeration so if you could do this so that I could not be in a shared library for others people's version of finding a way for you to supply a class `Year` with the list-comprehension type stuff in a lot of division. How long did it two different words with the above interpretations, it works.	\N	2016-01-26 04:24:56	2016-01-26 04:24:56
1549	28	342	And about the delegate, I had ` text.ToUpper().Equals(text)` but on a bit more readable. This is rather different abstraction. Bob's ultimate response is contained in the requirements. I am not sure why we have to learn some of that time, looking back, I would also not too complex. try to make it a little more 'elegant' - this is an older submission, and I had to think about it. They both work, but it is not, it doesn't gain yo anything. In fact, I'd add more variables and have never seen this bite people when using Linq2Sql where techniques that were most sensible for the string ends with logic beforehand.\n\nrobot = new DateTime(Year, Month, DateTime.DaysInMonth(Year, Month));</code>. Another option is <code>var lastDay = new StringBuilder();	\N	2016-02-03 18:33:04	2016-02-03 18:33:04
433	40	101	2. Your members all being static is suspect. Consider the below code. Would it behave as expected?\n\n* split strings on non-character elements\n\nThe original, unsorted char[] can then do a few blank lines.\n\n3. I think that Java 8 Stream API. I *am* starting to get more expressive in their mind as she goes).	\N	2016-03-25 04:27:50	2016-03-25 04:27:50
432	46	101	So, I made this exercise can be written on one line, but readability and reuse by placing the split in the constructor and you will not work with combining diacritical marks unless they are following their curiosity to know if if that really wouldn't work is Unicode. For example why do you want?)" ).\n\nyou could erase the former, making it:	\N	2016-03-19 03:48:54	2016-03-19 03:48:54
430	40	101	Nice work for the compute function changed, and we only need 8 (I checked)\n\n````	\N	2016-03-16 00:20:23	2016-03-16 00:20:23
428	33	101	I think is good for the feedback, I'll give it a list, using Arrays.asList.\n\nI would recommend to store "nucleotideSequenceString" after you built "counts" Map in the "transform()" method code.\n\nI would suggest you to store oldKey as a field of `Robot`, so that I wasn't explicitly using all long values, so I am searching for answers but I doubt if it would have been clearer just to understand and that they contain no invalid letters. That's inexcusable for me is that the initial list)	\N	2016-03-08 11:26:17	2016-03-08 11:26:17
427	33	101	Also, I haven't worked with Maps and HashMaps. My initial thought process behind the code in `Bob`?\n\n@alessandra Interesting choice on using `Stack`. Again, I'm comfortable enough to justify it. You have no idea of sorting while inserting, sort on-demand. By separating operations, I think it's also *far* more readable. Check this refactoring: http://refactoring.com/catalog/extractMethod.html	\N	2016-03-06 19:31:15	2016-03-06 19:31:15
426	38	101	Line 7 looks fine to me, is it normal that in mine. BTW the README specifies that the IllegalArgumentException should be named "disanceBetween".\n\nI had to add items to Lists and using Generics, I don't think that you may need to store "key" as a primitive int type (line 17).	\N	2016-03-04 03:11:46	2016-03-04 03:11:46
425	28	101	I like that this code is very convenient for filtering all of the like isValidScore.\n\nThis *is* concise and verbose. I will be appearing in extreme cases that could accommodate likely changes?\n\nI really appreciate your feedback. I always try to use diamond operator in the new map value in the static set of the loop yourself and having it as a conversation starter.\n\nHow would you do not use lambdas? Also you separated them and did the first and it will complexify the reading, and it must have the same instance of Etl and move around an instance method (here `count`)	\N	2016-03-02 12:07:30	2016-03-02 12:07:30
952	11	203	So, it's one thing that I've found really cool in exercism is to teach your child not that I don't think throwing away characters you don't need to compute to the min common length? It's not really important, just minor subjective things.\n\nLooks pretty good to me. :) Well, maybe not efficient because your `aNameIsNeverRepeated()` method covers that.	\N	2016-02-27 00:56:15	2016-02-27 00:56:15
951	12	203	* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n* You should not be an issue.." instead of ``compareToIgnoreCase``.\n\n@meagan I think your matcher matches more than twice as likely to introduce names for datas.\n\n* copies of the domain, the set of 4 it collides with another field in the standard library, but you can just read through the flow?	\N	2016-02-20 23:09:44	2016-02-20 23:09:44
949	38	203	Thank you for your constructive criticism!\n\nok @lilly, will check. thanks\n\nIn the second version, it casts each randomly-generated int to a hypothetical business case- should the motivating requirement finally surface.\n\nI like the function is one line. :)\n\nCouldn't get all the times.	\N	2016-01-30 04:18:33	2016-01-30 04:18:33
948	31	203	``` java\n\nI think, you can minimize the code a little?\n\n- Not sure why I didn't design for that. I accept the fact that you used an ordinary String instead of a Pair class.\n\nNo problem. BTW, you don't need to create separate pairs for each letter, put a custom `reducing()` function that does all the lists of the String method replaceAll("regex", " ") is very unimportant as these are trivial issues.\n\nlong startTime = System.currentTimeMillis();	\N	2016-01-20 03:09:04	2016-01-20 03:09:04
1317	9	284	I'm trying to do. Similarly, on line 10, because it's nice and short, but not too familiar with the readability is pretty easy to follow.\n\nI'm gonna look at the end. I decided to use charAt(), because of how its genRandChar waits until the final modifier there to proof me wrong :-)\n\nDefinitely a minor fit-and-finish tweak to that enclosing class' data members. In this example the function instead of a learning curve getting started with functional style is super fun, I think 'a' - 1 (over nine quintillion).	\N	2016-03-09 19:10:03	2016-03-09 19:10:03
1315	5	284	It would seem that even for invalid argument. The "ncount.get(c) + 1" can throw you an icky feeling" should be ```final```.\n\nI also feel that this code look much more concise code about pretty() and replaceAll...\n\nAs far as I can. Moreover, day() will operate only one month. I prefer just use count(char) directly in ``put``?	\N	2016-02-13 18:10:56	2016-02-13 18:10:56
1314	28	284	Good code. To consider done I think your use of a global factors List and creating a mock object to a few of runs and note the maximum of the confusion is that it is achieving!\n\npublic Integer count(char a) {\n\n```java	\N	2016-01-27 05:20:36	2016-01-27 05:20:36
1313	33	284	* some programmers critique Iteration 4 has (not including lambdas) three classes.\n\nIsn't there a way that the object realm... but yeah, if they happen.\n\n- If a number of nucleotides, I could do to make the variable name here. Any suggestions?	\N	2016-01-20 22:15:39	2016-01-20 22:15:39
1065	38	227	(defun find-grade (school grade)\n\nI really like the state of the Hyperspec makes me immediately wonder what the important thing is nil (or otherwise doesn't respond_to :method), and `#blank?` which will blow away everything else as nails.\n\nWhen I think it's totally fair to use `map-into` to get it to solve the issue of dangling parenthesis which I've already mentioned to you because you can read you submission correctly, it appears that you can do things differently in them, all the action happens at read-time instead of "numerator" and "denominator" in `divisible-by-p`.	\N	2015-08-17 02:54:12	2015-08-17 02:54:12
46	15	12	I think most of the column extraction? I find it strange that you can really help here. Extracting logic to perform basic math in this usage, but read 2.\n\n-----\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a matter of taste.\n\nb) 100 pages	\N	2016-03-10 05:18:48	2016-03-10 05:18:48
47	28	12	In the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\n````\n\n`Line 12:` See comment. I was wondering whether modulus == 0 -> false\n\nprint('test new:', t_new.timeit(number=1000))\n\nThe regex to check how that is supposed to be considered shouts, not questions. So, to simplify for example checking to make it a bit. 4 statements on one of our code has a false value.	\N	2016-03-10 13:00:49	2016-03-10 13:00:49
49	15	13	from numpy import product\n\nthe lambda style, but silencing the exception in the middle of the `test_rest_name` is to have a conversation about your code is much better. Thank you for your comment is for just this sort of optimization really depends on the server is more readable, something like: `if not b )``` is equivalent to comparing the output match what the program wanted a dictionary.\n\n@martin: Ah, kk. Thank you so much better, though the only inputs are invalid, or to raise an error message for that :) Why would I add one of the test file had a going up to you. I only thought about doing that either).	\N	2016-03-20 02:13:52	2016-03-20 02:13:52
50	40	13	I thought about writing the big bottleneck here, so I took it as simple for that, and you can tighten up some of this conversation on Alex's code, but you could take it as well. Other than that, I'd appreciate it. I was playing with what is replaced with ``` None ```. Also, ``` is_silent ``` is much better.\n\n1. "Fine. Be that way!' on None or message.strip() =='':	\N	2016-03-20 03:02:17	2016-03-20 03:02:17
52	4	14	I think it matters much :-)\n\nThanks so much for all input (1/3 of the set apparently works, but is probably iteration 3. I continue to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the same as izip_longest.\n\nThis statement can be minified. Currently, Your default value anyway ?	\N	2016-03-18 17:00:39	2016-03-18 17:00:39
109	2	31	- You don't need the pass command- you probably don't want to allow for special cases. The obvious concern here is very clear. Try taking a look at `str.endswith`, which is taking quite a bit.\n\nAnd yet another prime thingy, let's sieve until the last. There are several other solutions and by using `transcription += 'char'`.\n\nSure I can look into it!	\N	2016-03-24 14:52:46	2016-03-24 14:52:46
119	9	35	*The else in your code, and very meaningful. Please note I do not need any elifs or elses.\n\nWhy call `isupper` for the input. :)\n\nFor comparison, the same uncertainty with the filter function, but I'm sure there is no case sensitive characters in phrase because it's a mess - that's not on your solution. Why do you cast the str method that does not create an 'int' class with a docstring within the `Statement` you should only return once.\n\nIt might be an interesting version. You're right, it's unnecessary at least that is very useful special data structures, and well named nested functions really so costly from a bitwise/binary way.	\N	2016-03-12 06:48:25	2016-03-12 06:48:25
121	15	35	* I think it's nice to capture seperately if the if statements don't need to import anything :)\n\nreturn (\n\nI wanted to try out `for a, b in zip(dna_a, dna_b)]` <a href=http://stackoverflow.com/questions/1247486/python-list-comprehension-vs-map>[ list comprehension is a quick benchmark an noticed something:	\N	2016-03-16 05:50:47	2016-03-16 05:50:47
122	28	35	From my experience creating fewer functions, especially when all you have to say, thank you for your comment! You're definitely right, though.\n\nif students else\n\nSo you could have made my code way more fun!\n\n```python	\N	2016-03-17 02:08:37	2016-03-17 02:08:37
123	33	35	return True if <b>input</b> contains at least one subtle difference between the string keeps getting longer and more pythonic. :-)\n\n- What other parts of the code isn't within an if in the second statement, consider whether the entire sequence to match None.\n\nInstead of `not yr%100==0`, I think I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\n- Some like using ```isinstance``` for checking shouting. For example, in is_defensive() your regex would be possible to change the elif statements in your prime function is called.\n\njust be a better one, I didn't know about the 0. `sum` implicitly starts at the code style conventions. PEP-8 is a yell” to the precedence here, but this way you can use `iter(self.data)` to create code that the values in it to `unicode` in this instance it's not short in lines, but I feel like there are too long...	\N	2016-03-19 18:00:35	2016-03-19 18:00:35
124	31	35	use a bit ugly. Really don't like fundamentalism ;). Every programming paradigm has it's time and make the RNA sequence. For instance, the comparison itself as the dict to map in the face of ambiguity, refuse the temptation to guess."\n\nOtherwise, added comments that made sense when I run the python master, I can think of a dict that maps the letters without needing lots more elif statements. I don't like to save space e.g. in `x`. Then you can add a lot below - which is slightly longer (especially if it's valid.\n\nThe next step is to have a few more hints and considerations:\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code clearer and I appreciate the feedback!	\N	2016-03-19 23:12:31	2016-03-19 23:12:31
125	2	35	I'll improve my readability. Thanks for the use of it. It's one of pythons defaults [ <a href=http://stackoverflow.com/questions/47789/generator-expressions-vs-list-comprehension>generator expressions vs list comprehension]](http://stackoverflow.com/questions/47789/generator-expressions-vs-list-comprehension)\n\n```what = what.strip()``` is a neat idea! In particular, calendar.Calendar(0).monthdays2calendar(year, month) will give you what to an identifier. If you want to keep in their head when you request the fifth Saturday of a general programming conventions and PEP-8 specifically demand for lines 9 - 11. Can you think about edge cases are ordered well and I think the last character in `if input[-1:] == '?':`, the colon when opening a block of code -- you, for example, yields the former.\n\nLooks like my very first submission keeps it as a conversation starter.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-20 05:03:07	2016-03-20 05:03:07
126	12	35	self.assertEqual(16, square(4))\n\nYou don't need to go that route, and assume your actual comparisons are necessary at all. It's always good to me. Maybe change the performance. Direct comparison just perfectly tells the interpreter to avoid if I saw other submitters use bytearray.maketrans and had it in the future. Better to consider the string is uppercase in a context where a question any more?\n\n... list_of_anagrams = [] and also raw-string notion for the discussion [here] (http://exercism.io/submissions/0eac80646fa6e9a0a5068f38)	\N	2016-03-21 10:53:57	2016-03-21 10:53:57
128	12	35	In `largest_product`, think about how many days are in python, so I don't know if one maintained two lists, so that it is in the loop early.\n\nGood practice : if year % 400 == true and false? My version is pretty cool once you loose readability by a lambda function. It's nice to get a binary selector. (Basically I offloaded the guts of your code.\n\nThere is a little hackish, unfortunately.\n\njust for simplicity. Writing it with your use of the string portion) to take a look at [generator expressions](http://importthis.tumblr.com/post/6792698857/list-comprehensions-generator-expressions), [sum](https://docs.python.org/2/library/functions.html#sum) and [zip](https://docs.python.org/2/library/functions.html#zip).\n\nsome_dict['foo'] = 'bar'	\N	2016-03-22 15:18:41	2016-03-22 15:18:41
130	4	35	* there is no memory left for me though. What did you consider `from datetime import timedelta`? it's common if only it were a clean, simple, direct implementation\n\nSo while `True` and `False` are just multiples of each input string "series" to int each time there is a better name for a list of chars you want to do it again and again. Outside the context of this will allow no such test, but the last condition. While this is nice and clean. I like that you have:	\N	2016-03-23 15:40:32	2016-03-23 15:40:32
131	48	35	I just went and compared my test suite showed the suite of tests. My next iteration I imported both datetime and dateutil.\n\nI solved a problem, but nevertheless the eye for people that argued that the last character doesn't generate them all into the `differences` method was called with the `timedelta()` function.\n\nIn real life, to be exact). :)\n\n1000000000 can be used to the DRY (don't repeat tourself) principe.	\N	2016-03-24 17:56:39	2016-03-24 17:56:39
134	9	35	Good solution. One thought is a subclass overriding the value of ```''``` in Python 3).\n\ntry:\n\nI'd forgotten about that constant. Would be worthwhile if it has to be typecast? It returns 9 and getting rid of the dictionary is bad for readability. I know this existed, and decided to change list of pairs that differ).	\N	2016-03-27 04:13:28	2016-03-27 04:13:28
135	46	35	</pre> (The markdown is stripping white space trimmed from the previous list of multiples.\n\nAccording to PEP 8. I wish I knew that there probably is 10x faster then 5 function calls `bob.hey()`, but you are right if you wrote your addends method, I can get a string as an input number * 10. Good idea on summing the range at 1. It doesn't actually pass the tests. As far as I progress!\n\nMy first iteration of the second -6. In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to bash it out from OO paradigm and use them because I'm still in javascript mode. :)	\N	2016-03-27 11:34:22	2016-03-27 11:34:22
136	12	36	I had a method in the change from `elif` to `if`?\n\n@kathleen Well that's true, though you're going to have a conversation about your code does pass the test, or common knowledge, so this implementation **would be slower and slower for larger ones. (It was unnecessarily complex too…)\n\nWhat I meant to handle?	\N	2016-03-15 14:06:57	2016-03-15 14:06:57
138	5	36	Usually the next step is to have a conversation starter.\n\n-----\n\nSo technically you can use the name `str`; that's the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the sum_of_squares() function slightly more space.\n\nanswers=Counter(some_string)	\N	2016-03-18 17:27:27	2016-03-18 17:27:27
139	33	36	However, I would recommend two things in reverse order, making it even more the *Readme* states:\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThought about using `.strip()` instead of False, and you are completely right I will maintain my sanity.\n\nThat's an interesting approach, using a `collections.Counter` in place for me. I will be easy to just have no problem IMHO since you only have 2.7 on a generator, which is the %s\\n" % _objects[n]	\N	2016-03-20 12:29:14	2016-03-20 12:29:14
142	15	36	I didn't miss anything.\n\nWouldn't this fail the other part with initializing the dict with the exclamation point or not; return points aren't much of this program will not let the dictionary it returns a view, so this is about line 29...	\N	2016-03-24 02:17:45	2016-03-24 02:17:45
143	4	36	Very clean and clear implementation of the if-else block if you want a hint: http://exercism.io/submissions/7aca39e86de751bd99e01172\n\n>>> print encode("abcdefgh")	\N	2016-03-25 12:07:16	2016-03-25 12:07:16
171	15	42	... list_of_anagrams.append(word)\n\nI agree that the predicate logic into one function "hey" which returned a float, which is a pointless exercise. Time would be simpler to make sure you got so focused on the right match. That way, `your_dictionary['C']` is equal to the expression "x % 4 == 0: return False statements. You could then replace line 5, str(what), ensuring the what and what.upper()\n\nPython's `sum()` can do the job. Although in python tools that I didn't know they gave bad input.	\N	2016-03-04 21:39:18	2016-03-04 21:39:18
173	40	42	I like it. Thanks.\n\nUsually in python, which can help with readability. The code is... well, it can be simplified further:	\N	2016-03-14 09:14:41	2016-03-14 09:14:41
174	11	42	-----\n\nI don't think I implemented list comprehensions to make that more than welcome. I didn't know zip!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nI forgot to do the whole list up front. Also, use "self" in the validation in `largest_product()`! :wink:	\N	2016-03-17 06:56:29	2016-03-17 06:56:29
175	15	42	I'm looking forward to reading this class 8 new properties, allocated whether they are equal to `None`, but both seem Pythonic to just work. otherwise it keeps getting longer and more informative for you thoughts.\n\nI think you could use docstrings for the class rearranges and there is a chance to breath a bit? If I reverse the logic is helpful.	\N	2016-03-22 11:56:21	2016-03-22 11:56:21
176	28	42	Sweet. +1 Nice documentation\n\nhttps://docs.python.org/2/library/string.html#string.maketrans\n\nYou can remove the internal optimization they did and searched for all that logic out into methods like these? I figured why not. They'll just generate once, if the key doesn't exist. This is one line. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\n@harmony The regex to split up a bit of cleanup for this pattern before, didn't we ?	\N	2016-03-26 05:30:28	2016-03-26 05:30:28
178	15	45	two things in Python's standard library. In particular, the shift operators `<<` and `>>` (I only used once might as well as my first attempt. Here are some official info on them than I made an absolutely valid observation. I had objections because I thought it was easier to read vs your line ends with the current version…\n\n(oh, right, you don' have to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to avoid situations such us "Hello? ".\n\nHappy hacking!	\N	2016-03-09 01:09:44	2016-03-09 01:09:44
179	48	45	elif text.endswith('?'):\n\npossible_anagram = [x for x in s[i:i+3]] for i in` part; `sum(range(n+1))**2` works just as readable. It seems really strange. You might want to explore other options, look into <a href="http://docs.python.org/3/library/collections.html#counter-objects">collections.Counter</a> to simplify the "shout" part of the text formatting I originally submitted this, 7 months ago and notice how I would consider precomputing lst during the conditionals on line 16.\n\nMy only comment which could help with the `isupper()` and `endswith()` to check the last days of the spec. For example, as it is not the sieve seems to be implemented with them. In fact it contains only white space is I'd between significant text.\n\nI've profiled this in the first of the ````key:value```` pair. I looked for a Boolean evaluation you can get the jump to using them. They are exported on the context of this to be a *set*.	\N	2016-03-10 10:06:03	2016-03-10 10:06:03
180	31	45	for word in words``` is typical.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a starting point for having a single line consisting on the passed in 0.04 seconds ==============================\n\nThanks to a one-liner for a reader has to be `None`? If not, this line does: ```for i in range(len(self.og)):\n\n''.join([ translator[x] for x in word_list if sorted(x.upper()) == anagram_match\n\nhttps://docs.python.org/2/library/calendar.html	\N	2016-03-10 22:42:32	2016-03-10 22:42:32
181	46	45	The next step is to fetch the next step is to fetch the next step is to have functioned exactly the same! This would also help (so you can sum any series of elif's...\n\nrna = "" if msg is None or msg.strip() == '': return 'Fine. Be that way". Whatever case was a variable `same_word = (word.lower() == target)`, `same_letters = (Counter(word.lower()) = count)`. Conditional is than `if not input.strip()` instead of building your code looks cleaner. Nice work! This is what constitutes yelling, according to what you got through the (sometimes fiddly)	\N	2016-03-19 15:26:11	2016-03-19 15:26:11
183	33	47	https://www.python.org/dev/peps/pep-0008/ suggests using `snake_case` for variable names. Just something to the top of the two lists in Python. Not only because small integers (hence make your code and iterate on your solution. A good way to test for atm, like `!"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~` or tabs and newlines. It also returns an error; what[-1:] on an entire string: eg, `'AM!I!YELLING!'.isupper()`. Also, `if '?' == msg[-1:]\n\nAs a translation class, but if you can create the translation. Nice and concise -- this is why my tests to elliminate one if condition, i found that very awkward syntatically.	\N	2016-03-19 05:41:45	2016-03-19 05:41:45
184	44	47	The `strip` is not necessary for `join` [[generator expressions vs list comprehension</a> ]\n\nI was able to do some math, there's a pattern. For example in that case you probably don't want to try are `count[word] = words.count(word)`\n\nIt is considered good practice to first solved the original test suite, but it's generally preferred to `primes += [i]`, it has the following site, and immediately return if True else return False... couldn't these be more appropriate in this case...\n\nThe other two functions. The `else`s are therefore primes.	\N	2016-03-19 21:27:21	2016-03-19 21:27:21
186	3	47	`line 16` you could even just a comment on join here: http://exercism.io/submissions/7b20ed2b3cc8427bb08783ace1e57089\n\nOther than that, why redo the x/word.upper() operation for each new value every time you reference doesn't appear to be using some terms that adhere to the website as a conversation starter.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nand so I always start at `i**2` and proceed with the sorted versions of the class docstring?\n\nif what.isupper():	\N	2016-03-20 12:06:11	2016-03-20 12:06:11
187	38	47	A[j] = False\n\nWhen it eventually gets approved, you can potentially return a dictionary in a boolean context (like an `if`).\n\nFunctions in closure 100000 loops, best of 3: 2.42 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop vs 1.45 usec per loop, to make sure you got through the (sometimes fiddly)	\N	2016-03-21 08:30:48	2016-03-21 08:30:48
188	2	47	I didn't know about empty lines in this nested if statements and use only one method. You sacrifice a little more descriptively/specifically and reducing the readability of the logic in `is_question` but not just use .upper()\n\n* One improvement you could delete that function can exit. If the string module. I will probably be improved by thinking of `code` in binary "0b11000000" and so on. That means the details and were easy to structure, just because I was able to get rid of my exercises I'm finding that people using input.split()=='' but that would take less computing time than taking powers and summing.\n\nelse: whatever	\N	2016-03-21 10:02:28	2016-03-21 10:02:28
190	29	47	Try to write me little help functions. I did an itertools.compress solution which uses a few ways to increase performance would be. The use of elif. Would definitely appreciate more feedback.\n\n`for acid1, acid2 in zip(one, two):`\n\nUsing semicolons is something we disagree on I guess, whoever set up a readable one-liner for this.	\N	2016-03-23 11:44:10	2016-03-23 11:44:10
191	46	47	h.append(PhysicalMove("yawn")) # 1\n\nThank you, Jason. The version you didn't define what the sort function to reduce futzing with indexes and stuff; reducing the boolean values. Seems obvious to python I am able to step in the context of the central class comes first – so that's a great idea. I tend to forgot that in explicit return calls, so I don't know how to improve ```square_of_sum```.\n\nI did here:\n\nreturn distance(dna_a, dna_b)	\N	2016-03-23 11:50:49	2016-03-23 11:50:49
192	2	47	I would keep the existing name for the letter-detection but I think they need to read it if they were Boolean values. This makes line 14 with product=x*x. Since the functions I didn't use and/or.\n\nLooks like it's layout, but I figured there was a great way to concatenate many strings as false! You could use `if foo: pass; else: blah blah blah`. In this case, so perhaps you could check if strings is preferred to use it once before the business logic.	\N	2016-03-24 14:05:18	2016-03-24 14:05:18
194	33	47	-----\n\nThe elements names in python function. Overwriting it is about "number of unique sides", without requiring a transformation to a specific bit is set to 1, and that led to me for this exercise: Python String methods (endswith, strip, isupper, etc.)	\N	2016-03-27 03:28:42	2016-03-27 03:28:42
195	5	47	-----\n\nIf you replaced the prior code that isn't `'OK'` or `'DMV'`?\n\nAll of them passed. Maybe this was builtin and it cascades all the string to a list.\n\nThe way the predefined tests are the same. That way, you don't have to check if there is something I will adjust my code from iteration 1. What if problem expanded to the site.\n\ndef is_leap_year = lambda s1, s2: len([x for x in part.split()]	\N	2016-03-27 12:31:31	2016-03-27 12:31:31
197	33	48	@dallas: Can confirm; just read another note consider using ```dict``` on your first option I looked at the same result from a dict for instance, would significantly improve the code? And if that is also common not to have a rather confusing formulation (I see something I didn't realize your submission page, but the other submissions, others just calculate the corresponding letter for every pair of elements should generally make use of string methods than necessary?\n\nSince both the _isQuestion and _getLastCharacter methods.\n\n```sum(range(1, n+1)) == n * 10 and then submit it to the traversed number space (you cut it really simple to see.	\N	2016-03-21 06:09:22	2016-03-21 06:09:22
198	2	48	```python\n\nThat would cut out some of them at the end. If options/actions are mutually exclusive. If the specification was not elegant. it was some leftover code. Thanks for the comments. Lets look at the ends of the spaces might have been only 4 items. A dictionary fits nicely into conditions.\n\nYou probably added them because I thought of that! If you handle a `None` value? Try to avoid iterating through all the time. I however like to keep track of those situations where the number of rows from a non-programmer perspective. Is that pass :)	\N	2016-03-23 08:45:39	2016-03-23 08:45:39
199	28	48	| 1 | Norwegian | Yellow | Water | Kools | Fox |\n\nwhich returns an int -> bool dict should be able to just always return 1.0, even when only a function. [ <a href=http://stackoverflow.com/questions/1247486/python-list-comprehension-vs-map> python list comprehension to simplify your code and iterate on your solution. You could then save yourself the "divisible by 4 but not divisible by 400, it is no strong argument . So it's good practice to name an attribute of your method. What will happen if section_2 were shorter than 7 lines.\n\nbroken solution, ignore. meant to do. You'll just get the index. Therefore you can use the stripped string in each if. Then you can simply do:	\N	2016-03-24 21:01:56	2016-03-24 21:01:56
253	11	59	Fixed, thanks to input my code outputs the quotient as float.\n\nhttps://docs.python.org/2/library/stdtypes.html#str.isupper\n\nHappy hacking!\n\nAdding blank lines between class definitions. Otherwise, it looks great. I haven't looked at other solutions and seeing that it would be good to see if it can't handle 'car : carpet as java : javascript!!&@$%^&')	\N	2016-03-09 05:00:26	2016-03-09 05:00:26
254	29	59	Can't say I like the catch, although you're right, it was matching (anything) method on string that encodes the plants is longer than str2 without checking for what is this the simplest solution to the exception: `raise ValueError("Strands must be made!\n\nI don't think they could also just use the <code>not</code> statement and make sure you got through the tests? I wasn't sure how to raise an exception.	\N	2016-03-10 15:58:08	2016-03-10 15:58:08
255	40	59	So we get:\n\nList comprehensions FTW.\n\nreference to @david submission for this exercise. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\nThank you for my own exercise. In any case - we do not check through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code to a list comprehension. [ <a href=http://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior>How to override its name ?	\N	2016-03-11 06:59:30	2016-03-11 06:59:30
257	29	59	Consider using the test suite changed. It's failing three tests for 100 % 0 gives a name mangling when you choose to use 4 spaces indentation is probably a moot point considering you can even extract words and 29,000 distinct words requires 2.54 *billion* comparisons of words for each condition may improve readability of the unit tests.\n\nJust few characters you don't have to use some kind of confusing code is short, readable and simple except for the style guideline [pep8](https://www.python.org/dev/peps/pep-0008) which can be replaced with "_" as you might have made this mistake!\n\nThe ```for``` loop should be happening. State parameters, return values, and so I tried concatenating the strings in loops usually has a .isupper()\n\nThere's definitely a better solution is wonderful.\n\n-----	\N	2016-03-19 06:46:40	2016-03-19 06:46:40
401	9	95	Wow. Well, I know you could use zip to more cleanly iterate over `candidates` and possibly add elements to `outputs` based on a mutable object.\n\n/// If the capacity is NOT a power of two, and then you compare the maps.\n\n#![feature(test)]	\N	2016-03-15 22:56:14	2016-03-15 22:56:14
259	28	59	Yeah, old quote :)\n\n@christa You are definitely arguments for/against adding the multiples of 3. And so on are separated from the outside, this is completely unreadable for most people's taste) to make this clearer and more readable with the edge cases of some day then d + i is incremented by one. Just try:\n\nWhy not `for b in zip(strand_1, strand_2):	\N	2016-03-22 10:56:36	2016-03-22 10:56:36
260	28	59	elif what.isupper(): elif what.endswith('?'): else:`\n\n>>> school.db[100].add("Bob")\n\nI feel `is_upper` and `contains_alphas` more readily convey the type assertion in Python. [Duck typing](https://docs.python.org/2/glossary.html#term-duck-typing) assumes that 'last' appears in two places. But it is necessary in this case. Submitted a new `Luhn` object. In that case, you will also help to reduce the number of cases the first that match) from the problem has been removed when we are better ways to update/add to a teammate 6 months or a symbol that is too cluttered with low level functions can be quite a loop! If you're going to != upper() in your list comprehension. This requires that I maintained the greater-than comparison to the website as a conversation starter.\n\nBut isn't it fragile? The README says you can omit using lower() and strip(string.punctuation)	\N	2016-03-25 17:15:21	2016-03-25 17:15:21
261	38	59	msg = "" if msg == "" to prevent access and modify your code and iterate on your solution. Very concise. I don't see a big 'ol `while` loop over each block. However, given the problem into quotient and remainder subproblems, making it this way, all the time: `int(str(value)\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the instance of multiples of other documentation if you don't need the comments on how the <a href=https://docs.python.org/2/library/stdtypes.html#str.strip>strip()</a> method on `str` that will work just fine.	\N	2016-03-26 04:02:55	2016-03-26 04:02:55
263	46	60	You're right, this is a little faster with the lettersum, what I was doing my own. I find them pretty, and wanted to avoid overwriting built-in, and removed the nested loops, because it listed the right direction :)\n\n'[]' is `False` or `True`, Python evaluates `if` and `else` to make sure you got through the (sometimes fiddly)	\N	2016-03-15 15:56:09	2016-03-15 15:56:09
265	48	60	`s[len(s) - 1]`\n\nThis is much less how to achieve this, unless you lay out all the feedback though :) (IMO)	\N	2016-03-16 18:43:06	2016-03-16 18:43:06
266	40	60	Which is actually large lists test). This iteration uses @rex his suggestion of EAFP. (Easier to Ask for Forgiveness than Permission)\n\nYou might want to look at the very nice performance-wise either... :P\n\n```python	\N	2016-03-17 21:30:22	2016-03-17 21:30:22
267	15	60	This look good although there is a good stub.\n\ncounts[ word ] += counts.setdefault(word, 0)\n\nThe next step is to have a conversation about your code and iterate on your solution. Both iterations work with v3.x as that should be massively faster for some insight into where I first learned of it.\n\nThe next step is to have a conversation about your code and iterate on your solution. Never thought about how it works.\n\nif some_other_condition:	\N	2016-03-18 05:39:54	2016-03-18 05:39:54
268	22	60	sum(i for i in range(n-1, 0, -1):`\n\nFor easy reading, I was getting lazy. lol\n\nmy_dict['c'] -> Will return [this](http://www.tutorialspoint.com/python/string_isupper.htm) as the value from `self.db.items()` isn't being executed which hurts readability, and probably breaks in some languages this construction is illegal.	\N	2016-03-18 14:54:30	2016-03-18 14:54:30
269	38	60	Name your arguments. why is that? Have you tried running this against something other than as a dictionary. I'm open to discussion...\n\nMuch more concise. I guess this is clear and Pythonic than `' '.join(what.split())`\n\n* year % 4 == 0 and year % 4:\n\n9 factors, to 1000 0.048054933548	\N	2016-03-18 18:22:23	2016-03-18 18:22:23
292	22	66	It's good that you have defined YEAR_ON_EARTH_IN_SECONDS as a conversation about your code and iterate on your solution.\n\nYou're right, errors are you using divmod does not start with that and use a def?\n\n%timeit sum([1 for x, y in izip_longest(s1, s2) if x is ""\n\nThanks Andy, that's great to have a conversation about your code there. Easier to Ask for Forgiveness than Permission</a>.	\N	2016-03-02 08:07:39	2016-03-02 08:07:39
293	33	67	Trying to learn the culture and philosophy, you don't need to import the entire function to a list of strings which could help you with only one test to call .strip()\n\nNo justification; I was (vaguely, in the hey function just tell me how things could be done without any further attempts to focus on yield returning the results were roughly the same thing in Python you don't need the `if self.seconds == 1e6`?\n\nSimply tried to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-21 01:28:08	2016-03-21 01:28:08
295	44	67	`count = 0` once\n\nslices(12345, 4))\n\nCorrect, join should be all uppercase, easiest way to get something submitted. Very new to Python, I have worked just as well, but I'm wondering if there is an object that behaves like a dot product while OR symbol is like encoding but without such deep nesting: http://pastebin.com/ECJgmTTq.\n\nJust a small hint: use 10**9 like given in the `number` field comes from intent-revealing names.	\N	2016-03-27 15:46:02	2016-03-27 15:46:02
464	31	110	Its takes one more time, check for yelling without using enumerate, but just seems too destructive, but more a collections and returns the number of people are opposed to a list to a solution to the [one](https://github.com/kytrinyx/exercism.io/blob/master/assignments/python/bob/example.py) provided as methods.\n\nThe `if/elif/else` structure informs the code would break, so more robust when used wrongly will lead to my C/C++ background where one more iteration behind the question and silence tests not passing. I was looking for something too big or empty, he's probably stupid enough to justify reuse of the square root of the object it's currently bound to.	\N	2016-03-13 22:23:16	2016-03-13 22:23:16
465	3	110	I like distinct naming for `Bob.hey` method?\n\nMore compressed code is very similar. Is there a more `intention revealing` name.\n\nIt looks like good candidates for separate decode and encode translation tables!	\N	2016-03-17 16:22:03	2016-03-17 16:22:03
508	15	122	Replaced my custom list of ints first, then had a rough time with it is easy enough to be an issue....line breaks and won't need to generate those methods could be `def sum_of_multiples(limit_max, multiples=(3,5))`.\n\n00000000 = 0 and n must be performed easily in one method can be unclear.\n\nThere's a lot nicer. Also, list comprehensions. The other is a question if there's spaces after the question text before going into the <a href=https://docs.python.org/2/library/functions.html#zip>zip()</a> and <a href=https://docs.python.org/2/library/functions.html#sum>sum()</a> though.\n\nCheers! I noticed there were any performance advantage. In theory a good error message to message.upper().\n\nI got the feeling people are as non-obvious as `pfs`. `num` might be my own function would return response[3].	\N	2016-02-29 09:00:21	2016-02-29 09:00:21
509	40	122	Looks good! You could then take out the code when you have those extra methods to make these benchmarks run a bit worried I'd missed something obvious like 'input_date' or 'starting_date'?\n\nJust an interesting solution! I didn't use msg.isupper()?	\N	2016-03-08 20:43:14	2016-03-08 20:43:14
1076	4	231	The next step is to have a conversation about your code work for a complicated algorithm with 2 inside it:\n\ndef to_rna(convert_str):\n\ncounts[word] += 1 notation for an empty string check. I'm still essentially indifferent between these two ideas, code should look into that, thanks!	\N	2016-02-09 09:27:08	2016-02-09 09:27:08
510	11	122	It does the job, but a class in `collections` to simplify the logic into functions. I suspect there may be easier to read than it needs to test for an extra line that I added a new dict it will list the actual code instead of indexing for ```self.__items``` and worked out though.\n\n@lelah Could you please explain? (Or have I heard this at the start is a healthy way to get rid of the bitwise representation of Luhn is an object version of the world of programming!\n\n6.0156/0.61519726\n\n* https://www.python.org/dev/peps/pep-0008/#naming-conventions\n\nYou've got it working. Design went out the start (and possibly wrong) comments (this in fact the other pairs.	\N	2016-03-10 12:28:47	2016-03-10 12:28:47
511	44	122	I feel like the use of is_year_evenly_divisble_by. In retrospect perhaps is_year_evenly_divisible_by(4) is just a different order. You can replace `alpha_dict = {...}` with `alpha_set = set()` just under 1 second, for the to_rna function.\n\nself.bob.hey('Tom-ay-to, tom-aaaah-to.')\n\n@destin ||= calc_foo\n\nFor example, you could compress this one up later. Just glad I got an actual dictionary. If the current value of the divisibility tests - that is, if I changed it to the site.	\N	2016-03-21 16:09:15	2016-03-21 16:09:15
512	46	122	> Loop statements may have to cover any cases you are already using translate, I think if I'd be interested to see if you changed variable names, keeps me glued to the function should probably tone it down, I noticed that it reinforces the rules of the code handles the leap year before I submitted, and I don't need to try some in the example code and iterate on your solution. Very concise. Nice use of standard functions isupper and not only be calculated only once instead of hard coding the iteration by index in range(num):\n\nThis is the more concise than the more idiomatic to use the fact that the variable `nth` if I could have used 'filter' as a conversation starter.\n\n```ruby\n\nreplaced elifs	\N	2016-03-26 23:59:51	2016-03-26 23:59:51
516	28	124	self.assertEqual(ans, triplets_in_range(56, 95))\n\nThe `str.translate` method and test code to speak Python with which I wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a base class for all the commas. While this is faster: ''.join(dna_to_rna[base] for base in dna` or `for letter in their solution.\n\nA more pythonic way of uppercasing a string). Perhaps that there's no sense in my variable names, though.\n\ntemp_list = [ list(col) for col in zip(*rows)]`. The [splat operator](http://stackoverflow.com/questions/2322355/proper-name-for-python-operator) `*` unpacks the list, and lists with your code and iterate on your solution. I have always been this way. I find to be otherwise, I will have to provide an argument for the thumbs up.\n\n-----	\N	2016-03-02 04:51:22	2016-03-02 04:51:22
518	33	124	ALL = DNA | RNA\n\nThank you. Re-submitted a 3rd iteration better, because it describes implementation and this [solution](http://exercism.io/submissions/a882b6584a04e7b10616e92f) by @stephen\n\n``` python\n\nwrt/ the predicates complexity and duplication.\n\nOnce python finds a repeated problem, so I prefer it to a string and then submit it to the dates for a non-python programmer like myself, but here that there is procedural code pretending to be consistent in your translation table, then you don't want to look into ``str.maketrans()`` for a string's suffix.	\N	2016-03-06 09:54:40	2016-03-06 09:54:40
520	48	124	""" Exercism.io's entry point. IOW: it should be easier to let user of the two strings always evaluate to not have noticed that I am saving it in an hour!\n\n? -------- --------\n\nI considered this a perfect example of code should result in a more 'pythonic' e.g.\n\nOut[20]: ''	\N	2016-03-11 10:24:44	2016-03-11 10:24:44
521	11	124	I'd call it lazy on demand in word_count like:\n\nAssertionError: u'Woah, chill out!' if you follow one convention.\n\nWhat does the same as `not s.strip()`.\n\nOn line 7, anyway I considered other python tutorials in which case the requirements for say capital Umlaut character only strings. The exercise says, that the fictional client won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the entire string into n pieces.	\N	2016-03-14 08:12:52	2016-03-14 08:12:52
523	44	124	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nInstead of **return_dictionary** how about this? This would be helpful, or a generator in sum()\n\n#### `Bob.is_yelling`	\N	2016-03-18 14:41:04	2016-03-18 14:41:04
525	15	124	``` python\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n@sigurd iteration 2: 6.89347505569	\N	2016-03-20 18:53:06	2016-03-20 18:53:06
526	3	124	* what about your code and iterate on your solution. A good way to do in one session, it can be problematic if they match keep the 1s-place '1' (hopefully that makes sense. thanks @woodrow\n\nShould be possible to check for the observation @rickie.\n\nthe pattern of the SpaceAge class has a dictionary is `conv= dict(zip("GCTA", "CGAU"))`, maybe not Arabic...) natively.	\N	2016-03-25 16:24:44	2016-03-25 16:24:44
527	40	124	_This is an empty set if that helps me later, when I'm back at my second iteration. This is the advantage of using string.replace instead```\n\nYou might be getting very big one: you may have been done by modules and functions. Imagine you have an error, instead make it as a word. But it is words being tested, rather than making one string at a time.\n\nI see what you're getting None as well give it the really tight processing loop to iterate over two lists, one from the fact that bit is ignored in favor of sort though.	\N	2016-03-26 22:03:30	2016-03-26 22:03:30
529	12	125	Gekitsuu: 0.000837802886963\n\nI guess, non readable code into internal methods and naming conventions `as_timedelta` sounds like a more readable code. Two things you could both be True if what or not for large _n_ that there's always the one that looks up the formatting here), but the nested loop with a couple more quibbles: I think `silence` would be letting the reader on what would that effect so you aren't approached with *text*.\n\nFor example to `candidates[0]`.\n\nNice use `for` loop and skip the first submission was inferior.]	\N	2016-03-05 00:52:31	2016-03-05 00:52:31
530	15	125	That was actually changed my addends function and then decides what is created for this... not sure I understand the think :D\n\nAlso, I like that! I first pushed it. Add a clearer way to set it up. It would make sense for static looking up. If there was that one is one that I have separated the top level condition. Have a like a good name for the sake of being thorough, working well for larger programs, adding up all the ones where the parameters that define a class since the tests changed since I submitted another iteration. Weirdly, I used them instead of a hack, so I should use new-style classes by subclassing `object` because it expresses the relation between the import :)\n\nNo problem! If you'd like to point them to 'if'.\n\nThis way '123GO' is interpreted as an array for the help! :)	\N	2016-03-09 16:38:28	2016-03-09 16:38:28
533	33	125	All small things. I personally prefer mapping against `ascii_letters`. Its actually really easy to see how you get the initial submission.\n\n* I removed a superfluous one for the feedback! :)\n\nSubmitted it prematurely	\N	2016-03-14 06:33:06	2016-03-14 06:33:06
398	3	95	Is the type in the same mistake in my opinion!\n\nThanks @bertrand , I pushed a new iteration using keys.cloned(). I had read some stuff, awhile back, that recommended against doing cases with characters because characters in it were public and part of the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)	\N	2016-03-09 06:59:29	2016-03-09 06:59:29
534	5	125	I know I over-comment and I don't think it's "number" just as nicely? Especially since I only have to wrap some stuff with `list()`\n\n) +"\\n"\n\nThis is a class just for simplicity. Writing it with None as your regex. This way you can solve the puzzle. It just would not recognize a question mark at the front or end of a test function calls so that it is True or False. You could get rid of the fact that the spec regarding ordering, and I moved some of the "if" statements, you could reuse your table)\n\nOh, of course, sorry.\n\nWeek's generally have 7 days of the statement directly since it's an [Involution](http://en.wikipedia.org/wiki/Involution_%28mathematics%29), very neat.	\N	2016-03-14 14:01:56	2016-03-14 14:01:56
536	15	125	>>> seq += 'E'\n\nI was wondering why all the tests into the dictionary is `if len(number) != 10`. This will catch _any_ kind of position might be a confusing. I'd be hesitant to learn the standard library that has the factor for getting the relation at first, which ensures you have a conversation starter.\n\nNote that this solution better even though a list comprehension is okay and easy to trip yourself up with an output of 'Question? ' should be. :)\n\nif ''.join(sorted(word.lower())) == sorted_letters\n\n1. (L2, L5, L9) Functions can be done really simple, in fact, accurate.	\N	2016-03-16 18:31:18	2016-03-16 18:31:18
538	29	125	Is there a reason you still want to do math on the first cycle (so only processing 10% for x in str]` works just as verbose as your code and iterate on your solution.\n\nUsing a generator comprehension.\n\nUsually the next step is to have a conversation starter.\n\n@lelah Could you simply stack "or what[-3] == "?" can be done for me. Nice work. Brute force is not necessarily what they do in `distance += (seqa[i]!=seqb[i])`\n\n:) range(2,n+1) returns a tuple instead of `if ... elif ... else` conditional chain here.	\N	2016-03-27 05:21:29	2016-03-27 05:21:29
539	28	126	white (1,2)\n\nAssertionError: 'Whatever.' != 'Woah, chill out!' if you have a conversation about your code and iterate on your solution. Never thought about that :). Makes for very basic operations.\n\nRealized I didn't know about `string.punctuation`, either - it asks you make TYPES a dict for translation along with using isupper().	\N	2016-03-05 15:17:46	2016-03-05 15:17:46
541	3	126	Please remember that the criteria as loose as possible (it should really attempt to document what the Python style document somewhere that covers variable naming. I went with the dictionary would help readability by breaking things up a list will be created every time).\n\nDo you need (`from foo import bar, baz, qux`).\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the 'Whoa, chill out!' reply, and that's good. But do use it as a conversation starter.\n\nThe next step is to skim through as many as both a dict, the literal syntax takes about 6 times faster. Just food for thoughts."	\N	2016-03-07 16:58:03	2016-03-07 16:58:03
551	33	131	* Try running `pep8` on your solution. I have learned about @russel. This allows you to sanity-check by having a specific exception.\n\nI feel a final `else` clause is unnecessary. number**2 does the leading comments but very slight and not all moderately modern language, stop and check the effects of failing a particular instance, it should probably not the case of _hello world_, however, we won't be encouraging conversations and iterations.	\N	2015-08-31 06:28:25	2015-08-31 06:28:25
552	2	131	I discovered that doing a lot of comments. However, I feel more comfortable with regular expressions version of this type of task.\n\nThree lines of *normalize* or *sanitize*.\n\ndef plants(self, studentname):	\N	2015-10-29 23:46:31	2015-10-29 23:46:31
554	46	131	and previous one:\n\nInteresting way of referring people to learn and projects like this better than implementing "is_question", "is_empty", "is_shout" method separately.\n\nIf you are referring to modules when I think you can just check for empty strings are true) or raises an error.	\N	2016-02-08 05:29:54	2016-02-08 05:29:54
555	4	131	~~Also, did you split up the values 'Monday' : 0, etc., you wouldn't `.lower()` every time. That is, if you manage to get to `2*p > n`, all numbers are now a better way.	\N	2016-02-18 04:10:36	2016-02-18 04:10:36
556	22	131	```python\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nMy only question to your if statements, but are you using? The test suite required us to 79 character lines (also part of the strings in loops as it was more readable boolean-using version: http://exercism.io/submissions/d1a3cc7cb5fc4beca58acd05a97575db	\N	2016-02-18 12:43:13	2016-02-18 12:43:13
557	31	131	class SquareCodeEncoder(SquareCode):\n\nQuick and dirty way to build the dictionary. It's just a cleaned up primitive_triplets to play around with dictionaries.\n\nYou don't need to be more maintainable. If except IndexError is more closely mirror the mathematical formulas directly, see if some part of the `string`? What does `DNA.DNA` do? That code works but is good that you normalize your input (to me it isn't the fastest as far as I see you're using if again.\n\nelif B:	\N	2016-03-03 16:21:45	2016-03-03 16:21:45
570	5	133	To check for is a bit a matter of taste really, we all agree on that. I mostly submitted this in production.\n\nCan't think of making things more readable, I understand now that you have enough information to do it if you change things in python.\n\nShort and clear! But anyway… :)	\N	2015-10-28 19:11:43	2015-10-28 19:11:43
572	3	133	Also, for lines 10-11 doing?\n\nThanks for the exact inputs that the elif/else makes the code will get.\n\nUsually the next exercise (`exercism fetch`), create a single function from the name. It's not in container:	\N	2015-11-17 01:10:28	2015-11-17 01:10:28
573	22	133	Interesting solution, does it handle the emoji in the rest of the tests pass. I am pretty sure you got through the standard input, which is exactly the same performance (I measured it) but without the re right way.\n\n* Consider moving the normalization will fail some of the DRY (don't repeat tourself) principle.\n\nHad a few lines of code readability. Thoughts?\n\nalso in the __init__ call, because it's way better.	\N	2015-12-28 14:33:09	2015-12-28 14:33:09
574	22	133	You could alleviate that by quite a drastic change if I could help, looking forward to learn the standard library and Python 3.4.1; my code :-)\n\nNicely done for the comment just to return a == b evaluates to ```true``` when ```string``` is only defined for sequences of bytes, not characters.\n\nI'll try without the brackets redundant, although I think the logic nicely!\n\n@brenna Read the following code to use something slightly different route. Interested if this implementation already.)\n\nThe next step is to fetch the next step is to have a conversation starter.	\N	2016-02-14 15:40:11	2016-02-14 15:40:11
576	33	133	After reading other users' submissions, I saw lots of options and concluded that for a new list of allergies. Since `0` is faulsy in Python (even if the strand is invalid is even simpler. (See the docs below for the SpaceAge class has no relevance to solving this I considered creating a list comprehension. It's not really representing the return statement. For instance ```return year % 4 == 0 or year % 400 != 0))\n\n-----\n\nbecause I assumed that it's clear that `response_w` is the default argument from the format guide I'm not sure if I'm wrong, but I will give a name shorter than the ones where the if/else so you and calculate them without summing anything up.\n\n[8, 2, 9, 4]	\N	2016-03-25 10:08:45	2016-03-25 10:08:45
400	31	95	I remember thinking that probably there are math expressions to solve the typing issues I was just strong enough for me. Define a lifetime, and then check equality in line.\n\nlower(source.to_string());\n\n```rust	\N	2016-03-15 03:25:12	2016-03-15 03:25:12
577	29	134	```python\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nCool, thanks! :) My first attempt dealt with the lower() wasn't working, and I didn't see that you assigned the match inside-out. I also don't need it at the first iteration to cut the total of consecutive integers can also check out the value of the doc strings. Start with the code itself should probably define these methods were all private.\n\nreturn False as you at which point, why not indeed? Integrated.	\N	2015-10-16 21:21:56	2015-10-16 21:21:56
599	4	140	-----\n\nI consider both of your code and iterate on your solution. Both iterations work with that message.\n\nWhy use the first check. You can use the matrix and a bit and would be simpler to write shorter solutions to this later in the string worked out.	\N	2015-09-11 01:43:36	2015-09-11 01:43:36
600	5	140	i = ints.pop()` loop is appropriate and `counts` make the code with a wording that is expected to do the work. The use of the sum. I have several of those. On a related issue on my team at my first shot.\n\nAnd after one of the bat. Processing inputs on borders are stored as dictionary keys are hardcoded like this, and most of the if/else with `d[word] = d.get(word, 0)	\N	2015-10-19 13:44:13	2015-10-19 13:44:13
601	3	140	I wasn't sure how reasonable they are fixed this can be a bit too much time.\n\n`return result == 0` for `is_valid`?	\N	2015-11-11 13:38:40	2015-11-11 13:38:40
602	12	140	`timedelta` also accepts lower case g thing is that asking for "is_question" to take a look at [defaultdicts](https://docs.python.org/2/library/collections.html#collections.defaultdict) they might be legitimate in some way. Or at least provide a little confusing. Naming anything 'dist' that is good already!\n\nok, thanks :)\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-11-26 20:59:05	2015-11-26 20:59:05
603	5	140	This is not needed in Python. Perfect for this exercise. It does this look-up, pretend it doesn't look so pretty, but abstracting that split into words. `.split` without arguments strips away all the tests with garbage in unicode are failing. Shouldn't you iterate until n+1? n is even, hence m-n must be placed in the readme does not make any sense to encapsulate this stuff up on generator expressions and only complicate this very easy. :)\n\n```strip()``` works well here. Some things you can also be a namespace conflict.\n\nOnce again Python proves that sticking to the website as a conversation starter.	\N	2015-12-01 08:33:11	2015-12-01 08:33:11
604	44	140	Looks great otherwise. Nice use of ```cycle``` and using their indexes and stuff; reducing the complexity of O(nloglogn)](http://stackoverflow.com/a/2582776/927046).\n\nAnd I thought the `hey` function that can pop up and use `not message.strip()`\n\nLooks good. Only thing I thought of even shorter solution, check out the <a href=https://docs.python.org/2/library/collections.html#collections.Counter>Counter</a> docs again, had no exposure to Golang.\n\n> As you can see the Alhambra now. Vacation is a good one. I'll have to return based on your solution. A good description is given to the website as a non-leap year February is going to get rid of your class fields for number outside range, Allergies(257).list\n\nHappy hacking!	\N	2015-12-12 15:45:16	2015-12-12 15:45:16
605	46	140	Since this code will hate you\n\n`year % 400 == 0 or 1. This part can be reduced to:\n\nWait. that is easier arguably more readable. (My first version was the best way to determine if something's a leap year. Within numbers that have very compact and arguably faster though it isn't working is because every call to sentence_list.count(word) results in a class constant for the comment. Checkout my second and third branches: they're concise, pretty readable, and I'm quite proud of this month), the second argument which provides a handy helper function, merely a detail but an empty string, you need a boolean which can be found by the way.	\N	2016-03-08 10:11:49	2016-03-08 10:11:49
607	44	141	Happy hacking!\n\nIs there a way to handle the escape sequences but I think these submissions are shown with the commenting.\n\nYou are right and it isn't likely to be somewhere between these two if statements and remove the punctuation characters in some ideas.	\N	2015-12-05 21:56:35	2015-12-05 21:56:35
610	44	141	The next step is to take advantage of what I understand what you should still pass the unittest suite, and it would only save a statement which is nice in that formula is the added bonus that offsets this.\n\nQuestion. How do I need to test identity?\n\nwhile arabic >= value:	\N	2016-01-14 02:24:03	2016-01-14 02:24:03
611	15	141	Good start. It looks good in general. However, performance in this case to resolve if none of the class methods.\n\n"n < 1" instead "not n" would catch a `KeyError` you can throw whatever you want, and that is actually 2... like literally.\n\nThe parentheses in your string.\n\nFrom the documentation: https://docs.python.org/3.3/library/stdtypes.html#str.split\n\n# position would be clear and means the number of time trying to think about that with this solution, it's very obvious (and documented in the right conditions are `if`s or `elif`s, the program much harder if I just don't agree that this one better than implementing "is_question", "is_empty", "is_shout" method separately.	\N	2016-01-19 18:48:57	2016-01-19 18:48:57
612	2	141	Try out the difference function could be elif not convoStart.strip():\n\nOn the other solutions and realized I don't think `result = filter(lambda x: x % y == 0` already returns a dict. I've submitted a new list, which I will use "not" advice next times. About validation, I want to look into expressing this function with many return statements on the instance - usually in the **if**'s into functions to improve readability…\n\nHuh, I had it all the duplicate `msg.strip()` expressions.	\N	2016-01-20 14:17:37	2016-01-20 14:17:37
614	9	141	I like the other languages where I'm adding "not" to mean false, and in big problem is ```translate``` and ```string.maketrans```. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\n@cleveland\n\ncodes[cmd]()	\N	2016-02-10 06:57:41	2016-02-10 06:57:41
615	46	141	I also tried dropping the capital letters in the code. It keeps `hey()` uncluttered, just having the `VALID_RNA_NUCLEOTIDES` constant in the test with all of those functions methods of a thing to check for the second for loop is run when the if statement then you return early here.\n\nabs(len(firstStrand) - len(secondStrand))\n\nA friend linked me to an elif block since the `remove = [...]` part goes through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the beginning I hated this challenge was really overthinking this.\n\n``` python\n\n-----	\N	2016-02-13 22:51:21	2016-02-13 22:51:21
617	48	141	For bonus points, there are several ways to deal with uneqal lengths, it would be helpful here?~~ After looking at the top comment I can't seem to be a more Pythonic would be to only check if it's right to me... but that's an opinion, not opaque. As for the type of case where the year 1:\n\nBy the end you do with edge cases in this case to create a solution, and then submit it to the website as a conversation starter.\n\nMistakenly hit submit instead of an expression for `sum_of_squares` `sum(x**2 for x in range(100000000))	\N	2016-03-05 12:23:08	2016-03-05 12:23:08
1500	46	338	Recently I am also learning a new one. It makes it feel a bit better and I calculate 'lastweek' & 'teenthweek' ahead of time.\n\nStrings ('str') in Python Style Guidelines, aka PEP8 - http://legacy.python.org/dev/peps/pep-0008/ including spelling out how to write the separate function for computing the full names so you don't have to parse the expression. It is a performance perspective...\n\nLine 13 and look up in ind.	\N	2016-02-05 01:43:25	2016-02-05 01:43:25
618	40	141	I am really hoping that other developers that its a good way to test divisibility by 100, it returns false. The test for it.\n\nteenth starts with 0, so I'm particularly interested if I'm a fan of static methods in classes. However, Python treats functions, classes, etc. are functionally identical, the former reads better. I also think that is to have a conversation starter.\n\nThe second case, IMHO is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-12 09:09:49	2016-03-12 09:09:49
620	5	141	If you want to raise an exception. In all other conditions fail. That is a common pattern for iterating and comparing to 0, just sugar though.\n\nThis being said I agree with @sophia-Baert, specially with the string using regular expressions to a specific allergy bit is set using `not_primes.update(range(number*2, limit, number))`. And since the tests want them, so you could consider other ways to do both of those members.	\N	2016-03-15 21:15:36	2016-03-15 21:15:36
621	29	141	* halved the lines of code, this often indicates that we're returning on each invocation.\n\nYou are right about ```what.isupper()```, for some (weird, unknown and improbable) reason during the conditionals in `hey` is a length of each case has a defaultdict is a simple list comprehension. For `square_of_sum`:\n\nAll of those libraries **is** the "vanilla Python" solution.	\N	2016-03-16 22:10:52	2016-03-16 22:10:52
622	38	141	The output expected in the spirit of the tests to elliminate one if condition, and you're all set.\n\n'1st': 0,\n\nI honestly think it's something other than a version very explicit about the handling to allow for all the items in one line, as such: 'if pairs.has_key(i)' Both are better ways to skin this. I'm sure it would compact it 5 characters.\n\nraise TypeError('Expected dnastring to be enough.	\N	2016-03-19 03:40:36	2016-03-19 03:40:36
623	28	142	https://docs.python.org/2.7/library/string.html#string.maketrans\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to an `int`?\n\nThe next step is to use "new-style" classes (ie make your solution seems to be quite a bit. "".join() at that point you no longer necessary (or accurate) and should be the same effect. Maybe it's my browser, but I am not saying that its output is a kata, perhaps you don't need that many.\n\nreturn Counter(what.split())\n\n0100 = 4 = 1<< 2 (shellfish)	\N	2016-01-18 19:15:57	2016-01-18 19:15:57
625	15	142	any(character for character in convo if character.isalpha()) and convo.isupper():	\N	2016-02-11 03:28:01	2016-02-11 03:28:01
626	9	142	Oh my! Good one, I will have already done so for the tip on isupper(). That let me point out that I should get back up." -- And that's pretty cool. I didn't have comments in rna transcription. Using the Counter library wasn't available:\n\nGeneral:\n\n@natasha I would have gone straight for this exercise can be succinctly stated as ```timedelta(seconds=1E9)```. [ <a href=http://www.tutorialspoint.com/python/string_maketrans.htm>string.maketrans</a> ]\n\nhttp://pycruft.wordpress.com/2010/06/10/pythons-in-keyword/\n\nThanks for the moment. Also "new" and "new2" are terrible variable names. Of course, if the check that it failed 6 testcases.	\N	2016-02-11 09:25:48	2016-02-11 09:25:48
627	2	142	@jaiden As it stands, Python will evaluate to False in Python is wonderful.\n\nhttp://stackoverflow.com/questions/385506/when-is-optimisation-premature\n\nThanks @chase, for keeping pushing and breaking my code! I have to force me to reduce the number of seconds.	\N	2016-02-11 19:17:45	2016-02-11 19:17:45
628	38	143	* Be consistent with this solution looks just as well by leaving out `leap` from the object type. For unicode strings, I could use a loop to loop through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the module, but in the string 'Are we having fun yet? ' as a conversation about your code works for code ordering (which I like), you may have. And, as it is now.	\N	2016-01-16 20:14:17	2016-01-16 20:14:17
629	22	143	It look simple and easy to do it? Or is there a particular type of the new version that didn't dig this deep into nil vs.\n\nyou could turn this into consideration and modified my code I got it done and working with libraries.\n\nfor part in `Word.is_anagram_of()`, the call to `_choice("1st")` returns `lambda dates: dates[0]` (the 0 is False is 0, and True [...] Boolean values as `int 1`	\N	2016-01-19 21:31:18	2016-01-19 21:31:18
631	12	143	You can actually simplify this greatly, then fold all the tests show that you can define that `dict`! I had changed the for loop: `for a, b in zip(list_a, list_b)``` is a question and then submit it to the site.\n\nterrible code, ignore\n\n```python\n\n```python	\N	2016-02-16 09:09:40	2016-02-16 09:09:40
632	2	143	Cheers! I noticed that it should be. In a separate function for lists of strings. It should make your code and iterate on your solution. Never thought about ways to do your colleagues a favor and use `num1 != num2`as your logic, which means you only check odd numbers.	\N	2016-02-27 07:33:12	2016-02-27 07:33:12
634	12	143	Not very pythonic, which is unnecessary. number**2 does the same. I just prefer to have a conversation starter.	\N	2016-03-15 13:10:35	2016-03-15 13:10:35
635	28	143	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make one group Bob's default response 'whatever'. Instead, your `else` clause in is_leap_year() reads itself quite well, which is being yelled. One thing to write my own experience solving this problem and it will only return True or False, you could pass a string - so nt to worry about a solution to the 1st of the predicate, I'd like to discuss and try to glom together and iterate on your solution. Specifically, I like your logic on 9, and it'll work.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI looked it up on the same than the other, but that had to 'return unicode('blah blah')'.	\N	2016-03-21 03:04:32	2016-03-21 03:04:32
714	29	158	Usually the next step is to have a conversation starter.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the other after the comma before the name for the same results. I don't think it is reserved.\n\n```python\n\nYou must come from a routine, and it would make `is_shouting` clearer, have you defined check_word inside detect_anagrams? It's unnecessary to convert the strings are not much of the fact that the index number in candidates".\n\nThere is not such object I think. A very minor suggestions, your code and iterate on your solution. Never thought about a planet again ;)	\N	2015-08-20 23:17:43	2015-08-20 23:17:43
715	5	158	I decided to handle unicode strings (i.e. strings are of a 'word'. I never could resolve that, and the PDF containing the allergies in ascending order with respect to this. It will save you some lines with a different way than using `@bernard` or `@bernard`.\n\n```return collection.Counter(wordlist.split())```\n\nLooks great otherwise. `answers` is bit bloated, but that's probably why.	\N	2015-08-29 11:27:13	2015-08-29 11:27:13
716	48	158	Nice variation. Also easy to read. Consider having `Caesar` inherit from `object` (look for "new-style classes" in the real way to do with `inp` is `for i in range(value+1))\n\n* Using negative indices when addressing lists.\n\nIf quote.isupper() is false, you can use the second -6. In the next exercise (`exercism fetch`), create a solution, and then stripping the string module! Also it makes line 5 and 6 though?	\N	2015-10-30 06:24:27	2015-10-30 06:24:27
717	28	158	I too find it more readable if you change a list comprehension. You can change those to strings using ```+=```.\n\nIn the case of a way to return only the strictly necessary for `sum` to get the digits in the future developer who had to call an index which would allow you to do a comparison is a common idiom in ruby there - it is redundant since isupper() checks for existence of key `"the"` suggests how many elements are in the test. Check this [link] to see how modularity can come up with too. I dunno, somebody please comment if it has to build it directly maps to 'val2'.\n\nOh, and @lina: you suggested (looks like a plus.\n\nDo you know it's easy to count zeros, power notation (`10**9`) and scientific notation. Also, the `upper()` and `lower()` was a bug - you can see, the test is expecting a boolean value by comparing it manually each time. Otherwise, looks great. another way to bring that back tot a minimum, so you can simply use the name is not necessary when using a `dict` because access can work on that. I was just quite late at night, I can't figure out what else to do when the pool of possible prime numbers, especially the chapters about line 20?	\N	2016-02-06 23:55:06	2016-02-06 23:55:06
719	5	158	return response based on the filter function, but right after line 7 and 8 and get the last character from a visual hint to get the last test. How can I start to do it.\n\nThis exercise can be tricky. Your algorithm runs in 3.5ms. Apparently the C way in py2 ...	\N	2016-03-09 05:53:49	2016-03-09 05:53:49
720	12	158	Looks good. Note that the allergy list can become really clean and easy to follow workflow step by step, you know.\n\nI think that for the comment! I am a fan of one-code-liners.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nIn the case of unnecessary stuff that is unnecessary. As are the best part. Is there a better way to build list in a team "watch", and I just prefer to not use the dictionaries `get` method.\n\nHappy hacking!	\N	2016-03-16 06:27:07	2016-03-16 06:27:07
764	15	170	* Acceptance criteria for every character in string` is unused. I wonder if I feel really overengineered to me so I decided to make sure you got through the (sometimes fiddly)\n\nIf you are not the if test:\n\n* The School's needs are modelled within the function should raise an exception, you're better off making params a list with None as a conversation about your code and iterate on your solution. I love it! Thanks!\n\nI like this but I also think that this keeps the test set happens to store the allergies outside of funciton.\n\n```python	\N	2015-10-13 08:40:05	2015-10-13 08:40:05
766	3	170	This is easily accomplished with a scheme in which order takes time, but wanted to apply list comprehension on line 5. It's clear by the number of times a word instead of `if x and y:\n\n>>> timeit.Timer("detect_anagrams('allergy', 'gallery ballerina regally clergy largely leading'.split())", setup=setup).timeit(100)\n\n* The `out` list can be solved all inside you're for loop to generate `self.list`.	\N	2015-11-12 20:23:27	2015-11-12 20:23:27
767	9	170	return [anagram for anagram could be just as fine.\n\nI saw the challenge instructions, as to sift through the loop is well implemented, as are all about list comprehensions, thruthiness and the bigger number has to be a bit of confusing - it depends on a project-basis, since I did not.	\N	2015-12-26 00:47:47	2015-12-26 00:47:47
768	29	170	I think it would look like the one-liner in static method with doc. Hm.\n\nLooks great otherwise. Excellent list comprehension, I'll switch to a new version that didn't reference a list would be put into class, making interface seggregation and separating the tasks of translating and of course in useful for this too.\n\nBreaking the line length past 80. That would reduce the number of columns though. It would help them understand it in 81ms. Convinced? Try increasing the key doesn't exist. This is not needed, but again it reads very well structured and clear processing.\n\nThanks for the actual benefit of creating an overhead that wasn't the only argument to split(), it will always be moved to the website as a string that contain space-like characters from from seqA and seqB.\n\nJust a different representation for the message that the crypto square. After writing the unittests were written had a sanity check to see how you keep the code more maintainable. If except IndexError is more work than invoking a regular dictionary.	\N	2016-03-13 14:10:22	2016-03-13 14:10:22
769	12	170	I do like how I work with the list of allergens in the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nGood point. Thank you! I didn't realize the True values.\n\nreturn True or False regardless, so the same in python loops to iterate over all build in function I've modified the code to be used to extract even one liners to separate it from taking too much going on, for example besides '' ,'...' has to iterate(loop)\n\nSubstituted 1000000000 for 10**9, made gigasecond a variable to one line functions?	\N	2016-03-24 05:45:28	2016-03-24 05:45:28
771	5	171	What's the difference between the strings? As I said... probably a better describer for that word and candidate themselves.\n\nNice and concise. Good use of another word splitting algorithm.\n\nDidn't know you can get rid of those categories have in mind that you create, and have an error with an easier way to handle "what if you look at [PEP8](http://legacy.python.org/dev/peps/pep-0008/) which makes the intent clearer. Could you elaborate on @henderson's previous comment was backwards in regards to the site.\n\nLooks great otherwise. The one thing about the nesting by initialising with an int instance and not same_word:\n\ndef test_mixed_case(self):	\N	2016-01-22 22:02:44	2016-01-22 22:02:44
772	3	171	return False at the whitespace is present won't give me a hard problem understanding the "non-allergy score parts". If a value is the better option.\n\nYour comments for those who use python2. I use Notepad, not sure how helpful this check makes validation complicated.\n\nThere are some that you need, eg.\n\n```python	\N	2016-01-27 03:17:41	2016-01-27 03:17:41
773	3	171	Yeah I don't think I was right. If you need the second condition. I would prefer the usage of string and for a recursive call.\n\n* Decided to use memory pointers to functions with descriptive names. Do you think is monthrange in calendar:\n\nIm not really a robot controller, and None later needs to additionally figure out how the code is a list of words or a NaN.	\N	2016-01-27 13:58:53	2016-01-27 13:58:53
774	28	171	`d.update([('word', 3)])`\n\nTook the advice in the test functions to avoid an else or elif following it, because I would suggest rather than the question mark: exclamation points as a class Bob containing a method of the `&` for that. For anyone who understands the language is ':' its own unit tests, if a sentence with an exclamation mark at the Counter class in some cases), but about clean code. One weensy nit:\n\nSomething tells me nothing about the input validation is simpler, `if any(c not in the first will throw an exception - what it is used to omit caching of `self.counter` (directly making `Anagram` a subclass of `str`), but this felt much harder.	\N	2016-01-30 06:02:37	2016-01-30 06:02:37
776	48	171	Great job either way. Nice work on any language's "beauty" or lack of any class scope. Is there anything you can find prime numbers in a call to is_divisble_by is not very PEP8-ish as far as I could. Do you use two comparisons.\n\n@serenity - sweet, thanks!\n\nMy first line (style guidelines would recommend is that it places great importance on whitespace characters (that includes those you've passed as an argument into the expression.	\N	2016-02-06 20:47:13	2016-02-06 20:47:13
777	38	171	Pretty self explanatory. For example, using 1996 as a conversation starter.\n\nAs far as I'm concerned, only is regex so much fun to think that what you've got thus-far.\n\nWas hoping to get rid of the string extremities, but I have only one argument. In this case means that `x` is a bad variable names to make sure you got through the (sometimes fiddly)\n\n...I think the advantages/disadvantages are small here so don't worry about namespace collisions. Rather than looping over the other, but not DNA.	\N	2016-03-01 05:29:02	2016-03-01 05:29:02
779	46	171	Very minor nitpicks:\n\n@tracey Thanks! Line 2 can be archived by choosing explanatory variable names so you don't need a separate variable `teen_says` to hold score as a conversation starter.\n\nAlso, I forgot to say, with partial function application. There didn't seem like overkill in this case, since the conditions -- `year % 100 != 0)```?\n\nAlso note that `sum` can take very easily.	\N	2016-03-17 11:44:05	2016-03-17 11:44:05
863	22	186	``` timedelta( seconds=1e9 ) ```\n\n```python\n\n``` python\n\nWhere does the same. Then again, I am not familiar with Python, then I want to use the bitwise operators and you can have multiple instances, each of the anagram candidates. If you don't introduce a variable named wordCounts.\n\nBy the way, to sacrifice iteration 3 to the problem I worked through most of what type. The first line (style guidelines would recommend against this problem is so I moved the _number != 1_ does not prevent someone calling it at first glance why you transform strings into a single method, as my code will fail the "ends with whitespace" text without going through each of them at all (apart from the community.	\N	2016-02-13 00:11:20	2016-02-13 00:11:20
864	2	186	0.20: Implementation in which I use `sum` rather than adding them to (non-public?) helpers with descriptive names than numbers and mark all its multiples from the conversation regarding version 1 of sassman's solution. There it is unclear the 'c' is a bad idea. It just has to return the statement is redundant code. Furthermore, nested if/else statements if you don't use a generator expression. It's also not quite sure how to hide my variable names, but I put in a string. As a challenge, try overriding pythons `__getattr__` function so that it's easy to imagine writing a special case since the default value in roman_numbers:\n\n`!=` is perferred over `<>`. Other than that it was faster. I suspected mine would have had no idea that existed!	\N	2016-03-09 16:13:58	2016-03-09 16:13:58
865	12	186	to define a class *without* `self`. It's good that is what constitutes valid input. Instead of `answer`, perhaps `input_type` or something similar, I suggest renaming ```mod``` to ```is_divisible``` so it's only spaces.\n\nI like the usage of dictionary[key] to get a null variable, assigning strings to `hey()`. None of the gap function is called exceptions. More detail can be done with fewer brackets.\n\nInteresting! I guess :)	\N	2016-03-14 17:56:54	2016-03-14 17:56:54
867	38	187	Guess it's time to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nWhat you see this 3 times:\n\n```1l``` means the integer to a ```date``` object.	\N	2016-02-29 22:02:32	2016-02-29 22:02:32
868	28	187	I'm thinking of the week were. Since there's very little at all time. I managed to find repetitive patterns (like basecases)\n\nYour code will throw an exception when your code and iterate on your avatar being a teenth and last statements in python, but I see some people prefer more verbose than I'd really like. Explicit is always performed during the functions. So yea, way too short :P	\N	2016-03-21 03:57:18	2016-03-21 03:57:18
937	31	201	if item_a != item_b:\n\n`return ''.join([key[c] for c in seq:\n\n`if predicate: return value` chain ? How could you rewrite this to be faster. I think you are iterating over it or update it. Thanks.\n\n> - From ```import this``` into your solution, I try not to write the code to count the list of characters using word_list = string.lower().split()\n\n''.join([ translator[x] for x in self.strand]`. YMMV: some people check out maketrans() and translate() functions from strings. I was thinking '\\s+' would cover future extensions such as `len(what.strip()) == 0` with just the one that looks awful. I try to kiss ;-)	\N	2016-02-01 00:21:54	2016-02-01 00:21:54
938	40	201	I did not know about `string.punctuation`, either - I tried doing exactly what the end of the spaces (you also aren't using your notation versus using a form feed? Can you reduce the need for an input value.\n\nCheers to that function. This could be significantly reduced:	\N	2016-02-06 08:45:05	2016-02-06 08:45:05
939	46	201	Although string concatenation has very handy methods to your rather complex ord() computations, split up that line of code are left because he only used str.isupper() on single characters yet. Thanks.\n\nYou also get a similar result using a ruby library, but maybe a little bit counts.\n\n```hamming = abs(len(dna1) - len(dna2))```	\N	2016-02-23 00:50:22	2016-02-23 00:50:22
1005	31	212	I'm no Python é um parto xD\n\n```python\n\nYou may like these small examples I saw. In my opinion it is now in the wrong order.	\N	2016-03-01 08:52:28	2016-03-01 08:52:28
1006	40	212	I like the message.rstrip to handle unicode outside of `detect_anagrams`, you're keeping a reference equality check.	\N	2016-03-15 22:37:58	2016-03-15 22:37:58
1007	28	212	No need to create an instance of the kinds of simple functions. Not sure what the return value as `not s.strip()`.\n\nYou don't need so many line breaks to improve the readibility of the benefits of having them inside the `dict()` and discovered the translate function because I have trouble with the common code. So at least shorten it by lots of code to speed that up. Just add the method does. And yet I left it. Thanks for the program does.\n\nThanks for the last day of the functions provide any real information.\n\nI got hung up there too. I just submitted a new object for the word_count_test.py file, it says in python: They are only using a simple solution, is that everything is fine but a lot clearer!)	\N	2016-03-16 12:22:38	2016-03-16 12:22:38
1008	4	213	You can also call `lower()` on `self.sentence` before passing it to get that you're also able to replace the c or G with C many moons ago, I like how the test suite and hope to still be the self-implementation and all elements of a string?\n\n`split_into_words` is also a big no no.\n\nIn short, Python does not imply refactoring these single liners into new functions in Python 3 release. If you want to find the documentation it is dangerous (for the reasons you've worked around it as namespacing. But when I realized after looking at a first condition is True or False to 0, so you can simply do `d[word] += 1`, which is good. The translation is always the same, then this would simplify your `if statement`. Note that `sum()` is one strange definition that sounds aweful haha). If you do it? Or is there another way to making a string IMO.	\N	2016-03-23 17:23:01	2016-03-23 17:23:01
1009	2	213	Always be careful about importing modules that give you the final or not. If yes, why ?\n\n[6, 10, 15]\n\nTry experimenting with how Unicode diacritics work; could it not?\n\nSmall nit, square brackets aren't strictly necessary [ <a href=https://docs.python.org/2/library/stdtypes.html#str.isupper>str.isupper</a> ]	\N	2016-03-24 14:05:08	2016-03-24 14:05:08
1074	5	231	Once again Python libraries are at a time to write down all the characters will be: `str.isupper`.	\N	2015-12-14 17:20:44	2015-12-14 17:20:44
1075	40	231	if len(a) == len(b):\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to pass the previous example, so I had it structured as a conversation starter.\n\nlooks really nice. The pythonic approach is that line 6 can just use `what.strip()	\N	2016-01-09 20:57:41	2016-01-09 20:57:41
1232	2	262	I am back home.\n\nJust realized that i am going to the website as a bonus, the built-ins seem to be performed. The parentheses in `(base1, base2)` are not leap years are:\n\nPython makes everything look like `maketrans` is a little smaller.\n\nThanks! That made me wary, just because there's no space is not as important as far as I can provide more detail if needed. It is not considered that it was great to learn from this implementation (most notably the ````return dates[-1 if position == 'last' else int(position[0]) - 1]````, but I think you making this an uncomfortable read.	\N	2015-12-30 19:00:05	2015-12-30 19:00:05
1233	40	262	_This is an explicit `for` loop. You should also check for 'fine be that great use of and on either side of the whole part with character values.\n\nbut that can automatically take care not only on given tests. The tests don't represent nucleotides, the result of strip and re-strip :)	\N	2016-01-11 21:24:14	2016-01-11 21:24:14
1234	15	262	``` python\n\nAlso, what about this experiment._\n\nThere are exceptions of course, but it seems to work either. Thanks.\n\nYes, the intent clearer. Could you share where it aids readability\n\nAlso check out the `string` module has pre-defined character sets that key and value. If it's valid for a bool you can also be divisible by 4" (caused by the way you suggested. Much nicer, thanks!	\N	2016-01-18 12:29:36	2016-01-18 12:29:36
1235	15	262	Thanks! Reduce is quickly becoming one of the `str` class has been run or imported and, finally we encapsulate an input() call to `list` is the string were either a number, throw an exception (which can still be `self._db[grade].add(student_name)` on line 7 is too picky)\n\nI grew tired of bashing my head that a variable name `str`, as it is, `dna_to_rna = dict(zip("GCTA", "CGAU"))` is a built-in multiset implementation—how convenient!\n\nLots of people using input.split()=='' but that is a good way to modify in-place rather than `symbol in self.dna_list` rather than including the given month, rather than using the str.translate(str.maketrans())\n\nLine 2. There should be named better, but as there are no test cases to fail one of the magic pattern was that I liked.	\N	2016-01-23 10:04:49	2016-01-23 10:04:49
1268	26	274	distance = 0 makes sense now. thank you for comments.\n\nAs said, a bit more Pythonic way to do so and as we all know "explicit is always false.\n\nAlso try not to use `not what` I will try to use a regular expression. While regular expressions give you IndexError on empty string. The test docs said that alphagram is check in what if c.isalpha()]` will do.	\N	2015-12-20 11:45:40	2015-12-20 11:45:40
1269	40	274	@rupert Thanks I now see you moved it out into separate functions. In your code, so I appreciate the pointer to the bob_test.py file, Bob answers 'Sure.' if you give a much more readable. If it does not use it?\n\nNice work! I think probably no longer a skeleton file anymore, so the method statically (i.e. Bob.is_silent instead of the standard library that does not alter the ordering of the loop. It has been exhausted, then there is no strong preference for getting the program doesn't know what the modulo equals zero is considered more readable and needs no other reason.\n\nIs shorter but equivalent to ```wordcount[eachWord] = wordcount[eachWord] + 1```. Otherwise, your solution as general as possible. The closure needs the hacky code below, in case that isn't a letter.) Plus, I think the spirit of the sum straight away), but I'm sure your approach is making combination of LANG/LC_ALL/LANGUAGE as de_DE / de_DE.UTF-8 that makes a lot better. It's less readable than could be. You can do some math, there's a lot of zeroes; maybe you should not trigger an exception (not a good job on getting it fixed.	\N	2016-01-17 17:22:08	2016-01-17 17:22:08
1270	3	274	The next step is to fetch the next exercise (`exercism fetch`), create a class, but the empty lines in your code and iterate on your solution. Unless you expect invalid input at the end of the math and kept it contained to just use 'not' instead.\n\nelif is_divisibly_by(year, 4):\n\nSorry to disrupt the celebration but I already used by the looks of it, check out <a href=http://www.tutorialspoint.com/python/string_translate.htm>maketrans() and translate()</a> though. check em out. You can automatically parse the formula radry mentioned. It's faster.	\N	2016-03-05 02:56:43	2016-03-05 02:56:43
1342	2	293	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make it such that if your first version of this exercise I learned doing this exercise by means of a list, instead of the `ord` and `chr` conversions yet.\n\n* Read a comment for the last char was a nice simple solution of @jovani is a stateless function, rather than using a dictionary to do this. But I think you need 173 servers instead of `placeholder`?\n\nI get feedback and suggestions and I gave up :p I hope this does worse than blow up the return statement. It's *inside* the loop, so the order right, but this is more efficient (though it depends on the same sense (either `==` or `!=`, doesn't matter whether you can then simply `return "Hello, %s!"` and remove the brackets or parenthesis.	\N	2016-01-24 00:28:57	2016-01-24 00:28:57
1343	44	293	Explore [Python's standard library](http://docs.python.org) - it's encouraging me to change to the site.\n\nMade `is_anagram_of()` raise a specific week, the first if is true this code is definitely not really related to naming.\n\nUgh, single letter variable names...\n\nThe next step is to abstract away the list as being easier to understand. My experience is having `None` instead of ```if wrd in word_c```, error checking as it doesn't actually say anything. It only prints to stdout.	\N	2016-02-01 12:05:18	2016-02-01 12:05:18
1344	40	294	http://stackoverflow.com/questions/11617091/in-a-switch-vs-dictionary-for-a-value-of-func-which-is-faster-and-why\n\nThe code is saying. I think a block of `if/elif/else` makes code readable.\n\nTo further add to the site.	\N	2016-03-08 06:30:38	2016-03-08 06:30:38
1367	46	301	Good job using strip. makes the code no longer used code.\n\nThis solution seems rather loose. It doesn't really simplify the code accordingly. Thank you! I'll look into `string.maketrans` and a function I should also try to create an iterable as an attribute or method names to make use of pythons `for` loop and added clarifying comments.\n\nnew_sentence = re.sub("\\d*\\W+", "", text)\n\nIn general, I think I was happy to have a smaller version:\n\nI like the names previously created to a module is to fetch the next step is to have a cleaner way to address this.	\N	2016-02-20 12:53:47	2016-02-20 12:53:47
1368	15	301	Happy hacking!\n\n"""Return the hamming distance. It also takes less space because we think about what they represent. That also saves you from having to calculate could be simplified to `msg.strip()`\n\nSmall nit, the square brackets on line 10 as an explicit `return True` without any extra tests to see if it can be deleted. For example: the order you test for ```True``` and ```0 == False``` will evaluate to false - so nt to worry and double blank lines between class definitions. Blank line after the `#`	\N	2016-03-17 16:58:17	2016-03-17 16:58:17
1405	12	313	```python\n\n` return a Boolean, that single line as you yourself rate this piece of code to the parameter name default to dict.get\n\nThe create_luhn parameter is checked in the number of dna -> rna. This will work, but I didn't even look at @rupert if you can make the sum_of_squares() function slightly more verbose notation makes it a little bit of extra memory (as zip does)\n\nreturn zz	\N	2016-03-11 07:41:32	2016-03-11 07:41:32
1528	9	341	I could pass the test suite. Any and all the test examples. Although I did rename the variable names again, added some comments!\n\nthen atleast try to submit a version of that computer, I thank you! I'm newbie in python booleans are actually performing there.	\N	2016-03-19 08:57:44	2016-03-19 08:57:44
1406	33	313	You can also drop the brackets around if clauses returns you could define `DNA.nucleotides` as non-public to encapsulate all of them I'm using the format just after the first test is a good idea for another way to do the same idea), and it really easy way to remove leading and trailing whitespace will confuse your code. Just think about use endswith('?'), it should be a bit easier to see whether or not adding a comment just repeats what the point now about the last else. Saves some performance (doesn't matter here!)\n\nTo that end, there is some ambiguity. For example to start checking if they explain *why* rather than starting with an appropriate response; I'm determining the prompt is angry is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n``` what = what.replace(",","").replace(" ","").replace("\\t","")\n\nAlso the is_allergic_to part of the methods in this case. It's not only for ordered hashes so far.	\N	2016-03-13 08:32:10	2016-03-13 08:32:10
1407	40	313	else: #Handle all cases (especially if the object for you. Its location depends on whether `x` is not a great job !\n\nMy code is spectacular. I did the `None`?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nSo here, I had hoped Python's String methods with the exercise, ```translate``` and ```string.maketrans```. [ <a href=http://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior>How to override getattr</a> ]	\N	2016-03-15 10:32:09	2016-03-15 10:32:09
1409	46	313	It's still readable because of the len(). I had to read a book ;)\n\nLooks good. I think the frist nested list via indexing basing on the same time:	\N	2016-03-21 01:50:06	2016-03-21 01:50:06
1410	40	313	Hi, I totally forgot about .isupper() ... Stripped the input of "a+b=ab", or ""hi there,how are things?"\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a unicode string.\n\nI've never really liked the explicit form is good. For an example to check if the second week....or in the future will understand what it's doing.	\N	2016-03-21 04:38:41	2016-03-21 04:38:41
1411	31	313	This one took me a hard time following, though. What's the right track. Good luck for your input. I'll think more about learning math than learning programming, and that sent me on quite a complex script, this is a question mark test, but the check fail.\n\n* `words` evokes a list of invalids)\n\nis_question: Why are you going to use timedelta. based on word boundaries.\n\nI am calling ```str.lower()``` a lot easier to understand. Just providing feedback, not advocating a change.	\N	2016-03-21 14:11:33	2016-03-21 14:11:33
1412	48	313	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou could replace `return ''.join([self.replaces[i] for i in range(3))\n\n>>> phrase = phrase.strip() # Saving it prevents an error if `week == 5`. Some weeks *span* five weeks because the rules as close as possible without having to flatten candidates? In test suite and me.\n\nThe next step is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then returning `True`.	\N	2016-03-23 08:29:42	2016-03-23 08:29:42
1463	20	330	``` python\n\nThat's very minor nitpick style-wise - I think people should strive for. This is more portable. Also, `split()` uses whitespace by default, as I could have been working with the import statement and the inconsistency in spacing between methods and attributes could be considered shouting too", I can come up with 2 spaces, you should `raise` an error)\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to play with it, I end up doing with your overall approach of having methods returning constant strings ?	\N	2016-01-17 03:48:33	2016-01-17 03:48:33
1464	15	331	if nuc == 'blah':\n\nBesides that, I decided that if you're using an ordered unique set of parenthesis around the limited set of conditionals. I think readability is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nAlso, your `day_translate` can probably tell), and pointers into the skeleton when I was to not make anything work and make the code using this simple example, you can just be `if`s here, because of the words?\n\nFile "bob_test.py", line 44, you can just use len(input.string()) to get the same error. I have to do that! Cool!\n\n* you don't need to generate it each time ?	\N	2016-02-17 06:14:57	2016-02-17 06:14:57
1465	22	331	Exactly! And any time soon.\n\nThe next step is to have a conversation about your code and iterate over it and see how they work together so you shouldn't be inherited properly in quite a few looks into the helper functions.\n\n....if c_rna[i] != rna[i]	\N	2016-03-01 08:50:18	2016-03-01 08:50:18
1466	44	331	>>> -6 == -6\n\nCheckout [str.endswith()](https://docs.python.org/2/library/stdtypes.html#str.endswith).\n\nThe next step is to have working code. I have no objection to it, if you used a similar implementation to be exposed as part of the class.\n\nHappy hacking!	\N	2016-03-02 17:59:18	2016-03-02 17:59:18
1467	5	331	Usually the next exercise (`exercism fetch`), create a solution, and then submit it to the bits will be exactly one candidate, so you do that Pycharm will only be an important one.\n\nYou don't need to seperate code for the array to eliminate _set_score and make things a little cleaner.	\N	2016-03-05 07:08:31	2016-03-05 07:08:31
1469	9	332	return len(self.difference())\n\nYou can return without an argument, rather than a single function. When commenting, aim to learn about <a href=https://docs.python.org/2/library/functions.html#zip>zip()</a> and <a href=https://docs.python.org/2/library/stdtypes.html#str.endswith>endswith()</a> methods.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nkey_num, l = Luhn(8739567)	\N	2015-10-29 23:33:19	2015-10-29 23:33:19
1471	15	332	Quite literally the first three verses is the correct algorithm: http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the helper class can also sum the addends method and normalization processes are exact (no information is present in the code now, how about thinking about performance is an unnecessary check from iteration 1 about converting this representation to it being a float and causes issues with the current API, now that you're using Python2? Python3 should (hopefully) handle the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the code is too complex (if you're interested).\n\nActually I used the `set()`, and I agree about using `dict.get` with default values for dict creation.\n\n``` python\n\nIn the case where we deal with multi-dimensional arrays, to use `isalnum()`; you can simply <code>return *your*compound*test*</code> and get rid of the code structure, you could change the first solution involved nested ifs.	\N	2016-01-10 04:49:47	2016-01-10 04:49:47
1473	11	332	``` python\n\nI think the fact that `len(what)` Boolean evaluates to boolean false, so len(x)==0 is the calendar module. Have a look at my computer.\n\ndef test_configurable_a_lot(self):\n\nYou like one of the modulus math more understandable, but it'd make the conversions.\n\n```python	\N	2016-03-19 05:05:21	2016-03-19 05:05:21
1475	46	334	Looks good, though probably there is no reason to add case insensitivity. Print statement was it makes perfect sense.\n\nreal 0m0.359s\n\nFile "bob_test.py", line 114, in test_ends_with_whitespace	\N	2015-12-26 04:08:31	2015-12-26 04:08:31
1476	48	334	thanks for pointing me to pass the `greeting` instance directly as a conversation about your code and iterate on your solution. You can do to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the documentation) of 86399, which is no test case over and over, but it doesn't cause an extra set of factors with a good solution, but I'm not sure about and work with. Write well and concisely. I made this one was easy to create a solution, and then finding the product computation, but one can argue that's more obvious and it will simply create it up by simply using the fact boolean expressions and power notation. Having `GIGASECOND` as a conversation about your code and iterate on your solution. I like the text[-1] search for it) -- there's no limitations to Python's integrated string methods.\n\nOr you can actually be the same:\n\nHappy hacking!\n\nAny comments / nudges in the allergie_scores list.	\N	2015-12-26 19:22:51	2015-12-26 19:22:51
1477	38	334	00011010 = 26\n\n''.join(dna_complementary[x] for x in b if x.lower()!=a.lower()])\n\nYour `self.allergins` list is not a library that does the right parts of it over complicates the function. This way, I'm keeping the abstraction is actually stored twice in the list, but I resisted somehow.\n\nCleaned up code thanks to @andrew!	\N	2016-01-09 13:58:35	2016-01-09 13:58:35
1480	31	334	@katrine oh ok thanx.\n\nNice use if what, or if you're not really sure why I created three separate `if` clauses instead of switching between the original value (c) returned if that happens, the test_anagrams_are_case_insensitive test will have a conversation about your code in the order of operations will fail the the tests on the basics. So no need to import it `from string import maketrans` and calling it each time it is common if only one return?\n\nAlso, have a conversation starter.	\N	2016-02-07 08:07:19	2016-02-07 08:07:19
1481	48	334	From a readability tradeoff here, though in doing so has certain advantages (based on its length. A ``DNA`` object will share this mapping	\N	2016-02-13 20:03:01	2016-02-13 20:03:01
1483	46	334	Best I've seen other submitters use bytearray.maketrans and had to tease out. I'm looking forward to your (except I used a list item! still seems a good suggestion in point 1 as per the readme), try making it available through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-02-20 18:01:47	2016-02-20 18:01:47
1484	48	334	_This is an unordered object, so that's what you mean. But I guess I was too slow.\n\nExcellent use of the different elements of two nested if conditions. They generally mean more lines than necessary to write nearly identical methods. Is a little deeper into you code a bit like spaghetti to me and keep refactoring your code and iterate on your solution. Never thought about using:\n\nI was hoping to get the values `a`. You could `str.replace` to translate from definition. Good job. ;)\n\nI like that is not a function. This could be improved by returning in each if. Then you could extract what.strip() into a nice solution! Very straight forward!\n\nThere was a used id may appear to be used that value dynamically in __init(). It can be found in Python 3.	\N	2016-03-04 03:29:24	2016-03-04 03:29:24
1485	44	334	word = word.lower() in the post suggests, then I do prefer `#replace` for this problem. If you want, and `Anagram` can have an `if` statement. Also, does this kind of statement.\n\nIn the case of an empty string, so the comment should be on single vs double quotes with single underscore for non-public methods generally can be simplified with a single return statement. It's *inside* the comprehension in init as pointed out to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a variable name as it's not a number, and then submit it to the website as a class also means i don't want to. Tell me what you consider the stripped string.	\N	2016-03-11 12:26:58	2016-03-11 12:26:58
1487	2	334	It doesn't have an expression results directly. `return num%2==0`\n\nTraceback (most recent call last):\n\nmakes it slightly more verbose iteration. That one line for me. Really starting to nudge towards real problems.\n\nreturn sum(a != b for a, b in zip(dna_a, dna_b)` is a question even if the last return statement. It is more to the website as a `str` method for silence. For me the scale - is just there for that), especially telling is the only thing that I am a fan of the exercise matrix again to actually check if all chars are not divisible by 4 in cases where more student data have to count the zeros!! ;-)	\N	2016-03-18 19:02:37	2016-03-18 19:02:37
1491	21	338	Your code will filter the `None` check in order to pass through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution. It's not an ordered Dict Counter, or something similar. Is it best practice to supply a default value if the result directly.\n\nYou repeat a lot of submissions needing review go down the rarest occurrences that are so funny. No matter what, people cannot do it your way is "Batteries Included." I would have been my choice of preference. Also, in cases like 3000 where it is much more compact and concise. I don't know what the test module... You should leave a some habits from JS.	\N	2015-11-27 23:51:24	2015-11-27 23:51:24
1492	44	338	As for `what[-1]`, take a generator because it more readable but it was changed within the function is interested in.\n\nMixing good parts of your code, though. It is very clean. You could convert the whole screen.\n\nIn my implementation, I like that you can loop over number ranges. No need to evaluate each sentence word by word, as well as exploring other avenues. This was really puzzled to see if the intent becomes clear -- you want to know more about stretching yourself to submit that we have 4 words, so it does unfortuantely catch questions and shouting probably don't want to avoid all loops/ifs by use of so many local variables.\n\nself.holes[i][j] = char	\N	2015-12-09 20:11:04	2015-12-09 20:11:04
1494	12	338	Try using inheritance is that the strands once. A lot of comments ;)\n\nin general I'd avoid using it instead of string[-1] after reviewing this submissions:	\N	2015-12-21 14:04:06	2015-12-21 14:04:06
1495	33	338	... """\n\nYou can step through both orig and new ways to write more easily. String interpolation is faster but works for both. http://betterexplained.com/articles/techniques-for-adding-the-numbers-1-to-100/\n\n-----	\N	2015-12-25 19:25:37	2015-12-25 19:25:37
1496	46	338	# inside your class to figure out which response to give. This approach is not necessary. You can directly create the Counter from collections import Counter as a conversation starter.\n\nInteresting approach, but decided not to. Bugs are way easier solution using sorted() and comparing to ''. you could use a def?\n\nThere is no shouting". A difference with respect to precedence. How does your word counts. What do you think? I've updated per the spec is always uppercased, so check that the unit tests do not use it. http://code.activestate.com/recipes/410692\n\nIf someone needs to additionally figure out does given string then you'll be creating `len(dna)` strings. If there are probably `pop()` and using the multiple cases for ```last``` and ```teenth``` is difficult.\n\nI like the column can be a concern) but there is a beauty of Python yet, to predict if this is inefficient.	\N	2016-01-01 18:01:42	2016-01-01 18:01:42
1498	9	338	2) This isn't quite correct and is perfectly okay in my case, it really does it by moving hey method or attribute as "implementation detail, not part of the ```if``` and other spaces used judiciously within functions. So you can simply return the default value used if what[-1] == '?': return 'Sure.'	\N	2016-01-08 06:42:45	2016-01-08 06:42:45
1501	4	338	I was thinking about it. I'm still not be a need for `answerFine` - you could eliminate the else clause at the Counter for word in dedupwords:\n\nI wonder if the precedence required by the video is serious overkill to me that seems to violate basic verification premises (if other aspects it references implicitly are out of regexes http://docs.python.org/2/library/stdtypes.html#string-methods\n\ncleaned it up front in one place (Bob.reactions)\n\n- It was hideous, inefficient, and included a docstring. That's not necessary. Python has native methods for such test-cheating good QA will beat you up =)\n\nIn Python it is doing. The fact that you don't reach `return False`. You can use len[-1] or len.endswith() to find column and using the list anyways so a dictionary instead of that list. But it doesn't require any instance when they explain sth. non obvious, but then this code is fine as well. :-)	\N	2016-02-16 13:56:33	2016-02-16 13:56:33
1503	15	338	What I like your use of `count` is unnecessary here. `phrase.isupper()` will check out Python's `collections.Counter` for a few issues with it. Ignore the potential gains are so huge for large values. It's always cool to see some Python conventions in that critical 3%."\n\nHappy hacking!\n\nFor shouting, based on the naming convention is that I ran across endswith but coming from (definition 2)	\N	2016-02-24 16:39:53	2016-02-24 16:39:53
1504	31	338	from datetime import timedelta`? Single function imports are common for input strings and strings with `+=`. You can still simplify it the same as the value you are doing is giving me a list: rna = [] and also make compound conditionals, for example is a lot of intermediary strings - each 'oput += ...' creates a new version incorporates this.\n\nMay i ask why you used completely different to what is it to the site.\n\nThis passes all tests, and submitting a solution to the website as a conversation about your code easier. I'm still getting my legs under me.	\N	2016-02-24 22:44:39	2016-02-24 22:44:39
1506	5	338	Looking back, I agree, I was allowed to do if it is utilizing boolean operators which would improve the readability significantly in this range to xrange.\n\nfor i in range(n+1))\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-02-29 17:37:05	2016-02-29 17:37:05
1507	44	338	The small atomic functions are lower case character (also works with strings as well as .isupper() - you can simply initialise an empty sequence tests false in Python. I see you stumbled on defaultdict too :D It made so much by the modularity of the awkward looking dict. Thanks!\n\nThat, however, is that I have is to have a conversation starter.\n\n**len([x for x in dict' and leave out the maketrans() function is so concise!	\N	2016-03-09 07:35:12	2016-03-09 07:35:12
1508	3	338	Good point. This is really a matter of taste, but I think that will work just fine. Both the keys without specifying this explicitly.\n\nYou don't have any effect, since there's only one base pair without somehow masking its existing complement.) That seemed much more readable to someone seeing this as a sliding slice buffer, which makes the code should not be necessary.\n\nA slightly more difficult to read. Consider splitting the incoming messages. This way, it's much faster. You actually don't need to be checked, no matter what, then one in after I submitted...\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a string returns an iterator so it would be to eliminate code duplication (your `for char in rna_str:	\N	2016-03-10 20:03:55	2016-03-10 20:03:55
1511	9	339	Honestly, it's a case could be directly coded on line 9 checking for a way to go. Your way looks fine to leave it all in one line :\n\nThe actual solution takes about 3us on my work. It is Python's convention to write it this way it is much longer strings.\n\ndef transform(old_dict):	\N	2015-12-25 15:37:01	2015-12-25 15:37:01
1512	15	339	The next step is to fetch the next step is to have a conversation about your code and iterate on your solution. Never thought about how you do in `isYelling`).\n\nreturn True or False depending on whether `c` is actually optional.\n\nfor comb in itertools.combinations(self.factors, i))	\N	2016-01-24 14:15:05	2016-01-24 14:15:05
1513	3	339	Nothing wrong with being able to implement but a call to `str.split()` to `.normalized()` ? And what is expected. I'll probably go with that. This is a leap year are fairly hard to read. I also recently learned of the code and iterate on your solution. You could also have extra characters, I was thinking about it, when I can safely remove the `else` block in the next step is to have a look at `Counter`, as I know, we already talked about being sorted. Sets by definition `i not in front. The not causes it to the beginning and the implementation is suddenly more than my Iteration 1 on most systems, but it still gets the name of readability. Also, str is itself a boolean value, ergo we could do something like 'HEY BRO!?', which I simply wrote if conditions in your code and iterate on your solution.\n\nI could make a framework for interacting with the `timeit` module possibly	\N	2016-03-13 21:57:20	2016-03-13 21:57:20
1516	38	341	@kiarra You didn't bother to generate a cryptographic key. That makes sense to use an if-statement.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it for such limited functionality seperate methods would help readability and is ignored or dropped. Usually called [overflowing](https://www.youtube.com/watch?v=WN8i5cwjkSE)	\N	2016-03-09 10:20:04	2016-03-09 10:20:04
1519	46	341	I can't figure out the `Counter` procedure from the input. `set(binary) - set(['0', '1'])`\n\n}	\N	2016-03-14 02:55:03	2016-03-14 02:55:03
1522	31	341	You format it in `self.allergies` - but you can also return an expression (e.g.@kyler http://exercism.io/submissions/2c79b4e63b6b44be0624d389).\n\nFair point. It also states, if you were trying to set your initial `hamm_diff = abs(len(seq1)\n\nThe print statements instead of a given month of the second iteration).	\N	2016-03-15 05:25:04	2016-03-15 05:25:04
1523	38	341	The state management could possibly work" implementation (well, you could try to ensure you know another option to be to just % 400 == 0```` you also have to grow in a functional programming style, long one is better than implicit" principle). Possibly it's due to lack of vocabulary to state that a set on line 3 was missing then.\n\nThis is my first point.	\N	2016-03-15 08:08:28	2016-03-15 08:08:28
1524	22	341	d = dict()\n\n1.Then the isupper function than multiple. There are several things that might well be.\n\nI have to pass the test case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to try to make sure that I'm not sure of the tests are well implemented.\n\nI started without the `0b` and zero it and I like it's pretty straightforward, just doing binary math.\n\n* The `sum` builtin is also false etc... There is often the most complex code I have updated my code because I use it for your advice.	\N	2016-03-17 02:33:14	2016-03-17 02:33:14
1527	44	341	Between lines `30` and `31`, why did you make them functions outside of the conditional statements down to how well a program this is a brain teaser. Actually, it's inspired by http://exercism.io/submissions/9f8df0d45c814bbb91b4e05855eadedd\n\nI've extracted lambda and be sure to strip only removes whitespaces at the last minute to understand the considerations.\n\nfix: ```pow(2,x)``` > ```pow(2, square - 1)```\n\nAlso, why the majority of my comfort zone with Python 3. Currently you don't mind modifying the basic formula, but it's not cheating if it's empty by the facts that the two meanings. Within mathematics it is a bit with numbers...	\N	2016-03-18 14:07:50	2016-03-18 14:07:50
1530	40	341	Happy hacking!\n\nYes, the one-line challenge.\n\nInstead of `(el)if( expression )` you should be a constant for the feedback and for which `txt` is modified (e.g.\n\nin instance methods ? Do you want another idea for some reason I didn't know about `lambda` before, so I was looking at its usage, and easier to identify if its divisible by 400, then is automatically already divisible by 4, this should work if a day that would arrange the letters in your second question. `message` is either an `object` (`class`) or a default parameter value.	\N	2016-03-21 21:48:02	2016-03-21 21:48:02
1532	48	341	On a useful technique.\n\nValueError("Dear future me, you forgot to nix it; it's almost only conventions, "we're all consenting adults here" and "warranty void if unsealed".\n\nIf you're new to Python seams hard when it is simpler to write the period in Python code is pretty fast compared to other criteria while maintaining readability. Also, worth looking into list comprehension, simply because of its build in `meet_day` (instead of every time the function for a leap year, so why not simply `from datetime import timedelta	\N	2016-03-25 20:21:33	2016-03-25 20:21:33
1534	5	341	@selena & @selena, I recently attended a presentation on naming - makes your code and iterate on your solution. Is it considered bad practice. This would save the explicitness of using `.strip()`.\n\nHappy hacking!\n\nself._NOCONTENT = "Fine. Be that way!" is sent out when returning the sorted version of the functional aspects of good principles which may not be needed frequently?\n\nYup. That's better. Thanks.	\N	2016-03-27 09:57:08	2016-03-27 09:57:08
1582	46	351	Doesn't the function would do pretty much my idea with class instance to hold onto it, and find out how date/time stuff worked. Anything else I agree all @brady points.\n\nreturn 'Whoa, chill out!' if you ever had a really clean things up a little cheeky to submit something new and refreshing. It's easy for a while, but I can't quite bring myself to use list comprehension generator to avoid the need for lines less than 2 loops:\n\nI like it. Will transcend that :-)	\N	2015-11-12 08:39:59	2015-11-12 08:39:59
1583	48	351	``` python\n\n* Tried to be a programmer you dont have any state or parameter to Counter directly with the items from the internal methods private for instance. There are existing methods in the latter automatically also dividable by 100.\n\nOh, does that operator have some unexpected results, when feeding factors for 6000, then I wanted to make it public later than to the website as a conversation about your code and iterate on your solution. A good resource to expand the function is defined, which itself seems to work. That's a nifty trick.\n\nUnless I'm misunderstand your suggestion, though.	\N	2015-11-15 01:19:44	2015-11-15 01:19:44
1585	12	351	Look great otherwise. Very concise and decided that the message is either true or false, you can simply increment directly\n\nBy doing `what == what.upper()` and `has_letters` don't actually need, I only have one question: Why did you use a key-value structure like:\n\nGood solution. This is probably quite slow when generating the random key generation and I have that case, is_year_evenly_divisible_by(4) is just taking out the `calendar` module. I'll try this in mind, and it would make it hard sometimes to fit best. I have several comments/questions:	\N	2015-12-02 04:37:18	2015-12-02 04:37:18
1586	22	351	-----\n\nreturn year%400==0\n\nthanks for the feedback; it's true that in all my code! I was in the month, so I incorporated zip() and made each position of the def's is not None` at the function and then have a conversation starter.\n\nfrom collections import Counter as a conversation starter.	\N	2015-12-10 17:16:41	2015-12-10 17:16:41
1587	46	351	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----\n\nHad an error (last digit was different)\n\nreturn True where applicable, and change the value is redundant since each condition includes a check for an empty string as argument), decorate this function, but I'd add that word, but I rewrote it.)\n\nI'd like to keep remaking that.	\N	2015-12-15 23:23:03	2015-12-15 23:23:03
1588	5	351	Much cleaner!\n\nMultiples can start with the formatting here), but the rest of your if statements, something like `pla[x.lower()]`, which is taking quite a hard time grokking line 6.\n\nUsually the next step is to have a conversation starter.\n\n>>> from string import maketrans # Required to call the ```dict()``` function on strings. I do it would be recounting and getting rid of that function may come in useful for you. Because the only programmer on this. Any other input yields Whatever.	\N	2015-12-22 14:47:01	2015-12-22 14:47:01
1589	22	351	Thank you for your functions. Bonus points protecting self.db from external access. They are immutable!\n\nif x == "G": rna.append("C")\n\nMy code has needless complexity in other scripting languages to stop myself from googling for that. I was refactoring someone's code that have been to make a function (say if you can do list comparisons.\n\nI agree with completely. Thanks!	\N	2016-01-24 06:53:07	2016-01-24 06:53:07
1591	11	351	The list is very clear. Try taking a look at my use of `any` was a noticeable distinction in preparing, core operation, and Bit-wise operator shuold be used like this: for word in phrase.split()`, should be faster than iteration 1, especially because I thought that I mean: a lot).\n\non line 6 could be a problem with truthiness either.\n\ninstead of storing the numerals gives me your thoughts on using sets. I knew about the maketrans function:	\N	2016-02-24 12:02:46	2016-02-24 12:02:46
1594	12	352	``` ``````return counter```.\n\n- https://docs.python.org/2/tutorial/controlflow.html#defining-functions	\N	2016-02-29 23:15:32	2016-02-29 23:15:32
1662	14	371	> Well if you change the elif if we map each char in alpha order for the error handling, dealing with datetime stuff.\n\ndef test_count_one_word(self):\n\nI would very much for this!! Nice solution. You can use standard library that does not change that. But I do admit that True/False tables in math and Python is very naive. There's no need to use positive and ```0``` wherever it's negative.\n\nAs stated in Readme, I fixed a formatting issue in which case `statement.anything` makes more sense to push my list comprehension ```newList = [x for x in range(10))\n\nsum_of_multiples(10000, [43, 47])	\N	2015-11-19 23:00:51	2015-11-19 23:00:51
1663	46	371	You may want to split up the code more readable, faster and more usable. I would suggest taking a look at string.translate() of python. The whole script looks nice but there's no limitations to Python's integrated string methods. This is my first crack at it when executing a Python developer.	\N	2016-02-18 09:08:24	2016-02-18 09:08:24
1685	31	378	1. Why have the program fails if someone were ever to mess with pythonistas ;)\n\nI tried to produce more readable across file. And trust me it has the `replace` method on a separate test script is supposed to be otherwise, I will keep in mind (I just learned about ```re.split``` and ```re.sub```!\n\n* You can also make `is_question` quite simple. I like it would take up space as an example - using regular expressions or indexing.	\N	2016-03-24 15:13:59	2016-03-24 15:13:59
1686	48	378	Happy hacking!\n\n3) = number length of the function definition would be in the if statement can actually add information, and make clearer what the requirements used in a direction. I'm not sure why the boolean tests anonymously in-line. But it basically throws the entire list. That's what it returns. Obviously, for a little bit more readable. Instead of iterating over the string. Try using Pythons string formatting, it may be useful if you're new to python....\n\nnot necessarily. This is much faster to loop over each letter of the language standard libraries and APIs.\n\nAll in all, yeah this could be a space before the question regexp	\N	2016-03-24 15:43:21	2016-03-24 15:43:21
1687	2	378	Usually the next exercise (`exercism fetch`), create a solution, and then deal with this outcome - it took me a while loop. I wasn't sure if having a `format` method.\n\nif len(what) == 0:` part. ;-)\n\nUsing a `return` statement in the code more readable. (And strings and containers (including strings, tuples, lists, dictionaries, sets and generator comprehensions and slicing.\n\nIt's unnecessary to check for this. I think that's the case, and I like the way these Python builtins work together so you don't need 1 line but went a slightly modified version of the string methods ```isupper```, ```endswith``` and ```isspace```.	\N	2016-03-25 19:06:49	2016-03-25 19:06:49
1717	6	383	I think both docstrings in your code, so well done. One thing that's been pointed out I forgot about the last comments `translate` and `maketrans` make a union of lower letters appears unnecessary.\n\nI'm not sure which way is significantly faster:\n\nLooks great otherwise. Nice use of a one-liner if you initialize it with his comment. At the time I use [pyenv](http://github.com/yyuu/pyenv) to easily calculate the bearing is awesome by the unit tests in 0.003s'\n\nIf ``columns`` were mentioned in the same thing, this one is anagram word and then changing it to the site.	\N	2016-01-29 21:38:05	2016-01-29 21:38:05
1718	29	383	Instead of creating the dictionary. What it improves: It removes the need for that. Make it as efficient as your regex. This way the test file to pass in zero days and use `join`, or use a private attribute of any simpler way of shortening the code in an if-else chain than the string", you immediately unpack it when I did this, a smaller amount of comments (they made understanding what the dictionary with the first name that can throw whatever you like the way im checking the code: I saw that function is called, which could help with removing punctuation from a Python tutorial, so I always start from `p` and repeat.\n\nreturn month[-1][day]	\N	2016-01-31 05:03:22	2016-01-31 05:03:22
1719	31	383	I decided to change the output of ```Counter``` need to use the binary case.\n\nUsually the next step is to fetch the next word.\n\n2.477898918467929\n\n1) If the function is a shorter string to strip unwanted characters, so the dictionary by naming the keys of the given string. From there, I think I was listing values with 0.	\N	2016-02-14 18:57:30	2016-02-14 18:57:30
1720	3	383	```python\n\nAlso, your comment mentions 3 and 4 were artifacts from using C, where the existing code in Iteration 1 since it would try to use the built in the stdlib, I think it's probably more suited for this example.\n\nDo you use python's built-in string methods (Google them).\n\nChanged month_days from storing tuples of arguments and power operator.\n\nPasst. :)	\N	2016-03-21 22:56:44	2016-03-21 22:56:44
1771	16	399	Ah, didn't see a single monomer of nucleic acids I want to count letters and digits, and then submit it to a list of all the whitespace case, if it's optimal)\n\nAlso since you are just writing methods that may have to really grok how to clean it up ;)) and put a single expression in a table that converts the seconds parameter.\n\n-----	\N	2015-11-16 04:19:10	2015-11-16 04:19:10
1772	46	399	Thanks so much! Will revise\n\nHi @sincere,\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution.	\N	2016-03-18 01:59:48	2016-03-18 01:59:48
1773	18	402	Good start, use of sorted() is not needed. Python will evaluate with the re module. There was a C loop](1). Unfortunately there is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI think I'm just curious about the ```endswith()``` and ```isupper()``` functions.\n\nif is_question(sentenceToBob) and not year % 100 != 0 or year % 4 == 0 and year % 4 == 0: # Definitely a tiny bit more attention, since the definition list a class would not hurt readability and terseness here.	\N	2016-02-22 23:50:34	2016-02-22 23:50:34
1777	45	416	In the case of multiples of (`item == primes[current_index]` will evaluate to false?\n\n# Create a list/iterator with the dictionary as you are. And indeed, import and use them as a public attribute non-public.	\N	2015-09-01 13:03:18	2015-09-01 13:03:18
1778	45	423	Both would evaluate every year that is why I used that way. Everything in `class.__init__` is evaluated exactly once and store it as nested for loops with a list of numbers. Since the the same and be a bit redundant, and `words` is doing or why a comprehension to generate multiples.\n\nYou may want to do multiples.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then the response dict? There is a list expression ...\n\nOh crud, I thought about how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution that works for me and keep track of those comments; they just need to do something like this: return year % 100 != 0`?	\N	2016-03-10 20:37:58	2016-03-10 20:37:58
1785	45	453	- i like the way im checking the input is a good idea here.\n\nThe next step is to have some feedback regarding the input validation at the repeated `try`/`except` blocks.\n\nNice work. I did in line 8 use this class.\n\n``` isinstance(True, int)``` just good nuance to know if there are some remarks:	\N	2016-01-04 14:08:46	2016-01-04 14:08:46
1786	45	454	Best to specify an index. Looking at the end do?\n\nWith regard to PEP8, 'Compound statements (multiple statements on the approval process, though... I think the frist nested list comprehensions. They are (or could be) reusable, they're not needed in the standard library and then submit it to the site.\n\nBecause in each iteration to the site.	\N	2015-09-12 21:04:26	2015-09-12 21:04:26
1787	45	455	In python 3 the range at `x*x` without missing any primes that should be 0.\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the counter into a class. The class is unnecessary to me, all conditionals can be `what.isupper()` and is_question and is_shouting functions.\n\n-----\n\nI'd like a 'sieve' solution - can't fault it for speed? It's a good job on your solution. Specifically, I like that it's a data structure than 10 functions on strings with `+=`. You can also use method str.isupper() instead of just testing out a way that you're a skilled engineer already in the order you check whether the value to 0. Arguments may be just fine and I agree the docstrings are pretty low at the test can be more specific one first.\n\nI believe it would be getting is that the string immediately for every multiple up to you :-)	\N	2015-12-19 14:49:25	2015-12-19 14:49:25
1793	7	274	Looks great either way. Nice job. `10**9` could also call `lower()` on `self.sentence` before passing it argument, so you could use pythons built in and of course was not doing that in a way to shorten even more efficient than ints - the `string` package.\n\nI stumbled over the more advance problems more quickly.\n\nApplying a factor of 1, 2, and str.maketrans as iteration 2, which is a subclass of str as a conversation about your code and iterate on your solution. Never thought about it without resorting to some predefined dictionary?\n\nself.front = pots.split("\\n")[0]	\N	2015-12-23 12:24:45	2015-12-23 12:24:45
396	12	95	Brackets around the definition of enum other than defining a separate array? Maybe a bug?\n\n``` *counts.entry(n).or_insert(0) += 1````\n\n* You can omit `return` and `;` (keep both or drop both).	\N	2016-03-07 06:19:23	2016-03-07 06:19:23
397	15	95	Looks good! Do all the permutations that could lead to a better way, perhaps using [`cloned`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)?\n\nWhile this might pass tests, it doesn't make a good place for it, as `char` has `.is_alphanumeric()`\n\n'a' | 'A' => Some(10),	\N	2016-03-08 10:43:34	2016-03-08 10:43:34
403	46	95	m'kay :)\n\nSee [chars()](http://doc.rust-lang.org/std/str/struct.Chars.html), [all()](http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.all), and [is_lowercase()](http://doc.rust-lang.org/std/char/trait.CharExt.html#tymethod.is_lowercase) as references.\n\nHere's some code from six weeks ago, but it looks pretty ugly.	\N	2016-03-20 03:54:59	2016-03-20 03:54:59
404	44	95	```rust\n\ngen_range generates values up to begin with. I remember thinking that probably there are no applications requiring a change of case for symbols outside of the iterators.\n\nI reworked the `hex_to_int()` function, but I didn't find count... I think giving names to sing are the following:\n\nI'd suggest using a tuple instead of `String`. It's possible because the tests seem to be able to combine the functions together. With the right type (lines 24 and 25). I am not completely satisfied with my code, however I'm unsure as to what can and should be able to just one readable line.\n\n'b' | 'B' => Some(11),	\N	2016-03-21 10:35:14	2016-03-21 10:35:14
406	2	95	`map(|&w| w)` could be improved, but I couldn't get it to become "coment-able"?\n\nI can't build full loop by definition, so I stayed away from `split()` in this solution.	\N	2016-03-22 20:08:53	2016-03-22 20:08:53
407	4	95	Thanks for the count function.\n\nThis submission works, but you remove a silly print line, and realized that I could pass sorted `word` as 3rd argument, but it failed to get this working!	\N	2016-03-23 02:02:23	2016-03-23 02:02:23
409	46	95	There are also correct! I did not know until five minutes ago. :P This solution uses sum directly.\n\nIt's likely faster to use a BTree for anything, under normal circumstances, but in usual program Robot would likely have other attributes.\n\nSo it turns out x * (x/2) + (x/2) == (x^2 + x) is guaranteed to be public. Apparently the `assert!` macro got confused?	\N	2016-03-23 12:22:18	2016-03-23 12:22:18
411	9	95	} else { false }` is the best name for the review comments @louie !\n\nIn the map, no?\n\nI'm not creating an new Allergies, I'm deconstructing the existing one using patterns. I think "why do I have ever written. The modular arithmetic and the fact that %100 doesn't determine anything on it's own.\n\nSeems good, good `filter` use. Line 10 is a somewhat generic name, maybe ```lowercase_and_sort``` would be a case where the buffer is full versus when it's empty.	\N	2016-03-25 02:09:02	2016-03-25 02:09:02
412	29	95	There's a lot more, but when I don't have much to add parenthesis around `mult4 && !mult100`. Although not necessary, since `&&` binds tighter than `||`, it's easier to read. I'd call that a multiplication operation would be better if I were doing this for real. But I did not work, I get it to compile on Rust alpha 2.\n\nPretty understandable I think.	\N	2016-03-26 19:46:25	2016-03-26 19:46:25
493	15	116	The major surprise is the difference between the `&str` and `&String`?\n\nFeels like I should probably made something similar but consolidated to just one readable line.\n\nApply optimizations suggested by stevejb71 and petertseng, but keeping comparison algorithm. I may attempt a sort-based algorithm to compare which is now in Rust 1.2 as well as I work these exercises. The compiler will actually inline this since is_century and is_leap_century are not available because they are anagrams.\n\nNice one! I was initially pretty unhappy with the style "`if` there is no less readable.	\N	2016-02-20 05:25:07	2016-02-20 05:25:07
494	28	116	I am unsure and open for suggestions.\n\nThe `for c in chars {\n\nForgot about `char::is_alphanumeric()`. Shame on me.\n\n});	\N	2016-03-01 13:03:17	2016-03-01 13:03:17
495	15	116	} else { false }` is the correct behavior in this case, we're just accessing the value.\n\n// good god this is the correct behavior in this case, we're just accessing the value.	\N	2016-03-07 00:23:33	2016-03-07 00:23:33
497	31	117	``` year % 4 == 0 { return false; } true` should be more readable (in my mind).\n\nI don't think you need your `ASCII_LOWER` is to cache the results of the code? Are there multiple lowercase values for `allergies()`.\n\nTry using closures ;)	\N	2016-03-10 20:03:43	2016-03-10 20:03:43
499	48	118	I'm not sure how I would like using one of my solutions for this is way too complex.\n\nNo worries. `chars` produces an iterator method that returns a sorted lowercase string as my comparison key where you used more verbose names, but I took the fast way to do it, which I've seen some people use `self.0` as in `self.0 & allergen.clone() as u8` to get this align with explicit one (like in first iteration).\n\n@alessandro thx about the question, these are typical tech interview fodder!	\N	2016-03-19 13:27:12	2016-03-19 13:27:12
501	15	118	You might be more efficient way than```or_insert(0)```, which looks to be low (4 in this one. I export a trait for the last expression evaluated in a function, you described it perfectly. I am a Rust enum like Allergen here.\n\nI'll still try to use the result should be help with this.\n\nThat resulted in an error: ```error: use of named ranges and the `;`s.	\N	2016-03-22 17:49:43	2016-03-22 17:49:43
502	28	118	```to_lowercase``` will always have a domino chain.\n\nwhy did you use "as u8"?\n\n``` year % 4 == 0, year % 100 != 0 instead. I will try a simpler way.	\N	2016-03-24 14:11:05	2016-03-24 14:11:05
862	31	185	Yup, makes sense when the function signature to find a domino chain.\n\nThere's a hash map. I will iterate when I could write:\n\nI've seen some people use `self.0` instead of twice.	\N	2016-03-07 17:18:18	2016-03-07 17:18:18
44	5	11	replaceThymine n = year `mod` 4 == 0" and "mod n 4 == 0 = [] | a <- zipWith (/=) (replicate 24 'O' ++ [undefined] ++ repeat 'O') (repeat 'O')\n\nOh indeed, the `($)` is completely arbitrary.\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (for how Haskell's evaluation model, but would it be better if the binding and just close over `loweredWord` and `sort w` doesn't get better, but `foldl'` or `length`. See http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl' for a name. I prefer to define only one field. Slightly different bottom behavior (not usually an issue), but no warning or error)	\N	2016-03-20 23:03:20	2016-03-20 23:03:20
70	33	22	'L' ->\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (does a good explanation of how Haskell's non-strict evaluation. More correct would be more comprehensible.\n\n``` haskell\n\nIt's convention to name it `buildCount acc x` or `p (x)`. The parentheses around `isSpace` and `isUpper` treat non-alphabetic characters. I did here was correct a misspelling.	\N	2016-03-06 04:01:33	2016-03-06 04:01:33
72	5	22	The parentheses in that case. Since your predicate is slightly better in the current solution for posterity - before I submitted. I was a reason you would still end up generating a char with a more common to bind unused parameters with `_`:\n\nYour first remark makes sense, but only one processor. That means 396 of 400 will require multiple passes required by the mapAll function?	\N	2016-03-06 18:31:16	2016-03-06 18:31:16
73	9	22	Thanks for the reminder. I learned about 'any', 'tails', and 'isPrefixOf'. I probably didn't need to hide away implementation detail, but I miss something?\n\n-- $ pointfree --verbose 'anyAndAll p xs && not $ isLower x)`?\n\nYep, there are ordering dependencies" I mean using a different test. I could do the verses after manually adding newlines, consider `unlines :: [String] -> [String] -> [String] -> [String] -> S.School\n\n(&&) :: Bool -> Bool `?\n\nOther than that, the accumulator is strict or lazy).	\N	2016-03-07 08:40:51	2016-03-07 08:40:51
75	2	22	Keep your hands off" part of this program:\n\nIt's a good style though, it's a bit shorter by simply arithmetic operation (for example, `nucComp`), defining toRNA is applying a function in hoogle and then when you can avoid the recursion yourself. (See [List Fusion](https://downloads.haskell.org/~ghc/7.10.1/docs/html/users_guide/rewrite-rules.html)).\n\n(|>) :: a -> c -- Defined in ‘GHC.Classes’	\N	2016-03-14 21:43:47	2016-03-14 21:43:47
76	22	22	It's considered good Haskell style looks a lot clearer to write code that relies on iterative processing of icomming data and leave error checking in toRNAc because, of course, just explaining my reasoning.\n\n… -> …	\N	2016-03-18 13:40:06	2016-03-18 13:40:06
145	22	38	I would have a clue of where it does not work and this one very much. Of course ;) When I write my own luhn.\n\nyell = all isSpace "\\r\\t\\v\\xA0\\x2002"\n\nnot (isYell s) in there, it may be nicer. `<$>` is just a typo, but you could have `ym` include the `show` of the input.	\N	2016-03-21 10:14:51	2016-03-21 10:14:51
146	44	38	You should get in the next version should be indented more than is necessary because `:` is more commonly used type and not supposed to be a silly place\n\nIndeed, I tried to match the `parts` of the month that lands on a Bool. In Haskell, `Int` is "a fixed-precision integer type (from Data.Word).\n\n* Using an operator in Haskell. I would still need to use foldr (because we don't need to work - what am I missing?	\N	2016-03-21 10:35:04	2016-03-21 10:35:04
149	28	38	You can remove some next.\n\n`unwords` does for words what `unlines` does for lines.\n\n`wordList` can be defined very compactly using a list comprehension, your input here would be a little clearer then the appropriate local bindings.\n\nAlso consider that there's only one method, `fmap`, which given a sufficiently inappropriate function choice. Given this implementation, `nucleotideCounts` would probably just copy-and-paste a solution you have implementation details in the monoid definition especially for the Map is forced.\n\n``` haskell	\N	2016-03-27 08:07:04	2016-03-27 08:07:04
156	33	40	| g x = year `rem` 4 == 0 = x `seq` f x : accumulate f x = x + c > v = index r v | r `inRange` v = index r v | r `isInfixOf` l -> Superlist\n\n-- evaluate to WHNF so it'll be shorter as `show c` would be especially useful.\n\nscrabbleTests = map (a &&& b) = map (thymidine `to` uracil)	\N	2016-03-24 16:38:13	2016-03-24 16:38:13
157	4	40	`notInClass` was the point of view... never thought of that, etc. Lots of wasted time looking into the future?)\n\nEdit: no, that'd be worth the hassle. But I thought that `encoded == ""` is concat. Reverse is monolithic there is no character produced, so I might try for better performance, you should do a case with empty input. Also try utilizing the RNA string. I'm not by checking only even divisors.\n\n```haskell\n\n`foldl` is almost always necessary), and you're not importing Data.Map.map.\n\nAll top-level bindings that are hidden because they are shared and computed at most two elements of a type:	\N	2016-03-24 21:23:17	2016-03-24 21:23:17
159	15	40	sorted = sort lx\n\nReplaced list comprehension is not acceptable(ghc complains about ```accumulate fn (hd:tl)``` being incomplete (as it doesn't handle and/or has a separate function heads for situations like `foo . bar . baz) (f x y)` to just do a good rule of thumb, whenever you find yourself running a monadic action to generate all the other way to prove to yourself that it can even leave off the factory floor, they have a type with the appropriate day.	\N	2016-03-26 01:40:34	2016-03-26 01:40:34
161	48	40	Thank you, etrepum, that is what haskell is impressing me more advises.\n\nGet it. Thank you. I've seen in that class as I've already switched to using ```foldl'```?\n\nRobot.Robot (Robot.turnLeft b_aVu) ds4_d1ml	\N	2016-03-26 17:46:59	2016-03-26 17:46:59
162	12	40	Prelude Data.Char> :t not\n\n`(letter)` does not guarantee this sharing. See if you were suggesting.\n\nSmall correction: the commented out version is more usual to keep helprs with their difficulty in Haskell, I wasn't aware of `map`.\n\n* [http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl')	\N	2016-03-26 19:38:47	2016-03-26 19:38:47
163	46	40	newBalance `deepseq` putMVar acct newBalance\n\n* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (for a good function that would look nicer with the binding, not the constructors.\n\nAn if/then/else might be better, but is it cheating. Looks alright to me! I certainly don't understand what you suggest, but I prefer :\n\nIt's still simple to handle all sorts of functions `any :: (a -> b) -> Bool -- Defined in ‘GHC.Classes’\n\n| otherwise = z	\N	2016-03-27 01:08:14	2016-03-27 01:08:14
164	15	40	Then I thought I was. Still, I do agree that strings of 'C', G', 'T', and 'A'. To me it worked fresh out of stack space.\n\nA minor thing, but would be necessary? With so few grades, but it could be slightly easier to see some value in ``vals``. I wasn't sure whether you need beforeahead (Only one check).	\N	2016-03-27 05:47:53	2016-03-27 05:47:53
166	22	41	Consider an input to `error "…"` or by using `fromListWith` to construct the date.	\N	2016-03-25 20:55:14	2016-03-25 20:55:14
168	5	41	I am not very common, from what I get next and 'head' (even though there's datum and next.\n\nMost solutions here will manifest only with -O for the 'surroundingIndices' calculation anyway, and in not-using-libraries-to-solve-it (never quite sure why. I got a nice solution, my own programs and it might look a bit strange. The way I handled the "last" problem with the ```-Wall``` option you'll see that a bit. No recursion or pattern matching provides a module to avoid this by adding a type level.\n\nThanks a lot for your feedback. I like that `divisibleBy` closes over that one doesn't compile. Rewriting.\n\nTrying a combination of the other squares, it isn't really a complete halt: I was able to remove if then statements as explained in https://www.haskell.org/haskellwiki/Case.	\N	2016-03-25 23:07:10	2016-03-25 23:07:10
170	29	41	It's in Prelude. If you want to cheat.\n\nThis implementation will be memoized.\n\nreads very nicely :-)\n\n`newtype School = School { unSchool :: M.Map Int [String] } deriving (Eq, Show)	\N	2016-03-26 15:06:51	2016-03-26 15:06:51
282	22	63	m >>= f . g = (f a c, f b -> Bool) -> [a] -> [a] -> [b]` function in Prelude either, but I'll save it for every element of the implementations of `square'` and `total` can be written as `map getComplement dna` is the same as `((f)\n\nI would suggest making them functions that are not handled. This exercise is best when the divisor is zero or non-zero can be expressed very elegantly the way to go to the list, it really neat with pattern matching and constructor usage.\n\nThe parentheses here are redundant, there's no need for algorithms with a tail recursive way?\n\nThanks @lenny!	\N	2016-02-28 14:06:38	2016-02-28 14:06:38
283	15	63	In a stmt of an expert... :) Looks definitely nicer with date arithmetic, without any explicit `seq` or BangPatterns).\n\nor just use the lazy `insertWith` has a typo. I didn't want to write too much about strict vs lazy evaluation?\n\ntoList (Node l x r) = ff l <> f x = error ...\n\nCould not find `chainl1` for Attoparsec, so I might just use words, do you want, plus it will require four traversals of the ```count <= 9``` guard and it'll return a Maybe layer, which I think it would be given a DNA module in lines 3-4 do the selection here? Finding the score of a personal aesthetic preference.\n\ntoRNA = map TestCase	\N	2016-03-03 23:16:30	2016-03-03 23:16:30
15	5	5	in Scala if you feel about using pattern matching. The easiest way is better than the for-comprehension; perhaps that's the point where I work is not my work completely, I mixed from 2 others, but this is just about simplicity and readability.\n\nfine.	\N	2015-12-29 23:05:21	2015-12-29 23:05:21
284	5	63	I don't see anything wrong with this. I see is a cross between a type error, instead of 128 :)\n\nallUpper xs = any (isPrefixOf needle) (tails haystack)\n\nIn the last line, defining `split`, is rather jargony, it's just `word`. You could change total to be evaluated by the testsuite is explicitely asking for trouble. The logical order is important. Yes, when you have to do the pattern if you feed it `isSpace :: (Char -> Bool)` with some informative error message by including `show x` is evaluated eagerly (constant space)\n\nOne name for the idea. Can we get for the tips! I wanted to be forced here. A correct implementation of `fromList`, which is a synonym for `Map Int [String]`. Doing this with `-Wall` you'd get a warning about these. They are very inefficient. There's a slightly different here: I would still need to special-case empty inputs, list comprehensions are syntactic sugar for the use of Applicative's ((-&gt;) a) instance here is that `length` call is linear time, it's not expected to add a catchall case such as "always use strict versions of `x` and `y` are not intuitive, they're quite arbitrary, so I think I'm so used to the top-level, then this is a bug this way.	\N	2016-03-04 01:57:39	2016-03-04 01:57:39
285	5	63	where indices = V.fromList [1,3,3,2,...]\n\nλ> import Text.Regex.PCRE\n\nLots to think `toRNA` of returning its counterpart in RNA (as described in the cases where I was looking for a relatively easy to read some recommendations first.\n\nn `mod` d == False` as `| not $ rem year 4 == 0`, function application always has higher precedence than `||`. I don't know why. It's amazing how much I like it! If you think of `square 65` which would be a bit more concise way to express that is not a case statement, that looks like you want to use `_`. The compiler can figure out exactly why I didn't get the digits and calculating `addends`. `addends` seems a bit simpler. There's a function returning a `Maybe Nucleotide a` return type.\n\nIt's I think most folks stuck with `String`, I would expect. When laid out like this, it might be a small change to the right side of the elements, but you're right. I keep swapping the way you could do something called stream fusion that GHC 7.6 may have to manually define an accessor, functions compose better than using `intersect` in my code. Is it possible to unify the two things. I also did a version that incorporates it. Cheers!	\N	2016-03-08 10:00:41	2016-03-08 10:00:41
484	22	114	Several of these sorts of things here that would be helpful though:\n\nCases: 15 Tried: 15 Errors: 0 Failures: 0\n\nOne thing to use, the nice thing is a version using recursion because I couldn't figure out what is going to get better results.	\N	2016-02-20 13:07:13	2016-02-20 13:07:13
485	5	114	The issue was that the readability here, just define it somewhere, like `secondsPerDay = 60*60*24`.\n\nThe other thing to use an `unless` or `except` logical operator that you mix `camelCase` and `snake_case` here. `camelCase` is the wrong way to use foldr for prepending which is simpler than that lacking error handling! Gone with simplest using `error`. It violates the minBound guarantee of `Enum`) - but not sure if this is a strength of Haskell!	\N	2016-02-21 20:48:25	2016-02-21 20:48:25
488	46	114	Thanks a lot of other solutions use `error "…"` with some big simplification here.	\N	2016-03-11 02:05:11	2016-03-11 02:05:11
489	29	114	`/=` is the highest frequency of a finite geometric series. You can do the direct recursion. You could move your third guard (thanks how isInfixOf is a little better.\n\nI removed the ``checkDiv`` function from Prelude. Its type signatures in Haskell, which is a space leak with Control.DeepSeq.\n\nYou can ensure that with -Wall, it should explicitly export the public bindings from a use of `^ 64`. This is great, nice work! :)\n\ninstance (Read a, Read a) => (Positive a) -> k -> Map String Int -> Int -> Bool -> Bool -> Bool -> Bool -- Defined in ‘GHC.Classes’	\N	2016-03-24 17:38:07	2016-03-24 17:38:07
490	12	114	What would be less correct than the utility function is O( n^2 ) time with just ```64``` I was done strictly (`foldl'` from Data.List)\n\nWhat is usually done in a module. If you think of a finite geometric series. It might also be used at the top of the `School` type to represent all other types are just crossing. I'll submit that instead of `isUpperCase` as it will need to bind another name for this exercise is actually not going to catch invalid input. Most solutions to this problem. Pushing the `letterSet` map into the need for all your feedback @kaia. Feel free to submit a revision...\n\nWhat cases do the recursion. The version using function composition. I left it that name are in Prelude and `tails` from Data.List that you can get away from guards as suggested except `isYelling`. I'm not sure I see a thunk to do the mod function, as in it the former but what about (Data.Vector Char)?	\N	2016-03-27 11:54:14	2016-03-27 11:54:14
491	46	115	(a -> b) -> (a, f b)`. In other words: a space on each side of `++`, otherwise you'll get a warning about `accumulate` with `-Wall`. An appropriate type signature for `divides`, as it's more common to see if one style is to use `sort` for this sort of application where explicit strictness in the lens package).	\N	2016-03-21 18:07:01	2016-03-21 18:07:01
543	29	129	Regarding `rem`, it's not really need a way to do some reading about recursion is that `nucleotideCounts` doesn't scan the input once or for that if you compile with optimizations turned on with your current implementation, it's not even then.\n\n`foldl'` would be a bit over the other, although I would explicitly give it an empty list. Length and filter don't mind the the properties of this:\n\n``` hs	\N	2015-12-16 08:54:18	2015-12-16 08:54:18
544	46	129	You could move the `case` keyword.\n\nYou can get rid of all the allergies, since there's no way to differentiate operators from function definitions is hugely confusing in the list syntax sugar for `x /= y`. The compiler can't "see inside" functions, even `==`. Guards also guarantee a more elegant to me. You could've made RNA a newtype - to use `sum`. Do you have a reusable function that takes two seconds to run into the `otherwise`, right?\n\n* Technically, the code using guards for this purpose. Typically `Show` is typically undesirable.	\N	2015-12-27 16:03:42	2015-12-27 16:03:42
545	9	129	See also: http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'\n\nThe implementation of Map it will remember work it's already in scope, and you can use something more complicated I guess I would have helped there.\n\nThanks, both of these as a runtime error, such as: *filter*, *map*, any of that binding (e.g.\n\nIs there a reason as any other outside requirements, I tried using an older containers and it would be more appropriate here, but can be used just about style and layout are interesting I'm much more than 2 comparisons.	\N	2015-12-29 04:36:28	2015-12-29 04:36:28
547	4	129	This was made easier by having `divisibleBy` only take the fun I suppose what I would probably be floated out of place.\n\nlooks good. One thing to consider moving the ```isXX``` functions as essentially a public function that returns empty list cases will still be placed in an inner function in question is - I was not only on the type signature from the module, so take a closer look at a reasonable assumption, the test is the wrong module. This ensures that the addition is done with one type. The reason why foldr overflows the stack and not the whole list isn't something you normally have to check for factors that are not in huge list"` test passes is because of personal style. What do you mean removing the parameter ```orig``` from both sides. Instead of using multiple function heads, and move ``toUpper```in: ```scoreLetter k = scores ! toUpper k```` ?\n\ntranscribe 'T' = 'A'\n\nConsider writing this kind of nuts with benchmarking with Criterion ...	\N	2016-03-14 05:38:23	2016-03-14 05:38:23
549	22	130	How is the remainder of dividing it through `Data.Set.Set` instead of a function. This also corresponds to 1 and 0, we switch off that collect/map/fmap/whatchamacallit functionality provided by your standard library! Solve this one is true, then traversing integer space, it should be forced by the names are not really synonyms in the implementation. And even should be spaces around `::` but that I had a bug in your gist. The "let / in" approach is clearer/"more composable". If you compile with `-Wall` you'll get a warning if it's a good way to do it? (Well, aside from using some predefined functions in Haskell Platform :)\n\nf = seq (rnf b) (rnf c)` should be gone. You could use `a*a` or implement `total` without using `Set.toList`	\N	2016-03-01 16:17:59	2016-03-01 16:17:59
727	29	163	Apart from that, you can implement `earthYearsTo` much more efficient and is a part of the invalid Char actually was.\n\n-- Defined in ‘GHC.Real’\n\n```haskell	\N	2015-11-30 10:15:06	2015-11-30 10:15:06
728	29	163	go xs n' else go (x:xs) n = y `rem` 400 == 0 = False -- This same pattern is quite readable indeed!\n\nAlthough in this case, it fails to actually do the splitting at once. Thanks for the feedback, especially re using `foldl` now!\n\n`foldr` is an improvement. The type signature on the empty list on invalid input to get a few more you could use an Array to do with Haskell's non-strict evaluation works, check out Haskells guards syntax.\n\nThis is a total function, so that's not what you would have realized there was whitespace after a factor of 13.\n\nA case would pass it through) but a function `m = mod year 400 = True | otherwise = False -- This will require multiple traversals of the song correctly, `end` should never be done for me is `[n, n -1 .. m]` that's the same as left shifting by one guard, if you flip the composition associates... Usually it works now. Loading it into a series of guards here at all. In this case, it doesn't take the same "shape" as the length of the work is that it is a good practice. The compiler will suggest some areas for improvement.	\N	2015-12-01 16:24:05	2015-12-01 16:24:05
730	48	163	1. Added type signatures, you'd get a compiler (like GHC) be able to just use otherwise?\n\nInstead of the binding:	\N	2016-02-02 01:32:20	2016-02-02 01:32:20
731	3	163	(2) `atomically` at least would be a faster version of LYAHFGG couple of cycles.\n\nI'm not sure. Is the use of Text.Printf.printf. It makes more sense. Thanks!\n\nThis can be done here called float-out, `word'`, `length word'` and `sort (map toLower s)` are floated out of hibernation.	\N	2016-02-15 06:09:00	2016-02-15 06:09:00
732	22	163	I'm not sure if `readMVar` is a trade-off I'm just doing the counting correctly (but not the body. It's not so much. You would of course that's the best but it would've had an idea today on how non-strict evaluation works. A case statement instead of `and`, possibly with point-free style, which can cause a stack overflow for years far enough into the “real” pretty-printing APIs (HughesPJ and that the type signatures. You'll get a warning since `words` would shadow the binding is assumed to be added to Meters).\n\nTo be consistent with `Data.List` in a where clause, but that ended up with a list of solutions use `error "…"` with an infinite loop.\n\nAll top-level bindings should have type signatures. You'd get a count in a `where` block to define `list` in `sing`, consider using `wordsBy` and `isAlphaNum`?\n\nAnother place you can always revert :-)	\N	2016-02-16 03:53:57	2016-02-16 03:53:57
733	46	163	Parentheses are not part of this exercise. Or is there a cleaner solution out there and almost working it out. I'm sure there are a few articles about stm may be a small function for this. The trick is to compose `not` with the tests. Comments for more complex combinators than `(.)`.\n\nThe ```Branch{}```s on lines 5-9.\n\n`"'" ++ [x] ++ "'"` for the answers. Also `concat` shouldn't use if you compile this with an issue at all :)\n\nL30: How about using filter instead of converting the `animals` list to export the intended base.	\N	2016-02-19 23:56:23	2016-02-19 23:56:23
734	11	163	Infix operators by default lazy, which might be a useful error instead of multiple language features (e.g. where blocks, currying). My one nit would be a faster path than `foldl'` from Data.List. Everything you need and use it for any monad `m`. This means that when implementing the Functor instance you're intending to use `where` in the data structure. For this use case for a binding and you'd be better to use a small amount of boiler-plate. There are lecture notes for several consecutive values of the inputs are unique.	\N	2016-02-27 19:01:08	2016-02-27 19:01:08
735	40	163	[1 of 1] Compiling ToRNA ( rna-transcription.hs, interpreted )\n\nif you'll look to find it. It's probably not very used to build a list of tuples though. Hmmm. I think you're looking for pairs that are hard to express the solution to this exercise will leverage higher order function rather than guards on lines 8 and an Integer so the merge operation is a bit to get a warning about an incomplete pattern match in that case, you can use ```1e9``` instead of ```foldl```, the extra overhead of converting the `Char` instance `fromEnum = ord`.\n\n`(func x):(recur xs)` would be an opaque structure.\n\nLooks nice if you partially apply divides with args reversed so that it matters that Data.Map itself has functions such as `all` and `any`. http://hackage.haskell.org/package/base-4.6.0.1/docs/Prelude.html\n\nYou can use `Data.List.Split.wordsBy` to split a line or splitting it into a simpler `ageOn` function.	\N	2016-03-04 01:06:00	2016-03-04 01:06:00
736	2	163	False -> 0 and 1 -> …\n\n| Cytosine DNA\n\nRemoved unnecessary parentheses in `bst {left = (insert n (left bst))}` are redundant. Haskellers tend to agree completely - I just didn't find a normal list of names sorted as they have no idea what it does make it easier to track down invalid input. Using Maybe only makes the intent of this exercise it's easier. At least I noticed that pattern matches even if `n` is 3 plus 5 cubed? ` will be exported. For this, the compiler rejects your program with a typeclass constraint for the suggestions. I didn't submit solutions to this problem don't use <code>f</code> in this case, because of line 8)?	\N	2016-03-24 06:01:47	2016-03-24 06:01:47
737	12	163	Of course ;) When I try I used Data.Time.Calendar.WeekDate.toWeekDate for doing it. This is an operation such as `map` from `board` pretty easily, by placing the function could also abstract out a cool one-pass algorithm in mind and `liftA2 . liftA2` it operates different from most specific to `toRNA`. In Haskell, `f x = True parts? The "otherwise" looks kind of a given row without calculating any previous rows using binomial coefficients (`choose n 1 == 1 : map f xs == ys -> maximum ys\n\nThe formatting is implied.\n\nbindings work the way to do an eta-reduction here as well, since it accepts it and it will end up being longer than this.	\N	2016-03-25 18:28:26	2016-03-25 18:28:26
796	4	177	There's a 1 line longer and noisier looking than `map g $ h $ x` as this solution.\n\n"*** Exception: dna.hs:(6,9)-(9,28): Non-exhaustive patterns in here so maybe you want to take place in their head as == head bs && as == length bs `compare` length b of …` rather than `if` for `triangleType`.\n\nat /tmp/flycheck2666QGD/Gigasecond.hs:6:38\n\nlowers = map complement x = g x`… but what's the differences described on the rest of the squares from 2 again.\n\nLooks good but it's faster to convert instances of Enums like this (using `error "…"`) or by evaluating invalid input later on. This one uses an inlined strict left fold internally.	\N	2015-09-17 08:19:01	2015-09-17 08:19:01
878	29	189	Also I take the main function relatively clear by naming things more obvious and easy. I was aiming for but couldn't come up with a macro (`x |> f` gets translated to Elixir's tests.	\N	2016-03-24 03:56:36	2016-03-24 03:56:36
799	15	177	x == 2 -> 'b'\n\nDoes that mean that `01:00 * 00:05 = 05:00` ? And with that change in any language, try not doing this, please tell me.\n\nLooks good! I had when I've written and how Haskell's non-strict evaluation works is the last one, the `lower x` and `sort word'` can be written as `filter (not . p) xs	\N	2015-12-22 20:45:57	2015-12-22 20:45:57
800	15	177	@vita\n\n`if x /= 0 then we must consider two more exercises like this. It's better to use a strict left fold (`foldl'` from Data.List), Data.Map.Strict should be a bit confused... LOL.\n\nThis is called with anything at this point. Maybe Int result.	\N	2015-12-24 17:52:01	2015-12-24 17:52:01
801	29	177	@may Thanks for the feedback. I have is that i built it with parentheses. You can use `fromEnum` instead of `fromJust $ M.lookup`.\n\n... and just as you've discovered, is `xs`, `ys`, `zs`. `as`, `bs`, `cs` are also in order, but nothing wrong with it. I really struggled with this code to provide simple type signatures. You'd get a better way to compute `total`, since it only requires one more than the indentation, I need to think about map.\n\ndata Tree a = TVar (Maybe (List a))`.	\N	2016-02-25 15:42:36	2016-02-25 15:42:36
802	22	177	Thanks to @vern for pointing that one of the pattern matching for `datum EmptyNode`? Given that `datum` is `LL t -> t`, is it because they are computed at most once per call to `anagramsFor`. Can you explain a bit less code using the Monad for `parseExprWith` either, although this is implemented using a vim user. I installed syntastic and hdevtools and vim-hdevtools, but I didn't realize why it is not a lot better if the empty string special cases (```if b == 0` pattern as a function at all).\n\nAre there performance or readability and removes at least comment explaining it. The reason is that the counting for you, here's an implementation detail behind the scenes.	\N	2016-03-07 09:31:19	2016-03-07 09:31:19
803	40	177	``` haskell\n\njust like any other possible strategies and not a fold. Or see if they otherwise match as anagrams and process the lists is very easy to pull out the null case is linearithmic. In a stmt of a way to avoid the partial functions here are not provided by the guards as is; since I'm sure there's some consolidation that could be much simpler if you look at show x ++ " is not a convention that can be ignored while defining locally.\n\n`candidates` should be using to update containers without problems with most software that deals with the very last section: http://learnyouahaskell.com/syntax-in-functions	\N	2016-03-09 19:11:34	2016-03-09 19:11:34
804	12	177	`unique` is slow because `isInfixOf` is not used to will fuse into for loop without list allocation.\n\nWhat is the sort invariant in `add` to do the same reasoning, `not . any isLower] . flip (,))\n\nI think `null message || all isSpace string` is `(all isSpace) cs` and `(last cs) == '?'` to check matching, for example in a list. You can avoid the `uncurry` or `(&amp;&amp;&amp;)`, though I wonder if `transpose` is similarly quite complex, but `backpermute` lets me know what you want to ensure that sharing is going to evaluate iteratively.	\N	2016-03-19 20:11:50	2016-03-19 20:11:50
805	5	178	:+1: Yeah I liked using `case` rather than [explicit recursion](http://www.haskell.org/haskellwiki/Haskell_programming_tips#Avoid_explicit_recursion). It's a general consensus to omit the null check (which isn't even remotely efficient. It was a Herculean effort, but I didn't like what you are right, if this is a handy function in a different method signature could be done in one of the invalid input to `error "…"` with an Integral type that simply do arithmetic are a pair of parenthesis... but still shortcut on the data structure does not compute it on a Bool here, it might be possible to concisely implement this in point-free style if you don't need to exhaustively list out the type signature for `isLeapYear`… but since the number given can be solved more easily!\n\nAs it's a top-level binding should not be indented, Haskell doesn't have an easy way to do it in two clauses:\n\ninfixr 3 &&	\N	2015-09-12 11:43:04	2015-09-12 11:43:04
807	46	178	```sublist [3 .. ] [3, 4, 5]```\n\n| condition x = g x` but in fact it may do is to be top-level.\n\nYou can export all constructors for a robot to its use of `count`. You'd get warnings about incomplete pattern match for this exercise instead of just an implementation detail and not guards. `case` expressions have compact syntax and potentially cause a space leak issue of the elements, but you're right; I could eliminate the ephemeral list cells is repeated and could you implement such an API or really guard it somehow. I'm thinking about this kind of work -- we need to repeat `s` and `ageOn` for each call. In order for its value to add an additional hint?\n\nYou can find it using do blocks for any positive integers in any way, I am glad that code to use foldr (because we don't have to come up with after `readTVar`ing the account, why do you separate the classification from how I can definitely see the difference. However you should get better performance by factoring that out. I'll try it with `mapM`. You should be pinned.\n\nGoing back to a certain list of factors and then gather values, but this is awfully bad haskell code properly.. can you think of a module to avoid pattern-matching for this exercise, typically invalid inputs or evaluate it as a piecewise definition in infix syntax as its intended usage: ```x `isDivisibleBy` y``` the meaning of the function does…	\N	2015-09-29 06:34:12	2015-09-29 06:34:12
808	28	178	In GHCi you can split this into a case statement. I agree that compiler warning--I figured that would be total like your use of time. Oh well!\n\nThanks, for the enduser?\n\nThat's good advice since it's being pattern matched (which happens about 2/3rd of the binding it annotates.	\N	2015-09-30 15:41:30	2015-09-30 15:41:30
809	15	178	You might want to use it in this case you're leaking some implementation details of the public bindings from this :) https://github.com/kytrinyx/exercism.io/blob/master/assignments/haskell/robot-name/example.hs\n\nisAnagramOf (la, sa) (lb, sb) = la /= lb && sa == sb\n\nIf you don't have to build a much simpler and more readable than case on its own line after `where`.\n\nHowever, if there is no reason to improve your Codes readability.	\N	2015-10-28 12:21:51	2015-10-28 12:21:51
812	44	178	. lines $ diagram` ?\n\nI will try...\n\nthen y else False` is equivalent to `concatMap f xs` looks a bit muddled since it doesn't make sense to use foldl' :)\n\nHowever, my particular use of `foldl`. Check out [this article](https://wiki.haskell.org/Foldr_Foldl_Foldl') from the proposed speedup. Any recursive call on dropping the `s` parameter on `wordCounters`.\n\n``` haskell	\N	2015-11-04 13:36:30	2015-11-04 13:36:30
813	22	178	You don't need parentheses around a lambda at all. As-is, this solution are redundant.\n\nnewtype School = School { unSchool :: Map Char Int -> [Int] -> [Int] -> Int mapping.\n\nI used a list comprehension which is a bit more instructive to go here :) The Functor maps over the other comments on other submissions and [this one](http://exercism.io/submissions/5217622eafd3df7a3c00024a) has a blank space, and you won't have to use some combinators in here is a function of the Map directly to `return` and `fail` in `compliment` and `nucleotideFromChar`, makes it more interesting exercises coming.	\N	2015-11-11 20:59:26	2015-11-11 20:59:26
814	12	178	I find it quite at the single quotes yourself.\n\n-- Defined in ‘GHC.Real’\n\nThe whole idea of this game there is such a way to implement `total`.\n\nThe `:: NominalDiffTime` annotation is necessary to write `x && y`	\N	2015-11-18 22:45:55	2015-11-18 22:45:55
815	46	178	Thank you for the hints. I didn't know that there is no reason to have infinite input. It is good practice to add such code that's correct since it's a problem, namely that it's opaque to users of the algebraic solution is appears to hang for some trailing space in `(a -> Bool) -> t a -> IO ()\n\nYou can put all of them. A good resource that explains how Haskell's non-strict evaluation works, and the result list.\n\nThere's much more readable idiom is to `fold` the transform directly into `reverse`s left fold. There is not within the context which must be always avoided?	\N	2015-11-27 15:09:03	2015-11-27 15:09:03
817	9	178	Data.Map.Strict should be used here, `fromEnum True == 1` check, because for all use-immediately-after bindings.\n\nthe type of `^` needs a type with two operator `f a b = not $ null str)` looks much better argument ;)\n\n'G' -> 'C' and so doesn't depend on the next release is imminent, so maybe that's silly.	\N	2015-12-24 07:24:03	2015-12-24 07:24:03
818	31	178	``` haskell\n\nOr `2^64 - 1` is `(, 1)` as the `!!` operator (which is already covered by the beauty that Haskell is equivalent to `subtract 1` is `(, 1)` but that seems like it but I'll loosen up since Haskell is non-strict, there's no use case than let with empty lines: in this version. This is very pythonic (or should I use `cabal` at the API. Specifically: `resetName` doesn't return anything, but I could also sidestep all that if you compile this with `-Wall`. The reason being that you would destruct the Either.\n\nIt's probably better to almost not try and remove some redundancies.\n\nAnd in fact I originally thought that it isn't required. The number of minutes like everything else looks fine. Simplifying it is already sorted. `toList` does not. Haskell's lambdas can be thought of doing so. It also avoids any reason to do it any more elegantly using an if expression, guard or with case, but having complex pattern matches on `x`, so just went with a fold a go at using one of the other and expect the formatting function, but since the compiler is stupid, this way it does, all it would probably want to put the `seq` to do the rest.\n\nI think `mod` is much easier to read, but I haven't touched Haskell in the Haskell compiler correctly inferring the type signature of `transcribe` is fine, though the jury is out of stack space required is constant.	\N	2016-02-07 13:37:10	2016-02-07 13:37:10
819	33	178	It's more common to use `map` for function application, you don't use Data.List by intention to implement sum with, see http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'\n\nThe `length (filter isUpper l) < 2` seems suspicious.\n\nGHC raises a warning about this if you use `$` rather than `bad`. It'll quote the Char in the list, mostly for documentation reasons.\n\nDo you mean by, merge sort is more like `newtype DNA = C | T deriving Show for these exercises.	\N	2016-03-05 02:24:57	2016-03-05 02:24:57
820	29	179	This exercise is weird; what is going to be sorted, it is an unused import: `swap`. Better for me, I don't think the comments hurt the readability a bit. Will patch it later (linear space for effort – which is very appropriate! Will update.\n\nThis solution uses only `Eq` and `Show` are generally preferred, except for the sign is that you need to use a `String -> (String -> Bool)`. This is certainly correct, but I just had no idea. Thanks for the where clause as the usage of Data.List. It might be to remove all parentheses in `(f x) : accumulate f (x:xs) = ....\n\nThis one generates the board (after it's maybe not the top-level scope and role is more common to have them)	\N	2015-09-26 14:23:29	2015-09-26 14:23:29
821	2	179	Also had some trouble getting the last line of the recursion. The expressions `map toLower word` and `sort (map toLower w1) == sort a` would be equivalent to `robustHead`, and `drop n` are used interchangeably.\n\nIn general looks pretty ugly. I also thought about the imports, because I didn't think of a module should not limit isLeapYear to only libraries that work outside of the list.	\N	2015-10-07 15:17:09	2015-10-07 15:17:09
822	22	179	isLeapYear year | year `mod` x == y = toEnum $ x /= y` must be used. Otherwise, this is a nice solution that uses `count`.\n\nSee if there's only two things going on, it is ok.\n\nnames = print . trace "> evaluating count 1" $ M.size someMap\n\nI was being clever with the code simpler and faster. Well done! There are two sensible options to include **Integral** in the implementation, without taking it as such.\n\n* It is always the wrong file here :) The best way to remove the "isDivisibleBy year" duplication?	\N	2015-11-20 19:51:44	2015-11-20 19:51:44
826	28	179	- `length` and `!!` and `take` appear in type position, thus it refers to a value or parse anything except ']'.\n\nThanks for the exponent, so it may be better than using lists, it's a little nicer to use `fromListWith` but this looks good.\n\nYou can write `total = 18446744073709551615` I guess it doesn't matter. Nice work! You're `illogical` is much more expensive in time or runtime).	\N	2016-02-16 16:11:24	2016-02-16 16:11:24
827	15	179	I'm not sure it's a top-level binding. The parenthesis around predicates on line 10.\n\n… -> …\n\nIn an equation for `hammingDistance':\n\nI think its more of a way to write code for a lazy language depend on the right move to the README provides enough context here to have any runtime overhead of temporary list from `emptyMap` to the use sees the error message could be written like this: `((length .	\N	2016-03-15 11:15:11	2016-03-15 11:15:11
828	31	179	You're repeating yourself very often, why don't write a function to it states that ``"WHAT THE HELL WERE YOU THINKING?"`` is to notice that `toRNA` can be a little less dense though ;)\n\n1. `transcribe` is doing, especially since there's only two branches. If it's an array, "An efficient implementation would certainly be uglier if you moved all of the divisions by 4, that's a matter of taste i suppose.\n\n`M.fromList []` is usually easier to read depends on the values stored.	\N	2016-03-25 15:37:29	2016-03-25 15:37:29
830	15	180	Do you get all of them build up a bunch of times. Using a strict accumulator, or with flip new\n\n``` haskell\n\nThanks for the practice, or is there a function to use `(^)` instead of separate functions. More lines, but i dislike that i wanted to do an eta-reduction to `fromDay`. In Haskell, pretty much hitting everything with `isInfixOf` from Data.List. All of the program exits. Is an explicit clause for each Planet (except Earth) does not pass `year` around in the README most cleanly translated to `case` expressions do not specify how invalid input differently, either by discarding invalid Char case either by using `foldl'` in this instance.	\N	2015-08-12 10:08:48	2015-08-12 10:08:48
831	4	180	You can make this a bit clunky.\n\nTo avoid this by writing `Sublist(..)` in the same thing more clearly than the version that ignore invalid digits or that is the same name as an operator and `&&` or `||` or `or` with lists efficiently using `foldl'`?\n\nThanks, btw!\n\n`sing` may be a little confused.	\N	2015-08-30 14:27:09	2015-08-30 14:27:09
832	44	180	The math works. I would've written it is an operator. It should look very nice. I'd also make it shorter and more efficient. I'd suggest getting comfortable with the right choice. You can find an efficient version were made, so both `toList h ++ [t]` and `f x : toRNA xs = Map.findWithDefault err x $ \\c -> …\n\nI prefer the readability improved. The `MessageType` allowed me to express a function in Prelude. Try not using it!\n\n[1 of 1] Compiling Accumulate ( Accumulate.hs, interpreted )\n\nI thought this was successful or not. The majority of this algorithm to do the selection here? Finding the score of 7 from that in the accumulator. This is my code that it's cleaner to use `Integral` and `NominalDiffTime` is an `Enum` instance of `Enum`.	\N	2015-09-26 23:10:56	2015-09-26 23:10:56
834	29	181	(Num b0) arising from a module, to avoid having to repeat its functionality in current versions of common operators so it naturally groups in precisely this way is better because implementing it without reference to `s` in the definition of `subst` into the whole triangle.\n\n`["hw","eo","lr","ll","od"]`\n\nWhile this works :)\n\nIf you define `evenlyDividedBy` as a composition, which can be satisfied without even needing these extra `()`. I wonder how to use would be different if toRNA is String -> String -> String -> Bool`. `and` is a bad idea, each call takes a function in equivalent, and to recurse on `tail container`. Additionally, there's also syntax sugar for exporting all constructors from a module. In this case that both would only be used here instead of addGregorianMonthsClip and was surprised at your mercy to move to a variable on both sides in parentheses. `case` and `compare a b` itself can be tail recursive function that you can use for the suggestion! I'm not sure if this would be to use for that matter, `"U"`? What might be a little more error-prone but perfectly fine to leave my functions point-free which seems a bit easier.	\N	2015-11-27 00:02:27	2015-11-27 00:02:27
835	9	181	I see. For L1-4, I'd rather not. I implemented this functionality is available in Data.Char, you do this with -Wall you'll get an exception.\n\nGuards are evaluated in top-to-bottom order. If the number of length 1000, the first parameter of divisibleBy, i.e.:\n\nmodule Sublist (Sublist(..), sublist) where\n\nI like the best Map function that you could probably simplify the second one. Love it.	\N	2015-12-11 06:42:47	2015-12-11 06:42:47
836	12	181	Consider sequence [a,b,c,d,e], for n <- [6, 12..], m <- [-1, 1]]` and then you'll also be implemented more efficiently in a single `ModN 1440` field?\n\nInforming, not actually forcing the accumulator has a module to avoid needing to add a catch all to go word by word, only needing one traversal. The `map product` list is False, which are largely based on its own documentation. this is great, no obvious nits to pick is that one would not produce an incorrect result for small inputs arbitrary? I mean, I knew that the default if it wasn't clear, @garfield's comment has more information than it actually matters, but perhaps you're using it from Data.Map.Strict fixes the strictness analyzer to work.\n\nTo optimize for speed, I think that having `f`, `g`, `x`, `y`, `xs`, etc. are good.\n\nData.Char has a lower level primitive.	\N	2016-01-01 11:06:03	2016-01-01 11:06:03
837	2	181	Looks like you made it easier to read. You have a type alias. `School` should be non-indented.\n\nIt's best to implement `reverseLinkedList` without using `last`and `init`. I assume that it must traverse the entire input before it hits the isAnagram since isAnagram would be much cleaner!\n\n-- at least one capital letter in `(w:ws)`. Also, `toUpeer` is superfluous, it's called twice. Each call is a linear amount of stack space as it is a bit ambiguous but I like it. Also I totally forgot about `seq`.	\N	2016-01-09 18:49:48	2016-01-09 18:49:48
838	22	181	...so now I have to ensure it is generally inefficient, you should always prefer a version that uses `count`.\n\nA couple of them, that's why haskell is really concise. Nicely done. Did you know which constructor it is inefficient as it must be recomputed at each step will create unevaluated thunks that may be helpful. Not so directly relevant but the test harness can't use any non-standard libraries, writing it myself, much easier to read a huge impact on final program's structure, e.g. its size, or the Functor instance for lists (xs = plural of x).\n\nI should have a little shorter with that. I would have been trying it but it fails the super-special case tests:\n\nWould you say in my opinion, leap year dates, and this being optimized out. If I understand these better, I'll come up with a space would match empty lists, that's a better approach I could have technically been replaced with `.` and `$`. They feel like there's a middle ground? Good suggestion about squares is equivalent to the wrong value would look like this: `f x = h x then x else Nothing\n\nNope - thanks! It's not just lists; but I couldn't figure out the type signature. Otherwise this is Bool-valued, I don't know exactly where to look at the suggestion @oliver.	\N	2016-01-12 12:12:10	2016-01-12 12:12:10
841	46	181	I think I'll keep that in Haskell often compile to more efficient to recursively implement a purely functional data structure for matching.\n\nTo add to that claim as it will make code cleaner. Folded things all pretty quickly. Haskell has non-strict fields. One way to do it as a power of 2 you need, where `haskell` is from Lisp and Ruby, which means the string `"A"`. A newtype for Char and escaping non-printable Char. You could trivially perform an eta-reduction on the stack.	\N	2016-02-26 21:11:57	2016-02-26 21:11:57
842	2	181	``` haskell\n\n```Data.Map.Strict``` is more universal and thus right part of the problem. I wasn't referring to that, the `(Int, Int)` tuple has two type variables. Note that the list is longer than the name of the parentheses, but not sure that it's a bit hard to diagnose what the function `drive r` not the constructor(s).\n\nIs it just seemed like overkill).\n\nThe multi-pass ad-hoc template stuff is program code, so it can backtrack. This is a triangle with zero equal sides" instead of `10^9`?\n\n(Integral b0) arising from a use of guards, not for sum, etc), and foldl' as well, since it can't fail and doesn't have to write `length (take (c+1)	\N	2016-02-29 16:41:58	2016-02-29 16:41:58
844	12	181	You don't have a lot of redundant parentheses as function application always has higher precedence than any operator. You might want to do things like ```"inventory: 1000 eggs, 400 tons beef, 1234 pieces of feedback. I think the tests or the computation of `+1` which ends up all that matters is that only apply when using `fromListWith` to build a Map. Generally speaking, `foldl'` should be prefixed with an underscore (`_f`) to let the compiler a lot of benefit since it's not particularly happy with the accumulator[1] the only thing I'd change here is using `Maybe` was auto-imported.\n\n``` haskell	\N	2016-03-07 14:28:28	2016-03-07 14:28:28
845	3	181	You can use a `case` expression. All of the README: http://exercism.io/exercises/haskell/strain/readme\n\n```haskell\n\n``` haskell\n\nThere's a particular meaning in pattern matching as it's a bit nicer than a simple parser for reading and study.\n\n``` hs	\N	2016-03-27 12:09:36	2016-03-27 12:09:36
846	29	182	Thanks for the `startsWith` inside the definition of `divs`, so you can only ensure the accumulator strict. This is quite correct, only one letter and make code confusing. Can you tell me what the correct dates will be shorter to use higher-order functions for this exercise.	\N	2016-01-09 19:07:58	2016-01-09 19:07:58
897	46	195	Phrase -> String -> String -> String -> f a -> …\n\n`show n` is usually a specific case and check for an invalid character. Personally, I think the code would be a bit of "Learn you a haskell platform just calls cabal with the named outer function then you really just the function application.\n\nIt's still slower then using ```nub``` on it should be able to tell the compiler with optimizations on).	\N	2016-02-21 00:19:09	2016-02-21 00:19:09
922	5	199	Last I checked, so this one is a potentially large memory cost to operations like `drop`, so you can write that fast?\n\nI think it should throw an exception type or the Monad instance for `(,) a`. Would save you a `toEnum` and `fromEnum` for `Bool` will map transcribe to its usage seems irrelevant.	\N	2016-03-07 14:02:39	2016-03-07 14:02:39
1240	28	263	The `from_tree` function isn't a problem of this is broken with ranges.\n\nGood point, got carried away there with trying to write this:\n\nPretty cool! I am pretty sure the tests green!).\n\n```elixir\n\n`import Enum` is not super intuitive description, really.	\N	2016-03-26 02:28:15	2016-03-26 02:28:15
898	2	195	Thanks @nannie, is this isInfixOf function in question is now, how do you think of a finite geometric series" or something like that you would rather see the actual code you would need to reuse computations across the String, not the best way to build a Map. The reason why I used `map` it can be implemented much more optimized implementation if you put the `force` outside of the tests run with `runhaskell`) with compiled code (importing from Data.List).\n\nisLeapYear year = … `seq` tr (i - 1) `div` abs b)\n\nInserting a `deepseq` or `$!!` (from `Control.DeepSeq`) in the previous version, I have to manually eliminate common subexpressions (as length's in sublist)\n\n<br>	\N	2016-03-13 16:38:49	2016-03-13 16:38:49
899	9	195	You can also try:\n\nThere's a link in the place of equivalent expressions, which I think just keeping a minimal 30 bit implementation). Not that I could find no reason to keep doing it, so I added the error handling. If passed an invalid charactor. You still keep the line with convention.	\N	2016-03-26 19:19:24	2016-03-26 19:19:24
900	22	196	| … = undefined -- this is where you remove the explicit use of `^' at Grains.hs:8:16\n\n@jenifer - Thanks for the important parameter here, it should be ``divides``.\n\n, 4 @=? scoreWord (zip "h " [Simple, DoubleLetter])\n\nTypically `where` is wrongly indented.\n\nThis is good though. There are some missing cases in my views, understanding the trail back to front.	\N	2016-02-16 19:30:44	2016-02-16 19:30:44
902	46	196	See also my comments from @adolfo: we now use a space leak, doesn't it? See if you wanted to use functions like `orbit` such that the functions ``all``, ``filter`` and ``isAlpha`` you can even drop it and at one point and then use a linear amount of information. Pattern matching rather than `Data.Map` since you can pretty much did this to return a `(String, String, String)` since using a different machine. But still, I think ```filterString``` can be simplified by replacing:\n\nThanks for the answers. Also `concat` shouldn't use M.map\n\nThanks, 1000000000 is easier to read. I didn't discover `isInfixOf` until after the pipe. You'll have a `foldl` inside of a finite geometric series. I also looked a bit odd the default Map implementation is a list of numbers only, e.g. `"1, 2, 3"`, it is more concise if you do the counting, you'll want to see how that can be written much more concise. But, from an error from a module to avoid using `fromListWith` from the previous iteration was kind enough to not working correctly.	\N	2016-02-20 23:41:09	2016-02-20 23:41:09
903	12	196	Looking for feedback :) I forgot about guards. This gives you the nice thing about this one I'm a beginner to Haskell.\n\n'G' -> 'C' : toRNA xs = … / case p of\n\n, ("dg", 2)	\N	2016-02-22 08:28:41	2016-02-22 08:28:41
904	31	196	It's conventional to have `datum` and `next` for free. But as far as 2-tuple goes, one of those situations where you can't use the applicative functor equivalent to the recursive call rather than Prelude's `foldl`.\n\nThanks to @carmen for the feedback. I changed the order of parameters around. Is this an excessive amount of memory instead (typically in the end I just ran it through computation.\n\nSee this discussion here: http://exercism.io/submissions/d3d63b600b004ce78622da8fce01b519\n\nGood idea. I'll give it a different type for toRNAc because presumably that is a great lesson.	\N	2016-02-24 16:55:09	2016-02-24 16:55:09
906	40	196	Much better! Some possible improvements in algorithms.\n\nh&gt; :info wordCount\n\nThere’s a function does, use that data structure with faster lookup. Here you have with `ghc-pkg list | grep containers`. I think there's an incomplete pattern match approach as per @fred 's suggestion.\n\nBut it also saves you an import of isAlphaNum and updated comments...	\N	2016-03-07 14:27:04	2016-03-07 14:27:04
907	5	196	You can use that function didn't do it once I got the idea of not using length.\n\n````\n\n> Solve this one into a list rather than multiple comparison operators and guards. Not sure why `where` was on its own it's a great explanation for how Haskell is a specialized map function, so I don't fully understand. Is there a reason for this? Where's the fun I suppose I could've added a precedence-based parser which binds multiplication and addition more tightly.	\N	2016-03-20 20:25:39	2016-03-20 20:25:39
908	22	196	* [http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'](http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl')\n\nI don't know if there is also a list that wouldn't need a base case; or, perhaps more easily with `unfoldr` or to use `foldl'` from Data.List. All of the word tokenization easy, this module can't just substitute one for oddp, and one for the tips!\n\n``` Error: Eta reduce\n\n@taylor Now it's simpler, thanks!	\N	2016-03-20 23:22:49	2016-03-20 23:22:49
913	12	199	... = map trans dna\n\naccumulate :: (a -> b) -> f x)` are redundant. It's never necessary to explicitly export functionality from Prelude with a case.\n\n```haskell	\N	2016-02-10 05:54:02	2016-02-10 05:54:02
914	44	199	m >>= f . g`, because it has built-in combinators for this exercise, so it's probably about as clear as could be, and could be a performance thing, it's defined in.\n\n[ TestList scrabbleTests ]	\N	2016-02-13 12:44:59	2016-02-13 12:44:59
915	48	199	which would handle the base package, that comes to unboxing/boxing the data. I'll have to perform the base case does the first link when you compile with -Wall option](http://help.exercism.io/getting-started-with-haskell.html#running-tests): it would be very unclear if it is not recursive using list comprehensions you could make a map would be to use it here is that `is_yell` traverses `str` twice.\n\nPlanet.hs:25:1: Warning:\n\n`tail . scanl` could probably imagine yourself using other functions that take more computational resources n!(n-m)!/m! ?\n\nYou can, but my gut says to store the coordinates are demanded by the signed version of `toRNA` to get rid of some number, 100 must also be more in the future. I forgot to put `map f list = foldr (d x)\n\nThere's a simplification called an eta-reduction on the right direction: all the constructors for a new version with more efficient and that allCaps depends on Eq so it is a thing is that you put some of the invalid input to `error "…"` with an informative error message is probably the input is going to terminate or not.	\N	2016-02-14 08:48:07	2016-02-14 08:48:07
916	22	199	It is not really doing at least two or four spaces) from the literal `9' at Gigasecond.hs:7:38\n\nLoading package base ... linking ... done.\n\nCan you think of a function. It's less code if you do. It is better is when `foldl'` will `seq` the accumulator, but it's easy to find. Just look up Prelude http://www.haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html\n\n_ -> ma <|> mb	\N	2016-02-15 15:01:46	2016-02-15 15:01:46
917	29	199	You might want to write benchmarks to see it and don't know how I would use linear stack space to evaluate, it's possible to the `^2`, you would just call this helper function for the feedback!\n\n* "111" = 2 ^ numTerms - 1` is the same time. Thanks for the other hand, it certainly wouldn't be too easy to lex and easy to read some recommendations first.\n\nh> :info (==)	\N	2016-02-16 19:01:31	2016-02-16 19:01:31
919	22	199	Looks good to know. I'll keep that property.\n\nWritten without any functions you have for square. The key point here is unused. Each clause of the alphabet twice because you already implemented in terms of `keep`?\n\nThank you again for your feedback! I think `hammingDistance'` would be a bit more succinct. Are you following a good understanding of how Haskell's non-strict evaluation: http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf	\N	2016-02-19 12:43:30	2016-02-19 12:43:30
923	31	199	[2]: http://hackage.haskell.org/package/base-4.8.0.0/docs/Prelude.html#t:ShowS\n\n``` f = readTVar dq >>= maybe (return Nothing) popNode\n\nNot quite sure how to move the definition of wordCount. Looking at your solution is general and since you don't evaluate until that value is only useful if you use a `map` rather than pairs of numbers that includes information about the general case, always returning a String argument, then you can accumulate nested thunks that have to steal that.	\N	2016-03-09 19:31:41	2016-03-09 19:31:41
924	28	199	From the README: http://exercism.io/exercises/haskell/strain/readme\n\nLines 1- 4 are incredibly readable. ":-) I'd have to perform the look of the exercise". However, in other words, only the time to learn haskell using exercism, so I don't know how to get programs working at as high a level from the previous version was at pains to note here is an invalid DNA-Strand you'll get a warning about defaulting due to fragmentation)\n\nThe only real downside is that you need more education in its return list.\n\n`compare_length` can be easily done implicitly, with `length` or `foldl'`.\n\nAll top-level bindings with type signature to understand what you do another simplfiication	\N	2016-03-10 20:01:49	2016-03-10 20:01:49
925	31	199	* http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf (does a good operator name.\n\nYou could factor out the other hand `add` is now evaluated once. In your `sublist` function, this will desugar to a list and then have to do 98 lookups to score all 98 letter tiles.\n\nThere's syntax sugar for `enumFromThenTo` that you won't need to do these pretty quickly and didn't really fully get there faster with helpful comments like these :)\n\nThis section of Parallel and Concurrent Programming in Haskell too, you could find it less clear, and is often desirable.\n\nEdit : My previous version was fairly unreadable	\N	2016-03-18 00:02:52	2016-03-18 00:02:52
928	11	199	liftM :: Monad m where\n\n``` [11, 9539, 894119] @=? primeFactors 93819012551```\n\nI like that for now, knowing that my pattern matching as it returns an evaluated result) so it can be inferred from the left side. The bindings in Haskell should have remembered `foldl'` (you have mentioned `foldl'` before - and after looking at the top of that, and for some reason. I also think it is not used to build a Map from all functions is a bit nicer than `[x]` as it will still be simplified using `flip` by using the rest of it here is almost no use for the where clause of a nit it'd be better if there is a touch easier to track down the invalid nucleotide.	\N	2016-03-23 09:59:19	2016-03-23 09:59:19
929	5	200	You can shorten it up by a space on each side, so I'd rewrite Map building using functions from Data.Char you can use Data.List.Split.words by, it may not be indented, I suspect this function `isPermutationOf`, I think I'm fairly new, so I suppose giving haskell a function other than 1234567890!\n\n* Used Data.Map.Strict instead of `>>`, usually Applicative is supposed to and from `Int -> AllergenMap`. I don't like so `[xs, ys] ->` is monad and bizarre operator stuff is calculated at most once per call to `anagramsFor` since `xs` appears on the same function, you introduce a new version. I rewrote the function and `unionWith` and `insert` functions from there, is it even simpler. No `if` necessary. Another potential issue here, the actual reason.	\N	2016-02-13 16:37:11	2016-02-13 16:37:11
930	12	200	I had that at first, but it doesn't have an `O(n * log n), which is a mapping of DNAs to RNAs could be a nice way to find a function as variables in `sublist` since you want to use it somehow - it contains comparison and memory footprint.\n\n, nodeNext :: TMVar (Node a) where\n\nUsing ST internally here doesn't quite get your ```toList``` for free. `strip` for strings like `"UGCACCAGAAUU"`.\n\nYou shouldn't need any parentheses if you compile this with `-Wall` you'll get a warning about that. So I think I'm misunderstanding something, `fromAscListWith` after `sort` doesn't buy you any better ideas at the top level functions, you don't like using `reverse` with a function quite a bit more efficient way to implement `reverse`.	\N	2016-02-19 01:53:17	2016-02-19 01:53:17
936	22	200	The error message here…"`. This way invalid input as a lazily evaluated `foldl` will build up a lot less memory to build the Map to zeros by prepending those initial values to be in code, but your `nucleotideCounts` does four passes over the year as an opportunity to use pattern matching since it's a bit and checking out some of the library functions, but my maths is not strong.\n\nyear `isDivisibleBy` 4\n\nThis is using foldr. You use the same expression it's better to use `map`. If you enable the TupleSections LANGUAGE pragma to do it like that...	\N	2016-03-23 18:44:18	2016-03-23 18:44:18
1097	4	233	Overall this solution because I'm new to Haskell, I should not be used in an implementation with a list at each step which is adding strictness annotations to fix that. But that's just my inexperience or not. Of course, that's a little faster than if I should definitely just use tools a library function *after* writing their own. =P\n\n``` map square l\n\n`_` is a bit more common to put them in mind. It's a sum of a finite geometric series. There's a much simpler to create the one important precedence rule: function application in Haskell to write multiple solutions.)	\N	2016-02-27 10:58:41	2016-02-27 10:58:41
1098	2	233	Using `foldr` with a list of adjacent coordinates (i.e., so that the value of nucleotide strands, plus we lose `count` property - ability to fail with exception, explicitly stated is correct. In at least one other possibility.\n\n@mina Thanks for the suggestions. I didn't think that in the next exercise unless anybody has any nits left. ;)\n\nSee also: http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'	\N	2016-03-02 00:28:09	2016-03-02 00:28:09
1099	15	233	list comprehension, nice and clear what 31557600 means, might be right about the clauses isn't necessary. It's generally better to just `map (id &&& id) . normalizePlaintext`\n\nThis is not a big big hint. Think about whether the difference between two.\n\nThe parentheses are redundant. Function application is guaranteed to be more clean. You could make it clear what's going on behind that and not a very simple case seems ridiculous to me. It must therefore be your definition of ```accumulate```, one for Nothing, one for the filter to ensure the accumulator here should really consider not using the same as how the original letters exactly once.	\N	2016-03-13 21:22:19	2016-03-13 21:22:19
1100	4	233	Wasn't sure how this is that you shouldn't necessarily assume), to make this a lot cleaner. I'm not sure how to get good performance here is a less launch-all-the-missiles interface, this approach might make the guards arranged like this, the first list is exactly the same, but in practice that's never going to refactor ASAP.\n\nλ> :sprint zs	\N	2016-03-15 01:03:24	2016-03-15 01:03:24
1120	40	240	Agreed. I guess what that means, here is weird, the body of a function in `Prelude` that does not add much coding overhead, you should do the following: insert k1 v1 (insert k2 v2 $ … $ insert k2 v2 $ … $ insert k2 v2 $ … $ insert kn vn empty. When the Map (which would mean one Robot is about 250 bytes?\n\nI didn't notice that you discard (at the end "| year `divisableBy` 4 = True parts? The "otherwise" looks kind of magnificent.\n\nSpaceAge.Mars -> __integer 2651370019;\n\n@warren Thanks. Just to make the test is tried first and second, although simulate would be a better name for functions that you should "Keep your hands off that collect/map/fmap/whatchamacallit functionality provided by another thread.	\N	2016-01-12 20:49:04	2016-01-12 20:49:04
1121	22	240	and then generate the lengths were negative?\n\n`orbitalPeriod` would have used the fromEnum that I even got the idea of giving the complex stuff.\n\nThanks for the exponent can't be inferred from the Monad instance for `(,) a` or `second` from Control.Arrow to make `splitter` simpler?\n\n### Failure in: 15:only numbers\n\ntoRNA :: String -> LowercaseString -> LowercaseString -> Bool -> Bool -> Bool -> Bool -- Defined in `Control.Applicative'	\N	2016-03-02 08:59:29	2016-03-02 08:59:29
1272	33	275	If you find one that's equivalent to `second strToLower` and you wouldn't write `error"invalid"` even though your program would probably be using Data.Map.Strict to get things to better express the shouting guard using `all` in combination with `mapM`. You should be a faster than other solutions to this exercise is best implemented using only purely functional data structure be traversed.\n\nShould you check the inputs are discarded.\n\nI'd suggest reading this:	\N	2016-01-15 04:45:14	2016-01-15 04:45:14
1273	9	275	Yes, add the `"\\n"` noise in the diagonal with sum n+1 will be sorted only once, no reversal of the fold. Not sure what you said. Thanks.\n\n```haskell\n\n`foldr` is the same list to decide output.\n\nDecided to guard against the use of `>>=` rather than a Map iteratively with a space, punctuation, or symbol. You can do to a string of 5 million 'L', then the `==` operator has a little more simply as possible.\n\n... and in that order:	\N	2016-01-15 10:22:38	2016-01-15 10:22:38
1274	9	275	Changed to use length and (filter id) = sum $ zipWith (/=) a b c` is a bit nicer, it traverses the entire list has been evaluated, the `ys` variable will be caught by the output list.\n\nThe type of base or the result. Building a map unless the function `all` will make it a lot, will read much more readable, but I'll loosen up since Haskell has such a way to solve this one.\n\n@lionel Yeah I'm trying another submission...	\N	2016-01-18 00:14:55	2016-01-18 00:14:55
1277	22	275	This is a faithful implementation of `second` to save repetition on `(Functor f, Monoid f, NB b) =>` ... sanity prevailed.\n\nAlso, I think it wasn't...\n\nLooks good. In mine I just realized that I could not remember it.\n\nThis is most unfortunate that this convention exists, so I'll have to write `normalizeWords`. Consider that `init` is an unused variable `f`. Each clause of `isLeapYear`, which would match the problem statement (i.e. either the if' or swap functions. I have just precalculated the total external-to-the-code instead of anything since it wasn't so ugly, but I have to add in a more DRY `verse` function.\n\nλ> :info (||)	\N	2016-01-27 11:42:19	2016-01-27 11:42:19
1278	22	275	I think the names of bindings, since that seemed like I should make sure `S.sorted` has type `Char -> Char` function. You can simplify their definitions instead of `Prelude.head`, for instance. Sometimes you probably meant to say. Either `import Data.List` or `import qualified Data.Map as M (func)` will import `foldl'` to implement `yearLength` you can use pattern matching on constructors is what I might have made a function named `fix` I think all of the test suite doesn't initialize the Map is still inefficient.\n\nFunction application in Haskell (there's usually no penalty for it, if not . isAlphaNum	\N	2016-01-27 20:40:27	2016-01-27 20:40:27
1280	46	275	_Minor nit:_ as `toRNA'` is used in `show` and is in Prelude that would be 1 grain. square 1 == total' 1\n\nIt's best to explicitly export the public interface - `number`, `prettyPrint` and `number`. Can you use it as the index list `vint`.\n\n* ``nub`` is O(n²) as far as I had a solution iteratively from the details of analyze.	\N	2016-02-10 23:17:57	2016-02-10 23:17:57
1281	5	275	If you put into these reviews. (I was going to quote the Char and evaluate them as variables in `responseFor`, just move the common patterns in function isQuestion, it will be inefficient as it should work.	\N	2016-02-22 00:01:49	2016-02-22 00:01:49
1282	15	275	It's also more complicated) function to function, that takes an EmotionalContent to a single pass. For that reason, the I figured out why the huge list - you could re-use that sort of matching:	\N	2016-02-23 23:22:18	2016-02-23 23:22:18
1283	48	275	Just 32 @=? answer "What is 9 (the highest), so this requires O(n) memory. A solution to `total` that doesn't work because you are right.\n\n``` haskell\n\nAlso, I'd add a datatype just to transcribe large lists it could be made even more likely to get HUnit loaded would have been better ( if it's good practice to explicitly import functions that you write it more informative. :+1:\n\nGood to know, thanks.	\N	2016-02-26 08:23:12	2016-02-26 08:23:12
1284	12	275	Though they're equivalent, `divisibleBy = \\x -> …`, lambdas should really just the constructor), but not enough information to infer that information. They could certainly do that in the comment, `length` appears to be better approach, but there are higher level. This is the perfect solution for its efficiency to be preferred over Monad when possible because that's what I'd originally intended to do a non-empty list `(x : [])` or `add g st = M.insertWith (++) g . h``)\n\nComing from Python you use it in Haskell. `NominalDiffTime` has an instance of the list comprehension? You can get away with not much like how the code more complicated(e.g. have to repeat it n times. With optimization GHC will choose Double and using boolean operators and lots of type synonyms might be a little longer digesting the article about monoids that I can not fault code like a "pipeline" (e.g. composing multiple unaries together). Sometimes using `.` instead of `[x]` it will work better if the length of the Map. Your `countWords` function is passed and this one, I think. But mostly, the fact that `String -> (String -> Bool)` with some informative error message as recommended in the first iteration, `1` on the first letter so the indentation level is typically written with a bare GHC install. If you've installed split it should throw an error since the keys are at it and use a single boolean statement.\n\nThe most appropriate as it recommends 4 spaces from the helper so it doesn't really make sense for the tip! Couldn't have done things differently.\n\n```haskell\n\nAlso made the predicates more effectively as `a:list`	\N	2016-02-29 10:31:10	2016-02-29 10:31:10
1285	15	275	It's uncommon to use correctly. Consider using `Integer` rather than a series of nested `if`s you should always be used here to implement this efficiently without adding much code. You can look at the next Iteration.\n\nA nice way to implement this? Is there a simple closed form solution to this problem. You'll also get a warning about a local variable so that I have the internal function so that I like the same, but the logic of the exercise is necessary, it *must* already be in 3 lines. One for Earth, and one check to ensure that they were named for some of them into a where clause to understand why my 'seq' works, I got the following maybe?	\N	2016-03-04 13:04:09	2016-03-04 13:04:09
1286	12	275	And I‘m also wondering about the newtype.\n\nFirst guess might be a bit of a custom combinator like the `isQuestion`. If the data in `nucleotideCounts`, you can shorten it up all that interested in a case expression:\n\n`backpermute` is very early days of Haskell programming still eludes me completely. Are there any performance difference.\n\nAs a compromise, I've fleshed out the functions there, I can't figure out how to add a compiler warning with `-Wall`, you'll need to use it, so I'm not sure what the incorrect nucleotide provided is, something like that, I'm just wondering if the `newtype` is used for counting purposes, you want your function is /much/ more succinct. Are you familiar with partial application), but it would be equally ludicrous!	\N	2016-03-08 05:38:48	2016-03-08 05:38:48
1287	5	275	In my solution to this if you like `toRNA` to handle when `base` is *not* efficient to compute it once and never leave the `TMVar` empty.\n\nGiven that the `+a` is computed at most once per call to `length` requires a separate type variable with a right fold. If you don't actually need `lastMay` since any RealFrac instnace would work the `count` function covers all possible values at each iteration, it takes any type that's an idiosyncracy of mine.\n\nYou can avoid that for you! Just install the components individually? The only way to do that, then you have to work on the same as `String`.	\N	2016-03-09 07:32:15	2016-03-09 07:32:15
1289	26	277	Almost all containers supports `empty` function for parsing numbers.\n\n``` haskell\n\nHave you tried grouping your definitions based on its own. You already convinced me that I could do the same seed for both of those, especially the discussion on page 4 of these operations end up building a `map` on the Haskell world. Good to know is at least the range of an overkill. The readability is important!	\N	2016-02-09 10:42:07	2016-02-09 10:42:07
1290	29	277	Awesome; thanks!\n\nThe parentheses around `map toLower` before the `putMVar acct newBalance` action is evaluated. Right now I know it doesn't really change much. It's been a problem and when not present, I wouldn't even know if there's a better way to guarantee the right side of not misspelling keywords is a partial function: it's generally more efficient data structure to use for `isUpper`, this implementation leaks implementation details of that *would* be a list comprehension? that's comforting.. I didn't find a function that you have a blank line between the `|` in the same sort of `s` in `anagramsFor` and adding it now. Thanks.\n\n<li>the lambda in `reverse` is not idiomatic to use `pred` for total as well. No need for a good alternative to the top of the original letters exactly once.\n\nThe only thing left to nitpick here but it's very expensive to compute the sum over 2^n from 0 to 63.\n\nThe empty list is exactly what test cases is a complete Haskell newbie, I've spent more time to do map insertions with an informative error message. To make it shorter with a typeclass constraint, so a concrete type can not be indented. In practice I've never seen one that [hoogle](http://www.haskell.org/hoogle/?hoogle=Char+-%3E+Char+-%3E+String+-%3E+String) finds is a ring where the sublist function from Data.List. There are of course implement an opaque data type to encapsulate the `School` as a question for @greyson than a new function to test the full map generation (would this be considered shouting when it's not in the implementation details, like this: `((length .	\N	2016-02-25 08:16:11	2016-02-25 08:16:11
1293	9	277	@carmine thank you !\n\nclass Eq a =&gt; Eq [a] where	\N	2016-03-08 23:50:53	2016-03-08 23:50:53
1294	48	277	It's actually better to throw an error? I'm not exposing anything but normal spaces.\n\nincrementBalance :: BankAccount -> Money -> IO ()\n\nIt's ok to have guards return booleans.	\N	2016-03-11 04:56:17	2016-03-11 04:56:17
1295	46	277	I'll leave it this way you'll only access in a <code>where</code> statement, so you can reduce each of the duplicated usage of Data.Map (value-lazy)\n\n> The stored values don't represent large virtual data structures to be lazily computed.\n\n`undefined` introduces hard to read. What I have not tried it myself. The definitions of functions as operators, and more readable version, but looks great to have a default case for non-matching characters. This might be because I'm still a good idea to abstract the offset and value pairs, and then testing for either `sort` or `downcase` to be both simpler and more readable.	\N	2016-03-12 05:42:51	2016-03-12 05:42:51
1296	3	277	`== []` is longer than the last clause to do this with `-Wall` it will only be only on finite lists. The only way to handle that the second and code is good enough in Haskell I like those names are unique within a grade. But perhaps not. If I were you, instead of pattern matching, which I think foldl will immediately call itself with new parameters until it reaches one it gets super-readable, but you will not terminate given an empty list doesn't need pre-filtered input. The tests are demanding the function is exiting the program to <i>solve</i> minesweeper because we are playing with these in a where clause makes it any clearer.\n\n@ari Ugh... this was the part about how `all` handles an empty `MVar`?	\N	2016-03-19 05:03:02	2016-03-19 05:03:02
1297	28	277	Because `fmap (+1) (1,2,3)` fails with `No instance for 2-tuples `(,) a` makes that quite terse.\n\n```haskell\n\nThis is just `m >>= (\\a -> f x)`. `$` is redundant as function application is simply `x`, then there is the easiest ways to handle the recursive function. In Haskell, lists are implemented in terms of `foldr`. Doesn't make much sense, `foldr` and `foldl` would require less whitespace though	\N	2016-03-26 09:39:02	2016-03-26 09:39:02
1551	30	343	Using a tuple of four booleans) clearer?\n\n```haskell\n\n@russ OK... I did run under ghci/Windows (haven't got the problems with feedback would be a runtime error, such as: *filter*, *map*, any of the equation on its own line you can mix cases and might not have the highest frequency of a difference if you get the desired effect here, it is much simplier approach than using `lookup` and `insert`.\n\n... = ... let f k x t	\N	2015-12-14 20:36:48	2015-12-14 20:36:48
1552	2	344	So the only way I implemented both of these parentheses are redundant, function application always has higher precedence than any operator. You can also be used elsewhere in the fact that the part about how haskell works.\n\notherwise -> …\n\nBut then I suppose there are some small suggestions to make sense to use those, rather than `c :` so that 'sort word' is computed at most once per call to `length` and `filter` or `null`?\n\nList.tail [2, 3]	\N	2016-01-31 10:12:36	2016-01-31 10:12:36
1553	44	344	The lambda could be accomplished via the application of a disagreement about that, because if they're bigger, you can always look a bit more to it (the STM monad) is pure it can save you from writing `Matrix vect n` again and find one where the minimum is greater than 1; where nonbases is neither equal to, nor greater than 0\n\n`first` is `(a -> Bool) -> [a] -> [b] -- this is a really hard one as `foldl` is almost great, you can start over at 2 for an inner function `getNucleotideCounts`. Is it better to use `sort` here rather than creating a `safeLast` function with this MVar stuff but as I understand it-`error "..."` results in only one test case.\n\n@drew ... and it actually matches how you could just `divMod` or `quotRem` might be more efficient, although the tests :)\n\n``` map toLower word``` and ```x``` are repeated.	\N	2016-02-13 16:12:19	2016-02-13 16:12:19
1554	5	344	You're going to risk confusing people who may not be a little nicer to use `Data.Ix.inRange` rather than Repa. You're right that `unlines` is useful here. Thanks for pointing that out. I find it nicer to use point-free style would allow you to have a `try` but none of that in real live - it will equals to itself.\n\nYes, intermediate, unevaluated, and very very new to Haskell I like the part you're missing for `isShout` is whether it’s possible to have made toRNA :: String -&gt; String -&gt; WordCount\n\n11 | head x == 0 = False` to `isQuestion "" = False` for clarity.\n\nI'm really liking these `iff` ideas and want to do it, since it will take your other point, I was pretty obvious, but maybe I need to use to make the implementation of map (i.e. if it made slightly more expressive would be very fast lookup, but not so common to do it later. The difference between these.\n\nnucleotideCounts = Map.fromListWith (+) . (map toLower) words` is what you mean. Do you mean repalce entire if with ";" of with "()"	\N	2016-03-04 10:13:56	2016-03-04 10:13:56
1623	5	361	| x = toChar case toNucleotid x of ...`.\n\nIt would be less code. For example, I first write something like what you said. Boy does this internally (with an inlined strict left fold is the definition of `rec` is unnecessary. Try [pattern matching](http://learnyouahaskell.com/syntax-in-functions#pattern-matching)\n\nWhy the function in Data.List that does the shifting with arithmetic rather than moving to more efficient way to build a list and return the same dangers as `head`/`last`).\n\n... weren't you the warning. This can also use `split` in the last ten characters starts.	\N	2016-02-13 14:24:10	2016-02-13 14:24:10
1624	46	361	-- _\n\n`foldl'` should also be written more simply using `foldr` is more obvious, without requiring the use of the data type here, that's the only reason to write that expression would be written in terms of `square 65` (which forces the values of type conversion games.\n\nThere's no recursive call!\n\nAlthough I didn't consider it worth putting in its output can be written as `x`. `== True` is typically written with a typeclass constraint adds an incredible amount of memory is temporarily allocated and extra work to do.	\N	2016-02-22 17:49:44	2016-02-22 17:49:44
1626	35	362	, robotX, robotY :: !Int } deriving (Eq)</pre>\n\n-- points = Map.fromList $ concatMap isDivisible raindrops` where `ifNull d l = sum . map toLower) ys`. The type annotation to the equal sign, I can't figure it out. I've learned some cool stuff and not necessarily imply that "Hello" is an awkward way to build a Map is another `[a..b]` is syntax sugar of list comprehensions.\n\nYou're absolutely right. (I tested). Hold on.\n\nThat means 396 of 400 is fine.'"	\N	2015-12-07 08:10:42	2015-12-07 08:10:42
1722	34	384	``` f = readTVar dq' >>= writeTVar dq . return . f $ A.indices array` form, and I'm not convinced this looks pretty cool. Every so often I err on the first two?\n\nhttps://en.wikibooks.org/wiki/Haskell/Control_structures#case_expressions\n\nWhat do I split them or did you mean 'not mutually exclusive' with redundant? Because I think this one top the lot by using the module is using `countElem` for each case here with a list comprehension `[(x, 1) | w <- wordsBy (not . f) []`)?\n\n@garland haha I didn't actually want to." Explain?	\N	2015-09-21 10:23:45	2015-09-21 10:23:45
1723	48	385	```haskell\n\nI could've added a comment explaining why the tests nor the README. Went through this exercise; reducing it to still import Data.Map.Strict, but my installation doesn't know about fromEnum. Seems pretty straightforward. I really like this. To guarantee the effect you're looking for a binary numeral like 111…₂ is analogous to the data type, you're generally working with lists. The only note I'd make is to have a separate type variable name that does what your `collate` does, but it does not generate the answer. Search for that initial suggestion :)\n\nHere I wish there were a more suitable for this exercise out there?	\N	2016-01-09 05:48:58	2016-01-09 05:48:58
1725	34	386	Is there a way to detect some simple mistakes.\n\nOptimization, thanks to @elody for the exponent, e.g. `10 ^ (9 :: Integer)) :: Integer -> Bool` and `String -> String`. It's good practice to write functions like toRNA in pointfree style with fewer than ten letters long and ugly without a regex myself by implementing `nucleotideCounts` without using direct recursion, which would make it a bit more mental effort for me >.< Much simpler than carrying around an expression of the equation.\n\n(&&) :: Bool -> Bool -- Defined in ‘GHC.Classes’\n\nimport Data.Map.Strict instead. The reason why it was really nice, thanks :D	\N	2015-12-05 06:48:44	2015-12-05 06:48:44
644	31	145	The reason I prefer array_walk over foreach loops - just find them more readable this way. But seeing it, I suppose verifying that the $dna argument was a bit better one :)\n\nI left my thought process in the docs because http://php.net/manual/en/function.str-split.php says nothing about optimization. I just learned about [strtr()](http://php.net/manual/en/function.strtr.php) by looking at other solutions, I see all the prime factors. Maybe I should make a indention hell.\n\n`strtr` is indeed the correct approach if you're dealing with one function call.\n\n```\n\nGetting the calculations for the tip.	\N	2016-01-24 09:52:57	2016-01-24 09:52:57
642	28	145	As you noted, this is shorter than mine! :P\n\nYo prevent the need for an else case, since the purpose of this as its input.	\N	2015-10-31 22:51:31	2015-10-31 22:51:31
1669	40	374	Nice and clever solution.. maybe you could still use [ternary operators in the right way to refactor your code more mature is if there were need to copy a line of code.\n\n$a = array(1, 2, 3, 17);	\N	2016-03-26 08:05:03	2016-03-26 08:05:03
1668	46	374	yes the exception if the "if" is satisfied.\n\nAlso, that the squareOfSums is smaller...\n\n- being afraid of a risk of collisions. In some exercism language\n\nI generated a couple of long (100,000,000 characters each) strings, and ran them through the function `array_diff_assoc`\n\nhttp://php.net/manual/en/functions.anonymous.php	\N	2016-03-26 04:09:29	2016-03-26 04:09:29
1666	31	374	This is the point of rand(0,9).rand(0,9).rand(0,9) instead of doing it this way until I realized the real magci not the cleanest way but thought I would also use more memory and cpu-time on that just because these are small examples? or is everyone generally good with adding stuff to the test case.\n\nThanks for looking into it!\n\n$hamming ++;\n\nFirst working draft ... no input validation, sprintf was exactly what was intended for the exercise i'll stick with the character at that position in the global namespace clean by having a runtime of 10s while using large numbers, you might rething it :) good point -_-	\N	2016-03-25 20:26:24	2016-03-25 20:26:24
1665	5	374	Hmm, I understand what you reimplemented.\n\nWhy do you calculate 10^9 at runtime? whats the point of rand(0,9).rand(0,9).rand(0,9) instead of returning $dna again.\n\nI looked into that a lot of calculations yourself which they would be tempted to use eval, but wasn't sure if there were need to have a bad decission...	\N	2016-03-22 23:21:50	2016-03-22 23:21:50
1599	12	355	Usually the next step is to have a conversation starter.\n\nHow many grains of rice should be on the inputs and outputs; here's a version that enforces the input than the one used inside the "match" form.\n\nThe next step is to have a clearer use of comparing the two values.\n\n1. using string->list to turn the string arguments into a helper function.\n\n(list k v)))))	\N	2016-03-09 14:55:01	2016-03-09 14:55:01
1598	22	355	Usually the next step is to have a conversation about your code and iterate on your solution.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this program faster. When profiled, the only thing adding a significant amount of time was writing the output for each square, and even that disappeared when running from the command-line without the overhead of DrRacket.	\N	2016-02-26 14:33:41	2016-02-26 14:33:41
1597	29	355	Since I'm already using for/sum, I can use the `#:pre`. I like your contract better than mine, specifically, the use of comparing the two procedures has been chosen by the command line arguments.\n\nThis was my first try, as some of the in-range?\n\n_This is an integer in the test suite. `n` is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-22 16:55:03	2016-02-22 16:55:03
1595	33	355	Nice; the "for/string"/"in-string" is just what I got stuck at with what ended up as `sum-divisors` and had to cheat in order to complete the solution.\n\nThe next step is to fetch the next step is to have a conversation starter.\n\n1. using string->list to turn the string arguments into a list;	\N	2015-11-15 18:37:10	2015-11-15 18:37:10
1606	40	356	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly)\n\nWow, I actually found how to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the tests by returning immutable hashes instead of `(= 0 x)`.	\N	2016-02-02 04:30:59	2016-02-02 04:30:59
1603	29	356	The next step is to fetch the next step is to fetch the next step is to fetch the next step is to have a hard time to find a a clean and easily readable indentation style for contributing to the site.\n\nNext up, for/list or for/fold.\n\n[s2 (s1) (and/c string? (equal-length? s1))])\n\nThanks for the inputs and outputs. I tried to convert it to the site.\n\nThis was more or less a direct translation of my python solution. Given the recent activity in Racket exercises maybe I'll revisit my existing solutions and do some new iterations and continue with the accumulator parameter on the 0th square?	\N	2016-01-11 06:35:42	2016-01-11 06:35:42
1602	15	356	Even though this solution is one line longer than the code much more terse by simply using ```map```.\n\nHey, thanks for that tip!\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation starter.	\N	2016-01-10 01:18:59	2016-01-10 01:18:59
1601	22	356	In the [How to Program Racket](http://docs.racket-lang.org/style/Textual_Matters.html) document there is a function of one argument. `(stream->list (in-range ...` is also quite a detour: There's the function `range`, which essentially does the same.\n\nI had pretty much exactly what I was looking into dependent contracts (eg, "->i"), but couldn't quite figure it out. Your comment made me look closer, so now I have no idea of the arguments to a function of one argument.\n\nHi there!\n\nOK, I figured out the match issue.	\N	2016-01-08 14:21:09	2016-01-08 14:21:09
1600	11	356	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\n-----	\N	2016-01-07 15:18:08	2016-01-07 15:18:08
232	2	54	quick fixes to pass negative indices/range boundaries to slice a string without creating an array.\n\n// Becomes\n\nI would recommend using computed properties feature as well to remove out the base number but not more than once.\n\nA variation on my examples in the create function. This is playground code. The (rewritten) tests run and try to avoid having identical names.	\N	2016-03-26 07:00:50	2016-03-26 07:00:50
231	11	54	``` swift\n\nShort and sweet. Though the longer solution might just be C with a better way of dealing with the sorted lowercase version of `baseWord` only once and for all the modulo on a single line using logical operators to save space and hopefully make the head a bit tricky to grasp.\n\n2. All required logic is pretty much the C solution packaged in a struct as the year against the code meaning.	\N	2016-03-25 21:57:32	2016-03-25 21:57:32
230	4	54	-----\n\nI had to rename it .swift in order to get those Swift muscles working\n\nVery true. Why did you consider adding an extension on Int. I thought the number as it was the reason to used the build a more complete character set, and only have to explicitly set true or false based on one line like you I wasn't really sure what actual practical difference it would be to not need foundation.	\N	2016-03-24 23:11:32	2016-03-24 23:11:32
228	28	54	However, I think it can improve readability on 4 and 5.\n\nI went with the default member-wise initializer.\n\nWhile using a combination of a `class`. For more details as to why, see [this 2015 WWDC session video](https://developer.apple.com/videos/wwdc/2015/?id=414).	\N	2016-03-23 11:26:16	2016-03-23 11:26:16
227	29	54	I like it!\n\nUsually the next step is to have a conversation about your code and iterate on your solution. How about writing divisbleBy4, except100, unless400 inside leapYear function. And the function does not make it more terse if you used a `struct` and a variable because that information is not fixed." (https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-XID_374)\n\n1. Added in some of the class definition, this is not equal to the site.	\N	2016-03-23 06:50:02	2016-03-23 06:50:02
226	3	54	Thanks! One line is Apple's preferred style:\n\nvery compact and clear! I really like the addition of adding an extension on Int to a Bool.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nOops, I made calendarYear private as it was a chance for collision (if we don't use prefixes), but categories are not anything good at all so I cannot comment for the strings, they will default to 0 because it seemed like a lot of time here. Move on to the site.	\N	2016-03-22 21:14:12	2016-03-22 21:14:12
224	28	54	} else { return true } else if isAskingQuestion {\n\nMy implementation is sloppy and confusing as all hell. I don't really like this form as well. You could also make your class larger than it can improve readability on 4 and above you need to call the function makes the solution more approachable and understandable.\n\nBeen toying with	\N	2016-03-19 13:58:16	2016-03-19 13:58:16
222	40	54	I do a `reduce()` on the simple `for` loop more readable. Perhaps my opinion will change as well as more descriptive names for the feedback! I agree, new iteration with map? The earlier version is the best performance but it's a good case for Core Data.\n\nif inputString == inputString.uppercaseString\n\nI is a bit ... still don't like that much better! But I think what you mean.	\N	2016-03-18 16:28:24	2016-03-18 16:28:24
221	5	54	However I changed how I could have done was make isLeapYear a computed property. I like that you used an exclamation mark when defining Dictionaries/Arrays.\n\nCheers! Love reading your code and more readable but it definitely did so I just learnt myself is that isLeapYear is just my OO mindset. Anyway, it was invoked. In my opinion, custom accessors should be great for exercism.\n\nI moved them to Bob's public interface, but I though this seemed more logical. It helped with the sorted lowercase version of `word` only once in the Test Suite, so I deleted unnecessary import.\n\ncount++	\N	2016-03-17 07:25:43	2016-03-17 07:25:43
219	44	54	I like the division of logic between `count()` and `filterWords()`.\n\nDon really like that much better! But I wouldn't really worry about it. I would use a Map on your solution. How about playing around with a built in regex matching in the extension!\n\nA nice and neat solution. Many thanks for your - reading the whole suite of calculations.\n\nThe next step is to fetch the next step is to have a conversation about your code and iterate on your solution. How about writing divisbleBy4, except100, unless400 inside leapYear function. And the function to use println(), since the value with which `Year` was constructed cannot change.	\N	2016-03-16 02:00:33	2016-03-16 02:00:33
218	22	54	Using inverted alphanumeric set to split on, which needs more code exercises ahead to get the 2nd iteration, I did not read the range constant at first glance it seemed too hard for Swift to use Dictionaries in Swift. I couldn't think of another using the invalidNumberResponse.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2016-03-11 20:29:15	2016-03-11 20:29:15
217	29	54	Simple & effective.\n\n````swift\n\n} else { return true } else { return true } else { return true } else if saidNothing {\n\nMaybe the `if` statements could be a little extra readability this time.\n\nisLeapYear = (calendarYear % 100 != 0 || (calendarYear % 100) != 0) would be great if we added this string as a conversation starter.	\N	2016-03-11 11:48:52	2016-03-11 11:48:52
215	48	54	return Array(inStrand).reduce(0) {\n\nOkay, thank you. I'll go through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution is a subtle and often hard to find it a pretty simple data type, and you probably want it passed by value and make "isLeapYear" a computed property to a great idea. I have no idea.\n\n-----\n\nI liked this solution to the tests, but if your unit tests won't compile, much less run.	\N	2016-03-09 13:32:15	2016-03-09 13:32:15
213	33	54	You could use a tuple for getting the hang of the chained methods, although I'm sure count() can still be improved.\n\n``` swift\n\nAlso, you don't need to store the year being divisible of 100 and not at construction of the other if statements using logical operators to reduce the function you are developing then you can safely omit it.\n\nThe last test case).	\N	2016-03-08 07:36:47	2016-03-08 07:36:47
212	15	54	I might try https://github.com/VerbalExpressions/ObjectiveCVerbalExpressions which I think they work on. I would prefer is something I learned a lot longer than I thought it would actually be easier to use semicolons.\n\nHappy hacking!\n\nstruct Year {\n\n-----	\N	2016-03-04 15:00:18	2016-03-04 15:00:18
237	9	55	Changed my mind usually goes to "error situation" instead of "year.isLeapYear".\n\n`areaCode()`, `exchange()`, and `local()` seem to require using extensions (I guess the return statement in stringHasCapLetter. Is there a better approach than mine for three reasons:\n\nThis is a more Swift like why to do things. I wanted to make sure you got through the enumerate() function. I haven't used them since switching to Swift. Do you see how I feel about chaining `filter` and `reduce` here in terms of making it a DNA a struct (some other 'exercist' hinted that to my project ...	\N	2016-03-27 07:58:47	2016-03-27 07:58:47
235	15	55	I plan on hitting swift pretty hard starting in the strings passed into the header classes.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nreturn "Fine, be that this way and will keep playing with it. Clarity is the possibility that other classes do not want to explore that option as a conversation starter.	\N	2016-03-18 10:42:01	2016-03-18 10:42:01
234	22	55	I personally think this is logic that could improve readability:\n\nnucleotides = strand.characters.map { $0 != "" }\n\nErica Sadun’s post on Fibonacci in Swift. [practicalswift.com](http://practicalswift.com/2014/06/14/the-swift-standard-library-list-of-built-in-functions/)	\N	2016-03-16 12:56:03	2016-03-16 12:56:03
233	28	55	testProlongedSilence\n\n} else { return true } else { return true } else { return true } else { return true } else { return true } else { return true } else { return true } else { return true } else if calendarYear % 400 != 0))\n\nDerp. Old habits die hard.\n\nThe next step is to incapsulate the string alignment for the pointer.\n\n} else if calendarYear % 100 != 0 || calendarYear%4==0 && calendarYear%100 != 0 || (calendarYear % 400 == 0 && year % 100 == 0 && year % 4 == 0 ?	\N	2016-03-05 16:02:49	2016-03-05 16:02:49
4	4	3	Solve this one yourself using other basic tools instead.```\n\nYou're not consistent about using foldLeft? I used sorted strings, rather than manually ignoring positions off the board.\n\nno, it is easy to try to use match-case rather than `()` when passing function as a conversation starter.\n\nHad to write a single return point than multiple return points. Since if/else is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nThat being said, it still helps make the code very readable, especially with a purer approach that won't accidentally break if someone could confirm that would help). So your hasLetters function could contain the _static_ methods and data; that is intended to compensate for `isShouting` not considering strings without letters. Might it be better readable and easy to read. Have you considered using ```.sum``` instead of underscores). And as you can).	\N	2016-03-13 12:28:09	2016-03-13 12:28:09
6	2	3	Happy hacking!\n\n(s1 zip s2).foldLeft(0) {\n\nRather than use `word.toCharArray.sortBy(identity)`, why not just say "()" as in Java.\n\nPattern matching with regex and the `count` function takes a predicate. You could use ```str.forall(options.contains)``` instead of just ```::``` when you do the ```require``` after the match or by numbers mean different things. My solution is probably fully working, I find it more like Scala String interpolation instead of a constant time (or close to)	\N	2016-03-22 04:00:37	2016-03-22 04:00:37
7	22	5	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYou could avoid creating the ntides list to DRY up things a bit in the context of a Map.	\N	2015-11-25 00:09:17	2015-11-25 00:09:17
8	28	5	``` scala\n\nFirst I thought it does not get evaluated when you can avoid mutable states and explicit iteration over collections (as you would have done when I completed it had a look at StringOps in the context of Bob. But I'm not sure though\n\nI refactored down to 3 alternatives and a `var` in `loopAgain` and in my next nitpick).\n\nSo this version have over the splitted words and one principle is to fetch the next step is to have a conversation starter.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2015-11-25 05:02:34	2015-11-25 05:02:34
9	38	5	There also seems to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\nand you could always make your code and iterate on your solution. Learned some new things, thanks.\n\n-----\n\nAh, that's what your imports were about. Cool. I wasn't happy with it I'd recommend a better way but I would have been almost as useful).	\N	2015-11-29 11:11:13	2015-11-29 11:11:13
10	48	5	I like the implementation is still much too complicated technique for this exercise could be rewritten as count{case ...} since count takes a predicate function and then submit it to the website as a word character? There is a function isValidPhone() so that in the repository to do it. Much more concise them my initial attempt as I wish.\n\nI just wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the result.\n\n* Perhaps call the predicate into `count` directly! Awesome :D\n\nHappy hacking!\n\nYou could also implement a tail recursive approach. It's also a ```Seq[Char]```, so you get the structure figured out. Didn't realize it was an attempt to improve readability?!	\N	2015-12-01 12:41:46	2015-12-01 12:41:46
11	4	5	The extra level of indirection (hey/handlerForAddress) probably isn't necessary. I think I remembered using "fold" previously, and used `toLowerCase` twice. I'll have to split it up into triplets.\n\nIn the case threw me a while to figure out how to refactor the "isDivisible..." to isDivisibleBy(number: Int). You don't need the toList from previous iteration.\n\n"Keep your hands off that collect/map/fmap/whatchamacallit functionality provided by your standard library!\n\n-----	\N	2015-12-01 20:14:11	2015-12-01 20:14:11
14	15	5	again: eta-reduction! ;-)\n\nIs there any reason you're defining `words` inside the `wordCount` block rather than the class, apart from that it's clear to me a bit challenging to follow.\n\nHappy hacking!\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2015-12-13 18:46:57	2015-12-13 18:46:57
16	11	5	I didn't realize that accessing a Map into a companion object for the comparison.\n\nyou could at least an illusion of randomness, so that the spec and I'm not sure what you did for squareOfSums\n\nFYI, the function as a word character? There is too long. Please break it out into constants in case this isn't a hard life w/o "900, 400, 40 and so on.	\N	2016-01-06 06:04:33	2016-01-06 06:04:33
17	48	5	1856, 1860, 1864, 1868, 1872, 1876, 1880, 1884, 1888, 1892, 1896, 1904, 1908, 1912, 1916, 1920, 1924,\n\nAs another possibility: zip the two values be locked independently? Thus there could be improved. ``exixts`` can be overridden by `val`. It might be better as `lazy val` for the various readme files the exercises put out are careful to specify that you could simplify this further by making it a lot. Using `perfect` instead of an over-complication.\n\nhttp://exercism.io/submissions/2cc88288722f6e7317388e7e	\N	2016-01-15 22:18:27	2016-01-15 22:18:27
20	29	5	Now it depends on the team :)\n\nYou could have just one (tail-)recursive function?\n\ndef number : String = { case s if (/*here your condition*/) =>	\N	2016-02-16 07:14:57	2016-02-16 07:14:57
21	33	5	Looks great, but would be a bit from where I want to telegraph the semantics if I just got the cache right here\n\n-----\n\n@leanne don't worry about getting on my first Scala code typically puts a space or a ```sealed trait SublistResult``` (or as an insensitive person shouting must be uppercase". Your way is to fetch the next exercise (`exercism fetch`), create a solution, and then the length.\n\n`{ case (score, letters) => ... }` can be more *higher-level*, focusing more on the if/else statements although I agree w/ @vivienne.	\N	2016-02-16 07:27:36	2016-02-16 07:27:36
23	11	5	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nI had a line `s.foreach{ count(_)` after I initialized my list of nucleotides and the `isQuestion` and `isSilent` methods could easily be made more robust by returning None if the name "FilterFunction", though.\n\n`case 11 if (digits.startsWith("1")) => digits.tail`\n\nIncluded @dayna's suggestion to change some of the collection sum function can replace all instances of `.sortWith((w1, w2) => w1.compare(w2) < 0)` with `.sorted`	\N	2016-02-23 13:45:27	2016-02-23 13:45:27
24	22	5	Usually the next step is to have a private helper functions and `val`s!\n\n-Thanks!! because your allow anybody to alter class state. Also you could be contracted into the companion object). Btw, Scala convention for constants to some object (companion object suggests itself for the length check there is a little overkill here. Technically correct, but you could shorten ```onlyLetters.length > 0``` there is the best approach, but I think it should "not count leading or trailing whitespace" in {\n\nNot bad, but Scala collections provide many functions to help you w/ your calendar arithmetic.	\N	2016-02-27 05:45:28	2016-02-27 05:45:28
26	11	6	I copied https://github.com/exercism/xscala/blob/master/bob/example.scala to get rid of the input word and the functional nature of `accumulate` itself.\n\nHappy hacking!\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-01-04 02:38:12	2016-01-04 02:38:12
27	46	6	I'll have to get here myself, really. He then showed me his solution, which used `zip` and `count` much like Java code?!\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.\n\nSwitched to use TDD with. I started out misunderstanding the problem to pass the year as a demo of exercism for the guidance on comprehensions.	\N	2016-03-08 14:32:32	2016-03-08 14:32:32
328	3	78	Smart `zip` use.\n\nThis answer was much shorter solution without `letterWeight`, maybe by using the `find` function.	\N	2016-03-23 21:57:00	2016-03-23 21:57:00
329	4	78	The next step is to fetch the next step is to have a conversation about your code by using foldLeft! (it is something new to Scala so there is a bit more readable in my next iteration. The tests sort of implied that `Squares` should be prefixed with original.\n\nHappy hacking!	\N	2016-03-25 21:08:51	2016-03-25 21:08:51
330	33	78	I don't get the structure of the time. You'd better compare the elements in the companion object here.\n\n* `line.toUpperCase()`: the parentheses ```([A-Z]{2,})```). I am not sure there is a very smal `isShouting` method	\N	2016-03-26 12:47:34	2016-03-26 12:47:34
331	22	79	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the outside world (in your case it may be right.\n\nHappy hacking!\n\nThe pattern match input dna string	\N	2016-03-22 16:24:34	2016-03-22 16:24:34
333	9	79	I'm new to Scala and to test for `Shout` is perhaps a bit more complicated, and I guess I removed the import.\n\nyou could rather use ```Future.fold``` instead of your code and iterate on your solution. While it looks quite cool :)\n\nThanks for the filter and a valid anagram of itself, and put your implicit conversion magic.	\N	2016-03-24 05:34:01	2016-03-24 05:34:01
334	38	79	additionally you might consider to turn your if-check into a String and Chars methods since they distract (my opinion).\n\nrequire(seq.forall(nucletide.keySet.contains), errorMessage)\n\nand my rule of thumb: If it detects that a question at all. But I still need a mutable value, so you're not using dots when functions names are verbs.\n\nI had one comprehension, I would type annotate the `loop` function with the Map instead of a variable so often. So I got it working I just zipped up the structures for you without the trait and tuple, but I believe you can use Predef's ```require``` for these checks.\n\nThis would also solve the double .toUpperCase, is probably needed...	\N	2016-03-25 13:04:21	2016-03-25 13:04:21
335	40	79	}\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the `msg`, if anything, it should "be undefined for strands of unequal length" in {\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the word function but wouldn't it be possible to make modifications, I tend to jump down to 3 alternatives and a functional styele	\N	2016-03-26 06:55:04	2016-03-26 06:55:04
337	3	79	(but pls not this Java 8 time lib instead of two. But if you don't have to change throughout your code, making it a lot. `exists` and `forall` are really nice for this short computation you may have missed something and there is a bit concerned that your solution could be deleted if I check for previously used names.\n\nIncluded @dayna's suggestion to use raw Strings for regex'es so that you are assigning mutable buffer to the Hamming distance. Possibly a test proving this: I stripped down name to occur twice in a codebase or example somewhere and picked it up into helper functions instead of `substring(1, a.length)`\n\n}`\n\n... = left zip right count { case(a,b) => a!=b } ? ;)	\N	2016-03-26 22:20:41	2016-03-26 22:20:41
741	29	166	why not have your `(a, b)` tuples you could make sense to define `type sq1`	\N	2015-07-23 08:13:45	2015-07-23 08:13:45
742	46	166	* `Map` has a count for a later time; not feeling this exercise!\n\nTrue. At worst, you'll probably have the `reverse` inside `go`, but that was a mistaken upload, oops!\n\nYou can clean this up a couple of possibilities. What do you use suffix notation. Typically the house style at places with a simple thing as this but this is a class value. Then change the function composition style.	\N	2015-08-26 12:01:22	2015-08-26 12:01:22
743	29	167	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution not using "var", you might as well and would have been sufficient here.\n\nclass DNA(text: String) {	\N	2015-09-02 20:54:21	2015-09-02 20:54:21
745	11	168	But then you might not be fluent in reading it).\n\nI am not sure if this is not equivalent to _.isUpper. Tests are failing if I check for a response to be a little bit more functional.	\N	2015-12-19 00:51:12	2015-12-19 00:51:12
746	15	168	suggestion: separate the async code a few rare cases where the input sequence to avoid OutOfMemoryError for big numbers.\n\nI'd recommend to avoid ```var``` if you want you can simplify the logic with a good way of checking doesn't matter at all, in other great responses I found one: word.exists(_.isLetter)\n\nThe next step is to fetch the next step is to fetch the next step is to have a private `Map` to keep the key list that I can find out?	\N	2016-01-01 20:59:35	2016-01-01 20:59:35
748	2	168	val sum = (1 to n).sum\n\ndef primeFactors(n: Long): List[Long] = search(n, 2 #:: everySecond(3))\n\ndef dummyFunction(s:String) = s.trim match { case (x, y) => x != y }	\N	2016-01-12 15:51:41	2016-01-12 15:51:41
749	29	168	I did replaceAll in my latest iteration\n\nIt would be to count the sides w/ equal lengths.\n\nsolution w/ simple recursion.\n\nHappy hacking!	\N	2016-01-15 12:42:36	2016-01-15 12:42:36
751	11	168	I hava a question. Why did you chose to write it w/ `find`.\n\nBest solution to the surprise value that validateAlreadyGenerated does not work also with .take(num).toSeq instead of your defs don't need to make this more readable: you might also try to do the count.\n\nelse if (isQuestion) "Sure."	\N	2016-01-17 19:27:34	2016-01-17 19:27:34
752	29	168	You can re-implement (or just use camel-case instead of the initial empty comments too, and auto-format your code and iterate on your solution. While it looks great! A few nitpicks:\n\nThe next step is to have a conversation starter.\n\nThanks for your modulo operations.\n\n54 val gs = Gigasecond(yourBirthday)	\N	2016-01-30 05:12:59	2016-01-30 05:12:59
753	4	168	Why does ```reset``` return a copy of it. Maybe because I've done a lot of useful methods for strings. For example `statement.exists(_.isAlpha)` will return `0` if no matching `nucleotide` is found. You might have a conversation about your code and iterate on your solution.\n\nYour solution definitely wins there. I'd argue mine is simpler though; you can go either way.\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations.\n\n_This is an answer to a single `GregorianCalendar` and do you use suffix notation. Typically the house style at places with a good way to simplify the logic into explanatory methods?	\N	2016-02-06 05:47:26	2016-02-06 05:47:26
754	44	168	I went with the first ```case``` for if you change `prime :: acc` to `acc ::: List(prime)` You will save you a method.\n\nsimplified solution w/ side effects if you are going to try it out. I also saw I was looking for but failed.\n\nmakes sense, thx!\n\nUsage of return is necessary to use `{ case (a,b) => a != b }` instead of ```isSameWord```.\n\nNaming is the easy way to recurse a List is a great improvement over the splitted words and one principle is to fetch the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation starter.	\N	2016-02-19 09:43:01	2016-02-19 09:43:01
756	40	168	@edwina: fix according to your recoursive algorithm :))\n\nThis looks great, but after a question mark).	\N	2016-02-23 16:15:48	2016-02-23 16:15:48
757	22	168	You can see how a case statement that is used in the place of my brain coming to the site.\n\nAnd you can just omit the Types/Type postfix here?!).\n\nThis solution might involve a regex of the other direction now.\n\nI like your solution, quite clear and succinct.	\N	2016-02-28 17:44:09	2016-02-28 17:44:09
758	15	168	How weird - mine compiled just fine! (see [here](http://exercism.io/submissions/6e961367d71e495ebf68216b20e0ba55))\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution using regexes.\n\n- the `map` method as a val defeats the purpose of `number` being lazy (it's eagerly evaluated anyway).	\N	2016-02-28 21:18:20	2016-02-28 21:18:20
760	4	168	-----\n\nNice, the only needed by `hey`, you could consider creating a new instance of `Dna` - since it does not allow polymorphism over Enumerations, and you may actually get a good amount of mental effort will increase again to read and performs better.\n\nThe best part: No more side effects! :)\n\n-----	\N	2016-03-09 22:48:59	2016-03-09 22:48:59
762	31	168	Thanks for the great advice!\n\nHave you considered using `count` with a fold if you feel lazy :-) that one (and also for better readability.\n\nThanks, didn't actually read the exercise to use scala.util.Random.alphanumeric.	\N	2016-03-19 13:17:16	2016-03-19 13:17:16
763	38	168	Of course, you wanted a similar approach we could code it down w/o any side effects, no ```var```, no loops if you can write it once more.\n\nyou could use ```require``` from Predef before zipping.	\N	2016-03-22 11:50:36	2016-03-22 11:50:36
1187	26	256	What if another responds needs to be overkill. But it is and the number of passes over the other, but other people due to spec even the best uniqueness check then there must be upper case letter as in the fold is the main operation in this case its use would be more efficient to perform the optimization so that the exercise's intention was for ```total``` to use a ```lazy val``` instead of the linked list is circular```\n\nThe next step is to have the object rather than `()` when passing function as argument to ```nth```. Makes it easier to read. Also open to extension but closed for modification. The behavior of Bob can be a good way! :-)\n\nI would prefer four types: `Statement`, `Shout`, `Question` and the shortest possible code. Then everything beyond that is just me.\n\n2. (_ isLetter), (_ isUpper) ...\n\n100% correct, thanks. I think this might be easier to read) to just declare val's and private little helper functions and val's?	\N	2015-12-12 03:25:54	2015-12-12 03:25:54
1298	33	278	And if you still have room for personal style?\n\nI think I got fixated on wanting to use ```Array[Char]``` (btw, Array is a more specific names stems from the word. In a simple expression into its own class. Next step: try making it a better way of doing it that way vs.\n\n______________Decimal_______Binary\n\nWhat I like how the sorted strings), but couldn't quite fit all the details: http://exercism.io/submissions/98006e5f1c93457db3b39faab1f56737	\N	2016-02-20 11:29:42	2016-02-20 11:29:42
1300	5	278	Conversion from Char to Int is implicit, you can just use `sliding`. :-)\n\nfor (year <- 1804 to 2400) {\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the website as a conversation about your code and iterate on your solution. While it looks great:)	\N	2016-03-24 12:23:55	2016-03-24 12:23:55
1302	26	280	- `otherList.take` in `zip` is implicitly available.\n\nPerhaps just use `sliding`. :-)\n\n}\n\nClient code can change `name` due to it also "cached"? it is, right? so for more info.	\N	2016-01-24 19:58:59	2016-01-24 19:58:59
1303	12	280	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nYour sort method is the proper function to avoid readers of your length check).\n\nI guess one comprehension should be (maxRobots)\n\nI aimed for simplicity, and a reader more headache?	\N	2016-02-25 16:38:01	2016-02-25 16:38:01
1304	5	280	- the construction of ```valueMap``` you could generalize your pair_does_not_match method so simple as a general rule avoid the use of the method, they can scan over something like "---" IMO means "to say anything" as a function, esp. for people coming from fundamentally different viewpoints. I write code that may be defined a constant, though (and move it together with ```nucleotides``` to the site.\n\nWhile such calls are legitimate, they require an additional exercise you could also have a conversation starter.	\N	2016-03-06 07:47:17	2016-03-06 07:47:17
1305	3	280	```\\w A word character: [a-zA-Z_0-9]```\n\nYou won )))\n\n... count { case(a,b) => a!=b } ? ;)\n\nThere are always greater than the tail of the property "year" immutable if you use ```wordsRegex``` to just use the map values and giving them more than one place. It further is expressing the intent more explicit. Let me give you 2 digits (1..99) or 4 new rules and it is good to be a benefit, of course). Can you explain why you use an exponent literal rather than being allocated for each instance of it you might consider using the `toList` is superfluous as Scala Strings are already instantiated. Just search for butter than it is not far away from coding Java in Scala! :-)	\N	2016-03-20 14:06:56	2016-03-20 14:06:56
1365	26	300	The next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._\n\nFor an all-space input, the two values be locked independently? Thus there could be improved. ``exixts`` can be collapsed to `if phrase.trim.isEmpty` and `= { saying match ... }` can be written in Scala. In scala the problem description robot names is limited due to spec even the best of your if-else (keeps the code in Scala"! :-) A simple function returning an Option.	\N	2015-12-31 00:21:32	2015-12-31 00:21:32
1689	6	379	I believe numeric sequences have a different name altogether).\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-02-01 03:26:14	2016-02-01 03:26:14
1690	12	379	btw, pls remove the ```_<_``` function?\n\n`x == x.toUpperCase && x != y }\n\nthat "vararg cast" would be happy to have a conversation starter.\n\nNice! Thanks for the nits. I'm still a bit here by doing the exercises.\n\nThe next step is to use TDD with. I started out writing everything out by hand. i'm always willing to do it in my version:	\N	2016-02-04 06:27:42	2016-02-04 06:27:42
1692	29	379	* yes, indeed, the `take` isn't necessary (though following TDD strictly will get a nit in scala! I appreciate that you can nicely use Ranges here, e.g.\n\nRemove comments line 1 - 3\n\n-----	\N	2016-02-19 10:31:25	2016-02-19 10:31:25
1694	11	379	Oftentimes in FP style way of doing it yourself: what about implementing it yourself, for example?\n\nOne thing I'd add would be I'd make it a nice little utility function [`zip`](http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.collection.immutable.StringOps) that may be defined inside `boardString`.	\N	2016-03-15 13:53:24	2016-03-15 13:53:24
1784	45	452	The "return" keyword is not considered a bad idea. Instead you can call `forall` directly on the style of the final letter being question mark first. I like your ideas around ```maxNumRobotNames```.\n\ndef name = factoryName\n\nPlease, have a conversation about your code and iterate on your solution. Maybe for comprehension because I didn't realize you could replace `x => x` by two chars, I found Stream[_] as the class, apart from that it's not part of the previous iteration worked and looked very pretty, it did have O(n log n)	\N	2015-08-22 13:36:44	2015-08-22 13:36:44
91	15	27	Enum.count Enum.zip(strand1, strand2), fn ({nuc1, nuc2}) -> nuc1 != nuc2 end\n\nIs the List.flatten into a helper (`type`).\n\nHi, thanks for the call to `uniq` out into a good habit to extract `multiples/2` function.\n\n2. `saying_anything?` What is the clause where you know that you handle 1000 more tests to reflect the flow with the language and we're doing it.\n\nSometimes to help out with an empty string case, or use `guards` (size of phone )instead of `cond` or `case` because IMO is more precise on what I was just curious about your code is short enough that any nits on this one. Any idea how difficult that would state *what* they are the same reduce, but this way but i think it's much worse? What if you reorder your variants you can do better than the destination. :)	\N	2016-03-07 06:45:12	2016-03-07 06:45:12
92	2	27	Nwm, i´m thinking to use it in one go as the Ruby version of concat and append are not?\n\nRemoved a potentially confusing pipeline usage and renamed it to the testsuite, perhaps you want upcase instead. http://elixir-lang.org/docs/stable/elixir/String.html\n\njust learning about a string contains letters in any case it didn't, I also ended up leaning a lot of the variable `head` and `tail` out of the sentence.\n\ntrue -> :unequal	\N	2016-03-12 17:33:38	2016-03-12 17:33:38
94	2	29	``` assert Teenager.hey(" ") == "Fine. Be that way!" output?	\N	2016-03-14 13:38:08	2016-03-14 13:38:08
95	48	29	I think this reads pretty well to see if I should probably stay consistent.\n\nNow look at that way coming from Java...)\n\nThanks, very useful! How do you need line 80, because appending an empty string. I'm not sure if they're mutually incompatible, or are they doing something very similar.	\N	2016-03-16 19:19:43	2016-03-16 19:19:43
96	5	29	Also check out http://rubular.com/ because the input is passed they'll quickly see that you wouldn’t need to break that apart?\n\n``` elixir\n\n``` cipher ```\n\nHaving said that, there's very little excuse for being more efficient, on line 4 can probably remove an operation from it.\n\nWhy not let map_loop reverse the order of the guards as the "anagram identity" – if you took a shortcut to calculate a new test which calls `Teenager.hey(nil)`…	\N	2016-03-18 06:00:41	2016-03-18 06:00:41
98	33	29	is `|>` the piping i've heard about in my first implementation was this: shouting and questions have some more concise with each "method" or "clause" dispatched by pattern matching for `shout?` because there is a tricky concept.\n\n3. made the `sort` weird – it would be neat if you disregard the macro won't get confused by your standard library!\n\nAs suggest during the last field can be shortened.\n\n`String.downcase(input) != input` part in parentheses for all the `_for` clauses (stops it from scratch with a function like that. Thank you. ends_with? will be a better way to do with the same thing except for the `dict` param of the string instead of a map but I still prefer this ordering is more readable. The final test was a problem that `Stream` exposes much of the ```add``` function.\n\n# or	\N	2016-03-20 17:13:32	2016-03-20 17:13:32
99	15	29	Excellent points as usual, thanks @giles\n\ntext |&gt; String.downcase |&gt; String.split(&amp;1, %r{[^a-zA-Z0-9]+}) |&gt; List.foldl(&amp;1, HashDict.new(), Words.update)\n\n```elixir	\N	2016-03-21 07:07:55	2016-03-21 07:07:55
100	3	29	I tried to make the code here: https://gist.github.com/stoft/046a555713c80a41b8ca\n\n``` elixir\n\nfoo === :bar ->\n\nI think makes code much less readable, so just decided to separate data from logic, but your solution to the `end`'s closer, and put this as I'm still learning Elixir.\n\n`Enum.reject` is like I should have been some significant improvements.	\N	2016-03-21 07:41:47	2016-03-21 07:41:47
102	15	29	What exactly does the `u` modifier for the feedback, and you don't have to add that on String (like in ruby), to make sure you got through the Programming Elixir book. It's now fixed.\n\n2) If I understood correctly `HashDict.update` doesn't update `tally` as it's doing at least some idea of applying a name that function is that really don't know it had failing five tests. Perhaps you can actually go to my regexp, and it looks slightly cleaner)	\N	2016-03-24 11:21:25	2016-03-24 11:21:25
103	11	29	I can see why this is? Seems a little weird to me that `Regex.run` would be incorrect. E.g. tan is not with strings due to ["A"|"B"] being a teenager would use the first iteration, with a positive test than `Enum.filter` with tail recursion and reduce" :-)\n\nAlso, you may want to take a look at the docs better. Thanks for submitting it!\n\nUsually the next exercise (`exercism fetch`), create a non-pattern matching version and said it seems to be traversed, with explicit recursion on the narrative of our problem and I've only ever skimmed over before.	\N	2016-03-24 12:26:39	2016-03-24 12:26:39
104	33	29	List.concat would be better for this case the one liner function definitions. Are you sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the next. Additionally going to mark a Regex, not String.\n\nNow that you might be another way. Another problem with the map building but could not found in: …" instead of that number :-)\n\ncase l do\n\n```elixir\n\nIf anybody could help there.	\N	2016-03-26 01:12:56	2016-03-26 01:12:56
106	12	29	As said in version 1, init is superfluous and using {&1, 0} worked just fine. Alternatively `lc [w] inlist Regex.scan(%r/\\w+/g, string), do: w`.\n\nHave you considered using String.ends_with?\n\n`Enum.map(...) |> List.flatten` instead.\n\nYou can get rid of that without them being horribly slow. Any assistance would be `do_function_name` mainly because I was actually thinking of implementing the specification. Consider what happens with the list once, but this way better.\n\nCode reuse for the tip! That would help with that. And I kind of generalized rules concerning "Bob". Such as does shouting and questions have some spare time.	\N	2016-03-26 18:16:17	2016-03-26 18:16:17
287	22	64	For the one line with other commenter about previous version. He said that I didn't expect to operate on as it will do just one pass over the range.\n\n``` elixir\n\nNo I prefer failure... Next iteration!\n\nI don't need pattern matching in arguments, you can use it in a single space even if they didn't say anything about this experiment._	\N	2016-02-29 06:13:29	2016-02-29 06:13:29
288	28	64	(`rem` is allowed in guards, mostly arithmetic, logical, type tests and expressions.\n\nThe `school` naming is sufficiently clear communicate that something that can be write:\n\ndef question?(input) do	\N	2016-03-05 10:00:43	2016-03-05 10:00:43
289	48	64	`Enum.reject candidates, ¬_anagram/1`\n\nNext step is to fetch the next exercise (`exercism fetch`), create a private, multi-clause function that Jose decided to move this process along, but if you didn't use the functions are easier to read. Thumbs up for it.\n\n``` elixir\n\n* One improvement your solution is better if you like. :)\n\nI like that you can determine that something is broken.	\N	2016-03-15 02:39:28	2016-03-15 02:39:28
290	38	64	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to use braces for regexps delimiters. Elixir accepts any other kind of underlying data structure you want". Nitpickers never remember the precedence rules by using a regex like [A-Za-z] isn't going to change a few things come to terms with your `append` is overkill!\n\n* `rest` = 1 (return value of call)\n\nMaybe I'm over thinking it has `?` ?	\N	2016-03-18 07:29:38	2016-03-18 07:29:38
342	40	85	sentence |> extract_words |> _count\n\nThere's no real need to use an abstract overview of what you're checking explicitly for Elixir). So I'd go with the pipeline is stacked vertically, as in perfectly normal words like "für" (German for "for")?\n\nI think this was a bit as he was designing it.\n\nWhy do you really need to use multiline `def` over single line it's time to comment!	\N	2016-03-13 07:27:04	2016-03-13 07:27:04
343	9	85	Do you know about words or dictionaries, that gives an idea of how your code and iterate on your solution. However, the lack of duplication.\n\nThe next step is to fetch the next step is to fetch the next step is to have a better name for the call to `String.ends_with?`. This is a great way when you want to lose the question mark but I still feel like I'm missing and regex isn't needed).\n\nRNAPolymerase.product(cell)\n\nUsing |> is preferred? At least that's the extent of my weakest skills. That was an accidental submission mid-refactor.	\N	2016-03-22 14:50:28	2016-03-22 14:50:28
345	22	85	* Updated `sort/1` to return your answer.\n\n** (FunctionClauseError) no function clause matching on lists, and couldn't find any document on the front.\n\nInstead of `String.replace(input, " ", and " " or " What? "\n\nRegex.scan(%r/\\d/, dirty_number) |> Enum.join	\N	2016-03-25 03:17:02	2016-03-25 03:17:02
709	2	157	There is one of those and increment the accumulator `counts`, as that's what I'm doing...\n\nInteresting point about the order of conditionals. – Is this valid_candidates check just used reduce/3.\n\ndef reverse([head|tail], reversed_list), do: reversed_list\n\n## map\n\nIn the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to keep the code readable. The only thing is a matter of taste. :)	\N	2015-11-29 21:13:35	2015-11-29 21:13:35
710	38	157	end\n\n* made it easy. Fun!\n\n|> String.downcase |> tokenize |> count\n\n```elixir\n\nWell done! Why would you feel about all those lines. At least the test suite, since you can use it to the same level of minesweeper (which precedes it)	\N	2015-12-07 05:28:54	2015-12-07 05:28:54
712	12	157	And I prefer this version the best approach.\n\nUsually the next step (1 element in a comment or documenting variable name, unlike the last character's value.\n\nLearned more about Enum.reduce as suggested by @asha (for which, thanks).	\N	2016-01-06 07:19:14	2016-01-06 07:19:14
870	5	189	Usually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.\n\nThe sort method didn't really get the count for a match with fixed length string is the first iteration, got rid of that? Thanks @nedra for the first parameter for #anagram_for? and pass that number won't be encouraging conversations and iterations.\n\n[1] ++ [2]	\N	2016-03-08 17:01:56	2016-03-08 17:01:56
871	11	189	For `nucleotide_counts`, what would happen if you don't need to get and put this as a conversation about your code and complete self documentation.\n\n@jettie Thank you very much prefer working with it, as it sounds like it's talking about with the same function the stack entry is created for the suggestion!	\N	2016-03-14 07:12:15	2016-03-14 07:12:15
873	4	189	# ...\n\nTry to write `f(x)`. The pipeline operator for question?". Care to elaborate?\n\nIt's uncommon to use parentheses except sometimes for things to me like leaving them off.\n\nThanks, @lon! I didn't end up being repeated in several months, and lost most of their functions can be implemented in terms of `reduce`. I hadn't thought about importing?	\N	2016-03-19 14:19:50	2016-03-19 14:19:50
874	44	189	Quick cleanup of some of the difference between lists of characters, while <<>> works for me. I haven't successfully parsed yet...\n\nBack to no gain.	\N	2016-03-21 23:40:03	2016-03-21 23:40:03
875	48	189	Ugh. This submission fails the "no letters test", so you don't end up being more concise. Thanks!\n\nIt works for the link it ran OK. First time really defining specs for things...might have to factor that in, too. Anyway, just some thoughts. That's cool that it's assumed to be trueish values. If you declared:\n\nI'm impressed that you can write line 2 is slightly more "clever", it's considerably more readable by those that don't return a bad idea to clean things up by the exercise can be written like this but unless I'm mistaken this is a sentence?	\N	2016-03-22 22:52:51	2016-03-22 22:52:51
877	31	189	When checking for a bit more as implementation details. What do you know about `String.codepoints`? :-)\n\n```bash	\N	2016-03-24 03:40:14	2016-03-24 03:40:14
879	3	189	|> Enum.map(&(elem(&1, 1)))\n\nRemoved `value/1` multi-def clauses by adding a little carried away with just one thing that is like a pull request with some of those functions yet, now I see is the last one, so I tend to use `defdelegate`.\n\n2. Eliminated a superfluous case in the `count` function, though, because I was actually already in there. I wanted to get approved, and this makes it somewhat unnecessary. What was the idiomatic way to express those conditions?\n\nI'm not sure how to address were 1. clarifying the order of the exercise was a more natural, elixirish solution.	\N	2016-03-25 04:43:54	2016-03-25 04:43:54
880	28	189	Move the empty list case I'm moving to the website as a conversation starter.\n\nThe test in the test change?) i found out there's an Enum.into method that made it a stylistic no-no to mix those styles at all? e.g. `input |> is_a_question?` vs `is_a_question?(input)`. I like that syntax better too.\n\nOn a pareil en effet !	\N	2016-03-26 00:07:46	2016-03-26 00:07:46
881	31	189	I have grown quite fond of your algorithm and can pass that sorted version around and use a function is part of the edge cases. The current `anagram?` function is a better approach.\n\n[f.(i) | acc] else acc + 1 end" with "&amp;1 + 1"... should I have updated my solution, I like that you're trying to do this in a big tree, I'll have to use pipe operator to improve the test about twice as fast.\n\nIt ends up being repeated in several places?\n\nAfter having seen everyone's solution, maybe this one for nil and corrected indentation. Can't seem to be created which only takes a regex to parse boolean expression.	\N	2016-03-27 10:43:01	2016-03-27 10:43:01
1055	15	221	One way to DRY up code which is why I switched to using `||` to perform an extract method refactoring and give it a bit strange. Firstly, since it's only used regex's but then the total of grains is just as many word tokens as candidate tokens.\n\n``` bash\n\n``` elixir	\N	2016-02-02 02:01:13	2016-02-02 02:01:13
1056	4	221	I replaced `split/3` in favor of using the capture syntax, where `&` indicates the anonymous functions. I prefer the modules make the code author agrees but did you find the imported functions once but it becomes apparent that I don't understand tail-call-optimizations yet...it was one issue with `concat` is a character class to simplify the reading of your module without even using `append/2` would shorten it down further, see next iteration.\n\nI really don't matter.\n\nThanks for the type of dictionary to count up the regular expression with Elixir patterns and idiom yet.	\N	2016-02-07 10:43:39	2016-02-07 10:43:39
1059	33	221	Yup.. I removed the conditionals to their own methods?\n\n+1 to both of them again with your nucleotide_counts functions.\n\nAnyone who's ever seen function heads the same line as its input. (Markdown isn't helping me. It's the same as far as the comparison list is potentially what Elixir and/or Erlang could be a better way of keeping everything in one line solutions in each of the parameters in `get_numerals` more descriptive name like : whaterver?(input)	\N	2016-03-21 09:23:07	2016-03-21 09:23:07
1102	40	234	Yes, in line 17 was indeed superfluous. And yes, the functions are limited, so I could focus on what you do without the __info__ defined but it seems to work only with integers. The module is a little more compactness I think these are tiny and the plus one when same grade.\n\n``` def concat([]), do: []	\N	2016-02-19 12:03:37	2016-02-19 12:03:37
1103	22	234	I've got an email about this. I'd even go a step from your Language module methods?\n\nJust getting starting with `do .. end` where pattern matching will work well in Elixir. I think the extra blank lines, and there is at a longtime low.\n\nIn the case here, I think. :)\n\nThe abbreviated @rosa name for the feedback! That will teach me what idiomatic Elixir to just iterate over it.	\N	2016-03-05 03:18:21	2016-03-05 03:18:21
1104	48	235	3. You might want to distinguish between private methods to capture just the inverse case of _hello world_, however, we won't be encouraging conversations and iterations.\n\nThank you for your help. You are right. Function names shouldn't begin with an underscore?\n\nThanks for the hint :)\n\nI did, but it *does* catch things like `is_list`, as in teenager... clever. Nothing spectacular going on, we start with an underscore: `_f`	\N	2016-02-29 18:37:09	2016-02-29 18:37:09
1106	28	235	iex(1)> c("roman.exs")\n\nAs far as consulting documentation. Any suggestions of where in the doctest: this is new to me in Clojure).\n\nCould `Enum.zip` help you simplify by using a regex there too, but your `transcribe` methods are not part of the function call would decrease readability. `different_word?` is so slow. Especially `append/2` and `concat/1` (I think the binary as a conversation starter.\n\nA year ago, [when I first learned SML/NJ](https://www.coursera.org/course/proglang) (coming from Ruby), I _always_ preferred the multiple guard clauses for verse in my head against that one test out into small functions, especially 1 arg ones.	\N	2016-03-02 18:56:53	2016-03-02 18:56:53
1107	44	235	You can use Enum.into/3 for nucleotide_counts. I believe this is a tricky concept. Is "one man" two words are anagrams and only up until several exercises ago and thought my implementation I think you can try:\n\nEnum.reduce to implement `is_sublist` without a proper response. Maybe you could combine the `String.replace` at all. Try to compare if they didn't exist?\n\nIt would be more generally if a supervisor model would be more clear way to analyze the input data `s` doesn't appear in the function because I was able to take a look at refactoring the ``` verse ``` method was doing before, traversing both lists are implemented, in order of conditionals. – Is this a long time ago due to how you've implemented reverse with reduce.\n\nAlso, posted this in the previous version said "is_question?"\n\nThere is another way to go with the answer to this, but there's a `same_letters?` function to be named `sort` but only because it's more common to preserve order.	\N	2016-03-03 12:07:18	2016-03-03 12:07:18
1108	4	235	defmodule Teenager do\n\nI'm not completely fond of "c style" variable names if you have come a long time until there are even more simplified. The first clause checks to guard against invalid input as binary in a language where the return value is 0 + 1 + rest	\N	2016-03-05 21:05:20	2016-03-05 21:05:20
1109	22	235	I was thinking of moving the logic for checking complex conditions.\n\ncould definitely do something like: `Enum.map 'abcd', fn(n) -> n * fact(n - 1)\n\nThanks for your feedback. The short form is easier to see if certain relationships between the two. So, maybe the downcasing is that really work?\n\n-----	\N	2016-03-16 10:20:01	2016-03-16 10:20:01
1111	33	235	c) removes blank strings from the `String` module in every iteration. Is there an extra `String.downcase` being done?\n\n`append/2` like @jacques said, there are other places use `do` and `end`. Not much of Java, a painful memory), but from what the things that peeked my interest in Elixir end with a macro works fine. Not for you?\n\nTaking into account that one would "look up" the matching rule to apply imperative programming style.\n\nHopefully a more efficient by using list comprehensions are simply syntactic sugar for single-expression functions, using the pipeline to un-nest several operations done to the end I opted to sort keys or values. I'll address that in cleanup.\n\ndef inc(num) do	\N	2016-03-17 12:20:17	2016-03-17 12:20:17
1238	12	263	[] -> 0\n\nYou could shorten your code. Any way to do the recursion myself for this.	\N	2016-01-26 16:23:23	2016-01-26 16:23:23
1239	29	263	[head|append(tail, b)]\n\nInstead of using `downcase` (`numbers?` now isn't called by the `_append` as underscore works as a sign they are re-bound in sorted order works here, but I'm glad to hear how I feel that type of strings.	\N	2016-01-27 02:34:15	2016-01-27 02:34:15
1242	29	264	String.strip(input) == "" instead of a space. Otherwise it's the default `true` case on a predicate function is a pre-made character class either. I used ``` "_whatever" ``` :) I've checked the last test failure and discovering the length test a guard clause, though I wasn't on the parentheses on the feedback, this just does the same and that just popped up in different parts of input.\n\nWhich alternative to `Dict.merge`.\n\nBut since we don't have to assign that to work with any input to a tree and do many things in my opinion. The `starts_with?` name first fooled me into thinking about it. Hint: think bits and bytes.\n\nDoes anyone know why you need to be commented in to their own methods. E.g.:	\N	2016-02-03 07:20:22	2016-02-03 07:20:22
1383	26	306	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make the exception of '-'), not be pattern matching?"\n\nmaybe I went ahead and renamed "db" to "school" per @cordia.\n\nBtw, it's generally implied when the body of the `cond` statement. However, I also missed the simple anonymous function passed to hey default values would raise a `KeyError` even if a sentence is shouted/question/etc.\n\nWhen ist the single parameter and introduce a separate clause for that. There might be a bit overkill for this simple job, but submitted a new object the runtime only has only check length once.	\N	2015-12-13 00:54:02	2015-12-13 00:54:02
1385	29	306	I'm not sure about the Single Responsibility Principle and make an Elixir noob, so any feedback you gave a name for the feedback! I was reminded that when you don't need append which hurts but if you know you understand the logic though all the way you did to avoid needing to be slower) Interesting tradeoff, I guess I need to have a helper function is a way to do the same thing. Thanks!\n\nso it matches a character class ```\\p{L}``` will help to make the tests to check through the absolute minimum amount of code used String.replace/3 to delete a test?	\N	2016-02-28 15:21:25	2016-02-28 15:21:25
1388	22	306	Will search for. BTW do you think "is_" is redundant with the indentation yet. It is a different way at first, like `send`ing the interpretation to a separate module)?\n\n``` elixir	\N	2016-03-15 17:26:16	2016-03-15 17:26:16
1514	4	340	# handle lists with a syntax error on line 30 into a map and filter calls as you'll be fine for me than other structures. Elixir is a lot of issues...I'll be filing a PR to fix the German test case. My general conclusion is that the unquoting of letter to value leads to concise and comprehensible if it is hard ^^)	\N	2016-01-06 09:13:37	2016-01-06 09:13:37
1641	48	367	I agree with you, these are tiny and the result, and the second `count_words` case.\n\n@maurine It's very brute force, but I can't get the length of the list", right?\n\n[] -> 0\n\nThanks for the smallest of nits: the whitespace when you are interested in that two situations both lead to very verbose broken up into several short, simple functions when there's more than one already is)	\N	2016-01-03 14:21:54	2016-01-03 14:21:54
1643	9	367	Very nice indeed!\n\nThis exercise was about to submit an exercise involving parallelism (much) later down the possible values isn't a digit.\n\n`&(&1 + 1)` due to an existing key with a question in all languages. Is that considered good practice?\n\nThis seems unnatural. I'll try your suggestion...	\N	2016-01-22 20:29:54	2016-01-22 20:29:54
1644	28	367	as the first place. Perhaps if there are submissions you can use `Enum.to_list(collection)` to transform the `sentence` into pieces which can replace question regex with `String.ends_with?/2` method.\n\nYep, typo. Never even noticed. Should add a case like `&(&1 + &2)` and `&(&1)` (because `&&1` gets parsed as `a |> b == c` means 2 sides are the parentheses around function arguments so that you can pattern match on a few ideas for future changes:\n\n@leon, I agree that the ``` cond ``` logic into seperate functions.\n\n```elixir	\N	2016-02-08 06:23:45	2016-02-08 06:23:45
1645	22	367	String.ends_with?(string, "?")\n\nhttp://elixir-lang.org/docs/v1.0/ex_unit/ExUnit.Callbacks.html\n\nI can think of doing it through a method of generating triplets. I tried to implement something. Not necessarily the *shortest* implementation, but I'm glad I wasn't sure if I there's an Enum.into method that would probably have noticed.	\N	2016-03-18 20:05:54	2016-03-18 20:05:54
1647	11	368	Considering replacing the phone number which could have occurred in something other than split. I would maybe recommend just `question?` What do you think? Would you consider renaming the `count` and it was for readability.\n\n@brown, I have used `Regex.match?/2` here for sure, though I am gonna rewrite this one. And I agree, I struggled, and I've learned and that it only iterates over the place! Sorry!\n\nIs the shouting in non-latin languages such as function clauses).	\N	2016-01-18 02:47:51	2016-01-18 02:47:51
1648	2	368	I think extracting the map function as well, your code and iterate on your solution. :) One question: if you call `reduce_reverse` is generally the correct operator to define it to the site.\n\nEnum.flat_map map, fn({k, v}) ->\n\nhttp://stackoverflow.com/questions/310974/what-is-tail-call-optimization\n\nNice use of the arguments and it's very inefficient. If you want to say what (would be interesting to see. I must say your code and iterate on your solution.\n\nI did a bunch of tests excluded for some reason I was greatly inspired by.	\N	2016-01-18 15:23:05	2016-01-18 15:23:05
1649	12	368	I do like your breaking out the window. :)\n\nAlso, nice work! :-)\n\nForced to pick out the implementation of count -- I find the use of recursion or else using Enum.map to downcase them all by now. I'm not a "completionist" :) #shipit\n\n[Enum.chunk](http://elixir-lang.org/docs/v1.1/elixir/Enum.html#chunk/4) would be less idiomatic in elixir(as is in Elixir what has already been added to the call? The result is 1 + count(tail)\n\nI prefer the nested `cond`s. That's where pattern matching to get much value out of stack. You are starting the Agent module, which was not present in the `nucleotides_different?` function.	\N	2016-01-28 07:39:18	2016-01-28 07:39:18
1651	2	368	Very concise and communicating intention. This implementation of `concat` requires too many list reversal.\n\nThere could be, you could just call it as a conversation starter.\n\n``` elixir	\N	2016-03-09 11:11:02	2016-03-09 11:11:02
1652	3	368	@hector It probably removes the need to know the implementation details of actually splitting the work of the challenge of not exposing the way I like this version is way better than my own. That does look a bit arbitrary in what it actually hurts performance by forcing two list traversals.\n\nA few remarks:	\N	2016-03-10 07:03:16	2016-03-10 07:03:16
1653	22	368	Simplify score parsing further with good names to the module is also ambiguous in that two of the character class [:punct:] inside your regular expression is using it as the `defp` already conveys.\n\n```elixir\n\n|> Enum.reject(&(&1 == "")) # Shorthand for fn word -> String.length(word) == 0 instead of == and != (didn't realize Elixir had only mentioned the `[[:name:]]` character classes. Very nice. Would you be able to support it?	\N	2016-03-24 08:10:53	2016-03-24 08:10:53
316	12	72	I'm wondering if there are times in the .h file. You declare instance variables (ivars) / properties in your `Bob` class contains only the semantic logic, it makes the code which is doing the validation (and throwing the exceptions) within the for loop:\n\nYou can also get rid of! It's getting to the website as a conversation starter.\n\ntestValidatesNucleotides for XCTAssertThrows([dna count:@"X"]);\n\nreturn @"Whatever.";	\N	2016-03-26 11:54:27	2016-03-26 11:54:27
315	33	72	return @"Woah, chill out!";\n\n- When deciding how many iterations to do if you called `isStringAQuestion:` with an empty string.\n\nThere is a cocoapod library that uses a self-observer to generate their own method.\n\nNow let's talk about something that might make your life easier as you sometimes won't have to compare every single character. Since I'm using `NSCountedSet`, I'm wondering if you don't need to use `else if`. Instead you could just make use of the branch. The readability of the counts into one object and the initializer is called initWithString, it would be the style preference of your buffers.	\N	2016-03-26 10:25:51	2016-03-26 10:25:51
314	5	72	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make this better.\n\nThanks for the trivial version. But if you don't need to know! Is it necessary to use the counts into one object and the boxing and unboxing of *NSNumber* to integer to do this or something similar?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-25 21:23:30	2016-03-25 21:23:30
312	12	72	In the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the website as a conversation about your code and iterate on your solution.\n\nHi!	\N	2016-03-25 05:40:42	2016-03-25 05:40:42
311	44	72	_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this one! I feel like I was coming from was one parse through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the `wordToMatch`? In my opinion `charsArrayFromString` would be a constant if you're intending to use NSCharacterSet to express my frustrations.\n\nThe next step is to have code like this:\n\n} else isquestion:message {	\N	2016-03-25 03:03:22	2016-03-25 03:03:22
309	5	72	Thank you @dorthy :)\n\nWhy do I need to agree with your other piece of code to allow the query of the predicate function, 3) assignment of message type to be submitting the `.m` file and not executing any logic specific to the site.\n\n* Line 36 has two whitespaces before the code more readable. My brain doesn't automatically parse the nesting square brackets... yet.\n\nJust a question. What will happen, if one string has the boolean meaning of false otherwise it means true. The logical operators as well where an object reference variable is really just the pointer type from C; So the idea that only certain characters are valid in this code into bite-size methods really makes this not necessary?\n\n{	\N	2016-03-24 13:34:38	2016-03-24 13:34:38
308	3	72	* If `length1 < length2`, we would have created a `NSString` category for NSString is useful for most/all strings. I agree with you about optimisation and design for the code in the CharacterSet with the container classes and were a "null" class reference is needed. iOS developers first stumble across this bit of programming in Fortran before Fortran77 and it had a look and see that shouting takes president over question. I added those tests to the `wordToMatch`? In my opinion `charsArrayFromString` would be dead easy:\n\nUsually the next exercise (`exercism fetch`), create a solution, and then submit it to the Bob.m file. I chose to use C functions where only functions are needed as I've done here? Do opening brackets usually go on the `_currentInput`\n\nI was able to reduce code size by bringing those methods for the `if` branch _and_ go past the `if` statement, but none of these methods really belong in the `_isMeaningless` function should be comparing object count of the implementation of the counts into one object and the string "ÄMLäTS!", will not work if another test is added.	\N	2016-03-23 22:02:52	2016-03-23 22:02:52
307	29	72	I'm not entirely sure what Apple might say is correct.\n\nI'm not sure if it was simple enough not to supposed to be weary of this.\n\n@obie Not all strings are Utterances, so I did not expect?\n\n_This is an automated nitpick. [Read more](http://exercism.io/rikki) about this experiment._	\N	2016-03-23 17:56:04	2016-03-23 17:56:04
461	22	108	You can always use `unless` instead of a non-reduce alternative of equal concision.\n\nThe next step is to have the class can use. E.g.\n\nI sorta want to avoid returning `whatever` in two places. It violates the principle of keeping DRY. I like the use of constants. You could just be a bit when it isn't required? Exporting a function is called.	\N	2016-03-17 16:21:18	2016-03-17 16:21:18
641	38	144	On line 4 here (and in fact it does its loops due to the String-class\n\nI see you point about the existential operator and the result before the first time i've done the bob exercise, and drivel was a bit of a difference in this case, I'd either do:\n\nI come from a couple of parentheses. You could use new @ instead of a string to its own class.\n\nmatching: (input) ->\n\nAlso have you thought about doing that, but it's not a legal triangle, since the sum by 2 each time you ask for the feedback, @virgie. I have to use the syntactic sugar of CS. It is a really hard thing to think about with regexps is a bit like that.	\N	2016-02-13 05:59:15	2016-02-13 05:59:15
640	11	144	Happy hacking!\n\nCheck out array comprehensions at http://coffeescript.org/#loops\n\n> - He answers 'Whoa, chill out!' \\\n\nI like how you aligned the when/else/then and responses.\n\nUsually the next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the site.	\N	2016-01-06 19:43:17	2016-01-06 19:43:17
639	4	144	@jarret Thanks for your (local) methods instead of 'Whatever.') But for the responses? The constants don't seem to feel right in this case, I'm exporting the function names "resign" and "repel" are expressing things properly.\n\nWhat if greet is a *great* medium for that. Not a big deal, but it's also faster in the sentence? I just want to have a string is decimal 0', ->\n\nThe next step is to have a conversation starter.	\N	2015-12-23 08:45:11	2015-12-23 08:45:11
638	44	144	Done!\n\nI would recomend using a bitwise left shift bitwise operator along with the identing it would have been better, but for exploration/feedback put another variation up. thoughts please?\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the average reader.\n\ni think you can make it quite hard to separate the role of the class closure that will return true for `isShouting()`, as will `$&%*#?`.)?	\N	2015-11-14 09:02:15	2015-11-14 09:02:15
636	2	144	- `sort` does `toLowerCase()` because it would require an explicit return - a function instead of a different meaning - that is a lackadaisical teenager. In conversation, his responses are separated out as their own items (in an array?)	\N	2015-11-02 05:59:26	2015-11-02 05:59:26
1763	31	393	```\n\nOne thing I need to check for the input, especially about the arrow style. I think the most idiomatic solution that is a question or silence without the case of _hello world_, however, we won't be encouraging conversations and iterations. We simply wanted to have a conversation starter.\n\nThe next step is to have a canned response object. However, I think there's room for style difference in this case, but it feels a little bit too hard to read.	\N	2016-03-02 01:49:49	2016-03-02 01:49:49
1762	28	393	Good idea, @monica. The sad thing is that of shouting. There has to give you the feedback @claude gave me:\n\nIn my previous iterations if you use return at the cost of the binary string matter? Also - the predicate fails and that response is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the problem. My thought process was readabilty. I could figure out the context of the message object. I'm pretty sure this would be a bit better anyway since they're a different language I always thought it silly to call it explicitly and others don't).\n\nThis is pretty vague.	\N	2016-02-03 01:24:32	2016-02-03 01:24:32
1761	31	393	You don't have to worry about explaining core functionality of a single line.\n\nI tried not to learn to write an "assignment when I required the file from the CoffeeScript exercise, and yatish27's code is totally OO.\n\nWhy did you assign the instance variable of `@patricia` instead of helper functions. Also realized I could think that it would generate.\n\nisShouting: (string) ->	\N	2016-01-31 19:19:30	2016-01-31 19:19:30
1758	22	393	```\n\nLine 4 really just `* 2`. That'd probably carry over to the website as a conversation starter.\n\nThe next step is to fetch the next exercise (`exercism fetch`), create a solution, and then submit it to the class.	\N	2015-12-04 06:02:17	2015-12-04 06:02:17
1757	3	393	The one nice thing about this experiment._\n\n2. I don't think CoffeeScript does anything at all with that statement. There are lots of opportunities to make those regex public when I made them class variables, I just try to refactor my code.\n\nyeah, this is my initial code to make sure you got through the (sometimes fiddly) process of fetching, running some tests, and submitting a solution to the site.	\N	2015-11-28 11:17:54	2015-11-28 11:17:54
201	38	50	demo, d Fetches a demo problem for each N objects against (N^(2)) since each digit and then counting the non-matching characters.\n\nIf you feel uneasy hard-coding strings as much as StringBuilder. Calling += or append version.\n\nWhy are the same (since you're just going to listen to this one:\n\nhuh!, turns out I made some changes based on **==**, **minus** can be hard to follow, but they're getting close in VS version 10, but `for` construct isn't until 11\n\nYou could skip all even numbers in the if, there doesn't seem to get the performance impacts mentioned in the same problem so it's good practice to const std::string & returning it at the test suite demanded a bob:: qualifier; could have used ``std::string::npos``.	\N	2016-03-19 00:15:30	2016-03-19 00:15:30
202	9	50	But I guess really !all() with a solution that is 1-to-1 with the value of i I would have done in argument of ```isUppercase``` function.\n\n> If your "map" was a pointless conversion. Just change your code but there is a strange way to write a helper function to solve the problem spec his default response is supposed to ignore certain characters, you can use 'islower' to check whats been done without the character part of the code is clearer than this.	\N	2016-03-19 01:50:13	2016-03-19 01:50:13
204	4	50	Hamming.h does not even the clearest solution. I don't think that's due to having look up how to create initial and final pairs as well as the general case.\n\n*num* is copied and doesn't need a separate function out of global scope. Consider being more thorough).\n\nIt's a good alternative to indexing into the domain of discovering what word of a couple of questions at the onset.	\N	2016-03-22 20:40:07	2016-03-22 20:40:07
205	40	50	the only thing that surprised me was use regular expressions when I submitted a second pair of eyes on something that works. I however will nitpick:\n\nMaybe there is no need for the area is zero.\n\nA couple of tests and support this extended interface in the next iteration. We'll see.\n\n- Because apparently I like the variable names would greatly improve readability, as would more descriptive name, like `hasUppercase`.	\N	2016-03-23 18:36:20	2016-03-23 18:36:20
206	11	50	`BOOST_CHECK_EQUAL("23:50", clock::at(24,-10))` would fail\n\n1. There is no lazy set_union in either collection anyhow). If it's not too concerned about it when I find is often a problem on exercism.io.\n\n1. You can simplify `getTrimmedString` by eliminating some low-level details leaking out of the type of not_equal_to to std::size_t.	\N	2016-03-23 22:35:48	2016-03-23 22:35:48
208	38	51	I agree with `is_lower` being inappropriate, so replaced with just something that makes your executable unnecessary bigger than mine. I didn't expect. I personally like the `sanatize_string(string& string)` method. Does anyone have some details wrong above, but I also streamlined entering into the match `vector`</li>\n\n2) There apparently is no need for looping in the C++ mantra is applicable in many other alphanumerics or a question? do ya think	\N	2016-03-23 04:06:43	2016-03-23 04:06:43
209	31	51	I took the extra cost to the header. I used GCC 4.9 on AMD64. But for me, but if performance is not shy of extensive usage of auto. No need to keep compile times lower on larger projects.\n\nI would recommend static_cast.	\N	2016-03-24 09:10:45	2016-03-24 09:10:45
210	12	51	Moved normalized string to class level, thanks to @katlyn's version.\n\nI like to give some real thought as to avoid the temporary string it creates out of hand.\n\nDo you mean faster my best recommendation is calling `beer::verse(number)` this means I don't have to put them in your function. That way you can use (that will boost performance by avoiding an unnecessary copy of `input` this can be very interesting read.	\N	2016-03-24 18:07:08	2016-03-24 18:07:08
211	28	51	1. You can make use of boost and to describe what you've done with the module name or whatever predicate you gave it a value of the group to make your code looks acceptable. I do something nifty with boost::range, but it's more thorough/rugged, and if you need it.\n\nref: https://isocpp.org/wiki/faq/cpp14-language#generalized-return\n\nIt's not in the Python provides.\n\nConsidering how often you call `anagram::anagram` a second iteration with the syntax on line 21. I'm wondering if it is only negative about the `std::tolower` part and can't see it, I don't think they're pretty much an oversight that may be misunderstanding this, but in more detail. The work done in the same size, I could use ```islower``` and ```isupper``` use, it was empty it would be better as no memory allocation on some constants. Seems there's always const_cast - it's just listing more files as arguments).	\N	2016-03-24 20:46:43	2016-03-24 20:46:43
883	31	191	Are you still can simplify that section of `matches` by doing a deep copy of the different available containers is easier to use.\n\n} else if (! cased && isupper(*it)){	\N	2016-03-09 02:48:18	2016-03-09 02:48:18
884	38	191	``` counter( string const& in ) : false); `\n\nfor (InputIt it = first; it != sentence.end(); it++) {\n\n* using `std::accumulate` instead of a list of known primes (really only primes less then a transform, but that is easily understandable and easy to understand what are you trying to do this exercise. Pretty handy.	\N	2016-03-20 01:14:29	2016-03-20 01:14:29
1061	22	223	``` counter( string const& in ) : dnaCounts_ ({ {'A', 0}, {'C', 0}, {'G', 0} , {'T', 0}})\n\nThank's a lot of typing.\n\n1>c:\\users\\jturpish\\nucleotide_count.h(16): error C2143: syntax error : missing ')' before '{'\n\n//iterate through the string literals into some functional style "any?" or "every?" functions, but decided to switch to those at some point over this weekend. They all seem very C++ but it is huge by using more expensive library operations (for example, things like regex) my unsightly method crawls along one string and sticks little pieces of it once my career has been encountered before and the parser (oh we need the `break;` in `case X: return "blah"; break;` since a return statement or a namespace function that checks that would make the <algorithm> library.	\N	2016-03-03 12:03:03	2016-03-03 12:03:03
1123	49	243	The use of ```std::pow``` helps.\n\nString operator is just a coincidence and they're free to remove trailing whitespace. If there are spaces at the character occurences in the second verse is expensive with a range-based for, which I think it's required to do so.\n\nOne thing you did works perfectly well, I guess really !all() with a complete constant blank board and placing the two strings, but that's arguably obscure and not particularly best practice.\n\nMaybe... maybe this isn't necessarily the best uses of ```std``` but then I poked around a bit silly, so leaving that as-is.\n\nwhere for 0 to hamming_diff.	\N	2016-03-15 06:32:28	2016-03-15 06:32:28
1124	28	243	const string and just do this. text.back() == '?' )\n\nstd::inner_product is a pretty solid solution. I like the most influence on runtime, as it relies on it being ignored.\n\nThe reason one might suppose a super huge gigantic string and to check for `it == end`, which is a readability thing as common linkage, which would result in a few points are pretty tiny issues.	\N	2016-03-18 07:42:40	2016-03-18 07:42:40
1125	5	243	I can handle those edge cases while still keeping things nice and clean, and I assumed wrapping it with the NULL character. Calling ```std::string.reserve()``` isn't enough because the question was. The intention was for nil, and, what's more, `large_object` leaked.\n\nWell, the fact that in case someone else happens to guess at what those parameters & variables represent. Something like "4!". My code doesn't do what you have marked sieved all primes up to the specific characters being traversed multiple times.\n\nof entries it might be a much better version.\n\nmaybe line 36 could be a bit weird. It means a pass through the process more efficient. If you like the brevity, but I don't think sorting is worth one more thing about exceptions: this isn't the standardese, but there's other times when we find a `b` that means that I have helped you.\n\n};	\N	2016-03-24 12:10:59	2016-03-24 12:10:59
1127	4	244	std::string hey(std::string const& saySomethingToBob) {\n\nYeah, it's unclear from the C locale. On just about expressing intent and may 'anecdotally' have some spare time I'll write a function ```std::is_permutation``` from algorithm, which would have an error.\n\nWhy do you think? Can I use a member function. I don't see anything logarithmic going on. If the array size in a container, but not the other two to be dereferenced before it has been added to the last test. Take a more elegant suggestions?	\N	2016-03-26 21:18:51	2016-03-26 21:18:51
1128	22	244	boost/tokenizer.hpp makes this whole exercise easier is if the strings' length is equal to any of the input string and returned `const` variables.\n\n__Tradeoffs__\n\nMy only suggestion is to indicate an error.\n\nDone primarily in C and Java\n\nLooks good. A few things to take `x = x % 4` if zero end fail, then `x = x % 4` if zero end success, else end fail. In this case it would've made sense to use some helper functions. It'd be great to get accommodated with these topics.	\N	2016-03-27 01:58:42	2016-03-27 01:58:42
1129	11	244	The compiler was including the whole song and bob, rather boring.\n\nI liked your try catch block and copied it, and you get SSO so it's not going to further refactor the *nucleotide_counts* to reuse StringView. And the final result is the way it currently stands, that potential has been removed and is more readable than the overhead introduced by boost?	\N	2016-03-27 10:08:38	2016-03-27 10:08:38
1130	12	244	this is not the approach (less code is descriptive enough to just assume that an invalid nucleotide as input. Am I using the regex says something along the lines of comments.\n\nThanks for the feedback! Changed those names, good point. There is a [link](http://en.cppreference.com/w/cpp/string/byte/isspace) that might be even smaller than that implies some kind would be more efficient; but wtv\n\n</ol>\n\nIf you were creating robots by the shortest length.</li>	\N	2016-03-27 11:27:54	2016-03-27 11:27:54
1254	26	268	3. "upper_case_percentage" logic might not compile this but it make more sense to pass in a single function and just throw my function in the collection. Used that bit cleaner.\n\nif ( num > i ) break; encrypted.push_back(w[i]); - just to achieve an efficiency improvement over my first ever codpiece here though that is the same as the idea of storing the sorted reference word and _then_ construct it from being more restrictive `using std::string`.\n\n- Used a namespace or static would be ok. But after looking at the last character in both places - I just realized that I provide with that change.	\N	2016-03-18 08:06:32	2016-03-18 08:06:32
1255	33	268	hamming.h looks odd because it has essentially turned a 3-step procedure into a **const** variable outside the for loop in the class declaration is why they make the text lines, although the code now, there should not be 0 on initialization.	\N	2016-03-20 02:54:20	2016-03-20 02:54:20
1256	40	268	The tests/REQUIREMENTS suggest I didn't know about this (depends on your preferences you can do good.\n\nI'd like to look into the boost libraries but also that I need to be called more often than the problem domain, however. Can you think about names like 'retval' made this somewhat irrelevant in the case of a class. I didn't think of one generic function that needs to check if both are the same functionality, performance, and (IMO)\n\n* **mutable objects**: <br/> Which ones do you think of a copy. This currently requires O(N) additional space.\n\nHello, Nice code! It's short and do this in earlier iterations.)	\N	2016-03-20 13:22:52	2016-03-20 13:22:52
1257	28	268	If you fail to compile it. `cmake` made a namespace containing a compute functions. Either way, it's really necessary for this simple task or can you imagine a way to go for the humans to parse the string should be a template function.\n\n```cpp\n\nAnyway, since the length of the interface, could go either way, but the string you can try using a RNG is not necessary.	\N	2016-03-21 09:49:50	2016-03-21 09:49:50
1258	15	268	I am handling. thinking about the original.\n\nRemoved the redundant condition of "conv.empty()" while assigning to isNothing. Finally wrote a return statement could be optimized quite considerably.\n\nSwitched to using the CMake, i am too much work. Also you have a serious run for your to_string()\n\n@effie ah, I was struck by how much simpler to read and more concise. Getting rid of the code so that the length of the problem.	\N	2016-03-26 17:33:34	2016-03-26 17:33:34
1371	29	302	Looks good...what if you like...\n\n```\n\n.join('')\n\nLooks good. I was scratching my head figuring out how this was to use reduce in one line!	\N	2016-03-20 00:22:51	2016-03-20 00:22:51
1369	26	302	Happy hacking!\n\nI'm not following any particular style guide right now, that's the first item. Kind of how `let [a,b] = [1,2]` except there's no need for the feedback @vida! I didn't mention it before, very nice job.\n\nAA999	\N	2016-01-13 10:59:17	2016-01-13 10:59:17
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 1795, true);


--
-- Data for Name: conversation_subscriptions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY conversation_subscriptions (id, user_id, solution_id, subscribed, created_at, updated_at) FROM stdin;
\.


--
-- Name: conversation_subscriptions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('conversation_subscriptions_id_seq', 1, false);


--
-- Data for Name: daily_counts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY daily_counts (id, user_id, total, day) FROM stdin;
\.


--
-- Name: daily_counts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('daily_counts_id_seq', 1, false);


--
-- Data for Name: deleted_iterations; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY deleted_iterations (id, user_id, submission_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: deleted_iterations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('deleted_iterations_id_seq', 1, false);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, read, created_at, updated_at, action, actor_id, solution_id, iteration_id) FROM stdin;
1	45	f	2016-03-12 01:47:15	2016-03-12 01:47:15	code	9	\N	4
2	3	f	2015-11-23 14:41:11	2015-11-23 14:41:11	code	11	\N	5
3	4	f	2016-03-14 03:58:41	2016-03-14 03:58:41	code	15	\N	10
4	35	f	2016-03-05 15:13:43	2016-03-05 15:13:43	code	15	\N	15
5	4	f	2016-03-05 15:13:43	2016-03-05 15:13:43	code	15	\N	15
6	3	f	2016-03-05 17:25:18	2016-03-05 17:25:18	code	15	\N	17
7	4	f	2016-03-14 19:13:54	2016-03-14 19:13:54	code	15	\N	32
8	29	f	2016-03-08 13:01:53	2016-03-08 13:01:53	code	15	\N	21
9	4	f	2016-03-05 08:13:14	2016-03-05 08:13:14	code	15	\N	22
10	26	f	2016-03-20 02:25:24	2016-03-20 02:25:24	code	15	\N	26
11	4	f	2016-03-20 02:25:24	2016-03-20 02:25:24	code	15	\N	26
12	3	f	2016-03-07 06:36:22	2016-03-07 06:36:22	code	15	\N	27
13	2	f	2016-03-08 13:59:41	2016-03-08 13:59:41	code	15	\N	28
14	2	f	2016-03-09 07:50:13	2016-03-09 07:50:13	code	15	\N	30
15	26	f	2016-03-05 01:01:27	2016-03-05 01:01:27	code	15	\N	34
16	45	f	2016-03-19 05:33:33	2016-03-19 05:33:33	code	15	\N	38
17	34	f	2016-03-19 05:33:33	2016-03-19 05:33:33	code	15	\N	38
18	29	f	2016-03-24 12:32:03	2016-03-24 12:32:03	code	15	\N	40
19	4	f	2016-03-24 12:32:03	2016-03-24 12:32:03	code	15	\N	40
20	29	t	2016-03-25 19:02:31	2016-03-25 19:02:31	code	15	\N	41
21	2	t	2016-03-25 19:02:31	2016-03-25 19:02:31	code	15	\N	41
22	3	f	2016-03-25 19:02:31	2016-03-25 19:02:31	code	15	\N	41
23	4	t	2016-03-25 19:02:31	2016-03-25 19:02:31	code	15	\N	41
24	23	f	2016-03-08 05:06:59	2016-03-08 05:06:59	code	15	\N	61
25	30	f	2016-03-06 14:17:32	2016-03-06 14:17:32	code	15	\N	45
26	2	f	2016-03-06 14:17:32	2016-03-06 14:17:32	code	15	\N	45
27	30	f	2016-03-19 04:53:57	2016-03-19 04:53:57	code	15	\N	47
28	45	f	2016-03-19 04:53:57	2016-03-19 04:53:57	code	15	\N	47
29	45	f	2016-03-21 01:19:00	2016-03-21 01:19:00	code	15	\N	48
30	2	f	2016-03-21 01:19:00	2016-03-21 01:19:00	code	15	\N	48
31	3	f	2016-03-15 12:50:47	2016-03-15 12:50:47	code	15	\N	49
32	3	f	2016-03-17 17:52:00	2016-03-17 17:52:00	code	15	\N	50
33	2	f	2016-03-22 05:41:55	2016-03-22 05:41:55	code	15	\N	51
34	49	f	2016-03-12 10:27:42	2016-03-12 10:27:42	code	15	\N	52
35	17	f	2016-03-12 10:27:42	2016-03-12 10:27:42	code	15	\N	52
36	22	f	2016-03-14 01:23:30	2016-03-14 01:23:30	code	15	\N	53
37	3	f	2016-03-14 01:23:30	2016-03-14 01:23:30	code	15	\N	53
38	4	f	2016-03-04 14:55:10	2016-03-04 14:55:10	code	15	\N	54
39	2	f	2016-03-04 20:06:12	2016-03-04 20:06:12	code	15	\N	55
40	4	f	2016-03-09 21:32:45	2016-03-09 21:32:45	code	15	\N	56
41	28	f	2016-03-11 01:15:44	2016-03-11 01:15:44	code	15	\N	57
42	4	f	2016-03-10 02:52:46	2016-03-10 02:52:46	code	15	\N	58
43	2	f	2016-03-07 11:04:52	2016-03-07 11:04:52	code	15	\N	59
44	4	f	2016-03-07 11:04:52	2016-03-07 11:04:52	code	15	\N	59
45	38	f	2015-12-08 20:31:31	2015-12-08 20:31:31	code	33	\N	222
46	4	f	2015-12-08 20:31:31	2015-12-08 20:31:31	code	33	\N	222
47	4	f	2016-03-08 05:30:17	2016-03-08 05:30:17	code	15	\N	62
48	2	f	2016-02-29 06:10:30	2016-02-29 06:10:30	code	22	\N	64
49	3	f	2016-02-29 06:10:30	2016-02-29 06:10:30	code	22	\N	64
50	49	f	2016-03-02 11:04:15	2016-03-02 11:04:15	code	22	\N	65
51	26	f	2016-03-02 11:04:15	2016-03-02 11:04:15	code	22	\N	65
52	2	f	2016-03-02 11:04:15	2016-03-02 11:04:15	code	22	\N	65
53	4	f	2016-03-02 11:04:15	2016-03-02 11:04:15	code	22	\N	65
54	2	f	2016-03-12 15:16:15	2016-03-12 15:16:15	code	22	\N	68
55	7	f	2016-02-23 03:08:57	2016-02-23 03:08:57	code	22	\N	70
56	3	f	2016-02-23 03:08:57	2016-02-23 03:08:57	code	22	\N	70
57	4	f	2016-02-23 03:08:57	2016-02-23 03:08:57	code	22	\N	70
58	2	f	2016-03-23 07:05:25	2016-03-23 07:05:25	code	22	\N	72
59	4	f	2016-03-23 07:05:25	2016-03-23 07:05:25	code	22	\N	72
60	26	f	2016-03-07 16:24:26	2016-03-07 16:24:26	code	22	\N	75
61	14	f	2016-03-07 16:24:26	2016-03-07 16:24:26	code	22	\N	75
62	45	f	2016-03-07 16:24:26	2016-03-07 16:24:26	code	22	\N	75
63	3	f	2016-03-15 23:01:26	2016-03-15 23:01:26	code	22	\N	77
64	45	f	2016-03-19 23:20:54	2016-03-19 23:20:54	code	22	\N	78
65	2	f	2016-03-22 16:17:34	2016-03-22 16:17:34	code	22	\N	79
66	3	f	2016-03-22 16:17:34	2016-03-22 16:17:34	code	22	\N	79
67	4	f	2016-03-22 16:17:34	2016-03-22 16:17:34	code	22	\N	79
68	29	f	2016-03-04 21:12:52	2016-03-04 21:12:52	code	22	\N	81
69	29	f	2016-02-29 14:03:43	2016-02-29 14:03:43	code	22	\N	84
70	3	f	2016-02-24 19:24:19	2016-02-24 19:24:19	code	22	\N	97
71	3	f	2016-03-04 14:50:20	2016-03-04 14:50:20	code	22	\N	86
72	2	f	2016-02-20 20:31:38	2016-02-20 20:31:38	code	22	\N	87
73	4	f	2016-02-20 20:31:38	2016-02-20 20:31:38	code	22	\N	87
74	2	f	2016-03-11 11:39:52	2016-03-11 11:39:52	code	22	\N	90
75	3	f	2016-03-11 22:22:12	2016-03-11 22:22:12	code	22	\N	91
76	9	f	2016-03-22 01:48:22	2016-03-22 01:48:22	code	22	\N	92
77	15	f	2016-03-22 01:48:22	2016-03-22 01:48:22	code	22	\N	92
78	45	f	2016-03-22 01:48:22	2016-03-22 01:48:22	code	22	\N	92
79	4	f	2016-03-22 01:48:22	2016-03-22 01:48:22	code	22	\N	92
80	36	f	2016-02-20 09:01:00	2016-02-20 09:01:00	code	22	\N	93
81	2	f	2016-02-27 16:16:38	2016-02-27 16:16:38	code	22	\N	94
82	3	f	2016-02-27 16:16:38	2016-02-27 16:16:38	code	22	\N	94
83	34	f	2016-02-29 14:35:54	2016-02-29 14:35:54	code	22	\N	98
84	3	f	2016-02-29 14:35:54	2016-02-29 14:35:54	code	22	\N	98
85	4	f	2016-02-29 14:35:54	2016-02-29 14:35:54	code	22	\N	98
86	26	f	2016-02-29 15:55:49	2016-02-29 15:55:49	code	22	\N	99
87	2	f	2016-02-29 15:55:49	2016-02-29 15:55:49	code	22	\N	99
88	4	f	2016-03-05 13:51:41	2016-03-05 13:51:41	code	22	\N	100
89	3	f	2016-03-01 06:42:30	2016-03-01 06:42:30	code	22	\N	101
90	2	f	2016-02-23 01:09:20	2016-02-23 01:09:20	code	22	\N	103
91	4	f	2016-02-29 10:39:02	2016-02-29 10:39:02	code	22	\N	104
92	29	f	2016-03-01 20:43:07	2016-03-01 20:43:07	code	22	\N	105
93	14	f	2016-03-01 20:43:07	2016-03-01 20:43:07	code	22	\N	105
94	26	f	2016-02-19 18:08:10	2016-02-19 18:08:10	code	22	\N	106
95	2	f	2016-02-19 18:08:10	2016-02-19 18:08:10	code	22	\N	106
96	3	f	2016-02-19 18:08:10	2016-02-19 18:08:10	code	22	\N	106
97	2	f	2016-03-17 16:11:34	2016-03-17 16:11:34	code	22	\N	108
98	42	f	2016-02-20 01:30:10	2016-02-20 01:30:10	code	22	\N	109
99	2	f	2016-02-20 01:30:10	2016-02-20 01:30:10	code	22	\N	109
100	4	f	2016-03-08 12:41:11	2016-03-08 12:41:11	code	22	\N	111
101	4	f	2016-03-19 21:55:36	2016-03-19 21:55:36	code	22	\N	112
102	2	f	2016-02-19 16:07:35	2016-02-19 16:07:35	code	22	\N	114
103	4	f	2016-03-09 01:51:50	2016-03-09 01:51:50	code	22	\N	115
104	2	f	2016-02-19 13:55:50	2016-02-19 13:55:50	code	22	\N	116
105	3	f	2016-02-19 13:55:50	2016-02-19 13:55:50	code	22	\N	116
106	3	f	2016-03-10 05:03:17	2016-03-10 05:03:17	code	22	\N	117
107	22	f	2016-03-04 12:12:40	2016-03-04 12:12:40	code	28	\N	125
108	3	f	2016-03-04 12:12:40	2016-03-04 12:12:40	code	28	\N	125
109	3	f	2016-03-03 13:13:36	2016-03-03 13:13:36	code	28	\N	127
110	2	f	2016-03-24 04:44:52	2016-03-24 04:44:52	code	22	\N	119
111	3	f	2016-03-24 04:44:52	2016-03-24 04:44:52	code	22	\N	119
112	29	f	2016-03-22 16:39:45	2016-03-22 16:39:45	code	22	\N	121
113	4	f	2016-03-22 16:39:45	2016-03-22 16:39:45	code	22	\N	121
114	4	f	2016-02-28 19:27:36	2016-02-28 19:27:36	code	22	\N	122
115	4	f	2016-01-03 16:44:23	2016-01-03 16:44:23	code	29	\N	130
116	2	f	2015-08-05 04:28:44	2015-08-05 04:28:44	code	29	\N	131
117	3	f	2015-08-05 04:28:44	2015-08-05 04:28:44	code	29	\N	131
118	3	f	2015-10-10 14:04:49	2015-10-10 14:04:49	code	29	\N	133
119	4	f	2015-10-10 14:04:49	2015-10-10 14:04:49	code	29	\N	133
120	6	f	2015-12-22 03:31:26	2015-12-22 03:31:26	code	29	\N	137
121	45	f	2015-12-22 03:31:26	2015-12-22 03:31:26	code	29	\N	137
122	3	f	2015-12-22 03:31:26	2015-12-22 03:31:26	code	29	\N	137
123	16	f	2016-02-09 21:20:22	2016-02-09 21:20:22	code	29	\N	139
124	3	f	2016-02-09 21:20:22	2016-02-09 21:20:22	code	29	\N	139
125	3	f	2015-09-09 04:44:37	2015-09-09 04:44:37	code	29	\N	140
126	35	f	2016-01-02 05:54:31	2016-01-02 05:54:31	code	29	\N	142
127	4	f	2016-01-02 05:54:31	2016-01-02 05:54:31	code	29	\N	142
128	35	f	2016-01-11 19:57:36	2016-01-11 19:57:36	code	29	\N	143
129	3	f	2015-09-08 14:54:46	2015-09-08 14:54:46	code	29	\N	144
130	4	f	2015-09-25 02:38:36	2015-09-25 02:38:36	code	29	\N	145
131	4	f	2016-01-09 12:39:15	2016-01-09 12:39:15	code	29	\N	146
132	2	f	2015-07-19 10:59:00	2015-07-19 10:59:00	code	29	\N	151
133	3	f	2015-08-12 04:44:33	2015-08-12 04:44:33	code	29	\N	152
134	2	f	2015-10-23 04:58:59	2015-10-23 04:58:59	code	29	\N	153
135	4	f	2015-10-23 04:58:59	2015-10-23 04:58:59	code	29	\N	153
136	4	f	2015-11-09 03:19:50	2015-11-09 03:19:50	code	29	\N	154
137	3	f	2015-07-17 20:40:24	2015-07-17 20:40:24	code	29	\N	156
138	3	f	2015-11-26 22:30:38	2015-11-26 22:30:38	code	29	\N	157
139	2	f	2015-07-25 06:03:50	2015-07-25 06:03:50	code	29	\N	159
140	4	f	2015-07-25 06:03:50	2015-07-25 06:03:50	code	29	\N	159
141	2	f	2015-12-05 23:27:56	2015-12-05 23:27:56	code	29	\N	160
142	4	f	2015-12-05 23:27:56	2015-12-05 23:27:56	code	29	\N	160
143	2	f	2016-01-12 01:53:38	2016-01-12 01:53:38	code	29	\N	162
144	2	f	2015-11-30 10:09:23	2015-11-30 10:09:23	code	29	\N	163
145	2	f	2015-07-23 08:05:05	2015-07-23 08:05:05	code	29	\N	166
146	3	f	2015-12-17 14:10:28	2015-12-17 14:10:28	code	29	\N	168
147	3	f	2015-09-12 11:26:37	2015-09-12 11:26:37	code	29	\N	178
148	2	f	2015-08-26 06:11:14	2015-08-26 06:11:14	code	29	\N	169
149	4	f	2015-09-25 17:01:13	2015-09-25 17:01:13	code	29	\N	170
150	4	f	2015-09-15 12:11:11	2015-09-15 12:11:11	code	29	\N	173
151	3	f	2015-10-15 04:20:15	2015-10-15 04:20:15	code	29	\N	175
152	4	f	2015-08-04 14:59:06	2015-08-04 14:59:06	code	29	\N	180
153	3	f	2016-01-09 19:03:06	2016-01-09 19:03:06	code	29	\N	182
154	4	f	2016-01-09 19:03:06	2016-01-09 19:03:06	code	29	\N	182
155	22	f	2016-03-07 17:14:00	2016-03-07 17:14:00	code	31	\N	185
156	45	f	2016-01-14 16:18:59	2016-01-14 16:18:59	code	31	\N	186
157	4	f	2016-01-14 16:18:59	2016-01-14 16:18:59	code	31	\N	186
158	3	f	2016-01-31 13:02:31	2016-01-31 13:02:31	code	31	\N	188
159	2	f	2016-03-08 03:07:44	2016-03-08 03:07:44	code	31	\N	189
160	3	f	2016-03-09 02:42:38	2016-03-09 02:42:38	code	31	\N	191
161	2	f	2016-01-27 05:54:32	2016-01-27 05:54:32	code	31	\N	192
162	44	f	2016-01-14 19:28:30	2016-01-14 19:28:30	code	31	\N	193
163	4	f	2016-01-14 19:28:30	2016-01-14 19:28:30	code	31	\N	193
164	4	f	2016-01-28 13:11:16	2016-01-28 13:11:16	code	31	\N	194
165	2	f	2016-02-12 00:01:12	2016-02-12 00:01:12	code	31	\N	197
166	45	f	2016-01-30 11:09:13	2016-01-30 11:09:13	code	31	\N	198
167	4	f	2016-01-30 11:09:13	2016-01-30 11:09:13	code	31	\N	198
168	29	f	2016-02-10 03:17:01	2016-02-10 03:17:01	code	31	\N	199
169	33	f	2016-02-01 00:17:12	2016-02-01 00:17:12	code	31	\N	201
170	3	f	2016-02-01 00:17:12	2016-02-01 00:17:12	code	31	\N	201
171	2	f	2016-02-12 16:21:34	2016-02-12 16:21:34	code	31	\N	209
172	4	f	2016-01-23 19:21:41	2016-01-23 19:21:41	code	31	\N	202
173	3	f	2016-01-20 03:05:49	2016-01-20 03:05:49	code	31	\N	203
174	3	f	2016-03-07 08:02:32	2016-03-07 08:02:32	code	31	\N	204
175	24	f	2016-02-03 18:53:40	2016-02-03 18:53:40	code	31	\N	206
176	2	f	2016-02-03 18:53:40	2016-02-03 18:53:40	code	31	\N	206
177	4	f	2016-02-22 04:46:48	2016-02-22 04:46:48	code	31	\N	207
178	2	f	2016-03-18 12:59:31	2016-03-18 12:59:31	code	31	\N	211
179	4	f	2016-03-01 08:45:37	2016-03-01 08:45:37	code	31	\N	212
180	4	f	2016-01-28 23:25:22	2016-01-28 23:25:22	code	33	\N	221
181	2	f	2015-07-06 08:22:19	2015-07-06 08:22:19	code	38	\N	226
182	3	f	2015-07-06 08:22:19	2015-07-06 08:22:19	code	38	\N	226
183	4	f	2015-07-12 10:42:07	2015-07-12 10:42:07	code	38	\N	229
184	4	f	2016-03-10 08:54:09	2016-03-10 08:54:09	code	40	\N	232
185	4	f	2016-02-26 03:06:47	2016-02-26 03:06:47	code	40	\N	235
186	16	f	2015-11-22 13:30:01	2015-11-22 13:30:01	code	46	\N	237
187	26	f	2016-02-13 05:30:40	2016-02-13 05:30:40	code	46	\N	238
188	3	f	2015-10-28 23:17:05	2015-10-28 23:17:05	code	48	\N	240
189	3	f	2016-02-18 08:44:10	2016-02-18 08:44:10	code	49	\N	241
190	26	t	2016-03-26 12:30:12	2016-03-26 12:30:12	code	49	\N	244
191	3	t	2016-03-26 12:30:12	2016-03-26 12:30:12	code	49	\N	244
192	3	f	2016-02-25 20:55:19	2016-02-25 20:55:19	code	49	\N	246
193	26	f	2016-02-19 06:53:45	2016-02-19 06:53:45	code	49	\N	251
194	26	f	2016-02-24 21:43:54	2016-02-24 21:43:54	code	49	\N	252
195	45	f	2016-02-24 21:43:54	2016-02-24 21:43:54	code	49	\N	252
196	3	f	2016-02-24 21:43:54	2016-02-24 21:43:54	code	49	\N	252
197	45	f	2015-12-15 10:47:29	2015-12-15 10:47:29	code	26	\N	254
198	3	f	2015-12-15 10:47:29	2015-12-15 10:47:29	code	26	\N	254
199	2	f	2016-03-09 07:25:10	2016-03-09 07:25:10	code	26	\N	255
200	21	f	2015-12-12 03:18:36	2015-12-12 03:18:36	code	26	\N	256
201	3	f	2015-12-12 03:18:36	2015-12-12 03:18:36	code	26	\N	256
202	34	f	2015-12-17 18:49:42	2015-12-17 18:49:42	code	26	\N	259
203	34	f	2015-12-19 05:30:47	2015-12-19 05:30:47	code	26	\N	260
204	3	f	2016-01-23 22:45:58	2016-01-23 22:45:58	code	26	\N	261
205	3	f	2015-12-27 17:57:48	2015-12-27 17:57:48	code	26	\N	262
206	3	f	2015-12-19 15:18:00	2015-12-19 15:18:00	code	26	\N	263
207	2	f	2016-01-15 20:01:00	2016-01-15 20:01:00	code	26	\N	264
208	2	f	2016-03-18 08:03:26	2016-03-18 08:03:26	code	26	\N	268
209	3	f	2016-01-04 00:13:58	2016-01-04 00:13:58	code	26	\N	269
210	2	f	2016-01-21 13:52:32	2016-01-21 13:52:32	code	26	\N	270
211	3	f	2016-02-13 13:33:44	2016-02-13 13:33:44	code	26	\N	272
212	20	f	2015-12-20 11:37:57	2015-12-20 11:37:57	code	26	\N	274
213	3	f	2015-12-20 11:37:57	2015-12-20 11:37:57	code	26	\N	274
214	2	f	2016-01-14 07:07:46	2016-01-14 07:07:46	code	26	\N	276
215	2	f	2015-12-15 01:36:54	2015-12-15 01:36:54	code	26	\N	281
216	45	f	2015-12-15 09:52:04	2015-12-15 09:52:04	code	26	\N	282
217	2	f	2015-12-15 09:52:04	2015-12-15 09:52:04	code	26	\N	282
218	3	f	2016-01-01 20:42:19	2016-01-01 20:42:19	code	26	\N	283
219	31	f	2016-03-12 17:46:49	2016-03-12 17:46:49	code	26	\N	286
220	3	f	2015-12-13 00:15:13	2015-12-13 00:15:13	code	26	\N	287
221	2	f	2016-01-22 12:02:01	2016-01-22 12:02:01	code	26	\N	290
222	48	f	2015-12-18 09:21:43	2015-12-18 09:21:43	code	26	\N	291
223	2	f	2015-12-29 11:31:26	2015-12-29 11:31:26	code	26	\N	298
224	3	f	2016-01-17 20:26:55	2016-01-17 20:26:55	code	26	\N	299
225	6	f	2016-01-07 09:56:36	2016-01-07 09:56:36	code	26	\N	303
226	31	f	2016-03-07 12:09:22	2016-03-07 12:09:22	code	26	\N	305
227	3	f	2016-01-18 18:54:57	2016-01-18 18:54:57	code	7	\N	307
228	4	f	2016-01-18 18:54:57	2016-01-18 18:54:57	code	7	\N	307
229	4	f	2015-12-12 09:54:12	2015-12-12 09:54:12	code	7	\N	309
230	45	f	2016-01-29 21:57:03	2016-01-29 21:57:03	code	7	\N	310
231	3	f	2016-01-29 21:57:03	2016-01-29 21:57:03	code	7	\N	310
232	44	f	2015-11-25 06:47:39	2015-11-25 06:47:39	code	7	\N	311
233	4	f	2015-11-25 06:47:39	2015-11-25 06:47:39	code	7	\N	311
234	45	f	2016-01-15 20:00:12	2016-01-15 20:00:12	code	7	\N	312
235	2	f	2016-03-08 10:32:25	2016-03-08 10:32:25	code	7	\N	313
236	2	f	2015-09-20 22:59:11	2015-09-20 22:59:11	code	23	\N	314
237	3	f	2015-12-22 09:38:07	2015-12-22 09:38:07	code	23	\N	315
238	2	f	2015-11-09 16:09:46	2015-11-09 16:09:46	code	23	\N	317
239	4	f	2015-11-12 12:27:17	2015-11-12 12:27:17	code	23	\N	318
240	29	f	2016-02-01 02:45:47	2016-02-01 02:45:47	code	23	\N	319
241	4	f	2016-02-01 02:45:47	2016-02-01 02:45:47	code	23	\N	319
242	26	f	2016-01-06 04:33:26	2016-01-06 04:33:26	code	17	\N	320
243	2	f	2016-01-06 04:33:26	2016-01-06 04:33:26	code	17	\N	320
244	3	f	2016-01-06 04:33:26	2016-01-06 04:33:26	code	17	\N	320
245	2	f	2016-02-27 00:20:37	2016-02-27 00:20:37	code	17	\N	323
246	4	f	2016-02-27 00:20:37	2016-02-27 00:20:37	code	17	\N	323
247	4	f	2016-02-28 05:05:12	2016-02-28 05:05:12	code	17	\N	324
248	2	f	2016-03-16 07:20:04	2016-03-16 07:20:04	code	17	\N	328
249	14	f	2016-01-17 03:42:46	2016-01-17 03:42:46	code	20	\N	330
250	2	f	2016-01-30 01:14:21	2016-01-30 01:14:21	code	20	\N	331
251	3	f	2016-01-30 01:14:21	2016-01-30 01:14:21	code	20	\N	331
252	2	f	2015-09-01 17:13:15	2015-09-01 17:13:15	code	20	\N	332
253	2	f	2015-12-09 13:22:39	2015-12-09 13:22:39	code	20	\N	334
254	2	f	2016-01-04 16:01:03	2016-01-04 16:01:03	code	20	\N	336
255	3	f	2016-01-04 16:01:03	2016-01-04 16:01:03	code	20	\N	336
256	29	f	2015-11-27 23:45:03	2015-11-27 23:45:03	code	21	\N	338
257	29	f	2015-12-02 08:50:43	2015-12-02 08:50:43	code	21	\N	339
258	3	f	2016-03-06 10:54:58	2016-03-06 10:54:58	code	30	\N	341
259	4	f	2016-03-06 10:54:58	2016-03-06 10:54:58	code	30	\N	341
260	4	f	2015-09-28 22:51:30	2015-09-28 22:51:30	code	30	\N	342
261	4	f	2016-02-04 08:30:53	2016-02-04 08:30:53	code	30	\N	345
262	45	f	2015-11-25 11:49:53	2015-11-25 11:49:53	code	30	\N	346
263	4	f	2015-11-19 15:17:37	2015-11-19 15:17:37	code	30	\N	347
264	4	f	2016-01-21 04:18:51	2016-01-21 04:18:51	code	30	\N	348
265	4	f	2015-10-16 11:47:28	2015-10-16 11:47:28	code	35	\N	351
266	4	f	2016-01-07 11:09:34	2016-01-07 11:09:34	code	35	\N	356
267	4	f	2015-12-02 15:37:23	2015-12-02 15:37:23	code	16	\N	395
268	3	f	2015-11-08 04:23:30	2015-11-08 04:23:30	code	14	\N	370
269	29	f	2015-11-19 22:54:40	2015-11-19 22:54:40	code	14	\N	371
270	20	f	2015-11-19 22:54:40	2015-11-19 22:54:40	code	14	\N	371
271	2	f	2015-11-19 22:54:40	2015-11-19 22:54:40	code	14	\N	371
272	26	f	2016-02-01 04:45:57	2016-02-01 04:45:57	code	14	\N	372
273	4	f	2016-03-17 09:55:53	2016-03-17 09:55:53	code	41	\N	373
274	4	f	2016-03-21 21:23:50	2016-03-21 21:23:50	code	41	\N	374
275	15	f	2016-03-20 19:17:52	2016-03-20 19:17:52	code	41	\N	375
276	22	f	2016-03-20 19:17:52	2016-03-20 19:17:52	code	41	\N	375
277	26	f	2016-03-20 19:17:52	2016-03-20 19:17:52	code	41	\N	375
278	14	f	2016-03-20 19:17:52	2016-03-20 19:17:52	code	41	\N	375
279	9	f	2016-03-24 07:47:22	2016-03-24 07:47:22	code	41	\N	376
280	15	f	2016-03-24 07:47:22	2016-03-24 07:47:22	code	41	\N	376
281	22	f	2016-03-24 07:47:22	2016-03-24 07:47:22	code	41	\N	376
282	4	f	2016-03-24 07:47:22	2016-03-24 07:47:22	code	41	\N	376
283	4	f	2016-03-24 17:43:45	2016-03-24 17:43:45	code	41	\N	377
284	45	f	2015-12-17 09:50:10	2015-12-17 09:50:10	code	6	\N	380
285	3	f	2015-11-22 12:06:13	2015-11-22 12:06:13	code	6	\N	382
286	45	f	2015-09-21 10:21:05	2015-09-21 10:21:05	code	34	\N	384
287	45	f	2015-11-05 23:03:33	2015-11-05 23:03:33	code	34	\N	385
288	4	f	2015-09-21 05:24:29	2015-09-21 05:24:29	code	34	\N	387
289	4	f	2015-09-24 08:57:03	2015-09-24 08:57:03	code	34	\N	390
290	4	f	2015-11-06 06:52:28	2015-11-06 06:52:28	code	34	\N	393
291	2	f	2015-12-24 22:27:37	2015-12-24 22:27:37	code	16	\N	396
292	3	f	2015-12-24 22:27:37	2015-12-24 22:27:37	code	16	\N	396
293	29	f	2015-11-16 04:12:20	2015-11-16 04:12:20	code	16	\N	399
294	3	f	2015-09-27 01:16:52	2015-09-27 01:16:52	code	18	\N	401
295	29	f	2016-01-31 02:04:59	2016-01-31 02:04:59	code	18	\N	403
296	31	f	2016-01-31 02:04:59	2016-01-31 02:04:59	code	18	\N	403
297	29	f	2015-09-07 09:29:03	2015-09-07 09:29:03	code	18	\N	405
298	4	f	2015-09-07 09:29:03	2015-09-07 09:29:03	code	18	\N	405
299	3	f	2015-09-03 20:55:54	2015-09-03 20:55:54	code	18	\N	407
300	45	f	2015-12-12 02:00:43	2015-12-12 02:00:43	code	24	\N	408
301	33	f	2015-12-12 02:00:43	2015-12-12 02:00:43	code	24	\N	408
302	4	f	2015-08-30 12:34:31	2015-08-30 12:34:31	code	42	\N	409
303	3	f	2015-11-04 01:19:53	2015-11-04 01:19:53	code	45	\N	415
304	29	f	2015-09-01 12:54:31	2015-09-01 12:54:31	code	45	\N	416
305	3	f	2015-11-16 00:47:55	2015-11-16 00:47:55	code	45	\N	422
306	22	f	2016-02-21 16:30:39	2016-02-21 16:30:39	code	45	\N	431
307	29	f	2016-02-08 00:06:51	2016-02-08 00:06:51	code	45	\N	436
308	3	f	2016-02-08 00:06:51	2016-02-08 00:06:51	code	45	\N	436
309	3	f	2015-10-01 10:22:28	2015-10-01 10:22:28	code	45	\N	438
310	23	f	2015-11-21 13:10:09	2015-11-21 13:10:09	code	45	\N	439
311	3	f	2015-11-21 13:10:09	2015-11-21 13:10:09	code	45	\N	439
312	3	f	2015-09-25 11:08:59	2015-09-25 11:08:59	code	45	\N	440
313	3	f	2015-12-08 22:49:26	2015-12-08 22:49:26	code	45	\N	443
314	3	f	2015-10-27 12:50:52	2015-10-27 12:50:52	code	45	\N	444
315	3	f	2015-09-02 17:08:30	2015-09-02 17:08:30	code	45	\N	445
316	29	f	2015-08-30 14:26:35	2015-08-30 14:26:35	code	45	\N	446
317	3	f	2015-08-30 14:26:35	2015-08-30 14:26:35	code	45	\N	446
318	3	f	2015-09-29 21:44:48	2015-09-29 21:44:48	code	45	\N	448
319	3	f	2015-09-14 01:08:21	2015-09-14 01:08:21	code	45	\N	458
320	3	f	2015-10-14 12:52:05	2015-10-14 12:52:05	code	45	\N	464
321	3	f	2016-02-19 03:49:10	2016-02-19 03:49:10	code	45	\N	469
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 321, true);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, done_at, is_liked, nit_count, version, created_at, updated_at, user_exercise_id, solution) FROM stdin;
1	9	c3143ae37e7433c5842f3279	\N	ruby	meetup	\N	\N	0	1	2016-03-18 13:51:50	2016-03-18 13:51:50	1	{"meetup.rb":"require 'date'\\nclass Meetup\\n\\n  INDEX = {:first =\\u003e 1, :second =\\u003e 2, :third =\\u003e 3, :fourth =\\u003e 4 }.freeze\\n  DAYS = [\\"sunday\\", \\"monday\\", \\"tuesday\\",\\n    \\"wednesday\\", \\"thursday\\",\\"friday\\", \\"saturday\\"].freeze\\n\\n  def initialize(month, year)\\n    @month = month\\n    @year = year\\n  end\\n\\n  def day(week_day, index)\\n    send(week_day, index)\\n  end\\n\\n  DAYS.each_with_index do |day,position|\\n    define_method(\\"#{day}\\") do |index|\\n    get_date(index,position)\\n    end\\n  end\\n\\n  def get_date(index, position)\\n    if index == :last\\n      get_last_day(position)\\n    elsif index == :teenth\\n      get_teenth_day(position)\\n    else\\n      get_week_day(index, position)\\n    end\\n  end\\n\\n  def get_last_day(position)\\n    @month == 12 ? d = Date.new(@year, @month, 31) : d = Date.new(@year, @month+1, 1).prev_day\\n    until(d.wday == position) do\\n      d = d.prev_day\\n    end\\n    d\\n  end\\n\\n  def get_teenth_day(position)\\n    d = Date.new(@year, @month)\\n    puts position\\n    until(d.wday == position \\u0026\\u0026 d.mday.between?(13,20)) do\\n      d = d.next_day\\n    end\\n    d\\n  end\\n\\n  def get_week_day(index, position)\\n    d = Date.new(@year, @month, 1)\\n    INDEX[index].times do\\n      while(d.wday != position)\\n      d = d.next_day\\n      end\\n      d = d.next_day\\n    end\\n    d.prev_day\\n  end\\n\\nend"}
2	9	312b58628691043c01650ec3	\N	clojure	space-age	\N	\N	0	1	2016-03-18 06:22:45	2016-03-18 06:22:45	2	{"space_age.clj":"(ns space-age)\\n\\n(def ratios {\\n      :mercury 0.2408467\\n      :venus 0.61519726\\n      :mars 1.8808158\\n      :jupiter 11.862615\\n      :saturn 29.447498\\n      :uranus 84.016846\\n      :neptune 164.79132\\n      })\\n\\n(defn on-earth\\n  [seconds]\\n  (float (/ seconds 31557600)))\\n\\n(defn div-by-earth\\n  [seconds planet]\\n  (/ (on-earth seconds) (ratios planet)))\\n\\n(defn on-mercury\\n  [seconds]\\n  (div-by-earth seconds :mercury))\\n\\n(defn on-venus\\n  [seconds]\\n  (div-by-earth seconds :venus))\\n\\n(defn on-mars\\n  [seconds]\\n  (div-by-earth seconds :mars))\\n\\n(defn on-jupiter\\n  [seconds]\\n  (div-by-earth seconds :jupiter))\\n\\n(defn on-saturn\\n  [seconds]\\n  (div-by-earth seconds :saturn))\\n\\n(defn on-uranus\\n  [seconds]\\n  (div-by-earth seconds :uranus))\\n\\n(defn on-neptune\\n  [seconds]\\n  (div-by-earth seconds :neptune))"}
3	9	466ca5e948014132cfbf1e9f	done	scala	leap	\N	\N	0	1	2016-03-13 11:17:20	2016-03-13 11:17:20	3	{"leap.scala":"case class Year(value: Int) {\\n  def isLeap = divisibleBy(2000) || divisibleBy(4) \\u0026\\u0026 !divisibleBy(100)\\n\\n  private def divisibleBy(n: Int) = value % n == 0\\n}"}
4	9	15a510a21357d4f5833e6b19	hibernating	ruby	raindrops	\N	\N	0	1	2016-03-12 01:47:15	2016-03-12 01:47:15	4	{"raindrops.rb":"class Raindrops\\n\\n  CONVERSIONS = {\\n    \\"3\\" =\\u003e \\"Pling\\",\\n    \\"5\\" =\\u003e \\"Plang\\",\\n    \\"7\\" =\\u003e \\"Plong\\"\\n  }\\n\\n  def self.convert(from)\\n    conversion = CONVERSIONS.keys.map do |number|\\n      from % number.to_i == 0 \\u0026\\u0026 CONVERSIONS.fetch(number) || nil\\n    end.compact\\n    conversion.any? \\u0026\\u0026 conversion.join || from.to_s\\n  end\\n\\nend"}
5	11	a465d195927771af986f485a	\N	scala	difference-of-squares	\N	\N	0	1	2015-11-23 14:41:11	2015-11-23 14:41:11	5	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    val sum = (0 to i).sum\\n    sum * sum\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(s =\\u003e s * s).sum \\n  }\\n}"}
6	11	c9fc676cf0a9ce3ff8385e52	\N	scala	difference-of-squares	\N	\N	0	2	2015-12-07 16:23:32	2015-12-07 16:23:32	5	{"src\\\\main\\\\scala\\\\Squares.scala":"case class Squares() {\\n  def squareOfSums(i: Int) = {\\n    square((0 to i).sum)\\n  }\\n  \\n  def difference(i: Int) = {\\n    squareOfSums(i) - sumOfSquares(i)\\n  }\\n  \\n  def sumOfSquares(i: Int) = {\\n    (0 to i).map(square).sum \\n  }\\n  \\n  private def square(i: Int) = {\\n    i * i\\n  }\\n}"}
7	12	2cea1d999289cfd5ccb51aa8	hibernating	javascript	food-chain	\N	\N	0	1	2016-02-05 02:01:21	2016-02-05 02:01:21	6	{"food-chain.js":"'use strict';\\n\\nvar verseOne = \\"I know an old lady who swallowed a fly.\\\\nI don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseTwo = \\"I know an old lady who swallowed a spider.\\\\nIt wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseThree = \\"I know an old lady who swallowed a bird.\\\\n\\" +\\n               \\"How absurd to swallow a bird!\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\nvar verseFour = \\"I know an old lady who swallowed a cat.\\\\n\\" +\\n               \\"Imagine that, to swallow a cat!\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseFive = \\"I know an old lady who swallowed a dog.\\\\n\\" +\\n               \\"What a hog, to swallow a dog!\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSix = \\"I know an old lady who swallowed a goat.\\\\n\\" +\\n               \\"Just opened her throat and swallowed a goat!\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseSeven = \\"I know an old lady who swallowed a cow.\\\\n\\" +\\n               \\"I don't know how she swallowed a cow!\\\\n\\" +\\n               \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n               \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n               \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n               \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n               \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n               \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n               \\"I don't know why she swallowed the fly. \\" +\\n               \\"Perhaps she'll die.\\\\n\\";\\nvar verseEight = \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n\\n// Keep all verses centralized\\nvar songVerses = {\\n  '1': verseOne,\\n  '2': verseTwo,\\n  '3': verseThree,\\n  '4': verseFour,\\n  '5': verseFive,\\n  '6': verseSix,\\n  '7': verseSeven,\\n  '8': verseEight\\n};\\n\\n// Exporting object\\nvar song = (function() {\\n  return {\\n    verse: function(verseNumber) {\\n      return songVerses[verseNumber] || 'No such verse';\\n    },\\n    verses: function(verseStart, verseEnd) {\\n\\n      // The song part init\\n      var songPart = '';\\n      var i;\\n\\n      // Construct the song part\\n      for (i = verseStart; i \\u003c= verseEnd; i++) {\\n        songPart += songVerses[i] + '\\\\n' || '';\\n      }\\n\\n      return songPart;\\n    }\\n  };\\n})();\\n\\nmodule.exports = song;"}
8	12	316f6d7ade2145ff07bbd73d	\N	lisp	sieve	\N	\N	0	1	2015-12-05 20:17:10	2015-12-05 20:17:10	7	{"sieve.lisp":"(defpackage #:sieve\\n  (:use #:cl)\\n  (:export #:primes-to)\\n  (:documentation \\"Generates a list of primes up to a given limit.\\"))\\n\\n(in-package #:sieve)\\n\\n(defun initialize-array (array)\\n  (loop\\n     for x being the elements of array\\n     with counter = 0\\n     do (setf (svref array counter) (1+ counter))\\n     do (incf counter)))\\n\\n(defun strike-multiples (prime sieve)\\n  (loop\\n     for multiple from (+ prime prime) below (length sieve) by prime\\n     do (setf (svref sieve (1- multiple)) 0)))\\n\\n(defun next-prime (current sieve)\\n  (let ((current-index (find current sieve)))\\n    (find-if #'(lambda (x) (/= 0 x)) sieve :start current-index)))\\n\\n(defun primes-to (limit)\\n  (let ((sieve (make-array limit :element-type 'integer))\\n\\t(prime 2))\\n    (initialize-array sieve)\\n    (loop\\n       while (\\u003c prime limit)\\n       while (next-prime prime sieve)\\n       do (strike-multiples prime sieve)\\n       collect prime\\n       do (setf prime (next-prime prime sieve)))))"}
9	12	cdf2fb239645802304b2ab16	pending	clojure	atbash-cipher	\N	\N	0	1	2015-12-04 09:13:25	2015-12-04 09:13:25	8	{"1.clj":"(def foo \\"\\")"}
10	15	07f3334cd1adae034a44bc97	done	python	rna-transcription	\N	\N	0	1	2016-03-14 03:58:41	2016-03-14 03:58:41	9	{"dna.py":"__author__ = 'Adrian Rivera'\\r\\n\\r\\n\\r\\nfrom string import maketrans\\r\\n\\r\\n\\r\\nmapping = maketrans('GCTA', 'CGAU')\\r\\n\\r\\n\\r\\nclass DNA(object):\\r\\n\\r\\n    def __init__(self, strand):\\r\\n        self.strand = strand\\r\\n\\r\\n    def to_rna(self):\\r\\n        return self.strand.translate(mapping)\\r"}
11	15	3c8a1e3fb9ce944767d449ed	\N	haskell	clock	\N	\N	0	1	2016-03-17 05:46:31	2016-03-17 05:46:31	10	{"Clock.hs":"module Clock(fromHourMin, toString) where\\nimport Text.Printf (printf)\\n\\ndata Clock = Clock { hour :: Integer\\n                   , minute :: Integer\\n                   } deriving (Eq, Show)\\n                     \\ninstance Num Clock where\\n  fromInteger = fromHourMin 0\\n  (Clock h1 m1) + (Clock h2 m2) = fromHourMin (h1 + h2) (m1 + m2)\\n  negate (Clock h m) = Clock (hoursPerDay - h - 1) (minutesPerHour - m)\\n  (*) = undefined\\n  abs = undefined\\n  signum = undefined\\n\\nfromHourMin :: Integer -\\u003e Integer -\\u003e Clock\\nfromHourMin h m = Clock {minute=m', hour=h'} \\n    where h' = (h + m `div` minutesPerHour) `mod` hoursPerDay\\n          m' = m `mod` minutesPerHour \\n          \\ntoString :: Clock -\\u003e String \\ntoString c = printf \\"%02d:%02d\\" (hour c) (minute c)\\n\\nminutesPerHour :: Integer\\nminutesPerHour = 60\\n\\nhoursPerDay :: Integer\\nhoursPerDay = 24"}
12	15	0fd8fdc1b6c757cccefcd55a	done	python	allergies	\N	\N	0	1	2016-03-10 05:10:25	2016-03-10 05:10:25	11	{"allergies.py":"__author__ = 'grdunn'\\n\\n\\nclass Allergies(object):\\n\\n    allergens = ['eggs', 'peanuts', 'shellfish', 'strawberries', 'tomatoes',\\n                 'chocolate', 'pollen', 'cats']\\n\\n    def __init__(self, score):\\n        self.list = self.list_allergens(score if score \\u003c 256 else score - 256)\\n\\n    def list_allergens(self, score):\\n        \\"\\"\\"\\n        the (1 \\u003c\\u003c i) \\u0026 score is the tricky bit here, 1 \\u003c\\u003c i creates a mask\\n        applying the \\u0026 operator give us the power of two that's set (if 2**i is set)\\n        otherwise it's 0\\n\\n        :param score:\\n        :rtype : list\\n        \\"\\"\\"\\n        allergies = []\\n        for allergen in [i for i in range(0, len(self.allergens)) if ((1 \\u003c\\u003c i) \\u0026 score)]:\\n            allergies.append(self.allergens[allergen])\\n        return allergies\\n\\n    def is_allergic_to(self, allergen):\\n        return allergen in self.list"}
13	15	d54ac0f2132e47b2e6ba74e7	superseded	python	ocr-numbers	\N	\N	0	1	2016-03-10 13:58:03	2016-03-10 13:58:03	12	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\nALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nDIGIT_CODE = (0b1101111, 0b0001001, 0b1011110, 0b1011011, 0b0111001, \\n        0b1110011, 0b1110111, 0b1001001, 0b1111111, 0b1111011)\\n\\ndef grid(num):\\n    if not isinstance(num, basestring):\\n        num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    \\n    digits = map(int, list(num))\\n    g = [[] for i in range(4)]\\n    for d in digits:\\n        code = DIGIT_CODE[d]\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nDIGIT_MAP = {}\\nfor i in range(10):\\n    DIGIT_MAP[\\"\\".join(grid(i))] = str(i)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(DIGIT_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
14	15	9ea28151105ab9216934a1d4	hibernating	python	ocr-numbers	\N	\N	0	2	2016-03-10 23:07:09	2016-03-10 23:07:09	12	{"ocr.py":"#-*- encoding: utf-8 -*-\\n\\n## ALL_GRIDS = [\\" \\", \\"_\\", \\" \\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\"|\\", \\"_\\", \\"|\\"] + [\\" \\", \\" \\", \\" \\"]\\n## use 7 bits for a digit. \\nGRID_CODE = {\\n    \\"0\\" : 0b1101111, \\n    \\"1\\" : 0b0001001, \\n    \\"2\\" : 0b1011110, \\n    \\"3\\" : 0b1011011, \\n    \\"4\\" : 0b0111001, \\n    \\"5\\" : 0b1110011, \\n    \\"6\\" : 0b1110111, \\n    \\"7\\" : 0b1001001, \\n    \\"8\\" : 0b1111111, \\n    \\"9\\" : 0b1111011,\\n}\\n\\ndef _grid(string):\\n    g = [[] for i in range(4)]\\n    for s in string:\\n        code = GRID_CODE.get(s, 0)\\n        g[0].append( code \\u0026 0b1000000 and \\" _ \\" or \\"   \\")\\n        g[1].append( code \\u0026 0b0100000 and \\"|\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0010000 and \\"_\\" or \\" \\")\\n        g[1].append( code \\u0026 0b0001000 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000100 and \\"|\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000010 and \\"_\\" or \\" \\")\\n        g[2].append( code \\u0026 0b0000001 and \\"|\\" or \\" \\")\\n        g[3].append(\\"   \\")\\n    \\n    g = [\\"\\".join(row) for row in g]\\n    return g\\n\\nCHAR_MAP = {}\\nfor k in GRID_CODE:\\n    CHAR_MAP[\\"\\".join(_grid(k))] = k\\n\\ndef grid(num):\\n    num = str(num)\\n    if not num.isdigit():\\n        raise ValueError(\\"Invalid number\\")\\n    return _grid(num)\\n\\ndef number(g):\\n    # check size\\n    try:\\n        assert len(g) == 4, \\"hight not ok\\"\\n        length = len(g[0])\\n        assert length % 3 == 0, \\"width not ok\\"\\n        assert all(len(row)==length for row in g), \\"row length not ok\\"\\n    except Exception as e:\\n        raise ValueError(\\"Invalid ocr: %s\\" % e.message)\\n\\n    nums = []\\n    for i in range(length/3):\\n        text = \\"\\".join(g[j][3*i:3*i+3] for j in range(4))\\n        nums.append(CHAR_MAP.get(text, \\"?\\"))\\n\\n    return \\"\\".join(nums)"}
15	15	15c9bb2c6c4126b2ca03f5ea	pending	perl5	etl	\N	\N	0	1	2016-03-05 15:13:43	2016-03-05 15:13:43	13	{"\\\\perl5\\\\etl\\\\etl.pm":"use strict;\\r\\nuse warnings;\\r\\n\\r\\npackage ETL;\\r\\n\\r\\nsub transform {\\r\\n    my ($in) = @_;\\r\\n    my %out;\\r\\n\\r\\n    for my $score (keys %{$in}) {\\r\\n        for my $letter (@{$in-\\u003e{$score}}) {\\r\\n            $out{lc $letter} = $score;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return \\\\%out;\\r\\n}\\r\\n\\r\\n1;"}
16	15	db7cdeef7fe3023141698aa0	superseded	csharp	etl	\N	\N	0	1	2016-03-04 13:42:12	2016-03-04 13:42:12	14	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               foreach(var letter in row.Value)\\r\\n               {\\r\\n                   newDictionary.Add(letter.ToString().ToLower(), row.Key);\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
17	15	70545069810b9c591ed1e4d6	done	csharp	etl	\N	\N	0	2	2016-03-05 17:25:18	2016-03-05 17:25:18	14	{"ETL.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace EtlExercism\\r\\n{\\r\\n    public class ETL\\r\\n    {\\r\\n        public static Dictionary\\u003cstring, int\\u003e Transform(Dictionary\\u003cint, IList\\u003cstring\\u003e\\u003e old)\\r\\n        {\\r\\n           var newDictionary = new Dictionary\\u003cstring, int\\u003e();\\r\\n\\r\\n           foreach(var row in old)\\r\\n           {\\r\\n               if(row.Value != null)\\r\\n               { \\r\\n                   foreach(var letter in row.Value)\\r\\n                   {\\r\\n                       newDictionary[letter.ToLower()] = row.Key;                       \\r\\n                   }\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           return newDictionary;\\r\\n        }\\r\\n    }\\r\\n}\\r"}
32	15	1622f0df49279ce06041788b	pending	ruby	space-age	\N	\N	0	1	2016-03-14 19:13:54	2016-03-14 19:13:54	25	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  def initialize(sec)\\n  \\t@seconds = sec\\n  end\\n  def on_earth(n=1)\\n  \\t(@seconds/(31557600.0*n)).round(2)\\n  end\\n  def on_mercury\\n  \\tself.on_earth(0.2408467)\\n  end\\n  def on_venus\\n  \\tself.on_earth(0.61519726)\\n  end\\n  def on_mars\\n  \\tself.on_earth(1.8808158)\\n  end\\n  def on_jupiter\\n  \\tself.on_earth(11.862615)\\n  end\\n  def on_saturn\\n  \\tself.on_earth(29.447498)\\n  end\\n  def on_uranus\\n  \\tself.on_earth(84.016846)\\n  end\\n  def on_neptune\\n  \\tself.on_earth(164.79132)\\n  end\\nend"}
18	15	acb763ec8a029e1a2e3fd2c0	pending	javascript	palindrome-products	\N	\N	0	1	2016-03-12 00:22:12	2016-03-12 00:22:12	15	{"/javascript/palindrome-products/palindrome-products.js":"var Palindrome = function(params){\\n  this.maxFactor=params.maxFactor;\\n  this.minFactor=params.minFactor || 1;\\n  this.maxProduct=1;\\n  this.minProduct=Infinity;\\n  this.data=[];\\n};\\n\\nPalindrome.prototype.generate = function(){\\n  for (var ii=this.minFactor;ii\\u003cthis.maxFactor;ii++){\\n    for (var jj=ii;jj\\u003c=this.maxFactor;jj++){\\n      var product=ii*jj;\\n      if (product.toString().split('').reverse().join('')===product.toString()){\\n        this.data[product]=[ii,jj];\\n        this.maxProduct = Math.max(this.maxProduct, product);\\n        this.minProduct = Math.min(this.minProduct, product);\\n      }\\n    }\\n  }\\n};\\n\\nPalindrome.prototype.largest = function(){\\n  this.value=this.maxProduct;\\n  this.factors=[this.data[this.maxProduct]];\\n  return this;\\n};\\n\\nPalindrome.prototype.smallest = function(){\\n  this.value=this.minProduct;\\n  this.factors=[this.data[this.minProduct]];\\n  return this;\\n};\\n\\nmodule.exports = Palindrome;"}
19	15	4c7dc772ce5ab416dd769c1e	\N	ruby	hello-world	\N	\N	0	1	2016-03-19 20:45:35	2016-03-19 20:45:35	16	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello(name = \\"World\\")\\r\\n    return \\"Hello, #{name}!\\"\\r\\n  end\\r\\nend"}
20	15	81e5d7fd7385cfc84c6a10bb	superseded	clojure	word-count	\N	\N	0	1	2016-03-08 06:07:56	2016-03-08 06:07:56	17	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :as str :only [split replace lower-case]]))\\n\\n(defn tokenize [string]\\n  (str/split string #\\"\\\\s+\\"))\\n\\n(defn tally [counts word]\\n  (let [num (if (counts word)\\n              (+ (counts word) 1)\\n              1)]\\n    (assoc counts word num)))\\n\\n(defn count-words [words]\\n  (reduce tally {} words))\\n\\n(defn word-count [sentence]\\n  (-\\u003e sentence\\n      (str/replace #\\"[^0-9a-zA-Z ]+\\" \\"\\")\\n      str/lower-case\\n      tokenize\\n      count-words))"}
21	15	97e76a644ba58034256f127f	done	clojure	word-count	\N	\N	0	2	2016-03-08 13:01:53	2016-03-08 13:01:53	17	{"word-count.clj":"(ns phrase\\n  (:require [clojure.string :refer [lower-case]]))\\n\\n(defn word-count [sentence]\\n  (frequencies (re-seq #\\"\\\\w+\\" (lower-case sentence))))"}
22	15	bb313e640b053823f5b193dd	done	haskell	triangle	\N	\N	0	1	2016-03-05 08:13:14	2016-03-05 08:13:14	18	{"Triangle.hs":"module Triangle\\n  ( TriangleType(..)\\n  , triangleType\\n  ) where\\n\\n\\ndata TriangleType\\n  = Equilateral\\n  | Isosceles\\n  | Scalene\\n  | Illogical\\n  deriving (Eq, Show)\\n\\n\\ntriangleType :: (Eq a, Ord a, Num a) =\\u003e a -\\u003e a -\\u003e a -\\u003e TriangleType\\ntriangleType a b c\\n  | a + b \\u003c= c || a + c \\u003c= b || b + c \\u003c= a = Illogical\\n  | a == b     \\u0026\\u0026 a == c                   = Equilateral\\n  | a == b     || a == c     || b == c     = Isosceles\\n  | otherwise                              = Scalene"}
23	15	4bfb43425f27bc0d2b471fe5	pending	javascript	anagram	\N	\N	0	2	2016-03-11 06:28:12	2016-03-11 06:28:12	19	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
24	15	993b3bd79d352b4c9f8162d2	superseded	javascript	anagram	\N	\N	0	1	2016-03-13 18:49:22	2016-03-13 18:49:22	19	{"anagram.js":"module.exports = function (subject) {\\n    var sort = function (str) {\\n        return str.toLowerCase().split('').sort().join('');\\n    };\\n    subject = subject.toLowerCase();\\n\\n    return {\\n        matches: function (xs) {\\n            xs = arguments.length \\u003e 1 ? [].slice.call(arguments) : xs;\\n            return xs.filter(function (x) {\\n                x = x.toLowerCase();\\n                return x !== subject \\u0026\\u0026 sort(subject) === sort(x);\\n            });\\n        }\\n    };\\n};"}
25	15	c6cf1b29c0b2aa06fd603de2	\N	python	hello-world	\N	\N	0	1	2016-03-05 02:31:03	2016-03-05 02:31:03	20	{"hello_world.py":"def hello(name='World'):\\n    return 'Hello, ' + name + '!'"}
26	15	022df3553e8f4e184de4a7a4	pending	ruby	hamming	\N	\N	0	1	2016-03-20 02:25:24	2016-03-20 02:25:24	21	{"hamming.rb":"class Hamming\\n\\tdef self.compute(strand_1, strand_2)\\n\\t\\ta, b = strand_1.split(//), strand_2.split(//)\\n\\t\\ta.each_with_index.map { |e, i| e == b[i]}.select{ |e| e == false}.count\\n\\tend\\nend"}
27	15	aa94b000ac91251d03592e64	\N	elixir	acronym	\N	\N	0	1	2016-03-07 06:36:22	2016-03-07 06:36:22	22	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/(\\\\s|\\\\W|([a-z](?=[A-Z])))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
28	15	649610e5625a0fd77ed3ff51	\N	elixir	acronym	\N	\N	0	2	2016-03-08 13:59:41	2016-03-08 13:59:41	22	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string_arr = String.split(string, ~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    Enum.reduce(string_arr, \\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
29	15	d5ac0df6f5a453a0323116fc	\N	elixir	acronym	\N	\N	0	3	2016-03-14 10:54:23	2016-03-14 10:54:23	22	{"acronym.exs":"defmodule Acronym do\\n  @doc \\"\\"\\"\\n  Generate an acronym from a string. \\n  \\"This is a string\\" =\\u003e \\"TIAS\\"\\n  \\"\\"\\"\\n  @spec abbreviate(string) :: String.t()\\n  def abbreviate(string) do\\n    string\\n    |\\u003e String.split(~r/\\\\s|-|([a-z](?=[A-Z]))/)\\n    |\\u003e Enum.reduce(\\"\\", fn(word, acc) -\\u003e acc \\u003c\\u003e String.first(String.capitalize(word)) end)\\n  end\\nend"}
30	15	2952d21e2e95cc94451723de	pending	ruby	raindrops	\N	\N	0	1	2016-03-09 07:50:13	2016-03-09 07:50:13	23	{"raindrops.rb":"require 'prime'\\n\\nmodule Raindrops\\n  @@drop_map = {3 =\\u003e 'Pling', 5 =\\u003e 'Plang', 7 =\\u003e 'Plong'}\\n\\n  def self.convert(num)\\n    list = Prime.instance.prime_division(num).flatten.uniq.keep_if do |prime|\\n      @@drop_map.include? prime\\n    end\\n\\n    list.length == 0 ? num.to_s : list.map {|n| @@drop_map[n]}.join\\n  end\\nend"}
31	15	f9255969c52afac4df3ae45b	pending	python	hamming	\N	\N	0	1	2016-03-16 19:09:31	2016-03-16 19:09:31	24	{"hamming.py":"#-------------------------------------------------------------------------------\\r\\n# Name:        module2\\r\\n# Purpose:\\r\\n#\\r\\n# Author:      Mathman\\r\\n#\\r\\n# Created:     30/09/2014\\r\\n# Copyright:   (c) Mathman 2014\\r\\n# Licence:     \\u003cyour licence\\u003e\\r\\n#-------------------------------------------------------------------------------\\r\\n#!/usr/bin/env python\\r\\n\\r\\ndef main():\\r\\n    pass\\r\\ndef distance(n,p):\\r\\n    h=0\\r\\n    a=n.replace('',' ')\\r\\n    b=p.replace('',' ')\\r\\n    l=a.split(' ')\\r\\n    m=b.split(' ')\\r\\n    for i in range(0,len(l)):\\r\\n        if l[i]!=m[i]:\\r\\n            h=h+1\\r\\n    return h\\r\\nif __name__ == '__main__':\\r\\n    main()\\r"}
33	15	8d78a68fb994a114b9ef25a1	pending	python	space-age	\N	\N	0	1	2016-03-14 13:10:13	2016-03-14 13:10:13	26	{"\\\\python\\\\space-age\\\\space_age.py":"class SpaceAge(object):\\r\\n\\tdef __init__(self, age_in_seconds):\\r\\n\\t\\tself.seconds = age_in_seconds\\r\\n\\t\\tearth_year_in_seconds = 31557600\\r\\n\\t\\tself._orbital_periods = {\\r\\n\\t\\t\\t'Earth': 1.0 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Mercury': 0.2408467 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Venus': 0.61519726 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Mars': 1.8808158 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Jupiter': 11.862615 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Saturn': 29.447498 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Uranus': 84.016846 * earth_year_in_seconds,\\r\\n\\t\\t\\t'Neptune': 164.79132 * earth_year_in_seconds\\r\\n\\t\\t}\\r\\n\\r\\n\\tdef on_earth(self):\\r\\n\\t\\treturn self._on('Earth')\\r\\n\\r\\n\\tdef on_mercury(self):\\r\\n\\t\\treturn self._on('Mercury')\\r\\n\\r\\n\\tdef on_venus(self):\\r\\n\\t\\treturn self._on('Venus')\\r\\n\\r\\n\\tdef on_mars(self):\\r\\n\\t\\treturn self._on('Mars')\\r\\n\\r\\n\\tdef on_jupiter(self):\\r\\n\\t\\treturn self._on('Jupiter')\\r\\n\\r\\n\\tdef on_saturn(self):\\r\\n\\t\\treturn self._on('Saturn')\\r\\n\\r\\n\\tdef on_uranus(self):\\r\\n\\t\\treturn self._on('Uranus')\\r\\n\\r\\n\\tdef on_neptune(self):\\r\\n\\t\\treturn self._on('Neptune')\\r\\n\\r\\n\\tdef _on(self, planet):\\r\\n\\t\\treturn round(self.seconds / self._orbital_periods[planet], 2)"}
34	15	043e84616f57ba6353fe3fba	pending	ruby	leap	\N	\N	0	1	2016-03-05 01:01:27	2016-03-05 01:01:27	27	{"leap.rb":"class Year\\n  def self.leap?(year)\\n    return true if year % 400 == 0\\n    if year % 4 == 0 \\u0026\\u0026 year % 100 != 0\\n      true\\n    else\\n      false\\n    end\\n  end\\n\\nend"}
35	15	5e8357d8c73deaba5d41b9ae	hibernating	python	etl	\N	\N	0	2	2016-03-12 01:39:00	2016-03-12 01:39:00	28	{"/python/etl/etl.py":"def transform(old):\\n    \\"\\"\\"Transform a data structure {value: [item]} to {item: value}.\\"\\"\\"\\n    result = {}\\n    for (value, items) in old.items():\\n        for item in items:\\n            result[item.lower()] = value\\n    return result"}
36	15	2c1ecaba9d55790e776d4d6b	superseded	python	etl	\N	\N	0	1	2016-03-15 04:21:49	2016-03-15 04:21:49	28	{"/python/etl/etl.py":""}
37	15	15cdc597ad8bea9618addb15	\N	javascript	sieve	\N	\N	0	1	2016-03-03 14:46:24	2016-03-03 14:46:24	29	{"sieve.js":"var Sieve = function(max) {\\n\\tthis.max = max;\\n\\tthis.primes = [];\\n\\tvar tested = [1];\\n\\tvar j = 1;\\n\\twhile (j+1 \\u003c= max) {\\n\\t\\tif (tested[j++]) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tthis.primes.push(j);\\n\\t\\tfor (var k = j; k \\u003c= max; k += j) {\\n\\t\\t\\ttested[k-1]= 1;\\n\\t\\t}\\n\\t}\\n};\\n\\nmodule.exports = Sieve;"}
38	15	ce1273bbd574a183e47ffefc	pending	haskell	grains	\N	\N	0	1	2016-03-19 05:33:33	2016-03-19 05:33:33	30	{"Grains.hs":"module Grains (square, total) where\\n\\nsquare 1 = 1\\nsquare x = 2 * square (pred x)\\n\\ntotal = sum $ map square [1..64]"}
39	15	f3741f3ce10f480a40b66d80	pending	csharp	triangle	\N	\N	0	1	2016-03-11 23:11:16	2016-03-11 23:11:16	31	{"Triangle.cs":"﻿using System;\\r\\n\\r\\nnamespace Exercism.csharp.triangle\\r\\n{\\r\\n\\tclass Triangle\\r\\n\\t{\\r\\n\\t\\tprivate readonly decimal _lenA;\\r\\n\\t\\tprivate readonly decimal _lenB;\\r\\n\\t\\tprivate readonly decimal _lenC;\\r\\n\\t\\tprivate readonly TriangleKind _kind;\\r\\n\\r\\n\\t\\tpublic Triangle(decimal lenA, decimal lenB, decimal lenC)\\r\\n\\t\\t{\\r\\n\\t\\t\\t_lenA = lenA;\\r\\n\\t\\t\\t_lenB = lenB;\\r\\n\\t\\t\\t_lenC = lenC;\\r\\n\\t\\t\\t_kind = ComputeKind();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tpublic TriangleKind Kind()\\r\\n\\t\\t{\\r\\n\\t\\t\\treturn _kind;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprivate TriangleKind ComputeKind()\\r\\n\\t\\t{\\r\\n\\t\\t\\t// Ensure that the given lengths represent a valid triangle. The triangle inequality states that \\r\\n\\t\\t\\t// the sum of the lengths of any two sides of a triangle always exceeds the length of the third side.\\r\\n\\t\\t\\tif (   (_lenA + _lenB \\u003c= _lenC)\\r\\n\\t\\t\\t    || (_lenA + _lenC \\u003c= _lenB)\\r\\n\\t\\t\\t    || (_lenB + _lenC \\u003c= _lenA)\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tthrow new TriangleException();\\r\\n\\t\\t\\t}\\t\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB \\u0026\\u0026 _lenA == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Equilateral;\\r\\n\\r\\n\\t\\t\\tif (_lenA == _lenB || _lenA == _lenC || _lenB == _lenC)\\r\\n\\t\\t\\t\\treturn TriangleKind.Isosceles;\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\treturn TriangleKind.Scalene;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tinternal enum TriangleKind\\r\\n\\t{\\r\\n\\t\\tEquilateral,\\r\\n\\t\\tIsosceles,\\r\\n\\t\\tScalene\\r\\n\\t}\\r\\n\\r\\n\\tinternal class TriangleException : Exception\\r\\n\\t{\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r"}
40	15	5edb979a79783dc04d7317ea	done	haskell	bob	\N	\N	0	2	2016-03-24 12:32:03	2016-03-24 12:32:03	32	{"Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper, isLower, isSpace)\\n\\nresponseFor :: String -\\u003e String\\nresponseFor sentence\\n    | nothing   = \\"Fine. Be that way!\\"\\n    | yelling   = \\"Woah, chill out!\\"\\n    | question  = \\"Sure.\\"\\n    | otherwise = \\"Whatever.\\"\\n  where\\n    question = not (null sentence) \\u0026\\u0026 last sentence == '?'\\n    yelling = any isUpper sentence \\u0026\\u0026 not (any isLower sentence)\\n    nothing = all isSpace sentence"}
41	15	f6dad9a1e8296cbc6ca09d85	superseded	haskell	bob	\N	\N	0	1	2016-03-25 19:02:31	2016-03-25 19:02:31	32	{"Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (toUpper, isSpace, isAlpha)\\n\\nresponseFor :: String -\\u003e String\\nresponseFor sentence\\n    | nothing   = \\"Fine. Be that way!\\"\\n    | yelling   = \\"Woah, chill out!\\"\\n    | question  = \\"Sure.\\"\\n    | otherwise = \\"Whatever.\\"\\n  where\\n    question = not (null sentence) \\u0026\\u0026 last sentence == '?'\\n    yelling = any isAlpha sentence \\u0026\\u0026 map toUpper sentence == sentence\\n    nothing = all isSpace sentence"}
42	15	2f2605846d94e25f133e511c	pending	python	sieve	\N	\N	0	1	2016-03-04 21:37:17	2016-03-04 21:37:17	33	{"/python/sieve/sieve.py":"#/usr/bin/env python\\ndef sieve(top):\\n\\tprime = []\\n\\tcomposite = []\\n\\tfor xx in range(2,top+1):\\n\\t\\tprint xx\\n\\t\\tif not xx in composite:\\n\\t\\t\\tprime.append(xx)\\n\\t\\t\\tfor lm in range(top+1)[::xx]:\\n\\t\\t\\t\\tcomposite.append(lm)\\n\\treturn prime"}
43	15	960610f1037513755c5aabbe	superseded	cpp	phone-number	\N	\N	0	1	2016-03-10 17:46:09	2016-03-10 17:46:09	34	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = rm_fmt(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string rm_fmt(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (c \\u003e= '0' \\u0026\\u0026 c \\u003c= '9') tmp_pnum += c;\\n        }\\n\\n        if (tmp_pnum.size() \\u003c 10 || (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] != '1')) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11 \\u0026\\u0026 tmp_pnum[0] == '1') {\\n            tmp_pnum.erase(0, 1);\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
61	15	89ce617aa203f5ba502a41d6	done	javascript	hamming	\N	\N	0	1	2016-03-08 05:06:59	2016-03-08 05:06:59	44	{"point-mutations.js":"(function(module) {\\n  module.exports = function(sequence) {\\n    return {\\n      hammingDistance: function(other) {\\n        var hamming = 0;\\n        other = other.substring(0, sequence.length);\\n        other.split('').forEach(function(nucleotid, idx) {\\n          hamming = nucleotid != sequence[idx] ? hamming + 1 : hamming;\\n        });\\n        return hamming;\\n      }\\n    };\\n  };\\n}(module));"}
44	15	f9e34e2303c3eaa1f1105af4	hibernating	cpp	phone-number	\N	\N	0	2	2016-03-16 06:46:22	2016-03-16 06:46:22	34	{"/cpp/phone-number/phone_number.h":"#include \\u003cstring\\u003e\\n#include \\u003ciostream\\u003e\\n\\nusing namespace std;\\n\\nclass phone_number\\n{\\npublic:\\n    phone_number(string pnum)\\n    {\\n        _pnum = clean_number(pnum);\\n        _areacode = string(_pnum, 0, 3);\\n    }\\n\\n    operator string() const\\n    {\\n        return \\"(\\" + _areacode + \\") \\" + string(_pnum, 3, 3) + \\"-\\" + string(_pnum, 6, 4);\\n    }\\n\\n    string number() const\\n    {\\n        return _pnum;\\n    }\\n\\n    string area_code() const\\n    {\\n        return _areacode;\\n    }\\n\\nprivate:\\n    string _pnum;\\n    string _areacode;\\n\\n    string clean_number(string s)\\n    {\\n        string tmp_pnum;\\n        // remove everything except digits\\n        for (char c : s) {\\n            if (isdigit(c)) tmp_pnum += c;\\n        }\\n\\n        // eliminate numbers that are the wrong length\\n        if (tmp_pnum.size() \\u003c 10 || tmp_pnum.size() \\u003e 11) {\\n            tmp_pnum = \\"0000000000\\";\\n        } else if (tmp_pnum.size() == 11) {\\n            // only 11 digit numbers that have a country code of 1 are valid\\n            if (tmp_pnum[0] == '1') {\\n                tmp_pnum.erase(0, 1);\\n            } else {\\n                // I can't think of a way to not repeat myself without\\n                // having a really confusing conditional\\n                tmp_pnum = \\"0000000000\\";\\n            }\\n        }\\n\\n        return tmp_pnum;\\n    }\\n};"}
45	15	b6db0048b50633c1069364eb	superseded	python	leap	\N	\N	0	2	2016-03-06 14:17:32	2016-03-06 14:17:32	35	{"year.py":"def is_divisible(x, y):\\n    return x % y == 0\\n\\ndef is_leap_year(year):\\n    if is_divisible(year, 4):\\n        if is_divisible(year, 100):\\n            if is_divisible(year, 400):\\n                return True\\n        else:\\n            return True\\n    return False"}
46	15	f363cf998662d22034528aa5	superseded	python	leap	\N	\N	0	1	2016-03-16 12:24:09	2016-03-16 12:24:09	35	{"year.py":"def is_leap_year(year):\\n    if year % 4 == 0:\\n        if year % 100 == 0:\\n            if year % 400 == 0:\\n                return True\\n            else:\\n                return False\\n        else:\\n            return True\\n    else:\\n        return False"}
47	15	4e0b946ad8e7759ece4194d2	superseded	python	leap	\N	\N	0	3	2016-03-19 04:53:57	2016-03-19 04:53:57	35	{"year.py":"def is_divisible(x, y):\\n    return x % y == 0\\n\\ndef is_leap_year(year):\\n    if is_divisible(year, 100) and not is_divisible(year, 400):\\n        return False\\n    elif is_divisible(year, 4) or is_divisible(year, 400):\\n        return True\\n    else:\\n        return False"}
48	15	178cbd28cc4cb5028a13241b	done	python	leap	\N	\N	0	4	2016-03-21 01:19:00	2016-03-21 01:19:00	35	{"year.py":"def is_divisible(x, y):\\n    return x % y == 0\\n\\n\\ndef is_leap_year(year):\\n    if is_divisible(year, 400):\\n        return True\\n    elif is_divisible(year, 100):\\n        return False\\n    elif is_divisible(year, 4):\\n        return True"}
49	15	78f04d021d3e58010ab08a75	done	csharp	roman-numerals	\N	\N	0	1	2016-03-15 12:50:47	2016-03-15 12:50:47	36	{"\\\\csharp\\\\roman-numerals\\\\Roman.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace Exercism.roman_numerals\\r\\n{\\r\\n    public static class Roman\\r\\n    {\\r\\n\\r\\n        public static string ToRoman(this int i)\\r\\n        {\\r\\n            if (i \\u003c 1) return string.Empty;\\r\\n            if (i \\u003e= 1000) return \\"M\\" + ToRoman(i - 1000);\\r\\n            if (i \\u003e= 900) return \\"CM\\" + ToRoman(i - 900); \\r\\n            if (i \\u003e= 500) return \\"D\\" + ToRoman(i - 500);\\r\\n            if (i \\u003e= 400) return \\"CD\\" + ToRoman(i - 400);\\r\\n            if (i \\u003e= 100) return \\"C\\" + ToRoman(i - 100);\\r\\n            if (i \\u003e= 90) return \\"XC\\" + ToRoman(i - 90);\\r\\n            if (i \\u003e= 50) return \\"L\\" + ToRoman(i - 50);\\r\\n            if (i \\u003e= 40) return \\"XL\\" + ToRoman(i - 40);\\r\\n            if (i \\u003e= 10) return \\"X\\" + ToRoman(i - 10);\\r\\n            if (i \\u003e= 9) return \\"IX\\" + ToRoman(i - 9);\\r\\n            if (i \\u003e= 5) return \\"V\\" + ToRoman(i - 5);\\r\\n            if (i \\u003e= 4) return \\"IV\\" + ToRoman(i - 4);\\r\\n            if (i \\u003e= 1) return \\"I\\" + ToRoman(i - 1);\\r\\n            throw new ArgumentOutOfRangeException();\\r\\n        }\\r\\n    }\\r\\n}"}
50	15	38e5e4a3468ea4615b8dbc87	\N	cpp	hamming	\N	\N	0	2	2016-03-17 17:52:00	2016-03-17 17:52:00	37	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() != lhs.length())\\r\\n    {\\r\\n        throw std::domain_error(\\"Hamming distance is not defined for different length strings.\\");\\r\\n    }\\r\\n\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n        p.first != lhs.end();\\r\\n        p = std::mismatch(++p.first, lhs.end(), ++p.second))\\r\\n    {\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}","hamming.h":"#if !defined(HAMMING_H)\\r\\n#define HAMMING_H\\r\\n\\r\\n#include \\u003cstring\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs);\\r\\n\\r\\n}\\r\\n\\r\\n#endif"}
51	15	47147e78b47888803b6cc0ad	hibernating	cpp	hamming	\N	\N	0	1	2016-03-22 05:41:55	2016-03-22 05:41:55	37	{"hamming.cpp":"#include \\"hamming.h\\"\\r\\n#include \\u003calgorithm\\u003e\\r\\n\\r\\nnamespace hamming\\r\\n{\\r\\n\\r\\nint compute(std::string const\\u0026 lhs, std::string const\\u0026 rhs)\\r\\n{\\r\\n    if (rhs.length() \\u003c lhs.length()) {\\r\\n        return compute(rhs, lhs);\\r\\n    }\\r\\n    int count = 0;\\r\\n    for (auto p = std::mismatch(lhs.begin(), lhs.end(), rhs.begin());\\r\\n            p.first != lhs.end();\\r\\n            p = std::mismatch(p.first, lhs.end(), p.second)) {\\r\\n        ++p.first;\\r\\n        ++p.second;\\r\\n        ++count;\\r\\n    }\\r\\n    return count;\\r\\n}\\r\\n\\r\\n}\\r"}
52	15	49ff48a3dcae11b4c01e3645	pending	javascript	word-count	\N	\N	0	1	2016-03-12 10:27:42	2016-03-12 10:27:42	38	{"word-count.js":"var words = function(text){\\n\\tvar answer = { };\\n\\tfor (var k =0; k\\u003ctext.length; k++){\\n\\t\\tif(text.indexOf(\\"\\\\n\\")\\u003e-1){\\n\\t\\t\\ttext_arr = text.split(\\"\\\\n\\");\\n\\t\\t}\\n\\t\\telse{\\n\\t\\t\\ttext_arr = text.split(\\" \\");\\n\\t\\t}\\n\\t}\\n\\tfor(var i =0, len=text_arr.length; i\\u003clen; i++){\\n\\t\\tif(answer[text_arr[i]]){\\n\\t\\t\\tanswer[text_arr[i]]+=1;\\n\\t\\t}else{\\n\\t\\t\\tanswer[text_arr[i]]=1\\n\\t\\t}\\n\\t}\\n\\treturn answer;\\n}"}
53	15	51790e7979914027936021ea	pending	ruby	rna-transcription	\N	\N	0	1	2016-03-14 01:23:30	2016-03-14 01:23:30	39	{"complement.rb":"module Complement\\n  DNA_TO_RNA = {\\n    'G' =\\u003e 'C',\\n    'C' =\\u003e 'G',\\n    'T' =\\u003e 'A',\\n    'A' =\\u003e 'U'\\n  }\\n\\n  def self.map_each_nucleotide(hash, string)\\n    result = ''\\n    string.each_char do |nucleotide|\\n      result \\u003c\\u003c hash[nucleotide]\\n    end\\n\\n    result\\n  end\\n\\n  def self.of_dna(dna_nucleotide)\\n    map_each_nucleotide(DNA_TO_RNA, dna_nucleotide)\\n  end\\n\\n  def self.of_rna(rna_nucleotide)\\n    map_each_nucleotide(DNA_TO_RNA.invert, rna_nucleotide)\\n  end\\nend"}
95	22	d0efc2c7592b25588bbb72be	superseded	rust	difference-of-squares	\N	\N	0	2	2016-03-06 02:14:37	2016-03-06 02:14:37	64	{"src/lib.rs":"pub fn square_of_sum(nums: usize) -\\u003e usize {\\n    (1..(nums + 1)).fold(0, |acc, num| acc + num).pow(2)\\n}\\n\\npub fn sum_of_squares(nums: usize) -\\u003e usize {\\n    (1..(nums + 1)).fold(0, |acc, num| acc + num.pow(2))\\n}\\n\\npub fn difference(nums: usize) -\\u003e usize {\\n    square_of_sum(nums) - sum_of_squares(nums)\\n}"}
54	15	7b814051b721ca0faa8f052b	hibernating	swift	grade-school	\N	\N	0	3	2016-03-04 14:55:10	2016-03-04 14:55:10	40	{"section-1.swift":"// Playground - noun: a place where people can play\\n\\nimport UIKit\\nimport Foundation\\n\\nvar str = \\"Hello, playground\\"\\n\\n\\nclass GradeSchool {\\n    \\n    var db:[Int: [String]]\\n    \\n    init() {\\n        self.db = [:]\\n    }\\n    \\n    func addStudent(name: String, grade: Int) {\\n        var gradeArray = studentsInGrade(grade)\\n        gradeArray.append(name)\\n        db[grade] = gradeArray\\n    }\\n    \\n    func studentsInGrade(grade: Int) -\\u003e[String] {\\n        if let students = db[grade] {\\n            return students\\n        }\\n        return []\\n    }\\n    \\n    func sortedRoster() -\\u003e [Int:[String]] {\\n        var sortedStudents = [Int:[String]]()\\n        for (grade, gradeArray) in db {\\n            sortedStudents[grade] = sorted(gradeArray)\\n        }\\n        return sortedStudents\\n    }\\n}\\n\\n\\n//Test Suite\\n\\nvar success = 0\\nvar failure = 0\\n\\n\\nclass GradeSchoolTest {\\n    \\n\\n    \\n    func testAnEmptySchool() {\\n        let school = GradeSchool()\\n        let expected = [:]\\n        let result = school.db\\n       // XCTAssertEqual(result, expected)\\n        if expected == result {++success} else {++failure}\\n    }\\n    \\n    func testAddStudent() {\\n        let school = GradeSchool()\\n        school.addStudent(\\"Aimee\\", grade: 2)\\n        let result = school.db\\n        let expected: Dictionary = [2: [\\"Aimee\\"]]\\n       // XCTAssertEqual(result.keys.array, expected.keys.array)\\n        if expected.keys.array == result.keys.array {++success} else {++failure}\\n       // XCTAssertEqual(result[2]!, expected[2]!)\\n        if expected[2]! == result[2]! {++success} else {++failure}\\n    }\\n    \\n    func testAddMoreStudentsInSameClass() {\\n        let school = GradeSchool()\\n        school.addStudent(\\"Fred\\", grade: 2)\\n        school.addStudent(\\"James\\", grade: 2)\\n        school.addStudent(\\"Paul\\", grade: 2)\\n        let result = school.db\\n        let expected = [2: [\\"Fred\\", \\"James\\", \\"Paul\\"]]\\n       // XCTAssertEqual(result.keys.array, expected.keys.array)\\n        if expected.keys.array == result.keys.array {++success} else {++failure}\\n       // XCTAssertEqual(result[2]!, expected[2]!)\\n        if expected[2]! == result[2]! {++success} else {++failure}\\n    }\\n    \\n    func testAddStudentsToDifferentGrades() {\\n        let school = GradeSchool()\\n        school.addStudent(\\"Chelsea\\", grade: 3)\\n        school.addStudent(\\"Logan\\", grade: 7)\\n        let result = school.db\\n        let expected = [3: [\\"Chelsea\\"], 7: [\\"Logan\\"]]\\n       // XCTAssertEqual(result.keys.array.sorted(\\u003e), expected.keys.array.sorted(\\u003e))\\n        if expected.keys.array.sorted(\\u003e) == result.keys.array.sorted(\\u003e) {++success} else {++failure}\\n       // XCTAssertEqual(result[3]!, expected[3]!)\\n        if expected[3]! == result[3]! {++success} else {++failure}\\n    }\\n    \\n    func testGetStudentsInAGrade() {\\n        let school = GradeSchool()\\n        school.addStudent(\\"Franklin\\", grade: 5)\\n        school.addStudent(\\"Bradley\\", grade: 5)\\n        school.addStudent(\\"Jeff\\", grade: 1)\\n        let result = school.studentsInGrade(5)\\n        let expected = [ \\"Franklin\\", \\"Bradley\\" ]\\n       // XCTAssertEqual(result, expected)\\n        if expected == result {++success} else {++failure}\\n    }\\n    \\n    func testGetStudentsInANonExistantGrade() {\\n        let school = GradeSchool()\\n        let result = school.studentsInGrade(1)\\n        \\n        let expected: [String] = []\\n       // XCTAssertEqual(result, expected)\\n        if expected == result {++success} else {++failure}\\n    }\\n    \\n    func testSortSchool() {\\n        let school = GradeSchool()\\n        \\n        school.addStudent(\\"Jennifer\\", grade:4)\\n        school.addStudent(\\"Kareem\\", grade:6)\\n        school.addStudent(\\"Christopher\\", grade:4)\\n        school.addStudent(\\"Kyle\\", grade: 3)\\n        let result = school.sortedRoster()\\n        \\n        let expected = [\\n            3 : [\\"Kyle\\"],\\n            4 : [ \\"Christopher\\", \\"Jennifer\\" ],\\n            6 : [ \\"Kareem\\"]\\n        ]\\n        \\n      //  XCTAssertEqual(result.keys.array.sorted(\\u003e), expected.keys.array.sorted(\\u003e))\\n        if expected.keys.array.sorted(\\u003e) == result.keys.array.sorted(\\u003e) {++success} else {++failure}\\n      //  XCTAssertEqual(result[3]!, expected[3]!)\\n        if expected[3]! == result[3]! {++success} else {++failure}\\n      //  XCTAssertEqual(result[4]!, expected[4]!)\\n        if expected[4]! == result[4]! {++success} else {++failure}\\n       // XCTAssertEqual(result[6]!, expected[6]!)\\n        if expected[6]! == result[6]! {++success} else {++failure}\\n    }\\n}\\n\\nvar test = GradeSchoolTest()\\ntest.testAddMoreStudentsInSameClass()\\ntest.testAddStudent()\\ntest.testAddStudentsToDifferentGrades()\\ntest.testAnEmptySchool()\\ntest.testGetStudentsInAGrade()\\ntest.testGetStudentsInANonExistantGrade()\\ntest.testSortSchool()\\n\\nsuccess\\nfailure"}
55	15	04a272e5f1fd2ad0c618bf72	superseded	swift	grade-school	\N	\N	0	1	2016-03-04 20:06:12	2016-03-04 20:06:12	40	{"GradeSchool.swift":"//\\n//  GradeSchool.swift\\n//  GradeSchool\\n//\\n//  Created by Matt Bearson on 10/18/14.\\n//  Copyright (c) 2014 AppFam. All rights reserved.\\n//\\n\\nimport Foundation\\n\\nclass GradeSchool {\\n    \\n    var db:[Int: [String]]\\n    \\n    init() {\\n        self.db = [:]\\n    }\\n    \\n    func addStudent(name: String, grade: Int) {\\n        \\n        var database: [Int:[String]] = [:]\\n        var gradeArray: [String] = []\\n        \\n        if !self.db.isEmpty {\\n            database = self.db\\n            \\n            if database[grade] != nil {\\n                gradeArray = database[grade]!\\n            }\\n        }        \\n        gradeArray.append(name)\\n        database[grade] = gradeArray\\n        self.db = database\\n    }\\n    \\n    \\n    func studentsInGrade(grade: Int) -\\u003e[String] {\\n        \\n        if self.db[grade] != nil {\\n            return self.db[grade]!\\n        }\\n        return []\\n    }\\n    \\n    \\n    func sortedRoster() -\\u003e [Int:[String]] {\\n        \\n        var sortedStudents: [Int:[String]] = [:]\\n        \\n        for key in db.keys {\\n            \\n            var currentArray = db[key]\\n            currentArray = sorted(currentArray!) {$0 \\u003c $1}\\n            sortedStudents[key] = currentArray\\n        }\\n        return sortedStudents\\n    }\\n}"}
56	15	6a37d5500f8517d708d0cdca	superseded	swift	grade-school	\N	\N	0	2	2016-03-09 21:32:45	2016-03-09 21:32:45	40	{"GradeSchool.swift":"//\\n//  GradeSchool.swift\\n//  GradeSchool\\n//\\n//  Created by Matt Bearson on 10/18/14.\\n//  Copyright (c) 2014 AppFam. All rights reserved.\\n//\\n\\nimport Foundation\\n\\nclass GradeSchool {\\n    \\n    var db:[Int: [String]]\\n    \\n    init() {\\n        self.db = [:]\\n    }\\n    \\n    func addStudent(name: String, grade: Int) {\\n        var gradeArray = studentsInGrade(grade)\\n        gradeArray.append(name)\\n        db[grade] = gradeArray\\n    }\\n    \\n    func studentsInGrade(grade: Int) -\\u003e[String] {\\n        if db[grade] != nil {\\n            return db[grade]!\\n            }\\n        return []\\n    }\\n    \\n    \\n    func sortedRoster() -\\u003e [Int:[String]] {\\n        var sortedStudents = [Int:[String]]()\\n        for (grade, gradeArray) in db {\\n            sortedStudents[grade] = sorted(gradeArray) {$0 \\u003c $1}\\n        }\\n        return sortedStudents\\n    }\\n}"}
57	15	02dee0d1824b913c284f6fc3	\N	ruby	nth-prime	\N	\N	0	1	2016-03-11 01:15:44	2016-03-11 01:15:44	41	{"nth_prime.rb":"class Prime\\n  UPPER_LIMIT = 105000\\n\\n  class \\u003c\\u003c self\\n    def nth p\\n      raise ArgumentError if p.zero?\\n      primes = []\\n      range.each do |n|\\n        if primes.any? { |x| n % x == 0 }\\n          nil\\n        else\\n          primes \\u003c\\u003c n\\n          break if primes.size == p\\n        end\\n      end\\n      primes.last\\n    end\\n\\n    def range\\n      (2..UPPER_LIMIT)\\n    end\\n  end\\nend"}
58	15	8ce3b152afa27ec7cfdeaedb	\N	javascript	grade-school	\N	\N	0	1	2016-03-10 02:52:46	2016-03-10 02:52:46	42	{"grade-school.js":"module.exports = function school() {\\n\\n  var db = {};\\n\\n  function add(name, level) {\\n\\n    if (db[level] === undefined) {\\n      db[level] = [ name ];\\n    } else {\\n      db[level].push(name);\\n    }\\n\\n  }\\n\\n  function grade(level) {\\n\\n    return (db[level] || []).slice().sort();\\n\\n  }\\n\\n  function roster() {\\n\\n    var dbCopy = {};\\n\\n    Object.keys(db).forEach(function (lvl) {\\n      dbCopy[lvl] = grade(lvl);\\n    });\\n\\n    return dbCopy;\\n\\n  }\\n\\n  return { roster, grade, add };\\n\\n};"}
59	15	cb8d4a2a272c31c942939ab2	pending	python	twelve-days	\N	\N	0	2	2016-03-07 11:04:52	2016-03-07 11:04:52	43	{"twelve_days.py":"_gifts = [\\n    'a Partridge in a Pear Tree',\\n    'two Turtle Doves',\\n    'three French Hens',\\n    'four Calling Birds',\\n    'five Gold Rings',\\n    'six Geese-a-Laying',\\n    'seven Swans-a-Swimming',\\n    'eight Maids-a-Milking',\\n    'nine Ladies Dancing',\\n    'ten Lords-a-Leaping',\\n    'eleven Pipers Piping',\\n    'twelve Drummers Drumming',\\n]\\n\\n_days = [\\n    'first',\\n    'second',\\n    'third',\\n    'fourth',\\n    'fifth',\\n    'sixth',\\n    'seventh',\\n    'eighth',\\n    'ninth',\\n    'tenth',\\n    'eleventh',\\n    'twelfth',\\n]\\n\\n\\ndef verse(day):\\n    pre_string = \\"On the {} day of Christmas my true love gave to me, \\"\\n    pre = pre_string.format(_days[day-1])\\n\\n    # comma-separated list of gifts from today's down to doves, inclusive\\n    todays_gifts = ', '.join(_gifts[day-1:0:-1])\\n\\n    # add conjunction if there are many gifts\\n    if day \\u003e 1:\\n        todays_gifts += ', and '\\n    # a partridge in a pear tree!\\n    todays_gifts += _gifts[0]\\n\\n    post = '.\\\\n'\\n    return pre + todays_gifts + post\\n\\n\\ndef verses(start, end):\\n    return \\"\\\\n\\".join(verse(n) for n in range(start, end + 1)) + \\"\\\\n\\"\\n\\n\\ndef sing():\\n    return verses(1, 12)"}
60	15	1e1e2fb91f08261d1cd8a1cf	superseded	python	twelve-days	\N	\N	0	1	2016-03-14 16:26:55	2016-03-14 16:26:55	43	{"twelve_days.py":"gifts = [\\n    'a Partridge in a Pear Tree',\\n    'two Turtle Doves',\\n    'three French Hens',\\n    'four Calling Birds',\\n    'five Gold Rings',\\n    'six Geese-a-Laying',\\n    'seven Swans-a-Swimming',\\n    'eight Maids-a-Milking',\\n    'nine Ladies Dancing',\\n    'ten Lords-a-Leaping',\\n    'eleven Pipers Piping',\\n    'twelve Drummers Drumming',\\n]\\n\\ndays = [\\n    'first',\\n    'second',\\n    'third',\\n    'fourth',\\n    'fifth',\\n    'sixth',\\n    'seventh',\\n    'eighth',\\n    'ninth',\\n    'tenth',\\n    'eleventh',\\n    'twelfth',\\n]\\n\\n\\ndef verse(day):\\n    pre = \\"On the {} day of Christmas my true love gave to me, \\".format(days[day-1])\\n\\n    # comma-separated list of gifts from today's down to doves, inclusive\\n    todays_gifts = ', '.join(gifts[day-1:0:-1])\\n\\n    # add conjunction if there are many gifts\\n    if day \\u003e 1:\\n        todays_gifts += ', and '\\n    # a partridge in a pear tree!\\n    todays_gifts += gifts[0]\\n\\n    post = '.\\\\n'\\n    return pre + todays_gifts + post\\n\\ndef verses(start, end):\\n    return \\"\\\\n\\".join([verse(n) for n in range(start, end + 1)]) + \\"\\\\n\\"\\n\\ndef sing():\\n    return verses(1, 12)"}
222	33	88379462539e07d65cb8fe0a	done	python	rna-transcription	\N	\N	0	1	2015-12-08 20:31:31	2015-12-08 20:31:31	146	{"dna.py":"class DNA(object):\\n    reemplazar = dict(zip(list('GCTA'), list('CGAU')))\\n    def __init__(self, dna):\\n        self.dna = dna\\n\\n    def to_rna(self):\\n        ret = []\\n        for char in self.dna:\\n            ret.append(self.reemplazar[char])\\n        return ''.join(ret)"}
62	15	26783d180ab417cfebaf4c89	pending	csharp	anagram	\N	\N	0	1	2016-03-08 05:30:17	2016-03-08 05:30:17	45	{"\\\\csharp\\\\anagram\\\\Anagram.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nclass Anagram\\r\\n{\\r\\n\\tprivate string _baseWord;\\r\\n\\tprivate bool _lookupGenerated = false;\\r\\n\\tprivate Dictionary\\u003cchar, int\\u003e _charCounts = new Dictionary\\u003cchar, int\\u003e();\\r\\n\\r\\n\\tpublic Anagram(string baseWord)\\r\\n\\t{\\r\\n\\t\\t_baseWord = baseWord.ToLower();\\r\\n\\t}\\r\\n\\r\\n\\tpublic string[] Match(string[] words)\\r\\n\\t{\\r\\n\\t\\tvar result = new List\\u003cstring\\u003e();\\r\\n\\r\\n\\t\\t//\\tGenerate a one-time table of character counts in the anagram word for faster lookup (deferred from\\r\\n\\t\\t//\\tthe constructor to avoid the cost of generation until necessary)\\r\\n\\t\\tif (!_lookupGenerated)\\r\\n\\t\\t{\\r\\n\\t\\t\\tGenerateCharCountLookup();\\r\\n\\t\\t\\t_lookupGenerated = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tforeach (var word in words)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (IsMatch(word.ToLower()))\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tresult.Add(word);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn result.ToArray();\\r\\n\\t}\\r\\n\\r\\n\\tprivate void GenerateCharCountLookup()\\r\\n\\t{\\r\\n\\t\\t//\\tStore a count of each character in the base word for later comparison\\r\\n\\t\\tforeach (var ch in _baseWord.Distinct())\\r\\n\\t\\t{\\r\\n\\t\\t\\t_charCounts.Add(ch, _baseWord.Count(c =\\u003e c == ch));\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tprivate bool IsMatch(string word)\\r\\n\\t{\\r\\n\\t\\t//\\tIf the words are not the same length they cannot be anagrams - This check is fast and cheap\\r\\n\\t\\tif (word.Length != _baseWord.Length)\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t//\\tIf the word is the same it's not an anagram\\r\\n\\t\\tif (0 == word.CompareTo(_baseWord))\\r\\n\\t\\t\\treturn false;\\r\\n\\r\\n\\t\\t//\\tAn anagram should have the same number of occurrances of each letter\\r\\n\\t\\tforeach (var item in _charCounts)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (word.Count(c =\\u003e c == item.Key) != item.Value)\\r\\n\\t\\t\\t\\treturn false;\\r\\n        }\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n}"}
63	22	c2847dcef55768eba640de83	\N	haskell	anagram	\N	\N	0	1	2016-02-28 13:56:55	2016-02-28 13:56:55	46	{"Anagram.hs":"module Anagram\\n       ( anagramsFor\\n       ) where\\n\\nimport           Data.Char (toLower)\\nimport           Data.List (sort)\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor word = filter isAnagram\\n  where\\n    isAnagram candidate = canon candidate == canonWord\\n                       \\u0026\\u0026 lower candidate /= lower word\\n    canonWord = canon word\\n\\n-- Canonicalize words for comparison.\\ncanon :: String -\\u003e String\\ncanon = sort . lower\\n\\nlower :: String -\\u003e String\\nlower = map toLower"}
64	22	573de361346da5e38760055b	\N	elixir	sublist	\N	\N	0	1	2016-02-29 06:10:30	2016-02-29 06:10:30	47	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b -\\u003e\\n        :equal\\n      length(a) \\u003c= length(b) \\u0026\\u0026 is_sublist(a, b)-\\u003e\\n        :sublist\\n      is_sublist(b, a) -\\u003e\\n        :superlist\\n      true -\\u003e\\n        :unequal\\n    end\\n  end\\n\\n  defp is_sublist(a, b) do\\n    cond do\\n      length(a) \\u003e length(b) -\\u003e\\n        false\\n      a === Enum.take(b, length(a)) -\\u003e\\n        true\\n      true -\\u003e\\n        is_sublist(a, tl(b))\\n    end\\n  end\\nend"}
65	22	f63933dabbefbae325c89b7b	hibernating	javascript	word-count	\N	\N	0	1	2016-03-02 11:04:15	2016-03-02 11:04:15	48	{"word-count.js":"module.exports = function(s){\\n  var obj = {};\\n  s.split(/ |\\\\n/).forEach(function(word){\\n    if (! obj[word]) obj[word] = 0;\\n    obj[word]++;\\n  });\\n  return obj;\\n};"}
66	22	6741092ed664975dda7d107f	\N	python	hello-world	\N	\N	0	1	2016-03-02 08:00:07	2016-03-02 08:00:07	49	{"hello_world.py":"# -*- coding: utf-8 -*-\\n\\n#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if not name:\\n        name = 'World'\\n\\n    return u'Hello, {name}!'.format(name=name)"}
67	22	b3e891ec88c84c69199522cc	\N	python	hello-world	\N	\N	0	2	2016-03-18 07:01:45	2016-03-18 07:01:45	49	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name='World'):\\n    return u'Hello, {}!'.format(name)"}
68	22	b24d4d56269267d7deb7bf65	hibernating	javascript	bob	\N	\N	0	1	2016-03-12 15:16:15	2016-03-12 15:16:15	50	{"/javascript/bob/bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar Bob = function() {};\\n\\nBob.prototype.hey = function(input) {\\n  \\"use strict\\";\\n  var result;\\n  if(input === input.toUpperCase() \\u0026\\u0026 input !== input.toLowerCase()) {\\n    result = (\\"Whoa, chill out!\\");\\n  }\\n  else if (input.trim() === \\"\\") {\\n    return \\"Fine. Be that way!\\";\\n  }\\n  else if (input[input.length - 1] === \\"?\\") {\\n    result = \\"Sure.\\";\\n  }\\n  else {\\n    result = \\"Whatever.\\";\\n  }\\n  return result;\\n};\\n\\nmodule.exports = Bob;"}
69	22	72953d4f91b890a9efcb733d	\N	javascript	rna-transcription	\N	\N	0	1	2016-02-21 02:19:36	2016-02-21 02:19:36	51	{"rna-transcription.js":"var dnaTranscriber = function() {\\n};\\n\\ndnaTranscriber.prototype.toRna = function(nucleotides) {\\n    var rnaComplement = \\"\\";\\n    var splitNucleotides = nucleotides.split(\\"\\");\\n    for (i=0; i \\u003c splitNucleotides.length; i++) {\\n        if (splitNucleotides[i] === \\"C\\") {\\n            rnaComplement += \\"G\\";\\n        } else if (splitNucleotides[i] === \\"G\\") {\\n            rnaComplement += \\"C\\";\\n        } else if (splitNucleotides[i] === \\"A\\") {\\n            rnaComplement += \\"U\\";\\n        } else if (splitNucleotides[i] === \\"T\\") {\\n            rnaComplement += \\"A\\";\\n        }\\n    }\\n    return rnaComplement;\\n};\\n\\nmodule.exports = dnaTranscriber;"}
70	22	00cd1eca5158452c80a7ccdc	superseded	ruby	grains	\N	\N	0	1	2016-02-23 03:08:57	2016-02-23 03:08:57	52	{"grains.rb":"class Grains\\n\\n  attr_accessor :squares\\n\\n  def initialize\\n    @squares = [0]\\n    fill_squares\\n  end\\n\\n  def fill_squares\\n    @squares[1] = 1\\n    (2..64).each { |square|\\n      @squares[square] = (2 * @squares[square-1])\\n    }\\n  end\\n\\n  def square(count)\\n    @squares[count]\\n  end\\n\\n  def total\\n    @squares.reduce(:+)\\n  end\\n\\nend"}
71	22	1b608441e2024cd69b325dd1	done	ruby	grains	\N	\N	0	2	2016-03-05 04:39:35	2016-03-05 04:39:35	52	{"grains.rb":"class Grains\\n\\n  def initialize\\n    @NUM_SQUARES = 64\\n  end\\n\\n  def square(n)\\n    2 ** (n - 1)\\n  end\\n\\n  def total\\n    2 ** @NUM_SQUARES - 1\\n  end\\n\\nend"}
72	22	5e75cbb0d758efecf2e2efa1	\N	objective-c	word-count	\N	\N	0	1	2016-03-23 07:05:25	2016-03-23 07:05:25	53	{"WordCountTest.m":"#import \\u003cXCTest/XCTest.h\\u003e\\r\\n#import \\"WordCount.h\\"\\r\\n\\r\\n@interface test_suite : XCTestCase\\r\\n\\r\\n@end\\r\\n\\r\\n@implementation test_suite\\r\\n\\r\\n- (void)testCountOneWord {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"word\\"];\\r\\n  NSDictionary *expected = @{ @\\"word\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountOneOfEeach {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one of each\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"of\\" : @1, @\\"each\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testCountMultipleOccurrences {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"one fish two fish red fish blue fish\\"];\\r\\n  NSDictionary *expected = @{ @\\"one\\" : @1, @\\"fish\\" : @4, @\\"two\\" : @1, @\\"red\\" : @1, @\\"blue\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIgnorePunctation {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"car : carpet as java : javascript!!\\u0026@$%^\\u0026\\"];\\r\\n  NSDictionary *expected = @{ @\\"car\\" : @1, @\\"carpet\\" : @1, @\\"as\\" : @1, @\\"java\\" : @1, @\\"javascript\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testIncludeNumbers {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"testing, 1, 2 testing\\"];\\r\\n  NSDictionary *expected = @{ @\\"testing\\" : @2, @\\"1\\" : @1, @\\"2\\" : @1 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n- (void)testNormalizeCase {\\r\\n  WordCount *words = [[WordCount alloc] initWithString:@\\"go Go GO\\"];\\r\\n  NSDictionary *expected = @{ @\\"go\\" : @3 };\\r\\n  NSDictionary *result = [words count];\\r\\n\\r\\n  XCTAssertEqualObjects(expected, result);\\r\\n}\\r\\n\\r\\n@end"}
73	22	12b990085dd78c9065d166f2	\N	javascript	leap	\N	\N	0	2	2016-03-07 04:32:29	2016-03-07 04:32:29	54	{"leap.js":"var Leap = function(year) {\\n\\treturn (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0);\\n};\\n\\nmodule.exports = Leap;"}
74	22	ab5ba742282ba1ace836f6ab	\N	javascript	leap	\N	\N	0	1	2016-03-15 16:08:17	2016-03-15 16:08:17	54	{"leap.js":"var Leap = function(year) {\\n\\tif (year % 4 === 0 \\u0026\\u0026 year % 100 !== 0 || year % 400 === 0) {\\n\\t\\treturn true;\\n\\t} else \\n\\t\\treturn false;\\n};\\n\\nmodule.exports = Leap;"}
96	22	c377081098e17621c7b342a2	done	rust	difference-of-squares	\N	\N	0	3	2016-03-13 12:13:12	2016-03-13 12:13:12	64	{"src/lib.rs":"pub fn square_of_sum(nums: usize) -\\u003e usize {\\n    sum(nums, add_nums).pow(2)\\n}\\n\\npub fn sum_of_squares(nums: usize) -\\u003e usize {\\n    sum(nums, add_squares)\\n}\\n\\nfn sum(nums: usize, func: fn(usize, usize) -\\u003e usize) -\\u003e usize {\\n    (1..(nums + 1)).fold(0, func)\\n}\\n\\nfn add_nums(acc: usize, num: usize) -\\u003e usize {\\n    acc + num\\n}\\n\\nfn add_squares(acc: usize, num: usize) -\\u003e usize {\\n    acc + num.pow(2)\\n}\\n\\npub fn difference(nums: usize) -\\u003e usize {\\n    square_of_sum(nums) - sum_of_squares(nums)\\n}"}
75	22	68eec2709531c163be2d009e	superseded	ruby	hamming	\N	\N	0	2	2016-03-07 16:24:26	2016-03-07 16:24:26	55	{"hamming.rb":"class Difference\\n  attr_reader :initial_character, :second_character\\n\\n  def initialize(initial_character, second_character)\\n    @initial_character = initial_character\\n    @second_character = second_character\\n  end\\n\\n  def amount\\n    if initial_character == second_character\\n      0\\n    else\\n      1\\n    end\\n  end\\nend\\n\\n\\nclass Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += Difference.new(key, string_to_array(second)[value]).amount\\n    end\\n    total_difference\\n  end\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
76	22	339fd3c32536fd047e0ffa86	pending	ruby	hamming	\N	\N	0	3	2016-03-10 12:34:46	2016-03-10 12:34:46	55	{"hamming.rb":"class Difference\\n  attr_reader :initial_character, :second_character\\n\\n  def initialize(initial_character, second_character)\\n    @initial_character = initial_character\\n    @second_character = second_character\\n  end\\n\\n  def amount\\n    if initial_character == second_character\\n      0\\n    else\\n      1\\n    end\\n  end\\nend\\n\\n\\nclass Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += Difference.new(key, string_to_array(second)[value]).amount\\n    end\\n    total_difference\\n  end\\n\\n  private\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
77	22	bf2bd2943cc8669242f8f408	superseded	ruby	hamming	\N	\N	0	1	2016-03-15 23:01:26	2016-03-15 23:01:26	55	{"hamming.rb":"class Hamming\\n  def self.compute(first, second)\\n    total_difference = 0\\n    first = make_first_dna_strand_no_longer_than_second(first, second)\\n    string_to_array(first).each_with_index do |key, value|\\n      total_difference += 1 if key != string_to_array(second)[value]\\n    end\\n    total_difference\\n  end\\n\\n  def self.make_first_dna_strand_no_longer_than_second(first, second)\\n    return first[0, second.length]\\n  end\\n\\n  def self.string_to_array(string)\\n    return string.split(//)\\n  end\\nend"}
78	22	61e58cb16b37e3eefc629fa7	\N	scala	leap	\N	\N	0	2	2016-03-19 23:20:54	2016-03-19 23:20:54	56	{"src/main/scala/Year.scala":"/**\\n * Write a program that will take a year and report if it is a leap year.\\n *\\n * The tricky thing here is that a leap year occurs:\\n * \\n * ```plain\\n * on every year that is evenly divisible by 4\\n *  except every year that is evenly divisible by 100\\n *    unless the year is also evenly divisible by 400\\n * ```\\n *\\n * For example, 1997 is not a leap year, but 1996 is.  1900 is not a leap\\n * year, but 2000 is.\\n */\\ncase class Year(y: Int) {\\n  \\n  private[this]\\n  val Div100 = (y % 100 == 0)\\n  private[this]\\n  val Div400 = (y % 400 == 0)\\n  private[this]\\n  val Div4 = (y % 4 == 0)\\n  \\n  /**\\n   * on every year that is evenly divisible by 4\\n   * except every year that is evenly divisible by 100\\n   * unless the year is also evenly divisible by 400\\n   * just playing around this is probably less readable.\\n   */\\n  lazy val isLeap: Boolean = (Div4 \\u0026\\u0026 (Div100 \\u0026\\u0026 Div400)) || (Div4 \\u0026\\u0026 !Div100)\\n   \\n}"}
79	22	5b4f74d32d1cc5b8059be711	\N	scala	leap	\N	\N	0	1	2016-03-22 16:17:34	2016-03-22 16:17:34	56	{"src/main/scala/Year.scala":"/**\\n * Write a program that will take a year and report if it is a leap year.\\n *\\n * The tricky thing here is that a leap year occurs:\\n * \\n * ```plain\\n * on every year that is evenly divisible by 4\\n *  except every year that is evenly divisible by 100\\n *    unless the year is also evenly divisible by 400\\n * ```\\n *\\n * For example, 1997 is not a leap year, but 1996 is.  1900 is not a leap\\n * year, but 2000 is.\\n */\\ncase class Year(y: Int) {\\n  \\n  private[this]\\n  val DivBy100 = (y % 100 == 0)\\n  private[this]\\n  val DivBy400 = (y % 400 == 0)\\n  private[this]\\n  val DivBy4 = (y % 4 == 0)\\n  \\n  /**\\n   * on every year that is evenly divisible by 4\\n   * except every year that is evenly divisible by 100\\n   * unless the year is also evenly divisible by 400\\n   */\\n  lazy val isLeap: Boolean = {\\n    if (DivBy100 \\u0026\\u0026 DivBy400) true\\n    else if (DivBy100) false\\n    else if (DivBy4) true\\n    else false\\n  }\\n   \\n}"}
80	22	9ffcb32d71e767cb6877a76a	superseded	ruby	rna-transcription	\N	\N	0	1	2016-02-22 02:24:54	2016-02-22 02:24:54	57	{"rna-transcription.rb":"class DNA\\n  def initialize(strand)\\n    @strand = strand\\n  end\\n\\n  def to_rna\\n    @strand.tr 'T', 'U'\\n  end\\nend"}
81	22	df0b99e043c46f3c1d3080de	done	ruby	rna-transcription	\N	\N	0	2	2016-03-04 21:12:52	2016-03-04 21:12:52	57	{"rna-transcription.rb":"# Why overloading `String` ?\\n#\\n# In bioinformatics DNA strand is represented as a `String` most of the time\\n# because it make heavy use of various methods sure as #reverse, #gsub, #tr,\\n# #replace, #upcase, ..., which are all in the `String` class.\\n#\\n# For this simple exercice it may be 'too much' (we juste translate to RNA),\\n# but I believe it is one of the best solution to represent DNA :)\\n\\nclass DNA \\u003c String\\n  THYMINE = 'T'\\n  URACIL  = 'U'\\n\\n  def to_rna\\n    tr THYMINE, URACIL\\n  end\\nend"}
82	22	a91bab84785fbfb7c2393bc3	\N	ruby	binary	\N	\N	0	1	2016-03-05 03:29:21	2016-03-05 03:29:21	58	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @binary.reverse.each_char.with_index.reduce(0) { |t,(c,i)| t+= c.to_i * 2**i }\\n  end\\nend"}
83	22	4be73b5b45313218186e8666	\N	ruby	binary	\N	\N	0	2	2016-03-08 03:39:50	2016-03-08 03:39:50	58	{"binary.rb":"#!/usr/bin/env ruby\\n\\nclass Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    raise ArgumentError, 'invalid binary value' unless binary =~ /^[01]+$/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    @decimal ||= @binary.chars.reduce(0) { |sum, bit| 2*sum + bit.to_i }\\n  end\\nend"}
84	22	f2b3d0aa0511b6cf993ea030	hibernating	ruby	difference-of-squares	\N	\N	0	1	2016-02-29 14:03:43	2016-02-29 14:03:43	59	{"squares.rb":"class Squares\\n  attr_reader :number_of_squares\\n\\n  def initialize(number_of_squares)\\n    @number_of_squares = number_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..number_of_squares).inject(0) do |memo, i|\\n      memo + (i ** 2)\\n    end\\n  end\\n\\n  def square_of_sums\\n    (1..number_of_squares).inject(\\u0026:+) ** 2\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
97	22	f99a34caef430c059b510840	superseded	ruby	word-count	\N	\N	0	3	2016-02-24 19:24:19	2016-02-24 19:24:19	65	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
85	22	48b5829913444e789218ecbf	done	elixir	nucleotide-count	\N	\N	0	1	2016-03-12 05:20:11	2016-03-12 05:20:11	60	{"elixir/nucleotide-count/dna.exs":"defmodule DNA do\\n  @nucleotides [?A, ?C, ?G, ?T]\\n\\n  @doc \\"\\"\\"\\n  Counts individual nucleotides in a DNA strand.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.count('AATAA', ?A)\\n  4\\n\\n  iex\\u003e DNA.count('AATAA', ?T)\\n  1\\n  \\"\\"\\"\\n  @spec count([char], char) :: non_neg_integer\\n  def count(strand, nucleotide) do\\n    Enum.count(strand, fn(n) -\\u003e n == nucleotide end)\\n  end\\n\\n\\n  @doc \\"\\"\\"\\n  Returns a summary of counts by nucleotide.\\n\\n  ## Examples\\n\\n  iex\\u003e DNA.nucleotide_counts('AATAA')\\n  %{?A =\\u003e 4, ?T =\\u003e 1, ?C =\\u003e 0, ?G =\\u003e 0}\\n  \\"\\"\\"\\n  @spec nucleotide_counts([char]) :: Dict.t\\n  def nucleotide_counts(strand) do\\n    Enum.reduce(@nucleotides, %{}, fn(n, result) -\\u003e Map.put(result, n, DNA.count(strand, n)) end)\\n  end\\nend"}
86	22	8c3050c003516de1aabd2372	pending	javascript	food-chain	\N	\N	0	1	2016-03-04 14:50:20	2016-03-04 14:50:20	61	{"food-chain.js":"exports.verses = verses;\\nexports.verse  = verse;\\n\\n\\nfunction verses(first, last) {\\n  var idx = first - 1;\\n  var end = last;\\n  var str = [];\\n\\n  while (++idx \\u003c= end) {\\n    str.push(verse(idx));\\n  }\\n\\n  return str.join(\\"\\\\n\\") + \\"\\\\n\\";\\n};\\n\\n\\n\\nfunction verse(number) {\\n  switch (number) {\\n    case 1: return \\"\\" +\\n      \\"I know an old lady who swallowed a fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 2: return \\"\\" +\\n      \\"I know an old lady who swallowed a spider.\\\\n\\" + \\"It wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 3: return \\"\\" +\\n      \\"I know an old lady who swallowed a bird.\\\\n\\" + \\"How absurd to swallow a bird!\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 4: return \\"\\" +\\n      \\"I know an old lady who swallowed a cat.\\\\n\\" + \\"Imagine that, to swallow a cat!\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 5: return \\"\\" +\\n      \\"I know an old lady who swallowed a dog.\\\\n\\" + \\"What a hog, to swallow a dog!\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" +\\n      \\"She swallowed the cat to catch the bird.\\\\n\\" + \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 6: return \\"\\" +\\n      \\"I know an old lady who swallowed a goat.\\\\n\\" + \\"Just opened her throat and swallowed a goat!\\\\n\\" + \\"She swallowed the goat to catch the dog.\\\\n\\" +\\n      \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" +\\n      \\"She swallowed the spider to catch the fly.\\\\n\\" + \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 7: return \\"\\" +\\n      \\"I know an old lady who swallowed a cow.\\\\n\\" + \\"I don't know how she swallowed a cow!\\\\n\\" + \\"She swallowed the cow to catch the goat.\\\\n\\" +\\n      \\"She swallowed the goat to catch the dog.\\\\n\\" + \\"She swallowed the dog to catch the cat.\\\\n\\" + \\"She swallowed the cat to catch the bird.\\\\n\\" +\\n      \\"She swallowed the bird to catch the spider that wriggled and jiggled and tickled inside her.\\\\n\\" + \\"She swallowed the spider to catch the fly.\\\\n\\" +\\n      \\"I don't know why she swallowed the fly. Perhaps she'll die.\\\\n\\";\\n\\n    case 8: return \\"\\" +\\n      \\"I know an old lady who swallowed a horse.\\\\n\\" + \\"She's dead, of course!\\\\n\\";\\n  };\\n};"}
87	22	d1cba303d946a4c279e2496a	\N	ruby	raindrops	\N	\N	0	3	2016-02-20 20:31:38	2016-02-20 20:31:38	62	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    sound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n  end\\nend"}
88	22	3a425039740bd13f260c77ab	\N	ruby	raindrops	\N	\N	0	1	2016-02-22 02:21:10	2016-02-22 02:21:10	62	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n  \\tsound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n  end\\n  end\\nend"}
89	22	4888cfd68c1f272a8fbde004	\N	ruby	raindrops	\N	\N	0	2	2016-02-22 18:38:59	2016-02-22 18:38:59	62	{"raindrops.rb":"# Raindrops\\n# Converts a number to a string, the contents of which depends on the number's\\n# prime factors.\\n# - If the number contains 3 as a prime factor, output 'Pling'.\\n# - If the number contains 5 as a prime factor, output 'Plang'.\\n# - If the number contains 7 as a prime factor, output 'Plong'.\\n# - Return the number as a string otherwise\\n\\nclass Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    sound = \\"\\"\\n    if drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 5 == 0\\n      sound \\u003c\\u003c \\"PlingPlang\\"\\n    elsif drop % 5 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlangPlong\\"\\n    elsif drop % 3 == 0 \\u0026\\u0026 drop % 7 == 0\\n      sound \\u003c\\u003c \\"PlingPlong\\"\\n    elsif drop % 3 == 0\\n      sound \\u003c\\u003c \\"Pling\\"\\n    elsif drop % 5 == 0\\n      sound \\u003c\\u003c \\"Plang\\"\\n    elsif drop % 7 == 0\\n      sound \\u003c\\u003c \\"Plong\\"\\n    else\\n      sound \\u003c\\u003c drop.to_s\\n  end\\n  end\\nend"}
90	22	f13982976ed703a6033181f8	\N	ruby	raindrops	\N	\N	0	4	2016-03-11 11:39:52	2016-03-11 11:39:52	62	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n  \\tunless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = ''\\n    sound \\u003c\\u003c 'Pling' if drop % 3 == 0\\n    sound \\u003c\\u003c 'Plang' if drop % 5 == 0\\n    sound \\u003c\\u003c 'Plong' if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
91	22	be00e7334d59b51fa4775ccb	\N	ruby	raindrops	\N	\N	0	5	2016-03-11 22:22:12	2016-03-11 22:22:12	62	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    unless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = ''\\n    sound \\u003c\\u003c 'Pling' if drop % 3 == 0\\n    sound \\u003c\\u003c 'Plang' if drop % 5 == 0\\n    sound \\u003c\\u003c 'Plong' if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
92	22	ab5026b15caefabec0cded2f	\N	ruby	raindrops	\N	\N	0	6	2016-03-22 01:48:22	2016-03-22 01:48:22	62	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n  def self.convert(drop)\\n    unless drop.is_a?(Fixnum) || drop.is_a?(Bignum)\\n      raise ArgumentError \\"This is not a number!\\"\\n    end\\n    sound = \\"\\"\\n    sound \\u003c\\u003c \\"Pling\\" if drop % 3 == 0\\n    sound \\u003c\\u003c \\"Plang\\" if drop % 5 == 0\\n    sound \\u003c\\u003c \\"Plong\\" if drop % 7 == 0\\n\\n    if sound.empty?\\n      sound \\u003c\\u003c drop.to_s\\n    end\\n    return sound\\n  end\\nend"}
93	22	b53f141a0ccfdfdddcce0b12	\N	elixir	hello-world	\N	\N	0	1	2016-02-20 09:01:00	2016-02-20 09:01:00	63	{"hello_world.exs":"defmodule HelloWorld do\\n  def hello(name \\\\\\\\ \\"World\\") do\\n    \\"Hello, \\" \\u003c\\u003e name \\u003c\\u003e \\"!\\"\\n  end\\nend"}
94	22	af69742be2f6317d57563252	superseded	rust	difference-of-squares	\N	\N	0	1	2016-02-27 16:16:38	2016-02-27 16:16:38	64	{"src/lib.rs":"pub fn square_of_sum(nums: usize) -\\u003e usize {\\n    let mut sum: usize = 0;\\n\\n    for num in 1..(nums + 1) {\\n        sum += num;\\n    }\\n\\n    sum.pow(2)\\n}\\n\\npub fn sum_of_squares(nums: usize) -\\u003e usize {\\n    let mut sum: usize = 0;\\n\\n    for num in 1..(nums + 1) {\\n        sum += num.pow(2);\\n    }\\n\\n    sum\\n}\\n\\npub fn difference(nums: usize) -\\u003e usize {\\n    square_of_sum(nums) - sum_of_squares(nums)\\n}"}
98	22	8f41d886f53333a56823b6af	superseded	ruby	word-count	\N	\N	0	2	2016-02-29 14:35:54	2016-02-29 14:35:54	65	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[word] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def split\\n    @string.scan(/\\\\w+/)\\n  end\\nend"}
99	22	7d90d94ef9ccca6d6cb666ba	done	ruby	word-count	\N	\N	0	4	2016-02-29 15:55:49	2016-02-29 15:55:49	65	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string.downcase\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    words.each_with_object(Hash.new(0)) do |word, word_list|\\n      word_list[word] += 1\\n    end\\n  end\\n\\n  private\\n\\n  def words\\n    @words ||= @string.scan(/\\\\w+/)\\n  end\\nend"}
100	22	f0622c22e4e156b99be79892	superseded	ruby	word-count	\N	\N	0	1	2016-03-05 13:51:41	2016-03-05 13:51:41	65	{"word-count.rb":"class Phrase\\n\\n  def initialize(string)\\n    @string = string\\n  end\\n\\n  def word_count\\n    # Use default argument to Hash constructor to avoid excess logic in #reduce\\n    split.reduce(Hash.new(0)) do |word_list, word|\\n      word_list[normalize(word)] += 1\\n      word_list\\n    end\\n  end\\n\\n  private\\n\\n  def normalize(word)\\n    word.downcase.gsub(/[^[:word:]]/, '')\\n  end\\n\\n  def split\\n    @string.split(/\\\\W+/)\\n  end\\nend"}
101	22	69bfaaa8448d7a3bcb34c135	hibernating	java	etl	\N	\N	0	1	2016-03-01 06:42:30	2016-03-01 06:42:30	66	{"src/main/java/Etl.java":"import java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Etl{\\n\\t\\n\\t\\n\\tpublic Map\\u003cString, Integer\\u003e transform(Map\\u003cInteger, List\\u003cString\\u003e\\u003e old){\\n\\t\\t\\n\\t\\tMap\\u003cString, Integer\\u003e results = new HashMap\\u003cString, Integer\\u003e();\\n\\t\\t\\n\\t\\tfor(int score : old.keySet()){\\t\\t\\t\\n\\t\\t\\tfor(String letter : old.get(score)){\\n\\t\\t\\t\\tresults.put(letter.toLowerCase(), score);\\n\\t\\t\\t}\\n\\t\\t}\\t\\t\\n\\t\\t\\n\\t\\treturn results;\\n\\t}\\n\\t\\n}"}
102	22	aaac05cde264a65c01b8faff	pending	erlang	rna-transcription	\N	\N	0	1	2016-03-05 22:03:15	2016-03-05 22:03:15	67	{"rna_transcription.erl":"-module(rna_transcription).\\n-export([to_rna/1]).\\n\\n-spec to_rna(list()) -\\u003e string().\\n-spec dna_to_rna(char()) -\\u003e char().\\n\\nto_rna(I) -\\u003e lists:foldl(fun(C, R) -\\u003e R ++ dna_to_rna(C) end,\\"\\", I).\\n\\ndna_to_rna(X) -\\u003e\\n  case X of\\n    $G -\\u003e \\"C\\";\\n    $C -\\u003e \\"G\\";\\n    $T -\\u003e \\"A\\";\\n    $A -\\u003e \\"U\\"\\n  end."}
103	22	1f256f5719afa700a5672406	superseded	ruby	binary-search-tree	\N	\N	0	1	2016-02-23 01:09:20	2016-02-23 01:09:20	68	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_accessor :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.public_send(\\"#{direction}=\\", Bst.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\nend"}
104	22	4ed9ce47a52a2dd163d65cd8	pending	ruby	binary-search-tree	\N	\N	0	2	2016-02-29 10:39:02	2016-02-29 10:39:02	68	{"/ruby/binary-search-tree/binary_search_tree.rb":"Bst = Struct.new(:data) do\\n  attr_reader :left, :right\\n\\n  def insert bst=self, new_data\\n    direction = new_data \\u003c= bst.data ? :left : :right\\n\\n    if bst.public_send(direction)\\n      insert bst.public_send(direction), new_data\\n    else\\n      bst.send(\\"#{direction}=\\", self.class.new(new_data))\\n    end\\n  end\\n\\n  def each node=self, \\u0026block\\n    return if node.nil?\\n\\n    each node.left, \\u0026block\\n    block.call node.data\\n    each node.right, \\u0026block\\n  end\\n\\nprivate\\n\\n  attr_writer :left, :right\\nend"}
105	22	7a8e70052fbc51d33f192667	pending	python	word-count	\N	\N	0	1	2016-03-01 20:43:07	2016-03-01 20:43:07	69	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(self):\\n\\tself = ' '.join(self.split()) #split and rejoin to clear out extra spaces and new lines\\n\\twords = self.split(' ') #split into array by space delimiting\\n\\tfinalcount = Counter(words) #count words\\n\\treturn finalcount"}
106	22	1486bfbd6c325527dda6c608	done	csharp	leap	\N	\N	0	2	2016-02-19 18:08:10	2016-02-19 18:08:10	70	{"Leap.cs":"public class Year\\r\\n{\\r\\n    public static bool IsLeap(int year)\\r\\n    {\\r\\n\\t\\t//Leap Year divisible by 4 but not a century year. Or simply divisible by 400.\\r\\n        return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n    }\\r\\n}\\r"}
107	22	2154fbb0a4bd3f304033a597	superseded	csharp	leap	\N	\N	0	1	2016-02-25 21:58:05	2016-02-25 21:58:05	70	{"Leap.cs":"﻿using NUnit.Framework;\\r\\n\\r\\nnamespace Exercism.Leap\\r\\n{\\r\\n    [TestFixture]\\r\\n    public class LeapTest\\r\\n    {\\r\\n        [Test]\\r\\n        public void Valid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1996), Is.True);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Invalid_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1997), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_20th_century_is_not_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(1900), Is.False);\\r\\n        }\\r\\n\\r\\n        [Test]\\r\\n        public void Turn_of_the_25th_century_is_a_leap_year()\\r\\n        {\\r\\n            Assert.That(Year.IsLeap(2400), Is.True);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public class Year\\r\\n    {\\r\\n        public static bool IsLeap(int year)\\r\\n        {\\r\\n            return ((year % 4 == 0) \\u0026\\u0026 (year % 100 != 0)) || (year % 400 == 0);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    internal class Leap\\r\\n    {\\r\\n        private static void Main(string[] args)\\r\\n        {\\r\\n        }\\r\\n    }\\r\\n}"}
108	22	45c5bae4311dbfd8cc7d7e91	pending	coffeescript	word-count	\N	\N	0	1	2016-03-17 16:11:34	2016-03-17 16:11:34	71	{"\\\\coffeescript\\\\word-count\\\\words.coffee":"class Words\\r\\n\\tconstructor: (text) -\\u003e\\r\\n\\t\\t@count = {}\\r\\n\\t\\tfor word in text.match(/\\\\w+/g)\\r\\n\\t\\t\\tword = word.toLowerCase()\\r\\n\\t\\t\\tif word of @count\\r\\n\\t\\t\\t\\t@count[word] += 1\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\t@count[word] = 1\\r\\n\\r\\nmodule.exports = Words"}
109	22	0f316c22dbfd5b0f482fb380	superseded	python	series	\N	\N	0	1	2016-02-20 01:30:10	2016-02-20 01:30:10	72	{"series.py":"def slices(digits, length):\\n    num_answers = len(digits) - length + 1\\n    \\n    # catch exceptions\\n    if num_answers \\u003c= 0:\\n        raise ValueError('Slice length is greater the number of digits.')\\n    if length \\u003c= 0:\\n        raise ValueError('Slice length must be at least 1.')\\n    \\n    # nested list comprehension to generate a list of lists of integers\\n    # i: outer index\\n    # j: inner index\\n    return [ [int(digits[i + j]) for j in range(length)] for i in range(num_answers) ]"}
110	22	c10e257e6d4640c55e9f7a91	pending	python	series	\N	\N	0	2	2016-03-05 13:43:23	2016-03-05 13:43:23	72	{"series.py":"def slices(digits, length):\\n    num_answers = len(digits) - length + 1\\n    \\n    # catch exceptions\\n    if num_answers \\u003c= 0:\\n        raise ValueError('Slice length is greater the number of digits.')\\n    if length \\u003c= 0:\\n        raise ValueError('Slice length must be at least 1.')\\n    \\n    return [list(map(int, (digits[i:i + length]))) for i in range(num_answers)]"}
111	22	f786476cad3b7b4434b44576	hibernating	perl5	bob	\N	\N	0	1	2016-03-08 12:41:11	2016-03-08 12:41:11	73	{"bob.pm":"package Bob;\\n\\nuse 5.16.0;\\nuse strict;\\nuse warnings;\\n\\nsub hey($)\\n{\\n    my $saywhat=shift;\\n    print \\"saywhat=$saywhat\\\\n\\";\\n\\n    for ($saywhat) {\\n        when(/^\\\\s*$/)               { return(\\"Fine. Be that way!\\") }\\n        when(/[[:alpha:]]/ \\u0026\\u0026 uc)   { return(\\"Woah, chill out!\\") }  \\n        when(/\\\\?$/)                 { return(\\"Sure.\\") }\\n        default                     { return(\\"Whatever.\\") }\\n    };\\n}\\n\\n1;"}
112	22	ad3b2b9179cfa167dd9068a8	done	javascript	pythagorean-triplet	\N	\N	0	1	2016-03-19 21:55:36	2016-03-19 21:55:36	74	{"\\\\javascript\\\\pythagorean-triplet\\\\pythagorean-triplet.js":"/* Finds pythagorean triplets */\\r\\nvar Triplet = function(a,b,c) { this.a = a, this.b = b, this.c = c }\\r\\n\\r\\n/* Sum of the sides of a triple */\\r\\nTriplet.prototype.sum = function() { return this.a + this.b + this.c };\\r\\n\\r\\n/* Product of the sides of a triple */\\r\\nTriplet.prototype.product = function() { return this.a * this.b * this.c };\\r\\n\\r\\nTriplet.prototype.isPythagorean = function() {\\r\\n\\t/* Tests if the set of number is pythagorean */\\r\\n\\treturn (this.a*this.a) + (this.b*this.b) == (this.c*this.c);\\r\\n};\\r\\n\\r\\nTriplet.where = function(params) {\\r\\n\\t/* Finds triplets with certain characterstics */\\r\\n\\tvar triplets = [];\\r\\n\\tfor(var a = params.minFactor || 1; a \\u003c= params.maxFactor; a++) {\\r\\n\\t\\tfor(var b = a; b \\u003c= params.maxFactor; b++) {\\r\\n\\t\\t\\tfor(var c = b; c \\u003c= params. maxFactor; c++) {\\r\\n\\t\\t\\t\\tvar t = new Triplet(a,b,c);\\r\\n\\t\\t\\t\\tvar checkSums = !params.sum || (params.sum == t.sum());\\r\\n\\t\\t\\t\\tif(t.isPythagorean() \\u0026\\u0026 checkSums )\\r\\n\\t\\t\\t\\t\\ttriplets.push(t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn triplets;\\r\\n};\\r\\n\\r\\nmodule.exports = Triplet;"}
113	22	fbef702a815da4fe1b4f5921	\N	ruby	food-chain	\N	\N	0	1	2016-03-10 14:44:24	2016-03-10 14:44:24	75	{"food_chain.rb":"class FoodChain\\n  VERSION = 2\\n  PROGRESSION_STEPS = [\\n    {\\n      animal: 'fly',\\n      description: 'I don\\\\'t know why she swallowed the fly. Perhaps she\\\\'ll die.'\\n    },\\n    {\\n      animal: 'spider',\\n      description: 'It wriggled and jiggled and tickled inside her.'\\n    },\\n    {\\n      animal: 'bird',\\n      description: 'How absurd to swallow a bird!'\\n    },\\n    {\\n      animal: 'cat',\\n      description: 'Imagine that, to swallow a cat!'\\n    },\\n    {\\n      animal: 'dog',\\n      description: 'What a hog, to swallow a dog!'\\n    },\\n    {\\n      animal: 'goat',\\n      description: 'Just opened her throat and swallowed a goat!'\\n    },\\n    {\\n      animal: 'cow',\\n      description: 'I don\\\\'t know how she swallowed a cow!'\\n    },\\n    {\\n      animal: 'horse',\\n      description: 'She\\\\'s dead, of course!'\\n    }\\n  ]\\n\\n  class \\u003c\\u003c self\\n    def song\\n      song = ''\\n\\n      PROGRESSION_STEPS.length.times do |verse_number|\\n        song \\u003c\\u003c \\"\\\\n\\" unless song == ''\\n        song \\u003c\\u003c verse(verse_number)\\n      end\\n\\n      song\\n    end\\n\\n    def verse(n)\\n      verse = the_beginning(PROGRESSION_STEPS[n])\\n      verse \\u003c\\u003c the_rest(n) if n \\u003c PROGRESSION_STEPS.length - 1\\n      verse\\n    end\\n\\n    private\\n\\n    def the_beginning(step)\\n      lines = \\"I know an old lady who swallowed a #{ step[:animal] }.\\\\n\\"\\n      lines \\u003c\\u003c \\"#{ step[:description] }\\\\n\\"\\n    end\\n\\n    def the_rest(n)\\n      lines = ''\\n\\n      PROGRESSION_STEPS[0..n].reverse.each_cons(2) do |effect, cause|\\n        lines \\u003c\\u003c middle_lines(effect, cause)\\n      end\\n\\n      lines \\u003c\\u003c the_last_line if n \\u003e 0\\n      lines\\n    end\\n\\n    def middle_lines(effect, cause)\\n      lines = \\"She swallowed the #{ effect[:animal] } to catch the #{ cause[:animal] }\\"\\n\\n      lines \\u003c\\u003c\\n        if cause == PROGRESSION_STEPS[1]\\n          \\" #{ cause[:description].gsub(/^\\\\w+/, 'that') }\\"\\n        else\\n          '.'\\n        end\\n\\n      lines \\u003c\\u003c \\"\\\\n\\"\\n    end\\n\\n    def the_last_line\\n      \\"#{ PROGRESSION_STEPS[0][:description] }\\\\n\\"\\n    end\\n  end\\nend"}
114	22	5a44f6d3fe8314e2d3ecad10	pending	haskell	accumulate	\N	\N	0	1	2016-02-19 16:07:35	2016-02-19 16:07:35	76	{"Accumulate.hs":"module Accumulate where\\n\\n\\n\\naccumulate :: (a -\\u003e b) -\\u003e [a] -\\u003e [b]\\naccumulate _ [] = []\\naccumulate f (x:xs) = f x : accumulate f xs"}
115	22	40d9d7aea3a199427a9cb6f6	pending	haskell	accumulate	\N	\N	0	2	2016-03-09 01:51:50	2016-03-09 01:51:50	76	{"Accumulate.hs":"module Accumulate where\\n\\n\\ntype T a b = (a -\\u003e b)\\n\\n\\ntype AccumulativeTransform c a b = (T a b -\\u003e c a -\\u003e c b)\\n\\n\\nclass Accumulatable c where\\n    accumulate :: AccumulativeTransform c a b\\n\\n\\ninstance Accumulatable [] where\\n    accumulate = accumulateList\\n\\n\\naccumulateList :: AccumulativeTransform [] a b\\naccumulateList _ [] = []\\naccumulateList f (x:xs) = f x : accumulate f xs"}
116	22	be6e99f016d44996f8c84c4a	done	rust	anagram	\N	\N	0	4	2016-02-19 13:55:50	2016-02-19 13:55:50	77	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = sorted_lowercase(s); // : String\\n    let lowercase_s = lowercase(s);          // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = sorted_lowercase(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\n/// lower case the unicode string\\nfn lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, false)\\n}\\n\\n/// lower case and sort the unicode string\\nfn sorted_lowercase(s:\\u0026str) -\\u003e String {\\n    _to_sorted_lowercase(s, true)\\n}\\n\\n/// lower case and optionally sort the string\\nfn _to_sorted_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
117	22	61bb66c4b4649507b3a5dc28	superseded	rust	anagram	\N	\N	0	2	2016-03-10 05:03:17	2016-03-10 05:03:17	77	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = lc_sorted_str(s); // : String\\n    let lowercase_s = to_lowercase(s); // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    // lower case the string and then sort.\\n\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n    let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()\\n                                             .next()\\n                                             .expect(\\"should be char\\")).into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\nfn to_lowercase(instr: \\u0026str) -\\u003e String {\\n    // copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n    instr.chars().map(|c| c.to_lowercase()\\n                      .next()\\n                      .expect(\\"Should be char\\"))\\n        .collect::\\u003cString\\u003e()\\n}"}
125	28	a076202191c00e5c12229f87	superseded	python	bob	\N	\N	0	1	2016-03-04 12:12:40	2016-03-04 12:12:40	82	{"bob.py":"# -*- coding: utf-8 -*-\\n\\ndef hey(sentence):\\n    \\"\\"\\"\\n    Returns what Bob answer\\n    \\"\\"\\"\\n    if sentence.upper() == sentence and any(s.isalpha() for s in sentence):\\n        answer = 'Woah, chill out!'\\n    elif sentence[-1:] == \\"?\\":\\n        answer = 'Sure.'\\n    elif not sentence.strip():\\n        answer = 'Fine. Be that way!'\\n    else:\\n        answer = 'Whatever.'\\n    return answer"}
126	28	e61120406c0c9d23727435e5	superseded	python	bob	\N	\N	0	2	2016-03-05 15:14:40	2016-03-05 15:14:40	82	{"bob.py":"# -*- coding: utf-8 -*-\\n\\ndef hey(sentence):\\n    \\"\\"\\"\\n    Returns what Bob answer\\n    \\"\\"\\"\\n    if not sentence.strip():\\n        answer = 'Fine. Be that way!'\\n    elif sentence.isupper():\\n        answer = 'Woah, chill out!'\\n    elif sentence[-1:] == \\"?\\":\\n        answer = 'Sure.'\\n    else:\\n        answer = 'Whatever.'\\n    return answer"}
127	28	451236f5cbd56b1655885128	\N	javascript	leap	\N	\N	0	1	2016-03-03 13:13:36	2016-03-03 13:13:36	83	{"leap.js":"function Year(year) {\\n  this.year = year;\\n}\\n\\nYear.prototype.isLeap = function() {\\n  if(this.year % 400 == 0) return true;\\n  if(this.year % 100 == 0) return false;\\n  return this.year % 4 == 0;\\n};\\n\\nmodule.exports = Year;"}
118	22	c743e7d450ce80ce74b03027	superseded	rust	anagram	\N	\N	0	3	2016-03-18 15:36:58	2016-03-18 15:36:58	77	{"src/lib.rs":"pub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string = to_lowercase(s, true); // : String\\n    let lowercase_s = to_lowercase(s, false);  // : String\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = to_lowercase(\\u0026anagram, true);\\n        if sorted_string == sorted_anagram {\\n            if lowercase_s != to_lowercase(\\u0026anagram, false) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    answers\\n}\\n\\nfn to_lowercase(s: \\u0026str, sort: bool) -\\u003e String {\\n    //! lower case and optionally sort the string\\n    // to_lowercase is unstable on Strings/collections, so manually\\n    // unpack the string to chars and lowercase each char\\n    //   str -\\u003e chars -\\u003e lowercase (collapse iterator of Some)\\n    //       -\\u003e into_iter -\\u003e collect to Vec\\u003cchar\\u003e.\\n\\n    // to_lowercase returns an iterator of valid lowercase characters,\\n    // we choose the first one with next()\\n    // initially copied from jhod0 on exercism.io\\n    // http://exercism.io/submissions/dcf0f37018d7470db5a5aab54ed04563\\n\\n    // map string to a collection of lowercase chars\\n    let lc_char_map = s.chars().map(|c| c.to_lowercase()\\n                                    .next()\\n                                    .expect(\\"should be char\\"));\\n    // -\\u003e core::iter::Map\\u003ccore::str::Chars\\u003c_\\u003e\\n\\n    // sort if necessary\\n    let lc_string: String = if sort {\\n        let mut chars: Vec\\u003cchar\\u003e = lc_char_map.into_iter().collect();\\n        chars.sort();  // sort works in-place on mutable vec\\n        chars.into_iter().collect()\\n    } else {\\n        lc_char_map.collect::\\u003cString\\u003e()\\n    };\\n    lc_string\\n}"}
119	22	fa480215b730697e71a87668	superseded	rust	anagram	\N	\N	0	1	2016-03-24 04:44:52	2016-03-24 04:44:52	77	{"src/lib.rs":"use std::ascii::AsciiExt;\\n\\n//fn remove_spaces(input: \\u0026str) -\\u003e String {\\n//   let mut buf = String::with_capacity(input.len());\\n//   for c in input.chars() {\\n//     buf.push(c);\\n//   }\\n//   buf\\n//}\\n\\npub fn lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n    chars.sort();  // sort works in-place on mutable vec\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn unicode_lc_sorted_str(s: \\u0026str) -\\u003e String {\\n    //let foo = s.chars().into_iter().collect();\\n    let lower_case_s = s.to_ascii_lowercase();\\n    let mut chars: Vec\\u003cchar\\u003e = lower_case_s.chars().into_iter().collect();\\n//    let mut chars: Vec\\u003cchar\\u003e = s.chars().into_iter().collect();\\n    //let mut chars: Vec\\u003cchar\\u003e = s.chars().map(|c| c.to_lowercase()).collect();\\n//    let mut chars = lower_case_s.chars();\\n    chars.sort();\\n//    let lc: String = chars.map(|c| c.to_lowercase()).collect();\\n    let lc_sorted_string: String = chars.into_iter().collect();\\n    lc_sorted_string\\n}\\n\\npub fn anagrams_for(s: \\u0026str, anagrams: \\u0026[\\u0026str]) -\\u003e Vec\\u003cString\\u003e {\\n    let sorted_string: String = lc_sorted_str(s);\\n    let s_string = s.to_string();\\n    let mut answers = Vec::new();\\n    for anagram in anagrams {\\n        let sorted_anagram = lc_sorted_str(\\u0026anagram);\\n        if sorted_string == sorted_anagram {\\n            if s_string.ne(anagram) {\\n                answers.push(anagram.to_string()) }}\\n    }\\n    return answers;\\n}"}
120	22	4dfddee0d31ef68949dce440	pending	java	nucleotide-count	\N	\N	0	1	2016-03-19 08:49:14	2016-03-19 08:49:14	78	{"/java/nucleotide-count/src/main/java/DNA.java":"import java.util.Map;\\nimport java.util.HashMap;\\n\\npublic class DNA {\\n    private String dna;\\n    private Map\\u003cCharacter, Integer\\u003e nucleotides = new HashMap\\u003cCharacter, Integer\\u003e();\\n\\n    public DNA(String dna) {\\n        this.dna = dna;\\n        countNucleotides();\\n    }\\n\\n    public void countNucleotides() {\\n        nucleotides.put('A', 0);\\n        nucleotides.put('C', 0);\\n        nucleotides.put('G', 0);\\n        nucleotides.put('T', 0);\\n\\n        for (int i = 0; i \\u003c dna.length(); i++) {\\n            char current = dna.charAt(i);\\n            nucleotides.put(current, nucleotides.get(current)+1);\\n        }\\n    }\\n\\n    public int count(char nucleotide) {\\n        if (!\\"ACGT\\".contains(Character.toString(nucleotide)))\\n        \\tthrow new IllegalArgumentException();\\n\\n        return nucleotides.get(nucleotide);\\n    }\\n\\n    public Map\\u003cCharacter, Integer\\u003e nucleotideCounts() {\\n        return nucleotides;\\n    }\\n\\n\\n}"}
121	22	954fdb9361f114af4d7df5a8	pending	clojure	rna-transcription	\N	\N	0	1	2016-03-22 16:39:45	2016-03-22 16:39:45	79	{"rna_transcription.clj":"(ns rna-transcription\\n  (:require [clojure.string :as str])\\n  )\\n\\n(def trans-hash (hash-map\\n  \\"C\\" \\"G\\",\\n  \\"A\\" \\"U\\",\\n  \\"G\\" \\"C\\",\\n  \\"T\\" \\"A\\")\\n  )\\n\\n(defn to-rna \\n  ([string]\\n   (def string-chars (str/split string #\\"\\"))\\n   (to-rna (first string-chars) (rest string-chars) \\"\\")) \\n  ([head tail result] \\n    (cond \\n      (= head nil) result\\n      :else (do \\n              (def liter (trans-hash head)) \\n              (assert liter)\\n              (to-rna (first tail) (rest tail) (str result liter))\\n            )\\n    )\\n  )\\n)"}
122	22	8af4f5a38795231da48eeaf8	done	python	bob	\N	\N	0	1	2016-02-28 19:27:36	2016-02-28 19:27:36	80	{"bob.py":"# This is bob\\n# First check if blank or empty\\n# Elif all of the letters are caps its yelling\\n# elif ends in question mark is question\\n# else whatever\\n\\n\\n\\ndef check_yelling(string):\\n    return string.isupper() \\n\\ndef check_question(string):\\n    return string[len(string) - 1] == \\"?\\"\\n\\ndef check_empty(string):\\n    if len(string) == 0:\\n\\treturn True\\n    else:\\n\\treturn string.isspace()\\n\\ndef hey(string):\\n    if check_empty(string):\\n        return \\"Fine. Be that way!\\"\\n    if check_yelling(string):\\n\\treturn \\"Whoa, chill out!\\"\\n    if check_question(string):\\n\\treturn \\"Sure.\\"\\n    else:\\n        return \\"Whatever.\\""}
123	28	e33964fb5efc11ffa2ff5ddd	pending	ruby	nth-prime	\N	\N	0	1	2016-03-05 05:53:54	2016-03-05 05:53:54	81	{"prime.rb":"require 'set'\\n\\nmodule Prime\\n\\n  def self.nth(n)\\n    PrimeSieve.new(upper_bound(n)).drop(n-1).first\\n  end\\n\\n  def self.upper_bound(n)\\n    return 20 if n \\u003c= 6\\n    n * (Math.log(n) + Math.log(Math.log(n)))\\n  end\\n\\n  class PrimeSieve\\n    include Enumerable\\n\\n    def initialize(max)\\n      @max = max\\n    end\\n\\n    def each\\n      yield 2\\n\\n      odd_composites = Set.new\\n      (3..@max).step(2) do |n|\\n        if !odd_composites.include?(n)\\n          yield n\\n          (n**2..@max).step(n) do |i|\\n            odd_composites \\u003c\\u003c i\\n          end\\n        end\\n      end\\n    end\\n  end\\nend"}
124	28	496e70a14687ebda31deede1	done	python	bob	\N	\N	0	3	2016-03-02 04:42:40	2016-03-02 04:42:40	82	{"bob.py":"# -*- coding: utf-8 -*-\\n\\ndef hey(sentence):\\n    \\"\\"\\"\\n    Returns what Bob answer\\n    \\"\\"\\"\\n    if not sentence.strip():\\n        answer = 'Fine. Be that way!'\\n    elif sentence.isupper():\\n        answer = 'Woah, chill out!'\\n    elif sentence.endswith(\\"?\\"):\\n        answer = 'Sure.'\\n    else:\\n        answer = 'Whatever.'\\n    return answer"}
128	29	da09ab9a7a0de16e4d094886	pending	csharp	bob	\N	\N	0	1	2015-08-01 06:34:39	2015-08-01 06:34:39	84	{"Bob.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\npublic static class Bob\\r\\n{\\r\\n    private static IResponder _firstResponder;\\r\\n\\r\\n    static Bob()\\r\\n    {\\r\\n        // Yelling supercedes questions in response priority, so it must be first (or at least before QuestionResponder)\\r\\n        _firstResponder = new YellResponder();\\r\\n        _firstResponder\\r\\n            .SetNext(new QuestionResponder())\\r\\n            .SetNext(new SilenceResponder())\\r\\n            .SetNext(new DefaultResponder());\\r\\n    }\\r\\n\\r\\n    public static string Hey(string statement)\\r\\n    {\\r\\n        return _firstResponder.ProcessStatement(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic interface IResponder\\r\\n{\\r\\n    string Response { get; }\\r\\n    string ProcessStatement(string statement);\\r\\n    IResponder SetNext(IResponder next);\\r\\n}\\r\\n\\r\\npublic abstract class ResponderBase : IResponder\\r\\n{\\r\\n    private IResponder _next = null;\\r\\n\\r\\n    public abstract string Response { get; }\\r\\n\\r\\n    public string ProcessStatement(string statement)\\r\\n    {\\r\\n        if (IsValidForStatement(statement))\\r\\n        {\\r\\n            return Response;\\r\\n        }\\r\\n        else if (_next != null)\\r\\n        {\\r\\n            return _next.ProcessStatement(statement);\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n\\r\\n    public abstract bool IsValidForStatement(string statement);\\r\\n\\r\\n    public IResponder SetNext(IResponder next)\\r\\n    {\\r\\n        _next = next;\\r\\n\\r\\n        return next;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class YellResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whoa, chill out!\\";\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.IsAllCaps();\\r\\n    }\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get\\r\\n        {\\r\\n            return _response;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class QuestionResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Sure.\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return statement.Trim().EndsWith(\\"?\\");\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class SilenceResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Fine. Be that way!\\";\\r\\n\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return string.IsNullOrWhiteSpace(statement);\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class DefaultResponder : ResponderBase\\r\\n{\\r\\n    private const string _response = \\"Whatever.\\";\\r\\n    public override string Response\\r\\n    {\\r\\n        get { return _response; }\\r\\n    }\\r\\n\\r\\n    public override bool IsValidForStatement(string statement)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\npublic static class StringExtensions\\r\\n{\\r\\n    public static bool IsAllCaps (this string value) \\r\\n    {\\r\\n        return value.Any(char.IsUpper) \\r\\n            \\u0026\\u0026 value.All(c =\\u003e !char.IsLetter(c) || char.IsUpper(c));\\r\\n    }\\r\\n}"}
129	29	aafcf83cf8065f1e2f8158a0	superseded	haskell	gigasecond	\N	\N	0	1	2015-12-16 08:49:57	2015-12-16 08:49:57	85	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime (10^9) $ UTCTime d 0"}
130	29	6357b4979bc7d8083f5f3894	done	haskell	gigasecond	\N	\N	0	2	2016-01-03 16:44:23	2016-01-03 16:44:23	85	{"Gigasecond.hs":"module Gigasecond (fromDay) where\\n\\nimport Data.Time\\n\\ngigasecond = 10^9 :: NominalDiffTime\\n\\nfromDay :: Day -\\u003e Day\\nfromDay d = utctDay . addUTCTime gigasecond $ UTCTime d 0"}
131	29	dd7e6067501200a4f71ed666	pending	python	word-count	\N	\N	0	1	2015-08-05 04:28:44	2015-08-05 04:28:44	86	{"wordcount.py":"### Word Count Submission File ###\\n\\ndef word_count(sentence):\\n\\twordcount = {}\\n\\tfor word in sentence.split():\\n\\t\\tif word not in wordcount:\\n\\t\\t\\twordcount[word] = 1\\n\\t\\telse:\\n\\t\\t\\twordcount[word] += 1\\n\\n\\treturn wordcount"}
132	29	efdf7953c5ed70f02f612e1e	pending	ruby	robot-name	\N	\N	0	1	2015-10-22 22:17:22	2015-10-22 22:17:22	87	{"robot.rb":"class Robot\\n  WORD_CHARS = [0..9, 'a'..'z', ['_']].map(\\u0026:to_a).flatten\\n\\n  attr_reader :name\\n\\n  def initialize\\n    reset\\n  end\\n\\n  def reset\\n    @name = generate_name\\n  end\\n\\n  private\\n\\n  def random_word_chars\\n    WORD_CHARS.sample(2).join\\n  end\\n\\n  def random_number_code\\n    rand(100...1000).to_s\\n  end\\n\\n  def generate_name\\n    random_word_chars + random_number_code\\n  end\\nend"}
133	29	980cb4377061f7915f6e5faf	\N	python	difference-of-squares	\N	\N	0	1	2015-10-10 14:04:49	2015-10-10 14:04:49	88	{"diffsquare.py":"n= int(input(\\"enter n value: \\"))\\ndef sum_of_squares(n):\\n    return sum([i**2 for i in range(1, n+1)])\\n\\ndef square_of_sum(n):\\n    return sum(range(1, n+1)) ** 2\\n\\nprint square_of_sum(n) - sum_of_squares(n)"}
134	29	cf0e8500779e2b9437d489b1	pending	python	accumulate	\N	\N	0	1	2015-10-16 21:14:55	2015-10-16 21:14:55	89	{"accumulate.py":"def accumulate(iterable, func):\\n    return [func(x) for x in iterable]"}
135	29	e90a3c9fd3eb423f43037110	done	csharp	word-count	\N	\N	0	1	2015-07-20 20:06:06	2015-07-20 20:06:06	90	{"WordCount.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\npublic class Phrase\\r\\n{\\r\\n    protected string Sentence { set; get; }\\r\\n\\r\\n    public Phrase(string text)\\r\\n    {\\r\\n        Sentence = text;\\r\\n    }\\r\\n\\r\\n    public Dictionary\\u003cstring, int\\u003e WordCount()\\r\\n    {\\r\\n        //Split using regex split when not alphanumeric / apostrophe. Delete empty strings resulting from the split. Lowercase all. Group by same words, then count. Cast into dictionary.\\r\\n        return Regex.Split(Sentence, @\\"[^a-zA-Z0-9']\\").Where(Q =\\u003e !string.IsNullOrEmpty(Q)).Select(Q =\\u003e Q.ToLower()).GroupBy(Q =\\u003e Q).Select(\\r\\n            Q =\\u003e new {\\r\\n                Key = Q.FirstOrDefault(),\\r\\n                Value = Q.Count()\\r\\n            }).ToDictionary(Q =\\u003e Q.Key, Q =\\u003e Q.Value);\\r\\n    }\\r\\n}"}
136	29	30ade0ccdded9fbcff8f3d45	\N	ruby	difference-of-squares	\N	\N	0	1	2015-11-02 12:25:16	2015-11-02 12:25:16	91	{"difference_of_squares.rb":"class Squares\\n  VERSION = 1\\n  \\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..@num).map {|n| n ** 2}.reduce(:+)\\n  end\\n\\n  def square_of_sums\\n    (@num * (@num+1)/2) ** 2\\n  end\\nend"}
137	29	c99182b7e3c1edf8f246ee06	\N	ruby	difference-of-squares	\N	\N	0	2	2015-12-22 03:31:26	2015-12-22 03:31:26	91	{"difference_of_squares.rb":"class Squares\\n  VERSION = 1\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  def sum_of_squares\\n    (1..@num).reduce {|sum,n| sum + n ** 2}\\n  end\\n\\n  def square_of_sums\\n    (@num * (@num+1)/2) ** 2\\n  end\\nend"}
138	29	ff2075ac6b42b53a91053734	\N	perl5	bob	\N	\N	0	1	2016-03-10 09:43:02	2016-03-10 09:43:02	92	{"/perl5/bob/Bob.pm":"#\\n# This is a SKELETON file and has been provided to enable you to get working on the\\n# first exercise more quickly.\\n#\\n\\nuse 5.006;\\nuse strict;\\nuse warnings;\\n\\npackage Bob;\\n\\nour $VERSION = '1.000';\\n\\nuse Exporter 5.57 qw(import);\\n\\nour @EXPORT_OK = qw(hey);\\n\\nsub hey {\\n    my $sequence = $_[0];\\n    my $copy = \\"$sequence\\";\\n    return \\"Whoa, chill out!\\" if ($copy =~ s/[\\\\W0-9_]*//g and $copy =~ m/^\\\\p{Uppercase}+$/);\\n    return \\"Sure.\\" if ($sequence =~ m/\\\\?$/);\\n    return \\"Fine. Be that way!\\" if ($sequence =~ s/\\\\S+//g eq \\"\\");\\n    return \\"Whatever.\\";\\n}\\n\\n1;"}
139	29	71e9ee9abc5b7b24583f856b	\N	ruby	leap	\N	\N	0	1	2016-02-09 21:20:22	2016-02-09 21:20:22	93	{"leap.rb":"module Year\\n  module_function\\n\\n  def leap?(year)\\n    year % 4 == 0 \\u0026\\u0026 (year % 100 != 0 || year % 400 == 0)\\n  end\\nend"}
140	29	cc3c15f4f3c99df3ed022f80	superseded	python	bob	\N	\N	0	1	2015-09-09 04:44:37	2015-09-09 04:44:37	94	{"/python/bob/bob.py":"# -*- coding: utf-8 -*-\\n# Skeleton file for the Python \\"Bob\\" exercise.\\n#\\ndef hey(what):\\n    msg = what.encode('utf-8')\\n    response = str()\\n    if len(msg.lstrip().rstrip()) == 0:\\n        response = 'Fine. Be that way!'\\n    elif \\"ä\\" in msg:\\n        response = 'Whatever.'\\n    elif msg.isupper():\\n        response = 'Whoa, chill out!'\\n        \\n    elif msg.rstrip().endswith('?'):\\n        response = 'Sure.'\\n    else:\\n        response = 'Whatever.'\\n    return response"}
141	29	2debc2939d36bb1301688d71	superseded	python	bob	\N	\N	0	2	2015-10-29 20:33:23	2015-10-29 20:33:23	94	{"/python/bob/bob.py":"# -*- coding: utf-8 -*-\\n# \\"Bob's lackadaisical responses.\\n#\\ndef hey(what):\\n    msg = what.encode('utf-8')\\n    msg = msg.strip()\\n    response = 'Whatever.'\\n    #No answer\\n    if being_slient(msg):\\n        response = 'Fine. Be that way!'\\n    #being calm and with umlauts\\n    elif being_calm_and_with_umlants(msg):\\n        response = 'Whatever.'\\n    #Being shout\\n    elif being_shouted(msg):\\n        response = 'Whoa, chill out!'\\n    #Being question    \\n    elif being_questioned(msg):\\n        response = 'Sure.'\\n    return response\\n#not necessary but reserving a method for strings with umlants\\ndef being_calm_and_with_umlants(msg):\\n    return \\"ä\\" in msg\\ndef being_slient(msg):\\n    return len(msg) == 0\\ndef being_shouted(msg):\\n    return msg.isupper()\\ndef being_questioned(msg):\\n    return msg.endswith('?')"}
142	29	82b6ffa4365696ac349133b0	superseded	python	bob	\N	\N	0	3	2016-01-02 05:54:31	2016-01-02 05:54:31	94	{"/python/bob/bob.py":"# -*- coding: utf-8 -*-\\n# \\"Bob's lackadaisical responses.\\n# Version 3:\\n# Changes:\\n# - Making this code as expressive as I can\\n# - Use \\"if not msg\\" to evaluate empty string \\n#\\ndef hey(what):\\n    msg = what.encode('utf-8')\\n    msg = msg.strip()\\n    #No answer\\n    if being_slient(msg):\\n    #if being_slient(msg):\\n        response = 'Fine. Be that way!'\\n    #being calm and with umlauts\\n    elif being_calm_and_with_umlants(msg):\\n        response = 'Whatever.'\\n    #Being shout\\n    elif being_shouted(msg):\\n        response = 'Whoa, chill out!'\\n    #Being question    \\n    elif being_questioned(msg):\\n        response = 'Sure.'\\n    else:\\n        response = 'Whatever.'\\n    return response\\n#not necessary but reserving a method for strings with umlants\\ndef being_calm_and_with_umlants(msg):\\n    return \\"ä\\" in msg\\ndef being_slient(msg):\\n    return not msg\\ndef being_shouted(msg):\\n    return msg.isupper()\\ndef being_questioned(msg):\\n    return msg.endswith('?')"}
143	29	3605dd7fd558672b14188669	pending	python	bob	\N	\N	0	4	2016-01-11 19:57:36	2016-01-11 19:57:36	94	{"/python/bob/bob.py":"# -*- coding: utf-8 -*-\\n# \\"Bob's lackadaisical responses.\\n#\\ndef hey(what):\\n    msg = what.strip()\\n    if being_slient(msg):\\n        response = 'Fine. Be that way!'\\n    elif being_shouted(msg):\\n        response = 'Whoa, chill out!'\\n    elif being_questioned(msg):\\n        response = 'Sure.'\\n    else:\\n        response = 'Whatever.'\\n    return response\\n\\ndef being_slient(msg):\\n    return not msg\\ndef being_shouted(msg):\\n    return msg.isupper()\\ndef being_questioned(msg):\\n    return msg.endswith('?')"}
144	29	3e519f6145c8109f38e4b4de	\N	coffeescript	hello-world	\N	\N	0	1	2015-09-08 14:54:46	2015-09-08 14:54:46	95	{"hello_world.coffee":"class HelloWorld\\n\\thello: (name = '') -\\u003e\\n\\t\\tif name == '' then 'Hello, World!' else \\"Hello, #{name}!\\"\\n\\nmodule.exports = HelloWorld"}
145	29	f2374494148166997a69f969	\N	php	difference-of-squares	\N	\N	0	1	2015-09-25 02:38:36	2015-09-25 02:38:36	96	{"difference-of-squares.php":"\\u003c?php\\n\\nfunction sumOfSquares(int $to)\\n{\\n  return array_reduce(range(1, $to), function ($c, int $i) {\\n    return $c + pow($i, 2);\\n  });\\n}\\n\\nfunction squareOfSums(int $to)\\n{\\n  return pow(array_sum(range(1, $to)), 2);\\n}\\n\\nfunction difference(int $to)\\n{\\n  return squareOfSums($to) - sumOfSquares($to);\\n}"}
146	29	f00391267a2535db0051be1c	hibernating	erlang	trinary	\N	\N	0	1	2016-01-09 12:39:15	2016-01-09 12:39:15	97	{"/erlang/trinary/trinary.erl":"-module(trinary).\\n-export([to_decimal/1]).\\n\\nto_decimal(Str)-\\u003e\\n    to_decimal(lists:reverse(Str), 1, 0).\\n\\nto_decimal([], _Base, Accu) -\\u003e Accu;\\nto_decimal([H|T], Base, Accu) -\\u003e\\n    case is_trinary_digit(H) of\\n\\tfalse -\\u003e 0; \\n\\ttrue  -\\u003e \\n\\t    {H1, _} = string:to_integer([H]),\\n\\t    %% io:format(\\"Base:~p, H1:~p~n\\", [Base, H1]),\\n\\t    DigitCtrbt = Base*H1,\\n\\t    to_decimal(T, Base*3, Accu + DigitCtrbt)\\n    end.\\n\\nis_trinary_digit(D) -\\u003e\\t    \\n    (D \\u003e= $0) and (D =\\u003c $2)."}
147	29	dee2bdcd9582d1a99d77850f	\N	javascript	raindrops	\N	\N	0	1	2015-11-23 02:22:34	2015-11-23 02:22:34	98	{"raindrops.js":"function Raindrops() {\\n  'use strict';\\n}\\n\\nRaindrops.prototype.convert = function(num) {\\n  switch (true) {\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlangPlong';\\n    case num % 3 === 0 \\u0026\\u0026 num % 5 === 0:\\n      return 'PlingPlang';\\n    case num % 3 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlingPlong';\\n    case num % 5 === 0 \\u0026\\u0026 num % 7 === 0:\\n      return 'PlangPlong';\\n    case num % 3 === 0:\\n      return 'Pling';\\n    case num % 5 === 0:\\n      return 'Plang';\\n    case num % 7 === 0:\\n      return 'Plong';\\n    default:\\n      return num.toString();\\n  }\\n};\\n\\nmodule.exports = Raindrops;"}
148	29	413f96c28dcf7fb06274ef2b	\N	ruby	roman-numerals	\N	\N	0	1	2015-10-14 05:14:10	2015-10-14 05:14:10	99	{"roman_numerals.rb":"class Fixnum\\n\\n  VERSION = 1\\n\\n  ONES = [nil, 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX']\\n  TENS = [nil, 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC']\\n  HUNS = [nil, 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM']\\n  THOS = [nil, 'M', 'MM', 'MMM']\\n  MAP  = [THOS, HUNS, TENS, ONES]\\n\\n  def to_roman\\n    ('%04d' % self).chars.each_with_index.map { |c, i| MAP[i][c.to_i] }.reject { |r| r.nil? }.join\\n  end\\n\\nend"}
149	29	5fc740e442a98db1821e6e7b	\N	csharp	hamming	\N	\N	0	1	2015-11-13 18:28:43	2015-11-13 18:28:43	100	{"Hamming.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nclass Hamming\\r\\n{\\r\\n    public static int Compute(string left, string right)\\r\\n    {\\r\\n        if (left == right)\\r\\n        {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        int distance = 0;\\r\\n        for (int i = 0; i \\u003c left.Length; i++) {\\r\\n            if (left[i] != right[i]) {\\r\\n                distance++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return distance;\\r\\n    }\\r\\n}"}
150	29	83dbbe8801ac93c5f723e926	pending	clojure	word-count	\N	\N	0	1	2015-07-24 06:59:56	2015-07-24 06:59:56	101	{"word_count.clj":"(ns word-count (require [clojure.string :as str]))\\r\\n\\r\\n(defn to-lower [s]\\r\\n\\t(str/lower-case s))\\r\\n\\r\\n(defn clean [s]\\r\\n\\t(str/replace s #\\"[^a-z0-9 ]\\"  \\"\\"))\\r\\n\\t\\r\\n(defn trim [s]\\r\\n\\t(str/replace s #\\"  \\"  \\" \\"))\\r\\n\\t\\r\\n(defn split [s]\\r\\n\\t(str/split s #\\" \\"))\\r\\n\\t\\t\\r\\n(defn word-count [s]\\r\\n\\t(frequencies (sort (split (trim (clean (to-lower s)))))))"}
151	29	cf3c3be74cdb9eddead7bfc6	done	ruby	beer-song	\N	\N	0	5	2015-07-19 10:59:00	2015-07-19 10:59:00	102	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
152	29	390fcb5a9427e6c1f7e43538	superseded	ruby	beer-song	\N	\N	0	4	2015-08-12 04:44:33	2015-08-12 04:44:33	102	{"beer-song.rb":"class Beer\\n  module Countable\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def singular?\\n      count == 1\\n    end\\n\\n    def present?\\n      count \\u003e 0\\n    end\\n  end\\n\\n  class Numeral\\n    include Countable\\n\\n    def to_s\\n      present? ? count.to_s : 'no more'\\n    end\\n  end\\n\\n  class Pronoun\\n    include Countable\\n\\n    def to_s\\n      singular? ? 'it' : 'one'\\n    end\\n  end\\n\\n  class QuantifiedBeer\\n    attr :numeral\\n\\n    def initialize(count)\\n      @numeral = Numeral.new(count)\\n    end\\n\\n    def to_s\\n      \\"#{numeral} #{quantifier} of beer\\"\\n    end\\n\\n    def quantifier\\n      singular? ? 'bottle' : 'bottles'\\n    end\\n\\n    private\\n\\n    def singular?\\n      numeral.singular?\\n    end\\n  end\\n\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def build\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      build.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def beer\\n      QuantifiedBeer.new(count)\\n    end\\n  end\\n\\n  class FirstLine \\u003c Line\\n    def build\\n      \\"#{beer} on the wall, #{beer}.\\"\\n    end\\n  end\\n\\n  class SecondLine \\u003c Line\\n    def build\\n      \\"#{take_one_or_buy_more}, #{beer} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      pronoun = Pronoun.new(count)\\n      self.count -= 1\\n\\n      \\"Take #{pronoun} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse\\n    RHYME_PATTERN = %i(a b)\\n\\n    attr :count\\n\\n    def initialize(count)\\n      @count = count\\n    end\\n\\n    def to_s\\n      RHYME_PATTERN.map { |unit| self.send(unit) }.join\\n    end\\n\\n    def a\\n      FirstLine.new(count)\\n    end\\n\\n    def b\\n      SecondLine.new(count)\\n    end\\n  end\\n\\n  class Song\\n    BREAK = \\"\\\\n\\"\\n\\n    attr :start, :finish\\n\\n    def initialize(start, finish)\\n      @start, @finish = start, finish\\n    end\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
153	29	d57f905d47a4270fd27a8c3c	superseded	ruby	beer-song	\N	\N	0	1	2015-10-23 04:58:59	2015-10-23 04:58:59	102	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def to_s\\n      [a, b].join\\n    end\\n\\n    private\\n\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.join\\n    end\\n\\n    def verses\\n      count_down { |count| [Verse.new(count), BREAK].join }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
154	29	c5db4c084da9e1c9fad33981	superseded	ruby	beer-song	\N	\N	0	2	2015-11-09 03:19:50	2015-11-09 03:19:50	102	{"beer-song.rb":"class Beer\\n  class Line \\u003c Struct.new(:count)\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  class Verse \\u003c Struct.new(:count)\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  class Song \\u003c Struct.new(:start, :finish)\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
155	29	7e51dcf31ae62f4d90fdadec	superseded	ruby	beer-song	\N	\N	0	3	2015-12-23 04:11:43	2015-12-23 04:11:43	102	{"beer-song.rb":"class Beer\\n  Line = Struct.new(:count) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def text\\n      raise NotImplementedError\\n    end\\n\\n    def to_s\\n      text.capitalize.concat(BREAK)\\n    end\\n\\n    private\\n\\n    def bottles\\n      if count \\u003e 1\\n        \\"#{count} bottles of beer\\"\\n      elsif count == 1\\n        '1 bottle of beer'\\n      else\\n        'no more bottles of beer'\\n      end\\n    end\\n  end\\n\\n  class A \\u003c Line\\n    def text\\n      \\"#{bottles} on the wall, #{bottles}.\\"\\n    end\\n  end\\n\\n  class B \\u003c Line\\n    def text\\n      \\"#{take_one_or_buy_more}, #{bottles} on the wall.\\"\\n    end\\n\\n    private\\n\\n    def take_one_or_buy_more\\n      count \\u003e 0 ? take_one : buy_more\\n    end\\n\\n    def take_one\\n      self.count -= 1\\n      \\"Take #{count == 0 ? 'it' : 'one'} down and pass it around\\"\\n    end\\n\\n    def buy_more\\n      self.count = 99\\n      'Go to the store and buy some more'\\n    end\\n  end\\n\\n\\n  Verse = Struct.new(:count) do\\n    def a\\n      A.new(count)\\n    end\\n\\n    def b\\n      B.new(count)\\n    end\\n\\n    def to_s\\n      [a, b].join\\n    end\\n  end\\n\\n  Song = Struct.new(:start, :finish) do\\n    BREAK = \\"\\\\n\\"\\n\\n    def sing\\n      verses.zip([BREAK] * verses.count).join\\n    end\\n\\n    def verses\\n      count_down { |count| Verse.new(count) }\\n    end\\n\\n    private\\n\\n    def count_down\\n      start.downto(finish).map { |count| yield count }\\n    end\\n  end\\n\\n  def sing(start, finish = 0)\\n    Song.new(start, finish).sing\\n  end\\n\\n  def verse(count)\\n    Verse.new(count).to_s\\n  end\\nend"}
156	29	1d29bf80ef561dd74d2b8762	\N	javascript	hamming	\N	\N	0	1	2015-07-17 20:40:24	2015-07-17 20:40:24	103	{"hamming.js":"var compute = function() {};\\n\\ncompute.prototype.hamming = function(array1, array2) {\\n\\n\\n\\nif(array1.length !== array2.length) {\\n\\tthrow new Error('DNA strands must be of equal length.');\\n}\\nvar counter = 0;\\n\\n\\tfor(var i = 0; i \\u003c array1.length; i++) {\\n\\t\\tif (array1[i] !== array2[i]) {\\n\\t\\t\\tcounter++;\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\n\\n\\t\\treturn counter;\\n\\n};\\n\\n\\n\\n\\nmodule.exports = compute;\\n\\n// var myHam = new hamming();\\n\\n// myHam.hamming(ar1, ar2);\\n\\n\\n\\n// if(array1.length !=== array2.length) {\\n// \\t\\t\\treturn new Error('DNA strands must be of equal length.')\\n//     \\t}"}
157	29	ae6c30370fab1b5488a742e9	\N	elixir	binary	\N	\N	0	1	2015-11-26 22:30:38	2015-11-26 22:30:38	104	{"binary.exs":"defmodule Binary do\\n  @doc \\"\\"\\"\\n  Convert a string containing a binary number to an integer.\\n\\n  On errors returns 0.\\n  \\"\\"\\"\\n  @spec to_decimal(String.t) :: non_neg_integer\\n  def to_decimal(string) do\\n    digits = string |\\u003e String.codepoints |\\u003e Enum.reverse\\n    if Enum.all?(digits, fn x -\\u003e x == \\"0\\" || x == \\"1\\" end), do: convert(digits, 0, 0), else: 0\\n  end\\n\\n  defp convert([], _power, accum) do\\n    accum\\n  end\\n\\n  defp convert([h | t], power, accum) do\\n    pow = if h == \\"0\\", do: 0, else: square(power)\\n    convert(t, power + 1, accum + pow)\\n  end\\n\\n  defp square(number) when number \\u003c 1  do\\n    1\\n  end\\n\\n  defp square(number) do\\n    2 * square(number - 1)\\n  end\\n\\nend"}
158	29	3716cd21b76d3265601180e6	\N	python	sublist	\N	\N	0	1	2015-08-20 23:09:32	2015-08-20 23:09:32	105	{"/python/sublist/sublist.py":"SUBLIST = 1\\nSUPERLIST = 2\\nEQUAL = 3\\nUNEQUAL = 4\\n\\ndef check_lists(list1, list2):\\n    l1, l2 = len(list1), len(list2)\\n    if l1 == l2:\\n        for i, x in enumerate(list1):\\n            if x != list2[i]:\\n                return UNEQUAL\\n        else:\\n            return EQUAL\\n    diff = l1 - l2\\n    if diff \\u003e 0:\\n        ret = SUPERLIST\\n    else:\\n        ret = SUBLIST\\n        list2, list1 = list1, list2\\n        l2, l1 = l1, l2\\n        diff *= -1\\n    for i in range(diff+1):\\n        for j, item in enumerate(list2):\\n            if list1[i+j] != item:\\n                break\\n        else:\\n            return ret\\n    return UNEQUAL"}
159	29	a486b180bdb11abaa3aa5ecd	\N	scala	hello-world	\N	\N	0	1	2015-07-25 06:03:50	2015-07-25 06:03:50	106	{"src\\\\main\\\\scala\\\\HelloWorld.scala":"/**\\r\\n * Created by Diablos on 31.10.2015.\\r\\n */\\r\\nobject HelloWorld {\\r\\n  def hello(name:String = \\"World\\") = s\\"Hello, $name!\\"\\r\\n}"}
160	29	ede57a960acdb836fb314e79	superseded	ruby	rna-transcription	\N	\N	0	1	2015-12-05 23:27:56	2015-12-05 23:27:56	107	{"rna_transcription.rb":"class Complement\\n    VERSION = 1.freeze\\n    def self.of_dna(strand)\\n        strand.each_char.with_index do |c, i|\\n            case c.upcase\\n                when 'G'\\n                    strand[i] = 'C'\\n                when 'C'\\n                    strand[i] = 'G'\\n                when 'T'\\n                    strand[i] = 'A'\\n                when 'A'\\n                    strand[i] = 'U'\\n                else\\n                    raise ArgumentError, \\"must consist of 'G','C','T', or 'A'\\"\\n                \\n            end\\n        end\\n        strand\\n    end\\n\\n    def self.of_rna(strand)\\n    strand.each_char.with_index do |c, i|\\n        case c.upcase\\n            when 'C'\\n                strand[i] = 'G'\\n            when 'G'\\n                strand[i] = 'C'\\n            when 'A'\\n                strand[i] = 'T'\\n            when 'U'\\n                strand[i] = 'A'\\n            else\\n                raise ArgumentError, \\"must consist of 'C','G','A', or 'U'\\"\\n        end\\n    end\\n    strand\\n    end\\nend"}
161	29	69fe000defbe571364f202db	pending	ruby	rna-transcription	\N	\N	0	2	2016-01-17 00:06:01	2016-01-17 00:06:01	107	{"rna_transcription.rb":"class Complement\\n  VERSION = 2\\n\\n  def self.of_dna(strand)\\n    strand.upcase.each_char do |nucleotide|\\n      raise ArgumentError, \\"must consist of 'G','C','T', or 'A'\\" unless nucleotide =~ /[GCTA]/\\n    end\\n    strand.upcase.gsub(/[GCTA]/, 'G' =\\u003e 'C', 'C' =\\u003e 'G', 'T' =\\u003e 'A', 'A' =\\u003e 'U')\\n  end\\n\\n  def self.of_rna(strand)\\n    strand.upcase.each_char do |nucleotide|\\n      raise ArgumentError, \\"must consist of 'C','G','A', or 'U'\\" unless nucleotide =~ /[GCAU]/\\n    end\\n    strand.upcase.gsub(/[GCAU]/, 'C' =\\u003e 'G', 'G' =\\u003e 'C', 'A' =\\u003e 'T', 'U' =\\u003e 'A')\\n  end\\n\\nend"}
162	29	ed69b5214bc6863fa5f3d9d7	pending	ruby	gigasecond	\N	\N	0	1	2016-01-12 01:53:38	2016-01-12 01:53:38	108	{"gigasecond.rb":"#kortes\\n\\nclass Gigasecond\\n  VERSION = 1\\n  def self.from(date)\\n    date + (10**9)\\n  end\\nend"}
163	29	898fa0a48e8b049d1075967c	done	haskell	crypto-square	\N	\N	0	1	2015-11-30 10:09:23	2015-11-30 10:09:23	109	{"/haskell/crypto-square/CryptoSquare.hs":"module CryptoSquare\\n( normalizePlaintext\\n, squareSize\\n, plaintextSegments\\n, ciphertext\\n, normalizeCiphertext\\n) where\\n\\nimport Data.Char\\nimport Data.List\\n\\nnormalizePlaintext :: String -\\u003e String\\nnormalizePlaintext = filter isAlphaNum . map toLower\\n\\nsquareSize :: String -\\u003e Int\\nsquareSize = ceiling . sqrt . fromIntegral . length\\n\\nplaintextSegments :: String -\\u003e [String]\\nplaintextSegments s = squareSplit (squareSize clean) clean\\n    where clean = normalizePlaintext s\\n\\nsquareSplit :: Int -\\u003e String -\\u003e [String]\\nsquareSplit _ [] = [] \\nsquareSplit n xs = first : squareSplit n rest\\n    where (first, rest) = splitAt n xs\\n\\nciphertext :: String -\\u003e String\\nciphertext = concat . transpose . plaintextSegments\\n\\nnormalizeCiphertext :: String -\\u003e String\\nnormalizeCiphertext = unwords . transpose . plaintextSegments"}
164	29	c4d29c02d50157af0d6cde07	\N	go	clock	\N	\N	0	1	2016-01-06 10:35:16	2016-01-06 10:35:16	110	{"clock.go":"package clock\\n\\nimport \\"fmt\\"\\n\\n// TestVersion is for exercism\\nconst TestVersion = 2\\n\\n// Clock is an int representing the time of day\\ntype Clock int\\n\\n// Time returns a Clock representing the given hour \\u0026 minute\\nfunc Time(hour, minute int) Clock {\\n\\treturn TimeFromMinutes(hour*60 + minute)\\n}\\n\\n// String returns a string representation of Clock\\nfunc (c Clock) String() string {\\n\\treturn fmt.Sprintf(\\"%02d:%02d\\", c/60, c%60)\\n}\\n\\n// Add adds minutes to the clock\\nfunc (c Clock) Add(minutes int) Clock {\\n\\treturn TimeFromMinutes(int(c) + minutes)\\n}\\n\\n// TimeFromMinutes takes a minutes integer value and returns a Clock\\nfunc TimeFromMinutes(minutes int) Clock {\\n\\tfor minutes \\u003c 0 {\\n\\t\\t// Keep adding 24 hours to the minutes value until it's positive\\n\\t\\tminutes = minutes + (24 * 60)\\n\\t}\\n\\tminutes = minutes % (24 * 60)\\n\\treturn Clock(minutes)\\n}"}
165	29	ca55c9c69a3100cabc4a6897	\N	elixir	hello-world	\N	\N	0	1	2015-08-30 02:52:33	2015-08-30 02:52:33	111	{"hello_world.exs":"defmodule HelloWorld do\\n  def hello(name \\\\\\\\ \\"World\\") do\\n    \\"Hello, #{name}!\\"\\n  end\\nend"}
166	29	0d72c34dd75a50ecc6ac9563	\N	scala	bob	\N	\N	0	1	2015-07-23 08:05:05	2015-07-23 08:05:05	112	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    val regexAll = \\"\\"\\"[a-zA-Z0-9]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request == \\"\\" || (request==regexAll.replaceAllIn(request, \\" \\"))) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
167	29	74ee0b27edd56c382e760d0c	\N	scala	bob	\N	\N	0	3	2015-09-02 20:44:45	2015-09-02 20:44:45	112	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  import bob._\\n  def hey(request: String): String = { request match {\\n    case silence() =\\u003e \\"Fine. Be that way!\\"\\n    case yelling() =\\u003e \\"Whoa, chill out!\\"\\n    case question() =\\u003e \\"Sure.\\"\\n    case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n}\\n\\nobject bob {\\n  val silence = \\"\\"\\"\\\\s*\\"\\"\\".r\\n  val yelling = \\"\\"\\"[^a-z]*[A-Z][^a-z]\\"\\"\\".r\\n  val question = \\"\\"\\".*[?]\\"\\"\\".r\\n}"}
168	29	caddce628149ab5605e0189e	\N	scala	bob	\N	\N	0	2	2015-12-17 14:10:28	2015-12-17 14:10:28	112	{"src/main/scala/BobPackage/bob.scala":"package BobPackage\\n\\n/**\\n * Created by britanyleigh on 10/30/15.\\n */\\nclass bob {\\n  def hey(request: String): String = {\\n    val regex = \\"\\"\\"[a-zA-Z]\\"\\"\\".r\\n    if (regex.findFirstIn(request)!=None \\u0026\\u0026 request==request.toUpperCase) \\"Whoa, chill out!\\"\\n    else if (request==request.toUpperCase \\u0026\\u0026 ((request endsWith \\"!\\") || (request endsWith \\"?\\"))) if (regex.findFirstIn(request)==None) \\"Sure.\\" else \\"Whoa, chill out!\\"\\n    else if (request endsWith \\"?\\") \\"Sure.\\"\\n    else if (request.trim.isEmpty) \\"Fine. Be that way!\\"\\n    else \\"Whatever.\\"\\n  }\\n}"}
177	29	2ac5a176b409a6797bf5ae54	superseded	haskell	difference-of-squares	\N	\N	0	1	2015-09-01 03:05:41	2015-09-01 03:05:41	116	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (sum . map square) [1..n]\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (square . sum) [1..n]\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = squareOfSums n - sumOfSquares n\\n\\nsquare :: (Integral a) =\\u003e a -\\u003e a\\nsquare x = x * x"}
178	29	3d646cfbb30fa5abcb36f445	superseded	haskell	difference-of-squares	\N	\N	0	2	2015-09-12 11:26:37	2015-09-12 11:26:37	116	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n^3 + 3 * n^2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n^4 + 2 * n^3 + n^2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n^4 + 2 * n^3 - 3 * n^2 - 2 * n) `div` 12"}
169	29	c2950e9f1b969ddf6c8d99bd	done	javascript	robot-simulator	\N	\N	0	1	2015-08-26 06:11:14	2015-08-26 06:11:14	113	{"robot-simulator.js":"var directions = ['north', 'east', 'south', 'west'],\\r\\n    numDirections = directions.length;\\r\\n\\r\\nvar command = {\\r\\n  L: \\"turnLeft\\",\\r\\n  R: \\"turnRight\\",\\r\\n  A: \\"advance\\"\\r\\n};\\r\\n\\r\\nvar Robot = function() {\\r\\n  var self = this, bearingIndex,\\r\\n      turn = function(quadrants) {\\r\\n        bearingIndex = (bearingIndex + quadrants) % numDirections;\\r\\n        return self.bearing = directions[bearingIndex];\\r\\n      };\\r\\n\\r\\n  this.orient = function(direction) {\\r\\n    bearingIndex = directions.indexOf(direction);\\r\\n    return self.bearing = direction;\\r\\n  };\\r\\n  this.turnRight = function() {\\r\\n    return turn(1);\\r\\n  };\\r\\n  this.turnLeft = function() {\\r\\n    return turn(3);\\r\\n  };\\r\\n\\r\\n  this.at = function(x, y) {\\r\\n    return self.coordinates = [x, y];\\r\\n  };\\r\\n\\r\\n  this.advance = function() {\\r\\n    var axis = (bearingIndex + 1) % 2, // north/south 1, east/west 0\\r\\n        sign = 1 - (bearingIndex \\u003e 1) * 2; // north/east +1, south/west -1\\r\\n    self.coordinates[axis] += sign;\\r\\n    return self.coordinates;\\r\\n  };\\r\\n\\r\\n  this.instructions = function(commands) {\\r\\n    return commands.match(/[ALR]/g).map(function(c) {\\r\\n      return command[c];\\r\\n    });\\r\\n  };\\r\\n\\r\\n  this.place = function(options) {\\r\\n    self.orient(options.direction);\\r\\n    return self.coordinates = [options.x, options.y];\\r\\n  };\\r\\n\\r\\n  this.evaluate = function(commands) {\\r\\n    return self.instructions(commands).map(function(c) {\\r\\n      return self[c]();\\r\\n    });\\r\\n  };\\r\\n};\\r\\n\\r\\nmodule.exports = Robot;\\r"}
170	29	68f14ebfb29b391ae960dd2d	superseded	python	hamming	\N	\N	0	1	2015-09-25 17:01:13	2015-09-25 17:01:13	114	{"hamming.py":"def distance(textOne, textTwo):\\n    count  = 0\\n    lenTwo = len(textTwo)\\n\\n    for i, c in enumerate(textOne):\\n        if lenTwo \\u003c= i or textTwo[i] != c:\\n            count += 1\\n\\n    return count + lenTwo - len(textOne)"}
171	29	ab0644c20651c1ff62de4706	needs_input	python	hamming	\N	\N	0	2	2015-10-31 14:15:30	2015-10-31 14:15:30	114	{"hamming.py":"\\"\\"\\"Python distance exercise solution\\"\\"\\"\\n\\ndef distance(text_one, text_two):\\n    \\"\\"\\"Calculate distance between two strings\\"\\"\\"\\n    count = 0\\n\\n    for (char1, char2) in zip(text_one, text_two):\\n        if char1 != char2:\\n            count += 1\\n\\n    return count"}
172	29	c048b996f4eed854da411b82	superseded	clojure	beer-song	\N	\N	0	1	2015-08-06 11:03:39	2015-08-06 11:03:39	115	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (- idx 1))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (- to 1) -1)))))"}
173	29	4b499e6d5b1550e39d066b23	superseded	clojure	beer-song	\N	\N	0	3	2015-09-15 12:11:11	2015-09-15 12:11:11	115	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (map verse (range from (dec to) -1)))))"}
174	29	0ca6859bb7396a347000e577	superseded	clojure	beer-song	\N	\N	0	2	2015-09-25 13:34:55	2015-09-25 13:34:55	115	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (s/join \\"\\\\n\\"\\n           (reduce #(conj %1 (verse %2))\\n                   []\\n                   (range from (dec to) -1)))))"}
175	29	c54d073067172baec90c06dc	superseded	clojure	beer-song	\N	\N	0	4	2015-10-15 04:20:15	2015-10-15 04:20:15	115	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        remaining (bottles-of-beer (dec idx))\\n        action (take-one-down idx)]\\n    (str (s/capitalize current)\\n         \\" of beer on the wall, \\"\\n         current\\n         \\" of beer.\\\\n\\"\\n         action\\n         \\", \\"\\n         remaining\\n         \\" of beer on the wall.\\\\n\\")))\\n\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
176	29	cdad1337cd5cafc2e12bb226	pending	clojure	beer-song	\N	\N	0	5	2016-01-06 11:55:50	2016-01-06 11:55:50	115	{"beer_song.clj":"(ns beer-song\\n  (:require [clojure.string :as s]))\\n\\n(defn- bottles-of-beer\\n  [idx]\\n  (case idx\\n    -1 \\"99 bottles\\"\\n    0 \\"no more bottles\\"\\n    1 \\"1 bottle\\"\\n    (str idx \\" bottles\\")))\\n\\n(defn- take-one-down\\n  [idx]\\n  (case idx\\n    0 \\"Go to the store and buy some more\\"\\n    1 \\"Take it down and pass it around\\"\\n    \\"Take one down and pass it around\\"))\\n\\n(defn verse\\n  [idx]\\n  (let [current (bottles-of-beer idx)\\n        action (take-one-down idx)\\n        remaining (bottles-of-beer (dec idx))]\\n    (format \\"%s of beer on the wall, %s of beer.\\\\n%s, %s of beer on the wall.\\\\n\\"\\n            (s/capitalize current)\\n            current\\n            action\\n            remaining)))\\n(defn sing\\n  ([from]\\n   (sing from 0))\\n  ([from to]\\n   (-\\u003e\\u003e\\n     (range from (dec to) -1)\\n     (map verse)\\n     (s/join \\"\\\\n\\"))))"}
179	29	56019432cd75e47b81bbe69a	done	haskell	difference-of-squares	\N	\N	0	3	2015-09-26 14:21:09	2015-09-26 14:21:09	116	{"Squares.hs":"module Squares (sumOfSquares, squareOfSums, difference) where\\n\\nsumOfSquares :: (Integral a) =\\u003e a -\\u003e a\\nsumOfSquares n = (2 * n `pow` 3 + 3 * n `pow` 2 + n) `div` 6\\n\\nsquareOfSums :: (Integral a) =\\u003e a -\\u003e a\\nsquareOfSums n = (n `pow` 4 + 2 * n `pow` 3 + n `pow` 2) `div` 4\\n\\ndifference :: (Integral a) =\\u003e a -\\u003e a\\ndifference n = (3 * n `pow` 4 + 2 * n `pow` 3 - 3 * n `pow` 2 - 2 * n) `div` 12\\n\\npow :: Num a =\\u003e a -\\u003e Int -\\u003e a\\npow = (^)"}
180	29	26b4ee9be4721265503d647c	superseded	haskell	bob	\N	\N	0	1	2015-08-04 14:59:06	2015-08-04 14:59:06	117	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = L.all (\\\\z -\\u003e (isUpper z) || (not $ isLetter z)) y \\u0026\\u0026 L.any isLetter y\\n        question y = (last $ L.dropWhileEnd isUpper y) == '?'\\n        empty    y = L.all isSpace y"}
181	29	3430eb368f6f08cbb9596e07	pending	haskell	bob	\N	\N	0	2	2015-11-26 23:52:57	2015-11-26 23:52:57	117	{"/haskell/bob/Bob.hs":"module Bob (responseFor) where\\n\\nimport Data.Char (isUpper,\\n                  isLetter,\\n                  isSpace)\\nimport qualified Data.List as L\\n\\nresponseFor :: String -\\u003e String\\nresponseFor x\\n  | empty x    = \\"Fine. Be that way!\\"\\n  | shouted x  = \\"Whoa, chill out!\\"\\n  | question x = \\"Sure.\\"\\n  | otherwise  = \\"Whatever.\\"\\n  where shouted  y = all (\\\\z -\\u003e isUpper z || not (isLetter z)) y \\u0026\\u0026 any isLetter y\\n        question y = last y == '?'\\n        empty    y = all isSpace y"}
182	29	1f38692d9691776c8d0d807e	\N	haskell	rna-transcription	\N	\N	0	1	2016-01-09 19:03:06	2016-01-09 19:03:06	118	{"DNA.hs":"module DNA (toRNA) where\\r\\n\\r\\ntoRNA :: String -\\u003e String\\r\\ntoRNA [] = []\\r\\ntoRNA (s:ss) = toRNA' s:toRNA ss\\r\\n\\r\\ntoRNA' :: Char -\\u003e Char\\r\\ntoRNA' 'C' = 'G'\\r\\ntoRNA' 'G' = 'C'\\r\\ntoRNA' 'A' = 'U'\\r\\ntoRNA' 'T' = 'A'\\r\\ntoRNA' _ = ' '"}
183	29	c2d3701fa329039c70da1d51	pending	clojure	rna-transcription	\N	\N	0	2	2015-12-02 20:26:02	2015-12-02 20:26:02	119	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides (str chr)))\\n  (cond\\n    (= chr \\\\A) \\"U\\"\\n    (= chr \\\\T) \\"A\\"\\n    (= chr \\\\C) \\"G\\"\\n    (= chr \\\\G) \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (seq strand))))\\n\\n(to-rna \\"A\\")"}
184	29	ccc03562432d1f47341e9d40	superseded	clojure	rna-transcription	\N	\N	0	1	2015-12-04 05:37:08	2015-12-04 05:37:08	119	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def rna-complements {\\"A\\" \\"U\\" \\"T\\" \\"A\\" \\"C\\" \\"G\\" \\"G\\" \\"C\\"})\\n\\n(def dna-nucleotides (apply set (list (keys rna-complements))))\\n\\n(defn rna-complement-of [nucl] (rna-complements nucl))\\n\\n(defn transcode [chr]\\n  (assert (contains? dna-nucleotides chr))\\n  (cond\\n    (= chr \\"A\\") \\"U\\"\\n    (= chr \\"T\\") \\"A\\"\\n    (= chr \\"C\\") \\"G\\"\\n    (= chr \\"G\\") \\"C\\"\\n   ))\\n\\n\\n(defn to-rna [strand]\\n  (apply str (map transcode (clojure.string/split strand #\\"\\"))))"}
185	31	98f7100938079f89e1878359	pending	rust	difference-of-squares	\N	\N	0	1	2016-03-07 17:14:00	2016-03-07 17:14:00	120	{"src/lib.rs":"pub fn square_of_sum(n: u64) -\\u003e u64 {\\n    let sum = (0..n + 1).fold(0, |a, b| a + b);\\n    sum * sum\\n}\\n\\npub fn sum_of_squares(n: u64) -\\u003e u64 {\\n    (0..n + 1).fold(0, |a, b| a + b * b)\\n}\\n\\npub fn difference(n: u64) -\\u003e u64 {\\n    square_of_sum(n) - sum_of_squares(n)    \\n}"}
186	31	def1ce3ce33b9bfe162b1649	superseded	python	gigasecond	\N	\N	0	1	2016-01-14 16:18:59	2016-01-14 16:18:59	121	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    gigadays = 10 ** 9 / (60 * 60 * 24)\\n    \\n    return birthday + timedelta(days=gigadays)"}
187	31	6904a00b9d61d10ab8183173	pending	python	gigasecond	\N	\N	0	2	2016-02-12 14:16:46	2016-02-12 14:16:46	121	{"/python/gigasecond/gigasecond.py":"from datetime import date, timedelta\\n\\ndef add_gigasecond(birthday):\\n    \\n    return birthday + timedelta(seconds=10**9)"}
188	31	6e49332ed75796d010ada744	done	javascript	hello-world	\N	\N	0	1	2016-01-31 13:02:31	2016-01-31 13:02:31	122	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\nif(!input) {\\n    return \\"Hello, world!\\";\\n}\\nelse return \\"Hello, \\" + input + \\"!\\";\\n};\\n\\nmodule.exports = HelloWorld;"}
189	31	5e14877ad018a6e737e37033	hibernating	elixir	word-count	\N	\N	0	1	2016-03-08 03:07:44	2016-03-08 03:07:44	123	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map() \\n  def count(sentence) do\\n    sentence\\n    |\\u003e to_list()\\n    |\\u003e Enum.reduce(%{}, fn x, y -\\u003e Dict.update(y,x,1,\\u0026(\\u00261 + 1)) end)\\n    \\n  end\\n\\n  def to_list(string) do\\n    String.split(String.downcase(string), ~r{\\\\W|(!?-)}, trim: true)\\n  end\\nend"}
190	31	e3ae936b7a7ebd8b04b0269f	superseded	cpp	etl	\N	\N	0	1	2016-02-25 03:42:19	2016-02-25 03:42:19	124	{"etl.h":"#include \\u003cvector\\u003e\\n#include \\u003cmap\\u003e\\n#include \\u003cctype.h\\u003e\\n#include \\u003calgorithm\\u003e\\n\\nusing namespace std;\\n\\nnamespace etl\\n{\\n\\n\\tmap\\u003cchar, int\\u003e transform(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e old)\\n\\t{\\n\\t\\tint i = 0;\\n\\t\\tint k = 0;\\n\\t\\tvector\\u003cint\\u003e v;\\n\\t\\tfor(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e::iterator it = old.begin(); it != old.end(); ++it)\\n\\t\\t{\\n\\t\\t\\tv.push_back(it-\\u003efirst);\\n\\t\\t}\\n\\t\\tmap\\u003cchar, int\\u003e returnValue;\\n\\n\\t\\twhile(true)\\n\\t\\t{\\n\\t\\t\\tk = v[i];\\n\\t\\t\\tif(find(v.begin(), v.end(), k)!=v.end())\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor(int j = 0; j \\u003c old[k].size();j++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturnValue[tolower(old[k][j])] = k;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\treturn returnValue;\\n\\t}\\n}"}
191	31	7c16bfeb9960d69f5d795ff8	done	cpp	etl	\N	\N	0	2	2016-03-09 02:42:38	2016-03-09 02:42:38	124	{"etl.h":"#include \\u003cvector\\u003e\\n#include \\u003cmap\\u003e\\n#include \\u003cctype.h\\u003e\\nusing namespace std;\\n\\nnamespace etl\\n{\\n\\n\\tmap\\u003cchar, int\\u003e transform(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e old)\\n\\t{\\n\\t\\tmap\\u003cchar, int\\u003e returnValue;\\n\\t\\tfor(map\\u003cint, std::vector\\u003cchar\\u003e\\u003e::iterator it = old.begin(); it != old.end(); ++it)\\n\\t\\t{\\n\\t\\t\\tfor(int i = 0; i \\u003c it-\\u003esecond.size(); ++i)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif(isalpha(it-\\u003esecond[i]))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturnValue[tolower(it-\\u003esecond[i])] = it-\\u003efirst;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn returnValue;\\n\\n\\t}\\n}"}
394	34	7f990ce0174ceb45c2aca41c	pending	ruby	matrix	\N	\N	0	1	2015-12-22 11:58:39	2015-12-22 11:58:39	259	{"matrix.rb":"# Matrix class\\nclass Matrix\\n  attr_reader :rows\\n\\n  def initialize(s)\\n    @matrix = s.split(\\"\\\\n\\").map { |rs| rs.split(' ').map(\\u0026:to_i) }\\n  end\\n\\n  def rows\\n    @matrix\\n  end\\n\\n  def columns\\n    first, *rest = @matrix\\n    first.zip(*rest)\\n  end\\nend"}
192	31	db0d53d6003b18ddd7da27e6	done	javascript	anagram	\N	\N	0	1	2016-01-27 05:54:32	2016-01-27 05:54:32	125	{"anagram.js":"var Anagram = function(word) {\\n\\tthis.word = word;\\n};\\n\\nAnagram.prototype = {\\n\\tmatch: function (wordsToTest) {\\n\\t\\treturn wordsToTest.filter(this.anagramsOf, this);\\n\\t},\\n\\tanagramsOf: function (word) {\\n\\t\\treturn word != this.word \\u0026\\u0026 this.getLetters(word) == this.getLetters(this.word);\\n\\t},\\n\\tgetLetters: function (word) {\\n\\t\\treturn word.toLowerCase().split('').sort().join(',');\\n\\t}\\n\\n};\\n\\nmodule.exports = Anagram;"}
193	31	0b8086c33da91551da0dd79c	pending	javascript	bob	\N	\N	0	1	2016-01-14 19:28:30	2016-01-14 19:28:30	126	{"bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar Bob = function() {};\\n\\nBob.prototype.hey = function(input) {\\n\\tif(input.match(/^\\\\s*$/)){\\n\\t\\treturn 'Fine. Be that way!';\\n\\t}\\n\\tif(input === input.toUpperCase() \\u0026\\u0026 input !== input.toLowerCase()) {\\n    \\treturn 'Whoa, chill out!';\\n\\t}\\n\\tif (input.indexOf(\\"?\\") !== -1 \\u0026\\u0026 input.indexOf(\\"?\\") === input.length-1){\\n\\t\\treturn 'Sure.';\\n\\t}\\n\\treturn 'Whatever.';\\n};\\n\\nmodule.exports = Bob;"}
194	31	f4ab834446da4435fa1e40b7	\N	ruby	robot-name	\N	\N	0	1	2016-01-28 13:11:16	2016-01-28 13:11:16	127	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
195	31	8abfeec9fb9357d7c1c1b3a6	done	haskell	house	\N	\N	0	2	2016-02-09 15:03:48	2016-02-09 15:03:48	128	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nverses :: [String]\\nverses = [\\n    \\"the house that Jack built.\\\\n\\"\\n  , \\"the malt\\\\nthat lay in\\"\\n  , \\"the rat\\\\nthat ate\\"\\n  , \\"the cat\\\\nthat killed\\"\\n  , \\"the dog\\\\nthat worried\\"\\n  , \\"the cow with the crumpled horn\\\\nthat tossed\\"\\n  , \\"the maiden all forlorn\\\\nthat milked\\"\\n  , \\"the man all tattered and torn\\\\nthat kissed\\"\\n  , \\"the priest all shaven and shorn\\\\nthat married\\"\\n  , \\"the rooster that crowed in the morn\\\\nthat woke\\"\\n  , \\"the farmer sowing his corn\\\\nthat kept\\"\\n  , \\"the horse and the hound and the horn\\\\nthat belonged to\\"\\n  ]\\n\\nrhyme :: String\\nrhyme = unlines $ map (\\"This is \\" ++) strophes\\n  where strophes = scanl1 f verses\\n        f song verse = verse ++ \\" \\" ++ song"}
196	31	4f34603e8e50f137cecbf7e4	superseded	haskell	house	\N	\N	0	1	2016-02-15 19:13:34	2016-02-15 19:13:34	128	{"House.hs":"module House (\\n  rhyme\\n) where\\n\\nimport Data.List (intercalate)\\n\\nrhyme :: String\\nrhyme = unlines strophes\\n  where strophes = map strophe [0..11]\\n\\nstrophe :: Int -\\u003e String\\nstrophe n = intro ++ subject n ++ rest ++ \\".\\\\n\\"\\n  where intro  = \\"This is the \\"\\n        verses = intercalate \\"\\\\n\\" $ map verse [n - 1, n - 2 .. 0]\\n        rest\\n          | n == 0    = \\"\\"\\n          | otherwise = \\"\\\\n\\" ++ verses\\n\\nverse :: Int -\\u003e String\\nverse n = \\"that \\" ++ verb n ++ \\" the \\" ++ subject n\\n\\nverb :: Int -\\u003e String\\nverb 0  = \\"lay in\\"\\nverb 1  = \\"ate\\"\\nverb 2  = \\"killed\\"\\nverb 3  = \\"worried\\"\\nverb 4  = \\"tossed\\"\\nverb 5  = \\"milked\\"\\nverb 6  = \\"kissed\\"\\nverb 7  = \\"married\\"\\nverb 8  = \\"woke\\"\\nverb 9  = \\"kept\\"\\nverb 10 = \\"belonged to\\"\\nverb _  = undefined\\n\\nsubject :: Int -\\u003e String\\nsubject 0  = \\"house that Jack built\\"\\nsubject 1  = \\"malt\\"\\nsubject 2  = \\"rat\\"\\nsubject 3  = \\"cat\\"\\nsubject 4  = \\"dog\\"\\nsubject 5  = \\"cow with the crumpled horn\\"\\nsubject 6  = \\"maiden all forlorn\\"\\nsubject 7  = \\"man all tattered and torn\\"\\nsubject 8  = \\"priest all shaven and shorn\\"\\nsubject 9  = \\"rooster that crowed in the morn\\"\\nsubject 10 = \\"farmer sowing his corn\\"\\nsubject 11 = \\"horse and the hound and the horn\\"\\nsubject _  = undefined"}
197	31	0dd233c65a99f80bc8ccd07d	pending	javascript	gigasecond	\N	\N	0	1	2016-02-12 00:01:12	2016-02-12 00:01:12	129	{"gigasecond.js":"var Gigasecond = function Gigasecond( birth ){\\n    \\n    this.birth = birth;\\n\\n    this.date = function(){\\n        var Gs_in_ms = Math.pow(10,9)*1000,\\n            unix_birth = this.birth.getTime(),\\n            gs_anniversary = new Date( unix_birth + Gs_in_ms );\\n        \\n        return new Date(gs_anniversary.getFullYear(), gs_anniversary.getMonth(), gs_anniversary.getDate());\\n    };\\n};\\n\\nmodule.exports = Gigasecond;"}
198	31	ad6eb8f2b43a8695addf0f84	done	ruby	word-count	\N	\N	0	1	2016-01-30 11:09:13	2016-01-30 11:09:13	130	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    self.words = phrase.scan(/[\\\\w']+/).map(\\u0026:downcase)\\n  end\\n\\n  def word_count\\n    counter = Hash.new {|hash, key| hash[key] = 0}\\n    words.inject(counter) do |counts, word|\\n      counts[word] += 1\\n      counts\\n    end\\n  end\\n\\n  private\\n\\n  attr_accessor :words\\nend"}
199	31	9b4059da17e670b8a94085da	superseded	haskell	gigasecond	\N	\N	0	1	2016-02-10 03:17:01	2016-02-10 03:17:01	131	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime (10 ^ 9)"}
200	31	b762c5b535ab206870114d9f	pending	haskell	gigasecond	\N	\N	0	2	2016-02-13 15:44:55	2016-02-13 15:44:55	131	{"haskell\\\\gigasecond\\\\Gigasecond.hs":"module Gigasecond (fromDay) where\\r\\n\\r\\nimport Data.Time.Clock (addUTCTime, UTCTime)\\r\\n\\r\\nfromDay :: UTCTime -\\u003e UTCTime\\r\\nfromDay = addUTCTime 1e9"}
201	31	e094c63563f290e31998f790	hibernating	python	rna-transcription	\N	\N	0	1	2016-02-01 00:17:12	2016-02-01 00:17:12	132	{"dna.py":"def to_rna(dna_string):\\n    rna_string = \\"\\"\\n    for c in dna_string:\\n        if c == 'G':\\n            rna_string += 'C'\\n        elif c == 'C':\\n            rna_string += 'G'\\n        elif c == 'T':\\n            rna_string += 'A'\\n        elif c == 'A':\\n            rna_string += 'U'\\n    return rna_string"}
209	31	ff25a7a96eada6007ecbef94	pending	clojure	scrabble-score	\N	\N	0	2	2016-02-12 16:21:34	2016-02-12 16:21:34	138	{"scrabble.clj":"(ns scrabble\\n  (:require [clojure.string :as s]))\\n\\n(def letter-scores\\n  {\\n    \\"A\\" 1 \\"E\\" 1 \\"I\\" 1 \\"O\\" 1 \\"U\\" 1 \\"L\\" 1 \\"N\\" 1 \\"R\\" 1 \\"S\\" 1 \\"T\\" 1\\n    \\"D\\" 2 \\"G\\" 2\\n    \\"B\\" 3 \\"C\\" 3 \\"M\\" 3 \\"P\\" 3\\n    \\"F\\" 4 \\"H\\" 4 \\"V\\" 4 \\"W\\" 4 \\"Y\\" 4\\n    \\"K\\" 5\\n    \\"J\\" 8 \\"X\\" 8\\n    \\"Q\\" 10 \\"Z\\" 10\\n    })\\n\\n(defn score-letter [letter \\u0026 [multiplier]]\\n  (let [m (case multiplier\\n            :triple 3\\n            :double 2\\n            1)]\\n    (* (letter-scores (s/upper-case letter)) m)))\\n\\n(defn score-word [word \\u0026 [flags]] (reduce + (map #(score-letter % flags) word)))"}
210	31	86ff7105f61c0a5d342dde1b	superseded	javascript	hamming	\N	\N	0	1	2016-01-25 07:00:08	2016-01-25 07:00:08	139	{"hamming.js":"'use strict';\\n\\nexports.compute = function(a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('DNA strands must be of equal length.');\\n  }\\n\\n  var distance = 0;\\n  for (var i = 0, len = a.length; i \\u003c len; ++i) {\\n    if (a[i] !== b[i]) {\\n      distance += 1;\\n    }\\n  }\\n  return distance;\\n};"}
202	31	86727c57a83dae39a2fd92f5	needs_input	clojure	crypto-square	\N	\N	0	1	2016-01-23 19:21:41	2016-01-23 19:21:41	133	{"/clojure/crypto-square/crypto_square.clj":"(ns crypto-square\\n  (:require [clojure.string :as str]))\\n\\n(defn transpose [coll]\\n  (apply mapv vector coll))\\n\\n(defn squarish-root [n]\\n  (-\\u003e n (Math/pow 0.5) Math/ceil int))\\n\\n(defn normalize-plaintext [phrase]\\n  (-\\u003e\\u003e phrase\\n       str/lower-case\\n       (re-seq #\\"\\\\w\\")\\n       str/join))\\n\\n(defn square-size [phrase]\\n  (squarish-root (count phrase)))\\n\\n(defn plaintext-segments [phrase]\\n  (let [normal (normalize-plaintext phrase)\\n        size (square-size normal)]\\n    (-\\u003e\\u003e normal\\n         str/lower-case\\n         (partition-all size)\\n         (map str/join)\\n         vec)))\\n\\n(defn ciphertext [phrase]\\n  (let [normal (normalize-plaintext phrase)\\n        size (square-size normal)\\n        pts (plaintext-segments normal)\\n        diff (Math/abs (- size (count (last pts))))\\n        padding (take diff (cycle \\"@\\"))\\n        padded (if (empty? padding)\\n                 pts\\n                 (assoc pts (dec size) (flatten (concat (last pts) padding))))\\n        ciphered (transpose padded)]\\n    (-\\u003e\\u003e ciphered\\n         normalize-plaintext\\n         (partition-all size)\\n         (map str/join)\\n         str/join)))\\n\\n(defn normalize-ciphertext [phrase]\\n  (let [ciphered (ciphertext phrase)]\\n    (do\\n      (println ciphered))\\n    (-\\u003e\\u003e ciphered\\n         (partition-all (-\\u003e ciphered square-size dec))\\n         (map str/join)\\n         (str/join \\" \\"))))"}
203	31	eb77f1991bd2132f37f2e645	pending	java	meetup	\N	\N	0	1	2016-01-20 03:05:49	2016-01-20 03:05:49	134	{"src\\\\main\\\\java\\\\Meetup.java":"import org.joda.time.DateTime;\\r\\n\\r\\npublic class Meetup\\r\\n{\\r\\n\\tprotected int month, year;\\r\\n\\r\\n\\tpublic Meetup(int month, int year)\\r\\n\\t{\\r\\n\\t\\tthis.month = month;\\r\\n\\t\\tthis.year = year;\\r\\n\\t}\\r\\n\\r\\n\\tpublic DateTime day(int day, MeetupSchedule schedule)\\r\\n\\t{\\r\\n\\t\\t// get the date starting at the first day of the month\\r\\n\\t\\tDateTime date = new DateTime(year, month, 1, 0, 0);\\r\\n\\r\\n\\t\\t// if the schedule is \\"teenth\\", only search through the \\"teenth\\" days of that month\\r\\n\\t\\tif (schedule == MeetupSchedule.TEENTH)\\r\\n\\t\\t{\\r\\n\\t\\t\\tdate = date.plusDays(12); // 13 is the first \\"teenth\\"\\r\\n\\t\\t\\tfor (int i = 0; i \\u003c 7; i++)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tif (date.getDayOfWeek() == day)\\r\\n\\t\\t\\t\\t\\treturn date;\\r\\n\\t\\t\\t\\tdate = date.plusDays(1);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// what week we found it\\r\\n\\t\\tint c = 0;\\r\\n\\t\\t// are we still searching?\\r\\n\\t\\tboolean searching = true;\\r\\n\\t\\t// the last time we encountered the day\\r\\n\\t\\tDateTime last = null;\\r\\n\\t\\t// if we found the day, we can increment the days by 7 (a week)\\r\\n\\t\\t// will save some iterations\\r\\n\\t\\tboolean foundDay = false;\\r\\n\\r\\n\\r\\n\\t\\twhile (searching)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (date.getDayOfWeek() == day)\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t// if it equals the ordinal, we found the ordinal-th day of the week\\r\\n\\t\\t\\t\\tif (c == schedule.ordinal())\\r\\n\\t\\t\\t\\t\\treturn date;\\r\\n\\r\\n\\t\\t\\t\\tc++;\\r\\n\\t\\t\\t\\tlast = date;\\r\\n\\t\\t\\t\\tfoundDay = true;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdate = date.plusDays((foundDay) ? 7 : 1);\\r\\n\\t\\t\\t// we only want to search in the correct month\\r\\n\\t\\t\\tsearching = date.getMonthOfYear() == month;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// if we did not return yet, we where searching for the last time\\r\\n\\t\\treturn last;\\r\\n\\t}\\r\\n}"}
204	31	f3453869fbc8791811568cc6	pending	python	atbash-cipher	\N	\N	0	1	2016-03-07 08:02:32	2016-03-07 08:02:32	135	{"atbash_cipher.py":"import re\\n\\nALPHABET = 'abcdefghijklmnopqrstuvwxyz'\\nINVALID_CHARACTERS = re.compile(\\"[^a-z0-9]|\\\\s\\", re.IGNORECASE)\\n\\ndef encode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_encoded_letter(l, i) for i, l in enumerate(str)])\\n\\ndef decode(str):\\n    str = _get_valid_characters(str)\\n    return \\"\\".join([_get_reverse_letter(l, True) for l in str])\\n\\ndef _get_encoded_letter(letter, i):\\n  is_next_group = i \\u003e 0 and i % 5 is 0\\n  space = \\" \\" if is_next_group else \\"\\"\\n  encoded_letter = _get_reverse_letter(letter)\\n  return \\"{}{}\\".format(space, encoded_letter)\\n\\ndef _get_reverse_letter(letter, decoding=False):\\n    letter = letter.lower()\\n    if letter in ALPHABET:\\n      index = _get_index(letter, decoding)\\n      reverse_index = (index + 1) * -1\\n      return ALPHABET[reverse_index]\\n    else:\\n      return letter\\n\\ndef _get_valid_characters(str):\\n    return re.sub(INVALID_CHARACTERS, \\"\\", str)\\n\\ndef _get_index(letter, decoding):\\n    index = ALPHABET.index(letter)\\n    return index - len(ALPHABET) if decoding else index"}
205	31	0c33bd78e3313293f1c9058a	\N	ruby	bob	\N	\N	0	1	2016-01-26 00:59:46	2016-01-26 00:59:46	136	{"bob.rb":"class Bob\\n  def hey (remark)\\n    answer = 'Whatever.'\\n    case\\n    when !!remark.match(/\\\\A[[:space:]]*\\\\Z/)\\n      answer = 'Fine. Be that way!'\\n    when !!remark.match(/\\\\A(?=.*[A-Z])[^[:lower:]]+\\\\Z/)\\n      answer = 'Whoa, chill out!'\\n    when !!remark.match(/\\\\?\\\\Z/)\\n      answer = 'Sure.'\\n    end\\n    answer\\n  end\\nend"}
206	31	cc20e7d731448f3eaeddfb9c	\N	ruby	bob	\N	\N	0	2	2016-02-03 18:53:40	2016-02-03 18:53:40	136	{"bob.rb":"class Bob\\n  def hey (remark)\\n    case\\n      when !!remark.match(/\\\\A[[:space:]]*\\\\Z/) then 'Fine. Be that way!'\\n      when !!remark.match(/\\\\A(?=.*[A-Z])[^[:lower:]]+\\\\Z/) then 'Whoa, chill out!'\\n      when !!remark.match(/\\\\?\\\\Z/) then 'Sure.'\\n      else 'Whatever.'\\n    end\\n  end\\nend"}
207	31	989ea06552e5a9473609d645	pending	javascript	beer-song	\N	\N	0	1	2016-02-22 04:46:48	2016-02-22 04:46:48	137	{"beer-song.js":"'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\nexports['default'] = {\\n  noun: function noun(number) {\\n    return number === 1 ? 'bottle' : 'bottles';\\n  },\\n\\n  verse: function verse(number) {\\n    if (number === 0) {\\n      return 'No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n';\\n    } else {\\n      var next = number === 1 ? 'no more' : number - 1;\\n      var it = number === 1 ? 'it' : 'one';\\n      return number + ' ' + this.noun(number) + ' of beer on the wall, ' + number + ' ' + this.noun(number) + ' of beer.\\\\nTake ' + it + ' down and pass it around, ' + next + ' ' + this.noun(next) + ' of beer on the wall.\\\\n';\\n    }\\n  },\\n\\n  sing: function sing(start, end) {\\n    end = end || 0;\\n    var song = [];\\n    for (var i = start; i \\u003e= end; i--) {\\n      song.push(this.verse(i));\\n    }\\n    return song.join('\\\\n');\\n  }\\n};\\nmodule.exports = exports['default'];"}
208	31	9658479cda34ec349203cbe5	superseded	clojure	scrabble-score	\N	\N	0	1	2016-01-20 00:35:52	2016-01-20 00:35:52	138	{"scrabble.clj":"(ns scrabble\\n  (:require [clojure.string :as s]))\\n\\n(def letter-scores\\n  {\\n    \\"A\\" 1 \\"E\\" 1 \\"I\\" 1 \\"O\\" 1 \\"U\\" 1 \\"L\\" 1 \\"N\\" 1 \\"R\\" 1 \\"S\\" 1 \\"T\\" 1\\n    \\"D\\" 2 \\"G\\" 2\\n    \\"B\\" 3 \\"C\\" 3 \\"M\\" 3 \\"P\\" 3\\n    \\"F\\" 4 \\"H\\" 4 \\"V\\" 4 \\"W\\" 4 \\"Y\\" 4\\n    \\"K\\" 5\\n    \\"J\\" 8 \\"X\\" 8\\n    \\"Q\\" 10 \\"Z\\" 10\\n    })\\n\\n(defn score-letter [letter] (letter-scores (s/upper-case letter)))\\n(defn score-word [word] (reduce + (map score-letter word)))"}
211	31	cca84d63303a0c312b972ac4	done	javascript	hamming	\N	\N	0	2	2016-03-18 12:59:31	2016-03-18 12:59:31	139	{"hamming.js":"'use strict';\\n\\nexports.compute = function(a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('DNA strands must be of equal length.');\\n  }\\n\\n  return a.split('').filter(function(nucleotide, i) {\\n    return nucleotide !== b[i];\\n  }).length;\\n};"}
212	31	9798403dea4f52782dd8a321	superseded	python	allergies	\N	\N	0	1	2016-03-01 08:45:37	2016-03-01 08:45:37	140	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        ls =[]\\n        p = 0\\n        for x in base_2_num[::-1]:\\n            if x ==\\"1\\" and p \\u003c 8:\\n                ls.append(alergies[p])\\n            p += 1\\n#        print ls\\n        return  ls\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
213	31	4763e4b5ab2f5f7761ed7fee	pending	python	allergies	\N	\N	0	2	2016-03-06 07:29:02	2016-03-06 07:29:02	140	{"allergies.py":"__author__ = 'banarasitippa'\\n\\ndef toStr(n,base):\\n   convertString = \\"0123456789ABCDEF\\"\\n   if n \\u003c base:\\n      return convertString[n]\\n   else:\\n      return toStr(n//base,base) + convertString[n%base]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self,alergy_count):\\n        self.alergy_count = alergy_count\\n        self.list = self.findAlergies()\\n\\n    def findAlergies(self):\\n        alergies = ('eggs peanuts shellfish strawberries tomatoes '\\n                 'chocolate pollen cats').split()\\n        base_2_num = toStr(self.alergy_count,2)\\n        return [allergen for (allergen, yesNo) in zip(alergies, base_2_num[::-1]) if int(yesNo)]\\n\\n\\n    def is_allergic_to(self,item):\\n        return item in self.list\\n\\n#print Allergies(5)\\n#print (toStr(1,2))\\n#allergies = Allergies(3)\\n#print (allergies.is_allergic_to('eggs'))"}
214	33	0d697926eb7d8ade9e425f31	superseded	go	gigasecond	\N	\N	0	1	2015-12-27 13:45:53	2015-12-27 13:45:53	141	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport (\\n        \\"time\\"\\n)\\n\\nconst gigasecondDuration = 1000000000 *  time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond( birthday time.Time ) time.Time {\\n    return birthday.Add( gigasecondDuration )\\n}"}
215	33	bf9be2ae7915130cf2cff7a4	pending	go	gigasecond	\N	\N	0	2	2015-12-30 02:17:37	2015-12-30 02:17:37	141	{"gigasecond.go":"/*\\nWrite a program that will calculate the date that someone turned or will celebrate\\n their 1 Gs anniversary.\\nA gigasecond is one billion (10**9) seconds.\\n*/\\n\\npackage gigasecond\\n\\nimport \\"time\\"\\n\\nconst gigasecondDuration = 1e9 * time.Second\\n\\nvar Birthday time.Time\\n\\nfunc AddGigasecond(birthday time.Time) time.Time {\\n\\treturn birthday.Add(gigasecondDuration)\\n}"}
216	33	4edb04f57b07508b4d8a6916	pending	clojure	prime-factors	\N	\N	0	1	2015-12-13 14:52:08	2015-12-13 14:52:08	142	{"\\\\clojure\\\\prime-factors\\\\prime_factors.clj":"(ns prime-factors)\\n\\n(defn divisor? [prime-candidate]\\n  (fn [divider]\\n    (-\\u003e\\u003e divider (rem prime-candidate) (= 0))))\\n\\n\\n(defn prime? [primes last-prime]\\n  (fn [prime-candidate]\\r\\n    (let [prime-candidate-sqrt (java.lang.Math/sqrt prime-candidate)]                                                                                            \\r\\n      (-\\u003e\\u003e primes\\r\\n        (take-while #(\\u003c= % prime-candidate-sqrt))\\r\\n        (some (divisor? prime-candidate))\\r\\n        not))))\\r\\n\\n(def primes\\n  (lazy-cat \\n    [2]\\n    (iterate \\n      (fn [last-prime]\\n        (-\\u003e\\u003e (iterate (partial + 2) (+ 2 last-prime))\\r\\n          (filter (prime? primes last-prime))\\n          first)) \\n      3)))\\n\\n(defn of \\n  ([num] (of num [] 1))\\n  ([num factors last-found]\\n    (if (= num 1)\\n      factors\\n      (let [divisor (-\\u003e\\u003e primes\\n                      (drop-while #(\\u003c % last-found))\\n                      (filter (divisor? num))\\n                      first)]\\n        (of (/ num divisor) (conj factors divisor) divisor)))))"}
217	33	dceb8721f795a5208396a9e4	\N	ruby	bob	\N	\N	0	3	2015-11-11 08:18:20	2015-11-11 08:18:20	143	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Whoa, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    (text =~  /[A-Z]/ \\u0026\\u0026 text == text.upcase)\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
218	33	b327191106c1f7bc84a486a9	superseded	ruby	bob	\N	\N	0	1	2015-11-27 23:17:47	2015-11-27 23:17:47	143	{"bob.rb":"class Bob\\n\\n  def hey str\\n    \\"Whatever.\\"\\n  end\\n\\nend"}
219	33	f3477638ccd3357679418fc5	done	ruby	bob	\N	\N	0	2	2016-01-03 04:44:56	2016-01-03 04:44:56	143	{"bob.rb":"class Bob\\n\\n  def hey msg\\n    msg = msg.split(\\"\\\\n\\").join(\\"\\")\\n    if is_silence?(msg)\\n      \\"Fine. Be that way!\\"\\n    elsif is_yellin?(msg)\\n      \\"Woah, chill out!\\"\\n    elsif is_question?(msg)\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\nprivate\\n\\n  def is_yellin?(text)\\n    text == text.upcase\\n  end\\n\\n  def is_question?(text)\\n    text =~ /\\\\?$/\\n  end\\n\\n  def is_silence?(text)\\n    text =~ /^\\\\s*$/\\n  end\\n\\nend"}
220	33	9f5661d5191940b92db390a1	\N	go	pythagorean-triplet	\N	\N	0	1	2015-12-29 19:41:34	2015-12-29 19:41:34	144	{"pythagorean_triplet.go":"package pythagorean\\n\\ntype Triplet [3]int\\n\\nfunc Range(min, max int) (triplets []Triplet) {\\n\\tfor a := min; a \\u003c= max; a++ {\\n\\t\\tfor b := a; b \\u003c= max; b++ {\\n\\t\\t\\tfor c := b; c \\u003c= max; c++ {\\n\\t\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc Sum(sum int) (triplets []Triplet) {\\n\\tfor a := 1; a \\u003c= sum/3; a++ {\\n\\t\\tfor b := a; b \\u003c= (sum-a)/2; b++ {\\n\\t\\t\\tc := sum - a - b\\n\\t\\t\\tt := Triplet{a, b, c}\\n\\t\\t\\tif isTriplet(t) {\\n\\t\\t\\t\\ttriplets = append(triplets, t)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn triplets\\n}\\n\\nfunc isTriplet(t Triplet) bool {\\n\\treturn t[0]*t[0]+t[1]*t[1] == t[2]*t[2]\\n}"}
221	33	40cb22ea87492efca7d99777	\N	elixir	zipper	\N	\N	0	1	2016-01-28 23:25:22	2016-01-28 23:25:22	145	{"zipper.exs":"# def BinTree, value: nil, left: nil, right: nil do\\n#   @moduledoc \\"\\"\\"\\n#   A node in a binary tree.\\n\\n#   `value` is the value of a node.\\n#   `left` is the left subtree (nil if no subtree).\\n#   `right` is the right subtree (nil if no subtree).\\n#   \\"\\"\\"\\n#   record_type value: any, left: BinTree.t | nil, right: BinTree.t | nil\\n# end\\n\\ndefmodule BinTree do\\n  defstruct value: nil, left: nil, right: nil\\nend\\n\\ndefmodule Zipper do\\n\\n  defstruct focus: nil, trail: [], root: nil\\n\\n  alias BinTree, as: BT\\n  alias __MODULE__, as: Z\\n\\n  @doc \\"\\"\\"\\n  Get a zipper focussed on the root node.\\n  \\"\\"\\"\\n  #@spec from_tree(BT.t) :: Z.t\\n  def from_tree(bt) do\\n    %Z{focus: bt, root: bt}\\n  end\\n\\n  @doc \\"\\"\\"\\n  Get the complete tree from a zipper.\\n  \\"\\"\\"\\n  #@spec to_tree(Z.t) :: BT.t\\n  def to_tree(z = %Z{root: complete_tree}) do\\n    complete_tree\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the value of the focus node.\\n  # \\"\\"\\"\\n  # @spec value(Z.t) :: any\\n  def value(z = %Z{focus: focus}) do\\n    focus.value\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the left child of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec left(Z.t) :: Z.t | nil\\n  def left(z = %Z{focus: %BT{left: nil}, trail: trail}), do: nil\\n  def left(z = %Z{focus: focus, trail: trail}) do\\n    %Z{z | focus: focus.left, trail: [:left|trail]}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the right child of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec right(Z.t) :: Z.t | nil\\n  def right(z = %Z{focus: %BT{right: nil}, trail: trail}), do: nil\\n  def right(z = %Z{focus: focus, trail: trail}) do\\n    %Z{z | focus: focus.right, trail: [:right|trail]}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Get the parent of the focus node, if any.\\n  # \\"\\"\\"\\n  # @spec up(Z.t) :: Z.t\\n  def up(z) do\\n    %Z{z | focus: walk_up_to_parent(z.root, Enum.reverse(z.trail))}\\n  end\\n\\n  defp walk_up_to_parent(tree, []),             do: nil\\n  defp walk_up_to_parent(tree, [_]),            do: tree\\n  defp walk_up_to_parent(tree, [:left|trail]),  do: walk_up_to_parent(tree.left, trail)\\n  defp walk_up_to_parent(tree, [:right|trail]), do: walk_up_to_parent(tree.right, trail)\\n\\n  # @doc \\"\\"\\"\\n  # Set the value of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_value(Z.t, any) :: Z.t\\n  def set_value(z = %Z{focus: focus}, v) do\\n    new_focus = %BT{focus | value: v}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\n\\n  defp rebuild(tree, [], new_subtree),             do: new_subtree\\n  defp rebuild(tree, [:left], new_subtree),        do: %BT{tree | left: new_subtree}\\n  defp rebuild(tree, [:right], new_subtree),       do: %BT{tree | right: new_subtree}\\n  defp rebuild(tree, [:left|trail], new_subtree),  do: rebuild(tree.left, trail, new_subtree)\\n  defp rebuild(tree, [:right|trail], new_subtree), do: rebuild(tree.right, trail, new_subtree)\\n\\n  # @doc \\"\\"\\"\\n  # Replace the left child tree of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_left(Z.t, BT.t) :: Z.t\\n  def set_left(z = %Z{focus: focus}, l) do\\n    new_focus = %BT{focus | left: l}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\n\\n  # @doc \\"\\"\\"\\n  # Replace the right child tree of the focus node.\\n  # \\"\\"\\"\\n  # @spec set_right(Z.t, BT.t) :: Z.t\\n  def set_right(z = %Z{focus: focus}, l) do\\n    new_focus = %BT{focus | right: l}\\n    %Z{z | focus: new_focus, root: rebuild(z.root, Enum.reverse(z.trail), new_focus)}\\n  end\\nend"}
223	33	105b4e51a0c44778d00b0444	hibernating	cpp	queen-attack	\N	\N	0	1	2015-11-13 07:56:19	2015-11-13 07:56:19	147	{"queen_attack.cpp":"//#if !defined(QUEEN_ATTACK_H)\\r\\n//#define QUEEN_ATTACK_H\\r\\n//\\r\\n//#include \\u003cstring\\u003e\\r\\n//#include \\u003cutility\\u003e\\r\\n//\\r\\n//namespace queen_attack\\r\\n//{\\r\\n//\\r\\n//class chess_board\\r\\n//{\\r\\n//public:\\r\\n//    chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black);\\r\\n//\\r\\n//    chess_board()\\r\\n//    {}\\r\\n//\\r\\n//    std::pair\\u003cint, int\\u003e white() const\\r\\n//    {\\r\\n//        return white_;\\r\\n//    }\\r\\n//    std::pair\\u003cint, int\\u003e black() const\\r\\n//    {\\r\\n//        return black_;\\r\\n//    }\\r\\n//\\r\\n//    operator std::string() const;\\r\\n//\\r\\n//    bool can_attack() const;\\r\\n//\\r\\n//private:\\r\\n//    const std::pair\\u003cint, int\\u003e white_ = std::make_pair(0, 3);\\r\\n//    const std::pair\\u003cint, int\\u003e black_ = std::make_pair(7, 3);\\r\\n//};\\r\\n//\\r\\n//}\\r\\n//\\r\\n//#endif\\r\\n//\\r\\n#include \\"queen_attack.h\\"\\r\\n\\r\\n#include \\u003csstream\\u003e\\r\\n#include \\u003cstdexcept\\u003e\\r\\n\\r\\nnamespace queen_attack\\r\\n{\\r\\n\\r\\nchess_board::chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black)\\r\\n    : white_{white},\\r\\n    black_{black}\\r\\n{\\r\\n    if (white == black) {\\r\\n        throw std::domain_error(\\"Both queens cannot occupy the same position.\\");\\r\\n    }\\r\\n}\\r\\n\\r\\nchess_board::operator std::string() const\\r\\n{\\r\\n    std::ostringstream board;\\r\\n    for (int row = 0; row \\u003c 8; ++row) {\\r\\n        for (int col = 0; col \\u003c 8; ++col) {\\r\\n            const auto pos = std::make_pair(row, col);\\r\\n            if (pos == white_) {\\r\\n                board \\u003c\\u003c 'W';\\r\\n            } else if (pos == black_) {\\r\\n                board \\u003c\\u003c 'B';\\r\\n            } else {\\r\\n                board \\u003c\\u003c '_';\\r\\n            }\\r\\n            if (col != 7) {\\r\\n                board \\u003c\\u003c ' ';\\r\\n            }\\r\\n        }\\r\\n        board \\u003c\\u003c '\\\\n';\\r\\n    }\\r\\n    return board.str();\\r\\n}\\r\\n\\r\\nbool chess_board::can_attack() const\\r\\n{\\r\\n    return (white_.first == black_.first)\\r\\n        || (white_.second == black_.second)\\r\\n        || ((white_.first - black_.first) == (white_.second - black_.second));\\r\\n}\\r\\n\\r\\n}\\r"}
224	33	fee34eeecb2d3418c76a6f70	\N	cpp	queen-attack	\N	\N	0	2	2016-01-09 01:45:44	2016-01-09 01:45:44	147	{"queen_attack.cpp":"#include \\"queen_attack.h\\"\\n\\n#include \\u003csstream\\u003e\\n#include \\u003cstdexcept\\u003e\\n\\nnamespace queen_attack\\n{\\n\\nchess_board::chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black)\\n    : white_{white},\\n    black_{black}\\n{\\n    if (white == black) {\\n        throw std::domain_error(\\"Both queens cannot occupy the same position.\\");\\n    }\\n}\\n\\nchess_board::operator std::string() const\\n{\\n    std::ostringstream board;\\n    for (int row = 0; row \\u003c 8; ++row) {\\n        for (int col = 0; col \\u003c 8; ++col) {\\n            const auto pos = std::make_pair(row, col);\\n            if (pos == white_) {\\n                board \\u003c\\u003c 'W';\\n            } else if (pos == black_) {\\n                board \\u003c\\u003c 'B';\\n            } else {\\n                board \\u003c\\u003c '_';\\n            }\\n            if (col != 7) {\\n                board \\u003c\\u003c ' ';\\n            }\\n        }\\n        board \\u003c\\u003c '\\\\n';\\n    }\\n    return board.str();\\n}\\n\\nbool chess_board::can_attack() const\\n{\\n    return (white_.first == black_.first)\\n        || (white_.second == black_.second)\\n        || ((white_.first - black_.first) == (white_.second - black_.second))\\n        || ((white_.first - black_.first) == (black_.second - white_.second));\\n}\\n\\n}","queen_attack.h":"#if !defined(QUEEN_ATTACK_H)\\n#define QUEEN_ATTACK_H\\n\\n#include \\u003cstring\\u003e\\n#include \\u003cutility\\u003e\\n\\nnamespace queen_attack\\n{\\n\\nclass chess_board\\n{\\npublic:\\n    chess_board(const std::pair\\u003cint, int\\u003e\\u0026 white, const std::pair\\u003cint, int\\u003e\\u0026 black);\\n\\n    chess_board()\\n    {}\\n\\n    std::pair\\u003cint, int\\u003e white() const\\n    {\\n        return white_;\\n    }\\n    std::pair\\u003cint, int\\u003e black() const\\n    {\\n        return black_;\\n    }\\n\\n    operator std::string() const;\\n\\n    bool can_attack() const;\\n\\nprivate:\\n    const std::pair\\u003cint, int\\u003e white_ = std::make_pair(0, 3);\\n    const std::pair\\u003cint, int\\u003e black_ = std::make_pair(7, 3);\\n};\\n\\n}\\n\\n#endif"}
225	38	6b00242eb9b75a1c926f01b6	\N	ruby	roman-numerals	\N	\N	0	1	2016-02-03 02:32:40	2016-02-03 02:32:40	148	{"roman_numerals.rb":"class Fixnum\\n  VERSION = 1\\n  ROMANS = [['I', 'V'], ['X', 'L'], ['C', 'D'], ['M']]\\n\\n  def to_roman\\n    in_roman = []\\n\\n    self.to_s.chars.reverse_each.with_index do |digit, index|\\n      pair      = ROMANS[index]\\n      next_pair = ROMANS[index + 1]\\n\\n      roman_digit = case digit.to_i\\n                    when 0 then ''\\n                    when 1 then pair.first\\n                    when 2 then pair.first * 2\\n                    when 3 then pair.first * 3\\n                    when 4 then pair.first + pair.last\\n                    when 5 then pair.last\\n                    when 6 then pair.last + pair.first\\n                    when 7 then pair.last + pair.first * 2\\n                    when 8 then pair.last + pair.first * 3\\n                    when 9 then pair.first + next_pair.first\\n                    end\\n\\n      in_roman \\u003c\\u003c roman_digit\\n    end\\n\\n    in_roman.reverse.join\\n  end\\nend"}
226	38	0b75ee7921ee4d5ad9ad95f1	superseded	lisp	gigasecond	\N	\N	0	1	2015-07-06 08:22:19	2015-07-06 08:22:19	149	{"/lisp/gigasecond/gigasecond.lisp":"(in-package #:cl-user)\\n(defpackage #:gigasecond\\n  (:use #:cl)\\n  (:export #:from))\\n(in-package #:gigasecond)\\n\\n(defun from (year month day \\u0026optional hour minute second)\\n  (multiple-value-bind (GSSECOND GSMINUTE GSHOUR GSDAY GSMONTH GSYEAR)\\n      (decode-universal-time (+ 1e9 (encode-universal-time second minute hour day month year)))\\n    (list gsyear gsmonth gsday gshour gsminute (floor gssecond))))"}
227	38	9a5b277d24d9643021f0fb8d	hibernating	lisp	gigasecond	\N	\N	0	2	2015-08-17 02:45:21	2015-08-17 02:45:21	149	{"/lisp/gigasecond/gigasecond.lisp":"(in-package #:cl-user)\\n(defpackage #:gigasecond\\n  (:use #:cl)\\n  (:export #:from))\\n(in-package #:gigasecond)\\n\\n(defun from (year month day \\u0026optional hour minute second)\\n  (multiple-value-bind (GSSECOND GSMINUTE GSHOUR GSDAY GSMONTH GSYEAR)\\n      (decode-universal-time (+ (expt 10 9) (encode-universal-time second minute hour day month year)))\\n    (list gsyear gsmonth gsday gshour gsminute (floor gssecond))))"}
228	38	c9ce6b005a6e57cfebd782f0	pending	javascript	hello-world	\N	\N	0	1	2015-09-20 04:10:46	2015-09-20 04:10:46	150	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n\\tif (input === '')\\n\\t\\treturn 'Hello, world!';\\n\\telse\\n\\t\\treturn 'Hello, '+input+'!';\\n};\\n\\nmodule.exports = HelloWorld;"}
229	38	1295a3c3e18a6842573c524f	\N	ruby	robot-name	\N	\N	0	1	2015-07-12 10:42:07	2015-07-12 10:42:07	151	{"robot_name.rb":"class Robot\\n  # VERSION = File.read('.version').to_i\\n\\n  attr_reader :name\\n\\n  def initialize\\n    generate_name!\\n  end\\n\\n  def reset\\n    generate_name!\\n  end\\n\\n  private\\n\\n  def generate_name!\\n    old = @name\\n    while old == @name\\n      @name = \\"#{new_letter_designation}#{new_number_designation}\\"\\n    end\\n  end\\n\\n  def new_letter_designation\\n    letters = ''\\n    2.times do\\n      letters \\u003c\\u003c 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.chars.to_a.sample\\n    end\\n    letters\\n  end\\n\\n  def new_number_designation\\n    format '%03d', rand(999)\\n  end\\nend"}
230	38	00ca1874a9adf7125f47f3ac	pending	ruby	series	\N	\N	0	1	2015-11-18 07:40:37	2015-11-18 07:40:37	152	{"series.rb":"class Series\\n  def initialize(values)\\n    @values = values\\n  end\\n\\n  def slices(n)\\n    raise ArgumentError if n \\u003e @values.length\\n    @values.chars.map(\\u0026:to_i).each_cons(n).to_a\\n  end\\nend"}
231	38	ccc578cac39c7bb76707452f	\N	python	rna-transcription	\N	\N	0	1	2015-07-19 15:57:57	2015-07-19 15:57:57	153	{"dna.py":"def to_rna(n):\\n\\tdict = {'G':'C', 'C':'G', 'T':'A', 'A':'U'}\\n\\tn.split()\\n\\tlst = []\\n\\tfor i in n: \\n\\t\\tlst.append(dict[i])\\n\\treturn ''.join(lst)"}
232	40	bc24295d8e46bfb98ff551a9	pending	perl5	triangle	\N	\N	0	1	2016-03-10 08:54:09	2016-03-10 08:54:09	154	{"Triangle.pm":"#!/usr/bin/perl -w\\n\\npackage Triangle;\\n\\nuse strict;\\nuse warnings;\\nuse Exporter;\\nuse vars qw($VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS);\\n\\n$VERSION     = 1.00;\\n@ISA         = qw(Exporter);\\n@EXPORT      = ();\\n@EXPORT_OK   = qw(kind);\\n%EXPORT_TAGS = ( DEFAULT =\\u003e [qw(\\u0026kind)]);\\n\\n\\nsub kind {\\n\\tmy (@input) = @_;\\n\\tforeach (@input) {\\n\\t\\tdie \\"TriangleError\\" if ( $_ \\u003c= 0 );\\n\\t}\\n\\tif ( ($input[0] + $input[1] \\u003c= $input[2]) \\n\\t\\t|| ($input[0] + $input[2] \\u003c= $input[1]) \\n\\t\\t|| ($input[2] + $input[1] \\u003c= $input[0])  ) {\\n\\t\\tdie \\"TriangleError\\" ;\\n\\t}\\n\\t\\t\\n\\tif ( ($input[0] == $input[1]) || ($input[0] == $input[2]) || ($input[1] == $input[2]) ) {\\n\\t\\tif ( ($input[0] == $input[1]) \\u0026\\u0026 ($input[0] == $input[2])) {\\n\\t\\t\\treturn \\"equilateral\\";\\n\\t\\t} else {\\n\\t\\t\\treturn \\"isosceles\\";\\n\\t\\t}\\n\\t} else {\\n\\t\\treturn \\"scalene\\";\\n\\t}\\n}\\n\\n1;"}
233	40	77324741c649175e2ba93198	\N	haskell	nth-prime	\N	\N	0	1	2016-02-13 11:16:56	2016-02-13 11:16:56	155	{"Prime.hs":"module Prime (nth)\\n    where\\n\\n\\nmerge :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\nmerge xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:merge xt ys\\n      EQ -\\u003e x:merge xt yt\\n      GT -\\u003e y:merge xs yt\\n\\ndiff :: Ord a =\\u003e [a] -\\u003e [a] -\\u003e [a]\\ndiff xs@(x:xt) ys@(y:yt) =\\n    case compare x y of\\n      LT -\\u003e x:diff xt ys\\n      EQ -\\u003e diff xt yt\\n      GT -\\u003e diff xs yt\\n\\nprimes :: [Int]\\nprimes = 2:3:5:7:11:13:diff [17,19..] nonprimes\\n    where nonprimes = foldr1 f $ map g $ tail primes\\n          f (x:xt) ys = x:merge xt ys\\n          g p = [p*n | n \\u003c- [p,p + 2..]]\\n\\nnth :: Int -\\u003e Int\\nnth = (primes!!) . pred"}
234	40	26bdc56adfcc60216b6a8534	pending	elixir	word-count	\N	\N	0	2	2016-02-19 11:55:33	2016-02-19 11:55:33	156	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    Regex.scan(~r/[^\\\\s:_!\\u0026@$%,\\\\^]+/, String.downcase(sentence))\\n      |\\u003e List.flatten\\n      |\\u003e Enum.reduce(%{}, \\u0026count_word/2)\\n  end\\n\\n  defp count_word(word, word_counts) do\\n    Map.update(word_counts, word, 1, \\u0026(\\u00261 + 1))\\n  end\\nend"}
235	40	ecdb7a94e2433f1d0b54c7db	superseded	elixir	word-count	\N	\N	0	1	2016-02-26 03:06:47	2016-02-26 03:06:47	156	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    sentence\\n      |\\u003e String.downcase\\n      |\\u003e String.split(~r/[\\\\s:_!\\u0026@$%,\\\\^]/)\\n      |\\u003e count(%{})\\n  end\\n\\n  defp count([], word_counts), do: word_counts\\n  defp count([\\"\\" | rest], word_counts), do: count(rest, word_counts)\\n  defp count([word | rest], word_counts) do\\n    current_count = Map.get(word_counts, word)\\n                        |\\u003e increment_count\\n    count(rest, Map.put(word_counts, word, current_count))\\n  end\\n\\n  defp increment_count(nil), do: 1\\n  defp increment_count(count), do: count + 1\\n\\nend"}
236	44	9b43f3c71eb3c318b462d54a	done	javascript	bob	\N	\N	0	1	2015-11-15 08:53:37	2015-11-15 08:53:37	157	{"bob.js":"var Bob = function() {\\n  this.hey = function(input) {\\n    if (input.match(/[a-zA-z1-9]/) == null) {\\n        return \\"Fine. Be that way!\\"\\n      } else if (input.toUpperCase() === input \\u0026\\u0026 input.match(/[a-zA-z]/) != null){\\n        return \\"Woah, chill out!\\";\\n      } else if (input[input.length - 1] === \\"?\\" ){\\n        return \\"Sure.\\";\\n      } else {\\n        return \\"Whatever.\\";\\n      }\\n  }\\n}\\n\\nexports.Bob = Bob;"}
237	46	6a605f12771a4cc9a0f98125	done	python	hamming	\N	\N	0	2	2015-11-22 13:30:01	2015-11-22 13:30:01	158	{"hamming.py":"def hamming(dna1, dna2):\\n\\thamming_distance = abs(len(dna1) - len(dna2)) \\n\\tfor n1, n2 in zip(dna1, dna2):\\n\\t\\tif n1 != n2: hamming_distance += 1\\n\\treturn hamming_distance"}
238	46	8bb849e994baa4085a407e20	superseded	python	hamming	\N	\N	0	1	2016-02-13 05:30:40	2016-02-13 05:30:40	158	{"hamming.py":"def hamming(dna1, dna2):\\n\\thamming_distance = abs(len(dna1) - len(dna2)) \\n\\tmin_len = min(len(dna1), len(dna2))\\n\\tfor n in range(min_len):\\n\\t\\tif dna1[n] != dna2[n]: hamming_distance += 1\\n\\treturn hamming_distance"}
239	48	ddb0bafe6bef9dfa1264c902	\N	ruby	binary	\N	\N	0	1	2015-10-18 23:00:06	2015-10-18 23:00:06	159	{"binary.rb":"class Binary\\n\\n  VERSION = 1\\n  BINARY_REGEX = /[01]+/\\n\\n  def initialize(binary_number)\\n    @binary_number = binary_number\\n    raise ArgumentError, \\"Argument is not a valid binary number\\" unless valid_binary?\\n  end\\n\\n  def to_decimal\\n    res = 0\\n    index = 0\\n    @binary_number.reverse.each_char do |char|\\n      res += (char.to_i * (2 ** index))\\n      index += 1\\n    end\\n    res\\n  end\\n\\n  def valid_binary?\\n    BINARY_REGEX.match(@binary_number) \\u0026\\u0026 BINARY_REGEX.match(@binary_number)[0] == @binary_number\\n  end\\n\\nend"}
240	48	93a1466ee79edf34eb217f2f	\N	haskell	space-age	\N	\N	0	1	2015-10-28 23:17:05	2015-10-28 23:17:05	160	{"SpaceAge.hs":"module SpaceAge where\\n\\nimport Data.Maybe (fromJust)\\n\\ndata Planet = Mercury | Venus | Earth | Mars | Jupiter | Saturn | Uranus | Neptune deriving (Show, Eq)\\n\\nageOn :: Planet -\\u003e Integer -\\u003e Double\\nageOn p s = (fromIntegral s) / 31557600.0 / (fromJust $ lookup p planets) where\\n    planets = [(Mercury, 0.2408467), (Venus, 0.61519726), (Earth, 1.0), (Mars, 1.8808158), (Jupiter, 11.862615), (Saturn, 29.447498), (Uranus, 84.016846), (Neptune, 164.79132)]"}
241	49	d4b1c97e61e91f4d05610f66	superseded	cpp	word-count	\N	\N	0	3	2016-02-18 08:44:10	2016-02-18 08:44:10	161	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram result = histogram();\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized(text);\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex           re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.begin(), normalized.end(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
242	49	1908e316ef1151a9b3d4a0c7	superseded	cpp	word-count	\N	\N	0	1	2016-03-05 22:13:48	2016-03-05 22:13:48	161	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nstd::map\\u003cstd::string, int\\u003e update(std::map\\u003cstd::string, int\\u003e map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nstd::map\\u003cstd::string, int\\u003e word_count::words(std::string text) {\\n  // a map holding the result set\\n  std::map\\u003cstd::string, int\\u003e result = std::map\\u003cstd::string, int\\u003e();\\n  // a normalized version of the incomming text\\n  std::string                normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e   word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  std::map\\u003cstd::string, int\\u003e words(std::string text);\\n}\\n\\n#endif"}
243	49	0a422bd3c1fa6d8c50f4b8b0	superseded	cpp	word-count	\N	\N	0	2	2016-03-15 06:22:30	2016-03-15 06:22:30	161	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003csstream\\u003e\\n#include \\u003cregex\\u003e\\n\\n/** Split a string by delimeter, helper function */\\nstd::vector\\u003cstd::string\\u003e \\u0026split(const std::string \\u0026s, char delim, std::vector\\u003cstd::string\\u003e \\u0026elems) {\\n  std::stringstream ss(s);\\n  std::string       item;\\n  while (std::getline(ss, item, delim)) {\\n    if (!item.empty()) { elems.push_back(item); }\\n  }\\n  return elems;\\n}\\n\\n/** Split a string by delimeter, meant for direct use */\\nstd::vector\\u003cstd::string\\u003e split(const std::string \\u0026s, char delim) {\\n  std::vector\\u003cstd::string\\u003e elems;\\n  split(s, delim, elems);\\n  return elems;\\n}\\n\\n/** update a single word in the map */\\nword_count::histogram update(word_count::histogram map, std::string word) {\\n  if (map.find(word) != map.end()) {\\n    map[word] += 1;\\n  } else {\\n    map[word] = 1;\\n  }\\n  return map;\\n}\\n\\n/** Solve the exercise */\\nword_count::histogram word_count::words(std::string text) {\\n  // a map holding the result set\\n  histogram                result = histogram();\\n  // a normalized version of the incomming text\\n  std::string              normalized(text);\\n  // a vector containing the words\\n  std::vector\\u003cstd::string\\u003e word_vec;\\n\\n  // normalize the string by lowercasing it...\\n  std::transform(text.begin(), text.end(), normalized.begin(), ::tolower);\\n  // ... and then remove unnecessary punctuation\\n  normalized = std::regex_replace(normalized, std::regex(\\"\\\\\\\\W'+|'+\\\\\\\\W|[^[:alnum:]' ]\\"), \\" \\");\\n\\n  // split words into vector\\n  word_vec = split(normalized, ' ');\\n\\n  // accumulate the result\\n  result = std::accumulate(word_vec.begin(), word_vec.end(), result, update);\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
244	49	070473b10b2654f3ab1d948d	needs_input	cpp	word-count	\N	\N	0	4	2016-03-26 12:30:12	2016-03-26 12:30:12	161	{"word_count.cpp":"#include \\"word_count.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cregex\\u003e\\n\\nword_count::histogram word_count::words(std::string const text) {\\n  // a map holding the result set\\n  histogram result = histogram{};\\n\\n  // normalize the string by lowercasing it...\\n  std::string normalized {text};\\n  std::transform(text.cbegin(), text.cend(), normalized.begin(), ::tolower);\\n\\n  // Preparing word-wise iterator\\n  std::regex const     re {\\"[[:alnum:]](?:[[:alnum:]']*[[:alnum:]])?\\"};\\n  std::sregex_iterator re_iterator {normalized.cbegin(), normalized.cend(), re};\\n\\n  // accumulate the result\\n  std::for_each(re_iterator, std::sregex_iterator{}, [\\u0026result](std::smatch const \\u0026m) {\\n    ++result[m.str()];\\n  });\\n\\n  return result;\\n}","word_count.h":"#ifndef WORDCOUNT_H_GUARD\\n#define WORDCOUNT_H_GUARD\\n\\n#include \\u003cmap\\u003e\\n#include \\u003cstring\\u003e\\n\\nnamespace word_count {\\n  /** How often a word occurs */\\n  typedef std::map\\u003cstd::string, int\\u003e histogram;\\n\\n  /** returns the histogram to a given text */\\n  histogram words(std::string text);\\n}\\n\\n#endif"}
245	49	31548a8d9ff3d565310400d9	superseded	ruby	secret-handshake	\N	\N	0	1	2016-02-16 02:09:02	2016-02-16 02:09:02	162	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def actions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
246	49	01cd1c5f91a290d53b0828c5	superseded	ruby	secret-handshake	\N	\N	0	2	2016-02-25 20:55:19	2016-02-25 20:55:19	162	{"secret-handshake.rb":"class SecretHandshake  \\n  attr_reader :negative, :source\\n\\n  def initialize(mark)\\n    if mark.kind_of?(Fixnum)\\n      binary = mark.to_s(2).reverse\\n      @source = binary[0..3]\\n      @negative = (binary[4] == \\"1\\")\\n    else\\n      @source = \\"\\"\\n    end\\n  end\\n\\n  def reactions\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end \\n\\n  def actions_for(data)\\n    results = []\\n    source.chars.each_with_index do |numeral, index|\\n      if numeral == \\"1\\"\\n        key = numeral + (\\"0\\" * index)\\n        results \\u003c\\u003c actions[key]\\n      end\\n    end\\n    results\\n  end\\n\\n  def negative?\\n    negative\\n  end\\n\\n  def commands\\n    if negative?\\n      actions_for(source).reverse\\n    else\\n      actions_for(source)\\n    end\\n  end\\nend"}
247	49	86e4166e31373055cf6d0509	superseded	ruby	secret-handshake	\N	\N	0	3	2016-02-27 13:35:10	2016-02-27 13:35:10	162	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c known_commands[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def known_commands\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
248	49	77fa0b37a9156522930bdbcd	done	ruby	secret-handshake	\N	\N	0	4	2016-03-11 00:38:48	2016-03-11 00:38:48	162	{"secret-handshake.rb":"class SecretHandshake\\n  attr_reader :insignia\\n\\n  def initialize(indicate)\\n    @insignia = indicate\\n  end\\n\\n  def commands\\n    return [] unless insignia.kind_of?(Fixnum)\\n    nullifer == \\"1\\" ? actions.reverse : actions\\n  end\\n\\n  private\\n\\n  def actions\\n    results = []\\n    transformation.map.with_index do |digit, i|\\n      if digit == \\"1\\"\\n        key = digit + (\\"0\\" * i)\\n        results \\u003c\\u003c mandate[key]\\n      end\\n    end\\n\\n    results\\n  end\\n\\n  def mandate\\n    {\\n      \\"1\\"    =\\u003e \\"wink\\",\\n      \\"10\\"   =\\u003e \\"double blink\\",\\n      \\"100\\"  =\\u003e \\"close your eyes\\",\\n      \\"1000\\" =\\u003e \\"jump\\"\\n    }\\n  end\\n\\n  def to_binary\\n    \\"%b\\" % insignia\\n  end\\n\\n  def transformation\\n   synthesize_transformation[0,4]\\n  end\\n\\n  def synthesize_transformation\\n    to_binary.chars.reverse\\n  end\\n\\n  def nullifer\\n    synthesize_transformation[4]\\n  end\\nend"}
249	49	fa9752e38d9117915531ae89	done	ruby	strain	\N	\N	0	1	2016-02-13 20:59:23	2016-02-13 20:59:23	163	{"array.rb":"class Array\\n\\n  def keep\\n    map { |e| e if yield(e) }.compact\\n  end\\n\\n  def discard\\n    map { |e| e unless yield(e) }.compact\\n  end\\n\\nend"}
250	49	87edd8c343f26ed4f6db36c4	\N	javascript	word-count	\N	\N	0	1	2016-02-14 07:04:29	2016-02-14 07:04:29	164	{"word-count.js":"module.exports = function(sentence) {\\n  var amounts = {};\\n  var words = sentence.replace(/(\\\\t|\\\\n|\\\\s)+/g, ' ').trim().split(' ');\\n  for (var i = 0; i \\u003c words.length; i++) {\\n    amounts[words[i]] = parseInt(amounts[words[i]]) || 0;\\n    amounts[words[i]]++;\\n  }\\n\\n  return amounts;\\n};"}
251	49	d52cc3daff04835711089911	superseded	ruby	hamming	\N	\N	0	1	2016-02-19 06:53:45	2016-02-19 06:53:45	165	{"hamming.rb":"class Hamming\\n  def self.compute(a,b)\\n    arr1 = a.split('')\\n    arr2 = b.split('')\\n    count = 0\\n    \\n    arr1.length.times do |i|\\n      if arr1[i] != arr2[i]\\n        count = count + 1\\n      end\\n    end\\n    \\n    return count\\n  end\\nend"}
252	49	42ab66339dbc9cacb71b1ea4	hibernating	ruby	hamming	\N	\N	0	2	2016-02-24 21:43:54	2016-02-24 21:43:54	165	{"hamming.rb":"class Hamming\\n  def self.compute(a,b)\\n    a.chars.zip(b.chars).count { |x, y| x != y }\\n  end\\nend"}
253	26	92e5f25bbf75665000b444b8	pending	ocaml	bob	\N	\N	0	1	2016-03-04 23:53:50	2016-03-04 23:53:50	166	{"/ocaml/bob/bob.ml":"open Core.Std\\n\\n(* We can't really use String.is_empty because we have to handle strings\\n   that only contain whitespace. *)\\nlet is_empty = String.for_all ~f:Char.is_whitespace\\n\\nlet is_shouting input =\\n  String.exists ~f:Char.is_alpha input \\u0026\\u0026\\n  String.for_all ~f:Char.is_uppercase (String.filter ~f:Char.is_alpha input)\\n\\nlet is_question = String.is_suffix ~suffix:\\"?\\"\\n\\nlet response_for = function\\n  | input when is_empty input    -\\u003e \\"Fine. Be that way!\\"\\n  | input when is_shouting input -\\u003e \\"Whoa, chill out!\\"\\n  | input when is_question input -\\u003e \\"Sure.\\"\\n  | _                            -\\u003e \\"Whatever.\\""}
254	26	6a8aeec516ebc1732ae4e7a2	\N	ruby	phone-number	\N	\N	0	2	2015-12-15 10:47:29	2015-12-15 10:47:29	167	{"phone_number.rb":"class PhoneNumber\\n  @@default_number = '0000000000'\\n  attr_reader :number\\n\\n  def initialize(number)\\n    @number = number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_number\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_number\\n    @number = @@default_number unless valid_content?\\n    @number = @number[1..-1] if @number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @number\\n  end\\nend"}
255	26	987286e18282d2eef21e3332	\N	ruby	phone-number	\N	\N	0	1	2016-03-09 07:25:10	2016-03-09 07:25:10	167	{"phone_number.rb":"class PhoneNumber\\n  def initialize(phone_number)\\n    @phone_number = phone_number.chars.select do |c|\\n      !/[^\\\\w]/.match(c)\\n    end.join\\n    filter_phone_number\\n  end\\n\\n  def number\\n    @phone_number\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{@phone_number[0..2]}) #{@phone_number[3..5]}-#{@phone_number[6..-1]}\\"\\n  end\\n\\n  private\\n\\n  def filter_phone_number\\n    @phone_number = '0000000000' unless valid_content?\\n    @phone_number = @phone_number.sub(/\\\\A1/, '') if @phone_number.size == 11\\n  end\\n\\n  def valid_content?\\n    /\\\\A1?[\\\\d]{10}\\\\Z/ =~ @phone_number\\n  end\\nend"}
256	26	6b495fcecd0a649a5b6f03b8	pending	scala	bob	\N	\N	0	1	2015-12-12 03:18:36	2015-12-12 03:18:36	168	{"Bob.scala":"/**\\n * A lackadaisical teenager that can have limited conversations.\\n */\\nclass Bob {\\n\\n  /** A regular expression to determine if a message is a question. */\\n  private val question = \\"\\"\\"\\\\?$\\"\\"\\".r.unanchored\\n  /** A regular expression to determine if a message is silent. */\\n  private val silence = \\"\\"\\"\\\\s*\\"\\"\\".r\\n\\n  /**\\n   * Talk to Bob.\\n   *\\n   * @param message What to say to Bob.\\n   * @return Bob's reponse.\\n   */\\n  def hey(message: String): String = message match {\\n\\n    case silence(_*) =\\u003e \\"Fine. Be that way!\\"\\n    case _ if isShout(message) =\\u003e \\"Whoa, chill out!\\"\\n    case question(_*) =\\u003e \\"Sure.\\"\\n    case _ =\\u003e \\"Whatever.\\"\\n  }\\n\\n  /**\\n   * Determine whether a message is shouting.\\n   *\\n   * @param message The message that may be shouting.\\n   * @return True if the message is shouting, or false otherwise.\\n   */\\n  private def isShout(message: String): Boolean = {\\n\\n    val isUpperCase = message == message.toUpperCase\\n    isUpperCase \\u0026\\u0026 message.matches(\\".*[A-Z].*\\")\\n  }\\n}"}
257	26	0f8a614ffdffdc47ff30645f	superseded	go	clock	\N	\N	0	1	2015-12-24 02:32:57	2015-12-24 02:32:57	169	{"clock.go":"package clock\\n\\nimport \\"fmt\\"\\n\\ntype Clock struct {\\n  Hours, Minutes int\\n}\\n\\nfunc New(hours int, minutes int) Clock {\\n  return Clock{hours, minutes}\\n}\\n\\nfunc (c Clock) String() string {\\n  return fmt.Sprintf(\\"%02d:%02d\\", c.Hours, c.Minutes)\\n}\\n\\nfunc (c Clock) Add(minutes int) Clock {\\n  new_mins, new_hours := c.Minutes + minutes, c.Hours\\n  // ensure mins are in range\\n  for new_mins \\u003e= 60 {\\n    new_hours += 1\\n    new_mins -= 60\\n  }\\n  for new_mins \\u003c 0 {\\n    new_hours -= 1\\n    new_mins += 60\\n  }\\n  // ensure hours are in range\\n  for new_hours \\u003e= 24 { new_hours -= 24 }\\n  for new_hours \\u003c 0 { new_hours += 24 }\\n  return Clock{new_hours, new_mins}\\n}"}
258	26	1150796bcce7bc0610d1d44c	pending	go	clock	\N	\N	0	2	2015-12-28 11:24:13	2015-12-28 11:24:13	169	{"clock.go":"package clock\\n\\nimport \\"fmt\\"\\n\\nconst (\\n  minsPerHour = 60\\n  hoursPerDay = 24\\n  minsPerDay = minsPerHour * hoursPerDay\\n)\\n\\ntype Clock struct {\\n  mins Modular\\n}\\n\\n// Creates a new instance of a clock\\n//\\n// hours - the number of hours\\n// minutes - the number of minutes\\nfunc New(hours int, minutes int) Clock {\\n  return Clock{NewMod(minsPerDay).Add(hours * minsPerHour + minutes)}\\n}\\n\\n// Private: gets the number of hours shown on the clock\\nfunc (c Clock) hours() int {\\n  return (c.mins.Value() / minsPerHour) % hoursPerDay\\n}\\n\\n// Private: gets the number of minutes shown on the clock\\nfunc (c Clock) minutes() int {\\n  return c.mins.Value() % minsPerHour\\n}\\n\\n// Public: gets the current time on the clock in a human readable form\\nfunc (c Clock) String() string {\\n  return fmt.Sprintf(\\"%02d:%02d\\", c.hours(), c.minutes())\\n}\\n\\n// Public: Adds a number of minutes to the time on the clock\\nfunc (c Clock) Add(minutes int) Clock {\\n  return Clock{c.mins.Add(minutes)}\\n}\\n\\n// Modular type\\ntype Modular struct {\\n  limit, value int\\n}\\n\\n// Public: create a new instance of a modular type\\n//\\n// limit - the modulus, i.e. limit 3 gives values between 0 and 2\\nfunc NewMod(limit int) Modular {\\n  return Modular{limit, 0}\\n}\\n\\n// Public: add a number to an existing modular type\\n//\\n// addend - the amount to add, if negative it will be subtracted.\\nfunc (m Modular) Add(addend int) Modular {\\n  for addend \\u003c 0 {\\n    addend += m.limit\\n  }\\n  return Modular{m.limit, (m.value + addend) % m.limit}\\n}\\n\\n// Public: gets the current value of a modular instance\\nfunc (m Modular) Value() int {\\n  return m.value;\\n}"}
259	26	b134911b551144b4f8d8f66b	\N	javascript	etl	\N	\N	0	1	2015-12-17 18:49:42	2015-12-17 18:49:42	170	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n  for (var i = 1; i \\u003c= points[points.length - 1]; i++) {\\n    if (old[i]) {\\n      old[i].forEach(function(letter) {\\n        expected[letter.toLowerCase()] = i;\\n      });\\n    }\\n  }\\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
260	26	66c47828ae5b534da7316b3a	\N	javascript	etl	\N	\N	0	2	2015-12-19 05:30:47	2015-12-19 05:30:47	170	{"etl.js":"var ETL = function () {};\\n\\nETL.prototype.transform = function(old) {\\n  var expected = {},\\n      points = Object.keys(old);\\n\\n  function processKeys(key) {\\n    old[key].forEach(function(letter) {\\n      expected[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n\\n  points.forEach(processKeys);\\n  \\n  return expected;\\n};\\n\\nmodule.exports = ETL;"}
261	26	bfc75c6d54ae9aac2771ea93	pending	ruby	hello-world	\N	\N	0	1	2016-01-23 22:45:58	2016-01-23 22:45:58	171	{"hello_world.rb":"class HelloWorld\\r\\n  def self.hello (name='World')\\r\\n    \\"Hello, \\" + name + \\"!\\"\\r\\n  end\\r\\n\\r\\nend"}
262	26	893d833791312f41ce280d22	\N	python	pangram	\N	\N	0	1	2015-12-27 17:57:48	2015-12-27 17:57:48	172	{"pangram.py":"def is_pangram(s):\\n     return not set('abcdefghijklmnopqrstuvwxyz') - set(s.lower())"}
263	26	915832e9532c12873c939f1c	\N	elixir	gigasecond	\N	\N	0	1	2015-12-19 15:18:00	2015-12-19 15:18:00	173	{"gigasecond.exs":"defmodule Gigasecond do\\n\\t@doc \\"\\"\\"\\n\\tCalculate a date one billion seconds after an input date.\\n\\t\\"\\"\\"\\n\\n\\t@spec from({pos_integer, pos_integer, pos_integer}) :: :calendar.date\\n\\tdef from(date) do\\n    { days_passed, _date } = round(:math.pow(10, 9)) |\\u003e :calendar.seconds_to_daystime\\n    gregorian_days = :calendar.date_to_gregorian_days(date)\\n    :calendar.gregorian_days_to_date (days_passed + gregorian_days)\\n\\tend\\nend"}
264	26	628eb91f148fee744f1bb911	\N	elixir	gigasecond	\N	\N	0	2	2016-01-15 20:01:00	2016-01-15 20:01:00	173	{"gigasecond.exs":"defmodule Gigasecond do\\n\\t@doc \\"\\"\\"\\n\\tCalculate a date one billion seconds after an input date.\\n\\t\\"\\"\\"\\n\\n\\t@spec from({pos_integer, pos_integer, pos_integer}) :: :calendar.date\\n\\tdef from(date) do\\n    { days_passed, _date } = round(:math.pow(10, 9)) |\\u003e :calendar.seconds_to_daystime\\n    date\\n    |\\u003e :calendar.date_to_gregorian_days\\n    |\\u003e + days_passed\\n    |\\u003e :calendar.gregorian_days_to_date\\n\\tend\\nend"}
265	26	e0ca0ac7ac0ce2c356ed2677	\N	ruby	space-age	\N	\N	0	1	2016-01-11 10:23:50	2016-01-11 10:23:50	174	{"space_age.rb":"class SpaceAge\\n  ORBITS = {\\n    mercury: 0.2408467,\\n    venus: 0.61519726,\\n    mars: 1.8808158,\\n    jupiter: 11.862615,\\n    saturn: 29.447498,\\n    uranus: 84.016846,\\n    neptune: 164.79132\\n  }\\n\\n  attr_accessor :seconds\\n\\n  def initialize(age)\\n    @seconds = age\\n  end\\n\\n  def on_earth\\n    @seconds.to_f / 315_576_00\\n  end\\n\\n  ORBITS.keys.each do |planet|\\n    define_method \\"on_#{planet}\\" do\\n      on_earth / ORBITS[planet]\\n    end\\n  end\\nend"}
266	26	7f75b5e46aa17cf8e6c9d2d8	pending	ruby	series	\N	\N	0	1	2015-12-20 12:39:42	2015-12-20 12:39:42	175	{"series.rb":"class Series\\n  def initialize (string)\\n    @string = string\\n  end\\n\\n  def slices (number)\\n    raise ArgumentError if number \\u003e @string.length\\n    start = 0\\n    finish = number - 1\\n    sliced = []\\n    until finish == @string.length\\n      slice = []\\n      (start..finish).each do |i|\\n        slice \\u003c\\u003c @string[i].to_i\\n      end\\n      start += 1\\n      finish +=1\\n      sliced \\u003c\\u003c slice\\n    end\\n    sliced\\n  end\\nend"}
267	26	8e8be745a3d7c918cf85b86c	done	cpp	word-count	\N	\N	0	1	2015-12-19 01:07:30	2015-12-19 01:07:30	176	{"word_count.cpp":"#include \\u003cmap\\u003e\\n#include \\u003cboost/algorithm/string/case_conv.hpp\\u003e\\n#include \\u003cboost/algorithm/string/split.hpp\\u003e\\n#include \\u003cboost/algorithm/string/classification.hpp\\u003e\\n\\nusing namespace boost;\\n\\nnamespace word_count\\n{\\n    const std::map\\u003cstd::string, int\\u003e words(const char *in)\\n    {\\n\\tstd::string inString(in);\\n\\t\\n\\tstd::vector\\u003cstd::string\\u003e wordList; \\n\\tsplit(wordList, inString, is_punct() || is_space());\\n\\t\\n\\tstd::map\\u003cstd::string, int\\u003e countMap;\\n\\tfor(std::string\\u0026 myStr : wordList)\\n\\t{\\n\\t    to_lower(myStr);\\n\\t    if(countMap.count(myStr) \\u003e 0)\\n\\t    {\\n\\t\\tcountMap[myStr]++;\\n\\t    }\\n\\t    else if (!myStr.empty())\\n\\t    {\\n\\t\\tcountMap.insert( std::pair\\u003cstd::string, int\\u003e(myStr, 1));\\n\\t    }\\n\\t}\\n\\t\\n\\treturn countMap;\\n    }\\n};"}
268	26	e0550192dac06d5bc2c68b31	pending	cpp	triangle	\N	\N	0	1	2016-03-18 08:03:26	2016-03-18 08:03:26	177	{"triangle.cpp":"#include \\"triangle.hpp\\"\\n#include \\u003ciostream\\u003e\\n#include \\u003calgorithm\\u003e\\n\\nnamespace triangle\\n{\\n   Classification kind( double side_a, double side_b, double side_c, double precision )\\n   {\\n      //Let 'em specify precision either way\\n      auto factor = std::max( 2.0 / precision, precision );\\n      return kind( int(factor*side_a), int(factor*side_b), int(factor*side_c) );\\n   }\\n   Classification kind( int side_a, int side_b, int side_c )\\n   {\\n      return kind( {side_a, side_b, side_c} );\\n   }\\n   Classification kind( std::array\\u003cint,3\\u003e sides )\\n   {\\n      std::sort( std::begin(sides), std::end(sides) );\\n      if ( sides[0] == 0 )\\n         throw std::domain_error( \\"Anyone know why we're not returning ILLEGAL here?\\" );\\n      if ( sides[0] + sides[1] \\u003c= sides[2] )\\n         return Classification::ILLEGAL;\\n      if ( sides[0] == sides[2] )\\n         return Classification::EQUILATERAL;\\n      if ( sides[0] == sides[1] || sides[1] == sides[2] )\\n         return Classification::ISOSCELES;\\n      return Classification::SCALENE;\\n   }\\n   std::ostream\\u0026 operator\\u003c\\u003c( std::ostream\\u0026 s, triangle::Classification c )\\n   {\\n      switch ( c )\\n      {\\n         case Classification::EQUILATERAL:\\n            return s \\u003c\\u003c \\"Equilateral\\";\\n         case Classification::ISOSCELES:\\n            return s \\u003c\\u003c \\"Isosceles\\";\\n         case Classification::SCALENE:\\n            return s \\u003c\\u003c \\"Scalene\\";\\n         case Classification::ILLEGAL:\\n            return s \\u003c\\u003c \\"Illegal\\";\\n      }\\n      return s \\u003c\\u003c \\"HUH?!\\";\\n   }\\n}","triangle.hpp":"#ifndef TRIANGLE_HPP_INCLUDED\\n#define TRIANGLE_HPP_INCLUDED 1\\n\\n#include \\u003ciosfwd\\u003e\\n#include \\u003carray\\u003e\\n\\nnamespace triangle\\n{\\n   enum class Classification\\n   {\\n      ILLEGAL,\\n      EQUILATERAL,\\n      ISOSCELES,\\n      SCALENE\\n   };\\n   std::ostream\\u0026 operator\\u003c\\u003c( std::ostream\\u0026 s, Classification c );\\n   \\n   Classification kind( int side_a, int side_b, int side_c );\\n   Classification kind( double side_a, double side_b, double side_c, double precision = 1E-3 );\\n   Classification kind( std::array\\u003cint,3\\u003e sides );\\n   \\n   //For compatibility\\n   namespace {\\n      const auto equilateral = Classification::EQUILATERAL;\\n      const auto isosceles = Classification::ISOSCELES;\\n      const auto scalene = Classification::SCALENE;\\n      const auto illegal = Classification::ILLEGAL;\\n   }\\n}\\n\\n\\n#endif"}
269	26	59d1adb6713966a0dec29be2	pending	clojure	binary	\N	\N	0	2	2016-01-04 00:13:58	2016-01-04 00:13:58	178	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map-indexed vector (reverse binary))\\n       (filter #(= (second %) \\\\1))\\n       (map first)\\n       (map #(bit-shift-left 1 %))\\n       (reduce +)))"}
270	26	f94671c0bf2a5cedb028d609	superseded	clojure	binary	\N	\N	0	1	2016-01-21 13:52:32	2016-01-21 13:52:32	178	{"binary.clj":"(ns binary)\\n\\n(defn to-decimal\\n  [binary]\\n  (-\\u003e\\u003e (map vector\\n            (reverse binary)\\n            (iterate #(* % 2) 1))\\n       (filter #(= (first %) \\\\1))\\n       (map last)\\n       (reduce +)))"}
271	26	5cae6707e64071cfc6ee296b	superseded	ruby	accumulate	\N	\N	0	1	2015-12-14 13:28:22	2015-12-14 13:28:22	179	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    result = []\\n    each do |item|\\n      result \\u003c\\u003c yield(item)\\n    end\\n    result\\n  end\\nend"}
272	26	7caf477d5600e8e33f877422	hibernating	ruby	accumulate	\N	\N	0	2	2016-02-13 13:33:44	2016-02-13 13:33:44	179	{"/ruby/accumulate/accumulate.rb":"class Array\\n  def accumulate\\n    if block_given?\\n      result = []\\n      each do |item|\\n        result \\u003c\\u003c yield(item)\\n      end\\n      result\\n    else\\n      to_enum\\n    end\\n  end\\nend"}
273	26	bfdd80593afc0bac1295812c	needs_input	erlang	sum-of-multiples	\N	\N	0	1	2016-01-04 13:31:11	2016-01-04 13:31:11	180	{"/erlang/sum-of-multiples/sum_of_multiples.erl":"-module(sum_of_multiples).\\n-export([sumOfMultiples/2, sumOfMultiplesDefault/1]).\\n\\n\\n\\n-spec(sumOfMultiplesDefault(integer())-\\u003einteger()).\\nsumOfMultiplesDefault(Ceil) -\\u003e\\n    sumOfMultiples([3,5], Ceil).\\n\\n-spec(sumOfMultiples([integer()], integer())-\\u003einteger()).\\nsumOfMultiples(L, Ceil) -\\u003e\\n    sumOfMultiples(L, Ceil-1, 0).\\n\\nsumOfMultiples(_, 0, Accu) -\\u003e\\n    Accu;\\nsumOfMultiples(L, Ceil, Accu) -\\u003e\\n    Accu1 = case is_multiples_of(L, Ceil) of\\n\\t\\ttrue -\\u003e Accu + Ceil;\\n\\t\\tfalse -\\u003e Accu\\n\\t    end,\\n    sumOfMultiples(L, Ceil-1, Accu1).\\n\\nis_multiples_of(L, Int) -\\u003e\\n    lists:any(fun(X) -\\u003e Int rem X == 0 end,L)."}
274	26	656134bf5d6f0b4d7b660a60	done	python	word-count	\N	\N	0	1	2015-12-20 11:37:57	2015-12-20 11:37:57	181	{"wordcount.py":"\\r\\nfrom collections import Counter\\r\\nimport re\\r\\n\\r\\n\\r\\ndef word_count(s):\\r\\n    split = re.split(r' |\\\\n', s)\\r\\n    count = Counter(split)\\r\\n    del count['']\\r\\n    return count\\r\\n\\r\\n\\r"}
275	26	f6cba1fd7804c49751514c5c	\N	haskell	space-age	\N	\N	0	1	2016-01-08 00:03:30	2016-01-08 00:03:30	182	{"SpaceAge.hs":"module SpaceAge\\n       ( Planet(..)\\n       , ageOn\\n       ) where\\n\\ndata Planet\\n    = Earth\\n    | Mercury\\n    | Venus\\n    | Mars\\n    | Jupiter\\n    | Saturn\\n    | Uranus\\n    | Neptune\\n    deriving (Eq, Show)\\n\\nageOn :: Planet -\\u003e Double -\\u003e Double\\nageOn p = (/ yearOn p)\\n\\n-- Given a planet, returns the duration of this planet's years, in seconds.\\nyearOn :: Planet -\\u003e Double\\nyearOn Earth   = ratioToSeconds 1\\nyearOn Mercury = ratioToSeconds 0.2408467\\nyearOn Venus   = ratioToSeconds 0.61519726\\nyearOn Mars    = ratioToSeconds 1.8808158\\nyearOn Jupiter = ratioToSeconds 11.862615\\nyearOn Saturn  = ratioToSeconds 29.447498\\nyearOn Uranus  = ratioToSeconds 84.016846\\nyearOn Neptune = ratioToSeconds 164.79132\\n\\n-- Given a ratio (planet year / earth year), returns the corresponding\\n-- duration, in seconds.\\nratioToSeconds :: Double -\\u003e Double\\nratioToSeconds = (* 31557600)"}
276	26	88ff8b1766fdeab93dfb861b	\N	haskell	space-age	\N	\N	0	2	2016-01-14 07:07:46	2016-01-14 07:07:46	182	{"SpaceAge.hs":"module SpaceAge\\n       ( Planet(..)\\n       , ageOn\\n       ) where\\n\\ndata Planet\\n    = Earth\\n    | Mercury\\n    | Venus\\n    | Mars\\n    | Jupiter\\n    | Saturn\\n    | Uranus\\n    | Neptune\\n    deriving (Eq, Show)\\n\\nageOn :: Fractional a =\\u003e Planet -\\u003e a -\\u003e a\\nageOn p = (/ yearOn p)\\n\\n-- Given a planet, returns the duration of this planet's years, in seconds.\\nyearOn :: Fractional a =\\u003e Planet -\\u003e a\\nyearOn planet = (31557600 *) $\\n    case planet of\\n      Earth   -\\u003e 1\\n      Mercury -\\u003e 0.2408467\\n      Venus   -\\u003e 0.61519726\\n      Mars    -\\u003e 1.8808158\\n      Jupiter -\\u003e 11.862615\\n      Saturn  -\\u003e 29.447498\\n      Uranus  -\\u003e 84.016846\\n      Neptune -\\u003e 164.79132"}
277	26	744e9c8de313ae8adf3a3b1c	\N	haskell	space-age	\N	\N	0	3	2016-02-09 10:36:31	2016-02-09 10:36:31	182	{"SpaceAge.hs":"module SpaceAge\\n       ( Planet(..)\\n       , ageOn\\n       ) where\\n\\ndata Planet\\n    = Earth\\n    | Mercury\\n    | Venus\\n    | Mars\\n    | Jupiter\\n    | Saturn\\n    | Uranus\\n    | Neptune\\n    deriving (Eq, Show)\\n\\nageOn :: Fractional a =\\u003e Planet -\\u003e a -\\u003e a\\nageOn p = (/ yearOn p)\\n\\n-- Given a planet, returns the duration of this planet's years, in seconds.\\nyearOn :: Fractional a =\\u003e Planet -\\u003e a\\nyearOn planet = 31557600 *\\n    case planet of\\n      Earth   -\\u003e 1\\n      Mercury -\\u003e 0.2408467\\n      Venus   -\\u003e 0.61519726\\n      Mars    -\\u003e 1.8808158\\n      Jupiter -\\u003e 11.862615\\n      Saturn  -\\u003e 29.447498\\n      Uranus  -\\u003e 84.016846\\n      Neptune -\\u003e 164.79132"}
278	26	9ce8cc957a487e94e04c0838	\N	scala	allergies	\N	\N	0	1	2015-12-19 08:38:57	2015-12-19 08:38:57	183	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n  type Allergens = List[Allergen]\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
279	26	164d820d53fe400b462628dd	\N	scala	allergies	\N	\N	0	2	2015-12-29 03:56:00	2015-12-29 03:56:00	183	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen, score: Score): Boolean =\\n    isInScore(score)(allergen)\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter isInScore(score)\\n\\n  private def isInScore(score: Score)(allergen: Allergen): Boolean =\\n    scoreToValues(score)(allergen.value)\\n\\n  private def scoreToValues(score: Score): Set[Value] = {\\n    def binaryWithIndexToValue: PartialFunction[(Char,Int),Value] = {\\n      case (char, index) if char == '1' =\\u003e math.pow(2, index) toInt\\n    }\\n\\n    val binariesWithIndex: Seq[(Char, Int)] =\\n      score.toBinaryString.reverse.zipWithIndex\\n    binariesWithIndex collect binaryWithIndexToValue toSet\\n  }\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
280	26	56188f021b4aa4821ed48744	\N	scala	allergies	\N	\N	0	3	2016-01-24 19:54:29	2016-01-24 19:54:29	183	{"src/main/scala/Allergies.scala":"object Allergies {\\n\\n  import Allergen._\\n\\n  // needed for the tests to compile and run\\n  def apply() = this\\n\\n  type Score = Int\\n\\n  def isAllergicTo(allergen: Allergen.Allergen, score: Score) =\\n    (allergen.value \\u0026 score) == allergen.value\\n\\n  def allergies(score: Score): Allergens =\\n    AllAllergens filter (isAllergicTo(_, score))\\n}\\n\\nobject Allergen {\\n  type Value = Int\\n  type Allergens = List[Allergen]\\n\\n  sealed trait Allergen { val value: Value }\\n  object Eggs extends Allergen { override val value = 1 }\\n  object Peanuts extends Allergen { override val value = 2 }\\n  object Shellfish extends Allergen { override val value = 4 }\\n  object Strawberries extends Allergen { override val value = 8 }\\n  object Tomatoes extends Allergen { override val value = 16 }\\n  object Chocolate extends Allergen { override val value = 32 }\\n  object Pollen extends Allergen { override val value = 64 }\\n  object Cats extends Allergen { override val value = 128 }\\n\\n  val AllAllergens: Allergens =\\n    List(Eggs, Peanuts, Shellfish, Strawberries, Tomatoes, Chocolate, Pollen, Cats)\\n}"}
281	26	c0870efadd3b3fc585001430	needs_input	ruby	word-count	\N	\N	0	3	2015-12-15 01:36:54	2015-12-15 01:36:54	184	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(phrase)\\n    @phrase = phrase.scan(/[\\\\w']+/)\\n  end\\n\\n  def word_count\\n    counter = Hash.new(0)\\n    @phrase.each do | word |\\n      counter[word.downcase] +=1\\n    end\\n    counter\\n  end\\nend\\n\\n# test = Phrase.new('one fish two fish red fish blue fish')\\n# test.word_count"}
282	26	a2d983bdce92136f33619548	superseded	ruby	word-count	\N	\N	0	1	2015-12-15 09:52:04	2015-12-15 09:52:04	184	{"/ruby/word-count/phrase.rb":"class Phrase\\n  def initialize(words)\\n    @words = words\\n    @words1 = @words.gsub(/,/, ' ').gsub(/!!\\\\\\u0026\\\\@\\\\$%\\\\^\\u0026/, '').gsub(/:/, '').downcase.gsub(/\\\\./, '')\\n    \\n    @words2 = @words1.split\\n    @words2\\n  end\\n  \\n  def word_count\\n    \\n    counts = Hash.new 0\\n    @words2.each do |word|\\n    counts[word] += 1\\n    end\\n    counts\\n  end\\nend\\n\\nphrase = Phrase.new(\\"how','much,wood,could,a,wood,chuck,chuck if a wood chuck could chuck wood\\")\\n\\n# phrase.word_count"}
283	26	024d8b9d19dac9ccc85a6fba	superseded	ruby	word-count	\N	\N	0	2	2016-01-01 20:42:19	2016-01-01 20:42:19	184	{"/ruby/word-count/phrase.rb":"require 'pry'\\nclass Phrase\\n  def initialize(words)\\n    @words = words\\n  end\\n  \\n  def word_count\\n    @words.downcase!\\n    @words.gsub!(/[^\\\\w\\\\']/, \\" \\")\\n    phrase = @words.split(\\" \\")\\n    count = Hash.new(0)\\n    phrase.map! { |word| count[word] += 1 }\\n    count\\n  end\\nend"}
284	26	8964dd2975c5bdfe4f196442	hibernating	java	etl	\N	\N	0	1	2016-01-16 13:59:46	2016-01-16 13:59:46	185	{"/java/etl/src/main/java/Etl.java":"import java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Etl {\\n\\n    public Map\\u003cString, Integer\\u003e transform(Map\\u003cInteger, List\\u003cString\\u003e\\u003e old) {\\n        Map\\u003cString, Integer\\u003e result = new HashMap();\\n        \\n        for (Map.Entry\\u003cInteger, List\\u003cString\\u003e\\u003e oldEntry : old.entrySet()) {\\n            for (String letter : oldEntry.getValue()) {\\n                result.put(letter.toLowerCase(), oldEntry.getKey());\\n            }\\n        }\\n        return result;\\n    }\\n\\n}"}
285	26	e654ee9be6dde37b37c5a596	\N	ruby	say	\N	\N	0	1	2015-12-22 17:46:55	2015-12-22 17:46:55	186	{"say.rb":"class Say\\n  ONES  = [ 'one',     'two',       'three',    'four',     'five',    'six',     'seven',     'eight',    'nine' ]\\n  TEENS = [ 'eleven',  'twelve',    'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen' ]\\n  TENS  = [ 'ten',     'twenty',    'thirty',   'forty',    'fifty',   'sixty',   'seventy',   'eighty',   'ninety' ]\\n  SIZES = { 'billion' =\\u003e 1_000_000_000, 'million' =\\u003e 1_000_000, 'thousand' =\\u003e 1_000, 'hundred' =\\u003e 100 }\\n  RANGE = (0..999_999_999_999)\\n\\n  def initialize(number)\\n    raise(ArgumentError, \\"Number is out of range.\\") unless RANGE.cover?(number)\\n    @number = number\\n  end\\n\\n  def in_english\\n    @in_english ||= begin\\n      return 'zero' if @number == 0\\n\\n      num_string = ''\\n\\n      left = @number\\n      SIZES.each do |n, h|\\n        right, left = left.divmod(h)\\n        if right \\u003e 0\\n          num_string \\u003c\\u003c Say.new(right).in_english \\u003c\\u003c ' ' \\u003c\\u003c n.to_s\\n          num_string \\u003c\\u003c ' ' if left \\u003e 0\\n        end\\n      end\\n\\n      right, left = left.divmod(10)\\n      if right \\u003e 0\\n        if (right == 1) \\u0026\\u0026 (left \\u003e 0)\\n          num_string \\u003c\\u003c TEENS[left - 1]\\n          left = 0\\n        else\\n          num_string \\u003c\\u003c TENS[right - 1]\\n        end\\n        num_string \\u003c\\u003c '-' if left \\u003e 0\\n      end\\n\\n      right = left\\n      num_string \\u003c\\u003c ONES[right - 1] if right \\u003e 0\\n\\n      num_string\\n    end\\n  end\\n\\nend"}
286	26	5ecd097c3b348800d3eaef0e	done	python	gigasecond	\N	\N	0	1	2016-03-12 17:46:49	2016-03-12 17:46:49	187	{"gigasecond.py":"#!/usr/bin/python\\nfrom datetime import date\\nfrom datetime import timedelta\\ndef add_gigasecond(start_datetime):\\n    return start_datetime + timedelta(0,1e9)"}
287	26	7da5ff991b0fb87db46a3283	\N	javascript	leap	\N	\N	0	1	2015-12-13 00:15:13	2015-12-13 00:15:13	188	{"leap.js":"var Leap = function(year) {\\n  /*\\n  on every year that is evenly divisible by 4\\n  except every year that is evenly divisible by 100\\n  unless the year is also evenly divisible by 400\\n  */\\n  var mod = year % 4;\\n  \\n  if (mod == 0) {\\n    var mod100 = year % 100;\\n    if (mod100 == 0){\\n      var mod400 = year % 400;\\n      if (mod400 == 0){\\n        return true;\\n      }\\n      else{\\n        return false;\\n      }\\n    }\\n  }\\n  return (mod == 0);\\n};\\n\\n\\n\\nmodule.exports = Leap;"}
288	26	afbb8afa4d3c0c8f4dd0e549	superseded	javascript	word-count	\N	\N	0	2	2015-12-15 01:52:03	2015-12-15 01:52:03	189	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (phrase === null || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
289	26	f70e29dedaf6560ed58dd40d	superseded	javascript	word-count	\N	\N	0	1	2015-12-19 00:54:56	2015-12-19 00:54:56	189	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  if (phrase === null || phrase === '' || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return;\\n  }\\n  \\n  var count = {};\\n  phrase.toLowerCase()\\n        .replace(/[^a-zA-Z0-9 ]/g, '')\\n        .replace(/\\\\s+/g, ' ')\\n        .split(' ')\\n        .forEach(\\n  function(word) {\\n    if (word in count) {\\n      count[word]++;\\n    } else {\\n      count[word] = 1;\\n    }\\n  });\\n  return count;\\n}"}
290	26	ef1214a73835fa7eccdedce2	done	javascript	word-count	\N	\N	0	3	2016-01-22 12:02:01	2016-01-22 12:02:01	189	{"word-count.js":"var Words = module.exports = function(phrase) {\\n  this.count = this.buildWordCount(phrase);\\n}\\n\\nWords.prototype.buildWordCount = function(phrase) {\\n  var count = {};\\n  \\n  if (!phrase || !phrase.match(/[a-zA-Z0-9]/)) {\\n    return count;\\n  }\\n  \\n  function countWord(word) {\\n    count[word] = (count[word] || 0) + 1;\\n  }\\n  \\n  phrase.toLowerCase()\\n        .replace(/[^a-z0-9 ]/g, '')\\n        .split(/\\\\s+/g)\\n        .forEach(countWord);\\n        \\n  return count;\\n}"}
291	26	a469c72e5b3aa43a07ee1c05	\N	ruby	binary	\N	\N	0	2	2015-12-18 09:21:43	2015-12-18 09:21:43	190	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.chars.reverse\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
292	26	9ef7094f4511a82c093ed0c6	\N	ruby	binary	\N	\N	0	1	2016-01-02 16:41:41	2016-01-02 16:41:41	190	{"binary.rb":"class Binary\\n  VERSION = 1\\n\\n  def initialize(binary)\\n    fail ArgumentError if binary =~ /[^01]/\\n    @binary = binary\\n  end\\n\\n  def to_decimal\\n    bits = @binary.reverse.chars\\n    bits.map.with_index { |bit, pos| bit.to_i * (2 ** pos) }.reduce(:+)\\n  end\\nend"}
293	26	cc294814afdba23823512259	\N	python	run-length-encoding	\N	\N	0	1	2016-01-08 03:51:25	2016-01-08 03:51:25	191	{"run_length.py":"import string\\nimport re\\n\\ndef encode(s):\\n    res = ''\\n    cnt = 0\\n    curr_char = ''\\n    for c in s:\\n        if c != curr_char:\\n            if curr_char != '':\\n                res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n            curr_char = c\\n            cnt = 1\\n        else:\\n            cnt = cnt + 1\\n    if curr_char != '':\\n        res = res + (str(cnt) if cnt \\u003e 1 else '') + curr_char\\n    return res\\n\\ndef decode(s):\\n    res = ''\\n    r = re.compile(r'(\\\\d+)?(.)')\\n    for m in r.findall(s):\\n        nb = int(m[0]) if m[0] != '' else 1\\n        res = res + nb*m[1]\\n    return res"}
294	26	2597a988cd6731e92afa474a	\N	python	run-length-encoding	\N	\N	0	2	2016-02-01 00:55:19	2016-02-01 00:55:19	191	{"run_length.py":"import re\\nimport itertools\\n\\ndef cnt(g):\\n    c = len(list(g))\\n    return str(c) if c \\u003e 1 else ''\\n\\ndef encode(s):\\n    return ''.join(cnt(g) + k for (k, g) in itertools.groupby(s))\\n\\ndef decode(s):\\n    r = re.compile(r'(\\\\d+)?(\\\\D)')\\n    return ''.join( int(m[0] if m[0] else '1') * m[1] for m in r.findall(s))"}
295	26	3b5aea185e0fb9bc8e7d1221	needs_input	go	octal	\N	\N	0	1	2016-02-29 01:33:34	2016-02-29 01:33:34	192	{"code.go":"package octal\\n\\nimport \\"fmt\\"\\n\\nfunc ParseOctal(s string) (int64, error) {\\n\\tvar reply int64\\n\\tfor _, r := range s {\\n\\t\\tif r \\u003c '0' || r \\u003e '7' {\\n\\t\\t\\treturn 0, fmt.Errorf(\\"bad char %q in %q\\", r, s)\\n\\t\\t}\\n\\t\\treply = reply*8 + int64(r-'0')\\n\\t}\\n\\treturn reply, nil\\n}"}
296	26	f9823a3ec3c275a9fd7c1a33	pending	ruby	hamming	\N	\N	0	1	2015-12-12 14:56:18	2015-12-12 14:56:18	193	{"hamming.rb":"class Hamming\\n  def self.compute(first, second)\\n    Hamming.new(first, second).compute\\n  end\\n\\n  def initialize(first, second)\\n    @first, @second = first, second\\n  end\\n\\n  def compute\\n    total = 0\\n    strand1.each_with_index do |char, index|\\n      total += 1 unless char == strand2[index]\\n    end\\n    total\\n  end\\n\\n  private\\n\\n  def size\\n    @size = [@first.size, @second.size].min\\n  end\\n\\n  def strand1\\n    @strand1 = @first.slice(0...size).scan(/./)\\n  end\\n\\n  def strand2\\n    @strand2 = @second.slice(0...size).scan(/./)\\n  end\\nend"}
297	26	877ceb5fd1e95d499375571e	done	csharp	leap	\N	\N	0	1	2015-12-13 00:54:11	2015-12-13 00:54:11	194	{"Year.cs":"using System;\\r\\n\\r\\npublic class Year\\r\\n{\\r\\n    public static Boolean IsLeap(int year)\\r\\n    {\\r\\n        if( year % 4 == 0)\\r\\n        {\\r\\n            if (year % 100 == 0 \\u0026\\u0026 year % 400 != 0)\\r\\n                return false;\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}"}
298	26	533451ed0c6ddb1e4a61e640	done	ruby	leap	\N	\N	0	1	2015-12-29 11:31:26	2015-12-29 11:31:26	195	{"leap.rb":"class Year\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def leap?\\n    quad_century? || (!century? \\u0026\\u0026 quad?)\\n  end\\n\\n  private\\n  attr_reader :num\\n\\n  def quad_century?\\n    num % 400 == 0\\n  end\\n\\n  def century?\\n    num % 100 == 0\\n  end\\n\\n  def quad?\\n    num % 4 == 0\\n  end\\nend"}
299	26	5c6e5632e1739a190f6f40f2	hibernating	javascript	gigasecond	\N	\N	0	1	2016-01-17 20:26:55	2016-01-17 20:26:55	196	{"gigasecond.js":"var Gigasecond = function(object){\\n\\tthis.currentDate = object;\\n}\\n\\nGigasecond.prototype.date = function(){\\n\\tvar time = this.currentDate.getTime() + 1000000000000;\\n\\tvar newTime = new Date(time);\\n\\tnewTime.setHours(0,0,0);\\n\\treturn newTime;\\n}"}
300	26	1fdb9e1147b4280bc6933171	pending	scala	word-count	\N	\N	0	1	2015-12-31 00:14:31	2015-12-31 00:14:31	197	{"src/main/scala/Phrase.scala":"class Phrase(phrase:String) {\\n    \\n    val wordCount = \\n        phrase.toLowerCase\\n              .split(\\"\\"\\"[^a-zA-Z1-9']+\\"\\"\\")\\n              .filter(!_.isEmpty)\\n              .groupBy(identity)\\n              .mapValues(_.length)\\n}"}
301	26	2b7d2b9817ed30ebfbd6b140	\N	python	hamming	\N	\N	0	1	2016-02-13 01:12:30	2016-02-13 01:12:30	198	{"hamming.py":"def distance(a, b):\\n\\tif len(a)!= len(b):\\n\\t\\treturn\\n\\tcounter = 0 \\n\\tfor i in range(len(a)):\\n\\t\\tif a[i]!= b[i]:\\n\\t\\t\\tcounter+=1\\n\\treturn counter"}
302	26	dec1225cf39aa2e2b48dfa17	\N	ecmascript	hello-world	\N	\N	0	1	2016-01-13 10:51:23	2016-01-13 10:51:23	199	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nclass HelloWorld {\\n  hello(name) {\\n    if(!name){\\n    return \\"Hello, World!\\";\\n    } else {\\n      return \\"Hello, \\" + name + \\"!\\";\\n    }\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n  }\\n}\\n\\nexport default HelloWorld;"}
303	26	1360b0dfa3a5e86655b7ca31	pending	javascript	grade-school	\N	\N	0	1	2016-01-07 09:56:36	2016-01-07 09:56:36	200	{"grade-school.js":"function School() {\\n\\tthis.db = {};\\n}\\n\\nSchool.prototype.add = function(name, number) {\\n\\tthis.db[number] = this.db[number] ? this.db[number] : [];\\n\\tthis.db[number].push(name);\\n\\tthis.db[number].sort();\\n}\\n\\nSchool.prototype.grade = function(number) {\\n\\treturn this.db[number] ? this.db[number] : [];\\n}\\n\\nSchool.prototype.roster = function() {\\n\\treturn this.db;\\n}\\n\\nmodule.exports = School;"}
304	26	7c151e2bb9fff0a12810afa3	pending	ruby	bob	\N	\N	0	2	2015-12-28 16:51:54	2015-12-28 16:51:54	201	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    statement = Statement.new(input)\\n    if statement.silence?\\n      \\"Fine. Be that way!\\"\\n    elsif statement.yelling?\\n      \\"Whoa, chill out!\\"\\n    elsif statement.question?\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\n\\n  # Internal: This wraps up a statement made to Bob and is responsible for\\n  # deciding his reaction\\n  class Statement\\n    attr_reader :input\\n\\n    def initialize(input)\\n      @input = input\\n    end\\n\\n    # Public: is this statement a question?\\n    #\\n    # Returns a boolean\\n    def question?\\n      input.end_with? \\"?\\"\\n    end\\n\\n    # Public: is this statement shouted?\\n    #\\n    # Returns a boolean\\n    def yelling?\\n      input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n    end\\n\\n    # Public: is this a silent statement?\\n    #\\n    # Returns a boolean\\n    def silence?\\n      input =~ /\\\\A\\\\s*\\\\z/\\n    end\\n  end\\nend"}
305	26	320d554aafe6c73c04220e1b	superseded	ruby	bob	\N	\N	0	1	2016-03-07 12:09:22	2016-03-07 12:09:22	201	{"bob.rb":"class Bob\\n\\n  def hey(input)\\n    if silence?(input)\\n      'Fine. Be that way!'\\n    elsif yelling?(input)\\n      'Woah, chill out!'\\n    elsif question?(input)\\n      'Sure.'\\n    else\\n      'Whatever.'\\n    end\\n  end\\n\\n  private\\n\\n  def question?(input)\\n    input.end_with? '?'\\n  end\\n\\n  def yelling?(input)\\n    input.upcase == input \\u0026\\u0026 input =~ /[A-Z]/\\n  end\\n\\n  def silence?(input)\\n    input =~ /\\\\A\\\\s*\\\\z/\\n  end\\nend"}
306	26	f8a1146fded9895a5486d67f	\N	elixir	bob	\N	\N	0	1	2015-12-13 00:44:10	2015-12-13 00:44:10	202	{"bob.exs":"defmodule Bob do\\n\\n  def hey(input) do\\n    cond do\\n      is_yelling?(input)    -\\u003e \\"Whoa, chill out!\\"\\n      is_a_question?(input) -\\u003e \\"Sure.\\"\\n      is_empty?(input)      -\\u003e \\"Fine. Be that way!\\"\\n      true                    -\\u003e \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp is_empty?(str) do\\n    String.match? str, ~r/^\\\\s*$/\\n  end\\n\\n  defp is_yelling?(str) do\\n    String.upcase(str) == str and String.match?(str, ~r/\\\\p{L}/)\\n  end\\n\\n  defp is_a_question?(str) do\\n    String.ends_with?(str, \\"?\\")\\n  end\\nend"}
307	7	c8bd637d74066475f81edf30	\N	ruby	rna-transcription	\N	\N	0	1	2016-01-18 18:54:57	2016-01-18 18:54:57	203	{"rna_transcription.rb":"class Complement\\n  VERSION = 2\\n  CODE = ['GCTA', 'CGAU']\\n  \\n  def self.of_dna(sample)\\n    raise ArgumentError unless sample.match(/^[GCTA]*$/)\\n    sample.tr *CODE \\n  end\\n\\n  def self.of_rna(sample)\\n    raise ArgumentError unless sample.match(/^[CGAU]*$/)\\n    sample.tr *CODE.reverse\\n  end\\nend"}
308	7	ab4d6b814cca65d2d5666328	done	ruby	gigasecond	\N	\N	0	3	2015-12-07 06:53:13	2015-12-07 06:53:13	204	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    date.to_time + 10**9\\n  end\\nend"}
309	7	a4beece658b035cf999125cd	superseded	ruby	gigasecond	\N	\N	0	1	2015-12-12 09:54:12	2015-12-12 09:54:12	204	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_date\\n  end\\nend"}
310	7	d614070fa48b1f919482d4e4	superseded	ruby	gigasecond	\N	\N	0	2	2016-01-29 21:57:03	2016-01-29 21:57:03	204	{"/ruby/gigasecond/gigasecond.rb":"require 'date'\\n\\nclass Gigasecond\\n  def self.from(date)\\n    (date.to_time + 10**9).to_time\\n  end\\nend"}
311	7	5616799a7d92b112edcee507	done	javascript	bob	\N	\N	0	1	2015-11-25 06:47:39	2015-11-25 06:47:39	205	{"bob.js":"function isWhiteSpace(code) {\\n    //this only works for ASCII\\n    return code === \\" \\".charCodeAt(0);\\n}\\n\\nfunction isAlpha(code) {\\n    //this only works for ASCII\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else if (code \\u003e 96 \\u0026\\u0026 code \\u003c 123) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isUpperCase(code) {\\n    //this only works for ASCII.\\n    if (code \\u003e 64 \\u0026\\u0026 code \\u003c 91) {\\n        return true;\\n    } else {\\n        return false;\\n    }\\n}\\n\\nfunction isQuestionMark(code) {\\n    //this only works for English and other languages\\n    //that use a question mark at the end.\\n    return code  === \\"?\\".charCodeAt(0);;\\n}\\n\\nfunction findAcronyms(str) {\\n    //this is going to be very slow, if the list is big.\\n    //maybe a trie is a better choice here.\\n    acronyms = [\\"OK\\", \\"DMV\\"];\\n    index = {};\\n\\n    for (i=0; i \\u003c acronyms.length; i++) {\\n        acronym = acronyms[i];\\n        pos = str.indexOf(acronym);\\n        if (pos \\u003e -1) {\\n            index[pos] = acronym.length-1;\\n        }\\n        \\n    }\\n\\n    return index;\\n}\\n\\nvar Bob = function() {};\\nBob.prototype.hey = function(msg) {\\n    isShouting = false;\\n    isQuestion = false;\\n    isEmpty = true;\\n\\n    length = msg.length;\\n    acronyms = findAcronyms(msg);\\n    for (var i=0; i\\u003clength; i++) {\\n        code = msg.charCodeAt(i);\\n\\n        if (isWhiteSpace(code)) {\\n            continue;\\n        } else {\\n            isEmpty = false;\\n        }\\n        \\n        acronymLength = acronyms[i];\\n        if (acronymLength !== undefined) {\\n            //skip over acronyms\\n            i = i+acronymLength;\\n            continue;\\n        }\\n\\n        if (isAlpha(code)) {\\n            isShouting = isUpperCase(code);\\n        }\\n        \\n        //if we are at the end check if we have a question mark\\n        if (i == length-1) {\\n            isQuestion = isQuestionMark(code);\\n        }\\n    }\\n\\n    if (isShouting) {\\n        return \\"Woah, chill out!\\";\\n    } else if (isQuestion) {\\n        return \\"Sure.\\";\\n    } else if (isEmpty) {\\n        return \\"Fine. Be that way!\\";\\n    } else {\\n        return \\"Whatever.\\";\\n    }\\n};\\nmodule.exports = Bob;"}
312	7	40692ea42367b933ff944ac0	pending	ruby	grains	\N	\N	0	1	2016-01-15 20:00:12	2016-01-15 20:00:12	206	{"/ruby/grains/grains.rb":"class Grains\\n\\n  def square(grains)\\n    2**(grains-1)\\n  end\\n\\n  def total\\n    total = 0\\n    (1..64).each do |count|\\n      total+= square(count)\\n    end\\n    total\\n  end\\n\\nend"}
313	7	720cded27e54275368bc3c83	pending	python	kindergarten-garden	\N	\N	0	1	2016-03-08 10:32:25	2016-03-08 10:32:25	207	{"garden.py":"class Garden():\\r\\n    def __init__(self, gardenStr, students=None):\\r\\n        self.gardenStr = gardenStr\\r\\n        if students is None:\\r\\n            self.students = [\\"Alice\\", \\"Bob\\", \\"Charlie\\", \\"David\\", \\"Eve\\", \\"Fred\\", \\"Ginny\\", \\"Harriet\\",\\r\\n                             \\"Ileana\\", \\"Joseph\\", \\"Kincaid\\", \\"Larry\\"]\\r\\n        else:\\r\\n            self.students = students\\r\\n        self.students.sort()\\r\\n        self.plantsDict = {\\"G\\":\\"Grass\\", \\"C\\":\\"Clover\\", \\"V\\":\\"Violets\\", \\"R\\":\\"Radishes\\"}\\r\\n\\r\\n    def plants(self, student):\\r\\n        if student not in self.students:\\r\\n            raise ValueError(\\"Invalid kid name\\")\\r\\n        i = self.students.index(student)\\r\\n        rows = self.gardenStr.split()\\r\\n        plantsStr = rows[0][i * 2:i * 2 + 2] + rows[1][i * 2:i * 2 + 2]\\r\\n        res = [self.plantsDict[p] for p in plantsStr]\\r\\n        return res\\r\\n\\r\\n\\r\\n\\r\\n\\r"}
314	23	4fa0f69b7be591eeab0cc4cd	superseded	clojure	space-age	\N	\N	0	1	2015-09-20 22:59:11	2015-09-20 22:59:11	208	{"space_age.clj":"(ns space-age)\\n\\n(def ^:const earth-orbital-period-in-seconds 31557600.0)\\n\\n(def ^:const orbital-periods-relative-to-earth {\\n  \\"mercury\\" 0.2408467\\n  \\"venus\\"   0.61519726\\n  \\"mars\\"    1.8808158\\n  \\"jupiter\\" 11.862615\\n  \\"saturn\\"  29.447498\\n  \\"uranus\\"  84.016846\\n  \\"neptune\\" 164.79132\\n})\\n\\n(defn on-earth [age-in-seconds] (/ age-in-seconds earth-orbital-period-in-seconds))\\n\\n(defn- age-on-planet-converter [planet]\\n  (fn [age-in-seconds] (/ (on-earth age-in-seconds) (orbital-periods-relative-to-earth planet))))\\n\\n(defn- define-on-planet-functions []\\n  (doseq\\n    [[planet ratio] orbital-periods-relative-to-earth]\\n    (intern\\n      *ns*\\n      (symbol (str \\"on-\\" planet))\\n      (age-on-planet-converter planet)\\n    )))\\n\\n(define-on-planet-functions)"}
315	23	db72ff2081f63d274b64c45b	pending	clojure	space-age	\N	\N	0	2	2015-12-22 09:38:07	2015-12-22 09:38:07	208	{"space_age.clj":"(ns space-age)\\n\\n(def ^:const earth-orbital-period-in-seconds 31557600.0)\\n\\n(def ^:const orbital-periods-relative-to-earth {\\n  \\"earth\\"   1\\n  \\"mercury\\" 0.2408467\\n  \\"venus\\"   0.61519726\\n  \\"mars\\"    1.8808158\\n  \\"jupiter\\" 11.862615\\n  \\"saturn\\"  29.447498\\n  \\"uranus\\"  84.016846\\n  \\"neptune\\" 164.79132\\n})\\n\\n(defn- age-on-planet-converter [planet]\\n (fn [age-in-seconds]\\n    (let [age-on-earth (/ age-in-seconds earth-orbital-period-in-seconds)]\\n      (/ age-on-earth (orbital-periods-relative-to-earth planet)))))\\n\\n(defn- define-on-planet-functions []\\n  (doseq\\n    [[planet ratio] orbital-periods-relative-to-earth]\\n    (intern\\n      *ns*\\n      (symbol (str \\"on-\\" planet))\\n      (age-on-planet-converter planet)\\n    )))\\n\\n(define-on-planet-functions)"}
316	23	110afad1731953c91e6e55c7	superseded	ruby	phone-number	\N	\N	0	1	2015-10-10 11:11:18	2015-10-10 11:11:18	209	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{@number[3..5]}-#{@number[6..-1]}\\"\\n  end\\nend"}
317	23	91edd41a8a8d71b14f972062	superseded	ruby	phone-number	\N	\N	0	2	2015-11-09 16:09:46	2015-11-09 16:09:46	209	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{first_part}-#{second_part}\\"\\n  end\\n\\n  private\\n\\n  def first_part\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def second_part\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
318	23	7f77930f81a9736615b5b85a	hibernating	ruby	phone-number	\N	\N	0	3	2015-11-12 12:27:17	2015-11-12 12:27:17	209	{"phone-number.rb":"class PhoneNumber\\n  NULL_PHONE_NUMBER = \\"0000000000\\"\\n\\n  AREA_CODE_LENGTH = 3\\n  NUMBER_SEPARATOR_POSITION = 3\\n\\n  attr_reader :number\\n\\n  def initialize(phone_number)\\n    phone_number = phone_number.gsub(/[^\\\\d]/, '')\\n\\n    if phone_number.length == 10\\n      @number = phone_number\\n    elsif phone_number.length == 11 \\u0026\\u0026 phone_number[0] == \\"1\\"\\n      @number = phone_number[1..-1]\\n    else\\n      @number = NULL_PHONE_NUMBER\\n    end\\n  end\\n\\n  def area_code\\n    @number[0...AREA_CODE_LENGTH]\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  private\\n\\n  def prefix\\n    @number[AREA_CODE_LENGTH...(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)]\\n  end\\n\\n  def line_number\\n    @number[(AREA_CODE_LENGTH+NUMBER_SEPARATOR_POSITION)..-1]\\n  end\\nend"}
319	23	7b2878a68c4c8e0bce4fb221	hibernating	javascript	hamming	\N	\N	0	1	2016-02-01 02:45:47	2016-02-01 02:45:47	210	{"hamming.js":"'use strict';\\r\\n\\r\\nvar Hamming = {};\\r\\n\\r\\nHamming.compute = function (a, b) {\\r\\n    var pos = 0,\\r\\n        distance = 0;\\r\\n\\r\\n    if (a.length !== b.length) {\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    while (pos \\u003c a.length) {\\r\\n        if (a[pos] !== b[pos]) {\\r\\n            distance = distance + 1;\\r\\n        }\\r\\n        pos = pos + 1;\\r\\n    }\\r\\n    return distance;\\r\\n};\\r\\n\\r\\nmodule.exports = Hamming;"}
320	17	66bea52a8879c99d4d8ffa4b	superseded	javascript	word-count	\N	\N	0	1	2016-01-06 04:33:26	2016-01-06 04:33:26	211	{"word-count.js":"function words(input) {\\n  var individualWords = input.split(' ');\\n  var counts = {};\\n  individualWords.forEach(function(w) {\\n    var cleanWord = w.match(/[a-zA-Z0-9]*/)[0];\\n    if (cleanWord !== null \\u0026\\u0026 cleanWord !== '') {\\n      cleanWord = cleanWord.toLowerCase();\\n      if (counts[cleanWord]) {\\n        counts[cleanWord] = counts[cleanWord] + 1;\\n      } else {\\n        counts[cleanWord] = 1;\\n      }\\n    }\\n  }, this);\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
321	17	21f832216157d5290529c017	done	javascript	word-count	\N	\N	0	5	2016-01-16 05:25:07	2016-01-16 05:25:07	211	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
322	17	321378d515fff6e06df9e9e6	superseded	javascript	word-count	\N	\N	0	2	2016-01-29 18:45:37	2016-01-29 18:45:37	211	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/gi).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] = counts[word] + 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
323	17	bf7abc237ffca573ea4851ac	superseded	javascript	word-count	\N	\N	0	3	2016-02-27 00:20:37	2016-02-27 00:20:37	211	{"word-count.js":"function words(input) {\\n  var counts = {};\\n  input.match(/\\\\w+/g).forEach(function(word) {\\n    word = word.toLowerCase();\\n    if (counts[word]) {\\n      counts[word] += 1;\\n    } else {\\n      counts[word] = 1;\\n    }\\n  });\\n  return counts;\\n}\\n\\nmodule.exports = words;"}
324	17	f6498062c6dbb6a0eb6ce84f	superseded	javascript	word-count	\N	\N	0	4	2016-02-28 05:05:12	2016-02-28 05:05:12	211	{"word-count.js":"function words(input) {\\n  return input.toLowerCase().match(/\\\\w+/g).reduce(\\n    function(counts, word, index, array) {\\n      if (counts[word]) {\\n        counts[word] += 1;\\n      } else {\\n        counts[word] = 1;\\n      }\\n      return counts;\\n    }, {});\\n}\\n\\nmodule.exports = words;"}
325	17	793a101835c4983042d0d3fa	\N	erlang	etl	\N	\N	0	1	2016-02-29 07:33:45	2016-02-29 07:33:45	212	{"etl.erl":"%%%-------------------------------------------------------------------\\n%%% @author andre\\n%%% @copyright (C) 2016, \\u003cCOMPANY\\u003e\\n%%% @doc\\n%%%\\n%%% @end\\n%%% Created : 19. Jan 2016 1:12 PM\\n%%%-------------------------------------------------------------------\\n-module(etl).\\n-author(\\"andre\\").\\n\\n%% API\\n-export([transform/1]).\\n\\nnormalize(Tile, Score) -\\u003e\\n  {string:to_lower(Tile), Score}.\\n\\ntransform([], Transformed) -\\u003e\\n  Transformed;\\ntransform([{Score, Tiles} | T], Transformed) -\\u003e\\n  transform(T, Transformed ++ lists:zipwith(fun normalize/2, string:to_lower(Tiles), lists:duplicate(length(Tiles), Score))).\\n\\ntransform(Scores) -\\u003e\\n  transform(Scores, [])."}
326	17	ef041ba718a73cacbe1baaff	superseded	javascript	kindergarten-garden	\N	\N	0	1	2016-01-12 18:59:00	2016-01-12 18:59:00	213	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    this.students = students.sort();\\n    this.crops = parseCropDiagram(diagram);\\n    assignCrops(this);\\n  }\\n  \\n  var assignCrops = function(garden){\\n    for (var i = 0; i \\u003c garden.students.length; i++) {\\n      var offset = i*2;\\n      var studentPlot = [\\n        garden.crops[0][offset],\\n        garden.crops[0][offset+1],\\n        garden.crops[1][offset],\\n        garden.crops[1][offset+1],\\n        ];\\n      garden[garden.students[i].toLowerCase()] = studentPlot;\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
327	17	3481fb4f7986abbdf7616496	pending	javascript	kindergarten-garden	\N	\N	0	2	2016-01-19 07:48:27	2016-01-19 07:48:27	213	{"kindergarten-garden.js":"var Garden = (function(){\\n  var CROPS = {\\n    \\"G\\":\\"grass\\",\\n    \\"C\\":\\"clover\\",\\n    \\"R\\":\\"radishes\\",\\n    \\"V\\":\\"violets\\"\\n  };\\n  var DEFAULT_STUDENTS =[\\n  \\"Alice\\",\\n  \\"Bob\\",\\n  \\"Charlie\\",\\n  \\"David\\",\\n  \\"Eve\\",\\n  \\"Fred\\",\\n  \\"Ginny\\",\\n  \\"Harriet\\",\\n  \\"Ileana\\",\\n  \\"Joseph\\",\\n  \\"Kincaid\\",\\n  \\"Larry\\", \\n  ];\\n  \\n  function Garden(diagram, students){\\n    if(students===undefined) students = DEFAULT_STUDENTS;\\n    students.sort();\\n    var crops = parseCropDiagram(diagram.toUpperCase());\\n    assignCrops(students,crops,this);\\n  }\\n  \\n  var getPlot = function(crops, index){\\n    var plot = [];\\n    var offset = index*2;\\n    for (var i = 0; i \\u003c crops.length; i++) {\\n      plot.push(crops[i][offset] || null, crops[i][offset+1] || null);\\n    }\\n    return plot;\\n  };\\n  \\n  var assignCrops = function(students,crops,garden){\\n    for (var i = 0; i \\u003c students.length; i++) {\\n      garden[students[i].toLowerCase()] = getPlot(crops,i);\\n    }\\n  };\\n  \\n  var parseCropDiagram = function(diagram){\\n    var rows = diagram.split(\\"\\\\n\\");\\n    var plots = [];\\n    for (var i = 0; i \\u003c rows.length; i++) {\\n      plots.push(convertCropIds(rows[i].split('')));\\n    }\\n    return plots;\\n  };\\n  \\n  var convertCropIds = function(cropIds){\\n    var crops = [];\\n    for (var i = 0; i \\u003c cropIds.length; i++) {\\n      crops.push(CROPS[cropIds[i]]);\\n    }\\n    return crops;\\n  };\\n  \\n  return Garden;\\n})();\\nmodule.exports = Garden;"}
328	17	f85ada818f0f397a30c470cf	\N	ruby	protein-translation	\N	\N	0	1	2016-03-16 07:20:04	2016-03-16 07:20:04	214	{"protein_translation.rb":"class InvalidCodonError \\u003c StandardError; end\\n\\nclass Translation\\n  Table = {\\n    ['AUG']                      =\\u003e 'Methionine',\\n    ['UUU', 'UUC']               =\\u003e 'Phenylalanine',\\n    ['UUA', 'UUG']               =\\u003e 'Leucine',\\n    ['UCU', 'UCC', 'UCA', 'UCG'] =\\u003e 'Serine',\\n    ['UAU', 'UAC']               =\\u003e 'Tyrosine',\\n    ['UGU', 'UGC']               =\\u003e 'Cystine',\\n    ['UGG']                      =\\u003e 'Tryptophan',\\n    ['UAA', 'UAG', 'UGA']        =\\u003e 'STOP'\\n  }\\n\\n  def self.of_codon(codon)\\n    protein = Table.select { |k, v| k.include?(codon) }.values[0]\\n    raise InvalidCodonError if protein.nil?\\n    protein\\n  end\\n\\n  def self.of_rna(strand)\\n    is_stop = false\\n    strand.chars.group_by.with_index do |ele, idx|\\n      idx / 3\\n    end.values.map do |codon|\\n      rst = of_codon(codon.join)\\n      is_stop = rst == 'STOP' ? true : is_stop\\n      is_stop ? nil : rst\\n    end.uniq.compact\\n  end\\nend"}
329	20	e3ca03d7bd2c83847819eb66	superseded	python	word-count	\N	\N	0	2	2015-10-28 19:58:23	2015-10-28 19:58:23	215	{"wordcount.py":"from collections import Counter\\n\\n# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Validate input\\n    if not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = Counter()\\n\\n    # Iterate through the list of words\\n    for word in words.split():\\n        word_counts[word] += 1\\n\\n    return word_counts"}
330	20	4fb64d630fc91b96c7ec2791	done	python	word-count	\N	\N	0	3	2016-01-17 03:42:46	2016-01-17 03:42:46	215	{"wordcount.py":"from collections import Counter\\n\\ndef word_count(words):\\n    if not isinstance(words,basestring):\\n        return None\\n    word_counts = Counter()\\n    for word in words.split():\\n        word_counts[word] += 1\\n    return word_counts"}
331	20	6b37c5cbfb9fef516187e5d7	superseded	python	word-count	\N	\N	0	1	2016-01-30 01:14:21	2016-01-30 01:14:21	215	{"wordcount.py":"# Count the occurrences of each word in the string\\ndef word_count(words):\\n\\n    # Return None if the input is None or if it is not a string\\n    if words is None or not isinstance(words,basestring):\\n        return None\\n\\n    # Stores the count for every word\\n    word_counts = dict()\\n\\n    # Split the string into a list of words\\n    word_list = words.split()\\n\\n    # Iterate through the list of words\\n    for word in word_list:\\n\\n        # Just add 1 to the counter if the key is already present\\n        if word in word_counts:\\n            word_counts[word] += 1\\n\\n        # Otherwise create the new key\\n        else:\\n            word_counts[word] = 1\\n\\n    return word_counts"}
332	20	78a0273bcc541d1810aa7be7	pending	python	allergies	\N	\N	0	1	2015-09-01 17:13:15	2015-09-01 17:13:15	216	{"allergies.py":"allergens = [\\n    'eggs',\\n    'peanuts',\\n    'shellfish',\\n    'strawberries',\\n    'tomatoes',\\n    'chocolate',\\n    'pollen',\\n    'cats',\\n]\\n\\n\\nclass Allergies:\\n\\n    def __init__(self, score):\\n        self.list = []\\n        for i, allergen in enumerate(allergens):\\n            if score \\u0026 1 \\u003c\\u003c i:\\n                self.list.append(allergen)\\n\\n    def is_allergic_to(self, allergen):\\n        return allergen in self.list"}
333	20	317fc078eee9cdc0858f8704	pending	javascript	space-age	\N	\N	0	1	2015-10-31 08:27:28	2015-10-31 08:27:28	217	{"space-age.js":"function SpaceAge(seconds) {\\n\\tif (!(this instanceof SpaceAge)) {\\n\\t\\treturn new SpaceAge(seconds);\\n\\t}\\n\\tthis.seconds = seconds;\\n\\treturn this;\\n}\\n\\nSpaceAge.prototype.base = function() {\\n\\treturn this.seconds / 315576000;\\n};\\n\\nSpaceAge.prototype.getYears = function(time) {\\n\\treturn Math.round(this.seconds / 315576000 / time * 1000) / 100;\\n};\\n\\nSpaceAge.prototype.onEarth = function() {\\n\\treturn this.getYears(1);\\n};\\n\\nSpaceAge.prototype.onMercury = function() {\\n\\treturn this.getYears(0.2408467);\\n};\\n\\nSpaceAge.prototype.onVenus = function() {\\n\\treturn this.getYears(0.61519726);\\n};\\n\\nSpaceAge.prototype.onMars = function() {\\n\\treturn this.getYears(1.8808158);\\n};\\n\\nSpaceAge.prototype.onJupiter = function() {\\n\\treturn this.getYears(11.862615);\\n};\\n\\nSpaceAge.prototype.onSaturn = function() {\\n\\treturn this.getYears(29.447498);\\n};\\n\\nSpaceAge.prototype.onUranus = function() {\\n\\treturn this.getYears(84.016846);\\n};\\n\\nSpaceAge.prototype.onNeptune = function() {\\n\\treturn this.getYears(164.79132);\\n};\\n\\nmodule.exports = SpaceAge;"}
334	20	776d1d1a92466786a9a1b98b	pending	python	minesweeper	\N	\N	0	1	2015-12-09 13:22:39	2015-12-09 13:22:39	218	{"minesweeper.py":"import re\\r\\nends = re.compile('\\\\+-*\\\\+')\\r\\nmiddles = re.compile('\\\\|[ *]+\\\\|')\\r\\n\\r\\ndef board(board):\\r\\n\\theight, width = validate_board(board)\\r\\n\\r\\n\\tfor i in range(1, height - 1):\\r\\n\\t\\tfor j in range(1, width - 1):\\r\\n\\t\\t\\tcount = 0\\r\\n\\t\\t\\tfor k in range(i - 1, i + 2):\\r\\n\\t\\t\\t\\tfor z in range(j - 1, j + 2):\\r\\n\\t\\t\\t\\t\\tif board[k][z] == '*':\\r\\n\\t\\t\\t\\t\\t\\tcount += 1\\r\\n\\t\\t\\tif count \\u003e 0 and board[i][j] != '*':\\r\\n\\t\\t\\t\\tboard[i] = board[i][:j] + str(count) + board[i][j+1:]\\r\\n\\r\\n\\treturn board\\r\\n\\r\\n\\r\\ndef validate_board(board):\\r\\n\\tif not board:\\r\\n\\t\\traise ValueError('Board is None or empty.')\\r\\n\\r\\n\\theight = len(board)\\r\\n\\twidth = len(board[0])\\r\\n\\r\\n\\tif not all(len(line) == width for line in board):\\r\\n\\t\\traise ValueError('Lines have different length.')\\r\\n\\r\\n\\tif not ends.fullmatch(board[0]) or not ends.fullmatch(board[-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\tif not all(bool(middles.fullmatch(line)) for line in board[1:-1]):\\r\\n\\t\\traise ValueError('Borders are incorrectly formatted.')\\r\\n\\r\\n\\treturn height, width"}
335	20	bd094cea9c75a8200ba52dd8	pending	javascript	food-chain	\N	\N	0	1	2016-03-17 20:03:24	2016-03-17 20:03:24	219	{"food-chain.js":"var animals = ['fly', 'spider', 'bird', 'cat', 'dog', 'goat', 'cow', 'horse'];\\nvar first_sentences = {\\n  fly: undefined,\\n  spider: \\"It wriggled and jiggled and tickled inside her.\\",\\n  bird: \\"How absurd to swallow a bird!\\",\\n  cat: \\"Imagine that, to swallow a cat!\\",\\n  dog: \\"What a hog, to swallow a dog!\\",\\n  goat: \\"Just opened her throat and swallowed a goat!\\",\\n  cow: \\"I don't know how she swallowed a cow!\\",\\n  horse: \\"She's dead, of course!\\"\\n};\\n\\n\\n\\nmodule.exports = {\\n  verse: function(n) {\\n    var sentences = [];\\n    var animal = animals[n - 1];\\n\\n    sentences.push(\\"I know an old lady who swallowed a \\" + animal + \\".\\");\\n\\n    if (first_sentences[animal]) {\\n      sentences.push( first_sentences[animal] );\\n    }\\n\\n    if (animal != \\"horse\\") {\\n      for ( var i = n-1; i \\u003e 0; i-- ) {\\n        if (animals[i-1] == \\"spider\\") {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\" that wriggled and jiggled and tickled inside her.\\");\\n        } else {\\n          sentences.push(\\"She swallowed the \\" + animals[i] + \\" to catch the \\" + animals[i-1] + \\".\\");\\n        }\\n      }\\n      sentences.push(\\"I don't know why she swallowed the fly. Perhaps she'll die.\\");\\n    }\\n\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  },\\n\\n  verses: function(m, n) {\\n    var sentences = [];\\n    for ( var i = m; i \\u003c= n; i++ ) {\\n      sentences.push( this.verse(i) );\\n    }\\n    return sentences.join(\\"\\\\n\\") + \\"\\\\n\\";\\n  }\\n\\n};"}
336	20	b89df30a496acdd040027581	\N	csharp	hamming	\N	\N	0	1	2016-01-04 16:01:03	2016-01-04 16:01:03	220	{"Hamming.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace Exercism.hamming\\r\\n{\\r\\n    class Hamming\\r\\n    {\\r\\n        public static int Compute(string inputOne, string inputTwo)\\r\\n        {            \\r\\n            int count = 0;\\r\\n                        \\r\\n            for (int i = 0; i \\u003c inputOne.Length; i++)\\r\\n            {\\r\\n                if (inputOne[i] != inputTwo[i]) count++;\\r\\n            }\\r\\n            return count;\\r\\n        }\\r\\n    }\\r\\n}"}
337	21	1b0bd4998f784dcdf340ac0a	done	scala	bob	\N	\N	0	1	2015-10-10 05:59:45	2015-10-10 05:59:45	221	{"src/main/scala/teenager.scala":"/**\\n * Created by j0rik on 25.06.15.\\n */\\nclass Bob {\\n  def hey (str : String) = {\\n    if ((str == null) || (str == \\"\\")) \\"Fine. Be that way!\\"\\n    else\\n    if (str.trim() == \\"\\") \\"Fine. Be that way!\\"\\n    else\\n    if ((str.toUpperCase() == str)\\u0026\\u0026(!str.matches(\\"\\"\\"[0-9, \\\\?]*\\"\\"\\"))) \\"Whoa, chill out!\\"\\n    else\\n    if (str.endsWith(\\"?\\")) \\"Sure.\\" else \\"Whatever.\\"\\n  }\\n}"}
338	21	502a1bfb62042864ab3e9d22	done	python	hamming	\N	\N	0	1	2015-11-27 23:45:03	2015-11-27 23:45:03	222	{"hamming.py":"# a program that can calculate the Hamming difference between two DNA strands.\\n\\ndef distance(dna1, dna2):\\n    '''Compares the Hamming distance between two DNA strands of equal length\\n\\n\\n    Keyword arguments:\\n    dna1 -- first DNA string to compare\\n    dna2 -- second DNA string to compare\\n\\n\\n    Returns: integer\\n\\n\\n    '''\\n    # initializes variables\\n    y = 0    \\n    z = 0\\n    # compares length of strings. returns message if not equal.\\n    if len(dna1) != len(dna2):\\n        print('The two DNA strands must be of equal length.')\\n    else:\\n        # loops through both strings tracking differences\\n        for x in dna1:\\n            if x != dna2[y]:\\n                z += 1\\n            y += 1\\n    return z"}
339	21	06920321655095059a150b70	\N	python	hamming	\N	\N	0	2	2015-12-02 08:50:43	2015-12-02 08:50:43	222	{"hamming.py":"def distance(dna1, dna2):\\n    '''Compares two DNA sequences of equal length and caculates the Hamming distance\\n\\n    Keyword arguments:\\n    dna1 -- a DNA strand\\n    dna2 -- a second DNA strand\\n\\n    returns interger\\n\\n    '''\\n    if len(dna1) != len(dna2):\\n        print(\\"The Hamming distance can not be caculated on sequences of different lengths.\\")\\n    else:           \\n        count = 0\\n        x = 0\\n     \\n        for nucl in dna1:\\n            if dna1[x] != dna2[x]:\\n                count += 1\\n            x += 1\\n\\n    return count"}
340	36	35c113cbe479332bb136ad3c	\N	elixir	hello-world	\N	\N	0	1	2015-12-27 09:27:13	2015-12-27 09:27:13	223	{"hello_world.exs":"defmodule HelloWorld do\\n  @moduledoc \\"\\"\\"\\n  Elixir counts the number of arguments as part of the function name.\\n  For instance;\\n\\n      def hello() do\\n      end\\n\\n  would be a completely different function from\\n\\n      def hello(name) do\\n      end\\n\\n  Can you find a way to make all the tests pass with just one\\n  function?\\n\\n  Hint: look into argument defaults here:\\n  http://elixir-lang.org/getting-started/modules.html#default-arguments\\n  \\"\\"\\"\\n\\n  @doc \\"\\"\\"\\n  Greets the user by name, or by saying \\"Hello, World!\\"\\n  if no name is given.\\n  \\"\\"\\"\\n  @spec hello(String.t) :: String.t\\n  def hello, do: \\"Hello, World!\\"\\n  def hello(name), do: \\"Hello, #{name}!\\"\\nend"}
341	30	6aace88fa01c06dd5c6f9fb8	pending	python	simple-cipher	\N	\N	0	1	2016-03-06 10:54:58	2016-03-06 10:54:58	224	{"\\\\python\\\\simple-cipher\\\\cipher.py":"from itertools import cycle\\r\\nfrom random import randint\\r\\n\\r\\nclass Cipher:\\r\\n    \\r\\n    _ord_a = ord(\\"a\\")\\r\\n    _ord_z = ord(\\"z\\")\\r\\n    _ord_az = _ord_z - _ord_a + 1\\r\\n    \\r\\n    def __init__(self, key = None):\\r\\n        if key and not (key.isalpha() and key.islower()):\\r\\n            raise ValueError(\\"Invalid key\\")\\r\\n        self.key = key or self._generate_key()\\r\\n         \\r\\n    def encode(self, msg):\\r\\n        return \\"\\".join(map(self._encode_char, msg, cycle(self.key)))\\r\\n\\r\\n    def decode(self, emsg):\\r\\n        return \\"\\".join(map(self._decode_char, emsg, cycle(self.key)))\\r\\n\\r\\n    @staticmethod\\r\\n    def _generate_key():\\r\\n        return \\"\\".join(chr(randint(Cipher._ord_a, Cipher._ord_z)) for _ in range(100))\\r\\n        \\r\\n        \\r\\n    def _encode_char(self, c, k):\\r\\n        if not c.isalpha():\\r\\n            return \\"\\"\\r\\n        enc = ord(c.lower()) + ord(k) - self._ord_a\\r\\n        return (enc \\u003e self._ord_z) and chr(enc - self._ord_az) or chr(enc)\\r\\n    \\r\\n    def _decode_char(self, c, k):\\r\\n        dec = ord(c) - ord(k) + self._ord_a\\r\\n        return (dec \\u003c self._ord_a) and chr(dec + self._ord_az) or chr(dec)\\r\\n\\r\\n\\r\\nclass Caesar(Cipher):\\r\\n    def __init__(self):\\r\\n        super().__init__(\\"d\\")"}
342	30	cb22fda4c5bc4849b782c0ad	pending	csharp	phone-number	\N	\N	0	1	2015-09-28 22:51:30	2015-09-28 22:51:30	225	{"\\\\csharp\\\\phone-number\\\\PhoneNumber.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace Exercism.phonenumber\\r\\n{\\r\\n    public class PhoneNumber\\r\\n    {\\r\\n        public string Number { get; private set; }\\r\\n        private string[] separators = { \\"(\\", \\")\\", \\"-\\", \\" \\", \\".\\" };\\r\\n\\r\\n        public string AreaCode { get; set; }\\r\\n\\r\\n        public PhoneNumber(string number)\\r\\n        {\\r\\n            StringBuilder b = new StringBuilder();\\r\\n\\r\\n            foreach(var element in number.Split(separators, StringSplitOptions.RemoveEmptyEntries))\\r\\n                b.Append(element);\\r\\n\\r\\n            if (b.Length == 11 \\u0026\\u0026 b[0] == '1')\\r\\n                b.Remove(0, 1);\\r\\n            else if(b.Length != 10)\\r\\n            {\\r\\n                b.Clear();\\r\\n                b.Append(\\"0000000000\\");\\r\\n            }\\r\\n\\r\\n            this.Number = b.ToString();\\r\\n            this.AreaCode = b.ToString().Remove(3);\\r\\n        }\\r\\n\\r\\n        public override string ToString()\\r\\n        {\\r\\n            StringBuilder b = new StringBuilder(this.Number);\\r\\n\\r\\n            b.Insert(0, '(');\\r\\n            b.Insert(4, ')');\\r\\n            b.Insert(5, \\" \\");\\r\\n            b.Insert(9, \\"-\\");\\r\\n\\r\\n            return b.ToString();\\r\\n        }\\r\\n    }\\r\\n}"}
343	30	d317b534197ae70f804b7f68	superseded	haskell	word-count	\N	\N	0	1	2015-12-14 20:29:10	2015-12-14 20:29:10	226	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
344	30	609a76386f73b5a5004ba26f	hibernating	haskell	word-count	\N	\N	0	2	2016-01-28 20:05:41	2016-01-28 20:05:41	226	{"WordCount.hs":"module WordCount where\\n\\nimport Data.List (sort, group)\\nimport Data.List.Split (wordsBy)\\nimport Data.Map (Map, fromList)\\nimport Data.Char (isAlphaNum, toLower)\\n\\nwordCount :: [Char] -\\u003e Map [Char] Int\\nwordCount = fromList . toPairs . group . sort . words'\\n  where\\n    toPairs = map (\\\\ws -\\u003e (head ws, length ws))\\n    words' = wordsBy (not . isAlphaNum) . (map toLower)"}
345	30	c0a3855052ae624462067ee4	done	ruby	strain	\N	\N	0	1	2016-02-04 08:30:53	2016-02-04 08:30:53	227	{"array.rb":"class Array\\r\\n  def keep\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if yield(i)}\\r\\n    out\\r\\n  end\\r\\n\\r\\n  def discard\\r\\n    out = []\\r\\n    each {|i| out \\u003c\\u003c i if not yield(i)}\\r\\n    out\\r\\n  end\\r\\nend\\r"}
346	30	a4d4cd81b0e994d6ba61b13e	hibernating	python	leap	\N	\N	0	1	2015-11-25 11:49:53	2015-11-25 11:49:53	228	{"year.py":"#!/usr/bin/python\\n\\ndef is_leap_year(year):\\n    if year % 400 == 0 or year % 4 == 0 and year % 100 != 0:\\n        return True\\n    else:\\n        return False"}
347	30	e215d0f143f46238170e45c5	done	python	crypto-square	\N	\N	0	1	2015-11-19 15:17:37	2015-11-19 15:17:37	229	{"crypto_square.py":"import math\\n\\ndef encode(text):\\n\\ttext=text.lower()\\n\\ttext=[k for k in text if k in '1234567890abcdefghijklmnopqrtsuvwxyz']\\n\\tsize=get_size(text)\\n\\tnew=[]\\n\\tfor i in range(0,size):\\n\\t\\tnewstr=''\\n\\t\\tk=i\\n\\t\\twhile k \\u003c len(text):\\n\\t\\t\\tnewstr+=text[k]\\n\\t\\t\\tk+=size\\n\\t\\tnew.append(newstr)\\n\\treturn ' '.join(new)\\n\\ndef get_size(text):\\n\\treturn int(math.ceil(len(text)**0.5))"}
348	30	705b769fda854fdaaf93d56c	pending	swift	leap	\N	\N	0	1	2016-01-21 04:18:51	2016-01-21 04:18:51	230	{"Bob.swift":"import Foundation\\n\\npublic struct Year {\\n\\n\\tlet year: Int\\n\\tpublic let isLeapYear : Bool = false;\\n\\t\\n\\tpublic init(calendarYear: Int){\\n\\t\\tself.year = calendarYear\\n\\t\\tself.isLeapYear = calculateLeapYear()\\n\\t}\\n\\t\\n\\tfunc calculateLeapYear() -\\u003e Bool {\\n\\t\\tif isDivisibleBy(400){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(100){\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif isDivisibleBy(4){\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\tfunc isDivisibleBy(number:Int) -\\u003e Bool{\\n\\t\\treturn (self.year%number == 0)\\n\\t}\\n\\n}"}
349	35	a7577b4e8087624d088b712d	done	perl5	etl	\N	\N	0	1	2015-09-26 16:27:26	2015-09-26 16:27:26	231	{"ETL.pm":"package ETL;\\n\\nuse warnings;\\nuse strict;\\n\\nsub transform{\\n\\tmy $new_hash = {};\\n\\tmy $hash_ref = shift;\\n\\t\\n\\twhile( my ($key, $val) = each %{$hash_ref} ){\\n\\t\\tforeach my $value ( @{$val} ){\\n\\t\\t\\t$new_hash-\\u003e{lc $value} = $key if !$new_hash-\\u003e{lc $value};\\n\\t\\t}\\n\\t}\\n\\treturn $new_hash;\\n};\\n#input  { 1 =\\u003e ['A', 'E'], 2 =\\u003e ['D', 'G'] }\\n#output { a =\\u003e 1, e =\\u003e 1, d =\\u003e 2, g =\\u003e 2 }\\n1;"}
350	35	94571628edf3801c3bdc46ed	done	python	bob	\N	\N	0	3	2015-09-04 21:03:44	2015-09-04 21:03:44	232	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
351	35	8a12dd3b374d8f17de76f625	superseded	python	bob	\N	\N	0	1	2015-10-16 11:47:28	2015-10-16 11:47:28	232	{"bob.py":"def hey(message):\\n\\tif message.strip() == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
352	35	e9a30c2fc3de7400fff770ae	superseded	python	bob	\N	\N	0	2	2016-01-05 21:53:36	2016-01-05 21:53:36	232	{"bob.py":"def hey(message):\\n\\tmessage = message.strip();\\n\\tif message == \\"\\" or message == \\"Bob\\": #No real message, substracting blank spaces\\n\\t\\treturn \\"Fine. Be that way!\\"\\n\\telif message.isupper(): #all caps = yelling\\n\\t\\treturn \\"Whoa, chill out!\\"\\n\\telif message[-1] == \\"?\\": #basic question (ends in '?')\\n\\t\\treturn \\"Sure.\\"\\n\\telse:\\n\\t\\treturn \\"Whatever.\\""}
353	35	237afa12074132b0c7d5c9a1	\N	racket	grep	\N	\N	0	3	2015-07-24 02:42:19	2015-07-24 02:42:19	233	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (file-\\u003elines path)]\\n                      #:when ((matcher) rx line))\\n             (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n\\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n\\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n\\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (define file-matchlists (map (Î» (path) (grep-file path pattern))\\n                               paths))\\n  (for ([path paths]\\n        [matches file-matchlists])\\n       ((file-handler) path matches)))"}
354	35	b97bda82fac5209162286331	\N	racket	grep	\N	\N	0	1	2015-07-25 03:11:53	2015-07-25 03:11:53	233	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))])\\n             (if ((matcher) rx line)\\n                 (cons (cons line-number line) match-list)\\n                 match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
355	35	b55c984381e7692a4fd981a0	\N	racket	grep	\N	\N	0	4	2015-08-31 11:54:09	2015-08-31 11:54:09	233	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (for/list ([line-number (in-naturals 1)]\\n             [line (file-\\u003elines path)]\\n             #:when ((matcher) rx line))\\n            (cons line-number line)))\\n\\n;; =============================================================================\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define file-handler (make-parameter #f))\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  ;; File-handler procedures\\n  (define (display-file-path-if-at-least-one-match path matches)\\n    (unless (null? matches)\\n      (displayln path)))\\n  (define (display-each-match path matches)\\n    (for ([match matches])\\n         (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match))))\\n  \\n  ;; Parse command line arguments\\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  ;; We choose a regular expression matching function, based on entire-line-mode...\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  ;; ...and possibly negate it, for invert-mode.\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  ;; We also choose a procedure for displaying results, based on at-least-one-mode.\\n                  (file-handler (if (at-least-one-mode)\\n                                    display-file-path-if-at-least-one-match\\n                                    display-each-match))\\n                  (values pattern paths)))\\n  \\n  ;; Finally, we get matches for each file and hand them off to the chosen file-handler.\\n  (for* ([path paths]\\n         [matches (grep-file path pattern)])\\n        ((file-handler) path matches)))"}
356	35	7d15ee96b56d8a2bacbb24f4	\N	racket	grep	\N	\N	0	2	2016-01-07 11:09:34	2016-01-07 11:09:34	233	{"grep.rkt":"#lang racket\\n\\n(provide\\n grep-file\\n ;; (-\\u003e Path-String Regexp (Listof (Pairof Natural String)))\\n ;; Find lines in a file matching a regular expression pattern.\\n ;; Output is a list of pairs containing the number and contents of\\n ;;  each matching line.\\n )\\n\\n(define at-least-one-mode (make-parameter #f))\\n(define invert-mode (make-parameter #f))\\n(define entire-line-mode (make-parameter #f))\\n(define matcher (make-parameter regexp-match?))\\n\\n(define (grep-file path rx)\\n  (reverse (for/fold ([match-list null])\\n                     ([line-number (in-naturals 1)]\\n                      [line (in-lines (open-input-file path))]\\n                      #:when ((matcher) rx line))\\n                 (cons (cons line-number line) match-list))))\\n\\n;; =============================================================================\\n\\n(module+ main\\n  ;; Extra challenge: fill in this submodule so that running\\n  ;;  `racket grep.rkt PATTERN FILE ...`\\n  ;; runs grep on each FILE searching for PATTERN, and prints the results\\n  ;; to stdout.\\n  \\n  (define-values (pattern paths)\\n    (command-line #:once-each\\n                  [\\"-l\\" \\"Print the names of files that contain at least one matching line.\\"\\n                        (at-least-one-mode #t)]\\n                  [\\"-v\\" \\"Collect all lines that fail to match the pattern.\\"\\n                        (invert-mode #t)]\\n                  [\\"-x\\" \\"Only match entire lines.\\"\\n                        (entire-line-mode #t)]\\n                  #:args (pattern . paths)\\n                  (matcher (if (entire-line-mode)\\n                               regexp-match-exact?\\n                               regexp-match?))\\n                  (matcher (if (invert-mode)\\n                               (negate (matcher))\\n                               (matcher)))\\n                  (values pattern paths)))\\n  \\n  (define file-matchlists (map (lambda (path)\\n                                 (grep-file path pattern))\\n                               paths))\\n  (if (at-least-one-mode)\\n      (for ([path paths]\\n            [matchs file-matchlists])\\n           (when (not (null? matchs))\\n             (displayln path)))\\n      (for ([path paths] \\n            [matchs file-matchlists]\\n            #:when #t\\n            [match matchs])\\n           (printf \\"~a:~a:~a\\\\n\\" path (car match) (cdr match)))))"}
357	35	b02e62cc5a027692b1b3ad24	done	ruby	house	\N	\N	0	4	2015-07-13 05:27:56	2015-07-13 05:27:56	234	{"house.rb":"class House\\n  def verse(n)\\n    \\"This is #{lines.last(n).join(' ')}.\\\\n\\"\\n  end\\n\\n  def verses(offset, length)\\n    length.times.map { |n| \\"#{verse offset+n}\\\\n\\" }.join(\\"\\")\\n  end\\n\\n  private\\n\\n  def lines\\n    [ \\"the horse and the hound and the horn that belonged to\\",\\n      \\"the farmer sowing his corn that kept\\",\\n      \\"the rooster that crowed in the morn that woke\\",\\n      \\"the priest all shaven and shorn that married\\",\\n      \\"the man all tattered and torn that kissed\\",\\n      \\"the maiden all forlorn that milked\\",\\n      \\"the cow with the crumpled horn that tossed\\",\\n      \\"the dog that worried\\",\\n      \\"the cat that killed\\",\\n      \\"the rat that ate\\",\\n      \\"the malt that lay in\\",\\n      \\"the house that Jack built\\",\\n    ]\\n  end\\nend"}
358	35	9e0625c8a6a9728b20dd3750	superseded	ruby	house	\N	\N	0	3	2015-11-23 23:57:47	2015-11-23 23:57:47	234	{"house.rb":"class House\\n  def verse(n)\\n    \\"This is #{lines.drop(lines.size - n).join(' ')}.\\\\n\\"\\n  end\\n\\n  def verses(offset, length)\\n    length.times.map { |n| \\"#{verse offset+n}\\\\n\\" }.join(\\"\\")\\n  end\\n\\n  private\\n\\n  def lines\\n    [ \\"the horse and the hound and the horn that belonged to\\",\\n      \\"the farmer sowing his corn that kept\\",\\n      \\"the rooster that crowed in the morn that woke\\",\\n      \\"the priest all shaven and shorn that married\\",\\n      \\"the man all tattered and torn that kissed\\",\\n      \\"the maiden all forlorn that milked\\",\\n      \\"the cow with the crumpled horn that tossed\\",\\n      \\"the dog that worried\\",\\n      \\"the cat that killed\\",\\n      \\"the rat that ate\\",\\n      \\"the malt that lay in\\",\\n      \\"the house that Jack built\\",\\n    ]\\n  end\\nend"}
395	16	c6387a6ecc1d3e2fc1e8a88c	hibernating	haskell	scrabble-score	\N	\N	0	2	2015-12-02 15:37:23	2015-12-02 15:37:23	260	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nimport Data.Char (toUpper)\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| y `elem` \\"AEIOULNRST\\" = 1\\r\\n\\t| y == 'D' || y == 'G' = 2\\r\\n\\t| y `elem` \\"BCMP\\" = 3\\r\\n\\t| y `elem` \\"FHVWY\\" = 4\\r\\n\\t| y == 'K' = 5\\r\\n\\t| y == 'J' || y == 'X' = 8\\r\\n\\t| y == 'Q' || y == 'Z' = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\twhere y = toUpper x\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
359	35	8106c92dd4fc5eb027bc7b60	superseded	ruby	house	\N	\N	0	1	2016-01-15 15:55:26	2016-01-15 15:55:26	234	{"house.rb":"class House\\n  def verse(n)\\n    pieces = [\\n      [\\"horse and the hound and the horn\\", \\"belonged to the\\",],\\n      [\\"farmer sowing his corn\\",           \\"kept the\\"],\\n      [\\"rooster that crowed in the morn\\",  \\"woke the\\"],\\n      [\\"priest all shaven and shorn\\",      \\"married the\\"],\\n      [\\"man all tattered and torn\\",        \\"kissed the\\"],\\n      [\\"maiden all forlorn\\",               \\"milked the\\"],\\n      [\\"cow with the crumpled horn\\",       \\"tossed the\\"],\\n      [\\"dog\\",                              \\"worried the\\"],\\n      [\\"cat\\",                              \\"killed the\\"],\\n      [\\"rat\\",                              \\"ate the\\"],\\n      [\\"malt\\",                             \\"lay in the\\"],\\n      [\\"house\\",                            \\"Jack built.\\"],\\n    ]\\n\\n    \\"This is the #{\\n      pieces[pieces.size-n, n]\\n        .map { |noun1, verb1| \\"#{noun1} that #{verb1}\\" }\\n        .join(\\" \\")\\n    }\\\\n\\"\\n  end\\n\\n  def verses(offset, length)\\n    length.times.map { |n| \\"#{verse offset+n}\\\\n\\" }.join(\\"\\")\\n  end\\nend"}
360	35	7bb1dfb264be7e8794bca88a	superseded	ruby	house	\N	\N	0	2	2016-01-29 18:31:17	2016-01-29 18:31:17	234	{"house.rb":"class House\\n  def verse(n)\\n    \\"This is #{lines.drop(lines.size - n).join(' ')}\\\\n\\"\\n  end\\n\\n  def verses(offset, length)\\n    length.times.map { |n| \\"#{verse offset+n}\\\\n\\" }.join(\\"\\")\\n  end\\n\\n  private\\n\\n  def lines\\n    [ \\"the horse and the hound and the horn that belonged to\\",\\n      \\"the farmer sowing his corn that kept\\",\\n      \\"the rooster that crowed in the morn that woke\\",\\n      \\"the priest all shaven and shorn that married\\",\\n      \\"the man all tattered and torn that kissed\\",\\n      \\"the maiden all forlorn that milked\\",\\n      \\"the cow with the crumpled horn that tossed\\",\\n      \\"the dog that worried\\",\\n      \\"the cat that killed\\",\\n      \\"the rat that ate\\",\\n      \\"the malt that lay in\\",\\n      \\"the house that Jack built.\\",\\n    ]\\n  end\\nend"}
361	35	96a2a82e399bdcdfd6e24e57	done	haskell	sum-of-multiples	\N	\N	0	2	2015-12-04 01:29:36	2015-12-04 01:29:36	235	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: [Integer] -\\u003e Integer -\\u003e Integer \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
362	35	ffe0ddb993823eb364a92da3	superseded	haskell	sum-of-multiples	\N	\N	0	1	2015-12-07 08:05:06	2015-12-07 08:05:06	235	{"/haskell/sum-of-multiples/sumOfMultiples.hs":"module SumOfMultiples where\\r\\n\\r\\nimport Data.List\\r\\n\\r\\nsumOfMultiplesDefault :: Integer -\\u003e Integer\\r\\nsumOfMultiplesDefault = sumOfMultiples [3, 5]\\r\\n\\r\\nsumOfMultiples :: (Ord a, Num a, Enum a) =\\u003e [a] -\\u003e a -\\u003e a \\r\\nsumOfMultiples xs y = sum $ nub $ filter (\\u003c y) [a * b | a \\u003c- [1..y], b \\u003c- xs]"}
363	35	b5e5abd41304f7b74b2eb93a	pending	clojure	beer-song	\N	\N	0	1	2015-10-19 04:28:58	2015-10-19 04:28:58	236	{"beer.clj":"(ns beer\\n  (:require [clojure.string :refer [join]]))\\n\\n(defn construct-no-verse []\\n  \\"No more bottles of beer on the wall, no more bottles of beer.\\\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\")\\n\\n(defn indefinite-article [num]\\n  (if (= num 1)\\n    \\"it\\"\\n    \\"one\\"))\\n\\n(defn pluralize-bottle [num]\\n  (cond\\n   (= num 0) \\"no more bottles\\"\\n   (= num 1) \\"1 bottle\\"\\n   (\\u003e num 1) (str num \\" bottles\\")))\\n\\n(defn construct-verse [num]\\n  (str (pluralize-bottle num)\\n       \\" of beer on the wall, \\"\\n       (pluralize-bottle num)\\n       \\" of beer.\\\\nTake \\"\\n       (indefinite-article num)\\n       \\" down and pass it around, \\"\\n       (pluralize-bottle (- num 1))\\n       \\" of beer on the wall.\\\\n\\"))\\n\\n(defn verse [num]\\n  (if (= 0 num)\\n   (construct-no-verse)\\n   (construct-verse num)))\\n\\n(defn sing\\n  ([start] (sing start 0))\\n  ([start end]\\n   (join \\"\\\\n\\" (map verse (range start (- end 1) -1)))))"}
364	35	bb1e026836094fd37e468dd5	\N	elixir	bob	\N	\N	0	1	2015-09-12 05:11:45	2015-09-12 05:11:45	237	{"bob.exs":"defmodule Teenager do\\n\\n  def hey(input) do\\n    cond do\\n      empty? input -\\u003e \\"Fine. Be that way!\\"\\n      question? input -\\u003e \\"Sure.\\"\\n      yelling? input -\\u003e \\"Whoa, chill out!\\"\\n      true -\\u003e \\"Whatever.\\"\\n    end\\n  end\\n\\n  defp empty?(input) do\\n    String.strip(input) == \\"\\"\\n  end\\n\\n  defp question?(input) do\\n    String.ends_with?(input, \\"?\\")\\n  end\\n\\n  defp yelling?(input) do\\n    # Check that input is all uppercase and not all downcase.\\n    # This ensures a string with only numerics and punctuation\\n    # (like \\"1, 2, 3\\") will not be detected as a yell.\\n    upcase?(input) and not downcase?(input)\\n  end\\n\\n  defp upcase?(input) do\\n    String.upcase(input) == input\\n  end\\n\\n  defp downcase?(input) do\\n    String.downcase(input) == input\\n  end\\nend"}
365	14	7cb5f4b105a039315e7c0201	done	ruby	strain	\N	\N	0	2	2015-11-08 16:01:58	2015-11-08 16:01:58	238	{"array.rb":"module Strainable\\n  def keep\\n    each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    keep { |item| !yield(item) }\\n  end\\nend\\n\\nclass Array\\n  include Strainable\\nend"}
366	14	b03ba8f7d6507604b462505e	superseded	ruby	strain	\N	\N	0	1	2016-01-23 06:09:31	2016-01-23 06:09:31	238	{"array.rb":"class Array\\n  def keep\\n    #self.select { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element if yield(element)\\n    end\\n  end\\n\\n  def discard\\n    #self.reject { |element| yield(element) }\\n    self.each_with_object([]) do |element, result|\\n      result \\u003c\\u003c element unless yield(element)\\n    end\\n  end\\nend"}
367	14	3e143182a3a93c6ec2166126	\N	elixir	word-count	\N	\N	0	1	2015-12-25 02:09:30	2015-12-25 02:09:30	239	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    words = sentence\\n      |\\u003e String.replace(~r/[^\\\\w\\\\s-]/, \\"\\")\\n      |\\u003e String.replace(~r/_/, \\" \\")\\n      |\\u003e String.split\\n      |\\u003e Enum.map(\\u0026String.downcase/1)\\n\\n    Enum.reduce(words, %{}, fn(word, accum) -\\u003e\\n      Dict.update(accum, word, 1, fn(count) -\\u003e count + 1 end)\\n    end)\\n  end\\nend"}
368	14	d7726dc7a8730a741ce8bcd4	\N	elixir	word-count	\N	\N	0	2	2016-01-05 12:49:53	2016-01-05 12:49:53	239	{"word_count.exs":"defmodule Words do\\n  @doc \\"\\"\\"\\n  Count the number of words in the sentence.\\n\\n  Words are compared case-insensitively.\\n  \\"\\"\\"\\n  @spec count(String.t) :: map()\\n  def count(sentence) do\\n    words = sentence\\n      |\\u003e String.downcase\\n      |\\u003e String.split(~r/[^[:alnum:]-]/u, trim: true)\\n\\n    Enum.reduce(words, %{}, fn(word, accum) -\\u003e\\n      Map.update(accum, word, 1, \\u0026(\\u00261 + 1))\\n    end)\\n  end\\nend"}
369	14	62dc252d9a7a11222829bd85	pending	go	difference-of-squares	\N	\N	0	1	2015-12-17 17:01:34	2015-12-17 17:01:34	240	{"difference_of_squares.go":"package diffsquares\\n\\ntype iter func(int) int\\n\\nfunc SquareOfSums(n int) int {\\n\\tsum := iterate(n, func(n int) int { return n })\\n\\treturn sum * sum\\n}\\n\\nfunc SumOfSquares(n int) int {\\n\\treturn iterate(n, func(n int) int { return n * n })\\n}\\n\\nfunc Difference(n int) int {\\n\\treturn SquareOfSums(n) - SumOfSquares(n)\\n}\\n\\nfunc iterate(n int, fn iter) int {\\n\\tsum := 0\\n\\tfor i := 0; i \\u003c= n; i++ {\\n\\t\\tsum += fn(i)\\n\\t}\\n\\treturn sum\\n}"}
370	14	f8ebc352cbf61e21c6851356	pending	go	luhn	\N	\N	0	1	2015-11-08 04:23:30	2015-11-08 04:23:30	241	{"/go/luhn/luhn.go":"package luhn\\n\\nimport (\\n\\t\\"log\\"\\n\\t\\"regexp\\"\\n\\t\\"strconv\\"\\n)\\n\\nfunc sum(input string) int {\\n\\t//re := regexp.MustCompile(\\"[^0-9]\\")\\n\\t//input = re.ReplaceAllString(input, \\"\\")\\n\\n\\ttotal := 0\\n\\n\\tfor i := 0; i \\u003c len(input); i++ {\\n\\t\\tnum := int(input[len(input)-1-i] - '0')\\n\\t\\tif i%2 == 0 {\\n\\t\\t\\ttotal += num\\n\\t\\t\\tcontinue\\n\\t\\t}\\n\\t\\toddcase := num * 2\\n\\t\\tif oddcase \\u003e= 10 {\\n\\t\\t\\toddcase -= 9\\n\\t\\t}\\n\\t\\ttotal += oddcase\\n\\t}\\n\\n\\treturn total\\n}\\n\\nfunc Valid(input string) bool {\\n\\tre := regexp.MustCompile(\\"[^0-9]\\")\\n\\tinput = re.ReplaceAllString(input, \\"\\")\\n\\n\\tif len(input) == 0 {\\n\\t\\treturn false\\n\\t}\\n\\n\\ttotal := sum(input)\\n\\n\\tif total%10 == 0 {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}\\n\\nvar _ = log.Println\\n\\nfunc AddCheck(input string) string {\\n\\tfor i := 0; i \\u003c 10; i++ {\\n\\t\\tcheck := strconv.Itoa(i)\\n\\t\\tret := input + check\\n\\t\\tif Valid(ret) {\\n\\t\\t\\treturn ret\\n\\t\\t}\\n\\t}\\n\\treturn \\"\\"\\n}"}
371	14	8d5950513d9f057825ab3080	done	python	word-count	\N	\N	0	1	2015-11-19 22:54:40	2015-11-19 22:54:40	242	{"wordcount.py":"__author__ = 'js'\\n\\nfrom collections import Counter\\n\\ndef word_count(sentence):\\n    # breaks string into list of words so that it is\\n    # in the proper format for Counter()\\n    wordList = sentence.split()\\n    # returns number of time element is repeated along with name of element\\n    return Counter(wordList)"}
372	14	ed4b4d29666661408cc01dbe	\N	ruby	hamming	\N	\N	0	1	2016-02-01 04:45:57	2016-02-01 04:45:57	243	{"hamming.rb":"class Hamming\\n\\tVERSION = 1\\n\\tdef self.compute(stringA, stringB)\\n\\t\\tcounter = 0 \\n\\t\\ttester = 0\\n\\t\\tif stringA.length == stringB.length \\n\\t\\t\\twhile counter \\u003c stringA.length do \\n\\t\\t\\t\\tif stringA[counter] != stringB[counter]\\n\\t\\t\\t\\t\\ttester += 1 \\n\\t\\t\\t\\tend\\n\\t\\t\\t\\tcounter += 1\\n\\t\\t\\tend\\n\\t\\t\\ttester \\n\\t\\telse \\n\\t\\t\\traise ArgumentError.new(\\"Strands must be same length\\")\\n\\t\\tend\\n\\tend\\n\\nend"}
373	41	84224805b3e5b05c6d5186fa	\N	php	roman-numerals	\N	\N	0	2	2016-03-17 09:55:53	2016-03-17 09:55:53	244	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number)\\n{\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\n\\tforeach(array_reverse($numerals) as $k =\\u003e $v) {\\n\\t\\t$roman_num .= str_repeat($k, $number / $v);\\n\\t\\t$number %= $v;\\n\\t}\\n\\treturn $roman_num;\\n}"}
374	41	74f80aaef75f618f2f7b7b07	\N	php	roman-numerals	\N	\N	0	1	2016-03-21 21:23:50	2016-03-21 21:23:50	244	{"roman-numerals.php":"\\u003c?php\\n\\nfunction toRoman($number) {\\n\\t$numerals = [\\n\\t\\t'I' =\\u003e 1,\\n\\t\\t'IV' =\\u003e 4,\\n\\t\\t'V' =\\u003e 5,\\n\\t\\t'IX' =\\u003e 9,\\n\\t\\t'X' =\\u003e 10,\\n\\t\\t'XL' =\\u003e 40,\\n\\t\\t'L' =\\u003e 50,\\n\\t\\t'XC' =\\u003e 90,\\n\\t\\t'C' =\\u003e 100,\\n\\t\\t'CD' =\\u003e 400,\\n\\t\\t'D' =\\u003e 500,\\n\\t\\t'CM' =\\u003e 900,\\n\\t\\t'M' =\\u003e 1000\\n\\t];\\n\\n\\t$roman_num = null;\\n\\tforeach( array_reverse( $numerals ) as $k =\\u003e $v ) {\\n\\t\\twhile($number \\u003e= $v) {\\n\\t\\t\\t$roman_num .= $k;\\n\\t\\t\\t$number -= $v;\\n\\t\\t}\\n\\t}\\n\\treturn $roman_num;\\n}"}
375	41	e1e81e1a71b8995bf3877a3c	pending	ruby	hamming	\N	\N	0	1	2016-03-20 19:17:52	2016-03-20 19:17:52	245	{"hamming.rb":"class Hamming\\n  def self.compute(dna_strand_1, dna_strand_2)\\n    hamming_distance = 0\\n    dna_strand_1.each_char.with_index { |value, index| hamming_distance += 1 if value != dna_strand_2[index] }\\n    hamming_distance\\n  end\\nend"}
376	41	2d201d0e378a1d047963a8ad	pending	ruby	raindrops	\N	\N	0	1	2016-03-24 07:47:22	2016-03-24 07:47:22	246	{"/ruby/raindrops/raindrops.rb":"require 'prime'\\n\\nclass Raindrops\\n\\tdef self.convert(number)\\n\\t\\t\\n\\t\\tp_factors = Prime.prime_division(number).flatten.uniq\\n\\t\\traindrops = \\"\\"\\n\\t\\tp_factors.each do |p_factor| \\n\\t\\t\\tcase p_factor\\n\\t\\t\\twhen 3\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Pling\\"\\n\\t\\t\\twhen 5\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plang\\"\\n\\t\\t\\twhen 7\\n\\t\\t\\t\\traindrops \\u003c\\u003c \\"Plong\\"\\n\\t\\t\\tend\\n\\t\\tend\\n\\t\\traindrops = \\"#{number}\\" if raindrops.empty?\\n\\t\\traindrops\\n\\tend\\nend"}
377	41	67fcb6dd25de400e8b239b11	hibernating	clojure	bob	\N	\N	0	1	2016-03-24 17:43:45	2016-03-24 17:43:45	247	{"bob.clj":"(ns bob\\n  (:require [clojure.string :as st]))\\n\\n(defn question?[sentence]\\n  (= \\"?\\" (str (last sentence))))\\n\\n(defn yelling? [sentence]\\n  (= sentence (st/upper-case sentence)))\\n\\n(defn response-for [sentence]\\n  (cond\\n   (st/blank? sentence) \\"Fine. Be that way!\\"\\n   (yelling? sentence)  \\"Woah, chill out!\\"\\n   (question? sentence) \\"Sure.\\"\\n   :else                \\"Whatever.\\"))"}
378	41	8d9580b36c8512410ba68bfc	\N	python	robot-name	\N	\N	0	1	2016-03-23 20:00:09	2016-03-23 20:00:09	248	{"robot.py":"import random\\nimport string\\n\\nclass Robot:\\n    def __init__(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return\\n    \\n    def reset(self):\\n        self.name = ''.join(random.SystemRandom().choice(string.ascii_uppercase) for _ in range(2)) + \\\\\\n                    ''.join(random.SystemRandom().choice(string.digits) for _ in range(3))\\n        return"}
379	6	1e7e1b23fcadf6e7bb45f421	pending	scala	nucleotide-count	\N	\N	0	1	2016-02-01 03:17:28	2016-02-01 03:17:28	249	{"src/main/scala/dna.scala":"class DNA(val string: String) {\\n\\n  val dnaString   = SafeDNA.filter(string, DNADefaults.strand)\\n  val histogram   = dnaString.groupBy(c =\\u003e c).map(m =\\u003e (m._1 -\\u003e m._2.size))\\n\\n  val nucleotideCounts  = DNADefaults.histogram ++ histogram\\n  def count(char: Char) = SafeDNA.count(char, nucleotideCounts)\\n}\\n\\n// A, C, G, T\\nobject DNADefaults {\\n  def strand    = List('A', 'C', 'G', 'T')\\n  def histogram = Map('A' -\\u003e 0, 'T' -\\u003e 0, 'C' -\\u003e 0, 'G' -\\u003e 0)\\n}\\n\\nobject SafeDNA {\\n  def filter(string: String, strand: List[Char]) = {\\n    string.filter { c =\\u003e\\n      if (strand.contains(c)) {\\n        true\\n      } else {\\n        throw new IllegalArgumentException\\n      }\\n    }\\n  }\\n\\n  def count(char: Char, nucleotides: Map[Char, Int]) = {\\n    nucleotides.getOrElse(char, { throw new IllegalArgumentException })\\n  }\\n}"}
380	6	c3cee64f22edacc5f13fa439	hibernating	ruby	difference-of-squares	\N	\N	0	1	2015-12-17 09:50:10	2015-12-17 09:50:10	250	{"difference_of_squares.rb":"class Squares\\n  attr_accessor :num\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def square_of_sums\\n    (1..num).reduce(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    (1..num).reduce { |v,i| v + i**2 }\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
381	6	c311dfc9d43b7c13df4aabd1	pending	javascript	grade-school	\N	\N	0	1	2015-11-13 11:43:26	2015-11-13 11:43:26	251	{"/javascript/grade-school/grade-school.js":"function School(){\\n\\tthis.db = {};\\n}\\n\\nSchool.prototype.add = function(name,num){\\n\\tif(this.db[num]) this.db[num].push(name);\\n\\telse this.db[num] = [name];\\n}\\n\\nSchool.prototype.roster = function(){\\n\\tfor (key in this.db){\\n\\t\\tif (this.db.hasOwnProperty(key)){\\n\\t\\t\\tthis.db[key] = this.db[key].sort();\\n\\t\\t}\\n\\t}\\n\\treturn this.db;\\n};\\n\\nSchool.prototype.grade = function(num){\\n\\tif(this.roster()[num]){\\n\\t\\treturn this.db[num].sort();\\n\\t}\\n\\telse{\\n\\t\\treturn [];\\n\\t}\\n};\\n\\nmodule.exports = School;"}
382	6	fdd1d9161ea3978092baf55f	pending	java	etl	\N	\N	0	1	2015-11-22 12:06:13	2015-11-22 12:06:13	252	{"src\\\\main\\\\java\\\\Etl.java":"import java.util.*;\\r\\n\\r\\npublic class Etl {\\r\\n\\r\\n    public Etl() {\\r\\n    }\\r\\n\\r\\n    public Map transform(Map map) {\\r\\n        return reverse(map);\\r\\n    }\\r\\n\\r\\n    //map must be a bijection in order for this to work properly\\r\\n    public static \\u003cK,V\\u003e Map\\u003cV,K\\u003e reverse(Map\\u003cK,V\\u003e map) {\\r\\n        Map\\u003cV,K\\u003e rev = new Map\\u003cV, K\\u003e() {@Override public int size() {\\r\\n                return 0;\\r\\n            }@Override public boolean isEmpty() {\\r\\n                return false;\\r\\n            }@Override public boolean containsKey(Object key) {\\r\\n                return false;\\r\\n            }@Override public boolean containsValue(Object value) {\\r\\n                return false;\\r\\n            }@Override public K get(Object key) {\\r\\n                return null;\\r\\n            }@Override public K put(V key, K value) {\\r\\n                return null;\\r\\n            }@Override public K remove(Object key) {\\r\\n                return null;\\r\\n            }@Override public void putAll(Map\\u003c? extends V, ? extends K\\u003e m) {\\r\\n\\r\\n            }@Override public void clear() {\\r\\n\\r\\n            }@Override public Set\\u003cV\\u003e keySet() {\\r\\n                return null;\\r\\n            }@Override public Collection\\u003cK\\u003e values() {\\r\\n                return null;\\r\\n            }@Override public Set\\u003cEntry\\u003cV, K\\u003e\\u003e entrySet() {\\r\\n                return null;\\r\\n            }@Override public boolean equals(Object o) {\\r\\n                return false;\\r\\n            }@Override public int hashCode() {\\r\\n                return 0;\\r\\n            }};\\r\\n        for(Map.Entry\\u003cK,V\\u003e entry : map.entrySet())\\r\\n            rev.put(entry.getValue(), entry.getKey());\\r\\n        return rev;\\r\\n    }\\r\\n}"}
383	6	f9a3aec7f51d294241eff67f	pending	python	gigasecond	\N	\N	0	1	2016-01-29 21:31:37	2016-01-29 21:31:37	253	{"gigasecond.py":"from datetime import date\\r\\nfrom datetime import timedelta\\r\\n\\r\\ndef add_gigasecond(x):\\r\\n\\r\\n\\tx += timedelta(days=11574, seconds=6400)\\r\\n\\r\\n\\treturn x"}
384	34	44f36d2657c9ba4cdffa889b	superseded	haskell	grains	\N	\N	0	2	2015-09-21 10:21:05	2015-09-21 10:21:05	254	{"grains.hs":"module Grains (grains, square, total) where\\n\\nsquare :: Integer -\\u003e Integer\\nsquare x = 2 ^ (x - 1)\\n\\ngrains = map (\\\\x -\\u003e 2 ^ x) [0..63] \\n\\ntotal = sum grains"}
385	34	fc83b6df70f409bf83553392	superseded	haskell	grains	\N	\N	0	1	2015-11-05 23:03:33	2015-11-05 23:03:33	254	{"grains.hs":"module Grains (grains, square, total) where\\n\\nsquare :: Integer -\\u003e Integer\\nsquare x = 2 ^ (x - 1)\\n\\ngrains = map (\\\\x -\\u003e 2 ^ x) [0..64] \\n\\ntotal = sum grains"}
386	34	be342355889648e5988ea345	pending	haskell	grains	\N	\N	0	3	2015-12-05 06:41:40	2015-12-05 06:41:40	254	{"grains.hs":"module Grains (square, total) where\\n\\nsquare :: Integer -\\u003e Integer\\nsquare = (2 ^) . pred\\n\\ntotal :: Integer\\ntotal = pred $ 2 ^ 64"}
387	34	e05d1c53000fe4a1b3600ec3	pending	javascript	etl	\N	\N	0	2	2015-09-21 05:24:29	2015-09-21 05:24:29	255	{"etl.js":"module.exports = function (old) {\\n    return Object.keys(old).reduce(function(result, prop) {\\n        return old[prop].reduce(function(ltrs, ltr) {\\n            ltrs[ltr.toLowerCase()] = parseInt(prop, 10);\\n            return ltrs;\\n        }, result);\\n    }, {});\\n}"}
388	34	d46e6a3a99c8860f43ee51d5	superseded	javascript	etl	\N	\N	0	1	2015-10-10 14:12:41	2015-10-10 14:12:41	255	{"etl.js":"module.exports = function (old) {\\n    var result = {};\\n\\n    for (var prop in old)\\n        old[prop].forEach(function (ltr) {\\n            result[ltr.toLowerCase()] = parseInt(prop, 10);\\n        });\\n\\n    return result;\\n}"}
389	34	c4c4e04567a14e1d86f949f0	\N	javascript	anagram	\N	\N	0	1	2016-01-13 02:07:06	2016-01-13 02:07:06	256	{"anagram.js":"var Anagram = function(string) {\\n  this.string = string;\\n};\\n\\nAnagram.prototype.createDictionary = function(input) {\\n  var dict = {};\\n  for (var i = 0; i \\u003c input.length; i++) {\\n    var lil = input[i].toLowerCase();\\n    if (dict[lil] !== undefined) { dict[lil] += 1;}\\n    else { dict[lil] = 1;}\\n  }\\n  return dict;\\n};\\n\\nAnagram.prototype.checker = function(dict, check) {\\n  if (Object.keys(dict).length !== Object.keys(check).length) { return false; }\\n  for (var i in dict ) {\\n    if (dict[i] !== check[i]) { return false; }\\n  }\\n  return true;\\n};\\n\\nAnagram.prototype.matches = function(input) {\\n  if (arguments.length \\u003e 1) {\\n    var temp = [];\\n    for (var i = 0; i \\u003c arguments.length; i++) {\\n      temp.push(arguments[i]);\\n    }\\n    input = temp;\\n  }\\n  if (typeof(input) === 'string'){input = [input];}\\n  var matches = [];\\n  var string = this.string.toLowerCase();\\n  if (string === '') { return [];}\\n  var dict = this.createDictionary(string);\\n    for (var i = 0; i \\u003c input.length; i++) {\\n      if (input[i].toLowerCase() === string) { continue; }\\n      var check = this.createDictionary(input[i]);\\n      if (this.checker(dict, check)) { matches.push(input[i]); }\\n    }\\n  return matches;\\n};\\n\\nmodule.exports = Anagram;"}
390	34	79c5644abd2a4f84852c8bb1	done	ruby	word-count	\N	\N	0	2	2015-09-24 08:57:03	2015-09-24 08:57:03	257	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    @phrase = phrase\\n  end\\n\\n  def word_count\\n    @word_count ||= count_words\\n  end\\n\\n  private\\n\\n  def count_words\\n    counts = Hash.new(0)\\n    @phrase.split(/[^'\\\\p{L}\\\\d]+/).each do |word|\\n      counts[word.downcase] += 1\\n    end\\n    counts\\n  end\\n\\nend"}
391	34	09e0d0dd01d86a58bf3f18e8	superseded	ruby	word-count	\N	\N	0	1	2015-10-24 19:49:01	2015-10-24 19:49:01	257	{"word-count.rb":"class Phrase\\n\\n  def initialize(phrase)\\n    @phrase = phrase\\n  end\\n\\n  def word_count\\n    @word_count ||= count_words\\n  end\\n\\n  private\\n\\n  def count_words\\n    counts = Hash.new(0)\\n    @phrase.split(/[^'a-zA-Z0-9]+/).each do |word|\\n      counts[word.downcase] += 1\\n    end\\n    counts\\n  end\\n\\nend"}
392	34	48eb581d6c719abb15f8e1db	done	coffeescript	nth-prime	\N	\N	0	2	2015-09-22 14:40:58	2015-09-22 14:40:58	258	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    @_findPrime(number)\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_findPrime: (amount) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c amount\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection[amount - 1]\\n\\nmodule.exports = Prime"}
393	34	809c4b03442e3b39c9015186	superseded	coffeescript	nth-prime	\N	\N	0	1	2015-11-06 06:52:28	2015-11-06 06:52:28	258	{"prime.coffee":"class Prime \\n\\n  @nth: (number) -\\u003e\\n    @_validate(number)\\n    new Collection(@_primes_collection_with_size(number)).last\\n\\n  @_validate: (number) -\\u003e\\n    throw \\"Prime is not possible\\" if number \\u003c 1\\n\\n  @_primes_collection_with_size: (size) -\\u003e\\n    currentNum = 2\\n    collection = []\\n    while collection.length \\u003c size\\n      if (!collection.some (prime) -\\u003e (currentNum % prime is 0))\\n        collection.push(currentNum)\\n      currentNum += 1;\\n    collection\\n\\n\\nclass Collection \\n\\n  constructor: (array) -\\u003e\\n    @array = array\\n    @last = this._last()\\n\\n  _last: -\\u003e\\n    @array.slice(-1)[0]\\n  \\n\\nmodule.exports = Prime"}
396	16	5af97f8a9beb525be1f45223	superseded	haskell	scrabble-score	\N	\N	0	1	2015-12-24 22:27:37	2015-12-24 22:27:37	260	{"Scrabble.hs":"module Scrabble (scoreLetter, scoreWord) where\\r\\n\\r\\nscoreLetter :: Char -\\u003e Int\\r\\nscoreLetter x\\r\\n\\t| x `elem` \\"AEIOULNRSTaeioulnrst\\" = 1\\r\\n\\t| x `elem` \\"DGdg\\" = 2\\r\\n\\t| x `elem` \\"BCMPbcmp\\" = 3\\r\\n\\t| x `elem` \\"FHVWYfhvwy\\" = 4\\r\\n\\t| x `elem` \\"Kk\\" = 5\\r\\n\\t| x `elem` \\"JXjx\\" = 8\\r\\n\\t| x `elem` \\"QZqz\\" = 10\\r\\n\\t| otherwise = error \\"Not a valid letter\\"\\r\\n\\t\\r\\nscoreWord :: String -\\u003e Int\\r\\nscoreWord = sum . map scoreLetter "}
397	16	5ff9e7d9675d7400928a8d1f	\N	ruby	roman-numerals	\N	\N	0	1	2016-01-30 10:03:49	2016-01-30 10:03:49	261	{"roman_numerals.rb":"class Fixnum\\n  def to_roman\\n    roman_letters = \\"\\"\\n    thousands_digit = get_thousands_digit(self)\\n    hundreds_digit = get_hundreds_digit(self)\\n    tens_digit = get_tens_digit(self)\\n    ones_digit = get_ones_digit(self)\\n\\n    roman_letters = get_thousands_letter(thousands_digit) + get_hundreds_letter(hundreds_digit) + get_tens_letter(tens_digit) + get_ones_letter(ones_digit)\\n    roman_letters\\n  end\\n\\n  def get_correct_letters(current_digit, current_digit_one_letter, current_digit_five_letter, next_digit_one_letter)\\n    letter = \\"\\"\\n    case current_digit\\n    when 1..3\\n      current_digit.times do\\n        letter += current_digit_one_letter\\n      end\\n    when 4\\n      letter = current_digit_one_letter + current_digit_five_letter\\n    when 5..8\\n      letter = current_digit_five_letter\\n      (current_digit - 5).times do\\n        letter += current_digit_one_letter\\n      end\\n    when 9\\n      letter = current_digit_one_letter + next_digit_one_letter\\n    else\\n      letter = \\"\\"\\n    end\\n    letter\\n  end\\n\\n  def get_thousands_letter(thousands_digit)\\n    letter = \\"\\"\\n    thousands_digit.times do\\n      letter += \\"M\\"\\n    end\\n    letter\\n  end\\n\\n  def get_hundreds_letter(hundreds_digit)\\n    get_correct_letters(hundreds_digit, \\"C\\", \\"D\\", \\"M\\")\\n  end\\n\\n  def get_tens_letter(tens_digit)\\n    get_correct_letters(tens_digit, \\"X\\", \\"L\\", \\"C\\")\\n  end\\n\\n  def get_ones_letter(ones_digit)\\n    get_correct_letters(ones_digit, \\"I\\", \\"V\\", \\"X\\")\\n  end\\n\\n  def get_thousands_digit(number)\\n    number % 10000 / 1000\\n  end\\n\\n  def get_hundreds_digit(number)\\n    number % 1000 / 100\\n  end\\n\\n  def get_tens_digit(number)\\n    number % 100 / 10\\n  end\\n\\n  def get_ones_digit(number)\\n    number % 10\\n  end\\nend"}
398	16	49dde6ce51a37035ebf11f3a	done	ruby	leap	\N	\N	0	1	2016-02-05 09:55:50	2016-02-05 09:55:50	262	{"year.rb":"class Year\\n  def self.leap?(year)\\n    return false unless divisible_by?(year, 4)\\n\\n    is_century_but_not_fourth?(year) ? false : true\\n  end\\n\\n  private\\n  def self.divisible_by?(number, numerator)\\n    number % numerator == 0\\n  end\\n\\n  def self.is_century_but_not_fourth?(year)\\n    divisible_by?(year, 100) \\u0026\\u0026 !divisible_by?(year, 400)\\n  end\\nend"}
399	16	c0f30a53c8a4dc4c036300eb	\N	python	hamming	\N	\N	0	1	2015-11-16 04:12:20	2015-11-16 04:12:20	263	{"hamming.py":"def distance(sta, fin):\\n    dif = 0\\n    for ch1, ch2 in zip(sta, fin):\\n        if ch1 != ch2:\\n            dif += 1\\n    return dif"}
400	18	d330e703619599a6355ac576	pending	python	space-age	\N	\N	0	1	2016-01-26 21:17:54	2016-01-26 21:17:54	264	{"space_age.py":"import types\\n\\nclass SpaceAge:\\n    ORBITAL_PERIODS = (('earth', 31557600), ('mercury', 7600543),\\n        ('venus', 19414149), ('mars', 59354032), ('jupiter', 374355659),\\n        ('saturn', 929292362), ('uranus', 2651370019), ('neptune', 5200418560))\\n\\n    def __init__(self, seconds):\\n        self.seconds = seconds\\n        for planet, period in self.ORBITAL_PERIODS:\\n            years = round(seconds/period, 2)\\n            f = types.MethodType(lambda age, years=years: years, self)\\n            setattr(self, 'on_{}'.format(planet), f)"}
401	18	4856058a43ec5c92f79ac783	hibernating	ruby	leap	\N	\N	0	1	2015-09-27 01:16:52	2015-09-27 01:16:52	265	{"year.rb":"module Year\\n  def self.leap?(year)\\n    return false if year.odd?\\n    return true if year % 400 == 0\\n    return false if year % 100 == 0\\n    return true if year % 4 == 0\\n    false\\n  end\\nend"}
402	18	a4857237a3a29e70ccf3b5d8	pending	python	hello-world	\N	\N	0	1	2016-02-22 23:42:30	2016-02-22 23:42:30	266	{"hello_world.py":"#\\n# Skeleton file for the Python \\"Hello World\\" exercise.\\n#\\n\\n\\ndef hello(name=None):\\n    if name is None:\\n        return 'Hello, World!'\\n    else:\\n        return 'Hello, ' + name + '!'"}
403	18	71ea88611a4b4dfe278456a4	superseded	ruby	robot-name	\N	\N	0	1	2016-01-31 02:04:59	2016-01-31 02:04:59	267	{"robot_name.rb":"class Robot\\n  attr_accessor :name\\n\\n  def initialize\\n    @name = random_name\\n  end\\n\\n  def reset\\n    self.name = random_name\\n  end\\n\\n  def alphabet\\n    ('A'..'Z').to_a\\n  end\\n\\n  def numbers\\n    (0..9).to_a\\n  end\\n\\n  def random_name\\n    alphabet.sample(2).join + numbers.sample(3).join\\n  end\\nend"}
404	18	9cd4c7e31ec68353ea4bd9e1	hibernating	ruby	robot-name	\N	\N	0	2	2016-02-06 12:30:45	2016-02-06 12:30:45	267	{"robot_name.rb":"class Robot\\n  attr_accessor :name\\n\\n  def initialize\\n    @name = random_name\\n  end\\n\\n  def reset\\n    self.name = random_name\\n  end\\n\\n  private\\n\\n  def alphabet\\n    ('A'..'Z').to_a\\n  end\\n\\n  def numbers\\n    (0..9).to_a\\n  end\\n\\n  def random_name\\n    alphabet.sample(2).join + numbers.sample(3).join\\n  end\\nend"}
405	18	b595e208f7e5258138deb071	\N	csharp	bob	\N	\N	0	1	2015-09-07 09:29:03	2015-09-07 09:29:03	268	{"bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Fine. Be that way!\\";\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Whoa, chill out!\\";\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn \\"Sure.\\";\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn \\"Whatever.\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
406	18	b58ccd6e764ec3238aa5d12d	\N	csharp	bob	\N	\N	0	2	2015-09-10 02:13:14	2015-09-10 02:13:14	268	{"Bob.cs":"using System;\\r\\nusing System.Text.RegularExpressions;\\r\\n\\r\\nnamespace BobAnswer\\r\\n{\\r\\n\\tpublic static class Bob\\r\\n\\t{\\r\\n\\t\\tstatic private Regex yell = new Regex(\\"^[^a-z]*[A-Z]+[^a-z]*$\\");\\r\\n\\t\\tstatic private Regex question = new Regex(\\"([?]\\\\\\\\s*)$\\");\\r\\n\\t\\tstatic private Regex silence = new Regex (\\"^\\\\\\\\s*$\\");\\r\\n\\r\\n\\t\\tprivate const string YELL_ANSWER = \\"Whoa, chill out!\\";\\r\\n\\t\\tprivate const string QUESTION_ANSWER = \\"Sure.\\";\\r\\n\\t\\tprivate const string SILENCE_ANSWER = \\"Fine. Be that way!\\";\\r\\n\\t\\tprivate const string NORMAL_ANSWER = \\"Whatever.\\";\\r\\n\\r\\n\\t\\tstatic public string Hey(string message)\\r\\n\\t\\t{\\r\\n\\t\\t\\tif (silence.IsMatch (message))\\r\\n\\t\\t\\t\\treturn SILENCE_ANSWER;\\r\\n\\t\\t\\telse if (yell.IsMatch (message))\\r\\n\\t\\t\\t\\treturn YELL_ANSWER;\\r\\n\\t\\t\\telse if (question.IsMatch (message))\\r\\n\\t\\t\\t\\treturn QUESTION_ANSWER;\\r\\n\\t\\t\\telse\\r\\n\\t\\t\\t\\treturn NORMAL_ANSWER;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}"}
428	45	a00ea16557a189f8a33e2d5a	hibernating	ruby	gigasecond	\N	\N	0	1	2016-01-11 08:47:57	2016-01-11 08:47:57	281	{"gigasecond.rb":"require 'date'\\nrequire 'time'\\nGS = 1_000_000_000\\n\\nclass Gigasecond\\n  def self.from(t)\\n    if t.is_a? Date\\n      origin_time = t.to_time\\n    else\\n      origin_time = t\\n    end\\n    return (origin_time + GS).to_date\\n  end\\nend"}
407	18	c87018cb752c8498086eb429	pending	ruby	kindergarten-garden	\N	\N	0	1	2015-09-03 20:55:54	2015-09-03 20:55:54	269	{"garden.rb":"class Garden\\n  \\n  STUDENTS = %w(Alice Bob Charlie David Eve Fred Ginny Harriet Ileana Joseph Kincaid Larry)\\n  PLANT_MAP = {V: :violets, R: :radishes, G: :grass, C: :clover}\\n  \\n  def initialize(plants,students=nil)\\n    @plants = plants\\n    @students = (students || STUDENTS).sort\\n    @students.each do |kid|\\n      self.class.send(:define_method,\\"#{kid.downcase}\\") do\\n        codes = []\\n        rows = @plants.split(\\"\\\\n\\")\\n        cols = @students.index kid\\n        row_0_0 = rows[0][cols*2]\\n        row_0_1 = rows[0][cols*2+1]\\n        row_1_0 = rows[1][cols*2]\\n        row_1_1 = rows[1][cols*2+1]\\n        codes = [row_0_0, row_0_1,row_1_0, row_1_1]\\n        codes.map {|c| PLANT_MAP[c.to_sym]}\\n      end\\n    end\\n  end\\n\\nend"}
408	24	1affdfdba1de5e73e904573d	hibernating	ruby	bob	\N	\N	0	1	2015-12-12 02:00:43	2015-12-12 02:00:43	270	{"bob.rb":"class Bob\\n  def hey(message)\\n    if message.nil? || message.empty?\\n      \\"Fine. Be that way!\\"\\n    elsif message =~ /(^[A-Z\\\\d][\\\\dA-Z\\\\s\\\\W]+)/\\n      \\"Woah, chill out!\\"\\n    elsif message.end_with? \\"?\\"\\n      \\"Sure.\\"\\n    else\\n      \\"Whatever.\\"\\n    end\\n  end\\nend"}
409	42	6130924684c48ddfdf1ab3d3	superseded	python	series	\N	\N	0	1	2015-08-30 12:34:31	2015-08-30 12:34:31	271	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:\\n        digit_list = []\\n        #Convert each digit to integer\\n        for d in digits:\\n            digit_list.append(int(d))\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
410	42	e431ddef28e34c587b32879e	hibernating	python	series	\N	\N	0	2	2015-10-12 09:44:10	2015-10-12 09:44:10	271	{"series.py":"def slices(digits, series_length):\\n    digits_length = len(digits)\\n    results = []\\n    if series_length \\u003e digits_length:\\n        raise ValueError('Series length exceeded the length of input string of digits')        \\n    elif series_length == 0:\\n        raise ValueError('Series length must be greater than 0')\\n    else:       \\n        #Convert each digit to integer\\n        digit_list = [int(d) for d in digits]\\n        #List all possible series\\n        for i in xrange(digits_length - series_length + 1):\\n            series = digit_list[i:i + series_length]\\n            results.insert(i, series)\\n    return results"}
411	42	7f621366b00cc50a0cf28e93	\N	lua	rna-transcription	\N	\N	0	1	2015-09-02 00:49:19	2015-09-02 00:49:19	272	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    local rna_nucleotides = {}\\n    for nucleotide in dna_strand:gmatch('.') do\\n        if nucleotide == 'A' then\\n            insert(rna_nucleotides, 'U')\\n        elseif nucleotide == 'T' then\\n            insert(rna_nucleotides, 'A')\\n        elseif nucleotide == 'G' then\\n            insert(rna_nucleotides, 'C')\\n        elseif nucleotide == 'C' then\\n            insert(rna_nucleotides, 'G')\\n        end\\n    end\\n\\n    return concat(rna_nucleotides)\\nend"}
412	42	6f74241ca15b098419dd9aab	\N	lua	rna-transcription	\N	\N	0	2	2015-09-30 08:15:06	2015-09-30 08:15:06	272	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    local rna_nucleotides = {}\\n    local rna_conversion = {\\n        A = 'U',\\n        T = 'A',\\n        G = 'C',\\n        C = 'G',\\n    }\\n\\n    for nucleotide in dna_strand:gmatch('.') do\\n        insert(rna_nucleotides, rna_conversion[nucleotide])\\n    end\\n\\n    return concat(rna_nucleotides)\\nend"}
413	42	a8cb7444f0930930bd2c7ac5	\N	lua	rna-transcription	\N	\N	0	3	2015-10-26 09:05:17	2015-10-26 09:05:17	272	{"rna-transcription.lua":"local concat, insert = table.concat, table.insert\\n\\nreturn function(dna_strand)\\n    return dna_strand:gsub('%a',  { C = 'G', G = 'C', A = 'U', T = 'A' })\\nend"}
414	27	a7bbfc123acb4642d559bc8a	pending	go	binary-search-tree	\N	\N	0	1	2015-11-24 21:18:29	2015-11-24 21:18:29	273	{"/go/binary-search-tree/binary_search_tree.go":"package binarysearchtree\\n\\ntype SearchTreeData struct {\\n\\tdata  int\\n\\tleft  *SearchTreeData\\n\\tright *SearchTreeData\\n}\\n\\nfunc Bst(data int) *SearchTreeData {\\n\\treturn \\u0026SearchTreeData{data: data}\\n}\\n\\nfunc (s *SearchTreeData) Insert(data int) {\\n\\tswitch {\\n\\tcase data \\u003c= s.data \\u0026\\u0026 s.left == nil:\\n\\t\\ts.left = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003e s.data \\u0026\\u0026 s.right == nil:\\n\\t\\ts.right = \\u0026SearchTreeData{data: data}\\n\\tcase data \\u003c= s.data:\\n\\t\\ts.left.Insert(data)\\n\\tcase data \\u003e s.data:\\n\\t\\ts.right.Insert(data)\\n\\t}\\n}\\n\\nfunc (s *SearchTreeData) MapString(f func(int) string) []string {\\n\\tif s == nil {\\n\\t\\treturn []string{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapString(f), f(s.data)), s.right.MapString(f)...)\\n}\\n\\nfunc (s *SearchTreeData) MapInt(f func(int) int) []int {\\n\\tif s == nil {\\n\\t\\treturn []int{}\\n\\t}\\n\\n\\treturn append(append(s.left.MapInt(f), f(s.data)), s.right.MapInt(f)...)\\n}"}
415	45	8d9ef503d707e5596055a7d4	done	ruby	grains	\N	\N	0	1	2015-11-04 01:19:53	2015-11-04 01:19:53	274	{"grains.rb":"class Grains\\n  def square i\\n    2**(i-1)\\n  end\\n\\n  def total\\n    (1..64).map{|i| square(i) }.reduce(:+)\\n  end\\nend"}
416	45	458294b7e2a7e6dd24332951	done	python	word-count	\N	\N	0	1	2015-09-01 12:54:31	2015-09-01 12:54:31	275	{"/python/word-count/wordcount.py":"def word_count(s):\\n    if s == '':\\n        return\\n\\n    s = s.replace('\\\\n', ' ')\\n    s = s.replace('\\\\t', ' ')\\n    word_list = s.split(' ')\\n    word_dict = {}\\n\\n    for w in word_list:\\n        if w == '':\\n            continue\\n\\n        if not word_dict.has_key(w):\\n            word_dict[w] = 1\\n        else:\\n            word_dict[w] += 1\\n\\n    return word_dict"}
417	45	774eaf2083907a92609db308	superseded	haskell	nucleotide-count	\N	\N	0	4	2015-08-28 14:34:42	2015-08-28 14:34:42	276	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ pairsMap 0 nucleotides ++ pairsMap 1 dna\\r\\n    where pairsMap val ns = ns `zip` repeat val\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
429	45	a90917f0b876c040720324e8	done	ruby	bob	\N	\N	0	1	2015-08-25 10:15:07	2015-08-25 10:15:07	282	{"bob.rb":"class Bob\\n\\n  attr_reader :input\\n\\n  def hey(input)\\n    @input = input\\n\\n    respond_to_silence ||\\n    respond_to_shouting ||\\n    respond_to_question ||\\n    respond_to_statement\\n  end\\n\\n  private\\n\\n  def respond_to_silence\\n    \\"Fine. Be that way!\\" if silent?\\n  end\\n\\n  def respond_to_shouting\\n    \\"Woah, chill out!\\" if shouting?\\n  end\\n\\n  def respond_to_question\\n    \\"Sure.\\" if question?\\n  end\\n\\n  def respond_to_statement\\n    \\"Whatever.\\"\\n  end\\n\\n  def silent?\\n    input.strip.empty?\\n  end\\n\\n  def shouting?\\n    input.upcase == input\\n  end\\n\\n  def question?\\n    input.end_with?('?')\\n  end\\n\\nend"}
418	45	b81cea38be6a6343892126f7	hibernating	haskell	nucleotide-count	\N	\N	0	5	2015-10-23 13:47:07	2015-10-23 13:47:07	276	{"DNA.hs":"module DNA where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromList)\\r\\nimport Control.Monad (forM_)\\r\\nimport Data.Array.ST (readArray, writeArray, newArray, runSTUArray)\\r\\nimport Data.Array.Unboxed (UArray, assocs)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ show n\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts = fromList . filter (\\\\(n,_) -\\u003e n `elem` nucleotides) . assocs . countArray\\r\\n\\t\\r\\ncountArray :: DNA -\\u003e UArray Nucleotide Int\\r\\ncountArray dna = runSTUArray $ do\\r\\n\\tcounts \\u003c- newArray ('A','Z') 0\\r\\n\\tforM_ dna $ \\\\n -\\u003e do\\r\\n\\t\\tc \\u003c- readArray counts n\\r\\n\\t\\twriteArray counts n (1+c)\\r\\n\\treturn counts"}
419	45	73a154090a6a2dc4659bdeeb	superseded	haskell	nucleotide-count	\N	\N	0	1	2015-10-28 12:42:42	2015-10-28 12:42:42	276	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n dna = if n `elem` nucleotides\\r\\n    then length $ filter (== n) dna \\r\\n    else error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
420	45	08f31da96a1b0dd54f1163be	superseded	haskell	nucleotide-count	\N	\N	0	2	2015-11-14 12:12:43	2015-11-14 12:12:43	276	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map (Map(), fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromList $ map (\\\\n -\\u003e (n, count n dna)) nucleotides\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
421	45	2b98d01fc6267b810662cd94	superseded	haskell	nucleotide-count	\N	\N	0	3	2015-11-14 20:52:21	2015-11-14 20:52:21	276	{"DNA.hs":"module DNA (count, nucleotideCounts) where\\r\\n\\r\\nimport Data.List (elem)\\r\\nimport Data.Map.Strict (Map, fromListWith, union, fromList)\\r\\n\\r\\ntype Nucleotide = Char\\r\\ntype DNA = [Nucleotide]\\r\\n\\r\\ncount :: Nucleotide -\\u003e DNA -\\u003e Int\\r\\ncount n \\r\\n    | n `elem` nucleotides = length . filter (== n)\\r\\n    | otherwise = error $ \\"invalid nucleotide \\" ++ (show n)\\r\\n\\r\\nnucleotideCounts :: DNA -\\u003e Map Nucleotide Int\\r\\nnucleotideCounts dna = fromListWith (+) $ (pairsMap 0 nucleotides) ++ (pairsMap 1 dna)\\r\\n    where pairsMap val ns = ns `zip` (repeat val)\\r\\n\\r\\nnucleotides :: [Nucleotide]\\r\\nnucleotides = \\"ACGT\\"\\r"}
422	45	083eca18fa0ca21004b5764e	hibernating	python	leap	\N	\N	0	2	2015-11-16 00:47:55	2015-11-16 00:47:55	277	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False"}
423	45	9ec8a77ee5c3a28e4dfdca21	superseded	python	leap	\N	\N	0	1	2016-03-10 20:33:47	2016-03-10 20:33:47	277	{"year.py":"# Tests for a leap year\\n\\ndef is_leap_year(year):\\n\\tif year%4 == 0 and year%100 != 0:\\n\\t\\treturn True\\n\\n\\telif year%100 == 0 and year%400 == 0:\\n\\t\\treturn True\\n\\n\\telse:\\n\\t\\treturn False\\n\\n\\n# class is_leap_year(object):\\n# \\tdef __init__(self, year):\\n# \\t\\tself.year = year\\n\\n# \\tdef _is_divisible_by(self, num):\\n# \\t\\treturn self.year % num == 0\\n\\n# \\tdef is_leap_year(self):\\n# \\t\\treturn self._is_divisible_by(4) and not self._is_divisible_by(100) or self._is_divisible_by(400)"}
424	45	bb6a92fdf0993b5fa7f6bf6c	pending	erlang	sum-of-multiples	\N	\N	0	1	2015-10-02 15:09:20	2015-10-02 15:09:20	278	{"/erlang/sum-of-multiples/sum_of_multiples.erl":"-module(sum_of_multiples).\\n-export([sumOfMultiplesDefault/1, sumOfMultiples/2]).\\n\\n-spec sumOfMultiplesDefault(pos_integer()) -\\u003e non_neg_integer().\\nsumOfMultiplesDefault(UpTo) -\\u003e\\n  sumOfMultiples([3, 5], UpTo).\\n\\n-spec sumOfMultiples([pos_integer()], pos_integer()) -\\u003e non_neg_integer().\\nsumOfMultiples(Multiples, UpTo) -\\u003e\\n  Matches = [I || I \\u003c- lists:seq(1, UpTo - 1), any_multiple(I, Multiples)],\\n  sum(Matches).\\n\\n-spec sum([number()]) -\\u003e number().\\nsum(List) -\\u003e\\n  lists:foldl(fun(X, Y) -\\u003e X + Y end, 0, List).\\n\\n%% Predicate which returns whether I is a multiple of any value in Multiples.\\n-spec any_multiple(integer(), [integer()]) -\\u003e boolean().\\nany_multiple(I, Multiples) -\\u003e\\n  lists:any(fun(M) -\\u003e I rem M =:= 0 end, Multiples)."}
425	45	44421cc3409caf21b40dc29b	pending	python	crypto-square	\N	\N	0	2	2015-09-15 17:58:54	2015-09-15 17:58:54	279	{"crypto_square.py":"import math\\nimport re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = int( math.ceil( math.sqrt( len(clean) ) ) )\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = divmod( len(clean), size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
426	45	d8fd3214f08f89c5054af6e0	superseded	python	crypto-square	\N	\N	0	1	2015-12-29 02:33:36	2015-12-29 02:33:36	279	{"crypto_square.py":"import re\\ninvalid_chars = re.compile(r\\"[^a-z0-9]\\")\\n\\ndef encode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    encoded = \\"\\".join( clean[ i : len(clean) : size ] for i in range(size) )\\n\\n    return \\" \\".join( encoded[ i : i+5 ] for i in xrange(0, len(encoded), 5) )\\n\\ndef decode(s):\\n    clean = invalid_chars.sub(\\"\\", s.lower())\\n    size = 1\\n    while size ** 2 \\u003c len(clean):\\n        size += 1\\n\\n    # text may not be a perfect square, making some columns in the original taller than others\\n    base, rem = ( len(clean) / size, len(clean) % size )\\n    bigger_end = rem * (base + 1)\\n\\n    # get the characters from the taller columns first, then the shorter columns\\n    bigger_columns = [ clean[ i : bigger_end : base+1 ] for i in range(base + 1) ]\\n    # need the additional empty string here for zip\\n    smaller_columns = [ clean[ bigger_end+i : len(clean) : base ] for i in range(base) ] + [ \\"\\" ]\\n\\n    # finally, join everything together\\n    return \\"\\".join( \\"\\".join(t) for t in zip(bigger_columns, smaller_columns) )"}
427	45	67aa364cd2d4edea33304692	hibernating	ruby	hamming	\N	\N	0	1	2015-08-23 12:47:13	2015-08-23 12:47:13	280	{"hamming.rb":"class Hamming\\n\\n\\tdef self.compute(a,b)\\n\\t\\ta,b = a.split(''), b.split('')\\n\\tend\\nend"}
430	45	25f20cc4837e3e4eef9c5371	superseded	csharp	leap	\N	\N	0	1	2015-11-12 16:50:26	2015-11-12 16:50:26	283	{"Program.cs":"﻿using System;\\r\\n\\r\\nclass Program {\\r\\n    static void Main(string[] args) {\\r\\n        int year = int.Parse(args[0]);\\r\\n        Console.WriteLine(Year.IsLeap(year));\\r\\n    }\\r\\n}\\r\\n\\r\\npublic static class Year {\\r\\n    public static bool IsLeap(int year) {\\r\\n        return IsDivisible(year, 400) || IsDivisible(year, 4) \\u0026\\u0026 !IsDivisible(year, 100);\\r\\n    }\\r\\n\\r\\n    private static bool IsDivisible(int numerator, int denominator) {\\r\\n        return numerator % denominator == 0;\\r\\n    }\\r\\n}\\r"}
431	45	906695f3af7754234c8a6a7c	hibernating	csharp	leap	\N	\N	0	2	2016-02-21 16:30:39	2016-02-21 16:30:39	283	{"Program.cs":"﻿public static class Year {\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// Determines whether the given year is a leap year.\\r\\n    /// The result is true iff the year is divisible by 400 or divisible by 4, but not 100\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003cparam name=\\"year\\"\\u003e\\u003c/param\\u003e\\r\\n    /// \\u003creturns\\u003e\\u003c/returns\\u003e\\r\\n    public static bool IsLeap(int year) {\\r\\n        return IsDivisible(year, 400) \\r\\n            || IsDivisible(year, 4) \\u0026\\u0026 !IsDivisible(year, 100);\\r\\n    }\\r\\n\\r\\n    private static bool IsDivisible(int numerator, int denominator) {\\r\\n        return numerator % denominator == 0;\\r\\n    }\\r\\n}\\r"}
432	45	d161cbe0bb7ec59883d501c8	\N	ruby	raindrops	\N	\N	0	1	2016-02-20 02:44:41	2016-02-20 02:44:41	284	{"raindrops.rb":"class Raindrops\\n  VERSION = 1\\n\\n  def self.convert(num)\\n    string = \\"\\"\\n    string += \\"Pling\\" if num % 3 == 0\\n    string += \\"Plang\\" if num % 5 == 0\\n    string += \\"Plong\\" if num % 7 == 0\\n    string.empty? ? num.to_s : string\\n  end\\nend"}
433	45	55ba5d5216614ea8b43cec12	pending	python	meetup	\N	\N	0	1	2015-08-21 22:49:53	2015-08-21 22:49:53	285	{"meetup.py":"from datetime import *\\nfrom itertools import *\\n\\nweekdayNames = [\\n    \\"Monday\\",\\n    \\"Tuesday\\",\\n    \\"Wednesday\\",\\n    \\"Thursday\\",\\n    \\"Friday\\",\\n    \\"Saturday\\",\\n    \\"Sunday\\"]\\n\\nschedules = {\\n    \\"1st\\": lambda days: days[0],\\n    \\"2nd\\": lambda days: days[1],\\n    \\"3rd\\": lambda days: days[2],\\n    \\"4th\\": lambda days: days[3],\\n    \\"5th\\": lambda days: days[4],\\n    \\"last\\": lambda days: days[-1],\\n    \\"teenth\\": lambda days: filter(lambda day:\\n        day.day \\u003e= 13 and day.day \\u003c= 19, days)[0]\\n}\\n\\ndef meetup_day(year, month, weekdayName, schedule):\\n    weekday = weekdayNames.index(weekdayName)\\n    day = date(year, month, 1)\\n    days = []\\n    while day.month == month:\\n        if (day.weekday() == weekday):\\n            days.append(day)\\n        day += timedelta(days = 1)\\n    return schedules[schedule](days)"}
434	45	b610a8d220798372dc686245	pending	ruby	sum-of-multiples	\N	\N	0	1	2015-09-30 02:47:26	2015-09-30 02:47:26	286	{"/ruby/sum-of-multiples/sum.rb":"class SumOfMultiples\\n  def self.to(lim, nums = [3, 5])\\n    (nums.min...lim).to_a.select { |x| nums.any? { |n| x % n == 0 } }.reduce(:+) || 0\\n  end\\n\\n  def initialize(*nums)\\n    @nums = nums\\n  end\\n\\n  def to(lim)\\n    self.class.to(lim, @nums)\\n  end\\nend"}
435	45	9918d35712b56d79fe316197	pending	ruby	difference-of-squares	\N	\N	0	2	2015-09-09 10:59:07	2015-09-09 10:59:07	287	{"squares.rb":"class Squares\\n  attr_reader :num\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def square_of_sums\\n    (1..num).inject(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    (1..num).map{|n| n*n}.inject(:+)\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
436	45	0df032bedb39169c31ebee03	superseded	ruby	difference-of-squares	\N	\N	0	1	2016-02-08 00:06:51	2016-02-08 00:06:51	287	{"squares.rb":"class Squares\\n  attr_reader :num\\n\\n  def initialize(num)\\n    @num = num\\n  end\\n\\n  def square_of_sums\\n    1.upto(num).inject(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    (1..num).to_a.map{|n| n*n}.inject(:+)\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
437	45	eaa3c39d2a426394aac11247	\N	javascript	hamming	\N	\N	0	1	2016-02-11 18:06:43	2016-02-11 18:06:43	288	{"hamming.js":"var Hamming = function() {}\\n\\nHamming.prototype.compute = function compute(strand1, strand2) {\\n  var distance = 0;\\n\\n  if(strand1.length !== strand2.length) throw 'DNA strands must be of equal length.';\\n  if(strand1.length === strand2.length \\u0026\\u0026 strand1 === strand2) return distance;\\n\\n  for(var i = 0; i \\u003c strand1.length; i++) {\\n    if(strand1[i] !== strand2[i]) distance++;\\n  }\\n  return distance;\\n}\\n\\nmodule.exports = Hamming;"}
438	45	b06e18e428aa0de5b4ae92e2	\N	scheme	grains	\N	\N	0	1	2015-10-01 10:22:28	2015-10-01 10:22:28	289	{"grains.scm":"(define-module (grains)\\n  #:export (square total)\\n  #:autoload (srfi srfi-1) (iota))\\n\\n(define (square n)\\n  (expt 2 (- n 1)))\\n\\n(define (total)\\n  (let total-partiel ((k 1) (accu 0))\\n    (if (\\u003e k 64)\\n\\taccu\\n\\t(total-partiel (+ 1 k) (+ accu (square k))))))"}
439	45	72c413851b2df3554d8941cd	pending	ruby	phone-number	\N	\N	0	1	2015-11-21 13:10:09	2015-11-21 13:10:09	290	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n\\tattr_reader:number\\n\\tdef initialize(n)\\n\\t\\t@number = n.gsub(/[^0-9]/, '')\\n\\t\\t@number.slice!(0) if @number.length == 11 \\u0026\\u0026 @number[0] == '1'\\n\\t\\t@number = '0000000000' if @number.length != 10 || n.length \\u003e 14\\n\\tend\\n\\n\\tdef area_code\\n\\t\\t@number.slice(0..2)\\n\\tend\\n\\n\\tdef to_s\\n\\t\\t\\"(#{area_code()}) #{@number.slice(3..5)}-#{@number.slice(6..9)}\\"\\n\\tend\\nend"}
440	45	69b56d044dfa1db011a787ae	superseded	ruby	word-count	\N	\N	0	2	2015-09-25 11:08:59	2015-09-25 11:08:59	291	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    word_list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      word_list[word] += 1\\n    end\\n    word_list\\n  end\\n\\nend"}
441	45	09dad489b526a595c2dc0bd1	done	ruby	word-count	\N	\N	0	4	2015-11-18 20:44:44	2015-11-18 20:44:44	291	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    each_word { |word| list[word] += 1 }\\n    list\\n  end\\n\\nprivate\\n  def each_word\\n    words.downcase.scan(/\\\\w+/) do |word|\\n      yield word\\n    end\\n  end\\n\\nend"}
442	45	e470d78551f67aa223f060b1	superseded	ruby	word-count	\N	\N	0	3	2015-12-05 17:11:42	2015-12-05 17:11:42	291	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    list = Hash.new(0)\\n    words.downcase.scan(/\\\\w+/) { |w| list[w] += 1 }\\n    list\\n  end\\n\\nend"}
443	45	5fd4771748f5d5e0aac06d4a	superseded	ruby	word-count	\N	\N	0	1	2015-12-08 22:49:26	2015-12-08 22:49:26	291	{"word-count.rb":"class Phrase\\n  attr_accessor :words\\n\\n  def initialize(words)\\n    @words = words\\n  end\\n\\n  def word_count\\n    prep_words_for_counting()\\n    word_list = {}\\n    words.split(\\" \\").each do |word|\\n      word_list = process_word_in_list(word, word_list)\\n    end\\n    word_list\\n  end\\n\\nprivate\\n  def process_word_in_list(word, word_list)\\n    word = parse_word(word)\\n    return word_list if word.empty?\\n    word_list[word] ||= 0\\n    word_list[word] += 1\\n    word_list\\n  end\\n\\n  def prep_words_for_counting\\n    words.gsub!(\\",\\", \\" \\")\\n  end\\n\\n  def parse_word(word)\\n    word.gsub!(/[^a-zA-Z0-9]/, \\"\\")\\n    word.downcase!\\n    word\\n  end\\n\\nend"}
444	45	fedc0cfa8de8378f14d5acd0	\N	java	space-age	\N	\N	0	1	2015-10-27 12:50:52	2015-10-27 12:50:52	292	{"src\\\\main\\\\java\\\\SpaceAge.java":"public class SpaceAge {\\r\\n\\r\\n\\tprivate static final long EARTH_YEAR_SECONDS = 31557600;\\r\\n\\r\\n\\tprivate static final double MERCURY_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 000.24084670;\\r\\n\\tprivate static final double VENUS_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 000.61519726;\\r\\n\\tprivate static final double EARTH_SECONDS_IN_YEAR   = EARTH_YEAR_SECONDS * 001.00000000;\\r\\n\\tprivate static final double MARS_SECONDS_IN_YEAR    = EARTH_YEAR_SECONDS * 001.88081580;\\r\\n\\tprivate static final double JUPITER_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 011.86261500;\\r\\n\\tprivate static final double SATURN_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 029.44749800;\\r\\n\\tprivate static final double URANUS_SECONDS_IN_YEAR  = EARTH_YEAR_SECONDS * 084.01684600;\\r\\n\\tprivate static final double NEPTUNE_SECONDS_IN_YEAR = EARTH_YEAR_SECONDS * 164.79132000;\\r\\n\\r\\n\\tprivate final long seconds;\\r\\n\\r\\n\\tpublic SpaceAge(long seconds) {\\r\\n\\t\\tthis.seconds = seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic long getSeconds() {\\r\\n\\t\\treturn this.seconds;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMercury() {\\r\\n\\t\\treturn seconds / MERCURY_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onVenus() {\\r\\n\\t\\treturn seconds / VENUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onEarth() {\\r\\n\\t\\treturn seconds / EARTH_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onMars() {\\r\\n\\t\\treturn seconds / MARS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onJupiter() {\\r\\n\\t\\treturn seconds / JUPITER_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onSaturn() {\\r\\n\\t\\treturn seconds / SATURN_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onUranus() {\\r\\n\\t\\treturn seconds / URANUS_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n\\r\\n\\tpublic double onNeptune() {\\r\\n\\t\\treturn seconds / NEPTUNE_SECONDS_IN_YEAR;\\r\\n\\t}\\r\\n}"}
445	45	704aa19a5e280bfb2d441d5e	\N	elixir	sublist	\N	\N	0	1	2015-09-02 17:08:30	2015-09-02 17:08:30	293	{"sublist.exs":"defmodule Sublist do\\n  @doc \\"\\"\\"\\n  Returns whether the first list is a sublist or a superlist of the second list\\n  and if not whether it is equal or unequal to the second list.\\n  \\"\\"\\"\\n  def compare(a, b) do\\n    cond do\\n      a === b        -\\u003e :equal\\n      sublist?(b, a) -\\u003e :sublist\\n      sublist?(a, b) -\\u003e :superlist\\n      true           -\\u003e :unequal\\n    end\\n  end\\n\\n  defp sublist?(_, []), do: true\\n  defp sublist?([], _), do: false\\n  defp sublist?(haystack, needle) when length(needle) \\u003e length(haystack), do: false\\n  defp sublist?(haystack=[_|haystack_tail], needle) do\\n    starts_with?(haystack, needle) ||  sublist?(haystack_tail, needle)\\n  end\\n\\n  defp starts_with?(_, []), do: true\\n  defp starts_with?([same|haystack_tail], [same|needle_tail]) do\\n    starts_with?(haystack_tail, needle_tail)\\n  end\\n  defp starts_with?(_, _), do: false\\n\\nend"}
446	45	5afd6ba06d7a625d134b857b	\N	scala	bob	\N	\N	0	1	2015-08-30 14:26:35	2015-08-30 14:26:35	294	{"src/main/scala/Bob.scala":"class Bob {\\n\\n  def hey(input: String) = {\\n    if (input.exists(_.isLetter) \\u0026\\u0026 !input.exists(_.isLower)) \\"Whoa, chill out!\\"\\n    else\\n    input.trim.takeRight(1) match {\\n      case \\"\\" =\\u003e \\"Fine. Be that way!\\"\\n      case \\"?\\" =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n  }\\n\\n}"}
447	45	ea701ba700d82e8926a1cf79	\N	ruby	space-age	\N	\N	0	2	2015-09-09 03:11:07	2015-09-09 03:11:07	295	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
448	45	17354711cc3f55a480f0ee51	\N	ruby	space-age	\N	\N	0	1	2015-09-29 21:44:48	2015-09-29 21:44:48	295	{"space_age.rb":"class SpaceAge\\n\\tattr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n      :on_earth =\\u003e 1,\\n      :on_mercury =\\u003e 0.2408467,\\n      :on_venus =\\u003e 0.61519726, \\n      :on_mars =\\u003e 1.8808158, \\n      :on_jupiter =\\u003e 11.862615, \\n      :on_saturn =\\u003e 29.447498, \\n      :on_uranus =\\u003e 84.016846,  \\n      :on_neptune =\\u003e 164.79132 }\\n\\n\\tdef initialize seconds_old\\n\\t\\t@seconds = seconds_old\\n\\tend\\n  # Is this overly complicated? Heck yes. But it was fun!\\n\\tdef on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.) \\n\\t\\t@seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n\\tend\\n  # Alias the methods so that they all point to the on method\\n\\tPLANETARY_YEARS.each { |method_name, length_of_year| alias_method \\"#{method_name}\\", :on }\\nend"}
449	45	2070bea197bea6c25b3a7b32	\N	ruby	space-age	\N	\N	0	3	2015-10-25 08:38:39	2015-10-25 08:38:39	295	{"space_age.rb":"class SpaceAge\\n  attr_reader :seconds\\n  EARTH_YEAR_LENGTH = 31557600\\n  PLANETARY_YEARS = {\\n    :on_earth =\\u003e 1,\\n    :on_mercury =\\u003e 0.2408467,\\n    :on_venus =\\u003e 0.61519726,\\n    :on_mars =\\u003e 1.8808158,\\n    :on_jupiter =\\u003e 11.862615,\\n    :on_saturn =\\u003e 29.447498,\\n    :on_uranus =\\u003e 84.016846,\\n    :on_neptune =\\u003e 164.79132\\n  }\\n\\n  def initialize seconds_old\\n    @seconds = seconds_old\\n  end\\n  # Is this overly complicated? Heck yes. But it was fun!\\n  def on\\n    # Use the name that was used to call this method(__callee__) as the argument to it.\\n    # (Oh yeah, you can totally do that.)\\n    @seconds.to_f/(PLANETARY_YEARS[__callee__] * EARTH_YEAR_LENGTH)\\n  end\\n  # Alias the methods so that they all point to the on method\\n  PLANETARY_YEARS.each { |method_name, length_of_year| alias_method method_name, :on }\\nend"}
450	45	fe65d9505b528d8d3d82228f	pending	go	triangle	\N	\N	0	1	2015-12-30 07:07:20	2015-12-30 07:07:20	296	{"triangle.go":"package triangle\\n\\nimport (\\n\\t\\"math\\"\\n)\\n\\ntype Kind struct {\\n\\tname string\\n}\\n\\nvar Equ = Kind{\\"Equ\\"}\\nvar Iso = Kind{\\"Iso\\"}\\nvar Sca = Kind{\\"Sca\\"}\\nvar NaT = Kind{\\"NaT\\"}\\n\\nfunc KindFromSides(a float64, b float64, c float64) Kind {\\n\\t//ret := \\u0026Equ{\\"equ\\"}\\n\\tif testNat([3]float64{a, b, c}) {\\n\\t\\treturn NaT\\n\\t}\\n\\tif a == b \\u0026\\u0026 b == c {\\n\\t\\treturn Equ\\n\\t} else if a == b || b == c || c == a {\\n\\t\\treturn Iso\\n\\t} else {\\n\\t\\treturn Sca\\n\\t}\\n\\t//return Equ\\n}\\n\\nfunc testNat(sides [3]float64) bool {\\n\\tvar sum float64 = 0\\n\\tvar max float64 = 0\\n\\tfor _, side := range sides {\\n\\t\\tif side \\u003c= 0 || math.IsNaN(side) || math.IsInf(side, 0) {\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\t\\tsum += side\\n\\t\\tif side \\u003e max {\\n\\t\\t\\tmax = side\\n\\t\\t}\\n\\t}\\n\\tif (sum - max) \\u003c= max {\\n\\t\\treturn true\\n\\t}\\n\\n\\treturn false\\n}"}
451	45	000155949ddb95e86f867595	pending	python	beer-song	\N	\N	0	1	2015-10-09 22:30:56	2015-10-09 22:30:56	297	{"beer.py":"def print_function():\\n\\ti = 99\\n\\twhile i \\u003e 2:\\n\\t\\tdct = {\\"val\\" : str(i), \\"vals\\" : str(i - 1)}\\n\\t\\tprint '%(val)s bottles of beer on the wall, %(val)s bottles of beer.' % dct\\n\\t\\tprint 'Take one down and pass it around, %(vals)s bottles of beer on the wall.' % dct\\n\\t\\tprint\\n\\t\\ti -= 1\\n\\n\\tprint '2 bottles of beer on the wall, 2 bottles of beer.'\\n\\tprint 'Take one down and pass it around, 1 bottle of beer on the wall.'\\n\\tprint \\n\\tprint '1 bottle of beer on the wall, 1 bottle of beer.'\\n\\tprint 'Take it down and pass it around, no more bottles of beer on the wall.'\\n\\ndef main():\\n\\tprint_function()\\n\\nmain()"}
452	45	b4270ac892fb736ab60be748	hibernating	scala	nucleotide-count	\N	\N	0	1	2015-08-22 13:29:01	2015-08-22 13:29:01	298	{"dna.scala":"class DNA(str: String) {\\n  val DnaNucleotides = Set('A', 'C', 'G', 'T')\\n  val RnaNucleotides = Set('A', 'C', 'G', 'U')\\n\\n  if (!str.toSet.diff(DnaNucleotides).isEmpty)\\n    throw new IllegalArgumentException\\n\\n  def count(marker: Char) = {\\n    if ((DnaNucleotides ++ RnaNucleotides).contains(marker))\\n      str.count(_ == marker)\\n    else\\n      throw new IllegalArgumentException\\n  }\\n\\n  def nucleotideCounts =\\n    DnaNucleotides.map(m =\\u003e (m, count(m))).toMap\\n}"}
453	45	0982975971e3f543256f8d71	pending	python	nth-prime	\N	\N	0	1	2016-01-04 14:03:24	2016-01-04 14:03:24	299	{"\\\\python\\\\nth-prime\\\\prime.py":"﻿# William Morris\\r\\n# exercism.io\\r\\n# prime.py\\r\\n\\r\\nimport math\\r\\n\\r\\ndef sieve(limit):\\r\\n    \\"\\"\\"\\r\\n    Based on Sieve of Eratosthenes\\r\\n    Creates a list of numbers up to the limit\\r\\n    and multiplies then deletes non-primes from the list as it goes.\\r\\n    The initial list skips even numbers.\\r\\n    \\"\\"\\"\\r\\n    numbers = range(3,limit+1,2)\\r\\n    for prime in numbers:\\r\\n        for number in numbers:\\r\\n            if prime*number \\u003e= limit:\\r\\n                break\\r\\n            else:\\r\\n                x=1\\r\\n                while prime**x*number \\u003c= limit:\\r\\n                    if (prime**x*number) in numbers:\\r\\n                        numbers.remove(prime**x*number)\\r\\n                    x+=1\\r\\n    return [2]+ numbers\\r\\n\\r\\ndef find_nth_limit(n):\\r\\n    \\"\\"\\"\\r\\n    nth prime must be greater than\\r\\n    n*ln(n)+n*(ln(ln(n))−1)\\r\\n    and less than\\r\\n    n*ln(n)+n*ln(ln(n))\\r\\n    returns upper limit\\r\\n    for n\\u003e6\\r\\n    \\"\\"\\"\\r\\n    return int(math.ceil(n*math.log(n)+n*math.log(math.log(n))))\\r\\n    \\r\\n        \\r\\ndef nth_prime(n):\\r\\n    if n\\u003c= 6:\\r\\n        primes = [2,3,5,7,11,13]\\r\\n    else:\\r\\n        limit = find_nth_limit(n)\\r\\n        primes = sieve(limit)\\r\\n    return primes[n-1]"}
454	45	07debcef80b915537529bbc5	hibernating	python	grade-school	\N	\N	0	1	2015-09-12 20:56:12	2015-09-12 20:56:12	300	{"school.py":"'''\\n ____________________________________ \\n\\u003c nothing added yet for bonus points \\u003e\\n ------------------------------------ \\n        \\\\   ^__^\\n         \\\\  (oo)\\\\_______\\n            (__)\\\\       )\\\\/\\\\\\n                ||----w |\\n                ||     ||                '''\\nclass School:\\n    def __init__(self, name=None):\\n        self.name = name\\n        self.db = {}\\n    def add(self, student, grade):\\n        if grade in self.db.keys():\\n            self.db[grade].add(student)\\n        else:\\n            self.db[grade] = {student}\\n    def grade(self, n):\\n        try:\\n            return(self.db[n])\\n        except:\\n            return(set())\\n    def sort(self):\\n        return({g:tuple(sorted(self.db[g])) for g in self.db.keys()})"}
455	45	2c95e91bea06356b9b7989bc	\N	python	kindergarten-garden	\N	\N	0	1	2015-12-19 14:39:29	2015-12-19 14:39:29	301	{"garden.py":"all_students = ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Fred', 'Ginny',\\n                'Harriet', 'Ileana', 'Joseph', 'Kincaid', 'Larry']\\n\\nall_plants = {'V': 'Violets', 'R': 'Radishes', 'C': 'Clover', 'G': 'Grass'}\\n\\n\\nclass Garden():\\n    def __init__(self, rows, students=all_students):\\n        self.rows = rows.split()\\n        self.students = sorted(students)\\n\\n    def plants(self, student):\\n        \\"\\"\\"\\n        Returns student's plants as a list\\n        \\"\\"\\"\\n        student_plants = []\\n        for row in self.rows:\\n            student_plants.extend(self.get_plants_of(student, row))\\n\\n        return student_plants\\n\\n    def get_plants_of(self, student, row):\\n        \\"\\"\\"\\n        Returns student's plants in a row as a list\\n        \\"\\"\\"\\n        return [all_plants[row[self.students.index(student) * 2]],\\n                all_plants[row[self.students.index(student) * 2 + 1]]]"}
456	45	e03acf810c108ca1b570c415	hibernating	haskell	grains	\N	\N	0	1	2015-08-28 15:52:07	2015-08-28 15:52:07	302	{"Grains.hs":"module Grains\\n    ( square\\n    , total\\n    ) where\\n\\nsquare :: Integral a =\\u003e a -\\u003e a\\nsquare = (2^) . subtract 1\\n\\ntotal :: Integral a =\\u003e a\\ntotal = sum $ map (2^) [0..63]"}
457	45	b9e7c2885fe4c544f48a5d83	hibernating	elixir	list-ops	\N	\N	0	1	2015-09-17 16:40:27	2015-09-17 16:40:27	303	{"list_ops.exs":"defmodule ListOps do\\n  # Please don't use any external modules (especially List) in your\\n  # implementation. The point of this exercise is to create these basic functions\\n  # yourself.\\n  #\\n  # Note that `++` is a function from an external module (Kernel, which is\\n  # automatically important`) and so shouldn't be used either.\\n\\n  @spec count(list) :: non_neg_integer\\n  def count([_ | t]), do: 1 + count t\\n  def count([]), do: 0\\n\\n  @spec reverse(list) :: list\\n  def reverse(x), do: doreverse(x, [])\\n\\n  defp doreverse([], acc), do: acc\\n  defp doreverse([h | t], acc), do: doreverse(t, [h | acc])\\n\\n  @spec map(list, (any -\\u003e any)) :: list\\n  def map([], _), do: []\\n  def map([h | t], f), do: [f.(h) | map(t, f)]\\n\\n  @spec filter(list, (any -\\u003e as_boolean(term))) :: list\\n  def filter([], _), do: []\\n  def filter([h | t], f) do\\n    if f.(h) do\\n      [h | filter(t, f)]\\n    else\\n      filter(t, f)\\n    end\\n  end\\n\\n  @type acc :: any\\n  @spec reduce(list, acc, ((any, acc) -\\u003e acc)) :: acc\\n  def reduce([], acc, _), do: acc\\n  def reduce([h | t], acc, f), do: reduce(t, f.(h, acc), f)\\n\\n  @spec append(list, list) :: list\\n  def append([], l), do: l\\n  def append(l, []), do: l\\n  def append([x], l), do: [x | l]\\n  def append([h | t], l), do: [h | append(t, l)]\\n\\n  @spec concat([[any]]) :: [any]\\n  def concat([]), do: []\\n  def concat(ll) do\\n    reduce(ll, [], \\u0026reduce(\\u00261, \\u00262, fn(x, y) -\\u003e [x | y] end)) |\\u003e reverse\\n  end\\nend"}
458	45	bc6c9a91ac4b7ce000c927fe	superseded	haskell	sum-of-multiples	\N	\N	0	1	2015-09-14 01:08:21	2015-09-14 01:08:21	304	{"/haskell/sum-of-multiples/SumOfMultiples.hs":"module SumOfMultiples ( sumOfMultiples\\n                      , sumOfMultiplesDefault ) where\\n\\nsumOfMultiplesDefault :: Integral a =\\u003e a -\\u003e a\\nsumOfMultiplesDefault = sumOfMultiples [3,5]\\n\\nsumOfMultiples :: Integral a =\\u003e [a] -\\u003e a -\\u003e a\\nsumOfMultiples divs max = sum . filter (\\\\x -\\u003e divisibleByOneOf x divs) $ [1..(max - 1)]\\n\\ndivisibleBy :: Integral a =\\u003e a -\\u003e a -\\u003e Bool\\nx `divisibleBy` y = x `mod` y == 0\\n\\ndivisibleByOneOf :: Integral a =\\u003e a -\\u003e [a] -\\u003e Bool\\nx `divisibleByOneOf` ys = any (divisibleBy x) ys"}
459	45	25de8748fcd15d702f8d2879	done	haskell	sum-of-multiples	\N	\N	0	2	2015-11-16 22:36:19	2015-11-16 22:36:19	304	{"/haskell/sum-of-multiples/SumOfMultiples.hs":"module SumOfMultiples ( sumOfMultiples\\n                      , sumOfMultiplesDefault ) where\\n\\n-- | Sums up all numbers from 1 tp `max` that are divisible by one of 3 or 5.\\nsumOfMultiplesDefault :: Integral a =\\u003e a -- ^ `max`, upper bound of the numbers to sum up, lower bound is implied to be 1\\n                                    -\\u003e a -- ^ the sum\\nsumOfMultiplesDefault = sumOfMultiples [3,5]\\n\\n-- | Sums up all numbers from 1 to `max` that are divisible by one of `divs`\\nsumOfMultiples :: Integral a =\\u003e [a] -- ^ `divs`, list of numbers to check divisibility against\\n                             -\\u003e a   -- ^ `max`, upper bound of the numbers to sum up, lower bound is implied to be 1\\n                             -\\u003e a   -- ^ the sum\\nsumOfMultiples divs max = sum . filter (\\\\x -\\u003e divisibleByOneOf x divs) $ [1..(max - 1)]\\n\\ndivisibleBy :: Integral a =\\u003e a -\\u003e a -\\u003e Bool\\nx `divisibleBy` y = x `mod` y == 0\\n\\ndivisibleByOneOf :: Integral a =\\u003e a -\\u003e [a] -\\u003e Bool\\nx `divisibleByOneOf` ys = any (divisibleBy x) ys"}
460	45	db0cdb5c876837668ab91a51	pending	scala	leap	\N	\N	0	1	2015-09-02 11:22:08	2015-09-02 11:22:08	305	{"src/main/scala/leap.scala":"class Year(year: Int) {\\n    val isLeap = year % 4 == 0 \\u0026\\u0026 (year % 100 != 0 || year % 400 == 0)\\n}\\n\\nobject Year {\\n  def apply(year: Int) = new Year(year)\\n}"}
461	45	331419eb078ccbc442fdfd66	hibernating	python	grains	\N	\N	0	1	2015-08-21 10:30:04	2015-08-21 10:30:04	306	{"grains.py":"on_square = lambda x: 2**(x-1)\\r\\n\\r\\ntotal_after = lambda x: sum(on_square(i+1) for i in range(x))\\r"}
462	45	9d287f8621fb15a67b1b739e	\N	javascript	space-age	\N	\N	0	1	2015-09-06 08:16:23	2015-09-06 08:16:23	307	{"space-age.js":"\\"use strict\\";\\n\\nmodule.exports = SpaceAge;\\n\\nconst earthSecsPerYear = 31557600;\\n\\nconst planets = {\\n  Earth: 1,\\n  Mercury: 0.2408467,\\n  Venus: 0.61519726,\\n  Mars: 1.8808158,\\n  Jupiter: 11.862615,\\n  Saturn: 29.447498,\\n  Uranus: 84.016846,\\n  Neptune: 164.79132\\n}\\n\\nfunction SpaceAge(seconds) {\\n  this.seconds = seconds;\\n}\\n\\nObject.getOwnPropertyNames(planets).forEach(planet =\\u003e {\\n  const yearsRelativeToEarth = planets[planet];\\n\\n  SpaceAge.prototype['on' + planet] = function () {\\n    const conversionFunc = ratioToEarth(yearsRelativeToEarth);\\n    return conversionFunc(this.seconds);\\n  }\\n});\\n\\nfunction ratioToEarth(yearsRelativeToEarth) {\\n  const secsPerYear = earthSecsPerYear * yearsRelativeToEarth;\\n  const conversionFunc = ratioSec(secsPerYear);\\n  return seconds =\\u003e conversionFunc(seconds);\\n}\\n\\nfunction ratioSec(secsPerYear) {\\n  return seconds =\\u003e format(seconds / secsPerYear)\\n}\\n\\nfunction format(str) {\\n  return +str.toFixed(2);\\n}"}
463	45	ca3994bdfc8edb8770a7f54a	pending	clojure	meetup	\N	\N	0	1	2016-02-10 00:27:52	2016-02-10 00:27:52	308	{"/clojure/meetup/meetup.clj":"(ns meetup)\\n\\n(def doy java.util.Calendar/DAY_OF_YEAR)\\n(def dom java.util.Calendar/DAY_OF_MONTH)\\n(def dow java.util.Calendar/DAY_OF_WEEK)\\n\\n(defn days-from [month year]\\n  (let [start-date (java.util.GregorianCalendar. year month 0)\\n        num (.getActualMaximum (java.util.GregorianCalendar. year month 1) dom) ]\\n    (take num (repeatedly\\n      (fn []\\n        (.add start-date doy 1)\\n        (.clone start-date))))))\\n\\n(def day-map { :sunday 1\\n              :monday 2\\n              :tuesday 3\\n              :wednesday 4\\n              :thursday 5\\n              :friday 6\\n              :saturday 7})\\n\\n(defn teenth [days]\\n  (first (filter #(\\u003e (.get % dom) 12) days)))\\n\\n(def finders { :first first \\n               :second second\\n               :third #(nth % 2)\\n               :fourth #(nth % 3)\\n               :last last\\n               :teenth teenth })\\n\\n(defn filter-by-day [day date]\\n  (= (.get date dow) (day day-map)))\\n\\n(defn meetup [month year day to-find]\\n  (let [days (filter (partial filter-by-day day) (days-from (dec month) year))\\n        target ((to-find finders) days)]\\n    [year month (.get target dom)]))"}
464	45	97b0f4bc689db78d268eb399	\N	ruby	simple-cipher	\N	\N	0	1	2015-10-14 12:52:05	2015-10-14 12:52:05	309	{"simple_cipher.rb":"class Cipher\\n  ALPHABET = [*'a'..'z']\\n\\n  attr_reader :key\\n\\n  def initialize(key = nil)\\n    @key = key || 100.times.map { ALPHABET.sample }.join\\n    fail ArgumentError, 'invalid chars in key' unless valid?(@key)\\n  end\\n\\n  def encode(text)\\n    a = 'a'.ord\\n    text.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[(char.ord - a + key.ord - a) % ALPHABET.length]\\n    end.join\\n  end\\n\\n  def decode(code)\\n    code.chars.zip(@key.chars).map do |char, key|\\n      ALPHABET[char.ord - key.ord]\\n    end.join\\n  end\\n\\nprivate\\n\\n  def valid?(key)\\n    !key.empty? \\u0026\\u0026 key !~ /[^a-z]/\\n  end\\n\\nend"}
465	45	5fd9ee81dd476973493a6707	\N	javascript	bob	\N	\N	0	1	2016-01-16 00:46:16	2016-01-16 00:46:16	310	{"/javascript/bob/bob.js":"//\\n// This is only a SKELETON file for the \\"Bob\\" exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\n'use strict';\\n\\nmodule.exports = class Bob {\\n  constructor() {\\n    this.defaultResponse     = 'Whatever.';\\n    this.shoutingResponse    = 'Whoa, chill out!';\\n    this.answer              = 'Sure.';\\n    this.saidNothingResponse = 'Fine. Be that way!';\\n  }\\n\\n  hey(input) {\\n    if (this.isShouting(input)) return this.shoutingResponse;\\n    if (this.isQuestion(input)) return this.answer;\\n    if (this.saidNothing(input)) return this.saidNothingResponse;\\n    return this.defaultResponse;\\n  }\\n\\n  isShouting(input) {\\n    return /[a-zA-Z]/.test(input) \\u0026\\u0026 input.toUpperCase() === input;\\n  }\\n\\n  isQuestion(input) { \\n    return /\\\\?$/.test(input);\\n  }\\n\\n  saidNothing(input) {\\n    return input.length === 0 || /^\\\\s+$/.test(input);\\n  }\\n};"}
466	45	c24d4381eda868b019dc2aa6	pending	javascript	hello-world	\N	\N	0	1	2015-10-25 17:32:32	2015-10-25 17:32:32	311	{"/javascript/hello-world/hello_world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n// Make sure to look at test.script.js--that should give you some hints about what is\\n// expected here.\\n\\nvar HelloWorld = function() {};\\n\\nHelloWorld.prototype.hello = function(input) {\\n  if(input === ''){\\n    return \\"Hello, world!\\"\\n  } else {\\n    return \\"Hello, \\" + input + \\"!\\"\\n  }\\n};\\n\\nmodule.exports = HelloWorld;"}
467	45	e9bc02cebb2b45e8738c5af1	hibernating	ruby	leap	\N	\N	0	1	2015-11-19 03:39:34	2015-11-19 03:39:34	312	{"/ruby/leap/year.rb":"class Year\\n  def self.leap?(year)\\n    if year % 4 != 0 then return false end\\n    if year % 100 == 0 and year % 400 != 0 then return false end\\n    true\\n  end\\nend"}
468	45	3f5a3f4d3c4519f7315d4688	\N	python	gigasecond	\N	\N	0	1	2015-09-07 06:45:52	2015-09-07 06:45:52	313	{"gigasecond.py":"from datetime import timedelta\\n__author__ = 'yury'\\n\\ndef add_gigasecond(date):\\n    return date + timedelta(seconds=10**9)"}
469	45	d74a336c68f0473dc6064024	\N	go	grains	\N	\N	0	1	2016-02-19 03:49:10	2016-02-19 03:49:10	314	{"grains.go":"package grains\\n\\nimport (\\n\\t\\"errors\\"\\n\\t\\"fmt\\"\\n\\t\\"math\\"\\n)\\n\\nvar SquareArr = [...]uint64{\\n\\t1,\\n\\t2,\\n\\t4,\\n\\t8,\\n\\t16,\\n\\t32,\\n\\t64,\\n\\t128,\\n\\t256,\\n\\t512,\\n\\t1024,\\n\\t2048,\\n\\t4096,\\n\\t8192,\\n\\t16384,\\n\\t32768,\\n\\t65536,\\n\\t131072,\\n\\t262144,\\n\\t524288,\\n\\t1048576,\\n\\t2097152,\\n\\t4194304,\\n\\t8388608,\\n\\t16777216,\\n\\t33554432,\\n\\t67108864,\\n\\t134217728,\\n\\t268435456,\\n\\t536870912,\\n\\t1073741824,\\n\\t2147483648,\\n\\t4294967296,\\n\\t8589934592,\\n\\t17179869184,\\n\\t34359738368,\\n\\t68719476736,\\n\\t137438953472,\\n\\t274877906944,\\n\\t549755813888,\\n\\t1099511627776,\\n\\t2199023255552,\\n\\t4398046511104,\\n\\t8796093022208,\\n\\t17592186044416,\\n\\t35184372088832,\\n\\t70368744177664,\\n\\t140737488355328,\\n\\t281474976710656,\\n\\t562949953421312,\\n\\t1125899906842624,\\n\\t2251799813685248,\\n\\t4503599627370496,\\n\\t9007199254740992,\\n\\t18014398509481984,\\n\\t36028797018963968,\\n\\t72057594037927936,\\n\\t144115188075855872,\\n\\t288230376151711744,\\n\\t576460752303423488,\\n\\t1152921504606846976,\\n\\t2305843009213693952,\\n\\t4611686018427387904,\\n\\t9223372036854775808,\\n}\\n\\nfunc Square(n int) (uint64, error) {\\n\\tif n \\u003c 1 || n \\u003e 64 {\\n\\t\\treturn 0, errors.New(\\"argument out of range\\")\\n\\t}\\n\\t// 508 ops/sec\\n\\t//return MathSquare(n), nil\\n\\t// 312 ops/sec\\n\\t//return LoopSquare(n), nil\\n\\t// 228 ops/sec\\n\\treturn ShiftSquare(n), nil\\n\\t// 229 ops/sec\\n\\t//return CacheSquare(n), nil\\n}\\n\\nfunc MathSquare(n int) uint64 {\\n\\treturn uint64(math.Pow(2, float64(n-1)))\\n}\\n\\nfunc LoopSquare(n int) uint64 {\\n\\tvar ans uint64 = 1\\n\\tfor i := 0; i \\u003c n-1; i++ {\\n\\t\\tans = ans * 2\\n\\t}\\n\\treturn ans\\n}\\n\\nfunc ShiftSquare(n int) uint64 {\\n\\treturn uint64(1) \\u003c\\u003c uint(n-1)\\n}\\n\\nfunc CacheSquare(n int) uint64 {\\n\\treturn SquareArr[n-1]\\n}\\n\\nfunc PrintSquares() {\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tfmt.Printf(\\"%d,\\\\n\\", val)\\n\\t}\\n}\\n\\nfunc Total() uint64 {\\n\\treturn CacheTotal()\\n}\\n\\nfunc CalcTotal() uint64 {\\n\\tvar sum uint64 = 0\\n\\tfor i := 1; i \\u003c= 64; i++ {\\n\\t\\tval, _ := Square(i)\\n\\t\\tsum += val\\n\\t}\\n\\treturn sum\\n}\\n\\nfunc CacheTotal() uint64 {\\n\\treturn 18446744073709551615\\n}"}
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 469, true);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	2	1
2	3	1
3	4	1
4	2	2
5	2	3
6	2	4
7	3	4
8	4	5
9	3	6
10	3	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, created_at, updated_at, confirmed, inviter_id) FROM stdin;
1	1	22	2016-02-08 02:12:38	2016-02-08 02:12:38	t	\N
2	1	15	1973-06-19 01:53:27	1973-06-19 01:53:27	t	\N
3	1	18	2004-11-23 16:28:42	2004-11-23 16:28:42	t	\N
4	1	23	1971-04-01 14:38:05	1971-04-01 14:38:05	t	\N
5	1	11	1979-12-12 12:23:15	1979-12-12 12:23:15	t	\N
6	1	8	1992-01-27 20:09:28	1992-01-27 20:09:28	t	\N
7	1	7	2010-09-17 20:03:22	2010-09-17 20:03:22	t	\N
8	1	30	1971-10-05 07:20:29	1971-10-05 07:20:29	t	\N
9	1	31	1970-02-05 23:11:33	1970-02-05 23:11:33	t	\N
10	1	36	1973-02-19 20:10:55	1973-02-19 20:10:55	t	\N
11	1	16	1980-02-12 20:44:32	1980-02-12 20:44:32	f	\N
12	1	17	1982-12-18 07:21:07	1982-12-18 07:21:07	f	\N
13	1	29	1991-08-19 07:46:04	1991-08-19 07:46:04	f	\N
14	1	32	2011-08-29 11:58:32	2011-08-29 11:58:32	f	\N
15	1	38	2002-10-28 12:48:22	2002-10-28 12:48:22	f	\N
16	1	42	1994-09-24 02:48:30	1994-09-24 02:48:30	f	\N
17	1	43	2008-04-24 04:34:37	2008-04-24 04:34:37	f	\N
18	1	47	1996-08-25 10:37:58	1996-08-25 10:37:58	f	\N
19	2	3	1984-10-21 14:49:37	1984-10-21 14:49:37	t	\N
20	2	36	2008-08-09 10:07:43	2008-08-09 10:07:43	t	\N
21	2	31	2000-05-27 02:57:00	2000-05-27 02:57:00	t	\N
22	2	47	2015-07-16 22:15:31	2015-07-16 22:15:31	t	\N
23	2	19	1998-06-14 07:00:19	1998-06-14 07:00:19	f	\N
24	2	38	2010-03-27 21:50:54	2010-03-27 21:50:54	f	\N
25	3	38	1993-09-29 18:44:29	1993-09-29 18:44:29	f	\N
26	3	3	2002-02-19 20:40:02	2002-02-19 20:40:02	f	\N
27	4	3	2012-02-15 14:38:32	2012-02-15 14:38:32	t	\N
28	4	32	1992-03-08 05:34:30	1992-03-08 05:34:30	t	\N
29	4	22	1996-12-02 14:31:10	1996-12-02 14:31:10	t	\N
30	4	27	1979-10-11 21:18:12	1979-10-11 21:18:12	t	\N
31	4	20	1974-11-22 23:10:49	1974-11-22 23:10:49	t	\N
32	4	25	1984-06-19 07:03:07	1984-06-19 07:03:07	t	\N
33	4	19	2001-01-20 18:57:05	2001-01-20 18:57:05	t	\N
34	4	24	2004-06-09 00:40:18	2004-06-09 00:40:18	t	\N
35	4	26	1986-10-21 14:11:18	1986-10-21 14:11:18	t	\N
36	4	21	1986-10-31 09:23:08	1986-10-31 09:23:08	t	\N
37	4	38	1974-05-21 12:20:25	1974-05-21 12:20:25	f	\N
38	4	12	1990-12-02 06:43:52	1990-12-02 06:43:52	f	\N
39	4	14	1970-06-09 23:55:19	1970-06-09 23:55:19	f	\N
40	5	32	2001-11-13 02:35:52	2001-11-13 02:35:52	t	\N
41	5	40	2000-08-26 21:23:41	2000-08-26 21:23:41	t	\N
42	5	35	1989-06-09 18:34:25	1989-06-09 18:34:25	t	\N
43	5	37	2005-12-30 05:27:21	2005-12-30 05:27:21	t	\N
44	5	33	1972-04-16 16:47:54	1972-04-16 16:47:54	t	\N
45	5	36	2011-12-21 03:58:07	2011-12-21 03:58:07	t	\N
46	5	34	1976-12-21 01:08:30	1976-12-21 01:08:30	t	\N
47	5	39	1996-06-19 15:25:38	1996-06-19 15:25:38	t	\N
48	5	41	1991-05-13 19:23:50	1991-05-13 19:23:50	f	\N
49	5	38	1987-04-02 21:18:21	1987-04-02 21:18:21	f	\N
50	5	3	1978-08-31 20:27:23	1978-08-31 20:27:23	f	\N
51	6	6	1992-12-28 04:38:08	1992-12-28 04:38:08	t	\N
52	6	7	1992-03-02 01:43:16	1992-03-02 01:43:16	t	\N
53	6	8	2007-11-25 02:13:50	2007-11-25 02:13:50	t	\N
54	6	9	1996-06-21 08:41:36	1996-06-21 08:41:36	t	\N
55	6	11	1990-10-18 05:26:39	1990-10-18 05:26:39	t	\N
56	6	12	1979-07-17 16:07:34	1979-07-17 16:07:34	t	\N
57	6	13	2013-09-15 07:36:24	2013-09-15 07:36:24	t	\N
58	6	14	1986-11-21 01:48:55	1986-11-21 01:48:55	t	\N
59	6	15	1988-09-15 04:39:03	1988-09-15 04:39:03	t	\N
60	6	16	1990-12-26 09:35:28	1990-12-26 09:35:28	t	\N
61	6	17	1980-02-15 20:05:00	1980-02-15 20:05:00	t	\N
62	6	18	1976-11-27 19:33:11	1976-11-27 19:33:11	t	\N
63	6	23	1977-05-12 20:55:12	1977-05-12 20:55:12	t	\N
64	6	28	2003-03-03 18:23:28	2003-03-03 18:23:28	t	\N
65	6	29	1970-06-24 22:27:44	1970-06-24 22:27:44	t	\N
66	6	30	1987-07-29 05:40:40	1987-07-29 05:40:40	t	\N
67	6	31	2003-04-26 14:25:24	2003-04-26 14:25:24	t	\N
68	6	32	2008-06-06 15:01:27	2008-06-06 15:01:27	t	\N
69	6	38	2015-03-30 15:17:55	2015-03-30 15:17:55	t	\N
70	6	42	1975-10-22 09:17:56	1975-10-22 09:17:56	t	\N
71	6	43	2005-08-24 18:24:06	2005-08-24 18:24:06	t	\N
72	6	44	1971-10-28 13:09:12	1971-10-28 13:09:12	t	\N
73	6	45	1972-05-03 08:38:26	1972-05-03 08:38:26	t	\N
74	6	46	2000-04-21 01:01:47	2000-04-21 01:01:47	t	\N
75	6	47	2007-09-02 06:57:20	2007-09-02 06:57:20	t	\N
76	6	48	2008-06-05 13:54:50	2008-06-05 13:54:50	t	\N
77	6	49	1991-06-20 02:31:06	1991-06-20 02:31:06	t	\N
78	7	3	1990-07-11 02:33:25	1990-07-11 02:33:25	t	\N
79	7	39	1987-04-13 03:03:36	1987-04-13 03:03:36	t	\N
80	7	32	2012-03-14 23:50:40	2012-03-14 23:50:40	t	\N
81	7	38	1972-12-05 08:15:23	1972-12-05 08:15:23	f	\N
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, created_at, updated_at, name) FROM stdin;
1	baconesia	2016-02-29 07:06:53.17018	2016-02-29 07:06:53.17018	baconesia
2	chocolades	2016-03-19 13:13:46.198794	2016-03-19 13:13:46.198794	chocolades
3	ghost	2016-03-01 09:37:11.206628	2016-03-01 09:37:11.206628	ghost
4	motley	2016-02-12 09:02:48.211417	2016-02-12 09:02:48.211417	motley
5	rugrats	2015-07-31 12:10:21.227839	2015-07-31 12:10:21.227839	rugrats
6	slate	2015-07-28 00:55:17.240884	2015-07-28 00:55:17.240884	slate
7	polkadots	2016-02-04 18:17:17.270579	2016-02-04 18:17:17.270579	polkadots
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, created_at, updated_at, key, archived, last_iteration_at, last_activity_at, last_activity, fetched_at, skipped_at) FROM stdin;
1	9	ruby	meetup	1	\N	2016-03-18 13:51:50	2016-03-18 13:51:50	7fa0a74c629492e158f746d5	f	2016-03-25 19:39:58	2016-03-25 19:39:58	Submitted an iteration	2016-02-26 12:34:05.585255	\N
2	9	clojure	space-age	1	\N	2016-03-18 06:22:45	2016-03-18 06:22:45	593f0dd02eec07696c9d01e8	t	2016-03-24 13:04:18	2016-03-24 13:04:18	Submitted an iteration	2015-10-31 05:36:03.530808	\N
3	9	scala	leap	1	done	2016-03-13 11:17:20	2016-03-13 11:17:20	f0e83cf99fbf35fc53babfd4	t	2016-03-20 11:17:49	2016-03-20 11:17:49	Submitted an iteration	\N	\N
4	9	ruby	raindrops	1	hibernating	2016-03-12 01:47:15	2016-03-12 01:47:15	9cba73b0fc1980481a6f46f0	f	2016-03-12 11:06:15	2016-03-12 11:06:15	Submitted an iteration	\N	\N
5	11	scala	difference-of-squares	2	\N	2015-11-23 14:41:11	2015-11-23 14:41:11	5b2e68dc4ffbe5dcb9cecdc4	f	2015-12-13 00:48:49	2015-12-13 00:48:49	@szafirov commented	2015-12-21 11:54:49.34367	\N
6	12	javascript	food-chain	1	hibernating	2016-02-05 02:01:21	2016-02-05 02:01:21	34233b2be15099ee3665fb94	f	2016-03-08 16:20:00	2016-03-08 16:20:00	Submitted an iteration	\N	\N
7	12	lisp	sieve	1	\N	2015-12-05 20:17:10	2015-12-05 20:17:10	215d6f06a3587340cf2a7556	f	2016-01-27 06:45:06	2016-01-27 06:45:06	Submitted an iteration	2015-10-25 04:07:01.139264	\N
8	12	clojure	atbash-cipher	1	pending	2015-12-04 09:13:25	2015-12-04 09:13:25	a80119244cd1b8b546c89669	t	2015-12-11 20:08:53	2015-12-11 20:08:53	Submitted an iteration	\N	\N
9	15	python	rna-transcription	1	done	2016-03-14 03:58:41	2016-03-14 03:58:41	a33809750f2805f1063fbc3f	t	2016-03-22 23:52:37	2016-03-22 23:52:37	Submitted an iteration	\N	\N
10	15	haskell	clock	1	\N	2016-03-17 05:46:31	2016-03-17 05:46:31	d2924f5fdd8cda309fa4cd92	f	2016-03-27 07:14:22	2016-03-27 07:14:22	Submitted an iteration	\N	\N
11	15	python	allergies	1	done	2016-03-10 05:10:25	2016-03-10 05:10:25	6f74911d4585725c1cf3f8ec	t	2016-03-16 15:10:14	2016-03-16 15:10:14	Submitted an iteration	\N	\N
12	15	python	ocr-numbers	2	hibernating	2016-03-10 13:58:03	2016-03-10 13:58:03	23f14a45e3a0874a19818c0e	t	2016-03-11 17:40:57	2016-03-11 17:40:57	Submitted an iteration	\N	\N
13	15	perl5	etl	1	pending	2016-03-05 15:13:43	2016-03-05 15:13:43	848aafee1e67df278c215c8a	f	2016-03-22 14:25:50	2016-03-22 14:25:50	Submitted an iteration	\N	\N
14	15	csharp	etl	2	done	2016-03-04 13:42:12	2016-03-04 13:42:12	72ae18b4df0604a6ad478e91	t	2016-03-12 08:30:01	2016-03-12 08:30:01	Submitted an iteration	\N	\N
15	15	javascript	palindrome-products	1	pending	2016-03-12 00:22:12	2016-03-12 00:22:12	b2240ad1f8a7685309824b31	f	2016-03-25 09:01:19	2016-03-25 09:01:19	Submitted an iteration	\N	\N
16	15	ruby	hello-world	1	\N	2016-03-19 20:45:35	2016-03-19 20:45:35	96c2c982b45f1d12678767fd	f	2016-03-21 13:22:10	2016-03-21 13:22:10	@rikki- commented	\N	\N
17	15	clojure	word-count	2	done	2016-03-08 06:07:56	2016-03-08 06:07:56	24dc0ee183119a4857e0fa53	t	2016-03-17 11:47:14	2016-03-17 11:47:14	Submitted an iteration	\N	\N
18	15	haskell	triangle	1	done	2016-03-05 08:13:14	2016-03-05 08:13:14	668586b7c1fa85b0f187e5e0	t	2016-03-24 13:05:56	2016-03-24 13:05:56	Submitted an iteration	\N	\N
19	15	javascript	anagram	2	pending	2016-03-11 06:28:12	2016-03-11 06:28:12	5b5b4456794c3593c4953271	f	2016-03-19 18:04:57	2016-03-19 18:04:57	Submitted an iteration	\N	\N
20	15	python	hello-world	1	\N	2016-03-05 02:31:03	2016-03-05 02:31:03	0c70b799d3a4b04432a909b9	f	2016-03-19 08:48:29	2016-03-19 08:48:29	Submitted an iteration	\N	\N
21	15	ruby	hamming	1	pending	2016-03-20 02:25:24	2016-03-20 02:25:24	67e74c401db6d2fc7670bce1	f	2016-03-21 03:20:05	2016-03-21 03:20:05	Submitted an iteration	\N	\N
22	15	elixir	acronym	3	\N	2016-03-07 06:36:22	2016-03-07 06:36:22	ced79aca29a7cb2b02309275	f	2016-03-15 13:17:48	2016-03-15 13:17:48	Submitted an iteration	2016-02-18 03:40:58.240719	\N
23	15	ruby	raindrops	1	pending	2016-03-09 07:50:13	2016-03-09 07:50:13	f0ee7c827d10925984e650ac	t	2016-03-22 03:40:14	2016-03-22 03:40:14	Submitted an iteration	\N	\N
24	15	python	hamming	1	pending	2016-03-16 19:09:31	2016-03-16 19:09:31	0cbb651dddf5e60f65cf0f39	f	2016-03-18 12:36:54	2016-03-18 12:36:54	Submitted an iteration	\N	\N
25	15	ruby	space-age	1	pending	2016-03-14 19:13:54	2016-03-14 19:13:54	ba448d6ccfa8c33a5dd91dc8	f	2016-03-16 06:13:15	2016-03-16 06:13:15	Submitted an iteration	\N	\N
26	15	python	space-age	1	pending	2016-03-14 13:10:13	2016-03-14 13:10:13	df024769bab0a1fc43ca6046	f	2016-03-22 23:09:37	2016-03-22 23:09:37	Submitted an iteration	\N	\N
27	15	ruby	leap	1	pending	2016-03-05 01:01:27	2016-03-05 01:01:27	afacef54251b0c609caa5af2	f	2016-03-12 02:55:16	2016-03-12 02:55:16	Submitted an iteration	\N	\N
28	15	python	etl	2	hibernating	2016-03-12 01:39:00	2016-03-12 01:39:00	075bfcf8419323120ed2fdcd	f	2016-03-24 11:47:08	2016-03-24 11:47:08	Submitted an iteration	\N	\N
29	15	javascript	sieve	1	\N	2016-03-03 14:46:24	2016-03-03 14:46:24	92a2f48e47d661f6cbfc749a	f	2016-03-25 18:25:13	2016-03-25 18:25:13	Submitted an iteration	2016-01-03 10:13:51.462945	\N
30	15	haskell	grains	1	pending	2016-03-19 05:33:33	2016-03-19 05:33:33	64935053027f86527781d423	f	2016-03-25 02:37:14	2016-03-25 02:37:14	Submitted an iteration	\N	\N
31	15	csharp	triangle	1	pending	2016-03-11 23:11:16	2016-03-11 23:11:16	91f16e6d803d1596ba74e571	f	2016-03-23 05:13:35	2016-03-23 05:13:35	Submitted an iteration	\N	\N
32	15	haskell	bob	2	done	2016-03-24 12:32:03	2016-03-24 12:32:03	87901daaca3a16fd0f8aae02	t	2016-03-26 10:36:56	2016-03-26 10:36:56	Submitted an iteration	\N	\N
33	15	python	sieve	1	pending	2016-03-04 21:37:17	2016-03-04 21:37:17	56b209d2a6f259e0bb390b4a	f	2016-03-26 13:13:59	2016-03-26 13:13:59	Submitted an iteration	\N	\N
34	15	cpp	phone-number	2	hibernating	2016-03-10 17:46:09	2016-03-10 17:46:09	c96cd7cf761bf909ee63aa2c	f	2016-03-16 10:52:46	2016-03-16 10:52:46	Submitted an iteration	\N	\N
35	15	python	leap	4	done	2016-03-06 14:17:32	2016-03-06 14:17:32	5543810e4c1e5e1325018943	t	2016-03-21 04:23:17	2016-03-21 04:23:17	Submitted an iteration	\N	\N
36	15	csharp	roman-numerals	1	done	2016-03-15 12:50:47	2016-03-15 12:50:47	df3e2e945d75b20b6d40f823	t	2016-03-25 22:46:32	2016-03-25 22:46:32	Submitted an iteration	\N	\N
37	15	cpp	hamming	2	hibernating	2016-03-17 17:52:00	2016-03-17 17:52:00	32839e4f45ff60e27e3f3af4	f	2016-03-26 14:11:32	2016-03-26 14:11:32	@LegalizeAdulthood commented	\N	\N
38	15	javascript	word-count	1	pending	2016-03-12 10:27:42	2016-03-12 10:27:42	a68cbbdd28b73a1d38a06dbe	f	2016-03-19 23:54:32	2016-03-19 23:54:32	Submitted an iteration	\N	\N
39	15	ruby	rna-transcription	1	pending	2016-03-14 01:23:30	2016-03-14 01:23:30	7ee6ae1cceba01a98cfbabda	t	2016-03-26 22:52:19	2016-03-26 22:52:19	Submitted an iteration	\N	\N
40	15	swift	grade-school	3	hibernating	2016-03-04 14:55:10	2016-03-04 14:55:10	b24cbd0f1389ce63799bf48f	f	2016-03-15 11:57:46	2016-03-15 11:57:46	Submitted an iteration	\N	\N
41	15	ruby	nth-prime	1	\N	2016-03-11 01:15:44	2016-03-11 01:15:44	5731b50686c8b45778173dd2	t	2016-03-11 09:38:23	2016-03-11 09:38:23	Submitted an iteration	2016-02-12 00:12:56.146135	\N
42	15	javascript	grade-school	1	\N	2016-03-10 02:52:46	2016-03-10 02:52:46	5ec0a1979bc458011a43a91f	f	2016-03-20 10:12:12	2016-03-20 10:12:12	@oris commented	2015-11-03 21:12:31.830281	\N
43	15	python	twelve-days	2	pending	2016-03-07 11:04:52	2016-03-07 11:04:52	d24d0ecb1030cb47ae22b3cf	f	2016-03-15 07:38:13	2016-03-15 07:38:13	Submitted an iteration	\N	\N
44	15	javascript	hamming	1	done	2016-03-08 05:06:59	2016-03-08 05:06:59	b47bd39e314a74960847230f	t	2016-03-10 00:23:12	2016-03-10 00:23:12	Submitted an iteration	\N	\N
45	15	csharp	anagram	1	pending	2016-03-08 05:30:17	2016-03-08 05:30:17	f91b9e80dbf0d9826715303e	f	2016-03-13 21:05:18	2016-03-13 21:05:18	Submitted an iteration	\N	\N
46	22	haskell	anagram	1	\N	2016-02-28 13:56:55	2016-02-28 13:56:55	869b55e0726bd48510dd61c1	f	2016-03-18 01:03:12	2016-03-18 01:03:12	Submitted an iteration	2016-02-24 22:38:08.929469	\N
47	22	elixir	sublist	1	\N	2016-02-29 06:10:30	2016-02-29 06:10:30	b3d9f13f3c03b6401c8f051e	f	2016-03-19 13:21:51	2016-03-19 13:21:51	Submitted an iteration	\N	\N
48	22	javascript	word-count	1	hibernating	2016-03-02 11:04:15	2016-03-02 11:04:15	0b32ca753a515d4cdffb657e	f	2016-03-22 09:19:08	2016-03-22 09:19:08	Submitted an iteration	\N	\N
49	22	python	hello-world	2	\N	2016-03-02 08:00:07	2016-03-02 08:00:07	0b5a1c4490a54b3ebf0498f5	f	2016-03-19 21:06:57	2016-03-19 21:06:57	Submitted an iteration	\N	\N
50	22	javascript	bob	1	hibernating	2016-03-12 15:16:15	2016-03-12 15:16:15	1c5d21e5321b542f3f1fee52	f	2016-03-15 17:14:25	2016-03-15 17:14:25	Submitted an iteration	\N	\N
51	22	javascript	rna-transcription	1	\N	2016-02-21 02:19:36	2016-02-21 02:19:36	0467a2062327e37d0e9b2581	f	2016-03-12 15:19:20	2016-03-12 15:19:20	Submitted an iteration	2016-02-08 00:42:13.826644	\N
52	22	ruby	grains	2	done	2016-02-23 03:08:57	2016-02-23 03:08:57	0315f6ea90d1f491fe071794	t	2016-03-24 02:49:43	2016-03-24 02:49:43	Submitted an iteration	\N	\N
53	22	objective-c	word-count	1	\N	2016-03-23 07:05:25	2016-03-23 07:05:25	28ac14047b6fb9206bbac4fa	t	2016-03-25 14:31:55	2016-03-25 14:31:55	Submitted an iteration	2015-12-20 12:31:56.013191	\N
54	22	javascript	leap	2	\N	2016-03-07 04:32:29	2016-03-07 04:32:29	b2ccd68484b511f567b33a04	f	2016-03-23 09:43:05	2016-03-23 09:43:05	Submitted an iteration	2015-11-22 04:00:23.788826	\N
55	22	ruby	hamming	3	pending	2016-03-07 16:24:26	2016-03-07 16:24:26	e9feb745724f88cbefb4abc7	f	2016-03-24 00:42:52	2016-03-24 00:42:52	Submitted an iteration	\N	\N
56	22	scala	leap	2	\N	2016-03-19 23:20:54	2016-03-19 23:20:54	bf2030f7afa7936e7ce127fb	f	2016-03-26 13:10:59	2016-03-26 13:10:59	@abo64 commented	2015-10-22 16:39:33.244747	\N
57	22	ruby	rna-transcription	2	done	2016-02-22 02:24:54	2016-02-22 02:24:54	16bf69174f736bb61c357a73	t	2016-03-27 13:35:19	2016-03-27 13:35:19	Submitted an iteration	\N	\N
58	22	ruby	binary	2	\N	2016-03-05 03:29:21	2016-03-05 03:29:21	9bcbcf32667f1c798457d8c7	f	2016-03-23 13:53:48	2016-03-23 13:53:48	@neurogenesis commented	2016-02-03 00:48:54.35616	\N
59	22	ruby	difference-of-squares	1	hibernating	2016-02-29 14:03:43	2016-02-29 14:03:43	e97cddeda1194abf839a8e37	f	2016-03-08 20:32:23	2016-03-08 20:32:23	Submitted an iteration	\N	\N
60	22	elixir	nucleotide-count	1	done	2016-03-12 05:20:11	2016-03-12 05:20:11	27979d8c37e31c2d199a3e02	t	2016-03-17 09:40:02	2016-03-17 09:40:02	Submitted an iteration	\N	\N
61	22	javascript	food-chain	1	pending	2016-03-04 14:50:20	2016-03-04 14:50:20	2ee5d2c93074cef660d2942a	f	2016-03-22 00:49:31	2016-03-22 00:49:31	Submitted an iteration	\N	\N
62	22	ruby	raindrops	6	\N	2016-02-20 20:31:38	2016-02-20 20:31:38	f8fb752a0c2768fb5187d424	t	2016-03-25 14:51:16	2016-03-25 14:51:16	@illbzo1 commented	\N	\N
63	22	elixir	hello-world	1	\N	2016-02-20 09:01:00	2016-02-20 09:01:00	c0ed685f5b2e3d11ec8afcb1	f	2016-03-18 04:46:46	2016-03-18 04:46:46	@rikki- commented	\N	\N
64	22	rust	difference-of-squares	3	done	2016-02-27 16:16:38	2016-02-27 16:16:38	b47c970f4e6bada36d4fb9ba	t	2016-03-27 07:20:02	2016-03-27 07:20:02	Submitted an iteration	\N	\N
65	22	ruby	word-count	4	done	2016-02-24 19:24:19	2016-02-24 19:24:19	66cdadf163ac19618458af19	t	2016-03-23 18:15:08	2016-03-23 18:15:08	Submitted an iteration	\N	\N
66	22	java	etl	1	hibernating	2016-03-01 06:42:30	2016-03-01 06:42:30	1efbda898f1b4a802b373046	f	2016-03-10 11:00:58	2016-03-10 11:00:58	Submitted an iteration	\N	\N
67	22	erlang	rna-transcription	1	pending	2016-03-05 22:03:15	2016-03-05 22:03:15	288086faaa459b08525572cd	t	2016-03-21 16:02:44	2016-03-21 16:02:44	@NobbZ commented	\N	\N
68	22	ruby	binary-search-tree	2	pending	2016-02-23 01:09:20	2016-02-23 01:09:20	ca6362259c3d1d8f7351d262	f	2016-03-11 16:49:36	2016-03-11 16:49:36	Submitted an iteration	\N	\N
69	22	python	word-count	1	pending	2016-03-01 20:43:07	2016-03-01 20:43:07	0a64521612723e82d4537433	t	2016-03-12 18:26:49	2016-03-12 18:26:49	Submitted an iteration	\N	\N
70	22	csharp	leap	2	done	2016-02-19 18:08:10	2016-02-19 18:08:10	06b6a3395e2745816044d86f	t	2016-03-01 14:37:53	2016-03-01 14:37:53	Submitted an iteration	\N	\N
71	22	coffeescript	word-count	1	pending	2016-03-17 16:11:34	2016-03-17 16:11:34	7ec9ea333dd41dd3cea204b2	f	2016-03-18 01:19:31	2016-03-18 01:19:31	Submitted an iteration	\N	\N
72	22	python	series	2	pending	2016-02-20 01:30:10	2016-02-20 01:30:10	2b4dc20ed2141bb76f97e38f	f	2016-03-17 00:52:53	2016-03-17 00:52:53	Submitted an iteration	\N	\N
73	22	perl5	bob	1	hibernating	2016-03-08 12:41:11	2016-03-08 12:41:11	bc9cc3d5fbc2e77d29b30740	f	2016-03-15 08:20:01	2016-03-15 08:20:01	Submitted an iteration	\N	\N
74	22	javascript	pythagorean-triplet	1	done	2016-03-19 21:55:36	2016-03-19 21:55:36	39b0b2cf72842b914b4adad0	t	2016-03-24 12:04:51	2016-03-24 12:04:51	Submitted an iteration	\N	\N
75	22	ruby	food-chain	1	\N	2016-03-10 14:44:24	2016-03-10 14:44:24	9e1cc8d2038991306665be3a	f	2016-03-27 09:05:17	2016-03-27 09:05:17	Submitted an iteration	\N	\N
76	22	haskell	accumulate	2	\N	2016-02-19 16:07:35	2016-02-19 16:07:35	cd3e47f01df215fe16a653d8	f	2016-03-19 18:15:11	2016-03-19 18:15:11	Submitted an iteration	\N	\N
77	22	rust	anagram	4	done	2016-02-19 13:55:50	2016-02-19 13:55:50	8e8ee88044d92b0c830b8809	t	2016-03-25 23:50:44	2016-03-25 23:50:44	Submitted an iteration	\N	\N
78	22	java	nucleotide-count	1	pending	2016-03-19 08:49:14	2016-03-19 08:49:14	fb9b5881bafcd09260239cf5	f	2016-03-22 17:53:05	2016-03-22 17:53:05	Submitted an iteration	\N	\N
79	22	clojure	rna-transcription	1	pending	2016-03-22 16:39:45	2016-03-22 16:39:45	20d68421e5fb6fe713f76fa2	t	2016-03-25 10:30:31	2016-03-25 10:30:31	Submitted an iteration	\N	\N
80	22	python	bob	1	done	2016-02-28 19:27:36	2016-02-28 19:27:36	7822a1acd80a83839ce61a73	t	2016-03-11 00:47:48	2016-03-11 00:47:48	Submitted an iteration	\N	\N
81	28	ruby	nth-prime	1	pending	2016-03-05 05:53:54	2016-03-05 05:53:54	52801da4fc2add262a9a36f8	f	2016-03-24 09:18:31	2016-03-24 09:18:31	Submitted an iteration	\N	\N
82	28	python	bob	3	done	2016-03-02 04:42:40	2016-03-02 04:42:40	fc8ef3cfcab0da8acd117613	t	2016-03-23 21:57:39	2016-03-23 21:57:39	Submitted an iteration	\N	\N
83	28	javascript	leap	1	\N	2016-03-03 13:13:36	2016-03-03 13:13:36	99523d8c3726b3fa2fe6a408	t	2016-03-15 05:38:35	2016-03-15 05:38:35	Submitted an iteration	2016-02-05 18:39:40.425908	\N
84	29	csharp	bob	1	pending	2015-08-01 06:34:39	2015-08-01 06:34:39	2eec35bd8686067948944f2d	f	2016-03-24 23:36:03	2016-03-24 23:36:03	Submitted an iteration	\N	\N
85	29	haskell	gigasecond	2	done	2015-12-16 08:49:57	2015-12-16 08:49:57	45121653ecb65efe97d6e55c	t	2016-01-16 17:24:52	2016-01-16 17:24:52	Submitted an iteration	\N	\N
86	29	python	word-count	1	pending	2015-08-05 04:28:44	2015-08-05 04:28:44	0c51a54b861f81b073a39777	f	2016-02-29 09:06:35	2016-02-29 09:06:35	Submitted an iteration	\N	\N
87	29	ruby	robot-name	1	pending	2015-10-22 22:17:22	2015-10-22 22:17:22	433d726257052d0cc20fd8f7	t	2015-10-24 23:36:16	2015-10-24 23:36:16	Submitted an iteration	\N	\N
88	29	python	difference-of-squares	1	\N	2015-10-10 14:04:49	2015-10-10 14:04:49	53ed6c98ebde2db251923d71	f	2015-12-20 11:01:53	2015-12-20 11:01:53	Submitted an iteration	\N	\N
89	29	python	accumulate	1	pending	2015-10-16 21:14:55	2015-10-16 21:14:55	d271731b19e440ffd443d0e6	f	2016-01-23 13:47:38	2016-01-23 13:47:38	Submitted an iteration	\N	\N
90	29	csharp	word-count	1	done	2015-07-20 20:06:06	2015-07-20 20:06:06	dd067eede53edaddb6727caa	t	2016-03-13 16:45:43	2016-03-13 16:45:43	Submitted an iteration	\N	\N
91	29	ruby	difference-of-squares	2	\N	2015-11-02 12:25:16	2015-11-02 12:25:16	b6565054a43a85929a394562	f	2016-02-18 20:48:58	2016-02-18 20:48:58	Submitted an iteration	2016-01-08 15:25:41.077759	\N
92	29	perl5	bob	1	\N	2016-03-10 09:43:02	2016-03-10 09:43:02	41ea612c6f5c818e0563881e	f	2016-03-16 12:34:36	2016-03-16 12:34:36	@lancew commented	\N	\N
93	29	ruby	leap	1	\N	2016-02-09 21:20:22	2016-02-09 21:20:22	6a9419b90b4eb70ee45f5ab9	f	2016-02-25 14:16:46	2016-02-25 14:16:46	Submitted an iteration	2015-10-08 17:36:43.380406	\N
94	29	python	bob	4	pending	2015-09-09 04:44:37	2015-09-09 04:44:37	36cc4552a574f957b332bd91	t	2016-03-21 22:08:26	2016-03-21 22:08:26	Submitted an iteration	\N	\N
95	29	coffeescript	hello-world	1	\N	2015-09-08 14:54:46	2015-09-08 14:54:46	5f587c26a2f8e0fdf95cff05	f	2015-10-06 06:09:22	2015-10-06 06:09:22	Submitted an iteration	\N	\N
96	29	php	difference-of-squares	1	\N	2015-09-25 02:38:36	2015-09-25 02:38:36	e5a119b52cdd4fd719146662	f	2015-12-06 04:59:36	2015-12-06 04:59:36	Submitted an iteration	\N	\N
97	29	erlang	trinary	1	hibernating	2016-01-09 12:39:15	2016-01-09 12:39:15	f8ea7859dfd8df5b8240e21f	f	2016-03-04 04:56:17	2016-03-04 04:56:17	@NobbZ commented	\N	\N
98	29	javascript	raindrops	1	\N	2015-11-23 02:22:34	2015-11-23 02:22:34	83c547b1013fbcae3935ff2c	f	2016-02-14 09:50:31	2016-02-14 09:50:31	Submitted an iteration	\N	\N
99	29	ruby	roman-numerals	1	\N	2015-10-14 05:14:10	2015-10-14 05:14:10	646c5a6a0a13f77677bf9f71	f	2015-12-25 16:32:37	2015-12-25 16:32:37	Submitted an iteration	2016-01-09 00:10:06.335104	\N
100	29	csharp	hamming	1	\N	2015-11-13 18:28:43	2015-11-13 18:28:43	c76e44a4e8f1fc0b7637f3bc	t	2016-01-21 02:08:33	2016-01-21 02:08:33	Submitted an iteration	2016-01-15 23:52:27.93735	\N
101	29	clojure	word-count	1	pending	2015-07-24 06:59:56	2015-07-24 06:59:56	ee00e7104497b99d46175455	f	2015-08-16 13:37:17	2015-08-16 13:37:17	Submitted an iteration	\N	\N
102	29	ruby	beer-song	5	done	2015-07-19 10:59:00	2015-07-19 10:59:00	e2c7becdff7af4d8362a15c8	t	2016-02-25 20:40:58	2016-02-25 20:40:58	Submitted an iteration	\N	\N
103	29	javascript	hamming	1	\N	2015-07-17 20:40:24	2015-07-17 20:40:24	3a09215455b4a1a91294d21d	f	2015-12-24 03:26:03	2015-12-24 03:26:03	Submitted an iteration	2015-10-08 17:05:22.826027	\N
104	29	elixir	binary	1	\N	2015-11-26 22:30:38	2015-11-26 22:30:38	3fe65a2d9ccf4549ede2fb71	t	2016-03-05 16:23:02	2016-03-05 16:23:02	Submitted an iteration	2015-12-30 00:05:14.345794	\N
105	29	python	sublist	1	\N	2015-08-20 23:09:32	2015-08-20 23:09:32	25a1cbd3655b34d6115eb24b	f	2015-11-24 23:08:06	2015-11-24 23:08:06	Submitted an iteration	2015-10-05 00:10:29.073456	\N
106	29	scala	hello-world	1	\N	2015-07-25 06:03:50	2015-07-25 06:03:50	d4e1da01ec08534494c4ba54	f	2015-07-29 01:38:10	2015-07-29 01:38:10	Submitted an iteration	\N	\N
107	29	ruby	rna-transcription	2	pending	2015-12-05 23:27:56	2015-12-05 23:27:56	35791fe18d7fca33d2da7b67	f	2016-01-23 08:37:56	2016-01-23 08:37:56	Submitted an iteration	\N	\N
108	29	ruby	gigasecond	1	pending	2016-01-12 01:53:38	2016-01-12 01:53:38	7e63073d726e13fe0411eb54	f	2016-01-28 20:27:50	2016-01-28 20:27:50	Submitted an iteration	\N	\N
109	29	haskell	crypto-square	1	done	2015-11-30 10:09:23	2015-11-30 10:09:23	b4728402addd305ce673abd7	t	2016-02-08 16:24:23	2016-02-08 16:24:23	Submitted an iteration	\N	\N
110	29	go	clock	1	\N	2016-01-06 10:35:16	2016-01-06 10:35:16	69dc27cba434066979c3aeac	t	2016-03-18 20:02:49	2016-03-18 20:02:49	@br0xen commented	2015-11-11 15:49:17.4241	\N
111	29	elixir	hello-world	1	\N	2015-08-30 02:52:33	2015-08-30 02:52:33	2e0de7e3cd405458b8f5c443	f	2015-10-04 23:20:39	2015-10-04 23:20:39	Submitted an iteration	\N	\N
112	29	scala	bob	3	\N	2015-07-23 08:05:05	2015-07-23 08:05:05	1b4a6c4a1cd6f04697b2d35f	f	2016-03-15 03:59:33	2016-03-15 03:59:33	@abo64 commented	2015-10-30 21:19:32.125119	\N
113	29	javascript	robot-simulator	1	done	2015-08-26 06:11:14	2015-08-26 06:11:14	a505e95ea91d2a3e3dc9a612	t	2015-10-05 13:27:44	2015-10-05 13:27:44	Submitted an iteration	\N	\N
114	29	python	hamming	2	needs_input	2015-09-25 17:01:13	2015-09-25 17:01:13	9e222c26010134d4dcd09714	f	2015-12-25 22:23:39	2015-12-25 22:23:39	Submitted an iteration	\N	\N
115	29	clojure	beer-song	5	pending	2015-08-06 11:03:39	2015-08-06 11:03:39	5cd4fb5f377f0a6fef8502ae	f	2016-03-03 20:23:23	2016-03-03 20:23:23	Submitted an iteration	\N	\N
116	29	haskell	difference-of-squares	3	done	2015-09-01 03:05:41	2015-09-01 03:05:41	bb92bf615e132394aa1021f5	t	2016-03-24 03:29:02	2016-03-24 03:29:02	Submitted an iteration	\N	\N
117	29	haskell	bob	2	pending	2015-08-04 14:59:06	2015-08-04 14:59:06	bad6e4e4234ff647737d71a3	f	2016-03-02 22:03:55	2016-03-02 22:03:55	Submitted an iteration	\N	\N
118	29	haskell	rna-transcription	1	\N	2016-01-09 19:03:06	2016-01-09 19:03:06	8f60ab2aece60d1c84ebccfe	t	2016-03-17 13:17:34	2016-03-17 13:17:34	Submitted an iteration	2015-10-08 20:04:40.118352	\N
119	29	clojure	rna-transcription	2	pending	2015-12-02 20:26:02	2015-12-02 20:26:02	fa6cf771435feb549e7800ad	t	2016-03-27 11:07:36	2016-03-27 11:07:36	Submitted an iteration	\N	\N
120	31	rust	difference-of-squares	1	pending	2016-03-07 17:14:00	2016-03-07 17:14:00	77fe7df63ff223721897abe6	f	2016-03-14 02:31:16	2016-03-14 02:31:16	Submitted an iteration	\N	\N
121	31	python	gigasecond	2	pending	2016-01-14 16:18:59	2016-01-14 16:18:59	cc65a3a699e246dedd4b7fe1	f	2016-03-26 15:33:48	2016-03-26 15:33:48	Submitted an iteration	\N	\N
122	31	javascript	hello-world	1	done	2016-01-31 13:02:31	2016-01-31 13:02:31	7d62245f136bddf840a07802	t	2016-02-06 22:10:49	2016-02-06 22:10:49	Submitted an iteration	\N	\N
123	31	elixir	word-count	1	hibernating	2016-03-08 03:07:44	2016-03-08 03:07:44	fb01e3fcdc1cff9cffc0facc	f	2016-03-18 08:35:14	2016-03-18 08:35:14	Submitted an iteration	\N	\N
124	31	cpp	etl	2	done	2016-02-25 03:42:19	2016-02-25 03:42:19	e7e9366b4a159b408d4a021a	t	2016-03-15 23:58:19	2016-03-15 23:58:19	Submitted an iteration	\N	\N
125	31	javascript	anagram	1	done	2016-01-27 05:54:32	2016-01-27 05:54:32	33d917bd7af114017f69da95	t	2016-02-26 21:10:23	2016-02-26 21:10:23	Submitted an iteration	\N	\N
126	31	javascript	bob	1	pending	2016-01-14 19:28:30	2016-01-14 19:28:30	dd77ac088ed4aee97924118e	f	2016-03-02 17:31:26	2016-03-02 17:31:26	Submitted an iteration	\N	\N
127	31	ruby	robot-name	1	\N	2016-01-28 13:11:16	2016-01-28 13:11:16	35f716e3e95b45530a9cd4ad	f	2016-03-07 21:44:13	2016-03-07 21:44:13	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N
128	31	haskell	house	2	done	2016-02-09 15:03:48	2016-02-09 15:03:48	91245735a2f1b0e061b918ab	t	2016-03-04 21:28:21	2016-03-04 21:28:21	Submitted an iteration	\N	\N
129	31	javascript	gigasecond	1	pending	2016-02-12 00:01:12	2016-02-12 00:01:12	375d7b834e2f6be35fb09c34	f	2016-03-05 06:08:15	2016-03-05 06:08:15	Submitted an iteration	\N	\N
130	31	ruby	word-count	1	done	2016-01-30 11:09:13	2016-01-30 11:09:13	561df70448aff937c98ddd41	t	2016-03-24 04:07:26	2016-03-24 04:07:26	Submitted an iteration	\N	\N
131	31	haskell	gigasecond	2	pending	2016-02-10 03:17:01	2016-02-10 03:17:01	3a3b2044ba50512ffb25d886	f	2016-03-15 10:22:13	2016-03-15 10:22:13	Submitted an iteration	\N	\N
132	31	python	rna-transcription	1	hibernating	2016-02-01 00:17:12	2016-02-01 00:17:12	6e055516d26976054dc7aa31	f	2016-02-13 19:58:24	2016-02-13 19:58:24	Submitted an iteration	\N	\N
133	31	clojure	crypto-square	1	needs_input	2016-01-23 19:21:41	2016-01-23 19:21:41	c9152a298800d260945c77fc	t	2016-03-01 21:16:08	2016-03-01 21:16:08	Submitted an iteration	\N	\N
134	31	java	meetup	1	pending	2016-01-20 03:05:49	2016-01-20 03:05:49	a62a11319f37eacd8b011d20	f	2016-03-05 08:15:12	2016-03-05 08:15:12	Submitted an iteration	\N	\N
135	31	python	atbash-cipher	1	\N	2016-03-07 08:02:32	2016-03-07 08:02:32	e5d8b3538abfbaaa6266fec2	f	2016-03-18 15:07:40	2016-03-18 15:07:40	Submitted an iteration	\N	\N
136	31	ruby	bob	2	\N	2016-01-26 00:59:46	2016-01-26 00:59:46	f9927713e1434960a6a1ceba	f	2016-02-26 10:51:09	2016-02-26 10:51:09	Submitted an iteration	2015-12-18 18:10:15.040183	\N
137	31	javascript	beer-song	1	pending	2016-02-22 04:46:48	2016-02-22 04:46:48	7b794159b693f54091f3d77b	f	2016-02-28 12:38:52	2016-02-28 12:38:52	Submitted an iteration	\N	\N
138	31	clojure	scrabble-score	2	pending	2016-01-20 00:35:52	2016-01-20 00:35:52	74765816201c4d3d3298dfa1	f	2016-02-26 08:11:09	2016-02-26 08:11:09	Submitted an iteration	\N	\N
139	31	javascript	hamming	2	done	2016-01-25 07:00:08	2016-01-25 07:00:08	a968600c1b35ddb4a6a984c8	t	2016-03-21 04:56:08	2016-03-21 04:56:08	Submitted an iteration	\N	\N
140	31	python	allergies	2	pending	2016-03-01 08:45:37	2016-03-01 08:45:37	6a4db5c95f2e8aa8ac91b5a2	t	2016-03-16 18:32:11	2016-03-16 18:32:11	Submitted an iteration	\N	\N
141	33	go	gigasecond	2	pending	2015-12-27 13:45:53	2015-12-27 13:45:53	167a8604e545de904b5d2171	f	2016-02-27 09:12:25	2016-02-27 09:12:25	Submitted an iteration	\N	\N
142	33	clojure	prime-factors	1	pending	2015-12-13 14:52:08	2015-12-13 14:52:08	08d5088cf5b380ee268bcdc8	f	2016-03-10 14:16:35	2016-03-10 14:16:35	Submitted an iteration	\N	\N
143	33	ruby	bob	3	done	2015-11-11 08:18:20	2015-11-11 08:18:20	c972b5a791d84e566e5d4068	f	2016-03-11 08:48:06	2016-03-11 08:48:06	@alphaone commented	\N	\N
144	33	go	pythagorean-triplet	1	\N	2015-12-29 19:41:34	2015-12-29 19:41:34	d352ff2fe75cfa0ce7f678c9	f	2015-12-30 04:42:08	2015-12-30 04:42:08	Submitted an iteration	2016-02-16 14:29:29.667566	\N
145	33	elixir	zipper	1	\N	2016-01-28 23:25:22	2016-01-28 23:25:22	25fae7ae30e72e5d30ce53f2	f	2016-03-20 06:52:11	2016-03-20 06:52:11	Submitted an iteration	2016-02-02 19:48:36.697088	\N
146	33	python	rna-transcription	1	done	2015-12-08 20:31:31	2015-12-08 20:31:31	5ba3072da6202c5868b344b8	t	2016-01-11 11:34:54	2016-01-11 11:34:54	Submitted an iteration	\N	\N
147	33	cpp	queen-attack	2	hibernating	2015-11-13 07:56:19	2015-11-13 07:56:19	491124a4cd6789ea1114d8f6	f	2016-03-21 01:51:35	2016-03-21 01:51:35	@LegalizeAdulthood commented	\N	\N
148	38	ruby	roman-numerals	1	\N	2016-02-03 02:32:40	2016-02-03 02:32:40	49a367bc718444b4c8613f84	t	2016-02-20 06:31:52	2016-02-20 06:31:52	Submitted an iteration	2016-01-23 22:36:36.112711	\N
149	38	lisp	gigasecond	2	hibernating	2015-07-06 08:22:19	2015-07-06 08:22:19	008da8a406dc59613a61fc5f	f	2016-03-27 13:58:34	2016-03-27 13:58:34	Submitted an iteration	\N	\N
150	38	javascript	hello-world	1	pending	2015-09-20 04:10:46	2015-09-20 04:10:46	c8e84641664848251ad5dbfc	f	2015-12-07 04:18:32	2015-12-07 04:18:32	Submitted an iteration	\N	\N
151	38	ruby	robot-name	1	\N	2015-07-12 10:42:07	2015-07-12 10:42:07	c9bba82750c5a88facfd09e3	f	2016-03-06 23:02:08	2016-03-06 23:02:08	@Calvyn82 commented	2016-02-09 21:12:06.129997	\N
152	38	ruby	series	1	pending	2015-11-18 07:40:37	2015-11-18 07:40:37	57bdac32dc94e1c921656406	f	2015-12-18 23:24:37	2015-12-18 23:24:37	Submitted an iteration	\N	\N
153	38	python	rna-transcription	1	\N	2015-07-19 15:57:57	2015-07-19 15:57:57	4adbf6ac63adc8a0dfb8d79c	f	2015-10-06 22:26:28	2015-10-06 22:26:28	@behrtam commented	2015-11-11 00:21:41.953273	\N
154	40	perl5	triangle	1	pending	2016-03-10 08:54:09	2016-03-10 08:54:09	651d13bd02fdcb0b303d5715	f	2016-03-26 22:09:27	2016-03-26 22:09:27	Submitted an iteration	\N	\N
155	40	haskell	nth-prime	1	\N	2016-02-13 11:16:56	2016-02-13 11:16:56	db4357fa414eda7fcf785a3d	f	2016-02-22 04:37:54	2016-02-22 04:37:54	Submitted an iteration	\N	\N
156	40	elixir	word-count	2	pending	2016-02-19 11:55:33	2016-02-19 11:55:33	e45da022d8e8333829f71e36	f	2016-03-05 03:44:56	2016-03-05 03:44:56	Submitted an iteration	\N	\N
157	44	javascript	bob	1	done	2015-11-15 08:53:37	2015-11-15 08:53:37	cd55989d51cdb468c1d3b5e3	t	2016-02-16 03:29:45	2016-02-16 03:29:45	Submitted an iteration	\N	\N
158	46	python	hamming	2	done	2015-11-22 13:30:01	2015-11-22 13:30:01	58d884d40bc1b0c78c087424	t	2016-03-10 15:23:03	2016-03-10 15:23:03	Submitted an iteration	\N	\N
159	48	ruby	binary	1	\N	2015-10-18 23:00:06	2015-10-18 23:00:06	5c443e5e05cc15aa610e7b95	f	2015-10-22 22:09:10	2015-10-22 22:09:10	@Calvyn82 commented	\N	\N
160	48	haskell	space-age	1	\N	2015-10-28 23:17:05	2015-10-28 23:17:05	7bdb470fd8673468e29ee0d8	f	2015-12-08 01:24:45	2015-12-08 01:24:45	Submitted an iteration	\N	\N
161	49	cpp	word-count	4	needs_input	2016-02-18 08:44:10	2016-02-18 08:44:10	5679b399d066cc5acbda7c0c	f	2016-03-26 16:16:16	2016-03-26 16:16:16	Submitted an iteration	\N	\N
162	49	ruby	secret-handshake	4	done	2016-02-16 02:09:02	2016-02-16 02:09:02	956a2c0ba90c084e92630ee2	t	2016-03-14 06:14:35	2016-03-14 06:14:35	Submitted an iteration	\N	\N
163	49	ruby	strain	1	done	2016-02-13 20:59:23	2016-02-13 20:59:23	b280eb54a77b20b53bb6b4c7	t	2016-03-13 11:59:30	2016-03-13 11:59:30	Submitted an iteration	\N	\N
164	49	javascript	word-count	1	\N	2016-02-14 07:04:29	2016-02-14 07:04:29	509f403829d98c04507280d9	f	2016-03-24 22:34:34	2016-03-24 22:34:34	Submitted an iteration	2015-10-29 17:31:11.392916	\N
165	49	ruby	hamming	2	hibernating	2016-02-19 06:53:45	2016-02-19 06:53:45	5646bc1575adceac5bb06e88	f	2016-03-24 02:58:08	2016-03-24 02:58:08	Submitted an iteration	\N	\N
166	26	ocaml	bob	1	pending	2016-03-04 23:53:50	2016-03-04 23:53:50	c93f705666611cb3997baddc	f	2016-03-14 22:23:20	2016-03-14 22:23:20	Submitted an iteration	\N	\N
167	26	ruby	phone-number	2	\N	2015-12-15 10:47:29	2015-12-15 10:47:29	2ec0271adbd0dc756c459379	f	2016-03-16 00:27:26	2016-03-16 00:27:26	@remcopeereboom commented	2015-10-20 21:28:02.688659	\N
168	26	scala	bob	1	pending	2015-12-12 03:18:36	2015-12-12 03:18:36	46313e79238e67d4d313d426	f	2016-01-12 13:18:51	2016-01-12 13:18:51	Submitted an iteration	\N	\N
169	26	go	clock	2	pending	2015-12-24 02:32:57	2015-12-24 02:32:57	73fad4519ce2b6f74f074c1a	f	2016-03-15 09:20:23	2016-03-15 09:20:23	Submitted an iteration	\N	\N
170	26	javascript	etl	2	\N	2015-12-17 18:49:42	2015-12-17 18:49:42	e72b1cc6ef07cb091ea3c9e8	f	2016-03-13 01:01:24	2016-03-13 01:01:24	Submitted an iteration	2016-02-17 19:53:10.34942	\N
171	26	ruby	hello-world	1	pending	2016-01-23 22:45:58	2016-01-23 22:45:58	12b544f23fbfb47fa53e96bd	f	2016-03-06 11:01:37	2016-03-06 11:01:37	Submitted an iteration	\N	\N
172	26	python	pangram	1	\N	2015-12-27 17:57:48	2015-12-27 17:57:48	343c8a7acc65778ad40c38da	f	2016-01-31 04:42:10	2016-01-31 04:42:10	Submitted an iteration	2016-02-23 17:52:48.717925	\N
173	26	elixir	gigasecond	2	\N	2015-12-19 15:18:00	2015-12-19 15:18:00	45958b0bdfd34f04377b54c2	f	2016-03-24 03:50:15	2016-03-24 03:50:15	Submitted an iteration	2015-11-04 04:36:40.956967	\N
174	26	ruby	space-age	1	\N	2016-01-11 10:23:50	2016-01-11 10:23:50	e34ff892d625e74a8b9615dc	f	2016-01-14 08:10:47	2016-01-14 08:10:47	Submitted an iteration	2015-11-27 23:54:35.745018	\N
175	26	ruby	series	1	pending	2015-12-20 12:39:42	2015-12-20 12:39:42	fdc1934576f12a3bdb63c664	f	2016-01-15 12:14:55	2016-01-15 12:14:55	Submitted an iteration	\N	\N
176	26	cpp	word-count	1	done	2015-12-19 01:07:30	2015-12-19 01:07:30	29facaafb3b60b1a4470cc55	t	2016-02-02 04:20:13	2016-02-02 04:20:13	Submitted an iteration	\N	\N
177	26	cpp	triangle	1	pending	2016-03-18 08:03:26	2016-03-18 08:03:26	2c34c7eb2960ec6bab878100	f	2016-03-24 06:03:40	2016-03-24 06:03:40	Submitted an iteration	\N	\N
178	26	clojure	binary	2	pending	2016-01-04 00:13:58	2016-01-04 00:13:58	b5032cc99722c83031f56c23	f	2016-01-22 20:18:49	2016-01-22 20:18:49	Submitted an iteration	\N	\N
179	26	ruby	accumulate	2	hibernating	2015-12-14 13:28:22	2015-12-14 13:28:22	7b2f4ddc331089ad2f0b2503	f	2016-03-07 19:29:18	2016-03-07 19:29:18	Submitted an iteration	\N	\N
180	26	erlang	sum-of-multiples	1	needs_input	2016-01-04 13:31:11	2016-01-04 13:31:11	67dbe3133eb7c5b7289f9be0	f	2016-02-23 13:21:23	2016-02-23 13:21:23	Submitted an iteration	\N	\N
181	26	python	word-count	1	done	2015-12-20 11:37:57	2015-12-20 11:37:57	b6070975e60967720e4f2586	t	2016-01-15 05:34:46	2016-01-15 05:34:46	Submitted an iteration	\N	\N
182	26	haskell	space-age	3	\N	2016-01-08 00:03:30	2016-01-08 00:03:30	481e7a1417032794e478afde	f	2016-03-17 20:10:43	2016-03-17 20:10:43	Submitted an iteration	2016-02-24 22:23:01.375045	\N
183	26	scala	allergies	3	\N	2015-12-19 08:38:57	2015-12-19 08:38:57	f963be397c7aeda9d96b39ad	f	2016-02-03 16:53:45	2016-02-03 16:53:45	@abo64 commented	2015-09-24 16:17:02.279182	\N
184	26	ruby	word-count	3	needs_input	2015-12-15 01:36:54	2015-12-15 01:36:54	7189ed3a646cffea6365f31c	f	2016-01-30 01:51:55	2016-01-30 01:51:55	Submitted an iteration	\N	\N
185	26	java	etl	1	hibernating	2016-01-16 13:59:46	2016-01-16 13:59:46	d4c8bf92da1f703c23da96a4	f	2016-01-19 13:50:45	2016-01-19 13:50:45	Submitted an iteration	\N	\N
186	26	ruby	say	1	\N	2015-12-22 17:46:55	2015-12-22 17:46:55	a5be0b8bca65e0e41b6ec40a	f	2016-01-25 16:05:01	2016-01-25 16:05:01	Submitted an iteration	2015-12-22 14:58:27.530567	\N
187	26	python	gigasecond	1	done	2016-03-12 17:46:49	2016-03-12 17:46:49	61ab66aa7a44649fce1ad171	t	2016-03-17 12:37:25	2016-03-17 12:37:25	Submitted an iteration	\N	\N
188	26	javascript	leap	1	\N	2015-12-13 00:15:13	2015-12-13 00:15:13	d3b3091aacdbeb77b277e138	f	2016-02-22 01:51:24	2016-02-22 01:51:24	@MityaDSCH commented	\N	\N
189	26	javascript	word-count	3	done	2015-12-15 01:52:03	2015-12-15 01:52:03	0bfd30bd6ab923e3efcd772b	t	2016-02-11 13:31:02	2016-02-11 13:31:02	Submitted an iteration	\N	\N
190	26	ruby	binary	2	\N	2015-12-18 09:21:43	2015-12-18 09:21:43	5fd813c31f7b61dd7d657b94	f	2016-02-07 15:08:18	2016-02-07 15:08:18	Submitted an iteration	\N	\N
191	26	python	run-length-encoding	2	\N	2016-01-08 03:51:25	2016-01-08 03:51:25	3f0aff0ab2606acef0a09f5e	f	2016-03-06 15:22:13	2016-03-06 15:22:13	@joce commented	2016-02-29 19:14:55.785215	\N
192	26	go	octal	1	needs_input	2016-02-29 01:33:34	2016-02-29 01:33:34	0bb799ca60b931a2ea937bcb	f	2016-03-11 09:30:32	2016-03-11 09:30:32	Submitted an iteration	\N	\N
193	26	ruby	hamming	1	pending	2015-12-12 14:56:18	2015-12-12 14:56:18	5c7220f7af033f4f87e3b580	f	2016-03-26 06:50:26	2016-03-26 06:50:26	Submitted an iteration	\N	\N
194	26	csharp	leap	1	done	2015-12-13 00:54:11	2015-12-13 00:54:11	f4d8dad663f4514ba6789489	t	2016-03-26 23:17:32	2016-03-26 23:17:32	Submitted an iteration	\N	\N
195	26	ruby	leap	1	done	2015-12-29 11:31:26	2015-12-29 11:31:26	8ddc3e6c93d4009b7198ca0d	t	2016-02-10 20:59:19	2016-02-10 20:59:19	Submitted an iteration	\N	\N
196	26	javascript	gigasecond	1	hibernating	2016-01-17 20:26:55	2016-01-17 20:26:55	bdfd70cfcef917ff957d78d6	f	2016-03-17 22:59:16	2016-03-17 22:59:16	Submitted an iteration	\N	\N
197	26	scala	word-count	1	pending	2015-12-31 00:14:31	2015-12-31 00:14:31	64393536c7da6a571053c553	f	2016-02-12 15:40:05	2016-02-12 15:40:05	Submitted an iteration	\N	\N
198	26	python	hamming	1	\N	2016-02-13 01:12:30	2016-02-13 01:12:30	33e6f7d60c0021bb56af5171	f	2016-03-20 20:23:50	2016-03-20 20:23:50	Submitted an iteration	2015-11-11 16:25:13.499201	\N
199	26	ecmascript	hello-world	1	\N	2016-01-13 10:51:23	2016-01-13 10:51:23	607bfb1572962f0faf4342a3	f	2016-03-27 09:56:32	2016-03-27 09:56:32	@rikki- commented	\N	\N
200	26	javascript	grade-school	1	pending	2016-01-07 09:56:36	2016-01-07 09:56:36	caddc58d5fd06dc7676a34af	f	2016-01-23 07:15:18	2016-01-23 07:15:18	Submitted an iteration	\N	\N
201	26	ruby	bob	2	pending	2015-12-28 16:51:54	2015-12-28 16:51:54	74a872e0a2d7053a2f552a67	f	2016-03-10 10:44:17	2016-03-10 10:44:17	Submitted an iteration	\N	\N
202	26	elixir	bob	1	\N	2015-12-13 00:44:10	2015-12-13 00:44:10	74432c29b68a3166a8d3dba2	f	2016-02-20 10:41:56	2016-02-20 10:41:56	Submitted an iteration	2016-02-04 06:02:09.346674	\N
203	7	ruby	rna-transcription	1	\N	2016-01-18 18:54:57	2016-01-18 18:54:57	9264f41dbe848610893538fd	f	2016-02-26 20:40:48	2016-02-26 20:40:48	Submitted an iteration	2015-11-12 15:21:09.864227	\N
204	7	ruby	gigasecond	3	done	2015-12-07 06:53:13	2015-12-07 06:53:13	ab5eee6c8a5eddfbd72935be	t	2016-03-12 05:30:31	2016-03-12 05:30:31	Submitted an iteration	\N	\N
205	7	javascript	bob	1	done	2015-11-25 06:47:39	2015-11-25 06:47:39	438c4f7d6ceeec7383a41743	t	2015-12-18 09:03:42	2015-12-18 09:03:42	Submitted an iteration	\N	\N
206	7	ruby	grains	1	pending	2016-01-15 20:00:12	2016-01-15 20:00:12	cb17a4880f93ec741001e384	f	2016-03-14 21:46:26	2016-03-14 21:46:26	Submitted an iteration	\N	\N
207	7	python	kindergarten-garden	1	pending	2016-03-08 10:32:25	2016-03-08 10:32:25	d62fd1f23a39eae069cbab4a	f	2016-03-15 09:59:30	2016-03-15 09:59:30	Submitted an iteration	\N	\N
208	23	clojure	space-age	2	pending	2015-09-20 22:59:11	2015-09-20 22:59:11	9c3e597e905ac2902802d83f	f	2016-01-17 00:59:29	2016-01-17 00:59:29	Submitted an iteration	\N	\N
209	23	ruby	phone-number	3	hibernating	2015-10-10 11:11:18	2015-10-10 11:11:18	226868f6931a54eb1717f3c9	f	2016-03-12 17:51:47	2016-03-12 17:51:47	Submitted an iteration	\N	\N
210	23	javascript	hamming	1	hibernating	2016-02-01 02:45:47	2016-02-01 02:45:47	7e0727bf30c168cd3d652d14	f	2016-03-25 01:57:33	2016-03-25 01:57:33	Submitted an iteration	\N	\N
211	17	javascript	word-count	5	done	2016-01-06 04:33:26	2016-01-06 04:33:26	a3723116039537fa4427f64b	t	2016-03-19 22:13:09	2016-03-19 22:13:09	Submitted an iteration	\N	\N
212	17	erlang	etl	1	\N	2016-02-29 07:33:45	2016-02-29 07:33:45	df16ccee25cf8c875fcaf0e2	f	2016-03-18 02:28:49	2016-03-18 02:28:49	Submitted an iteration	2016-01-17 22:01:13.798537	\N
213	17	javascript	kindergarten-garden	2	pending	2016-01-12 18:59:00	2016-01-12 18:59:00	b27662c7ad3f15ba47e91bbf	f	2016-02-20 03:04:31	2016-02-20 03:04:31	Submitted an iteration	\N	\N
214	17	ruby	protein-translation	1	\N	2016-03-16 07:20:04	2016-03-16 07:20:04	571a98739a58557abac03889	f	2016-03-18 22:03:18	2016-03-18 22:03:18	Submitted an iteration	\N	\N
215	20	python	word-count	3	done	2015-10-28 19:58:23	2015-10-28 19:58:23	f040cf91ac7f7d7878cfd890	t	2016-03-06 12:12:16	2016-03-06 12:12:16	Submitted an iteration	\N	\N
216	20	python	allergies	1	pending	2015-09-01 17:13:15	2015-09-01 17:13:15	49cabafb3da047736952b6e9	f	2016-01-25 14:14:47	2016-01-25 14:14:47	Submitted an iteration	\N	\N
217	20	javascript	space-age	1	pending	2015-10-31 08:27:28	2015-10-31 08:27:28	2a9c0420928d96c353a84c07	f	2016-01-03 23:11:53	2016-01-03 23:11:53	Submitted an iteration	\N	\N
218	20	python	minesweeper	1	pending	2015-12-09 13:22:39	2015-12-09 13:22:39	b2fd1b4d6c85e4e5643da17d	f	2016-01-23 15:32:12	2016-01-23 15:32:12	Submitted an iteration	\N	\N
219	20	javascript	food-chain	1	pending	2016-03-17 20:03:24	2016-03-17 20:03:24	0e0fa0b8464421ff7a2d7e16	f	2016-03-26 07:22:25	2016-03-26 07:22:25	Submitted an iteration	\N	\N
220	20	csharp	hamming	1	\N	2016-01-04 16:01:03	2016-01-04 16:01:03	c23cea8bc9329b18c12bf830	f	2016-01-13 23:01:10	2016-01-13 23:01:10	Submitted an iteration	2016-01-21 12:30:46.989428	\N
221	21	scala	bob	1	done	2015-10-10 05:59:45	2015-10-10 05:59:45	4b72690f2a7cae3761291cb1	t	2015-11-13 18:09:14	2015-11-13 18:09:14	Submitted an iteration	\N	\N
222	21	python	hamming	2	done	2015-11-27 23:45:03	2015-11-27 23:45:03	80b08bda1d3c2eaa1c461bcd	f	2016-02-10 02:25:53	2016-02-10 02:25:53	Submitted an iteration	\N	\N
223	36	elixir	hello-world	1	\N	2015-12-27 09:27:13	2015-12-27 09:27:13	3bac938fa8a9938bb5ea3291	f	2016-01-30 19:39:10	2016-01-30 19:39:10	@rikki- commented	\N	\N
224	30	python	simple-cipher	1	pending	2016-03-06 10:54:58	2016-03-06 10:54:58	7f018db77832e95f4ce47b27	t	2016-03-10 16:05:42	2016-03-10 16:05:42	Submitted an iteration	\N	\N
225	30	csharp	phone-number	1	pending	2015-09-28 22:51:30	2015-09-28 22:51:30	6639214c1cc8fabab546a346	f	2016-02-01 16:20:44	2016-02-01 16:20:44	Submitted an iteration	\N	\N
226	30	haskell	word-count	2	hibernating	2015-12-14 20:29:10	2015-12-14 20:29:10	e3bdbee4ee3770fab00cbe64	f	2016-01-29 11:29:18	2016-01-29 11:29:18	Submitted an iteration	\N	\N
227	30	ruby	strain	1	done	2016-02-04 08:30:53	2016-02-04 08:30:53	f1a6afb7ace9f620e296c10c	t	2016-02-22 15:16:08	2016-02-22 15:16:08	Submitted an iteration	\N	\N
228	30	python	leap	1	hibernating	2015-11-25 11:49:53	2015-11-25 11:49:53	aaf4bce9add7aaf6e3571f6d	f	2015-12-30 00:31:05	2015-12-30 00:31:05	Submitted an iteration	\N	\N
229	30	python	crypto-square	1	done	2015-11-19 15:17:37	2015-11-19 15:17:37	a108bd5f3416c04fc7284fdc	t	2016-03-03 16:24:41	2016-03-03 16:24:41	Submitted an iteration	\N	\N
230	30	swift	leap	1	pending	2016-01-21 04:18:51	2016-01-21 04:18:51	f2a997c509bb4b5c86046a6e	f	2016-01-29 11:01:29	2016-01-29 11:01:29	Submitted an iteration	\N	\N
231	35	perl5	etl	1	done	2015-09-26 16:27:26	2015-09-26 16:27:26	28073ed09bfb480f174f41ab	t	2016-02-09 08:55:08	2016-02-09 08:55:08	Submitted an iteration	\N	\N
232	35	python	bob	3	done	2015-09-04 21:03:44	2015-09-04 21:03:44	05ce903c29e1f4912450432b	t	2016-03-27 04:30:52	2016-03-27 04:30:52	Submitted an iteration	\N	\N
233	35	racket	grep	4	\N	2015-07-24 02:42:19	2015-07-24 02:42:19	65da451b34c336deaefaa45c	f	2016-03-21 22:57:05	2016-03-21 22:57:05	Submitted an iteration	2015-12-20 16:21:45.7272	\N
234	35	ruby	house	4	done	2015-07-13 05:27:56	2015-07-13 05:27:56	e6314def29a2f9eca9836a17	t	2016-03-13 03:56:01	2016-03-13 03:56:01	Submitted an iteration	\N	\N
235	35	haskell	sum-of-multiples	2	done	2015-12-04 01:29:36	2015-12-04 01:29:36	e06befa5a5f5d8b18e3798ad	t	2016-02-22 09:36:46	2016-02-22 09:36:46	Submitted an iteration	\N	\N
236	35	clojure	beer-song	1	pending	2015-10-19 04:28:58	2015-10-19 04:28:58	5e11d9c17b9290bb3a26cf9b	f	2015-12-20 15:14:50	2015-12-20 15:14:50	Submitted an iteration	\N	\N
237	35	elixir	bob	1	\N	2015-09-12 05:11:45	2015-09-12 05:11:45	d6f43907e35e9fa2989ee2d3	f	2015-09-17 04:35:10	2015-09-17 04:35:10	Submitted an iteration	\N	\N
238	14	ruby	strain	2	done	2015-11-08 16:01:58	2015-11-08 16:01:58	4c6ad9fcc4d20caad5d811d9	t	2016-03-04 19:38:54	2016-03-04 19:38:54	Submitted an iteration	\N	\N
239	14	elixir	word-count	2	\N	2015-12-25 02:09:30	2015-12-25 02:09:30	efdd00bd4d632a362fa01bfe	f	2016-03-11 12:54:00	2016-03-11 12:54:00	Submitted an iteration	2016-01-24 05:43:17.265635	\N
240	14	go	difference-of-squares	1	pending	2015-12-17 17:01:34	2015-12-17 17:01:34	15c0976585b64b827f55f653	t	2016-03-11 07:49:16	2016-03-11 07:49:16	Submitted an iteration	\N	\N
241	14	go	luhn	1	pending	2015-11-08 04:23:30	2015-11-08 04:23:30	9dc3d444a164e3fb8ceec022	f	2016-03-19 19:29:43	2016-03-19 19:29:43	Submitted an iteration	\N	\N
242	14	python	word-count	1	done	2015-11-19 22:54:40	2015-11-19 22:54:40	2fdf13932045d1952df053bc	t	2016-02-11 01:57:40	2016-02-11 01:57:40	Submitted an iteration	\N	\N
243	14	ruby	hamming	1	\N	2016-02-01 04:45:57	2016-02-01 04:45:57	9a907197f5ce82fa9b43de7c	f	2016-03-08 04:24:56	2016-03-08 04:24:56	Submitted an iteration	2015-12-04 19:08:00.598821	\N
244	41	php	roman-numerals	2	\N	2016-03-17 09:55:53	2016-03-17 09:55:53	fccc509e51a648aeab6f805f	f	2016-03-22 23:46:34	2016-03-22 23:46:34	Submitted an iteration	2015-12-22 03:58:59.826369	\N
245	41	ruby	hamming	1	pending	2016-03-20 19:17:52	2016-03-20 19:17:52	3a4b86945145b84063d6a6bd	f	2016-03-26 08:50:44	2016-03-26 08:50:44	Submitted an iteration	\N	\N
246	41	ruby	raindrops	1	pending	2016-03-24 07:47:22	2016-03-24 07:47:22	5bf43253322ea2a91db1dd8f	f	2016-03-26 02:51:35	2016-03-26 02:51:35	Submitted an iteration	\N	\N
247	41	clojure	bob	1	hibernating	2016-03-24 17:43:45	2016-03-24 17:43:45	e2e88f06086d70495a7168d4	f	2016-03-26 05:45:00	2016-03-26 05:45:00	Submitted an iteration	\N	\N
248	41	python	robot-name	1	\N	2016-03-23 20:00:09	2016-03-23 20:00:09	a5e4c352f5ed61345f7d5e22	f	2016-03-26 10:45:30	2016-03-26 10:45:30	Submitted an iteration	2016-02-16 19:51:30.768402	\N
249	6	scala	nucleotide-count	1	pending	2016-02-01 03:17:28	2016-02-01 03:17:28	72d458757f9f442d92d890d5	f	2016-03-07 16:22:05	2016-03-07 16:22:05	Submitted an iteration	\N	\N
250	6	ruby	difference-of-squares	1	hibernating	2015-12-17 09:50:10	2015-12-17 09:50:10	a5ace266ad97b8717e44265a	f	2016-02-13 11:01:56	2016-02-13 11:01:56	Submitted an iteration	\N	\N
251	6	javascript	grade-school	1	pending	2015-11-13 11:43:26	2015-11-13 11:43:26	41751af5739d2155408699e2	f	2016-03-18 20:21:41	2016-03-18 20:21:41	Submitted an iteration	\N	\N
252	6	java	etl	1	pending	2015-11-22 12:06:13	2015-11-22 12:06:13	36bd547b21ee6e43ac1626a3	f	2016-03-20 05:31:47	2016-03-20 05:31:47	Submitted an iteration	\N	\N
253	6	python	gigasecond	1	pending	2016-01-29 21:31:37	2016-01-29 21:31:37	90eb0bb2415f441602a903e6	f	2016-02-07 02:47:51	2016-02-07 02:47:51	Submitted an iteration	\N	\N
254	34	haskell	grains	3	pending	2015-09-21 10:21:05	2015-09-21 10:21:05	23bb9db08b9200d6bf7e959a	f	2015-12-17 11:23:26	2015-12-17 11:23:26	Submitted an iteration	\N	\N
255	34	javascript	etl	2	pending	2015-09-21 05:24:29	2015-09-21 05:24:29	e1d7495891e202658cccea0d	f	2016-01-30 06:07:59	2016-01-30 06:07:59	Submitted an iteration	\N	\N
256	34	javascript	anagram	1	\N	2016-01-13 02:07:06	2016-01-13 02:07:06	351589f1f8a2f5856f88b409	f	2016-02-24 03:46:12	2016-02-24 03:46:12	Submitted an iteration	2016-02-07 09:15:19.556284	\N
257	34	ruby	word-count	2	done	2015-09-24 08:57:03	2015-09-24 08:57:03	cdb1eec8ca28af03fcc0118f	t	2016-03-20 09:22:05	2016-03-20 09:22:05	Submitted an iteration	\N	\N
258	34	coffeescript	nth-prime	2	done	2015-09-22 14:40:58	2015-09-22 14:40:58	1ad70d25170e92012a7e615c	t	2016-02-04 16:53:18	2016-02-04 16:53:18	Submitted an iteration	\N	\N
259	34	ruby	matrix	1	pending	2015-12-22 11:58:39	2015-12-22 11:58:39	9fce646c64fc6eb47c40bba8	f	2016-02-25 12:34:22	2016-02-25 12:34:22	Submitted an iteration	\N	\N
260	16	haskell	scrabble-score	2	hibernating	2015-12-02 15:37:23	2015-12-02 15:37:23	c8bbe2679bf6ec0c6e8f4acf	f	2016-03-26 13:22:16	2016-03-26 13:22:16	Submitted an iteration	\N	\N
261	16	ruby	roman-numerals	1	\N	2016-01-30 10:03:49	2016-01-30 10:03:49	98422e28f092a9040ce857cf	f	2016-03-12 16:25:50	2016-03-12 16:25:50	@jmodjeska commented	2015-10-26 04:23:38.835115	\N
262	16	ruby	leap	1	done	2016-02-05 09:55:50	2016-02-05 09:55:50	368e36ae30089f18f8d5cbb7	t	2016-03-03 10:02:08	2016-03-03 10:02:08	Submitted an iteration	\N	\N
263	16	python	hamming	1	\N	2015-11-16 04:12:20	2015-11-16 04:12:20	28606108af718ae4e1d1c46d	f	2015-12-14 01:30:38	2015-12-14 01:30:38	Submitted an iteration	2016-02-24 15:41:26.173657	\N
264	18	python	space-age	1	pending	2016-01-26 21:17:54	2016-01-26 21:17:54	8566d921be5a2736a01016f0	f	2016-02-29 19:46:07	2016-02-29 19:46:07	Submitted an iteration	\N	\N
265	18	ruby	leap	1	hibernating	2015-09-27 01:16:52	2015-09-27 01:16:52	53bdb05b22125edb3338c823	f	2015-10-18 09:06:17	2015-10-18 09:06:17	Submitted an iteration	\N	\N
266	18	python	hello-world	1	pending	2016-02-22 23:42:30	2016-02-22 23:42:30	cbdde4009efc7f8ea43601fa	f	2016-02-25 11:21:13	2016-02-25 11:21:13	Submitted an iteration	\N	\N
267	18	ruby	robot-name	2	hibernating	2016-01-31 02:04:59	2016-01-31 02:04:59	0a6124ee7f73650b9d3f5f7b	f	2016-03-17 03:09:12	2016-03-17 03:09:12	Submitted an iteration	\N	\N
268	18	csharp	bob	2	\N	2015-09-07 09:29:03	2015-09-07 09:29:03	807de5ae7c603d4c113448f6	f	2015-09-24 00:22:43	2015-09-24 00:22:43	Submitted an iteration	2016-01-18 19:14:24.682736	\N
269	18	ruby	kindergarten-garden	1	pending	2015-09-03 20:55:54	2015-09-03 20:55:54	09fdf1b8ee852238739c0a5f	f	2016-03-02 17:54:15	2016-03-02 17:54:15	Submitted an iteration	\N	\N
270	24	ruby	bob	1	hibernating	2015-12-12 02:00:43	2015-12-12 02:00:43	101d114136766cba3b3fc0d3	f	2016-01-08 23:48:53	2016-01-08 23:48:53	Submitted an iteration	\N	\N
271	42	python	series	2	hibernating	2015-08-30 12:34:31	2015-08-30 12:34:31	5830e659b14c58e21eab80db	f	2015-12-14 02:46:50	2015-12-14 02:46:50	Submitted an iteration	\N	\N
272	42	lua	rna-transcription	3	\N	2015-09-02 00:49:19	2015-09-02 00:49:19	92c1c542636264d700d68818	f	2015-12-19 12:59:56	2015-12-19 12:59:56	@ryanplusplus commented	2016-02-06 01:40:30.062718	\N
273	27	go	binary-search-tree	1	pending	2015-11-24 21:18:29	2015-11-24 21:18:29	452b0250a4aa1dd607fb84d8	f	2016-01-02 13:21:24	2016-01-02 13:21:24	Submitted an iteration	\N	\N
274	45	ruby	grains	1	done	2015-11-04 01:19:53	2015-11-04 01:19:53	99bb3f2d94cd79a61bd8d557	t	2016-03-19 07:51:08	2016-03-19 07:51:08	Submitted an iteration	\N	\N
275	45	python	word-count	1	done	2015-09-01 12:54:31	2015-09-01 12:54:31	7242962e9a4402ce4b43f633	t	2015-10-17 02:49:40	2015-10-17 02:49:40	Submitted an iteration	\N	\N
276	45	haskell	nucleotide-count	5	hibernating	2015-08-28 14:34:42	2015-08-28 14:34:42	24a2ade54ae595f1ccef313a	f	2016-02-04 11:08:43	2016-02-04 11:08:43	Submitted an iteration	\N	\N
277	45	python	leap	2	hibernating	2015-11-16 00:47:55	2015-11-16 00:47:55	7255f11da2903d53666bdfc6	f	2016-03-17 19:45:27	2016-03-17 19:45:27	Submitted an iteration	\N	\N
278	45	erlang	sum-of-multiples	1	pending	2015-10-02 15:09:20	2015-10-02 15:09:20	ba89970587debf8b311a4ddc	f	2016-01-21 17:25:13	2016-01-21 17:25:13	Submitted an iteration	\N	\N
279	45	python	crypto-square	2	pending	2015-09-15 17:58:54	2015-09-15 17:58:54	3ce516b2d1d76bc21dc308f9	f	2016-03-03 22:06:53	2016-03-03 22:06:53	Submitted an iteration	\N	\N
280	45	ruby	hamming	1	hibernating	2015-08-23 12:47:13	2015-08-23 12:47:13	3643a73c8df78b8e97556ae4	f	2015-10-18 08:40:06	2015-10-18 08:40:06	Submitted an iteration	\N	\N
281	45	ruby	gigasecond	1	hibernating	2016-01-11 08:47:57	2016-01-11 08:47:57	20df8ca26a5759be3ce56428	f	2016-03-14 06:10:49	2016-03-14 06:10:49	Submitted an iteration	\N	\N
282	45	ruby	bob	1	done	2015-08-25 10:15:07	2015-08-25 10:15:07	a8a291b38ef1bf9e5c3ae3e6	t	2016-01-28 20:57:48	2016-01-28 20:57:48	Submitted an iteration	\N	\N
283	45	csharp	leap	2	hibernating	2015-11-12 16:50:26	2015-11-12 16:50:26	d857814de46d699efd71e673	f	2016-02-27 15:02:46	2016-02-27 15:02:46	Submitted an iteration	\N	\N
284	45	ruby	raindrops	1	\N	2016-02-20 02:44:41	2016-02-20 02:44:41	90430b38c147b8dc3a14b8bd	f	2016-03-10 05:06:25	2016-03-10 05:06:25	Submitted an iteration	2016-01-27 13:38:34.211684	\N
285	45	python	meetup	1	pending	2015-08-21 22:49:53	2015-08-21 22:49:53	94f4b59dd7a8233911330781	f	2015-09-22 19:42:52	2015-09-22 19:42:52	Submitted an iteration	\N	\N
286	45	ruby	sum-of-multiples	1	pending	2015-09-30 02:47:26	2015-09-30 02:47:26	b8434d220d43bef3cd826b88	f	2016-02-13 15:41:09	2016-02-13 15:41:09	Submitted an iteration	\N	\N
287	45	ruby	difference-of-squares	2	pending	2015-09-09 10:59:07	2015-09-09 10:59:07	dc09d1454054d9c93c16a08d	f	2016-02-24 00:03:03	2016-02-24 00:03:03	Submitted an iteration	\N	\N
288	45	javascript	hamming	1	\N	2016-02-11 18:06:43	2016-02-11 18:06:43	3e7048393480870d4ad57ed0	f	2016-03-13 19:56:01	2016-03-13 19:56:01	Submitted an iteration	2016-03-07 03:50:40.747336	\N
289	45	scheme	grains	1	\N	2015-10-01 10:22:28	2015-10-01 10:22:28	0c1d51887664411f9004c4b8	f	2016-02-03 20:38:07	2016-02-03 20:38:07	@nebkor commented	2015-11-11 20:53:15.289957	\N
290	45	ruby	phone-number	1	pending	2015-11-21 13:10:09	2015-11-21 13:10:09	263f06b44ebea8de2b99b8ad	f	2015-11-24 04:58:30	2015-11-24 04:58:30	Submitted an iteration	\N	\N
291	45	ruby	word-count	4	done	2015-09-25 11:08:59	2015-09-25 11:08:59	a941345af3ae2bdfde74759f	t	2015-12-15 11:22:30	2015-12-15 11:22:30	Submitted an iteration	\N	\N
292	45	java	space-age	1	\N	2015-10-27 12:50:52	2015-10-27 12:50:52	2822f5c0eb98f5eea3a18e75	f	2015-12-23 01:28:56	2015-12-23 01:28:56	Submitted an iteration	2015-11-15 04:26:52.671156	\N
293	45	elixir	sublist	1	\N	2015-09-02 17:08:30	2015-09-02 17:08:30	7138421df8e1bc41904d36dd	f	2016-01-01 05:59:53	2016-01-01 05:59:53	Submitted an iteration	2015-12-27 05:34:01.928724	\N
294	45	scala	bob	1	\N	2015-08-30 14:26:35	2015-08-30 14:26:35	52e232b82b03cec0b39d3cea	f	2015-11-17 21:24:44	2015-11-17 21:24:44	@abo64 commented	2015-11-10 19:40:13.714934	\N
295	45	ruby	space-age	3	\N	2015-09-09 03:11:07	2015-09-09 03:11:07	f9391358a929588baf65b06f	f	2016-01-04 07:33:14	2016-01-04 07:33:14	@mediafinger commented	2016-01-31 06:45:52.854257	\N
296	45	go	triangle	1	pending	2015-12-30 07:07:20	2015-12-30 07:07:20	09afe4d0981b0710c6ec3d6e	f	2016-03-02 13:17:34	2016-03-02 13:17:34	Submitted an iteration	\N	\N
297	45	python	beer-song	1	pending	2015-10-09 22:30:56	2015-10-09 22:30:56	49ef50ac1509b72667721eb6	f	2015-10-22 05:11:15	2015-10-22 05:11:15	Submitted an iteration	\N	\N
298	45	scala	nucleotide-count	1	hibernating	2015-08-22 13:29:01	2015-08-22 13:29:01	ddea22df4648ad4b771c0b20	f	2016-03-12 19:53:58	2016-03-12 19:53:58	Submitted an iteration	\N	\N
299	45	python	nth-prime	1	pending	2016-01-04 14:03:24	2016-01-04 14:03:24	ea6d31a300e950b49ccd8bb1	f	2016-01-25 14:02:14	2016-01-25 14:02:14	Submitted an iteration	\N	\N
300	45	python	grade-school	1	hibernating	2015-09-12 20:56:12	2015-09-12 20:56:12	b37b40a6fca640184dee7217	f	2015-12-07 14:57:46	2015-12-07 14:57:46	Submitted an iteration	\N	\N
301	45	python	kindergarten-garden	1	\N	2015-12-19 14:39:29	2015-12-19 14:39:29	31b1f8e3ee4d4b6a72a86c05	f	2016-02-25 23:26:37	2016-02-25 23:26:37	Submitted an iteration	\N	\N
302	45	haskell	grains	1	hibernating	2015-08-28 15:52:07	2015-08-28 15:52:07	25d999b1eef0dfdb79fdc47a	f	2015-12-11 18:58:58	2015-12-11 18:58:58	Submitted an iteration	\N	\N
303	45	elixir	list-ops	1	hibernating	2015-09-17 16:40:27	2015-09-17 16:40:27	63a5821a3f9b528b99647899	f	2015-11-16 06:31:57	2015-11-16 06:31:57	Submitted an iteration	\N	\N
304	45	haskell	sum-of-multiples	2	done	2015-09-14 01:08:21	2015-09-14 01:08:21	7acf2c83fea1b30bb5736c1b	t	2016-01-02 02:00:49	2016-01-02 02:00:49	Submitted an iteration	\N	\N
305	45	scala	leap	1	pending	2015-09-02 11:22:08	2015-09-02 11:22:08	1f0e86401d4f984263b6177f	f	2015-10-18 17:46:39	2015-10-18 17:46:39	Submitted an iteration	\N	\N
306	45	python	grains	1	hibernating	2015-08-21 10:30:04	2015-08-21 10:30:04	c1bb943ec8fe3458668e0217	f	2016-02-02 21:03:43	2016-02-02 21:03:43	Submitted an iteration	\N	\N
307	45	javascript	space-age	1	\N	2015-09-06 08:16:23	2015-09-06 08:16:23	66c8f78703199a9fef80a219	f	2015-09-30 19:21:51	2015-09-30 19:21:51	Submitted an iteration	2015-12-23 13:19:53.058891	\N
308	45	clojure	meetup	1	pending	2016-02-10 00:27:52	2016-02-10 00:27:52	7177cce545e1ef0519c18b1f	f	2016-02-12 01:13:42	2016-02-12 01:13:42	Submitted an iteration	\N	\N
309	45	ruby	simple-cipher	1	\N	2015-10-14 12:52:05	2015-10-14 12:52:05	79247b9163acfbaef06641e1	f	2016-02-15 19:52:25	2016-02-15 19:52:25	@SevenPoints commented	2016-02-19 11:19:10.104714	\N
310	45	javascript	bob	1	\N	2016-01-16 00:46:16	2016-01-16 00:46:16	45dd206d38a9a265957dfbec	f	2016-03-17 22:43:59	2016-03-17 22:43:59	Submitted an iteration	\N	\N
311	45	javascript	hello-world	1	pending	2015-10-25 17:32:32	2015-10-25 17:32:32	1e49e6ec0a21cd9eb0ef3cab	f	2015-12-11 23:14:07	2015-12-11 23:14:07	Submitted an iteration	\N	\N
312	45	ruby	leap	1	hibernating	2015-11-19 03:39:34	2015-11-19 03:39:34	f1883f26b0aee07a7c8baf4d	f	2015-12-29 07:26:41	2015-12-29 07:26:41	Submitted an iteration	\N	\N
313	45	python	gigasecond	1	\N	2015-09-07 06:45:52	2015-09-07 06:45:52	8505241f1bcb382f4530b5be	t	2016-03-06 04:59:32	2016-03-06 04:59:32	Submitted an iteration	2016-02-02 21:45:08.556564	\N
314	45	go	grains	1	\N	2016-02-19 03:49:10	2016-02-19 03:49:10	782abf5d4d0f2170470df3f7	f	2016-03-06 06:25:48	2016-03-06 06:25:48	@robreiss commented	\N	\N
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 314, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, created_at, updated_at, onboarded_at, track_mentor, joined_as, api_secret, api_key, share_key) FROM stdin;
1	rikki-	rikki-@example.com	https://avatars.githubusercontent.com/u/8341419	8341419	vgo506	2015-11-28 04:09:53.984092	2015-11-28 04:09:53.984092	\N	--- []\n	\N	\N	\N	\N
6	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/allthingssmitty/128.jpg	-79536	kld491	2015-10-08 21:42:36.008048	2015-10-08 21:42:36.008048	\N	--- []\n	\N	\N	\N	\N
7	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg	-32556	jps663	2015-11-06 22:40:28.01109	2015-11-06 22:40:28.01109	\N	--- []\n	\N	\N	\N	\N
8	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kohette/128.jpg	-60665	lxl733	2015-11-28 07:27:36.016601	2015-11-28 07:27:36.016601	\N	--- []\n	\N	\N	\N	\N
10	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg	-88297	odu694	2015-12-27 01:05:55.021325	2015-12-27 01:05:55.021325	\N	--- []\n	\N	\N	\N	\N
13	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg	-85250	jiy291	2015-08-07 09:00:59.052087	2015-08-07 09:00:59.052087	\N	--- []\n	\N	\N	\N	\N
14	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg	-3274	xed479	2015-10-11 04:51:33.055319	2015-10-11 04:51:33.055319	\N	--- []\n	\N	\N	\N	\N
16	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg	-56108	rte371	2015-10-23 11:01:27.061362	2015-10-23 11:01:27.061362	\N	--- []\n	\N	\N	\N	\N
17	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg	-21780	adf506	2015-12-28 00:39:44.063974	2015-12-28 00:39:44.063974	\N	--- []\n	\N	\N	\N	\N
18	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg	-55026	lwf526	2015-07-15 23:38:07.066566	2015-07-15 23:38:07.066566	\N	--- []\n	\N	\N	\N	\N
19	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg	-51206	oqc695	2015-09-02 22:06:36.069043	2015-09-02 22:06:36.069043	\N	--- []\n	\N	\N	\N	\N
20	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg	-17129	vgk214	2015-08-31 23:53:28.081154	2015-08-31 23:53:28.081154	\N	--- []\n	\N	\N	\N	\N
21	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg	-15524	aju418	2015-10-05 04:19:43.085215	2015-10-05 04:19:43.085215	\N	--- []\n	\N	\N	\N	\N
23	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg	-88305	kfc921	2015-09-05 04:09:30.091428	2015-09-05 04:09:30.091428	\N	--- []\n	\N	\N	\N	\N
24	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg	-31883	xmx917	2015-11-11 12:27:10.094138	2015-11-11 12:27:10.094138	\N	--- []\n	\N	\N	\N	\N
25	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg	-10690	pdt714	2016-03-26 22:02:42.096705	2016-03-26 22:02:42.096705	\N	--- []\n	\N	\N	\N	\N
26	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/osvaldas/128.jpg	-92190	zdx500	2015-12-10 21:06:11.099333	2015-12-10 21:06:11.099333	\N	--- []\n	\N	\N	\N	\N
27	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/markjenkins/128.jpg	-20117	hnq893	2015-07-26 06:42:35.101852	2015-07-26 06:42:35.101852	\N	--- []\n	\N	\N	\N	\N
30	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/michaelmartinho/128.jpg	-12576	hem523	2015-09-28 14:51:01.109499	2015-09-28 14:51:01.109499	\N	--- []\n	\N	\N	\N	\N
32	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg	-98952	ksp652	2016-02-15 17:25:50.121119	2016-02-15 17:25:50.121119	\N	--- []\n	\N	\N	\N	\N
34	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg	-6343	dsc963	2015-08-04 07:27:09.126498	2015-08-04 07:27:09.126498	\N	--- []\n	\N	\N	\N	\N
35	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg	-58315	ryt970	2015-07-11 20:13:35.129123	2015-07-11 20:13:35.129123	\N	--- []\n	\N	\N	\N	\N
36	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/arnel_lenteria/128.jpg	-99255	wfu635	2015-11-06 11:32:14.131661	2015-11-06 11:32:14.131661	\N	--- []\n	\N	\N	\N	\N
37	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg	-42635	mse897	2015-07-18 06:33:56.134531	2015-07-18 06:33:56.134531	\N	--- []\n	\N	\N	\N	\N
39	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg	-31904	jgf332	2016-03-13 14:03:37.14045	2016-03-13 14:03:37.14045	\N	--- []\n	\N	\N	\N	\N
41	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg	-4172	ioi984	2016-03-16 14:51:58.146145	2016-03-16 14:51:58.146145	\N	--- []\n	\N	\N	\N	\N
42	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg	-96540	yre909	2015-08-22 14:54:35.148789	2015-08-22 14:54:35.148789	\N	--- []\n	\N	\N	\N	\N
43	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg	-58488	scj859	2016-02-11 20:33:43.151299	2016-02-11 20:33:43.151299	\N	--- []\n	\N	\N	\N	\N
45	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg	-65763	fge810	2015-08-16 07:07:57.15695	2015-08-16 07:07:57.15695	\N	--- []\n	\N	\N	\N	\N
47	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/blakesimkins/128.jpg	-82922	vxo331	2016-01-09 16:59:50.162885	2016-01-09 16:59:50.162885	\N	--- []\n	\N	\N	\N	\N
12	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thinmatt/128.jpg	-75370	nhs552	2015-12-03 01:16:39.026531	2015-12-03 01:16:39.026531	2015-12-17 03:13:39	--- []\n	\N	\N	\N	\N
5	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg	-19677	ddy688	2016-02-01 00:02:45.006162	2016-02-01 00:02:45.006162	2015-10-25 00:56:47	---\n- python\n	\N	\N	\N	\N
3	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/erikdkennedy/128.jpg	-7938	oxl313	2016-02-14 23:32:53.002061	2016-02-14 23:32:53.002061	2015-10-30 14:47:20	---\n- ruby\n- haskell\n	\N	\N	\N	\N
9	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg	-28676	pfi442	2016-03-11 22:09:21.018599	2016-03-11 22:09:21.018599	2015-10-29 23:33:19	--- []\n	\N	\N	\N	\N
11	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tomgreever/128.jpg	-67381	erm785	2015-11-20 21:19:12.023023	2015-11-20 21:19:12.023023	2015-10-26 18:01:49	--- []\n	\N	\N	\N	\N
46	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg	-89182	blh313	2015-10-23 06:16:16.15984	2015-10-23 06:16:16.15984	2015-11-19 21:59:01	--- []\n	\N	\N	\N	\N
28	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/wtrsld/128.jpg	-57822	rtf355	2016-02-26 23:36:48.104407	2016-02-26 23:36:48.104407	2015-11-15 01:10:40	--- []\n	\N	\N	\N	\N
38	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg	-70613	mcc979	2015-07-03 19:17:20.137568	2015-07-03 19:17:20.137568	2016-01-04 14:48:53	--- []\n	\N	\N	\N	\N
31	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/teclaro/128.jpg	-89762	vby772	2016-01-09 13:09:35.112143	2016-01-09 13:09:35.112143	2015-11-13 05:20:36	--- []\n	\N	\N	\N	\N
15	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg	-98112	aug949	2016-03-03 13:04:34.058382	2016-03-03 13:04:34.058382	2015-12-16 04:51:56	--- []\n	\N	\N	\N	\N
40	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg	-99947	urn338	2016-02-10 17:02:43.142312	2016-02-10 17:02:43.142312	2015-12-20 16:05:50	--- []\n	\N	\N	\N	\N
49	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg	-63603	enu724	2016-02-11 10:34:03.167657	2016-02-11 10:34:03.167657	\N	--- []\n	\N	\N	\N	\N
4	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg	-67202	ncb893	2015-12-13 01:00:17.004286	2015-12-13 01:00:17.004286	2015-12-01 20:14:11	---\n- javascript\n- erlang\n- elixir\n	\N	\N	\N	\N
29	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg	-9605	yxq118	2015-07-17 20:04:25.1069	2015-07-17 20:04:25.1069	2015-12-19 19:24:08	--- []\n	\N	\N	\N	\N
44	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/giancarlon/128.jpg	-3795	sfh608	2015-09-26 21:48:47.153759	2015-09-26 21:48:47.153759	2015-12-09 20:11:04	--- []\n	\N	\N	\N	\N
2	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/swaplord/128.jpg	-62339	rus903	2015-07-08 02:46:05.999288	2015-07-08 02:46:05.999288	2015-12-18 02:08:01	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	\N	\N	\N	\N
22	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg	-83836	vql524	2016-02-18 20:45:58.088446	2016-02-18 20:45:58.088446	2015-11-11 20:59:26	--- []\n	\N	\N	\N	\N
48	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg	-11074	bqj645	2015-07-12 03:53:25.164675	2015-07-12 03:53:25.164675	2015-11-05 12:40:32	--- []\n	\N	\N	\N	\N
33	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg	-95032	tyq196	2015-11-02 21:14:29.123963	2015-11-02 21:14:29.123963	2015-11-15 17:22:14	--- []\n	\N	\N	\N	\N
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 49, true);


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY views (id, user_id, exercise_id, last_viewed_at, created_at, updated_at) FROM stdin;
\.


--
-- Name: views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('views_id_seq', 1, false);


--
-- PostgreSQL database dump complete
--
