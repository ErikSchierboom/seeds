--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: alerts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY alerts (id, user_id, text, url, link_text, read, created_at, updated_at) FROM stdin;
1	15	jarrod would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-05-19 23:46:16	2014-05-19 23:46:16
2	16	kieran would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-07-03 21:21:54	2014-07-03 21:21:54
3	28	opal would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-06-15 09:07:36	2014-06-15 09:07:36
4	31	rachel would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-07-26 05:51:53	2014-07-26 05:51:53
5	37	ruben would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-07-26 19:53:41	2014-07-26 19:53:41
6	41	shaina would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-06-08 20:54:08	2014-06-08 20:54:08
7	42	talia would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-06-26 13:49:57	2014-06-26 13:49:57
8	46	xavier would like you to join the team baconesia. You can accept the invitation	/account	on your account page.	f	2014-06-05 18:12:42	2014-06-05 18:12:42
9	18	mack would like you to join the team chocolades. You can accept the invitation	/account	on your account page.	f	2013-12-31 05:48:57	2013-12-31 05:48:57
10	37	ruben would like you to join the team chocolades. You can accept the invitation	/account	on your account page.	f	2014-02-07 09:47:11	2014-02-07 09:47:11
11	37	ruben would like you to join the team ghost. You can accept the invitation	/account	on your account page.	f	2014-04-25 19:36:02	2014-04-25 19:36:02
12	2	bob would like you to join the team ghost. You can accept the invitation	/account	on your account page.	f	2014-05-28 10:23:37	2014-05-28 10:23:37
13	37	ruben would like you to join the team motley. You can accept the invitation	/account	on your account page.	f	2014-04-08 13:22:50	2014-04-08 13:22:50
14	11	frederique would like you to join the team motley. You can accept the invitation	/account	on your account page.	f	2014-03-20 10:16:56	2014-03-20 10:16:56
15	13	haley would like you to join the team motley. You can accept the invitation	/account	on your account page.	f	2014-04-02 21:32:43	2014-04-02 21:32:43
16	40	ryan would like you to join the team rugrats. You can accept the invitation	/account	on your account page.	f	2014-07-11 09:30:04	2014-07-11 09:30:04
17	37	ruben would like you to join the team rugrats. You can accept the invitation	/account	on your account page.	f	2014-05-31 19:32:45	2014-05-31 19:32:45
18	2	bob would like you to join the team rugrats. You can accept the invitation	/account	on your account page.	f	2014-06-07 03:03:53	2014-06-07 03:03:53
19	37	ruben would like you to join the team polkadots. You can accept the invitation	/account	on your account page.	f	2014-06-01 06:46:05	2014-06-01 06:46:05
\.


--
-- Name: alerts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('alerts_id_seq', 19, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
1	8	2	A COMMENT	\N	2014-03-04 03:06:17	2014-03-04 03:06:17
2	8	3	A COMMENT	\N	2013-12-06 01:03:58	2013-12-06 01:03:58
3	8	4	A COMMENT	\N	2014-02-27 05:59:13	2014-02-27 05:59:13
4	47	5	A COMMENT	\N	2014-07-07 09:46:41	2014-07-07 09:46:41
5	11	5	A COMMENT	\N	2014-07-08 15:08:55	2014-07-08 15:08:55
6	2	5	A COMMENT	\N	2014-07-14 09:33:16	2014-07-14 09:33:16
7	27	5	A COMMENT	\N	2014-07-27 21:13:14	2014-07-27 21:13:14
8	32	6	A COMMENT	\N	2014-07-16 02:33:23	2014-07-16 02:33:23
9	4	7	A COMMENT	\N	2014-07-04 17:32:57	2014-07-04 17:32:57
10	37	7	A COMMENT	\N	2014-07-05 02:06:39	2014-07-05 02:06:39
11	37	7	A COMMENT	\N	2014-07-06 11:54:56	2014-07-06 11:54:56
12	39	7	A COMMENT	\N	2014-07-06 17:10:52	2014-07-06 17:10:52
13	45	7	A COMMENT	\N	2014-07-08 16:38:41	2014-07-08 16:38:41
14	11	7	A COMMENT	\N	2014-07-11 09:53:28	2014-07-11 09:53:28
15	3	7	A COMMENT	\N	2014-07-14 08:03:01	2014-07-14 08:03:01
16	43	7	A COMMENT	\N	2014-07-16 19:42:17	2014-07-16 19:42:17
17	45	7	A COMMENT	\N	2014-07-16 21:34:06	2014-07-16 21:34:06
18	10	7	A COMMENT	\N	2014-07-17 06:03:34	2014-07-17 06:03:34
19	1	7	A COMMENT	\N	2014-07-19 20:13:48	2014-07-19 20:13:48
20	2	7	A COMMENT	\N	2014-07-19 20:20:28	2014-07-19 20:20:28
21	21	7	A COMMENT	\N	2014-07-21 00:03:29	2014-07-21 00:03:29
22	1	7	A COMMENT	\N	2014-07-22 15:25:49	2014-07-22 15:25:49
23	27	7	A COMMENT	\N	2014-07-22 20:21:39	2014-07-22 20:21:39
24	32	7	A COMMENT	\N	2014-07-23 17:01:59	2014-07-23 17:01:59
25	11	7	A COMMENT	\N	2014-07-26 16:34:07	2014-07-26 16:34:07
26	37	7	A COMMENT	\N	2014-07-26 20:26:44	2014-07-26 20:26:44
27	28	7	A COMMENT	\N	2014-07-27 23:14:12	2014-07-27 23:14:12
28	10	8	A COMMENT	\N	2014-07-03 06:26:52	2014-07-03 06:26:52
29	45	8	A COMMENT	\N	2014-07-06 00:13:32	2014-07-06 00:13:32
30	32	8	A COMMENT	\N	2014-07-06 18:28:56	2014-07-06 18:28:56
31	8	8	A COMMENT	\N	2014-07-12 18:47:42	2014-07-12 18:47:42
32	10	8	A COMMENT	\N	2014-07-19 01:15:37	2014-07-19 01:15:37
33	39	9	A COMMENT	\N	2014-07-10 19:36:24	2014-07-10 19:36:24
34	10	14	A COMMENT	\N	2014-06-22 17:06:33	2014-06-22 17:06:33
35	37	14	A COMMENT	\N	2014-06-22 18:46:56	2014-06-22 18:46:56
36	47	14	A COMMENT	\N	2014-06-24 23:00:22	2014-06-24 23:00:22
37	14	14	A COMMENT	\N	2014-06-25 01:57:20	2014-06-25 01:57:20
38	10	14	A COMMENT	\N	2014-06-27 15:36:17	2014-06-27 15:36:17
39	10	14	A COMMENT	\N	2014-06-29 06:29:44	2014-06-29 06:29:44
40	27	14	A COMMENT	\N	2014-07-02 03:47:53	2014-07-02 03:47:53
41	11	14	A COMMENT	\N	2014-07-02 21:47:05	2014-07-02 21:47:05
42	1	14	A COMMENT	\N	2014-07-12 20:44:40	2014-07-12 20:44:40
43	1	14	A COMMENT	\N	2014-07-13 02:38:15	2014-07-13 02:38:15
44	4	14	A COMMENT	\N	2014-07-16 21:23:56	2014-07-16 21:23:56
45	27	14	A COMMENT	\N	2014-07-17 10:21:16	2014-07-17 10:21:16
46	30	14	A COMMENT	\N	2014-07-18 08:05:44	2014-07-18 08:05:44
47	14	14	A COMMENT	\N	2014-07-18 12:08:46	2014-07-18 12:08:46
48	39	14	A COMMENT	\N	2014-07-18 14:59:44	2014-07-18 14:59:44
49	1	14	A COMMENT	\N	2014-07-22 08:03:54	2014-07-22 08:03:54
50	27	14	A COMMENT	\N	2014-07-23 01:55:31	2014-07-23 01:55:31
51	32	14	A COMMENT	\N	2014-07-24 03:46:21	2014-07-24 03:46:21
52	21	14	A COMMENT	\N	2014-07-26 02:34:29	2014-07-26 02:34:29
53	14	14	A COMMENT	\N	2014-07-28 15:02:55	2014-07-28 15:02:55
54	45	15	A COMMENT	\N	2014-06-29 12:25:28	2014-06-29 12:25:28
55	32	15	A COMMENT	\N	2014-07-01 07:37:32	2014-07-01 07:37:32
56	14	15	A COMMENT	\N	2014-07-04 19:02:50	2014-07-04 19:02:50
57	1	15	A COMMENT	\N	2014-07-12 18:05:38	2014-07-12 18:05:38
58	3	15	A COMMENT	\N	2014-07-13 00:21:36	2014-07-13 00:21:36
59	37	15	A COMMENT	\N	2014-07-16 09:53:04	2014-07-16 09:53:04
60	30	15	A COMMENT	\N	2014-07-17 08:39:48	2014-07-17 08:39:48
61	45	15	A COMMENT	\N	2014-07-19 11:37:27	2014-07-19 11:37:27
62	28	15	A COMMENT	\N	2014-07-26 15:44:21	2014-07-26 15:44:21
63	10	15	A COMMENT	\N	2014-07-26 19:25:23	2014-07-26 19:25:23
64	32	16	A COMMENT	\N	2014-07-05 15:40:24	2014-07-05 15:40:24
65	28	16	A COMMENT	\N	2014-07-12 18:24:11	2014-07-12 18:24:11
66	37	16	A COMMENT	\N	2014-07-15 13:36:12	2014-07-15 13:36:12
67	43	16	A COMMENT	\N	2014-07-21 08:57:27	2014-07-21 08:57:27
68	27	16	A COMMENT	\N	2014-07-26 03:00:28	2014-07-26 03:00:28
69	47	16	A COMMENT	\N	2014-07-26 04:54:51	2014-07-26 04:54:51
70	10	17	A COMMENT	\N	2014-07-08 02:35:57	2014-07-08 02:35:57
71	32	17	A COMMENT	\N	2014-07-14 04:05:50	2014-07-14 04:05:50
72	27	17	A COMMENT	\N	2014-07-15 04:53:58	2014-07-15 04:53:58
73	4	17	A COMMENT	\N	2014-07-16 14:27:10	2014-07-16 14:27:10
74	21	17	A COMMENT	\N	2014-07-17 14:28:06	2014-07-17 14:28:06
75	11	17	A COMMENT	\N	2014-07-18 13:40:43	2014-07-18 13:40:43
76	27	17	A COMMENT	\N	2014-07-21 12:09:04	2014-07-21 12:09:04
77	3	17	A COMMENT	\N	2014-07-27 13:45:25	2014-07-27 13:45:25
78	47	17	A COMMENT	\N	2014-07-27 20:40:17	2014-07-27 20:40:17
79	10	20	A COMMENT	\N	2014-07-19 21:42:56	2014-07-19 21:42:56
80	30	23	A COMMENT	\N	2014-06-22 08:42:59	2014-06-22 08:42:59
81	37	23	A COMMENT	\N	2014-06-24 07:19:58	2014-06-24 07:19:58
82	4	23	A COMMENT	\N	2014-06-29 21:59:37	2014-06-29 21:59:37
83	45	23	A COMMENT	\N	2014-07-02 21:52:02	2014-07-02 21:52:02
84	43	23	A COMMENT	\N	2014-07-06 14:17:19	2014-07-06 14:17:19
85	32	23	A COMMENT	\N	2014-07-08 11:14:45	2014-07-08 11:14:45
86	8	23	A COMMENT	\N	2014-07-15 15:26:30	2014-07-15 15:26:30
87	21	23	A COMMENT	\N	2014-07-27 04:24:01	2014-07-27 04:24:01
88	28	23	A COMMENT	\N	2014-07-27 20:11:25	2014-07-27 20:11:25
89	47	23	A COMMENT	\N	2014-07-28 14:57:23	2014-07-28 14:57:23
90	28	24	A COMMENT	\N	2014-06-21 21:13:09	2014-06-21 21:13:09
91	8	24	A COMMENT	\N	2014-06-26 02:04:25	2014-06-26 02:04:25
92	43	24	A COMMENT	\N	2014-06-29 10:07:41	2014-06-29 10:07:41
93	43	24	A COMMENT	\N	2014-07-03 08:46:40	2014-07-03 08:46:40
94	30	24	A COMMENT	\N	2014-07-23 05:30:09	2014-07-23 05:30:09
95	4	25	A COMMENT	\N	2014-07-18 05:44:28	2014-07-18 05:44:28
96	14	25	A COMMENT	\N	2014-07-20 14:49:34	2014-07-20 14:49:34
97	1	25	A COMMENT	\N	2014-07-24 17:56:59	2014-07-24 17:56:59
98	11	26	A COMMENT	\N	2014-07-27 14:44:44	2014-07-27 14:44:44
99	37	30	A COMMENT	\N	2014-07-16 22:10:06	2014-07-16 22:10:06
100	47	30	A COMMENT	\N	2014-07-16 23:28:00	2014-07-16 23:28:00
101	27	30	A COMMENT	\N	2014-07-17 11:31:43	2014-07-17 11:31:43
102	39	30	A COMMENT	\N	2014-07-18 04:06:16	2014-07-18 04:06:16
103	45	30	A COMMENT	\N	2014-07-19 13:12:33	2014-07-19 13:12:33
104	1	30	A COMMENT	\N	2014-07-19 23:45:55	2014-07-19 23:45:55
105	43	30	A COMMENT	\N	2014-07-20 04:25:43	2014-07-20 04:25:43
106	37	30	A COMMENT	\N	2014-07-22 11:48:18	2014-07-22 11:48:18
107	14	30	A COMMENT	\N	2014-07-22 15:18:21	2014-07-22 15:18:21
108	2	30	A COMMENT	\N	2014-07-26 02:05:58	2014-07-26 02:05:58
109	8	30	A COMMENT	\N	2014-07-26 12:37:21	2014-07-26 12:37:21
110	30	30	A COMMENT	\N	2014-07-27 01:16:12	2014-07-27 01:16:12
111	28	30	A COMMENT	\N	2014-07-27 04:11:13	2014-07-27 04:11:13
112	2	30	A COMMENT	\N	2014-07-28 06:08:14	2014-07-28 06:08:14
113	10	32	A COMMENT	\N	2014-07-24 08:57:38	2014-07-24 08:57:38
114	30	32	A COMMENT	\N	2014-07-24 14:17:27	2014-07-24 14:17:27
115	47	32	A COMMENT	\N	2014-07-24 17:23:46	2014-07-24 17:23:46
116	21	32	A COMMENT	\N	2014-07-27 18:49:30	2014-07-27 18:49:30
117	11	33	A COMMENT	\N	2014-07-24 14:44:54	2014-07-24 14:44:54
118	11	35	A COMMENT	\N	2014-07-17 15:17:34	2014-07-17 15:17:34
119	37	35	A COMMENT	\N	2014-07-17 18:01:24	2014-07-17 18:01:24
120	30	35	A COMMENT	\N	2014-07-19 12:26:39	2014-07-19 12:26:39
121	1	35	A COMMENT	\N	2014-07-20 21:51:28	2014-07-20 21:51:28
122	37	35	A COMMENT	\N	2014-07-22 03:05:29	2014-07-22 03:05:29
123	11	37	A COMMENT	\N	2014-07-12 05:33:26	2014-07-12 05:33:26
124	39	37	A COMMENT	\N	2014-07-13 14:53:40	2014-07-13 14:53:40
125	4	37	A COMMENT	\N	2014-07-19 22:36:05	2014-07-19 22:36:05
126	32	37	A COMMENT	\N	2014-07-28 12:33:46	2014-07-28 12:33:46
127	28	38	A COMMENT	\N	2014-07-19 22:06:50	2014-07-19 22:06:50
128	27	38	A COMMENT	\N	2014-07-24 12:26:24	2014-07-24 12:26:24
129	1	38	A COMMENT	\N	2014-07-25 20:10:37	2014-07-25 20:10:37
130	8	38	A COMMENT	\N	2014-07-27 16:05:22	2014-07-27 16:05:22
131	47	38	A COMMENT	\N	2014-07-28 06:28:41	2014-07-28 06:28:41
132	11	40	A COMMENT	\N	2014-07-19 19:44:25	2014-07-19 19:44:25
133	30	40	A COMMENT	\N	2014-07-24 14:42:12	2014-07-24 14:42:12
134	30	40	A COMMENT	\N	2014-07-25 14:18:07	2014-07-25 14:18:07
135	43	40	A COMMENT	\N	2014-07-27 02:28:45	2014-07-27 02:28:45
136	39	40	A COMMENT	\N	2014-07-28 09:23:41	2014-07-28 09:23:41
137	11	41	A COMMENT	\N	2014-07-12 15:20:01	2014-07-12 15:20:01
138	14	42	A COMMENT	\N	2014-04-14 19:43:40	2014-04-14 19:43:40
139	39	42	A COMMENT	\N	2014-04-15 16:46:15	2014-04-15 16:46:15
140	45	42	A COMMENT	\N	2014-04-21 22:32:39	2014-04-21 22:32:39
141	4	42	A COMMENT	\N	2014-04-27 16:41:48	2014-04-27 16:41:48
142	4	42	A COMMENT	\N	2014-05-05 03:22:19	2014-05-05 03:22:19
143	1	42	A COMMENT	\N	2014-05-08 23:34:33	2014-05-08 23:34:33
144	45	42	A COMMENT	\N	2014-05-09 23:07:02	2014-05-09 23:07:02
145	27	42	A COMMENT	\N	2014-05-10 10:17:17	2014-05-10 10:17:17
146	27	42	A COMMENT	\N	2014-05-15 01:18:29	2014-05-15 01:18:29
147	32	42	A COMMENT	\N	2014-05-23 08:43:10	2014-05-23 08:43:10
148	43	42	A COMMENT	\N	2014-05-26 00:04:31	2014-05-26 00:04:31
149	11	42	A COMMENT	\N	2014-06-14 20:13:42	2014-06-14 20:13:42
150	14	42	A COMMENT	\N	2014-06-18 23:02:41	2014-06-18 23:02:41
151	2	42	A COMMENT	\N	2014-06-19 09:19:16	2014-06-19 09:19:16
152	43	42	A COMMENT	\N	2014-06-23 19:34:46	2014-06-23 19:34:46
153	27	42	A COMMENT	\N	2014-06-25 04:29:06	2014-06-25 04:29:06
154	39	42	A COMMENT	\N	2014-06-25 07:45:44	2014-06-25 07:45:44
155	3	42	A COMMENT	\N	2014-07-16 04:13:21	2014-07-16 04:13:21
156	28	42	A COMMENT	\N	2014-07-22 07:17:14	2014-07-22 07:17:14
157	45	42	A COMMENT	\N	2014-07-24 12:32:18	2014-07-24 12:32:18
158	39	42	A COMMENT	\N	2014-07-28 18:42:30	2014-07-28 18:42:30
159	14	43	A COMMENT	\N	2014-05-15 05:58:24	2014-05-15 05:58:24
160	37	43	A COMMENT	\N	2014-05-19 23:23:01	2014-05-19 23:23:01
161	8	43	A COMMENT	\N	2014-05-29 19:00:28	2014-05-29 19:00:28
162	39	43	A COMMENT	\N	2014-06-24 08:30:21	2014-06-24 08:30:21
163	28	43	A COMMENT	\N	2014-06-28 01:09:04	2014-06-28 01:09:04
164	30	43	A COMMENT	\N	2014-07-05 06:21:38	2014-07-05 06:21:38
165	14	43	A COMMENT	\N	2014-07-05 13:45:56	2014-07-05 13:45:56
166	45	43	A COMMENT	\N	2014-07-11 03:48:08	2014-07-11 03:48:08
167	45	43	A COMMENT	\N	2014-07-20 07:33:01	2014-07-20 07:33:01
168	32	43	A COMMENT	\N	2014-07-28 03:49:28	2014-07-28 03:49:28
169	21	45	A COMMENT	\N	2014-03-27 08:50:27	2014-03-27 08:50:27
170	39	45	A COMMENT	\N	2014-04-26 19:11:50	2014-04-26 19:11:50
171	37	45	A COMMENT	\N	2014-05-15 16:47:11	2014-05-15 16:47:11
172	14	45	A COMMENT	\N	2014-06-06 05:37:03	2014-06-06 05:37:03
173	11	45	A COMMENT	\N	2014-06-14 06:03:01	2014-06-14 06:03:01
174	21	46	A COMMENT	\N	2014-03-31 07:56:56	2014-03-31 07:56:56
175	21	47	A COMMENT	\N	2014-04-04 20:20:33	2014-04-04 20:20:33
176	3	47	A COMMENT	\N	2014-05-20 19:29:53	2014-05-20 19:29:53
177	47	47	A COMMENT	\N	2014-05-25 15:46:19	2014-05-25 15:46:19
178	37	47	A COMMENT	\N	2014-06-03 16:38:20	2014-06-03 16:38:20
179	45	47	A COMMENT	\N	2014-06-28 19:45:31	2014-06-28 19:45:31
180	21	47	A COMMENT	\N	2014-07-07 03:47:01	2014-07-07 03:47:01
181	8	47	A COMMENT	\N	2014-07-09 23:06:48	2014-07-09 23:06:48
182	30	47	A COMMENT	\N	2014-07-11 23:27:34	2014-07-11 23:27:34
183	45	47	A COMMENT	\N	2014-07-14 17:43:28	2014-07-14 17:43:28
184	2	47	A COMMENT	\N	2014-07-20 04:47:28	2014-07-20 04:47:28
185	27	47	A COMMENT	\N	2014-07-23 11:15:12	2014-07-23 11:15:12
186	21	48	A COMMENT	\N	2014-05-05 21:12:14	2014-05-05 21:12:14
187	14	48	A COMMENT	\N	2014-05-19 00:52:29	2014-05-19 00:52:29
188	8	48	A COMMENT	\N	2014-06-07 06:46:25	2014-06-07 06:46:25
189	21	49	A COMMENT	\N	2014-05-26 01:59:42	2014-05-26 01:59:42
190	47	49	A COMMENT	\N	2014-06-01 10:27:17	2014-06-01 10:27:17
191	2	49	A COMMENT	\N	2014-06-11 08:30:50	2014-06-11 08:30:50
192	3	49	A COMMENT	\N	2014-06-16 12:49:09	2014-06-16 12:49:09
193	45	49	A COMMENT	\N	2014-06-20 12:02:02	2014-06-20 12:02:02
194	21	49	A COMMENT	\N	2014-06-21 10:38:22	2014-06-21 10:38:22
195	32	49	A COMMENT	\N	2014-07-05 18:35:54	2014-07-05 18:35:54
196	37	49	A COMMENT	\N	2014-07-08 11:32:06	2014-07-08 11:32:06
197	47	49	A COMMENT	\N	2014-07-11 15:49:03	2014-07-11 15:49:03
198	45	49	A COMMENT	\N	2014-07-16 20:57:52	2014-07-16 20:57:52
199	8	49	A COMMENT	\N	2014-07-17 07:21:05	2014-07-17 07:21:05
200	3	49	A COMMENT	\N	2014-07-22 22:06:03	2014-07-22 22:06:03
201	2	49	A COMMENT	\N	2014-07-23 07:03:24	2014-07-23 07:03:24
202	30	51	A COMMENT	\N	2014-06-29 16:49:05	2014-06-29 16:49:05
203	2	51	A COMMENT	\N	2014-06-30 08:28:50	2014-06-30 08:28:50
204	10	51	A COMMENT	\N	2014-07-13 10:56:05	2014-07-13 10:56:05
205	1	51	A COMMENT	\N	2014-07-14 18:09:59	2014-07-14 18:09:59
206	14	51	A COMMENT	\N	2014-07-18 02:14:43	2014-07-18 02:14:43
207	39	51	A COMMENT	\N	2014-07-21 17:44:02	2014-07-21 17:44:02
208	47	52	A COMMENT	\N	2014-07-11 05:15:33	2014-07-11 05:15:33
209	27	52	A COMMENT	\N	2014-07-11 08:24:13	2014-07-11 08:24:13
210	47	52	A COMMENT	\N	2014-07-21 14:00:40	2014-07-21 14:00:40
211	27	53	A COMMENT	\N	2014-02-25 13:25:19	2014-02-25 13:25:19
212	37	53	A COMMENT	\N	2014-06-02 08:00:32	2014-06-02 08:00:32
213	47	53	A COMMENT	\N	2014-06-16 06:05:28	2014-06-16 06:05:28
214	32	53	A COMMENT	\N	2014-07-01 14:28:30	2014-07-01 14:28:30
215	3	55	A COMMENT	\N	2014-03-24 19:53:29	2014-03-24 19:53:29
216	3	55	A COMMENT	\N	2014-04-23 03:21:20	2014-04-23 03:21:20
217	43	55	A COMMENT	\N	2014-05-15 15:01:13	2014-05-15 15:01:13
218	11	55	A COMMENT	\N	2014-06-30 16:26:38	2014-06-30 16:26:38
219	27	56	A COMMENT	\N	2014-05-30 23:52:15	2014-05-30 23:52:15
220	27	57	A COMMENT	\N	2014-07-14 03:39:30	2014-07-14 03:39:30
221	11	57	A COMMENT	\N	2014-07-15 00:24:03	2014-07-15 00:24:03
222	14	57	A COMMENT	\N	2014-07-21 11:19:40	2014-07-21 11:19:40
223	11	57	A COMMENT	\N	2014-07-22 05:34:12	2014-07-22 05:34:12
224	30	57	A COMMENT	\N	2014-07-24 18:15:21	2014-07-24 18:15:21
225	1	58	A COMMENT	\N	2014-07-23 02:55:07	2014-07-23 02:55:07
226	3	59	A COMMENT	\N	2014-07-19 12:40:26	2014-07-19 12:40:26
227	2	59	A COMMENT	\N	2014-07-21 11:03:13	2014-07-21 11:03:13
228	45	59	A COMMENT	\N	2014-07-24 07:22:27	2014-07-24 07:22:27
229	32	59	A COMMENT	\N	2014-07-24 21:00:53	2014-07-24 21:00:53
230	2	59	A COMMENT	\N	2014-07-28 16:45:26	2014-07-28 16:45:26
231	10	60	A COMMENT	\N	2014-07-11 05:45:57	2014-07-11 05:45:57
232	8	60	A COMMENT	\N	2014-07-13 10:45:21	2014-07-13 10:45:21
233	45	60	A COMMENT	\N	2014-07-13 16:51:17	2014-07-13 16:51:17
234	8	60	A COMMENT	\N	2014-07-14 08:58:04	2014-07-14 08:58:04
235	39	60	A COMMENT	\N	2014-07-15 01:46:16	2014-07-15 01:46:16
236	39	60	A COMMENT	\N	2014-07-16 02:56:11	2014-07-16 02:56:11
237	2	60	A COMMENT	\N	2014-07-17 15:03:39	2014-07-17 15:03:39
238	27	60	A COMMENT	\N	2014-07-20 04:58:51	2014-07-20 04:58:51
239	3	60	A COMMENT	\N	2014-07-20 11:15:00	2014-07-20 11:15:00
240	10	60	A COMMENT	\N	2014-07-28 09:29:27	2014-07-28 09:29:27
241	28	61	A COMMENT	\N	2014-07-25 04:15:38	2014-07-25 04:15:38
242	30	61	A COMMENT	\N	2014-07-25 05:03:24	2014-07-25 05:03:24
243	30	61	A COMMENT	\N	2014-07-25 05:42:58	2014-07-25 05:42:58
244	11	61	A COMMENT	\N	2014-07-25 07:09:15	2014-07-25 07:09:15
245	1	61	A COMMENT	\N	2014-07-25 23:20:47	2014-07-25 23:20:47
246	32	61	A COMMENT	\N	2014-07-26 08:25:19	2014-07-26 08:25:19
247	4	61	A COMMENT	\N	2014-07-26 21:32:13	2014-07-26 21:32:13
248	10	61	A COMMENT	\N	2014-07-27 04:04:01	2014-07-27 04:04:01
249	4	61	A COMMENT	\N	2014-07-27 09:26:34	2014-07-27 09:26:34
250	47	61	A COMMENT	\N	2014-07-27 15:40:24	2014-07-27 15:40:24
251	21	61	A COMMENT	\N	2014-07-27 16:51:56	2014-07-27 16:51:56
252	32	61	A COMMENT	\N	2014-07-27 21:14:46	2014-07-27 21:14:46
253	2	61	A COMMENT	\N	2014-07-28 01:51:36	2014-07-28 01:51:36
254	37	61	A COMMENT	\N	2014-07-28 02:28:22	2014-07-28 02:28:22
255	47	61	A COMMENT	\N	2014-07-28 06:01:28	2014-07-28 06:01:28
256	2	61	A COMMENT	\N	2014-07-28 07:13:46	2014-07-28 07:13:46
257	11	61	A COMMENT	\N	2014-07-28 16:26:46	2014-07-28 16:26:46
258	28	63	A COMMENT	\N	2014-07-08 20:16:10	2014-07-08 20:16:10
259	4	63	A COMMENT	\N	2014-07-10 13:47:40	2014-07-10 13:47:40
260	8	63	A COMMENT	\N	2014-07-10 15:02:41	2014-07-10 15:02:41
261	30	63	A COMMENT	\N	2014-07-13 12:53:39	2014-07-13 12:53:39
262	39	63	A COMMENT	\N	2014-07-14 11:19:59	2014-07-14 11:19:59
263	1	63	A COMMENT	\N	2014-07-18 17:47:42	2014-07-18 17:47:42
264	27	63	A COMMENT	\N	2014-07-18 21:01:59	2014-07-18 21:01:59
265	32	63	A COMMENT	\N	2014-07-19 20:33:28	2014-07-19 20:33:28
266	39	63	A COMMENT	\N	2014-07-19 21:21:49	2014-07-19 21:21:49
267	3	63	A COMMENT	\N	2014-07-20 19:51:59	2014-07-20 19:51:59
268	14	63	A COMMENT	\N	2014-07-21 12:40:34	2014-07-21 12:40:34
269	8	63	A COMMENT	\N	2014-07-24 03:06:37	2014-07-24 03:06:37
270	47	63	A COMMENT	\N	2014-07-24 20:40:32	2014-07-24 20:40:32
271	28	63	A COMMENT	\N	2014-07-25 06:31:44	2014-07-25 06:31:44
272	45	63	A COMMENT	\N	2014-07-25 16:21:54	2014-07-25 16:21:54
273	10	63	A COMMENT	\N	2014-07-26 17:13:20	2014-07-26 17:13:20
274	30	63	A COMMENT	\N	2014-07-27 10:02:27	2014-07-27 10:02:27
275	4	63	A COMMENT	\N	2014-07-27 17:55:12	2014-07-27 17:55:12
276	28	65	A COMMENT	\N	2014-07-15 19:15:32	2014-07-15 19:15:32
277	1	67	A COMMENT	\N	2014-07-22 14:25:49	2014-07-22 14:25:49
278	37	68	A COMMENT	\N	2014-07-24 15:45:30	2014-07-24 15:45:30
279	47	68	A COMMENT	\N	2014-07-25 22:14:14	2014-07-25 22:14:14
280	37	68	A COMMENT	\N	2014-07-26 14:17:39	2014-07-26 14:17:39
281	11	68	A COMMENT	\N	2014-07-26 23:41:59	2014-07-26 23:41:59
282	32	68	A COMMENT	\N	2014-07-27 01:45:31	2014-07-27 01:45:31
283	3	68	A COMMENT	\N	2014-07-27 02:01:53	2014-07-27 02:01:53
284	32	68	A COMMENT	\N	2014-07-27 21:16:49	2014-07-27 21:16:49
285	21	68	A COMMENT	\N	2014-07-28 02:19:39	2014-07-28 02:19:39
286	45	69	A COMMENT	\N	2014-07-26 00:09:57	2014-07-26 00:09:57
287	4	69	A COMMENT	\N	2014-07-26 02:05:04	2014-07-26 02:05:04
288	8	69	A COMMENT	\N	2014-07-26 08:21:51	2014-07-26 08:21:51
289	14	69	A COMMENT	\N	2014-07-26 21:25:03	2014-07-26 21:25:03
290	39	69	A COMMENT	\N	2014-07-27 00:44:43	2014-07-27 00:44:43
291	47	69	A COMMENT	\N	2014-07-27 12:58:28	2014-07-27 12:58:28
292	8	69	A COMMENT	\N	2014-07-27 19:56:42	2014-07-27 19:56:42
293	1	69	A COMMENT	\N	2014-07-28 04:09:21	2014-07-28 04:09:21
294	1	70	A COMMENT	\N	2014-04-26 23:56:05	2014-04-26 23:56:05
295	47	70	A COMMENT	\N	2014-04-29 01:12:24	2014-04-29 01:12:24
296	2	70	A COMMENT	\N	2014-05-13 07:57:40	2014-05-13 07:57:40
297	8	70	A COMMENT	\N	2014-05-27 16:12:05	2014-05-27 16:12:05
298	11	70	A COMMENT	\N	2014-06-11 01:44:03	2014-06-11 01:44:03
299	32	70	A COMMENT	\N	2014-06-11 23:44:34	2014-06-11 23:44:34
300	39	70	A COMMENT	\N	2014-06-12 03:44:57	2014-06-12 03:44:57
301	32	70	A COMMENT	\N	2014-06-25 12:20:00	2014-06-25 12:20:00
302	30	70	A COMMENT	\N	2014-06-28 11:12:42	2014-06-28 11:12:42
303	43	70	A COMMENT	\N	2014-07-04 12:56:22	2014-07-04 12:56:22
304	1	70	A COMMENT	\N	2014-07-08 14:23:26	2014-07-08 14:23:26
305	21	70	A COMMENT	\N	2014-07-13 05:47:07	2014-07-13 05:47:07
306	30	71	A COMMENT	\N	2014-05-31 13:09:50	2014-05-31 13:09:50
307	43	72	A COMMENT	\N	2014-06-06 10:39:50	2014-06-06 10:39:50
308	21	72	A COMMENT	\N	2014-06-09 14:25:37	2014-06-09 14:25:37
309	27	72	A COMMENT	\N	2014-06-13 14:29:03	2014-06-13 14:29:03
310	14	72	A COMMENT	\N	2014-07-02 06:11:40	2014-07-02 06:11:40
311	10	72	A COMMENT	\N	2014-07-10 21:48:50	2014-07-10 21:48:50
312	28	72	A COMMENT	\N	2014-07-12 17:50:00	2014-07-12 17:50:00
313	37	72	A COMMENT	\N	2014-07-14 15:40:11	2014-07-14 15:40:11
314	30	72	A COMMENT	\N	2014-07-16 01:40:26	2014-07-16 01:40:26
315	43	72	A COMMENT	\N	2014-07-23 04:42:28	2014-07-23 04:42:28
316	14	72	A COMMENT	\N	2014-07-23 19:35:49	2014-07-23 19:35:49
317	30	73	A COMMENT	\N	2014-07-11 07:22:43	2014-07-11 07:22:43
318	27	74	A COMMENT	\N	2014-06-12 17:09:39	2014-06-12 17:09:39
319	47	74	A COMMENT	\N	2014-06-16 01:27:56	2014-06-16 01:27:56
320	2	74	A COMMENT	\N	2014-06-27 18:47:34	2014-06-27 18:47:34
321	21	74	A COMMENT	\N	2014-07-08 16:20:18	2014-07-08 16:20:18
322	14	74	A COMMENT	\N	2014-07-19 13:58:50	2014-07-19 13:58:50
323	4	75	A COMMENT	\N	2014-07-26 00:58:03	2014-07-26 00:58:03
324	30	78	A COMMENT	\N	2014-05-26 11:38:57	2014-05-26 11:38:57
325	30	79	A COMMENT	\N	2014-04-12 18:06:30	2014-04-12 18:06:30
326	39	79	A COMMENT	\N	2014-04-20 12:22:44	2014-04-20 12:22:44
327	11	79	A COMMENT	\N	2014-04-24 13:46:39	2014-04-24 13:46:39
328	2	79	A COMMENT	\N	2014-06-18 10:06:01	2014-06-18 10:06:01
329	30	79	A COMMENT	\N	2014-06-21 12:10:02	2014-06-21 12:10:02
330	39	80	A COMMENT	\N	2014-04-07 10:15:32	2014-04-07 10:15:32
331	27	80	A COMMENT	\N	2014-07-05 01:16:55	2014-07-05 01:16:55
332	14	80	A COMMENT	\N	2014-07-10 02:48:55	2014-07-10 02:48:55
333	10	81	A COMMENT	\N	2014-05-29 09:31:07	2014-05-29 09:31:07
334	4	81	A COMMENT	\N	2014-06-16 04:37:58	2014-06-16 04:37:58
335	2	82	A COMMENT	\N	2014-04-28 13:45:19	2014-04-28 13:45:19
336	11	82	A COMMENT	\N	2014-05-26 13:54:19	2014-05-26 13:54:19
337	30	82	A COMMENT	\N	2014-06-19 20:03:16	2014-06-19 20:03:16
338	10	82	A COMMENT	\N	2014-07-05 12:46:16	2014-07-05 12:46:16
339	4	82	A COMMENT	\N	2014-07-26 11:15:34	2014-07-26 11:15:34
340	47	83	A COMMENT	\N	2014-04-13 13:28:36	2014-04-13 13:28:36
341	32	83	A COMMENT	\N	2014-04-20 04:05:53	2014-04-20 04:05:53
342	27	83	A COMMENT	\N	2014-04-24 05:59:28	2014-04-24 05:59:28
343	8	83	A COMMENT	\N	2014-05-12 03:30:38	2014-05-12 03:30:38
344	1	83	A COMMENT	\N	2014-06-07 00:42:43	2014-06-07 00:42:43
345	21	83	A COMMENT	\N	2014-06-16 05:14:47	2014-06-16 05:14:47
346	32	83	A COMMENT	\N	2014-06-24 17:34:19	2014-06-24 17:34:19
347	2	83	A COMMENT	\N	2014-06-24 21:32:03	2014-06-24 21:32:03
348	3	83	A COMMENT	\N	2014-07-07 21:29:11	2014-07-07 21:29:11
349	39	83	A COMMENT	\N	2014-07-19 11:22:06	2014-07-19 11:22:06
350	30	84	A COMMENT	\N	2014-04-26 01:28:02	2014-04-26 01:28:02
351	1	84	A COMMENT	\N	2014-05-01 15:19:21	2014-05-01 15:19:21
352	30	84	A COMMENT	\N	2014-05-03 03:43:33	2014-05-03 03:43:33
353	27	84	A COMMENT	\N	2014-05-05 03:54:26	2014-05-05 03:54:26
354	10	84	A COMMENT	\N	2014-05-06 09:54:55	2014-05-06 09:54:55
355	2	84	A COMMENT	\N	2014-05-12 14:44:07	2014-05-12 14:44:07
356	27	84	A COMMENT	\N	2014-05-25 01:28:42	2014-05-25 01:28:42
357	1	84	A COMMENT	\N	2014-05-28 13:37:54	2014-05-28 13:37:54
358	4	84	A COMMENT	\N	2014-06-01 23:43:05	2014-06-01 23:43:05
359	2	84	A COMMENT	\N	2014-06-11 11:47:59	2014-06-11 11:47:59
360	10	84	A COMMENT	\N	2014-06-13 04:44:41	2014-06-13 04:44:41
361	39	84	A COMMENT	\N	2014-06-13 18:02:54	2014-06-13 18:02:54
362	39	84	A COMMENT	\N	2014-07-02 01:23:49	2014-07-02 01:23:49
363	11	84	A COMMENT	\N	2014-07-12 12:41:17	2014-07-12 12:41:17
364	8	84	A COMMENT	\N	2014-07-25 13:09:54	2014-07-25 13:09:54
365	30	85	A COMMENT	\N	2014-05-11 07:06:33	2014-05-11 07:06:33
366	21	85	A COMMENT	\N	2014-05-28 08:04:33	2014-05-28 08:04:33
367	21	86	A COMMENT	\N	2014-05-28 00:52:01	2014-05-28 00:52:01
368	8	86	A COMMENT	\N	2014-06-05 09:20:09	2014-06-05 09:20:09
369	4	86	A COMMENT	\N	2014-06-08 12:45:02	2014-06-08 12:45:02
370	43	86	A COMMENT	\N	2014-06-12 21:08:37	2014-06-12 21:08:37
371	37	86	A COMMENT	\N	2014-07-17 11:42:54	2014-07-17 11:42:54
372	14	87	A COMMENT	\N	2014-06-22 23:26:06	2014-06-22 23:26:06
373	1	87	A COMMENT	\N	2014-06-24 05:57:03	2014-06-24 05:57:03
374	2	87	A COMMENT	\N	2014-06-24 10:01:07	2014-06-24 10:01:07
375	27	87	A COMMENT	\N	2014-07-13 20:04:11	2014-07-13 20:04:11
376	14	87	A COMMENT	\N	2014-07-14 06:47:40	2014-07-14 06:47:40
377	37	87	A COMMENT	\N	2014-07-18 10:17:19	2014-07-18 10:17:19
378	39	87	A COMMENT	\N	2014-07-22 18:51:00	2014-07-22 18:51:00
379	30	88	A COMMENT	\N	2014-07-06 04:55:53	2014-07-06 04:55:53
380	8	88	A COMMENT	\N	2014-07-07 22:16:51	2014-07-07 22:16:51
381	37	88	A COMMENT	\N	2014-07-08 06:13:02	2014-07-08 06:13:02
382	37	88	A COMMENT	\N	2014-07-19 19:48:26	2014-07-19 19:48:26
383	14	88	A COMMENT	\N	2014-07-20 07:08:09	2014-07-20 07:08:09
384	45	88	A COMMENT	\N	2014-07-22 23:58:41	2014-07-22 23:58:41
385	39	88	A COMMENT	\N	2014-07-26 00:15:17	2014-07-26 00:15:17
386	45	88	A COMMENT	\N	2014-07-26 09:18:33	2014-07-26 09:18:33
387	28	88	A COMMENT	\N	2014-07-27 10:48:07	2014-07-27 10:48:07
388	39	88	A COMMENT	\N	2014-07-28 11:49:31	2014-07-28 11:49:31
389	14	89	A COMMENT	\N	2014-07-12 23:30:23	2014-07-12 23:30:23
390	32	89	A COMMENT	\N	2014-07-13 15:31:45	2014-07-13 15:31:45
391	14	89	A COMMENT	\N	2014-07-16 04:04:03	2014-07-16 04:04:03
392	1	89	A COMMENT	\N	2014-07-17 06:55:03	2014-07-17 06:55:03
393	21	89	A COMMENT	\N	2014-07-22 11:44:49	2014-07-22 11:44:49
394	10	89	A COMMENT	\N	2014-07-24 14:13:46	2014-07-24 14:13:46
395	3	89	A COMMENT	\N	2014-07-27 23:39:17	2014-07-27 23:39:17
396	28	89	A COMMENT	\N	2014-07-28 04:09:50	2014-07-28 04:09:50
397	11	90	A COMMENT	\N	2014-05-05 21:26:18	2014-05-05 21:26:18
398	2	90	A COMMENT	\N	2014-05-12 17:16:17	2014-05-12 17:16:17
399	30	90	A COMMENT	\N	2014-05-13 23:23:06	2014-05-13 23:23:06
400	30	90	A COMMENT	\N	2014-06-18 12:48:15	2014-06-18 12:48:15
401	1	90	A COMMENT	\N	2014-06-20 11:50:04	2014-06-20 11:50:04
402	28	90	A COMMENT	\N	2014-06-26 18:52:43	2014-06-26 18:52:43
403	21	90	A COMMENT	\N	2014-07-01 04:14:28	2014-07-01 04:14:28
404	14	90	A COMMENT	\N	2014-07-08 13:44:38	2014-07-08 13:44:38
405	45	90	A COMMENT	\N	2014-07-09 18:01:01	2014-07-09 18:01:01
406	27	90	A COMMENT	\N	2014-07-19 04:42:44	2014-07-19 04:42:44
407	30	91	A COMMENT	\N	2014-04-14 23:00:50	2014-04-14 23:00:50
408	28	92	A COMMENT	\N	2014-05-12 01:11:28	2014-05-12 01:11:28
409	39	92	A COMMENT	\N	2014-05-21 06:15:10	2014-05-21 06:15:10
410	10	92	A COMMENT	\N	2014-06-08 23:57:31	2014-06-08 23:57:31
411	45	92	A COMMENT	\N	2014-06-09 10:38:59	2014-06-09 10:38:59
412	1	92	A COMMENT	\N	2014-06-13 17:36:10	2014-06-13 17:36:10
413	8	92	A COMMENT	\N	2014-06-19 11:32:05	2014-06-19 11:32:05
414	21	92	A COMMENT	\N	2014-06-19 20:05:47	2014-06-19 20:05:47
415	30	92	A COMMENT	\N	2014-06-20 02:03:36	2014-06-20 02:03:36
416	10	92	A COMMENT	\N	2014-06-20 19:48:19	2014-06-20 19:48:19
417	21	92	A COMMENT	\N	2014-07-03 10:13:11	2014-07-03 10:13:11
418	4	92	A COMMENT	\N	2014-07-05 03:08:48	2014-07-05 03:08:48
419	32	92	A COMMENT	\N	2014-07-10 00:34:25	2014-07-10 00:34:25
420	32	92	A COMMENT	\N	2014-07-14 09:27:03	2014-07-14 09:27:03
421	10	92	A COMMENT	\N	2014-07-14 19:27:23	2014-07-14 19:27:23
422	27	92	A COMMENT	\N	2014-07-28 05:51:44	2014-07-28 05:51:44
423	39	92	A COMMENT	\N	2014-07-28 13:02:24	2014-07-28 13:02:24
424	30	93	A COMMENT	\N	2014-03-28 00:12:27	2014-03-28 00:12:27
425	2	93	A COMMENT	\N	2014-04-06 11:38:32	2014-04-06 11:38:32
426	8	93	A COMMENT	\N	2014-05-15 08:32:46	2014-05-15 08:32:46
427	30	94	A COMMENT	\N	2014-04-02 07:14:18	2014-04-02 07:14:18
428	14	95	A COMMENT	\N	2014-05-24 15:43:26	2014-05-24 15:43:26
429	27	95	A COMMENT	\N	2014-05-27 02:20:07	2014-05-27 02:20:07
430	43	95	A COMMENT	\N	2014-06-03 05:04:10	2014-06-03 05:04:10
431	21	95	A COMMENT	\N	2014-06-04 03:15:18	2014-06-04 03:15:18
432	2	95	A COMMENT	\N	2014-06-07 02:19:19	2014-06-07 02:19:19
433	45	95	A COMMENT	\N	2014-06-17 23:12:58	2014-06-17 23:12:58
434	21	95	A COMMENT	\N	2014-06-19 10:40:38	2014-06-19 10:40:38
435	27	95	A COMMENT	\N	2014-07-02 12:46:56	2014-07-02 12:46:56
436	3	95	A COMMENT	\N	2014-07-08 12:25:13	2014-07-08 12:25:13
437	30	97	A COMMENT	\N	2014-05-11 09:22:27	2014-05-11 09:22:27
438	21	99	A COMMENT	\N	2014-04-30 00:05:15	2014-04-30 00:05:15
439	43	99	A COMMENT	\N	2014-05-22 19:16:49	2014-05-22 19:16:49
440	11	99	A COMMENT	\N	2014-05-29 10:21:02	2014-05-29 10:21:02
441	10	99	A COMMENT	\N	2014-06-01 04:40:55	2014-06-01 04:40:55
442	11	99	A COMMENT	\N	2014-06-21 23:41:11	2014-06-21 23:41:11
443	39	99	A COMMENT	\N	2014-06-27 16:15:39	2014-06-27 16:15:39
444	39	99	A COMMENT	\N	2014-07-12 15:51:01	2014-07-12 15:51:01
445	28	101	A COMMENT	\N	2014-03-26 12:58:15	2014-03-26 12:58:15
446	47	101	A COMMENT	\N	2014-04-17 14:43:56	2014-04-17 14:43:56
447	27	101	A COMMENT	\N	2014-04-19 01:25:05	2014-04-19 01:25:05
448	39	101	A COMMENT	\N	2014-05-23 05:25:34	2014-05-23 05:25:34
449	8	101	A COMMENT	\N	2014-06-11 10:42:54	2014-06-11 10:42:54
450	10	101	A COMMENT	\N	2014-06-13 03:45:33	2014-06-13 03:45:33
451	27	101	A COMMENT	\N	2014-06-18 07:51:28	2014-06-18 07:51:28
452	10	101	A COMMENT	\N	2014-06-18 13:32:17	2014-06-18 13:32:17
453	4	101	A COMMENT	\N	2014-06-19 07:50:31	2014-06-19 07:50:31
454	30	101	A COMMENT	\N	2014-07-15 08:16:43	2014-07-15 08:16:43
455	39	102	A COMMENT	\N	2014-05-18 22:42:39	2014-05-18 22:42:39
456	27	102	A COMMENT	\N	2014-05-22 16:52:35	2014-05-22 16:52:35
457	10	102	A COMMENT	\N	2014-06-05 08:18:08	2014-06-05 08:18:08
458	28	102	A COMMENT	\N	2014-07-22 21:58:49	2014-07-22 21:58:49
459	37	102	A COMMENT	\N	2014-07-24 03:25:28	2014-07-24 03:25:28
460	14	103	A COMMENT	\N	2014-06-02 09:38:18	2014-06-02 09:38:18
461	37	103	A COMMENT	\N	2014-06-05 09:29:21	2014-06-05 09:29:21
462	3	103	A COMMENT	\N	2014-06-05 17:05:15	2014-06-05 17:05:15
463	10	103	A COMMENT	\N	2014-06-07 05:15:38	2014-06-07 05:15:38
464	45	103	A COMMENT	\N	2014-06-10 20:59:30	2014-06-10 20:59:30
465	45	103	A COMMENT	\N	2014-06-17 16:42:48	2014-06-17 16:42:48
466	21	103	A COMMENT	\N	2014-06-18 16:25:37	2014-06-18 16:25:37
467	11	103	A COMMENT	\N	2014-06-20 03:54:48	2014-06-20 03:54:48
468	39	103	A COMMENT	\N	2014-06-22 06:03:31	2014-06-22 06:03:31
469	2	103	A COMMENT	\N	2014-06-26 05:38:21	2014-06-26 05:38:21
470	28	103	A COMMENT	\N	2014-07-01 12:12:55	2014-07-01 12:12:55
471	28	103	A COMMENT	\N	2014-07-25 07:49:24	2014-07-25 07:49:24
472	1	103	A COMMENT	\N	2014-07-26 10:50:50	2014-07-26 10:50:50
473	4	103	A COMMENT	\N	2014-07-28 03:19:09	2014-07-28 03:19:09
474	47	104	A COMMENT	\N	2014-06-27 01:05:49	2014-06-27 01:05:49
475	11	104	A COMMENT	\N	2014-06-27 06:56:26	2014-06-27 06:56:26
476	2	104	A COMMENT	\N	2014-06-30 05:04:04	2014-06-30 05:04:04
477	47	104	A COMMENT	\N	2014-07-03 00:51:12	2014-07-03 00:51:12
478	10	104	A COMMENT	\N	2014-07-04 21:12:06	2014-07-04 21:12:06
479	45	104	A COMMENT	\N	2014-07-06 19:31:31	2014-07-06 19:31:31
480	32	104	A COMMENT	\N	2014-07-12 00:31:38	2014-07-12 00:31:38
481	1	104	A COMMENT	\N	2014-07-14 09:04:19	2014-07-14 09:04:19
482	27	104	A COMMENT	\N	2014-07-20 18:39:07	2014-07-20 18:39:07
483	8	104	A COMMENT	\N	2014-07-21 11:24:32	2014-07-21 11:24:32
484	43	104	A COMMENT	\N	2014-07-24 15:14:45	2014-07-24 15:14:45
485	3	104	A COMMENT	\N	2014-07-25 10:39:37	2014-07-25 10:39:37
486	30	105	A COMMENT	\N	2014-07-07 19:46:15	2014-07-07 19:46:15
487	10	105	A COMMENT	\N	2014-07-23 00:01:29	2014-07-23 00:01:29
488	10	106	A COMMENT	\N	2014-06-07 17:43:33	2014-06-07 17:43:33
489	21	106	A COMMENT	\N	2014-06-21 22:28:45	2014-06-21 22:28:45
490	37	106	A COMMENT	\N	2014-07-17 14:53:57	2014-07-17 14:53:57
491	4	107	A COMMENT	\N	2014-04-04 13:54:30	2014-04-04 13:54:30
492	39	107	A COMMENT	\N	2014-04-06 23:48:41	2014-04-06 23:48:41
493	43	107	A COMMENT	\N	2014-04-09 21:24:32	2014-04-09 21:24:32
494	1	107	A COMMENT	\N	2014-04-16 05:09:51	2014-04-16 05:09:51
495	1	107	A COMMENT	\N	2014-05-14 00:33:08	2014-05-14 00:33:08
496	11	107	A COMMENT	\N	2014-05-16 14:59:41	2014-05-16 14:59:41
497	21	107	A COMMENT	\N	2014-05-29 17:41:15	2014-05-29 17:41:15
498	28	107	A COMMENT	\N	2014-05-30 12:51:30	2014-05-30 12:51:30
499	4	107	A COMMENT	\N	2014-06-01 06:42:12	2014-06-01 06:42:12
500	3	107	A COMMENT	\N	2014-06-12 08:05:28	2014-06-12 08:05:28
501	8	107	A COMMENT	\N	2014-06-19 13:06:26	2014-06-19 13:06:26
502	47	107	A COMMENT	\N	2014-06-26 08:43:01	2014-06-26 08:43:01
503	8	107	A COMMENT	\N	2014-07-02 11:13:16	2014-07-02 11:13:16
504	11	107	A COMMENT	\N	2014-07-10 15:11:26	2014-07-10 15:11:26
505	14	107	A COMMENT	\N	2014-07-24 03:59:16	2014-07-24 03:59:16
506	11	108	A COMMENT	\N	2014-05-11 21:10:59	2014-05-11 21:10:59
507	11	108	A COMMENT	\N	2014-06-07 01:28:57	2014-06-07 01:28:57
508	47	109	A COMMENT	\N	2014-05-15 11:49:40	2014-05-15 11:49:40
509	8	109	A COMMENT	\N	2014-05-25 03:19:45	2014-05-25 03:19:45
510	32	109	A COMMENT	\N	2014-06-02 20:47:48	2014-06-02 20:47:48
511	14	109	A COMMENT	\N	2014-07-27 13:41:29	2014-07-27 13:41:29
512	30	111	A COMMENT	\N	2014-05-10 14:34:32	2014-05-10 14:34:32
513	8	111	A COMMENT	\N	2014-05-11 17:23:07	2014-05-11 17:23:07
514	14	111	A COMMENT	\N	2014-05-15 07:14:10	2014-05-15 07:14:10
515	39	111	A COMMENT	\N	2014-05-18 19:59:02	2014-05-18 19:59:02
516	10	111	A COMMENT	\N	2014-05-22 07:20:08	2014-05-22 07:20:08
517	2	111	A COMMENT	\N	2014-05-23 07:20:38	2014-05-23 07:20:38
518	27	111	A COMMENT	\N	2014-05-31 16:24:17	2014-05-31 16:24:17
519	14	111	A COMMENT	\N	2014-06-01 12:08:15	2014-06-01 12:08:15
520	39	111	A COMMENT	\N	2014-06-01 13:41:04	2014-06-01 13:41:04
521	11	111	A COMMENT	\N	2014-06-04 12:19:07	2014-06-04 12:19:07
522	27	111	A COMMENT	\N	2014-06-15 15:15:17	2014-06-15 15:15:17
523	4	111	A COMMENT	\N	2014-06-26 22:14:47	2014-06-26 22:14:47
524	2	111	A COMMENT	\N	2014-06-27 10:21:56	2014-06-27 10:21:56
525	4	111	A COMMENT	\N	2014-06-29 18:34:54	2014-06-29 18:34:54
526	3	111	A COMMENT	\N	2014-07-17 17:24:30	2014-07-17 17:24:30
527	1	111	A COMMENT	\N	2014-07-22 18:59:11	2014-07-22 18:59:11
528	45	111	A COMMENT	\N	2014-07-26 08:24:28	2014-07-26 08:24:28
529	10	111	A COMMENT	\N	2014-07-26 11:26:21	2014-07-26 11:26:21
530	32	111	A COMMENT	\N	2014-07-27 22:48:51	2014-07-27 22:48:51
531	39	111	A COMMENT	\N	2014-07-28 16:29:32	2014-07-28 16:29:32
532	47	112	A COMMENT	\N	2014-03-14 13:16:21	2014-03-14 13:16:21
533	28	112	A COMMENT	\N	2014-04-02 19:24:32	2014-04-02 19:24:32
534	37	112	A COMMENT	\N	2014-04-25 03:24:18	2014-04-25 03:24:18
535	11	112	A COMMENT	\N	2014-05-01 20:27:00	2014-05-01 20:27:00
536	32	112	A COMMENT	\N	2014-05-03 22:39:00	2014-05-03 22:39:00
537	3	112	A COMMENT	\N	2014-07-13 16:29:37	2014-07-13 16:29:37
538	11	112	A COMMENT	\N	2014-07-24 23:42:54	2014-07-24 23:42:54
539	30	113	A COMMENT	\N	2014-06-13 00:31:17	2014-06-13 00:31:17
540	4	113	A COMMENT	\N	2014-06-13 21:40:05	2014-06-13 21:40:05
541	2	113	A COMMENT	\N	2014-07-02 15:24:02	2014-07-02 15:24:02
542	4	113	A COMMENT	\N	2014-07-05 03:37:17	2014-07-05 03:37:17
543	3	113	A COMMENT	\N	2014-07-11 19:15:36	2014-07-11 19:15:36
544	11	113	A COMMENT	\N	2014-07-13 12:08:20	2014-07-13 12:08:20
545	32	113	A COMMENT	\N	2014-07-23 11:27:54	2014-07-23 11:27:54
546	1	113	A COMMENT	\N	2014-07-27 18:35:22	2014-07-27 18:35:22
547	30	114	A COMMENT	\N	2014-03-26 19:28:49	2014-03-26 19:28:49
548	30	116	A COMMENT	\N	2014-04-14 13:54:55	2014-04-14 13:54:55
549	1	116	A COMMENT	\N	2014-06-01 09:55:47	2014-06-01 09:55:47
550	37	116	A COMMENT	\N	2014-06-10 11:15:15	2014-06-10 11:15:15
551	45	116	A COMMENT	\N	2014-07-04 16:51:04	2014-07-04 16:51:04
552	30	117	A COMMENT	\N	2014-06-05 23:03:46	2014-06-05 23:03:46
553	21	118	A COMMENT	\N	2014-03-31 21:34:15	2014-03-31 21:34:15
554	30	118	A COMMENT	\N	2014-04-15 21:48:45	2014-04-15 21:48:45
555	39	118	A COMMENT	\N	2014-04-29 02:19:18	2014-04-29 02:19:18
556	8	118	A COMMENT	\N	2014-06-18 11:18:34	2014-06-18 11:18:34
557	27	119	A COMMENT	\N	2014-05-28 07:26:09	2014-05-28 07:26:09
558	43	119	A COMMENT	\N	2014-06-15 16:10:48	2014-06-15 16:10:48
559	3	119	A COMMENT	\N	2014-06-16 07:47:18	2014-06-16 07:47:18
560	47	119	A COMMENT	\N	2014-06-30 21:55:04	2014-06-30 21:55:04
561	1	119	A COMMENT	\N	2014-07-14 06:12:43	2014-07-14 06:12:43
562	47	119	A COMMENT	\N	2014-07-17 09:34:39	2014-07-17 09:34:39
563	47	120	A COMMENT	\N	2014-05-04 14:26:39	2014-05-04 14:26:39
564	27	120	A COMMENT	\N	2014-05-07 12:21:50	2014-05-07 12:21:50
565	11	120	A COMMENT	\N	2014-05-11 14:23:26	2014-05-11 14:23:26
566	3	120	A COMMENT	\N	2014-05-29 05:51:53	2014-05-29 05:51:53
567	8	120	A COMMENT	\N	2014-05-30 01:07:39	2014-05-30 01:07:39
568	1	120	A COMMENT	\N	2014-06-03 18:22:45	2014-06-03 18:22:45
569	28	120	A COMMENT	\N	2014-06-14 03:48:13	2014-06-14 03:48:13
570	8	120	A COMMENT	\N	2014-06-15 09:45:51	2014-06-15 09:45:51
571	47	120	A COMMENT	\N	2014-06-20 04:12:20	2014-06-20 04:12:20
572	4	120	A COMMENT	\N	2014-06-21 03:22:22	2014-06-21 03:22:22
573	47	120	A COMMENT	\N	2014-06-27 05:57:09	2014-06-27 05:57:09
574	32	120	A COMMENT	\N	2014-06-28 15:11:27	2014-06-28 15:11:27
575	27	120	A COMMENT	\N	2014-07-02 21:38:14	2014-07-02 21:38:14
576	32	120	A COMMENT	\N	2014-07-07 09:53:59	2014-07-07 09:53:59
577	14	120	A COMMENT	\N	2014-07-11 01:18:25	2014-07-11 01:18:25
578	39	120	A COMMENT	\N	2014-07-18 16:08:54	2014-07-18 16:08:54
579	2	120	A COMMENT	\N	2014-07-25 09:48:28	2014-07-25 09:48:28
580	2	121	A COMMENT	\N	2014-04-12 01:25:08	2014-04-12 01:25:08
581	30	121	A COMMENT	\N	2014-04-14 10:09:48	2014-04-14 10:09:48
582	14	121	A COMMENT	\N	2014-04-20 00:30:23	2014-04-20 00:30:23
583	30	121	A COMMENT	\N	2014-05-12 16:18:11	2014-05-12 16:18:11
584	28	121	A COMMENT	\N	2014-06-08 02:37:26	2014-06-08 02:37:26
585	2	121	A COMMENT	\N	2014-07-08 18:59:35	2014-07-08 18:59:35
586	30	122	A COMMENT	\N	2014-05-11 04:23:34	2014-05-11 04:23:34
587	30	124	A COMMENT	\N	2014-06-07 17:19:54	2014-06-07 17:19:54
588	30	125	A COMMENT	\N	2014-06-19 17:54:34	2014-06-19 17:54:34
589	28	125	A COMMENT	\N	2014-06-27 08:30:17	2014-06-27 08:30:17
590	43	125	A COMMENT	\N	2014-07-07 01:31:27	2014-07-07 01:31:27
591	39	125	A COMMENT	\N	2014-07-15 13:26:47	2014-07-15 13:26:47
592	14	125	A COMMENT	\N	2014-07-21 00:51:44	2014-07-21 00:51:44
593	30	125	A COMMENT	\N	2014-07-23 23:12:21	2014-07-23 23:12:21
594	30	127	A COMMENT	\N	2014-06-11 00:58:44	2014-06-11 00:58:44
595	37	127	A COMMENT	\N	2014-06-26 22:23:45	2014-06-26 22:23:45
596	27	127	A COMMENT	\N	2014-07-01 17:29:24	2014-07-01 17:29:24
597	45	127	A COMMENT	\N	2014-07-04 03:36:53	2014-07-04 03:36:53
598	47	127	A COMMENT	\N	2014-07-09 09:31:01	2014-07-09 09:31:01
599	8	127	A COMMENT	\N	2014-07-18 05:41:50	2014-07-18 05:41:50
600	39	128	A COMMENT	\N	2014-05-27 01:04:22	2014-05-27 01:04:22
601	1	128	A COMMENT	\N	2014-05-28 01:52:59	2014-05-28 01:52:59
602	3	128	A COMMENT	\N	2014-06-05 16:24:17	2014-06-05 16:24:17
603	8	128	A COMMENT	\N	2014-06-07 02:52:13	2014-06-07 02:52:13
604	27	128	A COMMENT	\N	2014-07-14 22:38:23	2014-07-14 22:38:23
605	4	129	A COMMENT	\N	2014-04-18 21:34:07	2014-04-18 21:34:07
606	10	129	A COMMENT	\N	2014-04-28 03:22:13	2014-04-28 03:22:13
607	30	130	A COMMENT	\N	2014-04-09 08:14:48	2014-04-09 08:14:48
608	30	131	A COMMENT	\N	2014-06-25 17:38:13	2014-06-25 17:38:13
609	45	133	A COMMENT	\N	2014-03-31 11:47:20	2014-03-31 11:47:20
610	8	133	A COMMENT	\N	2014-04-21 02:51:50	2014-04-21 02:51:50
611	30	133	A COMMENT	\N	2014-04-30 08:00:49	2014-04-30 08:00:49
612	37	133	A COMMENT	\N	2014-05-09 12:50:42	2014-05-09 12:50:42
613	3	133	A COMMENT	\N	2014-05-16 01:54:36	2014-05-16 01:54:36
614	37	133	A COMMENT	\N	2014-05-27 09:26:57	2014-05-27 09:26:57
615	10	133	A COMMENT	\N	2014-05-31 10:15:52	2014-05-31 10:15:52
616	39	133	A COMMENT	\N	2014-06-23 04:31:46	2014-06-23 04:31:46
617	32	133	A COMMENT	\N	2014-07-04 10:21:31	2014-07-04 10:21:31
618	1	133	A COMMENT	\N	2014-07-11 02:19:29	2014-07-11 02:19:29
619	21	134	A COMMENT	\N	2014-05-03 02:58:11	2014-05-03 02:58:11
620	32	134	A COMMENT	\N	2014-07-05 00:12:06	2014-07-05 00:12:06
621	14	135	A COMMENT	\N	2014-03-31 16:51:38	2014-03-31 16:51:38
622	2	135	A COMMENT	\N	2014-04-18 21:38:38	2014-04-18 21:38:38
623	43	135	A COMMENT	\N	2014-05-01 03:39:24	2014-05-01 03:39:24
624	37	135	A COMMENT	\N	2014-05-31 18:00:28	2014-05-31 18:00:28
625	4	135	A COMMENT	\N	2014-06-15 20:50:27	2014-06-15 20:50:27
626	39	135	A COMMENT	\N	2014-06-23 14:51:55	2014-06-23 14:51:55
627	43	135	A COMMENT	\N	2014-07-28 03:25:35	2014-07-28 03:25:35
628	37	136	A COMMENT	\N	2014-04-09 01:31:51	2014-04-09 01:31:51
629	21	136	A COMMENT	\N	2014-06-18 10:56:38	2014-06-18 10:56:38
630	45	136	A COMMENT	\N	2014-06-25 18:50:00	2014-06-25 18:50:00
631	8	136	A COMMENT	\N	2014-07-22 04:27:04	2014-07-22 04:27:04
632	14	137	A COMMENT	\N	2014-01-12 02:36:28	2014-01-12 02:36:28
633	28	137	A COMMENT	\N	2014-01-26 06:08:44	2014-01-26 06:08:44
634	21	137	A COMMENT	\N	2014-02-20 02:40:14	2014-02-20 02:40:14
635	1	137	A COMMENT	\N	2014-02-20 17:11:40	2014-02-20 17:11:40
636	8	137	A COMMENT	\N	2014-03-03 09:52:32	2014-03-03 09:52:32
637	45	137	A COMMENT	\N	2014-04-07 22:03:21	2014-04-07 22:03:21
638	2	137	A COMMENT	\N	2014-06-20 20:49:18	2014-06-20 20:49:18
639	2	138	A COMMENT	\N	2014-03-24 19:47:25	2014-03-24 19:47:25
640	14	138	A COMMENT	\N	2014-04-07 01:36:18	2014-04-07 01:36:18
641	37	138	A COMMENT	\N	2014-04-29 08:24:20	2014-04-29 08:24:20
642	28	138	A COMMENT	\N	2014-05-10 19:07:57	2014-05-10 19:07:57
643	37	138	A COMMENT	\N	2014-05-27 17:57:35	2014-05-27 17:57:35
644	43	138	A COMMENT	\N	2014-06-22 21:12:25	2014-06-22 21:12:25
645	14	138	A COMMENT	\N	2014-06-26 16:57:05	2014-06-26 16:57:05
646	1	138	A COMMENT	\N	2014-07-06 03:53:38	2014-07-06 03:53:38
647	4	138	A COMMENT	\N	2014-07-07 11:19:04	2014-07-07 11:19:04
648	1	138	A COMMENT	\N	2014-07-28 04:38:09	2014-07-28 04:38:09
649	45	139	A COMMENT	\N	2014-05-13 07:50:01	2014-05-13 07:50:01
650	10	139	A COMMENT	\N	2014-05-24 16:35:30	2014-05-24 16:35:30
651	45	139	A COMMENT	\N	2014-06-15 03:26:46	2014-06-15 03:26:46
652	14	139	A COMMENT	\N	2014-06-20 21:40:38	2014-06-20 21:40:38
653	21	139	A COMMENT	\N	2014-07-21 21:39:14	2014-07-21 21:39:14
654	32	140	A COMMENT	\N	2014-03-07 00:20:59	2014-03-07 00:20:59
655	47	140	A COMMENT	\N	2014-03-19 07:37:39	2014-03-19 07:37:39
656	11	140	A COMMENT	\N	2014-04-10 07:27:37	2014-04-10 07:27:37
657	21	140	A COMMENT	\N	2014-04-13 03:01:35	2014-04-13 03:01:35
658	11	140	A COMMENT	\N	2014-04-14 12:45:03	2014-04-14 12:45:03
659	3	140	A COMMENT	\N	2014-04-29 11:28:34	2014-04-29 11:28:34
660	14	140	A COMMENT	\N	2014-05-02 21:28:13	2014-05-02 21:28:13
661	14	140	A COMMENT	\N	2014-05-08 09:11:08	2014-05-08 09:11:08
662	11	140	A COMMENT	\N	2014-06-03 07:50:19	2014-06-03 07:50:19
663	30	140	A COMMENT	\N	2014-06-13 18:44:22	2014-06-13 18:44:22
664	45	140	A COMMENT	\N	2014-06-19 00:00:32	2014-06-19 00:00:32
665	39	140	A COMMENT	\N	2014-07-02 07:30:02	2014-07-02 07:30:02
666	47	140	A COMMENT	\N	2014-07-03 20:55:29	2014-07-03 20:55:29
667	21	140	A COMMENT	\N	2014-07-26 16:17:06	2014-07-26 16:17:06
668	32	141	A COMMENT	\N	2014-05-23 10:42:55	2014-05-23 10:42:55
669	43	141	A COMMENT	\N	2014-05-31 09:57:04	2014-05-31 09:57:04
670	10	141	A COMMENT	\N	2014-06-08 14:10:42	2014-06-08 14:10:42
671	2	141	A COMMENT	\N	2014-06-16 20:20:25	2014-06-16 20:20:25
672	3	141	A COMMENT	\N	2014-06-27 07:15:09	2014-06-27 07:15:09
673	45	141	A COMMENT	\N	2014-07-27 23:34:15	2014-07-27 23:34:15
674	32	142	A COMMENT	\N	2014-01-29 09:34:50	2014-01-29 09:34:50
675	28	142	A COMMENT	\N	2014-02-18 08:59:38	2014-02-18 08:59:38
676	1	142	A COMMENT	\N	2014-03-10 01:15:17	2014-03-10 01:15:17
677	3	142	A COMMENT	\N	2014-03-22 06:55:07	2014-03-22 06:55:07
678	2	142	A COMMENT	\N	2014-04-11 15:46:33	2014-04-11 15:46:33
679	1	142	A COMMENT	\N	2014-04-19 09:58:06	2014-04-19 09:58:06
680	32	142	A COMMENT	\N	2014-04-24 03:11:12	2014-04-24 03:11:12
681	45	142	A COMMENT	\N	2014-04-29 10:11:36	2014-04-29 10:11:36
682	3	142	A COMMENT	\N	2014-05-05 18:56:55	2014-05-05 18:56:55
683	39	142	A COMMENT	\N	2014-05-10 00:52:22	2014-05-10 00:52:22
684	21	142	A COMMENT	\N	2014-05-23 00:31:01	2014-05-23 00:31:01
685	43	142	A COMMENT	\N	2014-05-31 16:29:04	2014-05-31 16:29:04
686	14	142	A COMMENT	\N	2014-06-03 22:06:27	2014-06-03 22:06:27
687	27	142	A COMMENT	\N	2014-06-21 18:39:46	2014-06-21 18:39:46
688	2	142	A COMMENT	\N	2014-06-25 07:52:09	2014-06-25 07:52:09
689	37	142	A COMMENT	\N	2014-07-05 23:46:36	2014-07-05 23:46:36
690	37	142	A COMMENT	\N	2014-07-07 23:16:57	2014-07-07 23:16:57
691	11	142	A COMMENT	\N	2014-07-13 11:22:21	2014-07-13 11:22:21
692	14	142	A COMMENT	\N	2014-07-27 08:57:16	2014-07-27 08:57:16
693	30	142	A COMMENT	\N	2014-07-27 10:07:18	2014-07-27 10:07:18
694	32	143	A COMMENT	\N	2014-04-24 15:54:36	2014-04-24 15:54:36
695	4	143	A COMMENT	\N	2014-06-26 07:30:07	2014-06-26 07:30:07
696	1	143	A COMMENT	\N	2014-07-03 10:22:54	2014-07-03 10:22:54
697	28	143	A COMMENT	\N	2014-07-19 11:48:48	2014-07-19 11:48:48
698	39	143	A COMMENT	\N	2014-07-23 10:08:30	2014-07-23 10:08:30
699	8	144	A COMMENT	\N	2014-03-12 12:43:53	2014-03-12 12:43:53
700	37	144	A COMMENT	\N	2014-03-28 06:53:58	2014-03-28 06:53:58
701	30	144	A COMMENT	\N	2014-04-17 17:43:55	2014-04-17 17:43:55
702	28	144	A COMMENT	\N	2014-04-18 05:57:03	2014-04-18 05:57:03
703	1	144	A COMMENT	\N	2014-04-20 17:19:49	2014-04-20 17:19:49
704	45	144	A COMMENT	\N	2014-04-30 23:48:16	2014-04-30 23:48:16
705	21	144	A COMMENT	\N	2014-05-16 12:10:38	2014-05-16 12:10:38
706	4	144	A COMMENT	\N	2014-05-24 03:10:17	2014-05-24 03:10:17
707	27	144	A COMMENT	\N	2014-06-09 12:41:49	2014-06-09 12:41:49
708	28	144	A COMMENT	\N	2014-07-10 01:48:19	2014-07-10 01:48:19
709	8	145	A COMMENT	\N	2014-04-09 20:43:49	2014-04-09 20:43:49
710	32	145	A COMMENT	\N	2014-04-10 08:54:57	2014-04-10 08:54:57
711	39	145	A COMMENT	\N	2014-04-21 05:07:45	2014-04-21 05:07:45
712	28	145	A COMMENT	\N	2014-04-22 01:37:49	2014-04-22 01:37:49
713	21	145	A COMMENT	\N	2014-04-26 22:48:11	2014-04-26 22:48:11
714	47	145	A COMMENT	\N	2014-04-30 13:23:11	2014-04-30 13:23:11
715	14	145	A COMMENT	\N	2014-05-09 22:46:21	2014-05-09 22:46:21
716	27	145	A COMMENT	\N	2014-05-20 14:15:34	2014-05-20 14:15:34
717	28	145	A COMMENT	\N	2014-05-22 00:26:35	2014-05-22 00:26:35
718	8	145	A COMMENT	\N	2014-05-26 13:19:43	2014-05-26 13:19:43
719	1	145	A COMMENT	\N	2014-06-02 20:21:32	2014-06-02 20:21:32
720	32	145	A COMMENT	\N	2014-06-08 13:09:43	2014-06-08 13:09:43
721	43	145	A COMMENT	\N	2014-06-08 22:23:57	2014-06-08 22:23:57
722	28	145	A COMMENT	\N	2014-06-14 01:07:20	2014-06-14 01:07:20
723	21	145	A COMMENT	\N	2014-06-17 04:51:38	2014-06-17 04:51:38
724	39	145	A COMMENT	\N	2014-06-18 13:24:51	2014-06-18 13:24:51
725	2	145	A COMMENT	\N	2014-06-26 04:17:45	2014-06-26 04:17:45
726	45	145	A COMMENT	\N	2014-07-05 12:17:14	2014-07-05 12:17:14
727	43	145	A COMMENT	\N	2014-07-18 07:24:10	2014-07-18 07:24:10
728	32	146	A COMMENT	\N	2014-06-03 03:48:28	2014-06-03 03:48:28
729	30	147	A COMMENT	\N	2014-07-20 14:13:33	2014-07-20 14:13:33
730	30	147	A COMMENT	\N	2014-07-25 07:25:10	2014-07-25 07:25:10
731	2	148	A COMMENT	\N	2014-07-21 18:34:00	2014-07-21 18:34:00
732	11	148	A COMMENT	\N	2014-07-25 16:52:16	2014-07-25 16:52:16
733	27	148	A COMMENT	\N	2014-07-26 17:06:26	2014-07-26 17:06:26
734	39	148	A COMMENT	\N	2014-07-27 09:09:17	2014-07-27 09:09:17
735	43	148	A COMMENT	\N	2014-07-28 07:33:12	2014-07-28 07:33:12
736	47	150	A COMMENT	\N	2013-12-25 19:19:07	2013-12-25 19:19:07
737	21	150	A COMMENT	\N	2014-01-17 14:22:05	2014-01-17 14:22:05
738	32	150	A COMMENT	\N	2014-01-22 22:13:02	2014-01-22 22:13:02
739	10	150	A COMMENT	\N	2014-01-23 18:32:33	2014-01-23 18:32:33
740	14	150	A COMMENT	\N	2014-01-25 22:58:43	2014-01-25 22:58:43
741	21	150	A COMMENT	\N	2014-02-04 13:49:26	2014-02-04 13:49:26
742	37	150	A COMMENT	\N	2014-02-27 14:06:11	2014-02-27 14:06:11
743	4	150	A COMMENT	\N	2014-03-10 21:07:54	2014-03-10 21:07:54
744	1	150	A COMMENT	\N	2014-03-18 16:53:00	2014-03-18 16:53:00
745	3	150	A COMMENT	\N	2014-03-20 17:15:16	2014-03-20 17:15:16
746	37	150	A COMMENT	\N	2014-04-23 05:31:47	2014-04-23 05:31:47
747	8	150	A COMMENT	\N	2014-04-23 21:35:50	2014-04-23 21:35:50
748	47	150	A COMMENT	\N	2014-05-29 07:43:23	2014-05-29 07:43:23
749	32	150	A COMMENT	\N	2014-06-16 22:40:13	2014-06-16 22:40:13
750	47	150	A COMMENT	\N	2014-06-22 12:05:00	2014-06-22 12:05:00
751	37	150	A COMMENT	\N	2014-07-01 05:24:51	2014-07-01 05:24:51
752	4	150	A COMMENT	\N	2014-07-15 09:27:28	2014-07-15 09:27:28
753	39	150	A COMMENT	\N	2014-07-22 20:52:28	2014-07-22 20:52:28
754	32	151	A COMMENT	\N	2014-01-26 04:55:43	2014-01-26 04:55:43
755	11	151	A COMMENT	\N	2014-02-26 08:04:38	2014-02-26 08:04:38
756	32	151	A COMMENT	\N	2014-03-24 19:36:05	2014-03-24 19:36:05
757	39	151	A COMMENT	\N	2014-04-13 00:36:45	2014-04-13 00:36:45
758	14	151	A COMMENT	\N	2014-04-27 14:45:55	2014-04-27 14:45:55
759	47	151	A COMMENT	\N	2014-07-15 08:05:10	2014-07-15 08:05:10
760	32	152	A COMMENT	\N	2014-06-05 00:00:10	2014-06-05 00:00:10
761	37	152	A COMMENT	\N	2014-07-27 00:15:52	2014-07-27 00:15:52
762	2	153	A COMMENT	\N	2013-11-23 20:04:01	2013-11-23 20:04:01
763	39	153	A COMMENT	\N	2013-12-07 22:00:09	2013-12-07 22:00:09
764	8	153	A COMMENT	\N	2013-12-10 02:52:12	2013-12-10 02:52:12
765	37	153	A COMMENT	\N	2013-12-27 18:18:26	2013-12-27 18:18:26
766	11	153	A COMMENT	\N	2014-01-08 06:40:51	2014-01-08 06:40:51
767	32	153	A COMMENT	\N	2014-01-20 22:49:51	2014-01-20 22:49:51
768	1	153	A COMMENT	\N	2014-02-26 13:15:06	2014-02-26 13:15:06
769	28	153	A COMMENT	\N	2014-02-28 15:19:37	2014-02-28 15:19:37
770	21	153	A COMMENT	\N	2014-03-13 23:26:14	2014-03-13 23:26:14
771	2	153	A COMMENT	\N	2014-03-14 23:39:11	2014-03-14 23:39:11
772	30	153	A COMMENT	\N	2014-04-03 01:49:49	2014-04-03 01:49:49
773	28	153	A COMMENT	\N	2014-04-13 15:15:38	2014-04-13 15:15:38
774	8	153	A COMMENT	\N	2014-04-28 02:39:11	2014-04-28 02:39:11
775	39	153	A COMMENT	\N	2014-05-31 19:00:52	2014-05-31 19:00:52
776	37	153	A COMMENT	\N	2014-06-20 05:38:40	2014-06-20 05:38:40
777	14	154	A COMMENT	\N	2014-05-03 21:26:31	2014-05-03 21:26:31
778	28	154	A COMMENT	\N	2014-06-05 02:18:10	2014-06-05 02:18:10
779	14	154	A COMMENT	\N	2014-06-26 10:32:11	2014-06-26 10:32:11
780	47	154	A COMMENT	\N	2014-07-13 13:40:41	2014-07-13 13:40:41
781	32	155	A COMMENT	\N	2014-01-13 04:25:02	2014-01-13 04:25:02
782	11	155	A COMMENT	\N	2014-03-01 11:06:17	2014-03-01 11:06:17
783	39	155	A COMMENT	\N	2014-04-05 02:19:18	2014-04-05 02:19:18
784	14	155	A COMMENT	\N	2014-04-05 10:42:19	2014-04-05 10:42:19
785	11	155	A COMMENT	\N	2014-04-21 07:04:23	2014-04-21 07:04:23
786	4	155	A COMMENT	\N	2014-05-28 03:51:18	2014-05-28 03:51:18
787	32	156	A COMMENT	\N	2014-01-18 08:52:53	2014-01-18 08:52:53
788	10	157	A COMMENT	\N	2014-06-05 03:30:46	2014-06-05 03:30:46
789	43	157	A COMMENT	\N	2014-06-09 05:52:09	2014-06-09 05:52:09
790	10	157	A COMMENT	\N	2014-07-04 04:51:03	2014-07-04 04:51:03
791	30	157	A COMMENT	\N	2014-07-07 22:53:10	2014-07-07 22:53:10
792	21	157	A COMMENT	\N	2014-07-09 18:47:25	2014-07-09 18:47:25
793	3	157	A COMMENT	\N	2014-07-12 10:25:27	2014-07-12 10:25:27
794	3	157	A COMMENT	\N	2014-07-16 09:45:05	2014-07-16 09:45:05
795	43	157	A COMMENT	\N	2014-07-18 23:41:26	2014-07-18 23:41:26
796	30	157	A COMMENT	\N	2014-07-28 07:30:40	2014-07-28 07:30:40
797	2	161	A COMMENT	\N	2014-07-12 17:49:19	2014-07-12 17:49:19
798	14	161	A COMMENT	\N	2014-07-15 00:50:27	2014-07-15 00:50:27
799	45	161	A COMMENT	\N	2014-07-18 14:11:53	2014-07-18 14:11:53
800	3	161	A COMMENT	\N	2014-07-18 14:54:11	2014-07-18 14:54:11
801	10	161	A COMMENT	\N	2014-07-28 12:05:15	2014-07-28 12:05:15
802	32	162	A COMMENT	\N	2014-01-03 20:32:47	2014-01-03 20:32:47
803	32	163	A COMMENT	\N	2014-01-30 05:08:41	2014-01-30 05:08:41
804	4	163	A COMMENT	\N	2014-02-13 17:32:50	2014-02-13 17:32:50
805	1	163	A COMMENT	\N	2014-02-15 22:01:09	2014-02-15 22:01:09
806	14	163	A COMMENT	\N	2014-05-01 11:50:23	2014-05-01 11:50:23
807	27	163	A COMMENT	\N	2014-05-19 01:38:28	2014-05-19 01:38:28
808	4	163	A COMMENT	\N	2014-05-31 14:36:07	2014-05-31 14:36:07
809	32	164	A COMMENT	\N	2013-12-25 12:55:58	2013-12-25 12:55:58
810	32	168	A COMMENT	\N	2013-12-29 01:39:54	2013-12-29 01:39:54
811	2	169	A COMMENT	\N	2014-06-13 17:45:38	2014-06-13 17:45:38
812	2	170	A COMMENT	\N	2014-04-15 16:17:42	2014-04-15 16:17:42
813	14	170	A COMMENT	\N	2014-07-13 10:41:42	2014-07-13 10:41:42
814	11	171	A COMMENT	\N	2014-03-22 22:55:04	2014-03-22 22:55:04
815	37	171	A COMMENT	\N	2014-06-10 16:23:57	2014-06-10 16:23:57
816	1	173	A COMMENT	\N	2014-04-16 02:28:46	2014-04-16 02:28:46
817	11	174	A COMMENT	\N	2014-04-04 12:13:13	2014-04-04 12:13:13
818	32	174	A COMMENT	\N	2014-04-29 04:54:49	2014-04-29 04:54:49
819	45	174	A COMMENT	\N	2014-05-15 02:49:14	2014-05-15 02:49:14
820	14	174	A COMMENT	\N	2014-06-04 23:40:40	2014-06-04 23:40:40
821	43	174	A COMMENT	\N	2014-06-25 11:13:53	2014-06-25 11:13:53
822	4	174	A COMMENT	\N	2014-07-06 19:14:08	2014-07-06 19:14:08
823	21	174	A COMMENT	\N	2014-07-18 06:33:07	2014-07-18 06:33:07
824	39	175	A COMMENT	\N	2014-01-04 02:55:00	2014-01-04 02:55:00
825	45	175	A COMMENT	\N	2014-01-14 21:10:44	2014-01-14 21:10:44
826	27	175	A COMMENT	\N	2014-02-24 21:14:50	2014-02-24 21:14:50
827	4	175	A COMMENT	\N	2014-03-03 12:20:35	2014-03-03 12:20:35
828	2	175	A COMMENT	\N	2014-04-05 09:45:50	2014-04-05 09:45:50
829	27	175	A COMMENT	\N	2014-05-01 15:15:21	2014-05-01 15:15:21
830	30	175	A COMMENT	\N	2014-06-16 01:31:07	2014-06-16 01:31:07
831	37	175	A COMMENT	\N	2014-07-13 19:31:02	2014-07-13 19:31:02
832	32	177	A COMMENT	\N	2014-02-03 11:18:37	2014-02-03 11:18:37
833	27	177	A COMMENT	\N	2014-03-06 05:57:48	2014-03-06 05:57:48
834	8	177	A COMMENT	\N	2014-05-22 11:53:00	2014-05-22 11:53:00
835	32	178	A COMMENT	\N	2014-06-01 10:46:46	2014-06-01 10:46:46
836	2	178	A COMMENT	\N	2014-06-09 20:24:47	2014-06-09 20:24:47
837	28	178	A COMMENT	\N	2014-06-13 12:15:59	2014-06-13 12:15:59
838	14	178	A COMMENT	\N	2014-06-21 04:30:03	2014-06-21 04:30:03
839	4	178	A COMMENT	\N	2014-06-27 22:25:02	2014-06-27 22:25:02
840	2	178	A COMMENT	\N	2014-07-01 05:59:27	2014-07-01 05:59:27
841	21	178	A COMMENT	\N	2014-07-04 06:00:56	2014-07-04 06:00:56
842	10	178	A COMMENT	\N	2014-07-09 20:25:35	2014-07-09 20:25:35
843	30	178	A COMMENT	\N	2014-07-09 22:20:36	2014-07-09 22:20:36
844	37	178	A COMMENT	\N	2014-07-26 23:40:01	2014-07-26 23:40:01
845	8	180	A COMMENT	\N	2013-12-03 14:31:40	2013-12-03 14:31:40
846	3	180	A COMMENT	\N	2013-12-06 07:18:49	2013-12-06 07:18:49
847	21	180	A COMMENT	\N	2014-01-05 07:13:19	2014-01-05 07:13:19
848	28	180	A COMMENT	\N	2014-01-05 13:41:15	2014-01-05 13:41:15
849	28	180	A COMMENT	\N	2014-01-28 22:49:36	2014-01-28 22:49:36
850	2	180	A COMMENT	\N	2014-03-12 10:25:45	2014-03-12 10:25:45
851	47	180	A COMMENT	\N	2014-04-05 01:50:14	2014-04-05 01:50:14
852	39	180	A COMMENT	\N	2014-05-22 20:58:06	2014-05-22 20:58:06
853	47	180	A COMMENT	\N	2014-06-21 06:36:01	2014-06-21 06:36:01
854	45	180	A COMMENT	\N	2014-07-23 09:34:53	2014-07-23 09:34:53
855	30	181	A COMMENT	\N	2014-06-16 09:43:45	2014-06-16 09:43:45
856	2	181	A COMMENT	\N	2014-06-20 11:50:02	2014-06-20 11:50:02
857	47	181	A COMMENT	\N	2014-06-24 09:48:53	2014-06-24 09:48:53
858	28	181	A COMMENT	\N	2014-06-28 16:26:50	2014-06-28 16:26:50
859	43	181	A COMMENT	\N	2014-07-18 07:35:27	2014-07-18 07:35:27
860	11	182	A COMMENT	\N	2013-12-05 15:39:23	2013-12-05 15:39:23
861	3	182	A COMMENT	\N	2014-01-31 08:07:09	2014-01-31 08:07:09
862	27	182	A COMMENT	\N	2014-02-09 22:15:22	2014-02-09 22:15:22
863	30	182	A COMMENT	\N	2014-02-22 01:28:09	2014-02-22 01:28:09
864	8	182	A COMMENT	\N	2014-04-23 22:01:21	2014-04-23 22:01:21
865	47	182	A COMMENT	\N	2014-04-28 21:22:58	2014-04-28 21:22:58
866	4	182	A COMMENT	\N	2014-04-29 04:28:01	2014-04-29 04:28:01
867	27	182	A COMMENT	\N	2014-05-19 07:26:50	2014-05-19 07:26:50
868	14	182	A COMMENT	\N	2014-05-23 10:26:51	2014-05-23 10:26:51
869	14	184	A COMMENT	\N	2014-06-19 18:26:54	2014-06-19 18:26:54
870	27	184	A COMMENT	\N	2014-06-26 21:44:16	2014-06-26 21:44:16
871	4	184	A COMMENT	\N	2014-07-02 02:10:52	2014-07-02 02:10:52
872	28	184	A COMMENT	\N	2014-07-10 00:29:12	2014-07-10 00:29:12
873	37	184	A COMMENT	\N	2014-07-12 11:43:14	2014-07-12 11:43:14
874	14	184	A COMMENT	\N	2014-07-28 11:00:48	2014-07-28 11:00:48
875	37	185	A COMMENT	\N	2014-06-21 10:19:03	2014-06-21 10:19:03
876	43	185	A COMMENT	\N	2014-06-22 12:21:32	2014-06-22 12:21:32
877	45	185	A COMMENT	\N	2014-06-24 22:04:43	2014-06-24 22:04:43
878	3	185	A COMMENT	\N	2014-06-25 19:04:44	2014-06-25 19:04:44
879	10	185	A COMMENT	\N	2014-06-28 19:41:36	2014-06-28 19:41:36
880	11	185	A COMMENT	\N	2014-07-07 13:06:13	2014-07-07 13:06:13
881	39	185	A COMMENT	\N	2014-07-09 05:11:23	2014-07-09 05:11:23
882	3	185	A COMMENT	\N	2014-07-18 18:54:47	2014-07-18 18:54:47
883	30	185	A COMMENT	\N	2014-07-19 20:01:12	2014-07-19 20:01:12
884	14	186	A COMMENT	\N	2014-07-01 22:38:43	2014-07-01 22:38:43
885	8	186	A COMMENT	\N	2014-07-18 04:40:27	2014-07-18 04:40:27
886	47	186	A COMMENT	\N	2014-07-27 00:27:38	2014-07-27 00:27:38
887	37	187	A COMMENT	\N	2014-07-06 02:38:35	2014-07-06 02:38:35
888	43	187	A COMMENT	\N	2014-07-09 22:13:30	2014-07-09 22:13:30
889	47	187	A COMMENT	\N	2014-07-11 12:36:56	2014-07-11 12:36:56
890	10	187	A COMMENT	\N	2014-07-16 18:11:34	2014-07-16 18:11:34
891	4	187	A COMMENT	\N	2014-07-20 06:11:03	2014-07-20 06:11:03
892	2	188	A COMMENT	\N	2014-07-12 05:56:51	2014-07-12 05:56:51
893	28	188	A COMMENT	\N	2014-07-23 17:39:21	2014-07-23 17:39:21
894	21	188	A COMMENT	\N	2014-07-25 09:05:38	2014-07-25 09:05:38
895	3	188	A COMMENT	\N	2014-07-27 09:24:55	2014-07-27 09:24:55
896	1	189	A COMMENT	\N	2014-07-14 16:24:40	2014-07-14 16:24:40
897	27	189	A COMMENT	\N	2014-07-23 01:32:39	2014-07-23 01:32:39
898	11	189	A COMMENT	\N	2014-07-24 00:44:58	2014-07-24 00:44:58
899	43	189	A COMMENT	\N	2014-07-25 18:26:07	2014-07-25 18:26:07
900	37	190	A COMMENT	\N	2014-07-17 15:09:53	2014-07-17 15:09:53
901	10	190	A COMMENT	\N	2014-07-18 01:46:00	2014-07-18 01:46:00
902	14	190	A COMMENT	\N	2014-07-20 20:46:28	2014-07-20 20:46:28
903	47	190	A COMMENT	\N	2014-07-24 18:01:28	2014-07-24 18:01:28
904	28	190	A COMMENT	\N	2014-07-27 13:29:39	2014-07-27 13:29:39
905	10	191	A COMMENT	\N	2014-07-18 11:53:31	2014-07-18 11:53:31
906	30	191	A COMMENT	\N	2014-07-19 02:23:06	2014-07-19 02:23:06
907	27	191	A COMMENT	\N	2014-07-21 12:12:18	2014-07-21 12:12:18
908	45	191	A COMMENT	\N	2014-07-22 20:05:29	2014-07-22 20:05:29
909	11	191	A COMMENT	\N	2014-07-24 01:18:11	2014-07-24 01:18:11
910	37	192	A COMMENT	\N	2014-06-17 16:39:19	2014-06-17 16:39:19
911	37	192	A COMMENT	\N	2014-06-19 21:49:07	2014-06-19 21:49:07
912	10	192	A COMMENT	\N	2014-06-25 19:23:28	2014-06-25 19:23:28
913	8	192	A COMMENT	\N	2014-07-08 11:11:21	2014-07-08 11:11:21
914	28	192	A COMMENT	\N	2014-07-11 01:36:05	2014-07-11 01:36:05
915	11	192	A COMMENT	\N	2014-07-16 07:35:15	2014-07-16 07:35:15
916	10	192	A COMMENT	\N	2014-07-22 19:26:09	2014-07-22 19:26:09
917	45	193	A COMMENT	\N	2014-06-30 20:10:05	2014-06-30 20:10:05
918	1	193	A COMMENT	\N	2014-07-02 04:40:10	2014-07-02 04:40:10
919	11	193	A COMMENT	\N	2014-07-13 12:01:26	2014-07-13 12:01:26
920	3	193	A COMMENT	\N	2014-07-14 18:14:46	2014-07-14 18:14:46
921	30	193	A COMMENT	\N	2014-07-16 13:59:00	2014-07-16 13:59:00
922	37	194	A COMMENT	\N	2014-07-06 10:39:27	2014-07-06 10:39:27
923	37	194	A COMMENT	\N	2014-07-13 05:50:45	2014-07-13 05:50:45
924	45	194	A COMMENT	\N	2014-07-15 19:08:07	2014-07-15 19:08:07
925	14	194	A COMMENT	\N	2014-07-16 22:11:06	2014-07-16 22:11:06
926	30	194	A COMMENT	\N	2014-07-21 20:37:57	2014-07-21 20:37:57
927	45	194	A COMMENT	\N	2014-07-26 05:19:41	2014-07-26 05:19:41
928	14	194	A COMMENT	\N	2014-07-28 16:37:09	2014-07-28 16:37:09
929	3	196	A COMMENT	\N	2014-06-28 11:47:16	2014-06-28 11:47:16
930	1	196	A COMMENT	\N	2014-06-30 06:07:32	2014-06-30 06:07:32
931	2	196	A COMMENT	\N	2014-06-30 13:42:50	2014-06-30 13:42:50
932	4	196	A COMMENT	\N	2014-06-30 18:11:04	2014-06-30 18:11:04
933	30	196	A COMMENT	\N	2014-07-02 11:52:29	2014-07-02 11:52:29
934	32	196	A COMMENT	\N	2014-07-08 02:50:48	2014-07-08 02:50:48
935	37	196	A COMMENT	\N	2014-07-08 08:03:55	2014-07-08 08:03:55
936	43	196	A COMMENT	\N	2014-07-08 15:28:03	2014-07-08 15:28:03
937	10	196	A COMMENT	\N	2014-07-09 13:27:43	2014-07-09 13:27:43
938	28	196	A COMMENT	\N	2014-07-17 12:02:27	2014-07-17 12:02:27
939	27	196	A COMMENT	\N	2014-07-18 10:52:54	2014-07-18 10:52:54
940	28	196	A COMMENT	\N	2014-07-18 18:34:26	2014-07-18 18:34:26
941	8	196	A COMMENT	\N	2014-07-20 07:50:00	2014-07-20 07:50:00
942	32	196	A COMMENT	\N	2014-07-23 10:39:53	2014-07-23 10:39:53
943	3	196	A COMMENT	\N	2014-07-24 13:20:56	2014-07-24 13:20:56
944	45	196	A COMMENT	\N	2014-07-25 17:09:15	2014-07-25 17:09:15
945	45	196	A COMMENT	\N	2014-07-27 11:15:34	2014-07-27 11:15:34
946	2	196	A COMMENT	\N	2014-07-28 14:03:39	2014-07-28 14:03:39
947	37	197	A COMMENT	\N	2014-06-19 06:28:15	2014-06-19 06:28:15
948	11	197	A COMMENT	\N	2014-06-26 08:11:07	2014-06-26 08:11:07
949	2	197	A COMMENT	\N	2014-07-02 11:28:46	2014-07-02 11:28:46
950	1	197	A COMMENT	\N	2014-07-03 17:48:31	2014-07-03 17:48:31
951	28	197	A COMMENT	\N	2014-07-10 01:55:41	2014-07-10 01:55:41
952	39	197	A COMMENT	\N	2014-07-10 22:13:11	2014-07-10 22:13:11
953	39	197	A COMMENT	\N	2014-07-13 17:45:43	2014-07-13 17:45:43
954	32	197	A COMMENT	\N	2014-07-23 07:14:59	2014-07-23 07:14:59
955	30	197	A COMMENT	\N	2014-07-24 07:43:31	2014-07-24 07:43:31
956	28	198	A COMMENT	\N	2014-07-04 11:03:26	2014-07-04 11:03:26
957	39	199	A COMMENT	\N	2014-05-05 00:31:45	2014-05-05 00:31:45
958	2	200	A COMMENT	\N	2014-06-12 10:22:50	2014-06-12 10:22:50
959	45	200	A COMMENT	\N	2014-06-15 18:11:49	2014-06-15 18:11:49
960	10	201	A COMMENT	\N	2014-06-19 18:57:07	2014-06-19 18:57:07
961	10	201	A COMMENT	\N	2014-07-10 06:47:52	2014-07-10 06:47:52
962	3	201	A COMMENT	\N	2014-07-20 14:22:25	2014-07-20 14:22:25
963	27	201	A COMMENT	\N	2014-07-25 09:21:52	2014-07-25 09:21:52
964	39	201	A COMMENT	\N	2014-07-27 15:52:23	2014-07-27 15:52:23
965	28	203	A COMMENT	\N	2014-06-09 04:04:12	2014-06-09 04:04:12
966	8	203	A COMMENT	\N	2014-06-27 14:04:54	2014-06-27 14:04:54
967	14	203	A COMMENT	\N	2014-07-05 00:29:42	2014-07-05 00:29:42
968	37	203	A COMMENT	\N	2014-07-15 19:53:01	2014-07-15 19:53:01
969	4	204	A COMMENT	\N	2014-06-06 02:17:01	2014-06-06 02:17:01
970	10	204	A COMMENT	\N	2014-06-10 08:33:07	2014-06-10 08:33:07
971	32	204	A COMMENT	\N	2014-06-24 08:46:45	2014-06-24 08:46:45
972	47	204	A COMMENT	\N	2014-06-25 01:17:54	2014-06-25 01:17:54
973	14	204	A COMMENT	\N	2014-06-25 14:13:46	2014-06-25 14:13:46
974	21	204	A COMMENT	\N	2014-06-26 13:00:39	2014-06-26 13:00:39
975	45	204	A COMMENT	\N	2014-07-15 07:34:43	2014-07-15 07:34:43
976	37	204	A COMMENT	\N	2014-07-17 23:37:06	2014-07-17 23:37:06
977	28	204	A COMMENT	\N	2014-07-26 05:03:47	2014-07-26 05:03:47
978	39	205	A COMMENT	\N	2014-04-24 11:55:22	2014-04-24 11:55:22
979	39	206	A COMMENT	\N	2014-04-26 18:03:56	2014-04-26 18:03:56
980	10	206	A COMMENT	\N	2014-05-01 12:57:36	2014-05-01 12:57:36
981	45	206	A COMMENT	\N	2014-05-13 06:57:11	2014-05-13 06:57:11
982	3	206	A COMMENT	\N	2014-06-14 20:26:04	2014-06-14 20:26:04
983	10	206	A COMMENT	\N	2014-06-28 22:17:48	2014-06-28 22:17:48
984	47	206	A COMMENT	\N	2014-07-19 00:32:51	2014-07-19 00:32:51
985	21	208	A COMMENT	\N	2014-07-02 16:30:31	2014-07-02 16:30:31
986	32	208	A COMMENT	\N	2014-07-28 17:56:32	2014-07-28 17:56:32
987	3	209	A COMMENT	\N	2014-07-26 07:26:31	2014-07-26 07:26:31
988	8	209	A COMMENT	\N	2014-07-28 01:07:10	2014-07-28 01:07:10
989	14	210	A COMMENT	\N	2014-07-25 04:02:20	2014-07-25 04:02:20
990	10	210	A COMMENT	\N	2014-07-25 06:48:49	2014-07-25 06:48:49
991	47	210	A COMMENT	\N	2014-07-25 08:07:08	2014-07-25 08:07:08
992	27	210	A COMMENT	\N	2014-07-25 10:22:35	2014-07-25 10:22:35
993	4	210	A COMMENT	\N	2014-07-25 13:13:18	2014-07-25 13:13:18
994	47	210	A COMMENT	\N	2014-07-25 13:46:31	2014-07-25 13:46:31
995	3	210	A COMMENT	\N	2014-07-26 01:06:01	2014-07-26 01:06:01
996	28	210	A COMMENT	\N	2014-07-26 16:07:52	2014-07-26 16:07:52
997	1	210	A COMMENT	\N	2014-07-27 01:11:05	2014-07-27 01:11:05
998	37	210	A COMMENT	\N	2014-07-27 05:30:43	2014-07-27 05:30:43
999	2	210	A COMMENT	\N	2014-07-27 16:30:19	2014-07-27 16:30:19
1000	14	210	A COMMENT	\N	2014-07-27 17:02:14	2014-07-27 17:02:14
1001	21	210	A COMMENT	\N	2014-07-27 20:11:29	2014-07-27 20:11:29
1002	3	210	A COMMENT	\N	2014-07-28 05:04:44	2014-07-28 05:04:44
1003	30	210	A COMMENT	\N	2014-07-28 05:42:28	2014-07-28 05:42:28
1004	27	210	A COMMENT	\N	2014-07-28 09:15:30	2014-07-28 09:15:30
1005	27	210	A COMMENT	\N	2014-07-28 12:03:03	2014-07-28 12:03:03
1006	21	210	A COMMENT	\N	2014-07-28 13:31:46	2014-07-28 13:31:46
1007	43	211	A COMMENT	\N	2014-07-25 07:15:25	2014-07-25 07:15:25
1008	43	212	A COMMENT	\N	2014-07-25 22:13:35	2014-07-25 22:13:35
1009	37	212	A COMMENT	\N	2014-07-26 03:27:23	2014-07-26 03:27:23
1010	47	212	A COMMENT	\N	2014-07-26 04:06:48	2014-07-26 04:06:48
1011	11	212	A COMMENT	\N	2014-07-26 15:50:48	2014-07-26 15:50:48
1012	8	212	A COMMENT	\N	2014-07-27 13:10:52	2014-07-27 13:10:52
1013	45	212	A COMMENT	\N	2014-07-28 10:23:56	2014-07-28 10:23:56
1014	14	212	A COMMENT	\N	2014-07-28 13:39:36	2014-07-28 13:39:36
1015	10	215	A COMMENT	\N	2014-07-28 13:28:58	2014-07-28 13:28:58
1016	27	215	A COMMENT	\N	2014-07-28 13:46:15	2014-07-28 13:46:15
1017	21	215	A COMMENT	\N	2014-07-28 17:40:15	2014-07-28 17:40:15
1018	1	215	A COMMENT	\N	2014-07-28 19:47:47	2014-07-28 19:47:47
1019	39	216	A COMMENT	\N	2014-07-26 17:36:00	2014-07-26 17:36:00
1020	43	216	A COMMENT	\N	2014-07-26 17:54:24	2014-07-26 17:54:24
1021	37	216	A COMMENT	\N	2014-07-26 18:14:24	2014-07-26 18:14:24
1022	11	216	A COMMENT	\N	2014-07-26 18:18:06	2014-07-26 18:18:06
1023	8	216	A COMMENT	\N	2014-07-26 22:36:31	2014-07-26 22:36:31
1024	1	216	A COMMENT	\N	2014-07-27 04:20:46	2014-07-27 04:20:46
1025	39	216	A COMMENT	\N	2014-07-27 06:20:23	2014-07-27 06:20:23
1026	11	216	A COMMENT	\N	2014-07-27 11:13:31	2014-07-27 11:13:31
1027	27	216	A COMMENT	\N	2014-07-27 14:23:36	2014-07-27 14:23:36
1028	32	216	A COMMENT	\N	2014-07-27 18:54:12	2014-07-27 18:54:12
1029	3	216	A COMMENT	\N	2014-07-27 20:56:32	2014-07-27 20:56:32
1030	28	216	A COMMENT	\N	2014-07-27 21:41:34	2014-07-27 21:41:34
1031	14	216	A COMMENT	\N	2014-07-28 04:57:58	2014-07-28 04:57:58
1032	10	216	A COMMENT	\N	2014-07-28 05:25:02	2014-07-28 05:25:02
1033	21	216	A COMMENT	\N	2014-07-28 06:41:58	2014-07-28 06:41:58
1034	14	216	A COMMENT	\N	2014-07-28 08:01:12	2014-07-28 08:01:12
1035	30	216	A COMMENT	\N	2014-07-28 14:06:59	2014-07-28 14:06:59
1036	8	216	A COMMENT	\N	2014-07-28 14:11:43	2014-07-28 14:11:43
1037	30	216	A COMMENT	\N	2014-07-28 14:46:31	2014-07-28 14:46:31
1038	4	216	A COMMENT	\N	2014-07-28 16:48:48	2014-07-28 16:48:48
1039	8	217	A COMMENT	\N	2014-07-27 13:54:49	2014-07-27 13:54:49
1040	47	217	A COMMENT	\N	2014-07-27 21:55:11	2014-07-27 21:55:11
1041	43	217	A COMMENT	\N	2014-07-28 00:57:33	2014-07-28 00:57:33
1042	28	217	A COMMENT	\N	2014-07-28 11:36:51	2014-07-28 11:36:51
1043	4	217	A COMMENT	\N	2014-07-28 16:16:15	2014-07-28 16:16:15
1044	43	218	A COMMENT	\N	2014-07-25 14:55:24	2014-07-25 14:55:24
1045	45	218	A COMMENT	\N	2014-07-26 18:48:19	2014-07-26 18:48:19
1046	47	218	A COMMENT	\N	2014-07-28 13:55:27	2014-07-28 13:55:27
1047	21	218	A COMMENT	\N	2014-07-28 15:30:25	2014-07-28 15:30:25
1048	10	219	A COMMENT	\N	2014-07-27 00:04:28	2014-07-27 00:04:28
1049	43	219	A COMMENT	\N	2014-07-27 03:34:54	2014-07-27 03:34:54
1050	2	219	A COMMENT	\N	2014-07-27 04:32:56	2014-07-27 04:32:56
1051	30	219	A COMMENT	\N	2014-07-27 04:51:28	2014-07-27 04:51:28
1052	14	219	A COMMENT	\N	2014-07-27 12:04:47	2014-07-27 12:04:47
1053	8	219	A COMMENT	\N	2014-07-27 15:59:17	2014-07-27 15:59:17
1054	28	219	A COMMENT	\N	2014-07-28 08:46:07	2014-07-28 08:46:07
1055	32	219	A COMMENT	\N	2014-07-28 14:37:04	2014-07-28 14:37:04
1056	27	220	A COMMENT	\N	2014-07-24 21:18:21	2014-07-24 21:18:21
1057	27	220	A COMMENT	\N	2014-07-27 03:41:11	2014-07-27 03:41:11
1058	3	221	A COMMENT	\N	2014-07-25 21:04:06	2014-07-25 21:04:06
1059	37	221	A COMMENT	\N	2014-07-26 05:51:12	2014-07-26 05:51:12
1060	47	221	A COMMENT	\N	2014-07-26 13:02:22	2014-07-26 13:02:22
1061	21	221	A COMMENT	\N	2014-07-26 13:57:47	2014-07-26 13:57:47
1062	39	221	A COMMENT	\N	2014-07-27 02:59:56	2014-07-27 02:59:56
1063	14	221	A COMMENT	\N	2014-07-28 04:52:19	2014-07-28 04:52:19
1064	2	221	A COMMENT	\N	2014-07-28 09:12:59	2014-07-28 09:12:59
1065	43	222	A COMMENT	\N	2014-07-25 19:13:33	2014-07-25 19:13:33
1066	27	222	A COMMENT	\N	2014-07-26 00:25:36	2014-07-26 00:25:36
1067	10	222	A COMMENT	\N	2014-07-26 04:55:03	2014-07-26 04:55:03
1068	43	222	A COMMENT	\N	2014-07-26 07:59:46	2014-07-26 07:59:46
1069	21	222	A COMMENT	\N	2014-07-26 16:27:56	2014-07-26 16:27:56
1070	21	222	A COMMENT	\N	2014-07-26 23:31:35	2014-07-26 23:31:35
1071	39	222	A COMMENT	\N	2014-07-27 00:40:31	2014-07-27 00:40:31
1072	37	222	A COMMENT	\N	2014-07-27 03:24:57	2014-07-27 03:24:57
1073	21	222	A COMMENT	\N	2014-07-28 00:20:36	2014-07-28 00:20:36
1074	43	223	A COMMENT	\N	2014-07-25 22:12:44	2014-07-25 22:12:44
1075	47	223	A COMMENT	\N	2014-07-27 05:20:43	2014-07-27 05:20:43
1076	27	225	A COMMENT	\N	2014-07-28 03:32:43	2014-07-28 03:32:43
1077	32	225	A COMMENT	\N	2014-07-28 07:26:43	2014-07-28 07:26:43
1078	30	225	A COMMENT	\N	2014-07-28 11:36:28	2014-07-28 11:36:28
1079	21	225	A COMMENT	\N	2014-07-28 13:01:15	2014-07-28 13:01:15
1080	43	226	A COMMENT	\N	2014-07-27 08:39:05	2014-07-27 08:39:05
1081	45	227	A COMMENT	\N	2014-01-19 07:50:55	2014-01-19 07:50:55
1082	14	227	A COMMENT	\N	2014-04-21 08:00:45	2014-04-21 08:00:45
1083	4	227	A COMMENT	\N	2014-05-07 05:53:39	2014-05-07 05:53:39
1084	27	227	A COMMENT	\N	2014-06-09 16:06:49	2014-06-09 16:06:49
1085	4	227	A COMMENT	\N	2014-06-26 16:18:06	2014-06-26 16:18:06
1086	45	229	A COMMENT	\N	2014-04-03 11:01:41	2014-04-03 11:01:41
1087	43	229	A COMMENT	\N	2014-04-09 02:53:53	2014-04-09 02:53:53
1088	27	229	A COMMENT	\N	2014-04-09 17:16:15	2014-04-09 17:16:15
1089	8	229	A COMMENT	\N	2014-04-14 22:17:32	2014-04-14 22:17:32
1090	32	229	A COMMENT	\N	2014-04-15 20:24:56	2014-04-15 20:24:56
1091	45	229	A COMMENT	\N	2014-04-29 04:07:19	2014-04-29 04:07:19
1092	14	229	A COMMENT	\N	2014-05-11 19:44:51	2014-05-11 19:44:51
1093	37	229	A COMMENT	\N	2014-05-13 03:33:30	2014-05-13 03:33:30
1094	4	229	A COMMENT	\N	2014-05-21 09:39:28	2014-05-21 09:39:28
1095	30	229	A COMMENT	\N	2014-05-21 13:56:51	2014-05-21 13:56:51
1096	21	229	A COMMENT	\N	2014-07-10 23:37:23	2014-07-10 23:37:23
1097	43	229	A COMMENT	\N	2014-07-13 06:20:56	2014-07-13 06:20:56
1098	47	229	A COMMENT	\N	2014-07-15 08:51:57	2014-07-15 08:51:57
1099	1	229	A COMMENT	\N	2014-07-21 08:11:17	2014-07-21 08:11:17
1100	4	230	A COMMENT	\N	2014-06-27 10:21:48	2014-06-27 10:21:48
1101	14	230	A COMMENT	\N	2014-07-07 00:16:14	2014-07-07 00:16:14
1102	8	230	A COMMENT	\N	2014-07-16 09:15:53	2014-07-16 09:15:53
1103	47	231	A COMMENT	\N	2014-05-21 07:44:52	2014-05-21 07:44:52
1104	21	231	A COMMENT	\N	2014-06-14 18:10:54	2014-06-14 18:10:54
1105	37	233	A COMMENT	\N	2014-06-15 09:49:35	2014-06-15 09:49:35
1106	32	233	A COMMENT	\N	2014-06-17 17:35:51	2014-06-17 17:35:51
1107	28	233	A COMMENT	\N	2014-06-27 15:37:44	2014-06-27 15:37:44
1108	32	233	A COMMENT	\N	2014-07-03 12:03:55	2014-07-03 12:03:55
1109	3	233	A COMMENT	\N	2014-07-12 15:20:03	2014-07-12 15:20:03
1110	27	233	A COMMENT	\N	2014-07-18 07:49:17	2014-07-18 07:49:17
1111	47	234	A COMMENT	\N	2014-07-12 14:45:06	2014-07-12 14:45:06
1112	43	234	A COMMENT	\N	2014-07-15 04:13:24	2014-07-15 04:13:24
1113	2	234	A COMMENT	\N	2014-07-17 02:06:20	2014-07-17 02:06:20
1114	3	234	A COMMENT	\N	2014-07-17 05:37:35	2014-07-17 05:37:35
1115	47	234	A COMMENT	\N	2014-07-21 14:52:39	2014-07-21 14:52:39
1116	10	235	A COMMENT	\N	2014-07-14 14:52:49	2014-07-14 14:52:49
1117	10	235	A COMMENT	\N	2014-07-14 23:32:14	2014-07-14 23:32:14
1118	4	235	A COMMENT	\N	2014-07-16 10:12:35	2014-07-16 10:12:35
1119	27	235	A COMMENT	\N	2014-07-23 16:06:43	2014-07-23 16:06:43
1120	8	236	A COMMENT	\N	2014-06-04 13:11:40	2014-06-04 13:11:40
1121	28	236	A COMMENT	\N	2014-06-20 18:12:30	2014-06-20 18:12:30
1122	32	236	A COMMENT	\N	2014-06-22 07:55:57	2014-06-22 07:55:57
1123	14	236	A COMMENT	\N	2014-07-21 02:12:56	2014-07-21 02:12:56
1124	37	236	A COMMENT	\N	2014-07-21 06:19:29	2014-07-21 06:19:29
1125	8	237	A COMMENT	\N	2014-07-05 02:47:15	2014-07-05 02:47:15
1126	28	237	A COMMENT	\N	2014-07-11 16:58:12	2014-07-11 16:58:12
1127	47	237	A COMMENT	\N	2014-07-22 07:20:34	2014-07-22 07:20:34
1128	37	238	A COMMENT	\N	2014-06-29 21:35:20	2014-06-29 21:35:20
1129	11	238	A COMMENT	\N	2014-07-17 11:17:50	2014-07-17 11:17:50
1130	10	239	A COMMENT	\N	2014-05-22 00:17:00	2014-05-22 00:17:00
1131	28	239	A COMMENT	\N	2014-06-16 09:54:41	2014-06-16 09:54:41
1132	45	239	A COMMENT	\N	2014-06-27 05:44:38	2014-06-27 05:44:38
1133	10	239	A COMMENT	\N	2014-06-30 18:44:18	2014-06-30 18:44:18
1134	47	240	A COMMENT	\N	2014-05-22 14:49:53	2014-05-22 14:49:53
1135	30	240	A COMMENT	\N	2014-06-13 08:32:44	2014-06-13 08:32:44
1136	45	240	A COMMENT	\N	2014-06-15 08:57:14	2014-06-15 08:57:14
1137	4	240	A COMMENT	\N	2014-06-19 14:54:02	2014-06-19 14:54:02
1138	28	240	A COMMENT	\N	2014-07-18 08:32:41	2014-07-18 08:32:41
1139	47	241	A COMMENT	\N	2014-06-15 15:50:03	2014-06-15 15:50:03
1140	27	241	A COMMENT	\N	2014-06-18 09:57:36	2014-06-18 09:57:36
1141	14	241	A COMMENT	\N	2014-06-21 23:40:49	2014-06-21 23:40:49
1142	4	241	A COMMENT	\N	2014-06-22 12:40:04	2014-06-22 12:40:04
1143	8	241	A COMMENT	\N	2014-07-08 23:46:48	2014-07-08 23:46:48
1144	21	241	A COMMENT	\N	2014-07-16 08:47:34	2014-07-16 08:47:34
1145	30	243	A COMMENT	\N	2014-06-16 03:52:58	2014-06-16 03:52:58
1146	8	243	A COMMENT	\N	2014-06-18 16:16:02	2014-06-18 16:16:02
1147	28	243	A COMMENT	\N	2014-07-19 15:21:39	2014-07-19 15:21:39
1148	43	243	A COMMENT	\N	2014-07-22 03:16:38	2014-07-22 03:16:38
1149	10	243	A COMMENT	\N	2014-07-27 05:04:09	2014-07-27 05:04:09
1150	47	244	A COMMENT	\N	2014-05-23 12:01:53	2014-05-23 12:01:53
1151	27	245	A COMMENT	\N	2014-06-01 22:51:48	2014-06-01 22:51:48
1152	2	245	A COMMENT	\N	2014-06-02 00:59:08	2014-06-02 00:59:08
1153	27	245	A COMMENT	\N	2014-06-02 14:58:32	2014-06-02 14:58:32
1154	4	245	A COMMENT	\N	2014-06-05 06:11:17	2014-06-05 06:11:17
1155	2	245	A COMMENT	\N	2014-06-07 04:11:19	2014-06-07 04:11:19
1156	21	245	A COMMENT	\N	2014-06-09 06:25:21	2014-06-09 06:25:21
1157	8	245	A COMMENT	\N	2014-06-10 06:45:24	2014-06-10 06:45:24
1158	30	245	A COMMENT	\N	2014-06-15 13:15:21	2014-06-15 13:15:21
1159	39	245	A COMMENT	\N	2014-06-20 10:07:07	2014-06-20 10:07:07
1160	21	245	A COMMENT	\N	2014-06-21 21:40:25	2014-06-21 21:40:25
1161	32	245	A COMMENT	\N	2014-07-02 03:26:12	2014-07-02 03:26:12
1162	14	245	A COMMENT	\N	2014-07-10 15:32:43	2014-07-10 15:32:43
1163	39	245	A COMMENT	\N	2014-07-12 11:19:36	2014-07-12 11:19:36
1164	30	245	A COMMENT	\N	2014-07-17 02:55:05	2014-07-17 02:55:05
1165	11	245	A COMMENT	\N	2014-07-19 11:46:00	2014-07-19 11:46:00
1166	43	245	A COMMENT	\N	2014-07-21 16:58:29	2014-07-21 16:58:29
1167	4	245	A COMMENT	\N	2014-07-23 16:14:27	2014-07-23 16:14:27
1168	21	245	A COMMENT	\N	2014-07-28 04:48:19	2014-07-28 04:48:19
1169	47	247	A COMMENT	\N	2014-06-28 08:31:22	2014-06-28 08:31:22
1170	1	247	A COMMENT	\N	2014-07-03 21:49:04	2014-07-03 21:49:04
1171	28	247	A COMMENT	\N	2014-07-09 08:12:32	2014-07-09 08:12:32
1172	21	247	A COMMENT	\N	2014-07-10 08:02:17	2014-07-10 08:02:17
1173	45	247	A COMMENT	\N	2014-07-15 04:53:44	2014-07-15 04:53:44
1174	43	247	A COMMENT	\N	2014-07-15 10:51:59	2014-07-15 10:51:59
1175	45	247	A COMMENT	\N	2014-07-16 10:42:09	2014-07-16 10:42:09
1176	32	247	A COMMENT	\N	2014-07-18 17:40:16	2014-07-18 17:40:16
1177	45	247	A COMMENT	\N	2014-07-18 19:44:20	2014-07-18 19:44:20
1178	8	247	A COMMENT	\N	2014-07-23 12:14:20	2014-07-23 12:14:20
1179	14	247	A COMMENT	\N	2014-07-25 17:40:55	2014-07-25 17:40:55
1180	47	248	A COMMENT	\N	2014-07-16 05:16:06	2014-07-16 05:16:06
1181	32	248	A COMMENT	\N	2014-07-23 22:40:05	2014-07-23 22:40:05
1182	47	249	A COMMENT	\N	2014-07-16 10:54:03	2014-07-16 10:54:03
1183	10	249	A COMMENT	\N	2014-07-17 03:55:51	2014-07-17 03:55:51
1184	3	249	A COMMENT	\N	2014-07-17 08:34:04	2014-07-17 08:34:04
1185	28	249	A COMMENT	\N	2014-07-17 23:42:14	2014-07-17 23:42:14
1186	4	249	A COMMENT	\N	2014-07-18 21:45:53	2014-07-18 21:45:53
1187	3	249	A COMMENT	\N	2014-07-19 02:48:59	2014-07-19 02:48:59
1188	1	249	A COMMENT	\N	2014-07-21 12:58:13	2014-07-21 12:58:13
1189	32	249	A COMMENT	\N	2014-07-22 07:36:21	2014-07-22 07:36:21
1190	1	249	A COMMENT	\N	2014-07-23 05:49:14	2014-07-23 05:49:14
1191	2	249	A COMMENT	\N	2014-07-28 13:12:11	2014-07-28 13:12:11
1192	27	249	A COMMENT	\N	2014-07-28 15:55:00	2014-07-28 15:55:00
1193	47	250	A COMMENT	\N	2014-07-21 19:30:20	2014-07-21 19:30:20
1194	28	250	A COMMENT	\N	2014-07-22 13:12:06	2014-07-22 13:12:06
1195	39	250	A COMMENT	\N	2014-07-22 17:17:01	2014-07-22 17:17:01
1196	8	250	A COMMENT	\N	2014-07-23 05:18:08	2014-07-23 05:18:08
1197	47	250	A COMMENT	\N	2014-07-23 15:18:18	2014-07-23 15:18:18
1198	8	250	A COMMENT	\N	2014-07-23 18:05:28	2014-07-23 18:05:28
1199	21	250	A COMMENT	\N	2014-07-23 21:21:34	2014-07-23 21:21:34
1200	39	250	A COMMENT	\N	2014-07-24 03:12:30	2014-07-24 03:12:30
1201	10	250	A COMMENT	\N	2014-07-24 14:34:46	2014-07-24 14:34:46
1202	37	250	A COMMENT	\N	2014-07-25 06:27:51	2014-07-25 06:27:51
1203	3	250	A COMMENT	\N	2014-07-25 21:46:52	2014-07-25 21:46:52
1204	43	250	A COMMENT	\N	2014-07-26 01:31:04	2014-07-26 01:31:04
1205	11	250	A COMMENT	\N	2014-07-27 07:08:01	2014-07-27 07:08:01
1206	28	250	A COMMENT	\N	2014-07-27 12:10:39	2014-07-27 12:10:39
1207	1	250	A COMMENT	\N	2014-07-27 14:44:07	2014-07-27 14:44:07
1208	3	250	A COMMENT	\N	2014-07-28 01:14:21	2014-07-28 01:14:21
1209	4	251	A COMMENT	\N	2014-06-06 08:19:14	2014-06-06 08:19:14
1210	8	251	A COMMENT	\N	2014-06-18 04:47:10	2014-06-18 04:47:10
1211	37	251	A COMMENT	\N	2014-07-04 13:34:10	2014-07-04 13:34:10
1212	1	251	A COMMENT	\N	2014-07-25 08:30:32	2014-07-25 08:30:32
1213	4	253	A COMMENT	\N	2014-07-04 03:51:11	2014-07-04 03:51:11
1214	45	254	A COMMENT	\N	2014-07-19 00:51:42	2014-07-19 00:51:42
1215	28	254	A COMMENT	\N	2014-07-25 16:19:29	2014-07-25 16:19:29
1216	4	255	A COMMENT	\N	2014-07-16 07:56:59	2014-07-16 07:56:59
1217	27	255	A COMMENT	\N	2014-07-25 10:10:48	2014-07-25 10:10:48
1218	1	255	A COMMENT	\N	2014-07-27 07:07:32	2014-07-27 07:07:32
1219	47	256	A COMMENT	\N	2014-06-03 21:21:38	2014-06-03 21:21:38
1220	10	258	A COMMENT	\N	2014-07-07 02:16:24	2014-07-07 02:16:24
1221	43	258	A COMMENT	\N	2014-07-09 21:59:18	2014-07-09 21:59:18
1222	47	259	A COMMENT	\N	2014-05-19 09:46:03	2014-05-19 09:46:03
1223	2	259	A COMMENT	\N	2014-05-26 01:40:22	2014-05-26 01:40:22
1224	37	259	A COMMENT	\N	2014-07-04 00:07:35	2014-07-04 00:07:35
1225	47	261	A COMMENT	\N	2014-07-05 13:50:25	2014-07-05 13:50:25
1226	14	261	A COMMENT	\N	2014-07-06 14:18:05	2014-07-06 14:18:05
1227	43	261	A COMMENT	\N	2014-07-10 23:55:27	2014-07-10 23:55:27
1228	32	261	A COMMENT	\N	2014-07-12 01:37:05	2014-07-12 01:37:05
1229	47	261	A COMMENT	\N	2014-07-17 17:23:34	2014-07-17 17:23:34
1230	27	261	A COMMENT	\N	2014-07-21 06:33:58	2014-07-21 06:33:58
1231	47	262	A COMMENT	\N	2014-05-23 06:18:02	2014-05-23 06:18:02
1232	47	263	A COMMENT	\N	2014-05-22 20:29:18	2014-05-22 20:29:18
1233	32	263	A COMMENT	\N	2014-06-17 14:33:42	2014-06-17 14:33:42
1234	37	263	A COMMENT	\N	2014-06-23 02:27:43	2014-06-23 02:27:43
1235	28	264	A COMMENT	\N	2014-06-11 13:28:17	2014-06-11 13:28:17
1236	8	264	A COMMENT	\N	2014-07-25 06:12:57	2014-07-25 06:12:57
1237	4	264	A COMMENT	\N	2014-07-25 18:28:11	2014-07-25 18:28:11
1238	47	265	A COMMENT	\N	2014-06-13 01:22:46	2014-06-13 01:22:46
1239	27	268	A COMMENT	\N	2014-07-01 01:55:04	2014-07-01 01:55:04
1240	8	268	A COMMENT	\N	2014-07-02 14:00:01	2014-07-02 14:00:01
1241	14	268	A COMMENT	\N	2014-07-09 04:17:33	2014-07-09 04:17:33
1242	21	268	A COMMENT	\N	2014-07-09 06:18:55	2014-07-09 06:18:55
1243	32	268	A COMMENT	\N	2014-07-13 04:16:17	2014-07-13 04:16:17
1244	39	268	A COMMENT	\N	2014-07-13 23:35:30	2014-07-13 23:35:30
1245	32	268	A COMMENT	\N	2014-07-16 15:20:06	2014-07-16 15:20:06
1246	37	268	A COMMENT	\N	2014-07-17 03:09:13	2014-07-17 03:09:13
1247	45	268	A COMMENT	\N	2014-07-18 18:26:17	2014-07-18 18:26:17
1248	47	268	A COMMENT	\N	2014-07-22 11:59:07	2014-07-22 11:59:07
1249	30	270	A COMMENT	\N	2014-06-04 11:14:46	2014-06-04 11:14:46
1250	10	271	A COMMENT	\N	2014-06-05 19:50:47	2014-06-05 19:50:47
1251	39	271	A COMMENT	\N	2014-06-24 05:28:12	2014-06-24 05:28:12
1252	30	271	A COMMENT	\N	2014-07-14 07:10:33	2014-07-14 07:10:33
1253	27	271	A COMMENT	\N	2014-07-23 10:35:40	2014-07-23 10:35:40
1254	37	274	A COMMENT	\N	2014-07-25 15:23:29	2014-07-25 15:23:29
1255	47	275	A COMMENT	\N	2014-06-21 07:05:25	2014-06-21 07:05:25
1256	2	276	A COMMENT	\N	2014-06-19 13:59:52	2014-06-19 13:59:52
1257	1	276	A COMMENT	\N	2014-07-22 14:57:35	2014-07-22 14:57:35
1258	47	277	A COMMENT	\N	2014-07-02 23:16:19	2014-07-02 23:16:19
1259	10	277	A COMMENT	\N	2014-07-03 13:58:44	2014-07-03 13:58:44
1260	2	277	A COMMENT	\N	2014-07-16 06:34:34	2014-07-16 06:34:34
1261	43	277	A COMMENT	\N	2014-07-17 22:37:42	2014-07-17 22:37:42
1262	43	277	A COMMENT	\N	2014-07-19 11:17:04	2014-07-19 11:17:04
1263	3	277	A COMMENT	\N	2014-07-24 08:20:43	2014-07-24 08:20:43
1264	8	279	A COMMENT	\N	2014-07-21 01:21:02	2014-07-21 01:21:02
1265	47	280	A COMMENT	\N	2014-06-02 12:45:14	2014-06-02 12:45:14
1266	1	280	A COMMENT	\N	2014-06-08 11:00:04	2014-06-08 11:00:04
1267	11	280	A COMMENT	\N	2014-06-14 20:21:03	2014-06-14 20:21:03
1268	21	280	A COMMENT	\N	2014-06-15 05:23:36	2014-06-15 05:23:36
1269	11	280	A COMMENT	\N	2014-06-24 03:39:58	2014-06-24 03:39:58
1270	2	280	A COMMENT	\N	2014-07-01 00:57:12	2014-07-01 00:57:12
1271	37	280	A COMMENT	\N	2014-07-04 14:29:12	2014-07-04 14:29:12
1272	28	280	A COMMENT	\N	2014-07-04 15:50:24	2014-07-04 15:50:24
1273	8	280	A COMMENT	\N	2014-07-16 02:15:19	2014-07-16 02:15:19
1274	4	280	A COMMENT	\N	2014-07-17 13:56:05	2014-07-17 13:56:05
1275	28	280	A COMMENT	\N	2014-07-18 22:03:00	2014-07-18 22:03:00
1276	14	280	A COMMENT	\N	2014-07-22 03:05:28	2014-07-22 03:05:28
1277	3	280	A COMMENT	\N	2014-07-26 07:48:21	2014-07-26 07:48:21
1278	37	280	A COMMENT	\N	2014-07-26 10:03:48	2014-07-26 10:03:48
1279	47	281	A COMMENT	\N	2014-05-25 11:02:56	2014-05-25 11:02:56
1280	39	281	A COMMENT	\N	2014-06-28 03:00:20	2014-06-28 03:00:20
1281	3	281	A COMMENT	\N	2014-07-23 07:28:40	2014-07-23 07:28:40
1282	8	282	A COMMENT	\N	2014-06-08 02:21:36	2014-06-08 02:21:36
1283	45	282	A COMMENT	\N	2014-06-11 23:39:27	2014-06-11 23:39:27
1284	3	282	A COMMENT	\N	2014-06-13 21:15:38	2014-06-13 21:15:38
1285	8	282	A COMMENT	\N	2014-06-15 00:22:32	2014-06-15 00:22:32
1286	39	282	A COMMENT	\N	2014-06-19 03:20:02	2014-06-19 03:20:02
1287	27	282	A COMMENT	\N	2014-06-20 22:37:29	2014-06-20 22:37:29
1288	32	282	A COMMENT	\N	2014-06-23 18:49:07	2014-06-23 18:49:07
1289	47	282	A COMMENT	\N	2014-06-26 23:49:53	2014-06-26 23:49:53
1290	21	282	A COMMENT	\N	2014-06-29 10:12:58	2014-06-29 10:12:58
1291	28	282	A COMMENT	\N	2014-07-01 09:05:53	2014-07-01 09:05:53
1292	1	282	A COMMENT	\N	2014-07-05 05:45:30	2014-07-05 05:45:30
1293	43	282	A COMMENT	\N	2014-07-07 09:07:50	2014-07-07 09:07:50
1294	47	282	A COMMENT	\N	2014-07-11 15:38:49	2014-07-11 15:38:49
1295	10	282	A COMMENT	\N	2014-07-24 03:26:05	2014-07-24 03:26:05
1296	11	282	A COMMENT	\N	2014-07-28 17:20:30	2014-07-28 17:20:30
1297	14	283	A COMMENT	\N	2014-06-29 03:29:09	2014-06-29 03:29:09
1298	47	283	A COMMENT	\N	2014-06-30 01:51:10	2014-06-30 01:51:10
1299	21	283	A COMMENT	\N	2014-07-01 20:59:15	2014-07-01 20:59:15
1300	11	283	A COMMENT	\N	2014-07-02 03:33:39	2014-07-02 03:33:39
1301	37	283	A COMMENT	\N	2014-07-05 12:08:54	2014-07-05 12:08:54
1302	11	283	A COMMENT	\N	2014-07-06 21:43:54	2014-07-06 21:43:54
1303	1	283	A COMMENT	\N	2014-07-08 02:17:56	2014-07-08 02:17:56
1304	28	283	A COMMENT	\N	2014-07-08 06:47:03	2014-07-08 06:47:03
1305	30	283	A COMMENT	\N	2014-07-11 04:37:31	2014-07-11 04:37:31
1306	47	283	A COMMENT	\N	2014-07-11 14:11:04	2014-07-11 14:11:04
1307	45	283	A COMMENT	\N	2014-07-15 15:19:11	2014-07-15 15:19:11
1308	4	283	A COMMENT	\N	2014-07-15 22:30:40	2014-07-15 22:30:40
1309	3	283	A COMMENT	\N	2014-07-15 22:52:21	2014-07-15 22:52:21
1310	28	283	A COMMENT	\N	2014-07-16 04:53:19	2014-07-16 04:53:19
1311	27	283	A COMMENT	\N	2014-07-22 18:07:48	2014-07-22 18:07:48
1312	11	283	A COMMENT	\N	2014-07-24 00:29:27	2014-07-24 00:29:27
1313	2	283	A COMMENT	\N	2014-07-24 08:17:41	2014-07-24 08:17:41
1314	39	283	A COMMENT	\N	2014-07-24 22:55:32	2014-07-24 22:55:32
1315	3	283	A COMMENT	\N	2014-07-27 07:54:50	2014-07-27 07:54:50
1316	32	283	A COMMENT	\N	2014-07-27 14:24:14	2014-07-27 14:24:14
1317	47	285	A COMMENT	\N	2014-05-15 22:45:47	2014-05-15 22:45:47
1318	47	286	A COMMENT	\N	2014-07-11 08:41:37	2014-07-11 08:41:37
1319	39	286	A COMMENT	\N	2014-07-18 05:26:43	2014-07-18 05:26:43
1320	28	286	A COMMENT	\N	2014-07-25 06:07:19	2014-07-25 06:07:19
1321	47	287	A COMMENT	\N	2014-05-24 15:55:45	2014-05-24 15:55:45
1322	14	287	A COMMENT	\N	2014-05-25 22:45:25	2014-05-25 22:45:25
1323	14	287	A COMMENT	\N	2014-06-01 10:01:42	2014-06-01 10:01:42
1324	39	287	A COMMENT	\N	2014-06-02 17:36:01	2014-06-02 17:36:01
1325	21	287	A COMMENT	\N	2014-06-16 04:46:46	2014-06-16 04:46:46
1326	45	287	A COMMENT	\N	2014-07-03 12:14:41	2014-07-03 12:14:41
1327	47	289	A COMMENT	\N	2014-05-27 03:04:20	2014-05-27 03:04:20
1328	39	289	A COMMENT	\N	2014-06-03 14:37:34	2014-06-03 14:37:34
1329	8	289	A COMMENT	\N	2014-06-05 08:05:33	2014-06-05 08:05:33
1330	10	289	A COMMENT	\N	2014-06-14 06:02:00	2014-06-14 06:02:00
1331	37	289	A COMMENT	\N	2014-06-23 00:14:54	2014-06-23 00:14:54
1332	11	289	A COMMENT	\N	2014-07-05 19:51:30	2014-07-05 19:51:30
1333	11	289	A COMMENT	\N	2014-07-21 11:43:53	2014-07-21 11:43:53
1334	39	289	A COMMENT	\N	2014-07-25 15:13:46	2014-07-25 15:13:46
1335	47	290	A COMMENT	\N	2014-06-29 13:40:08	2014-06-29 13:40:08
1336	45	290	A COMMENT	\N	2014-07-05 08:11:08	2014-07-05 08:11:08
1337	4	290	A COMMENT	\N	2014-07-05 09:28:05	2014-07-05 09:28:05
1338	10	290	A COMMENT	\N	2014-07-07 06:10:34	2014-07-07 06:10:34
1339	39	290	A COMMENT	\N	2014-07-25 04:24:24	2014-07-25 04:24:24
1340	37	292	A COMMENT	\N	2014-06-24 21:40:46	2014-06-24 21:40:46
1341	45	293	A COMMENT	\N	2014-06-12 08:27:03	2014-06-12 08:27:03
1342	27	293	A COMMENT	\N	2014-06-19 14:55:18	2014-06-19 14:55:18
1343	37	295	A COMMENT	\N	2014-07-28 02:03:18	2014-07-28 02:03:18
1344	25	296	A COMMENT	\N	2014-05-25 11:05:18	2014-05-25 11:05:18
1345	3	296	A COMMENT	\N	2014-06-01 01:21:03	2014-06-01 01:21:03
1346	39	296	A COMMENT	\N	2014-07-03 01:08:27	2014-07-03 01:08:27
1347	37	297	A COMMENT	\N	2014-07-23 09:18:21	2014-07-23 09:18:21
1348	37	298	A COMMENT	\N	2014-02-10 07:55:25	2014-02-10 07:55:25
1349	2	298	A COMMENT	\N	2014-02-16 23:52:24	2014-02-16 23:52:24
1350	45	298	A COMMENT	\N	2014-02-17 23:16:27	2014-02-17 23:16:27
1351	37	298	A COMMENT	\N	2014-03-29 02:52:52	2014-03-29 02:52:52
1352	37	298	A COMMENT	\N	2014-04-26 14:00:17	2014-04-26 14:00:17
1353	21	298	A COMMENT	\N	2014-04-28 12:37:34	2014-04-28 12:37:34
1354	28	298	A COMMENT	\N	2014-04-30 23:33:50	2014-04-30 23:33:50
1355	4	299	A COMMENT	\N	2014-03-10 05:06:41	2014-03-10 05:06:41
1356	37	299	A COMMENT	\N	2014-05-21 13:05:56	2014-05-21 13:05:56
1357	14	299	A COMMENT	\N	2014-05-29 01:31:58	2014-05-29 01:31:58
1358	22	300	A COMMENT	\N	2014-03-11 10:03:10	2014-03-11 10:03:10
1359	22	301	A COMMENT	\N	2014-03-19 03:13:08	2014-03-19 03:13:08
1360	4	301	A COMMENT	\N	2014-04-16 11:14:43	2014-04-16 11:14:43
1361	21	301	A COMMENT	\N	2014-04-30 13:35:40	2014-04-30 13:35:40
1362	32	301	A COMMENT	\N	2014-05-30 14:31:20	2014-05-30 14:31:20
1363	28	301	A COMMENT	\N	2014-06-21 08:29:18	2014-06-21 08:29:18
1364	30	301	A COMMENT	\N	2014-07-06 04:03:05	2014-07-06 04:03:05
1365	22	302	A COMMENT	\N	2014-05-16 10:38:45	2014-05-16 10:38:45
1366	32	302	A COMMENT	\N	2014-06-22 18:30:37	2014-06-22 18:30:37
1367	32	302	A COMMENT	\N	2014-06-30 04:30:25	2014-06-30 04:30:25
1368	3	302	A COMMENT	\N	2014-07-15 15:29:54	2014-07-15 15:29:54
1369	27	302	A COMMENT	\N	2014-07-26 16:06:15	2014-07-26 16:06:15
1370	4	303	A COMMENT	\N	2014-06-05 20:50:08	2014-06-05 20:50:08
1371	39	303	A COMMENT	\N	2014-07-20 00:12:10	2014-07-20 00:12:10
1372	45	304	A COMMENT	\N	2014-07-08 19:40:41	2014-07-08 19:40:41
1373	28	305	A COMMENT	\N	2014-05-30 04:47:03	2014-05-30 04:47:03
1374	10	305	A COMMENT	\N	2014-06-13 21:21:42	2014-06-13 21:21:42
1375	10	305	A COMMENT	\N	2014-07-06 04:26:45	2014-07-06 04:26:45
1376	43	305	A COMMENT	\N	2014-07-22 01:34:18	2014-07-22 01:34:18
1377	14	305	A COMMENT	\N	2014-07-27 14:03:43	2014-07-27 14:03:43
1378	22	306	A COMMENT	\N	2014-02-25 19:09:00	2014-02-25 19:09:00
1379	11	306	A COMMENT	\N	2014-03-07 03:45:44	2014-03-07 03:45:44
1380	47	306	A COMMENT	\N	2014-03-14 15:25:06	2014-03-14 15:25:06
1381	1	306	A COMMENT	\N	2014-03-31 06:33:10	2014-03-31 06:33:10
1382	10	306	A COMMENT	\N	2014-04-22 22:15:56	2014-04-22 22:15:56
1383	8	306	A COMMENT	\N	2014-06-15 05:22:59	2014-06-15 05:22:59
1384	1	306	A COMMENT	\N	2014-06-21 21:01:33	2014-06-21 21:01:33
1385	45	306	A COMMENT	\N	2014-07-09 06:07:42	2014-07-09 06:07:42
1386	21	307	A COMMENT	\N	2014-03-08 18:40:06	2014-03-08 18:40:06
1387	45	307	A COMMENT	\N	2014-04-01 22:33:20	2014-04-01 22:33:20
1388	32	307	A COMMENT	\N	2014-04-04 06:13:53	2014-04-04 06:13:53
1389	43	307	A COMMENT	\N	2014-04-07 19:43:12	2014-04-07 19:43:12
1390	30	307	A COMMENT	\N	2014-04-26 22:04:17	2014-04-26 22:04:17
1391	28	307	A COMMENT	\N	2014-04-29 13:08:05	2014-04-29 13:08:05
1392	45	307	A COMMENT	\N	2014-04-29 14:37:54	2014-04-29 14:37:54
1393	10	307	A COMMENT	\N	2014-05-06 21:12:42	2014-05-06 21:12:42
1394	45	307	A COMMENT	\N	2014-05-31 08:39:53	2014-05-31 08:39:53
1395	14	307	A COMMENT	\N	2014-06-03 06:26:58	2014-06-03 06:26:58
1396	47	307	A COMMENT	\N	2014-06-03 18:17:16	2014-06-03 18:17:16
1397	21	307	A COMMENT	\N	2014-07-03 16:39:44	2014-07-03 16:39:44
1398	22	308	A COMMENT	\N	2014-06-14 17:56:46	2014-06-14 17:56:46
1399	43	309	A COMMENT	\N	2014-05-05 12:40:04	2014-05-05 12:40:04
1400	2	309	A COMMENT	\N	2014-05-19 14:23:28	2014-05-19 14:23:28
1401	45	309	A COMMENT	\N	2014-06-06 12:30:45	2014-06-06 12:30:45
1402	47	309	A COMMENT	\N	2014-07-12 05:13:30	2014-07-12 05:13:30
1403	22	310	A COMMENT	\N	2014-05-02 13:04:30	2014-05-02 13:04:30
1404	14	310	A COMMENT	\N	2014-06-30 02:41:05	2014-06-30 02:41:05
1405	22	312	A COMMENT	\N	2014-03-19 04:35:51	2014-03-19 04:35:51
1406	10	312	A COMMENT	\N	2014-03-21 04:02:14	2014-03-21 04:02:14
1407	1	312	A COMMENT	\N	2014-04-12 18:14:18	2014-04-12 18:14:18
1408	2	312	A COMMENT	\N	2014-04-13 01:39:54	2014-04-13 01:39:54
1409	28	312	A COMMENT	\N	2014-04-16 14:05:26	2014-04-16 14:05:26
1410	8	312	A COMMENT	\N	2014-04-20 00:17:51	2014-04-20 00:17:51
1411	45	312	A COMMENT	\N	2014-05-16 18:29:19	2014-05-16 18:29:19
1412	30	312	A COMMENT	\N	2014-06-24 14:56:04	2014-06-24 14:56:04
1413	21	312	A COMMENT	\N	2014-06-26 17:43:13	2014-06-26 17:43:13
1414	11	312	A COMMENT	\N	2014-07-09 03:39:10	2014-07-09 03:39:10
1415	14	312	A COMMENT	\N	2014-07-24 00:03:50	2014-07-24 00:03:50
1416	30	313	A COMMENT	\N	2014-04-29 23:52:34	2014-04-29 23:52:34
1417	8	313	A COMMENT	\N	2014-06-22 21:21:15	2014-06-22 21:21:15
1418	21	313	A COMMENT	\N	2014-07-07 01:52:54	2014-07-07 01:52:54
1419	10	313	A COMMENT	\N	2014-07-09 15:35:20	2014-07-09 15:35:20
1420	11	313	A COMMENT	\N	2014-07-12 14:25:50	2014-07-12 14:25:50
1421	47	314	A COMMENT	\N	2014-05-06 20:36:04	2014-05-06 20:36:04
1422	3	314	A COMMENT	\N	2014-05-10 08:24:37	2014-05-10 08:24:37
1423	4	314	A COMMENT	\N	2014-05-17 01:01:28	2014-05-17 01:01:28
1424	3	314	A COMMENT	\N	2014-05-20 20:13:47	2014-05-20 20:13:47
1425	30	314	A COMMENT	\N	2014-05-20 21:07:33	2014-05-20 21:07:33
1426	45	314	A COMMENT	\N	2014-06-19 09:51:13	2014-06-19 09:51:13
1427	1	314	A COMMENT	\N	2014-07-06 23:57:20	2014-07-06 23:57:20
1428	37	314	A COMMENT	\N	2014-07-08 08:17:55	2014-07-08 08:17:55
1429	32	314	A COMMENT	\N	2014-07-13 01:56:12	2014-07-13 01:56:12
1430	30	314	A COMMENT	\N	2014-07-27 13:18:34	2014-07-27 13:18:34
1431	22	315	A COMMENT	\N	2014-04-01 18:07:22	2014-04-01 18:07:22
1432	3	315	A COMMENT	\N	2014-04-06 11:39:59	2014-04-06 11:39:59
1433	2	315	A COMMENT	\N	2014-05-18 22:12:30	2014-05-18 22:12:30
1434	22	316	A COMMENT	\N	2014-04-11 15:11:40	2014-04-11 15:11:40
1435	30	316	A COMMENT	\N	2014-06-05 08:09:46	2014-06-05 08:09:46
1436	32	316	A COMMENT	\N	2014-06-11 11:19:59	2014-06-11 11:19:59
1437	27	316	A COMMENT	\N	2014-06-29 02:02:27	2014-06-29 02:02:27
1438	11	317	A COMMENT	\N	2014-04-06 01:02:58	2014-04-06 01:02:58
1439	1	317	A COMMENT	\N	2014-06-08 13:22:05	2014-06-08 13:22:05
1440	11	317	A COMMENT	\N	2014-06-16 09:38:19	2014-06-16 09:38:19
1441	27	317	A COMMENT	\N	2014-06-18 01:57:46	2014-06-18 01:57:46
1442	21	317	A COMMENT	\N	2014-07-19 10:38:37	2014-07-19 10:38:37
1443	22	318	A COMMENT	\N	2014-05-02 01:49:32	2014-05-02 01:49:32
1444	14	318	A COMMENT	\N	2014-05-09 14:46:01	2014-05-09 14:46:01
1445	27	318	A COMMENT	\N	2014-05-20 09:22:33	2014-05-20 09:22:33
1446	21	318	A COMMENT	\N	2014-06-02 02:59:43	2014-06-02 02:59:43
1447	27	318	A COMMENT	\N	2014-07-24 23:52:34	2014-07-24 23:52:34
1448	4	318	A COMMENT	\N	2014-07-26 02:13:13	2014-07-26 02:13:13
1449	43	319	A COMMENT	\N	2014-07-04 23:34:29	2014-07-04 23:34:29
1450	45	320	A COMMENT	\N	2014-05-05 18:14:18	2014-05-05 18:14:18
1451	11	320	A COMMENT	\N	2014-05-11 19:27:41	2014-05-11 19:27:41
1452	47	320	A COMMENT	\N	2014-05-27 04:24:21	2014-05-27 04:24:21
1453	27	320	A COMMENT	\N	2014-06-04 04:39:57	2014-06-04 04:39:57
1454	30	320	A COMMENT	\N	2014-06-28 08:29:13	2014-06-28 08:29:13
1455	43	320	A COMMENT	\N	2014-06-30 18:13:06	2014-06-30 18:13:06
1456	47	320	A COMMENT	\N	2014-07-01 03:16:11	2014-07-01 03:16:11
1457	30	320	A COMMENT	\N	2014-07-03 09:04:35	2014-07-03 09:04:35
1458	3	320	A COMMENT	\N	2014-07-24 15:11:11	2014-07-24 15:11:11
1459	22	321	A COMMENT	\N	2014-05-07 15:28:05	2014-05-07 15:28:05
1460	8	321	A COMMENT	\N	2014-05-09 15:49:02	2014-05-09 15:49:02
1461	30	321	A COMMENT	\N	2014-06-08 10:56:33	2014-06-08 10:56:33
1462	37	321	A COMMENT	\N	2014-06-10 00:42:18	2014-06-10 00:42:18
1463	27	321	A COMMENT	\N	2014-07-22 12:17:27	2014-07-22 12:17:27
1464	10	322	A COMMENT	\N	2014-03-16 11:08:10	2014-03-16 11:08:10
1465	21	322	A COMMENT	\N	2014-04-08 08:48:39	2014-04-08 08:48:39
1466	47	322	A COMMENT	\N	2014-04-11 00:42:58	2014-04-11 00:42:58
1467	8	322	A COMMENT	\N	2014-04-21 04:49:51	2014-04-21 04:49:51
1468	27	322	A COMMENT	\N	2014-06-25 18:34:49	2014-06-25 18:34:49
1469	28	323	A COMMENT	\N	2014-05-12 01:18:37	2014-05-12 01:18:37
1470	3	323	A COMMENT	\N	2014-05-29 06:11:17	2014-05-29 06:11:17
1471	22	324	A COMMENT	\N	2014-06-19 19:45:19	2014-06-19 19:45:19
1472	10	324	A COMMENT	\N	2014-07-06 10:25:09	2014-07-06 10:25:09
1473	21	324	A COMMENT	\N	2014-07-12 03:02:13	2014-07-12 03:02:13
1474	32	325	A COMMENT	\N	2014-04-03 06:11:44	2014-04-03 06:11:44
1475	14	325	A COMMENT	\N	2014-04-09 15:22:14	2014-04-09 15:22:14
1476	30	325	A COMMENT	\N	2014-04-24 10:23:38	2014-04-24 10:23:38
1477	14	325	A COMMENT	\N	2014-06-29 00:50:22	2014-06-29 00:50:22
1478	28	325	A COMMENT	\N	2014-06-29 07:20:45	2014-06-29 07:20:45
1479	2	326	A COMMENT	\N	2014-04-11 20:38:33	2014-04-11 20:38:33
1480	22	327	A COMMENT	\N	2014-05-19 03:45:46	2014-05-19 03:45:46
1481	3	327	A COMMENT	\N	2014-05-29 21:59:40	2014-05-29 21:59:40
1482	1	327	A COMMENT	\N	2014-06-06 03:02:31	2014-06-06 03:02:31
1483	2	327	A COMMENT	\N	2014-06-11 14:10:22	2014-06-11 14:10:22
1484	4	327	A COMMENT	\N	2014-06-14 17:31:48	2014-06-14 17:31:48
1485	4	327	A COMMENT	\N	2014-06-29 02:15:01	2014-06-29 02:15:01
1486	10	327	A COMMENT	\N	2014-07-01 00:09:55	2014-07-01 00:09:55
1487	27	327	A COMMENT	\N	2014-07-17 19:32:46	2014-07-17 19:32:46
1488	2	327	A COMMENT	\N	2014-07-20 03:27:18	2014-07-20 03:27:18
1489	37	328	A COMMENT	\N	2014-07-06 17:26:27	2014-07-06 17:26:27
1490	21	329	A COMMENT	\N	2014-07-16 16:55:42	2014-07-16 16:55:42
1491	8	329	A COMMENT	\N	2014-07-18 22:28:23	2014-07-18 22:28:23
1492	43	329	A COMMENT	\N	2014-07-26 02:44:41	2014-07-26 02:44:41
1493	22	330	A COMMENT	\N	2014-02-15 09:00:34	2014-02-15 09:00:34
1494	22	331	A COMMENT	\N	2014-02-21 07:04:06	2014-02-21 07:04:06
1495	39	331	A COMMENT	\N	2014-03-18 10:11:03	2014-03-18 10:11:03
1496	37	331	A COMMENT	\N	2014-04-09 22:00:47	2014-04-09 22:00:47
1497	4	331	A COMMENT	\N	2014-06-05 23:30:51	2014-06-05 23:30:51
1498	1	331	A COMMENT	\N	2014-06-17 09:46:15	2014-06-17 09:46:15
1499	39	331	A COMMENT	\N	2014-07-05 06:01:43	2014-07-05 06:01:43
1500	21	333	A COMMENT	\N	2014-05-25 14:45:12	2014-05-25 14:45:12
1501	1	333	A COMMENT	\N	2014-07-04 15:36:21	2014-07-04 15:36:21
1502	22	334	A COMMENT	\N	2014-02-05 16:02:16	2014-02-05 16:02:16
1503	10	335	A COMMENT	\N	2014-07-07 22:49:30	2014-07-07 22:49:30
1504	2	336	A COMMENT	\N	2014-04-09 01:29:29	2014-04-09 01:29:29
1505	11	336	A COMMENT	\N	2014-04-09 16:44:36	2014-04-09 16:44:36
1506	21	336	A COMMENT	\N	2014-04-14 05:23:33	2014-04-14 05:23:33
1507	39	336	A COMMENT	\N	2014-05-08 09:27:36	2014-05-08 09:27:36
1508	30	337	A COMMENT	\N	2014-07-11 05:42:36	2014-07-11 05:42:36
1509	32	337	A COMMENT	\N	2014-07-11 23:10:06	2014-07-11 23:10:06
1510	4	337	A COMMENT	\N	2014-07-12 22:15:25	2014-07-12 22:15:25
1511	47	337	A COMMENT	\N	2014-07-15 14:51:23	2014-07-15 14:51:23
1512	47	337	A COMMENT	\N	2014-07-16 10:44:45	2014-07-16 10:44:45
1513	27	337	A COMMENT	\N	2014-07-16 12:53:44	2014-07-16 12:53:44
1514	11	337	A COMMENT	\N	2014-07-20 23:00:29	2014-07-20 23:00:29
1515	1	337	A COMMENT	\N	2014-07-22 06:58:14	2014-07-22 06:58:14
1516	32	337	A COMMENT	\N	2014-07-26 06:53:23	2014-07-26 06:53:23
1517	43	337	A COMMENT	\N	2014-07-26 12:48:03	2014-07-26 12:48:03
1518	21	338	A COMMENT	\N	2014-03-19 02:41:03	2014-03-19 02:41:03
1519	1	338	A COMMENT	\N	2014-03-24 06:53:31	2014-03-24 06:53:31
1520	47	338	A COMMENT	\N	2014-04-17 15:24:29	2014-04-17 15:24:29
1521	8	338	A COMMENT	\N	2014-04-29 23:59:36	2014-04-29 23:59:36
1522	10	338	A COMMENT	\N	2014-05-18 12:56:32	2014-05-18 12:56:32
1523	14	338	A COMMENT	\N	2014-07-07 04:05:03	2014-07-07 04:05:03
1524	28	338	A COMMENT	\N	2014-07-11 04:46:35	2014-07-11 04:46:35
1525	1	340	A COMMENT	\N	2014-04-28 05:50:18	2014-04-28 05:50:18
1526	27	340	A COMMENT	\N	2014-05-14 09:27:15	2014-05-14 09:27:15
1527	43	340	A COMMENT	\N	2014-06-05 03:36:36	2014-06-05 03:36:36
1528	10	340	A COMMENT	\N	2014-06-15 23:33:06	2014-06-15 23:33:06
1529	10	340	A COMMENT	\N	2014-06-16 01:19:44	2014-06-16 01:19:44
1530	4	340	A COMMENT	\N	2014-07-06 22:54:03	2014-07-06 22:54:03
1531	21	343	A COMMENT	\N	2014-02-11 03:57:14	2014-02-11 03:57:14
1532	37	343	A COMMENT	\N	2014-02-14 22:39:29	2014-02-14 22:39:29
1533	45	343	A COMMENT	\N	2014-02-21 05:47:08	2014-02-21 05:47:08
1534	1	343	A COMMENT	\N	2014-03-08 19:43:02	2014-03-08 19:43:02
1535	4	343	A COMMENT	\N	2014-03-22 12:39:30	2014-03-22 12:39:30
1536	10	343	A COMMENT	\N	2014-05-10 01:29:20	2014-05-10 01:29:20
1537	14	343	A COMMENT	\N	2014-05-16 12:12:42	2014-05-16 12:12:42
1538	39	343	A COMMENT	\N	2014-05-17 20:53:32	2014-05-17 20:53:32
1539	4	343	A COMMENT	\N	2014-05-23 14:07:13	2014-05-23 14:07:13
1540	28	343	A COMMENT	\N	2014-05-27 02:12:20	2014-05-27 02:12:20
1541	37	343	A COMMENT	\N	2014-06-10 23:54:26	2014-06-10 23:54:26
1542	8	343	A COMMENT	\N	2014-06-20 22:16:27	2014-06-20 22:16:27
1543	43	343	A COMMENT	\N	2014-06-21 17:09:19	2014-06-21 17:09:19
1544	43	343	A COMMENT	\N	2014-07-01 13:08:49	2014-07-01 13:08:49
1545	1	343	A COMMENT	\N	2014-07-24 12:02:02	2014-07-24 12:02:02
1546	3	343	A COMMENT	\N	2014-07-28 19:45:50	2014-07-28 19:45:50
1547	2	345	A COMMENT	\N	2014-06-08 07:23:10	2014-06-08 07:23:10
1548	39	346	A COMMENT	\N	2014-04-29 08:16:06	2014-04-29 08:16:06
1549	30	346	A COMMENT	\N	2014-06-07 00:12:02	2014-06-07 00:12:02
1550	4	346	A COMMENT	\N	2014-06-22 14:05:47	2014-06-22 14:05:47
1551	14	346	A COMMENT	\N	2014-06-26 11:54:21	2014-06-26 11:54:21
1552	45	347	A COMMENT	\N	2014-06-12 16:15:40	2014-06-12 16:15:40
1553	3	347	A COMMENT	\N	2014-06-22 09:58:43	2014-06-22 09:58:43
1554	39	347	A COMMENT	\N	2014-07-08 18:31:04	2014-07-08 18:31:04
1555	2	347	A COMMENT	\N	2014-07-09 22:48:42	2014-07-09 22:48:42
1556	37	350	A COMMENT	\N	2014-03-24 16:47:36	2014-03-24 16:47:36
1557	2	350	A COMMENT	\N	2014-05-04 14:32:58	2014-05-04 14:32:58
1558	32	350	A COMMENT	\N	2014-05-22 13:44:41	2014-05-22 13:44:41
1559	47	350	A COMMENT	\N	2014-06-10 07:06:15	2014-06-10 07:06:15
1560	30	350	A COMMENT	\N	2014-06-28 08:23:08	2014-06-28 08:23:08
1561	11	350	A COMMENT	\N	2014-07-21 12:27:24	2014-07-21 12:27:24
1562	43	350	A COMMENT	\N	2014-07-27 22:30:37	2014-07-27 22:30:37
1563	11	351	A COMMENT	\N	2014-03-19 07:00:42	2014-03-19 07:00:42
1564	2	351	A COMMENT	\N	2014-03-20 20:49:38	2014-03-20 20:49:38
1565	45	351	A COMMENT	\N	2014-03-28 04:44:56	2014-03-28 04:44:56
1566	27	351	A COMMENT	\N	2014-05-18 12:04:39	2014-05-18 12:04:39
1567	21	351	A COMMENT	\N	2014-05-27 23:27:43	2014-05-27 23:27:43
1568	37	351	A COMMENT	\N	2014-06-12 17:34:21	2014-06-12 17:34:21
1569	14	351	A COMMENT	\N	2014-06-14 09:47:28	2014-06-14 09:47:28
1570	45	351	A COMMENT	\N	2014-06-21 23:25:46	2014-06-21 23:25:46
1571	47	352	A COMMENT	\N	2014-05-03 19:59:55	2014-05-03 19:59:55
1572	4	352	A COMMENT	\N	2014-06-01 06:32:35	2014-06-01 06:32:35
1573	30	352	A COMMENT	\N	2014-06-08 05:50:07	2014-06-08 05:50:07
1574	39	352	A COMMENT	\N	2014-07-10 13:33:34	2014-07-10 13:33:34
1575	22	353	A COMMENT	\N	2014-03-17 01:56:10	2014-03-17 01:56:10
1576	43	353	A COMMENT	\N	2014-03-21 12:37:39	2014-03-21 12:37:39
1577	27	353	A COMMENT	\N	2014-04-13 09:53:26	2014-04-13 09:53:26
1578	2	353	A COMMENT	\N	2014-04-30 13:19:35	2014-04-30 13:19:35
1579	27	353	A COMMENT	\N	2014-07-02 12:54:29	2014-07-02 12:54:29
1580	22	355	A COMMENT	\N	2014-03-11 12:49:00	2014-03-11 12:49:00
1581	4	355	A COMMENT	\N	2014-03-18 07:23:19	2014-03-18 07:23:19
1582	39	355	A COMMENT	\N	2014-04-03 18:16:35	2014-04-03 18:16:35
1583	43	355	A COMMENT	\N	2014-06-21 04:59:46	2014-06-21 04:59:46
1584	21	355	A COMMENT	\N	2014-07-02 04:38:06	2014-07-02 04:38:06
1585	47	355	A COMMENT	\N	2014-07-23 13:56:21	2014-07-23 13:56:21
1586	2	355	A COMMENT	\N	2014-07-26 11:54:25	2014-07-26 11:54:25
1587	22	356	A COMMENT	\N	2014-01-29 18:18:23	2014-01-29 18:18:23
1588	2	357	A COMMENT	\N	2014-02-07 10:20:31	2014-02-07 10:20:31
1589	1	357	A COMMENT	\N	2014-02-12 03:13:40	2014-02-12 03:13:40
1590	32	357	A COMMENT	\N	2014-02-23 17:07:33	2014-02-23 17:07:33
1591	4	357	A COMMENT	\N	2014-02-25 00:04:35	2014-02-25 00:04:35
1592	3	357	A COMMENT	\N	2014-03-01 00:28:23	2014-03-01 00:28:23
1593	37	357	A COMMENT	\N	2014-03-23 22:22:55	2014-03-23 22:22:55
1594	43	357	A COMMENT	\N	2014-03-26 21:24:04	2014-03-26 21:24:04
1595	21	357	A COMMENT	\N	2014-04-06 20:31:50	2014-04-06 20:31:50
1596	28	357	A COMMENT	\N	2014-04-23 15:12:20	2014-04-23 15:12:20
1597	45	357	A COMMENT	\N	2014-05-28 17:47:36	2014-05-28 17:47:36
1598	11	357	A COMMENT	\N	2014-05-28 21:16:53	2014-05-28 21:16:53
1599	4	357	A COMMENT	\N	2014-06-01 20:42:41	2014-06-01 20:42:41
1600	14	357	A COMMENT	\N	2014-06-06 00:11:33	2014-06-06 00:11:33
1601	39	357	A COMMENT	\N	2014-07-10 08:16:56	2014-07-10 08:16:56
1602	10	357	A COMMENT	\N	2014-07-13 21:13:47	2014-07-13 21:13:47
1603	8	357	A COMMENT	\N	2014-07-21 06:07:49	2014-07-21 06:07:49
1604	3	357	A COMMENT	\N	2014-07-25 17:20:16	2014-07-25 17:20:16
1605	14	358	A COMMENT	\N	2014-03-05 15:56:51	2014-03-05 15:56:51
1606	28	358	A COMMENT	\N	2014-05-02 02:14:18	2014-05-02 02:14:18
1607	39	358	A COMMENT	\N	2014-05-05 12:24:21	2014-05-05 12:24:21
1608	32	358	A COMMENT	\N	2014-05-14 16:11:28	2014-05-14 16:11:28
1609	10	358	A COMMENT	\N	2014-05-25 01:57:52	2014-05-25 01:57:52
1610	39	358	A COMMENT	\N	2014-06-25 05:07:04	2014-06-25 05:07:04
1611	3	358	A COMMENT	\N	2014-06-26 08:59:01	2014-06-26 08:59:01
1612	10	358	A COMMENT	\N	2014-07-04 22:57:53	2014-07-04 22:57:53
1613	43	358	A COMMENT	\N	2014-07-22 22:09:35	2014-07-22 22:09:35
1614	30	359	A COMMENT	\N	2014-03-03 04:49:20	2014-03-03 04:49:20
1615	3	359	A COMMENT	\N	2014-03-13 00:05:26	2014-03-13 00:05:26
1616	47	359	A COMMENT	\N	2014-03-23 15:52:52	2014-03-23 15:52:52
1617	37	359	A COMMENT	\N	2014-04-02 16:45:35	2014-04-02 16:45:35
1618	21	359	A COMMENT	\N	2014-04-06 13:35:59	2014-04-06 13:35:59
1619	11	359	A COMMENT	\N	2014-04-08 14:13:37	2014-04-08 14:13:37
1620	1	359	A COMMENT	\N	2014-04-23 00:28:05	2014-04-23 00:28:05
1621	2	359	A COMMENT	\N	2014-05-12 03:45:24	2014-05-12 03:45:24
1622	8	359	A COMMENT	\N	2014-05-13 12:06:43	2014-05-13 12:06:43
1623	39	359	A COMMENT	\N	2014-05-22 14:27:23	2014-05-22 14:27:23
1624	30	359	A COMMENT	\N	2014-05-30 05:31:02	2014-05-30 05:31:02
1625	11	359	A COMMENT	\N	2014-06-05 08:20:59	2014-06-05 08:20:59
1626	3	359	A COMMENT	\N	2014-06-10 14:02:11	2014-06-10 14:02:11
1627	14	359	A COMMENT	\N	2014-07-02 20:41:33	2014-07-02 20:41:33
1628	3	359	A COMMENT	\N	2014-07-07 23:41:27	2014-07-07 23:41:27
1629	1	361	A COMMENT	\N	2014-05-08 01:36:17	2014-05-08 01:36:17
1630	8	361	A COMMENT	\N	2014-06-15 15:35:06	2014-06-15 15:35:06
1631	28	361	A COMMENT	\N	2014-07-05 23:21:05	2014-07-05 23:21:05
1632	37	361	A COMMENT	\N	2014-07-22 13:58:42	2014-07-22 13:58:42
1633	11	362	A COMMENT	\N	2014-06-13 06:12:13	2014-06-13 06:12:13
1634	22	363	A COMMENT	\N	2014-07-07 12:52:12	2014-07-07 12:52:12
1635	8	364	A COMMENT	\N	2014-03-23 06:37:46	2014-03-23 06:37:46
1636	43	364	A COMMENT	\N	2014-03-31 18:28:10	2014-03-31 18:28:10
1637	45	364	A COMMENT	\N	2014-04-25 03:17:44	2014-04-25 03:17:44
1638	37	364	A COMMENT	\N	2014-04-26 21:11:01	2014-04-26 21:11:01
1639	28	364	A COMMENT	\N	2014-05-16 01:03:57	2014-05-16 01:03:57
1640	10	364	A COMMENT	\N	2014-05-16 19:40:23	2014-05-16 19:40:23
1641	39	364	A COMMENT	\N	2014-05-24 06:41:34	2014-05-24 06:41:34
1642	30	364	A COMMENT	\N	2014-05-28 11:42:07	2014-05-28 11:42:07
1643	32	364	A COMMENT	\N	2014-07-21 19:06:40	2014-07-21 19:06:40
1644	4	365	A COMMENT	\N	2014-07-09 22:30:02	2014-07-09 22:30:02
1645	3	365	A COMMENT	\N	2014-07-16 18:09:33	2014-07-16 18:09:33
1646	30	365	A COMMENT	\N	2014-07-20 09:03:42	2014-07-20 09:03:42
1647	47	366	A COMMENT	\N	2014-05-24 02:10:35	2014-05-24 02:10:35
1648	8	366	A COMMENT	\N	2014-05-24 15:46:01	2014-05-24 15:46:01
1649	27	366	A COMMENT	\N	2014-05-27 01:06:09	2014-05-27 01:06:09
1650	2	366	A COMMENT	\N	2014-05-27 01:07:46	2014-05-27 01:07:46
1651	3	366	A COMMENT	\N	2014-06-05 21:06:42	2014-06-05 21:06:42
1652	10	366	A COMMENT	\N	2014-06-11 18:32:37	2014-06-11 18:32:37
1653	27	366	A COMMENT	\N	2014-06-14 04:58:48	2014-06-14 04:58:48
1654	45	366	A COMMENT	\N	2014-06-14 21:13:39	2014-06-14 21:13:39
1655	47	366	A COMMENT	\N	2014-06-17 21:07:55	2014-06-17 21:07:55
1656	45	366	A COMMENT	\N	2014-06-27 04:19:04	2014-06-27 04:19:04
1657	45	366	A COMMENT	\N	2014-06-27 11:43:25	2014-06-27 11:43:25
1658	11	366	A COMMENT	\N	2014-07-11 09:47:34	2014-07-11 09:47:34
1659	11	366	A COMMENT	\N	2014-07-11 19:52:45	2014-07-11 19:52:45
1660	10	366	A COMMENT	\N	2014-07-12 23:12:45	2014-07-12 23:12:45
1661	32	366	A COMMENT	\N	2014-07-13 11:42:19	2014-07-13 11:42:19
1662	2	366	A COMMENT	\N	2014-07-14 12:32:44	2014-07-14 12:32:44
1663	30	366	A COMMENT	\N	2014-07-22 11:24:34	2014-07-22 11:24:34
1664	43	366	A COMMENT	\N	2014-07-23 23:27:35	2014-07-23 23:27:35
1665	10	366	A COMMENT	\N	2014-07-25 17:42:27	2014-07-25 17:42:27
1666	47	367	A COMMENT	\N	2014-03-13 11:37:37	2014-03-13 11:37:37
1667	4	367	A COMMENT	\N	2014-05-06 12:03:57	2014-05-06 12:03:57
1668	47	367	A COMMENT	\N	2014-05-18 21:33:00	2014-05-18 21:33:00
1669	10	367	A COMMENT	\N	2014-06-07 21:13:18	2014-06-07 21:13:18
1670	47	367	A COMMENT	\N	2014-07-04 18:29:33	2014-07-04 18:29:33
1671	21	367	A COMMENT	\N	2014-07-21 13:26:30	2014-07-21 13:26:30
1672	22	368	A COMMENT	\N	2014-02-26 14:10:07	2014-02-26 14:10:07
1673	14	368	A COMMENT	\N	2014-03-04 07:35:28	2014-03-04 07:35:28
1674	39	368	A COMMENT	\N	2014-03-14 14:32:09	2014-03-14 14:32:09
1675	27	368	A COMMENT	\N	2014-03-20 23:02:56	2014-03-20 23:02:56
1676	1	368	A COMMENT	\N	2014-04-23 10:04:18	2014-04-23 10:04:18
1677	21	368	A COMMENT	\N	2014-07-06 02:14:08	2014-07-06 02:14:08
1678	16	371	A COMMENT	\N	2014-07-17 15:49:19	2014-07-17 15:49:19
1679	8	371	A COMMENT	\N	2014-07-19 08:16:31	2014-07-19 08:16:31
1680	37	371	A COMMENT	\N	2014-07-19 08:20:38	2014-07-19 08:20:38
1681	4	371	A COMMENT	\N	2014-07-20 23:22:17	2014-07-20 23:22:17
1682	39	371	A COMMENT	\N	2014-07-26 02:08:51	2014-07-26 02:08:51
1683	11	373	A COMMENT	\N	2014-07-15 20:02:03	2014-07-15 20:02:03
1684	39	373	A COMMENT	\N	2014-07-22 22:01:48	2014-07-22 22:01:48
1685	2	373	A COMMENT	\N	2014-07-25 06:15:41	2014-07-25 06:15:41
1686	28	373	A COMMENT	\N	2014-07-25 15:25:34	2014-07-25 15:25:34
1687	8	374	A COMMENT	\N	2014-06-30 21:10:32	2014-06-30 21:10:32
1688	4	374	A COMMENT	\N	2014-07-03 21:04:56	2014-07-03 21:04:56
1689	21	374	A COMMENT	\N	2014-07-05 04:56:37	2014-07-05 04:56:37
1690	43	374	A COMMENT	\N	2014-07-06 12:35:45	2014-07-06 12:35:45
1691	11	374	A COMMENT	\N	2014-07-09 06:27:09	2014-07-09 06:27:09
1692	39	374	A COMMENT	\N	2014-07-21 23:46:30	2014-07-21 23:46:30
1693	1	374	A COMMENT	\N	2014-07-23 14:47:20	2014-07-23 14:47:20
1694	16	376	A COMMENT	\N	2014-07-19 21:20:58	2014-07-19 21:20:58
1695	1	376	A COMMENT	\N	2014-07-21 16:52:06	2014-07-21 16:52:06
1696	47	376	A COMMENT	\N	2014-07-22 08:53:27	2014-07-22 08:53:27
1697	28	376	A COMMENT	\N	2014-07-24 02:42:09	2014-07-24 02:42:09
1698	27	376	A COMMENT	\N	2014-07-26 03:10:49	2014-07-26 03:10:49
1699	16	377	A COMMENT	\N	2014-06-24 10:59:11	2014-06-24 10:59:11
1700	16	379	A COMMENT	\N	2014-07-03 05:23:32	2014-07-03 05:23:32
1701	30	379	A COMMENT	\N	2014-07-05 01:26:37	2014-07-05 01:26:37
1702	3	379	A COMMENT	\N	2014-07-06 05:10:02	2014-07-06 05:10:02
1703	8	379	A COMMENT	\N	2014-07-08 15:57:55	2014-07-08 15:57:55
1704	30	379	A COMMENT	\N	2014-07-09 12:07:55	2014-07-09 12:07:55
1705	14	379	A COMMENT	\N	2014-07-10 00:44:07	2014-07-10 00:44:07
1706	11	379	A COMMENT	\N	2014-07-23 13:49:06	2014-07-23 13:49:06
1707	2	379	A COMMENT	\N	2014-07-25 10:56:00	2014-07-25 10:56:00
1708	1	379	A COMMENT	\N	2014-07-26 03:32:02	2014-07-26 03:32:02
1709	3	379	A COMMENT	\N	2014-07-26 04:05:02	2014-07-26 04:05:02
1710	32	379	A COMMENT	\N	2014-07-28 01:16:52	2014-07-28 01:16:52
1711	16	380	A COMMENT	\N	2014-06-23 10:38:57	2014-06-23 10:38:57
1712	16	381	A COMMENT	\N	2014-06-24 18:50:49	2014-06-24 18:50:49
1713	45	381	A COMMENT	\N	2014-07-21 15:15:31	2014-07-21 15:15:31
1714	4	381	A COMMENT	\N	2014-07-28 02:53:29	2014-07-28 02:53:29
1715	47	382	A COMMENT	\N	2014-07-09 09:17:18	2014-07-09 09:17:18
1716	45	382	A COMMENT	\N	2014-07-20 13:37:34	2014-07-20 13:37:34
1717	43	382	A COMMENT	\N	2014-07-22 03:53:53	2014-07-22 03:53:53
1718	47	382	A COMMENT	\N	2014-07-23 20:29:24	2014-07-23 20:29:24
1719	10	382	A COMMENT	\N	2014-07-25 23:33:47	2014-07-25 23:33:47
1720	27	382	A COMMENT	\N	2014-07-26 08:50:36	2014-07-26 08:50:36
1721	16	384	A COMMENT	\N	2014-07-06 16:51:39	2014-07-06 16:51:39
1722	27	384	A COMMENT	\N	2014-07-10 09:45:56	2014-07-10 09:45:56
1723	1	384	A COMMENT	\N	2014-07-19 12:08:36	2014-07-19 12:08:36
1724	21	385	A COMMENT	\N	2014-07-12 00:49:12	2014-07-12 00:49:12
1725	3	385	A COMMENT	\N	2014-07-13 07:07:35	2014-07-13 07:07:35
1726	27	385	A COMMENT	\N	2014-07-13 17:03:27	2014-07-13 17:03:27
1727	43	385	A COMMENT	\N	2014-07-16 02:12:52	2014-07-16 02:12:52
1728	32	385	A COMMENT	\N	2014-07-17 15:49:29	2014-07-17 15:49:29
1729	8	385	A COMMENT	\N	2014-07-18 18:27:02	2014-07-18 18:27:02
1730	45	385	A COMMENT	\N	2014-07-18 21:30:32	2014-07-18 21:30:32
1731	3	385	A COMMENT	\N	2014-07-21 11:57:01	2014-07-21 11:57:01
1732	16	386	A COMMENT	\N	2014-06-22 04:36:59	2014-06-22 04:36:59
1733	14	386	A COMMENT	\N	2014-06-25 02:27:15	2014-06-25 02:27:15
1734	45	386	A COMMENT	\N	2014-06-26 08:05:13	2014-06-26 08:05:13
1735	37	386	A COMMENT	\N	2014-06-27 11:09:57	2014-06-27 11:09:57
1736	37	386	A COMMENT	\N	2014-06-30 12:11:02	2014-06-30 12:11:02
1737	45	386	A COMMENT	\N	2014-07-13 02:54:14	2014-07-13 02:54:14
1738	30	386	A COMMENT	\N	2014-07-13 12:27:25	2014-07-13 12:27:25
1739	47	386	A COMMENT	\N	2014-07-20 23:48:56	2014-07-20 23:48:56
1740	1	386	A COMMENT	\N	2014-07-28 15:20:13	2014-07-28 15:20:13
1741	30	387	A COMMENT	\N	2014-07-02 01:13:41	2014-07-02 01:13:41
1742	47	387	A COMMENT	\N	2014-07-03 05:23:50	2014-07-03 05:23:50
1743	21	387	A COMMENT	\N	2014-07-04 10:41:33	2014-07-04 10:41:33
1744	2	387	A COMMENT	\N	2014-07-05 01:21:29	2014-07-05 01:21:29
1745	43	387	A COMMENT	\N	2014-07-07 17:04:31	2014-07-07 17:04:31
1746	4	387	A COMMENT	\N	2014-07-08 19:04:49	2014-07-08 19:04:49
1747	45	387	A COMMENT	\N	2014-07-12 05:04:05	2014-07-12 05:04:05
1748	14	387	A COMMENT	\N	2014-07-13 10:07:06	2014-07-13 10:07:06
1749	8	387	A COMMENT	\N	2014-07-15 03:12:18	2014-07-15 03:12:18
1750	28	387	A COMMENT	\N	2014-07-15 10:03:57	2014-07-15 10:03:57
1751	27	387	A COMMENT	\N	2014-07-15 10:47:57	2014-07-15 10:47:57
1752	4	387	A COMMENT	\N	2014-07-18 00:47:15	2014-07-18 00:47:15
1753	47	387	A COMMENT	\N	2014-07-18 08:32:22	2014-07-18 08:32:22
1754	45	387	A COMMENT	\N	2014-07-20 12:42:01	2014-07-20 12:42:01
1755	3	387	A COMMENT	\N	2014-07-21 13:41:51	2014-07-21 13:41:51
1756	47	387	A COMMENT	\N	2014-07-24 14:27:05	2014-07-24 14:27:05
1757	3	387	A COMMENT	\N	2014-07-27 09:28:33	2014-07-27 09:28:33
1758	4	387	A COMMENT	\N	2014-07-27 13:27:19	2014-07-27 13:27:19
1759	16	388	A COMMENT	\N	2014-06-29 01:25:47	2014-06-29 01:25:47
1760	27	388	A COMMENT	\N	2014-06-30 02:58:48	2014-06-30 02:58:48
1761	8	388	A COMMENT	\N	2014-07-01 18:13:28	2014-07-01 18:13:28
1762	30	388	A COMMENT	\N	2014-07-05 21:28:11	2014-07-05 21:28:11
1763	28	388	A COMMENT	\N	2014-07-07 17:04:26	2014-07-07 17:04:26
1764	45	388	A COMMENT	\N	2014-07-09 19:09:26	2014-07-09 19:09:26
1765	21	388	A COMMENT	\N	2014-07-10 12:23:56	2014-07-10 12:23:56
1766	10	388	A COMMENT	\N	2014-07-11 01:05:40	2014-07-11 01:05:40
1767	28	388	A COMMENT	\N	2014-07-12 20:44:58	2014-07-12 20:44:58
1768	37	388	A COMMENT	\N	2014-07-14 03:52:00	2014-07-14 03:52:00
1769	1	388	A COMMENT	\N	2014-07-15 11:32:12	2014-07-15 11:32:12
1770	14	388	A COMMENT	\N	2014-07-15 14:14:47	2014-07-15 14:14:47
1771	2	388	A COMMENT	\N	2014-07-16 05:24:44	2014-07-16 05:24:44
1772	3	388	A COMMENT	\N	2014-07-19 11:00:01	2014-07-19 11:00:01
1773	14	388	A COMMENT	\N	2014-07-19 16:48:09	2014-07-19 16:48:09
1774	8	388	A COMMENT	\N	2014-07-21 02:53:35	2014-07-21 02:53:35
1775	11	388	A COMMENT	\N	2014-07-24 14:06:47	2014-07-24 14:06:47
1776	3	388	A COMMENT	\N	2014-07-26 13:54:31	2014-07-26 13:54:31
1777	30	388	A COMMENT	\N	2014-07-28 08:44:01	2014-07-28 08:44:01
1778	11	389	A COMMENT	\N	2014-07-10 14:16:02	2014-07-10 14:16:02
1779	21	389	A COMMENT	\N	2014-07-11 18:35:31	2014-07-11 18:35:31
1780	30	389	A COMMENT	\N	2014-07-22 09:05:23	2014-07-22 09:05:23
1781	2	389	A COMMENT	\N	2014-07-23 09:28:59	2014-07-23 09:28:59
1782	16	390	A COMMENT	\N	2014-06-28 19:25:45	2014-06-28 19:25:45
1783	10	390	A COMMENT	\N	2014-07-01 01:02:18	2014-07-01 01:02:18
1784	21	390	A COMMENT	\N	2014-07-03 09:19:09	2014-07-03 09:19:09
1785	8	390	A COMMENT	\N	2014-07-05 09:44:00	2014-07-05 09:44:00
1786	4	390	A COMMENT	\N	2014-07-06 12:13:30	2014-07-06 12:13:30
1787	37	390	A COMMENT	\N	2014-07-06 14:22:39	2014-07-06 14:22:39
1788	47	390	A COMMENT	\N	2014-07-08 14:14:37	2014-07-08 14:14:37
1789	3	390	A COMMENT	\N	2014-07-09 04:00:30	2014-07-09 04:00:30
1790	27	390	A COMMENT	\N	2014-07-10 12:14:48	2014-07-10 12:14:48
1791	3	390	A COMMENT	\N	2014-07-11 19:06:27	2014-07-11 19:06:27
1792	47	390	A COMMENT	\N	2014-07-15 09:31:15	2014-07-15 09:31:15
1793	2	390	A COMMENT	\N	2014-07-16 04:34:49	2014-07-16 04:34:49
1794	1	390	A COMMENT	\N	2014-07-17 18:25:41	2014-07-17 18:25:41
1795	10	390	A COMMENT	\N	2014-07-19 21:43:44	2014-07-19 21:43:44
1796	43	390	A COMMENT	\N	2014-07-23 04:21:10	2014-07-23 04:21:10
1797	2	390	A COMMENT	\N	2014-07-24 09:56:48	2014-07-24 09:56:48
1798	2	390	A COMMENT	\N	2014-07-24 20:15:06	2014-07-24 20:15:06
1799	11	390	A COMMENT	\N	2014-07-25 09:00:07	2014-07-25 09:00:07
1800	32	390	A COMMENT	\N	2014-07-26 18:57:51	2014-07-26 18:57:51
1801	16	391	A COMMENT	\N	2014-07-13 09:53:51	2014-07-13 09:53:51
1802	11	391	A COMMENT	\N	2014-07-14 01:40:45	2014-07-14 01:40:45
1803	43	391	A COMMENT	\N	2014-07-27 00:34:02	2014-07-27 00:34:02
1804	16	392	A COMMENT	\N	2014-06-22 04:12:10	2014-06-22 04:12:10
1805	37	392	A COMMENT	\N	2014-06-25 10:13:22	2014-06-25 10:13:22
1806	32	392	A COMMENT	\N	2014-07-03 09:12:21	2014-07-03 09:12:21
1807	10	392	A COMMENT	\N	2014-07-18 17:52:18	2014-07-18 17:52:18
1808	43	392	A COMMENT	\N	2014-07-26 16:07:11	2014-07-26 16:07:11
1809	16	393	A COMMENT	\N	2014-06-29 03:34:14	2014-06-29 03:34:14
1810	47	393	A COMMENT	\N	2014-06-30 21:07:32	2014-06-30 21:07:32
1811	27	393	A COMMENT	\N	2014-07-06 08:50:50	2014-07-06 08:50:50
1812	32	393	A COMMENT	\N	2014-07-07 02:13:53	2014-07-07 02:13:53
1813	1	393	A COMMENT	\N	2014-07-09 10:28:34	2014-07-09 10:28:34
1814	27	393	A COMMENT	\N	2014-07-21 12:35:58	2014-07-21 12:35:58
1815	2	393	A COMMENT	\N	2014-07-23 01:26:21	2014-07-23 01:26:21
1816	39	394	A COMMENT	\N	2014-07-01 05:44:42	2014-07-01 05:44:42
1817	37	394	A COMMENT	\N	2014-07-04 22:48:02	2014-07-04 22:48:02
1818	30	394	A COMMENT	\N	2014-07-06 06:50:31	2014-07-06 06:50:31
1819	21	394	A COMMENT	\N	2014-07-08 10:17:17	2014-07-08 10:17:17
1820	27	394	A COMMENT	\N	2014-07-09 03:01:29	2014-07-09 03:01:29
1821	32	394	A COMMENT	\N	2014-07-10 01:32:12	2014-07-10 01:32:12
1822	8	394	A COMMENT	\N	2014-07-13 00:29:26	2014-07-13 00:29:26
1823	8	394	A COMMENT	\N	2014-07-16 18:05:37	2014-07-16 18:05:37
1824	39	394	A COMMENT	\N	2014-07-16 20:49:02	2014-07-16 20:49:02
1825	28	394	A COMMENT	\N	2014-07-18 04:05:04	2014-07-18 04:05:04
1826	37	394	A COMMENT	\N	2014-07-18 11:32:32	2014-07-18 11:32:32
1827	43	394	A COMMENT	\N	2014-07-19 02:41:05	2014-07-19 02:41:05
1828	47	394	A COMMENT	\N	2014-07-22 15:01:03	2014-07-22 15:01:03
1829	27	394	A COMMENT	\N	2014-07-23 11:44:00	2014-07-23 11:44:00
1830	2	395	A COMMENT	\N	2014-07-15 23:43:29	2014-07-15 23:43:29
1831	45	395	A COMMENT	\N	2014-07-16 06:15:45	2014-07-16 06:15:45
1832	1	395	A COMMENT	\N	2014-07-16 06:48:18	2014-07-16 06:48:18
1833	4	395	A COMMENT	\N	2014-07-20 08:53:58	2014-07-20 08:53:58
1834	3	395	A COMMENT	\N	2014-07-24 14:48:44	2014-07-24 14:48:44
1835	10	395	A COMMENT	\N	2014-07-24 23:26:10	2014-07-24 23:26:10
1836	30	395	A COMMENT	\N	2014-07-25 00:30:44	2014-07-25 00:30:44
1837	32	395	A COMMENT	\N	2014-07-25 07:25:39	2014-07-25 07:25:39
1838	28	396	A COMMENT	\N	2014-07-17 12:23:28	2014-07-17 12:23:28
1839	2	396	A COMMENT	\N	2014-07-18 10:27:36	2014-07-18 10:27:36
1840	45	396	A COMMENT	\N	2014-07-21 05:37:59	2014-07-21 05:37:59
1841	39	396	A COMMENT	\N	2014-07-21 23:46:57	2014-07-21 23:46:57
1842	45	396	A COMMENT	\N	2014-07-23 05:56:24	2014-07-23 05:56:24
1843	10	396	A COMMENT	\N	2014-07-24 15:00:16	2014-07-24 15:00:16
1844	8	396	A COMMENT	\N	2014-07-25 17:41:51	2014-07-25 17:41:51
1845	8	396	A COMMENT	\N	2014-07-27 22:59:50	2014-07-27 22:59:50
1846	16	397	A COMMENT	\N	2014-07-21 00:23:02	2014-07-21 00:23:02
1847	45	397	A COMMENT	\N	2014-07-24 13:48:21	2014-07-24 13:48:21
1848	47	397	A COMMENT	\N	2014-07-26 06:31:42	2014-07-26 06:31:42
1849	11	397	A COMMENT	\N	2014-07-27 08:46:21	2014-07-27 08:46:21
1850	16	398	A COMMENT	\N	2014-06-23 05:46:58	2014-06-23 05:46:58
1851	37	399	A COMMENT	\N	2014-07-09 09:40:43	2014-07-09 09:40:43
1852	3	399	A COMMENT	\N	2014-07-16 19:52:22	2014-07-16 19:52:22
1853	1	400	A COMMENT	\N	2014-07-16 19:28:45	2014-07-16 19:28:45
1854	47	400	A COMMENT	\N	2014-07-22 05:09:39	2014-07-22 05:09:39
1855	4	400	A COMMENT	\N	2014-07-26 17:52:57	2014-07-26 17:52:57
1856	16	401	A COMMENT	\N	2014-07-18 12:50:25	2014-07-18 12:50:25
1857	11	401	A COMMENT	\N	2014-07-20 02:14:59	2014-07-20 02:14:59
1858	21	401	A COMMENT	\N	2014-07-20 19:27:48	2014-07-20 19:27:48
1859	37	401	A COMMENT	\N	2014-07-20 21:34:19	2014-07-20 21:34:19
1860	1	401	A COMMENT	\N	2014-07-22 14:30:29	2014-07-22 14:30:29
1861	43	401	A COMMENT	\N	2014-07-24 03:14:38	2014-07-24 03:14:38
1862	8	401	A COMMENT	\N	2014-07-24 19:53:06	2014-07-24 19:53:06
1863	3	401	A COMMENT	\N	2014-07-25 15:17:51	2014-07-25 15:17:51
1864	4	402	A COMMENT	\N	2014-07-02 15:11:47	2014-07-02 15:11:47
1865	43	403	A COMMENT	\N	2014-07-18 09:19:35	2014-07-18 09:19:35
1866	2	404	A COMMENT	\N	2014-06-28 21:19:02	2014-06-28 21:19:02
1867	1	404	A COMMENT	\N	2014-07-02 03:01:02	2014-07-02 03:01:02
1868	37	404	A COMMENT	\N	2014-07-04 10:43:03	2014-07-04 10:43:03
1869	21	404	A COMMENT	\N	2014-07-09 00:46:17	2014-07-09 00:46:17
1870	3	404	A COMMENT	\N	2014-07-09 00:47:32	2014-07-09 00:47:32
1871	10	404	A COMMENT	\N	2014-07-20 09:39:46	2014-07-20 09:39:46
1872	27	404	A COMMENT	\N	2014-07-21 00:39:47	2014-07-21 00:39:47
1873	8	404	A COMMENT	\N	2014-07-26 09:58:01	2014-07-26 09:58:01
1874	28	404	A COMMENT	\N	2014-07-27 20:02:59	2014-07-27 20:02:59
1875	10	405	A COMMENT	\N	2014-06-30 19:17:12	2014-06-30 19:17:12
1876	21	405	A COMMENT	\N	2014-06-30 22:38:16	2014-06-30 22:38:16
1877	45	405	A COMMENT	\N	2014-07-03 04:06:01	2014-07-03 04:06:01
1878	27	405	A COMMENT	\N	2014-07-04 15:21:30	2014-07-04 15:21:30
1879	2	405	A COMMENT	\N	2014-07-05 15:31:01	2014-07-05 15:31:01
1880	3	405	A COMMENT	\N	2014-07-05 21:25:56	2014-07-05 21:25:56
1881	27	405	A COMMENT	\N	2014-07-08 04:19:49	2014-07-08 04:19:49
1882	28	405	A COMMENT	\N	2014-07-09 14:26:29	2014-07-09 14:26:29
1883	47	405	A COMMENT	\N	2014-07-09 21:58:49	2014-07-09 21:58:49
1884	2	405	A COMMENT	\N	2014-07-10 18:43:06	2014-07-10 18:43:06
1885	37	405	A COMMENT	\N	2014-07-13 17:19:25	2014-07-13 17:19:25
1886	30	405	A COMMENT	\N	2014-07-17 06:25:22	2014-07-17 06:25:22
1887	4	405	A COMMENT	\N	2014-07-19 10:08:12	2014-07-19 10:08:12
1888	11	405	A COMMENT	\N	2014-07-24 16:53:47	2014-07-24 16:53:47
1889	47	405	A COMMENT	\N	2014-07-27 22:00:22	2014-07-27 22:00:22
1890	28	405	A COMMENT	\N	2014-07-28 06:54:09	2014-07-28 06:54:09
1891	8	406	A COMMENT	\N	2014-07-16 07:45:31	2014-07-16 07:45:31
1892	14	406	A COMMENT	\N	2014-07-18 02:28:41	2014-07-18 02:28:41
1893	45	407	A COMMENT	\N	2014-07-21 19:54:27	2014-07-21 19:54:27
1894	8	407	A COMMENT	\N	2014-07-22 12:49:43	2014-07-22 12:49:43
1895	4	407	A COMMENT	\N	2014-07-23 07:22:32	2014-07-23 07:22:32
1896	47	407	A COMMENT	\N	2014-07-23 09:57:57	2014-07-23 09:57:57
1897	4	407	A COMMENT	\N	2014-07-25 11:30:03	2014-07-25 11:30:03
1898	39	407	A COMMENT	\N	2014-07-25 19:05:22	2014-07-25 19:05:22
1899	47	407	A COMMENT	\N	2014-07-27 00:03:27	2014-07-27 00:03:27
1900	11	408	A COMMENT	\N	2014-07-24 23:11:19	2014-07-24 23:11:19
1901	32	408	A COMMENT	\N	2014-07-25 15:04:23	2014-07-25 15:04:23
1902	45	408	A COMMENT	\N	2014-07-26 19:11:53	2014-07-26 19:11:53
1903	14	408	A COMMENT	\N	2014-07-26 23:26:28	2014-07-26 23:26:28
1904	16	409	A COMMENT	\N	2014-07-13 19:02:04	2014-07-13 19:02:04
1905	27	409	A COMMENT	\N	2014-07-16 14:57:14	2014-07-16 14:57:14
1906	30	409	A COMMENT	\N	2014-07-17 14:17:19	2014-07-17 14:17:19
1907	27	409	A COMMENT	\N	2014-07-22 21:10:58	2014-07-22 21:10:58
1908	14	409	A COMMENT	\N	2014-07-22 22:29:51	2014-07-22 22:29:51
1909	14	409	A COMMENT	\N	2014-07-23 06:12:34	2014-07-23 06:12:34
1910	32	409	A COMMENT	\N	2014-07-23 23:08:34	2014-07-23 23:08:34
1911	43	409	A COMMENT	\N	2014-07-24 07:19:01	2014-07-24 07:19:01
1912	11	409	A COMMENT	\N	2014-07-25 00:18:05	2014-07-25 00:18:05
1913	28	409	A COMMENT	\N	2014-07-27 15:43:59	2014-07-27 15:43:59
1914	16	410	A COMMENT	\N	2014-07-18 00:10:11	2014-07-18 00:10:11
1915	21	410	A COMMENT	\N	2014-07-25 10:07:40	2014-07-25 10:07:40
1916	16	411	A COMMENT	\N	2014-06-24 08:21:51	2014-06-24 08:21:51
1917	11	413	A COMMENT	\N	2014-07-09 11:22:48	2014-07-09 11:22:48
1918	1	415	A COMMENT	\N	2014-07-14 23:15:43	2014-07-14 23:15:43
1919	45	415	A COMMENT	\N	2014-07-17 07:49:47	2014-07-17 07:49:47
1920	28	415	A COMMENT	\N	2014-07-22 01:14:57	2014-07-22 01:14:57
1921	37	416	A COMMENT	\N	2014-07-16 02:16:03	2014-07-16 02:16:03
1922	1	417	A COMMENT	\N	2014-07-02 22:20:41	2014-07-02 22:20:41
1923	3	417	A COMMENT	\N	2014-07-04 22:15:40	2014-07-04 22:15:40
1924	2	417	A COMMENT	\N	2014-07-26 00:09:58	2014-07-26 00:09:58
1925	16	418	A COMMENT	\N	2014-07-08 03:49:41	2014-07-08 03:49:41
1926	16	420	A COMMENT	\N	2014-06-27 06:29:15	2014-06-27 06:29:15
1927	32	420	A COMMENT	\N	2014-07-21 00:42:23	2014-07-21 00:42:23
1928	32	420	A COMMENT	\N	2014-07-21 12:49:43	2014-07-21 12:49:43
1929	37	421	A COMMENT	\N	2014-07-04 18:48:49	2014-07-04 18:48:49
1930	10	421	A COMMENT	\N	2014-07-11 14:26:54	2014-07-11 14:26:54
1931	2	421	A COMMENT	\N	2014-07-22 08:43:59	2014-07-22 08:43:59
1932	21	421	A COMMENT	\N	2014-07-23 22:01:39	2014-07-23 22:01:39
1933	8	421	A COMMENT	\N	2014-07-26 03:39:36	2014-07-26 03:39:36
1934	32	422	A COMMENT	\N	2014-07-08 05:04:29	2014-07-08 05:04:29
1935	3	422	A COMMENT	\N	2014-07-14 07:20:12	2014-07-14 07:20:12
1936	39	422	A COMMENT	\N	2014-07-26 19:17:35	2014-07-26 19:17:35
1937	21	422	A COMMENT	\N	2014-07-27 00:36:00	2014-07-27 00:36:00
1938	37	422	A COMMENT	\N	2014-07-28 16:37:56	2014-07-28 16:37:56
1939	28	424	A COMMENT	\N	2014-07-02 07:07:51	2014-07-02 07:07:51
1940	10	424	A COMMENT	\N	2014-07-09 08:08:35	2014-07-09 08:08:35
1941	4	424	A COMMENT	\N	2014-07-12 00:56:09	2014-07-12 00:56:09
1942	4	424	A COMMENT	\N	2014-07-20 03:29:57	2014-07-20 03:29:57
1943	30	424	A COMMENT	\N	2014-07-21 15:58:11	2014-07-21 15:58:11
1944	45	424	A COMMENT	\N	2014-07-22 04:49:17	2014-07-22 04:49:17
1945	11	424	A COMMENT	\N	2014-07-23 02:05:34	2014-07-23 02:05:34
1946	8	424	A COMMENT	\N	2014-07-25 23:31:46	2014-07-25 23:31:46
1947	43	424	A COMMENT	\N	2014-07-26 19:28:57	2014-07-26 19:28:57
1948	10	424	A COMMENT	\N	2014-07-27 07:49:01	2014-07-27 07:49:01
1949	16	425	A COMMENT	\N	2014-07-03 03:21:49	2014-07-03 03:21:49
1950	8	425	A COMMENT	\N	2014-07-03 21:56:07	2014-07-03 21:56:07
1951	11	425	A COMMENT	\N	2014-07-11 15:00:35	2014-07-11 15:00:35
1952	28	425	A COMMENT	\N	2014-07-16 15:04:02	2014-07-16 15:04:02
1953	1	425	A COMMENT	\N	2014-07-18 02:14:11	2014-07-18 02:14:11
1954	28	425	A COMMENT	\N	2014-07-19 07:32:54	2014-07-19 07:32:54
1955	28	425	A COMMENT	\N	2014-07-24 16:46:26	2014-07-24 16:46:26
1956	27	425	A COMMENT	\N	2014-07-25 05:08:52	2014-07-25 05:08:52
1957	4	427	A COMMENT	\N	2014-07-01 06:55:03	2014-07-01 06:55:03
1958	10	427	A COMMENT	\N	2014-07-26 03:25:06	2014-07-26 03:25:06
1959	16	428	A COMMENT	\N	2014-07-19 16:09:11	2014-07-19 16:09:11
1960	27	428	A COMMENT	\N	2014-07-20 09:22:58	2014-07-20 09:22:58
1961	14	428	A COMMENT	\N	2014-07-20 12:31:08	2014-07-20 12:31:08
1962	43	428	A COMMENT	\N	2014-07-20 15:10:49	2014-07-20 15:10:49
1963	11	428	A COMMENT	\N	2014-07-21 00:56:00	2014-07-21 00:56:00
1964	32	428	A COMMENT	\N	2014-07-21 03:13:32	2014-07-21 03:13:32
1965	47	428	A COMMENT	\N	2014-07-21 07:50:51	2014-07-21 07:50:51
1966	3	428	A COMMENT	\N	2014-07-21 20:06:53	2014-07-21 20:06:53
1967	39	428	A COMMENT	\N	2014-07-21 21:59:28	2014-07-21 21:59:28
1968	47	428	A COMMENT	\N	2014-07-23 20:15:28	2014-07-23 20:15:28
1969	21	428	A COMMENT	\N	2014-07-24 16:42:43	2014-07-24 16:42:43
1970	21	428	A COMMENT	\N	2014-07-25 13:17:05	2014-07-25 13:17:05
1971	10	428	A COMMENT	\N	2014-07-26 00:32:27	2014-07-26 00:32:27
1972	30	428	A COMMENT	\N	2014-07-28 02:54:33	2014-07-28 02:54:33
1973	37	428	A COMMENT	\N	2014-07-28 04:38:06	2014-07-28 04:38:06
1974	21	429	A COMMENT	\N	2014-06-30 01:30:04	2014-06-30 01:30:04
1975	4	429	A COMMENT	\N	2014-07-14 22:34:28	2014-07-14 22:34:28
1976	32	433	A COMMENT	\N	2014-07-28 13:41:16	2014-07-28 13:41:16
1977	16	435	A COMMENT	\N	2014-07-01 18:32:08	2014-07-01 18:32:08
1978	32	435	A COMMENT	\N	2014-07-02 03:10:37	2014-07-02 03:10:37
1979	39	435	A COMMENT	\N	2014-07-09 03:33:55	2014-07-09 03:33:55
1980	30	435	A COMMENT	\N	2014-07-20 01:48:27	2014-07-20 01:48:27
1981	2	435	A COMMENT	\N	2014-07-23 10:45:50	2014-07-23 10:45:50
1982	39	436	A COMMENT	\N	2014-04-25 12:45:57	2014-04-25 12:45:57
1983	32	436	A COMMENT	\N	2014-04-26 15:31:17	2014-04-26 15:31:17
1984	30	436	A COMMENT	\N	2014-05-08 04:01:25	2014-05-08 04:01:25
1985	10	436	A COMMENT	\N	2014-05-10 16:44:23	2014-05-10 16:44:23
1986	37	436	A COMMENT	\N	2014-05-27 15:06:17	2014-05-27 15:06:17
1987	11	436	A COMMENT	\N	2014-06-03 08:17:10	2014-06-03 08:17:10
1988	1	436	A COMMENT	\N	2014-06-06 02:13:20	2014-06-06 02:13:20
1989	45	436	A COMMENT	\N	2014-06-14 23:50:38	2014-06-14 23:50:38
1990	21	436	A COMMENT	\N	2014-06-16 17:17:51	2014-06-16 17:17:51
1991	21	436	A COMMENT	\N	2014-06-17 20:56:44	2014-06-17 20:56:44
1992	4	436	A COMMENT	\N	2014-06-21 13:11:57	2014-06-21 13:11:57
1993	11	436	A COMMENT	\N	2014-07-03 05:25:15	2014-07-03 05:25:15
1994	19	437	A COMMENT	\N	2014-04-29 10:15:22	2014-04-29 10:15:22
1995	11	437	A COMMENT	\N	2014-04-30 15:28:12	2014-04-30 15:28:12
1996	45	437	A COMMENT	\N	2014-07-06 19:42:02	2014-07-06 19:42:02
1997	45	437	A COMMENT	\N	2014-07-12 03:12:29	2014-07-12 03:12:29
1998	32	437	A COMMENT	\N	2014-07-18 18:00:36	2014-07-18 18:00:36
1999	3	437	A COMMENT	\N	2014-07-27 13:55:23	2014-07-27 13:55:23
2000	21	438	A COMMENT	\N	2014-05-23 07:28:42	2014-05-23 07:28:42
2001	32	438	A COMMENT	\N	2014-05-27 14:00:34	2014-05-27 14:00:34
2002	2	438	A COMMENT	\N	2014-06-02 05:57:52	2014-06-02 05:57:52
2003	21	438	A COMMENT	\N	2014-06-03 13:54:16	2014-06-03 13:54:16
2004	11	438	A COMMENT	\N	2014-06-04 10:42:42	2014-06-04 10:42:42
2005	45	438	A COMMENT	\N	2014-06-05 17:06:04	2014-06-05 17:06:04
2006	32	438	A COMMENT	\N	2014-06-11 23:02:36	2014-06-11 23:02:36
2007	3	438	A COMMENT	\N	2014-06-16 03:52:43	2014-06-16 03:52:43
2008	14	438	A COMMENT	\N	2014-06-17 00:03:02	2014-06-17 00:03:02
2009	28	438	A COMMENT	\N	2014-06-23 03:21:07	2014-06-23 03:21:07
2010	43	438	A COMMENT	\N	2014-06-23 19:15:46	2014-06-23 19:15:46
2011	2	438	A COMMENT	\N	2014-06-27 02:05:29	2014-06-27 02:05:29
2012	27	438	A COMMENT	\N	2014-06-27 07:08:23	2014-06-27 07:08:23
2013	45	438	A COMMENT	\N	2014-07-02 03:49:08	2014-07-02 03:49:08
2014	43	438	A COMMENT	\N	2014-07-05 10:02:17	2014-07-05 10:02:17
2015	47	438	A COMMENT	\N	2014-07-05 13:00:57	2014-07-05 13:00:57
2016	8	438	A COMMENT	\N	2014-07-24 16:44:08	2014-07-24 16:44:08
2017	28	438	A COMMENT	\N	2014-07-25 13:12:20	2014-07-25 13:12:20
2018	21	439	A COMMENT	\N	2014-06-08 03:31:55	2014-06-08 03:31:55
2019	1	439	A COMMENT	\N	2014-06-13 14:37:42	2014-06-13 14:37:42
2020	8	439	A COMMENT	\N	2014-06-17 15:51:38	2014-06-17 15:51:38
2021	47	439	A COMMENT	\N	2014-06-18 13:18:52	2014-06-18 13:18:52
2022	2	439	A COMMENT	\N	2014-06-22 07:47:29	2014-06-22 07:47:29
2023	28	439	A COMMENT	\N	2014-06-25 01:54:21	2014-06-25 01:54:21
2024	47	439	A COMMENT	\N	2014-06-26 14:52:20	2014-06-26 14:52:20
2025	27	439	A COMMENT	\N	2014-06-29 11:59:36	2014-06-29 11:59:36
2026	32	439	A COMMENT	\N	2014-07-07 23:50:07	2014-07-07 23:50:07
2027	4	439	A COMMENT	\N	2014-07-08 18:54:25	2014-07-08 18:54:25
2028	43	439	A COMMENT	\N	2014-07-09 21:02:53	2014-07-09 21:02:53
2029	45	439	A COMMENT	\N	2014-07-14 16:00:24	2014-07-14 16:00:24
2030	37	439	A COMMENT	\N	2014-07-15 03:02:18	2014-07-15 03:02:18
2031	10	439	A COMMENT	\N	2014-07-16 19:55:52	2014-07-16 19:55:52
2032	1	439	A COMMENT	\N	2014-07-18 11:50:42	2014-07-18 11:50:42
2033	28	439	A COMMENT	\N	2014-07-22 10:37:54	2014-07-22 10:37:54
2034	30	439	A COMMENT	\N	2014-07-25 04:34:00	2014-07-25 04:34:00
2035	47	439	A COMMENT	\N	2014-07-25 11:57:09	2014-07-25 11:57:09
2036	2	439	A COMMENT	\N	2014-07-27 19:47:47	2014-07-27 19:47:47
2037	11	440	A COMMENT	\N	2014-06-20 17:03:22	2014-06-20 17:03:22
2038	21	440	A COMMENT	\N	2014-06-23 01:00:04	2014-06-23 01:00:04
2039	30	440	A COMMENT	\N	2014-06-28 15:37:34	2014-06-28 15:37:34
2040	3	440	A COMMENT	\N	2014-06-30 12:50:50	2014-06-30 12:50:50
2041	10	440	A COMMENT	\N	2014-07-01 19:16:44	2014-07-01 19:16:44
2042	11	440	A COMMENT	\N	2014-07-02 09:53:46	2014-07-02 09:53:46
2043	32	440	A COMMENT	\N	2014-07-02 13:39:31	2014-07-02 13:39:31
2044	45	440	A COMMENT	\N	2014-07-03 16:32:29	2014-07-03 16:32:29
2045	10	440	A COMMENT	\N	2014-07-05 03:55:36	2014-07-05 03:55:36
2046	1	440	A COMMENT	\N	2014-07-13 11:23:44	2014-07-13 11:23:44
2047	47	440	A COMMENT	\N	2014-07-14 02:48:17	2014-07-14 02:48:17
2048	1	440	A COMMENT	\N	2014-07-14 16:58:13	2014-07-14 16:58:13
2049	28	440	A COMMENT	\N	2014-07-18 06:23:29	2014-07-18 06:23:29
2050	8	440	A COMMENT	\N	2014-07-18 08:28:00	2014-07-18 08:28:00
2051	8	440	A COMMENT	\N	2014-07-23 04:41:29	2014-07-23 04:41:29
2052	4	440	A COMMENT	\N	2014-07-28 13:19:46	2014-07-28 13:19:46
2053	20	441	A COMMENT	\N	2014-04-18 16:34:29	2014-04-18 16:34:29
2054	14	441	A COMMENT	\N	2014-04-20 13:42:59	2014-04-20 13:42:59
2055	43	441	A COMMENT	\N	2014-04-26 11:42:59	2014-04-26 11:42:59
2056	4	441	A COMMENT	\N	2014-05-03 04:35:39	2014-05-03 04:35:39
2057	2	441	A COMMENT	\N	2014-05-09 00:56:06	2014-05-09 00:56:06
2058	27	441	A COMMENT	\N	2014-05-10 12:20:11	2014-05-10 12:20:11
2059	27	441	A COMMENT	\N	2014-05-15 14:06:05	2014-05-15 14:06:05
2060	30	441	A COMMENT	\N	2014-05-16 04:05:21	2014-05-16 04:05:21
2061	45	441	A COMMENT	\N	2014-05-21 10:15:14	2014-05-21 10:15:14
2062	8	441	A COMMENT	\N	2014-05-28 02:00:58	2014-05-28 02:00:58
2063	21	441	A COMMENT	\N	2014-06-07 22:57:47	2014-06-07 22:57:47
2064	32	441	A COMMENT	\N	2014-06-12 14:28:08	2014-06-12 14:28:08
2065	11	441	A COMMENT	\N	2014-06-12 21:43:24	2014-06-12 21:43:24
2066	39	441	A COMMENT	\N	2014-06-15 22:29:02	2014-06-15 22:29:02
2067	37	441	A COMMENT	\N	2014-06-20 07:30:18	2014-06-20 07:30:18
2068	14	441	A COMMENT	\N	2014-06-26 14:51:05	2014-06-26 14:51:05
2069	28	441	A COMMENT	\N	2014-07-09 20:21:21	2014-07-09 20:21:21
2070	3	441	A COMMENT	\N	2014-07-23 01:21:47	2014-07-23 01:21:47
2071	10	442	A COMMENT	\N	2014-04-01 02:11:32	2014-04-01 02:11:32
2072	11	442	A COMMENT	\N	2014-04-06 04:37:42	2014-04-06 04:37:42
2073	21	442	A COMMENT	\N	2014-04-19 02:06:45	2014-04-19 02:06:45
2074	4	442	A COMMENT	\N	2014-05-12 13:20:21	2014-05-12 13:20:21
2075	1	442	A COMMENT	\N	2014-05-24 08:15:27	2014-05-24 08:15:27
2076	30	442	A COMMENT	\N	2014-06-04 23:58:06	2014-06-04 23:58:06
2077	30	442	A COMMENT	\N	2014-06-27 20:34:57	2014-06-27 20:34:57
2078	45	442	A COMMENT	\N	2014-07-06 19:42:56	2014-07-06 19:42:56
2079	14	443	A COMMENT	\N	2014-06-19 02:14:58	2014-06-19 02:14:58
2080	39	443	A COMMENT	\N	2014-07-09 14:49:47	2014-07-09 14:49:47
2081	28	443	A COMMENT	\N	2014-07-16 22:17:31	2014-07-16 22:17:31
2082	43	443	A COMMENT	\N	2014-07-19 22:40:35	2014-07-19 22:40:35
2083	10	443	A COMMENT	\N	2014-07-20 08:58:35	2014-07-20 08:58:35
2084	4	443	A COMMENT	\N	2014-07-20 14:12:48	2014-07-20 14:12:48
2085	8	443	A COMMENT	\N	2014-07-24 19:40:57	2014-07-24 19:40:57
2086	20	445	A COMMENT	\N	2014-04-05 08:08:49	2014-04-05 08:08:49
2087	37	445	A COMMENT	\N	2014-04-06 15:52:42	2014-04-06 15:52:42
2088	3	445	A COMMENT	\N	2014-04-26 13:32:32	2014-04-26 13:32:32
2089	47	445	A COMMENT	\N	2014-05-28 22:56:10	2014-05-28 22:56:10
2090	14	445	A COMMENT	\N	2014-05-30 06:26:11	2014-05-30 06:26:11
2091	20	446	A COMMENT	\N	2014-06-11 12:55:35	2014-06-11 12:55:35
2092	2	446	A COMMENT	\N	2014-06-12 01:02:42	2014-06-12 01:02:42
2093	39	446	A COMMENT	\N	2014-06-15 02:37:44	2014-06-15 02:37:44
2094	11	446	A COMMENT	\N	2014-06-27 02:19:32	2014-06-27 02:19:32
2095	27	446	A COMMENT	\N	2014-06-29 09:28:07	2014-06-29 09:28:07
2096	39	446	A COMMENT	\N	2014-06-30 19:49:25	2014-06-30 19:49:25
2097	32	446	A COMMENT	\N	2014-07-02 09:52:47	2014-07-02 09:52:47
2098	2	446	A COMMENT	\N	2014-07-04 10:23:49	2014-07-04 10:23:49
2099	1	446	A COMMENT	\N	2014-07-11 03:57:23	2014-07-11 03:57:23
2100	14	446	A COMMENT	\N	2014-07-12 05:14:40	2014-07-12 05:14:40
2101	4	446	A COMMENT	\N	2014-07-13 00:04:37	2014-07-13 00:04:37
2102	32	446	A COMMENT	\N	2014-07-24 15:36:07	2014-07-24 15:36:07
2103	21	446	A COMMENT	\N	2014-07-28 08:35:55	2014-07-28 08:35:55
2104	20	447	A COMMENT	\N	2014-02-25 16:25:31	2014-02-25 16:25:31
2105	45	447	A COMMENT	\N	2014-02-26 21:40:56	2014-02-26 21:40:56
2106	30	447	A COMMENT	\N	2014-04-03 21:04:08	2014-04-03 21:04:08
2107	14	447	A COMMENT	\N	2014-05-30 22:08:56	2014-05-30 22:08:56
2108	43	447	A COMMENT	\N	2014-07-20 17:33:54	2014-07-20 17:33:54
2109	20	448	A COMMENT	\N	2014-04-23 17:24:31	2014-04-23 17:24:31
2110	2	448	A COMMENT	\N	2014-07-01 18:11:52	2014-07-01 18:11:52
2111	37	448	A COMMENT	\N	2014-07-07 03:55:26	2014-07-07 03:55:26
2112	3	449	A COMMENT	\N	2014-05-30 13:32:36	2014-05-30 13:32:36
2113	28	449	A COMMENT	\N	2014-05-31 18:04:50	2014-05-31 18:04:50
2114	14	449	A COMMENT	\N	2014-07-14 23:21:00	2014-07-14 23:21:00
2115	39	449	A COMMENT	\N	2014-07-21 10:07:01	2014-07-21 10:07:01
2116	4	449	A COMMENT	\N	2014-07-26 03:49:33	2014-07-26 03:49:33
2117	35	450	A COMMENT	\N	2014-01-27 09:00:32	2014-01-27 09:00:32
2118	2	450	A COMMENT	\N	2014-03-11 14:03:19	2014-03-11 14:03:19
2119	39	450	A COMMENT	\N	2014-03-11 23:17:02	2014-03-11 23:17:02
2120	2	450	A COMMENT	\N	2014-04-24 15:21:30	2014-04-24 15:21:30
2121	37	450	A COMMENT	\N	2014-04-24 18:27:15	2014-04-24 18:27:15
2122	27	451	A COMMENT	\N	2014-04-06 06:27:37	2014-04-06 06:27:37
2123	1	451	A COMMENT	\N	2014-04-13 01:03:58	2014-04-13 01:03:58
2124	21	451	A COMMENT	\N	2014-05-06 19:54:14	2014-05-06 19:54:14
2125	4	451	A COMMENT	\N	2014-06-30 18:29:20	2014-06-30 18:29:20
2126	3	451	A COMMENT	\N	2014-07-06 16:54:38	2014-07-06 16:54:38
2127	10	452	A COMMENT	\N	2014-06-27 23:06:13	2014-06-27 23:06:13
2128	30	452	A COMMENT	\N	2014-07-03 00:44:48	2014-07-03 00:44:48
2129	28	452	A COMMENT	\N	2014-07-03 15:22:52	2014-07-03 15:22:52
2130	3	452	A COMMENT	\N	2014-07-06 19:59:13	2014-07-06 19:59:13
2131	39	452	A COMMENT	\N	2014-07-10 20:26:05	2014-07-10 20:26:05
2132	39	452	A COMMENT	\N	2014-07-11 00:55:29	2014-07-11 00:55:29
2133	21	452	A COMMENT	\N	2014-07-16 22:18:05	2014-07-16 22:18:05
2134	8	452	A COMMENT	\N	2014-07-18 11:33:58	2014-07-18 11:33:58
2135	47	452	A COMMENT	\N	2014-07-18 20:40:36	2014-07-18 20:40:36
2136	2	452	A COMMENT	\N	2014-07-19 02:02:47	2014-07-19 02:02:47
2137	32	452	A COMMENT	\N	2014-07-21 08:02:19	2014-07-21 08:02:19
2138	14	452	A COMMENT	\N	2014-07-23 14:55:16	2014-07-23 14:55:16
2139	27	452	A COMMENT	\N	2014-07-23 17:15:41	2014-07-23 17:15:41
2140	32	452	A COMMENT	\N	2014-07-23 19:43:43	2014-07-23 19:43:43
2141	11	452	A COMMENT	\N	2014-07-24 09:00:25	2014-07-24 09:00:25
2142	37	452	A COMMENT	\N	2014-07-24 20:51:03	2014-07-24 20:51:03
2143	21	452	A COMMENT	\N	2014-07-26 10:25:07	2014-07-26 10:25:07
2144	45	452	A COMMENT	\N	2014-07-26 19:32:12	2014-07-26 19:32:12
2145	1	454	A COMMENT	\N	2014-07-12 17:22:52	2014-07-12 17:22:52
2146	45	454	A COMMENT	\N	2014-07-16 12:44:56	2014-07-16 12:44:56
2147	39	454	A COMMENT	\N	2014-07-20 03:13:35	2014-07-20 03:13:35
2148	43	454	A COMMENT	\N	2014-07-21 00:59:47	2014-07-21 00:59:47
2149	43	454	A COMMENT	\N	2014-07-28 18:28:32	2014-07-28 18:28:32
2150	2	456	A COMMENT	\N	2014-03-17 08:53:56	2014-03-17 08:53:56
2151	3	456	A COMMENT	\N	2014-04-11 10:54:33	2014-04-11 10:54:33
2152	27	456	A COMMENT	\N	2014-07-21 23:44:28	2014-07-21 23:44:28
2153	29	457	A COMMENT	\N	2014-05-24 07:18:39	2014-05-24 07:18:39
2154	34	459	A COMMENT	\N	2013-11-30 06:11:38	2013-11-30 06:11:38
2155	32	459	A COMMENT	\N	2014-01-03 02:02:49	2014-01-03 02:02:49
2156	11	459	A COMMENT	\N	2014-02-04 17:00:26	2014-02-04 17:00:26
2157	45	459	A COMMENT	\N	2014-02-24 20:43:37	2014-02-24 20:43:37
2158	28	459	A COMMENT	\N	2014-03-02 13:51:43	2014-03-02 13:51:43
2159	43	459	A COMMENT	\N	2014-03-06 23:26:29	2014-03-06 23:26:29
2160	3	459	A COMMENT	\N	2014-03-20 10:55:14	2014-03-20 10:55:14
2161	10	459	A COMMENT	\N	2014-03-30 14:27:40	2014-03-30 14:27:40
2162	37	459	A COMMENT	\N	2014-05-06 13:12:06	2014-05-06 13:12:06
2163	37	459	A COMMENT	\N	2014-05-10 17:38:53	2014-05-10 17:38:53
2164	2	459	A COMMENT	\N	2014-05-16 17:21:21	2014-05-16 17:21:21
2165	47	459	A COMMENT	\N	2014-05-25 09:45:36	2014-05-25 09:45:36
2166	14	459	A COMMENT	\N	2014-06-28 06:48:01	2014-06-28 06:48:01
2167	1	459	A COMMENT	\N	2014-07-01 11:17:37	2014-07-01 11:17:37
2168	30	459	A COMMENT	\N	2014-07-13 20:33:04	2014-07-13 20:33:04
2169	10	459	A COMMENT	\N	2014-07-20 18:23:34	2014-07-20 18:23:34
2170	4	459	A COMMENT	\N	2014-07-27 16:02:02	2014-07-27 16:02:02
2171	2	460	A COMMENT	\N	2014-02-14 15:23:35	2014-02-14 15:23:35
2172	37	460	A COMMENT	\N	2014-04-08 10:33:56	2014-04-08 10:33:56
2173	8	460	A COMMENT	\N	2014-05-25 17:57:25	2014-05-25 17:57:25
2174	37	460	A COMMENT	\N	2014-05-30 11:30:45	2014-05-30 11:30:45
2175	47	461	A COMMENT	\N	2014-03-12 07:38:49	2014-03-12 07:38:49
2176	39	461	A COMMENT	\N	2014-03-25 00:43:15	2014-03-25 00:43:15
2177	37	461	A COMMENT	\N	2014-04-03 17:47:57	2014-04-03 17:47:57
2178	1	461	A COMMENT	\N	2014-04-04 01:26:43	2014-04-04 01:26:43
2179	2	461	A COMMENT	\N	2014-04-06 09:10:29	2014-04-06 09:10:29
2180	27	461	A COMMENT	\N	2014-04-12 11:53:08	2014-04-12 11:53:08
2181	10	461	A COMMENT	\N	2014-06-12 20:23:06	2014-06-12 20:23:06
2182	30	461	A COMMENT	\N	2014-07-08 09:54:17	2014-07-08 09:54:17
2183	45	461	A COMMENT	\N	2014-07-11 12:10:38	2014-07-11 12:10:38
2184	11	461	A COMMENT	\N	2014-07-20 14:59:33	2014-07-20 14:59:33
2185	34	462	A COMMENT	\N	2013-12-15 14:13:57	2013-12-15 14:13:57
2186	34	463	A COMMENT	\N	2013-12-07 12:35:21	2013-12-07 12:35:21
2187	21	463	A COMMENT	\N	2013-12-29 18:17:21	2013-12-29 18:17:21
2188	13	466	A COMMENT	\N	2014-07-28 13:16:44	2014-07-28 13:16:44
2189	13	467	A COMMENT	\N	2014-07-28 15:22:25	2014-07-28 15:22:25
2190	1	468	A COMMENT	\N	2014-07-28 17:11:02	2014-07-28 17:11:02
2191	14	468	A COMMENT	\N	2014-07-28 17:18:37	2014-07-28 17:18:37
2192	2	468	A COMMENT	\N	2014-07-28 17:56:26	2014-07-28 17:56:26
2193	2	469	A COMMENT	\N	2014-07-28 12:07:25	2014-07-28 12:07:25
2194	8	469	A COMMENT	\N	2014-07-28 12:24:08	2014-07-28 12:24:08
2195	39	469	A COMMENT	\N	2014-07-28 15:00:08	2014-07-28 15:00:08
2196	32	469	A COMMENT	\N	2014-07-28 15:49:11	2014-07-28 15:49:11
2197	3	469	A COMMENT	\N	2014-07-28 17:16:37	2014-07-28 17:16:37
2198	45	469	A COMMENT	\N	2014-07-28 17:51:49	2014-07-28 17:51:49
2199	32	469	A COMMENT	\N	2014-07-28 18:33:07	2014-07-28 18:33:07
2200	21	469	A COMMENT	\N	2014-07-28 19:09:20	2014-07-28 19:09:20
2201	32	472	A COMMENT	\N	2014-07-28 16:23:37	2014-07-28 16:23:37
2202	2	472	A COMMENT	\N	2014-07-28 16:59:30	2014-07-28 16:59:30
2203	21	472	A COMMENT	\N	2014-07-28 18:04:13	2014-07-28 18:04:13
2204	10	472	A COMMENT	\N	2014-07-28 18:23:31	2014-07-28 18:23:31
2205	27	472	A COMMENT	\N	2014-07-28 18:31:57	2014-07-28 18:31:57
2206	2	473	A COMMENT	\N	2014-07-28 08:03:53	2014-07-28 08:03:53
2207	8	473	A COMMENT	\N	2014-07-28 09:55:06	2014-07-28 09:55:06
2208	32	473	A COMMENT	\N	2014-07-28 13:12:26	2014-07-28 13:12:26
2209	3	473	A COMMENT	\N	2014-07-28 13:36:59	2014-07-28 13:36:59
2210	32	473	A COMMENT	\N	2014-07-28 13:53:03	2014-07-28 13:53:03
2211	37	473	A COMMENT	\N	2014-07-28 17:07:45	2014-07-28 17:07:45
2212	43	473	A COMMENT	\N	2014-07-28 17:49:21	2014-07-28 17:49:21
2213	28	473	A COMMENT	\N	2014-07-28 17:56:48	2014-07-28 17:56:48
2214	1	473	A COMMENT	\N	2014-07-28 18:16:09	2014-07-28 18:16:09
2215	28	473	A COMMENT	\N	2014-07-28 19:39:46	2014-07-28 19:39:46
2216	39	474	A COMMENT	\N	2014-07-28 11:44:13	2014-07-28 11:44:13
2217	21	474	A COMMENT	\N	2014-07-28 16:12:05	2014-07-28 16:12:05
2218	10	474	A COMMENT	\N	2014-07-28 16:36:05	2014-07-28 16:36:05
2219	30	474	A COMMENT	\N	2014-07-28 18:59:53	2014-07-28 18:59:53
2220	1	474	A COMMENT	\N	2014-07-28 19:09:56	2014-07-28 19:09:56
2221	28	475	A COMMENT	\N	2014-07-28 10:52:27	2014-07-28 10:52:27
2222	21	475	A COMMENT	\N	2014-07-28 12:42:42	2014-07-28 12:42:42
2223	21	475	A COMMENT	\N	2014-07-28 14:43:05	2014-07-28 14:43:05
2224	21	475	A COMMENT	\N	2014-07-28 18:40:28	2014-07-28 18:40:28
2225	13	477	A COMMENT	\N	2014-07-28 10:04:14	2014-07-28 10:04:14
2226	1	478	A COMMENT	\N	2014-07-28 12:52:19	2014-07-28 12:52:19
2227	14	478	A COMMENT	\N	2014-07-28 15:39:31	2014-07-28 15:39:31
2228	13	479	A COMMENT	\N	2014-07-28 04:50:32	2014-07-28 04:50:32
2229	8	479	A COMMENT	\N	2014-07-28 07:10:27	2014-07-28 07:10:27
2230	47	479	A COMMENT	\N	2014-07-28 17:12:49	2014-07-28 17:12:49
2231	13	480	A COMMENT	\N	2014-07-28 08:46:13	2014-07-28 08:46:13
2232	27	480	A COMMENT	\N	2014-07-28 10:01:46	2014-07-28 10:01:46
2233	3	480	A COMMENT	\N	2014-07-28 12:07:57	2014-07-28 12:07:57
2234	32	480	A COMMENT	\N	2014-07-28 13:36:55	2014-07-28 13:36:55
2235	11	480	A COMMENT	\N	2014-07-28 16:17:15	2014-07-28 16:17:15
2236	4	480	A COMMENT	\N	2014-07-28 16:35:13	2014-07-28 16:35:13
2237	45	480	A COMMENT	\N	2014-07-28 19:11:50	2014-07-28 19:11:50
2238	8	480	A COMMENT	\N	2014-07-28 19:29:39	2014-07-28 19:29:39
2239	47	481	A COMMENT	\N	2014-07-28 12:59:06	2014-07-28 12:59:06
2240	10	481	A COMMENT	\N	2014-07-28 14:00:01	2014-07-28 14:00:01
2241	30	481	A COMMENT	\N	2014-07-28 14:21:47	2014-07-28 14:21:47
2242	1	481	A COMMENT	\N	2014-07-28 16:37:48	2014-07-28 16:37:48
2243	3	481	A COMMENT	\N	2014-07-28 18:14:32	2014-07-28 18:14:32
2244	39	483	A COMMENT	\N	2014-07-28 08:33:17	2014-07-28 08:33:17
2245	1	483	A COMMENT	\N	2014-07-28 10:21:24	2014-07-28 10:21:24
2246	8	483	A COMMENT	\N	2014-07-28 11:33:46	2014-07-28 11:33:46
2247	8	483	A COMMENT	\N	2014-07-28 11:41:05	2014-07-28 11:41:05
2248	32	483	A COMMENT	\N	2014-07-28 12:43:43	2014-07-28 12:43:43
2249	45	483	A COMMENT	\N	2014-07-28 12:51:20	2014-07-28 12:51:20
2250	43	483	A COMMENT	\N	2014-07-28 12:55:20	2014-07-28 12:55:20
2251	11	483	A COMMENT	\N	2014-07-28 14:53:57	2014-07-28 14:53:57
2252	10	483	A COMMENT	\N	2014-07-28 16:17:31	2014-07-28 16:17:31
2253	21	483	A COMMENT	\N	2014-07-28 16:21:33	2014-07-28 16:21:33
2254	39	483	A COMMENT	\N	2014-07-28 19:43:53	2014-07-28 19:43:53
2255	8	484	A COMMENT	\N	2014-07-28 10:29:41	2014-07-28 10:29:41
2256	3	485	A COMMENT	\N	2014-02-24 17:04:32	2014-02-24 17:04:32
2257	21	485	A COMMENT	\N	2014-04-01 22:13:35	2014-04-01 22:13:35
2258	14	485	A COMMENT	\N	2014-05-23 00:57:21	2014-05-23 00:57:21
2259	11	485	A COMMENT	\N	2014-07-05 23:10:21	2014-07-05 23:10:21
2260	47	485	A COMMENT	\N	2014-07-16 05:50:55	2014-07-16 05:50:55
2261	30	485	A COMMENT	\N	2014-07-19 07:52:42	2014-07-19 07:52:42
2262	1	487	A COMMENT	\N	2014-04-23 16:10:23	2014-04-23 16:10:23
2263	8	487	A COMMENT	\N	2014-04-24 17:29:00	2014-04-24 17:29:00
2264	37	487	A COMMENT	\N	2014-05-19 18:59:55	2014-05-19 18:59:55
2265	1	487	A COMMENT	\N	2014-05-20 16:36:51	2014-05-20 16:36:51
2266	14	487	A COMMENT	\N	2014-05-27 09:29:43	2014-05-27 09:29:43
2267	1	487	A COMMENT	\N	2014-06-06 18:57:53	2014-06-06 18:57:53
2268	45	487	A COMMENT	\N	2014-06-11 19:35:44	2014-06-11 19:35:44
2269	39	487	A COMMENT	\N	2014-07-24 07:17:49	2014-07-24 07:17:49
2270	1	489	A COMMENT	\N	2014-07-15 23:13:11	2014-07-15 23:13:11
2271	39	489	A COMMENT	\N	2014-07-17 11:34:07	2014-07-17 11:34:07
2272	21	489	A COMMENT	\N	2014-07-18 17:04:46	2014-07-18 17:04:46
2273	27	489	A COMMENT	\N	2014-07-19 00:12:00	2014-07-19 00:12:00
2274	45	489	A COMMENT	\N	2014-07-19 20:55:21	2014-07-19 20:55:21
2275	43	489	A COMMENT	\N	2014-07-23 08:42:08	2014-07-23 08:42:08
2276	37	489	A COMMENT	\N	2014-07-26 21:04:36	2014-07-26 21:04:36
2277	11	489	A COMMENT	\N	2014-07-27 11:17:09	2014-07-27 11:17:09
2278	40	490	A COMMENT	\N	2014-05-01 17:30:57	2014-05-01 17:30:57
2279	39	490	A COMMENT	\N	2014-05-02 08:24:41	2014-05-02 08:24:41
2280	21	490	A COMMENT	\N	2014-05-15 15:00:38	2014-05-15 15:00:38
2281	3	490	A COMMENT	\N	2014-05-20 20:37:07	2014-05-20 20:37:07
2282	10	490	A COMMENT	\N	2014-06-03 05:53:30	2014-06-03 05:53:30
2283	4	490	A COMMENT	\N	2014-06-15 11:18:47	2014-06-15 11:18:47
2284	11	490	A COMMENT	\N	2014-06-18 23:50:59	2014-06-18 23:50:59
2285	30	490	A COMMENT	\N	2014-07-10 04:37:13	2014-07-10 04:37:13
2286	39	490	A COMMENT	\N	2014-07-16 14:49:44	2014-07-16 14:49:44
2287	37	490	A COMMENT	\N	2014-07-23 22:32:23	2014-07-23 22:32:23
2288	47	491	A COMMENT	\N	2014-04-12 08:04:42	2014-04-12 08:04:42
2289	28	491	A COMMENT	\N	2014-05-12 18:31:24	2014-05-12 18:31:24
2290	8	492	A COMMENT	\N	2014-03-01 17:56:03	2014-03-01 17:56:03
2291	1	492	A COMMENT	\N	2014-04-13 14:48:40	2014-04-13 14:48:40
2292	14	492	A COMMENT	\N	2014-06-08 10:38:31	2014-06-08 10:38:31
2293	2	492	A COMMENT	\N	2014-06-23 11:20:18	2014-06-23 11:20:18
2294	11	492	A COMMENT	\N	2014-07-01 16:05:41	2014-07-01 16:05:41
2295	40	493	A COMMENT	\N	2014-03-11 03:11:18	2014-03-11 03:11:18
2296	21	493	A COMMENT	\N	2014-04-03 17:17:04	2014-04-03 17:17:04
2297	8	493	A COMMENT	\N	2014-05-07 07:28:51	2014-05-07 07:28:51
2298	4	494	A COMMENT	\N	2014-04-21 19:22:13	2014-04-21 19:22:13
2299	10	494	A COMMENT	\N	2014-05-04 10:48:01	2014-05-04 10:48:01
2300	2	494	A COMMENT	\N	2014-05-06 20:00:20	2014-05-06 20:00:20
2301	47	494	A COMMENT	\N	2014-05-12 10:59:06	2014-05-12 10:59:06
2302	47	494	A COMMENT	\N	2014-05-18 01:23:55	2014-05-18 01:23:55
2303	39	494	A COMMENT	\N	2014-06-27 16:29:01	2014-06-27 16:29:01
2304	1	494	A COMMENT	\N	2014-07-18 15:58:50	2014-07-18 15:58:50
2305	5	495	A COMMENT	\N	2014-04-04 17:31:40	2014-04-04 17:31:40
2306	30	495	A COMMENT	\N	2014-05-07 10:49:47	2014-05-07 10:49:47
2307	8	495	A COMMENT	\N	2014-07-23 02:47:26	2014-07-23 02:47:26
2308	28	496	A COMMENT	\N	2014-02-27 04:07:20	2014-02-27 04:07:20
2309	39	496	A COMMENT	\N	2014-03-16 06:03:23	2014-03-16 06:03:23
2310	37	496	A COMMENT	\N	2014-03-16 11:59:28	2014-03-16 11:59:28
2311	37	496	A COMMENT	\N	2014-04-24 20:41:06	2014-04-24 20:41:06
2312	8	496	A COMMENT	\N	2014-06-02 05:32:11	2014-06-02 05:32:11
2313	27	497	A COMMENT	\N	2014-07-02 10:00:27	2014-07-02 10:00:27
2314	5	498	A COMMENT	\N	2014-02-10 05:24:57	2014-02-10 05:24:57
2315	32	498	A COMMENT	\N	2014-02-19 09:37:32	2014-02-19 09:37:32
2316	27	498	A COMMENT	\N	2014-03-09 01:32:23	2014-03-09 01:32:23
2317	27	498	A COMMENT	\N	2014-03-30 09:22:25	2014-03-30 09:22:25
2318	3	498	A COMMENT	\N	2014-04-15 23:41:25	2014-04-15 23:41:25
2319	8	498	A COMMENT	\N	2014-04-30 19:59:13	2014-04-30 19:59:13
2320	47	498	A COMMENT	\N	2014-05-01 00:29:15	2014-05-01 00:29:15
2321	47	498	A COMMENT	\N	2014-05-28 02:41:55	2014-05-28 02:41:55
2322	11	498	A COMMENT	\N	2014-07-20 11:27:25	2014-07-20 11:27:25
2323	37	498	A COMMENT	\N	2014-07-20 19:45:59	2014-07-20 19:45:59
2324	2	499	A COMMENT	\N	2014-04-23 17:51:58	2014-04-23 17:51:58
2325	37	499	A COMMENT	\N	2014-06-09 23:42:30	2014-06-09 23:42:30
2326	10	499	A COMMENT	\N	2014-07-25 02:50:21	2014-07-25 02:50:21
2327	5	500	A COMMENT	\N	2014-05-06 11:55:24	2014-05-06 11:55:24
2328	3	500	A COMMENT	\N	2014-05-11 20:45:24	2014-05-11 20:45:24
2329	8	500	A COMMENT	\N	2014-05-16 10:29:22	2014-05-16 10:29:22
2330	39	500	A COMMENT	\N	2014-05-24 19:58:19	2014-05-24 19:58:19
2331	45	500	A COMMENT	\N	2014-06-06 15:26:34	2014-06-06 15:26:34
2332	28	500	A COMMENT	\N	2014-06-11 21:44:30	2014-06-11 21:44:30
2333	4	500	A COMMENT	\N	2014-06-18 04:43:18	2014-06-18 04:43:18
2334	43	501	A COMMENT	\N	2014-03-18 15:17:34	2014-03-18 15:17:34
2335	10	501	A COMMENT	\N	2014-04-02 11:12:27	2014-04-02 11:12:27
2336	10	501	A COMMENT	\N	2014-04-06 04:25:10	2014-04-06 04:25:10
2337	28	501	A COMMENT	\N	2014-04-18 18:47:07	2014-04-18 18:47:07
2338	28	501	A COMMENT	\N	2014-06-22 15:38:08	2014-06-22 15:38:08
2339	30	501	A COMMENT	\N	2014-06-27 13:42:19	2014-06-27 13:42:19
2340	3	501	A COMMENT	\N	2014-07-07 23:05:38	2014-07-07 23:05:38
2341	39	501	A COMMENT	\N	2014-07-12 19:14:46	2014-07-12 19:14:46
2342	45	501	A COMMENT	\N	2014-07-18 02:37:46	2014-07-18 02:37:46
2343	39	502	A COMMENT	\N	2014-04-01 16:07:14	2014-04-01 16:07:14
2344	11	502	A COMMENT	\N	2014-04-17 19:42:58	2014-04-17 19:42:58
2345	30	502	A COMMENT	\N	2014-04-20 06:03:27	2014-04-20 06:03:27
2346	8	502	A COMMENT	\N	2014-04-24 21:47:39	2014-04-24 21:47:39
2347	10	502	A COMMENT	\N	2014-05-24 21:57:27	2014-05-24 21:57:27
2348	45	502	A COMMENT	\N	2014-06-25 21:21:05	2014-06-25 21:21:05
2349	14	502	A COMMENT	\N	2014-07-25 08:19:13	2014-07-25 08:19:13
2350	14	503	A COMMENT	\N	2014-03-05 08:11:24	2014-03-05 08:11:24
2351	1	503	A COMMENT	\N	2014-03-13 08:55:30	2014-03-13 08:55:30
2352	8	503	A COMMENT	\N	2014-03-19 13:06:59	2014-03-19 13:06:59
2353	32	503	A COMMENT	\N	2014-04-12 22:53:36	2014-04-12 22:53:36
2354	30	504	A COMMENT	\N	2014-06-03 02:27:49	2014-06-03 02:27:49
2355	5	506	A COMMENT	\N	2014-03-28 11:16:01	2014-03-28 11:16:01
2356	21	507	A COMMENT	\N	2014-04-28 00:45:20	2014-04-28 00:45:20
2357	4	507	A COMMENT	\N	2014-04-30 10:59:25	2014-04-30 10:59:25
2358	3	507	A COMMENT	\N	2014-05-02 08:50:41	2014-05-02 08:50:41
2359	28	507	A COMMENT	\N	2014-05-07 10:03:11	2014-05-07 10:03:11
2360	21	507	A COMMENT	\N	2014-05-16 15:40:37	2014-05-16 15:40:37
2361	2	507	A COMMENT	\N	2014-05-17 16:19:28	2014-05-17 16:19:28
2362	32	507	A COMMENT	\N	2014-05-29 22:53:09	2014-05-29 22:53:09
2363	32	507	A COMMENT	\N	2014-06-07 15:43:45	2014-06-07 15:43:45
2364	30	507	A COMMENT	\N	2014-06-18 03:25:36	2014-06-18 03:25:36
2365	28	507	A COMMENT	\N	2014-06-28 03:20:37	2014-06-28 03:20:37
2366	45	507	A COMMENT	\N	2014-06-28 16:30:53	2014-06-28 16:30:53
2367	21	507	A COMMENT	\N	2014-07-10 05:16:14	2014-07-10 05:16:14
2368	39	507	A COMMENT	\N	2014-07-14 05:07:53	2014-07-14 05:07:53
2369	14	507	A COMMENT	\N	2014-07-27 17:34:01	2014-07-27 17:34:01
2370	28	507	A COMMENT	\N	2014-07-28 14:37:14	2014-07-28 14:37:14
2371	43	509	A COMMENT	\N	2014-03-01 08:34:34	2014-03-01 08:34:34
2372	3	509	A COMMENT	\N	2014-03-10 15:31:51	2014-03-10 15:31:51
2373	11	509	A COMMENT	\N	2014-03-21 15:45:57	2014-03-21 15:45:57
2374	8	509	A COMMENT	\N	2014-03-23 14:46:20	2014-03-23 14:46:20
2375	30	509	A COMMENT	\N	2014-04-09 12:02:53	2014-04-09 12:02:53
2376	10	509	A COMMENT	\N	2014-05-19 16:21:41	2014-05-19 16:21:41
2377	14	509	A COMMENT	\N	2014-06-16 06:21:59	2014-06-16 06:21:59
2378	28	510	A COMMENT	\N	2014-05-02 10:47:48	2014-05-02 10:47:48
2379	30	510	A COMMENT	\N	2014-06-10 00:30:29	2014-06-10 00:30:29
2380	2	510	A COMMENT	\N	2014-06-13 14:01:55	2014-06-13 14:01:55
2381	39	510	A COMMENT	\N	2014-06-15 09:44:59	2014-06-15 09:44:59
2382	11	510	A COMMENT	\N	2014-07-01 12:19:23	2014-07-01 12:19:23
2383	2	511	A COMMENT	\N	2014-07-21 08:17:08	2014-07-21 08:17:08
2384	33	513	A COMMENT	\N	2014-07-14 05:41:50	2014-07-14 05:41:50
2385	27	513	A COMMENT	\N	2014-07-14 19:48:35	2014-07-14 19:48:35
2386	47	513	A COMMENT	\N	2014-07-25 14:57:55	2014-07-25 14:57:55
2387	3	513	A COMMENT	\N	2014-07-26 16:09:28	2014-07-26 16:09:28
2388	28	514	A COMMENT	\N	2014-07-21 10:00:43	2014-07-21 10:00:43
2389	27	514	A COMMENT	\N	2014-07-22 15:11:27	2014-07-22 15:11:27
2390	32	514	A COMMENT	\N	2014-07-24 17:13:26	2014-07-24 17:13:26
2391	21	514	A COMMENT	\N	2014-07-25 16:50:06	2014-07-25 16:50:06
2392	2	515	A COMMENT	\N	2014-07-22 08:59:17	2014-07-22 08:59:17
2393	21	516	A COMMENT	\N	2014-07-26 04:41:07	2014-07-26 04:41:07
2394	1	517	A COMMENT	\N	2014-03-14 16:39:05	2014-03-14 16:39:05
2395	43	517	A COMMENT	\N	2014-03-15 17:05:30	2014-03-15 17:05:30
2396	28	517	A COMMENT	\N	2014-03-19 01:35:38	2014-03-19 01:35:38
2397	45	517	A COMMENT	\N	2014-03-22 09:23:51	2014-03-22 09:23:51
2398	14	517	A COMMENT	\N	2014-03-26 23:23:23	2014-03-26 23:23:23
2399	30	517	A COMMENT	\N	2014-04-18 08:35:19	2014-04-18 08:35:19
2400	45	517	A COMMENT	\N	2014-04-21 19:44:40	2014-04-21 19:44:40
2401	1	517	A COMMENT	\N	2014-04-26 10:27:08	2014-04-26 10:27:08
2402	37	517	A COMMENT	\N	2014-05-05 15:02:55	2014-05-05 15:02:55
2403	2	517	A COMMENT	\N	2014-05-12 08:48:45	2014-05-12 08:48:45
2404	11	517	A COMMENT	\N	2014-05-26 05:18:08	2014-05-26 05:18:08
2405	28	517	A COMMENT	\N	2014-05-28 04:45:27	2014-05-28 04:45:27
2406	4	517	A COMMENT	\N	2014-06-04 06:16:04	2014-06-04 06:16:04
2407	10	517	A COMMENT	\N	2014-06-18 01:45:03	2014-06-18 01:45:03
2408	3	517	A COMMENT	\N	2014-06-19 02:17:04	2014-06-19 02:17:04
2409	39	517	A COMMENT	\N	2014-06-28 19:20:43	2014-06-28 19:20:43
2410	11	517	A COMMENT	\N	2014-07-03 10:24:47	2014-07-03 10:24:47
2411	47	517	A COMMENT	\N	2014-07-22 13:44:02	2014-07-22 13:44:02
2412	23	524	A COMMENT	\N	2014-07-28 03:16:16	2014-07-28 03:16:16
2413	23	526	A COMMENT	\N	2014-07-26 07:50:43	2014-07-26 07:50:43
2414	23	530	A COMMENT	\N	2014-07-25 23:36:01	2014-07-25 23:36:01
2415	23	531	A COMMENT	\N	2014-07-25 16:10:07	2014-07-25 16:10:07
2416	23	535	A COMMENT	\N	2014-07-26 14:49:44	2014-07-26 14:49:44
2417	23	541	A COMMENT	\N	2014-07-26 09:10:22	2014-07-26 09:10:22
2418	23	543	A COMMENT	\N	2014-07-27 15:57:15	2014-07-27 15:57:15
2419	23	544	A COMMENT	\N	2014-07-26 07:47:18	2014-07-26 07:47:18
2420	23	549	A COMMENT	\N	2014-07-27 13:59:04	2014-07-27 13:59:04
2421	23	550	A COMMENT	\N	2014-07-28 04:04:05	2014-07-28 04:04:05
2422	23	553	A COMMENT	\N	2014-07-25 15:12:25	2014-07-25 15:12:25
2423	23	554	A COMMENT	\N	2014-07-25 18:54:53	2014-07-25 18:54:53
2424	23	555	A COMMENT	\N	2014-07-25 22:04:57	2014-07-25 22:04:57
2425	23	561	A COMMENT	\N	2014-07-26 12:55:12	2014-07-26 12:55:12
2426	23	564	A COMMENT	\N	2014-07-25 16:47:19	2014-07-25 16:47:19
2427	23	566	A COMMENT	\N	2014-07-25 23:11:02	2014-07-25 23:11:02
2428	23	568	A COMMENT	\N	2014-07-26 19:49:58	2014-07-26 19:49:58
2429	23	570	A COMMENT	\N	2014-07-27 08:55:44	2014-07-27 08:55:44
2430	23	575	A COMMENT	\N	2014-07-25 23:35:55	2014-07-25 23:35:55
2431	23	579	A COMMENT	\N	2014-07-25 16:06:32	2014-07-25 16:06:32
2432	23	582	A COMMENT	\N	2014-07-26 22:08:38	2014-07-26 22:08:38
2433	23	583	A COMMENT	\N	2014-07-27 19:55:36	2014-07-27 19:55:36
2434	23	584	A COMMENT	\N	2014-07-26 19:14:47	2014-07-26 19:14:47
2435	23	592	A COMMENT	\N	2014-07-27 14:35:13	2014-07-27 14:35:13
2436	41	596	A COMMENT	\N	2014-06-26 11:59:09	2014-06-26 11:59:09
2437	41	597	A COMMENT	\N	2014-03-25 23:14:55	2014-03-25 23:14:55
2438	26	603	A COMMENT	\N	2014-04-16 23:52:43	2014-04-16 23:52:43
2439	26	606	A COMMENT	\N	2014-05-28 03:33:31	2014-05-28 03:33:31
2440	26	607	A COMMENT	\N	2014-05-29 01:10:34	2014-05-29 01:10:34
2441	26	609	A COMMENT	\N	2014-06-20 20:24:40	2014-06-20 20:24:40
2442	26	613	A COMMENT	\N	2014-07-20 10:42:04	2014-07-20 10:42:04
2443	26	615	A COMMENT	\N	2014-04-14 20:05:30	2014-04-14 20:05:30
2444	44	620	A COMMENT	\N	2014-05-25 15:23:34	2014-05-25 15:23:34
2445	44	622	A COMMENT	\N	2014-04-11 22:40:45	2014-04-11 22:40:45
2446	44	623	A COMMENT	\N	2014-06-05 07:57:48	2014-06-05 07:57:48
2447	44	625	A COMMENT	\N	2014-04-21 18:31:48	2014-04-21 18:31:48
2448	44	626	A COMMENT	\N	2014-04-25 16:40:27	2014-04-25 16:40:27
2449	44	629	A COMMENT	\N	2014-07-02 05:45:30	2014-07-02 05:45:30
2450	44	630	A COMMENT	\N	2014-04-16 13:43:12	2014-04-16 13:43:12
2451	44	631	A COMMENT	\N	2014-05-31 14:11:47	2014-05-31 14:11:47
2452	44	634	A COMMENT	\N	2014-05-01 04:30:17	2014-05-01 04:30:17
2453	44	637	A COMMENT	\N	2014-06-10 22:22:40	2014-06-10 22:22:40
2454	44	638	A COMMENT	\N	2014-04-14 15:53:25	2014-04-14 15:53:25
2455	44	645	A COMMENT	\N	2014-05-25 22:56:15	2014-05-25 22:56:15
2456	44	646	A COMMENT	\N	2014-06-02 15:43:06	2014-06-02 15:43:06
2457	44	648	A COMMENT	\N	2014-07-17 21:44:08	2014-07-17 21:44:08
2458	44	650	A COMMENT	\N	2014-07-24 00:09:25	2014-07-24 00:09:25
2459	44	652	A COMMENT	\N	2014-06-14 13:44:43	2014-06-14 13:44:43
2460	44	657	A COMMENT	\N	2014-07-05 13:39:37	2014-07-05 13:39:37
2461	44	658	A COMMENT	\N	2014-05-06 09:55:51	2014-05-06 09:55:51
2462	44	661	A COMMENT	\N	2014-04-27 04:21:30	2014-04-27 04:21:30
2463	44	664	A COMMENT	\N	2014-07-16 09:13:36	2014-07-16 09:13:36
2464	44	665	A COMMENT	\N	2014-06-15 11:39:30	2014-06-15 11:39:30
2465	44	666	A COMMENT	\N	2014-05-02 09:35:01	2014-05-02 09:35:01
2466	44	668	A COMMENT	\N	2014-05-06 09:18:54	2014-05-06 09:18:54
2467	44	672	A COMMENT	\N	2014-05-28 08:34:39	2014-05-28 08:34:39
2468	48	647	A COMMENT	\N	2014-07-06 20:19:10	2014-07-06 20:19:10
2469	25	188	A COMMENT	\N	2014-07-17 07:05:07	2014-07-17 07:05:07
2470	6	528	A COMMENT	\N	2014-07-28 19:48:40.398702	2014-07-28 19:48:40.398702
2471	22	177	A COMMENT	\N	2014-02-12 03:24:28	2014-02-12 03:24:28
2472	16	590	A COMMENT	\N	2014-07-28 19:48:40.408634	2014-07-28 19:48:40.408634
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 2472, true);


--
-- Data for Name: lifecycle_events; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY lifecycle_events (id, user_id, key, happened_at, created_at, updated_at) FROM stdin;
1	1	joined	\N	\N	\N
2	2	joined	\N	\N	\N
3	3	joined	\N	\N	\N
4	4	joined	\N	\N	\N
5	5	joined	\N	\N	\N
6	5	fetched	2014-01-12 09:08:42.870081	2014-01-12 09:08:42.870081	2014-01-12 09:08:42.870081
7	6	joined	\N	\N	\N
8	6	fetched	2014-07-21 12:51:24.873063	2014-07-21 12:51:24.873063	2014-07-21 12:51:24.873063
9	7	joined	\N	\N	\N
10	8	joined	\N	\N	\N
11	8	fetched	2013-11-09 22:58:29.877178	2013-11-09 22:58:29.877178	2013-11-09 22:58:29.877178
12	9	joined	\N	\N	\N
13	10	joined	\N	\N	\N
14	10	fetched	2014-06-14 22:07:05.885567	2014-06-14 22:07:05.885567	2014-06-14 22:07:05.885567
15	11	joined	\N	\N	\N
16	11	fetched	2014-07-12 02:18:00.888412	2014-07-12 02:18:00.888412	2014-07-12 02:18:00.888412
17	12	joined	\N	\N	\N
18	13	joined	\N	\N	\N
19	13	fetched	2014-07-28 02:43:01.892451	2014-07-28 02:43:01.892451	2014-07-28 02:43:01.892451
20	14	joined	\N	\N	\N
21	14	fetched	2013-12-19 11:13:08.894864	2013-12-19 11:13:08.894864	2013-12-19 11:13:08.894864
22	15	joined	\N	\N	\N
23	15	fetched	2013-12-14 12:25:39.897221	2013-12-14 12:25:39.897221	2013-12-14 12:25:39.897221
24	16	joined	\N	\N	\N
25	16	fetched	2014-06-22 03:13:04.89964	2014-06-22 03:13:04.89964	2014-06-22 03:13:04.89964
26	17	joined	\N	\N	\N
27	17	fetched	2014-01-01 22:17:55.902064	2014-01-01 22:17:55.902064	2014-01-01 22:17:55.902064
28	18	joined	\N	\N	\N
29	18	fetched	2013-11-18 00:38:07.905975	2013-11-18 00:38:07.905975	2013-11-18 00:38:07.905975
30	19	joined	\N	\N	\N
31	19	fetched	2014-03-28 05:12:27.90894	2014-03-28 05:12:27.90894	2014-03-28 05:12:27.90894
32	20	joined	\N	\N	\N
33	20	fetched	2014-02-20 02:30:53.911502	2014-02-20 02:30:53.911502	2014-02-20 02:30:53.911502
34	21	joined	\N	\N	\N
35	21	fetched	2014-03-01 14:01:54.914048	2014-03-01 14:01:54.914048	2014-03-01 14:01:54.914048
36	22	joined	\N	\N	\N
37	22	fetched	2014-01-22 15:06:20.916505	2014-01-22 15:06:20.916505	2014-01-22 15:06:20.916505
38	23	joined	\N	\N	\N
39	23	fetched	2014-07-25 14:42:43.918963	2014-07-25 14:42:43.918963	2014-07-25 14:42:43.918963
40	24	joined	\N	\N	\N
41	24	fetched	2014-05-30 17:06:06.921401	2014-05-30 17:06:06.921401	2014-05-30 17:06:06.921401
42	25	joined	\N	\N	\N
43	25	fetched	2014-04-03 04:06:09.923825	2014-04-03 04:06:09.923825	2014-04-03 04:06:09.923825
44	26	joined	\N	\N	\N
45	26	fetched	2014-04-12 11:57:12.926213	2014-04-12 11:57:12.926213	2014-04-12 11:57:12.926213
46	27	joined	\N	\N	\N
47	27	fetched	2014-01-03 09:45:36.928647	2014-01-03 09:45:36.928647	2014-01-03 09:45:36.928647
48	28	joined	\N	\N	\N
49	28	fetched	2014-07-04 00:35:15.93108	2014-07-04 00:35:15.93108	2014-07-04 00:35:15.93108
50	29	joined	\N	\N	\N
51	29	fetched	2013-12-05 06:44:36.933465	2013-12-05 06:44:36.933465	2013-12-05 06:44:36.933465
52	30	joined	\N	\N	\N
53	30	fetched	2014-02-28 19:01:56.935914	2014-02-28 19:01:56.935914	2014-02-28 19:01:56.935914
54	31	joined	\N	\N	\N
55	31	fetched	2014-01-14 13:16:12.938334	2014-01-14 13:16:12.938334	2014-01-14 13:16:12.938334
56	32	joined	\N	\N	\N
57	32	fetched	2013-11-09 23:31:18.940684	2013-11-09 23:31:18.940684	2013-11-09 23:31:18.940684
58	33	joined	\N	\N	\N
59	33	fetched	2014-07-06 09:44:48.943073	2014-07-06 09:44:48.943073	2014-07-06 09:44:48.943073
60	34	joined	\N	\N	\N
61	34	fetched	2013-11-24 08:16:37.945471	2013-11-24 08:16:37.945471	2013-11-24 08:16:37.945471
62	35	joined	\N	\N	\N
63	35	fetched	2014-01-23 11:29:59.948097	2014-01-23 11:29:59.948097	2014-01-23 11:29:59.948097
64	36	joined	\N	\N	\N
65	36	fetched	2014-02-27 09:09:39.950536	2014-02-27 09:09:39.950536	2014-02-27 09:09:39.950536
66	37	joined	\N	\N	\N
67	37	fetched	2014-06-17 08:45:20.953628	2014-06-17 08:45:20.953628	2014-06-17 08:45:20.953628
68	38	joined	\N	\N	\N
69	39	joined	\N	\N	\N
70	39	fetched	2014-04-15 01:45:27.957769	2014-04-15 01:45:27.957769	2014-04-15 01:45:27.957769
71	40	joined	\N	\N	\N
72	40	fetched	2014-02-03 21:46:25.960376	2014-02-03 21:46:25.960376	2014-02-03 21:46:25.960376
73	41	joined	\N	\N	\N
74	41	fetched	2014-03-15 10:58:14.962945	2014-03-15 10:58:14.962945	2014-03-15 10:58:14.962945
75	42	joined	\N	\N	\N
76	42	fetched	2014-06-03 17:29:29.965948	2014-06-03 17:29:29.965948	2014-06-03 17:29:29.965948
77	43	joined	\N	\N	\N
78	43	fetched	2014-07-24 08:16:39.969039	2014-07-24 08:16:39.969039	2014-07-24 08:16:39.969039
79	44	joined	\N	\N	\N
80	44	fetched	2014-04-07 16:06:56.97205	2014-04-07 16:06:56.97205	2014-04-07 16:06:56.97205
81	45	joined	\N	\N	\N
82	45	fetched	2013-11-22 14:56:58.975033	2013-11-22 14:56:58.975033	2013-11-22 14:56:58.975033
83	46	joined	\N	\N	\N
84	47	joined	\N	\N	\N
85	47	fetched	2014-05-15 17:51:09.979178	2014-05-15 17:51:09.979178	2014-05-15 17:51:09.979178
86	48	joined	\N	\N	\N
87	48	fetched	2014-06-22 23:25:26.981701	2014-06-22 23:25:26.981701	2014-06-22 23:25:26.981701
88	8	submitted	2013-11-15 23:04:22	2013-11-15 23:04:22	2013-11-15 23:04:22
89	8	completed	2014-03-09 08:15:08	2014-03-09 08:15:08	2014-03-09 08:15:08
90	8	received_feedback	2014-07-07 09:46:41	2014-07-07 09:46:41	2014-07-07 09:46:41
91	47	commented	2014-07-07 09:46:41	2014-07-07 09:46:41	2014-07-07 09:46:41
92	11	commented	2014-07-08 15:08:55	2014-07-08 15:08:55	2014-07-08 15:08:55
93	2	commented	2014-07-14 09:33:16	2014-07-14 09:33:16	2014-07-14 09:33:16
94	27	commented	2014-07-27 21:13:14	2014-07-27 21:13:14	2014-07-27 21:13:14
95	10	submitted	2014-07-05 09:36:42	2014-07-05 09:36:42	2014-07-05 09:36:42
96	10	received_feedback	2014-07-16 02:33:23	2014-07-16 02:33:23	2014-07-16 02:33:23
97	32	commented	2014-07-16 02:33:23	2014-07-16 02:33:23	2014-07-16 02:33:23
98	4	commented	2014-07-04 17:32:57	2014-07-04 17:32:57	2014-07-04 17:32:57
99	37	commented	2014-07-05 02:06:39	2014-07-05 02:06:39	2014-07-05 02:06:39
100	39	commented	2014-07-06 17:10:52	2014-07-06 17:10:52	2014-07-06 17:10:52
101	45	commented	2014-07-08 16:38:41	2014-07-08 16:38:41	2014-07-08 16:38:41
102	3	commented	2014-07-14 08:03:01	2014-07-14 08:03:01	2014-07-14 08:03:01
103	43	commented	2014-07-16 19:42:17	2014-07-16 19:42:17	2014-07-16 19:42:17
104	1	commented	2014-07-19 20:13:48	2014-07-19 20:13:48	2014-07-19 20:13:48
105	21	commented	2014-07-21 00:03:29	2014-07-21 00:03:29	2014-07-21 00:03:29
106	28	commented	2014-07-27 23:14:12	2014-07-27 23:14:12	2014-07-27 23:14:12
107	8	commented	2014-07-12 18:47:42	2014-07-12 18:47:42	2014-07-12 18:47:42
108	10	completed	2014-06-25 19:09:12	2014-06-25 19:09:12	2014-06-25 19:09:12
109	14	commented	2014-06-25 01:57:20	2014-06-25 01:57:20	2014-06-25 01:57:20
110	30	commented	2014-07-18 08:05:44	2014-07-18 08:05:44	2014-07-18 08:05:44
111	11	submitted	2014-07-12 21:42:07	2014-07-12 21:42:07	2014-07-12 21:42:07
112	11	received_feedback	2014-07-18 05:44:28	2014-07-18 05:44:28	2014-07-18 05:44:28
113	11	completed	2014-07-19 23:58:25	2014-07-19 23:58:25	2014-07-19 23:58:25
114	47	onboarded	2014-07-16 23:28:00	2014-07-16 23:28:00	2014-07-16 23:28:00
115	27	onboarded	2014-07-27 21:13:14	2014-07-27 21:13:14	2014-07-27 21:13:14
116	2	onboarded	2014-07-26 02:05:58	2014-07-26 02:05:58	2014-07-26 02:05:58
117	10	commented	2014-07-24 08:57:38	2014-07-24 08:57:38	2014-07-24 08:57:38
118	14	submitted	2014-04-14 19:39:00	2014-04-14 19:39:00	2014-04-14 19:39:00
119	14	received_feedback	2014-04-15 16:46:15	2014-04-15 16:46:15	2014-04-15 16:46:15
120	39	onboarded	2014-07-13 14:53:40	2014-07-13 14:53:40	2014-07-13 14:53:40
121	45	onboarded	2014-07-19 13:12:33	2014-07-19 13:12:33	2014-07-19 13:12:33
122	4	onboarded	2014-07-18 05:44:28	2014-07-18 05:44:28	2014-07-18 05:44:28
123	1	onboarded	2014-07-19 23:45:55	2014-07-19 23:45:55	2014-07-19 23:45:55
124	32	onboarded	2014-07-28 12:33:46	2014-07-28 12:33:46	2014-07-28 12:33:46
125	43	onboarded	2014-07-20 04:25:43	2014-07-20 04:25:43	2014-07-20 04:25:43
126	11	onboarded	2014-07-08 15:08:55	2014-07-08 15:08:55	2014-07-08 15:08:55
127	28	onboarded	2014-07-22 07:17:14	2014-07-22 07:17:14	2014-07-22 07:17:14
128	37	onboarded	2014-07-16 22:10:06	2014-07-16 22:10:06	2014-07-16 22:10:06
129	8	onboarded	2014-07-26 12:37:21	2014-07-26 12:37:21	2014-07-26 12:37:21
130	30	onboarded	2014-07-19 12:26:39	2014-07-19 12:26:39	2014-07-19 12:26:39
131	21	submitted	2014-03-27 08:45:20	2014-03-27 08:45:20	2014-03-27 08:45:20
132	21	received_feedback	2014-04-26 19:11:50	2014-04-26 19:11:50	2014-04-26 19:11:50
133	14	onboarded	2014-07-20 14:49:34	2014-07-20 14:49:34	2014-07-20 14:49:34
134	3	onboarded	2014-07-16 04:13:21	2014-07-16 04:13:21	2014-07-16 04:13:21
135	27	submitted	2014-02-25 13:16:19	2014-02-25 13:16:19	2014-02-25 13:16:19
136	27	received_feedback	2014-06-02 08:00:32	2014-06-02 08:00:32	2014-06-02 08:00:32
137	27	completed	2014-02-27 21:33:01	2014-02-27 21:33:01	2014-02-27 21:33:01
138	28	submitted	2014-07-06 03:29:20	2014-07-06 03:29:20	2014-07-06 03:29:20
139	28	received_feedback	2014-07-23 02:55:07	2014-07-23 02:55:07	2014-07-23 02:55:07
140	10	onboarded	2014-07-24 08:57:38	2014-07-24 08:57:38	2014-07-24 08:57:38
141	21	onboarded	2014-07-27 18:49:30	2014-07-27 18:49:30	2014-07-27 18:49:30
142	28	completed	2014-07-28 19:48:27.154956	2014-07-28 19:48:27.154956	2014-07-28 19:48:27.154956
143	30	submitted	2014-04-25 02:15:32	2014-04-25 02:15:32	2014-04-25 02:15:32
144	30	received_feedback	2014-04-26 23:56:05	2014-04-26 23:56:05	2014-04-26 23:56:05
145	30	completed	2014-04-29 22:18:30	2014-04-29 22:18:30	2014-04-29 22:18:30
146	32	submitted	2014-01-16 19:38:57	2014-01-16 19:38:57	2014-01-16 19:38:57
147	32	received_feedback	2014-03-31 16:51:38	2014-03-31 16:51:38	2014-03-31 16:51:38
148	32	completed	2014-03-28 12:45:08	2014-03-28 12:45:08	2014-03-28 12:45:08
149	37	submitted	2014-06-18 19:27:58	2014-06-18 19:27:58	2014-06-18 19:27:58
150	37	received_feedback	2014-06-19 18:26:54	2014-06-19 18:26:54	2014-06-19 18:26:54
151	37	completed	2014-06-29 14:46:18	2014-06-29 14:46:18	2014-06-29 14:46:18
152	39	submitted	2014-06-11 12:08:58	2014-06-11 12:08:58	2014-06-11 12:08:58
153	39	received_feedback	2014-07-04 11:03:26	2014-07-04 11:03:26	2014-07-04 11:03:26
154	39	completed	2014-06-19 17:22:43	2014-06-19 17:22:43	2014-06-19 17:22:43
155	43	submitted	2014-07-24 16:07:19	2014-07-24 16:07:19	2014-07-24 16:07:19
156	43	received_feedback	2014-07-26 07:26:31	2014-07-26 07:26:31	2014-07-26 07:26:31
157	43	completed	2014-07-28 08:03:03	2014-07-28 08:03:03	2014-07-28 08:03:03
158	45	submitted	2014-01-19 07:41:13	2014-01-19 07:41:13	2014-01-19 07:41:13
159	45	received_feedback	2014-04-21 08:00:45	2014-04-21 08:00:45	2014-04-21 08:00:45
160	45	completed	2014-06-29 17:36:48	2014-06-29 17:36:48	2014-06-29 17:36:48
161	47	submitted	2014-05-21 07:40:41	2014-05-21 07:40:41	2014-05-21 07:40:41
162	47	received_feedback	2014-06-14 18:10:54	2014-06-14 18:10:54	2014-06-14 18:10:54
163	47	completed	2014-06-09 10:13:45	2014-06-09 10:13:45	2014-06-09 10:13:45
164	48	submitted	2014-06-30 02:16:03	2014-06-30 02:16:03	2014-06-30 02:16:03
165	25	submitted	2014-05-21 11:48:25	2014-05-21 11:48:25	2014-05-21 11:48:25
166	25	received_feedback	2014-07-28 02:03:18	2014-07-28 02:03:18	2014-07-28 02:03:18
167	6	submitted	2014-07-22 22:15:20	2014-07-22 22:15:20	2014-07-22 22:15:20
168	6	received_feedback	2014-07-23 09:18:21	2014-07-23 09:18:21	2014-07-23 09:18:21
169	22	submitted	2014-02-06 03:54:53	2014-02-06 03:54:53	2014-02-06 03:54:53
170	22	received_feedback	2014-02-10 07:55:25	2014-02-10 07:55:25	2014-02-10 07:55:25
171	16	submitted	2014-07-17 15:41:30	2014-07-17 15:41:30	2014-07-17 15:41:30
172	16	received_feedback	2014-07-19 08:16:31	2014-07-19 08:16:31	2014-07-19 08:16:31
173	19	submitted	2014-04-24 07:43:43	2014-04-24 07:43:43	2014-04-24 07:43:43
174	19	received_feedback	2014-04-25 12:45:57	2014-04-25 12:45:57	2014-04-25 12:45:57
175	19	completed	2014-06-28 00:54:39	2014-06-28 00:54:39	2014-06-28 00:54:39
176	20	submitted	2014-04-18 16:26:38	2014-04-18 16:26:38	2014-04-18 16:26:38
177	20	received_feedback	2014-04-20 13:42:59	2014-04-20 13:42:59	2014-04-20 13:42:59
178	20	completed	2014-04-22 07:50:53	2014-04-22 07:50:53	2014-04-22 07:50:53
179	35	submitted	2014-01-27 08:52:03	2014-01-27 08:52:03	2014-01-27 08:52:03
180	35	received_feedback	2014-03-11 14:03:19	2014-03-11 14:03:19	2014-03-11 14:03:19
181	35	completed	2014-06-30 01:32:14	2014-06-30 01:32:14	2014-06-30 01:32:14
182	29	submitted	2014-01-18 15:08:21	2014-01-18 15:08:21	2014-01-18 15:08:21
183	29	received_feedback	2014-03-17 08:53:56	2014-03-17 08:53:56	2014-03-17 08:53:56
184	29	completed	2014-05-31 21:13:44	2014-05-31 21:13:44	2014-05-31 21:13:44
185	34	submitted	2014-06-10 03:35:57	2014-06-10 03:35:57	2014-06-10 03:35:57
186	34	completed	2014-06-12 00:54:55	2014-06-12 00:54:55	2014-06-12 00:54:55
187	34	received_feedback	2014-01-03 02:02:49	2014-01-03 02:02:49	2014-01-03 02:02:49
188	13	submitted	2014-07-28 08:59:28	2014-07-28 08:59:28	2014-07-28 08:59:28
189	13	received_feedback	2014-07-28 17:11:02	2014-07-28 17:11:02	2014-07-28 17:11:02
190	40	submitted	2014-02-07 16:31:15	2014-02-07 16:31:15	2014-02-07 16:31:15
191	40	received_feedback	2014-02-24 17:04:32	2014-02-24 17:04:32	2014-02-24 17:04:32
192	5	submitted	2014-04-04 17:22:50	2014-04-04 17:22:50	2014-04-04 17:22:50
193	5	received_feedback	2014-05-07 10:49:47	2014-05-07 10:49:47	2014-05-07 10:49:47
194	33	submitted	2014-07-07 06:58:07	2014-07-07 06:58:07	2014-07-07 06:58:07
195	33	received_feedback	2014-07-14 19:48:35	2014-07-14 19:48:35	2014-07-14 19:48:35
196	15	submitted	2014-03-12 23:53:02	2014-03-12 23:53:02	2014-03-12 23:53:02
197	15	received_feedback	2014-03-14 16:39:05	2014-03-14 16:39:05	2014-03-14 16:39:05
198	17	submitted	2014-01-19 07:13:56	2014-01-19 07:13:56	2014-01-19 07:13:56
199	23	submitted	2014-07-27 03:39:59	2014-07-27 03:39:59	2014-07-27 03:39:59
200	41	submitted	2014-05-09 16:15:46	2014-05-09 16:15:46	2014-05-09 16:15:46
201	26	submitted	2014-04-16 23:48:07	2014-04-16 23:48:07	2014-04-16 23:48:07
202	44	submitted	2014-05-15 00:47:18	2014-05-15 00:47:18	2014-05-15 00:47:18
203	44	received_feedback	2014-07-06 20:19:10	2014-07-06 20:19:10	2014-07-06 20:19:10
204	48	commented	2014-07-06 20:19:10	2014-07-06 20:19:10	2014-07-06 20:19:10
205	25	commented	2014-07-17 07:05:07	2014-07-17 07:05:07	2014-07-17 07:05:07
206	23	received_feedback	2014-07-28 19:48:40.398702	2014-07-28 19:48:40.398702	2014-07-28 19:48:40.398702
207	6	commented	2014-07-28 19:48:40.398702	2014-07-28 19:48:40.398702	2014-07-28 19:48:40.398702
208	22	commented	2014-02-12 03:24:28	2014-02-12 03:24:28	2014-02-12 03:24:28
209	16	commented	2014-07-28 19:48:40.408634	2014-07-28 19:48:40.408634	2014-07-28 19:48:40.408634
\.


--
-- Name: lifecycle_events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('lifecycle_events_id_seq', 209, true);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: log_entries; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY log_entries (id, user_id, body, created_at, updated_at) FROM stdin;
\.


--
-- Name: log_entries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('log_entries_id_seq', 1, false);


--
-- Data for Name: looks; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY looks (id, user_id, exercise_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: looks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('looks_id_seq', 1, false);


--
-- Data for Name: muted_submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY muted_submissions (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: muted_submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('muted_submissions_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, item_id, regarding, read, count, created_at, updated_at, item_type, creator_id) FROM stdin;
1	1	555	code	f	1	2014-07-25 21:58:45	2014-07-25 21:58:45	Submission	23
2	1	556	code	f	1	2014-07-26 13:17:10	2014-07-26 13:17:10	Submission	23
3	2	556	code	f	1	2014-07-26 13:17:10	2014-07-26 13:17:10	Submission	23
4	2	557	code	f	1	2014-07-25 18:41:06	2014-07-25 18:41:06	Submission	23
5	1	558	code	t	1	2014-07-27 16:31:50	2014-07-27 16:31:50	Submission	23
6	2	558	code	f	1	2014-07-27 16:31:50	2014-07-27 16:31:50	Submission	23
7	1	559	code	f	1	2014-07-26 00:04:16	2014-07-26 00:04:16	Submission	23
8	2	559	code	f	1	2014-07-26 00:04:16	2014-07-26 00:04:16	Submission	23
9	2	560	code	f	1	2014-07-25 20:32:26	2014-07-25 20:32:26	Submission	23
10	1	561	code	f	1	2014-07-26 12:52:01	2014-07-26 12:52:01	Submission	23
11	2	561	code	f	1	2014-07-26 12:52:01	2014-07-26 12:52:01	Submission	23
12	1	562	code	t	1	2014-07-28 07:15:47	2014-07-28 07:15:47	Submission	23
13	2	562	code	t	1	2014-07-28 07:15:47	2014-07-28 07:15:47	Submission	23
14	30	564	code	f	1	2014-07-25 16:43:33	2014-07-25 16:43:33	Submission	23
15	10	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
16	47	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
17	19	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
18	34	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
19	1	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
20	2	565	code	f	1	2014-07-25 21:20:05	2014-07-25 21:20:05	Submission	23
21	10	566	code	f	1	2014-07-25 23:02:32	2014-07-25 23:02:32	Submission	23
22	30	566	code	f	1	2014-07-25 23:02:32	2014-07-25 23:02:32	Submission	23
23	47	566	code	f	1	2014-07-25 23:02:32	2014-07-25 23:02:32	Submission	23
24	19	566	code	f	1	2014-07-25 23:02:32	2014-07-25 23:02:32	Submission	23
25	34	566	code	f	1	2014-07-25 23:02:32	2014-07-25 23:02:32	Submission	23
26	30	567	code	f	1	2014-07-26 10:30:42	2014-07-26 10:30:42	Submission	23
27	47	567	code	f	1	2014-07-26 10:30:42	2014-07-26 10:30:42	Submission	23
28	29	567	code	f	1	2014-07-26 10:30:42	2014-07-26 10:30:42	Submission	23
29	1	567	code	f	1	2014-07-26 10:30:42	2014-07-26 10:30:42	Submission	23
30	10	568	code	f	1	2014-07-26 19:45:47	2014-07-26 19:45:47	Submission	23
31	30	568	code	f	1	2014-07-26 19:45:47	2014-07-26 19:45:47	Submission	23
32	19	568	code	f	1	2014-07-26 19:45:47	2014-07-26 19:45:47	Submission	23
33	34	568	code	f	1	2014-07-26 19:45:47	2014-07-26 19:45:47	Submission	23
34	10	569	code	t	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
35	30	569	code	f	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
36	47	569	code	t	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
37	19	569	code	t	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
38	29	569	code	f	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
39	34	569	code	t	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
40	1	569	code	t	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
41	2	569	code	f	1	2014-07-27 05:30:17	2014-07-27 05:30:17	Submission	23
42	10	570	code	t	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
43	30	570	code	f	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
44	47	570	code	f	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
45	19	570	code	f	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
46	29	570	code	t	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
47	34	570	code	t	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
48	1	570	code	f	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
49	2	570	code	f	1	2014-07-27 08:47:47	2014-07-27 08:47:47	Submission	23
50	10	571	code	f	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
51	30	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
52	47	571	code	f	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
53	19	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
54	29	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
55	34	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
56	1	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
57	2	571	code	t	1	2014-07-27 11:47:52	2014-07-27 11:47:52	Submission	23
58	10	572	code	t	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
59	30	572	code	t	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
60	47	572	code	t	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
61	19	572	code	t	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
62	29	572	code	f	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
63	34	572	code	t	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
64	1	572	code	f	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
65	2	572	code	f	1	2014-07-27 12:56:47	2014-07-27 12:56:47	Submission	23
66	34	573	code	f	1	2014-07-28 01:57:09	2014-07-28 01:57:09	Submission	23
67	1	573	code	t	1	2014-07-28 01:57:09	2014-07-28 01:57:09	Submission	23
68	2	573	code	f	1	2014-07-28 01:57:09	2014-07-28 01:57:09	Submission	23
69	2	574	code	f	1	2014-07-26 00:30:14	2014-07-26 00:30:14	Submission	23
70	1	575	code	f	1	2014-07-25 23:29:35	2014-07-25 23:29:35	Submission	23
71	2	590	code	f	1	2014-07-26 03:02:33	2014-07-26 03:02:33	Submission	23
72	1	578	code	f	1	2014-07-28 07:41:13	2014-07-28 07:41:13	Submission	23
73	2	578	code	f	1	2014-07-28 07:41:13	2014-07-28 07:41:13	Submission	23
74	1	579	code	f	1	2014-07-25 15:57:02	2014-07-25 15:57:02	Submission	23
75	2	579	code	f	1	2014-07-25 15:57:02	2014-07-25 15:57:02	Submission	23
76	2	580	code	f	1	2014-07-26 04:56:31	2014-07-26 04:56:31	Submission	23
77	1	581	code	f	1	2014-07-26 08:27:32	2014-07-26 08:27:32	Submission	23
78	32	582	code	f	1	2014-07-26 22:05:00	2014-07-26 22:05:00	Submission	23
79	1	582	code	f	1	2014-07-26 22:05:00	2014-07-26 22:05:00	Submission	23
80	2	582	code	t	1	2014-07-26 22:05:00	2014-07-26 22:05:00	Submission	23
81	34	583	code	f	1	2014-07-27 19:46:26	2014-07-27 19:46:26	Submission	23
82	1	583	code	t	1	2014-07-27 19:46:26	2014-07-27 19:46:26	Submission	23
83	2	583	code	f	1	2014-07-27 19:46:26	2014-07-27 19:46:26	Submission	23
84	1	584	code	f	1	2014-07-26 19:06:06	2014-07-26 19:06:06	Submission	23
85	11	585	code	f	1	2014-07-25 21:52:19	2014-07-25 21:52:19	Submission	23
86	30	585	code	f	1	2014-07-25 21:52:19	2014-07-25 21:52:19	Submission	23
87	32	585	code	f	1	2014-07-25 21:52:19	2014-07-25 21:52:19	Submission	23
88	1	585	code	f	1	2014-07-25 21:52:19	2014-07-25 21:52:19	Submission	23
89	2	585	code	f	1	2014-07-25 21:52:19	2014-07-25 21:52:19	Submission	23
90	11	586	code	f	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
91	30	586	code	t	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
92	32	586	code	f	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
93	20	586	code	t	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
94	1	586	code	t	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
95	2	586	code	t	1	2014-07-27 05:33:48	2014-07-27 05:33:48	Submission	23
96	11	587	code	f	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
97	30	587	code	t	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
98	32	587	code	t	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
99	20	587	code	f	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
100	1	587	code	f	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
101	2	587	code	t	1	2014-07-27 14:03:53	2014-07-27 14:03:53	Submission	23
102	1	588	code	t	1	2014-07-28 14:55:14	2014-07-28 14:55:14	Submission	23
103	2	588	code	f	1	2014-07-28 14:55:14	2014-07-28 14:55:14	Submission	23
104	1	591	code	f	1	2014-07-26 08:36:23	2014-07-26 08:36:23	Submission	23
105	2	591	code	f	1	2014-07-26 08:36:23	2014-07-26 08:36:23	Submission	23
106	1	592	code	f	1	2014-07-27 14:30:21	2014-07-27 14:30:21	Submission	23
107	2	592	code	t	1	2014-07-27 14:30:21	2014-07-27 14:30:21	Submission	23
108	1	593	code	f	1	2014-07-26 01:31:08	2014-07-26 01:31:08	Submission	23
109	2	593	code	f	1	2014-07-26 01:31:08	2014-07-26 01:31:08	Submission	23
110	1	594	code	f	1	2014-05-09 16:15:46	2014-05-09 16:15:46	Submission	41
111	3	594	code	f	1	2014-05-09 16:15:46	2014-05-09 16:15:46	Submission	41
112	3	595	code	f	1	2014-06-20 07:03:13	2014-06-20 07:03:13	Submission	41
113	3	599	code	f	1	2014-04-19 01:24:50	2014-04-19 01:24:50	Submission	41
114	1	610	code	f	1	2014-07-01 01:57:09	2014-07-01 01:57:09	Submission	26
115	1	611	code	f	1	2014-06-03 16:07:43	2014-06-03 16:07:43	Submission	26
116	2	611	code	f	1	2014-06-03 16:07:43	2014-06-03 16:07:43	Submission	26
117	30	604	code	f	1	2014-04-27 23:28:33	2014-04-27 23:28:33	Submission	26
118	1	607	code	f	1	2014-05-29 01:00:50	2014-05-29 01:00:50	Submission	26
119	34	608	code	f	1	2014-06-20 17:13:09	2014-06-20 17:13:09	Submission	26
120	30	612	code	f	1	2014-06-07 05:28:50	2014-06-07 05:28:50	Submission	26
121	2	612	code	f	1	2014-06-07 05:28:50	2014-06-07 05:28:50	Submission	26
122	30	613	code	f	1	2014-07-20 10:33:23	2014-07-20 10:33:23	Submission	26
123	2	613	code	f	1	2014-07-20 10:33:23	2014-07-20 10:33:23	Submission	26
124	2	614	code	f	1	2014-06-17 19:31:42	2014-06-17 19:31:42	Submission	26
125	2	617	code	f	1	2014-06-18 01:09:46	2014-06-18 01:09:46	Submission	44
126	2	621	code	f	1	2014-05-31 11:49:00	2014-05-31 11:49:00	Submission	44
127	30	628	code	f	1	2014-05-18 01:35:07	2014-05-18 01:35:07	Submission	44
128	20	628	code	f	1	2014-05-18 01:35:07	2014-05-18 01:35:07	Submission	44
129	30	629	code	f	1	2014-07-02 05:38:06	2014-07-02 05:38:06	Submission	44
130	32	631	code	f	1	2014-05-31 14:09:42	2014-05-31 14:09:42	Submission	44
131	32	633	code	f	1	2014-04-25 05:30:48	2014-04-25 05:30:48	Submission	44
132	32	634	code	f	1	2014-05-01 04:21:49	2014-05-01 04:21:49	Submission	44
133	2	635	code	f	1	2014-05-02 10:50:00	2014-05-02 10:50:00	Submission	44
134	2	641	code	f	1	2014-04-28 17:46:05	2014-04-28 17:46:05	Submission	44
135	34	643	code	f	1	2014-05-18 18:10:17	2014-05-18 18:10:17	Submission	44
136	34	644	code	f	1	2014-05-21 17:34:49	2014-05-21 17:34:49	Submission	44
137	34	650	code	f	1	2014-07-24 00:06:53	2014-07-24 00:06:53	Submission	44
138	2	650	code	f	1	2014-07-24 00:06:53	2014-07-24 00:06:53	Submission	44
139	32	652	code	f	1	2014-06-14 13:36:02	2014-06-14 13:36:02	Submission	44
140	2	652	code	f	1	2014-06-14 13:36:02	2014-06-14 13:36:02	Submission	44
141	2	660	code	f	1	2014-05-17 07:01:37	2014-05-17 07:01:37	Submission	44
142	2	661	code	f	1	2014-04-27 04:17:11	2014-04-27 04:17:11	Submission	44
143	2	663	code	f	1	2014-06-02 14:48:52	2014-06-02 14:48:52	Submission	44
144	2	668	code	f	1	2014-05-06 09:09:18	2014-05-06 09:09:18	Submission	44
145	2	670	code	f	1	2014-05-17 22:57:29	2014-05-17 22:57:29	Submission	44
146	2	4	code	f	1	2014-02-27 05:54:30	2014-02-27 05:54:30	Submission	8
147	1	11	code	f	1	2014-06-21 18:54:50	2014-06-21 18:54:50	Submission	10
148	30	12	code	f	1	2014-06-18 17:43:06	2014-06-18 17:43:06	Submission	10
149	1	12	code	f	1	2014-06-18 17:43:06	2014-06-18 17:43:06	Submission	10
150	2	12	code	f	1	2014-06-18 17:43:06	2014-06-18 17:43:06	Submission	10
151	3	12	code	f	1	2014-06-18 17:43:06	2014-06-18 17:43:06	Submission	10
152	1	13	code	f	1	2014-06-19 06:40:47	2014-06-19 06:40:47	Submission	10
153	2	13	code	f	1	2014-06-19 06:40:47	2014-06-19 06:40:47	Submission	10
154	3	14	code	f	1	2014-06-22 17:03:42	2014-06-22 17:03:42	Submission	10
155	1	15	code	f	1	2014-06-28 04:38:19	2014-06-28 04:38:19	Submission	10
156	3	15	code	f	1	2014-06-28 04:38:19	2014-06-28 04:38:19	Submission	10
157	1	16	code	f	1	2014-06-30 14:48:39	2014-06-30 14:48:39	Submission	10
158	3	16	code	f	1	2014-06-30 14:48:39	2014-06-30 14:48:39	Submission	10
159	1	17	code	f	1	2014-07-08 02:28:34	2014-07-08 02:28:34	Submission	10
160	29	18	code	f	1	2014-07-11 02:36:10	2014-07-11 02:36:10	Submission	10
161	34	18	code	f	1	2014-07-11 02:36:10	2014-07-11 02:36:10	Submission	10
162	19	19	code	f	1	2014-07-13 09:04:11	2014-07-13 09:04:11	Submission	10
163	29	19	code	f	1	2014-07-13 09:04:11	2014-07-13 09:04:11	Submission	10
164	30	20	code	f	1	2014-07-19 21:39:26	2014-07-19 21:39:26	Submission	10
165	3	20	code	f	1	2014-07-19 21:39:26	2014-07-19 21:39:26	Submission	10
166	2	21	code	f	1	2014-07-21 01:43:53	2014-07-21 01:43:53	Submission	10
167	3	21	code	f	1	2014-07-21 01:43:53	2014-07-21 01:43:53	Submission	10
168	30	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
169	19	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
170	34	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
171	1	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
172	2	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
173	3	22	code	f	1	2014-07-24 18:45:51	2014-07-24 18:45:51	Submission	10
174	2	23	code	f	1	2014-06-19 23:13:31	2014-06-19 23:13:31	Submission	10
175	1	25	code	f	1	2014-07-12 21:42:07	2014-07-12 21:42:07	Submission	11
176	30	26	code	f	1	2014-07-27 14:35:41	2014-07-27 14:35:41	Submission	11
177	32	26	code	f	1	2014-07-27 14:35:41	2014-07-27 14:35:41	Submission	11
178	39	26	code	t	1	2014-07-27 14:35:41	2014-07-27 14:35:41	Submission	11
179	1	26	code	t	1	2014-07-27 14:35:41	2014-07-27 14:35:41	Submission	11
180	2	26	code	f	1	2014-07-27 14:35:41	2014-07-27 14:35:41	Submission	11
181	30	27	code	f	1	2014-07-14 02:05:44	2014-07-14 02:05:44	Submission	11
182	1	28	code	f	1	2014-07-15 01:04:20	2014-07-15 01:04:20	Submission	11
183	2	28	code	f	1	2014-07-15 01:04:20	2014-07-15 01:04:20	Submission	11
184	2	29	code	f	1	2014-07-15 23:08:55	2014-07-15 23:08:55	Submission	11
185	47	31	code	f	1	2014-07-23 02:57:07	2014-07-23 02:57:07	Submission	11
186	1	31	code	f	1	2014-07-23 02:57:07	2014-07-23 02:57:07	Submission	11
187	2	279	code	f	1	2014-05-19 20:39:07	2014-05-19 20:39:07	Submission	47
188	2	428	code	f	1	2014-07-19 16:06:29	2014-07-19 16:06:29	Submission	16
189	47	32	code	f	1	2014-07-23 05:24:58	2014-07-23 05:24:58	Submission	11
190	2	32	code	f	1	2014-07-23 05:24:58	2014-07-23 05:24:58	Submission	11
191	47	33	code	f	1	2014-07-24 14:38:22	2014-07-24 14:38:22	Submission	11
192	1	33	code	f	1	2014-07-24 14:38:22	2014-07-24 14:38:22	Submission	11
193	47	34	code	f	1	2014-07-25 06:40:01	2014-07-25 06:40:01	Submission	11
194	1	34	code	f	1	2014-07-25 06:40:01	2014-07-25 06:40:01	Submission	11
195	19	36	code	f	1	2014-07-21 03:16:32	2014-07-21 03:16:32	Submission	11
196	2	41	code	f	1	2014-07-12 15:11:49	2014-07-12 15:11:49	Submission	11
197	1	42	code	f	1	2014-04-14 19:39:00	2014-04-14 19:39:00	Submission	14
198	2	43	code	f	1	2014-05-15 05:51:18	2014-05-15 05:51:18	Submission	14
199	1	44	code	f	1	2014-05-24 09:59:33	2014-05-24 09:59:33	Submission	14
200	1	45	code	f	1	2014-03-27 08:45:20	2014-03-27 08:45:20	Submission	21
201	2	45	code	f	1	2014-03-27 08:45:20	2014-03-27 08:45:20	Submission	21
202	3	47	code	f	1	2014-04-04 20:14:10	2014-04-04 20:14:10	Submission	21
203	34	48	code	f	1	2014-05-05 21:08:31	2014-05-05 21:08:31	Submission	21
204	1	49	code	f	1	2014-05-26 01:57:13	2014-05-26 01:57:13	Submission	21
205	3	50	code	f	1	2014-06-26 13:05:06	2014-06-26 13:05:06	Submission	21
206	1	51	code	f	1	2014-06-29 12:41:13	2014-06-29 12:41:13	Submission	21
207	2	52	code	f	1	2014-07-10 11:37:33	2014-07-10 11:37:33	Submission	21
208	1	62	code	f	1	2014-07-06 00:24:33	2014-07-06 00:24:33	Submission	28
209	2	62	code	f	1	2014-07-06 00:24:33	2014-07-06 00:24:33	Submission	28
210	28	57	code	f	1	2014-07-14 03:30:39	2014-07-14 03:30:39	Submission	27
211	47	58	code	f	1	2014-07-06 03:29:20	2014-07-06 03:29:20	Submission	28
212	2	58	code	f	1	2014-07-06 03:29:20	2014-07-06 03:29:20	Submission	28
213	3	59	code	f	1	2014-07-18 14:29:10	2014-07-18 14:29:10	Submission	28
214	1	61	code	f	1	2014-07-25 04:12:35	2014-07-25 04:12:35	Submission	28
215	2	61	code	f	1	2014-07-25 04:12:35	2014-07-25 04:12:35	Submission	28
216	45	63	code	f	1	2014-07-08 15:06:22	2014-07-08 15:06:22	Submission	28
217	3	64	code	f	1	2014-07-10 11:36:08	2014-07-10 11:36:08	Submission	28
218	45	65	code	f	1	2014-07-15 19:05:58	2014-07-15 19:05:58	Submission	28
219	1	65	code	f	1	2014-07-15 19:05:58	2014-07-15 19:05:58	Submission	28
220	1	66	code	f	1	2014-07-20 08:47:25	2014-07-20 08:47:25	Submission	28
221	45	67	code	f	1	2014-07-21 12:16:27	2014-07-21 12:16:27	Submission	28
222	27	68	code	f	1	2014-07-24 13:37:30	2014-07-24 13:37:30	Submission	28
223	45	68	code	f	1	2014-07-24 13:37:30	2014-07-24 13:37:30	Submission	28
224	1	68	code	f	1	2014-07-24 13:37:30	2014-07-24 13:37:30	Submission	28
225	2	68	code	f	1	2014-07-24 13:37:30	2014-07-24 13:37:30	Submission	28
226	27	69	code	f	1	2014-07-25 12:37:58	2014-07-25 12:37:58	Submission	28
227	45	69	code	f	1	2014-07-25 12:37:58	2014-07-25 12:37:58	Submission	28
228	2	69	code	f	1	2014-07-25 12:37:58	2014-07-25 12:37:58	Submission	28
229	3	69	code	f	1	2014-07-25 12:37:58	2014-07-25 12:37:58	Submission	28
230	3	71	code	f	1	2014-05-31 13:00:40	2014-05-31 13:00:40	Submission	30
231	3	73	code	f	1	2014-07-06 09:13:56	2014-07-06 09:13:56	Submission	30
232	2	75	code	f	1	2014-06-11 16:09:38	2014-06-11 16:09:38	Submission	30
233	3	75	code	f	1	2014-06-11 16:09:38	2014-06-11 16:09:38	Submission	30
234	2	78	code	f	1	2014-05-26 11:29:19	2014-05-26 11:29:19	Submission	30
235	3	80	code	f	1	2014-03-29 17:08:27	2014-03-29 17:08:27	Submission	30
236	2	84	code	f	1	2014-04-26 01:24:23	2014-04-26 01:24:23	Submission	30
237	3	84	code	f	1	2014-04-26 01:24:23	2014-04-26 01:24:23	Submission	30
238	3	86	code	f	1	2014-05-18 05:56:08	2014-05-18 05:56:08	Submission	30
239	1	88	code	f	1	2014-07-06 04:52:45	2014-07-06 04:52:45	Submission	30
240	1	408	code	f	1	2014-07-21 07:40:59	2014-07-21 07:40:59	Submission	16
241	3	408	code	f	1	2014-07-21 07:40:59	2014-07-21 07:40:59	Submission	16
242	1	409	code	f	1	2014-07-13 18:54:21	2014-07-13 18:54:21	Submission	16
243	2	409	code	f	1	2014-07-13 18:54:21	2014-07-13 18:54:21	Submission	16
244	3	100	code	f	1	2014-03-11 18:47:56	2014-03-11 18:47:56	Submission	30
245	2	102	code	f	1	2014-04-11 18:14:42	2014-04-11 18:14:42	Submission	30
246	3	102	code	f	1	2014-04-11 18:14:42	2014-04-11 18:14:42	Submission	30
247	3	108	code	f	1	2014-04-18 12:35:01	2014-04-18 12:35:01	Submission	30
248	32	110	code	f	1	2014-05-23 13:08:02	2014-05-23 13:08:02	Submission	30
249	3	112	code	f	1	2014-03-03 06:59:13	2014-03-03 06:59:13	Submission	30
250	2	113	code	f	1	2014-06-13 00:26:40	2014-06-13 00:26:40	Submission	30
251	1	114	code	f	1	2014-03-26 19:19:56	2014-03-26 19:19:56	Submission	30
252	2	119	code	f	1	2014-05-23 11:52:36	2014-05-23 11:52:36	Submission	30
253	1	120	code	f	1	2014-05-01 17:24:53	2014-05-01 17:24:53	Submission	30
254	1	122	code	f	1	2014-05-11 04:14:47	2014-05-11 04:14:47	Submission	30
255	2	123	code	f	1	2014-07-05 00:18:16	2014-07-05 00:18:16	Submission	30
256	1	124	code	f	1	2014-06-07 17:12:36	2014-06-07 17:12:36	Submission	30
257	3	125	code	f	1	2014-06-19 17:51:03	2014-06-19 17:51:03	Submission	30
258	2	128	code	f	1	2014-05-20 11:48:36	2014-05-20 11:48:36	Submission	30
259	3	130	code	f	1	2014-04-09 08:06:16	2014-04-09 08:06:16	Submission	30
260	3	132	code	f	1	2014-03-25 20:12:48	2014-03-25 20:12:48	Submission	30
261	2	133	code	f	1	2014-03-29 13:24:20	2014-03-29 13:24:20	Submission	30
262	32	410	code	f	1	2014-07-18 00:05:27	2014-07-18 00:05:27	Submission	16
263	1	410	code	f	1	2014-07-18 00:05:27	2014-07-18 00:05:27	Submission	16
264	3	135	code	f	1	2014-01-16 19:38:57	2014-01-16 19:38:57	Submission	32
265	3	138	code	f	1	2014-03-24 14:18:44	2014-03-24 14:18:44	Submission	32
266	3	166	code	f	1	2014-02-19 23:30:11	2014-02-19 23:30:11	Submission	32
267	3	144	code	f	1	2014-02-23 12:46:58	2014-02-23 12:46:58	Submission	32
268	3	146	code	f	1	2014-06-03 03:39:59	2014-06-03 03:39:59	Submission	32
269	3	147	code	f	1	2014-07-02 21:52:37	2014-07-02 21:52:37	Submission	32
270	3	150	code	f	1	2013-11-13 03:18:36	2013-11-13 03:18:36	Submission	32
271	3	160	code	f	1	2014-02-03 12:10:16	2014-02-03 12:10:16	Submission	32
272	3	162	code	f	1	2014-01-03 20:27:34	2014-01-03 20:27:34	Submission	32
273	3	176	code	f	1	2014-01-20 13:02:10	2014-01-20 13:02:10	Submission	32
274	3	177	code	f	1	2014-02-03 11:15:15	2014-02-03 11:15:15	Submission	32
275	2	645	code	f	1	2014-05-25 22:52:24	2014-05-25 22:52:24	Submission	44
276	34	646	code	f	1	2014-06-02 15:40:10	2014-06-02 15:40:10	Submission	44
277	1	185	code	f	1	2014-06-21 10:14:25	2014-06-21 10:14:25	Submission	37
278	3	185	code	f	1	2014-06-21 10:14:25	2014-06-21 10:14:25	Submission	37
279	1	188	code	f	1	2014-07-12 02:21:23	2014-07-12 02:21:23	Submission	37
280	19	190	code	f	1	2014-07-16 03:59:38	2014-07-16 03:59:38	Submission	37
281	34	190	code	f	1	2014-07-16 03:59:38	2014-07-16 03:59:38	Submission	37
282	19	191	code	f	1	2014-07-16 10:37:04	2014-07-16 10:37:04	Submission	37
283	2	192	code	f	1	2014-06-17 16:34:25	2014-06-17 16:34:25	Submission	37
284	32	193	code	f	1	2014-06-28 19:02:03	2014-06-28 19:02:03	Submission	37
285	47	194	code	f	1	2014-07-05 05:31:22	2014-07-05 05:31:22	Submission	37
286	2	195	code	f	1	2014-07-11 13:11:28	2014-07-11 13:11:28	Submission	37
287	10	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
288	30	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
289	47	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
290	19	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
291	29	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
292	34	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
293	2	215	code	t	1	2014-07-28 13:07:25	2014-07-28 13:07:25	Submission	43
294	47	217	code	t	1	2014-07-27 01:17:08	2014-07-27 01:17:08	Submission	43
295	2	217	code	f	1	2014-07-27 01:17:08	2014-07-27 01:17:08	Submission	43
296	2	218	code	f	1	2014-07-25 14:49:26	2014-07-25 14:49:26	Submission	43
297	3	207	code	f	1	2014-05-07 06:07:10	2014-05-07 06:07:10	Submission	39
298	30	208	code	f	1	2014-06-12 14:51:30	2014-06-12 14:51:30	Submission	39
299	32	208	code	f	1	2014-06-12 14:51:30	2014-06-12 14:51:30	Submission	39
300	30	209	code	f	1	2014-07-24 16:07:19	2014-07-24 16:07:19	Submission	43
301	47	209	code	f	1	2014-07-24 16:07:19	2014-07-24 16:07:19	Submission	43
302	19	209	code	f	1	2014-07-24 16:07:19	2014-07-24 16:07:19	Submission	43
303	29	209	code	f	1	2014-07-24 16:07:19	2014-07-24 16:07:19	Submission	43
304	2	209	code	f	1	2014-07-24 16:07:19	2014-07-24 16:07:19	Submission	43
305	47	210	code	f	1	2014-07-24 18:03:23	2014-07-24 18:03:23	Submission	43
306	19	210	code	f	1	2014-07-24 18:03:23	2014-07-24 18:03:23	Submission	43
307	29	210	code	f	1	2014-07-24 18:03:23	2014-07-24 18:03:23	Submission	43
308	34	210	code	f	1	2014-07-24 18:03:23	2014-07-24 18:03:23	Submission	43
309	30	211	code	f	1	2014-07-25 07:08:22	2014-07-25 07:08:22	Submission	43
310	47	211	code	f	1	2014-07-25 07:08:22	2014-07-25 07:08:22	Submission	43
311	29	211	code	f	1	2014-07-25 07:08:22	2014-07-25 07:08:22	Submission	43
312	34	211	code	f	1	2014-07-25 07:08:22	2014-07-25 07:08:22	Submission	43
313	2	211	code	f	1	2014-07-25 07:08:22	2014-07-25 07:08:22	Submission	43
314	10	212	code	f	1	2014-07-25 22:08:27	2014-07-25 22:08:27	Submission	43
315	30	212	code	f	1	2014-07-25 22:08:27	2014-07-25 22:08:27	Submission	43
316	47	212	code	f	1	2014-07-25 22:08:27	2014-07-25 22:08:27	Submission	43
317	29	212	code	f	1	2014-07-25 22:08:27	2014-07-25 22:08:27	Submission	43
318	2	212	code	f	1	2014-07-25 22:08:27	2014-07-25 22:08:27	Submission	43
319	47	213	code	f	1	2014-07-26 13:13:00	2014-07-26 13:13:00	Submission	43
320	19	213	code	f	1	2014-07-26 13:13:00	2014-07-26 13:13:00	Submission	43
321	34	213	code	f	1	2014-07-26 13:13:00	2014-07-26 13:13:00	Submission	43
322	10	214	code	f	1	2014-07-26 17:55:20	2014-07-26 17:55:20	Submission	43
323	30	214	code	f	1	2014-07-26 17:55:20	2014-07-26 17:55:20	Submission	43
324	19	214	code	f	1	2014-07-26 17:55:20	2014-07-26 17:55:20	Submission	43
325	29	214	code	f	1	2014-07-26 17:55:20	2014-07-26 17:55:20	Submission	43
326	34	214	code	f	1	2014-07-26 17:55:20	2014-07-26 17:55:20	Submission	43
327	2	219	code	f	1	2014-07-26 23:05:04	2014-07-26 23:05:04	Submission	43
328	2	220	code	f	1	2014-07-24 12:42:42	2014-07-24 12:42:42	Submission	43
329	2	221	code	f	1	2014-07-25 19:59:08	2014-07-25 19:59:08	Submission	43
330	2	222	code	f	1	2014-07-25 18:18:00	2014-07-25 18:18:00	Submission	43
331	2	224	code	t	1	2014-07-27 06:08:23	2014-07-27 06:08:23	Submission	43
332	2	225	code	t	1	2014-07-27 07:41:54	2014-07-27 07:41:54	Submission	43
333	2	226	code	t	1	2014-07-27 08:33:59	2014-07-27 08:33:59	Submission	43
334	2	228	code	f	1	2014-02-23 14:33:42	2014-02-23 14:33:42	Submission	45
335	27	230	code	f	1	2014-06-25 17:41:19	2014-06-25 17:41:19	Submission	45
336	2	232	code	f	1	2014-05-21 09:30:06	2014-05-21 09:30:06	Submission	47
337	2	234	code	f	1	2014-07-04 17:47:56	2014-07-04 17:47:56	Submission	47
338	2	251	code	f	1	2014-05-17 14:20:19	2014-05-17 14:20:19	Submission	47
339	2	378	code	f	1	2014-06-23 22:15:38	2014-06-23 22:15:38	Submission	16
340	1	379	code	f	1	2014-07-03 05:16:40	2014-07-03 05:16:40	Submission	16
341	2	425	code	f	1	2014-07-03 03:13:02	2014-07-03 03:13:02	Submission	16
342	2	243	code	f	1	2014-05-18 01:35:39	2014-05-18 01:35:39	Submission	47
343	30	247	code	f	1	2014-06-28 08:25:24	2014-06-28 08:25:24	Submission	47
344	39	247	code	f	1	2014-06-28 08:25:24	2014-06-28 08:25:24	Submission	47
345	2	247	code	f	1	2014-06-28 08:25:24	2014-06-28 08:25:24	Submission	47
346	39	248	code	f	1	2014-07-11 23:05:39	2014-07-11 23:05:39	Submission	47
347	2	248	code	f	1	2014-07-11 23:05:39	2014-07-11 23:05:39	Submission	47
348	39	249	code	f	1	2014-07-16 10:46:25	2014-07-16 10:46:25	Submission	47
349	2	253	code	f	1	2014-06-29 22:09:51	2014-06-29 22:09:51	Submission	47
350	20	256	code	f	1	2014-06-03 21:12:08	2014-06-03 21:12:08	Submission	47
351	2	256	code	f	1	2014-06-03 21:12:08	2014-06-03 21:12:08	Submission	47
352	2	259	code	f	1	2014-05-19 09:42:50	2014-05-19 09:42:50	Submission	47
353	19	261	code	f	1	2014-07-05 13:43:22	2014-07-05 13:43:22	Submission	47
354	2	266	code	f	1	2014-06-19 19:27:45	2014-06-19 19:27:45	Submission	47
355	2	271	code	f	1	2014-05-26 01:29:38	2014-05-26 01:29:38	Submission	47
356	32	273	code	f	1	2014-07-07 03:24:15	2014-07-07 03:24:15	Submission	47
357	2	274	code	f	1	2014-07-21 23:38:09	2014-07-21 23:38:09	Submission	47
358	2	282	code	f	1	2014-06-06 06:55:01	2014-06-06 06:55:01	Submission	47
359	2	284	code	f	1	2014-07-17 07:36:02	2014-07-17 07:36:02	Submission	47
360	2	286	code	f	1	2014-07-11 08:37:54	2014-07-11 08:37:54	Submission	47
361	1	316	code	f	1	2014-04-11 15:07:29	2014-04-11 15:07:29	Submission	22
362	3	318	code	f	1	2014-05-02 01:42:51	2014-05-02 01:42:51	Submission	22
363	3	319	code	f	1	2014-05-25 18:57:42	2014-05-25 18:57:42	Submission	22
364	2	320	code	f	1	2014-04-27 00:02:22	2014-04-27 00:02:22	Submission	22
365	1	295	code	f	1	2014-05-21 11:48:25	2014-05-21 11:48:25	Submission	25
366	2	296	code	f	1	2014-05-25 11:02:03	2014-05-25 11:02:03	Submission	25
367	29	297	code	f	1	2014-07-22 22:15:20	2014-07-22 22:15:20	Submission	6
368	34	297	code	f	1	2014-07-22 22:15:20	2014-07-22 22:15:20	Submission	6
369	2	297	code	f	1	2014-07-22 22:15:20	2014-07-22 22:15:20	Submission	6
370	3	297	code	f	1	2014-07-22 22:15:20	2014-07-22 22:15:20	Submission	6
371	1	321	code	f	1	2014-05-07 15:20:10	2014-05-07 15:20:10	Submission	22
372	47	406	code	f	1	2014-07-02 18:59:19	2014-07-02 18:59:19	Submission	16
373	3	406	code	f	1	2014-07-02 18:59:19	2014-07-02 18:59:19	Submission	16
374	3	298	code	f	1	2014-02-06 03:54:53	2014-02-06 03:54:53	Submission	22
375	1	300	code	f	1	2014-03-11 09:59:26	2014-03-11 09:59:26	Submission	22
376	1	301	code	f	1	2014-03-19 03:10:35	2014-03-19 03:10:35	Submission	22
377	1	302	code	f	1	2014-05-16 10:29:51	2014-05-16 10:29:51	Submission	22
378	2	303	code	f	1	2014-05-21 10:53:58	2014-05-21 10:53:58	Submission	22
379	2	309	code	f	1	2014-03-10 23:40:53	2014-03-10 23:40:53	Submission	22
380	1	310	code	f	1	2014-05-02 12:59:18	2014-05-02 12:59:18	Submission	22
381	3	311	code	f	1	2014-06-16 09:34:45	2014-06-16 09:34:45	Submission	22
382	3	312	code	f	1	2014-03-19 04:31:49	2014-03-19 04:31:49	Submission	22
383	1	313	code	f	1	2014-04-21 14:22:04	2014-04-21 14:22:04	Submission	22
384	1	324	code	f	1	2014-06-19 19:35:51	2014-06-19 19:35:51	Submission	22
385	1	326	code	f	1	2014-04-09 06:43:43	2014-04-09 06:43:43	Submission	22
386	2	326	code	f	1	2014-04-09 06:43:43	2014-04-09 06:43:43	Submission	22
387	1	329	code	f	1	2014-06-30 16:24:13	2014-06-30 16:24:13	Submission	22
388	3	332	code	f	1	2014-03-05 00:04:08	2014-03-05 00:04:08	Submission	22
389	1	333	code	f	1	2014-04-13 00:35:51	2014-04-13 00:35:51	Submission	22
390	3	333	code	f	1	2014-04-13 00:35:51	2014-04-13 00:35:51	Submission	22
391	1	334	code	f	1	2014-02-05 15:59:08	2014-02-05 15:59:08	Submission	22
392	2	334	code	f	1	2014-02-05 15:59:08	2014-02-05 15:59:08	Submission	22
393	3	336	code	f	1	2014-03-25 21:58:47	2014-03-25 21:58:47	Submission	22
394	3	351	code	f	1	2014-03-12 20:03:55	2014-03-12 20:03:55	Submission	22
395	1	352	code	f	1	2014-02-23 02:39:38	2014-02-23 02:39:38	Submission	22
396	1	365	code	f	1	2014-03-31 17:00:32	2014-03-31 17:00:32	Submission	22
397	3	365	code	f	1	2014-03-31 17:00:32	2014-03-31 17:00:32	Submission	22
398	1	356	code	f	1	2014-01-29 18:15:10	2014-01-29 18:15:10	Submission	22
399	3	357	code	f	1	2014-02-06 02:39:57	2014-02-06 02:39:57	Submission	22
400	3	358	code	f	1	2014-02-10 01:12:27	2014-02-10 01:12:27	Submission	22
401	2	359	code	f	1	2014-02-18 23:23:43	2014-02-18 23:23:43	Submission	22
402	1	360	code	f	1	2014-06-11 21:25:50	2014-06-11 21:25:50	Submission	22
403	2	360	code	f	1	2014-06-11 21:25:50	2014-06-11 21:25:50	Submission	22
404	2	364	code	f	1	2014-02-19 10:29:22	2014-02-19 10:29:22	Submission	22
405	3	364	code	f	1	2014-02-19 10:29:22	2014-02-19 10:29:22	Submission	22
406	3	367	code	f	1	2014-03-07 15:47:28	2014-03-07 15:47:28	Submission	22
407	1	368	code	f	1	2014-02-26 14:00:36	2014-02-26 14:00:36	Submission	22
408	2	370	code	f	1	2014-04-11 00:03:05	2014-04-11 00:03:05	Submission	22
409	2	371	code	f	1	2014-07-17 15:41:30	2014-07-17 15:41:30	Submission	16
410	3	372	code	f	1	2014-06-28 15:26:02	2014-06-28 15:26:02	Submission	16
411	1	373	code	f	1	2014-07-11 01:57:01	2014-07-11 01:57:01	Submission	16
412	1	374	code	f	1	2014-06-30 10:29:47	2014-06-30 10:29:47	Submission	16
413	34	375	code	f	1	2014-07-04 19:01:59	2014-07-04 19:01:59	Submission	16
414	1	376	code	f	1	2014-07-19 21:18:18	2014-07-19 21:18:18	Submission	16
415	3	377	code	f	1	2014-06-24 10:56:47	2014-06-24 10:56:47	Submission	16
416	32	407	code	f	1	2014-07-20 09:15:14	2014-07-20 09:15:14	Submission	16
417	47	407	code	f	1	2014-07-20 09:15:14	2014-07-20 09:15:14	Submission	16
418	3	407	code	f	1	2014-07-20 09:15:14	2014-07-20 09:15:14	Submission	16
419	47	380	code	f	1	2014-06-23 10:30:51	2014-06-23 10:30:51	Submission	16
420	3	382	code	f	1	2014-07-05 02:48:10	2014-07-05 02:48:10	Submission	16
421	2	383	code	f	1	2014-06-30 09:57:01	2014-06-30 09:57:01	Submission	16
422	1	385	code	f	1	2014-07-08 23:47:07	2014-07-08 23:47:07	Submission	16
423	1	386	code	f	1	2014-06-22 04:28:52	2014-06-22 04:28:52	Submission	16
424	1	387	code	f	1	2014-06-29 08:40:33	2014-06-29 08:40:33	Submission	16
425	32	389	code	f	1	2014-06-24 17:35:53	2014-06-24 17:35:53	Submission	16
426	2	392	code	f	1	2014-06-22 04:08:13	2014-06-22 04:08:13	Submission	16
427	3	392	code	f	1	2014-06-22 04:08:13	2014-06-22 04:08:13	Submission	16
428	1	396	code	f	1	2014-07-17 07:33:32	2014-07-17 07:33:32	Submission	16
429	3	396	code	f	1	2014-07-17 07:33:32	2014-07-17 07:33:32	Submission	16
430	34	398	code	f	1	2014-06-23 05:44:36	2014-06-23 05:44:36	Submission	16
431	29	399	code	f	1	2014-07-04 02:11:15	2014-07-04 02:11:15	Submission	16
432	1	399	code	f	1	2014-07-04 02:11:15	2014-07-04 02:11:15	Submission	16
433	2	399	code	f	1	2014-07-04 02:11:15	2014-07-04 02:11:15	Submission	16
434	47	402	code	f	1	2014-06-25 18:27:18	2014-06-25 18:27:18	Submission	16
435	2	402	code	f	1	2014-06-25 18:27:18	2014-06-25 18:27:18	Submission	16
436	32	403	code	f	1	2014-06-26 03:58:22	2014-06-26 03:58:22	Submission	16
437	32	404	code	f	1	2014-06-28 10:16:17	2014-06-28 10:16:17	Submission	16
438	1	404	code	f	1	2014-06-28 10:16:17	2014-06-28 10:16:17	Submission	16
439	2	414	code	f	1	2014-07-08 18:13:32	2014-07-08 18:13:32	Submission	16
440	3	414	code	f	1	2014-07-08 18:13:32	2014-07-08 18:13:32	Submission	16
441	1	415	code	f	1	2014-07-08 22:55:53	2014-07-08 22:55:53	Submission	16
442	1	417	code	f	1	2014-06-22 19:31:18	2014-06-22 19:31:18	Submission	16
443	3	419	code	f	1	2014-07-12 02:37:00	2014-07-12 02:37:00	Submission	16
444	1	420	code	f	1	2014-06-27 06:20:29	2014-06-27 06:20:29	Submission	16
445	20	423	code	f	1	2014-06-29 13:45:54	2014-06-29 13:45:54	Submission	16
446	1	423	code	f	1	2014-06-29 13:45:54	2014-06-29 13:45:54	Submission	16
447	30	424	code	f	1	2014-06-27 05:44:35	2014-06-27 05:44:35	Submission	16
448	1	424	code	f	1	2014-06-27 05:44:35	2014-06-27 05:44:35	Submission	16
449	2	424	code	f	1	2014-06-27 05:44:35	2014-06-27 05:44:35	Submission	16
450	1	431	code	f	1	2014-07-26 06:45:25	2014-07-26 06:45:25	Submission	16
451	3	431	code	f	1	2014-07-26 06:45:25	2014-07-26 06:45:25	Submission	16
452	3	432	code	f	1	2014-06-27 16:41:51	2014-06-27 16:41:51	Submission	16
453	2	433	code	f	1	2014-07-15 19:05:28	2014-07-15 19:05:28	Submission	16
454	1	436	code	f	1	2014-04-24 07:43:43	2014-04-24 07:43:43	Submission	19
455	1	437	code	f	1	2014-04-29 10:12:38	2014-04-29 10:12:38	Submission	19
456	2	439	code	f	1	2014-06-06 08:16:52	2014-06-06 08:16:52	Submission	19
457	1	440	code	f	1	2014-06-19 20:53:09	2014-06-19 20:53:09	Submission	19
458	1	442	code	f	1	2014-03-18 10:00:34	2014-03-18 10:00:34	Submission	20
459	2	443	code	f	1	2014-06-13 18:48:25	2014-06-13 18:48:25	Submission	20
460	32	446	code	f	1	2014-06-11 12:52:05	2014-06-11 12:52:05	Submission	20
461	2	446	code	f	1	2014-06-11 12:52:05	2014-06-11 12:52:05	Submission	20
462	2	447	code	f	1	2014-02-25 16:16:28	2014-02-25 16:16:28	Submission	20
463	1	449	code	f	1	2014-04-29 01:40:17	2014-04-29 01:40:17	Submission	20
464	2	449	code	f	1	2014-04-29 01:40:17	2014-04-29 01:40:17	Submission	20
465	2	451	code	f	1	2014-02-23 06:44:57	2014-02-23 06:44:57	Submission	35
466	2	452	code	f	1	2014-06-22 18:19:58	2014-06-22 18:19:58	Submission	35
467	32	453	code	f	1	2014-06-24 22:28:39	2014-06-24 22:28:39	Submission	35
468	20	454	code	f	1	2014-07-03 08:11:09	2014-07-03 08:11:09	Submission	35
469	3	455	code	f	1	2014-01-18 15:08:21	2014-01-18 15:08:21	Submission	29
470	2	457	code	f	1	2014-05-24 07:13:06	2014-05-24 07:13:06	Submission	29
471	3	460	code	f	1	2014-01-18 04:51:09	2014-01-18 04:51:09	Submission	34
472	11	464	code	t	1	2014-07-28 08:59:28	2014-07-28 08:59:28	Submission	13
473	32	464	code	f	1	2014-07-28 08:59:28	2014-07-28 08:59:28	Submission	13
474	47	464	code	t	1	2014-07-28 08:59:28	2014-07-28 08:59:28	Submission	13
475	1	464	code	t	1	2014-07-28 08:59:28	2014-07-28 08:59:28	Submission	13
476	2	464	code	t	1	2014-07-28 08:59:28	2014-07-28 08:59:28	Submission	13
477	11	465	code	f	1	2014-07-28 10:56:54	2014-07-28 10:56:54	Submission	13
478	32	465	code	f	1	2014-07-28 10:56:54	2014-07-28 10:56:54	Submission	13
479	47	465	code	t	1	2014-07-28 10:56:54	2014-07-28 10:56:54	Submission	13
480	1	465	code	f	1	2014-07-28 10:56:54	2014-07-28 10:56:54	Submission	13
481	2	465	code	t	1	2014-07-28 10:56:54	2014-07-28 10:56:54	Submission	13
482	11	466	code	f	1	2014-07-28 13:09:28	2014-07-28 13:09:28	Submission	13
483	32	466	code	f	1	2014-07-28 13:09:28	2014-07-28 13:09:28	Submission	13
484	47	466	code	f	1	2014-07-28 13:09:28	2014-07-28 13:09:28	Submission	13
485	1	466	code	f	1	2014-07-28 13:09:28	2014-07-28 13:09:28	Submission	13
486	2	466	code	f	1	2014-07-28 13:09:28	2014-07-28 13:09:28	Submission	13
487	11	467	code	f	1	2014-07-28 15:18:15	2014-07-28 15:18:15	Submission	13
488	32	467	code	t	1	2014-07-28 15:18:15	2014-07-28 15:18:15	Submission	13
489	47	467	code	f	1	2014-07-28 15:18:15	2014-07-28 15:18:15	Submission	13
490	1	467	code	t	1	2014-07-28 15:18:15	2014-07-28 15:18:15	Submission	13
491	2	467	code	t	1	2014-07-28 15:18:15	2014-07-28 15:18:15	Submission	13
492	11	468	code	t	1	2014-07-28 15:36:25	2014-07-28 15:36:25	Submission	13
493	32	468	code	f	1	2014-07-28 15:36:25	2014-07-28 15:36:25	Submission	13
494	47	468	code	f	1	2014-07-28 15:36:25	2014-07-28 15:36:25	Submission	13
495	1	468	code	f	1	2014-07-28 15:36:25	2014-07-28 15:36:25	Submission	13
496	2	468	code	f	1	2014-07-28 15:36:25	2014-07-28 15:36:25	Submission	13
497	1	469	code	f	1	2014-07-28 10:42:34	2014-07-28 10:42:34	Submission	13
498	2	469	code	f	1	2014-07-28 10:42:34	2014-07-28 10:42:34	Submission	13
499	1	470	code	f	1	2014-07-28 11:15:26	2014-07-28 11:15:26	Submission	13
500	2	470	code	t	1	2014-07-28 11:15:26	2014-07-28 11:15:26	Submission	13
501	3	486	code	f	1	2014-03-10 13:48:09	2014-03-10 13:48:09	Submission	40
502	1	471	code	t	1	2014-07-28 04:21:14	2014-07-28 04:21:14	Submission	13
503	2	471	code	t	1	2014-07-28 04:21:14	2014-07-28 04:21:14	Submission	13
504	1	472	code	t	1	2014-07-28 16:03:03	2014-07-28 16:03:03	Submission	13
505	2	472	code	t	1	2014-07-28 16:03:03	2014-07-28 16:03:03	Submission	13
506	47	473	code	f	1	2014-07-28 06:22:15	2014-07-28 06:22:15	Submission	13
507	1	473	code	f	1	2014-07-28 06:22:15	2014-07-28 06:22:15	Submission	13
508	2	473	code	t	1	2014-07-28 06:22:15	2014-07-28 06:22:15	Submission	13
509	47	474	code	t	1	2014-07-28 08:10:14	2014-07-28 08:10:14	Submission	13
510	1	474	code	f	1	2014-07-28 08:10:14	2014-07-28 08:10:14	Submission	13
511	2	474	code	t	1	2014-07-28 08:10:14	2014-07-28 08:10:14	Submission	13
512	47	475	code	t	1	2014-07-28 10:08:17	2014-07-28 10:08:17	Submission	13
513	1	475	code	t	1	2014-07-28 10:08:17	2014-07-28 10:08:17	Submission	13
514	2	475	code	t	1	2014-07-28 10:08:17	2014-07-28 10:08:17	Submission	13
515	47	476	code	t	1	2014-07-28 13:51:41	2014-07-28 13:51:41	Submission	13
516	1	476	code	f	1	2014-07-28 13:51:41	2014-07-28 13:51:41	Submission	13
517	2	476	code	t	1	2014-07-28 13:51:41	2014-07-28 13:51:41	Submission	13
518	32	477	code	t	1	2014-07-28 10:01:51	2014-07-28 10:01:51	Submission	13
519	47	477	code	t	1	2014-07-28 10:01:51	2014-07-28 10:01:51	Submission	13
520	1	477	code	f	1	2014-07-28 10:01:51	2014-07-28 10:01:51	Submission	13
521	2	477	code	t	1	2014-07-28 10:01:51	2014-07-28 10:01:51	Submission	13
522	32	478	code	f	1	2014-07-28 10:40:21	2014-07-28 10:40:21	Submission	13
523	47	478	code	f	1	2014-07-28 10:40:21	2014-07-28 10:40:21	Submission	13
524	1	478	code	t	1	2014-07-28 10:40:21	2014-07-28 10:40:21	Submission	13
525	2	478	code	t	1	2014-07-28 10:40:21	2014-07-28 10:40:21	Submission	13
526	1	479	code	f	1	2014-07-28 04:43:28	2014-07-28 04:43:28	Submission	13
527	2	479	code	f	1	2014-07-28 04:43:28	2014-07-28 04:43:28	Submission	13
528	10	480	code	f	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
529	30	480	code	t	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
530	47	480	code	t	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
531	19	480	code	f	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
532	29	480	code	f	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
533	34	480	code	f	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
534	1	480	code	t	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
535	2	480	code	f	1	2014-07-28 08:39:08	2014-07-28 08:39:08	Submission	13
536	10	481	code	f	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
537	30	481	code	f	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
538	47	481	code	t	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
539	19	481	code	f	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
540	29	481	code	t	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
541	34	481	code	t	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
542	1	481	code	t	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
543	2	481	code	t	1	2014-07-28 09:39:32	2014-07-28 09:39:32	Submission	13
544	39	482	code	t	1	2014-07-28 02:40:21	2014-07-28 02:40:21	Submission	13
545	1	482	code	t	1	2014-07-28 02:40:21	2014-07-28 02:40:21	Submission	13
546	2	482	code	t	1	2014-07-28 02:40:21	2014-07-28 02:40:21	Submission	13
547	1	483	code	f	1	2014-07-28 07:52:29	2014-07-28 07:52:29	Submission	13
548	2	483	code	t	1	2014-07-28 07:52:29	2014-07-28 07:52:29	Submission	13
549	1	484	code	f	1	2014-07-28 04:31:58	2014-07-28 04:31:58	Submission	13
550	2	484	code	f	1	2014-07-28 04:31:58	2014-07-28 04:31:58	Submission	13
551	3	491	code	f	1	2014-02-13 20:40:34	2014-02-13 20:40:34	Submission	40
552	3	492	code	f	1	2014-02-24 21:20:22	2014-02-24 21:20:22	Submission	40
553	3	494	code	f	1	2014-04-02 12:45:36	2014-04-02 12:45:36	Submission	40
554	2	495	code	f	1	2014-04-04 17:22:50	2014-04-04 17:22:50	Submission	5
555	2	499	code	f	1	2014-04-23 05:34:42	2014-04-23 05:34:42	Submission	5
556	2	503	code	f	1	2014-02-26 23:24:49	2014-02-26 23:24:49	Submission	5
557	30	508	code	f	1	2014-05-07 07:54:59	2014-05-07 07:54:59	Submission	5
558	2	509	code	f	1	2014-01-25 19:30:25	2014-01-25 19:30:25	Submission	5
559	34	510	code	f	1	2014-04-15 02:11:30	2014-04-15 02:11:30	Submission	5
560	1	576	code	f	1	2014-07-26 17:30:03	2014-07-26 17:30:03	Submission	23
561	2	576	code	f	1	2014-07-26 17:30:03	2014-07-26 17:30:03	Submission	23
562	3	513	code	f	1	2014-07-14 05:38:57	2014-07-14 05:38:57	Submission	33
563	47	516	code	f	1	2014-07-24 22:15:38	2014-07-24 22:15:38	Submission	33
564	2	517	code	f	1	2014-03-12 23:53:02	2014-03-12 23:53:02	Submission	15
565	34	528	code	t	1	2014-07-27 03:44:48	2014-07-27 03:44:48	Submission	23
566	1	528	code	t	1	2014-07-27 03:44:48	2014-07-27 03:44:48	Submission	23
567	2	528	code	f	1	2014-07-27 03:44:48	2014-07-27 03:44:48	Submission	23
568	2	521	code	f	1	2014-01-11 15:12:16	2014-01-11 15:12:16	Submission	17
569	3	521	code	f	1	2014-01-11 15:12:16	2014-01-11 15:12:16	Submission	17
570	3	522	code	f	1	2014-02-27 23:18:46	2014-02-27 23:18:46	Submission	17
571	1	523	code	t	1	2014-07-27 03:39:59	2014-07-27 03:39:59	Submission	23
572	2	523	code	f	1	2014-07-27 03:39:59	2014-07-27 03:39:59	Submission	23
573	1	524	code	t	1	2014-07-28 03:09:52	2014-07-28 03:09:52	Submission	23
574	2	524	code	t	1	2014-07-28 03:09:52	2014-07-28 03:09:52	Submission	23
575	1	525	code	f	1	2014-07-26 04:04:51	2014-07-26 04:04:51	Submission	23
576	34	526	code	f	1	2014-07-26 07:45:14	2014-07-26 07:45:14	Submission	23
577	1	526	code	f	1	2014-07-26 07:45:14	2014-07-26 07:45:14	Submission	23
578	2	526	code	f	1	2014-07-26 07:45:14	2014-07-26 07:45:14	Submission	23
579	34	527	code	f	1	2014-07-26 15:30:21	2014-07-26 15:30:21	Submission	23
580	2	527	code	f	1	2014-07-26 15:30:21	2014-07-26 15:30:21	Submission	23
581	2	577	code	f	1	2014-07-26 01:40:27	2014-07-26 01:40:27	Submission	23
582	34	529	code	t	1	2014-07-27 08:35:56	2014-07-27 08:35:56	Submission	23
583	1	529	code	t	1	2014-07-27 08:35:56	2014-07-27 08:35:56	Submission	23
584	2	529	code	t	1	2014-07-27 08:35:56	2014-07-27 08:35:56	Submission	23
585	47	530	code	f	1	2014-07-25 23:30:41	2014-07-25 23:30:41	Submission	23
586	1	530	code	f	1	2014-07-25 23:30:41	2014-07-25 23:30:41	Submission	23
587	2	530	code	f	1	2014-07-25 23:30:41	2014-07-25 23:30:41	Submission	23
588	20	531	code	f	1	2014-07-25 16:00:11	2014-07-25 16:00:11	Submission	23
589	2	531	code	f	1	2014-07-25 16:00:11	2014-07-25 16:00:11	Submission	23
590	37	532	code	f	1	2014-07-27 13:26:02	2014-07-27 13:26:02	Submission	23
591	1	532	code	t	1	2014-07-27 13:26:02	2014-07-27 13:26:02	Submission	23
592	2	532	code	t	1	2014-07-27 13:26:02	2014-07-27 13:26:02	Submission	23
593	11	533	code	f	1	2014-07-26 00:35:25	2014-07-26 00:35:25	Submission	23
594	1	533	code	f	1	2014-07-26 00:35:25	2014-07-26 00:35:25	Submission	23
595	11	534	code	f	1	2014-07-26 07:22:40	2014-07-26 07:22:40	Submission	23
596	30	534	code	f	1	2014-07-26 07:22:40	2014-07-26 07:22:40	Submission	23
597	2	534	code	f	1	2014-07-26 07:22:40	2014-07-26 07:22:40	Submission	23
598	11	535	code	f	1	2014-07-26 14:40:39	2014-07-26 14:40:39	Submission	23
599	30	535	code	f	1	2014-07-26 14:40:39	2014-07-26 14:40:39	Submission	23
600	1	535	code	f	1	2014-07-26 14:40:39	2014-07-26 14:40:39	Submission	23
601	11	536	code	f	1	2014-07-27 20:59:27	2014-07-27 20:59:27	Submission	23
602	30	536	code	f	1	2014-07-27 20:59:27	2014-07-27 20:59:27	Submission	23
603	1	536	code	f	1	2014-07-27 20:59:27	2014-07-27 20:59:27	Submission	23
604	2	536	code	t	1	2014-07-27 20:59:27	2014-07-27 20:59:27	Submission	23
605	11	537	code	t	1	2014-07-28 13:48:25	2014-07-28 13:48:25	Submission	23
606	30	537	code	t	1	2014-07-28 13:48:25	2014-07-28 13:48:25	Submission	23
607	1	537	code	t	1	2014-07-28 13:48:25	2014-07-28 13:48:25	Submission	23
608	2	537	code	t	1	2014-07-28 13:48:25	2014-07-28 13:48:25	Submission	23
609	27	538	code	f	1	2014-07-27 01:33:17	2014-07-27 01:33:17	Submission	23
610	1	538	code	f	1	2014-07-27 01:33:17	2014-07-27 01:33:17	Submission	23
611	2	538	code	t	1	2014-07-27 01:33:17	2014-07-27 01:33:17	Submission	23
612	30	539	code	f	1	2014-07-26 11:09:00	2014-07-26 11:09:00	Submission	23
613	32	539	code	f	1	2014-07-26 11:09:00	2014-07-26 11:09:00	Submission	23
614	39	539	code	f	1	2014-07-26 11:09:00	2014-07-26 11:09:00	Submission	23
615	1	539	code	f	1	2014-07-26 11:09:00	2014-07-26 11:09:00	Submission	23
616	2	539	code	f	1	2014-07-26 11:09:00	2014-07-26 11:09:00	Submission	23
617	8	540	code	f	1	2014-07-26 01:00:22	2014-07-26 01:00:22	Submission	23
618	1	540	code	f	1	2014-07-26 01:00:22	2014-07-26 01:00:22	Submission	23
619	2	540	code	f	1	2014-07-26 01:00:22	2014-07-26 01:00:22	Submission	23
620	2	554	code	f	1	2014-07-25 18:52:33	2014-07-25 18:52:33	Submission	23
621	8	541	code	f	1	2014-07-26 09:01:49	2014-07-26 09:01:49	Submission	23
622	1	541	code	f	1	2014-07-26 09:01:49	2014-07-26 09:01:49	Submission	23
623	2	541	code	f	1	2014-07-26 09:01:49	2014-07-26 09:01:49	Submission	23
624	30	542	code	f	1	2014-07-28 16:24:04	2014-07-28 16:24:04	Submission	23
625	47	542	code	f	1	2014-07-28 16:24:04	2014-07-28 16:24:04	Submission	23
626	20	542	code	t	1	2014-07-28 16:24:04	2014-07-28 16:24:04	Submission	23
627	1	542	code	f	1	2014-07-28 16:24:04	2014-07-28 16:24:04	Submission	23
628	2	542	code	t	1	2014-07-28 16:24:04	2014-07-28 16:24:04	Submission	23
629	1	543	code	f	1	2014-07-27 15:48:50	2014-07-27 15:48:50	Submission	23
630	2	543	code	t	1	2014-07-27 15:48:50	2014-07-27 15:48:50	Submission	23
631	11	544	code	f	1	2014-07-26 07:44:00	2014-07-26 07:44:00	Submission	23
632	32	544	code	f	1	2014-07-26 07:44:00	2014-07-26 07:44:00	Submission	23
633	47	544	code	f	1	2014-07-26 07:44:00	2014-07-26 07:44:00	Submission	23
634	1	544	code	f	1	2014-07-26 07:44:00	2014-07-26 07:44:00	Submission	23
635	2	544	code	f	1	2014-07-26 07:44:00	2014-07-26 07:44:00	Submission	23
636	11	545	code	f	1	2014-07-26 07:56:38	2014-07-26 07:56:38	Submission	23
637	47	545	code	f	1	2014-07-26 07:56:38	2014-07-26 07:56:38	Submission	23
638	11	546	code	f	1	2014-07-26 16:35:15	2014-07-26 16:35:15	Submission	23
639	32	546	code	f	1	2014-07-26 16:35:15	2014-07-26 16:35:15	Submission	23
640	47	546	code	f	1	2014-07-26 16:35:15	2014-07-26 16:35:15	Submission	23
641	2	546	code	f	1	2014-07-26 16:35:15	2014-07-26 16:35:15	Submission	23
642	11	547	code	t	1	2014-07-26 20:50:08	2014-07-26 20:50:08	Submission	23
643	32	547	code	f	1	2014-07-26 20:50:08	2014-07-26 20:50:08	Submission	23
644	47	547	code	f	1	2014-07-26 20:50:08	2014-07-26 20:50:08	Submission	23
645	1	547	code	t	1	2014-07-26 20:50:08	2014-07-26 20:50:08	Submission	23
646	2	547	code	t	1	2014-07-26 20:50:08	2014-07-26 20:50:08	Submission	23
647	11	548	code	f	1	2014-07-26 22:23:05	2014-07-26 22:23:05	Submission	23
648	32	548	code	f	1	2014-07-26 22:23:05	2014-07-26 22:23:05	Submission	23
649	47	548	code	f	1	2014-07-26 22:23:05	2014-07-26 22:23:05	Submission	23
650	1	548	code	t	1	2014-07-26 22:23:05	2014-07-26 22:23:05	Submission	23
651	2	548	code	t	1	2014-07-26 22:23:05	2014-07-26 22:23:05	Submission	23
652	11	549	code	f	1	2014-07-27 13:49:24	2014-07-27 13:49:24	Submission	23
653	32	549	code	f	1	2014-07-27 13:49:24	2014-07-27 13:49:24	Submission	23
654	47	549	code	t	1	2014-07-27 13:49:24	2014-07-27 13:49:24	Submission	23
655	1	549	code	f	1	2014-07-27 13:49:24	2014-07-27 13:49:24	Submission	23
656	2	549	code	f	1	2014-07-27 13:49:24	2014-07-27 13:49:24	Submission	23
657	11	550	code	f	1	2014-07-28 04:00:05	2014-07-28 04:00:05	Submission	23
658	32	550	code	t	1	2014-07-28 04:00:05	2014-07-28 04:00:05	Submission	23
659	47	550	code	f	1	2014-07-28 04:00:05	2014-07-28 04:00:05	Submission	23
660	1	550	code	f	1	2014-07-28 04:00:05	2014-07-28 04:00:05	Submission	23
661	2	550	code	t	1	2014-07-28 04:00:05	2014-07-28 04:00:05	Submission	23
662	1	551	code	f	1	2014-07-26 09:24:02	2014-07-26 09:24:02	Submission	23
663	2	551	code	f	1	2014-07-26 09:24:02	2014-07-26 09:24:02	Submission	23
664	1	552	code	t	1	2014-07-26 19:56:23	2014-07-26 19:56:23	Submission	23
665	2	552	code	f	1	2014-07-26 19:56:23	2014-07-26 19:56:23	Submission	23
666	1	553	code	f	1	2014-07-25 15:02:55	2014-07-25 15:02:55	Submission	23
667	2	553	code	f	1	2014-07-25 15:02:55	2014-07-25 15:02:55	Submission	23
668	1	589	code	f	1	2014-07-25 18:22:03	2014-07-25 18:22:03	Submission	23
669	2	589	code	f	1	2014-07-25 18:22:03	2014-07-25 18:22:03	Submission	23
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 669, true);


--
-- Data for Name: posts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY posts (id, slug, title, blurb, body, testimonial_keyword, event_on, archive_on, is_indestructible, is_featured, is_service, priority, created_at, updated_at) FROM stdin;
\.


--
-- Name: posts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('posts_id_seq', 1, false);


--
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY products (id, title, price, created_at, updated_at, sort_order) FROM stdin;
\.


--
-- Name: products_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('products_id_seq', 1, false);


--
-- Data for Name: quotes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY quotes (id, body, cite, created_at, updated_at) FROM stdin;
\.


--
-- Name: quotes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('quotes_id_seq', 1, false);


--
-- Data for Name: submission_viewers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submission_viewers (id, submission_id, viewer_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: submission_viewers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submission_viewers_id_seq', 1, false);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, code, done_at, is_liked, nit_count, version, created_at, updated_at, user_exercise_id, filename) FROM stdin;
1	8	a3e164d2867f2957cd359101	superseded	python	anagram	class Anagram(object):\n\tNUM_LETTERS = 26\n\tdef __init__(self, string):\n\t\tself.string = string\n\t\tself.freq = Anagram._freq_array(self.string)\n\n\tdef _is_anagram_of(self, candidate):\n\t\tif self.string == candidate:\n\t\t\treturn False\n\t\tcand_freq = Anagram._freq_array(candidate)\n\t\tfor i in xrange(0, Anagram.NUM_LETTERS):\n\t\t\tif self.freq[i] != cand_freq[i]:\n\t\t\t\treturn False\n\t\treturn True\n\n\t@staticmethod\n\tdef _freq_array(string):\n\t\tfreq = [0] * Anagram.NUM_LETTERS\n\t\tfor c in string:\n\t\t\tfreq[ord(c.lower())-ord('a')] += 1\n\t\treturn freq\n\n\tdef match(self, cand_list):\n\t\treturn [c for c in cand_list if self._is_anagram_of(c)]	\N	\N	0	1	2013-11-15 23:04:22	2013-11-15 23:04:22	1	anagram.py
2	8	76b62ac260c4d6c9de570349	done	python	anagram	class Anagram(object):\n\tNUM_LETTERS = 26\n\tdef __init__(self, word):\n\t\tself.word = word\n\t\tself.canonicalizedWord = Anagram._canonicalize_word(word)\n\n\t@staticmethod\n\tdef _canonicalize_word(word):\n\t\treturn sorted(word.lower())\n\n\tdef _is_anagram_of(self, candidate):\n\t\tif self.word == candidate:\n\t\t\treturn False\n\t\treturn Anagram._canonicalize_word(candidate) == self.canonicalizedWord\n\n\tdef match(self, cand_list):\n\t\treturn [c for c in cand_list if self._is_anagram_of(c)]	2014-03-09 08:15:08	\N	0	2	2014-03-04 03:01:05	2014-03-04 03:01:05	1	anagram.py
3	8	480085adf58dc9d29bd23d27	pending	ruby	bob	class Bob\n  def hey(greeting)\n    response(greeting)\n  end\n\nprivate\n\n  def response(greeting)\n    if empty?(greeting)\n      reply(:empty)\n    elsif yelling?(greeting)\n      reply(:yelling)\n    elsif question?(greeting)\n      reply(:question)\n    else\n      reply(:other)\n    end\n  end\n\n  def empty?(greeting)\n    greeting.empty?\n  end\n\n  def yelling?(greeting)\n    greeting.upcase == greeting\n  end\n\n  def question?(greeting)\n    greeting[-1] == '?'\n  end\n\n  def reply(greeting_type)\n    { empty: 'Fine. Be that way!',\n      yelling: 'Woah, chill out!',\n      question: 'Sure.',\n      other: 'Whatever.' }[greeting_type]\n  end\nend	\N	\N	0	1	2013-12-06 00:53:59	2013-12-06 00:53:59	2	bob.rb
4	8	f2d4a14b9c6f85544169db93	superseded	haskell	phone-number	module Phone (areaCode, number, prettyPrint) where\nimport Data.Char (isNumber)\nimport Data.Maybe (fromMaybe)\nimport Text.Printf (printf)\n\ncleanNumber :: String -> String\ncleanNumber = filter isNumber\n\ncheckNumber :: String -> Maybe String\ncheckNumber x = case length num of\n\t10 -> Just num\n\t11 -> if head num == '1' then Just (drop 1 num) else Nothing\n\totherwise -> Nothing\n\twhere\n\t\tnum = cleanNumber x\n\nnumber :: String -> String\nnumber x = fromMaybe "0000000000" $ checkNumber x\n\nareaCode :: String -> String\nareaCode = take 3 . number\n\nprettyPrint :: String -> String\nprettyPrint x = printf "(%s) %s-%s" area first second\n\twhere\n\t\tnum = number x\n\t\t(area, rest) = splitAt 3 num\n\t\t(first, second) = splitAt 3 rest	\N	\N	0	1	2014-02-27 05:54:30	2014-02-27 05:54:30	3	Phone.hs
5	8	66366647069443efbf50ef9f	done	haskell	phone-number	module Phone (areaCode, number, prettyPrint) where\nimport Data.Char (isNumber)\nimport Data.Maybe (fromMaybe)\nimport Text.Printf (printf)\nimport Data.List.Split (splitPlaces)\n\ncleanNumber :: String -> String\ncleanNumber = filter isNumber\n\ncheckNumber :: String -> Maybe String\ncheckNumber x = case length num of\n\t10 -> Just num\n\t11 -> if head num == '1' then Just (drop 1 num) else Nothing\n\t_ -> Nothing\n\twhere\n\t\tnum = cleanNumber x\n\nnumber :: String -> String\nnumber x = fromMaybe "0000000000" $ checkNumber x\n\nareaCode :: String -> String\nareaCode = take 3 . number\n\nprettyPrint :: String -> String\nprettyPrint x = printf "(%s) %s-%s" a b c\n\twhere\n\t\t[a,b,c] = splitPlaces [3,3,4] (number x)	2014-06-15 17:57:16	\N	0	2	2014-06-05 20:02:53	2014-06-05 20:02:53	3	Phone.hs
6	10	593cdad13e4b93bd28258b0b	pending	coffeescript	wordy	module.exports = class WordProblem\n    constructor: (question) -> \n        @ERROR = { tooComplicated: new Error( "too complicated" ) }\n\n        @question = question.replace( /^What is/, '' )\n                            .replace( /\\?$/, '' )\n                            .replace( /plus/g, '+' )\n                            .replace( /minus/g, '-' )\n        @question = @question.replace( /(.*)multiplied by(.*)/, '($1)*$2' ) while @question.match( /multiplied by/ );\n        @question = @question.replace( /(.*)divided by(.*)/,    '($1)/$2' ) while @question.match( /divided by/ );\n\n\n    answer: () ->\n        try\n            eval(@question)\n        catch e\n            throw(@ERROR.tooComplicated)	\N	\N	0	1	2014-07-05 09:36:42	2014-07-05 09:36:42	4	wordy.coffee
7	10	add81af2a6402c21f6ae6e5e	superseded	ruby	nth-prime	class Sieve\n  attr_reader :primes\n  def initialize limit\n    @primes = []\n    potential_primes = (2..limit).to_a\n    \n    while prime = potential_primes.shift\n      @primes << prime\n      potential_primes.reject!{|n| n % prime == 0 }\n    end\n  end\nend\n\nclass Prime\n  PRIMES = Sieve.new(104743).primes\n  \n  def self.nth n\n    fail ArgumentError unless n > 0\n    PRIMES[n-1]\n  end\nend	\N	\N	0	2	2014-07-02 17:55:06	2014-07-02 17:55:06	5	prime.rb
8	10	44339794aec41d9b046a27da	pending	ruby	nth-prime	class Sieve\n  attr_reader :primes\n  def initialize limit\n    @primes = []\n    potential_primes = (2..limit).to_a\n    \n    while prime = potential_primes.shift\n      @primes << prime\n      potential_primes.select!{|n| n % prime != 0 }\n    end\n  end\nend\n\nclass Prime\n  PRIMES = Sieve.new(104743).primes\n  \n  def self.nth n\n    fail ArgumentError unless n > 0\n    PRIMES[n-1]\n  end\nend	\N	\N	0	3	2014-07-03 06:23:02	2014-07-03 06:23:02	5	prime.rb
9	10	433d11aa1e9a240024676104	superseded	ruby	nth-prime	class Sieve\n  attr_reader :primes\n  def initialize limit\n    @primes = []\n    potential_primes = (2..limit).to_a\n    \n    while prime = potential_primes.shift\n      @primes << prime\n      potential_primes.reject!{|n| n % prime == 0 }\n    end\n  end\nend\n\nclass Prime\n  PRIMES = Sieve.new(104743).primes\n  \n  def self.nth n\n    fail ArgumentError if n.zero?\n    PRIMES[n-1]\n  end\nend	\N	\N	0	1	2014-07-04 19:05:30	2014-07-04 19:05:30	5	prime.rb
10	10	3244d15dc257e2d181460765	done	ruby	allergies	class Allergies\n\tALLERGIES = ["eggs","peanuts","shellfish","strawberries","tomatoes","chocolate","pollen","cats"]\n\tdef initialize(score)\n\t\t@score = score\n\n\tend\n\n\tdef list\n\t\tperson_allergies = []\n\t\tbinary_score = to_binary\n\t\t\n\t\tcount = binary_score.size - 1\n\t\t\n\t\tbinary_score.split('').each do |bin|\n\t\t\tif bin == "1"\n      \n\t\t\t\tperson_allergies.push(ALLERGIES[count])\n\t\t\tend\n\t\t\tcount = count -  1\n\t\tend\n    p = person_allergies.delete(nil)\n\t\treturn person_allergies.reverse\n\tend\n\n\tdef allergic_to?(allergy)\n\t\tperson_allergies = list\n    return person_allergies.include? allergy\n\tend\n\n\tdef to_binary\n\t\tdecimal = @score\n\t\tbinary = ""\n\t\twhile decimal != 0\n      binary =  (decimal%2).to_s + binary \n      decimal = decimal/2\n\t\tend\n\t\treturn binary\n\tend\nend	2014-06-25 19:09:12	\N	0	1	2014-06-21 22:25:47	2014-06-21 22:25:47	6	allergies.rb
11	10	f18936d850f2668b4c79d474	pending	haskell	trinary	-- Trinary.hs\nmodule Trinary\n( showTri\n, readTri ) where\n\nimport           ReadShowRadix\n\nshowTri :: (Integral a, Show a) => a -> String\nshowTri = showRadix 3\n\nreadTri :: (Integral a, Show a) => String -> a\nreadTri = readRadix 3\n\n\n-- ReadShowRadix.hs\nmodule ReadShowRadix\n( readRadix\n, showRadix ) where\n\nreadRadix :: (Integral a, Show a) => a -> String -> a\nreadRadix r = foldl go 0\n  where go a b = a `seq` a * r + val b\n        val i = fromIntegral (fromEnum i - fromEnum '0')\n\nshowRadix :: (Integral a, Show a) => a -> a -> String\nshowRadix _ 0 = ""\nshowRadix r n = showRadix r d ++ show m\n  where (d,m) = n `divMod` r	\N	\N	0	1	2014-06-21 18:54:50	2014-06-21 18:54:50	7	TrinaryAnswer.hs
12	10	705660f5ac84c0dcb547a1c6	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    @phrase = Phrase.new(phrase)\n    if @phrase.empty?\n      'Fine. Be that way!'\n    elsif @phrase.yelling?\n      'Woah, chill out!'\n    elsif @phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(text)\n    @text = text\n  end\n\n  def yelling?\n    @text.upcase!.nil?\n  end\n\n  def question?\n    @text.chars.last == '?'\n  end\n\n  def empty?\n    @text.rstrip.empty?\n  end\nend	\N	\N	0	3	2014-06-18 17:43:06	2014-06-18 17:43:06	8	bob.rb
13	10	ffb1f46b82fbd289c634cb9f	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    if yelled_at?(phrase = nil)\n      'Woah, chill out!'\n    elsif asked?(phrase)\n      'Sure.'\n    elsif phrase.empty?\n      'Fine. Be that way!'\n    else\n      "Whatever."\n    end\n  end\n\n  private\n    def yelled_at?(phrase)\n     phrase.upcase!.nil?\n    end\n\n    def asked?(phrase)\n      phrase.chars.last == '?'\n    end\n\nend	\N	\N	0	1	2014-06-19 06:40:47	2014-06-19 06:40:47	8	bob.rb
14	10	e1c8db2b232d91edeb61b2af	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    if yelled_at?(phrase = nil)\n      'Woah, chill out!'\n    elsif asked?(phrase)\n      'Sure.'\n    elsif phrase.empty?\n      'Fine. Be that way!'\n    else\n      "Whatever."\n    end\n  end\n\n  private\n    def yelled_at?(phrase)\n     phrase.upcase!.nil?\n    end\n\n    def asked?(phrase)\n      phrase.chars.last == '?'\n    end\nend	\N	\N	0	2	2014-06-22 17:03:42	2014-06-22 17:03:42	8	bob.rb
15	10	88fa2b6fccf4324378610280	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    phrase = Phrase.new({text: phrase})\n    case\n    when phrase.empty?\n      'Fine. Be that way!'\n    when phrase.yelling?\n      'Woah, chill out!'\n    when phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(args)\n    @text = args[:text].to_s\n  end\n\n  def yelling?\n    @text.upcase == @text\n  end\n\n  def question?\n    @text.chars.last == '?'\n  end\n\n  def empty?\n    @text.rstrip.empty?\n  end\nend	\N	\N	0	7	2014-06-28 04:38:19	2014-06-28 04:38:19	8	bob.rb
16	10	d8fbe7fa293930be2a00f746	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    @phrase = Phrase.new(phrase)\n    case\n    when @phrase.empty?\n      'Fine. Be that way!'\n    when @phrase.yelling?\n      'Woah, chill out!'\n    when @phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(text)\n    @text = text\n  end\n\n  def yelling?\n    @text.upcase!.nil?\n  end\n\n  def question?\n    @text.chars.last == '?'\n  end\n\n  def empty?\n    @text.rstrip.empty?\n  end\nend	\N	\N	0	5	2014-06-30 14:48:39	2014-06-30 14:48:39	8	bob.rb
17	10	e5651b4f554a12f22b3367bf	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    phrase = Phrase.new({text: phrase})\n    case\n    when phrase.empty?\n      'Fine. Be that way!'\n    when phrase.yelling?\n      'Woah, chill out!'\n    when phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(args)\n    @text = args[:text].to_s\n  end\n\n  def yelling?\n    text.upcase == @text\n  end\n\n  def question?\n    text.chars.last == '?'\n  end\n\n  def empty?\n    text.rstrip.empty?\n  end\nend	\N	\N	0	8	2014-07-08 02:28:34	2014-07-08 02:28:34	8	bob.rb
18	10	98fe032f15a51ff5a168b04d	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    @phrase = Phrase.new(phrase)\n    case\n    when @phrase.empty?\n      'Fine. Be that way!'\n    when @phrase.yelling?\n      'Woah, chill out!'\n    when @phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(text)\n    @text = text\n  end\n\n  def yelling?\n    @text.upcase.nil?\n  end\n\n  def question?\n    @text.chars.last == '?'\n  end\n\n  def empty?\n    @text.rstrip.empty?\n  end\nend	\N	\N	0	6	2014-07-11 02:36:10	2014-07-11 02:36:10	8	bob.rb
19	10	e07789efb0f67e8a8976732a	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    phrase = Phrase.new({text: phrase})\n    case\n    when phrase.empty?\n      'Fine. Be that way!'\n    when phrase.yelling?\n      'Woah, chill out!'\n    when phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(args)\n    @text = args[:text].to_s.rstrip\n  end\n\n  def yelling?\n    text.upcase == text\n  end\n\n  def question?\n    text.chars.last == '?'\n  end\n\n  def empty?\n    text.empty?\n  end\nend	\N	\N	0	10	2014-07-13 09:04:11	2014-07-13 09:04:11	8	bob.rb
20	10	e19de422a41e9de6f897a27a	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    phrase = Phrase.new({text: phrase})\n    case\n    when phrase.empty?\n      'Fine. Be that way!'\n    when phrase.yelling?\n      'Woah, chill out!'\n    when phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(args)\n    @text = args[:text].to_s\n  end\n\n  def yelling?\n    text.upcase == text\n  end\n\n  def question?\n    text.chars.last == '?'\n  end\n\n  def empty?\n    text.rstrip.empty?\n  end\nend	\N	\N	0	9	2014-07-19 21:39:26	2014-07-19 21:39:26	8	bob.rb
21	10	7599a81895b367fc88e303a6	done	ruby	bob	class Bob\n  def hey(phrase)\n    phrase = Phrase.new({text: phrase})\n    case\n    when phrase.empty?\n      'Fine. Be that way!'\n    when phrase.yelling?\n      'Woah, chill out!'\n    when phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(args)\n    @text = args[:text].strip\n  end\n\n  def yelling?\n    text.upcase == text\n  end\n\n  def question?\n    text.end_with? '?'\n  end\n\n  def empty?\n    text.empty?\n  end\nend	2014-07-25 01:00:45	\N	0	11	2014-07-21 01:43:53	2014-07-21 01:43:53	8	bob.rb
22	10	c51ed5001284e935a86c4141	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    @phrase = Phrase.new(phrase)\n    case @phrase\n    when @phrase.empty?\n      'Fine. Be that way!'\n    when @phrase.yelling?\n      'Woah, chill out!'\n    when @phrase.question?\n      'Sure.'\n    else\n      "Whatever."\n    end\n  end\nend\n\nclass Phrase\n  attr_accessor :text\n\n  def initialize(text)\n    @text = text\n  end\n\n  def yelling?\n    @text.upcase!.nil?\n  end\n\n  def question?\n    @text.chars.last == '?'\n  end\n\n  def empty?\n    @text.rstrip.empty?\n  end\nend	\N	\N	0	4	2014-07-24 18:45:51	2014-07-24 18:45:51	8	bob.rb
23	10	81215dd41a1475e643080e05	done	ruby	difference-of-squares	class Squares\n  def initialize(num)\n    @num = num\n  end\n  def sum_of_squares\n    sum = 0\n    (0..@num).each {|x| sum += x**2 }\n    sum\n  end\n\n  def square_of_sums\n    other_sum = 0\n    (0..@num).each {|x| other_sum += x}\n     other_sum **2\n  end\n\n  def difference\n    self.square_of_sums - self.sum_of_squares\n  end\n\nend	2014-06-20 07:45:42	\N	0	1	2014-06-19 23:13:31	2014-06-19 23:13:31	9	squares.rb
24	10	1376b81feada22a9bf29a112	pending	python	bob	#creating Bob\nclass Bob(object):\n#i was told i don't actually need __init__ here... why is that?\n\tdef __init__( self ):\n\t\tpass\n\t#setting up responces for Bob to different statements\n\tdef hey ( self, statement ):\n\t\t#responding to nothing at all\n\t\t#this is sloppy i think.  got it to work for this test but not for other blank statements.\n\t\tif statement == '    ':\n\t\t\treturn('Fine. Be that way!')\n\t\t#this is above 'Sure.' response because it has priority in the tests over question marks\n\t\t#responding to all-caps messages.  This one confused me a bit.. was it only supposed to respond if the statement was entirely caps?\n\t\telif statement.islower() is False and statement.isupper() is True:\n\t\t\treturn('Woah, chill out!')\n\t\t#don't know if I should have sliced this.  Is slicing ever acceptable? It seems very sloppy to me\n\t\telif statement[-1:] == '?':\n\t\t\treturn('Sure.')\n\t\t#responding to nothing\n\t\telif statement != '':\n\t\t\treturn ('Whatever.')\n\t\t#responding to anything else\n\t\telse: \n\t\t\treturn ('Fine. Be that way!')	\N	\N	0	1	2014-06-17 02:54:45	2014-06-17 02:54:45	10	bob.py
25	11	dd0f5b338cae717a20cf314c	done	clojure	gigasecond	(ns gigasecond)\n\n(defn- cal\n  "Calendar"\n  [y m d]\n  (let [z (java.util.TimeZone/getTimeZone "GMT")\n        c (java.util.Calendar/getInstance z)]\n    (.clear c)\n    (.set c y (dec m) d 0 0 0)\n    c))\n\n(defn- sets\n  [c s]\n  (.setTimeInMillis c s))\n\n(defn- gets\n  [c]\n  (.getTimeInMillis c))\n\n(defn- date\n  [c]\n  (let [y (.get c java.util.Calendar/YEAR)\n        m (.get c java.util.Calendar/MONTH)\n        d (.get c java.util.Calendar/DATE)]\n    [y (inc m) d]))\n\n(defn from\n  [y m d]\n  (let [c (cal y m d)]\n    (sets c (+ (gets c) (*' 1000000000 1000)))\n    (date c)))	2014-07-19 23:58:25	\N	0	1	2014-07-12 21:42:07	2014-07-12 21:42:07	11	gigasecond.clj
26	11	a9817706b2f25d743da6fb89	pending	ruby	raindrops	class Raindrops\n  class << self\n    def convert(input)\n      new(input).convert\n    end\n  end\n\n  def initialize(input)\n    @input = input\n  end\n\n  def convert\n    return "#@input" if !pling? && !plang? && !plong?\n    output = ''\n    output << 'Pling' if pling?\n    output << 'Plang' if plang?\n    output << 'Plong' if plong?\n    output\n  end\n\n  private\n  def pling?\n    @input % 3 == 0\n  end\n\n  def plang?\n    @input % 5 == 0\n  end\n\n  def plong?\n    @input % 7 == 0\n  end\nend	\N	\N	0	1	2014-07-27 14:35:41	2014-07-27 14:35:41	12	raindrops.rb
27	11	fca749ac6c3db571756b2e6f	done	ruby	leap	class Year\n  def self.leap?(year)\n    (year % 4).zero? && !(year % 100).zero? || (year % 400).zero?\n  end\nend	2014-07-18 14:20:17	\N	0	1	2014-07-14 02:05:44	2014-07-14 02:05:44	13	year.rb
28	11	084aeb4a33616b6aec00c3fd	superseded	javascript	anagram	function Anagram(starting_word) {\n  function is_an_anagram(other_word) {\n    other_word = other_word.toLowerCase();\n    return (starting_word !== other_word && starting_word_alphabetized === other_word.alphabetize());\n  }\n  function find_matches_among(potential_anagrams) {\n    return potential_anagrams.filter(is_an_anagram);\n  }\n  starting_word = starting_word.toLowerCase();\n  starting_word_alphabetized = starting_word.alphabetize();\n\n  this.match = find_matches_among;\n}\n\nif (module) {\n  module.exports = Anagram;\n}\n\nString.prototype.alphabetize = function String_alphabetize() {\n  return this.toLowerCase().split('').sort().join('');\n};	\N	\N	0	4	2014-07-15 01:04:20	2014-07-15 01:04:20	14	anagram.js
29	11	242f3e2916391e46ee8b6281	superseded	javascript	anagram	function Anagram(starting_word) {\n  var alphabetized_starting_word;\n\n  starting_word = starting_word.toLowerCase();\n  alphabetized_starting_word = alphabetize(starting_word);\n\n  function alphabetize(a_word) {\n    return a_word.toLowerCase().split('').sort().join('');\n  }\n  function is_an_anagram(other_word) {\n    other_word = other_word.toLowerCase();\n    return (starting_word !== other_word && alphabetized_starting_word === alphabetize(other_word));\n  }\n  function find_matches_among(potential_anagrams) {\n    return potential_anagrams.filter(is_an_anagram);\n  }\n\n  this.match = find_matches_among;\n}\n\nif (module) {\n  module.exports = Anagram;\n}	\N	\N	0	5	2014-07-15 23:08:55	2014-07-15 23:08:55	14	anagram.js
30	11	9896329d80a096ef1697f30f	superseded	javascript	anagram	function Anagram(word) {\n  var letters_to_match = alphabetize(word);\n\n  this.match = function(potential_anagrams) {\n    var anagrams = [];\n    for (var i in potential_anagrams) {\n      var potential_match = potential_anagrams[i];\n      if (is_identical(potential_match)) {\n        continue;\n      }\n      if (alphabetize(potential_match) == letters_to_match) {\n        anagrams.push(potential_match);\n      }\n    }\n    return anagrams;\n  };\n\n  function alphabetize(t) {\n    return t.toLowerCase().split('').sort().join('');\n  }\n  function is_identical(t) {\n    return (t.toLowerCase() == word.toLowerCase());\n  }\n\n}\n\nif (module) {\n  module.exports = Anagram;\n}	\N	\N	0	1	2014-07-16 10:38:49	2014-07-16 10:38:49	14	anagram.js
31	11	83029d95a3aaaea250c2ee77	superseded	javascript	anagram	function alphabetize(letters) {\n  return letters.toLowerCase().split('').sort().join('');\n}\n\nfunction is_identical(a, b) {\n  return (a.toLowerCase() == b.toLowerCase());\n}\n\nfunction Anagram(word) {\n  var letters_to_match = alphabetize(word);\n\n  this.match = function(potential_anagrams) {\n    return potential_anagrams.filter(function(potential_match) {\n      return (!is_identical(word, potential_match) && alphabetize(potential_match) == letters_to_match);\n    });\n  };\n}\n\nif (module) {\n  module.exports = Anagram;\n}	\N	\N	0	2	2014-07-23 02:57:07	2014-07-23 02:57:07	14	anagram.js
181	32	15cc259061d0a42fc726056e	done	perl5	binary	package Binary;\n\nuse strict;\nuse warnings;\n\nsub new {\n    my $class = shift;\n    my $binary = shift;\n\n    $binary =~ s/[^01]/0/g;\n\n    return bless \\$binary, $class;\n}\n\nsub to_decimal {\n    my $self = shift;\n\n    my( $i, $sum );\n    $sum += 2**$i++ * $_ for reverse split //, $$self;\n    return $sum;\n}\n\n1;	2014-05-22 19:35:41	\N	0	1	2014-05-15 20:48:55	2014-05-15 20:48:55	92	Binary.pm
279	47	7e3cae326feac1d1160a048e	done	haskell	rna-transcription	module DNA where\n\ntoRNA :: String -> String\ntoRNA = map rnaTrans\n    where rnaTrans 'G' = 'C'\n          rnaTrans 'C' = 'G'\n          rnaTrans 'T' = 'A'\n          rnaTrans 'A' = 'U'\n          rnaTrans x   = x	2014-05-26 13:46:57	\N	0	1	2014-05-19 20:39:07	2014-05-19 20:39:07	132	DNA.hs
427	16	f44f0fa737ccd601b675b19b	pending	ruby	etl	class ETL\n  def self.transform(old)\n    old.each_with_object({}) do |(old_key, old_value), hash|\n      old_value.each do |new_key|\n        hash[new_key.downcase] = old_key\n      end\n    end\n  end\nend	\N	\N	0	1	2014-06-24 10:35:44	2014-06-24 10:35:44	208	etl.rb
428	16	93539e3d88ce1b321f31dc6e	pending	scala	bob	class Bob {\n\n  val shout = """([A-Z\\d\\W]*[A-Z]+[A-Z\\d\\W]*)""".r\n  val q = """(.*\\?)""".r\n  val silence = """(\\s*)""".r\n\n  def hey(phrase: String) = phrase match {\n    case shout(_) =>  "Woah, chill out!"\n    case q(_) => "Sure."\n    case silence(_) => "Fine. Be that way!"\n    case _ => "Whatever."\n  }\n}	\N	\N	0	1	2014-07-19 16:06:29	2014-07-19 16:06:29	209	bob.scala
32	11	ecf432b8613585ed4a9c1556	superseded	javascript	anagram	function alphabetize(letters) {\n  return letters.toLowerCase().split('').sort().join('');\n}\n\nfunction create_filter(first_word) {\n  first_word = first_word.toLowerCase();\n  return function keep_matches(second_word) {\n    second_word = second_word.toLowerCase();\n    return (alphabetize(first_word) === alphabetize(second_word) && first_word !== second_word);\n  };\n}\n\nfunction Anagram(first_word) {\n  function match(potential_anagrams) {\n    return potential_anagrams.filter(create_filter(first_word));\n  }\n\n  this.match = match;\n}\n\nif (module) {\n  module.exports = Anagram;\n}	\N	\N	0	3	2014-07-23 05:24:58	2014-07-23 05:24:58	14	anagram.js
33	11	ccdebea5338fa5e4c0d55867	superseded	javascript	anagram	function alphabetize(word) {\n  return word.toLowerCase().split('').sort().join('');\n}\n\nfunction Anagram(starting_word) {\n  var alphabetized_starting_word;\n\n  starting_word = starting_word.toLowerCase();\n  alphabetized_starting_word = alphabetize(starting_word);\n\n  function is_an_anagram(other_word) {\n    other_word = other_word.toLowerCase();\n    return (starting_word !== other_word && alphabetized_starting_word === alphabetize(other_word));\n  }\n  function find_matches_among(potential_anagrams) {\n    return potential_anagrams.filter(is_an_anagram);\n  }\n\n  this.match = find_matches_among;\n}\n\nif (module) {\n  module.exports = Anagram;\n}	\N	\N	0	6	2014-07-24 14:38:22	2014-07-24 14:38:22	14	anagram.js
34	11	03437b552ca24272f084fd26	done	javascript	anagram	function alphabetize(word) {\n  return word.toLowerCase().split('').sort().join('');\n}\n\nfunction Anagram(starting_word) {\n  var alphabetized_starting_word;\n\n  starting_word = starting_word.toLowerCase();\n  alphabetized_starting_word = alphabetize(starting_word);\n\n  function is_an_anagram(other_word) {\n    other_word = other_word.toLowerCase();\n    return (starting_word !== other_word && alphabetized_starting_word === alphabetize(other_word));\n  }\n  function find_matches_among(potential_anagrams) {\n    return potential_anagrams.filter(is_an_anagram);\n  }\n\n  return {\n    match: find_matches_among\n  };\n}\n\nif (module) {\n  module.exports = Anagram;\n}	2014-07-28 02:25:01	\N	0	7	2014-07-25 06:40:01	2014-07-25 06:40:01	14	anagram.js
35	11	4558306c3731fc43b6f407c9	superseded	ruby	bob	class Bob\n  def hey(input)\n    RESPONSES.find {|k,v| send(k, input) }.last\n  end\n\n  private\n\n  RESPONSES = {\n    :shouting? => "Woah, chill out!",\n    :question? => "Sure.",\n    :silence?  => "Fine. Be that way!",\n    :default   => "Whatever."\n  }\n\n  def shouting?(input)\n    letters = letters_only(input)\n    letters.any? && (letters == letters.map(&:upcase))\n  end\n\n  def letters_only(input)\n    input.scan(/[a-zA-Z]/)\n  end\n\n  def question?(input)\n    input.chars.last == "?"\n  end\n\n  def silence?(input)\n    input.empty? || input.gsub(/\\s/,'').empty?\n  end\n\n  def default(*)\n    true\n  end\nend	\N	\N	0	1	2014-07-16 20:07:08	2014-07-16 20:07:08	15	bob.rb
36	11	4b8224e501608498638173d8	done	ruby	bob	class Bob\n  def hey(input)\n    RESPONSES.find {|k,v| send(k, input) }.last\n  end\n\n  private\n\n  RESPONSES = {\n    :shouting? => "Woah, chill out!",\n    :question? => "Sure.",\n    :silence?  => "Fine. Be that way!",\n    :default   => "Whatever."\n  }\n\n  def shouting?(input)\n    letters = letters_only(input)\n    letters.any? && (letters == letters.map(&:upcase))\n  end\n\n  def letters_only(input)\n    input.scan(/[a-zA-Z]/)\n  end\n\n  def question?(input)\n    input.chars.last == "?"\n  end\n\n  def silence?(input)\n    input.strip.empty?\n  end\n\n  def default(*)\n    true\n  end\nend	2014-07-28 19:48:26.57755	\N	0	2	2014-07-21 03:16:32	2014-07-21 03:16:32	15	bob.rb
37	11	e3ce5838900b1e870e7c10bf	superseded	ruby	word-count	class Phrase\n  def initialize(words)\n    @words = words\n  end\n\n  def word_count\n    count = Hash.new(0)\n    @words.scan(/\\w+/m).map(&:downcase).each { |w| count[w] += 1 }\n    count\n  end\nend	\N	\N	0	2	2014-07-12 05:26:02	2014-07-12 05:26:02	16	word-count.rb
38	11	03a2ddc4b69bee46b91ef9e9	superseded	ruby	word-count	class Phrase\n  def initialize(words)\n    @words = words\n  end\n\n  def word_count\n    count = Hash.new(0)\n    @words.split(/\\W+/m).map(&:downcase).each { |w| count[w] += 1 }\n    count\n  end\nend	\N	\N	0	1	2014-07-14 12:23:53	2014-07-14 12:23:53	16	word-count.rb
39	11	b8fd45f48fe19e62a56c6fdc	superseded	ruby	word-count	class Phrase\n  def initialize(words)\n    @words = words\n  end\n\n  def word_count\n    count = Hash.new(0)\n    @words.downcase.scan(/\\w+/m) { |w| count[w] += 1 }\n    count\n  end\nend	\N	\N	0	3	2014-07-19 09:48:45	2014-07-19 09:48:45	16	word-count.rb
40	11	4fd13ebaac0491edc9a09abf	done	ruby	word-count	class Phrase\n  def initialize(words)\n    @words = words\n  end\n\n  def word_count\n    count = Hash.new(0)\n    @words.downcase.scan(/\\w+/) { |w| count[w] += 1 }\n    count\n  end\nend	2014-07-24 13:09:32	\N	0	4	2014-07-19 19:39:21	2014-07-19 19:39:21	16	word-count.rb
41	11	bfa7dfb2ff08be8f878bcd20	done	elixir	bob	defmodule Teenager do\n\n  def __info__ do\n\n  end\n\n  def hey(_statement) do\n\t\tshouting = String.upcase(_statement) == _statement && String.downcase(_statement) != _statement\n\t\tquestion = String.ends_with? _statement, "?" \n\t\tsilence = String.rstrip(_statement) == ""\n\t\tif(silence) do\n\t\t\t"Fine. Be that way!"\n\t\telse\n\t\t\tif(shouting) do\n\t\t\t  "Woah, chill out!"\n\t\t\telse\n\t\t\t\tif(question) do\n\t\t\t\t\t"Sure."\n\t\t\t\telse\n\t\t\t\t\t"Whatever."\n\t\t\t\tend\n\t\t\tend\n\t\tend\n  end\n\nend	2014-07-22 18:52:50	\N	0	1	2014-07-12 15:11:49	2014-07-12 15:11:49	17	bob.exs
42	14	1ae7cf2982e46c263c8a8e60	superseded	elixir	word-count	defmodule Words do\n\n  def count(words) do\n    List.foldl list(words), HashDict.new, update_count\n  end\n\n  defp list(words) do\n    List.flatten Regex.scan %r/\\w+/, String.downcase(words)\n  end\n\n  defp update_count do\n    fn (word, dict) ->\n      HashDict.update dict, word, 1, fn (count) -> count + 1 end\n    end\n  end\n\n\nend	\N	\N	0	2	2014-04-14 19:39:00	2014-04-14 19:39:00	18	word-count.exs
43	14	1c7f03aa4ee8f23d3037feb8	superseded	elixir	word-count	defmodule Words do\n\n  def count(words) do\n    count_fnx = fn (word, dict) ->\n      HashDict.update dict, word, 1, fn (count) -> count + 1 end\n    end\n    List.foldl list(words), HashDict.new, count_fnx\n  end\n\n  def list(words) do\n    Regex.scan %r/\\w+/, String.downcase(words)\n  end\n\nend	\N	\N	0	1	2014-05-15 05:51:18	2014-05-15 05:51:18	18	word-count.exs
44	14	da2340bec0dfb71e0c115f34	pending	elixir	word-count	defmodule Words do\n\n  def count(words) do\n    List.foldl list(words), HashDict.new, update_count(&1, &2)\n  end\n\n  defp list(words) do\n    List.flatten Regex.scan %r/\\w+/, String.downcase(words)\n  end\n\n  defp update_count(word, dict) do\n    HashDict.update dict, word, 1, fn (count) -> count + 1 end\n  end\n\n\nend	\N	\N	0	3	2014-05-24 09:59:33	2014-05-24 09:59:33	18	word-count.exs
314	22	f22bc96ea7bc3180cebf2817	superseded	ruby	rna-transcription	class DNA\n  attr_reader :code\n\n  def initialize(code)\n    @code = code\n  end\n\n  def to_rna\n    code.tr("T", "U")\n  end\nend	\N	\N	0	1	2014-05-02 07:22:21	2014-05-02 07:22:21	152	rna-transcription.rb
315	22	ba402edc7cb6747f9824f267	pending	haskell	bob	module Bob(\r\n    responseFor\r\n) where\r\n\r\nimport Data.List(isSuffixOf)\r\nimport Data.Char(isSpace, isLower, isAlpha)\r\n\r\nresponseFor :: String -> String\r\nresponseFor statement\r\n    | isSilence = "Fine. Be that way!"\r\n    | isYell = "Woah, chill out!"\r\n    | isQuestion = "Sure."\r\n    | otherwise = "Whatever."\r\n    where isSilence = all isSpace statement\r\n          isYell = allUpper statement\r\n          isQuestion = "?" `isSuffixOf` statement\r\n\r\nallUpper :: String -> Bool\r\nallUpper str = noLower && hasLetters\r\n    where noLower = not $ any isLower str\r\n          hasLetters = any isAlpha str\r	\N	\N	0	2	2014-04-01 18:02:12	2014-04-01 18:02:12	153	bob.hs
45	21	e137b4ca67e08ad57edd7a42	pending	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| not_matching(x, y)}\n  end\n\n  private\n  def self.shorter_array(s1, s2)\n    (s1.length < s2.length) ? s1.chars : s2.chars\n  end\n\n  def self.longer_array(s1, s2)\n    (s1.length < s2.length) ? s2.chars : s1.chars\n  end\n\n  def self.pair_them(s1, s2)\n    shorter_array(s1, s2).zip(longer_array(s1, s2))\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2\n  end\n\nend	\N	\N	0	8	2014-03-27 08:45:20	2014-03-27 08:45:20	19	hamming.rb
46	21	a77bea0ee0091d5a59aa22ef	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    result = 0\n    shorter_length(original, mutated).times do |i|\n      if original[i] != mutated[i]\n        result +=1\n      end\n    end\n    result\n  end\n\n  private\n\n  def self.shorter_length(s1, s2)\n    if (s1.length < s2.length)\n      s1.length\n    else\n        s2.length\n    end\n  end\n\nend	\N	\N	0	1	2014-03-31 07:48:56	2014-03-31 07:48:56	19	hamming.rb
47	21	a61d3d5ef530ce10562a32ca	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    result = 0\n    self.pair_them(original, mutated).each do |x,y|\n      if self.not_matching(x,y)\n        result += 1\n      end\n    end\n    result\n  end\n\n#  private\n  def self.pair_them(s1, s2)\n    s1.to_array.zip(s2.to_array)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2 and c2\n  end\n\nend\n\n\nclass String\n\n  def to_array\n    self.split("")\n  end\n\nend	\N	\N	0	2	2014-04-04 20:14:10	2014-04-04 20:14:10	19	hamming.rb
48	21	a578694a15081fd7bb7327c6	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| not_matching(x, y)}\n  end\n\n  private\n  def self.shorter(s1, s2)\n    (s1.length < s2.length) ? s1 : s2\n  end\n\n  def self.longer(s1, s2)\n    (s1.length < s2.length) ? s2 : s1\n  end\n\n  def self.pair_them(s1, s2)\n    shorter(s1, s2).chars.zip(longer(s1, s2).chars)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2\n  end\n\nend	\N	\N	0	7	2014-05-05 21:08:31	2014-05-05 21:08:31	19	hamming.rb
49	21	9101f961b7cc53748731c124	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| not_matching(x, y)}\n  end\n\n  private\n  def self.pair_them(s1, s2)\n    s1.chars.zip(s2.chars)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2 and c2\n  end\n\nend	\N	\N	0	6	2014-05-26 01:57:13	2014-05-26 01:57:13	19	hamming.rb
50	21	a7efc7ced7fc2f5ef9f0eb42	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| (x != y and y)}\n  end\n\n  private\n  def self.pair_them(s1, s2)\n    s1.chars.zip(s2.chars)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2 and c2\n  end\n\nend	\N	\N	0	5	2014-06-26 13:05:06	2014-06-26 13:05:06	19	hamming.rb
51	21	a248602edef6cf6fbeddabc8	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| (x != y and y)}\n  end\n\n  private\n  def self.pair_them(s1, s2)\n    s1.chars.zip(s2.to_array)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2 and c2\n  end\n\nend\n\n\nclass String\n\n  def to_array\n    self.split("")\n  end\n\nend	\N	\N	0	4	2014-06-29 12:41:13	2014-06-29 12:41:13	19	hamming.rb
52	21	94961c42928b919c71125aab	superseded	ruby	hamming	class Hamming\n\n  def self.compute(original, mutated)\n    pair_them(original, mutated).count {|x,y| (x != y and y)}\n  end\n\n  private\n  def self.pair_them(s1, s2)\n    s1.to_array.zip(s2.to_array)\n  end\n\n  def self.not_matching(c1, c2)\n    c1 != c2 and c2\n  end\n\nend\n\n\nclass String\n\n  def to_array\n    self.split("")\n  end\n\nend	\N	\N	0	3	2014-07-10 11:37:33	2014-07-10 11:37:33	19	hamming.rb
53	27	6a80ba824b43a6e42c10a4c3	done	ruby	grains	class Grains\n\tdef square (value)\n    grains = 1\n    (value - 1).times { grains += grains }\n    return grains\n\tend\n  def total (board_size=64)\n    running_total = 0\n    board_size.times do |square_num|\n      running_total += square(square_num + 1)\n    end\n    return running_total\n  end\nend	2014-02-27 21:33:01	\N	0	1	2014-02-25 13:16:19	2014-02-25 13:16:19	20	grains.rb
54	27	cc45cb3592d427d3e99d469d	done	clojure	nucleotide-count	(ns dna\n  (:refer-clojure :rename {count core-count}))\n\n(def dna-nucleotides {\\A 0 \\T 0 \\C 0 \\G 0})\n\n(def rna-nucleotides #{\\U})\n\n(defn count\n  "Counts the number of occurrences of nucleotide n\n  in a DNA strand."\n  [n strand]\n  (cond (contains? dna-nucleotides n) (core-count (filter #(= n %) strand))\n        (contains? rna-nucleotides n) 0\n        :else (throw (Exception. "invalid nucleotide"))))\n\n(defn nucleotide-counts\n  "Returns a map of nucleotides to their count in a DNA strand."\n  [strand]\n  (merge dna-nucleotides (frequencies strand)))	2014-02-05 02:10:16	\N	0	1	2014-01-30 03:45:17	2014-01-30 03:45:17	21	dna.clj
55	27	b9764f17880f9716bebf82d2	done	ruby	prime-factors	class PrimeFactors\n\n  def self.for num\n    result = []\n    divisor = 2\n    while num > 1\n      while num % divisor == 0\n        result << divisor\n        num /= divisor\n      end\n      divisor += 1\n    end\n    result\n  end\n\nend	2014-03-30 11:57:11	\N	0	1	2014-03-21 05:52:48	2014-03-21 05:52:48	22	prime-factors.rb
62	28	87dab0e79948001468ab7348	done	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|i| verse(i) << "\\n"}.join\n  end\n\n  def verse(i)\n    beer_count = BeerCount.new(i)\n    "#{beer_count.to_s.capitalize} of beer on the wall, " +\n    "#{beer_count} of beer.\\n" +\n    "#{beer_count.action}, " +\n    "#{beer_count.next} of beer on the wall.\\n"\n  end\nend\n\nrequire 'delegate'\n\nclass BeerCount < SimpleDelegator\n  def to_s\n    "#{how_many} #{container}"\n  end\n\n  def action\n    self == 0 ? buy_more : drink\n  end\n\n  def next\n    self.class.new((self - 1) % 100)\n  end\n\n  private\n\n  def how_many\n    self == 0 ? 'no more' : __getobj__\n  end\n\n  def container\n    self == 1 ? 'bottle' : 'bottles'\n  end\n\n  def buy_more\n    "Go to the store and buy some more"\n  end\n\n  def drink\n    "Take #{pronoun} down and pass it around"\n  end\n\n  def pronoun\n    self == 1 ? 'it' : 'one'\n  end\nend	2014-07-08 20:06:28	\N	0	8	2014-07-06 00:24:33	2014-07-06 00:24:33	26	beer-song.rb
196	37	5eb135afab820a7eda1e6cfc	pending	javascript	grains	(function (module) {\n  function square(number) {\n    return Math.pow(2, number - 1);\n  }\n\n  function total() {\n    var current = 65,\n        total = 0;\n    while (current--)\n      total += square(current);\n    return total;\n  }\n\n  module.exports = function () {\n    return  {\n      square: square,\n      total: total\n    };\n  };\n}(module));	\N	\N	0	1	2014-06-25 18:27:41	2014-06-25 18:27:41	99	grains.js
197	37	0cde43979713f76c879bfe4e	pending	haskell	bob	module Bob where\nimport Data.Char (isSpace, isUpper, isAlpha)\nimport Data.String.Utils (endswith)\n\nresponseFor :: String -> String\nresponseFor = doResponse . filter (not.isSpace)\n    where doResponse s\n            | isYell s      = "Woah, chill out!"\n            | isQuestion s  = "Sure."\n            | isSilent s    = "Fine. Be that way!"\n            | otherwise     = "Whatever."\n\nisQuestion :: String -> Bool\nisQuestion = endswith "?"\n\nisSilent :: String -> Bool\nisSilent = (=="")\n\nisYell :: String -> Bool\nisYell = and' . map isUpper . filter isAlpha\n    where and' [] = False\n          and' x = and x	\N	\N	0	1	2014-06-19 06:23:48	2014-06-19 06:23:48	100	Bob.hs
56	27	57d4f6b2338fb7fb3ad41583	done	ruby	beer-song	class Beer\n  def verse(bottle_count)\n    raise only_natural_number_of_beers if bottle_count < 0\n\n    if bottle_count == 0\n      is_it_time_for_aa_maybe_not\n    elsif bottle_count == 1\n      impending_facing_of_twelve_steps\n    else\n      lots_of_remaining_drunkenness(bottle_count)\n    end\n  end\n\n  def sing(start_at_verse, end_at_verse = 0, sung = [])\n    sung << "#{verse(start_at_verse)}\\n"\n\n    if start_at_verse == end_at_verse\n      sung.join\n    else\n      sing(start_at_verse - 1, end_at_verse, sung)\n    end\n  end\n\n  private\n  def impending_facing_of_twelve_steps\n    "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n"\n  end\n\n  def is_it_time_for_aa_maybe_not\n    "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n  end\n\n  def lots_of_remaining_drunkenness(bottle_count)\n    next_round = bottle_count - 1\n    "#{bottle_count} #{bottle_or_bottles(bottle_count)} of beer on the wall, #{bottle_count} #{bottle_or_bottles(bottle_count)} of beer.\\nTake one down and pass it around, #{next_round} #{bottle_or_bottles(next_round)} of beer on the wall.\\n"\n  end\n\n  def only_natural_number_of_beers\n    "Natural numbers of beers on the wall, natural numbers of beer.\\nIf you can't comply, well, then I'm gonna cry, natural number of beers on the wall."\n  end\n\n  def bottle_or_bottles(bottle_count)\n    bottle_count > 1 ? "bottles" : "bottle"\n  end\nend	2014-06-08 01:36:07	\N	0	2	2014-05-30 23:42:35	2014-05-30 23:42:35	23	beer-song.rb
57	27	b5a5c9b8907f1977aac5fff6	superseded	ruby	beer-song	class Beer\n  def verse(bottle_count)\n    if bottle_count == 0\n      is_it_time_for_aa_maybe_not\n    elsif bottle_count == 1\n      impending_facing_of_twelve_steps\n    else\n      lots_of_remaining_drunkenness(bottle_count)\n    end\n  end\n\n  def sing(start_at_verse, end_at_verse = 0, sung = [])\n    sung << "#{verse(start_at_verse)}\\n"\n\n    if start_at_verse == end_at_verse\n      sung.join\n    else\n      sing(start_at_verse - 1, end_at_verse, sung)\n    end\n  end\n\n  private\n  def impending_facing_of_twelve_steps\n    "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n"\n  end\n\n  def is_it_time_for_aa_maybe_not\n    "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n  end\n\n  def lots_of_remaining_drunkenness(bottle_count)\n    next_round = bottle_count - 1\n    "#{bottle_count} #{bottle_or_bottles(bottle_count)} of beer on the wall, #{bottle_count} #{bottle_or_bottles(bottle_count)} of beer.\\nTake one down and pass it around, #{next_round} #{bottle_or_bottles(next_round)} of beer on the wall.\\n"\n  end\n\n  def bottle_or_bottles(bottle_count)\n    bottle_count > 1 ? "bottles" : "bottle"\n  end\nend	\N	\N	0	1	2014-07-14 03:30:39	2014-07-14 03:30:39	23	beer-song.rb
58	28	1af323cb08805978cb00575d	pending	javascript	point-mutations	"use strict";\n\nfunction DNA(strand) {\n  this.strand = this._toArray(strand);\n}\n\nDNA.prototype.hammingDistance = function(strand) {\n  return this._toArray(strand).filter(this.nucleotidesDiffer, this).length;\n};\n\nDNA.prototype.nucleotidesDiffer = function(nucleotide, index) {\n  if (this.strand.length > index) {\n    return (this.strand[index] !== nucleotide);\n  }\n};\n\nDNA.prototype._toArray = function(strand) {\n  return strand.split('');\n};\n\nmodule.exports = DNA	\N	\N	0	2	2014-07-06 03:29:20	2014-07-06 03:29:20	24	point-mutations.js
59	28	b928c938a3a950fd2d8d0543	superseded	javascript	point-mutations	"use strict";\n\nfunction DNA(strand) {\n  this.strand = this._toArray(strand);\n}\n\nDNA.prototype.hammingDistance = function(strand) {\n  return this._toArray(strand).filter(this.compareNucleotides, this).length;\n};\n\nDNA.prototype.compareNucleotides = function(nucleotide, index) {\n  if (this.strand.length > index) {\n    return (this.strand[index] !== nucleotide);\n  }\n};\n\nDNA.prototype._toArray = function(strand) {\n  return strand.split('');\n};\n\nmodule.exports = DNA	\N	\N	0	1	2014-07-18 14:29:10	2014-07-18 14:29:10	24	point-mutations.js
60	28	1c34a7452d8c6a7f8eff8a08	superseded	scala	robot-name	class Robot {\n\t\n\tval random = new scala.util.Random\n\tval alpha1 = ('A' to 'Z')\n\tval num1 = ('0' to '9')\n\tval str1 = Stream.continually(random.nextInt(alpha1.size)).map(alpha1).take(2).mkString\n\tval str2 = Stream.continually(random.nextInt(num1.size)).map(num1).take(3).mkString\n\ttype s = String\n\tvar  _str3 : s = str1 + str2\n\tdef str3:s =  _str3\n\tdef name : String = {\n\t\tstr3\n\t}\n\tdef reset() = {\n\t\t_str3 = new Robot().name\n\t}\n\n}	\N	\N	0	1	2014-07-10 17:03:22	2014-07-10 17:03:22	25	Robot.scala
61	28	3e20e15d17dabd25f02a9e58	done	scala	robot-name	class Robot {\n\tvar  _str3 : String = ""\n\tdef str3 : String  =  _str3\n\tdef newName : String  = { \n\t\t\tval random = new scala.util.Random\n\t\t\tval alpha1 = ('A' to 'Z')\n\t\t\tval num1 = ('0' to '9')\n\t\t\tval str1 = Stream.continually(random.nextInt(alpha1.size)).map(alpha1).take(2).mkString\n\t\t\tval str2 = Stream.continually(random.nextInt(num1.size)).map(num1).take(3).mkString\n\t\t\t_str3 = str1.concat(str2)\n\t\t\tstr3\n\t}\n\tnewName\n\tdef name : String = {\n\t\tstr3\n\t}\n\tdef reset() = {\n\t\t_str3 = newName\n\t}\n\n}	2014-07-28 19:48:27.154956	\N	0	2	2014-07-25 04:12:35	2014-07-25 04:12:35	25	Robot.scala
63	28	5d5fc4fe4ecbf4be393371f7	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(starting, ending)\n    (ending..starting).to_a.reverse.map {|n| verse(n)}.join("\\n") + "\\n"\n  end\n\n  def verse(number)\n    if number == 0\n      "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n    elsif number == 1\n      "%s bottle of beer on the wall, %s bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n" % [number, number]\n    elsif number == 2\n      "%s bottles of beer on the wall, %s bottles of beer.\\nTake one down and pass it around, %s bottle of beer on the wall.\\n" % [number, number, number-1]\n    else\n      "%s bottles of beer on the wall, %s bottles of beer.\\nTake one down and pass it around, %s bottles of beer on the wall.\\n" % [number, number, number-1]\n    end\n  end\nend	\N	\N	0	1	2014-07-08 15:06:22	2014-07-08 15:06:22	26	beer-song.rb
64	28	a8e6170e083e4b25c803fffc	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(starting, ending)\n    starting.downto(ending).map {|n| verse(n)}.join("\\n") + "\\n"\n  end\n\n  def verse(number)\n    if number == 0\n      "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n    elsif number == 1\n      "%s bottle of beer on the wall, %s bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n" % [number, number]\n    elsif number == 2\n      "%s bottles of beer on the wall, %s bottles of beer.\\nTake one down and pass it around, %s bottle of beer on the wall.\\n" % [number, number, number-1]\n    else\n      "%s bottles of beer on the wall, %s bottles of beer.\\nTake one down and pass it around, %s bottles of beer on the wall.\\n" % [number, number, number-1]\n    end\n  end\nend	\N	\N	0	2	2014-07-10 11:36:08	2014-07-10 11:36:08	26	beer-song.rb
65	28	2a6a7d1e8cfb08f6ab06c6dc	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|n| verse(n)}.join("\\n") + "\\n"\n  end\n\n  def verse(bottle_count)\n    "#{count(bottle_count)} #{container(bottle_count)} of beer on the wall, ".capitalize +\n    "#{count(bottle_count)} #{container(bottle_count)} of beer.\\n" +\n    "#{action(bottle_count)}, " +\n    "#{count(bottle_count - 1)} #{container(bottle_count - 1)} of beer on the wall.\\n"\n  end\n\n  private\n\n  def count(bottle_count)\n    case bottle_count\n    when -1\n      99\n    when 0\n      'no more'\n    else\n      bottle_count\n    end\n  end\n\n  def container(bottle_count)\n    case bottle_count\n    when 1\n      'bottle'\n    else\n      'bottles'\n    end\n  end\n\n  def action(bottle_count)\n    case bottle_count\n    when 0\n      "Go to the store and buy some more"\n    else\n      "Take #{pronoun(bottle_count)} down and pass it around"\n    end\n  end\n\n  def pronoun(bottle_count)\n    case bottle_count\n    when 1\n      'it'\n    else\n      'one'\n    end\n  end\nend	\N	\N	0	3	2014-07-15 19:05:58	2014-07-15 19:05:58	26	beer-song.rb
66	28	8f48198bd5263166fce50e59	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|n| verse(n)}.join("\\n") + "\\n"\n  end\n\n  def verse(bottle_count)\n    Verse.new(bottle_count).to_s\n  end\nend\n\nclass Verse\n  attr_reader :bottle_count\n\n  def initialize(bottle_count)\n    @bottle_count = bottle_count\n  end\n\n  def to_s\n    "#{count} #{container} of beer on the wall, ".capitalize +\n    "#{count} #{container} of beer.\\n" +\n    "#{action}, " +\n    "#{count(bottle_count - 1)} #{container(bottle_count - 1)} of beer on the wall.\\n"\n  end\n\n  private\n\n  def count(count = bottle_count)\n    case count\n    when -1\n      99\n    when 0\n      'no more'\n    else\n      count\n    end\n  end\n\n  def container(count = bottle_count)\n    case count\n    when 1\n      'bottle'\n    else\n      'bottles'\n    end\n  end\n\n  def action\n    case bottle_count\n    when 0\n      "Go to the store and buy some more"\n    else\n      "Take #{pronoun} down and pass it around"\n    end\n  end\n\n  def pronoun\n    case bottle_count\n    when 1\n      'it'\n    else\n      'one'\n    end\n  end\nend	\N	\N	0	4	2014-07-20 08:47:25	2014-07-20 08:47:25	26	beer-song.rb
67	28	2ab628c76dc89eae87fadcbe	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|n| verse(n)}.join("\\n") << "\\n"\n  end\n\n  def verse(bottle_count)\n    Verse.new(bottle_count).to_s\n  end\n\n  class Verse\n    attr_reader :bottle_count\n\n    def initialize(bottle_count)\n      @bottle_count = bottle_count\n    end\n\n    def to_s\n      "#{count} #{container} of beer on the wall, ".capitalize +\n      "#{count} #{container} of beer.\\n" +\n      "#{action}, " +\n      "#{count(bottle_count - 1)} #{container(bottle_count - 1)} of beer on the wall.\\n"\n    end\n\n    private\n\n    def count(i = bottle_count)\n      case i\n      when -1\n        99.to_s\n      when 0\n        'no more'\n      else\n        i.to_s\n      end\n    end\n\n    def container(i = bottle_count)\n      case i\n      when 1\n        'bottle'\n      else\n        'bottles'\n      end\n    end\n\n    def action\n      case bottle_count\n      when 0\n        "Go to the store and buy some more"\n      else\n        "Take #{pronoun} down and pass it around"\n      end\n    end\n\n    def pronoun\n      case bottle_count\n      when 1\n        'it'\n      else\n        'one'\n      end\n    end\n  end\nend	\N	\N	0	6	2014-07-21 12:16:27	2014-07-21 12:16:27	26	beer-song.rb
68	28	a448745445c86fb788d43d90	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|n| verse(n)}.join("\\n") << "\\n"\n  end\n\n  def verse(bottle_count)\n    Verse.new(bottle_count).to_s\n  end\n\n  class Verse\n    attr_reader :bottle_count\n\n    def initialize(bottle_count)\n      @bottle_count = bottle_count\n    end\n\n    def to_s\n      "#{count} #{container} of beer on the wall, ".capitalize +\n      "#{count} #{container} of beer.\\n" +\n      "#{action}, " +\n      "#{count(bottle_count - 1)} #{container(bottle_count - 1)} of beer on the wall.\\n"\n    end\n\n    private\n\n    def count(count = bottle_count)\n      case count\n      when -1 then 99.to_s\n      when 0 then 'no more'\n      else\n        count\n      end\n    end\n\n    def container(count = bottle_count)\n      case count\n      when 1 then 'bottle'\n      else\n        'bottles'\n      end\n    end\n\n    def action\n      case bottle_count\n      when 0 then "Go to the store and buy some more"\n      else\n        "Take #{pronoun} down and pass it around"\n      end\n    end\n\n    def pronoun\n      case bottle_count\n      when 1 then 'it'\n      else\n        'one'\n      end\n    end\n  end\nend	\N	\N	0	5	2014-07-24 13:37:30	2014-07-24 13:37:30	26	beer-song.rb
79	30	8276684343aafc7edb2f2dca	done	go	bob	package bob\n\nimport (\n\t"regexp"\n\t"strings"\n)\n\nfunc Silent(input string) bool {\n\treturn len(strings.TrimSpace(input)) == 0\n}\nfunc Shouting(input string) bool {\n\tre := regexp.MustCompile(`[A-Z]`)\n\treturn re.MatchString(input) && input == strings.ToUpper(input)\n}\n\nfunc Questioning(input string) bool {\n\treturn input[len(input)-1] == '?'\n}\n\nfunc Hey(input string) string {\n\tswitch {\n\tcase Silent(input):\n\t\treturn "Fine. Be that way!"\n\tcase Shouting(input):\n\t\treturn "Woah, chill out!"\n\tcase Questioning(input):\n\t\treturn "Sure."\n\t}\n\treturn "Whatever."\n}	2014-04-20 09:13:15	\N	0	1	2014-04-12 18:02:44	2014-04-12 18:02:44	33	bob.go
69	28	051d14af5fcae9b582fa9105	superseded	ruby	beer-song	class BeerSong\n  def sing\n    verses(99, 0)\n  end\n\n  def verses(upper_bound, lower_bound)\n    upper_bound.downto(lower_bound).map {|i| verse(i)}.join("\\n") << "\\n"\n  end\n\n  def verse(i)\n    beer_count = BeerCount.new(i)\n    "#{beer_count} of beer on the wall, ".capitalize +\n    "#{beer_count} of beer.\\n" +\n    "#{beer_count.action}, " +\n    "#{beer_count.next} of beer on the wall.\\n"\n  end\nend\n\nclass BeerCount\n  attr_reader :i\n\n  def initialize(i)\n    @i = i\n  end\n\n  def to_s\n    "#{name} #{container}"\n  end\n\n  def action\n    i == 0 ? buy_more : drink\n  end\n\n  def next\n    self.class.new((i - 1) % 100)\n  end\n\n  private\n\n  def name\n    i == 0 ? 'no more' : i.to_s\n  end\n\n  def container\n    i == 1 ? 'bottle' : 'bottles'\n  end\n\n  def buy_more\n    "Go to the store and buy some more"\n  end\n\n  def drink\n    "Take #{pronoun} down and pass it around"\n  end\n\n  def pronoun\n    i == 1 ? 'it' : 'one'\n  end\nend	\N	\N	0	7	2014-07-25 12:37:58	2014-07-25 12:37:58	26	beer-song.rb
70	30	dfb0e30465143aa6b96f467f	done	clojure	scrabble-score	(ns scrabble\n  (:require [clojure.string :as str]))\n\n(def score-character\n  { \\a 1,  \\e 1, \\i 1, \\o 1, \\u 1, \\l 1,\n    \\n 1,  \\r 1, \\s 1, \\t 1,\n    \\d 2,  \\g 2,\n    \\b 3,  \\c 3, \\m 3, \\p 3,\n    \\f 4,  \\h 4, \\v 4, \\w 4, \\y 4,\n    \\k 5,\n    \\j 8,  \\x 8,\n    \\q 10, \\z 10 })\n\n(defn score-all\n  [word]\n  (->> word\n       str/lower-case\n       (map score-character)))\n\n(defn score-letter\n  [letter]\n  (first (score-all letter)))\n\n(defn score-word\n  [word]\n  (reduce + (score-all word)))	2014-04-29 22:18:30	\N	0	1	2014-04-25 02:15:32	2014-04-25 02:15:32	27	scrabble.clj
71	30	65505f1b5fb2026c3c6ae4ee	done	clojure	allergies	(ns allergies)\n\n;;; Ruby's word array\n(defmacro %w [& args] `(map str '~args))\n\n(def allergies (%w eggs peanuts shellfish strawberries\n                 tomatoes chocolate pollen cats))\n\n(defn list\n  "list of allergies for the given score"\n  [score]\n  (loop [s score                        ; remaining score\n         n (dec (count allergies))      ; potential allergy, position\n         acc []]\n    (if (or (zero? s) (neg? n)) (distinct acc)\n        (let [allergy-score (Math/pow 2 n)\n              allergy (nth allergies n)]\n          (if (>= s allergy-score)\n            (recur (- s allergy-score) n (cons allergy acc))\n            (recur s (dec n) acc))))))\n\n(defn allergic_to?\n  "returns whether the given score includes the allergy"\n  [score allergy]\n  (contains? (set (list score)) allergy))	2014-06-11 17:30:06	\N	0	1	2014-05-31 13:00:40	2014-05-31 13:00:40	28	allergies.clj
72	30	e49b47b0e62780b08ab258b1	superseded	javascript	robot-name	'use strict';\n\nfunction Robot () {\n  this.reset();\n}  \n\nRobot.prototype.reset = function() {\n  this.name = randomLetter() + randomLetter() +\n              randomInteger() + randomInteger() + randomInteger();\n}\n\nmodule.exports = Robot;\n\nvar chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\nfunction randomLetter() {\n  return chars[Math.floor(Math.random() * chars.length)];\n}\n\nfunction randomInteger() {\n  return Math.random().toString().slice(-1);\n}	\N	\N	0	1	2014-06-04 15:35:11	2014-06-04 15:35:11	29	robot-name.js
73	30	6409acb5f43897e67522adb4	done	javascript	robot-name	'use strict';\n\nfunction Robot() {\n  this.reset();\n}  \n\nRobot.prototype.reset = function() {\n  this.name = this.generateName();\n}\n\nRobot.prototype.generateName = function() {\n  return get(2, randomLetter) + get(3, randomDigit);\n}\n\nmodule.exports = Robot;\n\nvar chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\nfunction randomLetter() {\n  return chars[Math.floor(Math.random() * chars.length)];\n}\n\nfunction randomDigit() {\n  return Math.random().toString().slice(-1);\n}\n\nfunction get(count, valueFn) {\n  var result = "";\n\n  for (var i = count; i > 0; i--) {\n  \tresult += valueFn();\n  }\n\n  return result;\n}	2014-07-06 16:38:44	\N	0	2	2014-07-06 09:13:56	2014-07-06 09:13:56	29	robot-name.js
74	30	37df099458fb4568efbe86ef	superseded	haskell	grains	module Grains (square, total) where\n\nsquare :: Double -> Double\nsquare n = 2 ** (n - 1)\n\ntotal :: Double\ntotal = foldl (+) 0 $ map square [0..64]	\N	\N	0	1	2014-04-02 00:06:22	2014-04-02 00:06:22	30	grains.hs
75	30	5fd6e6e8db9e1ae47cd0a511	pending	haskell	grains	module Grains (square, total) where\n\nsquare :: Double -> Double\nsquare n = 2 ** (n - 1)\n\ntotal :: Double\ntotal = square 65 - 1	\N	\N	0	2	2014-06-11 16:09:38	2014-06-11 16:09:38	30	grains.hs
76	30	7694e302f4bbd79a2c8245e8	done	ruby	allergies	class Allergies\n  attr_reader :score\n\n  def initialize(score)\n    @score = score\n  end\n\n  def allergies_scores\n    {\n      eggs: 1,\n      peanuts: 2,\n      shellfish: 4,\n      strawberries: 8,\n      tomatoes: 16,\n      chocolate: 32,\n      pollen: 64,\n      cats: 128\n    }\n  end\n\n  def allergies_types\n    @allergies_types ||= allergies_scores.keys.map(&:to_s)\n  end\n\n  def allergic_to?(ingredient)\n    list.include?(ingredient)\n  end\n\n  def binary_score\n    score.to_s(2).chars.map(&:to_i).reverse\n  end\n\n  def list\n    Array.new.tap do |result|\n      binary_score.each_with_index do |value, index|\n        allergy = allergies_types[index]\n\n        if value == 1 && allergy\n          result << allergy\n        end\n      end\n    end\n  end\n\nend	2014-05-25 02:23:28	\N	0	1	2014-05-19 09:04:50	2014-05-19 09:04:50	31	allergies.rb
77	30	c595b4cf4f14ae8e703111fe	pending	python	bob	WHATEVER = "Whatever."\nFINE = "Fine. Be that way."\nCHILLOUT = "Woah, chill out!"\nSURE = "Sure."\n\nclass Bob:\n    def hey(self, speech):\n        answer = WHATEVER\n        if speech is None:\n            answer = FINE\n        speech = speech.strip()\n        if len(speech) == 0:\n            answer = FINE\n        if speech.isupper():\n            answer = CHILLOUT\n        lastchar = speech[-1]\n        if lastchar == "?":\n            answer = SURE\n        return answer	\N	\N	0	2	2014-04-01 07:24:38	2014-04-01 07:24:38	32	bob.py
78	30	9cd25d0866483734e3acc03b	superseded	python	bob	WHATEVER = "Whatever."\nFINE = "Fine. Be that way."\nCHILLOUT = "Woah, chill out!"\nSURE = "Sure."\n\nclass Bob:\n    def is_yell(self, sentence):\n        letters = 0\n        caps = 0\n        for char in sentence:\n            charc = ord(char)\n            if charc >= 64 and charc <= 90:\n                letters += 1\n                caps += 1\n                continue\n            if charc >= 97 and charc <= 122:\n                letters += 1\n                continue\n        if letters == 0:\n            return False\n        if caps/letters >= 0.8:\n            return True\n        return False\n    \n    def hey(self, sentence):\n        if sentence is None:\n            return FINE\n        sentence = sentence.strip()\n        if len(sentence) == 0:\n            return FINE\n        if self.is_yell(sentence):\n            return CHILLOUT\n        lastchar = sentence[-1]\n        if lastchar == "?":\n            return SURE\n        return WHATEVER	\N	\N	0	1	2014-05-26 11:29:19	2014-05-26 11:29:19	32	bob.py
148	32	9be3b2676fcebd8a125e9c6a	superseded	ruby	leap	class Year\n  def self.leap? year\n    (year % 4 == 0 && year % 100 != 0) || (year % 100 == 0 && year % 400 == 0)\n  end\nend	\N	\N	0	1	2014-07-21 05:52:37	2014-07-21 05:52:37	69	year.rb
80	30	7c6e9a6e9e5ee52e93b46cf7	done	ruby	space-age	class SpaceAge\n  attr_accessor :seconds\n\n  def initialize seconds\n    self.seconds = seconds\n  end\n\n  def on_earth\n    orbital_years 1\n  end\n\n  def on_mercury\n    orbital_years 0.2408467\n  end\n\n  def on_venus\n    orbital_years 0.61519726\n  end\n\n  def on_mars\n    orbital_years 1.8808158\n  end\n\n  def on_jupiter\n    orbital_years 11.862615\n  end\n\n  def on_saturn\n    orbital_years 29.447498\n  end\n\n  def on_uranus\n    orbital_years 84.016846\n  end\n\n  def on_neptune\n    orbital_years 164.79132\n  end\n\n  private\n    def earth_year_in_seconds\n      31557600.0\n    end\n\n    def orbital_years percentage_of_earth_orbit\n      (seconds / (earth_year_in_seconds * percentage_of_earth_orbit)).round 2\n    end\nend	2014-04-07 04:34:11	\N	0	1	2014-03-29 17:08:27	2014-03-29 17:08:27	34	space_age.rb
81	30	c783210e3fcdaae9a3f784af	superseded	clojure	space-age	(ns space-age)\n\n(def ^:const earth-orbital-period-in-seconds 31557600.0)\n\n(def ^:const orbital-periods-relative-to-earth {\n  "mercury" 0.2408467\n  "venus"   0.61519726\n  "mars"    1.8808158\n  "jupiter" 11.862615\n  "saturn"  29.447498\n  "uranus"  84.016846\n  "neptune" 164.79132\n})\n\n(defn on-earth [age-in-seconds] (/ age-in-seconds earth-orbital-period-in-seconds))\n\n(defn- age-on-planet-converter [planet]\n  (fn [age-in-seconds] (/ (on-earth age-in-seconds) (orbital-periods-relative-to-earth planet))))\n\n(defn- define-on-planet-functions []\n  (doseq\n    [[planet ratio] orbital-periods-relative-to-earth]\n    (intern\n      *ns*\n      (symbol (str "on-" planet))\n      (age-on-planet-converter planet)\n    )))\n\n(define-on-planet-functions)	\N	\N	0	1	2014-04-01 00:19:59	2014-04-01 00:19:59	35	space_age.clj
82	30	52505e7e775ad4c41ee1febf	done	clojure	space-age	(ns space-age)\n\n(def ^:const earth-orbital-period-in-seconds 31557600.0)\n\n(def ^:const orbital-periods-relative-to-earth {\n  "earth"   1\n  "mercury" 0.2408467\n  "venus"   0.61519726\n  "mars"    1.8808158\n  "jupiter" 11.862615\n  "saturn"  29.447498\n  "uranus"  84.016846\n  "neptune" 164.79132\n})\n\n(defn- age-on-planet-converter [planet]\n (fn [age-in-seconds]\n    (let [age-on-earth (/ age-in-seconds earth-orbital-period-in-seconds)]\n      (/ age-on-earth (orbital-periods-relative-to-earth planet)))))\n\n(defn- define-on-planet-functions []\n  (doseq\n    [[planet ratio] orbital-periods-relative-to-earth]\n    (intern\n      *ns*\n      (symbol (str "on-" planet))\n      (age-on-planet-converter planet)\n    )))\n\n(define-on-planet-functions)	2014-04-20 09:23:41	\N	0	2	2014-04-19 20:00:41	2014-04-19 20:00:41	35	space_age.clj
83	30	87d12af16d71f5365dab2371	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :as str]))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  (cond\n   (str/blank? x) "Fine. Be that way!"\n   (and (every? #(Character/isUpperCase %)\n                (filter #(Character/isAlphabetic (int  %)) x))\n        (not (empty? (filter #(Character/isAlphabetic (int  %)) x))))\n   "Woah, chill out!"\n   (re-find #"\\?$" x) "Sure."\n   :else "Whatever."))	\N	\N	0	1	2014-04-01 02:09:08	2014-04-01 02:09:08	36	bob.clj
84	30	7ce74dfc0c94fa819b2c939b	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :as str]))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  {:pre [(string? x)]}\n  (let [alphax (filter #(Character/isAlphabetic (int  %)) x)]\n   (cond\n    (str/blank? x) "Fine. Be that way!"\n    (and (every? #(Character/isUpperCase %) alphax)\n         (not (empty? alphax)))\n    "Woah, chill out!"\n    (= \\? (last x)) "Sure."\n    :else "Whatever.")))	\N	\N	0	4	2014-04-26 01:24:23	2014-04-26 01:24:23	36	bob.clj
85	30	6cd8ab07815c8dee1a693017	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :as str]))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  (let [alphax (filter #(Character/isAlphabetic (int  %)) x)]\n   (cond\n    (str/blank? x) "Fine. Be that way!"\n    (and (every? #(Character/isUpperCase %) alphax)\n         (not (empty? alphax)))\n    "Woah, chill out!"\n    (re-find #"\\?$" x) "Sure."\n    :else "Whatever.")))	\N	\N	0	2	2014-05-11 07:03:27	2014-05-11 07:03:27	36	bob.clj
86	30	31482914c94cc85458f22a16	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :as str]))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  {:pre [(string? x)]}\n  (let [alphax (filter #(Character/isAlphabetic (int  %)) x)]\n   (cond\n    (str/blank? x) "Fine. Be that way!"\n    (and (every? #(Character/isUpperCase %) alphax)\n         (not (empty? alphax)))\n    "Woah, chill out!"\n    (re-find #"\\?$" x) "Sure."\n    :else "Whatever.")))	\N	\N	0	3	2014-05-18 05:56:08	2014-05-18 05:56:08	36	bob.clj
87	30	06f8647247ce9575145f2d05	pending	clojure	bob	(ns bob\n  (:require [clojure.string :refer [blank?]]))\n\n(defn- shouting?\n  "Return true if all alphabetical characters are upper-case"\n  [phrase]\n  (let [alphachars (filter #(Character/isAlphabetic (int  %)) phrase)]\n    (and (every? #(Character/isUpperCase %) alphachars)\n         (not (empty? alphachars)))))\n\n(defn response-for\n  "Return conversational answers to statements based on something a\n  laxadaisical teenager might say"\n  [x]\n  {:pre [(string? x)]}\n  (cond\n   (blank? x)      "Fine. Be that way!"\n   (shouting? x)   "Woah, chill out!"\n   (= \\? (last x)) "Sure."\n   :else "Whatever."))	\N	\N	0	7	2014-06-18 20:50:45	2014-06-18 20:50:45	36	bob.clj
88	30	80eec187812349c76ffa4f59	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :refer [blank?]]))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  {:pre [(string? x)]}\n  (let [alphax (filter #(Character/isAlphabetic (int  %)) x)]\n   (cond\n    (blank? x) "Fine. Be that way!"\n    (and (every? #(Character/isUpperCase %) alphax)\n         (not (empty? alphax)))\n    "Woah, chill out!"\n    (= \\? (last x)) "Sure."\n    :else "Whatever.")))	\N	\N	0	5	2014-07-06 04:52:45	2014-07-06 04:52:45	36	bob.clj
89	30	9f87041a41a49dd46285cf78	superseded	clojure	bob	(ns bob\n  (:require [clojure.string :refer [blank?]]))\n\n(defn- shouting?\n  "Return true if all alphabetical characters are upper-case"\n  [phrase]\n  (let [alphachars (filter #(Character/isAlphabetic (int  %)) phrase)]\n    (and (every? #(Character/isUpperCase %) alphachars)\n         (not (empty? alphachars)))))\n\n(defn response-for\n  "Provide conversational answers to statements"\n  [x]\n  {:pre [(string? x)]}\n  (cond\n   (blank? x)      "Fine. Be that way!"\n   (shouting? x)   "Woah, chill out!"\n   (= \\? (last x)) "Sure."\n   :else "Whatever."))	\N	\N	0	6	2014-07-12 14:20:58	2014-07-12 14:20:58	36	bob.clj
90	30	47fbf4c1acaac5abf1c5e667	pending	ruby	gigasecond	class Gigasecond\n  attr_reader :starting_date\n\n  def initialize(starting_date)\n    @starting_date = starting_date\n  end\n\n  def date\n    starting_date + 11_574 # Days per gigasecond\n  end\nend	\N	\N	0	1	2014-04-23 18:10:30	2014-04-23 18:10:30	37	gigasecond.rb
408	16	f9b6d57e322ee2267b70dcfe	pending	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    words.each_with_object(Hash.new(0)) do |w, h|\n      h[w] += 1\n    end\n  end\n\n  private\n\n  def words\n    @phrase.downcase.scan(/\\w+/)\n  end\nend	\N	\N	0	7	2014-07-21 07:40:59	2014-07-21 07:40:59	197	word-count.rb
409	16	3d55799fe613865388569566	superseded	haskell	binary	module Binary (toDecimal) where\n\ntoDecimal :: String -> Int\ntoDecimal b\n  | all (`elem` "10") b = sum . map (\\(x, y) -> if x == '1' then 2^y else 0) $ zip (reverse b) [0..]\n  | otherwise = 0	\N	\N	0	1	2014-07-13 18:54:21	2014-07-13 18:54:21	198	binary.hs
91	30	ba9de552c984722f2e66eb16	done	go	scrabble-score	package scrabble_score\n\nimport "unicode"\n\nvar scores = map[rune]int{\n  'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'R': 1, 'S': 1, 'T': 1,\n  'D': 2, 'G': 2,\n  'B': 3, 'C': 3, 'M': 3, 'P': 3,\n  'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4,\n  'K': 5,\n  'J': 8, 'X': 8,\n  'Q': 10, 'Z': 10,\n}\n\nfunc Score(word string) (res int) {\n  for _, c := range word {\n    res += scores[unicode.ToUpper(c)]\n  }\n  return\n}	2014-04-20 18:00:31	\N	0	1	2014-04-14 22:56:14	2014-04-14 22:56:14	38	scrabble_score.go
92	30	2638f78df9abf1abd9caeee0	pending	haskell	nucleotide-count	module DNA where\n\nimport qualified Data.Map as M\n\ncount :: Char -> String -> Int\ncount k dna | k `elem` "ACGTU" = M.findWithDefault 0 k (nucleotideCounts dna)\n            | otherwise        = error ("invalid nucleotide '"++[k]++"'")\n\nnucleotideCounts :: String -> M.Map Char Int\nnucleotideCounts = addDefs . M.fromListWith (+) . (`zip`(repeat 1))\n    where addDefs = M.unionWith (+) emptyMap\n          emptyMap = M.fromList $ zip "ACGT" $ repeat 0	\N	\N	0	1	2014-05-11 08:53:35	2014-05-11 08:53:35	39	DNA.hs
93	30	b308aa70511e54d7fbde3e53	superseded	clojure	queen-attack	(require '[clojure.string :as str])\n\n(def pieces {:b \\B, :w \\W})\n\n(defn- index-for\n  "Return the array index for a given row column."\n  ([[row col]]\n     (index-for row col))\n  ([row col]\n     (+ col (* 8 row))))\n\n(defn- set-pos\n  [array piece positions]\n  (let [pos (piece positions)]\n    (if pos\n      (assoc array (index-for pos) (piece pieces))\n      array)))\n\n(defn- board-array\n  "Create an empty board representation."\n  []\n  (vec (take 64 (cycle "O"))))\n\n(defn- group-into-rows\n  "Group the board into rows for display."\n  [board]\n  (loop [result []  board board]\n    (if (empty? board) result\n        (recur (conj result (take 8 board))\n               (drop 8 board)))))\n\n(defn- format-board\n  "Format the board for display."\n  [board]\n  (apply str\n         (map (fn [row] (str (str/join " " row) "\\n"))\n              (group-into-rows board))))\n\n(defn board-string\n  "Return a display string for a board."\n  [positions]\n  (-> (board-array)\n      (set-pos :b positions)\n      (set-pos :w positions)\n      format-board))\n\n(defn- out-of-bounds?\n  "Is the row/col off the board?"\n  ([[row col]]\n     (out-of-bounds? row col))\n  ([row col]\n      (or (< row 0)\n          (< col 0)\n          (>= row 8)\n          (>= col 8))))\n\n(def in-bounds?\n  (complement out-of-bounds?))\n\n(defn- next-pos\n  [[[row col] [delta-row delta-col :as direction]]]\n  (vector [(+ row delta-row) (+ col delta-col)]\n          direction))\n\n(defn- radiate-positions\n  "Same as radiate, but returning row/col instead of index positions."\n  [starting-pos direction]\n  (take-while in-bounds?\n              (map first\n                   (iterate next-pos [starting-pos direction]))))\n\n(defn- radiate\n  "Generate index positions from a given staring position and direction."\n  [starting-pos direction]\n  (map index-for (radiate-positions starting-pos direction)))\n\n(def all-directions\n  "List of all possible directions (as delta row/col)."\n  (filter #(not= % [0 0])\n          (for [r [-1 0 1]\n                c [-1 0 1]]\n            (vector r c))))\n\n(defn- radiator\n  "Return a radiator function for a starting position."\n  [starting-pos]\n  (fn [direction] (radiate starting-pos direction)))\n\n(defn- attack-squares\n  "Generate a list of all the attackable squares from a row/col."\n  [[row col]]\n  (reduce (fn [acc nums] (into acc nums))\n          #{}\n          (map (radiator [row col])\n               all-directions)))\n\n(defn can-attack\n  "Can the queens attack each other from their positions."\n  [positions]\n  (let [b-squares (attack-squares (:b positions))]\n    (not (nil? (b-squares (index-for (:w positions)))))))	\N	\N	0	1	2014-03-28 00:05:34	2014-03-28 00:05:34	40	queens.clj
94	30	1d8dab8f37f760377cbd8b65	superseded	clojure	queen-attack	(require '[clojure.string :as str])\n\n(def pieces {:b \\B, :w \\W})\n\n(defn- index-for\n  "Return the array index for a given row column."\n  ([[row col]]\n     (index-for row col))\n  ([row col]\n     (+ col (* 8 row))))\n\n(defn- set-pos\n  [array piece positions]\n  (let [pos (piece positions)]\n    (if pos\n      (assoc array (index-for pos) (piece pieces))\n      array)))\n\n(defn- board-array\n  "Create an empty board representation."\n  []\n  (vec (take 64 (cycle "O"))))\n\n(defn- group-into-rows\n  "Group the board into rows for display."\n  [board]\n  (loop [result []  board board]\n    (if (empty? board) result\n        (recur (conj result (take 8 board))\n               (drop 8 board)))))\n\n(defn- format-board\n  "Format the board for display."\n  [board]\n  (->> board\n       group-into-rows\n       (map (fn [row] (str (str/join " " row) "\\n")))\n       (apply str)))\n\n(defn board-string\n  "Return a display string for a board."\n  [positions]\n  (-> (board-array)\n      (set-pos :b positions)\n      (set-pos :w positions)\n      format-board))\n\n(defn- out-of-bounds?\n  "Is the row/col off the board?"\n  ([[row col]]\n     (out-of-bounds? row col))\n  ([row col]\n      (or (< row 0)\n          (< col 0)\n          (>= row 8)\n          (>= col 8))))\n\n(def in-bounds?\n  (complement out-of-bounds?))\n\n(defn- next-pos\n  "Generate the next position in the chosen direction."\n  [[[row col] [delta-row delta-col :as direction]]]\n  (vector [(+ row delta-row) (+ col delta-col)]\n          direction))\n\n(defn- radiate-positions\n  "Same as radiate, but returning row/col instead of index positions."\n  [starting-pos direction]\n  (->> [starting-pos direction]\n       (iterate next-pos)\n       (map first)\n       (take-while in-bounds?)))\n\n(defn- radiate\n  "Generate index positions from a given staring position and direction."\n  [starting-pos direction]\n  (map index-for (radiate-positions starting-pos direction)))\n\n(def all-directions\n  "List of all possible directions (as delta row/col)."\n  (filter #(not= % [0 0])\n          (for [r [-1 0 1]\n                c [-1 0 1]]\n            (vector r c))))\n\n(defn- radiator\n  "Return a radiator function for a starting position."\n  [starting-pos]\n  (fn [direction] (radiate starting-pos direction)))\n\n(defn- attack-squares\n  "Generate a list of all the attackable squares from a row/col."\n  [starting-pos]\n  (->> all-directions\n       (map (radiator starting-pos))\n       (reduce (fn [acc nums] (into acc nums)) #{})))\n\n(defn can-attack\n  "Can the queens attack each other from their positions."\n  [positions]\n  (let [b-squares (attack-squares (:b positions))]\n    (not (nil? (b-squares (index-for (:w positions)))))))	\N	\N	0	2	2014-04-02 07:12:17	2014-04-02 07:12:17	40	queens.clj
95	30	cef149068d2a71f419a51c69	pending	clojure	queen-attack	(require '[clojure.string :as str])\n\n(def new-board\n  [[\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]\n   [\\O \\O \\O \\O \\O \\O \\O \\O]])\n\n(defn set-pos\n  [board pos v]\n  (if pos\n    (update-in board pos (fn [x] v))\n    board))\n\n(defn make-board\n  [positions]\n  (-> new-board\n      (set-pos (:b positions) \\B)\n      (set-pos (:w positions) \\W)))\n\n(defn board-string\n  [positions]\n  (->> positions\n       make-board\n       (map #(str/join " " %))\n       (map #(format "%s\\n" %))\n       (apply str)))\n\n(defn abs\n  [n]\n  (if (< n 0) (- n) n))\n\n(defn can-attack\n  [positions]\n  (let [[wx wy] (:w positions)\n        [bx by] (:b positions)]\n    (or (= bx wx)\n        (= by wy)\n        (= (abs (- bx wx))\n           (abs (- by wy))))))	\N	\N	0	3	2014-04-26 20:05:46	2014-04-26 20:05:46	40	queens.clj
96	30	9f6931f863b35b61f02997b7	done	ruby	leap	class Year\n\n  def initialize(year)\n    @year = year\n  end\n\n  def leap?\n    @year%400 == 0 || @year%4 == 0 && @year%100 != 0\n  end\n\nend	2014-03-29 10:34:20	\N	0	1	2014-03-19 03:34:41	2014-03-19 03:34:41	41	leap.rb
97	30	76b3dbfa6884ec52ea3b687c	pending	javascript	say	var baseNumbers = {\n  0 : 'zero',\n  1 : 'one',\n  2 : 'two',\n  3 : 'three',\n  4 : 'four',\n  5 : 'five',\n  6 : 'six',\n  7 : 'seven',\n  8 : 'eight',\n  9 : 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen',\n  17: 'seventeen',\n  18: 'eighteen',\n  19: 'nineteen'\n};\n\nvar tens = {\n  20: 'twenty',\n  30: 'thirty',\n  40: 'forty',\n  50: 'fifty',\n  60: 'sixty',\n  70: 'seventy',\n  80: 'eighty',\n  90: 'ninety'\n};\n\nvar bigNumbers = {\n\t1000: 'thousand',\n\t1000000: 'million',\n\t1000000000: 'billion'\n};\n\nvar bigPart = function (number) {\n  var factor, result = '';\n  for (var bigNumber = 1000000000; bigNumber >= 1000; bigNumber /= 1000) {\n    if (number.number >= bigNumber) {\n      factor = Math.floor(number.number/bigNumber);\n      result += threeDigits(factor) + ' ' + bigNumbers[bigNumber] + ' ';\n      number.number = number.number-(factor*bigNumber);\n    }\n  }\n  return result;\n};\n\nvar handleTens = function (n) {\n  for (var decade = 90; decade >= 20; decade -= 10) {\n    if (n >= decade) {\n      return tens[decade] + '-' + baseNumbers[n-decade];\n    }\n  }\n};\n\nvar twoDigits = function(n) {\n  var result;\n  if (n < 20) {\n    result = baseNumbers[n];\n  } else {\n    result = handleTens(n);\n  }\n  return result;\n};\n\nvar threeDigits = function (n) {\n  if (n < 100) {\n    return twoDigits(n);\n  } else {\n    return baseNumbers[Math.floor(n/100)] + ' hundred ' + twoDigits(n%100);\n  }\n};\n\nvar say = function () {};\n\nsay.inEnglish = function (n) {\n  var result, number = {number: n};\n  if (0 <= n && n < 1000000000000) {\n    result = bigPart(number);\n    result += threeDigits(number.number);\n    return result.replace(/.zero/, '');\n  } else {\n    throw new Error('Number must be between 0 and 999,999,999,999.');\n  }\n};	\N	\N	0	1	2014-05-11 09:17:36	2014-05-11 09:17:36	42	say.js
98	30	cfd61a28bfaed2b7a9afdb47	pending	haskell	bob	module Bob (responseFor) where\nimport Data.Char\n\nresponseFor :: String -> String\nresponseFor text\n  | silence text = "Fine. Be that way!"\n  | yelling text = "Woah, chill out!"\n  | question text = "Sure."\n  | otherwise = "Whatever."\n\nsilence :: String -> Bool\nsilence = all isSpace\n\nquestion :: String -> Bool\nquestion text = last text == '?'\n\nyelling :: String -> Bool\nyelling text = upperCase text && anyAlphas text\n\nupperCase :: String -> Bool\nupperCase = all isUpper . filter isAlpha\n\nanyAlphas :: String -> Bool\nanyAlphas = any isAlpha	\N	\N	0	1	2014-04-18 02:29:17	2014-04-18 02:29:17	43	bob.hs
99	30	a33fecd8c273ebdb00ea84d3	done	coffeescript	anagram	class Anagram\n\n  constructor: (@letters) ->\n    @letters = letters.toLowerCase()\n    @sorted = sort @letters\n\n  match: (words) ->\n    words\n      .map((word) -> word.toLowerCase())\n      .filter (word) => \n        word.length is @letters.length    and \\\n        word != @letters                  and \\\n        sort(word) is @sorted\n\n  sort = (x) -> x.split('').sort().join('')\n\n\nmodule.exports = Anagram	2014-04-22 23:08:36	\N	0	1	2014-04-20 09:18:31	2014-04-20 09:18:31	44	anagram.coffee
100	30	69b8c8681761cc12255c5d68	superseded	ruby	bob	class Bob\n  \n  def initialize\n  end\n  \n  def hey(message)\n    if message == message.upcase && message != message.downcase\n      'Woah, chill out!'\n    elsif message.end_with?("?")\n      'Sure.'\n    elsif message.strip == ''\n      "Fine. Be that way!"\n    else\n    'Whatever.'\n    end\n  end\n  \nend	\N	\N	0	1	2014-03-11 18:47:56	2014-03-11 18:47:56	45	bob.rb
101	30	9d588161bca9c4ab95bae214	superseded	ruby	bob	class Bob\n  \n  def hey(message)\n    if message == message.upcase && message != message.downcase\n      'Woah, chill out!'\n    elsif message.end_with?("?")\n      'Sure.'\n    elsif message.strip == ''\n      "Fine. Be that way!"\n    else\n    'Whatever.'\n    end\n  end\n  \nend	\N	\N	0	2	2014-03-23 18:10:35	2014-03-23 18:10:35	45	bob.rb
102	30	ccc1721b09263e90988e9c20	done	ruby	bob	class Bob\n  \n  def hey(message)\n    if yelling?(message)\n      'Woah, chill out!'\n    elsif question?(message)\n      'Sure.'\n    elsif silent_treatment?(message)\n      "Fine. Be that way!"\n    else \n    'Whatever.'\n    end\n  end\n  \n  def yelling?(message)\n    message == message.upcase && message != message.downcase\n  end\n  \n  def question?(message)\n    message.end_with?("?")\n  end\n  \n  def silent_treatment?(message)\n    message.strip == ''\n  end\n  \nend	2014-04-17 22:34:16	\N	0	3	2014-04-11 18:14:42	2014-04-11 18:14:42	45	bob.rb
103	30	77110fed692e455e1bc1748e	pending	ruby	linked-list	class Deque\n  attr_accessor :head\n\n  def push(datum)\n    if head.nil?\n      @head = Element.new(datum, nil, nil)\n    else\n      fast_forward\n      before = head\n      @head = Element.new(datum, before, nil)\n      @head.before.after = head\n    end\n  end\n\n  def pop\n    fast_forward\n    datum = head.datum\n\n    if head.after == head && head.before == head\n      @head = nil\n    else\n      @head = head.before\n      @head.before.after = head\n    end\n\n    datum\n  end\n\n  def unshift(datum)\n    if head.nil?\n      @head = Element.new(datum, nil, nil)\n    else\n      rewind\n      after = head\n      @head = Element.new(datum, nil, after)\n      @head.after.before = head\n    end\n  end\n\n  def shift\n    rewind\n    datum = head.datum\n\n    if head.after == head && head.before == head\n      @head = nil\n    else\n      @head = head.after\n      @head.before = head\n      @head.after.before = head\n    end\n\n    datum\n  end\n\n  private\n\n  def rewind\n    if head.before != head\n      @head = head.before\n      rewind\n    end\n  end\n\n  def fast_forward\n    if head.after != head\n      @head = head.after\n      fast_forward\n    end\n  end\n\nend\n\n\nclass Element\n  attr_accessor :datum, :before, :after\n\n  def initialize(datum, before, after)\n    @datum = datum\n    @before = before || self\n    @after = after || self\n  end\n\nend	\N	\N	0	1	2014-05-18 18:13:51	2014-05-18 18:13:51	46	linked_list.rb
104	30	a19637270c1f42628a5f38f9	pending	ruby	binary-search	class BinarySearch\n\n  attr_reader :list\n\n  def initialize(list)\n    @list = list\n    raise ArgumentError unless list_sorted?\n  end\n\n  def search_for(item)\n    lower_bound, upper_bound, found = 0, list.size.pred, nil\n    while !found && (lower_bound < upper_bound) do\n      pivot_index = (lower_bound + upper_bound) / 2\n      pivot = list[pivot_index]\n      if pivot == item\n        found = pivot_index\n      elsif pivot < item\n        lower_bound = pivot_index.succ\n      else\n        upper_bound = pivot_index.pred\n      end\n    end\n    found || (raise RuntimeError)\n  end\n\n  def middle\n    list.size / 2\n  end\n\n  private\n\n  def list_sorted?\n    list.each_cons(2).all? { |a, b| a <= b }\n  end\n\nend	\N	\N	0	1	2014-06-25 01:37:25	2014-06-25 01:37:25	47	binary.rb
105	30	ff0fb8a64015357209cc46b7	done	python	rna-transcription	class DNA():\n    \n    def __init__(self, dna):\n        self.dna = dna\n    \n    def to_rna(self):\n        rna = self.dna.replace("T", "U")\n        return rna	2014-07-15 15:14:12	\N	0	1	2014-07-07 19:44:14	2014-07-07 19:44:14	48	dna.py
106	30	59e8dbc97cd3cab3a8240699	pending	ruby	hamming	module Hamming\n    def self.compute(first, second)\n        count = 0\n        first.chars.each_with_index { |char, index|\n            # ignore extra characters if our string\n            # is longer than the second one.\n            next unless second[index]\n    \n            count += 1 if char != second[index]\n        }\n        return count\n    end\nend	\N	\N	0	1	2014-04-27 07:03:58	2014-04-27 07:03:58	49	hamming.rb
107	30	e2723ae41e0f6a3ab8947b14	superseded	ruby	anagram	class Anagram\n  def initialize(word)\n    @normalized_word = normalize word\n  end\n\n  def match(candidates)\n    candidates.select do |candidate|\n      fit?(candidate)\n    end\n  end\n\n  private\n  def normalize word\n    word.chars.sort\n  end\n\n  def fit?(candidate)\n    @normalized_word == normalize(candidate)\n  end\nend	\N	\N	0	3	2014-04-03 02:37:52	2014-04-03 02:37:52	50	anagram.rb
108	30	c66467591d2470e97c1e8792	superseded	ruby	anagram	class Anagram\n  def initialize(word)\n    @word = normalize word\n  end\n\n  def match(candidates)\n    candidates.select do |candidate|\n      candidate if fit?(candidate)\n    end\n  end\n\n  private\n  def normalize word\n    word.chars.sort.join\n  end\n\n  def fit?(candidate)\n    @word == normalize(candidate)\n  end\nend	\N	\N	0	1	2014-04-18 12:35:01	2014-04-18 12:35:01	50	anagram.rb
109	30	f1272a02952e43103bd7583f	superseded	ruby	anagram	class Anagram\n  def initialize(word)\n    @word = normalize word\n  end\n\n  def match(candidates)\n    candidates.select do |candidate|\n      candidate if fit?(candidate)\n    end\n  end\n\n  private\n  def normalize word\n    word.chars.sort\n  end\n\n  def fit?(candidate)\n    @word == normalize(candidate)\n  end\nend	\N	\N	0	2	2014-05-03 16:23:29	2014-05-03 16:23:29	50	anagram.rb
110	30	14111b0e3f14528f2cd47688	pending	ruby	anagram	class Anagram\n  def initialize word\n    @normalized_word = normalize word\n  end\n\n  def match candidates\n    candidates.select do |candidate|\n      fit?(candidate)\n    end\n  end\n\n  private\n  def normalize word\n    word.chars.sort\n  end\n\n  def fit? candidate\n    @normalized_word == normalize(candidate)\n  end\nend	\N	\N	0	4	2014-05-23 13:08:02	2014-05-23 13:08:02	50	anagram.rb
111	30	4ede05f2a674677536f20349	pending	ruby	difference-of-squares	class Squares\n  \n  def initialize(n)\n    @n = n\n  end\n  \n  def square_of_sums\n    (1..@n).reduce(:+)**2\n  end\n  \n  def sum_of_squares\n    (1..@n).reduce(0) {|sum,i| sum+i**2}   \n  end  \n\n  def difference\n    (sum_of_squares - square_of_sums).abs\n  end\n  \nend\n  	\N	\N	0	1	2014-05-10 14:26:52	2014-05-10 14:26:52	51	squares.rb
112	30	37ab8d411891b05167630d24	superseded	perl5	bob	package Bob;\n\nsub trim { my $s = shift; $s =~ s/^\\s+|\\s+$//g; return $s }\nsub any_alphabetic { my $s = shift; return $s =~ m/[a-z]/i }\n\nsub silence  { my $s = shift; return trim($s) eq '' }\nsub shouting { my $s = shift; return $s eq uc($s) && any_alphabetic($s) }\nsub question { my $s = shift; return $s =~ /\\?$/ }\n\nsub hey {\n\tmy ($input) = shift;\n\treturn 'Fine. Be that way!' if (silence($input));\n\treturn 'Woah, chill out!'   if (shouting($input));\n\treturn 'Sure.'              if (question($input));\n\treturn 'Whatever.'\n}\n\n1;	\N	\N	0	1	2014-03-03 06:59:13	2014-03-03 06:59:13	52	bob.pm
113	30	a1561849130a16e5e54ba39b	pending	perl5	bob	package Bob;\n\nsub trim { my $s = shift; $s =~ s/^\\s+|\\s+$//g; return $s }\n\nsub silence  { my $s = shift; return trim($s) eq '' }\nsub shouting { my $s = shift; return $s eq uc($s) && $s ne lc($s) }\nsub question { my $s = shift; return $s =~ /\\?$/ }\n\nsub hey {\n\tmy $input = shift;\n\treturn 'Fine. Be that way!' if (silence($input));\n\treturn 'Woah, chill out!'   if (shouting($input));\n\treturn 'Sure.'              if (question($input));\n\treturn 'Whatever.'\n}\n\n1;	\N	\N	0	2	2014-06-13 00:26:40	2014-06-13 00:26:40	52	bob.pm
114	30	9e7ea6fff39374d9f25e68fc	superseded	haskell	word-count	module WordCount (wordCount) where\n\nimport Data.List (groupBy, sort)\nimport Data.Char (isPunctuation, toLower, isSymbol)\nimport Control.Arrow ((&&&))\nimport Data.Map (fromList, Map)\n\nwordCount :: String -> Map String Int\nwordCount = fromList. map f. groupBy (==). sort. words. map toLower. replace (\\x -> isPunctuation x || isSymbol x) ' '\n  where f = head &&& length\n  \nreplace :: (a -> Bool) -> a -> [a] -> [a]\nreplace p a = map (\\x -> if p x then a else x)	\N	\N	0	1	2014-03-26 19:19:56	2014-03-26 19:19:56	53	word-count.hs
115	30	bd6f25b6122066cbcc472ad4	superseded	haskell	word-count	module WordCount (wordCount) where\n\nimport Data.List (groupBy, sort)\nimport Data.Char (isPunctuation, toLower, isSymbol)\nimport Control.Arrow ((&&&))\nimport Data.Map (fromList, Map)\n\nwordCount :: String -> Map String Int\nwordCount = fromList. map reduceToTuple. groupByWords. replaceByPredicate (\\x -> isPunctuation x || isSymbol x) ' '\n  where reduceToTuple = head &&& length\n        groupByWords  = groupBy (==). sort. words. map toLower\n  \nreplaceByPredicate :: (a -> Bool) -> a -> [a] -> [a]\nreplaceByPredicate p a = map (\\x -> if p x then a else x)	\N	\N	0	2	2014-03-29 21:42:09	2014-03-29 21:42:09	53	word-count.hs
116	30	cfffeb2106ac3386a0b50b32	superseded	haskell	word-count	module WordCount (wordCount) where\n\nimport Data.List.Split (wordsBy)\nimport Data.Char (isPunctuation, toLower, isSymbol, isSpace)\nimport Control.Arrow ((&&&))\nimport Data.Map (fromListWith, Map)\n\nwordCount :: String -> Map String Int\nwordCount = fromListWith (+) . map (\\x -> (map toLower x, 1)) . wordsBy (\\x -> isPunctuation x || isSymbol x || isSpace x)	\N	\N	0	3	2014-04-14 13:45:41	2014-04-14 13:45:41	53	word-count.hs
117	30	ec01778a15cfb795200baf22	pending	haskell	word-count	module WordCount (wordCount) where\n\nimport Data.List.Split (wordsBy)\nimport Data.Char (isAlphaNum, toLower)\nimport Data.Map.Strict (fromListWith, Map)\n\nwordCount :: String -> Map String Int\nwordCount = fromListWith (+) . map (\\x -> (map toLower x, 1)) . wordsBy (not . isAlphaNum)	\N	\N	0	4	2014-06-05 22:54:57	2014-06-05 22:54:57	53	word-count.hs
118	30	13779f9390bd4f6908138ceb	done	perl5	rna-transcription	package DNA;\n\nuse strict;\nuse warnings;\n\nsub to_rna { \n    my $dna = shift;\n    $dna =~ tr/T/U/;\n\n    return $dna;\n}\n1;	2014-03-09 10:33:01	\N	0	2	2014-03-03 20:09:33	2014-03-03 20:09:33	54	DNA.pm
119	30	b222772634142afd46a47312	superseded	perl5	rna-transcription	package DNA;\n\nuse strict;\nuse warnings;\n\nsub to_rna { \n    my $dna = shift;\n    $dna =~ s/T/U/g;\n\n    return $dna;\n}\n1;	\N	\N	0	1	2014-05-23 11:52:36	2014-05-23 11:52:36	54	DNA.pm
120	30	019e114188fdfae8dcc0fe13	done	haskell	meetup	module Meetup (Weekday(..), Schedule(..), meetupDay) where\r\n\r\nimport Data.Time.Calendar (fromGregorian, Day, addDays, gregorianMonthLength)\r\nimport Data.Time.Calendar.WeekDate (toWeekDate)\r\nimport Data.List\r\nimport Data.Maybe\r\n  \r\ndata Weekday  = Monday | Tuesday  | Wednesday | Thursday |\r\n                Friday | Saturday | Sunday\r\n              deriving (Enum, Show)\r\ndata Schedule = Teenth | First | Second | Third | Fourth | Last\r\n              deriving (Show)\r\ntype Month    = Int\r\ntype Year     = Integer\r\n\r\nmeetupDay :: Schedule -> Weekday -> Year -> Month -> Day\r\nmeetupDay s d y m = fromJust $ find (\\x -> dayOfWeek x == dow) (dlist s y m)\r\n  where\r\n    dow = fromEnum d + 1\r\n\r\n-- Get a week worth of days, depending on Schedule\r\ndlist :: Schedule -> Year -> Month -> [Day]\r\ndlist Teenth y m = l7 $ fromGregorian y m 13\r\ndlist First  y m = l7 $ fromGregorian y m 1\r\ndlist Second y m = l7 $ fromGregorian y m 8\r\ndlist Third  y m = l7 $ fromGregorian y m 15\r\ndlist Fourth y m = l7 $ fromGregorian y m 22\r\ndlist Last   y m = l7 $ addDays (-6)\r\n                   (fromGregorian y m (gregorianMonthLength y m))\r\n\r\nl7 :: Day -> [Day]\r\nl7 startDate = take 7 $ iterate (addDays 1) startDate\r\n\r\ndayOfWeek :: Day -> Int\r\ndayOfWeek = third . toWeekDate\r\n  where third (_,_,x) = x\r	2014-05-11 01:33:19	\N	0	1	2014-05-01 17:24:53	2014-05-01 17:24:53	55	Meetup.hs
121	30	b8d4436def1f86fd69401136	superseded	haskell	prime-factors	{-# OPTIONS_GHC -Wall -Werror #-}\nmodule PrimeFactors( primeFactors ) where\nimport Data.List( unfoldr )\n\nprimeFactors :: Integer -> [Integer]\nprimeFactors n | n <= 1 = []\n               | otherwise = concat $ unfoldr factorList (n, 2)\n    where\n      factorList (k, p) | k <= 1 || p <= 1 = Nothing\n                        | p * p > k = Just ([k], (1, p+1)) -- k is prime\n                        | otherwise = Just (ps, (k', p + 1))\n          where\n            ps = take (fromInteger m) (repeat p)\n            (m, k') = reduce 0 k\n            reduce acc j | j `mod` p /= 0 = (acc, j)\n                         | otherwise = reduce (acc + 1) (j `div` p)	\N	\N	0	1	2014-04-05 22:39:14	2014-04-05 22:39:14	56	PrimeFactors.hs
122	30	d4a16fbbe06843fac509e10f	superseded	haskell	prime-factors	{-# OPTIONS_GHC -Wall -Werror #-}\nmodule PrimeFactors( primeFactors ) where\nimport Data.List( unfoldr )\n\nprimeFactors :: Integer -> [Integer]\nprimeFactors n = concat $ unfoldr factorList (n, 2)\n    where\n      factorList (k, p) | k <= 1 || p <= 1 = Nothing\n                        | p * p > k = Just ([k], (1, p+1)) -- k is prime\n                        | otherwise = Just (ps, (k', p + 1))\n          where\n            ps = take (fromInteger m) (repeat p)\n            (m, k') = reduce 0 k\n            reduce acc j | j `mod` p /= 0 = (acc, j)\n                         | otherwise = reduce (acc + 1) (j `div` p)	\N	\N	0	2	2014-05-11 04:14:47	2014-05-11 04:14:47	56	PrimeFactors.hs
123	30	7101a86833c9e6c99c32d1ae	pending	haskell	prime-factors	{-# OPTIONS_GHC -Wall -Werror #-}\nmodule PrimeFactors( primeFactors, intSqrt ) where\nimport Data.List( unfoldr )\n\nprimeFactors :: Integer -> [Integer]\nprimeFactors n = concat $ unfoldr factorList (n, sieve)\n    where\n      sieve = 2:3:[b + o | b <- [0,6..], o <- [5, 7]]\n      factorList (_, []) = Nothing\n      factorList (k, p:qs) \n          | k <= 1 || p <= 1 = Nothing\n          | p * p > k = Just ([k], (1, qs)) -- k is prime\n          | otherwise = Just (ps, (k', qs))\n          where\n            ps = take (fromInteger m) (repeat p)\n            (m, k') = reduce 0 k\n            reduce acc j | j `mod` p /= 0 = (acc, j)\n                         | otherwise = reduce (acc + 1) (j `div` p)\n\n-- intSqrt here for posterity -- \n\nintSqrt :: Integer -> Integer\nintSqrt n \n    | n == 0 = 0\n    | n < 4 = 1\n    | otherwise = head $ dropWhile (not . conv) est\n    where\n      conv x = x * x <= n && (x + 1) * (x + 1) > n\n      est = iterate (newtonSqrt n) guess\n      newtonSqrt m g = (g + (m `div` g)) `div` 2\n      guess = head (dropWhile overestimate (iterate (`div` 2) n))\n      overestimate k = k * k > n	\N	\N	0	3	2014-07-05 00:18:16	2014-07-05 00:18:16	56	PrimeFactors.hs
366	22	bfd8649693785ea29c689651	pending	go	etl	package etl\n\nimport "strings"\n\ntype newFormat map[string]int\n\nfunc (f newFormat) set(letter string, score int) {\n\tf[strings.ToLower(letter)] = score\n}\n\nfunc Transform(oldFormat map[int][]string) newFormat {\n\tf := make(newFormat)\n\tfor score, letters := range oldFormat {\n\t\tfor _, letter := range letters {\n\t\t\tf.set(letter, score)\n\t\t}\n\t}\n\treturn f\n}	\N	\N	0	2	2014-05-21 11:32:48	2014-05-21 11:32:48	179	etl.go
124	30	940290cea798906f3ec4d8d3	done	perl5	triangle	package Triangle;\r\nuse strict;\r\nuse warnings FATAL => 'all';\r\nuse v5.10;\r\nuse List::Util qw|sum|;\r\nuse List::MoreUtils qw|any all|;\r\n\r\nsub kind { my (@sides) = @_;\r\n    die 'TriangleError'  if !can_exist(@sides);\r\n    return 'equilateral' if is_equilateral(@sides);\r\n    return 'isosceles'   if is_isosceles(@sides);\r\n    return 'scalene';\r\n}\r\n\r\nsub can_exist { my (@sides) = @_;\r\n    return 0 if have_illegal_sides(@sides);\r\n    return 0 if !obey_triangle_inequality(@sides);\r\n    return 1;\r\n}\r\n\r\nsub have_illegal_sides { my (@sides) = @_;\r\n    any { $_ <= 0 } @sides;\r\n}\r\n\r\nsub obey_triangle_inequality { my (@sides) = @_;\r\n    return 0 if sum(@sides[0, 1]) <= $sides[2];\r\n    return 0 if sum(@sides[1, 2]) <= $sides[0];\r\n    return 0 if sum(@sides[2, 0]) <= $sides[1];\r\n    return 1;\r\n}\r\n\r\nsub is_equilateral { my (@sides) = @_;\r\n    all { $_ == $sides[0] } @sides;\r\n}\r\n\r\nsub is_isosceles { my (@sides) = @_;\r\n    @sides = sort { $b <=> $a } @sides;\r\n    $sides[0] == $sides[1];\r\n}\r\n\r\n1;\r	2014-06-11 18:10:01	\N	0	1	2014-06-07 17:12:36	2014-06-07 17:12:36	57	Triangle.pm
125	30	81ddd4449d6ecbead2174fa5	done	python	allergies	class Allergies:\n    SCORES = {\n            128: 'cats',\n            64: 'pollen',\n            32: 'chocolate',\n            16: 'tomatoes',\n            8: 'strawberries',\n            4: 'shellfish',\n            2: 'peanuts',\n            1: 'eggs'\n    }\n\n    def __init__(self, score):\n        self.score = self._normalize_score(score)\n        self.list = self._determine_allergies()\n\n    def is_allergic_to(self, substance):\n        return substance in self.list\n\n\n\n    def _determine_allergies(self):\n        allergies = list()\n        remainder = self.score\n        for score, allergy in reversed(sorted(self.SCORES.items())):\n            if score <= remainder:\n                allergies.append(allergy)\n                remainder %= score\n        return list(reversed(allergies))\n\n    def _normalize_score(self, score):\n        while score > 255:\n            score -= 256\n        return score	2014-06-26 09:35:07	\N	0	1	2014-06-19 17:51:03	2014-06-19 17:51:03	58	allergies.py
126	30	ba15d5d5b48f8294d5ad0690	done	ruby	raindrops	class Raindrops\n  def self.convert(number)\n    str = ''\n    str += 'Pling' if number % 3 == 0\n    str += 'Plang' if number % 5 == 0\n    str += 'Plong' if number % 7 == 0\n    str = number.to_s if str.empty?\n    str\n  end\nend	2014-03-08 12:45:11	\N	0	1	2014-03-04 19:49:19	2014-03-04 19:49:19	59	raindrops.rb
127	30	dda5dbaae38fce37da9d19a4	done	haskell	anagram	module Anagram (anagramsFor) where\n\nimport Data.Char (toLower)\nimport Data.List (sort)\n\n-- get words -> map chars to lowercase -> sort alphabetically\n-- if the word is different than the words return false\n-- \nanagramsFor :: String -> [String] -> [String]\nanagramsFor word = filter isDifferent\n  where\n    sortedWord = sort $ map toLower word \n    isDifferent x = x /= word && sortedWord == zs\n      where ys = map toLower x\n            zs = sort ys	2014-06-15 06:04:31	\N	0	1	2014-06-11 00:52:23	2014-06-11 00:52:23	60	Anagram.hs
128	30	a47cf1688e292aadcdb221f4	pending	go	leap	package leap\n\nfunc IsLeapYear(year int) bool{\n\treturn (year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0))\n}	\N	\N	0	1	2014-05-20 11:48:36	2014-05-20 11:48:36	61	leap.go
129	30	0e060eafbd9665a1fbd6964d	superseded	haskell	allergies	module Allergies (Allergen(..), isAllergicTo, allergies) where\n\nimport Data.Bits\n\ndata Allergen = Eggs | Peanuts | Shellfish | Strawberries | Tomatoes | Chocolate | Pollen | Cats\n                deriving (Show, Eq, Ord, Enum)\n\nallergies :: Int -> [Allergen]\nallergies 0 = []\nallergies i = map toEnum $ filter bitLit [0..7]\n   where bitLit n = 2^n .&. i /= 0\n\nisAllergicTo :: Allergen -> Int -> Bool\nisAllergicTo a i = a `elem` allergies i	\N	\N	0	1	2014-03-17 03:23:07	2014-03-17 03:23:07	62	allergies.hs
130	30	00113d870e0fc07f1d0d4304	superseded	haskell	allergies	module Allergies (Allergen(..), isAllergicTo, allergies) where\n\nimport Data.Bits\n\ndata Allergen = Eggs | Peanuts | Shellfish | Strawberries | Tomatoes | Chocolate | Pollen | Cats\n                deriving (Show, Eq, Enum, Bounded)\n\nallergies :: Int -> [Allergen]\nallergies i = filter (flip isAllergicTo i) $ enumFrom (minBound :: Allergen)\n\nisAllergicTo :: Allergen -> Int -> Bool\nisAllergicTo a i = testBit i (fromEnum a)	\N	\N	0	2	2014-04-09 08:06:16	2014-04-09 08:06:16	62	allergies.hs
131	30	b68762af97f46955f1e0469f	done	haskell	allergies	module Allergies (Allergen(..), isAllergicTo, allergies) where\n\nimport Data.Bits\n\ndata Allergen = Eggs | Peanuts | Shellfish | Strawberries | Tomatoes | Chocolate | Pollen | Cats\n                deriving (Show, Eq, Enum, Bounded)\n\nallergies :: Int -> [Allergen]\nallergies i = filter (`isAllergicTo` i) [minBound..]\n\nisAllergicTo :: Allergen -> Int -> Bool\nisAllergicTo a i = testBit i (fromEnum a)	2014-06-26 09:23:32	\N	0	3	2014-06-25 17:35:42	2014-06-25 17:35:42	62	allergies.hs
132	30	0e722e72561c0f00051fed07	superseded	ruby	roman-numerals	class Fixnum\n  def to_roman\n    number=self.to_s.split''\n    roman=[]\n\n    ones={ '1'=>'I', '2'=>'II', '3'=>'III', '4'=>'IV', '5'=>'V',\n      '6'=>'VI', '7'=>'VII', '8'=>'VIII', '9'=>'IX' }\n    tens={ '1'=>'X', '2'=>'XX', '3'=>'XXX', '4'=>'XL', '5'=>'L',\n      '6'=>'LX', '7'=>'LXX', '8'=>'LXXX', '9'=>'XC' }\n    hundreds={ '1'=>'C', '2'=>'CC', '3'=>'CCC', '4'=>'CD', '5'=>'D',\n      '6'=>'DC', '7'=>'DCC', '8'=>'DCCC', '9'=>'CM' }\n    thousands={ '1'=>'M', '2'=>'MM', '3'=>'MMM' }\n\n    roman<<ones[number[-1]]\n    roman<<tens[number[-2]] if number[-2]\n    roman<<hundreds[number[-3]] if number[-3]\n    roman<<thousands[number[-4]] if number[-4]\n    \n    roman.reverse.join\n  end\nend	\N	\N	0	1	2014-03-25 20:12:48	2014-03-25 20:12:48	63	roman.rb
133	30	d94652d00e62c5426ad70b74	done	ruby	roman-numerals	class Fixnum\n  def to_roman\n    number=self.to_s\n    roman=[]\n\n    ones={ '1'=>'I', '2'=>'II', '3'=>'III', '4'=>'IV', '5'=>'V',\n      '6'=>'VI', '7'=>'VII', '8'=>'VIII', '9'=>'IX' }\n    tens={ '1'=>'X', '2'=>'XX', '3'=>'XXX', '4'=>'XL', '5'=>'L',\n      '6'=>'LX', '7'=>'LXX', '8'=>'LXXX', '9'=>'XC' }\n    hundreds={ '1'=>'C', '2'=>'CC', '3'=>'CCC', '4'=>'CD', '5'=>'D',\n      '6'=>'DC', '7'=>'DCC', '8'=>'DCCC', '9'=>'CM' }\n    thousands={ '1'=>'M', '2'=>'MM', '3'=>'MMM' }\n\n    roman<<ones[number[-1]]\n    roman<<tens[number[-2]] if number[-2]\n    roman<<hundreds[number[-3]] if number[-3]\n    roman<<thousands[number[-4]] if number[-4]\n    \n    roman.reverse.join\n  end\nend	2014-04-08 23:43:54	\N	0	2	2014-03-29 13:24:20	2014-03-29 13:24:20	63	roman.rb
410	16	7e40ddf7db5b33b191512063	pending	haskell	binary	module Binary (toDecimal) where\n\ntoDecimal :: String -> Int\ntoDecimal b\n  | all (`elem` "10") b = sum $ zipWith (\\x y -> if x == '1' then 2^y else 0) b positions\n  | otherwise = 0\n  where len = length b\n        positions = [len-1, len-2 .. 0]	\N	\N	0	2	2014-07-18 00:05:27	2014-07-18 00:05:27	198	binary.hs
411	16	17894028eb18119ce7646ecb	superseded	haskell	etl	module ETL (transform)\nwhere\n  \nimport Data.Map.Strict (Map)\nimport qualified Data.Char as Char\nimport qualified Data.Map.Strict as Map\n\ntoLower :: String -> String\ntoLower = map Char.toLower\n\nupdateNew :: Int -> Map String Int -> [String] -> Map String Int\nupdateNew score = foldr addLetter\n  where\n    addLetter :: String -> Map String Int -> Map String Int\n    addLetter letter = Map.insert (toLower letter) score\n\ntransform :: Map Int [String] -> Map String Int\ntransform = Map.foldlWithKey (flip updateNew) Map.empty	\N	\N	0	1	2014-06-24 08:16:17	2014-06-24 08:16:17	199	ETL.hs
134	30	62f84b6e1e31005dcb0ab6fe	done	elixir	bob	defmodule Message do\n\n  def silent?(input),   do: "" == String.strip(input)\n  def shouting?(input), do: input == String.upcase(input) && letters?(input)\n  def question?(input), do: String.ends_with?(input, "?")\n\n  defp letters?(input), do: Regex.match?(%r/[a-zA-Z]+/, input)\nend\n\ndefmodule Teenager do\n  import Message, only: [silent?: 1, shouting?: 1, question?: 1]\n\n  def hey(input) do\n    cond do\n      silent?(input)   -> "Fine. Be that way!"\n      shouting?(input) -> "Woah, chill out!"\n      question?(input) -> "Sure."\n      true             -> "Whatever."\n    end\n  end\nend	2014-04-08 09:06:47	\N	0	1	2014-04-07 10:29:22	2014-04-07 10:29:22	64	bob.exs
135	32	b08127d3908dfea1219ac5f6	superseded	ruby	anagram	class Anagram\n\n  def initialize word\n\n    @word = word.downcase\n    @sorted = @word.chars.sort\n    \n  end\n\n  def match words\n    words.each_with_object([]) do |w, matches| \n      matches<< w if anagram?(w.downcase())\n    end\n  \n    \n  end\n\n  def anagram? w\n\n    w.size == @word.size && w != @word && @sorted == w.downcase.chars.sort\n\n  end\nend	\N	\N	0	1	2014-01-16 19:38:57	2014-01-16 19:38:57	65	anagram.rb
136	32	55ea3e11f0f1edca4bceb95e	done	ruby	anagram	class Anagram\n\n  def initialize word\n\n    @word = word.downcase\n    @sorted = @word.chars.sort\n    \n  end\n\n  def match words\n    words.select{|w| anagram?(w.downcase()) }\n    \n  end\n\n  def anagram? w\n\n    w.size == @word.size && w != @word && @sorted == w.chars.sort\n\n  end\nend	2014-03-28 12:45:08	\N	0	2	2014-03-22 03:24:46	2014-03-22 03:24:46	65	anagram.rb
137	32	531da0eef6cb29f3e804c7b9	superseded	elixir	phone-number	defmodule Phone do\n  @doc """\n  Remove formatting from a phone number.\n\n  Returns "0000000000" if phone number is not valid\n  (10 digits or "1" followed by 10 digits)\n\n  ## Examples\n\n  iex> Phone.number("123-456-7890")\n  "1234567890"\n\n  iex> Phone.number("+1 (303) 555-1212")\n  "3035551212"\n\n  iex> Phone.number("867.5309")\n  "0000000000"\n  """\n  @spec number(String.t) :: String.t\n  def number(input) do\n    si = String.replace(input, ~r/[^0-9]+/, "")\n\n    si_length = String.length(si)\n    cond do\n      si_length == 9  -> "0000000000"\n      si_length == 11 && String.starts_with?(si, "1") -> String.lstrip(si, "1")\n      si_length == 11 -> "0000000000"\n      true            -> si\n    end\n  end\n\n  @doc """\n  Extract the area code from a phone number\n\n  Returns the first three digits from a phone number,\n  ignoring long distance indicator\n\n  ## Examples\n\n  iex> Phone.area_code("123-456-7890")\n  "123"\n\n  iex> Phone.area_code("+1 (303) 555-1212")\n  "303"\n\n  iex> Phone.area_code("867.5309")\n  "000"\n  """\n  @spec area_code(String.t) :: String.t\n  def area_code(input) do\n    String.slice(number(input), 0..2)\n  end\n\n  @doc """\n  Pretty print a phone number\n\n  Wraps the area code in parentheses and separates\n  exchange and subscriber number with a dash.\n\n  ## Examples\n\n  iex> Phone.pretty("123-456-7890")\n  "(123) 456-7890"\n\n  iex> Phone.pretty("+1 (303) 555-1212")\n  "(303) 555-1212"\n\n  iex> Phone.pretty("867.5309")\n  "(000) 000-0000"\n  """\n  @spec pretty(String.t) :: String.t\n  def pretty(input) do\n    parsed = number(input)\n    ["(", String.slice(parsed, 0..2), ") ", String.slice(parsed, 3..5), '-', String.slice(parsed, 6..9)]\n    |> List.to_string\n  end\nend	\N	\N	0	2	2013-12-24 11:34:00	2013-12-24 11:34:00	66	phone_number.exs
138	32	3db59b57a44168fe3af19fab	superseded	elixir	phone-number	defmodule Phone do\n  @doc """\n  Remove formatting from a phone number.\n\n  Returns "0000000000" if phone number is not valid\n  (10 digits or "1" followed by 10 digits)\n\n  ## Examples\n\n  iex> Phone.number("123-456-7890")\n  "1234567890"\n\n  iex> Phone.number("+1 (303) 555-1212")\n  "3035551212"\n\n  iex> Phone.number("867.5309")\n  "0000000000"\n  """\n  @spec number(String.t) :: String.t\n  def number(input) do\n    si = String.replace(input, ~r/[^0-9]+/, "")\n\n    si_length = String.length(si)\n    cond do\n      si_length == 9  -> "0000000000"\n      si_length == 11 && String.starts_with?(si, "1") -> String.slice(si, 1..-1)\n      si_length == 11 -> "0000000000"\n      true            -> si\n    end\n  end\n\n  @doc """\n  Extract the area code from a phone number\n\n  Returns the first three digits from a phone number,\n  ignoring long distance indicator\n\n  ## Examples\n\n  iex> Phone.area_code("123-456-7890")\n  "123"\n\n  iex> Phone.area_code("+1 (303) 555-1212")\n  "303"\n\n  iex> Phone.area_code("867.5309")\n  "000"\n  """\n  @spec area_code(String.t) :: String.t\n  def area_code(input) do\n    String.slice(number(input), 0..2)\n  end\n\n  @doc """\n  Pretty print a phone number\n\n  Wraps the area code in parentheses and separates\n  exchange and subscriber number with a dash.\n\n  ## Examples\n\n  iex> Phone.pretty("123-456-7890")\n  "(123) 456-7890"\n\n  iex> Phone.pretty("+1 (303) 555-1212")\n  "(303) 555-1212"\n\n  iex> Phone.pretty("867.5309")\n  "(000) 000-0000"\n  """\n  @spec pretty(String.t) :: String.t\n  def pretty(input) do\n    parsed = number(input)\n    ["(", String.slice(parsed, 0..2), ") ", String.slice(parsed, 3..5), '-', String.slice(parsed, 6..9)]\n    |> List.to_string\n  end\nend	\N	\N	0	1	2014-03-24 14:18:44	2014-03-24 14:18:44	66	phone_number.exs
149	32	193aa38019d1efbd33b29749	done	javascript	nucleotide-count	var DNA = function DNA(genome){\n\tvar that = this;\n\tthis.nucleotideCounts = {\n\t\tA:0,\n\t\tU:0,\n\t\tT:0,\n\t\tC:0,\n\t\tG:0,\n\t};\n\n\t[].forEach.call(genome, function(item){\n\t\tthat.nucleotideCounts[item]++;\n\t});\n\tif (this.nucleotideCounts.U === 0) delete this.nucleotideCounts.U;\n\telse delete this.nucleotideCounts.T;\n}\n\nDNA.prototype.count = function count(nucleotide){\n\tif (! is_valid(nucleotide)) throw new Error("Invalid Nucleotide");\n\tvar result = this.nucleotideCounts[nucleotide];\n\treturn result?result:0;\n\n\n\tfunction is_valid(nucleotide){\n\t\treturn 'AGTCU'.indexOf(nucleotide) !== -1;\n\t}\n}\n\nmodule.exports = DNA;	2014-04-19 07:24:16	\N	0	1	2014-04-17 01:27:00	2014-04-17 01:27:00	70	nucleotide-count.js
166	32	2bb5ae6c777e81b16cc5003d	done	go	atbash-cipher	package atbash\n\nimport (\n\t"bytes"\n\t"strings"\n)\n\nvar m = map[rune]rune{\n\n\t'a': 'z',\n\t'b': 'y',\n\t'c': 'x',\n\t'd': 'w',\n\t'e': 'v',\n\t'f': 'u',\n\t'g': 't',\n\t'h': 's',\n\t'i': 'r',\n\t'j': 'q',\n\t'k': 'p',\n\t'l': 'o',\n\t'm': 'n',\n\n\t'n': 'm',\n\t'o': 'l',\n\t'p': 'k',\n\t'q': 'j',\n\t'r': 'i',\n\t's': 'h',\n\t't': 'g',\n\t'u': 'f',\n\t'v': 'e',\n\t'w': 'd',\n\t'x': 'c',\n\t'y': 'b',\n\t'z': 'a',\n\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n}\n\nfunc Atbash(s string) string {\n\tcount := 0\n\tvar b bytes.Buffer\n\tfor _, r := range strings.ToLower(s) {\n\t\tv, ok := m[r]\n\t\tif ok {\n\t\t\tb.WriteRune(v)\n\t\t\tcount++\n\t\t}\n\t\tif count == 5 {\n\t\t\tb.WriteRune(' ')\n\t\t\tcount = 0\n\t\t}\n\t}\n\treturn strings.TrimSuffix(b.String(), " ")\n}	2014-02-25 09:18:04	\N	0	2	2014-02-19 23:30:11	2014-02-19 23:30:11	81	atbash_cipher.go
139	32	51fc538cf295d99802014ab0	done	elixir	phone-number	defmodule Phone do\n  @doc """\n  Remove formatting from a phone number.\n\n  Returns "0000000000" if phone number is not valid\n  (10 digits or "1" followed by 10 digits)\n\n  ## Examples\n\n  iex> Phone.number("123-456-7890")\n  "1234567890"\n\n  iex> Phone.number("+1 (303) 555-1212")\n  "3035551212"\n\n  iex> Phone.number("867.5309")\n  "0000000000"\n  """\n  @spec number(String.t) :: String.t\n  def number(input) do\n    si = String.replace(input, ~r/[^0-9]+/, "")\n\n    si_length = String.length(si)\n    cond do\n      si_length == 9  -> "0000000000"\n      si_length == 11 && String.starts_with?(si, "1") -> String.slice(si, 1..-1)\n      si_length == 11 -> "0000000000"\n      true            -> si\n    end\n  end\n\n  @doc """\n  Extract the area code from a phone number\n\n  Returns the first three digits from a phone number,\n  ignoring long distance indicator\n\n  ## Examples\n\n  iex> Phone.area_code("123-456-7890")\n  "123"\n\n  iex> Phone.area_code("+1 (303) 555-1212")\n  "303"\n\n  iex> Phone.area_code("867.5309")\n  "000"\n  """\n  @spec area_code(String.t) :: String.t\n  def area_code(input) do\n    String.slice(number(input), 0..2)\n  end\n\n  @doc """\n  Pretty print a phone number\n\n  Wraps the area code in parentheses and separates\n  exchange and subscriber number with a dash.\n\n  ## Examples\n\n  iex> Phone.pretty("123-456-7890")\n  "(123) 456-7890"\n\n  iex> Phone.pretty("+1 (303) 555-1212")\n  "(303) 555-1212"\n\n  iex> Phone.pretty("867.5309")\n  "(000) 000-0000"\n  """\n  @spec pretty(String.t) :: String.t\n  def pretty(input) do\n    parsed = number(input)\n    ["(", String.slice(parsed, 0..2), ") ", String.slice(parsed, 3..5), '-', String.slice(parsed, 6..9)]\n    |> List.to_string\n  end\nend	2014-05-22 23:49:06	\N	0	3	2014-05-11 22:26:31	2014-05-11 22:26:31	66	phone_number.exs
140	32	ec4664fdf04c4eafca79f63d	superseded	ruby	space-age	class SpaceAge\n  require 'bigdecimal'\n  \n  attr_reader :seconds_old\n  alias_method :seconds, :seconds_old\n\n  EARTH_YEARS = { earth:     1.0,\n                  mercury:   0.2408467,\n                  venus:     0.61519726,\n                  mars:      1.8808158,\n                  jupiter:  11.862615,\n                  saturn:   29.447498,\n                  uranus:   84.016846,\n                  neptune: 164.79132 }\n  \n  EARTH_ORBIT_YEAR = { days: 365.25, seconds: 31557600 }\n\n  def initialize( age_in_seconds )\n    @seconds_old = age_in_seconds\n  end\n\n  def method_missing( meth, *args, &block )\n    if meth.to_s =~ /on_(.+)/\n      age_on_planet( $1, *args, &block )\n    elsif meth.to_s =~ /age_on_(.+)/\n      age_on_planet( $1, *args, &block )\n    else\n      super\n    end\n  end\n\n  def age_on_planet( planet, precision=2 )\n    # earth_age = age_on_earth( precision )\n    # planet_age = earth_age.div( BigDecimal.new( EARTH_YEARS[ planet.to_sym ] ), precision )\n    age = BigDecimal.new( @seconds_old.to_s ).div( orbit_in_seconds( planet ), 20)\n    age.round( precision ).to_f\n  end\n\n  def orbit_in_seconds( planet )\n    BigDecimal.new( EARTH_YEARS[ planet.to_sym ].to_s ).mult( BigDecimal.new( EARTH_ORBIT_YEAR[ :seconds ].to_s ), 20 )\n  end\nend	\N	\N	0	1	2014-03-07 00:18:26	2014-03-07 00:18:26	67	space-age.rb
141	32	26449ab036cd01f50f1ccafa	pending	ruby	space-age	class SpaceAge\n  require 'bigdecimal'\n  \n  attr_reader :seconds_old\n  alias_method :seconds, :seconds_old\n\n  EARTH_YEARS = { earth:     1.0,\n                  mercury:   0.2408467,\n                  venus:     0.61519726,\n                  mars:      1.8808158,\n                  jupiter:  11.862615,\n                  saturn:   29.447498,\n                  uranus:   84.016846,\n                  neptune: 164.79132 }\n  \n  EARTH_ORBIT_YEAR = { days: 365.25, seconds: 31557600 }\n\n  def initialize( age_in_seconds )\n    @seconds_old = age_in_seconds\n  end\n\n  def method_missing( meth, *args, &block )\n    if meth.to_s =~ /on_(.+)/\n      age_on_planet( $1, *args, &block )\n    elsif meth.to_s =~ /age_on_(.+)/\n      age_on_planet( $1, *args, &block )\n    else\n      super\n    end\n  end\n\n  def age_on_planet( planet, precision=2 )\n    age = BigDecimal.new( @seconds_old.to_s ).div( orbit_in_seconds( planet ), 20)\n    age.round( precision ).to_f\n  end\n\n  def orbit_in_seconds( planet )\n    BigDecimal.new( EARTH_YEARS[ planet.to_sym ].to_s ).mult( BigDecimal.new( EARTH_ORBIT_YEAR[ :seconds ].to_s ), 20 )\n  end\nend	\N	\N	0	2	2014-05-23 10:37:37	2014-05-23 10:37:37	67	space-age.rb
142	32	3260f6349e2222989a00ebe8	superseded	ruby	bob	class Bob\n  def hey(phrase)\n    case\n    when shouting?(phrase)\n      'Woah, chill out!'\n    when question?(phrase)\n      'Sure.'\n    when silence?(phrase)\n      'Fine. Be that way!'\n    else\n        'Whatever.'\n      # if (phrase) == 'WATCH OUT!'\n#       'Woah, chill out!'\n#     elsif phrase == 'Does this cryogenic chamber make me look fat?'\n#       'Sure.'\n#     else\n#       'Whatever.'\n    end\nend\n\ndef question?(s)\n  s.end_with?('?')\nend\n\ndef shouting?(s)\n  s =~ /[A-Z]/ && s.upcase == s\nend\n\ndef silence?(s)\n  s.strip.empty?\nend\n\nend	\N	\N	0	1	2014-01-29 09:31:21	2014-01-29 09:31:21	68	bob.rb
143	32	d5d84d0fd9a25b9cc05306cb	pending	ruby	bob	class Bob\n  def hey(phrase)\n    case\n    when shouting?(phrase)\n      'Woah, chill out!'\n    when question?(phrase)\n      'Sure.'\n    when silence?(phrase)\n      'Fine. Be that way!'\n    else\n        'Whatever.'\n      # if (phrase) == 'WATCH OUT!'\n#       'Woah, chill out!'\n#     elsif phrase == 'Does this cryogenic chamber make me look fat?'\n#       'Sure.'\n#     else\n#       'Whatever.'\n    end\nend\n\nprivate \n\ndef question?(s)\n  s.end_with?('?')\nend\n\ndef shouting?(s)\n  s =~ /[A-Z]/ && s.upcase == s\nend\n\ndef silence?(s)\n  s.strip.empty?\nend\n\nend	\N	\N	0	2	2014-04-24 15:49:40	2014-04-24 15:49:40	68	bob.rb
144	32	b11b67e3f555e17a7425d3fd	superseded	ruby	leap	class Year\n  def initialize year\n    @year = year\n  end\n\n  def self.leap? year\n    year = Year.new(year)\n\n    if year.divisible_by? 100\n      year.divisible_by? 400\n    else\n      year.divisible_by? 4\n    end\n  end\n\n  def divisible_by? divisor\n    @year % divisor == 0\n  end\nend	\N	\N	0	3	2014-02-23 12:46:58	2014-02-23 12:46:58	69	year.rb
145	32	542b5a22b23b95bbcc37f70c	superseded	ruby	leap	class Year\n  def initialize year=nil\n    @year = year\n  end\n\n  def self\n    @year\n  end\n\n  def self.leap? year\n    year = Year.new(year)\n\n    unless year.century?\n      year.divisible_by_four?\n    else\n      year.divisible_by_four_hundred?\n    end\n  end\n\n  def century?\n    @year % 100 == 0\n  end\n\n  def divisible_by_four?\n    @year % 4 == 0\n  end\n\n  def divisible_by_four_hundred?\n    @year % 400 ==0\n  end\nend	\N	\N	0	2	2014-03-31 09:04:32	2014-03-31 09:04:32	69	year.rb
146	32	c66c944cbe6993894224d9fe	superseded	ruby	leap	class Year\n  def initialize year\n    @year = year\n  end\n\n  def self.leap? year\n    self.new(year).leap?\n  end\n\n  def leap?\n    if divisible_by? 100\n      divisible_by? 400\n    else\n      divisible_by? 4\n    end\n  end\n\n  private\n\n  def divisible_by? divisor\n    @year % divisor == 0\n  end\nend	\N	\N	0	4	2014-06-03 03:39:59	2014-06-03 03:39:59	69	year.rb
147	32	f19a394c0bd4f1979bce7737	done	ruby	leap	class Year\n  def initialize year\n    @year = year\n  end\n\n  def self.leap? year\n    new(year).leap?\n  end\n\n  def leap?\n    if divisible_by? 100\n      divisible_by? 400\n    else\n      divisible_by? 4\n    end\n  end\n\n  private\n\n  def divisible_by? divisor\n    @year % divisor == 0\n  end\nend	2014-07-11 14:26:56	\N	0	5	2014-07-02 21:52:37	2014-07-02 21:52:37	69	year.rb
150	32	bb482b0cd0d1d2d5dd5c831b	done	javascript	bob	Bob = function(){\n\n  this.responses = [\n    {filter: Statement.silence,  response: 'Fine, be that way.'},\n    {filter: Statement.shouting, response: 'Woah, chill out!'},\n    {filter: Statement.question, response: 'Sure'},\n    {filter: Statement.anything, response: 'Whatever'}\n  ];\n};\n\nBob.prototype.hey = function(originalStatement){\n  var statement = originalStatement || '';\n\n  return this.findReponseFor(statement);\n};\n\nBob.prototype.findReponseFor = function(statement){\n  for(var i = 0, l = this.responses.length; i < l; i++){\n    var possibleResponse = this.responses[i];\n\n    if(possibleResponse.filter(statement)){\n      return possibleResponse.response;\n    }\n  }\n  return false;\n};\n\nStatement = {\n  silence: function(statement){\n    return statement.length === 0;\n  },\n\n  shouting: function(statement){\n    return statement === statement.toUpperCase();\n  },\n\n  question: function(statement){\n    return statement.slice(-1) === '?';\n  },\n\n  anything: function(statement){\n    return true;\n  }\n};	2013-11-21 01:07:23	\N	0	3	2013-11-13 03:18:36	2013-11-13 03:18:36	71	bob.js
151	32	8bccc7528e9cdd03e78d5959	superseded	javascript	bob	Bob = function(){\n\n  this.responses = [\n    {filter: this.silence,  response: 'Fine, be that way.'},\n    {filter: this.shouting, response: 'Woah, chill out!'},\n    {filter: this.question, response: 'Sure'},\n    {filter: this.anything, response: 'Whatever'}\n  ];\n};\n\nBob.prototype.hey = function(originalStatement){\n  var statement = originalStatement || '';\n\n  return this.findReponseFor(statement);\n};\n\nBob.prototype.silence = function(statement){\n  return statement.length < 1;\n};\n\nBob.prototype.shouting = function(statement){\n  return statement === statement.toUpperCase();\n};\n\nBob.prototype.question = function(statement){\n  return (/\\?$/).test(statement);\n};\n\nBob.prototype.anything = function(statement){\n  return true;\n};\n\nBob.prototype.findReponseFor = function(statement){\n  for(var i = 0,l = this.responses.length; i < l; i++){\n    var possibleResponse = this.responses[i];\n\n    if(possibleResponse.filter(statement)){\n      return possibleResponse.response;\n    }\n  }\n  return false;\n};	\N	\N	0	1	2014-01-26 04:50:15	2014-01-26 04:50:15	71	bob.js
152	32	4988f7eab3a183ef2a2806b1	superseded	javascript	bob	Bob = function(){\n\n  this.responses = [\n    {filter: Statement.silence,  response: 'Fine, be that way.'},\n    {filter: Statement.shouting, response: 'Woah, chill out!'},\n    {filter: Statement.question, response: 'Sure'},\n    {filter: Statement.anything, response: 'Whatever'}\n  ];\n};\n\nBob.prototype.hey = function(originalStatement){\n  var statement = originalStatement || '';\n\n  return this.findReponseFor(statement);\n};\n\nBob.prototype.findReponseFor = function(statement){\n  for(var i = 0, l = this.responses.length; i < l; i++){\n    var possibleResponse = this.responses[i];\n\n    if(possibleResponse.filter(statement)){\n      return possibleResponse.response;\n    }\n  }\n  return false;\n};\n\nStatement = {\n  silence: function(statement){\n    return statement.length < 1;\n  },\n\n  shouting: function(statement){\n    return statement === statement.toUpperCase();\n  },\n\n  question: function(statement){\n    return statement.slice(-1) === '?';\n  },\n\n  anything: function(statement){\n    return true;\n  }\n};	\N	\N	0	2	2014-04-05 04:52:35	2014-04-05 04:52:35	71	bob.js
153	32	c88cef60ee8174c6d58c7d85	pending	ruby	phone-number	class Phone\n  US_PHONE_NUMBER = /\\A1?(?<area_code>\\d{3})(?<prefix>\\d{3})(?<line_number>\\d{4})\\Z/\n  INVALID = "0" * 10\n\n  attr_reader :number\n\n  def initialize(digits)\n    @parts = sanitize(digits).match(US_PHONE_NUMBER)\n    @number = @parts ? @parts.captures.join : INVALID\n  end\n\n  def area_code\n    @parts['area_code']\n  end\n\n  def prefix\n    @parts['prefix']\n  end\n\n  def line_number\n    @parts['line_number']\n  end\n\n  def to_s\n    "(#{area_code}) #{prefix}-#{line_number}"\n  end\n\n  private\n\n  def sanitize(digits)\n    digits.gsub(/\\D/, '')\n  end\nend	\N	\N	0	1	2013-11-18 17:59:27	2013-11-18 17:59:27	72	phone-number.rb
154	32	56a61badcf45a220e995d8d0	done	python	accumulate	def accumulate(items, func):\n    return [func(item) for item in items]	2014-02-05 08:41:23	\N	0	1	2014-01-26 17:59:32	2014-01-26 17:59:32	73	accumulate.py
155	32	0ec9727dad85920facae618e	done	ruby	raindrops	class Raindrops\n  DICTIONARY = {\n    7 => "Plong",\n    5 => "Plang",\n    3 => "Pling"\n  }\n\n  def self.convert(i)\n    new(i).convert!\n  end\n\n  def initialize(i)\n    @i = i\n    @s = ''\n  end\n\n  def convert!\n    DICTIONARY.each { |n, w|\n      if @i % n == 0\n        @s = w + @s unless @s.include?(w)\n        break @i /= n\n      end\n    } === DICTIONARY ? finalize! : send(__method__)\n  end\n\n  private\n\n  def finalize!\n    @s.empty? ? @i.to_s : @s\n  end\nend	2014-01-14 03:23:05	\N	0	1	2014-01-13 04:15:21	2014-01-13 04:15:21	74	raindrops.rb
156	32	f7a1167b6c8432bc08404645	superseded	haskell	binary	module Binary (\r\n  toDecimal\r\n)  where\r\n\r\ntoDecimal :: String -> Int\r\ntoDecimal = convert . reverse . listOfInts\r\n\r\nconvert :: [Int] -> Int\r\nconvert [] = 0\r\nconvert (x:xs) = x + (2 * convert xs)\r\n\r\nlistOfInts :: String -> [Int]\r\nlistOfInts [] = []\r\nlistOfInts ('1':xs) = 1: listOfInts xs\r\nlistOfInts ( _ :xs) = 0: listOfInts xs\r	\N	\N	0	1	2014-01-18 08:48:19	2014-01-18 08:48:19	75	Binary.hs
157	32	859b985b7575b6151e49b5a8	done	haskell	binary	module Binary (\r\n  toDecimal\r\n)  where\r\n\r\ntoDecimal :: String -> Integer\r\ntoDecimal = convert . reverse . map (\\x -> if x == '1' then 1 else 0)\r\n  where\r\n    convert xs = sum $ zipWith (*) xs $ map (2^) [0..]\r	2014-06-08 17:37:49	\N	0	2	2014-06-04 09:33:47	2014-06-04 09:33:47	75	Binary.hs
167	32	0a82ab621e706236efbd72c4	superseded	clojure	word-count	(ns phrase\n  (:require [clojure.string :as str :only [split lower-case]]))\n\n(defn- words [text]\n  (str/split text #"[^\\p{Alnum}]+"))\n\n(defn- normalize [word]\n  (str/lower-case word))\n\n(defn word-count [text]\n  (->>\n    (words text)\n    (map normalize)\n    (frequencies)))	\N	\N	0	1	2013-11-16 03:30:54	2013-11-16 03:30:54	82	word-count.clj
168	32	e8c34ba7738c5ce8e85084a5	done	clojure	word-count	(ns phrase\n  (:require [clojure.string :as str :only [split lower-case]]))\n\n(defn- normalize [word]\n  (str/lower-case word))\n\n(defn- words [text]\n  (str/split (normalize text) #"[^\\p{Alnum}]+"))\n\n(defn word-count [text]\n  (frequencies (words text)))	2014-01-07 19:24:06	\N	0	2	2013-12-29 01:30:55	2013-12-29 01:30:55	82	word-count.clj
169	32	2cbb12a9d4f3aebb5433ff3f	superseded	ruby	nucleotide-count	class DNA\n\n  def initialize(dna_in)\n    @dna_nuces = [ 'A', 'C', 'G', 'T' ]\n    @rna_nuces = [ 'A', 'C', 'G', 'U' ]\n    @nuces = @dna_nuces | @rna_nuces\n    for i in dna_in.chars\n      if @dna_nuces.count(i) == 0\n        raise ArgumentError\n      end\n    end\n    @dna_in = dna_in\n  end\n  \n  def count(nuc)\n    if @nuces.count(nuc) == 0\n      raise ArgumentError\n    end\n    return @dna_in.count(nuc)\n  end\n  \n  def nucleotide_counts\n    c = {}\n    for i in @dna_nuces \n      c[i] = @dna_in.count(i)\n    end\n    return c\n  end\n\nend	\N	\N	0	1	2014-02-19 05:32:55	2014-02-19 05:32:55	83	nucleotide-count.rb
158	32	edf245a21425a91778152b77	done	fsharp	triangle	﻿module Triangle\r\n\r\ntype TriangleKind =\r\n    | Equilateral\r\n    | Isosceles\r\n    | Scalene\r\n\r\ntype Triangle(sideA, sideB, sideC) =\r\n    member x.Kind() =\r\n        let sidesAreNotValid = sideA < 0m || sideB < 0m || sideC < 0m\r\n        let sidesAreNotAValidTriangle = sideA + sideB < sideC || sideA + sideC < sideB || sideB + sideC < sideA\r\n        let sidesMakeAnEquilateral = sideA = sideB && sideA = sideC && sideB = sideC\r\n        let sidesMakeAnIsosceles = sideA = sideB || sideA = sideC || sideB = sideC\r\n\r\n        match sideA, sideB, sideC with\r\n        | 0m, 0m, 0m -> raise (System.InvalidOperationException())\r\n        | _, _, _ when sidesAreNotValid -> raise (System.InvalidOperationException())\r\n        | _, _, _ when sidesAreNotAValidTriangle  -> raise (System.InvalidOperationException())\r\n        | _, _, _ when sidesMakeAnEquilateral -> TriangleKind.Equilateral\r\n        | _, _, _ when sidesMakeAnIsosceles -> TriangleKind.Isosceles\r\n        | _, _, _ -> TriangleKind.Scalene	2013-11-29 17:22:36	\N	0	1	2013-11-27 23:11:20	2013-11-27 23:11:20	76	Triangle.fs
159	32	362444438b65a1a6bcb86055	superseded	ruby	word-count	class Tokenizer\n  def tokens_from(string)\n    string.split.\n      map    { |token| remove_punctuation(token) }.\n      map    { |token| normalize_case(token) }.\n      reject { |token| token.empty? }\n  end\n  \n  private\n  \n  def remove_punctuation(token)\n    token.gsub(/[^\\w]/, "")\n  end\n  \n  def normalize_case(token)\n    token.downcase\n  end\nend\n\nclass Words\n  def initialize(sentence)\n    @tokens = Tokenizer.new.tokens_from(sentence)\n  end\n  \n  def count\n    word_counts(@tokens)\n  end\n  \n  private\n  \n  def word_counts(words)\n    Hash.new(0).tap do |hash|\n      words.each { |word| hash[word] += 1 }\n    end\n  end\nend	\N	\N	0	1	2013-12-25 07:59:52	2013-12-25 07:59:52	77	word-count.rb
160	32	aef5b8a02e9a90f2f5719183	done	ruby	word-count	class Words\n  def initialize(sentence)\n    @sentence = sentence\n  end\n  \n  def count\n    word_counts(tokens_from(@sentence))\n  end\n  \n  private\n  \n  def tokens_from(string)\n    normalized_case = string.downcase\n    no_punctuation = normalized_case.gsub(/[^\\w ]/, "")\n    no_punctuation.split(" ")\n  end\n  \n  def word_counts(words)\n    Hash.new(0).tap do |counts|\n      words.each { |word| counts[word] += 1 }\n    end\n  end\nend	2014-02-10 03:12:40	\N	0	3	2014-02-03 12:10:16	2014-02-03 12:10:16	77	word-count.rb
161	32	a17b4de08b73446e7ab28287	superseded	ruby	word-count	class Tokenizer\n  def tokens_from(string)\n    string.split.\n      map    { |token| remove_punctuation(token) }.\n      map    { |token| normalize_case(token) }.\n      reject { |token| token.empty? }\n  end\n  \n  private\n  \n  def remove_punctuation(token)\n    token.gsub(/[^\\w]/, "")\n  end\n  \n  def normalize_case(token)\n    token.downcase\n  end\nend\n\nclass Words\n  def initialize(sentence)\n    @tokens = Tokenizer.new.tokens_from(sentence)\n  end\n  \n  def count\n    word_counts(@tokens)\n  end\n  \n  private\n  \n  def word_counts(words)\n    Hash.new(0).tap do |counts|\n      words.each { |word| counts[word] += 1 }\n    end\n  end\nend	\N	\N	0	2	2014-07-05 04:57:33	2014-07-05 04:57:33	77	word-count.rb
162	32	2b423d265bf303d5c19db4f8	done	ruby	trinary	class Trinary\n  attr_accessor :string_value\n\n  BASE_VALUE = 3\n\n  def initialize(string_value)\n    @string_value = string_value\n  end\n\n  def to_decimal\n    digits_with_exponents.map do |digit, exponent|\n      digit * (BASE_VALUE ** exponent)\n    end.reduce(&:+)\n  end\n\n  def digits_with_exponents\n    string_value.chars.to_a.reverse.each_with_index.map do |digit, exponent|\n      [digit.to_i, exponent]\n    end\n  end\nend	2014-01-11 07:56:41	\N	0	1	2014-01-03 20:27:34	2014-01-03 20:27:34	78	trinary.rb
163	32	30ba554b8d0498c056f41225	done	go	triangle	package triangle\n\nimport(\n  "math"\n)\n\ntype Kind interface {}\n\nconst Equ = "equ"\nconst Iso = "iso"\nconst Sca = "sca"\nconst NaT = "nat"\n\nfunc KindFromSides(a, b, c float64) Kind {\n  for _, side := range []float64{a, b, c} {\n    if math.IsNaN(side) || math.IsInf(side, 1) || math.IsInf(side, -1) {\n      return NaT\n    }\n  }\n  if a + b <= c || a + c <= b || b + c <= a {\n    return NaT\n  }\n  if a == b && b == c {\n    return Equ\n  } else if a == b || b == c || a == c {\n    return Iso\n  }\n  return Sca\n}	2014-02-08 12:36:47	\N	0	1	2014-01-30 05:02:07	2014-01-30 05:02:07	79	triangle.go
164	32	5d67af129362f87160051862	done	ruby	house	class House\n\n  def initialize\n    @verse_initializer = "This is the"\n\n    @verse_parts = [\n      " house that Jack built.\\n",\n      " malt that lay in the",\n      " rat that ate the",\n      " cat that killed the",\n      " dog that worried the",\n      " cow with the crumpled horn that tossed the",\n      " maiden all forlorn that milked the",\n      " man all tattered and torn that kissed the",\n      " priest all shaven and shorn that married the",\n      " rooster that crowed in the morn that woke the",\n      " farmer sowing his corn that kept the",\n      " horse and the hound and the horn that belonged to the"\n    ]\n  end\n\n  def verse verse_num\n    gen_verse @verse_initializer, verse_num - 1\n  end\n\n  def verses verse_num_start, verse_num_end\n    verses = ""\n    (verse_num_start..verse_num_end).each do |verse_num|\n      verses += verse(verse_num) + "\\n"\n    end\n    verses\n  end\n\n  private\n\n  def gen_verse verse_in_progress, verse_part_indx\n    if verse_part_indx < 0\n      verse_in_progress\n    else\n      gen_verse verse_in_progress + @verse_parts[verse_part_indx], verse_part_indx - 1\n    end\n  end\n\nend	2014-01-04 00:46:09	\N	0	1	2013-12-25 12:52:20	2013-12-25 12:52:20	80	house.rb
165	32	66228f57d3712830aca21551	superseded	go	atbash-cipher	package atbash\n\nimport (\n\t"strings"\n)\n\nvar m = map[string]string{\n\n\t"a": "z",\n\t"b": "y",\n\t"c": "x",\n\t"d": "w",\n\t"e": "v",\n\t"f": "u",\n\t"g": "t",\n\t"h": "s",\n\t"i": "r",\n\t"j": "q",\n\t"k": "p",\n\t"l": "o",\n\t"m": "n",\n\n\t"n": "m",\n\t"o": "l",\n\t"p": "k",\n\t"q": "j",\n\t"r": "i",\n\t"s": "h",\n\t"t": "g",\n\t"u": "f",\n\t"v": "e",\n\t"w": "d",\n\t"x": "c",\n\t"y": "b",\n\t"z": "a",\n\n\t"0": "0",\n\t"1": "1",\n\t"2": "2",\n\t"3": "3",\n\t"4": "4",\n\t"5": "5",\n\t"6": "6",\n\t"7": "7",\n\t"8": "8",\n\t"9": "9",\n}\n\nfunc Atbash(s string) (result string) {\n\tcount := 0\n\tfor _, r := range s {\n\t\tv, ok := m[strings.ToLower(string(r))]\n\t\tif ok {\n\t\t\tresult += v\n\t\t\tcount++\n\t\t}\n\t\tif count == 5 {\n\t\t\tresult += " "\n\t\t\tcount = 0\n\t\t}\n\t}\n\n\treturn strings.TrimRight(result, " ")\n}	\N	\N	0	1	2013-12-24 17:37:36	2013-12-24 17:37:36	81	atbash_cipher.go
170	32	02634462fbd60ed3972095c4	done	ruby	nucleotide-count	class DNA\n\n  def initialize(dna_in)\n    @dna_nuces = [ 'A', 'C', 'G', 'T' ]\n    @rna_nuces = [ 'A', 'C', 'G', 'U' ]\n    @all_nuces = @dna_nuces | @rna_nuces\n    dna_in.chars { |i| raise ArgumentError if @dna_nuces.count(i) == 0 }\n    @dna_in = dna_in\n  end\n  \n  def count(nuc)\n    raise ArgumentError if @all_nuces.count(nuc) == 0\n    @dna_in.count(nuc)\n  end\n  \n  def nucleotide_counts\n    @dna_nuces.each_with_object({}) { |n, c| c[n] = @dna_in.count(n) }\n  end\n\nend	2014-03-16 09:49:06	\N	0	2	2014-03-05 06:08:41	2014-03-05 06:08:41	83	nucleotide-count.rb
171	32	2e7bdac97e967623227e2c66	done	haskell	nucleotide-count	{-# LANGUAGE TupleSections #-}\r\n\r\nmodule DNA (count, nucleotideCounts) where\r\n\r\nimport Data.List\r\nimport Data.Map (Map, fromListWith)\r\n\r\n\r\ncount :: Char -> String -> Int\r\ncount n dna\r\n  | elem n "ACGTU" = length $ filter (==n) dna\r\n  | otherwise = error $ "invalid nucleotide " ++ show n\r\n\r\n\r\nnucleotideCounts :: String -> Map Char Int\r\nnucleotideCounts = fromListWith (+) . (++ zip "ACGT" (repeat 0)) . map (, 1)\r\n\r	2014-02-22 13:27:58	\N	0	1	2014-02-20 02:31:27	2014-02-20 02:31:27	84	nucleotide-count.hs
172	32	a49ac7e1cf3a63a8c4306aac	done	ruby	rna-transcription	class RibonucleicAcid\n\tdef initialize(dna)\n\t\t@dna = dna\n\tend\n\n\tdef dna\n\t\t@dna\n\tend\n\n\tdef to_s\n\t\t@dna\n\tend\n\n\tdef inspect\n\t\t@dna\n\tend\n\n\tdef ==(other)\n\t\tif other.class == RibonucleicAcid\n    self.dna == other.dna\n  else\n  \tself.dna == other\n  end\n  end\nend\n\nclass String \n\tdef ==(other)\n\t  if other.class == RibonucleicAcid\n\t  \t\n\t  \t self == other.dna\n\t  end\n  end\nend\n\nclass DeoxyribonucleicAcid\nend	2014-02-06 03:06:20	\N	0	1	2014-01-30 14:55:17	2014-01-30 14:55:17	85	rna-transcription.rb
173	32	3f122e33ec7de3c5321acbf4	pending	clojure	bob	(ns bob\n  (:require clojure.string) )\n\n(defn filter-only-letters [input]\n  "Remove all non-letter characters from the input string"\n  (apply str (filter #(Character/isLetter %) input)))\n\n(defn all-caps? [input]\n  "Return true if all of the Letters in the string are uppercase. Empty strings or a string consisting of all spaces will return false"\n  (let [filtered ( filter-only-letters input )]\n    ( cond\n      (empty? (clojure.string/trim filtered)) false \n      (every? #(Character/isUpperCase %) filtered) true)))\n\n(defn is-question? [input]\n  "If a string ends in a question mark then it is considered a question"\n  (= \\? (last input)))\n\n(defn response-for [input]\n  (cond\n   (empty? (clojure.string/trim input)) "Fine. Be that way!"\n   (all-caps? input) "Woah, chill out!"\n   (is-question? input) "Sure."\n   :else "Whatever."\n   )\n  )\n  	\N	\N	0	1	2014-03-16 23:31:27	2014-03-16 23:31:27	86	bob.clj
174	32	0d30c9cca660d732a2a7d178	done	python	anagram	class Anagram:\n\n    def __init__(self, phrase):\n        self.phrase = phrase\n\n    def match(self, words):\n        anagrams = []\n        for word in words:\n            if word != self.phrase:\n              if sorted(word.lower()) == sorted(self.phrase.lower()):\n                  anagrams.append(word)\n\n        return anagrams	2014-03-11 03:35:44	\N	0	1	2014-03-10 07:07:21	2014-03-10 07:07:21	87	anagram.py
175	32	26ff4d064bc7d1ab1f00d596	superseded	ruby	grains	class Grains\n  def square(index)\n    return 2**(index-1)\n  end\n\n  def total\n    rice = 0\n    (1..64).each { |i| rice = rice + self.square(i)}\n    rice\n  end\nend	\N	\N	0	1	2014-01-02 11:07:00	2014-01-02 11:07:00	88	grains.rb
176	32	b39d348e82e64524bc02881d	superseded	ruby	grains	class Grains\n  def initialize\n    @squares = [0, 1]\n    @rice = 0\n  end\n\n  def square(index)\n    if @squares[index].nil?\n      @squares[index] = 2 * self.square(index-1)\n    else\n      @squares[index]\n    end\n  end\n\n  def total\n    self.square(64)\n    @squares.reduce(:+)\n  end\nend	\N	\N	0	2	2014-01-20 13:02:10	2014-01-20 13:02:10	88	grains.rb
177	32	df001a2420c1fffd25f6c898	pending	ruby	grains	class Grains\n  def initialize\n    @squares = [0, 1]\n  end\n\n  def square(index)\n    if @squares[index].nil?\n      @squares[index] = 2 * self.square(index-1)\n    else\n      @squares[index]\n    end\n  end\n\n  def total\n    self.square(64)\n    @squares.reduce(:+)\n  end\nend	\N	\N	0	3	2014-02-03 11:15:15	2014-02-03 11:15:15	88	grains.rb
178	32	a00621204bd29559074e0daf	pending	coffeescript	word-count	class Words\n  constructor: (text) ->\n    @count = {}\n    for word in @words(text)\n      if @count[word]\n        @count[word] += 1\n      else\n        @count[word] = 1\n\n  words: (text) ->\n    (w.toLowerCase() for w in @sanitize_text(text).split(/\\s+/))\n\n  sanitize_text: (text) ->\n    text.replace /[!&@$%^:,]/g, ""\n\nmodule.exports = Words	\N	\N	0	1	2014-06-01 10:38:28	2014-06-01 10:38:28	89	words.coffee
179	32	4a2d1236ed61540be7de8df9	pending	ruby	hamming	class Hamming\n  class << self\n    def compute(dna1, dna2)\n      str1, str2 = order_strs(dna1, dna2)\n      (0..(str1.length - 1)).inject([]) do |diff_chars, ind|\n        diff_chars << str1[ind] unless str1[ind] == str2[ind]\n        diff_chars\n      end.count\n    end\n\n    private\n\n    def order_strs(dna1, dna2)\n      dna1.length <= dna2.length ? [dna1, dna2] : [dna2, dna1]\n    end\n  end\nend	\N	\N	0	1	2013-11-28 00:39:19	2013-11-28 00:39:19	90	hamming.rb
180	32	edbdfcc743d25c630ce617a1	done	python	beer-song	def capitaliseFirst(sentence):\r\n\treturn sentence[0].upper() + sentence[1:]\r\n\t\r\ndef getNumberRep(number):\r\n\t\tif number == 0:\r\n\t\t\treturn "no more"\r\n\t\telse:\r\n\t\t\treturn number\r\n\t\t\t\r\ndef getBottlePlural(number):\r\n\treturn "bottle" + "s" * (number != 1)\r\n\r\nclass Beer:\r\n\tverseChunk1 = "{0} {1} of beer on the wall, {0} {1} of beer.\\n"\r\n\tverseChunk2 = "Take {2} down and pass it around, {0} {1} of beer on the wall.\\n"\r\n\tverseChunk3 = "Go to the store and buy some more, 99 bottles of beer on the wall.\\n"\r\n\t\t\r\n\tdef verse(self, number):\r\n\t\tbottleItemWord = "one" if number > 1 else "it"\r\n\t\t\r\n\t\ttotalVerse = self.verseChunk1.format(getNumberRep(number), getBottlePlural(number))\r\n\t\ttotalVerse = capitaliseFirst(totalVerse)\r\n\t\tif (number > 0):\r\n\t\t\ttotalVerse += self.verseChunk2.format(getNumberRep(number - 1), getBottlePlural(number - 1), bottleItemWord)\r\n\t\telse:\r\n\t\t\ttotalVerse += self.verseChunk3\r\n\t\t\t\r\n\t\treturn totalVerse\r\n\t\t\r\n\tdef sing(self, start, end = 0):\r\n\t\treturn '\\n'.join(self.verse(n) for n in range(start, end - 1, -1)) + '\\n'	2013-12-05 07:14:08	\N	0	1	2013-12-01 07:21:28	2013-12-01 07:21:28	91	beer.py
645	44	e02f2ab6bd83622bf27cd1ff	superseded	ruby	hamming	module Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    dna_sequence.chars.zip(second_dna_sequence.chars).delete_if { |pair| pair.any?(&:nil?)}.inject(0) { |result, (a,b)| result += (a <=> b).abs }\n  end\n  \nend	\N	\N	0	1	2014-05-25 22:52:24	2014-05-25 22:52:24	324	hamming.rb
646	44	d9d46fd49f1b39870e4cd3d9	superseded	ruby	hamming	class Hamming\n  \n  def self.compute strand_1, strand_2\n    self.new(strand_1, strand_2).distance\n  end\n\n  def initialize(strand_1, strand_2)\n    @strand_1 = strand_1\n    @strand_2 = strand_2\n  end\n\n  def distance\n    pairs.inject(0) do |result, (first_char,second_char)| \n      result += (first_char <=> second_char).abs\n    end\n  end\n  \n  private\n\n  def pairs\n    @strand_1.chars.zip(@strand_2.chars).each_with_object([]) do |pair,successive_character_pairs|\n      successive_character_pairs << pair unless pair.include?(nil)\n    end\n  end\n\nend	\N	\N	0	7	2014-06-02 15:40:10	2014-06-02 15:40:10	324	hamming.rb
182	32	0add08ca670cb747e7709615	done	javascript	allergies	var Allergies = function(n) {\n  this.options = { 1: 'eggs', 2: 'peanuts', 4: 'shellfish', 8: 'strawberries',\n                  16: 'tomatoes', 32: 'chocolate', 64: 'pollen', 128: 'cats' };\n  this.allergies = [];\n\n  if ( n > 255 ) {\n    n = 255;\n  }\n\n  var keys = Object.keys( this.options ).sort(function(a, b) {\n    return parseInt(b) - parseInt(a);\n  });\n\n  for ( var i = 0; i < keys.length; i++ ) {\n    if ( n >= parseInt( keys[i] ) ) {\n      this.allergies.unshift( this.options[ keys[i] ] );\n      n -= parseInt( keys[i] );\n    }\n  }\n}\n\nAllergies.prototype.list = function() {\n  return this.allergies;\n};\n\nAllergies.prototype.allergicTo = function(str) {\n  return this.allergies.some(function(el) {\n    return el === str;\n  });\n};	2013-12-06 13:22:59	\N	0	1	2013-11-30 11:57:24	2013-11-30 11:57:24	93	allergies_test.js
183	32	a67db475ed8626bdc7988d5a	pending	haskell	point-mutations	module DNA (hammingDistance) where\r\n\r\nhammingDistance :: String -> String -> Int\r\nhammingDistance xs ys = length $ filter (\\(x, y) -> x /= y) (zip xs ys)\r	\N	\N	0	1	2014-01-21 21:01:13	2014-01-21 21:01:13	94	DNA.hs
184	37	757b9c3bc9ee1a1c48f1bdac	done	clojure	point-mutations	(ns dna)\n\n(defn hamming-distance\n  "Determine the hamming-distance between two DNA strands"\n  [a b]\n  (reduce + (map #(if-not (= %1 %2) 1 0)\n                 (seq a)\n                 (seq b))))	2014-06-29 14:46:18	\N	0	1	2014-06-18 19:27:58	2014-06-18 19:27:58	95	dna.clj
185	37	7607176aeb5bee6454da8ee4	done	ruby	rna-transcription	class RibonucleicAcid\n  def initialize(string)\n    @string = string\n  end\n  def to_s\n    @string\n  end\n  def ==(object)\n    object.to_s == @string\n  end\nend\n\nclass String\n  alias :old_equals :==\n\n  def ==(that)\n    if that.kind_of?(RibonucleicAcid)\n      that == self\n    else\n      old_equals(that)\n    end\n  end\nend\n\nclass DeoxyribonucleicAcid < RibonucleicAcid\n\n  def to_rna\n    RibonucleicAcid.new(@string.gsub("T","U"))\n  end\nend	2014-06-29 23:26:00	\N	0	1	2014-06-21 10:14:25	2014-06-21 10:14:25	96	rna-transcription.rb
186	37	025953d35354b7d6f1a85dad	pending	ruby	bob	class Bob\n\n\tWHATEVER = 'Whatever.'\n\tCHILLOUT = 'Woah, chill out!'\n\tSURE = 'Sure.'\n\tBE_THAT_WAY = 'Fine. Be that way.'\n\n\tprivate\n\n\tdef said_anything? (dialogue)\n\t\tnot (dialogue == nil or dialogue.strip.empty?)\n\tend\n\n\tdef yelling? (dialogue)\n\t\tdialogue.upcase == dialogue\n\tend\n\n\tdef questioning? (dialogue)\n\t\tdialogue.rstrip.end_with?('?')\n\tend\n\n\tpublic\n\n\tdef hey(dialogue = '')\n\t\treturn BE_THAT_WAY if not said_anything?(dialogue)\n\t\treturn CHILLOUT if yelling?(dialogue)\n\t\treturn SURE if questioning?(dialogue)\n\t\tWHATEVER\n\tend\nend	\N	\N	0	6	2014-07-01 09:14:22	2014-07-01 09:14:22	97	bob.rb
187	37	6d79109056cf2fb45729b694	superseded	ruby	bob	class Bob\n\n\tWHATEVER = 'Whatever.'\n\tCHILLOUT = 'Woah, chill out!'\n\tSURE = 'Sure.'\n\tBETHATWAY = 'Fine. Be that way.'\n\n\tdef hey(dialogue)\n\t\treturn BETHATWAY if dialogue == nil || dialogue.strip == ''\n\t\treturn CHILLOUT if dialogue.upcase == dialogue\n\t\treturn SURE if dialogue.rstrip.end_with?('?')\n\t\treturn WHATEVER\n\tend\nend	\N	\N	0	2	2014-07-06 02:30:07	2014-07-06 02:30:07	97	bob.rb
188	37	0ec2844e0187919866664ce6	superseded	ruby	bob	class Bob\n\n\tWHATEVER = 'Whatever.'\n\tCHILLOUT = 'Woah, chill out!'\n\tSURE = 'Sure.'\n\tBE_THAT_WAY = 'Fine. Be that way.'\n\n\tprivate\n\n\tdef saidAnything? (dialogue)\n\t\tnot (dialogue == nil || dialogue.strip.empty?)\n\tend\n\n\tdef yelling? (dialogue)\n\t\tdialogue.upcase == dialogue\n\tend\n\n\tdef questioning? (dialogue)\n\t\tdialogue.rstrip.end_with?('?')\n\tend\n\n\tpublic\n\n\tdef hey(dialogue = '')\n\t\treturn BE_THAT_WAY if not saidAnything?(dialogue)\n\t\treturn CHILLOUT if yelling?(dialogue)\n\t\treturn SURE if questioning?(dialogue)\n\t\treturn WHATEVER\n\tend\nend	\N	\N	0	5	2014-07-12 02:21:23	2014-07-12 02:21:23	97	bob.rb
189	37	b6240f6e504aa09ea6919c2d	superseded	ruby	bob	class Bob\n\n\tWHATEVER = 'Whatever.'\n\tCHILLOUT = 'Woah, chill out!'\n\tSURE = 'Sure.'\n\tBETHATWAY = 'Fine. Be that way.'\n\n\tdef hey(dialogue = '')\n\t\treturn BETHATWAY if dialogue == nil || dialogue.strip == ''\n\t\treturn CHILLOUT if dialogue.upcase == dialogue\n\t\treturn SURE if dialogue.rstrip.end_with?('?')\n\t\treturn WHATEVER\n\tend\nend	\N	\N	0	3	2014-07-13 07:56:39	2014-07-13 07:56:39	97	bob.rb
190	37	814acbe1326d40ac6e731be3	superseded	ruby	bob	class Bob\n\n\tWHATEVER = 'Whatever.'\n\tCHILLOUT = 'Woah, chill out!'\n\tSURE = 'Sure.'\n\tBE_THAT_WAY = 'Fine. Be that way.'\n\n\tprivate\n\n\tdef saidAnything? (dialogue)\n\t\tnot (dialogue == nil || dialogue.strip == '')\n\tend\n\n\tdef yelling? (dialogue)\n\t\tdialogue.upcase == dialogue\n\tend\n\n\tdef questioning? (dialogue)\n\t\tdialogue.rstrip.end_with?('?')\n\tend\n\n\tpublic\n\n\tdef hey(dialogue = '')\n\t\treturn BE_THAT_WAY if not saidAnything?(dialogue)\n\t\treturn CHILLOUT if yelling?(dialogue)\n\t\treturn SURE if questioning?(dialogue)\n\t\treturn WHATEVER\n\tend\nend	\N	\N	0	4	2014-07-16 03:59:38	2014-07-16 03:59:38	97	bob.rb
191	37	b361756b17cd80fdbee0d731	superseded	ruby	bob	class Bob\n\n\t@@whatever = 'Whatever.'\n\t@@chillOut = 'Woah, chill out!'\n\t@@sure = 'Sure.'\n\t@@beThatWay = 'Fine. Be that way.'\n\t\n\tdef hey \n\t\t@@beThatWay\n\tend\n\n\tdef hey(dialogue)\n\t\treturn @@beThatWay if dialogue == '' || dialogue == nil\n\t\treturn @@chillOut if dialogue.upcase == dialogue\n\t\treturn @@sure if dialogue.rstrip.end_with?('?')\n\t\treturn @@whatever\n\tend\nend	\N	\N	0	1	2014-07-16 10:37:04	2014-07-16 10:37:04	97	bob.rb
192	37	6162023b6e8b636e91d1e823	pending	ruby	anagram	require 'set'\n\nclass Anagram\n\n  def initialize(str)\n    @word = to_word(str)\n  end\n\n  def match(strs_to_test)\n    matches = strs_to_test.each_with_object(Set.new) do |str, matches|\n      word = to_word(str)\n      matches << word if anagram?(word)\n    end\n    matches.to_a\n  end\n\n  private\n\n  def to_word(str)\n    str.downcase\n  end\n\n  def anagram?(word_to_test)\n    return false if @word == word_to_test\n    sort_word(@word) == sort_word(word_to_test)\n  end\n\n  def sort_word(word)\n    word.chars.sort.join\n  end\nend	\N	\N	0	4	2014-06-17 16:34:25	2014-06-17 16:34:25	98	anagram.rb
193	37	b1f6d95a9733277e75f00c93	superseded	ruby	anagram	class Anagram\n\n  def initialize(word)\n    @word = word.downcase\n  end\n\n  def match(word_arr)\n    word_arr.each_with_object([]) do |word, array|\n      word.downcase\n      array << word if anagram?(word) && !array.include?(word)\n    end\n  end\n\n  private\n\n  def anagram?(word_to_test)\n    return false if @word == word_to_test\n    sorted_word = @word.chars.sort.join\n    sorted_word_to_test = word_to_test.chars.sort.join\n    sorted_word == sorted_word_to_test\n  end\nend	\N	\N	0	1	2014-06-28 19:02:03	2014-06-28 19:02:03	98	anagram.rb
194	37	62820a98b6eb711e5d2c0179	superseded	ruby	anagram	class Anagram\n\n  def initialize(str)\n    @word = str.downcase\n  end\n\n  def match(str_arr)\n    str_arr.each_with_object([]) do |str, array|\n      word = str.downcase\n      array << word if anagram?(word) && !array.include?(word)\n    end\n  end\n\n  private\n\n  def anagram?(word_to_test)\n    return false if @word == word_to_test\n    sort_word(@word) == sort_word(word_to_test)\n  end\n\n  def sort_word(word)\n    word.chars.sort.join\n  end\nend	\N	\N	0	2	2014-07-05 05:31:22	2014-07-05 05:31:22	98	anagram.rb
195	37	7fb3e509f56eca54300b924d	superseded	ruby	anagram	class Anagram\n\n  def initialize(str)\n    @word = to_word(str)\n  end\n\n  def match(str_arr)\n    str_arr.each_with_object([]) do |str, array|\n      word = to_word(str)\n      array << word if anagram?(word) && !array.include?(word)\n    end\n  end\n\n  private\n\n  def to_word(str)\n    str.downcase\n  end\n\n  def anagram?(word_to_test)\n    return false if @word == word_to_test\n    sort_word(@word) == sort_word(word_to_test)\n  end\n\n  def sort_word(word)\n    word.chars.sort.join\n  end\nend	\N	\N	0	3	2014-07-11 13:11:28	2014-07-11 13:11:28	98	anagram.rb
198	39	f38f6791881c15d47635bfa2	done	haskell	nucleotide-count	module DNA where\n\nimport Data.Map (Map, adjust, fromList)\nimport Data.List\n\ncount :: Char -> String -> Int\ncount c = length . filter (== validated c)\n  where validated n | n `elem` "ACGTU" = n\n                    | otherwise = error $ "invalid nucleotide '" ++ [n] ++ "'"\n\nnucleotideCounts :: String -> Map Char Int\nnucleotideCounts = foldl' enumerate startMap\n  where enumerate = flip $ adjust (+1)\n        startMap  = fromList $ zip "ACGT" (repeat 0)	2014-06-19 17:22:43	\N	0	1	2014-06-11 12:08:58	2014-06-11 12:08:58	101	nucleotide-count.hs
199	39	4de326d2e88f965261a5a054	done	ruby	grade-school	class School\n  def initialize\n    @records = {}\n  end\n\n  def db\n    @records\n  end\n\n  def add(name, grade)\n    if @records.empty?\n      @records[grade] = [name]\n    elsif @records.has_key?(grade)\n      @records[grade] << name\n    else\n      @records[grade] = [name]\n    end\n  end\n\n  def grade(grade)\n    students = @records[grade]\n    students.nil? ? [] : students\n  end\n\n  def sort\n    sorted = {}\n    keys = @records.keys.sort\n    keys.each do |key|\n      sorted[key] = @records[key].sort\n    end\n    sorted\n  end\nend	2014-05-09 05:56:08	\N	0	1	2014-05-05 00:25:57	2014-05-05 00:25:57	102	grade-school.rb
200	39	dccc611df0e029f868b05dff	superseded	haskell	word-count	module WordCount\n( wordCount\n) where\n\nimport           Control.Arrow ((&&&))\nimport           Data.Char     (isAlphaNum, toLower)\nimport           Data.List     (group, sort)\nimport           Data.Map.Lazy (Map, fromList)\n\nwordCount :: String -> Map String Int\nwordCount = fromList . wordCount'\n\nwordCount' :: String -> [(String, Int)]\nwordCount' = map (head &&& length) . group . sort . words'\n\nwords' :: String -> [String]\nwords' str = words $ map alphaNumOrSpace str\n  where alphaNumOrSpace c = if isAlphaNum c then toLower c else ' '	\N	\N	0	1	2014-05-05 04:26:55	2014-05-05 04:26:55	103	word-count.hs
201	39	04bb77ca91d32ae0058db873	superseded	haskell	word-count	module WordCount\n( wordCount\n) where\n\nimport           Control.Arrow ((&&&))\nimport           Data.Char     (isAlphaNum, toLower)\nimport           Data.Map.Lazy (Map, fromListWith)\n\nwordCount :: String -> Map String Int\nwordCount = fromListWith (+) . map (id &&& const 1) . words'\n\nwords' :: String -> [String]\nwords' = words . map alphaNumOrSpace\n  where alphaNumOrSpace c = if isAlphaNum c then toLower c else ' '	\N	\N	0	2	2014-06-10 10:16:53	2014-06-10 10:16:53	103	word-count.hs
202	39	7d0492968ca2178e30a142c7	done	haskell	word-count	{-# LANGUAGE TupleSections #-}\n\nmodule WordCount\n( wordCount\n) where\n\nimport           Data.Char       (isAlphaNum, toLower)\nimport           Data.Map.Strict (Map, fromListWith)\n\nwordCount :: String -> Map String Int\nwordCount = fromListWith (+) . map (,1) . words'\n\nwords' :: String -> [String]\nwords' = words . map alphaNumOrSpace\n  where alphaNumOrSpace c = if isAlphaNum c then toLower c else ' '	2014-06-24 22:12:20	\N	0	3	2014-06-16 13:42:54	2014-06-16 13:42:54	103	word-count.hs
203	39	ed1db2c78002f298e98defdd	done	clojure	roman-numerals	(ns roman\n  (:require [clojure.string :as str]))\n\n(def number-table\n  ["I"  1\n   "IV" 4\n   "V"  5\n   "IX" 9\n   "X"  10\n   "XL" 40\n   "L"  50\n   "XC" 90\n   "C"  100\n   "CD" 400\n   "D"  500\n   "CM" 900\n   "M"  1000])\n\n(def numbers\n  (reverse (cons '("" 0) (partition 2 number-table))))\n\n(defn most-significant [n]\n  (some (fn [[v i]]\n          (when (>= n i)\n            [v i])) numbers))\n\n(defn numerals [n]\n  (loop [remainder n\n         digits []]\n    (if (zero? remainder)\n      (str/join digits)\n      (let [[numerals amount] (most-significant remainder)]\n        (recur (- remainder amount) (conj digits numerals))))))	2014-05-08 00:21:31	\N	0	1	2014-05-01 19:31:49	2014-05-01 19:31:49	104	roman.clj
215	43	12e011fd68800b63b2f4d70e	superseded	ruby	bob	# Requires Ruby 2.0.\n\nrefinements = Module.new do # Don't use standard module syntax so we can store refinements in a local variable.\n  refine Object do # Refinement is on Object as message could be nil.\n    def quiet?;\n      return true if nil?\n      strip == ""\n    end;\n  end\n\n  refine String do\n    def shouting?; self == upcase; end\n    def asking?;   self =~ /\\?$/;  end\n  end\nend\n\nusing refinements\n\nclass Bob\n  def hey message\n    case\n    when message.quiet?\n      "Fine. Be that way!"\n    when message.shouting?\n      "Woah, chill out!"\n    when message.asking?\n      "Sure."\n    else\n      "Whatever."\n    end\n  end\nend	\N	\N	0	6	2014-07-28 13:07:25	2014-07-28 13:07:25	108	bob.rb
216	43	d523cbfce3a87eeb49deed52	superseded	haskell	beer-song	module Beer (sing, verse) where\nimport qualified Data.Char as Char\n\nthisMany :: Int -> String -> String\nthisMany n ending = case n of\n  1 -> "1 bottle of beer" ++ ending\n  0 -> "no more bottles of beer" ++ ending\n  n -> show n ++ " bottles of beer" ++ ending\n\noneLess :: Int -> String -> String\noneLess n ending = case n of\n  0 -> thisMany 99 $ ending\n  n -> thisMany (n - 1) $ ending\n\ndoSomethingWith :: Int -> String\ndoSomethingWith n = case n of\n  1 -> "Take it down and pass it around, "\n  0 -> "Go to the store and buy some more, "\n  n -> "Take one down and pass it around, "\n\nbeginLine :: String -> String\nbeginLine (h:t) = Char.toUpper h : t\n\nverse :: Int -> String\nverse bottles = concat [\n    beginLine $ thisMany bottles " on the wall, ",\n    thisMany bottles ".\\n",\n    doSomethingWith bottles,\n    oneLess bottles " on the wall" ++ ".\\n"\n  ]\n\nsing :: Int -> Int -> String\nsing from to = concat $ map interleave verses\n  where\n    interleave x = verse x ++ "\\n"\n    verses = [from, pred from .. to]	\N	\N	0	1	2014-07-26 17:18:31	2014-07-26 17:18:31	109	beer.hs
217	43	a6ce34f74505c49b6338a076	pending	haskell	beer-song	module Beer (sing, verse) where\nimport Data.Char (toUpper)\n\nthisMany :: Int -> String -> String\nthisMany n ending = case n of\n  1 -> "1 bottle of beer" ++ ending\n  0 -> "no more bottles of beer" ++ ending\n  n -> show n ++ " bottles of beer" ++ ending\n\noneLess :: Int -> String -> String\noneLess n ending = case n of\n  0 -> thisMany 99 $ ending\n  n -> thisMany (n - 1) $ ending\n\ndoSomethingWith :: Int -> String\ndoSomethingWith n = case n of\n  1 -> "Take it down and pass it around, "\n  0 -> "Go to the store and buy some more, "\n  n -> "Take one down and pass it around, "\n\nbeginLine :: String -> String\nbeginLine (h:t) = toUpper h : t\n\nverse :: Int -> String\nverse bottles = concat [\n    beginLine $ thisMany bottles " on the wall, ",\n    thisMany bottles ".\\n",\n    doSomethingWith bottles,\n    oneLess bottles " on the wall" ++ ".\\n"\n  ]\n\nsing :: Int -> Int -> String\nsing from to = interleave verses\n  where\n    interleave = unlines . map verse\n    verses = [from, pred from .. to]	\N	\N	0	2	2014-07-27 01:17:08	2014-07-27 01:17:08	109	beer.hs
218	43	dcde0afc465c31eda18a4cf4	superseded	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data, :left, :right\n\n  def initialize(data)\n    @data  = data\n    @left  = EmptyBst.new\n    @right = EmptyBst.new\n  end\n\n  def insert(value)\n    (value <=> data) == 1 ? insert_right(value) : insert_left(value)\n  end\n\n  def each(&block)\n    to_a.each(&block)\n  end\n\n  protected\n\n  def to_a\n    left.to_a + [data] + right.to_a\n  end\n\n  private\n\n  attr_writer :left, :right\n\n  def insert_left(value)\n    left.insert(value) or \n    self.left = Bst.new(value)\n  end\n\n  def insert_right(value)\n    right.insert(value) or \n    self.right = Bst.new(value)\n  end\nend\n\nclass EmptyBst\n  def data\n    nil\n  end\n\n  def insert(*)\n    false\n  end\n\n  def to_a\n    []\n  end\nend	\N	\N	0	1	2014-07-25 14:49:26	2014-07-25 14:49:26	110	bst.rb
204	39	c9ef9e339297678525e839ac	done	python	bob	import sys, re, unicodedata, operator\n\n# python does not have \\p-style unicode regex, see\n# http://stackoverflow.com/questions/1832893/python-regex-matching-unicode-properties/1836283\nclass Bob:\n    _lower=reduce(\\\n        operator.add,\n        filter(lambda u: unicodedata.category(u)=='Ll',\\\n                      map(unichr, range(sys.maxunicode))))\n\n    _responses=[\\\n        (re.compile(r"^\\s*$"),'Fine. Be that way!'),\\\n            (re.compile(r"^[^"+_lower+"]*[A-Z][^"+_lower+"]*$"),\\\n             'Woah, chill out!'),\\\n            (re.compile(r".*\\?$"),"Sure."),\\\n            (re.compile(r".*"), "Whatever.") ]\n    def hey(self, query):\n        return filter(lambda x: x[0].match(query), self._responses)[0][1]	2014-05-30 11:42:23	\N	0	1	2014-05-23 15:12:06	2014-05-23 15:12:06	105	bob.py
205	39	8ab1c2abe83cf12e842e1a57	done	ruby	strain	class Array\n\n  def keep\n    result = []\n\n    self.each do |value| \n      result << value if yield(value)\n    end\n    result\n  end\n\n  def discard\n    result = []\n\n    self.each do |value|\n      result << value if !yield(value)\n    end\n    result\n  end\nend	2014-04-30 02:48:26	\N	0	1	2014-04-24 11:51:56	2014-04-24 11:51:56	106	strain.rb
206	39	d35306a652c40c8003d24ed6	superseded	ruby	raindrops	module Raindrops\n  \n  def self.convert no\n    response = ""\n    response << "Pling" if (no % 3 == 0)\n    response << "Plang" if (no % 5 == 0)\n    response << "Plong" if (no % 7 == 0)\n    response = String(no) if response.empty?\n    response\n  end\n  \nend	\N	\N	0	1	2014-04-26 17:54:04	2014-04-26 17:54:04	107	raindrops.rb
207	39	5a78ad418f2ac803c2cacbdf	superseded	ruby	raindrops	module Raindrops\n  \n  def self.convert no\n    String(RaindropNumber.new(no))\n  end\n  \n  class RaindropNumber\n    \n    def initialize no\n      @no = no\n    end\n    \n    def to_s\n      response = ""\n      response << "Pling" if pling?\n      response << "Plang" if plang?\n      response << "Plong" if plong?\n      response = String(@no) if response.empty?\n      response\n    end\n    \n    private\n    \n    def pling?\n      @no % 3 == 0\n    end\n    \n    def plang?\n      @no % 5 == 0\n    end\n    \n    def plong?\n      @no % 7 == 0\n    end\n    \n  end\n  \nend	\N	\N	0	2	2014-05-07 06:07:10	2014-05-07 06:07:10	107	raindrops.rb
208	39	6f0577014ceec1ee6e25426f	done	ruby	raindrops	module Raindrops\n  \n  def self.convert no\n    String(RaindropNumber.new(no))\n  end\n  \n  class RaindropNumber\n    \n    def initialize no\n      @no = no\n    end\n    \n    def to_s\n      response = ""\n      response << "Pling" if pling?\n      response << "Plang" if plang?\n      response << "Plong" if plong?\n      response.empty? ? String(@no) : response\n    end\n    \n    private\n    \n    def pling?\n      @no % 3 == 0\n    end\n    \n    def plang?\n      @no % 5 == 0\n    end\n    \n    def plong?\n      @no % 7 == 0\n    end\n    \n  end\n  \nend	2014-06-18 14:56:30	\N	0	3	2014-06-12 14:51:30	2014-06-12 14:51:30	107	raindrops.rb
209	43	443fb85931f35997352d60fe	superseded	ruby	bob	# Requires Ruby 2.0.\nrequire "active_support/all" # Install activesupport to test.\n\nrefinements = Module.new do # Don't use standard module syntax so we can store refinements in a local variable.\n    refine Object do # Refinement is on Object as message could be nil.\n        def quiet?; blank?; end;\n    end\n\n    refine String do\n        def shouting?; self == upcase; end\n        def asking?;   ends_with? "?"; end\n    end\nend\n\nusing refinements\n\nclass Bob\n    def hey message\n        case\n        when message.quiet?\n            "Fine. Be that way!"\n        when message.shouting?\n            "Woah, chill out!"\n        when message.asking?\n            "Sure."\n        else\n            "Whatever."\n        end\n    end\n\nend	\N	\N	0	4	2014-07-24 16:07:19	2014-07-24 16:07:19	108	bob.rb
210	43	91095f7cf69c88ca5d88f26f	superseded	ruby	bob	class Bob\n    def hey message\n        case\n        when message.strip == "" # What message?\n            "Fine. Be that way!"\n        when message == message.upcase # Message is all caps.\n            "Woah, chill out!"\n        when message =~ /\\?$/ # Message is a question.\n            "Sure."\n        else\n            "Whatever."\n        end\n    end\nend	\N	\N	0	1	2014-07-24 18:03:23	2014-07-24 18:03:23	108	bob.rb
211	43	2913dca7bc3739c13e36061e	superseded	ruby	bob	class Bob\n    def hey message\n        case\n        when !message || message.strip == "" # What message?\n            "Fine. Be that way!"\n        when message == message.upcase # Message is all caps.\n            "Woah, chill out!"\n        when message.ends_with? "?" # Message is a question.\n            "Sure."\n        else\n            "Whatever."\n        end\n    end\nend	\N	\N	0	2	2014-07-25 07:08:22	2014-07-25 07:08:22	108	bob.rb
212	43	0b89dee808925dc21471f6a8	pending	ruby	bob	class Bob\n  class Message < String\n    def quiet?;    strip == "";    end\n    def shouting?; self == upcase; end\n    def asking?;   self =~ /\\?$/;  end\n  end\n  def hey raw_message\n    message = Message.new raw_message\n    case\n    when message.quiet?\n      "Fine. Be that way!"\n    when message.shouting?\n      "Woah, chill out!"\n    when message.asking?\n      "Sure."\n    else\n      "Whatever."\n    end\n  end\nend	\N	\N	0	7	2014-07-25 22:08:27	2014-07-25 22:08:27	108	bob.rb
213	43	9ce9a548fb3e97883d0fd61e	superseded	ruby	bob	require "active_support/all" # Install activesupport to test.\n\nclass Bob\n    def hey message\n        case\n        when message.blank? # What message?\n            "Fine. Be that way!"\n        when message == message.upcase # Message is all caps.\n            "Woah, chill out!"\n        when message.ends_with?("?") # Message is a question.\n            "Sure."\n        else\n            "Whatever."\n        end\n    end\nend	\N	\N	0	3	2014-07-26 13:13:00	2014-07-26 13:13:00	108	bob.rb
214	43	9bf1009013c579e73db34685	superseded	ruby	bob	# Requires Ruby 2.0.\n\nrefinements = Module.new do # Don't use standard module syntax so we can store refinements in a local variable.\n    refine Object do # Refinement is on Object as message could be nil.\n        def quiet?;\n            return true if nil?\n            strip == ""\n        end;\n    end\n\n    refine String do\n        def shouting?; self == upcase; end\n        def asking?;   self =~ /\\?$/;  end\n    end\nend\n\nusing refinements\n\nclass Bob\n    def hey message\n        case\n        when message.quiet?\n            "Fine. Be that way!"\n        when message.shouting?\n            "Woah, chill out!"\n        when message.asking?\n            "Sure."\n        else\n            "Whatever."\n        end\n    end\n\nend	\N	\N	0	5	2014-07-26 17:55:20	2014-07-26 17:55:20	108	bob.rb
219	43	4ee5255d3b00c1a98b5a43fc	done	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data, :left, :right\n\n  def initialize(data)\n    @data  = data\n    @left  = EmptyBst.new\n    @right = EmptyBst.new\n  end\n\n  def insert(value)\n    value > data ? insert_right(value) : insert_left(value)\n  end\n\n  def each(&block)\n    to_a.each(&block)\n  end\n\n  protected\n\n  def to_a\n    left.to_a + [data] + right.to_a\n  end\n\n  private\n\n  attr_writer :left, :right\n\n  def insert_left(value)\n    left.insert(value) or \n    self.left = Bst.new(value)\n  end\n\n  def insert_right(value)\n    right.insert(value) or \n    self.right = Bst.new(value)\n  end\nend\n\nclass EmptyBst\n  def data\n    nil\n  end\n\n  def insert(*)\n    false\n  end\n\n  def to_a\n    []\n  end\nend	2014-07-28 08:03:03	\N	0	2	2014-07-26 23:05:04	2014-07-26 23:05:04	110	bst.rb
220	43	c78b41d0f762816c09db6517	superseded	javascript	meetup	Function.prototype.bindRight = function() {\n  var args = [].slice.call(arguments);\n  return function() {\n    return this.apply(this, [].slice.call(arguments).concat(args));\n  }.bind(this);\n};\n\nfunction getDay (dates, day, nth) {\n  var dates = dates.filter(function(date) {\n    return date.getDay() == day;\n  });\n  return dates[nth != null ? nth : dates.length - 1];\n};\n\nfunction setDates(year, month, a, b) {\n  return Array\n    .apply(null, {length: b - a + 1})\n    .map(function(day, i) {\n      return day = new Date(year, month, a + i);\n    }, this)\n};\n\nfunction Meetup(month, year) {\n  var maxDays = new Date(year, month + 1, 0).getDate();\n  this.dates = [year, month];\n  this.setDates = setDates.bind(this, year, month);\n  this.getTeens = getDay.bind(this, this.setDates(13, 19)).bindRight(0);\n  this.getFirst = getDay.bind(this, this.setDates(1, maxDays)).bindRight(0);\n  this.getSecond = this.getFirst.bindRight(1);\n  this.getThird = this.getFirst.bindRight(2);\n  this.getFourth = this.getFirst.bindRight(3);\n  this.getLast = getDay.bind(this, this.setDates(1, maxDays));\n};\n\nMeetup.prototype = {\n  monteenth: function() {return this.getTeens(1)},\n  tuesteenth: function() {return this.getTeens(2)},\n  wednesteenth: function() {return this.getTeens(3)},\n  thursteenth: function() {return this.getTeens(4)},\n  friteenth: function() {return this.getTeens(5)},\n  saturteenth: function() {return this.getTeens(6)},\n  sunteenth: function() {return this.getTeens(0)},\n  firstMonday: function() {return this.getFirst(1)},\n  firstTuesday: function() {return this.getFirst(2)},\n  firstWednesday: function() {return this.getFirst(3)},\n  firstThursday: function() {return this.getFirst(4)},\n  firstFriday: function() {return this.getFirst(5)},\n  firstSaturday: function() {return this.getFirst(6)},\n  firstSunday: function() {return this.getFirst(0)},\n  secondMonday: function() {return this.getSecond(1)},\n  secondTuesday: function() {return this.getSecond(2)},\n  secondWednesday: function() {return this.getSecond(3)},\n  secondThursday: function() {return this.getSecond(4)},\n  secondFriday: function() {return this.getSecond(5)},\n  secondSaturday: function() {return this.getSecond(6)},\n  secondSunday: function() {return this.getSecond(0)},\n  thirdMonday: function() {return this.getThird(1)},\n  thirdTuesday: function() {return this.getThird(2)},\n  thirdWednesday: function() {return this.getThird(3)},\n  thirdThursday: function() {return this.getThird(4)},\n  thirdFriday: function() {return this.getThird(5)},\n  thirdSaturday: function() {return this.getThird(6)},\n  thirdSunday: function() {return this.getThird(0)},\n  fourthMonday: function() {return this.getFourth(1)},\n  fourthTuesday: function() {return this.getFourth(2)},\n  fourthWednesday: function() {return this.getFourth(3)},\n  fourthThursday: function() {return this.getFourth(4)},\n  fourthFriday: function() {return this.getFourth(5)},\n  fourthSaturday: function() {return this.getFourth(6)},\n  fourthSunday: function() {return this.getFourth(0)},\n  lastMonday: function() {return this.getLast(1)},\n  lastTuesday: function() {return this.getLast(2)},\n  lastWednesday: function() {return this.getLast(3)},\n  lastThursday: function() {return this.getLast(4)},\n  lastFriday: function() {return this.getLast(5)},\n  lastSaturday: function() {return this.getLast(6)},\n  lastSunday: function() {return this.getLast(0)}\n};\n\nmodule.exports = Meetup;	\N	\N	0	1	2014-07-24 12:42:42	2014-07-24 12:42:42	111	meetup.js
221	43	432f68bd7559abd1206673db	pending	javascript	meetup	function Meetup(m, y) {\n  this.getDatesInRange = getDatesInRange.bind(this, y, m);\n  this.monthLength = new Date(y, m + 1, 0).getDate();\n}\n\nMeetup.prototype = (function(modifiers, days) {\n  return reduceArray(modifiers, defineProperties.bind(null, days));\n})(['first', 'second', 'third', 'fourth', 'last', 'teenth'],\n  ['Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur']);\n\nmodule.exports = Meetup;\n\n/* helper functions */\n\nfunction getDatesInRange(year, month, range) {\n  return Array\n    .apply(null, {length: 1 + range[1] - range[0]})\n    .map(function(_, index) {\n      return new Date(year, month, range[0] + index);\n    });\n};\n\nfunction reduceArray(array, callback) {\n  return Array({}).concat(array).reduce(callback);\n};\n\nfunction defineProperties(days, obj, key, index) {\n  return Object.defineProperties(obj, reduceArray(days,\n    defineProperty.bind(null, getMethodName(key, index < 6),\n      (index == 5)? 'last' :(index == 6)? 1.7 :(index - 1))));\n};\n\nfunction defineProperty(getKey, n, obj, key, index) {\n  return Object.defineProperty(obj, getKey(key), {\n    value: {\n      value: function() {\n        return this.getDatesInRange(getRange(n, this.monthLength))\n          .filter(function(day) {\n            return day.getDay() == (index - 1);\n          })[0];\n      }\n    },\n    enumerable: true\n  })\n};\n\nfunction getMethodName(modifier, condition) {\n  return condition?\n    function(key) {\n      return modifier.concat(key).concat('day');\n    }\n    :function(key) {\n      return key.toLowerCase().concat(modifier);\n    };\n};\n\nfunction getRange(n, last) {\n  var n = Math.ceil(n*7) + 7 || last;\n  return [n - 6, n];\n};	\N	\N	0	2	2014-07-25 19:59:08	2014-07-25 19:59:08	111	meetup.js
222	43	b6dbb5ed4c10895722303ac0	superseded	ruby	circular-buffer	class CircularBuffer\n  attr_accessor :head\n\n  def initialize(buffer_length)\n    @buffer_length = buffer_length\n  end\n\n  def read\n    raise BufferEmptyException if empty?\n\n    datum = head.datum\n    @head = head.link\n    datum\n  end\n\n  def write(datum)\n    raise BufferFullException if full?\n    return unless datum\n\n    push(datum)\n  end\n\n  def write!(datum)\n    @head = head.link\n    push(datum)\n  end\n\n  def clear\n    @head = nil\n  end\n\n  private\n\n  def empty?\n    !head\n  end\n\n  def full?\n    return node_count == @buffer_length\n  end\n\n  def push(datum)\n    return @head = Node.new(datum) unless head\n\n    last = fast_forward\n    last.link = Node.new(datum)\n  end\n\n  def fast_forward(&block)\n    node = head\n    while node.link\n      node = node.link\n      yield if block_given?\n    end\n    node\n  end\n\n  def node_count\n    return 0 if !head\n    k = 1\n    fast_forward { k += 1 }\n    k\n  end\n\nend\n\nclass Node\n  attr_reader :datum, :link\n\n  def initialize(datum, link=nil)\n    @datum = datum\n    @link = link\n  end\n\n  def link=(node)\n    @link = node\n  end\n\n  def datum=(datum)\n    @datum = datum\n  end\n\nend\n\nclass BufferEmptyException < StandardError; end\nclass BufferFullException < StandardError; end	\N	\N	0	2	2014-07-25 18:18:00	2014-07-25 18:18:00	112	circular_buffer.rb
223	43	e027993b669f84e21a69a158	superseded	ruby	circular-buffer	class CircularBuffer\n  def initialize(buffer_length)\n    @buffer_length = buffer_length\n    clear\n  end\n\n  def clear\n    @buffer = []\n  end\n\n  def read\n    raise BufferEmptyException if @buffer.empty?\n    @buffer.shift\n  end\n\n  def write(datum)\n    raise BufferFullException if @buffer.length == @buffer_length\n    @buffer << datum if datum\n  end\n\n  def write!(datum)\n    @buffer.shift\n    @buffer << datum\n  end\nend\n\nclass BufferEmptyException < StandardError; end\nclass BufferFullException < StandardError; end	\N	\N	0	1	2014-07-25 22:09:40	2014-07-25 22:09:40	112	circular_buffer.rb
224	43	9c65402a6ea5b41a1daf588e	superseded	ruby	circular-buffer	class BufferEmptyException < StandardError; end\nclass BufferFullException < StandardError; end\n\nclass CircularBuffer\n  attr_accessor :head\n\n  def initialize(buffer_length)\n    @buffer_length = buffer_length\n  end\n\n  def read\n    raise BufferEmptyException if empty?\n\n    datum = head.datum\n    @head = head.link\n    datum\n  end\n\n  def write(datum)\n    raise BufferFullException if full?\n\n    datum && push(datum)\n  end\n\n  def write!(datum)\n    @head = head.link\n    datum && push(datum)\n  end\n\n  def clear\n    @head = nil\n  end\n\n  private\n\n  def empty?\n    !head\n  end\n\n  def full?\n    node_count == @buffer_length\n  end\n\n  def push(datum)\n    return @head = Node.new(datum) if empty?\n\n    last = fast_forward\n    last.link = Node.new(datum)\n  end\n\n  def fast_forward(&block)\n    current = head\n    while current.link\n      current = current.link\n      yield if block_given?\n    end\n    current\n  end\n\n  def node_count\n    return 0 if empty?\n\n    k = 1\n    fast_forward { k += 1 }\n    k\n  end\n\nend\n\nclass Node\n  attr_accessor :datum, :link\n\n  def initialize(datum, link=nil)\n    @datum = datum\n    @link = link\n  end\nend	\N	\N	0	3	2014-07-27 06:08:23	2014-07-27 06:08:23	112	circular_buffer.rb
225	43	0c67c39116761f84c5e305d4	done	ruby	circular-buffer	BufferFullException = Class.new(StandardError)\nBufferEmptyException = Class.new(StandardError)\n\nNode = Struct.new(:datum, :link)\n\nclass CircularBuffer\n  attr_accessor :head\n\n  def initialize(buffer_length)\n    @buffer_length = buffer_length\n  end\n\n  def read\n    raise BufferEmptyException if empty?\n\n    datum = head.datum\n    @head = head.link\n    datum\n  end\n\n  def write(datum)\n    raise BufferFullException if full?\n\n    datum && push(datum)\n  end\n\n  def write!(datum)\n    @head = head.link\n    datum && push(datum)\n  end\n\n  def clear\n    @head = nil\n  end\n\n  private\n\n  def empty?\n    !head\n  end\n\n  def full?\n    node_count == @buffer_length\n  end\n\n  def push(datum)\n    return @head = Node.new(datum) if empty?\n\n    last.link = Node.new(datum)\n  end\n\n  def each(&block)\n    current = head\n    while current.link\n      current = current.link\n      yield if block_given?\n    end\n    current\n  end\n\n  def last\n    each\n  end\n\n  def node_count\n    return 0 if empty?\n\n    k = 1\n    each { k += 1 }\n    k\n  end\n\nend	2014-07-28 19:48:32.313511	\N	0	4	2014-07-27 07:41:54	2014-07-27 07:41:54	112	circular_buffer.rb
226	43	cd6076bf50ac5d58b34a4296	pending	objective-c	bob	//\n//  Bob.m\n//  bob\n//\n//  Created by Arjan van der Gaag on 21/12/13.\n//  Copyright (c) 2013 orange • cubed. All rights reserved.\n//\n\n#import "Bob.h"\n\n@implementation Bob\n\n- (NSString *) hey:(NSString *)input {\n    if ([self isSilence:input]) {\n        return @"Fine, be that way.";\n    } else if ([self isShouting: input]) {\n        return @"Woah, chill out!";\n    } else if ([self isQuestion: input]) {\n        return @"Sure.";\n    } else {\n        return @"Whatever.";\n    }\n}\n\n- (BOOL) isQuestion: (NSString *)input {\n    return [input hasSuffix:@"?"];\n}\n\n- (BOOL) isShouting: (NSString *)input {\n    return [self containsCapitals: input] && [input isEqualToString: [input uppercaseString]];\n}\n\n- (BOOL) containsCapitals: (NSString *)input {\n    NSCharacterSet *upperCaseSet = [NSCharacterSet uppercaseLetterCharacterSet];\n    NSRange upperCaseRange = [input rangeOfCharacterFromSet: upperCaseSet];\n    return upperCaseRange.location != NSNotFound;\n}\n\n- (BOOL) isSilence: (NSString *)input {\n    NSCharacterSet *charSet = [NSCharacterSet whitespaceAndNewlineCharacterSet];\n    NSString *trimmedInput = [input stringByTrimmingCharactersInSet: charSet];\n    return [trimmedInput isEqualToString:@""];\n}\n\n@end	\N	\N	0	1	2014-07-27 08:33:59	2014-07-27 08:33:59	113	bob.m
227	45	e2a9f516f8262bbbc4b860b3	superseded	ruby	beer-song	class Beer\n\n  attr_reader :containers, :pronouns\n  attr_accessor :beverage\n\n  def initialize\n    self.containers = %w{bottles bottle}\n    self.pronouns = %w{one it}\n    self.beverage = "beer"\n  end\n\n  def sing(first, last=0)\n    first.downto(last).collect { |num| verse(num) }.join("\\n") + "\\n"\n  end\n\n  def verse(num)\n    num = Counter.new(num)\n    [remaining(num), action(num), ""].join("\\n")\n  end\n\n  def self.song(first=99)\n    new.sing(first)\n  end\n\n  # @array container_list - [plural version, singular version]\n  def containers=(container_list)\n    @containers = HashWithIntegerAccess.new(container_list[0])\n    @containers[1] = container_list[1]\n  end\n\n  private\n  # @array pronoun_list - [generic version, specific version]\n  def pronouns=(pronoun_list)\n    @pronouns = HashWithIntegerAccess.new(pronoun_list[0])\n    @pronouns[1] = pronoun_list[1]\n  end\n\n  def remaining(num)\n    "#{num.to_s.capitalize} #{containers[num]} of #{beverage} on the wall, #{num} #{containers[num]} of #{beverage}."\n  end\n\n  def action(num)\n    if num == 0\n      return "Go to the store and buy some more, 99 #{containers[99]} of #{beverage} on the wall."\n    end\n\n    "Take #{pronouns[num]} down and pass it around, #{num-1} #{containers[num-1]} of #{beverage} on the wall."\n  end\n\n  class Counter\n    attr_accessor :i\n\n    def initialize(i)\n      self.i = i\n    end\n\n    def -(other)\n      Counter.new(i - other)\n    end\n\n    def to_i\n      i\n    end\n\n    def to_s\n      return "no more" if i == 0\n      i.to_s\n    end\n\n    def ==(other)\n      i == other\n    end\n  end\n\n  class HashWithIntegerAccess < Hash\n    def [](num)\n      super(num.to_i)\n    end\n\n    def []=(num, value)\n      super(num.to_i, value)\n    end\n  end\nend\n\nclass Fixnum\n  def method_missing(name, *args, &blk)\n    if name.to_s.end_with? "_of"\n      container = name[0..-4]\n      beer = Beer.new\n      beer.beverage = args.first\n      beer.containers = [container, container[0..-2]]\n      beer.sing(self)\n    else\n      super(name, *args, &blk)\n    end\n  end\nend	\N	\N	0	1	2014-01-19 07:41:13	2014-01-19 07:41:13	114	beer-song.rb
228	45	c99e8a63aabc3b9bf5eeb108	superseded	ruby	beer-song	class Beer\n\n  def self.song(first=99)\n    new.sing(first)\n  end\n\n  def sing(first, last=0)\n    first.downto(last).collect { |beer_count| verse(beer_count) }.join("\\n") + "\\n"\n  end\n\n  def verse(beer_count)\n    remaining = remaining(beer_count)\n    action = action(beer_count)\n    result = remaining(beer_count-1)\n    "#{remaining.capitalize} on the wall, #{remaining}.\\n#{action}, #{result} on the wall.\\n"\n  end\n\n  private\n\n  def remaining(beer_count)\n    beer_count = 99 if beer_count < 0\n    beer_count = "no more" if beer_count == 0\n\n    "#{beer_count} #{containers(beer_count)} of beer"\n  end\n\n  def action(beer_count)\n    if beer_count == 0\n      return "Go to the store and buy some more"\n    end\n\n    "Take #{pronouns(beer_count)} down and pass it around"\n  end\n\n  def containers(beer_count)\n    return "bottle" if beer_count == 1\n    "bottles"\n  end\n\n  def pronouns(beer_count)\n    return "it" if beer_count == 1\n    "one"\n  end\nend	\N	\N	0	2	2014-02-23 14:33:42	2014-02-23 14:33:42	114	beer-song.rb
229	45	ed895119b59bef259080df18	superseded	ruby	beer-song	class Beer\n\n  def self.song(first=99)\n    new.sing(first)\n  end\n\n  def sing(first, last=0)\n    first.downto(last).collect { |beer_count| verse(beer_count) }.join("\\n") + "\\n"\n  end\n\n  def verse(beer_count)\n    remaining = remaining(beer_count)\n    action = action(beer_count)\n    result = remaining(beer_count-1)\n    "#{remaining.capitalize} on the wall, #{remaining}.\\n#{action}, #{result} on the wall.\\n"\n  end\n\n  private\n\n  def remaining(beer_count)\n    beer_count = 99 if beer_count < 0\n    beer_count = "no more" if beer_count == 0\n\n    "#{beer_count} #{container(beer_count)} of beer"\n  end\n\n  def action(beer_count)\n    if beer_count == 0\n      return "Go to the store and buy some more"\n    end\n\n    "Take #{pronoun(beer_count)} down and pass it around"\n  end\n\n  def container(beer_count)\n    return "bottle" if beer_count == 1\n    "bottles"\n  end\n\n  def pronoun(beer_count)\n    return "it" if beer_count == 1\n    "one"\n  end\nend	\N	\N	0	3	2014-04-03 10:52:03	2014-04-03 10:52:03	114	beer-song.rb
230	45	2fa8d41e77e69cf78db98bad	done	ruby	beer-song	class Beer\n\n  def self.song(first=99)\n    new.sing(first)\n  end\n\n  def sing(first, last=0)\n    first.downto(last).collect { |beer_count| verse(beer_count) }.join("\\n") + "\\n"\n  end\n\n  def verse(beer_count)\n    original = dimension(beer_count)\n    action = action(beer_count)\n    result = dimension(beer_count-1)\n    [\n      "#{original.capitalize} on the wall, #{original}.",\n      "#{action}, #{result} on the wall.",\n      ""\n    ].join("\\n")\n  end\n\n  private\n\n  def dimension(beer_count)\n    beer_count = 99 if beer_count < 0\n    beer_count = "no more" if beer_count == 0\n\n    "#{beer_count} #{container(beer_count)} of beer"\n  end\n\n  def action(beer_count)\n    if beer_count == 0\n      return "Go to the store and buy some more"\n    end\n\n    "Take #{pronoun(beer_count)} down and pass it around"\n  end\n\n  def container(beer_count)\n    return "bottle" if beer_count == 1\n    "bottles"\n  end\n\n  def pronoun(beer_count)\n    return "it" if beer_count == 1\n    "one"\n  end\nend	2014-06-29 17:36:48	\N	0	4	2014-06-25 17:41:19	2014-06-25 17:41:19	114	beer-song.rb
231	47	51b18b1b4b1eef81d797337f	pending	elixir	pythagorean-triplet	defmodule Triplet do\n\n  import Bitwise, only: [>>>: 2, <<<: 2]\n\n  @doc """\n  Calculates sum of a given triplet of integers.\n  """\n  @spec sum([non_neg_integer]) :: non_neg_integer\n  def sum(triplet) do\n    Enum.reduce triplet, 0, &(&1+&2)\n  end\n\n  @doc """\n  Calculates product of a given triplet of integers.\n  """\n  @spec product([non_neg_integer]) :: non_neg_integer\n  def product(triplet) do\n    Enum.reduce triplet, 1, &(&1*&2)\n  end\n\n  defp order_triplet([a, b, c]) when a > b, do: order_triplet([b, a, c])\n  defp order_triplet([a, b, c]) when b > c, do: order_triplet([a, c, b])\n  defp order_triplet([a, b, c]), do: [a, b, c]\n\n  @doc """\n  Determines if a given triplet is pythagorean. That is, do the squares of a and b add up to the square of c?\n  """\n  @spec pythagorean?([non_neg_integer]) :: boolean\n  def pythagorean?([a, b, c]) do\n    [a, b, c] = order_triplet([a, b, c])\n    a*a + b*b == c*c\n  end\n\n  @doc """\n  Generates a list of pythagorean triplets from a given min (or 1 if no min) to a given max.\n  """\n  @spec generate(non_neg_integer, non_neg_integer) :: [list(non_neg_integer)]\n  def generate(min, max) do\n    maxsq = max*max\n    lc a inlist Enum.to_list(min..max), b inlist Enum.to_list(a..max), a*a+b*b <= maxsq do\n      [a, b, isqrt(a*a+b*b)]\n    end\n    |> Enum.filter(&(pythagorean?(&1)))\n  end\n\n  def isqrt(n) do\n    # Initial guess -> 2 ^ (|_ log2(n) _| / 2)\n    approx = 1 <<< div(ilog2(n), 2)\n    Float.floor(isqrt(n, approx))\n  end\n\n  defp isqrt(n, x) do\n    new_x = (x + n/x) / 2\n    if abs(x - new_x) <= 0.4 do\n      new_x\n    else\n      isqrt(n, new_x)\n    end\n  end\n\n  defp ilog2(n) do\n    m = n >>> 1\n    if m == 0 do\n      1\n    else\n      1 + ilog2 m\n    end\n  end\n\n  @doc """\n  Generates a list of pythagorean triplets from a given min to a given max, whose values add up to a given sum.\n  """\n  @spec generate(non_neg_integer, non_neg_integer, non_neg_integer) :: [list(non_neg_integer)]\n  def generate(min, max, sum) do\n    generate(min, max)\n    |> Enum.filter(fn [a,b,c] -> a+b+c == sum end)\n  end\nend	\N	\N	0	1	2014-05-21 07:40:41	2014-05-21 07:40:41	115	pythagorean_triplet.exs
232	47	3774e34161ad20ccd01590e9	superseded	ruby	anagram	class Anagram\n  attr_reader :word\n  \n  def initialize word\n    @word = word.downcase\n  end\n  \n  def match wordlist\n    wordlist.select { |word| anagram_of?(Anagram.new(word)) }\n  end\n  \n  private\n  def sorted_chars\n    @word.downcase.chars.sort\n  end\n\n  def anagram_of? anagram\n    @word != anagram.word &&\n    sorted_chars == anagram.send(:sorted_chars)\n  end\n\nend	\N	\N	0	2	2014-05-21 09:30:06	2014-05-21 09:30:06	116	anagram.rb
233	47	b0b366ff87e7600c290f1d97	done	ruby	anagram	class Anagram\n  attr_reader :word\n  \n  def initialize word\n    @word = word.downcase\n  end\n  \n  def match wordlist\n    wordlist.select { |word| anagram_of?(Anagram.new(word)) }\n  end\n  \n  protected\n  def sorted_chars\n    @word.chars.sort\n  end\n\n  private\n  def anagram_of? anagram\n    @word != anagram.word &&\n    sorted_chars == anagram.sorted_chars\n  end\n\nend	2014-06-09 10:13:45	\N	0	4	2014-06-01 02:06:25	2014-06-01 02:06:25	116	anagram.rb
234	47	5a2372af6d1e8a332d9b35a2	superseded	ruby	anagram	class Anagram\n  attr_reader :word\n  \n  def initialize word\n    @word = word.downcase\n  end\n  \n  def match wordlist\n    wordlist.select { |word| anagram_of?(Anagram.new(word)) }\n  end\n  \n  private\n  def sorted_chars\n    @word.chars.sort\n  end\n\n  def anagram_of? anagram\n    @word != anagram.word &&\n    sorted_chars == anagram.send(:sorted_chars)\n  end\n\nend	\N	\N	0	3	2014-07-04 17:47:56	2014-07-04 17:47:56	116	anagram.rb
235	47	eceebd18aff7e9c878c8b2c7	superseded	ruby	anagram	class Anagram\n  attr_reader :word\n  \n  def initialize word\n    @word = word\n  end\n  \n  def match wordlist\n    wordlist.each_with_object([]) do |word, matches|\n      matches << word if self.anagram_of?(Anagram.new(word))\n    end\n  end\n  \n  def anagram_of? anagram\n    return false if @word.downcase == anagram.word.downcase\n    @word.downcase.chars.sort == anagram.word.downcase.chars.sort\n  end\nend	\N	\N	0	1	2014-07-13 15:18:50	2014-07-13 15:18:50	116	anagram.rb
236	47	41f83a64aaebe959d132a332	superseded	javascript	beer-song	(function(){\n\t'use strict';\n\n\tfunction Beer(){}\n\n\n\n\tBeer.prototype.verse = function(numBottles){\n\t\tif(numBottles === 0){\n\t\t\treturn "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n";\n\t\t}\n\t\tif(numBottles === 1){\n\t\t\treturn "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n";\n\t\t}\n\t\treturn numBottles+" bottles of beer on the wall, "+numBottles+" bottles of beer.\\nTake one down and pass it around, "+pluralBottles(numBottles-1)+" of beer on the wall.\\n";\n\t};\n\n\tBeer.prototype.sing = function(start, end){\n\t\t\n\t\tend = typeof end !== 'undefined' ? end : 0;\n\t\tvar singVerses = [];\n\t\twhile(start >= end){\n\t\t\tsingVerses.push(this.verse(start));\n\t\t\tstart --;\n\t\t}\n\t\treturn singVerses.join("\\n");\n\t};\n\n\tfunction pluralBottles(num){\n        if(num > 1){\n            return num +" bottles";\n        }\n        return num+" bottle";\n    }\n    \n\tmodule.exports = Beer;\n\n})();	\N	\N	0	2	2014-05-25 13:57:46	2014-05-25 13:57:46	117	beer-song.js
237	47	122126e8a22f94832f752900	done	javascript	beer-song	(function(){\n\t'use strict';\n\n\tfunction Beer(){}\n\n\tBeer.prototype.verse = function(numBottles){\n\t\tif(numBottles === 0){\n\t\t\treturn "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n";\n\t\t}\n\t\tif(numBottles === 1){\n\t\t\treturn "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n";\n\t\t}\n\t\treturn numBottles+" bottles of beer on the wall, "+numBottles+" bottles of beer.\\nTake one down and pass it around, "+pluralBottles(numBottles-1)+" of beer on the wall.\\n";\n\t};\n\n\tBeer.prototype.sing = function(start, to){\n\t\tvar end = to || 0;\n\t\tvar singVerses = [];\n\t\twhile(start >= end){\n\t\t\tsingVerses.push(this.verse(start));\n\t\t\tstart --;\n\t\t}\n\t\treturn singVerses.join("\\n");\n\t};\n\n\tfunction pluralBottles(num){\n        return num+" bottle"+(num > 1 ?'s':'');\n    }\n\n\tmodule.exports = Beer;\n\n})();	2014-06-05 19:52:47	\N	0	3	2014-05-29 16:44:24	2014-05-29 16:44:24	117	beer-song.js
250	47	a2cac7c591993802be8e8f80	done	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = droplet_noises.select { |_, verifier| verifier.call(number) }.keys.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def droplet_noises\n    {\n      "Pling" => ->(number) { number.divides_evenly_by?(3) },\n      "Plang" => ->(number) { number.divides_evenly_by?(5) },\n      "Plong" => ->(number) { number.divides_evenly_by?(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by?(divisor)\n    self % divisor == 0\n  end\n\nend	2014-07-28 19:48:32.870511	\N	0	8	2014-07-21 19:22:51	2014-07-21 19:22:51	119	raindrops.rb
251	47	bb298a6c72f0c094ca434a26	done	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    normalized_tokens.each_with_object(Hash.new(0)) do |token, counts|\n      counts[token] += 1\n    end\n  end\n\n  private\n\n  def normalized_tokens\n    @phrase.downcase.scan(/\\w+/)\n  end\nend	2014-05-18 16:23:59	\N	0	5	2014-05-17 14:20:19	2014-05-17 14:20:19	120	word-count.rb
378	16	ea893ae3fd84da89046d0682	superseded	elixir	accumulate	defmodule Accumulate do\n\n  @doc """\n  Returns a collection after applying a given function to every element in a provided collection.\n  \n  Try to do this exercise without using map!\n  """\n  \n  @spec accumulate(Enum.t, (any -> as_boolean(term))) :: list\n  def accumulate(collection, function) do\n    Enum.reduce(collection, [], fn x, acc -> acc ++ [function.(x)] end )  \n  end\n\nend	\N	\N	0	1	2014-06-23 22:15:38	2014-06-23 22:15:38	187	accumulate.exs
379	16	768d7d54fe0496bc7c10c241	pending	elixir	accumulate	defmodule Accumulate do\n\n  @doc """\n  Returns a collection after applying a given function to every element in a provided collection.\n  \n  Try to do this exercise without using map!\n  """\n  \n  @spec accumulate(Enum.t, (any -> as_boolean(term))) :: list\n  def accumulate(collection, fun) do\n    collection |> Enum.reduce([], fn x, acc -> acc = [fun.(x) | acc] end) |> Enum.reverse\n  end\n\nend	\N	\N	0	2	2014-07-03 05:16:40	2014-07-03 05:16:40	187	accumulate.exs
425	16	801aefd4aaabdc5bf672b5fb	pending	haskell	anagram	module Anagram (anagramsFor) where\n\nimport Data.List (sort)\nimport Data.Char (isAlpha, toLower)\n\nanagramsFor :: String -> [String] -> [String]\nanagramsFor word = filter (\\x -> letters x == sortedWord && word /= x)\n  where sortedWord = letters word\n        letters = sort . filter isAlpha . map toLower	\N	\N	0	2	2014-07-03 03:13:02	2014-07-03 03:13:02	206	Anagram.hs
238	47	a23851f5bfedcf86ffef47cd	superseded	javascript	beer-song	(function(){\n\t'use strict';\n\n\tfunction Beer(){}\n\n\tBeer.prototype.verse = function(num_bottles){\n\t\tif(num_bottles === 0){\n\t\t\treturn "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n";\n\t\t}\n\t\tif(num_bottles === 1){\n\t\t\treturn "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n";\n\t\t}\n\t\treturn num_bottles+" bottles of beer on the wall, "+num_bottles+" bottles of beer.\\nTake one down and pass it around, "+plural_bottles(num_bottles-1)+" of beer on the wall.\\n";\n\t};\n\n\tBeer.prototype.sing = function(from, to){\n\t\t\n\t\tto = typeof to !== 'undefined' ? to : 0;\n\t\tvar singVerses = [];\n\t\tvar numVerse = from;\n\t\twhile(numVerse >= to){\n\t\t\tsingVerses.push(this.verse(numVerse));\n\t\t\tnumVerse -= 1;\n\t\t}\n\t\treturn singVerses.join("\\n");\n\t};\n\n\tfunction plural_bottles(num){\n\t\tif(num >= 2){\n\t\t\treturn num +" bottles";\n\t\t}\n\t\treturn num+" bottle";\n\t}\n\n\tmodule.exports = Beer;\n\n})();	\N	\N	0	1	2014-06-25 00:36:50	2014-06-25 00:36:50	117	beer-song.js
239	47	be61b37cf5fc36dd9dd4a2ac	superseded	go	rna-transcription	package strand\n\nconst adenine rune = 65\nconst cytosine rune = 67\nconst guanine rune = 71\nconst thymidine rune = 84\nconst uracil rune = 85\n\nfunc ToRna(dna string) (rna string) {\n\n\tfor _, nucleotide := range dna {\n\t\tswitch nucleotide {\n\t\tcase guanine:\n\t\t\trna += string(cytosine)\n\t\tcase cytosine:\n\t\t\trna += string(guanine)\n\t\tcase thymidine:\n\t\t\trna += string(adenine)\n\t\tcase adenine:\n\t\t\trna += string(uracil)\n\t\tdefault:\n\t\t\tpanic("uknown nucleotide")\n\t\t}\n\t}\n\treturn\n}	\N	\N	0	3	2014-05-21 01:42:29	2014-05-21 01:42:29	118	rna_transcription.go
240	47	ceb3cee3915366f9ede82968	superseded	go	rna-transcription	package strand\n\nconst C rune = 67\nconst G rune = 71\nconst A rune = 65\nconst T rune = 84\n\nfunc ToRna(dna string) (rna string) {\n\tfor _, nucleotide := range dna {\n\t\tswitch nucleotide {\n\t\tcase G:\n\t\t\trna += "C"\n\t\tcase C:\n\t\t\trna += "G"\n\t\tcase T:\n\t\t\trna += "A"\n\t\tcase A:\n\t\t\trna += "U"\n\t\tdefault:\n\t\t\tpanic("uknown nucleotide")\n\t\t}\n\t}\n\treturn\n}	\N	\N	0	1	2014-05-22 14:41:36	2014-05-22 14:41:36	118	rna_transcription.go
241	47	bd3bfa9c314c6e66efce9103	superseded	go	rna-transcription	package strand\n\nconst C rune = 67\nconst G rune = 71\nconst A rune = 65\nconst T rune = 84\n\nfunc ToRna(dna string) (rna string) {\n\tfor _, nucleotide := range dna {\n\t\tswitch nucleotide {\n\t\tcase G:\n\t\t\trna += string(C)\n\t\tcase C:\n\t\t\trna += "G"\n\t\tcase T:\n\t\t\trna += "A"\n\t\tcase A:\n\t\t\trna += "U"\n\t\tdefault:\n\t\t\tpanic("uknown nucleotide")\n\t\t}\n\t}\n\treturn\n}	\N	\N	0	2	2014-06-15 15:47:07	2014-06-15 15:47:07	118	rna_transcription.go
242	47	55a2a9374cbb19666d30db3c	pending	go	rna-transcription	package strand\n\nconst adenine rune = 65\nconst cytosine rune = 67\nconst guanine rune = 71\nconst thymidine rune = 84\nconst uracil rune = 85\n\nfunc ToRna(dna string) (rna string) {\n\tfor _, nucleotide := range dna {\n\t\tswitch nucleotide {\n\t\tcase guanine:\n\t\t\trna += string(cytosine)\n\t\tcase cytosine:\n\t\t\trna += string(guanine)\n\t\tcase thymidine:\n\t\t\trna += string(adenine)\n\t\tcase adenine:\n\t\t\trna += string(uracil)\n\t\tdefault:\n\t\t\tpanic("uknown nucleotide")\n\t\t}\n\t}\n\treturn\n}	\N	\N	0	4	2014-06-17 14:36:06	2014-06-17 14:36:06	118	rna_transcription.go
243	47	8e1036ab43e476b6403dd080	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = ""\n    result << "Pling" if number.divides_evenly_by(3)\n    result << "Plang" if number.divides_evenly_by(5)\n    result << "Plong" if number.divides_evenly_by(7)\n    result = number.to_s if result.empty?\n    result\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	1	2014-05-18 01:35:39	2014-05-18 01:35:39	119	raindrops.rb
244	47	94963e0f1451ea57d2c2d74c	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = word_num.select do |k, v|\n      v.call(number)\n    end.map { |k,_| k}.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  def word_num\n    {\n      "Pling" => ->(number) { number.divides_evenly_by(3) },\n      "Plang" => ->(number) { number.divides_evenly_by(5) },\n      "Plong" => ->(number) { number.divides_evenly_by(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	2	2014-05-23 11:58:22	2014-05-23 11:58:22	119	raindrops.rb
245	47	dd60421564bf81ebd9f54221	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = word_num.select do |k, v|\n      v.call(number)\n    end.map { |k,_| k}.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def word_num\n    {\n      "Pling" => ->(number) { number.divides_evenly_by(3) },\n      "Plang" => ->(number) { number.divides_evenly_by(5) },\n      "Plong" => ->(number) { number.divides_evenly_by(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	3	2014-05-26 05:23:37	2014-05-26 05:23:37	119	raindrops.rb
246	47	7255acefa227cd5308f3bc7d	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = word_num.select { |_, v| v.call(number) }.keys.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def word_num\n    {\n      "Pling" => ->(number) { number.divides_evenly_by(3) },\n      "Plang" => ->(number) { number.divides_evenly_by(5) },\n      "Plong" => ->(number) { number.divides_evenly_by(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	6	2014-06-08 16:22:07	2014-06-08 16:22:07	119	raindrops.rb
247	47	a6f18935cde3350d3b35cabb	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = word_num.select { |k, v| v.call(number) }.map { |k,_| k}.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def word_num\n    {\n      "Pling" => ->(number) { number.divides_evenly_by(3) },\n      "Plang" => ->(number) { number.divides_evenly_by(5) },\n      "Plong" => ->(number) { number.divides_evenly_by(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	4	2014-06-28 08:25:24	2014-06-28 08:25:24	119	raindrops.rb
248	47	6dff9214c27ed973548ff5a2	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = word_num.select { |k, v| v.call(number) }.keys.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def word_num\n    {\n      "Pling" => ->(number) { number.divides_evenly_by(3) },\n      "Plang" => ->(number) { number.divides_evenly_by(5) },\n      "Plong" => ->(number) { number.divides_evenly_by(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	5	2014-07-11 23:05:39	2014-07-11 23:05:39	119	raindrops.rb
249	47	e72a306d7768df57079649bf	superseded	ruby	raindrops	class Raindrops\n\n  def convert(number)\n    result = droplet_noises.select { |_, v| v.call(number) }.keys.join\n    result = number.to_s if result.empty?\n    result\n  end\n\n  private\n\n  def droplet_noises\n    {\n      "Pling" => ->(number) { number.divides_evenly_by?(3) },\n      "Plang" => ->(number) { number.divides_evenly_by?(5) },\n      "Plong" => ->(number) { number.divides_evenly_by?(7) }\n    }\n  end\n\nend\n\nclass Fixnum\n\n  def divides_evenly_by?(divisor)\n    self % divisor == 0\n  end\n\nend	\N	\N	0	7	2014-07-16 10:46:25	2014-07-16 10:46:25	119	raindrops.rb
252	47	040c803872525dbdcfca9179	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    WordCounter.new(words).count\n  end\n\n  private\n\n  def words\n    @phrase.split(/\\W+/)\n  end\nend\n\n\nclass WordCounter\n  def initialize(words)\n    @words = words\n  end\n\n  def count\n    @words.each_with_object(Hash.new(0)) do |word, counts|\n      counts[normalize(word)] += 1\n    end\n  end\n\n  private\n\n  def normalize(word)\n    word.downcase\n  end\nend	\N	\N	0	2	2014-06-05 19:00:10	2014-06-05 19:00:10	120	word-count.rb
253	47	1bbbcb911e1ca4d6e07a9937	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    WordCounter.new(words).count\n  end\n\n  private\n\n  def words\n    @phrase.scan(/\\w+/)\n  end\nend\n\n\nclass WordCounter\n  def initialize(words)\n    @words = words\n  end\n\n  def count\n    @words.each_with_object(Hash.new(0)) do |word, counts|\n      counts[normalize(word)] += 1\n    end\n  end\n\n  private\n\n  def normalize(word)\n    word.downcase\n  end\nend	\N	\N	0	3	2014-06-29 22:09:51	2014-06-29 22:09:51	120	word-count.rb
254	47	b4afba40fd50f7f6db084b9a	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    tokens.each_with_object(Hash.new(0)) do |token, counts|\n      counts[normalize(token)] += 1\n    end\n  end\n\n  private\n\n  def tokens\n    @phrase.split(/\\W+/)\n  end\n\n  def normalize(token)\n    token.downcase\n  end\nend	\N	\N	0	1	2014-07-02 06:10:39	2014-07-02 06:10:39	120	word-count.rb
255	47	8b022e75b59eb42bf4cd8876	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    tokens.each_with_object(Hash.new(0)) do |token, counts|\n      counts[normalize(token)] += 1\n    end\n  end\n\n  private\n\n  def tokens\n    @phrase.scan(/\\w+/)\n  end\n\n  def normalize(token)\n    token.downcase\n  end\nend	\N	\N	0	4	2014-07-14 22:14:49	2014-07-14 22:14:49	120	word-count.rb
256	47	b168deea1f4a2c9f65ffc24a	superseded	ruby	space-age	class SpaceAge\n\n  ORBITAL_PERIODS_IN_SECONDS = {\n    mercury: 7600543.81992,\n    venus: 19414149.052176,\n    earth: 31557600.0,\n    mars: 59354032.69008,\n    jupiter: 374355659.124,\n    saturn: 929292362.8848,\n    uranus: 2651370019.3296,\n    neptune: 5200418560.032\n  }\n\n  def initialize(seconds)\n    @seconds = seconds\n  end\n\n  attr_reader :seconds\n\n  def method_missing(method_sym, *args, &blk)\n    if on_planet_method?(method_sym)\n      age_on(planet_from_method(method_sym))\n    else\n      super\n    end\n  end\n\n  def respond_to?(method_sym)\n    on_planet_method?(method_sym) ? true : super\n  end\n\n  private\n\n  def age_on(planet)\n    (seconds / seconds_per_year(planet)).round(2)\n  end\n\n  def seconds_per_year(planet)\n    ORBITAL_PERIODS_IN_SECONDS.fetch(planet) { :no_such_planet }\n  end\n\n  def on_planet_method?(method_sym)\n    method_sym.to_s.start_with?("on_") &&\n      planets.include?(planet_from_method(method_sym))\n  end\n\n  def planet_from_method(method_sym)\n    method_sym.to_s.sub("on_", "").to_sym\n  end\n\n  def planets\n    ORBITAL_PERIODS_IN_SECONDS.keys\n  end\n\nend	\N	\N	0	1	2014-06-03 21:12:08	2014-06-03 21:12:08	121	space-age.rb
257	47	5d8ef4d32eb71b5aa5218a9a	superseded	ruby	space-age	class SpaceAge\n\n  orbital_periods_in_seconds = {\n    mercury: 7600543.81992,\n    venus: 19414149.052176,\n    earth: 31557600.0,\n    mars: 59354032.69008,\n    jupiter: 374355659.124,\n    saturn: 929292362.8848,\n    uranus: 2651370019.3296,\n    neptune: 5200418560.032\n  }\n\n  orbital_periods_in_seconds.each do |planet, seconds_per_year|\n    define_method("on_#{planet}") do\n      (seconds / seconds_per_year).round(2)\n    end\n  end\n\n  def initialize(seconds)\n    @seconds = seconds\n  end\n\n  attr_reader :seconds\n\nend	\N	\N	0	2	2014-06-27 05:12:39	2014-06-27 05:12:39	121	space-age.rb
258	47	498f18d8071dc128bfe0c54f	done	ruby	space-age	class SpaceAge\n\n  def initialize(seconds)\n    @seconds = seconds\n  end\n\n  attr_reader :seconds\n\n  orbital_periods_in_seconds = {\n    mercury: 7600543.81992,\n    venus: 19414149.052176,\n    earth: 31557600.0,\n    mars: 59354032.69008,\n    jupiter: 374355659.124,\n    saturn: 929292362.8848,\n    uranus: 2651370019.3296,\n    neptune: 5200418560.032\n  }\n\n  orbital_periods_in_seconds.each do |planet, seconds_per_year|\n    define_method("on_#{planet}") do\n      (seconds / seconds_per_year).round(2)\n    end\n  end\n\nend	2014-07-06 11:10:32	\N	0	3	2014-07-06 07:08:16	2014-07-06 07:08:16	121	space-age.rb
259	47	160f098b3f0e95df529f6506	done	javascript	word-count	"use strict;"\n\nfunction wordCount(hash, value){\n  if(hash[value.toLowerCase()] === undefined){\n    hash[value.toLowerCase()] = 1;\n  }else{\n    hash[value.toLowerCase()]++;\n  }\n  return hash;\n}\n\nfunction sanitize(string){\n  return string.replace(/([^a-zA-Z0-9\\s])/g,"")\n}\n\nfunction Words(sentence){\n  var phrase = sanitize(sentence);\n  var words = phrase.split(/\\s+/);\n  this.count = words.reduce(wordCount, {});\n};\n\nmodule.exports = Words;	2014-05-21 15:24:59	\N	0	1	2014-05-19 09:42:50	2014-05-19 09:42:50	122	word-count.js
260	47	325a60dda003bbf556b6f21f	superseded	ruby	bob	class Bob\n\n  def hey(string)\n    \n    if string.match(/  {2,}/)\n      'Fine. Be that way!'\n    elsif string.upcase == string && !string[0..-2].match(/\\d/) && string != ''\n      'Woah, chill out!'\n    elsif string[-1] == '?'\n      'Sure.'\n    elsif string[-1] == '!' && string =~ /\\d/   \n      'Woah, chill out!'\n    elsif string == ''  \n      'Fine. Be that way!'\n    else\n      'Whatever.'\n    end\n  \n  end\n\nend	\N	\N	0	1	2014-05-31 09:34:48	2014-05-31 09:34:48	123	bob.rb
277	47	ec0fe6e955fe8d1ba68e6e88	done	go	leap	package leap\n\nimport (\n\t"flag"\n\t"log"\n)\n\nfunc main() {\n\n\tvar year = flag.Int("year", 1234, "help message for flagname")\n\n\tflag.Parse()\n\n\tif IsLeapYear(*year) {\n\t\tlog.Println("Leap Year Yo!")\n\t}\n\n}\n\nfunc IsLeapYear(year int) bool {\n\n\tif year%4 == 0 {\n\t\tif year%100 == 0 {\n\t\t\treturn year%400 == 0\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n\n}	2014-07-09 12:20:28	\N	0	2	2014-07-02 23:08:30	2014-07-02 23:08:30	130	leap.go
278	47	681cf7cfb8140e5dc3b1008f	pending	perl5	accumulate	package Accumulate;\r\nuse warnings;\r\nuse strict;\r\n\r\nsub new {\r\n\treturn bless {}, shift;\r\n}\r\n\r\nsub accumulate {\r\n\tmy ($data, $coderef) = @_;\r\n\r\n\t# convert sub into single element array ref\r\n\tmy $coderef_array = ref $coderef eq 'CODE' ? [$coderef] : $coderef;\r\n\t\r\n\tmy $results = [];\r\n\t\r\n\t# iterate through subs and data elements\r\n\tfor my $sub (@$coderef_array) {\r\n\t\tnext unless (@$data);\r\n\t\tfor (@$data) {\r\n\t\t\tpush @$results, $sub->($_);\r\n\t\t}\r\n\t}\r\n\treturn $results;\r\n}\r\n\r\n1;	\N	\N	0	1	2014-06-17 01:23:10	2014-06-17 01:23:10	131	Accumulate.pm
261	47	06467949bd7412649e0d2753	done	ruby	bob	class Bob\n\n  def hey(string)\n    if silent_treatment?(string)\n      'Fine. Be that way!'\n    elsif why_so_intense?(string)\n      'Woah, chill out!'\n    elsif you_askin_me?(string)\n      'Sure.'\n    else\n      whatever(string)\n    end      \n  end\n\n\n  def silent_treatment?(string)\n    string.match(/  {2,}/) || string == ''\n  end\n\n  def why_so_intense?(string)\n    (string[-1] == '!' && string =~ /\\d/) || (string.upcase == string && !string[0..-2].match(/\\d/) && string != '')\n  end\n\n  def you_askin_me?(string)\n    string[-1] == '?'\n  end\n\n  def whatever(string)\n    'Whatever.'\n  end\n\nend\n\n\n\n# class Bob\n\n#   def hey(string)\n    \n#     if string.match(/  {2,}/)\n#       'Fine. Be that way!'\n#     elsif string.upcase == string && !string[0..-2].match(/\\d/) && string != ''\n#       'Woah, chill out!'\n#     elsif string[-1] == '?'\n#       'Sure.'\n#     elsif string[-1] == '!' && string =~ /\\d/   \n#       'Woah, chill out!'\n#     elsif string == ''  \n#       'Fine. Be that way!'\n#     else\n#       'Whatever.'\n#     end\n  \n#   end\n\n# end	2014-07-13 15:27:31	\N	0	2	2014-07-05 13:43:22	2014-07-05 13:43:22	123	bob.rb
262	47	42e355a4d4a23412ab928fcd	done	javascript	prime-factors	var primeFactors = (function() {\n\treturn {\n\t\tfor: function(number) {\n\t\t\tvar prime_numbers = [];\n\n\t\t\tfor (var i = 2; i <= number; i++) {\n\t\t\t\twhile (number % i === 0) {\n\t\t\t\t\tprime_numbers.push(i);\n\t\t\t\t\tnumber /= i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn prime_numbers;\n\t\t}\n\t};\n})();\n\nmodule.exports = primeFactors;	2014-05-31 10:21:55	\N	0	1	2014-05-23 06:10:22	2014-05-23 06:10:22	124	prime-factors.js
263	47	0ba12d593850e46435a574d0	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\twords = self.sentence.lower().translate(None, '!&@$%^:,').split()\r\n\t\tfor word in words:\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	6	2014-05-22 20:21:44	2014-05-22 20:21:44	125	wordcount.py
264	47	a0b4ac5ba84db2c84bc5368d	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\ts0 = self.sentence.lower()\r\n\t\ts1 = s0.replace(':',' ')\r\n\t\ts2 = s1.replace(',', ' ')\r\n\t\ts3 = s2.replace('!!&@$%^&', ' ')\r\n\t\twords = s3.split()\r\n\r\n\t\tfor word in words:\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	3	2014-06-08 10:55:25	2014-06-08 10:55:25	125	wordcount.py
265	47	168d3d13c7f1661f512856ec	pending	python	word-count	\r\n\r\nclass Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\twords = self.sentence.lower().translate(None, '!&@$%^:,').split()\r\n\t\tfor word in words:\r\n\t\t\tanswer[word] = words.count(word)\r\n\r\n\t\treturn answer	\N	\N	0	7	2014-06-13 01:12:47	2014-06-13 01:12:47	125	wordcount.py
266	47	351b8710a5e571a711670b38	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\twords = self.sentence.split()\r\n\r\n\t\tfor word in words:\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	1	2014-06-19 19:27:45	2014-06-19 19:27:45	125	wordcount.py
267	47	a12b825e9d5d592b6b307cae	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\twords = self.sentence.split(' ,:')\r\n\r\n\t\tfor word in words:\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	2	2014-06-24 10:54:38	2014-06-24 10:54:38	125	wordcount.py
268	47	2e7c79ec7047f07b0d40ea08	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\t\r\n\t\tfor word in self.sentence.lower().translate(None, '!!&@$%^&:,'):\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	4	2014-06-28 01:38:59	2014-06-28 01:38:59	125	wordcount.py
269	47	51026fc992354a49c786b7a1	superseded	python	word-count	class Phrase(object):\r\n\tdef __init__(self, sentence):\r\n\t\tself.sentence = sentence\r\n\r\n\tdef word_count(self):\r\n\t\tanswer = {}\r\n\t\twords = self.sentence.lower().translate(None, '!!&@$%^&:,').split()\r\n\t\tfor word in words:\r\n\t\t\ti = words.count(word)\r\n\t\t\tanswer[word] = i\r\n\r\n\t\treturn answer\r	\N	\N	0	5	2014-06-29 20:17:32	2014-06-29 20:17:32	125	wordcount.py
270	47	987c2b2727e4104740f7b088	done	elixir	grains	defmodule Grains do\n  def square(number), do: round :math.pow(2, (number - 1))\n  def total, do: Enum.reduce((1..64), 0, fn(n, acc) -> acc + square(n) end)\nend	2014-06-11 02:57:37	\N	0	1	2014-06-04 01:13:53	2014-06-04 01:13:53	126	grains.exs
271	47	030359bf8308a3c4be4d7acc	done	javascript	anagram	var Anagram = function(word) {\n  this.word = word;\n};\n\nAnagram.prototype.match = function(candidates) {\n  var self = this,\n      matches = [];\n\n  function sort(word) {\n    return word.toLowerCase().split('').sort().join('');\n  }\n\n  function duplicate(candidate, word) {\n    return candidate.toLowerCase() === word.toLowerCase();\n  }\n\n  candidates.forEach(function(candidate, index, candidates) {\n    if ( sort(candidate) === sort(self.word) && !duplicate(candidate, self.word)){\n      matches.push(candidate);\n    }\n  });\n\n  return matches;\n};\n\nmodule.exports = Anagram;	2014-05-28 15:50:40	\N	0	1	2014-05-26 01:29:38	2014-05-26 01:29:38	127	anagram.js
272	47	66456be84afe0e972edd01ec	superseded	clojure	word-count	(ns phrase\n  (:require [clojure.string :refer [lower-case]]))\n\n(defn word-count [phrase]\n  (reduce #(assoc %1 %2 (inc (%1 %2 0)))\n          {}\n          (re-seq #"\\w+" (lower-case phrase))))	\N	\N	0	1	2014-06-28 08:16:06	2014-06-28 08:16:06	128	word-count.clj
273	47	9d62aa2ae6bfb1ec145035cb	superseded	clojure	word-count	(ns phrase\n  (:require [clojure.string :refer [lower-case]]))\n\n(defn word-count [phrase]\n  (frequencies (re-seq #"\\w+" (lower-case phrase))))	\N	\N	0	2	2014-07-07 03:24:15	2014-07-07 03:24:15	128	word-count.clj
274	47	f615a466351a351b92c7ab4c	done	clojure	word-count	(ns phrase\n  (:require [clojure.string :refer [lower-case]]))\n\n(defn extract-words [phrase]\n  (re-seq #"\\w+" (lower-case phrase)))\n\n(defn word-count [phrase]\n  (frequencies (extract-words phrase)))	2014-07-26 03:48:51	\N	0	3	2014-07-21 23:38:09	2014-07-21 23:38:09	128	word-count.clj
275	47	3a6d30ee2c85082fb1797c50	done	scala	hamming	object Hamming {\n\t\n\tdef compute(strand1: String, strand2: String) = {\n\t   val maxLength = Math.min(strand1.length,strand2.length)\n\n\t   var count = 0 \n\t   for (i <- 0 to maxLength - 1) {\n\t   \t if (strand1.charAt(i) != strand2.charAt(i)) {\n\t   \t \tcount = count + 1 \n\t   \t }\n\t   }\n\n\t   count\n\t}\n\n}	2014-06-28 17:58:02	\N	0	1	2014-06-21 06:59:30	2014-06-21 06:59:30	129	Hamming.scala
276	47	9f3f0e6f8c36e74eed2eee35	superseded	go	leap	package leap\n\nimport (\n\t"flag"\n\t"log"\n)\n\nfunc main() {\n\n\tvar year = flag.Int("year", 1234, "help message for flagname")\n\n\tflag.Parse()\n\n\tif IsLeapYear(*year) {\n\t\tlog.Println("Leap Year Yo!")\n\t}\n\n}\n\nfunc IsLeapYear(year int) bool {\n\n\tif year%4 == 0 {\n\t\tif year%100 == 0 {\n\t\t\tif year%400 == 0 {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n\n}	\N	\N	0	1	2014-05-16 00:52:19	2014-05-16 00:52:19	130	leap.go
280	47	6b063041f51d8c9ed8da7108	done	javascript	robot-name	function makeId () {\n    var text = "";\n    var possibleText = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    var possibleNumber = "0123456789";\n    var textTimes = 2, numberTimes = 3;\n    while (textTimes--) {\n      text += possibleText.charAt(Math.floor(Math.random() * possibleText.length));\n    }\n    while (numberTimes--) {\n      text += possibleNumber.charAt(Math.floor(Math.random() * possibleNumber.length));\n    }\n    return text;\n}\n\nvar Robot = function () {\n  this.name = makeId();\n  this.reset = function () {\n    this.name = makeId();\n  };\n};	2014-06-11 05:32:11	\N	0	1	2014-06-02 12:37:36	2014-06-02 12:37:36	133	robot-name_test.js
281	47	e8bd3d14909f64e0ef115716	done	javascript	point-mutations	var DNA = function(a_dna){\n    var sample_dna = a_dna;\n    this.hammingDistance = function(dna){\n        var sample_dna_arr = sample_dna.split('');\n        var dna_arr = dna.split('');\n        var result = 0;\n        for(var idx in sample_dna_arr){\n            if(dna_arr[idx] === sample_dna_arr[idx]){\n                result++;\n            }\n        }\n        return result;\n    }\n}	2014-05-28 09:47:07	\N	0	1	2014-05-25 11:00:33	2014-05-25 11:00:33	134	point-mutations.js
282	47	18a29f4f8b09bfcd8773241f	superseded	haskell	beer-song	module Beer (verse, sing) where\nimport Data.List (intercalate)\n\nverse :: Int -> String\nverse i = case i of\n             0 -> "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n             1 -> "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n"\n             2 -> "2 bottles of beer on the wall, 2 bottles of beer.\\nTake one down and pass it around, 1 bottle of beer on the wall.\\n"\n             _ -> concat [ show i, " bottles of beer on the wall, ", show i, " bottles of beer.\\nTake one down and pass it around, ", show (i-1), " bottles of beer on the wall.\\n" ]\n\nsing :: Int -> Int -> String\nsing i j = intercalate "\\n" verses ++ "\\n"\n             where verses = map verse $ reverse [j..i]	\N	\N	0	1	2014-06-06 06:55:01	2014-06-06 06:55:01	135	Beer.hs
283	47	38cf52b6f0a2195c5f1ee9d1	superseded	haskell	beer-song	module Beer (verse, sing) where\nimport Data.List (intercalate)\n\nverse :: Int -> String\nverse i = case i of\n            0 -> "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n            1 -> "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n"\n            2 -> "2 bottles of beer on the wall, 2 bottles of beer.\\nTake one down and pass it around, 1 bottle of beer on the wall.\\n"\n            _ -> concat [ show i, " bottles of beer on the wall, ", show i, " bottles of beer.\\nTake one down and pass it around, ", show (i-1), " bottles of beer on the wall.\\n" ]\n\nsing :: Int -> Int -> String\nsing i j = unlines verses\n  where verses = map verse $ enumFromThenTo i (i-1) j	\N	\N	0	2	2014-06-27 14:41:27	2014-06-27 14:41:27	135	Beer.hs
284	47	86abb816d56bdd16e1edd1ec	done	haskell	beer-song	module Beer (verse, sing) where\n\nverse :: Int -> String\nverse i = case i of\n            0 -> "No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall.\\n"\n            1 -> "1 bottle of beer on the wall, 1 bottle of beer.\\nTake it down and pass it around, no more bottles of beer on the wall.\\n"\n            2 -> "2 bottles of beer on the wall, 2 bottles of beer.\\nTake one down and pass it around, 1 bottle of beer on the wall.\\n"\n            _ -> concat [ show i, " bottles of beer on the wall, ", show i, " bottles of beer.\\nTake one down and pass it around, ", show (i-1), " bottles of beer on the wall.\\n" ]\n\nsing :: Int -> Int -> String\nsing i j = unlines verses\n  where verses = map verse [i,(i-1)..j]	2014-07-24 15:51:40	\N	0	3	2014-07-17 07:36:02	2014-07-17 07:36:02	135	Beer.hs
285	47	717c6369bcbdba7b9e630297	superseded	javascript	gigasecond	;\nvar Gigasecond = function(start) {\n    var _date = new Date(start - (-(new Date(Math.pow(10, 12)))));\n    _date.setHours(0);\n    _date.setMinutes(0);\n    _date.setSeconds(0);\n\n    this.date = function() {\n        return _date;\n    };\n};\n\nmodule.exports = Gigasecond;	\N	\N	0	1	2014-05-15 22:36:05	2014-05-15 22:36:05	136	gigasecond.js
286	47	dabaa608c22f992f452c5143	done	javascript	gigasecond	;\nvar fromDate = function(newStart) {\n    var newDate = new Date(newStart - (-(new Date(Math.pow(10, 12)))));\n    newDate.setHours(0);\n    newDate.setMinutes(0);\n    newDate.setSeconds(0);\n    return new Date(newDate);\n};\n\nvar Gigasecond = function(start) {\n    var _date = fromDate(start);\n\n    this.date = function() {\n        return new Date(_date);\n    };\n\n};\n\nGigasecond.fromDate = fromDate;\n\nmodule.exports = Gigasecond;	2014-07-21 11:24:29	\N	0	2	2014-07-11 08:37:54	2014-07-11 08:37:54	136	gigasecond.js
316	22	f5d328958c16a063630c614c	superseded	haskell	bob	module Bob(\r\n    responseFor\r\n) where\r\n\r\nimport Data.Char\r\n\r\nresponseFor :: String -> String\r\nresponseFor statement\r\n    | isSilence = "Fine. Be that way!"\r\n    | isYell = "Woah, chill out!"\r\n    | isQuestion = "Sure."\r\n    | otherwise = "Whatever."\r\n    where isSilence = all isSpace statement\r\n          isYell = allUpper statement\r\n          isQuestion = statement `endsWith` '?'\r\n\r\nallUpper :: String -> Bool\r\nallUpper str = noLower && hasLetters\r\n    where noLower = map toUpper str == str\r\n          hasLetters = map toLower str /= str\r\n\r\nendsWith :: String -> Char -> Bool\r\nendsWith str suffix = last str == suffix\r	\N	\N	0	1	2014-04-11 15:07:29	2014-04-11 15:07:29	153	bob.hs
317	22	d8b8aea72aaac8572af7ce9c	superseded	scala	word-count	class Phrase(words:String) {\n  val phrase:String = words\n\n  def wordCount = wc(words(phrase))\n\n  def wc(words:Array[String]):Map[String, Int] = words.foldLeft(Map[String, Int]())(count)\n\n  def count(acc:Map[String, Int], word:String):Map[String, Int] = {\n    val lword = word.toLowerCase()\n    acc.get(lword.toLowerCase) match {\n      case None => acc + (lword -> 1)\n      case Some(count) => acc + (lword -> (count + 1))\n    }\n  }\n\n  def words(phrase:String) = phrase.split("[!&@$%^-_,;:\\\\.\\\\s]+")\n}	\N	\N	0	1	2014-03-26 23:31:01	2014-03-26 23:31:01	154	word_count.scala
318	22	55afc65ef9cd3b91c07cadf8	superseded	scala	word-count	class Phrase(words:String) {\n  val phrase:String = words\n\n  def wordCount = wc(words(phrase))\n\n  def wc(words:Array[String]):Map[String, Int] = words.foldLeft(Map[String, Int]())(count)\n\n  def count(acc:Map[String, Int], word:String):Map[String, Int] = {\n    acc.get(word) match {\n      case None        => acc + (word -> 1)\n      case Some(count) => acc + (word -> (count + 1))\n    }\n  }\n\n  def words(phrase:String) = phrase.toLowerCase.split("[!&@$%^-_,;:\\\\.\\\\s]+")\n}	\N	\N	0	2	2014-05-02 01:42:51	2014-05-02 01:42:51	154	word_count.scala
319	22	258ec959c2a84d650a820715	pending	scala	word-count	class Phrase(words:String) {\n  val phrase:String = words\n\n  def wordCount = wc(words(phrase))\n\n  def wc(words:Array[String]) = words.foldLeft(Map[String, Int]().withDefaultValue(0))(count)\n\n  def count(acc:Map[String, Int], word:String) = acc + (word -> (acc(word) + 1))\n\n  def words(phrase:String) = phrase.toLowerCase.split("[!&@$%^-_,;:\\\\.\\\\s]+")\n}	\N	\N	0	3	2014-05-25 18:57:42	2014-05-25 18:57:42	154	word_count.scala
320	22	9f1291d624fcc070e8d4f8e7	superseded	go	gigasecond	package gigasecond\n\nimport "time"\n\nconst Gigasecond time.Duration = 1e18\n\nfunc AddGigasecond(t time.Time) time.Time {\n\treturn t.Add(Gigasecond)\n}	\N	\N	0	1	2014-04-27 00:02:22	2014-04-27 00:02:22	155	gigasecond.go
287	47	310619a7bb05e64d5d0f4e13	superseded	python	rna-transcription	class Nucleotide(object):\n  def __init__(self, base):\n    self.base = base\n\n  def __str__(self):\n    return self.base\n\nadenine = Nucleotide('A')\ncytosine = Nucleotide('C')\nguanine = Nucleotide('G')\nthymine = Nucleotide('T')\nuracil = Nucleotide('U')\n\nnucleotides = [adenine, cytosine, guanine, thymine, uracil]\nnucleotide_map = { nucleotide.base : nucleotide for nucleotide in nucleotides}\n\ndef strand_to_nucleotides(strand):\n  return [nucleotide_map[base] for base in strand]\n\nclass DNA(object):\n  map_to_rna = {\n      adenine: adenine,\n      cytosine: cytosine,\n      guanine: guanine,\n      thymine: uracil\n      }\n\n  def __init__(self, strand):\n    self.nucleotides = strand_to_nucleotides(strand)\n\n  def to_rna(self):\n    rna_nucleotides = [DNA.map_to_rna[n] for n in self.nucleotides]\n    return ''.join([str(n) for n in rna_nucleotides])	\N	\N	0	1	2014-05-24 15:46:47	2014-05-24 15:46:47	137	rna-transcription.py
288	47	0dd9984f8bfe44d24c23cad0	pending	python	rna-transcription	class DNA(object):\n  ADENINE = 'A'\n  CYTOSINE = 'C'\n  GUANINE = 'G'\n  THYMINE = 'T'\n  URACIL = 'U'\n\n  map_to_rna = {\n      ADENINE: ADENINE,\n      CYTOSINE: CYTOSINE,\n      GUANINE: GUANINE,\n      THYMINE: URACIL\n      }\n\n  def __init__(self, strand):\n    self.strand = strand\n\n  def to_rna(self):\n    return ''.join([DNA.map_to_rna[n] for n in self.strand])	\N	\N	0	2	2014-06-06 12:14:34	2014-06-06 12:14:34	137	dna.py
289	47	ba46a6273418dd6748205dcf	superseded	go	raindrops	package raindrops\n\nimport "strconv"\n\nvar sounds = []struct {\n\tfactor int\n\tsound  string\n}{\n\t{3, "Pling"},\n\t{5, "Plang"},\n\t{7, "Plong"},\n}\n\nfunc Convert(n int) string {\n\toutput := ""\n\tfor _, s := range sounds {\n\t\tif n%s.factor == 0 {\n\t\t\toutput += s.sound\n\t\t}\n\t}\n\tif len(output) > 0 {\n\t\treturn output\n\t}\n\treturn strconv.Itoa(n)\n}	\N	\N	0	1	2014-05-27 02:56:27	2014-05-27 02:56:27	138	raindrops.go
290	47	55c590d1c6f18bbbb5f9cac9	superseded	go	raindrops	package raindrops\n\nimport "strconv"\n\nfunc Convert(n int) string {\n\toutput := ""\n\n\tif n%3 == 0 {\n\t\toutput += "Pling"\n\t}\n\tif n%5 == 0 {\n\t\toutput += "Plang"\n\t}\n\tif n%7 == 0 {\n\t\toutput += "Plong"\n\t}\n\n\tif output != "" {\n\t\treturn output\n\t}\n\treturn strconv.Itoa(n)\n}	\N	\N	0	2	2014-06-11 05:51:58	2014-06-11 05:51:58	138	raindrops.go
291	47	9a975efd988ea3db15dcaf27	done	go	raindrops	package raindrops\n\nimport "strconv"\n\nfunc Convert(n int) (s string) {\n\tif n%3 == 0 {\n\t\ts += "Pling"\n\t}\n\tif n%5 == 0 {\n\t\ts += "Plang"\n\t}\n\tif n%7 == 0 {\n\t\ts += "Plong"\n\t}\n\n\tif s == "" {\n\t\treturn strconv.Itoa(n)\n\t}\n\treturn\n}	2014-06-26 00:40:32	\N	0	3	2014-06-20 18:11:57	2014-06-20 18:11:57	138	raindrops.go
292	47	149e32d2f1b38d436472b4bd	superseded	haskell	robot-name	module Robot(Robot, mkRobot, robotName, resetName) where\r\n\r\nimport Control.Monad\r\nimport System.Random\r\nimport Data.IORef\r\n\r\ndata Robot = Robot (IORef String)\r\n\r\nmkRobot :: IO Robot\r\nmkRobot = do\r\n    nameRef <- newIORef =<< randomName\r\n    return $ Robot nameRef\r\n\r\nrobotName :: Robot -> IO String\r\nrobotName (Robot nameRef) =\r\n    readIORef nameRef\r\n\r\nresetName :: Robot -> IO ()\r\nresetName (Robot nameRef) =\r\n    writeIORef nameRef =<< randomName\r\n\r\nrandomName :: IO String\r\nrandomName = do\r\n    letters <- replicateM 2 $ randomRIO ('A', 'Z')\r\n    digits <- replicateM 3 $ randomRIO ('0', '9')\r\n    return $ letters ++ digits\r	\N	\N	0	1	2014-05-17 15:40:47	2014-05-17 15:40:47	139	Robot.hs
293	47	3a318b39cec6b776869d7c7f	pending	haskell	robot-name	module Robot(Robot, mkRobot, robotName, resetName) where\r\n\r\nimport Control.Monad\r\nimport System.Random\r\nimport Data.IORef\r\n\r\ndata Robot = Robot (IORef String)\r\n\r\nmkRobot :: IO Robot\r\nmkRobot = do\r\n    nameRef <- newIORef =<< randomName\r\n    return $ Robot nameRef\r\n\r\nrobotName :: Robot -> IO String\r\nrobotName (Robot nameRef) =\r\n    readIORef nameRef\r\n\r\nresetName :: Robot -> IO ()\r\nresetName (Robot nameRef) =\r\n    writeIORef nameRef =<< randomName\r\n\r\nrandomName :: IO String\r\nrandomName =\r\n    mapM randomRIO [a, a, d, d, d]\r\n    where a = ('A', 'Z')\r\n          d = ('0', '9')\r	\N	\N	0	2	2014-06-08 14:14:26	2014-06-08 14:14:26	139	Robot.hs
294	48	13376ed9eeec38a0e769c97f	pending	ruby	leap	class Year\n  attr_accessor :year\n\n  def initialize(year)\n    @year = year\n  end\n\n  def leap?\n    divisible_by(4) && (!divisible_by(100) || divisible_by(400))\n  end\n\n  def divisible_by(number)\n    year % number == 0\n  end\nend	\N	\N	0	1	2014-06-30 02:16:03	2014-06-30 02:16:03	140	leap.rb
295	25	9f5087872735ab5a35bc6555	pending	python	bob	__author__ = 'ronvis'\r\n\r\ndef Bob():\r\n    return Bob()\r\n\r\ndef IsQuestion(request):\r\n    return request.endswith('?')\r\n\r\ndef IsEmpty(request):\r\n    if request.strip():\r\n        return True\r\n    else:\r\n        return False\r\n\r\ndef IsShout(request):\r\n    return request.isupper()\r\n\r\nclass Bob:\r\n\r\n    DEAFAULT_ANSWER = 'Whatever.'\r\n    QUESTION_RESPONSE = 'Sure.'\r\n    EMPTY_RESPONSE = 'Fine. Be that way!'\r\n    SHOUT_RESPONSE = 'Woah, chill out!'\r\n\r\n    def hey(self, request):\r\n        response = self.DEAFAULT_ANSWER\r\n\r\n        if IsEmpty(request):\r\n            response = self.EMPTY_RESPONSE\r\n        if IsQuestion(request):\r\n            response = self.QUESTION_RESPONSE\r\n        if IsShout(request):\r\n            response = self.SHOUT_RESPONSE\r\n\r\n        return response\r\n\r	\N	\N	0	2	2014-05-21 11:48:25	2014-05-21 11:48:25	141	bob.py
296	25	81a9c77863363b05c1653813	superseded	python	bob	__author__ = 'ronvis'\r\n\r\n\r\n\r\ndef Bob():\r\n    return bob()\r\n\r\ndef IsQuestion(request):\r\n    if request.endswith('?'):\r\n        return True\r\n    else:\r\n        return False\r\n\r\ndef IsEmpty(request):\r\n    request = request.strip()\r\n    if request == '':\r\n        return True\r\n    else:\r\n        return False\r\n\r\ndef IsShout(request):\r\n    if request.isupper():\r\n        return True\r\n    else:\r\n        return False\r\n\r\nclass bob:\r\n\r\n    defaultAnswer = 'Whatever.'\r\n\r\n    def hey(self, request):\r\n        response = self.defaultAnswer\r\n\r\n        if IsEmpty(request):\r\n            response = 'Fine. Be that way!'\r\n        if IsQuestion(request):\r\n            response = 'Sure.'\r\n        if IsShout(request):\r\n            response = 'Woah, chill out!'\r\n\r\n        return response\r\n\r	\N	\N	0	1	2014-05-25 11:02:03	2014-05-25 11:02:03	141	bob.py
297	6	0008c22e25046889d396b968	pending	ruby	bob	class Bob\n  attr_reader :parser\n\n  def initialize\n    @parser = Parser.new\n  end\n\n  def hey(message)\n    send("respond_to_#{parser.determine_type(message)}")\n  end\n\n  private\n\n  def respond_to_question\n    'Sure.'\n  end\n\n  def respond_to_yell\n    'Woah, chill out!'\n  end\n\n  def respond_to_empty\n    'Fine. Be that way!'\n  end\n\n  def respond_to_default\n    'Whatever.'\n  end\nend\n\nclass Parser\n  def determine_type(message)\n    return :empty if message.is_empty?\n    return :yell if message.is_a_yell?\n    return :question if message.is_a_question?\n    return :default\n  end\nend\n\nclass String\n  def is_a_question?\n    return self[-1] == '?' ? true : false\n  end\n\n  def is_a_yell?\n    return self == self.upcase ? true : false\n  end\n\n  def is_empty?\n    return self.strip.empty?\n  end\nend	\N	\N	0	1	2014-07-22 22:15:20	2014-07-22 22:15:20	142	bob.rb
321	22	c6ea020916a27a153b10eaf6	pending	go	gigasecond	package gigasecond\n\nimport "time"\n\nconst Gigasecond time.Duration = 1e9 * time.Second\n\nfunc AddGigasecond(t time.Time) time.Time {\n\treturn t.Add(Gigasecond)\n}	\N	\N	0	2	2014-05-07 15:20:10	2014-05-07 15:20:10	155	gigasecond.go
406	16	1fb0483db5d449cb691b57f3	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @words = normalize(phrase)\n  end\n\n  def word_count\n    @words.each_with_object(Hash.new(0)) do |w, h|\n      h[w] += 1\n    end\n  end\n\n  private\n\n  def normalize(phrase)\n    phrase.downcase.scan(/\\w+/)\n  end\nend	\N	\N	0	5	2014-07-02 18:59:19	2014-07-02 18:59:19	197	word-count.rb
298	22	1a5d22c20301c417bd509152	pending	javascript	food-chain	var animals = [\n  'fly',\n  'spider',\n  'bird',\n  'cat',\n  'dog',\n  'goat',\n  'cow',\n  'horse'\n];\n\nvar statements = [\n  '',\n  'wriggled and jiggled and tickled inside her',\n  'How absurd',\n  'Imagine that,',\n  'What a hog,',\n  'Just opened her throat and',\n  'I don\\'t know how she',\n  'She\\'s dead, of course!'\n];\n\nvar verses = [\n  'start/fly',\n  'start/spider/cumulative/fly',\n  'start/swallow/cumulative/fly',\n  'start/horse'\n];\n\nfunction renderLine() {\n  var vars, varLen, args = Array.prototype.slice.call(arguments),\n    line = args.shift(),\n    matches = line.match(/{{.*?}}/g);\n\n  if(matches === null)\n    return line + '\\n';\n\n  if(Array.isArray(args[0])) {\n    vars = args[0].slice(0,varLen);\n  } else {\n    vars = args.slice(0,varLen);\n  }\n\n  varLen = args.length;\n\n  for (var i = 0; i < varLen; i++) {\n    line = line.replace(/{{.*?}}/, vars[i]);\n  }\n\n  return line + '\\n';\n}\n\nvar lyrics = {\n  start: function (num) {\n    return renderLine('I know an old lady who swallowed a {{animal}}.', animals[num - 1]);\n  },\n  fly: function(num) {\n    return "I don't know why she swallowed the fly. Perhaps she'll die.\\n";\n  },\n  spider: function(num) {\n    return "It " + statements[num - 1] + ".\\n";\n  },\n  swallow: function(num) {\n    if (num < 6)\n     return renderLine("{{statement}} to swallow a {{animal}}!", statements[num -1], animals[num - 1]);\n   else\n    return renderLine("{{statement}} swallowed a {{animal}}!", statements[num -1], animals[num - 1]);\n  },\n  cumulative: function (num) {\n    var line = "She swallowed the {{animal1}} to catch the {{animal2}}.",\n      results = '';\n    for(var i = num -1; i > 0; i--) {\n      results += renderLine(line, animals[i], animals[i-1]);\n    }\n    return results.replace(/spider\\.\\n/, 'spider that ' + statements[1] + '.\\n');\n  },\n  horse: function (num) {\n    return statements[num -1] + '\\n';\n  }\n};\n\nfunction verseFormat(num) {\n  switch(num) {\n    case 1:\n    case 2:\n      return verses[num-1].split('/');\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n      return verses[2].split('/');\n    case 8:\n      return verses[3].split('/');\n  }\n}\n\nfunction aVerse(num) {\n  var song = '',\n    lines = verseFormat(num);\n  lines.forEach( function(line) {\n    song += (lyrics[line](num));\n  });\n  return song;\n}\n\nmodule.exports = {\n  verse: function (num) {\n    return aVerse(num);\n  },\n  verses: function (from, to) {\n    var verses = [];\n    for(var i = from; i < to+1; i++) {\n      verses.push(aVerse(i));\n    }\n    return verses.join('\\n') + '\\n';\n  },\n  sing: function () {\n    song = [];\n    for(var i = 1; i < 9; i++) {\n      song.push(aVerse(i));\n    }\n    return song.join('\\n') + '\\n';\n  }\n};	\N	\N	0	1	2014-02-06 03:54:53	2014-02-06 03:54:53	143	food-chain.js
299	22	460830cfa615922477de7b77	superseded	clojure	bob	(ns bob)\n(use '[clojure.string :only [upper-case blank?]])\n\n(defn- shout? [statement]\n  (= (upper-case statement) statement))\n\n(defn- question? [statement]\n  (= (last statement) \\?))\n\n(defn response-for [statement]\n  (cond\n    (blank? statement) "Fine, be that way."\n    (shout? statement) "Woah, chill out!" \n    (question? statement) "Sure."\n    :else "Whatever."))	\N	\N	0	4	2014-03-01 20:42:14	2014-03-01 20:42:14	144	bob.clj
300	22	89cc164712fea36b3ef9209b	pending	clojure	bob	(ns bob)\n(use '[clojure.string :only [upper-case blank?]])\n\n(defn- nothing? [statement]\n  (blank? statement))\n\n(defn- shout? [statement]\n  (= (upper-case statement) statement))\n\n(defn- question? [statement]\n  (= (last statement) \\?))\n\n(defn response-for [statement]\n  (cond\n    (nothing? statement) "Fine, be that way."\n    (shout? statement) "Woah, chill out!" \n    (question? statement) "Sure."\n    :else "Whatever."))	\N	\N	0	5	2014-03-11 09:59:26	2014-03-11 09:59:26	144	bob.clj
301	22	add3a1d26bc8a4cfa0a5871c	superseded	clojure	bob	(ns bob)\n\n;; this is my first take on Clojure, it took about 30 minutes :)\n\n(defn last [str]\n  (let [len (count str)]\n    (subs str (- len 1))))\n\n(defn response-for\n  "That's how Bob thinks"\n  [arg]\n  (cond\n    (= (count arg) 0) "Fine, be that way."\n    (= (.toUpperCase arg) arg) "Woah, chill out!" \n    (= (last arg) "?") "Sure."\n    :else "Whatever."))	\N	\N	0	1	2014-03-19 03:10:35	2014-03-19 03:10:35	144	bob.clj
302	22	ce81a51d03fa35b70e299b43	superseded	clojure	bob	(ns bob)\n(use '[clojure.string :only [upper-case blank?]])\n\n(defn shout? [statement]\n  (= (upper-case statement) statement))\n\n(defn question? [statement]\n  (= (last statement) \\?))\n\n(defn response-for [statement]\n  (cond\n    (blank? statement) "Fine, be that way."\n    (shout? statement) "Woah, chill out!" \n    (question? statement) "Sure."\n    :else "Whatever."))	\N	\N	0	3	2014-05-16 10:29:51	2014-05-16 10:29:51	144	bob.clj
303	22	1191291d3a7f16f03e8c3b27	superseded	clojure	bob	(ns bob)\n(use 'clojure.string)\n\n(defn shout? [statement]\n  (= (upper-case statement) statement))\n\n(defn question? [statement]\n  (= (last statement) \\?))\n\n(defn response-for [statement]\n  (cond\n    (blank? statement) "Fine, be that way."\n    (shout? statement) "Woah, chill out!" \n    (question? statement) "Sure."\n    :else "Whatever."))	\N	\N	0	2	2014-05-21 10:53:58	2014-05-21 10:53:58	144	bob.clj
304	22	f3eb93b8fa6d636e6e58db9d	pending	ruby	series	class Series\n  def initialize string_of_digits\n    @numbers = string_of_digits.chars.map(&:to_i)\n  end\n\n  def slices num\n    raise ArgumentError if num > @numbers.length\n    @numbers.each_cons(num).to_a\n  end\nend	\N	\N	0	1	2014-05-27 21:16:09	2014-05-27 21:16:09	145	series.rb
305	22	ed66e562fa423fcf39ca6732	pending	ruby	bob	class Bob\n\n  @@response1 = "Woah, chill out!"\n  @@response2 = "Sure."\n  @@response3 = "Fine. Be that way!"\n  @@response4 = "Whatever."\n   \n  def hey(input) \n    if input.strip.length == 0\n      return @@response3\n    elsif input == input.upcase && input.match("[a-zA-Z]") != nil\n      return @@response1\n    elsif input[-1, 1] == "?" \n      return @@response2\n    else\n      return @@response4\n    end\n  end\n\nend	\N	\N	0	1	2014-03-22 13:00:19	2014-03-22 13:00:19	146	bob.rb
306	22	ce5bc65ca9009ebbf5990389	pending	python	rna-transcription	class DNA(object):\n    def __init__(self, nucleotides_seq):\n        self.seq = nucleotides_seq\n\n    def to_rna(self):\n        return self.seq.replace('T', 'U')	\N	\N	0	1	2014-02-25 19:06:34	2014-02-25 19:06:34	147	rna-transcription.py
307	22	e0dcf77787ed1f7963d309a2	pending	haskell	grade-school	module School where\n\nimport qualified Data.Map as Map\nimport Data.List (sort)\n\ntype School = Map.Map Grade [Name]\ntype Grade  = Int\ntype Name   = String\n\nadd :: Grade -> Name -> School -> School\nadd g n = Map.insertWith (++) g [n]\n\nempty :: School\nempty = Map.empty\n\ngrade :: Grade -> School -> [Name]\ngrade = Map.findWithDefault []\n\nsorted :: School -> [(Grade, [Name])]\nsorted = map (\\(a, ns) -> (a, sort ns)) . Map.toAscList	\N	\N	0	1	2014-02-20 12:24:56	2014-02-20 12:24:56	148	School.hs
308	22	711b57a9153c56771ceca9c6	pending	ruby	etl	class ETL\n\n  def self.transform(key_words)\n    key_words.each_with_object({}) do |(key, words), transformation|\n      words.each do |word|\n        transformation[word.downcase] = key\n      end\n    end\n  end\n\nend	\N	\N	0	1	2014-06-14 17:50:48	2014-06-14 17:50:48	149	etl.rb
309	22	a41db070631c624ab3e80509	pending	ruby	accumulate	class Array\n  def accumulate(&block)\n    result = []\n    for index in (0..size)\n      result << block.call(get(index))\n    end\n    result\n  end\nend	\N	\N	0	1	2014-03-10 23:40:53	2014-03-10 23:40:53	150	accumulate.rb
310	22	872d85a6e9d2893258bba85b	superseded	go	robot-name	package robotname\r\n\r\nimport (\r\n\t"fmt"\r\n\t"math/rand"\r\n)\r\n\r\ntype Robot struct {\r\n\tname string\r\n}\r\n\r\nfunc (r *Robot) Name() (name string) {\r\n\r\n\tif r.name == "" {\r\n\t\tr.name = fmt.Sprintf("%c%c%03d",\r\n\t\t\t'A'+byte(rand.Intn(26)),\r\n\t\t\t'A'+byte(rand.Intn(26)),\r\n\t\t\trand.Intn(1000),\r\n\t\t)\r\n\t}\r\n\treturn r.name\r\n}\r\n\r\nfunc (r *Robot) Reset() {\r\n\t*r = Robot{}\r\n}\r	\N	\N	0	1	2014-05-02 12:59:18	2014-05-02 12:59:18	151	robot_name.go
311	22	7fde2c48452a32d7137e02e0	pending	go	robot-name	package robotname\r\n\r\nimport (\r\n\t"fmt"\r\n\t"math/rand"\r\n)\r\n\r\ntype Robot struct {\r\n\tname string\r\n}\r\n\r\nfunc (r *Robot) Name() string {\r\n\tif r.name == "" {\r\n\t\tr.name = fmt.Sprintf("%c%c%03d",\r\n\t\t\t'A'+byte(rand.Intn(26)),\r\n\t\t\t'A'+byte(rand.Intn(26)),\r\n\t\t\trand.Intn(1000),\r\n\t\t)\r\n\t}\r\n\treturn r.name\r\n}\r\n\r\nfunc (r *Robot) Reset() {\r\n\t*r = Robot{}\r\n}\r	\N	\N	0	2	2014-06-16 09:34:45	2014-06-16 09:34:45	151	robot_name.go
312	22	97bf086141cff2e3559c0fdd	pending	ruby	rna-transcription	class DNA < Struct.new(:code)\n  RNA_DICTIONARY = {\n    "A" => "A",\n    "C" => "C",\n    "G" => "G",\n    "T" => "U"\n  }\n\n  def to_rna\n    dictionary = unique_dictionary(RNA_DICTIONARY)\n    code.tr(dictionary.keys.join, dictionary.values.join)\n  end\n\n  private\n\n  def unique_dictionary(dictionary)\n    dictionary.reject do |from, to|\n      from == to\n    end\n  end\nend	\N	\N	0	3	2014-03-19 04:31:49	2014-03-19 04:31:49	152	rna-transcription.rb
313	22	f35199e061bc3b1e79df12ef	superseded	ruby	rna-transcription	class DNA < Struct.new(:code)\n  def to_rna\n    code.tr("T", "U")\n  end\nend	\N	\N	0	2	2014-04-21 14:22:04	2014-04-21 14:22:04	152	rna-transcription.rb
322	22	1fa7bb1eaeef4a5d21a4a3a0	superseded	ruby	hamming	class Hamming\n  def self.compute first_strand, second_strand \n      nucleotides_paired_up_from(first_strand, second_strand)\\\n       .reject{|nucleotides| nucleotides[0] == nucleotides[1]}\\\n       .size\n  end\n\n  def self.nucleotides_paired_up_from first_strand, second_strand\n    min_length = min_length_between first_strand, second_strand\n    first_strand.chars.zip(second_strand.chars).take(min_length)\n  end\n\n  def self.min_length_between first_strand, second_strand\n    [first_strand, second_strand].map(&:length).min\n  end\n\n  private_class_method :nucleotides_paired_up_from, :min_length_between\nend	\N	\N	0	2	2014-01-31 01:32:51	2014-01-31 01:32:51	156	hamming.rb
323	22	04ade9a9b6760ab88cfd001b	superseded	ruby	hamming	class Hamming\n  def self.compute first_strand, second_strand \n      nucleotides_paired_up_from(first_strand, second_strand)\\\n       .reject{|nucleotides| nucleotides[0] == nucleotides[1]}\\\n       .size\n  end\n\n  def self.nucleotides_paired_up_from first_strand, second_strand\n    min_length = min_length_between first_strand, second_strand\n    first_strand.chars.zip(second_strand.chars).take(min_length)\n  end\n\n  def self.min_length_between first_strand, second_strand\n    min_length = [first_strand, second_strand].map(&:length).min\n  end\n\n  private_class_method :nucleotides_paired_up_from, :min_length_between\nend	\N	\N	0	1	2014-05-06 13:08:30	2014-05-06 13:08:30	156	hamming.rb
324	22	368124e87a6a85c61c5faf19	pending	ruby	hamming	class Hamming\n  def self.compute first_strand, second_strand \n      nucleotides_paired_up_from(first_strand, second_strand)\\\n       .count{|nucleotides| nucleotides[0] != nucleotides[1]}\n  end\n\n  def self.nucleotides_paired_up_from first_strand, second_strand\n    min_length = min_length_between first_strand, second_strand\n    first_strand.chars.zip(second_strand.chars).take(min_length)\n  end\n\n  def self.min_length_between first_strand, second_strand\n    [first_strand, second_strand].map(&:length).min\n  end\n\n  private_class_method :nucleotides_paired_up_from, :min_length_between\nend	\N	\N	0	3	2014-06-19 19:35:51	2014-06-19 19:35:51	156	hamming.rb
325	22	8a8edfebd10f068d6126aeac	superseded	javascript	leap	var isLeapYear = function(year) {\n\treturn year % 4 == 0 \n\t    && (year % 100 != 0 || year % 400 == 0);\n};\n\nmodule.exports = isLeapYear;	\N	\N	0	1	2014-02-13 14:41:54	2014-02-13 14:41:54	157	leap.js
326	22	f26e8f48593a791bf5ae5157	superseded	javascript	leap	var isLeapYear = function(year) {\n\tis_divisible_by_4 = year % 4 === 0;\n\tis_not_divisible_by_100_unless_divisible_by_400 = year % 100 !== 0 || year % 400 === 0;\n\n\treturn is_divisible_by_4 && is_not_divisible_by_100_unless_divisible_by_400;\n};\n\nmodule.exports = isLeapYear;	\N	\N	0	2	2014-04-09 06:43:43	2014-04-09 06:43:43	157	leap.js
327	22	c4cf9aab653ebd410d414406	superseded	javascript	leap	var isDivisibleBy = function(n, x) {\n\treturn n % x == 0;\n}\n\nvar isLeapYear = function(year) {\n    return isDivisibleBy(year, 4)\n        && ( ! isDivisibleBy(year, 100) || isDivisibleBy(year, 400) );\n};\n\nmodule.exports = isLeapYear;	\N	\N	0	3	2014-05-19 03:41:44	2014-05-19 03:41:44	157	leap.js
328	22	88257fb1adcbc0ed4641493b	superseded	javascript	leap	var Year = function(year) {\n\tthis.year = year;\n}\n\nYear.prototype.isDivisibleBy = function(n) {\n\treturn this.year % n === 0;\n}\n\nvar isLeapYear = function(year) {\n\tvar year = new Year(year);\n    return year.isDivisibleBy(4)\n        && ( ! year.isDivisibleBy(100) || year.isDivisibleBy(400) );\n};\n\nmodule.exports = isLeapYear;	\N	\N	0	4	2014-06-18 13:07:49	2014-06-18 13:07:49	157	leap.js
329	22	e15a31cc1fed08355a8d5d80	pending	javascript	leap	var Year = function(year) {\n\tthis.year = year;\n}\n\nYear.prototype.isDivisibleBy = function(n) {\n\treturn this.year % n === 0;\n}\n\nYear.prototype.isLeapYear = function() {\n\treturn this.isDivisibleBy(4)\n\t\t&& ( ! this.isDivisibleBy(100) || this.isDivisibleBy(400) );\n}\n\nvar isLeapYear = function(year) {\n\tvar year = new Year(year);\n    return year.isLeapYear();\n};\n\nmodule.exports = isLeapYear;	\N	\N	0	5	2014-06-30 16:24:13	2014-06-30 16:24:13	157	leap.js
330	22	8d2a34aae80f450c6e816288	pending	javascript	atbash-cipher	var _ = require('underscore');\nfunction Atbash(){\n  var forwardAlphabet = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "n", "m", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z","0","1", "2", "3", "4", "5", "6", "7", "8", "9"]\n  var reverseAlphabet = ["z", "y", "x", "w", "v", "u", "t", "s", "r", "q", "p", "o", "m", "n", "l", "k", "j", "i", "h", "g", "f", "e", "d", "c", "b", "a", "0","1", "2", "3", "4", "5", "6", "7", "8", "9"]\n  this.encode = function(string){\n    string = string.toLowerCase().replace(/ /g,"");\n    var cypherString="";\n    for(var i=0, l=string.length; i<l; i++){\n      var character = string.charAt(i);\n      var characterIndex = forwardAlphabet.indexOf(character);\n      if(characterIndex !== -1){\n        cypherString+=reverseAlphabet[characterIndex];\n      }\n    }\n    return cypherString.replace(/(\\w{5})/g, '$1' + ' ').trim();\n  }\n}\n\nmodule.exports = new Atbash();	\N	\N	0	1	2014-02-15 08:52:08	2014-02-15 08:52:08	158	atbash-cipher.js
331	22	c34efe68932ff4d31bfa590d	pending	elixir	rna-transcription	defmodule DNA do\n\n  def to_rna(strand) do\n    Enum.map(strand, &(if &1 == ?T, do: ?U, else: &1))\n  end\nend	\N	\N	0	1	2014-02-21 06:59:00	2014-02-21 06:59:00	159	rna-transcription.exs
332	22	d222e7d344e80e7dbe905960	superseded	clojure	leap	(ns leap)\n\n(defn leap-year? [year]\n  (cond\n    (zero? (mod year 400)) true\n    (zero? (mod year 100)) false\n    (zero? (mod year 4)) true\n    :else false))	\N	\N	0	1	2014-03-05 00:04:08	2014-03-05 00:04:08	160	leap.clj
333	22	92495640971a89e5df1984ae	pending	clojure	leap	(ns leap)\n\n(defn leap-year? [year]\n  (cond\n    (zero? (mod year 400)) true\n    (zero? (mod year 100)) false\n    :else (zero? (mod year 4))))	\N	\N	0	2	2014-04-13 00:35:51	2014-04-13 00:35:51	160	leap.clj
334	22	621fbd8fcc36236e96f3ebe6	pending	ruby	raindrops	class Raindrops\n  def self.convert(number)\n    str = ""\n\n    str << "Pling" if number % 3 == 0\n    str << "Plang" if number % 5 == 0\n    str << "Plong" if number % 7 == 0\n\n    str.empty? ? number.to_s : str\n  end\nend	\N	\N	0	1	2014-02-05 15:59:08	2014-02-05 15:59:08	161	raindrops.rb
335	22	599a03e455f00b704686a0a0	pending	elixir	bob	defmodule Teenager do\n  def hey(statement) do\n    cond do\n      question?(statement) -> "Sure."\n      silence?(statement)  -> "Fine. Be that way!"\n      shouted?(statement)  -> "Woah, chill out!"\n      true                 -> "Whatever."\n    end\n  end\n\n  defp question?(statement) do\n    String.ends_with?(statement, "?")\n  end\n\n  defp silence?(statement) do\n    String.strip(statement) == ""\n  end\n\n  defp shouted?(statement) do\n    statement == String.upcase(statement)\n  end\nend	\N	\N	0	3	2014-03-23 09:35:51	2014-03-23 09:35:51	162	bob.exs
336	22	a54b4f518e4d6174e994df8f	superseded	elixir	bob	defmodule Teenager do\n  def hey(statement) do\n    cond do\n      is_question? statement  -> "Sure."\n      is_silence?(statement)  -> "Fine. Be that way!"\n      is_shouted?(statement)  -> "Woah, chill out!"\n      true                    -> "Whatever."\n    end\n  end\n\n  def is_question?(statement) do\n    Regex.match?(%r/\\?$/, statement)\n  end\n\n  def is_silence?(statement) do\n    String.strip(statement) == ""\n  end\n\n  def is_shouted?(statement) do\n    statement == String.upcase(statement)\n  end\nend	\N	\N	0	1	2014-03-25 21:58:47	2014-03-25 21:58:47	162	bob.exs
426	16	904459e633848478de3283a1	pending	ruby	leap	class Year\n  def self.leap?(year)\n    return true if year % 400 == 0\n    return false if year % 100 == 0\n    return true if year % 4 == 0\n  end\nend	\N	\N	0	1	2014-07-14 02:03:27	2014-07-14 02:03:27	207	year.rb
337	22	dacaa74e9d8df096943f872b	superseded	elixir	bob	defmodule Teenager do\n  def hey(statement) do\n    cond do\n      is_question? statement  -> "Sure."\n      is_silence?(statement)  -> "Fine. Be that way!"\n      is_shouted?(statement)  -> "Woah, chill out!"\n      true                    -> "Whatever."\n    end\n  end\n\n  defp is_question?(statement) do\n    String.ends_with?(statement, "?")\n  end\n\n  defp is_silence?(statement) do\n    String.strip(statement) == ""\n  end\n\n  defp is_shouted?(statement) do\n    statement == String.upcase(statement)\n  end\nend	\N	\N	0	2	2014-07-10 19:41:42	2014-07-10 19:41:42	162	bob.exs
338	22	09fe3db9e082813f5ce700b3	pending	coffeescript	bob	class Bob\n  hey: (str) ->\n    str = str.trim()\n    if silent str\n      "Fine. Be that way!"\n    else if shouting str\n      "Woah, chill out!"\n    else if askingPolitely str\n      "Sure."\n    else\n      "Whatever."\n\nsilent = (str) -> str == ''\n\nshouting = (str) -> /[A-Z]/.test(str) and str.toUpperCase() == str\n\naskingPolitely = (str) -> not shouting(str) and str[-1..] == '?'\n\nmodule.exports = Bob	\N	\N	0	3	2014-01-28 05:42:22	2014-01-28 05:42:22	163	bob.coffee
339	22	8f3f0c347a68536b78c8960f	superseded	coffeescript	bob	Bob = ->\n\nBob::hey = (str) ->\n  if silent str\n    "Fine. Be that way!"\n  else if shouting str\n    "Woah, chill out!"\n  else if askingPolitely str\n    "Sure."\n  else\n    "Whatever."\n\nsilent = (str) -> str.trim() == ''\n\nshouting = (str) -> /[A-Z]/.test(str) and str.toUpperCase() == str\n\naskingPolitely = (str) -> not shouting(str) and str.slice(-1) == '?'\n\nmodule.exports = Bob	\N	\N	0	1	2014-03-08 19:55:07	2014-03-08 19:55:07	163	bob.coffee
340	22	ba0ae978e5fa76abb8e36625	superseded	coffeescript	bob	Bob = ->\n\nBob::hey = (str) ->\n  str = str.trim()\n  if silent str\n    "Fine. Be that way!"\n  else if shouting str\n    "Woah, chill out!"\n  else if askingPolitely str\n    "Sure."\n  else\n    "Whatever."\n\nsilent = (str) -> str == ''\n\nshouting = (str) -> /[A-Z]/.test(str) and str.toUpperCase() == str\n\naskingPolitely = (str) -> not shouting(str) and str[-1..] == '?'\n\nmodule.exports = Bob	\N	\N	0	2	2014-03-24 05:00:36	2014-03-24 05:00:36	163	bob.coffee
341	22	3b39dd55b0cb6267b7a29209	pending	clojure	rna-transcription	(ns dna)\n\n\n(def m {\\C \\G \\G \\C \\T \\A \\A \\U \\U \\A})\n\n(defn translate-letter [n] (if (contains? m n)\n  (m n)\n  (throw (new AssertionError (str "no")))))\n\n(defn to-rna [dna]\n  (apply str (map translate-letter (seq dna))))	\N	\N	0	2	2014-03-11 21:06:02	2014-03-11 21:06:02	164	dna.clj
342	22	f412e40e192a6aff7dfa1caf	superseded	clojure	rna-transcription	(ns dna)\n\n\n(def m {\\C \\G \\G \\C \\T \\A \\A \\U \\U \\A})\n\n(defn translate-letter [n] (m n))\n\n(defn to-rna [dna]\n  (apply str (map translate-letter (seq dna))))	\N	\N	0	1	2014-04-06 23:49:38	2014-04-06 23:49:38	164	dna.clj
343	22	6b79bc9c51935c913f061358	superseded	haskell	point-mutations	module DNA (hammingDistance) where\n\nhammingDistance ::  String -> String -> Int\nhammingDistance xs ys = foldr (\\(x,y) t -> if x/=y then t+1 else t) 0 $ zip xs ys	\N	\N	0	1	2014-02-08 17:01:49	2014-02-08 17:01:49	165	DNA.hs
344	22	395e197116dd2552a6e5777e	pending	haskell	point-mutations	module DNA (hammingDistance) where\n\nhammingDistance :: String -> String -> Int\nhammingDistance xs ys = length $ filter (==True) $ zipWith (/=) xs ys	\N	\N	0	2	2014-03-26 13:56:20	2014-03-26 13:56:20	165	DNA.hs
345	22	23d73d4726286dbba6babb66	superseded	python	bob	class Bob:\n\n\tdef __init__(self):\n\t\tself.chill = "Woah, chill out!"\n\t\tself.whatever = "Whatever."\n\t\tself.sure = "Sure."\n\t\tself.fine = "Fine. Be that way!"\n\n\tdef hey(self, s):\n\t\tif s.strip() == '':\n\t\t\treturn self.fine\n\t\telif s.isupper():\n\t\t\treturn self.chill\n\t\telif s[-1] == '?':\n\t\t\treturn self.sure\n\t\telse:\n\t\t\treturn self.whatever	\N	\N	0	1	2014-04-07 22:32:19	2014-04-07 22:32:19	166	bob.py
346	22	37eb9593a2a8ad0e9106269d	pending	python	bob	class Bob:\n\n\tdef hey(self, message):\n\t\tif message.strip() == '':\n\t\t\treturn "Fine. Be that way!"\n\t\telif message.isupper():\n\t\t\treturn "Woah, chill out!"\n\t\telif message[-1] == '?':\n\t\t\treturn "Sure."\n\t\telse:\n\t\t\treturn "Whatever."	\N	\N	0	2	2014-04-22 17:25:59	2014-04-22 17:25:59	166	bob.py
347	22	b8251da52763f0b22beb1e8a	pending	python	leap	class Year(object):\n\n    def __init__(self, year):\n        self.year = year\n\n    def is_leap_year(self):\n        return self.year % 4 == 0 and (not self.year % 100 == 0 or self.year % 400 == 0)	\N	\N	0	1	2014-03-17 21:24:28	2014-03-17 21:24:28	167	year.py
348	22	40a7b14bf364cedc36ba696a	pending	go	binary	package binary\n\nfunc ToDecimal(bin string) (i int) {\n\texp := len(bin) - 1\n\n\tfor _, c := range bin {\n\t\tif '1' == c {\n\t\t\ti += 1 << uint(exp)\n\t\t} else if '0' != c {\n\t\t\treturn 0\n\t\t}\n\t\texp--\n\t}\n\n\treturn i\n}	\N	\N	0	2	2014-02-08 16:46:03	2014-02-08 16:46:03	168	binary.go
349	22	62109aa1a1ab7f96d23fc243	superseded	go	binary	package binary\n\nfunc ToDecimal(bin string) (i int) {\n\texp := len(bin) - 1\n\n\tfor _, c := range bin {\n\t\tif 0 == uint(c-'1') {\n\t\t\ti += 1 << uint(exp)\n\t\t} else if 0 != uint(c-'0') {\n\t\t\treturn 0\n\t\t}\n\t\texp--\n\t}\n\n\treturn i\n}	\N	\N	0	1	2014-03-30 07:51:39	2014-03-30 07:51:39	168	binary.go
350	22	b5a29a9c74f21861834729aa	pending	elixir	grains	defmodule Grains do\n\n  def square(n), do: trunc :math.pow(2, n - 1)\n\n  def total, do: Enum.reduce(1..64, 0, &(square(&1) + &2))\nend	\N	\N	0	1	2014-03-20 18:05:20	2014-03-20 18:05:20	169	grains.exs
351	22	1e702a805d4e54ce8e1f08c8	pending	javascript	nucleotide-count	(function(module) {\n  var dnaNucleotides = ['A', 'T', 'C', 'G'],\n      nucleotides = dnaNucleotides.concat('U');\n\n  function isANucleotide(nucleotide) {\n    return nucleotides.indexOf(nucleotide) != -1;\n  }\n\n  function isADnaNucleotide(nucleotide) {\n    return dnaNucleotides.indexOf(nucleotide) != -1;\n  }\n\n  function countNucleotides(dna) {\n    var nucleotideCounts = {};\n    dna = dna.split('');\n    dnaNucleotides.forEach(function(dnaNucleotide) {\n      nucleotideCounts[dnaNucleotide] = dna.reduce(function(count, nucleotide) { return nucleotide == dnaNucleotide ? ++count : count }, 0);\n    })\n    return  nucleotideCounts;\n  }\n\n  module.exports = function(dna) {\n    var nucleotideCounts = countNucleotides(dna);\n\n    function count(nucleotide) {\n      if (!isANucleotide(nucleotide))\n        throw new Error('Invalid Nucleotide');\n      return isADnaNucleotide(nucleotide) ? nucleotideCounts[nucleotide] : 0;\n    }\n\n    return {\n      nucleotideCounts: nucleotideCounts,\n      count: count\n    };\n  };\n}(module));	\N	\N	0	1	2014-03-12 20:03:55	2014-03-12 20:03:55	170	nucleotide-count.js
352	22	76f195de25a942343f2f8668	superseded	ruby	anagram	module Word\n  def sort_characters(word)\n    word.chars.sort.join\n  end\n\n  def normalize(word)\n    word.downcase\n  end\nend\n\nclass Anagram\n  include Word\n\n  def initialize(detector)\n    @normalized_detector = normalize(detector)\n  end\n\n  def match(potential_anagrams)\n    potential_anagrams.select { |potential_anagram|\n      normalized_anagram = normalize(potential_anagram)\n      anagram?(sort_characters(normalized_anagram),sort_characters(@normalized_detector),normalized_anagram)\n    }\n  end\n\n  private\n\n  def anagram? (sorted_anagram, sorted_detector, normalized_anagram)\n    sorted_anagram == sorted_detector && normalized_anagram != @normalized_detector\n  end\n\nend	\N	\N	0	2	2014-02-23 02:39:38	2014-02-23 02:39:38	171	anagram.rb
365	22	ab7d395f838dd11de6057b3d	superseded	go	etl	package etl\n\nimport "strings"\n\ntype newFormat map[string]int\n\nfunc (f newFormat) set(l string, s int) {\n\tf[strings.ToLower(l)] = s\n}\n\nfunc Transform(i map[int][]string) newFormat {\n\tf := make(newFormat)\n\tfor score, letterAry := range i {\n\t\tfor _, letter := range letterAry {\n\t\t\tf.set(letter, score)\n\t\t}\n\t}\n\treturn f\n}	\N	\N	0	1	2014-03-31 17:00:32	2014-03-31 17:00:32	179	etl.go
353	22	3d553f8a3d48b2cb26e5e0de	superseded	ruby	anagram	class Anagram\n\n  def initialize(detector)\n    @normalized_detector = normalize(detector)\n  end\n\n  def match(potential_anagrams)\n    anagrams = []\n    index = 0\n\n    potential_anagrams.each do |potential_anagram|\n      @normalized_anagram = normalize(potential_anagram)\n\n      if anagram?(\n          sort_characters_in_word(@normalized_anagram),\n          sort_characters_in_word(@normalized_detector),\n          @normalized_anagram,\n          @normalized_detector )\n        anagrams[index] = potential_anagram\n        index += 1\n      end\n    end\n    anagrams\n  end\n\n  private\n\n  def anagram? (sorted_anagram, sorted_detector, normalized_anagram, normalized_detector)\n    sorted_anagram == sorted_detector && does_not_equal?(normalized_anagram, normalized_detector)\n  end\n\n  def does_not_equal?(anagram, detector)\n    anagram != detector\n  end\n\n  def sort_characters_in_word(word)\n    word.chars.sort.join\n  end\n\n  def normalize(word)\n    word.downcase\n  end\nend	\N	\N	0	1	2014-03-17 01:52:50	2014-03-17 01:52:50	171	anagram.rb
354	22	3fee9252d56e13903cbac387	pending	ruby	anagram	module Word\n  def sort_characters(word)\n    word.chars.sort.join\n  end\n\n  def normalize(word)\n    word.downcase\n  end\nend\n\nclass Anagram\n  include Word\n\n  def initialize(detector)\n    @normalized_detector = normalize(detector)\n    @sorted_detector = sort_characters(@normalized_detector)\n  end\n\n  def match(potential_anagrams)\n    potential_anagrams.select { |potential_anagram|\n      normalized_anagram = normalize(potential_anagram)\n      anagram?(sort_characters(normalized_anagram),@sorted_detector,normalized_anagram)\n    }\n  end\n\n  private\n\n  def anagram? (sorted_anagram, sorted_detector, normalized_anagram)\n    sorted_anagram == sorted_detector && normalized_anagram != @normalized_detector\n  end\n\nend	\N	\N	0	3	2014-07-08 19:52:06	2014-07-08 19:52:06	171	anagram.rb
355	22	64b25b6499abef53e20daa69	pending	ruby	robot-name	class Robot\n\n  attr_accessor :name\n  \n  def initialize\n    generate_name\n  end\n\n  def reset\n    generate_name\n  end\n\n  private \n\n  def generate_name\n    self.name = (('A'..'Z').to_a.sample(2) + ('0'..'9').to_a.sample(3)).join\n  end\n\nend	\N	\N	0	1	2014-03-11 12:44:47	2014-03-11 12:44:47	172	robot.rb
356	22	e6fe1e2f3e8e5135a5e1809d	superseded	haskell	word-count	module WordCount (wordCount) where\n\nimport Control.Arrow ((&&&))\nimport Data.Char\nimport Data.List\nimport qualified Data.Map as M\n\nwordCount :: String -> M.Map String Int\nwordCount = M.fromList . rle . normalize\n\n-- |Run length encoding\nrle :: Ord a => [a] -> [(a,Int)]\nrle = map (head &&& length) . group . sort\n\n-- |Normalize a string into the list of words\nnormalize :: String -> [String]\nnormalize = words .\n            map (\\c -> if isAlphaNum c then c else ' ') .\n            map toLower	\N	\N	0	1	2014-01-29 18:15:10	2014-01-29 18:15:10	173	word-count.hs
357	22	9ff420c8a2c7673a72ce3669	pending	haskell	word-count	module WordCount (wordCount) where\n\nimport           Control.Arrow   ((&&&))\nimport           Data.Char       (isAlphaNum, toLower)\nimport           Data.List       (group, sort)\nimport           Data.List.Split (wordsBy)\nimport qualified Data.Map.Strict as M\n\nwordCount :: String -> M.Map String Int\nwordCount = M.fromList . runLengthEncode . normSplit\n\nrunLengthEncode :: Ord a => [a] -> [(a,Int)]\nrunLengthEncode = map (head &&& length) . group . sort\n\n-- |Normalize and split a string into the list of words\nnormSplit :: String -> [String]\nnormSplit = map (map toLower) . wordsBy (not . isAlphaNum)	\N	\N	0	2	2014-02-06 02:39:57	2014-02-06 02:39:57	173	word-count.hs
358	22	a341e85773da1f53f6f53381	pending	javascript	bob	// A lackadaisical teenager\nBob = function() {\n    \n    // Define how a lackadaisical teenager talks back when spoken to\n    var talkback = {\n\tquestion: {\n\t    // If it's a question (last character is question mark\n\t    test: function(s) { return s.slice(-1) === '?' },\n\t    response: 'Sure'\n\t},\n\tyell: {\n\t    // If Bob is getting yelled at (all uppercase)\n\t    test: function(s) { return s === s.toUpperCase(); },\n\t    response: 'Woah, chill out!'\n\t},\n\tsilence: {\n\t    // If Bob is getting the silent treatment (empty string)\n\t    test: function(s) { return s === ''; },\n\t    response: 'Fine, be that way.'\n\t},\n\ttalk: {\n\t    // Default response if all else fails\n\t    test: function(s) { return true; },\n\t    response: 'Whatever'\n\t},\n\t// Order in which to execute the tests (evaluation order is important \n\t// since e.g. the silent treatment is also all uppercased and talk\n\t// always evaluates as true (and must therefore be last)\n\tprecedence: ['silence', 'yell', 'question', 'talk']\n    };\n\n    // Greet the lackadaisical teenager\n    this.hey = function(sentence) {\n\t// Go through the precedence array\n\tfor (var idx=0, len=talkback.precedence.length; idx<len; idx++) {\n\t    // Get the type of talk\n\t    var talktype = talkback.precedence[idx];\n\n\t    // If the test for this type returns true we return the response\n\t    if (talkback[talktype].test(sentence))\n\t\treturn talkback[talktype].response;\n\t}\n\n\t// Since talk (default response) always returns true we never end up \n\t// here. If talk is removed Bob will say an undefined thing.\n    };\n};	\N	\N	0	1	2014-02-10 01:12:27	2014-02-10 01:12:27	174	bob.js
359	22	65e51f8ed88e5787d713f3cb	pending	python	word-count	from collections import Counter\nimport re\n\nclass Phrase(object):\n  def __init__(self, phrase):\n    self._word_count = dict(Counter(re.findall('\\w+', phrase.lower())))\n\n  def word_count(self):\n    return self._word_count	\N	\N	0	2	2014-02-18 23:23:43	2014-02-18 23:23:43	175	word-count.py
360	22	c3783a55a62115088d88fd72	superseded	python	word-count	from collections import Counter\nimport re\n\nclass Phrase(object):\n  def __init__(self, phrase):\n    self._word_count = dict(Counter(re.split('\\W+', phrase.lower())))\n    if '' in self._word_count:\n      del self._word_count['']\n\n  def word_count(self):\n    return self._word_count	\N	\N	0	1	2014-06-11 21:25:50	2014-06-11 21:25:50	175	word-count.py
361	22	535f20748705530557db042a	pending	elixir	triangle	defmodule Triangle do\n  def kind(a, b, c) do\n    sides = Enum.sort([a, b, c])\n    if Enum.any?(sides, &(&1 <= 0)) do\n      {:error, "all side lengths must be positive"}\n    else\n      [a, b, c] = sides\n      if a + b <= c do\n        {:error, "side lengths violate triangle inequality"}\n      else\n        kind = case {a == b, b == c} do\n          {true, true} -> :equilateral\n          {true, _} -> :isosceles\n          {_, true} -> :isosceles\n          _ -> :scalene\n        end\n        {:ok, kind}\n      end\n    end\n  end\nend	\N	\N	0	1	2014-04-04 13:15:00	2014-04-04 13:15:00	176	triangle.exs
362	22	adbb7a952babd0e51a970a67	superseded	haskell	rna-transcription	module DNA (toRNA) where\n\ntoRNA :: String -> String\ntoRNA dna_str =\n\tmap trans dna_str\n\ntrans :: Char -> Char\ntrans a \n\t| a == 'T' = 'U'\n\t| otherwise = a	\N	\N	0	1	2014-06-09 04:21:52	2014-06-09 04:21:52	177	DNA.hs
363	22	6e296c649e780d29ad6ab9ef	pending	haskell	rna-transcription	module DNA (toRNA) where\n\ntoRNA :: String -> String\ntoRNA = map trans\n\ntrans :: Char -> Char\ntrans a\n\t| a == 'T' = 'U'\n\t| otherwise = a	\N	\N	0	2	2014-07-07 12:46:39	2014-07-07 12:46:39	177	DNA.hs
364	22	7e3fdc626b2e1b64daa02b44	pending	perl5	etl	package ETL;\n\nuse strict;\nuse warnings;\n\nsub transform {\n  my ($input) = @_;\n\n  my $output = {};\n\n  foreach my $value (keys %$input) {\n    foreach my $letter (@{ $input->{$value} }) {\n      $output->{lc $letter} = $value;\n    }\n  }\n\n  return $output;\n}\n\n1;	\N	\N	0	1	2014-02-19 10:29:22	2014-02-19 10:29:22	178	ETL.pm
367	22	8e0e89b202fb31c29e287fde	pending	go	scrabble-score	package scrabble_score\n\nimport (\n\t"strings"\n)\n\n// Score returns the point-value of a scrabble word.  Invalid scrabble\n// characters (e.g. spaces) are ignored.\nfunc Score(word string) int {\n\tvar score int\n\tfor _, c := range strings.ToUpper(word) {\n\t\tscore += pointValues[c]\n\t}\n\treturn score\n}\n\nvar pointValues = map[rune]int{\n\t'A': 1,\n\t'E': 1,\n\t'I': 1,\n\t'O': 1,\n\t'U': 1,\n\t'L': 1,\n\t'N': 1,\n\t'R': 1,\n\t'S': 1,\n\t'T': 1,\n\t'D': 2,\n\t'G': 2,\n\t'B': 3,\n\t'C': 3,\n\t'M': 3,\n\t'P': 3,\n\t'F': 4,\n\t'H': 4,\n\t'V': 4,\n\t'W': 4,\n\t'Y': 4,\n\t'K': 5,\n\t'J': 8,\n\t'X': 8,\n\t'Q': 10,\n\t'Z': 10,\n}	\N	\N	0	1	2014-03-07 15:47:28	2014-03-07 15:47:28	180	scrabble_score.go
368	22	6d91bc06d276be92a127c8c0	superseded	javascript	anagram	var Anagram = function( word ) {\n\t\n\tvar match = function(candidates){\n\n\t\tvar anagrams = [];\t\t\n\n\t\tfor(var i = 0; i < candidates.length; i++){\t\t\t\n\t\t\t\n\t\t\tvar candidate = candidates[i];\n\n\t\t\tif( isAnagram(candidate) ){\n\t\t\t\tanagrams.push(candidate);\n\t\t\t}\n\n\t\t}\n\n\t\treturn anagrams;\n\t}\n\n\tvar rankWord = function(word){\n\t\tvar rank = 0;\n\n\t\tword = word.toLowerCase();\n\n\t\tfor(var i = 0; i < word.length; i++){\n\t\t\trank += word.charCodeAt(i);\t\t\t\n\t\t}\n\n\t\treturn rank;\n\t}\n\n\tvar isAnagram = function(candidate){\n\t\tvar isEqualToWordRank = rank === rankWord(candidate);\n\t\tvar isDuplicate = candidate === word;\n\t\treturn  isEqualToWordRank && !isDuplicate;\n\t}\n\n\tvar rank = rankWord(word);\n\n\treturn {\n\t\tmatch:match\n\t}\n}\n\n\nmodule.exports = Anagram;	\N	\N	0	1	2014-02-26 14:00:36	2014-02-26 14:00:36	181	anagram.js
369	22	7d04023912fc6c9555e40087	superseded	javascript	anagram	var Anagram = function( word ) {\n\tthis.word = word;\n}\n\nAnagram.prototype = {\n\n\tmatch: function( candidates ){\t\t\n\t\treturn candidates.filter(this.isAnagramOf, this);\n\t},\n\n\tisAnagramOf: function(other){\t\t\n\t\tvar isAnagram = this.quantify(this.word) === this.quantify(other);\n\t\tvar isNotSameWord = this.word !== other;\n\t\treturn isAnagram && isNotSameWord;\n\t},\n\n\tquantify: function(word){\t\t\n\t\t\n\t\tword = word.toLowerCase();\n\n\t\tvar value = word.length;\n\t\t\n\t\tfor( var i = 0; i < word.length; i++ ){\n\t\t\tvalue += word.charCodeAt(i);\n\t\t}\t\t\n\n\t\treturn value;\n\t}\n}\n\nmodule.exports = Anagram;	\N	\N	0	2	2014-03-31 11:12:22	2014-03-31 11:12:22	181	anagram.js
370	22	2851cc2b52d47f5419642c53	pending	javascript	anagram	var Anagram = function( word ) {\n\tthis.word = word;\n}\n\nAnagram.prototype = {\n\n\tmatch: function( candidates ){\t\t\n\t\treturn candidates.filter(this.isAnagramOf, this);\n\t},\n\n\tisAnagramOf: function(other){\t\t\n\t\tvar isAnagram = this.normalize(this.word) === this.normalize(other);\n\t\tvar isNotSameWord = this.word !== other;\n\t\treturn isAnagram && isNotSameWord;\n\t},\n\n\tnormalize: function(word){\t\t\n\t\treturn word.toLowerCase()\n\t\t\t.split('')\n\t\t\t.sort()\n\t\t\t.join('');\t\t\n\t}\n}\n\nmodule.exports = Anagram;	\N	\N	0	3	2014-04-11 00:03:05	2014-04-11 00:03:05	181	anagram.js
371	16	83b864a9961b2653f81bd198	pending	clojure	bob	(ns bob\n  (:require [clojure.string :refer [upper-case lower-case blank?]]))\n\n(defn- shouting? [input]\n  (and\n    (= input (upper-case input))\n    (not (= input (lower-case input)))))\n\n(defn- question? [input]\n  (= \\? (last input)))\n\n(defn response-for [input]\n  (cond\n    (blank? input)    "Fine. Be that way!"\n    (shouting? input) "Woah, chill out!"\n    (question? input) "Sure."\n    true              "Whatever."))	\N	\N	0	1	2014-07-17 15:41:30	2014-07-17 15:41:30	182	bob.clj
372	16	54559ab342619a384169d110	pending	javascript	robot-name	function chooser(chars) {\n  return  function() {\n    var index = Math.floor(Math.random() * chars.length);\n    return chars[index];\n  };\n}\n\nvar ch = chooser('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\nvar dig = chooser('0123456789');\n\nvar SEEN = {};\n\nfunction genName() {\n  var name = ch() + ch() + dig() + dig() + dig();\n\n  if (SEEN[name]) { return genName(); }\n\n  SEEN[name] = 1;\n  return name;\n}\n\nfunction Robot() {\n  this.reset();\n}\n\nRobot.prototype.reset = function() {\n  this.name = genName();\n};\n\nmodule.exports = Robot;	\N	\N	0	1	2014-06-28 15:26:02	2014-06-28 15:26:02	183	robot-name.js
373	16	32d08e86e674fa5f4e84917d	pending	elixir	bob	defmodule Teenager do\n  def hey(input) do\n    cond do\n      silence?(input) ->\n        "Fine. Be that way!"\n      shouting?(input) ->\n        "Woah, chill out!"\n      question?(input) ->\n        "Sure."\n      true ->\n        "Whatever."\n    end\n  end\n\n  def silence?(input) do\n    stripped = String.strip(input)\n    String.length(stripped) == 0\n  end\n\n  def shouting?(input) do\n    String.upcase(input) == input && String.downcase(input) != input\n  end\n\n  def question?(input) do\n    String.ends_with?(input, "?")\n  end\nend	\N	\N	0	1	2014-07-11 01:57:01	2014-07-11 01:57:01	184	bob.exs
374	16	90367fcc6b6681332e6be24d	superseded	ruby	hamming	class Hamming\n    def self.compute(original, mutated)\n        hamming_distance = 0\n        strand_length = [original.length, mutated.length].min\n        (0...strand_length).each do |nucleotide|\n            hamming_distance += 1 if original[nucleotide] != mutated[nucleotide]\n        end\n\n        hamming_distance\n    end\n\nend	\N	\N	0	1	2014-06-30 10:29:47	2014-06-30 10:29:47	185	hamming.rb
375	16	03b8fa491920f34e78ee3f50	superseded	ruby	hamming	class Hamming\r\n\r\n    def self.compute(original_strand, mutated_strand)\r\n        hamming_distance = 0\r\n\r\n        zip_strands(original_strand, mutated_strand).each do |original, mutated|\r\n            mutated and hamming_distance += 1 if original != mutated\r\n        end\r\n\r\n        hamming_distance\r\n    end\r\n\r\n    private\r\n\r\n    def self.zip_strands(original_strand, mutated_strand)\r\n        original_pieces = original_strand.chars\r\n        mutated_pieces = mutated_strand.chars\r\n\r\n        original_pieces.zip(mutated_pieces)\r\n    end\r\nend	\N	\N	0	2	2014-07-04 19:01:59	2014-07-04 19:01:59	185	hamming.rb
376	16	9ec82e4d10726dff0753a7be	pending	ruby	hamming	class Hamming\n    def self.compute(original, mutated)\n        hamming_distance = 0\n        strand_length = [original.length, mutated.length].min\n        (0...strand_length).each do |nucleotide|\n            hamming_distance += 1 unless original[nucleotide] == mutated[nucleotide]\n        end\n\n        hamming_distance\n    end\n\nend	\N	\N	0	3	2014-07-19 21:18:18	2014-07-19 21:18:18	185	hamming.rb
377	16	4c1436f884ab2d143630658a	pending	perl5	kindergarten-garden	package Kindergarten;\n\nuse strict;\nuse warnings;\n\nour %PLANTS = qw(R radishes C clover G grass V violets);\n\nsub new {\n    my $class = shift;\n    (bless { garden   => [split /\\s/, shift],\n\t     students => shift || students() }, $class)->_init();\n}\n\nsub students {\n    return [qw/Alice Bob Charlie David \n\t       Eve Fred Ginny Harriet\n\t       Ileana Joseph Kincaid Larry/];\n}\n\nsub _init {\n    my $self = shift;\n\n    foreach my $student ( @{ $self->{students} } ) {\n\tno strict 'refs';\n\tno warnings 'redefine';\n\t*{lc $student} = sub { $_[0]->student_garden($student) };\n    }\n\n    return $self;\n}\n\nsub student_garden {\n    my $self = shift;\n    my $student = shift;\n    \n    my $index = $self->student_nr($student);\n      \n    return [ map { $PLANTS{$_} }\n\t     map { split // }\n\t     map { substr( $_, $index*2, 2) }\n\t     @{ $self->{garden} } ];\n}\n\nsub student_nr {\n    my $self = shift;\n    my $student = shift;\n\n    my $idx = 0;\n    foreach my $s ( sort @{ $self->{students} } ) {\n\treturn $idx if $student eq $s;\n    } continue { $idx++ }\n}\n\n1;	\N	\N	0	1	2014-06-24 10:56:47	2014-06-24 10:56:47	186	Kindergarten.pm
407	16	fd76ad1682da409f1666a732	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n    @words  = normalize_words\n  end\n\n  def word_count\n    @words.each_with_object(Hash.new(0)) do |w, h|\n      h[w] += 1\n    end\n  end\n\n  private\n\n  def normalize_words\n    @phrase.downcase.scan(/\\w+/)\n  end\nend	\N	\N	0	6	2014-07-20 09:15:14	2014-07-20 09:15:14	197	word-count.rb
380	16	fdcff1e67775b88c50b3abcd	superseded	ruby	anagram	class Anagram\n\n  def initialize(word)\n    @word = word\n  end\n\n  def match(potential_anagrams)\n    potential_anagrams = potential_anagrams.reject(same_words?)\n    potential_anagrams = potential_anagrams.reject do |anagram|\n      anagram.downcase == @word\n    end\n    frequencies = letters(@word.downcase)\n    potential_anagrams.select do |anagram|\n      letters(anagram.downcase) == frequencies\n    end\n\n  end\n\n  def same_words?(word)\n    word == @word\n  end\n\n  def letters(word)\n    word.chars.sort\n  end\n\n\nend	\N	\N	0	2	2014-06-23 10:30:51	2014-06-23 10:30:51	188	anagram.rb
381	16	92f5eb8d729f8023af65b3d4	superseded	ruby	anagram	class Anagram\n\n  def initialize(word)\n    @word = word\n  end\n\n  def match(potential_anagrams)\n    potential_anagrams = potential_anagrams.reject do |anagram|\n      anagram.downcase == @word\n    end\n    frequencies = letters(@word.downcase)\n    potential_anagrams.select do |anagram|\n      letters(anagram.downcase) == frequencies\n    end\n\n  end\n\n  def letters(word)\n    word.chars.sort\n  end\n\n\nend	\N	\N	0	1	2014-06-24 18:44:05	2014-06-24 18:44:05	188	anagram.rb
382	16	f8281e6dd257f661eccc7363	pending	ruby	anagram	class Anagram\n\n  def initialize(word)\n    @word = word\n  end\n\n  def match(potential_anagrams)\n    potential_anagrams = discard_same_words(potential_anagrams)\n    letters = letters(@word.downcase)\n    potential_anagrams.select do |anagram|\n      letters(anagram.downcase) == letters\n    end\n  end\n\n  def discard_same_words(potential_anagrams)\n    same_words = lambda { |anagram| anagram.downcase == @word }\n    potential_anagrams.reject(&same_words)\n  end\n\n  def letters(word)\n    word.chars.sort\n  end\n\n\nend	\N	\N	0	3	2014-07-05 02:48:10	2014-07-05 02:48:10	188	anagram.rb
383	16	899510cf0bdac36c846c83df	pending	elixir	sublist	defmodule Sublist do\n  @doc """\n  Returns whether the first list is a sublist or a superlist of the second list\n  and if not whether it is equal or unequal to the second list.\n  """\n  def compare(a, b) when length(a) == length(b) do\n    if a === b do\n      :equal\n    else\n      :unequal\n    end\n  end\n\n  def compare(a, _) when a == [] do\n    :sublist\n  end\n\n  def compare(_, b) when b == [] do\n    :superlist\n  end\n\n  def compare(a, b) when length(a) < length(b) do\n    [h|t] = b\n    case compare(a, Enum.take(b, length(a))) do\n      :equal -> :sublist\n      :unequal ->\n        case compare(a, t) do\n          :equal -> :sublist\n          :sublist -> :sublist\n          :unequal -> :unequal\n        end\n    end\n  end\n\n  def compare(a, b) when length(a) > length(b) do\n    case compare(b, a) do\n      :sublist -> :superlist\n      :unequal -> :unequal\n    end\n  end\nend	\N	\N	0	1	2014-06-30 09:57:01	2014-06-30 09:57:01	189	sublist.exs
384	16	1e9af773928f75a4557d6e8c	superseded	clojure	word-count	(ns word-count)\n\n(defn word-count\n  "Counts words in given sentence"\n  ([sentence] (word-count #"[0-9a-zA-Z]+"))\n  ([sentence pattern] (frequencies (re-seq pattern sentence))))	\N	\N	0	1	2014-07-06 16:42:20	2014-07-06 16:42:20	190	word_count.clj
385	16	b31cdf8ca6c08aca3d22107d	pending	clojure	word-count	(ns word-count\n  (:require [clojure.string :as str])\n  )\n\n(defn word-count\n  "Counts words in given sentence"\n  ([sentence] (word-count (str/lower-case sentence) #"[0-9a-zA-Z]+"))\n  ([sentence pattern] (frequencies (re-seq pattern sentence))))	\N	\N	0	2	2014-07-08 23:47:07	2014-07-08 23:47:07	190	word_count.clj
386	16	504e52539fa32a9c7de913cc	pending	ruby	proverb	class Proverb\n  def initialize(*things_with_options)\n    @options = extract_options!(things_with_options)\n    @things = things_with_options\n  end\n\n  def to_s\n    [exchanges, summary].flatten.join("\\n")\n  end\n\n  private\n\n  def exchanges\n    @things.each_cons(2).map { |(target, given)| exchange(target, given) }\n  end\n\n  def exchange(target, given)\n    "For want of a #{target} the #{given} was lost."\n  end\n\n  def summary\n    "And all for the want of a #{qualified_target}."\n  end\n\n  def qualified_target\n    [qualifier, target].compact.join(' ')\n  end\n\n  def target\n    @things.first\n  end\n\n  def qualifier\n    @options[:qualifier]\n  end\n\n  def extract_options!(arg)\n    if arg.last.is_a?(Hash)\n      arg.pop\n    else\n      {}\n    end\n  end\nend	\N	\N	0	1	2014-06-22 04:28:52	2014-06-22 04:28:52	191	proverb.rb
387	16	932335aa6848d7b456100eb1	pending	objective-c	grade-school	//\n//  GradeSchool.m\n//  ObjCGradeSchool\n//\n//  Created by BJ Miller on 7/3/14.\n//  Copyright (c) 2014 Six Five Software, LLC. All rights reserved.\n//\n\n#import "GradeSchool.h"\n\n@interface GradeSchool ()\n@property (nonatomic, strong) NSMutableDictionary *students;\n@end\n\n@implementation GradeSchool\n\n- (NSMutableDictionary *)students\n{\n    if (!_students) {\n        _students = [@{} mutableCopy];\n    }\n    return _students;\n}\n\n- (NSDictionary *)db\n{\n    return [self.students copy];\n}\n\n- (void)addStudentWithName:(NSString *)name andGrade:(NSNumber *)grade\n{\n    NSMutableArray *studentsForGrade = [[self studentsInGrade:grade] mutableCopy];\n    [studentsForGrade addObject:name];\n\n    [self.students setObject:studentsForGrade forKey:grade];\n}\n\n- (NSArray *)studentsInGrade:(NSNumber *)grade\n{\n    if ([self.students objectForKey:grade]) {\n        return [self.students objectForKey:grade];\n    } else {\n        return @[];\n    }\n}\n\n- (NSDictionary *)sort\n{\n    NSMutableDictionary *sortedStudents = [@{} mutableCopy];\n    for (NSNumber *key in self.students.allKeys) {\n        sortedStudents[key] = [self.students[key] sortedArrayUsingSelector:@selector(compare:)];\n    }\n    return sortedStudents;\n}\n\n@end	\N	\N	0	1	2014-06-29 08:40:33	2014-06-29 08:40:33	192	GradeSchool.m
388	16	a7710d76f287f8f540e5734a	pending	scala	grade-school	/**\n * Created by jindrich on 28.4.14.\n */\nclass School {\n  var database = Map.empty[String, Int]\n\n  def db = database.groupBy(_._2).mapValues(_.map(_._1))\n  def grade(grade: Int) = database.filter(_._2 == grade).map(_._1)\n  def add(name: String, grade: Int) { database += (name -> grade) }\n  def sorted = db.toSeq.sortBy(_._1).toMap.mapValues(_.toSeq.sorted)\n}	\N	\N	0	1	2014-06-29 01:15:51	2014-06-29 01:15:51	193	School.scala
389	16	fc3734a2f5c71a8b4b956426	superseded	javascript	bob	var Bob = function() {\n  Bob.prototype.hey = function() {\n    return "Whatever.";\n  }\n}	\N	\N	0	1	2014-06-24 17:35:53	2014-06-24 17:35:53	194	bob_test.js
390	16	b7adf8dd76125293ed6b5e1c	superseded	javascript	bob	var Bob = function(input) {\n\n  this.hey = function(input) {\n    if(questMark(input)) {\n      return 'Sure.';\n    } else if(allCaps(input)) {\n      return 'Woah, chill out!';\n    } else if(silenceCheck(input)) {\n      return 'Fine. Be that way!';\n    } else {\n      return 'Whatever.'\n    }\n  }\n}\n\n// Checks for an all capitals phrase\n\nvar allCaps = function(phrase) {\n  var phraseArray = phrase.split("");\n  if(phrase.search(/[a-zäëïöü]/) != -1 || onlyNumbers(phrase) == true) {\n      return false;\n  } else {\n    return true;\n  }\n}\n\n// Checks for a question mark at the end of a phrase that is not all caps\n\nvar questMark = function(phrase) {\n  var lastChar = phrase.split("").pop();\n  if(allCaps(phrase) == false && lastChar == "?") {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Checks if a phrase doesn't contain any a - z characters (in both cases)\n\nvar onlyNumbers = function(phrase) {\n  if(phrase.search(/[A-z]/) == -1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar silenceCheck = function(phrase) {\n  if(phrase.search(/[A-z0-9]/) != -1) {\n    return false\n  } else {\n    return true;\n  }\n}	\N	\N	0	2	2014-06-28 19:21:44	2014-06-28 19:21:44	194	bob_test.js
391	16	53ca74c43d6372c82ec9f66c	pending	javascript	bob	var Bob = function(input) {\n\n  this.hey = function(input) {\n    if(questMark(input)) {\n      return 'Sure.';\n    } else if(allCaps(input)) {\n      return 'Woah, chill out!';\n    } else if(silenceCheck(input)) {\n      return 'Fine. Be that way!';\n    } else {\n      return 'Whatever.'\n    }\n  }\n}\n\n// Checks for an all capitals phrase\n\nvar allCaps = function(phrase) {\n  var phraseArray = phrase.split("");\n  if(phrase.search(/[a-zäëïöü]/) != -1 || onlyNumbers(phrase) == true) {\n      return false;\n  } else {\n    return true;\n  }\n}\n\n// Checks for a question mark at the end of a phrase that is not all caps\n\nvar questMark = function(phrase) {\n  var lastChar = phrase.split("").pop();\n  if(allCaps(phrase) == false && lastChar == "?") {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Checks if a phrase doesn't contain any a - z characters (in both cases)\n\nvar onlyNumbers = function(phrase) {\n  if(phrase.search(/[A-z]/) == -1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Checks if Bob is being a silent bitch\n\nvar silenceCheck = function(phrase) {\n  if(phrase.search(/[A-z0-9]/) != -1) {\n    return false\n  } else {\n    return true;\n  }\n}	\N	\N	0	3	2014-07-13 09:48:01	2014-07-13 09:48:01	194	bob_test.js
392	16	0b583fd12277053404293aef	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\treturn IsFourthCentury(year) || (IsLeap(year) && !IsCentury(year))\n}\n\nfunc IsLeap(year int) bool {\n\treturn (year % 4) == 0\n}\n\nfunc IsCentury(year int) bool {\n\treturn (year % 100) == 0\n}\n\nfunc IsFourthCentury(year int) bool {\n\treturn (year % 400) == 0\n}	\N	\N	0	1	2014-06-22 04:08:13	2014-06-22 04:08:13	195	leap.go
393	16	297d036a91c3891605cece36	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\treturn IsFourthCentury(year) || (IsFourthYear(year) && !IsCentury(year))\n}\n\nfunc IsFourthYear(year int) bool {\n\treturn IsDivisibleBy(year, 4)\n}\n\nfunc IsCentury(year int) bool {\n\treturn IsDivisibleBy(year, 100)\n}\n\nfunc IsFourthCentury(year int) bool {\n\treturn IsDivisibleBy(year, 400)\n}\n\nfunc IsDivisibleBy(dividend int, divider int) bool {\n\treturn (dividend % divider) == 0\n}	\N	\N	0	2	2014-06-29 03:29:14	2014-06-29 03:29:14	195	leap.go
394	16	57717bbf7b960896e8374611	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\treturn IsFourthCentury(year) || (IsFourthYear(year) && !IsCentury(year))\n}\n\nfunc IsFourthYear(year int) bool {\n\treturn isDivisibleBy(year, 4)\n}\n\nfunc IsCentury(year int) bool {\n\treturn isDivisibleBy(year, 100)\n}\n\nfunc IsFourthCentury(year int) bool {\n\treturn isDivisibleBy(year, 400)\n}\n\nfunc isDivisibleBy(dividend int, divider int) bool {\n\treturn (dividend % divider) == 0\n}	\N	\N	0	3	2014-06-29 13:44:21	2014-06-29 13:44:21	195	leap.go
395	16	b409c5a61e274a0b1bbd6f1c	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\treturn isFourthCentury(year) || (isFourthYear(year) && !isCentury(year))\n}\n\nfunc isFourthYear(year int) bool {\n\treturn isDivisibleBy(year, 4)\n}\n\nfunc isCentury(year int) bool {\n\treturn isDivisibleBy(year, 100)\n}\n\nfunc isFourthCentury(year int) bool {\n\treturn isDivisibleBy(year, 400)\n}\n\nfunc isDivisibleBy(dividend int, divider int) bool {\n\treturn (dividend % divider) == 0\n}	\N	\N	0	4	2014-07-13 07:16:01	2014-07-13 07:16:01	195	leap.go
396	16	6b3fd1d1ecb37f71411bd172	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\tisFourthCentury := isDivisibleBy(year, 400)\n\tisFourthYear := isDivisibleBy(year, 4)\n\tisNotCentury := !isDivisibleBy(year, 100)\n\treturn isFourthCentury || (isNotCentury && isFourthYear)\n}\n\nfunc isDivisibleBy(dividend int, divider int) bool {\n\treturn (dividend % divider) == 0\n}	\N	\N	0	5	2014-07-17 07:33:32	2014-07-17 07:33:32	195	leap.go
397	16	82e4aa677cb8d884763ac053	pending	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\treturn isDivisibleBy(year, 400) || (!isDivisibleBy(year, 100) && isDivisibleBy(year, 4))\n}\n\nfunc isDivisibleBy(year, divider int) bool {\n\treturn (year % divider) == 0\n}	\N	\N	0	6	2014-07-21 00:20:41	2014-07-21 00:20:41	195	leap.go
398	16	ab3795487d371c5e7cbe49c9	superseded	ruby	bob	class Bob\n\n  def hey(input)\n    if input == ''\n      "Fine. Be that way."\n    else\n      characters = []\n      input.split('').each do |char|\n        characters << char\n      end\n      if characters.last == '?'\n        "Sure."\n      elsif characters[1] == characters[1].upcase\n        "Woah, chill out!"\n      else\n        "Whatever."\n      end\n    end\n  end\nend	\N	\N	0	1	2014-06-23 05:44:36	2014-06-23 05:44:36	196	bob.rb
399	16	87a73dc2ed9557f911014ee8	superseded	ruby	bob	class Bob\n\n  def hey(input)\n    if input.empty?\n      "Fine. Be that way."\n    elsif input.end_with?('?')\n      "Sure."\n    elsif input == input.upcase\n      "Woah, chill out!"\n    else\n      "Whatever."\n    end\n  end\nend\n\n#looks like the test was changed over to 'teenager' so I changed it back\n#to Bob	\N	\N	0	2	2014-07-04 02:11:15	2014-07-04 02:11:15	196	bob.rb
400	16	9a872f8a17da40cffea722a3	pending	ruby	bob	class Bob\n\n  def hey(input)\n    if nothing_said?(input)\n      "Fine. Be that way."\n    elsif question?(input)\n      "Sure."\n    elsif shouting?(input)\n      "Woah, chill out!"\n    else\n      "Whatever."\n    end\n  end\n\n  def nothing_said?(input)\n    input.empty?\n  end\n\n  def question?(input)\n    input.end_with?('?')\n  end\n\n  def shouting?(input)\n    input == input.upcase\n  end\nend	\N	\N	0	4	2014-07-16 07:53:17	2014-07-16 07:53:17	196	bob.rb
401	16	7597aa3d0e1646aa6afeb9c8	superseded	ruby	bob	class Bob\n\n  def hey(input)\n    if nothing_said(input)\n      "Fine. Be that way."\n    elsif question(input)\n      "Sure."\n    elsif shouting(input)\n      "Woah, chill out!"\n    else\n      "Whatever."\n    end\n  end\n\n  def nothing_said(input)\n    input.empty?\n  end\n\n  def question(input)\n    input.end_with?('?')\n  end\n\n  def shouting(input)\n    input == input.upcase\n  end\nend	\N	\N	0	3	2014-07-18 12:41:35	2014-07-18 12:41:35	196	bob.rb
402	16	e9d512d0a743f06fa9526824	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    counts = Hash.new(0)\n    normalized_words.each do |word|\n      counts[word] = counts[word] + 1\n    end\n\n    counts\n  end\n\n  private\n\n  def normalized_words\n    @phrase.scan(/\\w+/).map(&:downcase)\n  end\nend	\N	\N	0	1	2014-06-25 18:27:18	2014-06-25 18:27:18	197	word-count.rb
403	16	19573e52fd85ec1637e6ff26	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    normalized_words.each_with_object(Hash.new(0)) { |w, h| h[w] += 1 }\n  end\n\n  private\n\n  def normalized_words\n    @phrase.scan(/\\w+/).map(&:downcase)\n  end\nend	\N	\N	0	3	2014-06-26 03:58:22	2014-06-26 03:58:22	197	word-count.rb
404	16	83ac038670d47c97de96635c	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @words = normalize(phrase)\n  end\n\n  def word_count\n    @words.each_with_object(Hash.new(0)) { |w, h| h[w] += 1 }\n  end\n\n  private\n\n  def normalize(phrase)\n    phrase.downcase.scan(/\\w+/)\n  end\nend	\N	\N	0	4	2014-06-28 10:16:17	2014-06-28 10:16:17	197	word-count.rb
405	16	766718a2d6e507900b7022f0	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @phrase = phrase\n  end\n\n  def word_count\n    counts = Hash.new(0)\n    normalized_words.each do |word|\n      counts[word] += 1\n    end\n\n    counts\n  end\n\n  private\n\n  def normalized_words\n    @phrase.scan(/\\w+/).map(&:downcase)\n  end\nend	\N	\N	0	2	2014-06-29 12:42:02	2014-06-29 12:42:02	197	word-count.rb
412	16	64186938155f795c2f2d35ff	superseded	haskell	etl	module ETL (transform)\nwhere\n  \nimport Data.Map.Strict (Map)\nimport qualified Data.Char as Char\nimport qualified Data.Map.Strict as Map\n\ntoLower :: String -> String\ntoLower = map Char.toLower\n\nupdateNew :: Int -> Map String Int -> [String] -> Map String Int\nupdateNew score = foldl (flip addLetter)\n  where\n    addLetter :: String -> Map String Int -> Map String Int\n    addLetter letter = Map.insert (toLower letter) score\n\ntransform :: Map Int [String] -> Map String Int\ntransform = Map.foldlWithKey (flip updateNew) Map.empty	\N	\N	0	2	2014-07-03 01:19:37	2014-07-03 01:19:37	199	ETL.hs
413	16	dcbcf718cda0897097d0a0fb	pending	haskell	etl	module ETL (transform)\nwhere\n  \nimport Data.Map.Strict (Map)\nimport qualified Data.Char as Char\nimport qualified Data.Map.Strict as Map\nimport Data.List (foldl')\n\ntoLower :: String -> String\ntoLower = map Char.toLower\n\nupdateNew :: Int -> Map String Int -> [String] -> Map String Int\nupdateNew score = foldl' (flip addLetter)\n  where\n    addLetter :: String -> Map String Int -> Map String Int\n    addLetter letter = Map.insert (toLower letter) score\n\ntransform :: Map Int [String] -> Map String Int\ntransform = Map.foldlWithKey' (flip updateNew) Map.empty	\N	\N	0	3	2014-07-07 15:19:47	2014-07-07 15:19:47	199	ETL.hs
414	16	47ab33dcde5940d045aa8020	superseded	python	rna-transcription	class DNA():\n  def __init__(self, seq):\n    self.sequence = seq\n\n  def to_rna(self):\n    seq = ['U' if n == 'T' else n for n in self.sequence]\n    return ''.join(seq)	\N	\N	0	1	2014-07-08 18:13:32	2014-07-08 18:13:32	200	rna-transcription.py
415	16	854dbddfe8e92599a0477276	pending	python	rna-transcription	class DNA():\n  def __init__(self, seq):\n    self.sequence = seq\n\n  def to_rna(self):\n    return self.sequence.replace('T', 'U')	\N	\N	0	2	2014-07-08 22:55:53	2014-07-08 22:55:53	200	rna-transcription.py
416	16	33f8cc1f26aae13a0944d1fd	pending	haskell	phone-number	module Phone (areaCode, number, prettyPrint) where\n\nimport Data.Char (isNumber)\n\nareaCode :: String -> String\nareaCode = take 3 . number\n\ninvalidNumber :: String\ninvalidNumber = "0000000000"\n\nnumber :: String -> String\nnumber inp\n  | len == 10        = cleaned\n  | len == 11 \n    && first == '1'  = drop 1 cleaned\n  | otherwise        = invalidNumber\n  where cleaned = filter isNumber inp\n        len     = length cleaned\n        first   = head cleaned\n\nprettyPrint :: String -> String\nprettyPrint inp = "(" ++ code ++ ") " \n                  ++ nextThree ++ "-"\n                  ++ lastFour\n  where formatted = number inp\n        code      = areaCode formatted\n        nextThree = take 3 $ drop 3 formatted\n        lastFour  = drop 6 formatted	\N	\N	0	1	2014-07-06 00:18:48	2014-07-06 00:18:48	201	phone-number.hs
417	16	c2e8a6e2118af1b89c6222c4	pending	ruby	grains	class Grains\n  def square(n)\n    2 ** (n - 1)\n  end\n\n  def total\n    (1..64).reduce(0) { |s, n| s + square(n) }\n  end\nend	\N	\N	0	1	2014-06-22 19:31:18	2014-06-22 19:31:18	202	grains.rb
418	16	42af7ea528f18f6f6a82887d	superseded	python	phone-number	class Phone(object):\n    sections = ['area_code', 'exchange', 'line']\n    pretty_format = '({area_code}) {exchange}-{line}'\n\n    def __init__(self, user_number):\n        clean_number = raw_number = filter(lambda c: c.isdigit(), user_number)\n\n        if len(raw_number) == 11 and raw_number[0] == '1':\n            clean_number = raw_number[1:]\n        elif len(raw_number) != 10:\n            clean_number = '0000000000'  # TODO: better to raise error here?\n\n        self.number = clean_number\n\n    def area_code(self):\n        """Get area code (first three digits)"""\n        return self.number[:3]\n\n    def exchange(self):\n        """Get exchange (first three digits after area code)"""\n        return self.number[3:6]\n\n    def line(self):\n        """Get line number (last four digits)"""\n        return self.number[6:]\n\n    def pretty(self):\n        """Output number in pretty format: (XXX) XXX-XXXX"""\n        format_kwargs = {}\n\n        for section in self.sections:\n            format_kwargs[section] = getattr(self, section)()\n\n        return self.pretty_format.format(**format_kwargs)	\N	\N	0	1	2014-07-08 03:42:45	2014-07-08 03:42:45	203	phone-number.py
419	16	e41cb1737efa67e2d6bc0625	pending	python	phone-number	class Phone(object):\n    blocks = ['area_code', 'exchange', 'line']\n    pretty_format = '({area_code}) {exchange}-{line}'\n\n    def __init__(self, user_number):\n        clean_number = raw_number = filter(lambda c: c.isdigit(), user_number)\n\n        if len(raw_number) == 11 and raw_number[0] == '1':\n            clean_number = raw_number[1:]\n        elif len(raw_number) != 10:\n            clean_number = '0000000000'  # TODO: better to raise error here?\n\n        self.number = clean_number\n\n    def area_code(self):\n        """Get area code (first three digits)"""\n        return self.number[:3]\n\n    def exchange(self):\n        """Get exchange (first three digits after area code)"""\n        return self.number[3:6]\n\n    def line(self):\n        """Get line number (last four digits)"""\n        return self.number[6:]\n\n    def pretty(self):\n        """Output number in pretty format: (XXX) XXX-XXXX"""\n        format_kwargs = {}\n\n        for block in self.blocks:\n            format_kwargs[block] = getattr(self, block)()\n\n        return self.pretty_format.format(**format_kwargs)	\N	\N	0	2	2014-07-12 02:37:00	2014-07-12 02:37:00	203	phone-number.py
420	16	de6603817dde3145f07c2214	superseded	python	word-count	import collections\nimport string\n\ndef word_count(raw_input):\n\ttext = raw_input.translate(None, string.punctuation).strip().lower()\n\treturn dict(collections.Counter(text.split()))	\N	\N	0	1	2014-06-27 06:20:29	2014-06-27 06:20:29	204	wordcount.py
421	16	5fd29409f7c0e9986c69a862	pending	python	word-count	import collections\nimport string\n\ndef word_count(text):\n\tprocessed_text = text.translate(None, string.punctuation).lower()\n\treturn collections.Counter(processed_text.split())	\N	\N	0	3	2014-06-28 07:29:13	2014-06-28 07:29:13	204	wordcount.py
422	16	8b89d56b6d76090c1fbd94c3	superseded	python	word-count	import collections\nimport string\n\ndef word_count(text):\n\ttext_without_punctuation = text.translate(None, string.punctuation).lower()\n\treturn collections.Counter(text_without_punctuation.split())	\N	\N	0	2	2014-07-06 18:15:11	2014-07-06 18:15:11	204	wordcount.py
423	16	3186258e3103e5ade7b7eddb	pending	ruby	rna-transcription	class Complement\n\tdef self.match_rna(nucleo)\n\t\tif nucleo == 'A'\n\t\t\t'T'\n\t\telsif nucleo == 'U'\n\t\t\t'A'\n\t\telsif nucleo == 'C'\n\t\t\t'G'\n\t\telsif nucleo == 'G'\n\t\t\t'C'\n\t\tend\n\tend\n\n\tdef self.of_rna(sequence)\n\t\tarr = sequence.split('')\n\t\tcomplement = ''\n\t\tarr.each do |nucleo|\n\t\t\tcomplement = complement + self.match_rna(nucleo)\n\t\tend\n\t\treturn complement\n\tend\n\n\tdef self.match_dna(nucleo)\n\t\tif nucleo == 'A'\n\t\t\t'U'\n\t\telsif nucleo == 'T'\n\t\t\t'A'\n\t\telsif nucleo == 'C'\n\t\t\t'G'\n\t\telsif nucleo == 'G'\n\t\t\t'C'\n\t\tend\n\tend\n\n\tdef self.of_dna(sequence)\n\t\tarr = sequence.split('')\n\t\tcomplement = ''\n\t\tarr.each do |nucleo|\n\t\t\tcomplement = complement + self.match_dna(nucleo)\n\t\tend\n\t\treturn complement\n\tend\nend	\N	\N	0	1	2014-06-29 13:45:54	2014-06-29 13:45:54	205	complement.rb
424	16	f025648806653a97407deccf	superseded	haskell	anagram	module Anagram (anagramsFor) where\n\nimport Data.List (sort)\nimport Data.Char (isAlpha, toLower)\n\nletters ::  String -> (String, String)\nletters = (,) =<< sort . filter isAlpha . map toLower\n\nanagramsFor :: String -> [String] -> [String]\nanagramsFor word list = map snd $ filter (\\x -> fst x == fst (letters word)) $ map letters $ (filter . (/=)) word list	\N	\N	0	1	2014-06-27 05:44:35	2014-06-27 05:44:35	206	Anagram.hs
429	16	e05b324b802e103461f4745a	pending	elixir	roman-numerals	defmodule Roman do\n  @doc """\n  Convert the number to a roman number.\n  """\n100\n  @values [{1000, "M"}, {900, "CM"}, {500, "D"}, {400, "CD"},\n  \t\t   {100, "C"}, {90, "XC"}, {50, "L"}, {40, "XL"},\n  \t\t   {10, "X"}, {9, "IX"}, {5, "V"}, {4, "IV"}, {1, "I"}]\n\n  @spec numerals(pos_integer) :: String.t\n  def numerals(number) do\n    translate(number, @values)\n  end\n\n  defp translate(number, values) do\n    case values do\n      [] -> ""\n      [{arabic, _}|t] when arabic > number -> translate(number, t)\n      val = [{arabic, roman}|_]\t-> roman <> translate(number - arabic, val)\n    end\n  end\nend	\N	\N	0	1	2014-06-22 10:18:48	2014-06-22 10:18:48	210	roman.exs
430	16	8963bec250f34e85f7b9aa00	pending	ruby	clock	class Clock\n\n  def initialize(hour, minutes)\n    @time = Time.utc(2014, 1, 1, hour, minutes)\n  end\n\n  def self.at(hour, minutes = 0)\n    new(hour, minutes)\n  end\n\n  def self.from(time)\n    new(time.hour, time.min)\n  end\n\n  def +(minutes)\n    self.class.from(@time +(minutes * 60))\n    \n  end\n\n  def -(minutes)\n    self.class.from(@time -(minutes * 60))\n    \n  end\n\n  def ==(other)\n    to_s == other.to_s\n  end\n\n  def to_s\n    @time.strftime('%H:%M')\n  end\nend	\N	\N	0	1	2014-06-24 18:58:58	2014-06-24 18:58:58	211	clock.rb
431	16	99525f90c05046af873c4f94	pending	haskell	simple-linked-list	module LinkedList\r\n( LinkedList(..)\r\n, new\r\n, nil\r\n, isNil\r\n, datum\r\n, next\r\n, toList\r\n, fromList\r\n, reverseLinkedList\r\n) where\r\n\r\ndata LinkedList a\r\n    = Elm a (LinkedList a)\r\n    | Nil\r\n    deriving (Show, Eq)\r\n\r\nnew :: a -> LinkedList a -> LinkedList a\r\nnew = Elm\r\n\r\nnil :: LinkedList a\r\nnil = Nil\r\n\r\nisNil :: LinkedList a -> Bool\r\nisNil Nil = True\r\nisNil _   = False\r\n\r\ndatum :: LinkedList a -> a\r\ndatum (Elm x _) = x\r\ndatum  Nil      = error "LinkedList.datum: empty linked list"\r\n\r\nnext :: LinkedList a -> LinkedList a\r\nnext  Nil       = Nil\r\nnext (Elm _ xs) = xs\r\n\r\nfromList :: [a] -> LinkedList a\r\nfromList = foldr new Nil\r\n\r\ntoList :: LinkedList a -> [a]\r\ntoList  Nil       = []\r\ntoList (Elm x xs) = x : toList xs\r\n\r\nreverseLinkedList :: LinkedList a -> LinkedList a\r\nreverseLinkedList ls = go ls Nil\r\n  where\r\n    go  Nil       acc = acc\r\n    go (Elm x xs) acc = go xs (new x acc)	\N	\N	0	1	2014-07-26 06:45:25	2014-07-26 06:45:25	212	LinkedList.hs
432	16	c5f02515b31a7e0a5f740804	pending	haskell	crypto-square	module CryptoSquare (\n    normalizePlaintext,\n    squareSize,\n    plaintextSegments,\n    ciphertext,\n    normalizeCiphertext\n) where\n\nimport Data.Char (toLower, isAlphaNum)\nimport Data.List (transpose)\nimport Data.List.Split (chunksOf)\n\nnormalizePlaintext :: String -> String\nnormalizePlaintext = map toLower . filter isAlphaNum\n\nsquareSize :: String -> Int\nsquareSize = ceiling . sqrt . fromIntegral . length\n\nplaintextSegments :: String -> [String]\nplaintextSegments plain = chunksOf (squareSize norm) norm\n  where\n    norm = normalizePlaintext plain\n\nciphertext :: String -> String\nciphertext = concat . transpose . plaintextSegments\n\nnormalizeCiphertext :: String -> String\nnormalizeCiphertext = unwords . chunksOf 5 . ciphertext	\N	\N	0	2	2014-06-27 16:41:51	2014-06-27 16:41:51	213	crypto-square.hs
433	16	efee65e5c1e2d93d7109bae0	superseded	haskell	crypto-square	module CryptoSquare (\n    normalizePlaintext,\n    squareSize,\n    plaintextSegments,\n    ciphertext,\n    normalizeCiphertext\n) where\n\nimport Data.Char (toLower, isAlphaNum)\nimport Data.List (transpose, intercalate)\nimport Data.List.Split (chunksOf)\n\nnormalizePlaintext :: String -> String\nnormalizePlaintext = map toLower . filter isAlphaNum\n\nsquareSize :: String -> Int\nsquareSize = ceiling . sqrt . fromIntegral . length\n\nplaintextSegments :: String -> [String]\nplaintextSegments plain = chunksOf (squareSize norm) norm\n  where\n    norm = normalizePlaintext plain\n\nciphertext :: String -> String\nciphertext = concat . transpose . plaintextSegments\n\nnormalizeCiphertext :: String -> String\nnormalizeCiphertext = intercalate " " . chunksOf 5 . ciphertext	\N	\N	0	1	2014-07-15 19:05:28	2014-07-15 19:05:28	213	crypto-square.hs
434	16	246ba3e96ad310a8ea532813	pending	elixir	grains	defmodule Grains do\n  def square(i) do\n    ipow(2, i - 1)\n  end\n\n  def total do\n    # Derivation:\n    #      S = 2^0 + 2^1 + … + 2^63\n    #    2*S = 2^1 + 2^2 + … + 2^64\n    #    2*S - S = 2^64 - 2^0\n    #          S = 2^64 - 1\n    #\n    # NOTE: Floating point math was insufficiently accurate for this.\n    # Otherwise we'd just use :math.pow/2.\n    ipow(2, 64) - 1\n  end\n\n  def ipow(n, 0) do 1 end\n  def ipow(n, e) do\n    Enum.reduce(1..e, 1, fn _, i -> n * i end)\n  end\nend	\N	\N	0	1	2014-07-16 22:28:12	2014-07-16 22:28:12	214	grains.exs
435	16	0c7cb99db7267ac867e34ca3	pending	ruby	phone-number	class PhoneNumber\n\n  def initialize(number)\n    @number = number\n  end\n\n  def number\n    remove_one\n    if trim.length <= 9\n      '0000000000'\n    elsif trim.length >=11 && @number[0] != 1\n      '0000000000'\n    else\n      trim\n    end\n  end\n\n  def trim\n    @number.tr('^0-9', '')\n  end\n\n  def remove_one\n    if (/\\A[1]/).match(@number) != nil\n      @number = @number[1..-1]\n    end\n  end\n\n  def area_code\n    trim[0..2]\n  end\n\n  def to_s\n    remove_one\n    "(#{@number[0..2]}) #{@number[3..5]}-#{@number[6..9]}"\n  end\nend	\N	\N	0	1	2014-07-01 18:28:50	2014-07-01 18:28:50	215	phone_number.rb
436	19	2910174d4cbb8fb429120bd0	superseded	ruby	bob	class Bob\n  require 'active_support/core_ext/object/blank'\n  def hey(heard)\n    if heard.to_s.strip.blank?\n      return "Fine. Be that way!"\n    elsif heard.upcase==heard\n      return "Woah, chill out!"\n    elsif heard.end_with?('?')\n      return "Sure."\n    else\n      return "Whatever."\n    end\n  end\nend	\N	\N	0	2	2014-04-24 07:43:43	2014-04-24 07:43:43	216	bob.rb
437	19	6a046214326f9d5d2ba1aa0d	superseded	ruby	bob	class Bob\n  def hey(heard)\n    if heard===nil || heard.rstrip==="" \n      return "Fine. Be that way!"\n    elsif heard.upcase===heard\n      return "Woah, chill out!"\n    elsif heard[-1]==="?"\n      return "Sure."\n    else\n      return "Whatever."\n    end\n  end\nend	\N	\N	0	1	2014-04-29 10:12:38	2014-04-29 10:12:38	216	bob.rb
438	19	11a76d30649a2aa3483fa4f6	superseded	ruby	bob	class Bob\n  def issilence(said)\n    return said.to_s.strip.empty? \n  end\n\n  def isshout(said)\n    return said.upcase==said \n  end\n\n  def isquestion(said)\n    return said.end_with?('?')\n  end\n\n  def hey(heard)\n    if issilence(heard)\n      return "Fine. Be that way!"\n    elsif isshout(heard)\n      return "Woah, chill out!"\n    elsif isquestion(heard)\n      return "Sure."\n    else\n      return "Whatever."\n    end\n  end\nend	\N	\N	0	3	2014-05-23 06:06:29	2014-05-23 06:06:29	216	bob.rb
439	19	c7fa64daf9e7a673c2f3b847	superseded	ruby	bob	class Bob\n\n  def hey(heard)\n    if silence?(heard)\n      return "Fine. Be that way!"\n    elsif shout?(heard)\n      return "Woah, chill out!"\n    elsif question?(heard)\n      return "Sure."\n    else\n      return "Whatever."\n    end\n  end\n\n  def silence?(said)\n    return said.to_s.strip.empty? \n  end\n\n  def shout?(said)\n    return said.upcase==said \n  end\n\n  def question?(said)\n    return said.end_with?('?')\n  end\n\nend	\N	\N	0	4	2014-06-06 08:16:52	2014-06-06 08:16:52	216	bob.rb
440	19	8035de7c9047dfec16ace206	done	ruby	bob	class Bob\n\n  def hey(heard)\n    if silence?(heard)\n      return "Fine. Be that way!" \n    elsif shout?(heard)\n      return "Woah, chill out!"\n    elsif question?(heard)\n      return "Sure."\n    else\n      return "Whatever."\n    end\n  end\n\n  def silence?(said)\n    return said.to_s.strip.empty? #leaving explicit return for readability\n  end\n\n  def shout?(said) #leaving function in this objec (no context indicating other object is more appropriate\n    return said.upcase == said \n  end\n\n  def question?(said)\n    return said.end_with?('?')\n  end\n\nend	2014-06-28 00:54:39	\N	0	5	2014-06-19 20:53:09	2014-06-19 20:53:09	216	bob.rb
441	20	a0231424969779a62880b3e2	done	ruby	space-age	class SpaceAge\n  def initialize(age_in_seconds)\n    @age_in_seconds = age_in_seconds\n  end\n  def seconds\n    @age_in_seconds\n  end\n  def on_earth\n    age_on_earth = @age_in_seconds.to_f/31557600\n    age_on_earth.round(2)\n  end\n  def on_mercury\n    age_on_mercury = self.on_earth/0.2408467\n    age_on_mercury.round(2)\n  end\n  def on_venus\n    age_on_venus = self.on_earth/0.61519725\n    age_on_venus.round(2)\n  end\n  def on_mars\n    age_on_mars = self.on_earth/1.8808158\n    age_on_mars.round(2)\n  end\n  def on_jupiter\n    age_on_jupiter = self.on_earth/11.862615\n    age_on_jupiter.round(2)\n  end\n  def on_saturn\n    age_on_saturn = self.on_earth/29.447498\n    age_on_saturn.round(2)\n  end\n  def on_uranus\n    age_on_uranus = self.on_earth/84.016846\n    age_on_uranus.round(2)\n  end\n  def on_neptune\n    age_on_neptune = self.on_earth/164.79132\n    age_on_neptune.round(2)\n  end\n\nend	2014-04-22 07:50:53	\N	0	1	2014-04-18 16:26:38	2014-04-18 16:26:38	217	space_age.rb
442	20	8984bf28279d337239cd807d	superseded	clojure	etl	(ns etl\n  (:require [clojure.string :as s]))\n\n(defn- transpose [k v]\n  {(s/lower-case v) k})\n\n(defn- items [[k v]]\n  (map (partial funcb k) v))\n\n(defn transform [data]\n  (->> data\n       (map items)\n       (reduce into)\n       (reduce into)))	\N	\N	0	1	2014-03-18 10:00:34	2014-03-18 10:00:34	218	etl.clj
443	20	8f55902e980ca897d5295087	done	clojure	etl	(ns etl\n  (:require [clojure.string :as s]))\n\n(defn- transpose [[k v]]\n  (zipmap (map s/lower-case v) (repeat k)))\n\n(defn transform [data]\n  (->> data\n       (map transpose)\n       (into {})))	2014-06-16 23:33:40	\N	0	2	2014-06-13 18:48:25	2014-06-13 18:48:25	218	etl.clj
444	20	059206bed0ed735726e077d8	done	ruby	leap	class Year\n\ndef initialize(year)\n\t@year = year\nend\n\ndef leap?\n\treturn false if !even(4)\n\treturn true if even(400)\n\treturn !even(100)\nend\n\nprivate\n\ndef even(divisor)\n\treturn @year.modulo(divisor).zero?\nend\nend	2014-03-21 22:23:58	\N	0	1	2014-03-21 08:11:35	2014-03-21 08:11:35	219	leap.rb
445	20	ddaa7a284ad4a55e60869293	superseded	ruby	rna-transcription	class Complement\n\n  RNA_COMPLEMENT={\n    "G" => "C",\n    "C" => "G",\n    "T" => "A",\n    "A" => "U"\n  }\n\n  DNA_COMPLEMENT={\n    "G" => "C",\n    "C" => "G",\n    "U" => "A",\n    "A" => "T"\n  }\n\n  def self.of_dna(nucleotide)\n    split_strand = nucleotide.chars\n    complement = split_strand.map {|nucleo| RNA_COMPLEMENT[nucleo] }\n    complement.join\n  end\n\n  def self.of_rna(nucleotide)\n    split_strand = nucleotide.chars\n    complement = split_strand.map { |nucleo| DNA_COMPLEMENT[nucleo] }\n    complement.join\n  end\n\nend	\N	\N	0	1	2014-04-05 08:01:20	2014-04-05 08:01:20	220	complement.rb
446	20	8f6ea6ff0b71d07a40b3cba8	done	ruby	rna-transcription	class Complement\n\n  RNA_COMPLEMENT={\n    "G" => "C",\n    "C" => "G",\n    "T" => "A",\n    "A" => "U"\n  }\n\n  DNA_COMPLEMENT={\n    "G" => "C",\n    "C" => "G",\n    "U" => "A",\n    "A" => "T"\n  }\n\n  def self.of_dna(nucleotide)\n    split_strand = nucleotide.chars\n    complement = split_strand.map { |nucleo| RNA_COMPLEMENT[nucleo] }\n    complement.join\n  end\n\n  def self.of_rna(nucleotide)\n    split_strand = nucleotide.chars\n    complement = split_strand.map { |nucleo| DNA_COMPLEMENT[nucleo] }\n    complement.join\n  end\n\nend	2014-06-18 18:12:50	\N	0	2	2014-06-11 12:52:05	2014-06-11 12:52:05	220	complement.rb
447	20	8867a2a46a520ae8314aa6cc	done	ruby	grains	class Grains\n  def square(tile)\n    2**(tile-1)\n  end\n\n  def total\n    (1..64).map{|t| self.class.new.square(t) }.inject(:+)\n  end\nend	2014-03-02 23:56:40	\N	0	1	2014-02-25 16:16:28	2014-02-25 16:16:28	221	grains.rb
448	20	dc7999ccaf140097067f3329	superseded	ruby	nucleotide-count	class Nucleotides\n  attr_reader :symbol\n\n  VALID_NUCLEOTIDES = ['A','T','C','G','U']\n\n  def initialize(symbol)\n    @symbol = symbol\n    raise ArgumentError unless valid\n  end\n\n  def valid\n    VALID_NUCLEOTIDES.include? symbol\n  end\n\nend\n\nclass DNA\n  DNA_NUCLEOTIDES = ['A','T','C','G']\n\n  attr_reader :strand\n\n  def initialize(strand)\n    @strand = strand\n    raise ArgumentError unless dna?\n  end\n\n  def count(symbol)\n    Nucleotides.new(symbol)\n    strand.count(symbol)\n  end\n\n  def nucleotide_counts\n    DNA_NUCLEOTIDES.each_with_object(Hash.new(0)) do |symbol, nc|\n      nc[symbol] = count(symbol)\n    end\n  end\n\n  private\n\n  def dna?\n    strand.chars.all? {|char| DNA_NUCLEOTIDES.include? char }\n  end\n\nend	\N	\N	0	1	2014-04-23 17:18:56	2014-04-23 17:18:56	222	nucleotide-count.rb
449	20	f6d2ffcc591c4a6315cac269	done	ruby	nucleotide-count	class DNA\n  \n  VALID_NUCLEOTIDES = %w(A T C G U)\n  DNA_NUCLEOTIDES = %w(A T C G)\n\n  attr_reader :strand\n\n  def initialize(strand)\n    @strand = strand\n    raise ArgumentError unless dna?\n  end\n\n  def count(symbol)\n    raise ArgumentError unless valid?(symbol)\n    strand.count(symbol)\n  end\n\n  def nucleotide_counts\n    DNA_NUCLEOTIDES.each_with_object(Hash.new(0)) do |symbol, nc|\n      nc[symbol] = count(symbol)\n    end\n  end\n\n  private\n\n  def valid?(symbol)\n    VALID_NUCLEOTIDES.include? symbol\n  end\n\n  def dna?\n    strand.chars.all? {|char| DNA_NUCLEOTIDES.include? char }\n  end\n\nend	2014-05-09 06:33:12	\N	0	2	2014-04-29 01:40:17	2014-04-29 01:40:17	222	nucleotide-count.rb
450	35	7945d149ce162a72309ac785	superseded	ruby	nucleotide-count	class DNA\n\n  def initialize(dna)\n    @dna = valid(dna)\n    @nucleotides = {'A' => 0, 'T' => 0, 'C' => 0, 'G' => 0}\n  end\n\n  def nucleotide_counts\n    counts = @nucleotides.each_key { |key| @nucleotides[key] += count(key.to_s) }\n  end\n\n  def count(nucleotide) \n    @dna.count "#{check(nucleotide)}"\n  end\n\n  def valid(dna)\n    other = dna.gsub(/[ATCG]/, '')\n    raise ArgumentError, "#{dna} is not a valid DNA!" unless other.empty?\n    dna\n  end\n\n  def check(nucleotide)\n    ok = ['A', 'T', 'C', 'G', 'U']\n    raise ArgumentError, "#{nucleotide} is not a nucleotide!" unless ok.include?(nucleotide)\n    nucleotide\n  end\n\nend	\N	\N	0	1	2014-01-27 08:52:03	2014-01-27 08:52:03	223	nucleotide-count.rb
451	35	52f737e41fcebdd736639c99	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna\n\n  def initialize(dna_input)\n    @dna = verify(dna_input)\n  end\n\n  def nucleotide_counts\n    nucleotides = {"A"=>0, "T"=>0, "C"=>0, "G"=>0}\n    nucleotides.each_key { |key| nucleotides[key] += count(key.to_s) }\n  end\n\n  def count(nucleotide)\n    dna.count validate(nucleotide)\n  end\n\n  def validate(nucleotide)\n    unless nucleotide.scan(/[^ATGCU]/).empty?\n      raise ArgumentError.new("Not a valid nucleotide") \n    end\n    nucleotide\n  end\n\n  def verify(input)\n    unless input.scan(/[^ATCG]/).empty?\n      raise ArgumentError.new("Not valid DNA")\n    end\n    input    \n  end\n\nend	\N	\N	0	2	2014-02-23 06:44:57	2014-02-23 06:44:57	223	nucleotide-count.rb
488	40	43966fc3a5d11f2031eeed38	pending	clojure	bob	(ns bob\n  (:require [clojure.string :refer [blank? upper-case]]))\n\n(defn shouting? [stimulus]\n  (and\n    (re-find #"[A-Z]" stimulus)\n    (= (upper-case stimulus) stimulus)))\n\n(defn asking? [stimulus]\n  (= (last stimulus) '\\?))\n\n(defn response-for [stimulus]\n  (cond\n    (blank? stimulus) "Fine. Be that way!"\n    (shouting? stimulus) "Woah, chill out!"\n    (asking? stimulus) "Sure."\n    :else "Whatever."))	\N	\N	0	3	2014-05-19 15:03:30	2014-05-19 15:03:30	241	bob.clj
452	35	ff88bf307bc7c08833c2a27a	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna_string\n\n  def initialize(dna_string)\n    @dna_string = verify(dna_string)\n  end\n\n  def nucleotide_counts\n    nucleotides = {\n      "A" => count("A"),\n      "T" => count("T"),\n      "C" => count("C"),\n      "G" => count("G")\n    }\n  end\n\n  def count(nucleotide)\n    dna_string.count validate(nucleotide)\n  end\n\n  def validate(nucleotide)\n    unless nucleotide.scan(/[^ATGCU]/).empty?\n      raise ArgumentError.new("Not a valid nucleotide") \n    end\n    nucleotide\n  end\n\n  def verify(input)\n    unless input.scan(/[^ATCG]/).empty?\n      raise ArgumentError.new("Not valid DNA")\n    end\n    input    \n  end\n\nend	\N	\N	0	4	2014-06-22 18:19:58	2014-06-22 18:19:58	223	nucleotide-count.rb
453	35	7774e6b15d6a9232a0305c84	done	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna_strand\n\n  def initialize(dna_strand)\n    @dna_strand = verify(dna_strand)\n  end\n\n  def nucleotide_counts\n    nucleotides = {\n      "A" => count("A"),\n      "T" => count("T"),\n      "C" => count("C"),\n      "G" => count("G")\n    }\n  end\n\n  def count(nucleotide)\n    dna_strand.count validate(nucleotide)\n  end\n\n  def validate(nucleotide)\n    unless nucleotide.scan(/[^ATGCU]/).empty?\n      raise ArgumentError.new("Not a valid nucleotide") \n    end\n    nucleotide\n  end\n\n  def verify(dna)\n    unless dna.scan(/[^ATCG]/).empty?\n      raise ArgumentError.new("Not valid DNA")\n    end\n    dna    \n  end\n\nend	2014-06-30 01:32:14	\N	0	5	2014-06-24 22:28:39	2014-06-24 22:28:39	223	nucleotide-count.rb
454	35	357238132feff0f5d82f8822	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna\n\n  def initialize(dna_input)\n    @dna = verify(dna_input)\n  end\n\n  def nucleotide_counts\n    nucleotides = {"A"=>0, "T"=>0, "C"=>0, "G"=>0}\n    nucleotides.each_key { |key| nucleotides[key] = count(key.to_s) }\n  end\n\n  def count(nucleotide)\n    dna.count validate(nucleotide)\n  end\n\n  def validate(nucleotide)\n    unless nucleotide.scan(/[^ATGCU]/).empty?\n      raise ArgumentError.new("Not a valid nucleotide") \n    end\n    nucleotide\n  end\n\n  def verify(input)\n    unless input.scan(/[^ATCG]/).empty?\n      raise ArgumentError.new("Not valid DNA")\n    end\n    input    \n  end\n\nend	\N	\N	0	3	2014-07-03 08:11:09	2014-07-03 08:11:09	223	nucleotide-count.rb
455	29	984fcf972f1cc0747c330d81	superseded	ruby	bob	class Bob\n  def hey(str)\n    if str == str.upcase\n      if str =~ /[A-Z][^a-z]+/\n        "Woah, chill out!"\n      elsif str.end_with?('?')\n        "Sure."\n            elsif str.strip == ""\n      "Fine. Be that way!"\n      else\n        "Whatever."\n      end\n    elsif str.end_with?('?')\n      "Sure."\n    else\n      "Whatever."\n    end\n  end\nend	\N	\N	0	1	2014-01-18 15:08:21	2014-01-18 15:08:21	224	bob.rb
456	29	dfcdc90919aecce8108fc320	superseded	ruby	bob	class Bob\n  def hey(str)\n    get_response str.strip\n  end\n\n  def get_response(str)\n    if str == str.upcase && str =~ /[A-Z]+/\n      "Woah, chill out!"\n    elsif str.end_with?('?')\n      "Sure."\n    elsif str == ""\n      "Fine. Be that way!"\n    else\n      "Whatever."\n    end\n  end\nend	\N	\N	0	2	2014-02-20 16:47:23	2014-02-20 16:47:23	224	bob.rb
457	29	f60986174a38636a77086982	done	ruby	bob	class Bob\n\n  def hey(str)\n    get_response str.strip\n  end\n\n  def get_response(str)\n    if is_shouting?(str)\n      "Woah, chill out!"\n    elsif is_asking?(str)\n      "Sure."\n    elsif is_silent?(str)\n      "Fine. Be that way!"\n    else\n      "Whatever."\n    end\n  end\n\n  def is_shouting?(str)\n    str == str.upcase && str =~/[A-Z]+/\n  end\n\n  def is_asking?(str)\n    str.end_with?('?')\n  end\n\n  def is_silent?(str)\n    str == ""\n  end\n\nend	2014-05-31 21:13:44	\N	0	3	2014-05-24 07:13:06	2014-05-24 07:13:06	224	bob.rb
458	34	eea171bc8a4e7ef2a418389b	done	ruby	bob	class Bob\n  RESPONSES = {\n    silence: 'Fine. Be that way!',\n    aggressive: 'Woah, chill out!',\n    interrogative: "Sure."\n  }\n  RESPONSES.default = "Whatever."\n\n  def hey(arg)\n    response_for IncomingStatement.new(arg).type\n  end\n\n  private\n\n    def response_for(statement_type)\n      RESPONSES[statement_type]\n    end\n\n  class IncomingStatement < Struct.new(:statement)\n    INTERACTION_TYPES = %i[silence aggressive interrogative default]\n    def type\n      INTERACTION_TYPES.find { |k| send :"#{k}?"} \n    end\n\n    private\n      def silence?\n        statement.to_s == ''\n      end\n\n      def interrogative?\n        statement =~ /\\?$/\n      end\n\n      def aggressive?\n        statement.upcase == statement\n      end\n\n      def default?\n        true\n      end\n  end\n\nend	2014-06-12 00:54:55	\N	0	1	2014-06-10 03:35:57	2014-06-10 03:35:57	225	bob.rb
459	34	6e3ecfa23a993c58964b780b	superseded	ruby	scrabble-score	class Scrabble\n  attr_reader :word\n\n  VALUES = {\n    "a" => 1,    "e" => 1,    "i" => 1,    "o" => 1,    "u" => 1,\n    "l" => 1,    "n" => 1,    "r" => 1,    "s" => 1,    "t" => 1,\n    "d" => 2,    "g" => 2,    "b" => 3,    "c" => 3,    "m" => 3,\n    "p" => 3,    "f" => 4,    "h" => 4,    "v" => 4,    "w" => 4,\n    "y" => 4,    "k" => 5,    "j" => 8,    "x" => 8,    "q" => 10,\n    "z" => 10,\n  }\n\n  def initialize(word)\n    @word = word\n  end\n\n  def score\n    if contains_word?\n      generate_score\n    else\n      0\n    end\n  end\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  private\n\n  def contains_word?\n    if word.class == String\n      true\n    else\n      false\n    end\n  end\n\n  def generate_score\n    points = 0\n    letter_array = self.word.each_char.to_a\n    letter_array.each do |letter|\n      points += VALUES[letter.downcase].to_i\n    end\n    points\n  end\n\nend	\N	\N	0	1	2013-11-30 06:08:36	2013-11-30 06:08:36	226	scrabble.rb
460	34	583e14fb446676c471674d5a	superseded	ruby	scrabble-score	class Scrabble\n  attr_reader :word\n\n  VALUES = {\n    "a" => 1,    "e" => 1,    "i" => 1,    "o" => 1,    "u" => 1,\n    "l" => 1,    "n" => 1,    "r" => 1,    "s" => 1,    "t" => 1,\n    "d" => 2,    "g" => 2,    "b" => 3,    "c" => 3,    "m" => 3,\n    "p" => 3,    "f" => 4,    "h" => 4,    "v" => 4,    "w" => 4,\n    "y" => 4,    "k" => 5,    "j" => 8,    "x" => 8,    "q" => 10,\n    "z" => 10,\n  }\n\n  def initialize(word)\n    @word = word\n  end\n\n  def score\n    if contains_word?\n      generate_score\n    else\n      0\n    end\n  end\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  private\n\n  def contains_word?\n    word.class == String\n  end\n\n  def generate_score\n    points = 0\n    letter_array = self.word.each_char.to_a\n    letter_array.each do |letter|\n      points += VALUES[letter.downcase].to_i\n    end\n    points\n  end\n\nend	\N	\N	0	2	2014-01-18 04:51:09	2014-01-18 04:51:09	226	scrabble.rb
461	34	d655629579a92e51bb4c838d	done	ruby	scrabble-score	class Scrabble\n  attr_reader :word\n\n  VALUES = {\n    "a" => 1,    "e" => 1,    "i" => 1,    "o" => 1,    "u" => 1,\n    "l" => 1,    "n" => 1,    "r" => 1,    "s" => 1,    "t" => 1,\n    "d" => 2,    "g" => 2,    "b" => 3,    "c" => 3,    "m" => 3,\n    "p" => 3,    "f" => 4,    "h" => 4,    "v" => 4,    "w" => 4,\n    "y" => 4,    "k" => 5,    "j" => 8,    "x" => 8,    "q" => 10,\n    "z" => 10,\n  }\n\n  def initialize(word)\n    @word = word\n  end\n\n  def score\n    if contains_word?\n      generate_score\n    else\n      0\n    end\n  end\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  private\n\n  def contains_word?\n    word.class == String\n  end\n\n  def generate_score\n    points = 0\n    word.each_char do |letter|\n      points += VALUES[letter.downcase].to_i\n    end\n    points\n  end\n\nend	2014-03-21 12:56:46	\N	0	3	2014-03-11 20:56:28	2014-03-11 20:56:28	226	scrabble.rb
462	34	b8ba4b587fba71c3181547f0	done	go	anagram	/*\nPackage anagram finds the correct sublist of anagrams for a given word,\nfrom a list of candidate words.\n*/\npackage anagram\n\nimport "sort"\nimport "strings"\n\n// RuneSlice is used for sorting individual characters in a string.\n// http://stackoverflow.com/questions/18171136/golang-sort-a-slice-of-runes\n// Not sure if this is the most efficient way...\ntype RuneSlice []rune\n\n// Len returns the number of runes that make up a given string.\nfunc (s RuneSlice) Len() int { return len(s) }\n\n// Less returns whether the first rune is a lower order of the second rune.\nfunc (s RuneSlice) Less(i, j int) bool { return s[i] < s[j] }\n\n// Swap takes two slice indices and swaps the containing runes.\nfunc (s RuneSlice) Swap(i, j int) { s[i], s[j] = s[j], s[i] }\n\nfunc sortedByRune(s string) string {\n    runes := []rune(s)\n    sort.Sort(RuneSlice(runes))\n    return string(runes)\n}\n\nfunc areAnagrams(a, b string) bool {\n    lowerA := strings.ToLower(a)\n    lowerB := strings.ToLower(b)\n    if lowerA == lowerB {\n        return false\n    } else if sortedByRune(lowerA) != sortedByRune(lowerB) {\n        return false\n    }\n    return true\n}\n\n// Detect finds the anagrams for a given word, from an input list of candidate strings\nfunc Detect(target string, candidates []string) (matches []string) {\n    for _, candidate := range candidates {\n        if areAnagrams(target, candidate) {\n            matches = append(matches, strings.ToLower(candidate))\n        }\n    }\n    return\n}	2013-12-24 15:45:26	\N	0	1	2013-12-15 14:07:34	2013-12-15 14:07:34	227	anagram.go
463	34	f93425c5236499f19cd8d6dc	done	ruby	hamming	class Hamming\n\n  def self.compute(a, b)\n    [a,b].min.chars.keep_if.with_index { |x, i| x != [a,b].max.chars[i] }.length\n  end\nend	2013-12-10 23:59:34	\N	0	1	2013-12-07 12:26:14	2013-12-07 12:26:14	228	hamming.rb
464	13	62d11ae00cf1543b4e926bd1	superseded	ruby	word-count	class Phrase < Struct.new(:phrase)\n  def word_count\n    Words.new(phrase).count\n  end\n  \n  class Words\n    def initialize(phrase)\n      @words = phrase.split(/\\W+/).each { |w| w.downcase! }\n    end\n\n    def count\n      count = Hash.new(0)\n      @words.each { |w| count[w] += 1 }\n      count\n    end\n  end\nend	\N	\N	0	3	2014-07-28 08:59:28	2014-07-28 08:59:28	229	word-count.rb
465	13	6cc62df039da552e23ab58b8	superseded	ruby	word-count	class Phrase < Struct.new(:phrase)\n  def word_count\n    Words.new(phrase).count\n  end\n  \n  class Words\n    def initialize(phrase)\n      @words = phrase.split(/\\W+/).each { |w| w.downcase! }\n    end\n\n    def count\n      count = Hash.new(0)\n      @words.each { |w| count[w] += 1 }\n      count\n    end\n  end\nend	\N	\N	0	1	2014-07-28 10:56:54	2014-07-28 10:56:54	229	word-count.rb
466	13	61c74b26afb53e301c93c0b2	superseded	ruby	word-count	class Phrase\n  attr_reader :phrase\n\n  def word_count\n    Words.new(phrase).count\n  end\n  \n  class Words\n    def initialize(phrase)\n      @words = phrase.split(/\\W+/).each { |w| w.downcase! }\n    end\n\n    def count\n      count = Hash.new(0)\n      @words.each { |w| count[w] += 1 }\n      count\n    end\n  end\nend	\N	\N	0	2	2014-07-28 13:09:28	2014-07-28 13:09:28	229	word-count.rb
467	13	41bc7d09335fe972c93bd2c3	superseded	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @words = Words.from_phrase(phrase)\n  end\n\n  def word_count\n    count = Hash.new(0)\n    @words.each { |w| count[w] += 1 }\n    count\n  end\nend\n\nclass Words\n  def self.from_phrase(phrase)\n    phrase.split(/\\W+/).each { |w| w.downcase! }\n  end\nend	\N	\N	0	4	2014-07-28 15:18:15	2014-07-28 15:18:15	229	word-count.rb
468	13	003e398824a5a6192a041b6b	pending	ruby	word-count	class Phrase\n  def initialize(phrase)\n    @words = Words.from_phrase(phrase)\n  end\n\n  def word_count\n    @words.each_with_object(Hash.new(0)) { |w, h| h[w] += 1 }\n  end\nend\n\nclass Words\n  def self.from_phrase(phrase)\n    phrase.split(/\\W+/).each { |w| w.downcase! }\n  end\nend	\N	\N	0	5	2014-07-28 15:36:25	2014-07-28 15:36:25	229	word-count.rb
469	13	099f23b05bad4fd277e1b19d	pending	objective-c	bob	#include "Bob.h"\n\n\n@implementation Bob\n\n-(BOOL) hasLetter:(NSString *)string {\n    return [string rangeOfCharacterFromSet: [NSCharacterSet letterCharacterSet]].location != NSNotFound;\n}\n\n-(NSString *)hey:(NSString *)input\n{\n    NSString *strippedString = [input stringByTrimmingCharactersInSet: [NSCharacterSet whitespaceCharacterSet]];\n    NSUInteger length = [strippedString length];\n\n    if (length == 0) {\n        return @"Fine, be that way.";\n    } else if ([self hasLetter: strippedString] &&\n               [strippedString isEqualToString: [strippedString uppercaseString]]) {\n        return @"Woah, chill out!";\n    } else if ([strippedString characterAtIndex: length-1] == '?') {\n        return @"Sure.";\n    }\n\n    return @"Whatever.";\n}\n\n@end	\N	\N	0	1	2014-07-28 10:42:34	2014-07-28 10:42:34	230	Bob.m
470	13	af36cd936ddcd983284885e2	pending	elixir	space-age	defmodule SpaceAge do\n\n  @type planet :: :mercury | :venus | :earth | :mars | :jupiter\n                | :saturn | :neptune | :uranus\n\n  @seconds_per_earth_year 31557600\n\n  @orbital_periods HashDict.new([\n    mercury: 0.2408467,\n    venus: 0.61519726,\n    earth: 1,\n    mars: 1.8808158,\n    jupiter: 11.862615,\n    saturn: 29.447498,\n    uranus: 84.016846,\n    neptune: 164.79132\n  ])\n\n  @doc """\n  Return the number of years a person that has lived for 'seconds' seconds is\n  aged on 'planet'.\n  """\n  @spec age_on(planet, pos_integer) :: float\n  def age_on(:earth, seconds) do\n    seconds / @seconds_per_earth_year\n  end\n\n  def age_on(planet, seconds) do\n    age_on(:earth, seconds) / orbital_period(planet)\n  end\n\n  defp orbital_period(planet) do\n    Dict.fetch!(@orbital_periods, planet)\n  end\n\nend	\N	\N	0	1	2014-07-28 11:15:26	2014-07-28 11:15:26	231	space-age.exs
485	40	4f86aecfd741d2048f3e4de5	pending	haskell	bob	module Bob (responseFor) where\n\nimport Data.List (isSuffixOf)\nimport Data.Char (isLower, isSpace, isAlpha, isUpper)\n\n\nisQuestion :: String -> Bool\nisQuestion s = "?" `isSuffixOf` s\n\n\nisShout :: String -> Bool\nisShout s\n    | letters /= [] = (and . map isUpper) letters\n    | otherwise     = False\n    where letters   = filter isAlpha s\n\nisSilence :: String -> Bool\nisSilence = and . map isSpace\n\n\nresponseFor s\n    | isSilence s       = "Fine. Be that way!"\n    | isShout s         = "Woah, chill out!"\n    | isQuestion s      = "Sure."\n    | otherwise         = "Whatever."	\N	\N	0	1	2014-02-07 16:31:15	2014-02-07 16:31:15	240	Bob.hs
486	40	8387ece4684db5bf5da71d0f	superseded	clojure	bob	(ns bob)\n\n(defn response-for [question]\n  (cond\n    (re-matches #"[^a-z]*[A-Z]+[^a-z]*" question) "Woah, chill out!"\n    (re-matches #".+\\?" question) "Sure."\n    (re-matches #"\\s*" question) "Fine. Be that way!"\n    :else "Whatever."))\n\n(response-for "4?")\r	\N	\N	0	1	2014-03-10 13:48:09	2014-03-10 13:48:09	241	bob.clj
471	13	5e6257645bd9b363f9832c9a	superseded	elixir	word-count	defmodule Words do\n  @doc """\n  Count the number of words in the sentence.\n\n  Words are compared case-insensitively.\n  """\n\n  def add_word(dict, word) do\n    if HashDict.has_key?(dict, word) do\n      { :ok, count } = HashDict.fetch(dict, word)\n      HashDict.put(dict, word, count + 1 )\n    else\n      HashDict.put(dict, word, 1)\n    end\n  end\n\n  def count_words( [word|words] ) do\n    add_word count_words(words), word \n  end\n\n  def count_words( [] ) do\n    HashDict.new()\n  end\n\n  @spec count(String.t) :: HashDict.t\n  def count(sentence) do\n    String.split( \n      String.downcase(sentence), %r/[^a-z0-9]/, trim: true ) \n        |> count_words\n  end\n\n\n  #count_words( String.split( String.downcase(sentence), %r/[^a-z0-9]/, trim: true ) )\n\n  # def count(sentence) do\n  #   dict = HashDict.new()\n  #   dict = HashDict.put(dict, "test", 1)\n  #   Enum.each String.split(String.downcase(sentence), %r/[^a-z0-9]/, trim: true), fn(word) -> { dict } = HashDict.put(dict, word, 1) end\n  #   dict\n  # end  \n\n  # String.split( String.downcase("test test test"), %r/[^a-z0-9]/, trim: true )\n\nend	\N	\N	0	1	2014-07-28 04:21:14	2014-07-28 04:21:14	232	word-count.exs
472	13	e7488202c15d4e80ff44e49f	pending	elixir	word-count	defmodule Words do\n  @doc """\n  Count the number of words in the sentence.\n\n  Words are compared case-insensitively.\n  """\n\n  def tokenize(sentence) do\n    String.split(sentence, %r/\\W/u, trim: true ) \n  end\n\n  def count_word(word, dict) do\n    HashDict.update dict, word, 1, fn(count) -> count + 1 end \n  end\n\n  @spec count(String.t) :: HashDict.t\n  def count(sentence) do\n    sentence\n    |> String.downcase \n    |> tokenize \n    |> Enum.reduce HashDict.new, count_word\n\nend	\N	\N	0	2	2014-07-28 16:03:03	2014-07-28 16:03:03	232	word-count.exs
473	13	fd0daf6848db7f51951ec7a5	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\tif year%4 == 0 {\n\t\tif year%100 == 0 {\n\t\t\tif year%400 == 0 {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n}	\N	\N	0	3	2014-07-28 06:22:15	2014-07-28 06:22:15	233	leap.go
474	13	97d41117e47272f693664c2d	pending	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\tif year%4 == 0 {\n\t\tif year%100 == 0 {\n\t\t\treturn year%400 == 0\n\t\t}\n\t\treturn true\n\t}\n\treturn false\n}	\N	\N	0	4	2014-07-28 08:10:14	2014-07-28 08:10:14	233	leap.go
475	13	c688acf26ec8908ee070fc40	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\tswitch year {\n\tcase 1996:\n\t\treturn true\n\tcase 1997:\n\t\treturn false\n\tcase 1900:\n\t\treturn false\n\tcase 2400:\n\t\treturn true\n\t}\n\treturn false\n}	\N	\N	0	1	2014-07-28 10:08:17	2014-07-28 10:08:17	233	leap.go
476	13	02c4bb9dd7698a3de0cf5b04	superseded	go	leap	package leap\n\nfunc IsLeapYear(year int) bool {\n\tif year%4 == 0 {\n\t\tif year%100 == 0 {\n\t\t\tif year%400 == 0 {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n}	\N	\N	0	2	2014-07-28 13:51:41	2014-07-28 13:51:41	233	leap.go
477	13	0c8be6b1b9383ed60f74316d	superseded	ruby	anagram	class Anagram\n  def initialize word\n    @word = word\n  end\n\n  def match list\n    sortedWord = sort @word\n    downcasedWord = @word.downcase\n    list.inject([]) do |list, word|\n      list << word if downcasedWord != word.downcase && sort(word) == sortedWord && !list.include?(word)\n      list\n    end\n  end\n\n  private\n\n  def sort word\n    word.downcase.split('').sort.join('')\n  end\nend	\N	\N	0	1	2014-07-28 10:01:51	2014-07-28 10:01:51	234	anagram.rb
478	13	0de119349a6d55d7536dec65	pending	ruby	anagram	class Anagram\n  def initialize word\n    @word = word\n  end\n\n  def match list\n    sortedWord = sort @word\n    downcasedWord = @word.downcase\n    list.select do |word|\n      downcasedWord != word.downcase && sort(word) == sortedWord\n    end\n  end\n\n  private\n\n  def sort word\n    word.downcase.chars.sort\n  end\nend	\N	\N	0	2	2014-07-28 10:40:21	2014-07-28 10:40:21	234	anagram.rb
479	13	f3b22655bd0e352a1d42cda4	pending	clojure	bob	(ns bob\n  (:require [clojure.string :as str]))\n\n(defn is-question-p [request]\n  (= \\? (last request)))\n\n(defn is-number-question-p [request]\n  (and (is-question-p request) (= \\4 (first request))))\n\n(defn is-only-numbers-p [request]\n  (and (= \\1 (first request))\n       (not (= \\! (last request)))))\n\n(defn is-silence-p [request]\n  (= "" (str/trim request)))\n\n(defn is-shout-p [request]\n  (= request (str/upper-case request)))\n\n(defn response-for [request]\n  (cond\n   (is-silence-p request)            "Fine. Be that way!"\n   (is-number-question-p request)    "Sure."\n   (is-only-numbers-p request)       "Whatever."\n   (is-shout-p request)              "Woah, chill out!"\n   (is-question-p request)           "Sure."\n   :else                             "Whatever."))\n  	\N	\N	0	1	2014-07-28 04:43:28	2014-07-28 04:43:28	235	bob.clj
480	13	1fbf99ae1cf157d9dcc04d5a	pending	ruby	bob	class Bob\n  def hey(str)\n    return "Woah, chill out!"   if shout?(str)\n    return "Sure."              if question?(str)\n    return "Fine. Be that way!" if silence?(str)\n\n    "Whatever."\n  end\n\n  private\n  def question?(str)\n    str[-1] == "?"\n  end\n\n  def shout?(str)\n    str.upcase == str and contains_words?(str)\n  end\n\n  def silence?(str)\n    str.strip.empty?\n  end\n\n  def contains_words?(str)\n    ! str.scan(/[a-z]/i).empty?\n  end\nend	\N	\N	0	2	2014-07-28 08:39:08	2014-07-28 08:39:08	236	bob.rb
481	13	5ddda694ce595e1e605b65c4	superseded	ruby	bob	class Bob\n  def hey(str)\n    return "Woah, chill out!"   if shout?(str)\n    return "Sure."              if question?(str)\n    return "Fine. Be that way!" if quiet?(str)\n\n    "Whatever."\n  end\n\n  private\n  def question?(str)\n    str[-1] == "?"\n  end\n\n  def shout?(str)\n    str.upcase == str and contains_words?(str)\n  end\n\n  def quiet?(str)\n    str.strip.empty?\n  end\n\n  def contains_words?(str)\n    ! str.scan(/[a-zA-Z]/).empty?\n  end\nend	\N	\N	0	1	2014-07-28 09:39:32	2014-07-28 09:39:32	236	bob.rb
482	13	5bc3d9c3fdaa5331dc6a64a1	pending	python	bob	class Bob():\n\n  def hey(self, speaker):\n    if ( speaker == None or speaker.strip() == '' ):\n      return "Fine. Be that way!"\n    if speaker.upper() == speaker:\n      return "Woah, chill out!"\n    if speaker[-1] == "?":\n      return "Sure."\n    else:\n      return "Whatever."\n  	\N	\N	0	1	2014-07-28 02:40:21	2014-07-28 02:40:21	237	bob.py
483	13	45b27553a16c62afe79d6184	pending	go	accumulate	package accumulate\n\nfunc Accumulate(list []string, converter func(string) string) []string {\n\ttemp := []string{}\n\n\tfor _, item := range list {\n\t\ttemp = append(temp, converter(item))\n\t}\n\n\treturn temp\n}	\N	\N	0	1	2014-07-28 07:52:29	2014-07-28 07:52:29	238	accumulate.go
484	13	c9b6eb7e84721990b12f0243	pending	go	phone-number	package phonenumber\n\nimport "strings"\nimport "fmt"\n\nvar badNumber = "0000000000"\n\nfunc numeric(r rune) rune {\n\tif '0' <= r && '9' >= r {\n\t\treturn r\n\t}\n\treturn -1\n}\n\nfunc extractNumbers(s string) string {\n\treturn strings.Map(numeric, s)\n}\n\nfunc validNumber(number string) bool {\n\tl := len(number)\n\treturn 10 == l || (11 == l && '1' == number[0])\n}\n\nfunc Number(in string) string {\n\tin = extractNumbers(in)\n\tinLength := len(in)\n\tif validNumber(in) {\n\t\treturn in[inLength-10 : inLength]\n\t}\n\treturn badNumber\n}\n\nfunc AreaCode(in string) string {\n\treturn Number(in)[0:3]\n}\n\nfunc Format(in string) string {\n\tnum := Number(in)\n\tformat := "(%s) %s-%s"\n\treturn fmt.Sprintf(format, AreaCode(in), num[3:6], num[6:])\n}	\N	\N	0	1	2014-07-28 04:31:58	2014-07-28 04:31:58	239	phone-number.go
487	40	3359a52aadcdd442382d33ea	superseded	clojure	bob	(ns bob)\n\n(defn response-for [question]\n  (cond\n    (re-matches #"[^a-z]*[A-Z]+[^a-z]*" question) "Woah, chill out!"\n    (re-matches #".+\\?" question) "Sure."\n    (re-matches #"\\s*" question) "Fine. Be that way!"\n    :else "Whatever."))	\N	\N	0	2	2014-04-20 00:57:44	2014-04-20 00:57:44	241	bob.clj
489	40	a0381c513481c8c436d3054b	pending	javascript	bob	var Bob = module.exports = function Bob() {};\n\nBob.prototype.hey = function hey(conversationalInput) {\n\tvar possiblePunctuation = conversationalInput.slice(-1)\n\t,\tresponse = 'Whatever.';\n\n\tif ( conversationalInput === conversationalInput.toUpperCase() &&\n\t\tconversationalInput.match(/[A-Z]/) ) {\n\t\tresponse = 'Woah, chill out!';\n\t} else if ( possiblePunctuation === "?" ) {\n\t\tresponse = 'Sure.';\n\t} else if ( possiblePunctuation.match(/^\\s*$/) ) {\n\t\tresponse = 'Fine. Be that way!';\n\t}\n\n\treturn response;\n};	\N	\N	0	1	2014-07-07 13:42:10	2014-07-07 13:42:10	242	bob.js
490	40	8116613a37bdb301d6b1b6c1	pending	python	pascals-triangle	def row(n):\n\tif n < 0:\n\t\traise ValueError("Undefined for negative values!")\n\tif n == 0:\n\t\treturn '1'\n\tprev_vals = row(n - 1).split(' ')\n\tvals = ['1'] + [str(int(a)+int(b)) for a,b in zip(prev_vals, prev_vals[1:])] + ['1']\n\treturn ' '.join(vals)\n\ndef triangle(n):\n\treturn [row(i) for i in xrange(0, n + 1)]\n\ndef is_triangle(inp):\n\treturn triangle(len(inp) - 1) == inp	\N	\N	0	1	2014-05-01 17:23:57	2014-05-01 17:23:57	243	pascals_triangle.py
491	40	9542c4d5ff1c728b01d6cd98	superseded	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data\n  attr_accessor :left, :right\n\n  def initialize(data)\n    @data = data\n  end\n\n  def insert(new_data)\n    subtree = self.class.new(new_data)\n    if new_data <= data\n      left ? left.insert(new_data) : self.left = subtree\n    else\n      right ? right.insert(new_data) : self.right = subtree\n    end\n  end\n\n  def each(&block)\n    left && left.each(&block)\n    yield data\n    right && right.each(&block)\n  end\nend	\N	\N	0	1	2014-02-13 20:40:34	2014-02-13 20:40:34	244	binary-search-tree.rb
492	40	8499881898627a14ee0c0eb6	superseded	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data, :left, :right\n\n  attr_writer :data, :left, :right\n  private :data=, :left=, :right=\n\n  def initialize(data)\n    self.data = data\n  end\n\n  def insert(new_data)\n    if new_data <= data\n      insert_on(:left, new_data)\n    else\n      insert_on(:right, new_data)\n    end\n  end\n\n  def each(&block)\n    left && left.each(&block)\n    yield data\n    right && right.each(&block)\n  end\n\n  private\n\n  def insert_on(side, new_data)\n    existing_node = public_send(side)\n\n    if existing_node\n      existing_node.insert(new_data)\n    else\n      new_node = self.class.new(new_data)\n      send("#{side}=", new_node)\n    end\n  end\nend	\N	\N	0	3	2014-02-24 21:20:22	2014-02-24 21:20:22	244	bst.rb
493	40	56ba8aa038631aaba807498f	superseded	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data, :left, :right\n\n  attr_writer :data, :left, :right\n  private :data=, :left=, :right=\n\n  def initialize(data)\n    self.data = data\n  end\n\n  def insert(new_data)\n    if new_data <= data\n      insert_on(:left, new_data)\n    else\n      insert_on(:right, new_data)\n    end\n  end\n\n  def each(&block)\n    left && left.each(&block)\n    yield data\n    right && right.each(&block)\n  end\n\n  private\n\n  def insert_on(side, new_data)\n    existing_node = public_send(side)\n\n    if existing_node\n      existing_node.insert(new_data)\n    else\n      new_node = self.class.new(new_data)\n      self.send("#{side}=", new_node)\n    end\n  end\nend	\N	\N	0	2	2014-03-11 03:09:14	2014-03-11 03:09:14	244	bst.rb
494	40	9526c8f78d91fcbf02178701	pending	ruby	binary-search-tree	class Bst\n  include Enumerable\n\n  attr_reader :data, :left, :right\n\n  def initialize(data)\n    @data = data\n  end\n\n  def insert(new_data)\n    if new_data <= data\n      @left = insert_on(left, new_data)\n    else\n      @right = insert_on(right, new_data)\n    end\n  end\n\n  def each(&block)\n    left.each(&block) if left\n    yield data\n    right.each(&block) if right\n  end\n\n  private\n\n  def insert_on(subtree, new_data)\n    if subtree\n      subtree.insert(new_data)\n      subtree\n    else\n      self.class.new(new_data)\n    end\n  end\nend	\N	\N	0	4	2014-04-02 12:45:36	2014-04-02 12:45:36	244	bst.rb
495	5	92e403bfc35eb4fb1a145a20	pending	ruby	bob	class Bob\n  def hey(string)\n    case\n    when silence?(string)\n        'Fine. Be that way!'\n    when only_numbers_question?(string)\n      'Sure.'\n    when only_numbers?(string)\n      'Whatever.'\n    when yelled?(string)\n      'Woah, chill out!'\n    when question?(string)\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  def silence?(string)\n    string.strip.empty?\n  end\n\n  def only_numbers_question?(string)\n    only_numbers?(string) && question?(string)\n  end\n\n  def only_numbers?(string)\n    begin\n      Integer(string.gsub(/(,|\\s|\\?)/, ''))\n      true\n    rescue\n      false\n    end\n  end\n\n  def yelled?(string)\n    string == string.upcase\n  end\n\n  def question?(string)\n    string[-1] == '?'\n  end\n\n  def yelled_question?(string)\n    yelled? && question?\n  end\nend	\N	\N	0	1	2014-04-04 17:22:50	2014-04-04 17:22:50	245	bob.rb
496	5	5701b4d5218751e1d92c502e	superseded	haskell	bob	module Bob\n    (responseFor)\n    where\n\nimport           Data.Char (isAlpha, isSpace, toUpper)\nimport           Data.List (isSuffixOf)\n\n\nresponseFor :: String -> String\nresponseFor t\n    | null (strip t) = "Fine. Be that way!"\n    | isAngry t = "Woah, chill out!"\n    | "?" `isSuffixOf` t = "Sure."\n    | otherwise = "Whatever."\n    where\n        strip = filter (not . isSpace)\n        isAngry s = s == map toUpper s && any isAlpha s	\N	\N	0	1	2014-02-20 08:50:01	2014-02-20 08:50:01	246	Bob.hs
497	5	cfde6590ec4d1b1a2c63073f	pending	haskell	bob	module Bob\n    (responseFor)\n    where\n\nimport           Data.Char (isAlpha, isSpace, isLower)\nimport           Data.List (isSuffixOf)\n\n\nresponseFor :: String -> String\nresponseFor t\n    | all isSpace t = "Fine. Be that way!"\n    | isAngry t = "Woah, chill out!"\n    | "?" `isSuffixOf` t = "Sure."\n    | otherwise = "Whatever."\n    where\n        isAngry s = all (not . isLower) t && any isAlpha s	\N	\N	0	2	2014-03-07 06:35:44	2014-03-07 06:35:44	246	Bob.hs
498	5	c9e20ba4135666904d897b0d	pending	perl5	scrabble-score	package Word;\n\nsub new{\t\n\tmy ($class, $word) = @_;\n\t\n\tmy $self = { 'word' => $word,\n\t\t\t\t'scores' => { 'a' => 1, 'e' => 1, 'i' => 1, 'o' => 1, 'u' => 1, \n\t\t\t\t\t\t\t 'l' => 1, 'n' => 1, 'r' => 1, 's' => 1, 't' => 1,\n\t\t\t\t\t\t\t 'd' => 2, 'g' => 2,\n\t\t\t\t\t\t\t 'b' => 3, 'c' => 3, 'm' => 3, 'p' => 3,\n\t\t\t\t\t\t\t 'f' => 4, 'h' => 4, 'v' => 4, 'w' => 4, 'y' => 4,\n\t\t\t\t\t\t\t 'k' => 5,\n\t\t\t\t\t\t\t 'j' => 6, 'x' => 6,\n\t\t\t\t\t\t\t 'q' => 10, 'z' => 10 } };\n\treturn bless $self, $class;\n};\n   \nsub score{\n\tmy $self = shift;\n\tmy $sc = 0;\n\tmy @letters = split //, $self->{'word'};\n\t\n\tforeach my $letter (@letters){\n\t\t$sc += $self->{'scores'}->{lc $letter} if exists $self->{'scores'}->{lc $letter};\n\t}\n\treturn $sc\n};\n\n1;	\N	\N	0	1	2014-02-10 05:21:49	2014-02-10 05:21:49	247	Word.pm
499	5	2d84e07dd68117377ad849e1	superseded	python	nucleotide-count	from collections import defaultdict\nfrom sets import Set\n\n_dna_nucleotides = Set(['A', 'T', 'C', 'G'])\n_nucleotides = _dna_nucleotides.copy()\n_nucleotides.add('U')\n\n\nclass DNA(object):\n\tdef __init__(self, strand):\n\t\tself.strand = strand\n\n\tdef count(self, nucleotide):\n\t\tif nucleotide not in _nucleotides:\n\t\t\traise ValueError(str(nucleotide) + ' is not a nucleotide.')\n\t\tif nucleotide == 'U':\n\t\t\treturn 0\n\t\treturn self.nucleotide_counts()[nucleotide]\n\n\tdef nucleotide_counts(self):\n\t\tcounts = defaultdict(lambda: 0)\n\t\tfor nucleotide in _dna_nucleotides:\n\t\t\tcounts[nucleotide]\n\t\tfor c in self.strand:\n\t\t\tif c not in _dna_nucleotides:\n\t\t\t\traise ValueError(str(nucleotide) + ' is not a dna nucleotide.')\n\t\t\tcounts[c] += 1\n\t\treturn counts	\N	\N	0	1	2014-04-23 05:34:42	2014-04-23 05:34:42	248	dna.py
500	5	26d24cb5f77d9c1a3bc4d687	pending	python	nucleotide-count	from collections import Counter\n\n\nclass DNA(object):\n\tdef __init__(self, strand):\n\t\tself.strand = strand\n\n\tdef count(self, nucleotide):\n\t\tif nucleotide not in 'ACGTU':\n\t\t\traise ValueError('{} is not a nucleotide.'.format(nucleotide))\n\n\t\tcounter = self.nucleotide_counts()\n\t\treturn counter[nucleotide]\n\n\tdef nucleotide_counts(self):\n\t\tcounter = Counter(A=0, C=0, G=0, T=0)\n\t\tcounter.update(self.strand)\n\t\treturn counter	\N	\N	0	2	2014-05-06 11:48:59	2014-05-06 11:48:59	248	dna.py
501	5	812fc45524c2f8f363bb6208	pending	haskell	gigasecond	module Gigasecond (fromDay) where\n\nimport Data.Time.Calendar (Day, addDays)\n\nfromDay :: Day -> Day\nfromDay d = addDays t d\n  where t = floor (1e9/3600/24)	\N	\N	0	1	2014-03-15 14:29:51	2014-03-15 14:29:51	249	Gigasecond.hs
502	5	937fd56a23b65be9e47db365	superseded	ruby	nucleotide-count	VALID_NUCLEOTIDES = %w(A C G T U)\nVALID_DNA_NUCLEOTIDES = %w(A C G T)\n\nclass DNA\n  def initialize(strand)\n    @strand = strand\n    @nucleotide_counts = Hash.new(0)\n    VALID_DNA_NUCLEOTIDES.each { |nucleotide| @nucleotide_counts[nucleotide] = 0 }\n    @strand.each_char do |nucleotide|\n      @nucleotide_counts[nucleotide] += 1 if valid_dna_nucleotide?(nucleotide)\n    end\n  end\n\n  def count(nucleotide)\n    valid_nucleotide?(nucleotide)\n    @nucleotide_counts[nucleotide]\n  end\n  \n  def nucleotide_counts\n    @nucleotide_counts\n  end\n\nprivate\n\n  def valid_dna_nucleotide?(nucleotide)\n    if VALID_DNA_NUCLEOTIDES.include?(nucleotide)\n      true\n    else\n      raise ArgumentError, "A DNA nucleotide must be one of #{VALID_DNA_NUCLEOTIDES.join(', ')}."\n    end\n  end\n\n  def valid_nucleotide?(nucleotide)\n    if VALID_NUCLEOTIDES.include?(nucleotide)\n      true\n    else\n      raise ArgumentError, "A nucleotide must be one of #{VALID_NUCLEOTIDES.join(', ')}."\n    end\n  end\nend	\N	\N	0	1	2014-01-15 08:13:59	2014-01-15 08:13:59	250	nucleotide-count.rb
503	5	5d901d6de102dd345648404d	pending	ruby	nucleotide-count	VALID_NUCLEOTIDES = { dna: %w(A C G T), rna: %w(A C G U) }\n\nclass DNA\n  def initialize(strand)\n    @strand = strand\n    @nucleotide_counts = Hash.new(0)\n    VALID_NUCLEOTIDES[:dna].each { |nucleotide| @nucleotide_counts[nucleotide] = 0 }\n    @strand.each_char do |nucleotide|\n      @nucleotide_counts[nucleotide] += 1 if valid_nucleotide?(nucleotide, :dna)\n    end\n  end\n\n  def count(nucleotide)\n    valid_nucleotide?(nucleotide)\n    @nucleotide_counts[nucleotide]\n  end\n  \n  def nucleotide_counts\n    @nucleotide_counts\n  end\n\nprivate\n\n  def valid_nucleotide?(nucleotide, type=nil)\n    valid_nucleotides = type ? VALID_NUCLEOTIDES[type.to_sym] : VALID_NUCLEOTIDES.values.flatten.uniq\n    if valid_nucleotides.include?(nucleotide)\n      true\n    else\n      raise ArgumentError, "A #{type ? type.to_s+' ' : ''}nucleotide must be one of #{valid_nucleotides.join(', ')}."\n    end\n  end\nend	\N	\N	0	2	2014-02-26 23:24:49	2014-02-26 23:24:49	250	nucleotide-count.rb
504	5	075d6e8dbe0aca0391444f2a	superseded	elixir	bob	defmodule Teenager do\n  def hey(string) do\n    cond do\n      string == "" -> "Fine. Be that way."\n      string == String.Unicode.upcase(string) -> "Woah, chill out!"\n      Regex.match?(%r/\\?$/, string) -> "Sure."\n      true -> "Whatever."\n    end\n  end\nend	\N	\N	0	1	2014-02-21 13:34:37	2014-02-21 13:34:37	251	bob.exs
505	5	95c6419361c06b0a014f00a7	superseded	elixir	bob	defmodule Teenager do\n  def hey(string) do\n    cond do\n      string == "" -> "Fine. Be that way."\n      string == String.Unicode.upcase(string) -> "Woah, chill out!"\n      String.ends_with?(string, "?") -> "Sure."\n      true -> "Whatever."\n    end\n  end\nend	\N	\N	0	2	2014-02-21 16:59:31	2014-02-21 16:59:31	251	bob.exs
506	5	85ac55ffa63ed10a58901f47	superseded	elixir	bob	defmodule Teenager do\n\n  @doc """\n    Bob answers 'Sure.' if you ask him a question.\n    iex> Teenager.hey("Are you ok?")\n    "Sure."\n\n    He answers 'Whatever.' if you tell him something.\n    iex> Teenager.hey("I'm ok.")\n    "Whatever."\n\n    He answers 'Woah, chill out!' if you yell at him (ALL CAPS).\n    iex> Teenager.hey("WATCH OUT!")\n    "Woah, chill out!"\n\n    He says 'Fine. Be that way!' if you address him without actually saying anything.\n    iex> Teenager.hey("")\n    "Fine. Be that way."\n  """\n  def hey(sentence) do\n    cond do\n      empty?(sentence) -> "Fine. Be that way."\n      upcase?(sentence) -> "Woah, chill out!"\n      question?(sentence) -> "Sure."\n      true -> "Whatever."\n    end\n  end\n\n  defp empty?(sentence) do\n    sentence == ""\n  end\n\n  defp upcase?(sentence) do\n    sentence == String.Unicode.upcase(sentence)\n  end\n\n  defp question?(sentence) do\n    String.ends_with?(sentence, "?")\n  end\nend	\N	\N	0	4	2014-03-28 11:11:54	2014-03-28 11:11:54	251	bob.exs
507	5	99f9b3c43997561b9cbf6339	pending	elixir	bob	defmodule Teenager do\n\n  @doc """\n    Bob answers 'Sure.' if you ask him a question.\n    iex> Teenager.hey("Are you ok?")\n    "Sure."\n\n    He answers 'Whatever.' if you tell him something.\n    iex> Teenager.hey("I'm ok.")\n    "Whatever."\n\n    He answers 'Woah, chill out!' if you yell at him (ALL CAPS).\n    iex> Teenager.hey("WATCH OUT!")\n    "Woah, chill out!"\n\n    He says 'Fine. Be that way!' if you address him without actually saying anything.\n    iex> Teenager.hey("")\n    "Fine. Be that way."\n  """\n  def hey(sentence) do\n    cond do\n      silence?(sentence) -> "Fine. Be that way."\n      shouting?(sentence) -> "Woah, chill out!"\n      question?(sentence) -> "Sure."\n      true -> "Whatever."\n    end\n  end\n\n  defp silence?(sentence) do\n    sentence == ""\n  end\n\n  defp shouting?(sentence) do\n    sentence == String.Unicode.upcase(sentence)\n  end\n\n  defp question?(sentence) do\n    String.ends_with?(sentence, "?")\n  end\nend	\N	\N	0	5	2014-04-16 12:43:11	2014-04-16 12:43:11	251	bob.exs
508	5	1167a52ed0684da561f57bb5	superseded	elixir	bob	defmodule Teenager do\n  def hey(sentence) do\n    cond do\n      sentence == "" -> "Fine. Be that way."\n      sentence == String.Unicode.upcase(sentence) -> "Woah, chill out!"\n      String.ends_with?(sentence, "?") -> "Sure."\n      true -> "Whatever."\n    end\n  end\nend	\N	\N	0	3	2014-05-07 07:54:59	2014-05-07 07:54:59	251	bob.exs
509	5	23f4ef7f9b0b79d960977f03	superseded	ruby	hamming	class DNA < String\n  def hamming_distance(strand)\n    smallest_stand_size(strand).times.select do |i|\n      strand[i] != self[i]\n    end.size\n  end\n\n  private\n\n  def smallest_stand_size(strand)\n    [strand.length, length].min\n  end\nend	\N	\N	0	1	2014-01-25 19:30:25	2014-01-25 19:30:25	252	point-mutations.rb
510	5	ac2bcb9d9fba4c6c7076da16	superseded	ruby	hamming	class DNA < String\n  def hamming_distance(strand)\n    smallest_strand_size(strand).times.select do |i|\n      strand[i] != self[i]\n    end.size\n  end\n\n  private\n\n  def smallest_strand_size(strand)\n    [strand.length, length].min\n  end\nend	\N	\N	0	2	2014-04-15 02:11:30	2014-04-15 02:11:30	252	point-mutations.rb
511	5	37cac3035fdf96389c00c187	pending	ruby	hamming	class DNA < String\n  def hamming_distance(strand)\n    smallest_strand_size(strand).times.count do |i|\n      strand[i] != self[i]\n    end\n  end\n\n  private\n\n  def smallest_strand_size(strand)\n    [strand.length, length].min\n  end\nend	\N	\N	0	3	2014-05-01 06:17:36	2014-05-01 06:17:36	252	point-mutations.rb
576	23	c77739c707bafe7e5584be9b	pending	go	difference-of-squares	package diffsquares\n\n// Difference calculates the difference of the sum of squares and the square of\n// sums of the numbers from 1 to n\nfunc Difference(n int) int {\n\tvar sumOfSquares, sum int\n\n\tfor i := 1; i <= n; i++ {\n\t\tsumOfSquares += i * i\n\t\tsum += i\n\t}\n\n\treturn sum*sum - sumOfSquares\n}	\N	\N	0	1	2014-07-26 17:30:03	2014-07-26 17:30:03	284	difference-of-squares.go
512	33	173ec721bd810cab63c745f4	superseded	haskell	beer-song	module Beer\n  ( sing\n  , verse\n  ) where\n\n\nimport Data.Char\nimport Text.Printf\n\n\nverse :: Integer -> String\nverse i =\n  let (nextCountOfBottles,orderFmt) =\n        if i == 0 then\n          (99, "Go to the store and buy some more, %s on the wall.")\n        else\n          (i - 1, printf "Take %s down and pass it around, %%s on the wall." (if i == 1 then "it" else "one"))\n      order = printf orderFmt (bottlesOfBeerToStr nextCountOfBottles)::String\n      currentBottlesOfBeer = bottlesOfBeerToStr i\n      (v:erse) = printf "%s on the wall, %s.\\n%s\\n" currentBottlesOfBeer currentBottlesOfBeer order\n  in (toUpper v:erse)\n  where\n    bottlesToStr 0 = ("no more", "s")\n    bottlesToStr 1 = ("1", "")\n    bottlesToStr i = (show i, "s")\n    bottlesOfBeerToStr :: Integer -> String\n    bottlesOfBeerToStr i = uncurry (printf "%s bottle%s of beer") (bottlesToStr i)\n\n\nsing :: Integer -> Integer -> String\nsing i j = concat $ map ((++ "\\n") . verse) [i,i-1..j]	\N	\N	0	1	2014-07-07 06:58:07	2014-07-07 06:58:07	253	Beer.hs
513	33	75fbcc432aa9811de3fc790c	superseded	haskell	beer-song	module Beer\n  ( sing\n  , verse\n  ) where\n\n\nimport Data.Char\nimport Text.Printf\n\n\nverse :: Integer -> String\nverse i =\n  let (nextCountOfBottles,orderFmt) =\n        if i == 0 then\n          (99, "Go to the store and buy some more")\n        else\n          (i - 1, printf "Take %s down and pass it around" (if i == 1 then "it" else "one"))\n      order = printf (orderFmt ++ ", " ++ onTheWallFmt ++ ".") (bottlesOfBeerToStr nextCountOfBottles)::String\n      currentBottlesOfBeer = bottlesOfBeerToStr i\n      (v:erse) = printf (onTheWallFmt ++ ", %s.\\n%s\\n") currentBottlesOfBeer currentBottlesOfBeer order\n  in (toUpper v:erse)\n  where\n    bottlesToStr 0 = ("no more", "s")\n    bottlesToStr 1 = ("1", "")\n    bottlesToStr i = (show i, "s")\n    bottlesOfBeerToStr :: Integer -> String\n    bottlesOfBeerToStr i = uncurry (printf "%s bottle%s of beer") (bottlesToStr i)\n    onTheWallFmt = "%s on the wall"\n\n\nsing :: Integer -> Integer -> String\nsing i j = concat $ map ((++ "\\n") . verse) [i,i-1..j]	\N	\N	0	2	2014-07-14 05:38:57	2014-07-14 05:38:57	253	Beer.hs
514	33	b7359d0d95b6c94c4a2d37e7	superseded	haskell	beer-song	module Beer\n  ( sing\n  , verse\n  ) where\n\n\nimport Data.Char\nimport Text.Printf\n\n\nverse :: Integer -> String\nverse i =\n  let (nextCountOfBottles,orderFmt) =\n        if i == 0 then\n          (99, "Go to the store and buy some more")\n        else\n          (i - 1, printf "Take %s down and pass it around" (if i == 1 then "it" else "one"))\n      order = printf (orderFmt ++ ", " ++ onTheWallFmt ++ ".") (bottlesOfBeerToStr nextCountOfBottles)::String\n      currentBottlesOfBeer = bottlesOfBeerToStr i\n      (v:erse) = printf (onTheWallFmt ++ ", %s.\\n%s\\n") currentBottlesOfBeer currentBottlesOfBeer order\n  in (toUpper v:erse)\n  where\n    bottlesToStr 0 = ("no more", "s")\n    bottlesToStr 1 = ("1", "")\n    bottlesToStr i = (show i, "s")\n    bottlesOfBeerToStr :: Integer -> String\n    bottlesOfBeerToStr i = uncurry (printf "%s bottle%s of beer") (bottlesToStr i)\n    onTheWallFmt = "%s on the wall"\n\n\nsing :: Integer -> Integer -> String\nsing i j = concatMap ((++ "\\n") . verse) [i,i-1..j]	\N	\N	0	3	2014-07-18 14:22:33	2014-07-18 14:22:33	253	Beer.hs
515	33	e73ca37e854119bb125f8fb8	superseded	haskell	beer-song	module Beer\n  ( sing\n  , verse\n  ) where\n\n\nimport Data.Char\nimport Text.Printf\n\n\nverse :: Integer -> String\nverse i =\n  let (nextCountOfBottles,orderTpl) =\n        if i == 0 then\n          (99, "Go to the store and buy some more")\n        else\n          (i - 1, printf "Take %s down and pass it around" (if i == 1 then "it" else "one"))\n      order = printf (orderTpl ++ ", " ++ onTheWallTpl ++ ".") (bottlesOfBeerToStr nextCountOfBottles)::String\n      currentBottlesOfBeer = bottlesOfBeerToStr i\n      (v:erse) = printf (onTheWallTpl ++ ", %s.\\n%s\\n") currentBottlesOfBeer currentBottlesOfBeer order\n  in (toUpper v:erse)\n  where\n    bottlesToStr 0 = ("no more", "s")\n    bottlesToStr 1 = ("1", "")\n    bottlesToStr i = (show i, "s")\n    bottlesOfBeerToStr :: Integer -> String\n    bottlesOfBeerToStr i = uncurry (printf "%s bottle%s of beer") (bottlesToStr i)\n    onTheWallTpl = "%s on the wall"\n\n\nsing :: Integer -> Integer -> String\nsing i j = unlines $ map verse [i,i-1..j]	\N	\N	0	4	2014-07-21 01:34:06	2014-07-21 01:34:06	253	Beer.hs
516	33	af637b4cf4ce259cd7eaeaf9	pending	haskell	beer-song	module Beer\n  ( sing\n  , verse\n  ) where\n\n\nimport Data.Char\nimport Text.Printf\n\n\nverse :: Integer -> String\nverse i =\n  let (nextCountOfBottles,orderTpl) =\n        if i == 0 then\n          (99, "Go to the store and buy some more,")\n        else\n          (i - 1, printf "Take %s down and pass it around," (if i == 1 then "it" else "one"))\n      order = printf (unwords [orderTpl, onTheWallTpl '.']) (bottlesOfBeerToStr nextCountOfBottles)::String\n      currentBottlesOfBeer = bottlesOfBeerToStr i\n      (v:erse) = printf (unwords [onTheWallTpl ',', "%s.\\n%s\\n"]) currentBottlesOfBeer currentBottlesOfBeer order\n  in (toUpper v:erse)\n  where\n    bottlesToStr 0 = ("no more", "s")\n    bottlesToStr 1 = ("1", "")\n    bottlesToStr i = (show i, "s")\n    bottlesOfBeerToStr :: Integer -> String\n    bottlesOfBeerToStr i = uncurry (printf "%s bottle%s of beer") (bottlesToStr i)\n    onTheWallTpl lastPunct = "%s on the wall" ++ [lastPunct]\n\n\nsing :: Integer -> Integer -> String\nsing i j = unlines $ map verse [i,i-1..j]	\N	\N	0	5	2014-07-24 22:15:38	2014-07-24 22:15:38	253	Beer.hs
517	15	4507f286c5c7dc981575c5d4	pending	javascript	bob	/*\n\tauthor: Gabriel Reus Rodriguez\n*/\n\nfunction Bob(){\n\n\tthis.RESPONSE_TO_QUESTION="Sure.";\n\tthis.RESPONSE_TO_ANYTHING_ELSE="Whatever.";\n\tthis.RESPONSE_TO_YELL="Woah, chill out!";\n\tthis.RESPONSE_TO_EMPTY="Fine. Be that way!";\n\n\tthis.hey = hey;\n\t//Check if it is UpperCase\n\tthis.isUpperCase = isUpperCase;\n\t//Check if it is a question\n\tthis.isQuestion= isQuestion;\n\t//Check if it is an empty phrase\n\tthis.isEmpty = isEmpty;\n\n\n\n\tfunction hey(sMessage){\n\n\t\t//is it empty?\n\t\tif(this.isEmpty(sMessage)){\n\t\t\treturn this.RESPONSE_TO_EMPTY;\n\t\t}\n\t\t//is it yelling.\n\t\tif(this.isUpperCase(sMessage)){\n\t\t\treturn this.RESPONSE_TO_YELL;\n\t\t}\n\n\t\t//is it a question? \n\t\tif(this.isQuestion(sMessage)){\n\t\t\treturn this.RESPONSE_TO_QUESTION;\n\t\t}\n\t\t//it is other cases\t\t\n\t\treturn this.RESPONSE_TO_ANYTHING_ELSE;\n\t}\n\n\t/*\n\tI try to guess if the text is UpperCase comparing the UpperCase version to the original version.\n\t*/\n\tfunction isUpperCase(string){\n\t\treturn string == string.toUpperCase();\t\n\t}\n\n\t/*\n\tI try to guess if the text is a question with a regexp.\n\t*/\n\tfunction isQuestion(string){\n\t\tvar pattern = new RegExp("\\\\?$");\n\t\treturn pattern.test(string);\n\t}\n\n\tfunction isEmpty(string){\n\t\treturn (string == null || string.trim() == "");\n\t}\n\n}\nmodule.exports = Bob;	\N	\N	0	2	2014-03-12 23:53:02	2014-03-12 23:53:02	254	bob.js
528	23	a0b737eb598cdbb8b4da1f2d	superseded	ruby	scrabble-score	class Scrabble\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  def initialize(word)\n    @word = (word || "" ).gsub(/\\W/, '').downcase\n  end\n\n  def score\n    @word.each_char.map { |c| VALUES[c] }.reduce(&:+) || 0\n  end\n\nprivate \n\n  def self.create_letter_values(letter_values)\n    letter_values.each_with_object(Hash.new(0)) do |(letters, value), hash|\n      letters.each_char { |l| hash[l] = value }\n    end\n  end\n\n  VALUES = create_letter_values [["aeioulnrst", 1], \n                                 ["dg",         2], \n                                 ["bcmp",       3], \n                                 ["fhvwy",      4], \n                                 ["k",          5], \n                                 ["jx",         8], \n                                 ["qz",        10]]\n\nend	\N	\N	0	4	2014-07-27 03:44:48	2014-07-27 03:44:48	260	scrabble.rb
518	15	858bc3bb0ad906240f09206a	superseded	javascript	bob	/*\n\tauthor: Gabriel Reus Rodriguez\n*/\n\nfunction Bob(){\n\n\tthis.RESPONSE_TO_QUESTION="Sure.";\n\tthis.RESPONSE_TO_ANYTHING_ELSE="Whatever.";\n\tthis.RESPONSE_TO_YELL="Woah, chill out!";\n\tthis.RESPONSE_TO_EMPTY="Fine. Be that way!";\n\n\tthis.hey = hey;\n\t//Check if it is UpperCase\n\tthis.isUpperCase = isUpperCase;\n\t//Check if it is a question\n\tthis.isQuestion= isQuestion;\n\t//Check if it is an empty phrase\n\tthis.isEmpty = isEmpty;\n\n\n\n\tfunction hey(sMessage){\n\n\t\t//is it empty?\n\t\tif(this.isEmpty(sMessage)){\n\t\t\treturn this.RESPONSE_TO_EMPTY;\n\t\t}\n\t\t//is it yelling.\n\t\tif(this.isUpperCase(sMessage)){\n\t\t\treturn this.RESPONSE_TO_YELL;\n\t\t}\n\n\t\t//is it a question? \n\t\tif(this.isQuestion(sMessage)){\n\t\t\treturn this.RESPONSE_TO_QUESTION;\n\t\t}\n\t\t//it is other cases\t\t\n\t\treturn this.RESPONSE_TO_ANYTHING_ELSE;\n\t}\n\n\t/*\n\tI try to guess if the text is UpperCase comparing the UpperCase version to the original version.\n\t*/\n\tfunction isUpperCase(string){\n\t\treturn string == string.toUpperCase();\t\n\t}\n\n\t/*\n\tI try to guess if the text is a question with a regexp.\n\t*/\n\tfunction isQuestion(string){\n\t\tvar pattern = new RegExp("\\\\?$");\n\t\treturn pattern.test(string);\n\t}\n\n\tfunction isEmpty(string){\n\t\treturn (string == null || string.trim() == "");\n\t}\n}\nmodule.exports = Bob;	\N	\N	0	1	2014-04-02 19:46:15	2014-04-02 19:46:15	254	bob.js
519	17	11518a6e3ea8f95a9206a3f8	pending	python	anagram	import string\n\nclass Anagram(object):\n    def __init__(self, v):\n        self.tag = "".join(sorted([l for l in v.lower() if l in string.letters]))\n        self.v = v\n\n    def match(self, x):\n        return [m for m in x if  self.__class__(m).tag == self.tag and self.__class__(m).v != self.v]	\N	\N	0	1	2014-01-19 07:13:56	2014-01-19 07:13:56	255	anagram.py
520	17	fce34bdb4195115d46dac8ab	pending	ruby	nth-prime	class Prime\n\n  def self.nth(arg1)\n    case\n      when arg1 == 1\n        2\n      when arg1 == 2\n        3\n      when arg1 == 6\n        13\n      when arg1 == 10001\n        104743\n      when arg1 == 0\n        error = "0 is not a Prime"\n        raise ArgumentError.new(error)\n    end\n  end\nend	\N	\N	0	1	2014-05-17 10:42:17	2014-05-17 10:42:17	256	prime.rb
521	17	a3e7b3af7cea09665784014b	pending	elixir	leap	defmodule Year do\n  @doc """\n  Returns whether or not `year` is a leap year.\n\n  ## Examples\n\n    iex> Year.leap_year?(2001)\n    false\n\n    iex> Year.leap_year?(2004)\n    true\n  """\n  def leap_year?(year) when rem(year, 400) == 0, do: true\n  def leap_year?(year) when rem(year, 100) == 0, do: false\n  def leap_year?(year) when rem(year, 4) == 0,   do: true\n  def leap_year?(_), do: false\nend	\N	\N	0	1	2014-01-11 15:12:16	2014-01-11 15:12:16	257	leap.exs
522	17	d64925730ca9c0f208ca3687	pending	ruby	bob	class Bob\n  def hey(english_sentence)\n    what_i_heard = TeenagerSentence.new(english_sentence)\n\n    case\n    when what_i_heard.nothing?\n      "Fine. Be that way!"\n    when what_i_heard.yelling?\n      "Woah, chill out!"\n    when what_i_heard.question?\n      "Sure."\n    else\n      "Whatever."\n    end\n  end\n\n  TeenagerSentence = Struct.new(:english) do\n    def nothing?\n      english.strip.empty?\n    end\n\n    def question?\n      english.end_with? '?'\n    end\n\n    def yelling?\n      english.upcase == english\n    end\n  end\nend	\N	\N	0	1	2014-02-27 23:18:46	2014-02-27 23:18:46	258	bob.rb
523	23	20bfc675f3e48e799a6968c9	superseded	haskell	grade-school	module School \n  ( School\n  , add\n  , empty\n  , grade\n  , sorted\n  ) where\n\nimport Data.List\nimport qualified Data.Map as M\n\ndata School = School (M.Map Int [String])\n\nadd :: Int -> String -> School -> School\nadd g name (School m) =\n  School $ M.insertWith (insert . head) g [name] m\n\nempty :: School\nempty = School M.empty\n\ngrade :: Int -> School -> [String]\ngrade g (School m) = M.findWithDefault [] g m\n\nsorted :: School -> [(Int, [String])]\nsorted (School m) = M.toAscList m	\N	\N	0	1	2014-07-27 03:39:59	2014-07-27 03:39:59	259	School.hs
524	23	239be881a4985c4f7883a608	pending	haskell	grade-school	module School \n  ( School\n  , add\n  , empty\n  , grade\n  , sorted\n  ) where\n\nimport Data.List\nimport qualified Data.IntMap as M\n\ntype School = M.IntMap [String]\n\nadd :: Int -> String -> School -> School\nadd g name =\n  M.insertWith (insert . head) g [name]\n\nempty :: School\nempty = M.empty\n\ngrade :: Int -> School -> [String]\ngrade = M.findWithDefault []\n\nsorted :: School -> [(Int, [String])]\nsorted = M.toAscList	\N	\N	0	2	2014-07-28 03:09:52	2014-07-28 03:09:52	259	School.hs
525	23	e22b0e45be0267f0cb51bbc9	superseded	ruby	scrabble-score	class Scrabble\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  def initialize(word)\n    @word = word || ""\n  end\n\n  def score\n    score_hash.reduce(0) do |score, (letter, count)|\n      score + count * value_of(letter)\n    end\n  end\n\nprivate \n\n  def self.create_letter_values(array)\n    array.each_with_object({}) do |(letters, value), hash|\n      letters.chars.each { |l| hash[l] = value }\n    end\n  end\n\n  VALUES = create_letter_values [["aeioulnrst", 1], \n                                 ["dg",         2], \n                                 ["bcmp",       3], \n                                 ["fhvwy",      4], \n                                 ["k",          5], \n                                 ["jx",         8], \n                                 ["qz",        10]]\n\n  def score_hash\n    @word.chars.each_with_object(Hash.new(0)) do |char, hash|\n      hash[char.downcase] += 1\n    end\n  end\n\n  def value_of(letter)\n    VALUES[letter] || 0\n  end\n\nend	\N	\N	0	2	2014-07-26 04:04:51	2014-07-26 04:04:51	260	scrabble.rb
526	23	84bd929d213a5c936a2902aa	superseded	ruby	scrabble-score	class Scrabble\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  def initialize(word)\n    @word = word || ""\n  end\n\n  def score\n    score_hash.reduce(0) do |sum, (letter, count)|\n      sum + count * value_of(letter)\n    end\n  end\n\nprivate \n\n  def self.create_letter_values(values_array)\n    values_array.each_with_object({}) do |(letters, value), hash|\n      letters.chars.each { |l| hash[l] = value }\n    end\n  end\n\n  VALUES = create_letter_values [["aeioulnrst", 1], \n                                 ["dg",         2], \n                                 ["bcmp",       3], \n                                 ["fhvwy",      4], \n                                 ["k",          5], \n                                 ["jx",         8], \n                                 ["qz",        10]]\n\n  def score_hash\n    @word.chars.each_with_object(Hash.new(0)) do |char, hash|\n      hash[char.downcase] += 1\n    end\n  end\n\n  def value_of(letter)\n    VALUES[letter] || 0\n  end\n\nend	\N	\N	0	3	2014-07-26 07:45:14	2014-07-26 07:45:14	260	scrabble.rb
527	23	425e5cdefdb434d481f794ef	superseded	ruby	scrabble-score	class Scrabble\n\n  def self.create_letter_values(array)\n    array.each_slice(2).each_with_object({}) do |(letters, value), hash|\n      letters.chars.each { |l| hash[l] = value }\n    end\n  end\n\n  VALUES = create_letter_values ["aeioulnrst", 1, "dg", 2, "bcmp", 3, \n                                 "fhvwy", 4, "k", 5, "jx", 8, "qz", 10]\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  def initialize(word)\n    @word = word || ""\n  end\n\n  def score\n    score_hash.reduce(0) do |score, (letter, count)|\n      score + count * VALUES[letter]\n    end\n  end\n\n  def score_hash\n    @word.strip.chars.each_with_object(Hash.new(0)) do |char, hash|\n      hash[char.downcase] += 1\n    end\n  end\n\nend	\N	\N	0	1	2014-07-26 15:30:21	2014-07-26 15:30:21	260	scrabble.rb
577	23	38066181a6e7f9c71dfc737d	pending	clojure	grade-school	(ns school)\n\n(defn add\n  [db name grade]\n  (assoc db grade (conj (db grade []) name)))\n\n(defn grade\n  [db grade]\n  (db grade []))\n\n(defn sorted\n  [db]\n  (into {} (for [[grade names] db]\n             [grade (sort names)])))	\N	\N	0	1	2014-07-26 01:40:27	2014-07-26 01:40:27	285	grade-school.clj
529	23	81c1bae60dff54537ec85039	pending	ruby	scrabble-score	class Scrabble\n\n  def self.score(word)\n    Scrabble.new(word).score\n  end\n\n  def initialize(word)\n    @word = (word || "" ).gsub(/\\W/, '').downcase\n  end\n\n  def score\n    @word.each_char.map { |c| VALUES[c] }.reduce(0, :+)\n  end\n\nprivate \n\n  def self.create_letter_values(letter_values)\n    letter_values.each_with_object(Hash.new(0)) do |(letters, value), hash|\n      letters.each { |l| hash[l] = value }\n    end\n  end\n\n  VALUES = create_letter_values({ %w{ a e i o u l n r s t } =>  1,\n                                  %w{ d g }                 =>  2,\n                                  %w{ b c m p }             =>  3,\n                                  %w{ f h v w y }           =>  4,\n                                  %w{ k }                   =>  5,\n                                  %w{ j x }                 =>  8,\n                                  %w{ q z }                 => 10 })\n\nend	\N	\N	0	5	2014-07-27 08:35:56	2014-07-27 08:35:56	260	scrabble.rb
530	23	e21caa4d22b3f10ec44759e4	pending	javascript	anagram	var normalizeWord = function(text) {\n  return text.toLowerCase().split('').sort().join('');\n}\n\nvar Anagram = function(text) {\n  this.text = text;\n  this.normalizedText = normalizeWord(text);\n}\n\nAnagram.prototype.match = function(words) {\n  result = []\n  for (var i = 0, length = words.length; i < length; i++) {\n    if (this.text == words[i]) {\n      continue;\n    }\n\n    var normalizedWord = normalizeWord(words[i]);\n    if (this.normalizedText == normalizedWord) {\n      result.push(words[i]);\n    }\n  }\n  return result;\n}\n\nmodule.exports = Anagram;	\N	\N	0	1	2014-07-25 23:30:41	2014-07-25 23:30:41	261	anagram.js
531	23	c0d9e4e7218781aae3217798	pending	ruby	nucleotide-count	class DNA\n\n  NUCLEOTIDES = %w(A T C G U)\n  DNA_NUCLEOTIDES = %w(A T C G)\n\n  def initialize(dna)\n    @dna = dna\n    raise ArgumentError unless given_valid_dna?\n  end\n\n  def count(nucleotide)\n    raise ArgumentError unless is_valid_dna_nucleotide?(nucleotide)\n    nucleotide_counts[nucleotide].to_i\n  end\n\n  def nucleotide_counts\n    Hash[*array_of_nucleotides_and_counts]\n  end\n\n  private\n  def array_of_nucleotides_and_counts\n    DNA_NUCLEOTIDES.map do |nucleotide|\n      [nucleotide, @dna.chars.count(nucleotide)]\n    end.flatten\n  end\n\n  private\n  def given_valid_dna?\n    (@dna.chars.to_a-DNA_NUCLEOTIDES).empty?\n  end\n\n  private\n  def is_valid_dna_nucleotide?(nucleotide)\n    NUCLEOTIDES.include?(nucleotide)\n  end\nend	\N	\N	0	1	2014-07-25 16:00:11	2014-07-25 16:00:11	262	nucleotide-count.rb
532	23	52ec495af55ba25292809e93	pending	clojure	point-mutations	(ns dna)\n\n(defn hamming-distance [dna1 dna2]\n    (count (filter #(= true %) (map #(not= %1 %2) dna1 dna2))))	\N	\N	0	1	2014-07-27 13:26:02	2014-07-27 13:26:02	263	dna.clj
533	23	8453cf2b346c276025cf4774	superseded	elixir	bob	defmodule Teenager do\n  def hey(greeting) do\n    "Whatever."\n  end\nend	\N	\N	0	1	2014-07-26 00:35:25	2014-07-26 00:35:25	264	bob.exs
534	23	16fb0413b33964b60793fe2c	superseded	elixir	bob	defmodule Teenager do\n  def hey(greeting) do\n    if String.ends_with? greeting, "?" do\n      "Sure."\n    else\n      if String.strip(greeting) == "" do\n        "Fine. Be that way!"\n      else\n        if greeting == String.upcase(greeting) do\n          "Woah, chill out!"\n        else\n          "Whatever."\n        end\n      end\n    end\n  end\nend	\N	\N	0	2	2014-07-26 07:22:40	2014-07-26 07:22:40	264	bob.exs
535	23	14396540ec4cf34744fb46ef	superseded	elixir	bob	defmodule Teenager do\n  def hey(greeting) do\n    cond do\n      String.ends_with?(greeting, "?") -> "Sure."\n      String.strip(greeting) == "" -> "Fine. Be that way!"\n      String.upcase(greeting) == greeting -> "Woah, chill out!"\n      true -> "Whatever."\n    end\n  end\nend	\N	\N	0	3	2014-07-26 14:40:39	2014-07-26 14:40:39	264	bob.exs
536	23	4094fd10c4cb76d7b591bc14	superseded	elixir	bob	defmodule Teenager do\n  def hey(greeting) do\n    cond do\n      question?(greeting) -> "Sure."\n      silence?(greeting) -> "Fine. Be that way!"\n      yelling?(greeting) -> "Woah, chill out!"\n      true -> "Whatever."\n    end\n  end\n\n  defp question?(greeting) do\n    String.ends_with?(greeting, "?")\n  end\n\n  defp silence?(greeting) do\n    String.strip(greeting) == ""\n  end\n\n  defp yelling?(greeting) do\n    String.upcase(greeting) == greeting\n  end\nend	\N	\N	0	4	2014-07-27 20:59:27	2014-07-27 20:59:27	264	bob.exs
537	23	fd1339641f66197123965221	pending	elixir	bob	defmodule Teenager do\n  def hey(greeting) do\n    cond do\n      question?(greeting) -> "Sure."\n      silence?(greeting) -> "Fine. Be that way!"\n      yelling?(greeting) -> "Woah, chill out!"\n      true -> "Whatever."\n    end\n  end\n\n  defp question?(greeting), do: String.ends_with?(greeting, "?")\n  defp silence?(greeting), do: String.strip(greeting) == ""\n  defp yelling?(greeting), do: String.upcase(greeting) == greeting\nend	\N	\N	0	5	2014-07-28 13:48:25	2014-07-28 13:48:25	264	bob.exs
538	23	95566e7d997ed48bfc585db2	pending	clojure	nucleotide-count	(ns dna)\n\n(def dna-nucleotides #{\\A \\G \\C \\T})\n(def rna-nucleotides #{\\A \\G \\C \\U})\n(def all-nucleotides (clojure.set/union dna-nucleotides rna-nucleotides))\n\n(defn count [nucleotide dna-pattern]\n  (if (contains? all-nucleotides nucleotide)\n    (-> (seq dna-pattern)\n        ((partial filter #(= nucleotide %)))\n        clojure.core/count)\n    (throw (Exception. "invalid nucleotide"))))\n\n(defn nucleotide-counts [dna-pattern]\n  (loop [counts-map {} \n         remaining-nucleotides dna-nucleotides]\n    (if (seq remaining-nucleotides)\n      (recur\n        (assoc\n          counts-map\n          (first remaining-nucleotides)\n          (count (first remaining-nucleotides) dna-pattern))\n        (rest remaining-nucleotides))\n      counts-map)))	\N	\N	0	1	2014-07-27 01:33:17	2014-07-27 01:33:17	265	dna.clj
539	23	761745053281f9efdfb63869	pending	ruby	raindrops	require 'prime'\n\nclass Raindrops\n  \n  def convert(input)\n  raindrops = ""\n  primes = input.prime_division\n  primes.each do |prime, total|\n    if prime == 3 then  \n      raindrops.concat("Pling")\n    elsif prime == 5 then  \n      raindrops.concat("Plang") \n    elsif prime == 7 then \n      raindrops.concat("Plong") \n    end\n   end\n  if raindrops == ""\n    return input.to_s\n  else \n    return raindrops\n  end\n    end\n end	\N	\N	0	1	2014-07-26 11:09:00	2014-07-26 11:09:00	266	raindrops.rb
540	23	2a0413d66bc5aaf6f08d9b62	superseded	haskell	phone-number	module Phone(areaCode, number, prettyPrint) where\nimport Data.Char\nimport qualified Data.List.Split as Dsplit\nbadNumber :: String\nbadNumber=concat $replicate 10 "0"\nnumber :: String->String\nnumber ""=badNumber\nnumber x=let filteredNumber=filter isDigit x; \n             numLength=length filteredNumber in\n  if (numLength>11) || ( numLength<10) || (head filteredNumber/='1' && numLength>10 ) then badNumber\n  else if numLength==11 then tail filteredNumber \n       else filteredNumber             \nareaCode x =take 3 $number x\nprettyPrint x= let a:b:c:[]=Dsplit.splitPlaces [3,3,4] $number x in \n  "("++ a ++  ") " ++ b++"-"++c	\N	\N	0	1	2014-07-26 01:00:22	2014-07-26 01:00:22	267	Phone.hs
554	23	9b385dd66494854d562acb5c	superseded	elixir	word-count	defmodule Words do\n  def count(text) do\n    word_list = as_word_list(text)\n    count_words(word_list, HashDict.new)\n  end\n  \n  defp as_word_list(text) do\n    text\n      |> String.downcase\n      |> String.split(%r{[^a-zA-Z0-9]+}) \n      |> Enum.reject(fn word -> String.length(word) == 0 end)\n  end\n  \n  defp count_words([], dict), do: dict\n  \n  defp count_words([head | tail], dict) do\n    updated_dict = add_word_to_dict(head, dict)\n    count_words(tail, updated_dict)\n  end\n    \n  defp add_word_to_dict(word, dict) do\n    HashDict.update dict, word, 1, &1 + 1\n  end\nend	\N	\N	0	1	2014-07-25 18:52:33	2014-07-25 18:52:33	273	word-count.exs
541	23	84b97511f0eff11e34bbb418	pending	haskell	phone-number	module Phone(areaCode, number, prettyPrint) where\nimport Data.Char\nimport qualified Data.List.Split as Split\n\nbadNumber :: String\nbadNumber = concat $ replicate 10 "0"\n\nnumber :: String->String\nnumber "" = badNumber\nnumber x = let filteredNumber = filter isDigit x; \n               numLength      = length filteredNumber in\n  if (numLength>11) || ( numLength<10) || (head filteredNumber /= '1' && numLength>10 ) \n  then badNumber\n  else if numLength == 11 \n       then tail filteredNumber \n       else filteredNumber             \n            \nareaCode :: String -> String            \nareaCode x = take 3 $ number x\n\nprettyPrint :: String -> String\nprettyPrint x = "("++ a ++  ") " ++ b++"-"++c \n  where a:b:c:[] = Split.splitPlaces [3,3,4] $ number x \n  	\N	\N	0	2	2014-07-26 09:01:49	2014-07-26 09:01:49	267	Phone.hs
542	23	d8b9ce7ddd2bceb4e457376f	pending	ruby	space-age	class SpaceAge\n    attr_reader :seconds\n    def initialize(seconds)\n        @seconds = seconds\n    end\n\n    {\n         :mercury => 7600530.24,\n         :venus   => 19413907.2,\n         :earth   => 31558149.76,\n         :mars    => 59354294.4,\n         :jupiter => 374335776.0,\n         :saturn  => 929596608.0,\n         :uranus  => 2661041808.0,\n         :neptune => 5200418592.0\n\n    }.each do |planet, orbital|\n        define_method("on_#{planet}") do\n          (seconds / orbital).round(2)\n        end\n    end\nend	\N	\N	0	1	2014-07-28 16:24:04	2014-07-28 16:24:04	268	space_age.rb
543	23	efd86a0ba9ba5ae06308bf57	pending	perl5	point-mutations	package DNA;\n\nuse strict;\nuse warnings;\n\nsub new { (bless {}, shift)->_init(shift) }\n\nsub _init {\n    my $self = shift;\n    $self->{strand} = [ split //, shift ];\n    return $self;\n}\n\nsub hamming_distance {\n    my( $self, $input ) = @_;\n\n    my $distance = 0;\n    my @bases = split //, $input;\n    foreach my $base ( @{ $self->{strand} } ) {\n\tmy $other = shift @bases;\n\n\treturn $distance unless $base && $other;\n\t$distance++ unless $base eq $other;\n    }\n\n    return $distance;\n}\n\n1;	\N	\N	0	1	2014-07-27 15:48:50	2014-07-27 15:48:50	269	DNA.pm
544	23	cc7045411d4ff2c3f60f5258	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    #create an array of words, splitting on non-word characters\n    words = @phrase.downcase.split(%r(\\W+))\n    #copy of unique words\n    distinct_words = words.uniq\n    @counts = Hash.new\n    #iterate through distinct words\n    distinct_words.each do |word|\n      #add counts to hash\n      @counts[word] = words.count word\n    end\n    return @counts\n  end\nend	\N	\N	0	1	2014-07-26 07:44:00	2014-07-26 07:44:00	270	word-count.rb
545	23	e168c6254148413d80901233	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    instances = Hash.new { |word, count| word[count] = 0 }\n    @phrase.downcase.scan(/\\w+/).each do |word|\n      instances[word] += 1\n    end\n    instances\n  end\nend	\N	\N	0	6	2014-07-26 07:56:38	2014-07-26 07:56:38	270	word-count.rb
546	23	e59398c057a0fb2d7e0239e5	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    #create an array of words, splitting on non-word characters\n    words = @phrase.downcase.split(%r(\\W+))\n    #copy of unique words\n    distinct_words = words.uniq\n    counts = Hash.new\n    #iterate through distinct words\n    distinct_words.each do |word|\n      #add counts to hash\n      counts[word] = words.count word\n    end\n    return counts\n  end\nend	\N	\N	0	2	2014-07-26 16:35:15	2014-07-26 16:35:15	270	word-count.rb
547	23	aa495c181d9556fa79edd583	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    split_words\n    get_distinct_words\n    count_distinct_words\n    return @counts\n  end\n\n  private\n\n    def split_words\n      @words = @phrase.downcase.split(%r(\\W+))\n    end\n\n    def get_distinct_words\n      @distinct_words = @words.uniq\n    end\n\n    def count_distinct_words\n      @counts = Hash.new\n      @distinct_words.each do |word|\n        @counts[word] = @words.count word\n      end\n    end\nend	\N	\N	0	3	2014-07-26 20:50:08	2014-07-26 20:50:08	270	word-count.rb
548	23	8497386c9418abc4f7bed86c	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    words = split_words\n    distinct_words = get_distinct_words(words)\n    count_distinct_words(distinct_words, words)\n  end\n\n  private\n\n    def split_words\n      @phrase.downcase.split(%r(\\W+))\n    end\n\n    def get_distinct_words(words)\n      words.uniq\n    end\n\n    def count_distinct_words(distinct_words, words)\n      counts = Hash.new\n      distinct_words.each do |word|\n        counts[word] = words.count(word)\n      end\n      counts\n    end\nend	\N	\N	0	4	2014-07-26 22:23:05	2014-07-26 22:23:05	270	word-count.rb
549	23	7785e3869b2535f9c7537e72	superseded	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    words = split_words(@phrase)\n    distinct_words = get_distinct_words(words)\n    count_distinct_words(distinct_words, words)\n  end\n\n  private\n\n    def split_words(phrase)\n      phrase.downcase.split(%r(\\W+))\n    end\n\n    def get_distinct_words(words)\n      words.uniq\n    end\n\n    def count_distinct_words(distinct_words, words)\n      counts = Hash.new\n      distinct_words.each do |word|\n        counts[word] = words.count(word)\n      end\n      counts\n    end\nend	\N	\N	0	5	2014-07-27 13:49:24	2014-07-27 13:49:24	270	word-count.rb
550	23	f32075770a7faede1a7d206a	pending	ruby	word-count	class Phrase\n\n  def initialize(input = '')\n    @phrase = input\n  end\n\n  def word_count\n    instances = Hash.new { default = 0 }\n    @phrase.downcase.scan(/\\w+/).each do |word|\n      instances[word] += 1\n    end\n    instances\n  end\nend	\N	\N	0	7	2014-07-28 04:00:05	2014-07-28 04:00:05	270	word-count.rb
551	23	7ad62a02a60ff57f6ca99042	superseded	elixir	point-mutations	defmodule DNA do\n  def hamming_distance(dnaa, dnab) do\n    pair_up(dnaa, dnab) |> count_mismatches\n  end\n\n  defp compare({na, nb}) do\n    nb && (na != nb)\n  end\n\n  defp pair_up(dnaa, dnab) do\n    Enum.zip(dnaa, dnab)\n  end\n\n  defp count_mismatches(pairs) do\n    Enum.count(pairs, &compare/1)\n  end\nend	\N	\N	0	1	2014-07-26 09:24:02	2014-07-26 09:24:02	271	point-mutations.exs
552	23	47e97517b8ede2c6b9aee009	pending	elixir	point-mutations	defmodule DNA do\n  def hamming_distance(dnaa, dnab) do\n    pair_up(dnaa, dnab) |> count_mismatches\n  end\n\n  defp compare({na, nb}) do\n    na != nb\n  end\n\n  defp pair_up(dnaa, dnab) do\n    List.zip([dnaa, dnab])\n  end\n\n  defp count_mismatches(pairs) do\n    Enum.count(pairs, &compare/1)\n  end\nend	\N	\N	0	2	2014-07-26 19:56:23	2014-07-26 19:56:23	271	point-mutations.exs
553	23	6ea6cdb65304be95eb086a03	pending	go	clock	package clock\n\nimport (\n\t"fmt"\n\t"strconv"\n)\n\ntype clock int\n\nfunc (c clock) String() string {\n\thours := c / 60\n\tminutes := c - hours*60\n\tresult := fmt.Sprintf("%02s:%02s", strconv.Itoa(int(hours)), strconv.Itoa(int(minutes)))\n\treturn result\n}\n\nfunc (c clock) Add(minutes int) clock {\n\treturn newFromMinutes(int(c) + minutes)\n}\n\nfunc newFromMinutes(minutes int) clock {\n\tif minutes >= 1440 {\n\t\tminutes -= 1440\n\t} else if minutes < 0 {\n\t\tminutes = 1440 + minutes\n\t}\n\n\treturn clock(minutes)\n}\n\nfunc New(hours, minutes int) clock {\n\treturn newFromMinutes(hours*60 + minutes)\n}	\N	\N	0	1	2014-07-25 15:02:55	2014-07-25 15:02:55	272	clock.go
589	23	2dc7f38022e2cca79d71d074	superseded	scala	word-count	class Phrase(val s: String) {\r\n  lazy val wordCount: Map[String, Int] =\r\n    s.toLowerCase.split("[^\\\\'&&\\\\W]+").groupBy(x => x).mapValues(_.size)\r\n}	\N	\N	0	1	2014-07-25 18:22:03	2014-07-25 18:22:03	293	Phrase.scala
555	23	cfd8409fa11d2fbe7e1eb399	pending	elixir	word-count	defmodule Words do\n  @doc """\n  Counts the occurences of each word in the given phrase treating\n  each word as case-insensitive.  \n  """\n  def count(string) do\n    words = string |> Text.as_words\n    count_words(words)\n  end\n        \n  defp count_words(words) do\n    Enum.reduce words, HashDict.new, count_word(&1, &2)\n  end\n  \n  defp count_word(word, dict) do\n    HashDict.update dict, word |> String.downcase, 1, &1 + 1\n  end\nend\n\ndefmodule Text do\n  @doc """\n  Converts a given string into a collection of alphanumeric words.\n  """\n  def as_words(string) do\n    string\n      |> String.split(%r{\\W}) \n      |> Enum.reject(is_empty? &1)    \n  end\n  \n  defp is_empty?(string), do: String.length(string) == 0\nend	\N	\N	0	3	2014-07-25 21:58:45	2014-07-25 21:58:45	273	word-count.exs
556	23	00410778f29dfcdc3a3acfdf	superseded	elixir	word-count	defmodule Words do\n  def count(text) do\n    word_list = as_word_list(text)\n    count_words(word_list)\n  end\n  \n  defp as_word_list(text) do\n    text\n      |> String.downcase\n      |> String.split(%r{[^a-zA-Z0-9]+}) \n      |> Enum.reject(fn word -> String.length(word) == 0 end)\n  end\n      \n  defp count_words(words) do\n    Enum.reduce words, HashDict.new, fn word, dict -> update_count(word, dict) end\n  end\n  \n  defp update_count(word, dict) do\n    HashDict.update dict, word, 1, &1 + 1\n  end\nend	\N	\N	0	2	2014-07-26 13:17:10	2014-07-26 13:17:10	273	word-count.exs
557	23	bfecdd48768980dc41dc38ed	superseded	haskell	point-mutations	module DNA (hammingDistance) where\n\nhammingDistance :: String -> String -> Int\nhammingDistance xs ys = length $ filter (uncurry (/=)) $ zip xs ys	\N	\N	0	1	2014-07-25 18:41:06	2014-07-25 18:41:06	274	DNA.hs
558	23	306765402ea6d76c413e11cc	pending	haskell	point-mutations	module DNA (hammingDistance) where\n\nhammingDistance :: String -> String -> Int\nhammingDistance xs ys = length.filter id $ zipWith (/=) xs ys	\N	\N	0	2	2014-07-27 16:31:50	2014-07-27 16:31:50	274	DNA.hs
559	23	d2d1bbb47e24a0397d53eda5	pending	go	hamming	package hamming\n\n// Distance computes the Hamming distance between homologous DNA sequences h1\n// and h2.  If h1 and h2 differ in length they will only be inspected upto the\n// length of the shortest sequence.\nfunc Distance(h1, h2 string) int {\n\tvar dist int\n\tn, m := len(h1), len(h2)\n\tif m < n {\n\t\tn = m\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif h1[i] != h2[i] {\n\t\t\tdist++\n\t\t}\n\t}\n\treturn dist\n}	\N	\N	0	1	2014-07-26 00:04:16	2014-07-26 00:04:16	275	hamming.go
560	23	6ff56cd251b36519c98cc35f	pending	ruby	etl	class ETL\n  def self.transform(old_keys)\n    new_values = {}\n\n    old_keys.each do |key, value|\n      if value.is_a? Array\n        value.each do |v|\n          new_values.merge! v.downcase => key\n        end\n      else\n        new_values.merge! value.downcase => key\n      end\n    end\n    new_values\n  end\n\nend	\N	\N	0	1	2014-07-25 20:32:26	2014-07-25 20:32:26	276	etl.rb
561	23	fedf1d13364c5fb368e1edce	superseded	elixir	meetup	defmodule Meetup do\n  @moduledoc """\n  Calculate meetup dates.\n  """\n\n  @type weekday ::\n      :monday | :tuesday | :wednesday\n    | :thursday | :friday | :saturday | :sunday\n\n  @type schedule :: :first | :second | :third | :fourth | :last | :teenth\n\n  @doc """\n  Calculate a meetup date.\n\n  The schedule is in which week (1..4, last or "teenth") the meetup date should\n  fall.\n  """\n  @spec meetup(pos_integer, pos_integer, weekday, schedule) :: :calendar.date\n  def meetup(year, month, weekday, schedule) do\n    candidates = weekdays(year,month,weekday)\n    case schedule do\n      :first  -> Enum.at candidates, 0\n      :second -> Enum.at candidates, 1\n      :third  -> Enum.at candidates, 2\n      :fourth -> Enum.at candidates, 3\n      :last   -> List.last candidates\n      :teenth -> Enum.find(candidates, fn({_,_,datenum}) ->\n        datenum >= 13 && datenum <= 19\n      end)\n    end\n  end\n\n  @doc """\n  Returns a list of all weekdays for a given month.\n  """\n  @spec weekdays(pos_integer, pos_integer, weekday) :: [:calendar.date]\n  def weekdays(year, month, weekday) do\n    ldom = :calendar.last_day_of_the_month(year,month)\n    Enum.filter_map(\n      1..ldom,\n      fn(day) ->\n        :calendar.day_of_the_week(year,month,day) == weekday_number(weekday)\n      end,\n      fn(day) ->\n        {year,month,day}\n      end\n    )\n    # list comprehension is natural for this but wont fit on one line nicely...\n    # for day <- 1..ldom, :calendar.day_of_the_week(year,month,day) == weekday_number(weekday) do\n    #   {year,month,day}\n    # end\n  end\n\n  #translates a weekday type to the :calendar.daynum expecation that erlang has\n  defp weekday_number(weekday) do\n    case weekday do\n      :monday    -> 1\n      :tuesday   -> 2\n      :wednesday -> 3\n      :thursday  -> 4\n      :friday    -> 5\n      :saturday  -> 6\n      :sunday    -> 7\n    end\n  end\n\nend	\N	\N	0	1	2014-07-26 12:52:01	2014-07-26 12:52:01	277	meetup.exs
562	23	4b88e88339d2ffc77d4de38c	pending	elixir	meetup	defmodule Meetup do\n  @moduledoc """\n  Calculate meetup dates.\n  """\n\n  @type weekday ::\n      :monday | :tuesday | :wednesday\n    | :thursday | :friday | :saturday | :sunday\n\n  @type schedule :: :first | :second | :third | :fourth | :last | :teenth\n\n  @doc """\n  Calculate a meetup date.\n\n  The schedule is in which week (1..4, last or "teenth") the meetup date should\n  fall.\n  """\n  @spec meetup(pos_integer, pos_integer, weekday, schedule) :: :calendar.date\n  def meetup(year, month, weekday, schedule) do\n    candidates = weekdays(year,month,weekday)\n    case schedule do\n      :first  -> Enum.at candidates, 0\n      :second -> Enum.at candidates, 1\n      :third  -> Enum.at candidates, 2\n      :fourth -> Enum.at candidates, 3\n      :last   -> List.last candidates\n      :teenth -> Enum.find(candidates, fn({_,_,datenum}) ->\n        datenum >= 13 && datenum <= 19\n      end)\n    end\n  end\n\n  @doc """\n  Returns a list of all weekdays for a given month.\n  """\n  @spec weekdays(pos_integer, pos_integer, weekday) :: [:calendar.date]\n  def weekdays(year, month, weekday) do\n    ldom = :calendar.last_day_of_the_month(year,month)\n    for day <- 1..ldom,\n        :calendar.day_of_the_week(year,month,day) == weekday_number(weekday),\n        do: {year,month,day}\n  end\n\n  #translates a weekday type to the :calendar.daynum expecation that erlang has\n  defp weekday_number(weekday) do\n    case weekday do\n      :monday    -> 1\n      :tuesday   -> 2\n      :wednesday -> 3\n      :thursday  -> 4\n      :friday    -> 5\n      :saturday  -> 6\n      :sunday    -> 7\n    end\n  end\n\nend	\N	\N	0	2	2014-07-28 07:15:47	2014-07-28 07:15:47	277	meetup.exs
563	23	a6c6f0eec6b7c11368c69071	pending	ruby	circular-buffer	class CircularBuffer\n  class BufferEmptyException < StandardError; end\n  class BufferFullException < StandardError; end\n  def initialize length\n    @length = length\n    @read_head = @write_head = 0\n    @buffer = Array.new @length\n  end\n  \n  def write data\n    fail BufferFullException if full?\n    write! data\n  end\n  \n  def write! data\n    write_to_buffer data\n    self\n  end\n  \n  def read\n    fail BufferEmptyException if empty?\n    @buffer[@read_head].tap do\n      @buffer[@read_head] = nil\n      incr_read_head\n    end\n  end\n  \n  def clear\n    @buffer = Array.new @length\n  end\n  \n  private\n  \n  def write_to_buffer data\n    return if data.nil?\n    incr_read_head if overwriting?\n    @buffer[@write_head] = data\n    incr_write_head\n  end\n  \n  def incr_read_head\n    @read_head = (@read_head+1) % @length\n  end\n  \n  def incr_write_head\n    @write_head = (@write_head+1) % @length\n  end\n  \n  def overwriting?\n    full? && @write_head == @read_head\n  end\n  \n  def empty?\n    @buffer.compact.empty?\n  end\n  \n  def full?\n    @buffer.all?\n  end\nend	\N	\N	0	1	2014-07-26 15:14:58	2014-07-26 15:14:58	278	circular_buffer.rb
564	23	39ab6128ee08b7400b78b8ad	pending	coffeescript	anagram	class Anagram\n  constructor: (@baseWord) ->\n    @baseWord = baseWord.toLowerCase()\n    @characters = @baseWord.split('').sort()\n\n  match: (testWords) ->\n    testWords.map (word) ->\n      word.toLowerCase()\n    .filter @matchWord, @\n\n  matchWord: (word) ->\n    otherWordCharacters = word.split('').sort()\n    return false if otherWordCharacters.length != @characters.length\n    return false if word == @baseWord\n    @characters.every (character, index) ->\n      character == otherWordCharacters[index]\n\n module.exports = Anagram	\N	\N	0	1	2014-07-25 16:43:33	2014-07-25 16:43:33	279	anagram.coffee
565	23	87fa315b1153dbad9aaf46e4	superseded	ruby	bob	class Bob\n  SILENCE = /^\\s*$/\n  YELL = /^[^a-z]+$/\n  QUESTION = /^.*\\?$/\n\n  def hey(message = nil)\n    case message\n    when SILENCE\n      'Fine. Be that way!'\n    when YELL\n      'Woah, chill out!'\n    when QUESTION\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\nend	\N	\N	0	1	2014-07-25 21:20:05	2014-07-25 21:20:05	280	bob.rb
566	23	c6b0bc7332779428d3d88ce1	superseded	ruby	bob	class Bob\n\n  def hey(text = nil)\n    message = Message.new text\n    case message\n    when ~:empty?\n      'Fine. Be that way!'\n    when ~:yelling?\n      'Woah, chill out!'\n    when ~:asking?\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def empty?\n      @text.nil? || @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend\n\nclass Symbol\n  alias ~ to_proc\nend	\N	\N	0	4	2014-07-25 23:02:32	2014-07-25 23:02:32	280	bob.rb
567	23	62cc3aac4ff55d3b3a10d225	superseded	ruby	bob	class Bob\n\n  def hey(text = nil)\n    message = Message.new text\n    case message\n    when &:empty?\n      'Fine. Be that way!'\n    when &:yelling?\n      'Woah, chill out!'\n    when &:asking?\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def empty?\n      @text.nil? || @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend\n\nclass Symbol\n  alias ~ to_proc\nend	\N	\N	0	3	2014-07-26 10:30:42	2014-07-26 10:30:42	280	bob.rb
568	23	52cfb2f89639a70df575fd3c	superseded	ruby	bob	class Bob\n\n  def hey(text = nil)\n    message = Message.new text\n    case message\n    when ~:empty?\n      'Fine. Be that way!'\n    when ~:yelling?\n      'Woah, chill out!'\n    when ~:asking?\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def empty?\n      @text.nil? || @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend\n\nclass Symbol\n  alias ~ to_proc\nend	\N	\N	0	2	2014-07-26 19:45:47	2014-07-26 19:45:47	280	bob.rb
569	23	d6787480affd0a25a655f95d	superseded	ruby	bob	class Bob\n\n  def hey(text)\n    message = Message.new text\n    case message\n    when :blank?.to_proc\n      'Fine. Be that way!'\n    when :yelling?.to_proc\n      'Woah, chill out!'\n    when :asking?.to_proc\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def blank?\n      @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend	\N	\N	0	6	2014-07-27 05:30:17	2014-07-27 05:30:17	280	bob.rb
570	23	177c2a9c9ad901495f320760	pending	ruby	bob	class Bob\n\n  def hey(text)\n    message = Message.new text\n    case message\n    when ~:none?\n      'Fine. Be that way!'\n    when ~:yelling?\n      'Woah, chill out!'\n    when ~:asking?\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def none?\n      @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend\n\nclass Symbol\n  alias ~ to_proc\nend	\N	\N	0	8	2014-07-27 08:47:47	2014-07-27 08:47:47	280	bob.rb
571	23	6cde4fd4b3c969265c1e679f	superseded	ruby	bob	class Bob\n\n  def hey(text)\n    message = Message.new text\n    case message\n    when ~:blank?\n      'Fine. Be that way!'\n    when ~:yelling?\n      'Woah, chill out!'\n    when ~:asking?\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def blank?\n      @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend\n\nclass Symbol\n  alias ~ to_proc\nend	\N	\N	0	7	2014-07-27 11:47:52	2014-07-27 11:47:52	280	bob.rb
572	23	0bb1128cc4d97294e5b59d25	superseded	ruby	bob	class Bob\n\n  def hey(text = nil)\n    message = Message.new text\n    case message\n    when :blank?.to_proc\n      'Fine. Be that way!'\n    when :yelling?.to_proc\n      'Woah, chill out!'\n    when :asking?.to_proc\n      'Sure.'\n    else\n      'Whatever.'\n    end\n  end\n\n  class Message\n\n    def initialize(text)\n      @text = text\n    end\n\n    def blank?\n      @text.nil? || @text.strip.empty?\n    end\n\n    def yelling?\n      @text.eql?(@text.upcase)\n    end\n\n    def asking?\n      @text.end_with?("?")\n    end\n  end\nend	\N	\N	0	5	2014-07-27 12:56:47	2014-07-27 12:56:47	280	bob.rb
573	23	88fd5b1d4847296a7ca20120	pending	go	anagram	package anagram\n\nimport (\n\t// "fmt"\n\t"strings"\n)\n\nfunc Detect(subject string, candidates []string) []string {\n\tresult := make([]string, 0, 20)\n\tfor i := range candidates {\n\t\tactual := strings.ToUpper(candidates[i])\n\t\tif len(actual) != len(subject) || strings.ToUpper(actual) == strings.ToUpper(subject) {\n\t\t\tcontinue\n\t\t}\n\t\tfor j := range subject {\n\t\t\tactual = strings.Replace(actual, strings.ToUpper(string(subject[j])), "", 1)\n\t\t\tif actual == "" {\n\t\t\t\tresult = append(result, strings.ToLower(candidates[i]))\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}	\N	\N	0	1	2014-07-28 01:57:09	2014-07-28 01:57:09	281	anagram.go
574	23	f96cba59ac29087bae77e6f2	pending	python	bob	#!/usr/bin/python\n\nclass Bob(object):\n  def __init__(self):\n    pass\n\n  def hey(self, msg = None):\n    msg = msg.strip()\n\n    if not msg:\n      return 'Fine. Be that way!'\n    elif msg.isupper():\n      return 'Woah, chill out!'\n    elif msg.endswith('?'):\n      return 'Sure.'\n    else:\n      return 'Whatever.'\n\n# Questions:\n#Bob answers 'Sure.' if you ask him a question.\n# ends with ?\n\n#He answers 'Woah, chill out!' if you yell at him.\n# YELL = all letters are caps\n\n#He says 'Fine. Be that way!' if you address him without actually saying anything.\n# empty string or ' '\n\n#He answers 'Whatever.' to anything else.	\N	\N	0	1	2014-07-26 00:30:14	2014-07-26 00:30:14	282	bob.py
575	23	870f24f57018010d212fb3c9	pending	perl5	pascals-triangle	package Triangle;\n\nuse strict;\n\nuse Memoize;\n\nmemoize('row');\n\nsub triangle { \n    return [ map { row($_) } 0..shift ];\n}\n\nsub row { \n    my $n = shift;\n    return unless $n >= 0;\n\n    my @triangle = split ' ', row($n-1);\n\n    return join ' ', 1, map { $triangle[$_] + $triangle[$_+1] } 0..$#triangle;\n}\n\nsub is_triangle { \n    my $i = 0;\n    my @t = @{ $_[0] };\n    while ( my $x = shift @t ) {\n        return 0 unless row($i++) eq $x;\n    }\n    return 1;\n}\n\n\n1;	\N	\N	0	1	2014-07-25 23:29:35	2014-07-25 23:29:35	283	Triangle.pm
590	23	efb59bffa2b7052ac40e8e87	superseded	scala	word-count	class Phrase(val s: String) {\r\n  lazy val wordCount: Map[String, Int] =\r\n    s.toLowerCase.split("[^\\\\w']+").groupBy(x => x).mapValues(_.size)\r\n}	\N	\N	0	2	2014-07-26 03:02:33	2014-07-26 03:02:33	293	Phrase.scala
578	23	1a46873732106faf283b4e3c	pending	perl5	leap	package Leap;\n\nuse warnings;\nuse strict;\nuse 5.010;\n\n=head1 NAME\n\nLeap\n\n=head1 VERSION\n\n1.0\n\n=cut\n\nour $VERSION = '1.0';\n\n=head1 SYNOPSIS\n\nsay is_leap($year) ? 'true' : 'false';\n\n=head1 DESCRIPTION\n\n\nWrite a program that will take a year and report if it is a leap year.\n\nThe tricky thing here is that a leap year occurs:\n\n=over 4\n\n=item on every year that is evenly divisible by 4\n\n=item  except every year that is evenly divisible by 100\n\n=item  unless the year is also evenly divisible by 400\n\n=back\n      \nFor example, 1997 is not a leap year, but 1996 is. 1900 is not a leap year, \nbut 2000 is.\n      \n=cut \n\n=head1 SUBROUTINES/METHODS\n\n=head2 is_leap($year);\n\nReturns 1 if C<$year> is a leap year or 0 if it is not.\n\n=cut\n\nsub is_leap {\n    my ($year) = @_;\n\n    return ( ( $year % 4 == 0 && $year % 100 != 0 ) || $year % 400 == 0 )\n      ? 1\n      : 0;\n}\n\n=head1 AUTHOR\n\nJaldhar H. Vyas, C<< <jaldhar at braincells.com> >>\n\n=head1 LICENSE AND COPYRIGHT\n\nCopyright (C) 2014, Jaldhar H. Vyas.  All rights reserved.\n\n=cut\n\n1;	\N	\N	0	1	2014-07-28 07:41:13	2014-07-28 07:41:13	286	Leap.pm
579	23	0e31d43ee57a4ed446c3e14d	superseded	go	etl	package etl\n\nimport "strings"\n\nfunc Transform(scores map[int][]string) map[string]int {\n\toutput := make(map[string]int)\n\n\tfor score, letters := range scores {\n\t\tfor _, letter := range letters {\n\t\t\toutput[strings.ToLower(letter)] = score\n\t\t}\n\t}\n\n\treturn output\n}	\N	\N	0	1	2014-07-25 15:57:02	2014-07-25 15:57:02	287	etl.go
580	23	94451cbde95a24d2ce9e21c7	superseded	go	etl	/*\nPackage etl implements a Transform of an Extract-Transform-Load\n\nIt converts scrabble scores stored in a legacy format to a new format.\n\nTransform takes input in the form:\n\t- 1 point: "A", "E", "I", "O", "U", "L", "N", "R", "S", "T",\n\t- 2 points: "D", "G",\n\t- 3 points: "B", "C", "M", "P",\n\t- 4 points: "F", "H", "V", "W", "Y",\n\t- 5 points: "K",\n\t- 8 points: "J", "X",\n\t- 10 points: "Q", "Z",\n\nAnd converts them to the form:\n\t- "a" is worth 1 point.\n\t- "b" is worth 3 points.\n\t- "c" is worth 3 points.\n\t- "d" is worth 2 points.\n\t- Etc.\n*/\npackage etl\n\nimport "strings"\n\n/*\nTransform take input in the following format:\n\t{\n\t\t1: {"A", "E"},\n\t\t2: {"D", "G"},\n\t}\n\nAnd converts them to the following format:\n\t{\n\t\t"a": 1,\n\t\t"e": 1,\n\t\t"d": 2,\n\t\t"g": 2,\n\t}\n*/\nfunc Transform(input map[int][]string) map[string]int {\n\toutput := make(map[string]int)\n\n\tfor score, letters := range input {\n\t\tfor _, letter := range letters {\n\t\t\toutput[strings.ToLower(letter)] = score\n\t\t}\n\t}\n\n\treturn output\n}	\N	\N	0	2	2014-07-26 04:56:31	2014-07-26 04:56:31	287	etl.go
581	23	407fdf4540323c54d2074ca7	pending	go	etl	/*\nPackage etl implements an Extract-Transform-Load on scrabble letter scores.\n\nIt converts letter scores stored in a legacy format to a new format.\n\nThe legacy scoring system is of the form:\n\t- 1 point: "A", "E", "I", "O", "U", "L", "N", "R", "S", "T",\n\t- 2 points: "D", "G",\n\t- 3 points: "B", "C", "M", "P",\n\t- 4 points: "F", "H", "V", "W", "Y",\n\t- 5 points: "K",\n\t- 8 points: "J", "X",\n\t- 10 points: "Q", "Z",\n\nThe new scoring system is of the form:\n\t- "a" is worth 1 point.\n\t- "b" is worth 3 points.\n\t- "c" is worth 3 points.\n\t- "d" is worth 2 points.\n\t- Etc.\n*/\npackage etl\n\nimport "strings"\n\n// Transform converts data in a legacy scrabble scoring format\n// and converts it to a new format.\nfunc Transform(input map[int][]string) map[string]int {\n\toutput := make(map[string]int)\n\n\tfor score, letters := range input {\n\t\tfor _, letter := range letters {\n\t\t\toutput[strings.ToLower(letter)] = score\n\t\t}\n\t}\n\n\treturn output\n}	\N	\N	0	3	2014-07-26 08:27:32	2014-07-26 08:27:32	287	etl.go
582	23	611e8df6feb339647dd085a9	pending	javascript	bob	//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler "advanced" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.5.2';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, length = obj.length; i < length; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results.push(iterator.call(context, value, index, list));\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? void 0 : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed > result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array, using the modern version of the \n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // Sample **n** random values from an array.\n  // If **n** is not specified, returns a single random element from the array.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (arguments.length < 2 || guard) {\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate "group by" operations.\n  var group = function(behavior) {\n    return function(obj, value, context) {\n      var result = {};\n      var iterator = value == null ? _.identity : lookupIterator(value);\n      each(obj, function(value, index) {\n        var key = iterator.call(context, value, index, obj);\n        behavior(result, key, value);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, key, value) {\n    (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, key, value) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, key) {\n    _.has(result, key) ? result[key]++ : result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n == null) || guard ? array[0] : slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n == null) || guard) {\n      return array[array.length - 1];\n    } else {\n      return slice.call(array, Math.max(array.length - n, 0));\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    each(input, function(value) {\n      if (_.isArray(value) || _.isArguments(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(_.flatten(arguments, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var length = _.max(_.pluck(arguments, "length").concat(0));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, '' + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(length);\n\n    while(idx < length) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError;\n    args = slice.call(arguments, 2);\n    return bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor;\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) throw new Error("bindAll must be passed function names");\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n    var later = function() {\n      previous = options.leading === false ? 0 : new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = new Date();\n      var later = function() {\n        var last = (new Date()) - timestamp;\n        if (last < wait) {\n          timeout = setTimeout(later, wait - last);\n        } else {\n          timeout = null;\n          if (!immediate) result = func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = new Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = new Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to "tap into" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is\n        // equivalent to `new String("5")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                             _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An "empty" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable "Arguments" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(Math.max(0, n));\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '"': '&quot;',\n      "'": '&#x27;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    "'":      "'",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = "__p+='";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += "'+\\n((__t=(" + escape + "))==null?'':_.escape(__t))+\\n'";\n      }\n      if (interpolate) {\n        source += "'+\\n((__t=(" + interpolate + "))==null?'':__t)+\\n'";\n      }\n      if (evaluate) {\n        source += "';\\n" + evaluate + "\\n__p+='";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += "';\\n";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = "var __t,__p='',__j=Array.prototype.join," +\n      "print=function(){__p+=__j.call(arguments,'');};\\n" +\n      source + "return __p;\\n";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a "chain" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);	\N	\N	0	1	2014-07-26 22:05:00	2014-07-26 22:05:00	288	underscore.js
583	23	bcb8c57e1c18e1141f12bc5a	pending	ruby	hamming	class Hamming\n  def self.compute(sq1, sq2)\n    sq1 = sq1.split(//)\n    sq2 = sq2.split(//)\n    sqllength = sq1.length\n    sqllength = sq2.length if sq2.length < sq1.length\n    i = 0\n    hammcounter = 0\n\n    while i < sqllength\n      if sq1[i] != sq2[i]\n        hammcounter += 1\n      end\n      i += 1\n    end\n    hammcounter\n  end\nend	\N	\N	0	1	2014-07-27 19:46:26	2014-07-27 19:46:26	289	hamming.rb
584	23	36fe668c536379f148e62e0b	pending	clojure	roman-numerals	(ns roman (:require [clojure.string :as string]))\n\n(def symbols ["I", "V", "X", "L", "C", "D", "M"])\n\n(defn expand-I [x]\n  (apply str (repeat x "I")))\n\n(defn upgrade-marked [s]\n  (cond\n   (re-find #"XXXX([VI])X"\n            s)\n   (upgrade-marked (string/replace s\n                                   #"XXXX(.)X"\n                                   "$1L"))\n\n   (re-find #"CCCC([IVXL])C"\n            s)\n   (upgrade-marked (string/replace s\n                                   #"CCCC([IVX])C"\n                                   "$1D")),\n\n   (re-find #"V(I)V" s)\n   (upgrade-marked (string/replace s #"VIV" "IX"))\n\n   (re-find #"L([IVX])L" s)\n   (upgrade-marked (string/replace s #"L([IVXCDM])L" "$1C")),\n\n   (re-find #"D([IVXLC])D" s)\n   (upgrade-marked (string/replace s\n                                   #"D([IVXLC])D"\n                                   "$1M"))\n   :else s))\n\n(defn prefix-all [s]\n  (-> s\n      (string/replace #"IIII" "IV")\n      (string/replace #"XXXX" "XL")\n      (string/replace #"CCCC" "CD")\n      upgrade-marked))\n\n(defn collapse [s]\n  (-> s\n      (string/replace #"IIIII" "V")\n      (string/replace #"VV" "X")\n      (string/replace #"XXXXX" "L")\n      (string/replace #"LL" "C")\n      (string/replace #"CCCCC" "D")\n      (string/replace #"DD" "M")))\n\n(defn numerals [x]\n  (-> x\n      expand-I\n      collapse\n      prefix-all))	\N	\N	0	1	2014-07-26 19:06:06	2014-07-26 19:06:06	290	roman.clj
585	23	42be8efff2e986f7931ab6f1	pending	ruby	leap	class Year\n  def self.leap?(year)\n    fourth_century?(year) || fourth_year?(year) && century?(year)\n  end\n\nprivate\n\n  def self.fourth_year?(year)\n    year_divisible_by?(year, 4)\n  end\n\n  def self.century?(year)\n    !year_divisible_by?(year, 100)\n  end\n\n  def self.fourth_century?(year)\n    year_divisible_by?(year, 400)\n  end\n\n  def self.year_divisible_by?(year, demoninator)\n    year % demoninator == 0\n  end\nend	\N	\N	0	3	2014-07-25 21:52:19	2014-07-25 21:52:19	291	year.rb
586	23	a2ac1e59381cf85f83111c3a	superseded	ruby	leap	class Year\n  def self.leap?(year)\n    @year = year\n\n    fourth_century? || leap_year? && century?\n  end\n\nprivate\n\n  def self.leap_year?\n    @year % 4 == 0\n  end\n\n  def self.century?\n    @year % 100 != 0\n  end\n\n  def self.fourth_century?\n    @year % 400 == 0\n  end\nend	\N	\N	0	1	2014-07-27 05:33:48	2014-07-27 05:33:48	291	year.rb
587	23	2752d353624c64979484782f	superseded	ruby	leap	class Year\n  def self.leap?(year)\n    fourth_century?(year) || fourth_year?(year) && century?(year)\n  end\n\nprivate\n\n  def self.fourth_year?(year)\n    year % 4 == 0\n  end\n\n  def self.century?(year)\n    year % 100 != 0\n  end\n\n  def self.fourth_century?(year)\n    year % 400 == 0\n  end\nend	\N	\N	0	2	2014-07-27 14:03:53	2014-07-27 14:03:53	291	year.rb
588	23	2ca5e8d08657baccd7c80846	pending	python	scrabble-score	class Word(object):\n    _scores = [ (" \\t\\n"     , 0),\n                ("AEIOULNRST", 1),\n                ("DG"        , 2),\n                ("BCMP"      , 3),\n                ("FHVWY"     , 4),\n                ("K"         , 5),\n                ("JX"        , 8),\n                ("QZ"        , 10)]\n    scores = { l: n for ll, n in _scores for l in ll }\n\n    def __init__(self, s):\n        self.word = s\n\n    def score(self):\n        return sum(self.scores[c.upper()] for c in self.word)	\N	\N	0	1	2014-07-28 14:55:14	2014-07-28 14:55:14	292	scrabble.py
591	23	3d61df00a6bb76ef0a1672c9	pending	scala	word-count	class Phrase(s: String) {\r\n\r\n  val candidates = (('0' to '9') ++ ('a' to 'z') :+ ''').toSet\r\n  @annotation.tailrec\r\n  private def split(s: String, acc: List[String] = Nil): List[String] = {\r\n    if (s == "") acc.reverse\r\n    else {\r\n      val i = s indexWhere (!candidates.contains(_))\r\n      val (h, t) = if (i == -1) (s, "") else (s take i, s drop i + 1)\r\n      split(t, if (h.isEmpty) acc else h :: acc)\r\n    }\r\n  }\r\n\r\n  lazy val wordCount: Map[String, Int] =\r\n    split(s.toLowerCase) groupBy identity mapValues (_.size)\r\n}	\N	\N	0	3	2014-07-26 08:36:23	2014-07-26 08:36:23	293	Phrase.scala
592	23	296a9ee186695e2828ba7bb3	pending	ruby	gigasecond	require 'date'\nrequire 'time'\n\nclass Gigasecond\n  attr_accessor :date\n\n  def initialize(date)\n    seconds = date_to_seconds(date) + giga\n    @date = seconds_to_date(seconds)\n  end\n\n  private\n\n  def date_to_seconds(date)\n    date.to_time.to_i\n  end\n\n  def seconds_to_date(seconds)\n    Time.at(seconds).to_date\n  end\n\n  def giga\n    10**9\n  end\n\nend	\N	\N	0	1	2014-07-27 14:30:21	2014-07-27 14:30:21	294	gigasecond.rb
593	23	a8f561a5986a906a748e34eb	pending	ruby	grade-school	class School\n  attr_accessor :db\n\n  def initialize\n    @db = Hash.new {|h,k| h[k] = []}\n  end\n\n  def add(name, grade)\n    db[grade] << name\n  end\n\n  def grade(grade)\n    db[grade]\n  end\n\n  def sort\n    Hash[db.sort].each{ |_,k| k.sort!}\n  end\n\nend	\N	\N	0	1	2014-07-26 01:31:08	2014-07-26 01:31:08	295	grade-school.rb
594	41	1729251df105b6812f517f9a	pending	haskell	space-age	module SpaceAge where\n\ndata Planet = Mercury | Venus | Earth | Mars | Jupiter | Saturn | Uranus | Neptune\n\nageOn :: Planet -> Integer -> Float\nageOn pl sec = earthYear sec / orbitalPeriod pl\n    where earthYear sec = (fromIntegral sec) / 31557600\n          orbitalPeriod Mercury = 0.2408467\n          orbitalPeriod Venus   = 0.61519726\n          orbitalPeriod Earth   = 1.0\n          orbitalPeriod Mars    = 1.8808158\n          orbitalPeriod Jupiter = 11.862615\n          orbitalPeriod Saturn  = 29.447498\n          orbitalPeriod Uranus  = 84.016846\n          orbitalPeriod Neptune = 164.79132\n 	\N	\N	0	1	2014-05-09 16:15:46	2014-05-09 16:15:46	296	space-age.hs
595	41	60ad256f2b9acbc913ea0102	superseded	javascript	raindrops	// I'll do this later.	\N	\N	0	1	2014-06-20 07:03:13	2014-06-20 07:03:13	297	raindrops.js
596	41	f0cd75a81ec3f00f58d3f045	pending	javascript	raindrops	var Raindrops = function () {};\n\nRaindrops.prototype.convert = function(num) {\n\tvar result = '';\n\tif (num % 3 === 0) {\n\t\tresult += "Pling";\n\t}\n\tif (num % 5 === 0) {\n\t\tresult += "Plang";\n\t}\n\tif (num % 7 === 0) {\n\t\tresult += "Plong";\n\t}\n\tif (!result) {\n\t\tresult += num;\n\t}\n\treturn result;\n};	\N	\N	0	2	2014-06-26 11:50:06	2014-06-26 11:50:06	297	raindrops.js
597	41	12540b9585c111e7a44b294c	pending	ruby	hamming	class Hamming \n\n      def Hamming.compute strandA, strandB \n        hamming_distance = 0\n        end_point = strandA.length\n        length_difference = strandA.length - strandB.length\n\n        if length_difference > 0\n            end_point = strandB.length\n        end\n\n        end_point -= 1;\n\n        for i in ( 0..end_point )\n               if strandA[i] != strandB[i]\n                    hamming_distance += 1\n               end\n        end\n\n        return hamming_distance\n\n    end\n\nend	\N	\N	0	1	2014-03-25 23:10:46	2014-03-25 23:10:46	298	hamming.rb
598	41	321835363589c998759709c3	pending	clojure	bob	(ns bob\n  (require [clojure.string :as str]))\n\n(defn- silence? [msg]\n  (str/blank? msg))\n\n(defn- shouting? [msg]\n  (= msg (str/upper-case msg)))\n\n(defn- question? [msg]\n  (= \\? (last msg)))\n\n(defn response-for [msg]\n  (cond\n    (silence? msg) "Fine. Be that way!"\n    (shouting? msg) "Woah, chill out!"\n    (question? msg) "Sure."\n    :else "Whatever."))	\N	\N	0	1	2014-03-20 19:45:15	2014-03-20 19:45:15	299	bob.clj
599	41	66b155d208a33fd1f167ddfc	pending	ruby	palindrome-products	class Palindromes\n  def initialize(min_factor: 1, max_factor: 100)\n    @min_factor, @max_factor = min_factor, max_factor\n  end\n\n  def generate\n    @palindromes = pairs_by_product.lazy.\n      map { |product, pairs| Product.new(product, pairs) }.\n      select(&:palindrome?)\n  end\n\n  def smallest\n    palindromes.min\n  end\n\n  def largest\n    palindromes.max\n  end\n\n  private\n\n  attr_reader :min_factor, :max_factor, :palindromes\n\n  def pairs_by_product\n    factors.product(factors).\n      uniq { |pair| pair.sort }.\n      group_by { |f1, f2| f1 * f2 }\n  end\n\n  def factors\n    (min_factor..max_factor).to_a\n  end\nend\n\n\nclass Product\n  include Comparable\n\n  attr_reader :value, :factors\n\n  def initialize(value, factors)\n    @value, @factors = value, factors\n  end\n\n  def palindrome?\n    value.to_s.reverse == value.to_s\n  end\n\n  def <=>(other)\n    value <=> other.value\n  end\nend	\N	\N	0	2	2014-04-19 01:24:50	2014-04-19 01:24:50	300	palindromes.rb
600	41	e2d6d0821b7a5c1bc008a30c	superseded	ruby	palindrome-products	class Palindromes\n  def initialize(min_factor: 1, max_factor: 100)\n    @min_factor, @max_factor = min_factor, max_factor\n  end\n\n  def generate\n    factors = (min_factor..max_factor).to_a\n    product_pairs = factors.product(factors).\n      uniq { |a| a.sort }.\n      group_by { |x, y| x * y }\n\n    @palindromes = product_pairs.each_with_object([]) do |(product, pairs), a|\n      a << Palindrome.new(product, pairs) if product.to_s.reverse == product.to_s\n    end\n  end\n\n  def smallest\n    palindromes.min\n  end\n\n  def largest\n    palindromes.max\n  end\n\n  private\n\n  attr_reader :min_factor, :max_factor, :palindromes\nend\n\n\nclass Palindrome\n  include Comparable\n\n  attr_reader :value, :factors\n\n  def initialize(value, factors)\n    @value, @factors = value, factors\n  end\n\n  def <=>(other)\n    value <=> other.value\n  end\nend	\N	\N	0	1	2014-04-24 00:11:11	2014-04-24 00:11:11	300	palindrome-products.rb
601	41	85be9d64b4fdbcdc279b9c44	superseded	go	clock	package clock\n\nimport (\n\t"fmt"\n)\n\nconst (\n\tMINUTES_IN_HOUR = 60\n\tHOURS_IN_DAY    = 24\n\tONE_DAY         = MINUTES_IN_HOUR * HOURS_IN_DAY\n)\n\n// Clock represents time as a the number of minutes since midnight\ntype Clock struct {\n\ttimeInMinutes int\n}\n\n// display clock in 24hr format\nfunc (c Clock) String() string {\n\tminutes := c.timeInMinutes % MINUTES_IN_HOUR\n\thours := (c.timeInMinutes - minutes) / MINUTES_IN_HOUR\n\thours = hours % HOURS_IN_DAY\n\treturn fmt.Sprintf("%02d:%02d", hours, minutes)\n}\n\n// adds the specified minutes to the clock; may be positive or negative\nfunc (c Clock) Add(minutes int) Clock {\n\ttimeInMinutes := c.timeInMinutes + minutes\n\tif timeInMinutes < 0 {\n\t\ttimeInMinutes = timeInMinutes + ONE_DAY\n\t}\n\n\treturn Clock{\n\t\ttimeInMinutes: timeInMinutes,\n\t}\n}\n\n// instantiate a new clock with a default time\nfunc New(hours, minutes int) Clock {\n\tc := Clock{}\n\treturn c.Add(hours*MINUTES_IN_HOUR + minutes)\n}	\N	\N	0	1	2014-04-19 21:47:22	2014-04-19 21:47:22	301	clock.go
610	26	d1630acae4ab7ed808e795a6	pending	ruby	etl	class ETL\n\n  def self.transform(old)\n    data = {}\n    old.each do |key, value|\n      value.each do |value|\n        data[value.downcase] = key\n      end\n    end\n    data\n  end\nend	\N	\N	0	2	2014-07-01 01:57:09	2014-07-01 01:57:09	303	etl.rb
611	26	5ded095f04aaa4dbb02af46f	superseded	ruby	raindrops	class Raindrops\n  def self.convert(num)\n    if num% 3==0 && num%5==0 && num %7==0\n      "PlingPlangPlong"\n    elsif num% 3==0 && num%5==0\n      "PlingPlang"\n    elsif num% 3==0 && num%7==0\n      "PlingPlong"\n    elsif num%5==0 && num%7==0\n      "PlangPlong"\n    elsif num%3==0\n      "Pling"\n    elsif num%5==0\n      "Plang"\n    elsif num%7==0\n      "Plong"\n    else\n      num.to_s\n    end\n  end\nend	\N	\N	0	1	2014-06-03 16:07:43	2014-06-03 16:07:43	304	raindrops.rb
602	41	5978d55f418087f0656fef2e	pending	go	clock	package clock\n\nimport (\n\t"fmt"\n)\n\nconst (\n\tMINUTES_IN_HOUR = 60\n\tHOURS_IN_DAY    = 24\n\tONE_DAY         = MINUTES_IN_HOUR * HOURS_IN_DAY\n)\n\n// Clock represents time as a the number of minutes since midnight\ntype Clock struct {\n\ttimeInMinutes int\n}\n\n// display clock in 24hr format\nfunc (c Clock) String() string {\n\tminutes := c.timeInMinutes % MINUTES_IN_HOUR\n\thours := (c.timeInMinutes - minutes) / MINUTES_IN_HOUR\n\thours = hours % HOURS_IN_DAY\n\treturn fmt.Sprintf("%02d:%02d", hours, minutes)\n}\n\n// adds the specified minutes to the clock; may be positive or negative\nfunc (c Clock) Add(minutes int) Clock {\n\ttimeInMinutes := c.timeInMinutes + minutes\n\tfor timeInMinutes < 0 {\n\t\ttimeInMinutes = timeInMinutes + ONE_DAY\n\t}\n\n\treturn Clock{\n\t\ttimeInMinutes: timeInMinutes,\n\t}\n}\n\n// instantiate a new clock with a default time\nfunc New(hours, minutes int) Clock {\n\tc := Clock{}\n\treturn c.Add(hours*MINUTES_IN_HOUR + minutes)\n}	\N	\N	0	2	2014-05-27 01:45:44	2014-05-27 01:45:44	301	clock.go
603	26	d4ad6e65fa856db770ee24a0	superseded	ruby	bob	class Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_reader :response\n\n  def initialize(said)\n    @said = said\n    @type = ConversationType.new @said\n    @response = Response.say @type\n  end\n\nend\n\nclass ConversationType\n\n  def initialize(said)\n    @said = said\n  end\n\n  def to_sym\n    which.to_sym\n  end\n\n    private\n\n    def which\n      return 'whispering' if is_whispering?\n      return 'shouting' if is_shouting?\n      return 'question' if is_question?\n      'bored'\n    end\n\n    def is_whispering?\n      true if @said.nil? or @said.strip.empty?\n    end\n\n    def is_shouting?\n      true if @said.upcase == @said\n    end\n\n    def is_question?\n      true if @said[-1] == '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	2	2014-04-16 23:48:07	2014-04-16 23:48:07	302	bob.rb
604	26	4e8814c38d619fc36e8c889a	superseded	ruby	bob	class Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_reader :response\n\n  def initialize(said)\n    @type = ConversationType.new said\n    @response = Response.say @type\n  end\n\nend\n\nclass ConversationType\n\n  def initialize(said)\n    @said = said\n  end\n\n  def to_sym\n    which.to_sym\n  end\n\n    private\n\n    def which\n      return 'whispering' if is_whispering?\n      return 'shouting' if is_shouting?\n      return 'question' if is_question?\n      'bored'\n    end\n\n    def is_whispering?\n      true if @said.nil? or @said.strip.empty?\n    end\n\n    def is_shouting?\n      true if @said.upcase == @said\n    end\n\n    def is_question?\n      true if @said[-1] == '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	3	2014-04-27 23:28:33	2014-04-27 23:28:33	302	bob.rb
605	26	e8e7ab7178b93865433a69f6	superseded	ruby	bob	class Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_reader :response\n\n  def initialize(said)\n    @type = ConversationType.new said\n    @response = Response.say @type\n  end\n\nend\n\nclass ConversationType\n\n  def initialize(said)\n    @said = said\n  end\n\n  def to_sym\n    which\n  end\n\n    private\n\n    def which\n      return :whispering if is_whispering?\n      return :shouting if is_shouting?\n      return :question if is_question?\n      :bored\n    end\n\n    def is_whispering?\n      @said.to_s.strip.empty?\n    end\n\n    def is_shouting?\n      @said.upcase == @said\n    end\n\n    def is_question?\n      @said.end_with? '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	5	2014-05-26 17:58:48	2014-05-26 17:58:48	302	bob.rb
606	26	bc4a88b2a5f09ef86546707e	superseded	ruby	bob	require 'pry'\nclass Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_accessor :said, :response, :type\n\n  def initialize(said)\n    @said = said\n    @type = ConversationType.new @said\n    @response = Response.say(@type)\n  end\n\n  def response\n    "#{@response}"\n  end\n\nend\n\nclass ConversationType\n\n  attr_accessor :said\n\n  def initialize(said)\n    @said = said\n  end\n\n  def to_sym\n    which.to_sym\n  end\n\n    private\n\n    def which\n      return 'whispering' if is_whispering?\n      return 'shouting' if is_shouting?\n      return 'question' if is_question?\n      'bored'\n    end\n\n    def is_whispering?\n      true if @said.nil? or @said.strip.empty?\n    end\n\n    def is_shouting?\n      true if @said.upcase == @said\n    end\n\n    def is_question?\n      true if @said[-1] == '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	1	2014-05-28 03:31:08	2014-05-28 03:31:08	302	bob.rb
607	26	8519b670b4fe976cc3202eb4	superseded	ruby	bob	class Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_reader :response\n\n  def initialize(said)\n    @type = ConversationType.new said\n    @response = Response.say @type\n  end\n\nend\n\nclass ConversationType\n\n  def initialize(said)\n    @said = said\n  end\n\n  def to_sym\n    which\n  end\n\n    private\n\n    def which\n      return :whispering if is_whispering?\n      return :shouting if is_shouting?\n      return :question if is_question?\n      :bored\n    end\n\n    def is_whispering?\n      true if @said.to_s.strip.empty?\n    end\n\n    def is_shouting?\n      true if @said.upcase == @said\n    end\n\n    def is_question?\n      true if @said[-1] == '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	4	2014-05-29 01:00:50	2014-05-29 01:00:50	302	bob.rb
608	26	a4da34165fdac71739b133cf	pending	ruby	bob	class Bob\n\n  def hey(said)\n    Conversation.new(said).response\n  end\n\nend\n\nclass Conversation\n\n  attr_reader :response\n\n  def initialize(said)\n    @type = ConversationType.new said\n    @response = Response.say @type\n  end\n\nend\n\nclass ConversationType\n\n  def initialize(said)\n    @said = said.to_s\n  end\n\n  def to_sym\n    which\n  end\n\n    private\n\n    def which\n      return :whispering if is_whispering?\n      return :shouting if is_shouting?\n      return :question if is_question?\n      :bored\n    end\n\n    def is_whispering?\n      @said.strip.empty?\n    end\n\n    def is_shouting?\n      @said.upcase == @said\n    end\n\n    def is_question?\n      @said.end_with? '?'\n    end\n\nend\n\nclass Response\n\n  RESPONSE = {\n    bored: 'Whatever.',\n    shouting: 'Woah, chill out!',\n    question: 'Sure.',\n    whispering: 'Fine. Be that way!'\n  }\n\n  class << self\n\n    def say(type)\n      RESPONSE[type.to_sym]\n    end\n\n  end\n\nend	\N	\N	0	6	2014-06-20 17:13:09	2014-06-20 17:13:09	302	bob.rb
609	26	b51ea0a64b6a4ae151ace1e0	superseded	ruby	etl	class ETL\n\n  def self.transform(old)\n    data = Hash.new\n    old.keys.each do |key|\n      old[key].each do |value|\n        value.downcase!\n        data[value] = key\n      end\n    end\n    data\n  end\nend	\N	\N	0	1	2014-06-20 20:15:18	2014-06-20 20:15:18	303	etl.rb
612	26	bd1c0085dc52222de083fadf	superseded	ruby	raindrops	class Raindrops\n  def self.convert(num)\n    raindrop_sound = ""\n    raindrop_sound += "Pling" if num % 3 == 0\n    raindrop_sound += "Plang" if num % 5 == 0\n    raindrop_sound += "Plong" if num % 7 == 0\n    if raindrop_sound == ""\n      raindrop_sound = num.to_s\n    end\n      raindrop_sound\n  end\nend	\N	\N	0	2	2014-06-07 05:28:50	2014-06-07 05:28:50	304	raindrops.rb
613	26	c65e753657dae9bd1af3b273	pending	ruby	raindrops	class Raindrops\n  def self.convert(raindrop_number)\n    raindrop_sounds = {3=>"Pling",\n                       5=>"Plang",\n                       7=>"Plong"}\n    raindrop_sound = ""\n    raindrop_sounds.each do |number, sound|\n      raindrop_sound += sound if raindrop_number%number == 0\n    end\n    raindrop_sound = raindrop_number.to_s if raindrop_sound == ""\n\n    raindrop_sound\n  end\nend	\N	\N	0	3	2014-07-20 10:33:23	2014-07-20 10:33:23	304	raindrops.rb
614	26	3feb19d07ebd94f8acf75be9	pending	ruby	luhn	class Luhn\n  def initialize(number)\n    @number = number.to_s.reverse\n  end\n\n  def addends\n    return @luhn_cake if @luhn_cake\n    @luhn_cake = []\n    @number.each_char.with_index do | number, index|\n      if index % 2 != 0\n        num = number.to_i * 2\n        num -= 9 if num > 10\n        @luhn_cake.unshift(num)\n      else\n        @luhn_cake.unshift(number.to_i)\n      end\n    end\n    @luhn_cake\n  end\n\n  def checksum\n    addends.inject(0) { |sum, num| sum + num}\n  end\n\n  def valid?\n    checksum % 10 == 0\n  end\n\n  def self.create(number)\n    test_number = number * 10\n    luhn = self.new(test_number)\n    if luhn.valid?\n      test_number\n    else\n      (1..9).each do |dig|\n        number_string = number.to_s + dig.to_s\n        luhn = self.new(number_string)\n        if luhn.valid?\n          return number_string.to_i\n        end\n      end\n    end\n  end\nend	\N	\N	0	1	2014-06-17 19:31:42	2014-06-17 19:31:42	305	luhn.rb
615	26	fe10598ce39a3d67dcfe6081	pending	clojure	rna-transcription	(ns dna)\n\n(defn validate [s]\n  (cond\n    (re-find #"[^ACTG]" s) (throw (AssertionError.))\n    :else s))\n\n(defn to-rna [s]\n  (->> s\n       validate\n       vec\n       (map {\\A \\A, \\C \\C, \\G \\G, \\T \\U})\n       (apply str)))	\N	\N	0	1	2014-04-14 20:01:22	2014-04-14 20:01:22	306	dna.clj
616	44	11d3ea367ba16013ab244aea	superseded	haskell	octal	module Octal (showOct, readOct) where\n\nshowOct :: (Show n, Integral n) => n -> String\nshowOct n\n  | n <  0    = error $ "showOct: applied to negative number " ++ show n\n  | n == 0    = "0"\n  | otherwise = reverse . showOct' $ n\n  where\n    showOct' n\n      | n == 0    = ""\n      | otherwise = toChar r : showOct' q\n      where\n        (q, r) = n `quotRem` 8\n\nreadOct :: Integral n => String -> n\nreadOct = readOct' 0\n  where\n    readOct' acc (c:cs) = (`readOct'` cs) $! acc*8 + fromChar c\n    readOct' acc []     = acc\n\nfromChar :: Integral n => Char -> n\nfromChar c = case c of\n  '0' -> 0\n  '1' -> 1\n  '2' -> 2\n  '3' -> 3\n  '4' -> 4\n  '5' -> 5\n  '6' -> 6\n  '7' -> 7\n  '8' -> 8\n  _   -> error $ "fromChar: unrecognised octal digit " ++ show c\n\ntoChar :: (Show n, Integral n) => n -> Char\ntoChar n = case n of\n  0 -> '0'\n  1 -> '1'\n  2 -> '2'\n  3 -> '3'\n  4 -> '4'\n  5 -> '5'\n  6 -> '6'\n  7 -> '7'\n  8 -> '8'\n  _   -> error $ "toChar: out of range " ++ show n	\N	\N	0	1	2014-05-15 00:47:18	2014-05-15 00:47:18	307	Octal.hs
617	44	d2cd5cba99f1adbe73b85afa	superseded	haskell	octal	module Octal (showOct, readOct) where\n\nshowOct :: (Show n, Integral n) => n -> String\nshowOct n\n  | n <  0    = error $ "showOct: applied to negative number " ++ show n\n  | n == 0    = "0"\n  | otherwise = reverse . showOct' $ n\n  where\n    showOct' n\n      | n == 0    = ""\n      | otherwise = toChar r `seq` toChar r : showOct' q\n      where\n        (q, r) = n `quotRem` 8\n\nreadOct :: Integral n => String -> n\nreadOct = readOct' 0\n  where\n    readOct' acc (c:cs) = (`readOct'` cs) $! acc*8 + fromChar c\n    readOct' acc []     = acc\n\nfromChar :: Integral n => Char -> n\nfromChar c = case c of\n  '0' -> 0\n  '1' -> 1\n  '2' -> 2\n  '3' -> 3\n  '4' -> 4\n  '5' -> 5\n  '6' -> 6\n  '7' -> 7\n  '8' -> 8\n  _   -> error $ "fromChar: unrecognised octal digit " ++ show c\n\ntoChar :: (Show n, Integral n) => n -> Char\ntoChar n = case n of\n  0 -> '0'\n  1 -> '1'\n  2 -> '2'\n  3 -> '3'\n  4 -> '4'\n  5 -> '5'\n  6 -> '6'\n  7 -> '7'\n  8 -> '8'\n  _   -> error $ "toChar: out of range " ++ show n	\N	\N	0	2	2014-06-18 01:09:46	2014-06-18 01:09:46	307	Octal.hs
618	44	5cdbeb08933f2cbf9b74ba04	pending	haskell	octal	module Octal (showOct, readOct) where\n\nshowOct :: (Show n, Integral n) => n -> String\nshowOct n\n  | n <  0    = error $ "showOct: applied to negative number " ++ show n\n  | n == 0    = "0"\n  | otherwise = reverse . showOct' $ n\n  where\n    showOct' n\n      | n == 0    = ""\n      | otherwise = octChar `seq` octChar : showOct' q\n      where\n        octChar = toChar r\n        (q, r) = n `quotRem` 8\n\nreadOct :: Integral n => String -> n\nreadOct = readOct' 0\n  where\n    readOct' acc (c:cs) = (`readOct'` cs) $! acc*8 + fromChar c\n    readOct' acc []     = acc\n\nfromChar :: Integral n => Char -> n\nfromChar c = case c of\n  '0' -> 0\n  '1' -> 1\n  '2' -> 2\n  '3' -> 3\n  '4' -> 4\n  '5' -> 5\n  '6' -> 6\n  '7' -> 7\n  '8' -> 8\n  _   -> error $ "fromChar: unrecognised octal digit " ++ show c\n\ntoChar :: (Show n, Integral n) => n -> Char\ntoChar n = case n of\n  0 -> '0'\n  1 -> '1'\n  2 -> '2'\n  3 -> '3'\n  4 -> '4'\n  5 -> '5'\n  6 -> '6'\n  7 -> '7'\n  8 -> '8'\n  _   -> error $ "toChar: out of range " ++ show n	\N	\N	0	3	2014-07-02 09:45:38	2014-07-02 09:45:38	307	Octal.hs
619	44	4247eba00a97711514a7ff03	pending	ruby	crypto-square	class String\n  # I've needed to chunk a string up several times, I wish that this was\n  # part of the ruby standard library\n  def chunk(chunk_size)\n    return [self] if chunk_size >= size\n    scan(/.{1,#{chunk_size}}/)\n  end\n\n  # I've needed to cast a String as an array several times, I also wish\n  # that this was part of the standard library\n  def to_a\n    chars.to_a\n  end\nend\n\nclass Array\n  def normalized_length(length)\n    length.times.collect { |i| self[i] }\n  end\nend\n\n# The Exercism provided API didn't feel quite right to me.  I chose\n# different method names because I think they better capture what each\n# method is trying to do.  I also wanted to practice working with an\n# interface that I didn't control while still providing a good\n# experience.  This set of method aliases are factored out of the class\n# so that, as an end user, I'm not even thinking of using the old names.\nmodule Exercism\n  module CryptoAPI\n    def self.included(base)\n      base.class_eval do\n        alias_method :normalize_plaintext, :normalized_plaintext\n        alias_method :size, :square_size\n        alias_method :plaintext_segments, :normalized_plaintext_segments\n        alias_method :normalize_ciphertext, :normalized_ciphertext\n      end\n    end\n  end\nend\n\nclass Crypto\n  attr_reader :plaintext, :special_character_regex, :cipher_chunk_size\n\n  def initialize(plaintext, options = {})\n    @plaintext = plaintext.to_s\n    @special_character_regex = options.fetch(:special_character_regex, \n                                             default_special_character_regex)\n    @cipher_chunk_size = options.fetch(:cipher_chunk_size,\n                                          default_cipher_chunk_size)\n  end\n\n  def normalized_plaintext\n    @normalized_plaintext ||= plaintext.gsub(special_character_regex, '').downcase\n  end\n\n  def ciphertext\n    normalized_cipher_character_block.transpose.flatten.join\n  end\n\n  def square_size\n    Math.sqrt(normalized_plaintext.size).ceil\n  end\n\n  def normalized_plaintext_segments\n    normalized_plaintext.chunk(square_size)\n  end\n\n  def normalized_ciphertext\n    ciphertext.chunk(cipher_chunk_size).join(' ')\n  end\n\n  include Exercism::CryptoAPI\n\n  private\n\n  def normalized_cipher_character_block\n    normalized_plaintext_segments.map do |characters|\n      characters.to_a.normalized_length(square_size)\n    end\n  end\n\n  def default_special_character_regex\n    /[#\\$%\\^&,!\\. ]/\n  end\n\n  def default_cipher_chunk_size\n    5\n  end\nend	\N	\N	0	1	2014-06-17 20:46:52	2014-06-17 20:46:52	308	crypto.rb
620	44	cffb670ec6bd934d79790310	pending	elixir	word-count	defmodule Words do\n  @doc """\n  Count the number of words in the sentence.\n\n  Words are compared case-insensitively.\n  """\n  @spec count(String.t) :: map() \n  def count(sentence) do\n    sentence |> String.downcase \n             |> String.replace(~r/[^-\\d\\p{L}]/u, " ") # Ignore special characters\n             |> String.split # Make an array of the words to count\n             |> count_words(%{}) #count words and put results in a map\n  end\n\n  def count_words([], res) do\n    # All words have been counted\n    res\n  end\n\n  def count_words([head|tail], res) do\n    #Lookup the next word in the map\n    current_count = res[head]\n    unless current_count, do: current_count = 0 \n\n    #Increment the word count\n    res = Map.put(res, head, current_count + 1)\n\n    #Iterate\n    count_words tail, res\n  end\nend	\N	\N	0	1	2014-05-25 15:18:50	2014-05-25 15:18:50	309	word_count.exs
621	44	23fddc099a3a27699f668781	pending	ruby	bob	class Bob\n\tdef initialize\n\tend\n\tdef hey (speech)\n\t\tif speech.lstrip == '' then\n\t\t\t"Fine. Be that way!"\n\t\telsif\n\t\t\tspeech.upcase == speech && speech.length > 2  && !speech.end_with?('3') then\n\t\t\t"Woah, chill out!"\n\t\telsif speech.end_with? '?' then \n\t\t\t"Sure."\n\t\telse\n\t\t"Whatever."\n\t\tend\n\tend\nend	\N	\N	0	1	2014-05-31 11:49:00	2014-05-31 11:49:00	310	bob.rb
622	44	cb0691e323c66cd385ddb60f	pending	elixir	grade-school	defmodule School do\n\n  def add(school, student, grade) do\n    HashDict.put(school, grade, grade(school, grade) ++ [student])\n  end\n\n  def sort(school) do\n    school |> Enum.map(&sort_grade/1) |> HashDict.new\n  end\n\n  defp sort_grade({ grade, students }) do\n    { grade, Enum.sort(students) }\n  end\n\n  def grade(school, grade) do\n    HashDict.get(school, grade, [])\n  end\nend	\N	\N	0	1	2014-04-11 22:32:09	2014-04-11 22:32:09	311	grade-school.exs
623	44	9fb2b6e38662679940400568	superseded	javascript	bob	var Bob = function() {}\n\nBob.prototype.checkIfQuestion = function(text) {\n    return !!text.match(/\\?$/);\n};\n\nBob.prototype.checkIfLowerCase = function(text) {\n    var code;\n    return text.toString()\n               .split('')\n               .some(function(c) {\n                   code = c.charCodeAt(0);\n                   return ((97 <= code && code <= 122) || (224 <= code && code <= 255));\n               });\n};\n\nBob.prototype.checkIfUpperCase = function(text) {\n    return !!text.match(/([A-Z]+)/g);\n};\n\nBob.prototype.checkIfNumbers = function(text) {\n    return !!text.match(/[0-9]+/g);\n};\n\nBob.prototype.hey = function(text) {\n\n    if (this.checkIfQuestion(text)) {\n        if (this.checkIfLowerCase(text)) {\n            return 'Sure.';\n        } else if (this.checkIfUpperCase(text)) {\n            return 'Woah, chill out!';\n        } else {\n            return 'Sure.';\n        }\n    } else if (this.checkIfNumbers(text)) {\n        if (this.checkIfUpperCase(text)) {\n            return 'Woah, chill out!';\n        } else {\n            return 'Whatever.';\n        }\n    } \n    else if (this.checkIfLowerCase(text)) {\n        return 'Whatever.';\n    }\n    else if (this.checkIfUpperCase(text)) {\n        return 'Woah, chill out!';\n    }\n\n    return 'Fine. Be that way!';\n};\n\nmodule.exports = Bob;	\N	\N	0	1	2014-06-05 07:49:10	2014-06-05 07:49:10	312	bob.js
624	44	e371ae8e375eb19881c2cbee	pending	javascript	bob	'use strict';\n\nvar Bob = function () { return undefined; };\n\nBob.prototype.hey = function (text) {\n\n    if (text.toUpperCase() === text && text.toLowerCase() !== text) {\n        return 'Woah, chill out!';\n    }\n    if (text.slice(-1) === '?') {\n        return 'Sure.';\n    }\n    if (text.trim() === '') {\n        return 'Fine. Be that way!';\n    }\n    return 'Whatever.';\n\n};\n\nmodule.exports = Bob;	\N	\N	0	2	2014-06-16 03:59:11	2014-06-16 03:59:11	312	bob.js
625	44	048464b4d0a87a5c48f6bc51	pending	python	anagram	import string\n\nclass Anagram(object):\n    def __init__(self, v):\n        self.tag = "".join(sorted([l for l in v.lower() if l in string.letters]))\n        self.v = v\n\n    def match(self, x):\n        return [m for m in x if  self.__class__(m).tag == self.tag and self.__class__(m).v != self.v]	\N	\N	0	1	2014-04-21 18:26:53	2014-04-21 18:26:53	313	anagram.py
626	44	f54bdad100caf6d9aebeca21	pending	go	phone-number	package phonenumber\n\nimport (\n\t"fmt"\n\t"unicode"\n)\n\nfunc Number(s string) string {\n\n\tvar numbers []rune\n\tfor _, r := range s {\n\t\tif unicode.IsDigit(r) {\n\t\t\tnumbers = append(numbers, r)\n\t\t}\n\t}\n\tif len(numbers) == 10 {\n\t\treturn string(numbers)\n\t}\n\n\tif len(numbers) == 11 && numbers[0] == '1' {\n\t\treturn string(numbers[1:])\n\t}\n\treturn "0000000000"\n}\n\nfunc AreaCode(s string) string {\n\tpn := Number(s)\n\treturn pn[0:3]\n}\n\nfunc Format(s string) string {\n\tpn := Number(s)\n\treturn fmt.Sprintf("(%s) %s-%s", pn[0:3], pn[3:6], pn[6:])\n}	\N	\N	0	1	2014-04-25 16:32:26	2014-04-25 16:32:26	314	phone_number.go
627	44	b20606c7572141a6947b7482	pending	ruby	simple-cipher	require 'pry'\n\n## SKIP SKIP SKIP\n\nclass String\n  def to_a\n    chars.to_a\n  end\nend\n\nclass Cipher\n  def self.valid_cipher_key?(key)\n    !(key.empty? || key.match(/[^a-z]+/))\n  end\n\n  attr_reader :key\n  def initialize(key=nil)\n    @key = key || default_key\n    raise ArgumentError unless self.class.valid_cipher_key?(@key)\n  end\n\n  def encode(plaintext)\n    plaintext.to_a.collect do |character|\n      plaintext_characters_to_cipher_text_characters[character]\n    end.join\n  end\n\n  def decode(encrypted_text)\n    encrypted_text\n  end\n\n  private\n\n  def plaintext_characters_to_cipher_text_characters\n    plaintext_characters = ('a'..'z').to_a\n    key_characters = key.to_a\n    keys_to_values = plaintext_characters.zip(key_characters)\n    Hash[keys_to_values]\n  end\n\n  def default_key\n    'aaaaaaaaaaaaaaaaaaaaaaaaaa'\n  end\nend\n\nc = Cipher.new('d')\nencoded = c.encode('iamapandabear')\nbinding.pry	\N	\N	0	1	2014-05-03 18:22:41	2014-05-03 18:22:41	315	cipher.rb
628	44	ac7d8efb036f03af00f6d7f5	superseded	ruby	leap	class Year\n\n  def initialize(date)\n    @date = date\n  end\n\n  def leap?\n    vanilla_leap? && century_comparison?\n  end\n\n  private\n  \n  attr_reader :date\n\n  def vanilla_leap?\n    date % 4 == 0\n  end\n\n  def century_comparison?\n    no_century?  || exceptional_century?\n  end\n\n  def no_century?\n    date % 100 != 0\n  end\n\n  def exceptional_century?\n    date % 400 == 0\n  end\nend	\N	\N	0	1	2014-05-18 01:35:07	2014-05-18 01:35:07	316	leap.rb
629	44	0bbe3961ed165696e0867c27	pending	ruby	leap	class Year\n  def initialize(year)\n    @year = year\n  end\n\n  def leap?\n    vanilla_leap? && !century? || exceptional_century?\n  end\n\n  private\n  \n  attr_reader :year\n\n  def vanilla_leap?\n    divisible_by?(4)\n  end\n\n  def century?\n    divisible_by?(100)\n  end\n\n  def exceptional_century?\n    divisible_by?(400)\n  end\n\n  def divisible_by? years\n    @year % years == 0\n  end\nend	\N	\N	0	2	2014-07-02 05:38:06	2014-07-02 05:38:06	316	leap.rb
630	44	ed44cf67ffc7afae85a0e678	pending	clojure	rna-transcription	(ns dna)\n(defn transcribe\n  "Takes a letter and transcribes it to RNA"\n  [letter]\n  (if-let [value ((keyword (str letter)) { :C "G" :G "C" :A "U" :T "A"})]\n    value\n      (assert false))\n)\n\n\n\n(defn to-rna\n  [string]\n  (apply str (map (fn [letter] (transcribe letter)) (seq string)))\n)	\N	\N	0	1	2014-04-16 13:33:59	2014-04-16 13:33:59	317	dna.clj
631	44	37caefcc6c0bdb808c0ffb2b	pending	ruby	rna-transcription	class RibonucleicAcid\n  def initialize(string)\n    @string = string\n  end\n  def to_s\n    @string\n  end\n  def ==(object)\n    object.to_s == @string\n  end\nend\n\nclass String\n  alias :old_equals :==\n\n  def ==(that)\n    if that.kind_of?(RibonucleicAcid)\n      that == self\n    else\n      old_equals(that)\n    end\n  end\nend\n\nclass DeoxyribonucleicAcid < RibonucleicAcid\n\n  def to_rna\n    RibonucleicAcid.new(@string.gsub("T","U"))\n  end\nend	\N	\N	0	1	2014-05-31 14:09:42	2014-05-31 14:09:42	318	rna-transcription.rb
632	44	caaa3ef31cb14efa0b21395b	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :strand\n\n  def initialize(strand)\n    @strand = strand.split("")\n  end\n\n  def count(letter)\n    raise ArgumentError if !nucleotide?(letter)\n\n    strand.count(letter)\n  end\n\n  def nucleotide_counts\n    dna_nucleotides.each_with_object({}) do |letter, nucleotide_counts|\n      nucleotide_counts[letter] = count(letter)\n    end\n  end\n\n  private\n\n  def dna_nucleotides\n    ["A", "T", "C", "G"]\n  end\n\n  def rna_nucleotides\n    ["U"]\n  end\n\n  def nucleotide?(letter)\n    (dna_nucleotides + rna_nucleotides).include?(letter)\n  end\nend	\N	\N	0	3	2014-04-11 02:59:29	2014-04-11 02:59:29	319	nucleotide-count.rb
633	44	9f72b6ecce6c844c383a9462	pending	ruby	nucleotide-count	class DNA\n\n  attr_reader :strand\n\n  def initialize(strand)\n    @strand = strand.chars\n  end\n\n  def count(letter)\n    raise ArgumentError.new("#{letter} is not a valid nucleotide") if !nucleotide?(letter)\n\n    strand.count(letter)\n  end\n\n  def nucleotide_counts\n    dna_nucleotides.each_with_object({}) do |letter, nucleotide_counts|\n      nucleotide_counts[letter] = count(letter)\n    end\n  end\n\n  private\n\n  def dna_nucleotides\n    ["A", "T", "C", "G"]\n  end\n\n  def rna_nucleotides\n    ["U"]\n  end\n\n  def nucleotide?(letter)\n    (dna_nucleotides + rna_nucleotides).include?(letter)\n  end\nend	\N	\N	0	5	2014-04-25 05:30:48	2014-04-25 05:30:48	319	nucleotide-count.rb
634	44	ec2e308ac9775ae7eef1ad96	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna_string\n\n  def initialize(dna_string)\n    @dna_string = dna_string.split("")\n  end\n\n  def count(letter)\n    raise ArgumentError if not_nucleotide?(letter)\n\n    dna_string.count(letter)\n  end\n\n  def nucleotide_counts\n    dna_nucleotides.each_with_object({}) do |letter, nucleotide_counts|\n      nucleotide_counts[letter] = count(letter)\n    end\n  end\n\n  private\n\n  def dna_nucleotides\n    ["A", "T", "C", "G"]\n  end\n\n  def rna_nucleotides\n    ["U"]\n  end\n\n  def not_nucleotide?(letter)\n    !dna_nucleotides.include?(letter) && !rna_nucleotides.include?(letter)\n  end\nend	\N	\N	0	1	2014-05-01 04:21:49	2014-05-01 04:21:49	319	nucleotide-count.rb
635	44	9ed22d32be7124704272c099	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :dna_strand\n\n  def initialize(dna_strand)\n    @dna_strand = dna_strand.split("")\n  end\n\n  def count(letter)\n    raise ArgumentError if !nucleotide?(letter)\n\n    dna_strand.count(letter)\n  end\n\n  def nucleotide_counts\n    dna_nucleotides.each_with_object({}) do |letter, nucleotide_counts|\n      nucleotide_counts[letter] = count(letter)\n    end\n  end\n\n  private\n\n  def dna_nucleotides\n    ["A", "T", "C", "G"]\n  end\n\n  def rna_nucleotides\n    ["U"]\n  end\n\n  def nucleotide?(letter)\n    (dna_nucleotides + rna_nucleotides).include?(letter)\n  end\nend	\N	\N	0	2	2014-05-02 10:50:00	2014-05-02 10:50:00	319	nucleotide-count.rb
636	44	f71a5e40ee5cc5632b5ba30f	superseded	ruby	nucleotide-count	class DNA\n\n  attr_reader :strand\n\n  def initialize(strand)\n    @strand = strand.split("")\n  end\n\n  def count(letter)\n    raise ArgumentError if !nucleotide?(letter)\n\n    strand.count(letter)\n  end\n\n  def nucleotide_counts\n    dna_nucleotides.each_with_object({}) do |letter, nucleotide_counts|\n      nucleotide_counts[letter] = count(letter)\n    end\n  end\n\n  private\n\n  def dna_nucleotides\n    ["A", "T", "C", "G"]\n  end\n\n  def rna_nucleotides\n    ["U"]\n  end\n\n  def nucleotide?(letter)\n    (dna_nucleotides + rna_nucleotides).include?(letter)\n  end\nend	\N	\N	0	4	2014-06-18 02:54:33	2014-06-18 02:54:33	319	nucleotide-count.rb
637	44	84e43aba10b7601af4301e3b	pending	haskell	anagram	module Anagram (anagramsFor) where\n\nimport Data.Char\nimport Data.List\n\nanagramsFor :: String -> [String] -> [String]\nanagramsFor s = filter (isAnagramOf s)\n\nisAnagramOf :: String -> String -> Bool\nisAnagramOf a b = a' /= b' && sort a' == sort b'\n    where a' = map toLower a\n          b' = map toLower b	\N	\N	0	1	2014-06-10 22:19:57	2014-06-10 22:19:57	320	Anagram.hs
638	44	507ae2bd97310238a23dbaf8	pending	ruby	hexadecimal	class Hexadecimal\n  HEXITS = "0123456789abcdef"\n\n  def initialize(hexits)\n    @hexits = hexits\n  end\n\n  def to_decimal\n    return 0 unless valid?\n    @hexits.chars.reduce(0) { |value, hexit|\n      value * 16 + value(hexit)\n    }\n  end\n\n  def valid?\n    @hexits.chars.all? { |hexit| value(hexit) }\n  end\n\n  private\n\n  def value(hexit)\n    HEXITS.index(hexit)\n  end\nend	\N	\N	0	1	2014-04-14 15:46:31	2014-04-14 15:46:31	321	hexadecimal.rb
639	44	74e85351323a90469f6b3fd4	pending	python	bob	class Bob(object):\n\n  def hey(self, sentence):\n    if (self.silence(sentence)):\n      return 'Fine. Be that way!'\n    if(self.shouting(sentence)):\n      return 'Woah, chill out!'\n    if(self.question(sentence)):\n      return 'Sure.'\n    return 'Whatever.'\n\n  def silence(self, sentence):\n    return len(sentence.strip()) == 0 or sentence.isspace()\n\n  def question(self, sentence):\n    return sentence.endswith('?')\n\n  def shouting(self, sentence):\n    return sentence.isupper()	\N	\N	0	1	2014-05-18 05:00:35	2014-05-18 05:00:35	322	bob.py
640	44	ef0087d6ad59e068ed2e9f6b	pending	python	rna-transcription	class DNA:\n    def __init__(self, word):\n        self.word = word\n\n    def to_rna(self):\n        rna = ''\n        for letter in self.word:\n            if letter == 'T':\n                rna += 'U'\n            else:\n                rna += letter\n        return rna	\N	\N	0	1	2014-05-03 18:59:52	2014-05-03 18:59:52	323	dna.py
641	44	95d67ad91bb3d80d2814bcba	superseded	ruby	hamming	module Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    Comparitor.new(dna_sequence, second_dna_sequence).pairs.inject(0) { |result, (a,b)| result += (a <=> b).abs }\n  end\n  \n  private\n  \n  class Comparitor\n    \n    def initialize(first_sequence, second_sequence)\n      @first_sequence = first_sequence\n      @second_sequence = second_sequence\n    end\n   \n    def pairs\n      @first_sequence.chars.zip(@second_sequence.chars).delete_if { |pair| pair.any?(&:nil?)}\n    end\n\n  end\n\nend	\N	\N	0	2	2014-04-28 17:46:05	2014-04-28 17:46:05	324	hamming.rb
642	44	38572611dcd9928f64503ae6	superseded	ruby	hamming	module Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    Pairs.new(dna_sequence, second_dna_sequence).inject(0) do |result, (first_char,second_char)| \n      result += (first_char <=> second_char).abs\n    end\n  end\n  \n  private\n  \n  class Pairs\n    \n    def initialize(first_sequence, second_sequence)\n      @first_sequence = first_sequence\n      @second_sequence = second_sequence\n    end\n    \n    def inject accumulator, &block\n      pairs.inject(accumulator,&block)\n    end\n   \n    def pairs\n      @first_sequence.chars.zip(@second_sequence.chars).each_with_object([]) do |pair,successive_character_pairs|\n        successive_character_pairs << pair unless pair.include?(nil)\n      end\n    end\n\n  end\n\nend	\N	\N	0	5	2014-05-01 12:37:07	2014-05-01 12:37:07	324	hamming.rb
643	44	102e71ced584b29a06209ddf	superseded	ruby	hamming	module Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    Pairs.new(dna_sequence, second_dna_sequence).inject(0) { |result, (a,b)| result += (a <=> b).abs }\n  end\n  \n  private\n  \n  class Pairs\n    \n    def initialize(first_sequence, second_sequence)\n      @first_sequence = first_sequence\n      @second_sequence = second_sequence\n    end\n    \n    def inject accumulator, &block\n      pairs.inject(0,&block)\n    end\n   \n    def pairs\n      @first_sequence.chars.zip(@second_sequence.chars).each_with_object([]) do |pair,successive_character_pairs|\n        successive_character_pairs << pair unless pair.include?(nil)\n      end\n    end\n\n  end\n\nend	\N	\N	0	3	2014-05-18 18:10:17	2014-05-18 18:10:17	324	hamming.rb
644	44	ee6d9b5a9f89d5b90afa023d	superseded	ruby	hamming	module Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    Pairs.new(dna_sequence, second_dna_sequence).inject(0) { |result, (a,b)| result += (a <=> b).abs }\n  end\n  \n  private\n  \n  class Pairs\n    \n    def initialize(first_sequence, second_sequence)\n      @first_sequence = first_sequence\n      @second_sequence = second_sequence\n    end\n    \n    def inject accumulator, &block\n      pairs.inject(accumulator,&block)\n    end\n   \n    def pairs\n      @first_sequence.chars.zip(@second_sequence.chars).each_with_object([]) do |pair,successive_character_pairs|\n        successive_character_pairs << pair unless pair.include?(nil)\n      end\n    end\n\n  end\n\nend	\N	\N	0	4	2014-05-21 17:34:49	2014-05-21 17:34:49	324	hamming.rb
647	44	7bcce61ae2e127d301612c70	superseded	ruby	hamming	class Hamming\n  \n  def self.compute dna_sequence, second_dna_sequence\n    self.new(dna_sequence, second_dna_sequence).inject(0) do |result, (first_char,second_char)| \n      result += (first_char <=> second_char).abs\n    end\n  end\n\n  def initialize(first_sequence, second_sequence)\n    @first_sequence = first_sequence\n    @second_sequence = second_sequence\n  end\n\n  def inject accumulator, &block\n    pairs.inject(accumulator,&block)\n  end\n  \n  private\n\n  def pairs\n    @first_sequence.chars.zip(@second_sequence.chars).each_with_object([]) do |pair,successive_character_pairs|\n      successive_character_pairs << pair unless pair.include?(nil)\n    end\n  end\n\nend	\N	\N	0	6	2014-06-29 00:06:15	2014-06-29 00:06:15	324	hamming.rb
648	44	51cec88eba79fd5b086e326f	superseded	ruby	hamming	class Hamming\n  \n  def self.compute strand_1, strand_2\n    self.new(strand_1, strand_2).distance\n  end\n\n  def initialize(strand_1, strand_2)\n    @strand_1 = strand_1\n    @strand_2 = strand_2\n  end\n\n  def distance\n    pairs.count { |(first_char,second_char)| \n      first_char != second_char \n    }\n  end\n  \n  private\n\n  def pairs\n    @strand_1.chars.zip(@strand_2.chars).take_while { |pair| !pair.any?(&:nil?) }\n  end\n\nend	\N	\N	0	9	2014-07-17 21:36:33	2014-07-17 21:36:33	324	hamming.rb
649	44	21f4f5b5ff0b9319d1f3e13c	superseded	ruby	hamming	class Hamming\n  \n  def self.compute strand_1, strand_2\n    self.new(strand_1, strand_2).distance\n  end\n\n  def initialize(strand_1, strand_2)\n    @strand_1 = strand_1\n    @strand_2 = strand_2\n  end\n\n  def distance\n    pairs.count { |(first_char,second_char)| \n      first_char != second_char \n    }\n  end\n  \n  private\n\n  def pairs\n    @strand_1.chars.zip(@strand_2.chars).delete_if do |pair| \n      pair.include?(nil)\n    end\n  end\n\nend	\N	\N	0	8	2014-07-19 14:56:22	2014-07-19 14:56:22	324	hamming.rb
650	44	1c2dd5475d07519b9816e93e	pending	ruby	hamming	class Hamming\n  \n  def self.compute strand_1, strand_2\n    self.new(strand_1, strand_2).distance\n  end\n\n  def initialize(strand_1, strand_2)\n    @strand_1 = strand_1\n    @strand_2 = strand_2\n  end\n\n  def distance\n    pairs.count { |pair| pair.mutation? }\n  end\n  \n  private\n\n  def pairs\n    @strand_1.chars.zip(@strand_2.chars).take_while { |pair| !pair.any?(&:nil?) }.map { |(first_char,second_char)| Pair.new(first_char,second_char)}\n  end\n  \n  Pair = Struct.new(:first, :second) do\n    \n    def mutation?\n      first != second \n    end\n    \n  end\n\nend	\N	\N	0	10	2014-07-24 00:06:53	2014-07-24 00:06:53	324	hamming.rb
651	44	2a10d3c1c37c318313686a1c	pending	haskell	simple-cipher	module Cipher (caesarEncode, caesarDecode, caesarEncodeRandom) where\n\nimport System.Random (newStdGen, randomRs)\n\ncaesarEncode, caesarDecode :: String -> String -> String\ncaesarEncode = caesar (+)\ncaesarDecode = caesar (-)\n\ncaesarEncodeRandom :: String -> IO (String, String)\ncaesarEncodeRandom xs = do\n  g <- newStdGen\n  let ks = take (length xs) (randomRs ('a', 'z') g)\n  return (ks, caesarEncode ks xs)\n\ncaesar :: (Int -> Int -> Int) -> String -> String -> String\ncaesar op = zipWith rotate . cycle\n  where\n    rotate k x = if isAlpha k && isAlpha x\n                then toAlpha (op (fromAlpha x) (fromAlpha k) `mod` 26)\n                else x\n    fromAlpha = subtract (fromEnum 'a') . fromEnum\n    toAlpha = toEnum . (fromEnum 'a' +)\n    isAlpha x = x >= 'a' && x <= 'z'	\N	\N	0	1	2014-05-03 21:21:44	2014-05-03 21:21:44	325	Cipher.hs
652	44	219f104b8a90157f72ec409e	pending	ruby	raindrops	require 'prime'\n\nclass Raindrops\n\n  def self.convert(num)\n    array = []\n    array << 'Pling' if is_prime_factor?(num, 3)\n    array << 'Plang' if is_prime_factor?(num, 5)\n    array << 'Plong' if is_prime_factor?(num, 7)\n    array << num.to_s if array.empty?\n    array.join\n  end\n\n  \n  def self.is_prime_factor?(num, factor_of)\n    Prime.prime_division(num).flatten.include?(factor_of)\n\n  end\n\n  end	\N	\N	0	1	2014-06-14 13:36:02	2014-06-14 13:36:02	326	raindrops.rb
653	44	396eaf2048c320e0af822f17	superseded	python	word-count	class Phrase(object):\n  def __init__(self, text):\n    self.text = text\n    self.delete_chars = self._generate_bad_characters()\n    self.words = {}\n    self._analyze_phrase()\n\n  def _generate_bad_characters(self):\n    return ''.join(c for c in map(chr, range(256)) if not c.isalnum())\n\n  def _analyze_phrase(self):\n    for word in self.text.split():\n      self._analyze_word(self._translate_word(word))\n\n  def _translate_word(self, word):\n    word = word.lower()\n    word = word.translate(None, self.delete_chars)\n    return word\n\n  def _analyze_word(self, word):\n    if not word.isalnum():\n      return\n    self._increment_word(word)\n\n  def _increment_word(self, word):\n    if not word in self.words:\n      self.words[word] = 0\n    self.words[word] += 1\n\n  def word_count(self):\n    return self.words	\N	\N	0	1	2014-04-19 14:10:14	2014-04-19 14:10:14	327	word-count.py
654	44	68bddd465e5697d2e29d2692	superseded	python	word-count	class Phrase(object):\n  def __init__(self, text):\n    self.text = text\n    self.extractor = WordExtractor()\n    self.words = {}\n    self._analyze_phrase()\n\n  def _analyze_phrase(self):\n    for word in self.text.split():\n      self._analyze_word(word)\n\n  def _analyze_word(self, word):\n    extracted = self.extractor.extract(word)\n    if extracted.isalnum():\n      self._increment_word(extracted)\n\n  def _increment_word(self, word):\n    if not word in self.words:\n      self.words[word] = 0\n    self.words[word] += 1\n\n  def word_count(self):\n    return self.words\n\nclass WordExtractor(object):\n  def __init__(self):\n    self.delete_chars = self._bad_characters()\n\n  def _bad_characters(self):\n    return ''.join(c for c in map(chr, range(256)) if not c.isalnum())\n\n  def extract(self, word):\n    word = word.lower()\n    word = word.translate(None, self.delete_chars)\n    return word	\N	\N	0	2	2014-05-05 14:23:42	2014-05-05 14:23:42	327	word-count.py
655	44	2ce230e9f725e36b4a2c8b50	superseded	python	word-count	class Phrase(object):\n  def __init__(self, text):\n    self.text = text\n    self.words = WordExtractor().extract(text)\n    self.counts = self._count_words()\n\n  def _count_words(self):\n    counts = {}\n    for word in self.words:\n      if word not in counts:\n        counts[word] = 0\n      counts[word] += 1\n    return counts\n\n  def word_count(self):\n    return self.counts\n\nclass WordExtractor(object):\n  @staticmethod\n  def _nonprintable_chars():\n    return ''.join(c for c in map(chr, range(256)) if not c.isalnum())\n\n  def extract(self, words):\n    found_words = []\n    for word in words.split():\n      extracted = self._extract_word(word)\n      if extracted.isalnum():\n        found_words.append(extracted)\n    return found_words\n\n  def _extract_word(self, word):\n    return word.lower().translate(None, WordExtractor._nonprintable_chars())	\N	\N	0	4	2014-05-09 02:37:50	2014-05-09 02:37:50	327	wordcount.py
656	44	e5c769d58fc91d2c1b8fabf9	pending	python	word-count	class Phrase(object):\n  def __init__(self, text):\n    self.text = text\n    self.words = self._extract_words(self.text)\n\n  def _extract_words(self, text):\n    words = []\n    for word in text.split():\n      words.append(self._filter_word(word))\n    return filter(None, words)\n\n  def _filter_word(self, word):\n    return ''.join(filter(str.isalnum, word.lower()))\n\n  def word_count(self):\n    counts = {}\n    for word in self.words:\n      if not word in counts:\n          counts[word] = 0\n      counts[word] += 1\n    return counts	\N	\N	0	5	2014-06-12 23:00:40	2014-06-12 23:00:40	327	wordcount.py
657	44	9140f5b9e1cc7724bccd850f	superseded	python	word-count	class Phrase(object):\n  def __init__(self, text):\n    self.text = text\n    self.words = {}\n    self.extractor = WordExtractor()\n\n    self._analyze_phrase()\n\n  def _analyze_phrase(self):\n    for word in self.text.split():\n      self._analyze_word(word)\n\n  def _analyze_word(self, word):\n    extracted = self.extractor.extract(word)\n    if extracted.isalnum():\n      self._increment_word(extracted)\n\n  def _increment_word(self, word):\n    if not word in self.words:\n      self.words[word] = 0\n    self.words[word] += 1\n\n  def word_count(self):\n    return self.words\n\nclass WordExtractor(object):\n  def __init__(self):\n    self.delete_chars = self._bad_characters()\n\n  def _bad_characters(self):\n    return ''.join(c for c in map(chr, range(256)) if not c.isalnum())\n\n  def extract(self, word):\n    word = word.lower()\n    word = word.translate(None, self.delete_chars)\n    return word	\N	\N	0	3	2014-07-05 13:30:44	2014-07-05 13:30:44	327	word-count.py
658	44	95614bf13c8874bbf9a62128	pending	ruby	space-age	class SpaceAge\n  attr_reader :seconds\n\n  def initialize(seconds)\n    @seconds = seconds.to_f\n  end\n\n  def on_earth\n    (@seconds / 31557600).round(2)\n  end\n\n  def on_mercury\n    (on_earth / 0.2408467).round(2)\n  end\n\n  def on_venus\n    (on_earth / 0.61519726).round(2)\n  end\n\n  def on_mars\n    (on_earth / 1.8808158).round(2)\n  end\n\n  def on_jupiter\n    (on_earth / 11.862615).round(2)\n  end\n\n  def on_saturn\n    (on_earth / 29.447498).round(2)\n  end\n\n  def on_uranus\n    (on_earth / 84.016846).round(2)    \n  end\n\n  def on_neptune\n    (on_earth / 164.79132).round(2)    \n  end\nend	\N	\N	0	1	2014-05-06 09:51:08	2014-05-06 09:51:08	328	space_age.rb
659	44	6588ef378eb6b44804499ca0	superseded	ruby	triangle	class Triangle\n  TRIANGLE_TYPES = {\n      0 => :scalene,\n      1 => :isosceles,\n      2 => :equilateral\n  }\n\n  def initialize(*args)\n    @sides = args.to_a.sort\n  end\n\n  def kind\n    raise TriangleError if illegal\n    tally = 0\n    tally +=1 if @sides[0] == @sides[1]\n    tally +=1 if @sides[0] == @sides[2] || @sides[1] == @sides[2]\n\n    TRIANGLE_TYPES[tally]\n\n  end\n\n  private\n\n  def illegal\n    ((@sides[0] <=0) || (@sides[1] <=0) || (@sides[2] <=0))  || (@sides[2] >= (@sides[0] + @sides[1]))\n  end\n\nend\n\nclass TriangleError < Exception\n\nend	\N	\N	0	1	2014-04-26 11:31:34	2014-04-26 11:31:34	329	triangle.rb
660	44	d5e4374c15c4faea005e7fa2	pending	ruby	triangle	class Triangle\n  TRIANGLE_TYPES = {\n      1 => :equilateral,\n      2 => :isosceles,\n      3 => :scalene\n  }\n\n  def initialize(*args)\n    @sides = args.to_a.sort\n    raise TriangleError if illegal\n  end\n\n  def kind\n    TRIANGLE_TYPES[@sides.uniq.count]\n  end\n\n  private\n\n  def illegal\n    ((@sides[0] <=0) || (@sides[1] <=0) || (@sides[2] <=0))  || (@sides[2] >= (@sides[0] + @sides[1]))\n  end\n\nend\n\nclass TriangleError < Exception\n\nend	\N	\N	0	2	2014-05-17 07:01:37	2014-05-17 07:01:37	329	triangle.rb
661	44	637c589fb6b988ef1e96744f	superseded	haskell	bank-account	module BankAccount (\n  BankAccount,\n  openAccount,\n  closeAccount,\n  getBalance,\n  incrementBalance\n) where\nimport Data.Maybe\nimport Data.Functor((<$>))\nimport Control.Concurrent.STM(TVar, atomically, newTVar, readTVar, writeTVar)\n\nnewtype BankAccount = BankAccount { balance :: TVar (Maybe Integer) }\n\nopenAccount :: IO BankAccount\nopenAccount = do\n  b <- atomically $ newTVar $ Just 0\n  return $ BankAccount b\n\ngetBalance acc = atomically $ readTVar $ balance acc\n\ncloseAccount acc = atomically $ writeTVar (balance acc) Nothing\n\nincrementBalance acc amount = do\n  b <- getBalance acc\n  atomically $ writeTVar (balance acc) $ Just $ amount + (fromJust b)\n  b' <- getBalance acc\n  return b'	\N	\N	0	1	2014-04-27 04:17:11	2014-04-27 04:17:11	330	BankAccount.hs
662	44	edc154d78b0353570ac7cbe9	superseded	haskell	bank-account	module BankAccount (\n  BankAccount,\n  openAccount,\n  closeAccount,\n  getBalance,\n  incrementBalance\n) where\nimport Data.Maybe(Maybe(Nothing, Just), fromJust)\nimport Data.Functor((<$>))\nimport Control.Concurrent.STM(TVar, atomically, newTVar, readTVar, writeTVar, modifyTVar)\n\nnewtype BankAccount = BankAccount { balance :: TVar (Maybe Integer) }\n\nopenAccount :: IO BankAccount\nopenAccount = BankAccount <$> (atomically . newTVar . Just) 0\n\ngetBalance :: BankAccount -> IO (Maybe Integer)\ngetBalance = atomically . readTVar . balance\n\ncloseAccount :: BankAccount -> IO ()\ncloseAccount acc = atomically $ writeTVar (balance acc) Nothing\n\nincrementBalance :: BankAccount -> Integer -> IO (Maybe Integer)\nincrementBalance acc amount = do\n  atomically $ modifyTVar (balance acc) (\\b -> Just $ amount + (fromJust b))\n  b' <- getBalance acc\n  return b'	\N	\N	0	2	2014-05-14 14:35:33	2014-05-14 14:35:33	330	BankAccount.hs
663	44	3e01d92039b3334e4982dc39	superseded	haskell	bank-account	module BankAccount (\n  BankAccount,\n  openAccount,\n  closeAccount,\n  getBalance,\n  incrementBalance\n) where\nimport Data.Maybe(Maybe(Nothing, Just), fromJust)\nimport Data.Functor((<$>))\nimport Control.Concurrent.STM(TVar, atomically, newTVar, readTVar, writeTVar, modifyTVar)\n\nnewtype BankAccount = BankAccount { balance :: TVar (Maybe Integer) }\n\nopenAccount :: IO BankAccount\nopenAccount = BankAccount <$> (atomically . newTVar . Just) 0\n\ngetBalance :: BankAccount -> IO (Maybe Integer)\ngetBalance = atomically . readTVar . balance\n\ncloseAccount :: BankAccount -> IO ()\ncloseAccount acc = atomically $ writeTVar (balance acc) Nothing\n\nincrementBalance :: BankAccount -> Integer -> IO (Maybe Integer)\nincrementBalance acc amount = do\n  atomically $ modifyTVar (balance acc) (\\b -> Just $ amount + (fromJust b))\n  getBalance acc	\N	\N	0	3	2014-06-02 14:48:52	2014-06-02 14:48:52	330	BankAccount.hs
664	44	00a71fda2fc6e0d6fc8a4fca	pending	haskell	bank-account	module BankAccount (\n  BankAccount,\n  openAccount,\n  closeAccount,\n  getBalance,\n  incrementBalance\n) where\nimport Data.Maybe(Maybe(Nothing, Just), fromJust)\nimport Data.Functor((<$>))\nimport Control.Concurrent.STM(TVar, atomically, newTVar, readTVar, writeTVar, modifyTVar')\n\nnewtype BankAccount = BankAccount { balance :: TVar (Maybe Integer) }\n\nopenAccount :: IO BankAccount\nopenAccount = BankAccount <$> balanceOf 0\n where\n   balanceOf = atomically .newTVar . Just\n\ncloseAccount :: BankAccount -> IO ()\ncloseAccount a = atomically $ writeTVar (balance a) Nothing\n\ngetBalance :: BankAccount -> IO (Maybe Integer)\ngetBalance = atomically . readTVar . balance\n\nincrementBalance :: BankAccount -> Integer -> IO (Maybe Integer)\nincrementBalance a n = atomically $ modifyTVar' b inc >> readTVar b\n where\n   b = balance a\n   inc = ($!) Just . (n +) . fromJust	\N	\N	0	4	2014-07-16 09:09:17	2014-07-16 09:09:17	330	BankAccount.hs
665	44	f1153d5bc754dced17a685da	pending	perl5	triangle	package Triangle;\nuse 5.012;\n\nsub kind {\n  my @a = @_;\n  die 'TriangleError - Needs exactly 3 paramaters' if $#a != 2;\n  die "TriangleError - illegal triple (@a)" if min(@a) <= 0;\n  die "TriangleError - illegal triple (@a)" if max(@a) >= sum(@a) - max(@a);\n  my %len;\n  map {$len{$_}++} @a;\n  return 'equilateral' if scalar keys %len == 1;\n  return 'isosceles' if scalar keys %len == 2;\n  return 'scalene';\n}\n\nsub max {\n  my @a = @_;\n  my $max = 0;\n  map {$max = $_ if $_ > $max} @a;\n  return $max;\n}\n\nsub min {\n  my @a = @_;\n  my $min = $a[0];\n  map {$min = $_ if $_ < $min} @a;\n  return $min;\n}\n\nsub sum {\n  my @a = @_;\n  my $sum = 0;\n  map {$sum += $_} @a;\n  return $sum;\n}\n\n1;	\N	\N	0	1	2014-06-15 11:30:18	2014-06-15 11:30:18	331	Triangle.pm
666	44	acf0e11ed90abb6d62478722	pending	ruby	grade-school	class School\n  def initialize\n    @roster = {}\n  end\n\n  def add(student, grade)\n    add_grade(grade)\n    @roster[grade] << student\n  end\n\n  def grade(grade)\n    sort_by_grade(grade)\n  end\n\n  def to_hash\n    sorted_roster = {}\n\n    @roster.sort.map do |key, value|\n      sorted_roster[key] = sort_by_grade( key )\n    end\n\n    sorted_roster\n  end\n\n  private\n  def add_grade(grade)\n    @roster[grade] = [] unless @roster[grade]\n  end\n\n  def sort_by_grade(grade)\n    add_grade(grade)\n    @roster[grade].sort! unless @roster[grade].nil?\n  end\nend	\N	\N	0	1	2014-05-02 09:29:55	2014-05-02 09:29:55	332	school.rb
667	44	2677ae8356c82f812274bc71	pending	elixir	nucleotide-count	defmodule DNA do\n  @nucleotides [?A, ?C, ?G, ?T]\n\n  @doc """\n  Counts individual nucleotides in a DNA strand.\n\n  ## Examples\n\n  iex> DNA.count('AATAA', ?A)\n  4\n\n  iex> DNA.count('AATAA', ?T)\n  1\n  """\n  @spec count([char], char) :: non_neg_integer\n  def count(strand, nucleotide) do\n    strand\n    |> Enum.map(&(if nucleotide == &1, do: 1, else: 0))\n    |> Enum.reduce(0, &(&1 + &2))\n  end\n\n  @doc """\n  Returns a summary of counts by nucleotide.\n\n  ## Examples\n\n  iex> DNA.nucleotide_counts('AATAA')\n  %{?A => 4, ?T => 1, ?C => 0, ?G => 0}\n  """\n  @spec nucleotide_counts([char]) :: Dict.t\n  def nucleotide_counts([]), do: %{?A => 0, ?T => 0, ?C => 0, ?G => 0}\n  def nucleotide_counts([nucleotide | nucleotides]) do\n    nucleotides |> nucleotide_counts |> _increment_count(nucleotide)\n  end\n    \n  defp _increment_count(counts, key),\n    do: counts |> Dict.put(key, Dict.get(counts, key) + 1)\n      \nend	\N	\N	0	3	2014-04-26 05:22:02	2014-04-26 05:22:02	333	dna.exs
668	44	b27cc84858dc88f5aca1b2e9	superseded	elixir	nucleotide-count	defmodule DNA do\n  @nucleotides [?A, ?C, ?G, ?T]\n\n  @doc """\n  Counts individual nucleotides in a DNA strand.\n\n  ## Examples\n\n  iex> DNA.count('AATAA', ?A)\n  4\n\n  iex> DNA.count('AATAA', ?T)\n  1\n  """\n  @spec count([char], char) :: non_neg_integer\n  def count(strand, nucleotide) do\n    strand\n    |> Enum.map(&(if nucleotide == &1, do: 1, else: 0))\n    |> Enum.reduce(0, &(&1 + &2))\n  end\n\n  @doc """\n  Returns a summary of counts by nucleotide.\n\n  ## Examples\n\n  iex> DNA.nucleotide_counts('AATAA')\n  %{?A => 4, ?T => 1, ?C => 0, ?G => 0}\n  """\n  @spec nucleotide_counts([char]) :: Dict.t\n  def nucleotide_counts([]), do: %{?A => 0, ?T => 0, ?C => 0, ?G => 0}\n  def nucleotide_counts([nucleotide | nucleotides]) do\n    nucleotides |> nucleotide_counts |> _add_count(nucleotide)\n  end\n  \n  defp _add_count(counts, nucleotide) do\n    case nucleotide do\n      ?A -> counts |> _increment_count(?A)\n      ?T -> counts |> _increment_count(?T)\n      ?C -> counts |> _increment_count(?C)\n      ?G -> counts |> _increment_count(?G)\n    end\n  end\n  \n  defp _increment_count(counts, key),\n    do: counts |> Dict.put(key, Dict.get(counts, key) + 1)\n      \nend	\N	\N	0	1	2014-05-06 09:09:18	2014-05-06 09:09:18	333	dna.exs
669	44	1101a283d5098ed9eb925af8	pending	haskell	bob	module Bob\n( responseFor,\n) where\n\nimport Data.Char (isUpper, isAlpha, isSpace)\n\nresponseFor :: String -> String\nresponseFor xs\n  | all isSpace xs = "Fine. Be that way."\n  | isAllCaps xs = "Woah, chill out!"\n  | last xs == '?' = "Sure."\n  | otherwise = "Whatever."\n\nisAllCaps :: String -> Bool\nisAllCaps xs = all isUpper (filter isAlpha xs) && any isAlpha xs	\N	\N	0	4	2014-05-03 15:05:27	2014-05-03 15:05:27	334	bob.hs
670	44	8a58334025d58e3678c2def0	superseded	haskell	bob	module Bob\n( responseFor,\n) where\n\nimport Data.Char (isUpper, isAlpha, isSpace)\n\nresponseFor :: String -> String\nresponseFor xs\n  | all isSpace xs = "Fine. Be that way."\n  | upperCase xs = "Woah, chill out!"\n  | last xs == '?' = "Sure."\n  | otherwise = "Whatever."\n\nupperCase :: String -> Bool\nupperCase xs = all isUpper (filter isAlpha xs) && any isAlpha xs	\N	\N	0	3	2014-05-17 22:57:29	2014-05-17 22:57:29	334	bob.hs
671	44	956405c09023195cb3c45a54	superseded	haskell	bob	module Bob\n( responseFor,\n) where\n\nimport Data.Char\n\nresponseFor :: String -> String\nresponseFor xs\n  | and $ map isSpace xs = "Fine. Be that way."\n  | upperCase xs = "Woah, chill out!"\n  | last xs == '?' = "Sure."\n  | otherwise = "Whatever."\n\nupperCase xs = (and $ map (\\x -> not (isAlpha x) || isUpper x) xs) && (or $ map isAlpha xs)	\N	\N	0	2	2014-05-22 00:15:26	2014-05-22 00:15:26	334	bob.hs
672	44	ed081b55a7ec7bb94cff143e	superseded	haskell	bob	module Bob\n( responseFor,\n) where\n\nimport Data.Char\n\nresponseFor :: String -> String\nresponseFor xs\n  | whitespace xs = "Fine. Be that way."\n  | upperCase xs = "Woah, chill out!"\n  | last xs == '?' = "Sure."\n  | otherwise = "Whatever."\n\nwhitespace xs = foldr ((&&) . isSpace) True xs\n\nupperCase xs = (foldr ((&&) . (\\x -> not (isAlpha x) || isUpper x)) True xs) && (atLeastOneAlpha xs)\n\natLeastOneAlpha = foldr ((||) . isAlpha) False	\N	\N	0	1	2014-05-28 08:29:55	2014-05-28 08:29:55	334	bob.hs
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 672, true);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	1	1
2	2	1
3	3	1
4	1	2
5	1	3
6	1	4
7	2	4
8	3	5
9	2	6
10	2	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, created_at, updated_at, confirmed) FROM stdin;
1	1	21	1993-11-17 13:32:55	1993-11-17 13:32:55	t
2	1	14	1990-07-17 01:08:22	1990-07-17 01:08:22	t
3	1	17	2006-02-19 13:12:54	2006-02-19 13:12:54	t
4	1	22	2002-06-19 20:47:30	2002-06-19 20:47:30	t
5	1	10	1996-04-28 13:16:09	1996-04-28 13:16:09	t
6	1	7	2000-08-03 21:32:43	2000-08-03 21:32:43	t
7	1	6	1992-09-18 02:18:33	1992-09-18 02:18:33	t
8	1	29	2012-11-24 05:44:32	2012-11-24 05:44:32	t
9	1	30	1979-03-21 15:52:40	1979-03-21 15:52:40	t
10	1	35	1986-06-02 17:02:22	1986-06-02 17:02:22	t
11	1	15	2006-01-09 10:00:11	2006-01-09 10:00:11	f
12	1	16	2010-08-27 11:55:34	2010-08-27 11:55:34	f
13	1	28	1992-01-23 14:45:26	1992-01-23 14:45:26	f
14	1	31	1977-03-29 08:56:35	1977-03-29 08:56:35	f
15	1	37	2008-03-31 17:25:08	2008-03-31 17:25:08	f
16	1	41	1988-03-24 15:23:43	1988-03-24 15:23:43	f
17	1	42	2005-03-01 23:06:04	2005-03-01 23:06:04	f
18	1	46	1973-12-01 18:01:12	1973-12-01 18:01:12	f
19	2	2	1974-07-20 08:52:32	1974-07-20 08:52:32	t
20	2	35	1990-04-14 18:40:33	1990-04-14 18:40:33	t
21	2	30	2001-10-05 09:59:08	2001-10-05 09:59:08	t
22	2	46	1994-07-06 02:18:08	1994-07-06 02:18:08	t
23	2	18	1982-03-06 22:58:37	1982-03-06 22:58:37	f
24	2	37	2010-08-09 01:14:25	2010-08-09 01:14:25	f
25	3	37	2014-07-20 09:10:26	2014-07-20 09:10:26	f
26	3	2	1988-05-22 06:13:21	1988-05-22 06:13:21	f
27	4	2	1980-03-20 00:41:53	1980-03-20 00:41:53	t
28	4	31	2006-12-29 11:30:40	2006-12-29 11:30:40	t
29	4	21	2006-06-12 18:07:31	2006-06-12 18:07:31	t
30	4	26	1971-11-16 21:04:53	1971-11-16 21:04:53	t
31	4	19	1975-02-11 23:29:05	1975-02-11 23:29:05	t
32	4	24	1973-03-20 00:16:46	1973-03-20 00:16:46	t
33	4	18	2003-02-27 04:34:35	2003-02-27 04:34:35	t
34	4	23	1995-06-26 08:42:25	1995-06-26 08:42:25	t
35	4	25	2011-04-30 14:29:28	2011-04-30 14:29:28	t
36	4	20	1987-01-02 02:04:40	1987-01-02 02:04:40	t
37	4	37	1985-07-19 03:04:42	1985-07-19 03:04:42	f
38	4	11	1979-01-28 15:20:04	1979-01-28 15:20:04	f
39	4	13	2003-06-03 18:02:07	2003-06-03 18:02:07	f
40	5	31	1976-01-16 14:37:54	1976-01-16 14:37:54	t
41	5	39	1978-07-22 23:49:17	1978-07-22 23:49:17	t
42	5	34	1974-06-10 17:30:21	1974-06-10 17:30:21	t
43	5	36	1977-01-02 12:58:53	1977-01-02 12:58:53	t
44	5	32	1994-07-17 12:12:28	1994-07-17 12:12:28	t
45	5	35	1989-05-20 03:22:49	1989-05-20 03:22:49	t
46	5	33	2008-01-16 23:37:53	2008-01-16 23:37:53	t
47	5	38	1979-07-20 21:09:21	1979-07-20 21:09:21	t
48	5	40	2014-01-04 10:48:25	2014-01-04 10:48:25	f
49	5	37	1991-05-31 16:16:54	1991-05-31 16:16:54	f
50	5	2	1994-06-03 07:12:04	1994-06-03 07:12:04	f
51	6	5	1995-04-11 10:47:46	1995-04-11 10:47:46	t
52	6	6	2009-03-13 01:59:55	2009-03-13 01:59:55	t
53	6	7	1994-02-23 07:12:05	1994-02-23 07:12:05	t
54	6	8	2003-12-31 22:21:07	2003-12-31 22:21:07	t
55	6	10	1986-04-01 04:15:52	1986-04-01 04:15:52	t
56	6	11	2004-05-11 06:40:06	2004-05-11 06:40:06	t
57	6	12	1988-03-16 20:08:28	1988-03-16 20:08:28	t
58	6	13	2008-09-07 23:28:01	2008-09-07 23:28:01	t
59	6	14	2013-06-13 01:29:45	2013-06-13 01:29:45	t
60	6	15	1972-06-10 13:34:26	1972-06-10 13:34:26	t
61	6	16	1992-07-29 21:32:52	1992-07-29 21:32:52	t
62	6	17	1978-10-31 20:37:03	1978-10-31 20:37:03	t
63	6	22	1985-11-01 15:45:02	1985-11-01 15:45:02	t
64	6	27	1994-10-05 20:59:57	1994-10-05 20:59:57	t
65	6	28	1985-11-19 15:21:48	1985-11-19 15:21:48	t
66	6	29	1977-08-26 13:39:17	1977-08-26 13:39:17	t
67	6	30	1984-01-24 05:21:39	1984-01-24 05:21:39	t
68	6	31	2006-01-04 02:34:36	2006-01-04 02:34:36	t
69	6	37	1984-02-22 16:27:51	1984-02-22 16:27:51	t
70	6	41	2000-06-19 14:00:06	2000-06-19 14:00:06	t
71	6	42	1981-06-15 02:41:47	1981-06-15 02:41:47	t
72	6	43	1985-07-06 01:56:50	1985-07-06 01:56:50	t
73	6	44	2012-02-17 05:03:58	2012-02-17 05:03:58	t
74	6	45	1973-01-26 23:18:12	1973-01-26 23:18:12	t
75	6	46	2001-12-24 08:04:30	2001-12-24 08:04:30	t
76	6	47	1975-11-01 04:54:05	1975-11-01 04:54:05	t
77	6	48	1995-07-11 04:29:10	1995-07-11 04:29:10	t
78	7	2	1981-07-06 06:10:42	1981-07-06 06:10:42	t
79	7	38	1974-01-25 22:22:30	1974-01-25 22:22:30	t
80	7	31	1973-01-11 12:00:15	1973-01-11 12:00:15	t
81	7	37	1989-05-30 02:38:41	1989-05-30 02:38:41	f
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, created_at, updated_at, name) FROM stdin;
1	baconesia	2014-05-19 06:50:58.984687	2014-05-19 06:50:58.984687	baconesia
2	chocolades	2013-11-25 05:56:05.02246	2013-11-25 05:56:05.02246	chocolades
3	ghost	2014-04-03 07:29:21.038514	2014-04-03 07:29:21.038514	ghost
4	motley	2013-12-13 06:52:45.045072	2013-12-13 06:52:45.045072	motley
5	rugrats	2014-05-21 23:56:03.065695	2014-05-21 23:56:03.065695	rugrats
6	slate	2014-05-26 07:28:06.081749	2014-05-26 07:28:06.081749	slate
7	polkadots	2013-12-23 06:29:38.114614	2013-12-23 06:29:38.114614	polkadots
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: testimonials; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY testimonials (id, body, name, about, homepage, keyword, featured, created_at, updated_at) FROM stdin;
\.


--
-- Name: testimonials_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('testimonials_id_seq', 1, false);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, completed_at, created_at, updated_at, key, is_nitpicker) FROM stdin;
302	26	ruby	bob	6	pending	\N	2014-04-16 23:48:07	2014-04-16 23:48:07	4aae922875099639f68761bd	f
1	8	python	anagram	2	done	2014-03-09 08:15:08	2013-11-15 23:04:22	2013-11-15 23:04:22	7c8f7e4473e84fee9aec702e	t
2	8	ruby	bob	1	pending	\N	2013-12-06 00:53:59	2013-12-06 00:53:59	2ef232641349a98c54faaa6d	f
3	8	haskell	phone-number	2	done	2014-06-15 17:57:16	2014-02-27 05:54:30	2014-02-27 05:54:30	734c7a95d7e4de062f3a8e4b	t
4	10	coffeescript	wordy	1	pending	\N	2014-07-05 09:36:42	2014-07-05 09:36:42	decda06905fab7427be9347e	f
5	10	ruby	nth-prime	3	pending	\N	2014-07-02 17:55:06	2014-07-02 17:55:06	60eb0104ff93045c131dd1f7	f
6	10	ruby	allergies	1	done	2014-06-25 19:09:12	2014-06-21 22:25:47	2014-06-21 22:25:47	229c01d480b5e5744da2db95	t
7	10	haskell	trinary	1	pending	\N	2014-06-21 18:54:50	2014-06-21 18:54:50	9c9e7d7f27b2b4cb2efae695	f
8	10	ruby	bob	11	done	2014-07-25 01:00:45	2014-06-18 17:43:06	2014-06-18 17:43:06	56f513e367a9a6b02ddfa975	t
9	10	ruby	difference-of-squares	1	done	2014-06-20 07:45:42	2014-06-19 23:13:31	2014-06-19 23:13:31	6196f31b9eadd9c1f80631bb	t
10	10	python	bob	1	pending	\N	2014-06-17 02:54:45	2014-06-17 02:54:45	729a88fec92e6dd16989fd77	f
11	11	clojure	gigasecond	1	done	2014-07-19 23:58:25	2014-07-12 21:42:07	2014-07-12 21:42:07	789321f218f8f3eff5b79f0d	t
12	11	ruby	raindrops	1	pending	\N	2014-07-27 14:35:41	2014-07-27 14:35:41	7fb6196986ddff3da231911a	f
13	11	ruby	leap	1	done	2014-07-18 14:20:17	2014-07-14 02:05:44	2014-07-14 02:05:44	eba6f7d076df3cbf5701fc24	t
14	11	javascript	anagram	7	done	2014-07-28 02:25:01	2014-07-15 01:04:20	2014-07-15 01:04:20	87651f2c8cc3e4ccdfb69276	t
15	11	ruby	bob	2	done	2014-07-28 19:48:26.57755	2014-07-16 20:07:08	2014-07-16 20:07:08	0ed2af6c42fd4228d4e4bf3a	t
16	11	ruby	word-count	4	done	2014-07-24 13:09:32	2014-07-12 05:26:02	2014-07-12 05:26:02	6199850021b57537581c84af	t
17	11	elixir	bob	1	done	2014-07-22 18:52:50	2014-07-12 15:11:49	2014-07-12 15:11:49	2f000bd880d57e11877ade09	t
18	14	elixir	word-count	3	pending	\N	2014-04-14 19:39:00	2014-04-14 19:39:00	e5fe96665b2300289fdfdf66	f
19	21	ruby	hamming	8	pending	\N	2014-03-27 08:45:20	2014-03-27 08:45:20	6c390c255cbc7f4b0653ffea	f
20	27	ruby	grains	1	done	2014-02-27 21:33:01	2014-02-25 13:16:19	2014-02-25 13:16:19	9252011528eca991f2383635	t
21	27	clojure	nucleotide-count	1	done	2014-02-05 02:10:16	2014-01-30 03:45:17	2014-01-30 03:45:17	bba398a1841c386e41247f9b	t
22	27	ruby	prime-factors	1	done	2014-03-30 11:57:11	2014-03-21 05:52:48	2014-03-21 05:52:48	4fbd6f9a785556470ed18e00	t
23	27	ruby	beer-song	2	done	2014-06-08 01:36:07	2014-05-30 23:42:35	2014-05-30 23:42:35	7bc2bb4f7f67a77db71bc031	t
24	28	javascript	point-mutations	2	pending	\N	2014-07-06 03:29:20	2014-07-06 03:29:20	271609f064921ae7ae41d9b4	f
25	28	scala	robot-name	2	done	2014-07-28 19:48:27.154956	2014-07-10 17:03:22	2014-07-10 17:03:22	ea71cd2a4cf859c0473fb729	t
26	28	ruby	beer-song	8	done	2014-07-08 20:06:28	2014-07-06 00:24:33	2014-07-06 00:24:33	3dddf353bcaaf4246dc3fbcf	t
27	30	clojure	scrabble-score	1	done	2014-04-29 22:18:30	2014-04-25 02:15:32	2014-04-25 02:15:32	bf3c1cbcd1313060cf437370	t
28	30	clojure	allergies	1	done	2014-06-11 17:30:06	2014-05-31 13:00:40	2014-05-31 13:00:40	44dad654d64922b56bfc9b3d	t
29	30	javascript	robot-name	2	done	2014-07-06 16:38:44	2014-06-04 15:35:11	2014-06-04 15:35:11	c7d6207a83ebff19a8511d8f	t
30	30	haskell	grains	2	pending	\N	2014-04-02 00:06:22	2014-04-02 00:06:22	6d1ab93eeaccd11c6ec05038	f
31	30	ruby	allergies	1	done	2014-05-25 02:23:28	2014-05-19 09:04:50	2014-05-19 09:04:50	08065cd2f521720f1fe593d6	t
32	30	python	bob	2	pending	\N	2014-04-01 07:24:38	2014-04-01 07:24:38	cf76ae076ba6f6d1a3668d1d	f
33	30	go	bob	1	done	2014-04-20 09:13:15	2014-04-12 18:02:44	2014-04-12 18:02:44	4c0608b9880d4b2dfb00b4ea	t
34	30	ruby	space-age	1	done	2014-04-07 04:34:11	2014-03-29 17:08:27	2014-03-29 17:08:27	328083c72d33c9f3b1ea5d6e	t
35	30	clojure	space-age	2	done	2014-04-20 09:23:41	2014-04-01 00:19:59	2014-04-01 00:19:59	976e061c0afbbf12d6981ea1	t
36	30	clojure	bob	7	pending	\N	2014-04-01 02:09:08	2014-04-01 02:09:08	149950be431a06c3ec38c477	f
37	30	ruby	gigasecond	1	pending	\N	2014-04-23 18:10:30	2014-04-23 18:10:30	f5faf9339fb9d288d58d6132	f
38	30	go	scrabble-score	1	done	2014-04-20 18:00:31	2014-04-14 22:56:14	2014-04-14 22:56:14	725485a662cc524d63986a53	t
39	30	haskell	nucleotide-count	1	pending	\N	2014-05-11 08:53:35	2014-05-11 08:53:35	6a90d0c1985ac97449c66520	f
40	30	clojure	queen-attack	3	pending	\N	2014-03-28 00:05:34	2014-03-28 00:05:34	85854791bb646b4e19a57b45	f
41	30	ruby	leap	1	done	2014-03-29 10:34:20	2014-03-19 03:34:41	2014-03-19 03:34:41	81ffec2ae58fd46fd0d51a22	t
42	30	javascript	say	1	pending	\N	2014-05-11 09:17:36	2014-05-11 09:17:36	85af41f659620127c1ea9d09	f
43	30	haskell	bob	1	pending	\N	2014-04-18 02:29:17	2014-04-18 02:29:17	7522354f1d43518d8f2bdd95	f
44	30	coffeescript	anagram	1	done	2014-04-22 23:08:36	2014-04-20 09:18:31	2014-04-20 09:18:31	5dce10ef2b19eccf76039edd	t
45	30	ruby	bob	3	done	2014-04-17 22:34:16	2014-03-11 18:47:56	2014-03-11 18:47:56	c9523c9949812d7270d7c86e	t
46	30	ruby	linked-list	1	pending	\N	2014-05-18 18:13:51	2014-05-18 18:13:51	5c0b58973c97e1d7895a2a53	f
47	30	ruby	binary-search	1	pending	\N	2014-06-25 01:37:25	2014-06-25 01:37:25	f0da2fcc459b1e09c2ee2788	f
48	30	python	rna-transcription	1	done	2014-07-15 15:14:12	2014-07-07 19:44:14	2014-07-07 19:44:14	e40f65d622579cfa1db76338	t
49	30	ruby	hamming	1	pending	\N	2014-04-27 07:03:58	2014-04-27 07:03:58	790c4b3fb927c3fb28243c9d	f
50	30	ruby	anagram	4	pending	\N	2014-04-03 02:37:52	2014-04-03 02:37:52	c10f240a3bf78a02e489b114	f
51	30	ruby	difference-of-squares	1	pending	\N	2014-05-10 14:26:52	2014-05-10 14:26:52	bb39d075a18dd3c9705ebb19	f
52	30	perl5	bob	2	pending	\N	2014-03-03 06:59:13	2014-03-03 06:59:13	84f802d99d701aade50f9b3f	f
53	30	haskell	word-count	4	pending	\N	2014-03-26 19:19:56	2014-03-26 19:19:56	5350ea49d04fdc09dc50218e	f
54	30	perl5	rna-transcription	2	done	2014-03-09 10:33:01	2014-03-03 20:09:33	2014-03-03 20:09:33	22d353db2f4c95e32ec42dd2	t
55	30	haskell	meetup	1	done	2014-05-11 01:33:19	2014-05-01 17:24:53	2014-05-01 17:24:53	6bbc8174bdd8954220e8713c	t
56	30	haskell	prime-factors	3	pending	\N	2014-04-05 22:39:14	2014-04-05 22:39:14	663c5b944f436820c1a2c74b	f
57	30	perl5	triangle	1	done	2014-06-11 18:10:01	2014-06-07 17:12:36	2014-06-07 17:12:36	c3f21894f8260cbd841e882e	t
58	30	python	allergies	1	done	2014-06-26 09:35:07	2014-06-19 17:51:03	2014-06-19 17:51:03	0ea4e2031ad0b0663b5112b1	t
59	30	ruby	raindrops	1	done	2014-03-08 12:45:11	2014-03-04 19:49:19	2014-03-04 19:49:19	b82fbc519f4a65e65ca7fbba	t
60	30	haskell	anagram	1	done	2014-06-15 06:04:31	2014-06-11 00:52:23	2014-06-11 00:52:23	db6c7f4a6f510ba64919004b	t
61	30	go	leap	1	pending	\N	2014-05-20 11:48:36	2014-05-20 11:48:36	1c7bd4cb6e72ada8be8dd6b9	f
62	30	haskell	allergies	3	done	2014-06-26 09:23:32	2014-03-17 03:23:07	2014-03-17 03:23:07	445b8332b46266d55314c6e3	t
63	30	ruby	roman-numerals	2	done	2014-04-08 23:43:54	2014-03-25 20:12:48	2014-03-25 20:12:48	f7f186b75a638d6dc778d51d	t
64	30	elixir	bob	1	done	2014-04-08 09:06:47	2014-04-07 10:29:22	2014-04-07 10:29:22	ceaf3f035d12f8ccaef63559	t
303	26	ruby	etl	2	pending	\N	2014-06-20 20:15:18	2014-06-20 20:15:18	2cefad858577b2a1b0e82614	f
65	32	ruby	anagram	2	done	2014-03-28 12:45:08	2014-01-16 19:38:57	2014-01-16 19:38:57	8ca2c390f490552bd9860adb	t
66	32	elixir	phone-number	3	done	2014-05-22 23:49:06	2013-12-24 11:34:00	2013-12-24 11:34:00	a4305a86bc86def2880f3b7d	t
67	32	ruby	space-age	2	pending	\N	2014-03-07 00:18:26	2014-03-07 00:18:26	09c972a90cd79f0ed1267fca	f
68	32	ruby	bob	2	pending	\N	2014-01-29 09:31:21	2014-01-29 09:31:21	4ae723cba31c899241024c50	f
69	32	ruby	leap	5	done	2014-07-11 14:26:56	2014-02-23 12:46:58	2014-02-23 12:46:58	c6e78c487c7b766e7c9a3510	t
70	32	javascript	nucleotide-count	1	done	2014-04-19 07:24:16	2014-04-17 01:27:00	2014-04-17 01:27:00	8dfbc8cf0842b856b25996ec	t
71	32	javascript	bob	3	done	2013-11-21 01:07:23	2013-11-13 03:18:36	2013-11-13 03:18:36	1499da8f9d0b2f36420fb075	t
72	32	ruby	phone-number	1	pending	\N	2013-11-18 17:59:27	2013-11-18 17:59:27	f8c8bab8dac05846dbe3a8bc	f
73	32	python	accumulate	1	done	2014-02-05 08:41:23	2014-01-26 17:59:32	2014-01-26 17:59:32	6c3a66f5b717995d6984041d	t
74	32	ruby	raindrops	1	done	2014-01-14 03:23:05	2014-01-13 04:15:21	2014-01-13 04:15:21	996ec3f82dbcf9c40aed930d	t
75	32	haskell	binary	2	done	2014-06-08 17:37:49	2014-01-18 08:48:19	2014-01-18 08:48:19	7281115fb5cb47b70143e5ba	t
76	32	fsharp	triangle	1	done	2013-11-29 17:22:36	2013-11-27 23:11:20	2013-11-27 23:11:20	34fd8a3ca4c20be5fe87aa53	t
77	32	ruby	word-count	3	done	2014-02-10 03:12:40	2013-12-25 07:59:52	2013-12-25 07:59:52	f027b89e0f505e096e21845e	t
78	32	ruby	trinary	1	done	2014-01-11 07:56:41	2014-01-03 20:27:34	2014-01-03 20:27:34	832fd738156926ad0a7e6550	t
79	32	go	triangle	1	done	2014-02-08 12:36:47	2014-01-30 05:02:07	2014-01-30 05:02:07	4c09e473b26088cede3595de	t
80	32	ruby	house	1	done	2014-01-04 00:46:09	2013-12-25 12:52:20	2013-12-25 12:52:20	468dfaf6fd62db80559d65da	t
81	32	go	atbash-cipher	2	done	2014-02-25 09:18:04	2013-12-24 17:37:36	2013-12-24 17:37:36	ef56cd9b38d0c88efbad978a	t
82	32	clojure	word-count	2	done	2014-01-07 19:24:06	2013-11-16 03:30:54	2013-11-16 03:30:54	320a9332f90d40b8d5885495	t
83	32	ruby	nucleotide-count	2	done	2014-03-16 09:49:06	2014-02-19 05:32:55	2014-02-19 05:32:55	c73e80e4c1a07a3e223ebc51	t
84	32	haskell	nucleotide-count	1	done	2014-02-22 13:27:58	2014-02-20 02:31:27	2014-02-20 02:31:27	03f61f2ff298f1fd044b8306	t
85	32	ruby	rna-transcription	1	done	2014-02-06 03:06:20	2014-01-30 14:55:17	2014-01-30 14:55:17	e50e0403674bfee3d084a679	t
86	32	clojure	bob	1	pending	\N	2014-03-16 23:31:27	2014-03-16 23:31:27	b7a9b3c14f06b4e340331740	f
87	32	python	anagram	1	done	2014-03-11 03:35:44	2014-03-10 07:07:21	2014-03-10 07:07:21	912562f54ae7571471898b64	t
88	32	ruby	grains	3	pending	\N	2014-01-02 11:07:00	2014-01-02 11:07:00	8fa44bcf9ed243958bd571a0	f
89	32	coffeescript	word-count	1	pending	\N	2014-06-01 10:38:28	2014-06-01 10:38:28	bfc104d38dc62312de1383c3	f
90	32	ruby	hamming	1	pending	\N	2013-11-28 00:39:19	2013-11-28 00:39:19	0ea6efa9c189de9efbc0f3de	f
91	32	python	beer-song	1	done	2013-12-05 07:14:08	2013-12-01 07:21:28	2013-12-01 07:21:28	e01db3ecceb1c63d84e99b72	t
92	32	perl5	binary	1	done	2014-05-22 19:35:41	2014-05-15 20:48:55	2014-05-15 20:48:55	b883ef471badf0c120b9dcb6	t
93	32	javascript	allergies	1	done	2013-12-06 13:22:59	2013-11-30 11:57:24	2013-11-30 11:57:24	4996dd0a4435bc8324044899	t
94	32	haskell	point-mutations	1	pending	\N	2014-01-21 21:01:13	2014-01-21 21:01:13	5d3f90584eb8d1b2589f5a23	f
95	37	clojure	point-mutations	1	done	2014-06-29 14:46:18	2014-06-18 19:27:58	2014-06-18 19:27:58	69437a06d4a60d1a7e589f03	t
96	37	ruby	rna-transcription	1	done	2014-06-29 23:26:00	2014-06-21 10:14:25	2014-06-21 10:14:25	e3b70fbbe59b1ebda3111972	t
97	37	ruby	bob	6	pending	\N	2014-07-01 09:14:22	2014-07-01 09:14:22	3db4b8907f39960fad73e428	f
98	37	ruby	anagram	4	pending	\N	2014-06-17 16:34:25	2014-06-17 16:34:25	56383db7048366e8f4d7c21c	f
99	37	javascript	grains	1	pending	\N	2014-06-25 18:27:41	2014-06-25 18:27:41	788d0393d5c14d9edbb7621d	f
100	37	haskell	bob	1	pending	\N	2014-06-19 06:23:48	2014-06-19 06:23:48	6149b4042e3902d5affe4620	f
101	39	haskell	nucleotide-count	1	done	2014-06-19 17:22:43	2014-06-11 12:08:58	2014-06-11 12:08:58	1ab184693851410f102cc225	t
102	39	ruby	grade-school	1	done	2014-05-09 05:56:08	2014-05-05 00:25:57	2014-05-05 00:25:57	a61d6fa7fef9a4329d2439df	t
103	39	haskell	word-count	3	done	2014-06-24 22:12:20	2014-05-05 04:26:55	2014-05-05 04:26:55	07e27a59d19e6d4537af7ef1	t
104	39	clojure	roman-numerals	1	done	2014-05-08 00:21:31	2014-05-01 19:31:49	2014-05-01 19:31:49	d6695dea9d8d848519b08019	t
105	39	python	bob	1	done	2014-05-30 11:42:23	2014-05-23 15:12:06	2014-05-23 15:12:06	feb325dd917e522e60bda2be	t
106	39	ruby	strain	1	done	2014-04-30 02:48:26	2014-04-24 11:51:56	2014-04-24 11:51:56	8dbd66213fdbeba013647b82	t
107	39	ruby	raindrops	3	done	2014-06-18 14:56:30	2014-04-26 17:54:04	2014-04-26 17:54:04	18c51c0139436dcd35c4f966	t
108	43	ruby	bob	7	pending	\N	2014-07-24 16:07:19	2014-07-24 16:07:19	ba119d184f1e4a3ac6765e99	f
109	43	haskell	beer-song	2	pending	\N	2014-07-26 17:18:31	2014-07-26 17:18:31	4edd57f6e3542a38a0f5de5d	f
110	43	ruby	binary-search-tree	2	done	2014-07-28 08:03:03	2014-07-25 14:49:26	2014-07-25 14:49:26	08846c053708a329431f78e1	t
111	43	javascript	meetup	2	pending	\N	2014-07-24 12:42:42	2014-07-24 12:42:42	52ad384dd896f5072e0d858c	f
112	43	ruby	circular-buffer	4	done	2014-07-28 19:48:32.313511	2014-07-25 18:18:00	2014-07-25 18:18:00	32142356b0a2f009370537e8	t
113	43	objective-c	bob	1	pending	\N	2014-07-27 08:33:59	2014-07-27 08:33:59	16f8744a5a1d46336f4652a1	f
114	45	ruby	beer-song	4	done	2014-06-29 17:36:48	2014-01-19 07:41:13	2014-01-19 07:41:13	3debea97e59ad803cb8a9cb9	t
115	47	elixir	pythagorean-triplet	1	pending	\N	2014-05-21 07:40:41	2014-05-21 07:40:41	9965d01caa241844c707cc7e	f
116	47	ruby	anagram	4	done	2014-06-09 10:13:45	2014-05-21 09:30:06	2014-05-21 09:30:06	329f8a68f156fe4ebf7505fe	t
117	47	javascript	beer-song	3	done	2014-06-05 19:52:47	2014-05-25 13:57:46	2014-05-25 13:57:46	194026380ad68f1b1f962ffa	t
118	47	go	rna-transcription	4	pending	\N	2014-05-21 01:42:29	2014-05-21 01:42:29	d186c04ffa974bd964b1bcab	f
119	47	ruby	raindrops	8	done	2014-07-28 19:48:32.870511	2014-05-18 01:35:39	2014-05-18 01:35:39	bb2064a1946000e16dafd247	t
120	47	ruby	word-count	5	done	2014-05-18 16:23:59	2014-05-17 14:20:19	2014-05-17 14:20:19	b122deee80e498deac517511	t
121	47	ruby	space-age	3	done	2014-07-06 11:10:32	2014-06-03 21:12:08	2014-06-03 21:12:08	56e35e180394f011ed2d7120	t
122	47	javascript	word-count	1	done	2014-05-21 15:24:59	2014-05-19 09:42:50	2014-05-19 09:42:50	6abf7c4065f80f5c0bb0e6b5	t
123	47	ruby	bob	2	done	2014-07-13 15:27:31	2014-05-31 09:34:48	2014-05-31 09:34:48	4dbace5f968caabbc5d8e2ae	t
124	47	javascript	prime-factors	1	done	2014-05-31 10:21:55	2014-05-23 06:10:22	2014-05-23 06:10:22	c498002aa9596aa318bd2348	t
125	47	python	word-count	7	pending	\N	2014-05-22 20:21:44	2014-05-22 20:21:44	1f47e0d97b677b251bf78ceb	f
126	47	elixir	grains	1	done	2014-06-11 02:57:37	2014-06-04 01:13:53	2014-06-04 01:13:53	92fd20a80af0b8a088bc53e7	t
127	47	javascript	anagram	1	done	2014-05-28 15:50:40	2014-05-26 01:29:38	2014-05-26 01:29:38	35665d355820e6486b30ce37	t
128	47	clojure	word-count	3	done	2014-07-26 03:48:51	2014-06-28 08:16:06	2014-06-28 08:16:06	a635a878fc48a1e63cd58225	t
129	47	scala	hamming	1	done	2014-06-28 17:58:02	2014-06-21 06:59:30	2014-06-21 06:59:30	d6fd391f405f7a1dfad6517b	t
130	47	go	leap	2	done	2014-07-09 12:20:28	2014-05-16 00:52:19	2014-05-16 00:52:19	971c8ea81bd519d4c24e537c	t
131	47	perl5	accumulate	1	pending	\N	2014-06-17 01:23:10	2014-06-17 01:23:10	fd1be48a11e56e6d7e093eab	f
132	47	haskell	rna-transcription	1	done	2014-05-26 13:46:57	2014-05-19 20:39:07	2014-05-19 20:39:07	8b2e37aa4a917e40897e3b33	t
133	47	javascript	robot-name	1	done	2014-06-11 05:32:11	2014-06-02 12:37:36	2014-06-02 12:37:36	f5870db00d996cc8e326ca90	t
134	47	javascript	point-mutations	1	done	2014-05-28 09:47:07	2014-05-25 11:00:33	2014-05-25 11:00:33	c358c17b1724941f83c3a3ad	t
135	47	haskell	beer-song	3	done	2014-07-24 15:51:40	2014-06-06 06:55:01	2014-06-06 06:55:01	55fe68ba10a010636a87e8fa	t
136	47	javascript	gigasecond	2	done	2014-07-21 11:24:29	2014-05-15 22:36:05	2014-05-15 22:36:05	65bcd8a13da04ccc25fbbac1	t
137	47	python	rna-transcription	2	pending	\N	2014-05-24 15:46:47	2014-05-24 15:46:47	c0cd9eb81fd957132cc7adbf	f
138	47	go	raindrops	3	done	2014-06-26 00:40:32	2014-05-27 02:56:27	2014-05-27 02:56:27	05d0fa8d18446bb02f31251f	t
139	47	haskell	robot-name	2	pending	\N	2014-05-17 15:40:47	2014-05-17 15:40:47	d9631bfba6ec9eeb5e866c2f	f
140	48	ruby	leap	1	pending	\N	2014-06-30 02:16:03	2014-06-30 02:16:03	384093beaddba50b8bafd558	f
141	25	python	bob	2	pending	\N	2014-05-21 11:48:25	2014-05-21 11:48:25	13849fa1fb976d4544d4c771	f
142	6	ruby	bob	1	pending	\N	2014-07-22 22:15:20	2014-07-22 22:15:20	c2081691db9b29aecfc653b0	f
143	22	javascript	food-chain	1	pending	\N	2014-02-06 03:54:53	2014-02-06 03:54:53	ddd04404fb06b2ee175f3f5d	f
144	22	clojure	bob	5	pending	\N	2014-03-01 20:42:14	2014-03-01 20:42:14	fe80bb698e154deca836b9af	f
145	22	ruby	series	1	pending	\N	2014-05-27 21:16:09	2014-05-27 21:16:09	a07e487ca02c35ddeb31bb41	f
146	22	ruby	bob	1	pending	\N	2014-03-22 13:00:19	2014-03-22 13:00:19	da3d15cee19bb0f40e01f373	f
147	22	python	rna-transcription	1	pending	\N	2014-02-25 19:06:34	2014-02-25 19:06:34	2fe148ea4d67e30a383e6040	f
148	22	haskell	grade-school	1	pending	\N	2014-02-20 12:24:56	2014-02-20 12:24:56	0d93644d25128114fa58fa86	f
149	22	ruby	etl	1	pending	\N	2014-06-14 17:50:48	2014-06-14 17:50:48	f69a3772b88485c4a7676f51	f
150	22	ruby	accumulate	1	pending	\N	2014-03-10 23:40:53	2014-03-10 23:40:53	22004ed3a71ed1c00a21289c	f
151	22	go	robot-name	2	pending	\N	2014-05-02 12:59:18	2014-05-02 12:59:18	4a362ca500f050902c08ec3d	f
152	22	ruby	rna-transcription	3	pending	\N	2014-03-19 04:31:49	2014-03-19 04:31:49	eeca7575d0bb84a2a5c668da	f
153	22	haskell	bob	2	pending	\N	2014-04-01 18:02:12	2014-04-01 18:02:12	7eb9db00cbd6ef7e44645159	f
154	22	scala	word-count	3	pending	\N	2014-03-26 23:31:01	2014-03-26 23:31:01	3bee48ace7efdf9c530fda98	f
155	22	go	gigasecond	2	pending	\N	2014-04-27 00:02:22	2014-04-27 00:02:22	08df6b37d6f28caf628bd2c7	f
156	22	ruby	hamming	3	pending	\N	2014-01-31 01:32:51	2014-01-31 01:32:51	fe48ca175c58e4f62fbe0791	f
157	22	javascript	leap	5	pending	\N	2014-02-13 14:41:54	2014-02-13 14:41:54	f97ba3f651d1ba01dd96fe5d	f
158	22	javascript	atbash-cipher	1	pending	\N	2014-02-15 08:52:08	2014-02-15 08:52:08	66ce5a12460e5e1c1312dc4f	f
159	22	elixir	rna-transcription	1	pending	\N	2014-02-21 06:59:00	2014-02-21 06:59:00	341fa25418a8a76200e06aa4	f
160	22	clojure	leap	2	pending	\N	2014-03-05 00:04:08	2014-03-05 00:04:08	81b559f974a2b6685dd376f7	f
161	22	ruby	raindrops	1	pending	\N	2014-02-05 15:59:08	2014-02-05 15:59:08	98ca8efe33fc534a3276c478	f
162	22	elixir	bob	3	pending	\N	2014-03-23 09:35:51	2014-03-23 09:35:51	9b1ffe1bcb7e25d1a1634c53	f
163	22	coffeescript	bob	3	pending	\N	2014-01-28 05:42:22	2014-01-28 05:42:22	4cea9d053a742885b553dc66	f
164	22	clojure	rna-transcription	2	pending	\N	2014-03-11 21:06:02	2014-03-11 21:06:02	7804c0605d878475a1384d9f	f
165	22	haskell	point-mutations	2	pending	\N	2014-02-08 17:01:49	2014-02-08 17:01:49	0c45970d14f6e603a5a6a622	f
166	22	python	bob	2	pending	\N	2014-04-07 22:32:19	2014-04-07 22:32:19	acf565e3748d814aeb710fe8	f
167	22	python	leap	1	pending	\N	2014-03-17 21:24:28	2014-03-17 21:24:28	9683347a480e0d2d4c7aa270	f
168	22	go	binary	2	pending	\N	2014-02-08 16:46:03	2014-02-08 16:46:03	12b90cd23c2d27c80ebae94c	f
169	22	elixir	grains	1	pending	\N	2014-03-20 18:05:20	2014-03-20 18:05:20	6e723e19e2eecc90962f0d98	f
170	22	javascript	nucleotide-count	1	pending	\N	2014-03-12 20:03:55	2014-03-12 20:03:55	1427856b173c239a47de3f33	f
171	22	ruby	anagram	3	pending	\N	2014-02-23 02:39:38	2014-02-23 02:39:38	51c9fd3ec070c2e4294a0b5c	f
172	22	ruby	robot-name	1	pending	\N	2014-03-11 12:44:47	2014-03-11 12:44:47	0e16ef56644d3ca2418b8c22	f
173	22	haskell	word-count	2	pending	\N	2014-01-29 18:15:10	2014-01-29 18:15:10	87bbb2dd18d56487859ae863	f
174	22	javascript	bob	1	pending	\N	2014-02-10 01:12:27	2014-02-10 01:12:27	b2a346e0739b647ef9563fa5	f
175	22	python	word-count	2	pending	\N	2014-02-18 23:23:43	2014-02-18 23:23:43	025d620b57aa08e6459eea33	f
176	22	elixir	triangle	1	pending	\N	2014-04-04 13:15:00	2014-04-04 13:15:00	56d649529e13501b87c7c4ea	f
177	22	haskell	rna-transcription	2	pending	\N	2014-06-09 04:21:52	2014-06-09 04:21:52	ff6327f13d6c6ea96a88d290	f
178	22	perl5	etl	1	pending	\N	2014-02-19 10:29:22	2014-02-19 10:29:22	a863f1c89ac1819e6ba344aa	f
179	22	go	etl	2	pending	\N	2014-03-31 17:00:32	2014-03-31 17:00:32	4666cfd435b09cb12c2407cb	f
180	22	go	scrabble-score	1	pending	\N	2014-03-07 15:47:28	2014-03-07 15:47:28	191e02c2c236a9f159d105b6	f
181	22	javascript	anagram	3	pending	\N	2014-02-26 14:00:36	2014-02-26 14:00:36	6b5c361230c515dc6a9c59f6	f
182	16	clojure	bob	1	pending	\N	2014-07-17 15:41:30	2014-07-17 15:41:30	521db3d7bda1100dadf8d34f	f
183	16	javascript	robot-name	1	pending	\N	2014-06-28 15:26:02	2014-06-28 15:26:02	a0d169225280eb76b88569c1	f
184	16	elixir	bob	1	pending	\N	2014-07-11 01:57:01	2014-07-11 01:57:01	e4c0e7a7c73de0a896184f77	f
185	16	ruby	hamming	3	pending	\N	2014-06-30 10:29:47	2014-06-30 10:29:47	d19fda67dfc76875b7c89a85	f
186	16	perl5	kindergarten-garden	1	pending	\N	2014-06-24 10:56:47	2014-06-24 10:56:47	bb1dd073cb22ceaf4e70429d	f
187	16	elixir	accumulate	2	pending	\N	2014-06-23 22:15:38	2014-06-23 22:15:38	03c9a1f40221f50409b76bcc	f
188	16	ruby	anagram	3	pending	\N	2014-06-23 10:30:51	2014-06-23 10:30:51	9df8d5313eb9503a6faf10b2	f
189	16	elixir	sublist	1	pending	\N	2014-06-30 09:57:01	2014-06-30 09:57:01	bceacae3a3754a90a4c19a70	f
190	16	clojure	word-count	2	pending	\N	2014-07-06 16:42:20	2014-07-06 16:42:20	b352b2e10974065f054e83cf	f
191	16	ruby	proverb	1	pending	\N	2014-06-22 04:28:52	2014-06-22 04:28:52	289a31bc0b764dd0d3dab696	f
192	16	objective-c	grade-school	1	pending	\N	2014-06-29 08:40:33	2014-06-29 08:40:33	cac831c77c19909d4fda4512	f
193	16	scala	grade-school	1	pending	\N	2014-06-29 01:15:51	2014-06-29 01:15:51	e0a3689ed307ceb78b3c47cc	f
194	16	javascript	bob	3	pending	\N	2014-06-24 17:35:53	2014-06-24 17:35:53	e0a896c10fc3ddd834db7cda	f
195	16	go	leap	6	pending	\N	2014-06-22 04:08:13	2014-06-22 04:08:13	1097e4f81be2c707d8b90750	f
196	16	ruby	bob	4	pending	\N	2014-06-23 05:44:36	2014-06-23 05:44:36	49bd44f4c0715a4669b4fd38	f
197	16	ruby	word-count	7	pending	\N	2014-06-25 18:27:18	2014-06-25 18:27:18	ae9f8a15b05059ed1ec9ddfb	f
198	16	haskell	binary	2	pending	\N	2014-07-13 18:54:21	2014-07-13 18:54:21	21114cca7d4ced79d1e3502a	f
199	16	haskell	etl	3	pending	\N	2014-06-24 08:16:17	2014-06-24 08:16:17	7cee8cb72a9370fe29512ae3	f
200	16	python	rna-transcription	2	pending	\N	2014-07-08 18:13:32	2014-07-08 18:13:32	3a02cbccd8930f9a9962947e	f
201	16	haskell	phone-number	1	pending	\N	2014-07-06 00:18:48	2014-07-06 00:18:48	e742ece57722b85b83762c53	f
202	16	ruby	grains	1	pending	\N	2014-06-22 19:31:18	2014-06-22 19:31:18	6dd1b9ff518f41ad2071aa3b	f
203	16	python	phone-number	2	pending	\N	2014-07-08 03:42:45	2014-07-08 03:42:45	e716823867b95429931f7cb7	f
204	16	python	word-count	3	pending	\N	2014-06-27 06:20:29	2014-06-27 06:20:29	4d6e522c263d21cb1404b421	f
205	16	ruby	rna-transcription	1	pending	\N	2014-06-29 13:45:54	2014-06-29 13:45:54	e7104460b2ee672882b3a3c8	f
206	16	haskell	anagram	2	pending	\N	2014-06-27 05:44:35	2014-06-27 05:44:35	38408222012af01227ba1789	f
207	16	ruby	leap	1	pending	\N	2014-07-14 02:03:27	2014-07-14 02:03:27	6ae73e8b44a665b12444177d	f
208	16	ruby	etl	1	pending	\N	2014-06-24 10:35:44	2014-06-24 10:35:44	c410d81cd96f4cbb856eab2a	f
209	16	scala	bob	1	pending	\N	2014-07-19 16:06:29	2014-07-19 16:06:29	f91fb4de6a03cc63acc65def	f
210	16	elixir	roman-numerals	1	pending	\N	2014-06-22 10:18:48	2014-06-22 10:18:48	1909fd1a85cd2aa3db81c72f	f
211	16	ruby	clock	1	pending	\N	2014-06-24 18:58:58	2014-06-24 18:58:58	120a1eaeb0dbd32787829e41	f
212	16	haskell	simple-linked-list	1	pending	\N	2014-07-26 06:45:25	2014-07-26 06:45:25	cd5c8791d138377ac06e2f66	f
213	16	haskell	crypto-square	2	pending	\N	2014-06-27 16:41:51	2014-06-27 16:41:51	0b28b45be2dbdd3bc02e421c	f
214	16	elixir	grains	1	pending	\N	2014-07-16 22:28:12	2014-07-16 22:28:12	b2e1af711cc29b627e87e59f	f
215	16	ruby	phone-number	1	pending	\N	2014-07-01 18:28:50	2014-07-01 18:28:50	ef7cd0d8a9b10883ed69a302	f
216	19	ruby	bob	5	done	2014-06-28 00:54:39	2014-04-24 07:43:43	2014-04-24 07:43:43	e8e4c8c35566b58d79a47721	t
217	20	ruby	space-age	1	done	2014-04-22 07:50:53	2014-04-18 16:26:38	2014-04-18 16:26:38	c8be00d31579078e51fb96d1	t
218	20	clojure	etl	2	done	2014-06-16 23:33:40	2014-03-18 10:00:34	2014-03-18 10:00:34	444a8c26c5e815f6695cb431	t
219	20	ruby	leap	1	done	2014-03-21 22:23:58	2014-03-21 08:11:35	2014-03-21 08:11:35	f651f109a2ee40ea2b3455ed	t
220	20	ruby	rna-transcription	2	done	2014-06-18 18:12:50	2014-04-05 08:01:20	2014-04-05 08:01:20	c747363a6d5154b53dc0bf30	t
221	20	ruby	grains	1	done	2014-03-02 23:56:40	2014-02-25 16:16:28	2014-02-25 16:16:28	c2c963b8ef37c483424b0d57	t
222	20	ruby	nucleotide-count	2	done	2014-05-09 06:33:12	2014-04-23 17:18:56	2014-04-23 17:18:56	fdbe2aeecf576c7ea5eaa975	t
223	35	ruby	nucleotide-count	5	done	2014-06-30 01:32:14	2014-01-27 08:52:03	2014-01-27 08:52:03	e7b71b33e9e8e680b22f8f27	t
224	29	ruby	bob	3	done	2014-05-31 21:13:44	2014-01-18 15:08:21	2014-01-18 15:08:21	0afbaf34a28f73343f85152b	t
225	34	ruby	bob	1	done	2014-06-12 00:54:55	2014-06-10 03:35:57	2014-06-10 03:35:57	6e46e91479c9a208e6d25177	t
226	34	ruby	scrabble-score	3	done	2014-03-21 12:56:46	2013-11-30 06:08:36	2013-11-30 06:08:36	69592c5418c67f77f02d583c	t
227	34	go	anagram	1	done	2013-12-24 15:45:26	2013-12-15 14:07:34	2013-12-15 14:07:34	1dd70317cf35317c176a82b1	t
228	34	ruby	hamming	1	done	2013-12-10 23:59:34	2013-12-07 12:26:14	2013-12-07 12:26:14	cff3e3322408506c29a66c70	t
229	13	ruby	word-count	5	pending	\N	2014-07-28 08:59:28	2014-07-28 08:59:28	a5f0bae30f1d2ced8254b5c5	f
230	13	objective-c	bob	1	pending	\N	2014-07-28 10:42:34	2014-07-28 10:42:34	849eaf54d3844973d128be56	f
231	13	elixir	space-age	1	pending	\N	2014-07-28 11:15:26	2014-07-28 11:15:26	478efe6f2d7a295ae852db81	f
232	13	elixir	word-count	2	pending	\N	2014-07-28 04:21:14	2014-07-28 04:21:14	b23a51361c616bc2d3b12896	f
233	13	go	leap	4	pending	\N	2014-07-28 06:22:15	2014-07-28 06:22:15	2dbb17df82a2b2776ac2888d	f
234	13	ruby	anagram	2	pending	\N	2014-07-28 10:01:51	2014-07-28 10:01:51	80e771a9beeeb16ce6741f34	f
235	13	clojure	bob	1	pending	\N	2014-07-28 04:43:28	2014-07-28 04:43:28	58a90829353841a8f4d8aea0	f
236	13	ruby	bob	2	pending	\N	2014-07-28 08:39:08	2014-07-28 08:39:08	fa7d3fbbd74e68a0cde6631d	f
237	13	python	bob	1	pending	\N	2014-07-28 02:40:21	2014-07-28 02:40:21	43362de813e24fa5ec4b772e	f
238	13	go	accumulate	1	pending	\N	2014-07-28 07:52:29	2014-07-28 07:52:29	6eb5b70e29f478916ad34318	f
239	13	go	phone-number	1	pending	\N	2014-07-28 04:31:58	2014-07-28 04:31:58	b5d6ad7a928fe08dd09602c5	f
240	40	haskell	bob	1	pending	\N	2014-02-07 16:31:15	2014-02-07 16:31:15	9d6dce447b6682cbdbdfa1d1	f
241	40	clojure	bob	3	pending	\N	2014-03-10 13:48:09	2014-03-10 13:48:09	bd69ca4ef5dd515119e971e4	f
242	40	javascript	bob	1	pending	\N	2014-07-07 13:42:10	2014-07-07 13:42:10	e46060b970ec22ba978367f8	f
243	40	python	pascals-triangle	1	pending	\N	2014-05-01 17:23:57	2014-05-01 17:23:57	ba54fb7595f083f59ee80da2	f
244	40	ruby	binary-search-tree	4	pending	\N	2014-02-13 20:40:34	2014-02-13 20:40:34	9766b6c74c293dabc3ee9a0e	f
245	5	ruby	bob	1	pending	\N	2014-04-04 17:22:50	2014-04-04 17:22:50	e8bd7519b070fa0301116df8	f
246	5	haskell	bob	2	pending	\N	2014-02-20 08:50:01	2014-02-20 08:50:01	dd9ef65899b632c5459cd954	f
247	5	perl5	scrabble-score	1	pending	\N	2014-02-10 05:21:49	2014-02-10 05:21:49	ff769c5405573a5b3e98149e	f
248	5	python	nucleotide-count	2	pending	\N	2014-04-23 05:34:42	2014-04-23 05:34:42	f61e497446ec00e05788d96d	f
249	5	haskell	gigasecond	1	pending	\N	2014-03-15 14:29:51	2014-03-15 14:29:51	ff05d3b0150cdc129e7308d2	f
250	5	ruby	nucleotide-count	2	pending	\N	2014-01-15 08:13:59	2014-01-15 08:13:59	0acd3e7188181a05b6151abb	f
251	5	elixir	bob	5	pending	\N	2014-02-21 13:34:37	2014-02-21 13:34:37	1f9f30cb6f2055e404152b28	f
252	5	ruby	hamming	3	pending	\N	2014-01-25 19:30:25	2014-01-25 19:30:25	2ff15e98e48d7b52351374b8	f
253	33	haskell	beer-song	5	pending	\N	2014-07-07 06:58:07	2014-07-07 06:58:07	5ce01683f22bc7152458a483	f
254	15	javascript	bob	2	pending	\N	2014-03-12 23:53:02	2014-03-12 23:53:02	af9b2633b56b6eb135e5a2b4	f
255	17	python	anagram	1	pending	\N	2014-01-19 07:13:56	2014-01-19 07:13:56	3fe0fb1c1d6f9da29b6003c9	f
256	17	ruby	nth-prime	1	pending	\N	2014-05-17 10:42:17	2014-05-17 10:42:17	74d2667c1ff2faf8d5b67d28	f
257	17	elixir	leap	1	pending	\N	2014-01-11 15:12:16	2014-01-11 15:12:16	e1f948652cd3690aa76c1a07	f
258	17	ruby	bob	1	pending	\N	2014-02-27 23:18:46	2014-02-27 23:18:46	f6cebc96ad1c916c092b6108	f
259	23	haskell	grade-school	2	pending	\N	2014-07-27 03:39:59	2014-07-27 03:39:59	8ac1fa8c0e54094ec1ca9f81	f
260	23	ruby	scrabble-score	5	pending	\N	2014-07-26 04:04:51	2014-07-26 04:04:51	ea897dcb2ccaf8a4b4bff276	f
261	23	javascript	anagram	1	pending	\N	2014-07-25 23:30:41	2014-07-25 23:30:41	32d68e18ce47a472fe734aa5	f
262	23	ruby	nucleotide-count	1	pending	\N	2014-07-25 16:00:11	2014-07-25 16:00:11	eaded9f2959f00bddd80f951	f
263	23	clojure	point-mutations	1	pending	\N	2014-07-27 13:26:02	2014-07-27 13:26:02	9e16d9494646de1c1df4d3db	f
264	23	elixir	bob	5	pending	\N	2014-07-26 00:35:25	2014-07-26 00:35:25	59797cbc9788355353e1103d	f
265	23	clojure	nucleotide-count	1	pending	\N	2014-07-27 01:33:17	2014-07-27 01:33:17	2ba051b83b135ce921e51fbc	f
266	23	ruby	raindrops	1	pending	\N	2014-07-26 11:09:00	2014-07-26 11:09:00	31d6d65c5a6b409e101e0c50	f
267	23	haskell	phone-number	2	pending	\N	2014-07-26 01:00:22	2014-07-26 01:00:22	a29ec31a7e17f527f0091182	f
268	23	ruby	space-age	1	pending	\N	2014-07-28 16:24:04	2014-07-28 16:24:04	6895a819dcef10f9bcf314f9	f
269	23	perl5	point-mutations	1	pending	\N	2014-07-27 15:48:50	2014-07-27 15:48:50	8a4974c386569141908c2840	f
270	23	ruby	word-count	7	pending	\N	2014-07-26 07:44:00	2014-07-26 07:44:00	5f6033a6ca909108b8f8fcf3	f
271	23	elixir	point-mutations	2	pending	\N	2014-07-26 09:24:02	2014-07-26 09:24:02	9bf0aa415a91bf04401ea16b	f
272	23	go	clock	1	pending	\N	2014-07-25 15:02:55	2014-07-25 15:02:55	1700c853423e78b4a30b3c58	f
273	23	elixir	word-count	3	pending	\N	2014-07-25 18:52:33	2014-07-25 18:52:33	a9f7e1794dff628876054c61	f
274	23	haskell	point-mutations	2	pending	\N	2014-07-25 18:41:06	2014-07-25 18:41:06	b36b457c2b104e35b49d2c6e	f
275	23	go	hamming	1	pending	\N	2014-07-26 00:04:16	2014-07-26 00:04:16	6d373420f15c668b593f505c	f
276	23	ruby	etl	1	pending	\N	2014-07-25 20:32:26	2014-07-25 20:32:26	647ed3628cb0b4e2b6c56f15	f
277	23	elixir	meetup	2	pending	\N	2014-07-26 12:52:01	2014-07-26 12:52:01	7661aed296aabf9e1058abcb	f
278	23	ruby	circular-buffer	1	pending	\N	2014-07-26 15:14:58	2014-07-26 15:14:58	9a76cb83b64e8e3e46a3550e	f
279	23	coffeescript	anagram	1	pending	\N	2014-07-25 16:43:33	2014-07-25 16:43:33	90f8c9397af8be348dd6ab58	f
280	23	ruby	bob	8	pending	\N	2014-07-25 21:20:05	2014-07-25 21:20:05	09f9b575d3869d6cf865f971	f
281	23	go	anagram	1	pending	\N	2014-07-28 01:57:09	2014-07-28 01:57:09	1918d4e27589e59d596ecb11	f
282	23	python	bob	1	pending	\N	2014-07-26 00:30:14	2014-07-26 00:30:14	65d8d022f075604a85bdcbc7	f
283	23	perl5	pascals-triangle	1	pending	\N	2014-07-25 23:29:35	2014-07-25 23:29:35	ac4c60b8df23c13ec7239e90	f
284	23	go	difference-of-squares	1	pending	\N	2014-07-26 17:30:03	2014-07-26 17:30:03	ab43842b4a51b2d66d467d7c	f
285	23	clojure	grade-school	1	pending	\N	2014-07-26 01:40:27	2014-07-26 01:40:27	45763dd5d05385776b6ab506	f
286	23	perl5	leap	1	pending	\N	2014-07-28 07:41:13	2014-07-28 07:41:13	4e20eb3dfc71f7f0b0accef5	f
287	23	go	etl	3	pending	\N	2014-07-25 15:57:02	2014-07-25 15:57:02	858c74c90b03b8debb0dbbf3	f
288	23	javascript	bob	1	pending	\N	2014-07-26 22:05:00	2014-07-26 22:05:00	d7c067f6130b05896503de42	f
289	23	ruby	hamming	1	pending	\N	2014-07-27 19:46:26	2014-07-27 19:46:26	3ad1c27fd224c38878c5d2bc	f
290	23	clojure	roman-numerals	1	pending	\N	2014-07-26 19:06:06	2014-07-26 19:06:06	9445e0978731e8c0570ec4f2	f
291	23	ruby	leap	3	pending	\N	2014-07-25 21:52:19	2014-07-25 21:52:19	45d7cec9a82ac6159cff5fee	f
292	23	python	scrabble-score	1	pending	\N	2014-07-28 14:55:14	2014-07-28 14:55:14	be45bcfb9c483132931dae6f	f
293	23	scala	word-count	3	pending	\N	2014-07-25 18:22:03	2014-07-25 18:22:03	25f12e59b75fe262aaa13ef9	f
294	23	ruby	gigasecond	1	pending	\N	2014-07-27 14:30:21	2014-07-27 14:30:21	49c5bd3b27c254c49afa40ab	f
295	23	ruby	grade-school	1	pending	\N	2014-07-26 01:31:08	2014-07-26 01:31:08	473ba4ed4bc5c3feb2941a50	f
296	41	haskell	space-age	1	pending	\N	2014-05-09 16:15:46	2014-05-09 16:15:46	f49dafe98055bb8cc5bb6717	f
297	41	javascript	raindrops	2	pending	\N	2014-06-20 07:03:13	2014-06-20 07:03:13	2007c195cda737071becdcb8	f
298	41	ruby	hamming	1	pending	\N	2014-03-25 23:10:46	2014-03-25 23:10:46	f80e6945dc1005945e06097a	f
299	41	clojure	bob	1	pending	\N	2014-03-20 19:45:15	2014-03-20 19:45:15	af9d783f780fd2f0c555a80d	f
300	41	ruby	palindrome-products	2	pending	\N	2014-04-19 01:24:50	2014-04-19 01:24:50	47ffc28ecf969f8d7e6db431	f
301	41	go	clock	2	pending	\N	2014-04-19 21:47:22	2014-04-19 21:47:22	a73559dcbdf96da1a46c1ca4	f
304	26	ruby	raindrops	3	pending	\N	2014-06-03 16:07:43	2014-06-03 16:07:43	d5f87c352560173a531421d8	f
305	26	ruby	luhn	1	pending	\N	2014-06-17 19:31:42	2014-06-17 19:31:42	713288e81afd50696e9aae09	f
306	26	clojure	rna-transcription	1	pending	\N	2014-04-14 20:01:22	2014-04-14 20:01:22	ff11f7f43478dabccef4ae28	f
307	44	haskell	octal	3	pending	\N	2014-05-15 00:47:18	2014-05-15 00:47:18	7e335e3c2cbf14debd63beb6	f
308	44	ruby	crypto-square	1	pending	\N	2014-06-17 20:46:52	2014-06-17 20:46:52	884e66cafe320c140ca04990	f
309	44	elixir	word-count	1	pending	\N	2014-05-25 15:18:50	2014-05-25 15:18:50	8bb7b415b054f63109ed6ceb	f
310	44	ruby	bob	1	pending	\N	2014-05-31 11:49:00	2014-05-31 11:49:00	8939e78081ff082da0062723	f
311	44	elixir	grade-school	1	pending	\N	2014-04-11 22:32:09	2014-04-11 22:32:09	485068f6a7614de625158115	f
312	44	javascript	bob	2	pending	\N	2014-06-05 07:49:10	2014-06-05 07:49:10	04c77fe36dd011d5ffb8e546	f
313	44	python	anagram	1	pending	\N	2014-04-21 18:26:53	2014-04-21 18:26:53	d27cffe5e20d2b057c92d990	f
314	44	go	phone-number	1	pending	\N	2014-04-25 16:32:26	2014-04-25 16:32:26	6bde7e9074f2332d3da29fa7	f
315	44	ruby	simple-cipher	1	pending	\N	2014-05-03 18:22:41	2014-05-03 18:22:41	c79800ceeaf801a14badf95e	f
316	44	ruby	leap	2	pending	\N	2014-05-18 01:35:07	2014-05-18 01:35:07	754dcec205e9aa6c1d1bf401	f
317	44	clojure	rna-transcription	1	pending	\N	2014-04-16 13:33:59	2014-04-16 13:33:59	5ef015f0d860c98f738feb23	f
318	44	ruby	rna-transcription	1	pending	\N	2014-05-31 14:09:42	2014-05-31 14:09:42	7036a6210797c2cc6cda5fc0	f
319	44	ruby	nucleotide-count	5	pending	\N	2014-04-11 02:59:29	2014-04-11 02:59:29	ca3c4380e8c8206870932acd	f
320	44	haskell	anagram	1	pending	\N	2014-06-10 22:19:57	2014-06-10 22:19:57	2c3073c61f4dec7cacbf2651	f
321	44	ruby	hexadecimal	1	pending	\N	2014-04-14 15:46:31	2014-04-14 15:46:31	958bba4725fd9710197900dc	f
322	44	python	bob	1	pending	\N	2014-05-18 05:00:35	2014-05-18 05:00:35	668d187c00cbaa564c4b5d1e	f
323	44	python	rna-transcription	1	pending	\N	2014-05-03 18:59:52	2014-05-03 18:59:52	a37d38a034701a2a55112e39	f
324	44	ruby	hamming	10	pending	\N	2014-04-28 17:46:05	2014-04-28 17:46:05	a7af87e5fe36b0792eec8e5f	f
325	44	haskell	simple-cipher	1	pending	\N	2014-05-03 21:21:44	2014-05-03 21:21:44	ed67ebe0a9e1068bd061008b	f
326	44	ruby	raindrops	1	pending	\N	2014-06-14 13:36:02	2014-06-14 13:36:02	091b7b794c7990522f55a8b7	f
327	44	python	word-count	5	pending	\N	2014-04-19 14:10:14	2014-04-19 14:10:14	3024349fdaec2c9e97ccbb39	f
328	44	ruby	space-age	1	pending	\N	2014-05-06 09:51:08	2014-05-06 09:51:08	7bbfc323b74f8261c26367e5	f
329	44	ruby	triangle	2	pending	\N	2014-04-26 11:31:34	2014-04-26 11:31:34	9eaf842b2944faebd49afee3	f
330	44	haskell	bank-account	4	pending	\N	2014-04-27 04:17:11	2014-04-27 04:17:11	b65c05090ab53110fbb41c5d	f
331	44	perl5	triangle	1	pending	\N	2014-06-15 11:30:18	2014-06-15 11:30:18	c6cc5ee747fdc322c1581b3c	f
332	44	ruby	grade-school	1	pending	\N	2014-05-02 09:29:55	2014-05-02 09:29:55	397f0259c5d4838ae7e0896c	f
333	44	elixir	nucleotide-count	3	pending	\N	2014-04-26 05:22:02	2014-04-26 05:22:02	97395e9bc6234b99c40b8a12	f
334	44	haskell	bob	4	pending	\N	2014-05-03 15:05:27	2014-05-03 15:05:27	368e48f95032de9fb29cb93e	f
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 334, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, mastery, created_at, updated_at, onboarded_at) FROM stdin;
5	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg	-99150	xyx534	--- []\n	2014-01-12 09:04:41.870081	2014-01-12 09:04:41.870081	\N
6	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nicolai_larsen/128.jpg	-11361	ohg530	--- []\n	2014-07-21 12:45:15.873063	2014-07-21 12:45:15.873063	\N
7	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg	-89302	kaf741	--- []\n	2014-03-29 15:54:12.875603	2014-03-29 15:54:12.875603	\N
9	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg	-35797	mqu633	--- []\n	2014-06-13 19:44:20.883759	2014-06-13 19:44:20.883759	\N
12	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/unterdreht/128.jpg	-14472	kpa995	--- []\n	2014-07-20 05:31:58.890859	2014-07-20 05:31:58.890859	\N
13	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg	-9792	lco643	--- []\n	2014-07-28 02:37:09.892451	2014-07-28 02:37:09.892451	\N
15	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg	-19496	fbu146	--- []\n	2013-12-14 12:18:12.897221	2013-12-14 12:18:12.897221	\N
16	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg	-47996	caz333	--- []\n	2014-06-22 03:04:47.89964	2014-06-22 03:04:47.89964	\N
17	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg	-33316	kvg998	--- []\n	2014-01-01 22:10:52.902064	2014-01-01 22:10:52.902064	\N
18	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/therealmarvin/128.jpg	-12848	dsk996	--- []\n	2013-11-18 00:29:15.905975	2013-11-18 00:29:15.905975	\N
19	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg	-73381	hla901	--- []\n	2014-03-28 05:03:23.90894	2014-03-28 05:03:23.90894	\N
20	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/peterlandt/128.jpg	-11325	icv593	--- []\n	2014-02-20 02:25:16.911502	2014-02-20 02:25:16.911502	\N
22	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/uxalex/128.jpg	-84454	ewk939	--- []\n	2014-01-22 14:57:55.916505	2014-01-22 14:57:55.916505	\N
23	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg	-63384	dut437	--- []\n	2014-07-25 14:33:54.918963	2014-07-25 14:33:54.918963	\N
24	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/gt/128.jpg	-15022	dao344	--- []\n	2014-05-30 17:01:11.921401	2014-05-30 17:01:11.921401	\N
25	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg	-5616	urw474	--- []\n	2014-04-03 04:02:54.923825	2014-04-03 04:02:54.923825	\N
26	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg	-51521	ssk271	--- []\n	2014-04-12 11:50:40.926213	2014-04-12 11:50:40.926213	\N
29	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg	-80381	miv344	--- []\n	2013-12-05 06:42:15.933465	2013-12-05 06:42:15.933465	\N
31	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/shalt0ni/128.jpg	-67436	ldb432	--- []\n	2014-01-14 13:13:00.938334	2014-01-14 13:13:00.938334	\N
33	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg	-51533	rgj689	--- []\n	2014-07-06 09:40:24.943073	2014-07-06 09:40:24.943073	\N
34	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg	-55428	woa834	--- []\n	2013-11-24 08:13:23.945471	2013-11-24 08:13:23.945471	\N
35	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/devankoshal/128.jpg	-8642	qca136	--- []\n	2014-01-23 11:26:22.948097	2014-01-23 11:26:22.948097	\N
36	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg	-63155	oxl595	--- []\n	2014-02-27 09:02:56.950536	2014-02-27 09:02:56.950536	\N
38	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg	-58347	tdf397	--- []\n	2014-04-13 04:24:30.956184	2014-04-13 04:24:30.956184	\N
40	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg	-81953	slb904	--- []\n	2014-02-03 21:42:09.960376	2014-02-03 21:42:09.960376	\N
41	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg	-14944	chz243	--- []\n	2014-03-15 10:51:40.962945	2014-03-15 10:51:40.962945	\N
42	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/karsh/128.jpg	-42383	wtf431	--- []\n	2014-06-03 17:19:34.965948	2014-06-03 17:19:34.965948	\N
44	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/kaelifa/128.jpg	-25492	jeu946	--- []\n	2014-04-07 16:03:38.97205	2014-04-07 16:03:38.97205	\N
46	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/nacho/128.jpg	-90444	mka914	--- []\n	2014-01-04 21:41:42.977595	2014-01-04 21:41:42.977595	\N
45	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg	-59160	air104	--- []\n	2013-11-22 14:48:55.975033	2013-11-22 14:48:55.975033	2014-02-24 20:43:37
32	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg	-3026	dan588	--- []\n	2013-11-09 23:21:40.940684	2013-11-09 23:21:40.940684	2014-02-23 17:07:33
43	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg	-74139	ses443	--- []\n	2014-07-24 08:10:08.969039	2014-07-24 08:10:08.969039	2014-03-15 17:05:30
11	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg	-57164	ram332	--- []\n	2014-07-12 02:09:16.888412	2014-07-12 02:09:16.888412	2014-03-07 03:45:44
37	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/brandclay/128.jpg	-5678	vae128	--- []\n	2014-06-17 08:39:27.953628	2014-06-17 08:39:27.953628	2014-03-16 11:59:28
8	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg	-60988	iee979	--- []\n	2013-11-09 22:51:20.877178	2013-11-09 22:51:20.877178	2014-03-19 13:06:59
30	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg	-84690	mgy965	--- []\n	2014-02-28 18:58:26.935914	2014-02-28 18:58:26.935914	2014-04-03 21:04:08
39	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/amboy00/128.jpg	-33574	xof164	--- []\n	2014-04-15 01:37:03.957769	2014-04-15 01:37:03.957769	2014-03-14 14:32:09
14	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg	-63037	jhv421	--- []\n	2013-12-19 11:04:05.894864	2013-12-19 11:04:05.894864	2014-03-05 08:11:24
21	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg	-34486	pwj464	--- []\n	2014-03-01 13:52:34.914048	2014-03-01 13:52:34.914048	2014-02-11 03:57:14
10	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg	-49052	qnn490	--- []\n	2014-06-14 21:58:47.885567	2014-06-14 21:58:47.885567	2014-03-30 14:27:40
27	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg	-80460	jag552	--- []\n	2014-01-03 09:43:36.928647	2014-01-03 09:43:36.928647	2014-03-20 23:02:56
28	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg	-86271	csd628	--- []\n	2014-07-04 00:27:16.93108	2014-07-04 00:27:16.93108	2014-03-02 13:51:43
2	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg	-12156	cfk691	---\n- ruby\n- haskell\n	2014-01-12 11:45:25.864305	2014-01-12 11:45:25.864305	2014-02-14 15:23:35
3	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg	-30861	slc342	---\n- javascript\n- erlang\n- elixir\n	2014-04-08 09:06:47.866566	2014-04-08 09:06:47.866566	2014-03-01 00:28:23
4	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg	-60681	eoo601	---\n- python\n	2013-12-31 20:30:22.868443	2013-12-31 20:30:22.868443	2014-04-04 13:54:30
48	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg	-10775	zkt867	--- []\n	2014-06-22 23:20:06.981701	2014-06-22 23:20:06.981701	\N
1	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg	-16318	toy170	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	2014-01-20 00:31:05.85095	2014-01-20 00:31:05.85095	2014-03-13 08:55:30
47	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg	-70228	fvt975	--- []\n	2014-05-15 17:45:45.979178	2014-05-15 17:45:45.979178	2014-03-13 11:37:37
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 48, true);


--
-- PostgreSQL database dump complete
--

